; ModuleID = 'samples/814.bc'
source_filename = "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src/Cython/Plex/DFA.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr }
%struct.PyModuleDef_Base = type { %struct._object, ptr, i64, ptr }
%struct._object = type { i64, ptr }
%struct.PyMethodDef = type { ptr, ptr, i32, ptr }
%struct.PyModuleDef_Slot = type { i32, ptr }
%struct.__pyx_mstate = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct._typeobject = type { %struct.PyVarObject, ptr, i64, i64, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr }
%struct.PyVarObject = type { %struct._object, i64 }
%struct.PyMemberDef = type { ptr, i32, i64, i32, ptr }
%struct.PyGetSetDef = type { ptr, ptr, ptr, ptr, ptr }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.__Pyx_CachedCFunction = type { ptr, ptr, ptr, ptr, i32 }
%struct.__pyx_vtabstruct_6Cython_4Plex_3DFA_StateMap = type { ptr, ptr, ptr }
%struct.__Pyx_CodeObjectCache = type { i32, i32, ptr }
%struct._ts = type { ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, i64, i64, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i64, i64, %struct.PyTraceInfo, ptr, ptr, ptr, %struct._err_stackitem, %struct._PyCFrame }
%struct.PyTraceInfo = type { ptr, %struct._line_offsets }
%struct._line_offsets = type { i32, i32, i32, %struct._opaque }
%struct._opaque = type { i32, ptr, ptr }
%struct._err_stackitem = type { ptr, ptr }
%struct._PyCFrame = type { i8, ptr, ptr }
%struct.PyListObject = type { %struct.PyVarObject, ptr, i64 }
%struct.__pyx_CyFunctionObject = type { %struct.PyCMethodObject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i64, i32, ptr, ptr, ptr, ptr, ptr }
%struct.PyCMethodObject = type { %struct.PyCFunctionObject, ptr }
%struct.PyCFunctionObject = type { %struct._object, ptr, ptr, ptr, ptr, ptr }
%struct._frame = type { %struct._object, ptr, ptr, ptr, i32, i8, i8, i8, [1 x ptr] }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x ptr] }
%struct.PyDictObject = type { %struct._object, i64, i64, ptr, ptr }
%struct.__Pyx_StringTabEntry = type { ptr, ptr, i64, ptr, i8, i8, i8 }
%union.anon = type { ptr }
%struct.__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa = type { i32, ptr }
%struct.__pyx_obj_6Cython_4Plex_8Machines_Machine = type { %struct._object, ptr, ptr, ptr, i64 }
%struct.PyMethodObject = type { %struct._object, ptr, ptr, ptr, ptr }
%struct.__pyx_obj_6Cython_4Plex_8Machines_FastMachine = type { %struct._object, ptr, ptr, ptr, i64 }
%struct.__pyx_obj_6Cython_4Plex_11Transitions_TransitionMap = type { %struct._object, ptr, ptr, ptr }
%struct.__pyx_vtabstruct_6Cython_4Plex_11Transitions_TransitionMap = type { ptr, ptr, ptr, ptr, ptr }
%struct.__pyx_obj_6Cython_4Plex_8Machines_Node = type { %struct._object, ptr, ptr, ptr, i64, i32 }
%struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap = type { %struct._object, ptr, ptr, ptr, ptr }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, ptr }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, ptr, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon.0 }
%union.anon.0 = type { ptr }
%struct.PyNumberMethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.__Pyx_CodeObjectCacheEntry = type { ptr, i32 }

@__pyx_module_is_main_Cython__Plex__DFA = global i32 0, align 4, !dbg !0
@__pyx_moduledef = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, ptr null }, ptr null, i64 0, ptr null }, ptr @.str, ptr @__pyx_k_Python_Lexical_Analyser_Convert, i64 0, ptr @__pyx_methods, ptr @__pyx_moduledef_slots, ptr null, ptr null, ptr null }, align 8, !dbg !680
@.str = private unnamed_addr constant [4 x i8] c"DFA\00", align 1, !dbg !675
@__pyx_k_Python_Lexical_Analyser_Convert = internal constant [49 x i8] c"\0APython Lexical Analyser\0A\0AConverting NFA to DFA\0A\00", align 16, !dbg !710
@__pyx_methods = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16, !dbg !715
@__pyx_moduledef_slots = internal global [3 x %struct.PyModuleDef_Slot] [%struct.PyModuleDef_Slot { i32 1, ptr @__pyx_pymod_create }, %struct.PyModuleDef_Slot { i32 2, ptr @__pyx_pymod_exec_DFA }, %struct.PyModuleDef_Slot zeroinitializer], align 16, !dbg !718
@__pyx_m = internal global ptr null, align 8, !dbg !773
@.str.1 = private unnamed_addr constant [5 x i8] c"name\00", align 1, !dbg !723
@.str.2 = private unnamed_addr constant [7 x i8] c"loader\00", align 1, !dbg !728
@.str.3 = private unnamed_addr constant [11 x i8] c"__loader__\00", align 1, !dbg !733
@.str.4 = private unnamed_addr constant [7 x i8] c"origin\00", align 1, !dbg !738
@.str.5 = private unnamed_addr constant [9 x i8] c"__file__\00", align 1, !dbg !740
@.str.6 = private unnamed_addr constant [7 x i8] c"parent\00", align 1, !dbg !745
@.str.7 = private unnamed_addr constant [12 x i8] c"__package__\00", align 1, !dbg !747
@.str.8 = private unnamed_addr constant [27 x i8] c"submodule_search_locations\00", align 1, !dbg !752
@.str.9 = private unnamed_addr constant [9 x i8] c"__path__\00", align 1, !dbg !757
@__Pyx_check_single_interpreter.main_interpreter_id = internal global i64 -1, align 8, !dbg !759
@PyExc_ImportError = external global ptr, align 8
@.str.10 = private unnamed_addr constant [95 x i8] c"Interpreter change detected - this module can only be loaded into one interpreter per process.\00", align 1, !dbg !768
@_Py_NoneStruct = external global %struct._object, align 8
@PyExc_AttributeError = external global ptr, align 8
@PyExc_RuntimeError = external global ptr, align 8
@.str.11 = private unnamed_addr constant [76 x i8] c"Module 'DFA' has already been imported. Re-initialisation is not supported.\00", align 1, !dbg !775
@__pyx_mstate_global = internal global ptr @__pyx_mstate_global_static, align 8, !dbg !804
@__pyx_f = internal global [5 x ptr] [ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22], align 16, !dbg !943
@.str.12 = private unnamed_addr constant [9 x i8] c"builtins\00", align 1, !dbg !780
@.str.13 = private unnamed_addr constant [15 x i8] c"cython_runtime\00", align 1, !dbg !782
@.str.14 = private unnamed_addr constant [13 x i8] c"__builtins__\00", align 1, !dbg !787
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !792
@.str.16 = private unnamed_addr constant [16 x i8] c"Cython.Plex.DFA\00", align 1, !dbg !794
@__pyx_mdef_6Cython_4Plex_3DFA_1nfa_to_dfa = internal global %struct.PyMethodDef { ptr @.str.67, ptr @__pyx_pw_6Cython_4Plex_3DFA_1nfa_to_dfa, i32 130, ptr @__pyx_doc_6Cython_4Plex_3DFA_nfa_to_dfa }, align 8, !dbg !1636
@__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_3new_to_old = internal global %struct.PyMethodDef { ptr @.str.101, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_3new_to_old, i32 8, ptr @__pyx_doc_6Cython_4Plex_3DFA_8StateMap_2new_to_old }, align 8, !dbg !1650
@__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_5dump = internal global %struct.PyMethodDef { ptr @.str.102, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_5dump, i32 8, ptr null }, align 8, !dbg !1652
@__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_7__reduce_cython__ = internal global %struct.PyMethodDef { ptr @.str.103, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_7__reduce_cython__, i32 4, ptr null }, align 8, !dbg !1654
@__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_9__setstate_cython__ = internal global %struct.PyMethodDef { ptr @.str.104, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_9__setstate_cython__, i32 8, ptr null }, align 8, !dbg !1656
@__pyx_mdef_6Cython_4Plex_3DFA_3__pyx_unpickle_StateMap = internal global %struct.PyMethodDef { ptr @.str.157, ptr @__pyx_pw_6Cython_4Plex_3DFA_3__pyx_unpickle_StateMap, i32 130, ptr null }, align 8, !dbg !1660
@.str.17 = private unnamed_addr constant [21 x i8] c"init Cython.Plex.DFA\00", align 1, !dbg !799
@__pyx_mstate_global_static = internal global %struct.__pyx_mstate zeroinitializer, align 8, !dbg !919
@.str.18 = private unnamed_addr constant [19 x i8] c"Cython/Plex/DFA.py\00", align 1, !dbg !921
@.str.19 = private unnamed_addr constant [15 x i8] c"<stringsource>\00", align 1, !dbg !926
@.str.20 = private unnamed_addr constant [24 x i8] c"Cython/Plex/Actions.pxd\00", align 1, !dbg !928
@.str.21 = private unnamed_addr constant [28 x i8] c"Cython/Plex/Transitions.pxd\00", align 1, !dbg !933
@.str.22 = private unnamed_addr constant [25 x i8] c"Cython/Plex/Machines.pxd\00", align 1, !dbg !938
@.str.23 = private unnamed_addr constant [78 x i8] c"compile time Python version %d.%d of module '%.100s' %s runtime version %d.%d\00", align 1, !dbg !946
@.str.24 = private unnamed_addr constant [15 x i8] c"was newer than\00", align 1, !dbg !951
@.str.25 = private unnamed_addr constant [15 x i8] c"does not match\00", align 1, !dbg !953
@Py_Version = external constant i64, align 8
@__pyx_CyFunctionType_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.29, i64 192, i64 0, ptr @__Pyx_CyFunction_dealloc, i64 48, ptr null, ptr null, ptr null, ptr @__Pyx_CyFunction_repr, ptr null, ptr null, ptr null, ptr null, ptr @__Pyx_CyFunction_CallAsMethod, ptr null, ptr null, ptr null, ptr null, i64 150528, ptr null, ptr @__Pyx_CyFunction_traverse, ptr @__Pyx_CyFunction_clear, ptr null, i64 40, ptr null, ptr null, ptr @__pyx_CyFunction_methods, ptr @__pyx_CyFunction_members, ptr @__pyx_CyFunction_getsets, ptr null, ptr null, ptr @__Pyx_PyMethod_New, ptr null, i64 64, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8, !dbg !975
@.str.26 = private unnamed_addr constant [14 x i8] c"_cython_3_0_4\00", align 1, !dbg !955
@PyExc_TypeError = external global ptr, align 8
@.str.27 = private unnamed_addr constant [47 x i8] c"Shared Cython type %.200s is not a type object\00", align 1, !dbg !960
@.str.28 = private unnamed_addr constant [62 x i8] c"Shared Cython type %.200s has the wrong size, try recompiling\00", align 1, !dbg !965
@.str.29 = private unnamed_addr constant [40 x i8] c"_cython_3_0_4.cython_function_or_method\00", align 1, !dbg !970
@__pyx_CyFunction_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.37, ptr @__Pyx_CyFunction_reduce, i32 1, ptr null }, %struct.PyMethodDef zeroinitializer], align 16, !dbg !1008
@__pyx_CyFunction_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { ptr @.str.38, i32 6, i64 32, i32 0, ptr null }, %struct.PyMemberDef zeroinitializer], align 16, !dbg !1015
@__pyx_CyFunction_getsets = internal global [19 x %struct.PyGetSetDef] [%struct.PyGetSetDef { ptr @.str.39, ptr @__Pyx_CyFunction_get_doc, ptr @__Pyx_CyFunction_set_doc, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.40, ptr @__Pyx_CyFunction_get_doc, ptr @__Pyx_CyFunction_set_doc, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.41, ptr @__Pyx_CyFunction_get_name, ptr @__Pyx_CyFunction_set_name, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.42, ptr @__Pyx_CyFunction_get_name, ptr @__Pyx_CyFunction_set_name, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.43, ptr @__Pyx_CyFunction_get_qualname, ptr @__Pyx_CyFunction_set_qualname, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.44, ptr @__Pyx_CyFunction_get_dict, ptr @__Pyx_CyFunction_set_dict, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.45, ptr @__Pyx_CyFunction_get_dict, ptr @__Pyx_CyFunction_set_dict, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.46, ptr @__Pyx_CyFunction_get_globals, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.47, ptr @__Pyx_CyFunction_get_globals, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.48, ptr @__Pyx_CyFunction_get_closure, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.49, ptr @__Pyx_CyFunction_get_closure, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.50, ptr @__Pyx_CyFunction_get_code, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.51, ptr @__Pyx_CyFunction_get_code, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.52, ptr @__Pyx_CyFunction_get_defaults, ptr @__Pyx_CyFunction_set_defaults, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.53, ptr @__Pyx_CyFunction_get_defaults, ptr @__Pyx_CyFunction_set_defaults, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.54, ptr @__Pyx_CyFunction_get_kwdefaults, ptr @__Pyx_CyFunction_set_kwdefaults, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.55, ptr @__Pyx_CyFunction_get_annotations, ptr @__Pyx_CyFunction_set_annotations, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.56, ptr @__Pyx_CyFunction_get_is_coroutine, ptr null, ptr null, ptr null }, %struct.PyGetSetDef zeroinitializer], align 16, !dbg !1060
@.str.30 = private unnamed_addr constant [22 x i8] c"<cyfunction %U at %p>\00", align 1, !dbg !977
@.str.31 = private unnamed_addr constant [42 x i8] c"unbound method %.200S() needs an argument\00", align 1, !dbg !982
@.str.32 = private unnamed_addr constant [25 x i8] c"keywords must be strings\00", align 1, !dbg !987
@.str.33 = private unnamed_addr constant [40 x i8] c"%.200s() takes no arguments (%zd given)\00", align 1, !dbg !989
@.str.34 = private unnamed_addr constant [48 x i8] c"%.200s() takes exactly one argument (%zd given)\00", align 1, !dbg !991
@PyExc_SystemError = external global ptr, align 8
@.str.35 = private unnamed_addr constant [30 x i8] c"Bad call flags for CyFunction\00", align 1, !dbg !996
@.str.36 = private unnamed_addr constant [36 x i8] c"%.200s() takes no keyword arguments\00", align 1, !dbg !1001
@.str.37 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1, !dbg !1006
@.str.38 = private unnamed_addr constant [11 x i8] c"__module__\00", align 1, !dbg !1013
@.str.39 = private unnamed_addr constant [9 x i8] c"func_doc\00", align 1, !dbg !1018
@.str.40 = private unnamed_addr constant [8 x i8] c"__doc__\00", align 1, !dbg !1020
@.str.41 = private unnamed_addr constant [10 x i8] c"func_name\00", align 1, !dbg !1025
@.str.42 = private unnamed_addr constant [9 x i8] c"__name__\00", align 1, !dbg !1030
@.str.43 = private unnamed_addr constant [13 x i8] c"__qualname__\00", align 1, !dbg !1032
@.str.44 = private unnamed_addr constant [10 x i8] c"func_dict\00", align 1, !dbg !1034
@.str.45 = private unnamed_addr constant [9 x i8] c"__dict__\00", align 1, !dbg !1036
@.str.46 = private unnamed_addr constant [13 x i8] c"func_globals\00", align 1, !dbg !1038
@.str.47 = private unnamed_addr constant [12 x i8] c"__globals__\00", align 1, !dbg !1040
@.str.48 = private unnamed_addr constant [13 x i8] c"func_closure\00", align 1, !dbg !1042
@.str.49 = private unnamed_addr constant [12 x i8] c"__closure__\00", align 1, !dbg !1044
@.str.50 = private unnamed_addr constant [10 x i8] c"func_code\00", align 1, !dbg !1046
@.str.51 = private unnamed_addr constant [9 x i8] c"__code__\00", align 1, !dbg !1048
@.str.52 = private unnamed_addr constant [14 x i8] c"func_defaults\00", align 1, !dbg !1050
@.str.53 = private unnamed_addr constant [13 x i8] c"__defaults__\00", align 1, !dbg !1052
@.str.54 = private unnamed_addr constant [15 x i8] c"__kwdefaults__\00", align 1, !dbg !1054
@.str.55 = private unnamed_addr constant [16 x i8] c"__annotations__\00", align 1, !dbg !1056
@.str.56 = private unnamed_addr constant [14 x i8] c"_is_coroutine\00", align 1, !dbg !1058
@.str.57 = private unnamed_addr constant [40 x i8] c"__name__ must be set to a string object\00", align 1, !dbg !1063
@.str.58 = private unnamed_addr constant [44 x i8] c"__qualname__ must be set to a string object\00", align 1, !dbg !1065
@.str.59 = private unnamed_addr constant [41 x i8] c"function's dictionary may not be deleted\00", align 1, !dbg !1070
@.str.60 = private unnamed_addr constant [44 x i8] c"setting function's dictionary to a non-dict\00", align 1, !dbg !1075
@.str.61 = private unnamed_addr constant [43 x i8] c"__defaults__ must be set to a tuple object\00", align 1, !dbg !1077
@PyExc_RuntimeWarning = external global ptr, align 8
@.str.62 = private unnamed_addr constant [95 x i8] c"changes to cyfunction.__defaults__ will not currently affect the values used in function calls\00", align 1, !dbg !1082
@.str.63 = private unnamed_addr constant [44 x i8] c"__kwdefaults__ must be set to a dict object\00", align 1, !dbg !1084
@.str.64 = private unnamed_addr constant [97 x i8] c"changes to cyfunction.__kwdefaults__ will not currently affect the values used in function calls\00", align 1, !dbg !1086
@.str.65 = private unnamed_addr constant [45 x i8] c"__annotations__ must be set to a dict object\00", align 1, !dbg !1091
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@PyDict_Type = external global %struct._typeobject, align 8
@__pyx_umethod_PyDict_Type_get = internal global %struct.__Pyx_CachedCFunction zeroinitializer, align 8, !dbg !1096
@__pyx_filename = internal global ptr null, align 8, !dbg !1282
@__pyx_lineno = internal global i32 0, align 4, !dbg !1284
@__pyx_clineno = internal global i32 0, align 4, !dbg !1286
@__pyx_k_ = internal constant [2 x i8] c".\00", align 1, !dbg !1106
@__pyx_k_Cython_Plex_DFA = internal constant [16 x i8] c"Cython.Plex.DFA\00", align 16, !dbg !1109
@__pyx_k_Cython_Plex_DFA_py = internal constant [19 x i8] c"Cython/Plex/DFA.py\00", align 16, !dbg !1112
@__pyx_k_Incompatible_checksums_0x_x_vs_0 = internal constant [117 x i8] c"Incompatible checksums (0x%x vs (0xe17d138, 0xa9de68f, 0xeed77e9) = (new_machine, new_to_old_dict, old_to_new_dict))\00", align 16, !dbg !1115
@__pyx_k_LOWEST_PRIORITY = internal constant [16 x i8] c"LOWEST_PRIORITY\00", align 16, !dbg !1120
@__pyx_k_Machines = internal constant [9 x i8] c"Machines\00", align 1, !dbg !1122
@__pyx_k_PickleError = internal constant [12 x i8] c"PickleError\00", align 1, !dbg !1125
@__pyx_k_State = internal constant [10 x i8] c"   State \00", align 1, !dbg !1128
@__pyx_k_StateMap = internal constant [9 x i8] c"StateMap\00", align 1, !dbg !1131
@__pyx_k_StateMap___reduce_cython = internal constant [27 x i8] c"StateMap.__reduce_cython__\00", align 16, !dbg !1133
@__pyx_k_StateMap___setstate_cython = internal constant [29 x i8] c"StateMap.__setstate_cython__\00", align 16, !dbg !1136
@__pyx_k_StateMap_dump = internal constant [14 x i8] c"StateMap.dump\00", align 1, !dbg !1141
@__pyx_k_StateMap_new_to_old = internal constant [20 x i8] c"StateMap.new_to_old\00", align 16, !dbg !1144
@__pyx_k_State_Mapping = internal constant [28 x i8] c"\0A===== State Mapping =====\0A\00", align 16, !dbg !1149
@__pyx_k_TransitionMap = internal constant [14 x i8] c"TransitionMap\00", align 1, !dbg !1152
@__pyx_k_Transitions = internal constant [12 x i8] c"Transitions\00", align 1, !dbg !1154
@__pyx_k__19 = internal constant [2 x i8] c"?\00", align 1, !dbg !1156
@__pyx_k__2 = internal constant [6 x i8] c" <-- \00", align 1, !dbg !1158
@__pyx_k__3 = internal constant [2 x i8] c"\0A\00", align 1, !dbg !1163
@__pyx_k__5 = internal constant [1 x i8] zeroinitializer, align 1, !dbg !1165
@__pyx_k_add_transitions = internal constant [16 x i8] c"add_transitions\00", align 16, !dbg !1168
@__pyx_k_asyncio_coroutines = internal constant [19 x i8] c"asyncio.coroutines\00", align 16, !dbg !1170
@__pyx_k_cline_in_traceback = internal constant [19 x i8] c"cline_in_traceback\00", align 16, !dbg !1172
@__pyx_k_debug = internal constant [6 x i8] c"debug\00", align 1, !dbg !1174
@__pyx_k_dict = internal constant [9 x i8] c"__dict__\00", align 1, !dbg !1176
@__pyx_k_dict_2 = internal constant [6 x i8] c"_dict\00", align 1, !dbg !1178
@__pyx_k_disable = internal constant [8 x i8] c"disable\00", align 1, !dbg !1180
@__pyx_k_dump = internal constant [5 x i8] c"dump\00", align 1, !dbg !1183
@__pyx_k_enable = internal constant [7 x i8] c"enable\00", align 1, !dbg !1186
@__pyx_k_file = internal constant [5 x i8] c"file\00", align 1, !dbg !1189
@__pyx_k_gc = internal constant [3 x i8] c"gc\00", align 1, !dbg !1191
@__pyx_k_get = internal constant [4 x i8] c"get\00", align 1, !dbg !1194
@__pyx_k_get_epsilon = internal constant [12 x i8] c"get_epsilon\00", align 1, !dbg !1197
@__pyx_k_getstate = internal constant [13 x i8] c"__getstate__\00", align 1, !dbg !1199
@__pyx_k_id = internal constant [3 x i8] c"id\00", align 1, !dbg !1202
@__pyx_k_import = internal constant [11 x i8] c"__import__\00", align 1, !dbg !1204
@__pyx_k_is_coroutine = internal constant [14 x i8] c"_is_coroutine\00", align 1, !dbg !1207
@__pyx_k_isenabled = internal constant [10 x i8] c"isenabled\00", align 1, !dbg !1209
@__pyx_k_items = internal constant [6 x i8] c"items\00", align 1, !dbg !1211
@__pyx_k_main = internal constant [9 x i8] c"__main__\00", align 1, !dbg !1213
@__pyx_k_make_initial_state = internal constant [19 x i8] c"make_initial_state\00", align 16, !dbg !1215
@__pyx_k_name = internal constant [9 x i8] c"__name__\00", align 1, !dbg !1217
@__pyx_k_new = internal constant [8 x i8] c"__new__\00", align 1, !dbg !1219
@__pyx_k_new_machine = internal constant [12 x i8] c"new_machine\00", align 1, !dbg !1221
@__pyx_k_new_state = internal constant [10 x i8] c"new_state\00", align 1, !dbg !1223
@__pyx_k_new_to_old = internal constant [11 x i8] c"new_to_old\00", align 1, !dbg !1225
@__pyx_k_nfa_to_dfa = internal constant [11 x i8] c"nfa_to_dfa\00", align 1, !dbg !1227
@__pyx_k_number = internal constant [7 x i8] c"number\00", align 1, !dbg !1229
@__pyx_k_old_machine = internal constant [12 x i8] c"old_machine\00", align 1, !dbg !1231
@__pyx_k_old_state_set = internal constant [14 x i8] c"old_state_set\00", align 1, !dbg !1233
@__pyx_k_pickle = internal constant [7 x i8] c"pickle\00", align 1, !dbg !1235
@__pyx_k_pyx_PickleError = internal constant [18 x i8] c"__pyx_PickleError\00", align 16, !dbg !1237
@__pyx_k_pyx_checksum = internal constant [15 x i8] c"__pyx_checksum\00", align 1, !dbg !1242
@__pyx_k_pyx_result = internal constant [13 x i8] c"__pyx_result\00", align 1, !dbg !1245
@__pyx_k_pyx_state = internal constant [12 x i8] c"__pyx_state\00", align 1, !dbg !1247
@__pyx_k_pyx_type = internal constant [11 x i8] c"__pyx_type\00", align 1, !dbg !1249
@__pyx_k_pyx_unpickle_StateMap = internal constant [24 x i8] c"__pyx_unpickle_StateMap\00", align 16, !dbg !1251
@__pyx_k_pyx_vtable = internal constant [15 x i8] c"__pyx_vtable__\00", align 1, !dbg !1254
@__pyx_k_reduce = internal constant [11 x i8] c"__reduce__\00", align 1, !dbg !1256
@__pyx_k_reduce_cython = internal constant [18 x i8] c"__reduce_cython__\00", align 16, !dbg !1258
@__pyx_k_reduce_ex = internal constant [14 x i8] c"__reduce_ex__\00", align 1, !dbg !1260
@__pyx_k_self = internal constant [5 x i8] c"self\00", align 1, !dbg !1262
@__pyx_k_setstate = internal constant [13 x i8] c"__setstate__\00", align 1, !dbg !1264
@__pyx_k_setstate_cython = internal constant [20 x i8] c"__setstate_cython__\00", align 16, !dbg !1266
@__pyx_k_state = internal constant [6 x i8] c"state\00", align 1, !dbg !1268
@__pyx_k_state_set_str = internal constant [14 x i8] c"state_set_str\00", align 1, !dbg !1270
@__pyx_k_stringsource = internal constant [15 x i8] c"<stringsource>\00", align 1, !dbg !1272
@__pyx_k_transitions = internal constant [12 x i8] c"transitions\00", align 1, !dbg !1274
@__pyx_k_update = internal constant [7 x i8] c"update\00", align 1, !dbg !1276
@__pyx_k_use_setstate = internal constant [13 x i8] c"use_setstate\00", align 1, !dbg !1278
@__pyx_k_write = internal constant [6 x i8] c"write\00", align 1, !dbg !1280
@__pyx_builtin_id = internal global ptr null, align 8, !dbg !1290
@PyExc_NameError = external global ptr, align 8
@.str.66 = private unnamed_addr constant [25 x i8] c"name '%U' is not defined\00", align 1, !dbg !1288
@PyBaseObject_Type = external global %struct._typeobject, align 8
@.str.67 = private unnamed_addr constant [11 x i8] c"nfa_to_dfa\00", align 1, !dbg !1292
@.str.68 = private unnamed_addr constant [162 x i8] c"PyObject *(struct __pyx_obj_6Cython_4Plex_8Machines_Machine *, int __pyx_skip_dispatch, struct __pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa *__pyx_optional_args)\00", align 1, !dbg !1294
@.str.69 = private unnamed_addr constant [20 x i8] c"set_epsilon_closure\00", align 1, !dbg !1299
@.str.70 = private unnamed_addr constant [23 x i8] c"PyObject *(PyObject *)\00", align 1, !dbg !1302
@.str.71 = private unnamed_addr constant [16 x i8] c"epsilon_closure\00", align 1, !dbg !1307
@.str.72 = private unnamed_addr constant [60 x i8] c"PyObject *(struct __pyx_obj_6Cython_4Plex_8Machines_Node *)\00", align 1, !dbg !1309
@.str.73 = private unnamed_addr constant [23 x i8] c"add_to_epsilon_closure\00", align 1, !dbg !1314
@.str.74 = private unnamed_addr constant [72 x i8] c"PyObject *(PyObject *, struct __pyx_obj_6Cython_4Plex_8Machines_Node *)\00", align 1, !dbg !1316
@.str.75 = private unnamed_addr constant [13 x i8] c"__pyx_capi__\00", align 1, !dbg !1321
@.str.76 = private unnamed_addr constant [43 x i8] c"'NoneType' object has no attribute '%.30s'\00", align 1, !dbg !1323
@.str.77 = private unnamed_addr constant [6 x i8] c"items\00", align 1, !dbg !1325
@PyMethod_Type = external global %struct._typeobject, align 8
@.str.78 = private unnamed_addr constant [34 x i8] c"'NoneType' object is not iterable\00", align 1, !dbg !1328
@PyList_Type = external global %struct._typeobject, align 8
@PyTuple_Type = external global %struct._typeobject, align 8
@PyExc_StopIteration = external global ptr, align 8
@.str.79 = private unnamed_addr constant [5 x i8] c"dict\00", align 1, !dbg !1333
@.str.80 = private unnamed_addr constant [27 x i8] c"Cython.Plex.DFA.nfa_to_dfa\00", align 1, !dbg !1335
@.str.81 = private unnamed_addr constant [38 x i8] c"'%.200s' object has no attribute '%U'\00", align 1, !dbg !1337
@.str.82 = private unnamed_addr constant [41 x i8] c"dictionary changed size during iteration\00", align 1, !dbg !1342
@PyExc_ValueError = external global ptr, align 8
@.str.83 = private unnamed_addr constant [39 x i8] c"need more than %zd value%.1s to unpack\00", align 1, !dbg !1344
@.str.84 = private unnamed_addr constant [2 x i8] c"s\00", align 1, !dbg !1349
@.str.85 = private unnamed_addr constant [41 x i8] c"too many values to unpack (expected %zd)\00", align 1, !dbg !1352
@.str.86 = private unnamed_addr constant [20 x i8] c"Missing type object\00", align 1, !dbg !1354
@.str.87 = private unnamed_addr constant [32 x i8] c"Cannot convert %.200s to %.200s\00", align 1, !dbg !1356
@.str.88 = private unnamed_addr constant [4 x i8] c"get\00", align 1, !dbg !1361
@.str.89 = private unnamed_addr constant [39 x i8] c"'NoneType' object is not subscriptable\00", align 1, !dbg !1363
@.str.90 = private unnamed_addr constant [36 x i8] c"Cython.Plex.DFA.StateMap.old_to_new\00", align 1, !dbg !1365
@.str.91 = private unnamed_addr constant [34 x i8] c"Cython.Plex.DFA.StateMap.make_key\00", align 1, !dbg !1367
@__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_version = internal global i64 0, align 8, !dbg !1369
@__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !1402
@.str.92 = private unnamed_addr constant [49 x i8] c"Cython.Plex.DFA.StateMap.highest_priority_action\00", align 1, !dbg !1404
@PyCFunction_Type = external global %struct._typeobject, align 8
@.str.93 = private unnamed_addr constant [31 x i8] c" while calling a Python object\00", align 1, !dbg !1407
@.str.94 = private unnamed_addr constant [43 x i8] c"NULL result without error in PyObject_Call\00", align 1, !dbg !1412
@.str.95 = private unnamed_addr constant [24 x i8] c"Expected %s, got %.200s\00", align 1, !dbg !1414
@.str.96 = private unnamed_addr constant [36 x i8] c"Cython.Plex.DFA.set_epsilon_closure\00", align 1, !dbg !1416
@.str.97 = private unnamed_addr constant [32 x i8] c"Cython.Plex.DFA.epsilon_closure\00", align 1, !dbg !1418
@.str.98 = private unnamed_addr constant [39 x i8] c"Cython.Plex.DFA.add_to_epsilon_closure\00", align 1, !dbg !1420
@__pyx_vtable_6Cython_4Plex_3DFA_StateMap = internal global %struct.__pyx_vtabstruct_6Cython_4Plex_3DFA_StateMap zeroinitializer, align 8, !dbg !1422
@__pyx_vtabptr_6Cython_4Plex_3DFA_StateMap = internal global ptr null, align 8, !dbg !1424
@__pyx_type_6Cython_4Plex_3DFA_StateMap = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.99, i64 48, i64 0, ptr @__pyx_tp_dealloc_6Cython_4Plex_3DFA_StateMap, i64 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i64 278528, ptr @.str.100, ptr @__pyx_tp_traverse_6Cython_4Plex_3DFA_StateMap, ptr @__pyx_tp_clear_6Cython_4Plex_3DFA_StateMap, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_methods_6Cython_4Plex_3DFA_StateMap, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i64 0, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_1__init__, ptr null, ptr @__pyx_tp_new_6Cython_4Plex_3DFA_StateMap, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8, !dbg !1433
@.str.99 = private unnamed_addr constant [25 x i8] c"Cython.Plex.DFA.StateMap\00", align 1, !dbg !1426
@.str.100 = private unnamed_addr constant [145 x i8] c"\0A    Helper class used by nfa_to_dfa() to map back and forth between\0A    sets of states from the old machine and states of the new machine.\0A    \00", align 1, !dbg !1428
@__pyx_methods_6Cython_4Plex_3DFA_StateMap = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.101, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_3new_to_old, i32 8, ptr @__pyx_doc_6Cython_4Plex_3DFA_8StateMap_2new_to_old }, %struct.PyMethodDef { ptr @.str.102, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_5dump, i32 8, ptr null }, %struct.PyMethodDef { ptr @.str.103, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_7__reduce_cython__, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.104, ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_9__setstate_cython__, i32 8, ptr null }, %struct.PyMethodDef zeroinitializer], align 16, !dbg !1444
@.str.101 = private unnamed_addr constant [11 x i8] c"new_to_old\00", align 1, !dbg !1435
@__pyx_doc_6Cython_4Plex_3DFA_8StateMap_2new_to_old = internal constant [61 x i8] c"Given a new state, return a set of corresponding old states.\00", align 16, !dbg !1449
@.str.102 = private unnamed_addr constant [5 x i8] c"dump\00", align 1, !dbg !1437
@.str.103 = private unnamed_addr constant [18 x i8] c"__reduce_cython__\00", align 1, !dbg !1439
@.str.104 = private unnamed_addr constant [20 x i8] c"__setstate_cython__\00", align 1, !dbg !1442
@.str.105 = private unnamed_addr constant [36 x i8] c"Cython.Plex.DFA.StateMap.new_to_old\00", align 1, !dbg !1447
@PyExc_KeyError = external global ptr, align 8
@.str.106 = private unnamed_addr constant [30 x i8] c"Cython.Plex.DFA.StateMap.dump\00", align 1, !dbg !1454
@PyUnicode_Type = external global %struct._typeobject, align 8
@PyExc_OverflowError = external global ptr, align 8
@.str.107 = private unnamed_addr constant [46 x i8] c"join() result is too long for a Python string\00", align 1, !dbg !1456
@__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_version = internal global i64 0, align 8, !dbg !1461
@__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !1489
@__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_version.108 = internal global i64 0, align 8, !dbg !1491
@__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value.109 = internal global ptr null, align 8, !dbg !1493
@.str.110 = private unnamed_addr constant [43 x i8] c"Cython.Plex.DFA.StateMap.__reduce_cython__\00", align 1, !dbg !1495
@.str.111 = private unnamed_addr constant [6 x i8] c"tuple\00", align 1, !dbg !1497
@.str.112 = private unnamed_addr constant [45 x i8] c"Cython.Plex.DFA.StateMap.__setstate_cython__\00", align 1, !dbg !1499
@.str.113 = private unnamed_addr constant [39 x i8] c"object of type 'NoneType' has no len()\00", align 1, !dbg !1501
@.str.114 = private unnamed_addr constant [51 x i8] c"Cython.Plex.DFA.__pyx_unpickle_StateMap__set_state\00", align 1, !dbg !1503
@.str.115 = private unnamed_addr constant [41 x i8] c"hasattr(): attribute name must be string\00", align 1, !dbg !1508
@.str.116 = private unnamed_addr constant [9 x i8] c"__init__\00", align 1, !dbg !1510
@.str.117 = private unnamed_addr constant [34 x i8] c"Cython.Plex.DFA.StateMap.__init__\00", align 1, !dbg !1512
@.str.118 = private unnamed_addr constant [34 x i8] c"%.200s() keywords must be strings\00", align 1, !dbg !1514
@.str.119 = private unnamed_addr constant [45 x i8] c"%s() got an unexpected keyword argument '%U'\00", align 1, !dbg !1516
@.str.120 = private unnamed_addr constant [51 x i8] c"%s() got multiple values for keyword argument '%U'\00", align 1, !dbg !1518
@.str.121 = private unnamed_addr constant [9 x i8] c"at least\00", align 1, !dbg !1520
@.str.122 = private unnamed_addr constant [8 x i8] c"at most\00", align 1, !dbg !1522
@.str.123 = private unnamed_addr constant [8 x i8] c"exactly\00", align 1, !dbg !1524
@.str.124 = private unnamed_addr constant [60 x i8] c"%.200s() takes %.8s %zd positional argument%.1s (%zd given)\00", align 1, !dbg !1526
@.str.125 = private unnamed_addr constant [39 x i8] c"base class '%.200s' is not a heap type\00", align 1, !dbg !1528
@.str.126 = private unnamed_addr constant [172 x i8] c"extension type '%.200s' has no __dict__ slot, but base type '%.200s' has: either add 'cdef dict __dict__' to the extension type or add '__slots__ = [...]' to the base type\00", align 1, !dbg !1530
@.str.127 = private unnamed_addr constant [59 x i8] c"multiple bases have vtable conflict: '%.200s' and '%.200s'\00", align 1, !dbg !1535
@.str.128 = private unnamed_addr constant [39 x i8] c"invalid vtable found for imported type\00", align 1, !dbg !1540
@.str.129 = private unnamed_addr constant [41 x i8] c"Unable to initialize pickling for %.200s\00", align 1, !dbg !1542
@.str.130 = private unnamed_addr constant [20 x i8] c"Cython.Plex.Actions\00", align 1, !dbg !1544
@.str.131 = private unnamed_addr constant [7 x i8] c"Action\00", align 1, !dbg !1546
@__pyx_vtabptr_6Cython_4Plex_7Actions_Action = internal global ptr null, align 8, !dbg !1592
@.str.132 = private unnamed_addr constant [7 x i8] c"Return\00", align 1, !dbg !1548
@__pyx_vtabptr_6Cython_4Plex_7Actions_Return = internal global ptr null, align 8, !dbg !1594
@.str.133 = private unnamed_addr constant [5 x i8] c"Call\00", align 1, !dbg !1550
@__pyx_vtabptr_6Cython_4Plex_7Actions_Call = internal global ptr null, align 8, !dbg !1596
@.str.134 = private unnamed_addr constant [7 x i8] c"Method\00", align 1, !dbg !1552
@__pyx_vtabptr_6Cython_4Plex_7Actions_Method = internal global ptr null, align 8, !dbg !1598
@.str.135 = private unnamed_addr constant [6 x i8] c"Begin\00", align 1, !dbg !1554
@__pyx_vtabptr_6Cython_4Plex_7Actions_Begin = internal global ptr null, align 8, !dbg !1600
@.str.136 = private unnamed_addr constant [7 x i8] c"Ignore\00", align 1, !dbg !1556
@__pyx_vtabptr_6Cython_4Plex_7Actions_Ignore = internal global ptr null, align 8, !dbg !1602
@.str.137 = private unnamed_addr constant [5 x i8] c"Text\00", align 1, !dbg !1558
@__pyx_vtabptr_6Cython_4Plex_7Actions_Text = internal global ptr null, align 8, !dbg !1604
@.str.138 = private unnamed_addr constant [24 x i8] c"Cython.Plex.Transitions\00", align 1, !dbg !1560
@.str.139 = private unnamed_addr constant [14 x i8] c"TransitionMap\00", align 1, !dbg !1562
@__pyx_vtabptr_6Cython_4Plex_11Transitions_TransitionMap = internal global ptr null, align 8, !dbg !1606
@.str.140 = private unnamed_addr constant [21 x i8] c"Cython.Plex.Machines\00", align 1, !dbg !1564
@.str.141 = private unnamed_addr constant [8 x i8] c"Machine\00", align 1, !dbg !1566
@__pyx_vtabptr_6Cython_4Plex_8Machines_Machine = internal global ptr null, align 8, !dbg !1608
@.str.142 = private unnamed_addr constant [5 x i8] c"Node\00", align 1, !dbg !1568
@.str.143 = private unnamed_addr constant [12 x i8] c"FastMachine\00", align 1, !dbg !1570
@.str.144 = private unnamed_addr constant [35 x i8] c"%.200s.%.200s is not a type object\00", align 1, !dbg !1572
@.str.145 = private unnamed_addr constant [115 x i8] c"%.200s.%.200s size changed, may indicate binary incompatibility. Expected %zd from C header, got %zd from PyObject\00", align 1, !dbg !1577
@.str.146 = private unnamed_addr constant [119 x i8] c"%.200s.%.200s size changed, may indicate binary incompatibility. Expected %zd from C header, got %zd-%zd from PyObject\00", align 1, !dbg !1582
@.str.147 = private unnamed_addr constant [107 x i8] c"%s.%s size changed, may indicate binary incompatibility. Expected %zd from C header, got %zd from PyObject\00", align 1, !dbg !1587
@.str.148 = private unnamed_addr constant [7 x i8] c"maxint\00", align 1, !dbg !1610
@__pyx_vp_6Cython_4Plex_11Transitions_maxint = internal global ptr null, align 8, !dbg !1626
@.str.149 = private unnamed_addr constant [5 x i8] c"long\00", align 1, !dbg !1612
@__pyx_vp_6Cython_4Plex_8Machines_maxint = internal global ptr null, align 8, !dbg !1629
@.str.150 = private unnamed_addr constant [4 x i8] c"int\00", align 1, !dbg !1614
@.str.151 = private unnamed_addr constant [50 x i8] c"%.200s does not export expected C variable %.200s\00", align 1, !dbg !1616
@.str.152 = private unnamed_addr constant [75 x i8] c"C variable %.200s.%.200s has wrong signature (expected %.500s, got %.500s)\00", align 1, !dbg !1621
@.str.153 = private unnamed_addr constant [22 x i8] c"cannot import name %S\00", align 1, !dbg !1632
@.str.154 = private unnamed_addr constant [27 x i8] c"%.200s() needs an argument\00", align 1, !dbg !1634
@__pyx_doc_6Cython_4Plex_3DFA_nfa_to_dfa = internal constant [104 x i8] c"\0A    Given a nondeterministic Machine, return a new equivalent\0A    Machine which is deterministic.\0A    \00", align 16, !dbg !1645
@.str.155 = private unnamed_addr constant [12 x i8] c"old_machine\00", align 1, !dbg !1638
@.str.156 = private unnamed_addr constant [67 x i8] c"Argument '%.200s' has incorrect type (expected %.200s, got %.200s)\00", align 1, !dbg !1640
@.str.157 = private unnamed_addr constant [24 x i8] c"__pyx_unpickle_StateMap\00", align 1, !dbg !1658
@.str.158 = private unnamed_addr constant [40 x i8] c"Cython.Plex.DFA.__pyx_unpickle_StateMap\00", align 1, !dbg !1662
@.str.159 = private unnamed_addr constant [35 x i8] c"value too large to convert to long\00", align 1, !dbg !1664
@.str.160 = private unnamed_addr constant [37 x i8] c"can't convert negative value to long\00", align 1, !dbg !1666
@PyLong_Type = external global %struct._typeobject, align 8
@.str.161 = private unnamed_addr constant [23 x i8] c"an integer is required\00", align 1, !dbg !1671
@PyExc_DeprecationWarning = external global ptr, align 8
@.str.162 = private unnamed_addr constant [168 x i8] c"__int__ returned non-int (type %.200s).  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.\00", align 1, !dbg !1673
@.str.163 = private unnamed_addr constant [41 x i8] c"__%.4s__ returned non-%.4s (type %.200s)\00", align 1, !dbg !1678
@PyTraceBack_Type = external global %struct._typeobject, align 8
@.str.164 = private unnamed_addr constant [41 x i8] c"raise: arg 3 must be a traceback or None\00", align 1, !dbg !1680
@.str.165 = private unnamed_addr constant [49 x i8] c"instance exception may not have a separate value\00", align 1, !dbg !1682
@.str.166 = private unnamed_addr constant [69 x i8] c"calling %R should have returned an instance of BaseException, not %R\00", align 1, !dbg !1684
@.str.167 = private unnamed_addr constant [59 x i8] c"raise: exception class must be a subclass of BaseException\00", align 1, !dbg !1689
@.str.168 = private unnamed_addr constant [48 x i8] c"exception causes must derive from BaseException\00", align 1, !dbg !1691
@__Pyx_CLineForTraceback.__pyx_dict_version = internal global i64 0, align 8, !dbg !1693
@__Pyx_CLineForTraceback.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !1857
@__pyx_code_cache = internal global %struct.__Pyx_CodeObjectCache zeroinitializer, align 8, !dbg !1859
@.str.169 = private unnamed_addr constant [11 x i8] c"%s (%s:%d)\00", align 1, !dbg !1866
@__pyx_cfilenm = internal global ptr @.str.170, align 8, !dbg !1873
@.str.170 = private unnamed_addr constant [158 x i8] c"/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src/Cython/Plex/DFA.c\00", align 1, !dbg !1868

; Function Attrs: nounwind uwtable
define ptr @PyInit_DFA() #0 !dbg !1881 {
entry:
  %call = call ptr @PyModuleDef_Init(ptr noundef @__pyx_moduledef), !dbg !1882
  ret ptr %call, !dbg !1883
}

declare !dbg !1884 ptr @PyModuleDef_Init(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pymod_create(ptr noundef %spec, ptr noundef %def) #0 !dbg !1889 {
entry:
  %retval = alloca ptr, align 8
  %spec.addr = alloca ptr, align 8
  %def.addr = alloca ptr, align 8
  %module = alloca ptr, align 8
  %moddict = alloca ptr, align 8
  %modname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %spec.addr, metadata !1893, metadata !DIExpression()), !dbg !1903
  store ptr %def, ptr %def.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %def.addr, metadata !1894, metadata !DIExpression()), !dbg !1904
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #11, !dbg !1905
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !1895, metadata !DIExpression()), !dbg !1906
  store ptr null, ptr %module, align 8, !dbg !1906, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %moddict) #11, !dbg !1905
  tail call void @llvm.dbg.declare(metadata ptr %moddict, metadata !1896, metadata !DIExpression()), !dbg !1907
  call void @llvm.lifetime.start.p0(i64 8, ptr %modname) #11, !dbg !1905
  tail call void @llvm.dbg.declare(metadata ptr %modname, metadata !1897, metadata !DIExpression()), !dbg !1908
  %0 = load ptr, ptr %def.addr, align 8, !dbg !1909, !tbaa !1899
  %call = call i32 @__Pyx_check_single_interpreter(), !dbg !1910
  %tobool = icmp ne i32 %call, 0, !dbg !1910
  br i1 %tobool, label %if.then, label %if.end, !dbg !1912

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !1913
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1913

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr @__pyx_m, align 8, !dbg !1914, !tbaa !1899
  %tobool1 = icmp ne ptr %1, null, !dbg !1914
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !1916

if.then2:                                         ; preds = %if.end
  %2 = load ptr, ptr @__pyx_m, align 8, !dbg !1917, !tbaa !1899
  call void @Py_INCREF(ptr noundef %2), !dbg !1917
  %3 = load ptr, ptr @__pyx_m, align 8, !dbg !1917, !tbaa !1899
  store ptr %3, ptr %retval, align 8, !dbg !1918
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1918

if.end3:                                          ; preds = %if.end
  %4 = load ptr, ptr %spec.addr, align 8, !dbg !1919, !tbaa !1899
  %call4 = call ptr @PyObject_GetAttrString(ptr noundef %4, ptr noundef @.str.1), !dbg !1920
  store ptr %call4, ptr %modname, align 8, !dbg !1921, !tbaa !1899
  %5 = load ptr, ptr %modname, align 8, !dbg !1922, !tbaa !1899
  %tobool5 = icmp ne ptr %5, null, !dbg !1922
  %lnot = xor i1 %tobool5, true, !dbg !1922
  %lnot6 = xor i1 %lnot, true, !dbg !1922
  %lnot7 = xor i1 %lnot6, true, !dbg !1922
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !1922
  %conv = sext i32 %lnot.ext to i64, !dbg !1922
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1922
  %tobool8 = icmp ne i64 %expval, 0, !dbg !1922
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !1924

if.then9:                                         ; preds = %if.end3
  br label %bad, !dbg !1925

if.end10:                                         ; preds = %if.end3
  %6 = load ptr, ptr %modname, align 8, !dbg !1926, !tbaa !1899
  %call11 = call ptr @PyModule_NewObject(ptr noundef %6), !dbg !1927
  store ptr %call11, ptr %module, align 8, !dbg !1928, !tbaa !1899
  %7 = load ptr, ptr %modname, align 8, !dbg !1929, !tbaa !1899
  call void @Py_DECREF(ptr noundef %7), !dbg !1929
  %8 = load ptr, ptr %module, align 8, !dbg !1930, !tbaa !1899
  %tobool12 = icmp ne ptr %8, null, !dbg !1930
  %lnot13 = xor i1 %tobool12, true, !dbg !1930
  %lnot15 = xor i1 %lnot13, true, !dbg !1930
  %lnot17 = xor i1 %lnot15, true, !dbg !1930
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !1930
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !1930
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !1930
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !1930
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !1932

if.then22:                                        ; preds = %if.end10
  br label %bad, !dbg !1933

if.end23:                                         ; preds = %if.end10
  %9 = load ptr, ptr %module, align 8, !dbg !1934, !tbaa !1899
  %call24 = call ptr @PyModule_GetDict(ptr noundef %9), !dbg !1935
  store ptr %call24, ptr %moddict, align 8, !dbg !1936, !tbaa !1899
  %10 = load ptr, ptr %moddict, align 8, !dbg !1937, !tbaa !1899
  %tobool25 = icmp ne ptr %10, null, !dbg !1937
  %lnot26 = xor i1 %tobool25, true, !dbg !1937
  %lnot28 = xor i1 %lnot26, true, !dbg !1937
  %lnot30 = xor i1 %lnot28, true, !dbg !1937
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !1937
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !1937
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !1937
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !1937
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !1939

if.then35:                                        ; preds = %if.end23
  br label %bad, !dbg !1940

if.end36:                                         ; preds = %if.end23
  %11 = load ptr, ptr %spec.addr, align 8, !dbg !1941, !tbaa !1899
  %12 = load ptr, ptr %moddict, align 8, !dbg !1941, !tbaa !1899
  %call37 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %11, ptr noundef %12, ptr noundef @.str.2, ptr noundef @.str.3, i32 noundef 1), !dbg !1941
  %cmp = icmp slt i32 %call37, 0, !dbg !1941
  %lnot39 = xor i1 %cmp, true, !dbg !1941
  %lnot41 = xor i1 %lnot39, true, !dbg !1941
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !1941
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !1941
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0), !dbg !1941
  %tobool45 = icmp ne i64 %expval44, 0, !dbg !1941
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !1943

if.then46:                                        ; preds = %if.end36
  br label %bad, !dbg !1944

if.end47:                                         ; preds = %if.end36
  %13 = load ptr, ptr %spec.addr, align 8, !dbg !1945, !tbaa !1899
  %14 = load ptr, ptr %moddict, align 8, !dbg !1945, !tbaa !1899
  %call48 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %13, ptr noundef %14, ptr noundef @.str.4, ptr noundef @.str.5, i32 noundef 1), !dbg !1945
  %cmp49 = icmp slt i32 %call48, 0, !dbg !1945
  %lnot51 = xor i1 %cmp49, true, !dbg !1945
  %lnot53 = xor i1 %lnot51, true, !dbg !1945
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !1945
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !1945
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !1945
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !1945
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !1947

if.then58:                                        ; preds = %if.end47
  br label %bad, !dbg !1948

if.end59:                                         ; preds = %if.end47
  %15 = load ptr, ptr %spec.addr, align 8, !dbg !1949, !tbaa !1899
  %16 = load ptr, ptr %moddict, align 8, !dbg !1949, !tbaa !1899
  %call60 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %15, ptr noundef %16, ptr noundef @.str.6, ptr noundef @.str.7, i32 noundef 1), !dbg !1949
  %cmp61 = icmp slt i32 %call60, 0, !dbg !1949
  %lnot63 = xor i1 %cmp61, true, !dbg !1949
  %lnot65 = xor i1 %lnot63, true, !dbg !1949
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !1949
  %conv67 = sext i32 %lnot.ext66 to i64, !dbg !1949
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0), !dbg !1949
  %tobool69 = icmp ne i64 %expval68, 0, !dbg !1949
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !1951

if.then70:                                        ; preds = %if.end59
  br label %bad, !dbg !1952

if.end71:                                         ; preds = %if.end59
  %17 = load ptr, ptr %spec.addr, align 8, !dbg !1953, !tbaa !1899
  %18 = load ptr, ptr %moddict, align 8, !dbg !1953, !tbaa !1899
  %call72 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %17, ptr noundef %18, ptr noundef @.str.8, ptr noundef @.str.9, i32 noundef 0), !dbg !1953
  %cmp73 = icmp slt i32 %call72, 0, !dbg !1953
  %lnot75 = xor i1 %cmp73, true, !dbg !1953
  %lnot77 = xor i1 %lnot75, true, !dbg !1953
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !1953
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !1953
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 0), !dbg !1953
  %tobool81 = icmp ne i64 %expval80, 0, !dbg !1953
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !1955

if.then82:                                        ; preds = %if.end71
  br label %bad, !dbg !1956

if.end83:                                         ; preds = %if.end71
  %19 = load ptr, ptr %module, align 8, !dbg !1957, !tbaa !1899
  store ptr %19, ptr %retval, align 8, !dbg !1958
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1958

bad:                                              ; preds = %if.then82, %if.then70, %if.then58, %if.then46, %if.then35, %if.then22, %if.then9
  tail call void @llvm.dbg.label(metadata !1898), !dbg !1959
  %20 = load ptr, ptr %module, align 8, !dbg !1960, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %20), !dbg !1960
  store ptr null, ptr %retval, align 8, !dbg !1961
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1961

cleanup:                                          ; preds = %bad, %if.end83, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %modname) #11, !dbg !1962
  call void @llvm.lifetime.end.p0(i64 8, ptr %moddict) #11, !dbg !1962
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #11, !dbg !1962
  %21 = load ptr, ptr %retval, align 8, !dbg !1962
  ret ptr %21, !dbg !1962
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pymod_exec_DFA(ptr noundef %__pyx_pyinit_module) #0 !dbg !1963 {
entry:
  %retval = alloca i32, align 4
  %__pyx_pyinit_module.addr = alloca ptr, align 8
  %stringtab_initialized = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %modules = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %__pyx_pyinit_module, ptr %__pyx_pyinit_module.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_pyinit_module.addr, metadata !1965, metadata !DIExpression()), !dbg !1981
  call void @llvm.lifetime.start.p0(i64 4, ptr %stringtab_initialized) #11, !dbg !1982
  tail call void @llvm.dbg.declare(metadata ptr %stringtab_initialized, metadata !1966, metadata !DIExpression()), !dbg !1983
  store i32 0, ptr %stringtab_initialized, align 4, !dbg !1983, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !1986
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !1967, metadata !DIExpression()), !dbg !1987
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !1987, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !1988
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !1968, metadata !DIExpression()), !dbg !1989
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !1989, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !1990
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !1969, metadata !DIExpression()), !dbg !1991
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !1991, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !1992
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1970, metadata !DIExpression()), !dbg !1993
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !1993, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !1994
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1971, metadata !DIExpression()), !dbg !1995
  store ptr null, ptr %__pyx_filename, align 8, !dbg !1995, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !1996
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1972, metadata !DIExpression()), !dbg !1997
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !1997, !tbaa !1984
  %0 = load ptr, ptr @__pyx_m, align 8, !dbg !1998, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !1998
  br i1 %tobool, label %if.then, label %if.end2, !dbg !2000

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_m, align 8, !dbg !2001, !tbaa !1899
  %2 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !dbg !2004, !tbaa !1899
  %cmp = icmp eq ptr %1, %2, !dbg !2005
  br i1 %cmp, label %if.then1, label %if.end, !dbg !2006

if.then1:                                         ; preds = %if.then
  store i32 0, ptr %retval, align 4, !dbg !2007
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup489, !dbg !2007

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !2008, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.11), !dbg !2009
  store i32 -1, ptr %retval, align 4, !dbg !2010
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup489, !dbg !2010

if.end2:                                          ; preds = %entry
  %4 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !dbg !2011, !tbaa !1899
  store ptr %4, ptr @__pyx_m, align 8, !dbg !2012, !tbaa !1899
  %5 = load ptr, ptr @__pyx_m, align 8, !dbg !2013, !tbaa !1899
  call void @Py_INCREF(ptr noundef %5), !dbg !2013
  %6 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2014, !tbaa !1899
  %7 = load ptr, ptr @__pyx_m, align 8, !dbg !2015, !tbaa !1899
  %call = call ptr @PyModule_GetDict(ptr noundef %7), !dbg !2016
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2017, !tbaa !1899
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 0, !dbg !2017
  store ptr %call, ptr %__pyx_d, align 8, !dbg !2018, !tbaa !2019
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2021, !tbaa !1899
  %__pyx_d3 = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 0, !dbg !2021
  %10 = load ptr, ptr %__pyx_d3, align 8, !dbg !2021, !tbaa !2019
  %tobool4 = icmp ne ptr %10, null, !dbg !2021
  %lnot = xor i1 %tobool4, true, !dbg !2021
  %lnot5 = xor i1 %lnot, true, !dbg !2021
  %lnot6 = xor i1 %lnot5, true, !dbg !2021
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !2021
  %conv = sext i32 %lnot.ext to i64, !dbg !2021
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2021
  %tobool7 = icmp ne i64 %expval, 0, !dbg !2021
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !2023

if.then8:                                         ; preds = %if.end2
  %11 = load ptr, ptr @__pyx_f, align 16, !dbg !2024, !tbaa !1899
  store ptr %11, ptr %__pyx_filename, align 8, !dbg !2024, !tbaa !1899
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !2024, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2024, !tbaa !1984
  %13 = load i32, ptr %__pyx_lineno, align 4, !dbg !2024, !tbaa !1984
  store i32 6862, ptr %__pyx_clineno, align 4, !dbg !2024, !tbaa !1984
  %14 = load i32, ptr %__pyx_clineno, align 4, !dbg !2024, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2027

if.end9:                                          ; preds = %if.end2
  %15 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2028, !tbaa !1899
  %__pyx_d10 = getelementptr inbounds %struct.__pyx_mstate, ptr %15, i32 0, i32 0, !dbg !2028
  %16 = load ptr, ptr %__pyx_d10, align 8, !dbg !2028, !tbaa !2019
  call void @Py_INCREF(ptr noundef %16), !dbg !2028
  %call11 = call ptr @PyImport_AddModule(ptr noundef @.str.12), !dbg !2029
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2030, !tbaa !1899
  %__pyx_b = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 1, !dbg !2030
  store ptr %call11, ptr %__pyx_b, align 8, !dbg !2031, !tbaa !2032
  %18 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2033, !tbaa !1899
  %__pyx_b12 = getelementptr inbounds %struct.__pyx_mstate, ptr %18, i32 0, i32 1, !dbg !2033
  %19 = load ptr, ptr %__pyx_b12, align 8, !dbg !2033, !tbaa !2032
  %tobool13 = icmp ne ptr %19, null, !dbg !2033
  %lnot14 = xor i1 %tobool13, true, !dbg !2033
  %lnot16 = xor i1 %lnot14, true, !dbg !2033
  %lnot18 = xor i1 %lnot16, true, !dbg !2033
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !2033
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !2033
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 0), !dbg !2033
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !2033
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !2035

if.then23:                                        ; preds = %if.end9
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !2036, !tbaa !1899
  store ptr %20, ptr %__pyx_filename, align 8, !dbg !2036, !tbaa !1899
  %21 = load ptr, ptr %__pyx_filename, align 8, !dbg !2036, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2036, !tbaa !1984
  %22 = load i32, ptr %__pyx_lineno, align 4, !dbg !2036, !tbaa !1984
  store i32 6864, ptr %__pyx_clineno, align 4, !dbg !2036, !tbaa !1984
  %23 = load i32, ptr %__pyx_clineno, align 4, !dbg !2036, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2039

if.end24:                                         ; preds = %if.end9
  %24 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2040, !tbaa !1899
  %__pyx_b25 = getelementptr inbounds %struct.__pyx_mstate, ptr %24, i32 0, i32 1, !dbg !2040
  %25 = load ptr, ptr %__pyx_b25, align 8, !dbg !2040, !tbaa !2032
  call void @Py_INCREF(ptr noundef %25), !dbg !2040
  %call26 = call ptr @PyImport_AddModule(ptr noundef @.str.13), !dbg !2041
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2042, !tbaa !1899
  %__pyx_cython_runtime = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 2, !dbg !2042
  store ptr %call26, ptr %__pyx_cython_runtime, align 8, !dbg !2043, !tbaa !2044
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2045, !tbaa !1899
  %__pyx_cython_runtime27 = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 2, !dbg !2045
  %28 = load ptr, ptr %__pyx_cython_runtime27, align 8, !dbg !2045, !tbaa !2044
  %tobool28 = icmp ne ptr %28, null, !dbg !2045
  %lnot29 = xor i1 %tobool28, true, !dbg !2045
  %lnot31 = xor i1 %lnot29, true, !dbg !2045
  %lnot33 = xor i1 %lnot31, true, !dbg !2045
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !2045
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !2045
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 0), !dbg !2045
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !2045
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !2047

if.then38:                                        ; preds = %if.end24
  %29 = load ptr, ptr @__pyx_f, align 16, !dbg !2048, !tbaa !1899
  store ptr %29, ptr %__pyx_filename, align 8, !dbg !2048, !tbaa !1899
  %30 = load ptr, ptr %__pyx_filename, align 8, !dbg !2048, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2048, !tbaa !1984
  %31 = load i32, ptr %__pyx_lineno, align 4, !dbg !2048, !tbaa !1984
  store i32 6866, ptr %__pyx_clineno, align 4, !dbg !2048, !tbaa !1984
  %32 = load i32, ptr %__pyx_clineno, align 4, !dbg !2048, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2051

if.end39:                                         ; preds = %if.end24
  %33 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2052, !tbaa !1899
  %__pyx_cython_runtime40 = getelementptr inbounds %struct.__pyx_mstate, ptr %33, i32 0, i32 2, !dbg !2052
  %34 = load ptr, ptr %__pyx_cython_runtime40, align 8, !dbg !2052, !tbaa !2044
  call void @Py_INCREF(ptr noundef %34), !dbg !2052
  %35 = load ptr, ptr @__pyx_m, align 8, !dbg !2053, !tbaa !1899
  %36 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2055, !tbaa !1899
  %__pyx_b41 = getelementptr inbounds %struct.__pyx_mstate, ptr %36, i32 0, i32 1, !dbg !2055
  %37 = load ptr, ptr %__pyx_b41, align 8, !dbg !2055, !tbaa !2032
  %call42 = call i32 @PyObject_SetAttrString(ptr noundef %35, ptr noundef @.str.14, ptr noundef %37), !dbg !2056
  %cmp43 = icmp slt i32 %call42, 0, !dbg !2057
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !2058

if.then45:                                        ; preds = %if.end39
  %38 = load ptr, ptr @__pyx_f, align 16, !dbg !2059, !tbaa !1899
  store ptr %38, ptr %__pyx_filename, align 8, !dbg !2059, !tbaa !1899
  %39 = load ptr, ptr %__pyx_filename, align 8, !dbg !2059, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2059, !tbaa !1984
  %40 = load i32, ptr %__pyx_lineno, align 4, !dbg !2059, !tbaa !1984
  store i32 6868, ptr %__pyx_clineno, align 4, !dbg !2059, !tbaa !1984
  %41 = load i32, ptr %__pyx_clineno, align 4, !dbg !2059, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2062

if.end46:                                         ; preds = %if.end39
  %call47 = call i64 @__Pyx_get_runtime_version(), !dbg !2063
  %call48 = call i32 @__Pyx_check_binary_version(i64 noundef 51054320, i64 noundef %call47, i32 noundef 0), !dbg !2065
  %cmp49 = icmp slt i32 %call48, 0, !dbg !2066
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !2067

if.then51:                                        ; preds = %if.end46
  %42 = load ptr, ptr @__pyx_f, align 16, !dbg !2068, !tbaa !1899
  store ptr %42, ptr %__pyx_filename, align 8, !dbg !2068, !tbaa !1899
  %43 = load ptr, ptr %__pyx_filename, align 8, !dbg !2068, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2068, !tbaa !1984
  %44 = load i32, ptr %__pyx_lineno, align 4, !dbg !2068, !tbaa !1984
  store i32 6879, ptr %__pyx_clineno, align 4, !dbg !2068, !tbaa !1984
  %45 = load i32, ptr %__pyx_clineno, align 4, !dbg !2068, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2071

if.end52:                                         ; preds = %if.end46
  %call53 = call ptr @PyTuple_New(i64 noundef 0), !dbg !2072
  %46 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2073, !tbaa !1899
  %__pyx_empty_tuple = getelementptr inbounds %struct.__pyx_mstate, ptr %46, i32 0, i32 3, !dbg !2073
  store ptr %call53, ptr %__pyx_empty_tuple, align 8, !dbg !2074, !tbaa !2075
  %47 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2076, !tbaa !1899
  %__pyx_empty_tuple54 = getelementptr inbounds %struct.__pyx_mstate, ptr %47, i32 0, i32 3, !dbg !2076
  %48 = load ptr, ptr %__pyx_empty_tuple54, align 8, !dbg !2076, !tbaa !2075
  %tobool55 = icmp ne ptr %48, null, !dbg !2076
  %lnot56 = xor i1 %tobool55, true, !dbg !2076
  %lnot58 = xor i1 %lnot56, true, !dbg !2076
  %lnot60 = xor i1 %lnot58, true, !dbg !2076
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !2076
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !2076
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0), !dbg !2076
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !2076
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !2078

if.then65:                                        ; preds = %if.end52
  %49 = load ptr, ptr @__pyx_f, align 16, !dbg !2079, !tbaa !1899
  store ptr %49, ptr %__pyx_filename, align 8, !dbg !2079, !tbaa !1899
  %50 = load ptr, ptr %__pyx_filename, align 8, !dbg !2079, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2079, !tbaa !1984
  %51 = load i32, ptr %__pyx_lineno, align 4, !dbg !2079, !tbaa !1984
  store i32 6883, ptr %__pyx_clineno, align 4, !dbg !2079, !tbaa !1984
  %52 = load i32, ptr %__pyx_clineno, align 4, !dbg !2079, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2082

if.end66:                                         ; preds = %if.end52
  %call67 = call ptr @PyBytes_FromStringAndSize(ptr noundef @.str.15, i64 noundef 0), !dbg !2083
  %53 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2084, !tbaa !1899
  %__pyx_empty_bytes = getelementptr inbounds %struct.__pyx_mstate, ptr %53, i32 0, i32 4, !dbg !2084
  store ptr %call67, ptr %__pyx_empty_bytes, align 8, !dbg !2085, !tbaa !2086
  %54 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2087, !tbaa !1899
  %__pyx_empty_bytes68 = getelementptr inbounds %struct.__pyx_mstate, ptr %54, i32 0, i32 4, !dbg !2087
  %55 = load ptr, ptr %__pyx_empty_bytes68, align 8, !dbg !2087, !tbaa !2086
  %tobool69 = icmp ne ptr %55, null, !dbg !2087
  %lnot70 = xor i1 %tobool69, true, !dbg !2087
  %lnot72 = xor i1 %lnot70, true, !dbg !2087
  %lnot74 = xor i1 %lnot72, true, !dbg !2087
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !2087
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !2087
  %expval77 = call i64 @llvm.expect.i64(i64 %conv76, i64 0), !dbg !2087
  %tobool78 = icmp ne i64 %expval77, 0, !dbg !2087
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !2089

if.then79:                                        ; preds = %if.end66
  %56 = load ptr, ptr @__pyx_f, align 16, !dbg !2090, !tbaa !1899
  store ptr %56, ptr %__pyx_filename, align 8, !dbg !2090, !tbaa !1899
  %57 = load ptr, ptr %__pyx_filename, align 8, !dbg !2090, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2090, !tbaa !1984
  %58 = load i32, ptr %__pyx_lineno, align 4, !dbg !2090, !tbaa !1984
  store i32 6884, ptr %__pyx_clineno, align 4, !dbg !2090, !tbaa !1984
  %59 = load i32, ptr %__pyx_clineno, align 4, !dbg !2090, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2093

if.end80:                                         ; preds = %if.end66
  %call81 = call ptr @PyUnicode_FromStringAndSize(ptr noundef @.str.15, i64 noundef 0), !dbg !2094
  %60 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2095, !tbaa !1899
  %__pyx_empty_unicode = getelementptr inbounds %struct.__pyx_mstate, ptr %60, i32 0, i32 5, !dbg !2095
  store ptr %call81, ptr %__pyx_empty_unicode, align 8, !dbg !2096, !tbaa !2097
  %61 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2098, !tbaa !1899
  %__pyx_empty_unicode82 = getelementptr inbounds %struct.__pyx_mstate, ptr %61, i32 0, i32 5, !dbg !2098
  %62 = load ptr, ptr %__pyx_empty_unicode82, align 8, !dbg !2098, !tbaa !2097
  %tobool83 = icmp ne ptr %62, null, !dbg !2098
  %lnot84 = xor i1 %tobool83, true, !dbg !2098
  %lnot86 = xor i1 %lnot84, true, !dbg !2098
  %lnot88 = xor i1 %lnot86, true, !dbg !2098
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !2098
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !2098
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 0), !dbg !2098
  %tobool92 = icmp ne i64 %expval91, 0, !dbg !2098
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !2100

if.then93:                                        ; preds = %if.end80
  %63 = load ptr, ptr @__pyx_f, align 16, !dbg !2101, !tbaa !1899
  store ptr %63, ptr %__pyx_filename, align 8, !dbg !2101, !tbaa !1899
  %64 = load ptr, ptr %__pyx_filename, align 8, !dbg !2101, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2101, !tbaa !1984
  %65 = load i32, ptr %__pyx_lineno, align 4, !dbg !2101, !tbaa !1984
  store i32 6885, ptr %__pyx_clineno, align 4, !dbg !2101, !tbaa !1984
  %66 = load i32, ptr %__pyx_clineno, align 4, !dbg !2101, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2104

if.end94:                                         ; preds = %if.end80
  %67 = load ptr, ptr @__pyx_m, align 8, !dbg !2105, !tbaa !1899
  %call95 = call i32 @__pyx_CyFunction_init(ptr noundef %67), !dbg !2107
  %cmp96 = icmp slt i32 %call95, 0, !dbg !2108
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !2109

if.then98:                                        ; preds = %if.end94
  %68 = load ptr, ptr @__pyx_f, align 16, !dbg !2110, !tbaa !1899
  store ptr %68, ptr %__pyx_filename, align 8, !dbg !2110, !tbaa !1899
  %69 = load ptr, ptr %__pyx_filename, align 8, !dbg !2110, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2110, !tbaa !1984
  %70 = load i32, ptr %__pyx_lineno, align 4, !dbg !2110, !tbaa !1984
  store i32 6887, ptr %__pyx_clineno, align 4, !dbg !2110, !tbaa !1984
  %71 = load i32, ptr %__pyx_clineno, align 4, !dbg !2110, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2113

if.end99:                                         ; preds = %if.end94
  %call100 = call i32 @__Pyx_InitConstants(), !dbg !2114
  %cmp101 = icmp slt i32 %call100, 0, !dbg !2116
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !2117

if.then103:                                       ; preds = %if.end99
  %72 = load ptr, ptr @__pyx_f, align 16, !dbg !2118, !tbaa !1899
  store ptr %72, ptr %__pyx_filename, align 8, !dbg !2118, !tbaa !1899
  %73 = load ptr, ptr %__pyx_filename, align 8, !dbg !2118, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2118, !tbaa !1984
  %74 = load i32, ptr %__pyx_lineno, align 4, !dbg !2118, !tbaa !1984
  store i32 6910, ptr %__pyx_clineno, align 4, !dbg !2118, !tbaa !1984
  %75 = load i32, ptr %__pyx_clineno, align 4, !dbg !2118, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2121

if.end104:                                        ; preds = %if.end99
  store i32 1, ptr %stringtab_initialized, align 4, !dbg !2122, !tbaa !1984
  %call105 = call i32 @__Pyx_InitGlobals(), !dbg !2123
  %cmp106 = icmp slt i32 %call105, 0, !dbg !2125
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !2126

if.then108:                                       ; preds = %if.end104
  %76 = load ptr, ptr @__pyx_f, align 16, !dbg !2127, !tbaa !1899
  store ptr %76, ptr %__pyx_filename, align 8, !dbg !2127, !tbaa !1899
  %77 = load ptr, ptr %__pyx_filename, align 8, !dbg !2127, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2127, !tbaa !1984
  %78 = load i32, ptr %__pyx_lineno, align 4, !dbg !2127, !tbaa !1984
  store i32 6912, ptr %__pyx_clineno, align 4, !dbg !2127, !tbaa !1984
  %79 = load i32, ptr %__pyx_clineno, align 4, !dbg !2127, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2130

if.end109:                                        ; preds = %if.end104
  %80 = load i32, ptr @__pyx_module_is_main_Cython__Plex__DFA, align 4, !dbg !2131, !tbaa !1984
  %tobool110 = icmp ne i32 %80, 0, !dbg !2131
  br i1 %tobool110, label %if.then111, label %if.end117, !dbg !2133

if.then111:                                       ; preds = %if.end109
  %81 = load ptr, ptr @__pyx_m, align 8, !dbg !2134, !tbaa !1899
  %82 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2137, !tbaa !1899
  %__pyx_n_s_name = getelementptr inbounds %struct.__pyx_mstate, ptr %82, i32 0, i32 60, !dbg !2137
  %83 = load ptr, ptr %__pyx_n_s_name, align 8, !dbg !2137, !tbaa !2138
  %84 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2139, !tbaa !1899
  %__pyx_n_s_main = getelementptr inbounds %struct.__pyx_mstate, ptr %84, i32 0, i32 58, !dbg !2139
  %85 = load ptr, ptr %__pyx_n_s_main, align 8, !dbg !2139, !tbaa !2140
  %call112 = call i32 @PyObject_SetAttr(ptr noundef %81, ptr noundef %83, ptr noundef %85), !dbg !2141
  %cmp113 = icmp slt i32 %call112, 0, !dbg !2142
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !2143

if.then115:                                       ; preds = %if.then111
  %86 = load ptr, ptr @__pyx_f, align 16, !dbg !2144, !tbaa !1899
  store ptr %86, ptr %__pyx_filename, align 8, !dbg !2144, !tbaa !1899
  %87 = load ptr, ptr %__pyx_filename, align 8, !dbg !2144, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2144, !tbaa !1984
  %88 = load i32, ptr %__pyx_lineno, align 4, !dbg !2144, !tbaa !1984
  store i32 6917, ptr %__pyx_clineno, align 4, !dbg !2144, !tbaa !1984
  %89 = load i32, ptr %__pyx_clineno, align 4, !dbg !2144, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2147

if.end116:                                        ; preds = %if.then111
  br label %if.end117, !dbg !2148

if.end117:                                        ; preds = %if.end116, %if.end109
  call void @llvm.lifetime.start.p0(i64 8, ptr %modules) #11, !dbg !2149
  tail call void @llvm.dbg.declare(metadata ptr %modules, metadata !1973, metadata !DIExpression()), !dbg !2150
  %call118 = call ptr @PyImport_GetModuleDict(), !dbg !2151
  store ptr %call118, ptr %modules, align 8, !dbg !2150, !tbaa !1899
  %90 = load ptr, ptr %modules, align 8, !dbg !2152, !tbaa !1899
  %tobool119 = icmp ne ptr %90, null, !dbg !2152
  %lnot120 = xor i1 %tobool119, true, !dbg !2152
  %lnot122 = xor i1 %lnot120, true, !dbg !2152
  %lnot124 = xor i1 %lnot122, true, !dbg !2152
  %lnot.ext125 = zext i1 %lnot124 to i32, !dbg !2152
  %conv126 = sext i32 %lnot.ext125 to i64, !dbg !2152
  %expval127 = call i64 @llvm.expect.i64(i64 %conv126, i64 0), !dbg !2152
  %tobool128 = icmp ne i64 %expval127, 0, !dbg !2152
  br i1 %tobool128, label %if.then129, label %if.end130, !dbg !2154

if.then129:                                       ; preds = %if.end117
  %91 = load ptr, ptr @__pyx_f, align 16, !dbg !2155, !tbaa !1899
  store ptr %91, ptr %__pyx_filename, align 8, !dbg !2155, !tbaa !1899
  %92 = load ptr, ptr %__pyx_filename, align 8, !dbg !2155, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2155, !tbaa !1984
  %93 = load i32, ptr %__pyx_lineno, align 4, !dbg !2155, !tbaa !1984
  store i32 6921, ptr %__pyx_clineno, align 4, !dbg !2155, !tbaa !1984
  %94 = load i32, ptr %__pyx_clineno, align 4, !dbg !2155, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2158

if.end130:                                        ; preds = %if.end117
  %95 = load ptr, ptr %modules, align 8, !dbg !2159, !tbaa !1899
  %call131 = call ptr @PyDict_GetItemString(ptr noundef %95, ptr noundef @.str.16), !dbg !2161
  %tobool132 = icmp ne ptr %call131, null, !dbg !2161
  br i1 %tobool132, label %if.end146, label %if.then133, !dbg !2162

if.then133:                                       ; preds = %if.end130
  %96 = load ptr, ptr %modules, align 8, !dbg !2163, !tbaa !1899
  %97 = load ptr, ptr @__pyx_m, align 8, !dbg !2163, !tbaa !1899
  %call134 = call i32 @PyDict_SetItemString(ptr noundef %96, ptr noundef @.str.16, ptr noundef %97), !dbg !2163
  %cmp135 = icmp slt i32 %call134, 0, !dbg !2163
  %lnot137 = xor i1 %cmp135, true, !dbg !2163
  %lnot139 = xor i1 %lnot137, true, !dbg !2163
  %lnot.ext140 = zext i1 %lnot139 to i32, !dbg !2163
  %conv141 = sext i32 %lnot.ext140 to i64, !dbg !2163
  %expval142 = call i64 @llvm.expect.i64(i64 %conv141, i64 0), !dbg !2163
  %tobool143 = icmp ne i64 %expval142, 0, !dbg !2163
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !2166

if.then144:                                       ; preds = %if.then133
  %98 = load ptr, ptr @__pyx_f, align 16, !dbg !2167, !tbaa !1899
  store ptr %98, ptr %__pyx_filename, align 8, !dbg !2167, !tbaa !1899
  %99 = load ptr, ptr %__pyx_filename, align 8, !dbg !2167, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2167, !tbaa !1984
  %100 = load i32, ptr %__pyx_lineno, align 4, !dbg !2167, !tbaa !1984
  store i32 6923, ptr %__pyx_clineno, align 4, !dbg !2167, !tbaa !1984
  %101 = load i32, ptr %__pyx_clineno, align 4, !dbg !2167, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2170

if.end145:                                        ; preds = %if.then133
  br label %if.end146, !dbg !2171

if.end146:                                        ; preds = %if.end145, %if.end130
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2172
  br label %cleanup, !dbg !2172

cleanup:                                          ; preds = %if.then144, %if.then129, %if.end146
  call void @llvm.lifetime.end.p0(i64 8, ptr %modules) #11, !dbg !2172
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup489 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %call147 = call i32 @__Pyx_InitCachedBuiltins(), !dbg !2173
  %cmp148 = icmp slt i32 %call147, 0, !dbg !2175
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !2176

if.then150:                                       ; preds = %cleanup.cont
  %102 = load ptr, ptr @__pyx_f, align 16, !dbg !2177, !tbaa !1899
  store ptr %102, ptr %__pyx_filename, align 8, !dbg !2177, !tbaa !1899
  %103 = load ptr, ptr %__pyx_filename, align 8, !dbg !2177, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2177, !tbaa !1984
  %104 = load i32, ptr %__pyx_lineno, align 4, !dbg !2177, !tbaa !1984
  store i32 6928, ptr %__pyx_clineno, align 4, !dbg !2177, !tbaa !1984
  %105 = load i32, ptr %__pyx_clineno, align 4, !dbg !2177, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2180

if.end151:                                        ; preds = %cleanup.cont
  %call152 = call i32 @__Pyx_InitCachedConstants(), !dbg !2181
  %cmp153 = icmp slt i32 %call152, 0, !dbg !2183
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !2184

if.then155:                                       ; preds = %if.end151
  %106 = load ptr, ptr @__pyx_f, align 16, !dbg !2185, !tbaa !1899
  store ptr %106, ptr %__pyx_filename, align 8, !dbg !2185, !tbaa !1899
  %107 = load ptr, ptr %__pyx_filename, align 8, !dbg !2185, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2185, !tbaa !1984
  %108 = load i32, ptr %__pyx_lineno, align 4, !dbg !2185, !tbaa !1984
  store i32 6930, ptr %__pyx_clineno, align 4, !dbg !2185, !tbaa !1984
  %109 = load i32, ptr %__pyx_clineno, align 4, !dbg !2185, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2188

if.end156:                                        ; preds = %if.end151
  %call157 = call i32 @__Pyx_modinit_global_init_code(), !dbg !2189
  %call158 = call i32 @__Pyx_modinit_variable_export_code(), !dbg !2190
  %call159 = call i32 @__Pyx_modinit_function_export_code(), !dbg !2191
  %cmp160 = icmp slt i32 %call159, 0, !dbg !2191
  %lnot162 = xor i1 %cmp160, true, !dbg !2191
  %lnot164 = xor i1 %lnot162, true, !dbg !2191
  %lnot.ext165 = zext i1 %lnot164 to i32, !dbg !2191
  %conv166 = sext i32 %lnot.ext165 to i64, !dbg !2191
  %expval167 = call i64 @llvm.expect.i64(i64 %conv166, i64 0), !dbg !2191
  %tobool168 = icmp ne i64 %expval167, 0, !dbg !2191
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !2193

if.then169:                                       ; preds = %if.end156
  %110 = load ptr, ptr @__pyx_f, align 16, !dbg !2194, !tbaa !1899
  store ptr %110, ptr %__pyx_filename, align 8, !dbg !2194, !tbaa !1899
  %111 = load ptr, ptr %__pyx_filename, align 8, !dbg !2194, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2194, !tbaa !1984
  %112 = load i32, ptr %__pyx_lineno, align 4, !dbg !2194, !tbaa !1984
  store i32 6934, ptr %__pyx_clineno, align 4, !dbg !2194, !tbaa !1984
  %113 = load i32, ptr %__pyx_clineno, align 4, !dbg !2194, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2197

if.end170:                                        ; preds = %if.end156
  %call171 = call i32 @__Pyx_modinit_type_init_code(), !dbg !2198
  %cmp172 = icmp slt i32 %call171, 0, !dbg !2198
  %lnot174 = xor i1 %cmp172, true, !dbg !2198
  %lnot176 = xor i1 %lnot174, true, !dbg !2198
  %lnot.ext177 = zext i1 %lnot176 to i32, !dbg !2198
  %conv178 = sext i32 %lnot.ext177 to i64, !dbg !2198
  %expval179 = call i64 @llvm.expect.i64(i64 %conv178, i64 0), !dbg !2198
  %tobool180 = icmp ne i64 %expval179, 0, !dbg !2198
  br i1 %tobool180, label %if.then181, label %if.end182, !dbg !2200

if.then181:                                       ; preds = %if.end170
  %114 = load ptr, ptr @__pyx_f, align 16, !dbg !2201, !tbaa !1899
  store ptr %114, ptr %__pyx_filename, align 8, !dbg !2201, !tbaa !1899
  %115 = load ptr, ptr %__pyx_filename, align 8, !dbg !2201, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2201, !tbaa !1984
  %116 = load i32, ptr %__pyx_lineno, align 4, !dbg !2201, !tbaa !1984
  store i32 6935, ptr %__pyx_clineno, align 4, !dbg !2201, !tbaa !1984
  %117 = load i32, ptr %__pyx_clineno, align 4, !dbg !2201, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2204

if.end182:                                        ; preds = %if.end170
  %call183 = call i32 @__Pyx_modinit_type_import_code(), !dbg !2205
  %cmp184 = icmp slt i32 %call183, 0, !dbg !2205
  %lnot186 = xor i1 %cmp184, true, !dbg !2205
  %lnot188 = xor i1 %lnot186, true, !dbg !2205
  %lnot.ext189 = zext i1 %lnot188 to i32, !dbg !2205
  %conv190 = sext i32 %lnot.ext189 to i64, !dbg !2205
  %expval191 = call i64 @llvm.expect.i64(i64 %conv190, i64 0), !dbg !2205
  %tobool192 = icmp ne i64 %expval191, 0, !dbg !2205
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !2207

if.then193:                                       ; preds = %if.end182
  %118 = load ptr, ptr @__pyx_f, align 16, !dbg !2208, !tbaa !1899
  store ptr %118, ptr %__pyx_filename, align 8, !dbg !2208, !tbaa !1899
  %119 = load ptr, ptr %__pyx_filename, align 8, !dbg !2208, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2208, !tbaa !1984
  %120 = load i32, ptr %__pyx_lineno, align 4, !dbg !2208, !tbaa !1984
  store i32 6936, ptr %__pyx_clineno, align 4, !dbg !2208, !tbaa !1984
  %121 = load i32, ptr %__pyx_clineno, align 4, !dbg !2208, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2211

if.end194:                                        ; preds = %if.end182
  %call195 = call i32 @__Pyx_modinit_variable_import_code(), !dbg !2212
  %cmp196 = icmp slt i32 %call195, 0, !dbg !2212
  %lnot198 = xor i1 %cmp196, true, !dbg !2212
  %lnot200 = xor i1 %lnot198, true, !dbg !2212
  %lnot.ext201 = zext i1 %lnot200 to i32, !dbg !2212
  %conv202 = sext i32 %lnot.ext201 to i64, !dbg !2212
  %expval203 = call i64 @llvm.expect.i64(i64 %conv202, i64 0), !dbg !2212
  %tobool204 = icmp ne i64 %expval203, 0, !dbg !2212
  br i1 %tobool204, label %if.then205, label %if.end206, !dbg !2214

if.then205:                                       ; preds = %if.end194
  %122 = load ptr, ptr @__pyx_f, align 16, !dbg !2215, !tbaa !1899
  store ptr %122, ptr %__pyx_filename, align 8, !dbg !2215, !tbaa !1899
  %123 = load ptr, ptr %__pyx_filename, align 8, !dbg !2215, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2215, !tbaa !1984
  %124 = load i32, ptr %__pyx_lineno, align 4, !dbg !2215, !tbaa !1984
  store i32 6937, ptr %__pyx_clineno, align 4, !dbg !2215, !tbaa !1984
  %125 = load i32, ptr %__pyx_clineno, align 4, !dbg !2215, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2218

if.end206:                                        ; preds = %if.end194
  %call207 = call i32 @__Pyx_modinit_function_import_code(), !dbg !2219
  %call208 = call ptr @PyList_New(i64 noundef 1), !dbg !2220
  store ptr %call208, ptr %__pyx_t_2, align 8, !dbg !2221, !tbaa !1899
  %126 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2222, !tbaa !1899
  %tobool209 = icmp ne ptr %126, null, !dbg !2222
  %lnot210 = xor i1 %tobool209, true, !dbg !2222
  %lnot212 = xor i1 %lnot210, true, !dbg !2222
  %lnot214 = xor i1 %lnot212, true, !dbg !2222
  %lnot.ext215 = zext i1 %lnot214 to i32, !dbg !2222
  %conv216 = sext i32 %lnot.ext215 to i64, !dbg !2222
  %expval217 = call i64 @llvm.expect.i64(i64 %conv216, i64 0), !dbg !2222
  %tobool218 = icmp ne i64 %expval217, 0, !dbg !2222
  br i1 %tobool218, label %if.then219, label %if.end220, !dbg !2224

if.then219:                                       ; preds = %if.end206
  %127 = load ptr, ptr @__pyx_f, align 16, !dbg !2225, !tbaa !1899
  store ptr %127, ptr %__pyx_filename, align 8, !dbg !2225, !tbaa !1899
  %128 = load ptr, ptr %__pyx_filename, align 8, !dbg !2225, !tbaa !1899
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !2225, !tbaa !1984
  %129 = load i32, ptr %__pyx_lineno, align 4, !dbg !2225, !tbaa !1984
  store i32 6951, ptr %__pyx_clineno, align 4, !dbg !2225, !tbaa !1984
  %130 = load i32, ptr %__pyx_clineno, align 4, !dbg !2225, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2228

if.end220:                                        ; preds = %if.end206
  %131 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2229, !tbaa !1899
  %__pyx_n_s_Machines = getelementptr inbounds %struct.__pyx_mstate, ptr %131, i32 0, i32 24, !dbg !2229
  %132 = load ptr, ptr %__pyx_n_s_Machines, align 8, !dbg !2229, !tbaa !2230
  call void @Py_INCREF(ptr noundef %132), !dbg !2229
  %133 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2231, !tbaa !1899
  %134 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2231, !tbaa !1899
  %__pyx_n_s_Machines221 = getelementptr inbounds %struct.__pyx_mstate, ptr %134, i32 0, i32 24, !dbg !2231
  %135 = load ptr, ptr %__pyx_n_s_Machines221, align 8, !dbg !2231, !tbaa !2230
  call void @PyList_SET_ITEM(ptr noundef %133, i64 noundef 0, ptr noundef %135), !dbg !2231
  br i1 false, label %if.then222, label %if.end223, !dbg !2233

if.then222:                                       ; preds = %if.end220
  %136 = load ptr, ptr @__pyx_f, align 16, !dbg !2234, !tbaa !1899
  store ptr %136, ptr %__pyx_filename, align 8, !dbg !2234, !tbaa !1899
  %137 = load ptr, ptr %__pyx_filename, align 8, !dbg !2234, !tbaa !1899
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !2234, !tbaa !1984
  %138 = load i32, ptr %__pyx_lineno, align 4, !dbg !2234, !tbaa !1984
  store i32 6955, ptr %__pyx_clineno, align 4, !dbg !2234, !tbaa !1984
  %139 = load i32, ptr %__pyx_clineno, align 4, !dbg !2234, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2237

if.end223:                                        ; preds = %if.end220
  %140 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2238, !tbaa !1899
  %__pyx_n_s__5 = getelementptr inbounds %struct.__pyx_mstate, ptr %140, i32 0, i32 38, !dbg !2238
  %141 = load ptr, ptr %__pyx_n_s__5, align 8, !dbg !2238, !tbaa !2239
  %142 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2240, !tbaa !1899
  %call224 = call ptr @__Pyx_Import(ptr noundef %141, ptr noundef %142, i32 noundef 1), !dbg !2241
  store ptr %call224, ptr %__pyx_t_3, align 8, !dbg !2242, !tbaa !1899
  %143 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2243, !tbaa !1899
  %tobool225 = icmp ne ptr %143, null, !dbg !2243
  %lnot226 = xor i1 %tobool225, true, !dbg !2243
  %lnot228 = xor i1 %lnot226, true, !dbg !2243
  %lnot230 = xor i1 %lnot228, true, !dbg !2243
  %lnot.ext231 = zext i1 %lnot230 to i32, !dbg !2243
  %conv232 = sext i32 %lnot.ext231 to i64, !dbg !2243
  %expval233 = call i64 @llvm.expect.i64(i64 %conv232, i64 0), !dbg !2243
  %tobool234 = icmp ne i64 %expval233, 0, !dbg !2243
  br i1 %tobool234, label %if.then235, label %if.end236, !dbg !2245

if.then235:                                       ; preds = %if.end223
  %144 = load ptr, ptr @__pyx_f, align 16, !dbg !2246, !tbaa !1899
  store ptr %144, ptr %__pyx_filename, align 8, !dbg !2246, !tbaa !1899
  %145 = load ptr, ptr %__pyx_filename, align 8, !dbg !2246, !tbaa !1899
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !2246, !tbaa !1984
  %146 = load i32, ptr %__pyx_lineno, align 4, !dbg !2246, !tbaa !1984
  store i32 6956, ptr %__pyx_clineno, align 4, !dbg !2246, !tbaa !1984
  %147 = load i32, ptr %__pyx_clineno, align 4, !dbg !2246, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2249

if.end236:                                        ; preds = %if.end223
  %148 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2250, !tbaa !1899
  call void @Py_DECREF(ptr noundef %148), !dbg !2250
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2251, !tbaa !1899
  %149 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2252, !tbaa !1899
  %150 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2253, !tbaa !1899
  %__pyx_n_s_Machines237 = getelementptr inbounds %struct.__pyx_mstate, ptr %150, i32 0, i32 24, !dbg !2253
  %151 = load ptr, ptr %__pyx_n_s_Machines237, align 8, !dbg !2253, !tbaa !2230
  %call238 = call ptr @__Pyx_ImportFrom(ptr noundef %149, ptr noundef %151), !dbg !2254
  store ptr %call238, ptr %__pyx_t_2, align 8, !dbg !2255, !tbaa !1899
  %152 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2256, !tbaa !1899
  %tobool239 = icmp ne ptr %152, null, !dbg !2256
  %lnot240 = xor i1 %tobool239, true, !dbg !2256
  %lnot242 = xor i1 %lnot240, true, !dbg !2256
  %lnot244 = xor i1 %lnot242, true, !dbg !2256
  %lnot.ext245 = zext i1 %lnot244 to i32, !dbg !2256
  %conv246 = sext i32 %lnot.ext245 to i64, !dbg !2256
  %expval247 = call i64 @llvm.expect.i64(i64 %conv246, i64 0), !dbg !2256
  %tobool248 = icmp ne i64 %expval247, 0, !dbg !2256
  br i1 %tobool248, label %if.then249, label %if.end250, !dbg !2258

if.then249:                                       ; preds = %if.end236
  %153 = load ptr, ptr @__pyx_f, align 16, !dbg !2259, !tbaa !1899
  store ptr %153, ptr %__pyx_filename, align 8, !dbg !2259, !tbaa !1899
  %154 = load ptr, ptr %__pyx_filename, align 8, !dbg !2259, !tbaa !1899
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !2259, !tbaa !1984
  %155 = load i32, ptr %__pyx_lineno, align 4, !dbg !2259, !tbaa !1984
  store i32 6959, ptr %__pyx_clineno, align 4, !dbg !2259, !tbaa !1984
  %156 = load i32, ptr %__pyx_clineno, align 4, !dbg !2259, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2262

if.end250:                                        ; preds = %if.end236
  %157 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2263, !tbaa !1899
  %__pyx_d251 = getelementptr inbounds %struct.__pyx_mstate, ptr %157, i32 0, i32 0, !dbg !2263
  %158 = load ptr, ptr %__pyx_d251, align 8, !dbg !2263, !tbaa !2019
  %159 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2265, !tbaa !1899
  %__pyx_n_s_Machines252 = getelementptr inbounds %struct.__pyx_mstate, ptr %159, i32 0, i32 24, !dbg !2265
  %160 = load ptr, ptr %__pyx_n_s_Machines252, align 8, !dbg !2265, !tbaa !2230
  %161 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2266, !tbaa !1899
  %call253 = call i32 @PyDict_SetItem(ptr noundef %158, ptr noundef %160, ptr noundef %161), !dbg !2267
  %cmp254 = icmp slt i32 %call253, 0, !dbg !2268
  br i1 %cmp254, label %if.then256, label %if.end257, !dbg !2269

if.then256:                                       ; preds = %if.end250
  %162 = load ptr, ptr @__pyx_f, align 16, !dbg !2270, !tbaa !1899
  store ptr %162, ptr %__pyx_filename, align 8, !dbg !2270, !tbaa !1899
  %163 = load ptr, ptr %__pyx_filename, align 8, !dbg !2270, !tbaa !1899
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !2270, !tbaa !1984
  %164 = load i32, ptr %__pyx_lineno, align 4, !dbg !2270, !tbaa !1984
  store i32 6961, ptr %__pyx_clineno, align 4, !dbg !2270, !tbaa !1984
  %165 = load i32, ptr %__pyx_clineno, align 4, !dbg !2270, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2273

if.end257:                                        ; preds = %if.end250
  %166 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2274, !tbaa !1899
  call void @Py_DECREF(ptr noundef %166), !dbg !2274
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2275, !tbaa !1899
  %167 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2276, !tbaa !1899
  call void @Py_DECREF(ptr noundef %167), !dbg !2276
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2277, !tbaa !1899
  %call258 = call ptr @PyList_New(i64 noundef 1), !dbg !2278
  store ptr %call258, ptr %__pyx_t_3, align 8, !dbg !2279, !tbaa !1899
  %168 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2280, !tbaa !1899
  %tobool259 = icmp ne ptr %168, null, !dbg !2280
  %lnot260 = xor i1 %tobool259, true, !dbg !2280
  %lnot262 = xor i1 %lnot260, true, !dbg !2280
  %lnot264 = xor i1 %lnot262, true, !dbg !2280
  %lnot.ext265 = zext i1 %lnot264 to i32, !dbg !2280
  %conv266 = sext i32 %lnot.ext265 to i64, !dbg !2280
  %expval267 = call i64 @llvm.expect.i64(i64 %conv266, i64 0), !dbg !2280
  %tobool268 = icmp ne i64 %expval267, 0, !dbg !2280
  br i1 %tobool268, label %if.then269, label %if.end270, !dbg !2282

if.then269:                                       ; preds = %if.end257
  %169 = load ptr, ptr @__pyx_f, align 16, !dbg !2283, !tbaa !1899
  store ptr %169, ptr %__pyx_filename, align 8, !dbg !2283, !tbaa !1899
  %170 = load ptr, ptr %__pyx_filename, align 8, !dbg !2283, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !2283, !tbaa !1984
  %171 = load i32, ptr %__pyx_lineno, align 4, !dbg !2283, !tbaa !1984
  store i32 6972, ptr %__pyx_clineno, align 4, !dbg !2283, !tbaa !1984
  %172 = load i32, ptr %__pyx_clineno, align 4, !dbg !2283, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2286

if.end270:                                        ; preds = %if.end257
  %173 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2287, !tbaa !1899
  %__pyx_n_s_LOWEST_PRIORITY = getelementptr inbounds %struct.__pyx_mstate, ptr %173, i32 0, i32 23, !dbg !2287
  %174 = load ptr, ptr %__pyx_n_s_LOWEST_PRIORITY, align 8, !dbg !2287, !tbaa !2288
  call void @Py_INCREF(ptr noundef %174), !dbg !2287
  %175 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2289, !tbaa !1899
  %176 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2289, !tbaa !1899
  %__pyx_n_s_LOWEST_PRIORITY271 = getelementptr inbounds %struct.__pyx_mstate, ptr %176, i32 0, i32 23, !dbg !2289
  %177 = load ptr, ptr %__pyx_n_s_LOWEST_PRIORITY271, align 8, !dbg !2289, !tbaa !2288
  call void @PyList_SET_ITEM(ptr noundef %175, i64 noundef 0, ptr noundef %177), !dbg !2289
  br i1 false, label %if.then272, label %if.end273, !dbg !2291

if.then272:                                       ; preds = %if.end270
  %178 = load ptr, ptr @__pyx_f, align 16, !dbg !2292, !tbaa !1899
  store ptr %178, ptr %__pyx_filename, align 8, !dbg !2292, !tbaa !1899
  %179 = load ptr, ptr %__pyx_filename, align 8, !dbg !2292, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !2292, !tbaa !1984
  %180 = load i32, ptr %__pyx_lineno, align 4, !dbg !2292, !tbaa !1984
  store i32 6976, ptr %__pyx_clineno, align 4, !dbg !2292, !tbaa !1984
  %181 = load i32, ptr %__pyx_clineno, align 4, !dbg !2292, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2295

if.end273:                                        ; preds = %if.end270
  %182 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2296, !tbaa !1899
  %__pyx_n_s_Machines274 = getelementptr inbounds %struct.__pyx_mstate, ptr %182, i32 0, i32 24, !dbg !2296
  %183 = load ptr, ptr %__pyx_n_s_Machines274, align 8, !dbg !2296, !tbaa !2230
  %184 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2297, !tbaa !1899
  %call275 = call ptr @__Pyx_Import(ptr noundef %183, ptr noundef %184, i32 noundef 1), !dbg !2298
  store ptr %call275, ptr %__pyx_t_2, align 8, !dbg !2299, !tbaa !1899
  %185 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2300, !tbaa !1899
  %tobool276 = icmp ne ptr %185, null, !dbg !2300
  %lnot277 = xor i1 %tobool276, true, !dbg !2300
  %lnot279 = xor i1 %lnot277, true, !dbg !2300
  %lnot281 = xor i1 %lnot279, true, !dbg !2300
  %lnot.ext282 = zext i1 %lnot281 to i32, !dbg !2300
  %conv283 = sext i32 %lnot.ext282 to i64, !dbg !2300
  %expval284 = call i64 @llvm.expect.i64(i64 %conv283, i64 0), !dbg !2300
  %tobool285 = icmp ne i64 %expval284, 0, !dbg !2300
  br i1 %tobool285, label %if.then286, label %if.end287, !dbg !2302

if.then286:                                       ; preds = %if.end273
  %186 = load ptr, ptr @__pyx_f, align 16, !dbg !2303, !tbaa !1899
  store ptr %186, ptr %__pyx_filename, align 8, !dbg !2303, !tbaa !1899
  %187 = load ptr, ptr %__pyx_filename, align 8, !dbg !2303, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !2303, !tbaa !1984
  %188 = load i32, ptr %__pyx_lineno, align 4, !dbg !2303, !tbaa !1984
  store i32 6977, ptr %__pyx_clineno, align 4, !dbg !2303, !tbaa !1984
  %189 = load i32, ptr %__pyx_clineno, align 4, !dbg !2303, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2306

if.end287:                                        ; preds = %if.end273
  %190 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2307, !tbaa !1899
  call void @Py_DECREF(ptr noundef %190), !dbg !2307
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2308, !tbaa !1899
  %191 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2309, !tbaa !1899
  %192 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2310, !tbaa !1899
  %__pyx_n_s_LOWEST_PRIORITY288 = getelementptr inbounds %struct.__pyx_mstate, ptr %192, i32 0, i32 23, !dbg !2310
  %193 = load ptr, ptr %__pyx_n_s_LOWEST_PRIORITY288, align 8, !dbg !2310, !tbaa !2288
  %call289 = call ptr @__Pyx_ImportFrom(ptr noundef %191, ptr noundef %193), !dbg !2311
  store ptr %call289, ptr %__pyx_t_3, align 8, !dbg !2312, !tbaa !1899
  %194 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2313, !tbaa !1899
  %tobool290 = icmp ne ptr %194, null, !dbg !2313
  %lnot291 = xor i1 %tobool290, true, !dbg !2313
  %lnot293 = xor i1 %lnot291, true, !dbg !2313
  %lnot295 = xor i1 %lnot293, true, !dbg !2313
  %lnot.ext296 = zext i1 %lnot295 to i32, !dbg !2313
  %conv297 = sext i32 %lnot.ext296 to i64, !dbg !2313
  %expval298 = call i64 @llvm.expect.i64(i64 %conv297, i64 0), !dbg !2313
  %tobool299 = icmp ne i64 %expval298, 0, !dbg !2313
  br i1 %tobool299, label %if.then300, label %if.end301, !dbg !2315

if.then300:                                       ; preds = %if.end287
  %195 = load ptr, ptr @__pyx_f, align 16, !dbg !2316, !tbaa !1899
  store ptr %195, ptr %__pyx_filename, align 8, !dbg !2316, !tbaa !1899
  %196 = load ptr, ptr %__pyx_filename, align 8, !dbg !2316, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !2316, !tbaa !1984
  %197 = load i32, ptr %__pyx_lineno, align 4, !dbg !2316, !tbaa !1984
  store i32 6980, ptr %__pyx_clineno, align 4, !dbg !2316, !tbaa !1984
  %198 = load i32, ptr %__pyx_clineno, align 4, !dbg !2316, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2319

if.end301:                                        ; preds = %if.end287
  %199 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2320, !tbaa !1899
  %__pyx_d302 = getelementptr inbounds %struct.__pyx_mstate, ptr %199, i32 0, i32 0, !dbg !2320
  %200 = load ptr, ptr %__pyx_d302, align 8, !dbg !2320, !tbaa !2019
  %201 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2322, !tbaa !1899
  %__pyx_n_s_LOWEST_PRIORITY303 = getelementptr inbounds %struct.__pyx_mstate, ptr %201, i32 0, i32 23, !dbg !2322
  %202 = load ptr, ptr %__pyx_n_s_LOWEST_PRIORITY303, align 8, !dbg !2322, !tbaa !2288
  %203 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2323, !tbaa !1899
  %call304 = call i32 @PyDict_SetItem(ptr noundef %200, ptr noundef %202, ptr noundef %203), !dbg !2324
  %cmp305 = icmp slt i32 %call304, 0, !dbg !2325
  br i1 %cmp305, label %if.then307, label %if.end308, !dbg !2326

if.then307:                                       ; preds = %if.end301
  %204 = load ptr, ptr @__pyx_f, align 16, !dbg !2327, !tbaa !1899
  store ptr %204, ptr %__pyx_filename, align 8, !dbg !2327, !tbaa !1899
  %205 = load ptr, ptr %__pyx_filename, align 8, !dbg !2327, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !2327, !tbaa !1984
  %206 = load i32, ptr %__pyx_lineno, align 4, !dbg !2327, !tbaa !1984
  store i32 6982, ptr %__pyx_clineno, align 4, !dbg !2327, !tbaa !1984
  %207 = load i32, ptr %__pyx_clineno, align 4, !dbg !2327, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2330

if.end308:                                        ; preds = %if.end301
  %208 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2331, !tbaa !1899
  call void @Py_DECREF(ptr noundef %208), !dbg !2331
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2332, !tbaa !1899
  %209 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2333, !tbaa !1899
  call void @Py_DECREF(ptr noundef %209), !dbg !2333
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2334, !tbaa !1899
  %call309 = call ptr @PyList_New(i64 noundef 1), !dbg !2335
  store ptr %call309, ptr %__pyx_t_2, align 8, !dbg !2336, !tbaa !1899
  %210 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2337, !tbaa !1899
  %tobool310 = icmp ne ptr %210, null, !dbg !2337
  %lnot311 = xor i1 %tobool310, true, !dbg !2337
  %lnot313 = xor i1 %lnot311, true, !dbg !2337
  %lnot315 = xor i1 %lnot313, true, !dbg !2337
  %lnot.ext316 = zext i1 %lnot315 to i32, !dbg !2337
  %conv317 = sext i32 %lnot.ext316 to i64, !dbg !2337
  %expval318 = call i64 @llvm.expect.i64(i64 %conv317, i64 0), !dbg !2337
  %tobool319 = icmp ne i64 %expval318, 0, !dbg !2337
  br i1 %tobool319, label %if.then320, label %if.end321, !dbg !2339

if.then320:                                       ; preds = %if.end308
  %211 = load ptr, ptr @__pyx_f, align 16, !dbg !2340, !tbaa !1899
  store ptr %211, ptr %__pyx_filename, align 8, !dbg !2340, !tbaa !1899
  %212 = load ptr, ptr %__pyx_filename, align 8, !dbg !2340, !tbaa !1899
  store i32 11, ptr %__pyx_lineno, align 4, !dbg !2340, !tbaa !1984
  %213 = load i32, ptr %__pyx_lineno, align 4, !dbg !2340, !tbaa !1984
  store i32 6993, ptr %__pyx_clineno, align 4, !dbg !2340, !tbaa !1984
  %214 = load i32, ptr %__pyx_clineno, align 4, !dbg !2340, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2343

if.end321:                                        ; preds = %if.end308
  %215 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2344, !tbaa !1899
  %__pyx_n_s_TransitionMap = getelementptr inbounds %struct.__pyx_mstate, ptr %215, i32 0, i32 33, !dbg !2344
  %216 = load ptr, ptr %__pyx_n_s_TransitionMap, align 8, !dbg !2344, !tbaa !2345
  call void @Py_INCREF(ptr noundef %216), !dbg !2344
  %217 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2346, !tbaa !1899
  %218 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2346, !tbaa !1899
  %__pyx_n_s_TransitionMap322 = getelementptr inbounds %struct.__pyx_mstate, ptr %218, i32 0, i32 33, !dbg !2346
  %219 = load ptr, ptr %__pyx_n_s_TransitionMap322, align 8, !dbg !2346, !tbaa !2345
  call void @PyList_SET_ITEM(ptr noundef %217, i64 noundef 0, ptr noundef %219), !dbg !2346
  br i1 false, label %if.then323, label %if.end324, !dbg !2348

if.then323:                                       ; preds = %if.end321
  %220 = load ptr, ptr @__pyx_f, align 16, !dbg !2349, !tbaa !1899
  store ptr %220, ptr %__pyx_filename, align 8, !dbg !2349, !tbaa !1899
  %221 = load ptr, ptr %__pyx_filename, align 8, !dbg !2349, !tbaa !1899
  store i32 11, ptr %__pyx_lineno, align 4, !dbg !2349, !tbaa !1984
  %222 = load i32, ptr %__pyx_lineno, align 4, !dbg !2349, !tbaa !1984
  store i32 6997, ptr %__pyx_clineno, align 4, !dbg !2349, !tbaa !1984
  %223 = load i32, ptr %__pyx_clineno, align 4, !dbg !2349, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2352

if.end324:                                        ; preds = %if.end321
  %224 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2353, !tbaa !1899
  %__pyx_n_s_Transitions = getelementptr inbounds %struct.__pyx_mstate, ptr %224, i32 0, i32 34, !dbg !2353
  %225 = load ptr, ptr %__pyx_n_s_Transitions, align 8, !dbg !2353, !tbaa !2354
  %226 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2355, !tbaa !1899
  %call325 = call ptr @__Pyx_Import(ptr noundef %225, ptr noundef %226, i32 noundef 1), !dbg !2356
  store ptr %call325, ptr %__pyx_t_3, align 8, !dbg !2357, !tbaa !1899
  %227 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2358, !tbaa !1899
  %tobool326 = icmp ne ptr %227, null, !dbg !2358
  %lnot327 = xor i1 %tobool326, true, !dbg !2358
  %lnot329 = xor i1 %lnot327, true, !dbg !2358
  %lnot331 = xor i1 %lnot329, true, !dbg !2358
  %lnot.ext332 = zext i1 %lnot331 to i32, !dbg !2358
  %conv333 = sext i32 %lnot.ext332 to i64, !dbg !2358
  %expval334 = call i64 @llvm.expect.i64(i64 %conv333, i64 0), !dbg !2358
  %tobool335 = icmp ne i64 %expval334, 0, !dbg !2358
  br i1 %tobool335, label %if.then336, label %if.end337, !dbg !2360

if.then336:                                       ; preds = %if.end324
  %228 = load ptr, ptr @__pyx_f, align 16, !dbg !2361, !tbaa !1899
  store ptr %228, ptr %__pyx_filename, align 8, !dbg !2361, !tbaa !1899
  %229 = load ptr, ptr %__pyx_filename, align 8, !dbg !2361, !tbaa !1899
  store i32 11, ptr %__pyx_lineno, align 4, !dbg !2361, !tbaa !1984
  %230 = load i32, ptr %__pyx_lineno, align 4, !dbg !2361, !tbaa !1984
  store i32 6998, ptr %__pyx_clineno, align 4, !dbg !2361, !tbaa !1984
  %231 = load i32, ptr %__pyx_clineno, align 4, !dbg !2361, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2364

if.end337:                                        ; preds = %if.end324
  %232 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2365, !tbaa !1899
  call void @Py_DECREF(ptr noundef %232), !dbg !2365
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2366, !tbaa !1899
  %233 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2367, !tbaa !1899
  call void @Py_DECREF(ptr noundef %233), !dbg !2367
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2368, !tbaa !1899
  %234 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2369, !tbaa !1899
  %__pyx_n_s_nfa_to_dfa = getelementptr inbounds %struct.__pyx_mstate, ptr %234, i32 0, i32 65, !dbg !2369
  %235 = load ptr, ptr %__pyx_n_s_nfa_to_dfa, align 8, !dbg !2369, !tbaa !2370
  %236 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2371, !tbaa !1899
  %__pyx_n_s_Cython_Plex_DFA = getelementptr inbounds %struct.__pyx_mstate, ptr %236, i32 0, i32 20, !dbg !2371
  %237 = load ptr, ptr %__pyx_n_s_Cython_Plex_DFA, align 8, !dbg !2371, !tbaa !2372
  %238 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2373, !tbaa !1899
  %__pyx_d338 = getelementptr inbounds %struct.__pyx_mstate, ptr %238, i32 0, i32 0, !dbg !2373
  %239 = load ptr, ptr %__pyx_d338, align 8, !dbg !2373, !tbaa !2019
  %240 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2374, !tbaa !1899
  %__pyx_codeobj__7 = getelementptr inbounds %struct.__pyx_mstate, ptr %240, i32 0, i32 103, !dbg !2374
  %241 = load ptr, ptr %__pyx_codeobj__7, align 8, !dbg !2374, !tbaa !2375
  %call339 = call ptr @__Pyx_CyFunction_New(ptr noundef @__pyx_mdef_6Cython_4Plex_3DFA_1nfa_to_dfa, i32 noundef 0, ptr noundef %235, ptr noundef null, ptr noundef %237, ptr noundef %239, ptr noundef %241), !dbg !2376
  store ptr %call339, ptr %__pyx_t_3, align 8, !dbg !2377, !tbaa !1899
  %242 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2378, !tbaa !1899
  %tobool340 = icmp ne ptr %242, null, !dbg !2378
  %lnot341 = xor i1 %tobool340, true, !dbg !2378
  %lnot343 = xor i1 %lnot341, true, !dbg !2378
  %lnot345 = xor i1 %lnot343, true, !dbg !2378
  %lnot.ext346 = zext i1 %lnot345 to i32, !dbg !2378
  %conv347 = sext i32 %lnot.ext346 to i64, !dbg !2378
  %expval348 = call i64 @llvm.expect.i64(i64 %conv347, i64 0), !dbg !2378
  %tobool349 = icmp ne i64 %expval348, 0, !dbg !2378
  br i1 %tobool349, label %if.then350, label %if.end351, !dbg !2380

if.then350:                                       ; preds = %if.end337
  %243 = load ptr, ptr @__pyx_f, align 16, !dbg !2381, !tbaa !1899
  store ptr %243, ptr %__pyx_filename, align 8, !dbg !2381, !tbaa !1899
  %244 = load ptr, ptr %__pyx_filename, align 8, !dbg !2381, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !2381, !tbaa !1984
  %245 = load i32, ptr %__pyx_lineno, align 4, !dbg !2381, !tbaa !1984
  store i32 7010, ptr %__pyx_clineno, align 4, !dbg !2381, !tbaa !1984
  %246 = load i32, ptr %__pyx_clineno, align 4, !dbg !2381, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2384

if.end351:                                        ; preds = %if.end337
  %247 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2385, !tbaa !1899
  %248 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2386, !tbaa !1899
  %__pyx_tuple__8 = getelementptr inbounds %struct.__pyx_mstate, ptr %248, i32 0, i32 97, !dbg !2386
  %249 = load ptr, ptr %__pyx_tuple__8, align 8, !dbg !2386, !tbaa !2387
  call void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %247, ptr noundef %249), !dbg !2388
  %250 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2389, !tbaa !1899
  %__pyx_d352 = getelementptr inbounds %struct.__pyx_mstate, ptr %250, i32 0, i32 0, !dbg !2389
  %251 = load ptr, ptr %__pyx_d352, align 8, !dbg !2389, !tbaa !2019
  %252 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2391, !tbaa !1899
  %__pyx_n_s_nfa_to_dfa353 = getelementptr inbounds %struct.__pyx_mstate, ptr %252, i32 0, i32 65, !dbg !2391
  %253 = load ptr, ptr %__pyx_n_s_nfa_to_dfa353, align 8, !dbg !2391, !tbaa !2370
  %254 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2392, !tbaa !1899
  %call354 = call i32 @PyDict_SetItem(ptr noundef %251, ptr noundef %253, ptr noundef %254), !dbg !2393
  %cmp355 = icmp slt i32 %call354, 0, !dbg !2394
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !2395

if.then357:                                       ; preds = %if.end351
  %255 = load ptr, ptr @__pyx_f, align 16, !dbg !2396, !tbaa !1899
  store ptr %255, ptr %__pyx_filename, align 8, !dbg !2396, !tbaa !1899
  %256 = load ptr, ptr %__pyx_filename, align 8, !dbg !2396, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !2396, !tbaa !1984
  %257 = load i32, ptr %__pyx_lineno, align 4, !dbg !2396, !tbaa !1984
  store i32 7013, ptr %__pyx_clineno, align 4, !dbg !2396, !tbaa !1984
  %258 = load i32, ptr %__pyx_clineno, align 4, !dbg !2396, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2399

if.end358:                                        ; preds = %if.end351
  %259 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2400, !tbaa !1899
  call void @Py_DECREF(ptr noundef %259), !dbg !2400
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2401, !tbaa !1899
  %260 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2402, !tbaa !1899
  %__pyx_n_s_StateMap_new_to_old = getelementptr inbounds %struct.__pyx_mstate, ptr %260, i32 0, i32 31, !dbg !2402
  %261 = load ptr, ptr %__pyx_n_s_StateMap_new_to_old, align 8, !dbg !2402, !tbaa !2403
  %262 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2404, !tbaa !1899
  %__pyx_n_s_Cython_Plex_DFA359 = getelementptr inbounds %struct.__pyx_mstate, ptr %262, i32 0, i32 20, !dbg !2404
  %263 = load ptr, ptr %__pyx_n_s_Cython_Plex_DFA359, align 8, !dbg !2404, !tbaa !2372
  %264 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2405, !tbaa !1899
  %__pyx_d360 = getelementptr inbounds %struct.__pyx_mstate, ptr %264, i32 0, i32 0, !dbg !2405
  %265 = load ptr, ptr %__pyx_d360, align 8, !dbg !2405, !tbaa !2019
  %266 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2406, !tbaa !1899
  %__pyx_codeobj__10 = getelementptr inbounds %struct.__pyx_mstate, ptr %266, i32 0, i32 104, !dbg !2406
  %267 = load ptr, ptr %__pyx_codeobj__10, align 8, !dbg !2406, !tbaa !2407
  %call361 = call ptr @__Pyx_CyFunction_New(ptr noundef @__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_3new_to_old, i32 noundef 4, ptr noundef %261, ptr noundef null, ptr noundef %263, ptr noundef %265, ptr noundef %267), !dbg !2408
  store ptr %call361, ptr %__pyx_t_3, align 8, !dbg !2409, !tbaa !1899
  %268 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2410, !tbaa !1899
  %tobool362 = icmp ne ptr %268, null, !dbg !2410
  %lnot363 = xor i1 %tobool362, true, !dbg !2410
  %lnot365 = xor i1 %lnot363, true, !dbg !2410
  %lnot367 = xor i1 %lnot365, true, !dbg !2410
  %lnot.ext368 = zext i1 %lnot367 to i32, !dbg !2410
  %conv369 = sext i32 %lnot.ext368 to i64, !dbg !2410
  %expval370 = call i64 @llvm.expect.i64(i64 %conv369, i64 0), !dbg !2410
  %tobool371 = icmp ne i64 %expval370, 0, !dbg !2410
  br i1 %tobool371, label %if.then372, label %if.end373, !dbg !2412

if.then372:                                       ; preds = %if.end358
  %269 = load ptr, ptr @__pyx_f, align 16, !dbg !2413, !tbaa !1899
  store ptr %269, ptr %__pyx_filename, align 8, !dbg !2413, !tbaa !1899
  %270 = load ptr, ptr %__pyx_filename, align 8, !dbg !2413, !tbaa !1899
  store i32 132, ptr %__pyx_lineno, align 4, !dbg !2413, !tbaa !1984
  %271 = load i32, ptr %__pyx_lineno, align 4, !dbg !2413, !tbaa !1984
  store i32 7023, ptr %__pyx_clineno, align 4, !dbg !2413, !tbaa !1984
  %272 = load i32, ptr %__pyx_clineno, align 4, !dbg !2413, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2416

if.end373:                                        ; preds = %if.end358
  %273 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2417, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %273, i32 0, i32 18, !dbg !2417
  %274 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !2417, !tbaa !2419
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %274, i32 0, i32 31, !dbg !2417
  %275 = load ptr, ptr %tp_dict, align 8, !dbg !2417, !tbaa !2420
  %276 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2417, !tbaa !1899
  %__pyx_n_s_new_to_old = getelementptr inbounds %struct.__pyx_mstate, ptr %276, i32 0, i32 64, !dbg !2417
  %277 = load ptr, ptr %__pyx_n_s_new_to_old, align 8, !dbg !2417, !tbaa !2425
  %278 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2417, !tbaa !1899
  %call374 = call i32 @PyDict_SetItem(ptr noundef %275, ptr noundef %277, ptr noundef %278), !dbg !2417
  %cmp375 = icmp slt i32 %call374, 0, !dbg !2426
  br i1 %cmp375, label %if.then377, label %if.end378, !dbg !2427

if.then377:                                       ; preds = %if.end373
  %279 = load ptr, ptr @__pyx_f, align 16, !dbg !2428, !tbaa !1899
  store ptr %279, ptr %__pyx_filename, align 8, !dbg !2428, !tbaa !1899
  %280 = load ptr, ptr %__pyx_filename, align 8, !dbg !2428, !tbaa !1899
  store i32 132, ptr %__pyx_lineno, align 4, !dbg !2428, !tbaa !1984
  %281 = load i32, ptr %__pyx_lineno, align 4, !dbg !2428, !tbaa !1984
  store i32 7025, ptr %__pyx_clineno, align 4, !dbg !2428, !tbaa !1984
  %282 = load i32, ptr %__pyx_clineno, align 4, !dbg !2428, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2431

if.end378:                                        ; preds = %if.end373
  %283 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2432, !tbaa !1899
  call void @Py_DECREF(ptr noundef %283), !dbg !2432
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2433, !tbaa !1899
  %284 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2434, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap379 = getelementptr inbounds %struct.__pyx_mstate, ptr %284, i32 0, i32 18, !dbg !2434
  %285 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap379, align 8, !dbg !2434, !tbaa !2419
  call void @PyType_Modified(ptr noundef %285), !dbg !2435
  %286 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2436, !tbaa !1899
  %__pyx_n_s_StateMap_dump = getelementptr inbounds %struct.__pyx_mstate, ptr %286, i32 0, i32 30, !dbg !2436
  %287 = load ptr, ptr %__pyx_n_s_StateMap_dump, align 8, !dbg !2436, !tbaa !2437
  %288 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2438, !tbaa !1899
  %__pyx_n_s_Cython_Plex_DFA380 = getelementptr inbounds %struct.__pyx_mstate, ptr %288, i32 0, i32 20, !dbg !2438
  %289 = load ptr, ptr %__pyx_n_s_Cython_Plex_DFA380, align 8, !dbg !2438, !tbaa !2372
  %290 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2439, !tbaa !1899
  %__pyx_d381 = getelementptr inbounds %struct.__pyx_mstate, ptr %290, i32 0, i32 0, !dbg !2439
  %291 = load ptr, ptr %__pyx_d381, align 8, !dbg !2439, !tbaa !2019
  %292 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2440, !tbaa !1899
  %__pyx_codeobj__12 = getelementptr inbounds %struct.__pyx_mstate, ptr %292, i32 0, i32 105, !dbg !2440
  %293 = load ptr, ptr %__pyx_codeobj__12, align 8, !dbg !2440, !tbaa !2441
  %call382 = call ptr @__Pyx_CyFunction_New(ptr noundef @__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_5dump, i32 noundef 4, ptr noundef %287, ptr noundef null, ptr noundef %289, ptr noundef %291, ptr noundef %293), !dbg !2442
  store ptr %call382, ptr %__pyx_t_3, align 8, !dbg !2443, !tbaa !1899
  %294 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2444, !tbaa !1899
  %tobool383 = icmp ne ptr %294, null, !dbg !2444
  %lnot384 = xor i1 %tobool383, true, !dbg !2444
  %lnot386 = xor i1 %lnot384, true, !dbg !2444
  %lnot388 = xor i1 %lnot386, true, !dbg !2444
  %lnot.ext389 = zext i1 %lnot388 to i32, !dbg !2444
  %conv390 = sext i32 %lnot.ext389 to i64, !dbg !2444
  %expval391 = call i64 @llvm.expect.i64(i64 %conv390, i64 0), !dbg !2444
  %tobool392 = icmp ne i64 %expval391, 0, !dbg !2444
  br i1 %tobool392, label %if.then393, label %if.end394, !dbg !2446

if.then393:                                       ; preds = %if.end378
  %295 = load ptr, ptr @__pyx_f, align 16, !dbg !2447, !tbaa !1899
  store ptr %295, ptr %__pyx_filename, align 8, !dbg !2447, !tbaa !1899
  %296 = load ptr, ptr %__pyx_filename, align 8, !dbg !2447, !tbaa !1899
  store i32 143, ptr %__pyx_lineno, align 4, !dbg !2447, !tbaa !1984
  %297 = load i32, ptr %__pyx_lineno, align 4, !dbg !2447, !tbaa !1984
  store i32 7036, ptr %__pyx_clineno, align 4, !dbg !2447, !tbaa !1984
  %298 = load i32, ptr %__pyx_clineno, align 4, !dbg !2447, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2450

if.end394:                                        ; preds = %if.end378
  %299 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2451, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap395 = getelementptr inbounds %struct.__pyx_mstate, ptr %299, i32 0, i32 18, !dbg !2451
  %300 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap395, align 8, !dbg !2451, !tbaa !2419
  %tp_dict396 = getelementptr inbounds %struct._typeobject, ptr %300, i32 0, i32 31, !dbg !2451
  %301 = load ptr, ptr %tp_dict396, align 8, !dbg !2451, !tbaa !2420
  %302 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2451, !tbaa !1899
  %__pyx_n_s_dump = getelementptr inbounds %struct.__pyx_mstate, ptr %302, i32 0, i32 46, !dbg !2451
  %303 = load ptr, ptr %__pyx_n_s_dump, align 8, !dbg !2451, !tbaa !2453
  %304 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2451, !tbaa !1899
  %call397 = call i32 @PyDict_SetItem(ptr noundef %301, ptr noundef %303, ptr noundef %304), !dbg !2451
  %cmp398 = icmp slt i32 %call397, 0, !dbg !2454
  br i1 %cmp398, label %if.then400, label %if.end401, !dbg !2455

if.then400:                                       ; preds = %if.end394
  %305 = load ptr, ptr @__pyx_f, align 16, !dbg !2456, !tbaa !1899
  store ptr %305, ptr %__pyx_filename, align 8, !dbg !2456, !tbaa !1899
  %306 = load ptr, ptr %__pyx_filename, align 8, !dbg !2456, !tbaa !1899
  store i32 143, ptr %__pyx_lineno, align 4, !dbg !2456, !tbaa !1984
  %307 = load i32, ptr %__pyx_lineno, align 4, !dbg !2456, !tbaa !1984
  store i32 7038, ptr %__pyx_clineno, align 4, !dbg !2456, !tbaa !1984
  %308 = load i32, ptr %__pyx_clineno, align 4, !dbg !2456, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2459

if.end401:                                        ; preds = %if.end394
  %309 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2460, !tbaa !1899
  call void @Py_DECREF(ptr noundef %309), !dbg !2460
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2461, !tbaa !1899
  %310 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2462, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap402 = getelementptr inbounds %struct.__pyx_mstate, ptr %310, i32 0, i32 18, !dbg !2462
  %311 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap402, align 8, !dbg !2462, !tbaa !2419
  call void @PyType_Modified(ptr noundef %311), !dbg !2463
  %312 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2464, !tbaa !1899
  %__pyx_n_s_StateMap___reduce_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %312, i32 0, i32 28, !dbg !2464
  %313 = load ptr, ptr %__pyx_n_s_StateMap___reduce_cython, align 8, !dbg !2464, !tbaa !2465
  %314 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2466, !tbaa !1899
  %__pyx_n_s_Cython_Plex_DFA403 = getelementptr inbounds %struct.__pyx_mstate, ptr %314, i32 0, i32 20, !dbg !2466
  %315 = load ptr, ptr %__pyx_n_s_Cython_Plex_DFA403, align 8, !dbg !2466, !tbaa !2372
  %316 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2467, !tbaa !1899
  %__pyx_d404 = getelementptr inbounds %struct.__pyx_mstate, ptr %316, i32 0, i32 0, !dbg !2467
  %317 = load ptr, ptr %__pyx_d404, align 8, !dbg !2467, !tbaa !2019
  %318 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2468, !tbaa !1899
  %__pyx_codeobj__14 = getelementptr inbounds %struct.__pyx_mstate, ptr %318, i32 0, i32 106, !dbg !2468
  %319 = load ptr, ptr %__pyx_codeobj__14, align 8, !dbg !2468, !tbaa !2469
  %call405 = call ptr @__Pyx_CyFunction_New(ptr noundef @__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_7__reduce_cython__, i32 noundef 4, ptr noundef %313, ptr noundef null, ptr noundef %315, ptr noundef %317, ptr noundef %319), !dbg !2470
  store ptr %call405, ptr %__pyx_t_3, align 8, !dbg !2471, !tbaa !1899
  %320 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2472, !tbaa !1899
  %tobool406 = icmp ne ptr %320, null, !dbg !2472
  %lnot407 = xor i1 %tobool406, true, !dbg !2472
  %lnot409 = xor i1 %lnot407, true, !dbg !2472
  %lnot411 = xor i1 %lnot409, true, !dbg !2472
  %lnot.ext412 = zext i1 %lnot411 to i32, !dbg !2472
  %conv413 = sext i32 %lnot.ext412 to i64, !dbg !2472
  %expval414 = call i64 @llvm.expect.i64(i64 %conv413, i64 0), !dbg !2472
  %tobool415 = icmp ne i64 %expval414, 0, !dbg !2472
  br i1 %tobool415, label %if.then416, label %if.end417, !dbg !2474

if.then416:                                       ; preds = %if.end401
  %321 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2475, !tbaa !1899
  store ptr %321, ptr %__pyx_filename, align 8, !dbg !2475, !tbaa !1899
  %322 = load ptr, ptr %__pyx_filename, align 8, !dbg !2475, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2475, !tbaa !1984
  %323 = load i32, ptr %__pyx_lineno, align 4, !dbg !2475, !tbaa !1984
  store i32 7047, ptr %__pyx_clineno, align 4, !dbg !2475, !tbaa !1984
  %324 = load i32, ptr %__pyx_clineno, align 4, !dbg !2475, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2478

if.end417:                                        ; preds = %if.end401
  %325 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2479, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap418 = getelementptr inbounds %struct.__pyx_mstate, ptr %325, i32 0, i32 18, !dbg !2479
  %326 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap418, align 8, !dbg !2479, !tbaa !2419
  %tp_dict419 = getelementptr inbounds %struct._typeobject, ptr %326, i32 0, i32 31, !dbg !2479
  %327 = load ptr, ptr %tp_dict419, align 8, !dbg !2479, !tbaa !2420
  %328 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2479, !tbaa !1899
  %__pyx_n_s_reduce_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %328, i32 0, i32 78, !dbg !2479
  %329 = load ptr, ptr %__pyx_n_s_reduce_cython, align 8, !dbg !2479, !tbaa !2481
  %330 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2479, !tbaa !1899
  %call420 = call i32 @PyDict_SetItem(ptr noundef %327, ptr noundef %329, ptr noundef %330), !dbg !2479
  %cmp421 = icmp slt i32 %call420, 0, !dbg !2482
  br i1 %cmp421, label %if.then423, label %if.end424, !dbg !2483

if.then423:                                       ; preds = %if.end417
  %331 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2484, !tbaa !1899
  store ptr %331, ptr %__pyx_filename, align 8, !dbg !2484, !tbaa !1899
  %332 = load ptr, ptr %__pyx_filename, align 8, !dbg !2484, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2484, !tbaa !1984
  %333 = load i32, ptr %__pyx_lineno, align 4, !dbg !2484, !tbaa !1984
  store i32 7049, ptr %__pyx_clineno, align 4, !dbg !2484, !tbaa !1984
  %334 = load i32, ptr %__pyx_clineno, align 4, !dbg !2484, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2487

if.end424:                                        ; preds = %if.end417
  %335 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2488, !tbaa !1899
  call void @Py_DECREF(ptr noundef %335), !dbg !2488
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2489, !tbaa !1899
  %336 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2490, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap425 = getelementptr inbounds %struct.__pyx_mstate, ptr %336, i32 0, i32 18, !dbg !2490
  %337 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap425, align 8, !dbg !2490, !tbaa !2419
  call void @PyType_Modified(ptr noundef %337), !dbg !2491
  %338 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2492, !tbaa !1899
  %__pyx_n_s_StateMap___setstate_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %338, i32 0, i32 29, !dbg !2492
  %339 = load ptr, ptr %__pyx_n_s_StateMap___setstate_cython, align 8, !dbg !2492, !tbaa !2493
  %340 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2494, !tbaa !1899
  %__pyx_n_s_Cython_Plex_DFA426 = getelementptr inbounds %struct.__pyx_mstate, ptr %340, i32 0, i32 20, !dbg !2494
  %341 = load ptr, ptr %__pyx_n_s_Cython_Plex_DFA426, align 8, !dbg !2494, !tbaa !2372
  %342 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2495, !tbaa !1899
  %__pyx_d427 = getelementptr inbounds %struct.__pyx_mstate, ptr %342, i32 0, i32 0, !dbg !2495
  %343 = load ptr, ptr %__pyx_d427, align 8, !dbg !2495, !tbaa !2019
  %344 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2496, !tbaa !1899
  %__pyx_codeobj__16 = getelementptr inbounds %struct.__pyx_mstate, ptr %344, i32 0, i32 107, !dbg !2496
  %345 = load ptr, ptr %__pyx_codeobj__16, align 8, !dbg !2496, !tbaa !2497
  %call428 = call ptr @__Pyx_CyFunction_New(ptr noundef @__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_9__setstate_cython__, i32 noundef 4, ptr noundef %339, ptr noundef null, ptr noundef %341, ptr noundef %343, ptr noundef %345), !dbg !2498
  store ptr %call428, ptr %__pyx_t_3, align 8, !dbg !2499, !tbaa !1899
  %346 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2500, !tbaa !1899
  %tobool429 = icmp ne ptr %346, null, !dbg !2500
  %lnot430 = xor i1 %tobool429, true, !dbg !2500
  %lnot432 = xor i1 %lnot430, true, !dbg !2500
  %lnot434 = xor i1 %lnot432, true, !dbg !2500
  %lnot.ext435 = zext i1 %lnot434 to i32, !dbg !2500
  %conv436 = sext i32 %lnot.ext435 to i64, !dbg !2500
  %expval437 = call i64 @llvm.expect.i64(i64 %conv436, i64 0), !dbg !2500
  %tobool438 = icmp ne i64 %expval437, 0, !dbg !2500
  br i1 %tobool438, label %if.then439, label %if.end440, !dbg !2502

if.then439:                                       ; preds = %if.end424
  %347 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2503, !tbaa !1899
  store ptr %347, ptr %__pyx_filename, align 8, !dbg !2503, !tbaa !1899
  %348 = load ptr, ptr %__pyx_filename, align 8, !dbg !2503, !tbaa !1899
  store i32 16, ptr %__pyx_lineno, align 4, !dbg !2503, !tbaa !1984
  %349 = load i32, ptr %__pyx_lineno, align 4, !dbg !2503, !tbaa !1984
  store i32 7059, ptr %__pyx_clineno, align 4, !dbg !2503, !tbaa !1984
  %350 = load i32, ptr %__pyx_clineno, align 4, !dbg !2503, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2506

if.end440:                                        ; preds = %if.end424
  %351 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2507, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap441 = getelementptr inbounds %struct.__pyx_mstate, ptr %351, i32 0, i32 18, !dbg !2507
  %352 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap441, align 8, !dbg !2507, !tbaa !2419
  %tp_dict442 = getelementptr inbounds %struct._typeobject, ptr %352, i32 0, i32 31, !dbg !2507
  %353 = load ptr, ptr %tp_dict442, align 8, !dbg !2507, !tbaa !2420
  %354 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2507, !tbaa !1899
  %__pyx_n_s_setstate_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %354, i32 0, i32 82, !dbg !2507
  %355 = load ptr, ptr %__pyx_n_s_setstate_cython, align 8, !dbg !2507, !tbaa !2509
  %356 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2507, !tbaa !1899
  %call443 = call i32 @PyDict_SetItem(ptr noundef %353, ptr noundef %355, ptr noundef %356), !dbg !2507
  %cmp444 = icmp slt i32 %call443, 0, !dbg !2510
  br i1 %cmp444, label %if.then446, label %if.end447, !dbg !2511

if.then446:                                       ; preds = %if.end440
  %357 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2512, !tbaa !1899
  store ptr %357, ptr %__pyx_filename, align 8, !dbg !2512, !tbaa !1899
  %358 = load ptr, ptr %__pyx_filename, align 8, !dbg !2512, !tbaa !1899
  store i32 16, ptr %__pyx_lineno, align 4, !dbg !2512, !tbaa !1984
  %359 = load i32, ptr %__pyx_lineno, align 4, !dbg !2512, !tbaa !1984
  store i32 7061, ptr %__pyx_clineno, align 4, !dbg !2512, !tbaa !1984
  %360 = load i32, ptr %__pyx_clineno, align 4, !dbg !2512, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2515

if.end447:                                        ; preds = %if.end440
  %361 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2516, !tbaa !1899
  call void @Py_DECREF(ptr noundef %361), !dbg !2516
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2517, !tbaa !1899
  %362 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2518, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap448 = getelementptr inbounds %struct.__pyx_mstate, ptr %362, i32 0, i32 18, !dbg !2518
  %363 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap448, align 8, !dbg !2518, !tbaa !2419
  call void @PyType_Modified(ptr noundef %363), !dbg !2519
  %364 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2520, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %364, i32 0, i32 75, !dbg !2520
  %365 = load ptr, ptr %__pyx_n_s_pyx_unpickle_StateMap, align 8, !dbg !2520, !tbaa !2521
  %366 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2522, !tbaa !1899
  %__pyx_n_s_Cython_Plex_DFA449 = getelementptr inbounds %struct.__pyx_mstate, ptr %366, i32 0, i32 20, !dbg !2522
  %367 = load ptr, ptr %__pyx_n_s_Cython_Plex_DFA449, align 8, !dbg !2522, !tbaa !2372
  %368 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2523, !tbaa !1899
  %__pyx_d450 = getelementptr inbounds %struct.__pyx_mstate, ptr %368, i32 0, i32 0, !dbg !2523
  %369 = load ptr, ptr %__pyx_d450, align 8, !dbg !2523, !tbaa !2019
  %370 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2524, !tbaa !1899
  %__pyx_codeobj__18 = getelementptr inbounds %struct.__pyx_mstate, ptr %370, i32 0, i32 108, !dbg !2524
  %371 = load ptr, ptr %__pyx_codeobj__18, align 8, !dbg !2524, !tbaa !2525
  %call451 = call ptr @__Pyx_CyFunction_New(ptr noundef @__pyx_mdef_6Cython_4Plex_3DFA_3__pyx_unpickle_StateMap, i32 noundef 0, ptr noundef %365, ptr noundef null, ptr noundef %367, ptr noundef %369, ptr noundef %371), !dbg !2526
  store ptr %call451, ptr %__pyx_t_3, align 8, !dbg !2527, !tbaa !1899
  %372 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2528, !tbaa !1899
  %tobool452 = icmp ne ptr %372, null, !dbg !2528
  %lnot453 = xor i1 %tobool452, true, !dbg !2528
  %lnot455 = xor i1 %lnot453, true, !dbg !2528
  %lnot457 = xor i1 %lnot455, true, !dbg !2528
  %lnot.ext458 = zext i1 %lnot457 to i32, !dbg !2528
  %conv459 = sext i32 %lnot.ext458 to i64, !dbg !2528
  %expval460 = call i64 @llvm.expect.i64(i64 %conv459, i64 0), !dbg !2528
  %tobool461 = icmp ne i64 %expval460, 0, !dbg !2528
  br i1 %tobool461, label %if.then462, label %if.end463, !dbg !2530

if.then462:                                       ; preds = %if.end447
  %373 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2531, !tbaa !1899
  store ptr %373, ptr %__pyx_filename, align 8, !dbg !2531, !tbaa !1899
  %374 = load ptr, ptr %__pyx_filename, align 8, !dbg !2531, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2531, !tbaa !1984
  %375 = load i32, ptr %__pyx_lineno, align 4, !dbg !2531, !tbaa !1984
  store i32 7070, ptr %__pyx_clineno, align 4, !dbg !2531, !tbaa !1984
  %376 = load i32, ptr %__pyx_clineno, align 4, !dbg !2531, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2534

if.end463:                                        ; preds = %if.end447
  %377 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2535, !tbaa !1899
  %__pyx_d464 = getelementptr inbounds %struct.__pyx_mstate, ptr %377, i32 0, i32 0, !dbg !2535
  %378 = load ptr, ptr %__pyx_d464, align 8, !dbg !2535, !tbaa !2019
  %379 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2537, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap465 = getelementptr inbounds %struct.__pyx_mstate, ptr %379, i32 0, i32 75, !dbg !2537
  %380 = load ptr, ptr %__pyx_n_s_pyx_unpickle_StateMap465, align 8, !dbg !2537, !tbaa !2521
  %381 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2538, !tbaa !1899
  %call466 = call i32 @PyDict_SetItem(ptr noundef %378, ptr noundef %380, ptr noundef %381), !dbg !2539
  %cmp467 = icmp slt i32 %call466, 0, !dbg !2540
  br i1 %cmp467, label %if.then469, label %if.end470, !dbg !2541

if.then469:                                       ; preds = %if.end463
  %382 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2542, !tbaa !1899
  store ptr %382, ptr %__pyx_filename, align 8, !dbg !2542, !tbaa !1899
  %383 = load ptr, ptr %__pyx_filename, align 8, !dbg !2542, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2542, !tbaa !1984
  %384 = load i32, ptr %__pyx_lineno, align 4, !dbg !2542, !tbaa !1984
  store i32 7072, ptr %__pyx_clineno, align 4, !dbg !2542, !tbaa !1984
  %385 = load i32, ptr %__pyx_clineno, align 4, !dbg !2542, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2545

if.end470:                                        ; preds = %if.end463
  %386 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2546, !tbaa !1899
  call void @Py_DECREF(ptr noundef %386), !dbg !2546
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2547, !tbaa !1899
  br label %__pyx_L0, !dbg !2548

__pyx_L1_error:                                   ; preds = %cleanup, %if.then469, %if.then462, %if.then446, %if.then439, %if.then423, %if.then416, %if.then400, %if.then393, %if.then377, %if.then372, %if.then357, %if.then350, %if.then336, %if.then323, %if.then320, %if.then307, %if.then300, %if.then286, %if.then272, %if.then269, %if.then256, %if.then249, %if.then235, %if.then222, %if.then219, %if.then205, %if.then193, %if.then181, %if.then169, %if.then155, %if.then150, %if.then115, %if.then108, %if.then103, %if.then98, %if.then93, %if.then79, %if.then65, %if.then51, %if.then45, %if.then38, %if.then23, %if.then8
  tail call void @llvm.dbg.label(metadata !1975), !dbg !2549
  %387 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2550, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %387), !dbg !2550
  %388 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2551, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %388), !dbg !2551
  %389 = load ptr, ptr @__pyx_m, align 8, !dbg !2552, !tbaa !1899
  %tobool471 = icmp ne ptr %389, null, !dbg !2552
  br i1 %tobool471, label %if.then472, label %if.else, !dbg !2553

if.then472:                                       ; preds = %__pyx_L1_error
  %390 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2554, !tbaa !1899
  %__pyx_d473 = getelementptr inbounds %struct.__pyx_mstate, ptr %390, i32 0, i32 0, !dbg !2554
  %391 = load ptr, ptr %__pyx_d473, align 8, !dbg !2554, !tbaa !2019
  %tobool474 = icmp ne ptr %391, null, !dbg !2554
  br i1 %tobool474, label %land.lhs.true, label %if.end477, !dbg !2556

land.lhs.true:                                    ; preds = %if.then472
  %392 = load i32, ptr %stringtab_initialized, align 4, !dbg !2557, !tbaa !1984
  %tobool475 = icmp ne i32 %392, 0, !dbg !2557
  br i1 %tobool475, label %if.then476, label %if.end477, !dbg !2558

if.then476:                                       ; preds = %land.lhs.true
  %393 = load i32, ptr %__pyx_clineno, align 4, !dbg !2559, !tbaa !1984
  %394 = load i32, ptr %__pyx_lineno, align 4, !dbg !2561, !tbaa !1984
  %395 = load ptr, ptr %__pyx_filename, align 8, !dbg !2562, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.17, i32 noundef %393, i32 noundef %394, ptr noundef %395), !dbg !2563
  br label %if.end477, !dbg !2564

if.end477:                                        ; preds = %if.then476, %land.lhs.true, %if.then472
  br label %do.body, !dbg !2565

do.body:                                          ; preds = %if.end477
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #11, !dbg !2566
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !1976, metadata !DIExpression()), !dbg !2566
  %396 = load ptr, ptr @__pyx_m, align 8, !dbg !2566, !tbaa !1899
  store ptr %396, ptr %_py_tmp, align 8, !dbg !2566, !tbaa !1899
  %397 = load ptr, ptr %_py_tmp, align 8, !dbg !2567, !tbaa !1899
  %cmp478 = icmp ne ptr %397, null, !dbg !2567
  br i1 %cmp478, label %if.then480, label %if.end481, !dbg !2566

if.then480:                                       ; preds = %do.body
  store ptr null, ptr @__pyx_m, align 8, !dbg !2569, !tbaa !1899
  %398 = load ptr, ptr %_py_tmp, align 8, !dbg !2569, !tbaa !1899
  call void @Py_DECREF(ptr noundef %398), !dbg !2569
  br label %if.end481, !dbg !2569

if.end481:                                        ; preds = %if.then480, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #11, !dbg !2565
  br label %do.cond, !dbg !2566

do.cond:                                          ; preds = %if.end481
  br label %do.end, !dbg !2566

do.end:                                           ; preds = %do.cond
  br label %if.end486, !dbg !2571

if.else:                                          ; preds = %__pyx_L1_error
  %call482 = call ptr @PyErr_Occurred(), !dbg !2572
  %tobool483 = icmp ne ptr %call482, null, !dbg !2572
  br i1 %tobool483, label %if.end485, label %if.then484, !dbg !2574

if.then484:                                       ; preds = %if.else
  %399 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !2575, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %399, ptr noundef @.str.17), !dbg !2577
  br label %if.end485, !dbg !2578

if.end485:                                        ; preds = %if.then484, %if.else
  br label %if.end486

if.end486:                                        ; preds = %if.end485, %do.end
  br label %__pyx_L0, !dbg !2552

__pyx_L0:                                         ; preds = %if.end486, %if.end470
  tail call void @llvm.dbg.label(metadata !1980), !dbg !2579
  %400 = load ptr, ptr @__pyx_m, align 8, !dbg !2580, !tbaa !1899
  %cmp487 = icmp ne ptr %400, null, !dbg !2581
  %401 = zext i1 %cmp487 to i64, !dbg !2582
  %cond = select i1 %cmp487, i32 0, i32 -1, !dbg !2582
  store i32 %cond, ptr %retval, align 4, !dbg !2583
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup489, !dbg !2583

cleanup489:                                       ; preds = %__pyx_L0, %cleanup, %if.end, %if.then1
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !2584
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !2584
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !2584
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !2584
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !2584
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !2584
  call void @llvm.lifetime.end.p0(i64 4, ptr %stringtab_initialized) #11, !dbg !2584
  %402 = load i32, ptr %retval, align 4, !dbg !2584
  ret i32 %402, !dbg !2584
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_single_interpreter() #0 !dbg !761 {
entry:
  %retval = alloca i32, align 4
  %current_id = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %current_id) #11, !dbg !2585
  tail call void @llvm.dbg.declare(metadata ptr %current_id, metadata !765, metadata !DIExpression()), !dbg !2586
  %call = call ptr @PyThreadState_Get(), !dbg !2587
  %interp = getelementptr inbounds %struct._ts, ptr %call, i32 0, i32 2, !dbg !2588
  %0 = load ptr, ptr %interp, align 8, !dbg !2588, !tbaa !2589
  %call1 = call i64 @PyInterpreterState_GetID(ptr noundef %0), !dbg !2596
  store i64 %call1, ptr %current_id, align 8, !dbg !2586, !tbaa !2597
  %1 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !2598, !tbaa !2597
  %cmp = icmp eq i64 %1, -1, !dbg !2600
  br i1 %cmp, label %if.then, label %if.else, !dbg !2601

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %current_id, align 8, !dbg !2602, !tbaa !2597
  store i64 %2, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !2604, !tbaa !2597
  %3 = load i64, ptr %current_id, align 8, !dbg !2605, !tbaa !2597
  %cmp2 = icmp eq i64 %3, -1, !dbg !2605
  %lnot = xor i1 %cmp2, true, !dbg !2605
  %lnot3 = xor i1 %lnot, true, !dbg !2605
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !2605
  %conv = sext i32 %lnot.ext to i64, !dbg !2605
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2605
  %tobool = icmp ne i64 %expval, 0, !dbg !2606
  %4 = zext i1 %tobool to i64, !dbg !2606
  %cond = select i1 %tobool, i32 -1, i32 0, !dbg !2606
  store i32 %cond, ptr %retval, align 4, !dbg !2607
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2607

if.else:                                          ; preds = %entry
  %5 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !2608, !tbaa !2597
  %6 = load i64, ptr %current_id, align 8, !dbg !2608, !tbaa !2597
  %cmp4 = icmp ne i64 %5, %6, !dbg !2608
  %lnot6 = xor i1 %cmp4, true, !dbg !2608
  %lnot8 = xor i1 %lnot6, true, !dbg !2608
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !2608
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !2608
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !2608
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !2608
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !2610

if.then13:                                        ; preds = %if.else
  %7 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !2611, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.10), !dbg !2613
  store i32 -1, ptr %retval, align 4, !dbg !2614
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2614

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !2615
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2615

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %current_id) #11, !dbg !2616
  %8 = load i32, ptr %retval, align 4, !dbg !2616
  ret i32 %8, !dbg !2616
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_INCREF(ptr noundef %op) #3 !dbg !2617 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !2619, metadata !DIExpression()), !dbg !2620
  %0 = load ptr, ptr %op.addr, align 8, !dbg !2621, !tbaa !1899
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0, !dbg !2622
  %1 = load i64, ptr %ob_refcnt, align 8, !dbg !2623, !tbaa !2624
  %inc = add i64 %1, 1, !dbg !2623
  store i64 %inc, ptr %ob_refcnt, align 8, !dbg !2623, !tbaa !2624
  ret void, !dbg !2625
}

declare !dbg !2626 ptr @PyObject_GetAttrString(ptr noundef, ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #4

declare !dbg !2629 ptr @PyModule_NewObject(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_DECREF(ptr noundef %op) #3 !dbg !2630 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !2632, metadata !DIExpression()), !dbg !2633
  %0 = load ptr, ptr %op.addr, align 8, !dbg !2634, !tbaa !1899
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0, !dbg !2636
  %1 = load i64, ptr %ob_refcnt, align 8, !dbg !2637, !tbaa !2624
  %dec = add i64 %1, -1, !dbg !2637
  store i64 %dec, ptr %ob_refcnt, align 8, !dbg !2637, !tbaa !2624
  %cmp = icmp eq i64 %dec, 0, !dbg !2638
  br i1 %cmp, label %if.then, label %if.end, !dbg !2639

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !2640, !tbaa !1899
  call void @_Py_Dealloc(ptr noundef %2), !dbg !2642
  br label %if.end, !dbg !2643

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2644
}

declare !dbg !2645 ptr @PyModule_GetDict(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_copy_spec_to_module(ptr noundef %spec, ptr noundef %moddict, ptr noundef %from_name, ptr noundef %to_name, i32 noundef %allow_none) #0 !dbg !2646 {
entry:
  %spec.addr = alloca ptr, align 8
  %moddict.addr = alloca ptr, align 8
  %from_name.addr = alloca ptr, align 8
  %to_name.addr = alloca ptr, align 8
  %allow_none.addr = alloca i32, align 4
  %value = alloca ptr, align 8
  %result = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %spec.addr, metadata !2650, metadata !DIExpression()), !dbg !2657
  store ptr %moddict, ptr %moddict.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %moddict.addr, metadata !2651, metadata !DIExpression()), !dbg !2658
  store ptr %from_name, ptr %from_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %from_name.addr, metadata !2652, metadata !DIExpression()), !dbg !2659
  store ptr %to_name, ptr %to_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %to_name.addr, metadata !2653, metadata !DIExpression()), !dbg !2660
  store i32 %allow_none, ptr %allow_none.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %allow_none.addr, metadata !2654, metadata !DIExpression()), !dbg !2661
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !2662
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !2655, metadata !DIExpression()), !dbg !2663
  %0 = load ptr, ptr %spec.addr, align 8, !dbg !2664, !tbaa !1899
  %1 = load ptr, ptr %from_name.addr, align 8, !dbg !2665, !tbaa !1899
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef %1), !dbg !2666
  store ptr %call, ptr %value, align 8, !dbg !2663, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !2667
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !2656, metadata !DIExpression()), !dbg !2668
  store i32 0, ptr %result, align 4, !dbg !2668, !tbaa !1984
  %2 = load ptr, ptr %value, align 8, !dbg !2669, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !2669
  %lnot = xor i1 %tobool, true, !dbg !2669
  %lnot1 = xor i1 %lnot, true, !dbg !2669
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2669
  %conv = sext i32 %lnot.ext to i64, !dbg !2669
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2669
  %tobool2 = icmp ne i64 %expval, 0, !dbg !2669
  br i1 %tobool2, label %if.then, label %if.else, !dbg !2671

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %allow_none.addr, align 4, !dbg !2672, !tbaa !1984
  %tobool3 = icmp ne i32 %3, 0, !dbg !2672
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !2675

lor.lhs.false:                                    ; preds = %if.then
  %4 = load ptr, ptr %value, align 8, !dbg !2676, !tbaa !1899
  %cmp = icmp ne ptr %4, @_Py_NoneStruct, !dbg !2677
  br i1 %cmp, label %if.then5, label %if.end, !dbg !2678

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %5 = load ptr, ptr %moddict.addr, align 8, !dbg !2679, !tbaa !1899
  %6 = load ptr, ptr %to_name.addr, align 8, !dbg !2681, !tbaa !1899
  %7 = load ptr, ptr %value, align 8, !dbg !2682, !tbaa !1899
  %call6 = call i32 @PyDict_SetItemString(ptr noundef %5, ptr noundef %6, ptr noundef %7), !dbg !2683
  store i32 %call6, ptr %result, align 4, !dbg !2684, !tbaa !1984
  br label %if.end, !dbg !2685

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  %8 = load ptr, ptr %value, align 8, !dbg !2686, !tbaa !1899
  call void @Py_DECREF(ptr noundef %8), !dbg !2686
  br label %if.end12, !dbg !2687

if.else:                                          ; preds = %entry
  %9 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !2688, !tbaa !1899
  %call7 = call i32 @PyErr_ExceptionMatches(ptr noundef %9), !dbg !2690
  %tobool8 = icmp ne i32 %call7, 0, !dbg !2690
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !2691

if.then9:                                         ; preds = %if.else
  call void @PyErr_Clear(), !dbg !2692
  br label %if.end11, !dbg !2694

if.else10:                                        ; preds = %if.else
  store i32 -1, ptr %result, align 4, !dbg !2695, !tbaa !1984
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  %10 = load i32, ptr %result, align 4, !dbg !2697, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !2698
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !2698
  ret i32 %10, !dbg !2699
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_XDECREF(ptr noundef %op) #3 !dbg !2700 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !2702, metadata !DIExpression()), !dbg !2703
  %0 = load ptr, ptr %op.addr, align 8, !dbg !2704, !tbaa !1899
  %cmp = icmp ne ptr %0, null, !dbg !2706
  br i1 %cmp, label %if.then, label %if.end, !dbg !2707

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !2708, !tbaa !1899
  call void @Py_DECREF(ptr noundef %1), !dbg !2708
  br label %if.end, !dbg !2710

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2711
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

declare !dbg !2712 i64 @PyInterpreterState_GetID(ptr noundef) #1

declare !dbg !2716 ptr @PyThreadState_Get() #1

declare !dbg !2719 void @PyErr_SetString(ptr noundef, ptr noundef) #1

declare !dbg !2723 void @_Py_Dealloc(ptr noundef) #1

declare !dbg !2724 i32 @PyDict_SetItemString(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !2728 i32 @PyErr_ExceptionMatches(ptr noundef) #1

declare !dbg !2729 void @PyErr_Clear() #1

declare !dbg !2730 ptr @PyImport_AddModule(ptr noundef) #1

declare !dbg !2734 i32 @PyObject_SetAttrString(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_binary_version(i64 noundef %ct_version, i64 noundef %rt_version, i32 noundef %allow_newer) #0 !dbg !2735 {
entry:
  %retval = alloca i32, align 4
  %ct_version.addr = alloca i64, align 8
  %rt_version.addr = alloca i64, align 8
  %allow_newer.addr = alloca i32, align 4
  %MAJOR_MINOR = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %message = alloca [200 x i8], align 16
  store i64 %ct_version, ptr %ct_version.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %ct_version.addr, metadata !2739, metadata !DIExpression()), !dbg !2749
  store i64 %rt_version, ptr %rt_version.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %rt_version.addr, metadata !2740, metadata !DIExpression()), !dbg !2750
  store i32 %allow_newer, ptr %allow_newer.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %allow_newer.addr, metadata !2741, metadata !DIExpression()), !dbg !2751
  call void @llvm.lifetime.start.p0(i64 8, ptr %MAJOR_MINOR) #11, !dbg !2752
  tail call void @llvm.dbg.declare(metadata ptr %MAJOR_MINOR, metadata !2742, metadata !DIExpression()), !dbg !2753
  store i64 4294901760, ptr %MAJOR_MINOR, align 8, !dbg !2753, !tbaa !2597
  %0 = load i64, ptr %rt_version.addr, align 8, !dbg !2754, !tbaa !2597
  %and = and i64 %0, 4294901760, !dbg !2756
  %1 = load i64, ptr %ct_version.addr, align 8, !dbg !2757, !tbaa !2597
  %and1 = and i64 %1, 4294901760, !dbg !2758
  %cmp = icmp eq i64 %and, %and1, !dbg !2759
  br i1 %cmp, label %if.then, label %if.end, !dbg !2760

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !2761
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2761

if.end:                                           ; preds = %entry
  %2 = load i32, ptr %allow_newer.addr, align 4, !dbg !2762, !tbaa !1984
  %tobool = icmp ne i32 %2, 0, !dbg !2762
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2762

land.rhs:                                         ; preds = %if.end
  %3 = load i64, ptr %rt_version.addr, align 8, !dbg !2762, !tbaa !2597
  %and2 = and i64 %3, 4294901760, !dbg !2762
  %4 = load i64, ptr %ct_version.addr, align 8, !dbg !2762, !tbaa !2597
  %and3 = and i64 %4, 4294901760, !dbg !2762
  %cmp4 = icmp ugt i64 %and2, %and3, !dbg !2762
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %5 = phi i1 [ false, %if.end ], [ %cmp4, %land.rhs ], !dbg !2764
  %lnot = xor i1 %5, true, !dbg !2762
  %lnot5 = xor i1 %lnot, true, !dbg !2762
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !2762
  %conv = sext i32 %lnot.ext to i64, !dbg !2762
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2762
  %tobool6 = icmp ne i64 %expval, 0, !dbg !2762
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !2765

if.then7:                                         ; preds = %land.end
  store i32 1, ptr %retval, align 4, !dbg !2766
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2766

if.end8:                                          ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 200, ptr %message) #11, !dbg !2767
  tail call void @llvm.dbg.declare(metadata ptr %message, metadata !2744, metadata !DIExpression()), !dbg !2768
  %arraydecay = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0, !dbg !2769
  %6 = load i64, ptr %ct_version.addr, align 8, !dbg !2770, !tbaa !2597
  %shr = lshr i64 %6, 24, !dbg !2771
  %conv9 = trunc i64 %shr to i32, !dbg !2772
  %7 = load i64, ptr %ct_version.addr, align 8, !dbg !2773, !tbaa !2597
  %shr10 = lshr i64 %7, 16, !dbg !2774
  %and11 = and i64 %shr10, 255, !dbg !2775
  %conv12 = trunc i64 %and11 to i32, !dbg !2776
  %8 = load i32, ptr %allow_newer.addr, align 4, !dbg !2777, !tbaa !1984
  %tobool13 = icmp ne i32 %8, 0, !dbg !2778
  %9 = zext i1 %tobool13 to i64, !dbg !2778
  %cond = select i1 %tobool13, ptr @.str.24, ptr @.str.25, !dbg !2778
  %10 = load i64, ptr %rt_version.addr, align 8, !dbg !2779, !tbaa !2597
  %shr14 = lshr i64 %10, 24, !dbg !2780
  %conv15 = trunc i64 %shr14 to i32, !dbg !2781
  %11 = load i64, ptr %rt_version.addr, align 8, !dbg !2782, !tbaa !2597
  %shr16 = lshr i64 %11, 16, !dbg !2783
  %and17 = and i64 %shr16, 255, !dbg !2784
  %conv18 = trunc i64 %and17 to i32, !dbg !2785
  %call = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay, i64 noundef 200, ptr noundef @.str.23, i32 noundef %conv9, i32 noundef %conv12, ptr noundef @.str.16, ptr noundef %cond, i32 noundef %conv15, i32 noundef %conv18), !dbg !2786
  %arraydecay19 = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0, !dbg !2787
  %call20 = call i32 @PyErr_WarnEx(ptr noundef null, ptr noundef %arraydecay19, i64 noundef 1), !dbg !2788
  store i32 %call20, ptr %retval, align 4, !dbg !2789
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 200, ptr %message) #11, !dbg !2790
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %MAJOR_MINOR) #11, !dbg !2791
  %12 = load i32, ptr %retval, align 4, !dbg !2791
  ret i32 %12, !dbg !2791
}

; Function Attrs: nounwind uwtable
define internal i64 @__Pyx_get_runtime_version() #0 !dbg !2792 {
entry:
  %0 = load i64, ptr @Py_Version, align 8, !dbg !2795, !tbaa !2597
  %and = and i64 %0, -256, !dbg !2796
  ret i64 %and, !dbg !2797
}

declare !dbg !2798 ptr @PyTuple_New(i64 noundef) #1

declare !dbg !2802 ptr @PyBytes_FromStringAndSize(ptr noundef, i64 noundef) #1

declare !dbg !2806 ptr @PyUnicode_FromStringAndSize(ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_CyFunction_init(ptr noundef %module) #0 !dbg !2807 {
entry:
  %retval = alloca i32, align 4
  %module.addr = alloca ptr, align 8
  store ptr %module, ptr %module.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !2809, metadata !DIExpression()), !dbg !2810
  %0 = load ptr, ptr %module.addr, align 8, !dbg !2811, !tbaa !1899
  %call = call ptr @__Pyx_FetchCommonType(ptr noundef @__pyx_CyFunctionType_type), !dbg !2812
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2813, !tbaa !1899
  %__pyx_CyFunctionType = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 6, !dbg !2813
  store ptr %call, ptr %__pyx_CyFunctionType, align 8, !dbg !2814, !tbaa !2815
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2816, !tbaa !1899
  %__pyx_CyFunctionType1 = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 6, !dbg !2816
  %3 = load ptr, ptr %__pyx_CyFunctionType1, align 8, !dbg !2816, !tbaa !2815
  %cmp = icmp eq ptr %3, null, !dbg !2816
  %lnot = xor i1 %cmp, true, !dbg !2816
  %lnot2 = xor i1 %lnot, true, !dbg !2816
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2816
  %conv = sext i32 %lnot.ext to i64, !dbg !2816
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2816
  %tobool = icmp ne i64 %expval, 0, !dbg !2816
  br i1 %tobool, label %if.then, label %if.end, !dbg !2818

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !2819
  br label %return, !dbg !2819

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !2821
  br label %return, !dbg !2821

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, ptr %retval, align 4, !dbg !2822
  ret i32 %4, !dbg !2822
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitConstants() #0 !dbg !2823 {
entry:
  %retval = alloca i32, align 4
  store ptr @PyDict_Type, ptr @__pyx_umethod_PyDict_Type_get, align 8, !dbg !2826, !tbaa !2827
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2829, !tbaa !1899
  %__pyx_n_s_get = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 50, !dbg !2829
  store ptr %__pyx_n_s_get, ptr getelementptr inbounds (%struct.__Pyx_CachedCFunction, ptr @__pyx_umethod_PyDict_Type_get, i32 0, i32 1), align 8, !dbg !2830, !tbaa !2831
  %call = call i32 @__Pyx_CreateStringTabAndInitStrings(), !dbg !2832
  %cmp = icmp slt i32 %call, 0, !dbg !2834
  br i1 %cmp, label %if.then, label %if.end, !dbg !2835

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_f, align 16, !dbg !2836, !tbaa !1899
  store ptr %1, ptr @__pyx_filename, align 8, !dbg !2836, !tbaa !1899
  %2 = load ptr, ptr @__pyx_filename, align 8, !dbg !2836, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2836, !tbaa !1984
  %3 = load i32, ptr @__pyx_lineno, align 4, !dbg !2836, !tbaa !1984
  store i32 6482, ptr @__pyx_clineno, align 4, !dbg !2836, !tbaa !1984
  %4 = load i32, ptr @__pyx_clineno, align 4, !dbg !2836, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2839

if.end:                                           ; preds = %entry
  %call1 = call ptr @PyLong_FromLong(i64 noundef 0), !dbg !2840
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2841, !tbaa !1899
  %__pyx_int_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 90, !dbg !2841
  store ptr %call1, ptr %__pyx_int_0, align 8, !dbg !2842, !tbaa !2843
  %6 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2844, !tbaa !1899
  %__pyx_int_02 = getelementptr inbounds %struct.__pyx_mstate, ptr %6, i32 0, i32 90, !dbg !2844
  %7 = load ptr, ptr %__pyx_int_02, align 8, !dbg !2844, !tbaa !2843
  %tobool = icmp ne ptr %7, null, !dbg !2844
  %lnot = xor i1 %tobool, true, !dbg !2844
  %lnot3 = xor i1 %lnot, true, !dbg !2844
  %lnot4 = xor i1 %lnot3, true, !dbg !2844
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !2844
  %conv = sext i32 %lnot.ext to i64, !dbg !2844
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2844
  %tobool5 = icmp ne i64 %expval, 0, !dbg !2844
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !2846

if.then6:                                         ; preds = %if.end
  %8 = load ptr, ptr @__pyx_f, align 16, !dbg !2847, !tbaa !1899
  store ptr %8, ptr @__pyx_filename, align 8, !dbg !2847, !tbaa !1899
  %9 = load ptr, ptr @__pyx_filename, align 8, !dbg !2847, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2847, !tbaa !1984
  %10 = load i32, ptr @__pyx_lineno, align 4, !dbg !2847, !tbaa !1984
  store i32 6483, ptr @__pyx_clineno, align 4, !dbg !2847, !tbaa !1984
  %11 = load i32, ptr @__pyx_clineno, align 4, !dbg !2847, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2850

if.end7:                                          ; preds = %if.end
  %call8 = call ptr @PyLong_FromLong(i64 noundef 1), !dbg !2851
  %12 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2852, !tbaa !1899
  %__pyx_int_1 = getelementptr inbounds %struct.__pyx_mstate, ptr %12, i32 0, i32 91, !dbg !2852
  store ptr %call8, ptr %__pyx_int_1, align 8, !dbg !2853, !tbaa !2854
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2855, !tbaa !1899
  %__pyx_int_19 = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 91, !dbg !2855
  %14 = load ptr, ptr %__pyx_int_19, align 8, !dbg !2855, !tbaa !2854
  %tobool10 = icmp ne ptr %14, null, !dbg !2855
  %lnot11 = xor i1 %tobool10, true, !dbg !2855
  %lnot13 = xor i1 %lnot11, true, !dbg !2855
  %lnot15 = xor i1 %lnot13, true, !dbg !2855
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !2855
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !2855
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0), !dbg !2855
  %tobool19 = icmp ne i64 %expval18, 0, !dbg !2855
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !2857

if.then20:                                        ; preds = %if.end7
  %15 = load ptr, ptr @__pyx_f, align 16, !dbg !2858, !tbaa !1899
  store ptr %15, ptr @__pyx_filename, align 8, !dbg !2858, !tbaa !1899
  %16 = load ptr, ptr @__pyx_filename, align 8, !dbg !2858, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2858, !tbaa !1984
  %17 = load i32, ptr @__pyx_lineno, align 4, !dbg !2858, !tbaa !1984
  store i32 6484, ptr @__pyx_clineno, align 4, !dbg !2858, !tbaa !1984
  %18 = load i32, ptr @__pyx_clineno, align 4, !dbg !2858, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2861

if.end21:                                         ; preds = %if.end7
  %call22 = call ptr @PyLong_FromLong(i64 noundef 178120335), !dbg !2862
  %19 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2863, !tbaa !1899
  %__pyx_int_178120335 = getelementptr inbounds %struct.__pyx_mstate, ptr %19, i32 0, i32 92, !dbg !2863
  store ptr %call22, ptr %__pyx_int_178120335, align 8, !dbg !2864, !tbaa !2865
  %20 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2866, !tbaa !1899
  %__pyx_int_17812033523 = getelementptr inbounds %struct.__pyx_mstate, ptr %20, i32 0, i32 92, !dbg !2866
  %21 = load ptr, ptr %__pyx_int_17812033523, align 8, !dbg !2866, !tbaa !2865
  %tobool24 = icmp ne ptr %21, null, !dbg !2866
  %lnot25 = xor i1 %tobool24, true, !dbg !2866
  %lnot27 = xor i1 %lnot25, true, !dbg !2866
  %lnot29 = xor i1 %lnot27, true, !dbg !2866
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !2866
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !2866
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0), !dbg !2866
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !2866
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !2868

if.then34:                                        ; preds = %if.end21
  %22 = load ptr, ptr @__pyx_f, align 16, !dbg !2869, !tbaa !1899
  store ptr %22, ptr @__pyx_filename, align 8, !dbg !2869, !tbaa !1899
  %23 = load ptr, ptr @__pyx_filename, align 8, !dbg !2869, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2869, !tbaa !1984
  %24 = load i32, ptr @__pyx_lineno, align 4, !dbg !2869, !tbaa !1984
  store i32 6485, ptr @__pyx_clineno, align 4, !dbg !2869, !tbaa !1984
  %25 = load i32, ptr @__pyx_clineno, align 4, !dbg !2869, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2872

if.end35:                                         ; preds = %if.end21
  %call36 = call ptr @PyLong_FromLong(i64 noundef 236441912), !dbg !2873
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2874, !tbaa !1899
  %__pyx_int_236441912 = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 93, !dbg !2874
  store ptr %call36, ptr %__pyx_int_236441912, align 8, !dbg !2875, !tbaa !2876
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2877, !tbaa !1899
  %__pyx_int_23644191237 = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 93, !dbg !2877
  %28 = load ptr, ptr %__pyx_int_23644191237, align 8, !dbg !2877, !tbaa !2876
  %tobool38 = icmp ne ptr %28, null, !dbg !2877
  %lnot39 = xor i1 %tobool38, true, !dbg !2877
  %lnot41 = xor i1 %lnot39, true, !dbg !2877
  %lnot43 = xor i1 %lnot41, true, !dbg !2877
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !2877
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !2877
  %expval46 = call i64 @llvm.expect.i64(i64 %conv45, i64 0), !dbg !2877
  %tobool47 = icmp ne i64 %expval46, 0, !dbg !2877
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !2879

if.then48:                                        ; preds = %if.end35
  %29 = load ptr, ptr @__pyx_f, align 16, !dbg !2880, !tbaa !1899
  store ptr %29, ptr @__pyx_filename, align 8, !dbg !2880, !tbaa !1899
  %30 = load ptr, ptr @__pyx_filename, align 8, !dbg !2880, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2880, !tbaa !1984
  %31 = load i32, ptr @__pyx_lineno, align 4, !dbg !2880, !tbaa !1984
  store i32 6486, ptr @__pyx_clineno, align 4, !dbg !2880, !tbaa !1984
  %32 = load i32, ptr @__pyx_clineno, align 4, !dbg !2880, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2883

if.end49:                                         ; preds = %if.end35
  %call50 = call ptr @PyLong_FromLong(i64 noundef 250443753), !dbg !2884
  %33 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2885, !tbaa !1899
  %__pyx_int_250443753 = getelementptr inbounds %struct.__pyx_mstate, ptr %33, i32 0, i32 94, !dbg !2885
  store ptr %call50, ptr %__pyx_int_250443753, align 8, !dbg !2886, !tbaa !2887
  %34 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2888, !tbaa !1899
  %__pyx_int_25044375351 = getelementptr inbounds %struct.__pyx_mstate, ptr %34, i32 0, i32 94, !dbg !2888
  %35 = load ptr, ptr %__pyx_int_25044375351, align 8, !dbg !2888, !tbaa !2887
  %tobool52 = icmp ne ptr %35, null, !dbg !2888
  %lnot53 = xor i1 %tobool52, true, !dbg !2888
  %lnot55 = xor i1 %lnot53, true, !dbg !2888
  %lnot57 = xor i1 %lnot55, true, !dbg !2888
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !2888
  %conv59 = sext i32 %lnot.ext58 to i64, !dbg !2888
  %expval60 = call i64 @llvm.expect.i64(i64 %conv59, i64 0), !dbg !2888
  %tobool61 = icmp ne i64 %expval60, 0, !dbg !2888
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !2890

if.then62:                                        ; preds = %if.end49
  %36 = load ptr, ptr @__pyx_f, align 16, !dbg !2891, !tbaa !1899
  store ptr %36, ptr @__pyx_filename, align 8, !dbg !2891, !tbaa !1899
  %37 = load ptr, ptr @__pyx_filename, align 8, !dbg !2891, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2891, !tbaa !1984
  %38 = load i32, ptr @__pyx_lineno, align 4, !dbg !2891, !tbaa !1984
  store i32 6487, ptr @__pyx_clineno, align 4, !dbg !2891, !tbaa !1984
  %39 = load i32, ptr @__pyx_clineno, align 4, !dbg !2891, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2894

if.end63:                                         ; preds = %if.end49
  store i32 0, ptr %retval, align 4, !dbg !2895
  br label %return, !dbg !2895

__pyx_L1_error:                                   ; preds = %if.then62, %if.then48, %if.then34, %if.then20, %if.then6, %if.then
  tail call void @llvm.dbg.label(metadata !2825), !dbg !2896
  store i32 -1, ptr %retval, align 4, !dbg !2897
  br label %return, !dbg !2897

return:                                           ; preds = %__pyx_L1_error, %if.end63
  %40 = load i32, ptr %retval, align 4, !dbg !2898
  ret i32 %40, !dbg !2898
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitGlobals() #0 !dbg !2899 {
entry:
  ret i32 0, !dbg !2900
}

declare !dbg !2901 i32 @PyObject_SetAttr(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !2902 ptr @PyImport_GetModuleDict() #1

declare !dbg !2903 ptr @PyDict_GetItemString(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedBuiltins() #0 !dbg !2904 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2907, !tbaa !1899
  %__pyx_n_s_id = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 53, !dbg !2907
  %1 = load ptr, ptr %__pyx_n_s_id, align 8, !dbg !2907, !tbaa !2908
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %1), !dbg !2909
  store ptr %call, ptr @__pyx_builtin_id, align 8, !dbg !2910, !tbaa !1899
  %2 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !2911, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !2911
  br i1 %tobool, label %if.end, label %if.then, !dbg !2913

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !2914, !tbaa !1899
  store ptr %3, ptr @__pyx_filename, align 8, !dbg !2914, !tbaa !1899
  %4 = load ptr, ptr @__pyx_filename, align 8, !dbg !2914, !tbaa !1899
  store i32 119, ptr @__pyx_lineno, align 4, !dbg !2914, !tbaa !1984
  %5 = load i32, ptr @__pyx_lineno, align 4, !dbg !2914, !tbaa !1984
  store i32 6380, ptr @__pyx_clineno, align 4, !dbg !2914, !tbaa !1984
  %6 = load i32, ptr @__pyx_clineno, align 4, !dbg !2914, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2917

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !2918
  br label %return, !dbg !2918

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !2906), !dbg !2919
  store i32 -1, ptr %retval, align 4, !dbg !2920
  br label %return, !dbg !2920

return:                                           ; preds = %__pyx_L1_error, %if.end
  %7 = load i32, ptr %retval, align 4, !dbg !2921
  ret i32 %7, !dbg !2921
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedConstants() #0 !dbg !2922 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2925, !tbaa !1899
  %__pyx_int_236441912 = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 93, !dbg !2925
  %1 = load ptr, ptr %__pyx_int_236441912, align 8, !dbg !2925, !tbaa !2876
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2926, !tbaa !1899
  %__pyx_int_178120335 = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 92, !dbg !2926
  %3 = load ptr, ptr %__pyx_int_178120335, align 8, !dbg !2926, !tbaa !2865
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2927, !tbaa !1899
  %__pyx_int_250443753 = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 94, !dbg !2927
  %5 = load ptr, ptr %__pyx_int_250443753, align 8, !dbg !2927, !tbaa !2887
  %call = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 3, ptr noundef %1, ptr noundef %3, ptr noundef %5), !dbg !2928
  %6 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2929, !tbaa !1899
  %__pyx_tuple__4 = getelementptr inbounds %struct.__pyx_mstate, ptr %6, i32 0, i32 95, !dbg !2929
  store ptr %call, ptr %__pyx_tuple__4, align 8, !dbg !2930, !tbaa !2931
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2932, !tbaa !1899
  %__pyx_tuple__41 = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 95, !dbg !2932
  %8 = load ptr, ptr %__pyx_tuple__41, align 8, !dbg !2932, !tbaa !2931
  %tobool = icmp ne ptr %8, null, !dbg !2932
  %lnot = xor i1 %tobool, true, !dbg !2932
  %lnot2 = xor i1 %lnot, true, !dbg !2932
  %lnot3 = xor i1 %lnot2, true, !dbg !2932
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !2932
  %conv = sext i32 %lnot.ext to i64, !dbg !2932
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2932
  %tobool4 = icmp ne i64 %expval, 0, !dbg !2932
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2934

if.then:                                          ; preds = %entry
  %9 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2935, !tbaa !1899
  store ptr %9, ptr @__pyx_filename, align 8, !dbg !2935, !tbaa !1899
  %10 = load ptr, ptr @__pyx_filename, align 8, !dbg !2935, !tbaa !1899
  store i32 4, ptr @__pyx_lineno, align 4, !dbg !2935, !tbaa !1984
  %11 = load i32, ptr @__pyx_lineno, align 4, !dbg !2935, !tbaa !1984
  store i32 6398, ptr @__pyx_clineno, align 4, !dbg !2935, !tbaa !1984
  %12 = load i32, ptr @__pyx_clineno, align 4, !dbg !2935, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2938

if.end:                                           ; preds = %entry
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2939, !tbaa !1899
  %__pyx_n_s_old_machine = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 67, !dbg !2939
  %14 = load ptr, ptr %__pyx_n_s_old_machine, align 8, !dbg !2939, !tbaa !2940
  %15 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2941, !tbaa !1899
  %__pyx_n_s_debug = getelementptr inbounds %struct.__pyx_mstate, ptr %15, i32 0, i32 42, !dbg !2941
  %16 = load ptr, ptr %__pyx_n_s_debug, align 8, !dbg !2941, !tbaa !2942
  %call5 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 2, ptr noundef %14, ptr noundef %16), !dbg !2943
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2944, !tbaa !1899
  %__pyx_tuple__6 = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 96, !dbg !2944
  store ptr %call5, ptr %__pyx_tuple__6, align 8, !dbg !2945, !tbaa !2946
  %18 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2947, !tbaa !1899
  %__pyx_tuple__66 = getelementptr inbounds %struct.__pyx_mstate, ptr %18, i32 0, i32 96, !dbg !2947
  %19 = load ptr, ptr %__pyx_tuple__66, align 8, !dbg !2947, !tbaa !2946
  %tobool7 = icmp ne ptr %19, null, !dbg !2947
  %lnot8 = xor i1 %tobool7, true, !dbg !2947
  %lnot10 = xor i1 %lnot8, true, !dbg !2947
  %lnot12 = xor i1 %lnot10, true, !dbg !2947
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !2947
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !2947
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !2947
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !2947
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2949

if.then17:                                        ; preds = %if.end
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !2950, !tbaa !1899
  store ptr %20, ptr @__pyx_filename, align 8, !dbg !2950, !tbaa !1899
  %21 = load ptr, ptr @__pyx_filename, align 8, !dbg !2950, !tbaa !1899
  store i32 14, ptr @__pyx_lineno, align 4, !dbg !2950, !tbaa !1984
  %22 = load i32, ptr @__pyx_lineno, align 4, !dbg !2950, !tbaa !1984
  store i32 6409, ptr @__pyx_clineno, align 4, !dbg !2950, !tbaa !1984
  %23 = load i32, ptr @__pyx_clineno, align 4, !dbg !2950, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2953

if.end18:                                         ; preds = %if.end
  %24 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2954, !tbaa !1899
  %__pyx_empty_bytes = getelementptr inbounds %struct.__pyx_mstate, ptr %24, i32 0, i32 4, !dbg !2954
  %25 = load ptr, ptr %__pyx_empty_bytes, align 8, !dbg !2954, !tbaa !2086
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2955, !tbaa !1899
  %__pyx_empty_tuple = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 3, !dbg !2955
  %27 = load ptr, ptr %__pyx_empty_tuple, align 8, !dbg !2955, !tbaa !2075
  %28 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2956, !tbaa !1899
  %__pyx_empty_tuple19 = getelementptr inbounds %struct.__pyx_mstate, ptr %28, i32 0, i32 3, !dbg !2956
  %29 = load ptr, ptr %__pyx_empty_tuple19, align 8, !dbg !2956, !tbaa !2075
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2957, !tbaa !1899
  %__pyx_tuple__620 = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 96, !dbg !2957
  %31 = load ptr, ptr %__pyx_tuple__620, align 8, !dbg !2957, !tbaa !2946
  %32 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2958, !tbaa !1899
  %__pyx_empty_tuple21 = getelementptr inbounds %struct.__pyx_mstate, ptr %32, i32 0, i32 3, !dbg !2958
  %33 = load ptr, ptr %__pyx_empty_tuple21, align 8, !dbg !2958, !tbaa !2075
  %34 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2959, !tbaa !1899
  %__pyx_empty_tuple22 = getelementptr inbounds %struct.__pyx_mstate, ptr %34, i32 0, i32 3, !dbg !2959
  %35 = load ptr, ptr %__pyx_empty_tuple22, align 8, !dbg !2959, !tbaa !2075
  %36 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2960, !tbaa !1899
  %__pyx_kp_s_Cython_Plex_DFA_py = getelementptr inbounds %struct.__pyx_mstate, ptr %36, i32 0, i32 21, !dbg !2960
  %37 = load ptr, ptr %__pyx_kp_s_Cython_Plex_DFA_py, align 8, !dbg !2960, !tbaa !2961
  %38 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2962, !tbaa !1899
  %__pyx_n_s_nfa_to_dfa = getelementptr inbounds %struct.__pyx_mstate, ptr %38, i32 0, i32 65, !dbg !2962
  %39 = load ptr, ptr %__pyx_n_s_nfa_to_dfa, align 8, !dbg !2962, !tbaa !2370
  %40 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2963, !tbaa !1899
  %__pyx_empty_bytes23 = getelementptr inbounds %struct.__pyx_mstate, ptr %40, i32 0, i32 4, !dbg !2963
  %41 = load ptr, ptr %__pyx_empty_bytes23, align 8, !dbg !2963, !tbaa !2086
  %call24 = call ptr @__Pyx_PyCode_New(i32 noundef 2, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, i32 noundef 3, ptr noundef %25, ptr noundef %27, ptr noundef %29, ptr noundef %31, ptr noundef %33, ptr noundef %35, ptr noundef %37, ptr noundef %39, i32 noundef 14, ptr noundef %41), !dbg !2964
  %42 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2965, !tbaa !1899
  %__pyx_codeobj__7 = getelementptr inbounds %struct.__pyx_mstate, ptr %42, i32 0, i32 103, !dbg !2965
  store ptr %call24, ptr %__pyx_codeobj__7, align 8, !dbg !2966, !tbaa !2375
  %43 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2967, !tbaa !1899
  %__pyx_codeobj__725 = getelementptr inbounds %struct.__pyx_mstate, ptr %43, i32 0, i32 103, !dbg !2967
  %44 = load ptr, ptr %__pyx_codeobj__725, align 8, !dbg !2967, !tbaa !2375
  %tobool26 = icmp ne ptr %44, null, !dbg !2967
  %lnot27 = xor i1 %tobool26, true, !dbg !2967
  %lnot29 = xor i1 %lnot27, true, !dbg !2967
  %lnot31 = xor i1 %lnot29, true, !dbg !2967
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !2967
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !2967
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 0), !dbg !2967
  %tobool35 = icmp ne i64 %expval34, 0, !dbg !2967
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !2969

if.then36:                                        ; preds = %if.end18
  %45 = load ptr, ptr @__pyx_f, align 16, !dbg !2970, !tbaa !1899
  store ptr %45, ptr @__pyx_filename, align 8, !dbg !2970, !tbaa !1899
  %46 = load ptr, ptr @__pyx_filename, align 8, !dbg !2970, !tbaa !1899
  store i32 14, ptr @__pyx_lineno, align 4, !dbg !2970, !tbaa !1984
  %47 = load i32, ptr @__pyx_lineno, align 4, !dbg !2970, !tbaa !1984
  store i32 6412, ptr @__pyx_clineno, align 4, !dbg !2970, !tbaa !1984
  %48 = load i32, ptr @__pyx_clineno, align 4, !dbg !2970, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2973

if.end37:                                         ; preds = %if.end18
  %call38 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef @_Py_NoneStruct), !dbg !2974
  %49 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2975, !tbaa !1899
  %__pyx_tuple__8 = getelementptr inbounds %struct.__pyx_mstate, ptr %49, i32 0, i32 97, !dbg !2975
  store ptr %call38, ptr %__pyx_tuple__8, align 8, !dbg !2976, !tbaa !2387
  %50 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2977, !tbaa !1899
  %__pyx_tuple__839 = getelementptr inbounds %struct.__pyx_mstate, ptr %50, i32 0, i32 97, !dbg !2977
  %51 = load ptr, ptr %__pyx_tuple__839, align 8, !dbg !2977, !tbaa !2387
  %tobool40 = icmp ne ptr %51, null, !dbg !2977
  %lnot41 = xor i1 %tobool40, true, !dbg !2977
  %lnot43 = xor i1 %lnot41, true, !dbg !2977
  %lnot45 = xor i1 %lnot43, true, !dbg !2977
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !2977
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !2977
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 0), !dbg !2977
  %tobool49 = icmp ne i64 %expval48, 0, !dbg !2977
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !2979

if.then50:                                        ; preds = %if.end37
  %52 = load ptr, ptr @__pyx_f, align 16, !dbg !2980, !tbaa !1899
  store ptr %52, ptr @__pyx_filename, align 8, !dbg !2980, !tbaa !1899
  %53 = load ptr, ptr @__pyx_filename, align 8, !dbg !2980, !tbaa !1899
  store i32 14, ptr @__pyx_lineno, align 4, !dbg !2980, !tbaa !1984
  %54 = load i32, ptr @__pyx_lineno, align 4, !dbg !2980, !tbaa !1984
  store i32 6413, ptr @__pyx_clineno, align 4, !dbg !2980, !tbaa !1984
  %55 = load i32, ptr @__pyx_clineno, align 4, !dbg !2980, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2983

if.end51:                                         ; preds = %if.end37
  %56 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2984, !tbaa !1899
  %__pyx_n_s_self = getelementptr inbounds %struct.__pyx_mstate, ptr %56, i32 0, i32 80, !dbg !2984
  %57 = load ptr, ptr %__pyx_n_s_self, align 8, !dbg !2984, !tbaa !2985
  %58 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2986, !tbaa !1899
  %__pyx_n_s_new_state = getelementptr inbounds %struct.__pyx_mstate, ptr %58, i32 0, i32 63, !dbg !2986
  %59 = load ptr, ptr %__pyx_n_s_new_state, align 8, !dbg !2986, !tbaa !2987
  %call52 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 2, ptr noundef %57, ptr noundef %59), !dbg !2988
  %60 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2989, !tbaa !1899
  %__pyx_tuple__9 = getelementptr inbounds %struct.__pyx_mstate, ptr %60, i32 0, i32 98, !dbg !2989
  store ptr %call52, ptr %__pyx_tuple__9, align 8, !dbg !2990, !tbaa !2991
  %61 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2992, !tbaa !1899
  %__pyx_tuple__953 = getelementptr inbounds %struct.__pyx_mstate, ptr %61, i32 0, i32 98, !dbg !2992
  %62 = load ptr, ptr %__pyx_tuple__953, align 8, !dbg !2992, !tbaa !2991
  %tobool54 = icmp ne ptr %62, null, !dbg !2992
  %lnot55 = xor i1 %tobool54, true, !dbg !2992
  %lnot57 = xor i1 %lnot55, true, !dbg !2992
  %lnot59 = xor i1 %lnot57, true, !dbg !2992
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !2992
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !2992
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 0), !dbg !2992
  %tobool63 = icmp ne i64 %expval62, 0, !dbg !2992
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !2994

if.then64:                                        ; preds = %if.end51
  %63 = load ptr, ptr @__pyx_f, align 16, !dbg !2995, !tbaa !1899
  store ptr %63, ptr @__pyx_filename, align 8, !dbg !2995, !tbaa !1899
  %64 = load ptr, ptr @__pyx_filename, align 8, !dbg !2995, !tbaa !1899
  store i32 132, ptr @__pyx_lineno, align 4, !dbg !2995, !tbaa !1984
  %65 = load i32, ptr @__pyx_lineno, align 4, !dbg !2995, !tbaa !1984
  store i32 6424, ptr @__pyx_clineno, align 4, !dbg !2995, !tbaa !1984
  %66 = load i32, ptr @__pyx_clineno, align 4, !dbg !2995, !tbaa !1984
  br label %__pyx_L1_error, !dbg !2998

if.end65:                                         ; preds = %if.end51
  %67 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2999, !tbaa !1899
  %__pyx_empty_bytes66 = getelementptr inbounds %struct.__pyx_mstate, ptr %67, i32 0, i32 4, !dbg !2999
  %68 = load ptr, ptr %__pyx_empty_bytes66, align 8, !dbg !2999, !tbaa !2086
  %69 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3000, !tbaa !1899
  %__pyx_empty_tuple67 = getelementptr inbounds %struct.__pyx_mstate, ptr %69, i32 0, i32 3, !dbg !3000
  %70 = load ptr, ptr %__pyx_empty_tuple67, align 8, !dbg !3000, !tbaa !2075
  %71 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3001, !tbaa !1899
  %__pyx_empty_tuple68 = getelementptr inbounds %struct.__pyx_mstate, ptr %71, i32 0, i32 3, !dbg !3001
  %72 = load ptr, ptr %__pyx_empty_tuple68, align 8, !dbg !3001, !tbaa !2075
  %73 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3002, !tbaa !1899
  %__pyx_tuple__969 = getelementptr inbounds %struct.__pyx_mstate, ptr %73, i32 0, i32 98, !dbg !3002
  %74 = load ptr, ptr %__pyx_tuple__969, align 8, !dbg !3002, !tbaa !2991
  %75 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3003, !tbaa !1899
  %__pyx_empty_tuple70 = getelementptr inbounds %struct.__pyx_mstate, ptr %75, i32 0, i32 3, !dbg !3003
  %76 = load ptr, ptr %__pyx_empty_tuple70, align 8, !dbg !3003, !tbaa !2075
  %77 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3004, !tbaa !1899
  %__pyx_empty_tuple71 = getelementptr inbounds %struct.__pyx_mstate, ptr %77, i32 0, i32 3, !dbg !3004
  %78 = load ptr, ptr %__pyx_empty_tuple71, align 8, !dbg !3004, !tbaa !2075
  %79 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3005, !tbaa !1899
  %__pyx_kp_s_Cython_Plex_DFA_py72 = getelementptr inbounds %struct.__pyx_mstate, ptr %79, i32 0, i32 21, !dbg !3005
  %80 = load ptr, ptr %__pyx_kp_s_Cython_Plex_DFA_py72, align 8, !dbg !3005, !tbaa !2961
  %81 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3006, !tbaa !1899
  %__pyx_n_s_new_to_old = getelementptr inbounds %struct.__pyx_mstate, ptr %81, i32 0, i32 64, !dbg !3006
  %82 = load ptr, ptr %__pyx_n_s_new_to_old, align 8, !dbg !3006, !tbaa !2425
  %83 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3007, !tbaa !1899
  %__pyx_empty_bytes73 = getelementptr inbounds %struct.__pyx_mstate, ptr %83, i32 0, i32 4, !dbg !3007
  %84 = load ptr, ptr %__pyx_empty_bytes73, align 8, !dbg !3007, !tbaa !2086
  %call74 = call ptr @__Pyx_PyCode_New(i32 noundef 2, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, i32 noundef 3, ptr noundef %68, ptr noundef %70, ptr noundef %72, ptr noundef %74, ptr noundef %76, ptr noundef %78, ptr noundef %80, ptr noundef %82, i32 noundef 132, ptr noundef %84), !dbg !3008
  %85 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3009, !tbaa !1899
  %__pyx_codeobj__10 = getelementptr inbounds %struct.__pyx_mstate, ptr %85, i32 0, i32 104, !dbg !3009
  store ptr %call74, ptr %__pyx_codeobj__10, align 8, !dbg !3010, !tbaa !2407
  %86 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3011, !tbaa !1899
  %__pyx_codeobj__1075 = getelementptr inbounds %struct.__pyx_mstate, ptr %86, i32 0, i32 104, !dbg !3011
  %87 = load ptr, ptr %__pyx_codeobj__1075, align 8, !dbg !3011, !tbaa !2407
  %tobool76 = icmp ne ptr %87, null, !dbg !3011
  %lnot77 = xor i1 %tobool76, true, !dbg !3011
  %lnot79 = xor i1 %lnot77, true, !dbg !3011
  %lnot81 = xor i1 %lnot79, true, !dbg !3011
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !3011
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !3011
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 0), !dbg !3011
  %tobool85 = icmp ne i64 %expval84, 0, !dbg !3011
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !3013

if.then86:                                        ; preds = %if.end65
  %88 = load ptr, ptr @__pyx_f, align 16, !dbg !3014, !tbaa !1899
  store ptr %88, ptr @__pyx_filename, align 8, !dbg !3014, !tbaa !1899
  %89 = load ptr, ptr @__pyx_filename, align 8, !dbg !3014, !tbaa !1899
  store i32 132, ptr @__pyx_lineno, align 4, !dbg !3014, !tbaa !1984
  %90 = load i32, ptr @__pyx_lineno, align 4, !dbg !3014, !tbaa !1984
  store i32 6427, ptr @__pyx_clineno, align 4, !dbg !3014, !tbaa !1984
  %91 = load i32, ptr @__pyx_clineno, align 4, !dbg !3014, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3017

if.end87:                                         ; preds = %if.end65
  %92 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3018, !tbaa !1899
  %__pyx_n_s_self88 = getelementptr inbounds %struct.__pyx_mstate, ptr %92, i32 0, i32 80, !dbg !3018
  %93 = load ptr, ptr %__pyx_n_s_self88, align 8, !dbg !3018, !tbaa !2985
  %94 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3019, !tbaa !1899
  %__pyx_n_s_file = getelementptr inbounds %struct.__pyx_mstate, ptr %94, i32 0, i32 48, !dbg !3019
  %95 = load ptr, ptr %__pyx_n_s_file, align 8, !dbg !3019, !tbaa !3020
  %96 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3021, !tbaa !1899
  %__pyx_n_s_state_set_str = getelementptr inbounds %struct.__pyx_mstate, ptr %96, i32 0, i32 84, !dbg !3021
  %97 = load ptr, ptr %__pyx_n_s_state_set_str, align 8, !dbg !3021, !tbaa !3022
  %98 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3023, !tbaa !1899
  %__pyx_n_s_new_state89 = getelementptr inbounds %struct.__pyx_mstate, ptr %98, i32 0, i32 63, !dbg !3023
  %99 = load ptr, ptr %__pyx_n_s_new_state89, align 8, !dbg !3023, !tbaa !2987
  %100 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3024, !tbaa !1899
  %__pyx_n_s_old_state_set = getelementptr inbounds %struct.__pyx_mstate, ptr %100, i32 0, i32 68, !dbg !3024
  %101 = load ptr, ptr %__pyx_n_s_old_state_set, align 8, !dbg !3024, !tbaa !3025
  %call90 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 5, ptr noundef %93, ptr noundef %95, ptr noundef %97, ptr noundef %99, ptr noundef %101), !dbg !3026
  %102 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3027, !tbaa !1899
  %__pyx_tuple__11 = getelementptr inbounds %struct.__pyx_mstate, ptr %102, i32 0, i32 99, !dbg !3027
  store ptr %call90, ptr %__pyx_tuple__11, align 8, !dbg !3028, !tbaa !3029
  %103 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3030, !tbaa !1899
  %__pyx_tuple__1191 = getelementptr inbounds %struct.__pyx_mstate, ptr %103, i32 0, i32 99, !dbg !3030
  %104 = load ptr, ptr %__pyx_tuple__1191, align 8, !dbg !3030, !tbaa !3029
  %tobool92 = icmp ne ptr %104, null, !dbg !3030
  %lnot93 = xor i1 %tobool92, true, !dbg !3030
  %lnot95 = xor i1 %lnot93, true, !dbg !3030
  %lnot97 = xor i1 %lnot95, true, !dbg !3030
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !3030
  %conv99 = sext i32 %lnot.ext98 to i64, !dbg !3030
  %expval100 = call i64 @llvm.expect.i64(i64 %conv99, i64 0), !dbg !3030
  %tobool101 = icmp ne i64 %expval100, 0, !dbg !3030
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !3032

if.then102:                                       ; preds = %if.end87
  %105 = load ptr, ptr @__pyx_f, align 16, !dbg !3033, !tbaa !1899
  store ptr %105, ptr @__pyx_filename, align 8, !dbg !3033, !tbaa !1899
  %106 = load ptr, ptr @__pyx_filename, align 8, !dbg !3033, !tbaa !1899
  store i32 143, ptr @__pyx_lineno, align 4, !dbg !3033, !tbaa !1984
  %107 = load i32, ptr @__pyx_lineno, align 4, !dbg !3033, !tbaa !1984
  store i32 6436, ptr @__pyx_clineno, align 4, !dbg !3033, !tbaa !1984
  %108 = load i32, ptr @__pyx_clineno, align 4, !dbg !3033, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3036

if.end103:                                        ; preds = %if.end87
  %109 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3037, !tbaa !1899
  %__pyx_empty_bytes104 = getelementptr inbounds %struct.__pyx_mstate, ptr %109, i32 0, i32 4, !dbg !3037
  %110 = load ptr, ptr %__pyx_empty_bytes104, align 8, !dbg !3037, !tbaa !2086
  %111 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3038, !tbaa !1899
  %__pyx_empty_tuple105 = getelementptr inbounds %struct.__pyx_mstate, ptr %111, i32 0, i32 3, !dbg !3038
  %112 = load ptr, ptr %__pyx_empty_tuple105, align 8, !dbg !3038, !tbaa !2075
  %113 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3039, !tbaa !1899
  %__pyx_empty_tuple106 = getelementptr inbounds %struct.__pyx_mstate, ptr %113, i32 0, i32 3, !dbg !3039
  %114 = load ptr, ptr %__pyx_empty_tuple106, align 8, !dbg !3039, !tbaa !2075
  %115 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3040, !tbaa !1899
  %__pyx_tuple__11107 = getelementptr inbounds %struct.__pyx_mstate, ptr %115, i32 0, i32 99, !dbg !3040
  %116 = load ptr, ptr %__pyx_tuple__11107, align 8, !dbg !3040, !tbaa !3029
  %117 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3041, !tbaa !1899
  %__pyx_empty_tuple108 = getelementptr inbounds %struct.__pyx_mstate, ptr %117, i32 0, i32 3, !dbg !3041
  %118 = load ptr, ptr %__pyx_empty_tuple108, align 8, !dbg !3041, !tbaa !2075
  %119 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3042, !tbaa !1899
  %__pyx_empty_tuple109 = getelementptr inbounds %struct.__pyx_mstate, ptr %119, i32 0, i32 3, !dbg !3042
  %120 = load ptr, ptr %__pyx_empty_tuple109, align 8, !dbg !3042, !tbaa !2075
  %121 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3043, !tbaa !1899
  %__pyx_kp_s_Cython_Plex_DFA_py110 = getelementptr inbounds %struct.__pyx_mstate, ptr %121, i32 0, i32 21, !dbg !3043
  %122 = load ptr, ptr %__pyx_kp_s_Cython_Plex_DFA_py110, align 8, !dbg !3043, !tbaa !2961
  %123 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3044, !tbaa !1899
  %__pyx_n_s_dump = getelementptr inbounds %struct.__pyx_mstate, ptr %123, i32 0, i32 46, !dbg !3044
  %124 = load ptr, ptr %__pyx_n_s_dump, align 8, !dbg !3044, !tbaa !2453
  %125 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3045, !tbaa !1899
  %__pyx_empty_bytes111 = getelementptr inbounds %struct.__pyx_mstate, ptr %125, i32 0, i32 4, !dbg !3045
  %126 = load ptr, ptr %__pyx_empty_bytes111, align 8, !dbg !3045, !tbaa !2086
  %call112 = call ptr @__Pyx_PyCode_New(i32 noundef 2, i32 noundef 0, i32 noundef 0, i32 noundef 5, i32 noundef 0, i32 noundef 3, ptr noundef %110, ptr noundef %112, ptr noundef %114, ptr noundef %116, ptr noundef %118, ptr noundef %120, ptr noundef %122, ptr noundef %124, i32 noundef 143, ptr noundef %126), !dbg !3046
  %127 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3047, !tbaa !1899
  %__pyx_codeobj__12 = getelementptr inbounds %struct.__pyx_mstate, ptr %127, i32 0, i32 105, !dbg !3047
  store ptr %call112, ptr %__pyx_codeobj__12, align 8, !dbg !3048, !tbaa !2441
  %128 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3049, !tbaa !1899
  %__pyx_codeobj__12113 = getelementptr inbounds %struct.__pyx_mstate, ptr %128, i32 0, i32 105, !dbg !3049
  %129 = load ptr, ptr %__pyx_codeobj__12113, align 8, !dbg !3049, !tbaa !2441
  %tobool114 = icmp ne ptr %129, null, !dbg !3049
  %lnot115 = xor i1 %tobool114, true, !dbg !3049
  %lnot117 = xor i1 %lnot115, true, !dbg !3049
  %lnot119 = xor i1 %lnot117, true, !dbg !3049
  %lnot.ext120 = zext i1 %lnot119 to i32, !dbg !3049
  %conv121 = sext i32 %lnot.ext120 to i64, !dbg !3049
  %expval122 = call i64 @llvm.expect.i64(i64 %conv121, i64 0), !dbg !3049
  %tobool123 = icmp ne i64 %expval122, 0, !dbg !3049
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !3051

if.then124:                                       ; preds = %if.end103
  %130 = load ptr, ptr @__pyx_f, align 16, !dbg !3052, !tbaa !1899
  store ptr %130, ptr @__pyx_filename, align 8, !dbg !3052, !tbaa !1899
  %131 = load ptr, ptr @__pyx_filename, align 8, !dbg !3052, !tbaa !1899
  store i32 143, ptr @__pyx_lineno, align 4, !dbg !3052, !tbaa !1984
  %132 = load i32, ptr @__pyx_lineno, align 4, !dbg !3052, !tbaa !1984
  store i32 6439, ptr @__pyx_clineno, align 4, !dbg !3052, !tbaa !1984
  %133 = load i32, ptr @__pyx_clineno, align 4, !dbg !3052, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3055

if.end125:                                        ; preds = %if.end103
  %134 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3056, !tbaa !1899
  %__pyx_n_s_self126 = getelementptr inbounds %struct.__pyx_mstate, ptr %134, i32 0, i32 80, !dbg !3056
  %135 = load ptr, ptr %__pyx_n_s_self126, align 8, !dbg !3056, !tbaa !2985
  %136 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3057, !tbaa !1899
  %__pyx_n_s_state = getelementptr inbounds %struct.__pyx_mstate, ptr %136, i32 0, i32 83, !dbg !3057
  %137 = load ptr, ptr %__pyx_n_s_state, align 8, !dbg !3057, !tbaa !3058
  %138 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3059, !tbaa !1899
  %__pyx_n_s_dict_2 = getelementptr inbounds %struct.__pyx_mstate, ptr %138, i32 0, i32 44, !dbg !3059
  %139 = load ptr, ptr %__pyx_n_s_dict_2, align 8, !dbg !3059, !tbaa !3060
  %140 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3061, !tbaa !1899
  %__pyx_n_s_use_setstate = getelementptr inbounds %struct.__pyx_mstate, ptr %140, i32 0, i32 88, !dbg !3061
  %141 = load ptr, ptr %__pyx_n_s_use_setstate, align 8, !dbg !3061, !tbaa !3062
  %call127 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 4, ptr noundef %135, ptr noundef %137, ptr noundef %139, ptr noundef %141), !dbg !3063
  %142 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3064, !tbaa !1899
  %__pyx_tuple__13 = getelementptr inbounds %struct.__pyx_mstate, ptr %142, i32 0, i32 100, !dbg !3064
  store ptr %call127, ptr %__pyx_tuple__13, align 8, !dbg !3065, !tbaa !3066
  %143 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3067, !tbaa !1899
  %__pyx_tuple__13128 = getelementptr inbounds %struct.__pyx_mstate, ptr %143, i32 0, i32 100, !dbg !3067
  %144 = load ptr, ptr %__pyx_tuple__13128, align 8, !dbg !3067, !tbaa !3066
  %tobool129 = icmp ne ptr %144, null, !dbg !3067
  %lnot130 = xor i1 %tobool129, true, !dbg !3067
  %lnot132 = xor i1 %lnot130, true, !dbg !3067
  %lnot134 = xor i1 %lnot132, true, !dbg !3067
  %lnot.ext135 = zext i1 %lnot134 to i32, !dbg !3067
  %conv136 = sext i32 %lnot.ext135 to i64, !dbg !3067
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 0), !dbg !3067
  %tobool138 = icmp ne i64 %expval137, 0, !dbg !3067
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !3069

if.then139:                                       ; preds = %if.end125
  %145 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3070, !tbaa !1899
  store ptr %145, ptr @__pyx_filename, align 8, !dbg !3070, !tbaa !1899
  %146 = load ptr, ptr @__pyx_filename, align 8, !dbg !3070, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !3070, !tbaa !1984
  %147 = load i32, ptr @__pyx_lineno, align 4, !dbg !3070, !tbaa !1984
  store i32 6446, ptr @__pyx_clineno, align 4, !dbg !3070, !tbaa !1984
  %148 = load i32, ptr @__pyx_clineno, align 4, !dbg !3070, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3073

if.end140:                                        ; preds = %if.end125
  %149 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3074, !tbaa !1899
  %__pyx_empty_bytes141 = getelementptr inbounds %struct.__pyx_mstate, ptr %149, i32 0, i32 4, !dbg !3074
  %150 = load ptr, ptr %__pyx_empty_bytes141, align 8, !dbg !3074, !tbaa !2086
  %151 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3075, !tbaa !1899
  %__pyx_empty_tuple142 = getelementptr inbounds %struct.__pyx_mstate, ptr %151, i32 0, i32 3, !dbg !3075
  %152 = load ptr, ptr %__pyx_empty_tuple142, align 8, !dbg !3075, !tbaa !2075
  %153 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3076, !tbaa !1899
  %__pyx_empty_tuple143 = getelementptr inbounds %struct.__pyx_mstate, ptr %153, i32 0, i32 3, !dbg !3076
  %154 = load ptr, ptr %__pyx_empty_tuple143, align 8, !dbg !3076, !tbaa !2075
  %155 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3077, !tbaa !1899
  %__pyx_tuple__13144 = getelementptr inbounds %struct.__pyx_mstate, ptr %155, i32 0, i32 100, !dbg !3077
  %156 = load ptr, ptr %__pyx_tuple__13144, align 8, !dbg !3077, !tbaa !3066
  %157 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3078, !tbaa !1899
  %__pyx_empty_tuple145 = getelementptr inbounds %struct.__pyx_mstate, ptr %157, i32 0, i32 3, !dbg !3078
  %158 = load ptr, ptr %__pyx_empty_tuple145, align 8, !dbg !3078, !tbaa !2075
  %159 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3079, !tbaa !1899
  %__pyx_empty_tuple146 = getelementptr inbounds %struct.__pyx_mstate, ptr %159, i32 0, i32 3, !dbg !3079
  %160 = load ptr, ptr %__pyx_empty_tuple146, align 8, !dbg !3079, !tbaa !2075
  %161 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3080, !tbaa !1899
  %__pyx_kp_s_stringsource = getelementptr inbounds %struct.__pyx_mstate, ptr %161, i32 0, i32 85, !dbg !3080
  %162 = load ptr, ptr %__pyx_kp_s_stringsource, align 8, !dbg !3080, !tbaa !3081
  %163 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3082, !tbaa !1899
  %__pyx_n_s_reduce_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %163, i32 0, i32 78, !dbg !3082
  %164 = load ptr, ptr %__pyx_n_s_reduce_cython, align 8, !dbg !3082, !tbaa !2481
  %165 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3083, !tbaa !1899
  %__pyx_empty_bytes147 = getelementptr inbounds %struct.__pyx_mstate, ptr %165, i32 0, i32 4, !dbg !3083
  %166 = load ptr, ptr %__pyx_empty_bytes147, align 8, !dbg !3083, !tbaa !2086
  %call148 = call ptr @__Pyx_PyCode_New(i32 noundef 1, i32 noundef 0, i32 noundef 0, i32 noundef 4, i32 noundef 0, i32 noundef 3, ptr noundef %150, ptr noundef %152, ptr noundef %154, ptr noundef %156, ptr noundef %158, ptr noundef %160, ptr noundef %162, ptr noundef %164, i32 noundef 1, ptr noundef %166), !dbg !3084
  %167 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3085, !tbaa !1899
  %__pyx_codeobj__14 = getelementptr inbounds %struct.__pyx_mstate, ptr %167, i32 0, i32 106, !dbg !3085
  store ptr %call148, ptr %__pyx_codeobj__14, align 8, !dbg !3086, !tbaa !2469
  %168 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3087, !tbaa !1899
  %__pyx_codeobj__14149 = getelementptr inbounds %struct.__pyx_mstate, ptr %168, i32 0, i32 106, !dbg !3087
  %169 = load ptr, ptr %__pyx_codeobj__14149, align 8, !dbg !3087, !tbaa !2469
  %tobool150 = icmp ne ptr %169, null, !dbg !3087
  %lnot151 = xor i1 %tobool150, true, !dbg !3087
  %lnot153 = xor i1 %lnot151, true, !dbg !3087
  %lnot155 = xor i1 %lnot153, true, !dbg !3087
  %lnot.ext156 = zext i1 %lnot155 to i32, !dbg !3087
  %conv157 = sext i32 %lnot.ext156 to i64, !dbg !3087
  %expval158 = call i64 @llvm.expect.i64(i64 %conv157, i64 0), !dbg !3087
  %tobool159 = icmp ne i64 %expval158, 0, !dbg !3087
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !3089

if.then160:                                       ; preds = %if.end140
  %170 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3090, !tbaa !1899
  store ptr %170, ptr @__pyx_filename, align 8, !dbg !3090, !tbaa !1899
  %171 = load ptr, ptr @__pyx_filename, align 8, !dbg !3090, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !3090, !tbaa !1984
  %172 = load i32, ptr @__pyx_lineno, align 4, !dbg !3090, !tbaa !1984
  store i32 6449, ptr @__pyx_clineno, align 4, !dbg !3090, !tbaa !1984
  %173 = load i32, ptr @__pyx_clineno, align 4, !dbg !3090, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3093

if.end161:                                        ; preds = %if.end140
  %174 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3094, !tbaa !1899
  %__pyx_n_s_self162 = getelementptr inbounds %struct.__pyx_mstate, ptr %174, i32 0, i32 80, !dbg !3094
  %175 = load ptr, ptr %__pyx_n_s_self162, align 8, !dbg !3094, !tbaa !2985
  %176 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3095, !tbaa !1899
  %__pyx_n_s_pyx_state = getelementptr inbounds %struct.__pyx_mstate, ptr %176, i32 0, i32 73, !dbg !3095
  %177 = load ptr, ptr %__pyx_n_s_pyx_state, align 8, !dbg !3095, !tbaa !3096
  %call163 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 2, ptr noundef %175, ptr noundef %177), !dbg !3097
  %178 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3098, !tbaa !1899
  %__pyx_tuple__15 = getelementptr inbounds %struct.__pyx_mstate, ptr %178, i32 0, i32 101, !dbg !3098
  store ptr %call163, ptr %__pyx_tuple__15, align 8, !dbg !3099, !tbaa !3100
  %179 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3101, !tbaa !1899
  %__pyx_tuple__15164 = getelementptr inbounds %struct.__pyx_mstate, ptr %179, i32 0, i32 101, !dbg !3101
  %180 = load ptr, ptr %__pyx_tuple__15164, align 8, !dbg !3101, !tbaa !3100
  %tobool165 = icmp ne ptr %180, null, !dbg !3101
  %lnot166 = xor i1 %tobool165, true, !dbg !3101
  %lnot168 = xor i1 %lnot166, true, !dbg !3101
  %lnot170 = xor i1 %lnot168, true, !dbg !3101
  %lnot.ext171 = zext i1 %lnot170 to i32, !dbg !3101
  %conv172 = sext i32 %lnot.ext171 to i64, !dbg !3101
  %expval173 = call i64 @llvm.expect.i64(i64 %conv172, i64 0), !dbg !3101
  %tobool174 = icmp ne i64 %expval173, 0, !dbg !3101
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !3103

if.then175:                                       ; preds = %if.end161
  %181 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3104, !tbaa !1899
  store ptr %181, ptr @__pyx_filename, align 8, !dbg !3104, !tbaa !1899
  %182 = load ptr, ptr @__pyx_filename, align 8, !dbg !3104, !tbaa !1899
  store i32 16, ptr @__pyx_lineno, align 4, !dbg !3104, !tbaa !1984
  %183 = load i32, ptr @__pyx_lineno, align 4, !dbg !3104, !tbaa !1984
  store i32 6457, ptr @__pyx_clineno, align 4, !dbg !3104, !tbaa !1984
  %184 = load i32, ptr @__pyx_clineno, align 4, !dbg !3104, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3107

if.end176:                                        ; preds = %if.end161
  %185 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3108, !tbaa !1899
  %__pyx_empty_bytes177 = getelementptr inbounds %struct.__pyx_mstate, ptr %185, i32 0, i32 4, !dbg !3108
  %186 = load ptr, ptr %__pyx_empty_bytes177, align 8, !dbg !3108, !tbaa !2086
  %187 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3109, !tbaa !1899
  %__pyx_empty_tuple178 = getelementptr inbounds %struct.__pyx_mstate, ptr %187, i32 0, i32 3, !dbg !3109
  %188 = load ptr, ptr %__pyx_empty_tuple178, align 8, !dbg !3109, !tbaa !2075
  %189 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3110, !tbaa !1899
  %__pyx_empty_tuple179 = getelementptr inbounds %struct.__pyx_mstate, ptr %189, i32 0, i32 3, !dbg !3110
  %190 = load ptr, ptr %__pyx_empty_tuple179, align 8, !dbg !3110, !tbaa !2075
  %191 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3111, !tbaa !1899
  %__pyx_tuple__15180 = getelementptr inbounds %struct.__pyx_mstate, ptr %191, i32 0, i32 101, !dbg !3111
  %192 = load ptr, ptr %__pyx_tuple__15180, align 8, !dbg !3111, !tbaa !3100
  %193 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3112, !tbaa !1899
  %__pyx_empty_tuple181 = getelementptr inbounds %struct.__pyx_mstate, ptr %193, i32 0, i32 3, !dbg !3112
  %194 = load ptr, ptr %__pyx_empty_tuple181, align 8, !dbg !3112, !tbaa !2075
  %195 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3113, !tbaa !1899
  %__pyx_empty_tuple182 = getelementptr inbounds %struct.__pyx_mstate, ptr %195, i32 0, i32 3, !dbg !3113
  %196 = load ptr, ptr %__pyx_empty_tuple182, align 8, !dbg !3113, !tbaa !2075
  %197 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3114, !tbaa !1899
  %__pyx_kp_s_stringsource183 = getelementptr inbounds %struct.__pyx_mstate, ptr %197, i32 0, i32 85, !dbg !3114
  %198 = load ptr, ptr %__pyx_kp_s_stringsource183, align 8, !dbg !3114, !tbaa !3081
  %199 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3115, !tbaa !1899
  %__pyx_n_s_setstate_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %199, i32 0, i32 82, !dbg !3115
  %200 = load ptr, ptr %__pyx_n_s_setstate_cython, align 8, !dbg !3115, !tbaa !2509
  %201 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3116, !tbaa !1899
  %__pyx_empty_bytes184 = getelementptr inbounds %struct.__pyx_mstate, ptr %201, i32 0, i32 4, !dbg !3116
  %202 = load ptr, ptr %__pyx_empty_bytes184, align 8, !dbg !3116, !tbaa !2086
  %call185 = call ptr @__Pyx_PyCode_New(i32 noundef 2, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, i32 noundef 3, ptr noundef %186, ptr noundef %188, ptr noundef %190, ptr noundef %192, ptr noundef %194, ptr noundef %196, ptr noundef %198, ptr noundef %200, i32 noundef 16, ptr noundef %202), !dbg !3117
  %203 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3118, !tbaa !1899
  %__pyx_codeobj__16 = getelementptr inbounds %struct.__pyx_mstate, ptr %203, i32 0, i32 107, !dbg !3118
  store ptr %call185, ptr %__pyx_codeobj__16, align 8, !dbg !3119, !tbaa !2497
  %204 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3120, !tbaa !1899
  %__pyx_codeobj__16186 = getelementptr inbounds %struct.__pyx_mstate, ptr %204, i32 0, i32 107, !dbg !3120
  %205 = load ptr, ptr %__pyx_codeobj__16186, align 8, !dbg !3120, !tbaa !2497
  %tobool187 = icmp ne ptr %205, null, !dbg !3120
  %lnot188 = xor i1 %tobool187, true, !dbg !3120
  %lnot190 = xor i1 %lnot188, true, !dbg !3120
  %lnot192 = xor i1 %lnot190, true, !dbg !3120
  %lnot.ext193 = zext i1 %lnot192 to i32, !dbg !3120
  %conv194 = sext i32 %lnot.ext193 to i64, !dbg !3120
  %expval195 = call i64 @llvm.expect.i64(i64 %conv194, i64 0), !dbg !3120
  %tobool196 = icmp ne i64 %expval195, 0, !dbg !3120
  br i1 %tobool196, label %if.then197, label %if.end198, !dbg !3122

if.then197:                                       ; preds = %if.end176
  %206 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3123, !tbaa !1899
  store ptr %206, ptr @__pyx_filename, align 8, !dbg !3123, !tbaa !1899
  %207 = load ptr, ptr @__pyx_filename, align 8, !dbg !3123, !tbaa !1899
  store i32 16, ptr @__pyx_lineno, align 4, !dbg !3123, !tbaa !1984
  %208 = load i32, ptr @__pyx_lineno, align 4, !dbg !3123, !tbaa !1984
  store i32 6460, ptr @__pyx_clineno, align 4, !dbg !3123, !tbaa !1984
  %209 = load i32, ptr @__pyx_clineno, align 4, !dbg !3123, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3126

if.end198:                                        ; preds = %if.end176
  %210 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3127, !tbaa !1899
  %__pyx_n_s_pyx_type = getelementptr inbounds %struct.__pyx_mstate, ptr %210, i32 0, i32 74, !dbg !3127
  %211 = load ptr, ptr %__pyx_n_s_pyx_type, align 8, !dbg !3127, !tbaa !3128
  %212 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3129, !tbaa !1899
  %__pyx_n_s_pyx_checksum = getelementptr inbounds %struct.__pyx_mstate, ptr %212, i32 0, i32 71, !dbg !3129
  %213 = load ptr, ptr %__pyx_n_s_pyx_checksum, align 8, !dbg !3129, !tbaa !3130
  %214 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3131, !tbaa !1899
  %__pyx_n_s_pyx_state199 = getelementptr inbounds %struct.__pyx_mstate, ptr %214, i32 0, i32 73, !dbg !3131
  %215 = load ptr, ptr %__pyx_n_s_pyx_state199, align 8, !dbg !3131, !tbaa !3096
  %216 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3132, !tbaa !1899
  %__pyx_n_s_pyx_PickleError = getelementptr inbounds %struct.__pyx_mstate, ptr %216, i32 0, i32 70, !dbg !3132
  %217 = load ptr, ptr %__pyx_n_s_pyx_PickleError, align 8, !dbg !3132, !tbaa !3133
  %218 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3134, !tbaa !1899
  %__pyx_n_s_pyx_result = getelementptr inbounds %struct.__pyx_mstate, ptr %218, i32 0, i32 72, !dbg !3134
  %219 = load ptr, ptr %__pyx_n_s_pyx_result, align 8, !dbg !3134, !tbaa !3135
  %call200 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 5, ptr noundef %211, ptr noundef %213, ptr noundef %215, ptr noundef %217, ptr noundef %219), !dbg !3136
  %220 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3137, !tbaa !1899
  %__pyx_tuple__17 = getelementptr inbounds %struct.__pyx_mstate, ptr %220, i32 0, i32 102, !dbg !3137
  store ptr %call200, ptr %__pyx_tuple__17, align 8, !dbg !3138, !tbaa !3139
  %221 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3140, !tbaa !1899
  %__pyx_tuple__17201 = getelementptr inbounds %struct.__pyx_mstate, ptr %221, i32 0, i32 102, !dbg !3140
  %222 = load ptr, ptr %__pyx_tuple__17201, align 8, !dbg !3140, !tbaa !3139
  %tobool202 = icmp ne ptr %222, null, !dbg !3140
  %lnot203 = xor i1 %tobool202, true, !dbg !3140
  %lnot205 = xor i1 %lnot203, true, !dbg !3140
  %lnot207 = xor i1 %lnot205, true, !dbg !3140
  %lnot.ext208 = zext i1 %lnot207 to i32, !dbg !3140
  %conv209 = sext i32 %lnot.ext208 to i64, !dbg !3140
  %expval210 = call i64 @llvm.expect.i64(i64 %conv209, i64 0), !dbg !3140
  %tobool211 = icmp ne i64 %expval210, 0, !dbg !3140
  br i1 %tobool211, label %if.then212, label %if.end213, !dbg !3142

if.then212:                                       ; preds = %if.end198
  %223 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3143, !tbaa !1899
  store ptr %223, ptr @__pyx_filename, align 8, !dbg !3143, !tbaa !1899
  %224 = load ptr, ptr @__pyx_filename, align 8, !dbg !3143, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !3143, !tbaa !1984
  %225 = load i32, ptr @__pyx_lineno, align 4, !dbg !3143, !tbaa !1984
  store i32 6467, ptr @__pyx_clineno, align 4, !dbg !3143, !tbaa !1984
  %226 = load i32, ptr @__pyx_clineno, align 4, !dbg !3143, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3146

if.end213:                                        ; preds = %if.end198
  %227 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3147, !tbaa !1899
  %__pyx_empty_bytes214 = getelementptr inbounds %struct.__pyx_mstate, ptr %227, i32 0, i32 4, !dbg !3147
  %228 = load ptr, ptr %__pyx_empty_bytes214, align 8, !dbg !3147, !tbaa !2086
  %229 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3148, !tbaa !1899
  %__pyx_empty_tuple215 = getelementptr inbounds %struct.__pyx_mstate, ptr %229, i32 0, i32 3, !dbg !3148
  %230 = load ptr, ptr %__pyx_empty_tuple215, align 8, !dbg !3148, !tbaa !2075
  %231 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3149, !tbaa !1899
  %__pyx_empty_tuple216 = getelementptr inbounds %struct.__pyx_mstate, ptr %231, i32 0, i32 3, !dbg !3149
  %232 = load ptr, ptr %__pyx_empty_tuple216, align 8, !dbg !3149, !tbaa !2075
  %233 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3150, !tbaa !1899
  %__pyx_tuple__17217 = getelementptr inbounds %struct.__pyx_mstate, ptr %233, i32 0, i32 102, !dbg !3150
  %234 = load ptr, ptr %__pyx_tuple__17217, align 8, !dbg !3150, !tbaa !3139
  %235 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3151, !tbaa !1899
  %__pyx_empty_tuple218 = getelementptr inbounds %struct.__pyx_mstate, ptr %235, i32 0, i32 3, !dbg !3151
  %236 = load ptr, ptr %__pyx_empty_tuple218, align 8, !dbg !3151, !tbaa !2075
  %237 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3152, !tbaa !1899
  %__pyx_empty_tuple219 = getelementptr inbounds %struct.__pyx_mstate, ptr %237, i32 0, i32 3, !dbg !3152
  %238 = load ptr, ptr %__pyx_empty_tuple219, align 8, !dbg !3152, !tbaa !2075
  %239 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3153, !tbaa !1899
  %__pyx_kp_s_stringsource220 = getelementptr inbounds %struct.__pyx_mstate, ptr %239, i32 0, i32 85, !dbg !3153
  %240 = load ptr, ptr %__pyx_kp_s_stringsource220, align 8, !dbg !3153, !tbaa !3081
  %241 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3154, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %241, i32 0, i32 75, !dbg !3154
  %242 = load ptr, ptr %__pyx_n_s_pyx_unpickle_StateMap, align 8, !dbg !3154, !tbaa !2521
  %243 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3155, !tbaa !1899
  %__pyx_empty_bytes221 = getelementptr inbounds %struct.__pyx_mstate, ptr %243, i32 0, i32 4, !dbg !3155
  %244 = load ptr, ptr %__pyx_empty_bytes221, align 8, !dbg !3155, !tbaa !2086
  %call222 = call ptr @__Pyx_PyCode_New(i32 noundef 3, i32 noundef 0, i32 noundef 0, i32 noundef 5, i32 noundef 0, i32 noundef 3, ptr noundef %228, ptr noundef %230, ptr noundef %232, ptr noundef %234, ptr noundef %236, ptr noundef %238, ptr noundef %240, ptr noundef %242, i32 noundef 1, ptr noundef %244), !dbg !3156
  %245 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3157, !tbaa !1899
  %__pyx_codeobj__18 = getelementptr inbounds %struct.__pyx_mstate, ptr %245, i32 0, i32 108, !dbg !3157
  store ptr %call222, ptr %__pyx_codeobj__18, align 8, !dbg !3158, !tbaa !2525
  %246 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3159, !tbaa !1899
  %__pyx_codeobj__18223 = getelementptr inbounds %struct.__pyx_mstate, ptr %246, i32 0, i32 108, !dbg !3159
  %247 = load ptr, ptr %__pyx_codeobj__18223, align 8, !dbg !3159, !tbaa !2525
  %tobool224 = icmp ne ptr %247, null, !dbg !3159
  %lnot225 = xor i1 %tobool224, true, !dbg !3159
  %lnot227 = xor i1 %lnot225, true, !dbg !3159
  %lnot229 = xor i1 %lnot227, true, !dbg !3159
  %lnot.ext230 = zext i1 %lnot229 to i32, !dbg !3159
  %conv231 = sext i32 %lnot.ext230 to i64, !dbg !3159
  %expval232 = call i64 @llvm.expect.i64(i64 %conv231, i64 0), !dbg !3159
  %tobool233 = icmp ne i64 %expval232, 0, !dbg !3159
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !3161

if.then234:                                       ; preds = %if.end213
  %248 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3162, !tbaa !1899
  store ptr %248, ptr @__pyx_filename, align 8, !dbg !3162, !tbaa !1899
  %249 = load ptr, ptr @__pyx_filename, align 8, !dbg !3162, !tbaa !1899
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !3162, !tbaa !1984
  %250 = load i32, ptr @__pyx_lineno, align 4, !dbg !3162, !tbaa !1984
  store i32 6470, ptr @__pyx_clineno, align 4, !dbg !3162, !tbaa !1984
  %251 = load i32, ptr @__pyx_clineno, align 4, !dbg !3162, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3165

if.end235:                                        ; preds = %if.end213
  store i32 0, ptr %retval, align 4, !dbg !3166
  br label %return, !dbg !3166

__pyx_L1_error:                                   ; preds = %if.then234, %if.then212, %if.then197, %if.then175, %if.then160, %if.then139, %if.then124, %if.then102, %if.then86, %if.then64, %if.then50, %if.then36, %if.then17, %if.then
  tail call void @llvm.dbg.label(metadata !2924), !dbg !3167
  store i32 -1, ptr %retval, align 4, !dbg !3168
  br label %return, !dbg !3168

return:                                           ; preds = %__pyx_L1_error, %if.end235
  %252 = load i32, ptr %retval, align 4, !dbg !3169
  ret i32 %252, !dbg !3169
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_global_init_code() #0 !dbg !3170 {
entry:
  ret i32 0, !dbg !3171
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_export_code() #0 !dbg !3172 {
entry:
  ret i32 0, !dbg !3173
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_export_code() #0 !dbg !3174 {
entry:
  %retval = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3180
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3176, metadata !DIExpression()), !dbg !3181
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3181, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3182
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3177, metadata !DIExpression()), !dbg !3183
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3183, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3184
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3178, metadata !DIExpression()), !dbg !3185
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3185, !tbaa !1984
  %call = call i32 @__Pyx_ExportFunction(ptr noundef @.str.67, ptr noundef @__pyx_f_6Cython_4Plex_3DFA_nfa_to_dfa, ptr noundef @.str.68), !dbg !3186
  %cmp = icmp slt i32 %call, 0, !dbg !3188
  br i1 %cmp, label %if.then, label %if.end, !dbg !3189

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @__pyx_f, align 16, !dbg !3190, !tbaa !1899
  store ptr %0, ptr %__pyx_filename, align 8, !dbg !3190, !tbaa !1899
  %1 = load ptr, ptr %__pyx_filename, align 8, !dbg !3190, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3190, !tbaa !1984
  %2 = load i32, ptr %__pyx_lineno, align 4, !dbg !3190, !tbaa !1984
  store i32 6530, ptr %__pyx_clineno, align 4, !dbg !3190, !tbaa !1984
  %3 = load i32, ptr %__pyx_clineno, align 4, !dbg !3190, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3193

if.end:                                           ; preds = %entry
  %call1 = call i32 @__Pyx_ExportFunction(ptr noundef @.str.69, ptr noundef @__pyx_f_6Cython_4Plex_3DFA_set_epsilon_closure, ptr noundef @.str.70), !dbg !3194
  %cmp2 = icmp slt i32 %call1, 0, !dbg !3196
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3197

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr @__pyx_f, align 16, !dbg !3198, !tbaa !1899
  store ptr %4, ptr %__pyx_filename, align 8, !dbg !3198, !tbaa !1899
  %5 = load ptr, ptr %__pyx_filename, align 8, !dbg !3198, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3198, !tbaa !1984
  %6 = load i32, ptr %__pyx_lineno, align 4, !dbg !3198, !tbaa !1984
  store i32 6531, ptr %__pyx_clineno, align 4, !dbg !3198, !tbaa !1984
  %7 = load i32, ptr %__pyx_clineno, align 4, !dbg !3198, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3201

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @__Pyx_ExportFunction(ptr noundef @.str.71, ptr noundef @__pyx_f_6Cython_4Plex_3DFA_epsilon_closure, ptr noundef @.str.72), !dbg !3202
  %cmp6 = icmp slt i32 %call5, 0, !dbg !3204
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3205

if.then7:                                         ; preds = %if.end4
  %8 = load ptr, ptr @__pyx_f, align 16, !dbg !3206, !tbaa !1899
  store ptr %8, ptr %__pyx_filename, align 8, !dbg !3206, !tbaa !1899
  %9 = load ptr, ptr %__pyx_filename, align 8, !dbg !3206, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3206, !tbaa !1984
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !3206, !tbaa !1984
  store i32 6532, ptr %__pyx_clineno, align 4, !dbg !3206, !tbaa !1984
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !3206, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3209

if.end8:                                          ; preds = %if.end4
  %call9 = call i32 @__Pyx_ExportFunction(ptr noundef @.str.73, ptr noundef @__pyx_f_6Cython_4Plex_3DFA_add_to_epsilon_closure, ptr noundef @.str.74), !dbg !3210
  %cmp10 = icmp slt i32 %call9, 0, !dbg !3212
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3213

if.then11:                                        ; preds = %if.end8
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !3214, !tbaa !1899
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !3214, !tbaa !1899
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !3214, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3214, !tbaa !1984
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !3214, !tbaa !1984
  store i32 6533, ptr %__pyx_clineno, align 4, !dbg !3214, !tbaa !1984
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !3214, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3217

if.end12:                                         ; preds = %if.end8
  store i32 0, ptr %retval, align 4, !dbg !3218
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3218

__pyx_L1_error:                                   ; preds = %if.then11, %if.then7, %if.then3, %if.then
  tail call void @llvm.dbg.label(metadata !3179), !dbg !3219
  store i32 -1, ptr %retval, align 4, !dbg !3220
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3220

cleanup:                                          ; preds = %__pyx_L1_error, %if.end12
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3221
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3221
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3221
  %16 = load i32, ptr %retval, align 4, !dbg !3221
  ret i32 %16, !dbg !3221
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_init_code() #0 !dbg !3222 {
entry:
  %retval = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3228
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3224, metadata !DIExpression()), !dbg !3229
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3229, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3230
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3225, metadata !DIExpression()), !dbg !3231
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3231, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3232
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3226, metadata !DIExpression()), !dbg !3233
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3233, !tbaa !1984
  store ptr @__pyx_vtable_6Cython_4Plex_3DFA_StateMap, ptr @__pyx_vtabptr_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !3234, !tbaa !1899
  store ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_old_to_new, ptr @__pyx_vtable_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !3235, !tbaa !3236
  store ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_6Cython_4Plex_3DFA_StateMap, ptr @__pyx_vtable_6Cython_4Plex_3DFA_StateMap, i32 0, i32 1), align 8, !dbg !3238, !tbaa !3239
  store ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_make_key, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_6Cython_4Plex_3DFA_StateMap, ptr @__pyx_vtable_6Cython_4Plex_3DFA_StateMap, i32 0, i32 2), align 8, !dbg !3240, !tbaa !3241
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3242, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 18, !dbg !3242
  store ptr @__pyx_type_6Cython_4Plex_3DFA_StateMap, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !3243, !tbaa !2419
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3244, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap1 = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 18, !dbg !3244
  %2 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap1, align 8, !dbg !3244, !tbaa !2419
  %call = call i32 @__Pyx_PyType_Ready(ptr noundef %2), !dbg !3246
  %cmp = icmp slt i32 %call, 0, !dbg !3247
  br i1 %cmp, label %if.then, label %if.end, !dbg !3248

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !3249, !tbaa !1899
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !3249, !tbaa !1899
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !3249, !tbaa !1899
  store i32 94, ptr %__pyx_lineno, align 4, !dbg !3249, !tbaa !1984
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !3249, !tbaa !1984
  store i32 6561, ptr %__pyx_clineno, align 4, !dbg !3249, !tbaa !1984
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !3249, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3252

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3253, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap2 = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 18, !dbg !3253
  %8 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap2, align 8, !dbg !3253, !tbaa !2419
  %tp_dictoffset = getelementptr inbounds %struct._typeobject, ptr %8, i32 0, i32 34, !dbg !3253
  %9 = load i64, ptr %tp_dictoffset, align 8, !dbg !3253, !tbaa !3255
  %tobool = icmp ne i64 %9, 0, !dbg !3253
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3253

land.rhs:                                         ; preds = %if.end
  %10 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3253, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap3 = getelementptr inbounds %struct.__pyx_mstate, ptr %10, i32 0, i32 18, !dbg !3253
  %11 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap3, align 8, !dbg !3253, !tbaa !2419
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %11, i32 0, i32 16, !dbg !3253
  %12 = load ptr, ptr %tp_getattro, align 8, !dbg !3253, !tbaa !3256
  %cmp4 = icmp eq ptr %12, @PyObject_GenericGetAttr, !dbg !3253
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %13 = phi i1 [ false, %if.end ], [ %cmp4, %land.rhs ], !dbg !3257
  %lnot = xor i1 %13, true, !dbg !3253
  %lnot5 = xor i1 %lnot, true, !dbg !3253
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !3253
  %conv = sext i32 %lnot.ext to i64, !dbg !3253
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3253
  %tobool6 = icmp ne i64 %expval, 0, !dbg !3253
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !3258

if.then7:                                         ; preds = %land.end
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3259, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap8 = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 18, !dbg !3259
  %15 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap8, align 8, !dbg !3259, !tbaa !2419
  %tp_getattro9 = getelementptr inbounds %struct._typeobject, ptr %15, i32 0, i32 16, !dbg !3261
  store ptr @PyObject_GenericGetAttr, ptr %tp_getattro9, align 8, !dbg !3262, !tbaa !3256
  br label %if.end10, !dbg !3263

if.end10:                                         ; preds = %if.then7, %land.end
  %16 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3264, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap11 = getelementptr inbounds %struct.__pyx_mstate, ptr %16, i32 0, i32 18, !dbg !3264
  %17 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap11, align 8, !dbg !3264, !tbaa !2419
  %18 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !3266, !tbaa !1899
  %call12 = call i32 @__Pyx_SetVtable(ptr noundef %17, ptr noundef %18), !dbg !3267
  %cmp13 = icmp slt i32 %call12, 0, !dbg !3268
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3269

if.then15:                                        ; preds = %if.end10
  %19 = load ptr, ptr @__pyx_f, align 16, !dbg !3270, !tbaa !1899
  store ptr %19, ptr %__pyx_filename, align 8, !dbg !3270, !tbaa !1899
  %20 = load ptr, ptr %__pyx_filename, align 8, !dbg !3270, !tbaa !1899
  store i32 94, ptr %__pyx_lineno, align 4, !dbg !3270, !tbaa !1984
  %21 = load i32, ptr %__pyx_lineno, align 4, !dbg !3270, !tbaa !1984
  store i32 6571, ptr %__pyx_clineno, align 4, !dbg !3270, !tbaa !1984
  %22 = load i32, ptr %__pyx_clineno, align 4, !dbg !3270, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3273

if.end16:                                         ; preds = %if.end10
  %23 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3274, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap17 = getelementptr inbounds %struct.__pyx_mstate, ptr %23, i32 0, i32 18, !dbg !3274
  %24 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap17, align 8, !dbg !3274, !tbaa !2419
  %call18 = call i32 @__Pyx_MergeVtables(ptr noundef %24), !dbg !3276
  %cmp19 = icmp slt i32 %call18, 0, !dbg !3277
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !3278

if.then21:                                        ; preds = %if.end16
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !3279, !tbaa !1899
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !3279, !tbaa !1899
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !3279, !tbaa !1899
  store i32 94, ptr %__pyx_lineno, align 4, !dbg !3279, !tbaa !1984
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !3279, !tbaa !1984
  store i32 6573, ptr %__pyx_clineno, align 4, !dbg !3279, !tbaa !1984
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !3279, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3282

if.end22:                                         ; preds = %if.end16
  %29 = load ptr, ptr @__pyx_m, align 8, !dbg !3283, !tbaa !1899
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3285, !tbaa !1899
  %__pyx_n_s_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 27, !dbg !3285
  %31 = load ptr, ptr %__pyx_n_s_StateMap, align 8, !dbg !3285, !tbaa !3286
  %32 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3287, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap23 = getelementptr inbounds %struct.__pyx_mstate, ptr %32, i32 0, i32 18, !dbg !3287
  %33 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap23, align 8, !dbg !3287, !tbaa !2419
  %call24 = call i32 @PyObject_SetAttr(ptr noundef %29, ptr noundef %31, ptr noundef %33), !dbg !3288
  %cmp25 = icmp slt i32 %call24, 0, !dbg !3289
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !3290

if.then27:                                        ; preds = %if.end22
  %34 = load ptr, ptr @__pyx_f, align 16, !dbg !3291, !tbaa !1899
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !3291, !tbaa !1899
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !3291, !tbaa !1899
  store i32 94, ptr %__pyx_lineno, align 4, !dbg !3291, !tbaa !1984
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !3291, !tbaa !1984
  store i32 6575, ptr %__pyx_clineno, align 4, !dbg !3291, !tbaa !1984
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !3291, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3294

if.end28:                                         ; preds = %if.end22
  %38 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3295, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap29 = getelementptr inbounds %struct.__pyx_mstate, ptr %38, i32 0, i32 18, !dbg !3295
  %39 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap29, align 8, !dbg !3295, !tbaa !2419
  %call30 = call i32 @__Pyx_setup_reduce(ptr noundef %39), !dbg !3297
  %cmp31 = icmp slt i32 %call30, 0, !dbg !3298
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !3299

if.then33:                                        ; preds = %if.end28
  %40 = load ptr, ptr @__pyx_f, align 16, !dbg !3300, !tbaa !1899
  store ptr %40, ptr %__pyx_filename, align 8, !dbg !3300, !tbaa !1899
  %41 = load ptr, ptr %__pyx_filename, align 8, !dbg !3300, !tbaa !1899
  store i32 94, ptr %__pyx_lineno, align 4, !dbg !3300, !tbaa !1984
  %42 = load i32, ptr %__pyx_lineno, align 4, !dbg !3300, !tbaa !1984
  store i32 6577, ptr %__pyx_clineno, align 4, !dbg !3300, !tbaa !1984
  %43 = load i32, ptr %__pyx_clineno, align 4, !dbg !3300, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3303

if.end34:                                         ; preds = %if.end28
  store i32 0, ptr %retval, align 4, !dbg !3304
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3304

__pyx_L1_error:                                   ; preds = %if.then33, %if.then27, %if.then21, %if.then15, %if.then
  tail call void @llvm.dbg.label(metadata !3227), !dbg !3305
  store i32 -1, ptr %retval, align 4, !dbg !3306
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3306

cleanup:                                          ; preds = %__pyx_L1_error, %if.end34
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3307
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3307
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3307
  %44 = load i32, ptr %retval, align 4, !dbg !3307
  ret i32 %44, !dbg !3307
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_import_code() #0 !dbg !3308 {
entry:
  %retval = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !3315
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !3310, metadata !DIExpression()), !dbg !3316
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3316, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3317
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3311, metadata !DIExpression()), !dbg !3318
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3318, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3319
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3312, metadata !DIExpression()), !dbg !3320
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3320, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3321
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3313, metadata !DIExpression()), !dbg !3322
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3322, !tbaa !1984
  %call = call ptr @PyImport_ImportModule(ptr noundef @.str.130), !dbg !3323
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !3324, !tbaa !1899
  %0 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3325, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !3325
  %lnot = xor i1 %tobool, true, !dbg !3325
  %lnot1 = xor i1 %lnot, true, !dbg !3325
  %lnot2 = xor i1 %lnot1, true, !dbg !3325
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3325
  %conv = sext i32 %lnot.ext to i64, !dbg !3325
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3325
  %tobool3 = icmp ne i64 %expval, 0, !dbg !3325
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3327

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3328, !tbaa !1899
  store ptr %1, ptr %__pyx_filename, align 8, !dbg !3328, !tbaa !1899
  %2 = load ptr, ptr %__pyx_filename, align 8, !dbg !3328, !tbaa !1899
  store i32 3, ptr %__pyx_lineno, align 4, !dbg !3328, !tbaa !1984
  %3 = load i32, ptr %__pyx_lineno, align 4, !dbg !3328, !tbaa !1984
  store i32 6594, ptr %__pyx_clineno, align 4, !dbg !3328, !tbaa !1984
  %4 = load i32, ptr %__pyx_clineno, align 4, !dbg !3328, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3331

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3332, !tbaa !1899
  %call4 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %5, ptr noundef @.str.130, ptr noundef @.str.131, i64 noundef 24, i64 noundef 8, i32 noundef 1), !dbg !3333
  %6 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3334, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Action = getelementptr inbounds %struct.__pyx_mstate, ptr %6, i32 0, i32 7, !dbg !3334
  store ptr %call4, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Action, align 8, !dbg !3335, !tbaa !3336
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3337, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Action5 = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 7, !dbg !3337
  %8 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Action5, align 8, !dbg !3337, !tbaa !3336
  %tobool6 = icmp ne ptr %8, null, !dbg !3337
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !3339

if.then7:                                         ; preds = %if.end
  %9 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3340, !tbaa !1899
  store ptr %9, ptr %__pyx_filename, align 8, !dbg !3340, !tbaa !1899
  %10 = load ptr, ptr %__pyx_filename, align 8, !dbg !3340, !tbaa !1899
  store i32 3, ptr %__pyx_lineno, align 4, !dbg !3340, !tbaa !1984
  %11 = load i32, ptr %__pyx_lineno, align 4, !dbg !3340, !tbaa !1984
  store i32 6596, ptr %__pyx_clineno, align 4, !dbg !3340, !tbaa !1984
  %12 = load i32, ptr %__pyx_clineno, align 4, !dbg !3340, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3343

if.end8:                                          ; preds = %if.end
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3344, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Action9 = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 7, !dbg !3344
  %14 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Action9, align 8, !dbg !3344, !tbaa !3336
  %call10 = call ptr @__Pyx_GetVtable(ptr noundef %14), !dbg !3345
  store ptr %call10, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Action, align 8, !dbg !3346, !tbaa !1899
  %15 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Action, align 8, !dbg !3347, !tbaa !1899
  %tobool11 = icmp ne ptr %15, null, !dbg !3347
  %lnot12 = xor i1 %tobool11, true, !dbg !3347
  %lnot14 = xor i1 %lnot12, true, !dbg !3347
  %lnot16 = xor i1 %lnot14, true, !dbg !3347
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !3347
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !3347
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0), !dbg !3347
  %tobool20 = icmp ne i64 %expval19, 0, !dbg !3347
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3349

if.then21:                                        ; preds = %if.end8
  %16 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3350, !tbaa !1899
  store ptr %16, ptr %__pyx_filename, align 8, !dbg !3350, !tbaa !1899
  %17 = load ptr, ptr %__pyx_filename, align 8, !dbg !3350, !tbaa !1899
  store i32 3, ptr %__pyx_lineno, align 4, !dbg !3350, !tbaa !1984
  %18 = load i32, ptr %__pyx_lineno, align 4, !dbg !3350, !tbaa !1984
  store i32 6597, ptr %__pyx_clineno, align 4, !dbg !3350, !tbaa !1984
  %19 = load i32, ptr %__pyx_clineno, align 4, !dbg !3350, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3353

if.end22:                                         ; preds = %if.end8
  %20 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3354, !tbaa !1899
  %call23 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %20, ptr noundef @.str.130, ptr noundef @.str.132, i64 noundef 32, i64 noundef 8, i32 noundef 1), !dbg !3355
  %21 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3356, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Return = getelementptr inbounds %struct.__pyx_mstate, ptr %21, i32 0, i32 8, !dbg !3356
  store ptr %call23, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Return, align 8, !dbg !3357, !tbaa !3358
  %22 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3359, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Return24 = getelementptr inbounds %struct.__pyx_mstate, ptr %22, i32 0, i32 8, !dbg !3359
  %23 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Return24, align 8, !dbg !3359, !tbaa !3358
  %tobool25 = icmp ne ptr %23, null, !dbg !3359
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !3361

if.then26:                                        ; preds = %if.end22
  %24 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3362, !tbaa !1899
  store ptr %24, ptr %__pyx_filename, align 8, !dbg !3362, !tbaa !1899
  %25 = load ptr, ptr %__pyx_filename, align 8, !dbg !3362, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !3362, !tbaa !1984
  %26 = load i32, ptr %__pyx_lineno, align 4, !dbg !3362, !tbaa !1984
  store i32 6598, ptr %__pyx_clineno, align 4, !dbg !3362, !tbaa !1984
  %27 = load i32, ptr %__pyx_clineno, align 4, !dbg !3362, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3365

if.end27:                                         ; preds = %if.end22
  %28 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3366, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Return28 = getelementptr inbounds %struct.__pyx_mstate, ptr %28, i32 0, i32 8, !dbg !3366
  %29 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Return28, align 8, !dbg !3366, !tbaa !3358
  %call29 = call ptr @__Pyx_GetVtable(ptr noundef %29), !dbg !3367
  store ptr %call29, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Return, align 8, !dbg !3368, !tbaa !1899
  %30 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Return, align 8, !dbg !3369, !tbaa !1899
  %tobool30 = icmp ne ptr %30, null, !dbg !3369
  %lnot31 = xor i1 %tobool30, true, !dbg !3369
  %lnot33 = xor i1 %lnot31, true, !dbg !3369
  %lnot35 = xor i1 %lnot33, true, !dbg !3369
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !3369
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !3369
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0), !dbg !3369
  %tobool39 = icmp ne i64 %expval38, 0, !dbg !3369
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !3371

if.then40:                                        ; preds = %if.end27
  %31 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3372, !tbaa !1899
  store ptr %31, ptr %__pyx_filename, align 8, !dbg !3372, !tbaa !1899
  %32 = load ptr, ptr %__pyx_filename, align 8, !dbg !3372, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !3372, !tbaa !1984
  %33 = load i32, ptr %__pyx_lineno, align 4, !dbg !3372, !tbaa !1984
  store i32 6599, ptr %__pyx_clineno, align 4, !dbg !3372, !tbaa !1984
  %34 = load i32, ptr %__pyx_clineno, align 4, !dbg !3372, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3375

if.end41:                                         ; preds = %if.end27
  %35 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3376, !tbaa !1899
  %call42 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %35, ptr noundef @.str.130, ptr noundef @.str.133, i64 noundef 32, i64 noundef 8, i32 noundef 1), !dbg !3377
  %36 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3378, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Call = getelementptr inbounds %struct.__pyx_mstate, ptr %36, i32 0, i32 9, !dbg !3378
  store ptr %call42, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Call, align 8, !dbg !3379, !tbaa !3380
  %37 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3381, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Call43 = getelementptr inbounds %struct.__pyx_mstate, ptr %37, i32 0, i32 9, !dbg !3381
  %38 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Call43, align 8, !dbg !3381, !tbaa !3380
  %tobool44 = icmp ne ptr %38, null, !dbg !3381
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !3383

if.then45:                                        ; preds = %if.end41
  %39 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3384, !tbaa !1899
  store ptr %39, ptr %__pyx_filename, align 8, !dbg !3384, !tbaa !1899
  %40 = load ptr, ptr %__pyx_filename, align 8, !dbg !3384, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !3384, !tbaa !1984
  %41 = load i32, ptr %__pyx_lineno, align 4, !dbg !3384, !tbaa !1984
  store i32 6600, ptr %__pyx_clineno, align 4, !dbg !3384, !tbaa !1984
  %42 = load i32, ptr %__pyx_clineno, align 4, !dbg !3384, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3387

if.end46:                                         ; preds = %if.end41
  %43 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3388, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Call47 = getelementptr inbounds %struct.__pyx_mstate, ptr %43, i32 0, i32 9, !dbg !3388
  %44 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Call47, align 8, !dbg !3388, !tbaa !3380
  %call48 = call ptr @__Pyx_GetVtable(ptr noundef %44), !dbg !3389
  store ptr %call48, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Call, align 8, !dbg !3390, !tbaa !1899
  %45 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Call, align 8, !dbg !3391, !tbaa !1899
  %tobool49 = icmp ne ptr %45, null, !dbg !3391
  %lnot50 = xor i1 %tobool49, true, !dbg !3391
  %lnot52 = xor i1 %lnot50, true, !dbg !3391
  %lnot54 = xor i1 %lnot52, true, !dbg !3391
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !3391
  %conv56 = sext i32 %lnot.ext55 to i64, !dbg !3391
  %expval57 = call i64 @llvm.expect.i64(i64 %conv56, i64 0), !dbg !3391
  %tobool58 = icmp ne i64 %expval57, 0, !dbg !3391
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !3393

if.then59:                                        ; preds = %if.end46
  %46 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3394, !tbaa !1899
  store ptr %46, ptr %__pyx_filename, align 8, !dbg !3394, !tbaa !1899
  %47 = load ptr, ptr %__pyx_filename, align 8, !dbg !3394, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !3394, !tbaa !1984
  %48 = load i32, ptr %__pyx_lineno, align 4, !dbg !3394, !tbaa !1984
  store i32 6601, ptr %__pyx_clineno, align 4, !dbg !3394, !tbaa !1984
  %49 = load i32, ptr %__pyx_clineno, align 4, !dbg !3394, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3397

if.end60:                                         ; preds = %if.end46
  %50 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3398, !tbaa !1899
  %call61 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %50, ptr noundef @.str.130, ptr noundef @.str.134, i64 noundef 40, i64 noundef 8, i32 noundef 1), !dbg !3399
  %51 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3400, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Method = getelementptr inbounds %struct.__pyx_mstate, ptr %51, i32 0, i32 10, !dbg !3400
  store ptr %call61, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Method, align 8, !dbg !3401, !tbaa !3402
  %52 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3403, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Method62 = getelementptr inbounds %struct.__pyx_mstate, ptr %52, i32 0, i32 10, !dbg !3403
  %53 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Method62, align 8, !dbg !3403, !tbaa !3402
  %tobool63 = icmp ne ptr %53, null, !dbg !3403
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !3405

if.then64:                                        ; preds = %if.end60
  %54 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3406, !tbaa !1899
  store ptr %54, ptr %__pyx_filename, align 8, !dbg !3406, !tbaa !1899
  %55 = load ptr, ptr %__pyx_filename, align 8, !dbg !3406, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !3406, !tbaa !1984
  %56 = load i32, ptr %__pyx_lineno, align 4, !dbg !3406, !tbaa !1984
  store i32 6602, ptr %__pyx_clineno, align 4, !dbg !3406, !tbaa !1984
  %57 = load i32, ptr %__pyx_clineno, align 4, !dbg !3406, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3409

if.end65:                                         ; preds = %if.end60
  %58 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3410, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Method66 = getelementptr inbounds %struct.__pyx_mstate, ptr %58, i32 0, i32 10, !dbg !3410
  %59 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Method66, align 8, !dbg !3410, !tbaa !3402
  %call67 = call ptr @__Pyx_GetVtable(ptr noundef %59), !dbg !3411
  store ptr %call67, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Method, align 8, !dbg !3412, !tbaa !1899
  %60 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Method, align 8, !dbg !3413, !tbaa !1899
  %tobool68 = icmp ne ptr %60, null, !dbg !3413
  %lnot69 = xor i1 %tobool68, true, !dbg !3413
  %lnot71 = xor i1 %lnot69, true, !dbg !3413
  %lnot73 = xor i1 %lnot71, true, !dbg !3413
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !3413
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !3413
  %expval76 = call i64 @llvm.expect.i64(i64 %conv75, i64 0), !dbg !3413
  %tobool77 = icmp ne i64 %expval76, 0, !dbg !3413
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !3415

if.then78:                                        ; preds = %if.end65
  %61 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3416, !tbaa !1899
  store ptr %61, ptr %__pyx_filename, align 8, !dbg !3416, !tbaa !1899
  %62 = load ptr, ptr %__pyx_filename, align 8, !dbg !3416, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !3416, !tbaa !1984
  %63 = load i32, ptr %__pyx_lineno, align 4, !dbg !3416, !tbaa !1984
  store i32 6603, ptr %__pyx_clineno, align 4, !dbg !3416, !tbaa !1984
  %64 = load i32, ptr %__pyx_clineno, align 4, !dbg !3416, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3419

if.end79:                                         ; preds = %if.end65
  %65 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3420, !tbaa !1899
  %call80 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %65, ptr noundef @.str.130, ptr noundef @.str.135, i64 noundef 32, i64 noundef 8, i32 noundef 1), !dbg !3421
  %66 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3422, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Begin = getelementptr inbounds %struct.__pyx_mstate, ptr %66, i32 0, i32 11, !dbg !3422
  store ptr %call80, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Begin, align 8, !dbg !3423, !tbaa !3424
  %67 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3425, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Begin81 = getelementptr inbounds %struct.__pyx_mstate, ptr %67, i32 0, i32 11, !dbg !3425
  %68 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Begin81, align 8, !dbg !3425, !tbaa !3424
  %tobool82 = icmp ne ptr %68, null, !dbg !3425
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !3427

if.then83:                                        ; preds = %if.end79
  %69 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3428, !tbaa !1899
  store ptr %69, ptr %__pyx_filename, align 8, !dbg !3428, !tbaa !1899
  %70 = load ptr, ptr %__pyx_filename, align 8, !dbg !3428, !tbaa !1899
  store i32 18, ptr %__pyx_lineno, align 4, !dbg !3428, !tbaa !1984
  %71 = load i32, ptr %__pyx_lineno, align 4, !dbg !3428, !tbaa !1984
  store i32 6604, ptr %__pyx_clineno, align 4, !dbg !3428, !tbaa !1984
  %72 = load i32, ptr %__pyx_clineno, align 4, !dbg !3428, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3431

if.end84:                                         ; preds = %if.end79
  %73 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3432, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Begin85 = getelementptr inbounds %struct.__pyx_mstate, ptr %73, i32 0, i32 11, !dbg !3432
  %74 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Begin85, align 8, !dbg !3432, !tbaa !3424
  %call86 = call ptr @__Pyx_GetVtable(ptr noundef %74), !dbg !3433
  store ptr %call86, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Begin, align 8, !dbg !3434, !tbaa !1899
  %75 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Begin, align 8, !dbg !3435, !tbaa !1899
  %tobool87 = icmp ne ptr %75, null, !dbg !3435
  %lnot88 = xor i1 %tobool87, true, !dbg !3435
  %lnot90 = xor i1 %lnot88, true, !dbg !3435
  %lnot92 = xor i1 %lnot90, true, !dbg !3435
  %lnot.ext93 = zext i1 %lnot92 to i32, !dbg !3435
  %conv94 = sext i32 %lnot.ext93 to i64, !dbg !3435
  %expval95 = call i64 @llvm.expect.i64(i64 %conv94, i64 0), !dbg !3435
  %tobool96 = icmp ne i64 %expval95, 0, !dbg !3435
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !3437

if.then97:                                        ; preds = %if.end84
  %76 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3438, !tbaa !1899
  store ptr %76, ptr %__pyx_filename, align 8, !dbg !3438, !tbaa !1899
  %77 = load ptr, ptr %__pyx_filename, align 8, !dbg !3438, !tbaa !1899
  store i32 18, ptr %__pyx_lineno, align 4, !dbg !3438, !tbaa !1984
  %78 = load i32, ptr %__pyx_lineno, align 4, !dbg !3438, !tbaa !1984
  store i32 6605, ptr %__pyx_clineno, align 4, !dbg !3438, !tbaa !1984
  %79 = load i32, ptr %__pyx_clineno, align 4, !dbg !3438, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3441

if.end98:                                         ; preds = %if.end84
  %80 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3442, !tbaa !1899
  %call99 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %80, ptr noundef @.str.130, ptr noundef @.str.136, i64 noundef 24, i64 noundef 8, i32 noundef 1), !dbg !3443
  %81 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3444, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Ignore = getelementptr inbounds %struct.__pyx_mstate, ptr %81, i32 0, i32 12, !dbg !3444
  store ptr %call99, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Ignore, align 8, !dbg !3445, !tbaa !3446
  %82 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3447, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Ignore100 = getelementptr inbounds %struct.__pyx_mstate, ptr %82, i32 0, i32 12, !dbg !3447
  %83 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Ignore100, align 8, !dbg !3447, !tbaa !3446
  %tobool101 = icmp ne ptr %83, null, !dbg !3447
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !3449

if.then102:                                       ; preds = %if.end98
  %84 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3450, !tbaa !1899
  store ptr %84, ptr %__pyx_filename, align 8, !dbg !3450, !tbaa !1899
  %85 = load ptr, ptr %__pyx_filename, align 8, !dbg !3450, !tbaa !1899
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !3450, !tbaa !1984
  %86 = load i32, ptr %__pyx_lineno, align 4, !dbg !3450, !tbaa !1984
  store i32 6606, ptr %__pyx_clineno, align 4, !dbg !3450, !tbaa !1984
  %87 = load i32, ptr %__pyx_clineno, align 4, !dbg !3450, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3453

if.end103:                                        ; preds = %if.end98
  %88 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3454, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Ignore104 = getelementptr inbounds %struct.__pyx_mstate, ptr %88, i32 0, i32 12, !dbg !3454
  %89 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Ignore104, align 8, !dbg !3454, !tbaa !3446
  %call105 = call ptr @__Pyx_GetVtable(ptr noundef %89), !dbg !3455
  store ptr %call105, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Ignore, align 8, !dbg !3456, !tbaa !1899
  %90 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Ignore, align 8, !dbg !3457, !tbaa !1899
  %tobool106 = icmp ne ptr %90, null, !dbg !3457
  %lnot107 = xor i1 %tobool106, true, !dbg !3457
  %lnot109 = xor i1 %lnot107, true, !dbg !3457
  %lnot111 = xor i1 %lnot109, true, !dbg !3457
  %lnot.ext112 = zext i1 %lnot111 to i32, !dbg !3457
  %conv113 = sext i32 %lnot.ext112 to i64, !dbg !3457
  %expval114 = call i64 @llvm.expect.i64(i64 %conv113, i64 0), !dbg !3457
  %tobool115 = icmp ne i64 %expval114, 0, !dbg !3457
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !3459

if.then116:                                       ; preds = %if.end103
  %91 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3460, !tbaa !1899
  store ptr %91, ptr %__pyx_filename, align 8, !dbg !3460, !tbaa !1899
  %92 = load ptr, ptr %__pyx_filename, align 8, !dbg !3460, !tbaa !1899
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !3460, !tbaa !1984
  %93 = load i32, ptr %__pyx_lineno, align 4, !dbg !3460, !tbaa !1984
  store i32 6607, ptr %__pyx_clineno, align 4, !dbg !3460, !tbaa !1984
  %94 = load i32, ptr %__pyx_clineno, align 4, !dbg !3460, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3463

if.end117:                                        ; preds = %if.end103
  %95 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3464, !tbaa !1899
  %call118 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %95, ptr noundef @.str.130, ptr noundef @.str.137, i64 noundef 24, i64 noundef 8, i32 noundef 1), !dbg !3465
  %96 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3466, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Text = getelementptr inbounds %struct.__pyx_mstate, ptr %96, i32 0, i32 13, !dbg !3466
  store ptr %call118, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Text, align 8, !dbg !3467, !tbaa !3468
  %97 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3469, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Text119 = getelementptr inbounds %struct.__pyx_mstate, ptr %97, i32 0, i32 13, !dbg !3469
  %98 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Text119, align 8, !dbg !3469, !tbaa !3468
  %tobool120 = icmp ne ptr %98, null, !dbg !3469
  br i1 %tobool120, label %if.end122, label %if.then121, !dbg !3471

if.then121:                                       ; preds = %if.end117
  %99 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3472, !tbaa !1899
  store ptr %99, ptr %__pyx_filename, align 8, !dbg !3472, !tbaa !1899
  %100 = load ptr, ptr %__pyx_filename, align 8, !dbg !3472, !tbaa !1899
  store i32 25, ptr %__pyx_lineno, align 4, !dbg !3472, !tbaa !1984
  %101 = load i32, ptr %__pyx_lineno, align 4, !dbg !3472, !tbaa !1984
  store i32 6608, ptr %__pyx_clineno, align 4, !dbg !3472, !tbaa !1984
  %102 = load i32, ptr %__pyx_clineno, align 4, !dbg !3472, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3475

if.end122:                                        ; preds = %if.end117
  %103 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3476, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_7Actions_Text123 = getelementptr inbounds %struct.__pyx_mstate, ptr %103, i32 0, i32 13, !dbg !3476
  %104 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_7Actions_Text123, align 8, !dbg !3476, !tbaa !3468
  %call124 = call ptr @__Pyx_GetVtable(ptr noundef %104), !dbg !3477
  store ptr %call124, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Text, align 8, !dbg !3478, !tbaa !1899
  %105 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_7Actions_Text, align 8, !dbg !3479, !tbaa !1899
  %tobool125 = icmp ne ptr %105, null, !dbg !3479
  %lnot126 = xor i1 %tobool125, true, !dbg !3479
  %lnot128 = xor i1 %lnot126, true, !dbg !3479
  %lnot130 = xor i1 %lnot128, true, !dbg !3479
  %lnot.ext131 = zext i1 %lnot130 to i32, !dbg !3479
  %conv132 = sext i32 %lnot.ext131 to i64, !dbg !3479
  %expval133 = call i64 @llvm.expect.i64(i64 %conv132, i64 0), !dbg !3479
  %tobool134 = icmp ne i64 %expval133, 0, !dbg !3479
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !3481

if.then135:                                       ; preds = %if.end122
  %106 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 2), align 16, !dbg !3482, !tbaa !1899
  store ptr %106, ptr %__pyx_filename, align 8, !dbg !3482, !tbaa !1899
  %107 = load ptr, ptr %__pyx_filename, align 8, !dbg !3482, !tbaa !1899
  store i32 25, ptr %__pyx_lineno, align 4, !dbg !3482, !tbaa !1984
  %108 = load i32, ptr %__pyx_lineno, align 4, !dbg !3482, !tbaa !1984
  store i32 6609, ptr %__pyx_clineno, align 4, !dbg !3482, !tbaa !1984
  %109 = load i32, ptr %__pyx_clineno, align 4, !dbg !3482, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3485

if.end136:                                        ; preds = %if.end122
  %110 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3486, !tbaa !1899
  call void @Py_DECREF(ptr noundef %110), !dbg !3486
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3487, !tbaa !1899
  %call137 = call ptr @PyImport_ImportModule(ptr noundef @.str.138), !dbg !3488
  store ptr %call137, ptr %__pyx_t_1, align 8, !dbg !3489, !tbaa !1899
  %111 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3490, !tbaa !1899
  %tobool138 = icmp ne ptr %111, null, !dbg !3490
  %lnot139 = xor i1 %tobool138, true, !dbg !3490
  %lnot141 = xor i1 %lnot139, true, !dbg !3490
  %lnot143 = xor i1 %lnot141, true, !dbg !3490
  %lnot.ext144 = zext i1 %lnot143 to i32, !dbg !3490
  %conv145 = sext i32 %lnot.ext144 to i64, !dbg !3490
  %expval146 = call i64 @llvm.expect.i64(i64 %conv145, i64 0), !dbg !3490
  %tobool147 = icmp ne i64 %expval146, 0, !dbg !3490
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !3492

if.then148:                                       ; preds = %if.end136
  %112 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 3), align 8, !dbg !3493, !tbaa !1899
  store ptr %112, ptr %__pyx_filename, align 8, !dbg !3493, !tbaa !1899
  %113 = load ptr, ptr %__pyx_filename, align 8, !dbg !3493, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !3493, !tbaa !1984
  %114 = load i32, ptr %__pyx_lineno, align 4, !dbg !3493, !tbaa !1984
  store i32 6611, ptr %__pyx_clineno, align 4, !dbg !3493, !tbaa !1984
  %115 = load i32, ptr %__pyx_clineno, align 4, !dbg !3493, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3496

if.end149:                                        ; preds = %if.end136
  %116 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3497, !tbaa !1899
  %call150 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %116, ptr noundef @.str.138, ptr noundef @.str.139, i64 noundef 40, i64 noundef 8, i32 noundef 1), !dbg !3498
  %117 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3499, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap = getelementptr inbounds %struct.__pyx_mstate, ptr %117, i32 0, i32 14, !dbg !3499
  store ptr %call150, ptr %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap, align 8, !dbg !3500, !tbaa !3501
  %118 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3502, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap151 = getelementptr inbounds %struct.__pyx_mstate, ptr %118, i32 0, i32 14, !dbg !3502
  %119 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap151, align 8, !dbg !3502, !tbaa !3501
  %tobool152 = icmp ne ptr %119, null, !dbg !3502
  br i1 %tobool152, label %if.end154, label %if.then153, !dbg !3504

if.then153:                                       ; preds = %if.end149
  %120 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 3), align 8, !dbg !3505, !tbaa !1899
  store ptr %120, ptr %__pyx_filename, align 8, !dbg !3505, !tbaa !1899
  %121 = load ptr, ptr %__pyx_filename, align 8, !dbg !3505, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !3505, !tbaa !1984
  %122 = load i32, ptr %__pyx_lineno, align 4, !dbg !3505, !tbaa !1984
  store i32 6613, ptr %__pyx_clineno, align 4, !dbg !3505, !tbaa !1984
  %123 = load i32, ptr %__pyx_clineno, align 4, !dbg !3505, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3508

if.end154:                                        ; preds = %if.end149
  %124 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3509, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap155 = getelementptr inbounds %struct.__pyx_mstate, ptr %124, i32 0, i32 14, !dbg !3509
  %125 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap155, align 8, !dbg !3509, !tbaa !3501
  %call156 = call ptr @__Pyx_GetVtable(ptr noundef %125), !dbg !3510
  store ptr %call156, ptr @__pyx_vtabptr_6Cython_4Plex_11Transitions_TransitionMap, align 8, !dbg !3511, !tbaa !1899
  %126 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_11Transitions_TransitionMap, align 8, !dbg !3512, !tbaa !1899
  %tobool157 = icmp ne ptr %126, null, !dbg !3512
  %lnot158 = xor i1 %tobool157, true, !dbg !3512
  %lnot160 = xor i1 %lnot158, true, !dbg !3512
  %lnot162 = xor i1 %lnot160, true, !dbg !3512
  %lnot.ext163 = zext i1 %lnot162 to i32, !dbg !3512
  %conv164 = sext i32 %lnot.ext163 to i64, !dbg !3512
  %expval165 = call i64 @llvm.expect.i64(i64 %conv164, i64 0), !dbg !3512
  %tobool166 = icmp ne i64 %expval165, 0, !dbg !3512
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !3514

if.then167:                                       ; preds = %if.end154
  %127 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 3), align 8, !dbg !3515, !tbaa !1899
  store ptr %127, ptr %__pyx_filename, align 8, !dbg !3515, !tbaa !1899
  %128 = load ptr, ptr %__pyx_filename, align 8, !dbg !3515, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !3515, !tbaa !1984
  %129 = load i32, ptr %__pyx_lineno, align 4, !dbg !3515, !tbaa !1984
  store i32 6614, ptr %__pyx_clineno, align 4, !dbg !3515, !tbaa !1984
  %130 = load i32, ptr %__pyx_clineno, align 4, !dbg !3515, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3518

if.end168:                                        ; preds = %if.end154
  %131 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3519, !tbaa !1899
  call void @Py_DECREF(ptr noundef %131), !dbg !3519
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3520, !tbaa !1899
  %call169 = call ptr @PyImport_ImportModule(ptr noundef @.str.140), !dbg !3521
  store ptr %call169, ptr %__pyx_t_1, align 8, !dbg !3522, !tbaa !1899
  %132 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3523, !tbaa !1899
  %tobool170 = icmp ne ptr %132, null, !dbg !3523
  %lnot171 = xor i1 %tobool170, true, !dbg !3523
  %lnot173 = xor i1 %lnot171, true, !dbg !3523
  %lnot175 = xor i1 %lnot173, true, !dbg !3523
  %lnot.ext176 = zext i1 %lnot175 to i32, !dbg !3523
  %conv177 = sext i32 %lnot.ext176 to i64, !dbg !3523
  %expval178 = call i64 @llvm.expect.i64(i64 %conv177, i64 0), !dbg !3523
  %tobool179 = icmp ne i64 %expval178, 0, !dbg !3523
  br i1 %tobool179, label %if.then180, label %if.end181, !dbg !3525

if.then180:                                       ; preds = %if.end168
  %133 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 4), align 16, !dbg !3526, !tbaa !1899
  store ptr %133, ptr %__pyx_filename, align 8, !dbg !3526, !tbaa !1899
  %134 = load ptr, ptr %__pyx_filename, align 8, !dbg !3526, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !3526, !tbaa !1984
  %135 = load i32, ptr %__pyx_lineno, align 4, !dbg !3526, !tbaa !1984
  store i32 6616, ptr %__pyx_clineno, align 4, !dbg !3526, !tbaa !1984
  %136 = load i32, ptr %__pyx_clineno, align 4, !dbg !3526, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3529

if.end181:                                        ; preds = %if.end168
  %137 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3530, !tbaa !1899
  %call182 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %137, ptr noundef @.str.140, ptr noundef @.str.141, i64 noundef 48, i64 noundef 8, i32 noundef 1), !dbg !3531
  %138 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3532, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Machine = getelementptr inbounds %struct.__pyx_mstate, ptr %138, i32 0, i32 15, !dbg !3532
  store ptr %call182, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Machine, align 8, !dbg !3533, !tbaa !3534
  %139 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3535, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Machine183 = getelementptr inbounds %struct.__pyx_mstate, ptr %139, i32 0, i32 15, !dbg !3535
  %140 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Machine183, align 8, !dbg !3535, !tbaa !3534
  %tobool184 = icmp ne ptr %140, null, !dbg !3535
  br i1 %tobool184, label %if.end186, label %if.then185, !dbg !3537

if.then185:                                       ; preds = %if.end181
  %141 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 4), align 16, !dbg !3538, !tbaa !1899
  store ptr %141, ptr %__pyx_filename, align 8, !dbg !3538, !tbaa !1899
  %142 = load ptr, ptr %__pyx_filename, align 8, !dbg !3538, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !3538, !tbaa !1984
  %143 = load i32, ptr %__pyx_lineno, align 4, !dbg !3538, !tbaa !1984
  store i32 6618, ptr %__pyx_clineno, align 4, !dbg !3538, !tbaa !1984
  %144 = load i32, ptr %__pyx_clineno, align 4, !dbg !3538, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3541

if.end186:                                        ; preds = %if.end181
  %145 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3542, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Machine187 = getelementptr inbounds %struct.__pyx_mstate, ptr %145, i32 0, i32 15, !dbg !3542
  %146 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Machine187, align 8, !dbg !3542, !tbaa !3534
  %call188 = call ptr @__Pyx_GetVtable(ptr noundef %146), !dbg !3543
  store ptr %call188, ptr @__pyx_vtabptr_6Cython_4Plex_8Machines_Machine, align 8, !dbg !3544, !tbaa !1899
  %147 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_8Machines_Machine, align 8, !dbg !3545, !tbaa !1899
  %tobool189 = icmp ne ptr %147, null, !dbg !3545
  %lnot190 = xor i1 %tobool189, true, !dbg !3545
  %lnot192 = xor i1 %lnot190, true, !dbg !3545
  %lnot194 = xor i1 %lnot192, true, !dbg !3545
  %lnot.ext195 = zext i1 %lnot194 to i32, !dbg !3545
  %conv196 = sext i32 %lnot.ext195 to i64, !dbg !3545
  %expval197 = call i64 @llvm.expect.i64(i64 %conv196, i64 0), !dbg !3545
  %tobool198 = icmp ne i64 %expval197, 0, !dbg !3545
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !3547

if.then199:                                       ; preds = %if.end186
  %148 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 4), align 16, !dbg !3548, !tbaa !1899
  store ptr %148, ptr %__pyx_filename, align 8, !dbg !3548, !tbaa !1899
  %149 = load ptr, ptr %__pyx_filename, align 8, !dbg !3548, !tbaa !1899
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !3548, !tbaa !1984
  %150 = load i32, ptr %__pyx_lineno, align 4, !dbg !3548, !tbaa !1984
  store i32 6619, ptr %__pyx_clineno, align 4, !dbg !3548, !tbaa !1984
  %151 = load i32, ptr %__pyx_clineno, align 4, !dbg !3548, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3551

if.end200:                                        ; preds = %if.end186
  %152 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3552, !tbaa !1899
  %call201 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %152, ptr noundef @.str.140, ptr noundef @.str.142, i64 noundef 56, i64 noundef 8, i32 noundef 1), !dbg !3553
  %153 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3554, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Node = getelementptr inbounds %struct.__pyx_mstate, ptr %153, i32 0, i32 16, !dbg !3554
  store ptr %call201, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Node, align 8, !dbg !3555, !tbaa !3556
  %154 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3557, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Node202 = getelementptr inbounds %struct.__pyx_mstate, ptr %154, i32 0, i32 16, !dbg !3557
  %155 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Node202, align 8, !dbg !3557, !tbaa !3556
  %tobool203 = icmp ne ptr %155, null, !dbg !3557
  br i1 %tobool203, label %if.end205, label %if.then204, !dbg !3559

if.then204:                                       ; preds = %if.end200
  %156 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 4), align 16, !dbg !3560, !tbaa !1899
  store ptr %156, ptr %__pyx_filename, align 8, !dbg !3560, !tbaa !1899
  %157 = load ptr, ptr %__pyx_filename, align 8, !dbg !3560, !tbaa !1899
  store i32 20, ptr %__pyx_lineno, align 4, !dbg !3560, !tbaa !1984
  %158 = load i32, ptr %__pyx_lineno, align 4, !dbg !3560, !tbaa !1984
  store i32 6620, ptr %__pyx_clineno, align 4, !dbg !3560, !tbaa !1984
  %159 = load i32, ptr %__pyx_clineno, align 4, !dbg !3560, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3563

if.end205:                                        ; preds = %if.end200
  %160 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3564, !tbaa !1899
  %call206 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %160, ptr noundef @.str.140, ptr noundef @.str.143, i64 noundef 48, i64 noundef 8, i32 noundef 1), !dbg !3565
  %161 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3566, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine = getelementptr inbounds %struct.__pyx_mstate, ptr %161, i32 0, i32 17, !dbg !3566
  store ptr %call206, ptr %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine, align 8, !dbg !3567, !tbaa !3568
  %162 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3569, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine207 = getelementptr inbounds %struct.__pyx_mstate, ptr %162, i32 0, i32 17, !dbg !3569
  %163 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine207, align 8, !dbg !3569, !tbaa !3568
  %tobool208 = icmp ne ptr %163, null, !dbg !3569
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !3571

if.then209:                                       ; preds = %if.end205
  %164 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 4), align 16, !dbg !3572, !tbaa !1899
  store ptr %164, ptr %__pyx_filename, align 8, !dbg !3572, !tbaa !1899
  %165 = load ptr, ptr %__pyx_filename, align 8, !dbg !3572, !tbaa !1899
  store i32 29, ptr %__pyx_lineno, align 4, !dbg !3572, !tbaa !1984
  %166 = load i32, ptr %__pyx_lineno, align 4, !dbg !3572, !tbaa !1984
  store i32 6621, ptr %__pyx_clineno, align 4, !dbg !3572, !tbaa !1984
  %167 = load i32, ptr %__pyx_clineno, align 4, !dbg !3572, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3575

if.end210:                                        ; preds = %if.end205
  %168 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3576, !tbaa !1899
  call void @Py_DECREF(ptr noundef %168), !dbg !3576
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3577, !tbaa !1899
  store i32 0, ptr %retval, align 4, !dbg !3578
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3578

__pyx_L1_error:                                   ; preds = %if.then209, %if.then204, %if.then199, %if.then185, %if.then180, %if.then167, %if.then153, %if.then148, %if.then135, %if.then121, %if.then116, %if.then102, %if.then97, %if.then83, %if.then78, %if.then64, %if.then59, %if.then45, %if.then40, %if.then26, %if.then21, %if.then7, %if.then
  tail call void @llvm.dbg.label(metadata !3314), !dbg !3579
  %169 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3580, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %169), !dbg !3580
  store i32 -1, ptr %retval, align 4, !dbg !3581
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3581

cleanup:                                          ; preds = %__pyx_L1_error, %if.end210
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3582
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3582
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3582
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !3582
  %170 = load i32, ptr %retval, align 4, !dbg !3582
  ret i32 %170, !dbg !3582
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_import_code() #0 !dbg !3583 {
entry:
  %retval = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !3590
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !3585, metadata !DIExpression()), !dbg !3591
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3591, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3592
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3586, metadata !DIExpression()), !dbg !3593
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3593, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3594
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3587, metadata !DIExpression()), !dbg !3595
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3595, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3596
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3588, metadata !DIExpression()), !dbg !3597
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3597, !tbaa !1984
  %call = call ptr @PyImport_ImportModule(ptr noundef @.str.138), !dbg !3598
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !3599, !tbaa !1899
  %0 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3600, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !3600
  br i1 %tobool, label %if.end, label %if.then, !dbg !3602

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_f, align 16, !dbg !3603, !tbaa !1899
  store ptr %1, ptr %__pyx_filename, align 8, !dbg !3603, !tbaa !1899
  %2 = load ptr, ptr %__pyx_filename, align 8, !dbg !3603, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3603, !tbaa !1984
  %3 = load i32, ptr %__pyx_lineno, align 4, !dbg !3603, !tbaa !1984
  store i32 6639, ptr %__pyx_clineno, align 4, !dbg !3603, !tbaa !1984
  %4 = load i32, ptr %__pyx_clineno, align 4, !dbg !3603, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3606

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3607, !tbaa !1899
  %call1 = call i32 @__Pyx_ImportVoidPtr_3_0_4(ptr noundef %5, ptr noundef @.str.148, ptr noundef @__pyx_vp_6Cython_4Plex_11Transitions_maxint, ptr noundef @.str.149), !dbg !3609
  %cmp = icmp slt i32 %call1, 0, !dbg !3610
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3611

if.then2:                                         ; preds = %if.end
  %6 = load ptr, ptr @__pyx_f, align 16, !dbg !3612, !tbaa !1899
  store ptr %6, ptr %__pyx_filename, align 8, !dbg !3612, !tbaa !1899
  %7 = load ptr, ptr %__pyx_filename, align 8, !dbg !3612, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3612, !tbaa !1984
  %8 = load i32, ptr %__pyx_lineno, align 4, !dbg !3612, !tbaa !1984
  store i32 6641, ptr %__pyx_clineno, align 4, !dbg !3612, !tbaa !1984
  %9 = load i32, ptr %__pyx_clineno, align 4, !dbg !3612, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3615

if.end3:                                          ; preds = %if.end
  %10 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3616, !tbaa !1899
  call void @Py_DECREF(ptr noundef %10), !dbg !3616
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3617, !tbaa !1899
  %call4 = call ptr @PyImport_ImportModule(ptr noundef @.str.140), !dbg !3618
  store ptr %call4, ptr %__pyx_t_1, align 8, !dbg !3619, !tbaa !1899
  %11 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3620, !tbaa !1899
  %tobool5 = icmp ne ptr %11, null, !dbg !3620
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !3622

if.then6:                                         ; preds = %if.end3
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !3623, !tbaa !1899
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !3623, !tbaa !1899
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !3623, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3623, !tbaa !1984
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !3623, !tbaa !1984
  store i32 6643, ptr %__pyx_clineno, align 4, !dbg !3623, !tbaa !1984
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !3623, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3626

if.end7:                                          ; preds = %if.end3
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3627, !tbaa !1899
  %call8 = call i32 @__Pyx_ImportVoidPtr_3_0_4(ptr noundef %16, ptr noundef @.str.148, ptr noundef @__pyx_vp_6Cython_4Plex_8Machines_maxint, ptr noundef @.str.150), !dbg !3629
  %cmp9 = icmp slt i32 %call8, 0, !dbg !3630
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3631

if.then10:                                        ; preds = %if.end7
  %17 = load ptr, ptr @__pyx_f, align 16, !dbg !3632, !tbaa !1899
  store ptr %17, ptr %__pyx_filename, align 8, !dbg !3632, !tbaa !1899
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !3632, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !3632, !tbaa !1984
  %19 = load i32, ptr %__pyx_lineno, align 4, !dbg !3632, !tbaa !1984
  store i32 6645, ptr %__pyx_clineno, align 4, !dbg !3632, !tbaa !1984
  %20 = load i32, ptr %__pyx_clineno, align 4, !dbg !3632, !tbaa !1984
  br label %__pyx_L1_error, !dbg !3635

if.end11:                                         ; preds = %if.end7
  %21 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3636, !tbaa !1899
  call void @Py_DECREF(ptr noundef %21), !dbg !3636
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3637, !tbaa !1899
  store i32 0, ptr %retval, align 4, !dbg !3638
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3638

__pyx_L1_error:                                   ; preds = %if.then10, %if.then6, %if.then2, %if.then
  tail call void @llvm.dbg.label(metadata !3589), !dbg !3639
  %22 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3640, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %22), !dbg !3640
  store i32 -1, ptr %retval, align 4, !dbg !3641
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3641

cleanup:                                          ; preds = %__pyx_L1_error, %if.end11
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !3642
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !3642
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !3642
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !3642
  %23 = load i32, ptr %retval, align 4, !dbg !3642
  ret i32 %23, !dbg !3642
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_import_code() #0 !dbg !3643 {
entry:
  ret i32 0, !dbg !3644
}

declare !dbg !3645 ptr @PyList_New(i64 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @PyList_SET_ITEM(ptr noundef %op, i64 noundef %index, ptr noundef %value) #3 !dbg !3647 {
entry:
  %op.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !3651, metadata !DIExpression()), !dbg !3655
  store i64 %index, ptr %index.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !3652, metadata !DIExpression()), !dbg !3656
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !3653, metadata !DIExpression()), !dbg !3657
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #11, !dbg !3658
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !3654, metadata !DIExpression()), !dbg !3659
  %0 = load ptr, ptr %op.addr, align 8, !dbg !3660, !tbaa !1899
  store ptr %0, ptr %list, align 8, !dbg !3659, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !3661, !tbaa !1899
  %2 = load ptr, ptr %list, align 8, !dbg !3662, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %2, i32 0, i32 1, !dbg !3663
  %3 = load ptr, ptr %ob_item, align 8, !dbg !3663, !tbaa !3664
  %4 = load i64, ptr %index.addr, align 8, !dbg !3666, !tbaa !2597
  %arrayidx = getelementptr ptr, ptr %3, i64 %4, !dbg !3662
  store ptr %1, ptr %arrayidx, align 8, !dbg !3667, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #11, !dbg !3668
  ret void, !dbg !3668
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_Import(ptr noundef %name, ptr noundef %from_list, i32 noundef %level) #0 !dbg !3669 {
entry:
  %name.addr = alloca ptr, align 8
  %from_list.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %module = alloca ptr, align 8
  %empty_dict = alloca ptr, align 8
  %empty_list = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3671, metadata !DIExpression()), !dbg !3678
  store ptr %from_list, ptr %from_list.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %from_list.addr, metadata !3672, metadata !DIExpression()), !dbg !3679
  store i32 %level, ptr %level.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !3673, metadata !DIExpression()), !dbg !3680
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #11, !dbg !3681
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !3674, metadata !DIExpression()), !dbg !3682
  store ptr null, ptr %module, align 8, !dbg !3682, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_dict) #11, !dbg !3683
  tail call void @llvm.dbg.declare(metadata ptr %empty_dict, metadata !3675, metadata !DIExpression()), !dbg !3684
  store ptr null, ptr %empty_dict, align 8, !dbg !3684, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_list) #11, !dbg !3685
  tail call void @llvm.dbg.declare(metadata ptr %empty_list, metadata !3676, metadata !DIExpression()), !dbg !3686
  store ptr null, ptr %empty_list, align 8, !dbg !3686, !tbaa !1899
  %call = call ptr @PyDict_New(), !dbg !3687
  store ptr %call, ptr %empty_dict, align 8, !dbg !3688, !tbaa !1899
  %0 = load ptr, ptr %empty_dict, align 8, !dbg !3689, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !3689
  %lnot = xor i1 %tobool, true, !dbg !3689
  %lnot1 = xor i1 %lnot, true, !dbg !3689
  %lnot2 = xor i1 %lnot1, true, !dbg !3689
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3689
  %conv = sext i32 %lnot.ext to i64, !dbg !3689
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3689
  %tobool3 = icmp ne i64 %expval, 0, !dbg !3689
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3691

if.then:                                          ; preds = %entry
  br label %bad, !dbg !3692

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %level.addr, align 4, !dbg !3693, !tbaa !1984
  %cmp = icmp eq i32 %1, -1, !dbg !3696
  br i1 %cmp, label %if.then5, label %if.end32, !dbg !3697

if.then5:                                         ; preds = %if.end
  %2 = load ptr, ptr %name.addr, align 8, !dbg !3698, !tbaa !1899
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3702, !tbaa !1899
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 0, !dbg !3702
  %4 = load ptr, ptr %__pyx_d, align 8, !dbg !3702, !tbaa !2019
  %5 = load ptr, ptr %empty_dict, align 8, !dbg !3703, !tbaa !1899
  %6 = load ptr, ptr %from_list.addr, align 8, !dbg !3704, !tbaa !1899
  %call6 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %2, ptr noundef %4, ptr noundef %5, ptr noundef %6, i32 noundef 1), !dbg !3705
  store ptr %call6, ptr %module, align 8, !dbg !3706, !tbaa !1899
  %7 = load ptr, ptr %module, align 8, !dbg !3707, !tbaa !1899
  %tobool7 = icmp ne ptr %7, null, !dbg !3707
  %lnot8 = xor i1 %tobool7, true, !dbg !3707
  %lnot10 = xor i1 %lnot8, true, !dbg !3707
  %lnot12 = xor i1 %lnot10, true, !dbg !3707
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !3707
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !3707
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !3707
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !3707
  br i1 %tobool16, label %if.then17, label %if.end31, !dbg !3709

if.then17:                                        ; preds = %if.then5
  %8 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !3710, !tbaa !1899
  %call18 = call i32 @PyErr_ExceptionMatches(ptr noundef %8), !dbg !3710
  %tobool19 = icmp ne i32 %call18, 0, !dbg !3710
  %lnot20 = xor i1 %tobool19, true, !dbg !3710
  %lnot22 = xor i1 %lnot20, true, !dbg !3710
  %lnot24 = xor i1 %lnot22, true, !dbg !3710
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !3710
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !3710
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0), !dbg !3710
  %tobool28 = icmp ne i64 %expval27, 0, !dbg !3710
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !3713

if.then29:                                        ; preds = %if.then17
  br label %bad, !dbg !3714

if.end30:                                         ; preds = %if.then17
  call void @PyErr_Clear(), !dbg !3715
  br label %if.end31, !dbg !3716

if.end31:                                         ; preds = %if.end30, %if.then5
  store i32 0, ptr %level.addr, align 4, !dbg !3717, !tbaa !1984
  br label %if.end32, !dbg !3718

if.end32:                                         ; preds = %if.end31, %if.end
  %9 = load ptr, ptr %module, align 8, !dbg !3719, !tbaa !1899
  %tobool33 = icmp ne ptr %9, null, !dbg !3719
  br i1 %tobool33, label %if.end37, label %if.then34, !dbg !3721

if.then34:                                        ; preds = %if.end32
  %10 = load ptr, ptr %name.addr, align 8, !dbg !3722, !tbaa !1899
  %11 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3724, !tbaa !1899
  %__pyx_d35 = getelementptr inbounds %struct.__pyx_mstate, ptr %11, i32 0, i32 0, !dbg !3724
  %12 = load ptr, ptr %__pyx_d35, align 8, !dbg !3724, !tbaa !2019
  %13 = load ptr, ptr %empty_dict, align 8, !dbg !3725, !tbaa !1899
  %14 = load ptr, ptr %from_list.addr, align 8, !dbg !3726, !tbaa !1899
  %15 = load i32, ptr %level.addr, align 4, !dbg !3727, !tbaa !1984
  %call36 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %10, ptr noundef %12, ptr noundef %13, ptr noundef %14, i32 noundef %15), !dbg !3728
  store ptr %call36, ptr %module, align 8, !dbg !3729, !tbaa !1899
  br label %if.end37, !dbg !3730

if.end37:                                         ; preds = %if.then34, %if.end32
  br label %bad, !dbg !3731

bad:                                              ; preds = %if.end37, %if.then29, %if.then
  tail call void @llvm.dbg.label(metadata !3677), !dbg !3732
  %16 = load ptr, ptr %empty_dict, align 8, !dbg !3733, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %16), !dbg !3733
  %17 = load ptr, ptr %empty_list, align 8, !dbg !3734, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %17), !dbg !3734
  %18 = load ptr, ptr %module, align 8, !dbg !3735, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_list) #11, !dbg !3736
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_dict) #11, !dbg !3736
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #11, !dbg !3736
  ret ptr %18, !dbg !3737
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_ImportFrom(ptr noundef %module, ptr noundef %name) #0 !dbg !3738 {
entry:
  %module.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %value = alloca ptr, align 8
  %module_name_str = alloca ptr, align 8
  %module_name = alloca ptr, align 8
  %module_dot = alloca ptr, align 8
  %full_name = alloca ptr, align 8
  store ptr %module, ptr %module.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !3740, metadata !DIExpression()), !dbg !3750
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3741, metadata !DIExpression()), !dbg !3751
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !3752
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !3742, metadata !DIExpression()), !dbg !3753
  %0 = load ptr, ptr %module.addr, align 8, !dbg !3754, !tbaa !1899
  %1 = load ptr, ptr %name.addr, align 8, !dbg !3755, !tbaa !1899
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1), !dbg !3756
  store ptr %call, ptr %value, align 8, !dbg !3753, !tbaa !1899
  %2 = load ptr, ptr %value, align 8, !dbg !3757, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !3757
  %lnot = xor i1 %tobool, true, !dbg !3757
  %lnot1 = xor i1 %lnot, true, !dbg !3757
  %lnot2 = xor i1 %lnot1, true, !dbg !3757
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3757
  %conv = sext i32 %lnot.ext to i64, !dbg !3757
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3757
  %tobool3 = icmp ne i64 %expval, 0, !dbg !3757
  br i1 %tobool3, label %land.lhs.true, label %if.end58, !dbg !3758

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !3759, !tbaa !1899
  %call4 = call i32 @PyErr_ExceptionMatches(ptr noundef %3), !dbg !3760
  %tobool5 = icmp ne i32 %call4, 0, !dbg !3760
  br i1 %tobool5, label %if.then, label %if.end58, !dbg !3761

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %module_name_str) #11, !dbg !3762
  tail call void @llvm.dbg.declare(metadata ptr %module_name_str, metadata !3743, metadata !DIExpression()), !dbg !3763
  store ptr null, ptr %module_name_str, align 8, !dbg !3763, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %module_name) #11, !dbg !3764
  tail call void @llvm.dbg.declare(metadata ptr %module_name, metadata !3746, metadata !DIExpression()), !dbg !3765
  store ptr null, ptr %module_name, align 8, !dbg !3765, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %module_dot) #11, !dbg !3766
  tail call void @llvm.dbg.declare(metadata ptr %module_dot, metadata !3747, metadata !DIExpression()), !dbg !3767
  store ptr null, ptr %module_dot, align 8, !dbg !3767, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %full_name) #11, !dbg !3768
  tail call void @llvm.dbg.declare(metadata ptr %full_name, metadata !3748, metadata !DIExpression()), !dbg !3769
  store ptr null, ptr %full_name, align 8, !dbg !3769, !tbaa !1899
  call void @PyErr_Clear(), !dbg !3770
  %4 = load ptr, ptr %module.addr, align 8, !dbg !3771, !tbaa !1899
  %call6 = call ptr @PyModule_GetName(ptr noundef %4), !dbg !3772
  store ptr %call6, ptr %module_name_str, align 8, !dbg !3773, !tbaa !1899
  %5 = load ptr, ptr %module_name_str, align 8, !dbg !3774, !tbaa !1899
  %tobool7 = icmp ne ptr %5, null, !dbg !3774
  %lnot8 = xor i1 %tobool7, true, !dbg !3774
  %lnot10 = xor i1 %lnot8, true, !dbg !3774
  %lnot12 = xor i1 %lnot10, true, !dbg !3774
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !3774
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !3774
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !3774
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !3774
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !3776

if.then17:                                        ; preds = %if.then
  br label %modbad, !dbg !3777

if.end:                                           ; preds = %if.then
  %6 = load ptr, ptr %module_name_str, align 8, !dbg !3779, !tbaa !1899
  %call18 = call ptr @PyUnicode_FromString(ptr noundef %6), !dbg !3780
  store ptr %call18, ptr %module_name, align 8, !dbg !3781, !tbaa !1899
  %7 = load ptr, ptr %module_name, align 8, !dbg !3782, !tbaa !1899
  %tobool19 = icmp ne ptr %7, null, !dbg !3782
  %lnot20 = xor i1 %tobool19, true, !dbg !3782
  %lnot22 = xor i1 %lnot20, true, !dbg !3782
  %lnot24 = xor i1 %lnot22, true, !dbg !3782
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !3782
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !3782
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0), !dbg !3782
  %tobool28 = icmp ne i64 %expval27, 0, !dbg !3782
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !3784

if.then29:                                        ; preds = %if.end
  br label %modbad, !dbg !3785

if.end30:                                         ; preds = %if.end
  %8 = load ptr, ptr %module_name, align 8, !dbg !3787, !tbaa !1899
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3788, !tbaa !1899
  %__pyx_kp_u_ = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 19, !dbg !3788
  %10 = load ptr, ptr %__pyx_kp_u_, align 8, !dbg !3788, !tbaa !3789
  %call31 = call ptr @PyUnicode_Concat(ptr noundef %8, ptr noundef %10), !dbg !3790
  store ptr %call31, ptr %module_dot, align 8, !dbg !3791, !tbaa !1899
  %11 = load ptr, ptr %module_dot, align 8, !dbg !3792, !tbaa !1899
  %tobool32 = icmp ne ptr %11, null, !dbg !3792
  %lnot33 = xor i1 %tobool32, true, !dbg !3792
  %lnot35 = xor i1 %lnot33, true, !dbg !3792
  %lnot37 = xor i1 %lnot35, true, !dbg !3792
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !3792
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !3792
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0), !dbg !3792
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !3792
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !3794

if.then42:                                        ; preds = %if.end30
  br label %modbad, !dbg !3795

if.end43:                                         ; preds = %if.end30
  %12 = load ptr, ptr %module_dot, align 8, !dbg !3797, !tbaa !1899
  %13 = load ptr, ptr %name.addr, align 8, !dbg !3798, !tbaa !1899
  %call44 = call ptr @PyUnicode_Concat(ptr noundef %12, ptr noundef %13), !dbg !3799
  store ptr %call44, ptr %full_name, align 8, !dbg !3800, !tbaa !1899
  %14 = load ptr, ptr %full_name, align 8, !dbg !3801, !tbaa !1899
  %tobool45 = icmp ne ptr %14, null, !dbg !3801
  %lnot46 = xor i1 %tobool45, true, !dbg !3801
  %lnot48 = xor i1 %lnot46, true, !dbg !3801
  %lnot50 = xor i1 %lnot48, true, !dbg !3801
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !3801
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !3801
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !3801
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !3801
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !3803

if.then55:                                        ; preds = %if.end43
  br label %modbad, !dbg !3804

if.end56:                                         ; preds = %if.end43
  %15 = load ptr, ptr %full_name, align 8, !dbg !3806, !tbaa !1899
  %call57 = call ptr @PyImport_GetModule(ptr noundef %15), !dbg !3807
  store ptr %call57, ptr %value, align 8, !dbg !3808, !tbaa !1899
  br label %modbad, !dbg !3809

modbad:                                           ; preds = %if.end56, %if.then55, %if.then42, %if.then29, %if.then17
  tail call void @llvm.dbg.label(metadata !3749), !dbg !3810
  %16 = load ptr, ptr %full_name, align 8, !dbg !3811, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %16), !dbg !3811
  %17 = load ptr, ptr %module_dot, align 8, !dbg !3812, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %17), !dbg !3812
  %18 = load ptr, ptr %module_name, align 8, !dbg !3813, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %18), !dbg !3813
  call void @llvm.lifetime.end.p0(i64 8, ptr %full_name) #11, !dbg !3814
  call void @llvm.lifetime.end.p0(i64 8, ptr %module_dot) #11, !dbg !3814
  call void @llvm.lifetime.end.p0(i64 8, ptr %module_name) #11, !dbg !3814
  call void @llvm.lifetime.end.p0(i64 8, ptr %module_name_str) #11, !dbg !3814
  br label %if.end58, !dbg !3815

if.end58:                                         ; preds = %modbad, %land.lhs.true, %entry
  %19 = load ptr, ptr %value, align 8, !dbg !3816, !tbaa !1899
  %tobool59 = icmp ne ptr %19, null, !dbg !3816
  %lnot60 = xor i1 %tobool59, true, !dbg !3816
  %lnot62 = xor i1 %lnot60, true, !dbg !3816
  %lnot64 = xor i1 %lnot62, true, !dbg !3816
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !3816
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !3816
  %expval67 = call i64 @llvm.expect.i64(i64 %conv66, i64 0), !dbg !3816
  %tobool68 = icmp ne i64 %expval67, 0, !dbg !3816
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !3818

if.then69:                                        ; preds = %if.end58
  %20 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !3819, !tbaa !1899
  %21 = load ptr, ptr %name.addr, align 8, !dbg !3821, !tbaa !1899
  %call70 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %20, ptr noundef @.str.153, ptr noundef %21), !dbg !3822
  br label %if.end71, !dbg !3823

if.end71:                                         ; preds = %if.then69, %if.end58
  %22 = load ptr, ptr %value, align 8, !dbg !3824, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !3825
  ret ptr %22, !dbg !3826
}

declare !dbg !3827 i32 @PyDict_SetItem(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_New(ptr noundef %ml, i32 noundef %flags, ptr noundef %qualname, ptr noundef %closure, ptr noundef %module, ptr noundef %globals, ptr noundef %code) #0 !dbg !3828 {
entry:
  %ml.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  %qualname.addr = alloca ptr, align 8
  %closure.addr = alloca ptr, align 8
  %module.addr = alloca ptr, align 8
  %globals.addr = alloca ptr, align 8
  %code.addr = alloca ptr, align 8
  %op = alloca ptr, align 8
  store ptr %ml, ptr %ml.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %ml.addr, metadata !3832, metadata !DIExpression()), !dbg !3840
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !3833, metadata !DIExpression()), !dbg !3841
  store ptr %qualname, ptr %qualname.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %qualname.addr, metadata !3834, metadata !DIExpression()), !dbg !3842
  store ptr %closure, ptr %closure.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %closure.addr, metadata !3835, metadata !DIExpression()), !dbg !3843
  store ptr %module, ptr %module.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !3836, metadata !DIExpression()), !dbg !3844
  store ptr %globals, ptr %globals.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %globals.addr, metadata !3837, metadata !DIExpression()), !dbg !3845
  store ptr %code, ptr %code.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %code.addr, metadata !3838, metadata !DIExpression()), !dbg !3846
  call void @llvm.lifetime.start.p0(i64 8, ptr %op) #11, !dbg !3847
  tail call void @llvm.dbg.declare(metadata ptr %op, metadata !3839, metadata !DIExpression()), !dbg !3848
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3849, !tbaa !1899
  %__pyx_CyFunctionType = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 6, !dbg !3849
  %1 = load ptr, ptr %__pyx_CyFunctionType, align 8, !dbg !3849, !tbaa !2815
  %call = call ptr @_PyObject_GC_New(ptr noundef %1), !dbg !3849
  %2 = load ptr, ptr %ml.addr, align 8, !dbg !3850, !tbaa !1899
  %3 = load i32, ptr %flags.addr, align 4, !dbg !3851, !tbaa !1984
  %4 = load ptr, ptr %qualname.addr, align 8, !dbg !3852, !tbaa !1899
  %5 = load ptr, ptr %closure.addr, align 8, !dbg !3853, !tbaa !1899
  %6 = load ptr, ptr %module.addr, align 8, !dbg !3854, !tbaa !1899
  %7 = load ptr, ptr %globals.addr, align 8, !dbg !3855, !tbaa !1899
  %8 = load ptr, ptr %code.addr, align 8, !dbg !3856, !tbaa !1899
  %call1 = call ptr @__Pyx_CyFunction_Init(ptr noundef %call, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %7, ptr noundef %8), !dbg !3857
  store ptr %call1, ptr %op, align 8, !dbg !3848, !tbaa !1899
  %9 = load ptr, ptr %op, align 8, !dbg !3858, !tbaa !1899
  %tobool = icmp ne ptr %9, null, !dbg !3858
  %lnot = xor i1 %tobool, true, !dbg !3858
  %lnot2 = xor i1 %lnot, true, !dbg !3858
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3858
  %conv = sext i32 %lnot.ext to i64, !dbg !3858
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3858
  %tobool3 = icmp ne i64 %expval, 0, !dbg !3858
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3860

if.then:                                          ; preds = %entry
  %10 = load ptr, ptr %op, align 8, !dbg !3861, !tbaa !1899
  call void @PyObject_GC_Track(ptr noundef %10), !dbg !3863
  br label %if.end, !dbg !3864

if.end:                                           ; preds = %if.then, %entry
  %11 = load ptr, ptr %op, align 8, !dbg !3865, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %op) #11, !dbg !3866
  ret ptr %11, !dbg !3867
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %func, ptr noundef %tuple) #3 !dbg !3868 {
entry:
  %func.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %m = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !3872, metadata !DIExpression()), !dbg !3875
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !3873, metadata !DIExpression()), !dbg !3876
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #11, !dbg !3877
  tail call void @llvm.dbg.declare(metadata ptr %m, metadata !3874, metadata !DIExpression()), !dbg !3878
  %0 = load ptr, ptr %func.addr, align 8, !dbg !3879, !tbaa !1899
  store ptr %0, ptr %m, align 8, !dbg !3878, !tbaa !1899
  %1 = load ptr, ptr %tuple.addr, align 8, !dbg !3880, !tbaa !1899
  %2 = load ptr, ptr %m, align 8, !dbg !3881, !tbaa !1899
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 12, !dbg !3882
  store ptr %1, ptr %defaults_tuple, align 8, !dbg !3883, !tbaa !3884
  %3 = load ptr, ptr %tuple.addr, align 8, !dbg !3888, !tbaa !1899
  call void @Py_INCREF(ptr noundef %3), !dbg !3888
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #11, !dbg !3889
  ret void, !dbg !3889
}

declare !dbg !3890 void @PyType_Modified(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_AddTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 !dbg !3893 {
entry:
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_frame = alloca ptr, align 8
  %tstate = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %funcname.addr, metadata !3897, metadata !DIExpression()), !dbg !3908
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !3898, metadata !DIExpression()), !dbg !3909
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %py_line.addr, metadata !3899, metadata !DIExpression()), !dbg !3910
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !3900, metadata !DIExpression()), !dbg !3911
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #11, !dbg !3912
  tail call void @llvm.dbg.declare(metadata ptr %py_code, metadata !3901, metadata !DIExpression()), !dbg !3913
  store ptr null, ptr %py_code, align 8, !dbg !3913, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_frame) #11, !dbg !3914
  tail call void @llvm.dbg.declare(metadata ptr %py_frame, metadata !3902, metadata !DIExpression()), !dbg !3915
  store ptr null, ptr %py_frame, align 8, !dbg !3915, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %tstate) #11, !dbg !3916
  tail call void @llvm.dbg.declare(metadata ptr %tstate, metadata !3903, metadata !DIExpression()), !dbg !3917
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !3918
  store ptr %call, ptr %tstate, align 8, !dbg !3917, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #11, !dbg !3919
  tail call void @llvm.dbg.declare(metadata ptr %ptype, metadata !3904, metadata !DIExpression()), !dbg !3920
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #11, !dbg !3919
  tail call void @llvm.dbg.declare(metadata ptr %pvalue, metadata !3905, metadata !DIExpression()), !dbg !3921
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #11, !dbg !3919
  tail call void @llvm.dbg.declare(metadata ptr %ptraceback, metadata !3906, metadata !DIExpression()), !dbg !3922
  %0 = load i32, ptr %c_line.addr, align 4, !dbg !3923, !tbaa !1984
  %tobool = icmp ne i32 %0, 0, !dbg !3923
  br i1 %tobool, label %if.then, label %if.end, !dbg !3925

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %tstate, align 8, !dbg !3926, !tbaa !1899
  %2 = load i32, ptr %c_line.addr, align 4, !dbg !3928, !tbaa !1984
  %call1 = call i32 @__Pyx_CLineForTraceback(ptr noundef %1, i32 noundef %2), !dbg !3929
  store i32 %call1, ptr %c_line.addr, align 4, !dbg !3930, !tbaa !1984
  br label %if.end, !dbg !3931

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !3932, !tbaa !1984
  %tobool2 = icmp ne i32 %3, 0, !dbg !3932
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !3932

cond.true:                                        ; preds = %if.end
  %4 = load i32, ptr %c_line.addr, align 4, !dbg !3933, !tbaa !1984
  %sub = sub i32 0, %4, !dbg !3934
  br label %cond.end, !dbg !3932

cond.false:                                       ; preds = %if.end
  %5 = load i32, ptr %py_line.addr, align 4, !dbg !3935, !tbaa !1984
  br label %cond.end, !dbg !3932

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %5, %cond.false ], !dbg !3932
  %call3 = call ptr @__pyx_find_code_object(i32 noundef %cond), !dbg !3936
  store ptr %call3, ptr %py_code, align 8, !dbg !3937, !tbaa !1899
  %6 = load ptr, ptr %py_code, align 8, !dbg !3938, !tbaa !1899
  %tobool4 = icmp ne ptr %6, null, !dbg !3938
  br i1 %tobool4, label %if.end16, label %if.then5, !dbg !3940

if.then5:                                         ; preds = %cond.end
  %7 = load ptr, ptr %tstate, align 8, !dbg !3941, !tbaa !1899
  call void @__Pyx_ErrFetchInState(ptr noundef %7, ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback), !dbg !3943
  %8 = load ptr, ptr %funcname.addr, align 8, !dbg !3944, !tbaa !1899
  %9 = load i32, ptr %c_line.addr, align 4, !dbg !3945, !tbaa !1984
  %10 = load i32, ptr %py_line.addr, align 4, !dbg !3946, !tbaa !1984
  %11 = load ptr, ptr %filename.addr, align 8, !dbg !3947, !tbaa !1899
  %call6 = call ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %8, i32 noundef %9, i32 noundef %10, ptr noundef %11), !dbg !3948
  store ptr %call6, ptr %py_code, align 8, !dbg !3949, !tbaa !1899
  %12 = load ptr, ptr %py_code, align 8, !dbg !3950, !tbaa !1899
  %tobool7 = icmp ne ptr %12, null, !dbg !3950
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3952

if.then8:                                         ; preds = %if.then5
  %13 = load ptr, ptr %ptype, align 8, !dbg !3953, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %13), !dbg !3953
  %14 = load ptr, ptr %pvalue, align 8, !dbg !3955, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %14), !dbg !3955
  %15 = load ptr, ptr %ptraceback, align 8, !dbg !3956, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %15), !dbg !3956
  br label %bad, !dbg !3957

if.end9:                                          ; preds = %if.then5
  %16 = load ptr, ptr %tstate, align 8, !dbg !3958, !tbaa !1899
  %17 = load ptr, ptr %ptype, align 8, !dbg !3959, !tbaa !1899
  %18 = load ptr, ptr %pvalue, align 8, !dbg !3960, !tbaa !1899
  %19 = load ptr, ptr %ptraceback, align 8, !dbg !3961, !tbaa !1899
  call void @__Pyx_ErrRestoreInState(ptr noundef %16, ptr noundef %17, ptr noundef %18, ptr noundef %19), !dbg !3962
  %20 = load i32, ptr %c_line.addr, align 4, !dbg !3963, !tbaa !1984
  %tobool10 = icmp ne i32 %20, 0, !dbg !3963
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !3963

cond.true11:                                      ; preds = %if.end9
  %21 = load i32, ptr %c_line.addr, align 4, !dbg !3964, !tbaa !1984
  %sub12 = sub i32 0, %21, !dbg !3965
  br label %cond.end14, !dbg !3963

cond.false13:                                     ; preds = %if.end9
  %22 = load i32, ptr %py_line.addr, align 4, !dbg !3966, !tbaa !1984
  br label %cond.end14, !dbg !3963

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi i32 [ %sub12, %cond.true11 ], [ %22, %cond.false13 ], !dbg !3963
  %23 = load ptr, ptr %py_code, align 8, !dbg !3967, !tbaa !1899
  call void @__pyx_insert_code_object(i32 noundef %cond15, ptr noundef %23), !dbg !3968
  br label %if.end16, !dbg !3969

if.end16:                                         ; preds = %cond.end14, %cond.end
  %24 = load ptr, ptr %tstate, align 8, !dbg !3970, !tbaa !1899
  %25 = load ptr, ptr %py_code, align 8, !dbg !3971, !tbaa !1899
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3972, !tbaa !1899
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 0, !dbg !3972
  %27 = load ptr, ptr %__pyx_d, align 8, !dbg !3972, !tbaa !2019
  %call17 = call ptr @PyFrame_New(ptr noundef %24, ptr noundef %25, ptr noundef %27, ptr noundef null), !dbg !3973
  store ptr %call17, ptr %py_frame, align 8, !dbg !3974, !tbaa !1899
  %28 = load ptr, ptr %py_frame, align 8, !dbg !3975, !tbaa !1899
  %tobool18 = icmp ne ptr %28, null, !dbg !3975
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !3977

if.then19:                                        ; preds = %if.end16
  br label %bad, !dbg !3978

if.end20:                                         ; preds = %if.end16
  %29 = load i32, ptr %py_line.addr, align 4, !dbg !3979, !tbaa !1984
  %30 = load ptr, ptr %py_frame, align 8, !dbg !3979, !tbaa !1899
  %f_lineno = getelementptr inbounds %struct._frame, ptr %30, i32 0, i32 4, !dbg !3979
  store i32 %29, ptr %f_lineno, align 8, !dbg !3979, !tbaa !3980
  %31 = load ptr, ptr %py_frame, align 8, !dbg !3982, !tbaa !1899
  %call21 = call i32 @PyTraceBack_Here(ptr noundef %31), !dbg !3983
  br label %bad, !dbg !3983

bad:                                              ; preds = %if.end20, %if.then19, %if.then8
  tail call void @llvm.dbg.label(metadata !3907), !dbg !3984
  %32 = load ptr, ptr %py_code, align 8, !dbg !3985, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %32), !dbg !3985
  %33 = load ptr, ptr %py_frame, align 8, !dbg !3986, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %33), !dbg !3986
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #11, !dbg !3987
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #11, !dbg !3987
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #11, !dbg !3987
  call void @llvm.lifetime.end.p0(i64 8, ptr %tstate) #11, !dbg !3987
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_frame) #11, !dbg !3987
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #11, !dbg !3987
  ret void, !dbg !3987
}

declare !dbg !3988 ptr @PyErr_Occurred() #1

declare !dbg !3989 i32 @PyOS_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #1

declare !dbg !3992 i32 @PyErr_WarnEx(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_FetchCommonType(ptr noundef %type) #0 !dbg !3996 {
entry:
  %retval = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %abi_module = alloca ptr, align 8
  %object_name = alloca ptr, align 8
  %cached_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !4000, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.start.p0(i64 8, ptr %abi_module) #11, !dbg !4007
  tail call void @llvm.dbg.declare(metadata ptr %abi_module, metadata !4001, metadata !DIExpression()), !dbg !4008
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_name) #11, !dbg !4009
  tail call void @llvm.dbg.declare(metadata ptr %object_name, metadata !4002, metadata !DIExpression()), !dbg !4010
  call void @llvm.lifetime.start.p0(i64 8, ptr %cached_type) #11, !dbg !4011
  tail call void @llvm.dbg.declare(metadata ptr %cached_type, metadata !4003, metadata !DIExpression()), !dbg !4012
  store ptr null, ptr %cached_type, align 8, !dbg !4012, !tbaa !1899
  %call = call ptr @__Pyx_FetchSharedCythonABIModule(), !dbg !4013
  store ptr %call, ptr %abi_module, align 8, !dbg !4014, !tbaa !1899
  %0 = load ptr, ptr %abi_module, align 8, !dbg !4015, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !4015
  br i1 %tobool, label %if.end, label %if.then, !dbg !4017

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4018
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4018

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %type.addr, align 8, !dbg !4019, !tbaa !1899
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 1, !dbg !4020
  %2 = load ptr, ptr %tp_name, align 8, !dbg !4020, !tbaa !4021
  %call1 = call ptr @strrchr(ptr noundef %2, i32 noundef 46) #12, !dbg !4022
  store ptr %call1, ptr %object_name, align 8, !dbg !4023, !tbaa !1899
  %3 = load ptr, ptr %object_name, align 8, !dbg !4024, !tbaa !1899
  %tobool2 = icmp ne ptr %3, null, !dbg !4024
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !4024

cond.true:                                        ; preds = %if.end
  %4 = load ptr, ptr %object_name, align 8, !dbg !4025, !tbaa !1899
  %add.ptr = getelementptr i8, ptr %4, i64 1, !dbg !4026
  br label %cond.end, !dbg !4024

cond.false:                                       ; preds = %if.end
  %5 = load ptr, ptr %type.addr, align 8, !dbg !4027, !tbaa !1899
  %tp_name3 = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 1, !dbg !4028
  %6 = load ptr, ptr %tp_name3, align 8, !dbg !4028, !tbaa !4021
  br label %cond.end, !dbg !4024

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %add.ptr, %cond.true ], [ %6, %cond.false ], !dbg !4024
  store ptr %cond, ptr %object_name, align 8, !dbg !4029, !tbaa !1899
  %7 = load ptr, ptr %abi_module, align 8, !dbg !4030, !tbaa !1899
  %8 = load ptr, ptr %object_name, align 8, !dbg !4031, !tbaa !1899
  %call4 = call ptr @PyObject_GetAttrString(ptr noundef %7, ptr noundef %8), !dbg !4032
  store ptr %call4, ptr %cached_type, align 8, !dbg !4033, !tbaa !1899
  %9 = load ptr, ptr %cached_type, align 8, !dbg !4034, !tbaa !1899
  %tobool5 = icmp ne ptr %9, null, !dbg !4034
  br i1 %tobool5, label %if.then6, label %if.end11, !dbg !4036

if.then6:                                         ; preds = %cond.end
  %10 = load ptr, ptr %cached_type, align 8, !dbg !4037, !tbaa !1899
  %11 = load ptr, ptr %object_name, align 8, !dbg !4040, !tbaa !1899
  %12 = load ptr, ptr %cached_type, align 8, !dbg !4041, !tbaa !1899
  %tp_basicsize = getelementptr inbounds %struct._typeobject, ptr %12, i32 0, i32 2, !dbg !4042
  %13 = load i64, ptr %tp_basicsize, align 8, !dbg !4042, !tbaa !4043
  %14 = load ptr, ptr %type.addr, align 8, !dbg !4044, !tbaa !1899
  %tp_basicsize7 = getelementptr inbounds %struct._typeobject, ptr %14, i32 0, i32 2, !dbg !4045
  %15 = load i64, ptr %tp_basicsize7, align 8, !dbg !4045, !tbaa !4043
  %call8 = call i32 @__Pyx_VerifyCachedType(ptr noundef %10, ptr noundef %11, i64 noundef %13, i64 noundef %15), !dbg !4046
  %cmp = icmp slt i32 %call8, 0, !dbg !4047
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !4048

if.then9:                                         ; preds = %if.then6
  br label %bad, !dbg !4049

if.end10:                                         ; preds = %if.then6
  br label %done, !dbg !4051

if.end11:                                         ; preds = %cond.end
  %16 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !4052, !tbaa !1899
  %call12 = call i32 @PyErr_ExceptionMatches(ptr noundef %16), !dbg !4054
  %tobool13 = icmp ne i32 %call12, 0, !dbg !4054
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !4055

if.then14:                                        ; preds = %if.end11
  br label %bad, !dbg !4056

if.end15:                                         ; preds = %if.end11
  call void @PyErr_Clear(), !dbg !4057
  %17 = load ptr, ptr %type.addr, align 8, !dbg !4058, !tbaa !1899
  %call16 = call i32 @PyType_Ready(ptr noundef %17), !dbg !4060
  %cmp17 = icmp slt i32 %call16, 0, !dbg !4061
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !4062

if.then18:                                        ; preds = %if.end15
  br label %bad, !dbg !4063

if.end19:                                         ; preds = %if.end15
  %18 = load ptr, ptr %abi_module, align 8, !dbg !4064, !tbaa !1899
  %19 = load ptr, ptr %object_name, align 8, !dbg !4066, !tbaa !1899
  %20 = load ptr, ptr %type.addr, align 8, !dbg !4067, !tbaa !1899
  %call20 = call i32 @PyObject_SetAttrString(ptr noundef %18, ptr noundef %19, ptr noundef %20), !dbg !4068
  %cmp21 = icmp slt i32 %call20, 0, !dbg !4069
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !4070

if.then22:                                        ; preds = %if.end19
  br label %bad, !dbg !4071

if.end23:                                         ; preds = %if.end19
  %21 = load ptr, ptr %type.addr, align 8, !dbg !4072, !tbaa !1899
  call void @Py_INCREF(ptr noundef %21), !dbg !4072
  %22 = load ptr, ptr %type.addr, align 8, !dbg !4073, !tbaa !1899
  store ptr %22, ptr %cached_type, align 8, !dbg !4074, !tbaa !1899
  br label %done, !dbg !4075

done:                                             ; preds = %bad, %if.end23, %if.end10
  tail call void @llvm.dbg.label(metadata !4004), !dbg !4076
  %23 = load ptr, ptr %abi_module, align 8, !dbg !4077, !tbaa !1899
  call void @Py_DECREF(ptr noundef %23), !dbg !4077
  %24 = load ptr, ptr %cached_type, align 8, !dbg !4078, !tbaa !1899
  store ptr %24, ptr %retval, align 8, !dbg !4079
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4079

bad:                                              ; preds = %if.then22, %if.then18, %if.then14, %if.then9
  tail call void @llvm.dbg.label(metadata !4005), !dbg !4080
  %25 = load ptr, ptr %cached_type, align 8, !dbg !4081, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %25), !dbg !4081
  store ptr null, ptr %cached_type, align 8, !dbg !4082, !tbaa !1899
  br label %done, !dbg !4083

cleanup:                                          ; preds = %done, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cached_type) #11, !dbg !4084
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_name) #11, !dbg !4084
  call void @llvm.lifetime.end.p0(i64 8, ptr %abi_module) #11, !dbg !4084
  %26 = load ptr, ptr %retval, align 8, !dbg !4084
  ret ptr %26, !dbg !4084
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_FetchSharedCythonABIModule() #0 !dbg !4085 {
entry:
  %retval = alloca ptr, align 8
  %abi_module = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %abi_module) #11, !dbg !4088
  tail call void @llvm.dbg.declare(metadata ptr %abi_module, metadata !4087, metadata !DIExpression()), !dbg !4089
  %call = call ptr @PyImport_AddModule(ptr noundef @.str.26), !dbg !4090
  store ptr %call, ptr %abi_module, align 8, !dbg !4089, !tbaa !1899
  %0 = load ptr, ptr %abi_module, align 8, !dbg !4091, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !4091
  %lnot = xor i1 %tobool, true, !dbg !4091
  %lnot1 = xor i1 %lnot, true, !dbg !4091
  %lnot2 = xor i1 %lnot1, true, !dbg !4091
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4091
  %conv = sext i32 %lnot.ext to i64, !dbg !4091
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4091
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4091
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4093

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4094
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4094

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %abi_module, align 8, !dbg !4095, !tbaa !1899
  call void @Py_INCREF(ptr noundef %1), !dbg !4095
  %2 = load ptr, ptr %abi_module, align 8, !dbg !4096, !tbaa !1899
  store ptr %2, ptr %retval, align 8, !dbg !4097
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4097

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %abi_module) #11, !dbg !4098
  %3 = load ptr, ptr %retval, align 8, !dbg !4098
  ret ptr %3, !dbg !4098
}

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !4099 ptr @strrchr(ptr noundef, i32 noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_VerifyCachedType(ptr noundef %cached_type, ptr noundef %name, i64 noundef %basicsize, i64 noundef %expected_basicsize) #0 !dbg !4103 {
entry:
  %retval = alloca i32, align 4
  %cached_type.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %basicsize.addr = alloca i64, align 8
  %expected_basicsize.addr = alloca i64, align 8
  store ptr %cached_type, ptr %cached_type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %cached_type.addr, metadata !4107, metadata !DIExpression()), !dbg !4111
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !4108, metadata !DIExpression()), !dbg !4112
  store i64 %basicsize, ptr %basicsize.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %basicsize.addr, metadata !4109, metadata !DIExpression()), !dbg !4113
  store i64 %expected_basicsize, ptr %expected_basicsize.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %expected_basicsize.addr, metadata !4110, metadata !DIExpression()), !dbg !4114
  %0 = load ptr, ptr %cached_type.addr, align 8, !dbg !4115, !tbaa !1899
  %call = call i32 @PyType_Check(ptr noundef %0), !dbg !4115
  %tobool = icmp ne i32 %call, 0, !dbg !4115
  br i1 %tobool, label %if.end, label %if.then, !dbg !4117

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4118, !tbaa !1899
  %2 = load ptr, ptr %name.addr, align 8, !dbg !4120, !tbaa !1899
  %call1 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %1, ptr noundef @.str.27, ptr noundef %2), !dbg !4121
  store i32 -1, ptr %retval, align 4, !dbg !4122
  br label %return, !dbg !4122

if.end:                                           ; preds = %entry
  %3 = load i64, ptr %basicsize.addr, align 8, !dbg !4123, !tbaa !2597
  %4 = load i64, ptr %expected_basicsize.addr, align 8, !dbg !4125, !tbaa !2597
  %cmp = icmp ne i64 %3, %4, !dbg !4126
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !4127

if.then2:                                         ; preds = %if.end
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4128, !tbaa !1899
  %6 = load ptr, ptr %name.addr, align 8, !dbg !4130, !tbaa !1899
  %call3 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.28, ptr noundef %6), !dbg !4131
  store i32 -1, ptr %retval, align 4, !dbg !4132
  br label %return, !dbg !4132

if.end4:                                          ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !4133
  br label %return, !dbg !4133

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %7 = load i32, ptr %retval, align 4, !dbg !4134
  ret i32 %7, !dbg !4134
}

declare !dbg !4135 i32 @PyType_Ready(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyType_Check(ptr noundef %op) #3 !dbg !4138 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !4140, metadata !DIExpression()), !dbg !4141
  %0 = load ptr, ptr %op.addr, align 8, !dbg !4142, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !4142
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 2147483648), !dbg !4142
  ret i32 %call1, !dbg !4143
}

declare !dbg !4144 ptr @PyErr_Format(ptr noundef, ptr noundef, ...) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyType_HasFeature(ptr noundef %type, i64 noundef %feature) #3 !dbg !4147 {
entry:
  %type.addr = alloca ptr, align 8
  %feature.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !4151, metadata !DIExpression()), !dbg !4154
  store i64 %feature, ptr %feature.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %feature.addr, metadata !4152, metadata !DIExpression()), !dbg !4155
  call void @llvm.lifetime.start.p0(i64 8, ptr %flags) #11, !dbg !4156
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !4153, metadata !DIExpression()), !dbg !4157
  %0 = load ptr, ptr %type.addr, align 8, !dbg !4158, !tbaa !1899
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19, !dbg !4159
  %1 = load i64, ptr %tp_flags, align 8, !dbg !4159, !tbaa !4160
  store i64 %1, ptr %flags, align 8, !dbg !4161, !tbaa !2597
  %2 = load i64, ptr %flags, align 8, !dbg !4162, !tbaa !2597
  %3 = load i64, ptr %feature.addr, align 8, !dbg !4163, !tbaa !2597
  %and = and i64 %2, %3, !dbg !4164
  %cmp = icmp ne i64 %and, 0, !dbg !4165
  %conv = zext i1 %cmp to i32, !dbg !4165
  call void @llvm.lifetime.end.p0(i64 8, ptr %flags) #11, !dbg !4166
  ret i32 %conv, !dbg !4167
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @Py_TYPE(ptr noundef %ob) #3 !dbg !4168 {
entry:
  %ob.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !4172, metadata !DIExpression()), !dbg !4173
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !4174, !tbaa !1899
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !4175
  %1 = load ptr, ptr %ob_type, align 8, !dbg !4175, !tbaa !4176
  ret ptr %1, !dbg !4177
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_CyFunction_dealloc(ptr noundef %m) #0 !dbg !4178 {
entry:
  %m.addr = alloca ptr, align 8
  store ptr %m, ptr %m.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %m.addr, metadata !4182, metadata !DIExpression()), !dbg !4183
  %0 = load ptr, ptr %m.addr, align 8, !dbg !4184, !tbaa !1899
  call void @PyObject_GC_UnTrack(ptr noundef %0), !dbg !4185
  %1 = load ptr, ptr %m.addr, align 8, !dbg !4186, !tbaa !1899
  call void @__Pyx__CyFunction_dealloc(ptr noundef %1), !dbg !4187
  ret void, !dbg !4188
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_repr(ptr noundef %op) #0 !dbg !4189 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !4193, metadata !DIExpression()), !dbg !4194
  %0 = load ptr, ptr %op.addr, align 8, !dbg !4195, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 3, !dbg !4196
  %1 = load ptr, ptr %func_qualname, align 8, !dbg !4196, !tbaa !4197
  %2 = load ptr, ptr %op.addr, align 8, !dbg !4198, !tbaa !1899
  %call = call ptr (ptr, ...) @PyUnicode_FromFormat(ptr noundef @.str.30, ptr noundef %1, ptr noundef %2), !dbg !4199
  ret ptr %call, !dbg !4200
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_CallAsMethod(ptr noundef %func, ptr noundef %args, ptr noundef %kw) #0 !dbg !4201 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cyfunc = alloca ptr, align 8
  %vc = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %argc = alloca i64, align 8
  %new_args = alloca ptr, align 8
  %self = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4203, metadata !DIExpression()), !dbg !4214
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4204, metadata !DIExpression()), !dbg !4215
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !4205, metadata !DIExpression()), !dbg !4216
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !4217
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4206, metadata !DIExpression()), !dbg !4218
  call void @llvm.lifetime.start.p0(i64 8, ptr %cyfunc) #11, !dbg !4219
  tail call void @llvm.dbg.declare(metadata ptr %cyfunc, metadata !4207, metadata !DIExpression()), !dbg !4220
  %0 = load ptr, ptr %func.addr, align 8, !dbg !4221, !tbaa !1899
  store ptr %0, ptr %cyfunc, align 8, !dbg !4220, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %vc) #11, !dbg !4222
  tail call void @llvm.dbg.declare(metadata ptr %vc, metadata !4208, metadata !DIExpression()), !dbg !4223
  %1 = load ptr, ptr %cyfunc, align 8, !dbg !4224, !tbaa !1899
  %vectorcall = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 5, !dbg !4224
  %2 = load ptr, ptr %vectorcall, align 8, !dbg !4224, !tbaa !4225
  store ptr %2, ptr %vc, align 8, !dbg !4223, !tbaa !1899
  %3 = load ptr, ptr %vc, align 8, !dbg !4226, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !4226
  br i1 %tobool, label %if.then, label %if.end, !dbg !4228

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %func.addr, align 8, !dbg !4229, !tbaa !1899
  %5 = load ptr, ptr %vc, align 8, !dbg !4231, !tbaa !1899
  %6 = load ptr, ptr %args.addr, align 8, !dbg !4232, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %6, i32 0, i32 1, !dbg !4232
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !4232
  %7 = load ptr, ptr %args.addr, align 8, !dbg !4233, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %7), !dbg !4233
  %8 = load ptr, ptr %kw.addr, align 8, !dbg !4234, !tbaa !1899
  %call1 = call ptr @__Pyx_PyVectorcall_FastCallDict(ptr noundef %4, ptr noundef %5, ptr noundef %arrayidx, i64 noundef %call, ptr noundef %8), !dbg !4235
  store ptr %call1, ptr %retval, align 8, !dbg !4236
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup34, !dbg !4236

if.end:                                           ; preds = %entry
  %9 = load ptr, ptr %cyfunc, align 8, !dbg !4237, !tbaa !1899
  %flags = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 11, !dbg !4238
  %10 = load i32, ptr %flags, align 8, !dbg !4238, !tbaa !4239
  %and = and i32 %10, 4, !dbg !4240
  %tobool2 = icmp ne i32 %and, 0, !dbg !4240
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !4241

land.lhs.true:                                    ; preds = %if.end
  %11 = load ptr, ptr %cyfunc, align 8, !dbg !4242, !tbaa !1899
  %flags3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 11, !dbg !4243
  %12 = load i32, ptr %flags3, align 8, !dbg !4243, !tbaa !4239
  %and4 = and i32 %12, 1, !dbg !4244
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4244
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !4245

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %argc) #11, !dbg !4246
  tail call void @llvm.dbg.declare(metadata ptr %argc, metadata !4209, metadata !DIExpression()), !dbg !4247
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_args) #11, !dbg !4248
  tail call void @llvm.dbg.declare(metadata ptr %new_args, metadata !4212, metadata !DIExpression()), !dbg !4249
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #11, !dbg !4250
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !4213, metadata !DIExpression()), !dbg !4251
  %13 = load ptr, ptr %args.addr, align 8, !dbg !4252, !tbaa !1899
  %call7 = call i64 @PyTuple_GET_SIZE(ptr noundef %13), !dbg !4252
  store i64 %call7, ptr %argc, align 8, !dbg !4253, !tbaa !2597
  %14 = load ptr, ptr %args.addr, align 8, !dbg !4254, !tbaa !1899
  %15 = load i64, ptr %argc, align 8, !dbg !4255, !tbaa !2597
  %call8 = call ptr @PyTuple_GetSlice(ptr noundef %14, i64 noundef 1, i64 noundef %15), !dbg !4256
  store ptr %call8, ptr %new_args, align 8, !dbg !4257, !tbaa !1899
  %16 = load ptr, ptr %new_args, align 8, !dbg !4258, !tbaa !1899
  %tobool9 = icmp ne ptr %16, null, !dbg !4258
  %lnot = xor i1 %tobool9, true, !dbg !4258
  %lnot10 = xor i1 %lnot, true, !dbg !4258
  %lnot11 = xor i1 %lnot10, true, !dbg !4258
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !4258
  %conv = sext i32 %lnot.ext to i64, !dbg !4258
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4258
  %tobool12 = icmp ne i64 %expval, 0, !dbg !4258
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !4260

if.then13:                                        ; preds = %if.then6
  store ptr null, ptr %retval, align 8, !dbg !4261
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4261

if.end14:                                         ; preds = %if.then6
  %17 = load ptr, ptr %args.addr, align 8, !dbg !4262, !tbaa !1899
  %call15 = call ptr @PyTuple_GetItem(ptr noundef %17, i64 noundef 0), !dbg !4263
  store ptr %call15, ptr %self, align 8, !dbg !4264, !tbaa !1899
  %18 = load ptr, ptr %self, align 8, !dbg !4265, !tbaa !1899
  %tobool16 = icmp ne ptr %18, null, !dbg !4265
  %lnot17 = xor i1 %tobool16, true, !dbg !4265
  %lnot19 = xor i1 %lnot17, true, !dbg !4265
  %lnot21 = xor i1 %lnot19, true, !dbg !4265
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4265
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !4265
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !4265
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !4265
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !4267

if.then26:                                        ; preds = %if.end14
  %19 = load ptr, ptr %new_args, align 8, !dbg !4268, !tbaa !1899
  call void @Py_DECREF(ptr noundef %19), !dbg !4268
  %20 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4270, !tbaa !1899
  %21 = load ptr, ptr %cyfunc, align 8, !dbg !4271, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %21, i32 0, i32 3, !dbg !4272
  %22 = load ptr, ptr %func_qualname, align 8, !dbg !4272, !tbaa !4197
  %call27 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %20, ptr noundef @.str.31, ptr noundef %22), !dbg !4273
  store ptr null, ptr %retval, align 8, !dbg !4274
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4274

if.end28:                                         ; preds = %if.end14
  %23 = load ptr, ptr %func.addr, align 8, !dbg !4275, !tbaa !1899
  %24 = load ptr, ptr %self, align 8, !dbg !4276, !tbaa !1899
  %25 = load ptr, ptr %new_args, align 8, !dbg !4277, !tbaa !1899
  %26 = load ptr, ptr %kw.addr, align 8, !dbg !4278, !tbaa !1899
  %call29 = call ptr @__Pyx_CyFunction_CallMethod(ptr noundef %23, ptr noundef %24, ptr noundef %25, ptr noundef %26), !dbg !4279
  store ptr %call29, ptr %result, align 8, !dbg !4280, !tbaa !1899
  %27 = load ptr, ptr %new_args, align 8, !dbg !4281, !tbaa !1899
  call void @Py_DECREF(ptr noundef %27), !dbg !4281
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4282
  br label %cleanup, !dbg !4282

cleanup:                                          ; preds = %if.end28, %if.then26, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #11, !dbg !4282
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_args) #11, !dbg !4282
  call void @llvm.lifetime.end.p0(i64 8, ptr %argc) #11, !dbg !4282
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup34 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end33, !dbg !4283

if.else:                                          ; preds = %land.lhs.true, %if.end
  %28 = load ptr, ptr %func.addr, align 8, !dbg !4284, !tbaa !1899
  %29 = load ptr, ptr %args.addr, align 8, !dbg !4286, !tbaa !1899
  %30 = load ptr, ptr %kw.addr, align 8, !dbg !4287, !tbaa !1899
  %call32 = call ptr @__Pyx_CyFunction_Call(ptr noundef %28, ptr noundef %29, ptr noundef %30), !dbg !4288
  store ptr %call32, ptr %result, align 8, !dbg !4289, !tbaa !1899
  br label %if.end33

if.end33:                                         ; preds = %if.else, %cleanup.cont
  %31 = load ptr, ptr %result, align 8, !dbg !4290, !tbaa !1899
  store ptr %31, ptr %retval, align 8, !dbg !4291
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup34, !dbg !4291

cleanup34:                                        ; preds = %if.end33, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %vc) #11, !dbg !4292
  call void @llvm.lifetime.end.p0(i64 8, ptr %cyfunc) #11, !dbg !4292
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !4292
  %32 = load ptr, ptr %retval, align 8, !dbg !4292
  ret ptr %32, !dbg !4292
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_traverse(ptr noundef %m, ptr noundef %visit, ptr noundef %arg) #0 !dbg !4293 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca ptr, align 8
  %visit.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  %vret64 = alloca i32, align 4
  %vret78 = alloca i32, align 4
  %vret92 = alloca i32, align 4
  %vret106 = alloca i32, align 4
  %vret120 = alloca i32, align 4
  %vret134 = alloca i32, align 4
  %vret148 = alloca i32, align 4
  %pydefaults = alloca ptr, align 8
  %i = alloca i32, align 4
  %vret165 = alloca i32, align 4
  store ptr %m, ptr %m.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %m.addr, metadata !4297, metadata !DIExpression()), !dbg !4358
  store ptr %visit, ptr %visit.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %visit.addr, metadata !4298, metadata !DIExpression()), !dbg !4359
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4299, metadata !DIExpression()), !dbg !4360
  br label %do.body, !dbg !4361

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %m.addr, align 8, !dbg !4362, !tbaa !1899
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 7, !dbg !4362
  %1 = load ptr, ptr %func_closure, align 8, !dbg !4362, !tbaa !4363
  %tobool = icmp ne ptr %1, null, !dbg !4362
  br i1 %tobool, label %if.then, label %if.end4, !dbg !4364

if.then:                                          ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret) #11, !dbg !4365
  tail call void @llvm.dbg.declare(metadata ptr %vret, metadata !4300, metadata !DIExpression()), !dbg !4365
  %2 = load ptr, ptr %visit.addr, align 8, !dbg !4365, !tbaa !1899
  %3 = load ptr, ptr %m.addr, align 8, !dbg !4365, !tbaa !1899
  %func_closure1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 7, !dbg !4365
  %4 = load ptr, ptr %func_closure1, align 8, !dbg !4365, !tbaa !4363
  %5 = load ptr, ptr %arg.addr, align 8, !dbg !4365, !tbaa !1899
  %call = call i32 %2(ptr noundef %4, ptr noundef %5), !dbg !4365
  store i32 %call, ptr %vret, align 4, !dbg !4365, !tbaa !1984
  %6 = load i32, ptr %vret, align 4, !dbg !4366, !tbaa !1984
  %tobool2 = icmp ne i32 %6, 0, !dbg !4366
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4365

if.then3:                                         ; preds = %if.then
  %7 = load i32, ptr %vret, align 4, !dbg !4366, !tbaa !1984
  store i32 %7, ptr %retval, align 4, !dbg !4366
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4366

if.end:                                           ; preds = %if.then
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4362
  br label %cleanup, !dbg !4362

cleanup:                                          ; preds = %if.end, %if.then3
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret) #11, !dbg !4362
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end4, !dbg !4365

if.end4:                                          ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4364

do.end:                                           ; preds = %if.end4
  br label %do.body5, !dbg !4368

do.body5:                                         ; preds = %do.end
  %8 = load ptr, ptr %m.addr, align 8, !dbg !4369, !tbaa !1899
  %m_module = getelementptr inbounds %struct.PyCFunctionObject, ptr %8, i32 0, i32 3, !dbg !4369
  %9 = load ptr, ptr %m_module, align 8, !dbg !4369, !tbaa !4370
  %tobool6 = icmp ne ptr %9, null, !dbg !4369
  br i1 %tobool6, label %if.then7, label %if.end17, !dbg !4371

if.then7:                                         ; preds = %do.body5
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret8) #11, !dbg !4372
  tail call void @llvm.dbg.declare(metadata ptr %vret8, metadata !4304, metadata !DIExpression()), !dbg !4372
  %10 = load ptr, ptr %visit.addr, align 8, !dbg !4372, !tbaa !1899
  %11 = load ptr, ptr %m.addr, align 8, !dbg !4372, !tbaa !1899
  %m_module9 = getelementptr inbounds %struct.PyCFunctionObject, ptr %11, i32 0, i32 3, !dbg !4372
  %12 = load ptr, ptr %m_module9, align 8, !dbg !4372, !tbaa !4370
  %13 = load ptr, ptr %arg.addr, align 8, !dbg !4372, !tbaa !1899
  %call10 = call i32 %10(ptr noundef %12, ptr noundef %13), !dbg !4372
  store i32 %call10, ptr %vret8, align 4, !dbg !4372, !tbaa !1984
  %14 = load i32, ptr %vret8, align 4, !dbg !4373, !tbaa !1984
  %tobool11 = icmp ne i32 %14, 0, !dbg !4373
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !4372

if.then12:                                        ; preds = %if.then7
  %15 = load i32, ptr %vret8, align 4, !dbg !4373, !tbaa !1984
  store i32 %15, ptr %retval, align 4, !dbg !4373
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup14, !dbg !4373

if.end13:                                         ; preds = %if.then7
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4369
  br label %cleanup14, !dbg !4369

cleanup14:                                        ; preds = %if.end13, %if.then12
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret8) #11, !dbg !4369
  %cleanup.dest15 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest15, label %unreachable [
    i32 0, label %cleanup.cont16
    i32 1, label %return
  ]

cleanup.cont16:                                   ; preds = %cleanup14
  br label %if.end17, !dbg !4372

if.end17:                                         ; preds = %cleanup.cont16, %do.body5
  br label %do.end18, !dbg !4371

do.end18:                                         ; preds = %if.end17
  br label %do.body19, !dbg !4375

do.body19:                                        ; preds = %do.end18
  %16 = load ptr, ptr %m.addr, align 8, !dbg !4376, !tbaa !1899
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %16, i32 0, i32 1, !dbg !4376
  %17 = load ptr, ptr %func_dict, align 8, !dbg !4376, !tbaa !4377
  %tobool20 = icmp ne ptr %17, null, !dbg !4376
  br i1 %tobool20, label %if.then21, label %if.end31, !dbg !4378

if.then21:                                        ; preds = %do.body19
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret22) #11, !dbg !4379
  tail call void @llvm.dbg.declare(metadata ptr %vret22, metadata !4308, metadata !DIExpression()), !dbg !4379
  %18 = load ptr, ptr %visit.addr, align 8, !dbg !4379, !tbaa !1899
  %19 = load ptr, ptr %m.addr, align 8, !dbg !4379, !tbaa !1899
  %func_dict23 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %19, i32 0, i32 1, !dbg !4379
  %20 = load ptr, ptr %func_dict23, align 8, !dbg !4379, !tbaa !4377
  %21 = load ptr, ptr %arg.addr, align 8, !dbg !4379, !tbaa !1899
  %call24 = call i32 %18(ptr noundef %20, ptr noundef %21), !dbg !4379
  store i32 %call24, ptr %vret22, align 4, !dbg !4379, !tbaa !1984
  %22 = load i32, ptr %vret22, align 4, !dbg !4380, !tbaa !1984
  %tobool25 = icmp ne i32 %22, 0, !dbg !4380
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !4379

if.then26:                                        ; preds = %if.then21
  %23 = load i32, ptr %vret22, align 4, !dbg !4380, !tbaa !1984
  store i32 %23, ptr %retval, align 4, !dbg !4380
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup28, !dbg !4380

if.end27:                                         ; preds = %if.then21
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4376
  br label %cleanup28, !dbg !4376

cleanup28:                                        ; preds = %if.end27, %if.then26
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret22) #11, !dbg !4376
  %cleanup.dest29 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest29, label %unreachable [
    i32 0, label %cleanup.cont30
    i32 1, label %return
  ]

cleanup.cont30:                                   ; preds = %cleanup28
  br label %if.end31, !dbg !4379

if.end31:                                         ; preds = %cleanup.cont30, %do.body19
  br label %do.end32, !dbg !4378

do.end32:                                         ; preds = %if.end31
  br label %do.body33, !dbg !4382

do.body33:                                        ; preds = %do.end32
  %24 = load ptr, ptr %m.addr, align 8, !dbg !4383, !tbaa !1899
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %24, i32 0, i32 2, !dbg !4383
  %25 = load ptr, ptr %func_name, align 8, !dbg !4383, !tbaa !4384
  %tobool34 = icmp ne ptr %25, null, !dbg !4383
  br i1 %tobool34, label %if.then35, label %if.end45, !dbg !4385

if.then35:                                        ; preds = %do.body33
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret36) #11, !dbg !4386
  tail call void @llvm.dbg.declare(metadata ptr %vret36, metadata !4312, metadata !DIExpression()), !dbg !4386
  %26 = load ptr, ptr %visit.addr, align 8, !dbg !4386, !tbaa !1899
  %27 = load ptr, ptr %m.addr, align 8, !dbg !4386, !tbaa !1899
  %func_name37 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %27, i32 0, i32 2, !dbg !4386
  %28 = load ptr, ptr %func_name37, align 8, !dbg !4386, !tbaa !4384
  %29 = load ptr, ptr %arg.addr, align 8, !dbg !4386, !tbaa !1899
  %call38 = call i32 %26(ptr noundef %28, ptr noundef %29), !dbg !4386
  store i32 %call38, ptr %vret36, align 4, !dbg !4386, !tbaa !1984
  %30 = load i32, ptr %vret36, align 4, !dbg !4387, !tbaa !1984
  %tobool39 = icmp ne i32 %30, 0, !dbg !4387
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4386

if.then40:                                        ; preds = %if.then35
  %31 = load i32, ptr %vret36, align 4, !dbg !4387, !tbaa !1984
  store i32 %31, ptr %retval, align 4, !dbg !4387
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup42, !dbg !4387

if.end41:                                         ; preds = %if.then35
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4383
  br label %cleanup42, !dbg !4383

cleanup42:                                        ; preds = %if.end41, %if.then40
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret36) #11, !dbg !4383
  %cleanup.dest43 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest43, label %unreachable [
    i32 0, label %cleanup.cont44
    i32 1, label %return
  ]

cleanup.cont44:                                   ; preds = %cleanup42
  br label %if.end45, !dbg !4386

if.end45:                                         ; preds = %cleanup.cont44, %do.body33
  br label %do.end46, !dbg !4385

do.end46:                                         ; preds = %if.end45
  br label %do.body47, !dbg !4389

do.body47:                                        ; preds = %do.end46
  %32 = load ptr, ptr %m.addr, align 8, !dbg !4390, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %32, i32 0, i32 3, !dbg !4390
  %33 = load ptr, ptr %func_qualname, align 8, !dbg !4390, !tbaa !4197
  %tobool48 = icmp ne ptr %33, null, !dbg !4390
  br i1 %tobool48, label %if.then49, label %if.end59, !dbg !4391

if.then49:                                        ; preds = %do.body47
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret50) #11, !dbg !4392
  tail call void @llvm.dbg.declare(metadata ptr %vret50, metadata !4316, metadata !DIExpression()), !dbg !4392
  %34 = load ptr, ptr %visit.addr, align 8, !dbg !4392, !tbaa !1899
  %35 = load ptr, ptr %m.addr, align 8, !dbg !4392, !tbaa !1899
  %func_qualname51 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %35, i32 0, i32 3, !dbg !4392
  %36 = load ptr, ptr %func_qualname51, align 8, !dbg !4392, !tbaa !4197
  %37 = load ptr, ptr %arg.addr, align 8, !dbg !4392, !tbaa !1899
  %call52 = call i32 %34(ptr noundef %36, ptr noundef %37), !dbg !4392
  store i32 %call52, ptr %vret50, align 4, !dbg !4392, !tbaa !1984
  %38 = load i32, ptr %vret50, align 4, !dbg !4393, !tbaa !1984
  %tobool53 = icmp ne i32 %38, 0, !dbg !4393
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !4392

if.then54:                                        ; preds = %if.then49
  %39 = load i32, ptr %vret50, align 4, !dbg !4393, !tbaa !1984
  store i32 %39, ptr %retval, align 4, !dbg !4393
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup56, !dbg !4393

if.end55:                                         ; preds = %if.then49
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4390
  br label %cleanup56, !dbg !4390

cleanup56:                                        ; preds = %if.end55, %if.then54
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret50) #11, !dbg !4390
  %cleanup.dest57 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest57, label %unreachable [
    i32 0, label %cleanup.cont58
    i32 1, label %return
  ]

cleanup.cont58:                                   ; preds = %cleanup56
  br label %if.end59, !dbg !4392

if.end59:                                         ; preds = %cleanup.cont58, %do.body47
  br label %do.end60, !dbg !4391

do.end60:                                         ; preds = %if.end59
  br label %do.body61, !dbg !4395

do.body61:                                        ; preds = %do.end60
  %40 = load ptr, ptr %m.addr, align 8, !dbg !4396, !tbaa !1899
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %40, i32 0, i32 4, !dbg !4396
  %41 = load ptr, ptr %func_doc, align 8, !dbg !4396, !tbaa !4397
  %tobool62 = icmp ne ptr %41, null, !dbg !4396
  br i1 %tobool62, label %if.then63, label %if.end73, !dbg !4398

if.then63:                                        ; preds = %do.body61
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret64) #11, !dbg !4399
  tail call void @llvm.dbg.declare(metadata ptr %vret64, metadata !4320, metadata !DIExpression()), !dbg !4399
  %42 = load ptr, ptr %visit.addr, align 8, !dbg !4399, !tbaa !1899
  %43 = load ptr, ptr %m.addr, align 8, !dbg !4399, !tbaa !1899
  %func_doc65 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %43, i32 0, i32 4, !dbg !4399
  %44 = load ptr, ptr %func_doc65, align 8, !dbg !4399, !tbaa !4397
  %45 = load ptr, ptr %arg.addr, align 8, !dbg !4399, !tbaa !1899
  %call66 = call i32 %42(ptr noundef %44, ptr noundef %45), !dbg !4399
  store i32 %call66, ptr %vret64, align 4, !dbg !4399, !tbaa !1984
  %46 = load i32, ptr %vret64, align 4, !dbg !4400, !tbaa !1984
  %tobool67 = icmp ne i32 %46, 0, !dbg !4400
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !4399

if.then68:                                        ; preds = %if.then63
  %47 = load i32, ptr %vret64, align 4, !dbg !4400, !tbaa !1984
  store i32 %47, ptr %retval, align 4, !dbg !4400
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !4400

if.end69:                                         ; preds = %if.then63
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4396
  br label %cleanup70, !dbg !4396

cleanup70:                                        ; preds = %if.end69, %if.then68
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret64) #11, !dbg !4396
  %cleanup.dest71 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest71, label %unreachable [
    i32 0, label %cleanup.cont72
    i32 1, label %return
  ]

cleanup.cont72:                                   ; preds = %cleanup70
  br label %if.end73, !dbg !4399

if.end73:                                         ; preds = %cleanup.cont72, %do.body61
  br label %do.end74, !dbg !4398

do.end74:                                         ; preds = %if.end73
  br label %do.body75, !dbg !4402

do.body75:                                        ; preds = %do.end74
  %48 = load ptr, ptr %m.addr, align 8, !dbg !4403, !tbaa !1899
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %48, i32 0, i32 5, !dbg !4403
  %49 = load ptr, ptr %func_globals, align 8, !dbg !4403, !tbaa !4404
  %tobool76 = icmp ne ptr %49, null, !dbg !4403
  br i1 %tobool76, label %if.then77, label %if.end87, !dbg !4405

if.then77:                                        ; preds = %do.body75
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret78) #11, !dbg !4406
  tail call void @llvm.dbg.declare(metadata ptr %vret78, metadata !4324, metadata !DIExpression()), !dbg !4406
  %50 = load ptr, ptr %visit.addr, align 8, !dbg !4406, !tbaa !1899
  %51 = load ptr, ptr %m.addr, align 8, !dbg !4406, !tbaa !1899
  %func_globals79 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %51, i32 0, i32 5, !dbg !4406
  %52 = load ptr, ptr %func_globals79, align 8, !dbg !4406, !tbaa !4404
  %53 = load ptr, ptr %arg.addr, align 8, !dbg !4406, !tbaa !1899
  %call80 = call i32 %50(ptr noundef %52, ptr noundef %53), !dbg !4406
  store i32 %call80, ptr %vret78, align 4, !dbg !4406, !tbaa !1984
  %54 = load i32, ptr %vret78, align 4, !dbg !4407, !tbaa !1984
  %tobool81 = icmp ne i32 %54, 0, !dbg !4407
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !4406

if.then82:                                        ; preds = %if.then77
  %55 = load i32, ptr %vret78, align 4, !dbg !4407, !tbaa !1984
  store i32 %55, ptr %retval, align 4, !dbg !4407
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup84, !dbg !4407

if.end83:                                         ; preds = %if.then77
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4403
  br label %cleanup84, !dbg !4403

cleanup84:                                        ; preds = %if.end83, %if.then82
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret78) #11, !dbg !4403
  %cleanup.dest85 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest85, label %unreachable [
    i32 0, label %cleanup.cont86
    i32 1, label %return
  ]

cleanup.cont86:                                   ; preds = %cleanup84
  br label %if.end87, !dbg !4406

if.end87:                                         ; preds = %cleanup.cont86, %do.body75
  br label %do.end88, !dbg !4405

do.end88:                                         ; preds = %if.end87
  br label %do.body89, !dbg !4409

do.body89:                                        ; preds = %do.end88
  %56 = load ptr, ptr %m.addr, align 8, !dbg !4410, !tbaa !1899
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %56, i32 0, i32 6, !dbg !4410
  %57 = load ptr, ptr %func_code, align 8, !dbg !4410, !tbaa !4411
  %tobool90 = icmp ne ptr %57, null, !dbg !4410
  br i1 %tobool90, label %if.then91, label %if.end101, !dbg !4412

if.then91:                                        ; preds = %do.body89
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret92) #11, !dbg !4413
  tail call void @llvm.dbg.declare(metadata ptr %vret92, metadata !4328, metadata !DIExpression()), !dbg !4413
  %58 = load ptr, ptr %visit.addr, align 8, !dbg !4413, !tbaa !1899
  %59 = load ptr, ptr %m.addr, align 8, !dbg !4413, !tbaa !1899
  %func_code93 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %59, i32 0, i32 6, !dbg !4413
  %60 = load ptr, ptr %func_code93, align 8, !dbg !4413, !tbaa !4411
  %61 = load ptr, ptr %arg.addr, align 8, !dbg !4413, !tbaa !1899
  %call94 = call i32 %58(ptr noundef %60, ptr noundef %61), !dbg !4413
  store i32 %call94, ptr %vret92, align 4, !dbg !4413, !tbaa !1984
  %62 = load i32, ptr %vret92, align 4, !dbg !4414, !tbaa !1984
  %tobool95 = icmp ne i32 %62, 0, !dbg !4414
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !4413

if.then96:                                        ; preds = %if.then91
  %63 = load i32, ptr %vret92, align 4, !dbg !4414, !tbaa !1984
  store i32 %63, ptr %retval, align 4, !dbg !4414
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup98, !dbg !4414

if.end97:                                         ; preds = %if.then91
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4410
  br label %cleanup98, !dbg !4410

cleanup98:                                        ; preds = %if.end97, %if.then96
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret92) #11, !dbg !4410
  %cleanup.dest99 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest99, label %unreachable [
    i32 0, label %cleanup.cont100
    i32 1, label %return
  ]

cleanup.cont100:                                  ; preds = %cleanup98
  br label %if.end101, !dbg !4413

if.end101:                                        ; preds = %cleanup.cont100, %do.body89
  br label %do.end102, !dbg !4412

do.end102:                                        ; preds = %if.end101
  br label %do.body103, !dbg !4416

do.body103:                                       ; preds = %do.end102
  %64 = load ptr, ptr %m.addr, align 8, !dbg !4417, !tbaa !1899
  %mm_class = getelementptr inbounds %struct.PyCMethodObject, ptr %64, i32 0, i32 1, !dbg !4417
  %65 = load ptr, ptr %mm_class, align 8, !dbg !4417, !tbaa !4418
  %tobool104 = icmp ne ptr %65, null, !dbg !4417
  br i1 %tobool104, label %if.then105, label %if.end115, !dbg !4419

if.then105:                                       ; preds = %do.body103
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret106) #11, !dbg !4420
  tail call void @llvm.dbg.declare(metadata ptr %vret106, metadata !4332, metadata !DIExpression()), !dbg !4420
  %66 = load ptr, ptr %visit.addr, align 8, !dbg !4420, !tbaa !1899
  %67 = load ptr, ptr %m.addr, align 8, !dbg !4420, !tbaa !1899
  %mm_class107 = getelementptr inbounds %struct.PyCMethodObject, ptr %67, i32 0, i32 1, !dbg !4420
  %68 = load ptr, ptr %mm_class107, align 8, !dbg !4420, !tbaa !4418
  %69 = load ptr, ptr %arg.addr, align 8, !dbg !4420, !tbaa !1899
  %call108 = call i32 %66(ptr noundef %68, ptr noundef %69), !dbg !4420
  store i32 %call108, ptr %vret106, align 4, !dbg !4420, !tbaa !1984
  %70 = load i32, ptr %vret106, align 4, !dbg !4421, !tbaa !1984
  %tobool109 = icmp ne i32 %70, 0, !dbg !4421
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !4420

if.then110:                                       ; preds = %if.then105
  %71 = load i32, ptr %vret106, align 4, !dbg !4421, !tbaa !1984
  store i32 %71, ptr %retval, align 4, !dbg !4421
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup112, !dbg !4421

if.end111:                                        ; preds = %if.then105
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4417
  br label %cleanup112, !dbg !4417

cleanup112:                                       ; preds = %if.end111, %if.then110
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret106) #11, !dbg !4417
  %cleanup.dest113 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest113, label %unreachable [
    i32 0, label %cleanup.cont114
    i32 1, label %return
  ]

cleanup.cont114:                                  ; preds = %cleanup112
  br label %if.end115, !dbg !4420

if.end115:                                        ; preds = %cleanup.cont114, %do.body103
  br label %do.end116, !dbg !4419

do.end116:                                        ; preds = %if.end115
  br label %do.body117, !dbg !4423

do.body117:                                       ; preds = %do.end116
  %72 = load ptr, ptr %m.addr, align 8, !dbg !4424, !tbaa !1899
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %72, i32 0, i32 12, !dbg !4424
  %73 = load ptr, ptr %defaults_tuple, align 8, !dbg !4424, !tbaa !3884
  %tobool118 = icmp ne ptr %73, null, !dbg !4424
  br i1 %tobool118, label %if.then119, label %if.end129, !dbg !4425

if.then119:                                       ; preds = %do.body117
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret120) #11, !dbg !4426
  tail call void @llvm.dbg.declare(metadata ptr %vret120, metadata !4336, metadata !DIExpression()), !dbg !4426
  %74 = load ptr, ptr %visit.addr, align 8, !dbg !4426, !tbaa !1899
  %75 = load ptr, ptr %m.addr, align 8, !dbg !4426, !tbaa !1899
  %defaults_tuple121 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %75, i32 0, i32 12, !dbg !4426
  %76 = load ptr, ptr %defaults_tuple121, align 8, !dbg !4426, !tbaa !3884
  %77 = load ptr, ptr %arg.addr, align 8, !dbg !4426, !tbaa !1899
  %call122 = call i32 %74(ptr noundef %76, ptr noundef %77), !dbg !4426
  store i32 %call122, ptr %vret120, align 4, !dbg !4426, !tbaa !1984
  %78 = load i32, ptr %vret120, align 4, !dbg !4427, !tbaa !1984
  %tobool123 = icmp ne i32 %78, 0, !dbg !4427
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !4426

if.then124:                                       ; preds = %if.then119
  %79 = load i32, ptr %vret120, align 4, !dbg !4427, !tbaa !1984
  store i32 %79, ptr %retval, align 4, !dbg !4427
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup126, !dbg !4427

if.end125:                                        ; preds = %if.then119
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4424
  br label %cleanup126, !dbg !4424

cleanup126:                                       ; preds = %if.end125, %if.then124
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret120) #11, !dbg !4424
  %cleanup.dest127 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest127, label %unreachable [
    i32 0, label %cleanup.cont128
    i32 1, label %return
  ]

cleanup.cont128:                                  ; preds = %cleanup126
  br label %if.end129, !dbg !4426

if.end129:                                        ; preds = %cleanup.cont128, %do.body117
  br label %do.end130, !dbg !4425

do.end130:                                        ; preds = %if.end129
  br label %do.body131, !dbg !4429

do.body131:                                       ; preds = %do.end130
  %80 = load ptr, ptr %m.addr, align 8, !dbg !4430, !tbaa !1899
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %80, i32 0, i32 13, !dbg !4430
  %81 = load ptr, ptr %defaults_kwdict, align 8, !dbg !4430, !tbaa !4431
  %tobool132 = icmp ne ptr %81, null, !dbg !4430
  br i1 %tobool132, label %if.then133, label %if.end143, !dbg !4432

if.then133:                                       ; preds = %do.body131
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret134) #11, !dbg !4433
  tail call void @llvm.dbg.declare(metadata ptr %vret134, metadata !4340, metadata !DIExpression()), !dbg !4433
  %82 = load ptr, ptr %visit.addr, align 8, !dbg !4433, !tbaa !1899
  %83 = load ptr, ptr %m.addr, align 8, !dbg !4433, !tbaa !1899
  %defaults_kwdict135 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %83, i32 0, i32 13, !dbg !4433
  %84 = load ptr, ptr %defaults_kwdict135, align 8, !dbg !4433, !tbaa !4431
  %85 = load ptr, ptr %arg.addr, align 8, !dbg !4433, !tbaa !1899
  %call136 = call i32 %82(ptr noundef %84, ptr noundef %85), !dbg !4433
  store i32 %call136, ptr %vret134, align 4, !dbg !4433, !tbaa !1984
  %86 = load i32, ptr %vret134, align 4, !dbg !4434, !tbaa !1984
  %tobool137 = icmp ne i32 %86, 0, !dbg !4434
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !4433

if.then138:                                       ; preds = %if.then133
  %87 = load i32, ptr %vret134, align 4, !dbg !4434, !tbaa !1984
  store i32 %87, ptr %retval, align 4, !dbg !4434
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup140, !dbg !4434

if.end139:                                        ; preds = %if.then133
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4430
  br label %cleanup140, !dbg !4430

cleanup140:                                       ; preds = %if.end139, %if.then138
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret134) #11, !dbg !4430
  %cleanup.dest141 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest141, label %unreachable [
    i32 0, label %cleanup.cont142
    i32 1, label %return
  ]

cleanup.cont142:                                  ; preds = %cleanup140
  br label %if.end143, !dbg !4433

if.end143:                                        ; preds = %cleanup.cont142, %do.body131
  br label %do.end144, !dbg !4432

do.end144:                                        ; preds = %if.end143
  br label %do.body145, !dbg !4436

do.body145:                                       ; preds = %do.end144
  %88 = load ptr, ptr %m.addr, align 8, !dbg !4437, !tbaa !1899
  %func_is_coroutine = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %88, i32 0, i32 16, !dbg !4437
  %89 = load ptr, ptr %func_is_coroutine, align 8, !dbg !4437, !tbaa !4438
  %tobool146 = icmp ne ptr %89, null, !dbg !4437
  br i1 %tobool146, label %if.then147, label %if.end157, !dbg !4439

if.then147:                                       ; preds = %do.body145
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret148) #11, !dbg !4440
  tail call void @llvm.dbg.declare(metadata ptr %vret148, metadata !4344, metadata !DIExpression()), !dbg !4440
  %90 = load ptr, ptr %visit.addr, align 8, !dbg !4440, !tbaa !1899
  %91 = load ptr, ptr %m.addr, align 8, !dbg !4440, !tbaa !1899
  %func_is_coroutine149 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %91, i32 0, i32 16, !dbg !4440
  %92 = load ptr, ptr %func_is_coroutine149, align 8, !dbg !4440, !tbaa !4438
  %93 = load ptr, ptr %arg.addr, align 8, !dbg !4440, !tbaa !1899
  %call150 = call i32 %90(ptr noundef %92, ptr noundef %93), !dbg !4440
  store i32 %call150, ptr %vret148, align 4, !dbg !4440, !tbaa !1984
  %94 = load i32, ptr %vret148, align 4, !dbg !4441, !tbaa !1984
  %tobool151 = icmp ne i32 %94, 0, !dbg !4441
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !4440

if.then152:                                       ; preds = %if.then147
  %95 = load i32, ptr %vret148, align 4, !dbg !4441, !tbaa !1984
  store i32 %95, ptr %retval, align 4, !dbg !4441
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup154, !dbg !4441

if.end153:                                        ; preds = %if.then147
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4437
  br label %cleanup154, !dbg !4437

cleanup154:                                       ; preds = %if.end153, %if.then152
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret148) #11, !dbg !4437
  %cleanup.dest155 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest155, label %unreachable [
    i32 0, label %cleanup.cont156
    i32 1, label %return
  ]

cleanup.cont156:                                  ; preds = %cleanup154
  br label %if.end157, !dbg !4440

if.end157:                                        ; preds = %cleanup.cont156, %do.body145
  br label %do.end158, !dbg !4439

do.end158:                                        ; preds = %if.end157
  %96 = load ptr, ptr %m.addr, align 8, !dbg !4443, !tbaa !1899
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %96, i32 0, i32 8, !dbg !4444
  %97 = load ptr, ptr %defaults, align 8, !dbg !4444, !tbaa !4445
  %tobool159 = icmp ne ptr %97, null, !dbg !4443
  br i1 %tobool159, label %if.then160, label %if.end181, !dbg !4446

if.then160:                                       ; preds = %do.end158
  call void @llvm.lifetime.start.p0(i64 8, ptr %pydefaults) #11, !dbg !4447
  tail call void @llvm.dbg.declare(metadata ptr %pydefaults, metadata !4348, metadata !DIExpression()), !dbg !4448
  %98 = load ptr, ptr %m.addr, align 8, !dbg !4449, !tbaa !1899
  %defaults161 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %98, i32 0, i32 8, !dbg !4449
  %99 = load ptr, ptr %defaults161, align 8, !dbg !4449, !tbaa !4445
  store ptr %99, ptr %pydefaults, align 8, !dbg !4448, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #11, !dbg !4450
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4351, metadata !DIExpression()), !dbg !4451
  store i32 0, ptr %i, align 4, !dbg !4452, !tbaa !1984
  br label %for.cond, !dbg !4453

for.cond:                                         ; preds = %for.inc, %if.then160
  %100 = load i32, ptr %i, align 4, !dbg !4454, !tbaa !1984
  %101 = load ptr, ptr %m.addr, align 8, !dbg !4455, !tbaa !1899
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %101, i32 0, i32 9, !dbg !4456
  %102 = load i32, ptr %defaults_pyobjects, align 8, !dbg !4456, !tbaa !4457
  %cmp = icmp slt i32 %100, %102, !dbg !4458
  br i1 %cmp, label %for.body, label %for.end, !dbg !4459

for.body:                                         ; preds = %for.cond
  br label %do.body162, !dbg !4460

do.body162:                                       ; preds = %for.body
  %103 = load ptr, ptr %pydefaults, align 8, !dbg !4461, !tbaa !1899
  %104 = load i32, ptr %i, align 4, !dbg !4461, !tbaa !1984
  %idxprom = sext i32 %104 to i64, !dbg !4461
  %arrayidx = getelementptr ptr, ptr %103, i64 %idxprom, !dbg !4461
  %105 = load ptr, ptr %arrayidx, align 8, !dbg !4461, !tbaa !1899
  %tobool163 = icmp ne ptr %105, null, !dbg !4461
  br i1 %tobool163, label %if.then164, label %if.end175, !dbg !4462

if.then164:                                       ; preds = %do.body162
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret165) #11, !dbg !4463
  tail call void @llvm.dbg.declare(metadata ptr %vret165, metadata !4352, metadata !DIExpression()), !dbg !4463
  %106 = load ptr, ptr %visit.addr, align 8, !dbg !4463, !tbaa !1899
  %107 = load ptr, ptr %pydefaults, align 8, !dbg !4463, !tbaa !1899
  %108 = load i32, ptr %i, align 4, !dbg !4463, !tbaa !1984
  %idxprom166 = sext i32 %108 to i64, !dbg !4463
  %arrayidx167 = getelementptr ptr, ptr %107, i64 %idxprom166, !dbg !4463
  %109 = load ptr, ptr %arrayidx167, align 8, !dbg !4463, !tbaa !1899
  %110 = load ptr, ptr %arg.addr, align 8, !dbg !4463, !tbaa !1899
  %call168 = call i32 %106(ptr noundef %109, ptr noundef %110), !dbg !4463
  store i32 %call168, ptr %vret165, align 4, !dbg !4463, !tbaa !1984
  %111 = load i32, ptr %vret165, align 4, !dbg !4464, !tbaa !1984
  %tobool169 = icmp ne i32 %111, 0, !dbg !4464
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !4463

if.then170:                                       ; preds = %if.then164
  %112 = load i32, ptr %vret165, align 4, !dbg !4464, !tbaa !1984
  store i32 %112, ptr %retval, align 4, !dbg !4464
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172, !dbg !4464

if.end171:                                        ; preds = %if.then164
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4461
  br label %cleanup172, !dbg !4461

cleanup172:                                       ; preds = %if.end171, %if.then170
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret165) #11, !dbg !4461
  %cleanup.dest173 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest173, label %cleanup177 [
    i32 0, label %cleanup.cont174
  ]

cleanup.cont174:                                  ; preds = %cleanup172
  br label %if.end175, !dbg !4463

if.end175:                                        ; preds = %cleanup.cont174, %do.body162
  br label %do.cond, !dbg !4462

do.cond:                                          ; preds = %if.end175
  br label %do.end176, !dbg !4462

do.end176:                                        ; preds = %do.cond
  br label %for.inc, !dbg !4462

for.inc:                                          ; preds = %do.end176
  %113 = load i32, ptr %i, align 4, !dbg !4466, !tbaa !1984
  %inc = add i32 %113, 1, !dbg !4466
  store i32 %inc, ptr %i, align 4, !dbg !4466, !tbaa !1984
  br label %for.cond, !dbg !4467, !llvm.loop !4468

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4471
  br label %cleanup177, !dbg !4471

cleanup177:                                       ; preds = %for.end, %cleanup172
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #11, !dbg !4471
  call void @llvm.lifetime.end.p0(i64 8, ptr %pydefaults) #11, !dbg !4471
  %cleanup.dest179 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest179, label %unreachable [
    i32 0, label %cleanup.cont180
    i32 1, label %return
  ]

cleanup.cont180:                                  ; preds = %cleanup177
  br label %if.end181, !dbg !4472

if.end181:                                        ; preds = %cleanup.cont180, %do.end158
  store i32 0, ptr %retval, align 4, !dbg !4473
  br label %return, !dbg !4473

return:                                           ; preds = %if.end181, %cleanup177, %cleanup154, %cleanup140, %cleanup126, %cleanup112, %cleanup98, %cleanup84, %cleanup70, %cleanup56, %cleanup42, %cleanup28, %cleanup14, %cleanup
  %114 = load i32, ptr %retval, align 4, !dbg !4474
  ret i32 %114, !dbg !4474

unreachable:                                      ; preds = %cleanup177, %cleanup154, %cleanup140, %cleanup126, %cleanup112, %cleanup98, %cleanup84, %cleanup70, %cleanup56, %cleanup42, %cleanup28, %cleanup14, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_clear(ptr noundef %m) #0 !dbg !4475 {
entry:
  %m.addr = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp3 = alloca ptr, align 8
  %_py_tmp10 = alloca ptr, align 8
  %_py_tmp17 = alloca ptr, align 8
  %_py_tmp24 = alloca ptr, align 8
  %_py_tmp31 = alloca ptr, align 8
  %_py_tmp38 = alloca ptr, align 8
  %_py_tmp45 = alloca ptr, align 8
  %cls = alloca ptr, align 8
  %_py_tmp53 = alloca ptr, align 8
  %_py_tmp60 = alloca ptr, align 8
  %_py_tmp67 = alloca ptr, align 8
  %_py_tmp74 = alloca ptr, align 8
  %pydefaults = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %m, ptr %m.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %m.addr, metadata !4479, metadata !DIExpression()), !dbg !4510
  br label %do.body, !dbg !4511

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #11, !dbg !4512
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !4480, metadata !DIExpression()), !dbg !4512
  %0 = load ptr, ptr %m.addr, align 8, !dbg !4512, !tbaa !1899
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 7, !dbg !4512
  %1 = load ptr, ptr %func_closure, align 8, !dbg !4512, !tbaa !4363
  store ptr %1, ptr %_py_tmp, align 8, !dbg !4512, !tbaa !1899
  %2 = load ptr, ptr %_py_tmp, align 8, !dbg !4513, !tbaa !1899
  %cmp = icmp ne ptr %2, null, !dbg !4513
  br i1 %cmp, label %if.then, label %if.end, !dbg !4512

if.then:                                          ; preds = %do.body
  %3 = load ptr, ptr %m.addr, align 8, !dbg !4515, !tbaa !1899
  %func_closure1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 7, !dbg !4515
  store ptr null, ptr %func_closure1, align 8, !dbg !4515, !tbaa !4363
  %4 = load ptr, ptr %_py_tmp, align 8, !dbg !4515, !tbaa !1899
  call void @Py_DECREF(ptr noundef %4), !dbg !4515
  br label %if.end, !dbg !4515

if.end:                                           ; preds = %if.then, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #11, !dbg !4511
  br label %do.end, !dbg !4512

do.end:                                           ; preds = %if.end
  br label %do.body2, !dbg !4517

do.body2:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp3) #11, !dbg !4518
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp3, metadata !4482, metadata !DIExpression()), !dbg !4518
  %5 = load ptr, ptr %m.addr, align 8, !dbg !4518, !tbaa !1899
  %m_module = getelementptr inbounds %struct.PyCFunctionObject, ptr %5, i32 0, i32 3, !dbg !4518
  %6 = load ptr, ptr %m_module, align 8, !dbg !4518, !tbaa !4370
  store ptr %6, ptr %_py_tmp3, align 8, !dbg !4518, !tbaa !1899
  %7 = load ptr, ptr %_py_tmp3, align 8, !dbg !4519, !tbaa !1899
  %cmp4 = icmp ne ptr %7, null, !dbg !4519
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !4518

if.then5:                                         ; preds = %do.body2
  %8 = load ptr, ptr %m.addr, align 8, !dbg !4521, !tbaa !1899
  %m_module6 = getelementptr inbounds %struct.PyCFunctionObject, ptr %8, i32 0, i32 3, !dbg !4521
  store ptr null, ptr %m_module6, align 8, !dbg !4521, !tbaa !4370
  %9 = load ptr, ptr %_py_tmp3, align 8, !dbg !4521, !tbaa !1899
  call void @Py_DECREF(ptr noundef %9), !dbg !4521
  br label %if.end7, !dbg !4521

if.end7:                                          ; preds = %if.then5, %do.body2
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp3) #11, !dbg !4517
  br label %do.end8, !dbg !4518

do.end8:                                          ; preds = %if.end7
  br label %do.body9, !dbg !4523

do.body9:                                         ; preds = %do.end8
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp10) #11, !dbg !4524
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp10, metadata !4484, metadata !DIExpression()), !dbg !4524
  %10 = load ptr, ptr %m.addr, align 8, !dbg !4524, !tbaa !1899
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %10, i32 0, i32 1, !dbg !4524
  %11 = load ptr, ptr %func_dict, align 8, !dbg !4524, !tbaa !4377
  store ptr %11, ptr %_py_tmp10, align 8, !dbg !4524, !tbaa !1899
  %12 = load ptr, ptr %_py_tmp10, align 8, !dbg !4525, !tbaa !1899
  %cmp11 = icmp ne ptr %12, null, !dbg !4525
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !4524

if.then12:                                        ; preds = %do.body9
  %13 = load ptr, ptr %m.addr, align 8, !dbg !4527, !tbaa !1899
  %func_dict13 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %13, i32 0, i32 1, !dbg !4527
  store ptr null, ptr %func_dict13, align 8, !dbg !4527, !tbaa !4377
  %14 = load ptr, ptr %_py_tmp10, align 8, !dbg !4527, !tbaa !1899
  call void @Py_DECREF(ptr noundef %14), !dbg !4527
  br label %if.end14, !dbg !4527

if.end14:                                         ; preds = %if.then12, %do.body9
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp10) #11, !dbg !4523
  br label %do.end15, !dbg !4524

do.end15:                                         ; preds = %if.end14
  br label %do.body16, !dbg !4529

do.body16:                                        ; preds = %do.end15
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp17) #11, !dbg !4530
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp17, metadata !4486, metadata !DIExpression()), !dbg !4530
  %15 = load ptr, ptr %m.addr, align 8, !dbg !4530, !tbaa !1899
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %15, i32 0, i32 2, !dbg !4530
  %16 = load ptr, ptr %func_name, align 8, !dbg !4530, !tbaa !4384
  store ptr %16, ptr %_py_tmp17, align 8, !dbg !4530, !tbaa !1899
  %17 = load ptr, ptr %_py_tmp17, align 8, !dbg !4531, !tbaa !1899
  %cmp18 = icmp ne ptr %17, null, !dbg !4531
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !4530

if.then19:                                        ; preds = %do.body16
  %18 = load ptr, ptr %m.addr, align 8, !dbg !4533, !tbaa !1899
  %func_name20 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %18, i32 0, i32 2, !dbg !4533
  store ptr null, ptr %func_name20, align 8, !dbg !4533, !tbaa !4384
  %19 = load ptr, ptr %_py_tmp17, align 8, !dbg !4533, !tbaa !1899
  call void @Py_DECREF(ptr noundef %19), !dbg !4533
  br label %if.end21, !dbg !4533

if.end21:                                         ; preds = %if.then19, %do.body16
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp17) #11, !dbg !4529
  br label %do.end22, !dbg !4530

do.end22:                                         ; preds = %if.end21
  br label %do.body23, !dbg !4535

do.body23:                                        ; preds = %do.end22
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp24) #11, !dbg !4536
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp24, metadata !4488, metadata !DIExpression()), !dbg !4536
  %20 = load ptr, ptr %m.addr, align 8, !dbg !4536, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %20, i32 0, i32 3, !dbg !4536
  %21 = load ptr, ptr %func_qualname, align 8, !dbg !4536, !tbaa !4197
  store ptr %21, ptr %_py_tmp24, align 8, !dbg !4536, !tbaa !1899
  %22 = load ptr, ptr %_py_tmp24, align 8, !dbg !4537, !tbaa !1899
  %cmp25 = icmp ne ptr %22, null, !dbg !4537
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !4536

if.then26:                                        ; preds = %do.body23
  %23 = load ptr, ptr %m.addr, align 8, !dbg !4539, !tbaa !1899
  %func_qualname27 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %23, i32 0, i32 3, !dbg !4539
  store ptr null, ptr %func_qualname27, align 8, !dbg !4539, !tbaa !4197
  %24 = load ptr, ptr %_py_tmp24, align 8, !dbg !4539, !tbaa !1899
  call void @Py_DECREF(ptr noundef %24), !dbg !4539
  br label %if.end28, !dbg !4539

if.end28:                                         ; preds = %if.then26, %do.body23
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp24) #11, !dbg !4535
  br label %do.end29, !dbg !4536

do.end29:                                         ; preds = %if.end28
  br label %do.body30, !dbg !4541

do.body30:                                        ; preds = %do.end29
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp31) #11, !dbg !4542
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp31, metadata !4490, metadata !DIExpression()), !dbg !4542
  %25 = load ptr, ptr %m.addr, align 8, !dbg !4542, !tbaa !1899
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %25, i32 0, i32 4, !dbg !4542
  %26 = load ptr, ptr %func_doc, align 8, !dbg !4542, !tbaa !4397
  store ptr %26, ptr %_py_tmp31, align 8, !dbg !4542, !tbaa !1899
  %27 = load ptr, ptr %_py_tmp31, align 8, !dbg !4543, !tbaa !1899
  %cmp32 = icmp ne ptr %27, null, !dbg !4543
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !4542

if.then33:                                        ; preds = %do.body30
  %28 = load ptr, ptr %m.addr, align 8, !dbg !4545, !tbaa !1899
  %func_doc34 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %28, i32 0, i32 4, !dbg !4545
  store ptr null, ptr %func_doc34, align 8, !dbg !4545, !tbaa !4397
  %29 = load ptr, ptr %_py_tmp31, align 8, !dbg !4545, !tbaa !1899
  call void @Py_DECREF(ptr noundef %29), !dbg !4545
  br label %if.end35, !dbg !4545

if.end35:                                         ; preds = %if.then33, %do.body30
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp31) #11, !dbg !4541
  br label %do.end36, !dbg !4542

do.end36:                                         ; preds = %if.end35
  br label %do.body37, !dbg !4547

do.body37:                                        ; preds = %do.end36
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp38) #11, !dbg !4548
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp38, metadata !4492, metadata !DIExpression()), !dbg !4548
  %30 = load ptr, ptr %m.addr, align 8, !dbg !4548, !tbaa !1899
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %30, i32 0, i32 5, !dbg !4548
  %31 = load ptr, ptr %func_globals, align 8, !dbg !4548, !tbaa !4404
  store ptr %31, ptr %_py_tmp38, align 8, !dbg !4548, !tbaa !1899
  %32 = load ptr, ptr %_py_tmp38, align 8, !dbg !4549, !tbaa !1899
  %cmp39 = icmp ne ptr %32, null, !dbg !4549
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !4548

if.then40:                                        ; preds = %do.body37
  %33 = load ptr, ptr %m.addr, align 8, !dbg !4551, !tbaa !1899
  %func_globals41 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %33, i32 0, i32 5, !dbg !4551
  store ptr null, ptr %func_globals41, align 8, !dbg !4551, !tbaa !4404
  %34 = load ptr, ptr %_py_tmp38, align 8, !dbg !4551, !tbaa !1899
  call void @Py_DECREF(ptr noundef %34), !dbg !4551
  br label %if.end42, !dbg !4551

if.end42:                                         ; preds = %if.then40, %do.body37
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp38) #11, !dbg !4547
  br label %do.end43, !dbg !4548

do.end43:                                         ; preds = %if.end42
  br label %do.body44, !dbg !4553

do.body44:                                        ; preds = %do.end43
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp45) #11, !dbg !4554
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp45, metadata !4494, metadata !DIExpression()), !dbg !4554
  %35 = load ptr, ptr %m.addr, align 8, !dbg !4554, !tbaa !1899
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %35, i32 0, i32 6, !dbg !4554
  %36 = load ptr, ptr %func_code, align 8, !dbg !4554, !tbaa !4411
  store ptr %36, ptr %_py_tmp45, align 8, !dbg !4554, !tbaa !1899
  %37 = load ptr, ptr %_py_tmp45, align 8, !dbg !4555, !tbaa !1899
  %cmp46 = icmp ne ptr %37, null, !dbg !4555
  br i1 %cmp46, label %if.then47, label %if.end49, !dbg !4554

if.then47:                                        ; preds = %do.body44
  %38 = load ptr, ptr %m.addr, align 8, !dbg !4557, !tbaa !1899
  %func_code48 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %38, i32 0, i32 6, !dbg !4557
  store ptr null, ptr %func_code48, align 8, !dbg !4557, !tbaa !4411
  %39 = load ptr, ptr %_py_tmp45, align 8, !dbg !4557, !tbaa !1899
  call void @Py_DECREF(ptr noundef %39), !dbg !4557
  br label %if.end49, !dbg !4557

if.end49:                                         ; preds = %if.then47, %do.body44
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp45) #11, !dbg !4553
  br label %do.end50, !dbg !4554

do.end50:                                         ; preds = %if.end49
  call void @llvm.lifetime.start.p0(i64 8, ptr %cls) #11, !dbg !4559
  tail call void @llvm.dbg.declare(metadata ptr %cls, metadata !4496, metadata !DIExpression()), !dbg !4560
  %40 = load ptr, ptr %m.addr, align 8, !dbg !4561, !tbaa !1899
  %mm_class = getelementptr inbounds %struct.PyCMethodObject, ptr %40, i32 0, i32 1, !dbg !4562
  %41 = load ptr, ptr %mm_class, align 8, !dbg !4562, !tbaa !4418
  store ptr %41, ptr %cls, align 8, !dbg !4560, !tbaa !1899
  %42 = load ptr, ptr %m.addr, align 8, !dbg !4563, !tbaa !1899
  %mm_class51 = getelementptr inbounds %struct.PyCMethodObject, ptr %42, i32 0, i32 1, !dbg !4564
  store ptr null, ptr %mm_class51, align 8, !dbg !4565, !tbaa !4418
  %43 = load ptr, ptr %cls, align 8, !dbg !4566, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %43), !dbg !4566
  call void @llvm.lifetime.end.p0(i64 8, ptr %cls) #11, !dbg !4567
  br label %do.body52, !dbg !4568

do.body52:                                        ; preds = %do.end50
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp53) #11, !dbg !4569
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp53, metadata !4498, metadata !DIExpression()), !dbg !4569
  %44 = load ptr, ptr %m.addr, align 8, !dbg !4569, !tbaa !1899
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %44, i32 0, i32 12, !dbg !4569
  %45 = load ptr, ptr %defaults_tuple, align 8, !dbg !4569, !tbaa !3884
  store ptr %45, ptr %_py_tmp53, align 8, !dbg !4569, !tbaa !1899
  %46 = load ptr, ptr %_py_tmp53, align 8, !dbg !4570, !tbaa !1899
  %cmp54 = icmp ne ptr %46, null, !dbg !4570
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !4569

if.then55:                                        ; preds = %do.body52
  %47 = load ptr, ptr %m.addr, align 8, !dbg !4572, !tbaa !1899
  %defaults_tuple56 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %47, i32 0, i32 12, !dbg !4572
  store ptr null, ptr %defaults_tuple56, align 8, !dbg !4572, !tbaa !3884
  %48 = load ptr, ptr %_py_tmp53, align 8, !dbg !4572, !tbaa !1899
  call void @Py_DECREF(ptr noundef %48), !dbg !4572
  br label %if.end57, !dbg !4572

if.end57:                                         ; preds = %if.then55, %do.body52
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp53) #11, !dbg !4568
  br label %do.end58, !dbg !4569

do.end58:                                         ; preds = %if.end57
  br label %do.body59, !dbg !4574

do.body59:                                        ; preds = %do.end58
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp60) #11, !dbg !4575
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp60, metadata !4500, metadata !DIExpression()), !dbg !4575
  %49 = load ptr, ptr %m.addr, align 8, !dbg !4575, !tbaa !1899
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %49, i32 0, i32 13, !dbg !4575
  %50 = load ptr, ptr %defaults_kwdict, align 8, !dbg !4575, !tbaa !4431
  store ptr %50, ptr %_py_tmp60, align 8, !dbg !4575, !tbaa !1899
  %51 = load ptr, ptr %_py_tmp60, align 8, !dbg !4576, !tbaa !1899
  %cmp61 = icmp ne ptr %51, null, !dbg !4576
  br i1 %cmp61, label %if.then62, label %if.end64, !dbg !4575

if.then62:                                        ; preds = %do.body59
  %52 = load ptr, ptr %m.addr, align 8, !dbg !4578, !tbaa !1899
  %defaults_kwdict63 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %52, i32 0, i32 13, !dbg !4578
  store ptr null, ptr %defaults_kwdict63, align 8, !dbg !4578, !tbaa !4431
  %53 = load ptr, ptr %_py_tmp60, align 8, !dbg !4578, !tbaa !1899
  call void @Py_DECREF(ptr noundef %53), !dbg !4578
  br label %if.end64, !dbg !4578

if.end64:                                         ; preds = %if.then62, %do.body59
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp60) #11, !dbg !4574
  br label %do.end65, !dbg !4575

do.end65:                                         ; preds = %if.end64
  br label %do.body66, !dbg !4580

do.body66:                                        ; preds = %do.end65
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp67) #11, !dbg !4581
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp67, metadata !4502, metadata !DIExpression()), !dbg !4581
  %54 = load ptr, ptr %m.addr, align 8, !dbg !4581, !tbaa !1899
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %54, i32 0, i32 15, !dbg !4581
  %55 = load ptr, ptr %func_annotations, align 8, !dbg !4581, !tbaa !4582
  store ptr %55, ptr %_py_tmp67, align 8, !dbg !4581, !tbaa !1899
  %56 = load ptr, ptr %_py_tmp67, align 8, !dbg !4583, !tbaa !1899
  %cmp68 = icmp ne ptr %56, null, !dbg !4583
  br i1 %cmp68, label %if.then69, label %if.end71, !dbg !4581

if.then69:                                        ; preds = %do.body66
  %57 = load ptr, ptr %m.addr, align 8, !dbg !4585, !tbaa !1899
  %func_annotations70 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %57, i32 0, i32 15, !dbg !4585
  store ptr null, ptr %func_annotations70, align 8, !dbg !4585, !tbaa !4582
  %58 = load ptr, ptr %_py_tmp67, align 8, !dbg !4585, !tbaa !1899
  call void @Py_DECREF(ptr noundef %58), !dbg !4585
  br label %if.end71, !dbg !4585

if.end71:                                         ; preds = %if.then69, %do.body66
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp67) #11, !dbg !4580
  br label %do.end72, !dbg !4581

do.end72:                                         ; preds = %if.end71
  br label %do.body73, !dbg !4587

do.body73:                                        ; preds = %do.end72
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp74) #11, !dbg !4588
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp74, metadata !4504, metadata !DIExpression()), !dbg !4588
  %59 = load ptr, ptr %m.addr, align 8, !dbg !4588, !tbaa !1899
  %func_is_coroutine = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %59, i32 0, i32 16, !dbg !4588
  %60 = load ptr, ptr %func_is_coroutine, align 8, !dbg !4588, !tbaa !4438
  store ptr %60, ptr %_py_tmp74, align 8, !dbg !4588, !tbaa !1899
  %61 = load ptr, ptr %_py_tmp74, align 8, !dbg !4589, !tbaa !1899
  %cmp75 = icmp ne ptr %61, null, !dbg !4589
  br i1 %cmp75, label %if.then76, label %if.end78, !dbg !4588

if.then76:                                        ; preds = %do.body73
  %62 = load ptr, ptr %m.addr, align 8, !dbg !4591, !tbaa !1899
  %func_is_coroutine77 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %62, i32 0, i32 16, !dbg !4591
  store ptr null, ptr %func_is_coroutine77, align 8, !dbg !4591, !tbaa !4438
  %63 = load ptr, ptr %_py_tmp74, align 8, !dbg !4591, !tbaa !1899
  call void @Py_DECREF(ptr noundef %63), !dbg !4591
  br label %if.end78, !dbg !4591

if.end78:                                         ; preds = %if.then76, %do.body73
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp74) #11, !dbg !4587
  br label %do.end79, !dbg !4588

do.end79:                                         ; preds = %if.end78
  %64 = load ptr, ptr %m.addr, align 8, !dbg !4593, !tbaa !1899
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %64, i32 0, i32 8, !dbg !4594
  %65 = load ptr, ptr %defaults, align 8, !dbg !4594, !tbaa !4445
  %tobool = icmp ne ptr %65, null, !dbg !4593
  br i1 %tobool, label %if.then80, label %if.end85, !dbg !4595

if.then80:                                        ; preds = %do.end79
  call void @llvm.lifetime.start.p0(i64 8, ptr %pydefaults) #11, !dbg !4596
  tail call void @llvm.dbg.declare(metadata ptr %pydefaults, metadata !4506, metadata !DIExpression()), !dbg !4597
  %66 = load ptr, ptr %m.addr, align 8, !dbg !4598, !tbaa !1899
  %defaults81 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %66, i32 0, i32 8, !dbg !4598
  %67 = load ptr, ptr %defaults81, align 8, !dbg !4598, !tbaa !4445
  store ptr %67, ptr %pydefaults, align 8, !dbg !4597, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #11, !dbg !4599
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4509, metadata !DIExpression()), !dbg !4600
  store i32 0, ptr %i, align 4, !dbg !4601, !tbaa !1984
  br label %for.cond, !dbg !4603

for.cond:                                         ; preds = %for.inc, %if.then80
  %68 = load i32, ptr %i, align 4, !dbg !4604, !tbaa !1984
  %69 = load ptr, ptr %m.addr, align 8, !dbg !4606, !tbaa !1899
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %69, i32 0, i32 9, !dbg !4607
  %70 = load i32, ptr %defaults_pyobjects, align 8, !dbg !4607, !tbaa !4457
  %cmp82 = icmp slt i32 %68, %70, !dbg !4608
  br i1 %cmp82, label %for.body, label %for.end, !dbg !4609

for.body:                                         ; preds = %for.cond
  %71 = load ptr, ptr %pydefaults, align 8, !dbg !4610, !tbaa !1899
  %72 = load i32, ptr %i, align 4, !dbg !4610, !tbaa !1984
  %idxprom = sext i32 %72 to i64, !dbg !4610
  %arrayidx = getelementptr ptr, ptr %71, i64 %idxprom, !dbg !4610
  %73 = load ptr, ptr %arrayidx, align 8, !dbg !4610, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %73), !dbg !4610
  br label %for.inc, !dbg !4610

for.inc:                                          ; preds = %for.body
  %74 = load i32, ptr %i, align 4, !dbg !4611, !tbaa !1984
  %inc = add i32 %74, 1, !dbg !4611
  store i32 %inc, ptr %i, align 4, !dbg !4611, !tbaa !1984
  br label %for.cond, !dbg !4612, !llvm.loop !4613

for.end:                                          ; preds = %for.cond
  %75 = load ptr, ptr %m.addr, align 8, !dbg !4615, !tbaa !1899
  %defaults83 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %75, i32 0, i32 8, !dbg !4616
  %76 = load ptr, ptr %defaults83, align 8, !dbg !4616, !tbaa !4445
  call void @PyObject_Free(ptr noundef %76), !dbg !4617
  %77 = load ptr, ptr %m.addr, align 8, !dbg !4618, !tbaa !1899
  %defaults84 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %77, i32 0, i32 8, !dbg !4619
  store ptr null, ptr %defaults84, align 8, !dbg !4620, !tbaa !4445
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #11, !dbg !4621
  call void @llvm.lifetime.end.p0(i64 8, ptr %pydefaults) #11, !dbg !4621
  br label %if.end85, !dbg !4622

if.end85:                                         ; preds = %for.end, %do.end79
  ret i32 0, !dbg !4623
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyMethod_New(ptr noundef %func, ptr noundef %self, ptr noundef %typ) #0 !dbg !4624 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %self.addr = alloca ptr, align 8
  %typ.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4626, metadata !DIExpression()), !dbg !4629
  store ptr %self, ptr %self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %self.addr, metadata !4627, metadata !DIExpression()), !dbg !4630
  store ptr %typ, ptr %typ.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %typ.addr, metadata !4628, metadata !DIExpression()), !dbg !4631
  %0 = load ptr, ptr %typ.addr, align 8, !dbg !4632, !tbaa !1899
  %1 = load ptr, ptr %self.addr, align 8, !dbg !4633, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !4633
  br i1 %tobool, label %if.end, label %if.then, !dbg !4635

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %func.addr, align 8, !dbg !4636, !tbaa !1899
  call void @Py_INCREF(ptr noundef %2), !dbg !4636
  %3 = load ptr, ptr %func.addr, align 8, !dbg !4636, !tbaa !1899
  store ptr %3, ptr %retval, align 8, !dbg !4637
  br label %return, !dbg !4637

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %func.addr, align 8, !dbg !4638, !tbaa !1899
  %5 = load ptr, ptr %self.addr, align 8, !dbg !4639, !tbaa !1899
  %call = call ptr @PyMethod_New(ptr noundef %4, ptr noundef %5), !dbg !4640
  store ptr %call, ptr %retval, align 8, !dbg !4641
  br label %return, !dbg !4641

return:                                           ; preds = %if.end, %if.then
  %6 = load ptr, ptr %retval, align 8, !dbg !4642
  ret ptr %6, !dbg !4642
}

declare !dbg !4643 void @PyObject_GC_UnTrack(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx__CyFunction_dealloc(ptr noundef %m) #0 !dbg !4645 {
entry:
  %m.addr = alloca ptr, align 8
  store ptr %m, ptr %m.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %m.addr, metadata !4647, metadata !DIExpression()), !dbg !4648
  %0 = load ptr, ptr %m.addr, align 8, !dbg !4649, !tbaa !1899
  %m_weakreflist = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 4, !dbg !4649
  %1 = load ptr, ptr %m_weakreflist, align 8, !dbg !4649, !tbaa !4651
  %cmp = icmp ne ptr %1, null, !dbg !4652
  br i1 %cmp, label %if.then, label %if.end, !dbg !4653

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %m.addr, align 8, !dbg !4654, !tbaa !1899
  call void @PyObject_ClearWeakRefs(ptr noundef %2), !dbg !4655
  br label %if.end, !dbg !4655

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %m.addr, align 8, !dbg !4656, !tbaa !1899
  %call = call i32 @__Pyx_CyFunction_clear(ptr noundef %3), !dbg !4657
  %4 = load ptr, ptr %m.addr, align 8, !dbg !4658, !tbaa !1899
  call void @PyObject_GC_Del(ptr noundef %4), !dbg !4658
  ret void, !dbg !4659
}

declare !dbg !4660 void @PyObject_ClearWeakRefs(ptr noundef) #1

declare !dbg !4661 void @PyObject_GC_Del(ptr noundef) #1

declare !dbg !4662 ptr @PyUnicode_FromFormat(ptr noundef, ...) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyVectorcall_FastCallDict(ptr noundef %func, ptr noundef %vc, ptr noundef %args, i64 noundef %nargs, ptr noundef %kw) #3 !dbg !4665 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %vc.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargs.addr = alloca i64, align 8
  %kw.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4669, metadata !DIExpression()), !dbg !4674
  store ptr %vc, ptr %vc.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %vc.addr, metadata !4670, metadata !DIExpression()), !dbg !4675
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4671, metadata !DIExpression()), !dbg !4676
  store i64 %nargs, ptr %nargs.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %nargs.addr, metadata !4672, metadata !DIExpression()), !dbg !4677
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !4673, metadata !DIExpression()), !dbg !4678
  %0 = load ptr, ptr %kw.addr, align 8, !dbg !4679, !tbaa !1899
  %cmp = icmp eq ptr %0, null, !dbg !4679
  %lnot = xor i1 %cmp, true, !dbg !4679
  %lnot1 = xor i1 %lnot, true, !dbg !4679
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4679
  %conv = sext i32 %lnot.ext to i64, !dbg !4679
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4679
  %tobool = icmp ne i64 %expval, 0, !dbg !4679
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4681

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %kw.addr, align 8, !dbg !4682, !tbaa !1899
  %ma_used = getelementptr inbounds %struct.PyDictObject, ptr %1, i32 0, i32 1, !dbg !4682
  %2 = load i64, ptr %ma_used, align 8, !dbg !4682, !tbaa !4683
  %cmp2 = icmp eq i64 %2, 0, !dbg !4685
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4686

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load ptr, ptr %vc.addr, align 8, !dbg !4687, !tbaa !1899
  %4 = load ptr, ptr %func.addr, align 8, !dbg !4689, !tbaa !1899
  %5 = load ptr, ptr %args.addr, align 8, !dbg !4690, !tbaa !1899
  %6 = load i64, ptr %nargs.addr, align 8, !dbg !4691, !tbaa !2597
  %call = call ptr %3(ptr noundef %4, ptr noundef %5, i64 noundef %6, ptr noundef null), !dbg !4687
  store ptr %call, ptr %retval, align 8, !dbg !4692
  br label %return, !dbg !4692

if.end:                                           ; preds = %lor.lhs.false
  %7 = load ptr, ptr %func.addr, align 8, !dbg !4693, !tbaa !1899
  %8 = load ptr, ptr %vc.addr, align 8, !dbg !4694, !tbaa !1899
  %9 = load ptr, ptr %args.addr, align 8, !dbg !4695, !tbaa !1899
  %10 = load i64, ptr %nargs.addr, align 8, !dbg !4696, !tbaa !2597
  %11 = load ptr, ptr %kw.addr, align 8, !dbg !4697, !tbaa !1899
  %call4 = call ptr @__Pyx_PyVectorcall_FastCallDict_kw(ptr noundef %7, ptr noundef %8, ptr noundef %9, i64 noundef %10, ptr noundef %11), !dbg !4698
  store ptr %call4, ptr %retval, align 8, !dbg !4699
  br label %return, !dbg !4699

return:                                           ; preds = %if.end, %if.then
  %12 = load ptr, ptr %retval, align 8, !dbg !4700
  ret ptr %12, !dbg !4700
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyTuple_GET_SIZE(ptr noundef %op) #3 !dbg !4701 {
entry:
  %op.addr = alloca ptr, align 8
  %tuple = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !4703, metadata !DIExpression()), !dbg !4705
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #11, !dbg !4706
  tail call void @llvm.dbg.declare(metadata ptr %tuple, metadata !4704, metadata !DIExpression()), !dbg !4707
  %0 = load ptr, ptr %op.addr, align 8, !dbg !4708, !tbaa !1899
  store ptr %0, ptr %tuple, align 8, !dbg !4707, !tbaa !1899
  %1 = load ptr, ptr %tuple, align 8, !dbg !4709, !tbaa !1899
  %call = call i64 @Py_SIZE(ptr noundef %1), !dbg !4709
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #11, !dbg !4710
  ret i64 %call, !dbg !4711
}

declare !dbg !4712 ptr @PyTuple_GetSlice(ptr noundef, i64 noundef, i64 noundef) #1

declare !dbg !4715 ptr @PyTuple_GetItem(ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_CallMethod(ptr noundef %func, ptr noundef %self, ptr noundef %arg, ptr noundef %kw) #0 !dbg !4716 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %self.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %f = alloca ptr, align 8
  %meth = alloca ptr, align 8
  %flags = alloca i32, align 4
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %result = alloca ptr, align 8
  %arg0 = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4720, metadata !DIExpression()), !dbg !4735
  store ptr %self, ptr %self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %self.addr, metadata !4721, metadata !DIExpression()), !dbg !4736
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4722, metadata !DIExpression()), !dbg !4737
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !4723, metadata !DIExpression()), !dbg !4738
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #11, !dbg !4739
  tail call void @llvm.dbg.declare(metadata ptr %f, metadata !4724, metadata !DIExpression()), !dbg !4740
  %0 = load ptr, ptr %func.addr, align 8, !dbg !4741, !tbaa !1899
  store ptr %0, ptr %f, align 8, !dbg !4740, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %meth) #11, !dbg !4742
  tail call void @llvm.dbg.declare(metadata ptr %meth, metadata !4725, metadata !DIExpression()), !dbg !4743
  %1 = load ptr, ptr %f, align 8, !dbg !4744, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1, !dbg !4745
  %2 = load ptr, ptr %m_ml, align 8, !dbg !4745, !tbaa !4746
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %2, i32 0, i32 1, !dbg !4747
  %3 = load ptr, ptr %ml_meth, align 8, !dbg !4747, !tbaa !4748
  store ptr %3, ptr %meth, align 8, !dbg !4743, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !4750
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !4726, metadata !DIExpression()), !dbg !4751
  %4 = load ptr, ptr %f, align 8, !dbg !4752, !tbaa !1899
  %m_ml1 = getelementptr inbounds %struct.PyCFunctionObject, ptr %4, i32 0, i32 1, !dbg !4753
  %5 = load ptr, ptr %m_ml1, align 8, !dbg !4753, !tbaa !4746
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %5, i32 0, i32 2, !dbg !4754
  %6 = load i32, ptr %ml_flags, align 8, !dbg !4754, !tbaa !4755
  store i32 %6, ptr %flags, align 4, !dbg !4751, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #11, !dbg !4756
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !4727, metadata !DIExpression()), !dbg !4757
  %7 = load i32, ptr %flags, align 4, !dbg !4758, !tbaa !1984
  %and = and i32 %7, 15, !dbg !4759
  switch i32 %and, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb5
    i32 4, label %sw.bb7
    i32 8, label %sw.bb39
  ], !dbg !4760

sw.bb:                                            ; preds = %entry
  %8 = load ptr, ptr %kw.addr, align 8, !dbg !4761, !tbaa !1899
  %cmp = icmp eq ptr %8, null, !dbg !4761
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4761

lor.rhs:                                          ; preds = %sw.bb
  %9 = load ptr, ptr %kw.addr, align 8, !dbg !4761, !tbaa !1899
  %call = call i64 @PyDict_Size(ptr noundef %9), !dbg !4761
  %cmp2 = icmp eq i64 %call, 0, !dbg !4761
  br label %lor.end, !dbg !4761

lor.end:                                          ; preds = %lor.rhs, %sw.bb
  %10 = phi i1 [ true, %sw.bb ], [ %cmp2, %lor.rhs ]
  %lnot = xor i1 %10, true, !dbg !4761
  %lnot3 = xor i1 %lnot, true, !dbg !4761
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !4761
  %conv = sext i32 %lnot.ext to i64, !dbg !4761
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4761
  %tobool = icmp ne i64 %expval, 0, !dbg !4761
  br i1 %tobool, label %if.then, label %if.end, !dbg !4763

if.then:                                          ; preds = %lor.end
  %11 = load ptr, ptr %meth, align 8, !dbg !4764, !tbaa !1899
  %12 = load ptr, ptr %self.addr, align 8, !dbg !4765, !tbaa !1899
  %13 = load ptr, ptr %arg.addr, align 8, !dbg !4766, !tbaa !1899
  %call4 = call ptr %11(ptr noundef %12, ptr noundef %13), !dbg !4767
  store ptr %call4, ptr %retval, align 8, !dbg !4768
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4768

if.end:                                           ; preds = %lor.end
  br label %sw.epilog, !dbg !4769

sw.bb5:                                           ; preds = %entry
  %14 = load ptr, ptr %meth, align 8, !dbg !4770, !tbaa !1899
  %15 = load ptr, ptr %self.addr, align 8, !dbg !4771, !tbaa !1899
  %16 = load ptr, ptr %arg.addr, align 8, !dbg !4772, !tbaa !1899
  %17 = load ptr, ptr %kw.addr, align 8, !dbg !4773, !tbaa !1899
  %call6 = call ptr %14(ptr noundef %15, ptr noundef %16, ptr noundef %17), !dbg !4774
  store ptr %call6, ptr %retval, align 8, !dbg !4775
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4775

sw.bb7:                                           ; preds = %entry
  %18 = load ptr, ptr %kw.addr, align 8, !dbg !4776, !tbaa !1899
  %cmp8 = icmp eq ptr %18, null, !dbg !4776
  br i1 %cmp8, label %lor.end14, label %lor.rhs10, !dbg !4776

lor.rhs10:                                        ; preds = %sw.bb7
  %19 = load ptr, ptr %kw.addr, align 8, !dbg !4776, !tbaa !1899
  %call11 = call i64 @PyDict_Size(ptr noundef %19), !dbg !4776
  %cmp12 = icmp eq i64 %call11, 0, !dbg !4776
  br label %lor.end14, !dbg !4776

lor.end14:                                        ; preds = %lor.rhs10, %sw.bb7
  %20 = phi i1 [ true, %sw.bb7 ], [ %cmp12, %lor.rhs10 ]
  %lnot15 = xor i1 %20, true, !dbg !4776
  %lnot17 = xor i1 %lnot15, true, !dbg !4776
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !4776
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !4776
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 1), !dbg !4776
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !4776
  br i1 %tobool21, label %if.then22, label %if.end38, !dbg !4778

if.then22:                                        ; preds = %lor.end14
  %21 = load ptr, ptr %arg.addr, align 8, !dbg !4779, !tbaa !1899
  %call23 = call i64 @PyTuple_GET_SIZE(ptr noundef %21), !dbg !4779
  store i64 %call23, ptr %size, align 8, !dbg !4781, !tbaa !2597
  %22 = load i64, ptr %size, align 8, !dbg !4782, !tbaa !2597
  %cmp24 = icmp eq i64 %22, 0, !dbg !4782
  %lnot26 = xor i1 %cmp24, true, !dbg !4782
  %lnot28 = xor i1 %lnot26, true, !dbg !4782
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !4782
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !4782
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 1), !dbg !4782
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !4782
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !4784

if.then33:                                        ; preds = %if.then22
  %23 = load ptr, ptr %meth, align 8, !dbg !4785, !tbaa !1899
  %24 = load ptr, ptr %self.addr, align 8, !dbg !4786, !tbaa !1899
  %call34 = call ptr %23(ptr noundef %24, ptr noundef null), !dbg !4787
  store ptr %call34, ptr %retval, align 8, !dbg !4788
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4788

if.end35:                                         ; preds = %if.then22
  %25 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4789, !tbaa !1899
  %26 = load ptr, ptr %f, align 8, !dbg !4790, !tbaa !1899
  %m_ml36 = getelementptr inbounds %struct.PyCFunctionObject, ptr %26, i32 0, i32 1, !dbg !4791
  %27 = load ptr, ptr %m_ml36, align 8, !dbg !4791, !tbaa !4746
  %ml_name = getelementptr inbounds %struct.PyMethodDef, ptr %27, i32 0, i32 0, !dbg !4792
  %28 = load ptr, ptr %ml_name, align 8, !dbg !4792, !tbaa !4793
  %29 = load i64, ptr %size, align 8, !dbg !4794, !tbaa !2597
  %call37 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %25, ptr noundef @.str.33, ptr noundef %28, i64 noundef %29), !dbg !4795
  store ptr null, ptr %retval, align 8, !dbg !4796
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4796

if.end38:                                         ; preds = %lor.end14
  br label %sw.epilog, !dbg !4797

sw.bb39:                                          ; preds = %entry
  %30 = load ptr, ptr %kw.addr, align 8, !dbg !4798, !tbaa !1899
  %cmp40 = icmp eq ptr %30, null, !dbg !4798
  br i1 %cmp40, label %lor.end46, label %lor.rhs42, !dbg !4798

lor.rhs42:                                        ; preds = %sw.bb39
  %31 = load ptr, ptr %kw.addr, align 8, !dbg !4798, !tbaa !1899
  %call43 = call i64 @PyDict_Size(ptr noundef %31), !dbg !4798
  %cmp44 = icmp eq i64 %call43, 0, !dbg !4798
  br label %lor.end46, !dbg !4798

lor.end46:                                        ; preds = %lor.rhs42, %sw.bb39
  %32 = phi i1 [ true, %sw.bb39 ], [ %cmp44, %lor.rhs42 ]
  %lnot47 = xor i1 %32, true, !dbg !4798
  %lnot49 = xor i1 %lnot47, true, !dbg !4798
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !4798
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !4798
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1), !dbg !4798
  %tobool53 = icmp ne i64 %expval52, 0, !dbg !4798
  br i1 %tobool53, label %if.then54, label %if.end71, !dbg !4799

if.then54:                                        ; preds = %lor.end46
  %33 = load ptr, ptr %arg.addr, align 8, !dbg !4800, !tbaa !1899
  %call55 = call i64 @PyTuple_GET_SIZE(ptr noundef %33), !dbg !4800
  store i64 %call55, ptr %size, align 8, !dbg !4801, !tbaa !2597
  %34 = load i64, ptr %size, align 8, !dbg !4802, !tbaa !2597
  %cmp56 = icmp eq i64 %34, 1, !dbg !4802
  %lnot58 = xor i1 %cmp56, true, !dbg !4802
  %lnot60 = xor i1 %lnot58, true, !dbg !4802
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !4802
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !4802
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 1), !dbg !4802
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !4802
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !4803

if.then65:                                        ; preds = %if.then54
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !4804
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4728, metadata !DIExpression()), !dbg !4805
  call void @llvm.lifetime.start.p0(i64 8, ptr %arg0) #11, !dbg !4804
  tail call void @llvm.dbg.declare(metadata ptr %arg0, metadata !4734, metadata !DIExpression()), !dbg !4806
  %35 = load ptr, ptr %arg.addr, align 8, !dbg !4807, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %35, i32 0, i32 1, !dbg !4807
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !4807
  %36 = load ptr, ptr %arrayidx, align 8, !dbg !4807, !tbaa !1899
  store ptr %36, ptr %arg0, align 8, !dbg !4808, !tbaa !1899
  %37 = load ptr, ptr %meth, align 8, !dbg !4809, !tbaa !1899
  %38 = load ptr, ptr %self.addr, align 8, !dbg !4810, !tbaa !1899
  %39 = load ptr, ptr %arg0, align 8, !dbg !4811, !tbaa !1899
  %call66 = call ptr %37(ptr noundef %38, ptr noundef %39), !dbg !4812
  store ptr %call66, ptr %result, align 8, !dbg !4813, !tbaa !1899
  %40 = load ptr, ptr %result, align 8, !dbg !4814, !tbaa !1899
  store ptr %40, ptr %retval, align 8, !dbg !4815
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %arg0) #11, !dbg !4816
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !4816
  br label %cleanup

if.end67:                                         ; preds = %if.then54
  %41 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4817, !tbaa !1899
  %42 = load ptr, ptr %f, align 8, !dbg !4818, !tbaa !1899
  %m_ml68 = getelementptr inbounds %struct.PyCFunctionObject, ptr %42, i32 0, i32 1, !dbg !4819
  %43 = load ptr, ptr %m_ml68, align 8, !dbg !4819, !tbaa !4746
  %ml_name69 = getelementptr inbounds %struct.PyMethodDef, ptr %43, i32 0, i32 0, !dbg !4820
  %44 = load ptr, ptr %ml_name69, align 8, !dbg !4820, !tbaa !4793
  %45 = load i64, ptr %size, align 8, !dbg !4821, !tbaa !2597
  %call70 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %41, ptr noundef @.str.34, ptr noundef %44, i64 noundef %45), !dbg !4822
  store ptr null, ptr %retval, align 8, !dbg !4823
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4823

if.end71:                                         ; preds = %lor.end46
  br label %sw.epilog, !dbg !4824

sw.default:                                       ; preds = %entry
  %46 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !4825, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %46, ptr noundef @.str.35), !dbg !4826
  store ptr null, ptr %retval, align 8, !dbg !4827
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4827

sw.epilog:                                        ; preds = %if.end71, %if.end38, %if.end
  %47 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4828, !tbaa !1899
  %48 = load ptr, ptr %f, align 8, !dbg !4829, !tbaa !1899
  %m_ml72 = getelementptr inbounds %struct.PyCFunctionObject, ptr %48, i32 0, i32 1, !dbg !4830
  %49 = load ptr, ptr %m_ml72, align 8, !dbg !4830, !tbaa !4746
  %ml_name73 = getelementptr inbounds %struct.PyMethodDef, ptr %49, i32 0, i32 0, !dbg !4831
  %50 = load ptr, ptr %ml_name73, align 8, !dbg !4831, !tbaa !4793
  %call74 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %47, ptr noundef @.str.36, ptr noundef %50), !dbg !4832
  store ptr null, ptr %retval, align 8, !dbg !4833
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4833

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.end67, %if.then65, %if.end35, %if.then33, %sw.bb5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #11, !dbg !4834
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !4834
  call void @llvm.lifetime.end.p0(i64 8, ptr %meth) #11, !dbg !4834
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #11, !dbg !4834
  %51 = load ptr, ptr %retval, align 8, !dbg !4834
  ret ptr %51, !dbg !4834
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_CyFunction_Call(ptr noundef %func, ptr noundef %arg, ptr noundef %kw) #3 !dbg !4835 {
entry:
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4837, metadata !DIExpression()), !dbg !4842
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4838, metadata !DIExpression()), !dbg !4843
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !4839, metadata !DIExpression()), !dbg !4844
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #11, !dbg !4845
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !4840, metadata !DIExpression()), !dbg !4846
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !4845
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4841, metadata !DIExpression()), !dbg !4847
  %0 = load ptr, ptr %func.addr, align 8, !dbg !4848, !tbaa !1899
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 2, !dbg !4849
  %1 = load ptr, ptr %m_self, align 8, !dbg !4849, !tbaa !4850
  store ptr %1, ptr %self, align 8, !dbg !4851, !tbaa !1899
  %2 = load ptr, ptr %func.addr, align 8, !dbg !4852, !tbaa !1899
  %3 = load ptr, ptr %self, align 8, !dbg !4853, !tbaa !1899
  %4 = load ptr, ptr %arg.addr, align 8, !dbg !4854, !tbaa !1899
  %5 = load ptr, ptr %kw.addr, align 8, !dbg !4855, !tbaa !1899
  %call = call ptr @__Pyx_CyFunction_CallMethod(ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5), !dbg !4856
  store ptr %call, ptr %result, align 8, !dbg !4857, !tbaa !1899
  %6 = load ptr, ptr %result, align 8, !dbg !4858, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !4859
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #11, !dbg !4859
  ret ptr %6, !dbg !4860
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyVectorcall_FastCallDict_kw(ptr noundef %func, ptr noundef %vc, ptr noundef %args, i64 noundef %nargs, ptr noundef %kw) #0 !dbg !4861 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %vc.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargs.addr = alloca i64, align 8
  %kw.addr = alloca ptr, align 8
  %res = alloca ptr, align 8
  %kwnames = alloca ptr, align 8
  %newargs = alloca ptr, align 8
  %kwvalues = alloca ptr, align 8
  %i = alloca i64, align 8
  %pos = alloca i64, align 8
  %j = alloca i64, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %keys_are_strings = alloca i64, align 8
  %nkw = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4863, metadata !DIExpression()), !dbg !4880
  store ptr %vc, ptr %vc.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %vc.addr, metadata !4864, metadata !DIExpression()), !dbg !4881
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4865, metadata !DIExpression()), !dbg !4882
  store i64 %nargs, ptr %nargs.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %nargs.addr, metadata !4866, metadata !DIExpression()), !dbg !4883
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !4867, metadata !DIExpression()), !dbg !4884
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #11, !dbg !4885
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !4868, metadata !DIExpression()), !dbg !4886
  store ptr null, ptr %res, align 8, !dbg !4886, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwnames) #11, !dbg !4887
  tail call void @llvm.dbg.declare(metadata ptr %kwnames, metadata !4869, metadata !DIExpression()), !dbg !4888
  call void @llvm.lifetime.start.p0(i64 8, ptr %newargs) #11, !dbg !4889
  tail call void @llvm.dbg.declare(metadata ptr %newargs, metadata !4870, metadata !DIExpression()), !dbg !4890
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwvalues) #11, !dbg !4891
  tail call void @llvm.dbg.declare(metadata ptr %kwvalues, metadata !4871, metadata !DIExpression()), !dbg !4892
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !4893
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4872, metadata !DIExpression()), !dbg !4894
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #11, !dbg !4893
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !4873, metadata !DIExpression()), !dbg !4895
  call void @llvm.lifetime.start.p0(i64 8, ptr %j) #11, !dbg !4896
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !4874, metadata !DIExpression()), !dbg !4897
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #11, !dbg !4898
  tail call void @llvm.dbg.declare(metadata ptr %key, metadata !4875, metadata !DIExpression()), !dbg !4899
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !4898
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !4876, metadata !DIExpression()), !dbg !4900
  call void @llvm.lifetime.start.p0(i64 8, ptr %keys_are_strings) #11, !dbg !4901
  tail call void @llvm.dbg.declare(metadata ptr %keys_are_strings, metadata !4877, metadata !DIExpression()), !dbg !4902
  call void @llvm.lifetime.start.p0(i64 8, ptr %nkw) #11, !dbg !4903
  tail call void @llvm.dbg.declare(metadata ptr %nkw, metadata !4878, metadata !DIExpression()), !dbg !4904
  %0 = load ptr, ptr %kw.addr, align 8, !dbg !4905, !tbaa !1899
  %ma_used = getelementptr inbounds %struct.PyDictObject, ptr %0, i32 0, i32 1, !dbg !4905
  %1 = load i64, ptr %ma_used, align 8, !dbg !4905, !tbaa !4683
  store i64 %1, ptr %nkw, align 8, !dbg !4904, !tbaa !2597
  %2 = load i64, ptr %nargs.addr, align 8, !dbg !4906, !tbaa !2597
  %3 = load i64, ptr %nkw, align 8, !dbg !4907, !tbaa !2597
  %add = add i64 %2, %3, !dbg !4908
  %mul = mul i64 %add, 8, !dbg !4909
  %call = call ptr @PyMem_Malloc(i64 noundef %mul), !dbg !4910
  store ptr %call, ptr %newargs, align 8, !dbg !4911, !tbaa !1899
  %4 = load ptr, ptr %newargs, align 8, !dbg !4912, !tbaa !1899
  %cmp = icmp eq ptr %4, null, !dbg !4912
  %lnot = xor i1 %cmp, true, !dbg !4912
  %lnot1 = xor i1 %lnot, true, !dbg !4912
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4912
  %conv = sext i32 %lnot.ext to i64, !dbg !4912
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4912
  %tobool = icmp ne i64 %expval, 0, !dbg !4912
  br i1 %tobool, label %if.then, label %if.end, !dbg !4914

if.then:                                          ; preds = %entry
  %call2 = call ptr @PyErr_NoMemory(), !dbg !4915
  store ptr null, ptr %retval, align 8, !dbg !4917
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup44, !dbg !4917

if.end:                                           ; preds = %entry
  store i64 0, ptr %j, align 8, !dbg !4918, !tbaa !2597
  br label %for.cond, !dbg !4920

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i64, ptr %j, align 8, !dbg !4921, !tbaa !2597
  %6 = load i64, ptr %nargs.addr, align 8, !dbg !4923, !tbaa !2597
  %cmp3 = icmp ult i64 %5, %6, !dbg !4924
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4925

for.body:                                         ; preds = %for.cond
  %7 = load ptr, ptr %args.addr, align 8, !dbg !4926, !tbaa !1899
  %8 = load i64, ptr %j, align 8, !dbg !4927, !tbaa !2597
  %arrayidx = getelementptr ptr, ptr %7, i64 %8, !dbg !4926
  %9 = load ptr, ptr %arrayidx, align 8, !dbg !4926, !tbaa !1899
  %10 = load ptr, ptr %newargs, align 8, !dbg !4928, !tbaa !1899
  %11 = load i64, ptr %j, align 8, !dbg !4929, !tbaa !2597
  %arrayidx5 = getelementptr ptr, ptr %10, i64 %11, !dbg !4928
  store ptr %9, ptr %arrayidx5, align 8, !dbg !4930, !tbaa !1899
  br label %for.inc, !dbg !4928

for.inc:                                          ; preds = %for.body
  %12 = load i64, ptr %j, align 8, !dbg !4931, !tbaa !2597
  %inc = add i64 %12, 1, !dbg !4931
  store i64 %inc, ptr %j, align 8, !dbg !4931, !tbaa !2597
  br label %for.cond, !dbg !4932, !llvm.loop !4933

for.end:                                          ; preds = %for.cond
  %13 = load i64, ptr %nkw, align 8, !dbg !4935, !tbaa !2597
  %call6 = call ptr @PyTuple_New(i64 noundef %13), !dbg !4936
  store ptr %call6, ptr %kwnames, align 8, !dbg !4937, !tbaa !1899
  %14 = load ptr, ptr %kwnames, align 8, !dbg !4938, !tbaa !1899
  %cmp7 = icmp eq ptr %14, null, !dbg !4938
  %lnot9 = xor i1 %cmp7, true, !dbg !4938
  %lnot11 = xor i1 %lnot9, true, !dbg !4938
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !4938
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !4938
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0), !dbg !4938
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !4938
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !4940

if.then16:                                        ; preds = %for.end
  %15 = load ptr, ptr %newargs, align 8, !dbg !4941, !tbaa !1899
  call void @PyMem_Free(ptr noundef %15), !dbg !4943
  store ptr null, ptr %retval, align 8, !dbg !4944
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup44, !dbg !4944

if.end17:                                         ; preds = %for.end
  %16 = load ptr, ptr %newargs, align 8, !dbg !4945, !tbaa !1899
  %17 = load i64, ptr %nargs.addr, align 8, !dbg !4946, !tbaa !2597
  %add.ptr = getelementptr ptr, ptr %16, i64 %17, !dbg !4947
  store ptr %add.ptr, ptr %kwvalues, align 8, !dbg !4948, !tbaa !1899
  store i64 0, ptr %i, align 8, !dbg !4949, !tbaa !2597
  store i64 0, ptr %pos, align 8, !dbg !4950, !tbaa !2597
  store i64 268435456, ptr %keys_are_strings, align 8, !dbg !4951, !tbaa !2597
  br label %while.cond, !dbg !4952

while.cond:                                       ; preds = %while.body, %if.end17
  %18 = load ptr, ptr %kw.addr, align 8, !dbg !4953, !tbaa !1899
  %call18 = call i32 @PyDict_Next(ptr noundef %18, ptr noundef %pos, ptr noundef %key, ptr noundef %value), !dbg !4954
  %tobool19 = icmp ne i32 %call18, 0, !dbg !4952
  br i1 %tobool19, label %while.body, label %while.end, !dbg !4952

while.body:                                       ; preds = %while.cond
  %19 = load ptr, ptr %key, align 8, !dbg !4955, !tbaa !1899
  %call20 = call ptr @Py_TYPE(ptr noundef %19), !dbg !4955
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %call20, i32 0, i32 19, !dbg !4957
  %20 = load i64, ptr %tp_flags, align 8, !dbg !4957, !tbaa !4160
  %21 = load i64, ptr %keys_are_strings, align 8, !dbg !4958, !tbaa !2597
  %and = and i64 %21, %20, !dbg !4958
  store i64 %and, ptr %keys_are_strings, align 8, !dbg !4958, !tbaa !2597
  %22 = load ptr, ptr %key, align 8, !dbg !4959, !tbaa !1899
  call void @Py_INCREF(ptr noundef %22), !dbg !4959
  %23 = load ptr, ptr %value, align 8, !dbg !4960, !tbaa !1899
  call void @Py_INCREF(ptr noundef %23), !dbg !4960
  %24 = load ptr, ptr %kwnames, align 8, !dbg !4961, !tbaa !1899
  %25 = load i64, ptr %i, align 8, !dbg !4961, !tbaa !2597
  %26 = load ptr, ptr %key, align 8, !dbg !4961, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %24, i64 noundef %25, ptr noundef %26), !dbg !4961
  %27 = load ptr, ptr %value, align 8, !dbg !4962, !tbaa !1899
  %28 = load ptr, ptr %kwvalues, align 8, !dbg !4963, !tbaa !1899
  %29 = load i64, ptr %i, align 8, !dbg !4964, !tbaa !2597
  %arrayidx21 = getelementptr ptr, ptr %28, i64 %29, !dbg !4963
  store ptr %27, ptr %arrayidx21, align 8, !dbg !4965, !tbaa !1899
  %30 = load i64, ptr %i, align 8, !dbg !4966, !tbaa !2597
  %inc22 = add i64 %30, 1, !dbg !4966
  store i64 %inc22, ptr %i, align 8, !dbg !4966, !tbaa !2597
  br label %while.cond, !dbg !4952, !llvm.loop !4967

while.end:                                        ; preds = %while.cond
  %31 = load i64, ptr %keys_are_strings, align 8, !dbg !4969, !tbaa !2597
  %tobool23 = icmp ne i64 %31, 0, !dbg !4969
  %lnot24 = xor i1 %tobool23, true, !dbg !4969
  %lnot26 = xor i1 %lnot24, true, !dbg !4969
  %lnot28 = xor i1 %lnot26, true, !dbg !4969
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !4969
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !4969
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !4969
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !4969
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !4971

if.then33:                                        ; preds = %while.end
  %32 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4972, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %32, ptr noundef @.str.32), !dbg !4974
  br label %cleanup, !dbg !4975

if.end34:                                         ; preds = %while.end
  %33 = load ptr, ptr %vc.addr, align 8, !dbg !4976, !tbaa !1899
  %34 = load ptr, ptr %func.addr, align 8, !dbg !4977, !tbaa !1899
  %35 = load ptr, ptr %newargs, align 8, !dbg !4978, !tbaa !1899
  %36 = load i64, ptr %nargs.addr, align 8, !dbg !4979, !tbaa !2597
  %37 = load ptr, ptr %kwnames, align 8, !dbg !4980, !tbaa !1899
  %call35 = call ptr %33(ptr noundef %34, ptr noundef %35, i64 noundef %36, ptr noundef %37), !dbg !4976
  store ptr %call35, ptr %res, align 8, !dbg !4981, !tbaa !1899
  br label %cleanup, !dbg !4982

cleanup:                                          ; preds = %if.end34, %if.then33
  tail call void @llvm.dbg.label(metadata !4879), !dbg !4983
  %38 = load ptr, ptr %kwnames, align 8, !dbg !4984, !tbaa !1899
  call void @Py_DECREF(ptr noundef %38), !dbg !4984
  store i64 0, ptr %i, align 8, !dbg !4985, !tbaa !2597
  br label %for.cond36, !dbg !4987

for.cond36:                                       ; preds = %for.inc41, %cleanup
  %39 = load i64, ptr %i, align 8, !dbg !4988, !tbaa !2597
  %40 = load i64, ptr %nkw, align 8, !dbg !4990, !tbaa !2597
  %cmp37 = icmp slt i64 %39, %40, !dbg !4991
  br i1 %cmp37, label %for.body39, label %for.end43, !dbg !4992

for.body39:                                       ; preds = %for.cond36
  %41 = load ptr, ptr %kwvalues, align 8, !dbg !4993, !tbaa !1899
  %42 = load i64, ptr %i, align 8, !dbg !4993, !tbaa !2597
  %arrayidx40 = getelementptr ptr, ptr %41, i64 %42, !dbg !4993
  %43 = load ptr, ptr %arrayidx40, align 8, !dbg !4993, !tbaa !1899
  call void @Py_DECREF(ptr noundef %43), !dbg !4993
  br label %for.inc41, !dbg !4993

for.inc41:                                        ; preds = %for.body39
  %44 = load i64, ptr %i, align 8, !dbg !4994, !tbaa !2597
  %inc42 = add i64 %44, 1, !dbg !4994
  store i64 %inc42, ptr %i, align 8, !dbg !4994, !tbaa !2597
  br label %for.cond36, !dbg !4995, !llvm.loop !4996

for.end43:                                        ; preds = %for.cond36
  %45 = load ptr, ptr %newargs, align 8, !dbg !4998, !tbaa !1899
  call void @PyMem_Free(ptr noundef %45), !dbg !4999
  %46 = load ptr, ptr %res, align 8, !dbg !5000, !tbaa !1899
  store ptr %46, ptr %retval, align 8, !dbg !5001
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup44, !dbg !5001

cleanup44:                                        ; preds = %for.end43, %if.then16, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %nkw) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %keys_are_strings) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %j) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwvalues) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %newargs) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwnames) #11, !dbg !5002
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #11, !dbg !5002
  %47 = load ptr, ptr %retval, align 8, !dbg !5002
  ret ptr %47, !dbg !5002
}

declare !dbg !5003 ptr @PyMem_Malloc(i64 noundef) #1

declare !dbg !5007 ptr @PyErr_NoMemory() #1

declare !dbg !5008 void @PyMem_Free(ptr noundef) #1

declare !dbg !5009 i32 @PyDict_Next(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @PyTuple_SET_ITEM(ptr noundef %op, i64 noundef %index, ptr noundef %value) #3 !dbg !5012 {
entry:
  %op.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca ptr, align 8
  %tuple = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5014, metadata !DIExpression()), !dbg !5018
  store i64 %index, ptr %index.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !5015, metadata !DIExpression()), !dbg !5019
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5016, metadata !DIExpression()), !dbg !5020
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #11, !dbg !5021
  tail call void @llvm.dbg.declare(metadata ptr %tuple, metadata !5017, metadata !DIExpression()), !dbg !5022
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5023, !tbaa !1899
  store ptr %0, ptr %tuple, align 8, !dbg !5022, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5024, !tbaa !1899
  %2 = load ptr, ptr %tuple, align 8, !dbg !5025, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %2, i32 0, i32 1, !dbg !5026
  %3 = load i64, ptr %index.addr, align 8, !dbg !5027, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %3, !dbg !5025
  store ptr %1, ptr %arrayidx, align 8, !dbg !5028, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #11, !dbg !5029
  ret void, !dbg !5029
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @Py_SIZE(ptr noundef %ob) #3 !dbg !5030 {
entry:
  %ob.addr = alloca ptr, align 8
  %var_ob = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !5032, metadata !DIExpression()), !dbg !5034
  call void @llvm.lifetime.start.p0(i64 8, ptr %var_ob) #11, !dbg !5035
  tail call void @llvm.dbg.declare(metadata ptr %var_ob, metadata !5033, metadata !DIExpression()), !dbg !5036
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !5037, !tbaa !1899
  store ptr %0, ptr %var_ob, align 8, !dbg !5036, !tbaa !1899
  %1 = load ptr, ptr %var_ob, align 8, !dbg !5038, !tbaa !1899
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %1, i32 0, i32 1, !dbg !5039
  %2 = load i64, ptr %ob_size, align 8, !dbg !5039, !tbaa !5040
  call void @llvm.lifetime.end.p0(i64 8, ptr %var_ob) #11, !dbg !5041
  ret i64 %2, !dbg !5042
}

declare !dbg !5043 i64 @PyDict_Size(ptr noundef) #1

declare !dbg !5044 void @PyObject_Free(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_reduce(ptr noundef %m, ptr noundef %args) #0 !dbg !5045 {
entry:
  %m.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  store ptr %m, ptr %m.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %m.addr, metadata !5049, metadata !DIExpression()), !dbg !5051
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !5050, metadata !DIExpression()), !dbg !5052
  %0 = load ptr, ptr %args.addr, align 8, !dbg !5053, !tbaa !1899
  %1 = load ptr, ptr %m.addr, align 8, !dbg !5054, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 3, !dbg !5054
  %2 = load ptr, ptr %func_qualname, align 8, !dbg !5054, !tbaa !4197
  call void @Py_INCREF(ptr noundef %2), !dbg !5054
  %3 = load ptr, ptr %m.addr, align 8, !dbg !5055, !tbaa !1899
  %func_qualname1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 3, !dbg !5056
  %4 = load ptr, ptr %func_qualname1, align 8, !dbg !5056, !tbaa !4197
  ret ptr %4, !dbg !5057
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_doc(ptr noundef %op, ptr noundef %closure) #0 !dbg !5058 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %closure.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5062, metadata !DIExpression()), !dbg !5064
  store ptr %closure, ptr %closure.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %closure.addr, metadata !5063, metadata !DIExpression()), !dbg !5065
  %0 = load ptr, ptr %closure.addr, align 8, !dbg !5066, !tbaa !1899
  %1 = load ptr, ptr %op.addr, align 8, !dbg !5067, !tbaa !1899
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 4, !dbg !5067
  %2 = load ptr, ptr %func_doc, align 8, !dbg !5067, !tbaa !4397
  %cmp = icmp eq ptr %2, null, !dbg !5067
  %lnot = xor i1 %cmp, true, !dbg !5067
  %lnot1 = xor i1 %lnot, true, !dbg !5067
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5067
  %conv = sext i32 %lnot.ext to i64, !dbg !5067
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5067
  %tobool = icmp ne i64 %expval, 0, !dbg !5067
  br i1 %tobool, label %if.then, label %if.end19, !dbg !5069

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %op.addr, align 8, !dbg !5070, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %3, i32 0, i32 1, !dbg !5073
  %4 = load ptr, ptr %m_ml, align 8, !dbg !5073, !tbaa !4746
  %ml_doc = getelementptr inbounds %struct.PyMethodDef, ptr %4, i32 0, i32 3, !dbg !5074
  %5 = load ptr, ptr %ml_doc, align 8, !dbg !5074, !tbaa !5075
  %tobool2 = icmp ne ptr %5, null, !dbg !5076
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5077

if.then3:                                         ; preds = %if.then
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5078, !tbaa !1899
  %m_ml4 = getelementptr inbounds %struct.PyCFunctionObject, ptr %6, i32 0, i32 1, !dbg !5080
  %7 = load ptr, ptr %m_ml4, align 8, !dbg !5080, !tbaa !4746
  %ml_doc5 = getelementptr inbounds %struct.PyMethodDef, ptr %7, i32 0, i32 3, !dbg !5081
  %8 = load ptr, ptr %ml_doc5, align 8, !dbg !5081, !tbaa !5075
  %call = call ptr @PyUnicode_FromString(ptr noundef %8), !dbg !5082
  %9 = load ptr, ptr %op.addr, align 8, !dbg !5083, !tbaa !1899
  %func_doc6 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 4, !dbg !5084
  store ptr %call, ptr %func_doc6, align 8, !dbg !5085, !tbaa !4397
  %10 = load ptr, ptr %op.addr, align 8, !dbg !5086, !tbaa !1899
  %func_doc7 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %10, i32 0, i32 4, !dbg !5086
  %11 = load ptr, ptr %func_doc7, align 8, !dbg !5086, !tbaa !4397
  %cmp8 = icmp eq ptr %11, null, !dbg !5086
  %lnot10 = xor i1 %cmp8, true, !dbg !5086
  %lnot12 = xor i1 %lnot10, true, !dbg !5086
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !5086
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !5086
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !5086
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !5086
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !5088

if.then17:                                        ; preds = %if.then3
  store ptr null, ptr %retval, align 8, !dbg !5089
  br label %return, !dbg !5089

if.end:                                           ; preds = %if.then3
  br label %if.end18, !dbg !5090

if.else:                                          ; preds = %if.then
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !5091
  store ptr @_Py_NoneStruct, ptr %retval, align 8, !dbg !5093
  br label %return, !dbg !5093

if.end18:                                         ; preds = %if.end
  br label %if.end19, !dbg !5094

if.end19:                                         ; preds = %if.end18, %entry
  %12 = load ptr, ptr %op.addr, align 8, !dbg !5095, !tbaa !1899
  %func_doc20 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %12, i32 0, i32 4, !dbg !5095
  %13 = load ptr, ptr %func_doc20, align 8, !dbg !5095, !tbaa !4397
  call void @Py_INCREF(ptr noundef %13), !dbg !5095
  %14 = load ptr, ptr %op.addr, align 8, !dbg !5096, !tbaa !1899
  %func_doc21 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %14, i32 0, i32 4, !dbg !5097
  %15 = load ptr, ptr %func_doc21, align 8, !dbg !5097, !tbaa !4397
  store ptr %15, ptr %retval, align 8, !dbg !5098
  br label %return, !dbg !5098

return:                                           ; preds = %if.end19, %if.else, %if.then17
  %16 = load ptr, ptr %retval, align 8, !dbg !5099
  ret ptr %16, !dbg !5099
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_doc(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 !dbg !5100 {
entry:
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5104, metadata !DIExpression()), !dbg !5109
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5105, metadata !DIExpression()), !dbg !5110
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5106, metadata !DIExpression()), !dbg !5111
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5112, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5113, !tbaa !1899
  %cmp = icmp eq ptr %1, null, !dbg !5115
  br i1 %cmp, label %if.then, label %if.end, !dbg !5116

if.then:                                          ; preds = %entry
  store ptr @_Py_NoneStruct, ptr %value.addr, align 8, !dbg !5117, !tbaa !1899
  br label %if.end, !dbg !5119

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr %value.addr, align 8, !dbg !5120, !tbaa !1899
  call void @Py_INCREF(ptr noundef %2), !dbg !5120
  br label %do.body, !dbg !5121

do.body:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !5122
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5107, metadata !DIExpression()), !dbg !5122
  %3 = load ptr, ptr %op.addr, align 8, !dbg !5122, !tbaa !1899
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 4, !dbg !5122
  %4 = load ptr, ptr %func_doc, align 8, !dbg !5122, !tbaa !4397
  store ptr %4, ptr %tmp, align 8, !dbg !5122, !tbaa !1899
  %5 = load ptr, ptr %value.addr, align 8, !dbg !5122, !tbaa !1899
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5122, !tbaa !1899
  %func_doc1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 4, !dbg !5122
  store ptr %5, ptr %func_doc1, align 8, !dbg !5122, !tbaa !4397
  %7 = load ptr, ptr %tmp, align 8, !dbg !5122, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %7), !dbg !5122
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !5121
  br label %do.end, !dbg !5122

do.end:                                           ; preds = %do.body
  ret i32 0, !dbg !5123
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_name(ptr noundef %op, ptr noundef %context) #0 !dbg !5124 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5126, metadata !DIExpression()), !dbg !5128
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5127, metadata !DIExpression()), !dbg !5129
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5130, !tbaa !1899
  %1 = load ptr, ptr %op.addr, align 8, !dbg !5131, !tbaa !1899
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 2, !dbg !5131
  %2 = load ptr, ptr %func_name, align 8, !dbg !5131, !tbaa !4384
  %cmp = icmp eq ptr %2, null, !dbg !5131
  %lnot = xor i1 %cmp, true, !dbg !5131
  %lnot1 = xor i1 %lnot, true, !dbg !5131
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5131
  %conv = sext i32 %lnot.ext to i64, !dbg !5131
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5131
  %tobool = icmp ne i64 %expval, 0, !dbg !5131
  br i1 %tobool, label %if.then, label %if.end14, !dbg !5133

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %op.addr, align 8, !dbg !5134, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %3, i32 0, i32 1, !dbg !5136
  %4 = load ptr, ptr %m_ml, align 8, !dbg !5136, !tbaa !4746
  %ml_name = getelementptr inbounds %struct.PyMethodDef, ptr %4, i32 0, i32 0, !dbg !5137
  %5 = load ptr, ptr %ml_name, align 8, !dbg !5137, !tbaa !4793
  %call = call ptr @PyUnicode_InternFromString(ptr noundef %5), !dbg !5138
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5139, !tbaa !1899
  %func_name2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 2, !dbg !5140
  store ptr %call, ptr %func_name2, align 8, !dbg !5141, !tbaa !4384
  %7 = load ptr, ptr %op.addr, align 8, !dbg !5142, !tbaa !1899
  %func_name3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 2, !dbg !5142
  %8 = load ptr, ptr %func_name3, align 8, !dbg !5142, !tbaa !4384
  %cmp4 = icmp eq ptr %8, null, !dbg !5142
  %lnot6 = xor i1 %cmp4, true, !dbg !5142
  %lnot8 = xor i1 %lnot6, true, !dbg !5142
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !5142
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !5142
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !5142
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !5142
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !5144

if.then13:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8, !dbg !5145
  br label %return, !dbg !5145

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !5146

if.end14:                                         ; preds = %if.end, %entry
  %9 = load ptr, ptr %op.addr, align 8, !dbg !5147, !tbaa !1899
  %func_name15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 2, !dbg !5147
  %10 = load ptr, ptr %func_name15, align 8, !dbg !5147, !tbaa !4384
  call void @Py_INCREF(ptr noundef %10), !dbg !5147
  %11 = load ptr, ptr %op.addr, align 8, !dbg !5148, !tbaa !1899
  %func_name16 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 2, !dbg !5149
  %12 = load ptr, ptr %func_name16, align 8, !dbg !5149, !tbaa !4384
  store ptr %12, ptr %retval, align 8, !dbg !5150
  br label %return, !dbg !5150

return:                                           ; preds = %if.end14, %if.then13
  %13 = load ptr, ptr %retval, align 8, !dbg !5151
  ret ptr %13, !dbg !5151
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_name(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 !dbg !5152 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5154, metadata !DIExpression()), !dbg !5159
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5155, metadata !DIExpression()), !dbg !5160
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5156, metadata !DIExpression()), !dbg !5161
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5162, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5163, !tbaa !1899
  %cmp = icmp eq ptr %1, null, !dbg !5163
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5163

lor.rhs:                                          ; preds = %entry
  %2 = load ptr, ptr %value.addr, align 8, !dbg !5163, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %2), !dbg !5163
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456), !dbg !5163
  %tobool = icmp ne i32 %call1, 0, !dbg !5163
  %lnot = xor i1 %tobool, true, !dbg !5163
  br label %lor.end, !dbg !5163

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %3, true, !dbg !5163
  %lnot3 = xor i1 %lnot2, true, !dbg !5163
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5163
  %conv = sext i32 %lnot.ext to i64, !dbg !5163
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5163
  %tobool4 = icmp ne i64 %expval, 0, !dbg !5163
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5165

if.then:                                          ; preds = %lor.end
  %4 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5166, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.57), !dbg !5168
  store i32 -1, ptr %retval, align 4, !dbg !5169
  br label %return, !dbg !5169

if.end:                                           ; preds = %lor.end
  %5 = load ptr, ptr %value.addr, align 8, !dbg !5170, !tbaa !1899
  call void @Py_INCREF(ptr noundef %5), !dbg !5170
  br label %do.body, !dbg !5171

do.body:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !5172
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5157, metadata !DIExpression()), !dbg !5172
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5172, !tbaa !1899
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 2, !dbg !5172
  %7 = load ptr, ptr %func_name, align 8, !dbg !5172, !tbaa !4384
  store ptr %7, ptr %tmp, align 8, !dbg !5172, !tbaa !1899
  %8 = load ptr, ptr %value.addr, align 8, !dbg !5172, !tbaa !1899
  %9 = load ptr, ptr %op.addr, align 8, !dbg !5172, !tbaa !1899
  %func_name5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 2, !dbg !5172
  store ptr %8, ptr %func_name5, align 8, !dbg !5172, !tbaa !4384
  %10 = load ptr, ptr %tmp, align 8, !dbg !5172, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %10), !dbg !5172
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !5171
  br label %do.end, !dbg !5172

do.end:                                           ; preds = %do.body
  store i32 0, ptr %retval, align 4, !dbg !5173
  br label %return, !dbg !5173

return:                                           ; preds = %do.end, %if.then
  %11 = load i32, ptr %retval, align 4, !dbg !5174
  ret i32 %11, !dbg !5174
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_qualname(ptr noundef %op, ptr noundef %context) #0 !dbg !5175 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5177, metadata !DIExpression()), !dbg !5179
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5178, metadata !DIExpression()), !dbg !5180
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5181, !tbaa !1899
  %1 = load ptr, ptr %op.addr, align 8, !dbg !5182, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 3, !dbg !5182
  %2 = load ptr, ptr %func_qualname, align 8, !dbg !5182, !tbaa !4197
  call void @Py_INCREF(ptr noundef %2), !dbg !5182
  %3 = load ptr, ptr %op.addr, align 8, !dbg !5183, !tbaa !1899
  %func_qualname1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 3, !dbg !5184
  %4 = load ptr, ptr %func_qualname1, align 8, !dbg !5184, !tbaa !4197
  ret ptr %4, !dbg !5185
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_qualname(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 !dbg !5186 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5188, metadata !DIExpression()), !dbg !5193
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5189, metadata !DIExpression()), !dbg !5194
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5190, metadata !DIExpression()), !dbg !5195
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5196, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5197, !tbaa !1899
  %cmp = icmp eq ptr %1, null, !dbg !5197
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5197

lor.rhs:                                          ; preds = %entry
  %2 = load ptr, ptr %value.addr, align 8, !dbg !5197, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %2), !dbg !5197
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456), !dbg !5197
  %tobool = icmp ne i32 %call1, 0, !dbg !5197
  %lnot = xor i1 %tobool, true, !dbg !5197
  br label %lor.end, !dbg !5197

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %3, true, !dbg !5197
  %lnot3 = xor i1 %lnot2, true, !dbg !5197
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5197
  %conv = sext i32 %lnot.ext to i64, !dbg !5197
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5197
  %tobool4 = icmp ne i64 %expval, 0, !dbg !5197
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5199

if.then:                                          ; preds = %lor.end
  %4 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5200, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.58), !dbg !5202
  store i32 -1, ptr %retval, align 4, !dbg !5203
  br label %return, !dbg !5203

if.end:                                           ; preds = %lor.end
  %5 = load ptr, ptr %value.addr, align 8, !dbg !5204, !tbaa !1899
  call void @Py_INCREF(ptr noundef %5), !dbg !5204
  br label %do.body, !dbg !5205

do.body:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !5206
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5191, metadata !DIExpression()), !dbg !5206
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5206, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 3, !dbg !5206
  %7 = load ptr, ptr %func_qualname, align 8, !dbg !5206, !tbaa !4197
  store ptr %7, ptr %tmp, align 8, !dbg !5206, !tbaa !1899
  %8 = load ptr, ptr %value.addr, align 8, !dbg !5206, !tbaa !1899
  %9 = load ptr, ptr %op.addr, align 8, !dbg !5206, !tbaa !1899
  %func_qualname5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 3, !dbg !5206
  store ptr %8, ptr %func_qualname5, align 8, !dbg !5206, !tbaa !4197
  %10 = load ptr, ptr %tmp, align 8, !dbg !5206, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %10), !dbg !5206
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !5205
  br label %do.end, !dbg !5206

do.end:                                           ; preds = %do.body
  store i32 0, ptr %retval, align 4, !dbg !5207
  br label %return, !dbg !5207

return:                                           ; preds = %do.end, %if.then
  %11 = load i32, ptr %retval, align 4, !dbg !5208
  ret i32 %11, !dbg !5208
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_dict(ptr noundef %op, ptr noundef %context) #0 !dbg !5209 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5211, metadata !DIExpression()), !dbg !5213
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5212, metadata !DIExpression()), !dbg !5214
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5215, !tbaa !1899
  %1 = load ptr, ptr %op.addr, align 8, !dbg !5216, !tbaa !1899
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 1, !dbg !5216
  %2 = load ptr, ptr %func_dict, align 8, !dbg !5216, !tbaa !4377
  %cmp = icmp eq ptr %2, null, !dbg !5216
  %lnot = xor i1 %cmp, true, !dbg !5216
  %lnot1 = xor i1 %lnot, true, !dbg !5216
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5216
  %conv = sext i32 %lnot.ext to i64, !dbg !5216
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5216
  %tobool = icmp ne i64 %expval, 0, !dbg !5216
  br i1 %tobool, label %if.then, label %if.end14, !dbg !5218

if.then:                                          ; preds = %entry
  %call = call ptr @PyDict_New(), !dbg !5219
  %3 = load ptr, ptr %op.addr, align 8, !dbg !5221, !tbaa !1899
  %func_dict2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 1, !dbg !5222
  store ptr %call, ptr %func_dict2, align 8, !dbg !5223, !tbaa !4377
  %4 = load ptr, ptr %op.addr, align 8, !dbg !5224, !tbaa !1899
  %func_dict3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %4, i32 0, i32 1, !dbg !5224
  %5 = load ptr, ptr %func_dict3, align 8, !dbg !5224, !tbaa !4377
  %cmp4 = icmp eq ptr %5, null, !dbg !5224
  %lnot6 = xor i1 %cmp4, true, !dbg !5224
  %lnot8 = xor i1 %lnot6, true, !dbg !5224
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !5224
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !5224
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !5224
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !5224
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !5226

if.then13:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8, !dbg !5227
  br label %return, !dbg !5227

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !5228

if.end14:                                         ; preds = %if.end, %entry
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5229, !tbaa !1899
  %func_dict15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 1, !dbg !5229
  %7 = load ptr, ptr %func_dict15, align 8, !dbg !5229, !tbaa !4377
  call void @Py_INCREF(ptr noundef %7), !dbg !5229
  %8 = load ptr, ptr %op.addr, align 8, !dbg !5230, !tbaa !1899
  %func_dict16 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 1, !dbg !5231
  %9 = load ptr, ptr %func_dict16, align 8, !dbg !5231, !tbaa !4377
  store ptr %9, ptr %retval, align 8, !dbg !5232
  br label %return, !dbg !5232

return:                                           ; preds = %if.end14, %if.then13
  %10 = load ptr, ptr %retval, align 8, !dbg !5233
  ret ptr %10, !dbg !5233
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_dict(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 !dbg !5234 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5236, metadata !DIExpression()), !dbg !5241
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5237, metadata !DIExpression()), !dbg !5242
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5238, metadata !DIExpression()), !dbg !5243
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5244, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5245, !tbaa !1899
  %cmp = icmp eq ptr %1, null, !dbg !5245
  %lnot = xor i1 %cmp, true, !dbg !5245
  %lnot1 = xor i1 %lnot, true, !dbg !5245
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5245
  %conv = sext i32 %lnot.ext to i64, !dbg !5245
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5245
  %tobool = icmp ne i64 %expval, 0, !dbg !5245
  br i1 %tobool, label %if.then, label %if.end, !dbg !5247

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5248, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %2, ptr noundef @.str.59), !dbg !5250
  store i32 -1, ptr %retval, align 4, !dbg !5251
  br label %return, !dbg !5251

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %value.addr, align 8, !dbg !5252, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %3), !dbg !5252
  %call2 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 536870912), !dbg !5252
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5252
  %lnot4 = xor i1 %tobool3, true, !dbg !5252
  %lnot6 = xor i1 %lnot4, true, !dbg !5252
  %lnot8 = xor i1 %lnot6, true, !dbg !5252
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !5252
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !5252
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !5252
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !5252
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5254

if.then13:                                        ; preds = %if.end
  %4 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5255, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.60), !dbg !5257
  store i32 -1, ptr %retval, align 4, !dbg !5258
  br label %return, !dbg !5258

if.end14:                                         ; preds = %if.end
  %5 = load ptr, ptr %value.addr, align 8, !dbg !5259, !tbaa !1899
  call void @Py_INCREF(ptr noundef %5), !dbg !5259
  br label %do.body, !dbg !5260

do.body:                                          ; preds = %if.end14
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !5261
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5239, metadata !DIExpression()), !dbg !5261
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5261, !tbaa !1899
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 1, !dbg !5261
  %7 = load ptr, ptr %func_dict, align 8, !dbg !5261, !tbaa !4377
  store ptr %7, ptr %tmp, align 8, !dbg !5261, !tbaa !1899
  %8 = load ptr, ptr %value.addr, align 8, !dbg !5261, !tbaa !1899
  %9 = load ptr, ptr %op.addr, align 8, !dbg !5261, !tbaa !1899
  %func_dict15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 1, !dbg !5261
  store ptr %8, ptr %func_dict15, align 8, !dbg !5261, !tbaa !4377
  %10 = load ptr, ptr %tmp, align 8, !dbg !5261, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %10), !dbg !5261
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !5260
  br label %do.end, !dbg !5261

do.end:                                           ; preds = %do.body
  store i32 0, ptr %retval, align 4, !dbg !5262
  br label %return, !dbg !5262

return:                                           ; preds = %do.end, %if.then13, %if.then
  %11 = load i32, ptr %retval, align 4, !dbg !5263
  ret i32 %11, !dbg !5263
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_globals(ptr noundef %op, ptr noundef %context) #0 !dbg !5264 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5266, metadata !DIExpression()), !dbg !5268
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5267, metadata !DIExpression()), !dbg !5269
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5270, !tbaa !1899
  %1 = load ptr, ptr %op.addr, align 8, !dbg !5271, !tbaa !1899
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 5, !dbg !5271
  %2 = load ptr, ptr %func_globals, align 8, !dbg !5271, !tbaa !4404
  call void @Py_INCREF(ptr noundef %2), !dbg !5271
  %3 = load ptr, ptr %op.addr, align 8, !dbg !5272, !tbaa !1899
  %func_globals1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 5, !dbg !5273
  %4 = load ptr, ptr %func_globals1, align 8, !dbg !5273, !tbaa !4404
  ret ptr %4, !dbg !5274
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_closure(ptr noundef %op, ptr noundef %context) #0 !dbg !5275 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5277, metadata !DIExpression()), !dbg !5279
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5278, metadata !DIExpression()), !dbg !5280
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5281, !tbaa !1899
  %1 = load ptr, ptr %context.addr, align 8, !dbg !5282, !tbaa !1899
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !5283
  ret ptr @_Py_NoneStruct, !dbg !5284
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_code(ptr noundef %op, ptr noundef %context) #0 !dbg !5285 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5287, metadata !DIExpression()), !dbg !5290
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5288, metadata !DIExpression()), !dbg !5291
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !5292
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5289, metadata !DIExpression()), !dbg !5293
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5294, !tbaa !1899
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 6, !dbg !5295
  %1 = load ptr, ptr %func_code, align 8, !dbg !5295, !tbaa !4411
  %tobool = icmp ne ptr %1, null, !dbg !5296
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5296

cond.true:                                        ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !5297, !tbaa !1899
  %func_code1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 6, !dbg !5298
  %3 = load ptr, ptr %func_code1, align 8, !dbg !5298, !tbaa !4411
  br label %cond.end, !dbg !5296

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5296

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %3, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !5296
  store ptr %cond, ptr %result, align 8, !dbg !5293, !tbaa !1899
  %4 = load ptr, ptr %context.addr, align 8, !dbg !5299, !tbaa !1899
  %5 = load ptr, ptr %result, align 8, !dbg !5300, !tbaa !1899
  call void @Py_INCREF(ptr noundef %5), !dbg !5300
  %6 = load ptr, ptr %result, align 8, !dbg !5301, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !5302
  ret ptr %6, !dbg !5303
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_defaults(ptr noundef %op, ptr noundef %context) #0 !dbg !5304 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5306, metadata !DIExpression()), !dbg !5309
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5307, metadata !DIExpression()), !dbg !5310
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !5311
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5308, metadata !DIExpression()), !dbg !5312
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5313, !tbaa !1899
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 12, !dbg !5314
  %1 = load ptr, ptr %defaults_tuple, align 8, !dbg !5314, !tbaa !3884
  store ptr %1, ptr %result, align 8, !dbg !5312, !tbaa !1899
  %2 = load ptr, ptr %context.addr, align 8, !dbg !5315, !tbaa !1899
  %3 = load ptr, ptr %result, align 8, !dbg !5316, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !5316
  %lnot = xor i1 %tobool, true, !dbg !5316
  %lnot1 = xor i1 %lnot, true, !dbg !5316
  %lnot2 = xor i1 %lnot1, true, !dbg !5316
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5316
  %conv = sext i32 %lnot.ext to i64, !dbg !5316
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5316
  %tobool3 = icmp ne i64 %expval, 0, !dbg !5316
  br i1 %tobool3, label %if.then, label %if.end17, !dbg !5318

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %op.addr, align 8, !dbg !5319, !tbaa !1899
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %4, i32 0, i32 14, !dbg !5322
  %5 = load ptr, ptr %defaults_getter, align 8, !dbg !5322, !tbaa !5323
  %tobool4 = icmp ne ptr %5, null, !dbg !5319
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5324

if.then5:                                         ; preds = %if.then
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5325, !tbaa !1899
  %call = call i32 @__Pyx_CyFunction_init_defaults(ptr noundef %6), !dbg !5325
  %cmp = icmp slt i32 %call, 0, !dbg !5325
  %lnot7 = xor i1 %cmp, true, !dbg !5325
  %lnot9 = xor i1 %lnot7, true, !dbg !5325
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5325
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !5325
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !5325
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !5325
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !5328

if.then14:                                        ; preds = %if.then5
  store ptr null, ptr %retval, align 8, !dbg !5329
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5329

if.end:                                           ; preds = %if.then5
  %7 = load ptr, ptr %op.addr, align 8, !dbg !5330, !tbaa !1899
  %defaults_tuple15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 12, !dbg !5331
  %8 = load ptr, ptr %defaults_tuple15, align 8, !dbg !5331, !tbaa !3884
  store ptr %8, ptr %result, align 8, !dbg !5332, !tbaa !1899
  br label %if.end16, !dbg !5333

if.else:                                          ; preds = %if.then
  store ptr @_Py_NoneStruct, ptr %result, align 8, !dbg !5334, !tbaa !1899
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.end
  br label %if.end17, !dbg !5336

if.end17:                                         ; preds = %if.end16, %entry
  %9 = load ptr, ptr %result, align 8, !dbg !5337, !tbaa !1899
  call void @Py_INCREF(ptr noundef %9), !dbg !5337
  %10 = load ptr, ptr %result, align 8, !dbg !5338, !tbaa !1899
  store ptr %10, ptr %retval, align 8, !dbg !5339
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5339

cleanup:                                          ; preds = %if.end17, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !5340
  %11 = load ptr, ptr %retval, align 8, !dbg !5340
  ret ptr %11, !dbg !5340
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_defaults(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 !dbg !5341 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5343, metadata !DIExpression()), !dbg !5348
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5344, metadata !DIExpression()), !dbg !5349
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5345, metadata !DIExpression()), !dbg !5350
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5351, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5352, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !5352
  br i1 %tobool, label %if.else, label %if.then, !dbg !5354

if.then:                                          ; preds = %entry
  store ptr @_Py_NoneStruct, ptr %value.addr, align 8, !dbg !5355, !tbaa !1899
  br label %if.end7, !dbg !5357

if.else:                                          ; preds = %entry
  %2 = load ptr, ptr %value.addr, align 8, !dbg !5358, !tbaa !1899
  %cmp = icmp ne ptr %2, @_Py_NoneStruct, !dbg !5358
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5358

land.rhs:                                         ; preds = %if.else
  %3 = load ptr, ptr %value.addr, align 8, !dbg !5358, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %3), !dbg !5358
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864), !dbg !5358
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5358
  %lnot = xor i1 %tobool2, true, !dbg !5358
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %4 = phi i1 [ false, %if.else ], [ %lnot, %land.rhs ], !dbg !5360
  %lnot3 = xor i1 %4, true, !dbg !5358
  %lnot4 = xor i1 %lnot3, true, !dbg !5358
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !5358
  %conv = sext i32 %lnot.ext to i64, !dbg !5358
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5358
  %tobool5 = icmp ne i64 %expval, 0, !dbg !5358
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5361

if.then6:                                         ; preds = %land.end
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5362, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %5, ptr noundef @.str.61), !dbg !5364
  store i32 -1, ptr %retval, align 4, !dbg !5365
  br label %return, !dbg !5365

if.end:                                           ; preds = %land.end
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %6 = load ptr, ptr @PyExc_RuntimeWarning, align 8, !dbg !5366, !tbaa !1899
  %call8 = call i32 @PyErr_WarnEx(ptr noundef %6, ptr noundef @.str.62, i64 noundef 1), !dbg !5367
  %7 = load ptr, ptr %value.addr, align 8, !dbg !5368, !tbaa !1899
  call void @Py_INCREF(ptr noundef %7), !dbg !5368
  br label %do.body, !dbg !5369

do.body:                                          ; preds = %if.end7
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !5370
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5346, metadata !DIExpression()), !dbg !5370
  %8 = load ptr, ptr %op.addr, align 8, !dbg !5370, !tbaa !1899
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 12, !dbg !5370
  %9 = load ptr, ptr %defaults_tuple, align 8, !dbg !5370, !tbaa !3884
  store ptr %9, ptr %tmp, align 8, !dbg !5370, !tbaa !1899
  %10 = load ptr, ptr %value.addr, align 8, !dbg !5370, !tbaa !1899
  %11 = load ptr, ptr %op.addr, align 8, !dbg !5370, !tbaa !1899
  %defaults_tuple9 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 12, !dbg !5370
  store ptr %10, ptr %defaults_tuple9, align 8, !dbg !5370, !tbaa !3884
  %12 = load ptr, ptr %tmp, align 8, !dbg !5370, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %12), !dbg !5370
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !5369
  br label %do.end, !dbg !5370

do.end:                                           ; preds = %do.body
  store i32 0, ptr %retval, align 4, !dbg !5371
  br label %return, !dbg !5371

return:                                           ; preds = %do.end, %if.then6
  %13 = load i32, ptr %retval, align 4, !dbg !5372
  ret i32 %13, !dbg !5372
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_kwdefaults(ptr noundef %op, ptr noundef %context) #0 !dbg !5373 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5375, metadata !DIExpression()), !dbg !5378
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5376, metadata !DIExpression()), !dbg !5379
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !5380
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5377, metadata !DIExpression()), !dbg !5381
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5382, !tbaa !1899
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 13, !dbg !5383
  %1 = load ptr, ptr %defaults_kwdict, align 8, !dbg !5383, !tbaa !4431
  store ptr %1, ptr %result, align 8, !dbg !5381, !tbaa !1899
  %2 = load ptr, ptr %context.addr, align 8, !dbg !5384, !tbaa !1899
  %3 = load ptr, ptr %result, align 8, !dbg !5385, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !5385
  %lnot = xor i1 %tobool, true, !dbg !5385
  %lnot1 = xor i1 %lnot, true, !dbg !5385
  %lnot2 = xor i1 %lnot1, true, !dbg !5385
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5385
  %conv = sext i32 %lnot.ext to i64, !dbg !5385
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5385
  %tobool3 = icmp ne i64 %expval, 0, !dbg !5385
  br i1 %tobool3, label %if.then, label %if.end17, !dbg !5387

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %op.addr, align 8, !dbg !5388, !tbaa !1899
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %4, i32 0, i32 14, !dbg !5391
  %5 = load ptr, ptr %defaults_getter, align 8, !dbg !5391, !tbaa !5323
  %tobool4 = icmp ne ptr %5, null, !dbg !5388
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5392

if.then5:                                         ; preds = %if.then
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5393, !tbaa !1899
  %call = call i32 @__Pyx_CyFunction_init_defaults(ptr noundef %6), !dbg !5393
  %cmp = icmp slt i32 %call, 0, !dbg !5393
  %lnot7 = xor i1 %cmp, true, !dbg !5393
  %lnot9 = xor i1 %lnot7, true, !dbg !5393
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5393
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !5393
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !5393
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !5393
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !5396

if.then14:                                        ; preds = %if.then5
  store ptr null, ptr %retval, align 8, !dbg !5397
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5397

if.end:                                           ; preds = %if.then5
  %7 = load ptr, ptr %op.addr, align 8, !dbg !5398, !tbaa !1899
  %defaults_kwdict15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 13, !dbg !5399
  %8 = load ptr, ptr %defaults_kwdict15, align 8, !dbg !5399, !tbaa !4431
  store ptr %8, ptr %result, align 8, !dbg !5400, !tbaa !1899
  br label %if.end16, !dbg !5401

if.else:                                          ; preds = %if.then
  store ptr @_Py_NoneStruct, ptr %result, align 8, !dbg !5402, !tbaa !1899
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.end
  br label %if.end17, !dbg !5404

if.end17:                                         ; preds = %if.end16, %entry
  %9 = load ptr, ptr %result, align 8, !dbg !5405, !tbaa !1899
  call void @Py_INCREF(ptr noundef %9), !dbg !5405
  %10 = load ptr, ptr %result, align 8, !dbg !5406, !tbaa !1899
  store ptr %10, ptr %retval, align 8, !dbg !5407
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5407

cleanup:                                          ; preds = %if.end17, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !5408
  %11 = load ptr, ptr %retval, align 8, !dbg !5408
  ret ptr %11, !dbg !5408
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_kwdefaults(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 !dbg !5409 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5411, metadata !DIExpression()), !dbg !5416
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5412, metadata !DIExpression()), !dbg !5417
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5413, metadata !DIExpression()), !dbg !5418
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5419, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5420, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !5420
  br i1 %tobool, label %if.else, label %if.then, !dbg !5422

if.then:                                          ; preds = %entry
  store ptr @_Py_NoneStruct, ptr %value.addr, align 8, !dbg !5423, !tbaa !1899
  br label %if.end7, !dbg !5425

if.else:                                          ; preds = %entry
  %2 = load ptr, ptr %value.addr, align 8, !dbg !5426, !tbaa !1899
  %cmp = icmp ne ptr %2, @_Py_NoneStruct, !dbg !5426
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5426

land.rhs:                                         ; preds = %if.else
  %3 = load ptr, ptr %value.addr, align 8, !dbg !5426, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %3), !dbg !5426
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 536870912), !dbg !5426
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5426
  %lnot = xor i1 %tobool2, true, !dbg !5426
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %4 = phi i1 [ false, %if.else ], [ %lnot, %land.rhs ], !dbg !5428
  %lnot3 = xor i1 %4, true, !dbg !5426
  %lnot4 = xor i1 %lnot3, true, !dbg !5426
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !5426
  %conv = sext i32 %lnot.ext to i64, !dbg !5426
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5426
  %tobool5 = icmp ne i64 %expval, 0, !dbg !5426
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5429

if.then6:                                         ; preds = %land.end
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5430, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %5, ptr noundef @.str.63), !dbg !5432
  store i32 -1, ptr %retval, align 4, !dbg !5433
  br label %return, !dbg !5433

if.end:                                           ; preds = %land.end
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %6 = load ptr, ptr @PyExc_RuntimeWarning, align 8, !dbg !5434, !tbaa !1899
  %call8 = call i32 @PyErr_WarnEx(ptr noundef %6, ptr noundef @.str.64, i64 noundef 1), !dbg !5435
  %7 = load ptr, ptr %value.addr, align 8, !dbg !5436, !tbaa !1899
  call void @Py_INCREF(ptr noundef %7), !dbg !5436
  br label %do.body, !dbg !5437

do.body:                                          ; preds = %if.end7
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !5438
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5414, metadata !DIExpression()), !dbg !5438
  %8 = load ptr, ptr %op.addr, align 8, !dbg !5438, !tbaa !1899
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 13, !dbg !5438
  %9 = load ptr, ptr %defaults_kwdict, align 8, !dbg !5438, !tbaa !4431
  store ptr %9, ptr %tmp, align 8, !dbg !5438, !tbaa !1899
  %10 = load ptr, ptr %value.addr, align 8, !dbg !5438, !tbaa !1899
  %11 = load ptr, ptr %op.addr, align 8, !dbg !5438, !tbaa !1899
  %defaults_kwdict9 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 13, !dbg !5438
  store ptr %10, ptr %defaults_kwdict9, align 8, !dbg !5438, !tbaa !4431
  %12 = load ptr, ptr %tmp, align 8, !dbg !5438, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %12), !dbg !5438
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !5437
  br label %do.end, !dbg !5438

do.end:                                           ; preds = %do.body
  store i32 0, ptr %retval, align 4, !dbg !5439
  br label %return, !dbg !5439

return:                                           ; preds = %do.end, %if.then6
  %13 = load i32, ptr %retval, align 4, !dbg !5440
  ret i32 %13, !dbg !5440
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_annotations(ptr noundef %op, ptr noundef %context) #0 !dbg !5441 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5443, metadata !DIExpression()), !dbg !5446
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5444, metadata !DIExpression()), !dbg !5447
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !5448
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5445, metadata !DIExpression()), !dbg !5449
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5450, !tbaa !1899
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 15, !dbg !5451
  %1 = load ptr, ptr %func_annotations, align 8, !dbg !5451, !tbaa !4582
  store ptr %1, ptr %result, align 8, !dbg !5449, !tbaa !1899
  %2 = load ptr, ptr %context.addr, align 8, !dbg !5452, !tbaa !1899
  %3 = load ptr, ptr %result, align 8, !dbg !5453, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !5453
  %lnot = xor i1 %tobool, true, !dbg !5453
  %lnot1 = xor i1 %lnot, true, !dbg !5453
  %lnot2 = xor i1 %lnot1, true, !dbg !5453
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5453
  %conv = sext i32 %lnot.ext to i64, !dbg !5453
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5453
  %tobool3 = icmp ne i64 %expval, 0, !dbg !5453
  br i1 %tobool3, label %if.then, label %if.end16, !dbg !5455

if.then:                                          ; preds = %entry
  %call = call ptr @PyDict_New(), !dbg !5456
  store ptr %call, ptr %result, align 8, !dbg !5458, !tbaa !1899
  %4 = load ptr, ptr %result, align 8, !dbg !5459, !tbaa !1899
  %tobool4 = icmp ne ptr %4, null, !dbg !5459
  %lnot5 = xor i1 %tobool4, true, !dbg !5459
  %lnot7 = xor i1 %lnot5, true, !dbg !5459
  %lnot9 = xor i1 %lnot7, true, !dbg !5459
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5459
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !5459
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !5459
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !5459
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !5461

if.then14:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8, !dbg !5462
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5462

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %result, align 8, !dbg !5463, !tbaa !1899
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5464, !tbaa !1899
  %func_annotations15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 15, !dbg !5465
  store ptr %5, ptr %func_annotations15, align 8, !dbg !5466, !tbaa !4582
  br label %if.end16, !dbg !5467

if.end16:                                         ; preds = %if.end, %entry
  %7 = load ptr, ptr %result, align 8, !dbg !5468, !tbaa !1899
  call void @Py_INCREF(ptr noundef %7), !dbg !5468
  %8 = load ptr, ptr %result, align 8, !dbg !5469, !tbaa !1899
  store ptr %8, ptr %retval, align 8, !dbg !5470
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5470

cleanup:                                          ; preds = %if.end16, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !5471
  %9 = load ptr, ptr %retval, align 8, !dbg !5471
  ret ptr %9, !dbg !5471
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_annotations(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 !dbg !5472 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5474, metadata !DIExpression()), !dbg !5479
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5475, metadata !DIExpression()), !dbg !5480
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5476, metadata !DIExpression()), !dbg !5481
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5482, !tbaa !1899
  %1 = load ptr, ptr %value.addr, align 8, !dbg !5483, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !5483
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5485

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %value.addr, align 8, !dbg !5486, !tbaa !1899
  %cmp = icmp eq ptr %2, @_Py_NoneStruct, !dbg !5487
  br i1 %cmp, label %if.then, label %if.else, !dbg !5488

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %value.addr, align 8, !dbg !5489, !tbaa !1899
  br label %if.end7, !dbg !5491

if.else:                                          ; preds = %lor.lhs.false
  %3 = load ptr, ptr %value.addr, align 8, !dbg !5492, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %3), !dbg !5492
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 536870912), !dbg !5492
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5492
  %lnot = xor i1 %tobool2, true, !dbg !5492
  %lnot3 = xor i1 %lnot, true, !dbg !5492
  %lnot4 = xor i1 %lnot3, true, !dbg !5492
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !5492
  %conv = sext i32 %lnot.ext to i64, !dbg !5492
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5492
  %tobool5 = icmp ne i64 %expval, 0, !dbg !5492
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5494

if.then6:                                         ; preds = %if.else
  %4 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5495, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.65), !dbg !5497
  store i32 -1, ptr %retval, align 4, !dbg !5498
  br label %return, !dbg !5498

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %5 = load ptr, ptr %value.addr, align 8, !dbg !5499, !tbaa !1899
  call void @Py_XINCREF(ptr noundef %5), !dbg !5499
  br label %do.body, !dbg !5500

do.body:                                          ; preds = %if.end7
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !5501
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5477, metadata !DIExpression()), !dbg !5501
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5501, !tbaa !1899
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 15, !dbg !5501
  %7 = load ptr, ptr %func_annotations, align 8, !dbg !5501, !tbaa !4582
  store ptr %7, ptr %tmp, align 8, !dbg !5501, !tbaa !1899
  %8 = load ptr, ptr %value.addr, align 8, !dbg !5501, !tbaa !1899
  %9 = load ptr, ptr %op.addr, align 8, !dbg !5501, !tbaa !1899
  %func_annotations8 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 15, !dbg !5501
  store ptr %8, ptr %func_annotations8, align 8, !dbg !5501, !tbaa !4582
  %10 = load ptr, ptr %tmp, align 8, !dbg !5501, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %10), !dbg !5501
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !5500
  br label %do.end, !dbg !5501

do.end:                                           ; preds = %do.body
  store i32 0, ptr %retval, align 4, !dbg !5502
  br label %return, !dbg !5502

return:                                           ; preds = %do.end, %if.then6
  %11 = load i32, ptr %retval, align 4, !dbg !5503
  ret i32 %11, !dbg !5503
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_is_coroutine(ptr noundef %op, ptr noundef %context) #0 !dbg !5504 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %is_coroutine = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %module = alloca ptr, align 8
  %fromlist = alloca ptr, align 8
  %marker = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5506, metadata !DIExpression()), !dbg !5515
  store ptr %context, ptr %context.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %context.addr, metadata !5507, metadata !DIExpression()), !dbg !5516
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_coroutine) #11, !dbg !5517
  tail call void @llvm.dbg.declare(metadata ptr %is_coroutine, metadata !5508, metadata !DIExpression()), !dbg !5518
  %0 = load ptr, ptr %context.addr, align 8, !dbg !5519, !tbaa !1899
  %1 = load ptr, ptr %op.addr, align 8, !dbg !5520, !tbaa !1899
  %func_is_coroutine = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 16, !dbg !5522
  %2 = load ptr, ptr %func_is_coroutine, align 8, !dbg !5522, !tbaa !4438
  %tobool = icmp ne ptr %2, null, !dbg !5520
  br i1 %tobool, label %if.then, label %if.end, !dbg !5523

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %op.addr, align 8, !dbg !5524, !tbaa !1899
  %func_is_coroutine1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 16, !dbg !5524
  %4 = load ptr, ptr %func_is_coroutine1, align 8, !dbg !5524, !tbaa !4438
  call void @Py_INCREF(ptr noundef %4), !dbg !5524
  %5 = load ptr, ptr %op.addr, align 8, !dbg !5524, !tbaa !1899
  %func_is_coroutine2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 16, !dbg !5524
  %6 = load ptr, ptr %func_is_coroutine2, align 8, !dbg !5524, !tbaa !4438
  store ptr %6, ptr %retval, align 8, !dbg !5526
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup47, !dbg !5526

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %op.addr, align 8, !dbg !5527, !tbaa !1899
  %flags = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 11, !dbg !5528
  %8 = load i32, ptr %flags, align 8, !dbg !5528, !tbaa !4239
  %and = and i32 %8, 8, !dbg !5529
  store i32 %and, ptr %is_coroutine, align 4, !dbg !5530, !tbaa !1984
  %9 = load i32, ptr %is_coroutine, align 4, !dbg !5531, !tbaa !1984
  %tobool3 = icmp ne i32 %9, 0, !dbg !5531
  br i1 %tobool3, label %if.then4, label %if.end41, !dbg !5532

if.then4:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #11, !dbg !5533
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !5509, metadata !DIExpression()), !dbg !5534
  call void @llvm.lifetime.start.p0(i64 8, ptr %fromlist) #11, !dbg !5533
  tail call void @llvm.dbg.declare(metadata ptr %fromlist, metadata !5512, metadata !DIExpression()), !dbg !5535
  call void @llvm.lifetime.start.p0(i64 8, ptr %marker) #11, !dbg !5533
  tail call void @llvm.dbg.declare(metadata ptr %marker, metadata !5513, metadata !DIExpression()), !dbg !5536
  %10 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5537, !tbaa !1899
  %__pyx_n_s_is_coroutine = getelementptr inbounds %struct.__pyx_mstate, ptr %10, i32 0, i32 55, !dbg !5537
  %11 = load ptr, ptr %__pyx_n_s_is_coroutine, align 8, !dbg !5537, !tbaa !5538
  store ptr %11, ptr %marker, align 8, !dbg !5536, !tbaa !1899
  %call = call ptr @PyList_New(i64 noundef 1), !dbg !5539
  store ptr %call, ptr %fromlist, align 8, !dbg !5540, !tbaa !1899
  %12 = load ptr, ptr %fromlist, align 8, !dbg !5541, !tbaa !1899
  %tobool5 = icmp ne ptr %12, null, !dbg !5541
  %lnot = xor i1 %tobool5, true, !dbg !5541
  %lnot6 = xor i1 %lnot, true, !dbg !5541
  %lnot7 = xor i1 %lnot6, true, !dbg !5541
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !5541
  %conv = sext i32 %lnot.ext to i64, !dbg !5541
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5541
  %tobool8 = icmp ne i64 %expval, 0, !dbg !5541
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5543

if.then9:                                         ; preds = %if.then4
  store ptr null, ptr %retval, align 8, !dbg !5544
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5544

if.end10:                                         ; preds = %if.then4
  %13 = load ptr, ptr %marker, align 8, !dbg !5545, !tbaa !1899
  call void @Py_INCREF(ptr noundef %13), !dbg !5545
  %14 = load ptr, ptr %fromlist, align 8, !dbg !5546, !tbaa !1899
  %15 = load ptr, ptr %marker, align 8, !dbg !5546, !tbaa !1899
  call void @PyList_SET_ITEM(ptr noundef %14, i64 noundef 0, ptr noundef %15), !dbg !5546
  %16 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5547, !tbaa !1899
  %__pyx_n_s_asyncio_coroutines = getelementptr inbounds %struct.__pyx_mstate, ptr %16, i32 0, i32 40, !dbg !5547
  %17 = load ptr, ptr %__pyx_n_s_asyncio_coroutines, align 8, !dbg !5547, !tbaa !5548
  %18 = load ptr, ptr %fromlist, align 8, !dbg !5549, !tbaa !1899
  %call11 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %17, ptr noundef null, ptr noundef null, ptr noundef %18, i32 noundef 0), !dbg !5550
  store ptr %call11, ptr %module, align 8, !dbg !5551, !tbaa !1899
  %19 = load ptr, ptr %fromlist, align 8, !dbg !5552, !tbaa !1899
  call void @Py_DECREF(ptr noundef %19), !dbg !5552
  %20 = load ptr, ptr %module, align 8, !dbg !5553, !tbaa !1899
  %tobool12 = icmp ne ptr %20, null, !dbg !5553
  %lnot13 = xor i1 %tobool12, true, !dbg !5553
  %lnot15 = xor i1 %lnot13, true, !dbg !5553
  %lnot17 = xor i1 %lnot15, true, !dbg !5553
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !5553
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !5553
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !5553
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !5553
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !5555

if.then22:                                        ; preds = %if.end10
  br label %ignore, !dbg !5556

if.end23:                                         ; preds = %if.end10
  %21 = load ptr, ptr %module, align 8, !dbg !5557, !tbaa !1899
  %22 = load ptr, ptr %marker, align 8, !dbg !5558, !tbaa !1899
  %call24 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %21, ptr noundef %22), !dbg !5559
  %23 = load ptr, ptr %op.addr, align 8, !dbg !5560, !tbaa !1899
  %func_is_coroutine25 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %23, i32 0, i32 16, !dbg !5561
  store ptr %call24, ptr %func_is_coroutine25, align 8, !dbg !5562, !tbaa !4438
  %24 = load ptr, ptr %module, align 8, !dbg !5563, !tbaa !1899
  call void @Py_DECREF(ptr noundef %24), !dbg !5563
  %25 = load ptr, ptr %op.addr, align 8, !dbg !5564, !tbaa !1899
  %func_is_coroutine26 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %25, i32 0, i32 16, !dbg !5564
  %26 = load ptr, ptr %func_is_coroutine26, align 8, !dbg !5564, !tbaa !4438
  %tobool27 = icmp ne ptr %26, null, !dbg !5564
  %lnot28 = xor i1 %tobool27, true, !dbg !5564
  %lnot30 = xor i1 %lnot28, true, !dbg !5564
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !5564
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !5564
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 1), !dbg !5564
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !5564
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !5566

if.then35:                                        ; preds = %if.end23
  %27 = load ptr, ptr %op.addr, align 8, !dbg !5567, !tbaa !1899
  %func_is_coroutine36 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %27, i32 0, i32 16, !dbg !5567
  %28 = load ptr, ptr %func_is_coroutine36, align 8, !dbg !5567, !tbaa !4438
  call void @Py_INCREF(ptr noundef %28), !dbg !5567
  %29 = load ptr, ptr %op.addr, align 8, !dbg !5567, !tbaa !1899
  %func_is_coroutine37 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %29, i32 0, i32 16, !dbg !5567
  %30 = load ptr, ptr %func_is_coroutine37, align 8, !dbg !5567, !tbaa !4438
  store ptr %30, ptr %retval, align 8, !dbg !5569
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5569

if.end38:                                         ; preds = %if.end23
  br label %ignore, !dbg !5564

ignore:                                           ; preds = %if.end38, %if.then22
  tail call void @llvm.dbg.label(metadata !5514), !dbg !5570
  call void @PyErr_Clear(), !dbg !5571
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5572
  br label %cleanup, !dbg !5572

cleanup:                                          ; preds = %ignore, %if.then35, %if.then9
  call void @llvm.lifetime.end.p0(i64 8, ptr %marker) #11, !dbg !5572
  call void @llvm.lifetime.end.p0(i64 8, ptr %fromlist) #11, !dbg !5572
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #11, !dbg !5572
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup47 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end41, !dbg !5573

if.end41:                                         ; preds = %cleanup.cont, %if.end
  %31 = load i32, ptr %is_coroutine, align 4, !dbg !5574, !tbaa !1984
  %conv42 = sext i32 %31 to i64, !dbg !5574
  %call43 = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv42), !dbg !5575
  %32 = load ptr, ptr %op.addr, align 8, !dbg !5576, !tbaa !1899
  %func_is_coroutine44 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %32, i32 0, i32 16, !dbg !5577
  store ptr %call43, ptr %func_is_coroutine44, align 8, !dbg !5578, !tbaa !4438
  %33 = load ptr, ptr %op.addr, align 8, !dbg !5579, !tbaa !1899
  %func_is_coroutine45 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %33, i32 0, i32 16, !dbg !5579
  %34 = load ptr, ptr %func_is_coroutine45, align 8, !dbg !5579, !tbaa !4438
  call void @Py_INCREF(ptr noundef %34), !dbg !5579
  %35 = load ptr, ptr %op.addr, align 8, !dbg !5579, !tbaa !1899
  %func_is_coroutine46 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %35, i32 0, i32 16, !dbg !5579
  %36 = load ptr, ptr %func_is_coroutine46, align 8, !dbg !5579, !tbaa !4438
  store ptr %36, ptr %retval, align 8, !dbg !5580
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup47, !dbg !5580

cleanup47:                                        ; preds = %if.end41, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_coroutine) #11, !dbg !5581
  %37 = load ptr, ptr %retval, align 8, !dbg !5581
  ret ptr %37, !dbg !5581
}

declare !dbg !5582 ptr @PyUnicode_FromString(ptr noundef) #1

declare !dbg !5583 ptr @PyUnicode_InternFromString(ptr noundef) #1

declare !dbg !5584 ptr @PyDict_New() #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_init_defaults(ptr noundef %op) #0 !dbg !5585 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %result = alloca i32, align 4
  %res = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5587, metadata !DIExpression()), !dbg !5590
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !5591
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5588, metadata !DIExpression()), !dbg !5592
  store i32 0, ptr %result, align 4, !dbg !5592, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #11, !dbg !5593
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !5589, metadata !DIExpression()), !dbg !5594
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5595, !tbaa !1899
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 14, !dbg !5596
  %1 = load ptr, ptr %defaults_getter, align 8, !dbg !5596, !tbaa !5323
  %2 = load ptr, ptr %op.addr, align 8, !dbg !5597, !tbaa !1899
  %call = call ptr %1(ptr noundef %2), !dbg !5595
  store ptr %call, ptr %res, align 8, !dbg !5594, !tbaa !1899
  %3 = load ptr, ptr %res, align 8, !dbg !5598, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !5598
  %lnot = xor i1 %tobool, true, !dbg !5598
  %lnot1 = xor i1 %lnot, true, !dbg !5598
  %lnot2 = xor i1 %lnot1, true, !dbg !5598
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5598
  %conv = sext i32 %lnot.ext to i64, !dbg !5598
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5598
  %tobool3 = icmp ne i64 %expval, 0, !dbg !5598
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5600

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !5601
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5601

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %res, align 8, !dbg !5602, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !5602
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !5602
  %5 = load ptr, ptr %arrayidx, align 8, !dbg !5602, !tbaa !1899
  %6 = load ptr, ptr %op.addr, align 8, !dbg !5603, !tbaa !1899
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 12, !dbg !5604
  store ptr %5, ptr %defaults_tuple, align 8, !dbg !5605, !tbaa !3884
  %7 = load ptr, ptr %op.addr, align 8, !dbg !5606, !tbaa !1899
  %defaults_tuple4 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 12, !dbg !5606
  %8 = load ptr, ptr %defaults_tuple4, align 8, !dbg !5606, !tbaa !3884
  call void @Py_INCREF(ptr noundef %8), !dbg !5606
  %9 = load ptr, ptr %res, align 8, !dbg !5607, !tbaa !1899
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1, !dbg !5607
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 1, !dbg !5607
  %10 = load ptr, ptr %arrayidx6, align 8, !dbg !5607, !tbaa !1899
  %11 = load ptr, ptr %op.addr, align 8, !dbg !5608, !tbaa !1899
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 13, !dbg !5609
  store ptr %10, ptr %defaults_kwdict, align 8, !dbg !5610, !tbaa !4431
  %12 = load ptr, ptr %op.addr, align 8, !dbg !5611, !tbaa !1899
  %defaults_kwdict7 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %12, i32 0, i32 13, !dbg !5611
  %13 = load ptr, ptr %defaults_kwdict7, align 8, !dbg !5611, !tbaa !4431
  call void @Py_INCREF(ptr noundef %13), !dbg !5611
  %14 = load ptr, ptr %res, align 8, !dbg !5612, !tbaa !1899
  call void @Py_DECREF(ptr noundef %14), !dbg !5612
  %15 = load i32, ptr %result, align 4, !dbg !5613, !tbaa !1984
  store i32 %15, ptr %retval, align 4, !dbg !5614
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5614

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #11, !dbg !5615
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !5615
  %16 = load i32, ptr %retval, align 4, !dbg !5615
  ret i32 %16, !dbg !5615
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_XINCREF(ptr noundef %op) #3 !dbg !5616 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !5618, metadata !DIExpression()), !dbg !5619
  %0 = load ptr, ptr %op.addr, align 8, !dbg !5620, !tbaa !1899
  %cmp = icmp ne ptr %0, null, !dbg !5622
  br i1 %cmp, label %if.then, label %if.end, !dbg !5623

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !5624, !tbaa !1899
  call void @Py_INCREF(ptr noundef %1), !dbg !5624
  br label %if.end, !dbg !5626

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5627
}

declare !dbg !5628 ptr @PyImport_ImportModuleLevelObject(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %obj, ptr noundef %attr_name) #3 !dbg !5631 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !5633, metadata !DIExpression()), !dbg !5636
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %attr_name.addr, metadata !5634, metadata !DIExpression()), !dbg !5637
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #11, !dbg !5638
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !5635, metadata !DIExpression()), !dbg !5639
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !5640, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !5640
  store ptr %call, ptr %tp, align 8, !dbg !5639, !tbaa !1899
  %1 = load ptr, ptr %tp, align 8, !dbg !5641, !tbaa !1899
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16, !dbg !5641
  %2 = load ptr, ptr %tp_getattro, align 8, !dbg !5641, !tbaa !3256
  %tobool = icmp ne ptr %2, null, !dbg !5641
  %lnot = xor i1 %tobool, true, !dbg !5641
  %lnot1 = xor i1 %lnot, true, !dbg !5641
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5641
  %conv = sext i32 %lnot.ext to i64, !dbg !5641
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5641
  %tobool2 = icmp ne i64 %expval, 0, !dbg !5641
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5643

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %tp, align 8, !dbg !5644, !tbaa !1899
  %tp_getattro3 = getelementptr inbounds %struct._typeobject, ptr %3, i32 0, i32 16, !dbg !5645
  %4 = load ptr, ptr %tp_getattro3, align 8, !dbg !5645, !tbaa !3256
  %5 = load ptr, ptr %obj.addr, align 8, !dbg !5646, !tbaa !1899
  %6 = load ptr, ptr %attr_name.addr, align 8, !dbg !5647, !tbaa !1899
  %call4 = call ptr %4(ptr noundef %5, ptr noundef %6), !dbg !5644
  store ptr %call4, ptr %retval, align 8, !dbg !5648
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5648

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %obj.addr, align 8, !dbg !5649, !tbaa !1899
  %8 = load ptr, ptr %attr_name.addr, align 8, !dbg !5650, !tbaa !1899
  %call5 = call ptr @PyObject_GetAttr(ptr noundef %7, ptr noundef %8), !dbg !5651
  store ptr %call5, ptr %retval, align 8, !dbg !5652
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5652

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #11, !dbg !5653
  %9 = load ptr, ptr %retval, align 8, !dbg !5653
  ret ptr %9, !dbg !5653
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyBool_FromLong(i64 noundef %b) #3 !dbg !5654 {
entry:
  %b.addr = alloca i64, align 8
  store i64 %b, ptr %b.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  %0 = load i64, ptr %b.addr, align 8, !dbg !5660, !tbaa !2597
  %tobool = icmp ne i64 %0, 0, !dbg !5660
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5660

cond.true:                                        ; preds = %entry
  call void @Py_INCREF(ptr noundef @_Py_TrueStruct), !dbg !5661
  br label %cond.end, !dbg !5660

cond.false:                                       ; preds = %entry
  call void @Py_INCREF(ptr noundef @_Py_FalseStruct), !dbg !5662
  br label %cond.end, !dbg !5660

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ @_Py_TrueStruct, %cond.true ], [ @_Py_FalseStruct, %cond.false ], !dbg !5660
  ret ptr %cond, !dbg !5663
}

declare !dbg !5664 ptr @PyObject_GetAttr(ptr noundef, ptr noundef) #1

declare !dbg !5665 ptr @PyMethod_New(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CreateStringTabAndInitStrings() #0 !dbg !5666 {
entry:
  %__pyx_string_tab = alloca [72 x %struct.__Pyx_StringTabEntry], align 16
  call void @llvm.lifetime.start.p0(i64 2880, ptr %__pyx_string_tab) #11, !dbg !5681
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_string_tab, metadata !5668, metadata !DIExpression()), !dbg !5682
  %arrayinit.begin = getelementptr inbounds [72 x %struct.__Pyx_StringTabEntry], ptr %__pyx_string_tab, i64 0, i64 0, !dbg !5683
  %p = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 0, !dbg !5684
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5685, !tbaa !1899
  %__pyx_kp_u_ = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 19, !dbg !5685
  store ptr %__pyx_kp_u_, ptr %p, align 8, !dbg !5684, !tbaa !5686
  %s = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 1, !dbg !5684
  store ptr @__pyx_k_, ptr %s, align 8, !dbg !5684, !tbaa !5688
  %n = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 2, !dbg !5684
  store i64 2, ptr %n, align 8, !dbg !5684, !tbaa !5689
  %encoding = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 3, !dbg !5684
  store ptr null, ptr %encoding, align 8, !dbg !5684, !tbaa !5690
  %is_unicode = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 4, !dbg !5684
  store i8 1, ptr %is_unicode, align 8, !dbg !5684, !tbaa !5691
  %is_str = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 5, !dbg !5684
  store i8 0, ptr %is_str, align 1, !dbg !5684, !tbaa !5692
  %intern = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 6, !dbg !5684
  store i8 0, ptr %intern, align 2, !dbg !5684, !tbaa !5693
  %arrayinit.element = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i64 1, !dbg !5683
  %p1 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 0, !dbg !5694
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5695, !tbaa !1899
  %__pyx_n_s_Cython_Plex_DFA = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 20, !dbg !5695
  store ptr %__pyx_n_s_Cython_Plex_DFA, ptr %p1, align 8, !dbg !5694, !tbaa !5686
  %s2 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 1, !dbg !5694
  store ptr @__pyx_k_Cython_Plex_DFA, ptr %s2, align 8, !dbg !5694, !tbaa !5688
  %n3 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 2, !dbg !5694
  store i64 16, ptr %n3, align 8, !dbg !5694, !tbaa !5689
  %encoding4 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 3, !dbg !5694
  store ptr null, ptr %encoding4, align 8, !dbg !5694, !tbaa !5690
  %is_unicode5 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 4, !dbg !5694
  store i8 0, ptr %is_unicode5, align 8, !dbg !5694, !tbaa !5691
  %is_str6 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 5, !dbg !5694
  store i8 1, ptr %is_str6, align 1, !dbg !5694, !tbaa !5692
  %intern7 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 6, !dbg !5694
  store i8 1, ptr %intern7, align 2, !dbg !5694, !tbaa !5693
  %arrayinit.element8 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i64 1, !dbg !5683
  %p9 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 0, !dbg !5696
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5697, !tbaa !1899
  %__pyx_kp_s_Cython_Plex_DFA_py = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 21, !dbg !5697
  store ptr %__pyx_kp_s_Cython_Plex_DFA_py, ptr %p9, align 8, !dbg !5696, !tbaa !5686
  %s10 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 1, !dbg !5696
  store ptr @__pyx_k_Cython_Plex_DFA_py, ptr %s10, align 8, !dbg !5696, !tbaa !5688
  %n11 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 2, !dbg !5696
  store i64 19, ptr %n11, align 8, !dbg !5696, !tbaa !5689
  %encoding12 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 3, !dbg !5696
  store ptr null, ptr %encoding12, align 8, !dbg !5696, !tbaa !5690
  %is_unicode13 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 4, !dbg !5696
  store i8 0, ptr %is_unicode13, align 8, !dbg !5696, !tbaa !5691
  %is_str14 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 5, !dbg !5696
  store i8 1, ptr %is_str14, align 1, !dbg !5696, !tbaa !5692
  %intern15 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 6, !dbg !5696
  store i8 0, ptr %intern15, align 2, !dbg !5696, !tbaa !5693
  %arrayinit.element16 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i64 1, !dbg !5683
  %p17 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 0, !dbg !5698
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5699, !tbaa !1899
  %__pyx_kp_s_Incompatible_checksums_0x_x_vs_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 22, !dbg !5699
  store ptr %__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, ptr %p17, align 8, !dbg !5698, !tbaa !5686
  %s18 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 1, !dbg !5698
  store ptr @__pyx_k_Incompatible_checksums_0x_x_vs_0, ptr %s18, align 8, !dbg !5698, !tbaa !5688
  %n19 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 2, !dbg !5698
  store i64 117, ptr %n19, align 8, !dbg !5698, !tbaa !5689
  %encoding20 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 3, !dbg !5698
  store ptr null, ptr %encoding20, align 8, !dbg !5698, !tbaa !5690
  %is_unicode21 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 4, !dbg !5698
  store i8 0, ptr %is_unicode21, align 8, !dbg !5698, !tbaa !5691
  %is_str22 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 5, !dbg !5698
  store i8 1, ptr %is_str22, align 1, !dbg !5698, !tbaa !5692
  %intern23 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 6, !dbg !5698
  store i8 0, ptr %intern23, align 2, !dbg !5698, !tbaa !5693
  %arrayinit.element24 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i64 1, !dbg !5683
  %p25 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 0, !dbg !5700
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5701, !tbaa !1899
  %__pyx_n_s_LOWEST_PRIORITY = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 23, !dbg !5701
  store ptr %__pyx_n_s_LOWEST_PRIORITY, ptr %p25, align 8, !dbg !5700, !tbaa !5686
  %s26 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 1, !dbg !5700
  store ptr @__pyx_k_LOWEST_PRIORITY, ptr %s26, align 8, !dbg !5700, !tbaa !5688
  %n27 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 2, !dbg !5700
  store i64 16, ptr %n27, align 8, !dbg !5700, !tbaa !5689
  %encoding28 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 3, !dbg !5700
  store ptr null, ptr %encoding28, align 8, !dbg !5700, !tbaa !5690
  %is_unicode29 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 4, !dbg !5700
  store i8 0, ptr %is_unicode29, align 8, !dbg !5700, !tbaa !5691
  %is_str30 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 5, !dbg !5700
  store i8 1, ptr %is_str30, align 1, !dbg !5700, !tbaa !5692
  %intern31 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 6, !dbg !5700
  store i8 1, ptr %intern31, align 2, !dbg !5700, !tbaa !5693
  %arrayinit.element32 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i64 1, !dbg !5683
  %p33 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 0, !dbg !5702
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5703, !tbaa !1899
  %__pyx_n_s_Machines = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 24, !dbg !5703
  store ptr %__pyx_n_s_Machines, ptr %p33, align 8, !dbg !5702, !tbaa !5686
  %s34 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 1, !dbg !5702
  store ptr @__pyx_k_Machines, ptr %s34, align 8, !dbg !5702, !tbaa !5688
  %n35 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 2, !dbg !5702
  store i64 9, ptr %n35, align 8, !dbg !5702, !tbaa !5689
  %encoding36 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 3, !dbg !5702
  store ptr null, ptr %encoding36, align 8, !dbg !5702, !tbaa !5690
  %is_unicode37 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 4, !dbg !5702
  store i8 0, ptr %is_unicode37, align 8, !dbg !5702, !tbaa !5691
  %is_str38 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 5, !dbg !5702
  store i8 1, ptr %is_str38, align 1, !dbg !5702, !tbaa !5692
  %intern39 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 6, !dbg !5702
  store i8 1, ptr %intern39, align 2, !dbg !5702, !tbaa !5693
  %arrayinit.element40 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i64 1, !dbg !5683
  %p41 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 0, !dbg !5704
  %6 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5705, !tbaa !1899
  %__pyx_n_s_PickleError = getelementptr inbounds %struct.__pyx_mstate, ptr %6, i32 0, i32 25, !dbg !5705
  store ptr %__pyx_n_s_PickleError, ptr %p41, align 8, !dbg !5704, !tbaa !5686
  %s42 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 1, !dbg !5704
  store ptr @__pyx_k_PickleError, ptr %s42, align 8, !dbg !5704, !tbaa !5688
  %n43 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 2, !dbg !5704
  store i64 12, ptr %n43, align 8, !dbg !5704, !tbaa !5689
  %encoding44 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 3, !dbg !5704
  store ptr null, ptr %encoding44, align 8, !dbg !5704, !tbaa !5690
  %is_unicode45 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 4, !dbg !5704
  store i8 0, ptr %is_unicode45, align 8, !dbg !5704, !tbaa !5691
  %is_str46 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 5, !dbg !5704
  store i8 1, ptr %is_str46, align 1, !dbg !5704, !tbaa !5692
  %intern47 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 6, !dbg !5704
  store i8 1, ptr %intern47, align 2, !dbg !5704, !tbaa !5693
  %arrayinit.element48 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i64 1, !dbg !5683
  %p49 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 0, !dbg !5706
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5707, !tbaa !1899
  %__pyx_kp_u_State = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 26, !dbg !5707
  store ptr %__pyx_kp_u_State, ptr %p49, align 8, !dbg !5706, !tbaa !5686
  %s50 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 1, !dbg !5706
  store ptr @__pyx_k_State, ptr %s50, align 8, !dbg !5706, !tbaa !5688
  %n51 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 2, !dbg !5706
  store i64 10, ptr %n51, align 8, !dbg !5706, !tbaa !5689
  %encoding52 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 3, !dbg !5706
  store ptr null, ptr %encoding52, align 8, !dbg !5706, !tbaa !5690
  %is_unicode53 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 4, !dbg !5706
  store i8 1, ptr %is_unicode53, align 8, !dbg !5706, !tbaa !5691
  %is_str54 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 5, !dbg !5706
  store i8 0, ptr %is_str54, align 1, !dbg !5706, !tbaa !5692
  %intern55 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 6, !dbg !5706
  store i8 0, ptr %intern55, align 2, !dbg !5706, !tbaa !5693
  %arrayinit.element56 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i64 1, !dbg !5683
  %p57 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 0, !dbg !5708
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5709, !tbaa !1899
  %__pyx_n_s_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 27, !dbg !5709
  store ptr %__pyx_n_s_StateMap, ptr %p57, align 8, !dbg !5708, !tbaa !5686
  %s58 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 1, !dbg !5708
  store ptr @__pyx_k_StateMap, ptr %s58, align 8, !dbg !5708, !tbaa !5688
  %n59 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 2, !dbg !5708
  store i64 9, ptr %n59, align 8, !dbg !5708, !tbaa !5689
  %encoding60 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 3, !dbg !5708
  store ptr null, ptr %encoding60, align 8, !dbg !5708, !tbaa !5690
  %is_unicode61 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 4, !dbg !5708
  store i8 0, ptr %is_unicode61, align 8, !dbg !5708, !tbaa !5691
  %is_str62 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 5, !dbg !5708
  store i8 1, ptr %is_str62, align 1, !dbg !5708, !tbaa !5692
  %intern63 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 6, !dbg !5708
  store i8 1, ptr %intern63, align 2, !dbg !5708, !tbaa !5693
  %arrayinit.element64 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i64 1, !dbg !5683
  %p65 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 0, !dbg !5710
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5711, !tbaa !1899
  %__pyx_n_s_StateMap___reduce_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 28, !dbg !5711
  store ptr %__pyx_n_s_StateMap___reduce_cython, ptr %p65, align 8, !dbg !5710, !tbaa !5686
  %s66 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 1, !dbg !5710
  store ptr @__pyx_k_StateMap___reduce_cython, ptr %s66, align 8, !dbg !5710, !tbaa !5688
  %n67 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 2, !dbg !5710
  store i64 27, ptr %n67, align 8, !dbg !5710, !tbaa !5689
  %encoding68 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 3, !dbg !5710
  store ptr null, ptr %encoding68, align 8, !dbg !5710, !tbaa !5690
  %is_unicode69 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 4, !dbg !5710
  store i8 0, ptr %is_unicode69, align 8, !dbg !5710, !tbaa !5691
  %is_str70 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 5, !dbg !5710
  store i8 1, ptr %is_str70, align 1, !dbg !5710, !tbaa !5692
  %intern71 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 6, !dbg !5710
  store i8 1, ptr %intern71, align 2, !dbg !5710, !tbaa !5693
  %arrayinit.element72 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i64 1, !dbg !5683
  %p73 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 0, !dbg !5712
  %10 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5713, !tbaa !1899
  %__pyx_n_s_StateMap___setstate_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %10, i32 0, i32 29, !dbg !5713
  store ptr %__pyx_n_s_StateMap___setstate_cython, ptr %p73, align 8, !dbg !5712, !tbaa !5686
  %s74 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 1, !dbg !5712
  store ptr @__pyx_k_StateMap___setstate_cython, ptr %s74, align 8, !dbg !5712, !tbaa !5688
  %n75 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 2, !dbg !5712
  store i64 29, ptr %n75, align 8, !dbg !5712, !tbaa !5689
  %encoding76 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 3, !dbg !5712
  store ptr null, ptr %encoding76, align 8, !dbg !5712, !tbaa !5690
  %is_unicode77 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 4, !dbg !5712
  store i8 0, ptr %is_unicode77, align 8, !dbg !5712, !tbaa !5691
  %is_str78 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 5, !dbg !5712
  store i8 1, ptr %is_str78, align 1, !dbg !5712, !tbaa !5692
  %intern79 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 6, !dbg !5712
  store i8 1, ptr %intern79, align 2, !dbg !5712, !tbaa !5693
  %arrayinit.element80 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i64 1, !dbg !5683
  %p81 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 0, !dbg !5714
  %11 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5715, !tbaa !1899
  %__pyx_n_s_StateMap_dump = getelementptr inbounds %struct.__pyx_mstate, ptr %11, i32 0, i32 30, !dbg !5715
  store ptr %__pyx_n_s_StateMap_dump, ptr %p81, align 8, !dbg !5714, !tbaa !5686
  %s82 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 1, !dbg !5714
  store ptr @__pyx_k_StateMap_dump, ptr %s82, align 8, !dbg !5714, !tbaa !5688
  %n83 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 2, !dbg !5714
  store i64 14, ptr %n83, align 8, !dbg !5714, !tbaa !5689
  %encoding84 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 3, !dbg !5714
  store ptr null, ptr %encoding84, align 8, !dbg !5714, !tbaa !5690
  %is_unicode85 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 4, !dbg !5714
  store i8 0, ptr %is_unicode85, align 8, !dbg !5714, !tbaa !5691
  %is_str86 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 5, !dbg !5714
  store i8 1, ptr %is_str86, align 1, !dbg !5714, !tbaa !5692
  %intern87 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 6, !dbg !5714
  store i8 1, ptr %intern87, align 2, !dbg !5714, !tbaa !5693
  %arrayinit.element88 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i64 1, !dbg !5683
  %p89 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 0, !dbg !5716
  %12 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5717, !tbaa !1899
  %__pyx_n_s_StateMap_new_to_old = getelementptr inbounds %struct.__pyx_mstate, ptr %12, i32 0, i32 31, !dbg !5717
  store ptr %__pyx_n_s_StateMap_new_to_old, ptr %p89, align 8, !dbg !5716, !tbaa !5686
  %s90 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 1, !dbg !5716
  store ptr @__pyx_k_StateMap_new_to_old, ptr %s90, align 8, !dbg !5716, !tbaa !5688
  %n91 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 2, !dbg !5716
  store i64 20, ptr %n91, align 8, !dbg !5716, !tbaa !5689
  %encoding92 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 3, !dbg !5716
  store ptr null, ptr %encoding92, align 8, !dbg !5716, !tbaa !5690
  %is_unicode93 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 4, !dbg !5716
  store i8 0, ptr %is_unicode93, align 8, !dbg !5716, !tbaa !5691
  %is_str94 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 5, !dbg !5716
  store i8 1, ptr %is_str94, align 1, !dbg !5716, !tbaa !5692
  %intern95 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 6, !dbg !5716
  store i8 1, ptr %intern95, align 2, !dbg !5716, !tbaa !5693
  %arrayinit.element96 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i64 1, !dbg !5683
  %p97 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 0, !dbg !5718
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5719, !tbaa !1899
  %__pyx_kp_u_State_Mapping = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 32, !dbg !5719
  store ptr %__pyx_kp_u_State_Mapping, ptr %p97, align 8, !dbg !5718, !tbaa !5686
  %s98 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 1, !dbg !5718
  store ptr @__pyx_k_State_Mapping, ptr %s98, align 8, !dbg !5718, !tbaa !5688
  %n99 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 2, !dbg !5718
  store i64 28, ptr %n99, align 8, !dbg !5718, !tbaa !5689
  %encoding100 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 3, !dbg !5718
  store ptr null, ptr %encoding100, align 8, !dbg !5718, !tbaa !5690
  %is_unicode101 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 4, !dbg !5718
  store i8 1, ptr %is_unicode101, align 8, !dbg !5718, !tbaa !5691
  %is_str102 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 5, !dbg !5718
  store i8 0, ptr %is_str102, align 1, !dbg !5718, !tbaa !5692
  %intern103 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 6, !dbg !5718
  store i8 0, ptr %intern103, align 2, !dbg !5718, !tbaa !5693
  %arrayinit.element104 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i64 1, !dbg !5683
  %p105 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 0, !dbg !5720
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5721, !tbaa !1899
  %__pyx_n_s_TransitionMap = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 33, !dbg !5721
  store ptr %__pyx_n_s_TransitionMap, ptr %p105, align 8, !dbg !5720, !tbaa !5686
  %s106 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 1, !dbg !5720
  store ptr @__pyx_k_TransitionMap, ptr %s106, align 8, !dbg !5720, !tbaa !5688
  %n107 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 2, !dbg !5720
  store i64 14, ptr %n107, align 8, !dbg !5720, !tbaa !5689
  %encoding108 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 3, !dbg !5720
  store ptr null, ptr %encoding108, align 8, !dbg !5720, !tbaa !5690
  %is_unicode109 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 4, !dbg !5720
  store i8 0, ptr %is_unicode109, align 8, !dbg !5720, !tbaa !5691
  %is_str110 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 5, !dbg !5720
  store i8 1, ptr %is_str110, align 1, !dbg !5720, !tbaa !5692
  %intern111 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 6, !dbg !5720
  store i8 1, ptr %intern111, align 2, !dbg !5720, !tbaa !5693
  %arrayinit.element112 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i64 1, !dbg !5683
  %p113 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 0, !dbg !5722
  %15 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5723, !tbaa !1899
  %__pyx_n_s_Transitions = getelementptr inbounds %struct.__pyx_mstate, ptr %15, i32 0, i32 34, !dbg !5723
  store ptr %__pyx_n_s_Transitions, ptr %p113, align 8, !dbg !5722, !tbaa !5686
  %s114 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 1, !dbg !5722
  store ptr @__pyx_k_Transitions, ptr %s114, align 8, !dbg !5722, !tbaa !5688
  %n115 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 2, !dbg !5722
  store i64 12, ptr %n115, align 8, !dbg !5722, !tbaa !5689
  %encoding116 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 3, !dbg !5722
  store ptr null, ptr %encoding116, align 8, !dbg !5722, !tbaa !5690
  %is_unicode117 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 4, !dbg !5722
  store i8 0, ptr %is_unicode117, align 8, !dbg !5722, !tbaa !5691
  %is_str118 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 5, !dbg !5722
  store i8 1, ptr %is_str118, align 1, !dbg !5722, !tbaa !5692
  %intern119 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 6, !dbg !5722
  store i8 1, ptr %intern119, align 2, !dbg !5722, !tbaa !5693
  %arrayinit.element120 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i64 1, !dbg !5683
  %p121 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 0, !dbg !5724
  %16 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5725, !tbaa !1899
  %__pyx_n_s__19 = getelementptr inbounds %struct.__pyx_mstate, ptr %16, i32 0, i32 35, !dbg !5725
  store ptr %__pyx_n_s__19, ptr %p121, align 8, !dbg !5724, !tbaa !5686
  %s122 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 1, !dbg !5724
  store ptr @__pyx_k__19, ptr %s122, align 8, !dbg !5724, !tbaa !5688
  %n123 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 2, !dbg !5724
  store i64 2, ptr %n123, align 8, !dbg !5724, !tbaa !5689
  %encoding124 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 3, !dbg !5724
  store ptr null, ptr %encoding124, align 8, !dbg !5724, !tbaa !5690
  %is_unicode125 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 4, !dbg !5724
  store i8 0, ptr %is_unicode125, align 8, !dbg !5724, !tbaa !5691
  %is_str126 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 5, !dbg !5724
  store i8 1, ptr %is_str126, align 1, !dbg !5724, !tbaa !5692
  %intern127 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 6, !dbg !5724
  store i8 1, ptr %intern127, align 2, !dbg !5724, !tbaa !5693
  %arrayinit.element128 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i64 1, !dbg !5683
  %p129 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 0, !dbg !5726
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5727, !tbaa !1899
  %__pyx_kp_u__2 = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 36, !dbg !5727
  store ptr %__pyx_kp_u__2, ptr %p129, align 8, !dbg !5726, !tbaa !5686
  %s130 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 1, !dbg !5726
  store ptr @__pyx_k__2, ptr %s130, align 8, !dbg !5726, !tbaa !5688
  %n131 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 2, !dbg !5726
  store i64 6, ptr %n131, align 8, !dbg !5726, !tbaa !5689
  %encoding132 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 3, !dbg !5726
  store ptr null, ptr %encoding132, align 8, !dbg !5726, !tbaa !5690
  %is_unicode133 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 4, !dbg !5726
  store i8 1, ptr %is_unicode133, align 8, !dbg !5726, !tbaa !5691
  %is_str134 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 5, !dbg !5726
  store i8 0, ptr %is_str134, align 1, !dbg !5726, !tbaa !5692
  %intern135 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 6, !dbg !5726
  store i8 0, ptr %intern135, align 2, !dbg !5726, !tbaa !5693
  %arrayinit.element136 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i64 1, !dbg !5683
  %p137 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 0, !dbg !5728
  %18 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5729, !tbaa !1899
  %__pyx_kp_u__3 = getelementptr inbounds %struct.__pyx_mstate, ptr %18, i32 0, i32 37, !dbg !5729
  store ptr %__pyx_kp_u__3, ptr %p137, align 8, !dbg !5728, !tbaa !5686
  %s138 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 1, !dbg !5728
  store ptr @__pyx_k__3, ptr %s138, align 8, !dbg !5728, !tbaa !5688
  %n139 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 2, !dbg !5728
  store i64 2, ptr %n139, align 8, !dbg !5728, !tbaa !5689
  %encoding140 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 3, !dbg !5728
  store ptr null, ptr %encoding140, align 8, !dbg !5728, !tbaa !5690
  %is_unicode141 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 4, !dbg !5728
  store i8 1, ptr %is_unicode141, align 8, !dbg !5728, !tbaa !5691
  %is_str142 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 5, !dbg !5728
  store i8 0, ptr %is_str142, align 1, !dbg !5728, !tbaa !5692
  %intern143 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 6, !dbg !5728
  store i8 0, ptr %intern143, align 2, !dbg !5728, !tbaa !5693
  %arrayinit.element144 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i64 1, !dbg !5683
  %p145 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 0, !dbg !5730
  %19 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5731, !tbaa !1899
  %__pyx_n_s__5 = getelementptr inbounds %struct.__pyx_mstate, ptr %19, i32 0, i32 38, !dbg !5731
  store ptr %__pyx_n_s__5, ptr %p145, align 8, !dbg !5730, !tbaa !5686
  %s146 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 1, !dbg !5730
  store ptr @__pyx_k__5, ptr %s146, align 8, !dbg !5730, !tbaa !5688
  %n147 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 2, !dbg !5730
  store i64 1, ptr %n147, align 8, !dbg !5730, !tbaa !5689
  %encoding148 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 3, !dbg !5730
  store ptr null, ptr %encoding148, align 8, !dbg !5730, !tbaa !5690
  %is_unicode149 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 4, !dbg !5730
  store i8 0, ptr %is_unicode149, align 8, !dbg !5730, !tbaa !5691
  %is_str150 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 5, !dbg !5730
  store i8 1, ptr %is_str150, align 1, !dbg !5730, !tbaa !5692
  %intern151 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 6, !dbg !5730
  store i8 1, ptr %intern151, align 2, !dbg !5730, !tbaa !5693
  %arrayinit.element152 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i64 1, !dbg !5683
  %p153 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 0, !dbg !5732
  %20 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5733, !tbaa !1899
  %__pyx_n_s_add_transitions = getelementptr inbounds %struct.__pyx_mstate, ptr %20, i32 0, i32 39, !dbg !5733
  store ptr %__pyx_n_s_add_transitions, ptr %p153, align 8, !dbg !5732, !tbaa !5686
  %s154 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 1, !dbg !5732
  store ptr @__pyx_k_add_transitions, ptr %s154, align 8, !dbg !5732, !tbaa !5688
  %n155 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 2, !dbg !5732
  store i64 16, ptr %n155, align 8, !dbg !5732, !tbaa !5689
  %encoding156 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 3, !dbg !5732
  store ptr null, ptr %encoding156, align 8, !dbg !5732, !tbaa !5690
  %is_unicode157 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 4, !dbg !5732
  store i8 0, ptr %is_unicode157, align 8, !dbg !5732, !tbaa !5691
  %is_str158 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 5, !dbg !5732
  store i8 1, ptr %is_str158, align 1, !dbg !5732, !tbaa !5692
  %intern159 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 6, !dbg !5732
  store i8 1, ptr %intern159, align 2, !dbg !5732, !tbaa !5693
  %arrayinit.element160 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i64 1, !dbg !5683
  %p161 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 0, !dbg !5734
  %21 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5735, !tbaa !1899
  %__pyx_n_s_asyncio_coroutines = getelementptr inbounds %struct.__pyx_mstate, ptr %21, i32 0, i32 40, !dbg !5735
  store ptr %__pyx_n_s_asyncio_coroutines, ptr %p161, align 8, !dbg !5734, !tbaa !5686
  %s162 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 1, !dbg !5734
  store ptr @__pyx_k_asyncio_coroutines, ptr %s162, align 8, !dbg !5734, !tbaa !5688
  %n163 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 2, !dbg !5734
  store i64 19, ptr %n163, align 8, !dbg !5734, !tbaa !5689
  %encoding164 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 3, !dbg !5734
  store ptr null, ptr %encoding164, align 8, !dbg !5734, !tbaa !5690
  %is_unicode165 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 4, !dbg !5734
  store i8 0, ptr %is_unicode165, align 8, !dbg !5734, !tbaa !5691
  %is_str166 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 5, !dbg !5734
  store i8 1, ptr %is_str166, align 1, !dbg !5734, !tbaa !5692
  %intern167 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 6, !dbg !5734
  store i8 1, ptr %intern167, align 2, !dbg !5734, !tbaa !5693
  %arrayinit.element168 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i64 1, !dbg !5683
  %p169 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 0, !dbg !5736
  %22 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5737, !tbaa !1899
  %__pyx_n_s_cline_in_traceback = getelementptr inbounds %struct.__pyx_mstate, ptr %22, i32 0, i32 41, !dbg !5737
  store ptr %__pyx_n_s_cline_in_traceback, ptr %p169, align 8, !dbg !5736, !tbaa !5686
  %s170 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 1, !dbg !5736
  store ptr @__pyx_k_cline_in_traceback, ptr %s170, align 8, !dbg !5736, !tbaa !5688
  %n171 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 2, !dbg !5736
  store i64 19, ptr %n171, align 8, !dbg !5736, !tbaa !5689
  %encoding172 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 3, !dbg !5736
  store ptr null, ptr %encoding172, align 8, !dbg !5736, !tbaa !5690
  %is_unicode173 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 4, !dbg !5736
  store i8 0, ptr %is_unicode173, align 8, !dbg !5736, !tbaa !5691
  %is_str174 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 5, !dbg !5736
  store i8 1, ptr %is_str174, align 1, !dbg !5736, !tbaa !5692
  %intern175 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 6, !dbg !5736
  store i8 1, ptr %intern175, align 2, !dbg !5736, !tbaa !5693
  %arrayinit.element176 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i64 1, !dbg !5683
  %p177 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 0, !dbg !5738
  %23 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5739, !tbaa !1899
  %__pyx_n_s_debug = getelementptr inbounds %struct.__pyx_mstate, ptr %23, i32 0, i32 42, !dbg !5739
  store ptr %__pyx_n_s_debug, ptr %p177, align 8, !dbg !5738, !tbaa !5686
  %s178 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 1, !dbg !5738
  store ptr @__pyx_k_debug, ptr %s178, align 8, !dbg !5738, !tbaa !5688
  %n179 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 2, !dbg !5738
  store i64 6, ptr %n179, align 8, !dbg !5738, !tbaa !5689
  %encoding180 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 3, !dbg !5738
  store ptr null, ptr %encoding180, align 8, !dbg !5738, !tbaa !5690
  %is_unicode181 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 4, !dbg !5738
  store i8 0, ptr %is_unicode181, align 8, !dbg !5738, !tbaa !5691
  %is_str182 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 5, !dbg !5738
  store i8 1, ptr %is_str182, align 1, !dbg !5738, !tbaa !5692
  %intern183 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 6, !dbg !5738
  store i8 1, ptr %intern183, align 2, !dbg !5738, !tbaa !5693
  %arrayinit.element184 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i64 1, !dbg !5683
  %p185 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 0, !dbg !5740
  %24 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5741, !tbaa !1899
  %__pyx_n_s_dict = getelementptr inbounds %struct.__pyx_mstate, ptr %24, i32 0, i32 43, !dbg !5741
  store ptr %__pyx_n_s_dict, ptr %p185, align 8, !dbg !5740, !tbaa !5686
  %s186 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 1, !dbg !5740
  store ptr @__pyx_k_dict, ptr %s186, align 8, !dbg !5740, !tbaa !5688
  %n187 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 2, !dbg !5740
  store i64 9, ptr %n187, align 8, !dbg !5740, !tbaa !5689
  %encoding188 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 3, !dbg !5740
  store ptr null, ptr %encoding188, align 8, !dbg !5740, !tbaa !5690
  %is_unicode189 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 4, !dbg !5740
  store i8 0, ptr %is_unicode189, align 8, !dbg !5740, !tbaa !5691
  %is_str190 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 5, !dbg !5740
  store i8 1, ptr %is_str190, align 1, !dbg !5740, !tbaa !5692
  %intern191 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 6, !dbg !5740
  store i8 1, ptr %intern191, align 2, !dbg !5740, !tbaa !5693
  %arrayinit.element192 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i64 1, !dbg !5683
  %p193 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 0, !dbg !5742
  %25 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5743, !tbaa !1899
  %__pyx_n_s_dict_2 = getelementptr inbounds %struct.__pyx_mstate, ptr %25, i32 0, i32 44, !dbg !5743
  store ptr %__pyx_n_s_dict_2, ptr %p193, align 8, !dbg !5742, !tbaa !5686
  %s194 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 1, !dbg !5742
  store ptr @__pyx_k_dict_2, ptr %s194, align 8, !dbg !5742, !tbaa !5688
  %n195 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 2, !dbg !5742
  store i64 6, ptr %n195, align 8, !dbg !5742, !tbaa !5689
  %encoding196 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 3, !dbg !5742
  store ptr null, ptr %encoding196, align 8, !dbg !5742, !tbaa !5690
  %is_unicode197 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 4, !dbg !5742
  store i8 0, ptr %is_unicode197, align 8, !dbg !5742, !tbaa !5691
  %is_str198 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 5, !dbg !5742
  store i8 1, ptr %is_str198, align 1, !dbg !5742, !tbaa !5692
  %intern199 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 6, !dbg !5742
  store i8 1, ptr %intern199, align 2, !dbg !5742, !tbaa !5693
  %arrayinit.element200 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i64 1, !dbg !5683
  %p201 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 0, !dbg !5744
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5745, !tbaa !1899
  %__pyx_kp_u_disable = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 45, !dbg !5745
  store ptr %__pyx_kp_u_disable, ptr %p201, align 8, !dbg !5744, !tbaa !5686
  %s202 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 1, !dbg !5744
  store ptr @__pyx_k_disable, ptr %s202, align 8, !dbg !5744, !tbaa !5688
  %n203 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 2, !dbg !5744
  store i64 8, ptr %n203, align 8, !dbg !5744, !tbaa !5689
  %encoding204 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 3, !dbg !5744
  store ptr null, ptr %encoding204, align 8, !dbg !5744, !tbaa !5690
  %is_unicode205 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 4, !dbg !5744
  store i8 1, ptr %is_unicode205, align 8, !dbg !5744, !tbaa !5691
  %is_str206 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 5, !dbg !5744
  store i8 0, ptr %is_str206, align 1, !dbg !5744, !tbaa !5692
  %intern207 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 6, !dbg !5744
  store i8 0, ptr %intern207, align 2, !dbg !5744, !tbaa !5693
  %arrayinit.element208 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i64 1, !dbg !5683
  %p209 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 0, !dbg !5746
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5747, !tbaa !1899
  %__pyx_n_s_dump = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 46, !dbg !5747
  store ptr %__pyx_n_s_dump, ptr %p209, align 8, !dbg !5746, !tbaa !5686
  %s210 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 1, !dbg !5746
  store ptr @__pyx_k_dump, ptr %s210, align 8, !dbg !5746, !tbaa !5688
  %n211 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 2, !dbg !5746
  store i64 5, ptr %n211, align 8, !dbg !5746, !tbaa !5689
  %encoding212 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 3, !dbg !5746
  store ptr null, ptr %encoding212, align 8, !dbg !5746, !tbaa !5690
  %is_unicode213 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 4, !dbg !5746
  store i8 0, ptr %is_unicode213, align 8, !dbg !5746, !tbaa !5691
  %is_str214 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 5, !dbg !5746
  store i8 1, ptr %is_str214, align 1, !dbg !5746, !tbaa !5692
  %intern215 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 6, !dbg !5746
  store i8 1, ptr %intern215, align 2, !dbg !5746, !tbaa !5693
  %arrayinit.element216 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i64 1, !dbg !5683
  %p217 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 0, !dbg !5748
  %28 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5749, !tbaa !1899
  %__pyx_kp_u_enable = getelementptr inbounds %struct.__pyx_mstate, ptr %28, i32 0, i32 47, !dbg !5749
  store ptr %__pyx_kp_u_enable, ptr %p217, align 8, !dbg !5748, !tbaa !5686
  %s218 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 1, !dbg !5748
  store ptr @__pyx_k_enable, ptr %s218, align 8, !dbg !5748, !tbaa !5688
  %n219 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 2, !dbg !5748
  store i64 7, ptr %n219, align 8, !dbg !5748, !tbaa !5689
  %encoding220 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 3, !dbg !5748
  store ptr null, ptr %encoding220, align 8, !dbg !5748, !tbaa !5690
  %is_unicode221 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 4, !dbg !5748
  store i8 1, ptr %is_unicode221, align 8, !dbg !5748, !tbaa !5691
  %is_str222 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 5, !dbg !5748
  store i8 0, ptr %is_str222, align 1, !dbg !5748, !tbaa !5692
  %intern223 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 6, !dbg !5748
  store i8 0, ptr %intern223, align 2, !dbg !5748, !tbaa !5693
  %arrayinit.element224 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i64 1, !dbg !5683
  %p225 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 0, !dbg !5750
  %29 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5751, !tbaa !1899
  %__pyx_n_s_file = getelementptr inbounds %struct.__pyx_mstate, ptr %29, i32 0, i32 48, !dbg !5751
  store ptr %__pyx_n_s_file, ptr %p225, align 8, !dbg !5750, !tbaa !5686
  %s226 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 1, !dbg !5750
  store ptr @__pyx_k_file, ptr %s226, align 8, !dbg !5750, !tbaa !5688
  %n227 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 2, !dbg !5750
  store i64 5, ptr %n227, align 8, !dbg !5750, !tbaa !5689
  %encoding228 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 3, !dbg !5750
  store ptr null, ptr %encoding228, align 8, !dbg !5750, !tbaa !5690
  %is_unicode229 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 4, !dbg !5750
  store i8 0, ptr %is_unicode229, align 8, !dbg !5750, !tbaa !5691
  %is_str230 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 5, !dbg !5750
  store i8 1, ptr %is_str230, align 1, !dbg !5750, !tbaa !5692
  %intern231 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 6, !dbg !5750
  store i8 1, ptr %intern231, align 2, !dbg !5750, !tbaa !5693
  %arrayinit.element232 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i64 1, !dbg !5683
  %p233 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 0, !dbg !5752
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5753, !tbaa !1899
  %__pyx_kp_u_gc = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 49, !dbg !5753
  store ptr %__pyx_kp_u_gc, ptr %p233, align 8, !dbg !5752, !tbaa !5686
  %s234 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 1, !dbg !5752
  store ptr @__pyx_k_gc, ptr %s234, align 8, !dbg !5752, !tbaa !5688
  %n235 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 2, !dbg !5752
  store i64 3, ptr %n235, align 8, !dbg !5752, !tbaa !5689
  %encoding236 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 3, !dbg !5752
  store ptr null, ptr %encoding236, align 8, !dbg !5752, !tbaa !5690
  %is_unicode237 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 4, !dbg !5752
  store i8 1, ptr %is_unicode237, align 8, !dbg !5752, !tbaa !5691
  %is_str238 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 5, !dbg !5752
  store i8 0, ptr %is_str238, align 1, !dbg !5752, !tbaa !5692
  %intern239 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 6, !dbg !5752
  store i8 0, ptr %intern239, align 2, !dbg !5752, !tbaa !5693
  %arrayinit.element240 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i64 1, !dbg !5683
  %p241 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 0, !dbg !5754
  %31 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5755, !tbaa !1899
  %__pyx_n_s_get = getelementptr inbounds %struct.__pyx_mstate, ptr %31, i32 0, i32 50, !dbg !5755
  store ptr %__pyx_n_s_get, ptr %p241, align 8, !dbg !5754, !tbaa !5686
  %s242 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 1, !dbg !5754
  store ptr @__pyx_k_get, ptr %s242, align 8, !dbg !5754, !tbaa !5688
  %n243 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 2, !dbg !5754
  store i64 4, ptr %n243, align 8, !dbg !5754, !tbaa !5689
  %encoding244 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 3, !dbg !5754
  store ptr null, ptr %encoding244, align 8, !dbg !5754, !tbaa !5690
  %is_unicode245 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 4, !dbg !5754
  store i8 0, ptr %is_unicode245, align 8, !dbg !5754, !tbaa !5691
  %is_str246 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 5, !dbg !5754
  store i8 1, ptr %is_str246, align 1, !dbg !5754, !tbaa !5692
  %intern247 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 6, !dbg !5754
  store i8 1, ptr %intern247, align 2, !dbg !5754, !tbaa !5693
  %arrayinit.element248 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i64 1, !dbg !5683
  %p249 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 0, !dbg !5756
  %32 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5757, !tbaa !1899
  %__pyx_n_s_get_epsilon = getelementptr inbounds %struct.__pyx_mstate, ptr %32, i32 0, i32 51, !dbg !5757
  store ptr %__pyx_n_s_get_epsilon, ptr %p249, align 8, !dbg !5756, !tbaa !5686
  %s250 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 1, !dbg !5756
  store ptr @__pyx_k_get_epsilon, ptr %s250, align 8, !dbg !5756, !tbaa !5688
  %n251 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 2, !dbg !5756
  store i64 12, ptr %n251, align 8, !dbg !5756, !tbaa !5689
  %encoding252 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 3, !dbg !5756
  store ptr null, ptr %encoding252, align 8, !dbg !5756, !tbaa !5690
  %is_unicode253 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 4, !dbg !5756
  store i8 0, ptr %is_unicode253, align 8, !dbg !5756, !tbaa !5691
  %is_str254 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 5, !dbg !5756
  store i8 1, ptr %is_str254, align 1, !dbg !5756, !tbaa !5692
  %intern255 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 6, !dbg !5756
  store i8 1, ptr %intern255, align 2, !dbg !5756, !tbaa !5693
  %arrayinit.element256 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i64 1, !dbg !5683
  %p257 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 0, !dbg !5758
  %33 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5759, !tbaa !1899
  %__pyx_n_s_getstate = getelementptr inbounds %struct.__pyx_mstate, ptr %33, i32 0, i32 52, !dbg !5759
  store ptr %__pyx_n_s_getstate, ptr %p257, align 8, !dbg !5758, !tbaa !5686
  %s258 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 1, !dbg !5758
  store ptr @__pyx_k_getstate, ptr %s258, align 8, !dbg !5758, !tbaa !5688
  %n259 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 2, !dbg !5758
  store i64 13, ptr %n259, align 8, !dbg !5758, !tbaa !5689
  %encoding260 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 3, !dbg !5758
  store ptr null, ptr %encoding260, align 8, !dbg !5758, !tbaa !5690
  %is_unicode261 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 4, !dbg !5758
  store i8 0, ptr %is_unicode261, align 8, !dbg !5758, !tbaa !5691
  %is_str262 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 5, !dbg !5758
  store i8 1, ptr %is_str262, align 1, !dbg !5758, !tbaa !5692
  %intern263 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 6, !dbg !5758
  store i8 1, ptr %intern263, align 2, !dbg !5758, !tbaa !5693
  %arrayinit.element264 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i64 1, !dbg !5683
  %p265 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 0, !dbg !5760
  %34 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5761, !tbaa !1899
  %__pyx_n_s_id = getelementptr inbounds %struct.__pyx_mstate, ptr %34, i32 0, i32 53, !dbg !5761
  store ptr %__pyx_n_s_id, ptr %p265, align 8, !dbg !5760, !tbaa !5686
  %s266 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 1, !dbg !5760
  store ptr @__pyx_k_id, ptr %s266, align 8, !dbg !5760, !tbaa !5688
  %n267 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 2, !dbg !5760
  store i64 3, ptr %n267, align 8, !dbg !5760, !tbaa !5689
  %encoding268 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 3, !dbg !5760
  store ptr null, ptr %encoding268, align 8, !dbg !5760, !tbaa !5690
  %is_unicode269 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 4, !dbg !5760
  store i8 0, ptr %is_unicode269, align 8, !dbg !5760, !tbaa !5691
  %is_str270 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 5, !dbg !5760
  store i8 1, ptr %is_str270, align 1, !dbg !5760, !tbaa !5692
  %intern271 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 6, !dbg !5760
  store i8 1, ptr %intern271, align 2, !dbg !5760, !tbaa !5693
  %arrayinit.element272 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i64 1, !dbg !5683
  %p273 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 0, !dbg !5762
  %35 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5763, !tbaa !1899
  %__pyx_n_s_import = getelementptr inbounds %struct.__pyx_mstate, ptr %35, i32 0, i32 54, !dbg !5763
  store ptr %__pyx_n_s_import, ptr %p273, align 8, !dbg !5762, !tbaa !5686
  %s274 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 1, !dbg !5762
  store ptr @__pyx_k_import, ptr %s274, align 8, !dbg !5762, !tbaa !5688
  %n275 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 2, !dbg !5762
  store i64 11, ptr %n275, align 8, !dbg !5762, !tbaa !5689
  %encoding276 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 3, !dbg !5762
  store ptr null, ptr %encoding276, align 8, !dbg !5762, !tbaa !5690
  %is_unicode277 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 4, !dbg !5762
  store i8 0, ptr %is_unicode277, align 8, !dbg !5762, !tbaa !5691
  %is_str278 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 5, !dbg !5762
  store i8 1, ptr %is_str278, align 1, !dbg !5762, !tbaa !5692
  %intern279 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 6, !dbg !5762
  store i8 1, ptr %intern279, align 2, !dbg !5762, !tbaa !5693
  %arrayinit.element280 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i64 1, !dbg !5683
  %p281 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 0, !dbg !5764
  %36 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5765, !tbaa !1899
  %__pyx_n_s_is_coroutine = getelementptr inbounds %struct.__pyx_mstate, ptr %36, i32 0, i32 55, !dbg !5765
  store ptr %__pyx_n_s_is_coroutine, ptr %p281, align 8, !dbg !5764, !tbaa !5686
  %s282 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 1, !dbg !5764
  store ptr @__pyx_k_is_coroutine, ptr %s282, align 8, !dbg !5764, !tbaa !5688
  %n283 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 2, !dbg !5764
  store i64 14, ptr %n283, align 8, !dbg !5764, !tbaa !5689
  %encoding284 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 3, !dbg !5764
  store ptr null, ptr %encoding284, align 8, !dbg !5764, !tbaa !5690
  %is_unicode285 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 4, !dbg !5764
  store i8 0, ptr %is_unicode285, align 8, !dbg !5764, !tbaa !5691
  %is_str286 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 5, !dbg !5764
  store i8 1, ptr %is_str286, align 1, !dbg !5764, !tbaa !5692
  %intern287 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 6, !dbg !5764
  store i8 1, ptr %intern287, align 2, !dbg !5764, !tbaa !5693
  %arrayinit.element288 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i64 1, !dbg !5683
  %p289 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 0, !dbg !5766
  %37 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5767, !tbaa !1899
  %__pyx_kp_u_isenabled = getelementptr inbounds %struct.__pyx_mstate, ptr %37, i32 0, i32 56, !dbg !5767
  store ptr %__pyx_kp_u_isenabled, ptr %p289, align 8, !dbg !5766, !tbaa !5686
  %s290 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 1, !dbg !5766
  store ptr @__pyx_k_isenabled, ptr %s290, align 8, !dbg !5766, !tbaa !5688
  %n291 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 2, !dbg !5766
  store i64 10, ptr %n291, align 8, !dbg !5766, !tbaa !5689
  %encoding292 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 3, !dbg !5766
  store ptr null, ptr %encoding292, align 8, !dbg !5766, !tbaa !5690
  %is_unicode293 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 4, !dbg !5766
  store i8 1, ptr %is_unicode293, align 8, !dbg !5766, !tbaa !5691
  %is_str294 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 5, !dbg !5766
  store i8 0, ptr %is_str294, align 1, !dbg !5766, !tbaa !5692
  %intern295 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 6, !dbg !5766
  store i8 0, ptr %intern295, align 2, !dbg !5766, !tbaa !5693
  %arrayinit.element296 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i64 1, !dbg !5683
  %p297 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 0, !dbg !5768
  %38 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5769, !tbaa !1899
  %__pyx_n_s_items = getelementptr inbounds %struct.__pyx_mstate, ptr %38, i32 0, i32 57, !dbg !5769
  store ptr %__pyx_n_s_items, ptr %p297, align 8, !dbg !5768, !tbaa !5686
  %s298 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 1, !dbg !5768
  store ptr @__pyx_k_items, ptr %s298, align 8, !dbg !5768, !tbaa !5688
  %n299 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 2, !dbg !5768
  store i64 6, ptr %n299, align 8, !dbg !5768, !tbaa !5689
  %encoding300 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 3, !dbg !5768
  store ptr null, ptr %encoding300, align 8, !dbg !5768, !tbaa !5690
  %is_unicode301 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 4, !dbg !5768
  store i8 0, ptr %is_unicode301, align 8, !dbg !5768, !tbaa !5691
  %is_str302 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 5, !dbg !5768
  store i8 1, ptr %is_str302, align 1, !dbg !5768, !tbaa !5692
  %intern303 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 6, !dbg !5768
  store i8 1, ptr %intern303, align 2, !dbg !5768, !tbaa !5693
  %arrayinit.element304 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i64 1, !dbg !5683
  %p305 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 0, !dbg !5770
  %39 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5771, !tbaa !1899
  %__pyx_n_s_main = getelementptr inbounds %struct.__pyx_mstate, ptr %39, i32 0, i32 58, !dbg !5771
  store ptr %__pyx_n_s_main, ptr %p305, align 8, !dbg !5770, !tbaa !5686
  %s306 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 1, !dbg !5770
  store ptr @__pyx_k_main, ptr %s306, align 8, !dbg !5770, !tbaa !5688
  %n307 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 2, !dbg !5770
  store i64 9, ptr %n307, align 8, !dbg !5770, !tbaa !5689
  %encoding308 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 3, !dbg !5770
  store ptr null, ptr %encoding308, align 8, !dbg !5770, !tbaa !5690
  %is_unicode309 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 4, !dbg !5770
  store i8 0, ptr %is_unicode309, align 8, !dbg !5770, !tbaa !5691
  %is_str310 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 5, !dbg !5770
  store i8 1, ptr %is_str310, align 1, !dbg !5770, !tbaa !5692
  %intern311 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 6, !dbg !5770
  store i8 1, ptr %intern311, align 2, !dbg !5770, !tbaa !5693
  %arrayinit.element312 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i64 1, !dbg !5683
  %p313 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 0, !dbg !5772
  %40 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5773, !tbaa !1899
  %__pyx_n_s_make_initial_state = getelementptr inbounds %struct.__pyx_mstate, ptr %40, i32 0, i32 59, !dbg !5773
  store ptr %__pyx_n_s_make_initial_state, ptr %p313, align 8, !dbg !5772, !tbaa !5686
  %s314 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 1, !dbg !5772
  store ptr @__pyx_k_make_initial_state, ptr %s314, align 8, !dbg !5772, !tbaa !5688
  %n315 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 2, !dbg !5772
  store i64 19, ptr %n315, align 8, !dbg !5772, !tbaa !5689
  %encoding316 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 3, !dbg !5772
  store ptr null, ptr %encoding316, align 8, !dbg !5772, !tbaa !5690
  %is_unicode317 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 4, !dbg !5772
  store i8 0, ptr %is_unicode317, align 8, !dbg !5772, !tbaa !5691
  %is_str318 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 5, !dbg !5772
  store i8 1, ptr %is_str318, align 1, !dbg !5772, !tbaa !5692
  %intern319 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 6, !dbg !5772
  store i8 1, ptr %intern319, align 2, !dbg !5772, !tbaa !5693
  %arrayinit.element320 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i64 1, !dbg !5683
  %p321 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 0, !dbg !5774
  %41 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5775, !tbaa !1899
  %__pyx_n_s_name = getelementptr inbounds %struct.__pyx_mstate, ptr %41, i32 0, i32 60, !dbg !5775
  store ptr %__pyx_n_s_name, ptr %p321, align 8, !dbg !5774, !tbaa !5686
  %s322 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 1, !dbg !5774
  store ptr @__pyx_k_name, ptr %s322, align 8, !dbg !5774, !tbaa !5688
  %n323 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 2, !dbg !5774
  store i64 9, ptr %n323, align 8, !dbg !5774, !tbaa !5689
  %encoding324 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 3, !dbg !5774
  store ptr null, ptr %encoding324, align 8, !dbg !5774, !tbaa !5690
  %is_unicode325 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 4, !dbg !5774
  store i8 0, ptr %is_unicode325, align 8, !dbg !5774, !tbaa !5691
  %is_str326 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 5, !dbg !5774
  store i8 1, ptr %is_str326, align 1, !dbg !5774, !tbaa !5692
  %intern327 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 6, !dbg !5774
  store i8 1, ptr %intern327, align 2, !dbg !5774, !tbaa !5693
  %arrayinit.element328 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i64 1, !dbg !5683
  %p329 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 0, !dbg !5776
  %42 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5777, !tbaa !1899
  %__pyx_n_s_new = getelementptr inbounds %struct.__pyx_mstate, ptr %42, i32 0, i32 61, !dbg !5777
  store ptr %__pyx_n_s_new, ptr %p329, align 8, !dbg !5776, !tbaa !5686
  %s330 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 1, !dbg !5776
  store ptr @__pyx_k_new, ptr %s330, align 8, !dbg !5776, !tbaa !5688
  %n331 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 2, !dbg !5776
  store i64 8, ptr %n331, align 8, !dbg !5776, !tbaa !5689
  %encoding332 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 3, !dbg !5776
  store ptr null, ptr %encoding332, align 8, !dbg !5776, !tbaa !5690
  %is_unicode333 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 4, !dbg !5776
  store i8 0, ptr %is_unicode333, align 8, !dbg !5776, !tbaa !5691
  %is_str334 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 5, !dbg !5776
  store i8 1, ptr %is_str334, align 1, !dbg !5776, !tbaa !5692
  %intern335 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 6, !dbg !5776
  store i8 1, ptr %intern335, align 2, !dbg !5776, !tbaa !5693
  %arrayinit.element336 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i64 1, !dbg !5683
  %p337 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 0, !dbg !5778
  %43 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5779, !tbaa !1899
  %__pyx_n_s_new_machine = getelementptr inbounds %struct.__pyx_mstate, ptr %43, i32 0, i32 62, !dbg !5779
  store ptr %__pyx_n_s_new_machine, ptr %p337, align 8, !dbg !5778, !tbaa !5686
  %s338 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 1, !dbg !5778
  store ptr @__pyx_k_new_machine, ptr %s338, align 8, !dbg !5778, !tbaa !5688
  %n339 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 2, !dbg !5778
  store i64 12, ptr %n339, align 8, !dbg !5778, !tbaa !5689
  %encoding340 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 3, !dbg !5778
  store ptr null, ptr %encoding340, align 8, !dbg !5778, !tbaa !5690
  %is_unicode341 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 4, !dbg !5778
  store i8 0, ptr %is_unicode341, align 8, !dbg !5778, !tbaa !5691
  %is_str342 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 5, !dbg !5778
  store i8 1, ptr %is_str342, align 1, !dbg !5778, !tbaa !5692
  %intern343 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 6, !dbg !5778
  store i8 1, ptr %intern343, align 2, !dbg !5778, !tbaa !5693
  %arrayinit.element344 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i64 1, !dbg !5683
  %p345 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 0, !dbg !5780
  %44 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5781, !tbaa !1899
  %__pyx_n_s_new_state = getelementptr inbounds %struct.__pyx_mstate, ptr %44, i32 0, i32 63, !dbg !5781
  store ptr %__pyx_n_s_new_state, ptr %p345, align 8, !dbg !5780, !tbaa !5686
  %s346 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 1, !dbg !5780
  store ptr @__pyx_k_new_state, ptr %s346, align 8, !dbg !5780, !tbaa !5688
  %n347 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 2, !dbg !5780
  store i64 10, ptr %n347, align 8, !dbg !5780, !tbaa !5689
  %encoding348 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 3, !dbg !5780
  store ptr null, ptr %encoding348, align 8, !dbg !5780, !tbaa !5690
  %is_unicode349 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 4, !dbg !5780
  store i8 0, ptr %is_unicode349, align 8, !dbg !5780, !tbaa !5691
  %is_str350 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 5, !dbg !5780
  store i8 1, ptr %is_str350, align 1, !dbg !5780, !tbaa !5692
  %intern351 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 6, !dbg !5780
  store i8 1, ptr %intern351, align 2, !dbg !5780, !tbaa !5693
  %arrayinit.element352 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i64 1, !dbg !5683
  %p353 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 0, !dbg !5782
  %45 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5783, !tbaa !1899
  %__pyx_n_s_new_to_old = getelementptr inbounds %struct.__pyx_mstate, ptr %45, i32 0, i32 64, !dbg !5783
  store ptr %__pyx_n_s_new_to_old, ptr %p353, align 8, !dbg !5782, !tbaa !5686
  %s354 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 1, !dbg !5782
  store ptr @__pyx_k_new_to_old, ptr %s354, align 8, !dbg !5782, !tbaa !5688
  %n355 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 2, !dbg !5782
  store i64 11, ptr %n355, align 8, !dbg !5782, !tbaa !5689
  %encoding356 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 3, !dbg !5782
  store ptr null, ptr %encoding356, align 8, !dbg !5782, !tbaa !5690
  %is_unicode357 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 4, !dbg !5782
  store i8 0, ptr %is_unicode357, align 8, !dbg !5782, !tbaa !5691
  %is_str358 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 5, !dbg !5782
  store i8 1, ptr %is_str358, align 1, !dbg !5782, !tbaa !5692
  %intern359 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 6, !dbg !5782
  store i8 1, ptr %intern359, align 2, !dbg !5782, !tbaa !5693
  %arrayinit.element360 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i64 1, !dbg !5683
  %p361 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 0, !dbg !5784
  %46 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5785, !tbaa !1899
  %__pyx_n_s_nfa_to_dfa = getelementptr inbounds %struct.__pyx_mstate, ptr %46, i32 0, i32 65, !dbg !5785
  store ptr %__pyx_n_s_nfa_to_dfa, ptr %p361, align 8, !dbg !5784, !tbaa !5686
  %s362 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 1, !dbg !5784
  store ptr @__pyx_k_nfa_to_dfa, ptr %s362, align 8, !dbg !5784, !tbaa !5688
  %n363 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 2, !dbg !5784
  store i64 11, ptr %n363, align 8, !dbg !5784, !tbaa !5689
  %encoding364 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 3, !dbg !5784
  store ptr null, ptr %encoding364, align 8, !dbg !5784, !tbaa !5690
  %is_unicode365 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 4, !dbg !5784
  store i8 0, ptr %is_unicode365, align 8, !dbg !5784, !tbaa !5691
  %is_str366 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 5, !dbg !5784
  store i8 1, ptr %is_str366, align 1, !dbg !5784, !tbaa !5692
  %intern367 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 6, !dbg !5784
  store i8 1, ptr %intern367, align 2, !dbg !5784, !tbaa !5693
  %arrayinit.element368 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i64 1, !dbg !5683
  %p369 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 0, !dbg !5786
  %47 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5787, !tbaa !1899
  %__pyx_n_u_number = getelementptr inbounds %struct.__pyx_mstate, ptr %47, i32 0, i32 66, !dbg !5787
  store ptr %__pyx_n_u_number, ptr %p369, align 8, !dbg !5786, !tbaa !5686
  %s370 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 1, !dbg !5786
  store ptr @__pyx_k_number, ptr %s370, align 8, !dbg !5786, !tbaa !5688
  %n371 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 2, !dbg !5786
  store i64 7, ptr %n371, align 8, !dbg !5786, !tbaa !5689
  %encoding372 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 3, !dbg !5786
  store ptr null, ptr %encoding372, align 8, !dbg !5786, !tbaa !5690
  %is_unicode373 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 4, !dbg !5786
  store i8 1, ptr %is_unicode373, align 8, !dbg !5786, !tbaa !5691
  %is_str374 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 5, !dbg !5786
  store i8 0, ptr %is_str374, align 1, !dbg !5786, !tbaa !5692
  %intern375 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 6, !dbg !5786
  store i8 1, ptr %intern375, align 2, !dbg !5786, !tbaa !5693
  %arrayinit.element376 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i64 1, !dbg !5683
  %p377 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i32 0, i32 0, !dbg !5788
  %48 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5789, !tbaa !1899
  %__pyx_n_s_old_machine = getelementptr inbounds %struct.__pyx_mstate, ptr %48, i32 0, i32 67, !dbg !5789
  store ptr %__pyx_n_s_old_machine, ptr %p377, align 8, !dbg !5788, !tbaa !5686
  %s378 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i32 0, i32 1, !dbg !5788
  store ptr @__pyx_k_old_machine, ptr %s378, align 8, !dbg !5788, !tbaa !5688
  %n379 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i32 0, i32 2, !dbg !5788
  store i64 12, ptr %n379, align 8, !dbg !5788, !tbaa !5689
  %encoding380 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i32 0, i32 3, !dbg !5788
  store ptr null, ptr %encoding380, align 8, !dbg !5788, !tbaa !5690
  %is_unicode381 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i32 0, i32 4, !dbg !5788
  store i8 0, ptr %is_unicode381, align 8, !dbg !5788, !tbaa !5691
  %is_str382 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i32 0, i32 5, !dbg !5788
  store i8 1, ptr %is_str382, align 1, !dbg !5788, !tbaa !5692
  %intern383 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i32 0, i32 6, !dbg !5788
  store i8 1, ptr %intern383, align 2, !dbg !5788, !tbaa !5693
  %arrayinit.element384 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element376, i64 1, !dbg !5683
  %p385 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i32 0, i32 0, !dbg !5790
  %49 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5791, !tbaa !1899
  %__pyx_n_s_old_state_set = getelementptr inbounds %struct.__pyx_mstate, ptr %49, i32 0, i32 68, !dbg !5791
  store ptr %__pyx_n_s_old_state_set, ptr %p385, align 8, !dbg !5790, !tbaa !5686
  %s386 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i32 0, i32 1, !dbg !5790
  store ptr @__pyx_k_old_state_set, ptr %s386, align 8, !dbg !5790, !tbaa !5688
  %n387 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i32 0, i32 2, !dbg !5790
  store i64 14, ptr %n387, align 8, !dbg !5790, !tbaa !5689
  %encoding388 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i32 0, i32 3, !dbg !5790
  store ptr null, ptr %encoding388, align 8, !dbg !5790, !tbaa !5690
  %is_unicode389 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i32 0, i32 4, !dbg !5790
  store i8 0, ptr %is_unicode389, align 8, !dbg !5790, !tbaa !5691
  %is_str390 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i32 0, i32 5, !dbg !5790
  store i8 1, ptr %is_str390, align 1, !dbg !5790, !tbaa !5692
  %intern391 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i32 0, i32 6, !dbg !5790
  store i8 1, ptr %intern391, align 2, !dbg !5790, !tbaa !5693
  %arrayinit.element392 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element384, i64 1, !dbg !5683
  %p393 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i32 0, i32 0, !dbg !5792
  %50 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5793, !tbaa !1899
  %__pyx_n_s_pickle = getelementptr inbounds %struct.__pyx_mstate, ptr %50, i32 0, i32 69, !dbg !5793
  store ptr %__pyx_n_s_pickle, ptr %p393, align 8, !dbg !5792, !tbaa !5686
  %s394 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i32 0, i32 1, !dbg !5792
  store ptr @__pyx_k_pickle, ptr %s394, align 8, !dbg !5792, !tbaa !5688
  %n395 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i32 0, i32 2, !dbg !5792
  store i64 7, ptr %n395, align 8, !dbg !5792, !tbaa !5689
  %encoding396 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i32 0, i32 3, !dbg !5792
  store ptr null, ptr %encoding396, align 8, !dbg !5792, !tbaa !5690
  %is_unicode397 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i32 0, i32 4, !dbg !5792
  store i8 0, ptr %is_unicode397, align 8, !dbg !5792, !tbaa !5691
  %is_str398 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i32 0, i32 5, !dbg !5792
  store i8 1, ptr %is_str398, align 1, !dbg !5792, !tbaa !5692
  %intern399 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i32 0, i32 6, !dbg !5792
  store i8 1, ptr %intern399, align 2, !dbg !5792, !tbaa !5693
  %arrayinit.element400 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element392, i64 1, !dbg !5683
  %p401 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i32 0, i32 0, !dbg !5794
  %51 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5795, !tbaa !1899
  %__pyx_n_s_pyx_PickleError = getelementptr inbounds %struct.__pyx_mstate, ptr %51, i32 0, i32 70, !dbg !5795
  store ptr %__pyx_n_s_pyx_PickleError, ptr %p401, align 8, !dbg !5794, !tbaa !5686
  %s402 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i32 0, i32 1, !dbg !5794
  store ptr @__pyx_k_pyx_PickleError, ptr %s402, align 8, !dbg !5794, !tbaa !5688
  %n403 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i32 0, i32 2, !dbg !5794
  store i64 18, ptr %n403, align 8, !dbg !5794, !tbaa !5689
  %encoding404 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i32 0, i32 3, !dbg !5794
  store ptr null, ptr %encoding404, align 8, !dbg !5794, !tbaa !5690
  %is_unicode405 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i32 0, i32 4, !dbg !5794
  store i8 0, ptr %is_unicode405, align 8, !dbg !5794, !tbaa !5691
  %is_str406 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i32 0, i32 5, !dbg !5794
  store i8 1, ptr %is_str406, align 1, !dbg !5794, !tbaa !5692
  %intern407 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i32 0, i32 6, !dbg !5794
  store i8 1, ptr %intern407, align 2, !dbg !5794, !tbaa !5693
  %arrayinit.element408 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element400, i64 1, !dbg !5683
  %p409 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i32 0, i32 0, !dbg !5796
  %52 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5797, !tbaa !1899
  %__pyx_n_s_pyx_checksum = getelementptr inbounds %struct.__pyx_mstate, ptr %52, i32 0, i32 71, !dbg !5797
  store ptr %__pyx_n_s_pyx_checksum, ptr %p409, align 8, !dbg !5796, !tbaa !5686
  %s410 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i32 0, i32 1, !dbg !5796
  store ptr @__pyx_k_pyx_checksum, ptr %s410, align 8, !dbg !5796, !tbaa !5688
  %n411 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i32 0, i32 2, !dbg !5796
  store i64 15, ptr %n411, align 8, !dbg !5796, !tbaa !5689
  %encoding412 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i32 0, i32 3, !dbg !5796
  store ptr null, ptr %encoding412, align 8, !dbg !5796, !tbaa !5690
  %is_unicode413 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i32 0, i32 4, !dbg !5796
  store i8 0, ptr %is_unicode413, align 8, !dbg !5796, !tbaa !5691
  %is_str414 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i32 0, i32 5, !dbg !5796
  store i8 1, ptr %is_str414, align 1, !dbg !5796, !tbaa !5692
  %intern415 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i32 0, i32 6, !dbg !5796
  store i8 1, ptr %intern415, align 2, !dbg !5796, !tbaa !5693
  %arrayinit.element416 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element408, i64 1, !dbg !5683
  %p417 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i32 0, i32 0, !dbg !5798
  %53 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5799, !tbaa !1899
  %__pyx_n_s_pyx_result = getelementptr inbounds %struct.__pyx_mstate, ptr %53, i32 0, i32 72, !dbg !5799
  store ptr %__pyx_n_s_pyx_result, ptr %p417, align 8, !dbg !5798, !tbaa !5686
  %s418 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i32 0, i32 1, !dbg !5798
  store ptr @__pyx_k_pyx_result, ptr %s418, align 8, !dbg !5798, !tbaa !5688
  %n419 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i32 0, i32 2, !dbg !5798
  store i64 13, ptr %n419, align 8, !dbg !5798, !tbaa !5689
  %encoding420 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i32 0, i32 3, !dbg !5798
  store ptr null, ptr %encoding420, align 8, !dbg !5798, !tbaa !5690
  %is_unicode421 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i32 0, i32 4, !dbg !5798
  store i8 0, ptr %is_unicode421, align 8, !dbg !5798, !tbaa !5691
  %is_str422 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i32 0, i32 5, !dbg !5798
  store i8 1, ptr %is_str422, align 1, !dbg !5798, !tbaa !5692
  %intern423 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i32 0, i32 6, !dbg !5798
  store i8 1, ptr %intern423, align 2, !dbg !5798, !tbaa !5693
  %arrayinit.element424 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element416, i64 1, !dbg !5683
  %p425 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i32 0, i32 0, !dbg !5800
  %54 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5801, !tbaa !1899
  %__pyx_n_s_pyx_state = getelementptr inbounds %struct.__pyx_mstate, ptr %54, i32 0, i32 73, !dbg !5801
  store ptr %__pyx_n_s_pyx_state, ptr %p425, align 8, !dbg !5800, !tbaa !5686
  %s426 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i32 0, i32 1, !dbg !5800
  store ptr @__pyx_k_pyx_state, ptr %s426, align 8, !dbg !5800, !tbaa !5688
  %n427 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i32 0, i32 2, !dbg !5800
  store i64 12, ptr %n427, align 8, !dbg !5800, !tbaa !5689
  %encoding428 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i32 0, i32 3, !dbg !5800
  store ptr null, ptr %encoding428, align 8, !dbg !5800, !tbaa !5690
  %is_unicode429 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i32 0, i32 4, !dbg !5800
  store i8 0, ptr %is_unicode429, align 8, !dbg !5800, !tbaa !5691
  %is_str430 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i32 0, i32 5, !dbg !5800
  store i8 1, ptr %is_str430, align 1, !dbg !5800, !tbaa !5692
  %intern431 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i32 0, i32 6, !dbg !5800
  store i8 1, ptr %intern431, align 2, !dbg !5800, !tbaa !5693
  %arrayinit.element432 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element424, i64 1, !dbg !5683
  %p433 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i32 0, i32 0, !dbg !5802
  %55 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5803, !tbaa !1899
  %__pyx_n_s_pyx_type = getelementptr inbounds %struct.__pyx_mstate, ptr %55, i32 0, i32 74, !dbg !5803
  store ptr %__pyx_n_s_pyx_type, ptr %p433, align 8, !dbg !5802, !tbaa !5686
  %s434 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i32 0, i32 1, !dbg !5802
  store ptr @__pyx_k_pyx_type, ptr %s434, align 8, !dbg !5802, !tbaa !5688
  %n435 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i32 0, i32 2, !dbg !5802
  store i64 11, ptr %n435, align 8, !dbg !5802, !tbaa !5689
  %encoding436 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i32 0, i32 3, !dbg !5802
  store ptr null, ptr %encoding436, align 8, !dbg !5802, !tbaa !5690
  %is_unicode437 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i32 0, i32 4, !dbg !5802
  store i8 0, ptr %is_unicode437, align 8, !dbg !5802, !tbaa !5691
  %is_str438 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i32 0, i32 5, !dbg !5802
  store i8 1, ptr %is_str438, align 1, !dbg !5802, !tbaa !5692
  %intern439 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i32 0, i32 6, !dbg !5802
  store i8 1, ptr %intern439, align 2, !dbg !5802, !tbaa !5693
  %arrayinit.element440 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element432, i64 1, !dbg !5683
  %p441 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i32 0, i32 0, !dbg !5804
  %56 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5805, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %56, i32 0, i32 75, !dbg !5805
  store ptr %__pyx_n_s_pyx_unpickle_StateMap, ptr %p441, align 8, !dbg !5804, !tbaa !5686
  %s442 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i32 0, i32 1, !dbg !5804
  store ptr @__pyx_k_pyx_unpickle_StateMap, ptr %s442, align 8, !dbg !5804, !tbaa !5688
  %n443 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i32 0, i32 2, !dbg !5804
  store i64 24, ptr %n443, align 8, !dbg !5804, !tbaa !5689
  %encoding444 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i32 0, i32 3, !dbg !5804
  store ptr null, ptr %encoding444, align 8, !dbg !5804, !tbaa !5690
  %is_unicode445 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i32 0, i32 4, !dbg !5804
  store i8 0, ptr %is_unicode445, align 8, !dbg !5804, !tbaa !5691
  %is_str446 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i32 0, i32 5, !dbg !5804
  store i8 1, ptr %is_str446, align 1, !dbg !5804, !tbaa !5692
  %intern447 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i32 0, i32 6, !dbg !5804
  store i8 1, ptr %intern447, align 2, !dbg !5804, !tbaa !5693
  %arrayinit.element448 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element440, i64 1, !dbg !5683
  %p449 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i32 0, i32 0, !dbg !5806
  %57 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5807, !tbaa !1899
  %__pyx_n_s_pyx_vtable = getelementptr inbounds %struct.__pyx_mstate, ptr %57, i32 0, i32 76, !dbg !5807
  store ptr %__pyx_n_s_pyx_vtable, ptr %p449, align 8, !dbg !5806, !tbaa !5686
  %s450 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i32 0, i32 1, !dbg !5806
  store ptr @__pyx_k_pyx_vtable, ptr %s450, align 8, !dbg !5806, !tbaa !5688
  %n451 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i32 0, i32 2, !dbg !5806
  store i64 15, ptr %n451, align 8, !dbg !5806, !tbaa !5689
  %encoding452 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i32 0, i32 3, !dbg !5806
  store ptr null, ptr %encoding452, align 8, !dbg !5806, !tbaa !5690
  %is_unicode453 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i32 0, i32 4, !dbg !5806
  store i8 0, ptr %is_unicode453, align 8, !dbg !5806, !tbaa !5691
  %is_str454 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i32 0, i32 5, !dbg !5806
  store i8 1, ptr %is_str454, align 1, !dbg !5806, !tbaa !5692
  %intern455 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i32 0, i32 6, !dbg !5806
  store i8 1, ptr %intern455, align 2, !dbg !5806, !tbaa !5693
  %arrayinit.element456 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element448, i64 1, !dbg !5683
  %p457 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i32 0, i32 0, !dbg !5808
  %58 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5809, !tbaa !1899
  %__pyx_n_s_reduce = getelementptr inbounds %struct.__pyx_mstate, ptr %58, i32 0, i32 77, !dbg !5809
  store ptr %__pyx_n_s_reduce, ptr %p457, align 8, !dbg !5808, !tbaa !5686
  %s458 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i32 0, i32 1, !dbg !5808
  store ptr @__pyx_k_reduce, ptr %s458, align 8, !dbg !5808, !tbaa !5688
  %n459 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i32 0, i32 2, !dbg !5808
  store i64 11, ptr %n459, align 8, !dbg !5808, !tbaa !5689
  %encoding460 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i32 0, i32 3, !dbg !5808
  store ptr null, ptr %encoding460, align 8, !dbg !5808, !tbaa !5690
  %is_unicode461 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i32 0, i32 4, !dbg !5808
  store i8 0, ptr %is_unicode461, align 8, !dbg !5808, !tbaa !5691
  %is_str462 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i32 0, i32 5, !dbg !5808
  store i8 1, ptr %is_str462, align 1, !dbg !5808, !tbaa !5692
  %intern463 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i32 0, i32 6, !dbg !5808
  store i8 1, ptr %intern463, align 2, !dbg !5808, !tbaa !5693
  %arrayinit.element464 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element456, i64 1, !dbg !5683
  %p465 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i32 0, i32 0, !dbg !5810
  %59 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5811, !tbaa !1899
  %__pyx_n_s_reduce_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %59, i32 0, i32 78, !dbg !5811
  store ptr %__pyx_n_s_reduce_cython, ptr %p465, align 8, !dbg !5810, !tbaa !5686
  %s466 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i32 0, i32 1, !dbg !5810
  store ptr @__pyx_k_reduce_cython, ptr %s466, align 8, !dbg !5810, !tbaa !5688
  %n467 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i32 0, i32 2, !dbg !5810
  store i64 18, ptr %n467, align 8, !dbg !5810, !tbaa !5689
  %encoding468 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i32 0, i32 3, !dbg !5810
  store ptr null, ptr %encoding468, align 8, !dbg !5810, !tbaa !5690
  %is_unicode469 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i32 0, i32 4, !dbg !5810
  store i8 0, ptr %is_unicode469, align 8, !dbg !5810, !tbaa !5691
  %is_str470 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i32 0, i32 5, !dbg !5810
  store i8 1, ptr %is_str470, align 1, !dbg !5810, !tbaa !5692
  %intern471 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i32 0, i32 6, !dbg !5810
  store i8 1, ptr %intern471, align 2, !dbg !5810, !tbaa !5693
  %arrayinit.element472 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element464, i64 1, !dbg !5683
  %p473 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i32 0, i32 0, !dbg !5812
  %60 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5813, !tbaa !1899
  %__pyx_n_s_reduce_ex = getelementptr inbounds %struct.__pyx_mstate, ptr %60, i32 0, i32 79, !dbg !5813
  store ptr %__pyx_n_s_reduce_ex, ptr %p473, align 8, !dbg !5812, !tbaa !5686
  %s474 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i32 0, i32 1, !dbg !5812
  store ptr @__pyx_k_reduce_ex, ptr %s474, align 8, !dbg !5812, !tbaa !5688
  %n475 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i32 0, i32 2, !dbg !5812
  store i64 14, ptr %n475, align 8, !dbg !5812, !tbaa !5689
  %encoding476 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i32 0, i32 3, !dbg !5812
  store ptr null, ptr %encoding476, align 8, !dbg !5812, !tbaa !5690
  %is_unicode477 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i32 0, i32 4, !dbg !5812
  store i8 0, ptr %is_unicode477, align 8, !dbg !5812, !tbaa !5691
  %is_str478 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i32 0, i32 5, !dbg !5812
  store i8 1, ptr %is_str478, align 1, !dbg !5812, !tbaa !5692
  %intern479 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i32 0, i32 6, !dbg !5812
  store i8 1, ptr %intern479, align 2, !dbg !5812, !tbaa !5693
  %arrayinit.element480 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element472, i64 1, !dbg !5683
  %p481 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i32 0, i32 0, !dbg !5814
  %61 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5815, !tbaa !1899
  %__pyx_n_s_self = getelementptr inbounds %struct.__pyx_mstate, ptr %61, i32 0, i32 80, !dbg !5815
  store ptr %__pyx_n_s_self, ptr %p481, align 8, !dbg !5814, !tbaa !5686
  %s482 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i32 0, i32 1, !dbg !5814
  store ptr @__pyx_k_self, ptr %s482, align 8, !dbg !5814, !tbaa !5688
  %n483 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i32 0, i32 2, !dbg !5814
  store i64 5, ptr %n483, align 8, !dbg !5814, !tbaa !5689
  %encoding484 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i32 0, i32 3, !dbg !5814
  store ptr null, ptr %encoding484, align 8, !dbg !5814, !tbaa !5690
  %is_unicode485 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i32 0, i32 4, !dbg !5814
  store i8 0, ptr %is_unicode485, align 8, !dbg !5814, !tbaa !5691
  %is_str486 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i32 0, i32 5, !dbg !5814
  store i8 1, ptr %is_str486, align 1, !dbg !5814, !tbaa !5692
  %intern487 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i32 0, i32 6, !dbg !5814
  store i8 1, ptr %intern487, align 2, !dbg !5814, !tbaa !5693
  %arrayinit.element488 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element480, i64 1, !dbg !5683
  %p489 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i32 0, i32 0, !dbg !5816
  %62 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5817, !tbaa !1899
  %__pyx_n_s_setstate = getelementptr inbounds %struct.__pyx_mstate, ptr %62, i32 0, i32 81, !dbg !5817
  store ptr %__pyx_n_s_setstate, ptr %p489, align 8, !dbg !5816, !tbaa !5686
  %s490 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i32 0, i32 1, !dbg !5816
  store ptr @__pyx_k_setstate, ptr %s490, align 8, !dbg !5816, !tbaa !5688
  %n491 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i32 0, i32 2, !dbg !5816
  store i64 13, ptr %n491, align 8, !dbg !5816, !tbaa !5689
  %encoding492 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i32 0, i32 3, !dbg !5816
  store ptr null, ptr %encoding492, align 8, !dbg !5816, !tbaa !5690
  %is_unicode493 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i32 0, i32 4, !dbg !5816
  store i8 0, ptr %is_unicode493, align 8, !dbg !5816, !tbaa !5691
  %is_str494 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i32 0, i32 5, !dbg !5816
  store i8 1, ptr %is_str494, align 1, !dbg !5816, !tbaa !5692
  %intern495 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i32 0, i32 6, !dbg !5816
  store i8 1, ptr %intern495, align 2, !dbg !5816, !tbaa !5693
  %arrayinit.element496 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element488, i64 1, !dbg !5683
  %p497 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i32 0, i32 0, !dbg !5818
  %63 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5819, !tbaa !1899
  %__pyx_n_s_setstate_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %63, i32 0, i32 82, !dbg !5819
  store ptr %__pyx_n_s_setstate_cython, ptr %p497, align 8, !dbg !5818, !tbaa !5686
  %s498 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i32 0, i32 1, !dbg !5818
  store ptr @__pyx_k_setstate_cython, ptr %s498, align 8, !dbg !5818, !tbaa !5688
  %n499 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i32 0, i32 2, !dbg !5818
  store i64 20, ptr %n499, align 8, !dbg !5818, !tbaa !5689
  %encoding500 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i32 0, i32 3, !dbg !5818
  store ptr null, ptr %encoding500, align 8, !dbg !5818, !tbaa !5690
  %is_unicode501 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i32 0, i32 4, !dbg !5818
  store i8 0, ptr %is_unicode501, align 8, !dbg !5818, !tbaa !5691
  %is_str502 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i32 0, i32 5, !dbg !5818
  store i8 1, ptr %is_str502, align 1, !dbg !5818, !tbaa !5692
  %intern503 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i32 0, i32 6, !dbg !5818
  store i8 1, ptr %intern503, align 2, !dbg !5818, !tbaa !5693
  %arrayinit.element504 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element496, i64 1, !dbg !5683
  %p505 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i32 0, i32 0, !dbg !5820
  %64 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5821, !tbaa !1899
  %__pyx_n_s_state = getelementptr inbounds %struct.__pyx_mstate, ptr %64, i32 0, i32 83, !dbg !5821
  store ptr %__pyx_n_s_state, ptr %p505, align 8, !dbg !5820, !tbaa !5686
  %s506 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i32 0, i32 1, !dbg !5820
  store ptr @__pyx_k_state, ptr %s506, align 8, !dbg !5820, !tbaa !5688
  %n507 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i32 0, i32 2, !dbg !5820
  store i64 6, ptr %n507, align 8, !dbg !5820, !tbaa !5689
  %encoding508 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i32 0, i32 3, !dbg !5820
  store ptr null, ptr %encoding508, align 8, !dbg !5820, !tbaa !5690
  %is_unicode509 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i32 0, i32 4, !dbg !5820
  store i8 0, ptr %is_unicode509, align 8, !dbg !5820, !tbaa !5691
  %is_str510 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i32 0, i32 5, !dbg !5820
  store i8 1, ptr %is_str510, align 1, !dbg !5820, !tbaa !5692
  %intern511 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i32 0, i32 6, !dbg !5820
  store i8 1, ptr %intern511, align 2, !dbg !5820, !tbaa !5693
  %arrayinit.element512 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element504, i64 1, !dbg !5683
  %p513 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i32 0, i32 0, !dbg !5822
  %65 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5823, !tbaa !1899
  %__pyx_n_s_state_set_str = getelementptr inbounds %struct.__pyx_mstate, ptr %65, i32 0, i32 84, !dbg !5823
  store ptr %__pyx_n_s_state_set_str, ptr %p513, align 8, !dbg !5822, !tbaa !5686
  %s514 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i32 0, i32 1, !dbg !5822
  store ptr @__pyx_k_state_set_str, ptr %s514, align 8, !dbg !5822, !tbaa !5688
  %n515 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i32 0, i32 2, !dbg !5822
  store i64 14, ptr %n515, align 8, !dbg !5822, !tbaa !5689
  %encoding516 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i32 0, i32 3, !dbg !5822
  store ptr null, ptr %encoding516, align 8, !dbg !5822, !tbaa !5690
  %is_unicode517 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i32 0, i32 4, !dbg !5822
  store i8 0, ptr %is_unicode517, align 8, !dbg !5822, !tbaa !5691
  %is_str518 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i32 0, i32 5, !dbg !5822
  store i8 1, ptr %is_str518, align 1, !dbg !5822, !tbaa !5692
  %intern519 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i32 0, i32 6, !dbg !5822
  store i8 1, ptr %intern519, align 2, !dbg !5822, !tbaa !5693
  %arrayinit.element520 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element512, i64 1, !dbg !5683
  %p521 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i32 0, i32 0, !dbg !5824
  %66 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5825, !tbaa !1899
  %__pyx_kp_s_stringsource = getelementptr inbounds %struct.__pyx_mstate, ptr %66, i32 0, i32 85, !dbg !5825
  store ptr %__pyx_kp_s_stringsource, ptr %p521, align 8, !dbg !5824, !tbaa !5686
  %s522 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i32 0, i32 1, !dbg !5824
  store ptr @__pyx_k_stringsource, ptr %s522, align 8, !dbg !5824, !tbaa !5688
  %n523 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i32 0, i32 2, !dbg !5824
  store i64 15, ptr %n523, align 8, !dbg !5824, !tbaa !5689
  %encoding524 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i32 0, i32 3, !dbg !5824
  store ptr null, ptr %encoding524, align 8, !dbg !5824, !tbaa !5690
  %is_unicode525 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i32 0, i32 4, !dbg !5824
  store i8 0, ptr %is_unicode525, align 8, !dbg !5824, !tbaa !5691
  %is_str526 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i32 0, i32 5, !dbg !5824
  store i8 1, ptr %is_str526, align 1, !dbg !5824, !tbaa !5692
  %intern527 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i32 0, i32 6, !dbg !5824
  store i8 0, ptr %intern527, align 2, !dbg !5824, !tbaa !5693
  %arrayinit.element528 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element520, i64 1, !dbg !5683
  %p529 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i32 0, i32 0, !dbg !5826
  %67 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5827, !tbaa !1899
  %__pyx_n_s_transitions = getelementptr inbounds %struct.__pyx_mstate, ptr %67, i32 0, i32 86, !dbg !5827
  store ptr %__pyx_n_s_transitions, ptr %p529, align 8, !dbg !5826, !tbaa !5686
  %s530 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i32 0, i32 1, !dbg !5826
  store ptr @__pyx_k_transitions, ptr %s530, align 8, !dbg !5826, !tbaa !5688
  %n531 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i32 0, i32 2, !dbg !5826
  store i64 12, ptr %n531, align 8, !dbg !5826, !tbaa !5689
  %encoding532 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i32 0, i32 3, !dbg !5826
  store ptr null, ptr %encoding532, align 8, !dbg !5826, !tbaa !5690
  %is_unicode533 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i32 0, i32 4, !dbg !5826
  store i8 0, ptr %is_unicode533, align 8, !dbg !5826, !tbaa !5691
  %is_str534 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i32 0, i32 5, !dbg !5826
  store i8 1, ptr %is_str534, align 1, !dbg !5826, !tbaa !5692
  %intern535 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i32 0, i32 6, !dbg !5826
  store i8 1, ptr %intern535, align 2, !dbg !5826, !tbaa !5693
  %arrayinit.element536 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element528, i64 1, !dbg !5683
  %p537 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i32 0, i32 0, !dbg !5828
  %68 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5829, !tbaa !1899
  %__pyx_n_s_update = getelementptr inbounds %struct.__pyx_mstate, ptr %68, i32 0, i32 87, !dbg !5829
  store ptr %__pyx_n_s_update, ptr %p537, align 8, !dbg !5828, !tbaa !5686
  %s538 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i32 0, i32 1, !dbg !5828
  store ptr @__pyx_k_update, ptr %s538, align 8, !dbg !5828, !tbaa !5688
  %n539 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i32 0, i32 2, !dbg !5828
  store i64 7, ptr %n539, align 8, !dbg !5828, !tbaa !5689
  %encoding540 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i32 0, i32 3, !dbg !5828
  store ptr null, ptr %encoding540, align 8, !dbg !5828, !tbaa !5690
  %is_unicode541 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i32 0, i32 4, !dbg !5828
  store i8 0, ptr %is_unicode541, align 8, !dbg !5828, !tbaa !5691
  %is_str542 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i32 0, i32 5, !dbg !5828
  store i8 1, ptr %is_str542, align 1, !dbg !5828, !tbaa !5692
  %intern543 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i32 0, i32 6, !dbg !5828
  store i8 1, ptr %intern543, align 2, !dbg !5828, !tbaa !5693
  %arrayinit.element544 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element536, i64 1, !dbg !5683
  %p545 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i32 0, i32 0, !dbg !5830
  %69 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5831, !tbaa !1899
  %__pyx_n_s_use_setstate = getelementptr inbounds %struct.__pyx_mstate, ptr %69, i32 0, i32 88, !dbg !5831
  store ptr %__pyx_n_s_use_setstate, ptr %p545, align 8, !dbg !5830, !tbaa !5686
  %s546 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i32 0, i32 1, !dbg !5830
  store ptr @__pyx_k_use_setstate, ptr %s546, align 8, !dbg !5830, !tbaa !5688
  %n547 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i32 0, i32 2, !dbg !5830
  store i64 13, ptr %n547, align 8, !dbg !5830, !tbaa !5689
  %encoding548 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i32 0, i32 3, !dbg !5830
  store ptr null, ptr %encoding548, align 8, !dbg !5830, !tbaa !5690
  %is_unicode549 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i32 0, i32 4, !dbg !5830
  store i8 0, ptr %is_unicode549, align 8, !dbg !5830, !tbaa !5691
  %is_str550 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i32 0, i32 5, !dbg !5830
  store i8 1, ptr %is_str550, align 1, !dbg !5830, !tbaa !5692
  %intern551 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i32 0, i32 6, !dbg !5830
  store i8 1, ptr %intern551, align 2, !dbg !5830, !tbaa !5693
  %arrayinit.element552 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element544, i64 1, !dbg !5683
  %p553 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i32 0, i32 0, !dbg !5832
  %70 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5833, !tbaa !1899
  %__pyx_n_s_write = getelementptr inbounds %struct.__pyx_mstate, ptr %70, i32 0, i32 89, !dbg !5833
  store ptr %__pyx_n_s_write, ptr %p553, align 8, !dbg !5832, !tbaa !5686
  %s554 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i32 0, i32 1, !dbg !5832
  store ptr @__pyx_k_write, ptr %s554, align 8, !dbg !5832, !tbaa !5688
  %n555 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i32 0, i32 2, !dbg !5832
  store i64 6, ptr %n555, align 8, !dbg !5832, !tbaa !5689
  %encoding556 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i32 0, i32 3, !dbg !5832
  store ptr null, ptr %encoding556, align 8, !dbg !5832, !tbaa !5690
  %is_unicode557 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i32 0, i32 4, !dbg !5832
  store i8 0, ptr %is_unicode557, align 8, !dbg !5832, !tbaa !5691
  %is_str558 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i32 0, i32 5, !dbg !5832
  store i8 1, ptr %is_str558, align 1, !dbg !5832, !tbaa !5692
  %intern559 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i32 0, i32 6, !dbg !5832
  store i8 1, ptr %intern559, align 2, !dbg !5832, !tbaa !5693
  %arrayinit.element560 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element552, i64 1, !dbg !5683
  call void @llvm.memset.p0.i64(ptr align 8 %arrayinit.element560, i8 0, i64 40, i1 false), !dbg !5683
  %arraydecay = getelementptr inbounds [72 x %struct.__Pyx_StringTabEntry], ptr %__pyx_string_tab, i64 0, i64 0, !dbg !5834
  %call = call i32 @__Pyx_InitStrings(ptr noundef %arraydecay), !dbg !5835
  call void @llvm.lifetime.end.p0(i64 2880, ptr %__pyx_string_tab) #11, !dbg !5836
  ret i32 %call, !dbg !5837
}

declare !dbg !5838 ptr @PyLong_FromLong(i64 noundef) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitStrings(ptr noundef %t) #0 !dbg !5840 {
entry:
  %t.addr = alloca ptr, align 8
  store ptr %t, ptr %t.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  br label %while.cond, !dbg !5847

while.cond:                                       ; preds = %while.body, %entry
  %0 = load ptr, ptr %t.addr, align 8, !dbg !5848, !tbaa !1899
  %p = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %0, i32 0, i32 0, !dbg !5849
  %1 = load ptr, ptr %p, align 8, !dbg !5849, !tbaa !5686
  %tobool = icmp ne ptr %1, null, !dbg !5847
  br i1 %tobool, label %while.body, label %while.end, !dbg !5847

while.body:                                       ; preds = %while.cond
  %2 = load ptr, ptr %t.addr, align 8, !dbg !5850, !tbaa !1899
  %3 = load ptr, ptr %t.addr, align 8, !dbg !5852, !tbaa !1899
  %p1 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %3, i32 0, i32 0, !dbg !5853
  %4 = load ptr, ptr %p1, align 8, !dbg !5853, !tbaa !5686
  %call = call i32 @__Pyx_InitString(ptr noundef byval(%struct.__Pyx_StringTabEntry) align 8 %2, ptr noundef %4), !dbg !5854
  %5 = load ptr, ptr %t.addr, align 8, !dbg !5855, !tbaa !1899
  %incdec.ptr = getelementptr %struct.__Pyx_StringTabEntry, ptr %5, i32 1, !dbg !5855
  store ptr %incdec.ptr, ptr %t.addr, align 8, !dbg !5855, !tbaa !1899
  br label %while.cond, !dbg !5847, !llvm.loop !5856

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !5858
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitString(ptr noundef byval(%struct.__Pyx_StringTabEntry) align 8 %t, ptr noundef %str) #0 !dbg !5859 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca ptr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !5863, metadata !DIExpression()), !dbg !5865
  store ptr %str, ptr %str.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %str.addr, metadata !5864, metadata !DIExpression()), !dbg !5866
  %is_unicode = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 4, !dbg !5867
  %0 = load i8, ptr %is_unicode, align 8, !dbg !5867, !tbaa !5691
  %conv = sext i8 %0 to i32, !dbg !5869
  %is_str = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 5, !dbg !5870
  %1 = load i8, ptr %is_str, align 1, !dbg !5870, !tbaa !5692
  %conv1 = sext i8 %1 to i32, !dbg !5871
  %or = or i32 %conv, %conv1, !dbg !5872
  %tobool = icmp ne i32 %or, 0, !dbg !5872
  br i1 %tobool, label %if.then, label %if.else15, !dbg !5873

if.then:                                          ; preds = %entry
  %intern = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 6, !dbg !5874
  %2 = load i8, ptr %intern, align 2, !dbg !5874, !tbaa !5693
  %tobool2 = icmp ne i8 %2, 0, !dbg !5877
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5878

if.then3:                                         ; preds = %if.then
  %s = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !5879
  %3 = load ptr, ptr %s, align 8, !dbg !5879, !tbaa !5688
  %call = call ptr @PyUnicode_InternFromString(ptr noundef %3), !dbg !5881
  %4 = load ptr, ptr %str.addr, align 8, !dbg !5882, !tbaa !1899
  store ptr %call, ptr %4, align 8, !dbg !5883, !tbaa !1899
  br label %if.end14, !dbg !5884

if.else:                                          ; preds = %if.then
  %encoding = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 3, !dbg !5885
  %5 = load ptr, ptr %encoding, align 8, !dbg !5885, !tbaa !5690
  %tobool4 = icmp ne ptr %5, null, !dbg !5887
  br i1 %tobool4, label %if.then5, label %if.else9, !dbg !5888

if.then5:                                         ; preds = %if.else
  %s6 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !5889
  %6 = load ptr, ptr %s6, align 8, !dbg !5889, !tbaa !5688
  %n = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 2, !dbg !5891
  %7 = load i64, ptr %n, align 8, !dbg !5891, !tbaa !5689
  %sub = sub i64 %7, 1, !dbg !5892
  %encoding7 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 3, !dbg !5893
  %8 = load ptr, ptr %encoding7, align 8, !dbg !5893, !tbaa !5690
  %call8 = call ptr @PyUnicode_Decode(ptr noundef %6, i64 noundef %sub, ptr noundef %8, ptr noundef null), !dbg !5894
  %9 = load ptr, ptr %str.addr, align 8, !dbg !5895, !tbaa !1899
  store ptr %call8, ptr %9, align 8, !dbg !5896, !tbaa !1899
  br label %if.end, !dbg !5897

if.else9:                                         ; preds = %if.else
  %s10 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !5898
  %10 = load ptr, ptr %s10, align 8, !dbg !5898, !tbaa !5688
  %n11 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 2, !dbg !5900
  %11 = load i64, ptr %n11, align 8, !dbg !5900, !tbaa !5689
  %sub12 = sub i64 %11, 1, !dbg !5901
  %call13 = call ptr @PyUnicode_FromStringAndSize(ptr noundef %10, i64 noundef %sub12), !dbg !5902
  %12 = load ptr, ptr %str.addr, align 8, !dbg !5903, !tbaa !1899
  store ptr %call13, ptr %12, align 8, !dbg !5904, !tbaa !1899
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then5
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then3
  br label %if.end20, !dbg !5905

if.else15:                                        ; preds = %entry
  %s16 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !5906
  %13 = load ptr, ptr %s16, align 8, !dbg !5906, !tbaa !5688
  %n17 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 2, !dbg !5908
  %14 = load i64, ptr %n17, align 8, !dbg !5908, !tbaa !5689
  %sub18 = sub i64 %14, 1, !dbg !5909
  %call19 = call ptr @PyBytes_FromStringAndSize(ptr noundef %13, i64 noundef %sub18), !dbg !5910
  %15 = load ptr, ptr %str.addr, align 8, !dbg !5911, !tbaa !1899
  store ptr %call19, ptr %15, align 8, !dbg !5912, !tbaa !1899
  br label %if.end20

if.end20:                                         ; preds = %if.else15, %if.end14
  %16 = load ptr, ptr %str.addr, align 8, !dbg !5913, !tbaa !1899
  %17 = load ptr, ptr %16, align 8, !dbg !5915, !tbaa !1899
  %tobool21 = icmp ne ptr %17, null, !dbg !5915
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !5916

if.then22:                                        ; preds = %if.end20
  store i32 -1, ptr %retval, align 4, !dbg !5917
  br label %return, !dbg !5917

if.end23:                                         ; preds = %if.end20
  %18 = load ptr, ptr %str.addr, align 8, !dbg !5918, !tbaa !1899
  %19 = load ptr, ptr %18, align 8, !dbg !5920, !tbaa !1899
  %call24 = call i64 @PyObject_Hash(ptr noundef %19), !dbg !5921
  %cmp = icmp eq i64 %call24, -1, !dbg !5922
  br i1 %cmp, label %if.then26, label %if.end27, !dbg !5923

if.then26:                                        ; preds = %if.end23
  store i32 -1, ptr %retval, align 4, !dbg !5924
  br label %return, !dbg !5924

if.end27:                                         ; preds = %if.end23
  store i32 0, ptr %retval, align 4, !dbg !5925
  br label %return, !dbg !5925

return:                                           ; preds = %if.end27, %if.then26, %if.then22
  %20 = load i32, ptr %retval, align 4, !dbg !5926
  ret i32 %20, !dbg !5926
}

declare !dbg !5927 ptr @PyUnicode_Decode(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #1

declare !dbg !5930 i64 @PyObject_Hash(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetBuiltinName(ptr noundef %name) #0 !dbg !5931 {
entry:
  %name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !5933, metadata !DIExpression()), !dbg !5935
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !5936
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5934, metadata !DIExpression()), !dbg !5937
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5938, !tbaa !1899
  %__pyx_b = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 1, !dbg !5938
  %1 = load ptr, ptr %__pyx_b, align 8, !dbg !5938, !tbaa !2032
  %2 = load ptr, ptr %name.addr, align 8, !dbg !5939, !tbaa !1899
  %call = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %1, ptr noundef %2), !dbg !5940
  store ptr %call, ptr %result, align 8, !dbg !5937, !tbaa !1899
  %3 = load ptr, ptr %result, align 8, !dbg !5941, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !5941
  %lnot = xor i1 %tobool, true, !dbg !5941
  %lnot1 = xor i1 %lnot, true, !dbg !5941
  %lnot2 = xor i1 %lnot1, true, !dbg !5941
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5941
  %conv = sext i32 %lnot.ext to i64, !dbg !5941
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5941
  %tobool3 = icmp ne i64 %expval, 0, !dbg !5941
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !5943

land.lhs.true:                                    ; preds = %entry
  %call4 = call ptr @PyErr_Occurred(), !dbg !5944
  %tobool5 = icmp ne ptr %call4, null, !dbg !5944
  br i1 %tobool5, label %if.end, label %if.then, !dbg !5945

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr @PyExc_NameError, align 8, !dbg !5946, !tbaa !1899
  %5 = load ptr, ptr %name.addr, align 8, !dbg !5948, !tbaa !1899
  %call6 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.66, ptr noundef %5), !dbg !5949
  br label %if.end, !dbg !5950

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load ptr, ptr %result, align 8, !dbg !5951, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !5952
  ret ptr %6, !dbg !5953
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %obj, ptr noundef %attr_name) #3 !dbg !5954 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !5956, metadata !DIExpression()), !dbg !5960
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %attr_name.addr, metadata !5957, metadata !DIExpression()), !dbg !5961
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !5962
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5958, metadata !DIExpression()), !dbg !5963
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #11, !dbg !5964
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !5959, metadata !DIExpression()), !dbg !5965
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !5966, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !5966
  store ptr %call, ptr %tp, align 8, !dbg !5965, !tbaa !1899
  %1 = load ptr, ptr %tp, align 8, !dbg !5967, !tbaa !1899
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16, !dbg !5967
  %2 = load ptr, ptr %tp_getattro, align 8, !dbg !5967, !tbaa !3256
  %cmp = icmp eq ptr %2, @PyObject_GenericGetAttr, !dbg !5967
  %lnot = xor i1 %cmp, true, !dbg !5967
  %lnot1 = xor i1 %lnot, true, !dbg !5967
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5967
  %conv = sext i32 %lnot.ext to i64, !dbg !5967
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5967
  %tobool = icmp ne i64 %expval, 0, !dbg !5967
  br i1 %tobool, label %if.then, label %if.end, !dbg !5969

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %obj.addr, align 8, !dbg !5970, !tbaa !1899
  %4 = load ptr, ptr %attr_name.addr, align 8, !dbg !5972, !tbaa !1899
  %call2 = call ptr @_PyObject_GenericGetAttrWithDict(ptr noundef %3, ptr noundef %4, ptr noundef null, i32 noundef 1), !dbg !5973
  store ptr %call2, ptr %retval, align 8, !dbg !5974
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5974

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %obj.addr, align 8, !dbg !5975, !tbaa !1899
  %6 = load ptr, ptr %attr_name.addr, align 8, !dbg !5976, !tbaa !1899
  %call3 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %5, ptr noundef %6), !dbg !5977
  store ptr %call3, ptr %result, align 8, !dbg !5978, !tbaa !1899
  %7 = load ptr, ptr %result, align 8, !dbg !5979, !tbaa !1899
  %tobool4 = icmp ne ptr %7, null, !dbg !5979
  %lnot5 = xor i1 %tobool4, true, !dbg !5979
  %lnot7 = xor i1 %lnot5, true, !dbg !5979
  %lnot9 = xor i1 %lnot7, true, !dbg !5979
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5979
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !5979
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !5979
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !5979
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !5981

if.then14:                                        ; preds = %if.end
  call void @__Pyx_PyObject_GetAttrStr_ClearAttributeError(), !dbg !5982
  br label %if.end15, !dbg !5984

if.end15:                                         ; preds = %if.then14, %if.end
  %8 = load ptr, ptr %result, align 8, !dbg !5985, !tbaa !1899
  store ptr %8, ptr %retval, align 8, !dbg !5986
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5986

cleanup:                                          ; preds = %if.end15, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #11, !dbg !5987
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !5987
  %9 = load ptr, ptr %retval, align 8, !dbg !5987
  ret ptr %9, !dbg !5987
}

declare ptr @PyObject_GenericGetAttr(ptr noundef, ptr noundef) #1

declare !dbg !5988 ptr @_PyObject_GenericGetAttrWithDict(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_PyObject_GetAttrStr_ClearAttributeError() #0 !dbg !5991 {
entry:
  %__pyx_tstate = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #11, !dbg !5994
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !5993, metadata !DIExpression()), !dbg !5994
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !5995
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !5995, !tbaa !1899
  %0 = load ptr, ptr %__pyx_tstate, align 8, !dbg !5996, !tbaa !1899
  %1 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !5996, !tbaa !1899
  %call1 = call i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %0, ptr noundef %1), !dbg !5996
  %tobool = icmp ne i32 %call1, 0, !dbg !5996
  %lnot = xor i1 %tobool, true, !dbg !5996
  %lnot2 = xor i1 %lnot, true, !dbg !5996
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5996
  %conv = sext i32 %lnot.ext to i64, !dbg !5996
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5996
  %tobool3 = icmp ne i64 %expval, 0, !dbg !5996
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5998

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__pyx_tstate, align 8, !dbg !5999, !tbaa !1899
  call void @__Pyx_ErrRestoreInState(ptr noundef %2, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !5999
  br label %if.end, !dbg !5999

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #11, !dbg !6000
  ret void, !dbg !6000
}

declare !dbg !6001 ptr @_PyThreadState_UncheckedGet() #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %tstate, ptr noundef %err) #3 !dbg !6002 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %result = alloca i32, align 4
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !6006, metadata !DIExpression()), !dbg !6010
  store ptr %err, ptr %err.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !6007, metadata !DIExpression()), !dbg !6011
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !6012
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6008, metadata !DIExpression()), !dbg !6013
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #11, !dbg !6014
  tail call void @llvm.dbg.declare(metadata ptr %exc_type, metadata !6009, metadata !DIExpression()), !dbg !6015
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !6016, !tbaa !1899
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !6017
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !6017, !tbaa !6018
  store ptr %1, ptr %exc_type, align 8, !dbg !6019, !tbaa !1899
  %2 = load ptr, ptr %exc_type, align 8, !dbg !6020, !tbaa !1899
  %3 = load ptr, ptr %err.addr, align 8, !dbg !6022, !tbaa !1899
  %cmp = icmp eq ptr %2, %3, !dbg !6023
  br i1 %cmp, label %if.then, label %if.end, !dbg !6024

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !6025
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6025

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %exc_type, align 8, !dbg !6026, !tbaa !1899
  %tobool = icmp ne ptr %4, null, !dbg !6026
  %lnot = xor i1 %tobool, true, !dbg !6026
  %lnot1 = xor i1 %lnot, true, !dbg !6026
  %lnot2 = xor i1 %lnot1, true, !dbg !6026
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6026
  %conv = sext i32 %lnot.ext to i64, !dbg !6026
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6026
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6026
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6028

if.then4:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !6029
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6029

if.end5:                                          ; preds = %if.end
  %5 = load ptr, ptr %err.addr, align 8, !dbg !6030, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %5), !dbg !6030
  %call6 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864), !dbg !6030
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6030
  %lnot8 = xor i1 %tobool7, true, !dbg !6030
  %lnot10 = xor i1 %lnot8, true, !dbg !6030
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !6030
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !6030
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !6030
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !6030
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !6032

if.then15:                                        ; preds = %if.end5
  %6 = load ptr, ptr %exc_type, align 8, !dbg !6033, !tbaa !1899
  %7 = load ptr, ptr %err.addr, align 8, !dbg !6035, !tbaa !1899
  %call16 = call i32 @__Pyx_PyErr_ExceptionMatchesTuple(ptr noundef %6, ptr noundef %7), !dbg !6036
  store i32 %call16, ptr %result, align 4, !dbg !6037, !tbaa !1984
  br label %if.end18, !dbg !6038

if.else:                                          ; preds = %if.end5
  %8 = load ptr, ptr %exc_type, align 8, !dbg !6039, !tbaa !1899
  %9 = load ptr, ptr %err.addr, align 8, !dbg !6041, !tbaa !1899
  %call17 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %8, ptr noundef %9), !dbg !6042
  store i32 %call17, ptr %result, align 4, !dbg !6043, !tbaa !1984
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  %10 = load i32, ptr %result, align 4, !dbg !6044, !tbaa !1984
  store i32 %10, ptr %retval, align 4, !dbg !6045
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6045

cleanup:                                          ; preds = %if.end18, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #11, !dbg !6046
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !6046
  %11 = load i32, ptr %retval, align 4, !dbg !6046
  ret i32 %11, !dbg !6046
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_ErrRestoreInState(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !6047 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %tmp_type = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !6051, metadata !DIExpression()), !dbg !6058
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !6052, metadata !DIExpression()), !dbg !6059
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !6053, metadata !DIExpression()), !dbg !6060
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !6054, metadata !DIExpression()), !dbg !6061
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_type) #11, !dbg !6062
  tail call void @llvm.dbg.declare(metadata ptr %tmp_type, metadata !6055, metadata !DIExpression()), !dbg !6063
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #11, !dbg !6062
  tail call void @llvm.dbg.declare(metadata ptr %tmp_value, metadata !6056, metadata !DIExpression()), !dbg !6064
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #11, !dbg !6062
  tail call void @llvm.dbg.declare(metadata ptr %tmp_tb, metadata !6057, metadata !DIExpression()), !dbg !6065
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !6066, !tbaa !1899
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !6067
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !6067, !tbaa !6018
  store ptr %1, ptr %tmp_type, align 8, !dbg !6068, !tbaa !1899
  %2 = load ptr, ptr %tstate.addr, align 8, !dbg !6069, !tbaa !1899
  %curexc_value = getelementptr inbounds %struct._ts, ptr %2, i32 0, i32 16, !dbg !6070
  %3 = load ptr, ptr %curexc_value, align 8, !dbg !6070, !tbaa !6071
  store ptr %3, ptr %tmp_value, align 8, !dbg !6072, !tbaa !1899
  %4 = load ptr, ptr %tstate.addr, align 8, !dbg !6073, !tbaa !1899
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %4, i32 0, i32 17, !dbg !6074
  %5 = load ptr, ptr %curexc_traceback, align 8, !dbg !6074, !tbaa !6075
  store ptr %5, ptr %tmp_tb, align 8, !dbg !6076, !tbaa !1899
  %6 = load ptr, ptr %type.addr, align 8, !dbg !6077, !tbaa !1899
  %7 = load ptr, ptr %tstate.addr, align 8, !dbg !6078, !tbaa !1899
  %curexc_type1 = getelementptr inbounds %struct._ts, ptr %7, i32 0, i32 15, !dbg !6079
  store ptr %6, ptr %curexc_type1, align 8, !dbg !6080, !tbaa !6018
  %8 = load ptr, ptr %value.addr, align 8, !dbg !6081, !tbaa !1899
  %9 = load ptr, ptr %tstate.addr, align 8, !dbg !6082, !tbaa !1899
  %curexc_value2 = getelementptr inbounds %struct._ts, ptr %9, i32 0, i32 16, !dbg !6083
  store ptr %8, ptr %curexc_value2, align 8, !dbg !6084, !tbaa !6071
  %10 = load ptr, ptr %tb.addr, align 8, !dbg !6085, !tbaa !1899
  %11 = load ptr, ptr %tstate.addr, align 8, !dbg !6086, !tbaa !1899
  %curexc_traceback3 = getelementptr inbounds %struct._ts, ptr %11, i32 0, i32 17, !dbg !6087
  store ptr %10, ptr %curexc_traceback3, align 8, !dbg !6088, !tbaa !6075
  %12 = load ptr, ptr %tmp_type, align 8, !dbg !6089, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %12), !dbg !6089
  %13 = load ptr, ptr %tmp_value, align 8, !dbg !6090, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %13), !dbg !6090
  %14 = load ptr, ptr %tmp_tb, align 8, !dbg !6091, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %14), !dbg !6091
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #11, !dbg !6092
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #11, !dbg !6092
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_type) #11, !dbg !6092
  ret void, !dbg !6092
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyErr_ExceptionMatchesTuple(ptr noundef %exc_type, ptr noundef %tuple) #0 !dbg !6093 {
entry:
  %retval = alloca i32, align 4
  %exc_type.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !6095, metadata !DIExpression()), !dbg !6099
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !6096, metadata !DIExpression()), !dbg !6100
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !6101
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6097, metadata !DIExpression()), !dbg !6102
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #11, !dbg !6101
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !6098, metadata !DIExpression()), !dbg !6103
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !6104, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !6104
  store i64 %call, ptr %n, align 8, !dbg !6105, !tbaa !2597
  store i64 0, ptr %i, align 8, !dbg !6106, !tbaa !2597
  br label %for.cond, !dbg !6108

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !6109, !tbaa !2597
  %2 = load i64, ptr %n, align 8, !dbg !6111, !tbaa !2597
  %cmp = icmp slt i64 %1, %2, !dbg !6112
  br i1 %cmp, label %for.body, label %for.end, !dbg !6113

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %exc_type.addr, align 8, !dbg !6114, !tbaa !1899
  %4 = load ptr, ptr %tuple.addr, align 8, !dbg !6117, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !6117
  %5 = load i64, ptr %i, align 8, !dbg !6117, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %5, !dbg !6117
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !6117, !tbaa !1899
  %cmp1 = icmp eq ptr %3, %6, !dbg !6118
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6119

if.then:                                          ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !6120
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6120

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6121

for.inc:                                          ; preds = %if.end
  %7 = load i64, ptr %i, align 8, !dbg !6122, !tbaa !2597
  %inc = add i64 %7, 1, !dbg !6122
  store i64 %inc, ptr %i, align 8, !dbg !6122, !tbaa !2597
  br label %for.cond, !dbg !6123, !llvm.loop !6124

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !dbg !6126, !tbaa !2597
  br label %for.cond2, !dbg !6128

for.cond2:                                        ; preds = %for.inc10, %for.end
  %8 = load i64, ptr %i, align 8, !dbg !6129, !tbaa !2597
  %9 = load i64, ptr %n, align 8, !dbg !6131, !tbaa !2597
  %cmp3 = icmp slt i64 %8, %9, !dbg !6132
  br i1 %cmp3, label %for.body4, label %for.end12, !dbg !6133

for.body4:                                        ; preds = %for.cond2
  %10 = load ptr, ptr %exc_type.addr, align 8, !dbg !6134, !tbaa !1899
  %11 = load ptr, ptr %tuple.addr, align 8, !dbg !6137, !tbaa !1899
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %11, i32 0, i32 1, !dbg !6137
  %12 = load i64, ptr %i, align 8, !dbg !6137, !tbaa !2597
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 %12, !dbg !6137
  %13 = load ptr, ptr %arrayidx6, align 8, !dbg !6137, !tbaa !1899
  %call7 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %10, ptr noundef %13), !dbg !6138
  %tobool = icmp ne i32 %call7, 0, !dbg !6138
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !6139

if.then8:                                         ; preds = %for.body4
  store i32 1, ptr %retval, align 4, !dbg !6140
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6140

if.end9:                                          ; preds = %for.body4
  br label %for.inc10, !dbg !6141

for.inc10:                                        ; preds = %if.end9
  %14 = load i64, ptr %i, align 8, !dbg !6142, !tbaa !2597
  %inc11 = add i64 %14, 1, !dbg !6142
  store i64 %inc11, ptr %i, align 8, !dbg !6142, !tbaa !2597
  br label %for.cond2, !dbg !6143, !llvm.loop !6144

for.end12:                                        ; preds = %for.cond2
  store i32 0, ptr %retval, align 4, !dbg !6146
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6146

cleanup:                                          ; preds = %for.end12, %if.then8, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #11, !dbg !6147
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !6147
  %15 = load i32, ptr %retval, align 4, !dbg !6147
  ret i32 %15, !dbg !6147
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %err, ptr noundef %exc_type) #3 !dbg !6148 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca ptr, align 8
  %exc_type.addr = alloca ptr, align 8
  store ptr %err, ptr %err.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !6150, metadata !DIExpression()), !dbg !6152
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !6151, metadata !DIExpression()), !dbg !6153
  %0 = load ptr, ptr %err.addr, align 8, !dbg !6154, !tbaa !1899
  %1 = load ptr, ptr %exc_type.addr, align 8, !dbg !6154, !tbaa !1899
  %cmp = icmp eq ptr %0, %1, !dbg !6154
  %lnot = xor i1 %cmp, true, !dbg !6154
  %lnot1 = xor i1 %lnot, true, !dbg !6154
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6154
  %conv = sext i32 %lnot.ext to i64, !dbg !6154
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6154
  %tobool = icmp ne i64 %expval, 0, !dbg !6154
  br i1 %tobool, label %if.then, label %if.end, !dbg !6156

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !6157
  br label %return, !dbg !6157

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %err.addr, align 8, !dbg !6158, !tbaa !1899
  %call = call i32 @PyType_Check(ptr noundef %2), !dbg !6158
  %tobool2 = icmp ne i32 %call, 0, !dbg !6158
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !6158

land.rhs:                                         ; preds = %if.end
  %3 = load ptr, ptr %err.addr, align 8, !dbg !6158, !tbaa !1899
  %call3 = call i32 @PyType_HasFeature(ptr noundef %3, i64 noundef 1073741824), !dbg !6158
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6158
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %4 = phi i1 [ false, %if.end ], [ %tobool4, %land.rhs ], !dbg !6160
  %lnot5 = xor i1 %4, true, !dbg !6158
  %lnot7 = xor i1 %lnot5, true, !dbg !6158
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6158
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !6158
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !6158
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !6158
  br i1 %tobool11, label %if.then12, label %if.end43, !dbg !6161

if.then12:                                        ; preds = %land.end
  %5 = load ptr, ptr %exc_type.addr, align 8, !dbg !6162, !tbaa !1899
  %call13 = call i32 @PyType_Check(ptr noundef %5), !dbg !6162
  %tobool14 = icmp ne i32 %call13, 0, !dbg !6162
  br i1 %tobool14, label %land.rhs15, label %land.end18, !dbg !6162

land.rhs15:                                       ; preds = %if.then12
  %6 = load ptr, ptr %exc_type.addr, align 8, !dbg !6162, !tbaa !1899
  %call16 = call i32 @PyType_HasFeature(ptr noundef %6, i64 noundef 1073741824), !dbg !6162
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6162
  br label %land.end18

land.end18:                                       ; preds = %land.rhs15, %if.then12
  %7 = phi i1 [ false, %if.then12 ], [ %tobool17, %land.rhs15 ], !dbg !6165
  %lnot19 = xor i1 %7, true, !dbg !6162
  %lnot21 = xor i1 %lnot19, true, !dbg !6162
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6162
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6162
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !6162
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !6162
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !6166

if.then26:                                        ; preds = %land.end18
  %8 = load ptr, ptr %err.addr, align 8, !dbg !6167, !tbaa !1899
  %9 = load ptr, ptr %exc_type.addr, align 8, !dbg !6169, !tbaa !1899
  %call27 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %8, ptr noundef null, ptr noundef %9), !dbg !6170
  store i32 %call27, ptr %retval, align 4, !dbg !6171
  br label %return, !dbg !6171

if.else:                                          ; preds = %land.end18
  %10 = load ptr, ptr %exc_type.addr, align 8, !dbg !6172, !tbaa !1899
  %call28 = call ptr @Py_TYPE(ptr noundef %10), !dbg !6172
  %call29 = call i32 @PyType_HasFeature(ptr noundef %call28, i64 noundef 67108864), !dbg !6172
  %tobool30 = icmp ne i32 %call29, 0, !dbg !6172
  %lnot31 = xor i1 %tobool30, true, !dbg !6172
  %lnot33 = xor i1 %lnot31, true, !dbg !6172
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !6172
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !6172
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1), !dbg !6172
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !6172
  br i1 %tobool37, label %if.then38, label %if.else40, !dbg !6174

if.then38:                                        ; preds = %if.else
  %11 = load ptr, ptr %err.addr, align 8, !dbg !6175, !tbaa !1899
  %12 = load ptr, ptr %exc_type.addr, align 8, !dbg !6177, !tbaa !1899
  %call39 = call i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %11, ptr noundef %12), !dbg !6178
  store i32 %call39, ptr %retval, align 4, !dbg !6179
  br label %return, !dbg !6179

if.else40:                                        ; preds = %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.else40
  br label %if.end42

if.end42:                                         ; preds = %if.end41
  br label %if.end43, !dbg !6180

if.end43:                                         ; preds = %if.end42, %land.end
  %13 = load ptr, ptr %err.addr, align 8, !dbg !6181, !tbaa !1899
  %14 = load ptr, ptr %exc_type.addr, align 8, !dbg !6182, !tbaa !1899
  %call44 = call i32 @PyErr_GivenExceptionMatches(ptr noundef %13, ptr noundef %14), !dbg !6183
  store i32 %call44, ptr %retval, align 4, !dbg !6184
  br label %return, !dbg !6184

return:                                           ; preds = %if.end43, %if.then38, %if.then26, %if.then
  %15 = load i32, ptr %retval, align 4, !dbg !6185
  ret i32 %15, !dbg !6185
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %err, ptr noundef %exc_type1, ptr noundef %exc_type2) #3 !dbg !6186 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca ptr, align 8
  %exc_type1.addr = alloca ptr, align 8
  %exc_type2.addr = alloca ptr, align 8
  store ptr %err, ptr %err.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !6188, metadata !DIExpression()), !dbg !6191
  store ptr %exc_type1, ptr %exc_type1.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %exc_type1.addr, metadata !6189, metadata !DIExpression()), !dbg !6192
  store ptr %exc_type2, ptr %exc_type2.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %exc_type2.addr, metadata !6190, metadata !DIExpression()), !dbg !6193
  %0 = load ptr, ptr %exc_type1.addr, align 8, !dbg !6194, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !6194
  br i1 %tobool, label %if.then, label %if.else, !dbg !6196

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %err.addr, align 8, !dbg !6197, !tbaa !1899
  %2 = load ptr, ptr %exc_type1.addr, align 8, !dbg !6199, !tbaa !1899
  %3 = load ptr, ptr %exc_type2.addr, align 8, !dbg !6200, !tbaa !1899
  %call = call i32 @__Pyx_IsAnySubtype2(ptr noundef %1, ptr noundef %2, ptr noundef %3), !dbg !6201
  store i32 %call, ptr %retval, align 4, !dbg !6202
  br label %return, !dbg !6202

if.else:                                          ; preds = %entry
  %4 = load ptr, ptr %err.addr, align 8, !dbg !6203, !tbaa !1899
  %5 = load ptr, ptr %exc_type2.addr, align 8, !dbg !6205, !tbaa !1899
  %call1 = call i32 @__Pyx_IsSubtype(ptr noundef %4, ptr noundef %5), !dbg !6206
  store i32 %call1, ptr %retval, align 4, !dbg !6207
  br label %return, !dbg !6207

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, ptr %retval, align 4, !dbg !6208
  ret i32 %6, !dbg !6208
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %exc_type, ptr noundef %tuple) #0 !dbg !6209 {
entry:
  %retval = alloca i32, align 4
  %exc_type.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %t = alloca ptr, align 8
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !6211, metadata !DIExpression()), !dbg !6219
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !6212, metadata !DIExpression()), !dbg !6220
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !6221
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6213, metadata !DIExpression()), !dbg !6222
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #11, !dbg !6221
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !6214, metadata !DIExpression()), !dbg !6223
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !6224, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !6224
  store i64 %call, ptr %n, align 8, !dbg !6225, !tbaa !2597
  store i64 0, ptr %i, align 8, !dbg !6226, !tbaa !2597
  br label %for.cond, !dbg !6228

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !6229, !tbaa !2597
  %2 = load i64, ptr %n, align 8, !dbg !6231, !tbaa !2597
  %cmp = icmp slt i64 %1, %2, !dbg !6232
  br i1 %cmp, label %for.body, label %for.end, !dbg !6233

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %exc_type.addr, align 8, !dbg !6234, !tbaa !1899
  %4 = load ptr, ptr %tuple.addr, align 8, !dbg !6237, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !6237
  %5 = load i64, ptr %i, align 8, !dbg !6237, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %5, !dbg !6237
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !6237, !tbaa !1899
  %cmp1 = icmp eq ptr %3, %6, !dbg !6238
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6239

if.then:                                          ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !6240
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !6240

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6241

for.inc:                                          ; preds = %if.end
  %7 = load i64, ptr %i, align 8, !dbg !6242, !tbaa !2597
  %inc = add i64 %7, 1, !dbg !6242
  store i64 %inc, ptr %i, align 8, !dbg !6242, !tbaa !2597
  br label %for.cond, !dbg !6243, !llvm.loop !6244

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !dbg !6246, !tbaa !2597
  br label %for.cond2, !dbg !6247

for.cond2:                                        ; preds = %for.inc18, %for.end
  %8 = load i64, ptr %i, align 8, !dbg !6248, !tbaa !2597
  %9 = load i64, ptr %n, align 8, !dbg !6249, !tbaa !2597
  %cmp3 = icmp slt i64 %8, %9, !dbg !6250
  br i1 %cmp3, label %for.body4, label %for.end20, !dbg !6251

for.body4:                                        ; preds = %for.cond2
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #11, !dbg !6252
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !6215, metadata !DIExpression()), !dbg !6253
  %10 = load ptr, ptr %tuple.addr, align 8, !dbg !6254, !tbaa !1899
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1, !dbg !6254
  %11 = load i64, ptr %i, align 8, !dbg !6254, !tbaa !2597
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 %11, !dbg !6254
  %12 = load ptr, ptr %arrayidx6, align 8, !dbg !6254, !tbaa !1899
  store ptr %12, ptr %t, align 8, !dbg !6253, !tbaa !1899
  %13 = load ptr, ptr %t, align 8, !dbg !6255, !tbaa !1899
  %call7 = call i32 @PyType_Check(ptr noundef %13), !dbg !6255
  %tobool = icmp ne i32 %call7, 0, !dbg !6255
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6255

land.rhs:                                         ; preds = %for.body4
  %14 = load ptr, ptr %t, align 8, !dbg !6255, !tbaa !1899
  %call8 = call i32 @PyType_HasFeature(ptr noundef %14, i64 noundef 1073741824), !dbg !6255
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6255
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body4
  %15 = phi i1 [ false, %for.body4 ], [ %tobool9, %land.rhs ], !dbg !6257
  %lnot = xor i1 %15, true, !dbg !6255
  %lnot10 = xor i1 %lnot, true, !dbg !6255
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !6255
  %conv = sext i32 %lnot.ext to i64, !dbg !6255
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6255
  %tobool11 = icmp ne i64 %expval, 0, !dbg !6255
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6258

if.then12:                                        ; preds = %land.end
  %16 = load ptr, ptr %exc_type.addr, align 8, !dbg !6259, !tbaa !1899
  %17 = load ptr, ptr %t, align 8, !dbg !6262, !tbaa !1899
  %call13 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %16, ptr noundef null, ptr noundef %17), !dbg !6263
  %tobool14 = icmp ne i32 %call13, 0, !dbg !6263
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !6264

if.then15:                                        ; preds = %if.then12
  store i32 1, ptr %retval, align 4, !dbg !6265
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6265

if.end16:                                         ; preds = %if.then12
  br label %if.end17, !dbg !6266

if.else:                                          ; preds = %land.end
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6267
  br label %cleanup, !dbg !6267

cleanup:                                          ; preds = %if.end17, %if.then15
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #11, !dbg !6267
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup21 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc18, !dbg !6268

for.inc18:                                        ; preds = %cleanup.cont
  %18 = load i64, ptr %i, align 8, !dbg !6269, !tbaa !2597
  %inc19 = add i64 %18, 1, !dbg !6269
  store i64 %inc19, ptr %i, align 8, !dbg !6269, !tbaa !2597
  br label %for.cond2, !dbg !6270, !llvm.loop !6271

for.end20:                                        ; preds = %for.cond2
  store i32 0, ptr %retval, align 4, !dbg !6273
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !6273

cleanup21:                                        ; preds = %for.end20, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #11, !dbg !6274
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !6274
  %19 = load i32, ptr %retval, align 4, !dbg !6274
  ret i32 %19, !dbg !6274
}

declare !dbg !6275 i32 @PyErr_GivenExceptionMatches(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IsAnySubtype2(ptr noundef %cls, ptr noundef %a, ptr noundef %b) #3 !dbg !6276 {
entry:
  %retval = alloca i32, align 4
  %cls.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %mro = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %base = alloca ptr, align 8
  store ptr %cls, ptr %cls.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %cls.addr, metadata !6280, metadata !DIExpression()), !dbg !6292
  store ptr %a, ptr %a.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !6281, metadata !DIExpression()), !dbg !6293
  store ptr %b, ptr %b.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !6282, metadata !DIExpression()), !dbg !6294
  call void @llvm.lifetime.start.p0(i64 8, ptr %mro) #11, !dbg !6295
  tail call void @llvm.dbg.declare(metadata ptr %mro, metadata !6283, metadata !DIExpression()), !dbg !6296
  %0 = load ptr, ptr %cls.addr, align 8, !dbg !6297, !tbaa !1899
  %1 = load ptr, ptr %a.addr, align 8, !dbg !6299, !tbaa !1899
  %cmp = icmp eq ptr %0, %1, !dbg !6300
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6301

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %cls.addr, align 8, !dbg !6302, !tbaa !1899
  %3 = load ptr, ptr %b.addr, align 8, !dbg !6303, !tbaa !1899
  %cmp1 = icmp eq ptr %2, %3, !dbg !6304
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6305

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, ptr %retval, align 4, !dbg !6306
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !6306

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %cls.addr, align 8, !dbg !6307, !tbaa !1899
  %tp_mro = getelementptr inbounds %struct._typeobject, ptr %4, i32 0, i32 41, !dbg !6308
  %5 = load ptr, ptr %tp_mro, align 8, !dbg !6308, !tbaa !6309
  store ptr %5, ptr %mro, align 8, !dbg !6310, !tbaa !1899
  %6 = load ptr, ptr %mro, align 8, !dbg !6311, !tbaa !1899
  %tobool = icmp ne ptr %6, null, !dbg !6311
  %lnot = xor i1 %tobool, true, !dbg !6311
  %lnot2 = xor i1 %lnot, true, !dbg !6311
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6311
  %conv = sext i32 %lnot.ext to i64, !dbg !6311
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6311
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6311
  br i1 %tobool3, label %if.then4, label %if.end16, !dbg !6312

if.then4:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !6313
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6284, metadata !DIExpression()), !dbg !6314
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #11, !dbg !6313
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !6287, metadata !DIExpression()), !dbg !6315
  %7 = load ptr, ptr %mro, align 8, !dbg !6316, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %7), !dbg !6316
  store i64 %call, ptr %n, align 8, !dbg !6317, !tbaa !2597
  store i64 0, ptr %i, align 8, !dbg !6318, !tbaa !2597
  br label %for.cond, !dbg !6319

for.cond:                                         ; preds = %for.inc, %if.then4
  %8 = load i64, ptr %i, align 8, !dbg !6320, !tbaa !2597
  %9 = load i64, ptr %n, align 8, !dbg !6321, !tbaa !2597
  %cmp5 = icmp slt i64 %8, %9, !dbg !6322
  br i1 %cmp5, label %for.body, label %for.end, !dbg !6323

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %base) #11, !dbg !6324
  tail call void @llvm.dbg.declare(metadata ptr %base, metadata !6288, metadata !DIExpression()), !dbg !6325
  %10 = load ptr, ptr %mro, align 8, !dbg !6326, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1, !dbg !6326
  %11 = load i64, ptr %i, align 8, !dbg !6326, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %11, !dbg !6326
  %12 = load ptr, ptr %arrayidx, align 8, !dbg !6326, !tbaa !1899
  store ptr %12, ptr %base, align 8, !dbg !6325, !tbaa !1899
  %13 = load ptr, ptr %base, align 8, !dbg !6327, !tbaa !1899
  %14 = load ptr, ptr %a.addr, align 8, !dbg !6329, !tbaa !1899
  %cmp7 = icmp eq ptr %13, %14, !dbg !6330
  br i1 %cmp7, label %if.then12, label %lor.lhs.false9, !dbg !6331

lor.lhs.false9:                                   ; preds = %for.body
  %15 = load ptr, ptr %base, align 8, !dbg !6332, !tbaa !1899
  %16 = load ptr, ptr %b.addr, align 8, !dbg !6333, !tbaa !1899
  %cmp10 = icmp eq ptr %15, %16, !dbg !6334
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6335

if.then12:                                        ; preds = %lor.lhs.false9, %for.body
  store i32 1, ptr %retval, align 4, !dbg !6336
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6336

if.end13:                                         ; preds = %lor.lhs.false9
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6337
  br label %cleanup, !dbg !6337

cleanup:                                          ; preds = %if.end13, %if.then12
  call void @llvm.lifetime.end.p0(i64 8, ptr %base) #11, !dbg !6337
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup14 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !6338

for.inc:                                          ; preds = %cleanup.cont
  %17 = load i64, ptr %i, align 8, !dbg !6339, !tbaa !2597
  %inc = add i64 %17, 1, !dbg !6339
  store i64 %inc, ptr %i, align 8, !dbg !6339, !tbaa !2597
  br label %for.cond, !dbg !6340, !llvm.loop !6341

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !6343
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup14, !dbg !6343

cleanup14:                                        ; preds = %for.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #11, !dbg !6344
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !6344
  br label %cleanup21

if.end16:                                         ; preds = %if.end
  %18 = load ptr, ptr %cls.addr, align 8, !dbg !6345, !tbaa !1899
  %19 = load ptr, ptr %a.addr, align 8, !dbg !6346, !tbaa !1899
  %call17 = call i32 @__Pyx_InBases(ptr noundef %18, ptr noundef %19), !dbg !6347
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6347
  br i1 %tobool18, label %lor.end, label %lor.rhs, !dbg !6348

lor.rhs:                                          ; preds = %if.end16
  %20 = load ptr, ptr %cls.addr, align 8, !dbg !6349, !tbaa !1899
  %21 = load ptr, ptr %b.addr, align 8, !dbg !6350, !tbaa !1899
  %call19 = call i32 @__Pyx_InBases(ptr noundef %20, ptr noundef %21), !dbg !6351
  %tobool20 = icmp ne i32 %call19, 0, !dbg !6348
  br label %lor.end, !dbg !6348

lor.end:                                          ; preds = %lor.rhs, %if.end16
  %22 = phi i1 [ true, %if.end16 ], [ %tobool20, %lor.rhs ]
  %lor.ext = zext i1 %22 to i32, !dbg !6348
  store i32 %lor.ext, ptr %retval, align 4, !dbg !6352
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !6352

cleanup21:                                        ; preds = %lor.end, %cleanup14, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mro) #11, !dbg !6353
  %23 = load i32, ptr %retval, align 4, !dbg !6353
  ret i32 %23, !dbg !6353
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IsSubtype(ptr noundef %a, ptr noundef %b) #3 !dbg !6354 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %mro = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !6358, metadata !DIExpression()), !dbg !6365
  store ptr %b, ptr %b.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !6359, metadata !DIExpression()), !dbg !6366
  call void @llvm.lifetime.start.p0(i64 8, ptr %mro) #11, !dbg !6367
  tail call void @llvm.dbg.declare(metadata ptr %mro, metadata !6360, metadata !DIExpression()), !dbg !6368
  %0 = load ptr, ptr %a.addr, align 8, !dbg !6369, !tbaa !1899
  %1 = load ptr, ptr %b.addr, align 8, !dbg !6371, !tbaa !1899
  %cmp = icmp eq ptr %0, %1, !dbg !6372
  br i1 %cmp, label %if.then, label %if.end, !dbg !6373

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !6374
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup13, !dbg !6374

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %a.addr, align 8, !dbg !6375, !tbaa !1899
  %tp_mro = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 41, !dbg !6376
  %3 = load ptr, ptr %tp_mro, align 8, !dbg !6376, !tbaa !6309
  store ptr %3, ptr %mro, align 8, !dbg !6377, !tbaa !1899
  %4 = load ptr, ptr %mro, align 8, !dbg !6378, !tbaa !1899
  %tobool = icmp ne ptr %4, null, !dbg !6378
  %lnot = xor i1 %tobool, true, !dbg !6378
  %lnot1 = xor i1 %lnot, true, !dbg !6378
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6378
  %conv = sext i32 %lnot.ext to i64, !dbg !6378
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6378
  %tobool2 = icmp ne i64 %expval, 0, !dbg !6378
  br i1 %tobool2, label %if.then3, label %if.end11, !dbg !6379

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !6380
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6361, metadata !DIExpression()), !dbg !6381
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #11, !dbg !6380
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !6364, metadata !DIExpression()), !dbg !6382
  %5 = load ptr, ptr %mro, align 8, !dbg !6383, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %5), !dbg !6383
  store i64 %call, ptr %n, align 8, !dbg !6384, !tbaa !2597
  store i64 0, ptr %i, align 8, !dbg !6385, !tbaa !2597
  br label %for.cond, !dbg !6387

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, ptr %i, align 8, !dbg !6388, !tbaa !2597
  %7 = load i64, ptr %n, align 8, !dbg !6390, !tbaa !2597
  %cmp4 = icmp slt i64 %6, %7, !dbg !6391
  br i1 %cmp4, label %for.body, label %for.end, !dbg !6392

for.body:                                         ; preds = %for.cond
  %8 = load ptr, ptr %mro, align 8, !dbg !6393, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1, !dbg !6393
  %9 = load i64, ptr %i, align 8, !dbg !6393, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %9, !dbg !6393
  %10 = load ptr, ptr %arrayidx, align 8, !dbg !6393, !tbaa !1899
  %11 = load ptr, ptr %b.addr, align 8, !dbg !6396, !tbaa !1899
  %cmp6 = icmp eq ptr %10, %11, !dbg !6397
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !6398

if.then8:                                         ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !6399
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6399

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !6400

for.inc:                                          ; preds = %if.end9
  %12 = load i64, ptr %i, align 8, !dbg !6401, !tbaa !2597
  %inc = add i64 %12, 1, !dbg !6401
  store i64 %inc, ptr %i, align 8, !dbg !6401, !tbaa !2597
  br label %for.cond, !dbg !6402, !llvm.loop !6403

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !6405
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6405

cleanup:                                          ; preds = %for.end, %if.then8
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #11, !dbg !6406
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !6406
  br label %cleanup13

if.end11:                                         ; preds = %if.end
  %13 = load ptr, ptr %a.addr, align 8, !dbg !6407, !tbaa !1899
  %14 = load ptr, ptr %b.addr, align 8, !dbg !6408, !tbaa !1899
  %call12 = call i32 @__Pyx_InBases(ptr noundef %13, ptr noundef %14), !dbg !6409
  store i32 %call12, ptr %retval, align 4, !dbg !6410
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup13, !dbg !6410

cleanup13:                                        ; preds = %if.end11, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mro) #11, !dbg !6411
  %15 = load i32, ptr %retval, align 4, !dbg !6411
  ret i32 %15, !dbg !6411
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InBases(ptr noundef %a, ptr noundef %b) #0 !dbg !6412 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !6414, metadata !DIExpression()), !dbg !6416
  store ptr %b, ptr %b.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !6415, metadata !DIExpression()), !dbg !6417
  br label %while.cond, !dbg !6418

while.cond:                                       ; preds = %if.end, %entry
  %0 = load ptr, ptr %a.addr, align 8, !dbg !6419, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !6418
  br i1 %tobool, label %while.body, label %while.end, !dbg !6418

while.body:                                       ; preds = %while.cond
  %1 = load ptr, ptr %a.addr, align 8, !dbg !6420, !tbaa !1899
  %tp_base = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 30, !dbg !6420
  %2 = load ptr, ptr %tp_base, align 8, !dbg !6420, !tbaa !6422
  store ptr %2, ptr %a.addr, align 8, !dbg !6423, !tbaa !1899
  %3 = load ptr, ptr %a.addr, align 8, !dbg !6424, !tbaa !1899
  %4 = load ptr, ptr %b.addr, align 8, !dbg !6426, !tbaa !1899
  %cmp = icmp eq ptr %3, %4, !dbg !6427
  br i1 %cmp, label %if.then, label %if.end, !dbg !6428

if.then:                                          ; preds = %while.body
  store i32 1, ptr %retval, align 4, !dbg !6429
  br label %return, !dbg !6429

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !6418, !llvm.loop !6430

while.end:                                        ; preds = %while.cond
  %5 = load ptr, ptr %b.addr, align 8, !dbg !6432, !tbaa !1899
  %cmp1 = icmp eq ptr %5, @PyBaseObject_Type, !dbg !6433
  %conv = zext i1 %cmp1 to i32, !dbg !6433
  store i32 %conv, ptr %retval, align 4, !dbg !6434
  br label %return, !dbg !6434

return:                                           ; preds = %while.end, %if.then
  %6 = load i32, ptr %retval, align 4, !dbg !6435
  ret i32 %6, !dbg !6435
}

declare !dbg !6436 ptr @PyTuple_Pack(i64 noundef, ...) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyCode_New(i32 noundef %a, i32 noundef %p, i32 noundef %k, i32 noundef %l, i32 noundef %s, i32 noundef %f, ptr noundef %code, ptr noundef %c, ptr noundef %n, ptr noundef %v, ptr noundef %fv, ptr noundef %cell, ptr noundef %fn, ptr noundef %name, i32 noundef %fline, ptr noundef %lnos) #3 !dbg !6439 {
entry:
  %retval = alloca ptr, align 8
  %a.addr = alloca i32, align 4
  %p.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %l.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %f.addr = alloca i32, align 4
  %code.addr = alloca ptr, align 8
  %c.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %fv.addr = alloca ptr, align 8
  %cell.addr = alloca ptr, align 8
  %fn.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %fline.addr = alloca i32, align 4
  %lnos.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %empty_bytes = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %a, ptr %a.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !6443, metadata !DIExpression()), !dbg !6461
  store i32 %p, ptr %p.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !6444, metadata !DIExpression()), !dbg !6462
  store i32 %k, ptr %k.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %k.addr, metadata !6445, metadata !DIExpression()), !dbg !6463
  store i32 %l, ptr %l.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %l.addr, metadata !6446, metadata !DIExpression()), !dbg !6464
  store i32 %s, ptr %s.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !6447, metadata !DIExpression()), !dbg !6465
  store i32 %f, ptr %f.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !6448, metadata !DIExpression()), !dbg !6466
  store ptr %code, ptr %code.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %code.addr, metadata !6449, metadata !DIExpression()), !dbg !6467
  store ptr %c, ptr %c.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %c.addr, metadata !6450, metadata !DIExpression()), !dbg !6468
  store ptr %n, ptr %n.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !6451, metadata !DIExpression()), !dbg !6469
  store ptr %v, ptr %v.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !6452, metadata !DIExpression()), !dbg !6470
  store ptr %fv, ptr %fv.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %fv.addr, metadata !6453, metadata !DIExpression()), !dbg !6471
  store ptr %cell, ptr %cell.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %cell.addr, metadata !6454, metadata !DIExpression()), !dbg !6472
  store ptr %fn, ptr %fn.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %fn.addr, metadata !6455, metadata !DIExpression()), !dbg !6473
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6456, metadata !DIExpression()), !dbg !6474
  store i32 %fline, ptr %fline.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %fline.addr, metadata !6457, metadata !DIExpression()), !dbg !6475
  store ptr %lnos, ptr %lnos.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %lnos.addr, metadata !6458, metadata !DIExpression()), !dbg !6476
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !6477
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6459, metadata !DIExpression()), !dbg !6478
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_bytes) #11, !dbg !6479
  tail call void @llvm.dbg.declare(metadata ptr %empty_bytes, metadata !6460, metadata !DIExpression()), !dbg !6480
  %call = call ptr @PyBytes_FromStringAndSize(ptr noundef @.str.15, i64 noundef 0), !dbg !6481
  store ptr %call, ptr %empty_bytes, align 8, !dbg !6480, !tbaa !1899
  %0 = load ptr, ptr %empty_bytes, align 8, !dbg !6482, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !6482
  br i1 %tobool, label %if.end, label %if.then, !dbg !6484

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !6485
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6485

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %a.addr, align 4, !dbg !6486, !tbaa !1984
  %2 = load i32, ptr %p.addr, align 4, !dbg !6487, !tbaa !1984
  %3 = load i32, ptr %k.addr, align 4, !dbg !6488, !tbaa !1984
  %4 = load i32, ptr %l.addr, align 4, !dbg !6489, !tbaa !1984
  %5 = load i32, ptr %s.addr, align 4, !dbg !6490, !tbaa !1984
  %6 = load i32, ptr %f.addr, align 4, !dbg !6491, !tbaa !1984
  %7 = load ptr, ptr %code.addr, align 8, !dbg !6492, !tbaa !1899
  %8 = load ptr, ptr %c.addr, align 8, !dbg !6493, !tbaa !1899
  %9 = load ptr, ptr %n.addr, align 8, !dbg !6494, !tbaa !1899
  %10 = load ptr, ptr %v.addr, align 8, !dbg !6495, !tbaa !1899
  %11 = load ptr, ptr %fv.addr, align 8, !dbg !6496, !tbaa !1899
  %12 = load ptr, ptr %cell.addr, align 8, !dbg !6497, !tbaa !1899
  %13 = load ptr, ptr %fn.addr, align 8, !dbg !6498, !tbaa !1899
  %14 = load ptr, ptr %name.addr, align 8, !dbg !6499, !tbaa !1899
  %15 = load ptr, ptr %name.addr, align 8, !dbg !6500, !tbaa !1899
  %16 = load i32, ptr %fline.addr, align 4, !dbg !6501, !tbaa !1984
  %17 = load ptr, ptr %lnos.addr, align 8, !dbg !6502, !tbaa !1899
  %18 = load ptr, ptr %empty_bytes, align 8, !dbg !6503, !tbaa !1899
  %call1 = call ptr @PyCode_NewWithPosOnlyArgs(i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, ptr noundef %7, ptr noundef %8, ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12, ptr noundef %13, ptr noundef %14, ptr noundef %15, i32 noundef %16, ptr noundef %17, ptr noundef %18), !dbg !6504
  store ptr %call1, ptr %result, align 8, !dbg !6505, !tbaa !1899
  %19 = load ptr, ptr %empty_bytes, align 8, !dbg !6506, !tbaa !1899
  call void @Py_DECREF(ptr noundef %19), !dbg !6506
  %20 = load ptr, ptr %result, align 8, !dbg !6507, !tbaa !1899
  store ptr %20, ptr %retval, align 8, !dbg !6508
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6508

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_bytes) #11, !dbg !6509
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !6509
  %21 = load ptr, ptr %retval, align 8, !dbg !6509
  ret ptr %21, !dbg !6509
}

declare !dbg !6510 ptr @PyCode_NewWithPosOnlyArgs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_ExportFunction(ptr noundef %name, ptr noundef %f, ptr noundef %sig) #0 !dbg !6513 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  %sig.addr = alloca ptr, align 8
  %d = alloca ptr, align 8
  %cobj = alloca ptr, align 8
  %tmp = alloca %union.anon, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6517, metadata !DIExpression()), !dbg !6528
  store ptr %f, ptr %f.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !6518, metadata !DIExpression()), !dbg !6529
  store ptr %sig, ptr %sig.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %sig.addr, metadata !6519, metadata !DIExpression()), !dbg !6530
  call void @llvm.lifetime.start.p0(i64 8, ptr %d) #11, !dbg !6531
  tail call void @llvm.dbg.declare(metadata ptr %d, metadata !6520, metadata !DIExpression()), !dbg !6532
  store ptr null, ptr %d, align 8, !dbg !6532, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %cobj) #11, !dbg !6533
  tail call void @llvm.dbg.declare(metadata ptr %cobj, metadata !6521, metadata !DIExpression()), !dbg !6534
  store ptr null, ptr %cobj, align 8, !dbg !6534, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !6535
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !6522, metadata !DIExpression()), !dbg !6536
  %0 = load ptr, ptr @__pyx_m, align 8, !dbg !6537, !tbaa !1899
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef @.str.75), !dbg !6538
  store ptr %call, ptr %d, align 8, !dbg !6539, !tbaa !1899
  %1 = load ptr, ptr %d, align 8, !dbg !6540, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !6540
  br i1 %tobool, label %if.end7, label %if.then, !dbg !6542

if.then:                                          ; preds = %entry
  call void @PyErr_Clear(), !dbg !6543
  %call1 = call ptr @PyDict_New(), !dbg !6545
  store ptr %call1, ptr %d, align 8, !dbg !6546, !tbaa !1899
  %2 = load ptr, ptr %d, align 8, !dbg !6547, !tbaa !1899
  %tobool2 = icmp ne ptr %2, null, !dbg !6547
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !6549

if.then3:                                         ; preds = %if.then
  br label %bad, !dbg !6550

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr %d, align 8, !dbg !6551, !tbaa !1899
  call void @Py_INCREF(ptr noundef %3), !dbg !6551
  %4 = load ptr, ptr @__pyx_m, align 8, !dbg !6552, !tbaa !1899
  %5 = load ptr, ptr %d, align 8, !dbg !6554, !tbaa !1899
  %call4 = call i32 @PyModule_AddObject(ptr noundef %4, ptr noundef @.str.75, ptr noundef %5), !dbg !6555
  %cmp = icmp slt i32 %call4, 0, !dbg !6556
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !6557

if.then5:                                         ; preds = %if.end
  br label %bad, !dbg !6558

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !6559

if.end7:                                          ; preds = %if.end6, %entry
  %6 = load ptr, ptr %f.addr, align 8, !dbg !6560, !tbaa !1899
  store ptr %6, ptr %tmp, align 8, !dbg !6561, !tbaa !6562
  %7 = load ptr, ptr %tmp, align 8, !dbg !6563, !tbaa !6562
  %8 = load ptr, ptr %sig.addr, align 8, !dbg !6564, !tbaa !1899
  %call8 = call ptr @PyCapsule_New(ptr noundef %7, ptr noundef %8, ptr noundef null), !dbg !6565
  store ptr %call8, ptr %cobj, align 8, !dbg !6566, !tbaa !1899
  %9 = load ptr, ptr %cobj, align 8, !dbg !6567, !tbaa !1899
  %tobool9 = icmp ne ptr %9, null, !dbg !6567
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6569

if.then10:                                        ; preds = %if.end7
  br label %bad, !dbg !6570

if.end11:                                         ; preds = %if.end7
  %10 = load ptr, ptr %d, align 8, !dbg !6571, !tbaa !1899
  %11 = load ptr, ptr %name.addr, align 8, !dbg !6573, !tbaa !1899
  %12 = load ptr, ptr %cobj, align 8, !dbg !6574, !tbaa !1899
  %call12 = call i32 @PyDict_SetItemString(ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !6575
  %cmp13 = icmp slt i32 %call12, 0, !dbg !6576
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !6577

if.then14:                                        ; preds = %if.end11
  br label %bad, !dbg !6578

if.end15:                                         ; preds = %if.end11
  %13 = load ptr, ptr %cobj, align 8, !dbg !6579, !tbaa !1899
  call void @Py_DECREF(ptr noundef %13), !dbg !6579
  %14 = load ptr, ptr %d, align 8, !dbg !6580, !tbaa !1899
  call void @Py_DECREF(ptr noundef %14), !dbg !6580
  store i32 0, ptr %retval, align 4, !dbg !6581
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6581

bad:                                              ; preds = %if.then14, %if.then10, %if.then5, %if.then3
  tail call void @llvm.dbg.label(metadata !6527), !dbg !6582
  %15 = load ptr, ptr %cobj, align 8, !dbg !6583, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %15), !dbg !6583
  %16 = load ptr, ptr %d, align 8, !dbg !6584, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %16), !dbg !6584
  store i32 -1, ptr %retval, align 4, !dbg !6585
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6585

cleanup:                                          ; preds = %bad, %if.end15
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !6586
  call void @llvm.lifetime.end.p0(i64 8, ptr %cobj) #11, !dbg !6586
  call void @llvm.lifetime.end.p0(i64 8, ptr %d) #11, !dbg !6586
  %17 = load i32, ptr %retval, align 4, !dbg !6586
  ret i32 %17, !dbg !6586
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA_nfa_to_dfa(ptr noundef %__pyx_v_old_machine, i32 noundef %__pyx_skip_dispatch, ptr noundef %__pyx_optional_args) #0 !dbg !6587 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_old_machine.addr = alloca ptr, align 8
  %__pyx_skip_dispatch.addr = alloca i32, align 4
  %__pyx_optional_args.addr = alloca ptr, align 8
  %__pyx_v_debug = alloca ptr, align 8
  %__pyx_v_new_machine = alloca ptr, align 8
  %__pyx_v_transitions = alloca ptr, align 8
  %__pyx_v_state_map = alloca ptr, align 8
  %__pyx_v_key = alloca ptr, align 8
  %__pyx_v_old_state = alloca ptr, align 8
  %__pyx_v_new_state = alloca ptr, align 8
  %__pyx_v_event = alloca ptr, align 8
  %__pyx_v_old_target_states = alloca ptr, align 8
  %__pyx_v_old_states = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i64, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca i64, align 8
  %__pyx_t_11 = alloca i64, align 8
  %__pyx_t_12 = alloca ptr, align 8
  %__pyx_t_13 = alloca i32, align 4
  %__pyx_t_14 = alloca i32, align 4
  %__pyx_t_15 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp72 = alloca ptr, align 8
  %tmp122 = alloca ptr, align 8
  %function = alloca ptr, align 8
  %tmp158 = alloca ptr, align 8
  %__pyx_callargs = alloca [3 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %__pyx_temp = alloca i64, align 8
  %tmp200 = alloca ptr, align 8
  %tmp217 = alloca ptr, align 8
  %function253 = alloca ptr, align 8
  %tmp256 = alloca ptr, align 8
  %__pyx_callargs261 = alloca [2 x ptr], align 16
  %__pyx_temp348 = alloca i64, align 8
  %__pyx_temp361 = alloca i64, align 8
  %exc_type = alloca ptr, align 8
  %tmp408 = alloca ptr, align 8
  %tmp476 = alloca ptr, align 8
  %tmp480 = alloca ptr, align 8
  %tmp598 = alloca ptr, align 8
  %tmp602 = alloca ptr, align 8
  %function668 = alloca ptr, align 8
  %tmp671 = alloca ptr, align 8
  %__pyx_callargs676 = alloca [4 x ptr], align 16
  %function753 = alloca ptr, align 8
  %tmp756 = alloca ptr, align 8
  %__pyx_callargs761 = alloca [2 x ptr], align 16
  %function820 = alloca ptr, align 8
  %tmp823 = alloca ptr, align 8
  %__pyx_callargs828 = alloca [2 x ptr], align 16
  store ptr %__pyx_v_old_machine, ptr %__pyx_v_old_machine.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_machine.addr, metadata !6596, metadata !DIExpression()), !dbg !6725
  store i32 %__pyx_skip_dispatch, ptr %__pyx_skip_dispatch.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_skip_dispatch.addr, metadata !6597, metadata !DIExpression()), !dbg !6726
  store ptr %__pyx_optional_args, ptr %__pyx_optional_args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_optional_args.addr, metadata !6598, metadata !DIExpression()), !dbg !6727
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_debug) #11, !dbg !6728
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_debug, metadata !6599, metadata !DIExpression()), !dbg !6729
  store ptr @_Py_NoneStruct, ptr %__pyx_v_debug, align 8, !dbg !6729, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_new_machine) #11, !dbg !6730
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_machine, metadata !6600, metadata !DIExpression()), !dbg !6731
  store ptr null, ptr %__pyx_v_new_machine, align 8, !dbg !6731, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_transitions) #11, !dbg !6732
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_transitions, metadata !6601, metadata !DIExpression()), !dbg !6733
  store ptr null, ptr %__pyx_v_transitions, align 8, !dbg !6733, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state_map) #11, !dbg !6734
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state_map, metadata !6602, metadata !DIExpression()), !dbg !6735
  store ptr null, ptr %__pyx_v_state_map, align 8, !dbg !6735, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_key) #11, !dbg !6736
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_key, metadata !6603, metadata !DIExpression()), !dbg !6737
  store ptr null, ptr %__pyx_v_key, align 8, !dbg !6737, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_old_state) #11, !dbg !6738
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_state, metadata !6604, metadata !DIExpression()), !dbg !6739
  store ptr null, ptr %__pyx_v_old_state, align 8, !dbg !6739, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_new_state) #11, !dbg !6740
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_state, metadata !6605, metadata !DIExpression()), !dbg !6741
  store ptr null, ptr %__pyx_v_new_state, align 8, !dbg !6741, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_event) #11, !dbg !6742
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_event, metadata !6606, metadata !DIExpression()), !dbg !6743
  store ptr null, ptr %__pyx_v_event, align 8, !dbg !6743, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_old_target_states) #11, !dbg !6744
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_target_states, metadata !6607, metadata !DIExpression()), !dbg !6745
  store ptr null, ptr %__pyx_v_old_target_states, align 8, !dbg !6745, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_old_states) #11, !dbg !6746
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_states, metadata !6608, metadata !DIExpression()), !dbg !6747
  store ptr null, ptr %__pyx_v_old_states, align 8, !dbg !6747, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !6748
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !6609, metadata !DIExpression()), !dbg !6749
  store ptr null, ptr %__pyx_r, align 8, !dbg !6749, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !6750
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !6610, metadata !DIExpression()), !dbg !6751
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6751, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !6752
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !6611, metadata !DIExpression()), !dbg !6753
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !6754
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !6612, metadata !DIExpression()), !dbg !6755
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !6756
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !6613, metadata !DIExpression()), !dbg !6757
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !6758
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !6614, metadata !DIExpression()), !dbg !6759
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6759, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #11, !dbg !6760
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !6615, metadata !DIExpression()), !dbg !6761
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6761, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #11, !dbg !6762
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !6616, metadata !DIExpression()), !dbg !6763
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !6764
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !6617, metadata !DIExpression()), !dbg !6765
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6765, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #11, !dbg !6766
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !6618, metadata !DIExpression()), !dbg !6767
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #11, !dbg !6768
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !6619, metadata !DIExpression()), !dbg !6769
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #11, !dbg !6770
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !6620, metadata !DIExpression()), !dbg !6771
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #11, !dbg !6772
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_12, metadata !6621, metadata !DIExpression()), !dbg !6773
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !6773, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_13) #11, !dbg !6774
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_13, metadata !6622, metadata !DIExpression()), !dbg !6775
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_14) #11, !dbg !6776
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_14, metadata !6623, metadata !DIExpression()), !dbg !6777
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_15) #11, !dbg !6778
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_15, metadata !6624, metadata !DIExpression()), !dbg !6779
  store ptr null, ptr %__pyx_t_15, align 8, !dbg !6779, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !6780
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !6625, metadata !DIExpression()), !dbg !6781
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !6781, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !6782
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !6626, metadata !DIExpression()), !dbg !6783
  store ptr null, ptr %__pyx_filename, align 8, !dbg !6783, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !6784
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !6627, metadata !DIExpression()), !dbg !6785
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !6785, !tbaa !1984
  %0 = load ptr, ptr %__pyx_optional_args.addr, align 8, !dbg !6786, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !6786
  br i1 %tobool, label %if.then, label %if.end2, !dbg !6788

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__pyx_optional_args.addr, align 8, !dbg !6789, !tbaa !1899
  %__pyx_n = getelementptr inbounds %struct.__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa, ptr %1, i32 0, i32 0, !dbg !6792
  %2 = load i32, ptr %__pyx_n, align 8, !dbg !6792, !tbaa !6793
  %cmp = icmp sgt i32 %2, 0, !dbg !6795
  br i1 %cmp, label %if.then1, label %if.end, !dbg !6796

if.then1:                                         ; preds = %if.then
  %3 = load ptr, ptr %__pyx_optional_args.addr, align 8, !dbg !6797, !tbaa !1899
  %debug = getelementptr inbounds %struct.__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa, ptr %3, i32 0, i32 1, !dbg !6799
  %4 = load ptr, ptr %debug, align 8, !dbg !6799, !tbaa !6800
  store ptr %4, ptr %__pyx_v_debug, align 8, !dbg !6801, !tbaa !1899
  br label %if.end, !dbg !6802

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end2, !dbg !6803

if.end2:                                          ; preds = %if.end, %entry
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6804, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 17, !dbg !6804
  %6 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine, align 8, !dbg !6804, !tbaa !3568
  %call = call ptr @__Pyx_PyObject_CallNoArg(ptr noundef %6), !dbg !6805
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !6806, !tbaa !1899
  %7 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6807, !tbaa !1899
  %tobool3 = icmp ne ptr %7, null, !dbg !6807
  %lnot = xor i1 %tobool3, true, !dbg !6807
  %lnot4 = xor i1 %lnot, true, !dbg !6807
  %lnot5 = xor i1 %lnot4, true, !dbg !6807
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6807
  %conv = sext i32 %lnot.ext to i64, !dbg !6807
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6807
  %tobool6 = icmp ne i64 %expval, 0, !dbg !6807
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6809

if.then7:                                         ; preds = %if.end2
  %8 = load ptr, ptr @__pyx_f, align 16, !dbg !6810, !tbaa !1899
  store ptr %8, ptr %__pyx_filename, align 8, !dbg !6810, !tbaa !1899
  %9 = load ptr, ptr %__pyx_filename, align 8, !dbg !6810, !tbaa !1899
  store i32 28, ptr %__pyx_lineno, align 4, !dbg !6810, !tbaa !1984
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !6810, !tbaa !1984
  store i32 3303, ptr %__pyx_clineno, align 4, !dbg !6810, !tbaa !1984
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !6810, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6813

if.end8:                                          ; preds = %if.end2
  %12 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6814, !tbaa !1899
  store ptr %12, ptr %__pyx_v_new_machine, align 8, !dbg !6815, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6816, !tbaa !1899
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6817, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 18, !dbg !6817
  %14 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !6817, !tbaa !2419
  %15 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !6818, !tbaa !1899
  %call9 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %14, ptr noundef %15), !dbg !6819
  store ptr %call9, ptr %__pyx_t_1, align 8, !dbg !6820, !tbaa !1899
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6821, !tbaa !1899
  %tobool10 = icmp ne ptr %16, null, !dbg !6821
  %lnot11 = xor i1 %tobool10, true, !dbg !6821
  %lnot13 = xor i1 %lnot11, true, !dbg !6821
  %lnot15 = xor i1 %lnot13, true, !dbg !6821
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !6821
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !6821
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0), !dbg !6821
  %tobool19 = icmp ne i64 %expval18, 0, !dbg !6821
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6823

if.then20:                                        ; preds = %if.end8
  %17 = load ptr, ptr @__pyx_f, align 16, !dbg !6824, !tbaa !1899
  store ptr %17, ptr %__pyx_filename, align 8, !dbg !6824, !tbaa !1899
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !6824, !tbaa !1899
  store i32 29, ptr %__pyx_lineno, align 4, !dbg !6824, !tbaa !1984
  %19 = load i32, ptr %__pyx_lineno, align 4, !dbg !6824, !tbaa !1984
  store i32 3315, ptr %__pyx_clineno, align 4, !dbg !6824, !tbaa !1984
  %20 = load i32, ptr %__pyx_clineno, align 4, !dbg !6824, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6827

if.end21:                                         ; preds = %if.end8
  %21 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6828, !tbaa !1899
  store ptr %21, ptr %__pyx_v_state_map, align 8, !dbg !6829, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6830, !tbaa !1899
  store i64 0, ptr %__pyx_t_2, align 8, !dbg !6831, !tbaa !2597
  %22 = load ptr, ptr %__pyx_v_old_machine.addr, align 8, !dbg !6832, !tbaa !1899
  %initial_states = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Machine, ptr %22, i32 0, i32 3, !dbg !6832
  %23 = load ptr, ptr %initial_states, align 8, !dbg !6832, !tbaa !6834
  %cmp22 = icmp eq ptr %23, @_Py_NoneStruct, !dbg !6832
  %lnot24 = xor i1 %cmp22, true, !dbg !6832
  %lnot26 = xor i1 %lnot24, true, !dbg !6832
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !6832
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !6832
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0), !dbg !6832
  %tobool30 = icmp ne i64 %expval29, 0, !dbg !6832
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !6836

if.then31:                                        ; preds = %if.end21
  %24 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !6837, !tbaa !1899
  %call32 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %24, ptr noundef @.str.76, ptr noundef @.str.77), !dbg !6839
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !6840, !tbaa !1899
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !6840, !tbaa !1899
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !6840, !tbaa !1899
  store i32 34, ptr %__pyx_lineno, align 4, !dbg !6840, !tbaa !1984
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !6840, !tbaa !1984
  store i32 3330, ptr %__pyx_clineno, align 4, !dbg !6840, !tbaa !1984
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !6840, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6843

if.end33:                                         ; preds = %if.end21
  %29 = load ptr, ptr %__pyx_v_old_machine.addr, align 8, !dbg !6844, !tbaa !1899
  %initial_states34 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Machine, ptr %29, i32 0, i32 3, !dbg !6845
  %30 = load ptr, ptr %initial_states34, align 8, !dbg !6845, !tbaa !6834
  %31 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6846, !tbaa !1899
  %__pyx_n_s_items = getelementptr inbounds %struct.__pyx_mstate, ptr %31, i32 0, i32 57, !dbg !6846
  %32 = load ptr, ptr %__pyx_n_s_items, align 8, !dbg !6846, !tbaa !6847
  %call35 = call ptr @__Pyx_dict_iterator(ptr noundef %30, i32 noundef 1, ptr noundef %32, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4), !dbg !6848
  store ptr %call35, ptr %__pyx_t_5, align 8, !dbg !6849, !tbaa !1899
  %33 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6850, !tbaa !1899
  %tobool36 = icmp ne ptr %33, null, !dbg !6850
  %lnot37 = xor i1 %tobool36, true, !dbg !6850
  %lnot39 = xor i1 %lnot37, true, !dbg !6850
  %lnot41 = xor i1 %lnot39, true, !dbg !6850
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !6850
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !6850
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0), !dbg !6850
  %tobool45 = icmp ne i64 %expval44, 0, !dbg !6850
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !6852

if.then46:                                        ; preds = %if.end33
  %34 = load ptr, ptr @__pyx_f, align 16, !dbg !6853, !tbaa !1899
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !6853, !tbaa !1899
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !6853, !tbaa !1899
  store i32 34, ptr %__pyx_lineno, align 4, !dbg !6853, !tbaa !1984
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !6853, !tbaa !1984
  store i32 3332, ptr %__pyx_clineno, align 4, !dbg !6853, !tbaa !1984
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !6853, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6856

if.end47:                                         ; preds = %if.end33
  %38 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6857, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %38), !dbg !6857
  %39 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6858, !tbaa !1899
  store ptr %39, ptr %__pyx_t_1, align 8, !dbg !6859, !tbaa !1899
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6860, !tbaa !1899
  br label %while.cond, !dbg !6861

while.cond:                                       ; preds = %cleanup.cont, %if.end47
  br label %while.body, !dbg !6861

while.body:                                       ; preds = %while.cond
  %40 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6862, !tbaa !1899
  %41 = load i64, ptr %__pyx_t_3, align 8, !dbg !6863, !tbaa !2597
  %42 = load i32, ptr %__pyx_t_4, align 4, !dbg !6864, !tbaa !1984
  %call48 = call i32 @__Pyx_dict_iter_next(ptr noundef %40, i64 noundef %41, ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_6, ptr noundef null, i32 noundef %42), !dbg !6865
  store i32 %call48, ptr %__pyx_t_7, align 4, !dbg !6866, !tbaa !1984
  %43 = load i32, ptr %__pyx_t_7, align 4, !dbg !6867, !tbaa !1984
  %cmp49 = icmp eq i32 %43, 0, !dbg !6867
  %lnot51 = xor i1 %cmp49, true, !dbg !6867
  %lnot53 = xor i1 %lnot51, true, !dbg !6867
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !6867
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !6867
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !6867
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !6867
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !6869

if.then58:                                        ; preds = %while.body
  br label %while.end, !dbg !6870

if.end59:                                         ; preds = %while.body
  %44 = load i32, ptr %__pyx_t_7, align 4, !dbg !6871, !tbaa !1984
  %cmp60 = icmp eq i32 %44, -1, !dbg !6871
  %lnot62 = xor i1 %cmp60, true, !dbg !6871
  %lnot64 = xor i1 %lnot62, true, !dbg !6871
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !6871
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !6871
  %expval67 = call i64 @llvm.expect.i64(i64 %conv66, i64 0), !dbg !6871
  %tobool68 = icmp ne i64 %expval67, 0, !dbg !6871
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !6873

if.then69:                                        ; preds = %if.end59
  %45 = load ptr, ptr @__pyx_f, align 16, !dbg !6874, !tbaa !1899
  store ptr %45, ptr %__pyx_filename, align 8, !dbg !6874, !tbaa !1899
  %46 = load ptr, ptr %__pyx_filename, align 8, !dbg !6874, !tbaa !1899
  store i32 34, ptr %__pyx_lineno, align 4, !dbg !6874, !tbaa !1984
  %47 = load i32, ptr %__pyx_lineno, align 4, !dbg !6874, !tbaa !1984
  store i32 3340, ptr %__pyx_clineno, align 4, !dbg !6874, !tbaa !1984
  %48 = load i32, ptr %__pyx_clineno, align 4, !dbg !6874, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6877

if.end70:                                         ; preds = %if.end59
  br label %do.body, !dbg !6878

do.body:                                          ; preds = %if.end70
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !6879
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !6628, metadata !DIExpression()), !dbg !6879
  %49 = load ptr, ptr %__pyx_v_key, align 8, !dbg !6879, !tbaa !1899
  store ptr %49, ptr %tmp, align 8, !dbg !6879, !tbaa !1899
  %50 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6879, !tbaa !1899
  store ptr %50, ptr %__pyx_v_key, align 8, !dbg !6879, !tbaa !1899
  %51 = load ptr, ptr %tmp, align 8, !dbg !6879, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %51), !dbg !6879
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !6878
  br label %do.cond, !dbg !6879

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6879

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6880, !tbaa !1899
  br label %do.body71, !dbg !6881

do.body71:                                        ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp72) #11, !dbg !6882
  tail call void @llvm.dbg.declare(metadata ptr %tmp72, metadata !6631, metadata !DIExpression()), !dbg !6882
  %52 = load ptr, ptr %__pyx_v_old_state, align 8, !dbg !6882, !tbaa !1899
  store ptr %52, ptr %tmp72, align 8, !dbg !6882, !tbaa !1899
  %53 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6882, !tbaa !1899
  store ptr %53, ptr %__pyx_v_old_state, align 8, !dbg !6882, !tbaa !1899
  %54 = load ptr, ptr %tmp72, align 8, !dbg !6882, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %54), !dbg !6882
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp72) #11, !dbg !6881
  br label %do.cond73, !dbg !6882

do.cond73:                                        ; preds = %do.body71
  br label %do.end74, !dbg !6882

do.end74:                                         ; preds = %do.cond73
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6883, !tbaa !1899
  %55 = load ptr, ptr %__pyx_v_old_state, align 8, !dbg !6884, !tbaa !1899
  %cmp75 = icmp eq ptr %55, @_Py_NoneStruct, !dbg !6884
  br i1 %cmp75, label %lor.end, label %lor.rhs, !dbg !6884

lor.rhs:                                          ; preds = %do.end74
  %56 = load ptr, ptr %__pyx_v_old_state, align 8, !dbg !6884, !tbaa !1899
  %57 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6884, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Node = getelementptr inbounds %struct.__pyx_mstate, ptr %57, i32 0, i32 16, !dbg !6884
  %58 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Node, align 8, !dbg !6884, !tbaa !3556
  %call77 = call i32 @__Pyx_TypeTest(ptr noundef %56, ptr noundef %58), !dbg !6884
  %tobool78 = icmp ne i32 %call77, 0, !dbg !6884
  %lnot79 = xor i1 %tobool78, true, !dbg !6884
  %lnot81 = xor i1 %lnot79, true, !dbg !6884
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !6884
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !6884
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 1), !dbg !6884
  %tobool85 = icmp ne i64 %expval84, 0, !dbg !6884
  br label %lor.end, !dbg !6884

lor.end:                                          ; preds = %lor.rhs, %do.end74
  %59 = phi i1 [ true, %do.end74 ], [ %tobool85, %lor.rhs ]
  %lnot86 = xor i1 %59, true, !dbg !6884
  %lnot88 = xor i1 %lnot86, true, !dbg !6884
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !6884
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !6884
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 1), !dbg !6884
  %tobool92 = icmp ne i64 %expval91, 0, !dbg !6884
  br i1 %tobool92, label %if.end94, label %if.then93, !dbg !6886

if.then93:                                        ; preds = %lor.end
  %60 = load ptr, ptr @__pyx_f, align 16, !dbg !6887, !tbaa !1899
  store ptr %60, ptr %__pyx_filename, align 8, !dbg !6887, !tbaa !1899
  %61 = load ptr, ptr %__pyx_filename, align 8, !dbg !6887, !tbaa !1899
  store i32 35, ptr %__pyx_lineno, align 4, !dbg !6887, !tbaa !1984
  %62 = load i32, ptr %__pyx_lineno, align 4, !dbg !6887, !tbaa !1984
  store i32 3355, ptr %__pyx_clineno, align 4, !dbg !6887, !tbaa !1984
  %63 = load i32, ptr %__pyx_clineno, align 4, !dbg !6887, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6890

if.end94:                                         ; preds = %lor.end
  %64 = load ptr, ptr %__pyx_v_old_state, align 8, !dbg !6891, !tbaa !1899
  %call95 = call ptr @__pyx_f_6Cython_4Plex_3DFA_epsilon_closure(ptr noundef %64), !dbg !6892
  store ptr %call95, ptr %__pyx_t_6, align 8, !dbg !6893, !tbaa !1899
  %65 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6894, !tbaa !1899
  %tobool96 = icmp ne ptr %65, null, !dbg !6894
  %lnot97 = xor i1 %tobool96, true, !dbg !6894
  %lnot99 = xor i1 %lnot97, true, !dbg !6894
  %lnot101 = xor i1 %lnot99, true, !dbg !6894
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !6894
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !6894
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 0), !dbg !6894
  %tobool105 = icmp ne i64 %expval104, 0, !dbg !6894
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !6896

if.then106:                                       ; preds = %if.end94
  %66 = load ptr, ptr @__pyx_f, align 16, !dbg !6897, !tbaa !1899
  store ptr %66, ptr %__pyx_filename, align 8, !dbg !6897, !tbaa !1899
  %67 = load ptr, ptr %__pyx_filename, align 8, !dbg !6897, !tbaa !1899
  store i32 35, ptr %__pyx_lineno, align 4, !dbg !6897, !tbaa !1984
  %68 = load i32, ptr %__pyx_lineno, align 4, !dbg !6897, !tbaa !1984
  store i32 3356, ptr %__pyx_clineno, align 4, !dbg !6897, !tbaa !1984
  %69 = load i32, ptr %__pyx_clineno, align 4, !dbg !6897, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6900

if.end107:                                        ; preds = %if.end94
  %70 = load ptr, ptr %__pyx_v_state_map, align 8, !dbg !6901, !tbaa !1899
  %71 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6902, !tbaa !1899
  %call108 = call ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_old_to_new(ptr noundef %70, ptr noundef %71), !dbg !6903
  store ptr %call108, ptr %__pyx_t_5, align 8, !dbg !6904, !tbaa !1899
  %72 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6905, !tbaa !1899
  %tobool109 = icmp ne ptr %72, null, !dbg !6905
  %lnot110 = xor i1 %tobool109, true, !dbg !6905
  %lnot112 = xor i1 %lnot110, true, !dbg !6905
  %lnot114 = xor i1 %lnot112, true, !dbg !6905
  %lnot.ext115 = zext i1 %lnot114 to i32, !dbg !6905
  %conv116 = sext i32 %lnot.ext115 to i64, !dbg !6905
  %expval117 = call i64 @llvm.expect.i64(i64 %conv116, i64 0), !dbg !6905
  %tobool118 = icmp ne i64 %expval117, 0, !dbg !6905
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !6907

if.then119:                                       ; preds = %if.end107
  %73 = load ptr, ptr @__pyx_f, align 16, !dbg !6908, !tbaa !1899
  store ptr %73, ptr %__pyx_filename, align 8, !dbg !6908, !tbaa !1899
  %74 = load ptr, ptr %__pyx_filename, align 8, !dbg !6908, !tbaa !1899
  store i32 35, ptr %__pyx_lineno, align 4, !dbg !6908, !tbaa !1984
  %75 = load i32, ptr %__pyx_lineno, align 4, !dbg !6908, !tbaa !1984
  store i32 3358, ptr %__pyx_clineno, align 4, !dbg !6908, !tbaa !1984
  %76 = load i32, ptr %__pyx_clineno, align 4, !dbg !6908, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6911

if.end120:                                        ; preds = %if.end107
  %77 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6912, !tbaa !1899
  call void @Py_DECREF(ptr noundef %77), !dbg !6912
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6913, !tbaa !1899
  br label %do.body121, !dbg !6914

do.body121:                                       ; preds = %if.end120
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp122) #11, !dbg !6915
  tail call void @llvm.dbg.declare(metadata ptr %tmp122, metadata !6633, metadata !DIExpression()), !dbg !6915
  %78 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !6915, !tbaa !1899
  store ptr %78, ptr %tmp122, align 8, !dbg !6915, !tbaa !1899
  %79 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6915, !tbaa !1899
  store ptr %79, ptr %__pyx_v_new_state, align 8, !dbg !6915, !tbaa !1899
  %80 = load ptr, ptr %tmp122, align 8, !dbg !6915, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %80), !dbg !6915
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp122) #11, !dbg !6914
  br label %do.cond123, !dbg !6915

do.cond123:                                       ; preds = %do.body121
  br label %do.end124, !dbg !6915

do.end124:                                        ; preds = %do.cond123
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6916, !tbaa !1899
  %81 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !6917, !tbaa !1899
  %82 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6918, !tbaa !1899
  %__pyx_n_s_make_initial_state = getelementptr inbounds %struct.__pyx_mstate, ptr %82, i32 0, i32 59, !dbg !6918
  %83 = load ptr, ptr %__pyx_n_s_make_initial_state, align 8, !dbg !6918, !tbaa !6919
  %call125 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %81, ptr noundef %83), !dbg !6920
  store ptr %call125, ptr %__pyx_t_6, align 8, !dbg !6921, !tbaa !1899
  %84 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6922, !tbaa !1899
  %tobool126 = icmp ne ptr %84, null, !dbg !6922
  %lnot127 = xor i1 %tobool126, true, !dbg !6922
  %lnot129 = xor i1 %lnot127, true, !dbg !6922
  %lnot131 = xor i1 %lnot129, true, !dbg !6922
  %lnot.ext132 = zext i1 %lnot131 to i32, !dbg !6922
  %conv133 = sext i32 %lnot.ext132 to i64, !dbg !6922
  %expval134 = call i64 @llvm.expect.i64(i64 %conv133, i64 0), !dbg !6922
  %tobool135 = icmp ne i64 %expval134, 0, !dbg !6922
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !6924

if.then136:                                       ; preds = %do.end124
  %85 = load ptr, ptr @__pyx_f, align 16, !dbg !6925, !tbaa !1899
  store ptr %85, ptr %__pyx_filename, align 8, !dbg !6925, !tbaa !1899
  %86 = load ptr, ptr %__pyx_filename, align 8, !dbg !6925, !tbaa !1899
  store i32 36, ptr %__pyx_lineno, align 4, !dbg !6925, !tbaa !1984
  %87 = load i32, ptr %__pyx_lineno, align 4, !dbg !6925, !tbaa !1984
  store i32 3371, ptr %__pyx_clineno, align 4, !dbg !6925, !tbaa !1984
  %88 = load i32, ptr %__pyx_clineno, align 4, !dbg !6925, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6928

if.end137:                                        ; preds = %do.end124
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6929, !tbaa !1899
  store i32 0, ptr %__pyx_t_7, align 4, !dbg !6930, !tbaa !1984
  %89 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6931, !tbaa !1899
  %call138 = call i32 @Py_IS_TYPE(ptr noundef %89, ptr noundef @PyMethod_Type), !dbg !6931
  %tobool139 = icmp ne i32 %call138, 0, !dbg !6931
  %lnot140 = xor i1 %tobool139, true, !dbg !6931
  %lnot142 = xor i1 %lnot140, true, !dbg !6931
  %lnot.ext143 = zext i1 %lnot142 to i32, !dbg !6931
  %conv144 = sext i32 %lnot.ext143 to i64, !dbg !6931
  %expval145 = call i64 @llvm.expect.i64(i64 %conv144, i64 1), !dbg !6931
  %tobool146 = icmp ne i64 %expval145, 0, !dbg !6931
  br i1 %tobool146, label %if.then147, label %if.end162, !dbg !6932

if.then147:                                       ; preds = %if.end137
  %90 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6933, !tbaa !1899
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %90, i32 0, i32 2, !dbg !6933
  %91 = load ptr, ptr %im_self, align 8, !dbg !6933, !tbaa !6934
  store ptr %91, ptr %__pyx_t_8, align 8, !dbg !6936, !tbaa !1899
  %92 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6937, !tbaa !1899
  %tobool148 = icmp ne ptr %92, null, !dbg !6937
  %lnot149 = xor i1 %tobool148, true, !dbg !6937
  %lnot151 = xor i1 %lnot149, true, !dbg !6937
  %lnot.ext152 = zext i1 %lnot151 to i32, !dbg !6937
  %conv153 = sext i32 %lnot.ext152 to i64, !dbg !6937
  %expval154 = call i64 @llvm.expect.i64(i64 %conv153, i64 1), !dbg !6937
  %tobool155 = icmp ne i64 %expval154, 0, !dbg !6937
  br i1 %tobool155, label %if.then156, label %if.end161, !dbg !6938

if.then156:                                       ; preds = %if.then147
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #11, !dbg !6939
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !6635, metadata !DIExpression()), !dbg !6940
  %93 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6941, !tbaa !1899
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %93, i32 0, i32 1, !dbg !6941
  %94 = load ptr, ptr %im_func, align 8, !dbg !6941, !tbaa !6942
  store ptr %94, ptr %function, align 8, !dbg !6940, !tbaa !1899
  %95 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6943, !tbaa !1899
  call void @Py_INCREF(ptr noundef %95), !dbg !6943
  %96 = load ptr, ptr %function, align 8, !dbg !6944, !tbaa !1899
  call void @Py_INCREF(ptr noundef %96), !dbg !6944
  br label %do.body157, !dbg !6945

do.body157:                                       ; preds = %if.then156
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp158) #11, !dbg !6946
  tail call void @llvm.dbg.declare(metadata ptr %tmp158, metadata !6640, metadata !DIExpression()), !dbg !6946
  %97 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6946, !tbaa !1899
  store ptr %97, ptr %tmp158, align 8, !dbg !6946, !tbaa !1899
  %98 = load ptr, ptr %function, align 8, !dbg !6946, !tbaa !1899
  store ptr %98, ptr %__pyx_t_6, align 8, !dbg !6946, !tbaa !1899
  %99 = load ptr, ptr %tmp158, align 8, !dbg !6946, !tbaa !1899
  call void @Py_DECREF(ptr noundef %99), !dbg !6946
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp158) #11, !dbg !6945
  br label %do.cond159, !dbg !6946

do.cond159:                                       ; preds = %do.body157
  br label %do.end160, !dbg !6946

do.end160:                                        ; preds = %do.cond159
  store i32 1, ptr %__pyx_t_7, align 4, !dbg !6947, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #11, !dbg !6948
  br label %if.end161, !dbg !6949

if.end161:                                        ; preds = %do.end160, %if.then147
  br label %if.end162, !dbg !6950

if.end162:                                        ; preds = %if.end161, %if.end137
  call void @llvm.lifetime.start.p0(i64 24, ptr %__pyx_callargs) #11, !dbg !6951
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !6642, metadata !DIExpression()), !dbg !6952
  %arrayinit.begin = getelementptr inbounds [3 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !6953
  %100 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6954, !tbaa !1899
  store ptr %100, ptr %arrayinit.begin, align 8, !dbg !6953, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !6953
  %101 = load ptr, ptr %__pyx_v_key, align 8, !dbg !6955, !tbaa !1899
  store ptr %101, ptr %arrayinit.element, align 8, !dbg !6953, !tbaa !1899
  %arrayinit.element163 = getelementptr inbounds ptr, ptr %arrayinit.element, i64 1, !dbg !6953
  %102 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !6956, !tbaa !1899
  store ptr %102, ptr %arrayinit.element163, align 8, !dbg !6953, !tbaa !1899
  %103 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6957, !tbaa !1899
  %arraydecay = getelementptr inbounds [3 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !6957
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !6957
  %104 = load i32, ptr %__pyx_t_7, align 4, !dbg !6957, !tbaa !1984
  %idx.ext = sext i32 %104 to i64, !dbg !6957
  %idx.neg = sub i64 0, %idx.ext, !dbg !6957
  %add.ptr164 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !6957
  %105 = load i32, ptr %__pyx_t_7, align 4, !dbg !6957, !tbaa !1984
  %add = add i32 2, %105, !dbg !6957
  %conv165 = sext i32 %add to i64, !dbg !6957
  %call166 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %103, ptr noundef %add.ptr164, i64 noundef %conv165, ptr noundef null), !dbg !6957
  store ptr %call166, ptr %__pyx_t_5, align 8, !dbg !6958, !tbaa !1899
  %106 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6959, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %106), !dbg !6959
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6960, !tbaa !1899
  %107 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6961, !tbaa !1899
  %tobool167 = icmp ne ptr %107, null, !dbg !6961
  %lnot168 = xor i1 %tobool167, true, !dbg !6961
  %lnot170 = xor i1 %lnot168, true, !dbg !6961
  %lnot172 = xor i1 %lnot170, true, !dbg !6961
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !6961
  %conv174 = sext i32 %lnot.ext173 to i64, !dbg !6961
  %expval175 = call i64 @llvm.expect.i64(i64 %conv174, i64 0), !dbg !6961
  %tobool176 = icmp ne i64 %expval175, 0, !dbg !6961
  br i1 %tobool176, label %if.then177, label %if.end178, !dbg !6963

if.then177:                                       ; preds = %if.end162
  %108 = load ptr, ptr @__pyx_f, align 16, !dbg !6964, !tbaa !1899
  store ptr %108, ptr %__pyx_filename, align 8, !dbg !6964, !tbaa !1899
  %109 = load ptr, ptr %__pyx_filename, align 8, !dbg !6964, !tbaa !1899
  store i32 36, ptr %__pyx_lineno, align 4, !dbg !6964, !tbaa !1984
  %110 = load i32, ptr %__pyx_lineno, align 4, !dbg !6964, !tbaa !1984
  store i32 3391, ptr %__pyx_clineno, align 4, !dbg !6964, !tbaa !1984
  %111 = load i32, ptr %__pyx_clineno, align 4, !dbg !6964, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6967

if.end178:                                        ; preds = %if.end162
  %112 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6968, !tbaa !1899
  call void @Py_DECREF(ptr noundef %112), !dbg !6968
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6969, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6970
  br label %cleanup, !dbg !6970

cleanup:                                          ; preds = %if.then177, %if.end178
  call void @llvm.lifetime.end.p0(i64 24, ptr %__pyx_callargs) #11, !dbg !6970
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup855 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %113 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6971, !tbaa !1899
  call void @Py_DECREF(ptr noundef %113), !dbg !6971
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6972, !tbaa !1899
  br label %while.cond, !dbg !6861, !llvm.loop !6973

while.end:                                        ; preds = %if.then58
  %114 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6975, !tbaa !1899
  call void @Py_DECREF(ptr noundef %114), !dbg !6975
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6976, !tbaa !1899
  %115 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !6977, !tbaa !1899
  %states = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_FastMachine, ptr %115, i32 0, i32 3, !dbg !6977
  %116 = load ptr, ptr %states, align 8, !dbg !6977, !tbaa !6979
  %cmp179 = icmp eq ptr %116, @_Py_NoneStruct, !dbg !6977
  %lnot181 = xor i1 %cmp179, true, !dbg !6977
  %lnot183 = xor i1 %lnot181, true, !dbg !6977
  %lnot.ext184 = zext i1 %lnot183 to i32, !dbg !6977
  %conv185 = sext i32 %lnot.ext184 to i64, !dbg !6977
  %expval186 = call i64 @llvm.expect.i64(i64 %conv185, i64 0), !dbg !6977
  %tobool187 = icmp ne i64 %expval186, 0, !dbg !6977
  br i1 %tobool187, label %if.then188, label %if.end189, !dbg !6981

if.then188:                                       ; preds = %while.end
  %117 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !6982, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %117, ptr noundef @.str.78), !dbg !6984
  %118 = load ptr, ptr @__pyx_f, align 16, !dbg !6985, !tbaa !1899
  store ptr %118, ptr %__pyx_filename, align 8, !dbg !6985, !tbaa !1899
  %119 = load ptr, ptr %__pyx_filename, align 8, !dbg !6985, !tbaa !1899
  store i32 40, ptr %__pyx_lineno, align 4, !dbg !6985, !tbaa !1984
  %120 = load i32, ptr %__pyx_lineno, align 4, !dbg !6985, !tbaa !1984
  store i32 3408, ptr %__pyx_clineno, align 4, !dbg !6985, !tbaa !1984
  %121 = load i32, ptr %__pyx_clineno, align 4, !dbg !6985, !tbaa !1984
  br label %__pyx_L1_error, !dbg !6988

if.end189:                                        ; preds = %while.end
  %122 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !6989, !tbaa !1899
  %states190 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_FastMachine, ptr %122, i32 0, i32 3, !dbg !6990
  %123 = load ptr, ptr %states190, align 8, !dbg !6990, !tbaa !6979
  store ptr %123, ptr %__pyx_t_1, align 8, !dbg !6991, !tbaa !1899
  %124 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6992, !tbaa !1899
  call void @Py_INCREF(ptr noundef %124), !dbg !6992
  store i64 0, ptr %__pyx_t_3, align 8, !dbg !6993, !tbaa !2597
  br label %for.cond, !dbg !6994

for.cond:                                         ; preds = %while.end704, %if.end189
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #11, !dbg !6995
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp, metadata !6645, metadata !DIExpression()), !dbg !6996
  %125 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6997, !tbaa !1899
  %call191 = call i64 @PyList_GET_SIZE(ptr noundef %125), !dbg !6997
  store i64 %call191, ptr %__pyx_temp, align 8, !dbg !6996, !tbaa !2597
  %126 = load i64, ptr %__pyx_t_3, align 8, !dbg !6998, !tbaa !2597
  %127 = load i64, ptr %__pyx_temp, align 8, !dbg !7000, !tbaa !2597
  %cmp192 = icmp sge i64 %126, %127, !dbg !7001
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !7002

if.then194:                                       ; preds = %for.cond
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup196, !dbg !7003

if.end195:                                        ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7004
  br label %cleanup196, !dbg !7004

cleanup196:                                       ; preds = %if.end195, %if.then194
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #11, !dbg !7004
  %cleanup.dest197 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest197, label %unreachable [
    i32 0, label %cleanup.cont198
    i32 13, label %for.end705
  ]

cleanup.cont198:                                  ; preds = %cleanup196
  %128 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7005, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %128, i32 0, i32 1, !dbg !7005
  %129 = load ptr, ptr %ob_item, align 8, !dbg !7005, !tbaa !3664
  %130 = load i64, ptr %__pyx_t_3, align 8, !dbg !7005, !tbaa !2597
  %arrayidx = getelementptr ptr, ptr %129, i64 %130, !dbg !7005
  %131 = load ptr, ptr %arrayidx, align 8, !dbg !7005, !tbaa !1899
  store ptr %131, ptr %__pyx_t_5, align 8, !dbg !7006, !tbaa !1899
  %132 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7007, !tbaa !1899
  call void @Py_INCREF(ptr noundef %132), !dbg !7007
  %133 = load i64, ptr %__pyx_t_3, align 8, !dbg !7008, !tbaa !2597
  %inc = add i64 %133, 1, !dbg !7008
  store i64 %inc, ptr %__pyx_t_3, align 8, !dbg !7008, !tbaa !2597
  br label %do.body199, !dbg !7009

do.body199:                                       ; preds = %cleanup.cont198
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp200) #11, !dbg !7010
  tail call void @llvm.dbg.declare(metadata ptr %tmp200, metadata !6650, metadata !DIExpression()), !dbg !7010
  %134 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !7010, !tbaa !1899
  store ptr %134, ptr %tmp200, align 8, !dbg !7010, !tbaa !1899
  %135 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7010, !tbaa !1899
  store ptr %135, ptr %__pyx_v_new_state, align 8, !dbg !7010, !tbaa !1899
  %136 = load ptr, ptr %tmp200, align 8, !dbg !7010, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %136), !dbg !7010
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp200) #11, !dbg !7009
  br label %do.cond201, !dbg !7010

do.cond201:                                       ; preds = %do.body199
  br label %do.end202, !dbg !7010

do.end202:                                        ; preds = %do.cond201
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7011, !tbaa !1899
  %137 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7012, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap = getelementptr inbounds %struct.__pyx_mstate, ptr %137, i32 0, i32 14, !dbg !7012
  %138 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap, align 8, !dbg !7012, !tbaa !3501
  %call203 = call ptr @__Pyx_PyObject_CallNoArg(ptr noundef %138), !dbg !7013
  store ptr %call203, ptr %__pyx_t_5, align 8, !dbg !7014, !tbaa !1899
  %139 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7015, !tbaa !1899
  %tobool204 = icmp ne ptr %139, null, !dbg !7015
  %lnot205 = xor i1 %tobool204, true, !dbg !7015
  %lnot207 = xor i1 %lnot205, true, !dbg !7015
  %lnot209 = xor i1 %lnot207, true, !dbg !7015
  %lnot.ext210 = zext i1 %lnot209 to i32, !dbg !7015
  %conv211 = sext i32 %lnot.ext210 to i64, !dbg !7015
  %expval212 = call i64 @llvm.expect.i64(i64 %conv211, i64 0), !dbg !7015
  %tobool213 = icmp ne i64 %expval212, 0, !dbg !7015
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !7017

if.then214:                                       ; preds = %do.end202
  %140 = load ptr, ptr @__pyx_f, align 16, !dbg !7018, !tbaa !1899
  store ptr %140, ptr %__pyx_filename, align 8, !dbg !7018, !tbaa !1899
  %141 = load ptr, ptr %__pyx_filename, align 8, !dbg !7018, !tbaa !1899
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !7018, !tbaa !1984
  %142 = load i32, ptr %__pyx_lineno, align 4, !dbg !7018, !tbaa !1984
  store i32 3436, ptr %__pyx_clineno, align 4, !dbg !7018, !tbaa !1984
  %143 = load i32, ptr %__pyx_clineno, align 4, !dbg !7018, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7021

if.end215:                                        ; preds = %do.end202
  br label %do.body216, !dbg !7022

do.body216:                                       ; preds = %if.end215
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp217) #11, !dbg !7023
  tail call void @llvm.dbg.declare(metadata ptr %tmp217, metadata !6652, metadata !DIExpression()), !dbg !7023
  %144 = load ptr, ptr %__pyx_v_transitions, align 8, !dbg !7023, !tbaa !1899
  store ptr %144, ptr %tmp217, align 8, !dbg !7023, !tbaa !1899
  %145 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7023, !tbaa !1899
  store ptr %145, ptr %__pyx_v_transitions, align 8, !dbg !7023, !tbaa !1899
  %146 = load ptr, ptr %tmp217, align 8, !dbg !7023, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %146), !dbg !7023
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp217) #11, !dbg !7022
  br label %do.cond218, !dbg !7023

do.cond218:                                       ; preds = %do.body216
  br label %do.end219, !dbg !7023

do.end219:                                        ; preds = %do.cond218
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7024, !tbaa !1899
  %147 = load ptr, ptr %__pyx_v_state_map, align 8, !dbg !7025, !tbaa !1899
  %148 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7026, !tbaa !1899
  %__pyx_n_s_new_to_old = getelementptr inbounds %struct.__pyx_mstate, ptr %148, i32 0, i32 64, !dbg !7026
  %149 = load ptr, ptr %__pyx_n_s_new_to_old, align 8, !dbg !7026, !tbaa !2425
  %call220 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %147, ptr noundef %149), !dbg !7027
  store ptr %call220, ptr %__pyx_t_6, align 8, !dbg !7028, !tbaa !1899
  %150 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7029, !tbaa !1899
  %tobool221 = icmp ne ptr %150, null, !dbg !7029
  %lnot222 = xor i1 %tobool221, true, !dbg !7029
  %lnot224 = xor i1 %lnot222, true, !dbg !7029
  %lnot226 = xor i1 %lnot224, true, !dbg !7029
  %lnot.ext227 = zext i1 %lnot226 to i32, !dbg !7029
  %conv228 = sext i32 %lnot.ext227 to i64, !dbg !7029
  %expval229 = call i64 @llvm.expect.i64(i64 %conv228, i64 0), !dbg !7029
  %tobool230 = icmp ne i64 %expval229, 0, !dbg !7029
  br i1 %tobool230, label %if.then231, label %if.end232, !dbg !7031

if.then231:                                       ; preds = %do.end219
  %151 = load ptr, ptr @__pyx_f, align 16, !dbg !7032, !tbaa !1899
  store ptr %151, ptr %__pyx_filename, align 8, !dbg !7032, !tbaa !1899
  %152 = load ptr, ptr %__pyx_filename, align 8, !dbg !7032, !tbaa !1899
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !7032, !tbaa !1984
  %153 = load i32, ptr %__pyx_lineno, align 4, !dbg !7032, !tbaa !1984
  store i32 3448, ptr %__pyx_clineno, align 4, !dbg !7032, !tbaa !1984
  %154 = load i32, ptr %__pyx_clineno, align 4, !dbg !7032, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7035

if.end232:                                        ; preds = %do.end219
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !7036, !tbaa !1899
  store i32 0, ptr %__pyx_t_4, align 4, !dbg !7037, !tbaa !1984
  %155 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7038, !tbaa !1899
  %call233 = call i32 @Py_IS_TYPE(ptr noundef %155, ptr noundef @PyMethod_Type), !dbg !7038
  %tobool234 = icmp ne i32 %call233, 0, !dbg !7038
  %lnot235 = xor i1 %tobool234, true, !dbg !7038
  %lnot237 = xor i1 %lnot235, true, !dbg !7038
  %lnot.ext238 = zext i1 %lnot237 to i32, !dbg !7038
  %conv239 = sext i32 %lnot.ext238 to i64, !dbg !7038
  %expval240 = call i64 @llvm.expect.i64(i64 %conv239, i64 1), !dbg !7038
  %tobool241 = icmp ne i64 %expval240, 0, !dbg !7038
  br i1 %tobool241, label %if.then242, label %if.end260, !dbg !7039

if.then242:                                       ; preds = %if.end232
  %156 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7040, !tbaa !1899
  %im_self243 = getelementptr inbounds %struct.PyMethodObject, ptr %156, i32 0, i32 2, !dbg !7040
  %157 = load ptr, ptr %im_self243, align 8, !dbg !7040, !tbaa !6934
  store ptr %157, ptr %__pyx_t_8, align 8, !dbg !7041, !tbaa !1899
  %158 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7042, !tbaa !1899
  %tobool244 = icmp ne ptr %158, null, !dbg !7042
  %lnot245 = xor i1 %tobool244, true, !dbg !7042
  %lnot247 = xor i1 %lnot245, true, !dbg !7042
  %lnot.ext248 = zext i1 %lnot247 to i32, !dbg !7042
  %conv249 = sext i32 %lnot.ext248 to i64, !dbg !7042
  %expval250 = call i64 @llvm.expect.i64(i64 %conv249, i64 1), !dbg !7042
  %tobool251 = icmp ne i64 %expval250, 0, !dbg !7042
  br i1 %tobool251, label %if.then252, label %if.end259, !dbg !7043

if.then252:                                       ; preds = %if.then242
  call void @llvm.lifetime.start.p0(i64 8, ptr %function253) #11, !dbg !7044
  tail call void @llvm.dbg.declare(metadata ptr %function253, metadata !6654, metadata !DIExpression()), !dbg !7045
  %159 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7046, !tbaa !1899
  %im_func254 = getelementptr inbounds %struct.PyMethodObject, ptr %159, i32 0, i32 1, !dbg !7046
  %160 = load ptr, ptr %im_func254, align 8, !dbg !7046, !tbaa !6942
  store ptr %160, ptr %function253, align 8, !dbg !7045, !tbaa !1899
  %161 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7047, !tbaa !1899
  call void @Py_INCREF(ptr noundef %161), !dbg !7047
  %162 = load ptr, ptr %function253, align 8, !dbg !7048, !tbaa !1899
  call void @Py_INCREF(ptr noundef %162), !dbg !7048
  br label %do.body255, !dbg !7049

do.body255:                                       ; preds = %if.then252
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp256) #11, !dbg !7050
  tail call void @llvm.dbg.declare(metadata ptr %tmp256, metadata !6659, metadata !DIExpression()), !dbg !7050
  %163 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7050, !tbaa !1899
  store ptr %163, ptr %tmp256, align 8, !dbg !7050, !tbaa !1899
  %164 = load ptr, ptr %function253, align 8, !dbg !7050, !tbaa !1899
  store ptr %164, ptr %__pyx_t_6, align 8, !dbg !7050, !tbaa !1899
  %165 = load ptr, ptr %tmp256, align 8, !dbg !7050, !tbaa !1899
  call void @Py_DECREF(ptr noundef %165), !dbg !7050
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp256) #11, !dbg !7049
  br label %do.cond257, !dbg !7050

do.cond257:                                       ; preds = %do.body255
  br label %do.end258, !dbg !7050

do.end258:                                        ; preds = %do.cond257
  store i32 1, ptr %__pyx_t_4, align 4, !dbg !7051, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function253) #11, !dbg !7052
  br label %if.end259, !dbg !7053

if.end259:                                        ; preds = %do.end258, %if.then242
  br label %if.end260, !dbg !7054

if.end260:                                        ; preds = %if.end259, %if.end232
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs261) #11, !dbg !7055
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs261, metadata !6661, metadata !DIExpression()), !dbg !7056
  %arrayinit.begin262 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs261, i64 0, i64 0, !dbg !7057
  %166 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7058, !tbaa !1899
  store ptr %166, ptr %arrayinit.begin262, align 8, !dbg !7057, !tbaa !1899
  %arrayinit.element263 = getelementptr inbounds ptr, ptr %arrayinit.begin262, i64 1, !dbg !7057
  %167 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !7059, !tbaa !1899
  store ptr %167, ptr %arrayinit.element263, align 8, !dbg !7057, !tbaa !1899
  %168 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7060, !tbaa !1899
  %arraydecay264 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs261, i64 0, i64 0, !dbg !7060
  %add.ptr265 = getelementptr ptr, ptr %arraydecay264, i64 1, !dbg !7060
  %169 = load i32, ptr %__pyx_t_4, align 4, !dbg !7060, !tbaa !1984
  %idx.ext266 = sext i32 %169 to i64, !dbg !7060
  %idx.neg267 = sub i64 0, %idx.ext266, !dbg !7060
  %add.ptr268 = getelementptr ptr, ptr %add.ptr265, i64 %idx.neg267, !dbg !7060
  %170 = load i32, ptr %__pyx_t_4, align 4, !dbg !7060, !tbaa !1984
  %add269 = add i32 1, %170, !dbg !7060
  %conv270 = sext i32 %add269 to i64, !dbg !7060
  %call271 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %168, ptr noundef %add.ptr268, i64 noundef %conv270, ptr noundef null), !dbg !7060
  store ptr %call271, ptr %__pyx_t_5, align 8, !dbg !7061, !tbaa !1899
  %171 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7062, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %171), !dbg !7062
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !7063, !tbaa !1899
  %172 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7064, !tbaa !1899
  %tobool272 = icmp ne ptr %172, null, !dbg !7064
  %lnot273 = xor i1 %tobool272, true, !dbg !7064
  %lnot275 = xor i1 %lnot273, true, !dbg !7064
  %lnot277 = xor i1 %lnot275, true, !dbg !7064
  %lnot.ext278 = zext i1 %lnot277 to i32, !dbg !7064
  %conv279 = sext i32 %lnot.ext278 to i64, !dbg !7064
  %expval280 = call i64 @llvm.expect.i64(i64 %conv279, i64 0), !dbg !7064
  %tobool281 = icmp ne i64 %expval280, 0, !dbg !7064
  br i1 %tobool281, label %if.then282, label %if.end283, !dbg !7066

if.then282:                                       ; preds = %if.end260
  %173 = load ptr, ptr @__pyx_f, align 16, !dbg !7067, !tbaa !1899
  store ptr %173, ptr %__pyx_filename, align 8, !dbg !7067, !tbaa !1899
  %174 = load ptr, ptr %__pyx_filename, align 8, !dbg !7067, !tbaa !1899
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !7067, !tbaa !1984
  %175 = load i32, ptr %__pyx_lineno, align 4, !dbg !7067, !tbaa !1984
  store i32 3468, ptr %__pyx_clineno, align 4, !dbg !7067, !tbaa !1984
  %176 = load i32, ptr %__pyx_clineno, align 4, !dbg !7067, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup284, !dbg !7070

if.end283:                                        ; preds = %if.end260
  %177 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7071, !tbaa !1899
  call void @Py_DECREF(ptr noundef %177), !dbg !7071
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !7072, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7073
  br label %cleanup284, !dbg !7073

cleanup284:                                       ; preds = %if.then282, %if.end283
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs261) #11, !dbg !7073
  %cleanup.dest285 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest285, label %cleanup855 [
    i32 0, label %cleanup.cont286
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont286:                                  ; preds = %cleanup284
  %178 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7074, !tbaa !1899
  %call287 = call i32 @Py_IS_TYPE(ptr noundef %178, ptr noundef @PyList_Type), !dbg !7074
  %tobool288 = icmp ne i32 %call287, 0, !dbg !7074
  %lnot289 = xor i1 %tobool288, true, !dbg !7074
  %lnot291 = xor i1 %lnot289, true, !dbg !7074
  %lnot.ext292 = zext i1 %lnot291 to i32, !dbg !7074
  %conv293 = sext i32 %lnot.ext292 to i64, !dbg !7074
  %expval294 = call i64 @llvm.expect.i64(i64 %conv293, i64 1), !dbg !7074
  %tobool295 = icmp ne i64 %expval294, 0, !dbg !7074
  br i1 %tobool295, label %if.then298, label %lor.lhs.false, !dbg !7076

lor.lhs.false:                                    ; preds = %cleanup.cont286
  %179 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7077, !tbaa !1899
  %call296 = call i32 @Py_IS_TYPE(ptr noundef %179, ptr noundef @PyTuple_Type), !dbg !7077
  %tobool297 = icmp ne i32 %call296, 0, !dbg !7077
  br i1 %tobool297, label %if.then298, label %if.else, !dbg !7078

if.then298:                                       ; preds = %lor.lhs.false, %cleanup.cont286
  %180 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7079, !tbaa !1899
  store ptr %180, ptr %__pyx_t_6, align 8, !dbg !7081, !tbaa !1899
  %181 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7082, !tbaa !1899
  call void @Py_INCREF(ptr noundef %181), !dbg !7082
  store i64 0, ptr %__pyx_t_2, align 8, !dbg !7083, !tbaa !2597
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !7084, !tbaa !1899
  br label %if.end325, !dbg !7085

if.else:                                          ; preds = %lor.lhs.false
  store i64 -1, ptr %__pyx_t_2, align 8, !dbg !7086, !tbaa !2597
  %182 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7088, !tbaa !1899
  %call299 = call ptr @PyObject_GetIter(ptr noundef %182), !dbg !7089
  store ptr %call299, ptr %__pyx_t_6, align 8, !dbg !7090, !tbaa !1899
  %183 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7091, !tbaa !1899
  %tobool300 = icmp ne ptr %183, null, !dbg !7091
  %lnot301 = xor i1 %tobool300, true, !dbg !7091
  %lnot303 = xor i1 %lnot301, true, !dbg !7091
  %lnot305 = xor i1 %lnot303, true, !dbg !7091
  %lnot.ext306 = zext i1 %lnot305 to i32, !dbg !7091
  %conv307 = sext i32 %lnot.ext306 to i64, !dbg !7091
  %expval308 = call i64 @llvm.expect.i64(i64 %conv307, i64 0), !dbg !7091
  %tobool309 = icmp ne i64 %expval308, 0, !dbg !7091
  br i1 %tobool309, label %if.then310, label %if.end311, !dbg !7093

if.then310:                                       ; preds = %if.else
  %184 = load ptr, ptr @__pyx_f, align 16, !dbg !7094, !tbaa !1899
  store ptr %184, ptr %__pyx_filename, align 8, !dbg !7094, !tbaa !1899
  %185 = load ptr, ptr %__pyx_filename, align 8, !dbg !7094, !tbaa !1899
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !7094, !tbaa !1984
  %186 = load i32, ptr %__pyx_lineno, align 4, !dbg !7094, !tbaa !1984
  store i32 3477, ptr %__pyx_clineno, align 4, !dbg !7094, !tbaa !1984
  %187 = load i32, ptr %__pyx_clineno, align 4, !dbg !7094, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7097

if.end311:                                        ; preds = %if.else
  %188 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7098, !tbaa !1899
  %call312 = call ptr @Py_TYPE(ptr noundef %188), !dbg !7098
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call312, i32 0, i32 26, !dbg !7098
  %189 = load ptr, ptr %tp_iternext, align 8, !dbg !7098, !tbaa !7099
  store ptr %189, ptr %__pyx_t_9, align 8, !dbg !7100, !tbaa !1899
  %190 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7101, !tbaa !1899
  %tobool313 = icmp ne ptr %190, null, !dbg !7101
  %lnot314 = xor i1 %tobool313, true, !dbg !7101
  %lnot316 = xor i1 %lnot314, true, !dbg !7101
  %lnot318 = xor i1 %lnot316, true, !dbg !7101
  %lnot.ext319 = zext i1 %lnot318 to i32, !dbg !7101
  %conv320 = sext i32 %lnot.ext319 to i64, !dbg !7101
  %expval321 = call i64 @llvm.expect.i64(i64 %conv320, i64 0), !dbg !7101
  %tobool322 = icmp ne i64 %expval321, 0, !dbg !7101
  br i1 %tobool322, label %if.then323, label %if.end324, !dbg !7103

if.then323:                                       ; preds = %if.end311
  %191 = load ptr, ptr @__pyx_f, align 16, !dbg !7104, !tbaa !1899
  store ptr %191, ptr %__pyx_filename, align 8, !dbg !7104, !tbaa !1899
  %192 = load ptr, ptr %__pyx_filename, align 8, !dbg !7104, !tbaa !1899
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !7104, !tbaa !1984
  %193 = load i32, ptr %__pyx_lineno, align 4, !dbg !7104, !tbaa !1984
  store i32 3479, ptr %__pyx_clineno, align 4, !dbg !7104, !tbaa !1984
  %194 = load i32, ptr %__pyx_clineno, align 4, !dbg !7104, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7107

if.end324:                                        ; preds = %if.end311
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then298
  %195 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7108, !tbaa !1899
  call void @Py_DECREF(ptr noundef %195), !dbg !7108
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7109, !tbaa !1899
  br label %for.cond326, !dbg !7110

for.cond326:                                      ; preds = %while.end557, %if.end325
  %196 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7111, !tbaa !1899
  %tobool327 = icmp ne ptr %196, null, !dbg !7111
  %lnot328 = xor i1 %tobool327, true, !dbg !7111
  %lnot330 = xor i1 %lnot328, true, !dbg !7111
  %lnot332 = xor i1 %lnot330, true, !dbg !7111
  %lnot.ext333 = zext i1 %lnot332 to i32, !dbg !7111
  %conv334 = sext i32 %lnot.ext333 to i64, !dbg !7111
  %expval335 = call i64 @llvm.expect.i64(i64 %conv334, i64 1), !dbg !7111
  %tobool336 = icmp ne i64 %expval335, 0, !dbg !7111
  br i1 %tobool336, label %if.then337, label %if.else374, !dbg !7112

if.then337:                                       ; preds = %for.cond326
  %197 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7113, !tbaa !1899
  %call338 = call i32 @Py_IS_TYPE(ptr noundef %197, ptr noundef @PyList_Type), !dbg !7113
  %tobool339 = icmp ne i32 %call338, 0, !dbg !7113
  %lnot340 = xor i1 %tobool339, true, !dbg !7113
  %lnot342 = xor i1 %lnot340, true, !dbg !7113
  %lnot.ext343 = zext i1 %lnot342 to i32, !dbg !7113
  %conv344 = sext i32 %lnot.ext343 to i64, !dbg !7113
  %expval345 = call i64 @llvm.expect.i64(i64 %conv344, i64 1), !dbg !7113
  %tobool346 = icmp ne i64 %expval345, 0, !dbg !7113
  br i1 %tobool346, label %if.then347, label %if.else360, !dbg !7114

if.then347:                                       ; preds = %if.then337
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp348) #11, !dbg !7115
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp348, metadata !6664, metadata !DIExpression()), !dbg !7116
  %198 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7117, !tbaa !1899
  %call349 = call i64 @PyList_GET_SIZE(ptr noundef %198), !dbg !7117
  store i64 %call349, ptr %__pyx_temp348, align 8, !dbg !7116, !tbaa !2597
  %199 = load i64, ptr %__pyx_t_2, align 8, !dbg !7118, !tbaa !2597
  %200 = load i64, ptr %__pyx_temp348, align 8, !dbg !7120, !tbaa !2597
  %cmp350 = icmp sge i64 %199, %200, !dbg !7121
  br i1 %cmp350, label %if.then352, label %if.end353, !dbg !7122

if.then352:                                       ; preds = %if.then347
  store i32 21, ptr %cleanup.dest.slot, align 4
  br label %cleanup354, !dbg !7123

if.end353:                                        ; preds = %if.then347
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7124
  br label %cleanup354, !dbg !7124

cleanup354:                                       ; preds = %if.end353, %if.then352
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp348) #11, !dbg !7124
  %cleanup.dest355 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest355, label %unreachable [
    i32 0, label %cleanup.cont356
    i32 21, label %for.end
  ]

cleanup.cont356:                                  ; preds = %cleanup354
  %201 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7125, !tbaa !1899
  %ob_item357 = getelementptr inbounds %struct.PyListObject, ptr %201, i32 0, i32 1, !dbg !7125
  %202 = load ptr, ptr %ob_item357, align 8, !dbg !7125, !tbaa !3664
  %203 = load i64, ptr %__pyx_t_2, align 8, !dbg !7125, !tbaa !2597
  %arrayidx358 = getelementptr ptr, ptr %202, i64 %203, !dbg !7125
  %204 = load ptr, ptr %arrayidx358, align 8, !dbg !7125, !tbaa !1899
  store ptr %204, ptr %__pyx_t_5, align 8, !dbg !7126, !tbaa !1899
  %205 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7127, !tbaa !1899
  call void @Py_INCREF(ptr noundef %205), !dbg !7127
  %206 = load i64, ptr %__pyx_t_2, align 8, !dbg !7128, !tbaa !2597
  %inc359 = add i64 %206, 1, !dbg !7128
  store i64 %inc359, ptr %__pyx_t_2, align 8, !dbg !7128, !tbaa !2597
  br label %if.end373, !dbg !7129

if.else360:                                       ; preds = %if.then337
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp361) #11, !dbg !7130
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp361, metadata !6673, metadata !DIExpression()), !dbg !7131
  %207 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7132, !tbaa !1899
  %call362 = call i64 @PyTuple_GET_SIZE(ptr noundef %207), !dbg !7132
  store i64 %call362, ptr %__pyx_temp361, align 8, !dbg !7131, !tbaa !2597
  %208 = load i64, ptr %__pyx_t_2, align 8, !dbg !7133, !tbaa !2597
  %209 = load i64, ptr %__pyx_temp361, align 8, !dbg !7135, !tbaa !2597
  %cmp363 = icmp sge i64 %208, %209, !dbg !7136
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !7137

if.then365:                                       ; preds = %if.else360
  store i32 21, ptr %cleanup.dest.slot, align 4
  br label %cleanup367, !dbg !7138

if.end366:                                        ; preds = %if.else360
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7139
  br label %cleanup367, !dbg !7139

cleanup367:                                       ; preds = %if.end366, %if.then365
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp361) #11, !dbg !7139
  %cleanup.dest368 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest368, label %unreachable [
    i32 0, label %cleanup.cont369
    i32 21, label %for.end
  ]

cleanup.cont369:                                  ; preds = %cleanup367
  %210 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7140, !tbaa !1899
  %ob_item370 = getelementptr inbounds %struct.PyTupleObject, ptr %210, i32 0, i32 1, !dbg !7140
  %211 = load i64, ptr %__pyx_t_2, align 8, !dbg !7140, !tbaa !2597
  %arrayidx371 = getelementptr [1 x ptr], ptr %ob_item370, i64 0, i64 %211, !dbg !7140
  %212 = load ptr, ptr %arrayidx371, align 8, !dbg !7140, !tbaa !1899
  store ptr %212, ptr %__pyx_t_5, align 8, !dbg !7141, !tbaa !1899
  %213 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7142, !tbaa !1899
  call void @Py_INCREF(ptr noundef %213), !dbg !7142
  %214 = load i64, ptr %__pyx_t_2, align 8, !dbg !7143, !tbaa !2597
  %inc372 = add i64 %214, 1, !dbg !7143
  store i64 %inc372, ptr %__pyx_t_2, align 8, !dbg !7143, !tbaa !2597
  br label %if.end373

if.end373:                                        ; preds = %cleanup.cont369, %cleanup.cont356
  br label %if.end406, !dbg !7144

if.else374:                                       ; preds = %for.cond326
  %215 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7145, !tbaa !1899
  %216 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7146, !tbaa !1899
  %call375 = call ptr %215(ptr noundef %216), !dbg !7145
  store ptr %call375, ptr %__pyx_t_5, align 8, !dbg !7147, !tbaa !1899
  %217 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7148, !tbaa !1899
  %tobool376 = icmp ne ptr %217, null, !dbg !7148
  %lnot377 = xor i1 %tobool376, true, !dbg !7148
  %lnot379 = xor i1 %lnot377, true, !dbg !7148
  %lnot381 = xor i1 %lnot379, true, !dbg !7148
  %lnot.ext382 = zext i1 %lnot381 to i32, !dbg !7148
  %conv383 = sext i32 %lnot.ext382 to i64, !dbg !7148
  %expval384 = call i64 @llvm.expect.i64(i64 %conv383, i64 0), !dbg !7148
  %tobool385 = icmp ne i64 %expval384, 0, !dbg !7148
  br i1 %tobool385, label %if.then386, label %if.end405, !dbg !7149

if.then386:                                       ; preds = %if.else374
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #11, !dbg !7150
  tail call void @llvm.dbg.declare(metadata ptr %exc_type, metadata !6676, metadata !DIExpression()), !dbg !7151
  %call387 = call ptr @PyErr_Occurred(), !dbg !7152
  store ptr %call387, ptr %exc_type, align 8, !dbg !7151, !tbaa !1899
  %218 = load ptr, ptr %exc_type, align 8, !dbg !7153, !tbaa !1899
  %tobool388 = icmp ne ptr %218, null, !dbg !7153
  br i1 %tobool388, label %if.then389, label %if.end402, !dbg !7155

if.then389:                                       ; preds = %if.then386
  %219 = load ptr, ptr %exc_type, align 8, !dbg !7156, !tbaa !1899
  %220 = load ptr, ptr @PyExc_StopIteration, align 8, !dbg !7156, !tbaa !1899
  %call390 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %219, ptr noundef %220), !dbg !7156
  %tobool391 = icmp ne i32 %call390, 0, !dbg !7156
  %lnot392 = xor i1 %tobool391, true, !dbg !7156
  %lnot394 = xor i1 %lnot392, true, !dbg !7156
  %lnot.ext395 = zext i1 %lnot394 to i32, !dbg !7156
  %conv396 = sext i32 %lnot.ext395 to i64, !dbg !7156
  %expval397 = call i64 @llvm.expect.i64(i64 %conv396, i64 1), !dbg !7156
  %tobool398 = icmp ne i64 %expval397, 0, !dbg !7156
  br i1 %tobool398, label %if.then399, label %if.else400, !dbg !7159

if.then399:                                       ; preds = %if.then389
  call void @PyErr_Clear(), !dbg !7160
  br label %if.end401, !dbg !7160

if.else400:                                       ; preds = %if.then389
  %221 = load ptr, ptr @__pyx_f, align 16, !dbg !7161, !tbaa !1899
  store ptr %221, ptr %__pyx_filename, align 8, !dbg !7161, !tbaa !1899
  %222 = load ptr, ptr %__pyx_filename, align 8, !dbg !7161, !tbaa !1899
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !7161, !tbaa !1984
  %223 = load i32, ptr %__pyx_lineno, align 4, !dbg !7161, !tbaa !1984
  store i32 3519, ptr %__pyx_clineno, align 4, !dbg !7161, !tbaa !1984
  %224 = load i32, ptr %__pyx_clineno, align 4, !dbg !7161, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup403, !dbg !7164

if.end401:                                        ; preds = %if.then399
  br label %if.end402, !dbg !7165

if.end402:                                        ; preds = %if.end401, %if.then386
  store i32 21, ptr %cleanup.dest.slot, align 4
  br label %cleanup403, !dbg !7166

cleanup403:                                       ; preds = %if.else400, %if.end402
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #11, !dbg !7167
  %cleanup.dest404 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest404, label %cleanup855 [
    i32 21, label %for.end
    i32 2, label %__pyx_L1_error
  ]

if.end405:                                        ; preds = %if.else374
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %if.end373
  br label %do.body407, !dbg !7168

do.body407:                                       ; preds = %if.end406
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp408) #11, !dbg !7169
  tail call void @llvm.dbg.declare(metadata ptr %tmp408, metadata !6680, metadata !DIExpression()), !dbg !7169
  %225 = load ptr, ptr %__pyx_v_old_state, align 8, !dbg !7169, !tbaa !1899
  store ptr %225, ptr %tmp408, align 8, !dbg !7169, !tbaa !1899
  %226 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7169, !tbaa !1899
  store ptr %226, ptr %__pyx_v_old_state, align 8, !dbg !7169, !tbaa !1899
  %227 = load ptr, ptr %tmp408, align 8, !dbg !7169, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %227), !dbg !7169
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp408) #11, !dbg !7168
  br label %do.cond409, !dbg !7169

do.cond409:                                       ; preds = %do.body407
  br label %do.end410, !dbg !7169

do.end410:                                        ; preds = %do.cond409
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7170, !tbaa !1899
  store i64 0, ptr %__pyx_t_10, align 8, !dbg !7171, !tbaa !2597
  %228 = load ptr, ptr %__pyx_v_old_state, align 8, !dbg !7172, !tbaa !1899
  %229 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7173, !tbaa !1899
  %__pyx_n_s_transitions = getelementptr inbounds %struct.__pyx_mstate, ptr %229, i32 0, i32 86, !dbg !7173
  %230 = load ptr, ptr %__pyx_n_s_transitions, align 8, !dbg !7173, !tbaa !7174
  %call411 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %228, ptr noundef %230), !dbg !7175
  store ptr %call411, ptr %__pyx_t_8, align 8, !dbg !7176, !tbaa !1899
  %231 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7177, !tbaa !1899
  %tobool412 = icmp ne ptr %231, null, !dbg !7177
  %lnot413 = xor i1 %tobool412, true, !dbg !7177
  %lnot415 = xor i1 %lnot413, true, !dbg !7177
  %lnot417 = xor i1 %lnot415, true, !dbg !7177
  %lnot.ext418 = zext i1 %lnot417 to i32, !dbg !7177
  %conv419 = sext i32 %lnot.ext418 to i64, !dbg !7177
  %expval420 = call i64 @llvm.expect.i64(i64 %conv419, i64 0), !dbg !7177
  %tobool421 = icmp ne i64 %expval420, 0, !dbg !7177
  br i1 %tobool421, label %if.then422, label %if.end423, !dbg !7179

if.then422:                                       ; preds = %do.end410
  %232 = load ptr, ptr @__pyx_f, align 16, !dbg !7180, !tbaa !1899
  store ptr %232, ptr %__pyx_filename, align 8, !dbg !7180, !tbaa !1899
  %233 = load ptr, ptr %__pyx_filename, align 8, !dbg !7180, !tbaa !1899
  store i32 43, ptr %__pyx_lineno, align 4, !dbg !7180, !tbaa !1984
  %234 = load i32, ptr %__pyx_lineno, align 4, !dbg !7180, !tbaa !1984
  store i32 3536, ptr %__pyx_clineno, align 4, !dbg !7180, !tbaa !1984
  %235 = load i32, ptr %__pyx_clineno, align 4, !dbg !7180, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7183

if.end423:                                        ; preds = %do.end410
  %236 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7184, !tbaa !1899
  %cmp424 = icmp eq ptr %236, @_Py_NoneStruct, !dbg !7184
  %lnot426 = xor i1 %cmp424, true, !dbg !7184
  %lnot428 = xor i1 %lnot426, true, !dbg !7184
  %lnot.ext429 = zext i1 %lnot428 to i32, !dbg !7184
  %conv430 = sext i32 %lnot.ext429 to i64, !dbg !7184
  %expval431 = call i64 @llvm.expect.i64(i64 %conv430, i64 0), !dbg !7184
  %tobool432 = icmp ne i64 %expval431, 0, !dbg !7184
  br i1 %tobool432, label %if.then433, label %if.end435, !dbg !7186

if.then433:                                       ; preds = %if.end423
  %237 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !7187, !tbaa !1899
  %call434 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %237, ptr noundef @.str.76, ptr noundef @.str.77), !dbg !7189
  %238 = load ptr, ptr @__pyx_f, align 16, !dbg !7190, !tbaa !1899
  store ptr %238, ptr %__pyx_filename, align 8, !dbg !7190, !tbaa !1899
  %239 = load ptr, ptr %__pyx_filename, align 8, !dbg !7190, !tbaa !1899
  store i32 43, ptr %__pyx_lineno, align 4, !dbg !7190, !tbaa !1984
  %240 = load i32, ptr %__pyx_lineno, align 4, !dbg !7190, !tbaa !1984
  store i32 3540, ptr %__pyx_clineno, align 4, !dbg !7190, !tbaa !1984
  %241 = load i32, ptr %__pyx_clineno, align 4, !dbg !7190, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7193

if.end435:                                        ; preds = %if.end423
  %242 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7194, !tbaa !1899
  %243 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7195, !tbaa !1899
  %__pyx_n_s_items436 = getelementptr inbounds %struct.__pyx_mstate, ptr %243, i32 0, i32 57, !dbg !7195
  %244 = load ptr, ptr %__pyx_n_s_items436, align 8, !dbg !7195, !tbaa !6847
  %call437 = call ptr @__Pyx_dict_iterator(ptr noundef %242, i32 noundef 0, ptr noundef %244, ptr noundef %__pyx_t_11, ptr noundef %__pyx_t_4), !dbg !7196
  store ptr %call437, ptr %__pyx_t_12, align 8, !dbg !7197, !tbaa !1899
  %245 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7198, !tbaa !1899
  %tobool438 = icmp ne ptr %245, null, !dbg !7198
  %lnot439 = xor i1 %tobool438, true, !dbg !7198
  %lnot441 = xor i1 %lnot439, true, !dbg !7198
  %lnot443 = xor i1 %lnot441, true, !dbg !7198
  %lnot.ext444 = zext i1 %lnot443 to i32, !dbg !7198
  %conv445 = sext i32 %lnot.ext444 to i64, !dbg !7198
  %expval446 = call i64 @llvm.expect.i64(i64 %conv445, i64 0), !dbg !7198
  %tobool447 = icmp ne i64 %expval446, 0, !dbg !7198
  br i1 %tobool447, label %if.then448, label %if.end449, !dbg !7200

if.then448:                                       ; preds = %if.end435
  %246 = load ptr, ptr @__pyx_f, align 16, !dbg !7201, !tbaa !1899
  store ptr %246, ptr %__pyx_filename, align 8, !dbg !7201, !tbaa !1899
  %247 = load ptr, ptr %__pyx_filename, align 8, !dbg !7201, !tbaa !1899
  store i32 43, ptr %__pyx_lineno, align 4, !dbg !7201, !tbaa !1984
  %248 = load i32, ptr %__pyx_lineno, align 4, !dbg !7201, !tbaa !1984
  store i32 3542, ptr %__pyx_clineno, align 4, !dbg !7201, !tbaa !1984
  %249 = load i32, ptr %__pyx_clineno, align 4, !dbg !7201, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7204

if.end449:                                        ; preds = %if.end435
  %250 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7205, !tbaa !1899
  call void @Py_DECREF(ptr noundef %250), !dbg !7205
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !7206, !tbaa !1899
  %251 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7207, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %251), !dbg !7207
  %252 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7208, !tbaa !1899
  store ptr %252, ptr %__pyx_t_5, align 8, !dbg !7209, !tbaa !1899
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7210, !tbaa !1899
  br label %while.cond450, !dbg !7211

while.cond450:                                    ; preds = %if.end556, %if.end449
  br label %while.body451, !dbg !7211

while.body451:                                    ; preds = %while.cond450
  %253 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7212, !tbaa !1899
  %254 = load i64, ptr %__pyx_t_11, align 8, !dbg !7213, !tbaa !2597
  %255 = load i32, ptr %__pyx_t_4, align 4, !dbg !7214, !tbaa !1984
  %call452 = call i32 @__Pyx_dict_iter_next(ptr noundef %253, i64 noundef %254, ptr noundef %__pyx_t_10, ptr noundef %__pyx_t_12, ptr noundef %__pyx_t_8, ptr noundef null, i32 noundef %255), !dbg !7215
  store i32 %call452, ptr %__pyx_t_7, align 4, !dbg !7216, !tbaa !1984
  %256 = load i32, ptr %__pyx_t_7, align 4, !dbg !7217, !tbaa !1984
  %cmp453 = icmp eq i32 %256, 0, !dbg !7217
  %lnot455 = xor i1 %cmp453, true, !dbg !7217
  %lnot457 = xor i1 %lnot455, true, !dbg !7217
  %lnot.ext458 = zext i1 %lnot457 to i32, !dbg !7217
  %conv459 = sext i32 %lnot.ext458 to i64, !dbg !7217
  %expval460 = call i64 @llvm.expect.i64(i64 %conv459, i64 0), !dbg !7217
  %tobool461 = icmp ne i64 %expval460, 0, !dbg !7217
  br i1 %tobool461, label %if.then462, label %if.end463, !dbg !7219

if.then462:                                       ; preds = %while.body451
  br label %while.end557, !dbg !7220

if.end463:                                        ; preds = %while.body451
  %257 = load i32, ptr %__pyx_t_7, align 4, !dbg !7221, !tbaa !1984
  %cmp464 = icmp eq i32 %257, -1, !dbg !7221
  %lnot466 = xor i1 %cmp464, true, !dbg !7221
  %lnot468 = xor i1 %lnot466, true, !dbg !7221
  %lnot.ext469 = zext i1 %lnot468 to i32, !dbg !7221
  %conv470 = sext i32 %lnot.ext469 to i64, !dbg !7221
  %expval471 = call i64 @llvm.expect.i64(i64 %conv470, i64 0), !dbg !7221
  %tobool472 = icmp ne i64 %expval471, 0, !dbg !7221
  br i1 %tobool472, label %if.then473, label %if.end474, !dbg !7223

if.then473:                                       ; preds = %if.end463
  %258 = load ptr, ptr @__pyx_f, align 16, !dbg !7224, !tbaa !1899
  store ptr %258, ptr %__pyx_filename, align 8, !dbg !7224, !tbaa !1899
  %259 = load ptr, ptr %__pyx_filename, align 8, !dbg !7224, !tbaa !1899
  store i32 43, ptr %__pyx_lineno, align 4, !dbg !7224, !tbaa !1984
  %260 = load i32, ptr %__pyx_lineno, align 4, !dbg !7224, !tbaa !1984
  store i32 3551, ptr %__pyx_clineno, align 4, !dbg !7224, !tbaa !1984
  %261 = load i32, ptr %__pyx_clineno, align 4, !dbg !7224, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7227

if.end474:                                        ; preds = %if.end463
  br label %do.body475, !dbg !7228

do.body475:                                       ; preds = %if.end474
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp476) #11, !dbg !7229
  tail call void @llvm.dbg.declare(metadata ptr %tmp476, metadata !6682, metadata !DIExpression()), !dbg !7229
  %262 = load ptr, ptr %__pyx_v_event, align 8, !dbg !7229, !tbaa !1899
  store ptr %262, ptr %tmp476, align 8, !dbg !7229, !tbaa !1899
  %263 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7229, !tbaa !1899
  store ptr %263, ptr %__pyx_v_event, align 8, !dbg !7229, !tbaa !1899
  %264 = load ptr, ptr %tmp476, align 8, !dbg !7229, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %264), !dbg !7229
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp476) #11, !dbg !7228
  br label %do.cond477, !dbg !7229

do.cond477:                                       ; preds = %do.body475
  br label %do.end478, !dbg !7229

do.end478:                                        ; preds = %do.cond477
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7230, !tbaa !1899
  br label %do.body479, !dbg !7231

do.body479:                                       ; preds = %do.end478
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp480) #11, !dbg !7232
  tail call void @llvm.dbg.declare(metadata ptr %tmp480, metadata !6685, metadata !DIExpression()), !dbg !7232
  %265 = load ptr, ptr %__pyx_v_old_target_states, align 8, !dbg !7232, !tbaa !1899
  store ptr %265, ptr %tmp480, align 8, !dbg !7232, !tbaa !1899
  %266 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7232, !tbaa !1899
  store ptr %266, ptr %__pyx_v_old_target_states, align 8, !dbg !7232, !tbaa !1899
  %267 = load ptr, ptr %tmp480, align 8, !dbg !7232, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %267), !dbg !7232
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp480) #11, !dbg !7231
  br label %do.cond481, !dbg !7232

do.cond481:                                       ; preds = %do.body479
  br label %do.end482, !dbg !7232

do.end482:                                        ; preds = %do.cond481
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !7233, !tbaa !1899
  %268 = load ptr, ptr %__pyx_v_event, align 8, !dbg !7234, !tbaa !1899
  %call483 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %268), !dbg !7235
  store i32 %call483, ptr %__pyx_t_14, align 4, !dbg !7236, !tbaa !1984
  %269 = load i32, ptr %__pyx_t_14, align 4, !dbg !7237, !tbaa !1984
  %cmp484 = icmp slt i32 %269, 0, !dbg !7237
  %lnot486 = xor i1 %cmp484, true, !dbg !7237
  %lnot488 = xor i1 %lnot486, true, !dbg !7237
  %lnot.ext489 = zext i1 %lnot488 to i32, !dbg !7237
  %conv490 = sext i32 %lnot.ext489 to i64, !dbg !7237
  %expval491 = call i64 @llvm.expect.i64(i64 %conv490, i64 0), !dbg !7237
  %tobool492 = icmp ne i64 %expval491, 0, !dbg !7237
  br i1 %tobool492, label %if.then493, label %if.end494, !dbg !7239

if.then493:                                       ; preds = %do.end482
  %270 = load ptr, ptr @__pyx_f, align 16, !dbg !7240, !tbaa !1899
  store ptr %270, ptr %__pyx_filename, align 8, !dbg !7240, !tbaa !1899
  %271 = load ptr, ptr %__pyx_filename, align 8, !dbg !7240, !tbaa !1899
  store i32 44, ptr %__pyx_lineno, align 4, !dbg !7240, !tbaa !1984
  %272 = load i32, ptr %__pyx_lineno, align 4, !dbg !7240, !tbaa !1984
  store i32 3566, ptr %__pyx_clineno, align 4, !dbg !7240, !tbaa !1984
  %273 = load i32, ptr %__pyx_clineno, align 4, !dbg !7240, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7243

if.end494:                                        ; preds = %do.end482
  %274 = load i32, ptr %__pyx_t_14, align 4, !dbg !7244, !tbaa !1984
  %tobool495 = icmp ne i32 %274, 0, !dbg !7244
  br i1 %tobool495, label %if.then496, label %if.else497, !dbg !7246

if.then496:                                       ; preds = %if.end494
  br label %if.end498, !dbg !7247

if.else497:                                       ; preds = %if.end494
  %275 = load i32, ptr %__pyx_t_14, align 4, !dbg !7249, !tbaa !1984
  store i32 %275, ptr %__pyx_t_13, align 4, !dbg !7251, !tbaa !1984
  br label %__pyx_L12_bool_binop_done, !dbg !7252

if.end498:                                        ; preds = %if.then496
  %276 = load ptr, ptr %__pyx_v_old_target_states, align 8, !dbg !7253, !tbaa !1899
  %call499 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %276), !dbg !7254
  store i32 %call499, ptr %__pyx_t_14, align 4, !dbg !7255, !tbaa !1984
  %277 = load i32, ptr %__pyx_t_14, align 4, !dbg !7256, !tbaa !1984
  %cmp500 = icmp slt i32 %277, 0, !dbg !7256
  %lnot502 = xor i1 %cmp500, true, !dbg !7256
  %lnot504 = xor i1 %lnot502, true, !dbg !7256
  %lnot.ext505 = zext i1 %lnot504 to i32, !dbg !7256
  %conv506 = sext i32 %lnot.ext505 to i64, !dbg !7256
  %expval507 = call i64 @llvm.expect.i64(i64 %conv506, i64 0), !dbg !7256
  %tobool508 = icmp ne i64 %expval507, 0, !dbg !7256
  br i1 %tobool508, label %if.then509, label %if.end510, !dbg !7258

if.then509:                                       ; preds = %if.end498
  %278 = load ptr, ptr @__pyx_f, align 16, !dbg !7259, !tbaa !1899
  store ptr %278, ptr %__pyx_filename, align 8, !dbg !7259, !tbaa !1899
  %279 = load ptr, ptr %__pyx_filename, align 8, !dbg !7259, !tbaa !1899
  store i32 44, ptr %__pyx_lineno, align 4, !dbg !7259, !tbaa !1984
  %280 = load i32, ptr %__pyx_lineno, align 4, !dbg !7259, !tbaa !1984
  store i32 3572, ptr %__pyx_clineno, align 4, !dbg !7259, !tbaa !1984
  %281 = load i32, ptr %__pyx_clineno, align 4, !dbg !7259, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7262

if.end510:                                        ; preds = %if.end498
  %282 = load i32, ptr %__pyx_t_14, align 4, !dbg !7263, !tbaa !1984
  store i32 %282, ptr %__pyx_t_13, align 4, !dbg !7264, !tbaa !1984
  br label %__pyx_L12_bool_binop_done, !dbg !7265

__pyx_L12_bool_binop_done:                        ; preds = %if.end510, %if.else497
  tail call void @llvm.dbg.label(metadata !6687), !dbg !7266
  %283 = load i32, ptr %__pyx_t_13, align 4, !dbg !7267, !tbaa !1984
  %tobool511 = icmp ne i32 %283, 0, !dbg !7267
  br i1 %tobool511, label %if.then512, label %if.end556, !dbg !7269

if.then512:                                       ; preds = %__pyx_L12_bool_binop_done
  %284 = load ptr, ptr %__pyx_v_old_target_states, align 8, !dbg !7270, !tbaa !1899
  %call513 = call i32 @Py_IS_TYPE(ptr noundef %284, ptr noundef @PyDict_Type), !dbg !7270
  %tobool514 = icmp ne i32 %call513, 0, !dbg !7270
  %lnot515 = xor i1 %tobool514, true, !dbg !7270
  %lnot517 = xor i1 %lnot515, true, !dbg !7270
  %lnot.ext518 = zext i1 %lnot517 to i32, !dbg !7270
  %conv519 = sext i32 %lnot.ext518 to i64, !dbg !7270
  %expval520 = call i64 @llvm.expect.i64(i64 %conv519, i64 1), !dbg !7270
  %tobool521 = icmp ne i64 %expval520, 0, !dbg !7270
  br i1 %tobool521, label %if.end529, label %lor.lhs.false522, !dbg !7273

lor.lhs.false522:                                 ; preds = %if.then512
  %285 = load ptr, ptr %__pyx_v_old_target_states, align 8, !dbg !7274, !tbaa !1899
  %cmp523 = icmp eq ptr %285, @_Py_NoneStruct, !dbg !7275
  br i1 %cmp523, label %if.end529, label %lor.lhs.false525, !dbg !7276

lor.lhs.false525:                                 ; preds = %lor.lhs.false522
  %286 = load ptr, ptr %__pyx_v_old_target_states, align 8, !dbg !7277, !tbaa !1899
  %call526 = call i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef @.str.79, ptr noundef %286), !dbg !7278
  %tobool527 = icmp ne i32 %call526, 0, !dbg !7278
  br i1 %tobool527, label %if.end529, label %if.then528, !dbg !7279

if.then528:                                       ; preds = %lor.lhs.false525
  %287 = load ptr, ptr @__pyx_f, align 16, !dbg !7280, !tbaa !1899
  store ptr %287, ptr %__pyx_filename, align 8, !dbg !7280, !tbaa !1899
  %288 = load ptr, ptr %__pyx_filename, align 8, !dbg !7280, !tbaa !1899
  store i32 45, ptr %__pyx_lineno, align 4, !dbg !7280, !tbaa !1984
  %289 = load i32, ptr %__pyx_lineno, align 4, !dbg !7280, !tbaa !1984
  store i32 3584, ptr %__pyx_clineno, align 4, !dbg !7280, !tbaa !1984
  %290 = load i32, ptr %__pyx_clineno, align 4, !dbg !7280, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7283

if.end529:                                        ; preds = %lor.lhs.false525, %lor.lhs.false522, %if.then512
  %291 = load ptr, ptr %__pyx_v_old_target_states, align 8, !dbg !7284, !tbaa !1899
  %call530 = call ptr @__pyx_f_6Cython_4Plex_3DFA_set_epsilon_closure(ptr noundef %291), !dbg !7285
  store ptr %call530, ptr %__pyx_t_8, align 8, !dbg !7286, !tbaa !1899
  %292 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7287, !tbaa !1899
  %tobool531 = icmp ne ptr %292, null, !dbg !7287
  %lnot532 = xor i1 %tobool531, true, !dbg !7287
  %lnot534 = xor i1 %lnot532, true, !dbg !7287
  %lnot536 = xor i1 %lnot534, true, !dbg !7287
  %lnot.ext537 = zext i1 %lnot536 to i32, !dbg !7287
  %conv538 = sext i32 %lnot.ext537 to i64, !dbg !7287
  %expval539 = call i64 @llvm.expect.i64(i64 %conv538, i64 0), !dbg !7287
  %tobool540 = icmp ne i64 %expval539, 0, !dbg !7287
  br i1 %tobool540, label %if.then541, label %if.end542, !dbg !7289

if.then541:                                       ; preds = %if.end529
  %293 = load ptr, ptr @__pyx_f, align 16, !dbg !7290, !tbaa !1899
  store ptr %293, ptr %__pyx_filename, align 8, !dbg !7290, !tbaa !1899
  %294 = load ptr, ptr %__pyx_filename, align 8, !dbg !7290, !tbaa !1899
  store i32 45, ptr %__pyx_lineno, align 4, !dbg !7290, !tbaa !1984
  %295 = load i32, ptr %__pyx_lineno, align 4, !dbg !7290, !tbaa !1984
  store i32 3585, ptr %__pyx_clineno, align 4, !dbg !7290, !tbaa !1984
  %296 = load i32, ptr %__pyx_clineno, align 4, !dbg !7290, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7293

if.end542:                                        ; preds = %if.end529
  %297 = load ptr, ptr %__pyx_v_transitions, align 8, !dbg !7294, !tbaa !1899
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_11Transitions_TransitionMap, ptr %297, i32 0, i32 1, !dbg !7295
  %298 = load ptr, ptr %__pyx_vtab, align 8, !dbg !7295, !tbaa !7296
  %add_set = getelementptr inbounds %struct.__pyx_vtabstruct_6Cython_4Plex_11Transitions_TransitionMap, ptr %298, i32 0, i32 1, !dbg !7298
  %299 = load ptr, ptr %add_set, align 8, !dbg !7298, !tbaa !7299
  %300 = load ptr, ptr %__pyx_v_transitions, align 8, !dbg !7301, !tbaa !1899
  %301 = load ptr, ptr %__pyx_v_event, align 8, !dbg !7302, !tbaa !1899
  %302 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7303, !tbaa !1899
  %call543 = call ptr %299(ptr noundef %300, ptr noundef %301, ptr noundef %302, i32 noundef 0), !dbg !7304
  store ptr %call543, ptr %__pyx_t_12, align 8, !dbg !7305, !tbaa !1899
  %303 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7306, !tbaa !1899
  %tobool544 = icmp ne ptr %303, null, !dbg !7306
  %lnot545 = xor i1 %tobool544, true, !dbg !7306
  %lnot547 = xor i1 %lnot545, true, !dbg !7306
  %lnot549 = xor i1 %lnot547, true, !dbg !7306
  %lnot.ext550 = zext i1 %lnot549 to i32, !dbg !7306
  %conv551 = sext i32 %lnot.ext550 to i64, !dbg !7306
  %expval552 = call i64 @llvm.expect.i64(i64 %conv551, i64 0), !dbg !7306
  %tobool553 = icmp ne i64 %expval552, 0, !dbg !7306
  br i1 %tobool553, label %if.then554, label %if.end555, !dbg !7308

if.then554:                                       ; preds = %if.end542
  %304 = load ptr, ptr @__pyx_f, align 16, !dbg !7309, !tbaa !1899
  store ptr %304, ptr %__pyx_filename, align 8, !dbg !7309, !tbaa !1899
  %305 = load ptr, ptr %__pyx_filename, align 8, !dbg !7309, !tbaa !1899
  store i32 45, ptr %__pyx_lineno, align 4, !dbg !7309, !tbaa !1984
  %306 = load i32, ptr %__pyx_lineno, align 4, !dbg !7309, !tbaa !1984
  store i32 3587, ptr %__pyx_clineno, align 4, !dbg !7309, !tbaa !1984
  %307 = load i32, ptr %__pyx_clineno, align 4, !dbg !7309, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7312

if.end555:                                        ; preds = %if.end542
  %308 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7313, !tbaa !1899
  call void @Py_DECREF(ptr noundef %308), !dbg !7313
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !7314, !tbaa !1899
  %309 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7315, !tbaa !1899
  call void @Py_DECREF(ptr noundef %309), !dbg !7315
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7316, !tbaa !1899
  br label %if.end556, !dbg !7317

if.end556:                                        ; preds = %if.end555, %__pyx_L12_bool_binop_done
  br label %while.cond450, !dbg !7211, !llvm.loop !7318

while.end557:                                     ; preds = %if.then462
  %310 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7320, !tbaa !1899
  call void @Py_DECREF(ptr noundef %310), !dbg !7320
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7321, !tbaa !1899
  br label %for.cond326, !dbg !7322, !llvm.loop !7323

for.end:                                          ; preds = %cleanup403, %cleanup367, %cleanup354
  %311 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7326, !tbaa !1899
  call void @Py_DECREF(ptr noundef %311), !dbg !7326
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !7327, !tbaa !1899
  store i64 0, ptr %__pyx_t_2, align 8, !dbg !7328, !tbaa !2597
  %312 = load ptr, ptr %__pyx_v_transitions, align 8, !dbg !7329, !tbaa !1899
  %313 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7330, !tbaa !1899
  %__pyx_n_s_items558 = getelementptr inbounds %struct.__pyx_mstate, ptr %313, i32 0, i32 57, !dbg !7330
  %314 = load ptr, ptr %__pyx_n_s_items558, align 8, !dbg !7330, !tbaa !6847
  %call559 = call ptr @__Pyx_dict_iterator(ptr noundef %312, i32 noundef 0, ptr noundef %314, ptr noundef %__pyx_t_11, ptr noundef %__pyx_t_4), !dbg !7331
  store ptr %call559, ptr %__pyx_t_5, align 8, !dbg !7332, !tbaa !1899
  %315 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7333, !tbaa !1899
  %tobool560 = icmp ne ptr %315, null, !dbg !7333
  %lnot561 = xor i1 %tobool560, true, !dbg !7333
  %lnot563 = xor i1 %lnot561, true, !dbg !7333
  %lnot565 = xor i1 %lnot563, true, !dbg !7333
  %lnot.ext566 = zext i1 %lnot565 to i32, !dbg !7333
  %conv567 = sext i32 %lnot.ext566 to i64, !dbg !7333
  %expval568 = call i64 @llvm.expect.i64(i64 %conv567, i64 0), !dbg !7333
  %tobool569 = icmp ne i64 %expval568, 0, !dbg !7333
  br i1 %tobool569, label %if.then570, label %if.end571, !dbg !7335

if.then570:                                       ; preds = %for.end
  %316 = load ptr, ptr @__pyx_f, align 16, !dbg !7336, !tbaa !1899
  store ptr %316, ptr %__pyx_filename, align 8, !dbg !7336, !tbaa !1899
  %317 = load ptr, ptr %__pyx_filename, align 8, !dbg !7336, !tbaa !1899
  store i32 46, ptr %__pyx_lineno, align 4, !dbg !7336, !tbaa !1984
  %318 = load i32, ptr %__pyx_lineno, align 4, !dbg !7336, !tbaa !1984
  store i32 3621, ptr %__pyx_clineno, align 4, !dbg !7336, !tbaa !1984
  %319 = load i32, ptr %__pyx_clineno, align 4, !dbg !7336, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7339

if.end571:                                        ; preds = %for.end
  %320 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7340, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %320), !dbg !7340
  %321 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7341, !tbaa !1899
  store ptr %321, ptr %__pyx_t_6, align 8, !dbg !7342, !tbaa !1899
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7343, !tbaa !1899
  br label %while.cond572, !dbg !7344

while.cond572:                                    ; preds = %cleanup.cont703, %if.end571
  br label %while.body573, !dbg !7344

while.body573:                                    ; preds = %while.cond572
  %322 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7345, !tbaa !1899
  %323 = load i64, ptr %__pyx_t_11, align 8, !dbg !7346, !tbaa !2597
  %324 = load i32, ptr %__pyx_t_4, align 4, !dbg !7347, !tbaa !1984
  %call574 = call i32 @__Pyx_dict_iter_next(ptr noundef %322, i64 noundef %323, ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_12, ptr noundef null, i32 noundef %324), !dbg !7348
  store i32 %call574, ptr %__pyx_t_7, align 4, !dbg !7349, !tbaa !1984
  %325 = load i32, ptr %__pyx_t_7, align 4, !dbg !7350, !tbaa !1984
  %cmp575 = icmp eq i32 %325, 0, !dbg !7350
  %lnot577 = xor i1 %cmp575, true, !dbg !7350
  %lnot579 = xor i1 %lnot577, true, !dbg !7350
  %lnot.ext580 = zext i1 %lnot579 to i32, !dbg !7350
  %conv581 = sext i32 %lnot.ext580 to i64, !dbg !7350
  %expval582 = call i64 @llvm.expect.i64(i64 %conv581, i64 0), !dbg !7350
  %tobool583 = icmp ne i64 %expval582, 0, !dbg !7350
  br i1 %tobool583, label %if.then584, label %if.end585, !dbg !7352

if.then584:                                       ; preds = %while.body573
  br label %while.end704, !dbg !7353

if.end585:                                        ; preds = %while.body573
  %326 = load i32, ptr %__pyx_t_7, align 4, !dbg !7354, !tbaa !1984
  %cmp586 = icmp eq i32 %326, -1, !dbg !7354
  %lnot588 = xor i1 %cmp586, true, !dbg !7354
  %lnot590 = xor i1 %lnot588, true, !dbg !7354
  %lnot.ext591 = zext i1 %lnot590 to i32, !dbg !7354
  %conv592 = sext i32 %lnot.ext591 to i64, !dbg !7354
  %expval593 = call i64 @llvm.expect.i64(i64 %conv592, i64 0), !dbg !7354
  %tobool594 = icmp ne i64 %expval593, 0, !dbg !7354
  br i1 %tobool594, label %if.then595, label %if.end596, !dbg !7356

if.then595:                                       ; preds = %if.end585
  %327 = load ptr, ptr @__pyx_f, align 16, !dbg !7357, !tbaa !1899
  store ptr %327, ptr %__pyx_filename, align 8, !dbg !7357, !tbaa !1899
  %328 = load ptr, ptr %__pyx_filename, align 8, !dbg !7357, !tbaa !1899
  store i32 46, ptr %__pyx_lineno, align 4, !dbg !7357, !tbaa !1984
  %329 = load i32, ptr %__pyx_lineno, align 4, !dbg !7357, !tbaa !1984
  store i32 3629, ptr %__pyx_clineno, align 4, !dbg !7357, !tbaa !1984
  %330 = load i32, ptr %__pyx_clineno, align 4, !dbg !7357, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7360

if.end596:                                        ; preds = %if.end585
  br label %do.body597, !dbg !7361

do.body597:                                       ; preds = %if.end596
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp598) #11, !dbg !7362
  tail call void @llvm.dbg.declare(metadata ptr %tmp598, metadata !6688, metadata !DIExpression()), !dbg !7362
  %331 = load ptr, ptr %__pyx_v_event, align 8, !dbg !7362, !tbaa !1899
  store ptr %331, ptr %tmp598, align 8, !dbg !7362, !tbaa !1899
  %332 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7362, !tbaa !1899
  store ptr %332, ptr %__pyx_v_event, align 8, !dbg !7362, !tbaa !1899
  %333 = load ptr, ptr %tmp598, align 8, !dbg !7362, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %333), !dbg !7362
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp598) #11, !dbg !7361
  br label %do.cond599, !dbg !7362

do.cond599:                                       ; preds = %do.body597
  br label %do.end600, !dbg !7362

do.end600:                                        ; preds = %do.cond599
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7363, !tbaa !1899
  br label %do.body601, !dbg !7364

do.body601:                                       ; preds = %do.end600
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp602) #11, !dbg !7365
  tail call void @llvm.dbg.declare(metadata ptr %tmp602, metadata !6691, metadata !DIExpression()), !dbg !7365
  %334 = load ptr, ptr %__pyx_v_old_states, align 8, !dbg !7365, !tbaa !1899
  store ptr %334, ptr %tmp602, align 8, !dbg !7365, !tbaa !1899
  %335 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7365, !tbaa !1899
  store ptr %335, ptr %__pyx_v_old_states, align 8, !dbg !7365, !tbaa !1899
  %336 = load ptr, ptr %tmp602, align 8, !dbg !7365, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %336), !dbg !7365
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp602) #11, !dbg !7364
  br label %do.cond603, !dbg !7365

do.cond603:                                       ; preds = %do.body601
  br label %do.end604, !dbg !7365

do.end604:                                        ; preds = %do.cond603
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7366, !tbaa !1899
  %337 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !7367, !tbaa !1899
  %338 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7368, !tbaa !1899
  %__pyx_n_s_add_transitions = getelementptr inbounds %struct.__pyx_mstate, ptr %338, i32 0, i32 39, !dbg !7368
  %339 = load ptr, ptr %__pyx_n_s_add_transitions, align 8, !dbg !7368, !tbaa !7369
  %call605 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %337, ptr noundef %339), !dbg !7370
  store ptr %call605, ptr %__pyx_t_5, align 8, !dbg !7371, !tbaa !1899
  %340 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7372, !tbaa !1899
  %tobool606 = icmp ne ptr %340, null, !dbg !7372
  %lnot607 = xor i1 %tobool606, true, !dbg !7372
  %lnot609 = xor i1 %lnot607, true, !dbg !7372
  %lnot611 = xor i1 %lnot609, true, !dbg !7372
  %lnot.ext612 = zext i1 %lnot611 to i32, !dbg !7372
  %conv613 = sext i32 %lnot.ext612 to i64, !dbg !7372
  %expval614 = call i64 @llvm.expect.i64(i64 %conv613, i64 0), !dbg !7372
  %tobool615 = icmp ne i64 %expval614, 0, !dbg !7372
  br i1 %tobool615, label %if.then616, label %if.end617, !dbg !7374

if.then616:                                       ; preds = %do.end604
  %341 = load ptr, ptr @__pyx_f, align 16, !dbg !7375, !tbaa !1899
  store ptr %341, ptr %__pyx_filename, align 8, !dbg !7375, !tbaa !1899
  %342 = load ptr, ptr %__pyx_filename, align 8, !dbg !7375, !tbaa !1899
  store i32 47, ptr %__pyx_lineno, align 4, !dbg !7375, !tbaa !1984
  %343 = load i32, ptr %__pyx_lineno, align 4, !dbg !7375, !tbaa !1984
  store i32 3644, ptr %__pyx_clineno, align 4, !dbg !7375, !tbaa !1984
  %344 = load i32, ptr %__pyx_clineno, align 4, !dbg !7375, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7378

if.end617:                                        ; preds = %do.end604
  %345 = load ptr, ptr %__pyx_v_old_states, align 8, !dbg !7379, !tbaa !1899
  %call618 = call i32 @Py_IS_TYPE(ptr noundef %345, ptr noundef @PyDict_Type), !dbg !7379
  %tobool619 = icmp ne i32 %call618, 0, !dbg !7379
  %lnot620 = xor i1 %tobool619, true, !dbg !7379
  %lnot622 = xor i1 %lnot620, true, !dbg !7379
  %lnot.ext623 = zext i1 %lnot622 to i32, !dbg !7379
  %conv624 = sext i32 %lnot.ext623 to i64, !dbg !7379
  %expval625 = call i64 @llvm.expect.i64(i64 %conv624, i64 1), !dbg !7379
  %tobool626 = icmp ne i64 %expval625, 0, !dbg !7379
  br i1 %tobool626, label %if.end634, label %lor.lhs.false627, !dbg !7381

lor.lhs.false627:                                 ; preds = %if.end617
  %346 = load ptr, ptr %__pyx_v_old_states, align 8, !dbg !7382, !tbaa !1899
  %cmp628 = icmp eq ptr %346, @_Py_NoneStruct, !dbg !7383
  br i1 %cmp628, label %if.end634, label %lor.lhs.false630, !dbg !7384

lor.lhs.false630:                                 ; preds = %lor.lhs.false627
  %347 = load ptr, ptr %__pyx_v_old_states, align 8, !dbg !7385, !tbaa !1899
  %call631 = call i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef @.str.79, ptr noundef %347), !dbg !7386
  %tobool632 = icmp ne i32 %call631, 0, !dbg !7386
  br i1 %tobool632, label %if.end634, label %if.then633, !dbg !7387

if.then633:                                       ; preds = %lor.lhs.false630
  %348 = load ptr, ptr @__pyx_f, align 16, !dbg !7388, !tbaa !1899
  store ptr %348, ptr %__pyx_filename, align 8, !dbg !7388, !tbaa !1899
  %349 = load ptr, ptr %__pyx_filename, align 8, !dbg !7388, !tbaa !1899
  store i32 47, ptr %__pyx_lineno, align 4, !dbg !7388, !tbaa !1984
  %350 = load i32, ptr %__pyx_lineno, align 4, !dbg !7388, !tbaa !1984
  store i32 3646, ptr %__pyx_clineno, align 4, !dbg !7388, !tbaa !1984
  %351 = load i32, ptr %__pyx_clineno, align 4, !dbg !7388, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7391

if.end634:                                        ; preds = %lor.lhs.false630, %lor.lhs.false627, %if.end617
  %352 = load ptr, ptr %__pyx_v_state_map, align 8, !dbg !7392, !tbaa !1899
  %353 = load ptr, ptr %__pyx_v_old_states, align 8, !dbg !7393, !tbaa !1899
  %call635 = call ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_old_to_new(ptr noundef %352, ptr noundef %353), !dbg !7394
  store ptr %call635, ptr %__pyx_t_8, align 8, !dbg !7395, !tbaa !1899
  %354 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7396, !tbaa !1899
  %tobool636 = icmp ne ptr %354, null, !dbg !7396
  %lnot637 = xor i1 %tobool636, true, !dbg !7396
  %lnot639 = xor i1 %lnot637, true, !dbg !7396
  %lnot641 = xor i1 %lnot639, true, !dbg !7396
  %lnot.ext642 = zext i1 %lnot641 to i32, !dbg !7396
  %conv643 = sext i32 %lnot.ext642 to i64, !dbg !7396
  %expval644 = call i64 @llvm.expect.i64(i64 %conv643, i64 0), !dbg !7396
  %tobool645 = icmp ne i64 %expval644, 0, !dbg !7396
  br i1 %tobool645, label %if.then646, label %if.end647, !dbg !7398

if.then646:                                       ; preds = %if.end634
  %355 = load ptr, ptr @__pyx_f, align 16, !dbg !7399, !tbaa !1899
  store ptr %355, ptr %__pyx_filename, align 8, !dbg !7399, !tbaa !1899
  %356 = load ptr, ptr %__pyx_filename, align 8, !dbg !7399, !tbaa !1899
  store i32 47, ptr %__pyx_lineno, align 4, !dbg !7399, !tbaa !1984
  %357 = load i32, ptr %__pyx_lineno, align 4, !dbg !7399, !tbaa !1984
  store i32 3647, ptr %__pyx_clineno, align 4, !dbg !7399, !tbaa !1984
  %358 = load i32, ptr %__pyx_clineno, align 4, !dbg !7399, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7402

if.end647:                                        ; preds = %if.end634
  store ptr null, ptr %__pyx_t_15, align 8, !dbg !7403, !tbaa !1899
  store i32 0, ptr %__pyx_t_7, align 4, !dbg !7404, !tbaa !1984
  %359 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7405, !tbaa !1899
  %call648 = call i32 @Py_IS_TYPE(ptr noundef %359, ptr noundef @PyMethod_Type), !dbg !7405
  %tobool649 = icmp ne i32 %call648, 0, !dbg !7405
  %lnot650 = xor i1 %tobool649, true, !dbg !7405
  %lnot652 = xor i1 %lnot650, true, !dbg !7405
  %lnot.ext653 = zext i1 %lnot652 to i32, !dbg !7405
  %conv654 = sext i32 %lnot.ext653 to i64, !dbg !7405
  %expval655 = call i64 @llvm.expect.i64(i64 %conv654, i64 1), !dbg !7405
  %tobool656 = icmp ne i64 %expval655, 0, !dbg !7405
  br i1 %tobool656, label %if.then657, label %if.end675, !dbg !7406

if.then657:                                       ; preds = %if.end647
  %360 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7407, !tbaa !1899
  %im_self658 = getelementptr inbounds %struct.PyMethodObject, ptr %360, i32 0, i32 2, !dbg !7407
  %361 = load ptr, ptr %im_self658, align 8, !dbg !7407, !tbaa !6934
  store ptr %361, ptr %__pyx_t_15, align 8, !dbg !7408, !tbaa !1899
  %362 = load ptr, ptr %__pyx_t_15, align 8, !dbg !7409, !tbaa !1899
  %tobool659 = icmp ne ptr %362, null, !dbg !7409
  %lnot660 = xor i1 %tobool659, true, !dbg !7409
  %lnot662 = xor i1 %lnot660, true, !dbg !7409
  %lnot.ext663 = zext i1 %lnot662 to i32, !dbg !7409
  %conv664 = sext i32 %lnot.ext663 to i64, !dbg !7409
  %expval665 = call i64 @llvm.expect.i64(i64 %conv664, i64 1), !dbg !7409
  %tobool666 = icmp ne i64 %expval665, 0, !dbg !7409
  br i1 %tobool666, label %if.then667, label %if.end674, !dbg !7410

if.then667:                                       ; preds = %if.then657
  call void @llvm.lifetime.start.p0(i64 8, ptr %function668) #11, !dbg !7411
  tail call void @llvm.dbg.declare(metadata ptr %function668, metadata !6693, metadata !DIExpression()), !dbg !7412
  %363 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7413, !tbaa !1899
  %im_func669 = getelementptr inbounds %struct.PyMethodObject, ptr %363, i32 0, i32 1, !dbg !7413
  %364 = load ptr, ptr %im_func669, align 8, !dbg !7413, !tbaa !6942
  store ptr %364, ptr %function668, align 8, !dbg !7412, !tbaa !1899
  %365 = load ptr, ptr %__pyx_t_15, align 8, !dbg !7414, !tbaa !1899
  call void @Py_INCREF(ptr noundef %365), !dbg !7414
  %366 = load ptr, ptr %function668, align 8, !dbg !7415, !tbaa !1899
  call void @Py_INCREF(ptr noundef %366), !dbg !7415
  br label %do.body670, !dbg !7416

do.body670:                                       ; preds = %if.then667
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp671) #11, !dbg !7417
  tail call void @llvm.dbg.declare(metadata ptr %tmp671, metadata !6698, metadata !DIExpression()), !dbg !7417
  %367 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7417, !tbaa !1899
  store ptr %367, ptr %tmp671, align 8, !dbg !7417, !tbaa !1899
  %368 = load ptr, ptr %function668, align 8, !dbg !7417, !tbaa !1899
  store ptr %368, ptr %__pyx_t_5, align 8, !dbg !7417, !tbaa !1899
  %369 = load ptr, ptr %tmp671, align 8, !dbg !7417, !tbaa !1899
  call void @Py_DECREF(ptr noundef %369), !dbg !7417
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp671) #11, !dbg !7416
  br label %do.cond672, !dbg !7417

do.cond672:                                       ; preds = %do.body670
  br label %do.end673, !dbg !7417

do.end673:                                        ; preds = %do.cond672
  store i32 1, ptr %__pyx_t_7, align 4, !dbg !7418, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function668) #11, !dbg !7419
  br label %if.end674, !dbg !7420

if.end674:                                        ; preds = %do.end673, %if.then657
  br label %if.end675, !dbg !7421

if.end675:                                        ; preds = %if.end674, %if.end647
  call void @llvm.lifetime.start.p0(i64 32, ptr %__pyx_callargs676) #11, !dbg !7422
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs676, metadata !6700, metadata !DIExpression()), !dbg !7423
  %arrayinit.begin677 = getelementptr inbounds [4 x ptr], ptr %__pyx_callargs676, i64 0, i64 0, !dbg !7424
  %370 = load ptr, ptr %__pyx_t_15, align 8, !dbg !7425, !tbaa !1899
  store ptr %370, ptr %arrayinit.begin677, align 8, !dbg !7424, !tbaa !1899
  %arrayinit.element678 = getelementptr inbounds ptr, ptr %arrayinit.begin677, i64 1, !dbg !7424
  %371 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !7426, !tbaa !1899
  store ptr %371, ptr %arrayinit.element678, align 8, !dbg !7424, !tbaa !1899
  %arrayinit.element679 = getelementptr inbounds ptr, ptr %arrayinit.element678, i64 1, !dbg !7424
  %372 = load ptr, ptr %__pyx_v_event, align 8, !dbg !7427, !tbaa !1899
  store ptr %372, ptr %arrayinit.element679, align 8, !dbg !7424, !tbaa !1899
  %arrayinit.element680 = getelementptr inbounds ptr, ptr %arrayinit.element679, i64 1, !dbg !7424
  %373 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7428, !tbaa !1899
  store ptr %373, ptr %arrayinit.element680, align 8, !dbg !7424, !tbaa !1899
  %374 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7429, !tbaa !1899
  %arraydecay681 = getelementptr inbounds [4 x ptr], ptr %__pyx_callargs676, i64 0, i64 0, !dbg !7429
  %add.ptr682 = getelementptr ptr, ptr %arraydecay681, i64 1, !dbg !7429
  %375 = load i32, ptr %__pyx_t_7, align 4, !dbg !7429, !tbaa !1984
  %idx.ext683 = sext i32 %375 to i64, !dbg !7429
  %idx.neg684 = sub i64 0, %idx.ext683, !dbg !7429
  %add.ptr685 = getelementptr ptr, ptr %add.ptr682, i64 %idx.neg684, !dbg !7429
  %376 = load i32, ptr %__pyx_t_7, align 4, !dbg !7429, !tbaa !1984
  %add686 = add i32 3, %376, !dbg !7429
  %conv687 = sext i32 %add686 to i64, !dbg !7429
  %call688 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %374, ptr noundef %add.ptr685, i64 noundef %conv687, ptr noundef null), !dbg !7429
  store ptr %call688, ptr %__pyx_t_12, align 8, !dbg !7430, !tbaa !1899
  %377 = load ptr, ptr %__pyx_t_15, align 8, !dbg !7431, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %377), !dbg !7431
  store ptr null, ptr %__pyx_t_15, align 8, !dbg !7432, !tbaa !1899
  %378 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7433, !tbaa !1899
  call void @Py_DECREF(ptr noundef %378), !dbg !7433
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !7434, !tbaa !1899
  %379 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7435, !tbaa !1899
  %tobool689 = icmp ne ptr %379, null, !dbg !7435
  %lnot690 = xor i1 %tobool689, true, !dbg !7435
  %lnot692 = xor i1 %lnot690, true, !dbg !7435
  %lnot694 = xor i1 %lnot692, true, !dbg !7435
  %lnot.ext695 = zext i1 %lnot694 to i32, !dbg !7435
  %conv696 = sext i32 %lnot.ext695 to i64, !dbg !7435
  %expval697 = call i64 @llvm.expect.i64(i64 %conv696, i64 0), !dbg !7435
  %tobool698 = icmp ne i64 %expval697, 0, !dbg !7435
  br i1 %tobool698, label %if.then699, label %if.end700, !dbg !7437

if.then699:                                       ; preds = %if.end675
  %380 = load ptr, ptr @__pyx_f, align 16, !dbg !7438, !tbaa !1899
  store ptr %380, ptr %__pyx_filename, align 8, !dbg !7438, !tbaa !1899
  %381 = load ptr, ptr %__pyx_filename, align 8, !dbg !7438, !tbaa !1899
  store i32 47, ptr %__pyx_lineno, align 4, !dbg !7438, !tbaa !1984
  %382 = load i32, ptr %__pyx_lineno, align 4, !dbg !7438, !tbaa !1984
  store i32 3668, ptr %__pyx_clineno, align 4, !dbg !7438, !tbaa !1984
  %383 = load i32, ptr %__pyx_clineno, align 4, !dbg !7438, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup701, !dbg !7441

if.end700:                                        ; preds = %if.end675
  %384 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7442, !tbaa !1899
  call void @Py_DECREF(ptr noundef %384), !dbg !7442
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7443, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7444
  br label %cleanup701, !dbg !7444

cleanup701:                                       ; preds = %if.then699, %if.end700
  call void @llvm.lifetime.end.p0(i64 32, ptr %__pyx_callargs676) #11, !dbg !7444
  %cleanup.dest702 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest702, label %cleanup855 [
    i32 0, label %cleanup.cont703
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont703:                                  ; preds = %cleanup701
  %385 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7445, !tbaa !1899
  call void @Py_DECREF(ptr noundef %385), !dbg !7445
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7446, !tbaa !1899
  br label %while.cond572, !dbg !7344, !llvm.loop !7447

while.end704:                                     ; preds = %if.then584
  %386 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7449, !tbaa !1899
  call void @Py_DECREF(ptr noundef %386), !dbg !7449
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !7450, !tbaa !1899
  br label %for.cond, !dbg !7451, !llvm.loop !7452

for.end705:                                       ; preds = %cleanup196
  %387 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7455, !tbaa !1899
  call void @Py_DECREF(ptr noundef %387), !dbg !7455
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7456, !tbaa !1899
  %388 = load ptr, ptr %__pyx_v_debug, align 8, !dbg !7457, !tbaa !1899
  %call706 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %388), !dbg !7458
  store i32 %call706, ptr %__pyx_t_13, align 4, !dbg !7459, !tbaa !1984
  %389 = load i32, ptr %__pyx_t_13, align 4, !dbg !7460, !tbaa !1984
  %cmp707 = icmp slt i32 %389, 0, !dbg !7460
  %lnot709 = xor i1 %cmp707, true, !dbg !7460
  %lnot711 = xor i1 %lnot709, true, !dbg !7460
  %lnot.ext712 = zext i1 %lnot711 to i32, !dbg !7460
  %conv713 = sext i32 %lnot.ext712 to i64, !dbg !7460
  %expval714 = call i64 @llvm.expect.i64(i64 %conv713, i64 0), !dbg !7460
  %tobool715 = icmp ne i64 %expval714, 0, !dbg !7460
  br i1 %tobool715, label %if.then716, label %if.end717, !dbg !7462

if.then716:                                       ; preds = %for.end705
  %390 = load ptr, ptr @__pyx_f, align 16, !dbg !7463, !tbaa !1899
  store ptr %390, ptr %__pyx_filename, align 8, !dbg !7463, !tbaa !1899
  %391 = load ptr, ptr %__pyx_filename, align 8, !dbg !7463, !tbaa !1899
  store i32 49, ptr %__pyx_lineno, align 4, !dbg !7463, !tbaa !1984
  %392 = load i32, ptr %__pyx_lineno, align 4, !dbg !7463, !tbaa !1984
  store i32 3693, ptr %__pyx_clineno, align 4, !dbg !7463, !tbaa !1984
  %393 = load i32, ptr %__pyx_clineno, align 4, !dbg !7463, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7466

if.end717:                                        ; preds = %for.end705
  %394 = load i32, ptr %__pyx_t_13, align 4, !dbg !7467, !tbaa !1984
  %tobool718 = icmp ne i32 %394, 0, !dbg !7467
  br i1 %tobool718, label %if.then719, label %if.end854, !dbg !7468

if.then719:                                       ; preds = %if.end717
  %395 = load ptr, ptr %__pyx_v_debug, align 8, !dbg !7469, !tbaa !1899
  %396 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7470, !tbaa !1899
  %__pyx_n_s_write = getelementptr inbounds %struct.__pyx_mstate, ptr %396, i32 0, i32 89, !dbg !7470
  %397 = load ptr, ptr %__pyx_n_s_write, align 8, !dbg !7470, !tbaa !7471
  %call720 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %395, ptr noundef %397), !dbg !7472
  store ptr %call720, ptr %__pyx_t_6, align 8, !dbg !7473, !tbaa !1899
  %398 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7474, !tbaa !1899
  %tobool721 = icmp ne ptr %398, null, !dbg !7474
  %lnot722 = xor i1 %tobool721, true, !dbg !7474
  %lnot724 = xor i1 %lnot722, true, !dbg !7474
  %lnot726 = xor i1 %lnot724, true, !dbg !7474
  %lnot.ext727 = zext i1 %lnot726 to i32, !dbg !7474
  %conv728 = sext i32 %lnot.ext727 to i64, !dbg !7474
  %expval729 = call i64 @llvm.expect.i64(i64 %conv728, i64 0), !dbg !7474
  %tobool730 = icmp ne i64 %expval729, 0, !dbg !7474
  br i1 %tobool730, label %if.then731, label %if.end732, !dbg !7476

if.then731:                                       ; preds = %if.then719
  %399 = load ptr, ptr @__pyx_f, align 16, !dbg !7477, !tbaa !1899
  store ptr %399, ptr %__pyx_filename, align 8, !dbg !7477, !tbaa !1899
  %400 = load ptr, ptr %__pyx_filename, align 8, !dbg !7477, !tbaa !1899
  store i32 50, ptr %__pyx_lineno, align 4, !dbg !7477, !tbaa !1984
  %401 = load i32, ptr %__pyx_lineno, align 4, !dbg !7477, !tbaa !1984
  store i32 3703, ptr %__pyx_clineno, align 4, !dbg !7477, !tbaa !1984
  %402 = load i32, ptr %__pyx_clineno, align 4, !dbg !7477, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7480

if.end732:                                        ; preds = %if.then719
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7481, !tbaa !1899
  store i32 0, ptr %__pyx_t_4, align 4, !dbg !7482, !tbaa !1984
  %403 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7483, !tbaa !1899
  %call733 = call i32 @Py_IS_TYPE(ptr noundef %403, ptr noundef @PyMethod_Type), !dbg !7483
  %tobool734 = icmp ne i32 %call733, 0, !dbg !7483
  %lnot735 = xor i1 %tobool734, true, !dbg !7483
  %lnot737 = xor i1 %lnot735, true, !dbg !7483
  %lnot.ext738 = zext i1 %lnot737 to i32, !dbg !7483
  %conv739 = sext i32 %lnot.ext738 to i64, !dbg !7483
  %expval740 = call i64 @llvm.expect.i64(i64 %conv739, i64 1), !dbg !7483
  %tobool741 = icmp ne i64 %expval740, 0, !dbg !7483
  br i1 %tobool741, label %if.then742, label %if.end760, !dbg !7484

if.then742:                                       ; preds = %if.end732
  %404 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7485, !tbaa !1899
  %im_self743 = getelementptr inbounds %struct.PyMethodObject, ptr %404, i32 0, i32 2, !dbg !7485
  %405 = load ptr, ptr %im_self743, align 8, !dbg !7485, !tbaa !6934
  store ptr %405, ptr %__pyx_t_12, align 8, !dbg !7486, !tbaa !1899
  %406 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7487, !tbaa !1899
  %tobool744 = icmp ne ptr %406, null, !dbg !7487
  %lnot745 = xor i1 %tobool744, true, !dbg !7487
  %lnot747 = xor i1 %lnot745, true, !dbg !7487
  %lnot.ext748 = zext i1 %lnot747 to i32, !dbg !7487
  %conv749 = sext i32 %lnot.ext748 to i64, !dbg !7487
  %expval750 = call i64 @llvm.expect.i64(i64 %conv749, i64 1), !dbg !7487
  %tobool751 = icmp ne i64 %expval750, 0, !dbg !7487
  br i1 %tobool751, label %if.then752, label %if.end759, !dbg !7488

if.then752:                                       ; preds = %if.then742
  call void @llvm.lifetime.start.p0(i64 8, ptr %function753) #11, !dbg !7489
  tail call void @llvm.dbg.declare(metadata ptr %function753, metadata !6703, metadata !DIExpression()), !dbg !7490
  %407 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7491, !tbaa !1899
  %im_func754 = getelementptr inbounds %struct.PyMethodObject, ptr %407, i32 0, i32 1, !dbg !7491
  %408 = load ptr, ptr %im_func754, align 8, !dbg !7491, !tbaa !6942
  store ptr %408, ptr %function753, align 8, !dbg !7490, !tbaa !1899
  %409 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7492, !tbaa !1899
  call void @Py_INCREF(ptr noundef %409), !dbg !7492
  %410 = load ptr, ptr %function753, align 8, !dbg !7493, !tbaa !1899
  call void @Py_INCREF(ptr noundef %410), !dbg !7493
  br label %do.body755, !dbg !7494

do.body755:                                       ; preds = %if.then752
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp756) #11, !dbg !7495
  tail call void @llvm.dbg.declare(metadata ptr %tmp756, metadata !6710, metadata !DIExpression()), !dbg !7495
  %411 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7495, !tbaa !1899
  store ptr %411, ptr %tmp756, align 8, !dbg !7495, !tbaa !1899
  %412 = load ptr, ptr %function753, align 8, !dbg !7495, !tbaa !1899
  store ptr %412, ptr %__pyx_t_6, align 8, !dbg !7495, !tbaa !1899
  %413 = load ptr, ptr %tmp756, align 8, !dbg !7495, !tbaa !1899
  call void @Py_DECREF(ptr noundef %413), !dbg !7495
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp756) #11, !dbg !7494
  br label %do.cond757, !dbg !7495

do.cond757:                                       ; preds = %do.body755
  br label %do.end758, !dbg !7495

do.end758:                                        ; preds = %do.cond757
  store i32 1, ptr %__pyx_t_4, align 4, !dbg !7496, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function753) #11, !dbg !7497
  br label %if.end759, !dbg !7498

if.end759:                                        ; preds = %do.end758, %if.then742
  br label %if.end760, !dbg !7499

if.end760:                                        ; preds = %if.end759, %if.end732
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs761) #11, !dbg !7500
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs761, metadata !6712, metadata !DIExpression()), !dbg !7501
  %arrayinit.begin762 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs761, i64 0, i64 0, !dbg !7502
  %414 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7503, !tbaa !1899
  store ptr %414, ptr %arrayinit.begin762, align 8, !dbg !7502, !tbaa !1899
  %arrayinit.element763 = getelementptr inbounds ptr, ptr %arrayinit.begin762, i64 1, !dbg !7502
  %415 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7504, !tbaa !1899
  %__pyx_kp_u_State_Mapping = getelementptr inbounds %struct.__pyx_mstate, ptr %415, i32 0, i32 32, !dbg !7504
  %416 = load ptr, ptr %__pyx_kp_u_State_Mapping, align 8, !dbg !7504, !tbaa !7505
  store ptr %416, ptr %arrayinit.element763, align 8, !dbg !7502, !tbaa !1899
  %417 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7506, !tbaa !1899
  %arraydecay764 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs761, i64 0, i64 0, !dbg !7506
  %add.ptr765 = getelementptr ptr, ptr %arraydecay764, i64 1, !dbg !7506
  %418 = load i32, ptr %__pyx_t_4, align 4, !dbg !7506, !tbaa !1984
  %idx.ext766 = sext i32 %418 to i64, !dbg !7506
  %idx.neg767 = sub i64 0, %idx.ext766, !dbg !7506
  %add.ptr768 = getelementptr ptr, ptr %add.ptr765, i64 %idx.neg767, !dbg !7506
  %419 = load i32, ptr %__pyx_t_4, align 4, !dbg !7506, !tbaa !1984
  %add769 = add i32 1, %419, !dbg !7506
  %conv770 = sext i32 %add769 to i64, !dbg !7506
  %call771 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %417, ptr noundef %add.ptr768, i64 noundef %conv770, ptr noundef null), !dbg !7506
  store ptr %call771, ptr %__pyx_t_1, align 8, !dbg !7507, !tbaa !1899
  %420 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7508, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %420), !dbg !7508
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7509, !tbaa !1899
  %421 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7510, !tbaa !1899
  %tobool772 = icmp ne ptr %421, null, !dbg !7510
  %lnot773 = xor i1 %tobool772, true, !dbg !7510
  %lnot775 = xor i1 %lnot773, true, !dbg !7510
  %lnot777 = xor i1 %lnot775, true, !dbg !7510
  %lnot.ext778 = zext i1 %lnot777 to i32, !dbg !7510
  %conv779 = sext i32 %lnot.ext778 to i64, !dbg !7510
  %expval780 = call i64 @llvm.expect.i64(i64 %conv779, i64 0), !dbg !7510
  %tobool781 = icmp ne i64 %expval780, 0, !dbg !7510
  br i1 %tobool781, label %if.then782, label %if.end783, !dbg !7512

if.then782:                                       ; preds = %if.end760
  %422 = load ptr, ptr @__pyx_f, align 16, !dbg !7513, !tbaa !1899
  store ptr %422, ptr %__pyx_filename, align 8, !dbg !7513, !tbaa !1899
  %423 = load ptr, ptr %__pyx_filename, align 8, !dbg !7513, !tbaa !1899
  store i32 50, ptr %__pyx_lineno, align 4, !dbg !7513, !tbaa !1984
  %424 = load i32, ptr %__pyx_lineno, align 4, !dbg !7513, !tbaa !1984
  store i32 3723, ptr %__pyx_clineno, align 4, !dbg !7513, !tbaa !1984
  %425 = load i32, ptr %__pyx_clineno, align 4, !dbg !7513, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup784, !dbg !7516

if.end783:                                        ; preds = %if.end760
  %426 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7517, !tbaa !1899
  call void @Py_DECREF(ptr noundef %426), !dbg !7517
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !7518, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7519
  br label %cleanup784, !dbg !7519

cleanup784:                                       ; preds = %if.then782, %if.end783
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs761) #11, !dbg !7519
  %cleanup.dest785 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest785, label %cleanup855 [
    i32 0, label %cleanup.cont786
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont786:                                  ; preds = %cleanup784
  %427 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7520, !tbaa !1899
  call void @Py_DECREF(ptr noundef %427), !dbg !7520
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7521, !tbaa !1899
  %428 = load ptr, ptr %__pyx_v_state_map, align 8, !dbg !7522, !tbaa !1899
  %429 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7523, !tbaa !1899
  %__pyx_n_s_dump = getelementptr inbounds %struct.__pyx_mstate, ptr %429, i32 0, i32 46, !dbg !7523
  %430 = load ptr, ptr %__pyx_n_s_dump, align 8, !dbg !7523, !tbaa !2453
  %call787 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %428, ptr noundef %430), !dbg !7524
  store ptr %call787, ptr %__pyx_t_6, align 8, !dbg !7525, !tbaa !1899
  %431 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7526, !tbaa !1899
  %tobool788 = icmp ne ptr %431, null, !dbg !7526
  %lnot789 = xor i1 %tobool788, true, !dbg !7526
  %lnot791 = xor i1 %lnot789, true, !dbg !7526
  %lnot793 = xor i1 %lnot791, true, !dbg !7526
  %lnot.ext794 = zext i1 %lnot793 to i32, !dbg !7526
  %conv795 = sext i32 %lnot.ext794 to i64, !dbg !7526
  %expval796 = call i64 @llvm.expect.i64(i64 %conv795, i64 0), !dbg !7526
  %tobool797 = icmp ne i64 %expval796, 0, !dbg !7526
  br i1 %tobool797, label %if.then798, label %if.end799, !dbg !7528

if.then798:                                       ; preds = %cleanup.cont786
  %432 = load ptr, ptr @__pyx_f, align 16, !dbg !7529, !tbaa !1899
  store ptr %432, ptr %__pyx_filename, align 8, !dbg !7529, !tbaa !1899
  %433 = load ptr, ptr %__pyx_filename, align 8, !dbg !7529, !tbaa !1899
  store i32 51, ptr %__pyx_lineno, align 4, !dbg !7529, !tbaa !1984
  %434 = load i32, ptr %__pyx_lineno, align 4, !dbg !7529, !tbaa !1984
  store i32 3736, ptr %__pyx_clineno, align 4, !dbg !7529, !tbaa !1984
  %435 = load i32, ptr %__pyx_clineno, align 4, !dbg !7529, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7532

if.end799:                                        ; preds = %cleanup.cont786
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7533, !tbaa !1899
  store i32 0, ptr %__pyx_t_4, align 4, !dbg !7534, !tbaa !1984
  %436 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7535, !tbaa !1899
  %call800 = call i32 @Py_IS_TYPE(ptr noundef %436, ptr noundef @PyMethod_Type), !dbg !7535
  %tobool801 = icmp ne i32 %call800, 0, !dbg !7535
  %lnot802 = xor i1 %tobool801, true, !dbg !7535
  %lnot804 = xor i1 %lnot802, true, !dbg !7535
  %lnot.ext805 = zext i1 %lnot804 to i32, !dbg !7535
  %conv806 = sext i32 %lnot.ext805 to i64, !dbg !7535
  %expval807 = call i64 @llvm.expect.i64(i64 %conv806, i64 1), !dbg !7535
  %tobool808 = icmp ne i64 %expval807, 0, !dbg !7535
  br i1 %tobool808, label %if.then809, label %if.end827, !dbg !7536

if.then809:                                       ; preds = %if.end799
  %437 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7537, !tbaa !1899
  %im_self810 = getelementptr inbounds %struct.PyMethodObject, ptr %437, i32 0, i32 2, !dbg !7537
  %438 = load ptr, ptr %im_self810, align 8, !dbg !7537, !tbaa !6934
  store ptr %438, ptr %__pyx_t_12, align 8, !dbg !7538, !tbaa !1899
  %439 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7539, !tbaa !1899
  %tobool811 = icmp ne ptr %439, null, !dbg !7539
  %lnot812 = xor i1 %tobool811, true, !dbg !7539
  %lnot814 = xor i1 %lnot812, true, !dbg !7539
  %lnot.ext815 = zext i1 %lnot814 to i32, !dbg !7539
  %conv816 = sext i32 %lnot.ext815 to i64, !dbg !7539
  %expval817 = call i64 @llvm.expect.i64(i64 %conv816, i64 1), !dbg !7539
  %tobool818 = icmp ne i64 %expval817, 0, !dbg !7539
  br i1 %tobool818, label %if.then819, label %if.end826, !dbg !7540

if.then819:                                       ; preds = %if.then809
  call void @llvm.lifetime.start.p0(i64 8, ptr %function820) #11, !dbg !7541
  tail call void @llvm.dbg.declare(metadata ptr %function820, metadata !6714, metadata !DIExpression()), !dbg !7542
  %440 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7543, !tbaa !1899
  %im_func821 = getelementptr inbounds %struct.PyMethodObject, ptr %440, i32 0, i32 1, !dbg !7543
  %441 = load ptr, ptr %im_func821, align 8, !dbg !7543, !tbaa !6942
  store ptr %441, ptr %function820, align 8, !dbg !7542, !tbaa !1899
  %442 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7544, !tbaa !1899
  call void @Py_INCREF(ptr noundef %442), !dbg !7544
  %443 = load ptr, ptr %function820, align 8, !dbg !7545, !tbaa !1899
  call void @Py_INCREF(ptr noundef %443), !dbg !7545
  br label %do.body822, !dbg !7546

do.body822:                                       ; preds = %if.then819
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp823) #11, !dbg !7547
  tail call void @llvm.dbg.declare(metadata ptr %tmp823, metadata !6719, metadata !DIExpression()), !dbg !7547
  %444 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7547, !tbaa !1899
  store ptr %444, ptr %tmp823, align 8, !dbg !7547, !tbaa !1899
  %445 = load ptr, ptr %function820, align 8, !dbg !7547, !tbaa !1899
  store ptr %445, ptr %__pyx_t_6, align 8, !dbg !7547, !tbaa !1899
  %446 = load ptr, ptr %tmp823, align 8, !dbg !7547, !tbaa !1899
  call void @Py_DECREF(ptr noundef %446), !dbg !7547
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp823) #11, !dbg !7546
  br label %do.cond824, !dbg !7547

do.cond824:                                       ; preds = %do.body822
  br label %do.end825, !dbg !7547

do.end825:                                        ; preds = %do.cond824
  store i32 1, ptr %__pyx_t_4, align 4, !dbg !7548, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function820) #11, !dbg !7549
  br label %if.end826, !dbg !7550

if.end826:                                        ; preds = %do.end825, %if.then809
  br label %if.end827, !dbg !7551

if.end827:                                        ; preds = %if.end826, %if.end799
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs828) #11, !dbg !7552
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs828, metadata !6721, metadata !DIExpression()), !dbg !7553
  %arrayinit.begin829 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs828, i64 0, i64 0, !dbg !7554
  %447 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7555, !tbaa !1899
  store ptr %447, ptr %arrayinit.begin829, align 8, !dbg !7554, !tbaa !1899
  %arrayinit.element830 = getelementptr inbounds ptr, ptr %arrayinit.begin829, i64 1, !dbg !7554
  %448 = load ptr, ptr %__pyx_v_debug, align 8, !dbg !7556, !tbaa !1899
  store ptr %448, ptr %arrayinit.element830, align 8, !dbg !7554, !tbaa !1899
  %449 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7557, !tbaa !1899
  %arraydecay831 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs828, i64 0, i64 0, !dbg !7557
  %add.ptr832 = getelementptr ptr, ptr %arraydecay831, i64 1, !dbg !7557
  %450 = load i32, ptr %__pyx_t_4, align 4, !dbg !7557, !tbaa !1984
  %idx.ext833 = sext i32 %450 to i64, !dbg !7557
  %idx.neg834 = sub i64 0, %idx.ext833, !dbg !7557
  %add.ptr835 = getelementptr ptr, ptr %add.ptr832, i64 %idx.neg834, !dbg !7557
  %451 = load i32, ptr %__pyx_t_4, align 4, !dbg !7557, !tbaa !1984
  %add836 = add i32 1, %451, !dbg !7557
  %conv837 = sext i32 %add836 to i64, !dbg !7557
  %call838 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %449, ptr noundef %add.ptr835, i64 noundef %conv837, ptr noundef null), !dbg !7557
  store ptr %call838, ptr %__pyx_t_1, align 8, !dbg !7558, !tbaa !1899
  %452 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7559, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %452), !dbg !7559
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !7560, !tbaa !1899
  %453 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7561, !tbaa !1899
  %tobool839 = icmp ne ptr %453, null, !dbg !7561
  %lnot840 = xor i1 %tobool839, true, !dbg !7561
  %lnot842 = xor i1 %lnot840, true, !dbg !7561
  %lnot844 = xor i1 %lnot842, true, !dbg !7561
  %lnot.ext845 = zext i1 %lnot844 to i32, !dbg !7561
  %conv846 = sext i32 %lnot.ext845 to i64, !dbg !7561
  %expval847 = call i64 @llvm.expect.i64(i64 %conv846, i64 0), !dbg !7561
  %tobool848 = icmp ne i64 %expval847, 0, !dbg !7561
  br i1 %tobool848, label %if.then849, label %if.end850, !dbg !7563

if.then849:                                       ; preds = %if.end827
  %454 = load ptr, ptr @__pyx_f, align 16, !dbg !7564, !tbaa !1899
  store ptr %454, ptr %__pyx_filename, align 8, !dbg !7564, !tbaa !1899
  %455 = load ptr, ptr %__pyx_filename, align 8, !dbg !7564, !tbaa !1899
  store i32 51, ptr %__pyx_lineno, align 4, !dbg !7564, !tbaa !1984
  %456 = load i32, ptr %__pyx_lineno, align 4, !dbg !7564, !tbaa !1984
  store i32 3756, ptr %__pyx_clineno, align 4, !dbg !7564, !tbaa !1984
  %457 = load i32, ptr %__pyx_clineno, align 4, !dbg !7564, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup851, !dbg !7567

if.end850:                                        ; preds = %if.end827
  %458 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7568, !tbaa !1899
  call void @Py_DECREF(ptr noundef %458), !dbg !7568
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !7569, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7570
  br label %cleanup851, !dbg !7570

cleanup851:                                       ; preds = %if.then849, %if.end850
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs828) #11, !dbg !7570
  %cleanup.dest852 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest852, label %cleanup855 [
    i32 0, label %cleanup.cont853
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont853:                                  ; preds = %cleanup851
  %459 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7571, !tbaa !1899
  call void @Py_DECREF(ptr noundef %459), !dbg !7571
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7572, !tbaa !1899
  br label %if.end854, !dbg !7573

if.end854:                                        ; preds = %cleanup.cont853, %if.end717
  %460 = load ptr, ptr %__pyx_r, align 8, !dbg !7574, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %460), !dbg !7574
  %461 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !7575, !tbaa !1899
  call void @Py_INCREF(ptr noundef %461), !dbg !7575
  %462 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !7576, !tbaa !1899
  store ptr %462, ptr %__pyx_r, align 8, !dbg !7577, !tbaa !1899
  br label %__pyx_L0, !dbg !7578

__pyx_L1_error:                                   ; preds = %cleanup851, %cleanup784, %cleanup701, %cleanup403, %cleanup284, %cleanup, %if.then798, %if.then731, %if.then716, %if.then646, %if.then633, %if.then616, %if.then595, %if.then570, %if.then554, %if.then541, %if.then528, %if.then509, %if.then493, %if.then473, %if.then448, %if.then433, %if.then422, %if.then323, %if.then310, %if.then231, %if.then214, %if.then188, %if.then136, %if.then119, %if.then106, %if.then93, %if.then69, %if.then46, %if.then31, %if.then20, %if.then7
  tail call void @llvm.dbg.label(metadata !6723), !dbg !7579
  %463 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7580, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %463), !dbg !7580
  %464 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7581, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %464), !dbg !7581
  %465 = load ptr, ptr %__pyx_t_6, align 8, !dbg !7582, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %465), !dbg !7582
  %466 = load ptr, ptr %__pyx_t_8, align 8, !dbg !7583, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %466), !dbg !7583
  %467 = load ptr, ptr %__pyx_t_12, align 8, !dbg !7584, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %467), !dbg !7584
  %468 = load ptr, ptr %__pyx_t_15, align 8, !dbg !7585, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %468), !dbg !7585
  %469 = load i32, ptr %__pyx_clineno, align 4, !dbg !7586, !tbaa !1984
  %470 = load i32, ptr %__pyx_lineno, align 4, !dbg !7587, !tbaa !1984
  %471 = load ptr, ptr %__pyx_filename, align 8, !dbg !7588, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.80, i32 noundef %469, i32 noundef %470, ptr noundef %471), !dbg !7589
  store ptr null, ptr %__pyx_r, align 8, !dbg !7590, !tbaa !1899
  br label %__pyx_L0, !dbg !7591

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end854
  tail call void @llvm.dbg.label(metadata !6724), !dbg !7592
  %472 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !7593, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %472), !dbg !7593
  %473 = load ptr, ptr %__pyx_v_transitions, align 8, !dbg !7594, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %473), !dbg !7594
  %474 = load ptr, ptr %__pyx_v_state_map, align 8, !dbg !7595, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %474), !dbg !7595
  %475 = load ptr, ptr %__pyx_v_key, align 8, !dbg !7596, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %475), !dbg !7596
  %476 = load ptr, ptr %__pyx_v_old_state, align 8, !dbg !7597, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %476), !dbg !7597
  %477 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !7598, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %477), !dbg !7598
  %478 = load ptr, ptr %__pyx_v_event, align 8, !dbg !7599, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %478), !dbg !7599
  %479 = load ptr, ptr %__pyx_v_old_target_states, align 8, !dbg !7600, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %479), !dbg !7600
  %480 = load ptr, ptr %__pyx_v_old_states, align 8, !dbg !7601, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %480), !dbg !7601
  %481 = load ptr, ptr %__pyx_r, align 8, !dbg !7602, !tbaa !1899
  store ptr %481, ptr %retval, align 8, !dbg !7603
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup855, !dbg !7603

cleanup855:                                       ; preds = %__pyx_L0, %cleanup851, %cleanup784, %cleanup701, %cleanup403, %cleanup284, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_15) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_14) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_13) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_old_states) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_old_target_states) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_event) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_new_state) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_old_state) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_key) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state_map) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_transitions) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_new_machine) #11, !dbg !7604
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_debug) #11, !dbg !7604
  %482 = load ptr, ptr %retval, align 8, !dbg !7604
  ret ptr %482, !dbg !7604

unreachable:                                      ; preds = %cleanup367, %cleanup354, %cleanup196
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA_set_epsilon_closure(ptr noundef %__pyx_v_state_set) #0 !dbg !7605 {
entry:
  %__pyx_v_state_set.addr = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_v_state1 = alloca ptr, align 8
  %__pyx_v_state2 = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i64, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp133 = alloca ptr, align 8
  store ptr %__pyx_v_state_set, ptr %__pyx_v_state_set.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state_set.addr, metadata !7607, metadata !DIExpression()), !dbg !7634
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #11, !dbg !7635
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_result, metadata !7608, metadata !DIExpression()), !dbg !7636
  store ptr null, ptr %__pyx_v_result, align 8, !dbg !7636, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state1) #11, !dbg !7637
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state1, metadata !7609, metadata !DIExpression()), !dbg !7638
  store ptr null, ptr %__pyx_v_state1, align 8, !dbg !7638, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state2) #11, !dbg !7639
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state2, metadata !7610, metadata !DIExpression()), !dbg !7640
  store ptr null, ptr %__pyx_v_state2, align 8, !dbg !7640, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !7641
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !7611, metadata !DIExpression()), !dbg !7642
  store ptr null, ptr %__pyx_r, align 8, !dbg !7642, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !7643
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !7612, metadata !DIExpression()), !dbg !7644
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7644, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !7645
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !7613, metadata !DIExpression()), !dbg !7646
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !7647
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !7614, metadata !DIExpression()), !dbg !7648
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !7649
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !7615, metadata !DIExpression()), !dbg !7650
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !7651
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !7616, metadata !DIExpression()), !dbg !7652
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7652, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !7653
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !7617, metadata !DIExpression()), !dbg !7654
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !7655
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !7618, metadata !DIExpression()), !dbg !7656
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !7657
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !7619, metadata !DIExpression()), !dbg !7658
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #11, !dbg !7659
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !7620, metadata !DIExpression()), !dbg !7660
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !7660, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #11, !dbg !7661
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !7621, metadata !DIExpression()), !dbg !7662
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !7662, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #11, !dbg !7663
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !7622, metadata !DIExpression()), !dbg !7664
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !7665
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !7623, metadata !DIExpression()), !dbg !7666
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !7666, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !7667
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !7624, metadata !DIExpression()), !dbg !7668
  store ptr null, ptr %__pyx_filename, align 8, !dbg !7668, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !7669
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !7625, metadata !DIExpression()), !dbg !7670
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !7670, !tbaa !1984
  %call = call ptr @PyDict_New(), !dbg !7671
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !7672, !tbaa !1899
  %0 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7673, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !7673
  %lnot = xor i1 %tobool, true, !dbg !7673
  %lnot1 = xor i1 %lnot, true, !dbg !7673
  %lnot2 = xor i1 %lnot1, true, !dbg !7673
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7673
  %conv = sext i32 %lnot.ext to i64, !dbg !7673
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7673
  %tobool3 = icmp ne i64 %expval, 0, !dbg !7673
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7675

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_f, align 16, !dbg !7676, !tbaa !1899
  store ptr %1, ptr %__pyx_filename, align 8, !dbg !7676, !tbaa !1899
  %2 = load ptr, ptr %__pyx_filename, align 8, !dbg !7676, !tbaa !1899
  store i32 60, ptr %__pyx_lineno, align 4, !dbg !7676, !tbaa !1984
  %3 = load i32, ptr %__pyx_lineno, align 4, !dbg !7676, !tbaa !1984
  store i32 4000, ptr %__pyx_clineno, align 4, !dbg !7676, !tbaa !1984
  %4 = load i32, ptr %__pyx_clineno, align 4, !dbg !7676, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7679

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7680, !tbaa !1899
  store ptr %5, ptr %__pyx_v_result, align 8, !dbg !7681, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7682, !tbaa !1899
  store i64 0, ptr %__pyx_t_2, align 8, !dbg !7683, !tbaa !2597
  %6 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !7684, !tbaa !1899
  %cmp = icmp eq ptr %6, @_Py_NoneStruct, !dbg !7684
  %lnot5 = xor i1 %cmp, true, !dbg !7684
  %lnot7 = xor i1 %lnot5, true, !dbg !7684
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7684
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7684
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !7684
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !7684
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7686

if.then12:                                        ; preds = %if.end
  %7 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !7687, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.78), !dbg !7689
  %8 = load ptr, ptr @__pyx_f, align 16, !dbg !7690, !tbaa !1899
  store ptr %8, ptr %__pyx_filename, align 8, !dbg !7690, !tbaa !1899
  %9 = load ptr, ptr %__pyx_filename, align 8, !dbg !7690, !tbaa !1899
  store i32 61, ptr %__pyx_lineno, align 4, !dbg !7690, !tbaa !1984
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !7690, !tbaa !1984
  store i32 4015, ptr %__pyx_clineno, align 4, !dbg !7690, !tbaa !1984
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !7690, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7693

if.end13:                                         ; preds = %if.end
  %12 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !7694, !tbaa !1899
  %call14 = call ptr @__Pyx_dict_iterator(ptr noundef %12, i32 noundef 1, ptr noundef null, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4), !dbg !7695
  store ptr %call14, ptr %__pyx_t_5, align 8, !dbg !7696, !tbaa !1899
  %13 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7697, !tbaa !1899
  %tobool15 = icmp ne ptr %13, null, !dbg !7697
  %lnot16 = xor i1 %tobool15, true, !dbg !7697
  %lnot18 = xor i1 %lnot16, true, !dbg !7697
  %lnot20 = xor i1 %lnot18, true, !dbg !7697
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !7697
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !7697
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0), !dbg !7697
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !7697
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !7699

if.then25:                                        ; preds = %if.end13
  %14 = load ptr, ptr @__pyx_f, align 16, !dbg !7700, !tbaa !1899
  store ptr %14, ptr %__pyx_filename, align 8, !dbg !7700, !tbaa !1899
  %15 = load ptr, ptr %__pyx_filename, align 8, !dbg !7700, !tbaa !1899
  store i32 61, ptr %__pyx_lineno, align 4, !dbg !7700, !tbaa !1984
  %16 = load i32, ptr %__pyx_lineno, align 4, !dbg !7700, !tbaa !1984
  store i32 4017, ptr %__pyx_clineno, align 4, !dbg !7700, !tbaa !1984
  %17 = load i32, ptr %__pyx_clineno, align 4, !dbg !7700, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7703

if.end26:                                         ; preds = %if.end13
  %18 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7704, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %18), !dbg !7704
  %19 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7705, !tbaa !1899
  store ptr %19, ptr %__pyx_t_1, align 8, !dbg !7706, !tbaa !1899
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7707, !tbaa !1899
  br label %while.cond, !dbg !7708

while.cond:                                       ; preds = %while.end, %if.end26
  br label %while.body, !dbg !7708

while.body:                                       ; preds = %while.cond
  %20 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7709, !tbaa !1899
  %21 = load i64, ptr %__pyx_t_3, align 8, !dbg !7710, !tbaa !2597
  %22 = load i32, ptr %__pyx_t_4, align 4, !dbg !7711, !tbaa !1984
  %call27 = call i32 @__Pyx_dict_iter_next(ptr noundef %20, i64 noundef %21, ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_5, ptr noundef null, ptr noundef null, i32 noundef %22), !dbg !7712
  store i32 %call27, ptr %__pyx_t_6, align 4, !dbg !7713, !tbaa !1984
  %23 = load i32, ptr %__pyx_t_6, align 4, !dbg !7714, !tbaa !1984
  %cmp28 = icmp eq i32 %23, 0, !dbg !7714
  %lnot30 = xor i1 %cmp28, true, !dbg !7714
  %lnot32 = xor i1 %lnot30, true, !dbg !7714
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !7714
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !7714
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0), !dbg !7714
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !7714
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !7716

if.then37:                                        ; preds = %while.body
  br label %while.end148, !dbg !7717

if.end38:                                         ; preds = %while.body
  %24 = load i32, ptr %__pyx_t_6, align 4, !dbg !7718, !tbaa !1984
  %cmp39 = icmp eq i32 %24, -1, !dbg !7718
  %lnot41 = xor i1 %cmp39, true, !dbg !7718
  %lnot43 = xor i1 %lnot41, true, !dbg !7718
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !7718
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !7718
  %expval46 = call i64 @llvm.expect.i64(i64 %conv45, i64 0), !dbg !7718
  %tobool47 = icmp ne i64 %expval46, 0, !dbg !7718
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !7720

if.then48:                                        ; preds = %if.end38
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !7721, !tbaa !1899
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !7721, !tbaa !1899
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !7721, !tbaa !1899
  store i32 61, ptr %__pyx_lineno, align 4, !dbg !7721, !tbaa !1984
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !7721, !tbaa !1984
  store i32 4025, ptr %__pyx_clineno, align 4, !dbg !7721, !tbaa !1984
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !7721, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7724

if.end49:                                         ; preds = %if.end38
  br label %do.body, !dbg !7725

do.body:                                          ; preds = %if.end49
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !7726
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !7626, metadata !DIExpression()), !dbg !7726
  %29 = load ptr, ptr %__pyx_v_state1, align 8, !dbg !7726, !tbaa !1899
  store ptr %29, ptr %tmp, align 8, !dbg !7726, !tbaa !1899
  %30 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7726, !tbaa !1899
  store ptr %30, ptr %__pyx_v_state1, align 8, !dbg !7726, !tbaa !1899
  %31 = load ptr, ptr %tmp, align 8, !dbg !7726, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %31), !dbg !7726
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !7725
  br label %do.cond, !dbg !7726

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !7726

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7727, !tbaa !1899
  store i64 0, ptr %__pyx_t_7, align 8, !dbg !7728, !tbaa !2597
  %32 = load ptr, ptr %__pyx_v_state1, align 8, !dbg !7729, !tbaa !1899
  %cmp50 = icmp eq ptr %32, @_Py_NoneStruct, !dbg !7729
  br i1 %cmp50, label %lor.end, label %lor.rhs, !dbg !7729

lor.rhs:                                          ; preds = %do.end
  %33 = load ptr, ptr %__pyx_v_state1, align 8, !dbg !7729, !tbaa !1899
  %34 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7729, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Node = getelementptr inbounds %struct.__pyx_mstate, ptr %34, i32 0, i32 16, !dbg !7729
  %35 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Node, align 8, !dbg !7729, !tbaa !3556
  %call52 = call i32 @__Pyx_TypeTest(ptr noundef %33, ptr noundef %35), !dbg !7729
  %tobool53 = icmp ne i32 %call52, 0, !dbg !7729
  %lnot54 = xor i1 %tobool53, true, !dbg !7729
  %lnot56 = xor i1 %lnot54, true, !dbg !7729
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !7729
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !7729
  %expval59 = call i64 @llvm.expect.i64(i64 %conv58, i64 1), !dbg !7729
  %tobool60 = icmp ne i64 %expval59, 0, !dbg !7729
  br label %lor.end, !dbg !7729

lor.end:                                          ; preds = %lor.rhs, %do.end
  %36 = phi i1 [ true, %do.end ], [ %tobool60, %lor.rhs ]
  %lnot61 = xor i1 %36, true, !dbg !7729
  %lnot63 = xor i1 %lnot61, true, !dbg !7729
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !7729
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !7729
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 1), !dbg !7729
  %tobool67 = icmp ne i64 %expval66, 0, !dbg !7729
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !7731

if.then68:                                        ; preds = %lor.end
  %37 = load ptr, ptr @__pyx_f, align 16, !dbg !7732, !tbaa !1899
  store ptr %37, ptr %__pyx_filename, align 8, !dbg !7732, !tbaa !1899
  %38 = load ptr, ptr %__pyx_filename, align 8, !dbg !7732, !tbaa !1899
  store i32 62, ptr %__pyx_lineno, align 4, !dbg !7732, !tbaa !1984
  %39 = load i32, ptr %__pyx_lineno, align 4, !dbg !7732, !tbaa !1984
  store i32 4038, ptr %__pyx_clineno, align 4, !dbg !7732, !tbaa !1984
  %40 = load i32, ptr %__pyx_clineno, align 4, !dbg !7732, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7735

if.end69:                                         ; preds = %lor.end
  %41 = load ptr, ptr %__pyx_v_state1, align 8, !dbg !7736, !tbaa !1899
  %call70 = call ptr @__pyx_f_6Cython_4Plex_3DFA_epsilon_closure(ptr noundef %41), !dbg !7737
  store ptr %call70, ptr %__pyx_t_9, align 8, !dbg !7738, !tbaa !1899
  %42 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7739, !tbaa !1899
  %tobool71 = icmp ne ptr %42, null, !dbg !7739
  %lnot72 = xor i1 %tobool71, true, !dbg !7739
  %lnot74 = xor i1 %lnot72, true, !dbg !7739
  %lnot76 = xor i1 %lnot74, true, !dbg !7739
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !7739
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !7739
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0), !dbg !7739
  %tobool80 = icmp ne i64 %expval79, 0, !dbg !7739
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !7741

if.then81:                                        ; preds = %if.end69
  %43 = load ptr, ptr @__pyx_f, align 16, !dbg !7742, !tbaa !1899
  store ptr %43, ptr %__pyx_filename, align 8, !dbg !7742, !tbaa !1899
  %44 = load ptr, ptr %__pyx_filename, align 8, !dbg !7742, !tbaa !1899
  store i32 62, ptr %__pyx_lineno, align 4, !dbg !7742, !tbaa !1984
  %45 = load i32, ptr %__pyx_lineno, align 4, !dbg !7742, !tbaa !1984
  store i32 4039, ptr %__pyx_clineno, align 4, !dbg !7742, !tbaa !1984
  %46 = load i32, ptr %__pyx_clineno, align 4, !dbg !7742, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7745

if.end82:                                         ; preds = %if.end69
  %47 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7746, !tbaa !1899
  %cmp83 = icmp eq ptr %47, @_Py_NoneStruct, !dbg !7746
  %lnot85 = xor i1 %cmp83, true, !dbg !7746
  %lnot87 = xor i1 %lnot85, true, !dbg !7746
  %lnot.ext88 = zext i1 %lnot87 to i32, !dbg !7746
  %conv89 = sext i32 %lnot.ext88 to i64, !dbg !7746
  %expval90 = call i64 @llvm.expect.i64(i64 %conv89, i64 0), !dbg !7746
  %tobool91 = icmp ne i64 %expval90, 0, !dbg !7746
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !7748

if.then92:                                        ; preds = %if.end82
  %48 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !7749, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %48, ptr noundef @.str.78), !dbg !7751
  %49 = load ptr, ptr @__pyx_f, align 16, !dbg !7752, !tbaa !1899
  store ptr %49, ptr %__pyx_filename, align 8, !dbg !7752, !tbaa !1899
  %50 = load ptr, ptr %__pyx_filename, align 8, !dbg !7752, !tbaa !1899
  store i32 62, ptr %__pyx_lineno, align 4, !dbg !7752, !tbaa !1984
  %51 = load i32, ptr %__pyx_lineno, align 4, !dbg !7752, !tbaa !1984
  store i32 4043, ptr %__pyx_clineno, align 4, !dbg !7752, !tbaa !1984
  %52 = load i32, ptr %__pyx_clineno, align 4, !dbg !7752, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7755

if.end93:                                         ; preds = %if.end82
  %53 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7756, !tbaa !1899
  %call94 = call ptr @__Pyx_dict_iterator(ptr noundef %53, i32 noundef 1, ptr noundef null, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_6), !dbg !7757
  store ptr %call94, ptr %__pyx_t_10, align 8, !dbg !7758, !tbaa !1899
  %54 = load ptr, ptr %__pyx_t_10, align 8, !dbg !7759, !tbaa !1899
  %tobool95 = icmp ne ptr %54, null, !dbg !7759
  %lnot96 = xor i1 %tobool95, true, !dbg !7759
  %lnot98 = xor i1 %lnot96, true, !dbg !7759
  %lnot100 = xor i1 %lnot98, true, !dbg !7759
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !7759
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !7759
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 0), !dbg !7759
  %tobool104 = icmp ne i64 %expval103, 0, !dbg !7759
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !7761

if.then105:                                       ; preds = %if.end93
  %55 = load ptr, ptr @__pyx_f, align 16, !dbg !7762, !tbaa !1899
  store ptr %55, ptr %__pyx_filename, align 8, !dbg !7762, !tbaa !1899
  %56 = load ptr, ptr %__pyx_filename, align 8, !dbg !7762, !tbaa !1899
  store i32 62, ptr %__pyx_lineno, align 4, !dbg !7762, !tbaa !1984
  %57 = load i32, ptr %__pyx_lineno, align 4, !dbg !7762, !tbaa !1984
  store i32 4045, ptr %__pyx_clineno, align 4, !dbg !7762, !tbaa !1984
  %58 = load i32, ptr %__pyx_clineno, align 4, !dbg !7762, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7765

if.end106:                                        ; preds = %if.end93
  %59 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7766, !tbaa !1899
  call void @Py_DECREF(ptr noundef %59), !dbg !7766
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !7767, !tbaa !1899
  %60 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7768, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %60), !dbg !7768
  %61 = load ptr, ptr %__pyx_t_10, align 8, !dbg !7769, !tbaa !1899
  store ptr %61, ptr %__pyx_t_5, align 8, !dbg !7770, !tbaa !1899
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !7771, !tbaa !1899
  br label %while.cond107, !dbg !7772

while.cond107:                                    ; preds = %if.end147, %if.end106
  br label %while.body108, !dbg !7772

while.body108:                                    ; preds = %while.cond107
  %62 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7773, !tbaa !1899
  %63 = load i64, ptr %__pyx_t_8, align 8, !dbg !7774, !tbaa !2597
  %64 = load i32, ptr %__pyx_t_6, align 4, !dbg !7775, !tbaa !1984
  %call109 = call i32 @__Pyx_dict_iter_next(ptr noundef %62, i64 noundef %63, ptr noundef %__pyx_t_7, ptr noundef %__pyx_t_10, ptr noundef null, ptr noundef null, i32 noundef %64), !dbg !7776
  store i32 %call109, ptr %__pyx_t_11, align 4, !dbg !7777, !tbaa !1984
  %65 = load i32, ptr %__pyx_t_11, align 4, !dbg !7778, !tbaa !1984
  %cmp110 = icmp eq i32 %65, 0, !dbg !7778
  %lnot112 = xor i1 %cmp110, true, !dbg !7778
  %lnot114 = xor i1 %lnot112, true, !dbg !7778
  %lnot.ext115 = zext i1 %lnot114 to i32, !dbg !7778
  %conv116 = sext i32 %lnot.ext115 to i64, !dbg !7778
  %expval117 = call i64 @llvm.expect.i64(i64 %conv116, i64 0), !dbg !7778
  %tobool118 = icmp ne i64 %expval117, 0, !dbg !7778
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !7780

if.then119:                                       ; preds = %while.body108
  br label %while.end, !dbg !7781

if.end120:                                        ; preds = %while.body108
  %66 = load i32, ptr %__pyx_t_11, align 4, !dbg !7782, !tbaa !1984
  %cmp121 = icmp eq i32 %66, -1, !dbg !7782
  %lnot123 = xor i1 %cmp121, true, !dbg !7782
  %lnot125 = xor i1 %lnot123, true, !dbg !7782
  %lnot.ext126 = zext i1 %lnot125 to i32, !dbg !7782
  %conv127 = sext i32 %lnot.ext126 to i64, !dbg !7782
  %expval128 = call i64 @llvm.expect.i64(i64 %conv127, i64 0), !dbg !7782
  %tobool129 = icmp ne i64 %expval128, 0, !dbg !7782
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !7784

if.then130:                                       ; preds = %if.end120
  %67 = load ptr, ptr @__pyx_f, align 16, !dbg !7785, !tbaa !1899
  store ptr %67, ptr %__pyx_filename, align 8, !dbg !7785, !tbaa !1899
  %68 = load ptr, ptr %__pyx_filename, align 8, !dbg !7785, !tbaa !1899
  store i32 62, ptr %__pyx_lineno, align 4, !dbg !7785, !tbaa !1984
  %69 = load i32, ptr %__pyx_lineno, align 4, !dbg !7785, !tbaa !1984
  store i32 4054, ptr %__pyx_clineno, align 4, !dbg !7785, !tbaa !1984
  %70 = load i32, ptr %__pyx_clineno, align 4, !dbg !7785, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7788

if.end131:                                        ; preds = %if.end120
  br label %do.body132, !dbg !7789

do.body132:                                       ; preds = %if.end131
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp133) #11, !dbg !7790
  tail call void @llvm.dbg.declare(metadata ptr %tmp133, metadata !7629, metadata !DIExpression()), !dbg !7790
  %71 = load ptr, ptr %__pyx_v_state2, align 8, !dbg !7790, !tbaa !1899
  store ptr %71, ptr %tmp133, align 8, !dbg !7790, !tbaa !1899
  %72 = load ptr, ptr %__pyx_t_10, align 8, !dbg !7790, !tbaa !1899
  store ptr %72, ptr %__pyx_v_state2, align 8, !dbg !7790, !tbaa !1899
  %73 = load ptr, ptr %tmp133, align 8, !dbg !7790, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %73), !dbg !7790
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp133) #11, !dbg !7789
  br label %do.cond134, !dbg !7790

do.cond134:                                       ; preds = %do.body132
  br label %do.end135, !dbg !7790

do.end135:                                        ; preds = %do.cond134
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !7791, !tbaa !1899
  %74 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7792, !tbaa !1899
  %75 = load ptr, ptr %__pyx_v_state2, align 8, !dbg !7792, !tbaa !1899
  %76 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7792, !tbaa !1899
  %__pyx_int_1 = getelementptr inbounds %struct.__pyx_mstate, ptr %76, i32 0, i32 91, !dbg !7792
  %77 = load ptr, ptr %__pyx_int_1, align 8, !dbg !7792, !tbaa !2854
  %call136 = call i32 @PyDict_SetItem(ptr noundef %74, ptr noundef %75, ptr noundef %77), !dbg !7792
  %cmp137 = icmp slt i32 %call136, 0, !dbg !7792
  %lnot139 = xor i1 %cmp137, true, !dbg !7792
  %lnot141 = xor i1 %lnot139, true, !dbg !7792
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !7792
  %conv143 = sext i32 %lnot.ext142 to i64, !dbg !7792
  %expval144 = call i64 @llvm.expect.i64(i64 %conv143, i64 0), !dbg !7792
  %tobool145 = icmp ne i64 %expval144, 0, !dbg !7792
  br i1 %tobool145, label %if.then146, label %if.end147, !dbg !7794

if.then146:                                       ; preds = %do.end135
  %78 = load ptr, ptr @__pyx_f, align 16, !dbg !7795, !tbaa !1899
  store ptr %78, ptr %__pyx_filename, align 8, !dbg !7795, !tbaa !1899
  %79 = load ptr, ptr %__pyx_filename, align 8, !dbg !7795, !tbaa !1899
  store i32 63, ptr %__pyx_lineno, align 4, !dbg !7795, !tbaa !1984
  %80 = load i32, ptr %__pyx_lineno, align 4, !dbg !7795, !tbaa !1984
  store i32 4066, ptr %__pyx_clineno, align 4, !dbg !7795, !tbaa !1984
  %81 = load i32, ptr %__pyx_clineno, align 4, !dbg !7795, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7798

if.end147:                                        ; preds = %do.end135
  br label %while.cond107, !dbg !7772, !llvm.loop !7799

while.end:                                        ; preds = %if.then119
  %82 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7801, !tbaa !1899
  call void @Py_DECREF(ptr noundef %82), !dbg !7801
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7802, !tbaa !1899
  br label %while.cond, !dbg !7708, !llvm.loop !7803

while.end148:                                     ; preds = %if.then37
  %83 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7805, !tbaa !1899
  call void @Py_DECREF(ptr noundef %83), !dbg !7805
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7806, !tbaa !1899
  %84 = load ptr, ptr %__pyx_r, align 8, !dbg !7807, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %84), !dbg !7807
  %85 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7808, !tbaa !1899
  call void @Py_INCREF(ptr noundef %85), !dbg !7808
  %86 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7809, !tbaa !1899
  store ptr %86, ptr %__pyx_r, align 8, !dbg !7810, !tbaa !1899
  br label %__pyx_L0, !dbg !7811

__pyx_L1_error:                                   ; preds = %if.then146, %if.then130, %if.then105, %if.then92, %if.then81, %if.then68, %if.then48, %if.then25, %if.then12, %if.then
  tail call void @llvm.dbg.label(metadata !7632), !dbg !7812
  %87 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7813, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %87), !dbg !7813
  %88 = load ptr, ptr %__pyx_t_5, align 8, !dbg !7814, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %88), !dbg !7814
  %89 = load ptr, ptr %__pyx_t_9, align 8, !dbg !7815, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %89), !dbg !7815
  %90 = load ptr, ptr %__pyx_t_10, align 8, !dbg !7816, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %90), !dbg !7816
  %91 = load i32, ptr %__pyx_clineno, align 4, !dbg !7817, !tbaa !1984
  %92 = load i32, ptr %__pyx_lineno, align 4, !dbg !7818, !tbaa !1984
  %93 = load ptr, ptr %__pyx_filename, align 8, !dbg !7819, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.96, i32 noundef %91, i32 noundef %92, ptr noundef %93), !dbg !7820
  store ptr null, ptr %__pyx_r, align 8, !dbg !7821, !tbaa !1899
  br label %__pyx_L0, !dbg !7822

__pyx_L0:                                         ; preds = %__pyx_L1_error, %while.end148
  tail call void @llvm.dbg.label(metadata !7633), !dbg !7823
  %94 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7824, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %94), !dbg !7824
  %95 = load ptr, ptr %__pyx_v_state1, align 8, !dbg !7825, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %95), !dbg !7825
  %96 = load ptr, ptr %__pyx_v_state2, align 8, !dbg !7826, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %96), !dbg !7826
  %97 = load ptr, ptr %__pyx_r, align 8, !dbg !7827, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state2) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state1) #11, !dbg !7828
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #11, !dbg !7828
  ret ptr %97, !dbg !7829
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA_epsilon_closure(ptr noundef %__pyx_v_state) #0 !dbg !7830 {
entry:
  %__pyx_v_state.addr = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_state, ptr %__pyx_v_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state.addr, metadata !7834, metadata !DIExpression()), !dbg !7848
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #11, !dbg !7849
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_result, metadata !7835, metadata !DIExpression()), !dbg !7850
  store ptr null, ptr %__pyx_v_result, align 8, !dbg !7850, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !7851
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !7836, metadata !DIExpression()), !dbg !7852
  store ptr null, ptr %__pyx_r, align 8, !dbg !7852, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !7853
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !7837, metadata !DIExpression()), !dbg !7854
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7854, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !7855
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !7838, metadata !DIExpression()), !dbg !7856
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !7857
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !7839, metadata !DIExpression()), !dbg !7858
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !7858, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !7859
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !7840, metadata !DIExpression()), !dbg !7860
  store ptr null, ptr %__pyx_filename, align 8, !dbg !7860, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !7861
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !7841, metadata !DIExpression()), !dbg !7862
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !7862, !tbaa !1984
  %0 = load ptr, ptr %__pyx_v_state.addr, align 8, !dbg !7863, !tbaa !1899
  %epsilon_closure = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Node, ptr %0, i32 0, i32 3, !dbg !7864
  %1 = load ptr, ptr %epsilon_closure, align 8, !dbg !7864, !tbaa !7865
  store ptr %1, ptr %__pyx_t_1, align 8, !dbg !7867, !tbaa !1899
  %2 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7868, !tbaa !1899
  call void @Py_INCREF(ptr noundef %2), !dbg !7868
  %3 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7869, !tbaa !1899
  store ptr %3, ptr %__pyx_v_result, align 8, !dbg !7870, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7871, !tbaa !1899
  %4 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7872, !tbaa !1899
  %cmp = icmp eq ptr %4, @_Py_NoneStruct, !dbg !7873
  %conv = zext i1 %cmp to i32, !dbg !7873
  store i32 %conv, ptr %__pyx_t_2, align 4, !dbg !7874, !tbaa !1984
  %5 = load i32, ptr %__pyx_t_2, align 4, !dbg !7875, !tbaa !1984
  %tobool = icmp ne i32 %5, 0, !dbg !7875
  br i1 %tobool, label %if.then, label %if.end22, !dbg !7876

if.then:                                          ; preds = %entry
  %call = call ptr @PyDict_New(), !dbg !7877
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !7878, !tbaa !1899
  %6 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7879, !tbaa !1899
  %tobool1 = icmp ne ptr %6, null, !dbg !7879
  %lnot = xor i1 %tobool1, true, !dbg !7879
  %lnot2 = xor i1 %lnot, true, !dbg !7879
  %lnot3 = xor i1 %lnot2, true, !dbg !7879
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7879
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7879
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0), !dbg !7879
  %tobool5 = icmp ne i64 %expval, 0, !dbg !7879
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !7881

if.then6:                                         ; preds = %if.then
  %7 = load ptr, ptr @__pyx_f, align 16, !dbg !7882, !tbaa !1899
  store ptr %7, ptr %__pyx_filename, align 8, !dbg !7882, !tbaa !1899
  %8 = load ptr, ptr %__pyx_filename, align 8, !dbg !7882, !tbaa !1899
  store i32 75, ptr %__pyx_lineno, align 4, !dbg !7882, !tbaa !1984
  %9 = load i32, ptr %__pyx_lineno, align 4, !dbg !7882, !tbaa !1984
  store i32 4157, ptr %__pyx_clineno, align 4, !dbg !7882, !tbaa !1984
  %10 = load i32, ptr %__pyx_clineno, align 4, !dbg !7882, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7885

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !7886

do.body:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !7887
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !7842, metadata !DIExpression()), !dbg !7887
  %11 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7887, !tbaa !1899
  store ptr %11, ptr %tmp, align 8, !dbg !7887, !tbaa !1899
  %12 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7887, !tbaa !1899
  store ptr %12, ptr %__pyx_v_result, align 8, !dbg !7887, !tbaa !1899
  %13 = load ptr, ptr %tmp, align 8, !dbg !7887, !tbaa !1899
  call void @Py_DECREF(ptr noundef %13), !dbg !7887
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !7886
  br label %do.cond, !dbg !7887

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !7887

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7888, !tbaa !1899
  %14 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7889, !tbaa !1899
  call void @Py_INCREF(ptr noundef %14), !dbg !7889
  %15 = load ptr, ptr %__pyx_v_state.addr, align 8, !dbg !7890, !tbaa !1899
  %epsilon_closure7 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Node, ptr %15, i32 0, i32 3, !dbg !7890
  %16 = load ptr, ptr %epsilon_closure7, align 8, !dbg !7890, !tbaa !7865
  call void @Py_DECREF(ptr noundef %16), !dbg !7890
  %17 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7891, !tbaa !1899
  %18 = load ptr, ptr %__pyx_v_state.addr, align 8, !dbg !7892, !tbaa !1899
  %epsilon_closure8 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Node, ptr %18, i32 0, i32 3, !dbg !7893
  store ptr %17, ptr %epsilon_closure8, align 8, !dbg !7894, !tbaa !7865
  %19 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7895, !tbaa !1899
  %20 = load ptr, ptr %__pyx_v_state.addr, align 8, !dbg !7896, !tbaa !1899
  %call9 = call ptr @__pyx_f_6Cython_4Plex_3DFA_add_to_epsilon_closure(ptr noundef %19, ptr noundef %20), !dbg !7897
  store ptr %call9, ptr %__pyx_t_1, align 8, !dbg !7898, !tbaa !1899
  %21 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7899, !tbaa !1899
  %tobool10 = icmp ne ptr %21, null, !dbg !7899
  %lnot11 = xor i1 %tobool10, true, !dbg !7899
  %lnot13 = xor i1 %lnot11, true, !dbg !7899
  %lnot15 = xor i1 %lnot13, true, !dbg !7899
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !7899
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !7899
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0), !dbg !7899
  %tobool19 = icmp ne i64 %expval18, 0, !dbg !7899
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7901

if.then20:                                        ; preds = %do.end
  %22 = load ptr, ptr @__pyx_f, align 16, !dbg !7902, !tbaa !1899
  store ptr %22, ptr %__pyx_filename, align 8, !dbg !7902, !tbaa !1899
  %23 = load ptr, ptr %__pyx_filename, align 8, !dbg !7902, !tbaa !1899
  store i32 77, ptr %__pyx_lineno, align 4, !dbg !7902, !tbaa !1984
  %24 = load i32, ptr %__pyx_lineno, align 4, !dbg !7902, !tbaa !1984
  store i32 4182, ptr %__pyx_clineno, align 4, !dbg !7902, !tbaa !1984
  %25 = load i32, ptr %__pyx_clineno, align 4, !dbg !7902, !tbaa !1984
  br label %__pyx_L1_error, !dbg !7905

if.end21:                                         ; preds = %do.end
  %26 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7906, !tbaa !1899
  call void @Py_DECREF(ptr noundef %26), !dbg !7906
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7907, !tbaa !1899
  br label %if.end22, !dbg !7908

if.end22:                                         ; preds = %if.end21, %entry
  %27 = load ptr, ptr %__pyx_r, align 8, !dbg !7909, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %27), !dbg !7909
  %28 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7910, !tbaa !1899
  call void @Py_INCREF(ptr noundef %28), !dbg !7910
  %29 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7911, !tbaa !1899
  store ptr %29, ptr %__pyx_r, align 8, !dbg !7912, !tbaa !1899
  br label %__pyx_L0, !dbg !7913

__pyx_L1_error:                                   ; preds = %if.then20, %if.then6
  tail call void @llvm.dbg.label(metadata !7846), !dbg !7914
  %30 = load ptr, ptr %__pyx_t_1, align 8, !dbg !7915, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %30), !dbg !7915
  %31 = load i32, ptr %__pyx_clineno, align 4, !dbg !7916, !tbaa !1984
  %32 = load i32, ptr %__pyx_lineno, align 4, !dbg !7917, !tbaa !1984
  %33 = load ptr, ptr %__pyx_filename, align 8, !dbg !7918, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.97, i32 noundef %31, i32 noundef %32, ptr noundef %33), !dbg !7919
  store ptr null, ptr %__pyx_r, align 8, !dbg !7920, !tbaa !1899
  br label %__pyx_L0, !dbg !7921

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end22
  tail call void @llvm.dbg.label(metadata !7847), !dbg !7922
  %34 = load ptr, ptr %__pyx_v_result, align 8, !dbg !7923, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %34), !dbg !7923
  %35 = load ptr, ptr %__pyx_r, align 8, !dbg !7924, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !7925
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !7925
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !7925
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !7925
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !7925
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !7925
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #11, !dbg !7925
  ret ptr %35, !dbg !7926
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA_add_to_epsilon_closure(ptr noundef %__pyx_v_state_set, ptr noundef %__pyx_v_state) #0 !dbg !7927 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_state_set.addr = alloca ptr, align 8
  %__pyx_v_state.addr = alloca ptr, align 8
  %__pyx_v_state_set_2 = alloca ptr, align 8
  %__pyx_v_state2 = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %__pyx_callargs = alloca [2 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %tmp202 = alloca ptr, align 8
  store ptr %__pyx_v_state_set, ptr %__pyx_v_state_set.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state_set.addr, metadata !7931, metadata !DIExpression()), !dbg !7966
  store ptr %__pyx_v_state, ptr %__pyx_v_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state.addr, metadata !7932, metadata !DIExpression()), !dbg !7967
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state_set_2) #11, !dbg !7968
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state_set_2, metadata !7933, metadata !DIExpression()), !dbg !7969
  store ptr null, ptr %__pyx_v_state_set_2, align 8, !dbg !7969, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state2) #11, !dbg !7970
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state2, metadata !7934, metadata !DIExpression()), !dbg !7971
  store ptr null, ptr %__pyx_v_state2, align 8, !dbg !7971, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !7972
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !7935, metadata !DIExpression()), !dbg !7973
  store ptr null, ptr %__pyx_r, align 8, !dbg !7973, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !7974
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !7936, metadata !DIExpression()), !dbg !7975
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !7975, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !7976
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !7937, metadata !DIExpression()), !dbg !7977
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #11, !dbg !7978
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !7938, metadata !DIExpression()), !dbg !7979
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !7980
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !7939, metadata !DIExpression()), !dbg !7981
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !7981, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !7982
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !7940, metadata !DIExpression()), !dbg !7983
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !7983, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !7984
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !7941, metadata !DIExpression()), !dbg !7985
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !7986
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !7942, metadata !DIExpression()), !dbg !7987
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !7988
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !7943, metadata !DIExpression()), !dbg !7989
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_9) #11, !dbg !7990
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !7944, metadata !DIExpression()), !dbg !7991
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !7992
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !7945, metadata !DIExpression()), !dbg !7993
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !7993, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !7994
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !7946, metadata !DIExpression()), !dbg !7995
  store ptr null, ptr %__pyx_filename, align 8, !dbg !7995, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !7996
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !7947, metadata !DIExpression()), !dbg !7997
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !7997, !tbaa !1984
  %0 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !7998, !tbaa !1899
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !7998
  %lnot = xor i1 %cmp, true, !dbg !7998
  %lnot1 = xor i1 %lnot, true, !dbg !7998
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7998
  %conv = sext i32 %lnot.ext to i64, !dbg !7998
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7998
  %tobool = icmp ne i64 %expval, 0, !dbg !7998
  br i1 %tobool, label %if.then, label %if.end, !dbg !8000

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !8001, !tbaa !1899
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %1, ptr noundef @.str.76, ptr noundef @.str.88), !dbg !8003
  %2 = load ptr, ptr @__pyx_f, align 16, !dbg !8004, !tbaa !1899
  store ptr %2, ptr %__pyx_filename, align 8, !dbg !8004, !tbaa !1899
  %3 = load ptr, ptr %__pyx_filename, align 8, !dbg !8004, !tbaa !1899
  store i32 86, ptr %__pyx_lineno, align 4, !dbg !8004, !tbaa !1984
  %4 = load i32, ptr %__pyx_lineno, align 4, !dbg !8004, !tbaa !1984
  store i32 4263, ptr %__pyx_clineno, align 4, !dbg !8004, !tbaa !1984
  %5 = load i32, ptr %__pyx_clineno, align 4, !dbg !8004, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8007

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !8008, !tbaa !1899
  %7 = load ptr, ptr %__pyx_v_state.addr, align 8, !dbg !8009, !tbaa !1899
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8010, !tbaa !1899
  %__pyx_int_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 90, !dbg !8010
  %9 = load ptr, ptr %__pyx_int_0, align 8, !dbg !8010, !tbaa !2843
  %call2 = call ptr @__Pyx_PyDict_GetItemDefault(ptr noundef %6, ptr noundef %7, ptr noundef %9), !dbg !8011
  store ptr %call2, ptr %__pyx_t_1, align 8, !dbg !8012, !tbaa !1899
  %10 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8013, !tbaa !1899
  %tobool3 = icmp ne ptr %10, null, !dbg !8013
  %lnot4 = xor i1 %tobool3, true, !dbg !8013
  %lnot6 = xor i1 %lnot4, true, !dbg !8013
  %lnot8 = xor i1 %lnot6, true, !dbg !8013
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !8013
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !8013
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !8013
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !8013
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8015

if.then13:                                        ; preds = %if.end
  %11 = load ptr, ptr @__pyx_f, align 16, !dbg !8016, !tbaa !1899
  store ptr %11, ptr %__pyx_filename, align 8, !dbg !8016, !tbaa !1899
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !8016, !tbaa !1899
  store i32 86, ptr %__pyx_lineno, align 4, !dbg !8016, !tbaa !1984
  %13 = load i32, ptr %__pyx_lineno, align 4, !dbg !8016, !tbaa !1984
  store i32 4265, ptr %__pyx_clineno, align 4, !dbg !8016, !tbaa !1984
  %14 = load i32, ptr %__pyx_clineno, align 4, !dbg !8016, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8019

if.end14:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8020, !tbaa !1899
  %call15 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %15), !dbg !8021
  store i32 %call15, ptr %__pyx_t_2, align 4, !dbg !8022, !tbaa !1984
  %16 = load i32, ptr %__pyx_t_2, align 4, !dbg !8023, !tbaa !1984
  %cmp16 = icmp slt i32 %16, 0, !dbg !8023
  %lnot18 = xor i1 %cmp16, true, !dbg !8023
  %lnot20 = xor i1 %lnot18, true, !dbg !8023
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !8023
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !8023
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0), !dbg !8023
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !8023
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !8025

if.then25:                                        ; preds = %if.end14
  %17 = load ptr, ptr @__pyx_f, align 16, !dbg !8026, !tbaa !1899
  store ptr %17, ptr %__pyx_filename, align 8, !dbg !8026, !tbaa !1899
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !8026, !tbaa !1899
  store i32 86, ptr %__pyx_lineno, align 4, !dbg !8026, !tbaa !1984
  %19 = load i32, ptr %__pyx_lineno, align 4, !dbg !8026, !tbaa !1984
  store i32 4267, ptr %__pyx_clineno, align 4, !dbg !8026, !tbaa !1984
  %20 = load i32, ptr %__pyx_clineno, align 4, !dbg !8026, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8029

if.end26:                                         ; preds = %if.end14
  %21 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8030, !tbaa !1899
  call void @Py_DECREF(ptr noundef %21), !dbg !8030
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8031, !tbaa !1899
  %22 = load i32, ptr %__pyx_t_2, align 4, !dbg !8032, !tbaa !1984
  %tobool27 = icmp ne i32 %22, 0, !dbg !8033
  %lnot28 = xor i1 %tobool27, true, !dbg !8033
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !8033
  store i32 %lnot.ext29, ptr %__pyx_t_3, align 4, !dbg !8034, !tbaa !1984
  %23 = load i32, ptr %__pyx_t_3, align 4, !dbg !8035, !tbaa !1984
  %tobool30 = icmp ne i32 %23, 0, !dbg !8035
  br i1 %tobool30, label %if.then31, label %if.end219, !dbg !8036

if.then31:                                        ; preds = %if.end26
  %24 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !8037, !tbaa !1899
  %cmp32 = icmp eq ptr %24, @_Py_NoneStruct, !dbg !8037
  %lnot34 = xor i1 %cmp32, true, !dbg !8037
  %lnot36 = xor i1 %lnot34, true, !dbg !8037
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !8037
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !8037
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0), !dbg !8037
  %tobool40 = icmp ne i64 %expval39, 0, !dbg !8037
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !8039

if.then41:                                        ; preds = %if.then31
  %25 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !8040, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %25, ptr noundef @.str.89), !dbg !8042
  %26 = load ptr, ptr @__pyx_f, align 16, !dbg !8043, !tbaa !1899
  store ptr %26, ptr %__pyx_filename, align 8, !dbg !8043, !tbaa !1899
  %27 = load ptr, ptr %__pyx_filename, align 8, !dbg !8043, !tbaa !1899
  store i32 87, ptr %__pyx_lineno, align 4, !dbg !8043, !tbaa !1984
  %28 = load i32, ptr %__pyx_lineno, align 4, !dbg !8043, !tbaa !1984
  store i32 4281, ptr %__pyx_clineno, align 4, !dbg !8043, !tbaa !1984
  %29 = load i32, ptr %__pyx_clineno, align 4, !dbg !8043, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8046

if.end42:                                         ; preds = %if.then31
  %30 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !8047, !tbaa !1899
  %31 = load ptr, ptr %__pyx_v_state.addr, align 8, !dbg !8047, !tbaa !1899
  %32 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8047, !tbaa !1899
  %__pyx_int_1 = getelementptr inbounds %struct.__pyx_mstate, ptr %32, i32 0, i32 91, !dbg !8047
  %33 = load ptr, ptr %__pyx_int_1, align 8, !dbg !8047, !tbaa !2854
  %call43 = call i32 @PyDict_SetItem(ptr noundef %30, ptr noundef %31, ptr noundef %33), !dbg !8047
  %cmp44 = icmp slt i32 %call43, 0, !dbg !8047
  %lnot46 = xor i1 %cmp44, true, !dbg !8047
  %lnot48 = xor i1 %lnot46, true, !dbg !8047
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !8047
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !8047
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 0), !dbg !8047
  %tobool52 = icmp ne i64 %expval51, 0, !dbg !8047
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !8049

if.then53:                                        ; preds = %if.end42
  %34 = load ptr, ptr @__pyx_f, align 16, !dbg !8050, !tbaa !1899
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !8050, !tbaa !1899
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !8050, !tbaa !1899
  store i32 87, ptr %__pyx_lineno, align 4, !dbg !8050, !tbaa !1984
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !8050, !tbaa !1984
  store i32 4283, ptr %__pyx_clineno, align 4, !dbg !8050, !tbaa !1984
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !8050, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8053

if.end54:                                         ; preds = %if.end42
  %38 = load ptr, ptr %__pyx_v_state.addr, align 8, !dbg !8054, !tbaa !1899
  %transitions = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Node, ptr %38, i32 0, i32 1, !dbg !8055
  %39 = load ptr, ptr %transitions, align 8, !dbg !8055, !tbaa !8056
  %40 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8057, !tbaa !1899
  %__pyx_n_s_get_epsilon = getelementptr inbounds %struct.__pyx_mstate, ptr %40, i32 0, i32 51, !dbg !8057
  %41 = load ptr, ptr %__pyx_n_s_get_epsilon, align 8, !dbg !8057, !tbaa !8058
  %call55 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %39, ptr noundef %41), !dbg !8059
  store ptr %call55, ptr %__pyx_t_4, align 8, !dbg !8060, !tbaa !1899
  %42 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8061, !tbaa !1899
  %tobool56 = icmp ne ptr %42, null, !dbg !8061
  %lnot57 = xor i1 %tobool56, true, !dbg !8061
  %lnot59 = xor i1 %lnot57, true, !dbg !8061
  %lnot61 = xor i1 %lnot59, true, !dbg !8061
  %lnot.ext62 = zext i1 %lnot61 to i32, !dbg !8061
  %conv63 = sext i32 %lnot.ext62 to i64, !dbg !8061
  %expval64 = call i64 @llvm.expect.i64(i64 %conv63, i64 0), !dbg !8061
  %tobool65 = icmp ne i64 %expval64, 0, !dbg !8061
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !8063

if.then66:                                        ; preds = %if.end54
  %43 = load ptr, ptr @__pyx_f, align 16, !dbg !8064, !tbaa !1899
  store ptr %43, ptr %__pyx_filename, align 8, !dbg !8064, !tbaa !1899
  %44 = load ptr, ptr %__pyx_filename, align 8, !dbg !8064, !tbaa !1899
  store i32 88, ptr %__pyx_lineno, align 4, !dbg !8064, !tbaa !1984
  %45 = load i32, ptr %__pyx_lineno, align 4, !dbg !8064, !tbaa !1984
  store i32 4292, ptr %__pyx_clineno, align 4, !dbg !8064, !tbaa !1984
  %46 = load i32, ptr %__pyx_clineno, align 4, !dbg !8064, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8067

if.end67:                                         ; preds = %if.end54
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !8068, !tbaa !1899
  store i32 0, ptr %__pyx_t_6, align 4, !dbg !8069, !tbaa !1984
  %47 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8070, !tbaa !1899
  %call68 = call i32 @Py_IS_TYPE(ptr noundef %47, ptr noundef @PyMethod_Type), !dbg !8070
  %tobool69 = icmp ne i32 %call68, 0, !dbg !8070
  %lnot70 = xor i1 %tobool69, true, !dbg !8070
  %lnot72 = xor i1 %lnot70, true, !dbg !8070
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !8070
  %conv74 = sext i32 %lnot.ext73 to i64, !dbg !8070
  %expval75 = call i64 @llvm.expect.i64(i64 %conv74, i64 1), !dbg !8070
  %tobool76 = icmp ne i64 %expval75, 0, !dbg !8070
  br i1 %tobool76, label %if.then77, label %if.end88, !dbg !8071

if.then77:                                        ; preds = %if.end67
  %48 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8072, !tbaa !1899
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %48, i32 0, i32 2, !dbg !8072
  %49 = load ptr, ptr %im_self, align 8, !dbg !8072, !tbaa !6934
  store ptr %49, ptr %__pyx_t_5, align 8, !dbg !8073, !tbaa !1899
  %50 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8074, !tbaa !1899
  %tobool78 = icmp ne ptr %50, null, !dbg !8074
  %lnot79 = xor i1 %tobool78, true, !dbg !8074
  %lnot81 = xor i1 %lnot79, true, !dbg !8074
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !8074
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !8074
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 1), !dbg !8074
  %tobool85 = icmp ne i64 %expval84, 0, !dbg !8074
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !8075

if.then86:                                        ; preds = %if.then77
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #11, !dbg !8076
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !7948, metadata !DIExpression()), !dbg !8077
  %51 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8078, !tbaa !1899
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %51, i32 0, i32 1, !dbg !8078
  %52 = load ptr, ptr %im_func, align 8, !dbg !8078, !tbaa !6942
  store ptr %52, ptr %function, align 8, !dbg !8077, !tbaa !1899
  %53 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8079, !tbaa !1899
  call void @Py_INCREF(ptr noundef %53), !dbg !8079
  %54 = load ptr, ptr %function, align 8, !dbg !8080, !tbaa !1899
  call void @Py_INCREF(ptr noundef %54), !dbg !8080
  br label %do.body, !dbg !8081

do.body:                                          ; preds = %if.then86
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !8082
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !7955, metadata !DIExpression()), !dbg !8082
  %55 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8082, !tbaa !1899
  store ptr %55, ptr %tmp, align 8, !dbg !8082, !tbaa !1899
  %56 = load ptr, ptr %function, align 8, !dbg !8082, !tbaa !1899
  store ptr %56, ptr %__pyx_t_4, align 8, !dbg !8082, !tbaa !1899
  %57 = load ptr, ptr %tmp, align 8, !dbg !8082, !tbaa !1899
  call void @Py_DECREF(ptr noundef %57), !dbg !8082
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !8081
  br label %do.cond, !dbg !8082

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !8082

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %__pyx_t_6, align 4, !dbg !8083, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #11, !dbg !8084
  br label %if.end87, !dbg !8085

if.end87:                                         ; preds = %do.end, %if.then77
  br label %if.end88, !dbg !8086

if.end88:                                         ; preds = %if.end87, %if.end67
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !8087
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !7957, metadata !DIExpression()), !dbg !8088
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !8089
  %58 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8090, !tbaa !1899
  store ptr %58, ptr %arrayinit.begin, align 8, !dbg !8089, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !8089
  store ptr null, ptr %arrayinit.element, align 8, !dbg !8089, !tbaa !1899
  %59 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8091, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !8091
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !8091
  %60 = load i32, ptr %__pyx_t_6, align 4, !dbg !8091, !tbaa !1984
  %idx.ext = sext i32 %60 to i64, !dbg !8091
  %idx.neg = sub i64 0, %idx.ext, !dbg !8091
  %add.ptr89 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !8091
  %61 = load i32, ptr %__pyx_t_6, align 4, !dbg !8091, !tbaa !1984
  %add = add i32 0, %61, !dbg !8091
  %conv90 = sext i32 %add to i64, !dbg !8091
  %call91 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %59, ptr noundef %add.ptr89, i64 noundef %conv90, ptr noundef null), !dbg !8091
  store ptr %call91, ptr %__pyx_t_1, align 8, !dbg !8092, !tbaa !1899
  %62 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8093, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %62), !dbg !8093
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !8094, !tbaa !1899
  %63 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8095, !tbaa !1899
  %tobool92 = icmp ne ptr %63, null, !dbg !8095
  %lnot93 = xor i1 %tobool92, true, !dbg !8095
  %lnot95 = xor i1 %lnot93, true, !dbg !8095
  %lnot97 = xor i1 %lnot95, true, !dbg !8095
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !8095
  %conv99 = sext i32 %lnot.ext98 to i64, !dbg !8095
  %expval100 = call i64 @llvm.expect.i64(i64 %conv99, i64 0), !dbg !8095
  %tobool101 = icmp ne i64 %expval100, 0, !dbg !8095
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !8097

if.then102:                                       ; preds = %if.end88
  %64 = load ptr, ptr @__pyx_f, align 16, !dbg !8098, !tbaa !1899
  store ptr %64, ptr %__pyx_filename, align 8, !dbg !8098, !tbaa !1899
  %65 = load ptr, ptr %__pyx_filename, align 8, !dbg !8098, !tbaa !1899
  store i32 88, ptr %__pyx_lineno, align 4, !dbg !8098, !tbaa !1984
  %66 = load i32, ptr %__pyx_lineno, align 4, !dbg !8098, !tbaa !1984
  store i32 4312, ptr %__pyx_clineno, align 4, !dbg !8098, !tbaa !1984
  %67 = load i32, ptr %__pyx_clineno, align 4, !dbg !8098, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8101

if.end103:                                        ; preds = %if.end88
  %68 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8102, !tbaa !1899
  call void @Py_DECREF(ptr noundef %68), !dbg !8102
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !8103, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8104
  br label %cleanup, !dbg !8104

cleanup:                                          ; preds = %if.then102, %if.end103
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !8104
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup220 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %69 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8105, !tbaa !1899
  %call104 = call i32 @Py_IS_TYPE(ptr noundef %69, ptr noundef @PyDict_Type), !dbg !8105
  %tobool105 = icmp ne i32 %call104, 0, !dbg !8105
  %lnot106 = xor i1 %tobool105, true, !dbg !8105
  %lnot108 = xor i1 %lnot106, true, !dbg !8105
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !8105
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !8105
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 1), !dbg !8105
  %tobool112 = icmp ne i64 %expval111, 0, !dbg !8105
  br i1 %tobool112, label %if.end119, label %lor.lhs.false, !dbg !8107

lor.lhs.false:                                    ; preds = %cleanup.cont
  %70 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8108, !tbaa !1899
  %cmp113 = icmp eq ptr %70, @_Py_NoneStruct, !dbg !8109
  br i1 %cmp113, label %if.end119, label %lor.lhs.false115, !dbg !8110

lor.lhs.false115:                                 ; preds = %lor.lhs.false
  %71 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8111, !tbaa !1899
  %call116 = call i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef @.str.79, ptr noundef %71), !dbg !8112
  %tobool117 = icmp ne i32 %call116, 0, !dbg !8112
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !8113

if.then118:                                       ; preds = %lor.lhs.false115
  %72 = load ptr, ptr @__pyx_f, align 16, !dbg !8114, !tbaa !1899
  store ptr %72, ptr %__pyx_filename, align 8, !dbg !8114, !tbaa !1899
  %73 = load ptr, ptr %__pyx_filename, align 8, !dbg !8114, !tbaa !1899
  store i32 88, ptr %__pyx_lineno, align 4, !dbg !8114, !tbaa !1984
  %74 = load i32, ptr %__pyx_lineno, align 4, !dbg !8114, !tbaa !1984
  store i32 4316, ptr %__pyx_clineno, align 4, !dbg !8114, !tbaa !1984
  %75 = load i32, ptr %__pyx_clineno, align 4, !dbg !8114, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8117

if.end119:                                        ; preds = %lor.lhs.false115, %lor.lhs.false, %cleanup.cont
  %76 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8118, !tbaa !1899
  store ptr %76, ptr %__pyx_v_state_set_2, align 8, !dbg !8119, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8120, !tbaa !1899
  %77 = load ptr, ptr %__pyx_v_state_set_2, align 8, !dbg !8121, !tbaa !1899
  %call120 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %77), !dbg !8122
  store i32 %call120, ptr %__pyx_t_3, align 4, !dbg !8123, !tbaa !1984
  %78 = load i32, ptr %__pyx_t_3, align 4, !dbg !8124, !tbaa !1984
  %cmp121 = icmp slt i32 %78, 0, !dbg !8124
  %lnot123 = xor i1 %cmp121, true, !dbg !8124
  %lnot125 = xor i1 %lnot123, true, !dbg !8124
  %lnot.ext126 = zext i1 %lnot125 to i32, !dbg !8124
  %conv127 = sext i32 %lnot.ext126 to i64, !dbg !8124
  %expval128 = call i64 @llvm.expect.i64(i64 %conv127, i64 0), !dbg !8124
  %tobool129 = icmp ne i64 %expval128, 0, !dbg !8124
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !8126

if.then130:                                       ; preds = %if.end119
  %79 = load ptr, ptr @__pyx_f, align 16, !dbg !8127, !tbaa !1899
  store ptr %79, ptr %__pyx_filename, align 8, !dbg !8127, !tbaa !1899
  %80 = load ptr, ptr %__pyx_filename, align 8, !dbg !8127, !tbaa !1899
  store i32 89, ptr %__pyx_lineno, align 4, !dbg !8127, !tbaa !1984
  %81 = load i32, ptr %__pyx_lineno, align 4, !dbg !8127, !tbaa !1984
  store i32 4327, ptr %__pyx_clineno, align 4, !dbg !8127, !tbaa !1984
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !8127, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8130

if.end131:                                        ; preds = %if.end119
  %83 = load i32, ptr %__pyx_t_3, align 4, !dbg !8131, !tbaa !1984
  %tobool132 = icmp ne i32 %83, 0, !dbg !8131
  br i1 %tobool132, label %if.then133, label %if.end218, !dbg !8132

if.then133:                                       ; preds = %if.end131
  store i64 0, ptr %__pyx_t_7, align 8, !dbg !8133, !tbaa !2597
  %84 = load ptr, ptr %__pyx_v_state_set_2, align 8, !dbg !8134, !tbaa !1899
  %cmp134 = icmp eq ptr %84, @_Py_NoneStruct, !dbg !8134
  %lnot136 = xor i1 %cmp134, true, !dbg !8134
  %lnot138 = xor i1 %lnot136, true, !dbg !8134
  %lnot.ext139 = zext i1 %lnot138 to i32, !dbg !8134
  %conv140 = sext i32 %lnot.ext139 to i64, !dbg !8134
  %expval141 = call i64 @llvm.expect.i64(i64 %conv140, i64 0), !dbg !8134
  %tobool142 = icmp ne i64 %expval141, 0, !dbg !8134
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !8136

if.then143:                                       ; preds = %if.then133
  %85 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !8137, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %85, ptr noundef @.str.78), !dbg !8139
  %86 = load ptr, ptr @__pyx_f, align 16, !dbg !8140, !tbaa !1899
  store ptr %86, ptr %__pyx_filename, align 8, !dbg !8140, !tbaa !1899
  %87 = load ptr, ptr %__pyx_filename, align 8, !dbg !8140, !tbaa !1899
  store i32 90, ptr %__pyx_lineno, align 4, !dbg !8140, !tbaa !1984
  %88 = load i32, ptr %__pyx_lineno, align 4, !dbg !8140, !tbaa !1984
  store i32 4340, ptr %__pyx_clineno, align 4, !dbg !8140, !tbaa !1984
  %89 = load i32, ptr %__pyx_clineno, align 4, !dbg !8140, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8143

if.end144:                                        ; preds = %if.then133
  %90 = load ptr, ptr %__pyx_v_state_set_2, align 8, !dbg !8144, !tbaa !1899
  %call145 = call ptr @__Pyx_dict_iterator(ptr noundef %90, i32 noundef 1, ptr noundef null, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_6), !dbg !8145
  store ptr %call145, ptr %__pyx_t_4, align 8, !dbg !8146, !tbaa !1899
  %91 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8147, !tbaa !1899
  %tobool146 = icmp ne ptr %91, null, !dbg !8147
  %lnot147 = xor i1 %tobool146, true, !dbg !8147
  %lnot149 = xor i1 %lnot147, true, !dbg !8147
  %lnot151 = xor i1 %lnot149, true, !dbg !8147
  %lnot.ext152 = zext i1 %lnot151 to i32, !dbg !8147
  %conv153 = sext i32 %lnot.ext152 to i64, !dbg !8147
  %expval154 = call i64 @llvm.expect.i64(i64 %conv153, i64 0), !dbg !8147
  %tobool155 = icmp ne i64 %expval154, 0, !dbg !8147
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !8149

if.then156:                                       ; preds = %if.end144
  %92 = load ptr, ptr @__pyx_f, align 16, !dbg !8150, !tbaa !1899
  store ptr %92, ptr %__pyx_filename, align 8, !dbg !8150, !tbaa !1899
  %93 = load ptr, ptr %__pyx_filename, align 8, !dbg !8150, !tbaa !1899
  store i32 90, ptr %__pyx_lineno, align 4, !dbg !8150, !tbaa !1984
  %94 = load i32, ptr %__pyx_lineno, align 4, !dbg !8150, !tbaa !1984
  store i32 4342, ptr %__pyx_clineno, align 4, !dbg !8150, !tbaa !1984
  %95 = load i32, ptr %__pyx_clineno, align 4, !dbg !8150, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8153

if.end157:                                        ; preds = %if.end144
  %96 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8154, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %96), !dbg !8154
  %97 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8155, !tbaa !1899
  store ptr %97, ptr %__pyx_t_1, align 8, !dbg !8156, !tbaa !1899
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !8157, !tbaa !1899
  br label %while.cond, !dbg !8158

while.cond:                                       ; preds = %if.end217, %if.end157
  br label %while.body, !dbg !8158

while.body:                                       ; preds = %while.cond
  %98 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8159, !tbaa !1899
  %99 = load i64, ptr %__pyx_t_8, align 8, !dbg !8160, !tbaa !2597
  %100 = load i32, ptr %__pyx_t_6, align 4, !dbg !8161, !tbaa !1984
  %call158 = call i32 @__Pyx_dict_iter_next(ptr noundef %98, i64 noundef %99, ptr noundef %__pyx_t_7, ptr noundef %__pyx_t_4, ptr noundef null, ptr noundef null, i32 noundef %100), !dbg !8162
  store i32 %call158, ptr %__pyx_t_9, align 4, !dbg !8163, !tbaa !1984
  %101 = load i32, ptr %__pyx_t_9, align 4, !dbg !8164, !tbaa !1984
  %cmp159 = icmp eq i32 %101, 0, !dbg !8164
  %lnot161 = xor i1 %cmp159, true, !dbg !8164
  %lnot163 = xor i1 %lnot161, true, !dbg !8164
  %lnot.ext164 = zext i1 %lnot163 to i32, !dbg !8164
  %conv165 = sext i32 %lnot.ext164 to i64, !dbg !8164
  %expval166 = call i64 @llvm.expect.i64(i64 %conv165, i64 0), !dbg !8164
  %tobool167 = icmp ne i64 %expval166, 0, !dbg !8164
  br i1 %tobool167, label %if.then168, label %if.end169, !dbg !8166

if.then168:                                       ; preds = %while.body
  br label %while.end, !dbg !8167

if.end169:                                        ; preds = %while.body
  %102 = load i32, ptr %__pyx_t_9, align 4, !dbg !8168, !tbaa !1984
  %cmp170 = icmp eq i32 %102, -1, !dbg !8168
  %lnot172 = xor i1 %cmp170, true, !dbg !8168
  %lnot174 = xor i1 %lnot172, true, !dbg !8168
  %lnot.ext175 = zext i1 %lnot174 to i32, !dbg !8168
  %conv176 = sext i32 %lnot.ext175 to i64, !dbg !8168
  %expval177 = call i64 @llvm.expect.i64(i64 %conv176, i64 0), !dbg !8168
  %tobool178 = icmp ne i64 %expval177, 0, !dbg !8168
  br i1 %tobool178, label %if.then179, label %if.end180, !dbg !8170

if.then179:                                       ; preds = %if.end169
  %103 = load ptr, ptr @__pyx_f, align 16, !dbg !8171, !tbaa !1899
  store ptr %103, ptr %__pyx_filename, align 8, !dbg !8171, !tbaa !1899
  %104 = load ptr, ptr %__pyx_filename, align 8, !dbg !8171, !tbaa !1899
  store i32 90, ptr %__pyx_lineno, align 4, !dbg !8171, !tbaa !1984
  %105 = load i32, ptr %__pyx_lineno, align 4, !dbg !8171, !tbaa !1984
  store i32 4350, ptr %__pyx_clineno, align 4, !dbg !8171, !tbaa !1984
  %106 = load i32, ptr %__pyx_clineno, align 4, !dbg !8171, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8174

if.end180:                                        ; preds = %if.end169
  %107 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8175, !tbaa !1899
  %cmp181 = icmp eq ptr %107, @_Py_NoneStruct, !dbg !8175
  br i1 %cmp181, label %lor.end, label %lor.rhs, !dbg !8175

lor.rhs:                                          ; preds = %if.end180
  %108 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8175, !tbaa !1899
  %109 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8175, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Node = getelementptr inbounds %struct.__pyx_mstate, ptr %109, i32 0, i32 16, !dbg !8175
  %110 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Node, align 8, !dbg !8175, !tbaa !3556
  %call183 = call i32 @__Pyx_TypeTest(ptr noundef %108, ptr noundef %110), !dbg !8175
  %tobool184 = icmp ne i32 %call183, 0, !dbg !8175
  %lnot185 = xor i1 %tobool184, true, !dbg !8175
  %lnot187 = xor i1 %lnot185, true, !dbg !8175
  %lnot.ext188 = zext i1 %lnot187 to i32, !dbg !8175
  %conv189 = sext i32 %lnot.ext188 to i64, !dbg !8175
  %expval190 = call i64 @llvm.expect.i64(i64 %conv189, i64 1), !dbg !8175
  %tobool191 = icmp ne i64 %expval190, 0, !dbg !8175
  br label %lor.end, !dbg !8175

lor.end:                                          ; preds = %lor.rhs, %if.end180
  %111 = phi i1 [ true, %if.end180 ], [ %tobool191, %lor.rhs ]
  %lnot192 = xor i1 %111, true, !dbg !8175
  %lnot194 = xor i1 %lnot192, true, !dbg !8175
  %lnot.ext195 = zext i1 %lnot194 to i32, !dbg !8175
  %conv196 = sext i32 %lnot.ext195 to i64, !dbg !8175
  %expval197 = call i64 @llvm.expect.i64(i64 %conv196, i64 1), !dbg !8175
  %tobool198 = icmp ne i64 %expval197, 0, !dbg !8175
  br i1 %tobool198, label %if.end200, label %if.then199, !dbg !8177

if.then199:                                       ; preds = %lor.end
  %112 = load ptr, ptr @__pyx_f, align 16, !dbg !8178, !tbaa !1899
  store ptr %112, ptr %__pyx_filename, align 8, !dbg !8178, !tbaa !1899
  %113 = load ptr, ptr %__pyx_filename, align 8, !dbg !8178, !tbaa !1899
  store i32 90, ptr %__pyx_lineno, align 4, !dbg !8178, !tbaa !1984
  %114 = load i32, ptr %__pyx_lineno, align 4, !dbg !8178, !tbaa !1984
  store i32 4352, ptr %__pyx_clineno, align 4, !dbg !8178, !tbaa !1984
  %115 = load i32, ptr %__pyx_clineno, align 4, !dbg !8178, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8181

if.end200:                                        ; preds = %lor.end
  br label %do.body201, !dbg !8182

do.body201:                                       ; preds = %if.end200
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp202) #11, !dbg !8183
  tail call void @llvm.dbg.declare(metadata ptr %tmp202, metadata !7959, metadata !DIExpression()), !dbg !8183
  %116 = load ptr, ptr %__pyx_v_state2, align 8, !dbg !8183, !tbaa !1899
  store ptr %116, ptr %tmp202, align 8, !dbg !8183, !tbaa !1899
  %117 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8183, !tbaa !1899
  store ptr %117, ptr %__pyx_v_state2, align 8, !dbg !8183, !tbaa !1899
  %118 = load ptr, ptr %tmp202, align 8, !dbg !8183, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %118), !dbg !8183
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp202) #11, !dbg !8182
  br label %do.cond203, !dbg !8183

do.cond203:                                       ; preds = %do.body201
  br label %do.end204, !dbg !8183

do.end204:                                        ; preds = %do.cond203
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !8184, !tbaa !1899
  %119 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !8185, !tbaa !1899
  %120 = load ptr, ptr %__pyx_v_state2, align 8, !dbg !8186, !tbaa !1899
  %call205 = call ptr @__pyx_f_6Cython_4Plex_3DFA_add_to_epsilon_closure(ptr noundef %119, ptr noundef %120), !dbg !8187
  store ptr %call205, ptr %__pyx_t_4, align 8, !dbg !8188, !tbaa !1899
  %121 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8189, !tbaa !1899
  %tobool206 = icmp ne ptr %121, null, !dbg !8189
  %lnot207 = xor i1 %tobool206, true, !dbg !8189
  %lnot209 = xor i1 %lnot207, true, !dbg !8189
  %lnot211 = xor i1 %lnot209, true, !dbg !8189
  %lnot.ext212 = zext i1 %lnot211 to i32, !dbg !8189
  %conv213 = sext i32 %lnot.ext212 to i64, !dbg !8189
  %expval214 = call i64 @llvm.expect.i64(i64 %conv213, i64 0), !dbg !8189
  %tobool215 = icmp ne i64 %expval214, 0, !dbg !8189
  br i1 %tobool215, label %if.then216, label %if.end217, !dbg !8191

if.then216:                                       ; preds = %do.end204
  %122 = load ptr, ptr @__pyx_f, align 16, !dbg !8192, !tbaa !1899
  store ptr %122, ptr %__pyx_filename, align 8, !dbg !8192, !tbaa !1899
  %123 = load ptr, ptr %__pyx_filename, align 8, !dbg !8192, !tbaa !1899
  store i32 91, ptr %__pyx_lineno, align 4, !dbg !8192, !tbaa !1984
  %124 = load i32, ptr %__pyx_lineno, align 4, !dbg !8192, !tbaa !1984
  store i32 4363, ptr %__pyx_clineno, align 4, !dbg !8192, !tbaa !1984
  %125 = load i32, ptr %__pyx_clineno, align 4, !dbg !8192, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8195

if.end217:                                        ; preds = %do.end204
  %126 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8196, !tbaa !1899
  call void @Py_DECREF(ptr noundef %126), !dbg !8196
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !8197, !tbaa !1899
  br label %while.cond, !dbg !8158, !llvm.loop !8198

while.end:                                        ; preds = %if.then168
  %127 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8200, !tbaa !1899
  call void @Py_DECREF(ptr noundef %127), !dbg !8200
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8201, !tbaa !1899
  br label %if.end218, !dbg !8202

if.end218:                                        ; preds = %while.end, %if.end131
  br label %if.end219, !dbg !8203

if.end219:                                        ; preds = %if.end218, %if.end26
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !8204, !tbaa !1899
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !8205
  br label %__pyx_L0, !dbg !8206

__pyx_L1_error:                                   ; preds = %cleanup, %if.then216, %if.then199, %if.then179, %if.then156, %if.then143, %if.then130, %if.then118, %if.then66, %if.then53, %if.then41, %if.then25, %if.then13, %if.then
  tail call void @llvm.dbg.label(metadata !7964), !dbg !8207
  %128 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8208, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %128), !dbg !8208
  %129 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8209, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %129), !dbg !8209
  %130 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8210, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %130), !dbg !8210
  %131 = load i32, ptr %__pyx_clineno, align 4, !dbg !8211, !tbaa !1984
  %132 = load i32, ptr %__pyx_lineno, align 4, !dbg !8212, !tbaa !1984
  %133 = load ptr, ptr %__pyx_filename, align 8, !dbg !8213, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.98, i32 noundef %131, i32 noundef %132, ptr noundef %133), !dbg !8214
  store ptr null, ptr %__pyx_r, align 8, !dbg !8215, !tbaa !1899
  br label %__pyx_L0, !dbg !8216

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end219
  tail call void @llvm.dbg.label(metadata !7965), !dbg !8217
  %134 = load ptr, ptr %__pyx_v_state_set_2, align 8, !dbg !8218, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %134), !dbg !8218
  %135 = load ptr, ptr %__pyx_v_state2, align 8, !dbg !8219, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %135), !dbg !8219
  %136 = load ptr, ptr %__pyx_r, align 8, !dbg !8220, !tbaa !1899
  store ptr %136, ptr %retval, align 8, !dbg !8221
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup220, !dbg !8221

cleanup220:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_9) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state2) #11, !dbg !8222
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state_set_2) #11, !dbg !8222
  %137 = load ptr, ptr %retval, align 8, !dbg !8222
  ret ptr %137, !dbg !8222
}

declare !dbg !8223 i32 @PyModule_AddObject(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !8225 ptr @PyCapsule_New(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallNoArg(ptr noundef %func) #3 !dbg !8230 {
entry:
  %func.addr = alloca ptr, align 8
  %arg = alloca [2 x ptr], align 16
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !8232, metadata !DIExpression()), !dbg !8234
  call void @llvm.lifetime.start.p0(i64 16, ptr %arg) #11, !dbg !8235
  tail call void @llvm.dbg.declare(metadata ptr %arg, metadata !8233, metadata !DIExpression()), !dbg !8236
  call void @llvm.memset.p0.i64(ptr align 16 %arg, i8 0, i64 16, i1 false), !dbg !8236
  %0 = load ptr, ptr %func.addr, align 8, !dbg !8237, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %arg, i64 0, i64 0, !dbg !8237
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !8237
  %call = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %0, ptr noundef %add.ptr, i64 noundef -9223372036854775808, ptr noundef null), !dbg !8237
  call void @llvm.lifetime.end.p0(i64 16, ptr %arg) #11, !dbg !8238
  ret ptr %call, !dbg !8239
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallOneArg(ptr noundef %func, ptr noundef %arg) #3 !dbg !8240 {
entry:
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %args = alloca [2 x ptr], align 16
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !8242, metadata !DIExpression()), !dbg !8245
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !8243, metadata !DIExpression()), !dbg !8246
  call void @llvm.lifetime.start.p0(i64 16, ptr %args) #11, !dbg !8247
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !8244, metadata !DIExpression()), !dbg !8248
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %args, i64 0, i64 0, !dbg !8249
  store ptr null, ptr %arrayinit.begin, align 8, !dbg !8249, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !8249
  %0 = load ptr, ptr %arg.addr, align 8, !dbg !8250, !tbaa !1899
  store ptr %0, ptr %arrayinit.element, align 8, !dbg !8249, !tbaa !1899
  %1 = load ptr, ptr %func.addr, align 8, !dbg !8251, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %args, i64 0, i64 0, !dbg !8251
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !8251
  %call = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %1, ptr noundef %add.ptr, i64 noundef -9223372036854775807, ptr noundef null), !dbg !8251
  call void @llvm.lifetime.end.p0(i64 16, ptr %args) #11, !dbg !8252
  ret ptr %call, !dbg !8253
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_dict_iterator(ptr noundef %iterable, i32 noundef %is_dict, ptr noundef %method_name, ptr noundef %p_orig_length, ptr noundef %p_source_is_dict) #3 !dbg !8254 {
entry:
  %retval = alloca ptr, align 8
  %iterable.addr = alloca ptr, align 8
  %is_dict.addr = alloca i32, align 4
  %method_name.addr = alloca ptr, align 8
  %p_orig_length.addr = alloca ptr, align 8
  %p_source_is_dict.addr = alloca ptr, align 8
  %iter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterable, ptr %iterable.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %iterable.addr, metadata !8258, metadata !DIExpression()), !dbg !8266
  store i32 %is_dict, ptr %is_dict.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %is_dict.addr, metadata !8259, metadata !DIExpression()), !dbg !8267
  store ptr %method_name, ptr %method_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %method_name.addr, metadata !8260, metadata !DIExpression()), !dbg !8268
  store ptr %p_orig_length, ptr %p_orig_length.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %p_orig_length.addr, metadata !8261, metadata !DIExpression()), !dbg !8269
  store ptr %p_source_is_dict, ptr %p_source_is_dict.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %p_source_is_dict.addr, metadata !8262, metadata !DIExpression()), !dbg !8270
  %0 = load i32, ptr %is_dict.addr, align 4, !dbg !8271, !tbaa !1984
  %tobool = icmp ne i32 %0, 0, !dbg !8271
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !8272

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %iterable.addr, align 8, !dbg !8273, !tbaa !1899
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyDict_Type), !dbg !8273
  %tobool1 = icmp ne i32 %call, 0, !dbg !8273
  %lnot = xor i1 %tobool1, true, !dbg !8273
  %lnot2 = xor i1 %lnot, true, !dbg !8273
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8273
  %conv = sext i32 %lnot.ext to i64, !dbg !8273
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8273
  %tobool3 = icmp ne i64 %expval, 0, !dbg !8272
  br label %lor.end, !dbg !8272

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32, !dbg !8272
  store i32 %lor.ext, ptr %is_dict.addr, align 4, !dbg !8274, !tbaa !1984
  %3 = load i32, ptr %is_dict.addr, align 4, !dbg !8275, !tbaa !1984
  %4 = load ptr, ptr %p_source_is_dict.addr, align 8, !dbg !8276, !tbaa !1899
  store i32 %3, ptr %4, align 4, !dbg !8277, !tbaa !1984
  %5 = load i32, ptr %is_dict.addr, align 4, !dbg !8278, !tbaa !1984
  %tobool4 = icmp ne i32 %5, 0, !dbg !8278
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8280

if.then:                                          ; preds = %lor.end
  %6 = load ptr, ptr %iterable.addr, align 8, !dbg !8281, !tbaa !1899
  %call5 = call i64 @PyDict_Size(ptr noundef %6), !dbg !8283
  %7 = load ptr, ptr %p_orig_length.addr, align 8, !dbg !8284, !tbaa !1899
  store i64 %call5, ptr %7, align 8, !dbg !8285, !tbaa !2597
  %8 = load ptr, ptr %iterable.addr, align 8, !dbg !8286, !tbaa !1899
  call void @Py_INCREF(ptr noundef %8), !dbg !8286
  %9 = load ptr, ptr %iterable.addr, align 8, !dbg !8287, !tbaa !1899
  store ptr %9, ptr %retval, align 8, !dbg !8288
  br label %return, !dbg !8288

if.end:                                           ; preds = %lor.end
  %10 = load ptr, ptr %p_orig_length.addr, align 8, !dbg !8289, !tbaa !1899
  store i64 0, ptr %10, align 8, !dbg !8290, !tbaa !2597
  %11 = load ptr, ptr %method_name.addr, align 8, !dbg !8291, !tbaa !1899
  %tobool6 = icmp ne ptr %11, null, !dbg !8291
  br i1 %tobool6, label %if.then7, label %if.end19, !dbg !8292

if.then7:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %iter) #11, !dbg !8293
  tail call void @llvm.dbg.declare(metadata ptr %iter, metadata !8263, metadata !DIExpression()), !dbg !8294
  %12 = load ptr, ptr %iterable.addr, align 8, !dbg !8295, !tbaa !1899
  %13 = load ptr, ptr %method_name.addr, align 8, !dbg !8296, !tbaa !1899
  %call8 = call ptr @__Pyx_PyObject_CallMethod0(ptr noundef %12, ptr noundef %13), !dbg !8297
  store ptr %call8, ptr %iterable.addr, align 8, !dbg !8298, !tbaa !1899
  %14 = load ptr, ptr %iterable.addr, align 8, !dbg !8299, !tbaa !1899
  %tobool9 = icmp ne ptr %14, null, !dbg !8299
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !8301

if.then10:                                        ; preds = %if.then7
  store ptr null, ptr %retval, align 8, !dbg !8302
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8302

if.end11:                                         ; preds = %if.then7
  %15 = load ptr, ptr %iterable.addr, align 8, !dbg !8303, !tbaa !1899
  %call12 = call i32 @Py_IS_TYPE(ptr noundef %15, ptr noundef @PyTuple_Type), !dbg !8303
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8303
  br i1 %tobool13, label %if.then16, label %lor.lhs.false, !dbg !8305

lor.lhs.false:                                    ; preds = %if.end11
  %16 = load ptr, ptr %iterable.addr, align 8, !dbg !8306, !tbaa !1899
  %call14 = call i32 @Py_IS_TYPE(ptr noundef %16, ptr noundef @PyList_Type), !dbg !8306
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8306
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8307

if.then16:                                        ; preds = %lor.lhs.false, %if.end11
  %17 = load ptr, ptr %iterable.addr, align 8, !dbg !8308, !tbaa !1899
  store ptr %17, ptr %retval, align 8, !dbg !8309
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8309

if.end17:                                         ; preds = %lor.lhs.false
  %18 = load ptr, ptr %iterable.addr, align 8, !dbg !8310, !tbaa !1899
  %call18 = call ptr @PyObject_GetIter(ptr noundef %18), !dbg !8311
  store ptr %call18, ptr %iter, align 8, !dbg !8312, !tbaa !1899
  %19 = load ptr, ptr %iterable.addr, align 8, !dbg !8313, !tbaa !1899
  call void @Py_DECREF(ptr noundef %19), !dbg !8313
  %20 = load ptr, ptr %iter, align 8, !dbg !8314, !tbaa !1899
  store ptr %20, ptr %retval, align 8, !dbg !8315
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8315

cleanup:                                          ; preds = %if.end17, %if.then16, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %iter) #11, !dbg !8316
  br label %return

if.end19:                                         ; preds = %if.end
  %21 = load ptr, ptr %iterable.addr, align 8, !dbg !8317, !tbaa !1899
  %call20 = call ptr @PyObject_GetIter(ptr noundef %21), !dbg !8318
  store ptr %call20, ptr %retval, align 8, !dbg !8319
  br label %return, !dbg !8319

return:                                           ; preds = %if.end19, %cleanup, %if.then
  %22 = load ptr, ptr %retval, align 8, !dbg !8320
  ret ptr %22, !dbg !8320
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_dict_iter_next(ptr noundef %iter_obj, i64 noundef %orig_length, ptr noundef %ppos, ptr noundef %pkey, ptr noundef %pvalue, ptr noundef %pitem, i32 noundef %source_is_dict) #3 !dbg !8321 {
entry:
  %retval = alloca i32, align 4
  %iter_obj.addr = alloca ptr, align 8
  %orig_length.addr = alloca i64, align 8
  %ppos.addr = alloca ptr, align 8
  %pkey.addr = alloca ptr, align 8
  %pvalue.addr = alloca ptr, align 8
  %pitem.addr = alloca ptr, align 8
  %source_is_dict.addr = alloca i32, align 4
  %next_item = alloca ptr, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tuple = alloca ptr, align 8
  %pos = alloca i64, align 8
  %pos64 = alloca i64, align 8
  store ptr %iter_obj, ptr %iter_obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %iter_obj.addr, metadata !8325, metadata !DIExpression()), !dbg !8346
  store i64 %orig_length, ptr %orig_length.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %orig_length.addr, metadata !8326, metadata !DIExpression()), !dbg !8347
  store ptr %ppos, ptr %ppos.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %ppos.addr, metadata !8327, metadata !DIExpression()), !dbg !8348
  store ptr %pkey, ptr %pkey.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %pkey.addr, metadata !8328, metadata !DIExpression()), !dbg !8349
  store ptr %pvalue, ptr %pvalue.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %pvalue.addr, metadata !8329, metadata !DIExpression()), !dbg !8350
  store ptr %pitem, ptr %pitem.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %pitem.addr, metadata !8330, metadata !DIExpression()), !dbg !8351
  store i32 %source_is_dict, ptr %source_is_dict.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %source_is_dict.addr, metadata !8331, metadata !DIExpression()), !dbg !8352
  call void @llvm.lifetime.start.p0(i64 8, ptr %next_item) #11, !dbg !8353
  tail call void @llvm.dbg.declare(metadata ptr %next_item, metadata !8332, metadata !DIExpression()), !dbg !8354
  %0 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8355, !tbaa !1984
  %tobool = icmp ne i32 %0, 0, !dbg !8355
  br i1 %tobool, label %if.then, label %if.else41, !dbg !8356

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #11, !dbg !8357
  tail call void @llvm.dbg.declare(metadata ptr %key, metadata !8333, metadata !DIExpression()), !dbg !8358
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !8357
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !8336, metadata !DIExpression()), !dbg !8359
  %1 = load i64, ptr %orig_length.addr, align 8, !dbg !8360, !tbaa !2597
  %2 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8360, !tbaa !1899
  %call = call i64 @PyDict_Size(ptr noundef %2), !dbg !8360
  %cmp = icmp ne i64 %1, %call, !dbg !8360
  %lnot = xor i1 %cmp, true, !dbg !8360
  %lnot1 = xor i1 %lnot, true, !dbg !8360
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8360
  %conv = sext i32 %lnot.ext to i64, !dbg !8360
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8360
  %tobool2 = icmp ne i64 %expval, 0, !dbg !8360
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8362

if.then3:                                         ; preds = %if.then
  %3 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !8363, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.82), !dbg !8365
  store i32 -1, ptr %retval, align 4, !dbg !8366
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39, !dbg !8366

if.end:                                           ; preds = %if.then
  %4 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8367, !tbaa !1899
  %5 = load ptr, ptr %ppos.addr, align 8, !dbg !8367, !tbaa !1899
  %call4 = call i32 @PyDict_Next(ptr noundef %4, ptr noundef %5, ptr noundef %key, ptr noundef %value), !dbg !8367
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8367
  %lnot6 = xor i1 %tobool5, true, !dbg !8367
  %lnot8 = xor i1 %lnot6, true, !dbg !8367
  %lnot10 = xor i1 %lnot8, true, !dbg !8367
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !8367
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !8367
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !8367
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !8367
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8369

if.then15:                                        ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !8370
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39, !dbg !8370

if.end16:                                         ; preds = %if.end
  %6 = load ptr, ptr %pitem.addr, align 8, !dbg !8372, !tbaa !1899
  %tobool17 = icmp ne ptr %6, null, !dbg !8372
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !8373

if.then18:                                        ; preds = %if.end16
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #11, !dbg !8374
  tail call void @llvm.dbg.declare(metadata ptr %tuple, metadata !8337, metadata !DIExpression()), !dbg !8375
  %call19 = call ptr @PyTuple_New(i64 noundef 2), !dbg !8376
  store ptr %call19, ptr %tuple, align 8, !dbg !8375, !tbaa !1899
  %7 = load ptr, ptr %tuple, align 8, !dbg !8377, !tbaa !1899
  %tobool20 = icmp ne ptr %7, null, !dbg !8377
  %lnot21 = xor i1 %tobool20, true, !dbg !8377
  %lnot23 = xor i1 %lnot21, true, !dbg !8377
  %lnot25 = xor i1 %lnot23, true, !dbg !8377
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !8377
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !8377
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0), !dbg !8377
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !8377
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !8379

if.then30:                                        ; preds = %if.then18
  store i32 -1, ptr %retval, align 4, !dbg !8380
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8380

if.end31:                                         ; preds = %if.then18
  %8 = load ptr, ptr %key, align 8, !dbg !8382, !tbaa !1899
  call void @Py_INCREF(ptr noundef %8), !dbg !8382
  %9 = load ptr, ptr %value, align 8, !dbg !8383, !tbaa !1899
  call void @Py_INCREF(ptr noundef %9), !dbg !8383
  %10 = load ptr, ptr %tuple, align 8, !dbg !8384, !tbaa !1899
  %11 = load ptr, ptr %key, align 8, !dbg !8384, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %10, i64 noundef 0, ptr noundef %11), !dbg !8384
  %12 = load ptr, ptr %tuple, align 8, !dbg !8385, !tbaa !1899
  %13 = load ptr, ptr %value, align 8, !dbg !8385, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %12, i64 noundef 1, ptr noundef %13), !dbg !8385
  %14 = load ptr, ptr %tuple, align 8, !dbg !8386, !tbaa !1899
  %15 = load ptr, ptr %pitem.addr, align 8, !dbg !8387, !tbaa !1899
  store ptr %14, ptr %15, align 8, !dbg !8388, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8389
  br label %cleanup, !dbg !8389

cleanup:                                          ; preds = %if.end31, %if.then30
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #11, !dbg !8389
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup39 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end38, !dbg !8390

if.else:                                          ; preds = %if.end16
  %16 = load ptr, ptr %pkey.addr, align 8, !dbg !8391, !tbaa !1899
  %tobool32 = icmp ne ptr %16, null, !dbg !8391
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8394

if.then33:                                        ; preds = %if.else
  %17 = load ptr, ptr %key, align 8, !dbg !8395, !tbaa !1899
  call void @Py_INCREF(ptr noundef %17), !dbg !8395
  %18 = load ptr, ptr %key, align 8, !dbg !8397, !tbaa !1899
  %19 = load ptr, ptr %pkey.addr, align 8, !dbg !8398, !tbaa !1899
  store ptr %18, ptr %19, align 8, !dbg !8399, !tbaa !1899
  br label %if.end34, !dbg !8400

if.end34:                                         ; preds = %if.then33, %if.else
  %20 = load ptr, ptr %pvalue.addr, align 8, !dbg !8401, !tbaa !1899
  %tobool35 = icmp ne ptr %20, null, !dbg !8401
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !8403

if.then36:                                        ; preds = %if.end34
  %21 = load ptr, ptr %value, align 8, !dbg !8404, !tbaa !1899
  call void @Py_INCREF(ptr noundef %21), !dbg !8404
  %22 = load ptr, ptr %value, align 8, !dbg !8406, !tbaa !1899
  %23 = load ptr, ptr %pvalue.addr, align 8, !dbg !8407, !tbaa !1899
  store ptr %22, ptr %23, align 8, !dbg !8408, !tbaa !1899
  br label %if.end37, !dbg !8409

if.end37:                                         ; preds = %if.then36, %if.end34
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %cleanup.cont
  store i32 1, ptr %retval, align 4, !dbg !8410
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39, !dbg !8410

cleanup39:                                        ; preds = %if.end38, %cleanup, %if.then15, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !8411
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #11, !dbg !8411
  br label %cleanup146

if.else41:                                        ; preds = %entry
  %24 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8412, !tbaa !1899
  %call42 = call i32 @Py_IS_TYPE(ptr noundef %24, ptr noundef @PyTuple_Type), !dbg !8412
  %tobool43 = icmp ne i32 %call42, 0, !dbg !8412
  br i1 %tobool43, label %if.then44, label %if.else60, !dbg !8413

if.then44:                                        ; preds = %if.else41
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #11, !dbg !8414
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !8340, metadata !DIExpression()), !dbg !8415
  %25 = load ptr, ptr %ppos.addr, align 8, !dbg !8416, !tbaa !1899
  %26 = load i64, ptr %25, align 8, !dbg !8417, !tbaa !2597
  store i64 %26, ptr %pos, align 8, !dbg !8415, !tbaa !2597
  %27 = load i64, ptr %pos, align 8, !dbg !8418, !tbaa !2597
  %28 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8418, !tbaa !1899
  %call45 = call i64 @PyTuple_GET_SIZE(ptr noundef %28), !dbg !8418
  %cmp46 = icmp sge i64 %27, %call45, !dbg !8418
  %lnot48 = xor i1 %cmp46, true, !dbg !8418
  %lnot50 = xor i1 %lnot48, true, !dbg !8418
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !8418
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !8418
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !8418
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !8418
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !8420

if.then55:                                        ; preds = %if.then44
  store i32 0, ptr %retval, align 4, !dbg !8421
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup57, !dbg !8421

if.end56:                                         ; preds = %if.then44
  %29 = load i64, ptr %pos, align 8, !dbg !8422, !tbaa !2597
  %add = add i64 %29, 1, !dbg !8423
  %30 = load ptr, ptr %ppos.addr, align 8, !dbg !8424, !tbaa !1899
  store i64 %add, ptr %30, align 8, !dbg !8425, !tbaa !2597
  %31 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8426, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %31, i32 0, i32 1, !dbg !8426
  %32 = load i64, ptr %pos, align 8, !dbg !8426, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %32, !dbg !8426
  %33 = load ptr, ptr %arrayidx, align 8, !dbg !8426, !tbaa !1899
  store ptr %33, ptr %next_item, align 8, !dbg !8427, !tbaa !1899
  %34 = load ptr, ptr %next_item, align 8, !dbg !8428, !tbaa !1899
  call void @Py_INCREF(ptr noundef %34), !dbg !8428
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8429
  br label %cleanup57, !dbg !8429

cleanup57:                                        ; preds = %if.end56, %if.then55
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #11, !dbg !8429
  %cleanup.dest58 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest58, label %cleanup146 [
    i32 0, label %cleanup.cont59
  ]

cleanup.cont59:                                   ; preds = %cleanup57
  br label %if.end99, !dbg !8430

if.else60:                                        ; preds = %if.else41
  %35 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8431, !tbaa !1899
  %call61 = call i32 @Py_IS_TYPE(ptr noundef %35, ptr noundef @PyList_Type), !dbg !8431
  %tobool62 = icmp ne i32 %call61, 0, !dbg !8431
  br i1 %tobool62, label %if.then63, label %if.else83, !dbg !8432

if.then63:                                        ; preds = %if.else60
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos64) #11, !dbg !8433
  tail call void @llvm.dbg.declare(metadata ptr %pos64, metadata !8343, metadata !DIExpression()), !dbg !8434
  %36 = load ptr, ptr %ppos.addr, align 8, !dbg !8435, !tbaa !1899
  %37 = load i64, ptr %36, align 8, !dbg !8436, !tbaa !2597
  store i64 %37, ptr %pos64, align 8, !dbg !8434, !tbaa !2597
  %38 = load i64, ptr %pos64, align 8, !dbg !8437, !tbaa !2597
  %39 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8437, !tbaa !1899
  %call65 = call i64 @PyList_GET_SIZE(ptr noundef %39), !dbg !8437
  %cmp66 = icmp sge i64 %38, %call65, !dbg !8437
  %lnot68 = xor i1 %cmp66, true, !dbg !8437
  %lnot70 = xor i1 %lnot68, true, !dbg !8437
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !8437
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !8437
  %expval73 = call i64 @llvm.expect.i64(i64 %conv72, i64 0), !dbg !8437
  %tobool74 = icmp ne i64 %expval73, 0, !dbg !8437
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !8439

if.then75:                                        ; preds = %if.then63
  store i32 0, ptr %retval, align 4, !dbg !8440
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !8440

if.end76:                                         ; preds = %if.then63
  %40 = load i64, ptr %pos64, align 8, !dbg !8441, !tbaa !2597
  %add77 = add i64 %40, 1, !dbg !8442
  %41 = load ptr, ptr %ppos.addr, align 8, !dbg !8443, !tbaa !1899
  store i64 %add77, ptr %41, align 8, !dbg !8444, !tbaa !2597
  %42 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8445, !tbaa !1899
  %ob_item78 = getelementptr inbounds %struct.PyListObject, ptr %42, i32 0, i32 1, !dbg !8445
  %43 = load ptr, ptr %ob_item78, align 8, !dbg !8445, !tbaa !3664
  %44 = load i64, ptr %pos64, align 8, !dbg !8445, !tbaa !2597
  %arrayidx79 = getelementptr ptr, ptr %43, i64 %44, !dbg !8445
  %45 = load ptr, ptr %arrayidx79, align 8, !dbg !8445, !tbaa !1899
  store ptr %45, ptr %next_item, align 8, !dbg !8446, !tbaa !1899
  %46 = load ptr, ptr %next_item, align 8, !dbg !8447, !tbaa !1899
  call void @Py_INCREF(ptr noundef %46), !dbg !8447
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8448
  br label %cleanup80, !dbg !8448

cleanup80:                                        ; preds = %if.end76, %if.then75
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos64) #11, !dbg !8448
  %cleanup.dest81 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest81, label %cleanup146 [
    i32 0, label %cleanup.cont82
  ]

cleanup.cont82:                                   ; preds = %cleanup80
  br label %if.end98, !dbg !8449

if.else83:                                        ; preds = %if.else60
  %47 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8450, !tbaa !1899
  %call84 = call ptr @PyIter_Next(ptr noundef %47), !dbg !8452
  store ptr %call84, ptr %next_item, align 8, !dbg !8453, !tbaa !1899
  %48 = load ptr, ptr %next_item, align 8, !dbg !8454, !tbaa !1899
  %tobool85 = icmp ne ptr %48, null, !dbg !8454
  %lnot86 = xor i1 %tobool85, true, !dbg !8454
  %lnot88 = xor i1 %lnot86, true, !dbg !8454
  %lnot90 = xor i1 %lnot88, true, !dbg !8454
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !8454
  %conv92 = sext i32 %lnot.ext91 to i64, !dbg !8454
  %expval93 = call i64 @llvm.expect.i64(i64 %conv92, i64 0), !dbg !8454
  %tobool94 = icmp ne i64 %expval93, 0, !dbg !8454
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !8456

if.then95:                                        ; preds = %if.else83
  %call96 = call i32 @__Pyx_IterFinish(), !dbg !8457
  store i32 %call96, ptr %retval, align 4, !dbg !8459
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146, !dbg !8459

if.end97:                                         ; preds = %if.else83
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %cleanup.cont82
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %cleanup.cont59
  br label %if.end100

if.end100:                                        ; preds = %if.end99
  %49 = load ptr, ptr %pitem.addr, align 8, !dbg !8460, !tbaa !1899
  %tobool101 = icmp ne ptr %49, null, !dbg !8460
  br i1 %tobool101, label %if.then102, label %if.else103, !dbg !8462

if.then102:                                       ; preds = %if.end100
  %50 = load ptr, ptr %next_item, align 8, !dbg !8463, !tbaa !1899
  %51 = load ptr, ptr %pitem.addr, align 8, !dbg !8465, !tbaa !1899
  store ptr %50, ptr %51, align 8, !dbg !8466, !tbaa !1899
  br label %if.end145, !dbg !8467

if.else103:                                       ; preds = %if.end100
  %52 = load ptr, ptr %pkey.addr, align 8, !dbg !8468, !tbaa !1899
  %tobool104 = icmp ne ptr %52, null, !dbg !8468
  br i1 %tobool104, label %land.lhs.true, label %if.else139, !dbg !8470

land.lhs.true:                                    ; preds = %if.else103
  %53 = load ptr, ptr %pvalue.addr, align 8, !dbg !8471, !tbaa !1899
  %tobool105 = icmp ne ptr %53, null, !dbg !8471
  br i1 %tobool105, label %if.then106, label %if.else139, !dbg !8472

if.then106:                                       ; preds = %land.lhs.true
  %54 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8473, !tbaa !1984
  %tobool107 = icmp ne i32 %54, 0, !dbg !8473
  br i1 %tobool107, label %lor.end, label %lor.rhs, !dbg !8473

lor.rhs:                                          ; preds = %if.then106
  %55 = load ptr, ptr %next_item, align 8, !dbg !8473, !tbaa !1899
  %call108 = call ptr @Py_TYPE(ptr noundef %55), !dbg !8473
  %call109 = call i32 @PyType_HasFeature(ptr noundef %call108, i64 noundef 67108864), !dbg !8473
  %tobool110 = icmp ne i32 %call109, 0, !dbg !8473
  br label %lor.end, !dbg !8473

lor.end:                                          ; preds = %lor.rhs, %if.then106
  %56 = phi i1 [ true, %if.then106 ], [ %tobool110, %lor.rhs ]
  %lnot111 = xor i1 %56, true, !dbg !8473
  %lnot113 = xor i1 %lnot111, true, !dbg !8473
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !8473
  %conv115 = sext i32 %lnot.ext114 to i64, !dbg !8473
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 1), !dbg !8473
  %tobool117 = icmp ne i64 %expval116, 0, !dbg !8473
  br i1 %tobool117, label %cond.true, label %cond.false134, !dbg !8476

cond.true:                                        ; preds = %lor.end
  %57 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8473, !tbaa !1984
  %tobool118 = icmp ne i32 %57, 0, !dbg !8473
  br i1 %tobool118, label %lor.end123, label %lor.rhs119, !dbg !8473

lor.rhs119:                                       ; preds = %cond.true
  %58 = load ptr, ptr %next_item, align 8, !dbg !8473, !tbaa !1899
  %call120 = call i64 @PyTuple_GET_SIZE(ptr noundef %58), !dbg !8473
  %cmp121 = icmp eq i64 %call120, 2, !dbg !8473
  br label %lor.end123, !dbg !8473

lor.end123:                                       ; preds = %lor.rhs119, %cond.true
  %59 = phi i1 [ true, %cond.true ], [ %cmp121, %lor.rhs119 ]
  %lnot124 = xor i1 %59, true, !dbg !8473
  %lnot126 = xor i1 %lnot124, true, !dbg !8473
  %lnot.ext127 = zext i1 %lnot126 to i32, !dbg !8473
  %conv128 = sext i32 %lnot.ext127 to i64, !dbg !8473
  %expval129 = call i64 @llvm.expect.i64(i64 %conv128, i64 1), !dbg !8473
  %tobool130 = icmp ne i64 %expval129, 0, !dbg !8473
  br i1 %tobool130, label %cond.true131, label %cond.false, !dbg !8473

cond.true131:                                     ; preds = %lor.end123
  %60 = load ptr, ptr %next_item, align 8, !dbg !8473, !tbaa !1899
  %61 = load ptr, ptr %pkey.addr, align 8, !dbg !8473, !tbaa !1899
  %62 = load ptr, ptr %pvalue.addr, align 8, !dbg !8473, !tbaa !1899
  %call132 = call i32 @__Pyx_unpack_tuple2_exact(ptr noundef %60, ptr noundef %61, ptr noundef %62, i32 noundef 1), !dbg !8473
  %tobool133 = icmp ne i32 %call132, 0, !dbg !8473
  br i1 %tobool133, label %if.then137, label %if.end138, !dbg !8473

cond.false:                                       ; preds = %lor.end123
  %63 = load ptr, ptr %next_item, align 8, !dbg !8473, !tbaa !1899
  call void @__Pyx_UnpackTupleError(ptr noundef %63, i64 noundef 2), !dbg !8473
  br i1 true, label %if.then137, label %if.end138, !dbg !8473

cond.false134:                                    ; preds = %lor.end
  %64 = load ptr, ptr %next_item, align 8, !dbg !8473, !tbaa !1899
  %65 = load ptr, ptr %pkey.addr, align 8, !dbg !8473, !tbaa !1899
  %66 = load ptr, ptr %pvalue.addr, align 8, !dbg !8473, !tbaa !1899
  %67 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8473, !tbaa !1984
  %call135 = call i32 @__Pyx_unpack_tuple2_generic(ptr noundef %64, ptr noundef %65, ptr noundef %66, i32 noundef %67, i32 noundef 1), !dbg !8473
  %tobool136 = icmp ne i32 %call135, 0, !dbg !8473
  br i1 %tobool136, label %if.then137, label %if.end138, !dbg !8476

if.then137:                                       ; preds = %cond.false134, %cond.false, %cond.true131
  store i32 -1, ptr %retval, align 4, !dbg !8477
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146, !dbg !8477

if.end138:                                        ; preds = %cond.false134, %cond.false, %cond.true131
  br label %if.end144, !dbg !8478

if.else139:                                       ; preds = %land.lhs.true, %if.else103
  %68 = load ptr, ptr %pkey.addr, align 8, !dbg !8479, !tbaa !1899
  %tobool140 = icmp ne ptr %68, null, !dbg !8479
  br i1 %tobool140, label %if.then141, label %if.else142, !dbg !8481

if.then141:                                       ; preds = %if.else139
  %69 = load ptr, ptr %next_item, align 8, !dbg !8482, !tbaa !1899
  %70 = load ptr, ptr %pkey.addr, align 8, !dbg !8484, !tbaa !1899
  store ptr %69, ptr %70, align 8, !dbg !8485, !tbaa !1899
  br label %if.end143, !dbg !8486

if.else142:                                       ; preds = %if.else139
  %71 = load ptr, ptr %next_item, align 8, !dbg !8487, !tbaa !1899
  %72 = load ptr, ptr %pvalue.addr, align 8, !dbg !8489, !tbaa !1899
  store ptr %71, ptr %72, align 8, !dbg !8490, !tbaa !1899
  br label %if.end143

if.end143:                                        ; preds = %if.else142, %if.then141
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end138
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then102
  store i32 1, ptr %retval, align 4, !dbg !8491
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146, !dbg !8491

cleanup146:                                       ; preds = %if.end145, %if.then137, %if.then95, %cleanup80, %cleanup57, %cleanup39
  call void @llvm.lifetime.end.p0(i64 8, ptr %next_item) #11, !dbg !8492
  %73 = load i32, ptr %retval, align 4, !dbg !8492
  ret i32 %73, !dbg !8492
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_TypeTest(ptr noundef %obj, ptr noundef %type) #3 !dbg !8493 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %obj_type_name = alloca ptr, align 8
  %type_name = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !8497, metadata !DIExpression()), !dbg !8502
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !8498, metadata !DIExpression()), !dbg !8503
  call void @llvm.lifetime.start.p0(i64 8, ptr %obj_type_name) #11, !dbg !8504
  tail call void @llvm.dbg.declare(metadata ptr %obj_type_name, metadata !8499, metadata !DIExpression()), !dbg !8505
  call void @llvm.lifetime.start.p0(i64 8, ptr %type_name) #11, !dbg !8506
  tail call void @llvm.dbg.declare(metadata ptr %type_name, metadata !8501, metadata !DIExpression()), !dbg !8507
  %0 = load ptr, ptr %type.addr, align 8, !dbg !8508, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !8508
  %lnot = xor i1 %tobool, true, !dbg !8508
  %lnot1 = xor i1 %lnot, true, !dbg !8508
  %lnot2 = xor i1 %lnot1, true, !dbg !8508
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8508
  %conv = sext i32 %lnot.ext to i64, !dbg !8508
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8508
  %tobool3 = icmp ne i64 %expval, 0, !dbg !8508
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8510

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !8511, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.86), !dbg !8513
  store i32 0, ptr %retval, align 4, !dbg !8514
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8514

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %obj.addr, align 8, !dbg !8515, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %2), !dbg !8515
  %3 = load ptr, ptr %type.addr, align 8, !dbg !8515, !tbaa !1899
  %call4 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %3), !dbg !8515
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8515
  %lnot6 = xor i1 %tobool5, true, !dbg !8515
  %lnot8 = xor i1 %lnot6, true, !dbg !8515
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !8515
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !8515
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 1), !dbg !8515
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !8515
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8517

if.then13:                                        ; preds = %if.end
  store i32 1, ptr %retval, align 4, !dbg !8518
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8518

if.end14:                                         ; preds = %if.end
  %4 = load ptr, ptr %obj.addr, align 8, !dbg !8519, !tbaa !1899
  %call15 = call ptr @Py_TYPE(ptr noundef %4), !dbg !8519
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call15, i32 0, i32 1, !dbg !8519
  %5 = load ptr, ptr %tp_name, align 8, !dbg !8519, !tbaa !4021
  store ptr %5, ptr %obj_type_name, align 8, !dbg !8520, !tbaa !1899
  %6 = load ptr, ptr %type.addr, align 8, !dbg !8521, !tbaa !1899
  %tp_name16 = getelementptr inbounds %struct._typeobject, ptr %6, i32 0, i32 1, !dbg !8521
  %7 = load ptr, ptr %tp_name16, align 8, !dbg !8521, !tbaa !4021
  store ptr %7, ptr %type_name, align 8, !dbg !8522, !tbaa !1899
  %8 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !8523, !tbaa !1899
  %9 = load ptr, ptr %obj_type_name, align 8, !dbg !8524, !tbaa !1899
  %10 = load ptr, ptr %type_name, align 8, !dbg !8525, !tbaa !1899
  %call17 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %8, ptr noundef @.str.87, ptr noundef %9, ptr noundef %10), !dbg !8526
  store i32 0, ptr %retval, align 4, !dbg !8527
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8527

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %type_name) #11, !dbg !8528
  call void @llvm.lifetime.end.p0(i64 8, ptr %obj_type_name) #11, !dbg !8528
  %11 = load i32, ptr %retval, align 4, !dbg !8528
  ret i32 %11, !dbg !8528
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_old_to_new(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_old_state_set) #0 !dbg !8529 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_old_state_set.addr = alloca ptr, align 8
  %__pyx_v_key = alloca ptr, align 8
  %__pyx_v_new_state = alloca ptr, align 8
  %__pyx_v_action = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %__pyx_callargs = alloca [2 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %tmp109 = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !8531, metadata !DIExpression()), !dbg !8561
  store ptr %__pyx_v_old_state_set, ptr %__pyx_v_old_state_set.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_state_set.addr, metadata !8532, metadata !DIExpression()), !dbg !8562
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_key) #11, !dbg !8563
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_key, metadata !8533, metadata !DIExpression()), !dbg !8564
  store ptr null, ptr %__pyx_v_key, align 8, !dbg !8564, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_new_state) #11, !dbg !8565
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_state, metadata !8534, metadata !DIExpression()), !dbg !8566
  store ptr null, ptr %__pyx_v_new_state, align 8, !dbg !8566, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_action) #11, !dbg !8567
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_action, metadata !8535, metadata !DIExpression()), !dbg !8568
  store ptr null, ptr %__pyx_v_action, align 8, !dbg !8568, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !8569
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !8536, metadata !DIExpression()), !dbg !8570
  store ptr null, ptr %__pyx_r, align 8, !dbg !8570, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !8571
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !8537, metadata !DIExpression()), !dbg !8572
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8572, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !8573
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !8538, metadata !DIExpression()), !dbg !8574
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #11, !dbg !8575
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !8539, metadata !DIExpression()), !dbg !8576
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !8577
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !8540, metadata !DIExpression()), !dbg !8578
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !8578, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !8579
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !8541, metadata !DIExpression()), !dbg !8580
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !8580, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !8581
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !8542, metadata !DIExpression()), !dbg !8582
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !8583
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !8543, metadata !DIExpression()), !dbg !8584
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !8584, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !8585
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !8544, metadata !DIExpression()), !dbg !8586
  store ptr null, ptr %__pyx_filename, align 8, !dbg !8586, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !8587
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !8545, metadata !DIExpression()), !dbg !8588
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !8588, !tbaa !1984
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8589, !tbaa !1899
  %1 = load ptr, ptr %__pyx_v_old_state_set.addr, align 8, !dbg !8590, !tbaa !1899
  %call = call ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_make_key(ptr noundef %0, ptr noundef %1), !dbg !8591
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !8592, !tbaa !1899
  %2 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8593, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !8593
  %lnot = xor i1 %tobool, true, !dbg !8593
  %lnot1 = xor i1 %lnot, true, !dbg !8593
  %lnot2 = xor i1 %lnot1, true, !dbg !8593
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8593
  %conv = sext i32 %lnot.ext to i64, !dbg !8593
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8593
  %tobool3 = icmp ne i64 %expval, 0, !dbg !8593
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8595

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !8596, !tbaa !1899
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !8596, !tbaa !1899
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !8596, !tbaa !1899
  store i32 113, ptr %__pyx_lineno, align 4, !dbg !8596, !tbaa !1984
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !8596, !tbaa !1984
  store i32 4606, ptr %__pyx_clineno, align 4, !dbg !8596, !tbaa !1984
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !8596, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8599

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8600, !tbaa !1899
  store ptr %7, ptr %__pyx_v_key, align 8, !dbg !8601, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8602, !tbaa !1899
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8603, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %8, i32 0, i32 3, !dbg !8603
  %9 = load ptr, ptr %old_to_new_dict, align 8, !dbg !8603, !tbaa !8605
  %cmp = icmp eq ptr %9, @_Py_NoneStruct, !dbg !8603
  %lnot5 = xor i1 %cmp, true, !dbg !8603
  %lnot7 = xor i1 %lnot5, true, !dbg !8603
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8603
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !8603
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !8603
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !8603
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !8607

if.then12:                                        ; preds = %if.end
  %10 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !8608, !tbaa !1899
  %call13 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %10, ptr noundef @.str.76, ptr noundef @.str.88), !dbg !8610
  %11 = load ptr, ptr @__pyx_f, align 16, !dbg !8611, !tbaa !1899
  store ptr %11, ptr %__pyx_filename, align 8, !dbg !8611, !tbaa !1899
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !8611, !tbaa !1899
  store i32 114, ptr %__pyx_lineno, align 4, !dbg !8611, !tbaa !1984
  %13 = load i32, ptr %__pyx_lineno, align 4, !dbg !8611, !tbaa !1984
  store i32 4620, ptr %__pyx_clineno, align 4, !dbg !8611, !tbaa !1984
  %14 = load i32, ptr %__pyx_clineno, align 4, !dbg !8611, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8614

if.end14:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8615, !tbaa !1899
  %old_to_new_dict15 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %15, i32 0, i32 3, !dbg !8616
  %16 = load ptr, ptr %old_to_new_dict15, align 8, !dbg !8616, !tbaa !8605
  %17 = load ptr, ptr %__pyx_v_key, align 8, !dbg !8617, !tbaa !1899
  %call16 = call ptr @__Pyx_PyDict_GetItemDefault(ptr noundef %16, ptr noundef %17, ptr noundef @_Py_NoneStruct), !dbg !8618
  store ptr %call16, ptr %__pyx_t_1, align 8, !dbg !8619, !tbaa !1899
  %18 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8620, !tbaa !1899
  %tobool17 = icmp ne ptr %18, null, !dbg !8620
  %lnot18 = xor i1 %tobool17, true, !dbg !8620
  %lnot20 = xor i1 %lnot18, true, !dbg !8620
  %lnot22 = xor i1 %lnot20, true, !dbg !8620
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !8620
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !8620
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0), !dbg !8620
  %tobool26 = icmp ne i64 %expval25, 0, !dbg !8620
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8622

if.then27:                                        ; preds = %if.end14
  %19 = load ptr, ptr @__pyx_f, align 16, !dbg !8623, !tbaa !1899
  store ptr %19, ptr %__pyx_filename, align 8, !dbg !8623, !tbaa !1899
  %20 = load ptr, ptr %__pyx_filename, align 8, !dbg !8623, !tbaa !1899
  store i32 114, ptr %__pyx_lineno, align 4, !dbg !8623, !tbaa !1984
  %21 = load i32, ptr %__pyx_lineno, align 4, !dbg !8623, !tbaa !1984
  store i32 4622, ptr %__pyx_clineno, align 4, !dbg !8623, !tbaa !1984
  %22 = load i32, ptr %__pyx_clineno, align 4, !dbg !8623, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8626

if.end28:                                         ; preds = %if.end14
  %23 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8627, !tbaa !1899
  store ptr %23, ptr %__pyx_v_new_state, align 8, !dbg !8628, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8629, !tbaa !1899
  %24 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !8630, !tbaa !1899
  %call29 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %24), !dbg !8631
  store i32 %call29, ptr %__pyx_t_2, align 4, !dbg !8632, !tbaa !1984
  %25 = load i32, ptr %__pyx_t_2, align 4, !dbg !8633, !tbaa !1984
  %cmp30 = icmp slt i32 %25, 0, !dbg !8633
  %lnot32 = xor i1 %cmp30, true, !dbg !8633
  %lnot34 = xor i1 %lnot32, true, !dbg !8633
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !8633
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !8633
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0), !dbg !8633
  %tobool38 = icmp ne i64 %expval37, 0, !dbg !8633
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !8635

if.then39:                                        ; preds = %if.end28
  %26 = load ptr, ptr @__pyx_f, align 16, !dbg !8636, !tbaa !1899
  store ptr %26, ptr %__pyx_filename, align 8, !dbg !8636, !tbaa !1899
  %27 = load ptr, ptr %__pyx_filename, align 8, !dbg !8636, !tbaa !1899
  store i32 115, ptr %__pyx_lineno, align 4, !dbg !8636, !tbaa !1984
  %28 = load i32, ptr %__pyx_lineno, align 4, !dbg !8636, !tbaa !1984
  store i32 4634, ptr %__pyx_clineno, align 4, !dbg !8636, !tbaa !1984
  %29 = load i32, ptr %__pyx_clineno, align 4, !dbg !8636, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8639

if.end40:                                         ; preds = %if.end28
  %30 = load i32, ptr %__pyx_t_2, align 4, !dbg !8640, !tbaa !1984
  %tobool41 = icmp ne i32 %30, 0, !dbg !8641
  %lnot42 = xor i1 %tobool41, true, !dbg !8641
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !8641
  store i32 %lnot.ext43, ptr %__pyx_t_3, align 4, !dbg !8642, !tbaa !1984
  %31 = load i32, ptr %__pyx_t_3, align 4, !dbg !8643, !tbaa !1984
  %tobool44 = icmp ne i32 %31, 0, !dbg !8643
  br i1 %tobool44, label %if.then45, label %if.end174, !dbg !8644

if.then45:                                        ; preds = %if.end40
  %32 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8645, !tbaa !1899
  %33 = load ptr, ptr %__pyx_v_old_state_set.addr, align 8, !dbg !8646, !tbaa !1899
  %call46 = call ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action(ptr noundef %32, ptr noundef %33), !dbg !8647
  store ptr %call46, ptr %__pyx_t_1, align 8, !dbg !8648, !tbaa !1899
  %34 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8649, !tbaa !1899
  %tobool47 = icmp ne ptr %34, null, !dbg !8649
  %lnot48 = xor i1 %tobool47, true, !dbg !8649
  %lnot50 = xor i1 %lnot48, true, !dbg !8649
  %lnot52 = xor i1 %lnot50, true, !dbg !8649
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !8649
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !8649
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 0), !dbg !8649
  %tobool56 = icmp ne i64 %expval55, 0, !dbg !8649
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !8651

if.then57:                                        ; preds = %if.then45
  %35 = load ptr, ptr @__pyx_f, align 16, !dbg !8652, !tbaa !1899
  store ptr %35, ptr %__pyx_filename, align 8, !dbg !8652, !tbaa !1899
  %36 = load ptr, ptr %__pyx_filename, align 8, !dbg !8652, !tbaa !1899
  store i32 116, ptr %__pyx_lineno, align 4, !dbg !8652, !tbaa !1984
  %37 = load i32, ptr %__pyx_lineno, align 4, !dbg !8652, !tbaa !1984
  store i32 4645, ptr %__pyx_clineno, align 4, !dbg !8652, !tbaa !1984
  %38 = load i32, ptr %__pyx_clineno, align 4, !dbg !8652, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8655

if.end58:                                         ; preds = %if.then45
  %39 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8656, !tbaa !1899
  store ptr %39, ptr %__pyx_v_action, align 8, !dbg !8657, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8658, !tbaa !1899
  %40 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8659, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %40, i32 0, i32 2, !dbg !8660
  %41 = load ptr, ptr %new_machine, align 8, !dbg !8660, !tbaa !8661
  %42 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8662, !tbaa !1899
  %__pyx_n_s_new_state = getelementptr inbounds %struct.__pyx_mstate, ptr %42, i32 0, i32 63, !dbg !8662
  %43 = load ptr, ptr %__pyx_n_s_new_state, align 8, !dbg !8662, !tbaa !2987
  %call59 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %41, ptr noundef %43), !dbg !8663
  store ptr %call59, ptr %__pyx_t_4, align 8, !dbg !8664, !tbaa !1899
  %44 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8665, !tbaa !1899
  %tobool60 = icmp ne ptr %44, null, !dbg !8665
  %lnot61 = xor i1 %tobool60, true, !dbg !8665
  %lnot63 = xor i1 %lnot61, true, !dbg !8665
  %lnot65 = xor i1 %lnot63, true, !dbg !8665
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !8665
  %conv67 = sext i32 %lnot.ext66 to i64, !dbg !8665
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0), !dbg !8665
  %tobool69 = icmp ne i64 %expval68, 0, !dbg !8665
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !8667

if.then70:                                        ; preds = %if.end58
  %45 = load ptr, ptr @__pyx_f, align 16, !dbg !8668, !tbaa !1899
  store ptr %45, ptr %__pyx_filename, align 8, !dbg !8668, !tbaa !1899
  %46 = load ptr, ptr %__pyx_filename, align 8, !dbg !8668, !tbaa !1899
  store i32 117, ptr %__pyx_lineno, align 4, !dbg !8668, !tbaa !1984
  %47 = load i32, ptr %__pyx_lineno, align 4, !dbg !8668, !tbaa !1984
  store i32 4657, ptr %__pyx_clineno, align 4, !dbg !8668, !tbaa !1984
  %48 = load i32, ptr %__pyx_clineno, align 4, !dbg !8668, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8671

if.end71:                                         ; preds = %if.end58
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !8672, !tbaa !1899
  store i32 0, ptr %__pyx_t_6, align 4, !dbg !8673, !tbaa !1984
  %49 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8674, !tbaa !1899
  %call72 = call i32 @Py_IS_TYPE(ptr noundef %49, ptr noundef @PyMethod_Type), !dbg !8674
  %tobool73 = icmp ne i32 %call72, 0, !dbg !8674
  %lnot74 = xor i1 %tobool73, true, !dbg !8674
  %lnot76 = xor i1 %lnot74, true, !dbg !8674
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !8674
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !8674
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 1), !dbg !8674
  %tobool80 = icmp ne i64 %expval79, 0, !dbg !8674
  br i1 %tobool80, label %if.then81, label %if.end92, !dbg !8675

if.then81:                                        ; preds = %if.end71
  %50 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8676, !tbaa !1899
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %50, i32 0, i32 2, !dbg !8676
  %51 = load ptr, ptr %im_self, align 8, !dbg !8676, !tbaa !6934
  store ptr %51, ptr %__pyx_t_5, align 8, !dbg !8677, !tbaa !1899
  %52 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8678, !tbaa !1899
  %tobool82 = icmp ne ptr %52, null, !dbg !8678
  %lnot83 = xor i1 %tobool82, true, !dbg !8678
  %lnot85 = xor i1 %lnot83, true, !dbg !8678
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !8678
  %conv87 = sext i32 %lnot.ext86 to i64, !dbg !8678
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 1), !dbg !8678
  %tobool89 = icmp ne i64 %expval88, 0, !dbg !8678
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !8679

if.then90:                                        ; preds = %if.then81
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #11, !dbg !8680
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !8546, metadata !DIExpression()), !dbg !8681
  %53 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8682, !tbaa !1899
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %53, i32 0, i32 1, !dbg !8682
  %54 = load ptr, ptr %im_func, align 8, !dbg !8682, !tbaa !6942
  store ptr %54, ptr %function, align 8, !dbg !8681, !tbaa !1899
  %55 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8683, !tbaa !1899
  call void @Py_INCREF(ptr noundef %55), !dbg !8683
  %56 = load ptr, ptr %function, align 8, !dbg !8684, !tbaa !1899
  call void @Py_INCREF(ptr noundef %56), !dbg !8684
  br label %do.body, !dbg !8685

do.body:                                          ; preds = %if.then90
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !8686
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !8553, metadata !DIExpression()), !dbg !8686
  %57 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8686, !tbaa !1899
  store ptr %57, ptr %tmp, align 8, !dbg !8686, !tbaa !1899
  %58 = load ptr, ptr %function, align 8, !dbg !8686, !tbaa !1899
  store ptr %58, ptr %__pyx_t_4, align 8, !dbg !8686, !tbaa !1899
  %59 = load ptr, ptr %tmp, align 8, !dbg !8686, !tbaa !1899
  call void @Py_DECREF(ptr noundef %59), !dbg !8686
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !8685
  br label %do.cond, !dbg !8686

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !8686

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %__pyx_t_6, align 4, !dbg !8687, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #11, !dbg !8688
  br label %if.end91, !dbg !8689

if.end91:                                         ; preds = %do.end, %if.then81
  br label %if.end92, !dbg !8690

if.end92:                                         ; preds = %if.end91, %if.end71
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !8691
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !8555, metadata !DIExpression()), !dbg !8692
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !8693
  %60 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8694, !tbaa !1899
  store ptr %60, ptr %arrayinit.begin, align 8, !dbg !8693, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !8693
  %61 = load ptr, ptr %__pyx_v_action, align 8, !dbg !8695, !tbaa !1899
  store ptr %61, ptr %arrayinit.element, align 8, !dbg !8693, !tbaa !1899
  %62 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8696, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !8696
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !8696
  %63 = load i32, ptr %__pyx_t_6, align 4, !dbg !8696, !tbaa !1984
  %idx.ext = sext i32 %63 to i64, !dbg !8696
  %idx.neg = sub i64 0, %idx.ext, !dbg !8696
  %add.ptr93 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !8696
  %64 = load i32, ptr %__pyx_t_6, align 4, !dbg !8696, !tbaa !1984
  %add = add i32 1, %64, !dbg !8696
  %conv94 = sext i32 %add to i64, !dbg !8696
  %call95 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %62, ptr noundef %add.ptr93, i64 noundef %conv94, ptr noundef null), !dbg !8696
  store ptr %call95, ptr %__pyx_t_1, align 8, !dbg !8697, !tbaa !1899
  %65 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8698, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %65), !dbg !8698
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !8699, !tbaa !1899
  %66 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8700, !tbaa !1899
  %tobool96 = icmp ne ptr %66, null, !dbg !8700
  %lnot97 = xor i1 %tobool96, true, !dbg !8700
  %lnot99 = xor i1 %lnot97, true, !dbg !8700
  %lnot101 = xor i1 %lnot99, true, !dbg !8700
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !8700
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !8700
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 0), !dbg !8700
  %tobool105 = icmp ne i64 %expval104, 0, !dbg !8700
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !8702

if.then106:                                       ; preds = %if.end92
  %67 = load ptr, ptr @__pyx_f, align 16, !dbg !8703, !tbaa !1899
  store ptr %67, ptr %__pyx_filename, align 8, !dbg !8703, !tbaa !1899
  %68 = load ptr, ptr %__pyx_filename, align 8, !dbg !8703, !tbaa !1899
  store i32 117, ptr %__pyx_lineno, align 4, !dbg !8703, !tbaa !1984
  %69 = load i32, ptr %__pyx_lineno, align 4, !dbg !8703, !tbaa !1984
  store i32 4677, ptr %__pyx_clineno, align 4, !dbg !8703, !tbaa !1984
  %70 = load i32, ptr %__pyx_clineno, align 4, !dbg !8703, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8706

if.end107:                                        ; preds = %if.end92
  %71 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8707, !tbaa !1899
  call void @Py_DECREF(ptr noundef %71), !dbg !8707
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !8708, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8709
  br label %cleanup, !dbg !8709

cleanup:                                          ; preds = %if.then106, %if.end107
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !8709
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup175 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.body108, !dbg !8710

do.body108:                                       ; preds = %cleanup.cont
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp109) #11, !dbg !8711
  tail call void @llvm.dbg.declare(metadata ptr %tmp109, metadata !8557, metadata !DIExpression()), !dbg !8711
  %72 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !8711, !tbaa !1899
  store ptr %72, ptr %tmp109, align 8, !dbg !8711, !tbaa !1899
  %73 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8711, !tbaa !1899
  store ptr %73, ptr %__pyx_v_new_state, align 8, !dbg !8711, !tbaa !1899
  %74 = load ptr, ptr %tmp109, align 8, !dbg !8711, !tbaa !1899
  call void @Py_DECREF(ptr noundef %74), !dbg !8711
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp109) #11, !dbg !8710
  br label %do.cond110, !dbg !8711

do.cond110:                                       ; preds = %do.body108
  br label %do.end111, !dbg !8711

do.end111:                                        ; preds = %do.cond110
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8712, !tbaa !1899
  %75 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8713, !tbaa !1899
  %old_to_new_dict112 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %75, i32 0, i32 3, !dbg !8713
  %76 = load ptr, ptr %old_to_new_dict112, align 8, !dbg !8713, !tbaa !8605
  %cmp113 = icmp eq ptr %76, @_Py_NoneStruct, !dbg !8713
  %lnot115 = xor i1 %cmp113, true, !dbg !8713
  %lnot117 = xor i1 %lnot115, true, !dbg !8713
  %lnot.ext118 = zext i1 %lnot117 to i32, !dbg !8713
  %conv119 = sext i32 %lnot.ext118 to i64, !dbg !8713
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 0), !dbg !8713
  %tobool121 = icmp ne i64 %expval120, 0, !dbg !8713
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !8715

if.then122:                                       ; preds = %do.end111
  %77 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !8716, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %77, ptr noundef @.str.89), !dbg !8718
  %78 = load ptr, ptr @__pyx_f, align 16, !dbg !8719, !tbaa !1899
  store ptr %78, ptr %__pyx_filename, align 8, !dbg !8719, !tbaa !1899
  %79 = load ptr, ptr %__pyx_filename, align 8, !dbg !8719, !tbaa !1899
  store i32 118, ptr %__pyx_lineno, align 4, !dbg !8719, !tbaa !1984
  %80 = load i32, ptr %__pyx_lineno, align 4, !dbg !8719, !tbaa !1984
  store i32 4693, ptr %__pyx_clineno, align 4, !dbg !8719, !tbaa !1984
  %81 = load i32, ptr %__pyx_clineno, align 4, !dbg !8719, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8722

if.end123:                                        ; preds = %do.end111
  %82 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8723, !tbaa !1899
  %old_to_new_dict124 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %82, i32 0, i32 3, !dbg !8723
  %83 = load ptr, ptr %old_to_new_dict124, align 8, !dbg !8723, !tbaa !8605
  %84 = load ptr, ptr %__pyx_v_key, align 8, !dbg !8723, !tbaa !1899
  %85 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !8723, !tbaa !1899
  %call125 = call i32 @PyDict_SetItem(ptr noundef %83, ptr noundef %84, ptr noundef %85), !dbg !8723
  %cmp126 = icmp slt i32 %call125, 0, !dbg !8723
  %lnot128 = xor i1 %cmp126, true, !dbg !8723
  %lnot130 = xor i1 %lnot128, true, !dbg !8723
  %lnot.ext131 = zext i1 %lnot130 to i32, !dbg !8723
  %conv132 = sext i32 %lnot.ext131 to i64, !dbg !8723
  %expval133 = call i64 @llvm.expect.i64(i64 %conv132, i64 0), !dbg !8723
  %tobool134 = icmp ne i64 %expval133, 0, !dbg !8723
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !8725

if.then135:                                       ; preds = %if.end123
  %86 = load ptr, ptr @__pyx_f, align 16, !dbg !8726, !tbaa !1899
  store ptr %86, ptr %__pyx_filename, align 8, !dbg !8726, !tbaa !1899
  %87 = load ptr, ptr %__pyx_filename, align 8, !dbg !8726, !tbaa !1899
  store i32 118, ptr %__pyx_lineno, align 4, !dbg !8726, !tbaa !1984
  %88 = load i32, ptr %__pyx_lineno, align 4, !dbg !8726, !tbaa !1984
  store i32 4695, ptr %__pyx_clineno, align 4, !dbg !8726, !tbaa !1984
  %89 = load i32, ptr %__pyx_clineno, align 4, !dbg !8726, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8729

if.end136:                                        ; preds = %if.end123
  %90 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8730, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %90, i32 0, i32 4, !dbg !8730
  %91 = load ptr, ptr %new_to_old_dict, align 8, !dbg !8730, !tbaa !8732
  %cmp137 = icmp eq ptr %91, @_Py_NoneStruct, !dbg !8730
  %lnot139 = xor i1 %cmp137, true, !dbg !8730
  %lnot141 = xor i1 %lnot139, true, !dbg !8730
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !8730
  %conv143 = sext i32 %lnot.ext142 to i64, !dbg !8730
  %expval144 = call i64 @llvm.expect.i64(i64 %conv143, i64 0), !dbg !8730
  %tobool145 = icmp ne i64 %expval144, 0, !dbg !8730
  br i1 %tobool145, label %if.then146, label %if.end147, !dbg !8733

if.then146:                                       ; preds = %if.end136
  %92 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !8734, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %92, ptr noundef @.str.89), !dbg !8736
  %93 = load ptr, ptr @__pyx_f, align 16, !dbg !8737, !tbaa !1899
  store ptr %93, ptr %__pyx_filename, align 8, !dbg !8737, !tbaa !1899
  %94 = load ptr, ptr %__pyx_filename, align 8, !dbg !8737, !tbaa !1899
  store i32 119, ptr %__pyx_lineno, align 4, !dbg !8737, !tbaa !1984
  %95 = load i32, ptr %__pyx_lineno, align 4, !dbg !8737, !tbaa !1984
  store i32 4706, ptr %__pyx_clineno, align 4, !dbg !8737, !tbaa !1984
  %96 = load i32, ptr %__pyx_clineno, align 4, !dbg !8737, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8740

if.end147:                                        ; preds = %if.end136
  %97 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !8741, !tbaa !1899
  %98 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !8742, !tbaa !1899
  %call148 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %97, ptr noundef %98), !dbg !8743
  store ptr %call148, ptr %__pyx_t_1, align 8, !dbg !8744, !tbaa !1899
  %99 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8745, !tbaa !1899
  %tobool149 = icmp ne ptr %99, null, !dbg !8745
  %lnot150 = xor i1 %tobool149, true, !dbg !8745
  %lnot152 = xor i1 %lnot150, true, !dbg !8745
  %lnot154 = xor i1 %lnot152, true, !dbg !8745
  %lnot.ext155 = zext i1 %lnot154 to i32, !dbg !8745
  %conv156 = sext i32 %lnot.ext155 to i64, !dbg !8745
  %expval157 = call i64 @llvm.expect.i64(i64 %conv156, i64 0), !dbg !8745
  %tobool158 = icmp ne i64 %expval157, 0, !dbg !8745
  br i1 %tobool158, label %if.then159, label %if.end160, !dbg !8747

if.then159:                                       ; preds = %if.end147
  %100 = load ptr, ptr @__pyx_f, align 16, !dbg !8748, !tbaa !1899
  store ptr %100, ptr %__pyx_filename, align 8, !dbg !8748, !tbaa !1899
  %101 = load ptr, ptr %__pyx_filename, align 8, !dbg !8748, !tbaa !1899
  store i32 119, ptr %__pyx_lineno, align 4, !dbg !8748, !tbaa !1984
  %102 = load i32, ptr %__pyx_lineno, align 4, !dbg !8748, !tbaa !1984
  store i32 4708, ptr %__pyx_clineno, align 4, !dbg !8748, !tbaa !1984
  %103 = load i32, ptr %__pyx_clineno, align 4, !dbg !8748, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8751

if.end160:                                        ; preds = %if.end147
  %104 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !8752, !tbaa !1899
  %new_to_old_dict161 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %104, i32 0, i32 4, !dbg !8752
  %105 = load ptr, ptr %new_to_old_dict161, align 8, !dbg !8752, !tbaa !8732
  %106 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8752, !tbaa !1899
  %107 = load ptr, ptr %__pyx_v_old_state_set.addr, align 8, !dbg !8752, !tbaa !1899
  %call162 = call i32 @PyDict_SetItem(ptr noundef %105, ptr noundef %106, ptr noundef %107), !dbg !8752
  %cmp163 = icmp slt i32 %call162, 0, !dbg !8752
  %lnot165 = xor i1 %cmp163, true, !dbg !8752
  %lnot167 = xor i1 %lnot165, true, !dbg !8752
  %lnot.ext168 = zext i1 %lnot167 to i32, !dbg !8752
  %conv169 = sext i32 %lnot.ext168 to i64, !dbg !8752
  %expval170 = call i64 @llvm.expect.i64(i64 %conv169, i64 0), !dbg !8752
  %tobool171 = icmp ne i64 %expval170, 0, !dbg !8752
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !8754

if.then172:                                       ; preds = %if.end160
  %108 = load ptr, ptr @__pyx_f, align 16, !dbg !8755, !tbaa !1899
  store ptr %108, ptr %__pyx_filename, align 8, !dbg !8755, !tbaa !1899
  %109 = load ptr, ptr %__pyx_filename, align 8, !dbg !8755, !tbaa !1899
  store i32 119, ptr %__pyx_lineno, align 4, !dbg !8755, !tbaa !1984
  %110 = load i32, ptr %__pyx_lineno, align 4, !dbg !8755, !tbaa !1984
  store i32 4710, ptr %__pyx_clineno, align 4, !dbg !8755, !tbaa !1984
  %111 = load i32, ptr %__pyx_clineno, align 4, !dbg !8755, !tbaa !1984
  br label %__pyx_L1_error, !dbg !8758

if.end173:                                        ; preds = %if.end160
  %112 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8759, !tbaa !1899
  call void @Py_DECREF(ptr noundef %112), !dbg !8759
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !8760, !tbaa !1899
  br label %if.end174, !dbg !8761

if.end174:                                        ; preds = %if.end173, %if.end40
  %113 = load ptr, ptr %__pyx_r, align 8, !dbg !8762, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %113), !dbg !8762
  %114 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !8763, !tbaa !1899
  call void @Py_INCREF(ptr noundef %114), !dbg !8763
  %115 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !8764, !tbaa !1899
  store ptr %115, ptr %__pyx_r, align 8, !dbg !8765, !tbaa !1899
  br label %__pyx_L0, !dbg !8766

__pyx_L1_error:                                   ; preds = %cleanup, %if.then172, %if.then159, %if.then146, %if.then135, %if.then122, %if.then70, %if.then57, %if.then39, %if.then27, %if.then12, %if.then
  tail call void @llvm.dbg.label(metadata !8559), !dbg !8767
  %116 = load ptr, ptr %__pyx_t_1, align 8, !dbg !8768, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %116), !dbg !8768
  %117 = load ptr, ptr %__pyx_t_4, align 8, !dbg !8769, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %117), !dbg !8769
  %118 = load ptr, ptr %__pyx_t_5, align 8, !dbg !8770, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %118), !dbg !8770
  %119 = load i32, ptr %__pyx_clineno, align 4, !dbg !8771, !tbaa !1984
  %120 = load i32, ptr %__pyx_lineno, align 4, !dbg !8772, !tbaa !1984
  %121 = load ptr, ptr %__pyx_filename, align 8, !dbg !8773, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.90, i32 noundef %119, i32 noundef %120, ptr noundef %121), !dbg !8774
  store ptr null, ptr %__pyx_r, align 8, !dbg !8775, !tbaa !1899
  br label %__pyx_L0, !dbg !8776

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end174
  tail call void @llvm.dbg.label(metadata !8560), !dbg !8777
  %122 = load ptr, ptr %__pyx_v_key, align 8, !dbg !8778, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %122), !dbg !8778
  %123 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !8779, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %123), !dbg !8779
  %124 = load ptr, ptr %__pyx_v_action, align 8, !dbg !8780, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %124), !dbg !8780
  %125 = load ptr, ptr %__pyx_r, align 8, !dbg !8781, !tbaa !1899
  store ptr %125, ptr %retval, align 8, !dbg !8782
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup175, !dbg !8782

cleanup175:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_action) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_new_state) #11, !dbg !8783
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_key) #11, !dbg !8783
  %126 = load ptr, ptr %retval, align 8, !dbg !8783
  ret ptr %126, !dbg !8783
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @Py_IS_TYPE(ptr noundef %ob, ptr noundef %type) #3 !dbg !8784 {
entry:
  %ob.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !8786, metadata !DIExpression()), !dbg !8788
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !8787, metadata !DIExpression()), !dbg !8789
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !8790, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !8790
  %1 = load ptr, ptr %type.addr, align 8, !dbg !8791, !tbaa !1899
  %cmp = icmp eq ptr %call, %1, !dbg !8792
  %conv = zext i1 %cmp to i32, !dbg !8792
  ret i32 %conv, !dbg !8793
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_FastCallDict(ptr noundef %func, ptr noundef %args, i64 noundef %_nargs, ptr noundef %kwargs) #3 !dbg !8794 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %_nargs.addr = alloca i64, align 8
  %kwargs.addr = alloca ptr, align 8
  %nargs = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %f = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !8798, metadata !DIExpression()), !dbg !8806
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !8799, metadata !DIExpression()), !dbg !8807
  store i64 %_nargs, ptr %_nargs.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %_nargs.addr, metadata !8800, metadata !DIExpression()), !dbg !8808
  store ptr %kwargs, ptr %kwargs.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwargs.addr, metadata !8801, metadata !DIExpression()), !dbg !8809
  call void @llvm.lifetime.start.p0(i64 8, ptr %nargs) #11, !dbg !8810
  tail call void @llvm.dbg.declare(metadata ptr %nargs, metadata !8802, metadata !DIExpression()), !dbg !8811
  %0 = load i64, ptr %_nargs.addr, align 8, !dbg !8812, !tbaa !2597
  %call = call i64 @PyVectorcall_NARGS(i64 noundef %0), !dbg !8812
  store i64 %call, ptr %nargs, align 8, !dbg !8811, !tbaa !2597
  %1 = load i64, ptr %nargs, align 8, !dbg !8813, !tbaa !2597
  %cmp = icmp eq i64 %1, 0, !dbg !8815
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8816

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %kwargs.addr, align 8, !dbg !8817, !tbaa !1899
  %cmp1 = icmp eq ptr %2, null, !dbg !8818
  br i1 %cmp1, label %if.then, label %if.else, !dbg !8819

if.then:                                          ; preds = %land.lhs.true
  %3 = load ptr, ptr %func.addr, align 8, !dbg !8820, !tbaa !1899
  %call2 = call ptr @Py_TYPE(ptr noundef %3), !dbg !8820
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8820, !tbaa !1899
  %__pyx_CyFunctionType = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 6, !dbg !8820
  %5 = load ptr, ptr %__pyx_CyFunctionType, align 8, !dbg !8820, !tbaa !2815
  %call3 = call i32 @__Pyx_IsAnySubtype2(ptr noundef %call2, ptr noundef %5, ptr noundef @PyCFunction_Type), !dbg !8820
  %tobool = icmp ne i32 %call3, 0, !dbg !8820
  br i1 %tobool, label %land.lhs.true4, label %if.end, !dbg !8823

land.lhs.true4:                                   ; preds = %if.then
  %6 = load ptr, ptr %func.addr, align 8, !dbg !8824, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %6, i32 0, i32 1, !dbg !8824
  %7 = load ptr, ptr %m_ml, align 8, !dbg !8824, !tbaa !4746
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %7, i32 0, i32 2, !dbg !8824
  %8 = load i32, ptr %ml_flags, align 8, !dbg !8824, !tbaa !4755
  %and = and i32 %8, 4, !dbg !8824
  %tobool5 = icmp ne i32 %and, 0, !dbg !8824
  %lnot = xor i1 %tobool5, true, !dbg !8824
  %lnot6 = xor i1 %lnot, true, !dbg !8824
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !8824
  %conv = sext i32 %lnot.ext to i64, !dbg !8824
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8824
  %tobool7 = icmp ne i64 %expval, 0, !dbg !8824
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !8825

if.then8:                                         ; preds = %land.lhs.true4
  %9 = load ptr, ptr %func.addr, align 8, !dbg !8826, !tbaa !1899
  %call9 = call ptr @__Pyx_PyObject_CallMethO(ptr noundef %9, ptr noundef null), !dbg !8827
  store ptr %call9, ptr %retval, align 8, !dbg !8828
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup52, !dbg !8828

if.end:                                           ; preds = %land.lhs.true4, %if.then
  br label %if.end36, !dbg !8829

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load i64, ptr %nargs, align 8, !dbg !8830, !tbaa !2597
  %cmp10 = icmp eq i64 %10, 1, !dbg !8832
  br i1 %cmp10, label %land.lhs.true12, label %if.end35, !dbg !8833

land.lhs.true12:                                  ; preds = %if.else
  %11 = load ptr, ptr %kwargs.addr, align 8, !dbg !8834, !tbaa !1899
  %cmp13 = icmp eq ptr %11, null, !dbg !8835
  br i1 %cmp13, label %if.then15, label %if.end35, !dbg !8836

if.then15:                                        ; preds = %land.lhs.true12
  %12 = load ptr, ptr %func.addr, align 8, !dbg !8837, !tbaa !1899
  %call16 = call ptr @Py_TYPE(ptr noundef %12), !dbg !8837
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8837, !tbaa !1899
  %__pyx_CyFunctionType17 = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 6, !dbg !8837
  %14 = load ptr, ptr %__pyx_CyFunctionType17, align 8, !dbg !8837, !tbaa !2815
  %call18 = call i32 @__Pyx_IsAnySubtype2(ptr noundef %call16, ptr noundef %14, ptr noundef @PyCFunction_Type), !dbg !8837
  %tobool19 = icmp ne i32 %call18, 0, !dbg !8837
  br i1 %tobool19, label %land.lhs.true20, label %if.end34, !dbg !8840

land.lhs.true20:                                  ; preds = %if.then15
  %15 = load ptr, ptr %func.addr, align 8, !dbg !8841, !tbaa !1899
  %m_ml21 = getelementptr inbounds %struct.PyCFunctionObject, ptr %15, i32 0, i32 1, !dbg !8841
  %16 = load ptr, ptr %m_ml21, align 8, !dbg !8841, !tbaa !4746
  %ml_flags22 = getelementptr inbounds %struct.PyMethodDef, ptr %16, i32 0, i32 2, !dbg !8841
  %17 = load i32, ptr %ml_flags22, align 8, !dbg !8841, !tbaa !4755
  %and23 = and i32 %17, 8, !dbg !8841
  %tobool24 = icmp ne i32 %and23, 0, !dbg !8841
  %lnot25 = xor i1 %tobool24, true, !dbg !8841
  %lnot27 = xor i1 %lnot25, true, !dbg !8841
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !8841
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !8841
  %expval30 = call i64 @llvm.expect.i64(i64 %conv29, i64 1), !dbg !8841
  %tobool31 = icmp ne i64 %expval30, 0, !dbg !8841
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !8842

if.then32:                                        ; preds = %land.lhs.true20
  %18 = load ptr, ptr %func.addr, align 8, !dbg !8843, !tbaa !1899
  %19 = load ptr, ptr %args.addr, align 8, !dbg !8844, !tbaa !1899
  %arrayidx = getelementptr ptr, ptr %19, i64 0, !dbg !8844
  %20 = load ptr, ptr %arrayidx, align 8, !dbg !8844, !tbaa !1899
  %call33 = call ptr @__Pyx_PyObject_CallMethO(ptr noundef %18, ptr noundef %20), !dbg !8845
  store ptr %call33, ptr %retval, align 8, !dbg !8846
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup52, !dbg !8846

if.end34:                                         ; preds = %land.lhs.true20, %if.then15
  br label %if.end35, !dbg !8847

if.end35:                                         ; preds = %if.end34, %land.lhs.true12, %if.else
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end
  %21 = load ptr, ptr %kwargs.addr, align 8, !dbg !8848, !tbaa !1899
  %cmp37 = icmp eq ptr %21, null, !dbg !8849
  br i1 %cmp37, label %if.then39, label %if.end45, !dbg !8850

if.then39:                                        ; preds = %if.end36
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #11, !dbg !8851
  tail call void @llvm.dbg.declare(metadata ptr %f, metadata !8803, metadata !DIExpression()), !dbg !8852
  %22 = load ptr, ptr %func.addr, align 8, !dbg !8853, !tbaa !1899
  %call40 = call ptr @PyVectorcall_Function(ptr noundef %22), !dbg !8854
  store ptr %call40, ptr %f, align 8, !dbg !8852, !tbaa !1899
  %23 = load ptr, ptr %f, align 8, !dbg !8855, !tbaa !1899
  %tobool41 = icmp ne ptr %23, null, !dbg !8855
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !8857

if.then42:                                        ; preds = %if.then39
  %24 = load ptr, ptr %f, align 8, !dbg !8858, !tbaa !1899
  %25 = load ptr, ptr %func.addr, align 8, !dbg !8860, !tbaa !1899
  %26 = load ptr, ptr %args.addr, align 8, !dbg !8861, !tbaa !1899
  %27 = load i64, ptr %nargs, align 8, !dbg !8862, !tbaa !2597
  %call43 = call ptr %24(ptr noundef %25, ptr noundef %26, i64 noundef %27, ptr noundef null), !dbg !8858
  store ptr %call43, ptr %retval, align 8, !dbg !8863
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8863

if.end44:                                         ; preds = %if.then39
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8864
  br label %cleanup, !dbg !8864

cleanup:                                          ; preds = %if.end44, %if.then42
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #11, !dbg !8864
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup52 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end45, !dbg !8865

if.end45:                                         ; preds = %cleanup.cont, %if.end36
  %28 = load i64, ptr %nargs, align 8, !dbg !8866, !tbaa !2597
  %cmp46 = icmp eq i64 %28, 0, !dbg !8868
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !8869

if.then48:                                        ; preds = %if.end45
  %29 = load ptr, ptr %func.addr, align 8, !dbg !8870, !tbaa !1899
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !8872, !tbaa !1899
  %__pyx_empty_tuple = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 3, !dbg !8872
  %31 = load ptr, ptr %__pyx_empty_tuple, align 8, !dbg !8872, !tbaa !2075
  %32 = load ptr, ptr %kwargs.addr, align 8, !dbg !8873, !tbaa !1899
  %call49 = call ptr @__Pyx_PyObject_Call(ptr noundef %29, ptr noundef %31, ptr noundef %32), !dbg !8874
  store ptr %call49, ptr %retval, align 8, !dbg !8875
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup52, !dbg !8875

if.end50:                                         ; preds = %if.end45
  %33 = load ptr, ptr %func.addr, align 8, !dbg !8876, !tbaa !1899
  %34 = load ptr, ptr %args.addr, align 8, !dbg !8877, !tbaa !1899
  %35 = load i64, ptr %nargs, align 8, !dbg !8878, !tbaa !2597
  %36 = load ptr, ptr %kwargs.addr, align 8, !dbg !8879, !tbaa !1899
  %call51 = call ptr @PyObject_VectorcallDict(ptr noundef %33, ptr noundef %34, i64 noundef %35, ptr noundef %36), !dbg !8880
  store ptr %call51, ptr %retval, align 8, !dbg !8881
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup52, !dbg !8881

cleanup52:                                        ; preds = %if.end50, %if.then48, %cleanup, %if.then32, %if.then8
  call void @llvm.lifetime.end.p0(i64 8, ptr %nargs) #11, !dbg !8882
  %37 = load ptr, ptr %retval, align 8, !dbg !8882
  ret ptr %37, !dbg !8882
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyList_GET_SIZE(ptr noundef %op) #3 !dbg !8883 {
entry:
  %op.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !8885, metadata !DIExpression()), !dbg !8887
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #11, !dbg !8888
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !8886, metadata !DIExpression()), !dbg !8889
  %0 = load ptr, ptr %op.addr, align 8, !dbg !8890, !tbaa !1899
  store ptr %0, ptr %list, align 8, !dbg !8889, !tbaa !1899
  %1 = load ptr, ptr %list, align 8, !dbg !8891, !tbaa !1899
  %call = call i64 @Py_SIZE(ptr noundef %1), !dbg !8891
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #11, !dbg !8892
  ret i64 %call, !dbg !8893
}

declare !dbg !8894 ptr @PyObject_GetIter(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyObject_IsTrue(ptr noundef %x) #3 !dbg !8896 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca ptr, align 8
  %is_true = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !8898, metadata !DIExpression()), !dbg !8900
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_true) #11, !dbg !8901
  tail call void @llvm.dbg.declare(metadata ptr %is_true, metadata !8899, metadata !DIExpression()), !dbg !8902
  %0 = load ptr, ptr %x.addr, align 8, !dbg !8903, !tbaa !1899
  %cmp = icmp eq ptr %0, @_Py_TrueStruct, !dbg !8904
  %conv = zext i1 %cmp to i32, !dbg !8904
  store i32 %conv, ptr %is_true, align 4, !dbg !8902, !tbaa !1984
  %1 = load i32, ptr %is_true, align 4, !dbg !8905, !tbaa !1984
  %2 = load ptr, ptr %x.addr, align 8, !dbg !8907, !tbaa !1899
  %cmp1 = icmp eq ptr %2, @_Py_FalseStruct, !dbg !8908
  %conv2 = zext i1 %cmp1 to i32, !dbg !8908
  %or = or i32 %1, %conv2, !dbg !8909
  %3 = load ptr, ptr %x.addr, align 8, !dbg !8910, !tbaa !1899
  %cmp3 = icmp eq ptr %3, @_Py_NoneStruct, !dbg !8911
  %conv4 = zext i1 %cmp3 to i32, !dbg !8911
  %or5 = or i32 %or, %conv4, !dbg !8912
  %tobool = icmp ne i32 %or5, 0, !dbg !8912
  br i1 %tobool, label %if.then, label %if.else, !dbg !8913

if.then:                                          ; preds = %entry
  %4 = load i32, ptr %is_true, align 4, !dbg !8914, !tbaa !1984
  store i32 %4, ptr %retval, align 4, !dbg !8915
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8915

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %x.addr, align 8, !dbg !8916, !tbaa !1899
  %call = call i32 @PyObject_IsTrue(ptr noundef %5), !dbg !8917
  store i32 %call, ptr %retval, align 4, !dbg !8918
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8918

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_true) #11, !dbg !8919
  %6 = load i32, ptr %retval, align 4, !dbg !8919
  ret i32 %6, !dbg !8919
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef %expected, ptr noundef %obj) #0 !dbg !8920 {
entry:
  %expected.addr = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %obj_type_name = alloca ptr, align 8
  store ptr %expected, ptr %expected.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %expected.addr, metadata !8924, metadata !DIExpression()), !dbg !8927
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !8925, metadata !DIExpression()), !dbg !8928
  call void @llvm.lifetime.start.p0(i64 8, ptr %obj_type_name) #11, !dbg !8929
  tail call void @llvm.dbg.declare(metadata ptr %obj_type_name, metadata !8926, metadata !DIExpression()), !dbg !8930
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !8931, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !8931
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call, i32 0, i32 1, !dbg !8931
  %1 = load ptr, ptr %tp_name, align 8, !dbg !8931, !tbaa !4021
  store ptr %1, ptr %obj_type_name, align 8, !dbg !8930, !tbaa !1899
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !8932, !tbaa !1899
  %3 = load ptr, ptr %expected.addr, align 8, !dbg !8933, !tbaa !1899
  %4 = load ptr, ptr %obj_type_name, align 8, !dbg !8934, !tbaa !1899
  %call1 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %2, ptr noundef @.str.95, ptr noundef %3, ptr noundef %4), !dbg !8935
  call void @llvm.lifetime.end.p0(i64 8, ptr %obj_type_name) #11, !dbg !8936
  ret i32 0, !dbg !8937
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethod0(ptr noundef %obj, ptr noundef %method_name) #0 !dbg !8938 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %method_name.addr = alloca ptr, align 8
  %method = alloca ptr, align 8
  %result = alloca ptr, align 8
  %is_method = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !8940, metadata !DIExpression()), !dbg !8946
  store ptr %method_name, ptr %method_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %method_name.addr, metadata !8941, metadata !DIExpression()), !dbg !8947
  call void @llvm.lifetime.start.p0(i64 8, ptr %method) #11, !dbg !8948
  tail call void @llvm.dbg.declare(metadata ptr %method, metadata !8942, metadata !DIExpression()), !dbg !8949
  store ptr null, ptr %method, align 8, !dbg !8949, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !8948
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !8943, metadata !DIExpression()), !dbg !8950
  store ptr null, ptr %result, align 8, !dbg !8950, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_method) #11, !dbg !8951
  tail call void @llvm.dbg.declare(metadata ptr %is_method, metadata !8944, metadata !DIExpression()), !dbg !8952
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !8953, !tbaa !1899
  %1 = load ptr, ptr %method_name.addr, align 8, !dbg !8954, !tbaa !1899
  %call = call i32 @__Pyx_PyObject_GetMethod(ptr noundef %0, ptr noundef %1, ptr noundef %method), !dbg !8955
  store i32 %call, ptr %is_method, align 4, !dbg !8952, !tbaa !1984
  %2 = load i32, ptr %is_method, align 4, !dbg !8956, !tbaa !1984
  %tobool = icmp ne i32 %2, 0, !dbg !8956
  %lnot = xor i1 %tobool, true, !dbg !8956
  %lnot1 = xor i1 %lnot, true, !dbg !8956
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8956
  %conv = sext i32 %lnot.ext to i64, !dbg !8956
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8956
  %tobool2 = icmp ne i64 %expval, 0, !dbg !8956
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8958

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %method, align 8, !dbg !8959, !tbaa !1899
  %4 = load ptr, ptr %obj.addr, align 8, !dbg !8961, !tbaa !1899
  %call3 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %3, ptr noundef %4), !dbg !8962
  store ptr %call3, ptr %result, align 8, !dbg !8963, !tbaa !1899
  %5 = load ptr, ptr %method, align 8, !dbg !8964, !tbaa !1899
  call void @Py_DECREF(ptr noundef %5), !dbg !8964
  %6 = load ptr, ptr %result, align 8, !dbg !8965, !tbaa !1899
  store ptr %6, ptr %retval, align 8, !dbg !8966
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8966

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %method, align 8, !dbg !8967, !tbaa !1899
  %tobool4 = icmp ne ptr %7, null, !dbg !8967
  %lnot5 = xor i1 %tobool4, true, !dbg !8967
  %lnot7 = xor i1 %lnot5, true, !dbg !8967
  %lnot9 = xor i1 %lnot7, true, !dbg !8967
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !8967
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !8967
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !8967
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !8967
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8969

if.then14:                                        ; preds = %if.end
  br label %bad, !dbg !8970

if.end15:                                         ; preds = %if.end
  %8 = load ptr, ptr %method, align 8, !dbg !8971, !tbaa !1899
  %call16 = call ptr @__Pyx_PyObject_CallNoArg(ptr noundef %8), !dbg !8972
  store ptr %call16, ptr %result, align 8, !dbg !8973, !tbaa !1899
  %9 = load ptr, ptr %method, align 8, !dbg !8974, !tbaa !1899
  call void @Py_DECREF(ptr noundef %9), !dbg !8974
  br label %bad, !dbg !8974

bad:                                              ; preds = %if.end15, %if.then14
  tail call void @llvm.dbg.label(metadata !8945), !dbg !8975
  %10 = load ptr, ptr %result, align 8, !dbg !8976, !tbaa !1899
  store ptr %10, ptr %retval, align 8, !dbg !8977
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8977

cleanup:                                          ; preds = %bad, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_method) #11, !dbg !8978
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !8978
  call void @llvm.lifetime.end.p0(i64 8, ptr %method) #11, !dbg !8978
  %11 = load ptr, ptr %retval, align 8, !dbg !8978
  ret ptr %11, !dbg !8978
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyObject_GetMethod(ptr noundef %obj, ptr noundef %name, ptr noundef %method) #0 !dbg !8979 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %method.addr = alloca ptr, align 8
  %attr = alloca ptr, align 8
  %type_name = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %descr = alloca ptr, align 8
  %f = alloca ptr, align 8
  %dictptr = alloca ptr, align 8
  %dict = alloca ptr, align 8
  %meth_found = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %function = alloca ptr, align 8
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !8983, metadata !DIExpression()), !dbg !8998
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !8984, metadata !DIExpression()), !dbg !8999
  store ptr %method, ptr %method.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %method.addr, metadata !8985, metadata !DIExpression()), !dbg !9000
  call void @llvm.lifetime.start.p0(i64 8, ptr %attr) #11, !dbg !9001
  tail call void @llvm.dbg.declare(metadata ptr %attr, metadata !8986, metadata !DIExpression()), !dbg !9002
  call void @llvm.lifetime.start.p0(i64 8, ptr %type_name) #11, !dbg !9003
  tail call void @llvm.dbg.declare(metadata ptr %type_name, metadata !8987, metadata !DIExpression()), !dbg !9004
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #11, !dbg !9005
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !8988, metadata !DIExpression()), !dbg !9006
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !9007, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !9007
  store ptr %call, ptr %tp, align 8, !dbg !9006, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %descr) #11, !dbg !9008
  tail call void @llvm.dbg.declare(metadata ptr %descr, metadata !8989, metadata !DIExpression()), !dbg !9009
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #11, !dbg !9010
  tail call void @llvm.dbg.declare(metadata ptr %f, metadata !8990, metadata !DIExpression()), !dbg !9011
  store ptr null, ptr %f, align 8, !dbg !9011, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %dictptr) #11, !dbg !9012
  tail call void @llvm.dbg.declare(metadata ptr %dictptr, metadata !8991, metadata !DIExpression()), !dbg !9013
  call void @llvm.lifetime.start.p0(i64 8, ptr %dict) #11, !dbg !9012
  tail call void @llvm.dbg.declare(metadata ptr %dict, metadata !8992, metadata !DIExpression()), !dbg !9014
  call void @llvm.lifetime.start.p0(i64 4, ptr %meth_found) #11, !dbg !9015
  tail call void @llvm.dbg.declare(metadata ptr %meth_found, metadata !8993, metadata !DIExpression()), !dbg !9016
  store i32 0, ptr %meth_found, align 4, !dbg !9016, !tbaa !1984
  %1 = load ptr, ptr %tp, align 8, !dbg !9017, !tbaa !1899
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16, !dbg !9017
  %2 = load ptr, ptr %tp_getattro, align 8, !dbg !9017, !tbaa !3256
  %cmp = icmp ne ptr %2, @PyObject_GenericGetAttr, !dbg !9017
  %lnot = xor i1 %cmp, true, !dbg !9017
  %lnot1 = xor i1 %lnot, true, !dbg !9017
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9017
  %conv = sext i32 %lnot.ext to i64, !dbg !9017
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9017
  %tobool = icmp ne i64 %expval, 0, !dbg !9017
  br i1 %tobool, label %if.then, label %if.end, !dbg !9019

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %obj.addr, align 8, !dbg !9020, !tbaa !1899
  %4 = load ptr, ptr %name.addr, align 8, !dbg !9022, !tbaa !1899
  %call2 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %3, ptr noundef %4), !dbg !9023
  store ptr %call2, ptr %attr, align 8, !dbg !9024, !tbaa !1899
  br label %try_unpack, !dbg !9025

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %tp, align 8, !dbg !9026, !tbaa !1899
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 31, !dbg !9026
  %6 = load ptr, ptr %tp_dict, align 8, !dbg !9026, !tbaa !2420
  %cmp3 = icmp eq ptr %6, null, !dbg !9026
  %lnot5 = xor i1 %cmp3, true, !dbg !9026
  %lnot7 = xor i1 %lnot5, true, !dbg !9026
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9026
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !9026
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !9026
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !9026
  br i1 %tobool11, label %land.lhs.true, label %if.end23, !dbg !9028

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %tp, align 8, !dbg !9029, !tbaa !1899
  %call12 = call i32 @PyType_Ready(ptr noundef %7), !dbg !9029
  %cmp13 = icmp slt i32 %call12, 0, !dbg !9029
  %lnot15 = xor i1 %cmp13, true, !dbg !9029
  %lnot17 = xor i1 %lnot15, true, !dbg !9029
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !9029
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !9029
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !9029
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !9029
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !9030

if.then22:                                        ; preds = %land.lhs.true
  store i32 0, ptr %retval, align 4, !dbg !9031
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9031

if.end23:                                         ; preds = %land.lhs.true, %if.end
  %8 = load ptr, ptr %tp, align 8, !dbg !9033, !tbaa !1899
  %9 = load ptr, ptr %name.addr, align 8, !dbg !9034, !tbaa !1899
  %call24 = call ptr @_PyType_Lookup(ptr noundef %8, ptr noundef %9), !dbg !9035
  store ptr %call24, ptr %descr, align 8, !dbg !9036, !tbaa !1899
  %10 = load ptr, ptr %descr, align 8, !dbg !9037, !tbaa !1899
  %cmp25 = icmp ne ptr %10, null, !dbg !9037
  %lnot27 = xor i1 %cmp25, true, !dbg !9037
  %lnot29 = xor i1 %lnot27, true, !dbg !9037
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !9037
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !9037
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 1), !dbg !9037
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !9037
  br i1 %tobool33, label %if.then34, label %if.end50, !dbg !9039

if.then34:                                        ; preds = %if.end23
  %11 = load ptr, ptr %descr, align 8, !dbg !9040, !tbaa !1899
  call void @Py_INCREF(ptr noundef %11), !dbg !9040
  %12 = load ptr, ptr %descr, align 8, !dbg !9042, !tbaa !1899
  %call35 = call ptr @Py_TYPE(ptr noundef %12), !dbg !9042
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %call35, i32 0, i32 19, !dbg !9042
  %13 = load i64, ptr %tp_flags, align 8, !dbg !9042, !tbaa !4160
  %and = and i64 %13, 131072, !dbg !9042
  %cmp36 = icmp ne i64 %and, 0, !dbg !9042
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !9044

if.then38:                                        ; preds = %if.then34
  store i32 1, ptr %meth_found, align 4, !dbg !9045, !tbaa !1984
  br label %if.end49, !dbg !9047

if.else:                                          ; preds = %if.then34
  %14 = load ptr, ptr %descr, align 8, !dbg !9048, !tbaa !1899
  %call39 = call ptr @Py_TYPE(ptr noundef %14), !dbg !9048
  %tp_descr_get = getelementptr inbounds %struct._typeobject, ptr %call39, i32 0, i32 32, !dbg !9050
  %15 = load ptr, ptr %tp_descr_get, align 8, !dbg !9050, !tbaa !9051
  store ptr %15, ptr %f, align 8, !dbg !9052, !tbaa !1899
  %16 = load ptr, ptr %f, align 8, !dbg !9053, !tbaa !1899
  %cmp40 = icmp ne ptr %16, null, !dbg !9055
  br i1 %cmp40, label %land.lhs.true42, label %if.end48, !dbg !9056

land.lhs.true42:                                  ; preds = %if.else
  %17 = load ptr, ptr %descr, align 8, !dbg !9057, !tbaa !1899
  %call43 = call i32 @PyDescr_IsData(ptr noundef %17), !dbg !9058
  %tobool44 = icmp ne i32 %call43, 0, !dbg !9058
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !9059

if.then45:                                        ; preds = %land.lhs.true42
  %18 = load ptr, ptr %f, align 8, !dbg !9060, !tbaa !1899
  %19 = load ptr, ptr %descr, align 8, !dbg !9062, !tbaa !1899
  %20 = load ptr, ptr %obj.addr, align 8, !dbg !9063, !tbaa !1899
  %21 = load ptr, ptr %obj.addr, align 8, !dbg !9064, !tbaa !1899
  %call46 = call ptr @Py_TYPE(ptr noundef %21), !dbg !9064
  %call47 = call ptr %18(ptr noundef %19, ptr noundef %20, ptr noundef %call46), !dbg !9060
  store ptr %call47, ptr %attr, align 8, !dbg !9065, !tbaa !1899
  %22 = load ptr, ptr %descr, align 8, !dbg !9066, !tbaa !1899
  call void @Py_DECREF(ptr noundef %22), !dbg !9066
  br label %try_unpack, !dbg !9067

if.end48:                                         ; preds = %land.lhs.true42, %if.else
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then38
  br label %if.end50, !dbg !9068

if.end50:                                         ; preds = %if.end49, %if.end23
  %23 = load ptr, ptr %obj.addr, align 8, !dbg !9069, !tbaa !1899
  %call51 = call ptr @_PyObject_GetDictPtr(ptr noundef %23), !dbg !9070
  store ptr %call51, ptr %dictptr, align 8, !dbg !9071, !tbaa !1899
  %24 = load ptr, ptr %dictptr, align 8, !dbg !9072, !tbaa !1899
  %cmp52 = icmp ne ptr %24, null, !dbg !9074
  br i1 %cmp52, label %land.lhs.true54, label %if.end63, !dbg !9075

land.lhs.true54:                                  ; preds = %if.end50
  %25 = load ptr, ptr %dictptr, align 8, !dbg !9076, !tbaa !1899
  %26 = load ptr, ptr %25, align 8, !dbg !9077, !tbaa !1899
  store ptr %26, ptr %dict, align 8, !dbg !9078, !tbaa !1899
  %cmp55 = icmp ne ptr %26, null, !dbg !9079
  br i1 %cmp55, label %if.then57, label %if.end63, !dbg !9080

if.then57:                                        ; preds = %land.lhs.true54
  %27 = load ptr, ptr %dict, align 8, !dbg !9081, !tbaa !1899
  call void @Py_INCREF(ptr noundef %27), !dbg !9081
  %28 = load ptr, ptr %dict, align 8, !dbg !9083, !tbaa !1899
  %29 = load ptr, ptr %name.addr, align 8, !dbg !9084, !tbaa !1899
  %call58 = call ptr @__Pyx_PyDict_GetItemStr(ptr noundef %28, ptr noundef %29), !dbg !9085
  store ptr %call58, ptr %attr, align 8, !dbg !9086, !tbaa !1899
  %30 = load ptr, ptr %attr, align 8, !dbg !9087, !tbaa !1899
  %cmp59 = icmp ne ptr %30, null, !dbg !9089
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !9090

if.then61:                                        ; preds = %if.then57
  %31 = load ptr, ptr %attr, align 8, !dbg !9091, !tbaa !1899
  call void @Py_INCREF(ptr noundef %31), !dbg !9091
  %32 = load ptr, ptr %dict, align 8, !dbg !9093, !tbaa !1899
  call void @Py_DECREF(ptr noundef %32), !dbg !9093
  %33 = load ptr, ptr %descr, align 8, !dbg !9094, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %33), !dbg !9094
  br label %try_unpack, !dbg !9095

if.end62:                                         ; preds = %if.then57
  %34 = load ptr, ptr %dict, align 8, !dbg !9096, !tbaa !1899
  call void @Py_DECREF(ptr noundef %34), !dbg !9096
  br label %if.end63, !dbg !9097

if.end63:                                         ; preds = %if.end62, %land.lhs.true54, %if.end50
  %35 = load i32, ptr %meth_found, align 4, !dbg !9098, !tbaa !1984
  %tobool64 = icmp ne i32 %35, 0, !dbg !9098
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !9100

if.then65:                                        ; preds = %if.end63
  %36 = load ptr, ptr %descr, align 8, !dbg !9101, !tbaa !1899
  %37 = load ptr, ptr %method.addr, align 8, !dbg !9103, !tbaa !1899
  store ptr %36, ptr %37, align 8, !dbg !9104, !tbaa !1899
  store i32 1, ptr %retval, align 4, !dbg !9105
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9105

if.end66:                                         ; preds = %if.end63
  %38 = load ptr, ptr %f, align 8, !dbg !9106, !tbaa !1899
  %cmp67 = icmp ne ptr %38, null, !dbg !9108
  br i1 %cmp67, label %if.then69, label %if.end72, !dbg !9109

if.then69:                                        ; preds = %if.end66
  %39 = load ptr, ptr %f, align 8, !dbg !9110, !tbaa !1899
  %40 = load ptr, ptr %descr, align 8, !dbg !9112, !tbaa !1899
  %41 = load ptr, ptr %obj.addr, align 8, !dbg !9113, !tbaa !1899
  %42 = load ptr, ptr %obj.addr, align 8, !dbg !9114, !tbaa !1899
  %call70 = call ptr @Py_TYPE(ptr noundef %42), !dbg !9114
  %call71 = call ptr %39(ptr noundef %40, ptr noundef %41, ptr noundef %call70), !dbg !9110
  store ptr %call71, ptr %attr, align 8, !dbg !9115, !tbaa !1899
  %43 = load ptr, ptr %descr, align 8, !dbg !9116, !tbaa !1899
  call void @Py_DECREF(ptr noundef %43), !dbg !9116
  br label %try_unpack, !dbg !9117

if.end72:                                         ; preds = %if.end66
  %44 = load ptr, ptr %descr, align 8, !dbg !9118, !tbaa !1899
  %cmp73 = icmp ne ptr %44, null, !dbg !9118
  %lnot75 = xor i1 %cmp73, true, !dbg !9118
  %lnot77 = xor i1 %lnot75, true, !dbg !9118
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !9118
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !9118
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 1), !dbg !9118
  %tobool81 = icmp ne i64 %expval80, 0, !dbg !9118
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !9120

if.then82:                                        ; preds = %if.end72
  %45 = load ptr, ptr %descr, align 8, !dbg !9121, !tbaa !1899
  %46 = load ptr, ptr %method.addr, align 8, !dbg !9123, !tbaa !1899
  store ptr %45, ptr %46, align 8, !dbg !9124, !tbaa !1899
  store i32 0, ptr %retval, align 4, !dbg !9125
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9125

if.end83:                                         ; preds = %if.end72
  %47 = load ptr, ptr %tp, align 8, !dbg !9126, !tbaa !1899
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %47, i32 0, i32 1, !dbg !9126
  %48 = load ptr, ptr %tp_name, align 8, !dbg !9126, !tbaa !4021
  store ptr %48, ptr %type_name, align 8, !dbg !9127, !tbaa !1899
  %49 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !9128, !tbaa !1899
  %50 = load ptr, ptr %type_name, align 8, !dbg !9129, !tbaa !1899
  %51 = load ptr, ptr %name.addr, align 8, !dbg !9130, !tbaa !1899
  %call84 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %49, ptr noundef @.str.81, ptr noundef %50, ptr noundef %51), !dbg !9131
  store i32 0, ptr %retval, align 4, !dbg !9132
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9132

try_unpack:                                       ; preds = %if.then69, %if.then61, %if.then45, %if.then
  tail call void @llvm.dbg.label(metadata !8994), !dbg !9133
  %52 = load ptr, ptr %attr, align 8, !dbg !9134, !tbaa !1899
  %tobool85 = icmp ne ptr %52, null, !dbg !9134
  %lnot86 = xor i1 %tobool85, true, !dbg !9134
  %lnot88 = xor i1 %lnot86, true, !dbg !9134
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !9134
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !9134
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 1), !dbg !9134
  %tobool92 = icmp ne i64 %expval91, 0, !dbg !9134
  br i1 %tobool92, label %land.lhs.true93, label %if.end107, !dbg !9135

land.lhs.true93:                                  ; preds = %try_unpack
  %53 = load ptr, ptr %attr, align 8, !dbg !9136, !tbaa !1899
  %call94 = call i32 @Py_IS_TYPE(ptr noundef %53, ptr noundef @PyMethod_Type), !dbg !9136
  %tobool95 = icmp ne i32 %call94, 0, !dbg !9136
  br i1 %tobool95, label %land.lhs.true96, label %if.end107, !dbg !9137

land.lhs.true96:                                  ; preds = %land.lhs.true93
  %54 = load ptr, ptr %attr, align 8, !dbg !9138, !tbaa !1899
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %54, i32 0, i32 2, !dbg !9138
  %55 = load ptr, ptr %im_self, align 8, !dbg !9138, !tbaa !6934
  %56 = load ptr, ptr %obj.addr, align 8, !dbg !9138, !tbaa !1899
  %cmp97 = icmp eq ptr %55, %56, !dbg !9138
  %lnot99 = xor i1 %cmp97, true, !dbg !9138
  %lnot101 = xor i1 %lnot99, true, !dbg !9138
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !9138
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !9138
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 1), !dbg !9138
  %tobool105 = icmp ne i64 %expval104, 0, !dbg !9138
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !9139

if.then106:                                       ; preds = %land.lhs.true96
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #11, !dbg !9140
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !8995, metadata !DIExpression()), !dbg !9141
  %57 = load ptr, ptr %attr, align 8, !dbg !9142, !tbaa !1899
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %57, i32 0, i32 1, !dbg !9142
  %58 = load ptr, ptr %im_func, align 8, !dbg !9142, !tbaa !6942
  store ptr %58, ptr %function, align 8, !dbg !9141, !tbaa !1899
  %59 = load ptr, ptr %function, align 8, !dbg !9143, !tbaa !1899
  call void @Py_INCREF(ptr noundef %59), !dbg !9143
  %60 = load ptr, ptr %attr, align 8, !dbg !9144, !tbaa !1899
  call void @Py_DECREF(ptr noundef %60), !dbg !9144
  %61 = load ptr, ptr %function, align 8, !dbg !9145, !tbaa !1899
  %62 = load ptr, ptr %method.addr, align 8, !dbg !9146, !tbaa !1899
  store ptr %61, ptr %62, align 8, !dbg !9147, !tbaa !1899
  store i32 1, ptr %retval, align 4, !dbg !9148
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #11, !dbg !9149
  br label %cleanup

if.end107:                                        ; preds = %land.lhs.true96, %land.lhs.true93, %try_unpack
  %63 = load ptr, ptr %attr, align 8, !dbg !9150, !tbaa !1899
  %64 = load ptr, ptr %method.addr, align 8, !dbg !9151, !tbaa !1899
  store ptr %63, ptr %64, align 8, !dbg !9152, !tbaa !1899
  store i32 0, ptr %retval, align 4, !dbg !9153
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9153

cleanup:                                          ; preds = %if.end107, %if.then106, %if.end83, %if.then82, %if.then65, %if.then22
  call void @llvm.lifetime.end.p0(i64 4, ptr %meth_found) #11, !dbg !9154
  call void @llvm.lifetime.end.p0(i64 8, ptr %dict) #11, !dbg !9154
  call void @llvm.lifetime.end.p0(i64 8, ptr %dictptr) #11, !dbg !9154
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #11, !dbg !9154
  call void @llvm.lifetime.end.p0(i64 8, ptr %descr) #11, !dbg !9154
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #11, !dbg !9154
  call void @llvm.lifetime.end.p0(i64 8, ptr %type_name) #11, !dbg !9154
  call void @llvm.lifetime.end.p0(i64 8, ptr %attr) #11, !dbg !9154
  %65 = load i32, ptr %retval, align 4, !dbg !9154
  ret i32 %65, !dbg !9154
}

declare !dbg !9155 ptr @_PyType_Lookup(ptr noundef, ptr noundef) #1

declare !dbg !9158 i32 @PyDescr_IsData(ptr noundef) #1

declare !dbg !9160 ptr @_PyObject_GetDictPtr(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyDict_GetItemStr(ptr noundef %dict, ptr noundef %name) #3 !dbg !9163 {
entry:
  %dict.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %res = alloca ptr, align 8
  store ptr %dict, ptr %dict.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %dict.addr, metadata !9165, metadata !DIExpression()), !dbg !9168
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !9166, metadata !DIExpression()), !dbg !9169
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #11, !dbg !9170
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !9167, metadata !DIExpression()), !dbg !9171
  %0 = load ptr, ptr %dict.addr, align 8, !dbg !9172, !tbaa !1899
  %1 = load ptr, ptr %name.addr, align 8, !dbg !9172, !tbaa !1899
  %2 = load ptr, ptr %name.addr, align 8, !dbg !9172, !tbaa !1899
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %2, i32 0, i32 2, !dbg !9172
  %3 = load i64, ptr %hash, align 8, !dbg !9172, !tbaa !9173
  %call = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %0, ptr noundef %1, i64 noundef %3), !dbg !9172
  store ptr %call, ptr %res, align 8, !dbg !9171, !tbaa !1899
  %4 = load ptr, ptr %res, align 8, !dbg !9176, !tbaa !1899
  %cmp = icmp eq ptr %4, null, !dbg !9178
  br i1 %cmp, label %if.then, label %if.end, !dbg !9179

if.then:                                          ; preds = %entry
  call void @PyErr_Clear(), !dbg !9180
  br label %if.end, !dbg !9180

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %res, align 8, !dbg !9181, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #11, !dbg !9182
  ret ptr %5, !dbg !9183
}

declare !dbg !9184 ptr @_PyDict_GetItem_KnownHash(ptr noundef, ptr noundef, i64 noundef) #1

declare !dbg !9187 ptr @PyIter_Next(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IterFinish() #3 !dbg !9188 {
entry:
  %retval = alloca i32, align 4
  %__pyx_tstate = alloca ptr, align 8
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #11, !dbg !9192
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !9190, metadata !DIExpression()), !dbg !9192
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !9193
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !9193, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #11, !dbg !9194
  tail call void @llvm.dbg.declare(metadata ptr %exc_type, metadata !9191, metadata !DIExpression()), !dbg !9195
  %0 = load ptr, ptr %__pyx_tstate, align 8, !dbg !9196, !tbaa !1899
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !9196
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !9196, !tbaa !6018
  store ptr %1, ptr %exc_type, align 8, !dbg !9195, !tbaa !1899
  %2 = load ptr, ptr %exc_type, align 8, !dbg !9197, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !9197
  %lnot = xor i1 %tobool, true, !dbg !9197
  %lnot1 = xor i1 %lnot, true, !dbg !9197
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9197
  %conv = sext i32 %lnot.ext to i64, !dbg !9197
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9197
  %tobool2 = icmp ne i64 %expval, 0, !dbg !9197
  br i1 %tobool2, label %if.then, label %if.end15, !dbg !9199

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %exc_type, align 8, !dbg !9200, !tbaa !1899
  %4 = load ptr, ptr @PyExc_StopIteration, align 8, !dbg !9200, !tbaa !1899
  %call3 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %3, ptr noundef %4), !dbg !9200
  %tobool4 = icmp ne i32 %call3, 0, !dbg !9200
  %lnot5 = xor i1 %tobool4, true, !dbg !9200
  %lnot7 = xor i1 %lnot5, true, !dbg !9200
  %lnot9 = xor i1 %lnot7, true, !dbg !9200
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !9200
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !9200
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !9200
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !9200
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !9203

if.then14:                                        ; preds = %if.then
  store i32 -1, ptr %retval, align 4, !dbg !9204
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9204

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %__pyx_tstate, align 8, !dbg !9205, !tbaa !1899
  call void @__Pyx_ErrRestoreInState(ptr noundef %5, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !9205
  store i32 0, ptr %retval, align 4, !dbg !9206
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9206

if.end15:                                         ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !9207
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9207

cleanup:                                          ; preds = %if.end15, %if.end, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #11, !dbg !9208
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #11, !dbg !9208
  %6 = load i32, ptr %retval, align 4, !dbg !9208
  ret i32 %6, !dbg !9208
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_unpack_tuple2_exact(ptr noundef %tuple, ptr noundef %pvalue1, ptr noundef %pvalue2, i32 noundef %decref_tuple) #3 !dbg !9209 {
entry:
  %tuple.addr = alloca ptr, align 8
  %pvalue1.addr = alloca ptr, align 8
  %pvalue2.addr = alloca ptr, align 8
  %decref_tuple.addr = alloca i32, align 4
  %value1 = alloca ptr, align 8
  %value2 = alloca ptr, align 8
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !9213, metadata !DIExpression()), !dbg !9219
  store ptr %pvalue1, ptr %pvalue1.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %pvalue1.addr, metadata !9214, metadata !DIExpression()), !dbg !9220
  store ptr %pvalue2, ptr %pvalue2.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %pvalue2.addr, metadata !9215, metadata !DIExpression()), !dbg !9221
  store i32 %decref_tuple, ptr %decref_tuple.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %decref_tuple.addr, metadata !9216, metadata !DIExpression()), !dbg !9222
  call void @llvm.lifetime.start.p0(i64 8, ptr %value1) #11, !dbg !9223
  tail call void @llvm.dbg.declare(metadata ptr %value1, metadata !9217, metadata !DIExpression()), !dbg !9224
  store ptr null, ptr %value1, align 8, !dbg !9224, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %value2) #11, !dbg !9223
  tail call void @llvm.dbg.declare(metadata ptr %value2, metadata !9218, metadata !DIExpression()), !dbg !9225
  store ptr null, ptr %value2, align 8, !dbg !9225, !tbaa !1899
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !9226, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %0, i32 0, i32 1, !dbg !9226
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !9226
  %1 = load ptr, ptr %arrayidx, align 8, !dbg !9226, !tbaa !1899
  store ptr %1, ptr %value1, align 8, !dbg !9227, !tbaa !1899
  %2 = load ptr, ptr %value1, align 8, !dbg !9228, !tbaa !1899
  call void @Py_INCREF(ptr noundef %2), !dbg !9228
  %3 = load ptr, ptr %tuple.addr, align 8, !dbg !9229, !tbaa !1899
  %ob_item1 = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1, !dbg !9229
  %arrayidx2 = getelementptr [1 x ptr], ptr %ob_item1, i64 0, i64 1, !dbg !9229
  %4 = load ptr, ptr %arrayidx2, align 8, !dbg !9229, !tbaa !1899
  store ptr %4, ptr %value2, align 8, !dbg !9230, !tbaa !1899
  %5 = load ptr, ptr %value2, align 8, !dbg !9231, !tbaa !1899
  call void @Py_INCREF(ptr noundef %5), !dbg !9231
  %6 = load i32, ptr %decref_tuple.addr, align 4, !dbg !9232, !tbaa !1984
  %tobool = icmp ne i32 %6, 0, !dbg !9232
  br i1 %tobool, label %if.then, label %if.end, !dbg !9234

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %tuple.addr, align 8, !dbg !9235, !tbaa !1899
  call void @Py_DECREF(ptr noundef %7), !dbg !9235
  br label %if.end, !dbg !9237

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %value1, align 8, !dbg !9238, !tbaa !1899
  %9 = load ptr, ptr %pvalue1.addr, align 8, !dbg !9239, !tbaa !1899
  store ptr %8, ptr %9, align 8, !dbg !9240, !tbaa !1899
  %10 = load ptr, ptr %value2, align 8, !dbg !9241, !tbaa !1899
  %11 = load ptr, ptr %pvalue2.addr, align 8, !dbg !9242, !tbaa !1899
  store ptr %10, ptr %11, align 8, !dbg !9243, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %value2) #11, !dbg !9244
  call void @llvm.lifetime.end.p0(i64 8, ptr %value1) #11, !dbg !9244
  ret i32 0, !dbg !9245
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_UnpackTupleError(ptr noundef %t, i64 noundef %index) #0 !dbg !9246 {
entry:
  %t.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  store ptr %t, ptr %t.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !9250, metadata !DIExpression()), !dbg !9252
  store i64 %index, ptr %index.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !9251, metadata !DIExpression()), !dbg !9253
  %0 = load ptr, ptr %t.addr, align 8, !dbg !9254, !tbaa !1899
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !9256
  br i1 %cmp, label %if.then, label %if.else, !dbg !9257

if.then:                                          ; preds = %entry
  call void @__Pyx_RaiseNoneNotIterableError(), !dbg !9258
  br label %if.end5, !dbg !9260

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %t.addr, align 8, !dbg !9261, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1), !dbg !9261
  %2 = load i64, ptr %index.addr, align 8, !dbg !9263, !tbaa !2597
  %cmp1 = icmp slt i64 %call, %2, !dbg !9264
  br i1 %cmp1, label %if.then2, label %if.else4, !dbg !9265

if.then2:                                         ; preds = %if.else
  %3 = load ptr, ptr %t.addr, align 8, !dbg !9266, !tbaa !1899
  %call3 = call i64 @PyTuple_GET_SIZE(ptr noundef %3), !dbg !9266
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %call3), !dbg !9268
  br label %if.end, !dbg !9269

if.else4:                                         ; preds = %if.else
  %4 = load i64, ptr %index.addr, align 8, !dbg !9270, !tbaa !2597
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef %4), !dbg !9272
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void, !dbg !9273
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_unpack_tuple2_generic(ptr noundef %tuple, ptr noundef %pvalue1, ptr noundef %pvalue2, i32 noundef %has_known_size, i32 noundef %decref_tuple) #0 !dbg !9274 {
entry:
  %retval = alloca i32, align 4
  %tuple.addr = alloca ptr, align 8
  %pvalue1.addr = alloca ptr, align 8
  %pvalue2.addr = alloca ptr, align 8
  %has_known_size.addr = alloca i32, align 4
  %decref_tuple.addr = alloca i32, align 4
  %index = alloca i64, align 8
  %value1 = alloca ptr, align 8
  %value2 = alloca ptr, align 8
  %iter = alloca ptr, align 8
  %iternext = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !9278, metadata !DIExpression()), !dbg !9290
  store ptr %pvalue1, ptr %pvalue1.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %pvalue1.addr, metadata !9279, metadata !DIExpression()), !dbg !9291
  store ptr %pvalue2, ptr %pvalue2.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %pvalue2.addr, metadata !9280, metadata !DIExpression()), !dbg !9292
  store i32 %has_known_size, ptr %has_known_size.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %has_known_size.addr, metadata !9281, metadata !DIExpression()), !dbg !9293
  store i32 %decref_tuple, ptr %decref_tuple.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %decref_tuple.addr, metadata !9282, metadata !DIExpression()), !dbg !9294
  call void @llvm.lifetime.start.p0(i64 8, ptr %index) #11, !dbg !9295
  tail call void @llvm.dbg.declare(metadata ptr %index, metadata !9283, metadata !DIExpression()), !dbg !9296
  call void @llvm.lifetime.start.p0(i64 8, ptr %value1) #11, !dbg !9297
  tail call void @llvm.dbg.declare(metadata ptr %value1, metadata !9284, metadata !DIExpression()), !dbg !9298
  store ptr null, ptr %value1, align 8, !dbg !9298, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %value2) #11, !dbg !9297
  tail call void @llvm.dbg.declare(metadata ptr %value2, metadata !9285, metadata !DIExpression()), !dbg !9299
  store ptr null, ptr %value2, align 8, !dbg !9299, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %iter) #11, !dbg !9297
  tail call void @llvm.dbg.declare(metadata ptr %iter, metadata !9286, metadata !DIExpression()), !dbg !9300
  store ptr null, ptr %iter, align 8, !dbg !9300, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %iternext) #11, !dbg !9301
  tail call void @llvm.dbg.declare(metadata ptr %iternext, metadata !9287, metadata !DIExpression()), !dbg !9302
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !9303, !tbaa !1899
  %call = call ptr @PyObject_GetIter(ptr noundef %0), !dbg !9304
  store ptr %call, ptr %iter, align 8, !dbg !9305, !tbaa !1899
  %1 = load ptr, ptr %iter, align 8, !dbg !9306, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !9306
  %lnot = xor i1 %tobool, true, !dbg !9306
  %lnot1 = xor i1 %lnot, true, !dbg !9306
  %lnot2 = xor i1 %lnot1, true, !dbg !9306
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9306
  %conv = sext i32 %lnot.ext to i64, !dbg !9306
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9306
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9306
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9308

if.then:                                          ; preds = %entry
  br label %bad, !dbg !9309

if.end:                                           ; preds = %entry
  %2 = load i32, ptr %decref_tuple.addr, align 4, !dbg !9310, !tbaa !1984
  %tobool4 = icmp ne i32 %2, 0, !dbg !9310
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9312

if.then5:                                         ; preds = %if.end
  %3 = load ptr, ptr %tuple.addr, align 8, !dbg !9313, !tbaa !1899
  call void @Py_DECREF(ptr noundef %3), !dbg !9313
  store ptr null, ptr %tuple.addr, align 8, !dbg !9315, !tbaa !1899
  br label %if.end6, !dbg !9316

if.end6:                                          ; preds = %if.then5, %if.end
  %4 = load ptr, ptr %iter, align 8, !dbg !9317, !tbaa !1899
  %call7 = call ptr @Py_TYPE(ptr noundef %4), !dbg !9317
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call7, i32 0, i32 26, !dbg !9317
  %5 = load ptr, ptr %tp_iternext, align 8, !dbg !9317, !tbaa !7099
  store ptr %5, ptr %iternext, align 8, !dbg !9318, !tbaa !1899
  %6 = load ptr, ptr %iternext, align 8, !dbg !9319, !tbaa !1899
  %7 = load ptr, ptr %iter, align 8, !dbg !9320, !tbaa !1899
  %call8 = call ptr %6(ptr noundef %7), !dbg !9319
  store ptr %call8, ptr %value1, align 8, !dbg !9321, !tbaa !1899
  %8 = load ptr, ptr %value1, align 8, !dbg !9322, !tbaa !1899
  %tobool9 = icmp ne ptr %8, null, !dbg !9322
  %lnot10 = xor i1 %tobool9, true, !dbg !9322
  %lnot12 = xor i1 %lnot10, true, !dbg !9322
  %lnot14 = xor i1 %lnot12, true, !dbg !9322
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !9322
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !9322
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 0), !dbg !9322
  %tobool18 = icmp ne i64 %expval17, 0, !dbg !9322
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !9324

if.then19:                                        ; preds = %if.end6
  store i64 0, ptr %index, align 8, !dbg !9325, !tbaa !2597
  br label %unpacking_failed, !dbg !9327

if.end20:                                         ; preds = %if.end6
  %9 = load ptr, ptr %iternext, align 8, !dbg !9328, !tbaa !1899
  %10 = load ptr, ptr %iter, align 8, !dbg !9329, !tbaa !1899
  %call21 = call ptr %9(ptr noundef %10), !dbg !9328
  store ptr %call21, ptr %value2, align 8, !dbg !9330, !tbaa !1899
  %11 = load ptr, ptr %value2, align 8, !dbg !9331, !tbaa !1899
  %tobool22 = icmp ne ptr %11, null, !dbg !9331
  %lnot23 = xor i1 %tobool22, true, !dbg !9331
  %lnot25 = xor i1 %lnot23, true, !dbg !9331
  %lnot27 = xor i1 %lnot25, true, !dbg !9331
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !9331
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !9331
  %expval30 = call i64 @llvm.expect.i64(i64 %conv29, i64 0), !dbg !9331
  %tobool31 = icmp ne i64 %expval30, 0, !dbg !9331
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !9333

if.then32:                                        ; preds = %if.end20
  store i64 1, ptr %index, align 8, !dbg !9334, !tbaa !2597
  br label %unpacking_failed, !dbg !9336

if.end33:                                         ; preds = %if.end20
  %12 = load i32, ptr %has_known_size.addr, align 4, !dbg !9337, !tbaa !1984
  %tobool34 = icmp ne i32 %12, 0, !dbg !9337
  br i1 %tobool34, label %if.end46, label %land.lhs.true, !dbg !9339

land.lhs.true:                                    ; preds = %if.end33
  %13 = load ptr, ptr %iternext, align 8, !dbg !9340, !tbaa !1899
  %14 = load ptr, ptr %iter, align 8, !dbg !9340, !tbaa !1899
  %call35 = call ptr %13(ptr noundef %14), !dbg !9340
  %call36 = call i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %call35, i64 noundef 2), !dbg !9340
  %tobool37 = icmp ne i32 %call36, 0, !dbg !9340
  %lnot38 = xor i1 %tobool37, true, !dbg !9340
  %lnot40 = xor i1 %lnot38, true, !dbg !9340
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !9340
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !9340
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 0), !dbg !9340
  %tobool44 = icmp ne i64 %expval43, 0, !dbg !9340
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !9341

if.then45:                                        ; preds = %land.lhs.true
  br label %bad, !dbg !9342

if.end46:                                         ; preds = %land.lhs.true, %if.end33
  %15 = load ptr, ptr %iter, align 8, !dbg !9343, !tbaa !1899
  call void @Py_DECREF(ptr noundef %15), !dbg !9343
  %16 = load ptr, ptr %value1, align 8, !dbg !9344, !tbaa !1899
  %17 = load ptr, ptr %pvalue1.addr, align 8, !dbg !9345, !tbaa !1899
  store ptr %16, ptr %17, align 8, !dbg !9346, !tbaa !1899
  %18 = load ptr, ptr %value2, align 8, !dbg !9347, !tbaa !1899
  %19 = load ptr, ptr %pvalue2.addr, align 8, !dbg !9348, !tbaa !1899
  store ptr %18, ptr %19, align 8, !dbg !9349, !tbaa !1899
  store i32 0, ptr %retval, align 4, !dbg !9350
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9350

unpacking_failed:                                 ; preds = %if.then32, %if.then19
  tail call void @llvm.dbg.label(metadata !9288), !dbg !9351
  %20 = load i32, ptr %has_known_size.addr, align 4, !dbg !9352, !tbaa !1984
  %tobool47 = icmp ne i32 %20, 0, !dbg !9352
  br i1 %tobool47, label %if.end52, label %land.lhs.true48, !dbg !9354

land.lhs.true48:                                  ; preds = %unpacking_failed
  %call49 = call i32 @__Pyx_IterFinish(), !dbg !9355
  %cmp = icmp eq i32 %call49, 0, !dbg !9356
  br i1 %cmp, label %if.then51, label %if.end52, !dbg !9357

if.then51:                                        ; preds = %land.lhs.true48
  %21 = load i64, ptr %index, align 8, !dbg !9358, !tbaa !2597
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %21), !dbg !9359
  br label %if.end52, !dbg !9359

if.end52:                                         ; preds = %if.then51, %land.lhs.true48, %unpacking_failed
  br label %bad, !dbg !9360

bad:                                              ; preds = %if.end52, %if.then45, %if.then
  tail call void @llvm.dbg.label(metadata !9289), !dbg !9361
  %22 = load ptr, ptr %iter, align 8, !dbg !9362, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %22), !dbg !9362
  %23 = load ptr, ptr %value1, align 8, !dbg !9363, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %23), !dbg !9363
  %24 = load ptr, ptr %value2, align 8, !dbg !9364, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %24), !dbg !9364
  %25 = load i32, ptr %decref_tuple.addr, align 4, !dbg !9365, !tbaa !1984
  %tobool53 = icmp ne i32 %25, 0, !dbg !9365
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !9367

if.then54:                                        ; preds = %bad
  %26 = load ptr, ptr %tuple.addr, align 8, !dbg !9368, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %26), !dbg !9368
  br label %if.end55, !dbg !9370

if.end55:                                         ; preds = %if.then54, %bad
  store i32 -1, ptr %retval, align 4, !dbg !9371
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9371

cleanup:                                          ; preds = %if.end55, %if.end46
  call void @llvm.lifetime.end.p0(i64 8, ptr %iternext) #11, !dbg !9372
  call void @llvm.lifetime.end.p0(i64 8, ptr %iter) #11, !dbg !9372
  call void @llvm.lifetime.end.p0(i64 8, ptr %value2) #11, !dbg !9372
  call void @llvm.lifetime.end.p0(i64 8, ptr %value1) #11, !dbg !9372
  call void @llvm.lifetime.end.p0(i64 8, ptr %index) #11, !dbg !9372
  %27 = load i32, ptr %retval, align 4, !dbg !9372
  ret i32 %27, !dbg !9372
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseNoneNotIterableError() #3 !dbg !9373 {
entry:
  %0 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !9374, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %0, ptr noundef @.str.78), !dbg !9375
  ret void, !dbg !9376
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %index) #3 !dbg !9377 {
entry:
  %index.addr = alloca i64, align 8
  store i64 %index, ptr %index.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !9381, metadata !DIExpression()), !dbg !9382
  %0 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !9383, !tbaa !1899
  %1 = load i64, ptr %index.addr, align 8, !dbg !9384, !tbaa !2597
  %2 = load i64, ptr %index.addr, align 8, !dbg !9385, !tbaa !2597
  %cmp = icmp eq i64 %2, 1, !dbg !9386
  %3 = zext i1 %cmp to i64, !dbg !9387
  %cond = select i1 %cmp, ptr @.str.15, ptr @.str.84, !dbg !9387
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.83, i64 noundef %1, ptr noundef %cond), !dbg !9388
  ret void, !dbg !9389
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseTooManyValuesError(i64 noundef %expected) #3 !dbg !9390 {
entry:
  %expected.addr = alloca i64, align 8
  store i64 %expected, ptr %expected.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %expected.addr, metadata !9392, metadata !DIExpression()), !dbg !9393
  %0 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !9394, !tbaa !1899
  %1 = load i64, ptr %expected.addr, align 8, !dbg !9395, !tbaa !2597
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.85, i64 noundef %1), !dbg !9396
  ret void, !dbg !9397
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %retval1, i64 noundef %expected) #0 !dbg !9398 {
entry:
  %retval = alloca i32, align 4
  %retval.addr = alloca ptr, align 8
  %expected.addr = alloca i64, align 8
  store ptr %retval1, ptr %retval.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %retval.addr, metadata !9402, metadata !DIExpression()), !dbg !9404
  store i64 %expected, ptr %expected.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %expected.addr, metadata !9403, metadata !DIExpression()), !dbg !9405
  %0 = load ptr, ptr %retval.addr, align 8, !dbg !9406, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !9406
  %lnot = xor i1 %tobool, true, !dbg !9406
  %lnot2 = xor i1 %lnot, true, !dbg !9406
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9406
  %conv = sext i32 %lnot.ext to i64, !dbg !9406
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9406
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9406
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9408

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %retval.addr, align 8, !dbg !9409, !tbaa !1899
  call void @Py_DECREF(ptr noundef %1), !dbg !9409
  %2 = load i64, ptr %expected.addr, align 8, !dbg !9411, !tbaa !2597
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef %2), !dbg !9412
  store i32 -1, ptr %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

if.end:                                           ; preds = %entry
  %call = call i32 @__Pyx_IterFinish(), !dbg !9414
  store i32 %call, ptr %retval, align 4, !dbg !9415
  br label %return, !dbg !9415

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !9416
  ret i32 %3, !dbg !9416
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_make_key(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_state_set) #0 !dbg !9417 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_state_set.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9419, metadata !DIExpression()), !dbg !9430
  store ptr %__pyx_v_state_set, ptr %__pyx_v_state_set.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state_set.addr, metadata !9420, metadata !DIExpression()), !dbg !9431
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !9432
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9421, metadata !DIExpression()), !dbg !9433
  store ptr null, ptr %__pyx_r, align 8, !dbg !9433, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !9434
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !9422, metadata !DIExpression()), !dbg !9435
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !9435, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !9436
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !9423, metadata !DIExpression()), !dbg !9437
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !9437, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #11, !dbg !9438
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !9424, metadata !DIExpression()), !dbg !9439
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !9440
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !9425, metadata !DIExpression()), !dbg !9441
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !9441, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !9442
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !9426, metadata !DIExpression()), !dbg !9443
  store ptr null, ptr %__pyx_filename, align 8, !dbg !9443, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !9444
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !9427, metadata !DIExpression()), !dbg !9445
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !9445, !tbaa !1984
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !9446, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %0), !dbg !9446
  %1 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !9447, !tbaa !1899
  %call = call ptr @PySequence_List(ptr noundef %1), !dbg !9448
  store ptr %call, ptr %__pyx_t_2, align 8, !dbg !9449, !tbaa !1899
  %2 = load ptr, ptr %__pyx_t_2, align 8, !dbg !9450, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !9450
  %lnot = xor i1 %tobool, true, !dbg !9450
  %lnot1 = xor i1 %lnot, true, !dbg !9450
  %lnot2 = xor i1 %lnot1, true, !dbg !9450
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9450
  %conv = sext i32 %lnot.ext to i64, !dbg !9450
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9450
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9450
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9452

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !9453, !tbaa !1899
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !9453, !tbaa !1899
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !9453, !tbaa !1899
  store i32 141, ptr %__pyx_lineno, align 4, !dbg !9453, !tbaa !1984
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !9453, !tbaa !1984
  store i32 5033, ptr %__pyx_clineno, align 4, !dbg !9453, !tbaa !1984
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !9453, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9456

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_2, align 8, !dbg !9457, !tbaa !1899
  store ptr %7, ptr %__pyx_t_1, align 8, !dbg !9458, !tbaa !1899
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !9459, !tbaa !1899
  %8 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9460, !tbaa !1899
  %call4 = call i32 @PyList_Sort(ptr noundef %8), !dbg !9461
  store i32 %call4, ptr %__pyx_t_3, align 4, !dbg !9462, !tbaa !1984
  %9 = load i32, ptr %__pyx_t_3, align 4, !dbg !9463, !tbaa !1984
  %cmp = icmp eq i32 %9, -1, !dbg !9463
  %lnot6 = xor i1 %cmp, true, !dbg !9463
  %lnot8 = xor i1 %lnot6, true, !dbg !9463
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9463
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !9463
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !9463
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !9463
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9465

if.then13:                                        ; preds = %if.end
  %10 = load ptr, ptr @__pyx_f, align 16, !dbg !9466, !tbaa !1899
  store ptr %10, ptr %__pyx_filename, align 8, !dbg !9466, !tbaa !1899
  %11 = load ptr, ptr %__pyx_filename, align 8, !dbg !9466, !tbaa !1899
  store i32 141, ptr %__pyx_lineno, align 4, !dbg !9466, !tbaa !1984
  %12 = load i32, ptr %__pyx_lineno, align 4, !dbg !9466, !tbaa !1984
  store i32 5037, ptr %__pyx_clineno, align 4, !dbg !9466, !tbaa !1984
  %13 = load i32, ptr %__pyx_clineno, align 4, !dbg !9466, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9469

if.end14:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9470, !tbaa !1899
  %call15 = call ptr @PyList_AsTuple(ptr noundef %14), !dbg !9471
  store ptr %call15, ptr %__pyx_t_2, align 8, !dbg !9472, !tbaa !1899
  %15 = load ptr, ptr %__pyx_t_2, align 8, !dbg !9473, !tbaa !1899
  %tobool16 = icmp ne ptr %15, null, !dbg !9473
  %lnot17 = xor i1 %tobool16, true, !dbg !9473
  %lnot19 = xor i1 %lnot17, true, !dbg !9473
  %lnot21 = xor i1 %lnot19, true, !dbg !9473
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9473
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9473
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !9473
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !9473
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9475

if.then26:                                        ; preds = %if.end14
  %16 = load ptr, ptr @__pyx_f, align 16, !dbg !9476, !tbaa !1899
  store ptr %16, ptr %__pyx_filename, align 8, !dbg !9476, !tbaa !1899
  %17 = load ptr, ptr %__pyx_filename, align 8, !dbg !9476, !tbaa !1899
  store i32 141, ptr %__pyx_lineno, align 4, !dbg !9476, !tbaa !1984
  %18 = load i32, ptr %__pyx_lineno, align 4, !dbg !9476, !tbaa !1984
  store i32 5038, ptr %__pyx_clineno, align 4, !dbg !9476, !tbaa !1984
  %19 = load i32, ptr %__pyx_clineno, align 4, !dbg !9476, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9479

if.end27:                                         ; preds = %if.end14
  %20 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9480, !tbaa !1899
  call void @Py_DECREF(ptr noundef %20), !dbg !9480
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !9481, !tbaa !1899
  %21 = load ptr, ptr %__pyx_t_2, align 8, !dbg !9482, !tbaa !1899
  store ptr %21, ptr %__pyx_r, align 8, !dbg !9483, !tbaa !1899
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !9484, !tbaa !1899
  br label %__pyx_L0, !dbg !9485

__pyx_L1_error:                                   ; preds = %if.then26, %if.then13, %if.then
  tail call void @llvm.dbg.label(metadata !9428), !dbg !9486
  %22 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9487, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %22), !dbg !9487
  %23 = load ptr, ptr %__pyx_t_2, align 8, !dbg !9488, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %23), !dbg !9488
  %24 = load i32, ptr %__pyx_clineno, align 4, !dbg !9489, !tbaa !1984
  %25 = load i32, ptr %__pyx_lineno, align 4, !dbg !9490, !tbaa !1984
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !9491, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.91, i32 noundef %24, i32 noundef %25, ptr noundef %26), !dbg !9492
  store ptr null, ptr %__pyx_r, align 8, !dbg !9493, !tbaa !1899
  br label %__pyx_L0, !dbg !9494

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end27
  tail call void @llvm.dbg.label(metadata !9429), !dbg !9495
  %27 = load ptr, ptr %__pyx_r, align 8, !dbg !9496, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !9497
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !9497
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !9497
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #11, !dbg !9497
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !9497
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !9497
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !9497
  ret ptr %27, !dbg !9498
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyDict_GetItemDefault(ptr noundef %d, ptr noundef %key, ptr noundef %default_value) #0 !dbg !9499 {
entry:
  %retval = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %key.addr = alloca ptr, align 8
  %default_value.addr = alloca ptr, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %d, ptr %d.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %d.addr, metadata !9501, metadata !DIExpression()), !dbg !9505
  store ptr %key, ptr %key.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !9502, metadata !DIExpression()), !dbg !9506
  store ptr %default_value, ptr %default_value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %default_value.addr, metadata !9503, metadata !DIExpression()), !dbg !9507
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !9508
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !9504, metadata !DIExpression()), !dbg !9509
  %0 = load ptr, ptr %d.addr, align 8, !dbg !9510, !tbaa !1899
  %1 = load ptr, ptr %key.addr, align 8, !dbg !9511, !tbaa !1899
  %call = call ptr @PyDict_GetItemWithError(ptr noundef %0, ptr noundef %1), !dbg !9512
  store ptr %call, ptr %value, align 8, !dbg !9513, !tbaa !1899
  %2 = load ptr, ptr %value, align 8, !dbg !9514, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !9514
  %lnot = xor i1 %tobool, true, !dbg !9514
  %lnot1 = xor i1 %lnot, true, !dbg !9514
  %lnot2 = xor i1 %lnot1, true, !dbg !9514
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9514
  %conv = sext i32 %lnot.ext to i64, !dbg !9514
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9514
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9514
  br i1 %tobool3, label %if.then, label %if.end14, !dbg !9516

if.then:                                          ; preds = %entry
  %call4 = call ptr @PyErr_Occurred(), !dbg !9517
  %tobool5 = icmp ne ptr %call4, null, !dbg !9517
  %lnot6 = xor i1 %tobool5, true, !dbg !9517
  %lnot8 = xor i1 %lnot6, true, !dbg !9517
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9517
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !9517
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !9517
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !9517
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !9520

if.then13:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8, !dbg !9521
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9521

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr %default_value.addr, align 8, !dbg !9522, !tbaa !1899
  store ptr %3, ptr %value, align 8, !dbg !9523, !tbaa !1899
  br label %if.end14, !dbg !9524

if.end14:                                         ; preds = %if.end, %entry
  %4 = load ptr, ptr %value, align 8, !dbg !9525, !tbaa !1899
  call void @Py_INCREF(ptr noundef %4), !dbg !9525
  %5 = load ptr, ptr %value, align 8, !dbg !9526, !tbaa !1899
  store ptr %5, ptr %retval, align 8, !dbg !9527
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9527

cleanup:                                          ; preds = %if.end14, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !9528
  %6 = load ptr, ptr %retval, align 8, !dbg !9528
  ret ptr %6, !dbg !9528
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_state_set) #0 !dbg !1371 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_state_set.addr = alloca ptr, align 8
  %__pyx_v_state = alloca ptr, align 8
  %__pyx_v_best_action = alloca ptr, align 8
  %__pyx_v_best_priority = alloca ptr, align 8
  %__pyx_v_priority = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i64, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp137 = alloca ptr, align 8
  %tmp154 = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !1373, metadata !DIExpression()), !dbg !9529
  store ptr %__pyx_v_state_set, ptr %__pyx_v_state_set.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state_set.addr, metadata !1374, metadata !DIExpression()), !dbg !9530
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state) #11, !dbg !9531
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state, metadata !1375, metadata !DIExpression()), !dbg !9532
  store ptr null, ptr %__pyx_v_state, align 8, !dbg !9532, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_best_action) #11, !dbg !9533
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_best_action, metadata !1376, metadata !DIExpression()), !dbg !9534
  store ptr null, ptr %__pyx_v_best_action, align 8, !dbg !9534, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_best_priority) #11, !dbg !9535
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_best_priority, metadata !1377, metadata !DIExpression()), !dbg !9536
  store ptr null, ptr %__pyx_v_best_priority, align 8, !dbg !9536, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_priority) #11, !dbg !9537
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_priority, metadata !1378, metadata !DIExpression()), !dbg !9538
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !9539
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !1379, metadata !DIExpression()), !dbg !9540
  store ptr null, ptr %__pyx_r, align 8, !dbg !9540, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !9541
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !1380, metadata !DIExpression()), !dbg !9542
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !9542, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !9543
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !1381, metadata !DIExpression()), !dbg !9544
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !9545
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !1382, metadata !DIExpression()), !dbg !9546
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !9547
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !1383, metadata !DIExpression()), !dbg !9548
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !9549
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !1384, metadata !DIExpression()), !dbg !9550
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !9550, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !9551
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !1385, metadata !DIExpression()), !dbg !9552
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !9553
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !1386, metadata !DIExpression()), !dbg !9554
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !9554, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_8) #11, !dbg !9555
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !1387, metadata !DIExpression()), !dbg !9556
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !9557
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1388, metadata !DIExpression()), !dbg !9558
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !9558, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !9559
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1389, metadata !DIExpression()), !dbg !9560
  store ptr null, ptr %__pyx_filename, align 8, !dbg !9560, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !9561
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1390, metadata !DIExpression()), !dbg !9562
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !9562, !tbaa !1984
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9563
  store ptr @_Py_NoneStruct, ptr %__pyx_v_best_action, align 8, !dbg !9564, !tbaa !1899
  br label %do.body, !dbg !9565

do.body:                                          ; preds = %entry
  %0 = load i64, ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_version, align 8, !dbg !9566, !tbaa !2597
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9566, !tbaa !1899
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 0, !dbg !9566
  %2 = load ptr, ptr %__pyx_d, align 8, !dbg !9566, !tbaa !2019
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %2, i32 0, i32 2, !dbg !9566
  %3 = load i64, ptr %ma_version_tag, align 8, !dbg !9566, !tbaa !9568
  %cmp = icmp eq i64 %0, %3, !dbg !9566
  %lnot = xor i1 %cmp, true, !dbg !9566
  %lnot1 = xor i1 %lnot, true, !dbg !9566
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9566
  %conv = sext i32 %lnot.ext to i64, !dbg !9566
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !9566
  %tobool = icmp ne i64 %expval, 0, !dbg !9566
  br i1 %tobool, label %cond.true, label %cond.false11, !dbg !9566

cond.true:                                        ; preds = %do.body
  %4 = load ptr, ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_cached_value, align 8, !dbg !9566, !tbaa !1899
  %tobool2 = icmp ne ptr %4, null, !dbg !9566
  %lnot3 = xor i1 %tobool2, true, !dbg !9566
  %lnot5 = xor i1 %lnot3, true, !dbg !9566
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !9566
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !9566
  %expval8 = call i64 @llvm.expect.i64(i64 %conv7, i64 1), !dbg !9566
  %tobool9 = icmp ne i64 %expval8, 0, !dbg !9566
  br i1 %tobool9, label %cond.true10, label %cond.false, !dbg !9566

cond.true10:                                      ; preds = %cond.true
  %5 = load ptr, ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_cached_value, align 8, !dbg !9566, !tbaa !1899
  call void @Py_INCREF(ptr noundef %5), !dbg !9566
  %6 = load ptr, ptr @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_cached_value, align 8, !dbg !9566, !tbaa !1899
  br label %cond.end, !dbg !9566

cond.false:                                       ; preds = %cond.true
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9566, !tbaa !1899
  %__pyx_n_s_LOWEST_PRIORITY = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 23, !dbg !9566
  %8 = load ptr, ptr %__pyx_n_s_LOWEST_PRIORITY, align 8, !dbg !9566, !tbaa !2288
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %8), !dbg !9566
  br label %cond.end, !dbg !9566

cond.end:                                         ; preds = %cond.false, %cond.true10
  %cond = phi ptr [ %6, %cond.true10 ], [ %call, %cond.false ], !dbg !9566
  br label %cond.end14, !dbg !9566

cond.false11:                                     ; preds = %do.body
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9566, !tbaa !1899
  %__pyx_n_s_LOWEST_PRIORITY12 = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 23, !dbg !9566
  %10 = load ptr, ptr %__pyx_n_s_LOWEST_PRIORITY12, align 8, !dbg !9566, !tbaa !2288
  %call13 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %10, ptr noundef @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_version, ptr noundef @__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action.__pyx_dict_cached_value), !dbg !9566
  br label %cond.end14, !dbg !9566

cond.end14:                                       ; preds = %cond.false11, %cond.end
  %cond15 = phi ptr [ %cond, %cond.end ], [ %call13, %cond.false11 ], !dbg !9566
  store ptr %cond15, ptr %__pyx_t_1, align 8, !dbg !9566, !tbaa !1899
  br label %do.cond, !dbg !9566

do.cond:                                          ; preds = %cond.end14
  br label %do.end, !dbg !9566

do.end:                                           ; preds = %do.cond
  %11 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9569, !tbaa !1899
  %tobool16 = icmp ne ptr %11, null, !dbg !9569
  %lnot17 = xor i1 %tobool16, true, !dbg !9569
  %lnot19 = xor i1 %lnot17, true, !dbg !9569
  %lnot21 = xor i1 %lnot19, true, !dbg !9569
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9569
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9569
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !9569
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !9569
  br i1 %tobool25, label %if.then, label %if.end, !dbg !9571

if.then:                                          ; preds = %do.end
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !9572, !tbaa !1899
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !9572, !tbaa !1899
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !9572, !tbaa !1899
  store i32 124, ptr %__pyx_lineno, align 4, !dbg !9572, !tbaa !1984
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !9572, !tbaa !1984
  store i32 4803, ptr %__pyx_clineno, align 4, !dbg !9572, !tbaa !1984
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !9572, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9575

if.end:                                           ; preds = %do.end
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9576, !tbaa !1899
  store ptr %16, ptr %__pyx_v_best_priority, align 8, !dbg !9577, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !9578, !tbaa !1899
  store i64 0, ptr %__pyx_t_2, align 8, !dbg !9579, !tbaa !2597
  %17 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !9580, !tbaa !1899
  %cmp26 = icmp eq ptr %17, @_Py_NoneStruct, !dbg !9580
  %lnot28 = xor i1 %cmp26, true, !dbg !9580
  %lnot30 = xor i1 %lnot28, true, !dbg !9580
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !9580
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !9580
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !9580
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !9580
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !9582

if.then35:                                        ; preds = %if.end
  %18 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !9583, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %18, ptr noundef @.str.78), !dbg !9585
  %19 = load ptr, ptr @__pyx_f, align 16, !dbg !9586, !tbaa !1899
  store ptr %19, ptr %__pyx_filename, align 8, !dbg !9586, !tbaa !1899
  %20 = load ptr, ptr %__pyx_filename, align 8, !dbg !9586, !tbaa !1899
  store i32 125, ptr %__pyx_lineno, align 4, !dbg !9586, !tbaa !1984
  %21 = load i32, ptr %__pyx_lineno, align 4, !dbg !9586, !tbaa !1984
  store i32 4818, ptr %__pyx_clineno, align 4, !dbg !9586, !tbaa !1984
  %22 = load i32, ptr %__pyx_clineno, align 4, !dbg !9586, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9589

if.end36:                                         ; preds = %if.end
  %23 = load ptr, ptr %__pyx_v_state_set.addr, align 8, !dbg !9590, !tbaa !1899
  %call37 = call ptr @__Pyx_dict_iterator(ptr noundef %23, i32 noundef 1, ptr noundef null, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4), !dbg !9591
  store ptr %call37, ptr %__pyx_t_5, align 8, !dbg !9592, !tbaa !1899
  %24 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9593, !tbaa !1899
  %tobool38 = icmp ne ptr %24, null, !dbg !9593
  %lnot39 = xor i1 %tobool38, true, !dbg !9593
  %lnot41 = xor i1 %lnot39, true, !dbg !9593
  %lnot43 = xor i1 %lnot41, true, !dbg !9593
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !9593
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !9593
  %expval46 = call i64 @llvm.expect.i64(i64 %conv45, i64 0), !dbg !9593
  %tobool47 = icmp ne i64 %expval46, 0, !dbg !9593
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !9595

if.then48:                                        ; preds = %if.end36
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !9596, !tbaa !1899
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !9596, !tbaa !1899
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !9596, !tbaa !1899
  store i32 125, ptr %__pyx_lineno, align 4, !dbg !9596, !tbaa !1984
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !9596, !tbaa !1984
  store i32 4820, ptr %__pyx_clineno, align 4, !dbg !9596, !tbaa !1984
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !9596, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9599

if.end49:                                         ; preds = %if.end36
  %29 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9600, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %29), !dbg !9600
  %30 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9601, !tbaa !1899
  store ptr %30, ptr %__pyx_t_1, align 8, !dbg !9602, !tbaa !1899
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !9603, !tbaa !1899
  br label %while.cond, !dbg !9604

while.cond:                                       ; preds = %if.end157, %if.end49
  br label %while.body, !dbg !9604

while.body:                                       ; preds = %while.cond
  %31 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9605, !tbaa !1899
  %32 = load i64, ptr %__pyx_t_3, align 8, !dbg !9606, !tbaa !2597
  %33 = load i32, ptr %__pyx_t_4, align 4, !dbg !9607, !tbaa !1984
  %call50 = call i32 @__Pyx_dict_iter_next(ptr noundef %31, i64 noundef %32, ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_5, ptr noundef null, ptr noundef null, i32 noundef %33), !dbg !9608
  store i32 %call50, ptr %__pyx_t_6, align 4, !dbg !9609, !tbaa !1984
  %34 = load i32, ptr %__pyx_t_6, align 4, !dbg !9610, !tbaa !1984
  %cmp51 = icmp eq i32 %34, 0, !dbg !9610
  %lnot53 = xor i1 %cmp51, true, !dbg !9610
  %lnot55 = xor i1 %lnot53, true, !dbg !9610
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !9610
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !9610
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0), !dbg !9610
  %tobool59 = icmp ne i64 %expval58, 0, !dbg !9610
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !9612

if.then60:                                        ; preds = %while.body
  br label %while.end, !dbg !9613

if.end61:                                         ; preds = %while.body
  %35 = load i32, ptr %__pyx_t_6, align 4, !dbg !9614, !tbaa !1984
  %cmp62 = icmp eq i32 %35, -1, !dbg !9614
  %lnot64 = xor i1 %cmp62, true, !dbg !9614
  %lnot66 = xor i1 %lnot64, true, !dbg !9614
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !9614
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !9614
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 0), !dbg !9614
  %tobool70 = icmp ne i64 %expval69, 0, !dbg !9614
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !9616

if.then71:                                        ; preds = %if.end61
  %36 = load ptr, ptr @__pyx_f, align 16, !dbg !9617, !tbaa !1899
  store ptr %36, ptr %__pyx_filename, align 8, !dbg !9617, !tbaa !1899
  %37 = load ptr, ptr %__pyx_filename, align 8, !dbg !9617, !tbaa !1899
  store i32 125, ptr %__pyx_lineno, align 4, !dbg !9617, !tbaa !1984
  %38 = load i32, ptr %__pyx_lineno, align 4, !dbg !9617, !tbaa !1984
  store i32 4828, ptr %__pyx_clineno, align 4, !dbg !9617, !tbaa !1984
  %39 = load i32, ptr %__pyx_clineno, align 4, !dbg !9617, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9620

if.end72:                                         ; preds = %if.end61
  %40 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9621, !tbaa !1899
  %cmp73 = icmp eq ptr %40, @_Py_NoneStruct, !dbg !9621
  br i1 %cmp73, label %lor.end, label %lor.rhs, !dbg !9621

lor.rhs:                                          ; preds = %if.end72
  %41 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9621, !tbaa !1899
  %42 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9621, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Node = getelementptr inbounds %struct.__pyx_mstate, ptr %42, i32 0, i32 16, !dbg !9621
  %43 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Node, align 8, !dbg !9621, !tbaa !3556
  %call75 = call i32 @__Pyx_TypeTest(ptr noundef %41, ptr noundef %43), !dbg !9621
  %tobool76 = icmp ne i32 %call75, 0, !dbg !9621
  %lnot77 = xor i1 %tobool76, true, !dbg !9621
  %lnot79 = xor i1 %lnot77, true, !dbg !9621
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !9621
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !9621
  %expval82 = call i64 @llvm.expect.i64(i64 %conv81, i64 1), !dbg !9621
  %tobool83 = icmp ne i64 %expval82, 0, !dbg !9621
  br label %lor.end, !dbg !9621

lor.end:                                          ; preds = %lor.rhs, %if.end72
  %44 = phi i1 [ true, %if.end72 ], [ %tobool83, %lor.rhs ]
  %lnot84 = xor i1 %44, true, !dbg !9621
  %lnot86 = xor i1 %lnot84, true, !dbg !9621
  %lnot.ext87 = zext i1 %lnot86 to i32, !dbg !9621
  %conv88 = sext i32 %lnot.ext87 to i64, !dbg !9621
  %expval89 = call i64 @llvm.expect.i64(i64 %conv88, i64 1), !dbg !9621
  %tobool90 = icmp ne i64 %expval89, 0, !dbg !9621
  br i1 %tobool90, label %if.end92, label %if.then91, !dbg !9623

if.then91:                                        ; preds = %lor.end
  %45 = load ptr, ptr @__pyx_f, align 16, !dbg !9624, !tbaa !1899
  store ptr %45, ptr %__pyx_filename, align 8, !dbg !9624, !tbaa !1899
  %46 = load ptr, ptr %__pyx_filename, align 8, !dbg !9624, !tbaa !1899
  store i32 125, ptr %__pyx_lineno, align 4, !dbg !9624, !tbaa !1984
  %47 = load i32, ptr %__pyx_lineno, align 4, !dbg !9624, !tbaa !1984
  store i32 4830, ptr %__pyx_clineno, align 4, !dbg !9624, !tbaa !1984
  %48 = load i32, ptr %__pyx_clineno, align 4, !dbg !9624, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9627

if.end92:                                         ; preds = %lor.end
  br label %do.body93, !dbg !9628

do.body93:                                        ; preds = %if.end92
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !9629
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1391, metadata !DIExpression()), !dbg !9629
  %49 = load ptr, ptr %__pyx_v_state, align 8, !dbg !9629, !tbaa !1899
  store ptr %49, ptr %tmp, align 8, !dbg !9629, !tbaa !1899
  %50 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9629, !tbaa !1899
  store ptr %50, ptr %__pyx_v_state, align 8, !dbg !9629, !tbaa !1899
  %51 = load ptr, ptr %tmp, align 8, !dbg !9629, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %51), !dbg !9629
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !9628
  br label %do.cond94, !dbg !9629

do.cond94:                                        ; preds = %do.body93
  br label %do.end95, !dbg !9629

do.end95:                                         ; preds = %do.cond94
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !9630, !tbaa !1899
  %52 = load ptr, ptr %__pyx_v_state, align 8, !dbg !9631, !tbaa !1899
  %action_priority = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Node, ptr %52, i32 0, i32 5, !dbg !9632
  %53 = load i32, ptr %action_priority, align 8, !dbg !9632, !tbaa !9633
  store i32 %53, ptr %__pyx_t_6, align 4, !dbg !9634, !tbaa !1984
  %54 = load i32, ptr %__pyx_t_6, align 4, !dbg !9635, !tbaa !1984
  store i32 %54, ptr %__pyx_v_priority, align 4, !dbg !9636, !tbaa !1984
  %55 = load i32, ptr %__pyx_v_priority, align 4, !dbg !9637, !tbaa !1984
  %call96 = call ptr @__Pyx_PyInt_From_int(i32 noundef %55), !dbg !9638
  store ptr %call96, ptr %__pyx_t_5, align 8, !dbg !9639, !tbaa !1899
  %56 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9640, !tbaa !1899
  %tobool97 = icmp ne ptr %56, null, !dbg !9640
  %lnot98 = xor i1 %tobool97, true, !dbg !9640
  %lnot100 = xor i1 %lnot98, true, !dbg !9640
  %lnot102 = xor i1 %lnot100, true, !dbg !9640
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !9640
  %conv104 = sext i32 %lnot.ext103 to i64, !dbg !9640
  %expval105 = call i64 @llvm.expect.i64(i64 %conv104, i64 0), !dbg !9640
  %tobool106 = icmp ne i64 %expval105, 0, !dbg !9640
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !9642

if.then107:                                       ; preds = %do.end95
  %57 = load ptr, ptr @__pyx_f, align 16, !dbg !9643, !tbaa !1899
  store ptr %57, ptr %__pyx_filename, align 8, !dbg !9643, !tbaa !1899
  %58 = load ptr, ptr %__pyx_filename, align 8, !dbg !9643, !tbaa !1899
  store i32 127, ptr %__pyx_lineno, align 4, !dbg !9643, !tbaa !1984
  %59 = load i32, ptr %__pyx_lineno, align 4, !dbg !9643, !tbaa !1984
  store i32 4851, ptr %__pyx_clineno, align 4, !dbg !9643, !tbaa !1984
  %60 = load i32, ptr %__pyx_clineno, align 4, !dbg !9643, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9646

if.end108:                                        ; preds = %do.end95
  %61 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9647, !tbaa !1899
  %62 = load ptr, ptr %__pyx_v_best_priority, align 8, !dbg !9648, !tbaa !1899
  %call109 = call ptr @PyObject_RichCompare(ptr noundef %61, ptr noundef %62, i32 noundef 4), !dbg !9649
  store ptr %call109, ptr %__pyx_t_7, align 8, !dbg !9650, !tbaa !1899
  %63 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9651, !tbaa !1899
  %tobool110 = icmp ne ptr %63, null, !dbg !9651
  %lnot111 = xor i1 %tobool110, true, !dbg !9651
  %lnot113 = xor i1 %lnot111, true, !dbg !9651
  %lnot115 = xor i1 %lnot113, true, !dbg !9651
  %lnot.ext116 = zext i1 %lnot115 to i32, !dbg !9651
  %conv117 = sext i32 %lnot.ext116 to i64, !dbg !9651
  %expval118 = call i64 @llvm.expect.i64(i64 %conv117, i64 0), !dbg !9651
  %tobool119 = icmp ne i64 %expval118, 0, !dbg !9651
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !9653

if.then120:                                       ; preds = %if.end108
  %64 = load ptr, ptr @__pyx_f, align 16, !dbg !9654, !tbaa !1899
  store ptr %64, ptr %__pyx_filename, align 8, !dbg !9654, !tbaa !1899
  %65 = load ptr, ptr %__pyx_filename, align 8, !dbg !9654, !tbaa !1899
  store i32 127, ptr %__pyx_lineno, align 4, !dbg !9654, !tbaa !1984
  %66 = load i32, ptr %__pyx_lineno, align 4, !dbg !9654, !tbaa !1984
  store i32 4853, ptr %__pyx_clineno, align 4, !dbg !9654, !tbaa !1984
  %67 = load i32, ptr %__pyx_clineno, align 4, !dbg !9654, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9657

if.end121:                                        ; preds = %if.end108
  %68 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9658, !tbaa !1899
  call void @Py_DECREF(ptr noundef %68), !dbg !9658
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !9659, !tbaa !1899
  %69 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9660, !tbaa !1899
  %call122 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %69), !dbg !9661
  store i32 %call122, ptr %__pyx_t_8, align 4, !dbg !9662, !tbaa !1984
  %70 = load i32, ptr %__pyx_t_8, align 4, !dbg !9663, !tbaa !1984
  %cmp123 = icmp slt i32 %70, 0, !dbg !9663
  %lnot125 = xor i1 %cmp123, true, !dbg !9663
  %lnot127 = xor i1 %lnot125, true, !dbg !9663
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !9663
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !9663
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0), !dbg !9663
  %tobool131 = icmp ne i64 %expval130, 0, !dbg !9663
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !9665

if.then132:                                       ; preds = %if.end121
  %71 = load ptr, ptr @__pyx_f, align 16, !dbg !9666, !tbaa !1899
  store ptr %71, ptr %__pyx_filename, align 8, !dbg !9666, !tbaa !1899
  %72 = load ptr, ptr %__pyx_filename, align 8, !dbg !9666, !tbaa !1899
  store i32 127, ptr %__pyx_lineno, align 4, !dbg !9666, !tbaa !1984
  %73 = load i32, ptr %__pyx_lineno, align 4, !dbg !9666, !tbaa !1984
  store i32 4855, ptr %__pyx_clineno, align 4, !dbg !9666, !tbaa !1984
  %74 = load i32, ptr %__pyx_clineno, align 4, !dbg !9666, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9669

if.end133:                                        ; preds = %if.end121
  %75 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9670, !tbaa !1899
  call void @Py_DECREF(ptr noundef %75), !dbg !9670
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !9671, !tbaa !1899
  %76 = load i32, ptr %__pyx_t_8, align 4, !dbg !9672, !tbaa !1984
  %tobool134 = icmp ne i32 %76, 0, !dbg !9672
  br i1 %tobool134, label %if.then135, label %if.end157, !dbg !9673

if.then135:                                       ; preds = %if.end133
  %77 = load ptr, ptr %__pyx_v_state, align 8, !dbg !9674, !tbaa !1899
  %action = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_Node, ptr %77, i32 0, i32 2, !dbg !9675
  %78 = load ptr, ptr %action, align 8, !dbg !9675, !tbaa !9676
  store ptr %78, ptr %__pyx_t_7, align 8, !dbg !9677, !tbaa !1899
  %79 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9678, !tbaa !1899
  call void @Py_INCREF(ptr noundef %79), !dbg !9678
  br label %do.body136, !dbg !9679

do.body136:                                       ; preds = %if.then135
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp137) #11, !dbg !9680
  tail call void @llvm.dbg.declare(metadata ptr %tmp137, metadata !1394, metadata !DIExpression()), !dbg !9680
  %80 = load ptr, ptr %__pyx_v_best_action, align 8, !dbg !9680, !tbaa !1899
  store ptr %80, ptr %tmp137, align 8, !dbg !9680, !tbaa !1899
  %81 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9680, !tbaa !1899
  store ptr %81, ptr %__pyx_v_best_action, align 8, !dbg !9680, !tbaa !1899
  %82 = load ptr, ptr %tmp137, align 8, !dbg !9680, !tbaa !1899
  call void @Py_DECREF(ptr noundef %82), !dbg !9680
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp137) #11, !dbg !9679
  br label %do.cond138, !dbg !9680

do.cond138:                                       ; preds = %do.body136
  br label %do.end139, !dbg !9680

do.end139:                                        ; preds = %do.cond138
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !9681, !tbaa !1899
  %83 = load i32, ptr %__pyx_v_priority, align 4, !dbg !9682, !tbaa !1984
  %call140 = call ptr @__Pyx_PyInt_From_int(i32 noundef %83), !dbg !9683
  store ptr %call140, ptr %__pyx_t_7, align 8, !dbg !9684, !tbaa !1899
  %84 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9685, !tbaa !1899
  %tobool141 = icmp ne ptr %84, null, !dbg !9685
  %lnot142 = xor i1 %tobool141, true, !dbg !9685
  %lnot144 = xor i1 %lnot142, true, !dbg !9685
  %lnot146 = xor i1 %lnot144, true, !dbg !9685
  %lnot.ext147 = zext i1 %lnot146 to i32, !dbg !9685
  %conv148 = sext i32 %lnot.ext147 to i64, !dbg !9685
  %expval149 = call i64 @llvm.expect.i64(i64 %conv148, i64 0), !dbg !9685
  %tobool150 = icmp ne i64 %expval149, 0, !dbg !9685
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !9687

if.then151:                                       ; preds = %do.end139
  %85 = load ptr, ptr @__pyx_f, align 16, !dbg !9688, !tbaa !1899
  store ptr %85, ptr %__pyx_filename, align 8, !dbg !9688, !tbaa !1899
  %86 = load ptr, ptr %__pyx_filename, align 8, !dbg !9688, !tbaa !1899
  store i32 129, ptr %__pyx_lineno, align 4, !dbg !9688, !tbaa !1984
  %87 = load i32, ptr %__pyx_lineno, align 4, !dbg !9688, !tbaa !1984
  store i32 4878, ptr %__pyx_clineno, align 4, !dbg !9688, !tbaa !1984
  %88 = load i32, ptr %__pyx_clineno, align 4, !dbg !9688, !tbaa !1984
  br label %__pyx_L1_error, !dbg !9691

if.end152:                                        ; preds = %do.end139
  br label %do.body153, !dbg !9692

do.body153:                                       ; preds = %if.end152
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp154) #11, !dbg !9693
  tail call void @llvm.dbg.declare(metadata ptr %tmp154, metadata !1398, metadata !DIExpression()), !dbg !9693
  %89 = load ptr, ptr %__pyx_v_best_priority, align 8, !dbg !9693, !tbaa !1899
  store ptr %89, ptr %tmp154, align 8, !dbg !9693, !tbaa !1899
  %90 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9693, !tbaa !1899
  store ptr %90, ptr %__pyx_v_best_priority, align 8, !dbg !9693, !tbaa !1899
  %91 = load ptr, ptr %tmp154, align 8, !dbg !9693, !tbaa !1899
  call void @Py_DECREF(ptr noundef %91), !dbg !9693
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp154) #11, !dbg !9692
  br label %do.cond155, !dbg !9693

do.cond155:                                       ; preds = %do.body153
  br label %do.end156, !dbg !9693

do.end156:                                        ; preds = %do.cond155
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !9694, !tbaa !1899
  br label %if.end157, !dbg !9695

if.end157:                                        ; preds = %do.end156, %if.end133
  br label %while.cond, !dbg !9604, !llvm.loop !9696

while.end:                                        ; preds = %if.then60
  %92 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9698, !tbaa !1899
  call void @Py_DECREF(ptr noundef %92), !dbg !9698
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !9699, !tbaa !1899
  %93 = load ptr, ptr %__pyx_r, align 8, !dbg !9700, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %93), !dbg !9700
  %94 = load ptr, ptr %__pyx_v_best_action, align 8, !dbg !9701, !tbaa !1899
  call void @Py_INCREF(ptr noundef %94), !dbg !9701
  %95 = load ptr, ptr %__pyx_v_best_action, align 8, !dbg !9702, !tbaa !1899
  store ptr %95, ptr %__pyx_r, align 8, !dbg !9703, !tbaa !1899
  br label %__pyx_L0, !dbg !9704

__pyx_L1_error:                                   ; preds = %if.then151, %if.then132, %if.then120, %if.then107, %if.then91, %if.then71, %if.then48, %if.then35, %if.then
  tail call void @llvm.dbg.label(metadata !1400), !dbg !9705
  %96 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9706, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %96), !dbg !9706
  %97 = load ptr, ptr %__pyx_t_5, align 8, !dbg !9707, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %97), !dbg !9707
  %98 = load ptr, ptr %__pyx_t_7, align 8, !dbg !9708, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %98), !dbg !9708
  %99 = load i32, ptr %__pyx_clineno, align 4, !dbg !9709, !tbaa !1984
  %100 = load i32, ptr %__pyx_lineno, align 4, !dbg !9710, !tbaa !1984
  %101 = load ptr, ptr %__pyx_filename, align 8, !dbg !9711, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.92, i32 noundef %99, i32 noundef %100, ptr noundef %101), !dbg !9712
  store ptr null, ptr %__pyx_r, align 8, !dbg !9713, !tbaa !1899
  br label %__pyx_L0, !dbg !9714

__pyx_L0:                                         ; preds = %__pyx_L1_error, %while.end
  tail call void @llvm.dbg.label(metadata !1401), !dbg !9715
  %102 = load ptr, ptr %__pyx_v_state, align 8, !dbg !9716, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %102), !dbg !9716
  %103 = load ptr, ptr %__pyx_v_best_action, align 8, !dbg !9717, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %103), !dbg !9717
  %104 = load ptr, ptr %__pyx_v_best_priority, align 8, !dbg !9718, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %104), !dbg !9718
  %105 = load ptr, ptr %__pyx_r, align 8, !dbg !9719, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_8) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_priority) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_best_priority) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_best_action) #11, !dbg !9720
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state) #11, !dbg !9720
  ret ptr %105, !dbg !9721
}

declare !dbg !9722 ptr @PySequence_List(ptr noundef) #1

declare !dbg !9723 i32 @PyList_Sort(ptr noundef) #1

declare !dbg !9724 ptr @PyList_AsTuple(ptr noundef) #1

declare !dbg !9725 ptr @PyDict_GetItemWithError(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__GetModuleGlobalName(ptr noundef %name, ptr noundef %dict_version, ptr noundef %dict_cached_value) #0 !dbg !9726 {
entry:
  %retval = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %dict_version.addr = alloca ptr, align 8
  %dict_cached_value.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !9731, metadata !DIExpression()), !dbg !9735
  store ptr %dict_version, ptr %dict_version.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %dict_version.addr, metadata !9732, metadata !DIExpression()), !dbg !9736
  store ptr %dict_cached_value, ptr %dict_cached_value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %dict_cached_value.addr, metadata !9733, metadata !DIExpression()), !dbg !9737
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !9738
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9734, metadata !DIExpression()), !dbg !9739
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9740, !tbaa !1899
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 0, !dbg !9740
  %1 = load ptr, ptr %__pyx_d, align 8, !dbg !9740, !tbaa !2019
  %2 = load ptr, ptr %name.addr, align 8, !dbg !9741, !tbaa !1899
  %3 = load ptr, ptr %name.addr, align 8, !dbg !9742, !tbaa !1899
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %3, i32 0, i32 2, !dbg !9743
  %4 = load i64, ptr %hash, align 8, !dbg !9743, !tbaa !9173
  %call = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %1, ptr noundef %2, i64 noundef %4), !dbg !9744
  store ptr %call, ptr %result, align 8, !dbg !9745, !tbaa !1899
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9746, !tbaa !1899
  %__pyx_d1 = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 0, !dbg !9746
  %6 = load ptr, ptr %__pyx_d1, align 8, !dbg !9746, !tbaa !2019
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %6, i32 0, i32 2, !dbg !9746
  %7 = load i64, ptr %ma_version_tag, align 8, !dbg !9746, !tbaa !9568
  %8 = load ptr, ptr %dict_version.addr, align 8, !dbg !9746, !tbaa !1899
  store i64 %7, ptr %8, align 8, !dbg !9746, !tbaa !2597
  %9 = load ptr, ptr %result, align 8, !dbg !9746, !tbaa !1899
  %10 = load ptr, ptr %dict_cached_value.addr, align 8, !dbg !9746, !tbaa !1899
  store ptr %9, ptr %10, align 8, !dbg !9746, !tbaa !1899
  %11 = load ptr, ptr %result, align 8, !dbg !9747, !tbaa !1899
  %tobool = icmp ne ptr %11, null, !dbg !9747
  %lnot = xor i1 %tobool, true, !dbg !9747
  %lnot2 = xor i1 %lnot, true, !dbg !9747
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9747
  %conv = sext i32 %lnot.ext to i64, !dbg !9747
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !9747
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9747
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9749

if.then:                                          ; preds = %entry
  %12 = load ptr, ptr %result, align 8, !dbg !9750, !tbaa !1899
  call void @Py_INCREF(ptr noundef %12), !dbg !9750
  %13 = load ptr, ptr %result, align 8, !dbg !9750, !tbaa !1899
  store ptr %13, ptr %retval, align 8, !dbg !9752
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9752

if.else:                                          ; preds = %entry
  %call4 = call ptr @PyErr_Occurred(), !dbg !9753
  %tobool5 = icmp ne ptr %call4, null, !dbg !9753
  %lnot6 = xor i1 %tobool5, true, !dbg !9753
  %lnot8 = xor i1 %lnot6, true, !dbg !9753
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9753
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !9753
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !9753
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !9753
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !9755

if.then13:                                        ; preds = %if.else
  store ptr null, ptr %retval, align 8, !dbg !9756
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9756

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  %14 = load ptr, ptr %name.addr, align 8, !dbg !9758, !tbaa !1899
  %call15 = call ptr @__Pyx_GetBuiltinName(ptr noundef %14), !dbg !9759
  store ptr %call15, ptr %retval, align 8, !dbg !9760
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9760

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !9761
  %15 = load ptr, ptr %retval, align 8, !dbg !9761
  ret ptr %15, !dbg !9761
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyInt_From_int(i32 noundef %value) #3 !dbg !9762 {
entry:
  %value.addr = alloca i32, align 4
  %neg_one = alloca i32, align 4
  %const_zero = alloca i32, align 4
  %is_unsigned = alloca i32, align 4
  %one = alloca i32, align 4
  %little = alloca i32, align 4
  %bytes = alloca ptr, align 8
  store i32 %value, ptr %value.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !9766, metadata !DIExpression()), !dbg !9771
  call void @llvm.lifetime.start.p0(i64 4, ptr %neg_one) #11, !dbg !9772
  tail call void @llvm.dbg.declare(metadata ptr %neg_one, metadata !9767, metadata !DIExpression()), !dbg !9773
  store i32 -1, ptr %neg_one, align 4, !dbg !9773, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 4, ptr %const_zero) #11, !dbg !9772
  tail call void @llvm.dbg.declare(metadata ptr %const_zero, metadata !9769, metadata !DIExpression()), !dbg !9774
  store i32 0, ptr %const_zero, align 4, !dbg !9774, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #11, !dbg !9775
  tail call void @llvm.dbg.declare(metadata ptr %is_unsigned, metadata !9770, metadata !DIExpression()), !dbg !9776
  store i32 0, ptr %is_unsigned, align 4, !dbg !9776, !tbaa !1984
  %0 = load i32, ptr %value.addr, align 4, !dbg !9777, !tbaa !1984
  %conv = sext i32 %0 to i64, !dbg !9782
  %call = call ptr @PyLong_FromLong(i64 noundef %conv), !dbg !9783
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #11, !dbg !9784
  call void @llvm.lifetime.end.p0(i64 4, ptr %const_zero) #11, !dbg !9784
  call void @llvm.lifetime.end.p0(i64 4, ptr %neg_one) #11, !dbg !9784
  ret ptr %call, !dbg !9785
}

declare !dbg !9786 ptr @PyObject_RichCompare(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyVectorcall_NARGS(i64 noundef %n) #3 !dbg !9787 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, ptr %n.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  %0 = load i64, ptr %n.addr, align 8, !dbg !9794, !tbaa !2597
  %and = and i64 %0, 9223372036854775807, !dbg !9795
  ret i64 %and, !dbg !9796
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethO(ptr noundef %func, ptr noundef %arg) #3 !dbg !9797 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cfunc = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !9799, metadata !DIExpression()), !dbg !9804
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !9800, metadata !DIExpression()), !dbg !9805
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #11, !dbg !9806
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !9801, metadata !DIExpression()), !dbg !9807
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !9806
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9802, metadata !DIExpression()), !dbg !9808
  call void @llvm.lifetime.start.p0(i64 8, ptr %cfunc) #11, !dbg !9809
  tail call void @llvm.dbg.declare(metadata ptr %cfunc, metadata !9803, metadata !DIExpression()), !dbg !9810
  %0 = load ptr, ptr %func.addr, align 8, !dbg !9811, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 1, !dbg !9811
  %1 = load ptr, ptr %m_ml, align 8, !dbg !9811, !tbaa !4746
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %1, i32 0, i32 1, !dbg !9811
  %2 = load ptr, ptr %ml_meth, align 8, !dbg !9811, !tbaa !4748
  store ptr %2, ptr %cfunc, align 8, !dbg !9812, !tbaa !1899
  %3 = load ptr, ptr %func.addr, align 8, !dbg !9813, !tbaa !1899
  %call = call ptr @__Pyx_CyOrPyCFunction_GET_SELF(ptr noundef %3), !dbg !9814
  store ptr %call, ptr %self, align 8, !dbg !9815, !tbaa !1899
  %call1 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.93), !dbg !9816
  %tobool = icmp ne i32 %call1, 0, !dbg !9816
  %lnot = xor i1 %tobool, true, !dbg !9816
  %lnot2 = xor i1 %lnot, true, !dbg !9816
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9816
  %conv = sext i32 %lnot.ext to i64, !dbg !9816
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9816
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9816
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9818

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !9819
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9819

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %cfunc, align 8, !dbg !9820, !tbaa !1899
  %5 = load ptr, ptr %self, align 8, !dbg !9821, !tbaa !1899
  %6 = load ptr, ptr %arg.addr, align 8, !dbg !9822, !tbaa !1899
  %call4 = call ptr %4(ptr noundef %5, ptr noundef %6), !dbg !9820
  store ptr %call4, ptr %result, align 8, !dbg !9823, !tbaa !1899
  call void @Py_LeaveRecursiveCall(), !dbg !9824
  %7 = load ptr, ptr %result, align 8, !dbg !9825, !tbaa !1899
  %tobool5 = icmp ne ptr %7, null, !dbg !9825
  %lnot6 = xor i1 %tobool5, true, !dbg !9825
  %lnot8 = xor i1 %lnot6, true, !dbg !9825
  %lnot10 = xor i1 %lnot8, true, !dbg !9825
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !9825
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !9825
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !9825
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !9825
  br i1 %tobool14, label %land.lhs.true, label %if.end27, !dbg !9827

land.lhs.true:                                    ; preds = %if.end
  %call15 = call ptr @PyErr_Occurred(), !dbg !9828
  %tobool16 = icmp ne ptr %call15, null, !dbg !9828
  %lnot17 = xor i1 %tobool16, true, !dbg !9828
  %lnot19 = xor i1 %lnot17, true, !dbg !9828
  %lnot21 = xor i1 %lnot19, true, !dbg !9828
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9828
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9828
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !9828
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !9828
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9829

if.then26:                                        ; preds = %land.lhs.true
  %8 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !9830, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %8, ptr noundef @.str.94), !dbg !9832
  br label %if.end27, !dbg !9833

if.end27:                                         ; preds = %if.then26, %land.lhs.true, %if.end
  %9 = load ptr, ptr %result, align 8, !dbg !9834, !tbaa !1899
  store ptr %9, ptr %retval, align 8, !dbg !9835
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9835

cleanup:                                          ; preds = %if.end27, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cfunc) #11, !dbg !9836
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !9836
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #11, !dbg !9836
  %10 = load ptr, ptr %retval, align 8, !dbg !9836
  ret ptr %10, !dbg !9836
}

declare !dbg !9837 ptr @PyVectorcall_Function(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_Call(ptr noundef %func, ptr noundef %arg, ptr noundef %kw) #3 !dbg !9840 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %call = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !9842, metadata !DIExpression()), !dbg !9847
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !9843, metadata !DIExpression()), !dbg !9848
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !9844, metadata !DIExpression()), !dbg !9849
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !9850
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9845, metadata !DIExpression()), !dbg !9851
  call void @llvm.lifetime.start.p0(i64 8, ptr %call) #11, !dbg !9852
  tail call void @llvm.dbg.declare(metadata ptr %call, metadata !9846, metadata !DIExpression()), !dbg !9853
  %0 = load ptr, ptr %func.addr, align 8, !dbg !9854, !tbaa !1899
  %call1 = call ptr @Py_TYPE(ptr noundef %0), !dbg !9854
  %tp_call = getelementptr inbounds %struct._typeobject, ptr %call1, i32 0, i32 14, !dbg !9855
  %1 = load ptr, ptr %tp_call, align 8, !dbg !9855, !tbaa !9856
  store ptr %1, ptr %call, align 8, !dbg !9853, !tbaa !1899
  %2 = load ptr, ptr %call, align 8, !dbg !9857, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !9857
  %lnot = xor i1 %tobool, true, !dbg !9857
  %lnot2 = xor i1 %lnot, true, !dbg !9857
  %lnot3 = xor i1 %lnot2, true, !dbg !9857
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9857
  %conv = sext i32 %lnot.ext to i64, !dbg !9857
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9857
  %tobool4 = icmp ne i64 %expval, 0, !dbg !9857
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9859

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %func.addr, align 8, !dbg !9860, !tbaa !1899
  %4 = load ptr, ptr %arg.addr, align 8, !dbg !9861, !tbaa !1899
  %5 = load ptr, ptr %kw.addr, align 8, !dbg !9862, !tbaa !1899
  %call5 = call ptr @PyObject_Call(ptr noundef %3, ptr noundef %4, ptr noundef %5), !dbg !9863
  store ptr %call5, ptr %retval, align 8, !dbg !9864
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9864

if.end:                                           ; preds = %entry
  %call6 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.93), !dbg !9865
  %tobool7 = icmp ne i32 %call6, 0, !dbg !9865
  %lnot8 = xor i1 %tobool7, true, !dbg !9865
  %lnot10 = xor i1 %lnot8, true, !dbg !9865
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !9865
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !9865
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !9865
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !9865
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !9867

if.then15:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !9868
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9868

if.end16:                                         ; preds = %if.end
  %6 = load ptr, ptr %call, align 8, !dbg !9869, !tbaa !1899
  %7 = load ptr, ptr %func.addr, align 8, !dbg !9870, !tbaa !1899
  %8 = load ptr, ptr %arg.addr, align 8, !dbg !9871, !tbaa !1899
  %9 = load ptr, ptr %kw.addr, align 8, !dbg !9872, !tbaa !1899
  %call17 = call ptr %6(ptr noundef %7, ptr noundef %8, ptr noundef %9), !dbg !9873
  store ptr %call17, ptr %result, align 8, !dbg !9874, !tbaa !1899
  call void @Py_LeaveRecursiveCall(), !dbg !9875
  %10 = load ptr, ptr %result, align 8, !dbg !9876, !tbaa !1899
  %tobool18 = icmp ne ptr %10, null, !dbg !9876
  %lnot19 = xor i1 %tobool18, true, !dbg !9876
  %lnot21 = xor i1 %lnot19, true, !dbg !9876
  %lnot23 = xor i1 %lnot21, true, !dbg !9876
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !9876
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !9876
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0), !dbg !9876
  %tobool27 = icmp ne i64 %expval26, 0, !dbg !9876
  br i1 %tobool27, label %land.lhs.true, label %if.end40, !dbg !9878

land.lhs.true:                                    ; preds = %if.end16
  %call28 = call ptr @PyErr_Occurred(), !dbg !9879
  %tobool29 = icmp ne ptr %call28, null, !dbg !9879
  %lnot30 = xor i1 %tobool29, true, !dbg !9879
  %lnot32 = xor i1 %lnot30, true, !dbg !9879
  %lnot34 = xor i1 %lnot32, true, !dbg !9879
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !9879
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !9879
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0), !dbg !9879
  %tobool38 = icmp ne i64 %expval37, 0, !dbg !9879
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !9880

if.then39:                                        ; preds = %land.lhs.true
  %11 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !9881, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %11, ptr noundef @.str.94), !dbg !9883
  br label %if.end40, !dbg !9884

if.end40:                                         ; preds = %if.then39, %land.lhs.true, %if.end16
  %12 = load ptr, ptr %result, align 8, !dbg !9885, !tbaa !1899
  store ptr %12, ptr %retval, align 8, !dbg !9886
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9886

cleanup:                                          ; preds = %if.end40, %if.then15, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %call) #11, !dbg !9887
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !9887
  %13 = load ptr, ptr %retval, align 8, !dbg !9887
  ret ptr %13, !dbg !9887
}

declare !dbg !9888 ptr @PyObject_VectorcallDict(ptr noundef, ptr noundef, i64 noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_CyOrPyCFunction_GET_SELF(ptr noundef %func) #3 !dbg !9889 {
entry:
  %func.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !9891, metadata !DIExpression()), !dbg !9892
  %0 = load ptr, ptr %func.addr, align 8, !dbg !9893, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 1, !dbg !9893
  %1 = load ptr, ptr %m_ml, align 8, !dbg !9893, !tbaa !4746
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %1, i32 0, i32 2, !dbg !9893
  %2 = load i32, ptr %ml_flags, align 8, !dbg !9893, !tbaa !4755
  %and = and i32 %2, 32, !dbg !9894
  %tobool = icmp ne i32 %and, 0, !dbg !9894
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9895

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9895

cond.false:                                       ; preds = %entry
  %3 = load ptr, ptr %func.addr, align 8, !dbg !9896, !tbaa !1899
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %3, i32 0, i32 2, !dbg !9897
  %4 = load ptr, ptr %m_self, align 8, !dbg !9897, !tbaa !4850
  br label %cond.end, !dbg !9895

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ null, %cond.true ], [ %4, %cond.false ], !dbg !9895
  ret ptr %cond, !dbg !9898
}

declare !dbg !9899 i32 @Py_EnterRecursiveCall(ptr noundef) #1

declare !dbg !9903 void @Py_LeaveRecursiveCall() #1

declare !dbg !9904 ptr @PyObject_Call(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !9905 i32 @PyObject_IsTrue(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyType_Ready(ptr noundef %t) #0 !dbg !9906 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca ptr, align 8
  %r = alloca i32, align 4
  %bases = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %gc_was_enabled = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !9908, metadata !DIExpression()), !dbg !9913
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #11, !dbg !9914
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !9909, metadata !DIExpression()), !dbg !9915
  call void @llvm.lifetime.start.p0(i64 8, ptr %bases) #11, !dbg !9916
  tail call void @llvm.dbg.declare(metadata ptr %bases, metadata !9910, metadata !DIExpression()), !dbg !9917
  %0 = load ptr, ptr %t.addr, align 8, !dbg !9918, !tbaa !1899
  %tp_bases = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 40, !dbg !9918
  %1 = load ptr, ptr %tp_bases, align 8, !dbg !9918, !tbaa !9919
  store ptr %1, ptr %bases, align 8, !dbg !9917, !tbaa !1899
  %2 = load ptr, ptr %bases, align 8, !dbg !9920, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !9920
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9922

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr %t.addr, align 8, !dbg !9923, !tbaa !1899
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %3, i32 0, i32 1, !dbg !9923
  %4 = load ptr, ptr %tp_name, align 8, !dbg !9923, !tbaa !4021
  %5 = load ptr, ptr %t.addr, align 8, !dbg !9923, !tbaa !1899
  %tp_dictoffset = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 34, !dbg !9923
  %6 = load i64, ptr %tp_dictoffset, align 8, !dbg !9923, !tbaa !3255
  %7 = load ptr, ptr %bases, align 8, !dbg !9923, !tbaa !1899
  %call = call i32 @__Pyx_validate_bases_tuple(ptr noundef %4, i64 noundef %6, ptr noundef %7), !dbg !9923
  %cmp = icmp eq i32 %call, -1, !dbg !9923
  %lnot = xor i1 %cmp, true, !dbg !9923
  %lnot1 = xor i1 %lnot, true, !dbg !9923
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9923
  %conv = sext i32 %lnot.ext to i64, !dbg !9923
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9923
  %tobool2 = icmp ne i64 %expval, 0, !dbg !9923
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9924

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, ptr %retval, align 4, !dbg !9925
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9925

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %gc_was_enabled) #11, !dbg !9926
  tail call void @llvm.dbg.declare(metadata ptr %gc_was_enabled, metadata !9911, metadata !DIExpression()), !dbg !9927
  %call3 = call i32 @PyGC_Disable(), !dbg !9928
  store i32 %call3, ptr %gc_was_enabled, align 4, !dbg !9929, !tbaa !1984
  %8 = load ptr, ptr %t.addr, align 8, !dbg !9930, !tbaa !1899
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %8, i32 0, i32 19, !dbg !9931
  %9 = load i64, ptr %tp_flags, align 8, !dbg !9932, !tbaa !4160
  %or = or i64 %9, 512, !dbg !9932
  store i64 %or, ptr %tp_flags, align 8, !dbg !9932, !tbaa !4160
  %10 = load ptr, ptr %t.addr, align 8, !dbg !9933, !tbaa !1899
  %tp_flags4 = getelementptr inbounds %struct._typeobject, ptr %10, i32 0, i32 19, !dbg !9934
  %11 = load i64, ptr %tp_flags4, align 8, !dbg !9935, !tbaa !4160
  %or5 = or i64 %11, 256, !dbg !9935
  store i64 %or5, ptr %tp_flags4, align 8, !dbg !9935, !tbaa !4160
  %12 = load ptr, ptr %t.addr, align 8, !dbg !9936, !tbaa !1899
  %call6 = call i32 @PyType_Ready(ptr noundef %12), !dbg !9937
  store i32 %call6, ptr %r, align 4, !dbg !9938, !tbaa !1984
  %13 = load ptr, ptr %t.addr, align 8, !dbg !9939, !tbaa !1899
  %tp_flags7 = getelementptr inbounds %struct._typeobject, ptr %13, i32 0, i32 19, !dbg !9940
  %14 = load i64, ptr %tp_flags7, align 8, !dbg !9941, !tbaa !4160
  %and = and i64 %14, -513, !dbg !9941
  store i64 %and, ptr %tp_flags7, align 8, !dbg !9941, !tbaa !4160
  %15 = load i32, ptr %gc_was_enabled, align 4, !dbg !9942, !tbaa !1984
  %tobool8 = icmp ne i32 %15, 0, !dbg !9942
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !9944

if.then9:                                         ; preds = %if.end
  %call10 = call i32 @PyGC_Enable(), !dbg !9945
  br label %if.end11, !dbg !9945

if.end11:                                         ; preds = %if.then9, %if.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %gc_was_enabled) #11, !dbg !9946
  %16 = load i32, ptr %r, align 4, !dbg !9947, !tbaa !1984
  store i32 %16, ptr %retval, align 4, !dbg !9948
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9948

cleanup:                                          ; preds = %if.end11, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %bases) #11, !dbg !9949
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #11, !dbg !9949
  %17 = load i32, ptr %retval, align 4, !dbg !9949
  ret i32 %17, !dbg !9949
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_SetVtable(ptr noundef %type, ptr noundef %vtable) #0 !dbg !9950 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca ptr, align 8
  %vtable.addr = alloca ptr, align 8
  %ob = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !9954, metadata !DIExpression()), !dbg !9958
  store ptr %vtable, ptr %vtable.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %vtable.addr, metadata !9955, metadata !DIExpression()), !dbg !9959
  call void @llvm.lifetime.start.p0(i64 8, ptr %ob) #11, !dbg !9960
  tail call void @llvm.dbg.declare(metadata ptr %ob, metadata !9956, metadata !DIExpression()), !dbg !9961
  %0 = load ptr, ptr %vtable.addr, align 8, !dbg !9962, !tbaa !1899
  %call = call ptr @PyCapsule_New(ptr noundef %0, ptr noundef null, ptr noundef null), !dbg !9963
  store ptr %call, ptr %ob, align 8, !dbg !9961, !tbaa !1899
  %1 = load ptr, ptr %ob, align 8, !dbg !9964, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !9964
  %lnot = xor i1 %tobool, true, !dbg !9964
  %lnot1 = xor i1 %lnot, true, !dbg !9964
  %lnot2 = xor i1 %lnot1, true, !dbg !9964
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9964
  %conv = sext i32 %lnot.ext to i64, !dbg !9964
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9964
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9964
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9966

if.then:                                          ; preds = %entry
  br label %bad, !dbg !9967

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %type.addr, align 8, !dbg !9968, !tbaa !1899
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 31, !dbg !9968
  %3 = load ptr, ptr %tp_dict, align 8, !dbg !9968, !tbaa !2420
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9968, !tbaa !1899
  %__pyx_n_s_pyx_vtable = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 76, !dbg !9968
  %5 = load ptr, ptr %__pyx_n_s_pyx_vtable, align 8, !dbg !9968, !tbaa !9970
  %6 = load ptr, ptr %ob, align 8, !dbg !9968, !tbaa !1899
  %call4 = call i32 @PyDict_SetItem(ptr noundef %3, ptr noundef %5, ptr noundef %6), !dbg !9968
  %cmp = icmp slt i32 %call4, 0, !dbg !9968
  %lnot6 = xor i1 %cmp, true, !dbg !9968
  %lnot8 = xor i1 %lnot6, true, !dbg !9968
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9968
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !9968
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !9968
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !9968
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9971

if.then13:                                        ; preds = %if.end
  br label %bad, !dbg !9972

if.end14:                                         ; preds = %if.end
  %7 = load ptr, ptr %ob, align 8, !dbg !9973, !tbaa !1899
  call void @Py_DECREF(ptr noundef %7), !dbg !9973
  store i32 0, ptr %retval, align 4, !dbg !9974
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9974

bad:                                              ; preds = %if.then13, %if.then
  tail call void @llvm.dbg.label(metadata !9957), !dbg !9975
  %8 = load ptr, ptr %ob, align 8, !dbg !9976, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %8), !dbg !9976
  store i32 -1, ptr %retval, align 4, !dbg !9977
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9977

cleanup:                                          ; preds = %bad, %if.end14
  call void @llvm.lifetime.end.p0(i64 8, ptr %ob) #11, !dbg !9978
  %9 = load i32, ptr %retval, align 4, !dbg !9978
  ret i32 %9, !dbg !9978
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_MergeVtables(ptr noundef %type) #0 !dbg !9979 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %base_vtables = alloca ptr, align 8
  %tp_base_name = alloca ptr, align 8
  %base_name = alloca ptr, align 8
  %unknown = alloca ptr, align 8
  %bases = alloca ptr, align 8
  %base_depth = alloca i32, align 4
  %base = alloca ptr, align 8
  %base_vtable = alloca ptr, align 8
  %j = alloca i32, align 4
  %base10 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !9981, metadata !DIExpression()), !dbg !10000
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #11, !dbg !10001
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !9982, metadata !DIExpression()), !dbg !10002
  call void @llvm.lifetime.start.p0(i64 8, ptr %base_vtables) #11, !dbg !10003
  tail call void @llvm.dbg.declare(metadata ptr %base_vtables, metadata !9983, metadata !DIExpression()), !dbg !10004
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp_base_name) #11, !dbg !10005
  tail call void @llvm.dbg.declare(metadata ptr %tp_base_name, metadata !9984, metadata !DIExpression()), !dbg !10006
  call void @llvm.lifetime.start.p0(i64 8, ptr %base_name) #11, !dbg !10007
  tail call void @llvm.dbg.declare(metadata ptr %base_name, metadata !9985, metadata !DIExpression()), !dbg !10008
  call void @llvm.lifetime.start.p0(i64 8, ptr %unknown) #11, !dbg !10009
  tail call void @llvm.dbg.declare(metadata ptr %unknown, metadata !9986, metadata !DIExpression()), !dbg !10010
  store ptr inttoptr (i64 -1 to ptr), ptr %unknown, align 8, !dbg !10010, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %bases) #11, !dbg !10011
  tail call void @llvm.dbg.declare(metadata ptr %bases, metadata !9987, metadata !DIExpression()), !dbg !10012
  %0 = load ptr, ptr %type.addr, align 8, !dbg !10013, !tbaa !1899
  %tp_bases = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 40, !dbg !10014
  %1 = load ptr, ptr %tp_bases, align 8, !dbg !10014, !tbaa !9919
  store ptr %1, ptr %bases, align 8, !dbg !10012, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %base_depth) #11, !dbg !10015
  tail call void @llvm.dbg.declare(metadata ptr %base_depth, metadata !9988, metadata !DIExpression()), !dbg !10016
  store i32 0, ptr %base_depth, align 4, !dbg !10016, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %base) #11, !dbg !10017
  tail call void @llvm.dbg.declare(metadata ptr %base, metadata !9989, metadata !DIExpression()), !dbg !10018
  %2 = load ptr, ptr %type.addr, align 8, !dbg !10019, !tbaa !1899
  %tp_base = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 30, !dbg !10020
  %3 = load ptr, ptr %tp_base, align 8, !dbg !10020, !tbaa !6422
  store ptr %3, ptr %base, align 8, !dbg !10018, !tbaa !1899
  br label %while.cond, !dbg !10021

while.cond:                                       ; preds = %while.body, %entry
  %4 = load ptr, ptr %base, align 8, !dbg !10022, !tbaa !1899
  %tobool = icmp ne ptr %4, null, !dbg !10021
  br i1 %tobool, label %while.body, label %while.end, !dbg !10021

while.body:                                       ; preds = %while.cond
  %5 = load i32, ptr %base_depth, align 4, !dbg !10023, !tbaa !1984
  %add = add i32 %5, 1, !dbg !10023
  store i32 %add, ptr %base_depth, align 4, !dbg !10023, !tbaa !1984
  %6 = load ptr, ptr %base, align 8, !dbg !10025, !tbaa !1899
  %tp_base1 = getelementptr inbounds %struct._typeobject, ptr %6, i32 0, i32 30, !dbg !10026
  %7 = load ptr, ptr %tp_base1, align 8, !dbg !10026, !tbaa !6422
  store ptr %7, ptr %base, align 8, !dbg !10027, !tbaa !1899
  br label %while.cond, !dbg !10021, !llvm.loop !10028

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %base) #11, !dbg !10030
  %8 = load i32, ptr %base_depth, align 4, !dbg !10031, !tbaa !1984
  %add2 = add i32 %8, 1, !dbg !10032
  %conv = sext i32 %add2 to i64, !dbg !10033
  %mul = mul i64 8, %conv, !dbg !10034
  %call = call noalias ptr @malloc(i64 noundef %mul) #13, !dbg !10035
  store ptr %call, ptr %base_vtables, align 8, !dbg !10036, !tbaa !1899
  %9 = load ptr, ptr %unknown, align 8, !dbg !10037, !tbaa !1899
  %10 = load ptr, ptr %base_vtables, align 8, !dbg !10038, !tbaa !1899
  %arrayidx = getelementptr ptr, ptr %10, i64 0, !dbg !10038
  store ptr %9, ptr %arrayidx, align 8, !dbg !10039, !tbaa !1899
  store i32 1, ptr %i, align 4, !dbg !10040, !tbaa !1984
  br label %for.cond, !dbg !10041

for.cond:                                         ; preds = %for.inc45, %while.end
  %11 = load i32, ptr %i, align 4, !dbg !10042, !tbaa !1984
  %conv3 = sext i32 %11 to i64, !dbg !10042
  %12 = load ptr, ptr %bases, align 8, !dbg !10043, !tbaa !1899
  %call4 = call i64 @PyTuple_GET_SIZE(ptr noundef %12), !dbg !10043
  %cmp = icmp slt i64 %conv3, %call4, !dbg !10044
  br i1 %cmp, label %for.body, label %for.end47, !dbg !10045

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %base_vtable) #11, !dbg !10046
  tail call void @llvm.dbg.declare(metadata ptr %base_vtable, metadata !9991, metadata !DIExpression()), !dbg !10047
  %13 = load ptr, ptr %bases, align 8, !dbg !10048, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %13, i32 0, i32 1, !dbg !10048
  %14 = load i32, ptr %i, align 4, !dbg !10048, !tbaa !1984
  %idxprom = sext i32 %14 to i64, !dbg !10048
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %idxprom, !dbg !10048
  %15 = load ptr, ptr %arrayidx6, align 8, !dbg !10048, !tbaa !1899
  %call7 = call ptr @__Pyx_GetVtable(ptr noundef %15), !dbg !10049
  store ptr %call7, ptr %base_vtable, align 8, !dbg !10047, !tbaa !1899
  %16 = load ptr, ptr %base_vtable, align 8, !dbg !10050, !tbaa !1899
  %cmp8 = icmp ne ptr %16, null, !dbg !10051
  br i1 %cmp8, label %if.then, label %if.end41, !dbg !10052

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #11, !dbg !10053
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !9995, metadata !DIExpression()), !dbg !10054
  call void @llvm.lifetime.start.p0(i64 8, ptr %base10) #11, !dbg !10055
  tail call void @llvm.dbg.declare(metadata ptr %base10, metadata !9998, metadata !DIExpression()), !dbg !10056
  %17 = load ptr, ptr %type.addr, align 8, !dbg !10057, !tbaa !1899
  %tp_base11 = getelementptr inbounds %struct._typeobject, ptr %17, i32 0, i32 30, !dbg !10058
  %18 = load ptr, ptr %tp_base11, align 8, !dbg !10058, !tbaa !6422
  store ptr %18, ptr %base10, align 8, !dbg !10056, !tbaa !1899
  store i32 0, ptr %j, align 4, !dbg !10059, !tbaa !1984
  br label %for.cond12, !dbg !10061

for.cond12:                                       ; preds = %for.inc, %if.then
  %19 = load i32, ptr %j, align 4, !dbg !10062, !tbaa !1984
  %20 = load i32, ptr %base_depth, align 4, !dbg !10064, !tbaa !1984
  %cmp13 = icmp slt i32 %19, %20, !dbg !10065
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !10066

for.body15:                                       ; preds = %for.cond12
  %21 = load ptr, ptr %base_vtables, align 8, !dbg !10067, !tbaa !1899
  %22 = load i32, ptr %j, align 4, !dbg !10070, !tbaa !1984
  %idxprom16 = sext i32 %22 to i64, !dbg !10067
  %arrayidx17 = getelementptr ptr, ptr %21, i64 %idxprom16, !dbg !10067
  %23 = load ptr, ptr %arrayidx17, align 8, !dbg !10067, !tbaa !1899
  %24 = load ptr, ptr %unknown, align 8, !dbg !10071, !tbaa !1899
  %cmp18 = icmp eq ptr %23, %24, !dbg !10072
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !10073

if.then20:                                        ; preds = %for.body15
  %25 = load ptr, ptr %base10, align 8, !dbg !10074, !tbaa !1899
  %call21 = call ptr @__Pyx_GetVtable(ptr noundef %25), !dbg !10076
  %26 = load ptr, ptr %base_vtables, align 8, !dbg !10077, !tbaa !1899
  %27 = load i32, ptr %j, align 4, !dbg !10078, !tbaa !1984
  %idxprom22 = sext i32 %27 to i64, !dbg !10077
  %arrayidx23 = getelementptr ptr, ptr %26, i64 %idxprom22, !dbg !10077
  store ptr %call21, ptr %arrayidx23, align 8, !dbg !10079, !tbaa !1899
  %28 = load ptr, ptr %unknown, align 8, !dbg !10080, !tbaa !1899
  %29 = load ptr, ptr %base_vtables, align 8, !dbg !10081, !tbaa !1899
  %30 = load i32, ptr %j, align 4, !dbg !10082, !tbaa !1984
  %add24 = add i32 %30, 1, !dbg !10083
  %idxprom25 = sext i32 %add24 to i64, !dbg !10081
  %arrayidx26 = getelementptr ptr, ptr %29, i64 %idxprom25, !dbg !10081
  store ptr %28, ptr %arrayidx26, align 8, !dbg !10084, !tbaa !1899
  br label %if.end, !dbg !10085

if.end:                                           ; preds = %if.then20, %for.body15
  %31 = load ptr, ptr %base_vtables, align 8, !dbg !10086, !tbaa !1899
  %32 = load i32, ptr %j, align 4, !dbg !10088, !tbaa !1984
  %idxprom27 = sext i32 %32 to i64, !dbg !10086
  %arrayidx28 = getelementptr ptr, ptr %31, i64 %idxprom27, !dbg !10086
  %33 = load ptr, ptr %arrayidx28, align 8, !dbg !10086, !tbaa !1899
  %34 = load ptr, ptr %base_vtable, align 8, !dbg !10089, !tbaa !1899
  %cmp29 = icmp eq ptr %33, %34, !dbg !10090
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !10091

if.then31:                                        ; preds = %if.end
  br label %for.end, !dbg !10092

if.else:                                          ; preds = %if.end
  %35 = load ptr, ptr %base_vtables, align 8, !dbg !10094, !tbaa !1899
  %36 = load i32, ptr %j, align 4, !dbg !10096, !tbaa !1984
  %idxprom32 = sext i32 %36 to i64, !dbg !10094
  %arrayidx33 = getelementptr ptr, ptr %35, i64 %idxprom32, !dbg !10094
  %37 = load ptr, ptr %arrayidx33, align 8, !dbg !10094, !tbaa !1899
  %cmp34 = icmp eq ptr %37, null, !dbg !10097
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !10098

if.then36:                                        ; preds = %if.else
  store i32 10, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10099

if.end37:                                         ; preds = %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %38 = load ptr, ptr %base10, align 8, !dbg !10101, !tbaa !1899
  %tp_base39 = getelementptr inbounds %struct._typeobject, ptr %38, i32 0, i32 30, !dbg !10102
  %39 = load ptr, ptr %tp_base39, align 8, !dbg !10102, !tbaa !6422
  store ptr %39, ptr %base10, align 8, !dbg !10103, !tbaa !1899
  br label %for.inc, !dbg !10104

for.inc:                                          ; preds = %if.end38
  %40 = load i32, ptr %j, align 4, !dbg !10105, !tbaa !1984
  %inc = add i32 %40, 1, !dbg !10105
  store i32 %inc, ptr %j, align 4, !dbg !10105, !tbaa !1984
  br label %for.cond12, !dbg !10106, !llvm.loop !10107

for.end:                                          ; preds = %if.then31, %for.cond12
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10109
  br label %cleanup, !dbg !10109

cleanup:                                          ; preds = %if.then36, %for.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %base10) #11, !dbg !10109
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #11, !dbg !10109
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup42 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end41, !dbg !10110

if.end41:                                         ; preds = %cleanup.cont, %for.body
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10111
  br label %cleanup42, !dbg !10111

cleanup42:                                        ; preds = %if.end41, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %base_vtable) #11, !dbg !10111
  %cleanup.dest43 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest43, label %cleanup54 [
    i32 0, label %cleanup.cont44
    i32 10, label %bad
  ]

cleanup.cont44:                                   ; preds = %cleanup42
  br label %for.inc45, !dbg !10112

for.inc45:                                        ; preds = %cleanup.cont44
  %41 = load i32, ptr %i, align 4, !dbg !10113, !tbaa !1984
  %inc46 = add i32 %41, 1, !dbg !10113
  store i32 %inc46, ptr %i, align 4, !dbg !10113, !tbaa !1984
  br label %for.cond, !dbg !10114, !llvm.loop !10115

for.end47:                                        ; preds = %for.cond
  call void @PyErr_Clear(), !dbg !10117
  %42 = load ptr, ptr %base_vtables, align 8, !dbg !10118, !tbaa !1899
  call void @free(ptr noundef %42) #11, !dbg !10119
  store i32 0, ptr %retval, align 4, !dbg !10120
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup54, !dbg !10120

bad:                                              ; preds = %cleanup42
  tail call void @llvm.dbg.label(metadata !9999), !dbg !10121
  %43 = load ptr, ptr %type.addr, align 8, !dbg !10122, !tbaa !1899
  %tp_base48 = getelementptr inbounds %struct._typeobject, ptr %43, i32 0, i32 30, !dbg !10122
  %44 = load ptr, ptr %tp_base48, align 8, !dbg !10122, !tbaa !6422
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %44, i32 0, i32 1, !dbg !10122
  %45 = load ptr, ptr %tp_name, align 8, !dbg !10122, !tbaa !4021
  store ptr %45, ptr %tp_base_name, align 8, !dbg !10123, !tbaa !1899
  %46 = load ptr, ptr %bases, align 8, !dbg !10124, !tbaa !1899
  %ob_item49 = getelementptr inbounds %struct.PyTupleObject, ptr %46, i32 0, i32 1, !dbg !10124
  %47 = load i32, ptr %i, align 4, !dbg !10124, !tbaa !1984
  %idxprom50 = sext i32 %47 to i64, !dbg !10124
  %arrayidx51 = getelementptr [1 x ptr], ptr %ob_item49, i64 0, i64 %idxprom50, !dbg !10124
  %48 = load ptr, ptr %arrayidx51, align 8, !dbg !10124, !tbaa !1899
  %tp_name52 = getelementptr inbounds %struct._typeobject, ptr %48, i32 0, i32 1, !dbg !10124
  %49 = load ptr, ptr %tp_name52, align 8, !dbg !10124, !tbaa !4021
  store ptr %49, ptr %base_name, align 8, !dbg !10125, !tbaa !1899
  %50 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10126, !tbaa !1899
  %51 = load ptr, ptr %tp_base_name, align 8, !dbg !10127, !tbaa !1899
  %52 = load ptr, ptr %base_name, align 8, !dbg !10128, !tbaa !1899
  %call53 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %50, ptr noundef @.str.127, ptr noundef %51, ptr noundef %52), !dbg !10129
  %53 = load ptr, ptr %base_vtables, align 8, !dbg !10130, !tbaa !1899
  call void @free(ptr noundef %53) #11, !dbg !10131
  store i32 -1, ptr %retval, align 4, !dbg !10132
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup54, !dbg !10132

cleanup54:                                        ; preds = %bad, %for.end47, %cleanup42
  call void @llvm.lifetime.end.p0(i64 4, ptr %base_depth) #11, !dbg !10133
  call void @llvm.lifetime.end.p0(i64 8, ptr %bases) #11, !dbg !10133
  call void @llvm.lifetime.end.p0(i64 8, ptr %unknown) #11, !dbg !10133
  call void @llvm.lifetime.end.p0(i64 8, ptr %base_name) #11, !dbg !10133
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp_base_name) #11, !dbg !10133
  call void @llvm.lifetime.end.p0(i64 8, ptr %base_vtables) #11, !dbg !10133
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #11, !dbg !10133
  %54 = load i32, ptr %retval, align 4, !dbg !10133
  ret i32 %54, !dbg !10133
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_setup_reduce(ptr noundef %type_obj) #0 !dbg !10134 {
entry:
  %type_obj.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %object_reduce = alloca ptr, align 8
  %object_getstate = alloca ptr, align 8
  %object_reduce_ex = alloca ptr, align 8
  %reduce = alloca ptr, align 8
  %reduce_ex = alloca ptr, align 8
  %reduce_cython = alloca ptr, align 8
  %setstate = alloca ptr, align 8
  %setstate_cython = alloca ptr, align 8
  %getstate = alloca ptr, align 8
  %type_obj_name = alloca ptr, align 8
  store ptr %type_obj, ptr %type_obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type_obj.addr, metadata !10136, metadata !DIExpression()), !dbg !10152
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #11, !dbg !10153
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10137, metadata !DIExpression()), !dbg !10154
  store i32 0, ptr %ret, align 4, !dbg !10154, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_reduce) #11, !dbg !10155
  tail call void @llvm.dbg.declare(metadata ptr %object_reduce, metadata !10138, metadata !DIExpression()), !dbg !10156
  store ptr null, ptr %object_reduce, align 8, !dbg !10156, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_getstate) #11, !dbg !10157
  tail call void @llvm.dbg.declare(metadata ptr %object_getstate, metadata !10139, metadata !DIExpression()), !dbg !10158
  store ptr null, ptr %object_getstate, align 8, !dbg !10158, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_reduce_ex) #11, !dbg !10159
  tail call void @llvm.dbg.declare(metadata ptr %object_reduce_ex, metadata !10140, metadata !DIExpression()), !dbg !10160
  store ptr null, ptr %object_reduce_ex, align 8, !dbg !10160, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce) #11, !dbg !10161
  tail call void @llvm.dbg.declare(metadata ptr %reduce, metadata !10141, metadata !DIExpression()), !dbg !10162
  store ptr null, ptr %reduce, align 8, !dbg !10162, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce_ex) #11, !dbg !10163
  tail call void @llvm.dbg.declare(metadata ptr %reduce_ex, metadata !10142, metadata !DIExpression()), !dbg !10164
  store ptr null, ptr %reduce_ex, align 8, !dbg !10164, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce_cython) #11, !dbg !10165
  tail call void @llvm.dbg.declare(metadata ptr %reduce_cython, metadata !10143, metadata !DIExpression()), !dbg !10166
  store ptr null, ptr %reduce_cython, align 8, !dbg !10166, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %setstate) #11, !dbg !10167
  tail call void @llvm.dbg.declare(metadata ptr %setstate, metadata !10144, metadata !DIExpression()), !dbg !10168
  store ptr null, ptr %setstate, align 8, !dbg !10168, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %setstate_cython) #11, !dbg !10169
  tail call void @llvm.dbg.declare(metadata ptr %setstate_cython, metadata !10145, metadata !DIExpression()), !dbg !10170
  store ptr null, ptr %setstate_cython, align 8, !dbg !10170, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %getstate) #11, !dbg !10171
  tail call void @llvm.dbg.declare(metadata ptr %getstate, metadata !10146, metadata !DIExpression()), !dbg !10172
  store ptr null, ptr %getstate, align 8, !dbg !10172, !tbaa !1899
  %0 = load ptr, ptr %type_obj.addr, align 8, !dbg !10173, !tbaa !1899
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10174, !tbaa !1899
  %__pyx_n_s_getstate = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 52, !dbg !10174
  %2 = load ptr, ptr %__pyx_n_s_getstate, align 8, !dbg !10174, !tbaa !10175
  %call = call ptr @_PyType_Lookup(ptr noundef %0, ptr noundef %2), !dbg !10176
  store ptr %call, ptr %getstate, align 8, !dbg !10177, !tbaa !1899
  %3 = load ptr, ptr %getstate, align 8, !dbg !10178, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !10178
  br i1 %tobool, label %if.then, label %if.end4, !dbg !10180

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10181, !tbaa !1899
  %__pyx_n_s_getstate1 = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 52, !dbg !10181
  %5 = load ptr, ptr %__pyx_n_s_getstate1, align 8, !dbg !10181, !tbaa !10175
  %call2 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %5), !dbg !10183
  store ptr %call2, ptr %object_getstate, align 8, !dbg !10184, !tbaa !1899
  %6 = load ptr, ptr %object_getstate, align 8, !dbg !10185, !tbaa !1899
  %7 = load ptr, ptr %getstate, align 8, !dbg !10187, !tbaa !1899
  %cmp = icmp ne ptr %6, %7, !dbg !10188
  br i1 %cmp, label %if.then3, label %if.end, !dbg !10189

if.then3:                                         ; preds = %if.then
  br label %__PYX_GOOD, !dbg !10190

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !10192

if.end4:                                          ; preds = %if.end, %entry
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10193, !tbaa !1899
  %__pyx_n_s_reduce_ex = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 79, !dbg !10193
  %9 = load ptr, ptr %__pyx_n_s_reduce_ex, align 8, !dbg !10193, !tbaa !10194
  %call5 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %9), !dbg !10195
  store ptr %call5, ptr %object_reduce_ex, align 8, !dbg !10196, !tbaa !1899
  %10 = load ptr, ptr %object_reduce_ex, align 8, !dbg !10197, !tbaa !1899
  %tobool6 = icmp ne ptr %10, null, !dbg !10197
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10199

if.then7:                                         ; preds = %if.end4
  br label %__PYX_BAD, !dbg !10200

if.end8:                                          ; preds = %if.end4
  %11 = load ptr, ptr %type_obj.addr, align 8, !dbg !10201, !tbaa !1899
  %12 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10202, !tbaa !1899
  %__pyx_n_s_reduce_ex9 = getelementptr inbounds %struct.__pyx_mstate, ptr %12, i32 0, i32 79, !dbg !10202
  %13 = load ptr, ptr %__pyx_n_s_reduce_ex9, align 8, !dbg !10202, !tbaa !10194
  %call10 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %11, ptr noundef %13), !dbg !10203
  store ptr %call10, ptr %reduce_ex, align 8, !dbg !10204, !tbaa !1899
  %14 = load ptr, ptr %reduce_ex, align 8, !dbg !10205, !tbaa !1899
  %tobool11 = icmp ne ptr %14, null, !dbg !10205
  %lnot = xor i1 %tobool11, true, !dbg !10205
  %lnot12 = xor i1 %lnot, true, !dbg !10205
  %lnot13 = xor i1 %lnot12, true, !dbg !10205
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !10205
  %conv = sext i32 %lnot.ext to i64, !dbg !10205
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10205
  %tobool14 = icmp ne i64 %expval, 0, !dbg !10205
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10207

if.then15:                                        ; preds = %if.end8
  br label %__PYX_BAD, !dbg !10208

if.end16:                                         ; preds = %if.end8
  %15 = load ptr, ptr %reduce_ex, align 8, !dbg !10209, !tbaa !1899
  %16 = load ptr, ptr %object_reduce_ex, align 8, !dbg !10211, !tbaa !1899
  %cmp17 = icmp eq ptr %15, %16, !dbg !10212
  br i1 %cmp17, label %if.then19, label %if.end147, !dbg !10213

if.then19:                                        ; preds = %if.end16
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10214, !tbaa !1899
  %__pyx_n_s_reduce = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 77, !dbg !10214
  %18 = load ptr, ptr %__pyx_n_s_reduce, align 8, !dbg !10214, !tbaa !10216
  %call20 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %18), !dbg !10217
  store ptr %call20, ptr %object_reduce, align 8, !dbg !10218, !tbaa !1899
  %19 = load ptr, ptr %object_reduce, align 8, !dbg !10219, !tbaa !1899
  %tobool21 = icmp ne ptr %19, null, !dbg !10219
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !10221

if.then22:                                        ; preds = %if.then19
  br label %__PYX_BAD, !dbg !10222

if.end23:                                         ; preds = %if.then19
  %20 = load ptr, ptr %type_obj.addr, align 8, !dbg !10223, !tbaa !1899
  %21 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10224, !tbaa !1899
  %__pyx_n_s_reduce24 = getelementptr inbounds %struct.__pyx_mstate, ptr %21, i32 0, i32 77, !dbg !10224
  %22 = load ptr, ptr %__pyx_n_s_reduce24, align 8, !dbg !10224, !tbaa !10216
  %call25 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %20, ptr noundef %22), !dbg !10225
  store ptr %call25, ptr %reduce, align 8, !dbg !10226, !tbaa !1899
  %23 = load ptr, ptr %reduce, align 8, !dbg !10227, !tbaa !1899
  %tobool26 = icmp ne ptr %23, null, !dbg !10227
  %lnot27 = xor i1 %tobool26, true, !dbg !10227
  %lnot29 = xor i1 %lnot27, true, !dbg !10227
  %lnot31 = xor i1 %lnot29, true, !dbg !10227
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !10227
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !10227
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 0), !dbg !10227
  %tobool35 = icmp ne i64 %expval34, 0, !dbg !10227
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !10229

if.then36:                                        ; preds = %if.end23
  br label %__PYX_BAD, !dbg !10230

if.end37:                                         ; preds = %if.end23
  %24 = load ptr, ptr %reduce, align 8, !dbg !10231, !tbaa !1899
  %25 = load ptr, ptr %object_reduce, align 8, !dbg !10233, !tbaa !1899
  %cmp38 = icmp eq ptr %24, %25, !dbg !10234
  br i1 %cmp38, label %if.then42, label %lor.lhs.false, !dbg !10235

lor.lhs.false:                                    ; preds = %if.end37
  %26 = load ptr, ptr %reduce, align 8, !dbg !10236, !tbaa !1899
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10237, !tbaa !1899
  %__pyx_n_s_reduce_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 78, !dbg !10237
  %28 = load ptr, ptr %__pyx_n_s_reduce_cython, align 8, !dbg !10237, !tbaa !2481
  %call40 = call i32 @__Pyx_setup_reduce_is_named(ptr noundef %26, ptr noundef %28), !dbg !10238
  %tobool41 = icmp ne i32 %call40, 0, !dbg !10238
  br i1 %tobool41, label %if.then42, label %if.end146, !dbg !10239

if.then42:                                        ; preds = %lor.lhs.false, %if.end37
  %29 = load ptr, ptr %type_obj.addr, align 8, !dbg !10240, !tbaa !1899
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10242, !tbaa !1899
  %__pyx_n_s_reduce_cython43 = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 78, !dbg !10242
  %31 = load ptr, ptr %__pyx_n_s_reduce_cython43, align 8, !dbg !10242, !tbaa !2481
  %call44 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %29, ptr noundef %31), !dbg !10243
  store ptr %call44, ptr %reduce_cython, align 8, !dbg !10244, !tbaa !1899
  %32 = load ptr, ptr %reduce_cython, align 8, !dbg !10245, !tbaa !1899
  %tobool45 = icmp ne ptr %32, null, !dbg !10245
  %lnot46 = xor i1 %tobool45, true, !dbg !10245
  %lnot48 = xor i1 %lnot46, true, !dbg !10245
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !10245
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !10245
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 1), !dbg !10245
  %tobool52 = icmp ne i64 %expval51, 0, !dbg !10245
  br i1 %tobool52, label %if.then53, label %if.else, !dbg !10247

if.then53:                                        ; preds = %if.then42
  %33 = load ptr, ptr %type_obj.addr, align 8, !dbg !10248, !tbaa !1899
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %33, i32 0, i32 31, !dbg !10250
  %34 = load ptr, ptr %tp_dict, align 8, !dbg !10250, !tbaa !2420
  %35 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10251, !tbaa !1899
  %__pyx_n_s_reduce54 = getelementptr inbounds %struct.__pyx_mstate, ptr %35, i32 0, i32 77, !dbg !10251
  %36 = load ptr, ptr %__pyx_n_s_reduce54, align 8, !dbg !10251, !tbaa !10216
  %37 = load ptr, ptr %reduce_cython, align 8, !dbg !10252, !tbaa !1899
  %call55 = call i32 @PyDict_SetItem(ptr noundef %34, ptr noundef %36, ptr noundef %37), !dbg !10253
  store i32 %call55, ptr %ret, align 4, !dbg !10254, !tbaa !1984
  %38 = load i32, ptr %ret, align 4, !dbg !10255, !tbaa !1984
  %cmp56 = icmp slt i32 %38, 0, !dbg !10255
  %lnot58 = xor i1 %cmp56, true, !dbg !10255
  %lnot60 = xor i1 %lnot58, true, !dbg !10255
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !10255
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !10255
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0), !dbg !10255
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !10255
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !10257

if.then65:                                        ; preds = %if.then53
  br label %__PYX_BAD, !dbg !10258

if.end66:                                         ; preds = %if.then53
  %39 = load ptr, ptr %type_obj.addr, align 8, !dbg !10259, !tbaa !1899
  %tp_dict67 = getelementptr inbounds %struct._typeobject, ptr %39, i32 0, i32 31, !dbg !10260
  %40 = load ptr, ptr %tp_dict67, align 8, !dbg !10260, !tbaa !2420
  %41 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10261, !tbaa !1899
  %__pyx_n_s_reduce_cython68 = getelementptr inbounds %struct.__pyx_mstate, ptr %41, i32 0, i32 78, !dbg !10261
  %42 = load ptr, ptr %__pyx_n_s_reduce_cython68, align 8, !dbg !10261, !tbaa !2481
  %call69 = call i32 @PyDict_DelItem(ptr noundef %40, ptr noundef %42), !dbg !10262
  store i32 %call69, ptr %ret, align 4, !dbg !10263, !tbaa !1984
  %43 = load i32, ptr %ret, align 4, !dbg !10264, !tbaa !1984
  %cmp70 = icmp slt i32 %43, 0, !dbg !10264
  %lnot72 = xor i1 %cmp70, true, !dbg !10264
  %lnot74 = xor i1 %lnot72, true, !dbg !10264
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !10264
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !10264
  %expval77 = call i64 @llvm.expect.i64(i64 %conv76, i64 0), !dbg !10264
  %tobool78 = icmp ne i64 %expval77, 0, !dbg !10264
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !10266

if.then79:                                        ; preds = %if.end66
  br label %__PYX_BAD, !dbg !10267

if.end80:                                         ; preds = %if.end66
  br label %if.end88, !dbg !10268

if.else:                                          ; preds = %if.then42
  %44 = load ptr, ptr %reduce, align 8, !dbg !10269, !tbaa !1899
  %45 = load ptr, ptr %object_reduce, align 8, !dbg !10271, !tbaa !1899
  %cmp81 = icmp eq ptr %44, %45, !dbg !10272
  br i1 %cmp81, label %if.then86, label %lor.lhs.false83, !dbg !10273

lor.lhs.false83:                                  ; preds = %if.else
  %call84 = call ptr @PyErr_Occurred(), !dbg !10274
  %tobool85 = icmp ne ptr %call84, null, !dbg !10274
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !10275

if.then86:                                        ; preds = %lor.lhs.false83, %if.else
  br label %__PYX_BAD, !dbg !10276

if.end87:                                         ; preds = %lor.lhs.false83
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end80
  %46 = load ptr, ptr %type_obj.addr, align 8, !dbg !10278, !tbaa !1899
  %47 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10279, !tbaa !1899
  %__pyx_n_s_setstate = getelementptr inbounds %struct.__pyx_mstate, ptr %47, i32 0, i32 81, !dbg !10279
  %48 = load ptr, ptr %__pyx_n_s_setstate, align 8, !dbg !10279, !tbaa !10280
  %call89 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %46, ptr noundef %48), !dbg !10281
  store ptr %call89, ptr %setstate, align 8, !dbg !10282, !tbaa !1899
  %49 = load ptr, ptr %setstate, align 8, !dbg !10283, !tbaa !1899
  %tobool90 = icmp ne ptr %49, null, !dbg !10283
  br i1 %tobool90, label %if.end92, label %if.then91, !dbg !10285

if.then91:                                        ; preds = %if.end88
  call void @PyErr_Clear(), !dbg !10286
  br label %if.end92, !dbg !10286

if.end92:                                         ; preds = %if.then91, %if.end88
  %50 = load ptr, ptr %setstate, align 8, !dbg !10287, !tbaa !1899
  %tobool93 = icmp ne ptr %50, null, !dbg !10287
  br i1 %tobool93, label %lor.lhs.false94, label %if.then97, !dbg !10289

lor.lhs.false94:                                  ; preds = %if.end92
  %51 = load ptr, ptr %setstate, align 8, !dbg !10290, !tbaa !1899
  %52 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10291, !tbaa !1899
  %__pyx_n_s_setstate_cython = getelementptr inbounds %struct.__pyx_mstate, ptr %52, i32 0, i32 82, !dbg !10291
  %53 = load ptr, ptr %__pyx_n_s_setstate_cython, align 8, !dbg !10291, !tbaa !2509
  %call95 = call i32 @__Pyx_setup_reduce_is_named(ptr noundef %51, ptr noundef %53), !dbg !10292
  %tobool96 = icmp ne i32 %call95, 0, !dbg !10292
  br i1 %tobool96, label %if.then97, label %if.end145, !dbg !10293

if.then97:                                        ; preds = %lor.lhs.false94, %if.end92
  %54 = load ptr, ptr %type_obj.addr, align 8, !dbg !10294, !tbaa !1899
  %55 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10296, !tbaa !1899
  %__pyx_n_s_setstate_cython98 = getelementptr inbounds %struct.__pyx_mstate, ptr %55, i32 0, i32 82, !dbg !10296
  %56 = load ptr, ptr %__pyx_n_s_setstate_cython98, align 8, !dbg !10296, !tbaa !2509
  %call99 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %54, ptr noundef %56), !dbg !10297
  store ptr %call99, ptr %setstate_cython, align 8, !dbg !10298, !tbaa !1899
  %57 = load ptr, ptr %setstate_cython, align 8, !dbg !10299, !tbaa !1899
  %tobool100 = icmp ne ptr %57, null, !dbg !10299
  %lnot101 = xor i1 %tobool100, true, !dbg !10299
  %lnot103 = xor i1 %lnot101, true, !dbg !10299
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !10299
  %conv105 = sext i32 %lnot.ext104 to i64, !dbg !10299
  %expval106 = call i64 @llvm.expect.i64(i64 %conv105, i64 1), !dbg !10299
  %tobool107 = icmp ne i64 %expval106, 0, !dbg !10299
  br i1 %tobool107, label %if.then108, label %if.else137, !dbg !10301

if.then108:                                       ; preds = %if.then97
  %58 = load ptr, ptr %type_obj.addr, align 8, !dbg !10302, !tbaa !1899
  %tp_dict109 = getelementptr inbounds %struct._typeobject, ptr %58, i32 0, i32 31, !dbg !10304
  %59 = load ptr, ptr %tp_dict109, align 8, !dbg !10304, !tbaa !2420
  %60 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10305, !tbaa !1899
  %__pyx_n_s_setstate110 = getelementptr inbounds %struct.__pyx_mstate, ptr %60, i32 0, i32 81, !dbg !10305
  %61 = load ptr, ptr %__pyx_n_s_setstate110, align 8, !dbg !10305, !tbaa !10280
  %62 = load ptr, ptr %setstate_cython, align 8, !dbg !10306, !tbaa !1899
  %call111 = call i32 @PyDict_SetItem(ptr noundef %59, ptr noundef %61, ptr noundef %62), !dbg !10307
  store i32 %call111, ptr %ret, align 4, !dbg !10308, !tbaa !1984
  %63 = load i32, ptr %ret, align 4, !dbg !10309, !tbaa !1984
  %cmp112 = icmp slt i32 %63, 0, !dbg !10309
  %lnot114 = xor i1 %cmp112, true, !dbg !10309
  %lnot116 = xor i1 %lnot114, true, !dbg !10309
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !10309
  %conv118 = sext i32 %lnot.ext117 to i64, !dbg !10309
  %expval119 = call i64 @llvm.expect.i64(i64 %conv118, i64 0), !dbg !10309
  %tobool120 = icmp ne i64 %expval119, 0, !dbg !10309
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !10311

if.then121:                                       ; preds = %if.then108
  br label %__PYX_BAD, !dbg !10312

if.end122:                                        ; preds = %if.then108
  %64 = load ptr, ptr %type_obj.addr, align 8, !dbg !10313, !tbaa !1899
  %tp_dict123 = getelementptr inbounds %struct._typeobject, ptr %64, i32 0, i32 31, !dbg !10314
  %65 = load ptr, ptr %tp_dict123, align 8, !dbg !10314, !tbaa !2420
  %66 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10315, !tbaa !1899
  %__pyx_n_s_setstate_cython124 = getelementptr inbounds %struct.__pyx_mstate, ptr %66, i32 0, i32 82, !dbg !10315
  %67 = load ptr, ptr %__pyx_n_s_setstate_cython124, align 8, !dbg !10315, !tbaa !2509
  %call125 = call i32 @PyDict_DelItem(ptr noundef %65, ptr noundef %67), !dbg !10316
  store i32 %call125, ptr %ret, align 4, !dbg !10317, !tbaa !1984
  %68 = load i32, ptr %ret, align 4, !dbg !10318, !tbaa !1984
  %cmp126 = icmp slt i32 %68, 0, !dbg !10318
  %lnot128 = xor i1 %cmp126, true, !dbg !10318
  %lnot130 = xor i1 %lnot128, true, !dbg !10318
  %lnot.ext131 = zext i1 %lnot130 to i32, !dbg !10318
  %conv132 = sext i32 %lnot.ext131 to i64, !dbg !10318
  %expval133 = call i64 @llvm.expect.i64(i64 %conv132, i64 0), !dbg !10318
  %tobool134 = icmp ne i64 %expval133, 0, !dbg !10318
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !10320

if.then135:                                       ; preds = %if.end122
  br label %__PYX_BAD, !dbg !10321

if.end136:                                        ; preds = %if.end122
  br label %if.end144, !dbg !10322

if.else137:                                       ; preds = %if.then97
  %69 = load ptr, ptr %setstate, align 8, !dbg !10323, !tbaa !1899
  %tobool138 = icmp ne ptr %69, null, !dbg !10323
  br i1 %tobool138, label %lor.lhs.false139, label %if.then142, !dbg !10325

lor.lhs.false139:                                 ; preds = %if.else137
  %call140 = call ptr @PyErr_Occurred(), !dbg !10326
  %tobool141 = icmp ne ptr %call140, null, !dbg !10326
  br i1 %tobool141, label %if.then142, label %if.end143, !dbg !10327

if.then142:                                       ; preds = %lor.lhs.false139, %if.else137
  br label %__PYX_BAD, !dbg !10328

if.end143:                                        ; preds = %lor.lhs.false139
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end136
  br label %if.end145, !dbg !10330

if.end145:                                        ; preds = %if.end144, %lor.lhs.false94
  %70 = load ptr, ptr %type_obj.addr, align 8, !dbg !10331, !tbaa !1899
  call void @PyType_Modified(ptr noundef %70), !dbg !10332
  br label %if.end146, !dbg !10333

if.end146:                                        ; preds = %if.end145, %lor.lhs.false
  br label %if.end147, !dbg !10334

if.end147:                                        ; preds = %if.end146, %if.end16
  br label %__PYX_GOOD, !dbg !10335

__PYX_BAD:                                        ; preds = %if.then142, %if.then135, %if.then121, %if.then86, %if.then79, %if.then65, %if.then36, %if.then22, %if.then15, %if.then7
  tail call void @llvm.dbg.label(metadata !10147), !dbg !10336
  %call148 = call ptr @PyErr_Occurred(), !dbg !10337
  %tobool149 = icmp ne ptr %call148, null, !dbg !10337
  br i1 %tobool149, label %if.end152, label %if.then150, !dbg !10338

if.then150:                                       ; preds = %__PYX_BAD
  call void @llvm.lifetime.start.p0(i64 8, ptr %type_obj_name) #11, !dbg !10339
  tail call void @llvm.dbg.declare(metadata ptr %type_obj_name, metadata !10148, metadata !DIExpression()), !dbg !10340
  %71 = load ptr, ptr %type_obj.addr, align 8, !dbg !10341, !tbaa !1899
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %71, i32 0, i32 1, !dbg !10341
  %72 = load ptr, ptr %tp_name, align 8, !dbg !10341, !tbaa !4021
  store ptr %72, ptr %type_obj_name, align 8, !dbg !10340, !tbaa !1899
  %73 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !10342, !tbaa !1899
  %74 = load ptr, ptr %type_obj_name, align 8, !dbg !10343, !tbaa !1899
  %call151 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %73, ptr noundef @.str.129, ptr noundef %74), !dbg !10344
  call void @llvm.lifetime.end.p0(i64 8, ptr %type_obj_name) #11, !dbg !10345
  br label %if.end152, !dbg !10346

if.end152:                                        ; preds = %if.then150, %__PYX_BAD
  store i32 -1, ptr %ret, align 4, !dbg !10347, !tbaa !1984
  br label %__PYX_GOOD, !dbg !10348

__PYX_GOOD:                                       ; preds = %if.end152, %if.end147, %if.then3
  tail call void @llvm.dbg.label(metadata !10151), !dbg !10349
  %75 = load ptr, ptr %reduce, align 8, !dbg !10350, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %75), !dbg !10350
  %76 = load ptr, ptr %reduce_ex, align 8, !dbg !10351, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %76), !dbg !10351
  %77 = load ptr, ptr %reduce_cython, align 8, !dbg !10352, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %77), !dbg !10352
  %78 = load ptr, ptr %setstate, align 8, !dbg !10353, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %78), !dbg !10353
  %79 = load ptr, ptr %setstate_cython, align 8, !dbg !10354, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %79), !dbg !10354
  %80 = load i32, ptr %ret, align 4, !dbg !10355, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %getstate) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %setstate_cython) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %setstate) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce_cython) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce_ex) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_reduce_ex) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_getstate) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_reduce) #11, !dbg !10356
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #11, !dbg !10356
  ret i32 %80, !dbg !10357
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_tp_dealloc_6Cython_4Plex_3DFA_StateMap(ptr noundef %o) #0 !dbg !10358 {
entry:
  %o.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp3 = alloca ptr, align 8
  %_py_tmp11 = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !10360, metadata !DIExpression()), !dbg !10368
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #11, !dbg !10369
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !10361, metadata !DIExpression()), !dbg !10370
  %0 = load ptr, ptr %o.addr, align 8, !dbg !10371, !tbaa !1899
  store ptr %0, ptr %p, align 8, !dbg !10370, !tbaa !1899
  %1 = load ptr, ptr %o.addr, align 8, !dbg !10372, !tbaa !1899
  call void @PyObject_GC_UnTrack(ptr noundef %1), !dbg !10373
  br label %do.body, !dbg !10374

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #11, !dbg !10375
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !10362, metadata !DIExpression()), !dbg !10375
  %2 = load ptr, ptr %p, align 8, !dbg !10375, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %2, i32 0, i32 2, !dbg !10375
  %3 = load ptr, ptr %new_machine, align 8, !dbg !10375, !tbaa !8661
  store ptr %3, ptr %_py_tmp, align 8, !dbg !10375, !tbaa !1899
  %4 = load ptr, ptr %_py_tmp, align 8, !dbg !10376, !tbaa !1899
  %cmp = icmp ne ptr %4, null, !dbg !10376
  br i1 %cmp, label %if.then, label %if.end, !dbg !10375

if.then:                                          ; preds = %do.body
  %5 = load ptr, ptr %p, align 8, !dbg !10378, !tbaa !1899
  %new_machine1 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %5, i32 0, i32 2, !dbg !10378
  store ptr null, ptr %new_machine1, align 8, !dbg !10378, !tbaa !8661
  %6 = load ptr, ptr %_py_tmp, align 8, !dbg !10378, !tbaa !1899
  call void @Py_DECREF(ptr noundef %6), !dbg !10378
  br label %if.end, !dbg !10378

if.end:                                           ; preds = %if.then, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #11, !dbg !10374
  br label %do.cond, !dbg !10375

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !10375

do.end:                                           ; preds = %do.cond
  br label %do.body2, !dbg !10380

do.body2:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp3) #11, !dbg !10381
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp3, metadata !10364, metadata !DIExpression()), !dbg !10381
  %7 = load ptr, ptr %p, align 8, !dbg !10381, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %7, i32 0, i32 3, !dbg !10381
  %8 = load ptr, ptr %old_to_new_dict, align 8, !dbg !10381, !tbaa !8605
  store ptr %8, ptr %_py_tmp3, align 8, !dbg !10381, !tbaa !1899
  %9 = load ptr, ptr %_py_tmp3, align 8, !dbg !10382, !tbaa !1899
  %cmp4 = icmp ne ptr %9, null, !dbg !10382
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !10381

if.then5:                                         ; preds = %do.body2
  %10 = load ptr, ptr %p, align 8, !dbg !10384, !tbaa !1899
  %old_to_new_dict6 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %10, i32 0, i32 3, !dbg !10384
  store ptr null, ptr %old_to_new_dict6, align 8, !dbg !10384, !tbaa !8605
  %11 = load ptr, ptr %_py_tmp3, align 8, !dbg !10384, !tbaa !1899
  call void @Py_DECREF(ptr noundef %11), !dbg !10384
  br label %if.end7, !dbg !10384

if.end7:                                          ; preds = %if.then5, %do.body2
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp3) #11, !dbg !10380
  br label %do.cond8, !dbg !10381

do.cond8:                                         ; preds = %if.end7
  br label %do.end9, !dbg !10381

do.end9:                                          ; preds = %do.cond8
  br label %do.body10, !dbg !10386

do.body10:                                        ; preds = %do.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp11) #11, !dbg !10387
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp11, metadata !10366, metadata !DIExpression()), !dbg !10387
  %12 = load ptr, ptr %p, align 8, !dbg !10387, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %12, i32 0, i32 4, !dbg !10387
  %13 = load ptr, ptr %new_to_old_dict, align 8, !dbg !10387, !tbaa !8732
  store ptr %13, ptr %_py_tmp11, align 8, !dbg !10387, !tbaa !1899
  %14 = load ptr, ptr %_py_tmp11, align 8, !dbg !10388, !tbaa !1899
  %cmp12 = icmp ne ptr %14, null, !dbg !10388
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !10387

if.then13:                                        ; preds = %do.body10
  %15 = load ptr, ptr %p, align 8, !dbg !10390, !tbaa !1899
  %new_to_old_dict14 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %15, i32 0, i32 4, !dbg !10390
  store ptr null, ptr %new_to_old_dict14, align 8, !dbg !10390, !tbaa !8732
  %16 = load ptr, ptr %_py_tmp11, align 8, !dbg !10390, !tbaa !1899
  call void @Py_DECREF(ptr noundef %16), !dbg !10390
  br label %if.end15, !dbg !10390

if.end15:                                         ; preds = %if.then13, %do.body10
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp11) #11, !dbg !10386
  br label %do.cond16, !dbg !10387

do.cond16:                                        ; preds = %if.end15
  br label %do.end17, !dbg !10387

do.end17:                                         ; preds = %do.cond16
  %17 = load ptr, ptr %o.addr, align 8, !dbg !10392, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %17), !dbg !10392
  %tp_free = getelementptr inbounds %struct._typeobject, ptr %call, i32 0, i32 38, !dbg !10393
  %18 = load ptr, ptr %tp_free, align 8, !dbg !10393, !tbaa !10394
  %19 = load ptr, ptr %o.addr, align 8, !dbg !10395, !tbaa !1899
  call void %18(ptr noundef %19), !dbg !10396
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #11, !dbg !10397
  ret void, !dbg !10397
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_traverse_6Cython_4Plex_3DFA_StateMap(ptr noundef %o, ptr noundef %v, ptr noundef %a) #0 !dbg !10398 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %e = alloca i32, align 4
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !10400, metadata !DIExpression()), !dbg !10405
  store ptr %v, ptr %v.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !10401, metadata !DIExpression()), !dbg !10406
  store ptr %a, ptr %a.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !10402, metadata !DIExpression()), !dbg !10407
  call void @llvm.lifetime.start.p0(i64 4, ptr %e) #11, !dbg !10408
  tail call void @llvm.dbg.declare(metadata ptr %e, metadata !10403, metadata !DIExpression()), !dbg !10409
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #11, !dbg !10410
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !10404, metadata !DIExpression()), !dbg !10411
  %0 = load ptr, ptr %o.addr, align 8, !dbg !10412, !tbaa !1899
  store ptr %0, ptr %p, align 8, !dbg !10411, !tbaa !1899
  %1 = load ptr, ptr %p, align 8, !dbg !10413, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %1, i32 0, i32 2, !dbg !10415
  %2 = load ptr, ptr %new_machine, align 8, !dbg !10415, !tbaa !8661
  %tobool = icmp ne ptr %2, null, !dbg !10413
  br i1 %tobool, label %if.then, label %if.end4, !dbg !10416

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %v.addr, align 8, !dbg !10417, !tbaa !1899
  %4 = load ptr, ptr %p, align 8, !dbg !10419, !tbaa !1899
  %new_machine1 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %4, i32 0, i32 2, !dbg !10420
  %5 = load ptr, ptr %new_machine1, align 8, !dbg !10420, !tbaa !8661
  %6 = load ptr, ptr %a.addr, align 8, !dbg !10421, !tbaa !1899
  %call = call i32 %3(ptr noundef %5, ptr noundef %6), !dbg !10422
  store i32 %call, ptr %e, align 4, !dbg !10423, !tbaa !1984
  %7 = load i32, ptr %e, align 4, !dbg !10424, !tbaa !1984
  %tobool2 = icmp ne i32 %7, 0, !dbg !10424
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !10426

if.then3:                                         ; preds = %if.then
  %8 = load i32, ptr %e, align 4, !dbg !10427, !tbaa !1984
  store i32 %8, ptr %retval, align 4, !dbg !10428
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10428

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !10429

if.end4:                                          ; preds = %if.end, %entry
  %9 = load ptr, ptr %p, align 8, !dbg !10430, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %9, i32 0, i32 3, !dbg !10432
  %10 = load ptr, ptr %old_to_new_dict, align 8, !dbg !10432, !tbaa !8605
  %tobool5 = icmp ne ptr %10, null, !dbg !10430
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !10433

if.then6:                                         ; preds = %if.end4
  %11 = load ptr, ptr %v.addr, align 8, !dbg !10434, !tbaa !1899
  %12 = load ptr, ptr %p, align 8, !dbg !10436, !tbaa !1899
  %old_to_new_dict7 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %12, i32 0, i32 3, !dbg !10437
  %13 = load ptr, ptr %old_to_new_dict7, align 8, !dbg !10437, !tbaa !8605
  %14 = load ptr, ptr %a.addr, align 8, !dbg !10438, !tbaa !1899
  %call8 = call i32 %11(ptr noundef %13, ptr noundef %14), !dbg !10439
  store i32 %call8, ptr %e, align 4, !dbg !10440, !tbaa !1984
  %15 = load i32, ptr %e, align 4, !dbg !10441, !tbaa !1984
  %tobool9 = icmp ne i32 %15, 0, !dbg !10441
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10443

if.then10:                                        ; preds = %if.then6
  %16 = load i32, ptr %e, align 4, !dbg !10444, !tbaa !1984
  store i32 %16, ptr %retval, align 4, !dbg !10445
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10445

if.end11:                                         ; preds = %if.then6
  br label %if.end12, !dbg !10446

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load ptr, ptr %p, align 8, !dbg !10447, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %17, i32 0, i32 4, !dbg !10449
  %18 = load ptr, ptr %new_to_old_dict, align 8, !dbg !10449, !tbaa !8732
  %tobool13 = icmp ne ptr %18, null, !dbg !10447
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !10450

if.then14:                                        ; preds = %if.end12
  %19 = load ptr, ptr %v.addr, align 8, !dbg !10451, !tbaa !1899
  %20 = load ptr, ptr %p, align 8, !dbg !10453, !tbaa !1899
  %new_to_old_dict15 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %20, i32 0, i32 4, !dbg !10454
  %21 = load ptr, ptr %new_to_old_dict15, align 8, !dbg !10454, !tbaa !8732
  %22 = load ptr, ptr %a.addr, align 8, !dbg !10455, !tbaa !1899
  %call16 = call i32 %19(ptr noundef %21, ptr noundef %22), !dbg !10456
  store i32 %call16, ptr %e, align 4, !dbg !10457, !tbaa !1984
  %23 = load i32, ptr %e, align 4, !dbg !10458, !tbaa !1984
  %tobool17 = icmp ne i32 %23, 0, !dbg !10458
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !10460

if.then18:                                        ; preds = %if.then14
  %24 = load i32, ptr %e, align 4, !dbg !10461, !tbaa !1984
  store i32 %24, ptr %retval, align 4, !dbg !10462
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10462

if.end19:                                         ; preds = %if.then14
  br label %if.end20, !dbg !10463

if.end20:                                         ; preds = %if.end19, %if.end12
  store i32 0, ptr %retval, align 4, !dbg !10464
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10464

cleanup:                                          ; preds = %if.end20, %if.then18, %if.then10, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #11, !dbg !10465
  call void @llvm.lifetime.end.p0(i64 4, ptr %e) #11, !dbg !10465
  %25 = load i32, ptr %retval, align 4, !dbg !10465
  ret i32 %25, !dbg !10465
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_clear_6Cython_4Plex_3DFA_StateMap(ptr noundef %o) #0 !dbg !10466 {
entry:
  %o.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %p = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !10468, metadata !DIExpression()), !dbg !10471
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !10472
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !10469, metadata !DIExpression()), !dbg !10473
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #11, !dbg !10474
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !10470, metadata !DIExpression()), !dbg !10475
  %0 = load ptr, ptr %o.addr, align 8, !dbg !10476, !tbaa !1899
  store ptr %0, ptr %p, align 8, !dbg !10475, !tbaa !1899
  %1 = load ptr, ptr %p, align 8, !dbg !10477, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %1, i32 0, i32 2, !dbg !10478
  %2 = load ptr, ptr %new_machine, align 8, !dbg !10478, !tbaa !8661
  store ptr %2, ptr %tmp, align 8, !dbg !10479, !tbaa !1899
  %3 = load ptr, ptr %p, align 8, !dbg !10480, !tbaa !1899
  %new_machine1 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %3, i32 0, i32 2, !dbg !10481
  store ptr @_Py_NoneStruct, ptr %new_machine1, align 8, !dbg !10482, !tbaa !8661
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !10483
  %4 = load ptr, ptr %tmp, align 8, !dbg !10484, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %4), !dbg !10484
  %5 = load ptr, ptr %p, align 8, !dbg !10485, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %5, i32 0, i32 3, !dbg !10486
  %6 = load ptr, ptr %old_to_new_dict, align 8, !dbg !10486, !tbaa !8605
  store ptr %6, ptr %tmp, align 8, !dbg !10487, !tbaa !1899
  %7 = load ptr, ptr %p, align 8, !dbg !10488, !tbaa !1899
  %old_to_new_dict2 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %7, i32 0, i32 3, !dbg !10489
  store ptr @_Py_NoneStruct, ptr %old_to_new_dict2, align 8, !dbg !10490, !tbaa !8605
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !10491
  %8 = load ptr, ptr %tmp, align 8, !dbg !10492, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %8), !dbg !10492
  %9 = load ptr, ptr %p, align 8, !dbg !10493, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %9, i32 0, i32 4, !dbg !10494
  %10 = load ptr, ptr %new_to_old_dict, align 8, !dbg !10494, !tbaa !8732
  store ptr %10, ptr %tmp, align 8, !dbg !10495, !tbaa !1899
  %11 = load ptr, ptr %p, align 8, !dbg !10496, !tbaa !1899
  %new_to_old_dict3 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %11, i32 0, i32 4, !dbg !10497
  store ptr @_Py_NoneStruct, ptr %new_to_old_dict3, align 8, !dbg !10498, !tbaa !8732
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !10499
  %12 = load ptr, ptr %tmp, align 8, !dbg !10500, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %12), !dbg !10500
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #11, !dbg !10501
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !10501
  ret i32 0, !dbg !10502
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_1__init__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 !dbg !10503 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_new_machine = alloca ptr, align 8
  %__pyx_nargs = alloca i64, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %values = alloca [1 x ptr], align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_pyargnames = alloca [2 x ptr], align 16
  %kw_args = alloca i64, align 8
  %kwd_pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %__pyx_temp = alloca i64, align 8
  %__pyx_temp75 = alloca i64, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10505, metadata !DIExpression()), !dbg !10533
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_args.addr, metadata !10506, metadata !DIExpression()), !dbg !10534
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwds.addr, metadata !10507, metadata !DIExpression()), !dbg !10535
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_new_machine) #11, !dbg !10536
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_machine, metadata !10508, metadata !DIExpression()), !dbg !10537
  store ptr null, ptr %__pyx_v_new_machine, align 8, !dbg !10537, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_nargs) #11, !dbg !10538
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_nargs, metadata !10509, metadata !DIExpression()), !dbg !10539
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10540
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !10510, metadata !DIExpression()), !dbg !10541
  call void @llvm.lifetime.start.p0(i64 8, ptr %values) #11, !dbg !10542
  tail call void @llvm.dbg.declare(metadata ptr %values, metadata !10511, metadata !DIExpression()), !dbg !10543
  call void @llvm.memset.p0.i64(ptr align 8 %values, i8 0, i64 8, i1 false), !dbg !10543
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !10544
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !10512, metadata !DIExpression()), !dbg !10545
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !10545, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !10546
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !10513, metadata !DIExpression()), !dbg !10547
  store ptr null, ptr %__pyx_filename, align 8, !dbg !10547, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !10548
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !10514, metadata !DIExpression()), !dbg !10549
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !10549, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #11, !dbg !10550
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10515, metadata !DIExpression()), !dbg !10551
  %0 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !10552, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !10552
  store i64 %call, ptr %__pyx_nargs, align 8, !dbg !10553, !tbaa !2597
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !10554, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_pyargnames) #11, !dbg !10555
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_pyargnames, metadata !10516, metadata !DIExpression()), !dbg !10556
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !10557
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10558, !tbaa !1899
  %__pyx_n_s_new_machine = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 62, !dbg !10558
  store ptr %__pyx_n_s_new_machine, ptr %arrayinit.begin, align 8, !dbg !10557, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !10557
  store ptr null, ptr %arrayinit.element, align 8, !dbg !10557, !tbaa !1899
  %2 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !10559, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !10559
  br i1 %tobool, label %if.then, label %if.else51, !dbg !10560

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #11, !dbg !10561
  tail call void @llvm.dbg.declare(metadata ptr %kw_args, metadata !10519, metadata !DIExpression()), !dbg !10562
  %3 = load i64, ptr %__pyx_nargs, align 8, !dbg !10563, !tbaa !2597
  switch i64 %3, label %sw.default [
    i64 1, label %sw.bb
    i64 0, label %sw.epilog
  ], !dbg !10564

sw.bb:                                            ; preds = %if.then
  %4 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !10565, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !10565
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !10565
  %5 = load ptr, ptr %arrayidx, align 8, !dbg !10565, !tbaa !1899
  %arrayidx1 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0, !dbg !10567
  store ptr %5, ptr %arrayidx1, align 8, !dbg !10568, !tbaa !1899
  br label %sw.epilog, !dbg !10567

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !10569

sw.epilog:                                        ; preds = %sw.bb, %if.then
  %6 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !10570, !tbaa !1899
  %call2 = call i64 @PyDict_Size(ptr noundef %6), !dbg !10570
  store i64 %call2, ptr %kw_args, align 8, !dbg !10571, !tbaa !2597
  %7 = load i64, ptr %__pyx_nargs, align 8, !dbg !10572, !tbaa !2597
  switch i64 %7, label %sw.epilog23 [
    i64 0, label %sw.bb3
  ], !dbg !10573

sw.bb3:                                           ; preds = %sw.epilog
  %8 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !10574, !tbaa !1899
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10574, !tbaa !1899
  %__pyx_n_s_new_machine4 = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 62, !dbg !10574
  %10 = load ptr, ptr %__pyx_n_s_new_machine4, align 8, !dbg !10574, !tbaa !10577
  %11 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10574, !tbaa !1899
  %__pyx_n_s_new_machine5 = getelementptr inbounds %struct.__pyx_mstate, ptr %11, i32 0, i32 62, !dbg !10574
  %12 = load ptr, ptr %__pyx_n_s_new_machine5, align 8, !dbg !10574, !tbaa !10577
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %12, i32 0, i32 2, !dbg !10574
  %13 = load i64, ptr %hash, align 8, !dbg !10574, !tbaa !9173
  %call6 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %8, ptr noundef %10, i64 noundef %13), !dbg !10574
  %arrayidx7 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0, !dbg !10574
  store ptr %call6, ptr %arrayidx7, align 8, !dbg !10574, !tbaa !1899
  %cmp = icmp ne ptr %call6, null, !dbg !10574
  %lnot = xor i1 %cmp, true, !dbg !10574
  %lnot8 = xor i1 %lnot, true, !dbg !10574
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !10574
  %conv = sext i32 %lnot.ext to i64, !dbg !10574
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !10574
  %tobool9 = icmp ne i64 %expval, 0, !dbg !10574
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !10578

if.then10:                                        ; preds = %sw.bb3
  %arrayidx11 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0, !dbg !10579
  %14 = load ptr, ptr %arrayidx11, align 8, !dbg !10579, !tbaa !1899
  %15 = load i64, ptr %kw_args, align 8, !dbg !10581, !tbaa !2597
  %dec = add i64 %15, -1, !dbg !10581
  store i64 %dec, ptr %kw_args, align 8, !dbg !10581, !tbaa !2597
  br label %if.end, !dbg !10582

if.else:                                          ; preds = %sw.bb3
  %call12 = call ptr @PyErr_Occurred(), !dbg !10583
  %tobool13 = icmp ne ptr %call12, null, !dbg !10583
  %lnot14 = xor i1 %tobool13, true, !dbg !10583
  %lnot16 = xor i1 %lnot14, true, !dbg !10583
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !10583
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !10583
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0), !dbg !10583
  %tobool20 = icmp ne i64 %expval19, 0, !dbg !10583
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !10585

if.then21:                                        ; preds = %if.else
  %16 = load ptr, ptr @__pyx_f, align 16, !dbg !10586, !tbaa !1899
  store ptr %16, ptr %__pyx_filename, align 8, !dbg !10586, !tbaa !1899
  %17 = load ptr, ptr %__pyx_filename, align 8, !dbg !10586, !tbaa !1899
  store i32 100, ptr %__pyx_lineno, align 4, !dbg !10586, !tbaa !1984
  %18 = load i32, ptr %__pyx_lineno, align 4, !dbg !10586, !tbaa !1984
  store i32 4456, ptr %__pyx_clineno, align 4, !dbg !10586, !tbaa !1984
  %19 = load i32, ptr %__pyx_clineno, align 4, !dbg !10586, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !10589

if.else22:                                        ; preds = %if.else
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !10590

if.end:                                           ; preds = %if.then10
  br label %sw.epilog23, !dbg !10591

sw.epilog23:                                      ; preds = %if.end, %sw.epilog
  %20 = load i64, ptr %kw_args, align 8, !dbg !10592, !tbaa !2597
  %cmp24 = icmp sgt i64 %20, 0, !dbg !10592
  %lnot26 = xor i1 %cmp24, true, !dbg !10592
  %lnot28 = xor i1 %lnot26, true, !dbg !10592
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !10592
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !10592
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !10592
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !10592
  br i1 %tobool32, label %if.then33, label %if.end47, !dbg !10593

if.then33:                                        ; preds = %sw.epilog23
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwd_pos_args) #11, !dbg !10594
  tail call void @llvm.dbg.declare(metadata ptr %kwd_pos_args, metadata !10522, metadata !DIExpression()), !dbg !10595
  %21 = load i64, ptr %__pyx_nargs, align 8, !dbg !10596, !tbaa !2597
  store i64 %21, ptr %kwd_pos_args, align 8, !dbg !10595, !tbaa !2597
  %22 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !10597, !tbaa !1899
  %23 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !10597, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !10597
  %arraydecay34 = getelementptr inbounds [1 x ptr], ptr %values, i64 0, i64 0, !dbg !10597
  %add.ptr = getelementptr ptr, ptr %arraydecay34, i64 0, !dbg !10597
  %24 = load i64, ptr %kwd_pos_args, align 8, !dbg !10597, !tbaa !2597
  %call35 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %22, ptr noundef %23, ptr noundef %arraydecay, ptr noundef null, ptr noundef %add.ptr, i64 noundef %24, ptr noundef @.str.116), !dbg !10597
  %cmp36 = icmp slt i32 %call35, 0, !dbg !10597
  %lnot38 = xor i1 %cmp36, true, !dbg !10597
  %lnot40 = xor i1 %lnot38, true, !dbg !10597
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !10597
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !10597
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 0), !dbg !10597
  %tobool44 = icmp ne i64 %expval43, 0, !dbg !10597
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !10599

if.then45:                                        ; preds = %if.then33
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !10600, !tbaa !1899
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !10600, !tbaa !1899
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !10600, !tbaa !1899
  store i32 100, ptr %__pyx_lineno, align 4, !dbg !10600, !tbaa !1984
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !10600, !tbaa !1984
  store i32 4461, ptr %__pyx_clineno, align 4, !dbg !10600, !tbaa !1984
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !10600, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10603

if.end46:                                         ; preds = %if.then33
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10604
  br label %cleanup, !dbg !10604

cleanup:                                          ; preds = %if.then45, %if.end46
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwd_pos_args) #11, !dbg !10604
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup48 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end47, !dbg !10605

if.end47:                                         ; preds = %cleanup.cont, %sw.epilog23
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10606
  br label %cleanup48, !dbg !10606

cleanup48:                                        ; preds = %if.else22, %if.then21, %sw.default, %if.end47, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #11, !dbg !10606
  %cleanup.dest49 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest49, label %cleanup69 [
    i32 0, label %cleanup.cont50
  ]

cleanup.cont50:                                   ; preds = %cleanup48
  br label %if.end67, !dbg !10607

if.else51:                                        ; preds = %entry
  %29 = load i64, ptr %__pyx_nargs, align 8, !dbg !10608, !tbaa !2597
  %cmp52 = icmp ne i64 %29, 1, !dbg !10608
  %lnot54 = xor i1 %cmp52, true, !dbg !10608
  %lnot56 = xor i1 %lnot54, true, !dbg !10608
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !10608
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !10608
  %expval59 = call i64 @llvm.expect.i64(i64 %conv58, i64 0), !dbg !10608
  %tobool60 = icmp ne i64 %expval59, 0, !dbg !10608
  br i1 %tobool60, label %if.then61, label %if.else62, !dbg !10610

if.then61:                                        ; preds = %if.else51
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup69, !dbg !10611

if.else62:                                        ; preds = %if.else51
  %30 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !10613, !tbaa !1899
  %ob_item63 = getelementptr inbounds %struct.PyTupleObject, ptr %30, i32 0, i32 1, !dbg !10613
  %arrayidx64 = getelementptr [1 x ptr], ptr %ob_item63, i64 0, i64 0, !dbg !10613
  %31 = load ptr, ptr %arrayidx64, align 8, !dbg !10613, !tbaa !1899
  %arrayidx65 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0, !dbg !10615
  store ptr %31, ptr %arrayidx65, align 8, !dbg !10616, !tbaa !1899
  br label %if.end66

if.end66:                                         ; preds = %if.else62
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %cleanup.cont50
  %arrayidx68 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0, !dbg !10617
  %32 = load ptr, ptr %arrayidx68, align 8, !dbg !10617, !tbaa !1899
  store ptr %32, ptr %__pyx_v_new_machine, align 8, !dbg !10618, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10619
  br label %cleanup69, !dbg !10619

cleanup69:                                        ; preds = %if.then61, %if.end67, %cleanup48
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_pyargnames) #11, !dbg !10619
  %cleanup.dest70 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest70, label %cleanup83 [
    i32 0, label %cleanup.cont71
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont71:                                   ; preds = %cleanup69
  br label %__pyx_L6_skip, !dbg !10620

__pyx_L5_argtuple_error:                          ; preds = %cleanup69
  tail call void @llvm.dbg.label(metadata !10525), !dbg !10621
  %33 = load i64, ptr %__pyx_nargs, align 8, !dbg !10622, !tbaa !2597
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.116, i32 noundef 1, i64 noundef 1, i64 noundef 1, i64 noundef %33), !dbg !10623
  %34 = load ptr, ptr @__pyx_f, align 16, !dbg !10624, !tbaa !1899
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !10624, !tbaa !1899
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !10624, !tbaa !1899
  store i32 100, ptr %__pyx_lineno, align 4, !dbg !10624, !tbaa !1984
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !10624, !tbaa !1984
  store i32 4472, ptr %__pyx_clineno, align 4, !dbg !10624, !tbaa !1984
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !10624, !tbaa !1984
  br label %__pyx_L3_error, !dbg !10627

__pyx_L6_skip:                                    ; preds = %cleanup.cont71
  tail call void @llvm.dbg.label(metadata !10526), !dbg !10628
  br label %__pyx_L4_argument_unpacking_done, !dbg !10629

__pyx_L3_error:                                   ; preds = %cleanup69, %__pyx_L5_argtuple_error
  tail call void @llvm.dbg.label(metadata !10527), !dbg !10630
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #11, !dbg !10631
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp, metadata !10528, metadata !DIExpression()), !dbg !10632
  store i64 0, ptr %__pyx_temp, align 8, !dbg !10633, !tbaa !2597
  br label %for.cond, !dbg !10635

for.cond:                                         ; preds = %for.inc, %__pyx_L3_error
  %38 = load i64, ptr %__pyx_temp, align 8, !dbg !10636, !tbaa !2597
  %cmp72 = icmp slt i64 %38, 1, !dbg !10638
  br i1 %cmp72, label %for.body, label %for.end, !dbg !10639

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10640

for.inc:                                          ; preds = %for.body
  %39 = load i64, ptr %__pyx_temp, align 8, !dbg !10642, !tbaa !2597
  %inc = add i64 %39, 1, !dbg !10642
  store i64 %inc, ptr %__pyx_temp, align 8, !dbg !10642, !tbaa !2597
  br label %for.cond, !dbg !10643, !llvm.loop !10644

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #11, !dbg !10646
  %40 = load i32, ptr %__pyx_clineno, align 4, !dbg !10647, !tbaa !1984
  %41 = load i32, ptr %__pyx_lineno, align 4, !dbg !10648, !tbaa !1984
  %42 = load ptr, ptr %__pyx_filename, align 8, !dbg !10649, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.117, i32 noundef %40, i32 noundef %41, ptr noundef %42), !dbg !10650
  store i32 -1, ptr %retval, align 4, !dbg !10651
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !10651

__pyx_L4_argument_unpacking_done:                 ; preds = %__pyx_L6_skip
  tail call void @llvm.dbg.label(metadata !10530), !dbg !10652
  %43 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10653, !tbaa !1899
  %44 = load ptr, ptr %__pyx_v_new_machine, align 8, !dbg !10654, !tbaa !1899
  %call74 = call i32 @__pyx_pf_6Cython_4Plex_3DFA_8StateMap___init__(ptr noundef %43, ptr noundef %44), !dbg !10655
  store i32 %call74, ptr %__pyx_r, align 4, !dbg !10656, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp75) #11, !dbg !10657
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp75, metadata !10531, metadata !DIExpression()), !dbg !10658
  store i64 0, ptr %__pyx_temp75, align 8, !dbg !10659, !tbaa !2597
  br label %for.cond76, !dbg !10661

for.cond76:                                       ; preds = %for.inc80, %__pyx_L4_argument_unpacking_done
  %45 = load i64, ptr %__pyx_temp75, align 8, !dbg !10662, !tbaa !2597
  %cmp77 = icmp slt i64 %45, 1, !dbg !10664
  br i1 %cmp77, label %for.body79, label %for.end82, !dbg !10665

for.body79:                                       ; preds = %for.cond76
  br label %for.inc80, !dbg !10666

for.inc80:                                        ; preds = %for.body79
  %46 = load i64, ptr %__pyx_temp75, align 8, !dbg !10668, !tbaa !2597
  %inc81 = add i64 %46, 1, !dbg !10668
  store i64 %inc81, ptr %__pyx_temp75, align 8, !dbg !10668, !tbaa !2597
  br label %for.cond76, !dbg !10669, !llvm.loop !10670

for.end82:                                        ; preds = %for.cond76
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp75) #11, !dbg !10672
  %47 = load i32, ptr %__pyx_r, align 4, !dbg !10673, !tbaa !1984
  store i32 %47, ptr %retval, align 4, !dbg !10674
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !10674

cleanup83:                                        ; preds = %for.end82, %for.end, %cleanup69
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #11, !dbg !10675
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !10675
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !10675
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !10675
  call void @llvm.lifetime.end.p0(i64 8, ptr %values) #11, !dbg !10675
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10675
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_nargs) #11, !dbg !10675
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_new_machine) #11, !dbg !10675
  %48 = load i32, ptr %retval, align 4, !dbg !10675
  ret i32 %48, !dbg !10675
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_new_6Cython_4Plex_3DFA_StateMap(ptr noundef %t, ptr noundef %a, ptr noundef %k) #0 !dbg !10676 {
entry:
  %retval = alloca ptr, align 8
  %t.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %o = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !10678, metadata !DIExpression()), !dbg !10683
  store ptr %a, ptr %a.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !10679, metadata !DIExpression()), !dbg !10684
  store ptr %k, ptr %k.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %k.addr, metadata !10680, metadata !DIExpression()), !dbg !10685
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #11, !dbg !10686
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !10681, metadata !DIExpression()), !dbg !10687
  call void @llvm.lifetime.start.p0(i64 8, ptr %o) #11, !dbg !10688
  tail call void @llvm.dbg.declare(metadata ptr %o, metadata !10682, metadata !DIExpression()), !dbg !10689
  %0 = load ptr, ptr %t.addr, align 8, !dbg !10690, !tbaa !1899
  %tp_alloc = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 36, !dbg !10691
  %1 = load ptr, ptr %tp_alloc, align 8, !dbg !10691, !tbaa !10692
  %2 = load ptr, ptr %t.addr, align 8, !dbg !10693, !tbaa !1899
  %call = call ptr %1(ptr noundef %2, i64 noundef 0), !dbg !10694
  store ptr %call, ptr %o, align 8, !dbg !10695, !tbaa !1899
  %3 = load ptr, ptr %o, align 8, !dbg !10696, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !10696
  %lnot = xor i1 %tobool, true, !dbg !10696
  %lnot1 = xor i1 %lnot, true, !dbg !10696
  %lnot2 = xor i1 %lnot1, true, !dbg !10696
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10696
  %conv = sext i32 %lnot.ext to i64, !dbg !10696
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10696
  %tobool3 = icmp ne i64 %expval, 0, !dbg !10696
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10698

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !10699
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10699

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %o, align 8, !dbg !10700, !tbaa !1899
  store ptr %4, ptr %p, align 8, !dbg !10701, !tbaa !1899
  %5 = load ptr, ptr @__pyx_vtabptr_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !10702, !tbaa !1899
  %6 = load ptr, ptr %p, align 8, !dbg !10703, !tbaa !1899
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %6, i32 0, i32 1, !dbg !10704
  store ptr %5, ptr %__pyx_vtab, align 8, !dbg !10705, !tbaa !10706
  %7 = load ptr, ptr %p, align 8, !dbg !10707, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %7, i32 0, i32 2, !dbg !10708
  store ptr @_Py_NoneStruct, ptr %new_machine, align 8, !dbg !10709, !tbaa !8661
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !10710
  %8 = load ptr, ptr %p, align 8, !dbg !10711, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %8, i32 0, i32 3, !dbg !10712
  store ptr @_Py_NoneStruct, ptr %old_to_new_dict, align 8, !dbg !10713, !tbaa !8605
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !10714
  %9 = load ptr, ptr %p, align 8, !dbg !10715, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %9, i32 0, i32 4, !dbg !10716
  store ptr @_Py_NoneStruct, ptr %new_to_old_dict, align 8, !dbg !10717, !tbaa !8732
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !10718
  %10 = load ptr, ptr %o, align 8, !dbg !10719, !tbaa !1899
  store ptr %10, ptr %retval, align 8, !dbg !10720
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10720

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %o) #11, !dbg !10721
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #11, !dbg !10721
  %11 = load ptr, ptr %retval, align 8, !dbg !10721
  ret ptr %11, !dbg !10721
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_3new_to_old(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_new_state) #0 !dbg !10722 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_new_state.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10724, metadata !DIExpression()), !dbg !10728
  store ptr %__pyx_v_new_state, ptr %__pyx_v_new_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_state.addr, metadata !10725, metadata !DIExpression()), !dbg !10729
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10730
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !10726, metadata !DIExpression()), !dbg !10731
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !10732
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10727, metadata !DIExpression()), !dbg !10733
  store ptr null, ptr %__pyx_r, align 8, !dbg !10733, !tbaa !1899
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !10734, !tbaa !1899
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10735, !tbaa !1899
  %1 = load ptr, ptr %__pyx_v_new_state.addr, align 8, !dbg !10736, !tbaa !1899
  %call = call ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_2new_to_old(ptr noundef %0, ptr noundef %1), !dbg !10737
  store ptr %call, ptr %__pyx_r, align 8, !dbg !10738, !tbaa !1899
  %2 = load ptr, ptr %__pyx_r, align 8, !dbg !10739, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !10740
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10740
  ret ptr %2, !dbg !10741
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_5dump(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_file) #0 !dbg !10742 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_file.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10744, metadata !DIExpression()), !dbg !10748
  store ptr %__pyx_v_file, ptr %__pyx_v_file.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_file.addr, metadata !10745, metadata !DIExpression()), !dbg !10749
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10750
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !10746, metadata !DIExpression()), !dbg !10751
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !10752
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10747, metadata !DIExpression()), !dbg !10753
  store ptr null, ptr %__pyx_r, align 8, !dbg !10753, !tbaa !1899
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !10754, !tbaa !1899
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10755, !tbaa !1899
  %1 = load ptr, ptr %__pyx_v_file.addr, align 8, !dbg !10756, !tbaa !1899
  %call = call ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_4dump(ptr noundef %0, ptr noundef %1), !dbg !10757
  store ptr %call, ptr %__pyx_r, align 8, !dbg !10758, !tbaa !1899
  %2 = load ptr, ptr %__pyx_r, align 8, !dbg !10759, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !10760
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10760
  ret ptr %2, !dbg !10761
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_7__reduce_cython__(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 !dbg !10762 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10764, metadata !DIExpression()), !dbg !10768
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %unused.addr, metadata !10765, metadata !DIExpression()), !dbg !10769
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10770
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !10766, metadata !DIExpression()), !dbg !10771
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !10772
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10767, metadata !DIExpression()), !dbg !10773
  store ptr null, ptr %__pyx_r, align 8, !dbg !10773, !tbaa !1899
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !10774, !tbaa !1899
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10775, !tbaa !1899
  %call = call ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__(ptr noundef %0), !dbg !10776
  store ptr %call, ptr %__pyx_r, align 8, !dbg !10777, !tbaa !1899
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !10778, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !10779
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10779
  ret ptr %1, !dbg !10780
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_4Plex_3DFA_8StateMap_9__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 !dbg !10781 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10783, metadata !DIExpression()), !dbg !10787
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !10784, metadata !DIExpression()), !dbg !10788
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10789
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !10785, metadata !DIExpression()), !dbg !10790
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !10791
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10786, metadata !DIExpression()), !dbg !10792
  store ptr null, ptr %__pyx_r, align 8, !dbg !10792, !tbaa !1899
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !10793, !tbaa !1899
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10794, !tbaa !1899
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !10795, !tbaa !1899
  %call = call ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_8__setstate_cython__(ptr noundef %0, ptr noundef %1), !dbg !10796
  store ptr %call, ptr %__pyx_r, align 8, !dbg !10797, !tbaa !1899
  %2 = load ptr, ptr %__pyx_r, align 8, !dbg !10798, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !10799
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !10799
  ret ptr %2, !dbg !10800
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_2new_to_old(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_new_state) #0 !dbg !10801 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_new_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10803, metadata !DIExpression()), !dbg !10813
  store ptr %__pyx_v_new_state, ptr %__pyx_v_new_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_state.addr, metadata !10804, metadata !DIExpression()), !dbg !10814
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !10815
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10805, metadata !DIExpression()), !dbg !10816
  store ptr null, ptr %__pyx_r, align 8, !dbg !10816, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !10817
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !10806, metadata !DIExpression()), !dbg !10818
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !10818, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !10819
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !10807, metadata !DIExpression()), !dbg !10820
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10820, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !10821
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !10808, metadata !DIExpression()), !dbg !10822
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !10822, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !10823
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !10809, metadata !DIExpression()), !dbg !10824
  store ptr null, ptr %__pyx_filename, align 8, !dbg !10824, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !10825
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !10810, metadata !DIExpression()), !dbg !10826
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !10826, !tbaa !1984
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !10827, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %0), !dbg !10827
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10828, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %1, i32 0, i32 4, !dbg !10828
  %2 = load ptr, ptr %new_to_old_dict, align 8, !dbg !10828, !tbaa !8732
  %cmp = icmp eq ptr %2, @_Py_NoneStruct, !dbg !10828
  %lnot = xor i1 %cmp, true, !dbg !10828
  %lnot1 = xor i1 %lnot, true, !dbg !10828
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10828
  %conv = sext i32 %lnot.ext to i64, !dbg !10828
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10828
  %tobool = icmp ne i64 %expval, 0, !dbg !10828
  br i1 %tobool, label %if.then, label %if.end, !dbg !10830

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10831, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.89), !dbg !10833
  %4 = load ptr, ptr @__pyx_f, align 16, !dbg !10834, !tbaa !1899
  store ptr %4, ptr %__pyx_filename, align 8, !dbg !10834, !tbaa !1899
  %5 = load ptr, ptr %__pyx_filename, align 8, !dbg !10834, !tbaa !1899
  store i32 134, ptr %__pyx_lineno, align 4, !dbg !10834, !tbaa !1984
  %6 = load i32, ptr %__pyx_lineno, align 4, !dbg !10834, !tbaa !1984
  store i32 4975, ptr %__pyx_clineno, align 4, !dbg !10834, !tbaa !1984
  %7 = load i32, ptr %__pyx_clineno, align 4, !dbg !10834, !tbaa !1984
  br label %__pyx_L1_error, !dbg !10837

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !10838, !tbaa !1899
  %9 = load ptr, ptr %__pyx_v_new_state.addr, align 8, !dbg !10839, !tbaa !1899
  %call = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %8, ptr noundef %9), !dbg !10840
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !10841, !tbaa !1899
  %10 = load ptr, ptr %__pyx_t_1, align 8, !dbg !10842, !tbaa !1899
  %tobool2 = icmp ne ptr %10, null, !dbg !10842
  %lnot3 = xor i1 %tobool2, true, !dbg !10842
  %lnot5 = xor i1 %lnot3, true, !dbg !10842
  %lnot7 = xor i1 %lnot5, true, !dbg !10842
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !10842
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !10842
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !10842
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !10842
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !10844

if.then12:                                        ; preds = %if.end
  %11 = load ptr, ptr @__pyx_f, align 16, !dbg !10845, !tbaa !1899
  store ptr %11, ptr %__pyx_filename, align 8, !dbg !10845, !tbaa !1899
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !10845, !tbaa !1899
  store i32 134, ptr %__pyx_lineno, align 4, !dbg !10845, !tbaa !1984
  %13 = load i32, ptr %__pyx_lineno, align 4, !dbg !10845, !tbaa !1984
  store i32 4977, ptr %__pyx_clineno, align 4, !dbg !10845, !tbaa !1984
  %14 = load i32, ptr %__pyx_clineno, align 4, !dbg !10845, !tbaa !1984
  br label %__pyx_L1_error, !dbg !10848

if.end13:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10849, !tbaa !1899
  %new_to_old_dict14 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %15, i32 0, i32 4, !dbg !10850
  %16 = load ptr, ptr %new_to_old_dict14, align 8, !dbg !10850, !tbaa !8732
  %17 = load ptr, ptr %__pyx_t_1, align 8, !dbg !10851, !tbaa !1899
  %call15 = call ptr @__Pyx_PyDict_GetItem(ptr noundef %16, ptr noundef %17), !dbg !10852
  store ptr %call15, ptr %__pyx_t_2, align 8, !dbg !10853, !tbaa !1899
  %18 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10854, !tbaa !1899
  %tobool16 = icmp ne ptr %18, null, !dbg !10854
  %lnot17 = xor i1 %tobool16, true, !dbg !10854
  %lnot19 = xor i1 %lnot17, true, !dbg !10854
  %lnot21 = xor i1 %lnot19, true, !dbg !10854
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !10854
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !10854
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !10854
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !10854
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10856

if.then26:                                        ; preds = %if.end13
  %19 = load ptr, ptr @__pyx_f, align 16, !dbg !10857, !tbaa !1899
  store ptr %19, ptr %__pyx_filename, align 8, !dbg !10857, !tbaa !1899
  %20 = load ptr, ptr %__pyx_filename, align 8, !dbg !10857, !tbaa !1899
  store i32 134, ptr %__pyx_lineno, align 4, !dbg !10857, !tbaa !1984
  %21 = load i32, ptr %__pyx_lineno, align 4, !dbg !10857, !tbaa !1984
  store i32 4979, ptr %__pyx_clineno, align 4, !dbg !10857, !tbaa !1984
  %22 = load i32, ptr %__pyx_clineno, align 4, !dbg !10857, !tbaa !1984
  br label %__pyx_L1_error, !dbg !10860

if.end27:                                         ; preds = %if.end13
  %23 = load ptr, ptr %__pyx_t_1, align 8, !dbg !10861, !tbaa !1899
  call void @Py_DECREF(ptr noundef %23), !dbg !10861
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !10862, !tbaa !1899
  %24 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10863, !tbaa !1899
  store ptr %24, ptr %__pyx_r, align 8, !dbg !10864, !tbaa !1899
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10865, !tbaa !1899
  br label %__pyx_L0, !dbg !10866

__pyx_L1_error:                                   ; preds = %if.then26, %if.then12, %if.then
  tail call void @llvm.dbg.label(metadata !10811), !dbg !10867
  %25 = load ptr, ptr %__pyx_t_1, align 8, !dbg !10868, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %25), !dbg !10868
  %26 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10869, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %26), !dbg !10869
  %27 = load i32, ptr %__pyx_clineno, align 4, !dbg !10870, !tbaa !1984
  %28 = load i32, ptr %__pyx_lineno, align 4, !dbg !10871, !tbaa !1984
  %29 = load ptr, ptr %__pyx_filename, align 8, !dbg !10872, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.105, i32 noundef %27, i32 noundef %28, ptr noundef %29), !dbg !10873
  store ptr null, ptr %__pyx_r, align 8, !dbg !10874, !tbaa !1899
  br label %__pyx_L0, !dbg !10875

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end27
  tail call void @llvm.dbg.label(metadata !10812), !dbg !10876
  %30 = load ptr, ptr %__pyx_r, align 8, !dbg !10877, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !10878
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !10878
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !10878
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !10878
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !10878
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !10878
  ret ptr %30, !dbg !10879
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyDict_GetItem(ptr noundef %d, ptr noundef %key) #0 !dbg !10880 {
entry:
  %retval = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %key.addr = alloca ptr, align 8
  %value = alloca ptr, align 8
  %args = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %d, ptr %d.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %d.addr, metadata !10882, metadata !DIExpression()), !dbg !10892
  store ptr %key, ptr %key.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !10883, metadata !DIExpression()), !dbg !10893
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !10894
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !10884, metadata !DIExpression()), !dbg !10895
  %0 = load ptr, ptr %d.addr, align 8, !dbg !10896, !tbaa !1899
  %1 = load ptr, ptr %key.addr, align 8, !dbg !10897, !tbaa !1899
  %call = call ptr @PyDict_GetItemWithError(ptr noundef %0, ptr noundef %1), !dbg !10898
  store ptr %call, ptr %value, align 8, !dbg !10899, !tbaa !1899
  %2 = load ptr, ptr %value, align 8, !dbg !10900, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !10900
  %lnot = xor i1 %tobool, true, !dbg !10900
  %lnot1 = xor i1 %lnot, true, !dbg !10900
  %lnot2 = xor i1 %lnot1, true, !dbg !10900
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10900
  %conv = sext i32 %lnot.ext to i64, !dbg !10900
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10900
  %tobool3 = icmp ne i64 %expval, 0, !dbg !10900
  br i1 %tobool3, label %if.then, label %if.end30, !dbg !10901

if.then:                                          ; preds = %entry
  %call4 = call ptr @PyErr_Occurred(), !dbg !10902
  %tobool5 = icmp ne ptr %call4, null, !dbg !10902
  br i1 %tobool5, label %if.end29, label %if.then6, !dbg !10903

if.then6:                                         ; preds = %if.then
  %3 = load ptr, ptr %key.addr, align 8, !dbg !10904, !tbaa !1899
  %call7 = call ptr @Py_TYPE(ptr noundef %3), !dbg !10904
  %call8 = call i32 @PyType_HasFeature(ptr noundef %call7, i64 noundef 67108864), !dbg !10904
  %tobool9 = icmp ne i32 %call8, 0, !dbg !10904
  %lnot10 = xor i1 %tobool9, true, !dbg !10904
  %lnot12 = xor i1 %lnot10, true, !dbg !10904
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !10904
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !10904
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !10904
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !10904
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !10905

if.then17:                                        ; preds = %if.then6
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #11, !dbg !10906
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !10885, metadata !DIExpression()), !dbg !10907
  %4 = load ptr, ptr %key.addr, align 8, !dbg !10908, !tbaa !1899
  %call18 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %4), !dbg !10909
  store ptr %call18, ptr %args, align 8, !dbg !10907, !tbaa !1899
  %5 = load ptr, ptr %args, align 8, !dbg !10910, !tbaa !1899
  %tobool19 = icmp ne ptr %5, null, !dbg !10910
  %lnot20 = xor i1 %tobool19, true, !dbg !10910
  %lnot22 = xor i1 %lnot20, true, !dbg !10910
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !10910
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !10910
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 1), !dbg !10910
  %tobool26 = icmp ne i64 %expval25, 0, !dbg !10910
  br i1 %tobool26, label %if.then27, label %if.end, !dbg !10912

if.then27:                                        ; preds = %if.then17
  %6 = load ptr, ptr @PyExc_KeyError, align 8, !dbg !10913, !tbaa !1899
  %7 = load ptr, ptr %args, align 8, !dbg !10915, !tbaa !1899
  call void @PyErr_SetObject(ptr noundef %6, ptr noundef %7), !dbg !10916
  %8 = load ptr, ptr %args, align 8, !dbg !10917, !tbaa !1899
  call void @Py_DECREF(ptr noundef %8), !dbg !10917
  br label %if.end, !dbg !10918

if.end:                                           ; preds = %if.then27, %if.then17
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #11, !dbg !10919
  br label %if.end28, !dbg !10920

if.else:                                          ; preds = %if.then6
  %9 = load ptr, ptr @PyExc_KeyError, align 8, !dbg !10921, !tbaa !1899
  %10 = load ptr, ptr %key.addr, align 8, !dbg !10923, !tbaa !1899
  call void @PyErr_SetObject(ptr noundef %9, ptr noundef %10), !dbg !10924
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end
  br label %if.end29, !dbg !10925

if.end29:                                         ; preds = %if.end28, %if.then
  store ptr null, ptr %retval, align 8, !dbg !10926
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10926

if.end30:                                         ; preds = %entry
  %11 = load ptr, ptr %value, align 8, !dbg !10927, !tbaa !1899
  call void @Py_INCREF(ptr noundef %11), !dbg !10927
  %12 = load ptr, ptr %value, align 8, !dbg !10928, !tbaa !1899
  store ptr %12, ptr %retval, align 8, !dbg !10929
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10929

cleanup:                                          ; preds = %if.end30, %if.end29
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !10930
  %13 = load ptr, ptr %retval, align 8, !dbg !10930
  ret ptr %13, !dbg !10930
}

declare !dbg !10931 void @PyErr_SetObject(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_4dump(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_file) #0 !dbg !10932 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_file.addr = alloca ptr, align 8
  %__pyx_v_state_set_str = alloca ptr, align 8
  %__pyx_v_new_state = alloca ptr, align 8
  %__pyx_v_old_state_set = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_temp = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp90 = alloca ptr, align 8
  %function = alloca ptr, align 8
  %tmp190 = alloca ptr, align 8
  %__pyx_callargs = alloca [2 x ptr], align 16
  %function274 = alloca ptr, align 8
  %tmp277 = alloca ptr, align 8
  %__pyx_callargs282 = alloca [2 x ptr], align 16
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10934, metadata !DIExpression()), !dbg !10983
  store ptr %__pyx_v_file, ptr %__pyx_v_file.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_file.addr, metadata !10935, metadata !DIExpression()), !dbg !10984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state_set_str) #11, !dbg !10985
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state_set_str, metadata !10936, metadata !DIExpression()), !dbg !10986
  store ptr null, ptr %__pyx_v_state_set_str, align 8, !dbg !10986, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_new_state) #11, !dbg !10987
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_state, metadata !10937, metadata !DIExpression()), !dbg !10988
  store ptr null, ptr %__pyx_v_new_state, align 8, !dbg !10988, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_old_state_set) #11, !dbg !10989
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_state_set, metadata !10938, metadata !DIExpression()), !dbg !10990
  store ptr null, ptr %__pyx_v_old_state_set, align 8, !dbg !10990, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !10991
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10939, metadata !DIExpression()), !dbg !10992
  store ptr null, ptr %__pyx_r, align 8, !dbg !10992, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !10993
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !10940, metadata !DIExpression()), !dbg !10994
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !10994, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !10995
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !10941, metadata !DIExpression()), !dbg !10996
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10996, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !10997
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !10942, metadata !DIExpression()), !dbg !10998
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !10999
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !10943, metadata !DIExpression()), !dbg !11000
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11000, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !11001
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !10944, metadata !DIExpression()), !dbg !11002
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11002, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #11, !dbg !11003
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !10945, metadata !DIExpression()), !dbg !11004
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #11, !dbg !11005
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !10946, metadata !DIExpression()), !dbg !11006
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !11007
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !10947, metadata !DIExpression()), !dbg !11008
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11008, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #11, !dbg !11009
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !10948, metadata !DIExpression()), !dbg !11010
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11010, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #11, !dbg !11011
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !10949, metadata !DIExpression()), !dbg !11012
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11012, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #11, !dbg !11013
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !10950, metadata !DIExpression()), !dbg !11014
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !11015
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !10951, metadata !DIExpression()), !dbg !11016
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !11016, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !11017
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !10952, metadata !DIExpression()), !dbg !11018
  store ptr null, ptr %__pyx_filename, align 8, !dbg !11018, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !11019
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !10953, metadata !DIExpression()), !dbg !11020
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !11020, !tbaa !1984
  %call = call ptr @PyList_New(i64 noundef 1), !dbg !11021
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !11022, !tbaa !1899
  %0 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11023, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !11023
  %lnot = xor i1 %tobool, true, !dbg !11023
  %lnot1 = xor i1 %lnot, true, !dbg !11023
  %lnot2 = xor i1 %lnot1, true, !dbg !11023
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11023
  %conv = sext i32 %lnot.ext to i64, !dbg !11023
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11023
  %tobool3 = icmp ne i64 %expval, 0, !dbg !11023
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11025

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_f, align 16, !dbg !11026, !tbaa !1899
  store ptr %1, ptr %__pyx_filename, align 8, !dbg !11026, !tbaa !1899
  %2 = load ptr, ptr %__pyx_filename, align 8, !dbg !11026, !tbaa !1899
  store i32 144, ptr %__pyx_lineno, align 4, !dbg !11026, !tbaa !1984
  %3 = load i32, ptr %__pyx_lineno, align 4, !dbg !11026, !tbaa !1984
  store i32 5118, ptr %__pyx_clineno, align 4, !dbg !11026, !tbaa !1984
  %4 = load i32, ptr %__pyx_clineno, align 4, !dbg !11026, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11029

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11030, !tbaa !1899
  %__pyx_n_s_state_set_str = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 84, !dbg !11030
  %6 = load ptr, ptr %__pyx_n_s_state_set_str, align 8, !dbg !11030, !tbaa !3022
  call void @Py_INCREF(ptr noundef %6), !dbg !11030
  %7 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11031, !tbaa !1899
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11031, !tbaa !1899
  %__pyx_n_s_state_set_str4 = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 84, !dbg !11031
  %9 = load ptr, ptr %__pyx_n_s_state_set_str4, align 8, !dbg !11031, !tbaa !3022
  call void @PyList_SET_ITEM(ptr noundef %7, i64 noundef 0, ptr noundef %9), !dbg !11031
  br i1 false, label %if.then5, label %if.end6, !dbg !11033

if.then5:                                         ; preds = %if.end
  %10 = load ptr, ptr @__pyx_f, align 16, !dbg !11034, !tbaa !1899
  store ptr %10, ptr %__pyx_filename, align 8, !dbg !11034, !tbaa !1899
  %11 = load ptr, ptr %__pyx_filename, align 8, !dbg !11034, !tbaa !1899
  store i32 144, ptr %__pyx_lineno, align 4, !dbg !11034, !tbaa !1984
  %12 = load i32, ptr %__pyx_lineno, align 4, !dbg !11034, !tbaa !1984
  store i32 5122, ptr %__pyx_clineno, align 4, !dbg !11034, !tbaa !1984
  %13 = load i32, ptr %__pyx_clineno, align 4, !dbg !11034, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11037

if.end6:                                          ; preds = %if.end
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11038, !tbaa !1899
  %__pyx_n_s_Transitions = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 34, !dbg !11038
  %15 = load ptr, ptr %__pyx_n_s_Transitions, align 8, !dbg !11038, !tbaa !2354
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11039, !tbaa !1899
  %call7 = call ptr @__Pyx_Import(ptr noundef %15, ptr noundef %16, i32 noundef 1), !dbg !11040
  store ptr %call7, ptr %__pyx_t_2, align 8, !dbg !11041, !tbaa !1899
  %17 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11042, !tbaa !1899
  %tobool8 = icmp ne ptr %17, null, !dbg !11042
  %lnot9 = xor i1 %tobool8, true, !dbg !11042
  %lnot11 = xor i1 %lnot9, true, !dbg !11042
  %lnot13 = xor i1 %lnot11, true, !dbg !11042
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !11042
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !11042
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0), !dbg !11042
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !11042
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !11044

if.then18:                                        ; preds = %if.end6
  %18 = load ptr, ptr @__pyx_f, align 16, !dbg !11045, !tbaa !1899
  store ptr %18, ptr %__pyx_filename, align 8, !dbg !11045, !tbaa !1899
  %19 = load ptr, ptr %__pyx_filename, align 8, !dbg !11045, !tbaa !1899
  store i32 144, ptr %__pyx_lineno, align 4, !dbg !11045, !tbaa !1984
  %20 = load i32, ptr %__pyx_lineno, align 4, !dbg !11045, !tbaa !1984
  store i32 5123, ptr %__pyx_clineno, align 4, !dbg !11045, !tbaa !1984
  %21 = load i32, ptr %__pyx_clineno, align 4, !dbg !11045, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11048

if.end19:                                         ; preds = %if.end6
  %22 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11049, !tbaa !1899
  call void @Py_DECREF(ptr noundef %22), !dbg !11049
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11050, !tbaa !1899
  %23 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11051, !tbaa !1899
  %24 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11052, !tbaa !1899
  %__pyx_n_s_state_set_str20 = getelementptr inbounds %struct.__pyx_mstate, ptr %24, i32 0, i32 84, !dbg !11052
  %25 = load ptr, ptr %__pyx_n_s_state_set_str20, align 8, !dbg !11052, !tbaa !3022
  %call21 = call ptr @__Pyx_ImportFrom(ptr noundef %23, ptr noundef %25), !dbg !11053
  store ptr %call21, ptr %__pyx_t_1, align 8, !dbg !11054, !tbaa !1899
  %26 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11055, !tbaa !1899
  %tobool22 = icmp ne ptr %26, null, !dbg !11055
  %lnot23 = xor i1 %tobool22, true, !dbg !11055
  %lnot25 = xor i1 %lnot23, true, !dbg !11055
  %lnot27 = xor i1 %lnot25, true, !dbg !11055
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !11055
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !11055
  %expval30 = call i64 @llvm.expect.i64(i64 %conv29, i64 0), !dbg !11055
  %tobool31 = icmp ne i64 %expval30, 0, !dbg !11055
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !11057

if.then32:                                        ; preds = %if.end19
  %27 = load ptr, ptr @__pyx_f, align 16, !dbg !11058, !tbaa !1899
  store ptr %27, ptr %__pyx_filename, align 8, !dbg !11058, !tbaa !1899
  %28 = load ptr, ptr %__pyx_filename, align 8, !dbg !11058, !tbaa !1899
  store i32 144, ptr %__pyx_lineno, align 4, !dbg !11058, !tbaa !1984
  %29 = load i32, ptr %__pyx_lineno, align 4, !dbg !11058, !tbaa !1984
  store i32 5126, ptr %__pyx_clineno, align 4, !dbg !11058, !tbaa !1984
  %30 = load i32, ptr %__pyx_clineno, align 4, !dbg !11058, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11061

if.end33:                                         ; preds = %if.end19
  %31 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11062, !tbaa !1899
  call void @Py_INCREF(ptr noundef %31), !dbg !11062
  %32 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11063, !tbaa !1899
  store ptr %32, ptr %__pyx_v_state_set_str, align 8, !dbg !11064, !tbaa !1899
  %33 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11065, !tbaa !1899
  call void @Py_DECREF(ptr noundef %33), !dbg !11065
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11066, !tbaa !1899
  %34 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11067, !tbaa !1899
  call void @Py_DECREF(ptr noundef %34), !dbg !11067
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11068, !tbaa !1899
  %35 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11069, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %35, i32 0, i32 2, !dbg !11069
  %36 = load ptr, ptr %new_machine, align 8, !dbg !11069, !tbaa !8661
  %states = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_FastMachine, ptr %36, i32 0, i32 3, !dbg !11069
  %37 = load ptr, ptr %states, align 8, !dbg !11069, !tbaa !6979
  %cmp = icmp eq ptr %37, @_Py_NoneStruct, !dbg !11069
  %lnot35 = xor i1 %cmp, true, !dbg !11069
  %lnot37 = xor i1 %lnot35, true, !dbg !11069
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !11069
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !11069
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0), !dbg !11069
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !11069
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !11071

if.then42:                                        ; preds = %if.end33
  %38 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !11072, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %38, ptr noundef @.str.78), !dbg !11074
  %39 = load ptr, ptr @__pyx_f, align 16, !dbg !11075, !tbaa !1899
  store ptr %39, ptr %__pyx_filename, align 8, !dbg !11075, !tbaa !1899
  %40 = load ptr, ptr %__pyx_filename, align 8, !dbg !11075, !tbaa !1899
  store i32 146, ptr %__pyx_lineno, align 4, !dbg !11075, !tbaa !1984
  %41 = load i32, ptr %__pyx_lineno, align 4, !dbg !11075, !tbaa !1984
  store i32 5142, ptr %__pyx_clineno, align 4, !dbg !11075, !tbaa !1984
  %42 = load i32, ptr %__pyx_clineno, align 4, !dbg !11075, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11078

if.end43:                                         ; preds = %if.end33
  %43 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11079, !tbaa !1899
  %new_machine44 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %43, i32 0, i32 2, !dbg !11080
  %44 = load ptr, ptr %new_machine44, align 8, !dbg !11080, !tbaa !8661
  %states45 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_8Machines_FastMachine, ptr %44, i32 0, i32 3, !dbg !11081
  %45 = load ptr, ptr %states45, align 8, !dbg !11081, !tbaa !6979
  store ptr %45, ptr %__pyx_t_2, align 8, !dbg !11082, !tbaa !1899
  %46 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11083, !tbaa !1899
  call void @Py_INCREF(ptr noundef %46), !dbg !11083
  store i64 0, ptr %__pyx_t_3, align 8, !dbg !11084, !tbaa !2597
  br label %for.cond, !dbg !11085

for.cond:                                         ; preds = %cleanup.cont307, %if.end43
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #11, !dbg !11086
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp, metadata !10954, metadata !DIExpression()), !dbg !11087
  %47 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11088, !tbaa !1899
  %call46 = call i64 @PyList_GET_SIZE(ptr noundef %47), !dbg !11088
  store i64 %call46, ptr %__pyx_temp, align 8, !dbg !11087, !tbaa !2597
  %48 = load i64, ptr %__pyx_t_3, align 8, !dbg !11089, !tbaa !2597
  %49 = load i64, ptr %__pyx_temp, align 8, !dbg !11091, !tbaa !2597
  %cmp47 = icmp sge i64 %48, %49, !dbg !11092
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !11093

if.then49:                                        ; preds = %for.cond
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11094

if.end50:                                         ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11095
  br label %cleanup, !dbg !11095

cleanup:                                          ; preds = %if.end50, %if.then49
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #11, !dbg !11095
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  %50 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11096, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %50, i32 0, i32 1, !dbg !11096
  %51 = load ptr, ptr %ob_item, align 8, !dbg !11096, !tbaa !3664
  %52 = load i64, ptr %__pyx_t_3, align 8, !dbg !11096, !tbaa !2597
  %arrayidx = getelementptr ptr, ptr %51, i64 %52, !dbg !11096
  %53 = load ptr, ptr %arrayidx, align 8, !dbg !11096, !tbaa !1899
  store ptr %53, ptr %__pyx_t_1, align 8, !dbg !11097, !tbaa !1899
  %54 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11098, !tbaa !1899
  call void @Py_INCREF(ptr noundef %54), !dbg !11098
  %55 = load i64, ptr %__pyx_t_3, align 8, !dbg !11099, !tbaa !2597
  %inc = add i64 %55, 1, !dbg !11099
  store i64 %inc, ptr %__pyx_t_3, align 8, !dbg !11099, !tbaa !2597
  br label %do.body, !dbg !11100

do.body:                                          ; preds = %cleanup.cont
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !11101
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !10959, metadata !DIExpression()), !dbg !11101
  %56 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !11101, !tbaa !1899
  store ptr %56, ptr %tmp, align 8, !dbg !11101, !tbaa !1899
  %57 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11101, !tbaa !1899
  store ptr %57, ptr %__pyx_v_new_state, align 8, !dbg !11101, !tbaa !1899
  %58 = load ptr, ptr %tmp, align 8, !dbg !11101, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %58), !dbg !11101
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !11100
  br label %do.cond, !dbg !11101

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11101

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11102, !tbaa !1899
  %59 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11103, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %59, i32 0, i32 4, !dbg !11103
  %60 = load ptr, ptr %new_to_old_dict, align 8, !dbg !11103, !tbaa !8732
  %cmp51 = icmp eq ptr %60, @_Py_NoneStruct, !dbg !11103
  %lnot53 = xor i1 %cmp51, true, !dbg !11103
  %lnot55 = xor i1 %lnot53, true, !dbg !11103
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !11103
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !11103
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0), !dbg !11103
  %tobool59 = icmp ne i64 %expval58, 0, !dbg !11103
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !11105

if.then60:                                        ; preds = %do.end
  %61 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !11106, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %61, ptr noundef @.str.89), !dbg !11108
  %62 = load ptr, ptr @__pyx_f, align 16, !dbg !11109, !tbaa !1899
  store ptr %62, ptr %__pyx_filename, align 8, !dbg !11109, !tbaa !1899
  %63 = load ptr, ptr %__pyx_filename, align 8, !dbg !11109, !tbaa !1899
  store i32 147, ptr %__pyx_lineno, align 4, !dbg !11109, !tbaa !1984
  %64 = load i32, ptr %__pyx_lineno, align 4, !dbg !11109, !tbaa !1984
  store i32 5172, ptr %__pyx_clineno, align 4, !dbg !11109, !tbaa !1984
  %65 = load i32, ptr %__pyx_clineno, align 4, !dbg !11109, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11112

if.end61:                                         ; preds = %do.end
  %66 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !11113, !tbaa !1899
  %67 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !11114, !tbaa !1899
  %call62 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %66, ptr noundef %67), !dbg !11115
  store ptr %call62, ptr %__pyx_t_1, align 8, !dbg !11116, !tbaa !1899
  %68 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11117, !tbaa !1899
  %tobool63 = icmp ne ptr %68, null, !dbg !11117
  %lnot64 = xor i1 %tobool63, true, !dbg !11117
  %lnot66 = xor i1 %lnot64, true, !dbg !11117
  %lnot68 = xor i1 %lnot66, true, !dbg !11117
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !11117
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !11117
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0), !dbg !11117
  %tobool72 = icmp ne i64 %expval71, 0, !dbg !11117
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !11119

if.then73:                                        ; preds = %if.end61
  %69 = load ptr, ptr @__pyx_f, align 16, !dbg !11120, !tbaa !1899
  store ptr %69, ptr %__pyx_filename, align 8, !dbg !11120, !tbaa !1899
  %70 = load ptr, ptr %__pyx_filename, align 8, !dbg !11120, !tbaa !1899
  store i32 147, ptr %__pyx_lineno, align 4, !dbg !11120, !tbaa !1984
  %71 = load i32, ptr %__pyx_lineno, align 4, !dbg !11120, !tbaa !1984
  store i32 5174, ptr %__pyx_clineno, align 4, !dbg !11120, !tbaa !1984
  %72 = load i32, ptr %__pyx_clineno, align 4, !dbg !11120, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11123

if.end74:                                         ; preds = %if.end61
  %73 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11124, !tbaa !1899
  %new_to_old_dict75 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %73, i32 0, i32 4, !dbg !11125
  %74 = load ptr, ptr %new_to_old_dict75, align 8, !dbg !11125, !tbaa !8732
  %75 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11126, !tbaa !1899
  %call76 = call ptr @__Pyx_PyDict_GetItem(ptr noundef %74, ptr noundef %75), !dbg !11127
  store ptr %call76, ptr %__pyx_t_4, align 8, !dbg !11128, !tbaa !1899
  %76 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11129, !tbaa !1899
  %tobool77 = icmp ne ptr %76, null, !dbg !11129
  %lnot78 = xor i1 %tobool77, true, !dbg !11129
  %lnot80 = xor i1 %lnot78, true, !dbg !11129
  %lnot82 = xor i1 %lnot80, true, !dbg !11129
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !11129
  %conv84 = sext i32 %lnot.ext83 to i64, !dbg !11129
  %expval85 = call i64 @llvm.expect.i64(i64 %conv84, i64 0), !dbg !11129
  %tobool86 = icmp ne i64 %expval85, 0, !dbg !11129
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !11131

if.then87:                                        ; preds = %if.end74
  %77 = load ptr, ptr @__pyx_f, align 16, !dbg !11132, !tbaa !1899
  store ptr %77, ptr %__pyx_filename, align 8, !dbg !11132, !tbaa !1899
  %78 = load ptr, ptr %__pyx_filename, align 8, !dbg !11132, !tbaa !1899
  store i32 147, ptr %__pyx_lineno, align 4, !dbg !11132, !tbaa !1984
  %79 = load i32, ptr %__pyx_lineno, align 4, !dbg !11132, !tbaa !1984
  store i32 5176, ptr %__pyx_clineno, align 4, !dbg !11132, !tbaa !1984
  %80 = load i32, ptr %__pyx_clineno, align 4, !dbg !11132, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11135

if.end88:                                         ; preds = %if.end74
  %81 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11136, !tbaa !1899
  call void @Py_DECREF(ptr noundef %81), !dbg !11136
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11137, !tbaa !1899
  br label %do.body89, !dbg !11138

do.body89:                                        ; preds = %if.end88
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp90) #11, !dbg !11139
  tail call void @llvm.dbg.declare(metadata ptr %tmp90, metadata !10961, metadata !DIExpression()), !dbg !11139
  %82 = load ptr, ptr %__pyx_v_old_state_set, align 8, !dbg !11139, !tbaa !1899
  store ptr %82, ptr %tmp90, align 8, !dbg !11139, !tbaa !1899
  %83 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11139, !tbaa !1899
  store ptr %83, ptr %__pyx_v_old_state_set, align 8, !dbg !11139, !tbaa !1899
  %84 = load ptr, ptr %tmp90, align 8, !dbg !11139, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %84), !dbg !11139
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp90) #11, !dbg !11138
  br label %do.cond91, !dbg !11139

do.cond91:                                        ; preds = %do.body89
  br label %do.end92, !dbg !11139

do.end92:                                         ; preds = %do.cond91
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11140, !tbaa !1899
  %85 = load ptr, ptr %__pyx_v_file.addr, align 8, !dbg !11141, !tbaa !1899
  %86 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11142, !tbaa !1899
  %__pyx_n_s_write = getelementptr inbounds %struct.__pyx_mstate, ptr %86, i32 0, i32 89, !dbg !11142
  %87 = load ptr, ptr %__pyx_n_s_write, align 8, !dbg !11142, !tbaa !7471
  %call93 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %85, ptr noundef %87), !dbg !11143
  store ptr %call93, ptr %__pyx_t_1, align 8, !dbg !11144, !tbaa !1899
  %88 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11145, !tbaa !1899
  %tobool94 = icmp ne ptr %88, null, !dbg !11145
  %lnot95 = xor i1 %tobool94, true, !dbg !11145
  %lnot97 = xor i1 %lnot95, true, !dbg !11145
  %lnot99 = xor i1 %lnot97, true, !dbg !11145
  %lnot.ext100 = zext i1 %lnot99 to i32, !dbg !11145
  %conv101 = sext i32 %lnot.ext100 to i64, !dbg !11145
  %expval102 = call i64 @llvm.expect.i64(i64 %conv101, i64 0), !dbg !11145
  %tobool103 = icmp ne i64 %expval102, 0, !dbg !11145
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !11147

if.then104:                                       ; preds = %do.end92
  %89 = load ptr, ptr @__pyx_f, align 16, !dbg !11148, !tbaa !1899
  store ptr %89, ptr %__pyx_filename, align 8, !dbg !11148, !tbaa !1899
  %90 = load ptr, ptr %__pyx_filename, align 8, !dbg !11148, !tbaa !1899
  store i32 148, ptr %__pyx_lineno, align 4, !dbg !11148, !tbaa !1984
  %91 = load i32, ptr %__pyx_lineno, align 4, !dbg !11148, !tbaa !1984
  store i32 5188, ptr %__pyx_clineno, align 4, !dbg !11148, !tbaa !1984
  %92 = load i32, ptr %__pyx_clineno, align 4, !dbg !11148, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11151

if.end105:                                        ; preds = %do.end92
  %call106 = call ptr @PyTuple_New(i64 noundef 5), !dbg !11152
  store ptr %call106, ptr %__pyx_t_5, align 8, !dbg !11153, !tbaa !1899
  %93 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11154, !tbaa !1899
  %tobool107 = icmp ne ptr %93, null, !dbg !11154
  %lnot108 = xor i1 %tobool107, true, !dbg !11154
  %lnot110 = xor i1 %lnot108, true, !dbg !11154
  %lnot112 = xor i1 %lnot110, true, !dbg !11154
  %lnot.ext113 = zext i1 %lnot112 to i32, !dbg !11154
  %conv114 = sext i32 %lnot.ext113 to i64, !dbg !11154
  %expval115 = call i64 @llvm.expect.i64(i64 %conv114, i64 0), !dbg !11154
  %tobool116 = icmp ne i64 %expval115, 0, !dbg !11154
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !11156

if.then117:                                       ; preds = %if.end105
  %94 = load ptr, ptr @__pyx_f, align 16, !dbg !11157, !tbaa !1899
  store ptr %94, ptr %__pyx_filename, align 8, !dbg !11157, !tbaa !1899
  %95 = load ptr, ptr %__pyx_filename, align 8, !dbg !11157, !tbaa !1899
  store i32 148, ptr %__pyx_lineno, align 4, !dbg !11157, !tbaa !1984
  %96 = load i32, ptr %__pyx_lineno, align 4, !dbg !11157, !tbaa !1984
  store i32 5190, ptr %__pyx_clineno, align 4, !dbg !11157, !tbaa !1984
  %97 = load i32, ptr %__pyx_clineno, align 4, !dbg !11157, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11160

if.end118:                                        ; preds = %if.end105
  store i64 0, ptr %__pyx_t_6, align 8, !dbg !11161, !tbaa !2597
  store i32 127, ptr %__pyx_t_7, align 4, !dbg !11162, !tbaa !1984
  %98 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11163, !tbaa !1899
  %__pyx_kp_u_State = getelementptr inbounds %struct.__pyx_mstate, ptr %98, i32 0, i32 26, !dbg !11163
  %99 = load ptr, ptr %__pyx_kp_u_State, align 8, !dbg !11163, !tbaa !11164
  call void @Py_INCREF(ptr noundef %99), !dbg !11163
  %100 = load i64, ptr %__pyx_t_6, align 8, !dbg !11165, !tbaa !2597
  %add = add i64 %100, 9, !dbg !11165
  store i64 %add, ptr %__pyx_t_6, align 8, !dbg !11165, !tbaa !2597
  %101 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11166, !tbaa !1899
  %102 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11166, !tbaa !1899
  %__pyx_kp_u_State119 = getelementptr inbounds %struct.__pyx_mstate, ptr %102, i32 0, i32 26, !dbg !11166
  %103 = load ptr, ptr %__pyx_kp_u_State119, align 8, !dbg !11166, !tbaa !11164
  call void @PyTuple_SET_ITEM(ptr noundef %101, i64 noundef 0, ptr noundef %103), !dbg !11166
  %104 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !11167, !tbaa !1899
  %call120 = call i32 @Py_IS_TYPE(ptr noundef %104, ptr noundef @PyDict_Type), !dbg !11167
  %tobool121 = icmp ne i32 %call120, 0, !dbg !11167
  %lnot122 = xor i1 %tobool121, true, !dbg !11167
  %lnot124 = xor i1 %lnot122, true, !dbg !11167
  %lnot.ext125 = zext i1 %lnot124 to i32, !dbg !11167
  %conv126 = sext i32 %lnot.ext125 to i64, !dbg !11167
  %expval127 = call i64 @llvm.expect.i64(i64 %conv126, i64 1), !dbg !11167
  %tobool128 = icmp ne i64 %expval127, 0, !dbg !11167
  br i1 %tobool128, label %cond.true, label %cond.false, !dbg !11167

cond.true:                                        ; preds = %if.end118
  %105 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !11167, !tbaa !1899
  %106 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11167, !tbaa !1899
  %__pyx_n_u_number = getelementptr inbounds %struct.__pyx_mstate, ptr %106, i32 0, i32 66, !dbg !11167
  %107 = load ptr, ptr %__pyx_n_u_number, align 8, !dbg !11167, !tbaa !11168
  %call129 = call ptr @__Pyx_PyDict_GetItem(ptr noundef %105, ptr noundef %107), !dbg !11167
  br label %cond.end, !dbg !11167

cond.false:                                       ; preds = %if.end118
  %108 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !11167, !tbaa !1899
  %109 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11167, !tbaa !1899
  %__pyx_n_u_number130 = getelementptr inbounds %struct.__pyx_mstate, ptr %109, i32 0, i32 66, !dbg !11167
  %110 = load ptr, ptr %__pyx_n_u_number130, align 8, !dbg !11167, !tbaa !11168
  %call131 = call ptr @PyObject_GetItem(ptr noundef %108, ptr noundef %110), !dbg !11167
  br label %cond.end, !dbg !11167

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call129, %cond.true ], [ %call131, %cond.false ], !dbg !11167
  store ptr %cond, ptr %__pyx_t_8, align 8, !dbg !11169, !tbaa !1899
  %111 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11170, !tbaa !1899
  %tobool132 = icmp ne ptr %111, null, !dbg !11170
  %lnot133 = xor i1 %tobool132, true, !dbg !11170
  %lnot135 = xor i1 %lnot133, true, !dbg !11170
  %lnot137 = xor i1 %lnot135, true, !dbg !11170
  %lnot.ext138 = zext i1 %lnot137 to i32, !dbg !11170
  %conv139 = sext i32 %lnot.ext138 to i64, !dbg !11170
  %expval140 = call i64 @llvm.expect.i64(i64 %conv139, i64 0), !dbg !11170
  %tobool141 = icmp ne i64 %expval140, 0, !dbg !11170
  br i1 %tobool141, label %if.then142, label %if.end143, !dbg !11172

if.then142:                                       ; preds = %cond.end
  %112 = load ptr, ptr @__pyx_f, align 16, !dbg !11173, !tbaa !1899
  store ptr %112, ptr %__pyx_filename, align 8, !dbg !11173, !tbaa !1899
  %113 = load ptr, ptr %__pyx_filename, align 8, !dbg !11173, !tbaa !1899
  store i32 149, ptr %__pyx_lineno, align 4, !dbg !11173, !tbaa !1984
  %114 = load i32, ptr %__pyx_lineno, align 4, !dbg !11173, !tbaa !1984
  store i32 5204, ptr %__pyx_clineno, align 4, !dbg !11173, !tbaa !1984
  %115 = load i32, ptr %__pyx_clineno, align 4, !dbg !11173, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11176

if.end143:                                        ; preds = %cond.end
  %116 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11177, !tbaa !1899
  %call144 = call ptr @PyObject_Str(ptr noundef %116), !dbg !11178
  %117 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11179, !tbaa !1899
  %__pyx_empty_unicode = getelementptr inbounds %struct.__pyx_mstate, ptr %117, i32 0, i32 5, !dbg !11179
  %118 = load ptr, ptr %__pyx_empty_unicode, align 8, !dbg !11179, !tbaa !2097
  %call145 = call ptr @__Pyx_PyObject_FormatSimpleAndDecref(ptr noundef %call144, ptr noundef %118), !dbg !11180
  store ptr %call145, ptr %__pyx_t_9, align 8, !dbg !11181, !tbaa !1899
  %119 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11182, !tbaa !1899
  %tobool146 = icmp ne ptr %119, null, !dbg !11182
  %lnot147 = xor i1 %tobool146, true, !dbg !11182
  %lnot149 = xor i1 %lnot147, true, !dbg !11182
  %lnot151 = xor i1 %lnot149, true, !dbg !11182
  %lnot.ext152 = zext i1 %lnot151 to i32, !dbg !11182
  %conv153 = sext i32 %lnot.ext152 to i64, !dbg !11182
  %expval154 = call i64 @llvm.expect.i64(i64 %conv153, i64 0), !dbg !11182
  %tobool155 = icmp ne i64 %expval154, 0, !dbg !11182
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !11184

if.then156:                                       ; preds = %if.end143
  %120 = load ptr, ptr @__pyx_f, align 16, !dbg !11185, !tbaa !1899
  store ptr %120, ptr %__pyx_filename, align 8, !dbg !11185, !tbaa !1899
  %121 = load ptr, ptr %__pyx_filename, align 8, !dbg !11185, !tbaa !1899
  store i32 149, ptr %__pyx_lineno, align 4, !dbg !11185, !tbaa !1984
  %122 = load i32, ptr %__pyx_lineno, align 4, !dbg !11185, !tbaa !1984
  store i32 5206, ptr %__pyx_clineno, align 4, !dbg !11185, !tbaa !1984
  %123 = load i32, ptr %__pyx_clineno, align 4, !dbg !11185, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11188

if.end157:                                        ; preds = %if.end143
  %124 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11189, !tbaa !1899
  call void @Py_DECREF(ptr noundef %124), !dbg !11189
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11190, !tbaa !1899
  %125 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11191, !tbaa !1899
  %call158 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %125), !dbg !11191
  %126 = load i32, ptr %__pyx_t_7, align 4, !dbg !11192, !tbaa !1984
  %cmp159 = icmp ugt i32 %call158, %126, !dbg !11193
  br i1 %cmp159, label %cond.true161, label %cond.false163, !dbg !11194

cond.true161:                                     ; preds = %if.end157
  %127 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11195, !tbaa !1899
  %call162 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %127), !dbg !11195
  br label %cond.end164, !dbg !11194

cond.false163:                                    ; preds = %if.end157
  %128 = load i32, ptr %__pyx_t_7, align 4, !dbg !11196, !tbaa !1984
  br label %cond.end164, !dbg !11194

cond.end164:                                      ; preds = %cond.false163, %cond.true161
  %cond165 = phi i32 [ %call162, %cond.true161 ], [ %128, %cond.false163 ], !dbg !11194
  store i32 %cond165, ptr %__pyx_t_7, align 4, !dbg !11197, !tbaa !1984
  %129 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11198, !tbaa !1899
  %call166 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %129), !dbg !11198
  %130 = load i64, ptr %__pyx_t_6, align 8, !dbg !11199, !tbaa !2597
  %add167 = add i64 %130, %call166, !dbg !11199
  store i64 %add167, ptr %__pyx_t_6, align 8, !dbg !11199, !tbaa !2597
  %131 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11200, !tbaa !1899
  %132 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11200, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %131, i64 noundef 1, ptr noundef %132), !dbg !11200
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11201, !tbaa !1899
  %133 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11202, !tbaa !1899
  %__pyx_kp_u__2 = getelementptr inbounds %struct.__pyx_mstate, ptr %133, i32 0, i32 36, !dbg !11202
  %134 = load ptr, ptr %__pyx_kp_u__2, align 8, !dbg !11202, !tbaa !11203
  call void @Py_INCREF(ptr noundef %134), !dbg !11202
  %135 = load i64, ptr %__pyx_t_6, align 8, !dbg !11204, !tbaa !2597
  %add168 = add i64 %135, 5, !dbg !11204
  store i64 %add168, ptr %__pyx_t_6, align 8, !dbg !11204, !tbaa !2597
  %136 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11205, !tbaa !1899
  %137 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11205, !tbaa !1899
  %__pyx_kp_u__2169 = getelementptr inbounds %struct.__pyx_mstate, ptr %137, i32 0, i32 36, !dbg !11205
  %138 = load ptr, ptr %__pyx_kp_u__2169, align 8, !dbg !11205, !tbaa !11203
  call void @PyTuple_SET_ITEM(ptr noundef %136, i64 noundef 2, ptr noundef %138), !dbg !11205
  %139 = load ptr, ptr %__pyx_v_state_set_str, align 8, !dbg !11206, !tbaa !1899
  call void @Py_INCREF(ptr noundef %139), !dbg !11206
  %140 = load ptr, ptr %__pyx_v_state_set_str, align 8, !dbg !11207, !tbaa !1899
  store ptr %140, ptr %__pyx_t_8, align 8, !dbg !11208, !tbaa !1899
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11209, !tbaa !1899
  store i32 0, ptr %__pyx_t_11, align 4, !dbg !11210, !tbaa !1984
  %141 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11211, !tbaa !1899
  %call170 = call i32 @Py_IS_TYPE(ptr noundef %141, ptr noundef @PyMethod_Type), !dbg !11211
  %tobool171 = icmp ne i32 %call170, 0, !dbg !11211
  %lnot172 = xor i1 %tobool171, true, !dbg !11211
  %lnot174 = xor i1 %lnot172, true, !dbg !11211
  %lnot.ext175 = zext i1 %lnot174 to i32, !dbg !11211
  %conv176 = sext i32 %lnot.ext175 to i64, !dbg !11211
  %expval177 = call i64 @llvm.expect.i64(i64 %conv176, i64 0), !dbg !11211
  %tobool178 = icmp ne i64 %expval177, 0, !dbg !11211
  br i1 %tobool178, label %if.then179, label %if.end194, !dbg !11212

if.then179:                                       ; preds = %cond.end164
  %142 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11213, !tbaa !1899
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %142, i32 0, i32 2, !dbg !11213
  %143 = load ptr, ptr %im_self, align 8, !dbg !11213, !tbaa !6934
  store ptr %143, ptr %__pyx_t_10, align 8, !dbg !11214, !tbaa !1899
  %144 = load ptr, ptr %__pyx_t_10, align 8, !dbg !11215, !tbaa !1899
  %tobool180 = icmp ne ptr %144, null, !dbg !11215
  %lnot181 = xor i1 %tobool180, true, !dbg !11215
  %lnot183 = xor i1 %lnot181, true, !dbg !11215
  %lnot.ext184 = zext i1 %lnot183 to i32, !dbg !11215
  %conv185 = sext i32 %lnot.ext184 to i64, !dbg !11215
  %expval186 = call i64 @llvm.expect.i64(i64 %conv185, i64 1), !dbg !11215
  %tobool187 = icmp ne i64 %expval186, 0, !dbg !11215
  br i1 %tobool187, label %if.then188, label %if.end193, !dbg !11216

if.then188:                                       ; preds = %if.then179
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #11, !dbg !11217
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !10963, metadata !DIExpression()), !dbg !11218
  %145 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11219, !tbaa !1899
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %145, i32 0, i32 1, !dbg !11219
  %146 = load ptr, ptr %im_func, align 8, !dbg !11219, !tbaa !6942
  store ptr %146, ptr %function, align 8, !dbg !11218, !tbaa !1899
  %147 = load ptr, ptr %__pyx_t_10, align 8, !dbg !11220, !tbaa !1899
  call void @Py_INCREF(ptr noundef %147), !dbg !11220
  %148 = load ptr, ptr %function, align 8, !dbg !11221, !tbaa !1899
  call void @Py_INCREF(ptr noundef %148), !dbg !11221
  br label %do.body189, !dbg !11222

do.body189:                                       ; preds = %if.then188
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp190) #11, !dbg !11223
  tail call void @llvm.dbg.declare(metadata ptr %tmp190, metadata !10968, metadata !DIExpression()), !dbg !11223
  %149 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11223, !tbaa !1899
  store ptr %149, ptr %tmp190, align 8, !dbg !11223, !tbaa !1899
  %150 = load ptr, ptr %function, align 8, !dbg !11223, !tbaa !1899
  store ptr %150, ptr %__pyx_t_8, align 8, !dbg !11223, !tbaa !1899
  %151 = load ptr, ptr %tmp190, align 8, !dbg !11223, !tbaa !1899
  call void @Py_DECREF(ptr noundef %151), !dbg !11223
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp190) #11, !dbg !11222
  br label %do.cond191, !dbg !11223

do.cond191:                                       ; preds = %do.body189
  br label %do.end192, !dbg !11223

do.end192:                                        ; preds = %do.cond191
  store i32 1, ptr %__pyx_t_11, align 4, !dbg !11224, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #11, !dbg !11225
  br label %if.end193, !dbg !11226

if.end193:                                        ; preds = %do.end192, %if.then179
  br label %if.end194, !dbg !11227

if.end194:                                        ; preds = %if.end193, %cond.end164
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !11228
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !10970, metadata !DIExpression()), !dbg !11229
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !11230
  %152 = load ptr, ptr %__pyx_t_10, align 8, !dbg !11231, !tbaa !1899
  store ptr %152, ptr %arrayinit.begin, align 8, !dbg !11230, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !11230
  %153 = load ptr, ptr %__pyx_v_old_state_set, align 8, !dbg !11232, !tbaa !1899
  store ptr %153, ptr %arrayinit.element, align 8, !dbg !11230, !tbaa !1899
  %154 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11233, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !11233
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !11233
  %155 = load i32, ptr %__pyx_t_11, align 4, !dbg !11233, !tbaa !1984
  %idx.ext = sext i32 %155 to i64, !dbg !11233
  %idx.neg = sub i64 0, %idx.ext, !dbg !11233
  %add.ptr195 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !11233
  %156 = load i32, ptr %__pyx_t_11, align 4, !dbg !11233, !tbaa !1984
  %add196 = add i32 1, %156, !dbg !11233
  %conv197 = sext i32 %add196 to i64, !dbg !11233
  %call198 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %154, ptr noundef %add.ptr195, i64 noundef %conv197, ptr noundef null), !dbg !11233
  store ptr %call198, ptr %__pyx_t_9, align 8, !dbg !11234, !tbaa !1899
  %157 = load ptr, ptr %__pyx_t_10, align 8, !dbg !11235, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %157), !dbg !11235
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11236, !tbaa !1899
  %158 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11237, !tbaa !1899
  %tobool199 = icmp ne ptr %158, null, !dbg !11237
  %lnot200 = xor i1 %tobool199, true, !dbg !11237
  %lnot202 = xor i1 %lnot200, true, !dbg !11237
  %lnot204 = xor i1 %lnot202, true, !dbg !11237
  %lnot.ext205 = zext i1 %lnot204 to i32, !dbg !11237
  %conv206 = sext i32 %lnot.ext205 to i64, !dbg !11237
  %expval207 = call i64 @llvm.expect.i64(i64 %conv206, i64 0), !dbg !11237
  %tobool208 = icmp ne i64 %expval207, 0, !dbg !11237
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !11239

if.then209:                                       ; preds = %if.end194
  %159 = load ptr, ptr @__pyx_f, align 16, !dbg !11240, !tbaa !1899
  store ptr %159, ptr %__pyx_filename, align 8, !dbg !11240, !tbaa !1899
  %160 = load ptr, ptr %__pyx_filename, align 8, !dbg !11240, !tbaa !1899
  store i32 149, ptr %__pyx_lineno, align 4, !dbg !11240, !tbaa !1984
  %161 = load i32, ptr %__pyx_lineno, align 4, !dbg !11240, !tbaa !1984
  store i32 5237, ptr %__pyx_clineno, align 4, !dbg !11240, !tbaa !1984
  %162 = load i32, ptr %__pyx_clineno, align 4, !dbg !11240, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup211, !dbg !11243

if.end210:                                        ; preds = %if.end194
  %163 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11244, !tbaa !1899
  call void @Py_DECREF(ptr noundef %163), !dbg !11244
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11245, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11246
  br label %cleanup211, !dbg !11246

cleanup211:                                       ; preds = %if.then209, %if.end210
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !11246
  %cleanup.dest212 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest212, label %cleanup308 [
    i32 0, label %cleanup.cont213
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont213:                                  ; preds = %cleanup211
  %164 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11247, !tbaa !1899
  %call214 = call ptr @PyObject_Str(ptr noundef %164), !dbg !11248
  %165 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11249, !tbaa !1899
  %__pyx_empty_unicode215 = getelementptr inbounds %struct.__pyx_mstate, ptr %165, i32 0, i32 5, !dbg !11249
  %166 = load ptr, ptr %__pyx_empty_unicode215, align 8, !dbg !11249, !tbaa !2097
  %call216 = call ptr @__Pyx_PyObject_FormatSimpleAndDecref(ptr noundef %call214, ptr noundef %166), !dbg !11250
  store ptr %call216, ptr %__pyx_t_8, align 8, !dbg !11251, !tbaa !1899
  %167 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11252, !tbaa !1899
  %tobool217 = icmp ne ptr %167, null, !dbg !11252
  %lnot218 = xor i1 %tobool217, true, !dbg !11252
  %lnot220 = xor i1 %lnot218, true, !dbg !11252
  %lnot222 = xor i1 %lnot220, true, !dbg !11252
  %lnot.ext223 = zext i1 %lnot222 to i32, !dbg !11252
  %conv224 = sext i32 %lnot.ext223 to i64, !dbg !11252
  %expval225 = call i64 @llvm.expect.i64(i64 %conv224, i64 0), !dbg !11252
  %tobool226 = icmp ne i64 %expval225, 0, !dbg !11252
  br i1 %tobool226, label %if.then227, label %if.end228, !dbg !11254

if.then227:                                       ; preds = %cleanup.cont213
  %168 = load ptr, ptr @__pyx_f, align 16, !dbg !11255, !tbaa !1899
  store ptr %168, ptr %__pyx_filename, align 8, !dbg !11255, !tbaa !1899
  %169 = load ptr, ptr %__pyx_filename, align 8, !dbg !11255, !tbaa !1899
  store i32 149, ptr %__pyx_lineno, align 4, !dbg !11255, !tbaa !1984
  %170 = load i32, ptr %__pyx_lineno, align 4, !dbg !11255, !tbaa !1984
  store i32 5241, ptr %__pyx_clineno, align 4, !dbg !11255, !tbaa !1984
  %171 = load i32, ptr %__pyx_clineno, align 4, !dbg !11255, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11258

if.end228:                                        ; preds = %cleanup.cont213
  %172 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11259, !tbaa !1899
  call void @Py_DECREF(ptr noundef %172), !dbg !11259
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11260, !tbaa !1899
  %173 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11261, !tbaa !1899
  %call229 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %173), !dbg !11261
  %174 = load i32, ptr %__pyx_t_7, align 4, !dbg !11262, !tbaa !1984
  %cmp230 = icmp ugt i32 %call229, %174, !dbg !11263
  br i1 %cmp230, label %cond.true232, label %cond.false234, !dbg !11264

cond.true232:                                     ; preds = %if.end228
  %175 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11265, !tbaa !1899
  %call233 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %175), !dbg !11265
  br label %cond.end235, !dbg !11264

cond.false234:                                    ; preds = %if.end228
  %176 = load i32, ptr %__pyx_t_7, align 4, !dbg !11266, !tbaa !1984
  br label %cond.end235, !dbg !11264

cond.end235:                                      ; preds = %cond.false234, %cond.true232
  %cond236 = phi i32 [ %call233, %cond.true232 ], [ %176, %cond.false234 ], !dbg !11264
  store i32 %cond236, ptr %__pyx_t_7, align 4, !dbg !11267, !tbaa !1984
  %177 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11268, !tbaa !1899
  %call237 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %177), !dbg !11268
  %178 = load i64, ptr %__pyx_t_6, align 8, !dbg !11269, !tbaa !2597
  %add238 = add i64 %178, %call237, !dbg !11269
  store i64 %add238, ptr %__pyx_t_6, align 8, !dbg !11269, !tbaa !2597
  %179 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11270, !tbaa !1899
  %180 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11270, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %179, i64 noundef 3, ptr noundef %180), !dbg !11270
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11271, !tbaa !1899
  %181 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11272, !tbaa !1899
  %__pyx_kp_u__3 = getelementptr inbounds %struct.__pyx_mstate, ptr %181, i32 0, i32 37, !dbg !11272
  %182 = load ptr, ptr %__pyx_kp_u__3, align 8, !dbg !11272, !tbaa !11273
  call void @Py_INCREF(ptr noundef %182), !dbg !11272
  %183 = load i64, ptr %__pyx_t_6, align 8, !dbg !11274, !tbaa !2597
  %add239 = add i64 %183, 1, !dbg !11274
  store i64 %add239, ptr %__pyx_t_6, align 8, !dbg !11274, !tbaa !2597
  %184 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11275, !tbaa !1899
  %185 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11275, !tbaa !1899
  %__pyx_kp_u__3240 = getelementptr inbounds %struct.__pyx_mstate, ptr %185, i32 0, i32 37, !dbg !11275
  %186 = load ptr, ptr %__pyx_kp_u__3240, align 8, !dbg !11275, !tbaa !11273
  call void @PyTuple_SET_ITEM(ptr noundef %184, i64 noundef 4, ptr noundef %186), !dbg !11275
  %187 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11276, !tbaa !1899
  %188 = load i64, ptr %__pyx_t_6, align 8, !dbg !11277, !tbaa !2597
  %189 = load i32, ptr %__pyx_t_7, align 4, !dbg !11278, !tbaa !1984
  %call241 = call ptr @__Pyx_PyUnicode_Join(ptr noundef %187, i64 noundef 5, i64 noundef %188, i32 noundef %189), !dbg !11279
  store ptr %call241, ptr %__pyx_t_8, align 8, !dbg !11280, !tbaa !1899
  %190 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11281, !tbaa !1899
  %tobool242 = icmp ne ptr %190, null, !dbg !11281
  %lnot243 = xor i1 %tobool242, true, !dbg !11281
  %lnot245 = xor i1 %lnot243, true, !dbg !11281
  %lnot247 = xor i1 %lnot245, true, !dbg !11281
  %lnot.ext248 = zext i1 %lnot247 to i32, !dbg !11281
  %conv249 = sext i32 %lnot.ext248 to i64, !dbg !11281
  %expval250 = call i64 @llvm.expect.i64(i64 %conv249, i64 0), !dbg !11281
  %tobool251 = icmp ne i64 %expval250, 0, !dbg !11281
  br i1 %tobool251, label %if.then252, label %if.end253, !dbg !11283

if.then252:                                       ; preds = %cond.end235
  %191 = load ptr, ptr @__pyx_f, align 16, !dbg !11284, !tbaa !1899
  store ptr %191, ptr %__pyx_filename, align 8, !dbg !11284, !tbaa !1899
  %192 = load ptr, ptr %__pyx_filename, align 8, !dbg !11284, !tbaa !1899
  store i32 148, ptr %__pyx_lineno, align 4, !dbg !11284, !tbaa !1984
  %193 = load i32, ptr %__pyx_lineno, align 4, !dbg !11284, !tbaa !1984
  store i32 5260, ptr %__pyx_clineno, align 4, !dbg !11284, !tbaa !1984
  %194 = load i32, ptr %__pyx_clineno, align 4, !dbg !11284, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11287

if.end253:                                        ; preds = %cond.end235
  %195 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11288, !tbaa !1899
  call void @Py_DECREF(ptr noundef %195), !dbg !11288
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11289, !tbaa !1899
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11290, !tbaa !1899
  store i32 0, ptr %__pyx_t_11, align 4, !dbg !11291, !tbaa !1984
  %196 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11292, !tbaa !1899
  %call254 = call i32 @Py_IS_TYPE(ptr noundef %196, ptr noundef @PyMethod_Type), !dbg !11292
  %tobool255 = icmp ne i32 %call254, 0, !dbg !11292
  %lnot256 = xor i1 %tobool255, true, !dbg !11292
  %lnot258 = xor i1 %lnot256, true, !dbg !11292
  %lnot.ext259 = zext i1 %lnot258 to i32, !dbg !11292
  %conv260 = sext i32 %lnot.ext259 to i64, !dbg !11292
  %expval261 = call i64 @llvm.expect.i64(i64 %conv260, i64 1), !dbg !11292
  %tobool262 = icmp ne i64 %expval261, 0, !dbg !11292
  br i1 %tobool262, label %if.then263, label %if.end281, !dbg !11293

if.then263:                                       ; preds = %if.end253
  %197 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11294, !tbaa !1899
  %im_self264 = getelementptr inbounds %struct.PyMethodObject, ptr %197, i32 0, i32 2, !dbg !11294
  %198 = load ptr, ptr %im_self264, align 8, !dbg !11294, !tbaa !6934
  store ptr %198, ptr %__pyx_t_5, align 8, !dbg !11295, !tbaa !1899
  %199 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11296, !tbaa !1899
  %tobool265 = icmp ne ptr %199, null, !dbg !11296
  %lnot266 = xor i1 %tobool265, true, !dbg !11296
  %lnot268 = xor i1 %lnot266, true, !dbg !11296
  %lnot.ext269 = zext i1 %lnot268 to i32, !dbg !11296
  %conv270 = sext i32 %lnot.ext269 to i64, !dbg !11296
  %expval271 = call i64 @llvm.expect.i64(i64 %conv270, i64 1), !dbg !11296
  %tobool272 = icmp ne i64 %expval271, 0, !dbg !11296
  br i1 %tobool272, label %if.then273, label %if.end280, !dbg !11297

if.then273:                                       ; preds = %if.then263
  call void @llvm.lifetime.start.p0(i64 8, ptr %function274) #11, !dbg !11298
  tail call void @llvm.dbg.declare(metadata ptr %function274, metadata !10972, metadata !DIExpression()), !dbg !11299
  %200 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11300, !tbaa !1899
  %im_func275 = getelementptr inbounds %struct.PyMethodObject, ptr %200, i32 0, i32 1, !dbg !11300
  %201 = load ptr, ptr %im_func275, align 8, !dbg !11300, !tbaa !6942
  store ptr %201, ptr %function274, align 8, !dbg !11299, !tbaa !1899
  %202 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11301, !tbaa !1899
  call void @Py_INCREF(ptr noundef %202), !dbg !11301
  %203 = load ptr, ptr %function274, align 8, !dbg !11302, !tbaa !1899
  call void @Py_INCREF(ptr noundef %203), !dbg !11302
  br label %do.body276, !dbg !11303

do.body276:                                       ; preds = %if.then273
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp277) #11, !dbg !11304
  tail call void @llvm.dbg.declare(metadata ptr %tmp277, metadata !10977, metadata !DIExpression()), !dbg !11304
  %204 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11304, !tbaa !1899
  store ptr %204, ptr %tmp277, align 8, !dbg !11304, !tbaa !1899
  %205 = load ptr, ptr %function274, align 8, !dbg !11304, !tbaa !1899
  store ptr %205, ptr %__pyx_t_1, align 8, !dbg !11304, !tbaa !1899
  %206 = load ptr, ptr %tmp277, align 8, !dbg !11304, !tbaa !1899
  call void @Py_DECREF(ptr noundef %206), !dbg !11304
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp277) #11, !dbg !11303
  br label %do.cond278, !dbg !11304

do.cond278:                                       ; preds = %do.body276
  br label %do.end279, !dbg !11304

do.end279:                                        ; preds = %do.cond278
  store i32 1, ptr %__pyx_t_11, align 4, !dbg !11305, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function274) #11, !dbg !11306
  br label %if.end280, !dbg !11307

if.end280:                                        ; preds = %do.end279, %if.then263
  br label %if.end281, !dbg !11308

if.end281:                                        ; preds = %if.end280, %if.end253
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs282) #11, !dbg !11309
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs282, metadata !10979, metadata !DIExpression()), !dbg !11310
  %arrayinit.begin283 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs282, i64 0, i64 0, !dbg !11311
  %207 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11312, !tbaa !1899
  store ptr %207, ptr %arrayinit.begin283, align 8, !dbg !11311, !tbaa !1899
  %arrayinit.element284 = getelementptr inbounds ptr, ptr %arrayinit.begin283, i64 1, !dbg !11311
  %208 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11313, !tbaa !1899
  store ptr %208, ptr %arrayinit.element284, align 8, !dbg !11311, !tbaa !1899
  %209 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11314, !tbaa !1899
  %arraydecay285 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs282, i64 0, i64 0, !dbg !11314
  %add.ptr286 = getelementptr ptr, ptr %arraydecay285, i64 1, !dbg !11314
  %210 = load i32, ptr %__pyx_t_11, align 4, !dbg !11314, !tbaa !1984
  %idx.ext287 = sext i32 %210 to i64, !dbg !11314
  %idx.neg288 = sub i64 0, %idx.ext287, !dbg !11314
  %add.ptr289 = getelementptr ptr, ptr %add.ptr286, i64 %idx.neg288, !dbg !11314
  %211 = load i32, ptr %__pyx_t_11, align 4, !dbg !11314, !tbaa !1984
  %add290 = add i32 1, %211, !dbg !11314
  %conv291 = sext i32 %add290 to i64, !dbg !11314
  %call292 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %209, ptr noundef %add.ptr289, i64 noundef %conv291, ptr noundef null), !dbg !11314
  store ptr %call292, ptr %__pyx_t_4, align 8, !dbg !11315, !tbaa !1899
  %212 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11316, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %212), !dbg !11316
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11317, !tbaa !1899
  %213 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11318, !tbaa !1899
  call void @Py_DECREF(ptr noundef %213), !dbg !11318
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11319, !tbaa !1899
  %214 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11320, !tbaa !1899
  %tobool293 = icmp ne ptr %214, null, !dbg !11320
  %lnot294 = xor i1 %tobool293, true, !dbg !11320
  %lnot296 = xor i1 %lnot294, true, !dbg !11320
  %lnot298 = xor i1 %lnot296, true, !dbg !11320
  %lnot.ext299 = zext i1 %lnot298 to i32, !dbg !11320
  %conv300 = sext i32 %lnot.ext299 to i64, !dbg !11320
  %expval301 = call i64 @llvm.expect.i64(i64 %conv300, i64 0), !dbg !11320
  %tobool302 = icmp ne i64 %expval301, 0, !dbg !11320
  br i1 %tobool302, label %if.then303, label %if.end304, !dbg !11322

if.then303:                                       ; preds = %if.end281
  %215 = load ptr, ptr @__pyx_f, align 16, !dbg !11323, !tbaa !1899
  store ptr %215, ptr %__pyx_filename, align 8, !dbg !11323, !tbaa !1899
  %216 = load ptr, ptr %__pyx_filename, align 8, !dbg !11323, !tbaa !1899
  store i32 148, ptr %__pyx_lineno, align 4, !dbg !11323, !tbaa !1984
  %217 = load i32, ptr %__pyx_lineno, align 4, !dbg !11323, !tbaa !1984
  store i32 5282, ptr %__pyx_clineno, align 4, !dbg !11323, !tbaa !1984
  %218 = load i32, ptr %__pyx_clineno, align 4, !dbg !11323, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup305, !dbg !11326

if.end304:                                        ; preds = %if.end281
  %219 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11327, !tbaa !1899
  call void @Py_DECREF(ptr noundef %219), !dbg !11327
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11328, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11329
  br label %cleanup305, !dbg !11329

cleanup305:                                       ; preds = %if.then303, %if.end304
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs282) #11, !dbg !11329
  %cleanup.dest306 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest306, label %cleanup308 [
    i32 0, label %cleanup.cont307
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont307:                                  ; preds = %cleanup305
  %220 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11330, !tbaa !1899
  call void @Py_DECREF(ptr noundef %220), !dbg !11330
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11331, !tbaa !1899
  br label %for.cond, !dbg !11332, !llvm.loop !11333

for.end:                                          ; preds = %cleanup
  %221 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11336, !tbaa !1899
  call void @Py_DECREF(ptr noundef %221), !dbg !11336
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11337, !tbaa !1899
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !11338, !tbaa !1899
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !11339
  br label %__pyx_L0, !dbg !11340

__pyx_L1_error:                                   ; preds = %cleanup305, %cleanup211, %if.then252, %if.then227, %if.then156, %if.then142, %if.then117, %if.then104, %if.then87, %if.then73, %if.then60, %if.then42, %if.then32, %if.then18, %if.then5, %if.then
  tail call void @llvm.dbg.label(metadata !10981), !dbg !11341
  %222 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11342, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %222), !dbg !11342
  %223 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11343, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %223), !dbg !11343
  %224 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11344, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %224), !dbg !11344
  %225 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11345, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %225), !dbg !11345
  %226 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11346, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %226), !dbg !11346
  %227 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11347, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %227), !dbg !11347
  %228 = load ptr, ptr %__pyx_t_10, align 8, !dbg !11348, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %228), !dbg !11348
  %229 = load i32, ptr %__pyx_clineno, align 4, !dbg !11349, !tbaa !1984
  %230 = load i32, ptr %__pyx_lineno, align 4, !dbg !11350, !tbaa !1984
  %231 = load ptr, ptr %__pyx_filename, align 8, !dbg !11351, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.106, i32 noundef %229, i32 noundef %230, ptr noundef %231), !dbg !11352
  store ptr null, ptr %__pyx_r, align 8, !dbg !11353, !tbaa !1899
  br label %__pyx_L0, !dbg !11354

__pyx_L0:                                         ; preds = %__pyx_L1_error, %for.end
  tail call void @llvm.dbg.label(metadata !10982), !dbg !11355
  %232 = load ptr, ptr %__pyx_v_state_set_str, align 8, !dbg !11356, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %232), !dbg !11356
  %233 = load ptr, ptr %__pyx_v_new_state, align 8, !dbg !11357, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %233), !dbg !11357
  %234 = load ptr, ptr %__pyx_v_old_state_set, align 8, !dbg !11358, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %234), !dbg !11358
  %235 = load ptr, ptr %__pyx_r, align 8, !dbg !11359, !tbaa !1899
  store ptr %235, ptr %retval, align 8, !dbg !11360
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup308, !dbg !11360

cleanup308:                                       ; preds = %__pyx_L0, %cleanup305, %cleanup211
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_old_state_set) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_new_state) #11, !dbg !11361
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state_set_str) #11, !dbg !11361
  %236 = load ptr, ptr %retval, align 8, !dbg !11361
  ret ptr %236, !dbg !11361

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !11362 ptr @PyObject_GetItem(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_FormatSimpleAndDecref(ptr noundef %s, ptr noundef %f) #3 !dbg !11363 {
entry:
  %retval = alloca ptr, align 8
  %s.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  store ptr %s, ptr %s.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !11365, metadata !DIExpression()), !dbg !11367
  store ptr %f, ptr %f.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !11366, metadata !DIExpression()), !dbg !11368
  %0 = load ptr, ptr %s.addr, align 8, !dbg !11369, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !11369
  %lnot = xor i1 %tobool, true, !dbg !11369
  %lnot1 = xor i1 %lnot, true, !dbg !11369
  %lnot2 = xor i1 %lnot1, true, !dbg !11369
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11369
  %conv = sext i32 %lnot.ext to i64, !dbg !11369
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11369
  %tobool3 = icmp ne i64 %expval, 0, !dbg !11369
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11371

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !11372
  br label %return, !dbg !11372

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %s.addr, align 8, !dbg !11373, !tbaa !1899
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyUnicode_Type), !dbg !11373
  %tobool4 = icmp ne i32 %call, 0, !dbg !11373
  %lnot5 = xor i1 %tobool4, true, !dbg !11373
  %lnot7 = xor i1 %lnot5, true, !dbg !11373
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11373
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !11373
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !11373
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !11373
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !11375

if.then12:                                        ; preds = %if.end
  %2 = load ptr, ptr %s.addr, align 8, !dbg !11376, !tbaa !1899
  store ptr %2, ptr %retval, align 8, !dbg !11377
  br label %return, !dbg !11377

if.end13:                                         ; preds = %if.end
  %3 = load ptr, ptr %s.addr, align 8, !dbg !11378, !tbaa !1899
  %4 = load ptr, ptr %f.addr, align 8, !dbg !11379, !tbaa !1899
  %call14 = call ptr @__Pyx_PyObject_FormatAndDecref(ptr noundef %3, ptr noundef %4), !dbg !11380
  store ptr %call14, ptr %retval, align 8, !dbg !11381
  br label %return, !dbg !11381

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %5 = load ptr, ptr %retval, align 8, !dbg !11382
  ret ptr %5, !dbg !11382
}

declare !dbg !11383 ptr @PyObject_Str(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %op) #3 !dbg !11384 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %kind = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11388, metadata !DIExpression()), !dbg !11390
  call void @llvm.lifetime.start.p0(i64 4, ptr %kind) #11, !dbg !11391
  tail call void @llvm.dbg.declare(metadata ptr %kind, metadata !11389, metadata !DIExpression()), !dbg !11392
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11393, !tbaa !1899
  %call = call i32 @PyUnicode_IS_ASCII(ptr noundef %0), !dbg !11393
  %tobool = icmp ne i32 %call, 0, !dbg !11393
  br i1 %tobool, label %if.then, label %if.end, !dbg !11395

if.then:                                          ; preds = %entry
  store i32 127, ptr %retval, align 4, !dbg !11396
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11396

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !11398, !tbaa !1899
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %1, i32 0, i32 3, !dbg !11398
  %bf.load = load i32, ptr %state, align 8, !dbg !11398
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !11398
  %bf.clear = and i32 %bf.lshr, 7, !dbg !11398
  store i32 %bf.clear, ptr %kind, align 4, !dbg !11399, !tbaa !1984
  %2 = load i32, ptr %kind, align 4, !dbg !11400, !tbaa !1984
  %cmp = icmp eq i32 %2, 1, !dbg !11402
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11403

if.then1:                                         ; preds = %if.end
  store i32 255, ptr %retval, align 4, !dbg !11404
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11404

if.end2:                                          ; preds = %if.end
  %3 = load i32, ptr %kind, align 4, !dbg !11406, !tbaa !1984
  %cmp3 = icmp eq i32 %3, 2, !dbg !11408
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !11409

if.then4:                                         ; preds = %if.end2
  store i32 65535, ptr %retval, align 4, !dbg !11410
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11410

if.end5:                                          ; preds = %if.end2
  store i32 1114111, ptr %retval, align 4, !dbg !11412
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11412

cleanup:                                          ; preds = %if.end5, %if.then4, %if.then1, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %kind) #11, !dbg !11413
  %4 = load i32, ptr %retval, align 4, !dbg !11413
  ret i32 %4, !dbg !11413
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyUnicode_GET_LENGTH(ptr noundef %op) #3 !dbg !11414 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11416, metadata !DIExpression()), !dbg !11417
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11418, !tbaa !1899
  %length = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 1, !dbg !11419
  %1 = load i64, ptr %length, align 8, !dbg !11419, !tbaa !11420
  ret i64 %1, !dbg !11421
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyUnicode_Join(ptr noundef %value_tuple, i64 noundef %value_count, i64 noundef %result_ulength, i32 noundef %max_char) #0 !dbg !11422 {
entry:
  %retval = alloca ptr, align 8
  %value_tuple.addr = alloca ptr, align 8
  %value_count.addr = alloca i64, align 8
  %result_ulength.addr = alloca i64, align 8
  %max_char.addr = alloca i32, align 4
  %result_uval = alloca ptr, align 8
  %result_ukind = alloca i32, align 4
  %kind_shift = alloca i32, align 4
  %i = alloca i64, align 8
  %char_pos = alloca i64, align 8
  %result_udata = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %ukind = alloca i32, align 4
  %ulength = alloca i64, align 8
  %udata = alloca ptr, align 8
  %uval = alloca ptr, align 8
  store ptr %value_tuple, ptr %value_tuple.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value_tuple.addr, metadata !11426, metadata !DIExpression()), !dbg !11445
  store i64 %value_count, ptr %value_count.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %value_count.addr, metadata !11427, metadata !DIExpression()), !dbg !11446
  store i64 %result_ulength, ptr %result_ulength.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %result_ulength.addr, metadata !11428, metadata !DIExpression()), !dbg !11447
  store i32 %max_char, ptr %max_char.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %max_char.addr, metadata !11429, metadata !DIExpression()), !dbg !11448
  call void @llvm.lifetime.start.p0(i64 8, ptr %result_uval) #11, !dbg !11449
  tail call void @llvm.dbg.declare(metadata ptr %result_uval, metadata !11430, metadata !DIExpression()), !dbg !11450
  call void @llvm.lifetime.start.p0(i64 4, ptr %result_ukind) #11, !dbg !11451
  tail call void @llvm.dbg.declare(metadata ptr %result_ukind, metadata !11431, metadata !DIExpression()), !dbg !11452
  call void @llvm.lifetime.start.p0(i64 4, ptr %kind_shift) #11, !dbg !11451
  tail call void @llvm.dbg.declare(metadata ptr %kind_shift, metadata !11432, metadata !DIExpression()), !dbg !11453
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !11454
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !11433, metadata !DIExpression()), !dbg !11455
  call void @llvm.lifetime.start.p0(i64 8, ptr %char_pos) #11, !dbg !11454
  tail call void @llvm.dbg.declare(metadata ptr %char_pos, metadata !11434, metadata !DIExpression()), !dbg !11456
  call void @llvm.lifetime.start.p0(i64 8, ptr %result_udata) #11, !dbg !11457
  tail call void @llvm.dbg.declare(metadata ptr %result_udata, metadata !11435, metadata !DIExpression()), !dbg !11458
  %0 = load i32, ptr %max_char.addr, align 4, !dbg !11459, !tbaa !1984
  %1 = load i64, ptr %result_ulength.addr, align 8, !dbg !11460, !tbaa !2597
  %2 = load i32, ptr %max_char.addr, align 4, !dbg !11461, !tbaa !1984
  %call = call ptr @PyUnicode_New(i64 noundef %1, i32 noundef %2), !dbg !11462
  store ptr %call, ptr %result_uval, align 8, !dbg !11463, !tbaa !1899
  %3 = load ptr, ptr %result_uval, align 8, !dbg !11464, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !11464
  %lnot = xor i1 %tobool, true, !dbg !11464
  %lnot1 = xor i1 %lnot, true, !dbg !11464
  %lnot2 = xor i1 %lnot1, true, !dbg !11464
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11464
  %conv = sext i32 %lnot.ext to i64, !dbg !11464
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11464
  %tobool3 = icmp ne i64 %expval, 0, !dbg !11464
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11466

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !11467
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !11467

if.end:                                           ; preds = %entry
  %4 = load i32, ptr %max_char.addr, align 4, !dbg !11468, !tbaa !1984
  %cmp = icmp ule i32 %4, 255, !dbg !11469
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11470

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !11470

cond.false:                                       ; preds = %if.end
  %5 = load i32, ptr %max_char.addr, align 4, !dbg !11471, !tbaa !1984
  %cmp5 = icmp ule i32 %5, 65535, !dbg !11472
  %6 = zext i1 %cmp5 to i64, !dbg !11473
  %cond = select i1 %cmp5, i32 2, i32 4, !dbg !11473
  br label %cond.end, !dbg !11470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond7 = phi i32 [ 1, %cond.true ], [ %cond, %cond.false ], !dbg !11470
  store i32 %cond7, ptr %result_ukind, align 4, !dbg !11474, !tbaa !1984
  %7 = load i32, ptr %result_ukind, align 4, !dbg !11475, !tbaa !1984
  %cmp8 = icmp eq i32 %7, 4, !dbg !11476
  br i1 %cmp8, label %cond.true10, label %cond.false11, !dbg !11477

cond.true10:                                      ; preds = %cond.end
  br label %cond.end12, !dbg !11477

cond.false11:                                     ; preds = %cond.end
  %8 = load i32, ptr %result_ukind, align 4, !dbg !11478, !tbaa !1984
  %sub = sub i32 %8, 1, !dbg !11479
  br label %cond.end12, !dbg !11477

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ 2, %cond.true10 ], [ %sub, %cond.false11 ], !dbg !11477
  store i32 %cond13, ptr %kind_shift, align 4, !dbg !11480, !tbaa !1984
  %9 = load ptr, ptr %result_uval, align 8, !dbg !11481, !tbaa !1899
  %call14 = call ptr @PyUnicode_DATA(ptr noundef %9), !dbg !11481
  store ptr %call14, ptr %result_udata, align 8, !dbg !11482, !tbaa !1899
  store i64 0, ptr %char_pos, align 8, !dbg !11483, !tbaa !2597
  store i64 0, ptr %i, align 8, !dbg !11484, !tbaa !2597
  br label %for.cond, !dbg !11485

for.cond:                                         ; preds = %for.inc, %cond.end12
  %10 = load i64, ptr %i, align 8, !dbg !11486, !tbaa !2597
  %11 = load i64, ptr %value_count.addr, align 8, !dbg !11487, !tbaa !2597
  %cmp15 = icmp slt i64 %10, %11, !dbg !11488
  br i1 %cmp15, label %for.body, label %for.end, !dbg !11489

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %ukind) #11, !dbg !11490
  tail call void @llvm.dbg.declare(metadata ptr %ukind, metadata !11436, metadata !DIExpression()), !dbg !11491
  call void @llvm.lifetime.start.p0(i64 8, ptr %ulength) #11, !dbg !11492
  tail call void @llvm.dbg.declare(metadata ptr %ulength, metadata !11440, metadata !DIExpression()), !dbg !11493
  call void @llvm.lifetime.start.p0(i64 8, ptr %udata) #11, !dbg !11494
  tail call void @llvm.dbg.declare(metadata ptr %udata, metadata !11441, metadata !DIExpression()), !dbg !11495
  call void @llvm.lifetime.start.p0(i64 8, ptr %uval) #11, !dbg !11496
  tail call void @llvm.dbg.declare(metadata ptr %uval, metadata !11442, metadata !DIExpression()), !dbg !11497
  %12 = load ptr, ptr %value_tuple.addr, align 8, !dbg !11498, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %12, i32 0, i32 1, !dbg !11498
  %13 = load i64, ptr %i, align 8, !dbg !11498, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %13, !dbg !11498
  %14 = load ptr, ptr %arrayidx, align 8, !dbg !11498, !tbaa !1899
  store ptr %14, ptr %uval, align 8, !dbg !11497, !tbaa !1899
  %15 = load ptr, ptr %uval, align 8, !dbg !11499, !tbaa !1899
  %call17 = call i32 @PyUnicode_IS_READY(ptr noundef %15), !dbg !11499
  %tobool18 = icmp ne i32 %call17, 0, !dbg !11499
  %lnot19 = xor i1 %tobool18, true, !dbg !11499
  %lnot21 = xor i1 %lnot19, true, !dbg !11499
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11499
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !11499
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !11499
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !11499
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11499

cond.true26:                                      ; preds = %for.body
  br label %cond.end29, !dbg !11499

cond.false27:                                     ; preds = %for.body
  %16 = load ptr, ptr %uval, align 8, !dbg !11499, !tbaa !1899
  %call28 = call i32 @_PyUnicode_Ready(ptr noundef %16), !dbg !11499
  br label %cond.end29, !dbg !11499

cond.end29:                                       ; preds = %cond.false27, %cond.true26
  %cond30 = phi i32 [ 0, %cond.true26 ], [ %call28, %cond.false27 ], !dbg !11499
  %tobool31 = icmp ne i32 %cond30, 0, !dbg !11499
  %lnot32 = xor i1 %tobool31, true, !dbg !11499
  %lnot34 = xor i1 %lnot32, true, !dbg !11499
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !11499
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !11499
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0), !dbg !11499
  %tobool38 = icmp ne i64 %expval37, 0, !dbg !11499
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !11501

if.then39:                                        ; preds = %cond.end29
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11502

if.end40:                                         ; preds = %cond.end29
  %17 = load ptr, ptr %uval, align 8, !dbg !11503, !tbaa !1899
  %call41 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %17), !dbg !11503
  store i64 %call41, ptr %ulength, align 8, !dbg !11504, !tbaa !2597
  %18 = load i64, ptr %ulength, align 8, !dbg !11505, !tbaa !2597
  %tobool42 = icmp ne i64 %18, 0, !dbg !11505
  %lnot43 = xor i1 %tobool42, true, !dbg !11505
  %lnot45 = xor i1 %lnot43, true, !dbg !11505
  %lnot47 = xor i1 %lnot45, true, !dbg !11505
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !11505
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !11505
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0), !dbg !11505
  %tobool51 = icmp ne i64 %expval50, 0, !dbg !11505
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !11507

if.then52:                                        ; preds = %if.end40
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11508

if.end53:                                         ; preds = %if.end40
  %19 = load i32, ptr %kind_shift, align 4, !dbg !11509, !tbaa !1984
  %sh_prom = zext i32 %19 to i64, !dbg !11509
  %shr = ashr i64 9223372036854775807, %sh_prom, !dbg !11509
  %20 = load i64, ptr %ulength, align 8, !dbg !11509, !tbaa !2597
  %sub54 = sub i64 %shr, %20, !dbg !11509
  %21 = load i64, ptr %char_pos, align 8, !dbg !11509, !tbaa !2597
  %cmp55 = icmp slt i64 %sub54, %21, !dbg !11509
  %lnot57 = xor i1 %cmp55, true, !dbg !11509
  %lnot59 = xor i1 %lnot57, true, !dbg !11509
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !11509
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !11509
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 0), !dbg !11509
  %tobool63 = icmp ne i64 %expval62, 0, !dbg !11509
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !11511

if.then64:                                        ; preds = %if.end53
  store i32 6, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11512

if.end65:                                         ; preds = %if.end53
  %22 = load ptr, ptr %uval, align 8, !dbg !11513, !tbaa !1899
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %22, i32 0, i32 3, !dbg !11513
  %bf.load = load i32, ptr %state, align 8, !dbg !11513
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !11513
  %bf.clear = and i32 %bf.lshr, 7, !dbg !11513
  store i32 %bf.clear, ptr %ukind, align 4, !dbg !11514, !tbaa !1984
  %23 = load ptr, ptr %uval, align 8, !dbg !11515, !tbaa !1899
  %call66 = call ptr @PyUnicode_DATA(ptr noundef %23), !dbg !11515
  store ptr %call66, ptr %udata, align 8, !dbg !11516, !tbaa !1899
  %24 = load i32, ptr %ukind, align 4, !dbg !11517, !tbaa !1984
  %25 = load i32, ptr %result_ukind, align 4, !dbg !11519, !tbaa !1984
  %cmp67 = icmp eq i32 %24, %25, !dbg !11520
  br i1 %cmp67, label %if.then69, label %if.else, !dbg !11521

if.then69:                                        ; preds = %if.end65
  %26 = load ptr, ptr %result_udata, align 8, !dbg !11522, !tbaa !1899
  %27 = load i64, ptr %char_pos, align 8, !dbg !11524, !tbaa !2597
  %28 = load i32, ptr %kind_shift, align 4, !dbg !11525, !tbaa !1984
  %sh_prom70 = zext i32 %28 to i64, !dbg !11526
  %shl = shl i64 %27, %sh_prom70, !dbg !11526
  %add.ptr = getelementptr i8, ptr %26, i64 %shl, !dbg !11527
  %29 = load ptr, ptr %udata, align 8, !dbg !11528, !tbaa !1899
  %30 = load i64, ptr %ulength, align 8, !dbg !11529, !tbaa !2597
  %31 = load i32, ptr %kind_shift, align 4, !dbg !11530, !tbaa !1984
  %sh_prom71 = zext i32 %31 to i64, !dbg !11531
  %shl72 = shl i64 %30, %sh_prom71, !dbg !11531
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr, ptr align 1 %29, i64 %shl72, i1 false), !dbg !11532
  br label %if.end73, !dbg !11533

if.else:                                          ; preds = %if.end65
  %32 = load ptr, ptr %result_uval, align 8, !dbg !11534, !tbaa !1899
  %33 = load i64, ptr %char_pos, align 8, !dbg !11536, !tbaa !2597
  %34 = load ptr, ptr %uval, align 8, !dbg !11537, !tbaa !1899
  %35 = load i64, ptr %ulength, align 8, !dbg !11538, !tbaa !2597
  call void @_PyUnicode_FastCopyCharacters(ptr noundef %32, i64 noundef %33, ptr noundef %34, i64 noundef 0, i64 noundef %35), !dbg !11539
  br label %if.end73

if.end73:                                         ; preds = %if.else, %if.then69
  %36 = load i64, ptr %ulength, align 8, !dbg !11540, !tbaa !2597
  %37 = load i64, ptr %char_pos, align 8, !dbg !11541, !tbaa !2597
  %add = add i64 %37, %36, !dbg !11541
  store i64 %add, ptr %char_pos, align 8, !dbg !11541, !tbaa !2597
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11542
  br label %cleanup, !dbg !11542

cleanup:                                          ; preds = %if.then64, %if.then39, %if.end73, %if.then52
  call void @llvm.lifetime.end.p0(i64 8, ptr %uval) #11, !dbg !11542
  call void @llvm.lifetime.end.p0(i64 8, ptr %udata) #11, !dbg !11542
  call void @llvm.lifetime.end.p0(i64 8, ptr %ulength) #11, !dbg !11542
  call void @llvm.lifetime.end.p0(i64 4, ptr %ukind) #11, !dbg !11542
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup77 [
    i32 0, label %cleanup.cont
    i32 4, label %for.inc
    i32 6, label %overflow
    i32 5, label %bad
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !11543

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %38 = load i64, ptr %i, align 8, !dbg !11544, !tbaa !2597
  %inc = add i64 %38, 1, !dbg !11544
  store i64 %inc, ptr %i, align 8, !dbg !11544, !tbaa !2597
  br label %for.cond, !dbg !11545, !llvm.loop !11546

for.end:                                          ; preds = %for.cond
  %39 = load ptr, ptr %result_uval, align 8, !dbg !11548, !tbaa !1899
  store ptr %39, ptr %retval, align 8, !dbg !11549
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !11549

overflow:                                         ; preds = %cleanup
  tail call void @llvm.dbg.label(metadata !11443), !dbg !11550
  %40 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !11551, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %40, ptr noundef @.str.107), !dbg !11552
  br label %bad, !dbg !11552

bad:                                              ; preds = %overflow, %cleanup
  tail call void @llvm.dbg.label(metadata !11444), !dbg !11553
  %41 = load ptr, ptr %result_uval, align 8, !dbg !11554, !tbaa !1899
  call void @Py_DECREF(ptr noundef %41), !dbg !11554
  store ptr null, ptr %retval, align 8, !dbg !11555
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !11555

cleanup77:                                        ; preds = %bad, %for.end, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result_udata) #11, !dbg !11556
  call void @llvm.lifetime.end.p0(i64 8, ptr %char_pos) #11, !dbg !11556
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !11556
  call void @llvm.lifetime.end.p0(i64 4, ptr %kind_shift) #11, !dbg !11556
  call void @llvm.lifetime.end.p0(i64 4, ptr %result_ukind) #11, !dbg !11556
  call void @llvm.lifetime.end.p0(i64 8, ptr %result_uval) #11, !dbg !11556
  %42 = load ptr, ptr %retval, align 8, !dbg !11556
  ret ptr %42, !dbg !11556
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_FormatAndDecref(ptr noundef %s, ptr noundef %f) #3 !dbg !11557 {
entry:
  %s.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %s, ptr %s.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !11559, metadata !DIExpression()), !dbg !11562
  store ptr %f, ptr %f.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !11560, metadata !DIExpression()), !dbg !11563
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !11564
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !11561, metadata !DIExpression()), !dbg !11565
  %0 = load ptr, ptr %s.addr, align 8, !dbg !11566, !tbaa !1899
  %1 = load ptr, ptr %f.addr, align 8, !dbg !11567, !tbaa !1899
  %call = call ptr @PyObject_Format(ptr noundef %0, ptr noundef %1), !dbg !11568
  store ptr %call, ptr %result, align 8, !dbg !11565, !tbaa !1899
  %2 = load ptr, ptr %s.addr, align 8, !dbg !11569, !tbaa !1899
  call void @Py_DECREF(ptr noundef %2), !dbg !11569
  %3 = load ptr, ptr %result, align 8, !dbg !11570, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !11571
  ret ptr %3, !dbg !11572
}

declare !dbg !11573 ptr @PyObject_Format(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_ASCII(ptr noundef %op) #3 !dbg !11574 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11578, metadata !DIExpression()), !dbg !11579
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11580, !tbaa !1899
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3, !dbg !11581
  %bf.load = load i32, ptr %state, align 8, !dbg !11582
  %bf.lshr = lshr i32 %bf.load, 6, !dbg !11582
  %bf.clear = and i32 %bf.lshr, 1, !dbg !11582
  ret i32 %bf.clear, !dbg !11583
}

declare !dbg !11584 ptr @PyUnicode_New(i64 noundef, i32 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @PyUnicode_DATA(ptr noundef %op) #3 !dbg !11587 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11591, metadata !DIExpression()), !dbg !11592
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11593, !tbaa !1899
  %call = call i32 @PyUnicode_IS_COMPACT(ptr noundef %0), !dbg !11593
  %tobool = icmp ne i32 %call, 0, !dbg !11593
  br i1 %tobool, label %if.then, label %if.end, !dbg !11595

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !11596, !tbaa !1899
  %call1 = call ptr @_PyUnicode_COMPACT_DATA(ptr noundef %1), !dbg !11598
  store ptr %call1, ptr %retval, align 8, !dbg !11599
  br label %return, !dbg !11599

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !11600, !tbaa !1899
  %call2 = call ptr @_PyUnicode_NONCOMPACT_DATA(ptr noundef %2), !dbg !11601
  store ptr %call2, ptr %retval, align 8, !dbg !11602
  br label %return, !dbg !11602

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8, !dbg !11603
  ret ptr %3, !dbg !11603
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_READY(ptr noundef %op) #3 !dbg !11604 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11608, !tbaa !1899
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3, !dbg !11609
  %bf.load = load i32, ptr %state, align 8, !dbg !11610
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !11610
  %bf.clear = and i32 %bf.lshr, 1, !dbg !11610
  ret i32 %bf.clear, !dbg !11611
}

declare !dbg !11612 i32 @_PyUnicode_Ready(ptr noundef) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #7

declare !dbg !11613 void @_PyUnicode_FastCopyCharacters(ptr noundef, i64 noundef, ptr noundef, i64 noundef, i64 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_COMPACT(ptr noundef %op) #3 !dbg !11616 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11618, metadata !DIExpression()), !dbg !11619
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11620, !tbaa !1899
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3, !dbg !11621
  %bf.load = load i32, ptr %state, align 8, !dbg !11622
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !11622
  %bf.clear = and i32 %bf.lshr, 1, !dbg !11622
  ret i32 %bf.clear, !dbg !11623
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @_PyUnicode_COMPACT_DATA(ptr noundef %op) #3 !dbg !11624 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11626, metadata !DIExpression()), !dbg !11627
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11628, !tbaa !1899
  %call = call i32 @PyUnicode_IS_ASCII(ptr noundef %0), !dbg !11628
  %tobool = icmp ne i32 %call, 0, !dbg !11628
  br i1 %tobool, label %if.then, label %if.end, !dbg !11630

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !11631, !tbaa !1899
  %add.ptr = getelementptr %struct.PyASCIIObject, ptr %1, i64 1, !dbg !11631
  store ptr %add.ptr, ptr %retval, align 8, !dbg !11633
  br label %return, !dbg !11633

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !11634, !tbaa !1899
  %add.ptr1 = getelementptr %struct.PyCompactUnicodeObject, ptr %2, i64 1, !dbg !11634
  store ptr %add.ptr1, ptr %retval, align 8, !dbg !11635
  br label %return, !dbg !11635

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8, !dbg !11636
  ret ptr %3, !dbg !11636
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @_PyUnicode_NONCOMPACT_DATA(ptr noundef %op) #3 !dbg !11637 {
entry:
  %op.addr = alloca ptr, align 8
  %data = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !11639, metadata !DIExpression()), !dbg !11641
  call void @llvm.lifetime.start.p0(i64 8, ptr %data) #11, !dbg !11642
  tail call void @llvm.dbg.declare(metadata ptr %data, metadata !11640, metadata !DIExpression()), !dbg !11643
  %0 = load ptr, ptr %op.addr, align 8, !dbg !11644, !tbaa !1899
  %data1 = getelementptr inbounds %struct.PyUnicodeObject, ptr %0, i32 0, i32 1, !dbg !11645
  %1 = load ptr, ptr %data1, align 8, !dbg !11646, !tbaa !6562
  store ptr %1, ptr %data, align 8, !dbg !11647, !tbaa !1899
  %2 = load ptr, ptr %data, align 8, !dbg !11648, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 8, ptr %data) #11, !dbg !11649
  ret ptr %2, !dbg !11650
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__(ptr noundef %__pyx_v_self) #0 !dbg !1463 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_state = alloca ptr, align 8
  %__pyx_v__dict = alloca ptr, align 8
  %__pyx_v_use_setstate = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !1467, metadata !DIExpression()), !dbg !11651
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state) #11, !dbg !11652
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state, metadata !1468, metadata !DIExpression()), !dbg !11653
  store ptr null, ptr %__pyx_v_state, align 8, !dbg !11653, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v__dict) #11, !dbg !11654
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v__dict, metadata !1469, metadata !DIExpression()), !dbg !11655
  store ptr null, ptr %__pyx_v__dict, align 8, !dbg !11655, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_use_setstate) #11, !dbg !11656
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_use_setstate, metadata !1470, metadata !DIExpression()), !dbg !11657
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !11658
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !1471, metadata !DIExpression()), !dbg !11659
  store ptr null, ptr %__pyx_r, align 8, !dbg !11659, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !11660
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !1472, metadata !DIExpression()), !dbg !11661
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11661, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !11662
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !1473, metadata !DIExpression()), !dbg !11663
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !11664
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !1474, metadata !DIExpression()), !dbg !11665
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11665, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !11666
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !1475, metadata !DIExpression()), !dbg !11667
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !11668
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !1476, metadata !DIExpression()), !dbg !11669
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11669, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !11670
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1477, metadata !DIExpression()), !dbg !11671
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !11671, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !11672
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1478, metadata !DIExpression()), !dbg !11673
  store ptr null, ptr %__pyx_filename, align 8, !dbg !11673, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !11674
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1479, metadata !DIExpression()), !dbg !11675
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !11675, !tbaa !1984
  %call = call ptr @PyTuple_New(i64 noundef 3), !dbg !11676
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !11677, !tbaa !1899
  %0 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11678, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !11678
  %lnot = xor i1 %tobool, true, !dbg !11678
  %lnot1 = xor i1 %lnot, true, !dbg !11678
  %lnot2 = xor i1 %lnot1, true, !dbg !11678
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11678
  %conv = sext i32 %lnot.ext to i64, !dbg !11678
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11678
  %tobool3 = icmp ne i64 %expval, 0, !dbg !11678
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11680

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11681, !tbaa !1899
  store ptr %1, ptr %__pyx_filename, align 8, !dbg !11681, !tbaa !1899
  %2 = load ptr, ptr %__pyx_filename, align 8, !dbg !11681, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !11681, !tbaa !1984
  %3 = load i32, ptr %__pyx_lineno, align 4, !dbg !11681, !tbaa !1984
  store i32 5373, ptr %__pyx_clineno, align 4, !dbg !11681, !tbaa !1984
  %4 = load i32, ptr %__pyx_clineno, align 4, !dbg !11681, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11684

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11685, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %5, i32 0, i32 2, !dbg !11685
  %6 = load ptr, ptr %new_machine, align 8, !dbg !11685, !tbaa !8661
  call void @Py_INCREF(ptr noundef %6), !dbg !11685
  %7 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11686, !tbaa !1899
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11686, !tbaa !1899
  %new_machine4 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %8, i32 0, i32 2, !dbg !11686
  %9 = load ptr, ptr %new_machine4, align 8, !dbg !11686, !tbaa !8661
  call void @PyTuple_SET_ITEM(ptr noundef %7, i64 noundef 0, ptr noundef %9), !dbg !11686
  br i1 false, label %if.then5, label %if.end6, !dbg !11688

if.then5:                                         ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11689, !tbaa !1899
  store ptr %10, ptr %__pyx_filename, align 8, !dbg !11689, !tbaa !1899
  %11 = load ptr, ptr %__pyx_filename, align 8, !dbg !11689, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !11689, !tbaa !1984
  %12 = load i32, ptr %__pyx_lineno, align 4, !dbg !11689, !tbaa !1984
  store i32 5377, ptr %__pyx_clineno, align 4, !dbg !11689, !tbaa !1984
  %13 = load i32, ptr %__pyx_clineno, align 4, !dbg !11689, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11692

if.end6:                                          ; preds = %if.end
  %14 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11693, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %14, i32 0, i32 4, !dbg !11693
  %15 = load ptr, ptr %new_to_old_dict, align 8, !dbg !11693, !tbaa !8732
  call void @Py_INCREF(ptr noundef %15), !dbg !11693
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11694, !tbaa !1899
  %17 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11694, !tbaa !1899
  %new_to_old_dict7 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %17, i32 0, i32 4, !dbg !11694
  %18 = load ptr, ptr %new_to_old_dict7, align 8, !dbg !11694, !tbaa !8732
  call void @PyTuple_SET_ITEM(ptr noundef %16, i64 noundef 1, ptr noundef %18), !dbg !11694
  br i1 false, label %if.then8, label %if.end9, !dbg !11696

if.then8:                                         ; preds = %if.end6
  %19 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11697, !tbaa !1899
  store ptr %19, ptr %__pyx_filename, align 8, !dbg !11697, !tbaa !1899
  %20 = load ptr, ptr %__pyx_filename, align 8, !dbg !11697, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !11697, !tbaa !1984
  %21 = load i32, ptr %__pyx_lineno, align 4, !dbg !11697, !tbaa !1984
  store i32 5380, ptr %__pyx_clineno, align 4, !dbg !11697, !tbaa !1984
  %22 = load i32, ptr %__pyx_clineno, align 4, !dbg !11697, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11700

if.end9:                                          ; preds = %if.end6
  %23 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11701, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %23, i32 0, i32 3, !dbg !11701
  %24 = load ptr, ptr %old_to_new_dict, align 8, !dbg !11701, !tbaa !8605
  call void @Py_INCREF(ptr noundef %24), !dbg !11701
  %25 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11702, !tbaa !1899
  %26 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11702, !tbaa !1899
  %old_to_new_dict10 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %26, i32 0, i32 3, !dbg !11702
  %27 = load ptr, ptr %old_to_new_dict10, align 8, !dbg !11702, !tbaa !8605
  call void @PyTuple_SET_ITEM(ptr noundef %25, i64 noundef 2, ptr noundef %27), !dbg !11702
  br i1 false, label %if.then11, label %if.end12, !dbg !11704

if.then11:                                        ; preds = %if.end9
  %28 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11705, !tbaa !1899
  store ptr %28, ptr %__pyx_filename, align 8, !dbg !11705, !tbaa !1899
  %29 = load ptr, ptr %__pyx_filename, align 8, !dbg !11705, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !11705, !tbaa !1984
  %30 = load i32, ptr %__pyx_lineno, align 4, !dbg !11705, !tbaa !1984
  store i32 5383, ptr %__pyx_clineno, align 4, !dbg !11705, !tbaa !1984
  %31 = load i32, ptr %__pyx_clineno, align 4, !dbg !11705, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11708

if.end12:                                         ; preds = %if.end9
  %32 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11709, !tbaa !1899
  store ptr %32, ptr %__pyx_v_state, align 8, !dbg !11710, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11711, !tbaa !1899
  %33 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11712, !tbaa !1899
  %34 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11713, !tbaa !1899
  %__pyx_n_s_dict = getelementptr inbounds %struct.__pyx_mstate, ptr %34, i32 0, i32 43, !dbg !11713
  %35 = load ptr, ptr %__pyx_n_s_dict, align 8, !dbg !11713, !tbaa !11714
  %call13 = call ptr @__Pyx_GetAttr3(ptr noundef %33, ptr noundef %35, ptr noundef @_Py_NoneStruct), !dbg !11715
  store ptr %call13, ptr %__pyx_t_1, align 8, !dbg !11716, !tbaa !1899
  %36 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11717, !tbaa !1899
  %tobool14 = icmp ne ptr %36, null, !dbg !11717
  %lnot15 = xor i1 %tobool14, true, !dbg !11717
  %lnot17 = xor i1 %lnot15, true, !dbg !11717
  %lnot19 = xor i1 %lnot17, true, !dbg !11717
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !11717
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !11717
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0), !dbg !11717
  %tobool23 = icmp ne i64 %expval22, 0, !dbg !11717
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !11719

if.then24:                                        ; preds = %if.end12
  %37 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11720, !tbaa !1899
  store ptr %37, ptr %__pyx_filename, align 8, !dbg !11720, !tbaa !1899
  %38 = load ptr, ptr %__pyx_filename, align 8, !dbg !11720, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !11720, !tbaa !1984
  %39 = load i32, ptr %__pyx_lineno, align 4, !dbg !11720, !tbaa !1984
  store i32 5394, ptr %__pyx_clineno, align 4, !dbg !11720, !tbaa !1984
  %40 = load i32, ptr %__pyx_clineno, align 4, !dbg !11720, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11723

if.end25:                                         ; preds = %if.end12
  %41 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11724, !tbaa !1899
  store ptr %41, ptr %__pyx_v__dict, align 8, !dbg !11725, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11726, !tbaa !1899
  %42 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !11727, !tbaa !1899
  %cmp = icmp ne ptr %42, @_Py_NoneStruct, !dbg !11728
  %conv26 = zext i1 %cmp to i32, !dbg !11728
  store i32 %conv26, ptr %__pyx_t_2, align 4, !dbg !11729, !tbaa !1984
  %43 = load i32, ptr %__pyx_t_2, align 4, !dbg !11730, !tbaa !1984
  %tobool27 = icmp ne i32 %43, 0, !dbg !11730
  br i1 %tobool27, label %if.then28, label %if.end57, !dbg !11731

if.then28:                                        ; preds = %if.end25
  %call29 = call ptr @PyTuple_New(i64 noundef 1), !dbg !11732
  store ptr %call29, ptr %__pyx_t_1, align 8, !dbg !11733, !tbaa !1899
  %44 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11734, !tbaa !1899
  %tobool30 = icmp ne ptr %44, null, !dbg !11734
  %lnot31 = xor i1 %tobool30, true, !dbg !11734
  %lnot33 = xor i1 %lnot31, true, !dbg !11734
  %lnot35 = xor i1 %lnot33, true, !dbg !11734
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !11734
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !11734
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0), !dbg !11734
  %tobool39 = icmp ne i64 %expval38, 0, !dbg !11734
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !11736

if.then40:                                        ; preds = %if.then28
  %45 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11737, !tbaa !1899
  store ptr %45, ptr %__pyx_filename, align 8, !dbg !11737, !tbaa !1899
  %46 = load ptr, ptr %__pyx_filename, align 8, !dbg !11737, !tbaa !1899
  store i32 8, ptr %__pyx_lineno, align 4, !dbg !11737, !tbaa !1984
  %47 = load i32, ptr %__pyx_lineno, align 4, !dbg !11737, !tbaa !1984
  store i32 5416, ptr %__pyx_clineno, align 4, !dbg !11737, !tbaa !1984
  %48 = load i32, ptr %__pyx_clineno, align 4, !dbg !11737, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11740

if.end41:                                         ; preds = %if.then28
  %49 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !11741, !tbaa !1899
  call void @Py_INCREF(ptr noundef %49), !dbg !11741
  %50 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11742, !tbaa !1899
  %51 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !11742, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %50, i64 noundef 0, ptr noundef %51), !dbg !11742
  br i1 false, label %if.then42, label %if.end43, !dbg !11744

if.then42:                                        ; preds = %if.end41
  %52 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11745, !tbaa !1899
  store ptr %52, ptr %__pyx_filename, align 8, !dbg !11745, !tbaa !1899
  %53 = load ptr, ptr %__pyx_filename, align 8, !dbg !11745, !tbaa !1899
  store i32 8, ptr %__pyx_lineno, align 4, !dbg !11745, !tbaa !1984
  %54 = load i32, ptr %__pyx_lineno, align 4, !dbg !11745, !tbaa !1984
  store i32 5420, ptr %__pyx_clineno, align 4, !dbg !11745, !tbaa !1984
  %55 = load i32, ptr %__pyx_clineno, align 4, !dbg !11745, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11748

if.end43:                                         ; preds = %if.end41
  %56 = load ptr, ptr %__pyx_v_state, align 8, !dbg !11749, !tbaa !1899
  %57 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11750, !tbaa !1899
  %call44 = call ptr @PyNumber_InPlaceAdd(ptr noundef %56, ptr noundef %57), !dbg !11751
  store ptr %call44, ptr %__pyx_t_3, align 8, !dbg !11752, !tbaa !1899
  %58 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11753, !tbaa !1899
  %tobool45 = icmp ne ptr %58, null, !dbg !11753
  %lnot46 = xor i1 %tobool45, true, !dbg !11753
  %lnot48 = xor i1 %lnot46, true, !dbg !11753
  %lnot50 = xor i1 %lnot48, true, !dbg !11753
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !11753
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !11753
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !11753
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !11753
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !11755

if.then55:                                        ; preds = %if.end43
  %59 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11756, !tbaa !1899
  store ptr %59, ptr %__pyx_filename, align 8, !dbg !11756, !tbaa !1899
  %60 = load ptr, ptr %__pyx_filename, align 8, !dbg !11756, !tbaa !1899
  store i32 8, ptr %__pyx_lineno, align 4, !dbg !11756, !tbaa !1984
  %61 = load i32, ptr %__pyx_lineno, align 4, !dbg !11756, !tbaa !1984
  store i32 5421, ptr %__pyx_clineno, align 4, !dbg !11756, !tbaa !1984
  %62 = load i32, ptr %__pyx_clineno, align 4, !dbg !11756, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11759

if.end56:                                         ; preds = %if.end43
  %63 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11760, !tbaa !1899
  call void @Py_DECREF(ptr noundef %63), !dbg !11760
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11761, !tbaa !1899
  br label %do.body, !dbg !11762

do.body:                                          ; preds = %if.end56
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !11763
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1480, metadata !DIExpression()), !dbg !11763
  %64 = load ptr, ptr %__pyx_v_state, align 8, !dbg !11763, !tbaa !1899
  store ptr %64, ptr %tmp, align 8, !dbg !11763, !tbaa !1899
  %65 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11763, !tbaa !1899
  store ptr %65, ptr %__pyx_v_state, align 8, !dbg !11763, !tbaa !1899
  %66 = load ptr, ptr %tmp, align 8, !dbg !11763, !tbaa !1899
  call void @Py_DECREF(ptr noundef %66), !dbg !11763
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !11762
  br label %do.cond, !dbg !11763

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11763

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11764, !tbaa !1899
  store i32 1, ptr %__pyx_v_use_setstate, align 4, !dbg !11765, !tbaa !1984
  br label %__pyx_L3, !dbg !11766

if.end57:                                         ; preds = %if.end25
  %67 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11767, !tbaa !1899
  %new_machine58 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %67, i32 0, i32 2, !dbg !11768
  %68 = load ptr, ptr %new_machine58, align 8, !dbg !11768, !tbaa !8661
  %cmp59 = icmp ne ptr %68, @_Py_NoneStruct, !dbg !11769
  %conv60 = zext i1 %cmp59 to i32, !dbg !11769
  store i32 %conv60, ptr %__pyx_t_4, align 4, !dbg !11770, !tbaa !1984
  %69 = load i32, ptr %__pyx_t_4, align 4, !dbg !11771, !tbaa !1984
  %tobool61 = icmp ne i32 %69, 0, !dbg !11771
  br i1 %tobool61, label %if.else, label %if.then62, !dbg !11773

if.then62:                                        ; preds = %if.end57
  br label %if.end63, !dbg !11774

if.else:                                          ; preds = %if.end57
  %70 = load i32, ptr %__pyx_t_4, align 4, !dbg !11776, !tbaa !1984
  store i32 %70, ptr %__pyx_t_2, align 4, !dbg !11778, !tbaa !1984
  br label %__pyx_L4_bool_binop_done, !dbg !11779

if.end63:                                         ; preds = %if.then62
  %71 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11780, !tbaa !1899
  %new_to_old_dict64 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %71, i32 0, i32 4, !dbg !11781
  %72 = load ptr, ptr %new_to_old_dict64, align 8, !dbg !11781, !tbaa !8732
  %cmp65 = icmp ne ptr %72, @_Py_NoneStruct, !dbg !11782
  %conv66 = zext i1 %cmp65 to i32, !dbg !11782
  store i32 %conv66, ptr %__pyx_t_4, align 4, !dbg !11783, !tbaa !1984
  %73 = load i32, ptr %__pyx_t_4, align 4, !dbg !11784, !tbaa !1984
  %tobool67 = icmp ne i32 %73, 0, !dbg !11784
  br i1 %tobool67, label %if.else69, label %if.then68, !dbg !11786

if.then68:                                        ; preds = %if.end63
  br label %if.end70, !dbg !11787

if.else69:                                        ; preds = %if.end63
  %74 = load i32, ptr %__pyx_t_4, align 4, !dbg !11789, !tbaa !1984
  store i32 %74, ptr %__pyx_t_2, align 4, !dbg !11791, !tbaa !1984
  br label %__pyx_L4_bool_binop_done, !dbg !11792

if.end70:                                         ; preds = %if.then68
  %75 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11793, !tbaa !1899
  %old_to_new_dict71 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %75, i32 0, i32 3, !dbg !11794
  %76 = load ptr, ptr %old_to_new_dict71, align 8, !dbg !11794, !tbaa !8605
  %cmp72 = icmp ne ptr %76, @_Py_NoneStruct, !dbg !11795
  %conv73 = zext i1 %cmp72 to i32, !dbg !11795
  store i32 %conv73, ptr %__pyx_t_4, align 4, !dbg !11796, !tbaa !1984
  %77 = load i32, ptr %__pyx_t_4, align 4, !dbg !11797, !tbaa !1984
  store i32 %77, ptr %__pyx_t_2, align 4, !dbg !11798, !tbaa !1984
  br label %__pyx_L4_bool_binop_done, !dbg !11799

__pyx_L4_bool_binop_done:                         ; preds = %if.end70, %if.else69, %if.else
  tail call void @llvm.dbg.label(metadata !1484), !dbg !11800
  %78 = load i32, ptr %__pyx_t_2, align 4, !dbg !11801, !tbaa !1984
  store i32 %78, ptr %__pyx_v_use_setstate, align 4, !dbg !11802, !tbaa !1984
  br label %__pyx_L3, !dbg !11803

__pyx_L3:                                         ; preds = %__pyx_L4_bool_binop_done, %do.end
  tail call void @llvm.dbg.label(metadata !1486), !dbg !11804
  %79 = load i32, ptr %__pyx_v_use_setstate, align 4, !dbg !11805, !tbaa !1984
  %tobool74 = icmp ne i32 %79, 0, !dbg !11805
  br i1 %tobool74, label %if.then75, label %if.end156, !dbg !11807

if.then75:                                        ; preds = %__pyx_L3
  %80 = load ptr, ptr %__pyx_r, align 8, !dbg !11808, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %80), !dbg !11808
  br label %do.body76, !dbg !11810

do.body76:                                        ; preds = %if.then75
  %81 = load i64, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_version, align 8, !dbg !11811, !tbaa !2597
  %82 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11811, !tbaa !1899
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %82, i32 0, i32 0, !dbg !11811
  %83 = load ptr, ptr %__pyx_d, align 8, !dbg !11811, !tbaa !2019
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %83, i32 0, i32 2, !dbg !11811
  %84 = load i64, ptr %ma_version_tag, align 8, !dbg !11811, !tbaa !9568
  %cmp77 = icmp eq i64 %81, %84, !dbg !11811
  %lnot79 = xor i1 %cmp77, true, !dbg !11811
  %lnot81 = xor i1 %lnot79, true, !dbg !11811
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !11811
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !11811
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 1), !dbg !11811
  %tobool85 = icmp ne i64 %expval84, 0, !dbg !11811
  br i1 %tobool85, label %cond.true, label %cond.false96, !dbg !11811

cond.true:                                        ; preds = %do.body76
  %85 = load ptr, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value, align 8, !dbg !11811, !tbaa !1899
  %tobool86 = icmp ne ptr %85, null, !dbg !11811
  %lnot87 = xor i1 %tobool86, true, !dbg !11811
  %lnot89 = xor i1 %lnot87, true, !dbg !11811
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !11811
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !11811
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 1), !dbg !11811
  %tobool93 = icmp ne i64 %expval92, 0, !dbg !11811
  br i1 %tobool93, label %cond.true94, label %cond.false, !dbg !11811

cond.true94:                                      ; preds = %cond.true
  %86 = load ptr, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value, align 8, !dbg !11811, !tbaa !1899
  call void @Py_INCREF(ptr noundef %86), !dbg !11811
  %87 = load ptr, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value, align 8, !dbg !11811, !tbaa !1899
  br label %cond.end, !dbg !11811

cond.false:                                       ; preds = %cond.true
  %88 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11811, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %88, i32 0, i32 75, !dbg !11811
  %89 = load ptr, ptr %__pyx_n_s_pyx_unpickle_StateMap, align 8, !dbg !11811, !tbaa !2521
  %call95 = call ptr @__Pyx_GetBuiltinName(ptr noundef %89), !dbg !11811
  br label %cond.end, !dbg !11811

cond.end:                                         ; preds = %cond.false, %cond.true94
  %cond = phi ptr [ %87, %cond.true94 ], [ %call95, %cond.false ], !dbg !11811
  br label %cond.end99, !dbg !11811

cond.false96:                                     ; preds = %do.body76
  %90 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11811, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap97 = getelementptr inbounds %struct.__pyx_mstate, ptr %90, i32 0, i32 75, !dbg !11811
  %91 = load ptr, ptr %__pyx_n_s_pyx_unpickle_StateMap97, align 8, !dbg !11811, !tbaa !2521
  %call98 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %91, ptr noundef @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_version, ptr noundef @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value), !dbg !11811
  br label %cond.end99, !dbg !11811

cond.end99:                                       ; preds = %cond.false96, %cond.end
  %cond100 = phi ptr [ %cond, %cond.end ], [ %call98, %cond.false96 ], !dbg !11811
  store ptr %cond100, ptr %__pyx_t_3, align 8, !dbg !11811, !tbaa !1899
  br label %do.cond101, !dbg !11811

do.cond101:                                       ; preds = %cond.end99
  br label %do.end102, !dbg !11811

do.end102:                                        ; preds = %do.cond101
  %92 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11813, !tbaa !1899
  %tobool103 = icmp ne ptr %92, null, !dbg !11813
  %lnot104 = xor i1 %tobool103, true, !dbg !11813
  %lnot106 = xor i1 %lnot104, true, !dbg !11813
  %lnot108 = xor i1 %lnot106, true, !dbg !11813
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !11813
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !11813
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 0), !dbg !11813
  %tobool112 = icmp ne i64 %expval111, 0, !dbg !11813
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !11815

if.then113:                                       ; preds = %do.end102
  %93 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11816, !tbaa !1899
  store ptr %93, ptr %__pyx_filename, align 8, !dbg !11816, !tbaa !1899
  %94 = load ptr, ptr %__pyx_filename, align 8, !dbg !11816, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11816, !tbaa !1984
  %95 = load i32, ptr %__pyx_lineno, align 4, !dbg !11816, !tbaa !1984
  store i32 5490, ptr %__pyx_clineno, align 4, !dbg !11816, !tbaa !1984
  %96 = load i32, ptr %__pyx_clineno, align 4, !dbg !11816, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11819

if.end114:                                        ; preds = %do.end102
  %call115 = call ptr @PyTuple_New(i64 noundef 3), !dbg !11820
  store ptr %call115, ptr %__pyx_t_1, align 8, !dbg !11821, !tbaa !1899
  %97 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11822, !tbaa !1899
  %tobool116 = icmp ne ptr %97, null, !dbg !11822
  %lnot117 = xor i1 %tobool116, true, !dbg !11822
  %lnot119 = xor i1 %lnot117, true, !dbg !11822
  %lnot121 = xor i1 %lnot119, true, !dbg !11822
  %lnot.ext122 = zext i1 %lnot121 to i32, !dbg !11822
  %conv123 = sext i32 %lnot.ext122 to i64, !dbg !11822
  %expval124 = call i64 @llvm.expect.i64(i64 %conv123, i64 0), !dbg !11822
  %tobool125 = icmp ne i64 %expval124, 0, !dbg !11822
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !11824

if.then126:                                       ; preds = %if.end114
  %98 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11825, !tbaa !1899
  store ptr %98, ptr %__pyx_filename, align 8, !dbg !11825, !tbaa !1899
  %99 = load ptr, ptr %__pyx_filename, align 8, !dbg !11825, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11825, !tbaa !1984
  %100 = load i32, ptr %__pyx_lineno, align 4, !dbg !11825, !tbaa !1984
  store i32 5492, ptr %__pyx_clineno, align 4, !dbg !11825, !tbaa !1984
  %101 = load i32, ptr %__pyx_clineno, align 4, !dbg !11825, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11828

if.end127:                                        ; preds = %if.end114
  %102 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11829, !tbaa !1899
  %call128 = call ptr @Py_TYPE(ptr noundef %102), !dbg !11829
  call void @Py_INCREF(ptr noundef %call128), !dbg !11829
  %103 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11830, !tbaa !1899
  %104 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11830, !tbaa !1899
  %call129 = call ptr @Py_TYPE(ptr noundef %104), !dbg !11830
  call void @PyTuple_SET_ITEM(ptr noundef %103, i64 noundef 0, ptr noundef %call129), !dbg !11830
  br i1 false, label %if.then130, label %if.end131, !dbg !11832

if.then130:                                       ; preds = %if.end127
  %105 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11833, !tbaa !1899
  store ptr %105, ptr %__pyx_filename, align 8, !dbg !11833, !tbaa !1899
  %106 = load ptr, ptr %__pyx_filename, align 8, !dbg !11833, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11833, !tbaa !1984
  %107 = load i32, ptr %__pyx_lineno, align 4, !dbg !11833, !tbaa !1984
  store i32 5496, ptr %__pyx_clineno, align 4, !dbg !11833, !tbaa !1984
  %108 = load i32, ptr %__pyx_clineno, align 4, !dbg !11833, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11836

if.end131:                                        ; preds = %if.end127
  %109 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11837, !tbaa !1899
  %__pyx_int_236441912 = getelementptr inbounds %struct.__pyx_mstate, ptr %109, i32 0, i32 93, !dbg !11837
  %110 = load ptr, ptr %__pyx_int_236441912, align 8, !dbg !11837, !tbaa !2876
  call void @Py_INCREF(ptr noundef %110), !dbg !11837
  %111 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11838, !tbaa !1899
  %112 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11838, !tbaa !1899
  %__pyx_int_236441912132 = getelementptr inbounds %struct.__pyx_mstate, ptr %112, i32 0, i32 93, !dbg !11838
  %113 = load ptr, ptr %__pyx_int_236441912132, align 8, !dbg !11838, !tbaa !2876
  call void @PyTuple_SET_ITEM(ptr noundef %111, i64 noundef 1, ptr noundef %113), !dbg !11838
  br i1 false, label %if.then133, label %if.end134, !dbg !11840

if.then133:                                       ; preds = %if.end131
  %114 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11841, !tbaa !1899
  store ptr %114, ptr %__pyx_filename, align 8, !dbg !11841, !tbaa !1899
  %115 = load ptr, ptr %__pyx_filename, align 8, !dbg !11841, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11841, !tbaa !1984
  %116 = load i32, ptr %__pyx_lineno, align 4, !dbg !11841, !tbaa !1984
  store i32 5499, ptr %__pyx_clineno, align 4, !dbg !11841, !tbaa !1984
  %117 = load i32, ptr %__pyx_clineno, align 4, !dbg !11841, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11844

if.end134:                                        ; preds = %if.end131
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !11845
  %118 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11846, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %118, i64 noundef 2, ptr noundef @_Py_NoneStruct), !dbg !11846
  br i1 false, label %if.then135, label %if.end136, !dbg !11848

if.then135:                                       ; preds = %if.end134
  %119 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11849, !tbaa !1899
  store ptr %119, ptr %__pyx_filename, align 8, !dbg !11849, !tbaa !1899
  %120 = load ptr, ptr %__pyx_filename, align 8, !dbg !11849, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11849, !tbaa !1984
  %121 = load i32, ptr %__pyx_lineno, align 4, !dbg !11849, !tbaa !1984
  store i32 5502, ptr %__pyx_clineno, align 4, !dbg !11849, !tbaa !1984
  %122 = load i32, ptr %__pyx_clineno, align 4, !dbg !11849, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11852

if.end136:                                        ; preds = %if.end134
  %call137 = call ptr @PyTuple_New(i64 noundef 3), !dbg !11853
  store ptr %call137, ptr %__pyx_t_5, align 8, !dbg !11854, !tbaa !1899
  %123 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11855, !tbaa !1899
  %tobool138 = icmp ne ptr %123, null, !dbg !11855
  %lnot139 = xor i1 %tobool138, true, !dbg !11855
  %lnot141 = xor i1 %lnot139, true, !dbg !11855
  %lnot143 = xor i1 %lnot141, true, !dbg !11855
  %lnot.ext144 = zext i1 %lnot143 to i32, !dbg !11855
  %conv145 = sext i32 %lnot.ext144 to i64, !dbg !11855
  %expval146 = call i64 @llvm.expect.i64(i64 %conv145, i64 0), !dbg !11855
  %tobool147 = icmp ne i64 %expval146, 0, !dbg !11855
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !11857

if.then148:                                       ; preds = %if.end136
  %124 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11858, !tbaa !1899
  store ptr %124, ptr %__pyx_filename, align 8, !dbg !11858, !tbaa !1899
  %125 = load ptr, ptr %__pyx_filename, align 8, !dbg !11858, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11858, !tbaa !1984
  %126 = load i32, ptr %__pyx_lineno, align 4, !dbg !11858, !tbaa !1984
  store i32 5503, ptr %__pyx_clineno, align 4, !dbg !11858, !tbaa !1984
  %127 = load i32, ptr %__pyx_clineno, align 4, !dbg !11858, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11861

if.end149:                                        ; preds = %if.end136
  %128 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11862, !tbaa !1899
  %129 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11862, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %128, i64 noundef 0, ptr noundef %129), !dbg !11862
  br i1 false, label %if.then150, label %if.end151, !dbg !11864

if.then150:                                       ; preds = %if.end149
  %130 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11865, !tbaa !1899
  store ptr %130, ptr %__pyx_filename, align 8, !dbg !11865, !tbaa !1899
  %131 = load ptr, ptr %__pyx_filename, align 8, !dbg !11865, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11865, !tbaa !1984
  %132 = load i32, ptr %__pyx_lineno, align 4, !dbg !11865, !tbaa !1984
  store i32 5506, ptr %__pyx_clineno, align 4, !dbg !11865, !tbaa !1984
  %133 = load i32, ptr %__pyx_clineno, align 4, !dbg !11865, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11868

if.end151:                                        ; preds = %if.end149
  %134 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11869, !tbaa !1899
  %135 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11869, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %134, i64 noundef 1, ptr noundef %135), !dbg !11869
  br i1 false, label %if.then152, label %if.end153, !dbg !11871

if.then152:                                       ; preds = %if.end151
  %136 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11872, !tbaa !1899
  store ptr %136, ptr %__pyx_filename, align 8, !dbg !11872, !tbaa !1899
  %137 = load ptr, ptr %__pyx_filename, align 8, !dbg !11872, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11872, !tbaa !1984
  %138 = load i32, ptr %__pyx_lineno, align 4, !dbg !11872, !tbaa !1984
  store i32 5508, ptr %__pyx_clineno, align 4, !dbg !11872, !tbaa !1984
  %139 = load i32, ptr %__pyx_clineno, align 4, !dbg !11872, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11875

if.end153:                                        ; preds = %if.end151
  %140 = load ptr, ptr %__pyx_v_state, align 8, !dbg !11876, !tbaa !1899
  call void @Py_INCREF(ptr noundef %140), !dbg !11876
  %141 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11877, !tbaa !1899
  %142 = load ptr, ptr %__pyx_v_state, align 8, !dbg !11877, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %141, i64 noundef 2, ptr noundef %142), !dbg !11877
  br i1 false, label %if.then154, label %if.end155, !dbg !11879

if.then154:                                       ; preds = %if.end153
  %143 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11880, !tbaa !1899
  store ptr %143, ptr %__pyx_filename, align 8, !dbg !11880, !tbaa !1899
  %144 = load ptr, ptr %__pyx_filename, align 8, !dbg !11880, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !11880, !tbaa !1984
  %145 = load i32, ptr %__pyx_lineno, align 4, !dbg !11880, !tbaa !1984
  store i32 5511, ptr %__pyx_clineno, align 4, !dbg !11880, !tbaa !1984
  %146 = load i32, ptr %__pyx_clineno, align 4, !dbg !11880, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11883

if.end155:                                        ; preds = %if.end153
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11884, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11885, !tbaa !1899
  %147 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11886, !tbaa !1899
  store ptr %147, ptr %__pyx_r, align 8, !dbg !11887, !tbaa !1899
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11888, !tbaa !1899
  br label %__pyx_L0, !dbg !11889

if.end156:                                        ; preds = %__pyx_L3
  %148 = load ptr, ptr %__pyx_r, align 8, !dbg !11890, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %148), !dbg !11890
  br label %do.body157, !dbg !11892

do.body157:                                       ; preds = %if.end156
  %149 = load i64, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_version.108, align 8, !dbg !11893, !tbaa !2597
  %150 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11893, !tbaa !1899
  %__pyx_d158 = getelementptr inbounds %struct.__pyx_mstate, ptr %150, i32 0, i32 0, !dbg !11893
  %151 = load ptr, ptr %__pyx_d158, align 8, !dbg !11893, !tbaa !2019
  %ma_version_tag159 = getelementptr inbounds %struct.PyDictObject, ptr %151, i32 0, i32 2, !dbg !11893
  %152 = load i64, ptr %ma_version_tag159, align 8, !dbg !11893, !tbaa !9568
  %cmp160 = icmp eq i64 %149, %152, !dbg !11893
  %lnot162 = xor i1 %cmp160, true, !dbg !11893
  %lnot164 = xor i1 %lnot162, true, !dbg !11893
  %lnot.ext165 = zext i1 %lnot164 to i32, !dbg !11893
  %conv166 = sext i32 %lnot.ext165 to i64, !dbg !11893
  %expval167 = call i64 @llvm.expect.i64(i64 %conv166, i64 1), !dbg !11893
  %tobool168 = icmp ne i64 %expval167, 0, !dbg !11893
  br i1 %tobool168, label %cond.true169, label %cond.false184, !dbg !11893

cond.true169:                                     ; preds = %do.body157
  %153 = load ptr, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value.109, align 8, !dbg !11893, !tbaa !1899
  %tobool170 = icmp ne ptr %153, null, !dbg !11893
  %lnot171 = xor i1 %tobool170, true, !dbg !11893
  %lnot173 = xor i1 %lnot171, true, !dbg !11893
  %lnot.ext174 = zext i1 %lnot173 to i32, !dbg !11893
  %conv175 = sext i32 %lnot.ext174 to i64, !dbg !11893
  %expval176 = call i64 @llvm.expect.i64(i64 %conv175, i64 1), !dbg !11893
  %tobool177 = icmp ne i64 %expval176, 0, !dbg !11893
  br i1 %tobool177, label %cond.true178, label %cond.false179, !dbg !11893

cond.true178:                                     ; preds = %cond.true169
  %154 = load ptr, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value.109, align 8, !dbg !11893, !tbaa !1899
  call void @Py_INCREF(ptr noundef %154), !dbg !11893
  %155 = load ptr, ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value.109, align 8, !dbg !11893, !tbaa !1899
  br label %cond.end182, !dbg !11893

cond.false179:                                    ; preds = %cond.true169
  %156 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11893, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap180 = getelementptr inbounds %struct.__pyx_mstate, ptr %156, i32 0, i32 75, !dbg !11893
  %157 = load ptr, ptr %__pyx_n_s_pyx_unpickle_StateMap180, align 8, !dbg !11893, !tbaa !2521
  %call181 = call ptr @__Pyx_GetBuiltinName(ptr noundef %157), !dbg !11893
  br label %cond.end182, !dbg !11893

cond.end182:                                      ; preds = %cond.false179, %cond.true178
  %cond183 = phi ptr [ %155, %cond.true178 ], [ %call181, %cond.false179 ], !dbg !11893
  br label %cond.end187, !dbg !11893

cond.false184:                                    ; preds = %do.body157
  %158 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11893, !tbaa !1899
  %__pyx_n_s_pyx_unpickle_StateMap185 = getelementptr inbounds %struct.__pyx_mstate, ptr %158, i32 0, i32 75, !dbg !11893
  %159 = load ptr, ptr %__pyx_n_s_pyx_unpickle_StateMap185, align 8, !dbg !11893, !tbaa !2521
  %call186 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %159, ptr noundef @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_version.108, ptr noundef @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__.__pyx_dict_cached_value.109), !dbg !11893
  br label %cond.end187, !dbg !11893

cond.end187:                                      ; preds = %cond.false184, %cond.end182
  %cond188 = phi ptr [ %cond183, %cond.end182 ], [ %call186, %cond.false184 ], !dbg !11893
  store ptr %cond188, ptr %__pyx_t_5, align 8, !dbg !11893, !tbaa !1899
  br label %do.cond189, !dbg !11893

do.cond189:                                       ; preds = %cond.end187
  br label %do.end190, !dbg !11893

do.end190:                                        ; preds = %do.cond189
  %160 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11895, !tbaa !1899
  %tobool191 = icmp ne ptr %160, null, !dbg !11895
  %lnot192 = xor i1 %tobool191, true, !dbg !11895
  %lnot194 = xor i1 %lnot192, true, !dbg !11895
  %lnot196 = xor i1 %lnot194, true, !dbg !11895
  %lnot.ext197 = zext i1 %lnot196 to i32, !dbg !11895
  %conv198 = sext i32 %lnot.ext197 to i64, !dbg !11895
  %expval199 = call i64 @llvm.expect.i64(i64 %conv198, i64 0), !dbg !11895
  %tobool200 = icmp ne i64 %expval199, 0, !dbg !11895
  br i1 %tobool200, label %if.then201, label %if.end202, !dbg !11897

if.then201:                                       ; preds = %do.end190
  %161 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11898, !tbaa !1899
  store ptr %161, ptr %__pyx_filename, align 8, !dbg !11898, !tbaa !1899
  %162 = load ptr, ptr %__pyx_filename, align 8, !dbg !11898, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11898, !tbaa !1984
  %163 = load i32, ptr %__pyx_lineno, align 4, !dbg !11898, !tbaa !1984
  store i32 5536, ptr %__pyx_clineno, align 4, !dbg !11898, !tbaa !1984
  %164 = load i32, ptr %__pyx_clineno, align 4, !dbg !11898, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11901

if.end202:                                        ; preds = %do.end190
  %call203 = call ptr @PyTuple_New(i64 noundef 3), !dbg !11902
  store ptr %call203, ptr %__pyx_t_1, align 8, !dbg !11903, !tbaa !1899
  %165 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11904, !tbaa !1899
  %tobool204 = icmp ne ptr %165, null, !dbg !11904
  %lnot205 = xor i1 %tobool204, true, !dbg !11904
  %lnot207 = xor i1 %lnot205, true, !dbg !11904
  %lnot209 = xor i1 %lnot207, true, !dbg !11904
  %lnot.ext210 = zext i1 %lnot209 to i32, !dbg !11904
  %conv211 = sext i32 %lnot.ext210 to i64, !dbg !11904
  %expval212 = call i64 @llvm.expect.i64(i64 %conv211, i64 0), !dbg !11904
  %tobool213 = icmp ne i64 %expval212, 0, !dbg !11904
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !11906

if.then214:                                       ; preds = %if.end202
  %166 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11907, !tbaa !1899
  store ptr %166, ptr %__pyx_filename, align 8, !dbg !11907, !tbaa !1899
  %167 = load ptr, ptr %__pyx_filename, align 8, !dbg !11907, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11907, !tbaa !1984
  %168 = load i32, ptr %__pyx_lineno, align 4, !dbg !11907, !tbaa !1984
  store i32 5538, ptr %__pyx_clineno, align 4, !dbg !11907, !tbaa !1984
  %169 = load i32, ptr %__pyx_clineno, align 4, !dbg !11907, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11910

if.end215:                                        ; preds = %if.end202
  %170 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11911, !tbaa !1899
  %call216 = call ptr @Py_TYPE(ptr noundef %170), !dbg !11911
  call void @Py_INCREF(ptr noundef %call216), !dbg !11911
  %171 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11912, !tbaa !1899
  %172 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !11912, !tbaa !1899
  %call217 = call ptr @Py_TYPE(ptr noundef %172), !dbg !11912
  call void @PyTuple_SET_ITEM(ptr noundef %171, i64 noundef 0, ptr noundef %call217), !dbg !11912
  br i1 false, label %if.then218, label %if.end219, !dbg !11914

if.then218:                                       ; preds = %if.end215
  %173 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11915, !tbaa !1899
  store ptr %173, ptr %__pyx_filename, align 8, !dbg !11915, !tbaa !1899
  %174 = load ptr, ptr %__pyx_filename, align 8, !dbg !11915, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11915, !tbaa !1984
  %175 = load i32, ptr %__pyx_lineno, align 4, !dbg !11915, !tbaa !1984
  store i32 5542, ptr %__pyx_clineno, align 4, !dbg !11915, !tbaa !1984
  %176 = load i32, ptr %__pyx_clineno, align 4, !dbg !11915, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11918

if.end219:                                        ; preds = %if.end215
  %177 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11919, !tbaa !1899
  %__pyx_int_236441912220 = getelementptr inbounds %struct.__pyx_mstate, ptr %177, i32 0, i32 93, !dbg !11919
  %178 = load ptr, ptr %__pyx_int_236441912220, align 8, !dbg !11919, !tbaa !2876
  call void @Py_INCREF(ptr noundef %178), !dbg !11919
  %179 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11920, !tbaa !1899
  %180 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11920, !tbaa !1899
  %__pyx_int_236441912221 = getelementptr inbounds %struct.__pyx_mstate, ptr %180, i32 0, i32 93, !dbg !11920
  %181 = load ptr, ptr %__pyx_int_236441912221, align 8, !dbg !11920, !tbaa !2876
  call void @PyTuple_SET_ITEM(ptr noundef %179, i64 noundef 1, ptr noundef %181), !dbg !11920
  br i1 false, label %if.then222, label %if.end223, !dbg !11922

if.then222:                                       ; preds = %if.end219
  %182 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11923, !tbaa !1899
  store ptr %182, ptr %__pyx_filename, align 8, !dbg !11923, !tbaa !1899
  %183 = load ptr, ptr %__pyx_filename, align 8, !dbg !11923, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11923, !tbaa !1984
  %184 = load i32, ptr %__pyx_lineno, align 4, !dbg !11923, !tbaa !1984
  store i32 5545, ptr %__pyx_clineno, align 4, !dbg !11923, !tbaa !1984
  %185 = load i32, ptr %__pyx_clineno, align 4, !dbg !11923, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11926

if.end223:                                        ; preds = %if.end219
  %186 = load ptr, ptr %__pyx_v_state, align 8, !dbg !11927, !tbaa !1899
  call void @Py_INCREF(ptr noundef %186), !dbg !11927
  %187 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11928, !tbaa !1899
  %188 = load ptr, ptr %__pyx_v_state, align 8, !dbg !11928, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %187, i64 noundef 2, ptr noundef %188), !dbg !11928
  br i1 false, label %if.then224, label %if.end225, !dbg !11930

if.then224:                                       ; preds = %if.end223
  %189 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11931, !tbaa !1899
  store ptr %189, ptr %__pyx_filename, align 8, !dbg !11931, !tbaa !1899
  %190 = load ptr, ptr %__pyx_filename, align 8, !dbg !11931, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11931, !tbaa !1984
  %191 = load i32, ptr %__pyx_lineno, align 4, !dbg !11931, !tbaa !1984
  store i32 5548, ptr %__pyx_clineno, align 4, !dbg !11931, !tbaa !1984
  %192 = load i32, ptr %__pyx_clineno, align 4, !dbg !11931, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11934

if.end225:                                        ; preds = %if.end223
  %call226 = call ptr @PyTuple_New(i64 noundef 2), !dbg !11935
  store ptr %call226, ptr %__pyx_t_3, align 8, !dbg !11936, !tbaa !1899
  %193 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11937, !tbaa !1899
  %tobool227 = icmp ne ptr %193, null, !dbg !11937
  %lnot228 = xor i1 %tobool227, true, !dbg !11937
  %lnot230 = xor i1 %lnot228, true, !dbg !11937
  %lnot232 = xor i1 %lnot230, true, !dbg !11937
  %lnot.ext233 = zext i1 %lnot232 to i32, !dbg !11937
  %conv234 = sext i32 %lnot.ext233 to i64, !dbg !11937
  %expval235 = call i64 @llvm.expect.i64(i64 %conv234, i64 0), !dbg !11937
  %tobool236 = icmp ne i64 %expval235, 0, !dbg !11937
  br i1 %tobool236, label %if.then237, label %if.end238, !dbg !11939

if.then237:                                       ; preds = %if.end225
  %194 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11940, !tbaa !1899
  store ptr %194, ptr %__pyx_filename, align 8, !dbg !11940, !tbaa !1899
  %195 = load ptr, ptr %__pyx_filename, align 8, !dbg !11940, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11940, !tbaa !1984
  %196 = load i32, ptr %__pyx_lineno, align 4, !dbg !11940, !tbaa !1984
  store i32 5549, ptr %__pyx_clineno, align 4, !dbg !11940, !tbaa !1984
  %197 = load i32, ptr %__pyx_clineno, align 4, !dbg !11940, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11943

if.end238:                                        ; preds = %if.end225
  %198 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11944, !tbaa !1899
  %199 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11944, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %198, i64 noundef 0, ptr noundef %199), !dbg !11944
  br i1 false, label %if.then239, label %if.end240, !dbg !11946

if.then239:                                       ; preds = %if.end238
  %200 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11947, !tbaa !1899
  store ptr %200, ptr %__pyx_filename, align 8, !dbg !11947, !tbaa !1899
  %201 = load ptr, ptr %__pyx_filename, align 8, !dbg !11947, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11947, !tbaa !1984
  %202 = load i32, ptr %__pyx_lineno, align 4, !dbg !11947, !tbaa !1984
  store i32 5552, ptr %__pyx_clineno, align 4, !dbg !11947, !tbaa !1984
  %203 = load i32, ptr %__pyx_clineno, align 4, !dbg !11947, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11950

if.end240:                                        ; preds = %if.end238
  %204 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11951, !tbaa !1899
  %205 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11951, !tbaa !1899
  call void @PyTuple_SET_ITEM(ptr noundef %204, i64 noundef 1, ptr noundef %205), !dbg !11951
  br i1 false, label %if.then241, label %if.end242, !dbg !11953

if.then241:                                       ; preds = %if.end240
  %206 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !11954, !tbaa !1899
  store ptr %206, ptr %__pyx_filename, align 8, !dbg !11954, !tbaa !1899
  %207 = load ptr, ptr %__pyx_filename, align 8, !dbg !11954, !tbaa !1899
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !11954, !tbaa !1984
  %208 = load i32, ptr %__pyx_lineno, align 4, !dbg !11954, !tbaa !1984
  store i32 5554, ptr %__pyx_clineno, align 4, !dbg !11954, !tbaa !1984
  %209 = load i32, ptr %__pyx_clineno, align 4, !dbg !11954, !tbaa !1984
  br label %__pyx_L1_error, !dbg !11957

if.end242:                                        ; preds = %if.end240
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11958, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !11959, !tbaa !1899
  %210 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11960, !tbaa !1899
  store ptr %210, ptr %__pyx_r, align 8, !dbg !11961, !tbaa !1899
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11962, !tbaa !1899
  br label %__pyx_L0, !dbg !11963

__pyx_L1_error:                                   ; preds = %if.then241, %if.then239, %if.then237, %if.then224, %if.then222, %if.then218, %if.then214, %if.then201, %if.then154, %if.then152, %if.then150, %if.then148, %if.then135, %if.then133, %if.then130, %if.then126, %if.then113, %if.then55, %if.then42, %if.then40, %if.then24, %if.then11, %if.then8, %if.then5, %if.then
  tail call void @llvm.dbg.label(metadata !1487), !dbg !11964
  %211 = load ptr, ptr %__pyx_t_1, align 8, !dbg !11965, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %211), !dbg !11965
  %212 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11966, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %212), !dbg !11966
  %213 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11967, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %213), !dbg !11967
  %214 = load i32, ptr %__pyx_clineno, align 4, !dbg !11968, !tbaa !1984
  %215 = load i32, ptr %__pyx_lineno, align 4, !dbg !11969, !tbaa !1984
  %216 = load ptr, ptr %__pyx_filename, align 8, !dbg !11970, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.110, i32 noundef %214, i32 noundef %215, ptr noundef %216), !dbg !11971
  store ptr null, ptr %__pyx_r, align 8, !dbg !11972, !tbaa !1899
  br label %__pyx_L0, !dbg !11973

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end242, %if.end155
  tail call void @llvm.dbg.label(metadata !1488), !dbg !11974
  %217 = load ptr, ptr %__pyx_v_state, align 8, !dbg !11975, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %217), !dbg !11975
  %218 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !11976, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %218), !dbg !11976
  %219 = load ptr, ptr %__pyx_r, align 8, !dbg !11977, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_use_setstate) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v__dict) #11, !dbg !11978
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state) #11, !dbg !11978
  ret ptr %219, !dbg !11979
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetAttr3(ptr noundef %o, ptr noundef %n, ptr noundef %d) #3 !dbg !11980 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !11982, metadata !DIExpression()), !dbg !11986
  store ptr %n, ptr %n.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !11983, metadata !DIExpression()), !dbg !11987
  store ptr %d, ptr %d.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %d.addr, metadata !11984, metadata !DIExpression()), !dbg !11988
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #11, !dbg !11989
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !11985, metadata !DIExpression()), !dbg !11990
  %0 = load ptr, ptr %n.addr, align 8, !dbg !11991, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !11991
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456), !dbg !11991
  %tobool = icmp ne i32 %call1, 0, !dbg !11991
  %lnot = xor i1 %tobool, true, !dbg !11991
  %lnot2 = xor i1 %lnot, true, !dbg !11991
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11991
  %conv = sext i32 %lnot.ext to i64, !dbg !11991
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !11991
  %tobool3 = icmp ne i64 %expval, 0, !dbg !11991
  br i1 %tobool3, label %if.then, label %if.end27, !dbg !11993

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !11994, !tbaa !1899
  %2 = load ptr, ptr %n.addr, align 8, !dbg !11996, !tbaa !1899
  %call4 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %1, ptr noundef %2), !dbg !11997
  store ptr %call4, ptr %r, align 8, !dbg !11998, !tbaa !1899
  %3 = load ptr, ptr %r, align 8, !dbg !11999, !tbaa !1899
  %tobool5 = icmp ne ptr %3, null, !dbg !11999
  %lnot6 = xor i1 %tobool5, true, !dbg !11999
  %lnot8 = xor i1 %lnot6, true, !dbg !11999
  %lnot10 = xor i1 %lnot8, true, !dbg !11999
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !11999
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !11999
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !11999
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !11999
  br i1 %tobool14, label %land.lhs.true, label %if.end, !dbg !12001

land.lhs.true:                                    ; preds = %if.then
  %call15 = call ptr @PyErr_Occurred(), !dbg !12002
  %tobool16 = icmp ne ptr %call15, null, !dbg !12002
  %lnot17 = xor i1 %tobool16, true, !dbg !12002
  %lnot19 = xor i1 %lnot17, true, !dbg !12002
  %lnot21 = xor i1 %lnot19, true, !dbg !12002
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !12002
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !12002
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !12002
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !12002
  br i1 %tobool25, label %if.then26, label %if.end, !dbg !12003

if.then26:                                        ; preds = %land.lhs.true
  %4 = load ptr, ptr %d.addr, align 8, !dbg !12004, !tbaa !1899
  call void @Py_INCREF(ptr noundef %4), !dbg !12004
  %5 = load ptr, ptr %d.addr, align 8, !dbg !12004, !tbaa !1899
  store ptr %5, ptr %r, align 8, !dbg !12006, !tbaa !1899
  br label %if.end, !dbg !12007

if.end:                                           ; preds = %if.then26, %land.lhs.true, %if.then
  %6 = load ptr, ptr %r, align 8, !dbg !12008, !tbaa !1899
  store ptr %6, ptr %retval, align 8, !dbg !12009
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12009

if.end27:                                         ; preds = %entry
  %7 = load ptr, ptr %o.addr, align 8, !dbg !12010, !tbaa !1899
  %8 = load ptr, ptr %n.addr, align 8, !dbg !12011, !tbaa !1899
  %call28 = call ptr @PyObject_GetAttr(ptr noundef %7, ptr noundef %8), !dbg !12012
  store ptr %call28, ptr %r, align 8, !dbg !12013, !tbaa !1899
  %9 = load ptr, ptr %r, align 8, !dbg !12014, !tbaa !1899
  %tobool29 = icmp ne ptr %9, null, !dbg !12014
  %lnot30 = xor i1 %tobool29, true, !dbg !12014
  %lnot32 = xor i1 %lnot30, true, !dbg !12014
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !12014
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !12014
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 1), !dbg !12014
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !12014
  br i1 %tobool36, label %cond.true, label %cond.false, !dbg !12015

cond.true:                                        ; preds = %if.end27
  %10 = load ptr, ptr %r, align 8, !dbg !12016, !tbaa !1899
  br label %cond.end, !dbg !12015

cond.false:                                       ; preds = %if.end27
  %11 = load ptr, ptr %d.addr, align 8, !dbg !12017, !tbaa !1899
  %call37 = call ptr @__Pyx_GetAttr3Default(ptr noundef %11), !dbg !12018
  br label %cond.end, !dbg !12015

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %10, %cond.true ], [ %call37, %cond.false ], !dbg !12015
  store ptr %cond, ptr %retval, align 8, !dbg !12019
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12019

cleanup:                                          ; preds = %cond.end, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #11, !dbg !12020
  %12 = load ptr, ptr %retval, align 8, !dbg !12020
  ret ptr %12, !dbg !12020
}

declare !dbg !12021 ptr @PyNumber_InPlaceAdd(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetAttr3Default(ptr noundef %d) #0 !dbg !12022 {
entry:
  %retval = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %__pyx_tstate = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %d, ptr %d.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %d.addr, metadata !12024, metadata !DIExpression()), !dbg !12026
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #11, !dbg !12027
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !12025, metadata !DIExpression()), !dbg !12027
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !12028
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !12028, !tbaa !1899
  %0 = load ptr, ptr %__pyx_tstate, align 8, !dbg !12029, !tbaa !1899
  %1 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !12029, !tbaa !1899
  %call1 = call i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %0, ptr noundef %1), !dbg !12029
  %tobool = icmp ne i32 %call1, 0, !dbg !12029
  %lnot = xor i1 %tobool, true, !dbg !12029
  %lnot2 = xor i1 %lnot, true, !dbg !12029
  %lnot3 = xor i1 %lnot2, true, !dbg !12029
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12029
  %conv = sext i32 %lnot.ext to i64, !dbg !12029
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12029
  %tobool4 = icmp ne i64 %expval, 0, !dbg !12029
  br i1 %tobool4, label %if.then, label %if.end, !dbg !12031

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !12032
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12032

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %__pyx_tstate, align 8, !dbg !12033, !tbaa !1899
  call void @__Pyx_ErrRestoreInState(ptr noundef %2, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !12033
  %3 = load ptr, ptr %d.addr, align 8, !dbg !12034, !tbaa !1899
  call void @Py_INCREF(ptr noundef %3), !dbg !12034
  %4 = load ptr, ptr %d.addr, align 8, !dbg !12035, !tbaa !1899
  store ptr %4, ptr %retval, align 8, !dbg !12036
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12036

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #11, !dbg !12037
  %5 = load ptr, ptr %retval, align 8, !dbg !12037
  ret ptr %5, !dbg !12037
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_4Plex_3DFA_8StateMap_8__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 !dbg !12038 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !12040, metadata !DIExpression()), !dbg !12049
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !12041, metadata !DIExpression()), !dbg !12050
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !12051
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !12042, metadata !DIExpression()), !dbg !12052
  store ptr null, ptr %__pyx_r, align 8, !dbg !12052, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !12053
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !12043, metadata !DIExpression()), !dbg !12054
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12054, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !12055
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !12044, metadata !DIExpression()), !dbg !12056
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !12056, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !12057
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !12045, metadata !DIExpression()), !dbg !12058
  store ptr null, ptr %__pyx_filename, align 8, !dbg !12058, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !12059
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !12046, metadata !DIExpression()), !dbg !12060
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !12060, !tbaa !1984
  %0 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12061, !tbaa !1899
  %call = call i32 @Py_IS_TYPE(ptr noundef %0, ptr noundef @PyTuple_Type), !dbg !12061
  %tobool = icmp ne i32 %call, 0, !dbg !12061
  %lnot = xor i1 %tobool, true, !dbg !12061
  %lnot1 = xor i1 %lnot, true, !dbg !12061
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12061
  %conv = sext i32 %lnot.ext to i64, !dbg !12061
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !12061
  %tobool2 = icmp ne i64 %expval, 0, !dbg !12061
  br i1 %tobool2, label %if.end, label %lor.lhs.false, !dbg !12063

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12064, !tbaa !1899
  %cmp = icmp eq ptr %1, @_Py_NoneStruct, !dbg !12065
  br i1 %cmp, label %if.end, label %lor.lhs.false4, !dbg !12066

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12067, !tbaa !1899
  %call5 = call i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef @.str.111, ptr noundef %2), !dbg !12068
  %tobool6 = icmp ne i32 %call5, 0, !dbg !12068
  br i1 %tobool6, label %if.end, label %if.then, !dbg !12069

if.then:                                          ; preds = %lor.lhs.false4
  %3 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12070, !tbaa !1899
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !12070, !tbaa !1899
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !12070, !tbaa !1899
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !12070, !tbaa !1984
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !12070, !tbaa !1984
  store i32 5620, ptr %__pyx_clineno, align 4, !dbg !12070, !tbaa !1984
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !12070, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12073

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %7 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !12074, !tbaa !1899
  %8 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12075, !tbaa !1899
  %call7 = call ptr @__pyx_f_6Cython_4Plex_3DFA___pyx_unpickle_StateMap__set_state(ptr noundef %7, ptr noundef %8), !dbg !12076
  store ptr %call7, ptr %__pyx_t_1, align 8, !dbg !12077, !tbaa !1899
  %9 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12078, !tbaa !1899
  %tobool8 = icmp ne ptr %9, null, !dbg !12078
  %lnot9 = xor i1 %tobool8, true, !dbg !12078
  %lnot11 = xor i1 %lnot9, true, !dbg !12078
  %lnot13 = xor i1 %lnot11, true, !dbg !12078
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !12078
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !12078
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0), !dbg !12078
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !12078
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !12080

if.then18:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12081, !tbaa !1899
  store ptr %10, ptr %__pyx_filename, align 8, !dbg !12081, !tbaa !1899
  %11 = load ptr, ptr %__pyx_filename, align 8, !dbg !12081, !tbaa !1899
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !12081, !tbaa !1984
  %12 = load i32, ptr %__pyx_lineno, align 4, !dbg !12081, !tbaa !1984
  store i32 5621, ptr %__pyx_clineno, align 4, !dbg !12081, !tbaa !1984
  %13 = load i32, ptr %__pyx_clineno, align 4, !dbg !12081, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12084

if.end19:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12085, !tbaa !1899
  call void @Py_DECREF(ptr noundef %14), !dbg !12085
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12086, !tbaa !1899
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !12087, !tbaa !1899
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !12088
  br label %__pyx_L0, !dbg !12089

__pyx_L1_error:                                   ; preds = %if.then18, %if.then
  tail call void @llvm.dbg.label(metadata !12047), !dbg !12090
  %15 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12091, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %15), !dbg !12091
  %16 = load i32, ptr %__pyx_clineno, align 4, !dbg !12092, !tbaa !1984
  %17 = load i32, ptr %__pyx_lineno, align 4, !dbg !12093, !tbaa !1984
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !12094, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.112, i32 noundef %16, i32 noundef %17, ptr noundef %18), !dbg !12095
  store ptr null, ptr %__pyx_r, align 8, !dbg !12096, !tbaa !1899
  br label %__pyx_L0, !dbg !12097

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end19
  tail call void @llvm.dbg.label(metadata !12048), !dbg !12098
  %19 = load ptr, ptr %__pyx_r, align 8, !dbg !12099, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !12100
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !12100
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !12100
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !12100
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !12100
  ret ptr %19, !dbg !12101
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_4Plex_3DFA___pyx_unpickle_StateMap__set_state(ptr noundef %__pyx_v___pyx_result, ptr noundef %__pyx_v___pyx_state) #0 !dbg !12102 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v___pyx_result.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %__pyx_callargs = alloca [2 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v___pyx_result, ptr %__pyx_v___pyx_result.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_result.addr, metadata !12104, metadata !DIExpression()), !dbg !12132
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !12105, metadata !DIExpression()), !dbg !12133
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !12134
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !12106, metadata !DIExpression()), !dbg !12135
  store ptr null, ptr %__pyx_r, align 8, !dbg !12135, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !12136
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !12107, metadata !DIExpression()), !dbg !12137
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12137, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !12138
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !12108, metadata !DIExpression()), !dbg !12139
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !12140
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !12109, metadata !DIExpression()), !dbg !12141
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !12142
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !12110, metadata !DIExpression()), !dbg !12143
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !12144
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !12111, metadata !DIExpression()), !dbg !12145
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !12145, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #11, !dbg !12146
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !12112, metadata !DIExpression()), !dbg !12147
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !12147, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !12148
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !12113, metadata !DIExpression()), !dbg !12149
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !12149, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_8) #11, !dbg !12150
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !12114, metadata !DIExpression()), !dbg !12151
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !12152
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !12115, metadata !DIExpression()), !dbg !12153
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !12153, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !12154
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !12116, metadata !DIExpression()), !dbg !12155
  store ptr null, ptr %__pyx_filename, align 8, !dbg !12155, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !12156
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !12117, metadata !DIExpression()), !dbg !12157
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !12157, !tbaa !1984
  %0 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12158, !tbaa !1899
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !12158
  %lnot = xor i1 %cmp, true, !dbg !12158
  %lnot1 = xor i1 %lnot, true, !dbg !12158
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12158
  %conv = sext i32 %lnot.ext to i64, !dbg !12158
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12158
  %tobool = icmp ne i64 %expval, 0, !dbg !12158
  br i1 %tobool, label %if.then, label %if.end, !dbg !12160

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12161, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.89), !dbg !12163
  %2 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12164, !tbaa !1899
  store ptr %2, ptr %__pyx_filename, align 8, !dbg !12164, !tbaa !1899
  %3 = load ptr, ptr %__pyx_filename, align 8, !dbg !12164, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12164, !tbaa !1984
  %4 = load i32, ptr %__pyx_lineno, align 4, !dbg !12164, !tbaa !1984
  store i32 5983, ptr %__pyx_clineno, align 4, !dbg !12164, !tbaa !1984
  %5 = load i32, ptr %__pyx_clineno, align 4, !dbg !12164, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12167

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12168, !tbaa !1899
  %call = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %6, i64 noundef 0, i32 noundef 0, i32 noundef 1), !dbg !12168
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !12169, !tbaa !1899
  %7 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12170, !tbaa !1899
  %tobool2 = icmp ne ptr %7, null, !dbg !12170
  %lnot3 = xor i1 %tobool2, true, !dbg !12170
  %lnot5 = xor i1 %lnot3, true, !dbg !12170
  %lnot7 = xor i1 %lnot5, true, !dbg !12170
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !12170
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !12170
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !12170
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !12170
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !12172

if.then12:                                        ; preds = %if.end
  %8 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12173, !tbaa !1899
  store ptr %8, ptr %__pyx_filename, align 8, !dbg !12173, !tbaa !1899
  %9 = load ptr, ptr %__pyx_filename, align 8, !dbg !12173, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12173, !tbaa !1984
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !12173, !tbaa !1984
  store i32 5985, ptr %__pyx_clineno, align 4, !dbg !12173, !tbaa !1984
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !12173, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12176

if.end13:                                         ; preds = %if.end
  %12 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12177, !tbaa !1899
  %cmp14 = icmp eq ptr %12, @_Py_NoneStruct, !dbg !12177
  br i1 %cmp14, label %lor.end, label %lor.rhs, !dbg !12177

lor.rhs:                                          ; preds = %if.end13
  %13 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12177, !tbaa !1899
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12177, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 17, !dbg !12177
  %15 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine, align 8, !dbg !12177, !tbaa !3568
  %call16 = call i32 @__Pyx_TypeTest(ptr noundef %13, ptr noundef %15), !dbg !12177
  %tobool17 = icmp ne i32 %call16, 0, !dbg !12177
  %lnot18 = xor i1 %tobool17, true, !dbg !12177
  %lnot20 = xor i1 %lnot18, true, !dbg !12177
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !12177
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !12177
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 1), !dbg !12177
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !12177
  br label %lor.end, !dbg !12177

lor.end:                                          ; preds = %lor.rhs, %if.end13
  %16 = phi i1 [ true, %if.end13 ], [ %tobool24, %lor.rhs ]
  %lnot25 = xor i1 %16, true, !dbg !12177
  %lnot27 = xor i1 %lnot25, true, !dbg !12177
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !12177
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !12177
  %expval30 = call i64 @llvm.expect.i64(i64 %conv29, i64 1), !dbg !12177
  %tobool31 = icmp ne i64 %expval30, 0, !dbg !12177
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !12179

if.then32:                                        ; preds = %lor.end
  %17 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12180, !tbaa !1899
  store ptr %17, ptr %__pyx_filename, align 8, !dbg !12180, !tbaa !1899
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !12180, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12180, !tbaa !1984
  %19 = load i32, ptr %__pyx_lineno, align 4, !dbg !12180, !tbaa !1984
  store i32 5987, ptr %__pyx_clineno, align 4, !dbg !12180, !tbaa !1984
  %20 = load i32, ptr %__pyx_clineno, align 4, !dbg !12180, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12183

if.end33:                                         ; preds = %lor.end
  %21 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12184, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %21, i32 0, i32 2, !dbg !12184
  %22 = load ptr, ptr %new_machine, align 8, !dbg !12184, !tbaa !8661
  call void @Py_DECREF(ptr noundef %22), !dbg !12184
  %23 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12185, !tbaa !1899
  %24 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12186, !tbaa !1899
  %new_machine34 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %24, i32 0, i32 2, !dbg !12187
  store ptr %23, ptr %new_machine34, align 8, !dbg !12188, !tbaa !8661
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12189, !tbaa !1899
  %25 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12190, !tbaa !1899
  %cmp35 = icmp eq ptr %25, @_Py_NoneStruct, !dbg !12190
  %lnot37 = xor i1 %cmp35, true, !dbg !12190
  %lnot39 = xor i1 %lnot37, true, !dbg !12190
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !12190
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !12190
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 0), !dbg !12190
  %tobool43 = icmp ne i64 %expval42, 0, !dbg !12190
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !12192

if.then44:                                        ; preds = %if.end33
  %26 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12193, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %26, ptr noundef @.str.89), !dbg !12195
  %27 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12196, !tbaa !1899
  store ptr %27, ptr %__pyx_filename, align 8, !dbg !12196, !tbaa !1899
  %28 = load ptr, ptr %__pyx_filename, align 8, !dbg !12196, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12196, !tbaa !1984
  %29 = load i32, ptr %__pyx_lineno, align 4, !dbg !12196, !tbaa !1984
  store i32 5995, ptr %__pyx_clineno, align 4, !dbg !12196, !tbaa !1984
  %30 = load i32, ptr %__pyx_clineno, align 4, !dbg !12196, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12199

if.end45:                                         ; preds = %if.end33
  %31 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12200, !tbaa !1899
  %call46 = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %31, i64 noundef 1, i32 noundef 0, i32 noundef 1), !dbg !12200
  store ptr %call46, ptr %__pyx_t_1, align 8, !dbg !12201, !tbaa !1899
  %32 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12202, !tbaa !1899
  %tobool47 = icmp ne ptr %32, null, !dbg !12202
  %lnot48 = xor i1 %tobool47, true, !dbg !12202
  %lnot50 = xor i1 %lnot48, true, !dbg !12202
  %lnot52 = xor i1 %lnot50, true, !dbg !12202
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !12202
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !12202
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 0), !dbg !12202
  %tobool56 = icmp ne i64 %expval55, 0, !dbg !12202
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !12204

if.then57:                                        ; preds = %if.end45
  %33 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12205, !tbaa !1899
  store ptr %33, ptr %__pyx_filename, align 8, !dbg !12205, !tbaa !1899
  %34 = load ptr, ptr %__pyx_filename, align 8, !dbg !12205, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12205, !tbaa !1984
  %35 = load i32, ptr %__pyx_lineno, align 4, !dbg !12205, !tbaa !1984
  store i32 5997, ptr %__pyx_clineno, align 4, !dbg !12205, !tbaa !1984
  %36 = load i32, ptr %__pyx_clineno, align 4, !dbg !12205, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12208

if.end58:                                         ; preds = %if.end45
  %37 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12209, !tbaa !1899
  %call59 = call i32 @Py_IS_TYPE(ptr noundef %37, ptr noundef @PyDict_Type), !dbg !12209
  %tobool60 = icmp ne i32 %call59, 0, !dbg !12209
  %lnot61 = xor i1 %tobool60, true, !dbg !12209
  %lnot63 = xor i1 %lnot61, true, !dbg !12209
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !12209
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !12209
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 1), !dbg !12209
  %tobool67 = icmp ne i64 %expval66, 0, !dbg !12209
  br i1 %tobool67, label %if.end74, label %lor.lhs.false, !dbg !12211

lor.lhs.false:                                    ; preds = %if.end58
  %38 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12212, !tbaa !1899
  %cmp68 = icmp eq ptr %38, @_Py_NoneStruct, !dbg !12213
  br i1 %cmp68, label %if.end74, label %lor.lhs.false70, !dbg !12214

lor.lhs.false70:                                  ; preds = %lor.lhs.false
  %39 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12215, !tbaa !1899
  %call71 = call i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef @.str.79, ptr noundef %39), !dbg !12216
  %tobool72 = icmp ne i32 %call71, 0, !dbg !12216
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !12217

if.then73:                                        ; preds = %lor.lhs.false70
  %40 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12218, !tbaa !1899
  store ptr %40, ptr %__pyx_filename, align 8, !dbg !12218, !tbaa !1899
  %41 = load ptr, ptr %__pyx_filename, align 8, !dbg !12218, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12218, !tbaa !1984
  %42 = load i32, ptr %__pyx_lineno, align 4, !dbg !12218, !tbaa !1984
  store i32 5999, ptr %__pyx_clineno, align 4, !dbg !12218, !tbaa !1984
  %43 = load i32, ptr %__pyx_clineno, align 4, !dbg !12218, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12221

if.end74:                                         ; preds = %lor.lhs.false70, %lor.lhs.false, %if.end58
  %44 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12222, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %44, i32 0, i32 4, !dbg !12222
  %45 = load ptr, ptr %new_to_old_dict, align 8, !dbg !12222, !tbaa !8732
  call void @Py_DECREF(ptr noundef %45), !dbg !12222
  %46 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12223, !tbaa !1899
  %47 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12224, !tbaa !1899
  %new_to_old_dict75 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %47, i32 0, i32 4, !dbg !12225
  store ptr %46, ptr %new_to_old_dict75, align 8, !dbg !12226, !tbaa !8732
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12227, !tbaa !1899
  %48 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12228, !tbaa !1899
  %cmp76 = icmp eq ptr %48, @_Py_NoneStruct, !dbg !12228
  %lnot78 = xor i1 %cmp76, true, !dbg !12228
  %lnot80 = xor i1 %lnot78, true, !dbg !12228
  %lnot.ext81 = zext i1 %lnot80 to i32, !dbg !12228
  %conv82 = sext i32 %lnot.ext81 to i64, !dbg !12228
  %expval83 = call i64 @llvm.expect.i64(i64 %conv82, i64 0), !dbg !12228
  %tobool84 = icmp ne i64 %expval83, 0, !dbg !12228
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !12230

if.then85:                                        ; preds = %if.end74
  %49 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12231, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %49, ptr noundef @.str.89), !dbg !12233
  %50 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12234, !tbaa !1899
  store ptr %50, ptr %__pyx_filename, align 8, !dbg !12234, !tbaa !1899
  %51 = load ptr, ptr %__pyx_filename, align 8, !dbg !12234, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12234, !tbaa !1984
  %52 = load i32, ptr %__pyx_lineno, align 4, !dbg !12234, !tbaa !1984
  store i32 6007, ptr %__pyx_clineno, align 4, !dbg !12234, !tbaa !1984
  %53 = load i32, ptr %__pyx_clineno, align 4, !dbg !12234, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12237

if.end86:                                         ; preds = %if.end74
  %54 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12238, !tbaa !1899
  %call87 = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %54, i64 noundef 2, i32 noundef 0, i32 noundef 1), !dbg !12238
  store ptr %call87, ptr %__pyx_t_1, align 8, !dbg !12239, !tbaa !1899
  %55 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12240, !tbaa !1899
  %tobool88 = icmp ne ptr %55, null, !dbg !12240
  %lnot89 = xor i1 %tobool88, true, !dbg !12240
  %lnot91 = xor i1 %lnot89, true, !dbg !12240
  %lnot93 = xor i1 %lnot91, true, !dbg !12240
  %lnot.ext94 = zext i1 %lnot93 to i32, !dbg !12240
  %conv95 = sext i32 %lnot.ext94 to i64, !dbg !12240
  %expval96 = call i64 @llvm.expect.i64(i64 %conv95, i64 0), !dbg !12240
  %tobool97 = icmp ne i64 %expval96, 0, !dbg !12240
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !12242

if.then98:                                        ; preds = %if.end86
  %56 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12243, !tbaa !1899
  store ptr %56, ptr %__pyx_filename, align 8, !dbg !12243, !tbaa !1899
  %57 = load ptr, ptr %__pyx_filename, align 8, !dbg !12243, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12243, !tbaa !1984
  %58 = load i32, ptr %__pyx_lineno, align 4, !dbg !12243, !tbaa !1984
  store i32 6009, ptr %__pyx_clineno, align 4, !dbg !12243, !tbaa !1984
  %59 = load i32, ptr %__pyx_clineno, align 4, !dbg !12243, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12246

if.end99:                                         ; preds = %if.end86
  %60 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12247, !tbaa !1899
  %call100 = call i32 @Py_IS_TYPE(ptr noundef %60, ptr noundef @PyDict_Type), !dbg !12247
  %tobool101 = icmp ne i32 %call100, 0, !dbg !12247
  %lnot102 = xor i1 %tobool101, true, !dbg !12247
  %lnot104 = xor i1 %lnot102, true, !dbg !12247
  %lnot.ext105 = zext i1 %lnot104 to i32, !dbg !12247
  %conv106 = sext i32 %lnot.ext105 to i64, !dbg !12247
  %expval107 = call i64 @llvm.expect.i64(i64 %conv106, i64 1), !dbg !12247
  %tobool108 = icmp ne i64 %expval107, 0, !dbg !12247
  br i1 %tobool108, label %if.end116, label %lor.lhs.false109, !dbg !12249

lor.lhs.false109:                                 ; preds = %if.end99
  %61 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12250, !tbaa !1899
  %cmp110 = icmp eq ptr %61, @_Py_NoneStruct, !dbg !12251
  br i1 %cmp110, label %if.end116, label %lor.lhs.false112, !dbg !12252

lor.lhs.false112:                                 ; preds = %lor.lhs.false109
  %62 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12253, !tbaa !1899
  %call113 = call i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef @.str.79, ptr noundef %62), !dbg !12254
  %tobool114 = icmp ne i32 %call113, 0, !dbg !12254
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !12255

if.then115:                                       ; preds = %lor.lhs.false112
  %63 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12256, !tbaa !1899
  store ptr %63, ptr %__pyx_filename, align 8, !dbg !12256, !tbaa !1899
  %64 = load ptr, ptr %__pyx_filename, align 8, !dbg !12256, !tbaa !1899
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !12256, !tbaa !1984
  %65 = load i32, ptr %__pyx_lineno, align 4, !dbg !12256, !tbaa !1984
  store i32 6011, ptr %__pyx_clineno, align 4, !dbg !12256, !tbaa !1984
  %66 = load i32, ptr %__pyx_clineno, align 4, !dbg !12256, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12259

if.end116:                                        ; preds = %lor.lhs.false112, %lor.lhs.false109, %if.end99
  %67 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12260, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %67, i32 0, i32 3, !dbg !12260
  %68 = load ptr, ptr %old_to_new_dict, align 8, !dbg !12260, !tbaa !8605
  call void @Py_DECREF(ptr noundef %68), !dbg !12260
  %69 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12261, !tbaa !1899
  %70 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12262, !tbaa !1899
  %old_to_new_dict117 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %70, i32 0, i32 3, !dbg !12263
  store ptr %69, ptr %old_to_new_dict117, align 8, !dbg !12264, !tbaa !8605
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12265, !tbaa !1899
  %71 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12266, !tbaa !1899
  %cmp118 = icmp eq ptr %71, @_Py_NoneStruct, !dbg !12266
  %lnot120 = xor i1 %cmp118, true, !dbg !12266
  %lnot122 = xor i1 %lnot120, true, !dbg !12266
  %lnot.ext123 = zext i1 %lnot122 to i32, !dbg !12266
  %conv124 = sext i32 %lnot.ext123 to i64, !dbg !12266
  %expval125 = call i64 @llvm.expect.i64(i64 %conv124, i64 0), !dbg !12266
  %tobool126 = icmp ne i64 %expval125, 0, !dbg !12266
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !12268

if.then127:                                       ; preds = %if.end116
  %72 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12269, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %72, ptr noundef @.str.113), !dbg !12271
  %73 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12272, !tbaa !1899
  store ptr %73, ptr %__pyx_filename, align 8, !dbg !12272, !tbaa !1899
  %74 = load ptr, ptr %__pyx_filename, align 8, !dbg !12272, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !12272, !tbaa !1984
  %75 = load i32, ptr %__pyx_lineno, align 4, !dbg !12272, !tbaa !1984
  store i32 6026, ptr %__pyx_clineno, align 4, !dbg !12272, !tbaa !1984
  %76 = load i32, ptr %__pyx_clineno, align 4, !dbg !12272, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12275

if.end128:                                        ; preds = %if.end116
  %77 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12276, !tbaa !1899
  %call129 = call i64 @PyTuple_GET_SIZE(ptr noundef %77), !dbg !12276
  store i64 %call129, ptr %__pyx_t_3, align 8, !dbg !12277, !tbaa !2597
  %78 = load i64, ptr %__pyx_t_3, align 8, !dbg !12278, !tbaa !2597
  %cmp130 = icmp eq i64 %78, -1, !dbg !12278
  %lnot132 = xor i1 %cmp130, true, !dbg !12278
  %lnot134 = xor i1 %lnot132, true, !dbg !12278
  %lnot.ext135 = zext i1 %lnot134 to i32, !dbg !12278
  %conv136 = sext i32 %lnot.ext135 to i64, !dbg !12278
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 0), !dbg !12278
  %tobool138 = icmp ne i64 %expval137, 0, !dbg !12278
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !12280

if.then139:                                       ; preds = %if.end128
  %79 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12281, !tbaa !1899
  store ptr %79, ptr %__pyx_filename, align 8, !dbg !12281, !tbaa !1899
  %80 = load ptr, ptr %__pyx_filename, align 8, !dbg !12281, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !12281, !tbaa !1984
  %81 = load i32, ptr %__pyx_lineno, align 4, !dbg !12281, !tbaa !1984
  store i32 6028, ptr %__pyx_clineno, align 4, !dbg !12281, !tbaa !1984
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !12281, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12284

if.end140:                                        ; preds = %if.end128
  %83 = load i64, ptr %__pyx_t_3, align 8, !dbg !12285, !tbaa !2597
  %cmp141 = icmp sgt i64 %83, 3, !dbg !12286
  %conv142 = zext i1 %cmp141 to i32, !dbg !12286
  store i32 %conv142, ptr %__pyx_t_4, align 4, !dbg !12287, !tbaa !1984
  %84 = load i32, ptr %__pyx_t_4, align 4, !dbg !12288, !tbaa !1984
  %tobool143 = icmp ne i32 %84, 0, !dbg !12288
  br i1 %tobool143, label %if.then144, label %if.else, !dbg !12290

if.then144:                                       ; preds = %if.end140
  br label %if.end145, !dbg !12291

if.else:                                          ; preds = %if.end140
  %85 = load i32, ptr %__pyx_t_4, align 4, !dbg !12293, !tbaa !1984
  store i32 %85, ptr %__pyx_t_2, align 4, !dbg !12295, !tbaa !1984
  br label %__pyx_L4_bool_binop_done, !dbg !12296

if.end145:                                        ; preds = %if.then144
  %86 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12297, !tbaa !1899
  %87 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12298, !tbaa !1899
  %__pyx_n_s_dict = getelementptr inbounds %struct.__pyx_mstate, ptr %87, i32 0, i32 43, !dbg !12298
  %88 = load ptr, ptr %__pyx_n_s_dict, align 8, !dbg !12298, !tbaa !11714
  %call146 = call i32 @__Pyx_HasAttr(ptr noundef %86, ptr noundef %88), !dbg !12299
  store i32 %call146, ptr %__pyx_t_4, align 4, !dbg !12300, !tbaa !1984
  %89 = load i32, ptr %__pyx_t_4, align 4, !dbg !12301, !tbaa !1984
  %cmp147 = icmp eq i32 %89, -1, !dbg !12301
  %lnot149 = xor i1 %cmp147, true, !dbg !12301
  %lnot151 = xor i1 %lnot149, true, !dbg !12301
  %lnot.ext152 = zext i1 %lnot151 to i32, !dbg !12301
  %conv153 = sext i32 %lnot.ext152 to i64, !dbg !12301
  %expval154 = call i64 @llvm.expect.i64(i64 %conv153, i64 0), !dbg !12301
  %tobool155 = icmp ne i64 %expval154, 0, !dbg !12301
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !12303

if.then156:                                       ; preds = %if.end145
  %90 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12304, !tbaa !1899
  store ptr %90, ptr %__pyx_filename, align 8, !dbg !12304, !tbaa !1899
  %91 = load ptr, ptr %__pyx_filename, align 8, !dbg !12304, !tbaa !1899
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !12304, !tbaa !1984
  %92 = load i32, ptr %__pyx_lineno, align 4, !dbg !12304, !tbaa !1984
  store i32 6035, ptr %__pyx_clineno, align 4, !dbg !12304, !tbaa !1984
  %93 = load i32, ptr %__pyx_clineno, align 4, !dbg !12304, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12307

if.end157:                                        ; preds = %if.end145
  %94 = load i32, ptr %__pyx_t_4, align 4, !dbg !12308, !tbaa !1984
  store i32 %94, ptr %__pyx_t_2, align 4, !dbg !12309, !tbaa !1984
  br label %__pyx_L4_bool_binop_done, !dbg !12310

__pyx_L4_bool_binop_done:                         ; preds = %if.end157, %if.else
  tail call void @llvm.dbg.label(metadata !12118), !dbg !12311
  %95 = load i32, ptr %__pyx_t_2, align 4, !dbg !12312, !tbaa !1984
  %tobool158 = icmp ne i32 %95, 0, !dbg !12312
  br i1 %tobool158, label %if.then159, label %if.end247, !dbg !12313

if.then159:                                       ; preds = %__pyx_L4_bool_binop_done
  %96 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !12314, !tbaa !1899
  %97 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12315, !tbaa !1899
  %__pyx_n_s_dict160 = getelementptr inbounds %struct.__pyx_mstate, ptr %97, i32 0, i32 43, !dbg !12315
  %98 = load ptr, ptr %__pyx_n_s_dict160, align 8, !dbg !12315, !tbaa !11714
  %call161 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %96, ptr noundef %98), !dbg !12316
  store ptr %call161, ptr %__pyx_t_5, align 8, !dbg !12317, !tbaa !1899
  %99 = load ptr, ptr %__pyx_t_5, align 8, !dbg !12318, !tbaa !1899
  %tobool162 = icmp ne ptr %99, null, !dbg !12318
  %lnot163 = xor i1 %tobool162, true, !dbg !12318
  %lnot165 = xor i1 %lnot163, true, !dbg !12318
  %lnot167 = xor i1 %lnot165, true, !dbg !12318
  %lnot.ext168 = zext i1 %lnot167 to i32, !dbg !12318
  %conv169 = sext i32 %lnot.ext168 to i64, !dbg !12318
  %expval170 = call i64 @llvm.expect.i64(i64 %conv169, i64 0), !dbg !12318
  %tobool171 = icmp ne i64 %expval170, 0, !dbg !12318
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !12320

if.then172:                                       ; preds = %if.then159
  %100 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12321, !tbaa !1899
  store ptr %100, ptr %__pyx_filename, align 8, !dbg !12321, !tbaa !1899
  %101 = load ptr, ptr %__pyx_filename, align 8, !dbg !12321, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !12321, !tbaa !1984
  %102 = load i32, ptr %__pyx_lineno, align 4, !dbg !12321, !tbaa !1984
  store i32 6045, ptr %__pyx_clineno, align 4, !dbg !12321, !tbaa !1984
  %103 = load i32, ptr %__pyx_clineno, align 4, !dbg !12321, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12324

if.end173:                                        ; preds = %if.then159
  %104 = load ptr, ptr %__pyx_t_5, align 8, !dbg !12325, !tbaa !1899
  %105 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12326, !tbaa !1899
  %__pyx_n_s_update = getelementptr inbounds %struct.__pyx_mstate, ptr %105, i32 0, i32 87, !dbg !12326
  %106 = load ptr, ptr %__pyx_n_s_update, align 8, !dbg !12326, !tbaa !12327
  %call174 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %104, ptr noundef %106), !dbg !12328
  store ptr %call174, ptr %__pyx_t_6, align 8, !dbg !12329, !tbaa !1899
  %107 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12330, !tbaa !1899
  %tobool175 = icmp ne ptr %107, null, !dbg !12330
  %lnot176 = xor i1 %tobool175, true, !dbg !12330
  %lnot178 = xor i1 %lnot176, true, !dbg !12330
  %lnot180 = xor i1 %lnot178, true, !dbg !12330
  %lnot.ext181 = zext i1 %lnot180 to i32, !dbg !12330
  %conv182 = sext i32 %lnot.ext181 to i64, !dbg !12330
  %expval183 = call i64 @llvm.expect.i64(i64 %conv182, i64 0), !dbg !12330
  %tobool184 = icmp ne i64 %expval183, 0, !dbg !12330
  br i1 %tobool184, label %if.then185, label %if.end186, !dbg !12332

if.then185:                                       ; preds = %if.end173
  %108 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12333, !tbaa !1899
  store ptr %108, ptr %__pyx_filename, align 8, !dbg !12333, !tbaa !1899
  %109 = load ptr, ptr %__pyx_filename, align 8, !dbg !12333, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !12333, !tbaa !1984
  %110 = load i32, ptr %__pyx_lineno, align 4, !dbg !12333, !tbaa !1984
  store i32 6047, ptr %__pyx_clineno, align 4, !dbg !12333, !tbaa !1984
  %111 = load i32, ptr %__pyx_clineno, align 4, !dbg !12333, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12336

if.end186:                                        ; preds = %if.end173
  %112 = load ptr, ptr %__pyx_t_5, align 8, !dbg !12337, !tbaa !1899
  call void @Py_DECREF(ptr noundef %112), !dbg !12337
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !12338, !tbaa !1899
  %113 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12339, !tbaa !1899
  %cmp187 = icmp eq ptr %113, @_Py_NoneStruct, !dbg !12339
  %lnot189 = xor i1 %cmp187, true, !dbg !12339
  %lnot191 = xor i1 %lnot189, true, !dbg !12339
  %lnot.ext192 = zext i1 %lnot191 to i32, !dbg !12339
  %conv193 = sext i32 %lnot.ext192 to i64, !dbg !12339
  %expval194 = call i64 @llvm.expect.i64(i64 %conv193, i64 0), !dbg !12339
  %tobool195 = icmp ne i64 %expval194, 0, !dbg !12339
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !12341

if.then196:                                       ; preds = %if.end186
  %114 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12342, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %114, ptr noundef @.str.89), !dbg !12344
  %115 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12345, !tbaa !1899
  store ptr %115, ptr %__pyx_filename, align 8, !dbg !12345, !tbaa !1899
  %116 = load ptr, ptr %__pyx_filename, align 8, !dbg !12345, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !12345, !tbaa !1984
  %117 = load i32, ptr %__pyx_lineno, align 4, !dbg !12345, !tbaa !1984
  store i32 6052, ptr %__pyx_clineno, align 4, !dbg !12345, !tbaa !1984
  %118 = load i32, ptr %__pyx_clineno, align 4, !dbg !12345, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12348

if.end197:                                        ; preds = %if.end186
  %119 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !12349, !tbaa !1899
  %call198 = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %119, i64 noundef 3, i32 noundef 0, i32 noundef 1), !dbg !12349
  store ptr %call198, ptr %__pyx_t_5, align 8, !dbg !12350, !tbaa !1899
  %120 = load ptr, ptr %__pyx_t_5, align 8, !dbg !12351, !tbaa !1899
  %tobool199 = icmp ne ptr %120, null, !dbg !12351
  %lnot200 = xor i1 %tobool199, true, !dbg !12351
  %lnot202 = xor i1 %lnot200, true, !dbg !12351
  %lnot204 = xor i1 %lnot202, true, !dbg !12351
  %lnot.ext205 = zext i1 %lnot204 to i32, !dbg !12351
  %conv206 = sext i32 %lnot.ext205 to i64, !dbg !12351
  %expval207 = call i64 @llvm.expect.i64(i64 %conv206, i64 0), !dbg !12351
  %tobool208 = icmp ne i64 %expval207, 0, !dbg !12351
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !12353

if.then209:                                       ; preds = %if.end197
  %121 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12354, !tbaa !1899
  store ptr %121, ptr %__pyx_filename, align 8, !dbg !12354, !tbaa !1899
  %122 = load ptr, ptr %__pyx_filename, align 8, !dbg !12354, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !12354, !tbaa !1984
  %123 = load i32, ptr %__pyx_lineno, align 4, !dbg !12354, !tbaa !1984
  store i32 6054, ptr %__pyx_clineno, align 4, !dbg !12354, !tbaa !1984
  %124 = load i32, ptr %__pyx_clineno, align 4, !dbg !12354, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12357

if.end210:                                        ; preds = %if.end197
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !12358, !tbaa !1899
  store i32 0, ptr %__pyx_t_8, align 4, !dbg !12359, !tbaa !1984
  %125 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12360, !tbaa !1899
  %call211 = call i32 @Py_IS_TYPE(ptr noundef %125, ptr noundef @PyMethod_Type), !dbg !12360
  %tobool212 = icmp ne i32 %call211, 0, !dbg !12360
  %lnot213 = xor i1 %tobool212, true, !dbg !12360
  %lnot215 = xor i1 %lnot213, true, !dbg !12360
  %lnot.ext216 = zext i1 %lnot215 to i32, !dbg !12360
  %conv217 = sext i32 %lnot.ext216 to i64, !dbg !12360
  %expval218 = call i64 @llvm.expect.i64(i64 %conv217, i64 1), !dbg !12360
  %tobool219 = icmp ne i64 %expval218, 0, !dbg !12360
  br i1 %tobool219, label %if.then220, label %if.end231, !dbg !12361

if.then220:                                       ; preds = %if.end210
  %126 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12362, !tbaa !1899
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %126, i32 0, i32 2, !dbg !12362
  %127 = load ptr, ptr %im_self, align 8, !dbg !12362, !tbaa !6934
  store ptr %127, ptr %__pyx_t_7, align 8, !dbg !12363, !tbaa !1899
  %128 = load ptr, ptr %__pyx_t_7, align 8, !dbg !12364, !tbaa !1899
  %tobool221 = icmp ne ptr %128, null, !dbg !12364
  %lnot222 = xor i1 %tobool221, true, !dbg !12364
  %lnot224 = xor i1 %lnot222, true, !dbg !12364
  %lnot.ext225 = zext i1 %lnot224 to i32, !dbg !12364
  %conv226 = sext i32 %lnot.ext225 to i64, !dbg !12364
  %expval227 = call i64 @llvm.expect.i64(i64 %conv226, i64 1), !dbg !12364
  %tobool228 = icmp ne i64 %expval227, 0, !dbg !12364
  br i1 %tobool228, label %if.then229, label %if.end230, !dbg !12365

if.then229:                                       ; preds = %if.then220
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #11, !dbg !12366
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !12119, metadata !DIExpression()), !dbg !12367
  %129 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12368, !tbaa !1899
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %129, i32 0, i32 1, !dbg !12368
  %130 = load ptr, ptr %im_func, align 8, !dbg !12368, !tbaa !6942
  store ptr %130, ptr %function, align 8, !dbg !12367, !tbaa !1899
  %131 = load ptr, ptr %__pyx_t_7, align 8, !dbg !12369, !tbaa !1899
  call void @Py_INCREF(ptr noundef %131), !dbg !12369
  %132 = load ptr, ptr %function, align 8, !dbg !12370, !tbaa !1899
  call void @Py_INCREF(ptr noundef %132), !dbg !12370
  br label %do.body, !dbg !12371

do.body:                                          ; preds = %if.then229
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !12372
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !12126, metadata !DIExpression()), !dbg !12372
  %133 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12372, !tbaa !1899
  store ptr %133, ptr %tmp, align 8, !dbg !12372, !tbaa !1899
  %134 = load ptr, ptr %function, align 8, !dbg !12372, !tbaa !1899
  store ptr %134, ptr %__pyx_t_6, align 8, !dbg !12372, !tbaa !1899
  %135 = load ptr, ptr %tmp, align 8, !dbg !12372, !tbaa !1899
  call void @Py_DECREF(ptr noundef %135), !dbg !12372
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !12371
  br label %do.cond, !dbg !12372

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12372

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %__pyx_t_8, align 4, !dbg !12373, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #11, !dbg !12374
  br label %if.end230, !dbg !12375

if.end230:                                        ; preds = %do.end, %if.then220
  br label %if.end231, !dbg !12376

if.end231:                                        ; preds = %if.end230, %if.end210
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !12377
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !12128, metadata !DIExpression()), !dbg !12378
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !12379
  %136 = load ptr, ptr %__pyx_t_7, align 8, !dbg !12380, !tbaa !1899
  store ptr %136, ptr %arrayinit.begin, align 8, !dbg !12379, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !12379
  %137 = load ptr, ptr %__pyx_t_5, align 8, !dbg !12381, !tbaa !1899
  store ptr %137, ptr %arrayinit.element, align 8, !dbg !12379, !tbaa !1899
  %138 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12382, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !12382
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !12382
  %139 = load i32, ptr %__pyx_t_8, align 4, !dbg !12382, !tbaa !1984
  %idx.ext = sext i32 %139 to i64, !dbg !12382
  %idx.neg = sub i64 0, %idx.ext, !dbg !12382
  %add.ptr232 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !12382
  %140 = load i32, ptr %__pyx_t_8, align 4, !dbg !12382, !tbaa !1984
  %add = add i32 1, %140, !dbg !12382
  %conv233 = sext i32 %add to i64, !dbg !12382
  %call234 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %138, ptr noundef %add.ptr232, i64 noundef %conv233, ptr noundef null), !dbg !12382
  store ptr %call234, ptr %__pyx_t_1, align 8, !dbg !12383, !tbaa !1899
  %141 = load ptr, ptr %__pyx_t_7, align 8, !dbg !12384, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %141), !dbg !12384
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !12385, !tbaa !1899
  %142 = load ptr, ptr %__pyx_t_5, align 8, !dbg !12386, !tbaa !1899
  call void @Py_DECREF(ptr noundef %142), !dbg !12386
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !12387, !tbaa !1899
  %143 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12388, !tbaa !1899
  %tobool235 = icmp ne ptr %143, null, !dbg !12388
  %lnot236 = xor i1 %tobool235, true, !dbg !12388
  %lnot238 = xor i1 %lnot236, true, !dbg !12388
  %lnot240 = xor i1 %lnot238, true, !dbg !12388
  %lnot.ext241 = zext i1 %lnot240 to i32, !dbg !12388
  %conv242 = sext i32 %lnot.ext241 to i64, !dbg !12388
  %expval243 = call i64 @llvm.expect.i64(i64 %conv242, i64 0), !dbg !12388
  %tobool244 = icmp ne i64 %expval243, 0, !dbg !12388
  br i1 %tobool244, label %if.then245, label %if.end246, !dbg !12390

if.then245:                                       ; preds = %if.end231
  %144 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !12391, !tbaa !1899
  store ptr %144, ptr %__pyx_filename, align 8, !dbg !12391, !tbaa !1899
  %145 = load ptr, ptr %__pyx_filename, align 8, !dbg !12391, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !12391, !tbaa !1984
  %146 = load i32, ptr %__pyx_lineno, align 4, !dbg !12391, !tbaa !1984
  store i32 6075, ptr %__pyx_clineno, align 4, !dbg !12391, !tbaa !1984
  %147 = load i32, ptr %__pyx_clineno, align 4, !dbg !12391, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12394

if.end246:                                        ; preds = %if.end231
  %148 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12395, !tbaa !1899
  call void @Py_DECREF(ptr noundef %148), !dbg !12395
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !12396, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12397
  br label %cleanup, !dbg !12397

cleanup:                                          ; preds = %if.then245, %if.end246
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !12397
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup248 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %149 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12398, !tbaa !1899
  call void @Py_DECREF(ptr noundef %149), !dbg !12398
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12399, !tbaa !1899
  br label %if.end247, !dbg !12400

if.end247:                                        ; preds = %cleanup.cont, %__pyx_L4_bool_binop_done
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !12401, !tbaa !1899
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !12402
  br label %__pyx_L0, !dbg !12403

__pyx_L1_error:                                   ; preds = %cleanup, %if.then209, %if.then196, %if.then185, %if.then172, %if.then156, %if.then139, %if.then127, %if.then115, %if.then98, %if.then85, %if.then73, %if.then57, %if.then44, %if.then32, %if.then12, %if.then
  tail call void @llvm.dbg.label(metadata !12130), !dbg !12404
  %150 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12405, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %150), !dbg !12405
  %151 = load ptr, ptr %__pyx_t_5, align 8, !dbg !12406, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %151), !dbg !12406
  %152 = load ptr, ptr %__pyx_t_6, align 8, !dbg !12407, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %152), !dbg !12407
  %153 = load ptr, ptr %__pyx_t_7, align 8, !dbg !12408, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %153), !dbg !12408
  %154 = load i32, ptr %__pyx_clineno, align 4, !dbg !12409, !tbaa !1984
  %155 = load i32, ptr %__pyx_lineno, align 4, !dbg !12410, !tbaa !1984
  %156 = load ptr, ptr %__pyx_filename, align 8, !dbg !12411, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.114, i32 noundef %154, i32 noundef %155, ptr noundef %156), !dbg !12412
  store ptr null, ptr %__pyx_r, align 8, !dbg !12413, !tbaa !1899
  br label %__pyx_L0, !dbg !12414

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end247
  tail call void @llvm.dbg.label(metadata !12131), !dbg !12415
  %157 = load ptr, ptr %__pyx_r, align 8, !dbg !12416, !tbaa !1899
  store ptr %157, ptr %retval, align 8, !dbg !12417
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup248, !dbg !12417

cleanup248:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_8) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !12418
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !12418
  %158 = load ptr, ptr %retval, align 8, !dbg !12418
  ret ptr %158, !dbg !12418
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %o, i64 noundef %i, i32 noundef %wraparound, i32 noundef %boundscheck) #3 !dbg !12419 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %wraparound.addr = alloca i32, align 4
  %boundscheck.addr = alloca i32, align 4
  %wrapped_i = alloca i64, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !12423, metadata !DIExpression()), !dbg !12431
  store i64 %i, ptr %i.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !12424, metadata !DIExpression()), !dbg !12432
  store i32 %wraparound, ptr %wraparound.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %wraparound.addr, metadata !12425, metadata !DIExpression()), !dbg !12433
  store i32 %boundscheck, ptr %boundscheck.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %boundscheck.addr, metadata !12426, metadata !DIExpression()), !dbg !12434
  call void @llvm.lifetime.start.p0(i64 8, ptr %wrapped_i) #11, !dbg !12435
  tail call void @llvm.dbg.declare(metadata ptr %wrapped_i, metadata !12427, metadata !DIExpression()), !dbg !12436
  %0 = load i64, ptr %i.addr, align 8, !dbg !12437, !tbaa !2597
  store i64 %0, ptr %wrapped_i, align 8, !dbg !12436, !tbaa !2597
  %1 = load i32, ptr %wraparound.addr, align 4, !dbg !12438, !tbaa !1984
  %conv = sext i32 %1 to i64, !dbg !12438
  %2 = load i64, ptr %i.addr, align 8, !dbg !12440, !tbaa !2597
  %cmp = icmp slt i64 %2, 0, !dbg !12440
  %lnot = xor i1 %cmp, true, !dbg !12440
  %lnot2 = xor i1 %lnot, true, !dbg !12440
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12440
  %conv3 = sext i32 %lnot.ext to i64, !dbg !12440
  %expval = call i64 @llvm.expect.i64(i64 %conv3, i64 0), !dbg !12440
  %and = and i64 %conv, %expval, !dbg !12441
  %tobool = icmp ne i64 %and, 0, !dbg !12441
  br i1 %tobool, label %if.then, label %if.end, !dbg !12442

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !dbg !12443, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %3), !dbg !12443
  %4 = load i64, ptr %wrapped_i, align 8, !dbg !12445, !tbaa !2597
  %add = add i64 %4, %call, !dbg !12445
  store i64 %add, ptr %wrapped_i, align 8, !dbg !12445, !tbaa !2597
  br label %if.end, !dbg !12446

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, ptr %boundscheck.addr, align 4, !dbg !12447, !tbaa !1984
  %tobool4 = icmp ne i32 %5, 0, !dbg !12447
  br i1 %tobool4, label %lor.lhs.false, label %if.then15, !dbg !12448

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i64, ptr %wrapped_i, align 8, !dbg !12449, !tbaa !2597
  %7 = load ptr, ptr %o.addr, align 8, !dbg !12449, !tbaa !1899
  %call5 = call i64 @PyTuple_GET_SIZE(ptr noundef %7), !dbg !12449
  %call6 = call i32 @__Pyx_is_valid_index(i64 noundef %6, i64 noundef %call5), !dbg !12449
  %tobool7 = icmp ne i32 %call6, 0, !dbg !12449
  %lnot8 = xor i1 %tobool7, true, !dbg !12449
  %lnot10 = xor i1 %lnot8, true, !dbg !12449
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !12449
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !12449
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 1), !dbg !12449
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !12449
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !12450

if.then15:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #11, !dbg !12451
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !12428, metadata !DIExpression()), !dbg !12452
  %8 = load ptr, ptr %o.addr, align 8, !dbg !12453, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1, !dbg !12453
  %9 = load i64, ptr %wrapped_i, align 8, !dbg !12453, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %9, !dbg !12453
  %10 = load ptr, ptr %arrayidx, align 8, !dbg !12453, !tbaa !1899
  store ptr %10, ptr %r, align 8, !dbg !12452, !tbaa !1899
  %11 = load ptr, ptr %r, align 8, !dbg !12454, !tbaa !1899
  call void @Py_INCREF(ptr noundef %11), !dbg !12454
  %12 = load ptr, ptr %r, align 8, !dbg !12455, !tbaa !1899
  store ptr %12, ptr %retval, align 8, !dbg !12456
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #11, !dbg !12457
  br label %cleanup

if.end16:                                         ; preds = %lor.lhs.false
  %13 = load ptr, ptr %o.addr, align 8, !dbg !12458, !tbaa !1899
  %14 = load i64, ptr %i.addr, align 8, !dbg !12459, !tbaa !2597
  %call17 = call ptr @PyLong_FromSsize_t(i64 noundef %14), !dbg !12460
  %call18 = call ptr @__Pyx_GetItemInt_Generic(ptr noundef %13, ptr noundef %call17), !dbg !12461
  store ptr %call18, ptr %retval, align 8, !dbg !12462
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12462

cleanup:                                          ; preds = %if.end16, %if.then15
  call void @llvm.lifetime.end.p0(i64 8, ptr %wrapped_i) #11, !dbg !12463
  %15 = load ptr, ptr %retval, align 8, !dbg !12463
  ret ptr %15, !dbg !12463
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_HasAttr(ptr noundef %o, ptr noundef %n) #3 !dbg !12464 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !12466, metadata !DIExpression()), !dbg !12469
  store ptr %n, ptr %n.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !12467, metadata !DIExpression()), !dbg !12470
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #11, !dbg !12471
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !12468, metadata !DIExpression()), !dbg !12472
  %0 = load ptr, ptr %n.addr, align 8, !dbg !12473, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !12473
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456), !dbg !12473
  %tobool = icmp ne i32 %call1, 0, !dbg !12473
  %lnot = xor i1 %tobool, true, !dbg !12473
  %lnot2 = xor i1 %lnot, true, !dbg !12473
  %lnot3 = xor i1 %lnot2, true, !dbg !12473
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12473
  %conv = sext i32 %lnot.ext to i64, !dbg !12473
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12473
  %tobool4 = icmp ne i64 %expval, 0, !dbg !12473
  br i1 %tobool4, label %if.then, label %if.end, !dbg !12475

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12476, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.115), !dbg !12478
  store i32 -1, ptr %retval, align 4, !dbg !12479
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12479

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !dbg !12480, !tbaa !1899
  %3 = load ptr, ptr %n.addr, align 8, !dbg !12481, !tbaa !1899
  %call5 = call ptr @__Pyx_GetAttr(ptr noundef %2, ptr noundef %3), !dbg !12482
  store ptr %call5, ptr %r, align 8, !dbg !12483, !tbaa !1899
  %4 = load ptr, ptr %r, align 8, !dbg !12484, !tbaa !1899
  %tobool6 = icmp ne ptr %4, null, !dbg !12484
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !12486

if.then7:                                         ; preds = %if.end
  call void @PyErr_Clear(), !dbg !12487
  store i32 0, ptr %retval, align 4, !dbg !12489
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12489

if.else:                                          ; preds = %if.end
  %5 = load ptr, ptr %r, align 8, !dbg !12490, !tbaa !1899
  call void @Py_DECREF(ptr noundef %5), !dbg !12490
  store i32 1, ptr %retval, align 4, !dbg !12492
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12492

cleanup:                                          ; preds = %if.else, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #11, !dbg !12493
  %6 = load i32, ptr %retval, align 4, !dbg !12493
  ret i32 %6, !dbg !12493
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_is_valid_index(i64 noundef %i, i64 noundef %limit) #3 !dbg !12494 {
entry:
  %i.addr = alloca i64, align 8
  %limit.addr = alloca i64, align 8
  store i64 %i, ptr %i.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !12498, metadata !DIExpression()), !dbg !12500
  store i64 %limit, ptr %limit.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %limit.addr, metadata !12499, metadata !DIExpression()), !dbg !12501
  %0 = load i64, ptr %i.addr, align 8, !dbg !12502, !tbaa !2597
  %1 = load i64, ptr %limit.addr, align 8, !dbg !12503, !tbaa !2597
  %cmp = icmp ult i64 %0, %1, !dbg !12504
  %conv = zext i1 %cmp to i32, !dbg !12504
  ret i32 %conv, !dbg !12505
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Generic(ptr noundef %o, ptr noundef %j) #0 !dbg !12506 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %j.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !12508, metadata !DIExpression()), !dbg !12511
  store ptr %j, ptr %j.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %j.addr, metadata !12509, metadata !DIExpression()), !dbg !12512
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #11, !dbg !12513
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !12510, metadata !DIExpression()), !dbg !12514
  %0 = load ptr, ptr %j.addr, align 8, !dbg !12515, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !12515
  %lnot = xor i1 %tobool, true, !dbg !12515
  %lnot1 = xor i1 %lnot, true, !dbg !12515
  %lnot2 = xor i1 %lnot1, true, !dbg !12515
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12515
  %conv = sext i32 %lnot.ext to i64, !dbg !12515
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12515
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12515
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12517

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !12518
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12518

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !12519, !tbaa !1899
  %2 = load ptr, ptr %j.addr, align 8, !dbg !12520, !tbaa !1899
  %call = call ptr @PyObject_GetItem(ptr noundef %1, ptr noundef %2), !dbg !12521
  store ptr %call, ptr %r, align 8, !dbg !12522, !tbaa !1899
  %3 = load ptr, ptr %j.addr, align 8, !dbg !12523, !tbaa !1899
  call void @Py_DECREF(ptr noundef %3), !dbg !12523
  %4 = load ptr, ptr %r, align 8, !dbg !12524, !tbaa !1899
  store ptr %4, ptr %retval, align 8, !dbg !12525
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12525

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #11, !dbg !12526
  %5 = load ptr, ptr %retval, align 8, !dbg !12526
  ret ptr %5, !dbg !12526
}

declare !dbg !12527 ptr @PyLong_FromSsize_t(i64 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetAttr(ptr noundef %o, ptr noundef %n) #3 !dbg !12528 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !12530, metadata !DIExpression()), !dbg !12532
  store ptr %n, ptr %n.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !12531, metadata !DIExpression()), !dbg !12533
  %0 = load ptr, ptr %n.addr, align 8, !dbg !12534, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !12534
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456), !dbg !12534
  %tobool = icmp ne i32 %call1, 0, !dbg !12534
  %lnot = xor i1 %tobool, true, !dbg !12534
  %lnot2 = xor i1 %lnot, true, !dbg !12534
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12534
  %conv = sext i32 %lnot.ext to i64, !dbg !12534
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !12534
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12534
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12536

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !12537, !tbaa !1899
  %2 = load ptr, ptr %n.addr, align 8, !dbg !12538, !tbaa !1899
  %call4 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2), !dbg !12539
  store ptr %call4, ptr %retval, align 8, !dbg !12540
  br label %return, !dbg !12540

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !dbg !12541, !tbaa !1899
  %4 = load ptr, ptr %n.addr, align 8, !dbg !12542, !tbaa !1899
  %call5 = call ptr @PyObject_GetAttr(ptr noundef %3, ptr noundef %4), !dbg !12543
  store ptr %call5, ptr %retval, align 8, !dbg !12544
  br label %return, !dbg !12544

return:                                           ; preds = %if.end, %if.then
  %5 = load ptr, ptr %retval, align 8, !dbg !12545
  ret ptr %5, !dbg !12545
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_ParseOptionalKeywords(ptr noundef %kwds, ptr noundef %kwvalues, ptr noundef %argnames, ptr noundef %kwds2, ptr noundef %values, i64 noundef %num_pos_args, ptr noundef %function_name) #0 !dbg !12546 {
entry:
  %retval = alloca i32, align 4
  %kwds.addr = alloca ptr, align 8
  %kwvalues.addr = alloca ptr, align 8
  %argnames.addr = alloca ptr, align 8
  %kwds2.addr = alloca ptr, align 8
  %values.addr = alloca ptr, align 8
  %num_pos_args.addr = alloca i64, align 8
  %function_name.addr = alloca ptr, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %pos = alloca i64, align 8
  %name = alloca ptr, align 8
  %first_kw_arg = alloca ptr, align 8
  %kwds_is_tuple = alloca i32, align 4
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %cmp38 = alloca i32, align 4
  %argname = alloca ptr, align 8
  %cmp78 = alloca i32, align 4
  store ptr %kwds, ptr %kwds.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwds.addr, metadata !12551, metadata !DIExpression()), !dbg !12581
  store ptr %kwvalues, ptr %kwvalues.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwvalues.addr, metadata !12552, metadata !DIExpression()), !dbg !12582
  store ptr %argnames, ptr %argnames.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %argnames.addr, metadata !12553, metadata !DIExpression()), !dbg !12583
  store ptr %kwds2, ptr %kwds2.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwds2.addr, metadata !12554, metadata !DIExpression()), !dbg !12584
  store ptr %values, ptr %values.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %values.addr, metadata !12555, metadata !DIExpression()), !dbg !12585
  store i64 %num_pos_args, ptr %num_pos_args.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %num_pos_args.addr, metadata !12556, metadata !DIExpression()), !dbg !12586
  store ptr %function_name, ptr %function_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %function_name.addr, metadata !12557, metadata !DIExpression()), !dbg !12587
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #11, !dbg !12588
  tail call void @llvm.dbg.declare(metadata ptr %key, metadata !12558, metadata !DIExpression()), !dbg !12589
  store ptr null, ptr %key, align 8, !dbg !12589, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !12588
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !12559, metadata !DIExpression()), !dbg !12590
  store ptr null, ptr %value, align 8, !dbg !12590, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #11, !dbg !12591
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !12560, metadata !DIExpression()), !dbg !12592
  store i64 0, ptr %pos, align 8, !dbg !12592, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #11, !dbg !12593
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !12561, metadata !DIExpression()), !dbg !12594
  call void @llvm.lifetime.start.p0(i64 8, ptr %first_kw_arg) #11, !dbg !12595
  tail call void @llvm.dbg.declare(metadata ptr %first_kw_arg, metadata !12562, metadata !DIExpression()), !dbg !12596
  %0 = load ptr, ptr %argnames.addr, align 8, !dbg !12597, !tbaa !1899
  %1 = load i64, ptr %num_pos_args.addr, align 8, !dbg !12598, !tbaa !2597
  %add.ptr = getelementptr ptr, ptr %0, i64 %1, !dbg !12599
  store ptr %add.ptr, ptr %first_kw_arg, align 8, !dbg !12596, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %kwds_is_tuple) #11, !dbg !12600
  tail call void @llvm.dbg.declare(metadata ptr %kwds_is_tuple, metadata !12563, metadata !DIExpression()), !dbg !12601
  %2 = load ptr, ptr %kwds.addr, align 8, !dbg !12602, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %2), !dbg !12602
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864), !dbg !12602
  %tobool = icmp ne i32 %call1, 0, !dbg !12602
  %lnot = xor i1 %tobool, true, !dbg !12602
  %lnot2 = xor i1 %lnot, true, !dbg !12602
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12602
  %conv = sext i32 %lnot.ext to i64, !dbg !12602
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !12602
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12603
  %land.ext = zext i1 %tobool3 to i32, !dbg !12603
  store i32 %land.ext, ptr %kwds_is_tuple, align 4, !dbg !12601, !tbaa !1984
  br label %while.cond, !dbg !12604

while.cond:                                       ; preds = %if.end137, %if.then72, %if.then21, %entry
  br label %while.body, !dbg !12604

while.body:                                       ; preds = %while.cond
  %3 = load ptr, ptr %key, align 8, !dbg !12605, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %3), !dbg !12605
  store ptr null, ptr %key, align 8, !dbg !12606, !tbaa !1899
  %4 = load ptr, ptr %value, align 8, !dbg !12607, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %4), !dbg !12607
  store ptr null, ptr %value, align 8, !dbg !12608, !tbaa !1899
  %5 = load i32, ptr %kwds_is_tuple, align 4, !dbg !12609, !tbaa !1984
  %tobool4 = icmp ne i32 %5, 0, !dbg !12609
  br i1 %tobool4, label %if.then, label %if.else, !dbg !12610

if.then:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #11, !dbg !12611
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !12564, metadata !DIExpression()), !dbg !12612
  %6 = load ptr, ptr %kwds.addr, align 8, !dbg !12613, !tbaa !1899
  %call5 = call i64 @PyTuple_GET_SIZE(ptr noundef %6), !dbg !12613
  store i64 %call5, ptr %size, align 8, !dbg !12614, !tbaa !2597
  %7 = load i64, ptr %pos, align 8, !dbg !12615, !tbaa !2597
  %8 = load i64, ptr %size, align 8, !dbg !12617, !tbaa !2597
  %cmp = icmp sge i64 %7, %8, !dbg !12618
  br i1 %cmp, label %if.then7, label %if.end, !dbg !12619

if.then7:                                         ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12620

if.end:                                           ; preds = %if.then
  %9 = load ptr, ptr %kwds.addr, align 8, !dbg !12621, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1, !dbg !12621
  %10 = load i64, ptr %pos, align 8, !dbg !12621, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %10, !dbg !12621
  %11 = load ptr, ptr %arrayidx, align 8, !dbg !12621, !tbaa !1899
  store ptr %11, ptr %key, align 8, !dbg !12622, !tbaa !1899
  %12 = load ptr, ptr %kwvalues.addr, align 8, !dbg !12623, !tbaa !1899
  %13 = load i64, ptr %pos, align 8, !dbg !12624, !tbaa !2597
  %arrayidx8 = getelementptr ptr, ptr %12, i64 %13, !dbg !12623
  %14 = load ptr, ptr %arrayidx8, align 8, !dbg !12623, !tbaa !1899
  store ptr %14, ptr %value, align 8, !dbg !12625, !tbaa !1899
  %15 = load i64, ptr %pos, align 8, !dbg !12626, !tbaa !2597
  %inc = add i64 %15, 1, !dbg !12626
  store i64 %inc, ptr %pos, align 8, !dbg !12626, !tbaa !2597
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12627
  br label %cleanup, !dbg !12627

cleanup:                                          ; preds = %if.end, %if.then7
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #11, !dbg !12627
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %while.end138
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end13, !dbg !12628

if.else:                                          ; preds = %while.body
  %16 = load ptr, ptr %kwds.addr, align 8, !dbg !12629, !tbaa !1899
  %call9 = call i32 @PyDict_Next(ptr noundef %16, ptr noundef %pos, ptr noundef %key, ptr noundef %value), !dbg !12632
  %tobool10 = icmp ne i32 %call9, 0, !dbg !12632
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !12633

if.then11:                                        ; preds = %if.else
  br label %while.end138, !dbg !12634

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %cleanup.cont
  %17 = load ptr, ptr %first_kw_arg, align 8, !dbg !12635, !tbaa !1899
  store ptr %17, ptr %name, align 8, !dbg !12636, !tbaa !1899
  br label %while.cond14, !dbg !12637

while.cond14:                                     ; preds = %while.body19, %if.end13
  %18 = load ptr, ptr %name, align 8, !dbg !12638, !tbaa !1899
  %19 = load ptr, ptr %18, align 8, !dbg !12639, !tbaa !1899
  %tobool15 = icmp ne ptr %19, null, !dbg !12639
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !12640

land.rhs:                                         ; preds = %while.cond14
  %20 = load ptr, ptr %name, align 8, !dbg !12641, !tbaa !1899
  %21 = load ptr, ptr %20, align 8, !dbg !12642, !tbaa !1899
  %22 = load ptr, ptr %21, align 8, !dbg !12643, !tbaa !1899
  %23 = load ptr, ptr %key, align 8, !dbg !12644, !tbaa !1899
  %cmp16 = icmp ne ptr %22, %23, !dbg !12645
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond14
  %24 = phi i1 [ false, %while.cond14 ], [ %cmp16, %land.rhs ], !dbg !12646
  br i1 %24, label %while.body19, label %while.end, !dbg !12637

while.body19:                                     ; preds = %land.end
  %25 = load ptr, ptr %name, align 8, !dbg !12647, !tbaa !1899
  %incdec.ptr = getelementptr ptr, ptr %25, i32 1, !dbg !12647
  store ptr %incdec.ptr, ptr %name, align 8, !dbg !12647, !tbaa !1899
  br label %while.cond14, !dbg !12637, !llvm.loop !12648

while.end:                                        ; preds = %land.end
  %26 = load ptr, ptr %name, align 8, !dbg !12649, !tbaa !1899
  %27 = load ptr, ptr %26, align 8, !dbg !12651, !tbaa !1899
  %tobool20 = icmp ne ptr %27, null, !dbg !12651
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !12652

if.then21:                                        ; preds = %while.end
  %28 = load ptr, ptr %value, align 8, !dbg !12653, !tbaa !1899
  %29 = load ptr, ptr %values.addr, align 8, !dbg !12655, !tbaa !1899
  %30 = load ptr, ptr %name, align 8, !dbg !12656, !tbaa !1899
  %31 = load ptr, ptr %argnames.addr, align 8, !dbg !12657, !tbaa !1899
  %sub.ptr.lhs.cast = ptrtoint ptr %30 to i64, !dbg !12658
  %sub.ptr.rhs.cast = ptrtoint ptr %31 to i64, !dbg !12658
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12658
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !12658
  %arrayidx22 = getelementptr ptr, ptr %29, i64 %sub.ptr.div, !dbg !12655
  store ptr %28, ptr %arrayidx22, align 8, !dbg !12659, !tbaa !1899
  store ptr null, ptr %key, align 8, !dbg !12660, !tbaa !1899
  store ptr null, ptr %value, align 8, !dbg !12661, !tbaa !1899
  br label %while.cond, !dbg !12662, !llvm.loop !12663

if.end23:                                         ; preds = %while.end
  %32 = load ptr, ptr %key, align 8, !dbg !12665, !tbaa !1899
  call void @Py_INCREF(ptr noundef %32), !dbg !12665
  %33 = load ptr, ptr %value, align 8, !dbg !12666, !tbaa !1899
  call void @Py_INCREF(ptr noundef %33), !dbg !12666
  %34 = load ptr, ptr %first_kw_arg, align 8, !dbg !12667, !tbaa !1899
  store ptr %34, ptr %name, align 8, !dbg !12668, !tbaa !1899
  %35 = load ptr, ptr %key, align 8, !dbg !12669, !tbaa !1899
  %call24 = call ptr @Py_TYPE(ptr noundef %35), !dbg !12669
  %call25 = call i32 @PyType_HasFeature(ptr noundef %call24, i64 noundef 268435456), !dbg !12669
  %tobool26 = icmp ne i32 %call25, 0, !dbg !12669
  %lnot27 = xor i1 %tobool26, true, !dbg !12669
  %lnot29 = xor i1 %lnot27, true, !dbg !12669
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !12669
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !12669
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 1), !dbg !12669
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !12669
  br i1 %tobool33, label %if.then34, label %if.else121, !dbg !12670

if.then34:                                        ; preds = %if.end23
  br label %while.cond35, !dbg !12671

while.cond35:                                     ; preds = %cleanup.cont69, %if.then34
  %36 = load ptr, ptr %name, align 8, !dbg !12672, !tbaa !1899
  %37 = load ptr, ptr %36, align 8, !dbg !12673, !tbaa !1899
  %tobool36 = icmp ne ptr %37, null, !dbg !12671
  br i1 %tobool36, label %while.body37, label %while.end70, !dbg !12671

while.body37:                                     ; preds = %while.cond35
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp38) #11, !dbg !12674
  tail call void @llvm.dbg.declare(metadata ptr %cmp38, metadata !12568, metadata !DIExpression()), !dbg !12675
  %38 = load ptr, ptr %name, align 8, !dbg !12676, !tbaa !1899
  %39 = load ptr, ptr %38, align 8, !dbg !12676, !tbaa !1899
  %40 = load ptr, ptr %39, align 8, !dbg !12676, !tbaa !1899
  %call39 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %40), !dbg !12676
  %41 = load ptr, ptr %key, align 8, !dbg !12677, !tbaa !1899
  %call40 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %41), !dbg !12677
  %cmp41 = icmp ne i64 %call39, %call40, !dbg !12678
  br i1 %cmp41, label %cond.true, label %cond.false, !dbg !12679

cond.true:                                        ; preds = %while.body37
  br label %cond.end, !dbg !12679

cond.false:                                       ; preds = %while.body37
  %42 = load ptr, ptr %name, align 8, !dbg !12680, !tbaa !1899
  %43 = load ptr, ptr %42, align 8, !dbg !12681, !tbaa !1899
  %44 = load ptr, ptr %43, align 8, !dbg !12682, !tbaa !1899
  %45 = load ptr, ptr %key, align 8, !dbg !12683, !tbaa !1899
  %call43 = call i32 @PyUnicode_Compare(ptr noundef %44, ptr noundef %45), !dbg !12684
  br label %cond.end, !dbg !12679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %call43, %cond.false ], !dbg !12679
  store i32 %cond, ptr %cmp38, align 4, !dbg !12675, !tbaa !1984
  %46 = load i32, ptr %cmp38, align 4, !dbg !12685, !tbaa !1984
  %cmp44 = icmp slt i32 %46, 0, !dbg !12687
  br i1 %cmp44, label %land.lhs.true, label %if.end56, !dbg !12688

land.lhs.true:                                    ; preds = %cond.end
  %call46 = call ptr @PyErr_Occurred(), !dbg !12689
  %tobool47 = icmp ne ptr %call46, null, !dbg !12689
  %lnot48 = xor i1 %tobool47, true, !dbg !12689
  %lnot50 = xor i1 %lnot48, true, !dbg !12689
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !12689
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !12689
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !12689
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !12689
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !12690

if.then55:                                        ; preds = %land.lhs.true
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !12691

if.end56:                                         ; preds = %land.lhs.true, %cond.end
  %47 = load i32, ptr %cmp38, align 4, !dbg !12692, !tbaa !1984
  %cmp57 = icmp eq i32 %47, 0, !dbg !12694
  br i1 %cmp57, label %if.then59, label %if.end65, !dbg !12695

if.then59:                                        ; preds = %if.end56
  %48 = load ptr, ptr %value, align 8, !dbg !12696, !tbaa !1899
  %49 = load ptr, ptr %values.addr, align 8, !dbg !12698, !tbaa !1899
  %50 = load ptr, ptr %name, align 8, !dbg !12699, !tbaa !1899
  %51 = load ptr, ptr %argnames.addr, align 8, !dbg !12700, !tbaa !1899
  %sub.ptr.lhs.cast60 = ptrtoint ptr %50 to i64, !dbg !12701
  %sub.ptr.rhs.cast61 = ptrtoint ptr %51 to i64, !dbg !12701
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61, !dbg !12701
  %sub.ptr.div63 = sdiv exact i64 %sub.ptr.sub62, 8, !dbg !12701
  %arrayidx64 = getelementptr ptr, ptr %49, i64 %sub.ptr.div63, !dbg !12698
  store ptr %48, ptr %arrayidx64, align 8, !dbg !12702, !tbaa !1899
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !12703

if.end65:                                         ; preds = %if.end56
  %52 = load ptr, ptr %name, align 8, !dbg !12704, !tbaa !1899
  %incdec.ptr66 = getelementptr ptr, ptr %52, i32 1, !dbg !12704
  store ptr %incdec.ptr66, ptr %name, align 8, !dbg !12704, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12705
  br label %cleanup67, !dbg !12705

cleanup67:                                        ; preds = %if.then55, %if.end65, %if.then59
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp38) #11, !dbg !12705
  %cleanup.dest68 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest68, label %cleanup141 [
    i32 0, label %cleanup.cont69
    i32 7, label %while.end70
    i32 8, label %bad
  ]

cleanup.cont69:                                   ; preds = %cleanup67
  br label %while.cond35, !dbg !12671, !llvm.loop !12706

while.end70:                                      ; preds = %cleanup67, %while.cond35
  %53 = load ptr, ptr %name, align 8, !dbg !12707, !tbaa !1899
  %54 = load ptr, ptr %53, align 8, !dbg !12708, !tbaa !1899
  %tobool71 = icmp ne ptr %54, null, !dbg !12708
  br i1 %tobool71, label %if.then72, label %if.else73, !dbg !12709

if.then72:                                        ; preds = %while.end70
  br label %while.cond, !dbg !12710, !llvm.loop !12663

if.else73:                                        ; preds = %while.end70
  call void @llvm.lifetime.start.p0(i64 8, ptr %argname) #11, !dbg !12711
  tail call void @llvm.dbg.declare(metadata ptr %argname, metadata !12572, metadata !DIExpression()), !dbg !12712
  %55 = load ptr, ptr %argnames.addr, align 8, !dbg !12713, !tbaa !1899
  store ptr %55, ptr %argname, align 8, !dbg !12712, !tbaa !1899
  br label %while.cond74, !dbg !12714

while.cond74:                                     ; preds = %cleanup.cont115, %if.else73
  %56 = load ptr, ptr %argname, align 8, !dbg !12715, !tbaa !1899
  %57 = load ptr, ptr %first_kw_arg, align 8, !dbg !12716, !tbaa !1899
  %cmp75 = icmp ne ptr %56, %57, !dbg !12717
  br i1 %cmp75, label %while.body77, label %while.end116, !dbg !12714

while.body77:                                     ; preds = %while.cond74
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp78) #11, !dbg !12718
  tail call void @llvm.dbg.declare(metadata ptr %cmp78, metadata !12575, metadata !DIExpression()), !dbg !12719
  %58 = load ptr, ptr %argname, align 8, !dbg !12720, !tbaa !1899
  %59 = load ptr, ptr %58, align 8, !dbg !12721, !tbaa !1899
  %60 = load ptr, ptr %59, align 8, !dbg !12722, !tbaa !1899
  %61 = load ptr, ptr %key, align 8, !dbg !12723, !tbaa !1899
  %cmp79 = icmp eq ptr %60, %61, !dbg !12724
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !12725

cond.true81:                                      ; preds = %while.body77
  br label %cond.end92, !dbg !12725

cond.false82:                                     ; preds = %while.body77
  %62 = load ptr, ptr %argname, align 8, !dbg !12726, !tbaa !1899
  %63 = load ptr, ptr %62, align 8, !dbg !12726, !tbaa !1899
  %64 = load ptr, ptr %63, align 8, !dbg !12726, !tbaa !1899
  %call83 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %64), !dbg !12726
  %65 = load ptr, ptr %key, align 8, !dbg !12727, !tbaa !1899
  %call84 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %65), !dbg !12727
  %cmp85 = icmp ne i64 %call83, %call84, !dbg !12728
  br i1 %cmp85, label %cond.true87, label %cond.false88, !dbg !12729

cond.true87:                                      ; preds = %cond.false82
  br label %cond.end90, !dbg !12729

cond.false88:                                     ; preds = %cond.false82
  %66 = load ptr, ptr %argname, align 8, !dbg !12730, !tbaa !1899
  %67 = load ptr, ptr %66, align 8, !dbg !12731, !tbaa !1899
  %68 = load ptr, ptr %67, align 8, !dbg !12732, !tbaa !1899
  %69 = load ptr, ptr %key, align 8, !dbg !12733, !tbaa !1899
  %call89 = call i32 @PyUnicode_Compare(ptr noundef %68, ptr noundef %69), !dbg !12734
  br label %cond.end90, !dbg !12729

cond.end90:                                       ; preds = %cond.false88, %cond.true87
  %cond91 = phi i32 [ 1, %cond.true87 ], [ %call89, %cond.false88 ], !dbg !12729
  br label %cond.end92, !dbg !12725

cond.end92:                                       ; preds = %cond.end90, %cond.true81
  %cond93 = phi i32 [ 0, %cond.true81 ], [ %cond91, %cond.end90 ], !dbg !12725
  store i32 %cond93, ptr %cmp78, align 4, !dbg !12719, !tbaa !1984
  %70 = load i32, ptr %cmp78, align 4, !dbg !12735, !tbaa !1984
  %cmp94 = icmp slt i32 %70, 0, !dbg !12737
  br i1 %cmp94, label %land.lhs.true96, label %if.end107, !dbg !12738

land.lhs.true96:                                  ; preds = %cond.end92
  %call97 = call ptr @PyErr_Occurred(), !dbg !12739
  %tobool98 = icmp ne ptr %call97, null, !dbg !12739
  %lnot99 = xor i1 %tobool98, true, !dbg !12739
  %lnot101 = xor i1 %lnot99, true, !dbg !12739
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !12739
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !12739
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 0), !dbg !12739
  %tobool105 = icmp ne i64 %expval104, 0, !dbg !12739
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !12740

if.then106:                                       ; preds = %land.lhs.true96
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !12741

if.end107:                                        ; preds = %land.lhs.true96, %cond.end92
  %71 = load i32, ptr %cmp78, align 4, !dbg !12742, !tbaa !1984
  %cmp108 = icmp eq i32 %71, 0, !dbg !12744
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !12745

if.then110:                                       ; preds = %if.end107
  store i32 11, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !12746

if.end111:                                        ; preds = %if.end107
  %72 = load ptr, ptr %argname, align 8, !dbg !12747, !tbaa !1899
  %incdec.ptr112 = getelementptr ptr, ptr %72, i32 1, !dbg !12747
  store ptr %incdec.ptr112, ptr %argname, align 8, !dbg !12747, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12748
  br label %cleanup113, !dbg !12748

cleanup113:                                       ; preds = %if.then110, %if.then106, %if.end111
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp78) #11, !dbg !12748
  %cleanup.dest114 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest114, label %cleanup117 [
    i32 0, label %cleanup.cont115
  ]

cleanup.cont115:                                  ; preds = %cleanup113
  br label %while.cond74, !dbg !12714, !llvm.loop !12749

while.end116:                                     ; preds = %while.cond74
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12750
  br label %cleanup117, !dbg !12750

cleanup117:                                       ; preds = %while.end116, %cleanup113
  call void @llvm.lifetime.end.p0(i64 8, ptr %argname) #11, !dbg !12750
  %cleanup.dest118 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest118, label %cleanup141 [
    i32 0, label %cleanup.cont119
    i32 11, label %arg_passed_twice
    i32 8, label %bad
  ]

cleanup.cont119:                                  ; preds = %cleanup117
  br label %if.end120

if.end120:                                        ; preds = %cleanup.cont119
  br label %if.end122, !dbg !12751

if.else121:                                       ; preds = %if.end23
  br label %invalid_keyword_type, !dbg !12752

if.end122:                                        ; preds = %if.end120
  %73 = load ptr, ptr %kwds2.addr, align 8, !dbg !12753, !tbaa !1899
  %tobool123 = icmp ne ptr %73, null, !dbg !12753
  br i1 %tobool123, label %if.then124, label %if.else136, !dbg !12755

if.then124:                                       ; preds = %if.end122
  %74 = load ptr, ptr %kwds2.addr, align 8, !dbg !12756, !tbaa !1899
  %75 = load ptr, ptr %key, align 8, !dbg !12756, !tbaa !1899
  %76 = load ptr, ptr %value, align 8, !dbg !12756, !tbaa !1899
  %call125 = call i32 @PyDict_SetItem(ptr noundef %74, ptr noundef %75, ptr noundef %76), !dbg !12756
  %tobool126 = icmp ne i32 %call125, 0, !dbg !12756
  %lnot127 = xor i1 %tobool126, true, !dbg !12756
  %lnot129 = xor i1 %lnot127, true, !dbg !12756
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !12756
  %conv131 = sext i32 %lnot.ext130 to i64, !dbg !12756
  %expval132 = call i64 @llvm.expect.i64(i64 %conv131, i64 0), !dbg !12756
  %tobool133 = icmp ne i64 %expval132, 0, !dbg !12756
  br i1 %tobool133, label %if.then134, label %if.end135, !dbg !12759

if.then134:                                       ; preds = %if.then124
  br label %bad, !dbg !12760

if.end135:                                        ; preds = %if.then124
  br label %if.end137, !dbg !12761

if.else136:                                       ; preds = %if.end122
  br label %invalid_keyword, !dbg !12762

if.end137:                                        ; preds = %if.end135
  br label %while.cond, !dbg !12604, !llvm.loop !12663

while.end138:                                     ; preds = %if.then11, %cleanup
  %77 = load ptr, ptr %key, align 8, !dbg !12764, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %77), !dbg !12764
  %78 = load ptr, ptr %value, align 8, !dbg !12765, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %78), !dbg !12765
  store i32 0, ptr %retval, align 4, !dbg !12766
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup141, !dbg !12766

arg_passed_twice:                                 ; preds = %cleanup117
  tail call void @llvm.dbg.label(metadata !12577), !dbg !12767
  %79 = load ptr, ptr %function_name.addr, align 8, !dbg !12768, !tbaa !1899
  %80 = load ptr, ptr %key, align 8, !dbg !12769, !tbaa !1899
  call void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %79, ptr noundef %80), !dbg !12770
  br label %bad, !dbg !12771

invalid_keyword_type:                             ; preds = %if.else121
  tail call void @llvm.dbg.label(metadata !12578), !dbg !12772
  %81 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12773, !tbaa !1899
  %82 = load ptr, ptr %function_name.addr, align 8, !dbg !12774, !tbaa !1899
  %call139 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %81, ptr noundef @.str.118, ptr noundef %82), !dbg !12775
  br label %bad, !dbg !12776

invalid_keyword:                                  ; preds = %if.else136
  tail call void @llvm.dbg.label(metadata !12579), !dbg !12777
  %83 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12778, !tbaa !1899
  %84 = load ptr, ptr %function_name.addr, align 8, !dbg !12779, !tbaa !1899
  %85 = load ptr, ptr %key, align 8, !dbg !12780, !tbaa !1899
  %call140 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %83, ptr noundef @.str.119, ptr noundef %84, ptr noundef %85), !dbg !12781
  br label %bad, !dbg !12781

bad:                                              ; preds = %invalid_keyword, %cleanup117, %cleanup67, %invalid_keyword_type, %arg_passed_twice, %if.then134
  tail call void @llvm.dbg.label(metadata !12580), !dbg !12782
  %86 = load ptr, ptr %key, align 8, !dbg !12783, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %86), !dbg !12783
  %87 = load ptr, ptr %value, align 8, !dbg !12784, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %87), !dbg !12784
  store i32 -1, ptr %retval, align 4, !dbg !12785
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup141, !dbg !12785

cleanup141:                                       ; preds = %bad, %while.end138, %cleanup117, %cleanup67
  call void @llvm.lifetime.end.p0(i64 4, ptr %kwds_is_tuple) #11, !dbg !12786
  call void @llvm.lifetime.end.p0(i64 8, ptr %first_kw_arg) #11, !dbg !12786
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #11, !dbg !12786
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #11, !dbg !12786
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !12786
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #11, !dbg !12786
  %88 = load i32, ptr %retval, align 4, !dbg !12786
  ret i32 %88, !dbg !12786

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseArgtupleInvalid(ptr noundef %func_name, i32 noundef %exact, i64 noundef %num_min, i64 noundef %num_max, i64 noundef %num_found) #0 !dbg !12787 {
entry:
  %func_name.addr = alloca ptr, align 8
  %exact.addr = alloca i32, align 4
  %num_min.addr = alloca i64, align 8
  %num_max.addr = alloca i64, align 8
  %num_found.addr = alloca i64, align 8
  %num_expected = alloca i64, align 8
  %more_or_less = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func_name.addr, metadata !12791, metadata !DIExpression()), !dbg !12798
  store i32 %exact, ptr %exact.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %exact.addr, metadata !12792, metadata !DIExpression()), !dbg !12799
  store i64 %num_min, ptr %num_min.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %num_min.addr, metadata !12793, metadata !DIExpression()), !dbg !12800
  store i64 %num_max, ptr %num_max.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %num_max.addr, metadata !12794, metadata !DIExpression()), !dbg !12801
  store i64 %num_found, ptr %num_found.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %num_found.addr, metadata !12795, metadata !DIExpression()), !dbg !12802
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_expected) #11, !dbg !12803
  tail call void @llvm.dbg.declare(metadata ptr %num_expected, metadata !12796, metadata !DIExpression()), !dbg !12804
  call void @llvm.lifetime.start.p0(i64 8, ptr %more_or_less) #11, !dbg !12805
  tail call void @llvm.dbg.declare(metadata ptr %more_or_less, metadata !12797, metadata !DIExpression()), !dbg !12806
  %0 = load i64, ptr %num_found.addr, align 8, !dbg !12807, !tbaa !2597
  %1 = load i64, ptr %num_min.addr, align 8, !dbg !12809, !tbaa !2597
  %cmp = icmp slt i64 %0, %1, !dbg !12810
  br i1 %cmp, label %if.then, label %if.else, !dbg !12811

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %num_min.addr, align 8, !dbg !12812, !tbaa !2597
  store i64 %2, ptr %num_expected, align 8, !dbg !12814, !tbaa !2597
  store ptr @.str.121, ptr %more_or_less, align 8, !dbg !12815, !tbaa !1899
  br label %if.end, !dbg !12816

if.else:                                          ; preds = %entry
  %3 = load i64, ptr %num_max.addr, align 8, !dbg !12817, !tbaa !2597
  store i64 %3, ptr %num_expected, align 8, !dbg !12819, !tbaa !2597
  store ptr @.str.122, ptr %more_or_less, align 8, !dbg !12820, !tbaa !1899
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, ptr %exact.addr, align 4, !dbg !12821, !tbaa !1984
  %tobool = icmp ne i32 %4, 0, !dbg !12821
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !12823

if.then1:                                         ; preds = %if.end
  store ptr @.str.123, ptr %more_or_less, align 8, !dbg !12824, !tbaa !1899
  br label %if.end2, !dbg !12826

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12827, !tbaa !1899
  %6 = load ptr, ptr %func_name.addr, align 8, !dbg !12828, !tbaa !1899
  %7 = load ptr, ptr %more_or_less, align 8, !dbg !12829, !tbaa !1899
  %8 = load i64, ptr %num_expected, align 8, !dbg !12830, !tbaa !2597
  %9 = load i64, ptr %num_expected, align 8, !dbg !12831, !tbaa !2597
  %cmp3 = icmp eq i64 %9, 1, !dbg !12832
  %10 = zext i1 %cmp3 to i64, !dbg !12833
  %cond = select i1 %cmp3, ptr @.str.15, ptr @.str.84, !dbg !12833
  %11 = load i64, ptr %num_found.addr, align 8, !dbg !12834, !tbaa !2597
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.124, ptr noundef %6, ptr noundef %7, i64 noundef %8, ptr noundef %cond, i64 noundef %11), !dbg !12835
  call void @llvm.lifetime.end.p0(i64 8, ptr %more_or_less) #11, !dbg !12836
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_expected) #11, !dbg !12836
  ret void, !dbg !12836
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pf_6Cython_4Plex_3DFA_8StateMap___init__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_new_machine) #0 !dbg !12837 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_new_machine.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !12841, metadata !DIExpression()), !dbg !12850
  store ptr %__pyx_v_new_machine, ptr %__pyx_v_new_machine.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_new_machine.addr, metadata !12842, metadata !DIExpression()), !dbg !12851
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #11, !dbg !12852
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !12843, metadata !DIExpression()), !dbg !12853
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !12854
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !12844, metadata !DIExpression()), !dbg !12855
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12855, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !12856
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !12845, metadata !DIExpression()), !dbg !12857
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !12857, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !12858
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !12846, metadata !DIExpression()), !dbg !12859
  store ptr null, ptr %__pyx_filename, align 8, !dbg !12859, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !12860
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !12847, metadata !DIExpression()), !dbg !12861
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !12861, !tbaa !1984
  %0 = load ptr, ptr %__pyx_v_new_machine.addr, align 8, !dbg !12862, !tbaa !1899
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !12862
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !12862

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %__pyx_v_new_machine.addr, align 8, !dbg !12862, !tbaa !1899
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12862, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 17, !dbg !12862
  %3 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_FastMachine, align 8, !dbg !12862, !tbaa !3568
  %call = call i32 @__Pyx_TypeTest(ptr noundef %1, ptr noundef %3), !dbg !12862
  %tobool = icmp ne i32 %call, 0, !dbg !12862
  %lnot = xor i1 %tobool, true, !dbg !12862
  %lnot1 = xor i1 %lnot, true, !dbg !12862
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12862
  %conv = sext i32 %lnot.ext to i64, !dbg !12862
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !12862
  %tobool2 = icmp ne i64 %expval, 0, !dbg !12862
  br label %lor.end, !dbg !12862

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lnot3 = xor i1 %4, true, !dbg !12862
  %lnot5 = xor i1 %lnot3, true, !dbg !12862
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !12862
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !12862
  %expval8 = call i64 @llvm.expect.i64(i64 %conv7, i64 1), !dbg !12862
  %tobool9 = icmp ne i64 %expval8, 0, !dbg !12862
  br i1 %tobool9, label %if.end, label %if.then, !dbg !12864

if.then:                                          ; preds = %lor.end
  %5 = load ptr, ptr @__pyx_f, align 16, !dbg !12865, !tbaa !1899
  store ptr %5, ptr %__pyx_filename, align 8, !dbg !12865, !tbaa !1899
  %6 = load ptr, ptr %__pyx_filename, align 8, !dbg !12865, !tbaa !1899
  store i32 101, ptr %__pyx_lineno, align 4, !dbg !12865, !tbaa !1984
  %7 = load i32, ptr %__pyx_lineno, align 4, !dbg !12865, !tbaa !1984
  store i32 4515, ptr %__pyx_clineno, align 4, !dbg !12865, !tbaa !1984
  %8 = load i32, ptr %__pyx_clineno, align 4, !dbg !12865, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12868

if.end:                                           ; preds = %lor.end
  %9 = load ptr, ptr %__pyx_v_new_machine.addr, align 8, !dbg !12869, !tbaa !1899
  store ptr %9, ptr %__pyx_t_1, align 8, !dbg !12870, !tbaa !1899
  %10 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12871, !tbaa !1899
  call void @Py_INCREF(ptr noundef %10), !dbg !12871
  %11 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !12872, !tbaa !1899
  %new_machine = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %11, i32 0, i32 2, !dbg !12872
  %12 = load ptr, ptr %new_machine, align 8, !dbg !12872, !tbaa !8661
  call void @Py_DECREF(ptr noundef %12), !dbg !12872
  %13 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12873, !tbaa !1899
  %14 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !12874, !tbaa !1899
  %new_machine10 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %14, i32 0, i32 2, !dbg !12875
  store ptr %13, ptr %new_machine10, align 8, !dbg !12876, !tbaa !8661
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12877, !tbaa !1899
  %call11 = call ptr @PyDict_New(), !dbg !12878
  store ptr %call11, ptr %__pyx_t_1, align 8, !dbg !12879, !tbaa !1899
  %15 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12880, !tbaa !1899
  %tobool12 = icmp ne ptr %15, null, !dbg !12880
  %lnot13 = xor i1 %tobool12, true, !dbg !12880
  %lnot15 = xor i1 %lnot13, true, !dbg !12880
  %lnot17 = xor i1 %lnot15, true, !dbg !12880
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !12880
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !12880
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !12880
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !12880
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !12882

if.then22:                                        ; preds = %if.end
  %16 = load ptr, ptr @__pyx_f, align 16, !dbg !12883, !tbaa !1899
  store ptr %16, ptr %__pyx_filename, align 8, !dbg !12883, !tbaa !1899
  %17 = load ptr, ptr %__pyx_filename, align 8, !dbg !12883, !tbaa !1899
  store i32 102, ptr %__pyx_lineno, align 4, !dbg !12883, !tbaa !1984
  %18 = load i32, ptr %__pyx_lineno, align 4, !dbg !12883, !tbaa !1984
  store i32 4531, ptr %__pyx_clineno, align 4, !dbg !12883, !tbaa !1984
  %19 = load i32, ptr %__pyx_clineno, align 4, !dbg !12883, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12886

if.end23:                                         ; preds = %if.end
  %20 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !12887, !tbaa !1899
  %old_to_new_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %20, i32 0, i32 3, !dbg !12887
  %21 = load ptr, ptr %old_to_new_dict, align 8, !dbg !12887, !tbaa !8605
  call void @Py_DECREF(ptr noundef %21), !dbg !12887
  %22 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12888, !tbaa !1899
  %23 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !12889, !tbaa !1899
  %old_to_new_dict24 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %23, i32 0, i32 3, !dbg !12890
  store ptr %22, ptr %old_to_new_dict24, align 8, !dbg !12891, !tbaa !8605
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12892, !tbaa !1899
  %call25 = call ptr @PyDict_New(), !dbg !12893
  store ptr %call25, ptr %__pyx_t_1, align 8, !dbg !12894, !tbaa !1899
  %24 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12895, !tbaa !1899
  %tobool26 = icmp ne ptr %24, null, !dbg !12895
  %lnot27 = xor i1 %tobool26, true, !dbg !12895
  %lnot29 = xor i1 %lnot27, true, !dbg !12895
  %lnot31 = xor i1 %lnot29, true, !dbg !12895
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !12895
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !12895
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 0), !dbg !12895
  %tobool35 = icmp ne i64 %expval34, 0, !dbg !12895
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !12897

if.then36:                                        ; preds = %if.end23
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !12898, !tbaa !1899
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !12898, !tbaa !1899
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !12898, !tbaa !1899
  store i32 103, ptr %__pyx_lineno, align 4, !dbg !12898, !tbaa !1984
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !12898, !tbaa !1984
  store i32 4546, ptr %__pyx_clineno, align 4, !dbg !12898, !tbaa !1984
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !12898, !tbaa !1984
  br label %__pyx_L1_error, !dbg !12901

if.end37:                                         ; preds = %if.end23
  %29 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !12902, !tbaa !1899
  %new_to_old_dict = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %29, i32 0, i32 4, !dbg !12902
  %30 = load ptr, ptr %new_to_old_dict, align 8, !dbg !12902, !tbaa !8732
  call void @Py_DECREF(ptr noundef %30), !dbg !12902
  %31 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12903, !tbaa !1899
  %32 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !12904, !tbaa !1899
  %new_to_old_dict38 = getelementptr inbounds %struct.__pyx_obj_6Cython_4Plex_3DFA_StateMap, ptr %32, i32 0, i32 4, !dbg !12905
  store ptr %31, ptr %new_to_old_dict38, align 8, !dbg !12906, !tbaa !8732
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !12907, !tbaa !1899
  store i32 0, ptr %__pyx_r, align 4, !dbg !12908, !tbaa !1984
  br label %__pyx_L0, !dbg !12909

__pyx_L1_error:                                   ; preds = %if.then36, %if.then22, %if.then
  tail call void @llvm.dbg.label(metadata !12848), !dbg !12910
  %33 = load ptr, ptr %__pyx_t_1, align 8, !dbg !12911, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %33), !dbg !12911
  %34 = load i32, ptr %__pyx_clineno, align 4, !dbg !12912, !tbaa !1984
  %35 = load i32, ptr %__pyx_lineno, align 4, !dbg !12913, !tbaa !1984
  %36 = load ptr, ptr %__pyx_filename, align 8, !dbg !12914, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.117, i32 noundef %34, i32 noundef %35, ptr noundef %36), !dbg !12915
  store i32 -1, ptr %__pyx_r, align 4, !dbg !12916, !tbaa !1984
  br label %__pyx_L0, !dbg !12917

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end37
  tail call void @llvm.dbg.label(metadata !12849), !dbg !12918
  %37 = load i32, ptr %__pyx_r, align 4, !dbg !12919, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !12920
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !12920
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !12920
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !12920
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #11, !dbg !12920
  ret i32 %37, !dbg !12921
}

declare !dbg !12922 i32 @PyUnicode_Compare(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %func_name, ptr noundef %kw_name) #0 !dbg !12923 {
entry:
  %func_name.addr = alloca ptr, align 8
  %kw_name.addr = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func_name.addr, metadata !12927, metadata !DIExpression()), !dbg !12929
  store ptr %kw_name, ptr %kw_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kw_name.addr, metadata !12928, metadata !DIExpression()), !dbg !12930
  %0 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12931, !tbaa !1899
  %1 = load ptr, ptr %func_name.addr, align 8, !dbg !12932, !tbaa !1899
  %2 = load ptr, ptr %kw_name.addr, align 8, !dbg !12933, !tbaa !1899
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.120, ptr noundef %1, ptr noundef %2), !dbg !12934
  ret void, !dbg !12935
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_validate_bases_tuple(ptr noundef %type_name, i64 noundef %dictoffset, ptr noundef %bases) #0 !dbg !12936 {
entry:
  %retval = alloca i32, align 4
  %type_name.addr = alloca ptr, align 8
  %dictoffset.addr = alloca i64, align 8
  %bases.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %b0 = alloca ptr, align 8
  %b = alloca ptr, align 8
  %b_name = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %b_name5 = alloca ptr, align 8
  store ptr %type_name, ptr %type_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type_name.addr, metadata !12940, metadata !DIExpression()), !dbg !12956
  store i64 %dictoffset, ptr %dictoffset.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %dictoffset.addr, metadata !12941, metadata !DIExpression()), !dbg !12957
  store ptr %bases, ptr %bases.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %bases.addr, metadata !12942, metadata !DIExpression()), !dbg !12958
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !12959
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !12943, metadata !DIExpression()), !dbg !12960
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #11, !dbg !12959
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !12944, metadata !DIExpression()), !dbg !12961
  %0 = load ptr, ptr %bases.addr, align 8, !dbg !12962, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !12962
  store i64 %call, ptr %n, align 8, !dbg !12963, !tbaa !2597
  store i64 1, ptr %i, align 8, !dbg !12964, !tbaa !2597
  br label %for.cond, !dbg !12965

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !12966, !tbaa !2597
  %2 = load i64, ptr %n, align 8, !dbg !12967, !tbaa !2597
  %cmp = icmp slt i64 %1, %2, !dbg !12968
  br i1 %cmp, label %for.body, label %for.end, !dbg !12969

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %b0) #11, !dbg !12970
  tail call void @llvm.dbg.declare(metadata ptr %b0, metadata !12945, metadata !DIExpression()), !dbg !12971
  %3 = load ptr, ptr %bases.addr, align 8, !dbg !12972, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1, !dbg !12972
  %4 = load i64, ptr %i, align 8, !dbg !12972, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %4, !dbg !12972
  %5 = load ptr, ptr %arrayidx, align 8, !dbg !12972, !tbaa !1899
  store ptr %5, ptr %b0, align 8, !dbg !12971, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #11, !dbg !12973
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !12949, metadata !DIExpression()), !dbg !12974
  %6 = load ptr, ptr %b0, align 8, !dbg !12975, !tbaa !1899
  store ptr %6, ptr %b, align 8, !dbg !12976, !tbaa !1899
  %7 = load ptr, ptr %b, align 8, !dbg !12977, !tbaa !1899
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %7, i32 0, i32 19, !dbg !12977
  %8 = load i64, ptr %tp_flags, align 8, !dbg !12977, !tbaa !4160
  %and = and i64 %8, 512, !dbg !12977
  %cmp1 = icmp ne i64 %and, 0, !dbg !12977
  br i1 %cmp1, label %if.end, label %if.then, !dbg !12978

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_name) #11, !dbg !12979
  tail call void @llvm.dbg.declare(metadata ptr %b_name, metadata !12950, metadata !DIExpression()), !dbg !12980
  %9 = load ptr, ptr %b, align 8, !dbg !12981, !tbaa !1899
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %9, i32 0, i32 1, !dbg !12981
  %10 = load ptr, ptr %tp_name, align 8, !dbg !12981, !tbaa !4021
  store ptr %10, ptr %b_name, align 8, !dbg !12980, !tbaa !1899
  %11 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12982, !tbaa !1899
  %12 = load ptr, ptr %b_name, align 8, !dbg !12983, !tbaa !1899
  %call2 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %11, ptr noundef @.str.125, ptr noundef %12), !dbg !12984
  store i32 -1, ptr %retval, align 4, !dbg !12985
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_name) #11, !dbg !12986
  br label %cleanup

if.end:                                           ; preds = %for.body
  %13 = load i64, ptr %dictoffset.addr, align 8, !dbg !12987, !tbaa !2597
  %cmp3 = icmp eq i64 %13, 0, !dbg !12988
  br i1 %cmp3, label %land.lhs.true, label %if.end8, !dbg !12989

land.lhs.true:                                    ; preds = %if.end
  %14 = load ptr, ptr %b, align 8, !dbg !12990, !tbaa !1899
  %tp_dictoffset = getelementptr inbounds %struct._typeobject, ptr %14, i32 0, i32 34, !dbg !12991
  %15 = load i64, ptr %tp_dictoffset, align 8, !dbg !12991, !tbaa !3255
  %tobool = icmp ne i64 %15, 0, !dbg !12990
  br i1 %tobool, label %if.then4, label %if.end8, !dbg !12992

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_name5) #11, !dbg !12993
  tail call void @llvm.dbg.declare(metadata ptr %b_name5, metadata !12953, metadata !DIExpression()), !dbg !12994
  %16 = load ptr, ptr %b, align 8, !dbg !12995, !tbaa !1899
  %tp_name6 = getelementptr inbounds %struct._typeobject, ptr %16, i32 0, i32 1, !dbg !12995
  %17 = load ptr, ptr %tp_name6, align 8, !dbg !12995, !tbaa !4021
  store ptr %17, ptr %b_name5, align 8, !dbg !12994, !tbaa !1899
  %18 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !12996, !tbaa !1899
  %19 = load ptr, ptr %type_name.addr, align 8, !dbg !12997, !tbaa !1899
  %20 = load ptr, ptr %b_name5, align 8, !dbg !12998, !tbaa !1899
  %call7 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %18, ptr noundef @.str.126, ptr noundef %19, ptr noundef %20), !dbg !12999
  store i32 -1, ptr %retval, align 4, !dbg !13000
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_name5) #11, !dbg !13001
  br label %cleanup

if.end8:                                          ; preds = %land.lhs.true, %if.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13002
  br label %cleanup, !dbg !13002

cleanup:                                          ; preds = %if.end8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #11, !dbg !13002
  call void @llvm.lifetime.end.p0(i64 8, ptr %b0) #11, !dbg !13002
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup10 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !13003

for.inc:                                          ; preds = %cleanup.cont
  %21 = load i64, ptr %i, align 8, !dbg !13004, !tbaa !2597
  %inc = add i64 %21, 1, !dbg !13004
  store i64 %inc, ptr %i, align 8, !dbg !13004, !tbaa !2597
  br label %for.cond, !dbg !13005, !llvm.loop !13006

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !13008
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup10, !dbg !13008

cleanup10:                                        ; preds = %for.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #11, !dbg !13009
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !13009
  %22 = load i32, ptr %retval, align 4, !dbg !13009
  ret i32 %22, !dbg !13009
}

declare !dbg !13010 i32 @PyGC_Disable() #1

declare !dbg !13011 i32 @PyGC_Enable() #1

; Function Attrs: nounwind allocsize(0)
declare !dbg !13012 noalias ptr @malloc(i64 noundef) #8

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetVtable(ptr noundef %type) #0 !dbg !13014 {
entry:
  %retval = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %ob = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !13018, metadata !DIExpression()), !dbg !13022
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #11, !dbg !13023
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !13019, metadata !DIExpression()), !dbg !13024
  call void @llvm.lifetime.start.p0(i64 8, ptr %ob) #11, !dbg !13025
  tail call void @llvm.dbg.declare(metadata ptr %ob, metadata !13020, metadata !DIExpression()), !dbg !13026
  %0 = load ptr, ptr %type.addr, align 8, !dbg !13027, !tbaa !1899
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 31, !dbg !13028
  %1 = load ptr, ptr %tp_dict, align 8, !dbg !13028, !tbaa !2420
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13029, !tbaa !1899
  %__pyx_n_s_pyx_vtable = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 76, !dbg !13029
  %3 = load ptr, ptr %__pyx_n_s_pyx_vtable, align 8, !dbg !13029, !tbaa !9970
  %call = call ptr @PyObject_GetItem(ptr noundef %1, ptr noundef %3), !dbg !13030
  store ptr %call, ptr %ob, align 8, !dbg !13026, !tbaa !1899
  %4 = load ptr, ptr %ob, align 8, !dbg !13031, !tbaa !1899
  %tobool = icmp ne ptr %4, null, !dbg !13031
  br i1 %tobool, label %if.end, label %if.then, !dbg !13033

if.then:                                          ; preds = %entry
  br label %bad, !dbg !13034

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %ob, align 8, !dbg !13035, !tbaa !1899
  %call1 = call ptr @PyCapsule_GetPointer(ptr noundef %5, ptr noundef null), !dbg !13036
  store ptr %call1, ptr %ptr, align 8, !dbg !13037, !tbaa !1899
  %6 = load ptr, ptr %ptr, align 8, !dbg !13038, !tbaa !1899
  %tobool2 = icmp ne ptr %6, null, !dbg !13038
  br i1 %tobool2, label %if.end6, label %land.lhs.true, !dbg !13040

land.lhs.true:                                    ; preds = %if.end
  %call3 = call ptr @PyErr_Occurred(), !dbg !13041
  %tobool4 = icmp ne ptr %call3, null, !dbg !13041
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !13042

if.then5:                                         ; preds = %land.lhs.true
  %7 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !13043, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.128), !dbg !13044
  br label %if.end6, !dbg !13044

if.end6:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %8 = load ptr, ptr %ob, align 8, !dbg !13045, !tbaa !1899
  call void @Py_DECREF(ptr noundef %8), !dbg !13045
  %9 = load ptr, ptr %ptr, align 8, !dbg !13046, !tbaa !1899
  store ptr %9, ptr %retval, align 8, !dbg !13047
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13047

bad:                                              ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !13021), !dbg !13048
  %10 = load ptr, ptr %ob, align 8, !dbg !13049, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %10), !dbg !13049
  store ptr null, ptr %retval, align 8, !dbg !13050
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13050

cleanup:                                          ; preds = %bad, %if.end6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ob) #11, !dbg !13051
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #11, !dbg !13051
  %11 = load ptr, ptr %retval, align 8, !dbg !13051
  ret ptr %11, !dbg !13051
}

; Function Attrs: nounwind
declare !dbg !13052 void @free(ptr noundef) #9

declare !dbg !13053 ptr @PyCapsule_GetPointer(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_setup_reduce_is_named(ptr noundef %meth, ptr noundef %name) #0 !dbg !13056 {
entry:
  %meth.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %name_attr = alloca ptr, align 8
  store ptr %meth, ptr %meth.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %meth.addr, metadata !13058, metadata !DIExpression()), !dbg !13062
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !13059, metadata !DIExpression()), !dbg !13063
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #11, !dbg !13064
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !13060, metadata !DIExpression()), !dbg !13065
  call void @llvm.lifetime.start.p0(i64 8, ptr %name_attr) #11, !dbg !13066
  tail call void @llvm.dbg.declare(metadata ptr %name_attr, metadata !13061, metadata !DIExpression()), !dbg !13067
  %0 = load ptr, ptr %meth.addr, align 8, !dbg !13068, !tbaa !1899
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13069, !tbaa !1899
  %__pyx_n_s_name = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 60, !dbg !13069
  %2 = load ptr, ptr %__pyx_n_s_name, align 8, !dbg !13069, !tbaa !2138
  %call = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %0, ptr noundef %2), !dbg !13070
  store ptr %call, ptr %name_attr, align 8, !dbg !13071, !tbaa !1899
  %3 = load ptr, ptr %name_attr, align 8, !dbg !13072, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !13072
  %lnot = xor i1 %tobool, true, !dbg !13072
  %lnot1 = xor i1 %lnot, true, !dbg !13072
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13072
  %conv = sext i32 %lnot.ext to i64, !dbg !13072
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !13072
  %tobool2 = icmp ne i64 %expval, 0, !dbg !13072
  br i1 %tobool2, label %if.then, label %if.else, !dbg !13074

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %name_attr, align 8, !dbg !13075, !tbaa !1899
  %5 = load ptr, ptr %name.addr, align 8, !dbg !13077, !tbaa !1899
  %call3 = call i32 @PyObject_RichCompareBool(ptr noundef %4, ptr noundef %5, i32 noundef 2), !dbg !13078
  store i32 %call3, ptr %ret, align 4, !dbg !13079, !tbaa !1984
  br label %if.end, !dbg !13080

if.else:                                          ; preds = %entry
  store i32 -1, ptr %ret, align 4, !dbg !13081, !tbaa !1984
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, ptr %ret, align 4, !dbg !13083, !tbaa !1984
  %cmp = icmp slt i32 %6, 0, !dbg !13083
  %lnot5 = xor i1 %cmp, true, !dbg !13083
  %lnot7 = xor i1 %lnot5, true, !dbg !13083
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !13083
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !13083
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !13083
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !13083
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !13085

if.then12:                                        ; preds = %if.end
  call void @PyErr_Clear(), !dbg !13086
  store i32 0, ptr %ret, align 4, !dbg !13088, !tbaa !1984
  br label %if.end13, !dbg !13089

if.end13:                                         ; preds = %if.then12, %if.end
  %7 = load ptr, ptr %name_attr, align 8, !dbg !13090, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %7), !dbg !13090
  %8 = load i32, ptr %ret, align 4, !dbg !13091, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %name_attr) #11, !dbg !13092
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #11, !dbg !13092
  ret i32 %8, !dbg !13093
}

declare !dbg !13094 i32 @PyDict_DelItem(ptr noundef, ptr noundef) #1

declare !dbg !13095 i32 @PyObject_RichCompareBool(ptr noundef, ptr noundef, i32 noundef) #1

declare !dbg !13098 ptr @PyImport_ImportModule(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_ImportType_3_0_4(ptr noundef %module, ptr noundef %module_name, ptr noundef %class_name, i64 noundef %size, i64 noundef %alignment, i32 noundef %check_size) #0 !dbg !13099 {
entry:
  %retval = alloca ptr, align 8
  %module.addr = alloca ptr, align 8
  %module_name.addr = alloca ptr, align 8
  %class_name.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %check_size.addr = alloca i32, align 4
  %result = alloca ptr, align 8
  %warning = alloca [200 x i8], align 16
  %basicsize = alloca i64, align 8
  %itemsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %module, ptr %module.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !13103, metadata !DIExpression()), !dbg !13114
  store ptr %module_name, ptr %module_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %module_name.addr, metadata !13104, metadata !DIExpression()), !dbg !13115
  store ptr %class_name, ptr %class_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %class_name.addr, metadata !13105, metadata !DIExpression()), !dbg !13116
  store i64 %size, ptr %size.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !13106, metadata !DIExpression()), !dbg !13117
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !13107, metadata !DIExpression()), !dbg !13118
  store i32 %check_size, ptr %check_size.addr, align 4, !tbaa !6562
  tail call void @llvm.dbg.declare(metadata ptr %check_size.addr, metadata !13108, metadata !DIExpression()), !dbg !13119
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #11, !dbg !13120
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !13109, metadata !DIExpression()), !dbg !13121
  store ptr null, ptr %result, align 8, !dbg !13121, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 200, ptr %warning) #11, !dbg !13122
  tail call void @llvm.dbg.declare(metadata ptr %warning, metadata !13110, metadata !DIExpression()), !dbg !13123
  call void @llvm.lifetime.start.p0(i64 8, ptr %basicsize) #11, !dbg !13124
  tail call void @llvm.dbg.declare(metadata ptr %basicsize, metadata !13111, metadata !DIExpression()), !dbg !13125
  call void @llvm.lifetime.start.p0(i64 8, ptr %itemsize) #11, !dbg !13126
  tail call void @llvm.dbg.declare(metadata ptr %itemsize, metadata !13112, metadata !DIExpression()), !dbg !13127
  %0 = load ptr, ptr %module.addr, align 8, !dbg !13128, !tbaa !1899
  %1 = load ptr, ptr %class_name.addr, align 8, !dbg !13129, !tbaa !1899
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef %1), !dbg !13130
  store ptr %call, ptr %result, align 8, !dbg !13131, !tbaa !1899
  %2 = load ptr, ptr %result, align 8, !dbg !13132, !tbaa !1899
  %tobool = icmp ne ptr %2, null, !dbg !13132
  br i1 %tobool, label %if.end, label %if.then, !dbg !13134

if.then:                                          ; preds = %entry
  br label %bad, !dbg !13135

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %result, align 8, !dbg !13136, !tbaa !1899
  %call1 = call i32 @PyType_Check(ptr noundef %3), !dbg !13136
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13136
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !13138

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !13139, !tbaa !1899
  %5 = load ptr, ptr %module_name.addr, align 8, !dbg !13141, !tbaa !1899
  %6 = load ptr, ptr %class_name.addr, align 8, !dbg !13142, !tbaa !1899
  %call4 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.144, ptr noundef %5, ptr noundef %6), !dbg !13143
  br label %bad, !dbg !13144

if.end5:                                          ; preds = %if.end
  %7 = load ptr, ptr %result, align 8, !dbg !13145, !tbaa !1899
  %tp_basicsize = getelementptr inbounds %struct._typeobject, ptr %7, i32 0, i32 2, !dbg !13146
  %8 = load i64, ptr %tp_basicsize, align 8, !dbg !13146, !tbaa !4043
  store i64 %8, ptr %basicsize, align 8, !dbg !13147, !tbaa !2597
  %9 = load ptr, ptr %result, align 8, !dbg !13148, !tbaa !1899
  %tp_itemsize = getelementptr inbounds %struct._typeobject, ptr %9, i32 0, i32 3, !dbg !13149
  %10 = load i64, ptr %tp_itemsize, align 8, !dbg !13149, !tbaa !13150
  store i64 %10, ptr %itemsize, align 8, !dbg !13151, !tbaa !2597
  %11 = load i64, ptr %itemsize, align 8, !dbg !13152, !tbaa !2597
  %tobool6 = icmp ne i64 %11, 0, !dbg !13152
  br i1 %tobool6, label %if.then7, label %if.end14, !dbg !13154

if.then7:                                         ; preds = %if.end5
  %12 = load i64, ptr %size.addr, align 8, !dbg !13155, !tbaa !2597
  %13 = load i64, ptr %alignment.addr, align 8, !dbg !13158, !tbaa !2597
  %rem = urem i64 %12, %13, !dbg !13159
  %tobool8 = icmp ne i64 %rem, 0, !dbg !13159
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !13160

if.then9:                                         ; preds = %if.then7
  %14 = load i64, ptr %size.addr, align 8, !dbg !13161, !tbaa !2597
  %15 = load i64, ptr %alignment.addr, align 8, !dbg !13163, !tbaa !2597
  %rem10 = urem i64 %14, %15, !dbg !13164
  store i64 %rem10, ptr %alignment.addr, align 8, !dbg !13165, !tbaa !2597
  br label %if.end11, !dbg !13166

if.end11:                                         ; preds = %if.then9, %if.then7
  %16 = load i64, ptr %itemsize, align 8, !dbg !13167, !tbaa !2597
  %17 = load i64, ptr %alignment.addr, align 8, !dbg !13169, !tbaa !2597
  %cmp = icmp slt i64 %16, %17, !dbg !13170
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !13171

if.then12:                                        ; preds = %if.end11
  %18 = load i64, ptr %alignment.addr, align 8, !dbg !13172, !tbaa !2597
  store i64 %18, ptr %itemsize, align 8, !dbg !13173, !tbaa !2597
  br label %if.end13, !dbg !13174

if.end13:                                         ; preds = %if.then12, %if.end11
  br label %if.end14, !dbg !13175

if.end14:                                         ; preds = %if.end13, %if.end5
  %19 = load i64, ptr %basicsize, align 8, !dbg !13176, !tbaa !2597
  %20 = load i64, ptr %itemsize, align 8, !dbg !13178, !tbaa !2597
  %add = add i64 %19, %20, !dbg !13179
  %21 = load i64, ptr %size.addr, align 8, !dbg !13180, !tbaa !2597
  %cmp15 = icmp ult i64 %add, %21, !dbg !13181
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !13182

if.then16:                                        ; preds = %if.end14
  %22 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !13183, !tbaa !1899
  %23 = load ptr, ptr %module_name.addr, align 8, !dbg !13185, !tbaa !1899
  %24 = load ptr, ptr %class_name.addr, align 8, !dbg !13186, !tbaa !1899
  %25 = load i64, ptr %size.addr, align 8, !dbg !13187, !tbaa !2597
  %26 = load i64, ptr %basicsize, align 8, !dbg !13188, !tbaa !2597
  %27 = load i64, ptr %itemsize, align 8, !dbg !13189, !tbaa !2597
  %add17 = add i64 %26, %27, !dbg !13190
  %call18 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %22, ptr noundef @.str.145, ptr noundef %23, ptr noundef %24, i64 noundef %25, i64 noundef %add17), !dbg !13191
  br label %bad, !dbg !13192

if.end19:                                         ; preds = %if.end14
  %28 = load i32, ptr %check_size.addr, align 4, !dbg !13193, !tbaa !6562
  %cmp20 = icmp eq i32 %28, 0, !dbg !13195
  br i1 %cmp20, label %land.lhs.true, label %if.else, !dbg !13196

land.lhs.true:                                    ; preds = %if.end19
  %29 = load i64, ptr %basicsize, align 8, !dbg !13197, !tbaa !2597
  %30 = load i64, ptr %size.addr, align 8, !dbg !13198, !tbaa !2597
  %cmp21 = icmp ugt i64 %29, %30, !dbg !13199
  br i1 %cmp21, label %if.then24, label %lor.lhs.false, !dbg !13200

lor.lhs.false:                                    ; preds = %land.lhs.true
  %31 = load i64, ptr %basicsize, align 8, !dbg !13201, !tbaa !2597
  %32 = load i64, ptr %itemsize, align 8, !dbg !13202, !tbaa !2597
  %add22 = add i64 %31, %32, !dbg !13203
  %33 = load i64, ptr %size.addr, align 8, !dbg !13204, !tbaa !2597
  %cmp23 = icmp ult i64 %add22, %33, !dbg !13205
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !13206

if.then24:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %34 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !13207, !tbaa !1899
  %35 = load ptr, ptr %module_name.addr, align 8, !dbg !13209, !tbaa !1899
  %36 = load ptr, ptr %class_name.addr, align 8, !dbg !13210, !tbaa !1899
  %37 = load i64, ptr %size.addr, align 8, !dbg !13211, !tbaa !2597
  %38 = load i64, ptr %basicsize, align 8, !dbg !13212, !tbaa !2597
  %39 = load i64, ptr %basicsize, align 8, !dbg !13213, !tbaa !2597
  %40 = load i64, ptr %itemsize, align 8, !dbg !13214, !tbaa !2597
  %add25 = add i64 %39, %40, !dbg !13215
  %call26 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %34, ptr noundef @.str.146, ptr noundef %35, ptr noundef %36, i64 noundef %37, i64 noundef %38, i64 noundef %add25), !dbg !13216
  br label %bad, !dbg !13217

if.else:                                          ; preds = %lor.lhs.false, %if.end19
  %41 = load i32, ptr %check_size.addr, align 4, !dbg !13218, !tbaa !6562
  %cmp27 = icmp eq i32 %41, 1, !dbg !13220
  br i1 %cmp27, label %land.lhs.true28, label %if.end37, !dbg !13221

land.lhs.true28:                                  ; preds = %if.else
  %42 = load i64, ptr %basicsize, align 8, !dbg !13222, !tbaa !2597
  %43 = load i64, ptr %size.addr, align 8, !dbg !13223, !tbaa !2597
  %cmp29 = icmp ugt i64 %42, %43, !dbg !13224
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !13225

if.then30:                                        ; preds = %land.lhs.true28
  %arraydecay = getelementptr inbounds [200 x i8], ptr %warning, i64 0, i64 0, !dbg !13226
  %44 = load ptr, ptr %module_name.addr, align 8, !dbg !13228, !tbaa !1899
  %45 = load ptr, ptr %class_name.addr, align 8, !dbg !13229, !tbaa !1899
  %46 = load i64, ptr %size.addr, align 8, !dbg !13230, !tbaa !2597
  %47 = load i64, ptr %basicsize, align 8, !dbg !13231, !tbaa !2597
  %call31 = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay, i64 noundef 200, ptr noundef @.str.147, ptr noundef %44, ptr noundef %45, i64 noundef %46, i64 noundef %47), !dbg !13232
  %arraydecay32 = getelementptr inbounds [200 x i8], ptr %warning, i64 0, i64 0, !dbg !13233
  %call33 = call i32 @PyErr_WarnEx(ptr noundef null, ptr noundef %arraydecay32, i64 noundef 0), !dbg !13235
  %cmp34 = icmp slt i32 %call33, 0, !dbg !13236
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !13237

if.then35:                                        ; preds = %if.then30
  br label %bad, !dbg !13238

if.end36:                                         ; preds = %if.then30
  br label %if.end37, !dbg !13239

if.end37:                                         ; preds = %if.end36, %land.lhs.true28, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %48 = load ptr, ptr %result, align 8, !dbg !13240, !tbaa !1899
  store ptr %48, ptr %retval, align 8, !dbg !13241
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13241

bad:                                              ; preds = %if.then35, %if.then24, %if.then16, %if.then3, %if.then
  tail call void @llvm.dbg.label(metadata !13113), !dbg !13242
  %49 = load ptr, ptr %result, align 8, !dbg !13243, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %49), !dbg !13243
  store ptr null, ptr %retval, align 8, !dbg !13244
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13244

cleanup:                                          ; preds = %bad, %if.end38
  call void @llvm.lifetime.end.p0(i64 8, ptr %itemsize) #11, !dbg !13245
  call void @llvm.lifetime.end.p0(i64 8, ptr %basicsize) #11, !dbg !13245
  call void @llvm.lifetime.end.p0(i64 200, ptr %warning) #11, !dbg !13245
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #11, !dbg !13245
  %50 = load ptr, ptr %retval, align 8, !dbg !13245
  ret ptr %50, !dbg !13245
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_ImportVoidPtr_3_0_4(ptr noundef %module, ptr noundef %name, ptr noundef %p, ptr noundef %sig) #0 !dbg !13246 {
entry:
  %retval = alloca i32, align 4
  %module.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  %sig.addr = alloca ptr, align 8
  %d = alloca ptr, align 8
  %cobj = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %module, ptr %module.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !13250, metadata !DIExpression()), !dbg !13257
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !13251, metadata !DIExpression()), !dbg !13258
  store ptr %p, ptr %p.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !13252, metadata !DIExpression()), !dbg !13259
  store ptr %sig, ptr %sig.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %sig.addr, metadata !13253, metadata !DIExpression()), !dbg !13260
  call void @llvm.lifetime.start.p0(i64 8, ptr %d) #11, !dbg !13261
  tail call void @llvm.dbg.declare(metadata ptr %d, metadata !13254, metadata !DIExpression()), !dbg !13262
  store ptr null, ptr %d, align 8, !dbg !13262, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %cobj) #11, !dbg !13263
  tail call void @llvm.dbg.declare(metadata ptr %cobj, metadata !13255, metadata !DIExpression()), !dbg !13264
  store ptr null, ptr %cobj, align 8, !dbg !13264, !tbaa !1899
  %0 = load ptr, ptr %module.addr, align 8, !dbg !13265, !tbaa !1899
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef @.str.75), !dbg !13266
  store ptr %call, ptr %d, align 8, !dbg !13267, !tbaa !1899
  %1 = load ptr, ptr %d, align 8, !dbg !13268, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !13268
  br i1 %tobool, label %if.end, label %if.then, !dbg !13270

if.then:                                          ; preds = %entry
  br label %bad, !dbg !13271

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %d, align 8, !dbg !13272, !tbaa !1899
  %3 = load ptr, ptr %name.addr, align 8, !dbg !13273, !tbaa !1899
  %call1 = call ptr @PyDict_GetItemString(ptr noundef %2, ptr noundef %3), !dbg !13274
  store ptr %call1, ptr %cobj, align 8, !dbg !13275, !tbaa !1899
  %4 = load ptr, ptr %cobj, align 8, !dbg !13276, !tbaa !1899
  %tobool2 = icmp ne ptr %4, null, !dbg !13276
  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !13278

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !13279, !tbaa !1899
  %6 = load ptr, ptr %module.addr, align 8, !dbg !13281, !tbaa !1899
  %call4 = call ptr @PyModule_GetName(ptr noundef %6), !dbg !13282
  %7 = load ptr, ptr %name.addr, align 8, !dbg !13283, !tbaa !1899
  %call5 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.151, ptr noundef %call4, ptr noundef %7), !dbg !13284
  br label %bad, !dbg !13285

if.end6:                                          ; preds = %if.end
  %8 = load ptr, ptr %cobj, align 8, !dbg !13286, !tbaa !1899
  %9 = load ptr, ptr %sig.addr, align 8, !dbg !13288, !tbaa !1899
  %call7 = call i32 @PyCapsule_IsValid(ptr noundef %8, ptr noundef %9), !dbg !13289
  %tobool8 = icmp ne i32 %call7, 0, !dbg !13289
  br i1 %tobool8, label %if.end13, label %if.then9, !dbg !13290

if.then9:                                         ; preds = %if.end6
  %10 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !13291, !tbaa !1899
  %11 = load ptr, ptr %module.addr, align 8, !dbg !13293, !tbaa !1899
  %call10 = call ptr @PyModule_GetName(ptr noundef %11), !dbg !13294
  %12 = load ptr, ptr %name.addr, align 8, !dbg !13295, !tbaa !1899
  %13 = load ptr, ptr %sig.addr, align 8, !dbg !13296, !tbaa !1899
  %14 = load ptr, ptr %cobj, align 8, !dbg !13297, !tbaa !1899
  %call11 = call ptr @PyCapsule_GetName(ptr noundef %14), !dbg !13298
  %call12 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %10, ptr noundef @.str.152, ptr noundef %call10, ptr noundef %12, ptr noundef %13, ptr noundef %call11), !dbg !13299
  br label %bad, !dbg !13300

if.end13:                                         ; preds = %if.end6
  %15 = load ptr, ptr %cobj, align 8, !dbg !13301, !tbaa !1899
  %16 = load ptr, ptr %sig.addr, align 8, !dbg !13302, !tbaa !1899
  %call14 = call ptr @PyCapsule_GetPointer(ptr noundef %15, ptr noundef %16), !dbg !13303
  %17 = load ptr, ptr %p.addr, align 8, !dbg !13304, !tbaa !1899
  store ptr %call14, ptr %17, align 8, !dbg !13305, !tbaa !1899
  %18 = load ptr, ptr %p.addr, align 8, !dbg !13306, !tbaa !1899
  %19 = load ptr, ptr %18, align 8, !dbg !13308, !tbaa !1899
  %tobool15 = icmp ne ptr %19, null, !dbg !13309
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !13310

if.then16:                                        ; preds = %if.end13
  br label %bad, !dbg !13311

if.end17:                                         ; preds = %if.end13
  %20 = load ptr, ptr %d, align 8, !dbg !13312, !tbaa !1899
  call void @Py_DECREF(ptr noundef %20), !dbg !13312
  store i32 0, ptr %retval, align 4, !dbg !13313
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13313

bad:                                              ; preds = %if.then16, %if.then9, %if.then3, %if.then
  tail call void @llvm.dbg.label(metadata !13256), !dbg !13314
  %21 = load ptr, ptr %d, align 8, !dbg !13315, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %21), !dbg !13315
  store i32 -1, ptr %retval, align 4, !dbg !13316
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13316

cleanup:                                          ; preds = %bad, %if.end17
  call void @llvm.lifetime.end.p0(i64 8, ptr %cobj) #11, !dbg !13317
  call void @llvm.lifetime.end.p0(i64 8, ptr %d) #11, !dbg !13317
  %22 = load i32, ptr %retval, align 4, !dbg !13317
  ret i32 %22, !dbg !13317
}

declare !dbg !13318 ptr @PyModule_GetName(ptr noundef) #1

declare !dbg !13321 i32 @PyCapsule_IsValid(ptr noundef, ptr noundef) #1

declare !dbg !13324 ptr @PyCapsule_GetName(ptr noundef) #1

declare !dbg !13325 ptr @PyUnicode_Concat(ptr noundef, ptr noundef) #1

declare !dbg !13326 ptr @PyImport_GetModule(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_Init(ptr noundef %op, ptr noundef %ml, i32 noundef %flags, ptr noundef %qualname, ptr noundef %closure, ptr noundef %module, ptr noundef %globals, ptr noundef %code) #0 !dbg !13327 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %ml.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  %qualname.addr = alloca ptr, align 8
  %closure.addr = alloca ptr, align 8
  %module.addr = alloca ptr, align 8
  %globals.addr = alloca ptr, align 8
  %code.addr = alloca ptr, align 8
  %cf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !13331, metadata !DIExpression()), !dbg !13340
  store ptr %ml, ptr %ml.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %ml.addr, metadata !13332, metadata !DIExpression()), !dbg !13341
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !13333, metadata !DIExpression()), !dbg !13342
  store ptr %qualname, ptr %qualname.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %qualname.addr, metadata !13334, metadata !DIExpression()), !dbg !13343
  store ptr %closure, ptr %closure.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %closure.addr, metadata !13335, metadata !DIExpression()), !dbg !13344
  store ptr %module, ptr %module.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !13336, metadata !DIExpression()), !dbg !13345
  store ptr %globals, ptr %globals.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %globals.addr, metadata !13337, metadata !DIExpression()), !dbg !13346
  store ptr %code, ptr %code.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %code.addr, metadata !13338, metadata !DIExpression()), !dbg !13347
  call void @llvm.lifetime.start.p0(i64 8, ptr %cf) #11, !dbg !13348
  tail call void @llvm.dbg.declare(metadata ptr %cf, metadata !13339, metadata !DIExpression()), !dbg !13349
  %0 = load ptr, ptr %op.addr, align 8, !dbg !13350, !tbaa !1899
  store ptr %0, ptr %cf, align 8, !dbg !13349, !tbaa !1899
  %1 = load ptr, ptr %op.addr, align 8, !dbg !13351, !tbaa !1899
  %cmp = icmp eq ptr %1, null, !dbg !13351
  %lnot = xor i1 %cmp, true, !dbg !13351
  %lnot1 = xor i1 %lnot, true, !dbg !13351
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13351
  %conv = sext i32 %lnot.ext to i64, !dbg !13351
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13351
  %tobool = icmp ne i64 %expval, 0, !dbg !13351
  br i1 %tobool, label %if.then, label %if.end, !dbg !13353

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !13354
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13354

if.end:                                           ; preds = %entry
  %2 = load i32, ptr %flags.addr, align 4, !dbg !13355, !tbaa !1984
  %3 = load ptr, ptr %op.addr, align 8, !dbg !13356, !tbaa !1899
  %flags2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 11, !dbg !13357
  store i32 %2, ptr %flags2, align 8, !dbg !13358, !tbaa !4239
  %4 = load ptr, ptr %op.addr, align 8, !dbg !13359, !tbaa !1899
  %m_weakreflist = getelementptr inbounds %struct.PyCFunctionObject, ptr %4, i32 0, i32 4, !dbg !13359
  store ptr null, ptr %m_weakreflist, align 8, !dbg !13360, !tbaa !4651
  %5 = load ptr, ptr %ml.addr, align 8, !dbg !13361, !tbaa !1899
  %6 = load ptr, ptr %cf, align 8, !dbg !13362, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %6, i32 0, i32 1, !dbg !13363
  store ptr %5, ptr %m_ml, align 8, !dbg !13364, !tbaa !4746
  %7 = load ptr, ptr %op.addr, align 8, !dbg !13365, !tbaa !1899
  %8 = load ptr, ptr %cf, align 8, !dbg !13366, !tbaa !1899
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %8, i32 0, i32 2, !dbg !13367
  store ptr %7, ptr %m_self, align 8, !dbg !13368, !tbaa !4850
  %9 = load ptr, ptr %closure.addr, align 8, !dbg !13369, !tbaa !1899
  call void @Py_XINCREF(ptr noundef %9), !dbg !13369
  %10 = load ptr, ptr %closure.addr, align 8, !dbg !13370, !tbaa !1899
  %11 = load ptr, ptr %op.addr, align 8, !dbg !13371, !tbaa !1899
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 7, !dbg !13372
  store ptr %10, ptr %func_closure, align 8, !dbg !13373, !tbaa !4363
  %12 = load ptr, ptr %module.addr, align 8, !dbg !13374, !tbaa !1899
  call void @Py_XINCREF(ptr noundef %12), !dbg !13374
  %13 = load ptr, ptr %module.addr, align 8, !dbg !13375, !tbaa !1899
  %14 = load ptr, ptr %cf, align 8, !dbg !13376, !tbaa !1899
  %m_module = getelementptr inbounds %struct.PyCFunctionObject, ptr %14, i32 0, i32 3, !dbg !13377
  store ptr %13, ptr %m_module, align 8, !dbg !13378, !tbaa !4370
  %15 = load ptr, ptr %op.addr, align 8, !dbg !13379, !tbaa !1899
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %15, i32 0, i32 1, !dbg !13380
  store ptr null, ptr %func_dict, align 8, !dbg !13381, !tbaa !4377
  %16 = load ptr, ptr %op.addr, align 8, !dbg !13382, !tbaa !1899
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %16, i32 0, i32 2, !dbg !13383
  store ptr null, ptr %func_name, align 8, !dbg !13384, !tbaa !4384
  %17 = load ptr, ptr %qualname.addr, align 8, !dbg !13385, !tbaa !1899
  call void @Py_INCREF(ptr noundef %17), !dbg !13385
  %18 = load ptr, ptr %qualname.addr, align 8, !dbg !13386, !tbaa !1899
  %19 = load ptr, ptr %op.addr, align 8, !dbg !13387, !tbaa !1899
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %19, i32 0, i32 3, !dbg !13388
  store ptr %18, ptr %func_qualname, align 8, !dbg !13389, !tbaa !4197
  %20 = load ptr, ptr %op.addr, align 8, !dbg !13390, !tbaa !1899
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %20, i32 0, i32 4, !dbg !13391
  store ptr null, ptr %func_doc, align 8, !dbg !13392, !tbaa !4397
  %21 = load ptr, ptr %op.addr, align 8, !dbg !13393, !tbaa !1899
  %mm_class = getelementptr inbounds %struct.PyCMethodObject, ptr %21, i32 0, i32 1, !dbg !13394
  store ptr null, ptr %mm_class, align 8, !dbg !13395, !tbaa !4418
  %22 = load ptr, ptr %globals.addr, align 8, !dbg !13396, !tbaa !1899
  %23 = load ptr, ptr %op.addr, align 8, !dbg !13397, !tbaa !1899
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %23, i32 0, i32 5, !dbg !13398
  store ptr %22, ptr %func_globals, align 8, !dbg !13399, !tbaa !4404
  %24 = load ptr, ptr %op.addr, align 8, !dbg !13400, !tbaa !1899
  %func_globals3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %24, i32 0, i32 5, !dbg !13400
  %25 = load ptr, ptr %func_globals3, align 8, !dbg !13400, !tbaa !4404
  call void @Py_INCREF(ptr noundef %25), !dbg !13400
  %26 = load ptr, ptr %code.addr, align 8, !dbg !13401, !tbaa !1899
  call void @Py_XINCREF(ptr noundef %26), !dbg !13401
  %27 = load ptr, ptr %code.addr, align 8, !dbg !13402, !tbaa !1899
  %28 = load ptr, ptr %op.addr, align 8, !dbg !13403, !tbaa !1899
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %28, i32 0, i32 6, !dbg !13404
  store ptr %27, ptr %func_code, align 8, !dbg !13405, !tbaa !4411
  %29 = load ptr, ptr %op.addr, align 8, !dbg !13406, !tbaa !1899
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %29, i32 0, i32 9, !dbg !13407
  store i32 0, ptr %defaults_pyobjects, align 8, !dbg !13408, !tbaa !4457
  %30 = load ptr, ptr %op.addr, align 8, !dbg !13409, !tbaa !1899
  %defaults_size = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %30, i32 0, i32 10, !dbg !13410
  store i64 0, ptr %defaults_size, align 8, !dbg !13411, !tbaa !13412
  %31 = load ptr, ptr %op.addr, align 8, !dbg !13413, !tbaa !1899
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %31, i32 0, i32 8, !dbg !13414
  store ptr null, ptr %defaults, align 8, !dbg !13415, !tbaa !4445
  %32 = load ptr, ptr %op.addr, align 8, !dbg !13416, !tbaa !1899
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %32, i32 0, i32 12, !dbg !13417
  store ptr null, ptr %defaults_tuple, align 8, !dbg !13418, !tbaa !3884
  %33 = load ptr, ptr %op.addr, align 8, !dbg !13419, !tbaa !1899
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %33, i32 0, i32 13, !dbg !13420
  store ptr null, ptr %defaults_kwdict, align 8, !dbg !13421, !tbaa !4431
  %34 = load ptr, ptr %op.addr, align 8, !dbg !13422, !tbaa !1899
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %34, i32 0, i32 14, !dbg !13423
  store ptr null, ptr %defaults_getter, align 8, !dbg !13424, !tbaa !5323
  %35 = load ptr, ptr %op.addr, align 8, !dbg !13425, !tbaa !1899
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %35, i32 0, i32 15, !dbg !13426
  store ptr null, ptr %func_annotations, align 8, !dbg !13427, !tbaa !4582
  %36 = load ptr, ptr %op.addr, align 8, !dbg !13428, !tbaa !1899
  %func_is_coroutine = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %36, i32 0, i32 16, !dbg !13429
  store ptr null, ptr %func_is_coroutine, align 8, !dbg !13430, !tbaa !4438
  %37 = load ptr, ptr %ml.addr, align 8, !dbg !13431, !tbaa !1899
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %37, i32 0, i32 2, !dbg !13432
  %38 = load i32, ptr %ml_flags, align 8, !dbg !13432, !tbaa !4755
  %and = and i32 %38, 655, !dbg !13433
  switch i32 %and, label %sw.default [
    i32 4, label %sw.bb
    i32 8, label %sw.bb4
    i32 642, label %sw.bb6
    i32 130, label %sw.bb8
    i32 3, label %sw.bb10
  ], !dbg !13434

sw.bb:                                            ; preds = %if.end
  %39 = load ptr, ptr %op.addr, align 8, !dbg !13435, !tbaa !1899
  %vectorcall = getelementptr inbounds %struct.PyCFunctionObject, ptr %39, i32 0, i32 5, !dbg !13435
  store ptr @__Pyx_CyFunction_Vectorcall_NOARGS, ptr %vectorcall, align 8, !dbg !13437, !tbaa !4225
  br label %sw.epilog, !dbg !13438

sw.bb4:                                           ; preds = %if.end
  %40 = load ptr, ptr %op.addr, align 8, !dbg !13439, !tbaa !1899
  %vectorcall5 = getelementptr inbounds %struct.PyCFunctionObject, ptr %40, i32 0, i32 5, !dbg !13439
  store ptr @__Pyx_CyFunction_Vectorcall_O, ptr %vectorcall5, align 8, !dbg !13440, !tbaa !4225
  br label %sw.epilog, !dbg !13441

sw.bb6:                                           ; preds = %if.end
  %41 = load ptr, ptr %op.addr, align 8, !dbg !13442, !tbaa !1899
  %vectorcall7 = getelementptr inbounds %struct.PyCFunctionObject, ptr %41, i32 0, i32 5, !dbg !13442
  store ptr @__Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD, ptr %vectorcall7, align 8, !dbg !13443, !tbaa !4225
  br label %sw.epilog, !dbg !13444

sw.bb8:                                           ; preds = %if.end
  %42 = load ptr, ptr %op.addr, align 8, !dbg !13445, !tbaa !1899
  %vectorcall9 = getelementptr inbounds %struct.PyCFunctionObject, ptr %42, i32 0, i32 5, !dbg !13445
  store ptr @__Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS, ptr %vectorcall9, align 8, !dbg !13446, !tbaa !4225
  br label %sw.epilog, !dbg !13447

sw.bb10:                                          ; preds = %if.end
  %43 = load ptr, ptr %op.addr, align 8, !dbg !13448, !tbaa !1899
  %vectorcall11 = getelementptr inbounds %struct.PyCFunctionObject, ptr %43, i32 0, i32 5, !dbg !13448
  store ptr null, ptr %vectorcall11, align 8, !dbg !13449, !tbaa !4225
  br label %sw.epilog, !dbg !13450

sw.default:                                       ; preds = %if.end
  %44 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !13451, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %44, ptr noundef @.str.35), !dbg !13452
  %45 = load ptr, ptr %op.addr, align 8, !dbg !13453, !tbaa !1899
  call void @Py_DECREF(ptr noundef %45), !dbg !13453
  store ptr null, ptr %retval, align 8, !dbg !13454
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13454

sw.epilog:                                        ; preds = %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb
  %46 = load ptr, ptr %op.addr, align 8, !dbg !13455, !tbaa !1899
  store ptr %46, ptr %retval, align 8, !dbg !13456
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13456

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cf) #11, !dbg !13457
  %47 = load ptr, ptr %retval, align 8, !dbg !13457
  ret ptr %47, !dbg !13457
}

declare !dbg !13458 ptr @_PyObject_GC_New(ptr noundef) #1

declare !dbg !13461 void @PyObject_GC_Track(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_Vectorcall_NOARGS(ptr noundef %func, ptr noundef %args, i64 noundef %nargsf, ptr noundef %kwnames) #0 !dbg !13462 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargsf.addr = alloca i64, align 8
  %kwnames.addr = alloca ptr, align 8
  %cyfunc = alloca ptr, align 8
  %def = alloca ptr, align 8
  %nargs = alloca i64, align 8
  %self = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !13464, metadata !DIExpression()), !dbg !13472
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !13465, metadata !DIExpression()), !dbg !13473
  store i64 %nargsf, ptr %nargsf.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %nargsf.addr, metadata !13466, metadata !DIExpression()), !dbg !13474
  store ptr %kwnames, ptr %kwnames.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwnames.addr, metadata !13467, metadata !DIExpression()), !dbg !13475
  call void @llvm.lifetime.start.p0(i64 8, ptr %cyfunc) #11, !dbg !13476
  tail call void @llvm.dbg.declare(metadata ptr %cyfunc, metadata !13468, metadata !DIExpression()), !dbg !13477
  %0 = load ptr, ptr %func.addr, align 8, !dbg !13478, !tbaa !1899
  store ptr %0, ptr %cyfunc, align 8, !dbg !13477, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %def) #11, !dbg !13479
  tail call void @llvm.dbg.declare(metadata ptr %def, metadata !13469, metadata !DIExpression()), !dbg !13480
  %1 = load ptr, ptr %cyfunc, align 8, !dbg !13481, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1, !dbg !13482
  %2 = load ptr, ptr %m_ml, align 8, !dbg !13482, !tbaa !4746
  store ptr %2, ptr %def, align 8, !dbg !13480, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %nargs) #11, !dbg !13483
  tail call void @llvm.dbg.declare(metadata ptr %nargs, metadata !13470, metadata !DIExpression()), !dbg !13484
  %3 = load i64, ptr %nargsf.addr, align 8, !dbg !13485, !tbaa !2597
  %call = call i64 @PyVectorcall_NARGS(i64 noundef %3), !dbg !13486
  store i64 %call, ptr %nargs, align 8, !dbg !13484, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #11, !dbg !13487
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !13471, metadata !DIExpression()), !dbg !13488
  %4 = load ptr, ptr %cyfunc, align 8, !dbg !13489, !tbaa !1899
  %5 = load i64, ptr %nargs, align 8, !dbg !13490, !tbaa !2597
  %6 = load ptr, ptr %kwnames.addr, align 8, !dbg !13491, !tbaa !1899
  %call1 = call i32 @__Pyx_CyFunction_Vectorcall_CheckArgs(ptr noundef %4, i64 noundef %5, ptr noundef %6), !dbg !13492
  switch i32 %call1, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ], !dbg !13493

sw.bb:                                            ; preds = %entry
  %7 = load ptr, ptr %args.addr, align 8, !dbg !13494, !tbaa !1899
  %arrayidx = getelementptr ptr, ptr %7, i64 0, !dbg !13494
  %8 = load ptr, ptr %arrayidx, align 8, !dbg !13494, !tbaa !1899
  store ptr %8, ptr %self, align 8, !dbg !13496, !tbaa !1899
  %9 = load ptr, ptr %args.addr, align 8, !dbg !13497, !tbaa !1899
  %add.ptr = getelementptr ptr, ptr %9, i64 1, !dbg !13497
  store ptr %add.ptr, ptr %args.addr, align 8, !dbg !13497, !tbaa !1899
  %10 = load i64, ptr %nargs, align 8, !dbg !13498, !tbaa !2597
  %sub = sub i64 %10, 1, !dbg !13498
  store i64 %sub, ptr %nargs, align 8, !dbg !13498, !tbaa !2597
  br label %sw.epilog, !dbg !13499

sw.bb2:                                           ; preds = %entry
  %11 = load ptr, ptr %cyfunc, align 8, !dbg !13500, !tbaa !1899
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %11, i32 0, i32 2, !dbg !13501
  %12 = load ptr, ptr %m_self, align 8, !dbg !13501, !tbaa !4850
  store ptr %12, ptr %self, align 8, !dbg !13502, !tbaa !1899
  br label %sw.epilog, !dbg !13503

sw.default:                                       ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !13504
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13504

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %13 = load i64, ptr %nargs, align 8, !dbg !13505, !tbaa !2597
  %cmp = icmp ne i64 %13, 0, !dbg !13505
  %lnot = xor i1 %cmp, true, !dbg !13505
  %lnot3 = xor i1 %lnot, true, !dbg !13505
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13505
  %conv = sext i32 %lnot.ext to i64, !dbg !13505
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13505
  %tobool = icmp ne i64 %expval, 0, !dbg !13505
  br i1 %tobool, label %if.then, label %if.end, !dbg !13507

if.then:                                          ; preds = %sw.epilog
  %14 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !13508, !tbaa !1899
  %15 = load ptr, ptr %def, align 8, !dbg !13510, !tbaa !1899
  %ml_name = getelementptr inbounds %struct.PyMethodDef, ptr %15, i32 0, i32 0, !dbg !13511
  %16 = load ptr, ptr %ml_name, align 8, !dbg !13511, !tbaa !4793
  %17 = load i64, ptr %nargs, align 8, !dbg !13512, !tbaa !2597
  %call4 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %14, ptr noundef @.str.33, ptr noundef %16, i64 noundef %17), !dbg !13513
  store ptr null, ptr %retval, align 8, !dbg !13514
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13514

if.end:                                           ; preds = %sw.epilog
  %18 = load ptr, ptr %def, align 8, !dbg !13515, !tbaa !1899
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %18, i32 0, i32 1, !dbg !13516
  %19 = load ptr, ptr %ml_meth, align 8, !dbg !13516, !tbaa !4748
  %20 = load ptr, ptr %self, align 8, !dbg !13517, !tbaa !1899
  %call5 = call ptr %19(ptr noundef %20, ptr noundef null), !dbg !13515
  store ptr %call5, ptr %retval, align 8, !dbg !13518
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13518

cleanup:                                          ; preds = %if.end, %if.then, %sw.default
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #11, !dbg !13519
  call void @llvm.lifetime.end.p0(i64 8, ptr %nargs) #11, !dbg !13519
  call void @llvm.lifetime.end.p0(i64 8, ptr %def) #11, !dbg !13519
  call void @llvm.lifetime.end.p0(i64 8, ptr %cyfunc) #11, !dbg !13519
  %21 = load ptr, ptr %retval, align 8, !dbg !13519
  ret ptr %21, !dbg !13519
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_Vectorcall_O(ptr noundef %func, ptr noundef %args, i64 noundef %nargsf, ptr noundef %kwnames) #0 !dbg !13520 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargsf.addr = alloca i64, align 8
  %kwnames.addr = alloca ptr, align 8
  %cyfunc = alloca ptr, align 8
  %def = alloca ptr, align 8
  %nargs = alloca i64, align 8
  %self = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !13522, metadata !DIExpression()), !dbg !13530
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !13523, metadata !DIExpression()), !dbg !13531
  store i64 %nargsf, ptr %nargsf.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %nargsf.addr, metadata !13524, metadata !DIExpression()), !dbg !13532
  store ptr %kwnames, ptr %kwnames.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwnames.addr, metadata !13525, metadata !DIExpression()), !dbg !13533
  call void @llvm.lifetime.start.p0(i64 8, ptr %cyfunc) #11, !dbg !13534
  tail call void @llvm.dbg.declare(metadata ptr %cyfunc, metadata !13526, metadata !DIExpression()), !dbg !13535
  %0 = load ptr, ptr %func.addr, align 8, !dbg !13536, !tbaa !1899
  store ptr %0, ptr %cyfunc, align 8, !dbg !13535, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %def) #11, !dbg !13537
  tail call void @llvm.dbg.declare(metadata ptr %def, metadata !13527, metadata !DIExpression()), !dbg !13538
  %1 = load ptr, ptr %cyfunc, align 8, !dbg !13539, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1, !dbg !13540
  %2 = load ptr, ptr %m_ml, align 8, !dbg !13540, !tbaa !4746
  store ptr %2, ptr %def, align 8, !dbg !13538, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %nargs) #11, !dbg !13541
  tail call void @llvm.dbg.declare(metadata ptr %nargs, metadata !13528, metadata !DIExpression()), !dbg !13542
  %3 = load i64, ptr %nargsf.addr, align 8, !dbg !13543, !tbaa !2597
  %call = call i64 @PyVectorcall_NARGS(i64 noundef %3), !dbg !13544
  store i64 %call, ptr %nargs, align 8, !dbg !13542, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #11, !dbg !13545
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !13529, metadata !DIExpression()), !dbg !13546
  %4 = load ptr, ptr %cyfunc, align 8, !dbg !13547, !tbaa !1899
  %5 = load i64, ptr %nargs, align 8, !dbg !13548, !tbaa !2597
  %6 = load ptr, ptr %kwnames.addr, align 8, !dbg !13549, !tbaa !1899
  %call1 = call i32 @__Pyx_CyFunction_Vectorcall_CheckArgs(ptr noundef %4, i64 noundef %5, ptr noundef %6), !dbg !13550
  switch i32 %call1, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ], !dbg !13551

sw.bb:                                            ; preds = %entry
  %7 = load ptr, ptr %args.addr, align 8, !dbg !13552, !tbaa !1899
  %arrayidx = getelementptr ptr, ptr %7, i64 0, !dbg !13552
  %8 = load ptr, ptr %arrayidx, align 8, !dbg !13552, !tbaa !1899
  store ptr %8, ptr %self, align 8, !dbg !13554, !tbaa !1899
  %9 = load ptr, ptr %args.addr, align 8, !dbg !13555, !tbaa !1899
  %add.ptr = getelementptr ptr, ptr %9, i64 1, !dbg !13555
  store ptr %add.ptr, ptr %args.addr, align 8, !dbg !13555, !tbaa !1899
  %10 = load i64, ptr %nargs, align 8, !dbg !13556, !tbaa !2597
  %sub = sub i64 %10, 1, !dbg !13556
  store i64 %sub, ptr %nargs, align 8, !dbg !13556, !tbaa !2597
  br label %sw.epilog, !dbg !13557

sw.bb2:                                           ; preds = %entry
  %11 = load ptr, ptr %cyfunc, align 8, !dbg !13558, !tbaa !1899
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %11, i32 0, i32 2, !dbg !13559
  %12 = load ptr, ptr %m_self, align 8, !dbg !13559, !tbaa !4850
  store ptr %12, ptr %self, align 8, !dbg !13560, !tbaa !1899
  br label %sw.epilog, !dbg !13561

sw.default:                                       ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !13562
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13562

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %13 = load i64, ptr %nargs, align 8, !dbg !13563, !tbaa !2597
  %cmp = icmp ne i64 %13, 1, !dbg !13563
  %lnot = xor i1 %cmp, true, !dbg !13563
  %lnot3 = xor i1 %lnot, true, !dbg !13563
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13563
  %conv = sext i32 %lnot.ext to i64, !dbg !13563
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13563
  %tobool = icmp ne i64 %expval, 0, !dbg !13563
  br i1 %tobool, label %if.then, label %if.end, !dbg !13565

if.then:                                          ; preds = %sw.epilog
  %14 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !13566, !tbaa !1899
  %15 = load ptr, ptr %def, align 8, !dbg !13568, !tbaa !1899
  %ml_name = getelementptr inbounds %struct.PyMethodDef, ptr %15, i32 0, i32 0, !dbg !13569
  %16 = load ptr, ptr %ml_name, align 8, !dbg !13569, !tbaa !4793
  %17 = load i64, ptr %nargs, align 8, !dbg !13570, !tbaa !2597
  %call4 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %14, ptr noundef @.str.34, ptr noundef %16, i64 noundef %17), !dbg !13571
  store ptr null, ptr %retval, align 8, !dbg !13572
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13572

if.end:                                           ; preds = %sw.epilog
  %18 = load ptr, ptr %def, align 8, !dbg !13573, !tbaa !1899
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %18, i32 0, i32 1, !dbg !13574
  %19 = load ptr, ptr %ml_meth, align 8, !dbg !13574, !tbaa !4748
  %20 = load ptr, ptr %self, align 8, !dbg !13575, !tbaa !1899
  %21 = load ptr, ptr %args.addr, align 8, !dbg !13576, !tbaa !1899
  %arrayidx5 = getelementptr ptr, ptr %21, i64 0, !dbg !13576
  %22 = load ptr, ptr %arrayidx5, align 8, !dbg !13576, !tbaa !1899
  %call6 = call ptr %19(ptr noundef %20, ptr noundef %22), !dbg !13573
  store ptr %call6, ptr %retval, align 8, !dbg !13577
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13577

cleanup:                                          ; preds = %if.end, %if.then, %sw.default
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #11, !dbg !13578
  call void @llvm.lifetime.end.p0(i64 8, ptr %nargs) #11, !dbg !13578
  call void @llvm.lifetime.end.p0(i64 8, ptr %def) #11, !dbg !13578
  call void @llvm.lifetime.end.p0(i64 8, ptr %cyfunc) #11, !dbg !13578
  %23 = load ptr, ptr %retval, align 8, !dbg !13578
  ret ptr %23, !dbg !13578
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(ptr noundef %func, ptr noundef %args, i64 noundef %nargsf, ptr noundef %kwnames) #0 !dbg !13579 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargsf.addr = alloca i64, align 8
  %kwnames.addr = alloca ptr, align 8
  %cyfunc = alloca ptr, align 8
  %def = alloca ptr, align 8
  %cls = alloca ptr, align 8
  %nargs = alloca i64, align 8
  %self = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !13581, metadata !DIExpression()), !dbg !13590
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !13582, metadata !DIExpression()), !dbg !13591
  store i64 %nargsf, ptr %nargsf.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %nargsf.addr, metadata !13583, metadata !DIExpression()), !dbg !13592
  store ptr %kwnames, ptr %kwnames.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwnames.addr, metadata !13584, metadata !DIExpression()), !dbg !13593
  call void @llvm.lifetime.start.p0(i64 8, ptr %cyfunc) #11, !dbg !13594
  tail call void @llvm.dbg.declare(metadata ptr %cyfunc, metadata !13585, metadata !DIExpression()), !dbg !13595
  %0 = load ptr, ptr %func.addr, align 8, !dbg !13596, !tbaa !1899
  store ptr %0, ptr %cyfunc, align 8, !dbg !13595, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %def) #11, !dbg !13597
  tail call void @llvm.dbg.declare(metadata ptr %def, metadata !13586, metadata !DIExpression()), !dbg !13598
  %1 = load ptr, ptr %cyfunc, align 8, !dbg !13599, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1, !dbg !13600
  %2 = load ptr, ptr %m_ml, align 8, !dbg !13600, !tbaa !4746
  store ptr %2, ptr %def, align 8, !dbg !13598, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %cls) #11, !dbg !13601
  tail call void @llvm.dbg.declare(metadata ptr %cls, metadata !13587, metadata !DIExpression()), !dbg !13602
  %3 = load ptr, ptr %cyfunc, align 8, !dbg !13603, !tbaa !1899
  %mm_class = getelementptr inbounds %struct.PyCMethodObject, ptr %3, i32 0, i32 1, !dbg !13603
  %4 = load ptr, ptr %mm_class, align 8, !dbg !13603, !tbaa !4418
  store ptr %4, ptr %cls, align 8, !dbg !13602, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %nargs) #11, !dbg !13604
  tail call void @llvm.dbg.declare(metadata ptr %nargs, metadata !13588, metadata !DIExpression()), !dbg !13605
  %5 = load i64, ptr %nargsf.addr, align 8, !dbg !13606, !tbaa !2597
  %call = call i64 @PyVectorcall_NARGS(i64 noundef %5), !dbg !13607
  store i64 %call, ptr %nargs, align 8, !dbg !13605, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #11, !dbg !13608
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !13589, metadata !DIExpression()), !dbg !13609
  %6 = load ptr, ptr %cyfunc, align 8, !dbg !13610, !tbaa !1899
  %7 = load i64, ptr %nargs, align 8, !dbg !13611, !tbaa !2597
  %call1 = call i32 @__Pyx_CyFunction_Vectorcall_CheckArgs(ptr noundef %6, i64 noundef %7, ptr noundef null), !dbg !13612
  switch i32 %call1, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ], !dbg !13613

sw.bb:                                            ; preds = %entry
  %8 = load ptr, ptr %args.addr, align 8, !dbg !13614, !tbaa !1899
  %arrayidx = getelementptr ptr, ptr %8, i64 0, !dbg !13614
  %9 = load ptr, ptr %arrayidx, align 8, !dbg !13614, !tbaa !1899
  store ptr %9, ptr %self, align 8, !dbg !13616, !tbaa !1899
  %10 = load ptr, ptr %args.addr, align 8, !dbg !13617, !tbaa !1899
  %add.ptr = getelementptr ptr, ptr %10, i64 1, !dbg !13617
  store ptr %add.ptr, ptr %args.addr, align 8, !dbg !13617, !tbaa !1899
  %11 = load i64, ptr %nargs, align 8, !dbg !13618, !tbaa !2597
  %sub = sub i64 %11, 1, !dbg !13618
  store i64 %sub, ptr %nargs, align 8, !dbg !13618, !tbaa !2597
  br label %sw.epilog, !dbg !13619

sw.bb2:                                           ; preds = %entry
  %12 = load ptr, ptr %cyfunc, align 8, !dbg !13620, !tbaa !1899
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %12, i32 0, i32 2, !dbg !13621
  %13 = load ptr, ptr %m_self, align 8, !dbg !13621, !tbaa !4850
  store ptr %13, ptr %self, align 8, !dbg !13622, !tbaa !1899
  br label %sw.epilog, !dbg !13623

sw.default:                                       ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !13624
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13624

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %14 = load ptr, ptr %def, align 8, !dbg !13625, !tbaa !1899
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %14, i32 0, i32 1, !dbg !13626
  %15 = load ptr, ptr %ml_meth, align 8, !dbg !13626, !tbaa !4748
  %16 = load ptr, ptr %self, align 8, !dbg !13627, !tbaa !1899
  %17 = load ptr, ptr %cls, align 8, !dbg !13628, !tbaa !1899
  %18 = load ptr, ptr %args.addr, align 8, !dbg !13629, !tbaa !1899
  %19 = load i64, ptr %nargs, align 8, !dbg !13630, !tbaa !2597
  %20 = load ptr, ptr %kwnames.addr, align 8, !dbg !13631, !tbaa !1899
  %call3 = call ptr %15(ptr noundef %16, ptr noundef %17, ptr noundef %18, i64 noundef %19, ptr noundef %20), !dbg !13632
  store ptr %call3, ptr %retval, align 8, !dbg !13633
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13633

cleanup:                                          ; preds = %sw.epilog, %sw.default
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #11, !dbg !13634
  call void @llvm.lifetime.end.p0(i64 8, ptr %nargs) #11, !dbg !13634
  call void @llvm.lifetime.end.p0(i64 8, ptr %cls) #11, !dbg !13634
  call void @llvm.lifetime.end.p0(i64 8, ptr %def) #11, !dbg !13634
  call void @llvm.lifetime.end.p0(i64 8, ptr %cyfunc) #11, !dbg !13634
  %21 = load ptr, ptr %retval, align 8, !dbg !13634
  ret ptr %21, !dbg !13634
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(ptr noundef %func, ptr noundef %args, i64 noundef %nargsf, ptr noundef %kwnames) #0 !dbg !13635 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargsf.addr = alloca i64, align 8
  %kwnames.addr = alloca ptr, align 8
  %cyfunc = alloca ptr, align 8
  %def = alloca ptr, align 8
  %nargs = alloca i64, align 8
  %self = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !13637, metadata !DIExpression()), !dbg !13645
  store ptr %args, ptr %args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !13638, metadata !DIExpression()), !dbg !13646
  store i64 %nargsf, ptr %nargsf.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %nargsf.addr, metadata !13639, metadata !DIExpression()), !dbg !13647
  store ptr %kwnames, ptr %kwnames.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwnames.addr, metadata !13640, metadata !DIExpression()), !dbg !13648
  call void @llvm.lifetime.start.p0(i64 8, ptr %cyfunc) #11, !dbg !13649
  tail call void @llvm.dbg.declare(metadata ptr %cyfunc, metadata !13641, metadata !DIExpression()), !dbg !13650
  %0 = load ptr, ptr %func.addr, align 8, !dbg !13651, !tbaa !1899
  store ptr %0, ptr %cyfunc, align 8, !dbg !13650, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %def) #11, !dbg !13652
  tail call void @llvm.dbg.declare(metadata ptr %def, metadata !13642, metadata !DIExpression()), !dbg !13653
  %1 = load ptr, ptr %cyfunc, align 8, !dbg !13654, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1, !dbg !13655
  %2 = load ptr, ptr %m_ml, align 8, !dbg !13655, !tbaa !4746
  store ptr %2, ptr %def, align 8, !dbg !13653, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %nargs) #11, !dbg !13656
  tail call void @llvm.dbg.declare(metadata ptr %nargs, metadata !13643, metadata !DIExpression()), !dbg !13657
  %3 = load i64, ptr %nargsf.addr, align 8, !dbg !13658, !tbaa !2597
  %call = call i64 @PyVectorcall_NARGS(i64 noundef %3), !dbg !13659
  store i64 %call, ptr %nargs, align 8, !dbg !13657, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #11, !dbg !13660
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !13644, metadata !DIExpression()), !dbg !13661
  %4 = load ptr, ptr %cyfunc, align 8, !dbg !13662, !tbaa !1899
  %5 = load i64, ptr %nargs, align 8, !dbg !13663, !tbaa !2597
  %call1 = call i32 @__Pyx_CyFunction_Vectorcall_CheckArgs(ptr noundef %4, i64 noundef %5, ptr noundef null), !dbg !13664
  switch i32 %call1, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ], !dbg !13665

sw.bb:                                            ; preds = %entry
  %6 = load ptr, ptr %args.addr, align 8, !dbg !13666, !tbaa !1899
  %arrayidx = getelementptr ptr, ptr %6, i64 0, !dbg !13666
  %7 = load ptr, ptr %arrayidx, align 8, !dbg !13666, !tbaa !1899
  store ptr %7, ptr %self, align 8, !dbg !13668, !tbaa !1899
  %8 = load ptr, ptr %args.addr, align 8, !dbg !13669, !tbaa !1899
  %add.ptr = getelementptr ptr, ptr %8, i64 1, !dbg !13669
  store ptr %add.ptr, ptr %args.addr, align 8, !dbg !13669, !tbaa !1899
  %9 = load i64, ptr %nargs, align 8, !dbg !13670, !tbaa !2597
  %sub = sub i64 %9, 1, !dbg !13670
  store i64 %sub, ptr %nargs, align 8, !dbg !13670, !tbaa !2597
  br label %sw.epilog, !dbg !13671

sw.bb2:                                           ; preds = %entry
  %10 = load ptr, ptr %cyfunc, align 8, !dbg !13672, !tbaa !1899
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %10, i32 0, i32 2, !dbg !13673
  %11 = load ptr, ptr %m_self, align 8, !dbg !13673, !tbaa !4850
  store ptr %11, ptr %self, align 8, !dbg !13674, !tbaa !1899
  br label %sw.epilog, !dbg !13675

sw.default:                                       ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !13676
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13676

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %12 = load ptr, ptr %def, align 8, !dbg !13677, !tbaa !1899
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %12, i32 0, i32 1, !dbg !13678
  %13 = load ptr, ptr %ml_meth, align 8, !dbg !13678, !tbaa !4748
  %14 = load ptr, ptr %self, align 8, !dbg !13679, !tbaa !1899
  %15 = load ptr, ptr %args.addr, align 8, !dbg !13680, !tbaa !1899
  %16 = load i64, ptr %nargs, align 8, !dbg !13681, !tbaa !2597
  %17 = load ptr, ptr %kwnames.addr, align 8, !dbg !13682, !tbaa !1899
  %call3 = call ptr %13(ptr noundef %14, ptr noundef %15, i64 noundef %16, ptr noundef %17), !dbg !13683
  store ptr %call3, ptr %retval, align 8, !dbg !13684
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13684

cleanup:                                          ; preds = %sw.epilog, %sw.default
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #11, !dbg !13685
  call void @llvm.lifetime.end.p0(i64 8, ptr %nargs) #11, !dbg !13685
  call void @llvm.lifetime.end.p0(i64 8, ptr %def) #11, !dbg !13685
  call void @llvm.lifetime.end.p0(i64 8, ptr %cyfunc) #11, !dbg !13685
  %18 = load ptr, ptr %retval, align 8, !dbg !13685
  ret ptr %18, !dbg !13685
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_CyFunction_Vectorcall_CheckArgs(ptr noundef %cyfunc, i64 noundef %nargs, ptr noundef %kwnames) #3 !dbg !13686 {
entry:
  %retval = alloca i32, align 4
  %cyfunc.addr = alloca ptr, align 8
  %nargs.addr = alloca i64, align 8
  %kwnames.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %cyfunc, ptr %cyfunc.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %cyfunc.addr, metadata !13690, metadata !DIExpression()), !dbg !13694
  store i64 %nargs, ptr %nargs.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %nargs.addr, metadata !13691, metadata !DIExpression()), !dbg !13695
  store ptr %kwnames, ptr %kwnames.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwnames.addr, metadata !13692, metadata !DIExpression()), !dbg !13696
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #11, !dbg !13697
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !13693, metadata !DIExpression()), !dbg !13698
  store i32 0, ptr %ret, align 4, !dbg !13698, !tbaa !1984
  %0 = load ptr, ptr %cyfunc.addr, align 8, !dbg !13699, !tbaa !1899
  %flags = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 11, !dbg !13701
  %1 = load i32, ptr %flags, align 8, !dbg !13701, !tbaa !4239
  %and = and i32 %1, 4, !dbg !13702
  %tobool = icmp ne i32 %and, 0, !dbg !13702
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !13703

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %cyfunc.addr, align 8, !dbg !13704, !tbaa !1899
  %flags1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 11, !dbg !13705
  %3 = load i32, ptr %flags1, align 8, !dbg !13705, !tbaa !4239
  %and2 = and i32 %3, 1, !dbg !13706
  %tobool3 = icmp ne i32 %and2, 0, !dbg !13706
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !13707

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, ptr %nargs.addr, align 8, !dbg !13708, !tbaa !2597
  %cmp = icmp slt i64 %4, 1, !dbg !13708
  %lnot = xor i1 %cmp, true, !dbg !13708
  %lnot4 = xor i1 %lnot, true, !dbg !13708
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !13708
  %conv = sext i32 %lnot.ext to i64, !dbg !13708
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !13708
  %tobool5 = icmp ne i64 %expval, 0, !dbg !13708
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !13711

if.then6:                                         ; preds = %if.then
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !13712, !tbaa !1899
  %6 = load ptr, ptr %cyfunc.addr, align 8, !dbg !13714, !tbaa !1899
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %6, i32 0, i32 1, !dbg !13715
  %7 = load ptr, ptr %m_ml, align 8, !dbg !13715, !tbaa !4746
  %ml_name = getelementptr inbounds %struct.PyMethodDef, ptr %7, i32 0, i32 0, !dbg !13716
  %8 = load ptr, ptr %ml_name, align 8, !dbg !13716, !tbaa !4793
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.154, ptr noundef %8), !dbg !13717
  store i32 -1, ptr %retval, align 4, !dbg !13718
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13718

if.end:                                           ; preds = %if.then
  store i32 1, ptr %ret, align 4, !dbg !13719, !tbaa !1984
  br label %if.end7, !dbg !13720

if.end7:                                          ; preds = %if.end, %land.lhs.true, %entry
  %9 = load ptr, ptr %kwnames.addr, align 8, !dbg !13721, !tbaa !1899
  %tobool8 = icmp ne ptr %9, null, !dbg !13721
  %lnot9 = xor i1 %tobool8, true, !dbg !13721
  %lnot11 = xor i1 %lnot9, true, !dbg !13721
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !13721
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !13721
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0), !dbg !13721
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !13721
  br i1 %tobool15, label %land.lhs.true16, label %if.end30, !dbg !13723

land.lhs.true16:                                  ; preds = %if.end7
  %10 = load ptr, ptr %kwnames.addr, align 8, !dbg !13724, !tbaa !1899
  %call17 = call i64 @PyTuple_GET_SIZE(ptr noundef %10), !dbg !13724
  %tobool18 = icmp ne i64 %call17, 0, !dbg !13724
  %lnot19 = xor i1 %tobool18, true, !dbg !13724
  %lnot21 = xor i1 %lnot19, true, !dbg !13724
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !13724
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !13724
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !13724
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !13724
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !13725

if.then26:                                        ; preds = %land.lhs.true16
  %11 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !13726, !tbaa !1899
  %12 = load ptr, ptr %cyfunc.addr, align 8, !dbg !13728, !tbaa !1899
  %m_ml27 = getelementptr inbounds %struct.PyCFunctionObject, ptr %12, i32 0, i32 1, !dbg !13729
  %13 = load ptr, ptr %m_ml27, align 8, !dbg !13729, !tbaa !4746
  %ml_name28 = getelementptr inbounds %struct.PyMethodDef, ptr %13, i32 0, i32 0, !dbg !13730
  %14 = load ptr, ptr %ml_name28, align 8, !dbg !13730, !tbaa !4793
  %call29 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %11, ptr noundef @.str.36, ptr noundef %14), !dbg !13731
  store i32 -1, ptr %retval, align 4, !dbg !13732
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13732

if.end30:                                         ; preds = %land.lhs.true16, %if.end7
  %15 = load i32, ptr %ret, align 4, !dbg !13733, !tbaa !1984
  store i32 %15, ptr %retval, align 4, !dbg !13734
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13734

cleanup:                                          ; preds = %if.end30, %if.then26, %if.then6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #11, !dbg !13735
  %16 = load i32, ptr %retval, align 4, !dbg !13735
  ret i32 %16, !dbg !13735
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_4Plex_3DFA_1nfa_to_dfa(ptr noundef %__pyx_self, ptr noundef %__pyx_args, i64 noundef %__pyx_nargs, ptr noundef %__pyx_kwds) #0 !dbg !13736 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_nargs.addr = alloca i64, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_old_machine = alloca ptr, align 8
  %__pyx_v_debug = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %values = alloca [2 x ptr], align 16
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_pyargnames = alloca [3 x ptr], align 16
  %kw_args = alloca i64, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %kwd_pos_args = alloca i64, align 8
  %__pyx_temp = alloca i64, align 8
  %__pyx_temp125 = alloca i64, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_self.addr, metadata !13738, metadata !DIExpression()), !dbg !13773
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_args.addr, metadata !13739, metadata !DIExpression()), !dbg !13774
  store i64 %__pyx_nargs, ptr %__pyx_nargs.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_nargs.addr, metadata !13740, metadata !DIExpression()), !dbg !13775
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwds.addr, metadata !13741, metadata !DIExpression()), !dbg !13776
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_old_machine) #11, !dbg !13777
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_machine, metadata !13742, metadata !DIExpression()), !dbg !13778
  store ptr null, ptr %__pyx_v_old_machine, align 8, !dbg !13778, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_debug) #11, !dbg !13779
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_debug, metadata !13743, metadata !DIExpression()), !dbg !13780
  store ptr null, ptr %__pyx_v_debug, align 8, !dbg !13780, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !13781
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !13744, metadata !DIExpression()), !dbg !13782
  call void @llvm.lifetime.start.p0(i64 16, ptr %values) #11, !dbg !13783
  tail call void @llvm.dbg.declare(metadata ptr %values, metadata !13745, metadata !DIExpression()), !dbg !13784
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 16, i1 false), !dbg !13784
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !13785
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !13746, metadata !DIExpression()), !dbg !13786
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !13786, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !13787
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !13747, metadata !DIExpression()), !dbg !13788
  store ptr null, ptr %__pyx_filename, align 8, !dbg !13788, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !13789
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !13748, metadata !DIExpression()), !dbg !13790
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !13790, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !13791
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !13749, metadata !DIExpression()), !dbg !13792
  store ptr null, ptr %__pyx_r, align 8, !dbg !13792, !tbaa !1899
  %0 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !13793, !tbaa !1899
  %1 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !13793, !tbaa !2597
  %add.ptr = getelementptr ptr, ptr %0, i64 %1, !dbg !13793
  store ptr %add.ptr, ptr %__pyx_kwvalues, align 8, !dbg !13794, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 24, ptr %__pyx_pyargnames) #11, !dbg !13795
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_pyargnames, metadata !13750, metadata !DIExpression()), !dbg !13796
  %arrayinit.begin = getelementptr inbounds [3 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !13797
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13798, !tbaa !1899
  %__pyx_n_s_old_machine = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 67, !dbg !13798
  store ptr %__pyx_n_s_old_machine, ptr %arrayinit.begin, align 8, !dbg !13797, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !13797
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13799, !tbaa !1899
  %__pyx_n_s_debug = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 42, !dbg !13799
  store ptr %__pyx_n_s_debug, ptr %arrayinit.element, align 8, !dbg !13797, !tbaa !1899
  %arrayinit.element1 = getelementptr inbounds ptr, ptr %arrayinit.element, i64 1, !dbg !13797
  store ptr null, ptr %arrayinit.element1, align 8, !dbg !13797, !tbaa !1899
  %arrayidx = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !13800
  store ptr @_Py_NoneStruct, ptr %arrayidx, align 8, !dbg !13801, !tbaa !1899
  %4 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !13802, !tbaa !1899
  %tobool = icmp ne ptr %4, null, !dbg !13802
  br i1 %tobool, label %if.then, label %if.else82, !dbg !13803

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #11, !dbg !13804
  tail call void @llvm.dbg.declare(metadata ptr %kw_args, metadata !13753, metadata !DIExpression()), !dbg !13805
  %5 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !13806, !tbaa !2597
  switch i64 %5, label %sw.default [
    i64 2, label %sw.bb
    i64 1, label %sw.bb4
    i64 0, label %sw.epilog
  ], !dbg !13807

sw.bb:                                            ; preds = %if.then
  %6 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !13808, !tbaa !1899
  %arrayidx2 = getelementptr ptr, ptr %6, i64 1, !dbg !13808
  %7 = load ptr, ptr %arrayidx2, align 8, !dbg !13808, !tbaa !1899
  %arrayidx3 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !13810
  store ptr %7, ptr %arrayidx3, align 8, !dbg !13811, !tbaa !1899
  br label %sw.bb4, !dbg !13810

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %8 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !13812, !tbaa !1899
  %arrayidx5 = getelementptr ptr, ptr %8, i64 0, !dbg !13812
  %9 = load ptr, ptr %arrayidx5, align 8, !dbg !13812, !tbaa !1899
  %arrayidx6 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !13813
  store ptr %9, ptr %arrayidx6, align 16, !dbg !13814, !tbaa !1899
  br label %sw.epilog, !dbg !13813

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup79, !dbg !13815

sw.epilog:                                        ; preds = %sw.bb4, %if.then
  %10 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !13816, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %10), !dbg !13816
  store i64 %call, ptr %kw_args, align 8, !dbg !13817, !tbaa !2597
  %11 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !13818, !tbaa !2597
  switch i64 %11, label %sw.epilog50 [
    i64 0, label %sw.bb7
    i64 1, label %sw.bb26
  ], !dbg !13819

sw.bb7:                                           ; preds = %sw.epilog
  %12 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !13820, !tbaa !1899
  %13 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !13820, !tbaa !1899
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13820, !tbaa !1899
  %__pyx_n_s_old_machine8 = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 67, !dbg !13820
  %15 = load ptr, ptr %__pyx_n_s_old_machine8, align 8, !dbg !13820, !tbaa !2940
  %call9 = call ptr @__Pyx_GetKwValue_FASTCALL(ptr noundef %12, ptr noundef %13, ptr noundef %15), !dbg !13820
  %arrayidx10 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !13820
  store ptr %call9, ptr %arrayidx10, align 16, !dbg !13820, !tbaa !1899
  %cmp = icmp ne ptr %call9, null, !dbg !13820
  %lnot = xor i1 %cmp, true, !dbg !13820
  %lnot11 = xor i1 %lnot, true, !dbg !13820
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !13820
  %conv = sext i32 %lnot.ext to i64, !dbg !13820
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !13820
  %tobool12 = icmp ne i64 %expval, 0, !dbg !13820
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !13822

if.then13:                                        ; preds = %sw.bb7
  %arrayidx14 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !13823
  %16 = load ptr, ptr %arrayidx14, align 16, !dbg !13823, !tbaa !1899
  %17 = load i64, ptr %kw_args, align 8, !dbg !13825, !tbaa !2597
  %dec = add i64 %17, -1, !dbg !13825
  store i64 %dec, ptr %kw_args, align 8, !dbg !13825, !tbaa !2597
  br label %if.end, !dbg !13826

if.else:                                          ; preds = %sw.bb7
  %call15 = call ptr @PyErr_Occurred(), !dbg !13827
  %tobool16 = icmp ne ptr %call15, null, !dbg !13827
  %lnot17 = xor i1 %tobool16, true, !dbg !13827
  %lnot19 = xor i1 %lnot17, true, !dbg !13827
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !13827
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !13827
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0), !dbg !13827
  %tobool23 = icmp ne i64 %expval22, 0, !dbg !13827
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !13829

if.then24:                                        ; preds = %if.else
  %18 = load ptr, ptr @__pyx_f, align 16, !dbg !13830, !tbaa !1899
  store ptr %18, ptr %__pyx_filename, align 8, !dbg !13830, !tbaa !1899
  %19 = load ptr, ptr %__pyx_filename, align 8, !dbg !13830, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !13830, !tbaa !1984
  %20 = load i32, ptr %__pyx_lineno, align 4, !dbg !13830, !tbaa !1984
  store i32 3874, ptr %__pyx_clineno, align 4, !dbg !13830, !tbaa !1984
  %21 = load i32, ptr %__pyx_clineno, align 4, !dbg !13830, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup79, !dbg !13833

if.else25:                                        ; preds = %if.else
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup79, !dbg !13834

if.end:                                           ; preds = %if.then13
  br label %sw.bb26, !dbg !13820

sw.bb26:                                          ; preds = %sw.epilog, %if.end
  %22 = load i64, ptr %kw_args, align 8, !dbg !13835, !tbaa !2597
  %cmp27 = icmp sgt i64 %22, 0, !dbg !13836
  br i1 %cmp27, label %if.then29, label %if.end49, !dbg !13837

if.then29:                                        ; preds = %sw.bb26
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #11, !dbg !13838
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !13756, metadata !DIExpression()), !dbg !13839
  %23 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !13840, !tbaa !1899
  %24 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !13841, !tbaa !1899
  %25 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13842, !tbaa !1899
  %__pyx_n_s_debug30 = getelementptr inbounds %struct.__pyx_mstate, ptr %25, i32 0, i32 42, !dbg !13842
  %26 = load ptr, ptr %__pyx_n_s_debug30, align 8, !dbg !13842, !tbaa !2942
  %call31 = call ptr @__Pyx_GetKwValue_FASTCALL(ptr noundef %23, ptr noundef %24, ptr noundef %26), !dbg !13843
  store ptr %call31, ptr %value, align 8, !dbg !13839, !tbaa !1899
  %27 = load ptr, ptr %value, align 8, !dbg !13844, !tbaa !1899
  %tobool32 = icmp ne ptr %27, null, !dbg !13844
  br i1 %tobool32, label %if.then33, label %if.else36, !dbg !13846

if.then33:                                        ; preds = %if.then29
  %28 = load ptr, ptr %value, align 8, !dbg !13847, !tbaa !1899
  %arrayidx34 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !13849
  store ptr %28, ptr %arrayidx34, align 8, !dbg !13850, !tbaa !1899
  %29 = load i64, ptr %kw_args, align 8, !dbg !13851, !tbaa !2597
  %dec35 = add i64 %29, -1, !dbg !13851
  store i64 %dec35, ptr %kw_args, align 8, !dbg !13851, !tbaa !2597
  br label %if.end48, !dbg !13852

if.else36:                                        ; preds = %if.then29
  %call37 = call ptr @PyErr_Occurred(), !dbg !13853
  %tobool38 = icmp ne ptr %call37, null, !dbg !13853
  %lnot39 = xor i1 %tobool38, true, !dbg !13853
  %lnot41 = xor i1 %lnot39, true, !dbg !13853
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !13853
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !13853
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0), !dbg !13853
  %tobool45 = icmp ne i64 %expval44, 0, !dbg !13853
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !13855

if.then46:                                        ; preds = %if.else36
  %30 = load ptr, ptr @__pyx_f, align 16, !dbg !13856, !tbaa !1899
  store ptr %30, ptr %__pyx_filename, align 8, !dbg !13856, !tbaa !1899
  %31 = load ptr, ptr %__pyx_filename, align 8, !dbg !13856, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !13856, !tbaa !1984
  %32 = load i32, ptr %__pyx_lineno, align 4, !dbg !13856, !tbaa !1984
  store i32 3881, ptr %__pyx_clineno, align 4, !dbg !13856, !tbaa !1984
  %33 = load i32, ptr %__pyx_clineno, align 4, !dbg !13856, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13859

if.end47:                                         ; preds = %if.else36
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then33
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13860
  br label %cleanup, !dbg !13860

cleanup:                                          ; preds = %if.then46, %if.end48
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #11, !dbg !13860
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup79 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end49, !dbg !13861

if.end49:                                         ; preds = %cleanup.cont, %sw.bb26
  br label %sw.epilog50, !dbg !13862

sw.epilog50:                                      ; preds = %if.end49, %sw.epilog
  %34 = load i64, ptr %kw_args, align 8, !dbg !13863, !tbaa !2597
  %cmp51 = icmp sgt i64 %34, 0, !dbg !13863
  %lnot53 = xor i1 %cmp51, true, !dbg !13863
  %lnot55 = xor i1 %lnot53, true, !dbg !13863
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !13863
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !13863
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0), !dbg !13863
  %tobool59 = icmp ne i64 %expval58, 0, !dbg !13863
  br i1 %tobool59, label %if.then60, label %if.end78, !dbg !13864

if.then60:                                        ; preds = %sw.epilog50
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwd_pos_args) #11, !dbg !13865
  tail call void @llvm.dbg.declare(metadata ptr %kwd_pos_args, metadata !13760, metadata !DIExpression()), !dbg !13866
  %35 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !13867, !tbaa !2597
  store i64 %35, ptr %kwd_pos_args, align 8, !dbg !13866, !tbaa !2597
  %36 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !13868, !tbaa !1899
  %37 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !13868, !tbaa !1899
  %arraydecay = getelementptr inbounds [3 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !13868
  %arraydecay61 = getelementptr inbounds [2 x ptr], ptr %values, i64 0, i64 0, !dbg !13868
  %add.ptr62 = getelementptr ptr, ptr %arraydecay61, i64 0, !dbg !13868
  %38 = load i64, ptr %kwd_pos_args, align 8, !dbg !13868, !tbaa !2597
  %call63 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %36, ptr noundef %37, ptr noundef %arraydecay, ptr noundef null, ptr noundef %add.ptr62, i64 noundef %38, ptr noundef @.str.67), !dbg !13868
  %cmp64 = icmp slt i32 %call63, 0, !dbg !13868
  %lnot66 = xor i1 %cmp64, true, !dbg !13868
  %lnot68 = xor i1 %lnot66, true, !dbg !13868
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !13868
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !13868
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0), !dbg !13868
  %tobool72 = icmp ne i64 %expval71, 0, !dbg !13868
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !13870

if.then73:                                        ; preds = %if.then60
  %39 = load ptr, ptr @__pyx_f, align 16, !dbg !13871, !tbaa !1899
  store ptr %39, ptr %__pyx_filename, align 8, !dbg !13871, !tbaa !1899
  %40 = load ptr, ptr %__pyx_filename, align 8, !dbg !13871, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !13871, !tbaa !1984
  %41 = load i32, ptr %__pyx_lineno, align 4, !dbg !13871, !tbaa !1984
  store i32 3886, ptr %__pyx_clineno, align 4, !dbg !13871, !tbaa !1984
  %42 = load i32, ptr %__pyx_clineno, align 4, !dbg !13871, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup75, !dbg !13874

if.end74:                                         ; preds = %if.then60
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13875
  br label %cleanup75, !dbg !13875

cleanup75:                                        ; preds = %if.then73, %if.end74
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwd_pos_args) #11, !dbg !13875
  %cleanup.dest76 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest76, label %cleanup79 [
    i32 0, label %cleanup.cont77
  ]

cleanup.cont77:                                   ; preds = %cleanup75
  br label %if.end78, !dbg !13876

if.end78:                                         ; preds = %cleanup.cont77, %sw.epilog50
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13877
  br label %cleanup79, !dbg !13877

cleanup79:                                        ; preds = %if.else25, %if.then24, %sw.default, %if.end78, %cleanup75, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #11, !dbg !13877
  %cleanup.dest80 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest80, label %cleanup94 [
    i32 0, label %cleanup.cont81
  ]

cleanup.cont81:                                   ; preds = %cleanup79
  br label %if.end91, !dbg !13878

if.else82:                                        ; preds = %entry
  %43 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !13879, !tbaa !2597
  switch i64 %43, label %sw.default89 [
    i64 2, label %sw.bb83
    i64 1, label %sw.bb86
  ], !dbg !13881

sw.bb83:                                          ; preds = %if.else82
  %44 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !13882, !tbaa !1899
  %arrayidx84 = getelementptr ptr, ptr %44, i64 1, !dbg !13882
  %45 = load ptr, ptr %arrayidx84, align 8, !dbg !13882, !tbaa !1899
  %arrayidx85 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !13884
  store ptr %45, ptr %arrayidx85, align 8, !dbg !13885, !tbaa !1899
  br label %sw.bb86, !dbg !13884

sw.bb86:                                          ; preds = %if.else82, %sw.bb83
  %46 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !13886, !tbaa !1899
  %arrayidx87 = getelementptr ptr, ptr %46, i64 0, !dbg !13886
  %47 = load ptr, ptr %arrayidx87, align 8, !dbg !13886, !tbaa !1899
  %arrayidx88 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !13887
  store ptr %47, ptr %arrayidx88, align 16, !dbg !13888, !tbaa !1899
  br label %sw.epilog90, !dbg !13889

sw.default89:                                     ; preds = %if.else82
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup94, !dbg !13890

sw.epilog90:                                      ; preds = %sw.bb86
  br label %if.end91

if.end91:                                         ; preds = %sw.epilog90, %cleanup.cont81
  %arrayidx92 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !13891
  %48 = load ptr, ptr %arrayidx92, align 16, !dbg !13891, !tbaa !1899
  store ptr %48, ptr %__pyx_v_old_machine, align 8, !dbg !13892, !tbaa !1899
  %arrayidx93 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !13893
  %49 = load ptr, ptr %arrayidx93, align 8, !dbg !13893, !tbaa !1899
  store ptr %49, ptr %__pyx_v_debug, align 8, !dbg !13894, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13895
  br label %cleanup94, !dbg !13895

cleanup94:                                        ; preds = %sw.default89, %if.end91, %cleanup79
  call void @llvm.lifetime.end.p0(i64 24, ptr %__pyx_pyargnames) #11, !dbg !13895
  %cleanup.dest95 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest95, label %cleanup133 [
    i32 0, label %cleanup.cont96
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont96:                                   ; preds = %cleanup94
  br label %__pyx_L6_skip, !dbg !13896

__pyx_L5_argtuple_error:                          ; preds = %cleanup94
  tail call void @llvm.dbg.label(metadata !13763), !dbg !13897
  %50 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !13898, !tbaa !2597
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.67, i32 noundef 0, i64 noundef 1, i64 noundef 2, i64 noundef %50), !dbg !13899
  %51 = load ptr, ptr @__pyx_f, align 16, !dbg !13900, !tbaa !1899
  store ptr %51, ptr %__pyx_filename, align 8, !dbg !13900, !tbaa !1899
  %52 = load ptr, ptr %__pyx_filename, align 8, !dbg !13900, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !13900, !tbaa !1984
  %53 = load i32, ptr %__pyx_lineno, align 4, !dbg !13900, !tbaa !1984
  store i32 3902, ptr %__pyx_clineno, align 4, !dbg !13900, !tbaa !1984
  %54 = load i32, ptr %__pyx_clineno, align 4, !dbg !13900, !tbaa !1984
  br label %__pyx_L3_error, !dbg !13903

__pyx_L6_skip:                                    ; preds = %cleanup.cont96
  tail call void @llvm.dbg.label(metadata !13764), !dbg !13904
  br label %__pyx_L4_argument_unpacking_done, !dbg !13905

__pyx_L3_error:                                   ; preds = %cleanup94, %__pyx_L5_argtuple_error
  tail call void @llvm.dbg.label(metadata !13765), !dbg !13906
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #11, !dbg !13907
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp, metadata !13766, metadata !DIExpression()), !dbg !13908
  store i64 0, ptr %__pyx_temp, align 8, !dbg !13909, !tbaa !2597
  br label %for.cond, !dbg !13911

for.cond:                                         ; preds = %for.inc, %__pyx_L3_error
  %55 = load i64, ptr %__pyx_temp, align 8, !dbg !13912, !tbaa !2597
  %cmp97 = icmp slt i64 %55, 2, !dbg !13914
  br i1 %cmp97, label %for.body, label %for.end, !dbg !13915

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !13916

for.inc:                                          ; preds = %for.body
  %56 = load i64, ptr %__pyx_temp, align 8, !dbg !13918, !tbaa !2597
  %inc = add i64 %56, 1, !dbg !13918
  store i64 %inc, ptr %__pyx_temp, align 8, !dbg !13918, !tbaa !2597
  br label %for.cond, !dbg !13919, !llvm.loop !13920

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #11, !dbg !13922
  %57 = load i32, ptr %__pyx_clineno, align 4, !dbg !13923, !tbaa !1984
  %58 = load i32, ptr %__pyx_lineno, align 4, !dbg !13924, !tbaa !1984
  %59 = load ptr, ptr %__pyx_filename, align 8, !dbg !13925, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.80, i32 noundef %57, i32 noundef %58, ptr noundef %59), !dbg !13926
  store ptr null, ptr %retval, align 8, !dbg !13927
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup133, !dbg !13927

__pyx_L4_argument_unpacking_done:                 ; preds = %__pyx_L6_skip
  tail call void @llvm.dbg.label(metadata !13768), !dbg !13928
  %60 = load ptr, ptr %__pyx_v_old_machine, align 8, !dbg !13929, !tbaa !1899
  %61 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13929, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Machine = getelementptr inbounds %struct.__pyx_mstate, ptr %61, i32 0, i32 15, !dbg !13929
  %62 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Machine, align 8, !dbg !13929, !tbaa !3534
  %call99 = call i32 @Py_IS_TYPE(ptr noundef %60, ptr noundef %62), !dbg !13929
  %63 = load ptr, ptr %__pyx_v_old_machine, align 8, !dbg !13929, !tbaa !1899
  %cmp100 = icmp eq ptr %63, @_Py_NoneStruct, !dbg !13929
  %land.ext = zext i1 %cmp100 to i32, !dbg !13929
  %or = or i32 %call99, %land.ext, !dbg !13929
  %tobool102 = icmp ne i32 %or, 0, !dbg !13929
  %lnot103 = xor i1 %tobool102, true, !dbg !13929
  %lnot105 = xor i1 %lnot103, true, !dbg !13929
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !13929
  %conv107 = sext i32 %lnot.ext106 to i64, !dbg !13929
  %expval108 = call i64 @llvm.expect.i64(i64 %conv107, i64 1), !dbg !13929
  %tobool109 = icmp ne i64 %expval108, 0, !dbg !13929
  br i1 %tobool109, label %cond.true, label %cond.false, !dbg !13929

cond.true:                                        ; preds = %__pyx_L4_argument_unpacking_done
  br label %cond.end, !dbg !13929

cond.false:                                       ; preds = %__pyx_L4_argument_unpacking_done
  %64 = load ptr, ptr %__pyx_v_old_machine, align 8, !dbg !13929, !tbaa !1899
  %65 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !13929, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_8Machines_Machine110 = getelementptr inbounds %struct.__pyx_mstate, ptr %65, i32 0, i32 15, !dbg !13929
  %66 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_8Machines_Machine110, align 8, !dbg !13929, !tbaa !3534
  %call111 = call i32 @__Pyx__ArgTypeTest(ptr noundef %64, ptr noundef %66, ptr noundef @.str.155, i32 noundef 0), !dbg !13929
  br label %cond.end, !dbg !13929

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %call111, %cond.false ], !dbg !13929
  %tobool112 = icmp ne i32 %cond, 0, !dbg !13929
  %lnot113 = xor i1 %tobool112, true, !dbg !13929
  %lnot115 = xor i1 %lnot113, true, !dbg !13929
  %lnot117 = xor i1 %lnot115, true, !dbg !13929
  %lnot.ext118 = zext i1 %lnot117 to i32, !dbg !13929
  %conv119 = sext i32 %lnot.ext118 to i64, !dbg !13929
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 0), !dbg !13929
  %tobool121 = icmp ne i64 %expval120, 0, !dbg !13929
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !13931

if.then122:                                       ; preds = %cond.end
  %67 = load ptr, ptr @__pyx_f, align 16, !dbg !13932, !tbaa !1899
  store ptr %67, ptr %__pyx_filename, align 8, !dbg !13932, !tbaa !1899
  %68 = load ptr, ptr %__pyx_filename, align 8, !dbg !13932, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !13932, !tbaa !1984
  %69 = load i32, ptr %__pyx_lineno, align 4, !dbg !13932, !tbaa !1984
  store i32 3916, ptr %__pyx_clineno, align 4, !dbg !13932, !tbaa !1984
  %70 = load i32, ptr %__pyx_clineno, align 4, !dbg !13932, !tbaa !1984
  br label %__pyx_L1_error, !dbg !13935

if.end123:                                        ; preds = %cond.end
  %71 = load ptr, ptr %__pyx_self.addr, align 8, !dbg !13936, !tbaa !1899
  %72 = load ptr, ptr %__pyx_v_old_machine, align 8, !dbg !13937, !tbaa !1899
  %73 = load ptr, ptr %__pyx_v_debug, align 8, !dbg !13938, !tbaa !1899
  %call124 = call ptr @__pyx_pf_6Cython_4Plex_3DFA_nfa_to_dfa(ptr noundef %71, ptr noundef %72, ptr noundef %73), !dbg !13939
  store ptr %call124, ptr %__pyx_r, align 8, !dbg !13940, !tbaa !1899
  br label %__pyx_L0, !dbg !13941

__pyx_L1_error:                                   ; preds = %if.then122
  tail call void @llvm.dbg.label(metadata !13769), !dbg !13942
  store ptr null, ptr %__pyx_r, align 8, !dbg !13943, !tbaa !1899
  br label %__pyx_L0, !dbg !13944

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end123
  tail call void @llvm.dbg.label(metadata !13770), !dbg !13945
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp125) #11, !dbg !13946
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp125, metadata !13771, metadata !DIExpression()), !dbg !13947
  store i64 0, ptr %__pyx_temp125, align 8, !dbg !13948, !tbaa !2597
  br label %for.cond126, !dbg !13950

for.cond126:                                      ; preds = %for.inc130, %__pyx_L0
  %74 = load i64, ptr %__pyx_temp125, align 8, !dbg !13951, !tbaa !2597
  %cmp127 = icmp slt i64 %74, 2, !dbg !13953
  br i1 %cmp127, label %for.body129, label %for.end132, !dbg !13954

for.body129:                                      ; preds = %for.cond126
  br label %for.inc130, !dbg !13955

for.inc130:                                       ; preds = %for.body129
  %75 = load i64, ptr %__pyx_temp125, align 8, !dbg !13957, !tbaa !2597
  %inc131 = add i64 %75, 1, !dbg !13957
  store i64 %inc131, ptr %__pyx_temp125, align 8, !dbg !13957, !tbaa !2597
  br label %for.cond126, !dbg !13958, !llvm.loop !13959

for.end132:                                       ; preds = %for.cond126
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp125) #11, !dbg !13961
  %76 = load ptr, ptr %__pyx_r, align 8, !dbg !13962, !tbaa !1899
  store ptr %76, ptr %retval, align 8, !dbg !13963
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup133, !dbg !13963

cleanup133:                                       ; preds = %for.end132, %for.end, %cleanup94
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !13964
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !13964
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !13964
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !13964
  call void @llvm.lifetime.end.p0(i64 16, ptr %values) #11, !dbg !13964
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !13964
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_debug) #11, !dbg !13964
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_old_machine) #11, !dbg !13964
  %77 = load ptr, ptr %retval, align 8, !dbg !13964
  ret ptr %77, !dbg !13964
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetKwValue_FASTCALL(ptr noundef %kwnames, ptr noundef %kwvalues, ptr noundef %s) #3 !dbg !13965 {
entry:
  %retval = alloca ptr, align 8
  %kwnames.addr = alloca ptr, align 8
  %kwvalues.addr = alloca ptr, align 8
  %s.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %eq = alloca i32, align 4
  store ptr %kwnames, ptr %kwnames.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwnames.addr, metadata !13969, metadata !DIExpression()), !dbg !13978
  store ptr %kwvalues, ptr %kwvalues.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %kwvalues.addr, metadata !13970, metadata !DIExpression()), !dbg !13979
  store ptr %s, ptr %s.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !13971, metadata !DIExpression()), !dbg !13980
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #11, !dbg !13981
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !13972, metadata !DIExpression()), !dbg !13982
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #11, !dbg !13981
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !13973, metadata !DIExpression()), !dbg !13983
  %0 = load ptr, ptr %kwnames.addr, align 8, !dbg !13984, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !13984
  store i64 %call, ptr %n, align 8, !dbg !13983, !tbaa !2597
  store i64 0, ptr %i, align 8, !dbg !13985, !tbaa !2597
  br label %for.cond, !dbg !13987

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !13988, !tbaa !2597
  %2 = load i64, ptr %n, align 8, !dbg !13990, !tbaa !2597
  %cmp = icmp slt i64 %1, %2, !dbg !13991
  br i1 %cmp, label %for.body, label %for.end, !dbg !13992

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %s.addr, align 8, !dbg !13993, !tbaa !1899
  %4 = load ptr, ptr %kwnames.addr, align 8, !dbg !13996, !tbaa !1899
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !13996
  %5 = load i64, ptr %i, align 8, !dbg !13996, !tbaa !2597
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %5, !dbg !13996
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !13996, !tbaa !1899
  %cmp1 = icmp eq ptr %3, %6, !dbg !13997
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13998

if.then:                                          ; preds = %for.body
  %7 = load ptr, ptr %kwvalues.addr, align 8, !dbg !13999, !tbaa !1899
  %8 = load i64, ptr %i, align 8, !dbg !14000, !tbaa !2597
  %arrayidx2 = getelementptr ptr, ptr %7, i64 %8, !dbg !13999
  %9 = load ptr, ptr %arrayidx2, align 8, !dbg !13999, !tbaa !1899
  store ptr %9, ptr %retval, align 8, !dbg !14001
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup28, !dbg !14001

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14002

for.inc:                                          ; preds = %if.end
  %10 = load i64, ptr %i, align 8, !dbg !14003, !tbaa !2597
  %inc = add i64 %10, 1, !dbg !14003
  store i64 %inc, ptr %i, align 8, !dbg !14003, !tbaa !2597
  br label %for.cond, !dbg !14004, !llvm.loop !14005

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !dbg !14007, !tbaa !2597
  br label %for.cond3, !dbg !14008

for.cond3:                                        ; preds = %for.inc25, %for.end
  %11 = load i64, ptr %i, align 8, !dbg !14009, !tbaa !2597
  %12 = load i64, ptr %n, align 8, !dbg !14010, !tbaa !2597
  %cmp4 = icmp slt i64 %11, %12, !dbg !14011
  br i1 %cmp4, label %for.body5, label %for.end27, !dbg !14012

for.body5:                                        ; preds = %for.cond3
  call void @llvm.lifetime.start.p0(i64 4, ptr %eq) #11, !dbg !14013
  tail call void @llvm.dbg.declare(metadata ptr %eq, metadata !13974, metadata !DIExpression()), !dbg !14014
  %13 = load ptr, ptr %s.addr, align 8, !dbg !14015, !tbaa !1899
  %14 = load ptr, ptr %kwnames.addr, align 8, !dbg !14016, !tbaa !1899
  %ob_item6 = getelementptr inbounds %struct.PyTupleObject, ptr %14, i32 0, i32 1, !dbg !14016
  %15 = load i64, ptr %i, align 8, !dbg !14016, !tbaa !2597
  %arrayidx7 = getelementptr [1 x ptr], ptr %ob_item6, i64 0, i64 %15, !dbg !14016
  %16 = load ptr, ptr %arrayidx7, align 8, !dbg !14016, !tbaa !1899
  %call8 = call i32 @__Pyx_PyUnicode_Equals(ptr noundef %13, ptr noundef %16, i32 noundef 2), !dbg !14017
  store i32 %call8, ptr %eq, align 4, !dbg !14014, !tbaa !1984
  %17 = load i32, ptr %eq, align 4, !dbg !14018, !tbaa !1984
  %cmp9 = icmp ne i32 %17, 0, !dbg !14018
  %lnot = xor i1 %cmp9, true, !dbg !14018
  %lnot10 = xor i1 %lnot, true, !dbg !14018
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !14018
  %conv = sext i32 %lnot.ext to i64, !dbg !14018
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !14018
  %tobool = icmp ne i64 %expval, 0, !dbg !14018
  br i1 %tobool, label %if.then11, label %if.end24, !dbg !14020

if.then11:                                        ; preds = %for.body5
  %18 = load i32, ptr %eq, align 4, !dbg !14021, !tbaa !1984
  %cmp12 = icmp slt i32 %18, 0, !dbg !14021
  %lnot14 = xor i1 %cmp12, true, !dbg !14021
  %lnot16 = xor i1 %lnot14, true, !dbg !14021
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !14021
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !14021
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0), !dbg !14021
  %tobool20 = icmp ne i64 %expval19, 0, !dbg !14021
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !14024

if.then21:                                        ; preds = %if.then11
  store ptr null, ptr %retval, align 8, !dbg !14025
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14025

if.end22:                                         ; preds = %if.then11
  %19 = load ptr, ptr %kwvalues.addr, align 8, !dbg !14026, !tbaa !1899
  %20 = load i64, ptr %i, align 8, !dbg !14027, !tbaa !2597
  %arrayidx23 = getelementptr ptr, ptr %19, i64 %20, !dbg !14026
  %21 = load ptr, ptr %arrayidx23, align 8, !dbg !14026, !tbaa !1899
  store ptr %21, ptr %retval, align 8, !dbg !14028
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14028

if.end24:                                         ; preds = %for.body5
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14029
  br label %cleanup, !dbg !14029

cleanup:                                          ; preds = %if.end24, %if.end22, %if.then21
  call void @llvm.lifetime.end.p0(i64 4, ptr %eq) #11, !dbg !14029
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup28 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc25, !dbg !14030

for.inc25:                                        ; preds = %cleanup.cont
  %22 = load i64, ptr %i, align 8, !dbg !14031, !tbaa !2597
  %inc26 = add i64 %22, 1, !dbg !14031
  store i64 %inc26, ptr %i, align 8, !dbg !14031, !tbaa !2597
  br label %for.cond3, !dbg !14032, !llvm.loop !14033

for.end27:                                        ; preds = %for.cond3
  store ptr null, ptr %retval, align 8, !dbg !14035
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup28, !dbg !14035

cleanup28:                                        ; preds = %for.end27, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #11, !dbg !14036
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #11, !dbg !14036
  %23 = load ptr, ptr %retval, align 8, !dbg !14036
  ret ptr %23, !dbg !14036
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx__ArgTypeTest(ptr noundef %obj, ptr noundef %type, ptr noundef %name, i32 noundef %exact) #0 !dbg !14037 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %exact.addr = alloca i32, align 4
  %type_name = alloca ptr, align 8
  %obj_type_name = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !14041, metadata !DIExpression()), !dbg !14047
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !14042, metadata !DIExpression()), !dbg !14048
  store ptr %name, ptr %name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !14043, metadata !DIExpression()), !dbg !14049
  store i32 %exact, ptr %exact.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %exact.addr, metadata !14044, metadata !DIExpression()), !dbg !14050
  call void @llvm.lifetime.start.p0(i64 8, ptr %type_name) #11, !dbg !14051
  tail call void @llvm.dbg.declare(metadata ptr %type_name, metadata !14045, metadata !DIExpression()), !dbg !14052
  call void @llvm.lifetime.start.p0(i64 8, ptr %obj_type_name) #11, !dbg !14053
  tail call void @llvm.dbg.declare(metadata ptr %obj_type_name, metadata !14046, metadata !DIExpression()), !dbg !14054
  %0 = load ptr, ptr %type.addr, align 8, !dbg !14055, !tbaa !1899
  %tobool = icmp ne ptr %0, null, !dbg !14055
  %lnot = xor i1 %tobool, true, !dbg !14055
  %lnot1 = xor i1 %lnot, true, !dbg !14055
  %lnot2 = xor i1 %lnot1, true, !dbg !14055
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14055
  %conv = sext i32 %lnot.ext to i64, !dbg !14055
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !14055
  %tobool3 = icmp ne i64 %expval, 0, !dbg !14055
  br i1 %tobool3, label %if.then, label %if.else, !dbg !14057

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !14058, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.86), !dbg !14060
  store i32 0, ptr %retval, align 4, !dbg !14061
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14061

if.else:                                          ; preds = %entry
  %2 = load i32, ptr %exact.addr, align 4, !dbg !14062, !tbaa !1984
  %tobool4 = icmp ne i32 %2, 0, !dbg !14062
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !14064

if.then5:                                         ; preds = %if.else
  br label %if.end17, !dbg !14065

if.else6:                                         ; preds = %if.else
  %3 = load ptr, ptr %obj.addr, align 8, !dbg !14067, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %3), !dbg !14067
  %4 = load ptr, ptr %type.addr, align 8, !dbg !14067, !tbaa !1899
  %call7 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %4), !dbg !14067
  %tobool8 = icmp ne i32 %call7, 0, !dbg !14067
  %lnot9 = xor i1 %tobool8, true, !dbg !14067
  %lnot11 = xor i1 %lnot9, true, !dbg !14067
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !14067
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !14067
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1), !dbg !14067
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !14067
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !14070

if.then16:                                        ; preds = %if.else6
  store i32 1, ptr %retval, align 4, !dbg !14071
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14071

if.end:                                           ; preds = %if.else6
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then5
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  %5 = load ptr, ptr %type.addr, align 8, !dbg !14072, !tbaa !1899
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 1, !dbg !14072
  %6 = load ptr, ptr %tp_name, align 8, !dbg !14072, !tbaa !4021
  store ptr %6, ptr %type_name, align 8, !dbg !14073, !tbaa !1899
  %7 = load ptr, ptr %obj.addr, align 8, !dbg !14074, !tbaa !1899
  %call19 = call ptr @Py_TYPE(ptr noundef %7), !dbg !14074
  %tp_name20 = getelementptr inbounds %struct._typeobject, ptr %call19, i32 0, i32 1, !dbg !14074
  %8 = load ptr, ptr %tp_name20, align 8, !dbg !14074, !tbaa !4021
  store ptr %8, ptr %obj_type_name, align 8, !dbg !14075, !tbaa !1899
  %9 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !14076, !tbaa !1899
  %10 = load ptr, ptr %name.addr, align 8, !dbg !14077, !tbaa !1899
  %11 = load ptr, ptr %type_name, align 8, !dbg !14078, !tbaa !1899
  %12 = load ptr, ptr %obj_type_name, align 8, !dbg !14079, !tbaa !1899
  %call21 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %9, ptr noundef @.str.156, ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !14080
  store i32 0, ptr %retval, align 4, !dbg !14081
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14081

cleanup:                                          ; preds = %if.end18, %if.then16, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %obj_type_name) #11, !dbg !14082
  call void @llvm.lifetime.end.p0(i64 8, ptr %type_name) #11, !dbg !14082
  %13 = load i32, ptr %retval, align 4, !dbg !14082
  ret i32 %13, !dbg !14082
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_4Plex_3DFA_nfa_to_dfa(ptr noundef %__pyx_self, ptr noundef %__pyx_v_old_machine, ptr noundef %__pyx_v_debug) #0 !dbg !14083 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v_old_machine.addr = alloca ptr, align 8
  %__pyx_v_debug.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca %struct.__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_self.addr, metadata !14087, metadata !DIExpression()), !dbg !14098
  store ptr %__pyx_v_old_machine, ptr %__pyx_v_old_machine.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_old_machine.addr, metadata !14088, metadata !DIExpression()), !dbg !14099
  store ptr %__pyx_v_debug, ptr %__pyx_v_debug.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_debug.addr, metadata !14089, metadata !DIExpression()), !dbg !14100
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !14101
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !14090, metadata !DIExpression()), !dbg !14102
  store ptr null, ptr %__pyx_r, align 8, !dbg !14102, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !14103
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !14091, metadata !DIExpression()), !dbg !14104
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14104, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_t_2) #11, !dbg !14105
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !14092, metadata !DIExpression()), !dbg !14106
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !14107
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !14093, metadata !DIExpression()), !dbg !14108
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !14108, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !14109
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !14094, metadata !DIExpression()), !dbg !14110
  store ptr null, ptr %__pyx_filename, align 8, !dbg !14110, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !14111
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !14095, metadata !DIExpression()), !dbg !14112
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !14112, !tbaa !1984
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !14113, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %0), !dbg !14113
  %__pyx_n = getelementptr inbounds %struct.__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa, ptr %__pyx_t_2, i32 0, i32 0, !dbg !14114
  store i32 1, ptr %__pyx_n, align 8, !dbg !14115, !tbaa !6793
  %1 = load ptr, ptr %__pyx_v_debug.addr, align 8, !dbg !14116, !tbaa !1899
  %debug = getelementptr inbounds %struct.__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa, ptr %__pyx_t_2, i32 0, i32 1, !dbg !14117
  store ptr %1, ptr %debug, align 8, !dbg !14118, !tbaa !6800
  %2 = load ptr, ptr %__pyx_v_old_machine.addr, align 8, !dbg !14119, !tbaa !1899
  %call = call ptr @__pyx_f_6Cython_4Plex_3DFA_nfa_to_dfa(ptr noundef %2, i32 noundef 0, ptr noundef %__pyx_t_2), !dbg !14120
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !14121, !tbaa !1899
  %3 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14122, !tbaa !1899
  %tobool = icmp ne ptr %3, null, !dbg !14122
  %lnot = xor i1 %tobool, true, !dbg !14122
  %lnot1 = xor i1 %lnot, true, !dbg !14122
  %lnot2 = xor i1 %lnot1, true, !dbg !14122
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14122
  %conv = sext i32 %lnot.ext to i64, !dbg !14122
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !14122
  %tobool3 = icmp ne i64 %expval, 0, !dbg !14122
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14124

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_f, align 16, !dbg !14125, !tbaa !1899
  store ptr %4, ptr %__pyx_filename, align 8, !dbg !14125, !tbaa !1899
  %5 = load ptr, ptr %__pyx_filename, align 8, !dbg !14125, !tbaa !1899
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !14125, !tbaa !1984
  %6 = load i32, ptr %__pyx_lineno, align 4, !dbg !14125, !tbaa !1984
  store i32 3946, ptr %__pyx_clineno, align 4, !dbg !14125, !tbaa !1984
  %7 = load i32, ptr %__pyx_clineno, align 4, !dbg !14125, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14128

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14129, !tbaa !1899
  store ptr %8, ptr %__pyx_r, align 8, !dbg !14130, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14131, !tbaa !1899
  br label %__pyx_L0, !dbg !14132

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !14096), !dbg !14133
  %9 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14134, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %9), !dbg !14134
  %10 = load i32, ptr %__pyx_clineno, align 4, !dbg !14135, !tbaa !1984
  %11 = load i32, ptr %__pyx_lineno, align 4, !dbg !14136, !tbaa !1984
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !14137, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.80, i32 noundef %10, i32 noundef %11, ptr noundef %12), !dbg !14138
  store ptr null, ptr %__pyx_r, align 8, !dbg !14139, !tbaa !1899
  br label %__pyx_L0, !dbg !14140

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  tail call void @llvm.dbg.label(metadata !14097), !dbg !14141
  %13 = load ptr, ptr %__pyx_r, align 8, !dbg !14142, !tbaa !1899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !14143
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !14143
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !14143
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_t_2) #11, !dbg !14143
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !14143
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !14143
  ret ptr %13, !dbg !14144
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyUnicode_Equals(ptr noundef %s1, ptr noundef %s2, i32 noundef %equals) #3 !dbg !14145 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca ptr, align 8
  %s2.addr = alloca ptr, align 8
  %equals.addr = alloca i32, align 4
  %s1_is_unicode = alloca i32, align 4
  %s2_is_unicode = alloca i32, align 4
  %length = alloca i64, align 8
  %kind = alloca i32, align 4
  %data1 = alloca ptr, align 8
  %data2 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %hash1 = alloca i64, align 8
  %hash2 = alloca i64, align 8
  %result = alloca i32, align 4
  %result108 = alloca i32, align 4
  %py_result = alloca ptr, align 8
  store ptr %s1, ptr %s1.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %s1.addr, metadata !14147, metadata !DIExpression()), !dbg !14172
  store ptr %s2, ptr %s2.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %s2.addr, metadata !14148, metadata !DIExpression()), !dbg !14173
  store i32 %equals, ptr %equals.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %equals.addr, metadata !14149, metadata !DIExpression()), !dbg !14174
  call void @llvm.lifetime.start.p0(i64 4, ptr %s1_is_unicode) #11, !dbg !14175
  tail call void @llvm.dbg.declare(metadata ptr %s1_is_unicode, metadata !14150, metadata !DIExpression()), !dbg !14176
  call void @llvm.lifetime.start.p0(i64 4, ptr %s2_is_unicode) #11, !dbg !14175
  tail call void @llvm.dbg.declare(metadata ptr %s2_is_unicode, metadata !14151, metadata !DIExpression()), !dbg !14177
  %0 = load ptr, ptr %s1.addr, align 8, !dbg !14178, !tbaa !1899
  %1 = load ptr, ptr %s2.addr, align 8, !dbg !14180, !tbaa !1899
  %cmp = icmp eq ptr %0, %1, !dbg !14181
  br i1 %cmp, label %if.then, label %if.end, !dbg !14182

if.then:                                          ; preds = %entry
  br label %return_eq, !dbg !14183

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %s1.addr, align 8, !dbg !14185, !tbaa !1899
  %call = call i32 @Py_IS_TYPE(ptr noundef %2, ptr noundef @PyUnicode_Type), !dbg !14185
  store i32 %call, ptr %s1_is_unicode, align 4, !dbg !14186, !tbaa !1984
  %3 = load ptr, ptr %s2.addr, align 8, !dbg !14187, !tbaa !1899
  %call1 = call i32 @Py_IS_TYPE(ptr noundef %3, ptr noundef @PyUnicode_Type), !dbg !14187
  store i32 %call1, ptr %s2_is_unicode, align 4, !dbg !14188, !tbaa !1984
  %4 = load i32, ptr %s1_is_unicode, align 4, !dbg !14189, !tbaa !1984
  %5 = load i32, ptr %s2_is_unicode, align 4, !dbg !14190, !tbaa !1984
  %and = and i32 %4, %5, !dbg !14191
  %tobool = icmp ne i32 %and, 0, !dbg !14191
  br i1 %tobool, label %if.then2, label %if.else95, !dbg !14192

if.then2:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %length) #11, !dbg !14193
  tail call void @llvm.dbg.declare(metadata ptr %length, metadata !14152, metadata !DIExpression()), !dbg !14194
  call void @llvm.lifetime.start.p0(i64 4, ptr %kind) #11, !dbg !14195
  tail call void @llvm.dbg.declare(metadata ptr %kind, metadata !14155, metadata !DIExpression()), !dbg !14196
  call void @llvm.lifetime.start.p0(i64 8, ptr %data1) #11, !dbg !14197
  tail call void @llvm.dbg.declare(metadata ptr %data1, metadata !14156, metadata !DIExpression()), !dbg !14198
  call void @llvm.lifetime.start.p0(i64 8, ptr %data2) #11, !dbg !14197
  tail call void @llvm.dbg.declare(metadata ptr %data2, metadata !14157, metadata !DIExpression()), !dbg !14199
  %6 = load ptr, ptr %s1.addr, align 8, !dbg !14200, !tbaa !1899
  %call3 = call i32 @PyUnicode_IS_READY(ptr noundef %6), !dbg !14200
  %tobool4 = icmp ne i32 %call3, 0, !dbg !14200
  %lnot = xor i1 %tobool4, true, !dbg !14200
  %lnot5 = xor i1 %lnot, true, !dbg !14200
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !14200
  %conv = sext i32 %lnot.ext to i64, !dbg !14200
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !14200
  %tobool6 = icmp ne i64 %expval, 0, !dbg !14200
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !14200

cond.true:                                        ; preds = %if.then2
  br label %cond.end, !dbg !14200

cond.false:                                       ; preds = %if.then2
  %7 = load ptr, ptr %s1.addr, align 8, !dbg !14200, !tbaa !1899
  %call7 = call i32 @_PyUnicode_Ready(ptr noundef %7), !dbg !14200
  br label %cond.end, !dbg !14200

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call7, %cond.false ], !dbg !14200
  %cmp8 = icmp slt i32 %cond, 0, !dbg !14200
  %lnot10 = xor i1 %cmp8, true, !dbg !14200
  %lnot12 = xor i1 %lnot10, true, !dbg !14200
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !14200
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !14200
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !14200
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !14200
  br i1 %tobool16, label %if.then40, label %lor.lhs.false, !dbg !14202

lor.lhs.false:                                    ; preds = %cond.end
  %8 = load ptr, ptr %s2.addr, align 8, !dbg !14203, !tbaa !1899
  %call17 = call i32 @PyUnicode_IS_READY(ptr noundef %8), !dbg !14203
  %tobool18 = icmp ne i32 %call17, 0, !dbg !14203
  %lnot19 = xor i1 %tobool18, true, !dbg !14203
  %lnot21 = xor i1 %lnot19, true, !dbg !14203
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !14203
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !14203
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !14203
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !14203
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !14203

cond.true26:                                      ; preds = %lor.lhs.false
  br label %cond.end29, !dbg !14203

cond.false27:                                     ; preds = %lor.lhs.false
  %9 = load ptr, ptr %s2.addr, align 8, !dbg !14203, !tbaa !1899
  %call28 = call i32 @_PyUnicode_Ready(ptr noundef %9), !dbg !14203
  br label %cond.end29, !dbg !14203

cond.end29:                                       ; preds = %cond.false27, %cond.true26
  %cond30 = phi i32 [ 0, %cond.true26 ], [ %call28, %cond.false27 ], !dbg !14203
  %cmp31 = icmp slt i32 %cond30, 0, !dbg !14203
  %lnot33 = xor i1 %cmp31, true, !dbg !14203
  %lnot35 = xor i1 %lnot33, true, !dbg !14203
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !14203
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !14203
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0), !dbg !14203
  %tobool39 = icmp ne i64 %expval38, 0, !dbg !14203
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !14204

if.then40:                                        ; preds = %cond.end29, %cond.end
  store i32 -1, ptr %retval, align 4, !dbg !14205
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup91, !dbg !14205

if.end41:                                         ; preds = %cond.end29
  %10 = load ptr, ptr %s1.addr, align 8, !dbg !14206, !tbaa !1899
  %call42 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %10), !dbg !14206
  store i64 %call42, ptr %length, align 8, !dbg !14207, !tbaa !2597
  %11 = load i64, ptr %length, align 8, !dbg !14208, !tbaa !2597
  %12 = load ptr, ptr %s2.addr, align 8, !dbg !14210, !tbaa !1899
  %call43 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %12), !dbg !14210
  %cmp44 = icmp ne i64 %11, %call43, !dbg !14211
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !14212

if.then46:                                        ; preds = %if.end41
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup91, !dbg !14213

if.end47:                                         ; preds = %if.end41
  call void @llvm.lifetime.start.p0(i64 8, ptr %hash1) #11, !dbg !14215
  tail call void @llvm.dbg.declare(metadata ptr %hash1, metadata !14158, metadata !DIExpression()), !dbg !14216
  call void @llvm.lifetime.start.p0(i64 8, ptr %hash2) #11, !dbg !14215
  tail call void @llvm.dbg.declare(metadata ptr %hash2, metadata !14160, metadata !DIExpression()), !dbg !14217
  %13 = load ptr, ptr %s1.addr, align 8, !dbg !14218, !tbaa !1899
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %13, i32 0, i32 2, !dbg !14219
  %14 = load i64, ptr %hash, align 8, !dbg !14219, !tbaa !9173
  store i64 %14, ptr %hash1, align 8, !dbg !14220, !tbaa !2597
  %15 = load ptr, ptr %s2.addr, align 8, !dbg !14221, !tbaa !1899
  %hash48 = getelementptr inbounds %struct.PyASCIIObject, ptr %15, i32 0, i32 2, !dbg !14222
  %16 = load i64, ptr %hash48, align 8, !dbg !14222, !tbaa !9173
  store i64 %16, ptr %hash2, align 8, !dbg !14223, !tbaa !2597
  %17 = load i64, ptr %hash1, align 8, !dbg !14224, !tbaa !2597
  %18 = load i64, ptr %hash2, align 8, !dbg !14226, !tbaa !2597
  %cmp49 = icmp ne i64 %17, %18, !dbg !14227
  br i1 %cmp49, label %land.lhs.true, label %if.end57, !dbg !14228

land.lhs.true:                                    ; preds = %if.end47
  %19 = load i64, ptr %hash1, align 8, !dbg !14229, !tbaa !2597
  %cmp51 = icmp ne i64 %19, -1, !dbg !14230
  br i1 %cmp51, label %land.lhs.true53, label %if.end57, !dbg !14231

land.lhs.true53:                                  ; preds = %land.lhs.true
  %20 = load i64, ptr %hash2, align 8, !dbg !14232, !tbaa !2597
  %cmp54 = icmp ne i64 %20, -1, !dbg !14233
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !14234

if.then56:                                        ; preds = %land.lhs.true53
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14235

if.end57:                                         ; preds = %land.lhs.true53, %land.lhs.true, %if.end47
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14237
  br label %cleanup, !dbg !14237

cleanup:                                          ; preds = %if.then56, %if.end57
  call void @llvm.lifetime.end.p0(i64 8, ptr %hash2) #11, !dbg !14237
  call void @llvm.lifetime.end.p0(i64 8, ptr %hash1) #11, !dbg !14237
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup91 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %21 = load ptr, ptr %s1.addr, align 8, !dbg !14238, !tbaa !1899
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %21, i32 0, i32 3, !dbg !14238
  %bf.load = load i32, ptr %state, align 8, !dbg !14238
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !14238
  %bf.clear = and i32 %bf.lshr, 7, !dbg !14238
  store i32 %bf.clear, ptr %kind, align 4, !dbg !14239, !tbaa !1984
  %22 = load i32, ptr %kind, align 4, !dbg !14240, !tbaa !1984
  %23 = load ptr, ptr %s2.addr, align 8, !dbg !14242, !tbaa !1899
  %state59 = getelementptr inbounds %struct.PyASCIIObject, ptr %23, i32 0, i32 3, !dbg !14242
  %bf.load60 = load i32, ptr %state59, align 8, !dbg !14242
  %bf.lshr61 = lshr i32 %bf.load60, 2, !dbg !14242
  %bf.clear62 = and i32 %bf.lshr61, 7, !dbg !14242
  %cmp63 = icmp ne i32 %22, %bf.clear62, !dbg !14243
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !14244

if.then65:                                        ; preds = %cleanup.cont
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup91, !dbg !14245

if.end66:                                         ; preds = %cleanup.cont
  %24 = load ptr, ptr %s1.addr, align 8, !dbg !14247, !tbaa !1899
  %call67 = call ptr @PyUnicode_DATA(ptr noundef %24), !dbg !14247
  store ptr %call67, ptr %data1, align 8, !dbg !14248, !tbaa !1899
  %25 = load ptr, ptr %s2.addr, align 8, !dbg !14249, !tbaa !1899
  %call68 = call ptr @PyUnicode_DATA(ptr noundef %25), !dbg !14249
  store ptr %call68, ptr %data2, align 8, !dbg !14250, !tbaa !1899
  %26 = load i32, ptr %kind, align 4, !dbg !14251, !tbaa !1984
  %27 = load ptr, ptr %data1, align 8, !dbg !14251, !tbaa !1899
  %call69 = call i32 @PyUnicode_READ(i32 noundef %26, ptr noundef %27, i64 noundef 0), !dbg !14251
  %28 = load i32, ptr %kind, align 4, !dbg !14252, !tbaa !1984
  %29 = load ptr, ptr %data2, align 8, !dbg !14252, !tbaa !1899
  %call70 = call i32 @PyUnicode_READ(i32 noundef %28, ptr noundef %29, i64 noundef 0), !dbg !14252
  %cmp71 = icmp ne i32 %call69, %call70, !dbg !14253
  br i1 %cmp71, label %if.then73, label %if.else, !dbg !14254

if.then73:                                        ; preds = %if.end66
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup91, !dbg !14255

if.else:                                          ; preds = %if.end66
  %30 = load i64, ptr %length, align 8, !dbg !14257, !tbaa !2597
  %cmp74 = icmp eq i64 %30, 1, !dbg !14258
  br i1 %cmp74, label %if.then76, label %if.else77, !dbg !14259

if.then76:                                        ; preds = %if.else
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup91, !dbg !14260

if.else77:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !14262
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !14161, metadata !DIExpression()), !dbg !14263
  %31 = load ptr, ptr %data1, align 8, !dbg !14264, !tbaa !1899
  %32 = load ptr, ptr %data2, align 8, !dbg !14265, !tbaa !1899
  %33 = load i64, ptr %length, align 8, !dbg !14266, !tbaa !2597
  %34 = load i32, ptr %kind, align 4, !dbg !14267, !tbaa !1984
  %conv78 = sext i32 %34 to i64, !dbg !14267
  %mul = mul i64 %33, %conv78, !dbg !14268
  %call79 = call i32 @memcmp(ptr noundef %31, ptr noundef %32, i64 noundef %mul) #12, !dbg !14269
  store i32 %call79, ptr %result, align 4, !dbg !14263, !tbaa !1984
  %35 = load i32, ptr %equals.addr, align 4, !dbg !14270, !tbaa !1984
  %cmp80 = icmp eq i32 %35, 2, !dbg !14271
  br i1 %cmp80, label %cond.true82, label %cond.false85, !dbg !14272

cond.true82:                                      ; preds = %if.else77
  %36 = load i32, ptr %result, align 4, !dbg !14273, !tbaa !1984
  %cmp83 = icmp eq i32 %36, 0, !dbg !14274
  %conv84 = zext i1 %cmp83 to i32, !dbg !14274
  br label %cond.end88, !dbg !14272

cond.false85:                                     ; preds = %if.else77
  %37 = load i32, ptr %result, align 4, !dbg !14275, !tbaa !1984
  %cmp86 = icmp ne i32 %37, 0, !dbg !14276
  %conv87 = zext i1 %cmp86 to i32, !dbg !14276
  br label %cond.end88, !dbg !14272

cond.end88:                                       ; preds = %cond.false85, %cond.true82
  %cond89 = phi i32 [ %conv84, %cond.true82 ], [ %conv87, %cond.false85 ], !dbg !14272
  store i32 %cond89, ptr %retval, align 4, !dbg !14277
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !14278
  br label %cleanup91

cleanup91:                                        ; preds = %if.then76, %if.then73, %if.then65, %if.then46, %cond.end88, %cleanup, %if.then40
  call void @llvm.lifetime.end.p0(i64 8, ptr %data2) #11, !dbg !14279
  call void @llvm.lifetime.end.p0(i64 8, ptr %data1) #11, !dbg !14279
  call void @llvm.lifetime.end.p0(i64 4, ptr %kind) #11, !dbg !14279
  call void @llvm.lifetime.end.p0(i64 8, ptr %length) #11, !dbg !14279
  %cleanup.dest116 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest116, label %cleanup121 [
    i32 2, label %return_eq
    i32 3, label %return_ne
  ]

if.else95:                                        ; preds = %if.end
  %38 = load ptr, ptr %s1.addr, align 8, !dbg !14280, !tbaa !1899
  %cmp96 = icmp eq ptr %38, @_Py_NoneStruct, !dbg !14281
  %conv97 = zext i1 %cmp96 to i32, !dbg !14281
  %39 = load i32, ptr %s2_is_unicode, align 4, !dbg !14282, !tbaa !1984
  %and98 = and i32 %conv97, %39, !dbg !14283
  %tobool99 = icmp ne i32 %and98, 0, !dbg !14283
  br i1 %tobool99, label %if.then100, label %if.else101, !dbg !14284

if.then100:                                       ; preds = %if.else95
  br label %return_ne, !dbg !14285

if.else101:                                       ; preds = %if.else95
  %40 = load ptr, ptr %s2.addr, align 8, !dbg !14287, !tbaa !1899
  %cmp102 = icmp eq ptr %40, @_Py_NoneStruct, !dbg !14288
  %conv103 = zext i1 %cmp102 to i32, !dbg !14288
  %41 = load i32, ptr %s1_is_unicode, align 4, !dbg !14289, !tbaa !1984
  %and104 = and i32 %conv103, %41, !dbg !14290
  %tobool105 = icmp ne i32 %and104, 0, !dbg !14290
  br i1 %tobool105, label %if.then106, label %if.else107, !dbg !14291

if.then106:                                       ; preds = %if.else101
  br label %return_ne, !dbg !14292

if.else107:                                       ; preds = %if.else101
  call void @llvm.lifetime.start.p0(i64 4, ptr %result108) #11, !dbg !14294
  tail call void @llvm.dbg.declare(metadata ptr %result108, metadata !14165, metadata !DIExpression()), !dbg !14295
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_result) #11, !dbg !14296
  tail call void @llvm.dbg.declare(metadata ptr %py_result, metadata !14169, metadata !DIExpression()), !dbg !14297
  %42 = load ptr, ptr %s1.addr, align 8, !dbg !14298, !tbaa !1899
  %43 = load ptr, ptr %s2.addr, align 8, !dbg !14299, !tbaa !1899
  %44 = load i32, ptr %equals.addr, align 4, !dbg !14300, !tbaa !1984
  %call109 = call ptr @PyObject_RichCompare(ptr noundef %42, ptr noundef %43, i32 noundef %44), !dbg !14301
  store ptr %call109, ptr %py_result, align 8, !dbg !14297, !tbaa !1899
  %45 = load ptr, ptr %py_result, align 8, !dbg !14302, !tbaa !1899
  %tobool110 = icmp ne ptr %45, null, !dbg !14302
  br i1 %tobool110, label %if.end112, label %if.then111, !dbg !14304

if.then111:                                       ; preds = %if.else107
  store i32 -1, ptr %retval, align 4, !dbg !14305
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114, !dbg !14305

if.end112:                                        ; preds = %if.else107
  %46 = load ptr, ptr %py_result, align 8, !dbg !14306, !tbaa !1899
  %call113 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %46), !dbg !14307
  store i32 %call113, ptr %result108, align 4, !dbg !14308, !tbaa !1984
  %47 = load ptr, ptr %py_result, align 8, !dbg !14309, !tbaa !1899
  call void @Py_DECREF(ptr noundef %47), !dbg !14309
  %48 = load i32, ptr %result108, align 4, !dbg !14310, !tbaa !1984
  store i32 %48, ptr %retval, align 4, !dbg !14311
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114, !dbg !14311

cleanup114:                                       ; preds = %if.end112, %if.then111
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_result) #11, !dbg !14312
  call void @llvm.lifetime.end.p0(i64 4, ptr %result108) #11, !dbg !14312
  br label %cleanup121

return_eq:                                        ; preds = %cleanup91, %if.then
  tail call void @llvm.dbg.label(metadata !14170), !dbg !14313
  %49 = load i32, ptr %equals.addr, align 4, !dbg !14314, !tbaa !1984
  %cmp117 = icmp eq i32 %49, 2, !dbg !14315
  %conv118 = zext i1 %cmp117 to i32, !dbg !14315
  store i32 %conv118, ptr %retval, align 4, !dbg !14316
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup121, !dbg !14316

return_ne:                                        ; preds = %cleanup91, %if.then106, %if.then100
  tail call void @llvm.dbg.label(metadata !14171), !dbg !14317
  %50 = load i32, ptr %equals.addr, align 4, !dbg !14318, !tbaa !1984
  %cmp119 = icmp eq i32 %50, 3, !dbg !14319
  %conv120 = zext i1 %cmp119 to i32, !dbg !14319
  store i32 %conv120, ptr %retval, align 4, !dbg !14320
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup121, !dbg !14320

cleanup121:                                       ; preds = %return_ne, %return_eq, %cleanup91, %cleanup114
  call void @llvm.lifetime.end.p0(i64 4, ptr %s2_is_unicode) #11, !dbg !14321
  call void @llvm.lifetime.end.p0(i64 4, ptr %s1_is_unicode) #11, !dbg !14321
  %51 = load i32, ptr %retval, align 4, !dbg !14321
  ret i32 %51, !dbg !14321
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_READ(i32 noundef %kind, ptr noundef %data, i64 noundef %index) #3 !dbg !14322 {
entry:
  %retval = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  store i32 %kind, ptr %kind.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %kind.addr, metadata !14326, metadata !DIExpression()), !dbg !14329
  store ptr %data, ptr %data.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !14327, metadata !DIExpression()), !dbg !14330
  store i64 %index, ptr %index.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !14328, metadata !DIExpression()), !dbg !14331
  %0 = load i32, ptr %kind.addr, align 4, !dbg !14332, !tbaa !1984
  %cmp = icmp eq i32 %0, 1, !dbg !14334
  br i1 %cmp, label %if.then, label %if.end, !dbg !14335

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %data.addr, align 8, !dbg !14336, !tbaa !1899
  %2 = load i64, ptr %index.addr, align 8, !dbg !14338, !tbaa !2597
  %arrayidx = getelementptr i8, ptr %1, i64 %2, !dbg !14336
  %3 = load i8, ptr %arrayidx, align 1, !dbg !14336, !tbaa !6562
  %conv = zext i8 %3 to i32, !dbg !14336
  store i32 %conv, ptr %retval, align 4, !dbg !14339
  br label %return, !dbg !14339

if.end:                                           ; preds = %entry
  %4 = load i32, ptr %kind.addr, align 4, !dbg !14340, !tbaa !1984
  %cmp1 = icmp eq i32 %4, 2, !dbg !14342
  br i1 %cmp1, label %if.then3, label %if.end6, !dbg !14343

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr %data.addr, align 8, !dbg !14344, !tbaa !1899
  %6 = load i64, ptr %index.addr, align 8, !dbg !14346, !tbaa !2597
  %arrayidx4 = getelementptr i16, ptr %5, i64 %6, !dbg !14344
  %7 = load i16, ptr %arrayidx4, align 2, !dbg !14344, !tbaa !14347
  %conv5 = zext i16 %7 to i32, !dbg !14344
  store i32 %conv5, ptr %retval, align 4, !dbg !14349
  br label %return, !dbg !14349

if.end6:                                          ; preds = %if.end
  %8 = load ptr, ptr %data.addr, align 8, !dbg !14350, !tbaa !1899
  %9 = load i64, ptr %index.addr, align 8, !dbg !14351, !tbaa !2597
  %arrayidx7 = getelementptr i32, ptr %8, i64 %9, !dbg !14350
  %10 = load i32, ptr %arrayidx7, align 4, !dbg !14350, !tbaa !1984
  store i32 %10, ptr %retval, align 4, !dbg !14352
  br label %return, !dbg !14352

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %11 = load i32, ptr %retval, align 4, !dbg !14353
  ret i32 %11, !dbg !14353
}

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !14354 i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) #5

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_4Plex_3DFA_3__pyx_unpickle_StateMap(ptr noundef %__pyx_self, ptr noundef %__pyx_args, i64 noundef %__pyx_nargs, ptr noundef %__pyx_kwds) #0 !dbg !14357 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_nargs.addr = alloca i64, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v___pyx_type = alloca ptr, align 8
  %__pyx_v___pyx_checksum = alloca i64, align 8
  %__pyx_v___pyx_state = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %values = alloca [3 x ptr], align 16
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_pyargnames = alloca [4 x ptr], align 16
  %kw_args = alloca i64, align 8
  %kwd_pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %__pyx_temp = alloca i64, align 8
  %__pyx_temp159 = alloca i64, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_self.addr, metadata !14359, metadata !DIExpression()), !dbg !14389
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_args.addr, metadata !14360, metadata !DIExpression()), !dbg !14390
  store i64 %__pyx_nargs, ptr %__pyx_nargs.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_nargs.addr, metadata !14361, metadata !DIExpression()), !dbg !14391
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwds.addr, metadata !14362, metadata !DIExpression()), !dbg !14392
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_type) #11, !dbg !14393
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_type, metadata !14363, metadata !DIExpression()), !dbg !14394
  store ptr null, ptr %__pyx_v___pyx_type, align 8, !dbg !14394, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_checksum) #11, !dbg !14395
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_checksum, metadata !14364, metadata !DIExpression()), !dbg !14396
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_state) #11, !dbg !14397
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state, metadata !14365, metadata !DIExpression()), !dbg !14398
  store ptr null, ptr %__pyx_v___pyx_state, align 8, !dbg !14398, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !14399
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !14366, metadata !DIExpression()), !dbg !14400
  call void @llvm.lifetime.start.p0(i64 24, ptr %values) #11, !dbg !14401
  tail call void @llvm.dbg.declare(metadata ptr %values, metadata !14367, metadata !DIExpression()), !dbg !14402
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 24, i1 false), !dbg !14402
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !14403
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !14368, metadata !DIExpression()), !dbg !14404
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !14404, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !14405
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !14369, metadata !DIExpression()), !dbg !14406
  store ptr null, ptr %__pyx_filename, align 8, !dbg !14406, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !14407
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !14370, metadata !DIExpression()), !dbg !14408
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !14408, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !14409
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !14371, metadata !DIExpression()), !dbg !14410
  store ptr null, ptr %__pyx_r, align 8, !dbg !14410, !tbaa !1899
  %0 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !14411, !tbaa !1899
  %1 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !14411, !tbaa !2597
  %add.ptr = getelementptr ptr, ptr %0, i64 %1, !dbg !14411
  store ptr %add.ptr, ptr %__pyx_kwvalues, align 8, !dbg !14412, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 32, ptr %__pyx_pyargnames) #11, !dbg !14413
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_pyargnames, metadata !14372, metadata !DIExpression()), !dbg !14414
  %arrayinit.begin = getelementptr inbounds [4 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !14415
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14416, !tbaa !1899
  %__pyx_n_s_pyx_type = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 74, !dbg !14416
  store ptr %__pyx_n_s_pyx_type, ptr %arrayinit.begin, align 8, !dbg !14415, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !14415
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14417, !tbaa !1899
  %__pyx_n_s_pyx_checksum = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 71, !dbg !14417
  store ptr %__pyx_n_s_pyx_checksum, ptr %arrayinit.element, align 8, !dbg !14415, !tbaa !1899
  %arrayinit.element1 = getelementptr inbounds ptr, ptr %arrayinit.element, i64 1, !dbg !14415
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14418, !tbaa !1899
  %__pyx_n_s_pyx_state = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 73, !dbg !14418
  store ptr %__pyx_n_s_pyx_state, ptr %arrayinit.element1, align 8, !dbg !14415, !tbaa !1899
  %arrayinit.element2 = getelementptr inbounds ptr, ptr %arrayinit.element1, i64 1, !dbg !14415
  store ptr null, ptr %arrayinit.element2, align 8, !dbg !14415, !tbaa !1899
  %5 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !14419, !tbaa !1899
  %tobool = icmp ne ptr %5, null, !dbg !14419
  br i1 %tobool, label %if.then, label %if.else116, !dbg !14420

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #11, !dbg !14421
  tail call void @llvm.dbg.declare(metadata ptr %kw_args, metadata !14375, metadata !DIExpression()), !dbg !14422
  %6 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !14423, !tbaa !2597
  switch i64 %6, label %sw.default [
    i64 3, label %sw.bb
    i64 2, label %sw.bb4
    i64 1, label %sw.bb7
    i64 0, label %sw.epilog
  ], !dbg !14424

sw.bb:                                            ; preds = %if.then
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !14425, !tbaa !1899
  %arrayidx = getelementptr ptr, ptr %7, i64 2, !dbg !14425
  %8 = load ptr, ptr %arrayidx, align 8, !dbg !14425, !tbaa !1899
  %arrayidx3 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !14427
  store ptr %8, ptr %arrayidx3, align 16, !dbg !14428, !tbaa !1899
  br label %sw.bb4, !dbg !14427

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %9 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !14429, !tbaa !1899
  %arrayidx5 = getelementptr ptr, ptr %9, i64 1, !dbg !14429
  %10 = load ptr, ptr %arrayidx5, align 8, !dbg !14429, !tbaa !1899
  %arrayidx6 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !14430
  store ptr %10, ptr %arrayidx6, align 8, !dbg !14431, !tbaa !1899
  br label %sw.bb7, !dbg !14430

sw.bb7:                                           ; preds = %if.then, %sw.bb4
  %11 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !14432, !tbaa !1899
  %arrayidx8 = getelementptr ptr, ptr %11, i64 0, !dbg !14432
  %12 = load ptr, ptr %arrayidx8, align 8, !dbg !14432, !tbaa !1899
  %arrayidx9 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !14433
  store ptr %12, ptr %arrayidx9, align 16, !dbg !14434, !tbaa !1899
  br label %sw.epilog, !dbg !14433

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !14435

sw.epilog:                                        ; preds = %sw.bb7, %if.then
  %13 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !14436, !tbaa !1899
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %13), !dbg !14436
  store i64 %call, ptr %kw_args, align 8, !dbg !14437, !tbaa !2597
  %14 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !14438, !tbaa !2597
  switch i64 %14, label %sw.epilog87 [
    i64 0, label %sw.bb10
    i64 1, label %sw.bb29
    i64 2, label %sw.bb58
  ], !dbg !14439

sw.bb10:                                          ; preds = %sw.epilog
  %15 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !14440, !tbaa !1899
  %16 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !14440, !tbaa !1899
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14440, !tbaa !1899
  %__pyx_n_s_pyx_type11 = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 74, !dbg !14440
  %18 = load ptr, ptr %__pyx_n_s_pyx_type11, align 8, !dbg !14440, !tbaa !3128
  %call12 = call ptr @__Pyx_GetKwValue_FASTCALL(ptr noundef %15, ptr noundef %16, ptr noundef %18), !dbg !14440
  %arrayidx13 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !14440
  store ptr %call12, ptr %arrayidx13, align 16, !dbg !14440, !tbaa !1899
  %cmp = icmp ne ptr %call12, null, !dbg !14440
  %lnot = xor i1 %cmp, true, !dbg !14440
  %lnot14 = xor i1 %lnot, true, !dbg !14440
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !14440
  %conv = sext i32 %lnot.ext to i64, !dbg !14440
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !14440
  %tobool15 = icmp ne i64 %expval, 0, !dbg !14440
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !14443

if.then16:                                        ; preds = %sw.bb10
  %arrayidx17 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !14444
  %19 = load ptr, ptr %arrayidx17, align 16, !dbg !14444, !tbaa !1899
  %20 = load i64, ptr %kw_args, align 8, !dbg !14446, !tbaa !2597
  %dec = add i64 %20, -1, !dbg !14446
  store i64 %dec, ptr %kw_args, align 8, !dbg !14446, !tbaa !2597
  br label %if.end, !dbg !14447

if.else:                                          ; preds = %sw.bb10
  %call18 = call ptr @PyErr_Occurred(), !dbg !14448
  %tobool19 = icmp ne ptr %call18, null, !dbg !14448
  %lnot20 = xor i1 %tobool19, true, !dbg !14448
  %lnot22 = xor i1 %lnot20, true, !dbg !14448
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !14448
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !14448
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0), !dbg !14448
  %tobool26 = icmp ne i64 %expval25, 0, !dbg !14448
  br i1 %tobool26, label %if.then27, label %if.else28, !dbg !14450

if.then27:                                        ; preds = %if.else
  %21 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14451, !tbaa !1899
  store ptr %21, ptr %__pyx_filename, align 8, !dbg !14451, !tbaa !1899
  %22 = load ptr, ptr %__pyx_filename, align 8, !dbg !14451, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14451, !tbaa !1984
  %23 = load i32, ptr %__pyx_lineno, align 4, !dbg !14451, !tbaa !1984
  store i32 5710, ptr %__pyx_clineno, align 4, !dbg !14451, !tbaa !1984
  %24 = load i32, ptr %__pyx_clineno, align 4, !dbg !14451, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !14454

if.else28:                                        ; preds = %if.else
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !14455

if.end:                                           ; preds = %if.then16
  br label %sw.bb29, !dbg !14440

sw.bb29:                                          ; preds = %sw.epilog, %if.end
  %25 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !14456, !tbaa !1899
  %26 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !14456, !tbaa !1899
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14456, !tbaa !1899
  %__pyx_n_s_pyx_checksum30 = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 71, !dbg !14456
  %28 = load ptr, ptr %__pyx_n_s_pyx_checksum30, align 8, !dbg !14456, !tbaa !3130
  %call31 = call ptr @__Pyx_GetKwValue_FASTCALL(ptr noundef %25, ptr noundef %26, ptr noundef %28), !dbg !14456
  %arrayidx32 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !14456
  store ptr %call31, ptr %arrayidx32, align 8, !dbg !14456, !tbaa !1899
  %cmp33 = icmp ne ptr %call31, null, !dbg !14456
  %lnot35 = xor i1 %cmp33, true, !dbg !14456
  %lnot37 = xor i1 %lnot35, true, !dbg !14456
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !14456
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !14456
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 1), !dbg !14456
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !14456
  br i1 %tobool41, label %if.then42, label %if.else45, !dbg !14458

if.then42:                                        ; preds = %sw.bb29
  %arrayidx43 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !14459
  %29 = load ptr, ptr %arrayidx43, align 8, !dbg !14459, !tbaa !1899
  %30 = load i64, ptr %kw_args, align 8, !dbg !14461, !tbaa !2597
  %dec44 = add i64 %30, -1, !dbg !14461
  store i64 %dec44, ptr %kw_args, align 8, !dbg !14461, !tbaa !2597
  br label %if.end57, !dbg !14462

if.else45:                                        ; preds = %sw.bb29
  %call46 = call ptr @PyErr_Occurred(), !dbg !14463
  %tobool47 = icmp ne ptr %call46, null, !dbg !14463
  %lnot48 = xor i1 %tobool47, true, !dbg !14463
  %lnot50 = xor i1 %lnot48, true, !dbg !14463
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !14463
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !14463
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !14463
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !14463
  br i1 %tobool54, label %if.then55, label %if.else56, !dbg !14465

if.then55:                                        ; preds = %if.else45
  %31 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14466, !tbaa !1899
  store ptr %31, ptr %__pyx_filename, align 8, !dbg !14466, !tbaa !1899
  %32 = load ptr, ptr %__pyx_filename, align 8, !dbg !14466, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14466, !tbaa !1984
  %33 = load i32, ptr %__pyx_lineno, align 4, !dbg !14466, !tbaa !1984
  store i32 5718, ptr %__pyx_clineno, align 4, !dbg !14466, !tbaa !1984
  %34 = load i32, ptr %__pyx_clineno, align 4, !dbg !14466, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !14469

if.else56:                                        ; preds = %if.else45
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.157, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef 1), !dbg !14470
  %35 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14472, !tbaa !1899
  store ptr %35, ptr %__pyx_filename, align 8, !dbg !14472, !tbaa !1899
  %36 = load ptr, ptr %__pyx_filename, align 8, !dbg !14472, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14472, !tbaa !1984
  %37 = load i32, ptr %__pyx_lineno, align 4, !dbg !14472, !tbaa !1984
  store i32 5720, ptr %__pyx_clineno, align 4, !dbg !14472, !tbaa !1984
  %38 = load i32, ptr %__pyx_clineno, align 4, !dbg !14472, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !14475

if.end57:                                         ; preds = %if.then42
  br label %sw.bb58, !dbg !14456

sw.bb58:                                          ; preds = %sw.epilog, %if.end57
  %39 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !14476, !tbaa !1899
  %40 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !14476, !tbaa !1899
  %41 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14476, !tbaa !1899
  %__pyx_n_s_pyx_state59 = getelementptr inbounds %struct.__pyx_mstate, ptr %41, i32 0, i32 73, !dbg !14476
  %42 = load ptr, ptr %__pyx_n_s_pyx_state59, align 8, !dbg !14476, !tbaa !3096
  %call60 = call ptr @__Pyx_GetKwValue_FASTCALL(ptr noundef %39, ptr noundef %40, ptr noundef %42), !dbg !14476
  %arrayidx61 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !14476
  store ptr %call60, ptr %arrayidx61, align 16, !dbg !14476, !tbaa !1899
  %cmp62 = icmp ne ptr %call60, null, !dbg !14476
  %lnot64 = xor i1 %cmp62, true, !dbg !14476
  %lnot66 = xor i1 %lnot64, true, !dbg !14476
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !14476
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !14476
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 1), !dbg !14476
  %tobool70 = icmp ne i64 %expval69, 0, !dbg !14476
  br i1 %tobool70, label %if.then71, label %if.else74, !dbg !14478

if.then71:                                        ; preds = %sw.bb58
  %arrayidx72 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !14479
  %43 = load ptr, ptr %arrayidx72, align 16, !dbg !14479, !tbaa !1899
  %44 = load i64, ptr %kw_args, align 8, !dbg !14481, !tbaa !2597
  %dec73 = add i64 %44, -1, !dbg !14481
  store i64 %dec73, ptr %kw_args, align 8, !dbg !14481, !tbaa !2597
  br label %if.end86, !dbg !14482

if.else74:                                        ; preds = %sw.bb58
  %call75 = call ptr @PyErr_Occurred(), !dbg !14483
  %tobool76 = icmp ne ptr %call75, null, !dbg !14483
  %lnot77 = xor i1 %tobool76, true, !dbg !14483
  %lnot79 = xor i1 %lnot77, true, !dbg !14483
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !14483
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !14483
  %expval82 = call i64 @llvm.expect.i64(i64 %conv81, i64 0), !dbg !14483
  %tobool83 = icmp ne i64 %expval82, 0, !dbg !14483
  br i1 %tobool83, label %if.then84, label %if.else85, !dbg !14485

if.then84:                                        ; preds = %if.else74
  %45 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14486, !tbaa !1899
  store ptr %45, ptr %__pyx_filename, align 8, !dbg !14486, !tbaa !1899
  %46 = load ptr, ptr %__pyx_filename, align 8, !dbg !14486, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14486, !tbaa !1984
  %47 = load i32, ptr %__pyx_lineno, align 4, !dbg !14486, !tbaa !1984
  store i32 5728, ptr %__pyx_clineno, align 4, !dbg !14486, !tbaa !1984
  %48 = load i32, ptr %__pyx_clineno, align 4, !dbg !14486, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !14489

if.else85:                                        ; preds = %if.else74
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.157, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef 2), !dbg !14490
  %49 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14492, !tbaa !1899
  store ptr %49, ptr %__pyx_filename, align 8, !dbg !14492, !tbaa !1899
  %50 = load ptr, ptr %__pyx_filename, align 8, !dbg !14492, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14492, !tbaa !1984
  %51 = load i32, ptr %__pyx_lineno, align 4, !dbg !14492, !tbaa !1984
  store i32 5730, ptr %__pyx_clineno, align 4, !dbg !14492, !tbaa !1984
  %52 = load i32, ptr %__pyx_clineno, align 4, !dbg !14492, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !14495

if.end86:                                         ; preds = %if.then71
  br label %sw.epilog87, !dbg !14496

sw.epilog87:                                      ; preds = %if.end86, %sw.epilog
  %53 = load i64, ptr %kw_args, align 8, !dbg !14497, !tbaa !2597
  %cmp88 = icmp sgt i64 %53, 0, !dbg !14497
  %lnot90 = xor i1 %cmp88, true, !dbg !14497
  %lnot92 = xor i1 %lnot90, true, !dbg !14497
  %lnot.ext93 = zext i1 %lnot92 to i32, !dbg !14497
  %conv94 = sext i32 %lnot.ext93 to i64, !dbg !14497
  %expval95 = call i64 @llvm.expect.i64(i64 %conv94, i64 0), !dbg !14497
  %tobool96 = icmp ne i64 %expval95, 0, !dbg !14497
  br i1 %tobool96, label %if.then97, label %if.end112, !dbg !14498

if.then97:                                        ; preds = %sw.epilog87
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwd_pos_args) #11, !dbg !14499
  tail call void @llvm.dbg.declare(metadata ptr %kwd_pos_args, metadata !14378, metadata !DIExpression()), !dbg !14500
  %54 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !14501, !tbaa !2597
  store i64 %54, ptr %kwd_pos_args, align 8, !dbg !14500, !tbaa !2597
  %55 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !14502, !tbaa !1899
  %56 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !14502, !tbaa !1899
  %arraydecay = getelementptr inbounds [4 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !14502
  %arraydecay98 = getelementptr inbounds [3 x ptr], ptr %values, i64 0, i64 0, !dbg !14502
  %add.ptr99 = getelementptr ptr, ptr %arraydecay98, i64 0, !dbg !14502
  %57 = load i64, ptr %kwd_pos_args, align 8, !dbg !14502, !tbaa !2597
  %call100 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %55, ptr noundef %56, ptr noundef %arraydecay, ptr noundef null, ptr noundef %add.ptr99, i64 noundef %57, ptr noundef @.str.157), !dbg !14502
  %cmp101 = icmp slt i32 %call100, 0, !dbg !14502
  %lnot103 = xor i1 %cmp101, true, !dbg !14502
  %lnot105 = xor i1 %lnot103, true, !dbg !14502
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !14502
  %conv107 = sext i32 %lnot.ext106 to i64, !dbg !14502
  %expval108 = call i64 @llvm.expect.i64(i64 %conv107, i64 0), !dbg !14502
  %tobool109 = icmp ne i64 %expval108, 0, !dbg !14502
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !14504

if.then110:                                       ; preds = %if.then97
  %58 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14505, !tbaa !1899
  store ptr %58, ptr %__pyx_filename, align 8, !dbg !14505, !tbaa !1899
  %59 = load ptr, ptr %__pyx_filename, align 8, !dbg !14505, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14505, !tbaa !1984
  %60 = load i32, ptr %__pyx_lineno, align 4, !dbg !14505, !tbaa !1984
  store i32 5735, ptr %__pyx_clineno, align 4, !dbg !14505, !tbaa !1984
  %61 = load i32, ptr %__pyx_clineno, align 4, !dbg !14505, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14508

if.end111:                                        ; preds = %if.then97
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14509
  br label %cleanup, !dbg !14509

cleanup:                                          ; preds = %if.then110, %if.end111
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwd_pos_args) #11, !dbg !14509
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup113 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end112, !dbg !14510

if.end112:                                        ; preds = %cleanup.cont, %sw.epilog87
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14511
  br label %cleanup113, !dbg !14511

cleanup113:                                       ; preds = %if.else85, %if.then84, %if.else56, %if.then55, %if.else28, %if.then27, %sw.default, %if.end112, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #11, !dbg !14511
  %cleanup.dest114 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest114, label %cleanup153 [
    i32 0, label %cleanup.cont115
  ]

cleanup.cont115:                                  ; preds = %cleanup113
  br label %if.end135, !dbg !14512

if.else116:                                       ; preds = %entry
  %62 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !14513, !tbaa !2597
  %cmp117 = icmp ne i64 %62, 3, !dbg !14513
  %lnot119 = xor i1 %cmp117, true, !dbg !14513
  %lnot121 = xor i1 %lnot119, true, !dbg !14513
  %lnot.ext122 = zext i1 %lnot121 to i32, !dbg !14513
  %conv123 = sext i32 %lnot.ext122 to i64, !dbg !14513
  %expval124 = call i64 @llvm.expect.i64(i64 %conv123, i64 0), !dbg !14513
  %tobool125 = icmp ne i64 %expval124, 0, !dbg !14513
  br i1 %tobool125, label %if.then126, label %if.else127, !dbg !14515

if.then126:                                       ; preds = %if.else116
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup153, !dbg !14516

if.else127:                                       ; preds = %if.else116
  %63 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !14518, !tbaa !1899
  %arrayidx128 = getelementptr ptr, ptr %63, i64 0, !dbg !14518
  %64 = load ptr, ptr %arrayidx128, align 8, !dbg !14518, !tbaa !1899
  %arrayidx129 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !14520
  store ptr %64, ptr %arrayidx129, align 16, !dbg !14521, !tbaa !1899
  %65 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !14522, !tbaa !1899
  %arrayidx130 = getelementptr ptr, ptr %65, i64 1, !dbg !14522
  %66 = load ptr, ptr %arrayidx130, align 8, !dbg !14522, !tbaa !1899
  %arrayidx131 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !14523
  store ptr %66, ptr %arrayidx131, align 8, !dbg !14524, !tbaa !1899
  %67 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !14525, !tbaa !1899
  %arrayidx132 = getelementptr ptr, ptr %67, i64 2, !dbg !14525
  %68 = load ptr, ptr %arrayidx132, align 8, !dbg !14525, !tbaa !1899
  %arrayidx133 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !14526
  store ptr %68, ptr %arrayidx133, align 16, !dbg !14527, !tbaa !1899
  br label %if.end134

if.end134:                                        ; preds = %if.else127
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %cleanup.cont115
  %arrayidx136 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !14528
  %69 = load ptr, ptr %arrayidx136, align 16, !dbg !14528, !tbaa !1899
  store ptr %69, ptr %__pyx_v___pyx_type, align 8, !dbg !14529, !tbaa !1899
  %arrayidx137 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !14530
  %70 = load ptr, ptr %arrayidx137, align 8, !dbg !14530, !tbaa !1899
  %call138 = call i64 @__Pyx_PyInt_As_long(ptr noundef %70), !dbg !14531
  store i64 %call138, ptr %__pyx_v___pyx_checksum, align 8, !dbg !14532, !tbaa !2597
  %71 = load i64, ptr %__pyx_v___pyx_checksum, align 8, !dbg !14533, !tbaa !2597
  %cmp139 = icmp eq i64 %71, -1, !dbg !14533
  br i1 %cmp139, label %land.rhs, label %land.end, !dbg !14533

land.rhs:                                         ; preds = %if.end135
  %call141 = call ptr @PyErr_Occurred(), !dbg !14533
  %tobool142 = icmp ne ptr %call141, null, !dbg !14533
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end135
  %72 = phi i1 [ false, %if.end135 ], [ %tobool142, %land.rhs ], !dbg !14535
  %lnot143 = xor i1 %72, true, !dbg !14533
  %lnot145 = xor i1 %lnot143, true, !dbg !14533
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !14533
  %conv147 = sext i32 %lnot.ext146 to i64, !dbg !14533
  %expval148 = call i64 @llvm.expect.i64(i64 %conv147, i64 0), !dbg !14533
  %tobool149 = icmp ne i64 %expval148, 0, !dbg !14533
  br i1 %tobool149, label %if.then150, label %if.end151, !dbg !14536

if.then150:                                       ; preds = %land.end
  %73 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14537, !tbaa !1899
  store ptr %73, ptr %__pyx_filename, align 8, !dbg !14537, !tbaa !1899
  %74 = load ptr, ptr %__pyx_filename, align 8, !dbg !14537, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14537, !tbaa !1984
  %75 = load i32, ptr %__pyx_lineno, align 4, !dbg !14537, !tbaa !1984
  store i32 5745, ptr %__pyx_clineno, align 4, !dbg !14537, !tbaa !1984
  %76 = load i32, ptr %__pyx_clineno, align 4, !dbg !14537, !tbaa !1984
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup153, !dbg !14540

if.end151:                                        ; preds = %land.end
  %arrayidx152 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !14541
  %77 = load ptr, ptr %arrayidx152, align 16, !dbg !14541, !tbaa !1899
  store ptr %77, ptr %__pyx_v___pyx_state, align 8, !dbg !14542, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14543
  br label %cleanup153, !dbg !14543

cleanup153:                                       ; preds = %if.then150, %if.then126, %if.end151, %cleanup113
  call void @llvm.lifetime.end.p0(i64 32, ptr %__pyx_pyargnames) #11, !dbg !14543
  %cleanup.dest154 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest154, label %cleanup167 [
    i32 0, label %cleanup.cont155
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont155:                                  ; preds = %cleanup153
  br label %__pyx_L6_skip, !dbg !14544

__pyx_L5_argtuple_error:                          ; preds = %cleanup153
  tail call void @llvm.dbg.label(metadata !14381), !dbg !14545
  %78 = load i64, ptr %__pyx_nargs.addr, align 8, !dbg !14546, !tbaa !2597
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.157, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef %78), !dbg !14547
  %79 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14548, !tbaa !1899
  store ptr %79, ptr %__pyx_filename, align 8, !dbg !14548, !tbaa !1899
  %80 = load ptr, ptr %__pyx_filename, align 8, !dbg !14548, !tbaa !1899
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !14548, !tbaa !1984
  %81 = load i32, ptr %__pyx_lineno, align 4, !dbg !14548, !tbaa !1984
  store i32 5750, ptr %__pyx_clineno, align 4, !dbg !14548, !tbaa !1984
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !14548, !tbaa !1984
  br label %__pyx_L3_error, !dbg !14551

__pyx_L6_skip:                                    ; preds = %cleanup.cont155
  tail call void @llvm.dbg.label(metadata !14382), !dbg !14552
  br label %__pyx_L4_argument_unpacking_done, !dbg !14553

__pyx_L3_error:                                   ; preds = %cleanup153, %__pyx_L5_argtuple_error
  tail call void @llvm.dbg.label(metadata !14383), !dbg !14554
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #11, !dbg !14555
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp, metadata !14384, metadata !DIExpression()), !dbg !14556
  store i64 0, ptr %__pyx_temp, align 8, !dbg !14557, !tbaa !2597
  br label %for.cond, !dbg !14559

for.cond:                                         ; preds = %for.inc, %__pyx_L3_error
  %83 = load i64, ptr %__pyx_temp, align 8, !dbg !14560, !tbaa !2597
  %cmp156 = icmp slt i64 %83, 3, !dbg !14562
  br i1 %cmp156, label %for.body, label %for.end, !dbg !14563

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !14564

for.inc:                                          ; preds = %for.body
  %84 = load i64, ptr %__pyx_temp, align 8, !dbg !14566, !tbaa !2597
  %inc = add i64 %84, 1, !dbg !14566
  store i64 %inc, ptr %__pyx_temp, align 8, !dbg !14566, !tbaa !2597
  br label %for.cond, !dbg !14567, !llvm.loop !14568

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #11, !dbg !14570
  %85 = load i32, ptr %__pyx_clineno, align 4, !dbg !14571, !tbaa !1984
  %86 = load i32, ptr %__pyx_lineno, align 4, !dbg !14572, !tbaa !1984
  %87 = load ptr, ptr %__pyx_filename, align 8, !dbg !14573, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.158, i32 noundef %85, i32 noundef %86, ptr noundef %87), !dbg !14574
  store ptr null, ptr %retval, align 8, !dbg !14575
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup167, !dbg !14575

__pyx_L4_argument_unpacking_done:                 ; preds = %__pyx_L6_skip
  tail call void @llvm.dbg.label(metadata !14386), !dbg !14576
  %88 = load ptr, ptr %__pyx_self.addr, align 8, !dbg !14577, !tbaa !1899
  %89 = load ptr, ptr %__pyx_v___pyx_type, align 8, !dbg !14578, !tbaa !1899
  %90 = load i64, ptr %__pyx_v___pyx_checksum, align 8, !dbg !14579, !tbaa !2597
  %91 = load ptr, ptr %__pyx_v___pyx_state, align 8, !dbg !14580, !tbaa !1899
  %call158 = call ptr @__pyx_pf_6Cython_4Plex_3DFA_2__pyx_unpickle_StateMap(ptr noundef %88, ptr noundef %89, i64 noundef %90, ptr noundef %91), !dbg !14581
  store ptr %call158, ptr %__pyx_r, align 8, !dbg !14582, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp159) #11, !dbg !14583
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp159, metadata !14387, metadata !DIExpression()), !dbg !14584
  store i64 0, ptr %__pyx_temp159, align 8, !dbg !14585, !tbaa !2597
  br label %for.cond160, !dbg !14587

for.cond160:                                      ; preds = %for.inc164, %__pyx_L4_argument_unpacking_done
  %92 = load i64, ptr %__pyx_temp159, align 8, !dbg !14588, !tbaa !2597
  %cmp161 = icmp slt i64 %92, 3, !dbg !14590
  br i1 %cmp161, label %for.body163, label %for.end166, !dbg !14591

for.body163:                                      ; preds = %for.cond160
  br label %for.inc164, !dbg !14592

for.inc164:                                       ; preds = %for.body163
  %93 = load i64, ptr %__pyx_temp159, align 8, !dbg !14594, !tbaa !2597
  %inc165 = add i64 %93, 1, !dbg !14594
  store i64 %inc165, ptr %__pyx_temp159, align 8, !dbg !14594, !tbaa !2597
  br label %for.cond160, !dbg !14595, !llvm.loop !14596

for.end166:                                       ; preds = %for.cond160
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp159) #11, !dbg !14598
  %94 = load ptr, ptr %__pyx_r, align 8, !dbg !14599, !tbaa !1899
  store ptr %94, ptr %retval, align 8, !dbg !14600
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup167, !dbg !14600

cleanup167:                                       ; preds = %for.end166, %for.end, %cleanup153
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 24, ptr %values) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_state) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_checksum) #11, !dbg !14601
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_type) #11, !dbg !14601
  %95 = load ptr, ptr %retval, align 8, !dbg !14601
  ret ptr %95, !dbg !14601
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @__Pyx_PyInt_As_long(ptr noundef %x) #3 !dbg !14602 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca ptr, align 8
  %neg_one = alloca i64, align 8
  %const_zero = alloca i64, align 8
  %is_unsigned = alloca i32, align 4
  %value = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %digits = alloca ptr, align 8
  %value29 = alloca i64, align 8
  %value36 = alloca i64, align 8
  %value47 = alloca i64, align 8
  %val = alloca i64, align 8
  %v = alloca ptr, align 8
  %val51 = alloca i64, align 8
  %tmp = alloca ptr, align 8
  store ptr %x, ptr %x.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !14606, metadata !DIExpression()), !dbg !14646
  call void @llvm.lifetime.start.p0(i64 8, ptr %neg_one) #11, !dbg !14647
  tail call void @llvm.dbg.declare(metadata ptr %neg_one, metadata !14607, metadata !DIExpression()), !dbg !14648
  store i64 -1, ptr %neg_one, align 8, !dbg !14648, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_zero) #11, !dbg !14647
  tail call void @llvm.dbg.declare(metadata ptr %const_zero, metadata !14609, metadata !DIExpression()), !dbg !14649
  store i64 0, ptr %const_zero, align 8, !dbg !14649, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #11, !dbg !14650
  tail call void @llvm.dbg.declare(metadata ptr %is_unsigned, metadata !14610, metadata !DIExpression()), !dbg !14651
  store i32 0, ptr %is_unsigned, align 4, !dbg !14651, !tbaa !1984
  %0 = load ptr, ptr %x.addr, align 8, !dbg !14652, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !14652
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 16777216), !dbg !14652
  %tobool = icmp ne i32 %call1, 0, !dbg !14652
  %lnot = xor i1 %tobool, true, !dbg !14652
  %lnot2 = xor i1 %lnot, true, !dbg !14652
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14652
  %conv = sext i32 %lnot.ext to i64, !dbg !14652
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !14652
  %tobool3 = icmp ne i64 %expval, 0, !dbg !14652
  br i1 %tobool3, label %if.then, label %if.else50, !dbg !14653

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %x.addr, align 8, !dbg !14654, !tbaa !1899
  %call4 = call i64 @Py_SIZE(ptr noundef %1), !dbg !14654
  %cmp = icmp eq i64 %call4, 0, !dbg !14654
  br i1 %cmp, label %if.then13, label %lor.lhs.false, !dbg !14654

lor.lhs.false:                                    ; preds = %if.then
  %2 = load ptr, ptr %x.addr, align 8, !dbg !14654, !tbaa !1899
  %call6 = call i64 @Py_SIZE(ptr noundef %2), !dbg !14654
  %cmp7 = icmp eq i64 %call6, 1, !dbg !14654
  br i1 %cmp7, label %if.then13, label %lor.lhs.false9, !dbg !14654

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %3 = load ptr, ptr %x.addr, align 8, !dbg !14654, !tbaa !1899
  %call10 = call i64 @Py_SIZE(ptr noundef %3), !dbg !14654
  %cmp11 = icmp eq i64 %call10, -1, !dbg !14654
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !14655

if.then13:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %value) #11, !dbg !14656
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !14611, metadata !DIExpression()), !dbg !14656
  %4 = load ptr, ptr %x.addr, align 8, !dbg !14656, !tbaa !1899
  %call14 = call i64 @Py_SIZE(ptr noundef %4), !dbg !14656
  %cmp15 = icmp eq i64 %call14, 0, !dbg !14656
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !14656

cond.true:                                        ; preds = %if.then13
  br label %cond.end24, !dbg !14656

cond.false:                                       ; preds = %if.then13
  %5 = load ptr, ptr %x.addr, align 8, !dbg !14656, !tbaa !1899
  %call17 = call i64 @Py_SIZE(ptr noundef %5), !dbg !14656
  %cmp18 = icmp slt i64 %call17, 0, !dbg !14656
  br i1 %cmp18, label %cond.true20, label %cond.false21, !dbg !14656

cond.true20:                                      ; preds = %cond.false
  %6 = load ptr, ptr %x.addr, align 8, !dbg !14656, !tbaa !1899
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %6, i32 0, i32 1, !dbg !14656
  %arrayidx = getelementptr [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !14656
  %7 = load i32, ptr %arrayidx, align 8, !dbg !14656, !tbaa !1984
  %sub = sub i32 0, %7, !dbg !14656
  br label %cond.end, !dbg !14656

cond.false21:                                     ; preds = %cond.false
  %8 = load ptr, ptr %x.addr, align 8, !dbg !14656, !tbaa !1899
  %ob_digit22 = getelementptr inbounds %struct._longobject, ptr %8, i32 0, i32 1, !dbg !14656
  %arrayidx23 = getelementptr [1 x i32], ptr %ob_digit22, i64 0, i64 0, !dbg !14656
  %9 = load i32, ptr %arrayidx23, align 8, !dbg !14656, !tbaa !1984
  br label %cond.end, !dbg !14656

cond.end:                                         ; preds = %cond.false21, %cond.true20
  %cond = phi i32 [ %sub, %cond.true20 ], [ %9, %cond.false21 ], !dbg !14656
  br label %cond.end24, !dbg !14656

cond.end24:                                       ; preds = %cond.end, %cond.true
  %cond25 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !14656
  store i32 %cond25, ptr %value, align 4, !dbg !14656, !tbaa !1984
  %10 = load i32, ptr %value, align 4, !dbg !14656, !tbaa !1984
  %conv26 = sext i32 %10 to i64, !dbg !14656
  store i64 %conv26, ptr %retval, align 8, !dbg !14656
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %value) #11, !dbg !14657
  br label %cleanup59

if.else:                                          ; preds = %lor.lhs.false9
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #11, !dbg !14658
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !14620, metadata !DIExpression()), !dbg !14659
  %11 = load ptr, ptr %x.addr, align 8, !dbg !14660, !tbaa !1899
  %ob_digit27 = getelementptr inbounds %struct._longobject, ptr %11, i32 0, i32 1, !dbg !14660
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit27, i64 0, i64 0, !dbg !14660
  store ptr %arraydecay, ptr %digits, align 8, !dbg !14659, !tbaa !1899
  %12 = load ptr, ptr %x.addr, align 8, !dbg !14661, !tbaa !1899
  %call28 = call i64 @Py_SIZE(ptr noundef %12), !dbg !14661
  switch i64 %call28, label %sw.epilog [
    i64 -2, label %sw.bb
    i64 2, label %sw.bb35
    i64 -3, label %sw.bb43
    i64 3, label %sw.bb44
    i64 -4, label %sw.bb45
    i64 4, label %sw.bb46
  ], !dbg !14662

sw.bb:                                            ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %value29) #11, !dbg !14663
  tail call void @llvm.dbg.declare(metadata ptr %value29, metadata !14624, metadata !DIExpression()), !dbg !14663
  %13 = load ptr, ptr %digits, align 8, !dbg !14663, !tbaa !1899
  %arrayidx30 = getelementptr i32, ptr %13, i64 1, !dbg !14663
  %14 = load i32, ptr %arrayidx30, align 4, !dbg !14663, !tbaa !1984
  %conv31 = zext i32 %14 to i64, !dbg !14663
  %shl = shl i64 %conv31, 30, !dbg !14663
  %15 = load ptr, ptr %digits, align 8, !dbg !14663, !tbaa !1899
  %arrayidx32 = getelementptr i32, ptr %15, i64 0, !dbg !14663
  %16 = load i32, ptr %arrayidx32, align 4, !dbg !14663, !tbaa !1984
  %conv33 = zext i32 %16 to i64, !dbg !14663
  %or = or i64 %shl, %conv33, !dbg !14663
  %sub34 = sub i64 0, %or, !dbg !14663
  store i64 %sub34, ptr %value29, align 8, !dbg !14663, !tbaa !2597
  %17 = load i64, ptr %value29, align 8, !dbg !14663, !tbaa !2597
  store i64 %17, ptr %retval, align 8, !dbg !14663
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value29) #11, !dbg !14664
  br label %cleanup

sw.bb35:                                          ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %value36) #11, !dbg !14665
  tail call void @llvm.dbg.declare(metadata ptr %value36, metadata !14631, metadata !DIExpression()), !dbg !14665
  %18 = load ptr, ptr %digits, align 8, !dbg !14665, !tbaa !1899
  %arrayidx37 = getelementptr i32, ptr %18, i64 1, !dbg !14665
  %19 = load i32, ptr %arrayidx37, align 4, !dbg !14665, !tbaa !1984
  %conv38 = zext i32 %19 to i64, !dbg !14665
  %shl39 = shl i64 %conv38, 30, !dbg !14665
  %20 = load ptr, ptr %digits, align 8, !dbg !14665, !tbaa !1899
  %arrayidx40 = getelementptr i32, ptr %20, i64 0, !dbg !14665
  %21 = load i32, ptr %arrayidx40, align 4, !dbg !14665, !tbaa !1984
  %conv41 = zext i32 %21 to i64, !dbg !14665
  %or42 = or i64 %shl39, %conv41, !dbg !14665
  store i64 %or42, ptr %value36, align 8, !dbg !14665, !tbaa !2597
  %22 = load i64, ptr %value36, align 8, !dbg !14665, !tbaa !2597
  store i64 %22, ptr %retval, align 8, !dbg !14665
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value36) #11, !dbg !14666
  br label %cleanup

sw.bb43:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !14667

sw.bb44:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !14668

sw.bb45:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !14669

sw.bb46:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !14670

sw.epilog:                                        ; preds = %if.else, %sw.bb46, %sw.bb45, %sw.bb44, %sw.bb43
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14671
  br label %cleanup, !dbg !14671

cleanup:                                          ; preds = %sw.epilog, %sw.bb35, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #11, !dbg !14671
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup59 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end

if.end:                                           ; preds = %cleanup.cont
  call void @llvm.lifetime.start.p0(i64 8, ptr %value47) #11, !dbg !14672
  tail call void @llvm.dbg.declare(metadata ptr %value47, metadata !14637, metadata !DIExpression()), !dbg !14672
  %23 = load ptr, ptr %x.addr, align 8, !dbg !14672, !tbaa !1899
  %call48 = call i64 @PyLong_AsLong(ptr noundef %23), !dbg !14672
  store i64 %call48, ptr %value47, align 8, !dbg !14672, !tbaa !2597
  %24 = load i64, ptr %value47, align 8, !dbg !14672, !tbaa !2597
  store i64 %24, ptr %retval, align 8, !dbg !14672
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value47) #11, !dbg !14673
  br label %cleanup59

if.else50:                                        ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %val51) #11, !dbg !14674
  tail call void @llvm.dbg.declare(metadata ptr %val51, metadata !14641, metadata !DIExpression()), !dbg !14675
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !14676
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !14643, metadata !DIExpression()), !dbg !14677
  %25 = load ptr, ptr %x.addr, align 8, !dbg !14678, !tbaa !1899
  %call52 = call ptr @__Pyx_PyNumber_IntOrLong(ptr noundef %25), !dbg !14679
  store ptr %call52, ptr %tmp, align 8, !dbg !14677, !tbaa !1899
  %26 = load ptr, ptr %tmp, align 8, !dbg !14680, !tbaa !1899
  %tobool53 = icmp ne ptr %26, null, !dbg !14680
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !14682

if.then54:                                        ; preds = %if.else50
  store i64 -1, ptr %retval, align 8, !dbg !14683
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup57, !dbg !14683

if.end55:                                         ; preds = %if.else50
  %27 = load ptr, ptr %tmp, align 8, !dbg !14684, !tbaa !1899
  %call56 = call i64 @__Pyx_PyInt_As_long(ptr noundef %27), !dbg !14685
  store i64 %call56, ptr %val51, align 8, !dbg !14686, !tbaa !2597
  %28 = load ptr, ptr %tmp, align 8, !dbg !14687, !tbaa !1899
  call void @Py_DECREF(ptr noundef %28), !dbg !14687
  %29 = load i64, ptr %val51, align 8, !dbg !14688, !tbaa !2597
  store i64 %29, ptr %retval, align 8, !dbg !14689
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup57, !dbg !14689

cleanup57:                                        ; preds = %if.end55, %if.then54
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !14690
  call void @llvm.lifetime.end.p0(i64 8, ptr %val51) #11, !dbg !14690
  br label %cleanup59

raise_overflow:                                   ; No predecessors!
  tail call void @llvm.dbg.label(metadata !14644), !dbg !14691
  %30 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !14692, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %30, ptr noundef @.str.159), !dbg !14693
  store i64 -1, ptr %retval, align 8, !dbg !14694
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup59, !dbg !14694

raise_neg_overflow:                               ; No predecessors!
  tail call void @llvm.dbg.label(metadata !14645), !dbg !14695
  %31 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !14696, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %31, ptr noundef @.str.160), !dbg !14697
  store i64 -1, ptr %retval, align 8, !dbg !14698
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup59, !dbg !14698

cleanup59:                                        ; preds = %raise_neg_overflow, %raise_overflow, %cleanup57, %if.end, %cleanup, %cond.end24
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #11, !dbg !14699
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_zero) #11, !dbg !14699
  call void @llvm.lifetime.end.p0(i64 8, ptr %neg_one) #11, !dbg !14699
  %32 = load i64, ptr %retval, align 8, !dbg !14699
  ret i64 %32, !dbg !14699
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_4Plex_3DFA_2__pyx_unpickle_StateMap(ptr noundef %__pyx_self, ptr noundef %__pyx_v___pyx_type, i64 noundef %__pyx_v___pyx_checksum, ptr noundef %__pyx_v___pyx_state) #0 !dbg !14700 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_type.addr = alloca ptr, align 8
  %__pyx_v___pyx_checksum.addr = alloca i64, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_v___pyx_PickleError = alloca ptr, align 8
  %__pyx_v___pyx_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %__pyx_callargs = alloca [2 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_self.addr, metadata !14704, metadata !DIExpression()), !dbg !14730
  store ptr %__pyx_v___pyx_type, ptr %__pyx_v___pyx_type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_type.addr, metadata !14705, metadata !DIExpression()), !dbg !14731
  store i64 %__pyx_v___pyx_checksum, ptr %__pyx_v___pyx_checksum.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_checksum.addr, metadata !14706, metadata !DIExpression()), !dbg !14732
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !14707, metadata !DIExpression()), !dbg !14733
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_PickleError) #11, !dbg !14734
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_PickleError, metadata !14708, metadata !DIExpression()), !dbg !14735
  store ptr null, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !14735, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_result) #11, !dbg !14736
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_result, metadata !14709, metadata !DIExpression()), !dbg !14737
  store ptr null, ptr %__pyx_v___pyx_result, align 8, !dbg !14737, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #11, !dbg !14738
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !14710, metadata !DIExpression()), !dbg !14739
  store ptr null, ptr %__pyx_r, align 8, !dbg !14739, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !14740
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !14711, metadata !DIExpression()), !dbg !14741
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14741, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !14742
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !14712, metadata !DIExpression()), !dbg !14743
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !14744
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !14713, metadata !DIExpression()), !dbg !14745
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !14745, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !14746
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !14714, metadata !DIExpression()), !dbg !14747
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !14747, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #11, !dbg !14748
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !14715, metadata !DIExpression()), !dbg !14749
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !14750
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !14716, metadata !DIExpression()), !dbg !14751
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !14751, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #11, !dbg !14752
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !14717, metadata !DIExpression()), !dbg !14753
  store ptr null, ptr %__pyx_filename, align 8, !dbg !14753, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !14754
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !14718, metadata !DIExpression()), !dbg !14755
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !14755, !tbaa !1984
  %0 = load i64, ptr %__pyx_v___pyx_checksum.addr, align 8, !dbg !14756, !tbaa !2597
  %call = call ptr @__Pyx_PyInt_From_long(i64 noundef %0), !dbg !14757
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !14758, !tbaa !1899
  %1 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14759, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !14759
  %lnot = xor i1 %tobool, true, !dbg !14759
  %lnot1 = xor i1 %lnot, true, !dbg !14759
  %lnot2 = xor i1 %lnot1, true, !dbg !14759
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14759
  %conv = sext i32 %lnot.ext to i64, !dbg !14759
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !14759
  %tobool3 = icmp ne i64 %expval, 0, !dbg !14759
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14761

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14762, !tbaa !1899
  store ptr %2, ptr %__pyx_filename, align 8, !dbg !14762, !tbaa !1899
  %3 = load ptr, ptr %__pyx_filename, align 8, !dbg !14762, !tbaa !1899
  store i32 4, ptr %__pyx_lineno, align 4, !dbg !14762, !tbaa !1984
  %4 = load i32, ptr %__pyx_lineno, align 4, !dbg !14762, !tbaa !1984
  store i32 5799, ptr %__pyx_clineno, align 4, !dbg !14762, !tbaa !1984
  %5 = load i32, ptr %__pyx_clineno, align 4, !dbg !14762, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14765

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14766, !tbaa !1899
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14767, !tbaa !1899
  %__pyx_tuple__4 = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 95, !dbg !14767
  %8 = load ptr, ptr %__pyx_tuple__4, align 8, !dbg !14767, !tbaa !2931
  %call4 = call i32 @__Pyx_PySequence_ContainsTF(ptr noundef %6, ptr noundef %8, i32 noundef 3), !dbg !14768
  store i32 %call4, ptr %__pyx_t_2, align 4, !dbg !14769, !tbaa !1984
  %9 = load i32, ptr %__pyx_t_2, align 4, !dbg !14770, !tbaa !1984
  %cmp = icmp slt i32 %9, 0, !dbg !14770
  %lnot6 = xor i1 %cmp, true, !dbg !14770
  %lnot8 = xor i1 %lnot6, true, !dbg !14770
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !14770
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !14770
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !14770
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !14770
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !14772

if.then13:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14773, !tbaa !1899
  store ptr %10, ptr %__pyx_filename, align 8, !dbg !14773, !tbaa !1899
  %11 = load ptr, ptr %__pyx_filename, align 8, !dbg !14773, !tbaa !1899
  store i32 4, ptr %__pyx_lineno, align 4, !dbg !14773, !tbaa !1984
  %12 = load i32, ptr %__pyx_lineno, align 4, !dbg !14773, !tbaa !1984
  store i32 5801, ptr %__pyx_clineno, align 4, !dbg !14773, !tbaa !1984
  %13 = load i32, ptr %__pyx_clineno, align 4, !dbg !14773, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14776

if.end14:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14777, !tbaa !1899
  call void @Py_DECREF(ptr noundef %14), !dbg !14777
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14778, !tbaa !1899
  %15 = load i32, ptr %__pyx_t_2, align 4, !dbg !14779, !tbaa !1984
  %tobool15 = icmp ne i32 %15, 0, !dbg !14779
  br i1 %tobool15, label %if.then16, label %if.end86, !dbg !14781

if.then16:                                        ; preds = %if.end14
  %call17 = call ptr @PyList_New(i64 noundef 1), !dbg !14782
  store ptr %call17, ptr %__pyx_t_1, align 8, !dbg !14784, !tbaa !1899
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14785, !tbaa !1899
  %tobool18 = icmp ne ptr %16, null, !dbg !14785
  %lnot19 = xor i1 %tobool18, true, !dbg !14785
  %lnot21 = xor i1 %lnot19, true, !dbg !14785
  %lnot23 = xor i1 %lnot21, true, !dbg !14785
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !14785
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !14785
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0), !dbg !14785
  %tobool27 = icmp ne i64 %expval26, 0, !dbg !14785
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !14787

if.then28:                                        ; preds = %if.then16
  %17 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14788, !tbaa !1899
  store ptr %17, ptr %__pyx_filename, align 8, !dbg !14788, !tbaa !1899
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !14788, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !14788, !tbaa !1984
  %19 = load i32, ptr %__pyx_lineno, align 4, !dbg !14788, !tbaa !1984
  store i32 5812, ptr %__pyx_clineno, align 4, !dbg !14788, !tbaa !1984
  %20 = load i32, ptr %__pyx_clineno, align 4, !dbg !14788, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14791

if.end29:                                         ; preds = %if.then16
  %21 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14792, !tbaa !1899
  %__pyx_n_s_PickleError = getelementptr inbounds %struct.__pyx_mstate, ptr %21, i32 0, i32 25, !dbg !14792
  %22 = load ptr, ptr %__pyx_n_s_PickleError, align 8, !dbg !14792, !tbaa !14793
  call void @Py_INCREF(ptr noundef %22), !dbg !14792
  %23 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14794, !tbaa !1899
  %24 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14794, !tbaa !1899
  %__pyx_n_s_PickleError30 = getelementptr inbounds %struct.__pyx_mstate, ptr %24, i32 0, i32 25, !dbg !14794
  %25 = load ptr, ptr %__pyx_n_s_PickleError30, align 8, !dbg !14794, !tbaa !14793
  call void @PyList_SET_ITEM(ptr noundef %23, i64 noundef 0, ptr noundef %25), !dbg !14794
  br i1 false, label %if.then31, label %if.end32, !dbg !14796

if.then31:                                        ; preds = %if.end29
  %26 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14797, !tbaa !1899
  store ptr %26, ptr %__pyx_filename, align 8, !dbg !14797, !tbaa !1899
  %27 = load ptr, ptr %__pyx_filename, align 8, !dbg !14797, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !14797, !tbaa !1984
  %28 = load i32, ptr %__pyx_lineno, align 4, !dbg !14797, !tbaa !1984
  store i32 5816, ptr %__pyx_clineno, align 4, !dbg !14797, !tbaa !1984
  %29 = load i32, ptr %__pyx_clineno, align 4, !dbg !14797, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14800

if.end32:                                         ; preds = %if.end29
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14801, !tbaa !1899
  %__pyx_n_s_pickle = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 69, !dbg !14801
  %31 = load ptr, ptr %__pyx_n_s_pickle, align 8, !dbg !14801, !tbaa !14802
  %32 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14803, !tbaa !1899
  %call33 = call ptr @__Pyx_Import(ptr noundef %31, ptr noundef %32, i32 noundef 0), !dbg !14804
  store ptr %call33, ptr %__pyx_t_3, align 8, !dbg !14805, !tbaa !1899
  %33 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14806, !tbaa !1899
  %tobool34 = icmp ne ptr %33, null, !dbg !14806
  %lnot35 = xor i1 %tobool34, true, !dbg !14806
  %lnot37 = xor i1 %lnot35, true, !dbg !14806
  %lnot39 = xor i1 %lnot37, true, !dbg !14806
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !14806
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !14806
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 0), !dbg !14806
  %tobool43 = icmp ne i64 %expval42, 0, !dbg !14806
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !14808

if.then44:                                        ; preds = %if.end32
  %34 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14809, !tbaa !1899
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !14809, !tbaa !1899
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !14809, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !14809, !tbaa !1984
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !14809, !tbaa !1984
  store i32 5817, ptr %__pyx_clineno, align 4, !dbg !14809, !tbaa !1984
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !14809, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14812

if.end45:                                         ; preds = %if.end32
  %38 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14813, !tbaa !1899
  call void @Py_DECREF(ptr noundef %38), !dbg !14813
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14814, !tbaa !1899
  %39 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14815, !tbaa !1899
  %40 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14816, !tbaa !1899
  %__pyx_n_s_PickleError46 = getelementptr inbounds %struct.__pyx_mstate, ptr %40, i32 0, i32 25, !dbg !14816
  %41 = load ptr, ptr %__pyx_n_s_PickleError46, align 8, !dbg !14816, !tbaa !14793
  %call47 = call ptr @__Pyx_ImportFrom(ptr noundef %39, ptr noundef %41), !dbg !14817
  store ptr %call47, ptr %__pyx_t_1, align 8, !dbg !14818, !tbaa !1899
  %42 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14819, !tbaa !1899
  %tobool48 = icmp ne ptr %42, null, !dbg !14819
  %lnot49 = xor i1 %tobool48, true, !dbg !14819
  %lnot51 = xor i1 %lnot49, true, !dbg !14819
  %lnot53 = xor i1 %lnot51, true, !dbg !14819
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !14819
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !14819
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !14819
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !14819
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !14821

if.then58:                                        ; preds = %if.end45
  %43 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14822, !tbaa !1899
  store ptr %43, ptr %__pyx_filename, align 8, !dbg !14822, !tbaa !1899
  %44 = load ptr, ptr %__pyx_filename, align 8, !dbg !14822, !tbaa !1899
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !14822, !tbaa !1984
  %45 = load i32, ptr %__pyx_lineno, align 4, !dbg !14822, !tbaa !1984
  store i32 5820, ptr %__pyx_clineno, align 4, !dbg !14822, !tbaa !1984
  %46 = load i32, ptr %__pyx_clineno, align 4, !dbg !14822, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14825

if.end59:                                         ; preds = %if.end45
  %47 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14826, !tbaa !1899
  call void @Py_INCREF(ptr noundef %47), !dbg !14826
  %48 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14827, !tbaa !1899
  store ptr %48, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !14828, !tbaa !1899
  %49 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14829, !tbaa !1899
  call void @Py_DECREF(ptr noundef %49), !dbg !14829
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14830, !tbaa !1899
  %50 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14831, !tbaa !1899
  call void @Py_DECREF(ptr noundef %50), !dbg !14831
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !14832, !tbaa !1899
  %51 = load i64, ptr %__pyx_v___pyx_checksum.addr, align 8, !dbg !14833, !tbaa !2597
  %call60 = call ptr @__Pyx_PyInt_From_long(i64 noundef %51), !dbg !14834
  store ptr %call60, ptr %__pyx_t_3, align 8, !dbg !14835, !tbaa !1899
  %52 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14836, !tbaa !1899
  %tobool61 = icmp ne ptr %52, null, !dbg !14836
  %lnot62 = xor i1 %tobool61, true, !dbg !14836
  %lnot64 = xor i1 %lnot62, true, !dbg !14836
  %lnot66 = xor i1 %lnot64, true, !dbg !14836
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !14836
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !14836
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 0), !dbg !14836
  %tobool70 = icmp ne i64 %expval69, 0, !dbg !14836
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !14838

if.then71:                                        ; preds = %if.end59
  %53 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14839, !tbaa !1899
  store ptr %53, ptr %__pyx_filename, align 8, !dbg !14839, !tbaa !1899
  %54 = load ptr, ptr %__pyx_filename, align 8, !dbg !14839, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !14839, !tbaa !1984
  %55 = load i32, ptr %__pyx_lineno, align 4, !dbg !14839, !tbaa !1984
  store i32 5834, ptr %__pyx_clineno, align 4, !dbg !14839, !tbaa !1984
  %56 = load i32, ptr %__pyx_clineno, align 4, !dbg !14839, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14842

if.end72:                                         ; preds = %if.end59
  %57 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14843, !tbaa !1899
  %__pyx_kp_s_Incompatible_checksums_0x_x_vs_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %57, i32 0, i32 22, !dbg !14843
  %58 = load ptr, ptr %__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, align 8, !dbg !14843, !tbaa !14844
  %59 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14843, !tbaa !1899
  %call73 = call ptr @PyUnicode_Format(ptr noundef %58, ptr noundef %59), !dbg !14843
  store ptr %call73, ptr %__pyx_t_1, align 8, !dbg !14845, !tbaa !1899
  %60 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14846, !tbaa !1899
  %tobool74 = icmp ne ptr %60, null, !dbg !14846
  %lnot75 = xor i1 %tobool74, true, !dbg !14846
  %lnot77 = xor i1 %lnot75, true, !dbg !14846
  %lnot79 = xor i1 %lnot77, true, !dbg !14846
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !14846
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !14846
  %expval82 = call i64 @llvm.expect.i64(i64 %conv81, i64 0), !dbg !14846
  %tobool83 = icmp ne i64 %expval82, 0, !dbg !14846
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !14848

if.then84:                                        ; preds = %if.end72
  %61 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14849, !tbaa !1899
  store ptr %61, ptr %__pyx_filename, align 8, !dbg !14849, !tbaa !1899
  %62 = load ptr, ptr %__pyx_filename, align 8, !dbg !14849, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !14849, !tbaa !1984
  %63 = load i32, ptr %__pyx_lineno, align 4, !dbg !14849, !tbaa !1984
  store i32 5836, ptr %__pyx_clineno, align 4, !dbg !14849, !tbaa !1984
  %64 = load i32, ptr %__pyx_clineno, align 4, !dbg !14849, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14852

if.end85:                                         ; preds = %if.end72
  %65 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14853, !tbaa !1899
  call void @Py_DECREF(ptr noundef %65), !dbg !14853
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !14854, !tbaa !1899
  %66 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !14855, !tbaa !1899
  %67 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14856, !tbaa !1899
  call void @__Pyx_Raise(ptr noundef %66, ptr noundef %67, ptr noundef null, ptr noundef null), !dbg !14857
  %68 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14858, !tbaa !1899
  call void @Py_DECREF(ptr noundef %68), !dbg !14858
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14859, !tbaa !1899
  %69 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14860, !tbaa !1899
  store ptr %69, ptr %__pyx_filename, align 8, !dbg !14860, !tbaa !1899
  %70 = load ptr, ptr %__pyx_filename, align 8, !dbg !14860, !tbaa !1899
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !14860, !tbaa !1984
  %71 = load i32, ptr %__pyx_lineno, align 4, !dbg !14860, !tbaa !1984
  store i32 5841, ptr %__pyx_clineno, align 4, !dbg !14860, !tbaa !1984
  %72 = load i32, ptr %__pyx_clineno, align 4, !dbg !14860, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14863

if.end86:                                         ; preds = %if.end14
  %73 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14864, !tbaa !1899
  %__pyx_ptype_6Cython_4Plex_3DFA_StateMap = getelementptr inbounds %struct.__pyx_mstate, ptr %73, i32 0, i32 18, !dbg !14864
  %74 = load ptr, ptr %__pyx_ptype_6Cython_4Plex_3DFA_StateMap, align 8, !dbg !14864, !tbaa !2419
  %75 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !14865, !tbaa !1899
  %__pyx_n_s_new = getelementptr inbounds %struct.__pyx_mstate, ptr %75, i32 0, i32 61, !dbg !14865
  %76 = load ptr, ptr %__pyx_n_s_new, align 8, !dbg !14865, !tbaa !14866
  %call87 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %74, ptr noundef %76), !dbg !14867
  store ptr %call87, ptr %__pyx_t_3, align 8, !dbg !14868, !tbaa !1899
  %77 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14869, !tbaa !1899
  %tobool88 = icmp ne ptr %77, null, !dbg !14869
  %lnot89 = xor i1 %tobool88, true, !dbg !14869
  %lnot91 = xor i1 %lnot89, true, !dbg !14869
  %lnot93 = xor i1 %lnot91, true, !dbg !14869
  %lnot.ext94 = zext i1 %lnot93 to i32, !dbg !14869
  %conv95 = sext i32 %lnot.ext94 to i64, !dbg !14869
  %expval96 = call i64 @llvm.expect.i64(i64 %conv95, i64 0), !dbg !14869
  %tobool97 = icmp ne i64 %expval96, 0, !dbg !14869
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !14871

if.then98:                                        ; preds = %if.end86
  %78 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14872, !tbaa !1899
  store ptr %78, ptr %__pyx_filename, align 8, !dbg !14872, !tbaa !1899
  %79 = load ptr, ptr %__pyx_filename, align 8, !dbg !14872, !tbaa !1899
  store i32 7, ptr %__pyx_lineno, align 4, !dbg !14872, !tbaa !1984
  %80 = load i32, ptr %__pyx_lineno, align 4, !dbg !14872, !tbaa !1984
  store i32 5859, ptr %__pyx_clineno, align 4, !dbg !14872, !tbaa !1984
  %81 = load i32, ptr %__pyx_clineno, align 4, !dbg !14872, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14875

if.end99:                                         ; preds = %if.end86
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !14876, !tbaa !1899
  store i32 0, ptr %__pyx_t_5, align 4, !dbg !14877, !tbaa !1984
  %82 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14878, !tbaa !1899
  %call100 = call i32 @Py_IS_TYPE(ptr noundef %82, ptr noundef @PyMethod_Type), !dbg !14878
  %tobool101 = icmp ne i32 %call100, 0, !dbg !14878
  %lnot102 = xor i1 %tobool101, true, !dbg !14878
  %lnot104 = xor i1 %lnot102, true, !dbg !14878
  %lnot.ext105 = zext i1 %lnot104 to i32, !dbg !14878
  %conv106 = sext i32 %lnot.ext105 to i64, !dbg !14878
  %expval107 = call i64 @llvm.expect.i64(i64 %conv106, i64 1), !dbg !14878
  %tobool108 = icmp ne i64 %expval107, 0, !dbg !14878
  br i1 %tobool108, label %if.then109, label %if.end120, !dbg !14879

if.then109:                                       ; preds = %if.end99
  %83 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14880, !tbaa !1899
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %83, i32 0, i32 2, !dbg !14880
  %84 = load ptr, ptr %im_self, align 8, !dbg !14880, !tbaa !6934
  store ptr %84, ptr %__pyx_t_4, align 8, !dbg !14881, !tbaa !1899
  %85 = load ptr, ptr %__pyx_t_4, align 8, !dbg !14882, !tbaa !1899
  %tobool110 = icmp ne ptr %85, null, !dbg !14882
  %lnot111 = xor i1 %tobool110, true, !dbg !14882
  %lnot113 = xor i1 %lnot111, true, !dbg !14882
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !14882
  %conv115 = sext i32 %lnot.ext114 to i64, !dbg !14882
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 1), !dbg !14882
  %tobool117 = icmp ne i64 %expval116, 0, !dbg !14882
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !14883

if.then118:                                       ; preds = %if.then109
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #11, !dbg !14884
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !14719, metadata !DIExpression()), !dbg !14885
  %86 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14886, !tbaa !1899
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %86, i32 0, i32 1, !dbg !14886
  %87 = load ptr, ptr %im_func, align 8, !dbg !14886, !tbaa !6942
  store ptr %87, ptr %function, align 8, !dbg !14885, !tbaa !1899
  %88 = load ptr, ptr %__pyx_t_4, align 8, !dbg !14887, !tbaa !1899
  call void @Py_INCREF(ptr noundef %88), !dbg !14887
  %89 = load ptr, ptr %function, align 8, !dbg !14888, !tbaa !1899
  call void @Py_INCREF(ptr noundef %89), !dbg !14888
  br label %do.body, !dbg !14889

do.body:                                          ; preds = %if.then118
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !14890
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !14724, metadata !DIExpression()), !dbg !14890
  %90 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14890, !tbaa !1899
  store ptr %90, ptr %tmp, align 8, !dbg !14890, !tbaa !1899
  %91 = load ptr, ptr %function, align 8, !dbg !14890, !tbaa !1899
  store ptr %91, ptr %__pyx_t_3, align 8, !dbg !14890, !tbaa !1899
  %92 = load ptr, ptr %tmp, align 8, !dbg !14890, !tbaa !1899
  call void @Py_DECREF(ptr noundef %92), !dbg !14890
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !14889
  br label %do.cond, !dbg !14890

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14890

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %__pyx_t_5, align 4, !dbg !14891, !tbaa !1984
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #11, !dbg !14892
  br label %if.end119, !dbg !14893

if.end119:                                        ; preds = %do.end, %if.then109
  br label %if.end120, !dbg !14894

if.end120:                                        ; preds = %if.end119, %if.end99
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !14895
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !14726, metadata !DIExpression()), !dbg !14896
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !14897
  %93 = load ptr, ptr %__pyx_t_4, align 8, !dbg !14898, !tbaa !1899
  store ptr %93, ptr %arrayinit.begin, align 8, !dbg !14897, !tbaa !1899
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !14897
  %94 = load ptr, ptr %__pyx_v___pyx_type.addr, align 8, !dbg !14899, !tbaa !1899
  store ptr %94, ptr %arrayinit.element, align 8, !dbg !14897, !tbaa !1899
  %95 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14900, !tbaa !1899
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !14900
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !14900
  %96 = load i32, ptr %__pyx_t_5, align 4, !dbg !14900, !tbaa !1984
  %idx.ext = sext i32 %96 to i64, !dbg !14900
  %idx.neg = sub i64 0, %idx.ext, !dbg !14900
  %add.ptr121 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !14900
  %97 = load i32, ptr %__pyx_t_5, align 4, !dbg !14900, !tbaa !1984
  %add = add i32 1, %97, !dbg !14900
  %conv122 = sext i32 %add to i64, !dbg !14900
  %call123 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %95, ptr noundef %add.ptr121, i64 noundef %conv122, ptr noundef null), !dbg !14900
  store ptr %call123, ptr %__pyx_t_1, align 8, !dbg !14901, !tbaa !1899
  %98 = load ptr, ptr %__pyx_t_4, align 8, !dbg !14902, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %98), !dbg !14902
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !14903, !tbaa !1899
  %99 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14904, !tbaa !1899
  %tobool124 = icmp ne ptr %99, null, !dbg !14904
  %lnot125 = xor i1 %tobool124, true, !dbg !14904
  %lnot127 = xor i1 %lnot125, true, !dbg !14904
  %lnot129 = xor i1 %lnot127, true, !dbg !14904
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !14904
  %conv131 = sext i32 %lnot.ext130 to i64, !dbg !14904
  %expval132 = call i64 @llvm.expect.i64(i64 %conv131, i64 0), !dbg !14904
  %tobool133 = icmp ne i64 %expval132, 0, !dbg !14904
  br i1 %tobool133, label %if.then134, label %if.end135, !dbg !14906

if.then134:                                       ; preds = %if.end120
  %100 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14907, !tbaa !1899
  store ptr %100, ptr %__pyx_filename, align 8, !dbg !14907, !tbaa !1899
  %101 = load ptr, ptr %__pyx_filename, align 8, !dbg !14907, !tbaa !1899
  store i32 7, ptr %__pyx_lineno, align 4, !dbg !14907, !tbaa !1984
  %102 = load i32, ptr %__pyx_lineno, align 4, !dbg !14907, !tbaa !1984
  store i32 5879, ptr %__pyx_clineno, align 4, !dbg !14907, !tbaa !1984
  %103 = load i32, ptr %__pyx_clineno, align 4, !dbg !14907, !tbaa !1984
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14910

if.end135:                                        ; preds = %if.end120
  %104 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14911, !tbaa !1899
  call void @Py_DECREF(ptr noundef %104), !dbg !14911
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !14912, !tbaa !1899
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14913
  br label %cleanup, !dbg !14913

cleanup:                                          ; preds = %if.then134, %if.end135
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs) #11, !dbg !14913
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup170 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %105 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14914, !tbaa !1899
  store ptr %105, ptr %__pyx_v___pyx_result, align 8, !dbg !14915, !tbaa !1899
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14916, !tbaa !1899
  %106 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !14917, !tbaa !1899
  %cmp136 = icmp ne ptr %106, @_Py_NoneStruct, !dbg !14918
  %conv137 = zext i1 %cmp136 to i32, !dbg !14918
  store i32 %conv137, ptr %__pyx_t_2, align 4, !dbg !14919, !tbaa !1984
  %107 = load i32, ptr %__pyx_t_2, align 4, !dbg !14920, !tbaa !1984
  %tobool138 = icmp ne i32 %107, 0, !dbg !14920
  br i1 %tobool138, label %if.then139, label %if.end169, !dbg !14922

if.then139:                                       ; preds = %cleanup.cont
  %108 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !14923, !tbaa !1899
  %call140 = call i32 @Py_IS_TYPE(ptr noundef %108, ptr noundef @PyTuple_Type), !dbg !14923
  %tobool141 = icmp ne i32 %call140, 0, !dbg !14923
  %lnot142 = xor i1 %tobool141, true, !dbg !14923
  %lnot144 = xor i1 %lnot142, true, !dbg !14923
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !14923
  %conv146 = sext i32 %lnot.ext145 to i64, !dbg !14923
  %expval147 = call i64 @llvm.expect.i64(i64 %conv146, i64 1), !dbg !14923
  %tobool148 = icmp ne i64 %expval147, 0, !dbg !14923
  br i1 %tobool148, label %if.end155, label %lor.lhs.false, !dbg !14926

lor.lhs.false:                                    ; preds = %if.then139
  %109 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !14927, !tbaa !1899
  %cmp149 = icmp eq ptr %109, @_Py_NoneStruct, !dbg !14928
  br i1 %cmp149, label %if.end155, label %lor.lhs.false151, !dbg !14929

lor.lhs.false151:                                 ; preds = %lor.lhs.false
  %110 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !14930, !tbaa !1899
  %call152 = call i32 @__Pyx_RaiseUnexpectedTypeError(ptr noundef @.str.111, ptr noundef %110), !dbg !14931
  %tobool153 = icmp ne i32 %call152, 0, !dbg !14931
  br i1 %tobool153, label %if.end155, label %if.then154, !dbg !14932

if.then154:                                       ; preds = %lor.lhs.false151
  %111 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14933, !tbaa !1899
  store ptr %111, ptr %__pyx_filename, align 8, !dbg !14933, !tbaa !1899
  %112 = load ptr, ptr %__pyx_filename, align 8, !dbg !14933, !tbaa !1899
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !14933, !tbaa !1984
  %113 = load i32, ptr %__pyx_lineno, align 4, !dbg !14933, !tbaa !1984
  store i32 5903, ptr %__pyx_clineno, align 4, !dbg !14933, !tbaa !1984
  %114 = load i32, ptr %__pyx_clineno, align 4, !dbg !14933, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14936

if.end155:                                        ; preds = %lor.lhs.false151, %lor.lhs.false, %if.then139
  %115 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !14937, !tbaa !1899
  %116 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !14938, !tbaa !1899
  %call156 = call ptr @__pyx_f_6Cython_4Plex_3DFA___pyx_unpickle_StateMap__set_state(ptr noundef %115, ptr noundef %116), !dbg !14939
  store ptr %call156, ptr %__pyx_t_1, align 8, !dbg !14940, !tbaa !1899
  %117 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14941, !tbaa !1899
  %tobool157 = icmp ne ptr %117, null, !dbg !14941
  %lnot158 = xor i1 %tobool157, true, !dbg !14941
  %lnot160 = xor i1 %lnot158, true, !dbg !14941
  %lnot162 = xor i1 %lnot160, true, !dbg !14941
  %lnot.ext163 = zext i1 %lnot162 to i32, !dbg !14941
  %conv164 = sext i32 %lnot.ext163 to i64, !dbg !14941
  %expval165 = call i64 @llvm.expect.i64(i64 %conv164, i64 0), !dbg !14941
  %tobool166 = icmp ne i64 %expval165, 0, !dbg !14941
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14943

if.then167:                                       ; preds = %if.end155
  %118 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !14944, !tbaa !1899
  store ptr %118, ptr %__pyx_filename, align 8, !dbg !14944, !tbaa !1899
  %119 = load ptr, ptr %__pyx_filename, align 8, !dbg !14944, !tbaa !1899
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !14944, !tbaa !1984
  %120 = load i32, ptr %__pyx_lineno, align 4, !dbg !14944, !tbaa !1984
  store i32 5904, ptr %__pyx_clineno, align 4, !dbg !14944, !tbaa !1984
  %121 = load i32, ptr %__pyx_clineno, align 4, !dbg !14944, !tbaa !1984
  br label %__pyx_L1_error, !dbg !14947

if.end168:                                        ; preds = %if.end155
  %122 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14948, !tbaa !1899
  call void @Py_DECREF(ptr noundef %122), !dbg !14948
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !14949, !tbaa !1899
  br label %if.end169, !dbg !14950

if.end169:                                        ; preds = %if.end168, %cleanup.cont
  %123 = load ptr, ptr %__pyx_r, align 8, !dbg !14951, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %123), !dbg !14951
  %124 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !14952, !tbaa !1899
  call void @Py_INCREF(ptr noundef %124), !dbg !14952
  %125 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !14953, !tbaa !1899
  store ptr %125, ptr %__pyx_r, align 8, !dbg !14954, !tbaa !1899
  br label %__pyx_L0, !dbg !14955

__pyx_L1_error:                                   ; preds = %cleanup, %if.then167, %if.then154, %if.then98, %if.end85, %if.then84, %if.then71, %if.then58, %if.then44, %if.then31, %if.then28, %if.then13, %if.then
  tail call void @llvm.dbg.label(metadata !14728), !dbg !14956
  %126 = load ptr, ptr %__pyx_t_1, align 8, !dbg !14957, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %126), !dbg !14957
  %127 = load ptr, ptr %__pyx_t_3, align 8, !dbg !14958, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %127), !dbg !14958
  %128 = load ptr, ptr %__pyx_t_4, align 8, !dbg !14959, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %128), !dbg !14959
  %129 = load i32, ptr %__pyx_clineno, align 4, !dbg !14960, !tbaa !1984
  %130 = load i32, ptr %__pyx_lineno, align 4, !dbg !14961, !tbaa !1984
  %131 = load ptr, ptr %__pyx_filename, align 8, !dbg !14962, !tbaa !1899
  call void @__Pyx_AddTraceback(ptr noundef @.str.158, i32 noundef %129, i32 noundef %130, ptr noundef %131), !dbg !14963
  store ptr null, ptr %__pyx_r, align 8, !dbg !14964, !tbaa !1899
  br label %__pyx_L0, !dbg !14965

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end169
  tail call void @llvm.dbg.label(metadata !14729), !dbg !14966
  %132 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !14967, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %132), !dbg !14967
  %133 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !14968, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %133), !dbg !14968
  %134 = load ptr, ptr %__pyx_r, align 8, !dbg !14969, !tbaa !1899
  store ptr %134, ptr %retval, align 8, !dbg !14970
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup170, !dbg !14970

cleanup170:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_result) #11, !dbg !14971
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_PickleError) #11, !dbg !14971
  %135 = load ptr, ptr %retval, align 8, !dbg !14971
  ret ptr %135, !dbg !14971
}

declare !dbg !14972 i64 @PyLong_AsLong(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyNumber_IntOrLong(ptr noundef %x) #3 !dbg !14973 {
entry:
  %retval = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %m = alloca ptr, align 8
  %name = alloca ptr, align 8
  %res = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !14975, metadata !DIExpression()), !dbg !14979
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #11, !dbg !14980
  tail call void @llvm.dbg.declare(metadata ptr %m, metadata !14976, metadata !DIExpression()), !dbg !14981
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #11, !dbg !14982
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !14977, metadata !DIExpression()), !dbg !14983
  store ptr null, ptr %name, align 8, !dbg !14983, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #11, !dbg !14984
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !14978, metadata !DIExpression()), !dbg !14985
  store ptr null, ptr %res, align 8, !dbg !14985, !tbaa !1899
  %0 = load ptr, ptr %x.addr, align 8, !dbg !14986, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !14986
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 16777216), !dbg !14986
  %tobool = icmp ne i32 %call1, 0, !dbg !14986
  %lnot = xor i1 %tobool, true, !dbg !14986
  %lnot2 = xor i1 %lnot, true, !dbg !14986
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14986
  %conv = sext i32 %lnot.ext to i64, !dbg !14986
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !14986
  %tobool3 = icmp ne i64 %expval, 0, !dbg !14986
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14988

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %x.addr, align 8, !dbg !14989, !tbaa !1899
  call void @Py_INCREF(ptr noundef %1), !dbg !14989
  %2 = load ptr, ptr %x.addr, align 8, !dbg !14989, !tbaa !1899
  store ptr %2, ptr %retval, align 8, !dbg !14990
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14990

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %x.addr, align 8, !dbg !14991, !tbaa !1899
  %call4 = call ptr @Py_TYPE(ptr noundef %3), !dbg !14991
  %tp_as_number = getelementptr inbounds %struct._typeobject, ptr %call4, i32 0, i32 10, !dbg !14992
  %4 = load ptr, ptr %tp_as_number, align 8, !dbg !14992, !tbaa !14993
  store ptr %4, ptr %m, align 8, !dbg !14994, !tbaa !1899
  %5 = load ptr, ptr %m, align 8, !dbg !14995, !tbaa !1899
  %tobool5 = icmp ne ptr %5, null, !dbg !14995
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !14995

land.rhs:                                         ; preds = %if.end
  %6 = load ptr, ptr %m, align 8, !dbg !14995, !tbaa !1899
  %nb_int = getelementptr inbounds %struct.PyNumberMethods, ptr %6, i32 0, i32 16, !dbg !14995
  %7 = load ptr, ptr %nb_int, align 8, !dbg !14995, !tbaa !14997
  %tobool6 = icmp ne ptr %7, null, !dbg !14995
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %8 = phi i1 [ false, %if.end ], [ %tobool6, %land.rhs ], !dbg !14999
  %lnot7 = xor i1 %8, true, !dbg !14995
  %lnot9 = xor i1 %lnot7, true, !dbg !14995
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !14995
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !14995
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1), !dbg !14995
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !14995
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !15000

if.then14:                                        ; preds = %land.end
  store ptr @.str.150, ptr %name, align 8, !dbg !15001, !tbaa !1899
  %9 = load ptr, ptr %m, align 8, !dbg !15003, !tbaa !1899
  %nb_int15 = getelementptr inbounds %struct.PyNumberMethods, ptr %9, i32 0, i32 16, !dbg !15004
  %10 = load ptr, ptr %nb_int15, align 8, !dbg !15004, !tbaa !14997
  %11 = load ptr, ptr %x.addr, align 8, !dbg !15005, !tbaa !1899
  %call16 = call ptr %10(ptr noundef %11), !dbg !15003
  store ptr %call16, ptr %res, align 8, !dbg !15006, !tbaa !1899
  br label %if.end17, !dbg !15007

if.end17:                                         ; preds = %if.then14, %land.end
  %12 = load ptr, ptr %res, align 8, !dbg !15008, !tbaa !1899
  %tobool18 = icmp ne ptr %12, null, !dbg !15008
  %lnot19 = xor i1 %tobool18, true, !dbg !15008
  %lnot21 = xor i1 %lnot19, true, !dbg !15008
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !15008
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !15008
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !15008
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !15008
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !15010

if.then26:                                        ; preds = %if.end17
  %13 = load ptr, ptr %res, align 8, !dbg !15011, !tbaa !1899
  %call27 = call i32 @Py_IS_TYPE(ptr noundef %13, ptr noundef @PyLong_Type), !dbg !15011
  %tobool28 = icmp ne i32 %call27, 0, !dbg !15011
  %lnot29 = xor i1 %tobool28, true, !dbg !15011
  %lnot31 = xor i1 %lnot29, true, !dbg !15011
  %lnot33 = xor i1 %lnot31, true, !dbg !15011
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !15011
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !15011
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 0), !dbg !15011
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !15011
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !15014

if.then38:                                        ; preds = %if.then26
  %14 = load ptr, ptr %res, align 8, !dbg !15015, !tbaa !1899
  %15 = load ptr, ptr %name, align 8, !dbg !15017, !tbaa !1899
  %call39 = call ptr @__Pyx_PyNumber_IntOrLongWrongResultType(ptr noundef %14, ptr noundef %15), !dbg !15018
  store ptr %call39, ptr %retval, align 8, !dbg !15019
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15019

if.end40:                                         ; preds = %if.then26
  br label %if.end45, !dbg !15020

if.else:                                          ; preds = %if.end17
  %call41 = call ptr @PyErr_Occurred(), !dbg !15021
  %tobool42 = icmp ne ptr %call41, null, !dbg !15021
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !15023

if.then43:                                        ; preds = %if.else
  %16 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !15024, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %16, ptr noundef @.str.161), !dbg !15026
  br label %if.end44, !dbg !15027

if.end44:                                         ; preds = %if.then43, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end40
  %17 = load ptr, ptr %res, align 8, !dbg !15028, !tbaa !1899
  store ptr %17, ptr %retval, align 8, !dbg !15029
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15029

cleanup:                                          ; preds = %if.end45, %if.then38, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #11, !dbg !15030
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #11, !dbg !15030
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #11, !dbg !15030
  %18 = load ptr, ptr %retval, align 8, !dbg !15030
  ret ptr %18, !dbg !15030
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyNumber_IntOrLongWrongResultType(ptr noundef %result, ptr noundef %type_name) #0 !dbg !15031 {
entry:
  %retval = alloca ptr, align 8
  %result.addr = alloca ptr, align 8
  %type_name.addr = alloca ptr, align 8
  %result_type_name = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %result, ptr %result.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %result.addr, metadata !15033, metadata !DIExpression()), !dbg !15036
  store ptr %type_name, ptr %type_name.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type_name.addr, metadata !15034, metadata !DIExpression()), !dbg !15037
  call void @llvm.lifetime.start.p0(i64 8, ptr %result_type_name) #11, !dbg !15038
  tail call void @llvm.dbg.declare(metadata ptr %result_type_name, metadata !15035, metadata !DIExpression()), !dbg !15039
  %0 = load ptr, ptr %result.addr, align 8, !dbg !15040, !tbaa !1899
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !15040
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call, i32 0, i32 1, !dbg !15040
  %1 = load ptr, ptr %tp_name, align 8, !dbg !15040, !tbaa !4021
  store ptr %1, ptr %result_type_name, align 8, !dbg !15039, !tbaa !1899
  %2 = load ptr, ptr %result.addr, align 8, !dbg !15041, !tbaa !1899
  %call1 = call ptr @Py_TYPE(ptr noundef %2), !dbg !15041
  %call2 = call i32 @PyType_HasFeature(ptr noundef %call1, i64 noundef 16777216), !dbg !15041
  %tobool = icmp ne i32 %call2, 0, !dbg !15041
  br i1 %tobool, label %if.then, label %if.end6, !dbg !15043

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @PyExc_DeprecationWarning, align 8, !dbg !15044, !tbaa !1899
  %4 = load ptr, ptr %result_type_name, align 8, !dbg !15047, !tbaa !1899
  %call3 = call i32 (ptr, i64, ptr, ...) @PyErr_WarnFormat(ptr noundef %3, i64 noundef 1, ptr noundef @.str.162, ptr noundef %4), !dbg !15048
  %tobool4 = icmp ne i32 %call3, 0, !dbg !15048
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !15049

if.then5:                                         ; preds = %if.then
  %5 = load ptr, ptr %result.addr, align 8, !dbg !15050, !tbaa !1899
  call void @Py_DECREF(ptr noundef %5), !dbg !15050
  store ptr null, ptr %retval, align 8, !dbg !15052
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15052

if.end:                                           ; preds = %if.then
  %6 = load ptr, ptr %result.addr, align 8, !dbg !15053, !tbaa !1899
  store ptr %6, ptr %retval, align 8, !dbg !15054
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15054

if.end6:                                          ; preds = %entry
  %7 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !15055, !tbaa !1899
  %8 = load ptr, ptr %type_name.addr, align 8, !dbg !15056, !tbaa !1899
  %9 = load ptr, ptr %type_name.addr, align 8, !dbg !15057, !tbaa !1899
  %10 = load ptr, ptr %result_type_name, align 8, !dbg !15058, !tbaa !1899
  %call7 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %7, ptr noundef @.str.163, ptr noundef %8, ptr noundef %9, ptr noundef %10), !dbg !15059
  %11 = load ptr, ptr %result.addr, align 8, !dbg !15060, !tbaa !1899
  call void @Py_DECREF(ptr noundef %11), !dbg !15060
  store ptr null, ptr %retval, align 8, !dbg !15061
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15061

cleanup:                                          ; preds = %if.end6, %if.end, %if.then5
  call void @llvm.lifetime.end.p0(i64 8, ptr %result_type_name) #11, !dbg !15062
  %12 = load ptr, ptr %retval, align 8, !dbg !15062
  ret ptr %12, !dbg !15062
}

declare !dbg !15063 i32 @PyErr_WarnFormat(ptr noundef, i64 noundef, ptr noundef, ...) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyInt_From_long(i64 noundef %value) #3 !dbg !15066 {
entry:
  %value.addr = alloca i64, align 8
  %neg_one = alloca i64, align 8
  %const_zero = alloca i64, align 8
  %is_unsigned = alloca i32, align 4
  %one = alloca i32, align 4
  %little = alloca i32, align 4
  %bytes = alloca ptr, align 8
  store i64 %value, ptr %value.addr, align 8, !tbaa !2597
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !15068, metadata !DIExpression()), !dbg !15072
  call void @llvm.lifetime.start.p0(i64 8, ptr %neg_one) #11, !dbg !15073
  tail call void @llvm.dbg.declare(metadata ptr %neg_one, metadata !15069, metadata !DIExpression()), !dbg !15074
  store i64 -1, ptr %neg_one, align 8, !dbg !15074, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_zero) #11, !dbg !15073
  tail call void @llvm.dbg.declare(metadata ptr %const_zero, metadata !15070, metadata !DIExpression()), !dbg !15075
  store i64 0, ptr %const_zero, align 8, !dbg !15075, !tbaa !2597
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #11, !dbg !15076
  tail call void @llvm.dbg.declare(metadata ptr %is_unsigned, metadata !15071, metadata !DIExpression()), !dbg !15077
  store i32 0, ptr %is_unsigned, align 4, !dbg !15077, !tbaa !1984
  %0 = load i64, ptr %value.addr, align 8, !dbg !15078, !tbaa !2597
  %call = call ptr @PyLong_FromLong(i64 noundef %0), !dbg !15083
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #11, !dbg !15084
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_zero) #11, !dbg !15084
  call void @llvm.lifetime.end.p0(i64 8, ptr %neg_one) #11, !dbg !15084
  ret ptr %call, !dbg !15085
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PySequence_ContainsTF(ptr noundef %item, ptr noundef %seq, i32 noundef %eq) #3 !dbg !15086 {
entry:
  %item.addr = alloca ptr, align 8
  %seq.addr = alloca ptr, align 8
  %eq.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store ptr %item, ptr %item.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %item.addr, metadata !15088, metadata !DIExpression()), !dbg !15092
  store ptr %seq, ptr %seq.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %seq.addr, metadata !15089, metadata !DIExpression()), !dbg !15093
  store i32 %eq, ptr %eq.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %eq.addr, metadata !15090, metadata !DIExpression()), !dbg !15094
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !15095
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !15091, metadata !DIExpression()), !dbg !15096
  %0 = load ptr, ptr %seq.addr, align 8, !dbg !15097, !tbaa !1899
  %1 = load ptr, ptr %item.addr, align 8, !dbg !15098, !tbaa !1899
  %call = call i32 @PySequence_Contains(ptr noundef %0, ptr noundef %1), !dbg !15099
  store i32 %call, ptr %result, align 4, !dbg !15096, !tbaa !1984
  %2 = load i32, ptr %result, align 4, !dbg !15100, !tbaa !1984
  %cmp = icmp slt i32 %2, 0, !dbg !15100
  %lnot = xor i1 %cmp, true, !dbg !15100
  %lnot1 = xor i1 %lnot, true, !dbg !15100
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15100
  %conv = sext i32 %lnot.ext to i64, !dbg !15100
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15100
  %tobool = icmp ne i64 %expval, 0, !dbg !15100
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15100

cond.true:                                        ; preds = %entry
  %3 = load i32, ptr %result, align 4, !dbg !15101, !tbaa !1984
  br label %cond.end, !dbg !15100

cond.false:                                       ; preds = %entry
  %4 = load i32, ptr %result, align 4, !dbg !15102, !tbaa !1984
  %5 = load i32, ptr %eq.addr, align 4, !dbg !15103, !tbaa !1984
  %cmp2 = icmp eq i32 %5, 2, !dbg !15104
  %conv3 = zext i1 %cmp2 to i32, !dbg !15104
  %cmp4 = icmp eq i32 %4, %conv3, !dbg !15105
  %conv5 = zext i1 %cmp4 to i32, !dbg !15105
  br label %cond.end, !dbg !15100

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %conv5, %cond.false ], !dbg !15100
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !15106
  ret i32 %cond, !dbg !15107
}

declare !dbg !15108 ptr @PyUnicode_Format(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_Raise(ptr noundef %type, ptr noundef %value, ptr noundef %tb, ptr noundef %cause) #0 !dbg !15109 {
entry:
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %cause.addr = alloca ptr, align 8
  %owned_instance = alloca ptr, align 8
  %instance_class = alloca ptr, align 8
  %is_subclass = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %args = alloca ptr, align 8
  %fixed_cause = alloca ptr, align 8
  %tstate = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !15113, metadata !DIExpression()), !dbg !15138
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !15114, metadata !DIExpression()), !dbg !15139
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !15115, metadata !DIExpression()), !dbg !15140
  store ptr %cause, ptr %cause.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %cause.addr, metadata !15116, metadata !DIExpression()), !dbg !15141
  call void @llvm.lifetime.start.p0(i64 8, ptr %owned_instance) #11, !dbg !15142
  tail call void @llvm.dbg.declare(metadata ptr %owned_instance, metadata !15117, metadata !DIExpression()), !dbg !15143
  store ptr null, ptr %owned_instance, align 8, !dbg !15143, !tbaa !1899
  %0 = load ptr, ptr %tb.addr, align 8, !dbg !15144, !tbaa !1899
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !15146
  br i1 %cmp, label %if.then, label %if.else, !dbg !15147

if.then:                                          ; preds = %entry
  store ptr null, ptr %tb.addr, align 8, !dbg !15148, !tbaa !1899
  br label %if.end3, !dbg !15150

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %tb.addr, align 8, !dbg !15151, !tbaa !1899
  %tobool = icmp ne ptr %1, null, !dbg !15151
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15153

land.lhs.true:                                    ; preds = %if.else
  %2 = load ptr, ptr %tb.addr, align 8, !dbg !15154, !tbaa !1899
  %call = call i32 @Py_IS_TYPE(ptr noundef %2, ptr noundef @PyTraceBack_Type), !dbg !15154
  %tobool1 = icmp ne i32 %call, 0, !dbg !15154
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !15155

if.then2:                                         ; preds = %land.lhs.true
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !15156, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.164), !dbg !15158
  br label %bad, !dbg !15159

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr %value.addr, align 8, !dbg !15160, !tbaa !1899
  %cmp4 = icmp eq ptr %4, @_Py_NoneStruct, !dbg !15162
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !15163

if.then5:                                         ; preds = %if.end3
  store ptr null, ptr %value.addr, align 8, !dbg !15164, !tbaa !1899
  br label %if.end6, !dbg !15165

if.end6:                                          ; preds = %if.then5, %if.end3
  %5 = load ptr, ptr %type.addr, align 8, !dbg !15166, !tbaa !1899
  %call7 = call ptr @Py_TYPE(ptr noundef %5), !dbg !15166
  %call8 = call i32 @PyType_HasFeature(ptr noundef %call7, i64 noundef 1073741824), !dbg !15166
  %tobool9 = icmp ne i32 %call8, 0, !dbg !15166
  br i1 %tobool9, label %if.then10, label %if.else15, !dbg !15167

if.then10:                                        ; preds = %if.end6
  %6 = load ptr, ptr %value.addr, align 8, !dbg !15168, !tbaa !1899
  %tobool11 = icmp ne ptr %6, null, !dbg !15168
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !15171

if.then12:                                        ; preds = %if.then10
  %7 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !15172, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.165), !dbg !15174
  br label %bad, !dbg !15175

if.end13:                                         ; preds = %if.then10
  %8 = load ptr, ptr %type.addr, align 8, !dbg !15176, !tbaa !1899
  store ptr %8, ptr %value.addr, align 8, !dbg !15177, !tbaa !1899
  %9 = load ptr, ptr %value.addr, align 8, !dbg !15178, !tbaa !1899
  %call14 = call ptr @Py_TYPE(ptr noundef %9), !dbg !15178
  store ptr %call14, ptr %type.addr, align 8, !dbg !15179, !tbaa !1899
  br label %if.end81, !dbg !15180

if.else15:                                        ; preds = %if.end6
  %10 = load ptr, ptr %type.addr, align 8, !dbg !15181, !tbaa !1899
  %call16 = call i32 @PyType_Check(ptr noundef %10), !dbg !15181
  %tobool17 = icmp ne i32 %call16, 0, !dbg !15181
  br i1 %tobool17, label %land.lhs.true18, label %if.else79, !dbg !15181

land.lhs.true18:                                  ; preds = %if.else15
  %11 = load ptr, ptr %type.addr, align 8, !dbg !15181, !tbaa !1899
  %call19 = call i32 @PyType_HasFeature(ptr noundef %11, i64 noundef 1073741824), !dbg !15181
  %tobool20 = icmp ne i32 %call19, 0, !dbg !15181
  br i1 %tobool20, label %if.then21, label %if.else79, !dbg !15182

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.lifetime.start.p0(i64 8, ptr %instance_class) #11, !dbg !15183
  tail call void @llvm.dbg.declare(metadata ptr %instance_class, metadata !15118, metadata !DIExpression()), !dbg !15184
  store ptr null, ptr %instance_class, align 8, !dbg !15184, !tbaa !1899
  %12 = load ptr, ptr %value.addr, align 8, !dbg !15185, !tbaa !1899
  %tobool22 = icmp ne ptr %12, null, !dbg !15185
  br i1 %tobool22, label %land.lhs.true23, label %if.end43, !dbg !15186

land.lhs.true23:                                  ; preds = %if.then21
  %13 = load ptr, ptr %value.addr, align 8, !dbg !15187, !tbaa !1899
  %call24 = call ptr @Py_TYPE(ptr noundef %13), !dbg !15187
  %call25 = call i32 @PyType_HasFeature(ptr noundef %call24, i64 noundef 1073741824), !dbg !15187
  %tobool26 = icmp ne i32 %call25, 0, !dbg !15187
  br i1 %tobool26, label %if.then27, label %if.end43, !dbg !15188

if.then27:                                        ; preds = %land.lhs.true23
  %14 = load ptr, ptr %value.addr, align 8, !dbg !15189, !tbaa !1899
  %call28 = call ptr @Py_TYPE(ptr noundef %14), !dbg !15189
  store ptr %call28, ptr %instance_class, align 8, !dbg !15190, !tbaa !1899
  %15 = load ptr, ptr %instance_class, align 8, !dbg !15191, !tbaa !1899
  %16 = load ptr, ptr %type.addr, align 8, !dbg !15192, !tbaa !1899
  %cmp29 = icmp ne ptr %15, %16, !dbg !15193
  br i1 %cmp29, label %if.then30, label %if.end42, !dbg !15194

if.then30:                                        ; preds = %if.then27
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_subclass) #11, !dbg !15195
  tail call void @llvm.dbg.declare(metadata ptr %is_subclass, metadata !15122, metadata !DIExpression()), !dbg !15196
  %17 = load ptr, ptr %instance_class, align 8, !dbg !15197, !tbaa !1899
  %18 = load ptr, ptr %type.addr, align 8, !dbg !15198, !tbaa !1899
  %call31 = call i32 @PyObject_IsSubclass(ptr noundef %17, ptr noundef %18), !dbg !15199
  store i32 %call31, ptr %is_subclass, align 4, !dbg !15196, !tbaa !1984
  %19 = load i32, ptr %is_subclass, align 4, !dbg !15200, !tbaa !1984
  %tobool32 = icmp ne i32 %19, 0, !dbg !15200
  br i1 %tobool32, label %if.else34, label %if.then33, !dbg !15202

if.then33:                                        ; preds = %if.then30
  store ptr null, ptr %instance_class, align 8, !dbg !15203, !tbaa !1899
  br label %if.end41, !dbg !15205

if.else34:                                        ; preds = %if.then30
  %20 = load i32, ptr %is_subclass, align 4, !dbg !15206, !tbaa !1984
  %cmp35 = icmp eq i32 %20, -1, !dbg !15206
  %lnot = xor i1 %cmp35, true, !dbg !15206
  %lnot36 = xor i1 %lnot, true, !dbg !15206
  %lnot.ext = zext i1 %lnot36 to i32, !dbg !15206
  %conv = sext i32 %lnot.ext to i64, !dbg !15206
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15206
  %tobool37 = icmp ne i64 %expval, 0, !dbg !15206
  br i1 %tobool37, label %if.then38, label %if.else39, !dbg !15208

if.then38:                                        ; preds = %if.else34
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15209

if.else39:                                        ; preds = %if.else34
  %21 = load ptr, ptr %instance_class, align 8, !dbg !15211, !tbaa !1899
  store ptr %21, ptr %type.addr, align 8, !dbg !15213, !tbaa !1899
  br label %if.end40

if.end40:                                         ; preds = %if.else39
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15214
  br label %cleanup, !dbg !15214

cleanup:                                          ; preds = %if.then38, %if.end41
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_subclass) #11, !dbg !15214
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup76 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end42, !dbg !15215

if.end42:                                         ; preds = %cleanup.cont, %if.then27
  br label %if.end43, !dbg !15216

if.end43:                                         ; preds = %if.end42, %land.lhs.true23, %if.then21
  %22 = load ptr, ptr %instance_class, align 8, !dbg !15217, !tbaa !1899
  %tobool44 = icmp ne ptr %22, null, !dbg !15217
  br i1 %tobool44, label %if.end75, label %if.then45, !dbg !15218

if.then45:                                        ; preds = %if.end43
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #11, !dbg !15219
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !15127, metadata !DIExpression()), !dbg !15220
  %23 = load ptr, ptr %value.addr, align 8, !dbg !15221, !tbaa !1899
  %tobool46 = icmp ne ptr %23, null, !dbg !15221
  br i1 %tobool46, label %if.else49, label %if.then47, !dbg !15223

if.then47:                                        ; preds = %if.then45
  %call48 = call ptr @PyTuple_New(i64 noundef 0), !dbg !15224
  store ptr %call48, ptr %args, align 8, !dbg !15225, !tbaa !1899
  br label %if.end57, !dbg !15226

if.else49:                                        ; preds = %if.then45
  %24 = load ptr, ptr %value.addr, align 8, !dbg !15227, !tbaa !1899
  %call50 = call ptr @Py_TYPE(ptr noundef %24), !dbg !15227
  %call51 = call i32 @PyType_HasFeature(ptr noundef %call50, i64 noundef 67108864), !dbg !15227
  %tobool52 = icmp ne i32 %call51, 0, !dbg !15227
  br i1 %tobool52, label %if.then53, label %if.else54, !dbg !15229

if.then53:                                        ; preds = %if.else49
  %25 = load ptr, ptr %value.addr, align 8, !dbg !15230, !tbaa !1899
  call void @Py_INCREF(ptr noundef %25), !dbg !15230
  %26 = load ptr, ptr %value.addr, align 8, !dbg !15232, !tbaa !1899
  store ptr %26, ptr %args, align 8, !dbg !15233, !tbaa !1899
  br label %if.end56, !dbg !15234

if.else54:                                        ; preds = %if.else49
  %27 = load ptr, ptr %value.addr, align 8, !dbg !15235, !tbaa !1899
  %call55 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %27), !dbg !15236
  store ptr %call55, ptr %args, align 8, !dbg !15237, !tbaa !1899
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %if.then53
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then47
  %28 = load ptr, ptr %args, align 8, !dbg !15238, !tbaa !1899
  %tobool58 = icmp ne ptr %28, null, !dbg !15238
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !15240

if.then59:                                        ; preds = %if.end57
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup72, !dbg !15241

if.end60:                                         ; preds = %if.end57
  %29 = load ptr, ptr %type.addr, align 8, !dbg !15242, !tbaa !1899
  %30 = load ptr, ptr %args, align 8, !dbg !15243, !tbaa !1899
  %call61 = call ptr @PyObject_Call(ptr noundef %29, ptr noundef %30, ptr noundef null), !dbg !15244
  store ptr %call61, ptr %owned_instance, align 8, !dbg !15245, !tbaa !1899
  %31 = load ptr, ptr %args, align 8, !dbg !15246, !tbaa !1899
  call void @Py_DECREF(ptr noundef %31), !dbg !15246
  %32 = load ptr, ptr %owned_instance, align 8, !dbg !15247, !tbaa !1899
  %tobool62 = icmp ne ptr %32, null, !dbg !15247
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !15249

if.then63:                                        ; preds = %if.end60
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup72, !dbg !15250

if.end64:                                         ; preds = %if.end60
  %33 = load ptr, ptr %owned_instance, align 8, !dbg !15251, !tbaa !1899
  store ptr %33, ptr %value.addr, align 8, !dbg !15252, !tbaa !1899
  %34 = load ptr, ptr %value.addr, align 8, !dbg !15253, !tbaa !1899
  %call65 = call ptr @Py_TYPE(ptr noundef %34), !dbg !15253
  %call66 = call i32 @PyType_HasFeature(ptr noundef %call65, i64 noundef 1073741824), !dbg !15253
  %tobool67 = icmp ne i32 %call66, 0, !dbg !15253
  br i1 %tobool67, label %if.end71, label %if.then68, !dbg !15255

if.then68:                                        ; preds = %if.end64
  %35 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !15256, !tbaa !1899
  %36 = load ptr, ptr %type.addr, align 8, !dbg !15258, !tbaa !1899
  %37 = load ptr, ptr %value.addr, align 8, !dbg !15259, !tbaa !1899
  %call69 = call ptr @Py_TYPE(ptr noundef %37), !dbg !15259
  %call70 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %35, ptr noundef @.str.166, ptr noundef %36, ptr noundef %call69), !dbg !15260
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup72, !dbg !15261

if.end71:                                         ; preds = %if.end64
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15262
  br label %cleanup72, !dbg !15262

cleanup72:                                        ; preds = %if.then68, %if.then63, %if.then59, %if.end71
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #11, !dbg !15262
  %cleanup.dest73 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest73, label %cleanup76 [
    i32 0, label %cleanup.cont74
  ]

cleanup.cont74:                                   ; preds = %cleanup72
  br label %if.end75, !dbg !15263

if.end75:                                         ; preds = %cleanup.cont74, %if.end43
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15264
  br label %cleanup76, !dbg !15264

cleanup76:                                        ; preds = %if.end75, %cleanup72, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %instance_class) #11, !dbg !15264
  %cleanup.dest77 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest77, label %cleanup121 [
    i32 0, label %cleanup.cont78
    i32 2, label %bad
  ]

cleanup.cont78:                                   ; preds = %cleanup76
  br label %if.end80, !dbg !15265

if.else79:                                        ; preds = %land.lhs.true18, %if.else15
  %38 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !15266, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %38, ptr noundef @.str.167), !dbg !15268
  br label %bad, !dbg !15269

if.end80:                                         ; preds = %cleanup.cont78
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end13
  %39 = load ptr, ptr %cause.addr, align 8, !dbg !15270, !tbaa !1899
  %tobool82 = icmp ne ptr %39, null, !dbg !15270
  br i1 %tobool82, label %if.then83, label %if.end111, !dbg !15271

if.then83:                                        ; preds = %if.end81
  call void @llvm.lifetime.start.p0(i64 8, ptr %fixed_cause) #11, !dbg !15272
  tail call void @llvm.dbg.declare(metadata ptr %fixed_cause, metadata !15130, metadata !DIExpression()), !dbg !15273
  %40 = load ptr, ptr %cause.addr, align 8, !dbg !15274, !tbaa !1899
  %cmp84 = icmp eq ptr %40, @_Py_NoneStruct, !dbg !15276
  br i1 %cmp84, label %if.then86, label %if.else87, !dbg !15277

if.then86:                                        ; preds = %if.then83
  store ptr null, ptr %fixed_cause, align 8, !dbg !15278, !tbaa !1899
  br label %if.end107, !dbg !15280

if.else87:                                        ; preds = %if.then83
  %41 = load ptr, ptr %cause.addr, align 8, !dbg !15281, !tbaa !1899
  %call88 = call i32 @PyType_Check(ptr noundef %41), !dbg !15281
  %tobool89 = icmp ne i32 %call88, 0, !dbg !15281
  br i1 %tobool89, label %land.lhs.true90, label %if.else99, !dbg !15281

land.lhs.true90:                                  ; preds = %if.else87
  %42 = load ptr, ptr %cause.addr, align 8, !dbg !15281, !tbaa !1899
  %call91 = call i32 @PyType_HasFeature(ptr noundef %42, i64 noundef 1073741824), !dbg !15281
  %tobool92 = icmp ne i32 %call91, 0, !dbg !15281
  br i1 %tobool92, label %if.then93, label %if.else99, !dbg !15283

if.then93:                                        ; preds = %land.lhs.true90
  %43 = load ptr, ptr %cause.addr, align 8, !dbg !15284, !tbaa !1899
  %call94 = call ptr @PyObject_CallObject(ptr noundef %43, ptr noundef null), !dbg !15286
  store ptr %call94, ptr %fixed_cause, align 8, !dbg !15287, !tbaa !1899
  %44 = load ptr, ptr %fixed_cause, align 8, !dbg !15288, !tbaa !1899
  %cmp95 = icmp eq ptr %44, null, !dbg !15290
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !15291

if.then97:                                        ; preds = %if.then93
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !15292

if.end98:                                         ; preds = %if.then93
  br label %if.end106, !dbg !15293

if.else99:                                        ; preds = %land.lhs.true90, %if.else87
  %45 = load ptr, ptr %cause.addr, align 8, !dbg !15294, !tbaa !1899
  %call100 = call ptr @Py_TYPE(ptr noundef %45), !dbg !15294
  %call101 = call i32 @PyType_HasFeature(ptr noundef %call100, i64 noundef 1073741824), !dbg !15294
  %tobool102 = icmp ne i32 %call101, 0, !dbg !15294
  br i1 %tobool102, label %if.then103, label %if.else104, !dbg !15296

if.then103:                                       ; preds = %if.else99
  %46 = load ptr, ptr %cause.addr, align 8, !dbg !15297, !tbaa !1899
  store ptr %46, ptr %fixed_cause, align 8, !dbg !15299, !tbaa !1899
  %47 = load ptr, ptr %fixed_cause, align 8, !dbg !15300, !tbaa !1899
  call void @Py_INCREF(ptr noundef %47), !dbg !15300
  br label %if.end105, !dbg !15301

if.else104:                                       ; preds = %if.else99
  %48 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !15302, !tbaa !1899
  call void @PyErr_SetString(ptr noundef %48, ptr noundef @.str.168), !dbg !15304
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !15305

if.end105:                                        ; preds = %if.then103
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end98
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then86
  %49 = load ptr, ptr %value.addr, align 8, !dbg !15306, !tbaa !1899
  %50 = load ptr, ptr %fixed_cause, align 8, !dbg !15307, !tbaa !1899
  call void @PyException_SetCause(ptr noundef %49, ptr noundef %50), !dbg !15308
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15309
  br label %cleanup108, !dbg !15309

cleanup108:                                       ; preds = %if.else104, %if.then97, %if.end107
  call void @llvm.lifetime.end.p0(i64 8, ptr %fixed_cause) #11, !dbg !15309
  %cleanup.dest109 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest109, label %cleanup121 [
    i32 0, label %cleanup.cont110
    i32 2, label %bad
  ]

cleanup.cont110:                                  ; preds = %cleanup108
  br label %if.end111, !dbg !15310

if.end111:                                        ; preds = %cleanup.cont110, %if.end81
  %51 = load ptr, ptr %type.addr, align 8, !dbg !15311, !tbaa !1899
  %52 = load ptr, ptr %value.addr, align 8, !dbg !15312, !tbaa !1899
  call void @PyErr_SetObject(ptr noundef %51, ptr noundef %52), !dbg !15313
  %53 = load ptr, ptr %tb.addr, align 8, !dbg !15314, !tbaa !1899
  %tobool112 = icmp ne ptr %53, null, !dbg !15314
  br i1 %tobool112, label %if.then113, label %if.end120, !dbg !15315

if.then113:                                       ; preds = %if.end111
  call void @llvm.lifetime.start.p0(i64 8, ptr %tstate) #11, !dbg !15316
  tail call void @llvm.dbg.declare(metadata ptr %tstate, metadata !15133, metadata !DIExpression()), !dbg !15317
  %call114 = call ptr @_PyThreadState_UncheckedGet(), !dbg !15318
  store ptr %call114, ptr %tstate, align 8, !dbg !15317, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #11, !dbg !15319
  tail call void @llvm.dbg.declare(metadata ptr %tmp_tb, metadata !15136, metadata !DIExpression()), !dbg !15320
  %54 = load ptr, ptr %tstate, align 8, !dbg !15321, !tbaa !1899
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %54, i32 0, i32 17, !dbg !15322
  %55 = load ptr, ptr %curexc_traceback, align 8, !dbg !15322, !tbaa !6075
  store ptr %55, ptr %tmp_tb, align 8, !dbg !15320, !tbaa !1899
  %56 = load ptr, ptr %tb.addr, align 8, !dbg !15323, !tbaa !1899
  %57 = load ptr, ptr %tmp_tb, align 8, !dbg !15325, !tbaa !1899
  %cmp115 = icmp ne ptr %56, %57, !dbg !15326
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !15327

if.then117:                                       ; preds = %if.then113
  %58 = load ptr, ptr %tb.addr, align 8, !dbg !15328, !tbaa !1899
  call void @Py_INCREF(ptr noundef %58), !dbg !15328
  %59 = load ptr, ptr %tb.addr, align 8, !dbg !15330, !tbaa !1899
  %60 = load ptr, ptr %tstate, align 8, !dbg !15331, !tbaa !1899
  %curexc_traceback118 = getelementptr inbounds %struct._ts, ptr %60, i32 0, i32 17, !dbg !15332
  store ptr %59, ptr %curexc_traceback118, align 8, !dbg !15333, !tbaa !6075
  %61 = load ptr, ptr %tmp_tb, align 8, !dbg !15334, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %61), !dbg !15334
  br label %if.end119, !dbg !15335

if.end119:                                        ; preds = %if.then117, %if.then113
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #11, !dbg !15336
  call void @llvm.lifetime.end.p0(i64 8, ptr %tstate) #11, !dbg !15336
  br label %if.end120, !dbg !15337

if.end120:                                        ; preds = %if.end119, %if.end111
  br label %bad, !dbg !15314

bad:                                              ; preds = %if.end120, %cleanup108, %cleanup76, %if.else79, %if.then12, %if.then2
  tail call void @llvm.dbg.label(metadata !15137), !dbg !15338
  %62 = load ptr, ptr %owned_instance, align 8, !dbg !15339, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %62), !dbg !15339
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup121, !dbg !15340

cleanup121:                                       ; preds = %bad, %cleanup108, %cleanup76
  call void @llvm.lifetime.end.p0(i64 8, ptr %owned_instance) #11, !dbg !15341
  ret void, !dbg !15341
}

declare !dbg !15342 i32 @PySequence_Contains(ptr noundef, ptr noundef) #1

declare !dbg !15343 i32 @PyObject_IsSubclass(ptr noundef, ptr noundef) #1

declare !dbg !15344 ptr @PyObject_CallObject(ptr noundef, ptr noundef) #1

declare !dbg !15345 void @PyException_SetCause(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CLineForTraceback(ptr noundef %tstate, i32 noundef %c_line) #0 !dbg !1695 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %use_cline = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  %cython_runtime_dict = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %use_cline_obj = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !1847, metadata !DIExpression()), !dbg !15346
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !1848, metadata !DIExpression()), !dbg !15347
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline) #11, !dbg !15348
  tail call void @llvm.dbg.declare(metadata ptr %use_cline, metadata !1849, metadata !DIExpression()), !dbg !15349
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #11, !dbg !15350
  tail call void @llvm.dbg.declare(metadata ptr %ptype, metadata !1850, metadata !DIExpression()), !dbg !15351
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #11, !dbg !15350
  tail call void @llvm.dbg.declare(metadata ptr %pvalue, metadata !1851, metadata !DIExpression()), !dbg !15352
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #11, !dbg !15350
  tail call void @llvm.dbg.declare(metadata ptr %ptraceback, metadata !1852, metadata !DIExpression()), !dbg !15353
  call void @llvm.lifetime.start.p0(i64 8, ptr %cython_runtime_dict) #11, !dbg !15354
  tail call void @llvm.dbg.declare(metadata ptr %cython_runtime_dict, metadata !1853, metadata !DIExpression()), !dbg !15355
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !15356, !tbaa !1899
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !15357, !tbaa !1899
  %__pyx_cython_runtime = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 2, !dbg !15357
  %2 = load ptr, ptr %__pyx_cython_runtime, align 8, !dbg !15357, !tbaa !2044
  %tobool = icmp ne ptr %2, null, !dbg !15357
  %lnot = xor i1 %tobool, true, !dbg !15357
  %lnot1 = xor i1 %lnot, true, !dbg !15357
  %lnot2 = xor i1 %lnot1, true, !dbg !15357
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15357
  %conv = sext i32 %lnot.ext to i64, !dbg !15357
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15357
  %tobool3 = icmp ne i64 %expval, 0, !dbg !15357
  br i1 %tobool3, label %if.then, label %if.end, !dbg !15359

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !15360, !tbaa !1984
  store i32 %3, ptr %retval, align 4, !dbg !15362
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15362

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %tstate.addr, align 8, !dbg !15363, !tbaa !1899
  call void @__Pyx_ErrFetchInState(ptr noundef %4, ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback), !dbg !15364
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !15365, !tbaa !1899
  %__pyx_cython_runtime4 = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 2, !dbg !15365
  %6 = load ptr, ptr %__pyx_cython_runtime4, align 8, !dbg !15365, !tbaa !2044
  %call = call ptr @_PyObject_GetDictPtr(ptr noundef %6), !dbg !15366
  store ptr %call, ptr %cython_runtime_dict, align 8, !dbg !15367, !tbaa !1899
  %7 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !15368, !tbaa !1899
  %tobool5 = icmp ne ptr %7, null, !dbg !15368
  %lnot6 = xor i1 %tobool5, true, !dbg !15368
  %lnot8 = xor i1 %lnot6, true, !dbg !15368
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !15368
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !15368
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 1), !dbg !15368
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !15368
  br i1 %tobool12, label %if.then13, label %if.else26, !dbg !15369

if.then13:                                        ; preds = %if.end
  %8 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !15370, !tbaa !1899
  %9 = load ptr, ptr %8, align 8, !dbg !15370, !tbaa !1899
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %9, i32 0, i32 2, !dbg !15370
  %10 = load i64, ptr %ma_version_tag, align 8, !dbg !15370, !tbaa !9568
  %11 = load i64, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !dbg !15370, !tbaa !2597
  %cmp = icmp eq i64 %10, %11, !dbg !15370
  %lnot15 = xor i1 %cmp, true, !dbg !15370
  %lnot17 = xor i1 %lnot15, true, !dbg !15370
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !15370
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !15370
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 1), !dbg !15370
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !15370
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !15374

if.then22:                                        ; preds = %if.then13
  %12 = load ptr, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !dbg !15375, !tbaa !1899
  store ptr %12, ptr %use_cline, align 8, !dbg !15375, !tbaa !1899
  br label %if.end25, !dbg !15375

if.else:                                          ; preds = %if.then13
  %13 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !15377, !tbaa !1899
  %14 = load ptr, ptr %13, align 8, !dbg !15377, !tbaa !1899
  %15 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !15377, !tbaa !1899
  %__pyx_n_s_cline_in_traceback = getelementptr inbounds %struct.__pyx_mstate, ptr %15, i32 0, i32 41, !dbg !15377
  %16 = load ptr, ptr %__pyx_n_s_cline_in_traceback, align 8, !dbg !15377, !tbaa !15379
  %call23 = call ptr @__Pyx_PyDict_GetItemStr(ptr noundef %14, ptr noundef %16), !dbg !15377
  store ptr %call23, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !dbg !15377, !tbaa !1899
  store ptr %call23, ptr %use_cline, align 8, !dbg !15377, !tbaa !1899
  %17 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !15377, !tbaa !1899
  %18 = load ptr, ptr %17, align 8, !dbg !15377, !tbaa !1899
  %ma_version_tag24 = getelementptr inbounds %struct.PyDictObject, ptr %18, i32 0, i32 2, !dbg !15377
  %19 = load i64, ptr %ma_version_tag24, align 8, !dbg !15377, !tbaa !9568
  store i64 %19, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !dbg !15377, !tbaa !2597
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then22
  br label %if.end36, !dbg !15380

if.else26:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline_obj) #11, !dbg !15381
  tail call void @llvm.dbg.declare(metadata ptr %use_cline_obj, metadata !1854, metadata !DIExpression()), !dbg !15382
  %20 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !15383, !tbaa !1899
  %__pyx_cython_runtime27 = getelementptr inbounds %struct.__pyx_mstate, ptr %20, i32 0, i32 2, !dbg !15383
  %21 = load ptr, ptr %__pyx_cython_runtime27, align 8, !dbg !15383, !tbaa !2044
  %22 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !15384, !tbaa !1899
  %__pyx_n_s_cline_in_traceback28 = getelementptr inbounds %struct.__pyx_mstate, ptr %22, i32 0, i32 41, !dbg !15384
  %23 = load ptr, ptr %__pyx_n_s_cline_in_traceback28, align 8, !dbg !15384, !tbaa !15379
  %call29 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %21, ptr noundef %23), !dbg !15385
  store ptr %call29, ptr %use_cline_obj, align 8, !dbg !15382, !tbaa !1899
  %24 = load ptr, ptr %use_cline_obj, align 8, !dbg !15386, !tbaa !1899
  %tobool30 = icmp ne ptr %24, null, !dbg !15386
  br i1 %tobool30, label %if.then31, label %if.else34, !dbg !15388

if.then31:                                        ; preds = %if.else26
  %25 = load ptr, ptr %use_cline_obj, align 8, !dbg !15389, !tbaa !1899
  %call32 = call i32 @PyObject_Not(ptr noundef %25), !dbg !15391
  %tobool33 = icmp ne i32 %call32, 0, !dbg !15391
  %26 = zext i1 %tobool33 to i64, !dbg !15391
  %cond = select i1 %tobool33, ptr @_Py_FalseStruct, ptr @_Py_TrueStruct, !dbg !15391
  store ptr %cond, ptr %use_cline, align 8, !dbg !15392, !tbaa !1899
  %27 = load ptr, ptr %use_cline_obj, align 8, !dbg !15393, !tbaa !1899
  call void @Py_DECREF(ptr noundef %27), !dbg !15393
  br label %if.end35, !dbg !15394

if.else34:                                        ; preds = %if.else26
  call void @PyErr_Clear(), !dbg !15395
  store ptr null, ptr %use_cline, align 8, !dbg !15397, !tbaa !1899
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then31
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline_obj) #11, !dbg !15398
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end25
  %28 = load ptr, ptr %use_cline, align 8, !dbg !15399, !tbaa !1899
  %tobool37 = icmp ne ptr %28, null, !dbg !15399
  br i1 %tobool37, label %if.else42, label %if.then38, !dbg !15401

if.then38:                                        ; preds = %if.end36
  store i32 0, ptr %c_line.addr, align 4, !dbg !15402, !tbaa !1984
  %29 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !15404, !tbaa !1899
  %__pyx_cython_runtime39 = getelementptr inbounds %struct.__pyx_mstate, ptr %29, i32 0, i32 2, !dbg !15404
  %30 = load ptr, ptr %__pyx_cython_runtime39, align 8, !dbg !15404, !tbaa !2044
  %31 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !15405, !tbaa !1899
  %__pyx_n_s_cline_in_traceback40 = getelementptr inbounds %struct.__pyx_mstate, ptr %31, i32 0, i32 41, !dbg !15405
  %32 = load ptr, ptr %__pyx_n_s_cline_in_traceback40, align 8, !dbg !15405, !tbaa !15379
  %call41 = call i32 @PyObject_SetAttr(ptr noundef %30, ptr noundef %32, ptr noundef @_Py_FalseStruct), !dbg !15406
  br label %if.end52, !dbg !15407

if.else42:                                        ; preds = %if.end36
  %33 = load ptr, ptr %use_cline, align 8, !dbg !15408, !tbaa !1899
  %cmp43 = icmp eq ptr %33, @_Py_FalseStruct, !dbg !15410
  br i1 %cmp43, label %if.then50, label %lor.lhs.false, !dbg !15411

lor.lhs.false:                                    ; preds = %if.else42
  %34 = load ptr, ptr %use_cline, align 8, !dbg !15412, !tbaa !1899
  %cmp45 = icmp ne ptr %34, @_Py_TrueStruct, !dbg !15413
  br i1 %cmp45, label %land.lhs.true, label %if.end51, !dbg !15414

land.lhs.true:                                    ; preds = %lor.lhs.false
  %35 = load ptr, ptr %use_cline, align 8, !dbg !15415, !tbaa !1899
  %call47 = call i32 @PyObject_Not(ptr noundef %35), !dbg !15416
  %cmp48 = icmp ne i32 %call47, 0, !dbg !15417
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !15418

if.then50:                                        ; preds = %land.lhs.true, %if.else42
  store i32 0, ptr %c_line.addr, align 4, !dbg !15419, !tbaa !1984
  br label %if.end51, !dbg !15421

if.end51:                                         ; preds = %if.then50, %land.lhs.true, %lor.lhs.false
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then38
  %36 = load ptr, ptr %tstate.addr, align 8, !dbg !15422, !tbaa !1899
  %37 = load ptr, ptr %ptype, align 8, !dbg !15423, !tbaa !1899
  %38 = load ptr, ptr %pvalue, align 8, !dbg !15424, !tbaa !1899
  %39 = load ptr, ptr %ptraceback, align 8, !dbg !15425, !tbaa !1899
  call void @__Pyx_ErrRestoreInState(ptr noundef %36, ptr noundef %37, ptr noundef %38, ptr noundef %39), !dbg !15426
  %40 = load i32, ptr %c_line.addr, align 4, !dbg !15427, !tbaa !1984
  store i32 %40, ptr %retval, align 4, !dbg !15428
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15428

cleanup:                                          ; preds = %if.end52, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cython_runtime_dict) #11, !dbg !15429
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #11, !dbg !15429
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #11, !dbg !15429
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #11, !dbg !15429
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline) #11, !dbg !15429
  %41 = load i32, ptr %retval, align 4, !dbg !15429
  ret i32 %41, !dbg !15429
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_find_code_object(i32 noundef %code_line) #0 !dbg !15430 {
entry:
  %retval = alloca ptr, align 8
  %code_line.addr = alloca i32, align 4
  %code_object = alloca ptr, align 8
  %pos = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !15434, metadata !DIExpression()), !dbg !15437
  call void @llvm.lifetime.start.p0(i64 8, ptr %code_object) #11, !dbg !15438
  tail call void @llvm.dbg.declare(metadata ptr %code_object, metadata !15435, metadata !DIExpression()), !dbg !15439
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #11, !dbg !15440
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !15436, metadata !DIExpression()), !dbg !15441
  %0 = load i32, ptr %code_line.addr, align 4, !dbg !15442, !tbaa !1984
  %tobool = icmp ne i32 %0, 0, !dbg !15442
  %lnot = xor i1 %tobool, true, !dbg !15442
  %lnot1 = xor i1 %lnot, true, !dbg !15442
  %lnot2 = xor i1 %lnot1, true, !dbg !15442
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15442
  %conv = sext i32 %lnot.ext to i64, !dbg !15442
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15442
  %tobool3 = icmp ne i64 %expval, 0, !dbg !15442
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !15444

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15445, !tbaa !15446
  %tobool4 = icmp ne ptr %1, null, !dbg !15445
  %lnot5 = xor i1 %tobool4, true, !dbg !15445
  %lnot7 = xor i1 %lnot5, true, !dbg !15445
  %lnot9 = xor i1 %lnot7, true, !dbg !15445
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !15445
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !15445
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !15445
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !15445
  br i1 %tobool13, label %if.then, label %if.end, !dbg !15448

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !15449
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15449

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15451, !tbaa !15446
  %3 = load i32, ptr @__pyx_code_cache, align 8, !dbg !15452, !tbaa !15453
  %4 = load i32, ptr %code_line.addr, align 4, !dbg !15454, !tbaa !1984
  %call = call i32 @__pyx_bisect_code_objects(ptr noundef %2, i32 noundef %3, i32 noundef %4), !dbg !15455
  store i32 %call, ptr %pos, align 4, !dbg !15456, !tbaa !1984
  %5 = load i32, ptr %pos, align 4, !dbg !15457, !tbaa !1984
  %6 = load i32, ptr @__pyx_code_cache, align 8, !dbg !15457, !tbaa !15453
  %cmp = icmp sge i32 %5, %6, !dbg !15457
  %lnot15 = xor i1 %cmp, true, !dbg !15457
  %lnot17 = xor i1 %lnot15, true, !dbg !15457
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !15457
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !15457
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !15457
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !15457
  br i1 %tobool21, label %if.then33, label %lor.lhs.false22, !dbg !15459

lor.lhs.false22:                                  ; preds = %if.end
  %7 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15460, !tbaa !15446
  %8 = load i32, ptr %pos, align 4, !dbg !15460, !tbaa !1984
  %idxprom = sext i32 %8 to i64, !dbg !15460
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %7, i64 %idxprom, !dbg !15460
  %code_line23 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !15460
  %9 = load i32, ptr %code_line23, align 8, !dbg !15460, !tbaa !15461
  %10 = load i32, ptr %code_line.addr, align 4, !dbg !15460, !tbaa !1984
  %cmp24 = icmp ne i32 %9, %10, !dbg !15460
  %lnot26 = xor i1 %cmp24, true, !dbg !15460
  %lnot28 = xor i1 %lnot26, true, !dbg !15460
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !15460
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !15460
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !15460
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !15460
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !15463

if.then33:                                        ; preds = %lor.lhs.false22, %if.end
  store ptr null, ptr %retval, align 8, !dbg !15464
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15464

if.end34:                                         ; preds = %lor.lhs.false22
  %11 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15466, !tbaa !15446
  %12 = load i32, ptr %pos, align 4, !dbg !15467, !tbaa !1984
  %idxprom35 = sext i32 %12 to i64, !dbg !15468
  %arrayidx36 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %11, i64 %idxprom35, !dbg !15468
  %code_object37 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx36, i32 0, i32 0, !dbg !15469
  %13 = load ptr, ptr %code_object37, align 8, !dbg !15469, !tbaa !15470
  store ptr %13, ptr %code_object, align 8, !dbg !15471, !tbaa !1899
  %14 = load ptr, ptr %code_object, align 8, !dbg !15472, !tbaa !1899
  call void @Py_INCREF(ptr noundef %14), !dbg !15472
  %15 = load ptr, ptr %code_object, align 8, !dbg !15473, !tbaa !1899
  store ptr %15, ptr %retval, align 8, !dbg !15474
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15474

cleanup:                                          ; preds = %if.end34, %if.then33, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #11, !dbg !15475
  call void @llvm.lifetime.end.p0(i64 8, ptr %code_object) #11, !dbg !15475
  %16 = load ptr, ptr %retval, align 8, !dbg !15475
  ret ptr %16, !dbg !15475
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_ErrFetchInState(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !15476 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !15480, metadata !DIExpression()), !dbg !15484
  store ptr %type, ptr %type.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !15481, metadata !DIExpression()), !dbg !15485
  store ptr %value, ptr %value.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !15482, metadata !DIExpression()), !dbg !15486
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !15483, metadata !DIExpression()), !dbg !15487
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !15488, !tbaa !1899
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !15489
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !15489, !tbaa !6018
  %2 = load ptr, ptr %type.addr, align 8, !dbg !15490, !tbaa !1899
  store ptr %1, ptr %2, align 8, !dbg !15491, !tbaa !1899
  %3 = load ptr, ptr %tstate.addr, align 8, !dbg !15492, !tbaa !1899
  %curexc_value = getelementptr inbounds %struct._ts, ptr %3, i32 0, i32 16, !dbg !15493
  %4 = load ptr, ptr %curexc_value, align 8, !dbg !15493, !tbaa !6071
  %5 = load ptr, ptr %value.addr, align 8, !dbg !15494, !tbaa !1899
  store ptr %4, ptr %5, align 8, !dbg !15495, !tbaa !1899
  %6 = load ptr, ptr %tstate.addr, align 8, !dbg !15496, !tbaa !1899
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %6, i32 0, i32 17, !dbg !15497
  %7 = load ptr, ptr %curexc_traceback, align 8, !dbg !15497, !tbaa !6075
  %8 = load ptr, ptr %tb.addr, align 8, !dbg !15498, !tbaa !1899
  store ptr %7, ptr %8, align 8, !dbg !15499, !tbaa !1899
  %9 = load ptr, ptr %tstate.addr, align 8, !dbg !15500, !tbaa !1899
  %curexc_type1 = getelementptr inbounds %struct._ts, ptr %9, i32 0, i32 15, !dbg !15501
  store ptr null, ptr %curexc_type1, align 8, !dbg !15502, !tbaa !6018
  %10 = load ptr, ptr %tstate.addr, align 8, !dbg !15503, !tbaa !1899
  %curexc_value2 = getelementptr inbounds %struct._ts, ptr %10, i32 0, i32 16, !dbg !15504
  store ptr null, ptr %curexc_value2, align 8, !dbg !15505, !tbaa !6071
  %11 = load ptr, ptr %tstate.addr, align 8, !dbg !15506, !tbaa !1899
  %curexc_traceback3 = getelementptr inbounds %struct._ts, ptr %11, i32 0, i32 17, !dbg !15507
  store ptr null, ptr %curexc_traceback3, align 8, !dbg !15508, !tbaa !6075
  ret void, !dbg !15509
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 !dbg !15510 {
entry:
  %retval = alloca ptr, align 8
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_funcname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %funcname.addr, metadata !15514, metadata !DIExpression()), !dbg !15521
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !15515, metadata !DIExpression()), !dbg !15522
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %py_line.addr, metadata !15516, metadata !DIExpression()), !dbg !15523
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !15517, metadata !DIExpression()), !dbg !15524
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #11, !dbg !15525
  tail call void @llvm.dbg.declare(metadata ptr %py_code, metadata !15518, metadata !DIExpression()), !dbg !15526
  store ptr null, ptr %py_code, align 8, !dbg !15526, !tbaa !1899
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_funcname) #11, !dbg !15527
  tail call void @llvm.dbg.declare(metadata ptr %py_funcname, metadata !15519, metadata !DIExpression()), !dbg !15528
  store ptr null, ptr %py_funcname, align 8, !dbg !15528, !tbaa !1899
  %0 = load i32, ptr %c_line.addr, align 4, !dbg !15529, !tbaa !1984
  %tobool = icmp ne i32 %0, 0, !dbg !15529
  br i1 %tobool, label %if.then, label %if.else, !dbg !15531

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %funcname.addr, align 8, !dbg !15532, !tbaa !1899
  %2 = load ptr, ptr @__pyx_cfilenm, align 8, !dbg !15534, !tbaa !1899
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !15535, !tbaa !1984
  %call = call ptr (ptr, ...) @PyUnicode_FromFormat(ptr noundef @.str.169, ptr noundef %1, ptr noundef %2, i32 noundef %3), !dbg !15536
  store ptr %call, ptr %py_funcname, align 8, !dbg !15537, !tbaa !1899
  %4 = load ptr, ptr %py_funcname, align 8, !dbg !15538, !tbaa !1899
  %tobool1 = icmp ne ptr %4, null, !dbg !15538
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !15540

if.then2:                                         ; preds = %if.then
  br label %bad, !dbg !15541

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %py_funcname, align 8, !dbg !15542, !tbaa !1899
  %call3 = call ptr @PyUnicode_AsUTF8(ptr noundef %5), !dbg !15543
  store ptr %call3, ptr %funcname.addr, align 8, !dbg !15544, !tbaa !1899
  %6 = load ptr, ptr %funcname.addr, align 8, !dbg !15545, !tbaa !1899
  %tobool4 = icmp ne ptr %6, null, !dbg !15545
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !15547

if.then5:                                         ; preds = %if.end
  br label %bad, !dbg !15548

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !15549

if.else:                                          ; preds = %entry
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end6
  %7 = load ptr, ptr %filename.addr, align 8, !dbg !15550, !tbaa !1899
  %8 = load ptr, ptr %funcname.addr, align 8, !dbg !15551, !tbaa !1899
  %9 = load i32, ptr %py_line.addr, align 4, !dbg !15552, !tbaa !1984
  %call8 = call ptr @PyCode_NewEmpty(ptr noundef %7, ptr noundef %8, i32 noundef %9), !dbg !15553
  store ptr %call8, ptr %py_code, align 8, !dbg !15554, !tbaa !1899
  %10 = load ptr, ptr %py_funcname, align 8, !dbg !15555, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %10), !dbg !15555
  %11 = load ptr, ptr %py_code, align 8, !dbg !15556, !tbaa !1899
  store ptr %11, ptr %retval, align 8, !dbg !15557
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15557

bad:                                              ; preds = %if.then5, %if.then2
  tail call void @llvm.dbg.label(metadata !15520), !dbg !15558
  %12 = load ptr, ptr %py_funcname, align 8, !dbg !15559, !tbaa !1899
  call void @Py_XDECREF(ptr noundef %12), !dbg !15559
  store ptr null, ptr %retval, align 8, !dbg !15560
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15560

cleanup:                                          ; preds = %bad, %if.end7
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_funcname) #11, !dbg !15561
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #11, !dbg !15561
  %13 = load ptr, ptr %retval, align 8, !dbg !15561
  ret ptr %13, !dbg !15561
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_insert_code_object(i32 noundef %code_line, ptr noundef %code_object) #0 !dbg !15562 {
entry:
  %code_line.addr = alloca i32, align 4
  %code_object.addr = alloca ptr, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %entries = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %new_max = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !15566, metadata !DIExpression()), !dbg !15577
  store ptr %code_object, ptr %code_object.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %code_object.addr, metadata !15567, metadata !DIExpression()), !dbg !15578
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #11, !dbg !15579
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !15568, metadata !DIExpression()), !dbg !15580
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #11, !dbg !15579
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !15569, metadata !DIExpression()), !dbg !15581
  call void @llvm.lifetime.start.p0(i64 8, ptr %entries) #11, !dbg !15582
  tail call void @llvm.dbg.declare(metadata ptr %entries, metadata !15570, metadata !DIExpression()), !dbg !15583
  %0 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15584, !tbaa !15446
  store ptr %0, ptr %entries, align 8, !dbg !15583, !tbaa !1899
  %1 = load i32, ptr %code_line.addr, align 4, !dbg !15585, !tbaa !1984
  %tobool = icmp ne i32 %1, 0, !dbg !15585
  %lnot = xor i1 %tobool, true, !dbg !15585
  %lnot1 = xor i1 %lnot, true, !dbg !15585
  %lnot2 = xor i1 %lnot1, true, !dbg !15585
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15585
  %conv = sext i32 %lnot.ext to i64, !dbg !15585
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !15585
  %tobool3 = icmp ne i64 %expval, 0, !dbg !15585
  br i1 %tobool3, label %if.then, label %if.end, !dbg !15587

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !15588

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %entries, align 8, !dbg !15590, !tbaa !1899
  %tobool4 = icmp ne ptr %2, null, !dbg !15590
  %lnot5 = xor i1 %tobool4, true, !dbg !15590
  %lnot7 = xor i1 %lnot5, true, !dbg !15590
  %lnot9 = xor i1 %lnot7, true, !dbg !15590
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !15590
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !15590
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !15590
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !15590
  br i1 %tobool13, label %if.then14, label %if.end28, !dbg !15592

if.then14:                                        ; preds = %if.end
  %call = call ptr @PyMem_Malloc(i64 noundef 1024), !dbg !15593
  store ptr %call, ptr %entries, align 8, !dbg !15595, !tbaa !1899
  %3 = load ptr, ptr %entries, align 8, !dbg !15596, !tbaa !1899
  %tobool15 = icmp ne ptr %3, null, !dbg !15596
  %lnot16 = xor i1 %tobool15, true, !dbg !15596
  %lnot18 = xor i1 %lnot16, true, !dbg !15596
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !15596
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !15596
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !15596
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !15596
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !15598

if.then23:                                        ; preds = %if.then14
  %4 = load ptr, ptr %entries, align 8, !dbg !15599, !tbaa !1899
  store ptr %4, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15601, !tbaa !15446
  store i32 64, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !15602, !tbaa !15603
  store i32 1, ptr @__pyx_code_cache, align 8, !dbg !15604, !tbaa !15453
  %5 = load i32, ptr %code_line.addr, align 4, !dbg !15605, !tbaa !1984
  %6 = load ptr, ptr %entries, align 8, !dbg !15606, !tbaa !1899
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %6, i64 0, !dbg !15606
  %code_line24 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !15607
  store i32 %5, ptr %code_line24, align 8, !dbg !15608, !tbaa !15461
  %7 = load ptr, ptr %code_object.addr, align 8, !dbg !15609, !tbaa !1899
  %8 = load ptr, ptr %entries, align 8, !dbg !15610, !tbaa !1899
  %arrayidx25 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %8, i64 0, !dbg !15610
  %code_object26 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx25, i32 0, i32 0, !dbg !15611
  store ptr %7, ptr %code_object26, align 8, !dbg !15612, !tbaa !15470
  %9 = load ptr, ptr %code_object.addr, align 8, !dbg !15613, !tbaa !1899
  call void @Py_INCREF(ptr noundef %9), !dbg !15613
  br label %if.end27, !dbg !15614

if.end27:                                         ; preds = %if.then23, %if.then14
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !15615

if.end28:                                         ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15616, !tbaa !15446
  %11 = load i32, ptr @__pyx_code_cache, align 8, !dbg !15617, !tbaa !15453
  %12 = load i32, ptr %code_line.addr, align 4, !dbg !15618, !tbaa !1984
  %call29 = call i32 @__pyx_bisect_code_objects(ptr noundef %10, i32 noundef %11, i32 noundef %12), !dbg !15619
  store i32 %call29, ptr %pos, align 4, !dbg !15620, !tbaa !1984
  %13 = load i32, ptr %pos, align 4, !dbg !15621, !tbaa !1984
  %14 = load i32, ptr @__pyx_code_cache, align 8, !dbg !15622, !tbaa !15453
  %cmp = icmp slt i32 %13, %14, !dbg !15623
  br i1 %cmp, label %land.lhs.true, label %if.end49, !dbg !15624

land.lhs.true:                                    ; preds = %if.end28
  %15 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15625, !tbaa !15446
  %16 = load i32, ptr %pos, align 4, !dbg !15625, !tbaa !1984
  %idxprom = sext i32 %16 to i64, !dbg !15625
  %arrayidx31 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %15, i64 %idxprom, !dbg !15625
  %code_line32 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx31, i32 0, i32 1, !dbg !15625
  %17 = load i32, ptr %code_line32, align 8, !dbg !15625, !tbaa !15461
  %18 = load i32, ptr %code_line.addr, align 4, !dbg !15625, !tbaa !1984
  %cmp33 = icmp eq i32 %17, %18, !dbg !15625
  %lnot35 = xor i1 %cmp33, true, !dbg !15625
  %lnot37 = xor i1 %lnot35, true, !dbg !15625
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !15625
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !15625
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0), !dbg !15625
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !15625
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !15626

if.then42:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #11, !dbg !15627
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !15571, metadata !DIExpression()), !dbg !15628
  %19 = load ptr, ptr %entries, align 8, !dbg !15629, !tbaa !1899
  %20 = load i32, ptr %pos, align 4, !dbg !15630, !tbaa !1984
  %idxprom43 = sext i32 %20 to i64, !dbg !15629
  %arrayidx44 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %19, i64 %idxprom43, !dbg !15629
  %code_object45 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx44, i32 0, i32 0, !dbg !15631
  %21 = load ptr, ptr %code_object45, align 8, !dbg !15631, !tbaa !15470
  store ptr %21, ptr %tmp, align 8, !dbg !15628, !tbaa !1899
  %22 = load ptr, ptr %code_object.addr, align 8, !dbg !15632, !tbaa !1899
  %23 = load ptr, ptr %entries, align 8, !dbg !15633, !tbaa !1899
  %24 = load i32, ptr %pos, align 4, !dbg !15634, !tbaa !1984
  %idxprom46 = sext i32 %24 to i64, !dbg !15633
  %arrayidx47 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %23, i64 %idxprom46, !dbg !15633
  %code_object48 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx47, i32 0, i32 0, !dbg !15635
  store ptr %22, ptr %code_object48, align 8, !dbg !15636, !tbaa !15470
  %25 = load ptr, ptr %tmp, align 8, !dbg !15637, !tbaa !1899
  call void @Py_DECREF(ptr noundef %25), !dbg !15637
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #11, !dbg !15638
  br label %cleanup80

if.end49:                                         ; preds = %land.lhs.true, %if.end28
  %26 = load i32, ptr @__pyx_code_cache, align 8, !dbg !15639, !tbaa !15453
  %27 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !15640, !tbaa !15603
  %cmp50 = icmp eq i32 %26, %27, !dbg !15641
  br i1 %cmp50, label %if.then52, label %if.end67, !dbg !15642

if.then52:                                        ; preds = %if.end49
  call void @llvm.lifetime.start.p0(i64 4, ptr %new_max) #11, !dbg !15643
  tail call void @llvm.dbg.declare(metadata ptr %new_max, metadata !15574, metadata !DIExpression()), !dbg !15644
  %28 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !15645, !tbaa !15603
  %add = add i32 %28, 64, !dbg !15646
  store i32 %add, ptr %new_max, align 4, !dbg !15644, !tbaa !1984
  %29 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15647, !tbaa !15446
  %30 = load i32, ptr %new_max, align 4, !dbg !15648, !tbaa !1984
  %conv53 = sext i32 %30 to i64, !dbg !15649
  %mul = mul i64 %conv53, 16, !dbg !15650
  %call54 = call ptr @PyMem_Realloc(ptr noundef %29, i64 noundef %mul), !dbg !15651
  store ptr %call54, ptr %entries, align 8, !dbg !15652, !tbaa !1899
  %31 = load ptr, ptr %entries, align 8, !dbg !15653, !tbaa !1899
  %tobool55 = icmp ne ptr %31, null, !dbg !15653
  %lnot56 = xor i1 %tobool55, true, !dbg !15653
  %lnot58 = xor i1 %lnot56, true, !dbg !15653
  %lnot60 = xor i1 %lnot58, true, !dbg !15653
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !15653
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !15653
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0), !dbg !15653
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !15653
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !15655

if.then65:                                        ; preds = %if.then52
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15656

if.end66:                                         ; preds = %if.then52
  %32 = load ptr, ptr %entries, align 8, !dbg !15658, !tbaa !1899
  store ptr %32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !15659, !tbaa !15446
  %33 = load i32, ptr %new_max, align 4, !dbg !15660, !tbaa !1984
  store i32 %33, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !15661, !tbaa !15603
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15662
  br label %cleanup, !dbg !15662

cleanup:                                          ; preds = %if.end66, %if.then65
  call void @llvm.lifetime.end.p0(i64 4, ptr %new_max) #11, !dbg !15662
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup80 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end67, !dbg !15663

if.end67:                                         ; preds = %cleanup.cont, %if.end49
  %34 = load i32, ptr @__pyx_code_cache, align 8, !dbg !15664, !tbaa !15453
  store i32 %34, ptr %i, align 4, !dbg !15666, !tbaa !1984
  br label %for.cond, !dbg !15667

for.cond:                                         ; preds = %for.inc, %if.end67
  %35 = load i32, ptr %i, align 4, !dbg !15668, !tbaa !1984
  %36 = load i32, ptr %pos, align 4, !dbg !15670, !tbaa !1984
  %cmp68 = icmp sgt i32 %35, %36, !dbg !15671
  br i1 %cmp68, label %for.body, label %for.end, !dbg !15672

for.body:                                         ; preds = %for.cond
  %37 = load ptr, ptr %entries, align 8, !dbg !15673, !tbaa !1899
  %38 = load i32, ptr %i, align 4, !dbg !15675, !tbaa !1984
  %idxprom70 = sext i32 %38 to i64, !dbg !15673
  %arrayidx71 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %37, i64 %idxprom70, !dbg !15673
  %39 = load ptr, ptr %entries, align 8, !dbg !15676, !tbaa !1899
  %40 = load i32, ptr %i, align 4, !dbg !15677, !tbaa !1984
  %sub = sub i32 %40, 1, !dbg !15678
  %idxprom72 = sext i32 %sub to i64, !dbg !15676
  %arrayidx73 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %39, i64 %idxprom72, !dbg !15676
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %arrayidx71, ptr align 8 %arrayidx73, i64 16, i1 false), !dbg !15676, !tbaa.struct !15679
  br label %for.inc, !dbg !15680

for.inc:                                          ; preds = %for.body
  %41 = load i32, ptr %i, align 4, !dbg !15681, !tbaa !1984
  %dec = add i32 %41, -1, !dbg !15681
  store i32 %dec, ptr %i, align 4, !dbg !15681, !tbaa !1984
  br label %for.cond, !dbg !15682, !llvm.loop !15683

for.end:                                          ; preds = %for.cond
  %42 = load i32, ptr %code_line.addr, align 4, !dbg !15685, !tbaa !1984
  %43 = load ptr, ptr %entries, align 8, !dbg !15686, !tbaa !1899
  %44 = load i32, ptr %pos, align 4, !dbg !15687, !tbaa !1984
  %idxprom74 = sext i32 %44 to i64, !dbg !15686
  %arrayidx75 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %43, i64 %idxprom74, !dbg !15686
  %code_line76 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx75, i32 0, i32 1, !dbg !15688
  store i32 %42, ptr %code_line76, align 8, !dbg !15689, !tbaa !15461
  %45 = load ptr, ptr %code_object.addr, align 8, !dbg !15690, !tbaa !1899
  %46 = load ptr, ptr %entries, align 8, !dbg !15691, !tbaa !1899
  %47 = load i32, ptr %pos, align 4, !dbg !15692, !tbaa !1984
  %idxprom77 = sext i32 %47 to i64, !dbg !15691
  %arrayidx78 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %46, i64 %idxprom77, !dbg !15691
  %code_object79 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx78, i32 0, i32 0, !dbg !15693
  store ptr %45, ptr %code_object79, align 8, !dbg !15694, !tbaa !15470
  %48 = load i32, ptr @__pyx_code_cache, align 8, !dbg !15695, !tbaa !15453
  %inc = add i32 %48, 1, !dbg !15695
  store i32 %inc, ptr @__pyx_code_cache, align 8, !dbg !15695, !tbaa !15453
  %49 = load ptr, ptr %code_object.addr, align 8, !dbg !15696, !tbaa !1899
  call void @Py_INCREF(ptr noundef %49), !dbg !15696
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15697
  br label %cleanup80, !dbg !15697

cleanup80:                                        ; preds = %for.end, %cleanup, %if.then42, %if.end27, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %entries) #11, !dbg !15697
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #11, !dbg !15697
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #11, !dbg !15697
  %cleanup.dest83 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest83, label %unreachable [
    i32 0, label %cleanup.cont84
    i32 1, label %cleanup.cont84
  ]

cleanup.cont84:                                   ; preds = %cleanup80, %cleanup80
  ret void, !dbg !15697

unreachable:                                      ; preds = %cleanup80
  unreachable
}

declare !dbg !15698 ptr @PyFrame_New(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !15702 i32 @PyTraceBack_Here(ptr noundef) #1

declare !dbg !15706 i32 @PyObject_Not(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_bisect_code_objects(ptr noundef %entries, i32 noundef %count, i32 noundef %code_line) #0 !dbg !15707 {
entry:
  %retval = alloca i32, align 4
  %entries.addr = alloca ptr, align 8
  %count.addr = alloca i32, align 4
  %code_line.addr = alloca i32, align 4
  %start = alloca i32, align 4
  %mid = alloca i32, align 4
  %end = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %entries, ptr %entries.addr, align 8, !tbaa !1899
  tail call void @llvm.dbg.declare(metadata ptr %entries.addr, metadata !15711, metadata !DIExpression()), !dbg !15717
  store i32 %count, ptr %count.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %count.addr, metadata !15712, metadata !DIExpression()), !dbg !15718
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1984
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !15713, metadata !DIExpression()), !dbg !15719
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #11, !dbg !15720
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !15714, metadata !DIExpression()), !dbg !15721
  store i32 0, ptr %start, align 4, !dbg !15721, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 4, ptr %mid) #11, !dbg !15720
  tail call void @llvm.dbg.declare(metadata ptr %mid, metadata !15715, metadata !DIExpression()), !dbg !15722
  store i32 0, ptr %mid, align 4, !dbg !15722, !tbaa !1984
  call void @llvm.lifetime.start.p0(i64 4, ptr %end) #11, !dbg !15720
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !15716, metadata !DIExpression()), !dbg !15723
  %0 = load i32, ptr %count.addr, align 4, !dbg !15724, !tbaa !1984
  %sub = sub i32 %0, 1, !dbg !15725
  store i32 %sub, ptr %end, align 4, !dbg !15723, !tbaa !1984
  %1 = load i32, ptr %end, align 4, !dbg !15726, !tbaa !1984
  %cmp = icmp sge i32 %1, 0, !dbg !15728
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15729

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, ptr %code_line.addr, align 4, !dbg !15730, !tbaa !1984
  %3 = load ptr, ptr %entries.addr, align 8, !dbg !15731, !tbaa !1899
  %4 = load i32, ptr %end, align 4, !dbg !15732, !tbaa !1984
  %idxprom = sext i32 %4 to i64, !dbg !15731
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %3, i64 %idxprom, !dbg !15731
  %code_line1 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !15733
  %5 = load i32, ptr %code_line1, align 8, !dbg !15733, !tbaa !15461
  %cmp2 = icmp sgt i32 %2, %5, !dbg !15734
  br i1 %cmp2, label %if.then, label %if.end, !dbg !15735

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, ptr %count.addr, align 4, !dbg !15736, !tbaa !1984
  store i32 %6, ptr %retval, align 4, !dbg !15738
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15738

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %while.cond, !dbg !15739

while.cond:                                       ; preds = %if.end18, %if.end
  %7 = load i32, ptr %start, align 4, !dbg !15740, !tbaa !1984
  %8 = load i32, ptr %end, align 4, !dbg !15741, !tbaa !1984
  %cmp3 = icmp slt i32 %7, %8, !dbg !15742
  br i1 %cmp3, label %while.body, label %while.end, !dbg !15739

while.body:                                       ; preds = %while.cond
  %9 = load i32, ptr %start, align 4, !dbg !15743, !tbaa !1984
  %10 = load i32, ptr %end, align 4, !dbg !15745, !tbaa !1984
  %11 = load i32, ptr %start, align 4, !dbg !15746, !tbaa !1984
  %sub4 = sub i32 %10, %11, !dbg !15747
  %div = sdiv i32 %sub4, 2, !dbg !15748
  %add = add i32 %9, %div, !dbg !15749
  store i32 %add, ptr %mid, align 4, !dbg !15750, !tbaa !1984
  %12 = load i32, ptr %code_line.addr, align 4, !dbg !15751, !tbaa !1984
  %13 = load ptr, ptr %entries.addr, align 8, !dbg !15753, !tbaa !1899
  %14 = load i32, ptr %mid, align 4, !dbg !15754, !tbaa !1984
  %idxprom5 = sext i32 %14 to i64, !dbg !15753
  %arrayidx6 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %13, i64 %idxprom5, !dbg !15753
  %code_line7 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx6, i32 0, i32 1, !dbg !15755
  %15 = load i32, ptr %code_line7, align 8, !dbg !15755, !tbaa !15461
  %cmp8 = icmp slt i32 %12, %15, !dbg !15756
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !15757

if.then9:                                         ; preds = %while.body
  %16 = load i32, ptr %mid, align 4, !dbg !15758, !tbaa !1984
  store i32 %16, ptr %end, align 4, !dbg !15760, !tbaa !1984
  br label %if.end18, !dbg !15761

if.else:                                          ; preds = %while.body
  %17 = load i32, ptr %code_line.addr, align 4, !dbg !15762, !tbaa !1984
  %18 = load ptr, ptr %entries.addr, align 8, !dbg !15764, !tbaa !1899
  %19 = load i32, ptr %mid, align 4, !dbg !15765, !tbaa !1984
  %idxprom10 = sext i32 %19 to i64, !dbg !15764
  %arrayidx11 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %18, i64 %idxprom10, !dbg !15764
  %code_line12 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx11, i32 0, i32 1, !dbg !15766
  %20 = load i32, ptr %code_line12, align 8, !dbg !15766, !tbaa !15461
  %cmp13 = icmp sgt i32 %17, %20, !dbg !15767
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !15768

if.then14:                                        ; preds = %if.else
  %21 = load i32, ptr %mid, align 4, !dbg !15769, !tbaa !1984
  %add15 = add i32 %21, 1, !dbg !15771
  store i32 %add15, ptr %start, align 4, !dbg !15772, !tbaa !1984
  br label %if.end17, !dbg !15773

if.else16:                                        ; preds = %if.else
  %22 = load i32, ptr %mid, align 4, !dbg !15774, !tbaa !1984
  store i32 %22, ptr %retval, align 4, !dbg !15776
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15776

if.end17:                                         ; preds = %if.then14
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then9
  br label %while.cond, !dbg !15739, !llvm.loop !15777

while.end:                                        ; preds = %while.cond
  %23 = load i32, ptr %code_line.addr, align 4, !dbg !15779, !tbaa !1984
  %24 = load ptr, ptr %entries.addr, align 8, !dbg !15781, !tbaa !1899
  %25 = load i32, ptr %mid, align 4, !dbg !15782, !tbaa !1984
  %idxprom19 = sext i32 %25 to i64, !dbg !15781
  %arrayidx20 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %24, i64 %idxprom19, !dbg !15781
  %code_line21 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx20, i32 0, i32 1, !dbg !15783
  %26 = load i32, ptr %code_line21, align 8, !dbg !15783, !tbaa !15461
  %cmp22 = icmp sle i32 %23, %26, !dbg !15784
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !15785

if.then23:                                        ; preds = %while.end
  %27 = load i32, ptr %mid, align 4, !dbg !15786, !tbaa !1984
  store i32 %27, ptr %retval, align 4, !dbg !15788
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15788

if.else24:                                        ; preds = %while.end
  %28 = load i32, ptr %mid, align 4, !dbg !15789, !tbaa !1984
  %add25 = add i32 %28, 1, !dbg !15791
  store i32 %add25, ptr %retval, align 4, !dbg !15792
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15792

cleanup:                                          ; preds = %if.else24, %if.then23, %if.else16, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %end) #11, !dbg !15793
  call void @llvm.lifetime.end.p0(i64 4, ptr %mid) #11, !dbg !15793
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #11, !dbg !15793
  %29 = load i32, ptr %retval, align 4, !dbg !15793
  ret i32 %29, !dbg !15793
}

declare !dbg !15794 ptr @PyUnicode_AsUTF8(ptr noundef) #1

declare !dbg !15795 ptr @PyCode_NewEmpty(ptr noundef, ptr noundef, i32 noundef) #1

declare !dbg !15798 ptr @PyMem_Realloc(ptr noundef, i64 noundef) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #10

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #8 = { nounwind allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { nounwind }
attributes #12 = { nounwind willreturn memory(read) }
attributes #13 = { nounwind allocsize(0) }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1875, !1876, !1877, !1878, !1879}
!llvm.ident = !{!1880}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__pyx_module_is_main_Cython__Plex__DFA", scope: !2, file: !21, line: 2600, type: !7, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !26, globals: !674, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src/Cython/Plex/DFA.c", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src", checksumkind: CSK_MD5, checksum: "fc35f476fb2285c4b9f4875d3e14b446")
!4 = !{!5, !12, !20}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 676, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/object.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "059c0d359e891772b7814c88f6fa55ff")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "PYGEN_RETURN", value: 0)
!10 = !DIEnumerator(name: "PYGEN_ERROR", value: -1)
!11 = !DIEnumerator(name: "PYGEN_NEXT", value: 1)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !13, line: 304, baseType: !14, size: 32, elements: !15)
!13 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/unicodeobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "f386b2e1a1c191e8bf459eb4bae7acee")
!14 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!15 = !{!16, !17, !18, !19}
!16 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!17 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!18 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!19 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__Pyx_ImportType_CheckSize_3_0_4", file: !21, line: 2335, baseType: !14, size: 32, elements: !22)
!21 = !DIFile(filename: "Cython/Plex/DFA.c", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src", checksumkind: CSK_MD5, checksum: "fc35f476fb2285c4b9f4875d3e14b446")
!22 = !{!23, !24, !25}
!23 = !DIEnumerator(name: "__Pyx_ImportType_CheckSize_Error_3_0_4", value: 0)
!24 = !DIEnumerator(name: "__Pyx_ImportType_CheckSize_Warn_3_0_4", value: 1)
!25 = !DIEnumerator(name: "__Pyx_ImportType_CheckSize_Ignore_3_0_4", value: 2)
!26 = !{!27, !28, !70, !7, !42, !60, !96, !241, !120, !343, !354, !380, !341, !390, !94, !409, !410, !411, !268, !290, !295, !412, !415, !423, !440, !488, !498, !445, !450, !506, !473, !40, !432, !524, !532, !34, !559, !478, !560, !564, !568, !572, !576, !580, !584, !603, !607, !591, !611, !613, !615, !617, !619, !624, !238, !632}
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !30, line: 18, baseType: !31)
!30 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pytypedefs.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "38482a77e5b3188ef0e82980904fb142")
!31 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !6, line: 100, size: 128, elements: !32)
!32 = !{!33, !41}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !31, file: !6, line: 102, baseType: !34, size: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !35, line: 131, baseType: !36)
!35 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pyport.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "a198b01de4c7067d893cd27dc3108f8a")
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !37, line: 108, baseType: !38)
!37 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !39, line: 194, baseType: !40)
!39 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!40 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !31, file: !6, line: 103, baseType: !42, size: 64, offset: 64)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !30, line: 20, baseType: !44)
!44 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !45, line: 148, size: 3264, elements: !46)
!45 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/object.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "5cecebbdf3585641a3ef3ab354ac3a06")
!46 = !{!47, !53, !57, !58, !59, !64, !65, !71, !76, !95, !97, !150, !181, !193, !199, !200, !201, !203, !205, !237, !239, !240, !249, !250, !255, !256, !258, !260, !271, !282, !301, !302, !303, !305, !307, !308, !310, !315, !320, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !44, file: !45, line: 149, baseType: !48, size: 192)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !6, line: 112, baseType: !49)
!49 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 109, size: 192, elements: !50)
!50 = !{!51, !52}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !49, file: !6, line: 110, baseType: !29, size: 128)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !49, file: !6, line: 111, baseType: !34, size: 64, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !44, file: !45, line: 150, baseType: !54, size: 64, offset: 192)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!56 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !44, file: !45, line: 151, baseType: !34, size: 64, offset: 256)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !44, file: !45, line: 151, baseType: !34, size: 64, offset: 320)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !44, file: !45, line: 155, baseType: !60, size: 64, offset: 384)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !6, line: 213, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{null, !28}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vectorcall_offset", scope: !44, file: !45, line: 156, baseType: !34, size: 64, offset: 448)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !44, file: !45, line: 157, baseType: !66, size: 64, offset: 512)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !6, line: 214, baseType: !67)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DISubroutineType(types: !69)
!69 = !{!28, !28, !70}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !44, file: !45, line: 158, baseType: !72, size: 64, offset: 576)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !6, line: 216, baseType: !73)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DISubroutineType(types: !75)
!75 = !{!7, !28, !70, !28}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_async", scope: !44, file: !45, line: 159, baseType: !77, size: 64, offset: 640)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyAsyncMethods", file: !45, line: 135, baseType: !79)
!79 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 130, size: 256, elements: !80)
!80 = !{!81, !86, !87, !88}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "am_await", scope: !79, file: !45, line: 131, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !6, line: 196, baseType: !83)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DISubroutineType(types: !85)
!85 = !{!28, !28}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "am_aiter", scope: !79, file: !45, line: 132, baseType: !82, size: 64, offset: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "am_anext", scope: !79, file: !45, line: 133, baseType: !82, size: 64, offset: 128)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "am_send", scope: !79, file: !45, line: 134, baseType: !89, size: 64, offset: 192)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "sendfunc", file: !45, line: 128, baseType: !90)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DISubroutineType(types: !92)
!92 = !{!93, !28, !28, !94}
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySendResult", file: !6, line: 680, baseType: !5)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !44, file: !45, line: 161, baseType: !96, size: 64, offset: 704)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !6, line: 218, baseType: !83)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !44, file: !45, line: 165, baseType: !98, size: 64, offset: 768)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !45, line: 106, baseType: !100)
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 61, size: 2304, elements: !101)
!101 = !{!102, !107, !108, !109, !110, !111, !116, !117, !118, !119, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !100, file: !45, line: 66, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !6, line: 197, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!105 = !DISubroutineType(types: !106)
!106 = !{!28, !28, !28}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !100, file: !45, line: 67, baseType: !103, size: 64, offset: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !100, file: !45, line: 68, baseType: !103, size: 64, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !100, file: !45, line: 69, baseType: !103, size: 64, offset: 192)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !100, file: !45, line: 70, baseType: !103, size: 64, offset: 256)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !100, file: !45, line: 71, baseType: !112, size: 64, offset: 320)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !6, line: 198, baseType: !113)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DISubroutineType(types: !115)
!115 = !{!28, !28, !28, !28}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !100, file: !45, line: 72, baseType: !82, size: 64, offset: 384)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !100, file: !45, line: 73, baseType: !82, size: 64, offset: 448)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !100, file: !45, line: 74, baseType: !82, size: 64, offset: 512)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !100, file: !45, line: 75, baseType: !120, size: 64, offset: 576)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !6, line: 199, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DISubroutineType(types: !123)
!123 = !{!7, !28}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !100, file: !45, line: 76, baseType: !82, size: 64, offset: 640)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !100, file: !45, line: 77, baseType: !103, size: 64, offset: 704)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !100, file: !45, line: 78, baseType: !103, size: 64, offset: 768)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !100, file: !45, line: 79, baseType: !103, size: 64, offset: 832)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !100, file: !45, line: 80, baseType: !103, size: 64, offset: 896)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !100, file: !45, line: 81, baseType: !103, size: 64, offset: 960)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !100, file: !45, line: 82, baseType: !82, size: 64, offset: 1024)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !100, file: !45, line: 83, baseType: !27, size: 64, offset: 1088)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !100, file: !45, line: 84, baseType: !82, size: 64, offset: 1152)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !100, file: !45, line: 86, baseType: !103, size: 64, offset: 1216)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !100, file: !45, line: 87, baseType: !103, size: 64, offset: 1280)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !100, file: !45, line: 88, baseType: !103, size: 64, offset: 1344)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !100, file: !45, line: 89, baseType: !103, size: 64, offset: 1408)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !100, file: !45, line: 90, baseType: !112, size: 64, offset: 1472)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !100, file: !45, line: 91, baseType: !103, size: 64, offset: 1536)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !100, file: !45, line: 92, baseType: !103, size: 64, offset: 1600)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !100, file: !45, line: 93, baseType: !103, size: 64, offset: 1664)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !100, file: !45, line: 94, baseType: !103, size: 64, offset: 1728)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !100, file: !45, line: 95, baseType: !103, size: 64, offset: 1792)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !100, file: !45, line: 97, baseType: !103, size: 64, offset: 1856)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !100, file: !45, line: 98, baseType: !103, size: 64, offset: 1920)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !100, file: !45, line: 99, baseType: !103, size: 64, offset: 1984)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !100, file: !45, line: 100, baseType: !103, size: 64, offset: 2048)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !100, file: !45, line: 102, baseType: !82, size: 64, offset: 2112)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_matrix_multiply", scope: !100, file: !45, line: 104, baseType: !103, size: 64, offset: 2176)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_matrix_multiply", scope: !100, file: !45, line: 105, baseType: !103, size: 64, offset: 2240)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !44, file: !45, line: 166, baseType: !151, size: 64, offset: 832)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !45, line: 120, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 108, size: 640, elements: !154)
!154 = !{!155, !160, !161, !166, !167, !168, !173, !174, !179, !180}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !153, file: !45, line: 109, baseType: !156, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !6, line: 200, baseType: !157)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DISubroutineType(types: !159)
!159 = !{!34, !28}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !153, file: !45, line: 110, baseType: !103, size: 64, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !153, file: !45, line: 111, baseType: !162, size: 64, offset: 128)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !6, line: 201, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DISubroutineType(types: !165)
!165 = !{!28, !28, !34}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !153, file: !45, line: 112, baseType: !162, size: 64, offset: 192)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !153, file: !45, line: 113, baseType: !27, size: 64, offset: 256)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !153, file: !45, line: 114, baseType: !169, size: 64, offset: 320)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !6, line: 203, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DISubroutineType(types: !172)
!172 = !{!7, !28, !34, !28}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !153, file: !45, line: 115, baseType: !27, size: 64, offset: 384)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !153, file: !45, line: 116, baseType: !175, size: 64, offset: 448)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !6, line: 207, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DISubroutineType(types: !178)
!178 = !{!7, !28, !28}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !153, file: !45, line: 118, baseType: !103, size: 64, offset: 512)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !153, file: !45, line: 119, baseType: !162, size: 64, offset: 576)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !44, file: !45, line: 167, baseType: !182, size: 64, offset: 896)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !45, line: 126, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 122, size: 192, elements: !185)
!185 = !{!186, !187, !188}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !184, file: !45, line: 123, baseType: !156, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !184, file: !45, line: 124, baseType: !103, size: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !184, file: !45, line: 125, baseType: !189, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !6, line: 205, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!7, !28, !28, !28}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !44, file: !45, line: 171, baseType: !194, size: 64, offset: 960)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !6, line: 219, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!198, !28}
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !35, line: 145, baseType: !34)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !44, file: !45, line: 172, baseType: !112, size: 64, offset: 1024)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !44, file: !45, line: 173, baseType: !96, size: 64, offset: 1088)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !44, file: !45, line: 174, baseType: !202, size: 64, offset: 1152)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !6, line: 215, baseType: !104)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !44, file: !45, line: 175, baseType: !204, size: 64, offset: 1216)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !6, line: 217, baseType: !190)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !44, file: !45, line: 178, baseType: !206, size: 64, offset: 1280)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !45, line: 140, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 137, size: 128, elements: !209)
!209 = !{!210, !232}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !208, file: !45, line: 138, baseType: !211, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !45, line: 54, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DISubroutineType(types: !214)
!214 = !{!7, !28, !215, !7}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !217, line: 33, baseType: !218)
!217 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pybuffer.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "b062a75218ff363c388d03c953e9be96")
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !217, line: 20, size: 640, elements: !219)
!219 = !{!220, !221, !222, !223, !224, !225, !226, !227, !229, !230, !231}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !218, file: !217, line: 21, baseType: !27, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !218, file: !217, line: 22, baseType: !28, size: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !218, file: !217, line: 23, baseType: !34, size: 64, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !218, file: !217, line: 24, baseType: !34, size: 64, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !218, file: !217, line: 26, baseType: !7, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !218, file: !217, line: 27, baseType: !7, size: 32, offset: 288)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !218, file: !217, line: 28, baseType: !70, size: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !218, file: !217, line: 29, baseType: !228, size: 64, offset: 384)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !218, file: !217, line: 30, baseType: !228, size: 64, offset: 448)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !218, file: !217, line: 31, baseType: !228, size: 64, offset: 512)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !218, file: !217, line: 32, baseType: !27, size: 64, offset: 576)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !208, file: !45, line: 139, baseType: !233, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !45, line: 55, baseType: !234)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DISubroutineType(types: !236)
!236 = !{null, !28, !215}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !44, file: !45, line: 181, baseType: !238, size: 64, offset: 1344)
!238 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !44, file: !45, line: 183, baseType: !54, size: 64, offset: 1408)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !44, file: !45, line: 187, baseType: !241, size: 64, offset: 1472)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !6, line: 209, baseType: !242)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DISubroutineType(types: !244)
!244 = !{!7, !28, !245, !27}
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !6, line: 208, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DISubroutineType(types: !248)
!248 = !{!7, !28, !27}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !44, file: !45, line: 190, baseType: !120, size: 64, offset: 1536)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !44, file: !45, line: 194, baseType: !251, size: 64, offset: 1600)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !6, line: 220, baseType: !252)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DISubroutineType(types: !254)
!254 = !{!28, !28, !28, !7}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !44, file: !45, line: 197, baseType: !34, size: 64, offset: 1664)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !44, file: !45, line: 200, baseType: !257, size: 64, offset: 1728)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !6, line: 221, baseType: !83)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !44, file: !45, line: 201, baseType: !259, size: 64, offset: 1792)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !6, line: 222, baseType: !83)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !44, file: !45, line: 204, baseType: !261, size: 64, offset: 1856)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !30, line: 14, baseType: !263)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !264, line: 54, size: 256, elements: !265)
!264 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/methodobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "d16253797aba078267dcb5d0afce23bc")
!265 = !{!266, !267, !269, !270}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !263, file: !264, line: 55, baseType: !54, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !263, file: !264, line: 56, baseType: !268, size: 64, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !264, line: 19, baseType: !104)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !263, file: !264, line: 57, baseType: !7, size: 32, offset: 128)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !263, file: !264, line: 59, baseType: !54, size: 64, offset: 192)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !44, file: !45, line: 205, baseType: !272, size: 64, offset: 1920)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !30, line: 16, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !275, line: 18, size: 320, elements: !276)
!275 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/structmember.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7454eedd17059aa65fa47c9e0f3b5384")
!276 = !{!277, !278, !279, !280, !281}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !274, file: !275, line: 19, baseType: !54, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !274, file: !275, line: 20, baseType: !7, size: 32, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !274, file: !275, line: 21, baseType: !34, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !274, file: !275, line: 22, baseType: !7, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !274, file: !275, line: 23, baseType: !54, size: 64, offset: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !44, file: !45, line: 206, baseType: !283, size: 64, offset: 1984)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !30, line: 15, baseType: !285)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !286, line: 11, size: 320, elements: !287)
!286 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/descrobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "242ee4d5fc45bad34457db881bf071ca")
!287 = !{!288, !289, !294, !299, !300}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !285, file: !286, line: 12, baseType: !54, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !285, file: !286, line: 13, baseType: !290, size: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !286, line: 8, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{!28, !28, !27}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !285, file: !286, line: 14, baseType: !295, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !286, line: 9, baseType: !296)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{!7, !28, !28, !27}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !285, file: !286, line: 15, baseType: !54, size: 64, offset: 192)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !285, file: !286, line: 16, baseType: !27, size: 64, offset: 256)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !44, file: !45, line: 208, baseType: !42, size: 64, offset: 2048)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !44, file: !45, line: 209, baseType: !28, size: 64, offset: 2112)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !44, file: !45, line: 210, baseType: !304, size: 64, offset: 2176)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !6, line: 223, baseType: !113)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !44, file: !45, line: 211, baseType: !306, size: 64, offset: 2240)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !6, line: 224, baseType: !190)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !44, file: !45, line: 212, baseType: !34, size: 64, offset: 2304)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !44, file: !45, line: 213, baseType: !309, size: 64, offset: 2368)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !6, line: 225, baseType: !190)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !44, file: !45, line: 214, baseType: !311, size: 64, offset: 2432)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !6, line: 227, baseType: !312)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{!28, !42, !34}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !44, file: !45, line: 215, baseType: !316, size: 64, offset: 2496)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !6, line: 226, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DISubroutineType(types: !319)
!319 = !{!28, !42, !28, !28}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !44, file: !45, line: 216, baseType: !321, size: 64, offset: 2560)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !6, line: 212, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !27}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !44, file: !45, line: 217, baseType: !120, size: 64, offset: 2624)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !44, file: !45, line: 218, baseType: !28, size: 64, offset: 2688)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !44, file: !45, line: 219, baseType: !28, size: 64, offset: 2752)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !44, file: !45, line: 220, baseType: !28, size: 64, offset: 2816)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !44, file: !45, line: 221, baseType: !28, size: 64, offset: 2880)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !44, file: !45, line: 222, baseType: !28, size: 64, offset: 2944)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !44, file: !45, line: 223, baseType: !60, size: 64, offset: 3008)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !44, file: !45, line: 226, baseType: !14, size: 32, offset: 3072)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !44, file: !45, line: 228, baseType: !60, size: 64, offset: 3136)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vectorcall", scope: !44, file: !45, line: 229, baseType: !335, size: 64, offset: 3200)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "vectorcallfunc", file: !45, line: 57, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!28, !28, !339, !341, !28}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !28)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !342, line: 70, baseType: !238)
!342 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunctionObject", file: !345, line: 14, baseType: !346)
!345 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/methodobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "de162f3f7705d370de4a5b2391985004")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 7, size: 448, elements: !347)
!347 = !{!348, !349, !350, !351, !352, !353}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !346, file: !345, line: 8, baseType: !29, size: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "m_ml", scope: !346, file: !345, line: 9, baseType: !261, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "m_self", scope: !346, file: !345, line: 10, baseType: !28, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "m_module", scope: !346, file: !345, line: 11, baseType: !28, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "m_weakreflist", scope: !346, file: !345, line: 12, baseType: !28, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !346, file: !345, line: 13, baseType: !335, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pyx_CyFunctionObject", file: !21, line: 2440, baseType: !356)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 2406, size: 1536, elements: !357)
!357 = !{!358, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !356, file: !21, line: 2413, baseType: !359, size: 512)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCMethodObject", file: !345, line: 26, baseType: !360)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 23, size: 512, elements: !361)
!361 = !{!362, !363}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !360, file: !345, line: 24, baseType: !344, size: 448)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "mm_class", scope: !360, file: !345, line: 25, baseType: !42, size: 64, offset: 448)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "func_dict", scope: !356, file: !21, line: 2421, baseType: !28, size: 64, offset: 512)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !356, file: !21, line: 2422, baseType: !28, size: 64, offset: 576)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "func_qualname", scope: !356, file: !21, line: 2423, baseType: !28, size: 64, offset: 640)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "func_doc", scope: !356, file: !21, line: 2424, baseType: !28, size: 64, offset: 704)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "func_globals", scope: !356, file: !21, line: 2425, baseType: !28, size: 64, offset: 768)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "func_code", scope: !356, file: !21, line: 2426, baseType: !28, size: 64, offset: 832)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "func_closure", scope: !356, file: !21, line: 2427, baseType: !28, size: 64, offset: 896)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !356, file: !21, line: 2431, baseType: !27, size: 64, offset: 960)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "defaults_pyobjects", scope: !356, file: !21, line: 2432, baseType: !7, size: 32, offset: 1024)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "defaults_size", scope: !356, file: !21, line: 2433, baseType: !341, size: 64, offset: 1088)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !356, file: !21, line: 2434, baseType: !7, size: 32, offset: 1152)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "defaults_tuple", scope: !356, file: !21, line: 2435, baseType: !28, size: 64, offset: 1216)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "defaults_kwdict", scope: !356, file: !21, line: 2436, baseType: !28, size: 64, offset: 1280)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "defaults_getter", scope: !356, file: !21, line: 2437, baseType: !83, size: 64, offset: 1344)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "func_annotations", scope: !356, file: !21, line: 2438, baseType: !28, size: 64, offset: 1408)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "func_is_coroutine", scope: !356, file: !21, line: 2439, baseType: !28, size: 64, offset: 1472)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !382, line: 11, baseType: !383)
!382 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/tupleobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "dc5125d9874a31c3ab3d1fe314ca89bb")
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !382, line: 5, size: 256, elements: !384)
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !383, file: !382, line: 6, baseType: !48, size: 192)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !383, file: !382, line: 10, baseType: !387, size: 64, offset: 192)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !388)
!388 = !{!389}
!389 = !DISubrange(count: 1)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictObject", file: !392, line: 29, baseType: !393)
!392 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/dictobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "ca445c2681ff34d200fbf38fa4280db0")
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !392, line: 11, size: 384, elements: !394)
!394 = !{!395, !396, !397, !401, !405}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !393, file: !392, line: 12, baseType: !29, size: 128)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "ma_used", scope: !393, file: !392, line: 15, baseType: !34, size: 64, offset: 128)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ma_version_tag", scope: !393, file: !392, line: 19, baseType: !398, size: 64, offset: 192)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !399, line: 27, baseType: !400)
!399 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !39, line: 45, baseType: !238)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ma_keys", scope: !393, file: !392, line: 21, baseType: !402, size: 64, offset: 256)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictKeysObject", file: !392, line: 5, baseType: !404)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "_dictkeysobject", file: !45, line: 254, flags: DIFlagFwdDecl)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ma_values", scope: !393, file: !392, line: 28, baseType: !406, size: 64, offset: 320)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictValues", file: !392, line: 6, baseType: !408)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "_dictvalues", file: !392, line: 6, flags: DIFlagFwdDecl)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunctionWithKeywords", file: !264, line: 21, baseType: !113)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{null}
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6Cython_4Plex_8Machines_FastMachine", file: !21, line: 1643, size: 384, elements: !417)
!417 = !{!418, !419, !420, !421, !422}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !416, file: !21, line: 1644, baseType: !29, size: 128)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "initial_states", scope: !416, file: !21, line: 1645, baseType: !28, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "new_state_template", scope: !416, file: !21, line: 1646, baseType: !28, size: 64, offset: 192)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !416, file: !21, line: 1647, baseType: !28, size: 64, offset: 256)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "next_number", scope: !416, file: !21, line: 1648, baseType: !34, size: 64, offset: 320)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6Cython_4Plex_3DFA_StateMap", file: !21, line: 1659, size: 384, elements: !425)
!425 = !{!426, !427, !437, !438, !439}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !424, file: !21, line: 1660, baseType: !29, size: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_vtab", scope: !424, file: !21, line: 1661, baseType: !428, size: 64, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_3DFA_StateMap", file: !21, line: 1807, size: 192, elements: !430)
!430 = !{!431, !435, !436}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "old_to_new", scope: !429, file: !21, line: 1808, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DISubroutineType(types: !434)
!434 = !{!28, !423, !28}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "highest_priority_action", scope: !429, file: !21, line: 1809, baseType: !432, size: 64, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "make_key", scope: !429, file: !21, line: 1810, baseType: !432, size: 64, offset: 128)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "new_machine", scope: !424, file: !21, line: 1662, baseType: !415, size: 64, offset: 192)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "old_to_new_dict", scope: !424, file: !21, line: 1663, baseType: !28, size: 64, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "new_to_old_dict", scope: !424, file: !21, line: 1664, baseType: !28, size: 64, offset: 320)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6Cython_4Plex_8Machines_Node", file: !21, line: 1626, size: 448, elements: !442)
!442 = !{!443, !444, !472, !485, !486, !487}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !441, file: !21, line: 1627, baseType: !29, size: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "transitions", scope: !441, file: !21, line: 1628, baseType: !445, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6Cython_4Plex_11Transitions_TransitionMap", file: !21, line: 1595, size: 320, elements: !447)
!447 = !{!448, !449, !470, !471}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !446, file: !21, line: 1596, baseType: !29, size: 128)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_vtab", scope: !446, file: !21, line: 1597, baseType: !450, size: 64, offset: 128)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_11Transitions_TransitionMap", file: !21, line: 1774, size: 320, elements: !452)
!452 = !{!453, !457, !458, !462, !466}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !451, file: !21, line: 1775, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!28, !445, !28, !28, !7}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "add_set", scope: !451, file: !21, line: 1776, baseType: !454, size: 64, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "iteritems", scope: !451, file: !21, line: 1777, baseType: !459, size: 64, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DISubroutineType(types: !461)
!461 = !{!28, !445, !7}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !451, file: !21, line: 1778, baseType: !463, size: 64, offset: 192)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DISubroutineType(types: !465)
!465 = !{!28, !445, !40}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "get_special", scope: !451, file: !21, line: 1779, baseType: !467, size: 64, offset: 256)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DISubroutineType(types: !469)
!469 = !{!28, !445, !28}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !446, file: !21, line: 1598, baseType: !28, size: 64, offset: 192)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "special", scope: !446, file: !21, line: 1599, baseType: !28, size: 64, offset: 256)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !441, file: !21, line: 1629, baseType: !473, size: 64, offset: 192)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6Cython_4Plex_7Actions_Action", file: !21, line: 1506, size: 192, elements: !475)
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !474, file: !21, line: 1507, baseType: !29, size: 128)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_vtab", scope: !474, file: !21, line: 1508, baseType: !478, size: 64, offset: 128)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_7Actions_Action", file: !21, line: 1677, size: 64, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "perform", scope: !479, file: !21, line: 1678, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{!28, !473, !28, !28}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "epsilon_closure", scope: !441, file: !21, line: 1630, baseType: !28, size: 64, offset: 256)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !441, file: !21, line: 1631, baseType: !34, size: 64, offset: 320)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "action_priority", scope: !441, file: !21, line: 1632, baseType: !7, size: 32, offset: 384)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodObject", file: !490, line: 18, baseType: !491)
!490 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/classobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "f84d2b52de3a2730fbf0010ddbe9b14d")
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !490, line: 12, size: 384, elements: !492)
!492 = !{!493, !494, !495, !496, !497}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !491, file: !490, line: 13, baseType: !29, size: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "im_func", scope: !491, file: !490, line: 14, baseType: !28, size: 64, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "im_self", scope: !491, file: !490, line: 15, baseType: !28, size: 64, offset: 192)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "im_weakreflist", scope: !491, file: !490, line: 16, baseType: !28, size: 64, offset: 256)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !491, file: !490, line: 17, baseType: !335, size: 64, offset: 320)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !500, line: 22, baseType: !501)
!500 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/listobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "fb4fd95f673a2d5fdee5b26f4d68bde2")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 5, size: 320, elements: !502)
!502 = !{!503, !504, !505}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !501, file: !500, line: 6, baseType: !48, size: 192)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !501, file: !500, line: 8, baseType: !94, size: 64, offset: 192)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !501, file: !500, line: 21, baseType: !34, size: 64, offset: 256)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !13, line: 206, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 72, size: 384, elements: !509)
!509 = !{!510, !511, !512, !513, !521}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !508, file: !13, line: 146, baseType: !29, size: 128)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !508, file: !13, line: 147, baseType: !34, size: 64, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !508, file: !13, line: 148, baseType: !198, size: 64, offset: 192)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !508, file: !13, line: 204, baseType: !514, size: 32, offset: 256)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !508, file: !13, line: 149, size: 32, elements: !515)
!515 = !{!516, !517, !518, !519, !520}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !514, file: !13, line: 158, baseType: !14, size: 2, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !514, file: !13, line: 186, baseType: !14, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !514, file: !13, line: 191, baseType: !14, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !514, file: !13, line: 195, baseType: !14, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !514, file: !13, line: 200, baseType: !14, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !508, file: !13, line: 205, baseType: !522, size: 64, offset: 320)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !342, line: 96, baseType: !7)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !13, line: 218, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 211, size: 576, elements: !527)
!527 = !{!528, !529, !530, !531}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !526, file: !13, line: 212, baseType: !507, size: 384)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !526, file: !13, line: 213, baseType: !34, size: 64, offset: 384)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !526, file: !13, line: 215, baseType: !70, size: 64, offset: 448)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !526, file: !13, line: 216, baseType: !34, size: 64, offset: 512)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !13, line: 231, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 223, size: 640, elements: !535)
!535 = !{!536, !537}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !534, file: !13, line: 224, baseType: !525, size: 576)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !534, file: !13, line: 230, baseType: !538, size: 64, offset: 576)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !13, line: 225, size: 64, elements: !539)
!539 = !{!540, !541, !548, !554}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !538, file: !13, line: 226, baseType: !27, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !538, file: !13, line: 227, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !544, line: 104, baseType: !545)
!544 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/unicodeobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "0cca020c29e2c9bcb16b6fcf0d642f7b")
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !399, line: 24, baseType: !546)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !39, line: 38, baseType: !547)
!547 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !538, file: !13, line: 228, baseType: !549, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !544, line: 103, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !399, line: 25, baseType: !552)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !39, line: 40, baseType: !553)
!553 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !538, file: !13, line: 229, baseType: !555, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !544, line: 102, baseType: !557)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !399, line: 26, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !39, line: 42, baseType: !14)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_7Actions_Return", file: !21, line: 1691, size: 64, elements: !562)
!562 = !{!563}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_base", scope: !561, file: !21, line: 1692, baseType: !479, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_7Actions_Call", file: !21, line: 1705, size: 64, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_base", scope: !565, file: !21, line: 1706, baseType: !479, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_7Actions_Method", file: !21, line: 1719, size: 64, elements: !570)
!570 = !{!571}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_base", scope: !569, file: !21, line: 1720, baseType: !479, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_7Actions_Begin", file: !21, line: 1733, size: 64, elements: !574)
!574 = !{!575}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_base", scope: !573, file: !21, line: 1734, baseType: !479, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_7Actions_Ignore", file: !21, line: 1747, size: 64, elements: !578)
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_base", scope: !577, file: !21, line: 1748, baseType: !479, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_7Actions_Text", file: !21, line: 1760, size: 64, elements: !582)
!582 = !{!583}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_base", scope: !581, file: !21, line: 1761, baseType: !479, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_4Plex_8Machines_Machine", file: !21, line: 1792, size: 128, elements: !586)
!586 = !{!587, !599}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !585, file: !21, line: 1793, baseType: !588, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!28, !591, !7}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6Cython_4Plex_8Machines_Machine", file: !21, line: 1610, size: 384, elements: !593)
!593 = !{!594, !595, !596, !597, !598}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !592, file: !21, line: 1611, baseType: !29, size: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_vtab", scope: !592, file: !21, line: 1612, baseType: !584, size: 64, offset: 128)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !592, file: !21, line: 1613, baseType: !28, size: 64, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "initial_states", scope: !592, file: !21, line: 1614, baseType: !28, size: 64, offset: 256)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "next_state_number", scope: !592, file: !21, line: 1615, baseType: !34, size: 64, offset: 320)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "new_initial_state", scope: !585, file: !21, line: 1794, baseType: !600, size: 64, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DISubroutineType(types: !602)
!602 = !{!28, !591, !28, !7}
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCMethod", file: !264, line: 26, baseType: !604)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!28, !28, !42, !339, !341, !28}
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyCFunctionFastWithKeywords", file: !264, line: 23, baseType: !608)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!28, !28, !339, !34, !28}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "sdigit", file: !620, line: 44, baseType: !621)
!620 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/longintrepr.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "8513e3439a1d73970093054a9381adac")
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !622, line: 26, baseType: !623)
!622 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !39, line: 41, baseType: !7)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyLongObject", file: !30, line: 19, baseType: !626)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_longobject", file: !620, line: 82, size: 256, elements: !627)
!627 = !{!628, !629}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !626, file: !620, line: 83, baseType: !48, size: 192)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ob_digit", scope: !626, file: !620, line: 84, baseType: !630, size: 32, offset: 192)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 32, elements: !388)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "digit", file: !620, line: 43, baseType: !557)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_CodeObjectCacheEntry", file: !21, line: 2495, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 2492, size: 128, elements: !635)
!635 = !{!636, !673}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "code_object", scope: !634, file: !21, line: 2493, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCodeObject", file: !30, line: 21, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyCodeObject", file: !640, line: 103, size: 1536, elements: !641)
!640 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/code.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "0b18b017cf6ecc9860048f5ec02e4f52")
!641 = !{!642, !643, !644, !645, !646, !647, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !639, file: !640, line: 103, baseType: !48, size: 192)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "co_consts", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 192)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "co_names", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 256)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "co_exceptiontable", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 320)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "co_flags", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 384)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "co_warmup", scope: !639, file: !640, line: 103, baseType: !648, size: 16, offset: 416)
!648 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "_co_linearray_entry_size", scope: !639, file: !640, line: 103, baseType: !648, size: 16, offset: 432)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "co_argcount", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 448)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "co_posonlyargcount", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 480)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "co_kwonlyargcount", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 512)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "co_stacksize", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 544)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "co_firstlineno", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 576)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "co_nlocalsplus", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 608)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "co_nlocals", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 640)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "co_nplaincellvars", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 672)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "co_ncellvars", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 704)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "co_nfreevars", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 736)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "co_localsplusnames", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "co_localspluskinds", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 832)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "co_filename", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 896)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "co_name", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 960)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "co_qualname", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 1024)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "co_linetable", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 1088)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "co_weakreflist", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 1152)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "_co_code", scope: !639, file: !640, line: 103, baseType: !28, size: 64, offset: 1216)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "_co_linearray", scope: !639, file: !640, line: 103, baseType: !70, size: 64, offset: 1280)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "_co_firsttraceable", scope: !639, file: !640, line: 103, baseType: !7, size: 32, offset: 1344)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "co_extra", scope: !639, file: !640, line: 103, baseType: !27, size: 64, offset: 1408)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "co_code_adaptive", scope: !639, file: !640, line: 103, baseType: !672, size: 8, offset: 1472)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 8, elements: !388)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "code_line", scope: !634, file: !21, line: 2494, baseType: !7, size: 32, offset: 64)
!674 = !{!0, !675, !680, !710, !715, !718, !723, !728, !733, !738, !740, !745, !747, !752, !757, !759, !768, !773, !775, !780, !782, !787, !792, !794, !799, !804, !919, !921, !926, !928, !933, !938, !943, !946, !951, !953, !955, !960, !965, !970, !975, !977, !982, !987, !989, !991, !996, !1001, !1006, !1008, !1013, !1015, !1018, !1020, !1025, !1030, !1032, !1034, !1036, !1038, !1040, !1042, !1044, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1063, !1065, !1070, !1075, !1077, !1082, !1084, !1086, !1091, !1096, !1106, !1109, !1112, !1115, !1120, !1122, !1125, !1128, !1131, !1133, !1136, !1141, !1144, !1149, !1152, !1154, !1156, !1158, !1163, !1165, !1168, !1170, !1172, !1174, !1176, !1178, !1180, !1183, !1186, !1189, !1191, !1194, !1197, !1199, !1202, !1204, !1207, !1209, !1211, !1213, !1215, !1217, !1219, !1221, !1223, !1225, !1227, !1229, !1231, !1233, !1235, !1237, !1242, !1245, !1247, !1249, !1251, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1299, !1302, !1307, !1309, !1314, !1316, !1321, !1323, !1325, !1328, !1333, !1335, !1337, !1342, !1344, !1349, !1352, !1354, !1356, !1361, !1363, !1365, !1367, !1369, !1402, !1404, !1407, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1433, !1435, !1437, !1439, !1442, !1444, !1447, !1449, !1454, !1456, !1461, !1489, !1491, !1493, !1495, !1497, !1499, !1501, !1503, !1508, !1510, !1512, !1514, !1516, !1518, !1520, !1522, !1524, !1526, !1528, !1530, !1535, !1540, !1542, !1544, !1546, !1548, !1550, !1552, !1554, !1556, !1558, !1560, !1562, !1564, !1566, !1568, !1570, !1572, !1577, !1582, !1587, !1592, !1594, !1596, !1598, !1600, !1602, !1604, !1606, !1608, !1610, !1612, !1614, !1616, !1621, !1626, !1629, !1632, !1634, !1636, !1638, !1640, !1645, !1650, !1652, !1654, !1656, !1658, !1660, !1662, !1664, !1666, !1671, !1673, !1678, !1680, !1682, !1684, !1689, !1691, !1693, !1857, !1859, !1866, !1868, !1873}
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6683, type: !677, isLocal: true, isDefinition: true)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 32, elements: !678)
!678 = !{!679}
!679 = !DISubrange(count: 4)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "__pyx_moduledef", scope: !2, file: !21, line: 6679, type: !682, isLocal: true, isDefinition: true)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !683, line: 74, size: 832, elements: !684)
!683 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/moduleobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "daa9b768501fad61bad25a7caf4dc4db")
!684 = !{!685, !696, !697, !698, !699, !700, !707, !708, !709}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !682, file: !683, line: 75, baseType: !686, size: 320)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !683, line: 49, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !683, line: 44, size: 320, elements: !688)
!688 = !{!689, !690, !694, !695}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !687, file: !683, line: 45, baseType: !29, size: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !687, file: !683, line: 46, baseType: !691, size: 64, offset: 128)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!28}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !687, file: !683, line: 47, baseType: !34, size: 64, offset: 192)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !687, file: !683, line: 48, baseType: !28, size: 64, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !682, file: !683, line: 76, baseType: !54, size: 64, offset: 320)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !682, file: !683, line: 77, baseType: !54, size: 64, offset: 384)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !682, file: !683, line: 78, baseType: !34, size: 64, offset: 448)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !682, file: !683, line: 79, baseType: !261, size: 64, offset: 512)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "m_slots", scope: !682, file: !683, line: 80, baseType: !701, size: 64, offset: 576)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Slot", file: !30, line: 13, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Slot", file: !683, line: 60, size: 128, elements: !704)
!704 = !{!705, !706}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !703, file: !683, line: 61, baseType: !7, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !703, file: !683, line: 62, baseType: !27, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !682, file: !683, line: 81, baseType: !241, size: 64, offset: 640)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !682, file: !683, line: 82, baseType: !120, size: 64, offset: 704)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !682, file: !683, line: 83, baseType: !321, size: 64, offset: 768)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "__pyx_k_Python_Lexical_Analyser_Convert", scope: !2, file: !21, line: 2676, type: !712, isLocal: true, isDefinition: true)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 392, elements: !713)
!713 = !{!714}
!714 = !DISubrange(count: 49)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__pyx_methods", scope: !2, file: !21, line: 6287, type: !717, isLocal: true, isDefinition: true)
!717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !388)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__pyx_moduledef_slots", scope: !2, file: !21, line: 6668, type: !720, isLocal: true, isDefinition: true)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 384, elements: !721)
!721 = !{!722}
!722 = !DISubrange(count: 3)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6794, type: !725, isLocal: true, isDefinition: true)
!725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 40, elements: !726)
!726 = !{!727}
!727 = !DISubrange(count: 5)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6805, type: !730, isLocal: true, isDefinition: true)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 56, elements: !731)
!731 = !{!732}
!732 = !DISubrange(count: 7)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6805, type: !735, isLocal: true, isDefinition: true)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 88, elements: !736)
!736 = !{!737}
!737 = !DISubrange(count: 11)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6806, type: !730, isLocal: true, isDefinition: true)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6806, type: !742, isLocal: true, isDefinition: true)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 72, elements: !743)
!743 = !{!744}
!744 = !DISubrange(count: 9)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6807, type: !730, isLocal: true, isDefinition: true)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6807, type: !749, isLocal: true, isDefinition: true)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 96, elements: !750)
!750 = !{!751}
!751 = !DISubrange(count: 12)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6808, type: !754, isLocal: true, isDefinition: true)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 216, elements: !755)
!755 = !{!756}
!756 = !DISubrange(count: 27)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6808, type: !742, isLocal: true, isDefinition: true)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "main_interpreter_id", scope: !761, file: !21, line: 6742, type: !766, isLocal: true, isDefinition: true)
!761 = distinct !DISubprogram(name: "__Pyx_check_single_interpreter", scope: !21, file: !21, line: 6740, type: !762, scopeLine: 6740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !764)
!762 = !DISubroutineType(types: !763)
!763 = !{!7}
!764 = !{!765}
!765 = !DILocalVariable(name: "current_id", scope: !761, file: !21, line: 6743, type: !766)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !622, line: 27, baseType: !767)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !39, line: 44, baseType: !40)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6758, type: !770, isLocal: true, isDefinition: true)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 760, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 95)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__pyx_m", scope: !2, file: !21, line: 1446, type: !28, isLocal: true, isDefinition: true)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6834, type: !777, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 608, elements: !778)
!778 = !{!779}
!779 = !DISubrange(count: 76)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6864, type: !742, isLocal: true, isDefinition: true)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6866, type: !784, isLocal: true, isDefinition: true)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 120, elements: !785)
!785 = !{!786}
!786 = !DISubrange(count: 15)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6868, type: !789, isLocal: true, isDefinition: true)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 104, elements: !790)
!790 = !{!791}
!791 = !DISubrange(count: 13)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6884, type: !672, isLocal: true, isDefinition: true)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6922, type: !796, isLocal: true, isDefinition: true)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 128, elements: !797)
!797 = !{!798}
!798 = !DISubrange(count: 16)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7091, type: !801, isLocal: true, isDefinition: true)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 168, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 21)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__pyx_mstate_global", scope: !2, file: !21, line: 2853, type: !806, isLocal: true, isDefinition: true)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pyx_mstate", file: !21, line: 2830, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 2690, size: 6976, elements: !809)
!809 = !{!810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_d", scope: !808, file: !21, line: 2691, baseType: !28, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_b", scope: !808, file: !21, line: 2692, baseType: !28, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_cython_runtime", scope: !808, file: !21, line: 2693, baseType: !28, size: 64, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_empty_tuple", scope: !808, file: !21, line: 2694, baseType: !28, size: 64, offset: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_empty_bytes", scope: !808, file: !21, line: 2695, baseType: !28, size: 64, offset: 256)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_empty_unicode", scope: !808, file: !21, line: 2696, baseType: !28, size: 64, offset: 320)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_CyFunctionType", scope: !808, file: !21, line: 2698, baseType: !42, size: 64, offset: 384)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_7Actions_Action", scope: !808, file: !21, line: 2721, baseType: !42, size: 64, offset: 448)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_7Actions_Return", scope: !808, file: !21, line: 2722, baseType: !42, size: 64, offset: 512)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_7Actions_Call", scope: !808, file: !21, line: 2723, baseType: !42, size: 64, offset: 576)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_7Actions_Method", scope: !808, file: !21, line: 2724, baseType: !42, size: 64, offset: 640)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_7Actions_Begin", scope: !808, file: !21, line: 2725, baseType: !42, size: 64, offset: 704)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_7Actions_Ignore", scope: !808, file: !21, line: 2726, baseType: !42, size: 64, offset: 768)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_7Actions_Text", scope: !808, file: !21, line: 2727, baseType: !42, size: 64, offset: 832)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_11Transitions_TransitionMap", scope: !808, file: !21, line: 2730, baseType: !42, size: 64, offset: 896)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_8Machines_Machine", scope: !808, file: !21, line: 2733, baseType: !42, size: 64, offset: 960)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_8Machines_Node", scope: !808, file: !21, line: 2734, baseType: !42, size: 64, offset: 1024)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_8Machines_FastMachine", scope: !808, file: !21, line: 2735, baseType: !42, size: 64, offset: 1088)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_4Plex_3DFA_StateMap", scope: !808, file: !21, line: 2739, baseType: !42, size: 64, offset: 1152)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_", scope: !808, file: !21, line: 2740, baseType: !28, size: 64, offset: 1216)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_Cython_Plex_DFA", scope: !808, file: !21, line: 2741, baseType: !28, size: 64, offset: 1280)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_s_Cython_Plex_DFA_py", scope: !808, file: !21, line: 2742, baseType: !28, size: 64, offset: 1344)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_s_Incompatible_checksums_0x_x_vs_0", scope: !808, file: !21, line: 2743, baseType: !28, size: 64, offset: 1408)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_LOWEST_PRIORITY", scope: !808, file: !21, line: 2744, baseType: !28, size: 64, offset: 1472)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_Machines", scope: !808, file: !21, line: 2745, baseType: !28, size: 64, offset: 1536)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_PickleError", scope: !808, file: !21, line: 2746, baseType: !28, size: 64, offset: 1600)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_State", scope: !808, file: !21, line: 2747, baseType: !28, size: 64, offset: 1664)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_StateMap", scope: !808, file: !21, line: 2748, baseType: !28, size: 64, offset: 1728)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_StateMap___reduce_cython", scope: !808, file: !21, line: 2749, baseType: !28, size: 64, offset: 1792)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_StateMap___setstate_cython", scope: !808, file: !21, line: 2750, baseType: !28, size: 64, offset: 1856)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_StateMap_dump", scope: !808, file: !21, line: 2751, baseType: !28, size: 64, offset: 1920)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_StateMap_new_to_old", scope: !808, file: !21, line: 2752, baseType: !28, size: 64, offset: 1984)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_State_Mapping", scope: !808, file: !21, line: 2753, baseType: !28, size: 64, offset: 2048)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_TransitionMap", scope: !808, file: !21, line: 2754, baseType: !28, size: 64, offset: 2112)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_Transitions", scope: !808, file: !21, line: 2755, baseType: !28, size: 64, offset: 2176)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s__19", scope: !808, file: !21, line: 2756, baseType: !28, size: 64, offset: 2240)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u__2", scope: !808, file: !21, line: 2757, baseType: !28, size: 64, offset: 2304)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u__3", scope: !808, file: !21, line: 2758, baseType: !28, size: 64, offset: 2368)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s__5", scope: !808, file: !21, line: 2759, baseType: !28, size: 64, offset: 2432)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_add_transitions", scope: !808, file: !21, line: 2760, baseType: !28, size: 64, offset: 2496)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_asyncio_coroutines", scope: !808, file: !21, line: 2761, baseType: !28, size: 64, offset: 2560)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_cline_in_traceback", scope: !808, file: !21, line: 2762, baseType: !28, size: 64, offset: 2624)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_debug", scope: !808, file: !21, line: 2763, baseType: !28, size: 64, offset: 2688)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_dict", scope: !808, file: !21, line: 2764, baseType: !28, size: 64, offset: 2752)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_dict_2", scope: !808, file: !21, line: 2765, baseType: !28, size: 64, offset: 2816)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_disable", scope: !808, file: !21, line: 2766, baseType: !28, size: 64, offset: 2880)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_dump", scope: !808, file: !21, line: 2767, baseType: !28, size: 64, offset: 2944)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_enable", scope: !808, file: !21, line: 2768, baseType: !28, size: 64, offset: 3008)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_file", scope: !808, file: !21, line: 2769, baseType: !28, size: 64, offset: 3072)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_gc", scope: !808, file: !21, line: 2770, baseType: !28, size: 64, offset: 3136)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_get", scope: !808, file: !21, line: 2771, baseType: !28, size: 64, offset: 3200)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_get_epsilon", scope: !808, file: !21, line: 2772, baseType: !28, size: 64, offset: 3264)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_getstate", scope: !808, file: !21, line: 2773, baseType: !28, size: 64, offset: 3328)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_id", scope: !808, file: !21, line: 2774, baseType: !28, size: 64, offset: 3392)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_import", scope: !808, file: !21, line: 2775, baseType: !28, size: 64, offset: 3456)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_is_coroutine", scope: !808, file: !21, line: 2776, baseType: !28, size: 64, offset: 3520)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_isenabled", scope: !808, file: !21, line: 2777, baseType: !28, size: 64, offset: 3584)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_items", scope: !808, file: !21, line: 2778, baseType: !28, size: 64, offset: 3648)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_main", scope: !808, file: !21, line: 2779, baseType: !28, size: 64, offset: 3712)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_make_initial_state", scope: !808, file: !21, line: 2780, baseType: !28, size: 64, offset: 3776)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_name", scope: !808, file: !21, line: 2781, baseType: !28, size: 64, offset: 3840)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_new", scope: !808, file: !21, line: 2782, baseType: !28, size: 64, offset: 3904)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_new_machine", scope: !808, file: !21, line: 2783, baseType: !28, size: 64, offset: 3968)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_new_state", scope: !808, file: !21, line: 2784, baseType: !28, size: 64, offset: 4032)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_new_to_old", scope: !808, file: !21, line: 2785, baseType: !28, size: 64, offset: 4096)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_nfa_to_dfa", scope: !808, file: !21, line: 2786, baseType: !28, size: 64, offset: 4160)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_u_number", scope: !808, file: !21, line: 2787, baseType: !28, size: 64, offset: 4224)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_old_machine", scope: !808, file: !21, line: 2788, baseType: !28, size: 64, offset: 4288)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_old_state_set", scope: !808, file: !21, line: 2789, baseType: !28, size: 64, offset: 4352)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pickle", scope: !808, file: !21, line: 2790, baseType: !28, size: 64, offset: 4416)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_PickleError", scope: !808, file: !21, line: 2791, baseType: !28, size: 64, offset: 4480)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_checksum", scope: !808, file: !21, line: 2792, baseType: !28, size: 64, offset: 4544)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_result", scope: !808, file: !21, line: 2793, baseType: !28, size: 64, offset: 4608)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_state", scope: !808, file: !21, line: 2794, baseType: !28, size: 64, offset: 4672)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_type", scope: !808, file: !21, line: 2795, baseType: !28, size: 64, offset: 4736)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_unpickle_StateMap", scope: !808, file: !21, line: 2796, baseType: !28, size: 64, offset: 4800)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_vtable", scope: !808, file: !21, line: 2797, baseType: !28, size: 64, offset: 4864)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_reduce", scope: !808, file: !21, line: 2798, baseType: !28, size: 64, offset: 4928)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_reduce_cython", scope: !808, file: !21, line: 2799, baseType: !28, size: 64, offset: 4992)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_reduce_ex", scope: !808, file: !21, line: 2800, baseType: !28, size: 64, offset: 5056)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_self", scope: !808, file: !21, line: 2801, baseType: !28, size: 64, offset: 5120)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_setstate", scope: !808, file: !21, line: 2802, baseType: !28, size: 64, offset: 5184)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_setstate_cython", scope: !808, file: !21, line: 2803, baseType: !28, size: 64, offset: 5248)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_state", scope: !808, file: !21, line: 2804, baseType: !28, size: 64, offset: 5312)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_state_set_str", scope: !808, file: !21, line: 2805, baseType: !28, size: 64, offset: 5376)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_s_stringsource", scope: !808, file: !21, line: 2806, baseType: !28, size: 64, offset: 5440)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_transitions", scope: !808, file: !21, line: 2807, baseType: !28, size: 64, offset: 5504)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_update", scope: !808, file: !21, line: 2808, baseType: !28, size: 64, offset: 5568)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_use_setstate", scope: !808, file: !21, line: 2809, baseType: !28, size: 64, offset: 5632)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_write", scope: !808, file: !21, line: 2810, baseType: !28, size: 64, offset: 5696)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_0", scope: !808, file: !21, line: 2811, baseType: !28, size: 64, offset: 5760)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_1", scope: !808, file: !21, line: 2812, baseType: !28, size: 64, offset: 5824)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_178120335", scope: !808, file: !21, line: 2813, baseType: !28, size: 64, offset: 5888)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_236441912", scope: !808, file: !21, line: 2814, baseType: !28, size: 64, offset: 5952)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_250443753", scope: !808, file: !21, line: 2815, baseType: !28, size: 64, offset: 6016)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__4", scope: !808, file: !21, line: 2816, baseType: !28, size: 64, offset: 6080)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__6", scope: !808, file: !21, line: 2817, baseType: !28, size: 64, offset: 6144)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__8", scope: !808, file: !21, line: 2818, baseType: !28, size: 64, offset: 6208)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__9", scope: !808, file: !21, line: 2819, baseType: !28, size: 64, offset: 6272)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__11", scope: !808, file: !21, line: 2820, baseType: !28, size: 64, offset: 6336)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__13", scope: !808, file: !21, line: 2821, baseType: !28, size: 64, offset: 6400)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__15", scope: !808, file: !21, line: 2822, baseType: !28, size: 64, offset: 6464)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__17", scope: !808, file: !21, line: 2823, baseType: !28, size: 64, offset: 6528)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_codeobj__7", scope: !808, file: !21, line: 2824, baseType: !28, size: 64, offset: 6592)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_codeobj__10", scope: !808, file: !21, line: 2825, baseType: !28, size: 64, offset: 6656)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_codeobj__12", scope: !808, file: !21, line: 2826, baseType: !28, size: 64, offset: 6720)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_codeobj__14", scope: !808, file: !21, line: 2827, baseType: !28, size: 64, offset: 6784)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_codeobj__16", scope: !808, file: !21, line: 2828, baseType: !28, size: 64, offset: 6848)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_codeobj__18", scope: !808, file: !21, line: 2829, baseType: !28, size: 64, offset: 6912)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__pyx_mstate_global_static", scope: !2, file: !21, line: 2847, type: !807, isLocal: true, isDefinition: true)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1456, type: !923, isLocal: true, isDefinition: true)
!923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 152, elements: !924)
!924 = !{!925}
!925 = !DISubrange(count: 19)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1457, type: !784, isLocal: true, isDefinition: true)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1458, type: !930, isLocal: true, isDefinition: true)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 192, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 24)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1459, type: !935, isLocal: true, isDefinition: true)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 224, elements: !936)
!936 = !{!937}
!937 = !DISubrange(count: 28)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1460, type: !940, isLocal: true, isDefinition: true)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 200, elements: !941)
!941 = !{!942}
!942 = !DISubrange(count: 25)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__pyx_f", scope: !2, file: !21, line: 1455, type: !945, isLocal: true, isDefinition: true)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 320, elements: !726)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12060, type: !948, isLocal: true, isDefinition: true)
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 624, elements: !949)
!949 = !{!950}
!950 = !DISubrange(count: 78)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12066, type: !784, isLocal: true, isDefinition: true)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12066, type: !784, isLocal: true, isDefinition: true)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9709, type: !957, isLocal: true, isDefinition: true)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 112, elements: !958)
!958 = !{!959}
!959 = !DISubrange(count: 14)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9722, type: !962, isLocal: true, isDefinition: true)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 376, elements: !963)
!963 = !{!964}
!964 = !DISubrange(count: 47)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9727, type: !967, isLocal: true, isDefinition: true)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 496, elements: !968)
!968 = !{!969}
!969 = !DISubrange(count: 62)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10753, type: !972, isLocal: true, isDefinition: true)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 320, elements: !973)
!973 = !{!974}
!974 = !DISubrange(count: 40)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "__pyx_CyFunctionType_type", scope: !2, file: !21, line: 10751, type: !43, isLocal: true, isDefinition: true)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10430, type: !979, isLocal: true, isDefinition: true)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 176, elements: !980)
!980 = !{!981}
!981 = !DISubrange(count: 22)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10580, type: !984, isLocal: true, isDefinition: true)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 336, elements: !985)
!985 = !{!986}
!986 = !DISubrange(count: 42)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9852, type: !940, isLocal: true, isDefinition: true)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10479, type: !972, isLocal: true, isDefinition: true)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10515, type: !993, isLocal: true, isDefinition: true)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 384, elements: !994)
!994 = !{!995}
!995 = !DISubrange(count: 48)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10522, type: !998, isLocal: true, isDefinition: true)
!998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 240, elements: !999)
!999 = !{!1000}
!1000 = !DISubrange(count: 30)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10532, type: !1003, isLocal: true, isDefinition: true)
!1003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 288, elements: !1004)
!1004 = !{!1005}
!1005 = !DISubrange(count: 36)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10268, type: !735, isLocal: true, isDefinition: true)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "__pyx_CyFunction_methods", scope: !2, file: !21, line: 10267, type: !1010, isLocal: true, isDefinition: true)
!1010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1011)
!1011 = !{!1012}
!1012 = !DISubrange(count: 2)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10235, type: !735, isLocal: true, isDefinition: true)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "__pyx_CyFunction_members", scope: !2, file: !21, line: 10233, type: !1017, isLocal: true, isDefinition: true)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 640, elements: !1011)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10210, type: !742, isLocal: true, isDefinition: true)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10211, type: !1022, isLocal: true, isDefinition: true)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 64, elements: !1023)
!1023 = !{!1024}
!1024 = !DISubrange(count: 8)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10212, type: !1027, isLocal: true, isDefinition: true)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 80, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 10)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10213, type: !742, isLocal: true, isDefinition: true)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10214, type: !789, isLocal: true, isDefinition: true)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10215, type: !1027, isLocal: true, isDefinition: true)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10216, type: !742, isLocal: true, isDefinition: true)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10217, type: !789, isLocal: true, isDefinition: true)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10218, type: !749, isLocal: true, isDefinition: true)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10219, type: !789, isLocal: true, isDefinition: true)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10220, type: !749, isLocal: true, isDefinition: true)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10221, type: !1027, isLocal: true, isDefinition: true)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10222, type: !742, isLocal: true, isDefinition: true)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10223, type: !957, isLocal: true, isDefinition: true)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10224, type: !789, isLocal: true, isDefinition: true)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10225, type: !784, isLocal: true, isDefinition: true)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10226, type: !796, isLocal: true, isDefinition: true)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10227, type: !957, isLocal: true, isDefinition: true)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__pyx_CyFunction_getsets", scope: !2, file: !21, line: 10209, type: !1062, isLocal: true, isDefinition: true)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 6080, elements: !924)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9964, type: !972, isLocal: true, isDefinition: true)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9989, type: !1067, isLocal: true, isDefinition: true)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 352, elements: !1068)
!1068 = !{!1069}
!1069 = !DISubrange(count: 44)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10014, type: !1072, isLocal: true, isDefinition: true)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 328, elements: !1073)
!1073 = !{!1074}
!1074 = !DISubrange(count: 41)
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10019, type: !1067, isLocal: true, isDefinition: true)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10078, type: !1079, isLocal: true, isDefinition: true)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 344, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 43)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10081, type: !770, isLocal: true, isDefinition: true)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10109, type: !1067, isLocal: true, isDefinition: true)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10112, type: !1088, isLocal: true, isDefinition: true)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 776, elements: !1089)
!1089 = !{!1090}
!1090 = !DISubrange(count: 97)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10140, type: !1093, isLocal: true, isDefinition: true)
!1093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 360, elements: !1094)
!1094 = !{!1095}
!1095 = !DISubrange(count: 45)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__pyx_umethod_PyDict_Type_get", scope: !2, file: !21, line: 2687, type: !1098, isLocal: true, isDefinition: true)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_CachedCFunction", file: !21, line: 2155, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 2149, size: 320, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1105}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1099, file: !21, line: 2150, baseType: !28, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "method_name", scope: !1099, file: !21, line: 2151, baseType: !94, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1099, file: !21, line: 2152, baseType: !268, size: 64, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !1099, file: !21, line: 2153, baseType: !28, size: 64, offset: 192)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1099, file: !21, line: 2154, baseType: !7, size: 32, offset: 256)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__pyx_k_", scope: !2, file: !21, line: 2606, type: !1108, isLocal: true, isDefinition: true)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 16, elements: !1011)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "__pyx_k_Cython_Plex_DFA", scope: !2, file: !21, line: 2663, type: !1111, isLocal: true, isDefinition: true)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 128, elements: !797)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "__pyx_k_Cython_Plex_DFA_py", scope: !2, file: !21, line: 2668, type: !1114, isLocal: true, isDefinition: true)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 152, elements: !924)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "__pyx_k_Incompatible_checksums_0x_x_vs_0", scope: !2, file: !21, line: 2677, type: !1117, isLocal: true, isDefinition: true)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 936, elements: !1118)
!1118 = !{!1119}
!1119 = !DISubrange(count: 117)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "__pyx_k_LOWEST_PRIORITY", scope: !2, file: !21, line: 2664, type: !1111, isLocal: true, isDefinition: true)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__pyx_k_Machines", scope: !2, file: !21, line: 2634, type: !1124, isLocal: true, isDefinition: true)
!1124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 72, elements: !743)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "__pyx_k_PickleError", scope: !2, file: !21, line: 2647, type: !1127, isLocal: true, isDefinition: true)
!1127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 96, elements: !750)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "__pyx_k_State", scope: !2, file: !21, line: 2621, type: !1130, isLocal: true, isDefinition: true)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 80, elements: !1028)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__pyx_k_StateMap", scope: !2, file: !21, line: 2635, type: !1124, isLocal: true, isDefinition: true)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__pyx_k_StateMap___reduce_cython", scope: !2, file: !21, line: 2674, type: !1135, isLocal: true, isDefinition: true)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 216, elements: !755)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "__pyx_k_StateMap___setstate_cython", scope: !2, file: !21, line: 2675, type: !1138, isLocal: true, isDefinition: true)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 232, elements: !1139)
!1139 = !{!1140}
!1140 = !DISubrange(count: 29)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__pyx_k_StateMap_dump", scope: !2, file: !21, line: 2657, type: !1143, isLocal: true, isDefinition: true)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 112, elements: !958)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "__pyx_k_StateMap_new_to_old", scope: !2, file: !21, line: 2672, type: !1146, isLocal: true, isDefinition: true)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 160, elements: !1147)
!1147 = !{!1148}
!1148 = !DISubrange(count: 20)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__pyx_k_State_Mapping", scope: !2, file: !21, line: 2658, type: !1151, isLocal: true, isDefinition: true)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 224, elements: !936)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "__pyx_k_TransitionMap", scope: !2, file: !21, line: 2659, type: !1143, isLocal: true, isDefinition: true)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "__pyx_k_Transitions", scope: !2, file: !21, line: 2648, type: !1127, isLocal: true, isDefinition: true)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "__pyx_k__19", scope: !2, file: !21, line: 2612, type: !1108, isLocal: true, isDefinition: true)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__pyx_k__2", scope: !2, file: !21, line: 2607, type: !1160, isLocal: true, isDefinition: true)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 48, elements: !1161)
!1161 = !{!1162}
!1162 = !DISubrange(count: 6)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__pyx_k__3", scope: !2, file: !21, line: 2608, type: !1108, isLocal: true, isDefinition: true)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "__pyx_k__5", scope: !2, file: !21, line: 2609, type: !1167, isLocal: true, isDefinition: true)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 8, elements: !388)
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(name: "__pyx_k_add_transitions", scope: !2, file: !21, line: 2665, type: !1111, isLocal: true, isDefinition: true)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "__pyx_k_asyncio_coroutines", scope: !2, file: !21, line: 2669, type: !1114, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "__pyx_k_cline_in_traceback", scope: !2, file: !21, line: 2670, type: !1114, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "__pyx_k_debug", scope: !2, file: !21, line: 2622, type: !1160, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "__pyx_k_dict", scope: !2, file: !21, line: 2615, type: !1124, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__pyx_k_dict_2", scope: !2, file: !21, line: 2626, type: !1160, isLocal: true, isDefinition: true)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "__pyx_k_disable", scope: !2, file: !21, line: 2633, type: !1182, isLocal: true, isDefinition: true)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 64, elements: !1023)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__pyx_k_dump", scope: !2, file: !21, line: 2616, type: !1185, isLocal: true, isDefinition: true)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 40, elements: !726)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "__pyx_k_enable", scope: !2, file: !21, line: 2627, type: !1188, isLocal: true, isDefinition: true)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 56, elements: !731)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "__pyx_k_file", scope: !2, file: !21, line: 2617, type: !1185, isLocal: true, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "__pyx_k_gc", scope: !2, file: !21, line: 2610, type: !1193, isLocal: true, isDefinition: true)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 24, elements: !721)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__pyx_k_get", scope: !2, file: !21, line: 2613, type: !1196, isLocal: true, isDefinition: true)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 32, elements: !678)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "__pyx_k_get_epsilon", scope: !2, file: !21, line: 2649, type: !1127, isLocal: true, isDefinition: true)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "__pyx_k_getstate", scope: !2, file: !21, line: 2636, type: !1201, isLocal: true, isDefinition: true)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 104, elements: !790)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__pyx_k_id", scope: !2, file: !21, line: 2611, type: !1193, isLocal: true, isDefinition: true)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__pyx_k_import", scope: !2, file: !21, line: 2628, type: !1206, isLocal: true, isDefinition: true)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 88, elements: !736)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "__pyx_k_is_coroutine", scope: !2, file: !21, line: 2653, type: !1143, isLocal: true, isDefinition: true)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "__pyx_k_isenabled", scope: !2, file: !21, line: 2639, type: !1130, isLocal: true, isDefinition: true)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__pyx_k_items", scope: !2, file: !21, line: 2623, type: !1160, isLocal: true, isDefinition: true)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__pyx_k_main", scope: !2, file: !21, line: 2618, type: !1124, isLocal: true, isDefinition: true)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__pyx_k_make_initial_state", scope: !2, file: !21, line: 2671, type: !1114, isLocal: true, isDefinition: true)
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "__pyx_k_name", scope: !2, file: !21, line: 2619, type: !1124, isLocal: true, isDefinition: true)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__pyx_k_new", scope: !2, file: !21, line: 2614, type: !1182, isLocal: true, isDefinition: true)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "__pyx_k_new_machine", scope: !2, file: !21, line: 2650, type: !1127, isLocal: true, isDefinition: true)
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "__pyx_k_new_state", scope: !2, file: !21, line: 2640, type: !1130, isLocal: true, isDefinition: true)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__pyx_k_new_to_old", scope: !2, file: !21, line: 2643, type: !1206, isLocal: true, isDefinition: true)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__pyx_k_nfa_to_dfa", scope: !2, file: !21, line: 2644, type: !1206, isLocal: true, isDefinition: true)
!1229 = !DIGlobalVariableExpression(var: !1230, expr: !DIExpression())
!1230 = distinct !DIGlobalVariable(name: "__pyx_k_number", scope: !2, file: !21, line: 2629, type: !1188, isLocal: true, isDefinition: true)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__pyx_k_old_machine", scope: !2, file: !21, line: 2651, type: !1127, isLocal: true, isDefinition: true)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__pyx_k_old_state_set", scope: !2, file: !21, line: 2660, type: !1143, isLocal: true, isDefinition: true)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__pyx_k_pickle", scope: !2, file: !21, line: 2630, type: !1188, isLocal: true, isDefinition: true)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_PickleError", scope: !2, file: !21, line: 2666, type: !1239, isLocal: true, isDefinition: true)
!1239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 144, elements: !1240)
!1240 = !{!1241}
!1241 = !DISubrange(count: 18)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_checksum", scope: !2, file: !21, line: 2654, type: !1244, isLocal: true, isDefinition: true)
!1244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 120, elements: !785)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_result", scope: !2, file: !21, line: 2645, type: !1201, isLocal: true, isDefinition: true)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_state", scope: !2, file: !21, line: 2641, type: !1127, isLocal: true, isDefinition: true)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_type", scope: !2, file: !21, line: 2637, type: !1206, isLocal: true, isDefinition: true)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_unpickle_StateMap", scope: !2, file: !21, line: 2673, type: !1253, isLocal: true, isDefinition: true)
!1253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 192, elements: !931)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_vtable", scope: !2, file: !21, line: 2646, type: !1244, isLocal: true, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__pyx_k_reduce", scope: !2, file: !21, line: 2631, type: !1206, isLocal: true, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__pyx_k_reduce_cython", scope: !2, file: !21, line: 2661, type: !1239, isLocal: true, isDefinition: true)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__pyx_k_reduce_ex", scope: !2, file: !21, line: 2642, type: !1143, isLocal: true, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__pyx_k_self", scope: !2, file: !21, line: 2620, type: !1185, isLocal: true, isDefinition: true)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__pyx_k_setstate", scope: !2, file: !21, line: 2638, type: !1201, isLocal: true, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__pyx_k_setstate_cython", scope: !2, file: !21, line: 2667, type: !1146, isLocal: true, isDefinition: true)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__pyx_k_state", scope: !2, file: !21, line: 2624, type: !1160, isLocal: true, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__pyx_k_state_set_str", scope: !2, file: !21, line: 2662, type: !1143, isLocal: true, isDefinition: true)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__pyx_k_stringsource", scope: !2, file: !21, line: 2655, type: !1244, isLocal: true, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__pyx_k_transitions", scope: !2, file: !21, line: 2652, type: !1127, isLocal: true, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__pyx_k_update", scope: !2, file: !21, line: 2632, type: !1188, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__pyx_k_use_setstate", scope: !2, file: !21, line: 2656, type: !1201, isLocal: true, isDefinition: true)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__pyx_k_write", scope: !2, file: !21, line: 2625, type: !1160, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__pyx_filename", scope: !2, file: !21, line: 1451, type: !54, isLocal: true, isDefinition: true)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__pyx_lineno", scope: !2, file: !21, line: 1448, type: !7, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__pyx_clineno", scope: !2, file: !21, line: 1449, type: !7, isLocal: true, isDefinition: true)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7296, type: !940, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__pyx_builtin_id", scope: !2, file: !21, line: 2604, type: !28, isLocal: true, isDefinition: true)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6530, type: !735, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6530, type: !1296, isLocal: true, isDefinition: true)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1296, elements: !1297)
!1297 = !{!1298}
!1298 = !DISubrange(count: 162)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6531, type: !1301, isLocal: true, isDefinition: true)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 160, elements: !1147)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6531, type: !1304, isLocal: true, isDefinition: true)
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 184, elements: !1305)
!1305 = !{!1306}
!1306 = !DISubrange(count: 23)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6532, type: !796, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6532, type: !1311, isLocal: true, isDefinition: true)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 480, elements: !1312)
!1312 = !{!1313}
!1313 = !DISubrange(count: 60)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6533, type: !1304, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6533, type: !1318, isLocal: true, isDefinition: true)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 576, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 72)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12081, type: !789, isLocal: true, isDefinition: true)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3329, type: !1079, isLocal: true, isDefinition: true)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3329, type: !1327, isLocal: true, isDefinition: true)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 48, elements: !1161)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3407, type: !1330, isLocal: true, isDefinition: true)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 272, elements: !1331)
!1331 = !{!1332}
!1332 = !DISubrange(count: 34)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3584, type: !725, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3799, type: !754, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7640, type: !1339, isLocal: true, isDefinition: true)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 304, elements: !1340)
!1340 = !{!1341}
!1341 = !DISubrange(count: 38)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7829, type: !1072, isLocal: true, isDefinition: true)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7685, type: !1346, isLocal: true, isDefinition: true)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 312, elements: !1347)
!1347 = !{!1348}
!1348 = !DISubrange(count: 39)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7686, type: !1351, isLocal: true, isDefinition: true)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 16, elements: !1011)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7692, type: !1072, isLocal: true, isDefinition: true)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7894, type: !1301, isLocal: true, isDefinition: true)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7902, type: !1358, isLocal: true, isDefinition: true)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 256, elements: !1359)
!1359 = !{!1360}
!1360 = !DISubrange(count: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4619, type: !677, isLocal: true, isDefinition: true)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4692, type: !1346, isLocal: true, isDefinition: true)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4747, type: !1003, isLocal: true, isDefinition: true)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5057, type: !1330, isLocal: true, isDefinition: true)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !1371, file: !21, line: 4803, type: !398, isLocal: true, isDefinition: true)
!1371 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA_8StateMap_highest_priority_action", scope: !21, file: !21, line: 4766, type: !433, scopeLine: 4766, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1394, !1398, !1400, !1401}
!1373 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !1371, file: !21, line: 4766, type: !423)
!1374 = !DILocalVariable(name: "__pyx_v_state_set", arg: 2, scope: !1371, file: !21, line: 4766, type: !28)
!1375 = !DILocalVariable(name: "__pyx_v_state", scope: !1371, file: !21, line: 4767, type: !440)
!1376 = !DILocalVariable(name: "__pyx_v_best_action", scope: !1371, file: !21, line: 4768, type: !473)
!1377 = !DILocalVariable(name: "__pyx_v_best_priority", scope: !1371, file: !21, line: 4769, type: !28)
!1378 = !DILocalVariable(name: "__pyx_v_priority", scope: !1371, file: !21, line: 4770, type: !7)
!1379 = !DILocalVariable(name: "__pyx_r", scope: !1371, file: !21, line: 4771, type: !28)
!1380 = !DILocalVariable(name: "__pyx_t_1", scope: !1371, file: !21, line: 4773, type: !28)
!1381 = !DILocalVariable(name: "__pyx_t_2", scope: !1371, file: !21, line: 4774, type: !34)
!1382 = !DILocalVariable(name: "__pyx_t_3", scope: !1371, file: !21, line: 4775, type: !34)
!1383 = !DILocalVariable(name: "__pyx_t_4", scope: !1371, file: !21, line: 4776, type: !7)
!1384 = !DILocalVariable(name: "__pyx_t_5", scope: !1371, file: !21, line: 4777, type: !28)
!1385 = !DILocalVariable(name: "__pyx_t_6", scope: !1371, file: !21, line: 4778, type: !7)
!1386 = !DILocalVariable(name: "__pyx_t_7", scope: !1371, file: !21, line: 4779, type: !28)
!1387 = !DILocalVariable(name: "__pyx_t_8", scope: !1371, file: !21, line: 4780, type: !7)
!1388 = !DILocalVariable(name: "__pyx_lineno", scope: !1371, file: !21, line: 4781, type: !7)
!1389 = !DILocalVariable(name: "__pyx_filename", scope: !1371, file: !21, line: 4782, type: !54)
!1390 = !DILocalVariable(name: "__pyx_clineno", scope: !1371, file: !21, line: 4783, type: !7)
!1391 = !DILocalVariable(name: "tmp", scope: !1392, file: !21, line: 4831, type: !28)
!1392 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4831, column: 5)
!1393 = distinct !DILexicalBlock(scope: !1371, file: !21, line: 4825, column: 13)
!1394 = !DILocalVariable(name: "tmp", scope: !1395, file: !21, line: 4868, type: !28)
!1395 = distinct !DILexicalBlock(scope: !1396, file: !21, line: 4868, column: 7)
!1396 = distinct !DILexicalBlock(scope: !1397, file: !21, line: 4857, column: 20)
!1397 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4857, column: 9)
!1398 = !DILocalVariable(name: "tmp", scope: !1399, file: !21, line: 4880, type: !28)
!1399 = distinct !DILexicalBlock(scope: !1396, file: !21, line: 4880, column: 7)
!1400 = !DILabel(scope: !1371, name: "__pyx_L1_error", file: !21, line: 4915)
!1401 = !DILabel(scope: !1371, name: "__pyx_L0", file: !21, line: 4921)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !1371, file: !21, line: 4803, type: !28, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4919, type: !1406, isLocal: true, isDefinition: true)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 392, elements: !713)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7448, type: !1409, isLocal: true, isDefinition: true)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 248, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 31)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7455, type: !1079, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7914, type: !930, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4098, type: !1003, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4218, type: !1358, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4402, type: !1346, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__pyx_vtable_6Cython_4Plex_3DFA_StateMap", scope: !2, file: !21, line: 6112, type: !429, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_3DFA_StateMap", scope: !2, file: !21, line: 1812, type: !428, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6207, type: !940, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6236, type: !1430, isLocal: true, isDefinition: true)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1160, elements: !1431)
!1431 = !{!1432}
!1432 = !DISubrange(count: 145)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "__pyx_type_6Cython_4Plex_3DFA_StateMap", scope: !2, file: !21, line: 6205, type: !43, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6179, type: !735, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6180, type: !725, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6181, type: !1441, isLocal: true, isDefinition: true)
!1441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 144, elements: !1240)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6182, type: !1301, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "__pyx_methods_6Cython_4Plex_3DFA_StateMap", scope: !2, file: !21, line: 6178, type: !1446, isLocal: true, isDefinition: true)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 1280, elements: !726)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4998, type: !1003, isLocal: true, isDefinition: true)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "__pyx_doc_6Cython_4Plex_3DFA_8StateMap_2new_to_old", scope: !2, file: !21, line: 4940, type: !1451, isLocal: true, isDefinition: true)
!1451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 488, elements: !1452)
!1452 = !{!1453}
!1453 = !DISubrange(count: 61)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5317, type: !998, isLocal: true, isDefinition: true)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8819, type: !1458, isLocal: true, isDefinition: true)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 368, elements: !1459)
!1459 = !{!1460}
!1460 = !DISubrange(count: 46)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !1463, file: !21, line: 5490, type: !398, isLocal: true, isDefinition: true)
!1463 = distinct !DISubprogram(name: "__pyx_pf_6Cython_4Plex_3DFA_8StateMap_6__reduce_cython__", scope: !21, file: !21, line: 5350, type: !1464, scopeLine: 5350, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1466)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!28, !423}
!1466 = !{!1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1484, !1486, !1487, !1488}
!1467 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !1463, file: !21, line: 5350, type: !423)
!1468 = !DILocalVariable(name: "__pyx_v_state", scope: !1463, file: !21, line: 5351, type: !28)
!1469 = !DILocalVariable(name: "__pyx_v__dict", scope: !1463, file: !21, line: 5352, type: !28)
!1470 = !DILocalVariable(name: "__pyx_v_use_setstate", scope: !1463, file: !21, line: 5353, type: !7)
!1471 = !DILocalVariable(name: "__pyx_r", scope: !1463, file: !21, line: 5354, type: !28)
!1472 = !DILocalVariable(name: "__pyx_t_1", scope: !1463, file: !21, line: 5356, type: !28)
!1473 = !DILocalVariable(name: "__pyx_t_2", scope: !1463, file: !21, line: 5357, type: !7)
!1474 = !DILocalVariable(name: "__pyx_t_3", scope: !1463, file: !21, line: 5358, type: !28)
!1475 = !DILocalVariable(name: "__pyx_t_4", scope: !1463, file: !21, line: 5359, type: !7)
!1476 = !DILocalVariable(name: "__pyx_t_5", scope: !1463, file: !21, line: 5360, type: !28)
!1477 = !DILocalVariable(name: "__pyx_lineno", scope: !1463, file: !21, line: 5361, type: !7)
!1478 = !DILocalVariable(name: "__pyx_filename", scope: !1463, file: !21, line: 5362, type: !54)
!1479 = !DILocalVariable(name: "__pyx_clineno", scope: !1463, file: !21, line: 5363, type: !7)
!1480 = !DILocalVariable(name: "tmp", scope: !1481, file: !21, line: 5424, type: !28)
!1481 = distinct !DILexicalBlock(scope: !1482, file: !21, line: 5424, column: 5)
!1482 = distinct !DILexicalBlock(scope: !1483, file: !21, line: 5407, column: 18)
!1483 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5407, column: 7)
!1484 = !DILabel(scope: !1485, name: "__pyx_L4_bool_binop_done", file: !21, line: 5468)
!1485 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5453, column: 12)
!1486 = !DILabel(scope: !1463, name: "__pyx_L3", file: !21, line: 5471)
!1487 = !DILabel(scope: !1463, name: "__pyx_L1_error", file: !21, line: 5569)
!1488 = !DILabel(scope: !1463, name: "__pyx_L0", file: !21, line: 5575)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !1463, file: !21, line: 5490, type: !28, isLocal: true, isDefinition: true)
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !1463, file: !21, line: 5536, type: !398, isLocal: true, isDefinition: true)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !1463, file: !21, line: 5536, type: !28, isLocal: true, isDefinition: true)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5573, type: !1079, isLocal: true, isDefinition: true)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5620, type: !1327, isLocal: true, isDefinition: true)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5637, type: !1093, isLocal: true, isDefinition: true)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6025, type: !1346, isLocal: true, isDefinition: true)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6105, type: !1505, isLocal: true, isDefinition: true)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 408, elements: !1506)
!1506 = !{!1507}
!1507 = !DISubrange(count: 51)
!1508 = !DIGlobalVariableExpression(var: !1509, expr: !DIExpression())
!1509 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9130, type: !1072, isLocal: true, isDefinition: true)
!1510 = !DIGlobalVariableExpression(var: !1511, expr: !DIExpression())
!1511 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4461, type: !742, isLocal: true, isDefinition: true)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4482, type: !1330, isLocal: true, isDefinition: true)
!1514 = !DIGlobalVariableExpression(var: !1515, expr: !DIExpression())
!1515 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8279, type: !1330, isLocal: true, isDefinition: true)
!1516 = !DIGlobalVariableExpression(var: !1517, expr: !DIExpression())
!1517 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8288, type: !1093, isLocal: true, isDefinition: true)
!1518 = !DIGlobalVariableExpression(var: !1519, expr: !DIExpression())
!1519 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8134, type: !1505, isLocal: true, isDefinition: true)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8309, type: !742, isLocal: true, isDefinition: true)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8312, type: !1022, isLocal: true, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8315, type: !1022, isLocal: true, isDefinition: true)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8318, type: !1311, isLocal: true, isDefinition: true)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9254, type: !1346, isLocal: true, isDefinition: true)
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9281, type: !1532, isLocal: true, isDefinition: true)
!1532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1376, elements: !1533)
!1533 = !{!1534}
!1534 = !DISubrange(count: 172)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9508, type: !1537, isLocal: true, isDefinition: true)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 472, elements: !1538)
!1538 = !{!1539}
!1539 = !DISubrange(count: 59)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9455, type: !1346, isLocal: true, isDefinition: true)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9607, type: !1072, isLocal: true, isDefinition: true)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6594, type: !1301, isLocal: true, isDefinition: true)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6596, type: !730, isLocal: true, isDefinition: true)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6598, type: !730, isLocal: true, isDefinition: true)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6600, type: !725, isLocal: true, isDefinition: true)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6602, type: !730, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6604, type: !1327, isLocal: true, isDefinition: true)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6606, type: !730, isLocal: true, isDefinition: true)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6608, type: !725, isLocal: true, isDefinition: true)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6611, type: !930, isLocal: true, isDefinition: true)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6613, type: !957, isLocal: true, isDefinition: true)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6616, type: !801, isLocal: true, isDefinition: true)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6618, type: !1022, isLocal: true, isDefinition: true)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6620, type: !725, isLocal: true, isDefinition: true)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6621, type: !749, isLocal: true, isDefinition: true)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9646, type: !1574, isLocal: true, isDefinition: true)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 280, elements: !1575)
!1575 = !{!1576}
!1576 = !DISubrange(count: 35)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9680, type: !1579, isLocal: true, isDefinition: true)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 920, elements: !1580)
!1580 = !{!1581}
!1581 = !DISubrange(count: 115)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9688, type: !1584, isLocal: true, isDefinition: true)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 952, elements: !1585)
!1585 = !{!1586}
!1586 = !DISubrange(count: 119)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9695, type: !1589, isLocal: true, isDefinition: true)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 856, elements: !1590)
!1590 = !{!1591}
!1591 = !DISubrange(count: 107)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_7Actions_Action", scope: !2, file: !21, line: 1680, type: !478, isLocal: true, isDefinition: true)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_7Actions_Return", scope: !2, file: !21, line: 1694, type: !560, isLocal: true, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_7Actions_Call", scope: !2, file: !21, line: 1708, type: !564, isLocal: true, isDefinition: true)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_7Actions_Method", scope: !2, file: !21, line: 1722, type: !568, isLocal: true, isDefinition: true)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_7Actions_Begin", scope: !2, file: !21, line: 1736, type: !572, isLocal: true, isDefinition: true)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_7Actions_Ignore", scope: !2, file: !21, line: 1750, type: !576, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_7Actions_Text", scope: !2, file: !21, line: 1763, type: !580, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_11Transitions_TransitionMap", scope: !2, file: !21, line: 1781, type: !450, isLocal: true, isDefinition: true)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_4Plex_8Machines_Machine", scope: !2, file: !21, line: 1796, type: !584, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6641, type: !730, isLocal: true, isDefinition: true)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6641, type: !725, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6645, type: !677, isLocal: true, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12118, type: !1618, isLocal: true, isDefinition: true)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 400, elements: !1619)
!1619 = !{!1620}
!1620 = !DISubrange(count: 50)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12124, type: !1623, isLocal: true, isDefinition: true)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 600, elements: !1624)
!1624 = !{!1625}
!1625 = !DISubrange(count: 75)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__pyx_vp_6Cython_4Plex_11Transitions_maxint", scope: !2, file: !21, line: 2583, type: !1628, isLocal: true, isDefinition: true)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__pyx_vp_6Cython_4Plex_8Machines_maxint", scope: !2, file: !21, line: 2587, type: !1631, isLocal: true, isDefinition: true)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8737, type: !979, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10601, type: !754, isLocal: true, isDefinition: true)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__pyx_mdef_6Cython_4Plex_3DFA_1nfa_to_dfa", scope: !2, file: !21, line: 3825, type: !262, isLocal: true, isDefinition: true)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3916, type: !749, isLocal: true, isDefinition: true)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8343, type: !1642, isLocal: true, isDefinition: true)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 536, elements: !1643)
!1643 = !{!1644}
!1644 = !DISubrange(count: 67)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__pyx_doc_6Cython_4Plex_3DFA_nfa_to_dfa", scope: !2, file: !21, line: 3824, type: !1647, isLocal: true, isDefinition: true)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 832, elements: !1648)
!1648 = !{!1649}
!1649 = !DISubrange(count: 104)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_3new_to_old", scope: !2, file: !21, line: 4941, type: !262, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_5dump", scope: !2, file: !21, line: 5075, type: !262, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_7__reduce_cython__", scope: !2, file: !21, line: 5336, type: !262, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__pyx_mdef_6Cython_4Plex_3DFA_8StateMap_9__setstate_cython__", scope: !2, file: !21, line: 5592, type: !262, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5659, type: !930, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pyx_mdef_6Cython_4Plex_3DFA_3__pyx_unpickle_StateMap", scope: !2, file: !21, line: 5659, type: !262, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5760, type: !972, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(scope: null, file: !21, line: 11489, type: !1574, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(scope: null, file: !21, line: 11493, type: !1668, isLocal: true, isDefinition: true)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 296, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 37)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12351, type: !1304, isLocal: true, isDefinition: true)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12287, type: !1675, isLocal: true, isDefinition: true)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1344, elements: !1676)
!1676 = !{!1677}
!1677 = !DISubrange(count: 168)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(scope: null, file: !21, line: 12300, type: !1072, isLocal: true, isDefinition: true)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8915, type: !1072, isLocal: true, isDefinition: true)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8923, type: !1406, isLocal: true, isDefinition: true)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8961, type: !1686, isLocal: true, isDefinition: true)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 552, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 69)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8969, type: !1537, isLocal: true, isDefinition: true)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8985, type: !993, isLocal: true, isDefinition: true)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !1695, file: !21, line: 10903, type: !398, isLocal: true, isDefinition: true)
!1695 = distinct !DISubprogram(name: "__Pyx_CLineForTraceback", scope: !21, file: !21, line: 10889, type: !1696, scopeLine: 10889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1846)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!7, !1698, !7}
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !30, line: 24, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !1701, line: 82, size: 2880, elements: !1702)
!1701 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/pystate.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "474ae1b51b4924e8bec8b13b56a451da")
!1702 = !{!1703, !1704, !1705, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1778, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1832, !1842, !1843, !1844, !1845}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1700, file: !1701, line: 85, baseType: !1698, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1700, file: !1701, line: 86, baseType: !1698, size: 64, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !1700, file: !1701, line: 87, baseType: !1706, size: 64, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !30, line: 25, baseType: !1708)
!1708 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !30, line: 25, flags: DIFlagFwdDecl)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "_initialized", scope: !1700, file: !1701, line: 93, baseType: !7, size: 32, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_static", scope: !1700, file: !1701, line: 96, baseType: !7, size: 32, offset: 224)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_remaining", scope: !1700, file: !1701, line: 98, baseType: !7, size: 32, offset: 256)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_limit", scope: !1700, file: !1701, line: 99, baseType: !7, size: 32, offset: 288)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_headroom", scope: !1700, file: !1701, line: 100, baseType: !7, size: 32, offset: 320)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !1700, file: !1701, line: 105, baseType: !7, size: 32, offset: 352)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "tracing_what", scope: !1700, file: !1701, line: 106, baseType: !7, size: 32, offset: 384)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "cframe", scope: !1700, file: !1701, line: 110, baseType: !1717, size: 64, offset: 448)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyCFrame", file: !1701, line: 53, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PyCFrame", file: !1701, line: 38, size: 192, elements: !1720)
!1720 = !{!1721, !1722, !1776}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !1719, file: !1701, line: 49, baseType: !545, size: 8)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "current_frame", scope: !1719, file: !1701, line: 51, baseType: !1723, size: 64, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PyInterpreterFrame", file: !1725, line: 47, size: 640, elements: !1726)
!1725 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/internal/pycore_frame.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "553e3382ea38f2c6ad91a452160e87fd")
!1726 = !{!1727, !1749, !1750, !1751, !1752, !1753, !1767, !1768, !1771, !1772, !1774, !1775}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "f_func", scope: !1724, file: !1725, line: 49, baseType: !1728, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFunctionObject", file: !1730, line: 59, baseType: !1731)
!1730 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/funcobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7328382f2637048b906e52f1dfe7b495")
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1730, line: 36, size: 1088, elements: !1732)
!1732 = !{!1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1731, file: !1730, line: 37, baseType: !29, size: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "func_globals", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "func_builtins", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "func_qualname", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 320)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "func_code", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 384)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "func_defaults", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 448)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "func_kwdefaults", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 512)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "func_closure", scope: !1731, file: !1730, line: 38, baseType: !28, size: 64, offset: 576)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "func_doc", scope: !1731, file: !1730, line: 39, baseType: !28, size: 64, offset: 640)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "func_dict", scope: !1731, file: !1730, line: 40, baseType: !28, size: 64, offset: 704)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "func_weakreflist", scope: !1731, file: !1730, line: 41, baseType: !28, size: 64, offset: 768)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "func_module", scope: !1731, file: !1730, line: 42, baseType: !28, size: 64, offset: 832)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "func_annotations", scope: !1731, file: !1730, line: 43, baseType: !28, size: 64, offset: 896)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !1731, file: !1730, line: 44, baseType: !335, size: 64, offset: 960)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "func_version", scope: !1731, file: !1730, line: 52, baseType: !557, size: 32, offset: 1024)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "f_globals", scope: !1724, file: !1725, line: 50, baseType: !28, size: 64, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "f_builtins", scope: !1724, file: !1725, line: 51, baseType: !28, size: 64, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "f_locals", scope: !1724, file: !1725, line: 52, baseType: !28, size: 64, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !1724, file: !1725, line: 53, baseType: !637, size: 64, offset: 256)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "frame_obj", scope: !1724, file: !1725, line: 54, baseType: !1754, size: 64, offset: 320)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFrameObject", file: !30, line: 22, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !1725, line: 15, size: 448, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1756, file: !1725, line: 16, baseType: !29, size: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "f_back", scope: !1756, file: !1725, line: 17, baseType: !1754, size: 64, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "f_frame", scope: !1756, file: !1725, line: 18, baseType: !1723, size: 64, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace", scope: !1756, file: !1725, line: 19, baseType: !28, size: 64, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "f_lineno", scope: !1756, file: !1725, line: 20, baseType: !7, size: 32, offset: 320)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace_lines", scope: !1756, file: !1725, line: 21, baseType: !56, size: 8, offset: 352)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace_opcodes", scope: !1756, file: !1725, line: 22, baseType: !56, size: 8, offset: 360)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "f_fast_as_locals", scope: !1756, file: !1725, line: 23, baseType: !56, size: 8, offset: 368)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "_f_frame_data", scope: !1756, file: !1725, line: 25, baseType: !387, size: 64, offset: 384)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1724, file: !1725, line: 56, baseType: !1723, size: 64, offset: 384)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "prev_instr", scope: !1724, file: !1725, line: 61, baseType: !1769, size: 64, offset: 448)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_CODEUNIT", file: !640, line: 19, baseType: !551)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "stacktop", scope: !1724, file: !1725, line: 62, baseType: !7, size: 32, offset: 512)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "is_entry", scope: !1724, file: !1725, line: 63, baseType: !1773, size: 8, offset: 544)
!1773 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1724, file: !1725, line: 64, baseType: !56, size: 8, offset: 552)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "localsplus", scope: !1724, file: !1725, line: 66, baseType: !387, size: 64, offset: 576)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1719, file: !1701, line: 52, baseType: !1777, size: 64, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !1700, file: !1701, line: 112, baseType: !1779, size: 64, offset: 512)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !1701, line: 14, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!7, !28, !1754, !7, !28}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !1700, file: !1701, line: 113, baseType: !1779, size: 64, offset: 576)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !1700, file: !1701, line: 114, baseType: !28, size: 64, offset: 640)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !1700, file: !1701, line: 115, baseType: !28, size: 64, offset: 704)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !1700, file: !1701, line: 118, baseType: !28, size: 64, offset: 768)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !1700, file: !1701, line: 119, baseType: !28, size: 64, offset: 832)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !1700, file: !1701, line: 120, baseType: !28, size: 64, offset: 896)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "exc_info", scope: !1700, file: !1701, line: 125, baseType: !1790, size: 64, offset: 960)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyErr_StackItem", file: !1701, line: 73, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_err_stackitem", file: !1701, line: 55, size: 128, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !1792, file: !1701, line: 69, baseType: !28, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "previous_item", scope: !1792, file: !1701, line: 71, baseType: !1796, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1700, file: !1701, line: 127, baseType: !28, size: 64, offset: 1024)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !1700, file: !1701, line: 129, baseType: !7, size: 32, offset: 1088)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !1700, file: !1701, line: 131, baseType: !28, size: 64, offset: 1152)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !1700, file: !1701, line: 132, baseType: !238, size: 64, offset: 1216)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "native_thread_id", scope: !1700, file: !1701, line: 138, baseType: !238, size: 64, offset: 1280)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !1700, file: !1701, line: 140, baseType: !7, size: 32, offset: 1344)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !1700, file: !1701, line: 141, baseType: !28, size: 64, offset: 1408)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !1700, file: !1701, line: 166, baseType: !322, size: 64, offset: 1472)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !1700, file: !1701, line: 167, baseType: !27, size: 64, offset: 1536)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "coroutine_origin_tracking_depth", scope: !1700, file: !1701, line: 169, baseType: !7, size: 32, offset: 1600)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "async_gen_firstiter", scope: !1700, file: !1701, line: 171, baseType: !28, size: 64, offset: 1664)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "async_gen_finalizer", scope: !1700, file: !1701, line: 172, baseType: !28, size: 64, offset: 1728)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1700, file: !1701, line: 174, baseType: !28, size: 64, offset: 1792)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "context_ver", scope: !1700, file: !1701, line: 175, baseType: !398, size: 64, offset: 1856)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1700, file: !1701, line: 178, baseType: !398, size: 64, offset: 1920)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "trace_info", scope: !1700, file: !1701, line: 180, baseType: !1813, size: 384, offset: 1984)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTraceInfo", file: !1701, line: 34, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1701, line: 31, size: 384, elements: !1815)
!1815 = !{!1816, !1817}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1814, file: !1701, line: 32, baseType: !637, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1814, file: !1701, line: 33, baseType: !1818, size: 320, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCodeAddressRange", file: !640, line: 184, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_line_offsets", file: !640, line: 179, size: 320, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ar_start", scope: !1819, file: !640, line: 180, baseType: !7, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ar_end", scope: !1819, file: !640, line: 181, baseType: !7, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ar_line", scope: !1819, file: !640, line: 182, baseType: !7, size: 32, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1819, file: !640, line: 183, baseType: !1825, size: 192, offset: 128)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_opaque", file: !640, line: 173, size: 192, elements: !1826)
!1826 = !{!1827, !1828, !1831}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "computed_line", scope: !1825, file: !640, line: 174, baseType: !7, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "lo_next", scope: !1825, file: !640, line: 175, baseType: !1829, size: 64, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1825, file: !640, line: 176, baseType: !1829, size: 64, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "datastack_chunk", scope: !1700, file: !1701, line: 182, baseType: !1833, size: 64, offset: 2368)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyStackChunk", file: !1701, line: 80, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stack_chunk", file: !1701, line: 75, size: 256, elements: !1836)
!1836 = !{!1837, !1839, !1840, !1841}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1835, file: !1701, line: 76, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1835, file: !1701, line: 77, baseType: !341, size: 64, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1835, file: !1701, line: 78, baseType: !341, size: 64, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1835, file: !1701, line: 79, baseType: !387, size: 64, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "datastack_top", scope: !1700, file: !1701, line: 183, baseType: !94, size: 64, offset: 2432)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "datastack_limit", scope: !1700, file: !1701, line: 184, baseType: !94, size: 64, offset: 2496)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "exc_state", scope: !1700, file: !1701, line: 199, baseType: !1791, size: 128, offset: 2560)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "root_cframe", scope: !1700, file: !1701, line: 202, baseType: !1718, size: 192, offset: 2688)
!1846 = !{!1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854}
!1847 = !DILocalVariable(name: "tstate", arg: 1, scope: !1695, file: !21, line: 10889, type: !1698)
!1848 = !DILocalVariable(name: "c_line", arg: 2, scope: !1695, file: !21, line: 10889, type: !7)
!1849 = !DILocalVariable(name: "use_cline", scope: !1695, file: !21, line: 10890, type: !28)
!1850 = !DILocalVariable(name: "ptype", scope: !1695, file: !21, line: 10891, type: !28)
!1851 = !DILocalVariable(name: "pvalue", scope: !1695, file: !21, line: 10891, type: !28)
!1852 = !DILocalVariable(name: "ptraceback", scope: !1695, file: !21, line: 10891, type: !28)
!1853 = !DILocalVariable(name: "cython_runtime_dict", scope: !1695, file: !21, line: 10893, type: !94)
!1854 = !DILocalVariable(name: "use_cline_obj", scope: !1855, file: !21, line: 10909, type: !28)
!1855 = distinct !DILexicalBlock(scope: !1856, file: !21, line: 10908, column: 5)
!1856 = distinct !DILexicalBlock(scope: !1695, file: !21, line: 10902, column: 9)
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !1695, file: !21, line: 10903, type: !28, isLocal: true, isDefinition: true)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "__pyx_code_cache", scope: !2, file: !21, line: 2501, type: !1861, isLocal: true, isDefinition: true)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__Pyx_CodeObjectCache", file: !21, line: 2496, size: 128, elements: !1862)
!1862 = !{!1863, !1864, !1865}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1861, file: !21, line: 2497, baseType: !7, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "max_count", scope: !1861, file: !21, line: 2498, baseType: !7, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1861, file: !21, line: 2499, baseType: !632, size: 64, offset: 64)
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(scope: null, file: !21, line: 11118, type: !735, isLocal: true, isDefinition: true)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1450, type: !1870, isLocal: true, isDefinition: true)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1264, elements: !1871)
!1871 = !{!1872}
!1872 = !DISubrange(count: 158)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "__pyx_cfilenm", scope: !2, file: !21, line: 1450, type: !54, isLocal: true, isDefinition: true)
!1875 = !{i32 7, !"Dwarf Version", i32 5}
!1876 = !{i32 2, !"Debug Info Version", i32 3}
!1877 = !{i32 1, !"wchar_size", i32 4}
!1878 = !{i32 8, !"PIC Level", i32 2}
!1879 = !{i32 7, !"uwtable", i32 2}
!1880 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!1881 = distinct !DISubprogram(name: "PyInit_DFA", scope: !21, file: !21, line: 6735, type: !692, scopeLine: 6737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!1882 = !DILocation(line: 6738, column: 10, scope: !1881)
!1883 = !DILocation(line: 6738, column: 3, scope: !1881)
!1884 = !DISubprogram(name: "PyModuleDef_Init", scope: !683, file: !683, line: 40, type: !1885, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!28, !1887}
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef", file: !30, line: 12, baseType: !682)
!1889 = distinct !DISubprogram(name: "__pyx_pymod_create", scope: !21, file: !21, line: 6787, type: !1890, scopeLine: 6787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1892)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!28, !28, !1887}
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898}
!1893 = !DILocalVariable(name: "spec", arg: 1, scope: !1889, file: !21, line: 6787, type: !28)
!1894 = !DILocalVariable(name: "def", arg: 2, scope: !1889, file: !21, line: 6787, type: !1887)
!1895 = !DILocalVariable(name: "module", scope: !1889, file: !21, line: 6788, type: !28)
!1896 = !DILocalVariable(name: "moddict", scope: !1889, file: !21, line: 6788, type: !28)
!1897 = !DILocalVariable(name: "modname", scope: !1889, file: !21, line: 6788, type: !28)
!1898 = !DILabel(scope: !1889, name: "bad", file: !21, line: 6810)
!1899 = !{!1900, !1900, i64 0}
!1900 = !{!"any pointer", !1901, i64 0}
!1901 = !{!"omnipotent char", !1902, i64 0}
!1902 = !{!"Simple C/C++ TBAA"}
!1903 = !DILocation(line: 6787, column: 65, scope: !1889)
!1904 = !DILocation(line: 6787, column: 84, scope: !1889)
!1905 = !DILocation(line: 6788, column: 5, scope: !1889)
!1906 = !DILocation(line: 6788, column: 15, scope: !1889)
!1907 = !DILocation(line: 6788, column: 31, scope: !1889)
!1908 = !DILocation(line: 6788, column: 41, scope: !1889)
!1909 = !DILocation(line: 6789, column: 5, scope: !1889)
!1910 = !DILocation(line: 6790, column: 9, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6790, column: 9)
!1912 = !DILocation(line: 6790, column: 9, scope: !1889)
!1913 = !DILocation(line: 6791, column: 9, scope: !1911)
!1914 = !DILocation(line: 6792, column: 9, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6792, column: 9)
!1916 = !DILocation(line: 6792, column: 9, scope: !1889)
!1917 = !DILocation(line: 6793, column: 16, scope: !1915)
!1918 = !DILocation(line: 6793, column: 9, scope: !1915)
!1919 = !DILocation(line: 6794, column: 38, scope: !1889)
!1920 = !DILocation(line: 6794, column: 15, scope: !1889)
!1921 = !DILocation(line: 6794, column: 13, scope: !1889)
!1922 = !DILocation(line: 6795, column: 9, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6795, column: 9)
!1924 = !DILocation(line: 6795, column: 9, scope: !1889)
!1925 = !DILocation(line: 6795, column: 29, scope: !1923)
!1926 = !DILocation(line: 6796, column: 33, scope: !1889)
!1927 = !DILocation(line: 6796, column: 14, scope: !1889)
!1928 = !DILocation(line: 6796, column: 12, scope: !1889)
!1929 = !DILocation(line: 6797, column: 5, scope: !1889)
!1930 = !DILocation(line: 6798, column: 9, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6798, column: 9)
!1932 = !DILocation(line: 6798, column: 9, scope: !1889)
!1933 = !DILocation(line: 6798, column: 28, scope: !1931)
!1934 = !DILocation(line: 6802, column: 32, scope: !1889)
!1935 = !DILocation(line: 6802, column: 15, scope: !1889)
!1936 = !DILocation(line: 6802, column: 13, scope: !1889)
!1937 = !DILocation(line: 6803, column: 9, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6803, column: 9)
!1939 = !DILocation(line: 6803, column: 9, scope: !1889)
!1940 = !DILocation(line: 6803, column: 29, scope: !1938)
!1941 = !DILocation(line: 6805, column: 9, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6805, column: 9)
!1943 = !DILocation(line: 6805, column: 9, scope: !1889)
!1944 = !DILocation(line: 6805, column: 92, scope: !1942)
!1945 = !DILocation(line: 6806, column: 9, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6806, column: 9)
!1947 = !DILocation(line: 6806, column: 9, scope: !1889)
!1948 = !DILocation(line: 6806, column: 90, scope: !1946)
!1949 = !DILocation(line: 6807, column: 9, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6807, column: 9)
!1951 = !DILocation(line: 6807, column: 9, scope: !1889)
!1952 = !DILocation(line: 6807, column: 93, scope: !1950)
!1953 = !DILocation(line: 6808, column: 9, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1889, file: !21, line: 6808, column: 9)
!1955 = !DILocation(line: 6808, column: 9, scope: !1889)
!1956 = !DILocation(line: 6808, column: 110, scope: !1954)
!1957 = !DILocation(line: 6809, column: 12, scope: !1889)
!1958 = !DILocation(line: 6809, column: 5, scope: !1889)
!1959 = !DILocation(line: 6810, column: 1, scope: !1889)
!1960 = !DILocation(line: 6811, column: 5, scope: !1889)
!1961 = !DILocation(line: 6812, column: 5, scope: !1889)
!1962 = !DILocation(line: 6813, column: 1, scope: !1889)
!1963 = distinct !DISubprogram(name: "__pyx_pymod_exec_DFA", scope: !21, file: !21, line: 6816, type: !122, scopeLine: 6819, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1975, !1976, !1980}
!1965 = !DILocalVariable(name: "__pyx_pyinit_module", arg: 1, scope: !1963, file: !21, line: 6816, type: !28)
!1966 = !DILocalVariable(name: "stringtab_initialized", scope: !1963, file: !21, line: 6820, type: !7)
!1967 = !DILocalVariable(name: "__pyx_t_1", scope: !1963, file: !21, line: 6824, type: !28)
!1968 = !DILocalVariable(name: "__pyx_t_2", scope: !1963, file: !21, line: 6825, type: !28)
!1969 = !DILocalVariable(name: "__pyx_t_3", scope: !1963, file: !21, line: 6826, type: !28)
!1970 = !DILocalVariable(name: "__pyx_lineno", scope: !1963, file: !21, line: 6827, type: !7)
!1971 = !DILocalVariable(name: "__pyx_filename", scope: !1963, file: !21, line: 6828, type: !54)
!1972 = !DILocalVariable(name: "__pyx_clineno", scope: !1963, file: !21, line: 6829, type: !7)
!1973 = !DILocalVariable(name: "modules", scope: !1974, file: !21, line: 6921, type: !28)
!1974 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6920, column: 3)
!1975 = !DILabel(scope: !1963, name: "__pyx_L1_error", file: !21, line: 7086)
!1976 = !DILocalVariable(name: "_py_tmp", scope: !1977, file: !21, line: 7094, type: !28)
!1977 = distinct !DILexicalBlock(scope: !1978, file: !21, line: 7094, column: 5)
!1978 = distinct !DILexicalBlock(scope: !1979, file: !21, line: 7089, column: 16)
!1979 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7089, column: 7)
!1980 = !DILabel(scope: !1963, name: "__pyx_L0", file: !21, line: 7107)
!1981 = !DILocation(line: 6816, column: 61, scope: !1963)
!1982 = !DILocation(line: 6820, column: 3, scope: !1963)
!1983 = !DILocation(line: 6820, column: 7, scope: !1963)
!1984 = !{!1985, !1985, i64 0}
!1985 = !{!"int", !1901, i64 0}
!1986 = !DILocation(line: 6824, column: 3, scope: !1963)
!1987 = !DILocation(line: 6824, column: 13, scope: !1963)
!1988 = !DILocation(line: 6825, column: 3, scope: !1963)
!1989 = !DILocation(line: 6825, column: 13, scope: !1963)
!1990 = !DILocation(line: 6826, column: 3, scope: !1963)
!1991 = !DILocation(line: 6826, column: 13, scope: !1963)
!1992 = !DILocation(line: 6827, column: 3, scope: !1963)
!1993 = !DILocation(line: 6827, column: 7, scope: !1963)
!1994 = !DILocation(line: 6828, column: 3, scope: !1963)
!1995 = !DILocation(line: 6828, column: 15, scope: !1963)
!1996 = !DILocation(line: 6829, column: 3, scope: !1963)
!1997 = !DILocation(line: 6829, column: 7, scope: !1963)
!1998 = !DILocation(line: 6832, column: 7, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6832, column: 7)
!2000 = !DILocation(line: 6832, column: 7, scope: !1963)
!2001 = !DILocation(line: 6833, column: 9, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !2003, file: !21, line: 6833, column: 9)
!2003 = distinct !DILexicalBlock(scope: !1999, file: !21, line: 6832, column: 16)
!2004 = !DILocation(line: 6833, column: 20, scope: !2002)
!2005 = !DILocation(line: 6833, column: 17, scope: !2002)
!2006 = !DILocation(line: 6833, column: 9, scope: !2003)
!2007 = !DILocation(line: 6833, column: 41, scope: !2002)
!2008 = !DILocation(line: 6834, column: 21, scope: !2003)
!2009 = !DILocation(line: 6834, column: 5, scope: !2003)
!2010 = !DILocation(line: 6835, column: 5, scope: !2003)
!2011 = !DILocation(line: 6842, column: 13, scope: !1963)
!2012 = !DILocation(line: 6842, column: 11, scope: !1963)
!2013 = !DILocation(line: 6843, column: 3, scope: !1963)
!2014 = !DILocation(line: 6861, column: 3, scope: !1963)
!2015 = !DILocation(line: 6862, column: 30, scope: !1963)
!2016 = !DILocation(line: 6862, column: 13, scope: !1963)
!2017 = !DILocation(line: 6862, column: 3, scope: !1963)
!2018 = !DILocation(line: 6862, column: 11, scope: !1963)
!2019 = !{!2020, !1900, i64 0}
!2020 = !{!"", !1900, i64 0, !1900, i64 8, !1900, i64 16, !1900, i64 24, !1900, i64 32, !1900, i64 40, !1900, i64 48, !1900, i64 56, !1900, i64 64, !1900, i64 72, !1900, i64 80, !1900, i64 88, !1900, i64 96, !1900, i64 104, !1900, i64 112, !1900, i64 120, !1900, i64 128, !1900, i64 136, !1900, i64 144, !1900, i64 152, !1900, i64 160, !1900, i64 168, !1900, i64 176, !1900, i64 184, !1900, i64 192, !1900, i64 200, !1900, i64 208, !1900, i64 216, !1900, i64 224, !1900, i64 232, !1900, i64 240, !1900, i64 248, !1900, i64 256, !1900, i64 264, !1900, i64 272, !1900, i64 280, !1900, i64 288, !1900, i64 296, !1900, i64 304, !1900, i64 312, !1900, i64 320, !1900, i64 328, !1900, i64 336, !1900, i64 344, !1900, i64 352, !1900, i64 360, !1900, i64 368, !1900, i64 376, !1900, i64 384, !1900, i64 392, !1900, i64 400, !1900, i64 408, !1900, i64 416, !1900, i64 424, !1900, i64 432, !1900, i64 440, !1900, i64 448, !1900, i64 456, !1900, i64 464, !1900, i64 472, !1900, i64 480, !1900, i64 488, !1900, i64 496, !1900, i64 504, !1900, i64 512, !1900, i64 520, !1900, i64 528, !1900, i64 536, !1900, i64 544, !1900, i64 552, !1900, i64 560, !1900, i64 568, !1900, i64 576, !1900, i64 584, !1900, i64 592, !1900, i64 600, !1900, i64 608, !1900, i64 616, !1900, i64 624, !1900, i64 632, !1900, i64 640, !1900, i64 648, !1900, i64 656, !1900, i64 664, !1900, i64 672, !1900, i64 680, !1900, i64 688, !1900, i64 696, !1900, i64 704, !1900, i64 712, !1900, i64 720, !1900, i64 728, !1900, i64 736, !1900, i64 744, !1900, i64 752, !1900, i64 760, !1900, i64 768, !1900, i64 776, !1900, i64 784, !1900, i64 792, !1900, i64 800, !1900, i64 808, !1900, i64 816, !1900, i64 824, !1900, i64 832, !1900, i64 840, !1900, i64 848, !1900, i64 856, !1900, i64 864}
!2021 = !DILocation(line: 6862, column: 44, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6862, column: 44)
!2023 = !DILocation(line: 6862, column: 44, scope: !1963)
!2024 = !DILocation(line: 6862, column: 64, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !21, line: 6862, column: 64)
!2026 = distinct !DILexicalBlock(scope: !2022, file: !21, line: 6862, column: 64)
!2027 = !DILocation(line: 6862, column: 64, scope: !2026)
!2028 = !DILocation(line: 6863, column: 3, scope: !1963)
!2029 = !DILocation(line: 6864, column: 13, scope: !1963)
!2030 = !DILocation(line: 6864, column: 3, scope: !1963)
!2031 = !DILocation(line: 6864, column: 11, scope: !1963)
!2032 = !{!2020, !1900, i64 8}
!2033 = !DILocation(line: 6864, column: 64, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6864, column: 64)
!2035 = !DILocation(line: 6864, column: 64, scope: !1963)
!2036 = !DILocation(line: 6864, column: 84, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2038, file: !21, line: 6864, column: 84)
!2038 = distinct !DILexicalBlock(scope: !2034, file: !21, line: 6864, column: 84)
!2039 = !DILocation(line: 6864, column: 84, scope: !2038)
!2040 = !DILocation(line: 6865, column: 3, scope: !1963)
!2041 = !DILocation(line: 6866, column: 26, scope: !1963)
!2042 = !DILocation(line: 6866, column: 3, scope: !1963)
!2043 = !DILocation(line: 6866, column: 24, scope: !1963)
!2044 = !{!2020, !1900, i64 16}
!2045 = !DILocation(line: 6866, column: 77, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6866, column: 77)
!2047 = !DILocation(line: 6866, column: 77, scope: !1963)
!2048 = !DILocation(line: 6866, column: 110, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !2050, file: !21, line: 6866, column: 110)
!2050 = distinct !DILexicalBlock(scope: !2046, file: !21, line: 6866, column: 110)
!2051 = !DILocation(line: 6866, column: 110, scope: !2050)
!2052 = !DILocation(line: 6867, column: 3, scope: !1963)
!2053 = !DILocation(line: 6868, column: 30, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6868, column: 7)
!2055 = !DILocation(line: 6868, column: 55, scope: !2054)
!2056 = !DILocation(line: 6868, column: 7, scope: !2054)
!2057 = !DILocation(line: 6868, column: 64, scope: !2054)
!2058 = !DILocation(line: 6868, column: 7, scope: !1963)
!2059 = !DILocation(line: 6868, column: 69, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2061, file: !21, line: 6868, column: 69)
!2061 = distinct !DILexicalBlock(scope: !2054, file: !21, line: 6868, column: 69)
!2062 = !DILocation(line: 6868, column: 69, scope: !2061)
!2063 = !DILocation(line: 6879, column: 61, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6879, column: 7)
!2065 = !DILocation(line: 6879, column: 7, scope: !2064)
!2066 = !DILocation(line: 6879, column: 123, scope: !2064)
!2067 = !DILocation(line: 6879, column: 7, scope: !1963)
!2068 = !DILocation(line: 6879, column: 128, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2070, file: !21, line: 6879, column: 128)
!2070 = distinct !DILexicalBlock(scope: !2064, file: !21, line: 6879, column: 128)
!2071 = !DILocation(line: 6879, column: 128, scope: !2070)
!2072 = !DILocation(line: 6883, column: 23, scope: !1963)
!2073 = !DILocation(line: 6883, column: 3, scope: !1963)
!2074 = !DILocation(line: 6883, column: 21, scope: !1963)
!2075 = !{!2020, !1900, i64 24}
!2076 = !DILocation(line: 6883, column: 43, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6883, column: 43)
!2078 = !DILocation(line: 6883, column: 43, scope: !1963)
!2079 = !DILocation(line: 6883, column: 73, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !2081, file: !21, line: 6883, column: 73)
!2081 = distinct !DILexicalBlock(scope: !2077, file: !21, line: 6883, column: 73)
!2082 = !DILocation(line: 6883, column: 73, scope: !2081)
!2083 = !DILocation(line: 6884, column: 23, scope: !1963)
!2084 = !DILocation(line: 6884, column: 3, scope: !1963)
!2085 = !DILocation(line: 6884, column: 21, scope: !1963)
!2086 = !{!2020, !1900, i64 32}
!2087 = !DILocation(line: 6884, column: 61, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6884, column: 61)
!2089 = !DILocation(line: 6884, column: 61, scope: !1963)
!2090 = !DILocation(line: 6884, column: 91, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2092, file: !21, line: 6884, column: 91)
!2092 = distinct !DILexicalBlock(scope: !2088, file: !21, line: 6884, column: 91)
!2093 = !DILocation(line: 6884, column: 91, scope: !2092)
!2094 = !DILocation(line: 6885, column: 25, scope: !1963)
!2095 = !DILocation(line: 6885, column: 3, scope: !1963)
!2096 = !DILocation(line: 6885, column: 23, scope: !1963)
!2097 = !{!2020, !1900, i64 40}
!2098 = !DILocation(line: 6885, column: 65, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6885, column: 65)
!2100 = !DILocation(line: 6885, column: 65, scope: !1963)
!2101 = !DILocation(line: 6885, column: 97, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2103, file: !21, line: 6885, column: 97)
!2103 = distinct !DILexicalBlock(scope: !2099, file: !21, line: 6885, column: 97)
!2104 = !DILocation(line: 6885, column: 97, scope: !2103)
!2105 = !DILocation(line: 6887, column: 29, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6887, column: 7)
!2107 = !DILocation(line: 6887, column: 7, scope: !2106)
!2108 = !DILocation(line: 6887, column: 38, scope: !2106)
!2109 = !DILocation(line: 6887, column: 7, scope: !1963)
!2110 = !DILocation(line: 6887, column: 43, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2112, file: !21, line: 6887, column: 43)
!2112 = distinct !DILexicalBlock(scope: !2106, file: !21, line: 6887, column: 43)
!2113 = !DILocation(line: 6887, column: 43, scope: !2112)
!2114 = !DILocation(line: 6910, column: 7, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6910, column: 7)
!2116 = !DILocation(line: 6910, column: 29, scope: !2115)
!2117 = !DILocation(line: 6910, column: 7, scope: !1963)
!2118 = !DILocation(line: 6910, column: 34, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2120, file: !21, line: 6910, column: 34)
!2120 = distinct !DILexicalBlock(scope: !2115, file: !21, line: 6910, column: 34)
!2121 = !DILocation(line: 6910, column: 34, scope: !2120)
!2122 = !DILocation(line: 6911, column: 25, scope: !1963)
!2123 = !DILocation(line: 6912, column: 7, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6912, column: 7)
!2125 = !DILocation(line: 6912, column: 27, scope: !2124)
!2126 = !DILocation(line: 6912, column: 7, scope: !1963)
!2127 = !DILocation(line: 6912, column: 32, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2129, file: !21, line: 6912, column: 32)
!2129 = distinct !DILexicalBlock(scope: !2124, file: !21, line: 6912, column: 32)
!2130 = !DILocation(line: 6912, column: 32, scope: !2129)
!2131 = !DILocation(line: 6916, column: 7, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6916, column: 7)
!2133 = !DILocation(line: 6916, column: 7, scope: !1963)
!2134 = !DILocation(line: 6917, column: 26, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !21, line: 6917, column: 9)
!2136 = distinct !DILexicalBlock(scope: !2132, file: !21, line: 6916, column: 47)
!2137 = !DILocation(line: 6917, column: 35, scope: !2135)
!2138 = !{!2020, !1900, i64 480}
!2139 = !DILocation(line: 6917, column: 51, scope: !2135)
!2140 = !{!2020, !1900, i64 464}
!2141 = !DILocation(line: 6917, column: 9, scope: !2135)
!2142 = !DILocation(line: 6917, column: 67, scope: !2135)
!2143 = !DILocation(line: 6917, column: 9, scope: !2136)
!2144 = !DILocation(line: 6917, column: 72, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !2146, file: !21, line: 6917, column: 72)
!2146 = distinct !DILexicalBlock(scope: !2135, file: !21, line: 6917, column: 72)
!2147 = !DILocation(line: 6917, column: 72, scope: !2146)
!2148 = !DILocation(line: 6918, column: 3, scope: !2136)
!2149 = !DILocation(line: 6921, column: 5, scope: !1974)
!2150 = !DILocation(line: 6921, column: 15, scope: !1974)
!2151 = !DILocation(line: 6921, column: 25, scope: !1974)
!2152 = !DILocation(line: 6921, column: 55, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !1974, file: !21, line: 6921, column: 55)
!2154 = !DILocation(line: 6921, column: 55, scope: !1974)
!2155 = !DILocation(line: 6921, column: 75, scope: !2156)
!2156 = distinct !DILexicalBlock(scope: !2157, file: !21, line: 6921, column: 75)
!2157 = distinct !DILexicalBlock(scope: !2153, file: !21, line: 6921, column: 75)
!2158 = !DILocation(line: 6921, column: 75, scope: !2157)
!2159 = !DILocation(line: 6922, column: 31, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !1974, file: !21, line: 6922, column: 9)
!2161 = !DILocation(line: 6922, column: 10, scope: !2160)
!2162 = !DILocation(line: 6922, column: 9, scope: !1974)
!2163 = !DILocation(line: 6923, column: 11, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2165, file: !21, line: 6923, column: 11)
!2165 = distinct !DILexicalBlock(scope: !2160, file: !21, line: 6922, column: 60)
!2166 = !DILocation(line: 6923, column: 11, scope: !2165)
!2167 = !DILocation(line: 6923, column: 86, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !2169, file: !21, line: 6923, column: 86)
!2169 = distinct !DILexicalBlock(scope: !2164, file: !21, line: 6923, column: 86)
!2170 = !DILocation(line: 6923, column: 86, scope: !2169)
!2171 = !DILocation(line: 6924, column: 5, scope: !2165)
!2172 = !DILocation(line: 6925, column: 3, scope: !1963)
!2173 = !DILocation(line: 6928, column: 7, scope: !2174)
!2174 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6928, column: 7)
!2175 = !DILocation(line: 6928, column: 34, scope: !2174)
!2176 = !DILocation(line: 6928, column: 7, scope: !1963)
!2177 = !DILocation(line: 6928, column: 39, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !21, line: 6928, column: 39)
!2179 = distinct !DILexicalBlock(scope: !2174, file: !21, line: 6928, column: 39)
!2180 = !DILocation(line: 6928, column: 39, scope: !2179)
!2181 = !DILocation(line: 6930, column: 7, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6930, column: 7)
!2183 = !DILocation(line: 6930, column: 35, scope: !2182)
!2184 = !DILocation(line: 6930, column: 7, scope: !1963)
!2185 = !DILocation(line: 6930, column: 40, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !21, line: 6930, column: 40)
!2187 = distinct !DILexicalBlock(scope: !2182, file: !21, line: 6930, column: 40)
!2188 = !DILocation(line: 6930, column: 40, scope: !2187)
!2189 = !DILocation(line: 6932, column: 9, scope: !1963)
!2190 = !DILocation(line: 6933, column: 9, scope: !1963)
!2191 = !DILocation(line: 6934, column: 7, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6934, column: 7)
!2193 = !DILocation(line: 6934, column: 7, scope: !1963)
!2194 = !DILocation(line: 6934, column: 61, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !21, line: 6934, column: 61)
!2196 = distinct !DILexicalBlock(scope: !2192, file: !21, line: 6934, column: 61)
!2197 = !DILocation(line: 6934, column: 61, scope: !2196)
!2198 = !DILocation(line: 6935, column: 7, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6935, column: 7)
!2200 = !DILocation(line: 6935, column: 7, scope: !1963)
!2201 = !DILocation(line: 6935, column: 55, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !21, line: 6935, column: 55)
!2203 = distinct !DILexicalBlock(scope: !2199, file: !21, line: 6935, column: 55)
!2204 = !DILocation(line: 6935, column: 55, scope: !2203)
!2205 = !DILocation(line: 6936, column: 7, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6936, column: 7)
!2207 = !DILocation(line: 6936, column: 7, scope: !1963)
!2208 = !DILocation(line: 6936, column: 57, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2210, file: !21, line: 6936, column: 57)
!2210 = distinct !DILexicalBlock(scope: !2206, file: !21, line: 6936, column: 57)
!2211 = !DILocation(line: 6936, column: 57, scope: !2210)
!2212 = !DILocation(line: 6937, column: 7, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6937, column: 7)
!2214 = !DILocation(line: 6937, column: 7, scope: !1963)
!2215 = !DILocation(line: 6937, column: 61, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2217, file: !21, line: 6937, column: 61)
!2217 = distinct !DILexicalBlock(scope: !2213, file: !21, line: 6937, column: 61)
!2218 = !DILocation(line: 6937, column: 61, scope: !2217)
!2219 = !DILocation(line: 6938, column: 9, scope: !1963)
!2220 = !DILocation(line: 6951, column: 15, scope: !1963)
!2221 = !DILocation(line: 6951, column: 13, scope: !1963)
!2222 = !DILocation(line: 6951, column: 34, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6951, column: 34)
!2224 = !DILocation(line: 6951, column: 34, scope: !1963)
!2225 = !DILocation(line: 6951, column: 56, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2227, file: !21, line: 6951, column: 56)
!2227 = distinct !DILexicalBlock(scope: !2223, file: !21, line: 6951, column: 56)
!2228 = !DILocation(line: 6951, column: 56, scope: !2227)
!2229 = !DILocation(line: 6953, column: 3, scope: !1963)
!2230 = !{!2020, !1900, i64 192}
!2231 = !DILocation(line: 6955, column: 7, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6955, column: 7)
!2233 = !DILocation(line: 6955, column: 7, scope: !1963)
!2234 = !DILocation(line: 6955, column: 64, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2236, file: !21, line: 6955, column: 64)
!2236 = distinct !DILexicalBlock(scope: !2232, file: !21, line: 6955, column: 64)
!2237 = !DILocation(line: 6955, column: 64, scope: !2236)
!2238 = !DILocation(line: 6956, column: 28, scope: !1963)
!2239 = !{!2020, !1900, i64 304}
!2240 = !DILocation(line: 6956, column: 42, scope: !1963)
!2241 = !DILocation(line: 6956, column: 15, scope: !1963)
!2242 = !DILocation(line: 6956, column: 13, scope: !1963)
!2243 = !DILocation(line: 6956, column: 61, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6956, column: 61)
!2245 = !DILocation(line: 6956, column: 61, scope: !1963)
!2246 = !DILocation(line: 6956, column: 83, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !21, line: 6956, column: 83)
!2248 = distinct !DILexicalBlock(scope: !2244, file: !21, line: 6956, column: 83)
!2249 = !DILocation(line: 6956, column: 83, scope: !2248)
!2250 = !DILocation(line: 6958, column: 3, scope: !1963)
!2251 = !DILocation(line: 6958, column: 38, scope: !1963)
!2252 = !DILocation(line: 6959, column: 32, scope: !1963)
!2253 = !DILocation(line: 6959, column: 43, scope: !1963)
!2254 = !DILocation(line: 6959, column: 15, scope: !1963)
!2255 = !DILocation(line: 6959, column: 13, scope: !1963)
!2256 = !DILocation(line: 6959, column: 68, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6959, column: 68)
!2258 = !DILocation(line: 6959, column: 68, scope: !1963)
!2259 = !DILocation(line: 6959, column: 90, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2261, file: !21, line: 6959, column: 90)
!2261 = distinct !DILexicalBlock(scope: !2257, file: !21, line: 6959, column: 90)
!2262 = !DILocation(line: 6959, column: 90, scope: !2261)
!2263 = !DILocation(line: 6961, column: 22, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6961, column: 7)
!2265 = !DILocation(line: 6961, column: 31, scope: !2264)
!2266 = !DILocation(line: 6961, column: 51, scope: !2264)
!2267 = !DILocation(line: 6961, column: 7, scope: !2264)
!2268 = !DILocation(line: 6961, column: 62, scope: !2264)
!2269 = !DILocation(line: 6961, column: 7, scope: !1963)
!2270 = !DILocation(line: 6961, column: 67, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2272, file: !21, line: 6961, column: 67)
!2272 = distinct !DILexicalBlock(scope: !2264, file: !21, line: 6961, column: 67)
!2273 = !DILocation(line: 6961, column: 67, scope: !2272)
!2274 = !DILocation(line: 6962, column: 3, scope: !1963)
!2275 = !DILocation(line: 6962, column: 38, scope: !1963)
!2276 = !DILocation(line: 6963, column: 3, scope: !1963)
!2277 = !DILocation(line: 6963, column: 38, scope: !1963)
!2278 = !DILocation(line: 6972, column: 15, scope: !1963)
!2279 = !DILocation(line: 6972, column: 13, scope: !1963)
!2280 = !DILocation(line: 6972, column: 34, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6972, column: 34)
!2282 = !DILocation(line: 6972, column: 34, scope: !1963)
!2283 = !DILocation(line: 6972, column: 56, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !21, line: 6972, column: 56)
!2285 = distinct !DILexicalBlock(scope: !2281, file: !21, line: 6972, column: 56)
!2286 = !DILocation(line: 6972, column: 56, scope: !2285)
!2287 = !DILocation(line: 6974, column: 3, scope: !1963)
!2288 = !{!2020, !1900, i64 184}
!2289 = !DILocation(line: 6976, column: 7, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6976, column: 7)
!2291 = !DILocation(line: 6976, column: 7, scope: !1963)
!2292 = !DILocation(line: 6976, column: 71, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !21, line: 6976, column: 71)
!2294 = distinct !DILexicalBlock(scope: !2290, file: !21, line: 6976, column: 71)
!2295 = !DILocation(line: 6976, column: 71, scope: !2294)
!2296 = !DILocation(line: 6977, column: 28, scope: !1963)
!2297 = !DILocation(line: 6977, column: 48, scope: !1963)
!2298 = !DILocation(line: 6977, column: 15, scope: !1963)
!2299 = !DILocation(line: 6977, column: 13, scope: !1963)
!2300 = !DILocation(line: 6977, column: 67, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6977, column: 67)
!2302 = !DILocation(line: 6977, column: 67, scope: !1963)
!2303 = !DILocation(line: 6977, column: 89, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2305, file: !21, line: 6977, column: 89)
!2305 = distinct !DILexicalBlock(scope: !2301, file: !21, line: 6977, column: 89)
!2306 = !DILocation(line: 6977, column: 89, scope: !2305)
!2307 = !DILocation(line: 6979, column: 3, scope: !1963)
!2308 = !DILocation(line: 6979, column: 38, scope: !1963)
!2309 = !DILocation(line: 6980, column: 32, scope: !1963)
!2310 = !DILocation(line: 6980, column: 43, scope: !1963)
!2311 = !DILocation(line: 6980, column: 15, scope: !1963)
!2312 = !DILocation(line: 6980, column: 13, scope: !1963)
!2313 = !DILocation(line: 6980, column: 75, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6980, column: 75)
!2315 = !DILocation(line: 6980, column: 75, scope: !1963)
!2316 = !DILocation(line: 6980, column: 97, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2318, file: !21, line: 6980, column: 97)
!2318 = distinct !DILexicalBlock(scope: !2314, file: !21, line: 6980, column: 97)
!2319 = !DILocation(line: 6980, column: 97, scope: !2318)
!2320 = !DILocation(line: 6982, column: 22, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6982, column: 7)
!2322 = !DILocation(line: 6982, column: 31, scope: !2321)
!2323 = !DILocation(line: 6982, column: 58, scope: !2321)
!2324 = !DILocation(line: 6982, column: 7, scope: !2321)
!2325 = !DILocation(line: 6982, column: 69, scope: !2321)
!2326 = !DILocation(line: 6982, column: 7, scope: !1963)
!2327 = !DILocation(line: 6982, column: 74, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2329, file: !21, line: 6982, column: 74)
!2329 = distinct !DILexicalBlock(scope: !2321, file: !21, line: 6982, column: 74)
!2330 = !DILocation(line: 6982, column: 74, scope: !2329)
!2331 = !DILocation(line: 6983, column: 3, scope: !1963)
!2332 = !DILocation(line: 6983, column: 38, scope: !1963)
!2333 = !DILocation(line: 6984, column: 3, scope: !1963)
!2334 = !DILocation(line: 6984, column: 38, scope: !1963)
!2335 = !DILocation(line: 6993, column: 15, scope: !1963)
!2336 = !DILocation(line: 6993, column: 13, scope: !1963)
!2337 = !DILocation(line: 6993, column: 34, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6993, column: 34)
!2339 = !DILocation(line: 6993, column: 34, scope: !1963)
!2340 = !DILocation(line: 6993, column: 56, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2342, file: !21, line: 6993, column: 56)
!2342 = distinct !DILexicalBlock(scope: !2338, file: !21, line: 6993, column: 56)
!2343 = !DILocation(line: 6993, column: 56, scope: !2342)
!2344 = !DILocation(line: 6995, column: 3, scope: !1963)
!2345 = !{!2020, !1900, i64 264}
!2346 = !DILocation(line: 6997, column: 7, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6997, column: 7)
!2348 = !DILocation(line: 6997, column: 7, scope: !1963)
!2349 = !DILocation(line: 6997, column: 69, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2351, file: !21, line: 6997, column: 69)
!2351 = distinct !DILexicalBlock(scope: !2347, file: !21, line: 6997, column: 69)
!2352 = !DILocation(line: 6997, column: 69, scope: !2351)
!2353 = !DILocation(line: 6998, column: 28, scope: !1963)
!2354 = !{!2020, !1900, i64 272}
!2355 = !DILocation(line: 6998, column: 51, scope: !1963)
!2356 = !DILocation(line: 6998, column: 15, scope: !1963)
!2357 = !DILocation(line: 6998, column: 13, scope: !1963)
!2358 = !DILocation(line: 6998, column: 70, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 6998, column: 70)
!2360 = !DILocation(line: 6998, column: 70, scope: !1963)
!2361 = !DILocation(line: 6998, column: 92, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !21, line: 6998, column: 92)
!2363 = distinct !DILexicalBlock(scope: !2359, file: !21, line: 6998, column: 92)
!2364 = !DILocation(line: 6998, column: 92, scope: !2363)
!2365 = !DILocation(line: 7000, column: 3, scope: !1963)
!2366 = !DILocation(line: 7000, column: 38, scope: !1963)
!2367 = !DILocation(line: 7001, column: 3, scope: !1963)
!2368 = !DILocation(line: 7001, column: 38, scope: !1963)
!2369 = !DILocation(line: 7010, column: 83, scope: !1963)
!2370 = !{!2020, !1900, i64 520}
!2371 = !DILocation(line: 7010, column: 111, scope: !1963)
!2372 = !{!2020, !1900, i64 160}
!2373 = !DILocation(line: 7010, column: 138, scope: !1963)
!2374 = !DILocation(line: 7010, column: 160, scope: !1963)
!2375 = !{!2020, !1900, i64 824}
!2376 = !DILocation(line: 7010, column: 15, scope: !1963)
!2377 = !DILocation(line: 7010, column: 13, scope: !1963)
!2378 = !DILocation(line: 7010, column: 184, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7010, column: 184)
!2380 = !DILocation(line: 7010, column: 184, scope: !1963)
!2381 = !DILocation(line: 7010, column: 206, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2383, file: !21, line: 7010, column: 206)
!2383 = distinct !DILexicalBlock(scope: !2379, file: !21, line: 7010, column: 206)
!2384 = !DILocation(line: 7010, column: 206, scope: !2383)
!2385 = !DILocation(line: 7012, column: 37, scope: !1963)
!2386 = !DILocation(line: 7012, column: 48, scope: !1963)
!2387 = !{!2020, !1900, i64 776}
!2388 = !DILocation(line: 7012, column: 3, scope: !1963)
!2389 = !DILocation(line: 7013, column: 22, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7013, column: 7)
!2391 = !DILocation(line: 7013, column: 31, scope: !2390)
!2392 = !DILocation(line: 7013, column: 53, scope: !2390)
!2393 = !DILocation(line: 7013, column: 7, scope: !2390)
!2394 = !DILocation(line: 7013, column: 64, scope: !2390)
!2395 = !DILocation(line: 7013, column: 7, scope: !1963)
!2396 = !DILocation(line: 7013, column: 69, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !21, line: 7013, column: 69)
!2398 = distinct !DILexicalBlock(scope: !2390, file: !21, line: 7013, column: 69)
!2399 = !DILocation(line: 7013, column: 69, scope: !2398)
!2400 = !DILocation(line: 7014, column: 3, scope: !1963)
!2401 = !DILocation(line: 7014, column: 38, scope: !1963)
!2402 = !DILocation(line: 7023, column: 115, scope: !1963)
!2403 = !{!2020, !1900, i64 248}
!2404 = !DILocation(line: 7023, column: 152, scope: !1963)
!2405 = !DILocation(line: 7023, column: 179, scope: !1963)
!2406 = !DILocation(line: 7023, column: 201, scope: !1963)
!2407 = !{!2020, !1900, i64 832}
!2408 = !DILocation(line: 7023, column: 15, scope: !1963)
!2409 = !DILocation(line: 7023, column: 13, scope: !1963)
!2410 = !DILocation(line: 7023, column: 226, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7023, column: 226)
!2412 = !DILocation(line: 7023, column: 226, scope: !1963)
!2413 = !DILocation(line: 7023, column: 248, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2415, file: !21, line: 7023, column: 248)
!2415 = distinct !DILexicalBlock(scope: !2411, file: !21, line: 7023, column: 248)
!2416 = !DILocation(line: 7023, column: 248, scope: !2415)
!2417 = !DILocation(line: 7025, column: 7, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7025, column: 7)
!2419 = !{!2020, !1900, i64 144}
!2420 = !{!2421, !1900, i64 264}
!2421 = !{!"_typeobject", !2422, i64 0, !1900, i64 24, !2424, i64 32, !2424, i64 40, !1900, i64 48, !2424, i64 56, !1900, i64 64, !1900, i64 72, !1900, i64 80, !1900, i64 88, !1900, i64 96, !1900, i64 104, !1900, i64 112, !1900, i64 120, !1900, i64 128, !1900, i64 136, !1900, i64 144, !1900, i64 152, !1900, i64 160, !2424, i64 168, !1900, i64 176, !1900, i64 184, !1900, i64 192, !1900, i64 200, !2424, i64 208, !1900, i64 216, !1900, i64 224, !1900, i64 232, !1900, i64 240, !1900, i64 248, !1900, i64 256, !1900, i64 264, !1900, i64 272, !1900, i64 280, !2424, i64 288, !1900, i64 296, !1900, i64 304, !1900, i64 312, !1900, i64 320, !1900, i64 328, !1900, i64 336, !1900, i64 344, !1900, i64 352, !1900, i64 360, !1900, i64 368, !1900, i64 376, !1985, i64 384, !1900, i64 392, !1900, i64 400}
!2422 = !{!"", !2423, i64 0, !2424, i64 16}
!2423 = !{!"_object", !2424, i64 0, !1900, i64 8}
!2424 = !{!"long", !1901, i64 0}
!2425 = !{!2020, !1900, i64 512}
!2426 = !DILocation(line: 7025, column: 117, scope: !2418)
!2427 = !DILocation(line: 7025, column: 7, scope: !1963)
!2428 = !DILocation(line: 7025, column: 122, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2430, file: !21, line: 7025, column: 122)
!2430 = distinct !DILexicalBlock(scope: !2418, file: !21, line: 7025, column: 122)
!2431 = !DILocation(line: 7025, column: 122, scope: !2430)
!2432 = !DILocation(line: 7026, column: 3, scope: !1963)
!2433 = !DILocation(line: 7026, column: 38, scope: !1963)
!2434 = !DILocation(line: 7027, column: 19, scope: !1963)
!2435 = !DILocation(line: 7027, column: 3, scope: !1963)
!2436 = !DILocation(line: 7036, column: 109, scope: !1963)
!2437 = !{!2020, !1900, i64 240}
!2438 = !DILocation(line: 7036, column: 140, scope: !1963)
!2439 = !DILocation(line: 7036, column: 167, scope: !1963)
!2440 = !DILocation(line: 7036, column: 189, scope: !1963)
!2441 = !{!2020, !1900, i64 840}
!2442 = !DILocation(line: 7036, column: 15, scope: !1963)
!2443 = !DILocation(line: 7036, column: 13, scope: !1963)
!2444 = !DILocation(line: 7036, column: 214, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7036, column: 214)
!2446 = !DILocation(line: 7036, column: 214, scope: !1963)
!2447 = !DILocation(line: 7036, column: 236, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2449, file: !21, line: 7036, column: 236)
!2449 = distinct !DILexicalBlock(scope: !2445, file: !21, line: 7036, column: 236)
!2450 = !DILocation(line: 7036, column: 236, scope: !2449)
!2451 = !DILocation(line: 7038, column: 7, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7038, column: 7)
!2453 = !{!2020, !1900, i64 368}
!2454 = !DILocation(line: 7038, column: 111, scope: !2452)
!2455 = !DILocation(line: 7038, column: 7, scope: !1963)
!2456 = !DILocation(line: 7038, column: 116, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !21, line: 7038, column: 116)
!2458 = distinct !DILexicalBlock(scope: !2452, file: !21, line: 7038, column: 116)
!2459 = !DILocation(line: 7038, column: 116, scope: !2458)
!2460 = !DILocation(line: 7039, column: 3, scope: !1963)
!2461 = !DILocation(line: 7039, column: 38, scope: !1963)
!2462 = !DILocation(line: 7040, column: 19, scope: !1963)
!2463 = !DILocation(line: 7040, column: 3, scope: !1963)
!2464 = !DILocation(line: 7047, column: 122, scope: !1963)
!2465 = !{!2020, !1900, i64 224}
!2466 = !DILocation(line: 7047, column: 164, scope: !1963)
!2467 = !DILocation(line: 7047, column: 191, scope: !1963)
!2468 = !DILocation(line: 7047, column: 213, scope: !1963)
!2469 = !{!2020, !1900, i64 848}
!2470 = !DILocation(line: 7047, column: 15, scope: !1963)
!2471 = !DILocation(line: 7047, column: 13, scope: !1963)
!2472 = !DILocation(line: 7047, column: 238, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7047, column: 238)
!2474 = !DILocation(line: 7047, column: 238, scope: !1963)
!2475 = !DILocation(line: 7047, column: 260, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !21, line: 7047, column: 260)
!2477 = distinct !DILexicalBlock(scope: !2473, file: !21, line: 7047, column: 260)
!2478 = !DILocation(line: 7047, column: 260, scope: !2477)
!2479 = !DILocation(line: 7049, column: 7, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7049, column: 7)
!2481 = !{!2020, !1900, i64 624}
!2482 = !DILocation(line: 7049, column: 120, scope: !2480)
!2483 = !DILocation(line: 7049, column: 7, scope: !1963)
!2484 = !DILocation(line: 7049, column: 125, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2486, file: !21, line: 7049, column: 125)
!2486 = distinct !DILexicalBlock(scope: !2480, file: !21, line: 7049, column: 125)
!2487 = !DILocation(line: 7049, column: 125, scope: !2486)
!2488 = !DILocation(line: 7050, column: 3, scope: !1963)
!2489 = !DILocation(line: 7050, column: 38, scope: !1963)
!2490 = !DILocation(line: 7051, column: 19, scope: !1963)
!2491 = !DILocation(line: 7051, column: 3, scope: !1963)
!2492 = !DILocation(line: 7059, column: 124, scope: !1963)
!2493 = !{!2020, !1900, i64 232}
!2494 = !DILocation(line: 7059, column: 168, scope: !1963)
!2495 = !DILocation(line: 7059, column: 195, scope: !1963)
!2496 = !DILocation(line: 7059, column: 217, scope: !1963)
!2497 = !{!2020, !1900, i64 856}
!2498 = !DILocation(line: 7059, column: 15, scope: !1963)
!2499 = !DILocation(line: 7059, column: 13, scope: !1963)
!2500 = !DILocation(line: 7059, column: 242, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7059, column: 242)
!2502 = !DILocation(line: 7059, column: 242, scope: !1963)
!2503 = !DILocation(line: 7059, column: 264, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2505, file: !21, line: 7059, column: 264)
!2505 = distinct !DILexicalBlock(scope: !2501, file: !21, line: 7059, column: 264)
!2506 = !DILocation(line: 7059, column: 264, scope: !2505)
!2507 = !DILocation(line: 7061, column: 7, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7061, column: 7)
!2509 = !{!2020, !1900, i64 656}
!2510 = !DILocation(line: 7061, column: 122, scope: !2508)
!2511 = !DILocation(line: 7061, column: 7, scope: !1963)
!2512 = !DILocation(line: 7061, column: 127, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2514, file: !21, line: 7061, column: 127)
!2514 = distinct !DILexicalBlock(scope: !2508, file: !21, line: 7061, column: 127)
!2515 = !DILocation(line: 7061, column: 127, scope: !2514)
!2516 = !DILocation(line: 7062, column: 3, scope: !1963)
!2517 = !DILocation(line: 7062, column: 38, scope: !1963)
!2518 = !DILocation(line: 7063, column: 19, scope: !1963)
!2519 = !DILocation(line: 7063, column: 3, scope: !1963)
!2520 = !DILocation(line: 7070, column: 96, scope: !1963)
!2521 = !{!2020, !1900, i64 600}
!2522 = !DILocation(line: 7070, column: 135, scope: !1963)
!2523 = !DILocation(line: 7070, column: 162, scope: !1963)
!2524 = !DILocation(line: 7070, column: 184, scope: !1963)
!2525 = !{!2020, !1900, i64 864}
!2526 = !DILocation(line: 7070, column: 15, scope: !1963)
!2527 = !DILocation(line: 7070, column: 13, scope: !1963)
!2528 = !DILocation(line: 7070, column: 209, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7070, column: 209)
!2530 = !DILocation(line: 7070, column: 209, scope: !1963)
!2531 = !DILocation(line: 7070, column: 231, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2533, file: !21, line: 7070, column: 231)
!2533 = distinct !DILexicalBlock(scope: !2529, file: !21, line: 7070, column: 231)
!2534 = !DILocation(line: 7070, column: 231, scope: !2533)
!2535 = !DILocation(line: 7072, column: 22, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !1963, file: !21, line: 7072, column: 7)
!2537 = !DILocation(line: 7072, column: 31, scope: !2536)
!2538 = !DILocation(line: 7072, column: 64, scope: !2536)
!2539 = !DILocation(line: 7072, column: 7, scope: !2536)
!2540 = !DILocation(line: 7072, column: 75, scope: !2536)
!2541 = !DILocation(line: 7072, column: 7, scope: !1963)
!2542 = !DILocation(line: 7072, column: 80, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2544, file: !21, line: 7072, column: 80)
!2544 = distinct !DILexicalBlock(scope: !2536, file: !21, line: 7072, column: 80)
!2545 = !DILocation(line: 7072, column: 80, scope: !2544)
!2546 = !DILocation(line: 7073, column: 3, scope: !1963)
!2547 = !DILocation(line: 7073, column: 38, scope: !1963)
!2548 = !DILocation(line: 7085, column: 3, scope: !1963)
!2549 = !DILocation(line: 7086, column: 3, scope: !1963)
!2550 = !DILocation(line: 7087, column: 3, scope: !1963)
!2551 = !DILocation(line: 7088, column: 3, scope: !1963)
!2552 = !DILocation(line: 7089, column: 7, scope: !1979)
!2553 = !DILocation(line: 7089, column: 7, scope: !1963)
!2554 = !DILocation(line: 7090, column: 9, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !1978, file: !21, line: 7090, column: 9)
!2556 = !DILocation(line: 7090, column: 17, scope: !2555)
!2557 = !DILocation(line: 7090, column: 20, scope: !2555)
!2558 = !DILocation(line: 7090, column: 9, scope: !1978)
!2559 = !DILocation(line: 7091, column: 50, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2555, file: !21, line: 7090, column: 43)
!2561 = !DILocation(line: 7091, column: 65, scope: !2560)
!2562 = !DILocation(line: 7091, column: 79, scope: !2560)
!2563 = !DILocation(line: 7091, column: 7, scope: !2560)
!2564 = !DILocation(line: 7092, column: 5, scope: !2560)
!2565 = !DILocation(line: 7094, column: 5, scope: !1978)
!2566 = !DILocation(line: 7094, column: 5, scope: !1977)
!2567 = !DILocation(line: 7094, column: 5, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !1977, file: !21, line: 7094, column: 5)
!2569 = !DILocation(line: 7094, column: 5, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2568, file: !21, line: 7094, column: 5)
!2571 = !DILocation(line: 7104, column: 3, scope: !1978)
!2572 = !DILocation(line: 7104, column: 15, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !1979, file: !21, line: 7104, column: 14)
!2574 = !DILocation(line: 7104, column: 14, scope: !1979)
!2575 = !DILocation(line: 7105, column: 21, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2573, file: !21, line: 7104, column: 33)
!2577 = !DILocation(line: 7105, column: 5, scope: !2576)
!2578 = !DILocation(line: 7106, column: 3, scope: !2576)
!2579 = !DILocation(line: 7107, column: 3, scope: !1963)
!2580 = !DILocation(line: 7110, column: 11, scope: !1963)
!2581 = !DILocation(line: 7110, column: 19, scope: !1963)
!2582 = !DILocation(line: 7110, column: 10, scope: !1963)
!2583 = !DILocation(line: 7110, column: 3, scope: !1963)
!2584 = !DILocation(line: 7116, column: 1, scope: !1963)
!2585 = !DILocation(line: 6743, column: 5, scope: !761)
!2586 = !DILocation(line: 6743, column: 16, scope: !761)
!2587 = !DILocation(line: 6743, column: 54, scope: !761)
!2588 = !DILocation(line: 6743, column: 75, scope: !761)
!2589 = !{!2590, !1900, i64 16}
!2590 = !{!"_ts", !1900, i64 0, !1900, i64 8, !1900, i64 16, !1985, i64 24, !1985, i64 28, !1985, i64 32, !1985, i64 36, !1985, i64 40, !1985, i64 44, !1985, i64 48, !1900, i64 56, !1900, i64 64, !1900, i64 72, !1900, i64 80, !1900, i64 88, !1900, i64 96, !1900, i64 104, !1900, i64 112, !1900, i64 120, !1900, i64 128, !1985, i64 136, !1900, i64 144, !2424, i64 152, !2424, i64 160, !1985, i64 168, !1900, i64 176, !1900, i64 184, !1900, i64 192, !1985, i64 200, !1900, i64 208, !1900, i64 216, !1900, i64 224, !2424, i64 232, !2424, i64 240, !2591, i64 248, !1900, i64 296, !1900, i64 304, !1900, i64 312, !2594, i64 320, !2595, i64 336}
!2591 = !{!"", !1900, i64 0, !2592, i64 8}
!2592 = !{!"_line_offsets", !1985, i64 0, !1985, i64 4, !1985, i64 8, !2593, i64 16}
!2593 = !{!"_opaque", !1985, i64 0, !1900, i64 8, !1900, i64 16}
!2594 = !{!"_err_stackitem", !1900, i64 0, !1900, i64 8}
!2595 = !{!"_PyCFrame", !1901, i64 0, !1900, i64 8, !1900, i64 16}
!2596 = !DILocation(line: 6743, column: 29, scope: !761)
!2597 = !{!2424, !2424, i64 0}
!2598 = !DILocation(line: 6744, column: 9, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !761, file: !21, line: 6744, column: 9)
!2600 = !DILocation(line: 6744, column: 29, scope: !2599)
!2601 = !DILocation(line: 6744, column: 9, scope: !761)
!2602 = !DILocation(line: 6745, column: 31, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2599, file: !21, line: 6744, column: 36)
!2604 = !DILocation(line: 6745, column: 29, scope: !2603)
!2605 = !DILocation(line: 6746, column: 17, scope: !2603)
!2606 = !DILocation(line: 6746, column: 16, scope: !2603)
!2607 = !DILocation(line: 6746, column: 9, scope: !2603)
!2608 = !DILocation(line: 6747, column: 16, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2599, file: !21, line: 6747, column: 16)
!2610 = !DILocation(line: 6747, column: 16, scope: !2599)
!2611 = !DILocation(line: 6757, column: 13, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2609, file: !21, line: 6755, column: 5)
!2613 = !DILocation(line: 6756, column: 9, scope: !2612)
!2614 = !DILocation(line: 6759, column: 9, scope: !2612)
!2615 = !DILocation(line: 6761, column: 5, scope: !761)
!2616 = !DILocation(line: 6762, column: 1, scope: !761)
!2617 = distinct !DISubprogram(name: "Py_INCREF", scope: !6, file: !6, line: 491, type: !62, scopeLine: 492, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2618)
!2618 = !{!2619}
!2619 = !DILocalVariable(name: "op", arg: 1, scope: !2617, file: !6, line: 491, type: !28)
!2620 = !DILocation(line: 491, column: 40, scope: !2617)
!2621 = !DILocation(line: 502, column: 5, scope: !2617)
!2622 = !DILocation(line: 502, column: 9, scope: !2617)
!2623 = !DILocation(line: 502, column: 18, scope: !2617)
!2624 = !{!2423, !2424, i64 0}
!2625 = !DILocation(line: 504, column: 1, scope: !2617)
!2626 = !DISubprogram(name: "PyObject_GetAttrString", scope: !6, file: !6, line: 289, type: !2627, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!28, !28, !54}
!2629 = !DISubprogram(name: "PyModule_NewObject", scope: !683, file: !683, line: 16, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2630 = distinct !DISubprogram(name: "Py_DECREF", scope: !6, file: !6, line: 533, type: !62, scopeLine: 534, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2631)
!2631 = !{!2632}
!2632 = !DILocalVariable(name: "op", arg: 1, scope: !2630, file: !6, line: 533, type: !28)
!2633 = !DILocation(line: 533, column: 40, scope: !2630)
!2634 = !DILocation(line: 537, column: 11, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2630, file: !6, line: 537, column: 9)
!2636 = !DILocation(line: 537, column: 15, scope: !2635)
!2637 = !DILocation(line: 537, column: 9, scope: !2635)
!2638 = !DILocation(line: 537, column: 25, scope: !2635)
!2639 = !DILocation(line: 537, column: 9, scope: !2630)
!2640 = !DILocation(line: 538, column: 21, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2635, file: !6, line: 537, column: 31)
!2642 = !DILocation(line: 538, column: 9, scope: !2641)
!2643 = !DILocation(line: 539, column: 5, scope: !2641)
!2644 = !DILocation(line: 540, column: 1, scope: !2630)
!2645 = !DISubprogram(name: "PyModule_GetDict", scope: !683, file: !683, line: 23, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2646 = distinct !DISubprogram(name: "__Pyx_copy_spec_to_module", scope: !21, file: !21, line: 6766, type: !2647, scopeLine: 6768, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2649)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!7, !28, !28, !54, !54, !7}
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656}
!2650 = !DILocalVariable(name: "spec", arg: 1, scope: !2646, file: !21, line: 6766, type: !28)
!2651 = !DILocalVariable(name: "moddict", arg: 2, scope: !2646, file: !21, line: 6766, type: !28)
!2652 = !DILocalVariable(name: "from_name", arg: 3, scope: !2646, file: !21, line: 6766, type: !54)
!2653 = !DILocalVariable(name: "to_name", arg: 4, scope: !2646, file: !21, line: 6766, type: !54)
!2654 = !DILocalVariable(name: "allow_none", arg: 5, scope: !2646, file: !21, line: 6766, type: !7)
!2655 = !DILocalVariable(name: "value", scope: !2646, file: !21, line: 6769, type: !28)
!2656 = !DILocalVariable(name: "result", scope: !2646, file: !21, line: 6770, type: !7)
!2657 = !DILocation(line: 6766, column: 66, scope: !2646)
!2658 = !DILocation(line: 6766, column: 82, scope: !2646)
!2659 = !DILocation(line: 6766, column: 103, scope: !2646)
!2660 = !DILocation(line: 6766, column: 126, scope: !2646)
!2661 = !DILocation(line: 6766, column: 139, scope: !2646)
!2662 = !DILocation(line: 6769, column: 5, scope: !2646)
!2663 = !DILocation(line: 6769, column: 15, scope: !2646)
!2664 = !DILocation(line: 6769, column: 46, scope: !2646)
!2665 = !DILocation(line: 6769, column: 52, scope: !2646)
!2666 = !DILocation(line: 6769, column: 23, scope: !2646)
!2667 = !DILocation(line: 6770, column: 5, scope: !2646)
!2668 = !DILocation(line: 6770, column: 9, scope: !2646)
!2669 = !DILocation(line: 6771, column: 9, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2646, file: !21, line: 6771, column: 9)
!2671 = !DILocation(line: 6771, column: 9, scope: !2646)
!2672 = !DILocation(line: 6772, column: 13, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !21, line: 6772, column: 13)
!2674 = distinct !DILexicalBlock(scope: !2670, file: !21, line: 6771, column: 24)
!2675 = !DILocation(line: 6772, column: 24, scope: !2673)
!2676 = !DILocation(line: 6772, column: 27, scope: !2673)
!2677 = !DILocation(line: 6772, column: 33, scope: !2673)
!2678 = !DILocation(line: 6772, column: 13, scope: !2674)
!2679 = !DILocation(line: 6776, column: 43, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2673, file: !21, line: 6772, column: 45)
!2681 = !DILocation(line: 6776, column: 52, scope: !2680)
!2682 = !DILocation(line: 6776, column: 61, scope: !2680)
!2683 = !DILocation(line: 6776, column: 22, scope: !2680)
!2684 = !DILocation(line: 6776, column: 20, scope: !2680)
!2685 = !DILocation(line: 6778, column: 9, scope: !2680)
!2686 = !DILocation(line: 6779, column: 9, scope: !2674)
!2687 = !DILocation(line: 6780, column: 5, scope: !2674)
!2688 = !DILocation(line: 6780, column: 39, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2670, file: !21, line: 6780, column: 16)
!2690 = !DILocation(line: 6780, column: 16, scope: !2689)
!2691 = !DILocation(line: 6780, column: 16, scope: !2670)
!2692 = !DILocation(line: 6781, column: 9, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2689, file: !21, line: 6780, column: 62)
!2694 = !DILocation(line: 6782, column: 5, scope: !2693)
!2695 = !DILocation(line: 6783, column: 16, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2689, file: !21, line: 6782, column: 12)
!2697 = !DILocation(line: 6785, column: 12, scope: !2646)
!2698 = !DILocation(line: 6786, column: 1, scope: !2646)
!2699 = !DILocation(line: 6785, column: 5, scope: !2646)
!2700 = distinct !DISubprogram(name: "Py_XDECREF", scope: !6, file: !6, line: 599, type: !62, scopeLine: 600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2701)
!2701 = !{!2702}
!2702 = !DILocalVariable(name: "op", arg: 1, scope: !2700, file: !6, line: 599, type: !28)
!2703 = !DILocation(line: 599, column: 41, scope: !2700)
!2704 = !DILocation(line: 601, column: 9, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2700, file: !6, line: 601, column: 9)
!2706 = !DILocation(line: 601, column: 12, scope: !2705)
!2707 = !DILocation(line: 601, column: 9, scope: !2700)
!2708 = !DILocation(line: 602, column: 9, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2705, file: !6, line: 601, column: 25)
!2710 = !DILocation(line: 603, column: 5, scope: !2709)
!2711 = !DILocation(line: 604, column: 1, scope: !2700)
!2712 = !DISubprogram(name: "PyInterpreterState_GetID", scope: !2713, file: !2713, line: 36, type: !2714, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2713 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pystate.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "47bcf81a3ade86878f3e119bcc367bce")
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!766, !1706}
!2716 = !DISubprogram(name: "PyThreadState_Get", scope: !2713, file: !2713, line: 60, type: !2717, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!1698}
!2719 = !DISubprogram(name: "PyErr_SetString", scope: !2720, file: !2720, line: 13, type: !2721, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2720 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pyerrors.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "b73e4b5df7a17ee42bc3fece0535c8f9")
!2721 = !DISubroutineType(types: !2722)
!2722 = !{null, !28, !54}
!2723 = !DISubprogram(name: "_Py_Dealloc", scope: !6, file: !6, line: 477, type: !62, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2724 = !DISubprogram(name: "PyDict_SetItemString", scope: !2725, file: !2725, line: 58, type: !2726, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2725 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/dictobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "572218e19a764bc436837bf1e74340b3")
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!7, !28, !54, !28}
!2728 = !DISubprogram(name: "PyErr_ExceptionMatches", scope: !2720, file: !2720, line: 39, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2729 = !DISubprogram(name: "PyErr_Clear", scope: !2720, file: !2720, line: 18, type: !413, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2730 = !DISubprogram(name: "PyImport_AddModule", scope: !2731, file: !2731, line: 43, type: !2732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2731 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/import.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "283acfa302bf06babd574eee608cf1a1")
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!28, !54}
!2734 = !DISubprogram(name: "PyObject_SetAttrString", scope: !6, file: !6, line: 290, type: !2726, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2735 = distinct !DISubprogram(name: "__Pyx_check_binary_version", scope: !21, file: !21, line: 12051, type: !2736, scopeLine: 12051, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2738)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!7, !238, !238, !7}
!2738 = !{!2739, !2740, !2741, !2742, !2744}
!2739 = !DILocalVariable(name: "ct_version", arg: 1, scope: !2735, file: !21, line: 12051, type: !238)
!2740 = !DILocalVariable(name: "rt_version", arg: 2, scope: !2735, file: !21, line: 12051, type: !238)
!2741 = !DILocalVariable(name: "allow_newer", arg: 3, scope: !2735, file: !21, line: 12051, type: !7)
!2742 = !DILocalVariable(name: "MAJOR_MINOR", scope: !2735, file: !21, line: 12052, type: !2743)
!2743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !238)
!2744 = !DILocalVariable(name: "message", scope: !2745, file: !21, line: 12058, type: !2746)
!2745 = distinct !DILexicalBlock(scope: !2735, file: !21, line: 12057, column: 5)
!2746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1600, elements: !2747)
!2747 = !{!2748}
!2748 = !DISubrange(count: 200)
!2749 = !DILocation(line: 12051, column: 53, scope: !2735)
!2750 = !DILocation(line: 12051, column: 79, scope: !2735)
!2751 = !DILocation(line: 12051, column: 95, scope: !2735)
!2752 = !DILocation(line: 12052, column: 5, scope: !2735)
!2753 = !DILocation(line: 12052, column: 25, scope: !2735)
!2754 = !DILocation(line: 12053, column: 10, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2735, file: !21, line: 12053, column: 9)
!2756 = !DILocation(line: 12053, column: 21, scope: !2755)
!2757 = !DILocation(line: 12053, column: 40, scope: !2755)
!2758 = !DILocation(line: 12053, column: 51, scope: !2755)
!2759 = !DILocation(line: 12053, column: 36, scope: !2755)
!2760 = !DILocation(line: 12053, column: 9, scope: !2735)
!2761 = !DILocation(line: 12054, column: 9, scope: !2755)
!2762 = !DILocation(line: 12055, column: 9, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2735, file: !21, line: 12055, column: 9)
!2764 = !DILocation(line: 0, scope: !2763)
!2765 = !DILocation(line: 12055, column: 9, scope: !2735)
!2766 = !DILocation(line: 12056, column: 9, scope: !2763)
!2767 = !DILocation(line: 12058, column: 9, scope: !2745)
!2768 = !DILocation(line: 12058, column: 14, scope: !2745)
!2769 = !DILocation(line: 12059, column: 23, scope: !2745)
!2770 = !DILocation(line: 12064, column: 31, scope: !2745)
!2771 = !DILocation(line: 12064, column: 42, scope: !2745)
!2772 = !DILocation(line: 12064, column: 24, scope: !2745)
!2773 = !DILocation(line: 12064, column: 58, scope: !2745)
!2774 = !DILocation(line: 12064, column: 69, scope: !2745)
!2775 = !DILocation(line: 12064, column: 76, scope: !2745)
!2776 = !DILocation(line: 12064, column: 50, scope: !2745)
!2777 = !DILocation(line: 12066, column: 25, scope: !2745)
!2778 = !DILocation(line: 12066, column: 24, scope: !2745)
!2779 = !DILocation(line: 12067, column: 31, scope: !2745)
!2780 = !DILocation(line: 12067, column: 42, scope: !2745)
!2781 = !DILocation(line: 12067, column: 24, scope: !2745)
!2782 = !DILocation(line: 12067, column: 58, scope: !2745)
!2783 = !DILocation(line: 12067, column: 69, scope: !2745)
!2784 = !DILocation(line: 12067, column: 76, scope: !2745)
!2785 = !DILocation(line: 12067, column: 50, scope: !2745)
!2786 = !DILocation(line: 12059, column: 9, scope: !2745)
!2787 = !DILocation(line: 12069, column: 35, scope: !2745)
!2788 = !DILocation(line: 12069, column: 16, scope: !2745)
!2789 = !DILocation(line: 12069, column: 9, scope: !2745)
!2790 = !DILocation(line: 12070, column: 5, scope: !2735)
!2791 = !DILocation(line: 12071, column: 1, scope: !2735)
!2792 = distinct !DISubprogram(name: "__Pyx_get_runtime_version", scope: !21, file: !21, line: 12027, type: !2793, scopeLine: 12027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!238}
!2795 = !DILocation(line: 12029, column: 12, scope: !2792)
!2796 = !DILocation(line: 12029, column: 23, scope: !2792)
!2797 = !DILocation(line: 12029, column: 5, scope: !2792)
!2798 = !DISubprogram(name: "PyTuple_New", scope: !2799, file: !2799, line: 30, type: !2800, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2799 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/tupleobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "ef7731d859c7588a602c086240aebf11")
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!28, !34}
!2802 = !DISubprogram(name: "PyBytes_FromStringAndSize", scope: !2803, file: !2803, line: 34, type: !2804, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2803 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/bytesobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "4bc8d34477ea1dd228eae99f80a8951b")
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!28, !54, !34}
!2806 = !DISubprogram(name: "PyUnicode_FromStringAndSize", scope: !544, file: !544, line: 130, type: !2804, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2807 = distinct !DISubprogram(name: "__pyx_CyFunction_init", scope: !21, file: !21, line: 10836, type: !122, scopeLine: 10836, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2808)
!2808 = !{!2809}
!2809 = !DILocalVariable(name: "module", arg: 1, scope: !2807, file: !21, line: 10836, type: !28)
!2810 = !DILocation(line: 10836, column: 44, scope: !2807)
!2811 = !DILocation(line: 10840, column: 5, scope: !2807)
!2812 = !DILocation(line: 10841, column: 28, scope: !2807)
!2813 = !DILocation(line: 10841, column: 5, scope: !2807)
!2814 = !DILocation(line: 10841, column: 26, scope: !2807)
!2815 = !{!2020, !1900, i64 48}
!2816 = !DILocation(line: 10843, column: 9, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2807, file: !21, line: 10843, column: 9)
!2818 = !DILocation(line: 10843, column: 9, scope: !2807)
!2819 = !DILocation(line: 10844, column: 9, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2817, file: !21, line: 10843, column: 49)
!2821 = !DILocation(line: 10846, column: 5, scope: !2807)
!2822 = !DILocation(line: 10847, column: 1, scope: !2807)
!2823 = distinct !DISubprogram(name: "__Pyx_InitConstants", scope: !21, file: !21, line: 6479, type: !762, scopeLine: 6479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2824)
!2824 = !{!2825}
!2825 = !DILabel(scope: !2823, name: "__pyx_L1_error", file: !21, line: 6489)
!2826 = !DILocation(line: 6480, column: 38, scope: !2823)
!2827 = !{!2828, !1900, i64 0}
!2828 = !{!"", !1900, i64 0, !1900, i64 8, !1900, i64 16, !1900, i64 24, !1985, i64 32}
!2829 = !DILocation(line: 6481, column: 48, scope: !2823)
!2830 = !DILocation(line: 6481, column: 45, scope: !2823)
!2831 = !{!2828, !1900, i64 8}
!2832 = !DILocation(line: 6482, column: 7, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2823, file: !21, line: 6482, column: 7)
!2834 = !DILocation(line: 6482, column: 45, scope: !2833)
!2835 = !DILocation(line: 6482, column: 7, scope: !2823)
!2836 = !DILocation(line: 6482, column: 50, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2838, file: !21, line: 6482, column: 50)
!2838 = distinct !DILexicalBlock(scope: !2833, file: !21, line: 6482, column: 50)
!2839 = !DILocation(line: 6482, column: 50, scope: !2838)
!2840 = !DILocation(line: 6483, column: 17, scope: !2823)
!2841 = !DILocation(line: 6483, column: 3, scope: !2823)
!2842 = !DILocation(line: 6483, column: 15, scope: !2823)
!2843 = !{!2020, !1900, i64 720}
!2844 = !DILocation(line: 6483, column: 40, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2823, file: !21, line: 6483, column: 40)
!2846 = !DILocation(line: 6483, column: 40, scope: !2823)
!2847 = !DILocation(line: 6483, column: 64, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2849, file: !21, line: 6483, column: 64)
!2849 = distinct !DILexicalBlock(scope: !2845, file: !21, line: 6483, column: 64)
!2850 = !DILocation(line: 6483, column: 64, scope: !2849)
!2851 = !DILocation(line: 6484, column: 17, scope: !2823)
!2852 = !DILocation(line: 6484, column: 3, scope: !2823)
!2853 = !DILocation(line: 6484, column: 15, scope: !2823)
!2854 = !{!2020, !1900, i64 728}
!2855 = !DILocation(line: 6484, column: 40, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2823, file: !21, line: 6484, column: 40)
!2857 = !DILocation(line: 6484, column: 40, scope: !2823)
!2858 = !DILocation(line: 6484, column: 64, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2860, file: !21, line: 6484, column: 64)
!2860 = distinct !DILexicalBlock(scope: !2856, file: !21, line: 6484, column: 64)
!2861 = !DILocation(line: 6484, column: 64, scope: !2860)
!2862 = !DILocation(line: 6485, column: 25, scope: !2823)
!2863 = !DILocation(line: 6485, column: 3, scope: !2823)
!2864 = !DILocation(line: 6485, column: 23, scope: !2823)
!2865 = !{!2020, !1900, i64 736}
!2866 = !DILocation(line: 6485, column: 57, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2823, file: !21, line: 6485, column: 57)
!2868 = !DILocation(line: 6485, column: 57, scope: !2823)
!2869 = !DILocation(line: 6485, column: 89, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2871, file: !21, line: 6485, column: 89)
!2871 = distinct !DILexicalBlock(scope: !2867, file: !21, line: 6485, column: 89)
!2872 = !DILocation(line: 6485, column: 89, scope: !2871)
!2873 = !DILocation(line: 6486, column: 25, scope: !2823)
!2874 = !DILocation(line: 6486, column: 3, scope: !2823)
!2875 = !DILocation(line: 6486, column: 23, scope: !2823)
!2876 = !{!2020, !1900, i64 744}
!2877 = !DILocation(line: 6486, column: 57, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2823, file: !21, line: 6486, column: 57)
!2879 = !DILocation(line: 6486, column: 57, scope: !2823)
!2880 = !DILocation(line: 6486, column: 89, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2882, file: !21, line: 6486, column: 89)
!2882 = distinct !DILexicalBlock(scope: !2878, file: !21, line: 6486, column: 89)
!2883 = !DILocation(line: 6486, column: 89, scope: !2882)
!2884 = !DILocation(line: 6487, column: 25, scope: !2823)
!2885 = !DILocation(line: 6487, column: 3, scope: !2823)
!2886 = !DILocation(line: 6487, column: 23, scope: !2823)
!2887 = !{!2020, !1900, i64 752}
!2888 = !DILocation(line: 6487, column: 57, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2823, file: !21, line: 6487, column: 57)
!2890 = !DILocation(line: 6487, column: 57, scope: !2823)
!2891 = !DILocation(line: 6487, column: 89, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2893, file: !21, line: 6487, column: 89)
!2893 = distinct !DILexicalBlock(scope: !2889, file: !21, line: 6487, column: 89)
!2894 = !DILocation(line: 6487, column: 89, scope: !2893)
!2895 = !DILocation(line: 6488, column: 3, scope: !2823)
!2896 = !DILocation(line: 6489, column: 3, scope: !2823)
!2897 = !DILocation(line: 6490, column: 3, scope: !2823)
!2898 = !DILocation(line: 6491, column: 1, scope: !2823)
!2899 = distinct !DISubprogram(name: "__Pyx_InitGlobals", scope: !21, file: !21, line: 6494, type: !762, scopeLine: 6494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2900 = !DILocation(line: 6495, column: 3, scope: !2899)
!2901 = !DISubprogram(name: "PyObject_SetAttr", scope: !6, file: !6, line: 293, type: !191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2902 = !DISubprogram(name: "PyImport_GetModuleDict", scope: !2731, file: !2731, line: 34, type: !692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2903 = !DISubprogram(name: "PyDict_GetItemString", scope: !2725, file: !2725, line: 57, type: !2627, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2904 = distinct !DISubprogram(name: "__Pyx_InitCachedBuiltins", scope: !21, file: !21, line: 6379, type: !762, scopeLine: 6379, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2905)
!2905 = !{!2906}
!2906 = !DILabel(scope: !2904, name: "__pyx_L1_error", file: !21, line: 6382)
!2907 = !DILocation(line: 6380, column: 43, scope: !2904)
!2908 = !{!2020, !1900, i64 424}
!2909 = !DILocation(line: 6380, column: 22, scope: !2904)
!2910 = !DILocation(line: 6380, column: 20, scope: !2904)
!2911 = !DILocation(line: 6380, column: 63, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2904, file: !21, line: 6380, column: 62)
!2913 = !DILocation(line: 6380, column: 62, scope: !2904)
!2914 = !DILocation(line: 6380, column: 81, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2916, file: !21, line: 6380, column: 81)
!2916 = distinct !DILexicalBlock(scope: !2912, file: !21, line: 6380, column: 81)
!2917 = !DILocation(line: 6380, column: 81, scope: !2916)
!2918 = !DILocation(line: 6381, column: 3, scope: !2904)
!2919 = !DILocation(line: 6382, column: 3, scope: !2904)
!2920 = !DILocation(line: 6383, column: 3, scope: !2904)
!2921 = !DILocation(line: 6384, column: 1, scope: !2904)
!2922 = distinct !DISubprogram(name: "__Pyx_InitCachedConstants", scope: !21, file: !21, line: 6387, type: !762, scopeLine: 6387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2923)
!2923 = !{!2924}
!2924 = !DILabel(scope: !2922, name: "__pyx_L1_error", file: !21, line: 6473)
!2925 = !DILocation(line: 6398, column: 36, scope: !2922)
!2926 = !DILocation(line: 6398, column: 57, scope: !2922)
!2927 = !DILocation(line: 6398, column: 78, scope: !2922)
!2928 = !DILocation(line: 6398, column: 20, scope: !2922)
!2929 = !DILocation(line: 6398, column: 3, scope: !2922)
!2930 = !DILocation(line: 6398, column: 18, scope: !2922)
!2931 = !{!2020, !1900, i64 760}
!2932 = !DILocation(line: 6398, column: 104, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6398, column: 104)
!2934 = !DILocation(line: 6398, column: 104, scope: !2922)
!2935 = !DILocation(line: 6398, column: 131, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2937, file: !21, line: 6398, column: 131)
!2937 = distinct !DILexicalBlock(scope: !2933, file: !21, line: 6398, column: 131)
!2938 = !DILocation(line: 6398, column: 131, scope: !2937)
!2939 = !DILocation(line: 6409, column: 36, scope: !2922)
!2940 = !{!2020, !1900, i64 536}
!2941 = !DILocation(line: 6409, column: 59, scope: !2922)
!2942 = !{!2020, !1900, i64 336}
!2943 = !DILocation(line: 6409, column: 20, scope: !2922)
!2944 = !DILocation(line: 6409, column: 3, scope: !2922)
!2945 = !DILocation(line: 6409, column: 18, scope: !2922)
!2946 = !{!2020, !1900, i64 768}
!2947 = !DILocation(line: 6409, column: 81, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6409, column: 81)
!2949 = !DILocation(line: 6409, column: 81, scope: !2922)
!2950 = !DILocation(line: 6409, column: 108, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !21, line: 6409, column: 108)
!2952 = distinct !DILexicalBlock(scope: !2948, file: !21, line: 6409, column: 108)
!2953 = !DILocation(line: 6409, column: 108, scope: !2952)
!2954 = !DILocation(line: 6412, column: 92, scope: !2922)
!2955 = !DILocation(line: 6412, column: 111, scope: !2922)
!2956 = !DILocation(line: 6412, column: 130, scope: !2922)
!2957 = !DILocation(line: 6412, column: 149, scope: !2922)
!2958 = !DILocation(line: 6412, column: 165, scope: !2922)
!2959 = !DILocation(line: 6412, column: 184, scope: !2922)
!2960 = !DILocation(line: 6412, column: 203, scope: !2922)
!2961 = !{!2020, !1900, i64 168}
!2962 = !DILocation(line: 6412, column: 234, scope: !2922)
!2963 = !DILocation(line: 6412, column: 260, scope: !2922)
!2964 = !DILocation(line: 6412, column: 33, scope: !2922)
!2965 = !DILocation(line: 6412, column: 3, scope: !2922)
!2966 = !DILocation(line: 6412, column: 20, scope: !2922)
!2967 = !DILocation(line: 6412, column: 284, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6412, column: 284)
!2969 = !DILocation(line: 6412, column: 284, scope: !2922)
!2970 = !DILocation(line: 6412, column: 313, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2972, file: !21, line: 6412, column: 313)
!2972 = distinct !DILexicalBlock(scope: !2968, file: !21, line: 6412, column: 313)
!2973 = !DILocation(line: 6412, column: 313, scope: !2972)
!2974 = !DILocation(line: 6413, column: 20, scope: !2922)
!2975 = !DILocation(line: 6413, column: 3, scope: !2922)
!2976 = !DILocation(line: 6413, column: 18, scope: !2922)
!2977 = !DILocation(line: 6413, column: 50, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6413, column: 50)
!2979 = !DILocation(line: 6413, column: 50, scope: !2922)
!2980 = !DILocation(line: 6413, column: 77, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2982, file: !21, line: 6413, column: 77)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !21, line: 6413, column: 77)
!2983 = !DILocation(line: 6413, column: 77, scope: !2982)
!2984 = !DILocation(line: 6424, column: 36, scope: !2922)
!2985 = !{!2020, !1900, i64 640}
!2986 = !DILocation(line: 6424, column: 52, scope: !2922)
!2987 = !{!2020, !1900, i64 504}
!2988 = !DILocation(line: 6424, column: 20, scope: !2922)
!2989 = !DILocation(line: 6424, column: 3, scope: !2922)
!2990 = !DILocation(line: 6424, column: 18, scope: !2922)
!2991 = !{!2020, !1900, i64 784}
!2992 = !DILocation(line: 6424, column: 78, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6424, column: 78)
!2994 = !DILocation(line: 6424, column: 78, scope: !2922)
!2995 = !DILocation(line: 6424, column: 105, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !21, line: 6424, column: 105)
!2997 = distinct !DILexicalBlock(scope: !2993, file: !21, line: 6424, column: 105)
!2998 = !DILocation(line: 6424, column: 105, scope: !2997)
!2999 = !DILocation(line: 6427, column: 93, scope: !2922)
!3000 = !DILocation(line: 6427, column: 112, scope: !2922)
!3001 = !DILocation(line: 6427, column: 131, scope: !2922)
!3002 = !DILocation(line: 6427, column: 150, scope: !2922)
!3003 = !DILocation(line: 6427, column: 166, scope: !2922)
!3004 = !DILocation(line: 6427, column: 185, scope: !2922)
!3005 = !DILocation(line: 6427, column: 204, scope: !2922)
!3006 = !DILocation(line: 6427, column: 235, scope: !2922)
!3007 = !DILocation(line: 6427, column: 262, scope: !2922)
!3008 = !DILocation(line: 6427, column: 34, scope: !2922)
!3009 = !DILocation(line: 6427, column: 3, scope: !2922)
!3010 = !DILocation(line: 6427, column: 21, scope: !2922)
!3011 = !DILocation(line: 6427, column: 286, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6427, column: 286)
!3013 = !DILocation(line: 6427, column: 286, scope: !2922)
!3014 = !DILocation(line: 6427, column: 316, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !21, line: 6427, column: 316)
!3016 = distinct !DILexicalBlock(scope: !3012, file: !21, line: 6427, column: 316)
!3017 = !DILocation(line: 6427, column: 316, scope: !3016)
!3018 = !DILocation(line: 6436, column: 37, scope: !2922)
!3019 = !DILocation(line: 6436, column: 53, scope: !2922)
!3020 = !{!2020, !1900, i64 384}
!3021 = !DILocation(line: 6436, column: 69, scope: !2922)
!3022 = !{!2020, !1900, i64 672}
!3023 = !DILocation(line: 6436, column: 94, scope: !2922)
!3024 = !DILocation(line: 6436, column: 115, scope: !2922)
!3025 = !{!2020, !1900, i64 544}
!3026 = !DILocation(line: 6436, column: 21, scope: !2922)
!3027 = !DILocation(line: 6436, column: 3, scope: !2922)
!3028 = !DILocation(line: 6436, column: 19, scope: !2922)
!3029 = !{!2020, !1900, i64 792}
!3030 = !DILocation(line: 6436, column: 145, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6436, column: 145)
!3032 = !DILocation(line: 6436, column: 145, scope: !2922)
!3033 = !DILocation(line: 6436, column: 173, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !21, line: 6436, column: 173)
!3035 = distinct !DILexicalBlock(scope: !3031, file: !21, line: 6436, column: 173)
!3036 = !DILocation(line: 6436, column: 173, scope: !3035)
!3037 = !DILocation(line: 6439, column: 93, scope: !2922)
!3038 = !DILocation(line: 6439, column: 112, scope: !2922)
!3039 = !DILocation(line: 6439, column: 131, scope: !2922)
!3040 = !DILocation(line: 6439, column: 150, scope: !2922)
!3041 = !DILocation(line: 6439, column: 167, scope: !2922)
!3042 = !DILocation(line: 6439, column: 186, scope: !2922)
!3043 = !DILocation(line: 6439, column: 205, scope: !2922)
!3044 = !DILocation(line: 6439, column: 236, scope: !2922)
!3045 = !DILocation(line: 6439, column: 257, scope: !2922)
!3046 = !DILocation(line: 6439, column: 34, scope: !2922)
!3047 = !DILocation(line: 6439, column: 3, scope: !2922)
!3048 = !DILocation(line: 6439, column: 21, scope: !2922)
!3049 = !DILocation(line: 6439, column: 281, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6439, column: 281)
!3051 = !DILocation(line: 6439, column: 281, scope: !2922)
!3052 = !DILocation(line: 6439, column: 311, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3054, file: !21, line: 6439, column: 311)
!3054 = distinct !DILexicalBlock(scope: !3050, file: !21, line: 6439, column: 311)
!3055 = !DILocation(line: 6439, column: 311, scope: !3054)
!3056 = !DILocation(line: 6446, column: 37, scope: !2922)
!3057 = !DILocation(line: 6446, column: 53, scope: !2922)
!3058 = !{!2020, !1900, i64 664}
!3059 = !DILocation(line: 6446, column: 70, scope: !2922)
!3060 = !{!2020, !1900, i64 352}
!3061 = !DILocation(line: 6446, column: 88, scope: !2922)
!3062 = !{!2020, !1900, i64 704}
!3063 = !DILocation(line: 6446, column: 21, scope: !2922)
!3064 = !DILocation(line: 6446, column: 3, scope: !2922)
!3065 = !DILocation(line: 6446, column: 19, scope: !2922)
!3066 = !{!2020, !1900, i64 800}
!3067 = !DILocation(line: 6446, column: 117, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6446, column: 117)
!3069 = !DILocation(line: 6446, column: 117, scope: !2922)
!3070 = !DILocation(line: 6446, column: 145, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3072, file: !21, line: 6446, column: 145)
!3072 = distinct !DILexicalBlock(scope: !3068, file: !21, line: 6446, column: 145)
!3073 = !DILocation(line: 6446, column: 145, scope: !3072)
!3074 = !DILocation(line: 6449, column: 93, scope: !2922)
!3075 = !DILocation(line: 6449, column: 112, scope: !2922)
!3076 = !DILocation(line: 6449, column: 131, scope: !2922)
!3077 = !DILocation(line: 6449, column: 150, scope: !2922)
!3078 = !DILocation(line: 6449, column: 167, scope: !2922)
!3079 = !DILocation(line: 6449, column: 186, scope: !2922)
!3080 = !DILocation(line: 6449, column: 205, scope: !2922)
!3081 = !{!2020, !1900, i64 680}
!3082 = !DILocation(line: 6449, column: 230, scope: !2922)
!3083 = !DILocation(line: 6449, column: 258, scope: !2922)
!3084 = !DILocation(line: 6449, column: 34, scope: !2922)
!3085 = !DILocation(line: 6449, column: 3, scope: !2922)
!3086 = !DILocation(line: 6449, column: 21, scope: !2922)
!3087 = !DILocation(line: 6449, column: 282, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6449, column: 282)
!3089 = !DILocation(line: 6449, column: 282, scope: !2922)
!3090 = !DILocation(line: 6449, column: 312, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !21, line: 6449, column: 312)
!3092 = distinct !DILexicalBlock(scope: !3088, file: !21, line: 6449, column: 312)
!3093 = !DILocation(line: 6449, column: 312, scope: !3092)
!3094 = !DILocation(line: 6457, column: 37, scope: !2922)
!3095 = !DILocation(line: 6457, column: 53, scope: !2922)
!3096 = !{!2020, !1900, i64 584}
!3097 = !DILocation(line: 6457, column: 21, scope: !2922)
!3098 = !DILocation(line: 6457, column: 3, scope: !2922)
!3099 = !DILocation(line: 6457, column: 19, scope: !2922)
!3100 = !{!2020, !1900, i64 808}
!3101 = !DILocation(line: 6457, column: 79, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6457, column: 79)
!3103 = !DILocation(line: 6457, column: 79, scope: !2922)
!3104 = !DILocation(line: 6457, column: 107, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !21, line: 6457, column: 107)
!3106 = distinct !DILexicalBlock(scope: !3102, file: !21, line: 6457, column: 107)
!3107 = !DILocation(line: 6457, column: 107, scope: !3106)
!3108 = !DILocation(line: 6460, column: 93, scope: !2922)
!3109 = !DILocation(line: 6460, column: 112, scope: !2922)
!3110 = !DILocation(line: 6460, column: 131, scope: !2922)
!3111 = !DILocation(line: 6460, column: 150, scope: !2922)
!3112 = !DILocation(line: 6460, column: 167, scope: !2922)
!3113 = !DILocation(line: 6460, column: 186, scope: !2922)
!3114 = !DILocation(line: 6460, column: 205, scope: !2922)
!3115 = !DILocation(line: 6460, column: 230, scope: !2922)
!3116 = !DILocation(line: 6460, column: 261, scope: !2922)
!3117 = !DILocation(line: 6460, column: 34, scope: !2922)
!3118 = !DILocation(line: 6460, column: 3, scope: !2922)
!3119 = !DILocation(line: 6460, column: 21, scope: !2922)
!3120 = !DILocation(line: 6460, column: 285, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6460, column: 285)
!3122 = !DILocation(line: 6460, column: 285, scope: !2922)
!3123 = !DILocation(line: 6460, column: 315, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !21, line: 6460, column: 315)
!3125 = distinct !DILexicalBlock(scope: !3121, file: !21, line: 6460, column: 315)
!3126 = !DILocation(line: 6460, column: 315, scope: !3125)
!3127 = !DILocation(line: 6467, column: 37, scope: !2922)
!3128 = !{!2020, !1900, i64 592}
!3129 = !DILocation(line: 6467, column: 57, scope: !2922)
!3130 = !{!2020, !1900, i64 568}
!3131 = !DILocation(line: 6467, column: 81, scope: !2922)
!3132 = !DILocation(line: 6467, column: 102, scope: !2922)
!3133 = !{!2020, !1900, i64 560}
!3134 = !DILocation(line: 6467, column: 129, scope: !2922)
!3135 = !{!2020, !1900, i64 576}
!3136 = !DILocation(line: 6467, column: 21, scope: !2922)
!3137 = !DILocation(line: 6467, column: 3, scope: !2922)
!3138 = !DILocation(line: 6467, column: 19, scope: !2922)
!3139 = !{!2020, !1900, i64 816}
!3140 = !DILocation(line: 6467, column: 156, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6467, column: 156)
!3142 = !DILocation(line: 6467, column: 156, scope: !2922)
!3143 = !DILocation(line: 6467, column: 184, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !21, line: 6467, column: 184)
!3145 = distinct !DILexicalBlock(scope: !3141, file: !21, line: 6467, column: 184)
!3146 = !DILocation(line: 6467, column: 184, scope: !3145)
!3147 = !DILocation(line: 6470, column: 93, scope: !2922)
!3148 = !DILocation(line: 6470, column: 112, scope: !2922)
!3149 = !DILocation(line: 6470, column: 131, scope: !2922)
!3150 = !DILocation(line: 6470, column: 150, scope: !2922)
!3151 = !DILocation(line: 6470, column: 167, scope: !2922)
!3152 = !DILocation(line: 6470, column: 186, scope: !2922)
!3153 = !DILocation(line: 6470, column: 205, scope: !2922)
!3154 = !DILocation(line: 6470, column: 230, scope: !2922)
!3155 = !DILocation(line: 6470, column: 266, scope: !2922)
!3156 = !DILocation(line: 6470, column: 34, scope: !2922)
!3157 = !DILocation(line: 6470, column: 3, scope: !2922)
!3158 = !DILocation(line: 6470, column: 21, scope: !2922)
!3159 = !DILocation(line: 6470, column: 290, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !2922, file: !21, line: 6470, column: 290)
!3161 = !DILocation(line: 6470, column: 290, scope: !2922)
!3162 = !DILocation(line: 6470, column: 320, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3164, file: !21, line: 6470, column: 320)
!3164 = distinct !DILexicalBlock(scope: !3160, file: !21, line: 6470, column: 320)
!3165 = !DILocation(line: 6470, column: 320, scope: !3164)
!3166 = !DILocation(line: 6472, column: 3, scope: !2922)
!3167 = !DILocation(line: 6473, column: 3, scope: !2922)
!3168 = !DILocation(line: 6475, column: 3, scope: !2922)
!3169 = !DILocation(line: 6476, column: 1, scope: !2922)
!3170 = distinct !DISubprogram(name: "__Pyx_modinit_global_init_code", scope: !21, file: !21, line: 6507, type: !762, scopeLine: 6507, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3171 = !DILocation(line: 6512, column: 3, scope: !3170)
!3172 = distinct !DISubprogram(name: "__Pyx_modinit_variable_export_code", scope: !21, file: !21, line: 6515, type: !762, scopeLine: 6515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3173 = !DILocation(line: 6520, column: 3, scope: !3172)
!3174 = distinct !DISubprogram(name: "__Pyx_modinit_function_export_code", scope: !21, file: !21, line: 6523, type: !762, scopeLine: 6523, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3175)
!3175 = !{!3176, !3177, !3178, !3179}
!3176 = !DILocalVariable(name: "__pyx_lineno", scope: !3174, file: !21, line: 6525, type: !7)
!3177 = !DILocalVariable(name: "__pyx_filename", scope: !3174, file: !21, line: 6526, type: !54)
!3178 = !DILocalVariable(name: "__pyx_clineno", scope: !3174, file: !21, line: 6527, type: !7)
!3179 = !DILabel(scope: !3174, name: "__pyx_L1_error", file: !21, line: 6536)
!3180 = !DILocation(line: 6525, column: 3, scope: !3174)
!3181 = !DILocation(line: 6525, column: 7, scope: !3174)
!3182 = !DILocation(line: 6526, column: 3, scope: !3174)
!3183 = !DILocation(line: 6526, column: 15, scope: !3174)
!3184 = !DILocation(line: 6527, column: 3, scope: !3174)
!3185 = !DILocation(line: 6527, column: 7, scope: !3174)
!3186 = !DILocation(line: 6530, column: 7, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3174, file: !21, line: 6530, column: 7)
!3188 = !DILocation(line: 6530, column: 262, scope: !3187)
!3189 = !DILocation(line: 6530, column: 7, scope: !3174)
!3190 = !DILocation(line: 6530, column: 267, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3192, file: !21, line: 6530, column: 267)
!3192 = distinct !DILexicalBlock(scope: !3187, file: !21, line: 6530, column: 267)
!3193 = !DILocation(line: 6530, column: 267, scope: !3192)
!3194 = !DILocation(line: 6531, column: 7, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3174, file: !21, line: 6531, column: 7)
!3196 = !DILocation(line: 6531, column: 141, scope: !3195)
!3197 = !DILocation(line: 6531, column: 7, scope: !3174)
!3198 = !DILocation(line: 6531, column: 146, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !21, line: 6531, column: 146)
!3200 = distinct !DILexicalBlock(scope: !3195, file: !21, line: 6531, column: 146)
!3201 = !DILocation(line: 6531, column: 146, scope: !3200)
!3202 = !DILocation(line: 6532, column: 7, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3174, file: !21, line: 6532, column: 7)
!3204 = !DILocation(line: 6532, column: 170, scope: !3203)
!3205 = !DILocation(line: 6532, column: 7, scope: !3174)
!3206 = !DILocation(line: 6532, column: 175, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3208, file: !21, line: 6532, column: 175)
!3208 = distinct !DILexicalBlock(scope: !3203, file: !21, line: 6532, column: 175)
!3209 = !DILocation(line: 6532, column: 175, scope: !3208)
!3210 = !DILocation(line: 6533, column: 7, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3174, file: !21, line: 6533, column: 7)
!3212 = !DILocation(line: 6533, column: 196, scope: !3211)
!3213 = !DILocation(line: 6533, column: 7, scope: !3174)
!3214 = !DILocation(line: 6533, column: 201, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3216, file: !21, line: 6533, column: 201)
!3216 = distinct !DILexicalBlock(scope: !3211, file: !21, line: 6533, column: 201)
!3217 = !DILocation(line: 6533, column: 201, scope: !3216)
!3218 = !DILocation(line: 6535, column: 3, scope: !3174)
!3219 = !DILocation(line: 6536, column: 3, scope: !3174)
!3220 = !DILocation(line: 6538, column: 3, scope: !3174)
!3221 = !DILocation(line: 6539, column: 1, scope: !3174)
!3222 = distinct !DISubprogram(name: "__Pyx_modinit_type_init_code", scope: !21, file: !21, line: 6541, type: !762, scopeLine: 6541, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3223)
!3223 = !{!3224, !3225, !3226, !3227}
!3224 = !DILocalVariable(name: "__pyx_lineno", scope: !3222, file: !21, line: 6543, type: !7)
!3225 = !DILocalVariable(name: "__pyx_filename", scope: !3222, file: !21, line: 6544, type: !54)
!3226 = !DILocalVariable(name: "__pyx_clineno", scope: !3222, file: !21, line: 6545, type: !7)
!3227 = !DILabel(scope: !3222, name: "__pyx_L1_error", file: !21, line: 6581)
!3228 = !DILocation(line: 6543, column: 3, scope: !3222)
!3229 = !DILocation(line: 6543, column: 7, scope: !3222)
!3230 = !DILocation(line: 6544, column: 3, scope: !3222)
!3231 = !DILocation(line: 6544, column: 15, scope: !3222)
!3232 = !DILocation(line: 6545, column: 3, scope: !3222)
!3233 = !DILocation(line: 6545, column: 7, scope: !3222)
!3234 = !DILocation(line: 6548, column: 45, scope: !3222)
!3235 = !DILocation(line: 6549, column: 55, scope: !3222)
!3236 = !{!3237, !1900, i64 0}
!3237 = !{!"__pyx_vtabstruct_6Cython_4Plex_3DFA_StateMap", !1900, i64 0, !1900, i64 8, !1900, i64 16}
!3238 = !DILocation(line: 6550, column: 68, scope: !3222)
!3239 = !{!3237, !1900, i64 8}
!3240 = !DILocation(line: 6551, column: 53, scope: !3222)
!3241 = !{!3237, !1900, i64 16}
!3242 = !DILocation(line: 6556, column: 3, scope: !3222)
!3243 = !DILocation(line: 6556, column: 43, scope: !3222)
!3244 = !DILocation(line: 6561, column: 26, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3222, file: !21, line: 6561, column: 7)
!3246 = !DILocation(line: 6561, column: 7, scope: !3245)
!3247 = !DILocation(line: 6561, column: 67, scope: !3245)
!3248 = !DILocation(line: 6561, column: 7, scope: !3222)
!3249 = !DILocation(line: 6561, column: 72, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !21, line: 6561, column: 72)
!3251 = distinct !DILexicalBlock(scope: !3245, file: !21, line: 6561, column: 72)
!3252 = !DILocation(line: 6561, column: 72, scope: !3251)
!3253 = !DILocation(line: 6567, column: 62, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3222, file: !21, line: 6567, column: 7)
!3255 = !{!2421, !2424, i64 288}
!3256 = !{!2421, !1900, i64 144}
!3257 = !DILocation(line: 0, scope: !3254)
!3258 = !DILocation(line: 6567, column: 7, scope: !3222)
!3259 = !DILocation(line: 6568, column: 5, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3254, file: !21, line: 6567, column: 210)
!3261 = !DILocation(line: 6568, column: 46, scope: !3260)
!3262 = !DILocation(line: 6568, column: 58, scope: !3260)
!3263 = !DILocation(line: 6569, column: 3, scope: !3260)
!3264 = !DILocation(line: 6571, column: 23, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3222, file: !21, line: 6571, column: 7)
!3266 = !DILocation(line: 6571, column: 64, scope: !3265)
!3267 = !DILocation(line: 6571, column: 7, scope: !3265)
!3268 = !DILocation(line: 6571, column: 107, scope: !3265)
!3269 = !DILocation(line: 6571, column: 7, scope: !3222)
!3270 = !DILocation(line: 6571, column: 112, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !21, line: 6571, column: 112)
!3272 = distinct !DILexicalBlock(scope: !3265, file: !21, line: 6571, column: 112)
!3273 = !DILocation(line: 6571, column: 112, scope: !3272)
!3274 = !DILocation(line: 6573, column: 26, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3222, file: !21, line: 6573, column: 7)
!3276 = !DILocation(line: 6573, column: 7, scope: !3275)
!3277 = !DILocation(line: 6573, column: 67, scope: !3275)
!3278 = !DILocation(line: 6573, column: 7, scope: !3222)
!3279 = !DILocation(line: 6573, column: 72, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !21, line: 6573, column: 72)
!3281 = distinct !DILexicalBlock(scope: !3275, file: !21, line: 6573, column: 72)
!3282 = !DILocation(line: 6573, column: 72, scope: !3281)
!3283 = !DILocation(line: 6575, column: 24, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3222, file: !21, line: 6575, column: 7)
!3285 = !DILocation(line: 6575, column: 33, scope: !3284)
!3286 = !{!2020, !1900, i64 216}
!3287 = !DILocation(line: 6575, column: 66, scope: !3284)
!3288 = !DILocation(line: 6575, column: 7, scope: !3284)
!3289 = !DILocation(line: 6575, column: 107, scope: !3284)
!3290 = !DILocation(line: 6575, column: 7, scope: !3222)
!3291 = !DILocation(line: 6575, column: 112, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3293, file: !21, line: 6575, column: 112)
!3293 = distinct !DILexicalBlock(scope: !3284, file: !21, line: 6575, column: 112)
!3294 = !DILocation(line: 6575, column: 112, scope: !3293)
!3295 = !DILocation(line: 6577, column: 39, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3222, file: !21, line: 6577, column: 7)
!3297 = !DILocation(line: 6577, column: 7, scope: !3296)
!3298 = !DILocation(line: 6577, column: 80, scope: !3296)
!3299 = !DILocation(line: 6577, column: 7, scope: !3222)
!3300 = !DILocation(line: 6577, column: 85, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !21, line: 6577, column: 85)
!3302 = distinct !DILexicalBlock(scope: !3296, file: !21, line: 6577, column: 85)
!3303 = !DILocation(line: 6577, column: 85, scope: !3302)
!3304 = !DILocation(line: 6580, column: 3, scope: !3222)
!3305 = !DILocation(line: 6581, column: 3, scope: !3222)
!3306 = !DILocation(line: 6583, column: 3, scope: !3222)
!3307 = !DILocation(line: 6584, column: 1, scope: !3222)
!3308 = distinct !DISubprogram(name: "__Pyx_modinit_type_import_code", scope: !21, file: !21, line: 6586, type: !762, scopeLine: 6586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3309)
!3309 = !{!3310, !3311, !3312, !3313, !3314}
!3310 = !DILocalVariable(name: "__pyx_t_1", scope: !3308, file: !21, line: 6588, type: !28)
!3311 = !DILocalVariable(name: "__pyx_lineno", scope: !3308, file: !21, line: 6589, type: !7)
!3312 = !DILocalVariable(name: "__pyx_filename", scope: !3308, file: !21, line: 6590, type: !54)
!3313 = !DILocalVariable(name: "__pyx_clineno", scope: !3308, file: !21, line: 6591, type: !7)
!3314 = !DILabel(scope: !3308, name: "__pyx_L1_error", file: !21, line: 6625)
!3315 = !DILocation(line: 6588, column: 3, scope: !3308)
!3316 = !DILocation(line: 6588, column: 13, scope: !3308)
!3317 = !DILocation(line: 6589, column: 3, scope: !3308)
!3318 = !DILocation(line: 6589, column: 7, scope: !3308)
!3319 = !DILocation(line: 6590, column: 3, scope: !3308)
!3320 = !DILocation(line: 6590, column: 15, scope: !3308)
!3321 = !DILocation(line: 6591, column: 3, scope: !3308)
!3322 = !DILocation(line: 6591, column: 7, scope: !3308)
!3323 = !DILocation(line: 6594, column: 15, scope: !3308)
!3324 = !DILocation(line: 6594, column: 13, scope: !3308)
!3325 = !DILocation(line: 6594, column: 65, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6594, column: 65)
!3327 = !DILocation(line: 6594, column: 65, scope: !3308)
!3328 = !DILocation(line: 6594, column: 87, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !21, line: 6594, column: 87)
!3330 = distinct !DILexicalBlock(scope: !3326, file: !21, line: 6594, column: 87)
!3331 = !DILocation(line: 6594, column: 87, scope: !3330)
!3332 = !DILocation(line: 6596, column: 70, scope: !3308)
!3333 = !DILocation(line: 6596, column: 47, scope: !3308)
!3334 = !DILocation(line: 6596, column: 3, scope: !3308)
!3335 = !DILocation(line: 6596, column: 45, scope: !3308)
!3336 = !{!2020, !1900, i64 56}
!3337 = !DILocation(line: 6596, column: 296, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6596, column: 295)
!3339 = !DILocation(line: 6596, column: 295, scope: !3308)
!3340 = !DILocation(line: 6596, column: 339, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !21, line: 6596, column: 339)
!3342 = distinct !DILexicalBlock(scope: !3338, file: !21, line: 6596, column: 339)
!3343 = !DILocation(line: 6596, column: 339, scope: !3342)
!3344 = !DILocation(line: 6597, column: 121, scope: !3308)
!3345 = !DILocation(line: 6597, column: 105, scope: !3308)
!3346 = !DILocation(line: 6597, column: 47, scope: !3308)
!3347 = !DILocation(line: 6597, column: 169, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6597, column: 169)
!3349 = !DILocation(line: 6597, column: 169, scope: !3308)
!3350 = !DILocation(line: 6597, column: 225, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !21, line: 6597, column: 225)
!3352 = distinct !DILexicalBlock(scope: !3348, file: !21, line: 6597, column: 225)
!3353 = !DILocation(line: 6597, column: 225, scope: !3352)
!3354 = !DILocation(line: 6598, column: 70, scope: !3308)
!3355 = !DILocation(line: 6598, column: 47, scope: !3308)
!3356 = !DILocation(line: 6598, column: 3, scope: !3308)
!3357 = !DILocation(line: 6598, column: 45, scope: !3308)
!3358 = !{!2020, !1900, i64 64}
!3359 = !DILocation(line: 6598, column: 296, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6598, column: 295)
!3361 = !DILocation(line: 6598, column: 295, scope: !3308)
!3362 = !DILocation(line: 6598, column: 339, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !21, line: 6598, column: 339)
!3364 = distinct !DILexicalBlock(scope: !3360, file: !21, line: 6598, column: 339)
!3365 = !DILocation(line: 6598, column: 339, scope: !3364)
!3366 = !DILocation(line: 6599, column: 121, scope: !3308)
!3367 = !DILocation(line: 6599, column: 105, scope: !3308)
!3368 = !DILocation(line: 6599, column: 47, scope: !3308)
!3369 = !DILocation(line: 6599, column: 169, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6599, column: 169)
!3371 = !DILocation(line: 6599, column: 169, scope: !3308)
!3372 = !DILocation(line: 6599, column: 225, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !21, line: 6599, column: 225)
!3374 = distinct !DILexicalBlock(scope: !3370, file: !21, line: 6599, column: 225)
!3375 = !DILocation(line: 6599, column: 225, scope: !3374)
!3376 = !DILocation(line: 6600, column: 68, scope: !3308)
!3377 = !DILocation(line: 6600, column: 45, scope: !3308)
!3378 = !DILocation(line: 6600, column: 3, scope: !3308)
!3379 = !DILocation(line: 6600, column: 43, scope: !3308)
!3380 = !{!2020, !1900, i64 72}
!3381 = !DILocation(line: 6600, column: 288, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6600, column: 287)
!3383 = !DILocation(line: 6600, column: 287, scope: !3308)
!3384 = !DILocation(line: 6600, column: 329, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !21, line: 6600, column: 329)
!3386 = distinct !DILexicalBlock(scope: !3382, file: !21, line: 6600, column: 329)
!3387 = !DILocation(line: 6600, column: 329, scope: !3386)
!3388 = !DILocation(line: 6601, column: 117, scope: !3308)
!3389 = !DILocation(line: 6601, column: 101, scope: !3308)
!3390 = !DILocation(line: 6601, column: 45, scope: !3308)
!3391 = !DILocation(line: 6601, column: 163, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6601, column: 163)
!3393 = !DILocation(line: 6601, column: 163, scope: !3308)
!3394 = !DILocation(line: 6601, column: 217, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !21, line: 6601, column: 217)
!3396 = distinct !DILexicalBlock(scope: !3392, file: !21, line: 6601, column: 217)
!3397 = !DILocation(line: 6601, column: 217, scope: !3396)
!3398 = !DILocation(line: 6602, column: 70, scope: !3308)
!3399 = !DILocation(line: 6602, column: 47, scope: !3308)
!3400 = !DILocation(line: 6602, column: 3, scope: !3308)
!3401 = !DILocation(line: 6602, column: 45, scope: !3308)
!3402 = !{!2020, !1900, i64 80}
!3403 = !DILocation(line: 6602, column: 296, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6602, column: 295)
!3405 = !DILocation(line: 6602, column: 295, scope: !3308)
!3406 = !DILocation(line: 6602, column: 339, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !21, line: 6602, column: 339)
!3408 = distinct !DILexicalBlock(scope: !3404, file: !21, line: 6602, column: 339)
!3409 = !DILocation(line: 6602, column: 339, scope: !3408)
!3410 = !DILocation(line: 6603, column: 121, scope: !3308)
!3411 = !DILocation(line: 6603, column: 105, scope: !3308)
!3412 = !DILocation(line: 6603, column: 47, scope: !3308)
!3413 = !DILocation(line: 6603, column: 169, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6603, column: 169)
!3415 = !DILocation(line: 6603, column: 169, scope: !3308)
!3416 = !DILocation(line: 6603, column: 225, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !21, line: 6603, column: 225)
!3418 = distinct !DILexicalBlock(scope: !3414, file: !21, line: 6603, column: 225)
!3419 = !DILocation(line: 6603, column: 225, scope: !3418)
!3420 = !DILocation(line: 6604, column: 69, scope: !3308)
!3421 = !DILocation(line: 6604, column: 46, scope: !3308)
!3422 = !DILocation(line: 6604, column: 3, scope: !3308)
!3423 = !DILocation(line: 6604, column: 44, scope: !3308)
!3424 = !{!2020, !1900, i64 88}
!3425 = !DILocation(line: 6604, column: 292, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6604, column: 291)
!3427 = !DILocation(line: 6604, column: 291, scope: !3308)
!3428 = !DILocation(line: 6604, column: 334, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !21, line: 6604, column: 334)
!3430 = distinct !DILexicalBlock(scope: !3426, file: !21, line: 6604, column: 334)
!3431 = !DILocation(line: 6604, column: 334, scope: !3430)
!3432 = !DILocation(line: 6605, column: 119, scope: !3308)
!3433 = !DILocation(line: 6605, column: 103, scope: !3308)
!3434 = !DILocation(line: 6605, column: 46, scope: !3308)
!3435 = !DILocation(line: 6605, column: 166, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6605, column: 166)
!3437 = !DILocation(line: 6605, column: 166, scope: !3308)
!3438 = !DILocation(line: 6605, column: 221, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !21, line: 6605, column: 221)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !21, line: 6605, column: 221)
!3441 = !DILocation(line: 6605, column: 221, scope: !3440)
!3442 = !DILocation(line: 6606, column: 70, scope: !3308)
!3443 = !DILocation(line: 6606, column: 47, scope: !3308)
!3444 = !DILocation(line: 6606, column: 3, scope: !3308)
!3445 = !DILocation(line: 6606, column: 45, scope: !3308)
!3446 = !{!2020, !1900, i64 96}
!3447 = !DILocation(line: 6606, column: 296, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6606, column: 295)
!3449 = !DILocation(line: 6606, column: 295, scope: !3308)
!3450 = !DILocation(line: 6606, column: 339, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !21, line: 6606, column: 339)
!3452 = distinct !DILexicalBlock(scope: !3448, file: !21, line: 6606, column: 339)
!3453 = !DILocation(line: 6606, column: 339, scope: !3452)
!3454 = !DILocation(line: 6607, column: 121, scope: !3308)
!3455 = !DILocation(line: 6607, column: 105, scope: !3308)
!3456 = !DILocation(line: 6607, column: 47, scope: !3308)
!3457 = !DILocation(line: 6607, column: 169, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6607, column: 169)
!3459 = !DILocation(line: 6607, column: 169, scope: !3308)
!3460 = !DILocation(line: 6607, column: 225, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !21, line: 6607, column: 225)
!3462 = distinct !DILexicalBlock(scope: !3458, file: !21, line: 6607, column: 225)
!3463 = !DILocation(line: 6607, column: 225, scope: !3462)
!3464 = !DILocation(line: 6608, column: 68, scope: !3308)
!3465 = !DILocation(line: 6608, column: 45, scope: !3308)
!3466 = !DILocation(line: 6608, column: 3, scope: !3308)
!3467 = !DILocation(line: 6608, column: 43, scope: !3308)
!3468 = !{!2020, !1900, i64 104}
!3469 = !DILocation(line: 6608, column: 288, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6608, column: 287)
!3471 = !DILocation(line: 6608, column: 287, scope: !3308)
!3472 = !DILocation(line: 6608, column: 329, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !21, line: 6608, column: 329)
!3474 = distinct !DILexicalBlock(scope: !3470, file: !21, line: 6608, column: 329)
!3475 = !DILocation(line: 6608, column: 329, scope: !3474)
!3476 = !DILocation(line: 6609, column: 117, scope: !3308)
!3477 = !DILocation(line: 6609, column: 101, scope: !3308)
!3478 = !DILocation(line: 6609, column: 45, scope: !3308)
!3479 = !DILocation(line: 6609, column: 163, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6609, column: 163)
!3481 = !DILocation(line: 6609, column: 163, scope: !3308)
!3482 = !DILocation(line: 6609, column: 217, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !21, line: 6609, column: 217)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !21, line: 6609, column: 217)
!3485 = !DILocation(line: 6609, column: 217, scope: !3484)
!3486 = !DILocation(line: 6610, column: 3, scope: !3308)
!3487 = !DILocation(line: 6610, column: 38, scope: !3308)
!3488 = !DILocation(line: 6611, column: 15, scope: !3308)
!3489 = !DILocation(line: 6611, column: 13, scope: !3308)
!3490 = !DILocation(line: 6611, column: 69, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6611, column: 69)
!3492 = !DILocation(line: 6611, column: 69, scope: !3308)
!3493 = !DILocation(line: 6611, column: 91, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !21, line: 6611, column: 91)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !21, line: 6611, column: 91)
!3496 = !DILocation(line: 6611, column: 91, scope: !3495)
!3497 = !DILocation(line: 6613, column: 82, scope: !3308)
!3498 = !DILocation(line: 6613, column: 59, scope: !3308)
!3499 = !DILocation(line: 6613, column: 3, scope: !3308)
!3500 = !DILocation(line: 6613, column: 57, scope: !3308)
!3501 = !{!2020, !1900, i64 112}
!3502 = !DILocation(line: 6613, column: 343, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6613, column: 342)
!3504 = !DILocation(line: 6613, column: 342, scope: !3308)
!3505 = !DILocation(line: 6613, column: 398, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3507, file: !21, line: 6613, column: 398)
!3507 = distinct !DILexicalBlock(scope: !3503, file: !21, line: 6613, column: 398)
!3508 = !DILocation(line: 6613, column: 398, scope: !3507)
!3509 = !DILocation(line: 6614, column: 145, scope: !3308)
!3510 = !DILocation(line: 6614, column: 129, scope: !3308)
!3511 = !DILocation(line: 6614, column: 59, scope: !3308)
!3512 = !DILocation(line: 6614, column: 205, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6614, column: 205)
!3514 = !DILocation(line: 6614, column: 205, scope: !3308)
!3515 = !DILocation(line: 6614, column: 273, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !21, line: 6614, column: 273)
!3517 = distinct !DILexicalBlock(scope: !3513, file: !21, line: 6614, column: 273)
!3518 = !DILocation(line: 6614, column: 273, scope: !3517)
!3519 = !DILocation(line: 6615, column: 3, scope: !3308)
!3520 = !DILocation(line: 6615, column: 38, scope: !3308)
!3521 = !DILocation(line: 6616, column: 15, scope: !3308)
!3522 = !DILocation(line: 6616, column: 13, scope: !3308)
!3523 = !DILocation(line: 6616, column: 66, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6616, column: 66)
!3525 = !DILocation(line: 6616, column: 66, scope: !3308)
!3526 = !DILocation(line: 6616, column: 88, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !21, line: 6616, column: 88)
!3528 = distinct !DILexicalBlock(scope: !3524, file: !21, line: 6616, column: 88)
!3529 = !DILocation(line: 6616, column: 88, scope: !3528)
!3530 = !DILocation(line: 6618, column: 72, scope: !3308)
!3531 = !DILocation(line: 6618, column: 49, scope: !3308)
!3532 = !DILocation(line: 6618, column: 3, scope: !3308)
!3533 = !DILocation(line: 6618, column: 47, scope: !3308)
!3534 = !{!2020, !1900, i64 120}
!3535 = !DILocation(line: 6618, column: 304, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6618, column: 303)
!3537 = !DILocation(line: 6618, column: 303, scope: !3308)
!3538 = !DILocation(line: 6618, column: 349, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !21, line: 6618, column: 349)
!3540 = distinct !DILexicalBlock(scope: !3536, file: !21, line: 6618, column: 349)
!3541 = !DILocation(line: 6618, column: 349, scope: !3540)
!3542 = !DILocation(line: 6619, column: 125, scope: !3308)
!3543 = !DILocation(line: 6619, column: 109, scope: !3308)
!3544 = !DILocation(line: 6619, column: 49, scope: !3308)
!3545 = !DILocation(line: 6619, column: 175, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6619, column: 175)
!3547 = !DILocation(line: 6619, column: 175, scope: !3308)
!3548 = !DILocation(line: 6619, column: 233, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !21, line: 6619, column: 233)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !21, line: 6619, column: 233)
!3551 = !DILocation(line: 6619, column: 233, scope: !3550)
!3552 = !DILocation(line: 6620, column: 69, scope: !3308)
!3553 = !DILocation(line: 6620, column: 46, scope: !3308)
!3554 = !DILocation(line: 6620, column: 3, scope: !3308)
!3555 = !DILocation(line: 6620, column: 44, scope: !3308)
!3556 = !{!2020, !1900, i64 128}
!3557 = !DILocation(line: 6620, column: 292, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6620, column: 291)
!3559 = !DILocation(line: 6620, column: 291, scope: !3308)
!3560 = !DILocation(line: 6620, column: 334, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !21, line: 6620, column: 334)
!3562 = distinct !DILexicalBlock(scope: !3558, file: !21, line: 6620, column: 334)
!3563 = !DILocation(line: 6620, column: 334, scope: !3562)
!3564 = !DILocation(line: 6621, column: 76, scope: !3308)
!3565 = !DILocation(line: 6621, column: 53, scope: !3308)
!3566 = !DILocation(line: 6621, column: 3, scope: !3308)
!3567 = !DILocation(line: 6621, column: 51, scope: !3308)
!3568 = !{!2020, !1900, i64 136}
!3569 = !DILocation(line: 6621, column: 320, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3308, file: !21, line: 6621, column: 319)
!3571 = !DILocation(line: 6621, column: 319, scope: !3308)
!3572 = !DILocation(line: 6621, column: 369, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !21, line: 6621, column: 369)
!3574 = distinct !DILexicalBlock(scope: !3570, file: !21, line: 6621, column: 369)
!3575 = !DILocation(line: 6621, column: 369, scope: !3574)
!3576 = !DILocation(line: 6622, column: 3, scope: !3308)
!3577 = !DILocation(line: 6622, column: 38, scope: !3308)
!3578 = !DILocation(line: 6624, column: 3, scope: !3308)
!3579 = !DILocation(line: 6625, column: 3, scope: !3308)
!3580 = !DILocation(line: 6626, column: 3, scope: !3308)
!3581 = !DILocation(line: 6628, column: 3, scope: !3308)
!3582 = !DILocation(line: 6629, column: 1, scope: !3308)
!3583 = distinct !DISubprogram(name: "__Pyx_modinit_variable_import_code", scope: !21, file: !21, line: 6631, type: !762, scopeLine: 6631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3584)
!3584 = !{!3585, !3586, !3587, !3588, !3589}
!3585 = !DILocalVariable(name: "__pyx_t_1", scope: !3583, file: !21, line: 6633, type: !28)
!3586 = !DILocalVariable(name: "__pyx_lineno", scope: !3583, file: !21, line: 6634, type: !7)
!3587 = !DILocalVariable(name: "__pyx_filename", scope: !3583, file: !21, line: 6635, type: !54)
!3588 = !DILocalVariable(name: "__pyx_clineno", scope: !3583, file: !21, line: 6636, type: !7)
!3589 = !DILabel(scope: !3583, name: "__pyx_L1_error", file: !21, line: 6649)
!3590 = !DILocation(line: 6633, column: 3, scope: !3583)
!3591 = !DILocation(line: 6633, column: 13, scope: !3583)
!3592 = !DILocation(line: 6634, column: 3, scope: !3583)
!3593 = !DILocation(line: 6634, column: 7, scope: !3583)
!3594 = !DILocation(line: 6635, column: 3, scope: !3583)
!3595 = !DILocation(line: 6635, column: 15, scope: !3583)
!3596 = !DILocation(line: 6636, column: 3, scope: !3583)
!3597 = !DILocation(line: 6636, column: 7, scope: !3583)
!3598 = !DILocation(line: 6639, column: 15, scope: !3583)
!3599 = !DILocation(line: 6639, column: 13, scope: !3583)
!3600 = !DILocation(line: 6639, column: 70, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3583, file: !21, line: 6639, column: 69)
!3602 = !DILocation(line: 6639, column: 69, scope: !3583)
!3603 = !DILocation(line: 6639, column: 81, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !21, line: 6639, column: 81)
!3605 = distinct !DILexicalBlock(scope: !3601, file: !21, line: 6639, column: 81)
!3606 = !DILocation(line: 6639, column: 81, scope: !3605)
!3607 = !DILocation(line: 6641, column: 33, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3583, file: !21, line: 6641, column: 7)
!3609 = !DILocation(line: 6641, column: 7, scope: !3608)
!3610 = !DILocation(line: 6641, column: 117, scope: !3608)
!3611 = !DILocation(line: 6641, column: 7, scope: !3583)
!3612 = !DILocation(line: 6641, column: 122, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !21, line: 6641, column: 122)
!3614 = distinct !DILexicalBlock(scope: !3608, file: !21, line: 6641, column: 122)
!3615 = !DILocation(line: 6641, column: 122, scope: !3614)
!3616 = !DILocation(line: 6642, column: 3, scope: !3583)
!3617 = !DILocation(line: 6642, column: 38, scope: !3583)
!3618 = !DILocation(line: 6643, column: 15, scope: !3583)
!3619 = !DILocation(line: 6643, column: 13, scope: !3583)
!3620 = !DILocation(line: 6643, column: 67, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3583, file: !21, line: 6643, column: 66)
!3622 = !DILocation(line: 6643, column: 66, scope: !3583)
!3623 = !DILocation(line: 6643, column: 78, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !21, line: 6643, column: 78)
!3625 = distinct !DILexicalBlock(scope: !3621, file: !21, line: 6643, column: 78)
!3626 = !DILocation(line: 6643, column: 78, scope: !3625)
!3627 = !DILocation(line: 6645, column: 33, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3583, file: !21, line: 6645, column: 7)
!3629 = !DILocation(line: 6645, column: 7, scope: !3628)
!3630 = !DILocation(line: 6645, column: 112, scope: !3628)
!3631 = !DILocation(line: 6645, column: 7, scope: !3583)
!3632 = !DILocation(line: 6645, column: 117, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !21, line: 6645, column: 117)
!3634 = distinct !DILexicalBlock(scope: !3628, file: !21, line: 6645, column: 117)
!3635 = !DILocation(line: 6645, column: 117, scope: !3634)
!3636 = !DILocation(line: 6646, column: 3, scope: !3583)
!3637 = !DILocation(line: 6646, column: 38, scope: !3583)
!3638 = !DILocation(line: 6648, column: 3, scope: !3583)
!3639 = !DILocation(line: 6649, column: 3, scope: !3583)
!3640 = !DILocation(line: 6650, column: 3, scope: !3583)
!3641 = !DILocation(line: 6652, column: 3, scope: !3583)
!3642 = !DILocation(line: 6653, column: 1, scope: !3583)
!3643 = distinct !DISubprogram(name: "__Pyx_modinit_function_import_code", scope: !21, file: !21, line: 6655, type: !762, scopeLine: 6655, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3644 = !DILocation(line: 6660, column: 3, scope: !3643)
!3645 = !DISubprogram(name: "PyList_New", scope: !3646, file: !3646, line: 28, type: !2800, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3646 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/listobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "25d04b0feb81d42e208a0c9a8e628e6b")
!3647 = distinct !DISubprogram(name: "PyList_SET_ITEM", scope: !500, file: !500, line: 44, type: !3648, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3650)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{null, !28, !34, !28}
!3650 = !{!3651, !3652, !3653, !3654}
!3651 = !DILocalVariable(name: "op", arg: 1, scope: !3647, file: !500, line: 44, type: !28)
!3652 = !DILocalVariable(name: "index", arg: 2, scope: !3647, file: !500, line: 44, type: !34)
!3653 = !DILocalVariable(name: "value", arg: 3, scope: !3647, file: !500, line: 44, type: !28)
!3654 = !DILocalVariable(name: "list", scope: !3647, file: !500, line: 45, type: !498)
!3655 = !DILocation(line: 44, column: 27, scope: !3647)
!3656 = !DILocation(line: 44, column: 42, scope: !3647)
!3657 = !DILocation(line: 44, column: 59, scope: !3647)
!3658 = !DILocation(line: 45, column: 5, scope: !3647)
!3659 = !DILocation(line: 45, column: 19, scope: !3647)
!3660 = !DILocation(line: 45, column: 26, scope: !3647)
!3661 = !DILocation(line: 46, column: 28, scope: !3647)
!3662 = !DILocation(line: 46, column: 5, scope: !3647)
!3663 = !DILocation(line: 46, column: 11, scope: !3647)
!3664 = !{!3665, !1900, i64 24}
!3665 = !{!"", !2422, i64 0, !1900, i64 24, !2424, i64 32}
!3666 = !DILocation(line: 46, column: 19, scope: !3647)
!3667 = !DILocation(line: 46, column: 26, scope: !3647)
!3668 = !DILocation(line: 47, column: 1, scope: !3647)
!3669 = distinct !DISubprogram(name: "__Pyx_Import", scope: !21, file: !21, line: 8643, type: !253, scopeLine: 8643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3670)
!3670 = !{!3671, !3672, !3673, !3674, !3675, !3676, !3677}
!3671 = !DILocalVariable(name: "name", arg: 1, scope: !3669, file: !21, line: 8643, type: !28)
!3672 = !DILocalVariable(name: "from_list", arg: 2, scope: !3669, file: !21, line: 8643, type: !28)
!3673 = !DILocalVariable(name: "level", arg: 3, scope: !3669, file: !21, line: 8643, type: !7)
!3674 = !DILocalVariable(name: "module", scope: !3669, file: !21, line: 8644, type: !28)
!3675 = !DILocalVariable(name: "empty_dict", scope: !3669, file: !21, line: 8645, type: !28)
!3676 = !DILocalVariable(name: "empty_list", scope: !3669, file: !21, line: 8646, type: !28)
!3677 = !DILabel(scope: !3669, name: "bad", file: !21, line: 8691)
!3678 = !DILocation(line: 8643, column: 41, scope: !3669)
!3679 = !DILocation(line: 8643, column: 57, scope: !3669)
!3680 = !DILocation(line: 8643, column: 72, scope: !3669)
!3681 = !DILocation(line: 8644, column: 5, scope: !3669)
!3682 = !DILocation(line: 8644, column: 15, scope: !3669)
!3683 = !DILocation(line: 8645, column: 5, scope: !3669)
!3684 = !DILocation(line: 8645, column: 15, scope: !3669)
!3685 = !DILocation(line: 8646, column: 5, scope: !3669)
!3686 = !DILocation(line: 8646, column: 15, scope: !3669)
!3687 = !DILocation(line: 8659, column: 18, scope: !3669)
!3688 = !DILocation(line: 8659, column: 16, scope: !3669)
!3689 = !DILocation(line: 8660, column: 9, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3669, file: !21, line: 8660, column: 9)
!3691 = !DILocation(line: 8660, column: 9, scope: !3669)
!3692 = !DILocation(line: 8661, column: 9, scope: !3690)
!3693 = !DILocation(line: 8664, column: 13, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !21, line: 8664, column: 13)
!3695 = distinct !DILexicalBlock(scope: !3669, file: !21, line: 8662, column: 5)
!3696 = !DILocation(line: 8664, column: 19, scope: !3694)
!3697 = !DILocation(line: 8664, column: 13, scope: !3695)
!3698 = !DILocation(line: 8667, column: 21, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !21, line: 8665, column: 57)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !21, line: 8665, column: 17)
!3701 = distinct !DILexicalBlock(scope: !3694, file: !21, line: 8664, column: 26)
!3702 = !DILocation(line: 8667, column: 27, scope: !3699)
!3703 = !DILocation(line: 8667, column: 36, scope: !3699)
!3704 = !DILocation(line: 8667, column: 48, scope: !3699)
!3705 = !DILocation(line: 8666, column: 26, scope: !3699)
!3706 = !DILocation(line: 8666, column: 24, scope: !3699)
!3707 = !DILocation(line: 8668, column: 21, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3699, file: !21, line: 8668, column: 21)
!3709 = !DILocation(line: 8668, column: 21, scope: !3699)
!3710 = !DILocation(line: 8669, column: 25, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !21, line: 8669, column: 25)
!3712 = distinct !DILexicalBlock(scope: !3708, file: !21, line: 8668, column: 40)
!3713 = !DILocation(line: 8669, column: 25, scope: !3712)
!3714 = !DILocation(line: 8670, column: 25, scope: !3711)
!3715 = !DILocation(line: 8671, column: 21, scope: !3712)
!3716 = !DILocation(line: 8672, column: 17, scope: !3712)
!3717 = !DILocation(line: 8674, column: 19, scope: !3701)
!3718 = !DILocation(line: 8675, column: 9, scope: !3701)
!3719 = !DILocation(line: 8677, column: 14, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3695, file: !21, line: 8677, column: 13)
!3721 = !DILocation(line: 8677, column: 13, scope: !3695)
!3722 = !DILocation(line: 8687, column: 17, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3720, file: !21, line: 8677, column: 22)
!3724 = !DILocation(line: 8687, column: 23, scope: !3723)
!3725 = !DILocation(line: 8687, column: 32, scope: !3723)
!3726 = !DILocation(line: 8687, column: 44, scope: !3723)
!3727 = !DILocation(line: 8687, column: 55, scope: !3723)
!3728 = !DILocation(line: 8686, column: 22, scope: !3723)
!3729 = !DILocation(line: 8686, column: 20, scope: !3723)
!3730 = !DILocation(line: 8689, column: 9, scope: !3723)
!3731 = !DILocation(line: 8690, column: 5, scope: !3695)
!3732 = !DILocation(line: 8691, column: 1, scope: !3669)
!3733 = !DILocation(line: 8692, column: 5, scope: !3669)
!3734 = !DILocation(line: 8693, column: 5, scope: !3669)
!3735 = !DILocation(line: 8697, column: 12, scope: !3669)
!3736 = !DILocation(line: 8698, column: 1, scope: !3669)
!3737 = !DILocation(line: 8697, column: 5, scope: !3669)
!3738 = distinct !DISubprogram(name: "__Pyx_ImportFrom", scope: !21, file: !21, line: 8701, type: !105, scopeLine: 8701, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3739)
!3739 = !{!3740, !3741, !3742, !3743, !3746, !3747, !3748, !3749}
!3740 = !DILocalVariable(name: "module", arg: 1, scope: !3738, file: !21, line: 8701, type: !28)
!3741 = !DILocalVariable(name: "name", arg: 2, scope: !3738, file: !21, line: 8701, type: !28)
!3742 = !DILocalVariable(name: "value", scope: !3738, file: !21, line: 8702, type: !28)
!3743 = !DILocalVariable(name: "module_name_str", scope: !3744, file: !21, line: 8704, type: !54)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !21, line: 8703, column: 75)
!3745 = distinct !DILexicalBlock(scope: !3738, file: !21, line: 8703, column: 9)
!3746 = !DILocalVariable(name: "module_name", scope: !3744, file: !21, line: 8705, type: !28)
!3747 = !DILocalVariable(name: "module_dot", scope: !3744, file: !21, line: 8706, type: !28)
!3748 = !DILocalVariable(name: "full_name", scope: !3744, file: !21, line: 8707, type: !28)
!3749 = !DILabel(scope: !3744, name: "modbad", file: !21, line: 8727)
!3750 = !DILocation(line: 8701, column: 45, scope: !3738)
!3751 = !DILocation(line: 8701, column: 63, scope: !3738)
!3752 = !DILocation(line: 8702, column: 5, scope: !3738)
!3753 = !DILocation(line: 8702, column: 15, scope: !3738)
!3754 = !DILocation(line: 8702, column: 49, scope: !3738)
!3755 = !DILocation(line: 8702, column: 57, scope: !3738)
!3756 = !DILocation(line: 8702, column: 23, scope: !3738)
!3757 = !DILocation(line: 8703, column: 9, scope: !3745)
!3758 = !DILocation(line: 8703, column: 26, scope: !3745)
!3759 = !DILocation(line: 8703, column: 52, scope: !3745)
!3760 = !DILocation(line: 8703, column: 29, scope: !3745)
!3761 = !DILocation(line: 8703, column: 9, scope: !3738)
!3762 = !DILocation(line: 8704, column: 9, scope: !3744)
!3763 = !DILocation(line: 8704, column: 21, scope: !3744)
!3764 = !DILocation(line: 8705, column: 9, scope: !3744)
!3765 = !DILocation(line: 8705, column: 19, scope: !3744)
!3766 = !DILocation(line: 8706, column: 9, scope: !3744)
!3767 = !DILocation(line: 8706, column: 19, scope: !3744)
!3768 = !DILocation(line: 8707, column: 9, scope: !3744)
!3769 = !DILocation(line: 8707, column: 19, scope: !3744)
!3770 = !DILocation(line: 8708, column: 9, scope: !3744)
!3771 = !DILocation(line: 8709, column: 44, scope: !3744)
!3772 = !DILocation(line: 8709, column: 27, scope: !3744)
!3773 = !DILocation(line: 8709, column: 25, scope: !3744)
!3774 = !DILocation(line: 8710, column: 13, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3744, file: !21, line: 8710, column: 13)
!3776 = !DILocation(line: 8710, column: 13, scope: !3744)
!3777 = !DILocation(line: 8710, column: 43, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3775, file: !21, line: 8710, column: 41)
!3779 = !DILocation(line: 8711, column: 44, scope: !3744)
!3780 = !DILocation(line: 8711, column: 23, scope: !3744)
!3781 = !DILocation(line: 8711, column: 21, scope: !3744)
!3782 = !DILocation(line: 8712, column: 13, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3744, file: !21, line: 8712, column: 13)
!3784 = !DILocation(line: 8712, column: 13, scope: !3744)
!3785 = !DILocation(line: 8712, column: 39, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3783, file: !21, line: 8712, column: 37)
!3787 = !DILocation(line: 8713, column: 39, scope: !3744)
!3788 = !DILocation(line: 8713, column: 52, scope: !3744)
!3789 = !{!2020, !1900, i64 152}
!3790 = !DILocation(line: 8713, column: 22, scope: !3744)
!3791 = !DILocation(line: 8713, column: 20, scope: !3744)
!3792 = !DILocation(line: 8714, column: 13, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3744, file: !21, line: 8714, column: 13)
!3794 = !DILocation(line: 8714, column: 13, scope: !3744)
!3795 = !DILocation(line: 8714, column: 38, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3793, file: !21, line: 8714, column: 36)
!3797 = !DILocation(line: 8715, column: 38, scope: !3744)
!3798 = !DILocation(line: 8715, column: 50, scope: !3744)
!3799 = !DILocation(line: 8715, column: 21, scope: !3744)
!3800 = !DILocation(line: 8715, column: 19, scope: !3744)
!3801 = !DILocation(line: 8716, column: 13, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3744, file: !21, line: 8716, column: 13)
!3803 = !DILocation(line: 8716, column: 13, scope: !3744)
!3804 = !DILocation(line: 8716, column: 37, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3802, file: !21, line: 8716, column: 35)
!3806 = !DILocation(line: 8725, column: 36, scope: !3744)
!3807 = !DILocation(line: 8725, column: 17, scope: !3744)
!3808 = !DILocation(line: 8725, column: 15, scope: !3744)
!3809 = !DILocation(line: 8725, column: 9, scope: !3744)
!3810 = !DILocation(line: 8727, column: 7, scope: !3744)
!3811 = !DILocation(line: 8728, column: 9, scope: !3744)
!3812 = !DILocation(line: 8729, column: 9, scope: !3744)
!3813 = !DILocation(line: 8730, column: 9, scope: !3744)
!3814 = !DILocation(line: 8731, column: 5, scope: !3745)
!3815 = !DILocation(line: 8731, column: 5, scope: !3744)
!3816 = !DILocation(line: 8732, column: 9, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3738, file: !21, line: 8732, column: 9)
!3818 = !DILocation(line: 8732, column: 9, scope: !3738)
!3819 = !DILocation(line: 8733, column: 22, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3817, file: !21, line: 8732, column: 27)
!3821 = !DILocation(line: 8737, column: 38, scope: !3820)
!3822 = !DILocation(line: 8733, column: 9, scope: !3820)
!3823 = !DILocation(line: 8739, column: 5, scope: !3820)
!3824 = !DILocation(line: 8740, column: 12, scope: !3738)
!3825 = !DILocation(line: 8741, column: 1, scope: !3738)
!3826 = !DILocation(line: 8740, column: 5, scope: !3738)
!3827 = !DISubprogram(name: "PyDict_SetItem", scope: !2725, file: !2725, line: 24, type: !191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3828 = distinct !DISubprogram(name: "__Pyx_CyFunction_New", scope: !21, file: !21, line: 10875, type: !3829, scopeLine: 10876, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3831)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!28, !261, !7, !28, !28, !28, !28, !28}
!3831 = !{!3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839}
!3832 = !DILocalVariable(name: "ml", arg: 1, scope: !3828, file: !21, line: 10875, type: !261)
!3833 = !DILocalVariable(name: "flags", arg: 2, scope: !3828, file: !21, line: 10875, type: !7)
!3834 = !DILocalVariable(name: "qualname", arg: 3, scope: !3828, file: !21, line: 10875, type: !28)
!3835 = !DILocalVariable(name: "closure", arg: 4, scope: !3828, file: !21, line: 10876, type: !28)
!3836 = !DILocalVariable(name: "module", arg: 5, scope: !3828, file: !21, line: 10876, type: !28)
!3837 = !DILocalVariable(name: "globals", arg: 6, scope: !3828, file: !21, line: 10876, type: !28)
!3838 = !DILocalVariable(name: "code", arg: 7, scope: !3828, file: !21, line: 10876, type: !28)
!3839 = !DILocalVariable(name: "op", scope: !3828, file: !21, line: 10877, type: !28)
!3840 = !DILocation(line: 10875, column: 52, scope: !3828)
!3841 = !DILocation(line: 10875, column: 60, scope: !3828)
!3842 = !DILocation(line: 10875, column: 77, scope: !3828)
!3843 = !DILocation(line: 10876, column: 49, scope: !3828)
!3844 = !DILocation(line: 10876, column: 68, scope: !3828)
!3845 = !DILocation(line: 10876, column: 86, scope: !3828)
!3846 = !DILocation(line: 10876, column: 105, scope: !3828)
!3847 = !DILocation(line: 10877, column: 5, scope: !3828)
!3848 = !DILocation(line: 10877, column: 15, scope: !3828)
!3849 = !DILocation(line: 10878, column: 9, scope: !3828)
!3850 = !DILocation(line: 10879, column: 9, scope: !3828)
!3851 = !DILocation(line: 10879, column: 13, scope: !3828)
!3852 = !DILocation(line: 10879, column: 20, scope: !3828)
!3853 = !DILocation(line: 10879, column: 30, scope: !3828)
!3854 = !DILocation(line: 10879, column: 39, scope: !3828)
!3855 = !DILocation(line: 10879, column: 47, scope: !3828)
!3856 = !DILocation(line: 10879, column: 56, scope: !3828)
!3857 = !DILocation(line: 10877, column: 20, scope: !3828)
!3858 = !DILocation(line: 10881, column: 9, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3828, file: !21, line: 10881, column: 9)
!3860 = !DILocation(line: 10881, column: 9, scope: !3828)
!3861 = !DILocation(line: 10882, column: 27, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !21, line: 10881, column: 21)
!3863 = !DILocation(line: 10882, column: 9, scope: !3862)
!3864 = !DILocation(line: 10883, column: 5, scope: !3862)
!3865 = !DILocation(line: 10884, column: 12, scope: !3828)
!3866 = !DILocation(line: 10885, column: 1, scope: !3828)
!3867 = !DILocation(line: 10884, column: 5, scope: !3828)
!3868 = distinct !DISubprogram(name: "__Pyx_CyFunction_SetDefaultsTuple", scope: !21, file: !21, line: 10858, type: !3869, scopeLine: 10858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3871)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{null, !28, !28}
!3871 = !{!3872, !3873, !3874}
!3872 = !DILocalVariable(name: "func", arg: 1, scope: !3868, file: !21, line: 10858, type: !28)
!3873 = !DILocalVariable(name: "tuple", arg: 2, scope: !3868, file: !21, line: 10858, type: !28)
!3874 = !DILocalVariable(name: "m", scope: !3868, file: !21, line: 10859, type: !354)
!3875 = !DILocation(line: 10858, column: 71, scope: !3868)
!3876 = !DILocation(line: 10858, column: 87, scope: !3868)
!3877 = !DILocation(line: 10859, column: 5, scope: !3868)
!3878 = !DILocation(line: 10859, column: 29, scope: !3868)
!3879 = !DILocation(line: 10859, column: 60, scope: !3868)
!3880 = !DILocation(line: 10860, column: 25, scope: !3868)
!3881 = !DILocation(line: 10860, column: 5, scope: !3868)
!3882 = !DILocation(line: 10860, column: 8, scope: !3868)
!3883 = !DILocation(line: 10860, column: 23, scope: !3868)
!3884 = !{!3885, !1900, i64 152}
!3885 = !{!"", !3886, i64 0, !1900, i64 64, !1900, i64 72, !1900, i64 80, !1900, i64 88, !1900, i64 96, !1900, i64 104, !1900, i64 112, !1900, i64 120, !1985, i64 128, !2424, i64 136, !1985, i64 144, !1900, i64 152, !1900, i64 160, !1900, i64 168, !1900, i64 176, !1900, i64 184}
!3886 = !{!"", !3887, i64 0, !1900, i64 56}
!3887 = !{!"", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32, !1900, i64 40, !1900, i64 48}
!3888 = !DILocation(line: 10861, column: 5, scope: !3868)
!3889 = !DILocation(line: 10862, column: 1, scope: !3868)
!3890 = !DISubprogram(name: "PyType_Modified", scope: !6, file: !6, line: 280, type: !3891, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !42}
!3893 = distinct !DISubprogram(name: "__Pyx_AddTraceback", scope: !21, file: !21, line: 11162, type: !3894, scopeLine: 11163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3896)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{null, !54, !7, !7, !54}
!3896 = !{!3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907}
!3897 = !DILocalVariable(name: "funcname", arg: 1, scope: !3893, file: !21, line: 11162, type: !54)
!3898 = !DILocalVariable(name: "c_line", arg: 2, scope: !3893, file: !21, line: 11162, type: !7)
!3899 = !DILocalVariable(name: "py_line", arg: 3, scope: !3893, file: !21, line: 11163, type: !7)
!3900 = !DILocalVariable(name: "filename", arg: 4, scope: !3893, file: !21, line: 11163, type: !54)
!3901 = !DILocalVariable(name: "py_code", scope: !3893, file: !21, line: 11164, type: !637)
!3902 = !DILocalVariable(name: "py_frame", scope: !3893, file: !21, line: 11165, type: !1754)
!3903 = !DILocalVariable(name: "tstate", scope: !3893, file: !21, line: 11166, type: !1698)
!3904 = !DILocalVariable(name: "ptype", scope: !3893, file: !21, line: 11167, type: !28)
!3905 = !DILocalVariable(name: "pvalue", scope: !3893, file: !21, line: 11167, type: !28)
!3906 = !DILocalVariable(name: "ptraceback", scope: !3893, file: !21, line: 11167, type: !28)
!3907 = !DILabel(scope: !3893, name: "bad", file: !21, line: 11196)
!3908 = !DILocation(line: 11162, column: 44, scope: !3893)
!3909 = !DILocation(line: 11162, column: 58, scope: !3893)
!3910 = !DILocation(line: 11163, column: 36, scope: !3893)
!3911 = !DILocation(line: 11163, column: 57, scope: !3893)
!3912 = !DILocation(line: 11164, column: 5, scope: !3893)
!3913 = !DILocation(line: 11164, column: 19, scope: !3893)
!3914 = !DILocation(line: 11165, column: 5, scope: !3893)
!3915 = !DILocation(line: 11165, column: 20, scope: !3893)
!3916 = !DILocation(line: 11166, column: 5, scope: !3893)
!3917 = !DILocation(line: 11166, column: 20, scope: !3893)
!3918 = !DILocation(line: 11166, column: 29, scope: !3893)
!3919 = !DILocation(line: 11167, column: 5, scope: !3893)
!3920 = !DILocation(line: 11167, column: 15, scope: !3893)
!3921 = !DILocation(line: 11167, column: 23, scope: !3893)
!3922 = !DILocation(line: 11167, column: 32, scope: !3893)
!3923 = !DILocation(line: 11168, column: 9, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3893, file: !21, line: 11168, column: 9)
!3925 = !DILocation(line: 11168, column: 9, scope: !3893)
!3926 = !DILocation(line: 11169, column: 42, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3924, file: !21, line: 11168, column: 17)
!3928 = !DILocation(line: 11169, column: 50, scope: !3927)
!3929 = !DILocation(line: 11169, column: 18, scope: !3927)
!3930 = !DILocation(line: 11169, column: 16, scope: !3927)
!3931 = !DILocation(line: 11170, column: 5, scope: !3927)
!3932 = !DILocation(line: 11171, column: 38, scope: !3893)
!3933 = !DILocation(line: 11171, column: 48, scope: !3893)
!3934 = !DILocation(line: 11171, column: 47, scope: !3893)
!3935 = !DILocation(line: 11171, column: 57, scope: !3893)
!3936 = !DILocation(line: 11171, column: 15, scope: !3893)
!3937 = !DILocation(line: 11171, column: 13, scope: !3893)
!3938 = !DILocation(line: 11172, column: 10, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3893, file: !21, line: 11172, column: 9)
!3940 = !DILocation(line: 11172, column: 9, scope: !3893)
!3941 = !DILocation(line: 11173, column: 31, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3939, file: !21, line: 11172, column: 19)
!3943 = !DILocation(line: 11173, column: 9, scope: !3942)
!3944 = !DILocation(line: 11175, column: 13, scope: !3942)
!3945 = !DILocation(line: 11175, column: 23, scope: !3942)
!3946 = !DILocation(line: 11175, column: 31, scope: !3942)
!3947 = !DILocation(line: 11175, column: 40, scope: !3942)
!3948 = !DILocation(line: 11174, column: 19, scope: !3942)
!3949 = !DILocation(line: 11174, column: 17, scope: !3942)
!3950 = !DILocation(line: 11176, column: 14, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3942, file: !21, line: 11176, column: 13)
!3952 = !DILocation(line: 11176, column: 13, scope: !3942)
!3953 = !DILocation(line: 11179, column: 13, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !21, line: 11176, column: 23)
!3955 = !DILocation(line: 11180, column: 13, scope: !3954)
!3956 = !DILocation(line: 11181, column: 13, scope: !3954)
!3957 = !DILocation(line: 11182, column: 13, scope: !3954)
!3958 = !DILocation(line: 11184, column: 33, scope: !3942)
!3959 = !DILocation(line: 11184, column: 41, scope: !3942)
!3960 = !DILocation(line: 11184, column: 48, scope: !3942)
!3961 = !DILocation(line: 11184, column: 56, scope: !3942)
!3962 = !DILocation(line: 11184, column: 9, scope: !3942)
!3963 = !DILocation(line: 11185, column: 34, scope: !3942)
!3964 = !DILocation(line: 11185, column: 44, scope: !3942)
!3965 = !DILocation(line: 11185, column: 43, scope: !3942)
!3966 = !DILocation(line: 11185, column: 53, scope: !3942)
!3967 = !DILocation(line: 11185, column: 62, scope: !3942)
!3968 = !DILocation(line: 11185, column: 9, scope: !3942)
!3969 = !DILocation(line: 11186, column: 5, scope: !3942)
!3970 = !DILocation(line: 11188, column: 9, scope: !3893)
!3971 = !DILocation(line: 11189, column: 9, scope: !3893)
!3972 = !DILocation(line: 11190, column: 9, scope: !3893)
!3973 = !DILocation(line: 11187, column: 16, scope: !3893)
!3974 = !DILocation(line: 11187, column: 14, scope: !3893)
!3975 = !DILocation(line: 11193, column: 10, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3893, file: !21, line: 11193, column: 9)
!3977 = !DILocation(line: 11193, column: 9, scope: !3893)
!3978 = !DILocation(line: 11193, column: 20, scope: !3976)
!3979 = !DILocation(line: 11194, column: 5, scope: !3893)
!3980 = !{!3981, !1985, i64 40}
!3981 = !{!"_frame", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32, !1985, i64 40, !1901, i64 44, !1901, i64 45, !1901, i64 46, !1901, i64 48}
!3982 = !DILocation(line: 11195, column: 22, scope: !3893)
!3983 = !DILocation(line: 11195, column: 5, scope: !3893)
!3984 = !DILocation(line: 11196, column: 1, scope: !3893)
!3985 = !DILocation(line: 11197, column: 5, scope: !3893)
!3986 = !DILocation(line: 11198, column: 5, scope: !3893)
!3987 = !DILocation(line: 11199, column: 1, scope: !3893)
!3988 = !DISubprogram(name: "PyErr_Occurred", scope: !2720, file: !2720, line: 17, type: !692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3989 = !DISubprogram(name: "PyOS_snprintf", scope: !2720, file: !2720, line: 317, type: !3990, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!7, !70, !341, !54, null}
!3992 = !DISubprogram(name: "PyErr_WarnEx", scope: !3993, file: !3993, line: 7, type: !3994, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3993 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/warnings.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "9528d302e04153e64eccd7d4f8658e04")
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!7, !28, !54, !34}
!3996 = distinct !DISubprogram(name: "__Pyx_FetchCommonType", scope: !21, file: !21, line: 9734, type: !3997, scopeLine: 9734, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3999)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!42, !42}
!3999 = !{!4000, !4001, !4002, !4003, !4004, !4005}
!4000 = !DILocalVariable(name: "type", arg: 1, scope: !3996, file: !21, line: 9734, type: !42)
!4001 = !DILocalVariable(name: "abi_module", scope: !3996, file: !21, line: 9735, type: !28)
!4002 = !DILocalVariable(name: "object_name", scope: !3996, file: !21, line: 9736, type: !54)
!4003 = !DILocalVariable(name: "cached_type", scope: !3996, file: !21, line: 9737, type: !42)
!4004 = !DILabel(scope: !3996, name: "done", file: !21, line: 9760)
!4005 = !DILabel(scope: !3996, name: "bad", file: !21, line: 9763)
!4006 = !DILocation(line: 9734, column: 58, scope: !3996)
!4007 = !DILocation(line: 9735, column: 5, scope: !3996)
!4008 = !DILocation(line: 9735, column: 15, scope: !3996)
!4009 = !DILocation(line: 9736, column: 5, scope: !3996)
!4010 = !DILocation(line: 9736, column: 17, scope: !3996)
!4011 = !DILocation(line: 9737, column: 5, scope: !3996)
!4012 = !DILocation(line: 9737, column: 19, scope: !3996)
!4013 = !DILocation(line: 9738, column: 18, scope: !3996)
!4014 = !DILocation(line: 9738, column: 16, scope: !3996)
!4015 = !DILocation(line: 9739, column: 10, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !3996, file: !21, line: 9739, column: 9)
!4017 = !DILocation(line: 9739, column: 9, scope: !3996)
!4018 = !DILocation(line: 9739, column: 22, scope: !4016)
!4019 = !DILocation(line: 9740, column: 27, scope: !3996)
!4020 = !DILocation(line: 9740, column: 33, scope: !3996)
!4021 = !{!2421, !1900, i64 24}
!4022 = !DILocation(line: 9740, column: 19, scope: !3996)
!4023 = !DILocation(line: 9740, column: 17, scope: !3996)
!4024 = !DILocation(line: 9741, column: 19, scope: !3996)
!4025 = !DILocation(line: 9741, column: 33, scope: !3996)
!4026 = !DILocation(line: 9741, column: 44, scope: !3996)
!4027 = !DILocation(line: 9741, column: 49, scope: !3996)
!4028 = !DILocation(line: 9741, column: 55, scope: !3996)
!4029 = !DILocation(line: 9741, column: 17, scope: !3996)
!4030 = !DILocation(line: 9742, column: 58, scope: !3996)
!4031 = !DILocation(line: 9742, column: 70, scope: !3996)
!4032 = !DILocation(line: 9742, column: 35, scope: !3996)
!4033 = !DILocation(line: 9742, column: 17, scope: !3996)
!4034 = !DILocation(line: 9743, column: 9, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3996, file: !21, line: 9743, column: 9)
!4036 = !DILocation(line: 9743, column: 9, scope: !3996)
!4037 = !DILocation(line: 9745, column: 27, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !21, line: 9744, column: 13)
!4039 = distinct !DILexicalBlock(scope: !4035, file: !21, line: 9743, column: 22)
!4040 = !DILocation(line: 9746, column: 15, scope: !4038)
!4041 = !DILocation(line: 9747, column: 15, scope: !4038)
!4042 = !DILocation(line: 9747, column: 28, scope: !4038)
!4043 = !{!2421, !2424, i64 32}
!4044 = !DILocation(line: 9748, column: 15, scope: !4038)
!4045 = !DILocation(line: 9748, column: 21, scope: !4038)
!4046 = !DILocation(line: 9744, column: 13, scope: !4038)
!4047 = !DILocation(line: 9748, column: 35, scope: !4038)
!4048 = !DILocation(line: 9744, column: 13, scope: !4039)
!4049 = !DILocation(line: 9749, column: 13, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4038, file: !21, line: 9748, column: 40)
!4051 = !DILocation(line: 9751, column: 9, scope: !4039)
!4052 = !DILocation(line: 9753, column: 33, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !3996, file: !21, line: 9753, column: 9)
!4054 = !DILocation(line: 9753, column: 10, scope: !4053)
!4055 = !DILocation(line: 9753, column: 9, scope: !3996)
!4056 = !DILocation(line: 9753, column: 56, scope: !4053)
!4057 = !DILocation(line: 9754, column: 5, scope: !3996)
!4058 = !DILocation(line: 9755, column: 22, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !3996, file: !21, line: 9755, column: 9)
!4060 = !DILocation(line: 9755, column: 9, scope: !4059)
!4061 = !DILocation(line: 9755, column: 28, scope: !4059)
!4062 = !DILocation(line: 9755, column: 9, scope: !3996)
!4063 = !DILocation(line: 9755, column: 33, scope: !4059)
!4064 = !DILocation(line: 9756, column: 32, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3996, file: !21, line: 9756, column: 9)
!4066 = !DILocation(line: 9756, column: 44, scope: !4065)
!4067 = !DILocation(line: 9756, column: 69, scope: !4065)
!4068 = !DILocation(line: 9756, column: 9, scope: !4065)
!4069 = !DILocation(line: 9756, column: 75, scope: !4065)
!4070 = !DILocation(line: 9756, column: 9, scope: !3996)
!4071 = !DILocation(line: 9757, column: 9, scope: !4065)
!4072 = !DILocation(line: 9758, column: 5, scope: !3996)
!4073 = !DILocation(line: 9759, column: 19, scope: !3996)
!4074 = !DILocation(line: 9759, column: 17, scope: !3996)
!4075 = !DILocation(line: 9759, column: 5, scope: !3996)
!4076 = !DILocation(line: 9760, column: 1, scope: !3996)
!4077 = !DILocation(line: 9761, column: 5, scope: !3996)
!4078 = !DILocation(line: 9762, column: 12, scope: !3996)
!4079 = !DILocation(line: 9762, column: 5, scope: !3996)
!4080 = !DILocation(line: 9763, column: 1, scope: !3996)
!4081 = !DILocation(line: 9764, column: 5, scope: !3996)
!4082 = !DILocation(line: 9765, column: 17, scope: !3996)
!4083 = !DILocation(line: 9766, column: 5, scope: !3996)
!4084 = !DILocation(line: 9767, column: 1, scope: !3996)
!4085 = distinct !DISubprogram(name: "__Pyx_FetchSharedCythonABIModule", scope: !21, file: !21, line: 9708, type: !692, scopeLine: 9708, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4086)
!4086 = !{!4087}
!4087 = !DILocalVariable(name: "abi_module", scope: !4085, file: !21, line: 9709, type: !28)
!4088 = !DILocation(line: 9709, column: 5, scope: !4085)
!4089 = !DILocation(line: 9709, column: 15, scope: !4085)
!4090 = !DILocation(line: 9709, column: 28, scope: !4085)
!4091 = !DILocation(line: 9710, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4085, file: !21, line: 9710, column: 9)
!4093 = !DILocation(line: 9710, column: 9, scope: !4085)
!4094 = !DILocation(line: 9710, column: 32, scope: !4092)
!4095 = !DILocation(line: 9711, column: 5, scope: !4085)
!4096 = !DILocation(line: 9712, column: 12, scope: !4085)
!4097 = !DILocation(line: 9712, column: 5, scope: !4085)
!4098 = !DILocation(line: 9713, column: 1, scope: !4085)
!4099 = !DISubprogram(name: "strrchr", scope: !4100, file: !4100, line: 273, type: !4101, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4100 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "f443da8025a0b7c1498fb6c554ec788d")
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!70, !54, !7}
!4103 = distinct !DISubprogram(name: "__Pyx_VerifyCachedType", scope: !21, file: !21, line: 9716, type: !4104, scopeLine: 9719, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4106)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!7, !28, !54, !34, !34}
!4106 = !{!4107, !4108, !4109, !4110}
!4107 = !DILocalVariable(name: "cached_type", arg: 1, scope: !4103, file: !21, line: 9716, type: !28)
!4108 = !DILocalVariable(name: "name", arg: 2, scope: !4103, file: !21, line: 9717, type: !54)
!4109 = !DILocalVariable(name: "basicsize", arg: 3, scope: !4103, file: !21, line: 9718, type: !34)
!4110 = !DILocalVariable(name: "expected_basicsize", arg: 4, scope: !4103, file: !21, line: 9719, type: !34)
!4111 = !DILocation(line: 9716, column: 45, scope: !4103)
!4112 = !DILocation(line: 9717, column: 44, scope: !4103)
!4113 = !DILocation(line: 9718, column: 43, scope: !4103)
!4114 = !DILocation(line: 9719, column: 43, scope: !4103)
!4115 = !DILocation(line: 9720, column: 10, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4103, file: !21, line: 9720, column: 9)
!4117 = !DILocation(line: 9720, column: 9, scope: !4103)
!4118 = !DILocation(line: 9721, column: 22, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4116, file: !21, line: 9720, column: 37)
!4120 = !DILocation(line: 9722, column: 63, scope: !4119)
!4121 = !DILocation(line: 9721, column: 9, scope: !4119)
!4122 = !DILocation(line: 9723, column: 9, scope: !4119)
!4123 = !DILocation(line: 9725, column: 9, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4103, file: !21, line: 9725, column: 9)
!4125 = !DILocation(line: 9725, column: 22, scope: !4124)
!4126 = !DILocation(line: 9725, column: 19, scope: !4124)
!4127 = !DILocation(line: 9725, column: 9, scope: !4103)
!4128 = !DILocation(line: 9726, column: 22, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4124, file: !21, line: 9725, column: 42)
!4130 = !DILocation(line: 9728, column: 13, scope: !4129)
!4131 = !DILocation(line: 9726, column: 9, scope: !4129)
!4132 = !DILocation(line: 9729, column: 9, scope: !4129)
!4133 = !DILocation(line: 9731, column: 5, scope: !4103)
!4134 = !DILocation(line: 9732, column: 1, scope: !4103)
!4135 = !DISubprogram(name: "PyType_Ready", scope: !6, file: !6, line: 275, type: !4136, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!7, !42}
!4138 = distinct !DISubprogram(name: "PyType_Check", scope: !6, file: !6, line: 777, type: !122, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4139)
!4139 = !{!4140}
!4140 = !DILocalVariable(name: "op", arg: 1, scope: !4138, file: !6, line: 777, type: !28)
!4141 = !DILocation(line: 777, column: 42, scope: !4138)
!4142 = !DILocation(line: 778, column: 12, scope: !4138)
!4143 = !DILocation(line: 778, column: 5, scope: !4138)
!4144 = !DISubprogram(name: "PyErr_Format", scope: !2720, file: !2720, line: 176, type: !4145, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!28, !28, !54, null}
!4147 = distinct !DISubprogram(name: "PyType_HasFeature", scope: !6, file: !6, line: 763, type: !4148, scopeLine: 764, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4150)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!7, !42, !238}
!4150 = !{!4151, !4152, !4153}
!4151 = !DILocalVariable(name: "type", arg: 1, scope: !4147, file: !6, line: 763, type: !42)
!4152 = !DILocalVariable(name: "feature", arg: 2, scope: !4147, file: !6, line: 763, type: !238)
!4153 = !DILocalVariable(name: "flags", scope: !4147, file: !6, line: 765, type: !238)
!4154 = !DILocation(line: 763, column: 33, scope: !4147)
!4155 = !DILocation(line: 763, column: 53, scope: !4147)
!4156 = !DILocation(line: 765, column: 5, scope: !4147)
!4157 = !DILocation(line: 765, column: 19, scope: !4147)
!4158 = !DILocation(line: 770, column: 13, scope: !4147)
!4159 = !DILocation(line: 770, column: 19, scope: !4147)
!4160 = !{!2421, !2424, i64 168}
!4161 = !DILocation(line: 770, column: 11, scope: !4147)
!4162 = !DILocation(line: 772, column: 14, scope: !4147)
!4163 = !DILocation(line: 772, column: 22, scope: !4147)
!4164 = !DILocation(line: 772, column: 20, scope: !4147)
!4165 = !DILocation(line: 772, column: 31, scope: !4147)
!4166 = !DILocation(line: 773, column: 1, scope: !4147)
!4167 = !DILocation(line: 772, column: 5, scope: !4147)
!4168 = distinct !DISubprogram(name: "Py_TYPE", scope: !6, file: !6, line: 132, type: !4169, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4171)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!42, !28}
!4171 = !{!4172}
!4172 = !DILocalVariable(name: "ob", arg: 1, scope: !4168, file: !6, line: 132, type: !28)
!4173 = !DILocation(line: 132, column: 47, scope: !4168)
!4174 = !DILocation(line: 133, column: 12, scope: !4168)
!4175 = !DILocation(line: 133, column: 16, scope: !4168)
!4176 = !{!2423, !1900, i64 8}
!4177 = !DILocation(line: 133, column: 5, scope: !4168)
!4178 = distinct !DISubprogram(name: "__Pyx_CyFunction_dealloc", scope: !21, file: !21, line: 10393, type: !4179, scopeLine: 10394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4181)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{null, !354}
!4181 = !{!4182}
!4182 = !DILocalVariable(name: "m", arg: 1, scope: !4178, file: !21, line: 10393, type: !354)
!4183 = !DILocation(line: 10393, column: 62, scope: !4178)
!4184 = !DILocation(line: 10395, column: 25, scope: !4178)
!4185 = !DILocation(line: 10395, column: 5, scope: !4178)
!4186 = !DILocation(line: 10396, column: 31, scope: !4178)
!4187 = !DILocation(line: 10396, column: 5, scope: !4178)
!4188 = !DILocation(line: 10397, column: 1, scope: !4178)
!4189 = distinct !DISubprogram(name: "__Pyx_CyFunction_repr", scope: !21, file: !21, line: 10427, type: !4190, scopeLine: 10428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4192)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!28, !354}
!4192 = !{!4193}
!4193 = !DILocalVariable(name: "op", arg: 1, scope: !4189, file: !21, line: 10427, type: !354)
!4194 = !DILocation(line: 10427, column: 47, scope: !4189)
!4195 = !DILocation(line: 10431, column: 33, scope: !4189)
!4196 = !DILocation(line: 10431, column: 37, scope: !4189)
!4197 = !{!3885, !1900, i64 80}
!4198 = !DILocation(line: 10431, column: 60, scope: !4189)
!4199 = !DILocation(line: 10430, column: 12, scope: !4189)
!4200 = !DILocation(line: 10430, column: 5, scope: !4189)
!4201 = distinct !DISubprogram(name: "__Pyx_CyFunction_CallAsMethod", scope: !21, file: !21, line: 10548, type: !114, scopeLine: 10548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4202)
!4202 = !{!4203, !4204, !4205, !4206, !4207, !4208, !4209, !4212, !4213}
!4203 = !DILocalVariable(name: "func", arg: 1, scope: !4201, file: !21, line: 10548, type: !28)
!4204 = !DILocalVariable(name: "args", arg: 2, scope: !4201, file: !21, line: 10548, type: !28)
!4205 = !DILocalVariable(name: "kw", arg: 3, scope: !4201, file: !21, line: 10548, type: !28)
!4206 = !DILocalVariable(name: "result", scope: !4201, file: !21, line: 10549, type: !28)
!4207 = !DILocalVariable(name: "cyfunc", scope: !4201, file: !21, line: 10550, type: !354)
!4208 = !DILocalVariable(name: "vc", scope: !4201, file: !21, line: 10552, type: !335)
!4209 = !DILocalVariable(name: "argc", scope: !4210, file: !21, line: 10563, type: !34)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !21, line: 10562, column: 104)
!4211 = distinct !DILexicalBlock(scope: !4201, file: !21, line: 10562, column: 9)
!4212 = !DILocalVariable(name: "new_args", scope: !4210, file: !21, line: 10564, type: !28)
!4213 = !DILocalVariable(name: "self", scope: !4210, file: !21, line: 10565, type: !28)
!4214 = !DILocation(line: 10548, column: 58, scope: !4201)
!4215 = !DILocation(line: 10548, column: 74, scope: !4201)
!4216 = !DILocation(line: 10548, column: 90, scope: !4201)
!4217 = !DILocation(line: 10549, column: 5, scope: !4201)
!4218 = !DILocation(line: 10549, column: 15, scope: !4201)
!4219 = !DILocation(line: 10550, column: 5, scope: !4201)
!4220 = !DILocation(line: 10550, column: 29, scope: !4201)
!4221 = !DILocation(line: 10550, column: 65, scope: !4201)
!4222 = !DILocation(line: 10552, column: 6, scope: !4201)
!4223 = !DILocation(line: 10552, column: 27, scope: !4201)
!4224 = !DILocation(line: 10552, column: 32, scope: !4201)
!4225 = !{!3887, !1900, i64 48}
!4226 = !DILocation(line: 10553, column: 9, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4201, file: !21, line: 10553, column: 9)
!4228 = !DILocation(line: 10553, column: 9, scope: !4201)
!4229 = !DILocation(line: 10555, column: 48, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4227, file: !21, line: 10553, column: 13)
!4231 = !DILocation(line: 10555, column: 54, scope: !4230)
!4232 = !DILocation(line: 10555, column: 59, scope: !4230)
!4233 = !DILocation(line: 10555, column: 94, scope: !4230)
!4234 = !DILocation(line: 10555, column: 118, scope: !4230)
!4235 = !DILocation(line: 10555, column: 16, scope: !4230)
!4236 = !DILocation(line: 10555, column: 9, scope: !4230)
!4237 = !DILocation(line: 10562, column: 10, scope: !4211)
!4238 = !DILocation(line: 10562, column: 18, scope: !4211)
!4239 = !{!3885, !1985, i64 144}
!4240 = !DILocation(line: 10562, column: 24, scope: !4211)
!4241 = !DILocation(line: 10562, column: 51, scope: !4211)
!4242 = !DILocation(line: 10562, column: 56, scope: !4211)
!4243 = !DILocation(line: 10562, column: 64, scope: !4211)
!4244 = !DILocation(line: 10562, column: 70, scope: !4211)
!4245 = !DILocation(line: 10562, column: 9, scope: !4201)
!4246 = !DILocation(line: 10563, column: 9, scope: !4210)
!4247 = !DILocation(line: 10563, column: 20, scope: !4210)
!4248 = !DILocation(line: 10564, column: 9, scope: !4210)
!4249 = !DILocation(line: 10564, column: 19, scope: !4210)
!4250 = !DILocation(line: 10565, column: 9, scope: !4210)
!4251 = !DILocation(line: 10565, column: 19, scope: !4210)
!4252 = !DILocation(line: 10567, column: 16, scope: !4210)
!4253 = !DILocation(line: 10567, column: 14, scope: !4210)
!4254 = !DILocation(line: 10572, column: 37, scope: !4210)
!4255 = !DILocation(line: 10572, column: 46, scope: !4210)
!4256 = !DILocation(line: 10572, column: 20, scope: !4210)
!4257 = !DILocation(line: 10572, column: 18, scope: !4210)
!4258 = !DILocation(line: 10573, column: 13, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4210, file: !21, line: 10573, column: 13)
!4260 = !DILocation(line: 10573, column: 13, scope: !4210)
!4261 = !DILocation(line: 10574, column: 13, scope: !4259)
!4262 = !DILocation(line: 10575, column: 32, scope: !4210)
!4263 = !DILocation(line: 10575, column: 16, scope: !4210)
!4264 = !DILocation(line: 10575, column: 14, scope: !4210)
!4265 = !DILocation(line: 10576, column: 13, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4210, file: !21, line: 10576, column: 13)
!4267 = !DILocation(line: 10576, column: 13, scope: !4210)
!4268 = !DILocation(line: 10577, column: 13, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4266, file: !21, line: 10576, column: 30)
!4270 = !DILocation(line: 10579, column: 26, scope: !4269)
!4271 = !DILocation(line: 10581, column: 26, scope: !4269)
!4272 = !DILocation(line: 10581, column: 34, scope: !4269)
!4273 = !DILocation(line: 10579, column: 13, scope: !4269)
!4274 = !DILocation(line: 10586, column: 13, scope: !4269)
!4275 = !DILocation(line: 10588, column: 46, scope: !4210)
!4276 = !DILocation(line: 10588, column: 52, scope: !4210)
!4277 = !DILocation(line: 10588, column: 58, scope: !4210)
!4278 = !DILocation(line: 10588, column: 68, scope: !4210)
!4279 = !DILocation(line: 10588, column: 18, scope: !4210)
!4280 = !DILocation(line: 10588, column: 16, scope: !4210)
!4281 = !DILocation(line: 10589, column: 9, scope: !4210)
!4282 = !DILocation(line: 10590, column: 5, scope: !4211)
!4283 = !DILocation(line: 10590, column: 5, scope: !4210)
!4284 = !DILocation(line: 10591, column: 40, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4211, file: !21, line: 10590, column: 12)
!4286 = !DILocation(line: 10591, column: 46, scope: !4285)
!4287 = !DILocation(line: 10591, column: 52, scope: !4285)
!4288 = !DILocation(line: 10591, column: 18, scope: !4285)
!4289 = !DILocation(line: 10591, column: 16, scope: !4285)
!4290 = !DILocation(line: 10593, column: 12, scope: !4201)
!4291 = !DILocation(line: 10593, column: 5, scope: !4201)
!4292 = !DILocation(line: 10594, column: 1, scope: !4201)
!4293 = distinct !DISubprogram(name: "__Pyx_CyFunction_traverse", scope: !21, file: !21, line: 10398, type: !4294, scopeLine: 10399, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4296)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!7, !354, !245, !27}
!4296 = !{!4297, !4298, !4299, !4300, !4304, !4308, !4312, !4316, !4320, !4324, !4328, !4332, !4336, !4340, !4344, !4348, !4351, !4352}
!4297 = !DILocalVariable(name: "m", arg: 1, scope: !4293, file: !21, line: 10398, type: !354)
!4298 = !DILocalVariable(name: "visit", arg: 2, scope: !4293, file: !21, line: 10398, type: !245)
!4299 = !DILocalVariable(name: "arg", arg: 3, scope: !4293, file: !21, line: 10398, type: !27)
!4300 = !DILocalVariable(name: "vret", scope: !4301, file: !21, line: 10400, type: !7)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !21, line: 10400, column: 5)
!4302 = distinct !DILexicalBlock(scope: !4303, file: !21, line: 10400, column: 5)
!4303 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10400, column: 5)
!4304 = !DILocalVariable(name: "vret", scope: !4305, file: !21, line: 10404, type: !7)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !21, line: 10404, column: 5)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !21, line: 10404, column: 5)
!4307 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10404, column: 5)
!4308 = !DILocalVariable(name: "vret", scope: !4309, file: !21, line: 10406, type: !7)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !21, line: 10406, column: 5)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !21, line: 10406, column: 5)
!4311 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10406, column: 5)
!4312 = !DILocalVariable(name: "vret", scope: !4313, file: !21, line: 10407, type: !7)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !21, line: 10407, column: 5)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !21, line: 10407, column: 5)
!4315 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10407, column: 5)
!4316 = !DILocalVariable(name: "vret", scope: !4317, file: !21, line: 10408, type: !7)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !21, line: 10408, column: 5)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !21, line: 10408, column: 5)
!4319 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10408, column: 5)
!4320 = !DILocalVariable(name: "vret", scope: !4321, file: !21, line: 10409, type: !7)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !21, line: 10409, column: 5)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !21, line: 10409, column: 5)
!4323 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10409, column: 5)
!4324 = !DILocalVariable(name: "vret", scope: !4325, file: !21, line: 10410, type: !7)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !21, line: 10410, column: 5)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !21, line: 10410, column: 5)
!4327 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10410, column: 5)
!4328 = !DILocalVariable(name: "vret", scope: !4329, file: !21, line: 10411, type: !7)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !21, line: 10411, column: 5)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !21, line: 10411, column: 5)
!4331 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10411, column: 5)
!4332 = !DILocalVariable(name: "vret", scope: !4333, file: !21, line: 10413, type: !7)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !21, line: 10413, column: 5)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !21, line: 10413, column: 5)
!4335 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10413, column: 5)
!4336 = !DILocalVariable(name: "vret", scope: !4337, file: !21, line: 10415, type: !7)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !21, line: 10415, column: 5)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !21, line: 10415, column: 5)
!4339 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10415, column: 5)
!4340 = !DILocalVariable(name: "vret", scope: !4341, file: !21, line: 10416, type: !7)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !21, line: 10416, column: 5)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !21, line: 10416, column: 5)
!4343 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10416, column: 5)
!4344 = !DILocalVariable(name: "vret", scope: !4345, file: !21, line: 10417, type: !7)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !21, line: 10417, column: 5)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !21, line: 10417, column: 5)
!4347 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10417, column: 5)
!4348 = !DILocalVariable(name: "pydefaults", scope: !4349, file: !21, line: 10419, type: !94)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !21, line: 10418, column: 22)
!4350 = distinct !DILexicalBlock(scope: !4293, file: !21, line: 10418, column: 9)
!4351 = !DILocalVariable(name: "i", scope: !4349, file: !21, line: 10420, type: !7)
!4352 = !DILocalVariable(name: "vret", scope: !4353, file: !21, line: 10422, type: !7)
!4353 = distinct !DILexicalBlock(scope: !4354, file: !21, line: 10422, column: 13)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !21, line: 10422, column: 13)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !21, line: 10422, column: 13)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !21, line: 10421, column: 9)
!4357 = distinct !DILexicalBlock(scope: !4349, file: !21, line: 10421, column: 9)
!4358 = !DILocation(line: 10398, column: 62, scope: !4293)
!4359 = !DILocation(line: 10398, column: 75, scope: !4293)
!4360 = !DILocation(line: 10398, column: 88, scope: !4293)
!4361 = !DILocation(line: 10400, column: 5, scope: !4293)
!4362 = !DILocation(line: 10400, column: 5, scope: !4302)
!4363 = !{!3885, !1900, i64 112}
!4364 = !DILocation(line: 10400, column: 5, scope: !4303)
!4365 = !DILocation(line: 10400, column: 5, scope: !4301)
!4366 = !DILocation(line: 10400, column: 5, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4301, file: !21, line: 10400, column: 5)
!4368 = !DILocation(line: 10404, column: 5, scope: !4293)
!4369 = !DILocation(line: 10404, column: 5, scope: !4306)
!4370 = !{!3887, !1900, i64 32}
!4371 = !DILocation(line: 10404, column: 5, scope: !4307)
!4372 = !DILocation(line: 10404, column: 5, scope: !4305)
!4373 = !DILocation(line: 10404, column: 5, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4305, file: !21, line: 10404, column: 5)
!4375 = !DILocation(line: 10406, column: 5, scope: !4293)
!4376 = !DILocation(line: 10406, column: 5, scope: !4310)
!4377 = !{!3885, !1900, i64 64}
!4378 = !DILocation(line: 10406, column: 5, scope: !4311)
!4379 = !DILocation(line: 10406, column: 5, scope: !4309)
!4380 = !DILocation(line: 10406, column: 5, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4309, file: !21, line: 10406, column: 5)
!4382 = !DILocation(line: 10407, column: 5, scope: !4293)
!4383 = !DILocation(line: 10407, column: 5, scope: !4314)
!4384 = !{!3885, !1900, i64 72}
!4385 = !DILocation(line: 10407, column: 5, scope: !4315)
!4386 = !DILocation(line: 10407, column: 5, scope: !4313)
!4387 = !DILocation(line: 10407, column: 5, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4313, file: !21, line: 10407, column: 5)
!4389 = !DILocation(line: 10408, column: 5, scope: !4293)
!4390 = !DILocation(line: 10408, column: 5, scope: !4318)
!4391 = !DILocation(line: 10408, column: 5, scope: !4319)
!4392 = !DILocation(line: 10408, column: 5, scope: !4317)
!4393 = !DILocation(line: 10408, column: 5, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4317, file: !21, line: 10408, column: 5)
!4395 = !DILocation(line: 10409, column: 5, scope: !4293)
!4396 = !DILocation(line: 10409, column: 5, scope: !4322)
!4397 = !{!3885, !1900, i64 88}
!4398 = !DILocation(line: 10409, column: 5, scope: !4323)
!4399 = !DILocation(line: 10409, column: 5, scope: !4321)
!4400 = !DILocation(line: 10409, column: 5, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4321, file: !21, line: 10409, column: 5)
!4402 = !DILocation(line: 10410, column: 5, scope: !4293)
!4403 = !DILocation(line: 10410, column: 5, scope: !4326)
!4404 = !{!3885, !1900, i64 96}
!4405 = !DILocation(line: 10410, column: 5, scope: !4327)
!4406 = !DILocation(line: 10410, column: 5, scope: !4325)
!4407 = !DILocation(line: 10410, column: 5, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4325, file: !21, line: 10410, column: 5)
!4409 = !DILocation(line: 10411, column: 5, scope: !4293)
!4410 = !DILocation(line: 10411, column: 5, scope: !4330)
!4411 = !{!3885, !1900, i64 104}
!4412 = !DILocation(line: 10411, column: 5, scope: !4331)
!4413 = !DILocation(line: 10411, column: 5, scope: !4329)
!4414 = !DILocation(line: 10411, column: 5, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4329, file: !21, line: 10411, column: 5)
!4416 = !DILocation(line: 10413, column: 5, scope: !4293)
!4417 = !DILocation(line: 10413, column: 5, scope: !4334)
!4418 = !{!3886, !1900, i64 56}
!4419 = !DILocation(line: 10413, column: 5, scope: !4335)
!4420 = !DILocation(line: 10413, column: 5, scope: !4333)
!4421 = !DILocation(line: 10413, column: 5, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4333, file: !21, line: 10413, column: 5)
!4423 = !DILocation(line: 10415, column: 5, scope: !4293)
!4424 = !DILocation(line: 10415, column: 5, scope: !4338)
!4425 = !DILocation(line: 10415, column: 5, scope: !4339)
!4426 = !DILocation(line: 10415, column: 5, scope: !4337)
!4427 = !DILocation(line: 10415, column: 5, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4337, file: !21, line: 10415, column: 5)
!4429 = !DILocation(line: 10416, column: 5, scope: !4293)
!4430 = !DILocation(line: 10416, column: 5, scope: !4342)
!4431 = !{!3885, !1900, i64 160}
!4432 = !DILocation(line: 10416, column: 5, scope: !4343)
!4433 = !DILocation(line: 10416, column: 5, scope: !4341)
!4434 = !DILocation(line: 10416, column: 5, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4341, file: !21, line: 10416, column: 5)
!4436 = !DILocation(line: 10417, column: 5, scope: !4293)
!4437 = !DILocation(line: 10417, column: 5, scope: !4346)
!4438 = !{!3885, !1900, i64 184}
!4439 = !DILocation(line: 10417, column: 5, scope: !4347)
!4440 = !DILocation(line: 10417, column: 5, scope: !4345)
!4441 = !DILocation(line: 10417, column: 5, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4345, file: !21, line: 10417, column: 5)
!4443 = !DILocation(line: 10418, column: 9, scope: !4350)
!4444 = !DILocation(line: 10418, column: 12, scope: !4350)
!4445 = !{!3885, !1900, i64 120}
!4446 = !DILocation(line: 10418, column: 9, scope: !4293)
!4447 = !DILocation(line: 10419, column: 9, scope: !4349)
!4448 = !DILocation(line: 10419, column: 20, scope: !4349)
!4449 = !DILocation(line: 10419, column: 33, scope: !4349)
!4450 = !DILocation(line: 10420, column: 9, scope: !4349)
!4451 = !DILocation(line: 10420, column: 13, scope: !4349)
!4452 = !DILocation(line: 10421, column: 16, scope: !4357)
!4453 = !DILocation(line: 10421, column: 14, scope: !4357)
!4454 = !DILocation(line: 10421, column: 21, scope: !4356)
!4455 = !DILocation(line: 10421, column: 25, scope: !4356)
!4456 = !DILocation(line: 10421, column: 28, scope: !4356)
!4457 = !{!3885, !1985, i64 128}
!4458 = !DILocation(line: 10421, column: 23, scope: !4356)
!4459 = !DILocation(line: 10421, column: 9, scope: !4357)
!4460 = !DILocation(line: 10422, column: 13, scope: !4356)
!4461 = !DILocation(line: 10422, column: 13, scope: !4354)
!4462 = !DILocation(line: 10422, column: 13, scope: !4355)
!4463 = !DILocation(line: 10422, column: 13, scope: !4353)
!4464 = !DILocation(line: 10422, column: 13, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4353, file: !21, line: 10422, column: 13)
!4466 = !DILocation(line: 10421, column: 49, scope: !4356)
!4467 = !DILocation(line: 10421, column: 9, scope: !4356)
!4468 = distinct !{!4468, !4459, !4469, !4470}
!4469 = !DILocation(line: 10422, column: 13, scope: !4357)
!4470 = !{!"llvm.loop.mustprogress"}
!4471 = !DILocation(line: 10423, column: 5, scope: !4350)
!4472 = !DILocation(line: 10423, column: 5, scope: !4349)
!4473 = !DILocation(line: 10424, column: 5, scope: !4293)
!4474 = !DILocation(line: 10425, column: 1, scope: !4293)
!4475 = distinct !DISubprogram(name: "__Pyx_CyFunction_clear", scope: !21, file: !21, line: 10347, type: !4476, scopeLine: 10348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4478)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!7, !354}
!4478 = !{!4479, !4480, !4482, !4484, !4486, !4488, !4490, !4492, !4494, !4496, !4498, !4500, !4502, !4504, !4506, !4509}
!4479 = !DILocalVariable(name: "m", arg: 1, scope: !4475, file: !21, line: 10347, type: !354)
!4480 = !DILocalVariable(name: "_py_tmp", scope: !4481, file: !21, line: 10349, type: !28)
!4481 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10349, column: 5)
!4482 = !DILocalVariable(name: "_py_tmp", scope: !4483, file: !21, line: 10353, type: !28)
!4483 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10353, column: 5)
!4484 = !DILocalVariable(name: "_py_tmp", scope: !4485, file: !21, line: 10355, type: !28)
!4485 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10355, column: 5)
!4486 = !DILocalVariable(name: "_py_tmp", scope: !4487, file: !21, line: 10356, type: !28)
!4487 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10356, column: 5)
!4488 = !DILocalVariable(name: "_py_tmp", scope: !4489, file: !21, line: 10357, type: !28)
!4489 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10357, column: 5)
!4490 = !DILocalVariable(name: "_py_tmp", scope: !4491, file: !21, line: 10358, type: !28)
!4491 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10358, column: 5)
!4492 = !DILocalVariable(name: "_py_tmp", scope: !4493, file: !21, line: 10359, type: !28)
!4493 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10359, column: 5)
!4494 = !DILocalVariable(name: "_py_tmp", scope: !4495, file: !21, line: 10360, type: !28)
!4495 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10360, column: 5)
!4496 = !DILocalVariable(name: "cls", scope: !4497, file: !21, line: 10366, type: !28)
!4497 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10365, column: 5)
!4498 = !DILocalVariable(name: "_py_tmp", scope: !4499, file: !21, line: 10372, type: !28)
!4499 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10372, column: 5)
!4500 = !DILocalVariable(name: "_py_tmp", scope: !4501, file: !21, line: 10373, type: !28)
!4501 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10373, column: 5)
!4502 = !DILocalVariable(name: "_py_tmp", scope: !4503, file: !21, line: 10374, type: !28)
!4503 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10374, column: 5)
!4504 = !DILocalVariable(name: "_py_tmp", scope: !4505, file: !21, line: 10375, type: !28)
!4505 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10375, column: 5)
!4506 = !DILocalVariable(name: "pydefaults", scope: !4507, file: !21, line: 10377, type: !94)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !21, line: 10376, column: 22)
!4508 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 10376, column: 9)
!4509 = !DILocalVariable(name: "i", scope: !4507, file: !21, line: 10378, type: !7)
!4510 = !DILocation(line: 10347, column: 48, scope: !4475)
!4511 = !DILocation(line: 10349, column: 5, scope: !4475)
!4512 = !DILocation(line: 10349, column: 5, scope: !4481)
!4513 = !DILocation(line: 10349, column: 5, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4481, file: !21, line: 10349, column: 5)
!4515 = !DILocation(line: 10349, column: 5, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4514, file: !21, line: 10349, column: 5)
!4517 = !DILocation(line: 10353, column: 5, scope: !4475)
!4518 = !DILocation(line: 10353, column: 5, scope: !4483)
!4519 = !DILocation(line: 10353, column: 5, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4483, file: !21, line: 10353, column: 5)
!4521 = !DILocation(line: 10353, column: 5, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4520, file: !21, line: 10353, column: 5)
!4523 = !DILocation(line: 10355, column: 5, scope: !4475)
!4524 = !DILocation(line: 10355, column: 5, scope: !4485)
!4525 = !DILocation(line: 10355, column: 5, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4485, file: !21, line: 10355, column: 5)
!4527 = !DILocation(line: 10355, column: 5, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4526, file: !21, line: 10355, column: 5)
!4529 = !DILocation(line: 10356, column: 5, scope: !4475)
!4530 = !DILocation(line: 10356, column: 5, scope: !4487)
!4531 = !DILocation(line: 10356, column: 5, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4487, file: !21, line: 10356, column: 5)
!4533 = !DILocation(line: 10356, column: 5, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !21, line: 10356, column: 5)
!4535 = !DILocation(line: 10357, column: 5, scope: !4475)
!4536 = !DILocation(line: 10357, column: 5, scope: !4489)
!4537 = !DILocation(line: 10357, column: 5, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4489, file: !21, line: 10357, column: 5)
!4539 = !DILocation(line: 10357, column: 5, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4538, file: !21, line: 10357, column: 5)
!4541 = !DILocation(line: 10358, column: 5, scope: !4475)
!4542 = !DILocation(line: 10358, column: 5, scope: !4491)
!4543 = !DILocation(line: 10358, column: 5, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4491, file: !21, line: 10358, column: 5)
!4545 = !DILocation(line: 10358, column: 5, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4544, file: !21, line: 10358, column: 5)
!4547 = !DILocation(line: 10359, column: 5, scope: !4475)
!4548 = !DILocation(line: 10359, column: 5, scope: !4493)
!4549 = !DILocation(line: 10359, column: 5, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4493, file: !21, line: 10359, column: 5)
!4551 = !DILocation(line: 10359, column: 5, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4550, file: !21, line: 10359, column: 5)
!4553 = !DILocation(line: 10360, column: 5, scope: !4475)
!4554 = !DILocation(line: 10360, column: 5, scope: !4495)
!4555 = !DILocation(line: 10360, column: 5, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4495, file: !21, line: 10360, column: 5)
!4557 = !DILocation(line: 10360, column: 5, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4556, file: !21, line: 10360, column: 5)
!4559 = !DILocation(line: 10366, column: 9, scope: !4497)
!4560 = !DILocation(line: 10366, column: 19, scope: !4497)
!4561 = !DILocation(line: 10366, column: 59, scope: !4497)
!4562 = !DILocation(line: 10366, column: 64, scope: !4497)
!4563 = !DILocation(line: 10367, column: 31, scope: !4497)
!4564 = !DILocation(line: 10367, column: 36, scope: !4497)
!4565 = !DILocation(line: 10367, column: 45, scope: !4497)
!4566 = !DILocation(line: 10368, column: 9, scope: !4497)
!4567 = !DILocation(line: 10369, column: 5, scope: !4475)
!4568 = !DILocation(line: 10372, column: 5, scope: !4475)
!4569 = !DILocation(line: 10372, column: 5, scope: !4499)
!4570 = !DILocation(line: 10372, column: 5, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4499, file: !21, line: 10372, column: 5)
!4572 = !DILocation(line: 10372, column: 5, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4571, file: !21, line: 10372, column: 5)
!4574 = !DILocation(line: 10373, column: 5, scope: !4475)
!4575 = !DILocation(line: 10373, column: 5, scope: !4501)
!4576 = !DILocation(line: 10373, column: 5, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4501, file: !21, line: 10373, column: 5)
!4578 = !DILocation(line: 10373, column: 5, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4577, file: !21, line: 10373, column: 5)
!4580 = !DILocation(line: 10374, column: 5, scope: !4475)
!4581 = !DILocation(line: 10374, column: 5, scope: !4503)
!4582 = !{!3885, !1900, i64 176}
!4583 = !DILocation(line: 10374, column: 5, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4503, file: !21, line: 10374, column: 5)
!4585 = !DILocation(line: 10374, column: 5, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4584, file: !21, line: 10374, column: 5)
!4587 = !DILocation(line: 10375, column: 5, scope: !4475)
!4588 = !DILocation(line: 10375, column: 5, scope: !4505)
!4589 = !DILocation(line: 10375, column: 5, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4505, file: !21, line: 10375, column: 5)
!4591 = !DILocation(line: 10375, column: 5, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4590, file: !21, line: 10375, column: 5)
!4593 = !DILocation(line: 10376, column: 9, scope: !4508)
!4594 = !DILocation(line: 10376, column: 12, scope: !4508)
!4595 = !DILocation(line: 10376, column: 9, scope: !4475)
!4596 = !DILocation(line: 10377, column: 9, scope: !4507)
!4597 = !DILocation(line: 10377, column: 20, scope: !4507)
!4598 = !DILocation(line: 10377, column: 33, scope: !4507)
!4599 = !DILocation(line: 10378, column: 9, scope: !4507)
!4600 = !DILocation(line: 10378, column: 13, scope: !4507)
!4601 = !DILocation(line: 10379, column: 16, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4507, file: !21, line: 10379, column: 9)
!4603 = !DILocation(line: 10379, column: 14, scope: !4602)
!4604 = !DILocation(line: 10379, column: 21, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !21, line: 10379, column: 9)
!4606 = !DILocation(line: 10379, column: 25, scope: !4605)
!4607 = !DILocation(line: 10379, column: 28, scope: !4605)
!4608 = !DILocation(line: 10379, column: 23, scope: !4605)
!4609 = !DILocation(line: 10379, column: 9, scope: !4602)
!4610 = !DILocation(line: 10380, column: 13, scope: !4605)
!4611 = !DILocation(line: 10379, column: 49, scope: !4605)
!4612 = !DILocation(line: 10379, column: 9, scope: !4605)
!4613 = distinct !{!4613, !4609, !4614, !4470}
!4614 = !DILocation(line: 10380, column: 13, scope: !4602)
!4615 = !DILocation(line: 10381, column: 23, scope: !4507)
!4616 = !DILocation(line: 10381, column: 26, scope: !4507)
!4617 = !DILocation(line: 10381, column: 9, scope: !4507)
!4618 = !DILocation(line: 10382, column: 9, scope: !4507)
!4619 = !DILocation(line: 10382, column: 12, scope: !4507)
!4620 = !DILocation(line: 10382, column: 21, scope: !4507)
!4621 = !DILocation(line: 10383, column: 5, scope: !4508)
!4622 = !DILocation(line: 10383, column: 5, scope: !4507)
!4623 = !DILocation(line: 10384, column: 5, scope: !4475)
!4624 = distinct !DISubprogram(name: "__Pyx_PyMethod_New", scope: !21, file: !21, line: 2370, type: !114, scopeLine: 2370, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4625)
!4625 = !{!4626, !4627, !4628}
!4626 = !DILocalVariable(name: "func", arg: 1, scope: !4624, file: !21, line: 2370, type: !28)
!4627 = !DILocalVariable(name: "self", arg: 2, scope: !4624, file: !21, line: 2370, type: !28)
!4628 = !DILocalVariable(name: "typ", arg: 3, scope: !4624, file: !21, line: 2370, type: !28)
!4629 = !DILocation(line: 2370, column: 47, scope: !4624)
!4630 = !DILocation(line: 2370, column: 63, scope: !4624)
!4631 = !DILocation(line: 2370, column: 79, scope: !4624)
!4632 = !DILocation(line: 2371, column: 5, scope: !4624)
!4633 = !DILocation(line: 2372, column: 10, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4624, file: !21, line: 2372, column: 9)
!4635 = !DILocation(line: 2372, column: 9, scope: !4624)
!4636 = !DILocation(line: 2373, column: 16, scope: !4634)
!4637 = !DILocation(line: 2373, column: 9, scope: !4634)
!4638 = !DILocation(line: 2374, column: 25, scope: !4624)
!4639 = !DILocation(line: 2374, column: 31, scope: !4624)
!4640 = !DILocation(line: 2374, column: 12, scope: !4624)
!4641 = !DILocation(line: 2374, column: 5, scope: !4624)
!4642 = !DILocation(line: 2375, column: 1, scope: !4624)
!4643 = !DISubprogram(name: "PyObject_GC_UnTrack", scope: !4644, file: !4644, line: 180, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4644 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/objimpl.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "51f87f55ba613adeb014c58e2d4a9451")
!4645 = distinct !DISubprogram(name: "__Pyx__CyFunction_dealloc", scope: !21, file: !21, line: 10386, type: !4179, scopeLine: 10387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4646)
!4646 = !{!4647}
!4647 = !DILocalVariable(name: "m", arg: 1, scope: !4645, file: !21, line: 10386, type: !354)
!4648 = !DILocation(line: 10386, column: 63, scope: !4645)
!4649 = !DILocation(line: 10388, column: 9, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !21, line: 10388, column: 9)
!4651 = !{!3887, !1900, i64 40}
!4652 = !DILocation(line: 10388, column: 41, scope: !4650)
!4653 = !DILocation(line: 10388, column: 9, scope: !4645)
!4654 = !DILocation(line: 10389, column: 45, scope: !4650)
!4655 = !DILocation(line: 10389, column: 9, scope: !4650)
!4656 = !DILocation(line: 10390, column: 28, scope: !4645)
!4657 = !DILocation(line: 10390, column: 5, scope: !4645)
!4658 = !DILocation(line: 10391, column: 5, scope: !4645)
!4659 = !DILocation(line: 10392, column: 1, scope: !4645)
!4660 = !DISubprogram(name: "PyObject_ClearWeakRefs", scope: !6, file: !6, line: 306, type: !62, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4661 = !DISubprogram(name: "PyObject_GC_Del", scope: !4644, file: !4644, line: 182, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4662 = !DISubprogram(name: "PyUnicode_FromFormat", scope: !544, file: !544, line: 258, type: !4663, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!28, !54, null}
!4665 = distinct !DISubprogram(name: "__Pyx_PyVectorcall_FastCallDict", scope: !21, file: !21, line: 9863, type: !4666, scopeLine: 9864, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4668)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!28, !28, !335, !339, !341, !28}
!4668 = !{!4669, !4670, !4671, !4672, !4673}
!4669 = !DILocalVariable(name: "func", arg: 1, scope: !4665, file: !21, line: 9863, type: !28)
!4670 = !DILocalVariable(name: "vc", arg: 2, scope: !4665, file: !21, line: 9863, type: !335)
!4671 = !DILocalVariable(name: "args", arg: 3, scope: !4665, file: !21, line: 9863, type: !339)
!4672 = !DILocalVariable(name: "nargs", arg: 4, scope: !4665, file: !21, line: 9863, type: !341)
!4673 = !DILocalVariable(name: "kw", arg: 5, scope: !4665, file: !21, line: 9863, type: !28)
!4674 = !DILocation(line: 9863, column: 74, scope: !4665)
!4675 = !DILocation(line: 9863, column: 101, scope: !4665)
!4676 = !DILocation(line: 9863, column: 122, scope: !4665)
!4677 = !DILocation(line: 9863, column: 135, scope: !4665)
!4678 = !DILocation(line: 9863, column: 152, scope: !4665)
!4679 = !DILocation(line: 9865, column: 9, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4665, file: !21, line: 9865, column: 9)
!4681 = !DILocation(line: 9865, column: 28, scope: !4680)
!4682 = !DILocation(line: 9865, column: 31, scope: !4680)
!4683 = !{!4684, !2424, i64 16}
!4684 = !{!"", !2423, i64 0, !2424, i64 16, !2424, i64 24, !1900, i64 32, !1900, i64 40}
!4685 = !DILocation(line: 9865, column: 51, scope: !4680)
!4686 = !DILocation(line: 9865, column: 9, scope: !4665)
!4687 = !DILocation(line: 9866, column: 16, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4680, file: !21, line: 9865, column: 57)
!4689 = !DILocation(line: 9866, column: 19, scope: !4688)
!4690 = !DILocation(line: 9866, column: 25, scope: !4688)
!4691 = !DILocation(line: 9866, column: 31, scope: !4688)
!4692 = !DILocation(line: 9866, column: 9, scope: !4688)
!4693 = !DILocation(line: 9868, column: 47, scope: !4665)
!4694 = !DILocation(line: 9868, column: 53, scope: !4665)
!4695 = !DILocation(line: 9868, column: 57, scope: !4665)
!4696 = !DILocation(line: 9868, column: 63, scope: !4665)
!4697 = !DILocation(line: 9868, column: 70, scope: !4665)
!4698 = !DILocation(line: 9868, column: 12, scope: !4665)
!4699 = !DILocation(line: 9868, column: 5, scope: !4665)
!4700 = !DILocation(line: 9869, column: 1, scope: !4665)
!4701 = distinct !DISubprogram(name: "PyTuple_GET_SIZE", scope: !382, file: !382, line: 22, type: !158, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4702)
!4702 = !{!4703, !4704}
!4703 = !DILocalVariable(name: "op", arg: 1, scope: !4701, file: !382, line: 22, type: !28)
!4704 = !DILocalVariable(name: "tuple", scope: !4701, file: !382, line: 23, type: !380)
!4705 = !DILocation(line: 22, column: 53, scope: !4701)
!4706 = !DILocation(line: 23, column: 5, scope: !4701)
!4707 = !DILocation(line: 23, column: 20, scope: !4701)
!4708 = !DILocation(line: 23, column: 28, scope: !4701)
!4709 = !DILocation(line: 24, column: 12, scope: !4701)
!4710 = !DILocation(line: 25, column: 1, scope: !4701)
!4711 = !DILocation(line: 24, column: 5, scope: !4701)
!4712 = !DISubprogram(name: "PyTuple_GetSlice", scope: !2799, file: !2799, line: 34, type: !4713, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{!28, !28, !34, !34}
!4715 = !DISubprogram(name: "PyTuple_GetItem", scope: !2799, file: !2799, line: 32, type: !164, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4716 = distinct !DISubprogram(name: "__Pyx_CyFunction_CallMethod", scope: !21, file: !21, line: 10437, type: !4717, scopeLine: 10437, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4719)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!28, !28, !28, !28, !28}
!4719 = !{!4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4734}
!4720 = !DILocalVariable(name: "func", arg: 1, scope: !4716, file: !21, line: 10437, type: !28)
!4721 = !DILocalVariable(name: "self", arg: 2, scope: !4716, file: !21, line: 10437, type: !28)
!4722 = !DILocalVariable(name: "arg", arg: 3, scope: !4716, file: !21, line: 10437, type: !28)
!4723 = !DILocalVariable(name: "kw", arg: 4, scope: !4716, file: !21, line: 10437, type: !28)
!4724 = !DILocalVariable(name: "f", scope: !4716, file: !21, line: 10448, type: !343)
!4725 = !DILocalVariable(name: "meth", scope: !4716, file: !21, line: 10449, type: !268)
!4726 = !DILocalVariable(name: "flags", scope: !4716, file: !21, line: 10450, type: !7)
!4727 = !DILocalVariable(name: "size", scope: !4716, file: !21, line: 10452, type: !34)
!4728 = !DILocalVariable(name: "result", scope: !4729, file: !21, line: 10494, type: !28)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !21, line: 10493, column: 36)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !21, line: 10493, column: 17)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !21, line: 10486, column: 57)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !21, line: 10486, column: 13)
!4733 = distinct !DILexicalBlock(scope: !4716, file: !21, line: 10453, column: 76)
!4734 = !DILocalVariable(name: "arg0", scope: !4729, file: !21, line: 10494, type: !28)
!4735 = !DILocation(line: 10437, column: 57, scope: !4716)
!4736 = !DILocation(line: 10437, column: 73, scope: !4716)
!4737 = !DILocation(line: 10437, column: 89, scope: !4716)
!4738 = !DILocation(line: 10437, column: 104, scope: !4716)
!4739 = !DILocation(line: 10448, column: 5, scope: !4716)
!4740 = !DILocation(line: 10448, column: 24, scope: !4716)
!4741 = !DILocation(line: 10448, column: 48, scope: !4716)
!4742 = !DILocation(line: 10449, column: 5, scope: !4716)
!4743 = !DILocation(line: 10449, column: 17, scope: !4716)
!4744 = !DILocation(line: 10449, column: 24, scope: !4716)
!4745 = !DILocation(line: 10449, column: 27, scope: !4716)
!4746 = !{!3887, !1900, i64 16}
!4747 = !DILocation(line: 10449, column: 33, scope: !4716)
!4748 = !{!4749, !1900, i64 8}
!4749 = !{!"PyMethodDef", !1900, i64 0, !1900, i64 8, !1985, i64 16, !1900, i64 24}
!4750 = !DILocation(line: 10450, column: 5, scope: !4716)
!4751 = !DILocation(line: 10450, column: 9, scope: !4716)
!4752 = !DILocation(line: 10450, column: 17, scope: !4716)
!4753 = !DILocation(line: 10450, column: 20, scope: !4716)
!4754 = !DILocation(line: 10450, column: 26, scope: !4716)
!4755 = !{!4749, !1985, i64 16}
!4756 = !DILocation(line: 10452, column: 5, scope: !4716)
!4757 = !DILocation(line: 10452, column: 16, scope: !4716)
!4758 = !DILocation(line: 10453, column: 13, scope: !4716)
!4759 = !DILocation(line: 10453, column: 19, scope: !4716)
!4760 = !DILocation(line: 10453, column: 5, scope: !4716)
!4761 = !DILocation(line: 10455, column: 13, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4733, file: !21, line: 10455, column: 13)
!4763 = !DILocation(line: 10455, column: 13, scope: !4733)
!4764 = !DILocation(line: 10456, column: 22, scope: !4762)
!4765 = !DILocation(line: 10456, column: 28, scope: !4762)
!4766 = !DILocation(line: 10456, column: 34, scope: !4762)
!4767 = !DILocation(line: 10456, column: 20, scope: !4762)
!4768 = !DILocation(line: 10456, column: 13, scope: !4762)
!4769 = !DILocation(line: 10457, column: 9, scope: !4733)
!4770 = !DILocation(line: 10459, column: 50, scope: !4733)
!4771 = !DILocation(line: 10459, column: 56, scope: !4733)
!4772 = !DILocation(line: 10459, column: 62, scope: !4733)
!4773 = !DILocation(line: 10459, column: 67, scope: !4733)
!4774 = !DILocation(line: 10459, column: 16, scope: !4733)
!4775 = !DILocation(line: 10459, column: 9, scope: !4733)
!4776 = !DILocation(line: 10461, column: 13, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4733, file: !21, line: 10461, column: 13)
!4778 = !DILocation(line: 10461, column: 13, scope: !4733)
!4779 = !DILocation(line: 10463, column: 20, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !21, line: 10461, column: 57)
!4781 = !DILocation(line: 10463, column: 18, scope: !4780)
!4782 = !DILocation(line: 10468, column: 17, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4780, file: !21, line: 10468, column: 17)
!4784 = !DILocation(line: 10468, column: 17, scope: !4780)
!4785 = !DILocation(line: 10469, column: 26, scope: !4783)
!4786 = !DILocation(line: 10469, column: 32, scope: !4783)
!4787 = !DILocation(line: 10469, column: 24, scope: !4783)
!4788 = !DILocation(line: 10469, column: 17, scope: !4783)
!4789 = !DILocation(line: 10478, column: 26, scope: !4780)
!4790 = !DILocation(line: 10480, column: 17, scope: !4780)
!4791 = !DILocation(line: 10480, column: 20, scope: !4780)
!4792 = !DILocation(line: 10480, column: 26, scope: !4780)
!4793 = !{!4749, !1900, i64 0}
!4794 = !DILocation(line: 10480, column: 35, scope: !4780)
!4795 = !DILocation(line: 10478, column: 13, scope: !4780)
!4796 = !DILocation(line: 10482, column: 13, scope: !4780)
!4797 = !DILocation(line: 10484, column: 9, scope: !4733)
!4798 = !DILocation(line: 10486, column: 13, scope: !4732)
!4799 = !DILocation(line: 10486, column: 13, scope: !4733)
!4800 = !DILocation(line: 10488, column: 20, scope: !4731)
!4801 = !DILocation(line: 10488, column: 18, scope: !4731)
!4802 = !DILocation(line: 10493, column: 17, scope: !4730)
!4803 = !DILocation(line: 10493, column: 17, scope: !4731)
!4804 = !DILocation(line: 10494, column: 17, scope: !4729)
!4805 = !DILocation(line: 10494, column: 27, scope: !4729)
!4806 = !DILocation(line: 10494, column: 36, scope: !4729)
!4807 = !DILocation(line: 10496, column: 24, scope: !4729)
!4808 = !DILocation(line: 10496, column: 22, scope: !4729)
!4809 = !DILocation(line: 10500, column: 28, scope: !4729)
!4810 = !DILocation(line: 10500, column: 34, scope: !4729)
!4811 = !DILocation(line: 10500, column: 40, scope: !4729)
!4812 = !DILocation(line: 10500, column: 26, scope: !4729)
!4813 = !DILocation(line: 10500, column: 24, scope: !4729)
!4814 = !DILocation(line: 10504, column: 24, scope: !4729)
!4815 = !DILocation(line: 10504, column: 17, scope: !4729)
!4816 = !DILocation(line: 10505, column: 13, scope: !4730)
!4817 = !DILocation(line: 10514, column: 26, scope: !4731)
!4818 = !DILocation(line: 10516, column: 17, scope: !4731)
!4819 = !DILocation(line: 10516, column: 20, scope: !4731)
!4820 = !DILocation(line: 10516, column: 26, scope: !4731)
!4821 = !DILocation(line: 10516, column: 35, scope: !4731)
!4822 = !DILocation(line: 10514, column: 13, scope: !4731)
!4823 = !DILocation(line: 10518, column: 13, scope: !4731)
!4824 = !DILocation(line: 10520, column: 9, scope: !4733)
!4825 = !DILocation(line: 10522, column: 25, scope: !4733)
!4826 = !DILocation(line: 10522, column: 9, scope: !4733)
!4827 = !DILocation(line: 10523, column: 9, scope: !4733)
!4828 = !DILocation(line: 10532, column: 18, scope: !4716)
!4829 = !DILocation(line: 10533, column: 18, scope: !4716)
!4830 = !DILocation(line: 10533, column: 21, scope: !4716)
!4831 = !DILocation(line: 10533, column: 27, scope: !4716)
!4832 = !DILocation(line: 10532, column: 5, scope: !4716)
!4833 = !DILocation(line: 10535, column: 5, scope: !4716)
!4834 = !DILocation(line: 10536, column: 1, scope: !4716)
!4835 = distinct !DISubprogram(name: "__Pyx_CyFunction_Call", scope: !21, file: !21, line: 10537, type: !114, scopeLine: 10537, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4836)
!4836 = !{!4837, !4838, !4839, !4840, !4841}
!4837 = !DILocalVariable(name: "func", arg: 1, scope: !4835, file: !21, line: 10537, type: !28)
!4838 = !DILocalVariable(name: "arg", arg: 2, scope: !4835, file: !21, line: 10537, type: !28)
!4839 = !DILocalVariable(name: "kw", arg: 3, scope: !4835, file: !21, line: 10537, type: !28)
!4840 = !DILocalVariable(name: "self", scope: !4835, file: !21, line: 10538, type: !28)
!4841 = !DILocalVariable(name: "result", scope: !4835, file: !21, line: 10538, type: !28)
!4842 = !DILocation(line: 10537, column: 64, scope: !4835)
!4843 = !DILocation(line: 10537, column: 80, scope: !4835)
!4844 = !DILocation(line: 10537, column: 95, scope: !4835)
!4845 = !DILocation(line: 10538, column: 5, scope: !4835)
!4846 = !DILocation(line: 10538, column: 15, scope: !4835)
!4847 = !DILocation(line: 10538, column: 22, scope: !4835)
!4848 = !DILocation(line: 10543, column: 33, scope: !4835)
!4849 = !DILocation(line: 10543, column: 40, scope: !4835)
!4850 = !{!3887, !1900, i64 24}
!4851 = !DILocation(line: 10543, column: 10, scope: !4835)
!4852 = !DILocation(line: 10545, column: 42, scope: !4835)
!4853 = !DILocation(line: 10545, column: 48, scope: !4835)
!4854 = !DILocation(line: 10545, column: 54, scope: !4835)
!4855 = !DILocation(line: 10545, column: 59, scope: !4835)
!4856 = !DILocation(line: 10545, column: 14, scope: !4835)
!4857 = !DILocation(line: 10545, column: 12, scope: !4835)
!4858 = !DILocation(line: 10546, column: 12, scope: !4835)
!4859 = !DILocation(line: 10547, column: 1, scope: !4835)
!4860 = !DILocation(line: 10546, column: 5, scope: !4835)
!4861 = distinct !DISubprogram(name: "__Pyx_PyVectorcall_FastCallDict_kw", scope: !21, file: !21, line: 9818, type: !4666, scopeLine: 9819, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4862)
!4862 = !{!4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879}
!4863 = !DILocalVariable(name: "func", arg: 1, scope: !4861, file: !21, line: 9818, type: !28)
!4864 = !DILocalVariable(name: "vc", arg: 2, scope: !4861, file: !21, line: 9818, type: !335)
!4865 = !DILocalVariable(name: "args", arg: 3, scope: !4861, file: !21, line: 9818, type: !339)
!4866 = !DILocalVariable(name: "nargs", arg: 4, scope: !4861, file: !21, line: 9818, type: !341)
!4867 = !DILocalVariable(name: "kw", arg: 5, scope: !4861, file: !21, line: 9818, type: !28)
!4868 = !DILocalVariable(name: "res", scope: !4861, file: !21, line: 9820, type: !28)
!4869 = !DILocalVariable(name: "kwnames", scope: !4861, file: !21, line: 9821, type: !28)
!4870 = !DILocalVariable(name: "newargs", scope: !4861, file: !21, line: 9822, type: !94)
!4871 = !DILocalVariable(name: "kwvalues", scope: !4861, file: !21, line: 9823, type: !94)
!4872 = !DILocalVariable(name: "i", scope: !4861, file: !21, line: 9824, type: !34)
!4873 = !DILocalVariable(name: "pos", scope: !4861, file: !21, line: 9824, type: !34)
!4874 = !DILocalVariable(name: "j", scope: !4861, file: !21, line: 9825, type: !341)
!4875 = !DILocalVariable(name: "key", scope: !4861, file: !21, line: 9826, type: !28)
!4876 = !DILocalVariable(name: "value", scope: !4861, file: !21, line: 9826, type: !28)
!4877 = !DILocalVariable(name: "keys_are_strings", scope: !4861, file: !21, line: 9827, type: !238)
!4878 = !DILocalVariable(name: "nkw", scope: !4861, file: !21, line: 9828, type: !34)
!4879 = !DILabel(scope: !4861, name: "cleanup", file: !21, line: 9856)
!4880 = !DILocation(line: 9818, column: 63, scope: !4861)
!4881 = !DILocation(line: 9818, column: 90, scope: !4861)
!4882 = !DILocation(line: 9818, column: 111, scope: !4861)
!4883 = !DILocation(line: 9818, column: 124, scope: !4861)
!4884 = !DILocation(line: 9818, column: 141, scope: !4861)
!4885 = !DILocation(line: 9820, column: 5, scope: !4861)
!4886 = !DILocation(line: 9820, column: 15, scope: !4861)
!4887 = !DILocation(line: 9821, column: 5, scope: !4861)
!4888 = !DILocation(line: 9821, column: 15, scope: !4861)
!4889 = !DILocation(line: 9822, column: 5, scope: !4861)
!4890 = !DILocation(line: 9822, column: 16, scope: !4861)
!4891 = !DILocation(line: 9823, column: 5, scope: !4861)
!4892 = !DILocation(line: 9823, column: 16, scope: !4861)
!4893 = !DILocation(line: 9824, column: 5, scope: !4861)
!4894 = !DILocation(line: 9824, column: 16, scope: !4861)
!4895 = !DILocation(line: 9824, column: 19, scope: !4861)
!4896 = !DILocation(line: 9825, column: 5, scope: !4861)
!4897 = !DILocation(line: 9825, column: 12, scope: !4861)
!4898 = !DILocation(line: 9826, column: 5, scope: !4861)
!4899 = !DILocation(line: 9826, column: 15, scope: !4861)
!4900 = !DILocation(line: 9826, column: 21, scope: !4861)
!4901 = !DILocation(line: 9827, column: 5, scope: !4861)
!4902 = !DILocation(line: 9827, column: 19, scope: !4861)
!4903 = !DILocation(line: 9828, column: 5, scope: !4861)
!4904 = !DILocation(line: 9828, column: 16, scope: !4861)
!4905 = !DILocation(line: 9828, column: 22, scope: !4861)
!4906 = !DILocation(line: 9829, column: 42, scope: !4861)
!4907 = !DILocation(line: 9829, column: 58, scope: !4861)
!4908 = !DILocation(line: 9829, column: 48, scope: !4861)
!4909 = !DILocation(line: 9829, column: 63, scope: !4861)
!4910 = !DILocation(line: 9829, column: 28, scope: !4861)
!4911 = !DILocation(line: 9829, column: 13, scope: !4861)
!4912 = !DILocation(line: 9830, column: 9, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4861, file: !21, line: 9830, column: 9)
!4914 = !DILocation(line: 9830, column: 9, scope: !4861)
!4915 = !DILocation(line: 9831, column: 9, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4913, file: !21, line: 9830, column: 36)
!4917 = !DILocation(line: 9832, column: 9, scope: !4916)
!4918 = !DILocation(line: 9834, column: 12, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4861, file: !21, line: 9834, column: 5)
!4920 = !DILocation(line: 9834, column: 10, scope: !4919)
!4921 = !DILocation(line: 9834, column: 17, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4919, file: !21, line: 9834, column: 5)
!4923 = !DILocation(line: 9834, column: 21, scope: !4922)
!4924 = !DILocation(line: 9834, column: 19, scope: !4922)
!4925 = !DILocation(line: 9834, column: 5, scope: !4919)
!4926 = !DILocation(line: 9834, column: 46, scope: !4922)
!4927 = !DILocation(line: 9834, column: 51, scope: !4922)
!4928 = !DILocation(line: 9834, column: 33, scope: !4922)
!4929 = !DILocation(line: 9834, column: 41, scope: !4922)
!4930 = !DILocation(line: 9834, column: 44, scope: !4922)
!4931 = !DILocation(line: 9834, column: 29, scope: !4922)
!4932 = !DILocation(line: 9834, column: 5, scope: !4922)
!4933 = distinct !{!4933, !4925, !4934, !4470}
!4934 = !DILocation(line: 9834, column: 52, scope: !4919)
!4935 = !DILocation(line: 9835, column: 27, scope: !4861)
!4936 = !DILocation(line: 9835, column: 15, scope: !4861)
!4937 = !DILocation(line: 9835, column: 13, scope: !4861)
!4938 = !DILocation(line: 9836, column: 9, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4861, file: !21, line: 9836, column: 9)
!4940 = !DILocation(line: 9836, column: 9, scope: !4861)
!4941 = !DILocation(line: 9837, column: 20, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4939, file: !21, line: 9836, column: 36)
!4943 = !DILocation(line: 9837, column: 9, scope: !4942)
!4944 = !DILocation(line: 9838, column: 9, scope: !4942)
!4945 = !DILocation(line: 9840, column: 16, scope: !4861)
!4946 = !DILocation(line: 9840, column: 26, scope: !4861)
!4947 = !DILocation(line: 9840, column: 24, scope: !4861)
!4948 = !DILocation(line: 9840, column: 14, scope: !4861)
!4949 = !DILocation(line: 9841, column: 13, scope: !4861)
!4950 = !DILocation(line: 9841, column: 9, scope: !4861)
!4951 = !DILocation(line: 9842, column: 22, scope: !4861)
!4952 = !DILocation(line: 9843, column: 5, scope: !4861)
!4953 = !DILocation(line: 9843, column: 24, scope: !4861)
!4954 = !DILocation(line: 9843, column: 12, scope: !4861)
!4955 = !DILocation(line: 9844, column: 29, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4861, file: !21, line: 9843, column: 49)
!4957 = !DILocation(line: 9844, column: 43, scope: !4956)
!4958 = !DILocation(line: 9844, column: 26, scope: !4956)
!4959 = !DILocation(line: 9845, column: 9, scope: !4956)
!4960 = !DILocation(line: 9846, column: 9, scope: !4956)
!4961 = !DILocation(line: 9847, column: 9, scope: !4956)
!4962 = !DILocation(line: 9848, column: 23, scope: !4956)
!4963 = !DILocation(line: 9848, column: 9, scope: !4956)
!4964 = !DILocation(line: 9848, column: 18, scope: !4956)
!4965 = !DILocation(line: 9848, column: 21, scope: !4956)
!4966 = !DILocation(line: 9849, column: 10, scope: !4956)
!4967 = distinct !{!4967, !4952, !4968, !4470}
!4968 = !DILocation(line: 9850, column: 5, scope: !4861)
!4969 = !DILocation(line: 9851, column: 9, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4861, file: !21, line: 9851, column: 9)
!4971 = !DILocation(line: 9851, column: 9, scope: !4861)
!4972 = !DILocation(line: 9852, column: 25, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4970, file: !21, line: 9851, column: 38)
!4974 = !DILocation(line: 9852, column: 9, scope: !4973)
!4975 = !DILocation(line: 9853, column: 9, scope: !4973)
!4976 = !DILocation(line: 9855, column: 11, scope: !4861)
!4977 = !DILocation(line: 9855, column: 14, scope: !4861)
!4978 = !DILocation(line: 9855, column: 20, scope: !4861)
!4979 = !DILocation(line: 9855, column: 29, scope: !4861)
!4980 = !DILocation(line: 9855, column: 36, scope: !4861)
!4981 = !DILocation(line: 9855, column: 9, scope: !4861)
!4982 = !DILocation(line: 9855, column: 5, scope: !4861)
!4983 = !DILocation(line: 9856, column: 1, scope: !4861)
!4984 = !DILocation(line: 9857, column: 5, scope: !4861)
!4985 = !DILocation(line: 9858, column: 12, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4861, file: !21, line: 9858, column: 5)
!4987 = !DILocation(line: 9858, column: 10, scope: !4986)
!4988 = !DILocation(line: 9858, column: 17, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4986, file: !21, line: 9858, column: 5)
!4990 = !DILocation(line: 9858, column: 21, scope: !4989)
!4991 = !DILocation(line: 9858, column: 19, scope: !4989)
!4992 = !DILocation(line: 9858, column: 5, scope: !4986)
!4993 = !DILocation(line: 9859, column: 9, scope: !4989)
!4994 = !DILocation(line: 9858, column: 27, scope: !4989)
!4995 = !DILocation(line: 9858, column: 5, scope: !4989)
!4996 = distinct !{!4996, !4992, !4997, !4470}
!4997 = !DILocation(line: 9859, column: 9, scope: !4986)
!4998 = !DILocation(line: 9860, column: 16, scope: !4861)
!4999 = !DILocation(line: 9860, column: 5, scope: !4861)
!5000 = !DILocation(line: 9861, column: 12, scope: !4861)
!5001 = !DILocation(line: 9861, column: 5, scope: !4861)
!5002 = !DILocation(line: 9862, column: 1, scope: !4861)
!5003 = !DISubprogram(name: "PyMem_Malloc", scope: !5004, file: !5004, line: 52, type: !5005, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5004 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pymem.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "def2bc9518ac308a42a6a9761801810f")
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!27, !341}
!5007 = !DISubprogram(name: "PyErr_NoMemory", scope: !2720, file: !2720, line: 163, type: !692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5008 = !DISubprogram(name: "PyMem_Free", scope: !5004, file: !5004, line: 55, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5009 = !DISubprogram(name: "PyDict_Next", scope: !2725, file: !2725, line: 27, type: !5010, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!7, !28, !228, !94, !94}
!5012 = distinct !DISubprogram(name: "PyTuple_SET_ITEM", scope: !382, file: !382, line: 34, type: !3648, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5013)
!5013 = !{!5014, !5015, !5016, !5017}
!5014 = !DILocalVariable(name: "op", arg: 1, scope: !5012, file: !382, line: 34, type: !28)
!5015 = !DILocalVariable(name: "index", arg: 2, scope: !5012, file: !382, line: 34, type: !34)
!5016 = !DILocalVariable(name: "value", arg: 3, scope: !5012, file: !382, line: 34, type: !28)
!5017 = !DILocalVariable(name: "tuple", scope: !5012, file: !382, line: 35, type: !380)
!5018 = !DILocation(line: 34, column: 28, scope: !5012)
!5019 = !DILocation(line: 34, column: 43, scope: !5012)
!5020 = !DILocation(line: 34, column: 60, scope: !5012)
!5021 = !DILocation(line: 35, column: 5, scope: !5012)
!5022 = !DILocation(line: 35, column: 20, scope: !5012)
!5023 = !DILocation(line: 35, column: 28, scope: !5012)
!5024 = !DILocation(line: 36, column: 29, scope: !5012)
!5025 = !DILocation(line: 36, column: 5, scope: !5012)
!5026 = !DILocation(line: 36, column: 12, scope: !5012)
!5027 = !DILocation(line: 36, column: 20, scope: !5012)
!5028 = !DILocation(line: 36, column: 27, scope: !5012)
!5029 = !DILocation(line: 37, column: 1, scope: !5012)
!5030 = distinct !DISubprogram(name: "Py_SIZE", scope: !6, file: !6, line: 140, type: !158, scopeLine: 140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5031)
!5031 = !{!5032, !5033}
!5032 = !DILocalVariable(name: "ob", arg: 1, scope: !5030, file: !6, line: 140, type: !28)
!5033 = !DILocalVariable(name: "var_ob", scope: !5030, file: !6, line: 141, type: !409)
!5034 = !DILocation(line: 140, column: 44, scope: !5030)
!5035 = !DILocation(line: 141, column: 5, scope: !5030)
!5036 = !DILocation(line: 141, column: 18, scope: !5030)
!5037 = !DILocation(line: 141, column: 27, scope: !5030)
!5038 = !DILocation(line: 142, column: 12, scope: !5030)
!5039 = !DILocation(line: 142, column: 20, scope: !5030)
!5040 = !{!2422, !2424, i64 16}
!5041 = !DILocation(line: 143, column: 1, scope: !5030)
!5042 = !DILocation(line: 142, column: 5, scope: !5030)
!5043 = !DISubprogram(name: "PyDict_Size", scope: !2725, file: !2725, line: 32, type: !158, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5044 = !DISubprogram(name: "PyObject_Free", scope: !4644, file: !4644, line: 102, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5045 = distinct !DISubprogram(name: "__Pyx_CyFunction_reduce", scope: !21, file: !21, line: 10257, type: !5046, scopeLine: 10258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5048)
!5046 = !DISubroutineType(types: !5047)
!5047 = !{!28, !354, !28}
!5048 = !{!5049, !5050}
!5049 = !DILocalVariable(name: "m", arg: 1, scope: !5045, file: !21, line: 10257, type: !354)
!5050 = !DILocalVariable(name: "args", arg: 2, scope: !5045, file: !21, line: 10257, type: !28)
!5051 = !DILocation(line: 10257, column: 49, scope: !5045)
!5052 = !DILocation(line: 10257, column: 62, scope: !5045)
!5053 = !DILocation(line: 10259, column: 5, scope: !5045)
!5054 = !DILocation(line: 10261, column: 5, scope: !5045)
!5055 = !DILocation(line: 10262, column: 12, scope: !5045)
!5056 = !DILocation(line: 10262, column: 15, scope: !5045)
!5057 = !DILocation(line: 10262, column: 5, scope: !5045)
!5058 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_doc", scope: !21, file: !21, line: 9899, type: !5059, scopeLine: 9900, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5061)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{!28, !354, !27}
!5061 = !{!5062, !5063}
!5062 = !DILocalVariable(name: "op", arg: 1, scope: !5058, file: !21, line: 9899, type: !354)
!5063 = !DILocalVariable(name: "closure", arg: 2, scope: !5058, file: !21, line: 9899, type: !27)
!5064 = !DILocation(line: 9899, column: 50, scope: !5058)
!5065 = !DILocation(line: 9899, column: 60, scope: !5058)
!5066 = !DILocation(line: 9901, column: 5, scope: !5058)
!5067 = !DILocation(line: 9902, column: 9, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5058, file: !21, line: 9902, column: 9)
!5069 = !DILocation(line: 9902, column: 9, scope: !5058)
!5070 = !DILocation(line: 9907, column: 34, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !21, line: 9907, column: 13)
!5072 = distinct !DILexicalBlock(scope: !5068, file: !21, line: 9902, column: 41)
!5073 = !DILocation(line: 9907, column: 39, scope: !5071)
!5074 = !DILocation(line: 9907, column: 45, scope: !5071)
!5075 = !{!4749, !1900, i64 24}
!5076 = !DILocation(line: 9907, column: 13, scope: !5071)
!5077 = !DILocation(line: 9907, column: 13, scope: !5072)
!5078 = !DILocation(line: 9909, column: 70, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5071, file: !21, line: 9907, column: 53)
!5080 = !DILocation(line: 9909, column: 75, scope: !5079)
!5081 = !DILocation(line: 9909, column: 81, scope: !5079)
!5082 = !DILocation(line: 9909, column: 28, scope: !5079)
!5083 = !DILocation(line: 9909, column: 13, scope: !5079)
!5084 = !DILocation(line: 9909, column: 17, scope: !5079)
!5085 = !DILocation(line: 9909, column: 26, scope: !5079)
!5086 = !DILocation(line: 9913, column: 17, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5079, file: !21, line: 9913, column: 17)
!5088 = !DILocation(line: 9913, column: 17, scope: !5079)
!5089 = !DILocation(line: 9914, column: 17, scope: !5087)
!5090 = !DILocation(line: 9915, column: 9, scope: !5079)
!5091 = !DILocation(line: 9916, column: 13, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5071, file: !21, line: 9915, column: 16)
!5093 = !DILocation(line: 9917, column: 13, scope: !5092)
!5094 = !DILocation(line: 9920, column: 5, scope: !5072)
!5095 = !DILocation(line: 9921, column: 5, scope: !5058)
!5096 = !DILocation(line: 9922, column: 12, scope: !5058)
!5097 = !DILocation(line: 9922, column: 16, scope: !5058)
!5098 = !DILocation(line: 9922, column: 5, scope: !5058)
!5099 = !DILocation(line: 9923, column: 1, scope: !5058)
!5100 = distinct !DISubprogram(name: "__Pyx_CyFunction_set_doc", scope: !21, file: !21, line: 9925, type: !5101, scopeLine: 9926, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5103)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!7, !354, !28, !27}
!5103 = !{!5104, !5105, !5106, !5107}
!5104 = !DILocalVariable(name: "op", arg: 1, scope: !5100, file: !21, line: 9925, type: !354)
!5105 = !DILocalVariable(name: "value", arg: 2, scope: !5100, file: !21, line: 9925, type: !28)
!5106 = !DILocalVariable(name: "context", arg: 3, scope: !5100, file: !21, line: 9925, type: !27)
!5107 = !DILocalVariable(name: "tmp", scope: !5108, file: !21, line: 9932, type: !28)
!5108 = distinct !DILexicalBlock(scope: !5100, file: !21, line: 9932, column: 5)
!5109 = !DILocation(line: 9925, column: 50, scope: !5100)
!5110 = !DILocation(line: 9925, column: 64, scope: !5100)
!5111 = !DILocation(line: 9925, column: 77, scope: !5100)
!5112 = !DILocation(line: 9927, column: 5, scope: !5100)
!5113 = !DILocation(line: 9928, column: 9, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5100, file: !21, line: 9928, column: 9)
!5115 = !DILocation(line: 9928, column: 15, scope: !5114)
!5116 = !DILocation(line: 9928, column: 9, scope: !5100)
!5117 = !DILocation(line: 9929, column: 15, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !21, line: 9928, column: 24)
!5119 = !DILocation(line: 9930, column: 5, scope: !5118)
!5120 = !DILocation(line: 9931, column: 5, scope: !5100)
!5121 = !DILocation(line: 9932, column: 5, scope: !5100)
!5122 = !DILocation(line: 9932, column: 5, scope: !5108)
!5123 = !DILocation(line: 9933, column: 5, scope: !5100)
!5124 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_name", scope: !21, file: !21, line: 9936, type: !5059, scopeLine: 9937, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5125)
!5125 = !{!5126, !5127}
!5126 = !DILocalVariable(name: "op", arg: 1, scope: !5124, file: !21, line: 9936, type: !354)
!5127 = !DILocalVariable(name: "context", arg: 2, scope: !5124, file: !21, line: 9936, type: !27)
!5128 = !DILocation(line: 9936, column: 51, scope: !5124)
!5129 = !DILocation(line: 9936, column: 61, scope: !5124)
!5130 = !DILocation(line: 9938, column: 5, scope: !5124)
!5131 = !DILocation(line: 9939, column: 9, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5124, file: !21, line: 9939, column: 9)
!5133 = !DILocation(line: 9939, column: 9, scope: !5124)
!5134 = !DILocation(line: 9943, column: 73, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !21, line: 9939, column: 42)
!5136 = !DILocation(line: 9943, column: 78, scope: !5135)
!5137 = !DILocation(line: 9943, column: 84, scope: !5135)
!5138 = !DILocation(line: 9943, column: 25, scope: !5135)
!5139 = !DILocation(line: 9943, column: 9, scope: !5135)
!5140 = !DILocation(line: 9943, column: 13, scope: !5135)
!5141 = !DILocation(line: 9943, column: 23, scope: !5135)
!5142 = !DILocation(line: 9947, column: 13, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5135, file: !21, line: 9947, column: 13)
!5144 = !DILocation(line: 9947, column: 13, scope: !5135)
!5145 = !DILocation(line: 9948, column: 13, scope: !5143)
!5146 = !DILocation(line: 9949, column: 5, scope: !5135)
!5147 = !DILocation(line: 9950, column: 5, scope: !5124)
!5148 = !DILocation(line: 9951, column: 12, scope: !5124)
!5149 = !DILocation(line: 9951, column: 16, scope: !5124)
!5150 = !DILocation(line: 9951, column: 5, scope: !5124)
!5151 = !DILocation(line: 9952, column: 1, scope: !5124)
!5152 = distinct !DISubprogram(name: "__Pyx_CyFunction_set_name", scope: !21, file: !21, line: 9954, type: !5101, scopeLine: 9955, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5153)
!5153 = !{!5154, !5155, !5156, !5157}
!5154 = !DILocalVariable(name: "op", arg: 1, scope: !5152, file: !21, line: 9954, type: !354)
!5155 = !DILocalVariable(name: "value", arg: 2, scope: !5152, file: !21, line: 9954, type: !28)
!5156 = !DILocalVariable(name: "context", arg: 3, scope: !5152, file: !21, line: 9954, type: !27)
!5157 = !DILocalVariable(name: "tmp", scope: !5158, file: !21, line: 9968, type: !28)
!5158 = distinct !DILexicalBlock(scope: !5152, file: !21, line: 9968, column: 5)
!5159 = !DILocation(line: 9954, column: 51, scope: !5152)
!5160 = !DILocation(line: 9954, column: 65, scope: !5152)
!5161 = !DILocation(line: 9954, column: 78, scope: !5152)
!5162 = !DILocation(line: 9956, column: 5, scope: !5152)
!5163 = !DILocation(line: 9958, column: 9, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5152, file: !21, line: 9958, column: 9)
!5165 = !DILocation(line: 9958, column: 9, scope: !5152)
!5166 = !DILocation(line: 9963, column: 25, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5164, file: !21, line: 9962, column: 5)
!5168 = !DILocation(line: 9963, column: 9, scope: !5167)
!5169 = !DILocation(line: 9965, column: 9, scope: !5167)
!5170 = !DILocation(line: 9967, column: 5, scope: !5152)
!5171 = !DILocation(line: 9968, column: 5, scope: !5152)
!5172 = !DILocation(line: 9968, column: 5, scope: !5158)
!5173 = !DILocation(line: 9969, column: 5, scope: !5152)
!5174 = !DILocation(line: 9970, column: 1, scope: !5152)
!5175 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_qualname", scope: !21, file: !21, line: 9972, type: !5059, scopeLine: 9973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5176)
!5176 = !{!5177, !5178}
!5177 = !DILocalVariable(name: "op", arg: 1, scope: !5175, file: !21, line: 9972, type: !354)
!5178 = !DILocalVariable(name: "context", arg: 2, scope: !5175, file: !21, line: 9972, type: !27)
!5179 = !DILocation(line: 9972, column: 55, scope: !5175)
!5180 = !DILocation(line: 9972, column: 65, scope: !5175)
!5181 = !DILocation(line: 9974, column: 5, scope: !5175)
!5182 = !DILocation(line: 9975, column: 5, scope: !5175)
!5183 = !DILocation(line: 9976, column: 12, scope: !5175)
!5184 = !DILocation(line: 9976, column: 16, scope: !5175)
!5185 = !DILocation(line: 9976, column: 5, scope: !5175)
!5186 = distinct !DISubprogram(name: "__Pyx_CyFunction_set_qualname", scope: !21, file: !21, line: 9979, type: !5101, scopeLine: 9980, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5187)
!5187 = !{!5188, !5189, !5190, !5191}
!5188 = !DILocalVariable(name: "op", arg: 1, scope: !5186, file: !21, line: 9979, type: !354)
!5189 = !DILocalVariable(name: "value", arg: 2, scope: !5186, file: !21, line: 9979, type: !28)
!5190 = !DILocalVariable(name: "context", arg: 3, scope: !5186, file: !21, line: 9979, type: !27)
!5191 = !DILocalVariable(name: "tmp", scope: !5192, file: !21, line: 9993, type: !28)
!5192 = distinct !DILexicalBlock(scope: !5186, file: !21, line: 9993, column: 5)
!5193 = !DILocation(line: 9979, column: 55, scope: !5186)
!5194 = !DILocation(line: 9979, column: 69, scope: !5186)
!5195 = !DILocation(line: 9979, column: 82, scope: !5186)
!5196 = !DILocation(line: 9981, column: 5, scope: !5186)
!5197 = !DILocation(line: 9983, column: 9, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5186, file: !21, line: 9983, column: 9)
!5199 = !DILocation(line: 9983, column: 9, scope: !5186)
!5200 = !DILocation(line: 9988, column: 25, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5198, file: !21, line: 9987, column: 5)
!5202 = !DILocation(line: 9988, column: 9, scope: !5201)
!5203 = !DILocation(line: 9990, column: 9, scope: !5201)
!5204 = !DILocation(line: 9992, column: 5, scope: !5186)
!5205 = !DILocation(line: 9993, column: 5, scope: !5186)
!5206 = !DILocation(line: 9993, column: 5, scope: !5192)
!5207 = !DILocation(line: 9994, column: 5, scope: !5186)
!5208 = !DILocation(line: 9995, column: 1, scope: !5186)
!5209 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_dict", scope: !21, file: !21, line: 9997, type: !5059, scopeLine: 9998, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5210)
!5210 = !{!5211, !5212}
!5211 = !DILocalVariable(name: "op", arg: 1, scope: !5209, file: !21, line: 9997, type: !354)
!5212 = !DILocalVariable(name: "context", arg: 2, scope: !5209, file: !21, line: 9997, type: !27)
!5213 = !DILocation(line: 9997, column: 51, scope: !5209)
!5214 = !DILocation(line: 9997, column: 61, scope: !5209)
!5215 = !DILocation(line: 9999, column: 5, scope: !5209)
!5216 = !DILocation(line: 10000, column: 9, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5209, file: !21, line: 10000, column: 9)
!5218 = !DILocation(line: 10000, column: 9, scope: !5209)
!5219 = !DILocation(line: 10001, column: 25, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5217, file: !21, line: 10000, column: 42)
!5221 = !DILocation(line: 10001, column: 9, scope: !5220)
!5222 = !DILocation(line: 10001, column: 13, scope: !5220)
!5223 = !DILocation(line: 10001, column: 23, scope: !5220)
!5224 = !DILocation(line: 10002, column: 13, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5220, file: !21, line: 10002, column: 13)
!5226 = !DILocation(line: 10002, column: 13, scope: !5220)
!5227 = !DILocation(line: 10003, column: 13, scope: !5225)
!5228 = !DILocation(line: 10004, column: 5, scope: !5220)
!5229 = !DILocation(line: 10005, column: 5, scope: !5209)
!5230 = !DILocation(line: 10006, column: 12, scope: !5209)
!5231 = !DILocation(line: 10006, column: 16, scope: !5209)
!5232 = !DILocation(line: 10006, column: 5, scope: !5209)
!5233 = !DILocation(line: 10007, column: 1, scope: !5209)
!5234 = distinct !DISubprogram(name: "__Pyx_CyFunction_set_dict", scope: !21, file: !21, line: 10009, type: !5101, scopeLine: 10010, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5235)
!5235 = !{!5236, !5237, !5238, !5239}
!5236 = !DILocalVariable(name: "op", arg: 1, scope: !5234, file: !21, line: 10009, type: !354)
!5237 = !DILocalVariable(name: "value", arg: 2, scope: !5234, file: !21, line: 10009, type: !28)
!5238 = !DILocalVariable(name: "context", arg: 3, scope: !5234, file: !21, line: 10009, type: !27)
!5239 = !DILocalVariable(name: "tmp", scope: !5240, file: !21, line: 10023, type: !28)
!5240 = distinct !DILexicalBlock(scope: !5234, file: !21, line: 10023, column: 5)
!5241 = !DILocation(line: 10009, column: 51, scope: !5234)
!5242 = !DILocation(line: 10009, column: 65, scope: !5234)
!5243 = !DILocation(line: 10009, column: 78, scope: !5234)
!5244 = !DILocation(line: 10011, column: 5, scope: !5234)
!5245 = !DILocation(line: 10012, column: 9, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5234, file: !21, line: 10012, column: 9)
!5247 = !DILocation(line: 10012, column: 9, scope: !5234)
!5248 = !DILocation(line: 10013, column: 25, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5246, file: !21, line: 10012, column: 34)
!5250 = !DILocation(line: 10013, column: 9, scope: !5249)
!5251 = !DILocation(line: 10015, column: 9, scope: !5249)
!5252 = !DILocation(line: 10017, column: 9, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5234, file: !21, line: 10017, column: 9)
!5254 = !DILocation(line: 10017, column: 9, scope: !5234)
!5255 = !DILocation(line: 10018, column: 25, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5253, file: !21, line: 10017, column: 41)
!5257 = !DILocation(line: 10018, column: 9, scope: !5256)
!5258 = !DILocation(line: 10020, column: 9, scope: !5256)
!5259 = !DILocation(line: 10022, column: 5, scope: !5234)
!5260 = !DILocation(line: 10023, column: 5, scope: !5234)
!5261 = !DILocation(line: 10023, column: 5, scope: !5240)
!5262 = !DILocation(line: 10024, column: 5, scope: !5234)
!5263 = !DILocation(line: 10025, column: 1, scope: !5234)
!5264 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_globals", scope: !21, file: !21, line: 10027, type: !5059, scopeLine: 10028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5265)
!5265 = !{!5266, !5267}
!5266 = !DILocalVariable(name: "op", arg: 1, scope: !5264, file: !21, line: 10027, type: !354)
!5267 = !DILocalVariable(name: "context", arg: 2, scope: !5264, file: !21, line: 10027, type: !27)
!5268 = !DILocation(line: 10027, column: 54, scope: !5264)
!5269 = !DILocation(line: 10027, column: 64, scope: !5264)
!5270 = !DILocation(line: 10029, column: 5, scope: !5264)
!5271 = !DILocation(line: 10030, column: 5, scope: !5264)
!5272 = !DILocation(line: 10031, column: 12, scope: !5264)
!5273 = !DILocation(line: 10031, column: 16, scope: !5264)
!5274 = !DILocation(line: 10031, column: 5, scope: !5264)
!5275 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_closure", scope: !21, file: !21, line: 10034, type: !5059, scopeLine: 10035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5276)
!5276 = !{!5277, !5278}
!5277 = !DILocalVariable(name: "op", arg: 1, scope: !5275, file: !21, line: 10034, type: !354)
!5278 = !DILocalVariable(name: "context", arg: 2, scope: !5275, file: !21, line: 10034, type: !27)
!5279 = !DILocation(line: 10034, column: 54, scope: !5275)
!5280 = !DILocation(line: 10034, column: 64, scope: !5275)
!5281 = !DILocation(line: 10036, column: 5, scope: !5275)
!5282 = !DILocation(line: 10037, column: 5, scope: !5275)
!5283 = !DILocation(line: 10038, column: 5, scope: !5275)
!5284 = !DILocation(line: 10039, column: 5, scope: !5275)
!5285 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_code", scope: !21, file: !21, line: 10042, type: !5059, scopeLine: 10043, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5286)
!5286 = !{!5287, !5288, !5289}
!5287 = !DILocalVariable(name: "op", arg: 1, scope: !5285, file: !21, line: 10042, type: !354)
!5288 = !DILocalVariable(name: "context", arg: 2, scope: !5285, file: !21, line: 10042, type: !27)
!5289 = !DILocalVariable(name: "result", scope: !5285, file: !21, line: 10044, type: !28)
!5290 = !DILocation(line: 10042, column: 51, scope: !5285)
!5291 = !DILocation(line: 10042, column: 61, scope: !5285)
!5292 = !DILocation(line: 10044, column: 5, scope: !5285)
!5293 = !DILocation(line: 10044, column: 15, scope: !5285)
!5294 = !DILocation(line: 10044, column: 25, scope: !5285)
!5295 = !DILocation(line: 10044, column: 29, scope: !5285)
!5296 = !DILocation(line: 10044, column: 24, scope: !5285)
!5297 = !DILocation(line: 10044, column: 42, scope: !5285)
!5298 = !DILocation(line: 10044, column: 46, scope: !5285)
!5299 = !DILocation(line: 10045, column: 5, scope: !5285)
!5300 = !DILocation(line: 10046, column: 5, scope: !5285)
!5301 = !DILocation(line: 10047, column: 12, scope: !5285)
!5302 = !DILocation(line: 10048, column: 1, scope: !5285)
!5303 = !DILocation(line: 10047, column: 5, scope: !5285)
!5304 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_defaults", scope: !21, file: !21, line: 10088, type: !5059, scopeLine: 10088, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5305)
!5305 = !{!5306, !5307, !5308}
!5306 = !DILocalVariable(name: "op", arg: 1, scope: !5304, file: !21, line: 10088, type: !354)
!5307 = !DILocalVariable(name: "context", arg: 2, scope: !5304, file: !21, line: 10088, type: !27)
!5308 = !DILocalVariable(name: "result", scope: !5304, file: !21, line: 10089, type: !28)
!5309 = !DILocation(line: 10088, column: 55, scope: !5304)
!5310 = !DILocation(line: 10088, column: 65, scope: !5304)
!5311 = !DILocation(line: 10089, column: 5, scope: !5304)
!5312 = !DILocation(line: 10089, column: 15, scope: !5304)
!5313 = !DILocation(line: 10089, column: 24, scope: !5304)
!5314 = !DILocation(line: 10089, column: 28, scope: !5304)
!5315 = !DILocation(line: 10090, column: 5, scope: !5304)
!5316 = !DILocation(line: 10091, column: 9, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5304, file: !21, line: 10091, column: 9)
!5318 = !DILocation(line: 10091, column: 9, scope: !5304)
!5319 = !DILocation(line: 10092, column: 13, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5321, file: !21, line: 10092, column: 13)
!5321 = distinct !DILexicalBlock(scope: !5317, file: !21, line: 10091, column: 28)
!5322 = !DILocation(line: 10092, column: 17, scope: !5320)
!5323 = !{!3885, !1900, i64 168}
!5324 = !DILocation(line: 10092, column: 13, scope: !5321)
!5325 = !DILocation(line: 10093, column: 17, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !21, line: 10093, column: 17)
!5327 = distinct !DILexicalBlock(scope: !5320, file: !21, line: 10092, column: 34)
!5328 = !DILocation(line: 10093, column: 17, scope: !5327)
!5329 = !DILocation(line: 10093, column: 67, scope: !5326)
!5330 = !DILocation(line: 10094, column: 22, scope: !5327)
!5331 = !DILocation(line: 10094, column: 26, scope: !5327)
!5332 = !DILocation(line: 10094, column: 20, scope: !5327)
!5333 = !DILocation(line: 10095, column: 9, scope: !5327)
!5334 = !DILocation(line: 10096, column: 20, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5320, file: !21, line: 10095, column: 16)
!5336 = !DILocation(line: 10098, column: 5, scope: !5321)
!5337 = !DILocation(line: 10099, column: 5, scope: !5304)
!5338 = !DILocation(line: 10100, column: 12, scope: !5304)
!5339 = !DILocation(line: 10100, column: 5, scope: !5304)
!5340 = !DILocation(line: 10101, column: 1, scope: !5304)
!5341 = distinct !DISubprogram(name: "__Pyx_CyFunction_set_defaults", scope: !21, file: !21, line: 10072, type: !5101, scopeLine: 10072, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5342)
!5342 = !{!5343, !5344, !5345, !5346}
!5343 = !DILocalVariable(name: "op", arg: 1, scope: !5341, file: !21, line: 10072, type: !354)
!5344 = !DILocalVariable(name: "value", arg: 2, scope: !5341, file: !21, line: 10072, type: !28)
!5345 = !DILocalVariable(name: "context", arg: 3, scope: !5341, file: !21, line: 10072, type: !27)
!5346 = !DILocalVariable(name: "tmp", scope: !5347, file: !21, line: 10084, type: !28)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !21, line: 10084, column: 5)
!5348 = !DILocation(line: 10072, column: 55, scope: !5341)
!5349 = !DILocation(line: 10072, column: 69, scope: !5341)
!5350 = !DILocation(line: 10072, column: 82, scope: !5341)
!5351 = !DILocation(line: 10073, column: 5, scope: !5341)
!5352 = !DILocation(line: 10074, column: 10, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5341, file: !21, line: 10074, column: 9)
!5354 = !DILocation(line: 10074, column: 9, scope: !5341)
!5355 = !DILocation(line: 10075, column: 15, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5353, file: !21, line: 10074, column: 17)
!5357 = !DILocation(line: 10076, column: 5, scope: !5356)
!5358 = !DILocation(line: 10076, column: 16, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5353, file: !21, line: 10076, column: 16)
!5360 = !DILocation(line: 0, scope: !5359)
!5361 = !DILocation(line: 10076, column: 16, scope: !5353)
!5362 = !DILocation(line: 10077, column: 25, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5359, file: !21, line: 10076, column: 69)
!5364 = !DILocation(line: 10077, column: 9, scope: !5363)
!5365 = !DILocation(line: 10079, column: 9, scope: !5363)
!5366 = !DILocation(line: 10081, column: 18, scope: !5341)
!5367 = !DILocation(line: 10081, column: 5, scope: !5341)
!5368 = !DILocation(line: 10083, column: 5, scope: !5341)
!5369 = !DILocation(line: 10084, column: 5, scope: !5341)
!5370 = !DILocation(line: 10084, column: 5, scope: !5347)
!5371 = !DILocation(line: 10085, column: 5, scope: !5341)
!5372 = !DILocation(line: 10086, column: 1, scope: !5341)
!5373 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_kwdefaults", scope: !21, file: !21, line: 10119, type: !5059, scopeLine: 10119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5374)
!5374 = !{!5375, !5376, !5377}
!5375 = !DILocalVariable(name: "op", arg: 1, scope: !5373, file: !21, line: 10119, type: !354)
!5376 = !DILocalVariable(name: "context", arg: 2, scope: !5373, file: !21, line: 10119, type: !27)
!5377 = !DILocalVariable(name: "result", scope: !5373, file: !21, line: 10120, type: !28)
!5378 = !DILocation(line: 10119, column: 57, scope: !5373)
!5379 = !DILocation(line: 10119, column: 67, scope: !5373)
!5380 = !DILocation(line: 10120, column: 5, scope: !5373)
!5381 = !DILocation(line: 10120, column: 15, scope: !5373)
!5382 = !DILocation(line: 10120, column: 24, scope: !5373)
!5383 = !DILocation(line: 10120, column: 28, scope: !5373)
!5384 = !DILocation(line: 10121, column: 5, scope: !5373)
!5385 = !DILocation(line: 10122, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5373, file: !21, line: 10122, column: 9)
!5387 = !DILocation(line: 10122, column: 9, scope: !5373)
!5388 = !DILocation(line: 10123, column: 13, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !21, line: 10123, column: 13)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !21, line: 10122, column: 28)
!5391 = !DILocation(line: 10123, column: 17, scope: !5389)
!5392 = !DILocation(line: 10123, column: 13, scope: !5390)
!5393 = !DILocation(line: 10124, column: 17, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !21, line: 10124, column: 17)
!5395 = distinct !DILexicalBlock(scope: !5389, file: !21, line: 10123, column: 34)
!5396 = !DILocation(line: 10124, column: 17, scope: !5395)
!5397 = !DILocation(line: 10124, column: 67, scope: !5394)
!5398 = !DILocation(line: 10125, column: 22, scope: !5395)
!5399 = !DILocation(line: 10125, column: 26, scope: !5395)
!5400 = !DILocation(line: 10125, column: 20, scope: !5395)
!5401 = !DILocation(line: 10126, column: 9, scope: !5395)
!5402 = !DILocation(line: 10127, column: 20, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5389, file: !21, line: 10126, column: 16)
!5404 = !DILocation(line: 10129, column: 5, scope: !5390)
!5405 = !DILocation(line: 10130, column: 5, scope: !5373)
!5406 = !DILocation(line: 10131, column: 12, scope: !5373)
!5407 = !DILocation(line: 10131, column: 5, scope: !5373)
!5408 = !DILocation(line: 10132, column: 1, scope: !5373)
!5409 = distinct !DISubprogram(name: "__Pyx_CyFunction_set_kwdefaults", scope: !21, file: !21, line: 10103, type: !5101, scopeLine: 10103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5410)
!5410 = !{!5411, !5412, !5413, !5414}
!5411 = !DILocalVariable(name: "op", arg: 1, scope: !5409, file: !21, line: 10103, type: !354)
!5412 = !DILocalVariable(name: "value", arg: 2, scope: !5409, file: !21, line: 10103, type: !28)
!5413 = !DILocalVariable(name: "context", arg: 3, scope: !5409, file: !21, line: 10103, type: !27)
!5414 = !DILocalVariable(name: "tmp", scope: !5415, file: !21, line: 10115, type: !28)
!5415 = distinct !DILexicalBlock(scope: !5409, file: !21, line: 10115, column: 5)
!5416 = !DILocation(line: 10103, column: 57, scope: !5409)
!5417 = !DILocation(line: 10103, column: 71, scope: !5409)
!5418 = !DILocation(line: 10103, column: 84, scope: !5409)
!5419 = !DILocation(line: 10104, column: 5, scope: !5409)
!5420 = !DILocation(line: 10105, column: 10, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5409, file: !21, line: 10105, column: 9)
!5422 = !DILocation(line: 10105, column: 9, scope: !5409)
!5423 = !DILocation(line: 10106, column: 15, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5421, file: !21, line: 10105, column: 17)
!5425 = !DILocation(line: 10107, column: 5, scope: !5424)
!5426 = !DILocation(line: 10107, column: 16, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5421, file: !21, line: 10107, column: 16)
!5428 = !DILocation(line: 0, scope: !5427)
!5429 = !DILocation(line: 10107, column: 16, scope: !5421)
!5430 = !DILocation(line: 10108, column: 25, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !21, line: 10107, column: 68)
!5432 = !DILocation(line: 10108, column: 9, scope: !5431)
!5433 = !DILocation(line: 10110, column: 9, scope: !5431)
!5434 = !DILocation(line: 10112, column: 18, scope: !5409)
!5435 = !DILocation(line: 10112, column: 5, scope: !5409)
!5436 = !DILocation(line: 10114, column: 5, scope: !5409)
!5437 = !DILocation(line: 10115, column: 5, scope: !5409)
!5438 = !DILocation(line: 10115, column: 5, scope: !5415)
!5439 = !DILocation(line: 10116, column: 5, scope: !5409)
!5440 = !DILocation(line: 10117, column: 1, scope: !5409)
!5441 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_annotations", scope: !21, file: !21, line: 10148, type: !5059, scopeLine: 10148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5442)
!5442 = !{!5443, !5444, !5445}
!5443 = !DILocalVariable(name: "op", arg: 1, scope: !5441, file: !21, line: 10148, type: !354)
!5444 = !DILocalVariable(name: "context", arg: 2, scope: !5441, file: !21, line: 10148, type: !27)
!5445 = !DILocalVariable(name: "result", scope: !5441, file: !21, line: 10149, type: !28)
!5446 = !DILocation(line: 10148, column: 58, scope: !5441)
!5447 = !DILocation(line: 10148, column: 68, scope: !5441)
!5448 = !DILocation(line: 10149, column: 5, scope: !5441)
!5449 = !DILocation(line: 10149, column: 15, scope: !5441)
!5450 = !DILocation(line: 10149, column: 24, scope: !5441)
!5451 = !DILocation(line: 10149, column: 28, scope: !5441)
!5452 = !DILocation(line: 10150, column: 5, scope: !5441)
!5453 = !DILocation(line: 10151, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5441, file: !21, line: 10151, column: 9)
!5455 = !DILocation(line: 10151, column: 9, scope: !5441)
!5456 = !DILocation(line: 10152, column: 18, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !21, line: 10151, column: 28)
!5458 = !DILocation(line: 10152, column: 16, scope: !5457)
!5459 = !DILocation(line: 10153, column: 13, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5457, file: !21, line: 10153, column: 13)
!5461 = !DILocation(line: 10153, column: 13, scope: !5457)
!5462 = !DILocation(line: 10153, column: 32, scope: !5460)
!5463 = !DILocation(line: 10154, column: 32, scope: !5457)
!5464 = !DILocation(line: 10154, column: 9, scope: !5457)
!5465 = !DILocation(line: 10154, column: 13, scope: !5457)
!5466 = !DILocation(line: 10154, column: 30, scope: !5457)
!5467 = !DILocation(line: 10155, column: 5, scope: !5457)
!5468 = !DILocation(line: 10156, column: 5, scope: !5441)
!5469 = !DILocation(line: 10157, column: 12, scope: !5441)
!5470 = !DILocation(line: 10157, column: 5, scope: !5441)
!5471 = !DILocation(line: 10158, column: 1, scope: !5441)
!5472 = distinct !DISubprogram(name: "__Pyx_CyFunction_set_annotations", scope: !21, file: !21, line: 10134, type: !5101, scopeLine: 10134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5473)
!5473 = !{!5474, !5475, !5476, !5477}
!5474 = !DILocalVariable(name: "op", arg: 1, scope: !5472, file: !21, line: 10134, type: !354)
!5475 = !DILocalVariable(name: "value", arg: 2, scope: !5472, file: !21, line: 10134, type: !28)
!5476 = !DILocalVariable(name: "context", arg: 3, scope: !5472, file: !21, line: 10134, type: !27)
!5477 = !DILocalVariable(name: "tmp", scope: !5478, file: !21, line: 10144, type: !28)
!5478 = distinct !DILexicalBlock(scope: !5472, file: !21, line: 10144, column: 5)
!5479 = !DILocation(line: 10134, column: 58, scope: !5472)
!5480 = !DILocation(line: 10134, column: 72, scope: !5472)
!5481 = !DILocation(line: 10134, column: 85, scope: !5472)
!5482 = !DILocation(line: 10135, column: 5, scope: !5472)
!5483 = !DILocation(line: 10136, column: 10, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5472, file: !21, line: 10136, column: 9)
!5485 = !DILocation(line: 10136, column: 16, scope: !5484)
!5486 = !DILocation(line: 10136, column: 19, scope: !5484)
!5487 = !DILocation(line: 10136, column: 25, scope: !5484)
!5488 = !DILocation(line: 10136, column: 9, scope: !5472)
!5489 = !DILocation(line: 10137, column: 15, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5484, file: !21, line: 10136, column: 37)
!5491 = !DILocation(line: 10138, column: 5, scope: !5490)
!5492 = !DILocation(line: 10138, column: 16, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5484, file: !21, line: 10138, column: 16)
!5494 = !DILocation(line: 10138, column: 16, scope: !5484)
!5495 = !DILocation(line: 10139, column: 25, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5493, file: !21, line: 10138, column: 48)
!5497 = !DILocation(line: 10139, column: 9, scope: !5496)
!5498 = !DILocation(line: 10141, column: 9, scope: !5496)
!5499 = !DILocation(line: 10143, column: 5, scope: !5472)
!5500 = !DILocation(line: 10144, column: 5, scope: !5472)
!5501 = !DILocation(line: 10144, column: 5, scope: !5478)
!5502 = !DILocation(line: 10145, column: 5, scope: !5472)
!5503 = !DILocation(line: 10146, column: 1, scope: !5472)
!5504 = distinct !DISubprogram(name: "__Pyx_CyFunction_get_is_coroutine", scope: !21, file: !21, line: 10160, type: !5059, scopeLine: 10160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5505)
!5505 = !{!5506, !5507, !5508, !5509, !5512, !5513, !5514}
!5506 = !DILocalVariable(name: "op", arg: 1, scope: !5504, file: !21, line: 10160, type: !354)
!5507 = !DILocalVariable(name: "context", arg: 2, scope: !5504, file: !21, line: 10160, type: !27)
!5508 = !DILocalVariable(name: "is_coroutine", scope: !5504, file: !21, line: 10161, type: !7)
!5509 = !DILocalVariable(name: "module", scope: !5510, file: !21, line: 10169, type: !28)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !21, line: 10168, column: 23)
!5511 = distinct !DILexicalBlock(scope: !5504, file: !21, line: 10168, column: 9)
!5512 = !DILocalVariable(name: "fromlist", scope: !5510, file: !21, line: 10169, type: !28)
!5513 = !DILocalVariable(name: "marker", scope: !5510, file: !21, line: 10169, type: !28)
!5514 = !DILabel(scope: !5510, name: "ignore", file: !21, line: 10190)
!5515 = !DILocation(line: 10160, column: 59, scope: !5504)
!5516 = !DILocation(line: 10160, column: 69, scope: !5504)
!5517 = !DILocation(line: 10161, column: 5, scope: !5504)
!5518 = !DILocation(line: 10161, column: 9, scope: !5504)
!5519 = !DILocation(line: 10162, column: 5, scope: !5504)
!5520 = !DILocation(line: 10163, column: 9, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5504, file: !21, line: 10163, column: 9)
!5522 = !DILocation(line: 10163, column: 13, scope: !5521)
!5523 = !DILocation(line: 10163, column: 9, scope: !5504)
!5524 = !DILocation(line: 10164, column: 16, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !21, line: 10163, column: 32)
!5526 = !DILocation(line: 10164, column: 9, scope: !5525)
!5527 = !DILocation(line: 10166, column: 20, scope: !5504)
!5528 = !DILocation(line: 10166, column: 24, scope: !5504)
!5529 = !DILocation(line: 10166, column: 30, scope: !5504)
!5530 = !DILocation(line: 10166, column: 18, scope: !5504)
!5531 = !DILocation(line: 10168, column: 9, scope: !5511)
!5532 = !DILocation(line: 10168, column: 9, scope: !5504)
!5533 = !DILocation(line: 10169, column: 9, scope: !5510)
!5534 = !DILocation(line: 10169, column: 19, scope: !5510)
!5535 = !DILocation(line: 10169, column: 28, scope: !5510)
!5536 = !DILocation(line: 10169, column: 39, scope: !5510)
!5537 = !DILocation(line: 10169, column: 48, scope: !5510)
!5538 = !{!2020, !1900, i64 440}
!5539 = !DILocation(line: 10170, column: 20, scope: !5510)
!5540 = !DILocation(line: 10170, column: 18, scope: !5510)
!5541 = !DILocation(line: 10171, column: 13, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5510, file: !21, line: 10171, column: 13)
!5543 = !DILocation(line: 10171, column: 13, scope: !5510)
!5544 = !DILocation(line: 10171, column: 34, scope: !5542)
!5545 = !DILocation(line: 10172, column: 9, scope: !5510)
!5546 = !DILocation(line: 10174, column: 9, scope: !5510)
!5547 = !DILocation(line: 10182, column: 51, scope: !5510)
!5548 = !{!2020, !1900, i64 320}
!5549 = !DILocation(line: 10182, column: 93, scope: !5510)
!5550 = !DILocation(line: 10182, column: 18, scope: !5510)
!5551 = !DILocation(line: 10182, column: 16, scope: !5510)
!5552 = !DILocation(line: 10183, column: 9, scope: !5510)
!5553 = !DILocation(line: 10184, column: 13, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5510, file: !21, line: 10184, column: 13)
!5555 = !DILocation(line: 10184, column: 13, scope: !5510)
!5556 = !DILocation(line: 10184, column: 32, scope: !5554)
!5557 = !DILocation(line: 10185, column: 59, scope: !5510)
!5558 = !DILocation(line: 10185, column: 67, scope: !5510)
!5559 = !DILocation(line: 10185, column: 33, scope: !5510)
!5560 = !DILocation(line: 10185, column: 9, scope: !5510)
!5561 = !DILocation(line: 10185, column: 13, scope: !5510)
!5562 = !DILocation(line: 10185, column: 31, scope: !5510)
!5563 = !DILocation(line: 10186, column: 9, scope: !5510)
!5564 = !DILocation(line: 10187, column: 13, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5510, file: !21, line: 10187, column: 13)
!5566 = !DILocation(line: 10187, column: 13, scope: !5510)
!5567 = !DILocation(line: 10188, column: 20, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5565, file: !21, line: 10187, column: 44)
!5569 = !DILocation(line: 10188, column: 13, scope: !5568)
!5570 = !DILocation(line: 10190, column: 1, scope: !5510)
!5571 = !DILocation(line: 10191, column: 9, scope: !5510)
!5572 = !DILocation(line: 10192, column: 5, scope: !5511)
!5573 = !DILocation(line: 10192, column: 5, scope: !5510)
!5574 = !DILocation(line: 10194, column: 51, scope: !5504)
!5575 = !DILocation(line: 10194, column: 29, scope: !5504)
!5576 = !DILocation(line: 10194, column: 5, scope: !5504)
!5577 = !DILocation(line: 10194, column: 9, scope: !5504)
!5578 = !DILocation(line: 10194, column: 27, scope: !5504)
!5579 = !DILocation(line: 10195, column: 12, scope: !5504)
!5580 = !DILocation(line: 10195, column: 5, scope: !5504)
!5581 = !DILocation(line: 10196, column: 1, scope: !5504)
!5582 = !DISubprogram(name: "PyUnicode_FromString", scope: !544, file: !544, line: 137, type: !2732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5583 = !DISubprogram(name: "PyUnicode_InternFromString", scope: !544, file: !544, line: 264, type: !2732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5584 = !DISubprogram(name: "PyDict_New", scope: !2725, file: !2725, line: 21, type: !692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5585 = distinct !DISubprogram(name: "__Pyx_CyFunction_init_defaults", scope: !21, file: !21, line: 10050, type: !4476, scopeLine: 10050, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5586)
!5586 = !{!5587, !5588, !5589}
!5587 = !DILocalVariable(name: "op", arg: 1, scope: !5585, file: !21, line: 10050, type: !354)
!5588 = !DILocalVariable(name: "result", scope: !5585, file: !21, line: 10051, type: !7)
!5589 = !DILocalVariable(name: "res", scope: !5585, file: !21, line: 10052, type: !28)
!5590 = !DILocation(line: 10050, column: 56, scope: !5585)
!5591 = !DILocation(line: 10051, column: 5, scope: !5585)
!5592 = !DILocation(line: 10051, column: 9, scope: !5585)
!5593 = !DILocation(line: 10052, column: 5, scope: !5585)
!5594 = !DILocation(line: 10052, column: 15, scope: !5585)
!5595 = !DILocation(line: 10052, column: 21, scope: !5585)
!5596 = !DILocation(line: 10052, column: 25, scope: !5585)
!5597 = !DILocation(line: 10052, column: 54, scope: !5585)
!5598 = !DILocation(line: 10053, column: 9, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5585, file: !21, line: 10053, column: 9)
!5600 = !DILocation(line: 10053, column: 9, scope: !5585)
!5601 = !DILocation(line: 10054, column: 9, scope: !5599)
!5602 = !DILocation(line: 10056, column: 26, scope: !5585)
!5603 = !DILocation(line: 10056, column: 5, scope: !5585)
!5604 = !DILocation(line: 10056, column: 9, scope: !5585)
!5605 = !DILocation(line: 10056, column: 24, scope: !5585)
!5606 = !DILocation(line: 10057, column: 5, scope: !5585)
!5607 = !DILocation(line: 10058, column: 27, scope: !5585)
!5608 = !DILocation(line: 10058, column: 5, scope: !5585)
!5609 = !DILocation(line: 10058, column: 9, scope: !5585)
!5610 = !DILocation(line: 10058, column: 25, scope: !5585)
!5611 = !DILocation(line: 10059, column: 5, scope: !5585)
!5612 = !DILocation(line: 10068, column: 5, scope: !5585)
!5613 = !DILocation(line: 10069, column: 12, scope: !5585)
!5614 = !DILocation(line: 10069, column: 5, scope: !5585)
!5615 = !DILocation(line: 10070, column: 1, scope: !5585)
!5616 = distinct !DISubprogram(name: "Py_XINCREF", scope: !6, file: !6, line: 589, type: !62, scopeLine: 590, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5617)
!5617 = !{!5618}
!5618 = !DILocalVariable(name: "op", arg: 1, scope: !5616, file: !6, line: 589, type: !28)
!5619 = !DILocation(line: 589, column: 41, scope: !5616)
!5620 = !DILocation(line: 591, column: 9, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5616, file: !6, line: 591, column: 9)
!5622 = !DILocation(line: 591, column: 12, scope: !5621)
!5623 = !DILocation(line: 591, column: 9, scope: !5616)
!5624 = !DILocation(line: 592, column: 9, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5621, file: !6, line: 591, column: 25)
!5626 = !DILocation(line: 593, column: 5, scope: !5625)
!5627 = !DILocation(line: 594, column: 1, scope: !5616)
!5628 = !DISubprogram(name: "PyImport_ImportModuleLevelObject", scope: !2731, file: !2731, line: 60, type: !5629, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!28, !28, !28, !28, !28, !7}
!5631 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStr", scope: !21, file: !21, line: 7256, type: !105, scopeLine: 7256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5632)
!5632 = !{!5633, !5634, !5635}
!5633 = !DILocalVariable(name: "obj", arg: 1, scope: !5631, file: !21, line: 7256, type: !28)
!5634 = !DILocalVariable(name: "attr_name", arg: 2, scope: !5631, file: !21, line: 7256, type: !28)
!5635 = !DILocalVariable(name: "tp", scope: !5631, file: !21, line: 7257, type: !42)
!5636 = !DILocation(line: 7256, column: 68, scope: !5631)
!5637 = !DILocation(line: 7256, column: 83, scope: !5631)
!5638 = !DILocation(line: 7257, column: 5, scope: !5631)
!5639 = !DILocation(line: 7257, column: 19, scope: !5631)
!5640 = !DILocation(line: 7257, column: 24, scope: !5631)
!5641 = !DILocation(line: 7258, column: 9, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5631, file: !21, line: 7258, column: 9)
!5643 = !DILocation(line: 7258, column: 9, scope: !5631)
!5644 = !DILocation(line: 7259, column: 16, scope: !5642)
!5645 = !DILocation(line: 7259, column: 20, scope: !5642)
!5646 = !DILocation(line: 7259, column: 32, scope: !5642)
!5647 = !DILocation(line: 7259, column: 37, scope: !5642)
!5648 = !DILocation(line: 7259, column: 9, scope: !5642)
!5649 = !DILocation(line: 7264, column: 29, scope: !5631)
!5650 = !DILocation(line: 7264, column: 34, scope: !5631)
!5651 = !DILocation(line: 7264, column: 12, scope: !5631)
!5652 = !DILocation(line: 7264, column: 5, scope: !5631)
!5653 = !DILocation(line: 7265, column: 1, scope: !5631)
!5654 = distinct !DISubprogram(name: "__Pyx_PyBool_FromLong", scope: !21, file: !21, line: 12432, type: !5655, scopeLine: 12432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5657)
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!28, !40}
!5657 = !{!5658}
!5658 = !DILocalVariable(name: "b", arg: 1, scope: !5654, file: !21, line: 12432, type: !40)
!5659 = !DILocation(line: 12432, column: 60, scope: !5654)
!5660 = !DILocation(line: 12433, column: 10, scope: !5654)
!5661 = !DILocation(line: 12433, column: 14, scope: !5654)
!5662 = !DILocation(line: 12433, column: 38, scope: !5654)
!5663 = !DILocation(line: 12433, column: 3, scope: !5654)
!5664 = !DISubprogram(name: "PyObject_GetAttr", scope: !6, file: !6, line: 292, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5665 = !DISubprogram(name: "PyMethod_New", scope: !490, file: !490, line: 24, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5666 = distinct !DISubprogram(name: "__Pyx_CreateStringTabAndInitStrings", scope: !21, file: !21, line: 6301, type: !762, scopeLine: 6301, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5667)
!5667 = !{!5668}
!5668 = !DILocalVariable(name: "__pyx_string_tab", scope: !5666, file: !21, line: 6302, type: !5669)
!5669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5670, size: 23040, elements: !1319)
!5670 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_StringTabEntry", file: !21, line: 1200, baseType: !5671)
!5671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 1199, size: 320, elements: !5672)
!5672 = !{!5673, !5674, !5675, !5677, !5678, !5679, !5680}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5671, file: !21, line: 1199, baseType: !94, size: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5671, file: !21, line: 1199, baseType: !54, size: 64, offset: 64)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !5671, file: !21, line: 1199, baseType: !5676, size: 64, offset: 128)
!5676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !5671, file: !21, line: 1199, baseType: !54, size: 64, offset: 192)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "is_unicode", scope: !5671, file: !21, line: 1200, baseType: !55, size: 8, offset: 256)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "is_str", scope: !5671, file: !21, line: 1200, baseType: !55, size: 8, offset: 264)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "intern", scope: !5671, file: !21, line: 1200, baseType: !55, size: 8, offset: 272)
!5681 = !DILocation(line: 6302, column: 3, scope: !5666)
!5682 = !DILocation(line: 6302, column: 24, scope: !5666)
!5683 = !DILocation(line: 6302, column: 45, scope: !5666)
!5684 = !DILocation(line: 6303, column: 5, scope: !5666)
!5685 = !DILocation(line: 6303, column: 7, scope: !5666)
!5686 = !{!5687, !1900, i64 0}
!5687 = !{!"", !1900, i64 0, !1900, i64 8, !2424, i64 16, !1900, i64 24, !1901, i64 32, !1901, i64 33, !1901, i64 34}
!5688 = !{!5687, !1900, i64 8}
!5689 = !{!5687, !2424, i64 16}
!5690 = !{!5687, !1900, i64 24}
!5691 = !{!5687, !1901, i64 32}
!5692 = !{!5687, !1901, i64 33}
!5693 = !{!5687, !1901, i64 34}
!5694 = !DILocation(line: 6304, column: 5, scope: !5666)
!5695 = !DILocation(line: 6304, column: 7, scope: !5666)
!5696 = !DILocation(line: 6305, column: 5, scope: !5666)
!5697 = !DILocation(line: 6305, column: 7, scope: !5666)
!5698 = !DILocation(line: 6306, column: 5, scope: !5666)
!5699 = !DILocation(line: 6306, column: 7, scope: !5666)
!5700 = !DILocation(line: 6307, column: 5, scope: !5666)
!5701 = !DILocation(line: 6307, column: 7, scope: !5666)
!5702 = !DILocation(line: 6308, column: 5, scope: !5666)
!5703 = !DILocation(line: 6308, column: 7, scope: !5666)
!5704 = !DILocation(line: 6309, column: 5, scope: !5666)
!5705 = !DILocation(line: 6309, column: 7, scope: !5666)
!5706 = !DILocation(line: 6310, column: 5, scope: !5666)
!5707 = !DILocation(line: 6310, column: 7, scope: !5666)
!5708 = !DILocation(line: 6311, column: 5, scope: !5666)
!5709 = !DILocation(line: 6311, column: 7, scope: !5666)
!5710 = !DILocation(line: 6312, column: 5, scope: !5666)
!5711 = !DILocation(line: 6312, column: 7, scope: !5666)
!5712 = !DILocation(line: 6313, column: 5, scope: !5666)
!5713 = !DILocation(line: 6313, column: 7, scope: !5666)
!5714 = !DILocation(line: 6314, column: 5, scope: !5666)
!5715 = !DILocation(line: 6314, column: 7, scope: !5666)
!5716 = !DILocation(line: 6315, column: 5, scope: !5666)
!5717 = !DILocation(line: 6315, column: 7, scope: !5666)
!5718 = !DILocation(line: 6316, column: 5, scope: !5666)
!5719 = !DILocation(line: 6316, column: 7, scope: !5666)
!5720 = !DILocation(line: 6317, column: 5, scope: !5666)
!5721 = !DILocation(line: 6317, column: 7, scope: !5666)
!5722 = !DILocation(line: 6318, column: 5, scope: !5666)
!5723 = !DILocation(line: 6318, column: 7, scope: !5666)
!5724 = !DILocation(line: 6319, column: 5, scope: !5666)
!5725 = !DILocation(line: 6319, column: 7, scope: !5666)
!5726 = !DILocation(line: 6320, column: 5, scope: !5666)
!5727 = !DILocation(line: 6320, column: 7, scope: !5666)
!5728 = !DILocation(line: 6321, column: 5, scope: !5666)
!5729 = !DILocation(line: 6321, column: 7, scope: !5666)
!5730 = !DILocation(line: 6322, column: 5, scope: !5666)
!5731 = !DILocation(line: 6322, column: 7, scope: !5666)
!5732 = !DILocation(line: 6323, column: 5, scope: !5666)
!5733 = !DILocation(line: 6323, column: 7, scope: !5666)
!5734 = !DILocation(line: 6324, column: 5, scope: !5666)
!5735 = !DILocation(line: 6324, column: 7, scope: !5666)
!5736 = !DILocation(line: 6325, column: 5, scope: !5666)
!5737 = !DILocation(line: 6325, column: 7, scope: !5666)
!5738 = !DILocation(line: 6326, column: 5, scope: !5666)
!5739 = !DILocation(line: 6326, column: 7, scope: !5666)
!5740 = !DILocation(line: 6327, column: 5, scope: !5666)
!5741 = !DILocation(line: 6327, column: 7, scope: !5666)
!5742 = !DILocation(line: 6328, column: 5, scope: !5666)
!5743 = !DILocation(line: 6328, column: 7, scope: !5666)
!5744 = !DILocation(line: 6329, column: 5, scope: !5666)
!5745 = !DILocation(line: 6329, column: 7, scope: !5666)
!5746 = !DILocation(line: 6330, column: 5, scope: !5666)
!5747 = !DILocation(line: 6330, column: 7, scope: !5666)
!5748 = !DILocation(line: 6331, column: 5, scope: !5666)
!5749 = !DILocation(line: 6331, column: 7, scope: !5666)
!5750 = !DILocation(line: 6332, column: 5, scope: !5666)
!5751 = !DILocation(line: 6332, column: 7, scope: !5666)
!5752 = !DILocation(line: 6333, column: 5, scope: !5666)
!5753 = !DILocation(line: 6333, column: 7, scope: !5666)
!5754 = !DILocation(line: 6334, column: 5, scope: !5666)
!5755 = !DILocation(line: 6334, column: 7, scope: !5666)
!5756 = !DILocation(line: 6335, column: 5, scope: !5666)
!5757 = !DILocation(line: 6335, column: 7, scope: !5666)
!5758 = !DILocation(line: 6336, column: 5, scope: !5666)
!5759 = !DILocation(line: 6336, column: 7, scope: !5666)
!5760 = !DILocation(line: 6337, column: 5, scope: !5666)
!5761 = !DILocation(line: 6337, column: 7, scope: !5666)
!5762 = !DILocation(line: 6338, column: 5, scope: !5666)
!5763 = !DILocation(line: 6338, column: 7, scope: !5666)
!5764 = !DILocation(line: 6339, column: 5, scope: !5666)
!5765 = !DILocation(line: 6339, column: 7, scope: !5666)
!5766 = !DILocation(line: 6340, column: 5, scope: !5666)
!5767 = !DILocation(line: 6340, column: 7, scope: !5666)
!5768 = !DILocation(line: 6341, column: 5, scope: !5666)
!5769 = !DILocation(line: 6341, column: 7, scope: !5666)
!5770 = !DILocation(line: 6342, column: 5, scope: !5666)
!5771 = !DILocation(line: 6342, column: 7, scope: !5666)
!5772 = !DILocation(line: 6343, column: 5, scope: !5666)
!5773 = !DILocation(line: 6343, column: 7, scope: !5666)
!5774 = !DILocation(line: 6344, column: 5, scope: !5666)
!5775 = !DILocation(line: 6344, column: 7, scope: !5666)
!5776 = !DILocation(line: 6345, column: 5, scope: !5666)
!5777 = !DILocation(line: 6345, column: 7, scope: !5666)
!5778 = !DILocation(line: 6346, column: 5, scope: !5666)
!5779 = !DILocation(line: 6346, column: 7, scope: !5666)
!5780 = !DILocation(line: 6347, column: 5, scope: !5666)
!5781 = !DILocation(line: 6347, column: 7, scope: !5666)
!5782 = !DILocation(line: 6348, column: 5, scope: !5666)
!5783 = !DILocation(line: 6348, column: 7, scope: !5666)
!5784 = !DILocation(line: 6349, column: 5, scope: !5666)
!5785 = !DILocation(line: 6349, column: 7, scope: !5666)
!5786 = !DILocation(line: 6350, column: 5, scope: !5666)
!5787 = !DILocation(line: 6350, column: 7, scope: !5666)
!5788 = !DILocation(line: 6351, column: 5, scope: !5666)
!5789 = !DILocation(line: 6351, column: 7, scope: !5666)
!5790 = !DILocation(line: 6352, column: 5, scope: !5666)
!5791 = !DILocation(line: 6352, column: 7, scope: !5666)
!5792 = !DILocation(line: 6353, column: 5, scope: !5666)
!5793 = !DILocation(line: 6353, column: 7, scope: !5666)
!5794 = !DILocation(line: 6354, column: 5, scope: !5666)
!5795 = !DILocation(line: 6354, column: 7, scope: !5666)
!5796 = !DILocation(line: 6355, column: 5, scope: !5666)
!5797 = !DILocation(line: 6355, column: 7, scope: !5666)
!5798 = !DILocation(line: 6356, column: 5, scope: !5666)
!5799 = !DILocation(line: 6356, column: 7, scope: !5666)
!5800 = !DILocation(line: 6357, column: 5, scope: !5666)
!5801 = !DILocation(line: 6357, column: 7, scope: !5666)
!5802 = !DILocation(line: 6358, column: 5, scope: !5666)
!5803 = !DILocation(line: 6358, column: 7, scope: !5666)
!5804 = !DILocation(line: 6359, column: 5, scope: !5666)
!5805 = !DILocation(line: 6359, column: 7, scope: !5666)
!5806 = !DILocation(line: 6360, column: 5, scope: !5666)
!5807 = !DILocation(line: 6360, column: 7, scope: !5666)
!5808 = !DILocation(line: 6361, column: 5, scope: !5666)
!5809 = !DILocation(line: 6361, column: 7, scope: !5666)
!5810 = !DILocation(line: 6362, column: 5, scope: !5666)
!5811 = !DILocation(line: 6362, column: 7, scope: !5666)
!5812 = !DILocation(line: 6363, column: 5, scope: !5666)
!5813 = !DILocation(line: 6363, column: 7, scope: !5666)
!5814 = !DILocation(line: 6364, column: 5, scope: !5666)
!5815 = !DILocation(line: 6364, column: 7, scope: !5666)
!5816 = !DILocation(line: 6365, column: 5, scope: !5666)
!5817 = !DILocation(line: 6365, column: 7, scope: !5666)
!5818 = !DILocation(line: 6366, column: 5, scope: !5666)
!5819 = !DILocation(line: 6366, column: 7, scope: !5666)
!5820 = !DILocation(line: 6367, column: 5, scope: !5666)
!5821 = !DILocation(line: 6367, column: 7, scope: !5666)
!5822 = !DILocation(line: 6368, column: 5, scope: !5666)
!5823 = !DILocation(line: 6368, column: 7, scope: !5666)
!5824 = !DILocation(line: 6369, column: 5, scope: !5666)
!5825 = !DILocation(line: 6369, column: 7, scope: !5666)
!5826 = !DILocation(line: 6370, column: 5, scope: !5666)
!5827 = !DILocation(line: 6370, column: 7, scope: !5666)
!5828 = !DILocation(line: 6371, column: 5, scope: !5666)
!5829 = !DILocation(line: 6371, column: 7, scope: !5666)
!5830 = !DILocation(line: 6372, column: 5, scope: !5666)
!5831 = !DILocation(line: 6372, column: 7, scope: !5666)
!5832 = !DILocation(line: 6373, column: 5, scope: !5666)
!5833 = !DILocation(line: 6373, column: 7, scope: !5666)
!5834 = !DILocation(line: 6376, column: 28, scope: !5666)
!5835 = !DILocation(line: 6376, column: 10, scope: !5666)
!5836 = !DILocation(line: 6377, column: 1, scope: !5666)
!5837 = !DILocation(line: 6376, column: 3, scope: !5666)
!5838 = !DISubprogram(name: "PyLong_FromLong", scope: !5839, file: !5839, line: 16, type: !5655, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5839 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/longobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7f1ad7d2783e1cef14a999a2b7ddd9d0")
!5840 = distinct !DISubprogram(name: "__Pyx_InitStrings", scope: !21, file: !21, line: 12160, type: !5841, scopeLine: 12160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5844)
!5841 = !DISubroutineType(types: !5842)
!5842 = !{!7, !5843}
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5670, size: 64)
!5844 = !{!5845}
!5845 = !DILocalVariable(name: "t", arg: 1, scope: !5840, file: !21, line: 12160, type: !5843)
!5846 = !DILocation(line: 12160, column: 52, scope: !5840)
!5847 = !DILocation(line: 12161, column: 5, scope: !5840)
!5848 = !DILocation(line: 12161, column: 12, scope: !5840)
!5849 = !DILocation(line: 12161, column: 15, scope: !5840)
!5850 = !DILocation(line: 12163, column: 27, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5840, file: !21, line: 12161, column: 18)
!5852 = !DILocation(line: 12163, column: 30, scope: !5851)
!5853 = !DILocation(line: 12163, column: 33, scope: !5851)
!5854 = !DILocation(line: 12163, column: 9, scope: !5851)
!5855 = !DILocation(line: 12177, column: 9, scope: !5851)
!5856 = distinct !{!5856, !5847, !5857, !4470}
!5857 = !DILocation(line: 12178, column: 5, scope: !5840)
!5858 = !DILocation(line: 12179, column: 5, scope: !5840)
!5859 = distinct !DISubprogram(name: "__Pyx_InitString", scope: !21, file: !21, line: 12141, type: !5860, scopeLine: 12141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5862)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{!7, !5670, !94}
!5862 = !{!5863, !5864}
!5863 = !DILocalVariable(name: "t", arg: 1, scope: !5859, file: !21, line: 12141, type: !5670)
!5864 = !DILocalVariable(name: "str", arg: 2, scope: !5859, file: !21, line: 12141, type: !94)
!5865 = !DILocation(line: 12141, column: 50, scope: !5859)
!5866 = !DILocation(line: 12141, column: 64, scope: !5859)
!5867 = !DILocation(line: 12142, column: 11, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5859, file: !21, line: 12142, column: 9)
!5869 = !DILocation(line: 12142, column: 9, scope: !5868)
!5870 = !DILocation(line: 12142, column: 26, scope: !5868)
!5871 = !DILocation(line: 12142, column: 24, scope: !5868)
!5872 = !DILocation(line: 12142, column: 22, scope: !5868)
!5873 = !DILocation(line: 12142, column: 9, scope: !5859)
!5874 = !DILocation(line: 12143, column: 15, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !21, line: 12143, column: 13)
!5876 = distinct !DILexicalBlock(scope: !5868, file: !21, line: 12142, column: 34)
!5877 = !DILocation(line: 12143, column: 13, scope: !5875)
!5878 = !DILocation(line: 12143, column: 13, scope: !5876)
!5879 = !DILocation(line: 12144, column: 49, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5875, file: !21, line: 12143, column: 23)
!5881 = !DILocation(line: 12144, column: 20, scope: !5880)
!5882 = !DILocation(line: 12144, column: 14, scope: !5880)
!5883 = !DILocation(line: 12144, column: 18, scope: !5880)
!5884 = !DILocation(line: 12145, column: 9, scope: !5880)
!5885 = !DILocation(line: 12145, column: 22, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5875, file: !21, line: 12145, column: 20)
!5887 = !DILocation(line: 12145, column: 20, scope: !5886)
!5888 = !DILocation(line: 12145, column: 20, scope: !5875)
!5889 = !DILocation(line: 12146, column: 39, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5886, file: !21, line: 12145, column: 32)
!5891 = !DILocation(line: 12146, column: 44, scope: !5890)
!5892 = !DILocation(line: 12146, column: 46, scope: !5890)
!5893 = !DILocation(line: 12146, column: 53, scope: !5890)
!5894 = !DILocation(line: 12146, column: 20, scope: !5890)
!5895 = !DILocation(line: 12146, column: 14, scope: !5890)
!5896 = !DILocation(line: 12146, column: 18, scope: !5890)
!5897 = !DILocation(line: 12147, column: 9, scope: !5890)
!5898 = !DILocation(line: 12148, column: 50, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5886, file: !21, line: 12147, column: 16)
!5900 = !DILocation(line: 12148, column: 55, scope: !5899)
!5901 = !DILocation(line: 12148, column: 57, scope: !5899)
!5902 = !DILocation(line: 12148, column: 20, scope: !5899)
!5903 = !DILocation(line: 12148, column: 14, scope: !5899)
!5904 = !DILocation(line: 12148, column: 18, scope: !5899)
!5905 = !DILocation(line: 12150, column: 5, scope: !5876)
!5906 = !DILocation(line: 12151, column: 44, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5868, file: !21, line: 12150, column: 12)
!5908 = !DILocation(line: 12151, column: 49, scope: !5907)
!5909 = !DILocation(line: 12151, column: 51, scope: !5907)
!5910 = !DILocation(line: 12151, column: 16, scope: !5907)
!5911 = !DILocation(line: 12151, column: 10, scope: !5907)
!5912 = !DILocation(line: 12151, column: 14, scope: !5907)
!5913 = !DILocation(line: 12153, column: 11, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5859, file: !21, line: 12153, column: 9)
!5915 = !DILocation(line: 12153, column: 10, scope: !5914)
!5916 = !DILocation(line: 12153, column: 9, scope: !5859)
!5917 = !DILocation(line: 12154, column: 9, scope: !5914)
!5918 = !DILocation(line: 12155, column: 24, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5859, file: !21, line: 12155, column: 9)
!5920 = !DILocation(line: 12155, column: 23, scope: !5919)
!5921 = !DILocation(line: 12155, column: 9, scope: !5919)
!5922 = !DILocation(line: 12155, column: 29, scope: !5919)
!5923 = !DILocation(line: 12155, column: 9, scope: !5859)
!5924 = !DILocation(line: 12156, column: 9, scope: !5919)
!5925 = !DILocation(line: 12157, column: 5, scope: !5859)
!5926 = !DILocation(line: 12158, column: 1, scope: !5859)
!5927 = !DISubprogram(name: "PyUnicode_Decode", scope: !544, file: !544, line: 358, type: !5928, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{!28, !54, !34, !54, !54}
!5930 = !DISubprogram(name: "PyObject_Hash", scope: !6, file: !6, line: 301, type: !196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5931 = distinct !DISubprogram(name: "__Pyx_GetBuiltinName", scope: !21, file: !21, line: 7291, type: !84, scopeLine: 7291, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5932)
!5932 = !{!5933, !5934}
!5933 = !DILocalVariable(name: "name", arg: 1, scope: !5931, file: !21, line: 7291, type: !28)
!5934 = !DILocalVariable(name: "result", scope: !5931, file: !21, line: 7292, type: !28)
!5935 = !DILocation(line: 7291, column: 49, scope: !5931)
!5936 = !DILocation(line: 7292, column: 5, scope: !5931)
!5937 = !DILocation(line: 7292, column: 15, scope: !5931)
!5938 = !DILocation(line: 7292, column: 57, scope: !5931)
!5939 = !DILocation(line: 7292, column: 66, scope: !5931)
!5940 = !DILocation(line: 7292, column: 24, scope: !5931)
!5941 = !DILocation(line: 7293, column: 9, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5931, file: !21, line: 7293, column: 9)
!5943 = !DILocation(line: 7293, column: 27, scope: !5942)
!5944 = !DILocation(line: 7293, column: 31, scope: !5942)
!5945 = !DILocation(line: 7293, column: 9, scope: !5931)
!5946 = !DILocation(line: 7294, column: 22, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5942, file: !21, line: 7293, column: 49)
!5948 = !DILocation(line: 7296, column: 41, scope: !5947)
!5949 = !DILocation(line: 7294, column: 9, scope: !5947)
!5950 = !DILocation(line: 7300, column: 5, scope: !5947)
!5951 = !DILocation(line: 7301, column: 12, scope: !5931)
!5952 = !DILocation(line: 7302, column: 1, scope: !5931)
!5953 = !DILocation(line: 7301, column: 5, scope: !5931)
!5954 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStrNoError", scope: !21, file: !21, line: 7275, type: !105, scopeLine: 7275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5955)
!5955 = !{!5956, !5957, !5958, !5959}
!5956 = !DILocalVariable(name: "obj", arg: 1, scope: !5954, file: !21, line: 7275, type: !28)
!5957 = !DILocalVariable(name: "attr_name", arg: 2, scope: !5954, file: !21, line: 7275, type: !28)
!5958 = !DILocalVariable(name: "result", scope: !5954, file: !21, line: 7276, type: !28)
!5959 = !DILocalVariable(name: "tp", scope: !5954, file: !21, line: 7278, type: !42)
!5960 = !DILocation(line: 7275, column: 75, scope: !5954)
!5961 = !DILocation(line: 7275, column: 90, scope: !5954)
!5962 = !DILocation(line: 7276, column: 5, scope: !5954)
!5963 = !DILocation(line: 7276, column: 15, scope: !5954)
!5964 = !DILocation(line: 7278, column: 5, scope: !5954)
!5965 = !DILocation(line: 7278, column: 19, scope: !5954)
!5966 = !DILocation(line: 7278, column: 24, scope: !5954)
!5967 = !DILocation(line: 7279, column: 9, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5954, file: !21, line: 7279, column: 9)
!5969 = !DILocation(line: 7279, column: 9, scope: !5954)
!5970 = !DILocation(line: 7280, column: 49, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5968, file: !21, line: 7279, column: 61)
!5972 = !DILocation(line: 7280, column: 54, scope: !5971)
!5973 = !DILocation(line: 7280, column: 16, scope: !5971)
!5974 = !DILocation(line: 7280, column: 9, scope: !5971)
!5975 = !DILocation(line: 7283, column: 40, scope: !5954)
!5976 = !DILocation(line: 7283, column: 45, scope: !5954)
!5977 = !DILocation(line: 7283, column: 14, scope: !5954)
!5978 = !DILocation(line: 7283, column: 12, scope: !5954)
!5979 = !DILocation(line: 7284, column: 9, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5954, file: !21, line: 7284, column: 9)
!5981 = !DILocation(line: 7284, column: 9, scope: !5954)
!5982 = !DILocation(line: 7285, column: 9, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5980, file: !21, line: 7284, column: 28)
!5984 = !DILocation(line: 7286, column: 5, scope: !5983)
!5985 = !DILocation(line: 7287, column: 12, scope: !5954)
!5986 = !DILocation(line: 7287, column: 5, scope: !5954)
!5987 = !DILocation(line: 7288, column: 1, scope: !5954)
!5988 = !DISubprogram(name: "_PyObject_GenericGetAttrWithDict", scope: !45, file: !45, line: 305, type: !5989, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{!28, !28, !28, !28, !7}
!5991 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStr_ClearAttributeError", scope: !21, file: !21, line: 7269, type: !413, scopeLine: 7269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5992)
!5992 = !{!5993}
!5993 = !DILocalVariable(name: "__pyx_tstate", scope: !5991, file: !21, line: 7270, type: !1698)
!5994 = !DILocation(line: 7270, column: 5, scope: !5991)
!5995 = !DILocation(line: 7271, column: 5, scope: !5991)
!5996 = !DILocation(line: 7272, column: 9, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5991, file: !21, line: 7272, column: 9)
!5998 = !DILocation(line: 7272, column: 9, scope: !5991)
!5999 = !DILocation(line: 7273, column: 9, scope: !5997)
!6000 = !DILocation(line: 7274, column: 1, scope: !5991)
!6001 = !DISubprogram(name: "_PyThreadState_UncheckedGet", scope: !1701, file: !1701, line: 215, type: !2717, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6002 = distinct !DISubprogram(name: "__Pyx_PyErr_ExceptionMatchesInState", scope: !21, file: !21, line: 7167, type: !6003, scopeLine: 7167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6005)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!7, !1698, !28}
!6005 = !{!6006, !6007, !6008, !6009}
!6006 = !DILocalVariable(name: "tstate", arg: 1, scope: !6002, file: !21, line: 7167, type: !1698)
!6007 = !DILocalVariable(name: "err", arg: 2, scope: !6002, file: !21, line: 7167, type: !28)
!6008 = !DILocalVariable(name: "result", scope: !6002, file: !21, line: 7168, type: !7)
!6009 = !DILocalVariable(name: "exc_type", scope: !6002, file: !21, line: 7169, type: !28)
!6010 = !DILocation(line: 7167, column: 77, scope: !6002)
!6011 = !DILocation(line: 7167, column: 95, scope: !6002)
!6012 = !DILocation(line: 7168, column: 5, scope: !6002)
!6013 = !DILocation(line: 7168, column: 9, scope: !6002)
!6014 = !DILocation(line: 7169, column: 5, scope: !6002)
!6015 = !DILocation(line: 7169, column: 15, scope: !6002)
!6016 = !DILocation(line: 7176, column: 16, scope: !6002)
!6017 = !DILocation(line: 7176, column: 24, scope: !6002)
!6018 = !{!2590, !1900, i64 96}
!6019 = !DILocation(line: 7176, column: 14, scope: !6002)
!6020 = !DILocation(line: 7177, column: 9, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6002, file: !21, line: 7177, column: 9)
!6022 = !DILocation(line: 7177, column: 21, scope: !6021)
!6023 = !DILocation(line: 7177, column: 18, scope: !6021)
!6024 = !DILocation(line: 7177, column: 9, scope: !6002)
!6025 = !DILocation(line: 7177, column: 26, scope: !6021)
!6026 = !DILocation(line: 7178, column: 9, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6002, file: !21, line: 7178, column: 9)
!6028 = !DILocation(line: 7178, column: 9, scope: !6002)
!6029 = !DILocation(line: 7178, column: 30, scope: !6027)
!6030 = !DILocation(line: 7183, column: 9, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6002, file: !21, line: 7183, column: 9)
!6032 = !DILocation(line: 7183, column: 9, scope: !6002)
!6033 = !DILocation(line: 7184, column: 52, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6031, file: !21, line: 7183, column: 39)
!6035 = !DILocation(line: 7184, column: 62, scope: !6034)
!6036 = !DILocation(line: 7184, column: 18, scope: !6034)
!6037 = !DILocation(line: 7184, column: 16, scope: !6034)
!6038 = !DILocation(line: 7185, column: 5, scope: !6034)
!6039 = !DILocation(line: 7186, column: 52, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6031, file: !21, line: 7185, column: 12)
!6041 = !DILocation(line: 7186, column: 62, scope: !6040)
!6042 = !DILocation(line: 7186, column: 18, scope: !6040)
!6043 = !DILocation(line: 7186, column: 16, scope: !6040)
!6044 = !DILocation(line: 7191, column: 12, scope: !6002)
!6045 = !DILocation(line: 7191, column: 5, scope: !6002)
!6046 = !DILocation(line: 7192, column: 1, scope: !6002)
!6047 = distinct !DISubprogram(name: "__Pyx_ErrRestoreInState", scope: !21, file: !21, line: 7197, type: !6048, scopeLine: 7197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6050)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{null, !1698, !28, !28, !28}
!6050 = !{!6051, !6052, !6053, !6054, !6055, !6056, !6057}
!6051 = !DILocalVariable(name: "tstate", arg: 1, scope: !6047, file: !21, line: 7197, type: !1698)
!6052 = !DILocalVariable(name: "type", arg: 2, scope: !6047, file: !21, line: 7197, type: !28)
!6053 = !DILocalVariable(name: "value", arg: 3, scope: !6047, file: !21, line: 7197, type: !28)
!6054 = !DILocalVariable(name: "tb", arg: 4, scope: !6047, file: !21, line: 7197, type: !28)
!6055 = !DILocalVariable(name: "tmp_type", scope: !6047, file: !21, line: 7213, type: !28)
!6056 = !DILocalVariable(name: "tmp_value", scope: !6047, file: !21, line: 7213, type: !28)
!6057 = !DILocalVariable(name: "tmp_tb", scope: !6047, file: !21, line: 7213, type: !28)
!6058 = !DILocation(line: 7197, column: 66, scope: !6047)
!6059 = !DILocation(line: 7197, column: 84, scope: !6047)
!6060 = !DILocation(line: 7197, column: 100, scope: !6047)
!6061 = !DILocation(line: 7197, column: 117, scope: !6047)
!6062 = !DILocation(line: 7213, column: 5, scope: !6047)
!6063 = !DILocation(line: 7213, column: 15, scope: !6047)
!6064 = !DILocation(line: 7213, column: 26, scope: !6047)
!6065 = !DILocation(line: 7213, column: 38, scope: !6047)
!6066 = !DILocation(line: 7214, column: 16, scope: !6047)
!6067 = !DILocation(line: 7214, column: 24, scope: !6047)
!6068 = !DILocation(line: 7214, column: 14, scope: !6047)
!6069 = !DILocation(line: 7215, column: 17, scope: !6047)
!6070 = !DILocation(line: 7215, column: 25, scope: !6047)
!6071 = !{!2590, !1900, i64 104}
!6072 = !DILocation(line: 7215, column: 15, scope: !6047)
!6073 = !DILocation(line: 7216, column: 14, scope: !6047)
!6074 = !DILocation(line: 7216, column: 22, scope: !6047)
!6075 = !{!2590, !1900, i64 112}
!6076 = !DILocation(line: 7216, column: 12, scope: !6047)
!6077 = !DILocation(line: 7217, column: 27, scope: !6047)
!6078 = !DILocation(line: 7217, column: 5, scope: !6047)
!6079 = !DILocation(line: 7217, column: 13, scope: !6047)
!6080 = !DILocation(line: 7217, column: 25, scope: !6047)
!6081 = !DILocation(line: 7218, column: 28, scope: !6047)
!6082 = !DILocation(line: 7218, column: 5, scope: !6047)
!6083 = !DILocation(line: 7218, column: 13, scope: !6047)
!6084 = !DILocation(line: 7218, column: 26, scope: !6047)
!6085 = !DILocation(line: 7219, column: 32, scope: !6047)
!6086 = !DILocation(line: 7219, column: 5, scope: !6047)
!6087 = !DILocation(line: 7219, column: 13, scope: !6047)
!6088 = !DILocation(line: 7219, column: 30, scope: !6047)
!6089 = !DILocation(line: 7220, column: 5, scope: !6047)
!6090 = !DILocation(line: 7221, column: 5, scope: !6047)
!6091 = !DILocation(line: 7222, column: 5, scope: !6047)
!6092 = !DILocation(line: 7224, column: 1, scope: !6047)
!6093 = distinct !DISubprogram(name: "__Pyx_PyErr_ExceptionMatchesTuple", scope: !21, file: !21, line: 7154, type: !177, scopeLine: 7154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6094)
!6094 = !{!6095, !6096, !6097, !6098}
!6095 = !DILocalVariable(name: "exc_type", arg: 1, scope: !6093, file: !21, line: 7154, type: !28)
!6096 = !DILocalVariable(name: "tuple", arg: 2, scope: !6093, file: !21, line: 7154, type: !28)
!6097 = !DILocalVariable(name: "i", scope: !6093, file: !21, line: 7155, type: !34)
!6098 = !DILocalVariable(name: "n", scope: !6093, file: !21, line: 7155, type: !34)
!6099 = !DILocation(line: 7154, column: 56, scope: !6093)
!6100 = !DILocation(line: 7154, column: 76, scope: !6093)
!6101 = !DILocation(line: 7155, column: 5, scope: !6093)
!6102 = !DILocation(line: 7155, column: 16, scope: !6093)
!6103 = !DILocation(line: 7155, column: 19, scope: !6093)
!6104 = !DILocation(line: 7156, column: 9, scope: !6093)
!6105 = !DILocation(line: 7156, column: 7, scope: !6093)
!6106 = !DILocation(line: 7158, column: 11, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6093, file: !21, line: 7158, column: 5)
!6108 = !DILocation(line: 7158, column: 10, scope: !6107)
!6109 = !DILocation(line: 7158, column: 15, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6107, file: !21, line: 7158, column: 5)
!6111 = !DILocation(line: 7158, column: 17, scope: !6110)
!6112 = !DILocation(line: 7158, column: 16, scope: !6110)
!6113 = !DILocation(line: 7158, column: 5, scope: !6107)
!6114 = !DILocation(line: 7159, column: 13, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !21, line: 7159, column: 13)
!6116 = distinct !DILexicalBlock(scope: !6110, file: !21, line: 7158, column: 25)
!6117 = !DILocation(line: 7159, column: 25, scope: !6115)
!6118 = !DILocation(line: 7159, column: 22, scope: !6115)
!6119 = !DILocation(line: 7159, column: 13, scope: !6116)
!6120 = !DILocation(line: 7159, column: 53, scope: !6115)
!6121 = !DILocation(line: 7160, column: 5, scope: !6116)
!6122 = !DILocation(line: 7158, column: 21, scope: !6110)
!6123 = !DILocation(line: 7158, column: 5, scope: !6110)
!6124 = distinct !{!6124, !6113, !6125, !4470}
!6125 = !DILocation(line: 7160, column: 5, scope: !6107)
!6126 = !DILocation(line: 7162, column: 11, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6093, file: !21, line: 7162, column: 5)
!6128 = !DILocation(line: 7162, column: 10, scope: !6127)
!6129 = !DILocation(line: 7162, column: 15, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6127, file: !21, line: 7162, column: 5)
!6131 = !DILocation(line: 7162, column: 17, scope: !6130)
!6132 = !DILocation(line: 7162, column: 16, scope: !6130)
!6133 = !DILocation(line: 7162, column: 5, scope: !6127)
!6134 = !DILocation(line: 7163, column: 47, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !21, line: 7163, column: 13)
!6136 = distinct !DILexicalBlock(scope: !6130, file: !21, line: 7162, column: 25)
!6137 = !DILocation(line: 7163, column: 57, scope: !6135)
!6138 = !DILocation(line: 7163, column: 13, scope: !6135)
!6139 = !DILocation(line: 7163, column: 13, scope: !6136)
!6140 = !DILocation(line: 7163, column: 86, scope: !6135)
!6141 = !DILocation(line: 7164, column: 5, scope: !6136)
!6142 = !DILocation(line: 7162, column: 21, scope: !6130)
!6143 = !DILocation(line: 7162, column: 5, scope: !6130)
!6144 = distinct !{!6144, !6133, !6145, !4470}
!6145 = !DILocation(line: 7164, column: 5, scope: !6127)
!6146 = !DILocation(line: 7165, column: 5, scope: !6093)
!6147 = !DILocation(line: 7166, column: 1, scope: !6093)
!6148 = distinct !DISubprogram(name: "__Pyx_PyErr_GivenExceptionMatches", scope: !21, file: !21, line: 12003, type: !177, scopeLine: 12003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6149)
!6149 = !{!6150, !6151}
!6150 = !DILocalVariable(name: "err", arg: 1, scope: !6148, file: !21, line: 12003, type: !28)
!6151 = !DILocalVariable(name: "exc_type", arg: 2, scope: !6148, file: !21, line: 12003, type: !28)
!6152 = !DILocation(line: 12003, column: 70, scope: !6148)
!6153 = !DILocation(line: 12003, column: 85, scope: !6148)
!6154 = !DILocation(line: 12004, column: 9, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6148, file: !21, line: 12004, column: 9)
!6156 = !DILocation(line: 12004, column: 9, scope: !6148)
!6157 = !DILocation(line: 12004, column: 34, scope: !6155)
!6158 = !DILocation(line: 12005, column: 9, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6148, file: !21, line: 12005, column: 9)
!6160 = !DILocation(line: 0, scope: !6159)
!6161 = !DILocation(line: 12005, column: 9, scope: !6148)
!6162 = !DILocation(line: 12006, column: 13, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !21, line: 12006, column: 13)
!6164 = distinct !DILexicalBlock(scope: !6159, file: !21, line: 12005, column: 46)
!6165 = !DILocation(line: 0, scope: !6163)
!6166 = !DILocation(line: 12006, column: 13, scope: !6164)
!6167 = !DILocation(line: 12007, column: 61, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6163, file: !21, line: 12006, column: 55)
!6169 = !DILocation(line: 12007, column: 72, scope: !6168)
!6170 = !DILocation(line: 12007, column: 20, scope: !6168)
!6171 = !DILocation(line: 12007, column: 13, scope: !6168)
!6172 = !DILocation(line: 12008, column: 20, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6163, file: !21, line: 12008, column: 20)
!6174 = !DILocation(line: 12008, column: 20, scope: !6163)
!6175 = !DILocation(line: 12009, column: 59, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6173, file: !21, line: 12008, column: 53)
!6177 = !DILocation(line: 12009, column: 64, scope: !6176)
!6178 = !DILocation(line: 12009, column: 20, scope: !6176)
!6179 = !DILocation(line: 12009, column: 13, scope: !6176)
!6180 = !DILocation(line: 12012, column: 5, scope: !6164)
!6181 = !DILocation(line: 12013, column: 40, scope: !6148)
!6182 = !DILocation(line: 12013, column: 45, scope: !6148)
!6183 = !DILocation(line: 12013, column: 12, scope: !6148)
!6184 = !DILocation(line: 12013, column: 5, scope: !6148)
!6185 = !DILocation(line: 12014, column: 1, scope: !6148)
!6186 = distinct !DISubprogram(name: "__Pyx_inner_PyErr_GivenExceptionMatches2", scope: !21, file: !21, line: 11974, type: !191, scopeLine: 11974, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6187)
!6187 = !{!6188, !6189, !6190}
!6188 = !DILocalVariable(name: "err", arg: 1, scope: !6186, file: !21, line: 11974, type: !28)
!6189 = !DILocalVariable(name: "exc_type1", arg: 2, scope: !6186, file: !21, line: 11974, type: !28)
!6190 = !DILocalVariable(name: "exc_type2", arg: 3, scope: !6186, file: !21, line: 11974, type: !28)
!6191 = !DILocation(line: 11974, column: 77, scope: !6186)
!6192 = !DILocation(line: 11974, column: 92, scope: !6186)
!6193 = !DILocation(line: 11974, column: 113, scope: !6186)
!6194 = !DILocation(line: 11975, column: 9, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6186, file: !21, line: 11975, column: 9)
!6196 = !DILocation(line: 11975, column: 9, scope: !6186)
!6197 = !DILocation(line: 11976, column: 51, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6195, file: !21, line: 11975, column: 20)
!6199 = !DILocation(line: 11976, column: 71, scope: !6198)
!6200 = !DILocation(line: 11976, column: 97, scope: !6198)
!6201 = !DILocation(line: 11976, column: 16, scope: !6198)
!6202 = !DILocation(line: 11976, column: 9, scope: !6198)
!6203 = !DILocation(line: 11978, column: 47, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6195, file: !21, line: 11977, column: 12)
!6205 = !DILocation(line: 11978, column: 67, scope: !6204)
!6206 = !DILocation(line: 11978, column: 16, scope: !6204)
!6207 = !DILocation(line: 11978, column: 9, scope: !6204)
!6208 = !DILocation(line: 11980, column: 1, scope: !6186)
!6209 = distinct !DISubprogram(name: "__Pyx_PyErr_GivenExceptionMatchesTuple", scope: !21, file: !21, line: 11982, type: !177, scopeLine: 11982, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6210)
!6210 = !{!6211, !6212, !6213, !6214, !6215}
!6211 = !DILocalVariable(name: "exc_type", arg: 1, scope: !6209, file: !21, line: 11982, type: !28)
!6212 = !DILocalVariable(name: "tuple", arg: 2, scope: !6209, file: !21, line: 11982, type: !28)
!6213 = !DILocalVariable(name: "i", scope: !6209, file: !21, line: 11983, type: !34)
!6214 = !DILocalVariable(name: "n", scope: !6209, file: !21, line: 11983, type: !34)
!6215 = !DILocalVariable(name: "t", scope: !6216, file: !21, line: 11992, type: !28)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !21, line: 11991, column: 25)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !21, line: 11991, column: 5)
!6218 = distinct !DILexicalBlock(scope: !6209, file: !21, line: 11991, column: 5)
!6219 = !DILocation(line: 11982, column: 61, scope: !6209)
!6220 = !DILocation(line: 11982, column: 81, scope: !6209)
!6221 = !DILocation(line: 11983, column: 5, scope: !6209)
!6222 = !DILocation(line: 11983, column: 16, scope: !6209)
!6223 = !DILocation(line: 11983, column: 19, scope: !6209)
!6224 = !DILocation(line: 11985, column: 9, scope: !6209)
!6225 = !DILocation(line: 11985, column: 7, scope: !6209)
!6226 = !DILocation(line: 11987, column: 11, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6209, file: !21, line: 11987, column: 5)
!6228 = !DILocation(line: 11987, column: 10, scope: !6227)
!6229 = !DILocation(line: 11987, column: 15, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6227, file: !21, line: 11987, column: 5)
!6231 = !DILocation(line: 11987, column: 17, scope: !6230)
!6232 = !DILocation(line: 11987, column: 16, scope: !6230)
!6233 = !DILocation(line: 11987, column: 5, scope: !6227)
!6234 = !DILocation(line: 11988, column: 13, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6236, file: !21, line: 11988, column: 13)
!6236 = distinct !DILexicalBlock(scope: !6230, file: !21, line: 11987, column: 25)
!6237 = !DILocation(line: 11988, column: 25, scope: !6235)
!6238 = !DILocation(line: 11988, column: 22, scope: !6235)
!6239 = !DILocation(line: 11988, column: 13, scope: !6236)
!6240 = !DILocation(line: 11988, column: 53, scope: !6235)
!6241 = !DILocation(line: 11989, column: 5, scope: !6236)
!6242 = !DILocation(line: 11987, column: 21, scope: !6230)
!6243 = !DILocation(line: 11987, column: 5, scope: !6230)
!6244 = distinct !{!6244, !6233, !6245, !4470}
!6245 = !DILocation(line: 11989, column: 5, scope: !6227)
!6246 = !DILocation(line: 11991, column: 11, scope: !6218)
!6247 = !DILocation(line: 11991, column: 10, scope: !6218)
!6248 = !DILocation(line: 11991, column: 15, scope: !6217)
!6249 = !DILocation(line: 11991, column: 17, scope: !6217)
!6250 = !DILocation(line: 11991, column: 16, scope: !6217)
!6251 = !DILocation(line: 11991, column: 5, scope: !6218)
!6252 = !DILocation(line: 11992, column: 9, scope: !6216)
!6253 = !DILocation(line: 11992, column: 19, scope: !6216)
!6254 = !DILocation(line: 11992, column: 23, scope: !6216)
!6255 = !DILocation(line: 11996, column: 13, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6216, file: !21, line: 11996, column: 13)
!6257 = !DILocation(line: 0, scope: !6256)
!6258 = !DILocation(line: 11996, column: 13, scope: !6216)
!6259 = !DILocation(line: 11997, column: 58, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !21, line: 11997, column: 17)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !21, line: 11996, column: 48)
!6262 = !DILocation(line: 11997, column: 74, scope: !6260)
!6263 = !DILocation(line: 11997, column: 17, scope: !6260)
!6264 = !DILocation(line: 11997, column: 17, scope: !6261)
!6265 = !DILocation(line: 11997, column: 78, scope: !6260)
!6266 = !DILocation(line: 11998, column: 9, scope: !6261)
!6267 = !DILocation(line: 12000, column: 5, scope: !6217)
!6268 = !DILocation(line: 12000, column: 5, scope: !6216)
!6269 = !DILocation(line: 11991, column: 21, scope: !6217)
!6270 = !DILocation(line: 11991, column: 5, scope: !6217)
!6271 = distinct !{!6271, !6251, !6272, !4470}
!6272 = !DILocation(line: 12000, column: 5, scope: !6218)
!6273 = !DILocation(line: 12001, column: 5, scope: !6209)
!6274 = !DILocation(line: 12002, column: 1, scope: !6209)
!6275 = !DISubprogram(name: "PyErr_GivenExceptionMatches", scope: !2720, file: !2720, line: 38, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6276 = distinct !DISubprogram(name: "__Pyx_IsAnySubtype2", scope: !21, file: !21, line: 11935, type: !6277, scopeLine: 11935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!7, !42, !42, !42}
!6279 = !{!6280, !6281, !6282, !6283, !6284, !6287, !6288}
!6280 = !DILocalVariable(name: "cls", arg: 1, scope: !6276, file: !21, line: 11935, type: !42)
!6281 = !DILocalVariable(name: "a", arg: 2, scope: !6276, file: !21, line: 11935, type: !42)
!6282 = !DILocalVariable(name: "b", arg: 3, scope: !6276, file: !21, line: 11935, type: !42)
!6283 = !DILocalVariable(name: "mro", scope: !6276, file: !21, line: 11936, type: !28)
!6284 = !DILocalVariable(name: "i", scope: !6285, file: !21, line: 11940, type: !34)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !21, line: 11939, column: 22)
!6286 = distinct !DILexicalBlock(scope: !6276, file: !21, line: 11939, column: 9)
!6287 = !DILocalVariable(name: "n", scope: !6285, file: !21, line: 11940, type: !34)
!6288 = !DILocalVariable(name: "base", scope: !6289, file: !21, line: 11943, type: !28)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !21, line: 11942, column: 33)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !21, line: 11942, column: 9)
!6291 = distinct !DILexicalBlock(scope: !6285, file: !21, line: 11942, column: 9)
!6292 = !DILocation(line: 11935, column: 60, scope: !6276)
!6293 = !DILocation(line: 11935, column: 79, scope: !6276)
!6294 = !DILocation(line: 11935, column: 96, scope: !6276)
!6295 = !DILocation(line: 11936, column: 5, scope: !6276)
!6296 = !DILocation(line: 11936, column: 15, scope: !6276)
!6297 = !DILocation(line: 11937, column: 9, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6276, file: !21, line: 11937, column: 9)
!6299 = !DILocation(line: 11937, column: 16, scope: !6298)
!6300 = !DILocation(line: 11937, column: 13, scope: !6298)
!6301 = !DILocation(line: 11937, column: 18, scope: !6298)
!6302 = !DILocation(line: 11937, column: 21, scope: !6298)
!6303 = !DILocation(line: 11937, column: 28, scope: !6298)
!6304 = !DILocation(line: 11937, column: 25, scope: !6298)
!6305 = !DILocation(line: 11937, column: 9, scope: !6276)
!6306 = !DILocation(line: 11937, column: 31, scope: !6298)
!6307 = !DILocation(line: 11938, column: 11, scope: !6276)
!6308 = !DILocation(line: 11938, column: 16, scope: !6276)
!6309 = !{!2421, !1900, i64 344}
!6310 = !DILocation(line: 11938, column: 9, scope: !6276)
!6311 = !DILocation(line: 11939, column: 9, scope: !6286)
!6312 = !DILocation(line: 11939, column: 9, scope: !6276)
!6313 = !DILocation(line: 11940, column: 9, scope: !6285)
!6314 = !DILocation(line: 11940, column: 20, scope: !6285)
!6315 = !DILocation(line: 11940, column: 23, scope: !6285)
!6316 = !DILocation(line: 11941, column: 13, scope: !6285)
!6317 = !DILocation(line: 11941, column: 11, scope: !6285)
!6318 = !DILocation(line: 11942, column: 16, scope: !6291)
!6319 = !DILocation(line: 11942, column: 14, scope: !6291)
!6320 = !DILocation(line: 11942, column: 21, scope: !6290)
!6321 = !DILocation(line: 11942, column: 25, scope: !6290)
!6322 = !DILocation(line: 11942, column: 23, scope: !6290)
!6323 = !DILocation(line: 11942, column: 9, scope: !6291)
!6324 = !DILocation(line: 11943, column: 13, scope: !6289)
!6325 = !DILocation(line: 11943, column: 23, scope: !6289)
!6326 = !DILocation(line: 11943, column: 30, scope: !6289)
!6327 = !DILocation(line: 11944, column: 17, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6289, file: !21, line: 11944, column: 17)
!6329 = !DILocation(line: 11944, column: 37, scope: !6328)
!6330 = !DILocation(line: 11944, column: 22, scope: !6328)
!6331 = !DILocation(line: 11944, column: 39, scope: !6328)
!6332 = !DILocation(line: 11944, column: 42, scope: !6328)
!6333 = !DILocation(line: 11944, column: 62, scope: !6328)
!6334 = !DILocation(line: 11944, column: 47, scope: !6328)
!6335 = !DILocation(line: 11944, column: 17, scope: !6289)
!6336 = !DILocation(line: 11945, column: 17, scope: !6328)
!6337 = !DILocation(line: 11946, column: 9, scope: !6290)
!6338 = !DILocation(line: 11946, column: 9, scope: !6289)
!6339 = !DILocation(line: 11942, column: 29, scope: !6290)
!6340 = !DILocation(line: 11942, column: 9, scope: !6290)
!6341 = distinct !{!6341, !6323, !6342, !4470}
!6342 = !DILocation(line: 11946, column: 9, scope: !6291)
!6343 = !DILocation(line: 11947, column: 9, scope: !6285)
!6344 = !DILocation(line: 11948, column: 5, scope: !6286)
!6345 = !DILocation(line: 11949, column: 26, scope: !6276)
!6346 = !DILocation(line: 11949, column: 31, scope: !6276)
!6347 = !DILocation(line: 11949, column: 12, scope: !6276)
!6348 = !DILocation(line: 11949, column: 34, scope: !6276)
!6349 = !DILocation(line: 11949, column: 51, scope: !6276)
!6350 = !DILocation(line: 11949, column: 56, scope: !6276)
!6351 = !DILocation(line: 11949, column: 37, scope: !6276)
!6352 = !DILocation(line: 11949, column: 5, scope: !6276)
!6353 = !DILocation(line: 11950, column: 1, scope: !6276)
!6354 = distinct !DISubprogram(name: "__Pyx_IsSubtype", scope: !21, file: !21, line: 11920, type: !6355, scopeLine: 11920, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!7, !42, !42}
!6357 = !{!6358, !6359, !6360, !6361, !6364}
!6358 = !DILocalVariable(name: "a", arg: 1, scope: !6354, file: !21, line: 11920, type: !42)
!6359 = !DILocalVariable(name: "b", arg: 2, scope: !6354, file: !21, line: 11920, type: !42)
!6360 = !DILocalVariable(name: "mro", scope: !6354, file: !21, line: 11921, type: !28)
!6361 = !DILocalVariable(name: "i", scope: !6362, file: !21, line: 11925, type: !34)
!6362 = distinct !DILexicalBlock(scope: !6363, file: !21, line: 11924, column: 22)
!6363 = distinct !DILexicalBlock(scope: !6354, file: !21, line: 11924, column: 9)
!6364 = !DILocalVariable(name: "n", scope: !6362, file: !21, line: 11925, type: !34)
!6365 = !DILocation(line: 11920, column: 56, scope: !6354)
!6366 = !DILocation(line: 11920, column: 73, scope: !6354)
!6367 = !DILocation(line: 11921, column: 5, scope: !6354)
!6368 = !DILocation(line: 11921, column: 15, scope: !6354)
!6369 = !DILocation(line: 11922, column: 9, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6354, file: !21, line: 11922, column: 9)
!6371 = !DILocation(line: 11922, column: 14, scope: !6370)
!6372 = !DILocation(line: 11922, column: 11, scope: !6370)
!6373 = !DILocation(line: 11922, column: 9, scope: !6354)
!6374 = !DILocation(line: 11922, column: 17, scope: !6370)
!6375 = !DILocation(line: 11923, column: 11, scope: !6354)
!6376 = !DILocation(line: 11923, column: 14, scope: !6354)
!6377 = !DILocation(line: 11923, column: 9, scope: !6354)
!6378 = !DILocation(line: 11924, column: 9, scope: !6363)
!6379 = !DILocation(line: 11924, column: 9, scope: !6354)
!6380 = !DILocation(line: 11925, column: 9, scope: !6362)
!6381 = !DILocation(line: 11925, column: 20, scope: !6362)
!6382 = !DILocation(line: 11925, column: 23, scope: !6362)
!6383 = !DILocation(line: 11926, column: 13, scope: !6362)
!6384 = !DILocation(line: 11926, column: 11, scope: !6362)
!6385 = !DILocation(line: 11927, column: 16, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6362, file: !21, line: 11927, column: 9)
!6387 = !DILocation(line: 11927, column: 14, scope: !6386)
!6388 = !DILocation(line: 11927, column: 21, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6386, file: !21, line: 11927, column: 9)
!6390 = !DILocation(line: 11927, column: 25, scope: !6389)
!6391 = !DILocation(line: 11927, column: 23, scope: !6389)
!6392 = !DILocation(line: 11927, column: 9, scope: !6386)
!6393 = !DILocation(line: 11928, column: 17, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !21, line: 11928, column: 17)
!6395 = distinct !DILexicalBlock(scope: !6389, file: !21, line: 11927, column: 33)
!6396 = !DILocation(line: 11928, column: 57, scope: !6394)
!6397 = !DILocation(line: 11928, column: 42, scope: !6394)
!6398 = !DILocation(line: 11928, column: 17, scope: !6395)
!6399 = !DILocation(line: 11929, column: 17, scope: !6394)
!6400 = !DILocation(line: 11930, column: 9, scope: !6395)
!6401 = !DILocation(line: 11927, column: 29, scope: !6389)
!6402 = !DILocation(line: 11927, column: 9, scope: !6389)
!6403 = distinct !{!6403, !6392, !6404, !4470}
!6404 = !DILocation(line: 11930, column: 9, scope: !6386)
!6405 = !DILocation(line: 11931, column: 9, scope: !6362)
!6406 = !DILocation(line: 11932, column: 5, scope: !6363)
!6407 = !DILocation(line: 11933, column: 26, scope: !6354)
!6408 = !DILocation(line: 11933, column: 29, scope: !6354)
!6409 = !DILocation(line: 11933, column: 12, scope: !6354)
!6410 = !DILocation(line: 11933, column: 5, scope: !6354)
!6411 = !DILocation(line: 11934, column: 1, scope: !6354)
!6412 = distinct !DISubprogram(name: "__Pyx_InBases", scope: !21, file: !21, line: 11912, type: !6355, scopeLine: 11912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6413)
!6413 = !{!6414, !6415}
!6414 = !DILocalVariable(name: "a", arg: 1, scope: !6412, file: !21, line: 11912, type: !42)
!6415 = !DILocalVariable(name: "b", arg: 2, scope: !6412, file: !21, line: 11912, type: !42)
!6416 = !DILocation(line: 11912, column: 40, scope: !6412)
!6417 = !DILocation(line: 11912, column: 57, scope: !6412)
!6418 = !DILocation(line: 11913, column: 5, scope: !6412)
!6419 = !DILocation(line: 11913, column: 12, scope: !6412)
!6420 = !DILocation(line: 11914, column: 13, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6412, file: !21, line: 11913, column: 15)
!6422 = !{!2421, !1900, i64 256}
!6423 = !DILocation(line: 11914, column: 11, scope: !6421)
!6424 = !DILocation(line: 11915, column: 13, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6421, file: !21, line: 11915, column: 13)
!6426 = !DILocation(line: 11915, column: 18, scope: !6425)
!6427 = !DILocation(line: 11915, column: 15, scope: !6425)
!6428 = !DILocation(line: 11915, column: 13, scope: !6421)
!6429 = !DILocation(line: 11916, column: 13, scope: !6425)
!6430 = distinct !{!6430, !6418, !6431, !4470}
!6431 = !DILocation(line: 11917, column: 5, scope: !6412)
!6432 = !DILocation(line: 11918, column: 12, scope: !6412)
!6433 = !DILocation(line: 11918, column: 14, scope: !6412)
!6434 = !DILocation(line: 11918, column: 5, scope: !6412)
!6435 = !DILocation(line: 11919, column: 1, scope: !6412)
!6436 = !DISubprogram(name: "PyTuple_Pack", scope: !2799, file: !2799, line: 35, type: !6437, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!28, !34, null}
!6439 = distinct !DISubprogram(name: "__Pyx_PyCode_New", scope: !21, file: !21, line: 647, type: !6440, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6442)
!6440 = !DISubroutineType(types: !6441)
!6441 = !{!637, !7, !7, !7, !7, !7, !7, !28, !28, !28, !28, !28, !28, !28, !28, !7, !28}
!6442 = !{!6443, !6444, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459, !6460}
!6443 = !DILocalVariable(name: "a", arg: 1, scope: !6439, file: !21, line: 647, type: !7)
!6444 = !DILocalVariable(name: "p", arg: 2, scope: !6439, file: !21, line: 647, type: !7)
!6445 = !DILocalVariable(name: "k", arg: 3, scope: !6439, file: !21, line: 647, type: !7)
!6446 = !DILocalVariable(name: "l", arg: 4, scope: !6439, file: !21, line: 647, type: !7)
!6447 = !DILocalVariable(name: "s", arg: 5, scope: !6439, file: !21, line: 647, type: !7)
!6448 = !DILocalVariable(name: "f", arg: 6, scope: !6439, file: !21, line: 647, type: !7)
!6449 = !DILocalVariable(name: "code", arg: 7, scope: !6439, file: !21, line: 648, type: !28)
!6450 = !DILocalVariable(name: "c", arg: 8, scope: !6439, file: !21, line: 648, type: !28)
!6451 = !DILocalVariable(name: "n", arg: 9, scope: !6439, file: !21, line: 648, type: !28)
!6452 = !DILocalVariable(name: "v", arg: 10, scope: !6439, file: !21, line: 648, type: !28)
!6453 = !DILocalVariable(name: "fv", arg: 11, scope: !6439, file: !21, line: 649, type: !28)
!6454 = !DILocalVariable(name: "cell", arg: 12, scope: !6439, file: !21, line: 649, type: !28)
!6455 = !DILocalVariable(name: "fn", arg: 13, scope: !6439, file: !21, line: 649, type: !28)
!6456 = !DILocalVariable(name: "name", arg: 14, scope: !6439, file: !21, line: 650, type: !28)
!6457 = !DILocalVariable(name: "fline", arg: 15, scope: !6439, file: !21, line: 650, type: !7)
!6458 = !DILocalVariable(name: "lnos", arg: 16, scope: !6439, file: !21, line: 650, type: !28)
!6459 = !DILocalVariable(name: "result", scope: !6439, file: !21, line: 651, type: !637)
!6460 = !DILocalVariable(name: "empty_bytes", scope: !6439, file: !21, line: 652, type: !28)
!6461 = !DILocation(line: 647, column: 59, scope: !6439)
!6462 = !DILocation(line: 647, column: 66, scope: !6439)
!6463 = !DILocation(line: 647, column: 73, scope: !6439)
!6464 = !DILocation(line: 647, column: 80, scope: !6439)
!6465 = !DILocation(line: 647, column: 87, scope: !6439)
!6466 = !DILocation(line: 647, column: 94, scope: !6439)
!6467 = !DILocation(line: 648, column: 63, scope: !6439)
!6468 = !DILocation(line: 648, column: 79, scope: !6439)
!6469 = !DILocation(line: 648, column: 92, scope: !6439)
!6470 = !DILocation(line: 648, column: 105, scope: !6439)
!6471 = !DILocation(line: 649, column: 63, scope: !6439)
!6472 = !DILocation(line: 649, column: 77, scope: !6439)
!6473 = !DILocation(line: 649, column: 93, scope: !6439)
!6474 = !DILocation(line: 650, column: 63, scope: !6439)
!6475 = !DILocation(line: 650, column: 73, scope: !6439)
!6476 = !DILocation(line: 650, column: 90, scope: !6439)
!6477 = !DILocation(line: 651, column: 5, scope: !6439)
!6478 = !DILocation(line: 651, column: 19, scope: !6439)
!6479 = !DILocation(line: 652, column: 5, scope: !6439)
!6480 = !DILocation(line: 652, column: 15, scope: !6439)
!6481 = !DILocation(line: 652, column: 29, scope: !6439)
!6482 = !DILocation(line: 653, column: 10, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6439, file: !21, line: 653, column: 9)
!6484 = !DILocation(line: 653, column: 9, scope: !6439)
!6485 = !DILocation(line: 653, column: 23, scope: !6483)
!6486 = !DILocation(line: 660, column: 10, scope: !6439)
!6487 = !DILocation(line: 660, column: 13, scope: !6439)
!6488 = !DILocation(line: 660, column: 16, scope: !6439)
!6489 = !DILocation(line: 660, column: 19, scope: !6439)
!6490 = !DILocation(line: 660, column: 22, scope: !6439)
!6491 = !DILocation(line: 660, column: 25, scope: !6439)
!6492 = !DILocation(line: 660, column: 28, scope: !6439)
!6493 = !DILocation(line: 660, column: 34, scope: !6439)
!6494 = !DILocation(line: 660, column: 37, scope: !6439)
!6495 = !DILocation(line: 660, column: 40, scope: !6439)
!6496 = !DILocation(line: 660, column: 43, scope: !6439)
!6497 = !DILocation(line: 660, column: 47, scope: !6439)
!6498 = !DILocation(line: 660, column: 53, scope: !6439)
!6499 = !DILocation(line: 660, column: 57, scope: !6439)
!6500 = !DILocation(line: 660, column: 63, scope: !6439)
!6501 = !DILocation(line: 660, column: 69, scope: !6439)
!6502 = !DILocation(line: 660, column: 76, scope: !6439)
!6503 = !DILocation(line: 660, column: 82, scope: !6439)
!6504 = !DILocation(line: 658, column: 9, scope: !6439)
!6505 = !DILocation(line: 654, column: 12, scope: !6439)
!6506 = !DILocation(line: 661, column: 5, scope: !6439)
!6507 = !DILocation(line: 662, column: 12, scope: !6439)
!6508 = !DILocation(line: 662, column: 5, scope: !6439)
!6509 = !DILocation(line: 663, column: 3, scope: !6439)
!6510 = !DISubprogram(name: "PyCode_NewWithPosOnlyArgs", scope: !640, file: !640, line: 154, type: !6511, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{!637, !7, !7, !7, !7, !7, !7, !28, !28, !28, !28, !28, !28, !28, !28, !28, !7, !28, !28}
!6513 = distinct !DISubprogram(name: "__Pyx_ExportFunction", scope: !21, file: !21, line: 12074, type: !6514, scopeLine: 12074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!7, !54, !412, !54}
!6516 = !{!6517, !6518, !6519, !6520, !6521, !6522, !6527}
!6517 = !DILocalVariable(name: "name", arg: 1, scope: !6513, file: !21, line: 12074, type: !54)
!6518 = !DILocalVariable(name: "f", arg: 2, scope: !6513, file: !21, line: 12074, type: !412)
!6519 = !DILocalVariable(name: "sig", arg: 3, scope: !6513, file: !21, line: 12074, type: !54)
!6520 = !DILocalVariable(name: "d", scope: !6513, file: !21, line: 12075, type: !28)
!6521 = !DILocalVariable(name: "cobj", scope: !6513, file: !21, line: 12076, type: !28)
!6522 = !DILocalVariable(name: "tmp", scope: !6513, file: !21, line: 12080, type: !6523)
!6523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6513, file: !21, line: 12077, size: 64, elements: !6524)
!6524 = !{!6525, !6526}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !6523, file: !21, line: 12078, baseType: !412, size: 64)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6523, file: !21, line: 12079, baseType: !27, size: 64)
!6527 = !DILabel(scope: !6513, name: "bad", file: !21, line: 12100)
!6528 = !DILocation(line: 12074, column: 45, scope: !6513)
!6529 = !DILocation(line: 12074, column: 58, scope: !6513)
!6530 = !DILocation(line: 12074, column: 80, scope: !6513)
!6531 = !DILocation(line: 12075, column: 5, scope: !6513)
!6532 = !DILocation(line: 12075, column: 15, scope: !6513)
!6533 = !DILocation(line: 12076, column: 5, scope: !6513)
!6534 = !DILocation(line: 12076, column: 15, scope: !6513)
!6535 = !DILocation(line: 12077, column: 5, scope: !6513)
!6536 = !DILocation(line: 12080, column: 7, scope: !6513)
!6537 = !DILocation(line: 12081, column: 32, scope: !6513)
!6538 = !DILocation(line: 12081, column: 9, scope: !6513)
!6539 = !DILocation(line: 12081, column: 7, scope: !6513)
!6540 = !DILocation(line: 12082, column: 10, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6513, file: !21, line: 12082, column: 9)
!6542 = !DILocation(line: 12082, column: 9, scope: !6513)
!6543 = !DILocation(line: 12083, column: 9, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6541, file: !21, line: 12082, column: 13)
!6545 = !DILocation(line: 12084, column: 13, scope: !6544)
!6546 = !DILocation(line: 12084, column: 11, scope: !6544)
!6547 = !DILocation(line: 12085, column: 14, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !21, line: 12085, column: 13)
!6549 = !DILocation(line: 12085, column: 13, scope: !6544)
!6550 = !DILocation(line: 12086, column: 13, scope: !6548)
!6551 = !DILocation(line: 12087, column: 9, scope: !6544)
!6552 = !DILocation(line: 12088, column: 32, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6544, file: !21, line: 12088, column: 13)
!6554 = !DILocation(line: 12088, column: 65, scope: !6553)
!6555 = !DILocation(line: 12088, column: 13, scope: !6553)
!6556 = !DILocation(line: 12088, column: 68, scope: !6553)
!6557 = !DILocation(line: 12088, column: 13, scope: !6544)
!6558 = !DILocation(line: 12089, column: 13, scope: !6553)
!6559 = !DILocation(line: 12090, column: 5, scope: !6544)
!6560 = !DILocation(line: 12091, column: 14, scope: !6513)
!6561 = !DILocation(line: 12091, column: 12, scope: !6513)
!6562 = !{!1901, !1901, i64 0}
!6563 = !DILocation(line: 12092, column: 30, scope: !6513)
!6564 = !DILocation(line: 12092, column: 33, scope: !6513)
!6565 = !DILocation(line: 12092, column: 12, scope: !6513)
!6566 = !DILocation(line: 12092, column: 10, scope: !6513)
!6567 = !DILocation(line: 12093, column: 10, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6513, file: !21, line: 12093, column: 9)
!6569 = !DILocation(line: 12093, column: 9, scope: !6513)
!6570 = !DILocation(line: 12094, column: 9, scope: !6568)
!6571 = !DILocation(line: 12095, column: 30, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6513, file: !21, line: 12095, column: 9)
!6573 = !DILocation(line: 12095, column: 33, scope: !6572)
!6574 = !DILocation(line: 12095, column: 39, scope: !6572)
!6575 = !DILocation(line: 12095, column: 9, scope: !6572)
!6576 = !DILocation(line: 12095, column: 45, scope: !6572)
!6577 = !DILocation(line: 12095, column: 9, scope: !6513)
!6578 = !DILocation(line: 12096, column: 9, scope: !6572)
!6579 = !DILocation(line: 12097, column: 5, scope: !6513)
!6580 = !DILocation(line: 12098, column: 5, scope: !6513)
!6581 = !DILocation(line: 12099, column: 5, scope: !6513)
!6582 = !DILocation(line: 12100, column: 1, scope: !6513)
!6583 = !DILocation(line: 12101, column: 5, scope: !6513)
!6584 = !DILocation(line: 12102, column: 5, scope: !6513)
!6585 = !DILocation(line: 12103, column: 5, scope: !6513)
!6586 = !DILocation(line: 12104, column: 1, scope: !6513)
!6587 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA_nfa_to_dfa", scope: !21, file: !21, line: 3258, type: !6588, scopeLine: 3258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6595)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!28, !591, !7, !6590}
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6591, size: 64)
!6591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa", file: !21, line: 1494, size: 128, elements: !6592)
!6592 = !{!6593, !6594}
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n", scope: !6591, file: !21, line: 1495, baseType: !7, size: 32)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !6591, file: !21, line: 1496, baseType: !28, size: 64, offset: 64)
!6595 = !{!6596, !6597, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6606, !6607, !6608, !6609, !6610, !6611, !6612, !6613, !6614, !6615, !6616, !6617, !6618, !6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627, !6628, !6631, !6633, !6635, !6640, !6642, !6645, !6650, !6652, !6654, !6659, !6661, !6664, !6673, !6676, !6680, !6682, !6685, !6687, !6688, !6691, !6693, !6698, !6700, !6703, !6710, !6712, !6714, !6719, !6721, !6723, !6724}
!6596 = !DILocalVariable(name: "__pyx_v_old_machine", arg: 1, scope: !6587, file: !21, line: 3258, type: !591)
!6597 = !DILocalVariable(name: "__pyx_skip_dispatch", arg: 2, scope: !6587, file: !21, line: 3258, type: !7)
!6598 = !DILocalVariable(name: "__pyx_optional_args", arg: 3, scope: !6587, file: !21, line: 3258, type: !6590)
!6599 = !DILocalVariable(name: "__pyx_v_debug", scope: !6587, file: !21, line: 3259, type: !28)
!6600 = !DILocalVariable(name: "__pyx_v_new_machine", scope: !6587, file: !21, line: 3260, type: !415)
!6601 = !DILocalVariable(name: "__pyx_v_transitions", scope: !6587, file: !21, line: 3261, type: !445)
!6602 = !DILocalVariable(name: "__pyx_v_state_map", scope: !6587, file: !21, line: 3262, type: !423)
!6603 = !DILocalVariable(name: "__pyx_v_key", scope: !6587, file: !21, line: 3263, type: !28)
!6604 = !DILocalVariable(name: "__pyx_v_old_state", scope: !6587, file: !21, line: 3264, type: !28)
!6605 = !DILocalVariable(name: "__pyx_v_new_state", scope: !6587, file: !21, line: 3265, type: !28)
!6606 = !DILocalVariable(name: "__pyx_v_event", scope: !6587, file: !21, line: 3266, type: !28)
!6607 = !DILocalVariable(name: "__pyx_v_old_target_states", scope: !6587, file: !21, line: 3267, type: !28)
!6608 = !DILocalVariable(name: "__pyx_v_old_states", scope: !6587, file: !21, line: 3268, type: !28)
!6609 = !DILocalVariable(name: "__pyx_r", scope: !6587, file: !21, line: 3269, type: !28)
!6610 = !DILocalVariable(name: "__pyx_t_1", scope: !6587, file: !21, line: 3271, type: !28)
!6611 = !DILocalVariable(name: "__pyx_t_2", scope: !6587, file: !21, line: 3272, type: !34)
!6612 = !DILocalVariable(name: "__pyx_t_3", scope: !6587, file: !21, line: 3273, type: !34)
!6613 = !DILocalVariable(name: "__pyx_t_4", scope: !6587, file: !21, line: 3274, type: !7)
!6614 = !DILocalVariable(name: "__pyx_t_5", scope: !6587, file: !21, line: 3275, type: !28)
!6615 = !DILocalVariable(name: "__pyx_t_6", scope: !6587, file: !21, line: 3276, type: !28)
!6616 = !DILocalVariable(name: "__pyx_t_7", scope: !6587, file: !21, line: 3277, type: !7)
!6617 = !DILocalVariable(name: "__pyx_t_8", scope: !6587, file: !21, line: 3278, type: !28)
!6618 = !DILocalVariable(name: "__pyx_t_9", scope: !6587, file: !21, line: 3279, type: !83)
!6619 = !DILocalVariable(name: "__pyx_t_10", scope: !6587, file: !21, line: 3280, type: !34)
!6620 = !DILocalVariable(name: "__pyx_t_11", scope: !6587, file: !21, line: 3281, type: !34)
!6621 = !DILocalVariable(name: "__pyx_t_12", scope: !6587, file: !21, line: 3282, type: !28)
!6622 = !DILocalVariable(name: "__pyx_t_13", scope: !6587, file: !21, line: 3283, type: !7)
!6623 = !DILocalVariable(name: "__pyx_t_14", scope: !6587, file: !21, line: 3284, type: !7)
!6624 = !DILocalVariable(name: "__pyx_t_15", scope: !6587, file: !21, line: 3285, type: !28)
!6625 = !DILocalVariable(name: "__pyx_lineno", scope: !6587, file: !21, line: 3286, type: !7)
!6626 = !DILocalVariable(name: "__pyx_filename", scope: !6587, file: !21, line: 3287, type: !54)
!6627 = !DILocalVariable(name: "__pyx_clineno", scope: !6587, file: !21, line: 3288, type: !7)
!6628 = !DILocalVariable(name: "tmp", scope: !6629, file: !21, line: 3343, type: !28)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3343, column: 5)
!6630 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3337, column: 13)
!6631 = !DILocalVariable(name: "tmp", scope: !6632, file: !21, line: 3345, type: !28)
!6632 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3345, column: 5)
!6633 = !DILocalVariable(name: "tmp", scope: !6634, file: !21, line: 3361, type: !28)
!6634 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3361, column: 5)
!6635 = !DILocalVariable(name: "function", scope: !6636, file: !21, line: 3379, type: !28)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !21, line: 3378, column: 30)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !21, line: 3378, column: 11)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !21, line: 3376, column: 44)
!6639 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3376, column: 9)
!6640 = !DILocalVariable(name: "tmp", scope: !6641, file: !21, line: 3382, type: !28)
!6641 = distinct !DILexicalBlock(scope: !6636, file: !21, line: 3382, column: 9)
!6642 = !DILocalVariable(name: "__pyx_callargs", scope: !6643, file: !21, line: 3388, type: !6644)
!6643 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3387, column: 5)
!6644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 192, elements: !721)
!6645 = !DILocalVariable(name: "__pyx_temp", scope: !6646, file: !21, line: 3414, type: !34)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3413, column: 5)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !21, line: 3412, column: 12)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !21, line: 3412, column: 3)
!6649 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3412, column: 3)
!6650 = !DILocalVariable(name: "tmp", scope: !6651, file: !21, line: 3426, type: !28)
!6651 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3426, column: 5)
!6652 = !DILocalVariable(name: "tmp", scope: !6653, file: !21, line: 3438, type: !28)
!6653 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3438, column: 5)
!6654 = !DILocalVariable(name: "function", scope: !6655, file: !21, line: 3456, type: !28)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !21, line: 3455, column: 30)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !21, line: 3455, column: 11)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !21, line: 3453, column: 44)
!6658 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3453, column: 9)
!6659 = !DILocalVariable(name: "tmp", scope: !6660, file: !21, line: 3459, type: !28)
!6660 = distinct !DILexicalBlock(scope: !6655, file: !21, line: 3459, column: 9)
!6661 = !DILocalVariable(name: "__pyx_callargs", scope: !6662, file: !21, line: 3465, type: !6663)
!6662 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3464, column: 5)
!6663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1011)
!6664 = !DILocalVariable(name: "__pyx_temp", scope: !6665, file: !21, line: 3486, type: !34)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !21, line: 3485, column: 11)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !21, line: 3484, column: 51)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !21, line: 3484, column: 13)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !21, line: 3483, column: 31)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !21, line: 3483, column: 11)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !21, line: 3482, column: 14)
!6671 = distinct !DILexicalBlock(scope: !6672, file: !21, line: 3482, column: 5)
!6672 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3482, column: 5)
!6673 = !DILocalVariable(name: "__pyx_temp", scope: !6674, file: !21, line: 3500, type: !34)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !21, line: 3499, column: 11)
!6675 = distinct !DILexicalBlock(scope: !6667, file: !21, line: 3498, column: 16)
!6676 = !DILocalVariable(name: "exc_type", scope: !6677, file: !21, line: 3516, type: !28)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !21, line: 3515, column: 35)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !21, line: 3515, column: 13)
!6679 = distinct !DILexicalBlock(scope: !6669, file: !21, line: 3513, column: 14)
!6680 = !DILocalVariable(name: "tmp", scope: !6681, file: !21, line: 3525, type: !28)
!6681 = distinct !DILexicalBlock(scope: !6670, file: !21, line: 3525, column: 7)
!6682 = !DILocalVariable(name: "tmp", scope: !6683, file: !21, line: 3554, type: !28)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3554, column: 9)
!6684 = distinct !DILexicalBlock(scope: !6670, file: !21, line: 3548, column: 17)
!6685 = !DILocalVariable(name: "tmp", scope: !6686, file: !21, line: 3556, type: !28)
!6686 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3556, column: 9)
!6687 = !DILabel(scope: !6684, name: "__pyx_L12_bool_binop_done", file: !21, line: 3574)
!6688 = !DILocalVariable(name: "tmp", scope: !6689, file: !21, line: 3632, type: !28)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3632, column: 7)
!6690 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3626, column: 15)
!6691 = !DILocalVariable(name: "tmp", scope: !6692, file: !21, line: 3634, type: !28)
!6692 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3634, column: 7)
!6693 = !DILocalVariable(name: "function", scope: !6694, file: !21, line: 3655, type: !28)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !21, line: 3654, column: 33)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !21, line: 3654, column: 13)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !21, line: 3652, column: 46)
!6697 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3652, column: 11)
!6698 = !DILocalVariable(name: "tmp", scope: !6699, file: !21, line: 3658, type: !28)
!6699 = distinct !DILexicalBlock(scope: !6694, file: !21, line: 3658, column: 11)
!6700 = !DILocalVariable(name: "__pyx_callargs", scope: !6701, file: !21, line: 3664, type: !6702)
!6701 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3663, column: 7)
!6702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !678)
!6703 = !DILocalVariable(name: "function", scope: !6704, file: !21, line: 3711, type: !28)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !21, line: 3710, column: 31)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !21, line: 3710, column: 11)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !21, line: 3708, column: 44)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !21, line: 3708, column: 9)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !21, line: 3694, column: 19)
!6709 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3694, column: 7)
!6710 = !DILocalVariable(name: "tmp", scope: !6711, file: !21, line: 3714, type: !28)
!6711 = distinct !DILexicalBlock(scope: !6704, file: !21, line: 3714, column: 9)
!6712 = !DILocalVariable(name: "__pyx_callargs", scope: !6713, file: !21, line: 3720, type: !6663)
!6713 = distinct !DILexicalBlock(scope: !6708, file: !21, line: 3719, column: 5)
!6714 = !DILocalVariable(name: "function", scope: !6715, file: !21, line: 3744, type: !28)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !21, line: 3743, column: 31)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !21, line: 3743, column: 11)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !21, line: 3741, column: 44)
!6718 = distinct !DILexicalBlock(scope: !6708, file: !21, line: 3741, column: 9)
!6719 = !DILocalVariable(name: "tmp", scope: !6720, file: !21, line: 3747, type: !28)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !21, line: 3747, column: 9)
!6721 = !DILocalVariable(name: "__pyx_callargs", scope: !6722, file: !21, line: 3753, type: !6663)
!6722 = distinct !DILexicalBlock(scope: !6708, file: !21, line: 3752, column: 5)
!6723 = !DILabel(scope: !6587, name: "__pyx_L1_error", file: !21, line: 3792)
!6724 = !DILabel(scope: !6587, name: "__pyx_L0", file: !21, line: 3801)
!6725 = !DILocation(line: 3258, column: 106, scope: !6587)
!6726 = !DILocation(line: 3258, column: 145, scope: !6587)
!6727 = !DILocation(line: 3258, column: 219, scope: !6587)
!6728 = !DILocation(line: 3259, column: 3, scope: !6587)
!6729 = !DILocation(line: 3259, column: 13, scope: !6587)
!6730 = !DILocation(line: 3260, column: 3, scope: !6587)
!6731 = !DILocation(line: 3260, column: 57, scope: !6587)
!6732 = !DILocation(line: 3261, column: 3, scope: !6587)
!6733 = !DILocation(line: 3261, column: 63, scope: !6587)
!6734 = !DILocation(line: 3262, column: 3, scope: !6587)
!6735 = !DILocation(line: 3262, column: 49, scope: !6587)
!6736 = !DILocation(line: 3263, column: 3, scope: !6587)
!6737 = !DILocation(line: 3263, column: 13, scope: !6587)
!6738 = !DILocation(line: 3264, column: 3, scope: !6587)
!6739 = !DILocation(line: 3264, column: 13, scope: !6587)
!6740 = !DILocation(line: 3265, column: 3, scope: !6587)
!6741 = !DILocation(line: 3265, column: 13, scope: !6587)
!6742 = !DILocation(line: 3266, column: 3, scope: !6587)
!6743 = !DILocation(line: 3266, column: 13, scope: !6587)
!6744 = !DILocation(line: 3267, column: 3, scope: !6587)
!6745 = !DILocation(line: 3267, column: 13, scope: !6587)
!6746 = !DILocation(line: 3268, column: 3, scope: !6587)
!6747 = !DILocation(line: 3268, column: 13, scope: !6587)
!6748 = !DILocation(line: 3269, column: 3, scope: !6587)
!6749 = !DILocation(line: 3269, column: 13, scope: !6587)
!6750 = !DILocation(line: 3271, column: 3, scope: !6587)
!6751 = !DILocation(line: 3271, column: 13, scope: !6587)
!6752 = !DILocation(line: 3272, column: 3, scope: !6587)
!6753 = !DILocation(line: 3272, column: 14, scope: !6587)
!6754 = !DILocation(line: 3273, column: 3, scope: !6587)
!6755 = !DILocation(line: 3273, column: 14, scope: !6587)
!6756 = !DILocation(line: 3274, column: 3, scope: !6587)
!6757 = !DILocation(line: 3274, column: 7, scope: !6587)
!6758 = !DILocation(line: 3275, column: 3, scope: !6587)
!6759 = !DILocation(line: 3275, column: 13, scope: !6587)
!6760 = !DILocation(line: 3276, column: 3, scope: !6587)
!6761 = !DILocation(line: 3276, column: 13, scope: !6587)
!6762 = !DILocation(line: 3277, column: 3, scope: !6587)
!6763 = !DILocation(line: 3277, column: 7, scope: !6587)
!6764 = !DILocation(line: 3278, column: 3, scope: !6587)
!6765 = !DILocation(line: 3278, column: 13, scope: !6587)
!6766 = !DILocation(line: 3279, column: 3, scope: !6587)
!6767 = !DILocation(line: 3279, column: 15, scope: !6587)
!6768 = !DILocation(line: 3280, column: 3, scope: !6587)
!6769 = !DILocation(line: 3280, column: 14, scope: !6587)
!6770 = !DILocation(line: 3281, column: 3, scope: !6587)
!6771 = !DILocation(line: 3281, column: 14, scope: !6587)
!6772 = !DILocation(line: 3282, column: 3, scope: !6587)
!6773 = !DILocation(line: 3282, column: 13, scope: !6587)
!6774 = !DILocation(line: 3283, column: 3, scope: !6587)
!6775 = !DILocation(line: 3283, column: 7, scope: !6587)
!6776 = !DILocation(line: 3284, column: 3, scope: !6587)
!6777 = !DILocation(line: 3284, column: 7, scope: !6587)
!6778 = !DILocation(line: 3285, column: 3, scope: !6587)
!6779 = !DILocation(line: 3285, column: 13, scope: !6587)
!6780 = !DILocation(line: 3286, column: 3, scope: !6587)
!6781 = !DILocation(line: 3286, column: 7, scope: !6587)
!6782 = !DILocation(line: 3287, column: 3, scope: !6587)
!6783 = !DILocation(line: 3287, column: 15, scope: !6587)
!6784 = !DILocation(line: 3288, column: 3, scope: !6587)
!6785 = !DILocation(line: 3288, column: 7, scope: !6587)
!6786 = !DILocation(line: 3290, column: 7, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3290, column: 7)
!6788 = !DILocation(line: 3290, column: 7, scope: !6587)
!6789 = !DILocation(line: 3291, column: 9, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !21, line: 3291, column: 9)
!6791 = distinct !DILexicalBlock(scope: !6787, file: !21, line: 3290, column: 28)
!6792 = !DILocation(line: 3291, column: 30, scope: !6790)
!6793 = !{!6794, !1985, i64 0}
!6794 = !{!"__pyx_opt_args_6Cython_4Plex_3DFA_nfa_to_dfa", !1985, i64 0, !1900, i64 8}
!6795 = !DILocation(line: 3291, column: 38, scope: !6790)
!6796 = !DILocation(line: 3291, column: 9, scope: !6791)
!6797 = !DILocation(line: 3292, column: 23, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6790, file: !21, line: 3291, column: 43)
!6799 = !DILocation(line: 3292, column: 44, scope: !6798)
!6800 = !{!6794, !1900, i64 8}
!6801 = !DILocation(line: 3292, column: 21, scope: !6798)
!6802 = !DILocation(line: 3293, column: 5, scope: !6798)
!6803 = !DILocation(line: 3294, column: 3, scope: !6791)
!6804 = !DILocation(line: 3303, column: 53, scope: !6587)
!6805 = !DILocation(line: 3303, column: 15, scope: !6587)
!6806 = !DILocation(line: 3303, column: 13, scope: !6587)
!6807 = !DILocation(line: 3303, column: 108, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3303, column: 108)
!6809 = !DILocation(line: 3303, column: 108, scope: !6587)
!6810 = !DILocation(line: 3303, column: 130, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !21, line: 3303, column: 130)
!6812 = distinct !DILexicalBlock(scope: !6808, file: !21, line: 3303, column: 130)
!6813 = !DILocation(line: 3303, column: 130, scope: !6812)
!6814 = !DILocation(line: 3305, column: 82, scope: !6587)
!6815 = !DILocation(line: 3305, column: 23, scope: !6587)
!6816 = !DILocation(line: 3306, column: 13, scope: !6587)
!6817 = !DILocation(line: 3315, column: 54, scope: !6587)
!6818 = !DILocation(line: 3315, column: 109, scope: !6587)
!6819 = !DILocation(line: 3315, column: 15, scope: !6587)
!6820 = !DILocation(line: 3315, column: 13, scope: !6587)
!6821 = !DILocation(line: 3315, column: 136, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3315, column: 136)
!6823 = !DILocation(line: 3315, column: 136, scope: !6587)
!6824 = !DILocation(line: 3315, column: 158, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !21, line: 3315, column: 158)
!6826 = distinct !DILexicalBlock(scope: !6822, file: !21, line: 3315, column: 158)
!6827 = !DILocation(line: 3315, column: 158, scope: !6826)
!6828 = !DILocation(line: 3317, column: 72, scope: !6587)
!6829 = !DILocation(line: 3317, column: 21, scope: !6587)
!6830 = !DILocation(line: 3318, column: 13, scope: !6587)
!6831 = !DILocation(line: 3327, column: 13, scope: !6587)
!6832 = !DILocation(line: 3328, column: 7, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3328, column: 7)
!6834 = !{!6835, !1900, i64 32}
!6835 = !{!"__pyx_obj_6Cython_4Plex_8Machines_Machine", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32, !2424, i64 40}
!6836 = !DILocation(line: 3328, column: 7, scope: !6587)
!6837 = !DILocation(line: 3329, column: 18, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !21, line: 3328, column: 65)
!6839 = !DILocation(line: 3329, column: 5, scope: !6838)
!6840 = !DILocation(line: 3330, column: 5, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !21, line: 3330, column: 5)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !21, line: 3330, column: 5)
!6843 = !DILocation(line: 3330, column: 5, scope: !6842)
!6844 = !DILocation(line: 3332, column: 35, scope: !6587)
!6845 = !DILocation(line: 3332, column: 56, scope: !6587)
!6846 = !DILocation(line: 3332, column: 75, scope: !6587)
!6847 = !{!2020, !1900, i64 456}
!6848 = !DILocation(line: 3332, column: 15, scope: !6587)
!6849 = !DILocation(line: 3332, column: 13, scope: !6587)
!6850 = !DILocation(line: 3332, column: 125, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3332, column: 125)
!6852 = !DILocation(line: 3332, column: 125, scope: !6587)
!6853 = !DILocation(line: 3332, column: 147, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !21, line: 3332, column: 147)
!6855 = distinct !DILexicalBlock(scope: !6851, file: !21, line: 3332, column: 147)
!6856 = !DILocation(line: 3332, column: 147, scope: !6855)
!6857 = !DILocation(line: 3334, column: 3, scope: !6587)
!6858 = !DILocation(line: 3335, column: 15, scope: !6587)
!6859 = !DILocation(line: 3335, column: 13, scope: !6587)
!6860 = !DILocation(line: 3336, column: 13, scope: !6587)
!6861 = !DILocation(line: 3337, column: 3, scope: !6587)
!6862 = !DILocation(line: 3338, column: 38, scope: !6630)
!6863 = !DILocation(line: 3338, column: 49, scope: !6630)
!6864 = !DILocation(line: 3338, column: 102, scope: !6630)
!6865 = !DILocation(line: 3338, column: 17, scope: !6630)
!6866 = !DILocation(line: 3338, column: 15, scope: !6630)
!6867 = !DILocation(line: 3339, column: 9, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3339, column: 9)
!6869 = !DILocation(line: 3339, column: 9, scope: !6630)
!6870 = !DILocation(line: 3339, column: 35, scope: !6868)
!6871 = !DILocation(line: 3340, column: 9, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3340, column: 9)
!6873 = !DILocation(line: 3340, column: 9, scope: !6630)
!6874 = !DILocation(line: 3340, column: 36, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !21, line: 3340, column: 36)
!6876 = distinct !DILexicalBlock(scope: !6872, file: !21, line: 3340, column: 36)
!6877 = !DILocation(line: 3340, column: 36, scope: !6876)
!6878 = !DILocation(line: 3343, column: 5, scope: !6630)
!6879 = !DILocation(line: 3343, column: 5, scope: !6629)
!6880 = !DILocation(line: 3344, column: 15, scope: !6630)
!6881 = !DILocation(line: 3345, column: 5, scope: !6630)
!6882 = !DILocation(line: 3345, column: 5, scope: !6632)
!6883 = !DILocation(line: 3346, column: 15, scope: !6630)
!6884 = !DILocation(line: 3355, column: 11, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3355, column: 9)
!6886 = !DILocation(line: 3355, column: 9, scope: !6630)
!6887 = !DILocation(line: 3355, column: 141, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !21, line: 3355, column: 141)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !21, line: 3355, column: 141)
!6890 = !DILocation(line: 3355, column: 141, scope: !6889)
!6891 = !DILocation(line: 3356, column: 110, scope: !6630)
!6892 = !DILocation(line: 3356, column: 17, scope: !6630)
!6893 = !DILocation(line: 3356, column: 15, scope: !6630)
!6894 = !DILocation(line: 3356, column: 135, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3356, column: 135)
!6896 = !DILocation(line: 3356, column: 135, scope: !6630)
!6897 = !DILocation(line: 3356, column: 157, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !21, line: 3356, column: 157)
!6899 = distinct !DILexicalBlock(scope: !6895, file: !21, line: 3356, column: 157)
!6900 = !DILocation(line: 3356, column: 157, scope: !6899)
!6901 = !DILocation(line: 3358, column: 65, scope: !6630)
!6902 = !DILocation(line: 3358, column: 96, scope: !6630)
!6903 = !DILocation(line: 3358, column: 17, scope: !6630)
!6904 = !DILocation(line: 3358, column: 15, scope: !6630)
!6905 = !DILocation(line: 3358, column: 113, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3358, column: 113)
!6907 = !DILocation(line: 3358, column: 113, scope: !6630)
!6908 = !DILocation(line: 3358, column: 135, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !21, line: 3358, column: 135)
!6910 = distinct !DILexicalBlock(scope: !6906, file: !21, line: 3358, column: 135)
!6911 = !DILocation(line: 3358, column: 135, scope: !6910)
!6912 = !DILocation(line: 3360, column: 5, scope: !6630)
!6913 = !DILocation(line: 3360, column: 40, scope: !6630)
!6914 = !DILocation(line: 3361, column: 5, scope: !6630)
!6915 = !DILocation(line: 3361, column: 5, scope: !6634)
!6916 = !DILocation(line: 3362, column: 15, scope: !6630)
!6917 = !DILocation(line: 3371, column: 56, scope: !6630)
!6918 = !DILocation(line: 3371, column: 78, scope: !6630)
!6919 = !{!2020, !1900, i64 472}
!6920 = !DILocation(line: 3371, column: 17, scope: !6630)
!6921 = !DILocation(line: 3371, column: 15, scope: !6630)
!6922 = !DILocation(line: 3371, column: 113, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6630, file: !21, line: 3371, column: 113)
!6924 = !DILocation(line: 3371, column: 113, scope: !6630)
!6925 = !DILocation(line: 3371, column: 135, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !21, line: 3371, column: 135)
!6927 = distinct !DILexicalBlock(scope: !6923, file: !21, line: 3371, column: 135)
!6928 = !DILocation(line: 3371, column: 135, scope: !6927)
!6929 = !DILocation(line: 3373, column: 15, scope: !6630)
!6930 = !DILocation(line: 3374, column: 15, scope: !6630)
!6931 = !DILocation(line: 3376, column: 9, scope: !6639)
!6932 = !DILocation(line: 3376, column: 9, scope: !6630)
!6933 = !DILocation(line: 3377, column: 19, scope: !6638)
!6934 = !{!6935, !1900, i64 24}
!6935 = !{!"", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32, !1900, i64 40}
!6936 = !DILocation(line: 3377, column: 17, scope: !6638)
!6937 = !DILocation(line: 3378, column: 11, scope: !6637)
!6938 = !DILocation(line: 3378, column: 11, scope: !6638)
!6939 = !DILocation(line: 3379, column: 9, scope: !6636)
!6940 = !DILocation(line: 3379, column: 19, scope: !6636)
!6941 = !DILocation(line: 3379, column: 30, scope: !6636)
!6942 = !{!6935, !1900, i64 16}
!6943 = !DILocation(line: 3380, column: 9, scope: !6636)
!6944 = !DILocation(line: 3381, column: 9, scope: !6636)
!6945 = !DILocation(line: 3382, column: 9, scope: !6636)
!6946 = !DILocation(line: 3382, column: 9, scope: !6641)
!6947 = !DILocation(line: 3383, column: 19, scope: !6636)
!6948 = !DILocation(line: 3384, column: 7, scope: !6637)
!6949 = !DILocation(line: 3384, column: 7, scope: !6636)
!6950 = !DILocation(line: 3385, column: 5, scope: !6638)
!6951 = !DILocation(line: 3388, column: 7, scope: !6643)
!6952 = !DILocation(line: 3388, column: 17, scope: !6643)
!6953 = !DILocation(line: 3388, column: 37, scope: !6643)
!6954 = !DILocation(line: 3388, column: 38, scope: !6643)
!6955 = !DILocation(line: 3388, column: 49, scope: !6643)
!6956 = !DILocation(line: 3388, column: 62, scope: !6643)
!6957 = !DILocation(line: 3389, column: 19, scope: !6643)
!6958 = !DILocation(line: 3389, column: 17, scope: !6643)
!6959 = !DILocation(line: 3390, column: 7, scope: !6643)
!6960 = !DILocation(line: 3390, column: 43, scope: !6643)
!6961 = !DILocation(line: 3391, column: 11, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6643, file: !21, line: 3391, column: 11)
!6963 = !DILocation(line: 3391, column: 11, scope: !6643)
!6964 = !DILocation(line: 3391, column: 33, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !21, line: 3391, column: 33)
!6966 = distinct !DILexicalBlock(scope: !6962, file: !21, line: 3391, column: 33)
!6967 = !DILocation(line: 3391, column: 33, scope: !6966)
!6968 = !DILocation(line: 3393, column: 7, scope: !6643)
!6969 = !DILocation(line: 3393, column: 42, scope: !6643)
!6970 = !DILocation(line: 3394, column: 5, scope: !6630)
!6971 = !DILocation(line: 3395, column: 5, scope: !6630)
!6972 = !DILocation(line: 3395, column: 40, scope: !6630)
!6973 = distinct !{!6973, !6861, !6974}
!6974 = !DILocation(line: 3396, column: 3, scope: !6587)
!6975 = !DILocation(line: 3397, column: 3, scope: !6587)
!6976 = !DILocation(line: 3397, column: 38, scope: !6587)
!6977 = !DILocation(line: 3406, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3406, column: 7)
!6979 = !{!6980, !1900, i64 32}
!6980 = !{!"__pyx_obj_6Cython_4Plex_8Machines_FastMachine", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32, !2424, i64 40}
!6981 = !DILocation(line: 3406, column: 7, scope: !6587)
!6982 = !DILocation(line: 3407, column: 21, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !21, line: 3406, column: 57)
!6984 = !DILocation(line: 3407, column: 5, scope: !6983)
!6985 = !DILocation(line: 3408, column: 5, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !21, line: 3408, column: 5)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !21, line: 3408, column: 5)
!6988 = !DILocation(line: 3408, column: 5, scope: !6987)
!6989 = !DILocation(line: 3410, column: 15, scope: !6587)
!6990 = !DILocation(line: 3410, column: 36, scope: !6587)
!6991 = !DILocation(line: 3410, column: 13, scope: !6587)
!6992 = !DILocation(line: 3410, column: 44, scope: !6587)
!6993 = !DILocation(line: 3411, column: 13, scope: !6587)
!6994 = !DILocation(line: 3412, column: 3, scope: !6587)
!6995 = !DILocation(line: 3414, column: 7, scope: !6646)
!6996 = !DILocation(line: 3414, column: 18, scope: !6646)
!6997 = !DILocation(line: 3414, column: 31, scope: !6646)
!6998 = !DILocation(line: 3418, column: 11, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6646, file: !21, line: 3418, column: 11)
!7000 = !DILocation(line: 3418, column: 24, scope: !6999)
!7001 = !DILocation(line: 3418, column: 21, scope: !6999)
!7002 = !DILocation(line: 3418, column: 11, scope: !6646)
!7003 = !DILocation(line: 3418, column: 36, scope: !6999)
!7004 = !DILocation(line: 3419, column: 5, scope: !6647)
!7005 = !DILocation(line: 3421, column: 17, scope: !6647)
!7006 = !DILocation(line: 3421, column: 15, scope: !6647)
!7007 = !DILocation(line: 3421, column: 56, scope: !6647)
!7008 = !DILocation(line: 3421, column: 90, scope: !6647)
!7009 = !DILocation(line: 3426, column: 5, scope: !6647)
!7010 = !DILocation(line: 3426, column: 5, scope: !6651)
!7011 = !DILocation(line: 3427, column: 15, scope: !6647)
!7012 = !DILocation(line: 3436, column: 55, scope: !6647)
!7013 = !DILocation(line: 3436, column: 17, scope: !6647)
!7014 = !DILocation(line: 3436, column: 15, scope: !6647)
!7015 = !DILocation(line: 3436, column: 116, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3436, column: 116)
!7017 = !DILocation(line: 3436, column: 116, scope: !6647)
!7018 = !DILocation(line: 3436, column: 138, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !21, line: 3436, column: 138)
!7020 = distinct !DILexicalBlock(scope: !7016, file: !21, line: 3436, column: 138)
!7021 = !DILocation(line: 3436, column: 138, scope: !7020)
!7022 = !DILocation(line: 3438, column: 5, scope: !6647)
!7023 = !DILocation(line: 3438, column: 5, scope: !6653)
!7024 = !DILocation(line: 3439, column: 15, scope: !6647)
!7025 = !DILocation(line: 3448, column: 56, scope: !6647)
!7026 = !DILocation(line: 3448, column: 76, scope: !6647)
!7027 = !DILocation(line: 3448, column: 17, scope: !6647)
!7028 = !DILocation(line: 3448, column: 15, scope: !6647)
!7029 = !DILocation(line: 3448, column: 103, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3448, column: 103)
!7031 = !DILocation(line: 3448, column: 103, scope: !6647)
!7032 = !DILocation(line: 3448, column: 125, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !21, line: 3448, column: 125)
!7034 = distinct !DILexicalBlock(scope: !7030, file: !21, line: 3448, column: 125)
!7035 = !DILocation(line: 3448, column: 125, scope: !7034)
!7036 = !DILocation(line: 3450, column: 15, scope: !6647)
!7037 = !DILocation(line: 3451, column: 15, scope: !6647)
!7038 = !DILocation(line: 3453, column: 9, scope: !6658)
!7039 = !DILocation(line: 3453, column: 9, scope: !6647)
!7040 = !DILocation(line: 3454, column: 19, scope: !6657)
!7041 = !DILocation(line: 3454, column: 17, scope: !6657)
!7042 = !DILocation(line: 3455, column: 11, scope: !6656)
!7043 = !DILocation(line: 3455, column: 11, scope: !6657)
!7044 = !DILocation(line: 3456, column: 9, scope: !6655)
!7045 = !DILocation(line: 3456, column: 19, scope: !6655)
!7046 = !DILocation(line: 3456, column: 30, scope: !6655)
!7047 = !DILocation(line: 3457, column: 9, scope: !6655)
!7048 = !DILocation(line: 3458, column: 9, scope: !6655)
!7049 = !DILocation(line: 3459, column: 9, scope: !6655)
!7050 = !DILocation(line: 3459, column: 9, scope: !6660)
!7051 = !DILocation(line: 3460, column: 19, scope: !6655)
!7052 = !DILocation(line: 3461, column: 7, scope: !6656)
!7053 = !DILocation(line: 3461, column: 7, scope: !6655)
!7054 = !DILocation(line: 3462, column: 5, scope: !6657)
!7055 = !DILocation(line: 3465, column: 7, scope: !6662)
!7056 = !DILocation(line: 3465, column: 17, scope: !6662)
!7057 = !DILocation(line: 3465, column: 37, scope: !6662)
!7058 = !DILocation(line: 3465, column: 38, scope: !6662)
!7059 = !DILocation(line: 3465, column: 49, scope: !6662)
!7060 = !DILocation(line: 3466, column: 19, scope: !6662)
!7061 = !DILocation(line: 3466, column: 17, scope: !6662)
!7062 = !DILocation(line: 3467, column: 7, scope: !6662)
!7063 = !DILocation(line: 3467, column: 43, scope: !6662)
!7064 = !DILocation(line: 3468, column: 11, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !6662, file: !21, line: 3468, column: 11)
!7066 = !DILocation(line: 3468, column: 11, scope: !6662)
!7067 = !DILocation(line: 3468, column: 33, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !21, line: 3468, column: 33)
!7069 = distinct !DILexicalBlock(scope: !7065, file: !21, line: 3468, column: 33)
!7070 = !DILocation(line: 3468, column: 33, scope: !7069)
!7071 = !DILocation(line: 3470, column: 7, scope: !6662)
!7072 = !DILocation(line: 3470, column: 42, scope: !6662)
!7073 = !DILocation(line: 3471, column: 5, scope: !6647)
!7074 = !DILocation(line: 3472, column: 9, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3472, column: 9)
!7076 = !DILocation(line: 3472, column: 46, scope: !7075)
!7077 = !DILocation(line: 3472, column: 49, scope: !7075)
!7078 = !DILocation(line: 3472, column: 9, scope: !6647)
!7079 = !DILocation(line: 3473, column: 19, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !21, line: 3472, column: 80)
!7081 = !DILocation(line: 3473, column: 17, scope: !7080)
!7082 = !DILocation(line: 3473, column: 30, scope: !7080)
!7083 = !DILocation(line: 3474, column: 17, scope: !7080)
!7084 = !DILocation(line: 3475, column: 17, scope: !7080)
!7085 = !DILocation(line: 3476, column: 5, scope: !7080)
!7086 = !DILocation(line: 3477, column: 17, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7075, file: !21, line: 3476, column: 12)
!7088 = !DILocation(line: 3477, column: 52, scope: !7087)
!7089 = !DILocation(line: 3477, column: 35, scope: !7087)
!7090 = !DILocation(line: 3477, column: 33, scope: !7087)
!7091 = !DILocation(line: 3477, column: 68, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7087, file: !21, line: 3477, column: 68)
!7093 = !DILocation(line: 3477, column: 68, scope: !7087)
!7094 = !DILocation(line: 3477, column: 90, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !21, line: 3477, column: 90)
!7096 = distinct !DILexicalBlock(scope: !7092, file: !21, line: 3477, column: 90)
!7097 = !DILocation(line: 3477, column: 90, scope: !7096)
!7098 = !DILocation(line: 3479, column: 19, scope: !7087)
!7099 = !{!2421, !1900, i64 224}
!7100 = !DILocation(line: 3479, column: 17, scope: !7087)
!7101 = !DILocation(line: 3479, column: 66, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7087, file: !21, line: 3479, column: 66)
!7103 = !DILocation(line: 3479, column: 66, scope: !7087)
!7104 = !DILocation(line: 3479, column: 88, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !21, line: 3479, column: 88)
!7106 = distinct !DILexicalBlock(scope: !7102, file: !21, line: 3479, column: 88)
!7107 = !DILocation(line: 3479, column: 88, scope: !7106)
!7108 = !DILocation(line: 3481, column: 5, scope: !6647)
!7109 = !DILocation(line: 3481, column: 40, scope: !6647)
!7110 = !DILocation(line: 3482, column: 5, scope: !6647)
!7111 = !DILocation(line: 3483, column: 11, scope: !6669)
!7112 = !DILocation(line: 3483, column: 11, scope: !6670)
!7113 = !DILocation(line: 3484, column: 13, scope: !6667)
!7114 = !DILocation(line: 3484, column: 13, scope: !6668)
!7115 = !DILocation(line: 3486, column: 13, scope: !6665)
!7116 = !DILocation(line: 3486, column: 24, scope: !6665)
!7117 = !DILocation(line: 3486, column: 37, scope: !6665)
!7118 = !DILocation(line: 3490, column: 17, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !6665, file: !21, line: 3490, column: 17)
!7120 = !DILocation(line: 3490, column: 30, scope: !7119)
!7121 = !DILocation(line: 3490, column: 27, scope: !7119)
!7122 = !DILocation(line: 3490, column: 17, scope: !6665)
!7123 = !DILocation(line: 3490, column: 42, scope: !7119)
!7124 = !DILocation(line: 3491, column: 11, scope: !6666)
!7125 = !DILocation(line: 3493, column: 23, scope: !6666)
!7126 = !DILocation(line: 3493, column: 21, scope: !6666)
!7127 = !DILocation(line: 3493, column: 62, scope: !6666)
!7128 = !DILocation(line: 3493, column: 96, scope: !6666)
!7129 = !DILocation(line: 3498, column: 9, scope: !6666)
!7130 = !DILocation(line: 3500, column: 13, scope: !6674)
!7131 = !DILocation(line: 3500, column: 24, scope: !6674)
!7132 = !DILocation(line: 3500, column: 37, scope: !6674)
!7133 = !DILocation(line: 3504, column: 17, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !6674, file: !21, line: 3504, column: 17)
!7135 = !DILocation(line: 3504, column: 30, scope: !7134)
!7136 = !DILocation(line: 3504, column: 27, scope: !7134)
!7137 = !DILocation(line: 3504, column: 17, scope: !6674)
!7138 = !DILocation(line: 3504, column: 42, scope: !7134)
!7139 = !DILocation(line: 3505, column: 11, scope: !6675)
!7140 = !DILocation(line: 3507, column: 23, scope: !6675)
!7141 = !DILocation(line: 3507, column: 21, scope: !6675)
!7142 = !DILocation(line: 3507, column: 63, scope: !6675)
!7143 = !DILocation(line: 3507, column: 97, scope: !6675)
!7144 = !DILocation(line: 3513, column: 7, scope: !6668)
!7145 = !DILocation(line: 3514, column: 21, scope: !6679)
!7146 = !DILocation(line: 3514, column: 31, scope: !6679)
!7147 = !DILocation(line: 3514, column: 19, scope: !6679)
!7148 = !DILocation(line: 3515, column: 13, scope: !6678)
!7149 = !DILocation(line: 3515, column: 13, scope: !6679)
!7150 = !DILocation(line: 3516, column: 11, scope: !6677)
!7151 = !DILocation(line: 3516, column: 21, scope: !6677)
!7152 = !DILocation(line: 3516, column: 32, scope: !6677)
!7153 = !DILocation(line: 3517, column: 15, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !6677, file: !21, line: 3517, column: 15)
!7155 = !DILocation(line: 3517, column: 15, scope: !6677)
!7156 = !DILocation(line: 3518, column: 17, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !21, line: 3518, column: 17)
!7158 = distinct !DILexicalBlock(scope: !7154, file: !21, line: 3517, column: 25)
!7159 = !DILocation(line: 3518, column: 17, scope: !7158)
!7160 = !DILocation(line: 3518, column: 91, scope: !7157)
!7161 = !DILocation(line: 3519, column: 18, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !21, line: 3519, column: 18)
!7163 = distinct !DILexicalBlock(scope: !7157, file: !21, line: 3519, column: 18)
!7164 = !DILocation(line: 3519, column: 18, scope: !7163)
!7165 = !DILocation(line: 3520, column: 11, scope: !7158)
!7166 = !DILocation(line: 3521, column: 11, scope: !6677)
!7167 = !DILocation(line: 3522, column: 9, scope: !6678)
!7168 = !DILocation(line: 3525, column: 7, scope: !6670)
!7169 = !DILocation(line: 3525, column: 7, scope: !6681)
!7170 = !DILocation(line: 3526, column: 17, scope: !6670)
!7171 = !DILocation(line: 3535, column: 18, scope: !6670)
!7172 = !DILocation(line: 3536, column: 45, scope: !6670)
!7173 = !DILocation(line: 3536, column: 64, scope: !6670)
!7174 = !{!2020, !1900, i64 688}
!7175 = !DILocation(line: 3536, column: 19, scope: !6670)
!7176 = !DILocation(line: 3536, column: 17, scope: !6670)
!7177 = !DILocation(line: 3536, column: 92, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !6670, file: !21, line: 3536, column: 92)
!7179 = !DILocation(line: 3536, column: 92, scope: !6670)
!7180 = !DILocation(line: 3536, column: 114, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !21, line: 3536, column: 114)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !21, line: 3536, column: 114)
!7183 = !DILocation(line: 3536, column: 114, scope: !7182)
!7184 = !DILocation(line: 3538, column: 11, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !6670, file: !21, line: 3538, column: 11)
!7186 = !DILocation(line: 3538, column: 11, scope: !6670)
!7187 = !DILocation(line: 3539, column: 22, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7185, file: !21, line: 3538, column: 43)
!7189 = !DILocation(line: 3539, column: 9, scope: !7188)
!7190 = !DILocation(line: 3540, column: 9, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !21, line: 3540, column: 9)
!7192 = distinct !DILexicalBlock(scope: !7188, file: !21, line: 3540, column: 9)
!7193 = !DILocation(line: 3540, column: 9, scope: !7192)
!7194 = !DILocation(line: 3542, column: 40, scope: !6670)
!7195 = !DILocation(line: 3542, column: 54, scope: !6670)
!7196 = !DILocation(line: 3542, column: 20, scope: !6670)
!7197 = !DILocation(line: 3542, column: 18, scope: !6670)
!7198 = !DILocation(line: 3542, column: 105, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !6670, file: !21, line: 3542, column: 105)
!7200 = !DILocation(line: 3542, column: 105, scope: !6670)
!7201 = !DILocation(line: 3542, column: 128, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !21, line: 3542, column: 128)
!7203 = distinct !DILexicalBlock(scope: !7199, file: !21, line: 3542, column: 128)
!7204 = !DILocation(line: 3542, column: 128, scope: !7203)
!7205 = !DILocation(line: 3544, column: 7, scope: !6670)
!7206 = !DILocation(line: 3544, column: 42, scope: !6670)
!7207 = !DILocation(line: 3545, column: 7, scope: !6670)
!7208 = !DILocation(line: 3546, column: 19, scope: !6670)
!7209 = !DILocation(line: 3546, column: 17, scope: !6670)
!7210 = !DILocation(line: 3547, column: 18, scope: !6670)
!7211 = !DILocation(line: 3548, column: 7, scope: !6670)
!7212 = !DILocation(line: 3549, column: 42, scope: !6684)
!7213 = !DILocation(line: 3549, column: 53, scope: !6684)
!7214 = !DILocation(line: 3549, column: 109, scope: !6684)
!7215 = !DILocation(line: 3549, column: 21, scope: !6684)
!7216 = !DILocation(line: 3549, column: 19, scope: !6684)
!7217 = !DILocation(line: 3550, column: 13, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3550, column: 13)
!7219 = !DILocation(line: 3550, column: 13, scope: !6684)
!7220 = !DILocation(line: 3550, column: 39, scope: !7218)
!7221 = !DILocation(line: 3551, column: 13, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3551, column: 13)
!7223 = !DILocation(line: 3551, column: 13, scope: !6684)
!7224 = !DILocation(line: 3551, column: 40, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !21, line: 3551, column: 40)
!7226 = distinct !DILexicalBlock(scope: !7222, file: !21, line: 3551, column: 40)
!7227 = !DILocation(line: 3551, column: 40, scope: !7226)
!7228 = !DILocation(line: 3554, column: 9, scope: !6684)
!7229 = !DILocation(line: 3554, column: 9, scope: !6683)
!7230 = !DILocation(line: 3555, column: 20, scope: !6684)
!7231 = !DILocation(line: 3556, column: 9, scope: !6684)
!7232 = !DILocation(line: 3556, column: 9, scope: !6686)
!7233 = !DILocation(line: 3557, column: 19, scope: !6684)
!7234 = !DILocation(line: 3566, column: 44, scope: !6684)
!7235 = !DILocation(line: 3566, column: 22, scope: !6684)
!7236 = !DILocation(line: 3566, column: 20, scope: !6684)
!7237 = !DILocation(line: 3566, column: 64, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3566, column: 64)
!7239 = !DILocation(line: 3566, column: 64, scope: !6684)
!7240 = !DILocation(line: 3566, column: 92, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !21, line: 3566, column: 92)
!7242 = distinct !DILexicalBlock(scope: !7238, file: !21, line: 3566, column: 92)
!7243 = !DILocation(line: 3566, column: 92, scope: !7242)
!7244 = !DILocation(line: 3567, column: 13, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3567, column: 13)
!7246 = !DILocation(line: 3567, column: 13, scope: !6684)
!7247 = !DILocation(line: 3568, column: 9, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7245, file: !21, line: 3567, column: 25)
!7249 = !DILocation(line: 3569, column: 24, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7245, file: !21, line: 3568, column: 16)
!7251 = !DILocation(line: 3569, column: 22, scope: !7250)
!7252 = !DILocation(line: 3570, column: 11, scope: !7250)
!7253 = !DILocation(line: 3572, column: 44, scope: !6684)
!7254 = !DILocation(line: 3572, column: 22, scope: !6684)
!7255 = !DILocation(line: 3572, column: 20, scope: !6684)
!7256 = !DILocation(line: 3572, column: 76, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3572, column: 76)
!7258 = !DILocation(line: 3572, column: 76, scope: !6684)
!7259 = !DILocation(line: 3572, column: 104, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !21, line: 3572, column: 104)
!7261 = distinct !DILexicalBlock(scope: !7257, file: !21, line: 3572, column: 104)
!7262 = !DILocation(line: 3572, column: 104, scope: !7261)
!7263 = !DILocation(line: 3573, column: 22, scope: !6684)
!7264 = !DILocation(line: 3573, column: 20, scope: !6684)
!7265 = !DILocation(line: 3573, column: 9, scope: !6684)
!7266 = !DILocation(line: 3574, column: 9, scope: !6684)
!7267 = !DILocation(line: 3575, column: 13, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !6684, file: !21, line: 3575, column: 13)
!7269 = !DILocation(line: 3575, column: 13, scope: !6684)
!7270 = !DILocation(line: 3584, column: 17, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7272, file: !21, line: 3584, column: 15)
!7272 = distinct !DILexicalBlock(scope: !7268, file: !21, line: 3575, column: 25)
!7273 = !DILocation(line: 3584, column: 69, scope: !7271)
!7274 = !DILocation(line: 3584, column: 73, scope: !7271)
!7275 = !DILocation(line: 3584, column: 100, scope: !7271)
!7276 = !DILocation(line: 3584, column: 112, scope: !7271)
!7277 = !DILocation(line: 3584, column: 154, scope: !7271)
!7278 = !DILocation(line: 3584, column: 115, scope: !7271)
!7279 = !DILocation(line: 3584, column: 15, scope: !7272)
!7280 = !DILocation(line: 3584, column: 183, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !21, line: 3584, column: 183)
!7282 = distinct !DILexicalBlock(scope: !7271, file: !21, line: 3584, column: 183)
!7283 = !DILocation(line: 3584, column: 183, scope: !7282)
!7284 = !DILocation(line: 3585, column: 82, scope: !7272)
!7285 = !DILocation(line: 3585, column: 23, scope: !7272)
!7286 = !DILocation(line: 3585, column: 21, scope: !7272)
!7287 = !DILocation(line: 3585, column: 115, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7272, file: !21, line: 3585, column: 115)
!7289 = !DILocation(line: 3585, column: 115, scope: !7272)
!7290 = !DILocation(line: 3585, column: 137, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !21, line: 3585, column: 137)
!7292 = distinct !DILexicalBlock(scope: !7288, file: !21, line: 3585, column: 137)
!7293 = !DILocation(line: 3585, column: 137, scope: !7292)
!7294 = !DILocation(line: 3587, column: 94, scope: !7272)
!7295 = !DILocation(line: 3587, column: 115, scope: !7272)
!7296 = !{!7297, !1900, i64 16}
!7297 = !{!"__pyx_obj_6Cython_4Plex_11Transitions_TransitionMap", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32}
!7298 = !DILocation(line: 3587, column: 128, scope: !7272)
!7299 = !{!7300, !1900, i64 8}
!7300 = !{!"__pyx_vtabstruct_6Cython_4Plex_11Transitions_TransitionMap", !1900, i64 0, !1900, i64 8, !1900, i64 16, !1900, i64 24, !1900, i64 32}
!7301 = !DILocation(line: 3587, column: 136, scope: !7272)
!7302 = !DILocation(line: 3587, column: 157, scope: !7272)
!7303 = !DILocation(line: 3587, column: 172, scope: !7272)
!7304 = !DILocation(line: 3587, column: 24, scope: !7272)
!7305 = !DILocation(line: 3587, column: 22, scope: !7272)
!7306 = !DILocation(line: 3587, column: 191, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7272, file: !21, line: 3587, column: 191)
!7308 = !DILocation(line: 3587, column: 191, scope: !7272)
!7309 = !DILocation(line: 3587, column: 214, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !21, line: 3587, column: 214)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !21, line: 3587, column: 214)
!7312 = !DILocation(line: 3587, column: 214, scope: !7311)
!7313 = !DILocation(line: 3589, column: 11, scope: !7272)
!7314 = !DILocation(line: 3589, column: 46, scope: !7272)
!7315 = !DILocation(line: 3590, column: 11, scope: !7272)
!7316 = !DILocation(line: 3590, column: 48, scope: !7272)
!7317 = !DILocation(line: 3599, column: 9, scope: !7272)
!7318 = distinct !{!7318, !7211, !7319}
!7319 = !DILocation(line: 3600, column: 7, scope: !6670)
!7320 = !DILocation(line: 3601, column: 7, scope: !6670)
!7321 = !DILocation(line: 3601, column: 42, scope: !6670)
!7322 = !DILocation(line: 3482, column: 5, scope: !6671)
!7323 = distinct !{!7323, !7324, !7325}
!7324 = !DILocation(line: 3482, column: 5, scope: !6672)
!7325 = !DILocation(line: 3610, column: 5, scope: !6672)
!7326 = !DILocation(line: 3611, column: 5, scope: !6647)
!7327 = !DILocation(line: 3611, column: 40, scope: !6647)
!7328 = !DILocation(line: 3620, column: 15, scope: !6647)
!7329 = !DILocation(line: 3621, column: 50, scope: !6647)
!7330 = !DILocation(line: 3621, column: 75, scope: !6647)
!7331 = !DILocation(line: 3621, column: 17, scope: !6647)
!7332 = !DILocation(line: 3621, column: 15, scope: !6647)
!7333 = !DILocation(line: 3621, column: 126, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !6647, file: !21, line: 3621, column: 126)
!7335 = !DILocation(line: 3621, column: 126, scope: !6647)
!7336 = !DILocation(line: 3621, column: 148, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !21, line: 3621, column: 148)
!7338 = distinct !DILexicalBlock(scope: !7334, file: !21, line: 3621, column: 148)
!7339 = !DILocation(line: 3621, column: 148, scope: !7338)
!7340 = !DILocation(line: 3623, column: 5, scope: !6647)
!7341 = !DILocation(line: 3624, column: 17, scope: !6647)
!7342 = !DILocation(line: 3624, column: 15, scope: !6647)
!7343 = !DILocation(line: 3625, column: 15, scope: !6647)
!7344 = !DILocation(line: 3626, column: 5, scope: !6647)
!7345 = !DILocation(line: 3627, column: 40, scope: !6690)
!7346 = !DILocation(line: 3627, column: 51, scope: !6690)
!7347 = !DILocation(line: 3627, column: 106, scope: !6690)
!7348 = !DILocation(line: 3627, column: 19, scope: !6690)
!7349 = !DILocation(line: 3627, column: 17, scope: !6690)
!7350 = !DILocation(line: 3628, column: 11, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3628, column: 11)
!7352 = !DILocation(line: 3628, column: 11, scope: !6690)
!7353 = !DILocation(line: 3628, column: 37, scope: !7351)
!7354 = !DILocation(line: 3629, column: 11, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3629, column: 11)
!7356 = !DILocation(line: 3629, column: 11, scope: !6690)
!7357 = !DILocation(line: 3629, column: 38, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7359, file: !21, line: 3629, column: 38)
!7359 = distinct !DILexicalBlock(scope: !7355, file: !21, line: 3629, column: 38)
!7360 = !DILocation(line: 3629, column: 38, scope: !7359)
!7361 = !DILocation(line: 3632, column: 7, scope: !6690)
!7362 = !DILocation(line: 3632, column: 7, scope: !6689)
!7363 = !DILocation(line: 3633, column: 17, scope: !6690)
!7364 = !DILocation(line: 3634, column: 7, scope: !6690)
!7365 = !DILocation(line: 3634, column: 7, scope: !6692)
!7366 = !DILocation(line: 3635, column: 18, scope: !6690)
!7367 = !DILocation(line: 3644, column: 58, scope: !6690)
!7368 = !DILocation(line: 3644, column: 80, scope: !6690)
!7369 = !{!2020, !1900, i64 312}
!7370 = !DILocation(line: 3644, column: 19, scope: !6690)
!7371 = !DILocation(line: 3644, column: 17, scope: !6690)
!7372 = !DILocation(line: 3644, column: 112, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3644, column: 112)
!7374 = !DILocation(line: 3644, column: 112, scope: !6690)
!7375 = !DILocation(line: 3644, column: 134, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !21, line: 3644, column: 134)
!7377 = distinct !DILexicalBlock(scope: !7373, file: !21, line: 3644, column: 134)
!7378 = !DILocation(line: 3644, column: 134, scope: !7377)
!7379 = !DILocation(line: 3646, column: 13, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3646, column: 11)
!7381 = !DILocation(line: 3646, column: 58, scope: !7380)
!7382 = !DILocation(line: 3646, column: 62, scope: !7380)
!7383 = !DILocation(line: 3646, column: 82, scope: !7380)
!7384 = !DILocation(line: 3646, column: 94, scope: !7380)
!7385 = !DILocation(line: 3646, column: 136, scope: !7380)
!7386 = !DILocation(line: 3646, column: 97, scope: !7380)
!7387 = !DILocation(line: 3646, column: 11, scope: !6690)
!7388 = !DILocation(line: 3646, column: 158, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7390, file: !21, line: 3646, column: 158)
!7390 = distinct !DILexicalBlock(scope: !7380, file: !21, line: 3646, column: 158)
!7391 = !DILocation(line: 3646, column: 158, scope: !7390)
!7392 = !DILocation(line: 3647, column: 67, scope: !6690)
!7393 = !DILocation(line: 3647, column: 98, scope: !6690)
!7394 = !DILocation(line: 3647, column: 19, scope: !6690)
!7395 = !DILocation(line: 3647, column: 17, scope: !6690)
!7396 = !DILocation(line: 3647, column: 124, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !6690, file: !21, line: 3647, column: 124)
!7398 = !DILocation(line: 3647, column: 124, scope: !6690)
!7399 = !DILocation(line: 3647, column: 146, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !21, line: 3647, column: 146)
!7401 = distinct !DILexicalBlock(scope: !7397, file: !21, line: 3647, column: 146)
!7402 = !DILocation(line: 3647, column: 146, scope: !7401)
!7403 = !DILocation(line: 3649, column: 18, scope: !6690)
!7404 = !DILocation(line: 3650, column: 17, scope: !6690)
!7405 = !DILocation(line: 3652, column: 11, scope: !6697)
!7406 = !DILocation(line: 3652, column: 11, scope: !6690)
!7407 = !DILocation(line: 3653, column: 22, scope: !6696)
!7408 = !DILocation(line: 3653, column: 20, scope: !6696)
!7409 = !DILocation(line: 3654, column: 13, scope: !6695)
!7410 = !DILocation(line: 3654, column: 13, scope: !6696)
!7411 = !DILocation(line: 3655, column: 11, scope: !6694)
!7412 = !DILocation(line: 3655, column: 21, scope: !6694)
!7413 = !DILocation(line: 3655, column: 32, scope: !6694)
!7414 = !DILocation(line: 3656, column: 11, scope: !6694)
!7415 = !DILocation(line: 3657, column: 11, scope: !6694)
!7416 = !DILocation(line: 3658, column: 11, scope: !6694)
!7417 = !DILocation(line: 3658, column: 11, scope: !6699)
!7418 = !DILocation(line: 3659, column: 21, scope: !6694)
!7419 = !DILocation(line: 3660, column: 9, scope: !6695)
!7420 = !DILocation(line: 3660, column: 9, scope: !6694)
!7421 = !DILocation(line: 3661, column: 7, scope: !6696)
!7422 = !DILocation(line: 3664, column: 9, scope: !6701)
!7423 = !DILocation(line: 3664, column: 19, scope: !6701)
!7424 = !DILocation(line: 3664, column: 39, scope: !6701)
!7425 = !DILocation(line: 3664, column: 40, scope: !6701)
!7426 = !DILocation(line: 3664, column: 52, scope: !6701)
!7427 = !DILocation(line: 3664, column: 71, scope: !6701)
!7428 = !DILocation(line: 3664, column: 86, scope: !6701)
!7429 = !DILocation(line: 3665, column: 22, scope: !6701)
!7430 = !DILocation(line: 3665, column: 20, scope: !6701)
!7431 = !DILocation(line: 3666, column: 9, scope: !6701)
!7432 = !DILocation(line: 3666, column: 47, scope: !6701)
!7433 = !DILocation(line: 3667, column: 9, scope: !6701)
!7434 = !DILocation(line: 3667, column: 44, scope: !6701)
!7435 = !DILocation(line: 3668, column: 13, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !6701, file: !21, line: 3668, column: 13)
!7437 = !DILocation(line: 3668, column: 13, scope: !6701)
!7438 = !DILocation(line: 3668, column: 36, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !21, line: 3668, column: 36)
!7440 = distinct !DILexicalBlock(scope: !7436, file: !21, line: 3668, column: 36)
!7441 = !DILocation(line: 3668, column: 36, scope: !7440)
!7442 = !DILocation(line: 3670, column: 9, scope: !6701)
!7443 = !DILocation(line: 3670, column: 44, scope: !6701)
!7444 = !DILocation(line: 3671, column: 7, scope: !6690)
!7445 = !DILocation(line: 3672, column: 7, scope: !6690)
!7446 = !DILocation(line: 3672, column: 44, scope: !6690)
!7447 = distinct !{!7447, !7344, !7448}
!7448 = !DILocation(line: 3673, column: 5, scope: !6647)
!7449 = !DILocation(line: 3674, column: 5, scope: !6647)
!7450 = !DILocation(line: 3674, column: 40, scope: !6647)
!7451 = !DILocation(line: 3412, column: 3, scope: !6648)
!7452 = distinct !{!7452, !7453, !7454}
!7453 = !DILocation(line: 3412, column: 3, scope: !6649)
!7454 = !DILocation(line: 3683, column: 3, scope: !6649)
!7455 = !DILocation(line: 3684, column: 3, scope: !6587)
!7456 = !DILocation(line: 3684, column: 38, scope: !6587)
!7457 = !DILocation(line: 3693, column: 38, scope: !6587)
!7458 = !DILocation(line: 3693, column: 16, scope: !6587)
!7459 = !DILocation(line: 3693, column: 14, scope: !6587)
!7460 = !DILocation(line: 3693, column: 58, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !6587, file: !21, line: 3693, column: 58)
!7462 = !DILocation(line: 3693, column: 58, scope: !6587)
!7463 = !DILocation(line: 3693, column: 86, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !21, line: 3693, column: 86)
!7465 = distinct !DILexicalBlock(scope: !7461, file: !21, line: 3693, column: 86)
!7466 = !DILocation(line: 3693, column: 86, scope: !7465)
!7467 = !DILocation(line: 3694, column: 7, scope: !6709)
!7468 = !DILocation(line: 3694, column: 7, scope: !6587)
!7469 = !DILocation(line: 3703, column: 43, scope: !6708)
!7470 = !DILocation(line: 3703, column: 58, scope: !6708)
!7471 = !{!2020, !1900, i64 712}
!7472 = !DILocation(line: 3703, column: 17, scope: !6708)
!7473 = !DILocation(line: 3703, column: 15, scope: !6708)
!7474 = !DILocation(line: 3703, column: 80, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !6708, file: !21, line: 3703, column: 80)
!7476 = !DILocation(line: 3703, column: 80, scope: !6708)
!7477 = !DILocation(line: 3703, column: 102, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !21, line: 3703, column: 102)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !21, line: 3703, column: 102)
!7480 = !DILocation(line: 3703, column: 102, scope: !7479)
!7481 = !DILocation(line: 3705, column: 16, scope: !6708)
!7482 = !DILocation(line: 3706, column: 15, scope: !6708)
!7483 = !DILocation(line: 3708, column: 9, scope: !6707)
!7484 = !DILocation(line: 3708, column: 9, scope: !6708)
!7485 = !DILocation(line: 3709, column: 20, scope: !6706)
!7486 = !DILocation(line: 3709, column: 18, scope: !6706)
!7487 = !DILocation(line: 3710, column: 11, scope: !6705)
!7488 = !DILocation(line: 3710, column: 11, scope: !6706)
!7489 = !DILocation(line: 3711, column: 9, scope: !6704)
!7490 = !DILocation(line: 3711, column: 19, scope: !6704)
!7491 = !DILocation(line: 3711, column: 30, scope: !6704)
!7492 = !DILocation(line: 3712, column: 9, scope: !6704)
!7493 = !DILocation(line: 3713, column: 9, scope: !6704)
!7494 = !DILocation(line: 3714, column: 9, scope: !6704)
!7495 = !DILocation(line: 3714, column: 9, scope: !6711)
!7496 = !DILocation(line: 3715, column: 19, scope: !6704)
!7497 = !DILocation(line: 3716, column: 7, scope: !6705)
!7498 = !DILocation(line: 3716, column: 7, scope: !6704)
!7499 = !DILocation(line: 3717, column: 5, scope: !6706)
!7500 = !DILocation(line: 3720, column: 7, scope: !6713)
!7501 = !DILocation(line: 3720, column: 17, scope: !6713)
!7502 = !DILocation(line: 3720, column: 37, scope: !6713)
!7503 = !DILocation(line: 3720, column: 38, scope: !6713)
!7504 = !DILocation(line: 3720, column: 50, scope: !6713)
!7505 = !{!2020, !1900, i64 256}
!7506 = !DILocation(line: 3721, column: 19, scope: !6713)
!7507 = !DILocation(line: 3721, column: 17, scope: !6713)
!7508 = !DILocation(line: 3722, column: 7, scope: !6713)
!7509 = !DILocation(line: 3722, column: 45, scope: !6713)
!7510 = !DILocation(line: 3723, column: 11, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !6713, file: !21, line: 3723, column: 11)
!7512 = !DILocation(line: 3723, column: 11, scope: !6713)
!7513 = !DILocation(line: 3723, column: 33, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !21, line: 3723, column: 33)
!7515 = distinct !DILexicalBlock(scope: !7511, file: !21, line: 3723, column: 33)
!7516 = !DILocation(line: 3723, column: 33, scope: !7515)
!7517 = !DILocation(line: 3725, column: 7, scope: !6713)
!7518 = !DILocation(line: 3725, column: 42, scope: !6713)
!7519 = !DILocation(line: 3726, column: 5, scope: !6708)
!7520 = !DILocation(line: 3727, column: 5, scope: !6708)
!7521 = !DILocation(line: 3727, column: 40, scope: !6708)
!7522 = !DILocation(line: 3736, column: 56, scope: !6708)
!7523 = !DILocation(line: 3736, column: 76, scope: !6708)
!7524 = !DILocation(line: 3736, column: 17, scope: !6708)
!7525 = !DILocation(line: 3736, column: 15, scope: !6708)
!7526 = !DILocation(line: 3736, column: 97, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !6708, file: !21, line: 3736, column: 97)
!7528 = !DILocation(line: 3736, column: 97, scope: !6708)
!7529 = !DILocation(line: 3736, column: 119, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !21, line: 3736, column: 119)
!7531 = distinct !DILexicalBlock(scope: !7527, file: !21, line: 3736, column: 119)
!7532 = !DILocation(line: 3736, column: 119, scope: !7531)
!7533 = !DILocation(line: 3738, column: 16, scope: !6708)
!7534 = !DILocation(line: 3739, column: 15, scope: !6708)
!7535 = !DILocation(line: 3741, column: 9, scope: !6718)
!7536 = !DILocation(line: 3741, column: 9, scope: !6708)
!7537 = !DILocation(line: 3742, column: 20, scope: !6717)
!7538 = !DILocation(line: 3742, column: 18, scope: !6717)
!7539 = !DILocation(line: 3743, column: 11, scope: !6716)
!7540 = !DILocation(line: 3743, column: 11, scope: !6717)
!7541 = !DILocation(line: 3744, column: 9, scope: !6715)
!7542 = !DILocation(line: 3744, column: 19, scope: !6715)
!7543 = !DILocation(line: 3744, column: 30, scope: !6715)
!7544 = !DILocation(line: 3745, column: 9, scope: !6715)
!7545 = !DILocation(line: 3746, column: 9, scope: !6715)
!7546 = !DILocation(line: 3747, column: 9, scope: !6715)
!7547 = !DILocation(line: 3747, column: 9, scope: !6720)
!7548 = !DILocation(line: 3748, column: 19, scope: !6715)
!7549 = !DILocation(line: 3749, column: 7, scope: !6716)
!7550 = !DILocation(line: 3749, column: 7, scope: !6715)
!7551 = !DILocation(line: 3750, column: 5, scope: !6717)
!7552 = !DILocation(line: 3753, column: 7, scope: !6722)
!7553 = !DILocation(line: 3753, column: 17, scope: !6722)
!7554 = !DILocation(line: 3753, column: 37, scope: !6722)
!7555 = !DILocation(line: 3753, column: 38, scope: !6722)
!7556 = !DILocation(line: 3753, column: 50, scope: !6722)
!7557 = !DILocation(line: 3754, column: 19, scope: !6722)
!7558 = !DILocation(line: 3754, column: 17, scope: !6722)
!7559 = !DILocation(line: 3755, column: 7, scope: !6722)
!7560 = !DILocation(line: 3755, column: 45, scope: !6722)
!7561 = !DILocation(line: 3756, column: 11, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !6722, file: !21, line: 3756, column: 11)
!7563 = !DILocation(line: 3756, column: 11, scope: !6722)
!7564 = !DILocation(line: 3756, column: 33, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !21, line: 3756, column: 33)
!7566 = distinct !DILexicalBlock(scope: !7562, file: !21, line: 3756, column: 33)
!7567 = !DILocation(line: 3756, column: 33, scope: !7566)
!7568 = !DILocation(line: 3758, column: 7, scope: !6722)
!7569 = !DILocation(line: 3758, column: 42, scope: !6722)
!7570 = !DILocation(line: 3759, column: 5, scope: !6708)
!7571 = !DILocation(line: 3760, column: 5, scope: !6708)
!7572 = !DILocation(line: 3760, column: 40, scope: !6708)
!7573 = !DILocation(line: 3769, column: 3, scope: !6708)
!7574 = !DILocation(line: 3778, column: 3, scope: !6587)
!7575 = !DILocation(line: 3779, column: 3, scope: !6587)
!7576 = !DILocation(line: 3780, column: 26, scope: !6587)
!7577 = !DILocation(line: 3780, column: 11, scope: !6587)
!7578 = !DILocation(line: 3781, column: 3, scope: !6587)
!7579 = !DILocation(line: 3792, column: 3, scope: !6587)
!7580 = !DILocation(line: 3793, column: 3, scope: !6587)
!7581 = !DILocation(line: 3794, column: 3, scope: !6587)
!7582 = !DILocation(line: 3795, column: 3, scope: !6587)
!7583 = !DILocation(line: 3796, column: 3, scope: !6587)
!7584 = !DILocation(line: 3797, column: 3, scope: !6587)
!7585 = !DILocation(line: 3798, column: 3, scope: !6587)
!7586 = !DILocation(line: 3799, column: 52, scope: !6587)
!7587 = !DILocation(line: 3799, column: 67, scope: !6587)
!7588 = !DILocation(line: 3799, column: 81, scope: !6587)
!7589 = !DILocation(line: 3799, column: 3, scope: !6587)
!7590 = !DILocation(line: 3800, column: 11, scope: !6587)
!7591 = !DILocation(line: 3800, column: 3, scope: !6587)
!7592 = !DILocation(line: 3801, column: 3, scope: !6587)
!7593 = !DILocation(line: 3802, column: 3, scope: !6587)
!7594 = !DILocation(line: 3803, column: 3, scope: !6587)
!7595 = !DILocation(line: 3804, column: 3, scope: !6587)
!7596 = !DILocation(line: 3805, column: 3, scope: !6587)
!7597 = !DILocation(line: 3806, column: 3, scope: !6587)
!7598 = !DILocation(line: 3807, column: 3, scope: !6587)
!7599 = !DILocation(line: 3808, column: 3, scope: !6587)
!7600 = !DILocation(line: 3809, column: 3, scope: !6587)
!7601 = !DILocation(line: 3810, column: 3, scope: !6587)
!7602 = !DILocation(line: 3813, column: 10, scope: !6587)
!7603 = !DILocation(line: 3813, column: 3, scope: !6587)
!7604 = !DILocation(line: 3814, column: 1, scope: !6587)
!7605 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA_set_epsilon_closure", scope: !21, file: !21, line: 3971, type: !84, scopeLine: 3971, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7606)
!7606 = !{!7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7629, !7632, !7633}
!7607 = !DILocalVariable(name: "__pyx_v_state_set", arg: 1, scope: !7605, file: !21, line: 3971, type: !28)
!7608 = !DILocalVariable(name: "__pyx_v_result", scope: !7605, file: !21, line: 3972, type: !28)
!7609 = !DILocalVariable(name: "__pyx_v_state1", scope: !7605, file: !21, line: 3973, type: !28)
!7610 = !DILocalVariable(name: "__pyx_v_state2", scope: !7605, file: !21, line: 3974, type: !28)
!7611 = !DILocalVariable(name: "__pyx_r", scope: !7605, file: !21, line: 3975, type: !28)
!7612 = !DILocalVariable(name: "__pyx_t_1", scope: !7605, file: !21, line: 3977, type: !28)
!7613 = !DILocalVariable(name: "__pyx_t_2", scope: !7605, file: !21, line: 3978, type: !34)
!7614 = !DILocalVariable(name: "__pyx_t_3", scope: !7605, file: !21, line: 3979, type: !34)
!7615 = !DILocalVariable(name: "__pyx_t_4", scope: !7605, file: !21, line: 3980, type: !7)
!7616 = !DILocalVariable(name: "__pyx_t_5", scope: !7605, file: !21, line: 3981, type: !28)
!7617 = !DILocalVariable(name: "__pyx_t_6", scope: !7605, file: !21, line: 3982, type: !7)
!7618 = !DILocalVariable(name: "__pyx_t_7", scope: !7605, file: !21, line: 3983, type: !34)
!7619 = !DILocalVariable(name: "__pyx_t_8", scope: !7605, file: !21, line: 3984, type: !34)
!7620 = !DILocalVariable(name: "__pyx_t_9", scope: !7605, file: !21, line: 3985, type: !28)
!7621 = !DILocalVariable(name: "__pyx_t_10", scope: !7605, file: !21, line: 3986, type: !28)
!7622 = !DILocalVariable(name: "__pyx_t_11", scope: !7605, file: !21, line: 3987, type: !7)
!7623 = !DILocalVariable(name: "__pyx_lineno", scope: !7605, file: !21, line: 3988, type: !7)
!7624 = !DILocalVariable(name: "__pyx_filename", scope: !7605, file: !21, line: 3989, type: !54)
!7625 = !DILocalVariable(name: "__pyx_clineno", scope: !7605, file: !21, line: 3990, type: !7)
!7626 = !DILocalVariable(name: "tmp", scope: !7627, file: !21, line: 4027, type: !28)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4027, column: 5)
!7628 = distinct !DILexicalBlock(scope: !7605, file: !21, line: 4022, column: 13)
!7629 = !DILocalVariable(name: "tmp", scope: !7630, file: !21, line: 4056, type: !28)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !21, line: 4056, column: 7)
!7631 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4051, column: 15)
!7632 = !DILabel(scope: !7605, name: "__pyx_L1_error", file: !21, line: 4093)
!7633 = !DILabel(scope: !7605, name: "__pyx_L0", file: !21, line: 4100)
!7634 = !DILocation(line: 3971, column: 75, scope: !7605)
!7635 = !DILocation(line: 3972, column: 3, scope: !7605)
!7636 = !DILocation(line: 3972, column: 13, scope: !7605)
!7637 = !DILocation(line: 3973, column: 3, scope: !7605)
!7638 = !DILocation(line: 3973, column: 13, scope: !7605)
!7639 = !DILocation(line: 3974, column: 3, scope: !7605)
!7640 = !DILocation(line: 3974, column: 13, scope: !7605)
!7641 = !DILocation(line: 3975, column: 3, scope: !7605)
!7642 = !DILocation(line: 3975, column: 13, scope: !7605)
!7643 = !DILocation(line: 3977, column: 3, scope: !7605)
!7644 = !DILocation(line: 3977, column: 13, scope: !7605)
!7645 = !DILocation(line: 3978, column: 3, scope: !7605)
!7646 = !DILocation(line: 3978, column: 14, scope: !7605)
!7647 = !DILocation(line: 3979, column: 3, scope: !7605)
!7648 = !DILocation(line: 3979, column: 14, scope: !7605)
!7649 = !DILocation(line: 3980, column: 3, scope: !7605)
!7650 = !DILocation(line: 3980, column: 7, scope: !7605)
!7651 = !DILocation(line: 3981, column: 3, scope: !7605)
!7652 = !DILocation(line: 3981, column: 13, scope: !7605)
!7653 = !DILocation(line: 3982, column: 3, scope: !7605)
!7654 = !DILocation(line: 3982, column: 7, scope: !7605)
!7655 = !DILocation(line: 3983, column: 3, scope: !7605)
!7656 = !DILocation(line: 3983, column: 14, scope: !7605)
!7657 = !DILocation(line: 3984, column: 3, scope: !7605)
!7658 = !DILocation(line: 3984, column: 14, scope: !7605)
!7659 = !DILocation(line: 3985, column: 3, scope: !7605)
!7660 = !DILocation(line: 3985, column: 13, scope: !7605)
!7661 = !DILocation(line: 3986, column: 3, scope: !7605)
!7662 = !DILocation(line: 3986, column: 13, scope: !7605)
!7663 = !DILocation(line: 3987, column: 3, scope: !7605)
!7664 = !DILocation(line: 3987, column: 7, scope: !7605)
!7665 = !DILocation(line: 3988, column: 3, scope: !7605)
!7666 = !DILocation(line: 3988, column: 7, scope: !7605)
!7667 = !DILocation(line: 3989, column: 3, scope: !7605)
!7668 = !DILocation(line: 3989, column: 15, scope: !7605)
!7669 = !DILocation(line: 3990, column: 3, scope: !7605)
!7670 = !DILocation(line: 3990, column: 7, scope: !7605)
!7671 = !DILocation(line: 4000, column: 15, scope: !7605)
!7672 = !DILocation(line: 4000, column: 13, scope: !7605)
!7673 = !DILocation(line: 4000, column: 48, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7605, file: !21, line: 4000, column: 48)
!7675 = !DILocation(line: 4000, column: 48, scope: !7605)
!7676 = !DILocation(line: 4000, column: 70, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !21, line: 4000, column: 70)
!7678 = distinct !DILexicalBlock(scope: !7674, file: !21, line: 4000, column: 70)
!7679 = !DILocation(line: 4000, column: 70, scope: !7678)
!7680 = !DILocation(line: 4002, column: 32, scope: !7605)
!7681 = !DILocation(line: 4002, column: 18, scope: !7605)
!7682 = !DILocation(line: 4003, column: 13, scope: !7605)
!7683 = !DILocation(line: 4012, column: 13, scope: !7605)
!7684 = !DILocation(line: 4013, column: 7, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7605, file: !21, line: 4013, column: 7)
!7686 = !DILocation(line: 4013, column: 7, scope: !7605)
!7687 = !DILocation(line: 4014, column: 21, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7685, file: !21, line: 4013, column: 47)
!7689 = !DILocation(line: 4014, column: 5, scope: !7688)
!7690 = !DILocation(line: 4015, column: 5, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !21, line: 4015, column: 5)
!7692 = distinct !DILexicalBlock(scope: !7688, file: !21, line: 4015, column: 5)
!7693 = !DILocation(line: 4015, column: 5, scope: !7692)
!7694 = !DILocation(line: 4017, column: 35, scope: !7605)
!7695 = !DILocation(line: 4017, column: 15, scope: !7605)
!7696 = !DILocation(line: 4017, column: 13, scope: !7605)
!7697 = !DILocation(line: 4017, column: 110, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7605, file: !21, line: 4017, column: 110)
!7699 = !DILocation(line: 4017, column: 110, scope: !7605)
!7700 = !DILocation(line: 4017, column: 132, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !21, line: 4017, column: 132)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !21, line: 4017, column: 132)
!7703 = !DILocation(line: 4017, column: 132, scope: !7702)
!7704 = !DILocation(line: 4019, column: 3, scope: !7605)
!7705 = !DILocation(line: 4020, column: 15, scope: !7605)
!7706 = !DILocation(line: 4020, column: 13, scope: !7605)
!7707 = !DILocation(line: 4021, column: 13, scope: !7605)
!7708 = !DILocation(line: 4022, column: 3, scope: !7605)
!7709 = !DILocation(line: 4023, column: 38, scope: !7628)
!7710 = !DILocation(line: 4023, column: 49, scope: !7628)
!7711 = !DILocation(line: 4023, column: 96, scope: !7628)
!7712 = !DILocation(line: 4023, column: 17, scope: !7628)
!7713 = !DILocation(line: 4023, column: 15, scope: !7628)
!7714 = !DILocation(line: 4024, column: 9, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4024, column: 9)
!7716 = !DILocation(line: 4024, column: 9, scope: !7628)
!7717 = !DILocation(line: 4024, column: 35, scope: !7715)
!7718 = !DILocation(line: 4025, column: 9, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4025, column: 9)
!7720 = !DILocation(line: 4025, column: 9, scope: !7628)
!7721 = !DILocation(line: 4025, column: 36, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !21, line: 4025, column: 36)
!7723 = distinct !DILexicalBlock(scope: !7719, file: !21, line: 4025, column: 36)
!7724 = !DILocation(line: 4025, column: 36, scope: !7723)
!7725 = !DILocation(line: 4027, column: 5, scope: !7628)
!7726 = !DILocation(line: 4027, column: 5, scope: !7627)
!7727 = !DILocation(line: 4028, column: 15, scope: !7628)
!7728 = !DILocation(line: 4037, column: 15, scope: !7628)
!7729 = !DILocation(line: 4038, column: 11, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4038, column: 9)
!7731 = !DILocation(line: 4038, column: 9, scope: !7628)
!7732 = !DILocation(line: 4038, column: 135, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !21, line: 4038, column: 135)
!7734 = distinct !DILexicalBlock(scope: !7730, file: !21, line: 4038, column: 135)
!7735 = !DILocation(line: 4038, column: 135, scope: !7734)
!7736 = !DILocation(line: 4039, column: 110, scope: !7628)
!7737 = !DILocation(line: 4039, column: 17, scope: !7628)
!7738 = !DILocation(line: 4039, column: 15, scope: !7628)
!7739 = !DILocation(line: 4039, column: 132, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4039, column: 132)
!7741 = !DILocation(line: 4039, column: 132, scope: !7628)
!7742 = !DILocation(line: 4039, column: 154, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !21, line: 4039, column: 154)
!7744 = distinct !DILexicalBlock(scope: !7740, file: !21, line: 4039, column: 154)
!7745 = !DILocation(line: 4039, column: 154, scope: !7744)
!7746 = !DILocation(line: 4041, column: 9, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4041, column: 9)
!7748 = !DILocation(line: 4041, column: 9, scope: !7628)
!7749 = !DILocation(line: 4042, column: 23, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7747, file: !21, line: 4041, column: 41)
!7751 = !DILocation(line: 4042, column: 7, scope: !7750)
!7752 = !DILocation(line: 4043, column: 7, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !21, line: 4043, column: 7)
!7754 = distinct !DILexicalBlock(scope: !7750, file: !21, line: 4043, column: 7)
!7755 = !DILocation(line: 4043, column: 7, scope: !7754)
!7756 = !DILocation(line: 4045, column: 38, scope: !7628)
!7757 = !DILocation(line: 4045, column: 18, scope: !7628)
!7758 = !DILocation(line: 4045, column: 16, scope: !7628)
!7759 = !DILocation(line: 4045, column: 105, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7628, file: !21, line: 4045, column: 105)
!7761 = !DILocation(line: 4045, column: 105, scope: !7628)
!7762 = !DILocation(line: 4045, column: 128, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !21, line: 4045, column: 128)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !21, line: 4045, column: 128)
!7765 = !DILocation(line: 4045, column: 128, scope: !7764)
!7766 = !DILocation(line: 4047, column: 5, scope: !7628)
!7767 = !DILocation(line: 4047, column: 40, scope: !7628)
!7768 = !DILocation(line: 4048, column: 5, scope: !7628)
!7769 = !DILocation(line: 4049, column: 17, scope: !7628)
!7770 = !DILocation(line: 4049, column: 15, scope: !7628)
!7771 = !DILocation(line: 4050, column: 16, scope: !7628)
!7772 = !DILocation(line: 4051, column: 5, scope: !7628)
!7773 = !DILocation(line: 4052, column: 41, scope: !7631)
!7774 = !DILocation(line: 4052, column: 52, scope: !7631)
!7775 = !DILocation(line: 4052, column: 100, scope: !7631)
!7776 = !DILocation(line: 4052, column: 20, scope: !7631)
!7777 = !DILocation(line: 4052, column: 18, scope: !7631)
!7778 = !DILocation(line: 4053, column: 11, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7631, file: !21, line: 4053, column: 11)
!7780 = !DILocation(line: 4053, column: 11, scope: !7631)
!7781 = !DILocation(line: 4053, column: 38, scope: !7779)
!7782 = !DILocation(line: 4054, column: 11, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7631, file: !21, line: 4054, column: 11)
!7784 = !DILocation(line: 4054, column: 11, scope: !7631)
!7785 = !DILocation(line: 4054, column: 39, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !21, line: 4054, column: 39)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !21, line: 4054, column: 39)
!7788 = !DILocation(line: 4054, column: 39, scope: !7787)
!7789 = !DILocation(line: 4056, column: 7, scope: !7631)
!7790 = !DILocation(line: 4056, column: 7, scope: !7630)
!7791 = !DILocation(line: 4057, column: 18, scope: !7631)
!7792 = !DILocation(line: 4066, column: 11, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7631, file: !21, line: 4066, column: 11)
!7794 = !DILocation(line: 4066, column: 11, scope: !7631)
!7795 = !DILocation(line: 4066, column: 88, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !21, line: 4066, column: 88)
!7797 = distinct !DILexicalBlock(scope: !7793, file: !21, line: 4066, column: 88)
!7798 = !DILocation(line: 4066, column: 88, scope: !7797)
!7799 = distinct !{!7799, !7772, !7800}
!7800 = !DILocation(line: 4067, column: 5, scope: !7628)
!7801 = !DILocation(line: 4068, column: 5, scope: !7628)
!7802 = !DILocation(line: 4068, column: 40, scope: !7628)
!7803 = distinct !{!7803, !7708, !7804}
!7804 = !DILocation(line: 4069, column: 3, scope: !7605)
!7805 = !DILocation(line: 4070, column: 3, scope: !7605)
!7806 = !DILocation(line: 4070, column: 38, scope: !7605)
!7807 = !DILocation(line: 4079, column: 3, scope: !7605)
!7808 = !DILocation(line: 4080, column: 3, scope: !7605)
!7809 = !DILocation(line: 4081, column: 13, scope: !7605)
!7810 = !DILocation(line: 4081, column: 11, scope: !7605)
!7811 = !DILocation(line: 4082, column: 3, scope: !7605)
!7812 = !DILocation(line: 4093, column: 3, scope: !7605)
!7813 = !DILocation(line: 4094, column: 3, scope: !7605)
!7814 = !DILocation(line: 4095, column: 3, scope: !7605)
!7815 = !DILocation(line: 4096, column: 3, scope: !7605)
!7816 = !DILocation(line: 4097, column: 3, scope: !7605)
!7817 = !DILocation(line: 4098, column: 61, scope: !7605)
!7818 = !DILocation(line: 4098, column: 76, scope: !7605)
!7819 = !DILocation(line: 4098, column: 90, scope: !7605)
!7820 = !DILocation(line: 4098, column: 3, scope: !7605)
!7821 = !DILocation(line: 4099, column: 11, scope: !7605)
!7822 = !DILocation(line: 4099, column: 3, scope: !7605)
!7823 = !DILocation(line: 4100, column: 3, scope: !7605)
!7824 = !DILocation(line: 4101, column: 3, scope: !7605)
!7825 = !DILocation(line: 4102, column: 3, scope: !7605)
!7826 = !DILocation(line: 4103, column: 3, scope: !7605)
!7827 = !DILocation(line: 4106, column: 10, scope: !7605)
!7828 = !DILocation(line: 4107, column: 1, scope: !7605)
!7829 = !DILocation(line: 4106, column: 3, scope: !7605)
!7830 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA_epsilon_closure", scope: !21, file: !21, line: 4117, type: !7831, scopeLine: 4117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7833)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!28, !440}
!7833 = !{!7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7846, !7847}
!7834 = !DILocalVariable(name: "__pyx_v_state", arg: 1, scope: !7830, file: !21, line: 4117, type: !440)
!7835 = !DILocalVariable(name: "__pyx_v_result", scope: !7830, file: !21, line: 4118, type: !28)
!7836 = !DILocalVariable(name: "__pyx_r", scope: !7830, file: !21, line: 4119, type: !28)
!7837 = !DILocalVariable(name: "__pyx_t_1", scope: !7830, file: !21, line: 4121, type: !28)
!7838 = !DILocalVariable(name: "__pyx_t_2", scope: !7830, file: !21, line: 4122, type: !7)
!7839 = !DILocalVariable(name: "__pyx_lineno", scope: !7830, file: !21, line: 4123, type: !7)
!7840 = !DILocalVariable(name: "__pyx_filename", scope: !7830, file: !21, line: 4124, type: !54)
!7841 = !DILocalVariable(name: "__pyx_clineno", scope: !7830, file: !21, line: 4125, type: !7)
!7842 = !DILocalVariable(name: "tmp", scope: !7843, file: !21, line: 4159, type: !28)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !21, line: 4159, column: 5)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !21, line: 4148, column: 18)
!7845 = distinct !DILexicalBlock(scope: !7830, file: !21, line: 4148, column: 7)
!7846 = !DILabel(scope: !7830, name: "__pyx_L1_error", file: !21, line: 4216)
!7847 = !DILabel(scope: !7830, name: "__pyx_L0", file: !21, line: 4220)
!7848 = !DILocation(line: 4117, column: 108, scope: !7830)
!7849 = !DILocation(line: 4118, column: 3, scope: !7830)
!7850 = !DILocation(line: 4118, column: 13, scope: !7830)
!7851 = !DILocation(line: 4119, column: 3, scope: !7830)
!7852 = !DILocation(line: 4119, column: 13, scope: !7830)
!7853 = !DILocation(line: 4121, column: 3, scope: !7830)
!7854 = !DILocation(line: 4121, column: 13, scope: !7830)
!7855 = !DILocation(line: 4122, column: 3, scope: !7830)
!7856 = !DILocation(line: 4122, column: 7, scope: !7830)
!7857 = !DILocation(line: 4123, column: 3, scope: !7830)
!7858 = !DILocation(line: 4123, column: 7, scope: !7830)
!7859 = !DILocation(line: 4124, column: 3, scope: !7830)
!7860 = !DILocation(line: 4124, column: 15, scope: !7830)
!7861 = !DILocation(line: 4125, column: 3, scope: !7830)
!7862 = !DILocation(line: 4125, column: 7, scope: !7830)
!7863 = !DILocation(line: 4135, column: 15, scope: !7830)
!7864 = !DILocation(line: 4135, column: 30, scope: !7830)
!7865 = !{!7866, !1900, i64 32}
!7866 = !{!"__pyx_obj_6Cython_4Plex_8Machines_Node", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32, !2424, i64 40, !1985, i64 48}
!7867 = !DILocation(line: 4135, column: 13, scope: !7830)
!7868 = !DILocation(line: 4136, column: 3, scope: !7830)
!7869 = !DILocation(line: 4137, column: 32, scope: !7830)
!7870 = !DILocation(line: 4137, column: 18, scope: !7830)
!7871 = !DILocation(line: 4138, column: 13, scope: !7830)
!7872 = !DILocation(line: 4147, column: 16, scope: !7830)
!7873 = !DILocation(line: 4147, column: 31, scope: !7830)
!7874 = !DILocation(line: 4147, column: 13, scope: !7830)
!7875 = !DILocation(line: 4148, column: 7, scope: !7845)
!7876 = !DILocation(line: 4148, column: 7, scope: !7830)
!7877 = !DILocation(line: 4157, column: 17, scope: !7844)
!7878 = !DILocation(line: 4157, column: 15, scope: !7844)
!7879 = !DILocation(line: 4157, column: 50, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7844, file: !21, line: 4157, column: 50)
!7881 = !DILocation(line: 4157, column: 50, scope: !7844)
!7882 = !DILocation(line: 4157, column: 72, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !21, line: 4157, column: 72)
!7884 = distinct !DILexicalBlock(scope: !7880, file: !21, line: 4157, column: 72)
!7885 = !DILocation(line: 4157, column: 72, scope: !7884)
!7886 = !DILocation(line: 4159, column: 5, scope: !7844)
!7887 = !DILocation(line: 4159, column: 5, scope: !7843)
!7888 = !DILocation(line: 4160, column: 15, scope: !7844)
!7889 = !DILocation(line: 4169, column: 5, scope: !7844)
!7890 = !DILocation(line: 4172, column: 5, scope: !7844)
!7891 = !DILocation(line: 4173, column: 38, scope: !7844)
!7892 = !DILocation(line: 4173, column: 5, scope: !7844)
!7893 = !DILocation(line: 4173, column: 20, scope: !7844)
!7894 = !DILocation(line: 4173, column: 36, scope: !7844)
!7895 = !DILocation(line: 4182, column: 67, scope: !7844)
!7896 = !DILocation(line: 4182, column: 83, scope: !7844)
!7897 = !DILocation(line: 4182, column: 17, scope: !7844)
!7898 = !DILocation(line: 4182, column: 15, scope: !7844)
!7899 = !DILocation(line: 4182, column: 103, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7844, file: !21, line: 4182, column: 103)
!7901 = !DILocation(line: 4182, column: 103, scope: !7844)
!7902 = !DILocation(line: 4182, column: 125, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !21, line: 4182, column: 125)
!7904 = distinct !DILexicalBlock(scope: !7900, file: !21, line: 4182, column: 125)
!7905 = !DILocation(line: 4182, column: 125, scope: !7904)
!7906 = !DILocation(line: 4184, column: 5, scope: !7844)
!7907 = !DILocation(line: 4184, column: 40, scope: !7844)
!7908 = !DILocation(line: 4193, column: 3, scope: !7844)
!7909 = !DILocation(line: 4202, column: 3, scope: !7830)
!7910 = !DILocation(line: 4203, column: 3, scope: !7830)
!7911 = !DILocation(line: 4204, column: 13, scope: !7830)
!7912 = !DILocation(line: 4204, column: 11, scope: !7830)
!7913 = !DILocation(line: 4205, column: 3, scope: !7830)
!7914 = !DILocation(line: 4216, column: 3, scope: !7830)
!7915 = !DILocation(line: 4217, column: 3, scope: !7830)
!7916 = !DILocation(line: 4218, column: 57, scope: !7830)
!7917 = !DILocation(line: 4218, column: 72, scope: !7830)
!7918 = !DILocation(line: 4218, column: 86, scope: !7830)
!7919 = !DILocation(line: 4218, column: 3, scope: !7830)
!7920 = !DILocation(line: 4219, column: 11, scope: !7830)
!7921 = !DILocation(line: 4219, column: 3, scope: !7830)
!7922 = !DILocation(line: 4220, column: 3, scope: !7830)
!7923 = !DILocation(line: 4221, column: 3, scope: !7830)
!7924 = !DILocation(line: 4224, column: 10, scope: !7830)
!7925 = !DILocation(line: 4225, column: 1, scope: !7830)
!7926 = !DILocation(line: 4224, column: 3, scope: !7830)
!7927 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA_add_to_epsilon_closure", scope: !21, file: !21, line: 4235, type: !7928, scopeLine: 4235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7930)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!28, !28, !440}
!7930 = !{!7931, !7932, !7933, !7934, !7935, !7936, !7937, !7938, !7939, !7940, !7941, !7942, !7943, !7944, !7945, !7946, !7947, !7948, !7955, !7957, !7959, !7964, !7965}
!7931 = !DILocalVariable(name: "__pyx_v_state_set", arg: 1, scope: !7927, file: !21, line: 4235, type: !28)
!7932 = !DILocalVariable(name: "__pyx_v_state", arg: 2, scope: !7927, file: !21, line: 4235, type: !440)
!7933 = !DILocalVariable(name: "__pyx_v_state_set_2", scope: !7927, file: !21, line: 4236, type: !28)
!7934 = !DILocalVariable(name: "__pyx_v_state2", scope: !7927, file: !21, line: 4237, type: !440)
!7935 = !DILocalVariable(name: "__pyx_r", scope: !7927, file: !21, line: 4238, type: !28)
!7936 = !DILocalVariable(name: "__pyx_t_1", scope: !7927, file: !21, line: 4240, type: !28)
!7937 = !DILocalVariable(name: "__pyx_t_2", scope: !7927, file: !21, line: 4241, type: !7)
!7938 = !DILocalVariable(name: "__pyx_t_3", scope: !7927, file: !21, line: 4242, type: !7)
!7939 = !DILocalVariable(name: "__pyx_t_4", scope: !7927, file: !21, line: 4243, type: !28)
!7940 = !DILocalVariable(name: "__pyx_t_5", scope: !7927, file: !21, line: 4244, type: !28)
!7941 = !DILocalVariable(name: "__pyx_t_6", scope: !7927, file: !21, line: 4245, type: !7)
!7942 = !DILocalVariable(name: "__pyx_t_7", scope: !7927, file: !21, line: 4246, type: !34)
!7943 = !DILocalVariable(name: "__pyx_t_8", scope: !7927, file: !21, line: 4247, type: !34)
!7944 = !DILocalVariable(name: "__pyx_t_9", scope: !7927, file: !21, line: 4248, type: !7)
!7945 = !DILocalVariable(name: "__pyx_lineno", scope: !7927, file: !21, line: 4249, type: !7)
!7946 = !DILocalVariable(name: "__pyx_filename", scope: !7927, file: !21, line: 4250, type: !54)
!7947 = !DILocalVariable(name: "__pyx_clineno", scope: !7927, file: !21, line: 4251, type: !7)
!7948 = !DILocalVariable(name: "function", scope: !7949, file: !21, line: 4300, type: !28)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !21, line: 4299, column: 30)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !21, line: 4299, column: 11)
!7951 = distinct !DILexicalBlock(scope: !7952, file: !21, line: 4297, column: 44)
!7952 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4297, column: 9)
!7953 = distinct !DILexicalBlock(scope: !7954, file: !21, line: 4270, column: 18)
!7954 = distinct !DILexicalBlock(scope: !7927, file: !21, line: 4270, column: 7)
!7955 = !DILocalVariable(name: "tmp", scope: !7956, file: !21, line: 4303, type: !28)
!7956 = distinct !DILexicalBlock(scope: !7949, file: !21, line: 4303, column: 9)
!7957 = !DILocalVariable(name: "__pyx_callargs", scope: !7958, file: !21, line: 4309, type: !6663)
!7958 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4308, column: 5)
!7959 = !DILocalVariable(name: "tmp", scope: !7960, file: !21, line: 4353, type: !28)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !21, line: 4353, column: 9)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !21, line: 4347, column: 17)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !21, line: 4328, column: 20)
!7963 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4328, column: 9)
!7964 = !DILabel(scope: !7927, name: "__pyx_L1_error", file: !21, line: 4398)
!7965 = !DILabel(scope: !7927, name: "__pyx_L0", file: !21, line: 4404)
!7966 = !DILocation(line: 4235, column: 78, scope: !7927)
!7967 = !DILocation(line: 4235, column: 144, scope: !7927)
!7968 = !DILocation(line: 4236, column: 3, scope: !7927)
!7969 = !DILocation(line: 4236, column: 13, scope: !7927)
!7970 = !DILocation(line: 4237, column: 3, scope: !7927)
!7971 = !DILocation(line: 4237, column: 50, scope: !7927)
!7972 = !DILocation(line: 4238, column: 3, scope: !7927)
!7973 = !DILocation(line: 4238, column: 13, scope: !7927)
!7974 = !DILocation(line: 4240, column: 3, scope: !7927)
!7975 = !DILocation(line: 4240, column: 13, scope: !7927)
!7976 = !DILocation(line: 4241, column: 3, scope: !7927)
!7977 = !DILocation(line: 4241, column: 7, scope: !7927)
!7978 = !DILocation(line: 4242, column: 3, scope: !7927)
!7979 = !DILocation(line: 4242, column: 7, scope: !7927)
!7980 = !DILocation(line: 4243, column: 3, scope: !7927)
!7981 = !DILocation(line: 4243, column: 13, scope: !7927)
!7982 = !DILocation(line: 4244, column: 3, scope: !7927)
!7983 = !DILocation(line: 4244, column: 13, scope: !7927)
!7984 = !DILocation(line: 4245, column: 3, scope: !7927)
!7985 = !DILocation(line: 4245, column: 7, scope: !7927)
!7986 = !DILocation(line: 4246, column: 3, scope: !7927)
!7987 = !DILocation(line: 4246, column: 14, scope: !7927)
!7988 = !DILocation(line: 4247, column: 3, scope: !7927)
!7989 = !DILocation(line: 4247, column: 14, scope: !7927)
!7990 = !DILocation(line: 4248, column: 3, scope: !7927)
!7991 = !DILocation(line: 4248, column: 7, scope: !7927)
!7992 = !DILocation(line: 4249, column: 3, scope: !7927)
!7993 = !DILocation(line: 4249, column: 7, scope: !7927)
!7994 = !DILocation(line: 4250, column: 3, scope: !7927)
!7995 = !DILocation(line: 4250, column: 15, scope: !7927)
!7996 = !DILocation(line: 4251, column: 3, scope: !7927)
!7997 = !DILocation(line: 4251, column: 7, scope: !7927)
!7998 = !DILocation(line: 4261, column: 7, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7927, file: !21, line: 4261, column: 7)
!8000 = !DILocation(line: 4261, column: 7, scope: !7927)
!8001 = !DILocation(line: 4262, column: 18, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7999, file: !21, line: 4261, column: 47)
!8003 = !DILocation(line: 4262, column: 5, scope: !8002)
!8004 = !DILocation(line: 4263, column: 5, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !21, line: 4263, column: 5)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !21, line: 4263, column: 5)
!8007 = !DILocation(line: 4263, column: 5, scope: !8006)
!8008 = !DILocation(line: 4265, column: 43, scope: !7927)
!8009 = !DILocation(line: 4265, column: 75, scope: !7927)
!8010 = !DILocation(line: 4265, column: 91, scope: !7927)
!8011 = !DILocation(line: 4265, column: 15, scope: !7927)
!8012 = !DILocation(line: 4265, column: 13, scope: !7927)
!8013 = !DILocation(line: 4265, column: 109, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !7927, file: !21, line: 4265, column: 109)
!8015 = !DILocation(line: 4265, column: 109, scope: !7927)
!8016 = !DILocation(line: 4265, column: 131, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !21, line: 4265, column: 131)
!8018 = distinct !DILexicalBlock(scope: !8014, file: !21, line: 4265, column: 131)
!8019 = !DILocation(line: 4265, column: 131, scope: !8018)
!8020 = !DILocation(line: 4267, column: 37, scope: !7927)
!8021 = !DILocation(line: 4267, column: 15, scope: !7927)
!8022 = !DILocation(line: 4267, column: 13, scope: !7927)
!8023 = !DILocation(line: 4267, column: 53, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !7927, file: !21, line: 4267, column: 53)
!8025 = !DILocation(line: 4267, column: 53, scope: !7927)
!8026 = !DILocation(line: 4267, column: 80, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !21, line: 4267, column: 80)
!8028 = distinct !DILexicalBlock(scope: !8024, file: !21, line: 4267, column: 80)
!8029 = !DILocation(line: 4267, column: 80, scope: !8028)
!8030 = !DILocation(line: 4268, column: 3, scope: !7927)
!8031 = !DILocation(line: 4268, column: 38, scope: !7927)
!8032 = !DILocation(line: 4269, column: 17, scope: !7927)
!8033 = !DILocation(line: 4269, column: 16, scope: !7927)
!8034 = !DILocation(line: 4269, column: 13, scope: !7927)
!8035 = !DILocation(line: 4270, column: 7, scope: !7954)
!8036 = !DILocation(line: 4270, column: 7, scope: !7927)
!8037 = !DILocation(line: 4279, column: 9, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4279, column: 9)
!8039 = !DILocation(line: 4279, column: 9, scope: !7953)
!8040 = !DILocation(line: 4280, column: 23, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8038, file: !21, line: 4279, column: 49)
!8042 = !DILocation(line: 4280, column: 7, scope: !8041)
!8043 = !DILocation(line: 4281, column: 7, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !21, line: 4281, column: 7)
!8045 = distinct !DILexicalBlock(scope: !8041, file: !21, line: 4281, column: 7)
!8046 = !DILocation(line: 4281, column: 7, scope: !8045)
!8047 = !DILocation(line: 4283, column: 9, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4283, column: 9)
!8049 = !DILocation(line: 4283, column: 9, scope: !7953)
!8050 = !DILocation(line: 4283, column: 102, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !21, line: 4283, column: 102)
!8052 = distinct !DILexicalBlock(scope: !8048, file: !21, line: 4283, column: 102)
!8053 = !DILocation(line: 4283, column: 102, scope: !8052)
!8054 = !DILocation(line: 4292, column: 56, scope: !7953)
!8055 = !DILocation(line: 4292, column: 71, scope: !7953)
!8056 = !{!7866, !1900, i64 16}
!8057 = !DILocation(line: 4292, column: 85, scope: !7953)
!8058 = !{!2020, !1900, i64 408}
!8059 = !DILocation(line: 4292, column: 17, scope: !7953)
!8060 = !DILocation(line: 4292, column: 15, scope: !7953)
!8061 = !DILocation(line: 4292, column: 113, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4292, column: 113)
!8063 = !DILocation(line: 4292, column: 113, scope: !7953)
!8064 = !DILocation(line: 4292, column: 135, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !21, line: 4292, column: 135)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !21, line: 4292, column: 135)
!8067 = !DILocation(line: 4292, column: 135, scope: !8066)
!8068 = !DILocation(line: 4294, column: 15, scope: !7953)
!8069 = !DILocation(line: 4295, column: 15, scope: !7953)
!8070 = !DILocation(line: 4297, column: 9, scope: !7952)
!8071 = !DILocation(line: 4297, column: 9, scope: !7953)
!8072 = !DILocation(line: 4298, column: 19, scope: !7951)
!8073 = !DILocation(line: 4298, column: 17, scope: !7951)
!8074 = !DILocation(line: 4299, column: 11, scope: !7950)
!8075 = !DILocation(line: 4299, column: 11, scope: !7951)
!8076 = !DILocation(line: 4300, column: 9, scope: !7949)
!8077 = !DILocation(line: 4300, column: 19, scope: !7949)
!8078 = !DILocation(line: 4300, column: 30, scope: !7949)
!8079 = !DILocation(line: 4301, column: 9, scope: !7949)
!8080 = !DILocation(line: 4302, column: 9, scope: !7949)
!8081 = !DILocation(line: 4303, column: 9, scope: !7949)
!8082 = !DILocation(line: 4303, column: 9, scope: !7956)
!8083 = !DILocation(line: 4304, column: 19, scope: !7949)
!8084 = !DILocation(line: 4305, column: 7, scope: !7950)
!8085 = !DILocation(line: 4305, column: 7, scope: !7949)
!8086 = !DILocation(line: 4306, column: 5, scope: !7951)
!8087 = !DILocation(line: 4309, column: 7, scope: !7958)
!8088 = !DILocation(line: 4309, column: 17, scope: !7958)
!8089 = !DILocation(line: 4309, column: 37, scope: !7958)
!8090 = !DILocation(line: 4309, column: 38, scope: !7958)
!8091 = !DILocation(line: 4310, column: 19, scope: !7958)
!8092 = !DILocation(line: 4310, column: 17, scope: !7958)
!8093 = !DILocation(line: 4311, column: 7, scope: !7958)
!8094 = !DILocation(line: 4311, column: 43, scope: !7958)
!8095 = !DILocation(line: 4312, column: 11, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !7958, file: !21, line: 4312, column: 11)
!8097 = !DILocation(line: 4312, column: 11, scope: !7958)
!8098 = !DILocation(line: 4312, column: 33, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !21, line: 4312, column: 33)
!8100 = distinct !DILexicalBlock(scope: !8096, file: !21, line: 4312, column: 33)
!8101 = !DILocation(line: 4312, column: 33, scope: !8100)
!8102 = !DILocation(line: 4314, column: 7, scope: !7958)
!8103 = !DILocation(line: 4314, column: 42, scope: !7958)
!8104 = !DILocation(line: 4315, column: 5, scope: !7953)
!8105 = !DILocation(line: 4316, column: 11, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4316, column: 9)
!8107 = !DILocation(line: 4316, column: 47, scope: !8106)
!8108 = !DILocation(line: 4316, column: 51, scope: !8106)
!8109 = !DILocation(line: 4316, column: 62, scope: !8106)
!8110 = !DILocation(line: 4316, column: 74, scope: !8106)
!8111 = !DILocation(line: 4316, column: 116, scope: !8106)
!8112 = !DILocation(line: 4316, column: 77, scope: !8106)
!8113 = !DILocation(line: 4316, column: 9, scope: !7953)
!8114 = !DILocation(line: 4316, column: 129, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !21, line: 4316, column: 129)
!8116 = distinct !DILexicalBlock(scope: !8106, file: !21, line: 4316, column: 129)
!8117 = !DILocation(line: 4316, column: 129, scope: !8116)
!8118 = !DILocation(line: 4317, column: 39, scope: !7953)
!8119 = !DILocation(line: 4317, column: 25, scope: !7953)
!8120 = !DILocation(line: 4318, column: 15, scope: !7953)
!8121 = !DILocation(line: 4327, column: 39, scope: !7953)
!8122 = !DILocation(line: 4327, column: 17, scope: !7953)
!8123 = !DILocation(line: 4327, column: 15, scope: !7953)
!8124 = !DILocation(line: 4327, column: 65, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !7953, file: !21, line: 4327, column: 65)
!8126 = !DILocation(line: 4327, column: 65, scope: !7953)
!8127 = !DILocation(line: 4327, column: 92, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !21, line: 4327, column: 92)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !21, line: 4327, column: 92)
!8130 = !DILocation(line: 4327, column: 92, scope: !8129)
!8131 = !DILocation(line: 4328, column: 9, scope: !7963)
!8132 = !DILocation(line: 4328, column: 9, scope: !7953)
!8133 = !DILocation(line: 4337, column: 17, scope: !7962)
!8134 = !DILocation(line: 4338, column: 11, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !7962, file: !21, line: 4338, column: 11)
!8136 = !DILocation(line: 4338, column: 11, scope: !7962)
!8137 = !DILocation(line: 4339, column: 25, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8135, file: !21, line: 4338, column: 53)
!8139 = !DILocation(line: 4339, column: 9, scope: !8138)
!8140 = !DILocation(line: 4340, column: 9, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !21, line: 4340, column: 9)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !21, line: 4340, column: 9)
!8143 = !DILocation(line: 4340, column: 9, scope: !8142)
!8144 = !DILocation(line: 4342, column: 39, scope: !7962)
!8145 = !DILocation(line: 4342, column: 19, scope: !7962)
!8146 = !DILocation(line: 4342, column: 17, scope: !7962)
!8147 = !DILocation(line: 4342, column: 116, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !7962, file: !21, line: 4342, column: 116)
!8149 = !DILocation(line: 4342, column: 116, scope: !7962)
!8150 = !DILocation(line: 4342, column: 138, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !21, line: 4342, column: 138)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !21, line: 4342, column: 138)
!8153 = !DILocation(line: 4342, column: 138, scope: !8152)
!8154 = !DILocation(line: 4344, column: 7, scope: !7962)
!8155 = !DILocation(line: 4345, column: 19, scope: !7962)
!8156 = !DILocation(line: 4345, column: 17, scope: !7962)
!8157 = !DILocation(line: 4346, column: 17, scope: !7962)
!8158 = !DILocation(line: 4347, column: 7, scope: !7962)
!8159 = !DILocation(line: 4348, column: 42, scope: !7961)
!8160 = !DILocation(line: 4348, column: 53, scope: !7961)
!8161 = !DILocation(line: 4348, column: 100, scope: !7961)
!8162 = !DILocation(line: 4348, column: 21, scope: !7961)
!8163 = !DILocation(line: 4348, column: 19, scope: !7961)
!8164 = !DILocation(line: 4349, column: 13, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !7961, file: !21, line: 4349, column: 13)
!8166 = !DILocation(line: 4349, column: 13, scope: !7961)
!8167 = !DILocation(line: 4349, column: 39, scope: !8165)
!8168 = !DILocation(line: 4350, column: 13, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !7961, file: !21, line: 4350, column: 13)
!8170 = !DILocation(line: 4350, column: 13, scope: !7961)
!8171 = !DILocation(line: 4350, column: 40, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !21, line: 4350, column: 40)
!8173 = distinct !DILexicalBlock(scope: !8169, file: !21, line: 4350, column: 40)
!8174 = !DILocation(line: 4350, column: 40, scope: !8173)
!8175 = !DILocation(line: 4352, column: 15, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !7961, file: !21, line: 4352, column: 13)
!8177 = !DILocation(line: 4352, column: 13, scope: !7961)
!8178 = !DILocation(line: 4352, column: 129, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !21, line: 4352, column: 129)
!8180 = distinct !DILexicalBlock(scope: !8176, file: !21, line: 4352, column: 129)
!8181 = !DILocation(line: 4352, column: 129, scope: !8180)
!8182 = !DILocation(line: 4353, column: 9, scope: !7961)
!8183 = !DILocation(line: 4353, column: 9, scope: !7960)
!8184 = !DILocation(line: 4354, column: 19, scope: !7961)
!8185 = !DILocation(line: 4363, column: 71, scope: !7961)
!8186 = !DILocation(line: 4363, column: 90, scope: !7961)
!8187 = !DILocation(line: 4363, column: 21, scope: !7961)
!8188 = !DILocation(line: 4363, column: 19, scope: !7961)
!8189 = !DILocation(line: 4363, column: 111, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !7961, file: !21, line: 4363, column: 111)
!8191 = !DILocation(line: 4363, column: 111, scope: !7961)
!8192 = !DILocation(line: 4363, column: 133, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !21, line: 4363, column: 133)
!8194 = distinct !DILexicalBlock(scope: !8190, file: !21, line: 4363, column: 133)
!8195 = !DILocation(line: 4363, column: 133, scope: !8194)
!8196 = !DILocation(line: 4365, column: 9, scope: !7961)
!8197 = !DILocation(line: 4365, column: 44, scope: !7961)
!8198 = distinct !{!8198, !8158, !8199}
!8199 = !DILocation(line: 4366, column: 7, scope: !7962)
!8200 = !DILocation(line: 4367, column: 7, scope: !7962)
!8201 = !DILocation(line: 4367, column: 42, scope: !7962)
!8202 = !DILocation(line: 4376, column: 5, scope: !7962)
!8203 = !DILocation(line: 4385, column: 3, scope: !7953)
!8204 = !DILocation(line: 4396, column: 11, scope: !7927)
!8205 = !DILocation(line: 4396, column: 22, scope: !7927)
!8206 = !DILocation(line: 4397, column: 3, scope: !7927)
!8207 = !DILocation(line: 4398, column: 3, scope: !7927)
!8208 = !DILocation(line: 4399, column: 3, scope: !7927)
!8209 = !DILocation(line: 4400, column: 3, scope: !7927)
!8210 = !DILocation(line: 4401, column: 3, scope: !7927)
!8211 = !DILocation(line: 4402, column: 64, scope: !7927)
!8212 = !DILocation(line: 4402, column: 79, scope: !7927)
!8213 = !DILocation(line: 4402, column: 93, scope: !7927)
!8214 = !DILocation(line: 4402, column: 3, scope: !7927)
!8215 = !DILocation(line: 4403, column: 11, scope: !7927)
!8216 = !DILocation(line: 4403, column: 3, scope: !7927)
!8217 = !DILocation(line: 4404, column: 3, scope: !7927)
!8218 = !DILocation(line: 4405, column: 3, scope: !7927)
!8219 = !DILocation(line: 4406, column: 3, scope: !7927)
!8220 = !DILocation(line: 4409, column: 10, scope: !7927)
!8221 = !DILocation(line: 4409, column: 3, scope: !7927)
!8222 = !DILocation(line: 4410, column: 1, scope: !7927)
!8223 = !DISubprogram(name: "PyModule_AddObject", scope: !8224, file: !8224, line: 53, type: !2726, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8224 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/modsupport.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "4ef629af618d72a45b074c5cf2b75b47")
!8225 = !DISubprogram(name: "PyCapsule_New", scope: !8226, file: !8226, line: 28, type: !8227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8226 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pycapsule.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "bc4a90e95c580fae2ea2e52ffdbca7b9")
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!28, !27, !54, !8229}
!8229 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCapsule_Destructor", file: !8226, line: 23, baseType: !61)
!8230 = distinct !DISubprogram(name: "__Pyx_PyObject_CallNoArg", scope: !21, file: !21, line: 7540, type: !84, scopeLine: 7540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8231)
!8231 = !{!8232, !8233}
!8232 = !DILocalVariable(name: "func", arg: 1, scope: !8230, file: !21, line: 7540, type: !28)
!8233 = !DILocalVariable(name: "arg", scope: !8230, file: !21, line: 7541, type: !6663)
!8234 = !DILocation(line: 7540, column: 67, scope: !8230)
!8235 = !DILocation(line: 7541, column: 5, scope: !8230)
!8236 = !DILocation(line: 7541, column: 15, scope: !8230)
!8237 = !DILocation(line: 7542, column: 12, scope: !8230)
!8238 = !DILocation(line: 7543, column: 1, scope: !8230)
!8239 = !DILocation(line: 7542, column: 5, scope: !8230)
!8240 = distinct !DISubprogram(name: "__Pyx_PyObject_CallOneArg", scope: !21, file: !21, line: 7546, type: !105, scopeLine: 7546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8241)
!8241 = !{!8242, !8243, !8244}
!8242 = !DILocalVariable(name: "func", arg: 1, scope: !8240, file: !21, line: 7546, type: !28)
!8243 = !DILocalVariable(name: "arg", arg: 2, scope: !8240, file: !21, line: 7546, type: !28)
!8244 = !DILocalVariable(name: "args", scope: !8240, file: !21, line: 7547, type: !6663)
!8245 = !DILocation(line: 7546, column: 68, scope: !8240)
!8246 = !DILocation(line: 7546, column: 84, scope: !8240)
!8247 = !DILocation(line: 7547, column: 5, scope: !8240)
!8248 = !DILocation(line: 7547, column: 15, scope: !8240)
!8249 = !DILocation(line: 7547, column: 25, scope: !8240)
!8250 = !DILocation(line: 7547, column: 32, scope: !8240)
!8251 = !DILocation(line: 7548, column: 12, scope: !8240)
!8252 = !DILocation(line: 7549, column: 1, scope: !8240)
!8253 = !DILocation(line: 7548, column: 5, scope: !8240)
!8254 = distinct !DISubprogram(name: "__Pyx_dict_iterator", scope: !21, file: !21, line: 7777, type: !8255, scopeLine: 7778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8257)
!8255 = !DISubroutineType(types: !8256)
!8256 = !{!28, !28, !7, !28, !228, !1631}
!8257 = !{!8258, !8259, !8260, !8261, !8262, !8263}
!8258 = !DILocalVariable(name: "iterable", arg: 1, scope: !8254, file: !21, line: 7777, type: !28)
!8259 = !DILocalVariable(name: "is_dict", arg: 2, scope: !8254, file: !21, line: 7777, type: !7)
!8260 = !DILocalVariable(name: "method_name", arg: 3, scope: !8254, file: !21, line: 7777, type: !28)
!8261 = !DILocalVariable(name: "p_orig_length", arg: 4, scope: !8254, file: !21, line: 7778, type: !228)
!8262 = !DILocalVariable(name: "p_source_is_dict", arg: 5, scope: !8254, file: !21, line: 7778, type: !1631)
!8263 = !DILocalVariable(name: "iter", scope: !8264, file: !21, line: 7807, type: !28)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !21, line: 7806, column: 22)
!8265 = distinct !DILexicalBlock(scope: !8254, file: !21, line: 7806, column: 9)
!8266 = !DILocation(line: 7777, column: 62, scope: !8254)
!8267 = !DILocation(line: 7777, column: 76, scope: !8254)
!8268 = !DILocation(line: 7777, column: 95, scope: !8254)
!8269 = !DILocation(line: 7778, column: 64, scope: !8254)
!8270 = !DILocation(line: 7778, column: 84, scope: !8254)
!8271 = !DILocation(line: 7779, column: 15, scope: !8254)
!8272 = !DILocation(line: 7779, column: 23, scope: !8254)
!8273 = !DILocation(line: 7779, column: 26, scope: !8254)
!8274 = !DILocation(line: 7779, column: 13, scope: !8254)
!8275 = !DILocation(line: 7780, column: 25, scope: !8254)
!8276 = !DILocation(line: 7780, column: 6, scope: !8254)
!8277 = !DILocation(line: 7780, column: 23, scope: !8254)
!8278 = !DILocation(line: 7781, column: 9, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8254, file: !21, line: 7781, column: 9)
!8280 = !DILocation(line: 7781, column: 9, scope: !8254)
!8281 = !DILocation(line: 7783, column: 38, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8279, file: !21, line: 7781, column: 18)
!8283 = !DILocation(line: 7783, column: 26, scope: !8282)
!8284 = !DILocation(line: 7783, column: 10, scope: !8282)
!8285 = !DILocation(line: 7783, column: 24, scope: !8282)
!8286 = !DILocation(line: 7784, column: 9, scope: !8282)
!8287 = !DILocation(line: 7785, column: 16, scope: !8282)
!8288 = !DILocation(line: 7785, column: 9, scope: !8282)
!8289 = !DILocation(line: 7805, column: 6, scope: !8254)
!8290 = !DILocation(line: 7805, column: 20, scope: !8254)
!8291 = !DILocation(line: 7806, column: 9, scope: !8265)
!8292 = !DILocation(line: 7806, column: 9, scope: !8254)
!8293 = !DILocation(line: 7807, column: 9, scope: !8264)
!8294 = !DILocation(line: 7807, column: 19, scope: !8264)
!8295 = !DILocation(line: 7808, column: 47, scope: !8264)
!8296 = !DILocation(line: 7808, column: 57, scope: !8264)
!8297 = !DILocation(line: 7808, column: 20, scope: !8264)
!8298 = !DILocation(line: 7808, column: 18, scope: !8264)
!8299 = !DILocation(line: 7809, column: 14, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8264, file: !21, line: 7809, column: 13)
!8301 = !DILocation(line: 7809, column: 13, scope: !8264)
!8302 = !DILocation(line: 7810, column: 13, scope: !8300)
!8303 = !DILocation(line: 7812, column: 13, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8264, file: !21, line: 7812, column: 13)
!8305 = !DILocation(line: 7812, column: 42, scope: !8304)
!8306 = !DILocation(line: 7812, column: 45, scope: !8304)
!8307 = !DILocation(line: 7812, column: 13, scope: !8264)
!8308 = !DILocation(line: 7813, column: 20, scope: !8304)
!8309 = !DILocation(line: 7813, column: 13, scope: !8304)
!8310 = !DILocation(line: 7815, column: 33, scope: !8264)
!8311 = !DILocation(line: 7815, column: 16, scope: !8264)
!8312 = !DILocation(line: 7815, column: 14, scope: !8264)
!8313 = !DILocation(line: 7816, column: 9, scope: !8264)
!8314 = !DILocation(line: 7817, column: 16, scope: !8264)
!8315 = !DILocation(line: 7817, column: 9, scope: !8264)
!8316 = !DILocation(line: 7818, column: 5, scope: !8265)
!8317 = !DILocation(line: 7819, column: 29, scope: !8254)
!8318 = !DILocation(line: 7819, column: 12, scope: !8254)
!8319 = !DILocation(line: 7819, column: 5, scope: !8254)
!8320 = !DILocation(line: 7820, column: 1, scope: !8254)
!8321 = distinct !DISubprogram(name: "__Pyx_dict_iter_next", scope: !21, file: !21, line: 7821, type: !8322, scopeLine: 7823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8324)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!7, !28, !34, !228, !94, !94, !94, !7}
!8324 = !{!8325, !8326, !8327, !8328, !8329, !8330, !8331, !8332, !8333, !8336, !8337, !8340, !8343}
!8325 = !DILocalVariable(name: "iter_obj", arg: 1, scope: !8321, file: !21, line: 7822, type: !28)
!8326 = !DILocalVariable(name: "orig_length", arg: 2, scope: !8321, file: !21, line: 7822, type: !34)
!8327 = !DILocalVariable(name: "ppos", arg: 3, scope: !8321, file: !21, line: 7822, type: !228)
!8328 = !DILocalVariable(name: "pkey", arg: 4, scope: !8321, file: !21, line: 7823, type: !94)
!8329 = !DILocalVariable(name: "pvalue", arg: 5, scope: !8321, file: !21, line: 7823, type: !94)
!8330 = !DILocalVariable(name: "pitem", arg: 6, scope: !8321, file: !21, line: 7823, type: !94)
!8331 = !DILocalVariable(name: "source_is_dict", arg: 7, scope: !8321, file: !21, line: 7823, type: !7)
!8332 = !DILocalVariable(name: "next_item", scope: !8321, file: !21, line: 7824, type: !28)
!8333 = !DILocalVariable(name: "key", scope: !8334, file: !21, line: 7827, type: !28)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !21, line: 7826, column: 25)
!8335 = distinct !DILexicalBlock(scope: !8321, file: !21, line: 7826, column: 9)
!8336 = !DILocalVariable(name: "value", scope: !8334, file: !21, line: 7827, type: !28)
!8337 = !DILocalVariable(name: "tuple", scope: !8338, file: !21, line: 7836, type: !28)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !21, line: 7835, column: 20)
!8339 = distinct !DILexicalBlock(scope: !8334, file: !21, line: 7835, column: 13)
!8340 = !DILocalVariable(name: "pos", scope: !8341, file: !21, line: 7857, type: !34)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !21, line: 7856, column: 46)
!8342 = distinct !DILexicalBlock(scope: !8335, file: !21, line: 7856, column: 16)
!8343 = !DILocalVariable(name: "pos", scope: !8344, file: !21, line: 7863, type: !34)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !21, line: 7862, column: 45)
!8345 = distinct !DILexicalBlock(scope: !8342, file: !21, line: 7862, column: 16)
!8346 = !DILocation(line: 7822, column: 19, scope: !8321)
!8347 = !DILocation(line: 7822, column: 58, scope: !8321)
!8348 = !DILocation(line: 7822, column: 101, scope: !8321)
!8349 = !DILocation(line: 7823, column: 20, scope: !8321)
!8350 = !DILocation(line: 7823, column: 37, scope: !8321)
!8351 = !DILocation(line: 7823, column: 56, scope: !8321)
!8352 = !DILocation(line: 7823, column: 67, scope: !8321)
!8353 = !DILocation(line: 7824, column: 5, scope: !8321)
!8354 = !DILocation(line: 7824, column: 15, scope: !8321)
!8355 = !DILocation(line: 7826, column: 9, scope: !8335)
!8356 = !DILocation(line: 7826, column: 9, scope: !8321)
!8357 = !DILocation(line: 7827, column: 9, scope: !8334)
!8358 = !DILocation(line: 7827, column: 19, scope: !8334)
!8359 = !DILocation(line: 7827, column: 25, scope: !8334)
!8360 = !DILocation(line: 7828, column: 13, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8334, file: !21, line: 7828, column: 13)
!8362 = !DILocation(line: 7828, column: 13, scope: !8334)
!8363 = !DILocation(line: 7829, column: 29, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8361, file: !21, line: 7828, column: 61)
!8365 = !DILocation(line: 7829, column: 13, scope: !8364)
!8366 = !DILocation(line: 7830, column: 13, scope: !8364)
!8367 = !DILocation(line: 7832, column: 13, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8334, file: !21, line: 7832, column: 13)
!8369 = !DILocation(line: 7832, column: 13, scope: !8334)
!8370 = !DILocation(line: 7833, column: 13, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !21, line: 7832, column: 67)
!8372 = !DILocation(line: 7835, column: 13, scope: !8339)
!8373 = !DILocation(line: 7835, column: 13, scope: !8334)
!8374 = !DILocation(line: 7836, column: 13, scope: !8338)
!8375 = !DILocation(line: 7836, column: 23, scope: !8338)
!8376 = !DILocation(line: 7836, column: 31, scope: !8338)
!8377 = !DILocation(line: 7837, column: 17, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8338, file: !21, line: 7837, column: 17)
!8379 = !DILocation(line: 7837, column: 17, scope: !8338)
!8380 = !DILocation(line: 7838, column: 17, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8378, file: !21, line: 7837, column: 35)
!8382 = !DILocation(line: 7840, column: 13, scope: !8338)
!8383 = !DILocation(line: 7841, column: 13, scope: !8338)
!8384 = !DILocation(line: 7842, column: 13, scope: !8338)
!8385 = !DILocation(line: 7843, column: 13, scope: !8338)
!8386 = !DILocation(line: 7844, column: 22, scope: !8338)
!8387 = !DILocation(line: 7844, column: 14, scope: !8338)
!8388 = !DILocation(line: 7844, column: 20, scope: !8338)
!8389 = !DILocation(line: 7845, column: 9, scope: !8339)
!8390 = !DILocation(line: 7845, column: 9, scope: !8338)
!8391 = !DILocation(line: 7846, column: 17, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !21, line: 7846, column: 17)
!8393 = distinct !DILexicalBlock(scope: !8339, file: !21, line: 7845, column: 16)
!8394 = !DILocation(line: 7846, column: 17, scope: !8393)
!8395 = !DILocation(line: 7847, column: 17, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8392, file: !21, line: 7846, column: 23)
!8397 = !DILocation(line: 7848, column: 25, scope: !8396)
!8398 = !DILocation(line: 7848, column: 18, scope: !8396)
!8399 = !DILocation(line: 7848, column: 23, scope: !8396)
!8400 = !DILocation(line: 7849, column: 13, scope: !8396)
!8401 = !DILocation(line: 7850, column: 17, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8393, file: !21, line: 7850, column: 17)
!8403 = !DILocation(line: 7850, column: 17, scope: !8393)
!8404 = !DILocation(line: 7851, column: 17, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8402, file: !21, line: 7850, column: 25)
!8406 = !DILocation(line: 7852, column: 27, scope: !8405)
!8407 = !DILocation(line: 7852, column: 18, scope: !8405)
!8408 = !DILocation(line: 7852, column: 25, scope: !8405)
!8409 = !DILocation(line: 7853, column: 13, scope: !8405)
!8410 = !DILocation(line: 7855, column: 9, scope: !8334)
!8411 = !DILocation(line: 7856, column: 5, scope: !8335)
!8412 = !DILocation(line: 7856, column: 16, scope: !8342)
!8413 = !DILocation(line: 7856, column: 16, scope: !8335)
!8414 = !DILocation(line: 7857, column: 9, scope: !8341)
!8415 = !DILocation(line: 7857, column: 20, scope: !8341)
!8416 = !DILocation(line: 7857, column: 27, scope: !8341)
!8417 = !DILocation(line: 7857, column: 26, scope: !8341)
!8418 = !DILocation(line: 7858, column: 13, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8341, file: !21, line: 7858, column: 13)
!8420 = !DILocation(line: 7858, column: 13, scope: !8341)
!8421 = !DILocation(line: 7858, column: 58, scope: !8419)
!8422 = !DILocation(line: 7859, column: 17, scope: !8341)
!8423 = !DILocation(line: 7859, column: 21, scope: !8341)
!8424 = !DILocation(line: 7859, column: 10, scope: !8341)
!8425 = !DILocation(line: 7859, column: 15, scope: !8341)
!8426 = !DILocation(line: 7860, column: 21, scope: !8341)
!8427 = !DILocation(line: 7860, column: 19, scope: !8341)
!8428 = !DILocation(line: 7861, column: 9, scope: !8341)
!8429 = !DILocation(line: 7862, column: 5, scope: !8342)
!8430 = !DILocation(line: 7862, column: 5, scope: !8341)
!8431 = !DILocation(line: 7862, column: 16, scope: !8345)
!8432 = !DILocation(line: 7862, column: 16, scope: !8342)
!8433 = !DILocation(line: 7863, column: 9, scope: !8344)
!8434 = !DILocation(line: 7863, column: 20, scope: !8344)
!8435 = !DILocation(line: 7863, column: 27, scope: !8344)
!8436 = !DILocation(line: 7863, column: 26, scope: !8344)
!8437 = !DILocation(line: 7864, column: 13, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8344, file: !21, line: 7864, column: 13)
!8439 = !DILocation(line: 7864, column: 13, scope: !8344)
!8440 = !DILocation(line: 7864, column: 57, scope: !8438)
!8441 = !DILocation(line: 7865, column: 17, scope: !8344)
!8442 = !DILocation(line: 7865, column: 21, scope: !8344)
!8443 = !DILocation(line: 7865, column: 10, scope: !8344)
!8444 = !DILocation(line: 7865, column: 15, scope: !8344)
!8445 = !DILocation(line: 7866, column: 21, scope: !8344)
!8446 = !DILocation(line: 7866, column: 19, scope: !8344)
!8447 = !DILocation(line: 7867, column: 9, scope: !8344)
!8448 = !DILocation(line: 7868, column: 5, scope: !8345)
!8449 = !DILocation(line: 7868, column: 5, scope: !8344)
!8450 = !DILocation(line: 7871, column: 33, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8345, file: !21, line: 7870, column: 5)
!8452 = !DILocation(line: 7871, column: 21, scope: !8451)
!8453 = !DILocation(line: 7871, column: 19, scope: !8451)
!8454 = !DILocation(line: 7872, column: 13, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8451, file: !21, line: 7872, column: 13)
!8456 = !DILocation(line: 7872, column: 13, scope: !8451)
!8457 = !DILocation(line: 7873, column: 20, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8455, file: !21, line: 7872, column: 35)
!8459 = !DILocation(line: 7873, column: 13, scope: !8458)
!8460 = !DILocation(line: 7876, column: 9, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8321, file: !21, line: 7876, column: 9)
!8462 = !DILocation(line: 7876, column: 9, scope: !8321)
!8463 = !DILocation(line: 7877, column: 18, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8461, file: !21, line: 7876, column: 16)
!8465 = !DILocation(line: 7877, column: 10, scope: !8464)
!8466 = !DILocation(line: 7877, column: 16, scope: !8464)
!8467 = !DILocation(line: 7878, column: 5, scope: !8464)
!8468 = !DILocation(line: 7878, column: 16, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8461, file: !21, line: 7878, column: 16)
!8470 = !DILocation(line: 7878, column: 21, scope: !8469)
!8471 = !DILocation(line: 7878, column: 24, scope: !8469)
!8472 = !DILocation(line: 7878, column: 16, scope: !8461)
!8473 = !DILocation(line: 7879, column: 13, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !21, line: 7879, column: 13)
!8475 = distinct !DILexicalBlock(scope: !8469, file: !21, line: 7878, column: 32)
!8476 = !DILocation(line: 7879, column: 13, scope: !8475)
!8477 = !DILocation(line: 7880, column: 13, scope: !8474)
!8478 = !DILocation(line: 7881, column: 5, scope: !8475)
!8479 = !DILocation(line: 7881, column: 16, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8469, file: !21, line: 7881, column: 16)
!8481 = !DILocation(line: 7881, column: 16, scope: !8469)
!8482 = !DILocation(line: 7882, column: 17, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8480, file: !21, line: 7881, column: 22)
!8484 = !DILocation(line: 7882, column: 10, scope: !8483)
!8485 = !DILocation(line: 7882, column: 15, scope: !8483)
!8486 = !DILocation(line: 7883, column: 5, scope: !8483)
!8487 = !DILocation(line: 7884, column: 19, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8480, file: !21, line: 7883, column: 12)
!8489 = !DILocation(line: 7884, column: 10, scope: !8488)
!8490 = !DILocation(line: 7884, column: 17, scope: !8488)
!8491 = !DILocation(line: 7886, column: 5, scope: !8321)
!8492 = !DILocation(line: 7887, column: 1, scope: !8321)
!8493 = distinct !DISubprogram(name: "__Pyx_TypeTest", scope: !21, file: !21, line: 7890, type: !8494, scopeLine: 7890, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8496)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{!7, !28, !42}
!8496 = !{!8497, !8498, !8499, !8501}
!8497 = !DILocalVariable(name: "obj", arg: 1, scope: !8493, file: !21, line: 7890, type: !28)
!8498 = !DILocalVariable(name: "type", arg: 2, scope: !8493, file: !21, line: 7890, type: !42)
!8499 = !DILocalVariable(name: "obj_type_name", scope: !8493, file: !21, line: 7891, type: !8500)
!8500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_TypeName", file: !21, line: 2532, baseType: !54)
!8501 = !DILocalVariable(name: "type_name", scope: !8493, file: !21, line: 7892, type: !8500)
!8502 = !DILocation(line: 7890, column: 51, scope: !8493)
!8503 = !DILocation(line: 7890, column: 70, scope: !8493)
!8504 = !DILocation(line: 7891, column: 5, scope: !8493)
!8505 = !DILocation(line: 7891, column: 20, scope: !8493)
!8506 = !DILocation(line: 7892, column: 5, scope: !8493)
!8507 = !DILocation(line: 7892, column: 20, scope: !8493)
!8508 = !DILocation(line: 7893, column: 9, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8493, file: !21, line: 7893, column: 9)
!8510 = !DILocation(line: 7893, column: 9, scope: !8493)
!8511 = !DILocation(line: 7894, column: 25, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8509, file: !21, line: 7893, column: 26)
!8513 = !DILocation(line: 7894, column: 9, scope: !8512)
!8514 = !DILocation(line: 7895, column: 9, scope: !8512)
!8515 = !DILocation(line: 7897, column: 9, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8493, file: !21, line: 7897, column: 9)
!8517 = !DILocation(line: 7897, column: 9, scope: !8493)
!8518 = !DILocation(line: 7898, column: 9, scope: !8516)
!8519 = !DILocation(line: 7899, column: 21, scope: !8493)
!8520 = !DILocation(line: 7899, column: 19, scope: !8493)
!8521 = !DILocation(line: 7900, column: 17, scope: !8493)
!8522 = !DILocation(line: 7900, column: 15, scope: !8493)
!8523 = !DILocation(line: 7901, column: 18, scope: !8493)
!8524 = !DILocation(line: 7903, column: 18, scope: !8493)
!8525 = !DILocation(line: 7903, column: 33, scope: !8493)
!8526 = !DILocation(line: 7901, column: 5, scope: !8493)
!8527 = !DILocation(line: 7906, column: 5, scope: !8493)
!8528 = !DILocation(line: 7907, column: 1, scope: !8493)
!8529 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA_8StateMap_old_to_new", scope: !21, file: !21, line: 4582, type: !433, scopeLine: 4582, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8530)
!8530 = !{!8531, !8532, !8533, !8534, !8535, !8536, !8537, !8538, !8539, !8540, !8541, !8542, !8543, !8544, !8545, !8546, !8553, !8555, !8557, !8559, !8560}
!8531 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !8529, file: !21, line: 4582, type: !423)
!8532 = !DILocalVariable(name: "__pyx_v_old_state_set", arg: 2, scope: !8529, file: !21, line: 4582, type: !28)
!8533 = !DILocalVariable(name: "__pyx_v_key", scope: !8529, file: !21, line: 4583, type: !28)
!8534 = !DILocalVariable(name: "__pyx_v_new_state", scope: !8529, file: !21, line: 4584, type: !28)
!8535 = !DILocalVariable(name: "__pyx_v_action", scope: !8529, file: !21, line: 4585, type: !28)
!8536 = !DILocalVariable(name: "__pyx_r", scope: !8529, file: !21, line: 4586, type: !28)
!8537 = !DILocalVariable(name: "__pyx_t_1", scope: !8529, file: !21, line: 4588, type: !28)
!8538 = !DILocalVariable(name: "__pyx_t_2", scope: !8529, file: !21, line: 4589, type: !7)
!8539 = !DILocalVariable(name: "__pyx_t_3", scope: !8529, file: !21, line: 4590, type: !7)
!8540 = !DILocalVariable(name: "__pyx_t_4", scope: !8529, file: !21, line: 4591, type: !28)
!8541 = !DILocalVariable(name: "__pyx_t_5", scope: !8529, file: !21, line: 4592, type: !28)
!8542 = !DILocalVariable(name: "__pyx_t_6", scope: !8529, file: !21, line: 4593, type: !7)
!8543 = !DILocalVariable(name: "__pyx_lineno", scope: !8529, file: !21, line: 4594, type: !7)
!8544 = !DILocalVariable(name: "__pyx_filename", scope: !8529, file: !21, line: 4595, type: !54)
!8545 = !DILocalVariable(name: "__pyx_clineno", scope: !8529, file: !21, line: 4596, type: !7)
!8546 = !DILocalVariable(name: "function", scope: !8547, file: !21, line: 4665, type: !28)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !21, line: 4664, column: 30)
!8548 = distinct !DILexicalBlock(scope: !8549, file: !21, line: 4664, column: 11)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !21, line: 4662, column: 44)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4662, column: 9)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !21, line: 4636, column: 18)
!8552 = distinct !DILexicalBlock(scope: !8529, file: !21, line: 4636, column: 7)
!8553 = !DILocalVariable(name: "tmp", scope: !8554, file: !21, line: 4668, type: !28)
!8554 = distinct !DILexicalBlock(scope: !8547, file: !21, line: 4668, column: 9)
!8555 = !DILocalVariable(name: "__pyx_callargs", scope: !8556, file: !21, line: 4674, type: !6663)
!8556 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4673, column: 5)
!8557 = !DILocalVariable(name: "tmp", scope: !8558, file: !21, line: 4681, type: !28)
!8558 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4681, column: 5)
!8559 = !DILabel(scope: !8529, name: "__pyx_L1_error", file: !21, line: 4743)
!8560 = !DILabel(scope: !8529, name: "__pyx_L0", file: !21, line: 4749)
!8561 = !DILocation(line: 4582, column: 112, scope: !8529)
!8562 = !DILocation(line: 4582, column: 136, scope: !8529)
!8563 = !DILocation(line: 4583, column: 3, scope: !8529)
!8564 = !DILocation(line: 4583, column: 13, scope: !8529)
!8565 = !DILocation(line: 4584, column: 3, scope: !8529)
!8566 = !DILocation(line: 4584, column: 13, scope: !8529)
!8567 = !DILocation(line: 4585, column: 3, scope: !8529)
!8568 = !DILocation(line: 4585, column: 13, scope: !8529)
!8569 = !DILocation(line: 4586, column: 3, scope: !8529)
!8570 = !DILocation(line: 4586, column: 13, scope: !8529)
!8571 = !DILocation(line: 4588, column: 3, scope: !8529)
!8572 = !DILocation(line: 4588, column: 13, scope: !8529)
!8573 = !DILocation(line: 4589, column: 3, scope: !8529)
!8574 = !DILocation(line: 4589, column: 7, scope: !8529)
!8575 = !DILocation(line: 4590, column: 3, scope: !8529)
!8576 = !DILocation(line: 4590, column: 7, scope: !8529)
!8577 = !DILocation(line: 4591, column: 3, scope: !8529)
!8578 = !DILocation(line: 4591, column: 13, scope: !8529)
!8579 = !DILocation(line: 4592, column: 3, scope: !8529)
!8580 = !DILocation(line: 4592, column: 13, scope: !8529)
!8581 = !DILocation(line: 4593, column: 3, scope: !8529)
!8582 = !DILocation(line: 4593, column: 7, scope: !8529)
!8583 = !DILocation(line: 4594, column: 3, scope: !8529)
!8584 = !DILocation(line: 4594, column: 7, scope: !8529)
!8585 = !DILocation(line: 4595, column: 3, scope: !8529)
!8586 = !DILocation(line: 4595, column: 15, scope: !8529)
!8587 = !DILocation(line: 4596, column: 3, scope: !8529)
!8588 = !DILocation(line: 4596, column: 7, scope: !8529)
!8589 = !DILocation(line: 4606, column: 61, scope: !8529)
!8590 = !DILocation(line: 4606, column: 75, scope: !8529)
!8591 = !DILocation(line: 4606, column: 15, scope: !8529)
!8592 = !DILocation(line: 4606, column: 13, scope: !8529)
!8593 = !DILocation(line: 4606, column: 103, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8529, file: !21, line: 4606, column: 103)
!8595 = !DILocation(line: 4606, column: 103, scope: !8529)
!8596 = !DILocation(line: 4606, column: 125, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !21, line: 4606, column: 125)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !21, line: 4606, column: 125)
!8599 = !DILocation(line: 4606, column: 125, scope: !8598)
!8600 = !DILocation(line: 4608, column: 17, scope: !8529)
!8601 = !DILocation(line: 4608, column: 15, scope: !8529)
!8602 = !DILocation(line: 4609, column: 13, scope: !8529)
!8603 = !DILocation(line: 4618, column: 7, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8529, file: !21, line: 4618, column: 7)
!8605 = !{!8606, !1900, i64 32}
!8606 = !{!"__pyx_obj_6Cython_4Plex_3DFA_StateMap", !2423, i64 0, !1900, i64 16, !1900, i64 24, !1900, i64 32, !1900, i64 40}
!8607 = !DILocation(line: 4618, column: 7, scope: !8529)
!8608 = !DILocation(line: 4619, column: 18, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8604, file: !21, line: 4618, column: 59)
!8610 = !DILocation(line: 4619, column: 5, scope: !8609)
!8611 = !DILocation(line: 4620, column: 5, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !21, line: 4620, column: 5)
!8613 = distinct !DILexicalBlock(scope: !8609, file: !21, line: 4620, column: 5)
!8614 = !DILocation(line: 4620, column: 5, scope: !8613)
!8615 = !DILocation(line: 4622, column: 43, scope: !8529)
!8616 = !DILocation(line: 4622, column: 57, scope: !8529)
!8617 = !DILocation(line: 4622, column: 74, scope: !8529)
!8618 = !DILocation(line: 4622, column: 15, scope: !8529)
!8619 = !DILocation(line: 4622, column: 13, scope: !8529)
!8620 = !DILocation(line: 4622, column: 101, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8529, file: !21, line: 4622, column: 101)
!8622 = !DILocation(line: 4622, column: 101, scope: !8529)
!8623 = !DILocation(line: 4622, column: 123, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !21, line: 4622, column: 123)
!8625 = distinct !DILexicalBlock(scope: !8621, file: !21, line: 4622, column: 123)
!8626 = !DILocation(line: 4622, column: 123, scope: !8625)
!8627 = !DILocation(line: 4624, column: 23, scope: !8529)
!8628 = !DILocation(line: 4624, column: 21, scope: !8529)
!8629 = !DILocation(line: 4625, column: 13, scope: !8529)
!8630 = !DILocation(line: 4634, column: 37, scope: !8529)
!8631 = !DILocation(line: 4634, column: 15, scope: !8529)
!8632 = !DILocation(line: 4634, column: 13, scope: !8529)
!8633 = !DILocation(line: 4634, column: 61, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8529, file: !21, line: 4634, column: 61)
!8635 = !DILocation(line: 4634, column: 61, scope: !8529)
!8636 = !DILocation(line: 4634, column: 88, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !21, line: 4634, column: 88)
!8638 = distinct !DILexicalBlock(scope: !8634, file: !21, line: 4634, column: 88)
!8639 = !DILocation(line: 4634, column: 88, scope: !8638)
!8640 = !DILocation(line: 4635, column: 17, scope: !8529)
!8641 = !DILocation(line: 4635, column: 16, scope: !8529)
!8642 = !DILocation(line: 4635, column: 13, scope: !8529)
!8643 = !DILocation(line: 4636, column: 7, scope: !8552)
!8644 = !DILocation(line: 4636, column: 7, scope: !8529)
!8645 = !DILocation(line: 4645, column: 78, scope: !8551)
!8646 = !DILocation(line: 4645, column: 92, scope: !8551)
!8647 = !DILocation(line: 4645, column: 17, scope: !8551)
!8648 = !DILocation(line: 4645, column: 15, scope: !8551)
!8649 = !DILocation(line: 4645, column: 120, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4645, column: 120)
!8651 = !DILocation(line: 4645, column: 120, scope: !8551)
!8652 = !DILocation(line: 4645, column: 142, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !21, line: 4645, column: 142)
!8654 = distinct !DILexicalBlock(scope: !8650, file: !21, line: 4645, column: 142)
!8655 = !DILocation(line: 4645, column: 142, scope: !8654)
!8656 = !DILocation(line: 4647, column: 22, scope: !8551)
!8657 = !DILocation(line: 4647, column: 20, scope: !8551)
!8658 = !DILocation(line: 4648, column: 15, scope: !8551)
!8659 = !DILocation(line: 4657, column: 56, scope: !8551)
!8660 = !DILocation(line: 4657, column: 70, scope: !8551)
!8661 = !{!8606, !1900, i64 24}
!8662 = !DILocation(line: 4657, column: 84, scope: !8551)
!8663 = !DILocation(line: 4657, column: 17, scope: !8551)
!8664 = !DILocation(line: 4657, column: 15, scope: !8551)
!8665 = !DILocation(line: 4657, column: 110, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4657, column: 110)
!8667 = !DILocation(line: 4657, column: 110, scope: !8551)
!8668 = !DILocation(line: 4657, column: 132, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !21, line: 4657, column: 132)
!8670 = distinct !DILexicalBlock(scope: !8666, file: !21, line: 4657, column: 132)
!8671 = !DILocation(line: 4657, column: 132, scope: !8670)
!8672 = !DILocation(line: 4659, column: 15, scope: !8551)
!8673 = !DILocation(line: 4660, column: 15, scope: !8551)
!8674 = !DILocation(line: 4662, column: 9, scope: !8550)
!8675 = !DILocation(line: 4662, column: 9, scope: !8551)
!8676 = !DILocation(line: 4663, column: 19, scope: !8549)
!8677 = !DILocation(line: 4663, column: 17, scope: !8549)
!8678 = !DILocation(line: 4664, column: 11, scope: !8548)
!8679 = !DILocation(line: 4664, column: 11, scope: !8549)
!8680 = !DILocation(line: 4665, column: 9, scope: !8547)
!8681 = !DILocation(line: 4665, column: 19, scope: !8547)
!8682 = !DILocation(line: 4665, column: 30, scope: !8547)
!8683 = !DILocation(line: 4666, column: 9, scope: !8547)
!8684 = !DILocation(line: 4667, column: 9, scope: !8547)
!8685 = !DILocation(line: 4668, column: 9, scope: !8547)
!8686 = !DILocation(line: 4668, column: 9, scope: !8554)
!8687 = !DILocation(line: 4669, column: 19, scope: !8547)
!8688 = !DILocation(line: 4670, column: 7, scope: !8548)
!8689 = !DILocation(line: 4670, column: 7, scope: !8547)
!8690 = !DILocation(line: 4671, column: 5, scope: !8549)
!8691 = !DILocation(line: 4674, column: 7, scope: !8556)
!8692 = !DILocation(line: 4674, column: 17, scope: !8556)
!8693 = !DILocation(line: 4674, column: 37, scope: !8556)
!8694 = !DILocation(line: 4674, column: 38, scope: !8556)
!8695 = !DILocation(line: 4674, column: 49, scope: !8556)
!8696 = !DILocation(line: 4675, column: 19, scope: !8556)
!8697 = !DILocation(line: 4675, column: 17, scope: !8556)
!8698 = !DILocation(line: 4676, column: 7, scope: !8556)
!8699 = !DILocation(line: 4676, column: 43, scope: !8556)
!8700 = !DILocation(line: 4677, column: 11, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8556, file: !21, line: 4677, column: 11)
!8702 = !DILocation(line: 4677, column: 11, scope: !8556)
!8703 = !DILocation(line: 4677, column: 33, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !21, line: 4677, column: 33)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !21, line: 4677, column: 33)
!8706 = !DILocation(line: 4677, column: 33, scope: !8705)
!8707 = !DILocation(line: 4679, column: 7, scope: !8556)
!8708 = !DILocation(line: 4679, column: 42, scope: !8556)
!8709 = !DILocation(line: 4680, column: 5, scope: !8551)
!8710 = !DILocation(line: 4681, column: 5, scope: !8551)
!8711 = !DILocation(line: 4681, column: 5, scope: !8558)
!8712 = !DILocation(line: 4682, column: 15, scope: !8551)
!8713 = !DILocation(line: 4691, column: 9, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4691, column: 9)
!8715 = !DILocation(line: 4691, column: 9, scope: !8551)
!8716 = !DILocation(line: 4692, column: 23, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8714, file: !21, line: 4691, column: 61)
!8718 = !DILocation(line: 4692, column: 7, scope: !8717)
!8719 = !DILocation(line: 4693, column: 7, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !21, line: 4693, column: 7)
!8721 = distinct !DILexicalBlock(scope: !8717, file: !21, line: 4693, column: 7)
!8722 = !DILocation(line: 4693, column: 7, scope: !8721)
!8723 = !DILocation(line: 4695, column: 9, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4695, column: 9)
!8725 = !DILocation(line: 4695, column: 9, scope: !8551)
!8726 = !DILocation(line: 4695, column: 104, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !21, line: 4695, column: 104)
!8728 = distinct !DILexicalBlock(scope: !8724, file: !21, line: 4695, column: 104)
!8729 = !DILocation(line: 4695, column: 104, scope: !8728)
!8730 = !DILocation(line: 4704, column: 9, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4704, column: 9)
!8732 = !{!8606, !1900, i64 40}
!8733 = !DILocation(line: 4704, column: 9, scope: !8551)
!8734 = !DILocation(line: 4705, column: 23, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8731, file: !21, line: 4704, column: 61)
!8736 = !DILocation(line: 4705, column: 7, scope: !8735)
!8737 = !DILocation(line: 4706, column: 7, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !21, line: 4706, column: 7)
!8739 = distinct !DILexicalBlock(scope: !8735, file: !21, line: 4706, column: 7)
!8740 = !DILocation(line: 4706, column: 7, scope: !8739)
!8741 = !DILocation(line: 4708, column: 43, scope: !8551)
!8742 = !DILocation(line: 4708, column: 61, scope: !8551)
!8743 = !DILocation(line: 4708, column: 17, scope: !8551)
!8744 = !DILocation(line: 4708, column: 15, scope: !8551)
!8745 = !DILocation(line: 4708, column: 85, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4708, column: 85)
!8747 = !DILocation(line: 4708, column: 85, scope: !8551)
!8748 = !DILocation(line: 4708, column: 107, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8750, file: !21, line: 4708, column: 107)
!8750 = distinct !DILexicalBlock(scope: !8746, file: !21, line: 4708, column: 107)
!8751 = !DILocation(line: 4708, column: 107, scope: !8750)
!8752 = !DILocation(line: 4710, column: 9, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 4710, column: 9)
!8754 = !DILocation(line: 4710, column: 9, scope: !8551)
!8755 = !DILocation(line: 4710, column: 106, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !21, line: 4710, column: 106)
!8757 = distinct !DILexicalBlock(scope: !8753, file: !21, line: 4710, column: 106)
!8758 = !DILocation(line: 4710, column: 106, scope: !8757)
!8759 = !DILocation(line: 4711, column: 5, scope: !8551)
!8760 = !DILocation(line: 4711, column: 40, scope: !8551)
!8761 = !DILocation(line: 4720, column: 3, scope: !8551)
!8762 = !DILocation(line: 4729, column: 3, scope: !8529)
!8763 = !DILocation(line: 4730, column: 3, scope: !8529)
!8764 = !DILocation(line: 4731, column: 13, scope: !8529)
!8765 = !DILocation(line: 4731, column: 11, scope: !8529)
!8766 = !DILocation(line: 4732, column: 3, scope: !8529)
!8767 = !DILocation(line: 4743, column: 3, scope: !8529)
!8768 = !DILocation(line: 4744, column: 3, scope: !8529)
!8769 = !DILocation(line: 4745, column: 3, scope: !8529)
!8770 = !DILocation(line: 4746, column: 3, scope: !8529)
!8771 = !DILocation(line: 4747, column: 61, scope: !8529)
!8772 = !DILocation(line: 4747, column: 76, scope: !8529)
!8773 = !DILocation(line: 4747, column: 90, scope: !8529)
!8774 = !DILocation(line: 4747, column: 3, scope: !8529)
!8775 = !DILocation(line: 4748, column: 11, scope: !8529)
!8776 = !DILocation(line: 4748, column: 3, scope: !8529)
!8777 = !DILocation(line: 4749, column: 3, scope: !8529)
!8778 = !DILocation(line: 4750, column: 3, scope: !8529)
!8779 = !DILocation(line: 4751, column: 3, scope: !8529)
!8780 = !DILocation(line: 4752, column: 3, scope: !8529)
!8781 = !DILocation(line: 4755, column: 10, scope: !8529)
!8782 = !DILocation(line: 4755, column: 3, scope: !8529)
!8783 = !DILocation(line: 4756, column: 1, scope: !8529)
!8784 = distinct !DISubprogram(name: "Py_IS_TYPE", scope: !6, file: !6, line: 149, type: !8494, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8785)
!8785 = !{!8786, !8787}
!8786 = !DILocalVariable(name: "ob", arg: 1, scope: !8784, file: !6, line: 149, type: !28)
!8787 = !DILocalVariable(name: "type", arg: 2, scope: !8784, file: !6, line: 149, type: !42)
!8788 = !DILocation(line: 149, column: 40, scope: !8784)
!8789 = !DILocation(line: 149, column: 58, scope: !8784)
!8790 = !DILocation(line: 150, column: 12, scope: !8784)
!8791 = !DILocation(line: 150, column: 27, scope: !8784)
!8792 = !DILocation(line: 150, column: 24, scope: !8784)
!8793 = !DILocation(line: 150, column: 5, scope: !8784)
!8794 = distinct !DISubprogram(name: "__Pyx_PyObject_FastCallDict", scope: !21, file: !21, line: 7479, type: !8795, scopeLine: 7479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8797)
!8795 = !DISubroutineType(types: !8796)
!8796 = !{!28, !28, !94, !341, !28}
!8797 = !{!8798, !8799, !8800, !8801, !8802, !8803}
!8798 = !DILocalVariable(name: "func", arg: 1, scope: !8794, file: !21, line: 7479, type: !28)
!8799 = !DILocalVariable(name: "args", arg: 2, scope: !8794, file: !21, line: 7479, type: !94)
!8800 = !DILocalVariable(name: "_nargs", arg: 3, scope: !8794, file: !21, line: 7479, type: !341)
!8801 = !DILocalVariable(name: "kwargs", arg: 4, scope: !8794, file: !21, line: 7479, type: !28)
!8802 = !DILocalVariable(name: "nargs", scope: !8794, file: !21, line: 7480, type: !34)
!8803 = !DILocalVariable(name: "f", scope: !8804, file: !21, line: 7515, type: !335)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !21, line: 7512, column: 25)
!8805 = distinct !DILexicalBlock(scope: !8794, file: !21, line: 7512, column: 9)
!8806 = !DILocation(line: 7479, column: 70, scope: !8794)
!8807 = !DILocation(line: 7479, column: 87, scope: !8794)
!8808 = !DILocation(line: 7479, column: 100, scope: !8794)
!8809 = !DILocation(line: 7479, column: 118, scope: !8794)
!8810 = !DILocation(line: 7480, column: 5, scope: !8794)
!8811 = !DILocation(line: 7480, column: 16, scope: !8794)
!8812 = !DILocation(line: 7480, column: 24, scope: !8794)
!8813 = !DILocation(line: 7482, column: 9, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8794, file: !21, line: 7482, column: 9)
!8815 = !DILocation(line: 7482, column: 15, scope: !8814)
!8816 = !DILocation(line: 7482, column: 20, scope: !8814)
!8817 = !DILocation(line: 7482, column: 23, scope: !8814)
!8818 = !DILocation(line: 7482, column: 30, scope: !8814)
!8819 = !DILocation(line: 7482, column: 9, scope: !8794)
!8820 = !DILocation(line: 7483, column: 13, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !21, line: 7483, column: 13)
!8822 = distinct !DILexicalBlock(scope: !8814, file: !21, line: 7482, column: 39)
!8823 = !DILocation(line: 7483, column: 47, scope: !8821)
!8824 = !DILocation(line: 7483, column: 50, scope: !8821)
!8825 = !DILocation(line: 7483, column: 13, scope: !8822)
!8826 = !DILocation(line: 7484, column: 45, scope: !8821)
!8827 = !DILocation(line: 7484, column: 20, scope: !8821)
!8828 = !DILocation(line: 7484, column: 13, scope: !8821)
!8829 = !DILocation(line: 7485, column: 5, scope: !8822)
!8830 = !DILocation(line: 7486, column: 14, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8814, file: !21, line: 7486, column: 14)
!8832 = !DILocation(line: 7486, column: 20, scope: !8831)
!8833 = !DILocation(line: 7486, column: 25, scope: !8831)
!8834 = !DILocation(line: 7486, column: 28, scope: !8831)
!8835 = !DILocation(line: 7486, column: 35, scope: !8831)
!8836 = !DILocation(line: 7486, column: 14, scope: !8814)
!8837 = !DILocation(line: 7487, column: 13, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !21, line: 7487, column: 13)
!8839 = distinct !DILexicalBlock(scope: !8831, file: !21, line: 7486, column: 44)
!8840 = !DILocation(line: 7487, column: 47, scope: !8838)
!8841 = !DILocation(line: 7487, column: 50, scope: !8838)
!8842 = !DILocation(line: 7487, column: 13, scope: !8839)
!8843 = !DILocation(line: 7488, column: 45, scope: !8838)
!8844 = !DILocation(line: 7488, column: 51, scope: !8838)
!8845 = !DILocation(line: 7488, column: 20, scope: !8838)
!8846 = !DILocation(line: 7488, column: 13, scope: !8838)
!8847 = !DILocation(line: 7489, column: 5, scope: !8839)
!8848 = !DILocation(line: 7512, column: 9, scope: !8805)
!8849 = !DILocation(line: 7512, column: 16, scope: !8805)
!8850 = !DILocation(line: 7512, column: 9, scope: !8794)
!8851 = !DILocation(line: 7515, column: 9, scope: !8804)
!8852 = !DILocation(line: 7515, column: 24, scope: !8804)
!8853 = !DILocation(line: 7515, column: 51, scope: !8804)
!8854 = !DILocation(line: 7515, column: 28, scope: !8804)
!8855 = !DILocation(line: 7519, column: 13, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8804, file: !21, line: 7519, column: 13)
!8857 = !DILocation(line: 7519, column: 13, scope: !8804)
!8858 = !DILocation(line: 7520, column: 20, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8856, file: !21, line: 7519, column: 16)
!8860 = !DILocation(line: 7520, column: 22, scope: !8859)
!8861 = !DILocation(line: 7520, column: 28, scope: !8859)
!8862 = !DILocation(line: 7520, column: 42, scope: !8859)
!8863 = !DILocation(line: 7520, column: 13, scope: !8859)
!8864 = !DILocation(line: 7528, column: 5, scope: !8805)
!8865 = !DILocation(line: 7528, column: 5, scope: !8804)
!8866 = !DILocation(line: 7529, column: 9, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8794, file: !21, line: 7529, column: 9)
!8868 = !DILocation(line: 7529, column: 15, scope: !8867)
!8869 = !DILocation(line: 7529, column: 9, scope: !8794)
!8870 = !DILocation(line: 7530, column: 36, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !21, line: 7529, column: 21)
!8872 = !DILocation(line: 7530, column: 42, scope: !8871)
!8873 = !DILocation(line: 7530, column: 61, scope: !8871)
!8874 = !DILocation(line: 7530, column: 16, scope: !8871)
!8875 = !DILocation(line: 7530, column: 9, scope: !8871)
!8876 = !DILocation(line: 7533, column: 36, scope: !8794)
!8877 = !DILocation(line: 7533, column: 42, scope: !8794)
!8878 = !DILocation(line: 7533, column: 56, scope: !8794)
!8879 = !DILocation(line: 7533, column: 63, scope: !8794)
!8880 = !DILocation(line: 7533, column: 12, scope: !8794)
!8881 = !DILocation(line: 7533, column: 5, scope: !8794)
!8882 = !DILocation(line: 7537, column: 1, scope: !8794)
!8883 = distinct !DISubprogram(name: "PyList_GET_SIZE", scope: !500, file: !500, line: 33, type: !158, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8884)
!8884 = !{!8885, !8886}
!8885 = !DILocalVariable(name: "op", arg: 1, scope: !8883, file: !500, line: 33, type: !28)
!8886 = !DILocalVariable(name: "list", scope: !8883, file: !500, line: 34, type: !498)
!8887 = !DILocation(line: 33, column: 52, scope: !8883)
!8888 = !DILocation(line: 34, column: 5, scope: !8883)
!8889 = !DILocation(line: 34, column: 19, scope: !8883)
!8890 = !DILocation(line: 34, column: 26, scope: !8883)
!8891 = !DILocation(line: 35, column: 12, scope: !8883)
!8892 = !DILocation(line: 36, column: 1, scope: !8883)
!8893 = !DILocation(line: 35, column: 5, scope: !8883)
!8894 = !DISubprogram(name: "PyObject_GetIter", scope: !8895, file: !8895, line: 372, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8895 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/abstract.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "c6c7b7821c389c947e1fc710c923c80c")
!8896 = distinct !DISubprogram(name: "__Pyx_PyObject_IsTrue", scope: !21, file: !21, line: 12270, type: !122, scopeLine: 12270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8897)
!8897 = !{!8898, !8899}
!8898 = !DILocalVariable(name: "x", arg: 1, scope: !8896, file: !21, line: 12270, type: !28)
!8899 = !DILocalVariable(name: "is_true", scope: !8896, file: !21, line: 12271, type: !7)
!8900 = !DILocation(line: 12270, column: 58, scope: !8896)
!8901 = !DILocation(line: 12271, column: 4, scope: !8896)
!8902 = !DILocation(line: 12271, column: 8, scope: !8896)
!8903 = !DILocation(line: 12271, column: 18, scope: !8896)
!8904 = !DILocation(line: 12271, column: 20, scope: !8896)
!8905 = !DILocation(line: 12272, column: 8, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8896, file: !21, line: 12272, column: 8)
!8907 = !DILocation(line: 12272, column: 19, scope: !8906)
!8908 = !DILocation(line: 12272, column: 21, scope: !8906)
!8909 = !DILocation(line: 12272, column: 16, scope: !8906)
!8910 = !DILocation(line: 12272, column: 37, scope: !8906)
!8911 = !DILocation(line: 12272, column: 39, scope: !8906)
!8912 = !DILocation(line: 12272, column: 34, scope: !8906)
!8913 = !DILocation(line: 12272, column: 8, scope: !8896)
!8914 = !DILocation(line: 12272, column: 59, scope: !8906)
!8915 = !DILocation(line: 12272, column: 52, scope: !8906)
!8916 = !DILocation(line: 12273, column: 32, scope: !8906)
!8917 = !DILocation(line: 12273, column: 16, scope: !8906)
!8918 = !DILocation(line: 12273, column: 9, scope: !8906)
!8919 = !DILocation(line: 12274, column: 1, scope: !8896)
!8920 = distinct !DISubprogram(name: "__Pyx_RaiseUnexpectedTypeError", scope: !21, file: !21, line: 7911, type: !8921, scopeLine: 7912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8923)
!8921 = !DISubroutineType(types: !8922)
!8922 = !{!7, !54, !28}
!8923 = !{!8924, !8925, !8926}
!8924 = !DILocalVariable(name: "expected", arg: 1, scope: !8920, file: !21, line: 7911, type: !54)
!8925 = !DILocalVariable(name: "obj", arg: 2, scope: !8920, file: !21, line: 7911, type: !28)
!8926 = !DILocalVariable(name: "obj_type_name", scope: !8920, file: !21, line: 7913, type: !8500)
!8927 = !DILocation(line: 7911, column: 44, scope: !8920)
!8928 = !DILocation(line: 7911, column: 64, scope: !8920)
!8929 = !DILocation(line: 7913, column: 5, scope: !8920)
!8930 = !DILocation(line: 7913, column: 20, scope: !8920)
!8931 = !DILocation(line: 7913, column: 36, scope: !8920)
!8932 = !DILocation(line: 7914, column: 18, scope: !8920)
!8933 = !DILocation(line: 7915, column: 18, scope: !8920)
!8934 = !DILocation(line: 7915, column: 28, scope: !8920)
!8935 = !DILocation(line: 7914, column: 5, scope: !8920)
!8936 = !DILocation(line: 7918, column: 1, scope: !8920)
!8937 = !DILocation(line: 7917, column: 5, scope: !8920)
!8938 = distinct !DISubprogram(name: "__Pyx_PyObject_CallMethod0", scope: !21, file: !21, line: 7667, type: !105, scopeLine: 7667, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8939)
!8939 = !{!8940, !8941, !8942, !8943, !8944, !8945}
!8940 = !DILocalVariable(name: "obj", arg: 1, scope: !8938, file: !21, line: 7667, type: !28)
!8941 = !DILocalVariable(name: "method_name", arg: 2, scope: !8938, file: !21, line: 7667, type: !28)
!8942 = !DILocalVariable(name: "method", scope: !8938, file: !21, line: 7668, type: !28)
!8943 = !DILocalVariable(name: "result", scope: !8938, file: !21, line: 7668, type: !28)
!8944 = !DILocalVariable(name: "is_method", scope: !8938, file: !21, line: 7669, type: !7)
!8945 = !DILabel(scope: !8938, name: "bad", file: !21, line: 7678)
!8946 = !DILocation(line: 7667, column: 55, scope: !8938)
!8947 = !DILocation(line: 7667, column: 70, scope: !8938)
!8948 = !DILocation(line: 7668, column: 5, scope: !8938)
!8949 = !DILocation(line: 7668, column: 15, scope: !8938)
!8950 = !DILocation(line: 7668, column: 31, scope: !8938)
!8951 = !DILocation(line: 7669, column: 5, scope: !8938)
!8952 = !DILocation(line: 7669, column: 9, scope: !8938)
!8953 = !DILocation(line: 7669, column: 46, scope: !8938)
!8954 = !DILocation(line: 7669, column: 51, scope: !8938)
!8955 = !DILocation(line: 7669, column: 21, scope: !8938)
!8956 = !DILocation(line: 7670, column: 9, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8938, file: !21, line: 7670, column: 9)
!8958 = !DILocation(line: 7670, column: 9, scope: !8938)
!8959 = !DILocation(line: 7671, column: 44, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8957, file: !21, line: 7670, column: 28)
!8961 = !DILocation(line: 7671, column: 52, scope: !8960)
!8962 = !DILocation(line: 7671, column: 18, scope: !8960)
!8963 = !DILocation(line: 7671, column: 16, scope: !8960)
!8964 = !DILocation(line: 7672, column: 9, scope: !8960)
!8965 = !DILocation(line: 7673, column: 16, scope: !8960)
!8966 = !DILocation(line: 7673, column: 9, scope: !8960)
!8967 = !DILocation(line: 7675, column: 9, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8938, file: !21, line: 7675, column: 9)
!8969 = !DILocation(line: 7675, column: 9, scope: !8938)
!8970 = !DILocation(line: 7675, column: 28, scope: !8968)
!8971 = !DILocation(line: 7676, column: 39, scope: !8938)
!8972 = !DILocation(line: 7676, column: 14, scope: !8938)
!8973 = !DILocation(line: 7676, column: 12, scope: !8938)
!8974 = !DILocation(line: 7677, column: 5, scope: !8938)
!8975 = !DILocation(line: 7678, column: 1, scope: !8938)
!8976 = !DILocation(line: 7679, column: 12, scope: !8938)
!8977 = !DILocation(line: 7679, column: 5, scope: !8938)
!8978 = !DILocation(line: 7680, column: 1, scope: !8938)
!8979 = distinct !DISubprogram(name: "__Pyx_PyObject_GetMethod", scope: !21, file: !21, line: 7566, type: !8980, scopeLine: 7566, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{!7, !28, !28, !94}
!8982 = !{!8983, !8984, !8985, !8986, !8987, !8988, !8989, !8990, !8991, !8992, !8993, !8994, !8995}
!8983 = !DILocalVariable(name: "obj", arg: 1, scope: !8979, file: !21, line: 7566, type: !28)
!8984 = !DILocalVariable(name: "name", arg: 2, scope: !8979, file: !21, line: 7566, type: !28)
!8985 = !DILocalVariable(name: "method", arg: 3, scope: !8979, file: !21, line: 7566, type: !94)
!8986 = !DILocalVariable(name: "attr", scope: !8979, file: !21, line: 7567, type: !28)
!8987 = !DILocalVariable(name: "type_name", scope: !8979, file: !21, line: 7569, type: !8500)
!8988 = !DILocalVariable(name: "tp", scope: !8979, file: !21, line: 7570, type: !42)
!8989 = !DILocalVariable(name: "descr", scope: !8979, file: !21, line: 7571, type: !28)
!8990 = !DILocalVariable(name: "f", scope: !8979, file: !21, line: 7572, type: !304)
!8991 = !DILocalVariable(name: "dictptr", scope: !8979, file: !21, line: 7573, type: !94)
!8992 = !DILocalVariable(name: "dict", scope: !8979, file: !21, line: 7573, type: !28)
!8993 = !DILocalVariable(name: "meth_found", scope: !8979, file: !21, line: 7574, type: !7)
!8994 = !DILabel(scope: !8979, name: "try_unpack", file: !21, line: 7652)
!8995 = !DILocalVariable(name: "function", scope: !8996, file: !21, line: 7655, type: !28)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !21, line: 7654, column: 89)
!8997 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7654, column: 9)
!8998 = !DILocation(line: 7566, column: 47, scope: !8979)
!8999 = !DILocation(line: 7566, column: 62, scope: !8979)
!9000 = !DILocation(line: 7566, column: 79, scope: !8979)
!9001 = !DILocation(line: 7567, column: 5, scope: !8979)
!9002 = !DILocation(line: 7567, column: 15, scope: !8979)
!9003 = !DILocation(line: 7569, column: 5, scope: !8979)
!9004 = !DILocation(line: 7569, column: 20, scope: !8979)
!9005 = !DILocation(line: 7570, column: 5, scope: !8979)
!9006 = !DILocation(line: 7570, column: 19, scope: !8979)
!9007 = !DILocation(line: 7570, column: 24, scope: !8979)
!9008 = !DILocation(line: 7571, column: 5, scope: !8979)
!9009 = !DILocation(line: 7571, column: 15, scope: !8979)
!9010 = !DILocation(line: 7572, column: 5, scope: !8979)
!9011 = !DILocation(line: 7572, column: 18, scope: !8979)
!9012 = !DILocation(line: 7573, column: 5, scope: !8979)
!9013 = !DILocation(line: 7573, column: 16, scope: !8979)
!9014 = !DILocation(line: 7573, column: 26, scope: !8979)
!9015 = !DILocation(line: 7574, column: 5, scope: !8979)
!9016 = !DILocation(line: 7574, column: 9, scope: !8979)
!9017 = !DILocation(line: 7576, column: 9, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7576, column: 9)
!9019 = !DILocation(line: 7576, column: 9, scope: !8979)
!9020 = !DILocation(line: 7577, column: 42, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9018, file: !21, line: 7576, column: 63)
!9022 = !DILocation(line: 7577, column: 47, scope: !9021)
!9023 = !DILocation(line: 7577, column: 16, scope: !9021)
!9024 = !DILocation(line: 7577, column: 14, scope: !9021)
!9025 = !DILocation(line: 7578, column: 9, scope: !9021)
!9026 = !DILocation(line: 7580, column: 9, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7580, column: 9)
!9028 = !DILocation(line: 7580, column: 39, scope: !9027)
!9029 = !DILocation(line: 7580, column: 42, scope: !9027)
!9030 = !DILocation(line: 7580, column: 9, scope: !8979)
!9031 = !DILocation(line: 7581, column: 9, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9027, file: !21, line: 7580, column: 74)
!9033 = !DILocation(line: 7583, column: 28, scope: !8979)
!9034 = !DILocation(line: 7583, column: 32, scope: !8979)
!9035 = !DILocation(line: 7583, column: 13, scope: !8979)
!9036 = !DILocation(line: 7583, column: 11, scope: !8979)
!9037 = !DILocation(line: 7584, column: 9, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7584, column: 9)
!9039 = !DILocation(line: 7584, column: 9, scope: !8979)
!9040 = !DILocation(line: 7585, column: 9, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9038, file: !21, line: 7584, column: 32)
!9042 = !DILocation(line: 7587, column: 13, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9041, file: !21, line: 7587, column: 13)
!9044 = !DILocation(line: 7587, column: 13, scope: !9041)
!9045 = !DILocation(line: 7602, column: 24, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9043, file: !21, line: 7601, column: 9)
!9047 = !DILocation(line: 7603, column: 9, scope: !9046)
!9048 = !DILocation(line: 7604, column: 17, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9043, file: !21, line: 7603, column: 16)
!9050 = !DILocation(line: 7604, column: 33, scope: !9049)
!9051 = !{!2421, !1900, i64 272}
!9052 = !DILocation(line: 7604, column: 15, scope: !9049)
!9053 = !DILocation(line: 7605, column: 17, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9049, file: !21, line: 7605, column: 17)
!9055 = !DILocation(line: 7605, column: 19, scope: !9054)
!9056 = !DILocation(line: 7605, column: 27, scope: !9054)
!9057 = !DILocation(line: 7605, column: 45, scope: !9054)
!9058 = !DILocation(line: 7605, column: 30, scope: !9054)
!9059 = !DILocation(line: 7605, column: 17, scope: !9049)
!9060 = !DILocation(line: 7606, column: 24, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9054, file: !21, line: 7605, column: 53)
!9062 = !DILocation(line: 7606, column: 26, scope: !9061)
!9063 = !DILocation(line: 7606, column: 33, scope: !9061)
!9064 = !DILocation(line: 7606, column: 50, scope: !9061)
!9065 = !DILocation(line: 7606, column: 22, scope: !9061)
!9066 = !DILocation(line: 7607, column: 17, scope: !9061)
!9067 = !DILocation(line: 7608, column: 17, scope: !9061)
!9068 = !DILocation(line: 7611, column: 5, scope: !9041)
!9069 = !DILocation(line: 7612, column: 36, scope: !8979)
!9070 = !DILocation(line: 7612, column: 15, scope: !8979)
!9071 = !DILocation(line: 7612, column: 13, scope: !8979)
!9072 = !DILocation(line: 7613, column: 9, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7613, column: 9)
!9074 = !DILocation(line: 7613, column: 17, scope: !9073)
!9075 = !DILocation(line: 7613, column: 25, scope: !9073)
!9076 = !DILocation(line: 7613, column: 37, scope: !9073)
!9077 = !DILocation(line: 7613, column: 36, scope: !9073)
!9078 = !DILocation(line: 7613, column: 34, scope: !9073)
!9079 = !DILocation(line: 7613, column: 46, scope: !9073)
!9080 = !DILocation(line: 7613, column: 9, scope: !8979)
!9081 = !DILocation(line: 7614, column: 9, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9073, file: !21, line: 7613, column: 55)
!9083 = !DILocation(line: 7615, column: 40, scope: !9082)
!9084 = !DILocation(line: 7615, column: 46, scope: !9082)
!9085 = !DILocation(line: 7615, column: 16, scope: !9082)
!9086 = !DILocation(line: 7615, column: 14, scope: !9082)
!9087 = !DILocation(line: 7616, column: 13, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9082, file: !21, line: 7616, column: 13)
!9089 = !DILocation(line: 7616, column: 18, scope: !9088)
!9090 = !DILocation(line: 7616, column: 13, scope: !9082)
!9091 = !DILocation(line: 7617, column: 13, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9088, file: !21, line: 7616, column: 27)
!9093 = !DILocation(line: 7618, column: 13, scope: !9092)
!9094 = !DILocation(line: 7619, column: 13, scope: !9092)
!9095 = !DILocation(line: 7620, column: 13, scope: !9092)
!9096 = !DILocation(line: 7622, column: 9, scope: !9082)
!9097 = !DILocation(line: 7623, column: 5, scope: !9082)
!9098 = !DILocation(line: 7624, column: 9, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7624, column: 9)
!9100 = !DILocation(line: 7624, column: 9, scope: !8979)
!9101 = !DILocation(line: 7625, column: 19, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9099, file: !21, line: 7624, column: 21)
!9103 = !DILocation(line: 7625, column: 10, scope: !9102)
!9104 = !DILocation(line: 7625, column: 17, scope: !9102)
!9105 = !DILocation(line: 7626, column: 9, scope: !9102)
!9106 = !DILocation(line: 7628, column: 9, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7628, column: 9)
!9108 = !DILocation(line: 7628, column: 11, scope: !9107)
!9109 = !DILocation(line: 7628, column: 9, scope: !8979)
!9110 = !DILocation(line: 7629, column: 16, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9107, file: !21, line: 7628, column: 20)
!9112 = !DILocation(line: 7629, column: 18, scope: !9111)
!9113 = !DILocation(line: 7629, column: 25, scope: !9111)
!9114 = !DILocation(line: 7629, column: 42, scope: !9111)
!9115 = !DILocation(line: 7629, column: 14, scope: !9111)
!9116 = !DILocation(line: 7630, column: 9, scope: !9111)
!9117 = !DILocation(line: 7631, column: 9, scope: !9111)
!9118 = !DILocation(line: 7633, column: 9, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !8979, file: !21, line: 7633, column: 9)
!9120 = !DILocation(line: 7633, column: 9, scope: !8979)
!9121 = !DILocation(line: 7634, column: 19, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9119, file: !21, line: 7633, column: 32)
!9123 = !DILocation(line: 7634, column: 10, scope: !9122)
!9124 = !DILocation(line: 7634, column: 17, scope: !9122)
!9125 = !DILocation(line: 7635, column: 9, scope: !9122)
!9126 = !DILocation(line: 7637, column: 17, scope: !8979)
!9127 = !DILocation(line: 7637, column: 15, scope: !8979)
!9128 = !DILocation(line: 7638, column: 18, scope: !8979)
!9129 = !DILocation(line: 7641, column: 18, scope: !8979)
!9130 = !DILocation(line: 7641, column: 29, scope: !8979)
!9131 = !DILocation(line: 7638, column: 5, scope: !8979)
!9132 = !DILocation(line: 7647, column: 5, scope: !8979)
!9133 = !DILocation(line: 7652, column: 1, scope: !8979)
!9134 = !DILocation(line: 7654, column: 9, scope: !8997)
!9135 = !DILocation(line: 7654, column: 22, scope: !8997)
!9136 = !DILocation(line: 7654, column: 25, scope: !8997)
!9137 = !DILocation(line: 7654, column: 46, scope: !8997)
!9138 = !DILocation(line: 7654, column: 49, scope: !8997)
!9139 = !DILocation(line: 7654, column: 9, scope: !8979)
!9140 = !DILocation(line: 7655, column: 9, scope: !8996)
!9141 = !DILocation(line: 7655, column: 19, scope: !8996)
!9142 = !DILocation(line: 7655, column: 30, scope: !8996)
!9143 = !DILocation(line: 7656, column: 9, scope: !8996)
!9144 = !DILocation(line: 7657, column: 9, scope: !8996)
!9145 = !DILocation(line: 7658, column: 19, scope: !8996)
!9146 = !DILocation(line: 7658, column: 10, scope: !8996)
!9147 = !DILocation(line: 7658, column: 17, scope: !8996)
!9148 = !DILocation(line: 7659, column: 9, scope: !8996)
!9149 = !DILocation(line: 7660, column: 5, scope: !8997)
!9150 = !DILocation(line: 7662, column: 15, scope: !8979)
!9151 = !DILocation(line: 7662, column: 6, scope: !8979)
!9152 = !DILocation(line: 7662, column: 13, scope: !8979)
!9153 = !DILocation(line: 7663, column: 5, scope: !8979)
!9154 = !DILocation(line: 7664, column: 1, scope: !8979)
!9155 = !DISubprogram(name: "_PyType_Lookup", scope: !45, file: !45, line: 262, type: !9156, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{!28, !42, !28}
!9158 = !DISubprogram(name: "PyDescr_IsData", scope: !9159, file: !9159, line: 64, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9159 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/descrobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7b11f0153f187b8dd2f98d8ebe41be94")
!9160 = !DISubprogram(name: "_PyObject_GetDictPtr", scope: !45, file: !45, line: 297, type: !9161, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{!94, !28}
!9163 = distinct !DISubprogram(name: "__Pyx_PyDict_GetItemStr", scope: !21, file: !21, line: 903, type: !105, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9164)
!9164 = !{!9165, !9166, !9167}
!9165 = !DILocalVariable(name: "dict", arg: 1, scope: !9163, file: !21, line: 903, type: !28)
!9166 = !DILocalVariable(name: "name", arg: 2, scope: !9163, file: !21, line: 903, type: !28)
!9167 = !DILocalVariable(name: "res", scope: !9163, file: !21, line: 904, type: !28)
!9168 = !DILocation(line: 903, column: 67, scope: !9163)
!9169 = !DILocation(line: 903, column: 83, scope: !9163)
!9170 = !DILocation(line: 904, column: 5, scope: !9163)
!9171 = !DILocation(line: 904, column: 15, scope: !9163)
!9172 = !DILocation(line: 904, column: 21, scope: !9163)
!9173 = !{!9174, !2424, i64 24}
!9174 = !{!"", !2423, i64 0, !2424, i64 16, !2424, i64 24, !9175, i64 32, !1900, i64 40}
!9175 = !{!"", !1985, i64 0, !1985, i64 0, !1985, i64 0, !1985, i64 0, !1985, i64 0}
!9176 = !DILocation(line: 905, column: 9, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9163, file: !21, line: 905, column: 9)
!9178 = !DILocation(line: 905, column: 13, scope: !9177)
!9179 = !DILocation(line: 905, column: 9, scope: !9163)
!9180 = !DILocation(line: 905, column: 22, scope: !9177)
!9181 = !DILocation(line: 906, column: 12, scope: !9163)
!9182 = !DILocation(line: 907, column: 1, scope: !9163)
!9183 = !DILocation(line: 906, column: 5, scope: !9163)
!9184 = !DISubprogram(name: "_PyDict_GetItem_KnownHash", scope: !392, file: !392, line: 31, type: !9185, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{!28, !28, !28, !198}
!9187 = !DISubprogram(name: "PyIter_Next", scope: !8895, file: !8895, line: 396, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9188 = distinct !DISubprogram(name: "__Pyx_IterFinish", scope: !21, file: !21, line: 7552, type: !762, scopeLine: 7552, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9189)
!9189 = !{!9190, !9191}
!9190 = !DILocalVariable(name: "__pyx_tstate", scope: !9188, file: !21, line: 7553, type: !1698)
!9191 = !DILocalVariable(name: "exc_type", scope: !9188, file: !21, line: 7555, type: !28)
!9192 = !DILocation(line: 7553, column: 5, scope: !9188)
!9193 = !DILocation(line: 7554, column: 5, scope: !9188)
!9194 = !DILocation(line: 7555, column: 5, scope: !9188)
!9195 = !DILocation(line: 7555, column: 15, scope: !9188)
!9196 = !DILocation(line: 7555, column: 26, scope: !9188)
!9197 = !DILocation(line: 7556, column: 9, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9188, file: !21, line: 7556, column: 9)
!9199 = !DILocation(line: 7556, column: 9, scope: !9188)
!9200 = !DILocation(line: 7557, column: 13, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !21, line: 7557, column: 13)
!9202 = distinct !DILexicalBlock(scope: !9198, file: !21, line: 7556, column: 29)
!9203 = !DILocation(line: 7557, column: 13, scope: !9202)
!9204 = !DILocation(line: 7558, column: 13, scope: !9201)
!9205 = !DILocation(line: 7559, column: 9, scope: !9202)
!9206 = !DILocation(line: 7560, column: 9, scope: !9202)
!9207 = !DILocation(line: 7562, column: 5, scope: !9188)
!9208 = !DILocation(line: 7563, column: 1, scope: !9188)
!9209 = distinct !DISubprogram(name: "__Pyx_unpack_tuple2_exact", scope: !21, file: !21, line: 7722, type: !9210, scopeLine: 7723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9212)
!9210 = !DISubroutineType(types: !9211)
!9211 = !{!7, !28, !94, !94, !7}
!9212 = !{!9213, !9214, !9215, !9216, !9217, !9218}
!9213 = !DILocalVariable(name: "tuple", arg: 1, scope: !9209, file: !21, line: 7723, type: !28)
!9214 = !DILocalVariable(name: "pvalue1", arg: 2, scope: !9209, file: !21, line: 7723, type: !94)
!9215 = !DILocalVariable(name: "pvalue2", arg: 3, scope: !9209, file: !21, line: 7723, type: !94)
!9216 = !DILocalVariable(name: "decref_tuple", arg: 4, scope: !9209, file: !21, line: 7723, type: !7)
!9217 = !DILocalVariable(name: "value1", scope: !9209, file: !21, line: 7724, type: !28)
!9218 = !DILocalVariable(name: "value2", scope: !9209, file: !21, line: 7724, type: !28)
!9219 = !DILocation(line: 7723, column: 19, scope: !9209)
!9220 = !DILocation(line: 7723, column: 37, scope: !9209)
!9221 = !DILocation(line: 7723, column: 57, scope: !9209)
!9222 = !DILocation(line: 7723, column: 70, scope: !9209)
!9223 = !DILocation(line: 7724, column: 5, scope: !9209)
!9224 = !DILocation(line: 7724, column: 15, scope: !9209)
!9225 = !DILocation(line: 7724, column: 31, scope: !9209)
!9226 = !DILocation(line: 7729, column: 14, scope: !9209)
!9227 = !DILocation(line: 7729, column: 12, scope: !9209)
!9228 = !DILocation(line: 7729, column: 43, scope: !9209)
!9229 = !DILocation(line: 7730, column: 14, scope: !9209)
!9230 = !DILocation(line: 7730, column: 12, scope: !9209)
!9231 = !DILocation(line: 7730, column: 43, scope: !9209)
!9232 = !DILocation(line: 7732, column: 9, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9209, file: !21, line: 7732, column: 9)
!9234 = !DILocation(line: 7732, column: 9, scope: !9209)
!9235 = !DILocation(line: 7733, column: 9, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9233, file: !21, line: 7732, column: 23)
!9237 = !DILocation(line: 7734, column: 5, scope: !9236)
!9238 = !DILocation(line: 7735, column: 16, scope: !9209)
!9239 = !DILocation(line: 7735, column: 6, scope: !9209)
!9240 = !DILocation(line: 7735, column: 14, scope: !9209)
!9241 = !DILocation(line: 7736, column: 16, scope: !9209)
!9242 = !DILocation(line: 7736, column: 6, scope: !9209)
!9243 = !DILocation(line: 7736, column: 14, scope: !9209)
!9244 = !DILocation(line: 7745, column: 1, scope: !9209)
!9245 = !DILocation(line: 7737, column: 5, scope: !9209)
!9246 = distinct !DISubprogram(name: "__Pyx_UnpackTupleError", scope: !21, file: !21, line: 7711, type: !9247, scopeLine: 7711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9249)
!9247 = !DISubroutineType(types: !9248)
!9248 = !{null, !28, !34}
!9249 = !{!9250, !9251}
!9250 = !DILocalVariable(name: "t", arg: 1, scope: !9246, file: !21, line: 7711, type: !28)
!9251 = !DILocalVariable(name: "index", arg: 2, scope: !9246, file: !21, line: 7711, type: !34)
!9252 = !DILocation(line: 7711, column: 46, scope: !9246)
!9253 = !DILocation(line: 7711, column: 60, scope: !9246)
!9254 = !DILocation(line: 7712, column: 9, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9246, file: !21, line: 7712, column: 9)
!9256 = !DILocation(line: 7712, column: 11, scope: !9255)
!9257 = !DILocation(line: 7712, column: 9, scope: !9246)
!9258 = !DILocation(line: 7713, column: 7, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9255, file: !21, line: 7712, column: 23)
!9260 = !DILocation(line: 7714, column: 5, scope: !9259)
!9261 = !DILocation(line: 7714, column: 16, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9255, file: !21, line: 7714, column: 16)
!9263 = !DILocation(line: 7714, column: 38, scope: !9262)
!9264 = !DILocation(line: 7714, column: 36, scope: !9262)
!9265 = !DILocation(line: 7714, column: 16, scope: !9255)
!9266 = !DILocation(line: 7715, column: 38, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9262, file: !21, line: 7714, column: 45)
!9268 = !DILocation(line: 7715, column: 7, scope: !9267)
!9269 = !DILocation(line: 7716, column: 5, scope: !9267)
!9270 = !DILocation(line: 7717, column: 37, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9262, file: !21, line: 7716, column: 12)
!9272 = !DILocation(line: 7717, column: 7, scope: !9271)
!9273 = !DILocation(line: 7719, column: 1, scope: !9246)
!9274 = distinct !DISubprogram(name: "__Pyx_unpack_tuple2_generic", scope: !21, file: !21, line: 7746, type: !9275, scopeLine: 7747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9277)
!9275 = !DISubroutineType(types: !9276)
!9276 = !{!7, !28, !94, !94, !7, !7}
!9277 = !{!9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288, !9289}
!9278 = !DILocalVariable(name: "tuple", arg: 1, scope: !9274, file: !21, line: 7746, type: !28)
!9279 = !DILocalVariable(name: "pvalue1", arg: 2, scope: !9274, file: !21, line: 7746, type: !94)
!9280 = !DILocalVariable(name: "pvalue2", arg: 3, scope: !9274, file: !21, line: 7746, type: !94)
!9281 = !DILocalVariable(name: "has_known_size", arg: 4, scope: !9274, file: !21, line: 7747, type: !7)
!9282 = !DILocalVariable(name: "decref_tuple", arg: 5, scope: !9274, file: !21, line: 7747, type: !7)
!9283 = !DILocalVariable(name: "index", scope: !9274, file: !21, line: 7748, type: !34)
!9284 = !DILocalVariable(name: "value1", scope: !9274, file: !21, line: 7749, type: !28)
!9285 = !DILocalVariable(name: "value2", scope: !9274, file: !21, line: 7749, type: !28)
!9286 = !DILocalVariable(name: "iter", scope: !9274, file: !21, line: 7749, type: !28)
!9287 = !DILocalVariable(name: "iternext", scope: !9274, file: !21, line: 7750, type: !259)
!9288 = !DILabel(scope: !9274, name: "unpacking_failed", file: !21, line: 7762)
!9289 = !DILabel(scope: !9274, name: "bad", file: !21, line: 7765)
!9290 = !DILocation(line: 7746, column: 50, scope: !9274)
!9291 = !DILocation(line: 7746, column: 68, scope: !9274)
!9292 = !DILocation(line: 7746, column: 88, scope: !9274)
!9293 = !DILocation(line: 7747, column: 44, scope: !9274)
!9294 = !DILocation(line: 7747, column: 64, scope: !9274)
!9295 = !DILocation(line: 7748, column: 5, scope: !9274)
!9296 = !DILocation(line: 7748, column: 16, scope: !9274)
!9297 = !DILocation(line: 7749, column: 5, scope: !9274)
!9298 = !DILocation(line: 7749, column: 15, scope: !9274)
!9299 = !DILocation(line: 7749, column: 31, scope: !9274)
!9300 = !DILocation(line: 7749, column: 47, scope: !9274)
!9301 = !DILocation(line: 7750, column: 5, scope: !9274)
!9302 = !DILocation(line: 7750, column: 18, scope: !9274)
!9303 = !DILocation(line: 7751, column: 29, scope: !9274)
!9304 = !DILocation(line: 7751, column: 12, scope: !9274)
!9305 = !DILocation(line: 7751, column: 10, scope: !9274)
!9306 = !DILocation(line: 7752, column: 9, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9274, file: !21, line: 7752, column: 9)
!9308 = !DILocation(line: 7752, column: 9, scope: !9274)
!9309 = !DILocation(line: 7752, column: 26, scope: !9307)
!9310 = !DILocation(line: 7753, column: 9, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9274, file: !21, line: 7753, column: 9)
!9312 = !DILocation(line: 7753, column: 9, scope: !9274)
!9313 = !DILocation(line: 7753, column: 25, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9311, file: !21, line: 7753, column: 23)
!9315 = !DILocation(line: 7753, column: 49, scope: !9314)
!9316 = !DILocation(line: 7753, column: 57, scope: !9314)
!9317 = !DILocation(line: 7754, column: 16, scope: !9274)
!9318 = !DILocation(line: 7754, column: 14, scope: !9274)
!9319 = !DILocation(line: 7755, column: 14, scope: !9274)
!9320 = !DILocation(line: 7755, column: 23, scope: !9274)
!9321 = !DILocation(line: 7755, column: 12, scope: !9274)
!9322 = !DILocation(line: 7755, column: 34, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9274, file: !21, line: 7755, column: 34)
!9324 = !DILocation(line: 7755, column: 34, scope: !9274)
!9325 = !DILocation(line: 7755, column: 61, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9323, file: !21, line: 7755, column: 53)
!9327 = !DILocation(line: 7755, column: 66, scope: !9326)
!9328 = !DILocation(line: 7756, column: 14, scope: !9274)
!9329 = !DILocation(line: 7756, column: 23, scope: !9274)
!9330 = !DILocation(line: 7756, column: 12, scope: !9274)
!9331 = !DILocation(line: 7756, column: 34, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9274, file: !21, line: 7756, column: 34)
!9333 = !DILocation(line: 7756, column: 34, scope: !9274)
!9334 = !DILocation(line: 7756, column: 61, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9332, file: !21, line: 7756, column: 53)
!9336 = !DILocation(line: 7756, column: 66, scope: !9335)
!9337 = !DILocation(line: 7757, column: 10, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9274, file: !21, line: 7757, column: 9)
!9339 = !DILocation(line: 7757, column: 25, scope: !9338)
!9340 = !DILocation(line: 7757, column: 28, scope: !9338)
!9341 = !DILocation(line: 7757, column: 9, scope: !9274)
!9342 = !DILocation(line: 7757, column: 87, scope: !9338)
!9343 = !DILocation(line: 7758, column: 5, scope: !9274)
!9344 = !DILocation(line: 7759, column: 16, scope: !9274)
!9345 = !DILocation(line: 7759, column: 6, scope: !9274)
!9346 = !DILocation(line: 7759, column: 14, scope: !9274)
!9347 = !DILocation(line: 7760, column: 16, scope: !9274)
!9348 = !DILocation(line: 7760, column: 6, scope: !9274)
!9349 = !DILocation(line: 7760, column: 14, scope: !9274)
!9350 = !DILocation(line: 7761, column: 5, scope: !9274)
!9351 = !DILocation(line: 7762, column: 1, scope: !9274)
!9352 = !DILocation(line: 7763, column: 10, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9274, file: !21, line: 7763, column: 9)
!9354 = !DILocation(line: 7763, column: 25, scope: !9353)
!9355 = !DILocation(line: 7763, column: 28, scope: !9353)
!9356 = !DILocation(line: 7763, column: 47, scope: !9353)
!9357 = !DILocation(line: 7763, column: 9, scope: !9274)
!9358 = !DILocation(line: 7764, column: 40, scope: !9353)
!9359 = !DILocation(line: 7764, column: 9, scope: !9353)
!9360 = !DILocation(line: 7763, column: 50, scope: !9353)
!9361 = !DILocation(line: 7765, column: 1, scope: !9274)
!9362 = !DILocation(line: 7766, column: 5, scope: !9274)
!9363 = !DILocation(line: 7767, column: 5, scope: !9274)
!9364 = !DILocation(line: 7768, column: 5, scope: !9274)
!9365 = !DILocation(line: 7769, column: 9, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9274, file: !21, line: 7769, column: 9)
!9367 = !DILocation(line: 7769, column: 9, scope: !9274)
!9368 = !DILocation(line: 7769, column: 25, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9366, file: !21, line: 7769, column: 23)
!9370 = !DILocation(line: 7769, column: 44, scope: !9369)
!9371 = !DILocation(line: 7770, column: 5, scope: !9274)
!9372 = !DILocation(line: 7771, column: 1, scope: !9274)
!9373 = distinct !DISubprogram(name: "__Pyx_RaiseNoneNotIterableError", scope: !21, file: !21, line: 7706, type: !413, scopeLine: 7706, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!9374 = !DILocation(line: 7707, column: 21, scope: !9373)
!9375 = !DILocation(line: 7707, column: 5, scope: !9373)
!9376 = !DILocation(line: 7708, column: 1, scope: !9373)
!9377 = distinct !DISubprogram(name: "__Pyx_RaiseNeedMoreValuesError", scope: !21, file: !21, line: 7683, type: !9378, scopeLine: 7683, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{null, !34}
!9380 = !{!9381}
!9381 = !DILocalVariable(name: "index", arg: 1, scope: !9377, file: !21, line: 7683, type: !34)
!9382 = !DILocation(line: 7683, column: 69, scope: !9377)
!9383 = !DILocation(line: 7684, column: 18, scope: !9377)
!9384 = !DILocation(line: 7686, column: 18, scope: !9377)
!9385 = !DILocation(line: 7686, column: 26, scope: !9377)
!9386 = !DILocation(line: 7686, column: 32, scope: !9377)
!9387 = !DILocation(line: 7686, column: 25, scope: !9377)
!9388 = !DILocation(line: 7684, column: 5, scope: !9377)
!9389 = !DILocation(line: 7687, column: 1, scope: !9377)
!9390 = distinct !DISubprogram(name: "__Pyx_RaiseTooManyValuesError", scope: !21, file: !21, line: 7690, type: !9378, scopeLine: 7690, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9391)
!9391 = !{!9392}
!9392 = !DILocalVariable(name: "expected", arg: 1, scope: !9390, file: !21, line: 7690, type: !34)
!9393 = !DILocation(line: 7690, column: 68, scope: !9390)
!9394 = !DILocation(line: 7691, column: 18, scope: !9390)
!9395 = !DILocation(line: 7692, column: 86, scope: !9390)
!9396 = !DILocation(line: 7691, column: 5, scope: !9390)
!9397 = !DILocation(line: 7693, column: 1, scope: !9390)
!9398 = distinct !DISubprogram(name: "__Pyx_IternextUnpackEndCheck", scope: !21, file: !21, line: 7696, type: !9399, scopeLine: 7696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9401)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{!7, !28, !34}
!9401 = !{!9402, !9403}
!9402 = !DILocalVariable(name: "retval", arg: 1, scope: !9398, file: !21, line: 7696, type: !28)
!9403 = !DILocalVariable(name: "expected", arg: 2, scope: !9398, file: !21, line: 7696, type: !34)
!9404 = !DILocation(line: 7696, column: 51, scope: !9398)
!9405 = !DILocation(line: 7696, column: 70, scope: !9398)
!9406 = !DILocation(line: 7697, column: 9, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9398, file: !21, line: 7697, column: 9)
!9408 = !DILocation(line: 7697, column: 9, scope: !9398)
!9409 = !DILocation(line: 7698, column: 9, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9407, file: !21, line: 7697, column: 27)
!9411 = !DILocation(line: 7699, column: 39, scope: !9410)
!9412 = !DILocation(line: 7699, column: 9, scope: !9410)
!9413 = !DILocation(line: 7700, column: 9, scope: !9410)
!9414 = !DILocation(line: 7702, column: 12, scope: !9398)
!9415 = !DILocation(line: 7702, column: 5, scope: !9398)
!9416 = !DILocation(line: 7703, column: 1, scope: !9398)
!9417 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA_8StateMap_make_key", scope: !21, file: !21, line: 5014, type: !433, scopeLine: 5014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9418)
!9418 = !{!9419, !9420, !9421, !9422, !9423, !9424, !9425, !9426, !9427, !9428, !9429}
!9419 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9417, file: !21, line: 5014, type: !423)
!9420 = !DILocalVariable(name: "__pyx_v_state_set", arg: 2, scope: !9417, file: !21, line: 5014, type: !28)
!9421 = !DILocalVariable(name: "__pyx_r", scope: !9417, file: !21, line: 5015, type: !28)
!9422 = !DILocalVariable(name: "__pyx_t_1", scope: !9417, file: !21, line: 5017, type: !28)
!9423 = !DILocalVariable(name: "__pyx_t_2", scope: !9417, file: !21, line: 5018, type: !28)
!9424 = !DILocalVariable(name: "__pyx_t_3", scope: !9417, file: !21, line: 5019, type: !7)
!9425 = !DILocalVariable(name: "__pyx_lineno", scope: !9417, file: !21, line: 5020, type: !7)
!9426 = !DILocalVariable(name: "__pyx_filename", scope: !9417, file: !21, line: 5021, type: !54)
!9427 = !DILocalVariable(name: "__pyx_clineno", scope: !9417, file: !21, line: 5022, type: !7)
!9428 = !DILabel(scope: !9417, name: "__pyx_L1_error", file: !21, line: 5054)
!9429 = !DILabel(scope: !9417, name: "__pyx_L0", file: !21, line: 5059)
!9430 = !DILocation(line: 5014, column: 124, scope: !9417)
!9431 = !DILocation(line: 5014, column: 148, scope: !9417)
!9432 = !DILocation(line: 5015, column: 3, scope: !9417)
!9433 = !DILocation(line: 5015, column: 13, scope: !9417)
!9434 = !DILocation(line: 5017, column: 3, scope: !9417)
!9435 = !DILocation(line: 5017, column: 13, scope: !9417)
!9436 = !DILocation(line: 5018, column: 3, scope: !9417)
!9437 = !DILocation(line: 5018, column: 13, scope: !9417)
!9438 = !DILocation(line: 5019, column: 3, scope: !9417)
!9439 = !DILocation(line: 5019, column: 7, scope: !9417)
!9440 = !DILocation(line: 5020, column: 3, scope: !9417)
!9441 = !DILocation(line: 5020, column: 7, scope: !9417)
!9442 = !DILocation(line: 5021, column: 3, scope: !9417)
!9443 = !DILocation(line: 5021, column: 15, scope: !9417)
!9444 = !DILocation(line: 5022, column: 3, scope: !9417)
!9445 = !DILocation(line: 5022, column: 7, scope: !9417)
!9446 = !DILocation(line: 5032, column: 3, scope: !9417)
!9447 = !DILocation(line: 5033, column: 31, scope: !9417)
!9448 = !DILocation(line: 5033, column: 15, scope: !9417)
!9449 = !DILocation(line: 5033, column: 13, scope: !9417)
!9450 = !DILocation(line: 5033, column: 55, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9417, file: !21, line: 5033, column: 55)
!9452 = !DILocation(line: 5033, column: 55, scope: !9417)
!9453 = !DILocation(line: 5033, column: 77, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !21, line: 5033, column: 77)
!9455 = distinct !DILexicalBlock(scope: !9451, file: !21, line: 5033, column: 77)
!9456 = !DILocation(line: 5033, column: 77, scope: !9455)
!9457 = !DILocation(line: 5035, column: 27, scope: !9417)
!9458 = !DILocation(line: 5035, column: 13, scope: !9417)
!9459 = !DILocation(line: 5036, column: 13, scope: !9417)
!9460 = !DILocation(line: 5037, column: 27, scope: !9417)
!9461 = !DILocation(line: 5037, column: 15, scope: !9417)
!9462 = !DILocation(line: 5037, column: 13, scope: !9417)
!9463 = !DILocation(line: 5037, column: 43, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9417, file: !21, line: 5037, column: 43)
!9465 = !DILocation(line: 5037, column: 43, scope: !9417)
!9466 = !DILocation(line: 5037, column: 77, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !21, line: 5037, column: 77)
!9468 = distinct !DILexicalBlock(scope: !9464, file: !21, line: 5037, column: 77)
!9469 = !DILocation(line: 5037, column: 77, scope: !9468)
!9470 = !DILocation(line: 5038, column: 42, scope: !9417)
!9471 = !DILocation(line: 5038, column: 15, scope: !9417)
!9472 = !DILocation(line: 5038, column: 13, scope: !9417)
!9473 = !DILocation(line: 5038, column: 59, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9417, file: !21, line: 5038, column: 59)
!9475 = !DILocation(line: 5038, column: 59, scope: !9417)
!9476 = !DILocation(line: 5038, column: 81, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !21, line: 5038, column: 81)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !21, line: 5038, column: 81)
!9479 = !DILocation(line: 5038, column: 81, scope: !9478)
!9480 = !DILocation(line: 5040, column: 3, scope: !9417)
!9481 = !DILocation(line: 5040, column: 38, scope: !9417)
!9482 = !DILocation(line: 5041, column: 13, scope: !9417)
!9483 = !DILocation(line: 5041, column: 11, scope: !9417)
!9484 = !DILocation(line: 5042, column: 13, scope: !9417)
!9485 = !DILocation(line: 5043, column: 3, scope: !9417)
!9486 = !DILocation(line: 5054, column: 3, scope: !9417)
!9487 = !DILocation(line: 5055, column: 3, scope: !9417)
!9488 = !DILocation(line: 5056, column: 3, scope: !9417)
!9489 = !DILocation(line: 5057, column: 59, scope: !9417)
!9490 = !DILocation(line: 5057, column: 74, scope: !9417)
!9491 = !DILocation(line: 5057, column: 88, scope: !9417)
!9492 = !DILocation(line: 5057, column: 3, scope: !9417)
!9493 = !DILocation(line: 5058, column: 11, scope: !9417)
!9494 = !DILocation(line: 5058, column: 3, scope: !9417)
!9495 = !DILocation(line: 5059, column: 3, scope: !9417)
!9496 = !DILocation(line: 5062, column: 10, scope: !9417)
!9497 = !DILocation(line: 5063, column: 1, scope: !9417)
!9498 = !DILocation(line: 5062, column: 3, scope: !9417)
!9499 = distinct !DISubprogram(name: "__Pyx_PyDict_GetItemDefault", scope: !21, file: !21, line: 8520, type: !114, scopeLine: 8520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9500)
!9500 = !{!9501, !9502, !9503, !9504}
!9501 = !DILocalVariable(name: "d", arg: 1, scope: !9499, file: !21, line: 8520, type: !28)
!9502 = !DILocalVariable(name: "key", arg: 2, scope: !9499, file: !21, line: 8520, type: !28)
!9503 = !DILocalVariable(name: "default_value", arg: 3, scope: !9499, file: !21, line: 8520, type: !28)
!9504 = !DILocalVariable(name: "value", scope: !9499, file: !21, line: 8521, type: !28)
!9505 = !DILocation(line: 8520, column: 56, scope: !9499)
!9506 = !DILocation(line: 8520, column: 69, scope: !9499)
!9507 = !DILocation(line: 8520, column: 84, scope: !9499)
!9508 = !DILocation(line: 8521, column: 5, scope: !9499)
!9509 = !DILocation(line: 8521, column: 15, scope: !9499)
!9510 = !DILocation(line: 8523, column: 37, scope: !9499)
!9511 = !DILocation(line: 8523, column: 40, scope: !9499)
!9512 = !DILocation(line: 8523, column: 13, scope: !9499)
!9513 = !DILocation(line: 8523, column: 11, scope: !9499)
!9514 = !DILocation(line: 8524, column: 9, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9499, file: !21, line: 8524, column: 9)
!9516 = !DILocation(line: 8524, column: 9, scope: !9499)
!9517 = !DILocation(line: 8525, column: 13, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !21, line: 8525, column: 13)
!9519 = distinct !DILexicalBlock(scope: !9515, file: !21, line: 8524, column: 27)
!9520 = !DILocation(line: 8525, column: 13, scope: !9519)
!9521 = !DILocation(line: 8526, column: 13, scope: !9518)
!9522 = !DILocation(line: 8527, column: 17, scope: !9519)
!9523 = !DILocation(line: 8527, column: 15, scope: !9519)
!9524 = !DILocation(line: 8528, column: 5, scope: !9519)
!9525 = !DILocation(line: 8529, column: 5, scope: !9499)
!9526 = !DILocation(line: 8546, column: 12, scope: !9499)
!9527 = !DILocation(line: 8546, column: 5, scope: !9499)
!9528 = !DILocation(line: 8547, column: 1, scope: !9499)
!9529 = !DILocation(line: 4766, column: 139, scope: !1371)
!9530 = !DILocation(line: 4766, column: 163, scope: !1371)
!9531 = !DILocation(line: 4767, column: 3, scope: !1371)
!9532 = !DILocation(line: 4767, column: 50, scope: !1371)
!9533 = !DILocation(line: 4768, column: 3, scope: !1371)
!9534 = !DILocation(line: 4768, column: 51, scope: !1371)
!9535 = !DILocation(line: 4769, column: 3, scope: !1371)
!9536 = !DILocation(line: 4769, column: 13, scope: !1371)
!9537 = !DILocation(line: 4770, column: 3, scope: !1371)
!9538 = !DILocation(line: 4770, column: 7, scope: !1371)
!9539 = !DILocation(line: 4771, column: 3, scope: !1371)
!9540 = !DILocation(line: 4771, column: 13, scope: !1371)
!9541 = !DILocation(line: 4773, column: 3, scope: !1371)
!9542 = !DILocation(line: 4773, column: 13, scope: !1371)
!9543 = !DILocation(line: 4774, column: 3, scope: !1371)
!9544 = !DILocation(line: 4774, column: 14, scope: !1371)
!9545 = !DILocation(line: 4775, column: 3, scope: !1371)
!9546 = !DILocation(line: 4775, column: 14, scope: !1371)
!9547 = !DILocation(line: 4776, column: 3, scope: !1371)
!9548 = !DILocation(line: 4776, column: 7, scope: !1371)
!9549 = !DILocation(line: 4777, column: 3, scope: !1371)
!9550 = !DILocation(line: 4777, column: 13, scope: !1371)
!9551 = !DILocation(line: 4778, column: 3, scope: !1371)
!9552 = !DILocation(line: 4778, column: 7, scope: !1371)
!9553 = !DILocation(line: 4779, column: 3, scope: !1371)
!9554 = !DILocation(line: 4779, column: 13, scope: !1371)
!9555 = !DILocation(line: 4780, column: 3, scope: !1371)
!9556 = !DILocation(line: 4780, column: 7, scope: !1371)
!9557 = !DILocation(line: 4781, column: 3, scope: !1371)
!9558 = !DILocation(line: 4781, column: 7, scope: !1371)
!9559 = !DILocation(line: 4782, column: 3, scope: !1371)
!9560 = !DILocation(line: 4782, column: 15, scope: !1371)
!9561 = !DILocation(line: 4783, column: 3, scope: !1371)
!9562 = !DILocation(line: 4783, column: 7, scope: !1371)
!9563 = !DILocation(line: 4793, column: 3, scope: !1371)
!9564 = !DILocation(line: 4794, column: 23, scope: !1371)
!9565 = !DILocation(line: 4803, column: 3, scope: !1371)
!9566 = !DILocation(line: 4803, column: 3, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !1371, file: !21, line: 4803, column: 3)
!9568 = !{!4684, !2424, i64 24}
!9569 = !DILocation(line: 4803, column: 72, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !1371, file: !21, line: 4803, column: 72)
!9571 = !DILocation(line: 4803, column: 72, scope: !1371)
!9572 = !DILocation(line: 4803, column: 94, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !21, line: 4803, column: 94)
!9574 = distinct !DILexicalBlock(scope: !9570, file: !21, line: 4803, column: 94)
!9575 = !DILocation(line: 4803, column: 94, scope: !9574)
!9576 = !DILocation(line: 4805, column: 27, scope: !1371)
!9577 = !DILocation(line: 4805, column: 25, scope: !1371)
!9578 = !DILocation(line: 4806, column: 13, scope: !1371)
!9579 = !DILocation(line: 4815, column: 13, scope: !1371)
!9580 = !DILocation(line: 4816, column: 7, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !1371, file: !21, line: 4816, column: 7)
!9582 = !DILocation(line: 4816, column: 7, scope: !1371)
!9583 = !DILocation(line: 4817, column: 21, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9581, file: !21, line: 4816, column: 47)
!9585 = !DILocation(line: 4817, column: 5, scope: !9584)
!9586 = !DILocation(line: 4818, column: 5, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !21, line: 4818, column: 5)
!9588 = distinct !DILexicalBlock(scope: !9584, file: !21, line: 4818, column: 5)
!9589 = !DILocation(line: 4818, column: 5, scope: !9588)
!9590 = !DILocation(line: 4820, column: 35, scope: !1371)
!9591 = !DILocation(line: 4820, column: 15, scope: !1371)
!9592 = !DILocation(line: 4820, column: 13, scope: !1371)
!9593 = !DILocation(line: 4820, column: 110, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !1371, file: !21, line: 4820, column: 110)
!9595 = !DILocation(line: 4820, column: 110, scope: !1371)
!9596 = !DILocation(line: 4820, column: 132, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !21, line: 4820, column: 132)
!9598 = distinct !DILexicalBlock(scope: !9594, file: !21, line: 4820, column: 132)
!9599 = !DILocation(line: 4820, column: 132, scope: !9598)
!9600 = !DILocation(line: 4822, column: 3, scope: !1371)
!9601 = !DILocation(line: 4823, column: 15, scope: !1371)
!9602 = !DILocation(line: 4823, column: 13, scope: !1371)
!9603 = !DILocation(line: 4824, column: 13, scope: !1371)
!9604 = !DILocation(line: 4825, column: 3, scope: !1371)
!9605 = !DILocation(line: 4826, column: 38, scope: !1393)
!9606 = !DILocation(line: 4826, column: 49, scope: !1393)
!9607 = !DILocation(line: 4826, column: 96, scope: !1393)
!9608 = !DILocation(line: 4826, column: 17, scope: !1393)
!9609 = !DILocation(line: 4826, column: 15, scope: !1393)
!9610 = !DILocation(line: 4827, column: 9, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4827, column: 9)
!9612 = !DILocation(line: 4827, column: 9, scope: !1393)
!9613 = !DILocation(line: 4827, column: 35, scope: !9611)
!9614 = !DILocation(line: 4828, column: 9, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4828, column: 9)
!9616 = !DILocation(line: 4828, column: 9, scope: !1393)
!9617 = !DILocation(line: 4828, column: 36, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !21, line: 4828, column: 36)
!9619 = distinct !DILexicalBlock(scope: !9615, file: !21, line: 4828, column: 36)
!9620 = !DILocation(line: 4828, column: 36, scope: !9619)
!9621 = !DILocation(line: 4830, column: 11, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4830, column: 9)
!9623 = !DILocation(line: 4830, column: 9, scope: !1393)
!9624 = !DILocation(line: 4830, column: 125, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !21, line: 4830, column: 125)
!9626 = distinct !DILexicalBlock(scope: !9622, file: !21, line: 4830, column: 125)
!9627 = !DILocation(line: 4830, column: 125, scope: !9626)
!9628 = !DILocation(line: 4831, column: 5, scope: !1393)
!9629 = !DILocation(line: 4831, column: 5, scope: !1392)
!9630 = !DILocation(line: 4832, column: 15, scope: !1393)
!9631 = !DILocation(line: 4841, column: 17, scope: !1393)
!9632 = !DILocation(line: 4841, column: 32, scope: !1393)
!9633 = !{!7866, !1985, i64 48}
!9634 = !DILocation(line: 4841, column: 15, scope: !1393)
!9635 = !DILocation(line: 4842, column: 24, scope: !1393)
!9636 = !DILocation(line: 4842, column: 22, scope: !1393)
!9637 = !DILocation(line: 4851, column: 38, scope: !1393)
!9638 = !DILocation(line: 4851, column: 17, scope: !1393)
!9639 = !DILocation(line: 4851, column: 15, scope: !1393)
!9640 = !DILocation(line: 4851, column: 61, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4851, column: 61)
!9642 = !DILocation(line: 4851, column: 61, scope: !1393)
!9643 = !DILocation(line: 4851, column: 83, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !21, line: 4851, column: 83)
!9645 = distinct !DILexicalBlock(scope: !9641, file: !21, line: 4851, column: 83)
!9646 = !DILocation(line: 4851, column: 83, scope: !9645)
!9647 = !DILocation(line: 4853, column: 38, scope: !1393)
!9648 = !DILocation(line: 4853, column: 49, scope: !1393)
!9649 = !DILocation(line: 4853, column: 17, scope: !1393)
!9650 = !DILocation(line: 4853, column: 15, scope: !1393)
!9651 = !DILocation(line: 4853, column: 110, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4853, column: 110)
!9653 = !DILocation(line: 4853, column: 110, scope: !1393)
!9654 = !DILocation(line: 4853, column: 132, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9656, file: !21, line: 4853, column: 132)
!9656 = distinct !DILexicalBlock(scope: !9652, file: !21, line: 4853, column: 132)
!9657 = !DILocation(line: 4853, column: 132, scope: !9656)
!9658 = !DILocation(line: 4854, column: 5, scope: !1393)
!9659 = !DILocation(line: 4854, column: 40, scope: !1393)
!9660 = !DILocation(line: 4855, column: 39, scope: !1393)
!9661 = !DILocation(line: 4855, column: 17, scope: !1393)
!9662 = !DILocation(line: 4855, column: 15, scope: !1393)
!9663 = !DILocation(line: 4855, column: 55, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !1393, file: !21, line: 4855, column: 55)
!9665 = !DILocation(line: 4855, column: 55, scope: !1393)
!9666 = !DILocation(line: 4855, column: 82, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !21, line: 4855, column: 82)
!9668 = distinct !DILexicalBlock(scope: !9664, file: !21, line: 4855, column: 82)
!9669 = !DILocation(line: 4855, column: 82, scope: !9668)
!9670 = !DILocation(line: 4856, column: 5, scope: !1393)
!9671 = !DILocation(line: 4856, column: 40, scope: !1393)
!9672 = !DILocation(line: 4857, column: 9, scope: !1397)
!9673 = !DILocation(line: 4857, column: 9, scope: !1393)
!9674 = !DILocation(line: 4866, column: 32, scope: !1396)
!9675 = !DILocation(line: 4866, column: 47, scope: !1396)
!9676 = !{!7866, !1900, i64 24}
!9677 = !DILocation(line: 4866, column: 17, scope: !1396)
!9678 = !DILocation(line: 4867, column: 7, scope: !1396)
!9679 = !DILocation(line: 4868, column: 7, scope: !1396)
!9680 = !DILocation(line: 4868, column: 7, scope: !1395)
!9681 = !DILocation(line: 4869, column: 17, scope: !1396)
!9682 = !DILocation(line: 4878, column: 40, scope: !1396)
!9683 = !DILocation(line: 4878, column: 19, scope: !1396)
!9684 = !DILocation(line: 4878, column: 17, scope: !1396)
!9685 = !DILocation(line: 4878, column: 63, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !1396, file: !21, line: 4878, column: 63)
!9687 = !DILocation(line: 4878, column: 63, scope: !1396)
!9688 = !DILocation(line: 4878, column: 85, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !21, line: 4878, column: 85)
!9690 = distinct !DILexicalBlock(scope: !9686, file: !21, line: 4878, column: 85)
!9691 = !DILocation(line: 4878, column: 85, scope: !9690)
!9692 = !DILocation(line: 4880, column: 7, scope: !1396)
!9693 = !DILocation(line: 4880, column: 7, scope: !1399)
!9694 = !DILocation(line: 4881, column: 17, scope: !1396)
!9695 = !DILocation(line: 4890, column: 5, scope: !1396)
!9696 = distinct !{!9696, !9604, !9697}
!9697 = !DILocation(line: 4891, column: 3, scope: !1371)
!9698 = !DILocation(line: 4892, column: 3, scope: !1371)
!9699 = !DILocation(line: 4892, column: 38, scope: !1371)
!9700 = !DILocation(line: 4901, column: 3, scope: !1371)
!9701 = !DILocation(line: 4902, column: 3, scope: !1371)
!9702 = !DILocation(line: 4903, column: 26, scope: !1371)
!9703 = !DILocation(line: 4903, column: 11, scope: !1371)
!9704 = !DILocation(line: 4904, column: 3, scope: !1371)
!9705 = !DILocation(line: 4915, column: 3, scope: !1371)
!9706 = !DILocation(line: 4916, column: 3, scope: !1371)
!9707 = !DILocation(line: 4917, column: 3, scope: !1371)
!9708 = !DILocation(line: 4918, column: 3, scope: !1371)
!9709 = !DILocation(line: 4919, column: 74, scope: !1371)
!9710 = !DILocation(line: 4919, column: 89, scope: !1371)
!9711 = !DILocation(line: 4919, column: 103, scope: !1371)
!9712 = !DILocation(line: 4919, column: 3, scope: !1371)
!9713 = !DILocation(line: 4920, column: 11, scope: !1371)
!9714 = !DILocation(line: 4920, column: 3, scope: !1371)
!9715 = !DILocation(line: 4921, column: 3, scope: !1371)
!9716 = !DILocation(line: 4922, column: 3, scope: !1371)
!9717 = !DILocation(line: 4923, column: 3, scope: !1371)
!9718 = !DILocation(line: 4924, column: 3, scope: !1371)
!9719 = !DILocation(line: 4927, column: 10, scope: !1371)
!9720 = !DILocation(line: 4928, column: 1, scope: !1371)
!9721 = !DILocation(line: 4927, column: 3, scope: !1371)
!9722 = !DISubprogram(name: "PySequence_List", scope: !8895, file: !8895, line: 706, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9723 = !DISubprogram(name: "PyList_Sort", scope: !3646, file: !3646, line: 39, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9724 = !DISubprogram(name: "PyList_AsTuple", scope: !3646, file: !3646, line: 41, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9725 = !DISubprogram(name: "PyDict_GetItemWithError", scope: !2725, file: !2725, line: 23, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9726 = distinct !DISubprogram(name: "__Pyx__GetModuleGlobalName", scope: !21, file: !21, line: 8577, type: !9727, scopeLine: 8581, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9730)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{!28, !28, !9729, !94}
!9729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!9730 = !{!9731, !9732, !9733, !9734}
!9731 = !DILocalVariable(name: "name", arg: 1, scope: !9726, file: !21, line: 8577, type: !28)
!9732 = !DILocalVariable(name: "dict_version", arg: 2, scope: !9726, file: !21, line: 8577, type: !9729)
!9733 = !DILocalVariable(name: "dict_cached_value", arg: 3, scope: !9726, file: !21, line: 8577, type: !94)
!9734 = !DILocalVariable(name: "result", scope: !9726, file: !21, line: 8582, type: !28)
!9735 = !DILocation(line: 8577, column: 55, scope: !9726)
!9736 = !DILocation(line: 8577, column: 74, scope: !9726)
!9737 = !DILocation(line: 8577, column: 99, scope: !9726)
!9738 = !DILocation(line: 8582, column: 5, scope: !9726)
!9739 = !DILocation(line: 8582, column: 15, scope: !9726)
!9740 = !DILocation(line: 8585, column: 40, scope: !9726)
!9741 = !DILocation(line: 8585, column: 49, scope: !9726)
!9742 = !DILocation(line: 8585, column: 74, scope: !9726)
!9743 = !DILocation(line: 8585, column: 81, scope: !9726)
!9744 = !DILocation(line: 8585, column: 14, scope: !9726)
!9745 = !DILocation(line: 8585, column: 12, scope: !9726)
!9746 = !DILocation(line: 8586, column: 5, scope: !9726)
!9747 = !DILocation(line: 8587, column: 9, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9726, file: !21, line: 8587, column: 9)
!9749 = !DILocation(line: 8587, column: 9, scope: !9726)
!9750 = !DILocation(line: 8588, column: 16, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9748, file: !21, line: 8587, column: 25)
!9752 = !DILocation(line: 8588, column: 9, scope: !9751)
!9753 = !DILocation(line: 8589, column: 16, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9748, file: !21, line: 8589, column: 16)
!9755 = !DILocation(line: 8589, column: 16, scope: !9748)
!9756 = !DILocation(line: 8590, column: 9, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9754, file: !21, line: 8589, column: 44)
!9758 = !DILocation(line: 8615, column: 33, scope: !9726)
!9759 = !DILocation(line: 8615, column: 12, scope: !9726)
!9760 = !DILocation(line: 8615, column: 5, scope: !9726)
!9761 = !DILocation(line: 8616, column: 1, scope: !9726)
!9762 = distinct !DISubprogram(name: "__Pyx_PyInt_From_int", scope: !21, file: !21, line: 11498, type: !9763, scopeLine: 11498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9765)
!9763 = !DISubroutineType(types: !9764)
!9764 = !{!28, !7}
!9765 = !{!9766, !9767, !9769, !9770}
!9766 = !DILocalVariable(name: "value", arg: 1, scope: !9762, file: !21, line: 11498, type: !7)
!9767 = !DILocalVariable(name: "neg_one", scope: !9762, file: !21, line: 11503, type: !9768)
!9768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!9769 = !DILocalVariable(name: "const_zero", scope: !9762, file: !21, line: 11503, type: !9768)
!9770 = !DILocalVariable(name: "is_unsigned", scope: !9762, file: !21, line: 11507, type: !9768)
!9771 = !DILocation(line: 11498, column: 57, scope: !9762)
!9772 = !DILocation(line: 11503, column: 5, scope: !9762)
!9773 = !DILocation(line: 11503, column: 15, scope: !9762)
!9774 = !DILocation(line: 11503, column: 35, scope: !9762)
!9775 = !DILocation(line: 11507, column: 5, scope: !9762)
!9776 = !DILocation(line: 11507, column: 15, scope: !9762)
!9777 = !DILocation(line: 11520, column: 42, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9779, file: !21, line: 11519, column: 42)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !21, line: 11519, column: 13)
!9780 = distinct !DILexicalBlock(scope: !9781, file: !21, line: 11518, column: 12)
!9781 = distinct !DILexicalBlock(scope: !9762, file: !21, line: 11508, column: 9)
!9782 = !DILocation(line: 11520, column: 35, scope: !9778)
!9783 = !DILocation(line: 11520, column: 20, scope: !9778)
!9784 = !DILocation(line: 11557, column: 1, scope: !9762)
!9785 = !DILocation(line: 11520, column: 13, scope: !9778)
!9786 = !DISubprogram(name: "PyObject_RichCompare", scope: !6, file: !6, line: 287, type: !253, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9787 = distinct !DISubprogram(name: "PyVectorcall_NARGS", scope: !9788, file: !9788, line: 57, type: !9789, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9791)
!9788 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/abstract.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "c590b3d6f2f267779e1246e98b55ede9")
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!34, !341}
!9791 = !{!9792}
!9792 = !DILocalVariable(name: "n", arg: 1, scope: !9787, file: !9788, line: 57, type: !341)
!9793 = !DILocation(line: 57, column: 27, scope: !9787)
!9794 = !DILocation(line: 59, column: 12, scope: !9787)
!9795 = !DILocation(line: 59, column: 14, scope: !9787)
!9796 = !DILocation(line: 59, column: 5, scope: !9787)
!9797 = distinct !DISubprogram(name: "__Pyx_PyObject_CallMethO", scope: !21, file: !21, line: 7443, type: !105, scopeLine: 7443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9798)
!9798 = !{!9799, !9800, !9801, !9802, !9803}
!9799 = !DILocalVariable(name: "func", arg: 1, scope: !9797, file: !21, line: 7443, type: !28)
!9800 = !DILocalVariable(name: "arg", arg: 2, scope: !9797, file: !21, line: 7443, type: !28)
!9801 = !DILocalVariable(name: "self", scope: !9797, file: !21, line: 7444, type: !28)
!9802 = !DILocalVariable(name: "result", scope: !9797, file: !21, line: 7444, type: !28)
!9803 = !DILocalVariable(name: "cfunc", scope: !9797, file: !21, line: 7445, type: !268)
!9804 = !DILocation(line: 7443, column: 67, scope: !9797)
!9805 = !DILocation(line: 7443, column: 83, scope: !9797)
!9806 = !DILocation(line: 7444, column: 5, scope: !9797)
!9807 = !DILocation(line: 7444, column: 15, scope: !9797)
!9808 = !DILocation(line: 7444, column: 22, scope: !9797)
!9809 = !DILocation(line: 7445, column: 5, scope: !9797)
!9810 = !DILocation(line: 7445, column: 17, scope: !9797)
!9811 = !DILocation(line: 7446, column: 13, scope: !9797)
!9812 = !DILocation(line: 7446, column: 11, scope: !9797)
!9813 = !DILocation(line: 7447, column: 43, scope: !9797)
!9814 = !DILocation(line: 7447, column: 12, scope: !9797)
!9815 = !DILocation(line: 7447, column: 10, scope: !9797)
!9816 = !DILocation(line: 7448, column: 9, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9797, file: !21, line: 7448, column: 9)
!9818 = !DILocation(line: 7448, column: 9, scope: !9797)
!9819 = !DILocation(line: 7449, column: 9, scope: !9817)
!9820 = !DILocation(line: 7450, column: 14, scope: !9797)
!9821 = !DILocation(line: 7450, column: 20, scope: !9797)
!9822 = !DILocation(line: 7450, column: 26, scope: !9797)
!9823 = !DILocation(line: 7450, column: 12, scope: !9797)
!9824 = !DILocation(line: 7451, column: 5, scope: !9797)
!9825 = !DILocation(line: 7452, column: 9, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9797, file: !21, line: 7452, column: 9)
!9827 = !DILocation(line: 7452, column: 27, scope: !9826)
!9828 = !DILocation(line: 7452, column: 30, scope: !9826)
!9829 = !DILocation(line: 7452, column: 9, scope: !9797)
!9830 = !DILocation(line: 7454, column: 13, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9826, file: !21, line: 7452, column: 59)
!9832 = !DILocation(line: 7453, column: 9, scope: !9831)
!9833 = !DILocation(line: 7456, column: 5, scope: !9831)
!9834 = !DILocation(line: 7457, column: 12, scope: !9797)
!9835 = !DILocation(line: 7457, column: 5, scope: !9797)
!9836 = !DILocation(line: 7458, column: 1, scope: !9797)
!9837 = !DISubprogram(name: "PyVectorcall_Function", scope: !9788, file: !9788, line: 62, type: !9838, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9838 = !DISubroutineType(types: !9839)
!9839 = !{!335, !28}
!9840 = distinct !DISubprogram(name: "__Pyx_PyObject_Call", scope: !21, file: !21, line: 7423, type: !114, scopeLine: 7423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9841)
!9841 = !{!9842, !9843, !9844, !9845, !9846}
!9842 = !DILocalVariable(name: "func", arg: 1, scope: !9840, file: !21, line: 7423, type: !28)
!9843 = !DILocalVariable(name: "arg", arg: 2, scope: !9840, file: !21, line: 7423, type: !28)
!9844 = !DILocalVariable(name: "kw", arg: 3, scope: !9840, file: !21, line: 7423, type: !28)
!9845 = !DILocalVariable(name: "result", scope: !9840, file: !21, line: 7424, type: !28)
!9846 = !DILocalVariable(name: "call", scope: !9840, file: !21, line: 7425, type: !112)
!9847 = !DILocation(line: 7423, column: 62, scope: !9840)
!9848 = !DILocation(line: 7423, column: 78, scope: !9840)
!9849 = !DILocation(line: 7423, column: 93, scope: !9840)
!9850 = !DILocation(line: 7424, column: 5, scope: !9840)
!9851 = !DILocation(line: 7424, column: 15, scope: !9840)
!9852 = !DILocation(line: 7425, column: 5, scope: !9840)
!9853 = !DILocation(line: 7425, column: 17, scope: !9840)
!9854 = !DILocation(line: 7425, column: 24, scope: !9840)
!9855 = !DILocation(line: 7425, column: 39, scope: !9840)
!9856 = !{!2421, !1900, i64 128}
!9857 = !DILocation(line: 7426, column: 9, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9840, file: !21, line: 7426, column: 9)
!9859 = !DILocation(line: 7426, column: 9, scope: !9840)
!9860 = !DILocation(line: 7427, column: 30, scope: !9858)
!9861 = !DILocation(line: 7427, column: 36, scope: !9858)
!9862 = !DILocation(line: 7427, column: 41, scope: !9858)
!9863 = !DILocation(line: 7427, column: 16, scope: !9858)
!9864 = !DILocation(line: 7427, column: 9, scope: !9858)
!9865 = !DILocation(line: 7428, column: 9, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9840, file: !21, line: 7428, column: 9)
!9867 = !DILocation(line: 7428, column: 9, scope: !9840)
!9868 = !DILocation(line: 7429, column: 9, scope: !9866)
!9869 = !DILocation(line: 7430, column: 16, scope: !9840)
!9870 = !DILocation(line: 7430, column: 22, scope: !9840)
!9871 = !DILocation(line: 7430, column: 28, scope: !9840)
!9872 = !DILocation(line: 7430, column: 33, scope: !9840)
!9873 = !DILocation(line: 7430, column: 14, scope: !9840)
!9874 = !DILocation(line: 7430, column: 12, scope: !9840)
!9875 = !DILocation(line: 7431, column: 5, scope: !9840)
!9876 = !DILocation(line: 7432, column: 9, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9840, file: !21, line: 7432, column: 9)
!9878 = !DILocation(line: 7432, column: 27, scope: !9877)
!9879 = !DILocation(line: 7432, column: 30, scope: !9877)
!9880 = !DILocation(line: 7432, column: 9, scope: !9840)
!9881 = !DILocation(line: 7434, column: 13, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9877, file: !21, line: 7432, column: 59)
!9883 = !DILocation(line: 7433, column: 9, scope: !9882)
!9884 = !DILocation(line: 7436, column: 5, scope: !9882)
!9885 = !DILocation(line: 7437, column: 12, scope: !9840)
!9886 = !DILocation(line: 7437, column: 5, scope: !9840)
!9887 = !DILocation(line: 7438, column: 1, scope: !9840)
!9888 = !DISubprogram(name: "PyObject_VectorcallDict", scope: !9788, file: !9788, line: 81, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9889 = distinct !DISubprogram(name: "__Pyx_CyOrPyCFunction_GET_SELF", scope: !21, file: !21, line: 776, type: !84, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9890)
!9890 = !{!9891}
!9891 = !DILocalVariable(name: "func", arg: 1, scope: !9889, file: !21, line: 776, type: !28)
!9892 = !DILocation(line: 776, column: 73, scope: !9889)
!9893 = !DILocation(line: 777, column: 13, scope: !9889)
!9894 = !DILocation(line: 777, column: 51, scope: !9889)
!9895 = !DILocation(line: 777, column: 12, scope: !9889)
!9896 = !DILocation(line: 777, column: 96, scope: !9889)
!9897 = !DILocation(line: 777, column: 103, scope: !9889)
!9898 = !DILocation(line: 777, column: 5, scope: !9889)
!9899 = !DISubprogram(name: "Py_EnterRecursiveCall", scope: !9900, file: !9900, line: 77, type: !9901, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9900 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/ceval.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "62959cdd0486750cb3245302ff2e97e7")
!9901 = !DISubroutineType(types: !9902)
!9902 = !{!7, !54}
!9903 = !DISubprogram(name: "Py_LeaveRecursiveCall", scope: !9900, file: !9900, line: 78, type: !413, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9904 = !DISubprogram(name: "PyObject_Call", scope: !8895, file: !8895, line: 158, type: !114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9905 = !DISubprogram(name: "PyObject_IsTrue", scope: !6, file: !6, line: 303, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9906 = distinct !DISubprogram(name: "__Pyx_PyType_Ready", scope: !21, file: !21, line: 9302, type: !4136, scopeLine: 9302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9907)
!9907 = !{!9908, !9909, !9910, !9911}
!9908 = !DILocalVariable(name: "t", arg: 1, scope: !9906, file: !21, line: 9302, type: !42)
!9909 = !DILocalVariable(name: "r", scope: !9906, file: !21, line: 9310, type: !7)
!9910 = !DILocalVariable(name: "bases", scope: !9906, file: !21, line: 9311, type: !28)
!9911 = !DILocalVariable(name: "gc_was_enabled", scope: !9912, file: !21, line: 9316, type: !7)
!9912 = distinct !DILexicalBlock(scope: !9906, file: !21, line: 9315, column: 5)
!9913 = !DILocation(line: 9302, column: 45, scope: !9906)
!9914 = !DILocation(line: 9310, column: 5, scope: !9906)
!9915 = !DILocation(line: 9310, column: 9, scope: !9906)
!9916 = !DILocation(line: 9311, column: 5, scope: !9906)
!9917 = !DILocation(line: 9311, column: 15, scope: !9906)
!9918 = !DILocation(line: 9311, column: 23, scope: !9906)
!9919 = !{!2421, !1900, i64 336}
!9920 = !DILocation(line: 9312, column: 9, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9906, file: !21, line: 9312, column: 9)
!9922 = !DILocation(line: 9312, column: 15, scope: !9921)
!9923 = !DILocation(line: 9312, column: 18, scope: !9921)
!9924 = !DILocation(line: 9312, column: 9, scope: !9906)
!9925 = !DILocation(line: 9313, column: 9, scope: !9921)
!9926 = !DILocation(line: 9316, column: 9, scope: !9912)
!9927 = !DILocation(line: 9316, column: 13, scope: !9912)
!9928 = !DILocation(line: 9318, column: 26, scope: !9912)
!9929 = !DILocation(line: 9318, column: 24, scope: !9912)
!9930 = !DILocation(line: 9347, column: 9, scope: !9912)
!9931 = !DILocation(line: 9347, column: 12, scope: !9912)
!9932 = !DILocation(line: 9347, column: 21, scope: !9912)
!9933 = !DILocation(line: 9349, column: 9, scope: !9912)
!9934 = !DILocation(line: 9349, column: 12, scope: !9912)
!9935 = !DILocation(line: 9349, column: 21, scope: !9912)
!9936 = !DILocation(line: 9354, column: 22, scope: !9912)
!9937 = !DILocation(line: 9354, column: 9, scope: !9912)
!9938 = !DILocation(line: 9354, column: 7, scope: !9912)
!9939 = !DILocation(line: 9356, column: 9, scope: !9912)
!9940 = !DILocation(line: 9356, column: 12, scope: !9912)
!9941 = !DILocation(line: 9356, column: 21, scope: !9912)
!9942 = !DILocation(line: 9358, column: 13, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9912, file: !21, line: 9358, column: 13)
!9944 = !DILocation(line: 9358, column: 13, scope: !9912)
!9945 = !DILocation(line: 9359, column: 13, scope: !9943)
!9946 = !DILocation(line: 9377, column: 5, scope: !9906)
!9947 = !DILocation(line: 9379, column: 12, scope: !9906)
!9948 = !DILocation(line: 9379, column: 5, scope: !9906)
!9949 = !DILocation(line: 9381, column: 1, scope: !9906)
!9950 = distinct !DISubprogram(name: "__Pyx_SetVtable", scope: !21, file: !21, line: 9426, type: !9951, scopeLine: 9426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9953)
!9951 = !DISubroutineType(types: !9952)
!9952 = !{!7, !42, !27}
!9953 = !{!9954, !9955, !9956, !9957}
!9954 = !DILocalVariable(name: "type", arg: 1, scope: !9950, file: !21, line: 9426, type: !42)
!9955 = !DILocalVariable(name: "vtable", arg: 2, scope: !9950, file: !21, line: 9426, type: !27)
!9956 = !DILocalVariable(name: "ob", scope: !9950, file: !21, line: 9427, type: !28)
!9957 = !DILabel(scope: !9950, name: "bad", file: !21, line: 9438)
!9958 = !DILocation(line: 9426, column: 42, scope: !9950)
!9959 = !DILocation(line: 9426, column: 54, scope: !9950)
!9960 = !DILocation(line: 9427, column: 5, scope: !9950)
!9961 = !DILocation(line: 9427, column: 15, scope: !9950)
!9962 = !DILocation(line: 9427, column: 34, scope: !9950)
!9963 = !DILocation(line: 9427, column: 20, scope: !9950)
!9964 = !DILocation(line: 9428, column: 9, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9950, file: !21, line: 9428, column: 9)
!9966 = !DILocation(line: 9428, column: 9, scope: !9950)
!9967 = !DILocation(line: 9429, column: 9, scope: !9965)
!9968 = !DILocation(line: 9433, column: 9, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9950, file: !21, line: 9433, column: 9)
!9970 = !{!2020, !1900, i64 608}
!9971 = !DILocation(line: 9433, column: 9, scope: !9950)
!9972 = !DILocation(line: 9435, column: 9, scope: !9969)
!9973 = !DILocation(line: 9436, column: 5, scope: !9950)
!9974 = !DILocation(line: 9437, column: 5, scope: !9950)
!9975 = !DILocation(line: 9438, column: 1, scope: !9950)
!9976 = !DILocation(line: 9439, column: 5, scope: !9950)
!9977 = !DILocation(line: 9440, column: 5, scope: !9950)
!9978 = !DILocation(line: 9441, column: 1, scope: !9950)
!9979 = distinct !DISubprogram(name: "__Pyx_MergeVtables", scope: !21, file: !21, line: 9465, type: !4136, scopeLine: 9465, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9980)
!9980 = !{!9981, !9982, !9983, !9984, !9985, !9986, !9987, !9988, !9989, !9991, !9995, !9998, !9999}
!9981 = !DILocalVariable(name: "type", arg: 1, scope: !9979, file: !21, line: 9465, type: !42)
!9982 = !DILocalVariable(name: "i", scope: !9979, file: !21, line: 9466, type: !7)
!9983 = !DILocalVariable(name: "base_vtables", scope: !9979, file: !21, line: 9467, type: !559)
!9984 = !DILocalVariable(name: "tp_base_name", scope: !9979, file: !21, line: 9468, type: !8500)
!9985 = !DILocalVariable(name: "base_name", scope: !9979, file: !21, line: 9469, type: !8500)
!9986 = !DILocalVariable(name: "unknown", scope: !9979, file: !21, line: 9470, type: !27)
!9987 = !DILocalVariable(name: "bases", scope: !9979, file: !21, line: 9471, type: !28)
!9988 = !DILocalVariable(name: "base_depth", scope: !9979, file: !21, line: 9472, type: !7)
!9989 = !DILocalVariable(name: "base", scope: !9990, file: !21, line: 9474, type: !42)
!9990 = distinct !DILexicalBlock(scope: !9979, file: !21, line: 9473, column: 5)
!9991 = !DILocalVariable(name: "base_vtable", scope: !9992, file: !21, line: 9483, type: !27)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !21, line: 9482, column: 51)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !21, line: 9482, column: 5)
!9994 = distinct !DILexicalBlock(scope: !9979, file: !21, line: 9482, column: 5)
!9995 = !DILocalVariable(name: "j", scope: !9996, file: !21, line: 9485, type: !7)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !21, line: 9484, column: 34)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !21, line: 9484, column: 13)
!9998 = !DILocalVariable(name: "base", scope: !9996, file: !21, line: 9486, type: !42)
!9999 = !DILabel(scope: !9979, name: "bad", file: !21, line: 9504)
!10000 = !DILocation(line: 9465, column: 45, scope: !9979)
!10001 = !DILocation(line: 9466, column: 5, scope: !9979)
!10002 = !DILocation(line: 9466, column: 9, scope: !9979)
!10003 = !DILocation(line: 9467, column: 5, scope: !9979)
!10004 = !DILocation(line: 9467, column: 12, scope: !9979)
!10005 = !DILocation(line: 9468, column: 5, scope: !9979)
!10006 = !DILocation(line: 9468, column: 20, scope: !9979)
!10007 = !DILocation(line: 9469, column: 5, scope: !9979)
!10008 = !DILocation(line: 9469, column: 20, scope: !9979)
!10009 = !DILocation(line: 9470, column: 5, scope: !9979)
!10010 = !DILocation(line: 9470, column: 11, scope: !9979)
!10011 = !DILocation(line: 9471, column: 5, scope: !9979)
!10012 = !DILocation(line: 9471, column: 15, scope: !9979)
!10013 = !DILocation(line: 9471, column: 23, scope: !9979)
!10014 = !DILocation(line: 9471, column: 29, scope: !9979)
!10015 = !DILocation(line: 9472, column: 5, scope: !9979)
!10016 = !DILocation(line: 9472, column: 9, scope: !9979)
!10017 = !DILocation(line: 9474, column: 9, scope: !9990)
!10018 = !DILocation(line: 9474, column: 23, scope: !9990)
!10019 = !DILocation(line: 9474, column: 30, scope: !9990)
!10020 = !DILocation(line: 9474, column: 36, scope: !9990)
!10021 = !DILocation(line: 9475, column: 9, scope: !9990)
!10022 = !DILocation(line: 9475, column: 16, scope: !9990)
!10023 = !DILocation(line: 9476, column: 24, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !9990, file: !21, line: 9475, column: 22)
!10025 = !DILocation(line: 9477, column: 20, scope: !10024)
!10026 = !DILocation(line: 9477, column: 26, scope: !10024)
!10027 = !DILocation(line: 9477, column: 18, scope: !10024)
!10028 = distinct !{!10028, !10021, !10029, !4470}
!10029 = !DILocation(line: 9478, column: 9, scope: !9990)
!10030 = !DILocation(line: 9479, column: 5, scope: !9979)
!10031 = !DILocation(line: 9480, column: 61, scope: !9979)
!10032 = !DILocation(line: 9480, column: 72, scope: !9979)
!10033 = !DILocation(line: 9480, column: 52, scope: !9979)
!10034 = !DILocation(line: 9480, column: 50, scope: !9979)
!10035 = !DILocation(line: 9480, column: 29, scope: !9979)
!10036 = !DILocation(line: 9480, column: 18, scope: !9979)
!10037 = !DILocation(line: 9481, column: 23, scope: !9979)
!10038 = !DILocation(line: 9481, column: 5, scope: !9979)
!10039 = !DILocation(line: 9481, column: 21, scope: !9979)
!10040 = !DILocation(line: 9482, column: 12, scope: !9994)
!10041 = !DILocation(line: 9482, column: 10, scope: !9994)
!10042 = !DILocation(line: 9482, column: 17, scope: !9993)
!10043 = !DILocation(line: 9482, column: 21, scope: !9993)
!10044 = !DILocation(line: 9482, column: 19, scope: !9993)
!10045 = !DILocation(line: 9482, column: 5, scope: !9994)
!10046 = !DILocation(line: 9483, column: 9, scope: !9992)
!10047 = !DILocation(line: 9483, column: 15, scope: !9992)
!10048 = !DILocation(line: 9483, column: 61, scope: !9992)
!10049 = !DILocation(line: 9483, column: 29, scope: !9992)
!10050 = !DILocation(line: 9484, column: 13, scope: !9997)
!10051 = !DILocation(line: 9484, column: 25, scope: !9997)
!10052 = !DILocation(line: 9484, column: 13, scope: !9992)
!10053 = !DILocation(line: 9485, column: 13, scope: !9996)
!10054 = !DILocation(line: 9485, column: 17, scope: !9996)
!10055 = !DILocation(line: 9486, column: 13, scope: !9996)
!10056 = !DILocation(line: 9486, column: 27, scope: !9996)
!10057 = !DILocation(line: 9486, column: 34, scope: !9996)
!10058 = !DILocation(line: 9486, column: 40, scope: !9996)
!10059 = !DILocation(line: 9487, column: 20, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !9996, file: !21, line: 9487, column: 13)
!10061 = !DILocation(line: 9487, column: 18, scope: !10060)
!10062 = !DILocation(line: 9487, column: 25, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10060, file: !21, line: 9487, column: 13)
!10064 = !DILocation(line: 9487, column: 29, scope: !10063)
!10065 = !DILocation(line: 9487, column: 27, scope: !10063)
!10066 = !DILocation(line: 9487, column: 13, scope: !10060)
!10067 = !DILocation(line: 9488, column: 21, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10069, file: !21, line: 9488, column: 21)
!10069 = distinct !DILexicalBlock(scope: !10063, file: !21, line: 9487, column: 46)
!10070 = !DILocation(line: 9488, column: 34, scope: !10068)
!10071 = !DILocation(line: 9488, column: 40, scope: !10068)
!10072 = !DILocation(line: 9488, column: 37, scope: !10068)
!10073 = !DILocation(line: 9488, column: 21, scope: !10069)
!10074 = !DILocation(line: 9489, column: 55, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10068, file: !21, line: 9488, column: 49)
!10076 = !DILocation(line: 9489, column: 39, scope: !10075)
!10077 = !DILocation(line: 9489, column: 21, scope: !10075)
!10078 = !DILocation(line: 9489, column: 34, scope: !10075)
!10079 = !DILocation(line: 9489, column: 37, scope: !10075)
!10080 = !DILocation(line: 9490, column: 43, scope: !10075)
!10081 = !DILocation(line: 9490, column: 21, scope: !10075)
!10082 = !DILocation(line: 9490, column: 34, scope: !10075)
!10083 = !DILocation(line: 9490, column: 36, scope: !10075)
!10084 = !DILocation(line: 9490, column: 41, scope: !10075)
!10085 = !DILocation(line: 9491, column: 17, scope: !10075)
!10086 = !DILocation(line: 9492, column: 21, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10069, file: !21, line: 9492, column: 21)
!10088 = !DILocation(line: 9492, column: 34, scope: !10087)
!10089 = !DILocation(line: 9492, column: 40, scope: !10087)
!10090 = !DILocation(line: 9492, column: 37, scope: !10087)
!10091 = !DILocation(line: 9492, column: 21, scope: !10069)
!10092 = !DILocation(line: 9493, column: 21, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10087, file: !21, line: 9492, column: 53)
!10094 = !DILocation(line: 9494, column: 28, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10087, file: !21, line: 9494, column: 28)
!10096 = !DILocation(line: 9494, column: 41, scope: !10095)
!10097 = !DILocation(line: 9494, column: 44, scope: !10095)
!10098 = !DILocation(line: 9494, column: 28, scope: !10087)
!10099 = !DILocation(line: 9495, column: 21, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10095, file: !21, line: 9494, column: 53)
!10101 = !DILocation(line: 9497, column: 24, scope: !10069)
!10102 = !DILocation(line: 9497, column: 30, scope: !10069)
!10103 = !DILocation(line: 9497, column: 22, scope: !10069)
!10104 = !DILocation(line: 9498, column: 13, scope: !10069)
!10105 = !DILocation(line: 9487, column: 42, scope: !10063)
!10106 = !DILocation(line: 9487, column: 13, scope: !10063)
!10107 = distinct !{!10107, !10066, !10108, !4470}
!10108 = !DILocation(line: 9498, column: 13, scope: !10060)
!10109 = !DILocation(line: 9499, column: 9, scope: !9997)
!10110 = !DILocation(line: 9499, column: 9, scope: !9996)
!10111 = !DILocation(line: 9500, column: 5, scope: !9993)
!10112 = !DILocation(line: 9500, column: 5, scope: !9992)
!10113 = !DILocation(line: 9482, column: 47, scope: !9993)
!10114 = !DILocation(line: 9482, column: 5, scope: !9993)
!10115 = distinct !{!10115, !10045, !10116, !4470}
!10116 = !DILocation(line: 9500, column: 5, scope: !9994)
!10117 = !DILocation(line: 9501, column: 5, scope: !9979)
!10118 = !DILocation(line: 9502, column: 10, scope: !9979)
!10119 = !DILocation(line: 9502, column: 5, scope: !9979)
!10120 = !DILocation(line: 9503, column: 5, scope: !9979)
!10121 = !DILocation(line: 9504, column: 1, scope: !9979)
!10122 = !DILocation(line: 9505, column: 20, scope: !9979)
!10123 = !DILocation(line: 9505, column: 18, scope: !9979)
!10124 = !DILocation(line: 9506, column: 17, scope: !9979)
!10125 = !DILocation(line: 9506, column: 15, scope: !9979)
!10126 = !DILocation(line: 9507, column: 18, scope: !9979)
!10127 = !DILocation(line: 9508, column: 103, scope: !9979)
!10128 = !DILocation(line: 9508, column: 117, scope: !9979)
!10129 = !DILocation(line: 9507, column: 5, scope: !9979)
!10130 = !DILocation(line: 9511, column: 10, scope: !9979)
!10131 = !DILocation(line: 9511, column: 5, scope: !9979)
!10132 = !DILocation(line: 9512, column: 5, scope: !9979)
!10133 = !DILocation(line: 9513, column: 1, scope: !9979)
!10134 = distinct !DISubprogram(name: "__Pyx_setup_reduce", scope: !21, file: !21, line: 9534, type: !122, scopeLine: 9534, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10135)
!10135 = !{!10136, !10137, !10138, !10139, !10140, !10141, !10142, !10143, !10144, !10145, !10146, !10147, !10148, !10151}
!10136 = !DILocalVariable(name: "type_obj", arg: 1, scope: !10134, file: !21, line: 9534, type: !28)
!10137 = !DILocalVariable(name: "ret", scope: !10134, file: !21, line: 9535, type: !7)
!10138 = !DILocalVariable(name: "object_reduce", scope: !10134, file: !21, line: 9536, type: !28)
!10139 = !DILocalVariable(name: "object_getstate", scope: !10134, file: !21, line: 9537, type: !28)
!10140 = !DILocalVariable(name: "object_reduce_ex", scope: !10134, file: !21, line: 9538, type: !28)
!10141 = !DILocalVariable(name: "reduce", scope: !10134, file: !21, line: 9539, type: !28)
!10142 = !DILocalVariable(name: "reduce_ex", scope: !10134, file: !21, line: 9540, type: !28)
!10143 = !DILocalVariable(name: "reduce_cython", scope: !10134, file: !21, line: 9541, type: !28)
!10144 = !DILocalVariable(name: "setstate", scope: !10134, file: !21, line: 9542, type: !28)
!10145 = !DILocalVariable(name: "setstate_cython", scope: !10134, file: !21, line: 9543, type: !28)
!10146 = !DILocalVariable(name: "getstate", scope: !10134, file: !21, line: 9544, type: !28)
!10147 = !DILabel(scope: !10134, name: "__PYX_BAD", file: !21, line: 9602)
!10148 = !DILocalVariable(name: "type_obj_name", scope: !10149, file: !21, line: 9604, type: !8500)
!10149 = distinct !DILexicalBlock(scope: !10150, file: !21, line: 9603, column: 28)
!10150 = distinct !DILexicalBlock(scope: !10134, file: !21, line: 9603, column: 9)
!10151 = !DILabel(scope: !10134, name: "__PYX_GOOD", file: !21, line: 9611)
!10152 = !DILocation(line: 9534, column: 41, scope: !10134)
!10153 = !DILocation(line: 9535, column: 5, scope: !10134)
!10154 = !DILocation(line: 9535, column: 9, scope: !10134)
!10155 = !DILocation(line: 9536, column: 5, scope: !10134)
!10156 = !DILocation(line: 9536, column: 15, scope: !10134)
!10157 = !DILocation(line: 9537, column: 5, scope: !10134)
!10158 = !DILocation(line: 9537, column: 15, scope: !10134)
!10159 = !DILocation(line: 9538, column: 5, scope: !10134)
!10160 = !DILocation(line: 9538, column: 15, scope: !10134)
!10161 = !DILocation(line: 9539, column: 5, scope: !10134)
!10162 = !DILocation(line: 9539, column: 15, scope: !10134)
!10163 = !DILocation(line: 9540, column: 5, scope: !10134)
!10164 = !DILocation(line: 9540, column: 15, scope: !10134)
!10165 = !DILocation(line: 9541, column: 5, scope: !10134)
!10166 = !DILocation(line: 9541, column: 15, scope: !10134)
!10167 = !DILocation(line: 9542, column: 5, scope: !10134)
!10168 = !DILocation(line: 9542, column: 15, scope: !10134)
!10169 = !DILocation(line: 9543, column: 5, scope: !10134)
!10170 = !DILocation(line: 9543, column: 15, scope: !10134)
!10171 = !DILocation(line: 9544, column: 5, scope: !10134)
!10172 = !DILocation(line: 9544, column: 15, scope: !10134)
!10173 = !DILocation(line: 9546, column: 46, scope: !10134)
!10174 = !DILocation(line: 9546, column: 56, scope: !10134)
!10175 = !{!2020, !1900, i64 416}
!10176 = !DILocation(line: 9546, column: 16, scope: !10134)
!10177 = !DILocation(line: 9546, column: 14, scope: !10134)
!10178 = !DILocation(line: 9553, column: 9, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10134, file: !21, line: 9553, column: 9)
!10180 = !DILocation(line: 9553, column: 9, scope: !10134)
!10181 = !DILocation(line: 9555, column: 62, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10179, file: !21, line: 9553, column: 19)
!10183 = !DILocation(line: 9555, column: 27, scope: !10182)
!10184 = !DILocation(line: 9555, column: 25, scope: !10182)
!10185 = !DILocation(line: 9562, column: 13, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10182, file: !21, line: 9562, column: 13)
!10187 = !DILocation(line: 9562, column: 32, scope: !10186)
!10188 = !DILocation(line: 9562, column: 29, scope: !10186)
!10189 = !DILocation(line: 9562, column: 13, scope: !10182)
!10190 = !DILocation(line: 9563, column: 13, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10186, file: !21, line: 9562, column: 42)
!10192 = !DILocation(line: 9565, column: 5, scope: !10182)
!10193 = !DILocation(line: 9567, column: 59, scope: !10134)
!10194 = !{!2020, !1900, i64 632}
!10195 = !DILocation(line: 9567, column: 24, scope: !10134)
!10196 = !DILocation(line: 9567, column: 22, scope: !10134)
!10197 = !DILocation(line: 9567, column: 86, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10134, file: !21, line: 9567, column: 85)
!10199 = !DILocation(line: 9567, column: 85, scope: !10134)
!10200 = !DILocation(line: 9567, column: 104, scope: !10198)
!10201 = !DILocation(line: 9571, column: 43, scope: !10134)
!10202 = !DILocation(line: 9571, column: 53, scope: !10134)
!10203 = !DILocation(line: 9571, column: 17, scope: !10134)
!10204 = !DILocation(line: 9571, column: 15, scope: !10134)
!10205 = !DILocation(line: 9571, column: 79, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10134, file: !21, line: 9571, column: 79)
!10207 = !DILocation(line: 9571, column: 79, scope: !10134)
!10208 = !DILocation(line: 9571, column: 101, scope: !10206)
!10209 = !DILocation(line: 9572, column: 9, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10134, file: !21, line: 9572, column: 9)
!10211 = !DILocation(line: 9572, column: 22, scope: !10210)
!10212 = !DILocation(line: 9572, column: 19, scope: !10210)
!10213 = !DILocation(line: 9572, column: 9, scope: !10134)
!10214 = !DILocation(line: 9574, column: 60, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10210, file: !21, line: 9572, column: 40)
!10216 = !{!2020, !1900, i64 616}
!10217 = !DILocation(line: 9574, column: 25, scope: !10215)
!10218 = !DILocation(line: 9574, column: 23, scope: !10215)
!10219 = !DILocation(line: 9574, column: 84, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10215, file: !21, line: 9574, column: 83)
!10221 = !DILocation(line: 9574, column: 83, scope: !10215)
!10222 = !DILocation(line: 9574, column: 99, scope: !10220)
!10223 = !DILocation(line: 9578, column: 44, scope: !10215)
!10224 = !DILocation(line: 9578, column: 54, scope: !10215)
!10225 = !DILocation(line: 9578, column: 18, scope: !10215)
!10226 = !DILocation(line: 9578, column: 16, scope: !10215)
!10227 = !DILocation(line: 9578, column: 77, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10215, file: !21, line: 9578, column: 77)
!10229 = !DILocation(line: 9578, column: 77, scope: !10215)
!10230 = !DILocation(line: 9578, column: 96, scope: !10228)
!10231 = !DILocation(line: 9579, column: 13, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10215, file: !21, line: 9579, column: 13)
!10233 = !DILocation(line: 9579, column: 23, scope: !10232)
!10234 = !DILocation(line: 9579, column: 20, scope: !10232)
!10235 = !DILocation(line: 9579, column: 37, scope: !10232)
!10236 = !DILocation(line: 9579, column: 68, scope: !10232)
!10237 = !DILocation(line: 9579, column: 76, scope: !10232)
!10238 = !DILocation(line: 9579, column: 40, scope: !10232)
!10239 = !DILocation(line: 9579, column: 13, scope: !10215)
!10240 = !DILocation(line: 9580, column: 62, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10232, file: !21, line: 9579, column: 102)
!10242 = !DILocation(line: 9580, column: 72, scope: !10241)
!10243 = !DILocation(line: 9580, column: 29, scope: !10241)
!10244 = !DILocation(line: 9580, column: 27, scope: !10241)
!10245 = !DILocation(line: 9581, column: 17, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10241, file: !21, line: 9581, column: 17)
!10247 = !DILocation(line: 9581, column: 17, scope: !10241)
!10248 = !DILocation(line: 9582, column: 54, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10246, file: !21, line: 9581, column: 40)
!10250 = !DILocation(line: 9582, column: 65, scope: !10249)
!10251 = !DILocation(line: 9582, column: 74, scope: !10249)
!10252 = !DILocation(line: 9582, column: 92, scope: !10249)
!10253 = !DILocation(line: 9582, column: 23, scope: !10249)
!10254 = !DILocation(line: 9582, column: 21, scope: !10249)
!10255 = !DILocation(line: 9582, column: 112, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10249, file: !21, line: 9582, column: 112)
!10257 = !DILocation(line: 9582, column: 112, scope: !10249)
!10258 = !DILocation(line: 9582, column: 131, scope: !10256)
!10259 = !DILocation(line: 9583, column: 54, scope: !10249)
!10260 = !DILocation(line: 9583, column: 65, scope: !10249)
!10261 = !DILocation(line: 9583, column: 74, scope: !10249)
!10262 = !DILocation(line: 9583, column: 23, scope: !10249)
!10263 = !DILocation(line: 9583, column: 21, scope: !10249)
!10264 = !DILocation(line: 9583, column: 104, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10249, file: !21, line: 9583, column: 104)
!10266 = !DILocation(line: 9583, column: 104, scope: !10249)
!10267 = !DILocation(line: 9583, column: 123, scope: !10265)
!10268 = !DILocation(line: 9584, column: 13, scope: !10249)
!10269 = !DILocation(line: 9584, column: 24, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10246, file: !21, line: 9584, column: 24)
!10271 = !DILocation(line: 9584, column: 34, scope: !10270)
!10272 = !DILocation(line: 9584, column: 31, scope: !10270)
!10273 = !DILocation(line: 9584, column: 48, scope: !10270)
!10274 = !DILocation(line: 9584, column: 51, scope: !10270)
!10275 = !DILocation(line: 9584, column: 24, scope: !10246)
!10276 = !DILocation(line: 9585, column: 17, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10270, file: !21, line: 9584, column: 69)
!10278 = !DILocation(line: 9587, column: 57, scope: !10241)
!10279 = !DILocation(line: 9587, column: 67, scope: !10241)
!10280 = !{!2020, !1900, i64 648}
!10281 = !DILocation(line: 9587, column: 24, scope: !10241)
!10282 = !DILocation(line: 9587, column: 22, scope: !10241)
!10283 = !DILocation(line: 9588, column: 18, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10241, file: !21, line: 9588, column: 17)
!10285 = !DILocation(line: 9588, column: 17, scope: !10241)
!10286 = !DILocation(line: 9588, column: 28, scope: !10284)
!10287 = !DILocation(line: 9589, column: 18, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10241, file: !21, line: 9589, column: 17)
!10289 = !DILocation(line: 9589, column: 27, scope: !10288)
!10290 = !DILocation(line: 9589, column: 58, scope: !10288)
!10291 = !DILocation(line: 9589, column: 68, scope: !10288)
!10292 = !DILocation(line: 9589, column: 30, scope: !10288)
!10293 = !DILocation(line: 9589, column: 17, scope: !10241)
!10294 = !DILocation(line: 9590, column: 68, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10288, file: !21, line: 9589, column: 96)
!10296 = !DILocation(line: 9590, column: 78, scope: !10295)
!10297 = !DILocation(line: 9590, column: 35, scope: !10295)
!10298 = !DILocation(line: 9590, column: 33, scope: !10295)
!10299 = !DILocation(line: 9591, column: 21, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10295, file: !21, line: 9591, column: 21)
!10301 = !DILocation(line: 9591, column: 21, scope: !10295)
!10302 = !DILocation(line: 9592, column: 58, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10300, file: !21, line: 9591, column: 46)
!10304 = !DILocation(line: 9592, column: 69, scope: !10303)
!10305 = !DILocation(line: 9592, column: 78, scope: !10303)
!10306 = !DILocation(line: 9592, column: 98, scope: !10303)
!10307 = !DILocation(line: 9592, column: 27, scope: !10303)
!10308 = !DILocation(line: 9592, column: 25, scope: !10303)
!10309 = !DILocation(line: 9592, column: 120, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10303, file: !21, line: 9592, column: 120)
!10311 = !DILocation(line: 9592, column: 120, scope: !10303)
!10312 = !DILocation(line: 9592, column: 139, scope: !10310)
!10313 = !DILocation(line: 9593, column: 58, scope: !10303)
!10314 = !DILocation(line: 9593, column: 69, scope: !10303)
!10315 = !DILocation(line: 9593, column: 78, scope: !10303)
!10316 = !DILocation(line: 9593, column: 27, scope: !10303)
!10317 = !DILocation(line: 9593, column: 25, scope: !10303)
!10318 = !DILocation(line: 9593, column: 110, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10303, file: !21, line: 9593, column: 110)
!10320 = !DILocation(line: 9593, column: 110, scope: !10303)
!10321 = !DILocation(line: 9593, column: 129, scope: !10319)
!10322 = !DILocation(line: 9594, column: 17, scope: !10303)
!10323 = !DILocation(line: 9594, column: 29, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10300, file: !21, line: 9594, column: 28)
!10325 = !DILocation(line: 9594, column: 38, scope: !10324)
!10326 = !DILocation(line: 9594, column: 41, scope: !10324)
!10327 = !DILocation(line: 9594, column: 28, scope: !10300)
!10328 = !DILocation(line: 9595, column: 21, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10324, file: !21, line: 9594, column: 59)
!10330 = !DILocation(line: 9597, column: 13, scope: !10295)
!10331 = !DILocation(line: 9598, column: 44, scope: !10241)
!10332 = !DILocation(line: 9598, column: 13, scope: !10241)
!10333 = !DILocation(line: 9599, column: 9, scope: !10241)
!10334 = !DILocation(line: 9600, column: 5, scope: !10215)
!10335 = !DILocation(line: 9601, column: 5, scope: !10134)
!10336 = !DILocation(line: 9602, column: 1, scope: !10134)
!10337 = !DILocation(line: 9603, column: 10, scope: !10150)
!10338 = !DILocation(line: 9603, column: 9, scope: !10134)
!10339 = !DILocation(line: 9604, column: 9, scope: !10149)
!10340 = !DILocation(line: 9604, column: 24, scope: !10149)
!10341 = !DILocation(line: 9605, column: 13, scope: !10149)
!10342 = !DILocation(line: 9606, column: 22, scope: !10149)
!10343 = !DILocation(line: 9607, column: 70, scope: !10149)
!10344 = !DILocation(line: 9606, column: 9, scope: !10149)
!10345 = !DILocation(line: 9609, column: 5, scope: !10150)
!10346 = !DILocation(line: 9609, column: 5, scope: !10149)
!10347 = !DILocation(line: 9610, column: 9, scope: !10134)
!10348 = !DILocation(line: 9610, column: 5, scope: !10134)
!10349 = !DILocation(line: 9611, column: 1, scope: !10134)
!10350 = !DILocation(line: 9618, column: 5, scope: !10134)
!10351 = !DILocation(line: 9619, column: 5, scope: !10134)
!10352 = !DILocation(line: 9620, column: 5, scope: !10134)
!10353 = !DILocation(line: 9621, column: 5, scope: !10134)
!10354 = !DILocation(line: 9622, column: 5, scope: !10134)
!10355 = !DILocation(line: 9623, column: 12, scope: !10134)
!10356 = !DILocation(line: 9624, column: 1, scope: !10134)
!10357 = !DILocation(line: 9623, column: 5, scope: !10134)
!10358 = distinct !DISubprogram(name: "__pyx_tp_dealloc_6Cython_4Plex_3DFA_StateMap", scope: !21, file: !21, line: 6132, type: !62, scopeLine: 6132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10359)
!10359 = !{!10360, !10361, !10362, !10364, !10366}
!10360 = !DILocalVariable(name: "o", arg: 1, scope: !10358, file: !21, line: 6132, type: !28)
!10361 = !DILocalVariable(name: "p", scope: !10358, file: !21, line: 6133, type: !423)
!10362 = !DILocalVariable(name: "_py_tmp", scope: !10363, file: !21, line: 6135, type: !28)
!10363 = distinct !DILexicalBlock(scope: !10358, file: !21, line: 6135, column: 3)
!10364 = !DILocalVariable(name: "_py_tmp", scope: !10365, file: !21, line: 6136, type: !28)
!10365 = distinct !DILexicalBlock(scope: !10358, file: !21, line: 6136, column: 3)
!10366 = !DILocalVariable(name: "_py_tmp", scope: !10367, file: !21, line: 6137, type: !28)
!10367 = distinct !DILexicalBlock(scope: !10358, file: !21, line: 6137, column: 3)
!10368 = !DILocation(line: 6132, column: 68, scope: !10358)
!10369 = !DILocation(line: 6133, column: 3, scope: !10358)
!10370 = !DILocation(line: 6133, column: 49, scope: !10358)
!10371 = !DILocation(line: 6133, column: 101, scope: !10358)
!10372 = !DILocation(line: 6134, column: 23, scope: !10358)
!10373 = !DILocation(line: 6134, column: 3, scope: !10358)
!10374 = !DILocation(line: 6135, column: 3, scope: !10358)
!10375 = !DILocation(line: 6135, column: 3, scope: !10363)
!10376 = !DILocation(line: 6135, column: 3, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10363, file: !21, line: 6135, column: 3)
!10378 = !DILocation(line: 6135, column: 3, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10377, file: !21, line: 6135, column: 3)
!10380 = !DILocation(line: 6136, column: 3, scope: !10358)
!10381 = !DILocation(line: 6136, column: 3, scope: !10365)
!10382 = !DILocation(line: 6136, column: 3, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10365, file: !21, line: 6136, column: 3)
!10384 = !DILocation(line: 6136, column: 3, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10383, file: !21, line: 6136, column: 3)
!10386 = !DILocation(line: 6137, column: 3, scope: !10358)
!10387 = !DILocation(line: 6137, column: 3, scope: !10367)
!10388 = !DILocation(line: 6137, column: 3, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10367, file: !21, line: 6137, column: 3)
!10390 = !DILocation(line: 6137, column: 3, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10389, file: !21, line: 6137, column: 3)
!10392 = !DILocation(line: 6139, column: 5, scope: !10358)
!10393 = !DILocation(line: 6139, column: 17, scope: !10358)
!10394 = !{!2421, !1900, i64 320}
!10395 = !DILocation(line: 6139, column: 26, scope: !10358)
!10396 = !DILocation(line: 6139, column: 3, scope: !10358)
!10397 = !DILocation(line: 6146, column: 1, scope: !10358)
!10398 = distinct !DISubprogram(name: "__pyx_tp_traverse_6Cython_4Plex_3DFA_StateMap", scope: !21, file: !21, line: 6148, type: !243, scopeLine: 6148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10399)
!10399 = !{!10400, !10401, !10402, !10403, !10404}
!10400 = !DILocalVariable(name: "o", arg: 1, scope: !10398, file: !21, line: 6148, type: !28)
!10401 = !DILocalVariable(name: "v", arg: 2, scope: !10398, file: !21, line: 6148, type: !245)
!10402 = !DILocalVariable(name: "a", arg: 3, scope: !10398, file: !21, line: 6148, type: !27)
!10403 = !DILocalVariable(name: "e", scope: !10398, file: !21, line: 6149, type: !7)
!10404 = !DILocalVariable(name: "p", scope: !10398, file: !21, line: 6150, type: !423)
!10405 = !DILocation(line: 6148, column: 68, scope: !10398)
!10406 = !DILocation(line: 6148, column: 81, scope: !10398)
!10407 = !DILocation(line: 6148, column: 90, scope: !10398)
!10408 = !DILocation(line: 6149, column: 3, scope: !10398)
!10409 = !DILocation(line: 6149, column: 7, scope: !10398)
!10410 = !DILocation(line: 6150, column: 3, scope: !10398)
!10411 = !DILocation(line: 6150, column: 49, scope: !10398)
!10412 = !DILocation(line: 6150, column: 101, scope: !10398)
!10413 = !DILocation(line: 6151, column: 7, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10398, file: !21, line: 6151, column: 7)
!10415 = !DILocation(line: 6151, column: 10, scope: !10414)
!10416 = !DILocation(line: 6151, column: 7, scope: !10398)
!10417 = !DILocation(line: 6152, column: 11, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10414, file: !21, line: 6151, column: 23)
!10419 = !DILocation(line: 6152, column: 27, scope: !10418)
!10420 = !DILocation(line: 6152, column: 30, scope: !10418)
!10421 = !DILocation(line: 6152, column: 44, scope: !10418)
!10422 = !DILocation(line: 6152, column: 9, scope: !10418)
!10423 = !DILocation(line: 6152, column: 7, scope: !10418)
!10424 = !DILocation(line: 6152, column: 52, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10418, file: !21, line: 6152, column: 52)
!10426 = !DILocation(line: 6152, column: 52, scope: !10418)
!10427 = !DILocation(line: 6152, column: 62, scope: !10425)
!10428 = !DILocation(line: 6152, column: 55, scope: !10425)
!10429 = !DILocation(line: 6153, column: 3, scope: !10418)
!10430 = !DILocation(line: 6154, column: 7, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10398, file: !21, line: 6154, column: 7)
!10432 = !DILocation(line: 6154, column: 10, scope: !10431)
!10433 = !DILocation(line: 6154, column: 7, scope: !10398)
!10434 = !DILocation(line: 6155, column: 11, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10431, file: !21, line: 6154, column: 27)
!10436 = !DILocation(line: 6155, column: 14, scope: !10435)
!10437 = !DILocation(line: 6155, column: 17, scope: !10435)
!10438 = !DILocation(line: 6155, column: 34, scope: !10435)
!10439 = !DILocation(line: 6155, column: 9, scope: !10435)
!10440 = !DILocation(line: 6155, column: 7, scope: !10435)
!10441 = !DILocation(line: 6155, column: 42, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10435, file: !21, line: 6155, column: 42)
!10443 = !DILocation(line: 6155, column: 42, scope: !10435)
!10444 = !DILocation(line: 6155, column: 52, scope: !10442)
!10445 = !DILocation(line: 6155, column: 45, scope: !10442)
!10446 = !DILocation(line: 6156, column: 3, scope: !10435)
!10447 = !DILocation(line: 6157, column: 7, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10398, file: !21, line: 6157, column: 7)
!10449 = !DILocation(line: 6157, column: 10, scope: !10448)
!10450 = !DILocation(line: 6157, column: 7, scope: !10398)
!10451 = !DILocation(line: 6158, column: 11, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10448, file: !21, line: 6157, column: 27)
!10453 = !DILocation(line: 6158, column: 14, scope: !10452)
!10454 = !DILocation(line: 6158, column: 17, scope: !10452)
!10455 = !DILocation(line: 6158, column: 34, scope: !10452)
!10456 = !DILocation(line: 6158, column: 9, scope: !10452)
!10457 = !DILocation(line: 6158, column: 7, scope: !10452)
!10458 = !DILocation(line: 6158, column: 42, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10452, file: !21, line: 6158, column: 42)
!10460 = !DILocation(line: 6158, column: 42, scope: !10452)
!10461 = !DILocation(line: 6158, column: 52, scope: !10459)
!10462 = !DILocation(line: 6158, column: 45, scope: !10459)
!10463 = !DILocation(line: 6159, column: 3, scope: !10452)
!10464 = !DILocation(line: 6160, column: 3, scope: !10398)
!10465 = !DILocation(line: 6161, column: 1, scope: !10398)
!10466 = distinct !DISubprogram(name: "__pyx_tp_clear_6Cython_4Plex_3DFA_StateMap", scope: !21, file: !21, line: 6163, type: !122, scopeLine: 6163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10467)
!10467 = !{!10468, !10469, !10470}
!10468 = !DILocalVariable(name: "o", arg: 1, scope: !10466, file: !21, line: 6163, type: !28)
!10469 = !DILocalVariable(name: "tmp", scope: !10466, file: !21, line: 6164, type: !28)
!10470 = !DILocalVariable(name: "p", scope: !10466, file: !21, line: 6165, type: !423)
!10471 = !DILocation(line: 6163, column: 65, scope: !10466)
!10472 = !DILocation(line: 6164, column: 3, scope: !10466)
!10473 = !DILocation(line: 6164, column: 13, scope: !10466)
!10474 = !DILocation(line: 6165, column: 3, scope: !10466)
!10475 = !DILocation(line: 6165, column: 49, scope: !10466)
!10476 = !DILocation(line: 6165, column: 101, scope: !10466)
!10477 = !DILocation(line: 6166, column: 21, scope: !10466)
!10478 = !DILocation(line: 6166, column: 24, scope: !10466)
!10479 = !DILocation(line: 6166, column: 7, scope: !10466)
!10480 = !DILocation(line: 6167, column: 3, scope: !10466)
!10481 = !DILocation(line: 6167, column: 6, scope: !10466)
!10482 = !DILocation(line: 6167, column: 18, scope: !10466)
!10483 = !DILocation(line: 6167, column: 87, scope: !10466)
!10484 = !DILocation(line: 6168, column: 3, scope: !10466)
!10485 = !DILocation(line: 6169, column: 21, scope: !10466)
!10486 = !DILocation(line: 6169, column: 24, scope: !10466)
!10487 = !DILocation(line: 6169, column: 7, scope: !10466)
!10488 = !DILocation(line: 6170, column: 3, scope: !10466)
!10489 = !DILocation(line: 6170, column: 6, scope: !10466)
!10490 = !DILocation(line: 6170, column: 22, scope: !10466)
!10491 = !DILocation(line: 6170, column: 46, scope: !10466)
!10492 = !DILocation(line: 6171, column: 3, scope: !10466)
!10493 = !DILocation(line: 6172, column: 21, scope: !10466)
!10494 = !DILocation(line: 6172, column: 24, scope: !10466)
!10495 = !DILocation(line: 6172, column: 7, scope: !10466)
!10496 = !DILocation(line: 6173, column: 3, scope: !10466)
!10497 = !DILocation(line: 6173, column: 6, scope: !10466)
!10498 = !DILocation(line: 6173, column: 22, scope: !10466)
!10499 = !DILocation(line: 6173, column: 46, scope: !10466)
!10500 = !DILocation(line: 6174, column: 3, scope: !10466)
!10501 = !DILocation(line: 6176, column: 1, scope: !10466)
!10502 = !DILocation(line: 6175, column: 3, scope: !10466)
!10503 = distinct !DISubprogram(name: "__pyx_pw_6Cython_4Plex_3DFA_8StateMap_1__init__", scope: !21, file: !21, line: 4422, type: !191, scopeLine: 4422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10504)
!10504 = !{!10505, !10506, !10507, !10508, !10509, !10510, !10511, !10512, !10513, !10514, !10515, !10516, !10519, !10522, !10525, !10526, !10527, !10528, !10530, !10531}
!10505 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10503, file: !21, line: 4422, type: !28)
!10506 = !DILocalVariable(name: "__pyx_args", arg: 2, scope: !10503, file: !21, line: 4422, type: !28)
!10507 = !DILocalVariable(name: "__pyx_kwds", arg: 3, scope: !10503, file: !21, line: 4422, type: !28)
!10508 = !DILocalVariable(name: "__pyx_v_new_machine", scope: !10503, file: !21, line: 4423, type: !28)
!10509 = !DILocalVariable(name: "__pyx_nargs", scope: !10503, file: !21, line: 4424, type: !34)
!10510 = !DILocalVariable(name: "__pyx_kwvalues", scope: !10503, file: !21, line: 4425, type: !339)
!10511 = !DILocalVariable(name: "values", scope: !10503, file: !21, line: 4426, type: !387)
!10512 = !DILocalVariable(name: "__pyx_lineno", scope: !10503, file: !21, line: 4427, type: !7)
!10513 = !DILocalVariable(name: "__pyx_filename", scope: !10503, file: !21, line: 4428, type: !54)
!10514 = !DILocalVariable(name: "__pyx_clineno", scope: !10503, file: !21, line: 4429, type: !7)
!10515 = !DILocalVariable(name: "__pyx_r", scope: !10503, file: !21, line: 4430, type: !7)
!10516 = !DILocalVariable(name: "__pyx_pyargnames", scope: !10517, file: !21, line: 4440, type: !10518)
!10517 = distinct !DILexicalBlock(scope: !10503, file: !21, line: 4439, column: 3)
!10518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 128, elements: !1011)
!10519 = !DILocalVariable(name: "kw_args", scope: !10520, file: !21, line: 4442, type: !34)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !21, line: 4441, column: 21)
!10521 = distinct !DILexicalBlock(scope: !10517, file: !21, line: 4441, column: 9)
!10522 = !DILocalVariable(name: "kwd_pos_args", scope: !10523, file: !21, line: 4460, type: !5676)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !21, line: 4459, column: 34)
!10524 = distinct !DILexicalBlock(scope: !10520, file: !21, line: 4459, column: 11)
!10525 = !DILabel(scope: !10503, name: "__pyx_L5_argtuple_error", file: !21, line: 4471)
!10526 = !DILabel(scope: !10503, name: "__pyx_L6_skip", file: !21, line: 4473)
!10527 = !DILabel(scope: !10503, name: "__pyx_L3_error", file: !21, line: 4475)
!10528 = !DILocalVariable(name: "__pyx_temp", scope: !10529, file: !21, line: 4477, type: !34)
!10529 = distinct !DILexicalBlock(scope: !10503, file: !21, line: 4476, column: 3)
!10530 = !DILabel(scope: !10503, name: "__pyx_L4_argument_unpacking_done", file: !21, line: 4485)
!10531 = !DILocalVariable(name: "__pyx_temp", scope: !10532, file: !21, line: 4490, type: !34)
!10532 = distinct !DILexicalBlock(scope: !10503, file: !21, line: 4489, column: 3)
!10533 = !DILocation(line: 4422, column: 70, scope: !10503)
!10534 = !DILocation(line: 4422, column: 94, scope: !10503)
!10535 = !DILocation(line: 4422, column: 116, scope: !10503)
!10536 = !DILocation(line: 4423, column: 3, scope: !10503)
!10537 = !DILocation(line: 4423, column: 13, scope: !10503)
!10538 = !DILocation(line: 4424, column: 3, scope: !10503)
!10539 = !DILocation(line: 4424, column: 28, scope: !10503)
!10540 = !DILocation(line: 4425, column: 3, scope: !10503)
!10541 = !DILocation(line: 4425, column: 34, scope: !10503)
!10542 = !DILocation(line: 4426, column: 3, scope: !10503)
!10543 = !DILocation(line: 4426, column: 13, scope: !10503)
!10544 = !DILocation(line: 4427, column: 3, scope: !10503)
!10545 = !DILocation(line: 4427, column: 7, scope: !10503)
!10546 = !DILocation(line: 4428, column: 3, scope: !10503)
!10547 = !DILocation(line: 4428, column: 15, scope: !10503)
!10548 = !DILocation(line: 4429, column: 3, scope: !10503)
!10549 = !DILocation(line: 4429, column: 7, scope: !10503)
!10550 = !DILocation(line: 4430, column: 3, scope: !10503)
!10551 = !DILocation(line: 4430, column: 7, scope: !10503)
!10552 = !DILocation(line: 4434, column: 17, scope: !10503)
!10553 = !DILocation(line: 4434, column: 15, scope: !10503)
!10554 = !DILocation(line: 4438, column: 18, scope: !10503)
!10555 = !DILocation(line: 4440, column: 5, scope: !10517)
!10556 = !DILocation(line: 4440, column: 16, scope: !10517)
!10557 = !DILocation(line: 4440, column: 37, scope: !10517)
!10558 = !DILocation(line: 4440, column: 39, scope: !10517)
!10559 = !DILocation(line: 4441, column: 9, scope: !10521)
!10560 = !DILocation(line: 4441, column: 9, scope: !10517)
!10561 = !DILocation(line: 4442, column: 7, scope: !10520)
!10562 = !DILocation(line: 4442, column: 18, scope: !10520)
!10563 = !DILocation(line: 4443, column: 15, scope: !10520)
!10564 = !DILocation(line: 4443, column: 7, scope: !10520)
!10565 = !DILocation(line: 4444, column: 30, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10520, file: !21, line: 4443, column: 28)
!10567 = !DILocation(line: 4444, column: 18, scope: !10566)
!10568 = !DILocation(line: 4444, column: 28, scope: !10566)
!10569 = !DILocation(line: 4447, column: 18, scope: !10566)
!10570 = !DILocation(line: 4449, column: 17, scope: !10520)
!10571 = !DILocation(line: 4449, column: 15, scope: !10520)
!10572 = !DILocation(line: 4450, column: 15, scope: !10520)
!10573 = !DILocation(line: 4450, column: 7, scope: !10520)
!10574 = !DILocation(line: 4452, column: 13, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !21, line: 4452, column: 13)
!10576 = distinct !DILexicalBlock(scope: !10520, file: !21, line: 4450, column: 28)
!10577 = !{!2020, !1900, i64 496}
!10578 = !DILocation(line: 4452, column: 13, scope: !10576)
!10579 = !DILocation(line: 4453, column: 17, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10575, file: !21, line: 4452, column: 117)
!10581 = !DILocation(line: 4454, column: 18, scope: !10580)
!10582 = !DILocation(line: 4455, column: 9, scope: !10580)
!10583 = !DILocation(line: 4456, column: 18, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10575, file: !21, line: 4456, column: 18)
!10585 = !DILocation(line: 4456, column: 18, scope: !10575)
!10586 = !DILocation(line: 4456, column: 46, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !21, line: 4456, column: 46)
!10588 = distinct !DILexicalBlock(scope: !10584, file: !21, line: 4456, column: 46)
!10589 = !DILocation(line: 4456, column: 46, scope: !10588)
!10590 = !DILocation(line: 4457, column: 14, scope: !10584)
!10591 = !DILocation(line: 4458, column: 7, scope: !10576)
!10592 = !DILocation(line: 4459, column: 11, scope: !10524)
!10593 = !DILocation(line: 4459, column: 11, scope: !10520)
!10594 = !DILocation(line: 4460, column: 9, scope: !10523)
!10595 = !DILocation(line: 4460, column: 26, scope: !10523)
!10596 = !DILocation(line: 4460, column: 41, scope: !10523)
!10597 = !DILocation(line: 4461, column: 13, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10523, file: !21, line: 4461, column: 13)
!10599 = !DILocation(line: 4461, column: 13, scope: !10523)
!10600 = !DILocation(line: 4461, column: 143, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10602, file: !21, line: 4461, column: 143)
!10602 = distinct !DILexicalBlock(scope: !10598, file: !21, line: 4461, column: 143)
!10603 = !DILocation(line: 4461, column: 143, scope: !10602)
!10604 = !DILocation(line: 4462, column: 7, scope: !10524)
!10605 = !DILocation(line: 4462, column: 7, scope: !10523)
!10606 = !DILocation(line: 4463, column: 5, scope: !10521)
!10607 = !DILocation(line: 4463, column: 5, scope: !10520)
!10608 = !DILocation(line: 4463, column: 16, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10521, file: !21, line: 4463, column: 16)
!10610 = !DILocation(line: 4463, column: 16, scope: !10521)
!10611 = !DILocation(line: 4464, column: 7, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10609, file: !21, line: 4463, column: 44)
!10613 = !DILocation(line: 4466, column: 19, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10609, file: !21, line: 4465, column: 12)
!10615 = !DILocation(line: 4466, column: 7, scope: !10614)
!10616 = !DILocation(line: 4466, column: 17, scope: !10614)
!10617 = !DILocation(line: 4468, column: 27, scope: !10517)
!10618 = !DILocation(line: 4468, column: 25, scope: !10517)
!10619 = !DILocation(line: 4469, column: 3, scope: !10503)
!10620 = !DILocation(line: 4470, column: 3, scope: !10503)
!10621 = !DILocation(line: 4471, column: 3, scope: !10503)
!10622 = !DILocation(line: 4472, column: 51, scope: !10503)
!10623 = !DILocation(line: 4472, column: 3, scope: !10503)
!10624 = !DILocation(line: 4472, column: 65, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10626, file: !21, line: 4472, column: 65)
!10626 = distinct !DILexicalBlock(scope: !10503, file: !21, line: 4472, column: 65)
!10627 = !DILocation(line: 4472, column: 65, scope: !10626)
!10628 = !DILocation(line: 4473, column: 3, scope: !10503)
!10629 = !DILocation(line: 4474, column: 3, scope: !10503)
!10630 = !DILocation(line: 4475, column: 3, scope: !10503)
!10631 = !DILocation(line: 4477, column: 5, scope: !10529)
!10632 = !DILocation(line: 4477, column: 16, scope: !10529)
!10633 = !DILocation(line: 4478, column: 20, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10529, file: !21, line: 4478, column: 5)
!10635 = !DILocation(line: 4478, column: 10, scope: !10634)
!10636 = !DILocation(line: 4478, column: 24, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10634, file: !21, line: 4478, column: 5)
!10638 = !DILocation(line: 4478, column: 35, scope: !10637)
!10639 = !DILocation(line: 4478, column: 5, scope: !10634)
!10640 = !DILocation(line: 4480, column: 5, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10637, file: !21, line: 4478, column: 99)
!10642 = !DILocation(line: 4478, column: 85, scope: !10637)
!10643 = !DILocation(line: 4478, column: 5, scope: !10637)
!10644 = distinct !{!10644, !10639, !10645, !4470}
!10645 = !DILocation(line: 4480, column: 5, scope: !10634)
!10646 = !DILocation(line: 4481, column: 3, scope: !10503)
!10647 = !DILocation(line: 4482, column: 59, scope: !10503)
!10648 = !DILocation(line: 4482, column: 74, scope: !10503)
!10649 = !DILocation(line: 4482, column: 88, scope: !10503)
!10650 = !DILocation(line: 4482, column: 3, scope: !10503)
!10651 = !DILocation(line: 4484, column: 3, scope: !10503)
!10652 = !DILocation(line: 4485, column: 3, scope: !10503)
!10653 = !DILocation(line: 4486, column: 109, scope: !10503)
!10654 = !DILocation(line: 4486, column: 124, scope: !10503)
!10655 = !DILocation(line: 4486, column: 13, scope: !10503)
!10656 = !DILocation(line: 4486, column: 11, scope: !10503)
!10657 = !DILocation(line: 4490, column: 5, scope: !10532)
!10658 = !DILocation(line: 4490, column: 16, scope: !10532)
!10659 = !DILocation(line: 4491, column: 20, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10532, file: !21, line: 4491, column: 5)
!10661 = !DILocation(line: 4491, column: 10, scope: !10660)
!10662 = !DILocation(line: 4491, column: 24, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10660, file: !21, line: 4491, column: 5)
!10664 = !DILocation(line: 4491, column: 35, scope: !10663)
!10665 = !DILocation(line: 4491, column: 5, scope: !10660)
!10666 = !DILocation(line: 4493, column: 5, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10663, file: !21, line: 4491, column: 99)
!10668 = !DILocation(line: 4491, column: 85, scope: !10663)
!10669 = !DILocation(line: 4491, column: 5, scope: !10663)
!10670 = distinct !{!10670, !10665, !10671, !4470}
!10671 = !DILocation(line: 4493, column: 5, scope: !10660)
!10672 = !DILocation(line: 4494, column: 3, scope: !10503)
!10673 = !DILocation(line: 4496, column: 10, scope: !10503)
!10674 = !DILocation(line: 4496, column: 3, scope: !10503)
!10675 = !DILocation(line: 4497, column: 1, scope: !10503)
!10676 = distinct !DISubprogram(name: "__pyx_tp_new_6Cython_4Plex_3DFA_StateMap", scope: !21, file: !21, line: 6114, type: !318, scopeLine: 6114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10677)
!10677 = !{!10678, !10679, !10680, !10681, !10682}
!10678 = !DILocalVariable(name: "t", arg: 1, scope: !10676, file: !21, line: 6114, type: !42)
!10679 = !DILocalVariable(name: "a", arg: 2, scope: !10676, file: !21, line: 6114, type: !28)
!10680 = !DILocalVariable(name: "k", arg: 3, scope: !10676, file: !21, line: 6114, type: !28)
!10681 = !DILocalVariable(name: "p", scope: !10676, file: !21, line: 6115, type: !423)
!10682 = !DILocalVariable(name: "o", scope: !10676, file: !21, line: 6116, type: !28)
!10683 = !DILocation(line: 6114, column: 73, scope: !10676)
!10684 = !DILocation(line: 6114, column: 100, scope: !10676)
!10685 = !DILocation(line: 6114, column: 127, scope: !10676)
!10686 = !DILocation(line: 6115, column: 3, scope: !10676)
!10687 = !DILocation(line: 6115, column: 49, scope: !10676)
!10688 = !DILocation(line: 6116, column: 3, scope: !10676)
!10689 = !DILocation(line: 6116, column: 13, scope: !10676)
!10690 = !DILocation(line: 6121, column: 9, scope: !10676)
!10691 = !DILocation(line: 6121, column: 12, scope: !10676)
!10692 = !{!2421, !1900, i64 304}
!10693 = !DILocation(line: 6121, column: 22, scope: !10676)
!10694 = !DILocation(line: 6121, column: 7, scope: !10676)
!10695 = !DILocation(line: 6121, column: 5, scope: !10676)
!10696 = !DILocation(line: 6122, column: 7, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10676, file: !21, line: 6122, column: 7)
!10698 = !DILocation(line: 6122, column: 7, scope: !10676)
!10699 = !DILocation(line: 6122, column: 21, scope: !10697)
!10700 = !DILocation(line: 6124, column: 56, scope: !10676)
!10701 = !DILocation(line: 6124, column: 5, scope: !10676)
!10702 = !DILocation(line: 6125, column: 19, scope: !10676)
!10703 = !DILocation(line: 6125, column: 3, scope: !10676)
!10704 = !DILocation(line: 6125, column: 6, scope: !10676)
!10705 = !DILocation(line: 6125, column: 17, scope: !10676)
!10706 = !{!8606, !1900, i64 16}
!10707 = !DILocation(line: 6126, column: 3, scope: !10676)
!10708 = !DILocation(line: 6126, column: 6, scope: !10676)
!10709 = !DILocation(line: 6126, column: 18, scope: !10676)
!10710 = !DILocation(line: 6126, column: 87, scope: !10676)
!10711 = !DILocation(line: 6127, column: 3, scope: !10676)
!10712 = !DILocation(line: 6127, column: 6, scope: !10676)
!10713 = !DILocation(line: 6127, column: 22, scope: !10676)
!10714 = !DILocation(line: 6127, column: 46, scope: !10676)
!10715 = !DILocation(line: 6128, column: 3, scope: !10676)
!10716 = !DILocation(line: 6128, column: 6, scope: !10676)
!10717 = !DILocation(line: 6128, column: 22, scope: !10676)
!10718 = !DILocation(line: 6128, column: 46, scope: !10676)
!10719 = !DILocation(line: 6129, column: 10, scope: !10676)
!10720 = !DILocation(line: 6129, column: 3, scope: !10676)
!10721 = !DILocation(line: 6130, column: 1, scope: !10676)
!10722 = distinct !DISubprogram(name: "__pyx_pw_6Cython_4Plex_3DFA_8StateMap_3new_to_old", scope: !21, file: !21, line: 4942, type: !105, scopeLine: 4942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10723)
!10723 = !{!10724, !10725, !10726, !10727}
!10724 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10722, file: !21, line: 4942, type: !28)
!10725 = !DILocalVariable(name: "__pyx_v_new_state", arg: 2, scope: !10722, file: !21, line: 4942, type: !28)
!10726 = !DILocalVariable(name: "__pyx_kwvalues", scope: !10722, file: !21, line: 4943, type: !339)
!10727 = !DILocalVariable(name: "__pyx_r", scope: !10722, file: !21, line: 4944, type: !28)
!10728 = !DILocation(line: 4942, column: 78, scope: !10722)
!10729 = !DILocation(line: 4942, column: 102, scope: !10722)
!10730 = !DILocation(line: 4943, column: 3, scope: !10722)
!10731 = !DILocation(line: 4943, column: 34, scope: !10722)
!10732 = !DILocation(line: 4944, column: 3, scope: !10722)
!10733 = !DILocation(line: 4944, column: 13, scope: !10722)
!10734 = !DILocation(line: 4947, column: 18, scope: !10722)
!10735 = !DILocation(line: 4948, column: 112, scope: !10722)
!10736 = !DILocation(line: 4948, column: 140, scope: !10722)
!10737 = !DILocation(line: 4948, column: 13, scope: !10722)
!10738 = !DILocation(line: 4948, column: 11, scope: !10722)
!10739 = !DILocation(line: 4952, column: 10, scope: !10722)
!10740 = !DILocation(line: 4953, column: 1, scope: !10722)
!10741 = !DILocation(line: 4952, column: 3, scope: !10722)
!10742 = distinct !DISubprogram(name: "__pyx_pw_6Cython_4Plex_3DFA_8StateMap_5dump", scope: !21, file: !21, line: 5076, type: !105, scopeLine: 5076, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10743)
!10743 = !{!10744, !10745, !10746, !10747}
!10744 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10742, file: !21, line: 5076, type: !28)
!10745 = !DILocalVariable(name: "__pyx_v_file", arg: 2, scope: !10742, file: !21, line: 5076, type: !28)
!10746 = !DILocalVariable(name: "__pyx_kwvalues", scope: !10742, file: !21, line: 5077, type: !339)
!10747 = !DILocalVariable(name: "__pyx_r", scope: !10742, file: !21, line: 5078, type: !28)
!10748 = !DILocation(line: 5076, column: 72, scope: !10742)
!10749 = !DILocation(line: 5076, column: 96, scope: !10742)
!10750 = !DILocation(line: 5077, column: 3, scope: !10742)
!10751 = !DILocation(line: 5077, column: 34, scope: !10742)
!10752 = !DILocation(line: 5078, column: 3, scope: !10742)
!10753 = !DILocation(line: 5078, column: 13, scope: !10742)
!10754 = !DILocation(line: 5081, column: 18, scope: !10742)
!10755 = !DILocation(line: 5082, column: 106, scope: !10742)
!10756 = !DILocation(line: 5082, column: 134, scope: !10742)
!10757 = !DILocation(line: 5082, column: 13, scope: !10742)
!10758 = !DILocation(line: 5082, column: 11, scope: !10742)
!10759 = !DILocation(line: 5086, column: 10, scope: !10742)
!10760 = !DILocation(line: 5087, column: 1, scope: !10742)
!10761 = !DILocation(line: 5086, column: 3, scope: !10742)
!10762 = distinct !DISubprogram(name: "__pyx_pw_6Cython_4Plex_3DFA_8StateMap_7__reduce_cython__", scope: !21, file: !21, line: 5337, type: !105, scopeLine: 5337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10763)
!10763 = !{!10764, !10765, !10766, !10767}
!10764 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10762, file: !21, line: 5337, type: !28)
!10765 = !DILocalVariable(name: "unused", arg: 2, scope: !10762, file: !21, line: 5337, type: !28)
!10766 = !DILocalVariable(name: "__pyx_kwvalues", scope: !10762, file: !21, line: 5338, type: !339)
!10767 = !DILocalVariable(name: "__pyx_r", scope: !10762, file: !21, line: 5339, type: !28)
!10768 = !DILocation(line: 5337, column: 85, scope: !10762)
!10769 = !DILocation(line: 5337, column: 123, scope: !10762)
!10770 = !DILocation(line: 5338, column: 3, scope: !10762)
!10771 = !DILocation(line: 5338, column: 34, scope: !10762)
!10772 = !DILocation(line: 5339, column: 3, scope: !10762)
!10773 = !DILocation(line: 5339, column: 13, scope: !10762)
!10774 = !DILocation(line: 5342, column: 18, scope: !10762)
!10775 = !DILocation(line: 5343, column: 119, scope: !10762)
!10776 = !DILocation(line: 5343, column: 13, scope: !10762)
!10777 = !DILocation(line: 5343, column: 11, scope: !10762)
!10778 = !DILocation(line: 5347, column: 10, scope: !10762)
!10779 = !DILocation(line: 5348, column: 1, scope: !10762)
!10780 = !DILocation(line: 5347, column: 3, scope: !10762)
!10781 = distinct !DISubprogram(name: "__pyx_pw_6Cython_4Plex_3DFA_8StateMap_9__setstate_cython__", scope: !21, file: !21, line: 5593, type: !105, scopeLine: 5593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10782)
!10782 = !{!10783, !10784, !10785, !10786}
!10783 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10781, file: !21, line: 5593, type: !28)
!10784 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 2, scope: !10781, file: !21, line: 5593, type: !28)
!10785 = !DILocalVariable(name: "__pyx_kwvalues", scope: !10781, file: !21, line: 5594, type: !339)
!10786 = !DILocalVariable(name: "__pyx_r", scope: !10781, file: !21, line: 5595, type: !28)
!10787 = !DILocation(line: 5593, column: 87, scope: !10781)
!10788 = !DILocation(line: 5593, column: 111, scope: !10781)
!10789 = !DILocation(line: 5594, column: 3, scope: !10781)
!10790 = !DILocation(line: 5594, column: 34, scope: !10781)
!10791 = !DILocation(line: 5595, column: 3, scope: !10781)
!10792 = !DILocation(line: 5595, column: 13, scope: !10781)
!10793 = !DILocation(line: 5598, column: 18, scope: !10781)
!10794 = !DILocation(line: 5599, column: 121, scope: !10781)
!10795 = !DILocation(line: 5599, column: 149, scope: !10781)
!10796 = !DILocation(line: 5599, column: 13, scope: !10781)
!10797 = !DILocation(line: 5599, column: 11, scope: !10781)
!10798 = !DILocation(line: 5603, column: 10, scope: !10781)
!10799 = !DILocation(line: 5604, column: 1, scope: !10781)
!10800 = !DILocation(line: 5603, column: 3, scope: !10781)
!10801 = distinct !DISubprogram(name: "__pyx_pf_6Cython_4Plex_3DFA_8StateMap_2new_to_old", scope: !21, file: !21, line: 4955, type: !433, scopeLine: 4955, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10802)
!10802 = !{!10803, !10804, !10805, !10806, !10807, !10808, !10809, !10810, !10811, !10812}
!10803 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10801, file: !21, line: 4955, type: !423)
!10804 = !DILocalVariable(name: "__pyx_v_new_state", arg: 2, scope: !10801, file: !21, line: 4955, type: !28)
!10805 = !DILocalVariable(name: "__pyx_r", scope: !10801, file: !21, line: 4956, type: !28)
!10806 = !DILocalVariable(name: "__pyx_t_1", scope: !10801, file: !21, line: 4958, type: !28)
!10807 = !DILocalVariable(name: "__pyx_t_2", scope: !10801, file: !21, line: 4959, type: !28)
!10808 = !DILocalVariable(name: "__pyx_lineno", scope: !10801, file: !21, line: 4960, type: !7)
!10809 = !DILocalVariable(name: "__pyx_filename", scope: !10801, file: !21, line: 4961, type: !54)
!10810 = !DILocalVariable(name: "__pyx_clineno", scope: !10801, file: !21, line: 4962, type: !7)
!10811 = !DILabel(scope: !10801, name: "__pyx_L1_error", file: !21, line: 4995)
!10812 = !DILabel(scope: !10801, name: "__pyx_L0", file: !21, line: 5000)
!10813 = !DILocation(line: 4955, column: 114, scope: !10801)
!10814 = !DILocation(line: 4955, column: 138, scope: !10801)
!10815 = !DILocation(line: 4956, column: 3, scope: !10801)
!10816 = !DILocation(line: 4956, column: 13, scope: !10801)
!10817 = !DILocation(line: 4958, column: 3, scope: !10801)
!10818 = !DILocation(line: 4958, column: 13, scope: !10801)
!10819 = !DILocation(line: 4959, column: 3, scope: !10801)
!10820 = !DILocation(line: 4959, column: 13, scope: !10801)
!10821 = !DILocation(line: 4960, column: 3, scope: !10801)
!10822 = !DILocation(line: 4960, column: 7, scope: !10801)
!10823 = !DILocation(line: 4961, column: 3, scope: !10801)
!10824 = !DILocation(line: 4961, column: 15, scope: !10801)
!10825 = !DILocation(line: 4962, column: 3, scope: !10801)
!10826 = !DILocation(line: 4962, column: 7, scope: !10801)
!10827 = !DILocation(line: 4972, column: 3, scope: !10801)
!10828 = !DILocation(line: 4973, column: 7, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10801, file: !21, line: 4973, column: 7)
!10830 = !DILocation(line: 4973, column: 7, scope: !10801)
!10831 = !DILocation(line: 4974, column: 21, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10829, file: !21, line: 4973, column: 59)
!10833 = !DILocation(line: 4974, column: 5, scope: !10832)
!10834 = !DILocation(line: 4975, column: 5, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10836, file: !21, line: 4975, column: 5)
!10836 = distinct !DILexicalBlock(scope: !10832, file: !21, line: 4975, column: 5)
!10837 = !DILocation(line: 4975, column: 5, scope: !10836)
!10838 = !DILocation(line: 4977, column: 41, scope: !10801)
!10839 = !DILocation(line: 4977, column: 59, scope: !10801)
!10840 = !DILocation(line: 4977, column: 15, scope: !10801)
!10841 = !DILocation(line: 4977, column: 13, scope: !10801)
!10842 = !DILocation(line: 4977, column: 83, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10801, file: !21, line: 4977, column: 83)
!10844 = !DILocation(line: 4977, column: 83, scope: !10801)
!10845 = !DILocation(line: 4977, column: 105, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !21, line: 4977, column: 105)
!10847 = distinct !DILexicalBlock(scope: !10843, file: !21, line: 4977, column: 105)
!10848 = !DILocation(line: 4977, column: 105, scope: !10847)
!10849 = !DILocation(line: 4979, column: 36, scope: !10801)
!10850 = !DILocation(line: 4979, column: 50, scope: !10801)
!10851 = !DILocation(line: 4979, column: 67, scope: !10801)
!10852 = !DILocation(line: 4979, column: 15, scope: !10801)
!10853 = !DILocation(line: 4979, column: 13, scope: !10801)
!10854 = !DILocation(line: 4979, column: 83, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10801, file: !21, line: 4979, column: 83)
!10856 = !DILocation(line: 4979, column: 83, scope: !10801)
!10857 = !DILocation(line: 4979, column: 105, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !21, line: 4979, column: 105)
!10859 = distinct !DILexicalBlock(scope: !10855, file: !21, line: 4979, column: 105)
!10860 = !DILocation(line: 4979, column: 105, scope: !10859)
!10861 = !DILocation(line: 4981, column: 3, scope: !10801)
!10862 = !DILocation(line: 4981, column: 38, scope: !10801)
!10863 = !DILocation(line: 4982, column: 13, scope: !10801)
!10864 = !DILocation(line: 4982, column: 11, scope: !10801)
!10865 = !DILocation(line: 4983, column: 13, scope: !10801)
!10866 = !DILocation(line: 4984, column: 3, scope: !10801)
!10867 = !DILocation(line: 4995, column: 3, scope: !10801)
!10868 = !DILocation(line: 4996, column: 3, scope: !10801)
!10869 = !DILocation(line: 4997, column: 3, scope: !10801)
!10870 = !DILocation(line: 4998, column: 61, scope: !10801)
!10871 = !DILocation(line: 4998, column: 76, scope: !10801)
!10872 = !DILocation(line: 4998, column: 90, scope: !10801)
!10873 = !DILocation(line: 4998, column: 3, scope: !10801)
!10874 = !DILocation(line: 4999, column: 11, scope: !10801)
!10875 = !DILocation(line: 4999, column: 3, scope: !10801)
!10876 = !DILocation(line: 5000, column: 3, scope: !10801)
!10877 = !DILocation(line: 5003, column: 10, scope: !10801)
!10878 = !DILocation(line: 5004, column: 1, scope: !10801)
!10879 = !DILocation(line: 5003, column: 3, scope: !10801)
!10880 = distinct !DISubprogram(name: "__Pyx_PyDict_GetItem", scope: !21, file: !21, line: 8620, type: !105, scopeLine: 8620, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10881)
!10881 = !{!10882, !10883, !10884, !10885}
!10882 = !DILocalVariable(name: "d", arg: 1, scope: !10880, file: !21, line: 8620, type: !28)
!10883 = !DILocalVariable(name: "key", arg: 2, scope: !10880, file: !21, line: 8620, type: !28)
!10884 = !DILocalVariable(name: "value", scope: !10880, file: !21, line: 8621, type: !28)
!10885 = !DILocalVariable(name: "args", scope: !10886, file: !21, line: 8626, type: !28)
!10886 = distinct !DILexicalBlock(scope: !10887, file: !21, line: 8625, column: 47)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !21, line: 8625, column: 17)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !21, line: 8624, column: 32)
!10889 = distinct !DILexicalBlock(scope: !10890, file: !21, line: 8624, column: 13)
!10890 = distinct !DILexicalBlock(scope: !10891, file: !21, line: 8623, column: 27)
!10891 = distinct !DILexicalBlock(scope: !10880, file: !21, line: 8623, column: 9)
!10892 = !DILocation(line: 8620, column: 49, scope: !10880)
!10893 = !DILocation(line: 8620, column: 62, scope: !10880)
!10894 = !DILocation(line: 8621, column: 5, scope: !10880)
!10895 = !DILocation(line: 8621, column: 15, scope: !10880)
!10896 = !DILocation(line: 8622, column: 37, scope: !10880)
!10897 = !DILocation(line: 8622, column: 40, scope: !10880)
!10898 = !DILocation(line: 8622, column: 13, scope: !10880)
!10899 = !DILocation(line: 8622, column: 11, scope: !10880)
!10900 = !DILocation(line: 8623, column: 9, scope: !10891)
!10901 = !DILocation(line: 8623, column: 9, scope: !10880)
!10902 = !DILocation(line: 8624, column: 14, scope: !10889)
!10903 = !DILocation(line: 8624, column: 13, scope: !10890)
!10904 = !DILocation(line: 8625, column: 17, scope: !10887)
!10905 = !DILocation(line: 8625, column: 17, scope: !10888)
!10906 = !DILocation(line: 8626, column: 17, scope: !10886)
!10907 = !DILocation(line: 8626, column: 27, scope: !10886)
!10908 = !DILocation(line: 8626, column: 50, scope: !10886)
!10909 = !DILocation(line: 8626, column: 34, scope: !10886)
!10910 = !DILocation(line: 8627, column: 21, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10886, file: !21, line: 8627, column: 21)
!10912 = !DILocation(line: 8627, column: 21, scope: !10886)
!10913 = !DILocation(line: 8628, column: 37, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !21, line: 8627, column: 35)
!10915 = !DILocation(line: 8628, column: 53, scope: !10914)
!10916 = !DILocation(line: 8628, column: 21, scope: !10914)
!10917 = !DILocation(line: 8629, column: 21, scope: !10914)
!10918 = !DILocation(line: 8630, column: 17, scope: !10914)
!10919 = !DILocation(line: 8631, column: 13, scope: !10887)
!10920 = !DILocation(line: 8631, column: 13, scope: !10886)
!10921 = !DILocation(line: 8632, column: 33, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10887, file: !21, line: 8631, column: 20)
!10923 = !DILocation(line: 8632, column: 49, scope: !10922)
!10924 = !DILocation(line: 8632, column: 17, scope: !10922)
!10925 = !DILocation(line: 8634, column: 9, scope: !10888)
!10926 = !DILocation(line: 8635, column: 9, scope: !10890)
!10927 = !DILocation(line: 8637, column: 5, scope: !10880)
!10928 = !DILocation(line: 8638, column: 12, scope: !10880)
!10929 = !DILocation(line: 8638, column: 5, scope: !10880)
!10930 = !DILocation(line: 8639, column: 1, scope: !10880)
!10931 = !DISubprogram(name: "PyErr_SetObject", scope: !2720, file: !2720, line: 12, type: !3869, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10932 = distinct !DISubprogram(name: "__pyx_pf_6Cython_4Plex_3DFA_8StateMap_4dump", scope: !21, file: !21, line: 5089, type: !433, scopeLine: 5089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10933)
!10933 = !{!10934, !10935, !10936, !10937, !10938, !10939, !10940, !10941, !10942, !10943, !10944, !10945, !10946, !10947, !10948, !10949, !10950, !10951, !10952, !10953, !10954, !10959, !10961, !10963, !10968, !10970, !10972, !10977, !10979, !10981, !10982}
!10934 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10932, file: !21, line: 5089, type: !423)
!10935 = !DILocalVariable(name: "__pyx_v_file", arg: 2, scope: !10932, file: !21, line: 5089, type: !28)
!10936 = !DILocalVariable(name: "__pyx_v_state_set_str", scope: !10932, file: !21, line: 5090, type: !28)
!10937 = !DILocalVariable(name: "__pyx_v_new_state", scope: !10932, file: !21, line: 5091, type: !28)
!10938 = !DILocalVariable(name: "__pyx_v_old_state_set", scope: !10932, file: !21, line: 5092, type: !28)
!10939 = !DILocalVariable(name: "__pyx_r", scope: !10932, file: !21, line: 5093, type: !28)
!10940 = !DILocalVariable(name: "__pyx_t_1", scope: !10932, file: !21, line: 5095, type: !28)
!10941 = !DILocalVariable(name: "__pyx_t_2", scope: !10932, file: !21, line: 5096, type: !28)
!10942 = !DILocalVariable(name: "__pyx_t_3", scope: !10932, file: !21, line: 5097, type: !34)
!10943 = !DILocalVariable(name: "__pyx_t_4", scope: !10932, file: !21, line: 5098, type: !28)
!10944 = !DILocalVariable(name: "__pyx_t_5", scope: !10932, file: !21, line: 5099, type: !28)
!10945 = !DILocalVariable(name: "__pyx_t_6", scope: !10932, file: !21, line: 5100, type: !34)
!10946 = !DILocalVariable(name: "__pyx_t_7", scope: !10932, file: !21, line: 5101, type: !556)
!10947 = !DILocalVariable(name: "__pyx_t_8", scope: !10932, file: !21, line: 5102, type: !28)
!10948 = !DILocalVariable(name: "__pyx_t_9", scope: !10932, file: !21, line: 5103, type: !28)
!10949 = !DILocalVariable(name: "__pyx_t_10", scope: !10932, file: !21, line: 5104, type: !28)
!10950 = !DILocalVariable(name: "__pyx_t_11", scope: !10932, file: !21, line: 5105, type: !7)
!10951 = !DILocalVariable(name: "__pyx_lineno", scope: !10932, file: !21, line: 5106, type: !7)
!10952 = !DILocalVariable(name: "__pyx_filename", scope: !10932, file: !21, line: 5107, type: !54)
!10953 = !DILocalVariable(name: "__pyx_clineno", scope: !10932, file: !21, line: 5108, type: !7)
!10954 = !DILocalVariable(name: "__pyx_temp", scope: !10955, file: !21, line: 5148, type: !34)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5147, column: 5)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !21, line: 5146, column: 12)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !21, line: 5146, column: 3)
!10958 = distinct !DILexicalBlock(scope: !10932, file: !21, line: 5146, column: 3)
!10959 = !DILocalVariable(name: "tmp", scope: !10960, file: !21, line: 5160, type: !28)
!10960 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5160, column: 5)
!10961 = !DILocalVariable(name: "tmp", scope: !10962, file: !21, line: 5179, type: !28)
!10962 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5179, column: 5)
!10963 = !DILocalVariable(name: "function", scope: !10964, file: !21, line: 5225, type: !28)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !21, line: 5224, column: 31)
!10965 = distinct !DILexicalBlock(scope: !10966, file: !21, line: 5224, column: 11)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !21, line: 5222, column: 46)
!10967 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5222, column: 9)
!10968 = !DILocalVariable(name: "tmp", scope: !10969, file: !21, line: 5228, type: !28)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !21, line: 5228, column: 9)
!10970 = !DILocalVariable(name: "__pyx_callargs", scope: !10971, file: !21, line: 5234, type: !6663)
!10971 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5233, column: 5)
!10972 = !DILocalVariable(name: "function", scope: !10973, file: !21, line: 5269, type: !28)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !21, line: 5268, column: 30)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !21, line: 5268, column: 11)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !21, line: 5266, column: 44)
!10976 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5266, column: 9)
!10977 = !DILocalVariable(name: "tmp", scope: !10978, file: !21, line: 5272, type: !28)
!10978 = distinct !DILexicalBlock(scope: !10973, file: !21, line: 5272, column: 9)
!10979 = !DILocalVariable(name: "__pyx_callargs", scope: !10980, file: !21, line: 5278, type: !6663)
!10980 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5277, column: 5)
!10981 = !DILabel(scope: !10932, name: "__pyx_L1_error", file: !21, line: 5309)
!10982 = !DILabel(scope: !10932, name: "__pyx_L0", file: !21, line: 5319)
!10983 = !DILocation(line: 5089, column: 108, scope: !10932)
!10984 = !DILocation(line: 5089, column: 132, scope: !10932)
!10985 = !DILocation(line: 5090, column: 3, scope: !10932)
!10986 = !DILocation(line: 5090, column: 13, scope: !10932)
!10987 = !DILocation(line: 5091, column: 3, scope: !10932)
!10988 = !DILocation(line: 5091, column: 13, scope: !10932)
!10989 = !DILocation(line: 5092, column: 3, scope: !10932)
!10990 = !DILocation(line: 5092, column: 13, scope: !10932)
!10991 = !DILocation(line: 5093, column: 3, scope: !10932)
!10992 = !DILocation(line: 5093, column: 13, scope: !10932)
!10993 = !DILocation(line: 5095, column: 3, scope: !10932)
!10994 = !DILocation(line: 5095, column: 13, scope: !10932)
!10995 = !DILocation(line: 5096, column: 3, scope: !10932)
!10996 = !DILocation(line: 5096, column: 13, scope: !10932)
!10997 = !DILocation(line: 5097, column: 3, scope: !10932)
!10998 = !DILocation(line: 5097, column: 14, scope: !10932)
!10999 = !DILocation(line: 5098, column: 3, scope: !10932)
!11000 = !DILocation(line: 5098, column: 13, scope: !10932)
!11001 = !DILocation(line: 5099, column: 3, scope: !10932)
!11002 = !DILocation(line: 5099, column: 13, scope: !10932)
!11003 = !DILocation(line: 5100, column: 3, scope: !10932)
!11004 = !DILocation(line: 5100, column: 14, scope: !10932)
!11005 = !DILocation(line: 5101, column: 3, scope: !10932)
!11006 = !DILocation(line: 5101, column: 11, scope: !10932)
!11007 = !DILocation(line: 5102, column: 3, scope: !10932)
!11008 = !DILocation(line: 5102, column: 13, scope: !10932)
!11009 = !DILocation(line: 5103, column: 3, scope: !10932)
!11010 = !DILocation(line: 5103, column: 13, scope: !10932)
!11011 = !DILocation(line: 5104, column: 3, scope: !10932)
!11012 = !DILocation(line: 5104, column: 13, scope: !10932)
!11013 = !DILocation(line: 5105, column: 3, scope: !10932)
!11014 = !DILocation(line: 5105, column: 7, scope: !10932)
!11015 = !DILocation(line: 5106, column: 3, scope: !10932)
!11016 = !DILocation(line: 5106, column: 7, scope: !10932)
!11017 = !DILocation(line: 5107, column: 3, scope: !10932)
!11018 = !DILocation(line: 5107, column: 15, scope: !10932)
!11019 = !DILocation(line: 5108, column: 3, scope: !10932)
!11020 = !DILocation(line: 5108, column: 7, scope: !10932)
!11021 = !DILocation(line: 5118, column: 15, scope: !10932)
!11022 = !DILocation(line: 5118, column: 13, scope: !10932)
!11023 = !DILocation(line: 5118, column: 34, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !10932, file: !21, line: 5118, column: 34)
!11025 = !DILocation(line: 5118, column: 34, scope: !10932)
!11026 = !DILocation(line: 5118, column: 56, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11028, file: !21, line: 5118, column: 56)
!11028 = distinct !DILexicalBlock(scope: !11024, file: !21, line: 5118, column: 56)
!11029 = !DILocation(line: 5118, column: 56, scope: !11028)
!11030 = !DILocation(line: 5120, column: 3, scope: !10932)
!11031 = !DILocation(line: 5122, column: 7, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !10932, file: !21, line: 5122, column: 7)
!11033 = !DILocation(line: 5122, column: 7, scope: !10932)
!11034 = !DILocation(line: 5122, column: 69, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !21, line: 5122, column: 69)
!11036 = distinct !DILexicalBlock(scope: !11032, file: !21, line: 5122, column: 69)
!11037 = !DILocation(line: 5122, column: 69, scope: !11036)
!11038 = !DILocation(line: 5123, column: 28, scope: !10932)
!11039 = !DILocation(line: 5123, column: 51, scope: !10932)
!11040 = !DILocation(line: 5123, column: 15, scope: !10932)
!11041 = !DILocation(line: 5123, column: 13, scope: !10932)
!11042 = !DILocation(line: 5123, column: 70, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !10932, file: !21, line: 5123, column: 70)
!11044 = !DILocation(line: 5123, column: 70, scope: !10932)
!11045 = !DILocation(line: 5123, column: 92, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !21, line: 5123, column: 92)
!11047 = distinct !DILexicalBlock(scope: !11043, file: !21, line: 5123, column: 92)
!11048 = !DILocation(line: 5123, column: 92, scope: !11047)
!11049 = !DILocation(line: 5125, column: 3, scope: !10932)
!11050 = !DILocation(line: 5125, column: 38, scope: !10932)
!11051 = !DILocation(line: 5126, column: 32, scope: !10932)
!11052 = !DILocation(line: 5126, column: 43, scope: !10932)
!11053 = !DILocation(line: 5126, column: 15, scope: !10932)
!11054 = !DILocation(line: 5126, column: 13, scope: !10932)
!11055 = !DILocation(line: 5126, column: 73, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !10932, file: !21, line: 5126, column: 73)
!11057 = !DILocation(line: 5126, column: 73, scope: !10932)
!11058 = !DILocation(line: 5126, column: 95, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11060, file: !21, line: 5126, column: 95)
!11060 = distinct !DILexicalBlock(scope: !11056, file: !21, line: 5126, column: 95)
!11061 = !DILocation(line: 5126, column: 95, scope: !11060)
!11062 = !DILocation(line: 5128, column: 3, scope: !10932)
!11063 = !DILocation(line: 5129, column: 27, scope: !10932)
!11064 = !DILocation(line: 5129, column: 25, scope: !10932)
!11065 = !DILocation(line: 5130, column: 3, scope: !10932)
!11066 = !DILocation(line: 5130, column: 38, scope: !10932)
!11067 = !DILocation(line: 5131, column: 3, scope: !10932)
!11068 = !DILocation(line: 5131, column: 38, scope: !10932)
!11069 = !DILocation(line: 5140, column: 7, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !10932, file: !21, line: 5140, column: 7)
!11071 = !DILocation(line: 5140, column: 7, scope: !10932)
!11072 = !DILocation(line: 5141, column: 21, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11070, file: !21, line: 5140, column: 63)
!11074 = !DILocation(line: 5141, column: 5, scope: !11073)
!11075 = !DILocation(line: 5142, column: 5, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !21, line: 5142, column: 5)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !21, line: 5142, column: 5)
!11078 = !DILocation(line: 5142, column: 5, scope: !11077)
!11079 = !DILocation(line: 5144, column: 15, scope: !10932)
!11080 = !DILocation(line: 5144, column: 29, scope: !10932)
!11081 = !DILocation(line: 5144, column: 42, scope: !10932)
!11082 = !DILocation(line: 5144, column: 13, scope: !10932)
!11083 = !DILocation(line: 5144, column: 50, scope: !10932)
!11084 = !DILocation(line: 5145, column: 13, scope: !10932)
!11085 = !DILocation(line: 5146, column: 3, scope: !10932)
!11086 = !DILocation(line: 5148, column: 7, scope: !10955)
!11087 = !DILocation(line: 5148, column: 18, scope: !10955)
!11088 = !DILocation(line: 5148, column: 31, scope: !10955)
!11089 = !DILocation(line: 5152, column: 11, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !10955, file: !21, line: 5152, column: 11)
!11091 = !DILocation(line: 5152, column: 24, scope: !11090)
!11092 = !DILocation(line: 5152, column: 21, scope: !11090)
!11093 = !DILocation(line: 5152, column: 11, scope: !10955)
!11094 = !DILocation(line: 5152, column: 36, scope: !11090)
!11095 = !DILocation(line: 5153, column: 5, scope: !10956)
!11096 = !DILocation(line: 5155, column: 17, scope: !10956)
!11097 = !DILocation(line: 5155, column: 15, scope: !10956)
!11098 = !DILocation(line: 5155, column: 56, scope: !10956)
!11099 = !DILocation(line: 5155, column: 90, scope: !10956)
!11100 = !DILocation(line: 5160, column: 5, scope: !10956)
!11101 = !DILocation(line: 5160, column: 5, scope: !10960)
!11102 = !DILocation(line: 5161, column: 15, scope: !10956)
!11103 = !DILocation(line: 5170, column: 9, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5170, column: 9)
!11105 = !DILocation(line: 5170, column: 9, scope: !10956)
!11106 = !DILocation(line: 5171, column: 23, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11104, file: !21, line: 5170, column: 61)
!11108 = !DILocation(line: 5171, column: 7, scope: !11107)
!11109 = !DILocation(line: 5172, column: 7, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !21, line: 5172, column: 7)
!11111 = distinct !DILexicalBlock(scope: !11107, file: !21, line: 5172, column: 7)
!11112 = !DILocation(line: 5172, column: 7, scope: !11111)
!11113 = !DILocation(line: 5174, column: 43, scope: !10956)
!11114 = !DILocation(line: 5174, column: 61, scope: !10956)
!11115 = !DILocation(line: 5174, column: 17, scope: !10956)
!11116 = !DILocation(line: 5174, column: 15, scope: !10956)
!11117 = !DILocation(line: 5174, column: 85, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5174, column: 85)
!11119 = !DILocation(line: 5174, column: 85, scope: !10956)
!11120 = !DILocation(line: 5174, column: 107, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !21, line: 5174, column: 107)
!11122 = distinct !DILexicalBlock(scope: !11118, file: !21, line: 5174, column: 107)
!11123 = !DILocation(line: 5174, column: 107, scope: !11122)
!11124 = !DILocation(line: 5176, column: 38, scope: !10956)
!11125 = !DILocation(line: 5176, column: 52, scope: !10956)
!11126 = !DILocation(line: 5176, column: 69, scope: !10956)
!11127 = !DILocation(line: 5176, column: 17, scope: !10956)
!11128 = !DILocation(line: 5176, column: 15, scope: !10956)
!11129 = !DILocation(line: 5176, column: 85, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5176, column: 85)
!11131 = !DILocation(line: 5176, column: 85, scope: !10956)
!11132 = !DILocation(line: 5176, column: 107, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11134, file: !21, line: 5176, column: 107)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !21, line: 5176, column: 107)
!11135 = !DILocation(line: 5176, column: 107, scope: !11134)
!11136 = !DILocation(line: 5178, column: 5, scope: !10956)
!11137 = !DILocation(line: 5178, column: 40, scope: !10956)
!11138 = !DILocation(line: 5179, column: 5, scope: !10956)
!11139 = !DILocation(line: 5179, column: 5, scope: !10962)
!11140 = !DILocation(line: 5180, column: 15, scope: !10956)
!11141 = !DILocation(line: 5188, column: 43, scope: !10956)
!11142 = !DILocation(line: 5188, column: 57, scope: !10956)
!11143 = !DILocation(line: 5188, column: 17, scope: !10956)
!11144 = !DILocation(line: 5188, column: 15, scope: !10956)
!11145 = !DILocation(line: 5188, column: 79, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5188, column: 79)
!11147 = !DILocation(line: 5188, column: 79, scope: !10956)
!11148 = !DILocation(line: 5188, column: 101, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !21, line: 5188, column: 101)
!11150 = distinct !DILexicalBlock(scope: !11146, file: !21, line: 5188, column: 101)
!11151 = !DILocation(line: 5188, column: 101, scope: !11150)
!11152 = !DILocation(line: 5190, column: 17, scope: !10956)
!11153 = !DILocation(line: 5190, column: 15, scope: !10956)
!11154 = !DILocation(line: 5190, column: 37, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5190, column: 37)
!11156 = !DILocation(line: 5190, column: 37, scope: !10956)
!11157 = !DILocation(line: 5190, column: 59, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !21, line: 5190, column: 59)
!11159 = distinct !DILexicalBlock(scope: !11155, file: !21, line: 5190, column: 59)
!11160 = !DILocation(line: 5190, column: 59, scope: !11159)
!11161 = !DILocation(line: 5192, column: 15, scope: !10956)
!11162 = !DILocation(line: 5193, column: 15, scope: !10956)
!11163 = !DILocation(line: 5194, column: 5, scope: !10956)
!11164 = !{!2020, !1900, i64 208}
!11165 = !DILocation(line: 5195, column: 15, scope: !10956)
!11166 = !DILocation(line: 5197, column: 5, scope: !10956)
!11167 = !DILocation(line: 5204, column: 17, scope: !10956)
!11168 = !{!2020, !1900, i64 528}
!11169 = !DILocation(line: 5204, column: 15, scope: !10956)
!11170 = !DILocation(line: 5204, column: 87, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5204, column: 87)
!11172 = !DILocation(line: 5204, column: 87, scope: !10956)
!11173 = !DILocation(line: 5204, column: 109, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !21, line: 5204, column: 109)
!11175 = distinct !DILexicalBlock(scope: !11171, file: !21, line: 5204, column: 109)
!11176 = !DILocation(line: 5204, column: 109, scope: !11175)
!11177 = !DILocation(line: 5206, column: 71, scope: !10956)
!11178 = !DILocation(line: 5206, column: 54, scope: !10956)
!11179 = !DILocation(line: 5206, column: 83, scope: !10956)
!11180 = !DILocation(line: 5206, column: 17, scope: !10956)
!11181 = !DILocation(line: 5206, column: 15, scope: !10956)
!11182 = !DILocation(line: 5206, column: 109, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5206, column: 109)
!11184 = !DILocation(line: 5206, column: 109, scope: !10956)
!11185 = !DILocation(line: 5206, column: 131, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !21, line: 5206, column: 131)
!11187 = distinct !DILexicalBlock(scope: !11183, file: !21, line: 5206, column: 131)
!11188 = !DILocation(line: 5206, column: 131, scope: !11187)
!11189 = !DILocation(line: 5208, column: 5, scope: !10956)
!11190 = !DILocation(line: 5208, column: 40, scope: !10956)
!11191 = !DILocation(line: 5209, column: 18, scope: !10956)
!11192 = !DILocation(line: 5209, column: 62, scope: !10956)
!11193 = !DILocation(line: 5209, column: 60, scope: !10956)
!11194 = !DILocation(line: 5209, column: 17, scope: !10956)
!11195 = !DILocation(line: 5209, column: 75, scope: !10956)
!11196 = !DILocation(line: 5209, column: 119, scope: !10956)
!11197 = !DILocation(line: 5209, column: 15, scope: !10956)
!11198 = !DILocation(line: 5210, column: 18, scope: !10956)
!11199 = !DILocation(line: 5210, column: 15, scope: !10956)
!11200 = !DILocation(line: 5212, column: 5, scope: !10956)
!11201 = !DILocation(line: 5213, column: 15, scope: !10956)
!11202 = !DILocation(line: 5214, column: 5, scope: !10956)
!11203 = !{!2020, !1900, i64 288}
!11204 = !DILocation(line: 5215, column: 15, scope: !10956)
!11205 = !DILocation(line: 5217, column: 5, scope: !10956)
!11206 = !DILocation(line: 5218, column: 5, scope: !10956)
!11207 = !DILocation(line: 5219, column: 17, scope: !10956)
!11208 = !DILocation(line: 5219, column: 15, scope: !10956)
!11209 = !DILocation(line: 5219, column: 51, scope: !10956)
!11210 = !DILocation(line: 5220, column: 16, scope: !10956)
!11211 = !DILocation(line: 5222, column: 9, scope: !10967)
!11212 = !DILocation(line: 5222, column: 9, scope: !10956)
!11213 = !DILocation(line: 5223, column: 20, scope: !10966)
!11214 = !DILocation(line: 5223, column: 18, scope: !10966)
!11215 = !DILocation(line: 5224, column: 11, scope: !10965)
!11216 = !DILocation(line: 5224, column: 11, scope: !10966)
!11217 = !DILocation(line: 5225, column: 9, scope: !10964)
!11218 = !DILocation(line: 5225, column: 19, scope: !10964)
!11219 = !DILocation(line: 5225, column: 30, scope: !10964)
!11220 = !DILocation(line: 5226, column: 9, scope: !10964)
!11221 = !DILocation(line: 5227, column: 9, scope: !10964)
!11222 = !DILocation(line: 5228, column: 9, scope: !10964)
!11223 = !DILocation(line: 5228, column: 9, scope: !10969)
!11224 = !DILocation(line: 5229, column: 20, scope: !10964)
!11225 = !DILocation(line: 5230, column: 7, scope: !10965)
!11226 = !DILocation(line: 5230, column: 7, scope: !10964)
!11227 = !DILocation(line: 5231, column: 5, scope: !10966)
!11228 = !DILocation(line: 5234, column: 7, scope: !10971)
!11229 = !DILocation(line: 5234, column: 17, scope: !10971)
!11230 = !DILocation(line: 5234, column: 37, scope: !10971)
!11231 = !DILocation(line: 5234, column: 38, scope: !10971)
!11232 = !DILocation(line: 5234, column: 50, scope: !10971)
!11233 = !DILocation(line: 5235, column: 19, scope: !10971)
!11234 = !DILocation(line: 5235, column: 17, scope: !10971)
!11235 = !DILocation(line: 5236, column: 7, scope: !10971)
!11236 = !DILocation(line: 5236, column: 45, scope: !10971)
!11237 = !DILocation(line: 5237, column: 11, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !10971, file: !21, line: 5237, column: 11)
!11239 = !DILocation(line: 5237, column: 11, scope: !10971)
!11240 = !DILocation(line: 5237, column: 33, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11242, file: !21, line: 5237, column: 33)
!11242 = distinct !DILexicalBlock(scope: !11238, file: !21, line: 5237, column: 33)
!11243 = !DILocation(line: 5237, column: 33, scope: !11242)
!11244 = !DILocation(line: 5239, column: 7, scope: !10971)
!11245 = !DILocation(line: 5239, column: 42, scope: !10971)
!11246 = !DILocation(line: 5240, column: 5, scope: !10956)
!11247 = !DILocation(line: 5241, column: 71, scope: !10956)
!11248 = !DILocation(line: 5241, column: 54, scope: !10956)
!11249 = !DILocation(line: 5241, column: 83, scope: !10956)
!11250 = !DILocation(line: 5241, column: 17, scope: !10956)
!11251 = !DILocation(line: 5241, column: 15, scope: !10956)
!11252 = !DILocation(line: 5241, column: 109, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5241, column: 109)
!11254 = !DILocation(line: 5241, column: 109, scope: !10956)
!11255 = !DILocation(line: 5241, column: 131, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !21, line: 5241, column: 131)
!11257 = distinct !DILexicalBlock(scope: !11253, file: !21, line: 5241, column: 131)
!11258 = !DILocation(line: 5241, column: 131, scope: !11257)
!11259 = !DILocation(line: 5243, column: 5, scope: !10956)
!11260 = !DILocation(line: 5243, column: 40, scope: !10956)
!11261 = !DILocation(line: 5244, column: 18, scope: !10956)
!11262 = !DILocation(line: 5244, column: 62, scope: !10956)
!11263 = !DILocation(line: 5244, column: 60, scope: !10956)
!11264 = !DILocation(line: 5244, column: 17, scope: !10956)
!11265 = !DILocation(line: 5244, column: 75, scope: !10956)
!11266 = !DILocation(line: 5244, column: 119, scope: !10956)
!11267 = !DILocation(line: 5244, column: 15, scope: !10956)
!11268 = !DILocation(line: 5245, column: 18, scope: !10956)
!11269 = !DILocation(line: 5245, column: 15, scope: !10956)
!11270 = !DILocation(line: 5247, column: 5, scope: !10956)
!11271 = !DILocation(line: 5248, column: 15, scope: !10956)
!11272 = !DILocation(line: 5249, column: 5, scope: !10956)
!11273 = !{!2020, !1900, i64 296}
!11274 = !DILocation(line: 5250, column: 15, scope: !10956)
!11275 = !DILocation(line: 5252, column: 5, scope: !10956)
!11276 = !DILocation(line: 5260, column: 38, scope: !10956)
!11277 = !DILocation(line: 5260, column: 52, scope: !10956)
!11278 = !DILocation(line: 5260, column: 63, scope: !10956)
!11279 = !DILocation(line: 5260, column: 17, scope: !10956)
!11280 = !DILocation(line: 5260, column: 15, scope: !10956)
!11281 = !DILocation(line: 5260, column: 79, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !10956, file: !21, line: 5260, column: 79)
!11283 = !DILocation(line: 5260, column: 79, scope: !10956)
!11284 = !DILocation(line: 5260, column: 101, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11286, file: !21, line: 5260, column: 101)
!11286 = distinct !DILexicalBlock(scope: !11282, file: !21, line: 5260, column: 101)
!11287 = !DILocation(line: 5260, column: 101, scope: !11286)
!11288 = !DILocation(line: 5262, column: 5, scope: !10956)
!11289 = !DILocation(line: 5262, column: 40, scope: !10956)
!11290 = !DILocation(line: 5263, column: 15, scope: !10956)
!11291 = !DILocation(line: 5264, column: 16, scope: !10956)
!11292 = !DILocation(line: 5266, column: 9, scope: !10976)
!11293 = !DILocation(line: 5266, column: 9, scope: !10956)
!11294 = !DILocation(line: 5267, column: 19, scope: !10975)
!11295 = !DILocation(line: 5267, column: 17, scope: !10975)
!11296 = !DILocation(line: 5268, column: 11, scope: !10974)
!11297 = !DILocation(line: 5268, column: 11, scope: !10975)
!11298 = !DILocation(line: 5269, column: 9, scope: !10973)
!11299 = !DILocation(line: 5269, column: 19, scope: !10973)
!11300 = !DILocation(line: 5269, column: 30, scope: !10973)
!11301 = !DILocation(line: 5270, column: 9, scope: !10973)
!11302 = !DILocation(line: 5271, column: 9, scope: !10973)
!11303 = !DILocation(line: 5272, column: 9, scope: !10973)
!11304 = !DILocation(line: 5272, column: 9, scope: !10978)
!11305 = !DILocation(line: 5273, column: 20, scope: !10973)
!11306 = !DILocation(line: 5274, column: 7, scope: !10974)
!11307 = !DILocation(line: 5274, column: 7, scope: !10973)
!11308 = !DILocation(line: 5275, column: 5, scope: !10975)
!11309 = !DILocation(line: 5278, column: 7, scope: !10980)
!11310 = !DILocation(line: 5278, column: 17, scope: !10980)
!11311 = !DILocation(line: 5278, column: 37, scope: !10980)
!11312 = !DILocation(line: 5278, column: 38, scope: !10980)
!11313 = !DILocation(line: 5278, column: 49, scope: !10980)
!11314 = !DILocation(line: 5279, column: 19, scope: !10980)
!11315 = !DILocation(line: 5279, column: 17, scope: !10980)
!11316 = !DILocation(line: 5280, column: 7, scope: !10980)
!11317 = !DILocation(line: 5280, column: 43, scope: !10980)
!11318 = !DILocation(line: 5281, column: 7, scope: !10980)
!11319 = !DILocation(line: 5281, column: 42, scope: !10980)
!11320 = !DILocation(line: 5282, column: 11, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !10980, file: !21, line: 5282, column: 11)
!11322 = !DILocation(line: 5282, column: 11, scope: !10980)
!11323 = !DILocation(line: 5282, column: 33, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !21, line: 5282, column: 33)
!11325 = distinct !DILexicalBlock(scope: !11321, file: !21, line: 5282, column: 33)
!11326 = !DILocation(line: 5282, column: 33, scope: !11325)
!11327 = !DILocation(line: 5284, column: 7, scope: !10980)
!11328 = !DILocation(line: 5284, column: 42, scope: !10980)
!11329 = !DILocation(line: 5285, column: 5, scope: !10956)
!11330 = !DILocation(line: 5286, column: 5, scope: !10956)
!11331 = !DILocation(line: 5286, column: 40, scope: !10956)
!11332 = !DILocation(line: 5146, column: 3, scope: !10957)
!11333 = distinct !{!11333, !11334, !11335}
!11334 = !DILocation(line: 5146, column: 3, scope: !10958)
!11335 = !DILocation(line: 5295, column: 3, scope: !10958)
!11336 = !DILocation(line: 5296, column: 3, scope: !10932)
!11337 = !DILocation(line: 5296, column: 38, scope: !10932)
!11338 = !DILocation(line: 5307, column: 11, scope: !10932)
!11339 = !DILocation(line: 5307, column: 22, scope: !10932)
!11340 = !DILocation(line: 5308, column: 3, scope: !10932)
!11341 = !DILocation(line: 5309, column: 3, scope: !10932)
!11342 = !DILocation(line: 5310, column: 3, scope: !10932)
!11343 = !DILocation(line: 5311, column: 3, scope: !10932)
!11344 = !DILocation(line: 5312, column: 3, scope: !10932)
!11345 = !DILocation(line: 5313, column: 3, scope: !10932)
!11346 = !DILocation(line: 5314, column: 3, scope: !10932)
!11347 = !DILocation(line: 5315, column: 3, scope: !10932)
!11348 = !DILocation(line: 5316, column: 3, scope: !10932)
!11349 = !DILocation(line: 5317, column: 55, scope: !10932)
!11350 = !DILocation(line: 5317, column: 70, scope: !10932)
!11351 = !DILocation(line: 5317, column: 84, scope: !10932)
!11352 = !DILocation(line: 5317, column: 3, scope: !10932)
!11353 = !DILocation(line: 5318, column: 11, scope: !10932)
!11354 = !DILocation(line: 5318, column: 3, scope: !10932)
!11355 = !DILocation(line: 5319, column: 3, scope: !10932)
!11356 = !DILocation(line: 5320, column: 3, scope: !10932)
!11357 = !DILocation(line: 5321, column: 3, scope: !10932)
!11358 = !DILocation(line: 5322, column: 3, scope: !10932)
!11359 = !DILocation(line: 5325, column: 10, scope: !10932)
!11360 = !DILocation(line: 5325, column: 3, scope: !10932)
!11361 = !DILocation(line: 5326, column: 1, scope: !10932)
!11362 = !DISubprogram(name: "PyObject_GetItem", scope: !8895, file: !8895, line: 289, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11363 = distinct !DISubprogram(name: "__Pyx_PyObject_FormatSimpleAndDecref", scope: !21, file: !21, line: 8744, type: !105, scopeLine: 8744, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11364)
!11364 = !{!11365, !11366}
!11365 = !DILocalVariable(name: "s", arg: 1, scope: !11363, file: !21, line: 8744, type: !28)
!11366 = !DILocalVariable(name: "f", arg: 2, scope: !11363, file: !21, line: 8744, type: !28)
!11367 = !DILocation(line: 8744, column: 79, scope: !11363)
!11368 = !DILocation(line: 8744, column: 92, scope: !11363)
!11369 = !DILocation(line: 8745, column: 9, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11363, file: !21, line: 8745, column: 9)
!11371 = !DILocation(line: 8745, column: 9, scope: !11363)
!11372 = !DILocation(line: 8745, column: 23, scope: !11370)
!11373 = !DILocation(line: 8746, column: 9, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11363, file: !21, line: 8746, column: 9)
!11375 = !DILocation(line: 8746, column: 9, scope: !11363)
!11376 = !DILocation(line: 8746, column: 49, scope: !11374)
!11377 = !DILocation(line: 8746, column: 42, scope: !11374)
!11378 = !DILocation(line: 8754, column: 43, scope: !11363)
!11379 = !DILocation(line: 8754, column: 46, scope: !11363)
!11380 = !DILocation(line: 8754, column: 12, scope: !11363)
!11381 = !DILocation(line: 8754, column: 5, scope: !11363)
!11382 = !DILocation(line: 8755, column: 1, scope: !11363)
!11383 = !DISubprogram(name: "PyObject_Str", scope: !6, file: !6, line: 284, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11384 = distinct !DISubprogram(name: "PyUnicode_MAX_CHAR_VALUE", scope: !13, file: !13, line: 441, type: !11385, scopeLine: 442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11387)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{!556, !28}
!11387 = !{!11388, !11389}
!11388 = !DILocalVariable(name: "op", arg: 1, scope: !11384, file: !13, line: 441, type: !28)
!11389 = !DILocalVariable(name: "kind", scope: !11384, file: !13, line: 443, type: !7)
!11390 = !DILocation(line: 441, column: 58, scope: !11384)
!11391 = !DILocation(line: 443, column: 5, scope: !11384)
!11392 = !DILocation(line: 443, column: 9, scope: !11384)
!11393 = !DILocation(line: 446, column: 9, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11384, file: !13, line: 446, column: 9)
!11395 = !DILocation(line: 446, column: 9, scope: !11384)
!11396 = !DILocation(line: 447, column: 9, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11394, file: !13, line: 446, column: 33)
!11398 = !DILocation(line: 450, column: 12, scope: !11384)
!11399 = !DILocation(line: 450, column: 10, scope: !11384)
!11400 = !DILocation(line: 451, column: 9, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11384, file: !13, line: 451, column: 9)
!11402 = !DILocation(line: 451, column: 14, scope: !11401)
!11403 = !DILocation(line: 451, column: 9, scope: !11384)
!11404 = !DILocation(line: 452, column: 8, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !13, line: 451, column: 39)
!11406 = !DILocation(line: 454, column: 9, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11384, file: !13, line: 454, column: 9)
!11408 = !DILocation(line: 454, column: 14, scope: !11407)
!11409 = !DILocation(line: 454, column: 9, scope: !11384)
!11410 = !DILocation(line: 455, column: 9, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11407, file: !13, line: 454, column: 39)
!11412 = !DILocation(line: 458, column: 5, scope: !11384)
!11413 = !DILocation(line: 459, column: 1, scope: !11384)
!11414 = distinct !DISubprogram(name: "PyUnicode_GET_LENGTH", scope: !13, file: !13, line: 358, type: !158, scopeLine: 358, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11415)
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "op", arg: 1, scope: !11414, file: !13, line: 358, type: !28)
!11417 = !DILocation(line: 358, column: 57, scope: !11414)
!11418 = !DILocation(line: 360, column: 12, scope: !11414)
!11419 = !DILocation(line: 360, column: 37, scope: !11414)
!11420 = !{!9174, !2424, i64 16}
!11421 = !DILocation(line: 360, column: 5, scope: !11414)
!11422 = distinct !DISubprogram(name: "__Pyx_PyUnicode_Join", scope: !21, file: !21, line: 8763, type: !11423, scopeLine: 8764, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11425)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{!28, !28, !34, !34, !556}
!11425 = !{!11426, !11427, !11428, !11429, !11430, !11431, !11432, !11433, !11434, !11435, !11436, !11440, !11441, !11442, !11443, !11444}
!11426 = !DILocalVariable(name: "value_tuple", arg: 1, scope: !11422, file: !21, line: 8763, type: !28)
!11427 = !DILocalVariable(name: "value_count", arg: 2, scope: !11422, file: !21, line: 8763, type: !34)
!11428 = !DILocalVariable(name: "result_ulength", arg: 3, scope: !11422, file: !21, line: 8763, type: !34)
!11429 = !DILocalVariable(name: "max_char", arg: 4, scope: !11422, file: !21, line: 8764, type: !556)
!11430 = !DILocalVariable(name: "result_uval", scope: !11422, file: !21, line: 8766, type: !28)
!11431 = !DILocalVariable(name: "result_ukind", scope: !11422, file: !21, line: 8767, type: !7)
!11432 = !DILocalVariable(name: "kind_shift", scope: !11422, file: !21, line: 8767, type: !7)
!11433 = !DILocalVariable(name: "i", scope: !11422, file: !21, line: 8768, type: !34)
!11434 = !DILocalVariable(name: "char_pos", scope: !11422, file: !21, line: 8768, type: !34)
!11435 = !DILocalVariable(name: "result_udata", scope: !11422, file: !21, line: 8769, type: !27)
!11436 = !DILocalVariable(name: "ukind", scope: !11437, file: !21, line: 8787, type: !7)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !21, line: 8786, column: 37)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !21, line: 8786, column: 5)
!11439 = distinct !DILexicalBlock(scope: !11422, file: !21, line: 8786, column: 5)
!11440 = !DILocalVariable(name: "ulength", scope: !11437, file: !21, line: 8788, type: !34)
!11441 = !DILocalVariable(name: "udata", scope: !11437, file: !21, line: 8789, type: !27)
!11442 = !DILocalVariable(name: "uval", scope: !11437, file: !21, line: 8790, type: !28)
!11443 = !DILabel(scope: !11422, name: "overflow", file: !21, line: 8818)
!11444 = !DILabel(scope: !11422, name: "bad", file: !21, line: 8820)
!11445 = !DILocation(line: 8763, column: 49, scope: !11422)
!11446 = !DILocation(line: 8763, column: 73, scope: !11422)
!11447 = !DILocation(line: 8763, column: 97, scope: !11422)
!11448 = !DILocation(line: 8764, column: 47, scope: !11422)
!11449 = !DILocation(line: 8766, column: 5, scope: !11422)
!11450 = !DILocation(line: 8766, column: 15, scope: !11422)
!11451 = !DILocation(line: 8767, column: 5, scope: !11422)
!11452 = !DILocation(line: 8767, column: 9, scope: !11422)
!11453 = !DILocation(line: 8767, column: 23, scope: !11422)
!11454 = !DILocation(line: 8768, column: 5, scope: !11422)
!11455 = !DILocation(line: 8768, column: 16, scope: !11422)
!11456 = !DILocation(line: 8768, column: 19, scope: !11422)
!11457 = !DILocation(line: 8769, column: 5, scope: !11422)
!11458 = !DILocation(line: 8769, column: 11, scope: !11422)
!11459 = !DILocation(line: 8770, column: 5, scope: !11422)
!11460 = !DILocation(line: 8772, column: 33, scope: !11422)
!11461 = !DILocation(line: 8772, column: 49, scope: !11422)
!11462 = !DILocation(line: 8772, column: 19, scope: !11422)
!11463 = !DILocation(line: 8772, column: 17, scope: !11422)
!11464 = !DILocation(line: 8773, column: 9, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11422, file: !21, line: 8773, column: 9)
!11466 = !DILocation(line: 8773, column: 9, scope: !11422)
!11467 = !DILocation(line: 8773, column: 33, scope: !11465)
!11468 = !DILocation(line: 8774, column: 21, scope: !11422)
!11469 = !DILocation(line: 8774, column: 30, scope: !11422)
!11470 = !DILocation(line: 8774, column: 20, scope: !11422)
!11471 = !DILocation(line: 8774, column: 64, scope: !11422)
!11472 = !DILocation(line: 8774, column: 73, scope: !11422)
!11473 = !DILocation(line: 8774, column: 63, scope: !11422)
!11474 = !DILocation(line: 8774, column: 18, scope: !11422)
!11475 = !DILocation(line: 8775, column: 19, scope: !11422)
!11476 = !DILocation(line: 8775, column: 32, scope: !11422)
!11477 = !DILocation(line: 8775, column: 18, scope: !11422)
!11478 = !DILocation(line: 8775, column: 63, scope: !11422)
!11479 = !DILocation(line: 8775, column: 76, scope: !11422)
!11480 = !DILocation(line: 8775, column: 16, scope: !11422)
!11481 = !DILocation(line: 8776, column: 20, scope: !11422)
!11482 = !DILocation(line: 8776, column: 18, scope: !11422)
!11483 = !DILocation(line: 8785, column: 14, scope: !11422)
!11484 = !DILocation(line: 8786, column: 11, scope: !11439)
!11485 = !DILocation(line: 8786, column: 10, scope: !11439)
!11486 = !DILocation(line: 8786, column: 15, scope: !11438)
!11487 = !DILocation(line: 8786, column: 19, scope: !11438)
!11488 = !DILocation(line: 8786, column: 17, scope: !11438)
!11489 = !DILocation(line: 8786, column: 5, scope: !11439)
!11490 = !DILocation(line: 8787, column: 9, scope: !11437)
!11491 = !DILocation(line: 8787, column: 13, scope: !11437)
!11492 = !DILocation(line: 8788, column: 9, scope: !11437)
!11493 = !DILocation(line: 8788, column: 20, scope: !11437)
!11494 = !DILocation(line: 8789, column: 9, scope: !11437)
!11495 = !DILocation(line: 8789, column: 15, scope: !11437)
!11496 = !DILocation(line: 8790, column: 9, scope: !11437)
!11497 = !DILocation(line: 8790, column: 19, scope: !11437)
!11498 = !DILocation(line: 8790, column: 26, scope: !11437)
!11499 = !DILocation(line: 8791, column: 13, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11437, file: !21, line: 8791, column: 13)
!11501 = !DILocation(line: 8791, column: 13, scope: !11437)
!11502 = !DILocation(line: 8792, column: 13, scope: !11500)
!11503 = !DILocation(line: 8793, column: 19, scope: !11437)
!11504 = !DILocation(line: 8793, column: 17, scope: !11437)
!11505 = !DILocation(line: 8794, column: 13, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11437, file: !21, line: 8794, column: 13)
!11507 = !DILocation(line: 8794, column: 13, scope: !11437)
!11508 = !DILocation(line: 8795, column: 13, scope: !11506)
!11509 = !DILocation(line: 8796, column: 13, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11437, file: !21, line: 8796, column: 13)
!11511 = !DILocation(line: 8796, column: 13, scope: !11437)
!11512 = !DILocation(line: 8797, column: 13, scope: !11510)
!11513 = !DILocation(line: 8798, column: 17, scope: !11437)
!11514 = !DILocation(line: 8798, column: 15, scope: !11437)
!11515 = !DILocation(line: 8799, column: 17, scope: !11437)
!11516 = !DILocation(line: 8799, column: 15, scope: !11437)
!11517 = !DILocation(line: 8800, column: 39, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11437, file: !21, line: 8800, column: 13)
!11519 = !DILocation(line: 8800, column: 48, scope: !11518)
!11520 = !DILocation(line: 8800, column: 45, scope: !11518)
!11521 = !DILocation(line: 8800, column: 13, scope: !11437)
!11522 = !DILocation(line: 8801, column: 28, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11518, file: !21, line: 8800, column: 62)
!11524 = !DILocation(line: 8801, column: 44, scope: !11523)
!11525 = !DILocation(line: 8801, column: 56, scope: !11523)
!11526 = !DILocation(line: 8801, column: 53, scope: !11523)
!11527 = !DILocation(line: 8801, column: 41, scope: !11523)
!11528 = !DILocation(line: 8801, column: 69, scope: !11523)
!11529 = !DILocation(line: 8801, column: 86, scope: !11523)
!11530 = !DILocation(line: 8801, column: 97, scope: !11523)
!11531 = !DILocation(line: 8801, column: 94, scope: !11523)
!11532 = !DILocation(line: 8801, column: 13, scope: !11523)
!11533 = !DILocation(line: 8802, column: 9, scope: !11523)
!11534 = !DILocation(line: 8806, column: 43, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11518, file: !21, line: 8802, column: 16)
!11536 = !DILocation(line: 8806, column: 56, scope: !11535)
!11537 = !DILocation(line: 8806, column: 66, scope: !11535)
!11538 = !DILocation(line: 8806, column: 75, scope: !11535)
!11539 = !DILocation(line: 8806, column: 13, scope: !11535)
!11540 = !DILocation(line: 8815, column: 21, scope: !11437)
!11541 = !DILocation(line: 8815, column: 18, scope: !11437)
!11542 = !DILocation(line: 8816, column: 5, scope: !11438)
!11543 = !DILocation(line: 8816, column: 5, scope: !11437)
!11544 = !DILocation(line: 8786, column: 33, scope: !11438)
!11545 = !DILocation(line: 8786, column: 5, scope: !11438)
!11546 = distinct !{!11546, !11489, !11547, !4470}
!11547 = !DILocation(line: 8816, column: 5, scope: !11439)
!11548 = !DILocation(line: 8817, column: 12, scope: !11422)
!11549 = !DILocation(line: 8817, column: 5, scope: !11422)
!11550 = !DILocation(line: 8818, column: 1, scope: !11422)
!11551 = !DILocation(line: 8819, column: 21, scope: !11422)
!11552 = !DILocation(line: 8819, column: 5, scope: !11422)
!11553 = !DILocation(line: 8820, column: 1, scope: !11422)
!11554 = !DILocation(line: 8821, column: 5, scope: !11422)
!11555 = !DILocation(line: 8822, column: 5, scope: !11422)
!11556 = !DILocation(line: 8829, column: 1, scope: !11422)
!11557 = distinct !DISubprogram(name: "__Pyx_PyObject_FormatAndDecref", scope: !21, file: !21, line: 8756, type: !105, scopeLine: 8756, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11558)
!11558 = !{!11559, !11560, !11561}
!11559 = !DILocalVariable(name: "s", arg: 1, scope: !11557, file: !21, line: 8756, type: !28)
!11560 = !DILocalVariable(name: "f", arg: 2, scope: !11557, file: !21, line: 8756, type: !28)
!11561 = !DILocalVariable(name: "result", scope: !11557, file: !21, line: 8757, type: !28)
!11562 = !DILocation(line: 8756, column: 73, scope: !11557)
!11563 = !DILocation(line: 8756, column: 86, scope: !11557)
!11564 = !DILocation(line: 8757, column: 5, scope: !11557)
!11565 = !DILocation(line: 8757, column: 15, scope: !11557)
!11566 = !DILocation(line: 8757, column: 40, scope: !11557)
!11567 = !DILocation(line: 8757, column: 43, scope: !11557)
!11568 = !DILocation(line: 8757, column: 24, scope: !11557)
!11569 = !DILocation(line: 8758, column: 5, scope: !11557)
!11570 = !DILocation(line: 8759, column: 12, scope: !11557)
!11571 = !DILocation(line: 8760, column: 1, scope: !11557)
!11572 = !DILocation(line: 8759, column: 5, scope: !11557)
!11573 = !DISubprogram(name: "PyObject_Format", scope: !8895, file: !8895, line: 363, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11574 = distinct !DISubprogram(name: "PyUnicode_IS_ASCII", scope: !13, file: !13, line: 278, type: !11575, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11577)
!11575 = !DISubroutineType(types: !11576)
!11576 = !{!14, !28}
!11577 = !{!11578}
!11578 = !DILocalVariable(name: "op", arg: 1, scope: !11574, file: !13, line: 278, type: !28)
!11579 = !DILocation(line: 278, column: 57, scope: !11574)
!11580 = !DILocation(line: 280, column: 12, scope: !11574)
!11581 = !DILocation(line: 280, column: 37, scope: !11574)
!11582 = !DILocation(line: 280, column: 43, scope: !11574)
!11583 = !DILocation(line: 280, column: 5, scope: !11574)
!11584 = !DISubprogram(name: "PyUnicode_New", scope: !13, file: !13, line: 472, type: !11585, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{!28, !34, !556}
!11587 = distinct !DISubprogram(name: "PyUnicode_DATA", scope: !13, file: !13, line: 336, type: !11588, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11590)
!11588 = !DISubroutineType(types: !11589)
!11589 = !{!27, !28}
!11590 = !{!11591}
!11591 = !DILocalVariable(name: "op", arg: 1, scope: !11587, file: !13, line: 336, type: !28)
!11592 = !DILocation(line: 336, column: 46, scope: !11587)
!11593 = !DILocation(line: 337, column: 9, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11587, file: !13, line: 337, column: 9)
!11595 = !DILocation(line: 337, column: 9, scope: !11587)
!11596 = !DILocation(line: 338, column: 40, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11594, file: !13, line: 337, column: 35)
!11598 = !DILocation(line: 338, column: 16, scope: !11597)
!11599 = !DILocation(line: 338, column: 9, scope: !11597)
!11600 = !DILocation(line: 340, column: 39, scope: !11587)
!11601 = !DILocation(line: 340, column: 12, scope: !11587)
!11602 = !DILocation(line: 340, column: 5, scope: !11587)
!11603 = !DILocation(line: 341, column: 1, scope: !11587)
!11604 = distinct !DISubprogram(name: "PyUnicode_IS_READY", scope: !13, file: !13, line: 268, type: !11575, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11605)
!11605 = !{!11606}
!11606 = !DILocalVariable(name: "op", arg: 1, scope: !11604, file: !13, line: 268, type: !28)
!11607 = !DILocation(line: 268, column: 57, scope: !11604)
!11608 = !DILocation(line: 269, column: 12, scope: !11604)
!11609 = !DILocation(line: 269, column: 37, scope: !11604)
!11610 = !DILocation(line: 269, column: 43, scope: !11604)
!11611 = !DILocation(line: 269, column: 5, scope: !11604)
!11612 = !DISubprogram(name: "_PyUnicode_Ready", scope: !13, file: !13, line: 484, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11613 = !DISubprogram(name: "_PyUnicode_FastCopyCharacters", scope: !13, file: !13, line: 537, type: !11614, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{null, !28, !34, !28, !34, !34}
!11616 = distinct !DISubprogram(name: "PyUnicode_IS_COMPACT", scope: !13, file: !13, line: 288, type: !11575, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11617)
!11617 = !{!11618}
!11618 = !DILocalVariable(name: "op", arg: 1, scope: !11616, file: !13, line: 288, type: !28)
!11619 = !DILocation(line: 288, column: 59, scope: !11616)
!11620 = !DILocation(line: 289, column: 12, scope: !11616)
!11621 = !DILocation(line: 289, column: 37, scope: !11616)
!11622 = !DILocation(line: 289, column: 43, scope: !11616)
!11623 = !DILocation(line: 289, column: 5, scope: !11616)
!11624 = distinct !DISubprogram(name: "_PyUnicode_COMPACT_DATA", scope: !13, file: !13, line: 321, type: !11588, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11625)
!11625 = !{!11626}
!11626 = !DILocalVariable(name: "op", arg: 1, scope: !11624, file: !13, line: 321, type: !28)
!11627 = !DILocation(line: 321, column: 55, scope: !11624)
!11628 = !DILocation(line: 322, column: 9, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !13, line: 322, column: 9)
!11630 = !DILocation(line: 322, column: 9, scope: !11624)
!11631 = !DILocation(line: 323, column: 16, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11629, file: !13, line: 322, column: 33)
!11633 = !DILocation(line: 323, column: 9, scope: !11632)
!11634 = !DILocation(line: 325, column: 12, scope: !11624)
!11635 = !DILocation(line: 325, column: 5, scope: !11624)
!11636 = !DILocation(line: 326, column: 1, scope: !11624)
!11637 = distinct !DISubprogram(name: "_PyUnicode_NONCOMPACT_DATA", scope: !13, file: !13, line: 328, type: !11588, scopeLine: 328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11638)
!11638 = !{!11639, !11640}
!11639 = !DILocalVariable(name: "op", arg: 1, scope: !11637, file: !13, line: 328, type: !28)
!11640 = !DILocalVariable(name: "data", scope: !11637, file: !13, line: 329, type: !27)
!11641 = !DILocation(line: 328, column: 58, scope: !11637)
!11642 = !DILocation(line: 329, column: 5, scope: !11637)
!11643 = !DILocation(line: 329, column: 11, scope: !11637)
!11644 = !DILocation(line: 331, column: 12, scope: !11637)
!11645 = !DILocation(line: 331, column: 39, scope: !11637)
!11646 = !DILocation(line: 331, column: 44, scope: !11637)
!11647 = !DILocation(line: 331, column: 10, scope: !11637)
!11648 = !DILocation(line: 333, column: 12, scope: !11637)
!11649 = !DILocation(line: 334, column: 1, scope: !11637)
!11650 = !DILocation(line: 333, column: 5, scope: !11637)
!11651 = !DILocation(line: 5350, column: 121, scope: !1463)
!11652 = !DILocation(line: 5351, column: 3, scope: !1463)
!11653 = !DILocation(line: 5351, column: 13, scope: !1463)
!11654 = !DILocation(line: 5352, column: 3, scope: !1463)
!11655 = !DILocation(line: 5352, column: 13, scope: !1463)
!11656 = !DILocation(line: 5353, column: 3, scope: !1463)
!11657 = !DILocation(line: 5353, column: 7, scope: !1463)
!11658 = !DILocation(line: 5354, column: 3, scope: !1463)
!11659 = !DILocation(line: 5354, column: 13, scope: !1463)
!11660 = !DILocation(line: 5356, column: 3, scope: !1463)
!11661 = !DILocation(line: 5356, column: 13, scope: !1463)
!11662 = !DILocation(line: 5357, column: 3, scope: !1463)
!11663 = !DILocation(line: 5357, column: 7, scope: !1463)
!11664 = !DILocation(line: 5358, column: 3, scope: !1463)
!11665 = !DILocation(line: 5358, column: 13, scope: !1463)
!11666 = !DILocation(line: 5359, column: 3, scope: !1463)
!11667 = !DILocation(line: 5359, column: 7, scope: !1463)
!11668 = !DILocation(line: 5360, column: 3, scope: !1463)
!11669 = !DILocation(line: 5360, column: 13, scope: !1463)
!11670 = !DILocation(line: 5361, column: 3, scope: !1463)
!11671 = !DILocation(line: 5361, column: 7, scope: !1463)
!11672 = !DILocation(line: 5362, column: 3, scope: !1463)
!11673 = !DILocation(line: 5362, column: 15, scope: !1463)
!11674 = !DILocation(line: 5363, column: 3, scope: !1463)
!11675 = !DILocation(line: 5363, column: 7, scope: !1463)
!11676 = !DILocation(line: 5373, column: 15, scope: !1463)
!11677 = !DILocation(line: 5373, column: 13, scope: !1463)
!11678 = !DILocation(line: 5373, column: 35, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5373, column: 35)
!11680 = !DILocation(line: 5373, column: 35, scope: !1463)
!11681 = !DILocation(line: 5373, column: 57, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !21, line: 5373, column: 57)
!11683 = distinct !DILexicalBlock(scope: !11679, file: !21, line: 5373, column: 57)
!11684 = !DILocation(line: 5373, column: 57, scope: !11683)
!11685 = !DILocation(line: 5375, column: 3, scope: !1463)
!11686 = !DILocation(line: 5377, column: 7, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5377, column: 7)
!11688 = !DILocation(line: 5377, column: 7, scope: !1463)
!11689 = !DILocation(line: 5377, column: 86, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11691, file: !21, line: 5377, column: 86)
!11691 = distinct !DILexicalBlock(scope: !11687, file: !21, line: 5377, column: 86)
!11692 = !DILocation(line: 5377, column: 86, scope: !11691)
!11693 = !DILocation(line: 5378, column: 3, scope: !1463)
!11694 = !DILocation(line: 5380, column: 7, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5380, column: 7)
!11696 = !DILocation(line: 5380, column: 7, scope: !1463)
!11697 = !DILocation(line: 5380, column: 76, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11699, file: !21, line: 5380, column: 76)
!11699 = distinct !DILexicalBlock(scope: !11695, file: !21, line: 5380, column: 76)
!11700 = !DILocation(line: 5380, column: 76, scope: !11699)
!11701 = !DILocation(line: 5381, column: 3, scope: !1463)
!11702 = !DILocation(line: 5383, column: 7, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5383, column: 7)
!11704 = !DILocation(line: 5383, column: 7, scope: !1463)
!11705 = !DILocation(line: 5383, column: 76, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !21, line: 5383, column: 76)
!11707 = distinct !DILexicalBlock(scope: !11703, file: !21, line: 5383, column: 76)
!11708 = !DILocation(line: 5383, column: 76, scope: !11707)
!11709 = !DILocation(line: 5384, column: 31, scope: !1463)
!11710 = !DILocation(line: 5384, column: 17, scope: !1463)
!11711 = !DILocation(line: 5385, column: 13, scope: !1463)
!11712 = !DILocation(line: 5394, column: 43, scope: !1463)
!11713 = !DILocation(line: 5394, column: 58, scope: !1463)
!11714 = !{!2020, !1900, i64 344}
!11715 = !DILocation(line: 5394, column: 15, scope: !1463)
!11716 = !DILocation(line: 5394, column: 13, scope: !1463)
!11717 = !DILocation(line: 5394, column: 88, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5394, column: 88)
!11719 = !DILocation(line: 5394, column: 88, scope: !1463)
!11720 = !DILocation(line: 5394, column: 110, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !21, line: 5394, column: 110)
!11722 = distinct !DILexicalBlock(scope: !11718, file: !21, line: 5394, column: 110)
!11723 = !DILocation(line: 5394, column: 110, scope: !11722)
!11724 = !DILocation(line: 5396, column: 19, scope: !1463)
!11725 = !DILocation(line: 5396, column: 17, scope: !1463)
!11726 = !DILocation(line: 5397, column: 13, scope: !1463)
!11727 = !DILocation(line: 5406, column: 16, scope: !1463)
!11728 = !DILocation(line: 5406, column: 30, scope: !1463)
!11729 = !DILocation(line: 5406, column: 13, scope: !1463)
!11730 = !DILocation(line: 5407, column: 7, scope: !1483)
!11731 = !DILocation(line: 5407, column: 7, scope: !1463)
!11732 = !DILocation(line: 5416, column: 17, scope: !1482)
!11733 = !DILocation(line: 5416, column: 15, scope: !1482)
!11734 = !DILocation(line: 5416, column: 37, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !1482, file: !21, line: 5416, column: 37)
!11736 = !DILocation(line: 5416, column: 37, scope: !1482)
!11737 = !DILocation(line: 5416, column: 59, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !21, line: 5416, column: 59)
!11739 = distinct !DILexicalBlock(scope: !11735, file: !21, line: 5416, column: 59)
!11740 = !DILocation(line: 5416, column: 59, scope: !11739)
!11741 = !DILocation(line: 5418, column: 5, scope: !1482)
!11742 = !DILocation(line: 5420, column: 9, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !1482, file: !21, line: 5420, column: 9)
!11744 = !DILocation(line: 5420, column: 9, scope: !1482)
!11745 = !DILocation(line: 5420, column: 62, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11747, file: !21, line: 5420, column: 62)
!11747 = distinct !DILexicalBlock(scope: !11743, file: !21, line: 5420, column: 62)
!11748 = !DILocation(line: 5420, column: 62, scope: !11747)
!11749 = !DILocation(line: 5421, column: 37, scope: !1482)
!11750 = !DILocation(line: 5421, column: 52, scope: !1482)
!11751 = !DILocation(line: 5421, column: 17, scope: !1482)
!11752 = !DILocation(line: 5421, column: 15, scope: !1482)
!11753 = !DILocation(line: 5421, column: 68, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !1482, file: !21, line: 5421, column: 68)
!11755 = !DILocation(line: 5421, column: 68, scope: !1482)
!11756 = !DILocation(line: 5421, column: 90, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11758, file: !21, line: 5421, column: 90)
!11758 = distinct !DILexicalBlock(scope: !11754, file: !21, line: 5421, column: 90)
!11759 = !DILocation(line: 5421, column: 90, scope: !11758)
!11760 = !DILocation(line: 5423, column: 5, scope: !1482)
!11761 = !DILocation(line: 5423, column: 40, scope: !1482)
!11762 = !DILocation(line: 5424, column: 5, scope: !1482)
!11763 = !DILocation(line: 5424, column: 5, scope: !1481)
!11764 = !DILocation(line: 5425, column: 15, scope: !1482)
!11765 = !DILocation(line: 5434, column: 26, scope: !1482)
!11766 = !DILocation(line: 5443, column: 5, scope: !1482)
!11767 = !DILocation(line: 5454, column: 31, scope: !1485)
!11768 = !DILocation(line: 5454, column: 45, scope: !1485)
!11769 = !DILocation(line: 5454, column: 58, scope: !1485)
!11770 = !DILocation(line: 5454, column: 15, scope: !1485)
!11771 = !DILocation(line: 5455, column: 10, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !1485, file: !21, line: 5455, column: 9)
!11773 = !DILocation(line: 5455, column: 9, scope: !1485)
!11774 = !DILocation(line: 5456, column: 5, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11772, file: !21, line: 5455, column: 21)
!11776 = !DILocation(line: 5457, column: 19, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11772, file: !21, line: 5456, column: 12)
!11778 = !DILocation(line: 5457, column: 17, scope: !11777)
!11779 = !DILocation(line: 5458, column: 7, scope: !11777)
!11780 = !DILocation(line: 5460, column: 18, scope: !1485)
!11781 = !DILocation(line: 5460, column: 32, scope: !1485)
!11782 = !DILocation(line: 5460, column: 48, scope: !1485)
!11783 = !DILocation(line: 5460, column: 15, scope: !1485)
!11784 = !DILocation(line: 5461, column: 10, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !1485, file: !21, line: 5461, column: 9)
!11786 = !DILocation(line: 5461, column: 9, scope: !1485)
!11787 = !DILocation(line: 5462, column: 5, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11785, file: !21, line: 5461, column: 21)
!11789 = !DILocation(line: 5463, column: 19, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11785, file: !21, line: 5462, column: 12)
!11791 = !DILocation(line: 5463, column: 17, scope: !11790)
!11792 = !DILocation(line: 5464, column: 7, scope: !11790)
!11793 = !DILocation(line: 5466, column: 18, scope: !1485)
!11794 = !DILocation(line: 5466, column: 32, scope: !1485)
!11795 = !DILocation(line: 5466, column: 48, scope: !1485)
!11796 = !DILocation(line: 5466, column: 15, scope: !1485)
!11797 = !DILocation(line: 5467, column: 17, scope: !1485)
!11798 = !DILocation(line: 5467, column: 15, scope: !1485)
!11799 = !DILocation(line: 5467, column: 5, scope: !1485)
!11800 = !DILocation(line: 5468, column: 5, scope: !1485)
!11801 = !DILocation(line: 5469, column: 28, scope: !1485)
!11802 = !DILocation(line: 5469, column: 26, scope: !1485)
!11803 = !DILocation(line: 5470, column: 3, scope: !1485)
!11804 = !DILocation(line: 5471, column: 3, scope: !1463)
!11805 = !DILocation(line: 5480, column: 7, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5480, column: 7)
!11807 = !DILocation(line: 5480, column: 7, scope: !1463)
!11808 = !DILocation(line: 5489, column: 5, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11806, file: !21, line: 5480, column: 29)
!11810 = !DILocation(line: 5490, column: 5, scope: !11809)
!11811 = !DILocation(line: 5490, column: 5, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5490, column: 5)
!11813 = !DILocation(line: 5490, column: 80, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5490, column: 80)
!11815 = !DILocation(line: 5490, column: 80, scope: !11809)
!11816 = !DILocation(line: 5490, column: 102, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !21, line: 5490, column: 102)
!11818 = distinct !DILexicalBlock(scope: !11814, file: !21, line: 5490, column: 102)
!11819 = !DILocation(line: 5490, column: 102, scope: !11818)
!11820 = !DILocation(line: 5492, column: 17, scope: !11809)
!11821 = !DILocation(line: 5492, column: 15, scope: !11809)
!11822 = !DILocation(line: 5492, column: 37, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5492, column: 37)
!11824 = !DILocation(line: 5492, column: 37, scope: !11809)
!11825 = !DILocation(line: 5492, column: 59, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11827, file: !21, line: 5492, column: 59)
!11827 = distinct !DILexicalBlock(scope: !11823, file: !21, line: 5492, column: 59)
!11828 = !DILocation(line: 5492, column: 59, scope: !11827)
!11829 = !DILocation(line: 5494, column: 5, scope: !11809)
!11830 = !DILocation(line: 5496, column: 9, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5496, column: 9)
!11832 = !DILocation(line: 5496, column: 9, scope: !11809)
!11833 = !DILocation(line: 5496, column: 98, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !21, line: 5496, column: 98)
!11835 = distinct !DILexicalBlock(scope: !11831, file: !21, line: 5496, column: 98)
!11836 = !DILocation(line: 5496, column: 98, scope: !11835)
!11837 = !DILocation(line: 5497, column: 5, scope: !11809)
!11838 = !DILocation(line: 5499, column: 9, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5499, column: 9)
!11840 = !DILocation(line: 5499, column: 9, scope: !11809)
!11841 = !DILocation(line: 5499, column: 68, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11843, file: !21, line: 5499, column: 68)
!11843 = distinct !DILexicalBlock(scope: !11839, file: !21, line: 5499, column: 68)
!11844 = !DILocation(line: 5499, column: 68, scope: !11843)
!11845 = !DILocation(line: 5500, column: 5, scope: !11809)
!11846 = !DILocation(line: 5502, column: 9, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5502, column: 9)
!11848 = !DILocation(line: 5502, column: 9, scope: !11809)
!11849 = !DILocation(line: 5502, column: 56, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !21, line: 5502, column: 56)
!11851 = distinct !DILexicalBlock(scope: !11847, file: !21, line: 5502, column: 56)
!11852 = !DILocation(line: 5502, column: 56, scope: !11851)
!11853 = !DILocation(line: 5503, column: 17, scope: !11809)
!11854 = !DILocation(line: 5503, column: 15, scope: !11809)
!11855 = !DILocation(line: 5503, column: 37, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5503, column: 37)
!11857 = !DILocation(line: 5503, column: 37, scope: !11809)
!11858 = !DILocation(line: 5503, column: 59, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !21, line: 5503, column: 59)
!11860 = distinct !DILexicalBlock(scope: !11856, file: !21, line: 5503, column: 59)
!11861 = !DILocation(line: 5503, column: 59, scope: !11860)
!11862 = !DILocation(line: 5506, column: 9, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5506, column: 9)
!11864 = !DILocation(line: 5506, column: 9, scope: !11809)
!11865 = !DILocation(line: 5506, column: 58, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !21, line: 5506, column: 58)
!11867 = distinct !DILexicalBlock(scope: !11863, file: !21, line: 5506, column: 58)
!11868 = !DILocation(line: 5506, column: 58, scope: !11867)
!11869 = !DILocation(line: 5508, column: 9, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5508, column: 9)
!11871 = !DILocation(line: 5508, column: 9, scope: !11809)
!11872 = !DILocation(line: 5508, column: 58, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !21, line: 5508, column: 58)
!11874 = distinct !DILexicalBlock(scope: !11870, file: !21, line: 5508, column: 58)
!11875 = !DILocation(line: 5508, column: 58, scope: !11874)
!11876 = !DILocation(line: 5509, column: 5, scope: !11809)
!11877 = !DILocation(line: 5511, column: 9, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 5511, column: 9)
!11879 = !DILocation(line: 5511, column: 9, scope: !11809)
!11880 = !DILocation(line: 5511, column: 62, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11882, file: !21, line: 5511, column: 62)
!11882 = distinct !DILexicalBlock(scope: !11878, file: !21, line: 5511, column: 62)
!11883 = !DILocation(line: 5511, column: 62, scope: !11882)
!11884 = !DILocation(line: 5512, column: 15, scope: !11809)
!11885 = !DILocation(line: 5513, column: 15, scope: !11809)
!11886 = !DILocation(line: 5514, column: 15, scope: !11809)
!11887 = !DILocation(line: 5514, column: 13, scope: !11809)
!11888 = !DILocation(line: 5515, column: 15, scope: !11809)
!11889 = !DILocation(line: 5516, column: 5, scope: !11809)
!11890 = !DILocation(line: 5535, column: 5, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !1463, file: !21, line: 5534, column: 12)
!11892 = !DILocation(line: 5536, column: 5, scope: !11891)
!11893 = !DILocation(line: 5536, column: 5, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5536, column: 5)
!11895 = !DILocation(line: 5536, column: 80, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5536, column: 80)
!11897 = !DILocation(line: 5536, column: 80, scope: !11891)
!11898 = !DILocation(line: 5536, column: 102, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11900, file: !21, line: 5536, column: 102)
!11900 = distinct !DILexicalBlock(scope: !11896, file: !21, line: 5536, column: 102)
!11901 = !DILocation(line: 5536, column: 102, scope: !11900)
!11902 = !DILocation(line: 5538, column: 17, scope: !11891)
!11903 = !DILocation(line: 5538, column: 15, scope: !11891)
!11904 = !DILocation(line: 5538, column: 37, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5538, column: 37)
!11906 = !DILocation(line: 5538, column: 37, scope: !11891)
!11907 = !DILocation(line: 5538, column: 59, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !21, line: 5538, column: 59)
!11909 = distinct !DILexicalBlock(scope: !11905, file: !21, line: 5538, column: 59)
!11910 = !DILocation(line: 5538, column: 59, scope: !11909)
!11911 = !DILocation(line: 5540, column: 5, scope: !11891)
!11912 = !DILocation(line: 5542, column: 9, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5542, column: 9)
!11914 = !DILocation(line: 5542, column: 9, scope: !11891)
!11915 = !DILocation(line: 5542, column: 98, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11917, file: !21, line: 5542, column: 98)
!11917 = distinct !DILexicalBlock(scope: !11913, file: !21, line: 5542, column: 98)
!11918 = !DILocation(line: 5542, column: 98, scope: !11917)
!11919 = !DILocation(line: 5543, column: 5, scope: !11891)
!11920 = !DILocation(line: 5545, column: 9, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5545, column: 9)
!11922 = !DILocation(line: 5545, column: 9, scope: !11891)
!11923 = !DILocation(line: 5545, column: 68, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11925, file: !21, line: 5545, column: 68)
!11925 = distinct !DILexicalBlock(scope: !11921, file: !21, line: 5545, column: 68)
!11926 = !DILocation(line: 5545, column: 68, scope: !11925)
!11927 = !DILocation(line: 5546, column: 5, scope: !11891)
!11928 = !DILocation(line: 5548, column: 9, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5548, column: 9)
!11930 = !DILocation(line: 5548, column: 9, scope: !11891)
!11931 = !DILocation(line: 5548, column: 62, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !21, line: 5548, column: 62)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !21, line: 5548, column: 62)
!11934 = !DILocation(line: 5548, column: 62, scope: !11933)
!11935 = !DILocation(line: 5549, column: 17, scope: !11891)
!11936 = !DILocation(line: 5549, column: 15, scope: !11891)
!11937 = !DILocation(line: 5549, column: 37, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5549, column: 37)
!11939 = !DILocation(line: 5549, column: 37, scope: !11891)
!11940 = !DILocation(line: 5549, column: 59, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !21, line: 5549, column: 59)
!11942 = distinct !DILexicalBlock(scope: !11938, file: !21, line: 5549, column: 59)
!11943 = !DILocation(line: 5549, column: 59, scope: !11942)
!11944 = !DILocation(line: 5552, column: 9, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5552, column: 9)
!11946 = !DILocation(line: 5552, column: 9, scope: !11891)
!11947 = !DILocation(line: 5552, column: 58, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !21, line: 5552, column: 58)
!11949 = distinct !DILexicalBlock(scope: !11945, file: !21, line: 5552, column: 58)
!11950 = !DILocation(line: 5552, column: 58, scope: !11949)
!11951 = !DILocation(line: 5554, column: 9, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11891, file: !21, line: 5554, column: 9)
!11953 = !DILocation(line: 5554, column: 9, scope: !11891)
!11954 = !DILocation(line: 5554, column: 58, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !21, line: 5554, column: 58)
!11956 = distinct !DILexicalBlock(scope: !11952, file: !21, line: 5554, column: 58)
!11957 = !DILocation(line: 5554, column: 58, scope: !11956)
!11958 = !DILocation(line: 5555, column: 15, scope: !11891)
!11959 = !DILocation(line: 5556, column: 15, scope: !11891)
!11960 = !DILocation(line: 5557, column: 15, scope: !11891)
!11961 = !DILocation(line: 5557, column: 13, scope: !11891)
!11962 = !DILocation(line: 5558, column: 15, scope: !11891)
!11963 = !DILocation(line: 5559, column: 5, scope: !11891)
!11964 = !DILocation(line: 5569, column: 3, scope: !1463)
!11965 = !DILocation(line: 5570, column: 3, scope: !1463)
!11966 = !DILocation(line: 5571, column: 3, scope: !1463)
!11967 = !DILocation(line: 5572, column: 3, scope: !1463)
!11968 = !DILocation(line: 5573, column: 68, scope: !1463)
!11969 = !DILocation(line: 5573, column: 83, scope: !1463)
!11970 = !DILocation(line: 5573, column: 97, scope: !1463)
!11971 = !DILocation(line: 5573, column: 3, scope: !1463)
!11972 = !DILocation(line: 5574, column: 11, scope: !1463)
!11973 = !DILocation(line: 5574, column: 3, scope: !1463)
!11974 = !DILocation(line: 5575, column: 3, scope: !1463)
!11975 = !DILocation(line: 5576, column: 3, scope: !1463)
!11976 = !DILocation(line: 5577, column: 3, scope: !1463)
!11977 = !DILocation(line: 5580, column: 10, scope: !1463)
!11978 = !DILocation(line: 5581, column: 1, scope: !1463)
!11979 = !DILocation(line: 5580, column: 3, scope: !1463)
!11980 = distinct !DISubprogram(name: "__Pyx_GetAttr3", scope: !21, file: !21, line: 8841, type: !114, scopeLine: 8841, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11981)
!11981 = !{!11982, !11983, !11984, !11985}
!11982 = !DILocalVariable(name: "o", arg: 1, scope: !11980, file: !21, line: 8841, type: !28)
!11983 = !DILocalVariable(name: "n", arg: 2, scope: !11980, file: !21, line: 8841, type: !28)
!11984 = !DILocalVariable(name: "d", arg: 3, scope: !11980, file: !21, line: 8841, type: !28)
!11985 = !DILocalVariable(name: "r", scope: !11980, file: !21, line: 8842, type: !28)
!11986 = !DILocation(line: 8841, column: 57, scope: !11980)
!11987 = !DILocation(line: 8841, column: 70, scope: !11980)
!11988 = !DILocation(line: 8841, column: 83, scope: !11980)
!11989 = !DILocation(line: 8842, column: 5, scope: !11980)
!11990 = !DILocation(line: 8842, column: 15, scope: !11980)
!11991 = !DILocation(line: 8844, column: 9, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11980, file: !21, line: 8844, column: 9)
!11993 = !DILocation(line: 8844, column: 9, scope: !11980)
!11994 = !DILocation(line: 8845, column: 46, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11992, file: !21, line: 8844, column: 36)
!11996 = !DILocation(line: 8845, column: 49, scope: !11995)
!11997 = !DILocation(line: 8845, column: 13, scope: !11995)
!11998 = !DILocation(line: 8845, column: 11, scope: !11995)
!11999 = !DILocation(line: 8846, column: 13, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11995, file: !21, line: 8846, column: 13)
!12001 = !DILocation(line: 8846, column: 26, scope: !12000)
!12002 = !DILocation(line: 8846, column: 29, scope: !12000)
!12003 = !DILocation(line: 8846, column: 13, scope: !11995)
!12004 = !DILocation(line: 8847, column: 17, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12000, file: !21, line: 8846, column: 56)
!12006 = !DILocation(line: 8847, column: 15, scope: !12005)
!12007 = !DILocation(line: 8848, column: 9, scope: !12005)
!12008 = !DILocation(line: 8849, column: 16, scope: !11995)
!12009 = !DILocation(line: 8849, column: 9, scope: !11995)
!12010 = !DILocation(line: 8852, column: 26, scope: !11980)
!12011 = !DILocation(line: 8852, column: 29, scope: !11980)
!12012 = !DILocation(line: 8852, column: 9, scope: !11980)
!12013 = !DILocation(line: 8852, column: 7, scope: !11980)
!12014 = !DILocation(line: 8853, column: 13, scope: !11980)
!12015 = !DILocation(line: 8853, column: 12, scope: !11980)
!12016 = !DILocation(line: 8853, column: 26, scope: !11980)
!12017 = !DILocation(line: 8853, column: 52, scope: !11980)
!12018 = !DILocation(line: 8853, column: 30, scope: !11980)
!12019 = !DILocation(line: 8853, column: 5, scope: !11980)
!12020 = !DILocation(line: 8854, column: 1, scope: !11980)
!12021 = !DISubprogram(name: "PyNumber_InPlaceAdd", scope: !8895, file: !8895, line: 553, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12022 = distinct !DISubprogram(name: "__Pyx_GetAttr3Default", scope: !21, file: !21, line: 8832, type: !84, scopeLine: 8832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12023)
!12023 = !{!12024, !12025}
!12024 = !DILocalVariable(name: "d", arg: 1, scope: !12022, file: !21, line: 8832, type: !28)
!12025 = !DILocalVariable(name: "__pyx_tstate", scope: !12022, file: !21, line: 8833, type: !1698)
!12026 = !DILocation(line: 8832, column: 50, scope: !12022)
!12027 = !DILocation(line: 8833, column: 5, scope: !12022)
!12028 = !DILocation(line: 8834, column: 5, scope: !12022)
!12029 = !DILocation(line: 8835, column: 9, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12022, file: !21, line: 8835, column: 9)
!12031 = !DILocation(line: 8835, column: 9, scope: !12022)
!12032 = !DILocation(line: 8836, column: 9, scope: !12030)
!12033 = !DILocation(line: 8837, column: 5, scope: !12022)
!12034 = !DILocation(line: 8838, column: 5, scope: !12022)
!12035 = !DILocation(line: 8839, column: 12, scope: !12022)
!12036 = !DILocation(line: 8839, column: 5, scope: !12022)
!12037 = !DILocation(line: 8840, column: 1, scope: !12022)
!12038 = distinct !DISubprogram(name: "__pyx_pf_6Cython_4Plex_3DFA_8StateMap_8__setstate_cython__", scope: !21, file: !21, line: 5606, type: !433, scopeLine: 5606, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12039)
!12039 = !{!12040, !12041, !12042, !12043, !12044, !12045, !12046, !12047, !12048}
!12040 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !12038, file: !21, line: 5606, type: !423)
!12041 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 2, scope: !12038, file: !21, line: 5606, type: !28)
!12042 = !DILocalVariable(name: "__pyx_r", scope: !12038, file: !21, line: 5607, type: !28)
!12043 = !DILocalVariable(name: "__pyx_t_1", scope: !12038, file: !21, line: 5609, type: !28)
!12044 = !DILocalVariable(name: "__pyx_lineno", scope: !12038, file: !21, line: 5610, type: !7)
!12045 = !DILocalVariable(name: "__pyx_filename", scope: !12038, file: !21, line: 5611, type: !54)
!12046 = !DILocalVariable(name: "__pyx_clineno", scope: !12038, file: !21, line: 5612, type: !7)
!12047 = !DILabel(scope: !12038, name: "__pyx_L1_error", file: !21, line: 5635)
!12048 = !DILabel(scope: !12038, name: "__pyx_L0", file: !21, line: 5639)
!12049 = !DILocation(line: 5606, column: 123, scope: !12038)
!12050 = !DILocation(line: 5606, column: 147, scope: !12038)
!12051 = !DILocation(line: 5607, column: 3, scope: !12038)
!12052 = !DILocation(line: 5607, column: 13, scope: !12038)
!12053 = !DILocation(line: 5609, column: 3, scope: !12038)
!12054 = !DILocation(line: 5609, column: 13, scope: !12038)
!12055 = !DILocation(line: 5610, column: 3, scope: !12038)
!12056 = !DILocation(line: 5610, column: 7, scope: !12038)
!12057 = !DILocation(line: 5611, column: 3, scope: !12038)
!12058 = !DILocation(line: 5611, column: 15, scope: !12038)
!12059 = !DILocation(line: 5612, column: 3, scope: !12038)
!12060 = !DILocation(line: 5612, column: 7, scope: !12038)
!12061 = !DILocation(line: 5620, column: 9, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12038, file: !21, line: 5620, column: 7)
!12063 = !DILocation(line: 5620, column: 56, scope: !12062)
!12064 = !DILocation(line: 5620, column: 60, scope: !12062)
!12065 = !DILocation(line: 5620, column: 81, scope: !12062)
!12066 = !DILocation(line: 5620, column: 93, scope: !12062)
!12067 = !DILocation(line: 5620, column: 136, scope: !12062)
!12068 = !DILocation(line: 5620, column: 96, scope: !12062)
!12069 = !DILocation(line: 5620, column: 7, scope: !12038)
!12070 = !DILocation(line: 5620, column: 159, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12072, file: !21, line: 5620, column: 159)
!12072 = distinct !DILexicalBlock(scope: !12062, file: !21, line: 5620, column: 159)
!12073 = !DILocation(line: 5620, column: 159, scope: !12072)
!12074 = !DILocation(line: 5621, column: 77, scope: !12038)
!12075 = !DILocation(line: 5621, column: 103, scope: !12038)
!12076 = !DILocation(line: 5621, column: 15, scope: !12038)
!12077 = !DILocation(line: 5621, column: 13, scope: !12038)
!12078 = !DILocation(line: 5621, column: 130, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12038, file: !21, line: 5621, column: 130)
!12080 = !DILocation(line: 5621, column: 130, scope: !12038)
!12081 = !DILocation(line: 5621, column: 152, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12083, file: !21, line: 5621, column: 152)
!12083 = distinct !DILexicalBlock(scope: !12079, file: !21, line: 5621, column: 152)
!12084 = !DILocation(line: 5621, column: 152, scope: !12083)
!12085 = !DILocation(line: 5623, column: 3, scope: !12038)
!12086 = !DILocation(line: 5623, column: 38, scope: !12038)
!12087 = !DILocation(line: 5633, column: 11, scope: !12038)
!12088 = !DILocation(line: 5633, column: 22, scope: !12038)
!12089 = !DILocation(line: 5634, column: 3, scope: !12038)
!12090 = !DILocation(line: 5635, column: 3, scope: !12038)
!12091 = !DILocation(line: 5636, column: 3, scope: !12038)
!12092 = !DILocation(line: 5637, column: 70, scope: !12038)
!12093 = !DILocation(line: 5637, column: 85, scope: !12038)
!12094 = !DILocation(line: 5637, column: 99, scope: !12038)
!12095 = !DILocation(line: 5637, column: 3, scope: !12038)
!12096 = !DILocation(line: 5638, column: 11, scope: !12038)
!12097 = !DILocation(line: 5638, column: 3, scope: !12038)
!12098 = !DILocation(line: 5639, column: 3, scope: !12038)
!12099 = !DILocation(line: 5642, column: 10, scope: !12038)
!12100 = !DILocation(line: 5643, column: 1, scope: !12038)
!12101 = !DILocation(line: 5642, column: 3, scope: !12038)
!12102 = distinct !DISubprogram(name: "__pyx_f_6Cython_4Plex_3DFA___pyx_unpickle_StateMap__set_state", scope: !21, file: !21, line: 5958, type: !433, scopeLine: 5958, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12103)
!12103 = !{!12104, !12105, !12106, !12107, !12108, !12109, !12110, !12111, !12112, !12113, !12114, !12115, !12116, !12117, !12118, !12119, !12126, !12128, !12130, !12131}
!12104 = !DILocalVariable(name: "__pyx_v___pyx_result", arg: 1, scope: !12102, file: !21, line: 5958, type: !423)
!12105 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 2, scope: !12102, file: !21, line: 5958, type: !28)
!12106 = !DILocalVariable(name: "__pyx_r", scope: !12102, file: !21, line: 5959, type: !28)
!12107 = !DILocalVariable(name: "__pyx_t_1", scope: !12102, file: !21, line: 5961, type: !28)
!12108 = !DILocalVariable(name: "__pyx_t_2", scope: !12102, file: !21, line: 5962, type: !7)
!12109 = !DILocalVariable(name: "__pyx_t_3", scope: !12102, file: !21, line: 5963, type: !34)
!12110 = !DILocalVariable(name: "__pyx_t_4", scope: !12102, file: !21, line: 5964, type: !7)
!12111 = !DILocalVariable(name: "__pyx_t_5", scope: !12102, file: !21, line: 5965, type: !28)
!12112 = !DILocalVariable(name: "__pyx_t_6", scope: !12102, file: !21, line: 5966, type: !28)
!12113 = !DILocalVariable(name: "__pyx_t_7", scope: !12102, file: !21, line: 5967, type: !28)
!12114 = !DILocalVariable(name: "__pyx_t_8", scope: !12102, file: !21, line: 5968, type: !7)
!12115 = !DILocalVariable(name: "__pyx_lineno", scope: !12102, file: !21, line: 5969, type: !7)
!12116 = !DILocalVariable(name: "__pyx_filename", scope: !12102, file: !21, line: 5970, type: !54)
!12117 = !DILocalVariable(name: "__pyx_clineno", scope: !12102, file: !21, line: 5971, type: !7)
!12118 = !DILabel(scope: !12102, name: "__pyx_L4_bool_binop_done", file: !21, line: 6037)
!12119 = !DILocalVariable(name: "function", scope: !12120, file: !21, line: 6062, type: !28)
!12120 = distinct !DILexicalBlock(scope: !12121, file: !21, line: 6061, column: 30)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !21, line: 6061, column: 11)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !21, line: 6059, column: 44)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !21, line: 6059, column: 9)
!12124 = distinct !DILexicalBlock(scope: !12125, file: !21, line: 6038, column: 18)
!12125 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6038, column: 7)
!12126 = !DILocalVariable(name: "tmp", scope: !12127, file: !21, line: 6065, type: !28)
!12127 = distinct !DILexicalBlock(scope: !12120, file: !21, line: 6065, column: 9)
!12128 = !DILocalVariable(name: "__pyx_callargs", scope: !12129, file: !21, line: 6071, type: !6663)
!12129 = distinct !DILexicalBlock(scope: !12124, file: !21, line: 6070, column: 5)
!12130 = !DILabel(scope: !12102, name: "__pyx_L1_error", file: !21, line: 6100)
!12131 = !DILabel(scope: !12102, name: "__pyx_L0", file: !21, line: 6107)
!12132 = !DILocation(line: 5958, column: 126, scope: !12102)
!12133 = !DILocation(line: 5958, column: 158, scope: !12102)
!12134 = !DILocation(line: 5959, column: 3, scope: !12102)
!12135 = !DILocation(line: 5959, column: 13, scope: !12102)
!12136 = !DILocation(line: 5961, column: 3, scope: !12102)
!12137 = !DILocation(line: 5961, column: 13, scope: !12102)
!12138 = !DILocation(line: 5962, column: 3, scope: !12102)
!12139 = !DILocation(line: 5962, column: 7, scope: !12102)
!12140 = !DILocation(line: 5963, column: 3, scope: !12102)
!12141 = !DILocation(line: 5963, column: 14, scope: !12102)
!12142 = !DILocation(line: 5964, column: 3, scope: !12102)
!12143 = !DILocation(line: 5964, column: 7, scope: !12102)
!12144 = !DILocation(line: 5965, column: 3, scope: !12102)
!12145 = !DILocation(line: 5965, column: 13, scope: !12102)
!12146 = !DILocation(line: 5966, column: 3, scope: !12102)
!12147 = !DILocation(line: 5966, column: 13, scope: !12102)
!12148 = !DILocation(line: 5967, column: 3, scope: !12102)
!12149 = !DILocation(line: 5967, column: 13, scope: !12102)
!12150 = !DILocation(line: 5968, column: 3, scope: !12102)
!12151 = !DILocation(line: 5968, column: 7, scope: !12102)
!12152 = !DILocation(line: 5969, column: 3, scope: !12102)
!12153 = !DILocation(line: 5969, column: 7, scope: !12102)
!12154 = !DILocation(line: 5970, column: 3, scope: !12102)
!12155 = !DILocation(line: 5970, column: 15, scope: !12102)
!12156 = !DILocation(line: 5971, column: 3, scope: !12102)
!12157 = !DILocation(line: 5971, column: 7, scope: !12102)
!12158 = !DILocation(line: 5981, column: 7, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 5981, column: 7)
!12160 = !DILocation(line: 5981, column: 7, scope: !12102)
!12161 = !DILocation(line: 5982, column: 21, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12159, file: !21, line: 5981, column: 49)
!12163 = !DILocation(line: 5982, column: 5, scope: !12162)
!12164 = !DILocation(line: 5983, column: 5, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12166, file: !21, line: 5983, column: 5)
!12166 = distinct !DILexicalBlock(scope: !12162, file: !21, line: 5983, column: 5)
!12167 = !DILocation(line: 5983, column: 5, scope: !12166)
!12168 = !DILocation(line: 5985, column: 15, scope: !12102)
!12169 = !DILocation(line: 5985, column: 13, scope: !12102)
!12170 = !DILocation(line: 5985, column: 108, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 5985, column: 108)
!12172 = !DILocation(line: 5985, column: 108, scope: !12102)
!12173 = !DILocation(line: 5985, column: 130, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !21, line: 5985, column: 130)
!12175 = distinct !DILexicalBlock(scope: !12171, file: !21, line: 5985, column: 130)
!12176 = !DILocation(line: 5985, column: 130, scope: !12175)
!12177 = !DILocation(line: 5987, column: 9, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 5987, column: 7)
!12179 = !DILocation(line: 5987, column: 7, scope: !12102)
!12180 = !DILocation(line: 5987, column: 130, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !21, line: 5987, column: 130)
!12182 = distinct !DILexicalBlock(scope: !12178, file: !21, line: 5987, column: 130)
!12183 = !DILocation(line: 5987, column: 130, scope: !12182)
!12184 = !DILocation(line: 5990, column: 3, scope: !12102)
!12185 = !DILocation(line: 5991, column: 96, scope: !12102)
!12186 = !DILocation(line: 5991, column: 3, scope: !12102)
!12187 = !DILocation(line: 5991, column: 25, scope: !12102)
!12188 = !DILocation(line: 5991, column: 37, scope: !12102)
!12189 = !DILocation(line: 5992, column: 13, scope: !12102)
!12190 = !DILocation(line: 5993, column: 7, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 5993, column: 7)
!12192 = !DILocation(line: 5993, column: 7, scope: !12102)
!12193 = !DILocation(line: 5994, column: 21, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12191, file: !21, line: 5993, column: 49)
!12195 = !DILocation(line: 5994, column: 5, scope: !12194)
!12196 = !DILocation(line: 5995, column: 5, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12198, file: !21, line: 5995, column: 5)
!12198 = distinct !DILexicalBlock(scope: !12194, file: !21, line: 5995, column: 5)
!12199 = !DILocation(line: 5995, column: 5, scope: !12198)
!12200 = !DILocation(line: 5997, column: 15, scope: !12102)
!12201 = !DILocation(line: 5997, column: 13, scope: !12102)
!12202 = !DILocation(line: 5997, column: 108, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 5997, column: 108)
!12204 = !DILocation(line: 5997, column: 108, scope: !12102)
!12205 = !DILocation(line: 5997, column: 130, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !21, line: 5997, column: 130)
!12207 = distinct !DILexicalBlock(scope: !12203, file: !21, line: 5997, column: 130)
!12208 = !DILocation(line: 5997, column: 130, scope: !12207)
!12209 = !DILocation(line: 5999, column: 9, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 5999, column: 7)
!12211 = !DILocation(line: 5999, column: 45, scope: !12210)
!12212 = !DILocation(line: 5999, column: 49, scope: !12210)
!12213 = !DILocation(line: 5999, column: 60, scope: !12210)
!12214 = !DILocation(line: 5999, column: 72, scope: !12210)
!12215 = !DILocation(line: 5999, column: 114, scope: !12210)
!12216 = !DILocation(line: 5999, column: 75, scope: !12210)
!12217 = !DILocation(line: 5999, column: 7, scope: !12102)
!12218 = !DILocation(line: 5999, column: 127, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !21, line: 5999, column: 127)
!12220 = distinct !DILexicalBlock(scope: !12210, file: !21, line: 5999, column: 127)
!12221 = !DILocation(line: 5999, column: 127, scope: !12220)
!12222 = !DILocation(line: 6002, column: 3, scope: !12102)
!12223 = !DILocation(line: 6003, column: 55, scope: !12102)
!12224 = !DILocation(line: 6003, column: 3, scope: !12102)
!12225 = !DILocation(line: 6003, column: 25, scope: !12102)
!12226 = !DILocation(line: 6003, column: 41, scope: !12102)
!12227 = !DILocation(line: 6004, column: 13, scope: !12102)
!12228 = !DILocation(line: 6005, column: 7, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6005, column: 7)
!12230 = !DILocation(line: 6005, column: 7, scope: !12102)
!12231 = !DILocation(line: 6006, column: 21, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12229, file: !21, line: 6005, column: 49)
!12233 = !DILocation(line: 6006, column: 5, scope: !12232)
!12234 = !DILocation(line: 6007, column: 5, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !21, line: 6007, column: 5)
!12236 = distinct !DILexicalBlock(scope: !12232, file: !21, line: 6007, column: 5)
!12237 = !DILocation(line: 6007, column: 5, scope: !12236)
!12238 = !DILocation(line: 6009, column: 15, scope: !12102)
!12239 = !DILocation(line: 6009, column: 13, scope: !12102)
!12240 = !DILocation(line: 6009, column: 108, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6009, column: 108)
!12242 = !DILocation(line: 6009, column: 108, scope: !12102)
!12243 = !DILocation(line: 6009, column: 130, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12245, file: !21, line: 6009, column: 130)
!12245 = distinct !DILexicalBlock(scope: !12241, file: !21, line: 6009, column: 130)
!12246 = !DILocation(line: 6009, column: 130, scope: !12245)
!12247 = !DILocation(line: 6011, column: 9, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6011, column: 7)
!12249 = !DILocation(line: 6011, column: 45, scope: !12248)
!12250 = !DILocation(line: 6011, column: 49, scope: !12248)
!12251 = !DILocation(line: 6011, column: 60, scope: !12248)
!12252 = !DILocation(line: 6011, column: 72, scope: !12248)
!12253 = !DILocation(line: 6011, column: 114, scope: !12248)
!12254 = !DILocation(line: 6011, column: 75, scope: !12248)
!12255 = !DILocation(line: 6011, column: 7, scope: !12102)
!12256 = !DILocation(line: 6011, column: 127, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !21, line: 6011, column: 127)
!12258 = distinct !DILexicalBlock(scope: !12248, file: !21, line: 6011, column: 127)
!12259 = !DILocation(line: 6011, column: 127, scope: !12258)
!12260 = !DILocation(line: 6014, column: 3, scope: !12102)
!12261 = !DILocation(line: 6015, column: 55, scope: !12102)
!12262 = !DILocation(line: 6015, column: 3, scope: !12102)
!12263 = !DILocation(line: 6015, column: 25, scope: !12102)
!12264 = !DILocation(line: 6015, column: 41, scope: !12102)
!12265 = !DILocation(line: 6016, column: 13, scope: !12102)
!12266 = !DILocation(line: 6024, column: 7, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6024, column: 7)
!12268 = !DILocation(line: 6024, column: 7, scope: !12102)
!12269 = !DILocation(line: 6025, column: 21, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12267, file: !21, line: 6024, column: 49)
!12271 = !DILocation(line: 6025, column: 5, scope: !12270)
!12272 = !DILocation(line: 6026, column: 5, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !21, line: 6026, column: 5)
!12274 = distinct !DILexicalBlock(scope: !12270, file: !21, line: 6026, column: 5)
!12275 = !DILocation(line: 6026, column: 5, scope: !12274)
!12276 = !DILocation(line: 6028, column: 15, scope: !12102)
!12277 = !DILocation(line: 6028, column: 13, scope: !12102)
!12278 = !DILocation(line: 6028, column: 64, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6028, column: 64)
!12280 = !DILocation(line: 6028, column: 64, scope: !12102)
!12281 = !DILocation(line: 6028, column: 105, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !21, line: 6028, column: 105)
!12283 = distinct !DILexicalBlock(scope: !12279, file: !21, line: 6028, column: 105)
!12284 = !DILocation(line: 6028, column: 105, scope: !12283)
!12285 = !DILocation(line: 6029, column: 16, scope: !12102)
!12286 = !DILocation(line: 6029, column: 26, scope: !12102)
!12287 = !DILocation(line: 6029, column: 13, scope: !12102)
!12288 = !DILocation(line: 6030, column: 7, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6030, column: 7)
!12290 = !DILocation(line: 6030, column: 7, scope: !12102)
!12291 = !DILocation(line: 6031, column: 3, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12289, file: !21, line: 6030, column: 18)
!12293 = !DILocation(line: 6032, column: 17, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12289, file: !21, line: 6031, column: 10)
!12295 = !DILocation(line: 6032, column: 15, scope: !12294)
!12296 = !DILocation(line: 6033, column: 5, scope: !12294)
!12297 = !DILocation(line: 6035, column: 42, scope: !12102)
!12298 = !DILocation(line: 6035, column: 65, scope: !12102)
!12299 = !DILocation(line: 6035, column: 15, scope: !12102)
!12300 = !DILocation(line: 6035, column: 13, scope: !12102)
!12301 = !DILocation(line: 6035, column: 86, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12102, file: !21, line: 6035, column: 86)
!12303 = !DILocation(line: 6035, column: 86, scope: !12102)
!12304 = !DILocation(line: 6035, column: 120, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !21, line: 6035, column: 120)
!12306 = distinct !DILexicalBlock(scope: !12302, file: !21, line: 6035, column: 120)
!12307 = !DILocation(line: 6035, column: 120, scope: !12306)
!12308 = !DILocation(line: 6036, column: 15, scope: !12102)
!12309 = !DILocation(line: 6036, column: 13, scope: !12102)
!12310 = !DILocation(line: 6036, column: 3, scope: !12102)
!12311 = !DILocation(line: 6037, column: 3, scope: !12102)
!12312 = !DILocation(line: 6038, column: 7, scope: !12125)
!12313 = !DILocation(line: 6038, column: 7, scope: !12102)
!12314 = !DILocation(line: 6045, column: 56, scope: !12124)
!12315 = !DILocation(line: 6045, column: 79, scope: !12124)
!12316 = !DILocation(line: 6045, column: 17, scope: !12124)
!12317 = !DILocation(line: 6045, column: 15, scope: !12124)
!12318 = !DILocation(line: 6045, column: 100, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12124, file: !21, line: 6045, column: 100)
!12320 = !DILocation(line: 6045, column: 100, scope: !12124)
!12321 = !DILocation(line: 6045, column: 122, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !21, line: 6045, column: 122)
!12323 = distinct !DILexicalBlock(scope: !12319, file: !21, line: 6045, column: 122)
!12324 = !DILocation(line: 6045, column: 122, scope: !12323)
!12325 = !DILocation(line: 6047, column: 43, scope: !12124)
!12326 = !DILocation(line: 6047, column: 54, scope: !12124)
!12327 = !{!2020, !1900, i64 696}
!12328 = !DILocation(line: 6047, column: 17, scope: !12124)
!12329 = !DILocation(line: 6047, column: 15, scope: !12124)
!12330 = !DILocation(line: 6047, column: 77, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12124, file: !21, line: 6047, column: 77)
!12332 = !DILocation(line: 6047, column: 77, scope: !12124)
!12333 = !DILocation(line: 6047, column: 99, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !21, line: 6047, column: 99)
!12335 = distinct !DILexicalBlock(scope: !12331, file: !21, line: 6047, column: 99)
!12336 = !DILocation(line: 6047, column: 99, scope: !12335)
!12337 = !DILocation(line: 6049, column: 5, scope: !12124)
!12338 = !DILocation(line: 6049, column: 40, scope: !12124)
!12339 = !DILocation(line: 6050, column: 9, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12124, file: !21, line: 6050, column: 9)
!12341 = !DILocation(line: 6050, column: 9, scope: !12124)
!12342 = !DILocation(line: 6051, column: 23, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12340, file: !21, line: 6050, column: 51)
!12344 = !DILocation(line: 6051, column: 7, scope: !12343)
!12345 = !DILocation(line: 6052, column: 7, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12347, file: !21, line: 6052, column: 7)
!12347 = distinct !DILexicalBlock(scope: !12343, file: !21, line: 6052, column: 7)
!12348 = !DILocation(line: 6052, column: 7, scope: !12347)
!12349 = !DILocation(line: 6054, column: 17, scope: !12124)
!12350 = !DILocation(line: 6054, column: 15, scope: !12124)
!12351 = !DILocation(line: 6054, column: 110, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12124, file: !21, line: 6054, column: 110)
!12353 = !DILocation(line: 6054, column: 110, scope: !12124)
!12354 = !DILocation(line: 6054, column: 132, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12356, file: !21, line: 6054, column: 132)
!12356 = distinct !DILexicalBlock(scope: !12352, file: !21, line: 6054, column: 132)
!12357 = !DILocation(line: 6054, column: 132, scope: !12356)
!12358 = !DILocation(line: 6056, column: 15, scope: !12124)
!12359 = !DILocation(line: 6057, column: 15, scope: !12124)
!12360 = !DILocation(line: 6059, column: 9, scope: !12123)
!12361 = !DILocation(line: 6059, column: 9, scope: !12124)
!12362 = !DILocation(line: 6060, column: 19, scope: !12122)
!12363 = !DILocation(line: 6060, column: 17, scope: !12122)
!12364 = !DILocation(line: 6061, column: 11, scope: !12121)
!12365 = !DILocation(line: 6061, column: 11, scope: !12122)
!12366 = !DILocation(line: 6062, column: 9, scope: !12120)
!12367 = !DILocation(line: 6062, column: 19, scope: !12120)
!12368 = !DILocation(line: 6062, column: 30, scope: !12120)
!12369 = !DILocation(line: 6063, column: 9, scope: !12120)
!12370 = !DILocation(line: 6064, column: 9, scope: !12120)
!12371 = !DILocation(line: 6065, column: 9, scope: !12120)
!12372 = !DILocation(line: 6065, column: 9, scope: !12127)
!12373 = !DILocation(line: 6066, column: 19, scope: !12120)
!12374 = !DILocation(line: 6067, column: 7, scope: !12121)
!12375 = !DILocation(line: 6067, column: 7, scope: !12120)
!12376 = !DILocation(line: 6068, column: 5, scope: !12122)
!12377 = !DILocation(line: 6071, column: 7, scope: !12129)
!12378 = !DILocation(line: 6071, column: 17, scope: !12129)
!12379 = !DILocation(line: 6071, column: 37, scope: !12129)
!12380 = !DILocation(line: 6071, column: 38, scope: !12129)
!12381 = !DILocation(line: 6071, column: 49, scope: !12129)
!12382 = !DILocation(line: 6072, column: 19, scope: !12129)
!12383 = !DILocation(line: 6072, column: 17, scope: !12129)
!12384 = !DILocation(line: 6073, column: 7, scope: !12129)
!12385 = !DILocation(line: 6073, column: 43, scope: !12129)
!12386 = !DILocation(line: 6074, column: 7, scope: !12129)
!12387 = !DILocation(line: 6074, column: 42, scope: !12129)
!12388 = !DILocation(line: 6075, column: 11, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12129, file: !21, line: 6075, column: 11)
!12390 = !DILocation(line: 6075, column: 11, scope: !12129)
!12391 = !DILocation(line: 6075, column: 33, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12393, file: !21, line: 6075, column: 33)
!12393 = distinct !DILexicalBlock(scope: !12389, file: !21, line: 6075, column: 33)
!12394 = !DILocation(line: 6075, column: 33, scope: !12393)
!12395 = !DILocation(line: 6077, column: 7, scope: !12129)
!12396 = !DILocation(line: 6077, column: 42, scope: !12129)
!12397 = !DILocation(line: 6078, column: 5, scope: !12124)
!12398 = !DILocation(line: 6079, column: 5, scope: !12124)
!12399 = !DILocation(line: 6079, column: 40, scope: !12124)
!12400 = !DILocation(line: 6087, column: 3, scope: !12124)
!12401 = !DILocation(line: 6098, column: 11, scope: !12102)
!12402 = !DILocation(line: 6098, column: 22, scope: !12102)
!12403 = !DILocation(line: 6099, column: 3, scope: !12102)
!12404 = !DILocation(line: 6100, column: 3, scope: !12102)
!12405 = !DILocation(line: 6101, column: 3, scope: !12102)
!12406 = !DILocation(line: 6102, column: 3, scope: !12102)
!12407 = !DILocation(line: 6103, column: 3, scope: !12102)
!12408 = !DILocation(line: 6104, column: 3, scope: !12102)
!12409 = !DILocation(line: 6105, column: 76, scope: !12102)
!12410 = !DILocation(line: 6105, column: 91, scope: !12102)
!12411 = !DILocation(line: 6105, column: 105, scope: !12102)
!12412 = !DILocation(line: 6105, column: 3, scope: !12102)
!12413 = !DILocation(line: 6106, column: 11, scope: !12102)
!12414 = !DILocation(line: 6106, column: 3, scope: !12102)
!12415 = !DILocation(line: 6107, column: 3, scope: !12102)
!12416 = !DILocation(line: 6110, column: 10, scope: !12102)
!12417 = !DILocation(line: 6110, column: 3, scope: !12102)
!12418 = !DILocation(line: 6111, column: 1, scope: !12102)
!12419 = distinct !DISubprogram(name: "__Pyx_GetItemInt_Tuple_Fast", scope: !21, file: !21, line: 9043, type: !12420, scopeLine: 9045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12422)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!28, !28, !34, !7, !7}
!12422 = !{!12423, !12424, !12425, !12426, !12427, !12428}
!12423 = !DILocalVariable(name: "o", arg: 1, scope: !12419, file: !21, line: 9043, type: !28)
!12424 = !DILocalVariable(name: "i", arg: 2, scope: !12419, file: !21, line: 9043, type: !34)
!12425 = !DILocalVariable(name: "wraparound", arg: 3, scope: !12419, file: !21, line: 9044, type: !7)
!12426 = !DILocalVariable(name: "boundscheck", arg: 4, scope: !12419, file: !21, line: 9045, type: !7)
!12427 = !DILocalVariable(name: "wrapped_i", scope: !12419, file: !21, line: 9047, type: !34)
!12428 = !DILocalVariable(name: "r", scope: !12429, file: !21, line: 9052, type: !28)
!12429 = distinct !DILexicalBlock(scope: !12430, file: !21, line: 9051, column: 89)
!12430 = distinct !DILexicalBlock(scope: !12419, file: !21, line: 9051, column: 9)
!12431 = !DILocation(line: 9043, column: 70, scope: !12419)
!12432 = !DILocation(line: 9043, column: 84, scope: !12419)
!12433 = !DILocation(line: 9044, column: 85, scope: !12419)
!12434 = !DILocation(line: 9045, column: 85, scope: !12419)
!12435 = !DILocation(line: 9047, column: 5, scope: !12419)
!12436 = !DILocation(line: 9047, column: 16, scope: !12419)
!12437 = !DILocation(line: 9047, column: 28, scope: !12419)
!12438 = !DILocation(line: 9048, column: 9, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12419, file: !21, line: 9048, column: 9)
!12440 = !DILocation(line: 9048, column: 22, scope: !12439)
!12441 = !DILocation(line: 9048, column: 20, scope: !12439)
!12442 = !DILocation(line: 9048, column: 9, scope: !12419)
!12443 = !DILocation(line: 9049, column: 22, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12439, file: !21, line: 9048, column: 39)
!12445 = !DILocation(line: 9049, column: 19, scope: !12444)
!12446 = !DILocation(line: 9050, column: 5, scope: !12444)
!12447 = !DILocation(line: 9051, column: 11, scope: !12430)
!12448 = !DILocation(line: 9051, column: 24, scope: !12430)
!12449 = !DILocation(line: 9051, column: 27, scope: !12430)
!12450 = !DILocation(line: 9051, column: 9, scope: !12419)
!12451 = !DILocation(line: 9052, column: 9, scope: !12429)
!12452 = !DILocation(line: 9052, column: 19, scope: !12429)
!12453 = !DILocation(line: 9052, column: 23, scope: !12429)
!12454 = !DILocation(line: 9053, column: 9, scope: !12429)
!12455 = !DILocation(line: 9054, column: 16, scope: !12429)
!12456 = !DILocation(line: 9054, column: 9, scope: !12429)
!12457 = !DILocation(line: 9055, column: 5, scope: !12430)
!12458 = !DILocation(line: 9056, column: 37, scope: !12419)
!12459 = !DILocation(line: 9056, column: 58, scope: !12419)
!12460 = !DILocation(line: 9056, column: 40, scope: !12419)
!12461 = !DILocation(line: 9056, column: 12, scope: !12419)
!12462 = !DILocation(line: 9056, column: 5, scope: !12419)
!12463 = !DILocation(line: 9060, column: 1, scope: !12419)
!12464 = distinct !DISubprogram(name: "__Pyx_HasAttr", scope: !21, file: !21, line: 9126, type: !177, scopeLine: 9126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12465)
!12465 = !{!12466, !12467, !12468}
!12466 = !DILocalVariable(name: "o", arg: 1, scope: !12464, file: !21, line: 9126, type: !28)
!12467 = !DILocalVariable(name: "n", arg: 2, scope: !12464, file: !21, line: 9126, type: !28)
!12468 = !DILocalVariable(name: "r", scope: !12464, file: !21, line: 9127, type: !28)
!12469 = !DILocation(line: 9126, column: 50, scope: !12464)
!12470 = !DILocation(line: 9126, column: 63, scope: !12464)
!12471 = !DILocation(line: 9127, column: 5, scope: !12464)
!12472 = !DILocation(line: 9127, column: 15, scope: !12464)
!12473 = !DILocation(line: 9128, column: 9, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12464, file: !21, line: 9128, column: 9)
!12475 = !DILocation(line: 9128, column: 9, scope: !12464)
!12476 = !DILocation(line: 9129, column: 25, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12474, file: !21, line: 9128, column: 49)
!12478 = !DILocation(line: 9129, column: 9, scope: !12477)
!12479 = !DILocation(line: 9131, column: 9, scope: !12477)
!12480 = !DILocation(line: 9133, column: 23, scope: !12464)
!12481 = !DILocation(line: 9133, column: 26, scope: !12464)
!12482 = !DILocation(line: 9133, column: 9, scope: !12464)
!12483 = !DILocation(line: 9133, column: 7, scope: !12464)
!12484 = !DILocation(line: 9134, column: 10, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12464, file: !21, line: 9134, column: 9)
!12486 = !DILocation(line: 9134, column: 9, scope: !12464)
!12487 = !DILocation(line: 9135, column: 9, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12485, file: !21, line: 9134, column: 13)
!12489 = !DILocation(line: 9136, column: 9, scope: !12488)
!12490 = !DILocation(line: 9138, column: 9, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12485, file: !21, line: 9137, column: 12)
!12492 = !DILocation(line: 9139, column: 9, scope: !12491)
!12493 = !DILocation(line: 9141, column: 1, scope: !12464)
!12494 = distinct !DISubprogram(name: "__Pyx_is_valid_index", scope: !21, file: !21, line: 1220, type: !12495, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12497)
!12495 = !DISubroutineType(types: !12496)
!12496 = !{!7, !34, !34}
!12497 = !{!12498, !12499}
!12498 = !DILocalVariable(name: "i", arg: 1, scope: !12494, file: !21, line: 1220, type: !34)
!12499 = !DILocalVariable(name: "limit", arg: 2, scope: !12494, file: !21, line: 1220, type: !34)
!12500 = !DILocation(line: 1220, column: 58, scope: !12494)
!12501 = !DILocation(line: 1220, column: 72, scope: !12494)
!12502 = !DILocation(line: 1221, column: 21, scope: !12494)
!12503 = !DILocation(line: 1221, column: 34, scope: !12494)
!12504 = !DILocation(line: 1221, column: 23, scope: !12494)
!12505 = !DILocation(line: 1221, column: 5, scope: !12494)
!12506 = distinct !DISubprogram(name: "__Pyx_GetItemInt_Generic", scope: !21, file: !21, line: 9018, type: !105, scopeLine: 9018, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12507)
!12507 = !{!12508, !12509, !12510}
!12508 = !DILocalVariable(name: "o", arg: 1, scope: !12506, file: !21, line: 9018, type: !28)
!12509 = !DILocalVariable(name: "j", arg: 2, scope: !12506, file: !21, line: 9018, type: !28)
!12510 = !DILocalVariable(name: "r", scope: !12506, file: !21, line: 9019, type: !28)
!12511 = !DILocation(line: 9018, column: 53, scope: !12506)
!12512 = !DILocation(line: 9018, column: 66, scope: !12506)
!12513 = !DILocation(line: 9019, column: 5, scope: !12506)
!12514 = !DILocation(line: 9019, column: 15, scope: !12506)
!12515 = !DILocation(line: 9020, column: 9, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12506, file: !21, line: 9020, column: 9)
!12517 = !DILocation(line: 9020, column: 9, scope: !12506)
!12518 = !DILocation(line: 9020, column: 23, scope: !12516)
!12519 = !DILocation(line: 9021, column: 26, scope: !12506)
!12520 = !DILocation(line: 9021, column: 29, scope: !12506)
!12521 = !DILocation(line: 9021, column: 9, scope: !12506)
!12522 = !DILocation(line: 9021, column: 7, scope: !12506)
!12523 = !DILocation(line: 9022, column: 5, scope: !12506)
!12524 = !DILocation(line: 9023, column: 12, scope: !12506)
!12525 = !DILocation(line: 9023, column: 5, scope: !12506)
!12526 = !DILocation(line: 9024, column: 1, scope: !12506)
!12527 = !DISubprogram(name: "PyLong_FromSsize_t", scope: !5839, file: !5839, line: 19, type: !2800, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12528 = distinct !DISubprogram(name: "__Pyx_GetAttr", scope: !21, file: !21, line: 9113, type: !105, scopeLine: 9113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12529)
!12529 = !{!12530, !12531}
!12530 = !DILocalVariable(name: "o", arg: 1, scope: !12528, file: !21, line: 9113, type: !28)
!12531 = !DILocalVariable(name: "n", arg: 2, scope: !12528, file: !21, line: 9113, type: !28)
!12532 = !DILocation(line: 9113, column: 56, scope: !12528)
!12533 = !DILocation(line: 9113, column: 69, scope: !12528)
!12534 = !DILocation(line: 9116, column: 9, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12528, file: !21, line: 9116, column: 9)
!12536 = !DILocation(line: 9116, column: 9, scope: !12528)
!12537 = !DILocation(line: 9120, column: 42, scope: !12535)
!12538 = !DILocation(line: 9120, column: 45, scope: !12535)
!12539 = !DILocation(line: 9120, column: 16, scope: !12535)
!12540 = !DILocation(line: 9120, column: 9, scope: !12535)
!12541 = !DILocation(line: 9122, column: 29, scope: !12528)
!12542 = !DILocation(line: 9122, column: 32, scope: !12528)
!12543 = !DILocation(line: 9122, column: 12, scope: !12528)
!12544 = !DILocation(line: 9122, column: 5, scope: !12528)
!12545 = !DILocation(line: 9123, column: 1, scope: !12528)
!12546 = distinct !DISubprogram(name: "__Pyx_ParseOptionalKeywords", scope: !21, file: !21, line: 8142, type: !12547, scopeLine: 8150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12550)
!12547 = !DISubroutineType(types: !12548)
!12548 = !{!7, !28, !339, !12549, !28, !94, !34, !54}
!12549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!12550 = !{!12551, !12552, !12553, !12554, !12555, !12556, !12557, !12558, !12559, !12560, !12561, !12562, !12563, !12564, !12568, !12572, !12575, !12577, !12578, !12579, !12580}
!12551 = !DILocalVariable(name: "kwds", arg: 1, scope: !12546, file: !21, line: 8143, type: !28)
!12552 = !DILocalVariable(name: "kwvalues", arg: 2, scope: !12546, file: !21, line: 8144, type: !339)
!12553 = !DILocalVariable(name: "argnames", arg: 3, scope: !12546, file: !21, line: 8145, type: !12549)
!12554 = !DILocalVariable(name: "kwds2", arg: 4, scope: !12546, file: !21, line: 8146, type: !28)
!12555 = !DILocalVariable(name: "values", arg: 5, scope: !12546, file: !21, line: 8147, type: !94)
!12556 = !DILocalVariable(name: "num_pos_args", arg: 6, scope: !12546, file: !21, line: 8148, type: !34)
!12557 = !DILocalVariable(name: "function_name", arg: 7, scope: !12546, file: !21, line: 8149, type: !54)
!12558 = !DILocalVariable(name: "key", scope: !12546, file: !21, line: 8151, type: !28)
!12559 = !DILocalVariable(name: "value", scope: !12546, file: !21, line: 8151, type: !28)
!12560 = !DILocalVariable(name: "pos", scope: !12546, file: !21, line: 8152, type: !34)
!12561 = !DILocalVariable(name: "name", scope: !12546, file: !21, line: 8153, type: !12549)
!12562 = !DILocalVariable(name: "first_kw_arg", scope: !12546, file: !21, line: 8154, type: !12549)
!12563 = !DILocalVariable(name: "kwds_is_tuple", scope: !12546, file: !21, line: 8155, type: !7)
!12564 = !DILocalVariable(name: "size", scope: !12565, file: !21, line: 8160, type: !34)
!12565 = distinct !DILexicalBlock(scope: !12566, file: !21, line: 8159, column: 28)
!12566 = distinct !DILexicalBlock(scope: !12567, file: !21, line: 8159, column: 13)
!12567 = distinct !DILexicalBlock(scope: !12546, file: !21, line: 8156, column: 15)
!12568 = !DILocalVariable(name: "cmp", scope: !12569, file: !21, line: 8233, type: !7)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !21, line: 8232, column: 27)
!12570 = distinct !DILexicalBlock(scope: !12571, file: !21, line: 8231, column: 43)
!12571 = distinct !DILexicalBlock(scope: !12567, file: !21, line: 8231, column: 13)
!12572 = !DILocalVariable(name: "argname", scope: !12573, file: !21, line: 8251, type: !12549)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !21, line: 8250, column: 18)
!12574 = distinct !DILexicalBlock(scope: !12570, file: !21, line: 8249, column: 17)
!12575 = !DILocalVariable(name: "cmp", scope: !12576, file: !21, line: 8253, type: !7)
!12576 = distinct !DILexicalBlock(scope: !12573, file: !21, line: 8252, column: 49)
!12577 = !DILabel(scope: !12546, name: "arg_passed_twice", file: !21, line: 8274)
!12578 = !DILabel(scope: !12546, name: "invalid_keyword_type", file: !21, line: 8277)
!12579 = !DILabel(scope: !12546, name: "invalid_keyword", file: !21, line: 8281)
!12580 = !DILabel(scope: !12546, name: "bad", file: !21, line: 8291)
!12581 = !DILocation(line: 8143, column: 15, scope: !12546)
!12582 = !DILocation(line: 8144, column: 22, scope: !12546)
!12583 = !DILocation(line: 8145, column: 16, scope: !12546)
!12584 = !DILocation(line: 8146, column: 15, scope: !12546)
!12585 = !DILocation(line: 8147, column: 15, scope: !12546)
!12586 = !DILocation(line: 8148, column: 16, scope: !12546)
!12587 = !DILocation(line: 8149, column: 17, scope: !12546)
!12588 = !DILocation(line: 8151, column: 5, scope: !12546)
!12589 = !DILocation(line: 8151, column: 15, scope: !12546)
!12590 = !DILocation(line: 8151, column: 25, scope: !12546)
!12591 = !DILocation(line: 8152, column: 5, scope: !12546)
!12592 = !DILocation(line: 8152, column: 16, scope: !12546)
!12593 = !DILocation(line: 8153, column: 5, scope: !12546)
!12594 = !DILocation(line: 8153, column: 17, scope: !12546)
!12595 = !DILocation(line: 8154, column: 5, scope: !12546)
!12596 = !DILocation(line: 8154, column: 17, scope: !12546)
!12597 = !DILocation(line: 8154, column: 32, scope: !12546)
!12598 = !DILocation(line: 8154, column: 43, scope: !12546)
!12599 = !DILocation(line: 8154, column: 41, scope: !12546)
!12600 = !DILocation(line: 8155, column: 5, scope: !12546)
!12601 = !DILocation(line: 8155, column: 9, scope: !12546)
!12602 = !DILocation(line: 8155, column: 49, scope: !12546)
!12603 = !DILocation(line: 8155, column: 46, scope: !12546)
!12604 = !DILocation(line: 8156, column: 5, scope: !12546)
!12605 = !DILocation(line: 8157, column: 9, scope: !12567)
!12606 = !DILocation(line: 8157, column: 30, scope: !12567)
!12607 = !DILocation(line: 8158, column: 9, scope: !12567)
!12608 = !DILocation(line: 8158, column: 34, scope: !12567)
!12609 = !DILocation(line: 8159, column: 13, scope: !12566)
!12610 = !DILocation(line: 8159, column: 13, scope: !12567)
!12611 = !DILocation(line: 8160, column: 13, scope: !12565)
!12612 = !DILocation(line: 8160, column: 24, scope: !12565)
!12613 = !DILocation(line: 8162, column: 20, scope: !12565)
!12614 = !DILocation(line: 8162, column: 18, scope: !12565)
!12615 = !DILocation(line: 8167, column: 17, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12565, file: !21, line: 8167, column: 17)
!12617 = !DILocation(line: 8167, column: 24, scope: !12616)
!12618 = !DILocation(line: 8167, column: 21, scope: !12616)
!12619 = !DILocation(line: 8167, column: 17, scope: !12565)
!12620 = !DILocation(line: 8167, column: 30, scope: !12616)
!12621 = !DILocation(line: 8172, column: 19, scope: !12565)
!12622 = !DILocation(line: 8172, column: 17, scope: !12565)
!12623 = !DILocation(line: 8177, column: 21, scope: !12565)
!12624 = !DILocation(line: 8177, column: 30, scope: !12565)
!12625 = !DILocation(line: 8177, column: 19, scope: !12565)
!12626 = !DILocation(line: 8178, column: 16, scope: !12565)
!12627 = !DILocation(line: 8179, column: 9, scope: !12566)
!12628 = !DILocation(line: 8179, column: 9, scope: !12565)
!12629 = !DILocation(line: 8182, column: 30, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !21, line: 8182, column: 17)
!12631 = distinct !DILexicalBlock(scope: !12566, file: !21, line: 8181, column: 9)
!12632 = !DILocation(line: 8182, column: 18, scope: !12630)
!12633 = !DILocation(line: 8182, column: 17, scope: !12631)
!12634 = !DILocation(line: 8182, column: 57, scope: !12630)
!12635 = !DILocation(line: 8187, column: 16, scope: !12567)
!12636 = !DILocation(line: 8187, column: 14, scope: !12567)
!12637 = !DILocation(line: 8188, column: 9, scope: !12567)
!12638 = !DILocation(line: 8188, column: 17, scope: !12567)
!12639 = !DILocation(line: 8188, column: 16, scope: !12567)
!12640 = !DILocation(line: 8188, column: 22, scope: !12567)
!12641 = !DILocation(line: 8188, column: 28, scope: !12567)
!12642 = !DILocation(line: 8188, column: 27, scope: !12567)
!12643 = !DILocation(line: 8188, column: 26, scope: !12567)
!12644 = !DILocation(line: 8188, column: 36, scope: !12567)
!12645 = !DILocation(line: 8188, column: 33, scope: !12567)
!12646 = !DILocation(line: 0, scope: !12567)
!12647 = !DILocation(line: 8188, column: 46, scope: !12567)
!12648 = distinct !{!12648, !12637, !12647, !4470}
!12649 = !DILocation(line: 8189, column: 14, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12567, file: !21, line: 8189, column: 13)
!12651 = !DILocation(line: 8189, column: 13, scope: !12650)
!12652 = !DILocation(line: 8189, column: 13, scope: !12567)
!12653 = !DILocation(line: 8190, column: 37, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12650, file: !21, line: 8189, column: 20)
!12655 = !DILocation(line: 8190, column: 13, scope: !12654)
!12656 = !DILocation(line: 8190, column: 20, scope: !12654)
!12657 = !DILocation(line: 8190, column: 25, scope: !12654)
!12658 = !DILocation(line: 8190, column: 24, scope: !12654)
!12659 = !DILocation(line: 8190, column: 35, scope: !12654)
!12660 = !DILocation(line: 8195, column: 17, scope: !12654)
!12661 = !DILocation(line: 8196, column: 19, scope: !12654)
!12662 = !DILocation(line: 8197, column: 13, scope: !12654)
!12663 = distinct !{!12663, !12604, !12664}
!12664 = !DILocation(line: 8270, column: 5, scope: !12546)
!12665 = !DILocation(line: 8200, column: 9, scope: !12567)
!12666 = !DILocation(line: 8202, column: 9, scope: !12567)
!12667 = !DILocation(line: 8203, column: 16, scope: !12567)
!12668 = !DILocation(line: 8203, column: 14, scope: !12567)
!12669 = !DILocation(line: 8231, column: 13, scope: !12571)
!12670 = !DILocation(line: 8231, column: 13, scope: !12567)
!12671 = !DILocation(line: 8232, column: 13, scope: !12570)
!12672 = !DILocation(line: 8232, column: 21, scope: !12570)
!12673 = !DILocation(line: 8232, column: 20, scope: !12570)
!12674 = !DILocation(line: 8233, column: 17, scope: !12569)
!12675 = !DILocation(line: 8233, column: 21, scope: !12569)
!12676 = !DILocation(line: 8235, column: 22, scope: !12569)
!12677 = !DILocation(line: 8235, column: 60, scope: !12569)
!12678 = !DILocation(line: 8235, column: 57, scope: !12569)
!12679 = !DILocation(line: 8235, column: 21, scope: !12569)
!12680 = !DILocation(line: 8237, column: 41, scope: !12569)
!12681 = !DILocation(line: 8237, column: 40, scope: !12569)
!12682 = !DILocation(line: 8237, column: 39, scope: !12569)
!12683 = !DILocation(line: 8237, column: 47, scope: !12569)
!12684 = !DILocation(line: 8237, column: 21, scope: !12569)
!12685 = !DILocation(line: 8239, column: 21, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12569, file: !21, line: 8239, column: 21)
!12687 = !DILocation(line: 8239, column: 25, scope: !12686)
!12688 = !DILocation(line: 8239, column: 29, scope: !12686)
!12689 = !DILocation(line: 8239, column: 32, scope: !12686)
!12690 = !DILocation(line: 8239, column: 21, scope: !12569)
!12691 = !DILocation(line: 8239, column: 60, scope: !12686)
!12692 = !DILocation(line: 8240, column: 21, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12569, file: !21, line: 8240, column: 21)
!12694 = !DILocation(line: 8240, column: 25, scope: !12693)
!12695 = !DILocation(line: 8240, column: 21, scope: !12569)
!12696 = !DILocation(line: 8241, column: 45, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12693, file: !21, line: 8240, column: 31)
!12698 = !DILocation(line: 8241, column: 21, scope: !12697)
!12699 = !DILocation(line: 8241, column: 28, scope: !12697)
!12700 = !DILocation(line: 8241, column: 33, scope: !12697)
!12701 = !DILocation(line: 8241, column: 32, scope: !12697)
!12702 = !DILocation(line: 8241, column: 43, scope: !12697)
!12703 = !DILocation(line: 8245, column: 21, scope: !12697)
!12704 = !DILocation(line: 8247, column: 21, scope: !12569)
!12705 = !DILocation(line: 8248, column: 13, scope: !12570)
!12706 = distinct !{!12706, !12671, !12705, !4470}
!12707 = !DILocation(line: 8249, column: 18, scope: !12574)
!12708 = !DILocation(line: 8249, column: 17, scope: !12574)
!12709 = !DILocation(line: 8249, column: 17, scope: !12570)
!12710 = !DILocation(line: 8249, column: 24, scope: !12574)
!12711 = !DILocation(line: 8251, column: 17, scope: !12573)
!12712 = !DILocation(line: 8251, column: 29, scope: !12573)
!12713 = !DILocation(line: 8251, column: 39, scope: !12573)
!12714 = !DILocation(line: 8252, column: 17, scope: !12573)
!12715 = !DILocation(line: 8252, column: 24, scope: !12573)
!12716 = !DILocation(line: 8252, column: 35, scope: !12573)
!12717 = !DILocation(line: 8252, column: 32, scope: !12573)
!12718 = !DILocation(line: 8253, column: 21, scope: !12576)
!12719 = !DILocation(line: 8253, column: 25, scope: !12576)
!12720 = !DILocation(line: 8253, column: 34, scope: !12576)
!12721 = !DILocation(line: 8253, column: 33, scope: !12576)
!12722 = !DILocation(line: 8253, column: 32, scope: !12576)
!12723 = !DILocation(line: 8253, column: 45, scope: !12576)
!12724 = !DILocation(line: 8253, column: 42, scope: !12576)
!12725 = !DILocation(line: 8253, column: 31, scope: !12576)
!12726 = !DILocation(line: 8255, column: 26, scope: !12576)
!12727 = !DILocation(line: 8255, column: 67, scope: !12576)
!12728 = !DILocation(line: 8255, column: 64, scope: !12576)
!12729 = !DILocation(line: 8255, column: 25, scope: !12576)
!12730 = !DILocation(line: 8257, column: 45, scope: !12576)
!12731 = !DILocation(line: 8257, column: 44, scope: !12576)
!12732 = !DILocation(line: 8257, column: 43, scope: !12576)
!12733 = !DILocation(line: 8257, column: 54, scope: !12576)
!12734 = !DILocation(line: 8257, column: 25, scope: !12576)
!12735 = !DILocation(line: 8258, column: 25, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12576, file: !21, line: 8258, column: 25)
!12737 = !DILocation(line: 8258, column: 29, scope: !12736)
!12738 = !DILocation(line: 8258, column: 33, scope: !12736)
!12739 = !DILocation(line: 8258, column: 36, scope: !12736)
!12740 = !DILocation(line: 8258, column: 25, scope: !12576)
!12741 = !DILocation(line: 8258, column: 64, scope: !12736)
!12742 = !DILocation(line: 8259, column: 25, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12576, file: !21, line: 8259, column: 25)
!12744 = !DILocation(line: 8259, column: 29, scope: !12743)
!12745 = !DILocation(line: 8259, column: 25, scope: !12576)
!12746 = !DILocation(line: 8259, column: 35, scope: !12743)
!12747 = !DILocation(line: 8260, column: 28, scope: !12576)
!12748 = !DILocation(line: 8261, column: 17, scope: !12573)
!12749 = distinct !{!12749, !12714, !12748, !4470}
!12750 = !DILocation(line: 8262, column: 13, scope: !12574)
!12751 = !DILocation(line: 8263, column: 9, scope: !12570)
!12752 = !DILocation(line: 8264, column: 13, scope: !12571)
!12753 = !DILocation(line: 8265, column: 13, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12567, file: !21, line: 8265, column: 13)
!12755 = !DILocation(line: 8265, column: 13, scope: !12567)
!12756 = !DILocation(line: 8266, column: 17, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !21, line: 8266, column: 17)
!12758 = distinct !DILexicalBlock(scope: !12754, file: !21, line: 8265, column: 20)
!12759 = !DILocation(line: 8266, column: 17, scope: !12758)
!12760 = !DILocation(line: 8266, column: 62, scope: !12757)
!12761 = !DILocation(line: 8267, column: 9, scope: !12758)
!12762 = !DILocation(line: 8268, column: 13, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12754, file: !21, line: 8267, column: 16)
!12764 = !DILocation(line: 8271, column: 5, scope: !12546)
!12765 = !DILocation(line: 8272, column: 5, scope: !12546)
!12766 = !DILocation(line: 8273, column: 5, scope: !12546)
!12767 = !DILocation(line: 8274, column: 1, scope: !12546)
!12768 = !DILocation(line: 8275, column: 36, scope: !12546)
!12769 = !DILocation(line: 8275, column: 51, scope: !12546)
!12770 = !DILocation(line: 8275, column: 5, scope: !12546)
!12771 = !DILocation(line: 8276, column: 5, scope: !12546)
!12772 = !DILocation(line: 8277, column: 1, scope: !12546)
!12773 = !DILocation(line: 8278, column: 18, scope: !12546)
!12774 = !DILocation(line: 8279, column: 46, scope: !12546)
!12775 = !DILocation(line: 8278, column: 5, scope: !12546)
!12776 = !DILocation(line: 8280, column: 5, scope: !12546)
!12777 = !DILocation(line: 8281, column: 1, scope: !12546)
!12778 = !DILocation(line: 8287, column: 18, scope: !12546)
!12779 = !DILocation(line: 8289, column: 9, scope: !12546)
!12780 = !DILocation(line: 8289, column: 24, scope: !12546)
!12781 = !DILocation(line: 8287, column: 5, scope: !12546)
!12782 = !DILocation(line: 8291, column: 1, scope: !12546)
!12783 = !DILocation(line: 8292, column: 5, scope: !12546)
!12784 = !DILocation(line: 8293, column: 5, scope: !12546)
!12785 = !DILocation(line: 8294, column: 5, scope: !12546)
!12786 = !DILocation(line: 8295, column: 1, scope: !12546)
!12787 = distinct !DISubprogram(name: "__Pyx_RaiseArgtupleInvalid", scope: !21, file: !21, line: 8298, type: !12788, scopeLine: 8304, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12790)
!12788 = !DISubroutineType(types: !12789)
!12789 = !{null, !54, !7, !34, !34, !34}
!12790 = !{!12791, !12792, !12793, !12794, !12795, !12796, !12797}
!12791 = !DILocalVariable(name: "func_name", arg: 1, scope: !12787, file: !21, line: 8299, type: !54)
!12792 = !DILocalVariable(name: "exact", arg: 2, scope: !12787, file: !21, line: 8300, type: !7)
!12793 = !DILocalVariable(name: "num_min", arg: 3, scope: !12787, file: !21, line: 8301, type: !34)
!12794 = !DILocalVariable(name: "num_max", arg: 4, scope: !12787, file: !21, line: 8302, type: !34)
!12795 = !DILocalVariable(name: "num_found", arg: 5, scope: !12787, file: !21, line: 8303, type: !34)
!12796 = !DILocalVariable(name: "num_expected", scope: !12787, file: !21, line: 8305, type: !34)
!12797 = !DILocalVariable(name: "more_or_less", scope: !12787, file: !21, line: 8306, type: !54)
!12798 = !DILocation(line: 8299, column: 17, scope: !12787)
!12799 = !DILocation(line: 8300, column: 9, scope: !12787)
!12800 = !DILocation(line: 8301, column: 16, scope: !12787)
!12801 = !DILocation(line: 8302, column: 16, scope: !12787)
!12802 = !DILocation(line: 8303, column: 16, scope: !12787)
!12803 = !DILocation(line: 8305, column: 5, scope: !12787)
!12804 = !DILocation(line: 8305, column: 16, scope: !12787)
!12805 = !DILocation(line: 8306, column: 5, scope: !12787)
!12806 = !DILocation(line: 8306, column: 17, scope: !12787)
!12807 = !DILocation(line: 8307, column: 9, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12787, file: !21, line: 8307, column: 9)
!12809 = !DILocation(line: 8307, column: 21, scope: !12808)
!12810 = !DILocation(line: 8307, column: 19, scope: !12808)
!12811 = !DILocation(line: 8307, column: 9, scope: !12787)
!12812 = !DILocation(line: 8308, column: 24, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12808, file: !21, line: 8307, column: 30)
!12814 = !DILocation(line: 8308, column: 22, scope: !12813)
!12815 = !DILocation(line: 8309, column: 22, scope: !12813)
!12816 = !DILocation(line: 8310, column: 5, scope: !12813)
!12817 = !DILocation(line: 8311, column: 24, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12808, file: !21, line: 8310, column: 12)
!12819 = !DILocation(line: 8311, column: 22, scope: !12818)
!12820 = !DILocation(line: 8312, column: 22, scope: !12818)
!12821 = !DILocation(line: 8314, column: 9, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12787, file: !21, line: 8314, column: 9)
!12823 = !DILocation(line: 8314, column: 9, scope: !12787)
!12824 = !DILocation(line: 8315, column: 22, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12822, file: !21, line: 8314, column: 16)
!12826 = !DILocation(line: 8316, column: 5, scope: !12825)
!12827 = !DILocation(line: 8317, column: 18, scope: !12787)
!12828 = !DILocation(line: 8319, column: 18, scope: !12787)
!12829 = !DILocation(line: 8319, column: 29, scope: !12787)
!12830 = !DILocation(line: 8319, column: 43, scope: !12787)
!12831 = !DILocation(line: 8320, column: 19, scope: !12787)
!12832 = !DILocation(line: 8320, column: 32, scope: !12787)
!12833 = !DILocation(line: 8320, column: 18, scope: !12787)
!12834 = !DILocation(line: 8320, column: 50, scope: !12787)
!12835 = !DILocation(line: 8317, column: 5, scope: !12787)
!12836 = !DILocation(line: 8321, column: 1, scope: !12787)
!12837 = distinct !DISubprogram(name: "__pyx_pf_6Cython_4Plex_3DFA_8StateMap___init__", scope: !21, file: !21, line: 4499, type: !12838, scopeLine: 4499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12840)
!12838 = !DISubroutineType(types: !12839)
!12839 = !{!7, !423, !28}
!12840 = !{!12841, !12842, !12843, !12844, !12845, !12846, !12847, !12848, !12849}
!12841 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !12837, file: !21, line: 4499, type: !423)
!12842 = !DILocalVariable(name: "__pyx_v_new_machine", arg: 2, scope: !12837, file: !21, line: 4499, type: !28)
!12843 = !DILocalVariable(name: "__pyx_r", scope: !12837, file: !21, line: 4500, type: !7)
!12844 = !DILocalVariable(name: "__pyx_t_1", scope: !12837, file: !21, line: 4502, type: !28)
!12845 = !DILocalVariable(name: "__pyx_lineno", scope: !12837, file: !21, line: 4503, type: !7)
!12846 = !DILocalVariable(name: "__pyx_filename", scope: !12837, file: !21, line: 4504, type: !54)
!12847 = !DILocalVariable(name: "__pyx_clineno", scope: !12837, file: !21, line: 4505, type: !7)
!12848 = !DILabel(scope: !12837, name: "__pyx_L1_error", file: !21, line: 4565)
!12849 = !DILabel(scope: !12837, name: "__pyx_L0", file: !21, line: 4569)
!12850 = !DILocation(line: 4499, column: 105, scope: !12837)
!12851 = !DILocation(line: 4499, column: 129, scope: !12837)
!12852 = !DILocation(line: 4500, column: 3, scope: !12837)
!12853 = !DILocation(line: 4500, column: 7, scope: !12837)
!12854 = !DILocation(line: 4502, column: 3, scope: !12837)
!12855 = !DILocation(line: 4502, column: 13, scope: !12837)
!12856 = !DILocation(line: 4503, column: 3, scope: !12837)
!12857 = !DILocation(line: 4503, column: 7, scope: !12837)
!12858 = !DILocation(line: 4504, column: 3, scope: !12837)
!12859 = !DILocation(line: 4504, column: 15, scope: !12837)
!12860 = !DILocation(line: 4505, column: 3, scope: !12837)
!12861 = !DILocation(line: 4505, column: 7, scope: !12837)
!12862 = !DILocation(line: 4515, column: 9, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12837, file: !21, line: 4515, column: 7)
!12864 = !DILocation(line: 4515, column: 7, scope: !12837)
!12865 = !DILocation(line: 4515, column: 150, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !21, line: 4515, column: 150)
!12867 = distinct !DILexicalBlock(scope: !12863, file: !21, line: 4515, column: 150)
!12868 = !DILocation(line: 4515, column: 150, scope: !12867)
!12869 = !DILocation(line: 4516, column: 15, scope: !12837)
!12870 = !DILocation(line: 4516, column: 13, scope: !12837)
!12871 = !DILocation(line: 4517, column: 3, scope: !12837)
!12872 = !DILocation(line: 4520, column: 3, scope: !12837)
!12873 = !DILocation(line: 4521, column: 88, scope: !12837)
!12874 = !DILocation(line: 4521, column: 3, scope: !12837)
!12875 = !DILocation(line: 4521, column: 17, scope: !12837)
!12876 = !DILocation(line: 4521, column: 29, scope: !12837)
!12877 = !DILocation(line: 4522, column: 13, scope: !12837)
!12878 = !DILocation(line: 4531, column: 15, scope: !12837)
!12879 = !DILocation(line: 4531, column: 13, scope: !12837)
!12880 = !DILocation(line: 4531, column: 48, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12837, file: !21, line: 4531, column: 48)
!12882 = !DILocation(line: 4531, column: 48, scope: !12837)
!12883 = !DILocation(line: 4531, column: 70, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12885, file: !21, line: 4531, column: 70)
!12885 = distinct !DILexicalBlock(scope: !12881, file: !21, line: 4531, column: 70)
!12886 = !DILocation(line: 4531, column: 70, scope: !12885)
!12887 = !DILocation(line: 4535, column: 3, scope: !12837)
!12888 = !DILocation(line: 4536, column: 47, scope: !12837)
!12889 = !DILocation(line: 4536, column: 3, scope: !12837)
!12890 = !DILocation(line: 4536, column: 17, scope: !12837)
!12891 = !DILocation(line: 4536, column: 33, scope: !12837)
!12892 = !DILocation(line: 4537, column: 13, scope: !12837)
!12893 = !DILocation(line: 4546, column: 15, scope: !12837)
!12894 = !DILocation(line: 4546, column: 13, scope: !12837)
!12895 = !DILocation(line: 4546, column: 48, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12837, file: !21, line: 4546, column: 48)
!12897 = !DILocation(line: 4546, column: 48, scope: !12837)
!12898 = !DILocation(line: 4546, column: 70, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12900, file: !21, line: 4546, column: 70)
!12900 = distinct !DILexicalBlock(scope: !12896, file: !21, line: 4546, column: 70)
!12901 = !DILocation(line: 4546, column: 70, scope: !12900)
!12902 = !DILocation(line: 4550, column: 3, scope: !12837)
!12903 = !DILocation(line: 4551, column: 47, scope: !12837)
!12904 = !DILocation(line: 4551, column: 3, scope: !12837)
!12905 = !DILocation(line: 4551, column: 17, scope: !12837)
!12906 = !DILocation(line: 4551, column: 33, scope: !12837)
!12907 = !DILocation(line: 4552, column: 13, scope: !12837)
!12908 = !DILocation(line: 4563, column: 11, scope: !12837)
!12909 = !DILocation(line: 4564, column: 3, scope: !12837)
!12910 = !DILocation(line: 4565, column: 3, scope: !12837)
!12911 = !DILocation(line: 4566, column: 3, scope: !12837)
!12912 = !DILocation(line: 4567, column: 59, scope: !12837)
!12913 = !DILocation(line: 4567, column: 74, scope: !12837)
!12914 = !DILocation(line: 4567, column: 88, scope: !12837)
!12915 = !DILocation(line: 4567, column: 3, scope: !12837)
!12916 = !DILocation(line: 4568, column: 11, scope: !12837)
!12917 = !DILocation(line: 4568, column: 3, scope: !12837)
!12918 = !DILocation(line: 4569, column: 3, scope: !12837)
!12919 = !DILocation(line: 4571, column: 10, scope: !12837)
!12920 = !DILocation(line: 4572, column: 1, scope: !12837)
!12921 = !DILocation(line: 4571, column: 3, scope: !12837)
!12922 = !DISubprogram(name: "PyUnicode_Compare", scope: !544, file: !544, line: 981, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12923 = distinct !DISubprogram(name: "__Pyx_RaiseDoubleKeywordsError", scope: !21, file: !21, line: 8128, type: !12924, scopeLine: 8131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12926)
!12924 = !DISubroutineType(types: !12925)
!12925 = !{null, !54, !28}
!12926 = !{!12927, !12928}
!12927 = !DILocalVariable(name: "func_name", arg: 1, scope: !12923, file: !21, line: 8129, type: !54)
!12928 = !DILocalVariable(name: "kw_name", arg: 2, scope: !12923, file: !21, line: 8130, type: !28)
!12929 = !DILocation(line: 8129, column: 17, scope: !12923)
!12930 = !DILocation(line: 8130, column: 15, scope: !12923)
!12931 = !DILocation(line: 8132, column: 18, scope: !12923)
!12932 = !DILocation(line: 8134, column: 63, scope: !12923)
!12933 = !DILocation(line: 8134, column: 74, scope: !12923)
!12934 = !DILocation(line: 8132, column: 5, scope: !12923)
!12935 = !DILocation(line: 8139, column: 1, scope: !12923)
!12936 = distinct !DISubprogram(name: "__Pyx_validate_bases_tuple", scope: !21, file: !21, line: 9218, type: !12937, scopeLine: 9218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12939)
!12937 = !DISubroutineType(types: !12938)
!12938 = !{!7, !54, !34, !28}
!12939 = !{!12940, !12941, !12942, !12943, !12944, !12945, !12949, !12950, !12953}
!12940 = !DILocalVariable(name: "type_name", arg: 1, scope: !12936, file: !21, line: 9218, type: !54)
!12941 = !DILocalVariable(name: "dictoffset", arg: 2, scope: !12936, file: !21, line: 9218, type: !34)
!12942 = !DILocalVariable(name: "bases", arg: 3, scope: !12936, file: !21, line: 9218, type: !28)
!12943 = !DILocalVariable(name: "i", scope: !12936, file: !21, line: 9219, type: !34)
!12944 = !DILocalVariable(name: "n", scope: !12936, file: !21, line: 9219, type: !34)
!12945 = !DILocalVariable(name: "b0", scope: !12946, file: !21, line: 9232, type: !28)
!12946 = distinct !DILexicalBlock(scope: !12947, file: !21, line: 9227, column: 5)
!12947 = distinct !DILexicalBlock(scope: !12948, file: !21, line: 9226, column: 5)
!12948 = distinct !DILexicalBlock(scope: !12936, file: !21, line: 9226, column: 5)
!12949 = !DILocalVariable(name: "b", scope: !12946, file: !21, line: 9237, type: !42)
!12950 = !DILocalVariable(name: "b_name", scope: !12951, file: !21, line: 9252, type: !8500)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !21, line: 9251, column: 9)
!12952 = distinct !DILexicalBlock(scope: !12946, file: !21, line: 9250, column: 13)
!12953 = !DILocalVariable(name: "b_name", scope: !12954, file: !21, line: 9279, type: !8500)
!12954 = distinct !DILexicalBlock(scope: !12955, file: !21, line: 9278, column: 9)
!12955 = distinct !DILexicalBlock(scope: !12946, file: !21, line: 9277, column: 13)
!12956 = !DILocation(line: 9218, column: 51, scope: !12936)
!12957 = !DILocation(line: 9218, column: 73, scope: !12936)
!12958 = !DILocation(line: 9218, column: 95, scope: !12936)
!12959 = !DILocation(line: 9219, column: 5, scope: !12936)
!12960 = !DILocation(line: 9219, column: 16, scope: !12936)
!12961 = !DILocation(line: 9219, column: 19, scope: !12936)
!12962 = !DILocation(line: 9221, column: 9, scope: !12936)
!12963 = !DILocation(line: 9221, column: 7, scope: !12936)
!12964 = !DILocation(line: 9226, column: 12, scope: !12948)
!12965 = !DILocation(line: 9226, column: 10, scope: !12948)
!12966 = !DILocation(line: 9226, column: 17, scope: !12947)
!12967 = !DILocation(line: 9226, column: 21, scope: !12947)
!12968 = !DILocation(line: 9226, column: 19, scope: !12947)
!12969 = !DILocation(line: 9226, column: 5, scope: !12948)
!12970 = !DILocation(line: 9232, column: 9, scope: !12946)
!12971 = !DILocation(line: 9232, column: 19, scope: !12946)
!12972 = !DILocation(line: 9232, column: 24, scope: !12946)
!12973 = !DILocation(line: 9237, column: 9, scope: !12946)
!12974 = !DILocation(line: 9237, column: 23, scope: !12946)
!12975 = !DILocation(line: 9249, column: 29, scope: !12946)
!12976 = !DILocation(line: 9249, column: 11, scope: !12946)
!12977 = !DILocation(line: 9250, column: 14, scope: !12952)
!12978 = !DILocation(line: 9250, column: 13, scope: !12946)
!12979 = !DILocation(line: 9252, column: 13, scope: !12951)
!12980 = !DILocation(line: 9252, column: 28, scope: !12951)
!12981 = !DILocation(line: 9252, column: 37, scope: !12951)
!12982 = !DILocation(line: 9253, column: 26, scope: !12951)
!12983 = !DILocation(line: 9254, column: 75, scope: !12951)
!12984 = !DILocation(line: 9253, column: 13, scope: !12951)
!12985 = !DILocation(line: 9259, column: 13, scope: !12951)
!12986 = !DILocation(line: 9260, column: 9, scope: !12952)
!12987 = !DILocation(line: 9277, column: 13, scope: !12955)
!12988 = !DILocation(line: 9277, column: 24, scope: !12955)
!12989 = !DILocation(line: 9277, column: 29, scope: !12955)
!12990 = !DILocation(line: 9277, column: 32, scope: !12955)
!12991 = !DILocation(line: 9277, column: 35, scope: !12955)
!12992 = !DILocation(line: 9277, column: 13, scope: !12946)
!12993 = !DILocation(line: 9279, column: 13, scope: !12954)
!12994 = !DILocation(line: 9279, column: 28, scope: !12954)
!12995 = !DILocation(line: 9279, column: 37, scope: !12954)
!12996 = !DILocation(line: 9280, column: 26, scope: !12954)
!12997 = !DILocation(line: 9285, column: 17, scope: !12954)
!12998 = !DILocation(line: 9285, column: 28, scope: !12954)
!12999 = !DILocation(line: 9280, column: 13, scope: !12954)
!13000 = !DILocation(line: 9290, column: 13, scope: !12954)
!13001 = !DILocation(line: 9291, column: 9, scope: !12955)
!13002 = !DILocation(line: 9296, column: 5, scope: !12947)
!13003 = !DILocation(line: 9296, column: 5, scope: !12946)
!13004 = !DILocation(line: 9226, column: 25, scope: !12947)
!13005 = !DILocation(line: 9226, column: 5, scope: !12947)
!13006 = distinct !{!13006, !12969, !13007, !4470}
!13007 = !DILocation(line: 9296, column: 5, scope: !12948)
!13008 = !DILocation(line: 9297, column: 5, scope: !12936)
!13009 = !DILocation(line: 9298, column: 1, scope: !12936)
!13010 = !DISubprogram(name: "PyGC_Disable", scope: !4644, file: !4644, line: 157, type: !762, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13011 = !DISubprogram(name: "PyGC_Enable", scope: !4644, file: !4644, line: 156, type: !762, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13012 = !DISubprogram(name: "malloc", scope: !13013, file: !13013, line: 540, type: !5005, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13013 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "02258fad21adf111bb9df9825e61954a")
!13014 = distinct !DISubprogram(name: "__Pyx_GetVtable", scope: !21, file: !21, line: 9444, type: !13015, scopeLine: 9444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13017)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{!27, !42}
!13017 = !{!13018, !13019, !13020, !13021}
!13018 = !DILocalVariable(name: "type", arg: 1, scope: !13014, file: !21, line: 9444, type: !42)
!13019 = !DILocalVariable(name: "ptr", scope: !13014, file: !21, line: 9445, type: !27)
!13020 = !DILocalVariable(name: "ob", scope: !13014, file: !21, line: 9449, type: !28)
!13021 = !DILabel(scope: !13014, name: "bad", file: !21, line: 9458)
!13022 = !DILocation(line: 9444, column: 44, scope: !13014)
!13023 = !DILocation(line: 9445, column: 5, scope: !13014)
!13024 = !DILocation(line: 9445, column: 11, scope: !13014)
!13025 = !DILocation(line: 9449, column: 5, scope: !13014)
!13026 = !DILocation(line: 9449, column: 15, scope: !13014)
!13027 = !DILocation(line: 9449, column: 37, scope: !13014)
!13028 = !DILocation(line: 9449, column: 43, scope: !13014)
!13029 = !DILocation(line: 9449, column: 52, scope: !13014)
!13030 = !DILocation(line: 9449, column: 20, scope: !13014)
!13031 = !DILocation(line: 9451, column: 10, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13014, file: !21, line: 9451, column: 9)
!13033 = !DILocation(line: 9451, column: 9, scope: !13014)
!13034 = !DILocation(line: 9452, column: 9, scope: !13032)
!13035 = !DILocation(line: 9453, column: 32, scope: !13014)
!13036 = !DILocation(line: 9453, column: 11, scope: !13014)
!13037 = !DILocation(line: 9453, column: 9, scope: !13014)
!13038 = !DILocation(line: 9454, column: 10, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13014, file: !21, line: 9454, column: 9)
!13040 = !DILocation(line: 9454, column: 14, scope: !13039)
!13041 = !DILocation(line: 9454, column: 18, scope: !13039)
!13042 = !DILocation(line: 9454, column: 9, scope: !13014)
!13043 = !DILocation(line: 9455, column: 25, scope: !13039)
!13044 = !DILocation(line: 9455, column: 9, scope: !13039)
!13045 = !DILocation(line: 9456, column: 5, scope: !13014)
!13046 = !DILocation(line: 9457, column: 12, scope: !13014)
!13047 = !DILocation(line: 9457, column: 5, scope: !13014)
!13048 = !DILocation(line: 9458, column: 1, scope: !13014)
!13049 = !DILocation(line: 9459, column: 5, scope: !13014)
!13050 = !DILocation(line: 9460, column: 5, scope: !13014)
!13051 = !DILocation(line: 9461, column: 1, scope: !13014)
!13052 = !DISubprogram(name: "free", scope: !13013, file: !13013, line: 555, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13053 = !DISubprogram(name: "PyCapsule_GetPointer", scope: !8226, file: !8226, line: 33, type: !13054, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13054 = !DISubroutineType(types: !13055)
!13055 = !{!27, !28, !54}
!13056 = distinct !DISubprogram(name: "__Pyx_setup_reduce_is_named", scope: !21, file: !21, line: 9518, type: !177, scopeLine: 9518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13057)
!13057 = !{!13058, !13059, !13060, !13061}
!13058 = !DILocalVariable(name: "meth", arg: 1, scope: !13056, file: !21, line: 9518, type: !28)
!13059 = !DILocalVariable(name: "name", arg: 2, scope: !13056, file: !21, line: 9518, type: !28)
!13060 = !DILocalVariable(name: "ret", scope: !13056, file: !21, line: 9519, type: !7)
!13061 = !DILocalVariable(name: "name_attr", scope: !13056, file: !21, line: 9520, type: !28)
!13062 = !DILocation(line: 9518, column: 50, scope: !13056)
!13063 = !DILocation(line: 9518, column: 66, scope: !13056)
!13064 = !DILocation(line: 9519, column: 3, scope: !13056)
!13065 = !DILocation(line: 9519, column: 7, scope: !13056)
!13066 = !DILocation(line: 9520, column: 3, scope: !13056)
!13067 = !DILocation(line: 9520, column: 13, scope: !13056)
!13068 = !DILocation(line: 9521, column: 48, scope: !13056)
!13069 = !DILocation(line: 9521, column: 54, scope: !13056)
!13070 = !DILocation(line: 9521, column: 15, scope: !13056)
!13071 = !DILocation(line: 9521, column: 13, scope: !13056)
!13072 = !DILocation(line: 9522, column: 7, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13056, file: !21, line: 9522, column: 7)
!13074 = !DILocation(line: 9522, column: 7, scope: !13056)
!13075 = !DILocation(line: 9523, column: 38, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13073, file: !21, line: 9522, column: 26)
!13077 = !DILocation(line: 9523, column: 49, scope: !13076)
!13078 = !DILocation(line: 9523, column: 13, scope: !13076)
!13079 = !DILocation(line: 9523, column: 11, scope: !13076)
!13080 = !DILocation(line: 9524, column: 3, scope: !13076)
!13081 = !DILocation(line: 9525, column: 11, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13073, file: !21, line: 9524, column: 10)
!13083 = !DILocation(line: 9527, column: 7, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13056, file: !21, line: 9527, column: 7)
!13085 = !DILocation(line: 9527, column: 7, scope: !13056)
!13086 = !DILocation(line: 9528, column: 7, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13084, file: !21, line: 9527, column: 26)
!13088 = !DILocation(line: 9529, column: 11, scope: !13087)
!13089 = !DILocation(line: 9530, column: 3, scope: !13087)
!13090 = !DILocation(line: 9531, column: 3, scope: !13056)
!13091 = !DILocation(line: 9532, column: 10, scope: !13056)
!13092 = !DILocation(line: 9533, column: 1, scope: !13056)
!13093 = !DILocation(line: 9532, column: 3, scope: !13056)
!13094 = !DISubprogram(name: "PyDict_DelItem", scope: !2725, file: !2725, line: 25, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13095 = !DISubprogram(name: "PyObject_RichCompareBool", scope: !6, file: !6, line: 288, type: !13096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13096 = !DISubroutineType(types: !13097)
!13097 = !{!7, !28, !28, !7}
!13098 = !DISubprogram(name: "PyImport_ImportModule", scope: !2731, file: !2731, line: 46, type: !2732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13099 = distinct !DISubprogram(name: "__Pyx_ImportType_3_0_4", scope: !21, file: !21, line: 9630, type: !13100, scopeLine: 9632, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13102)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{!42, !28, !54, !54, !341, !341, !20}
!13102 = !{!13103, !13104, !13105, !13106, !13107, !13108, !13109, !13110, !13111, !13112, !13113}
!13103 = !DILocalVariable(name: "module", arg: 1, scope: !13099, file: !21, line: 9630, type: !28)
!13104 = !DILocalVariable(name: "module_name", arg: 2, scope: !13099, file: !21, line: 9630, type: !54)
!13105 = !DILocalVariable(name: "class_name", arg: 3, scope: !13099, file: !21, line: 9630, type: !54)
!13106 = !DILocalVariable(name: "size", arg: 4, scope: !13099, file: !21, line: 9631, type: !341)
!13107 = !DILocalVariable(name: "alignment", arg: 5, scope: !13099, file: !21, line: 9631, type: !341)
!13108 = !DILocalVariable(name: "check_size", arg: 6, scope: !13099, file: !21, line: 9631, type: !20)
!13109 = !DILocalVariable(name: "result", scope: !13099, file: !21, line: 9633, type: !28)
!13110 = !DILocalVariable(name: "warning", scope: !13099, file: !21, line: 9634, type: !2746)
!13111 = !DILocalVariable(name: "basicsize", scope: !13099, file: !21, line: 9635, type: !34)
!13112 = !DILocalVariable(name: "itemsize", scope: !13099, file: !21, line: 9636, type: !34)
!13113 = !DILabel(scope: !13099, name: "bad", file: !21, line: 9701)
!13114 = !DILocation(line: 9630, column: 55, scope: !13099)
!13115 = !DILocation(line: 9630, column: 75, scope: !13099)
!13116 = !DILocation(line: 9630, column: 100, scope: !13099)
!13117 = !DILocation(line: 9631, column: 12, scope: !13099)
!13118 = !DILocation(line: 9631, column: 25, scope: !13099)
!13119 = !DILocation(line: 9631, column: 74, scope: !13099)
!13120 = !DILocation(line: 9633, column: 5, scope: !13099)
!13121 = !DILocation(line: 9633, column: 15, scope: !13099)
!13122 = !DILocation(line: 9634, column: 5, scope: !13099)
!13123 = !DILocation(line: 9634, column: 10, scope: !13099)
!13124 = !DILocation(line: 9635, column: 5, scope: !13099)
!13125 = !DILocation(line: 9635, column: 16, scope: !13099)
!13126 = !DILocation(line: 9636, column: 5, scope: !13099)
!13127 = !DILocation(line: 9636, column: 16, scope: !13099)
!13128 = !DILocation(line: 9641, column: 37, scope: !13099)
!13129 = !DILocation(line: 9641, column: 45, scope: !13099)
!13130 = !DILocation(line: 9641, column: 14, scope: !13099)
!13131 = !DILocation(line: 9641, column: 12, scope: !13099)
!13132 = !DILocation(line: 9642, column: 10, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13099, file: !21, line: 9642, column: 9)
!13134 = !DILocation(line: 9642, column: 9, scope: !13099)
!13135 = !DILocation(line: 9643, column: 9, scope: !13133)
!13136 = !DILocation(line: 9644, column: 10, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13099, file: !21, line: 9644, column: 9)
!13138 = !DILocation(line: 9644, column: 9, scope: !13099)
!13139 = !DILocation(line: 9645, column: 22, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13137, file: !21, line: 9644, column: 32)
!13141 = !DILocation(line: 9647, column: 13, scope: !13140)
!13142 = !DILocation(line: 9647, column: 26, scope: !13140)
!13143 = !DILocation(line: 9645, column: 9, scope: !13140)
!13144 = !DILocation(line: 9648, column: 9, scope: !13140)
!13145 = !DILocation(line: 9651, column: 34, scope: !13099)
!13146 = !DILocation(line: 9651, column: 43, scope: !13099)
!13147 = !DILocation(line: 9651, column: 15, scope: !13099)
!13148 = !DILocation(line: 9652, column: 33, scope: !13099)
!13149 = !DILocation(line: 9652, column: 42, scope: !13099)
!13150 = !{!2421, !2424, i64 40}
!13151 = !DILocation(line: 9652, column: 14, scope: !13099)
!13152 = !DILocation(line: 9671, column: 9, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13099, file: !21, line: 9671, column: 9)
!13154 = !DILocation(line: 9671, column: 9, scope: !13099)
!13155 = !DILocation(line: 9672, column: 13, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13157, file: !21, line: 9672, column: 13)
!13157 = distinct !DILexicalBlock(scope: !13153, file: !21, line: 9671, column: 19)
!13158 = !DILocation(line: 9672, column: 20, scope: !13156)
!13159 = !DILocation(line: 9672, column: 18, scope: !13156)
!13160 = !DILocation(line: 9672, column: 13, scope: !13157)
!13161 = !DILocation(line: 9673, column: 25, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13156, file: !21, line: 9672, column: 31)
!13163 = !DILocation(line: 9673, column: 32, scope: !13162)
!13164 = !DILocation(line: 9673, column: 30, scope: !13162)
!13165 = !DILocation(line: 9673, column: 23, scope: !13162)
!13166 = !DILocation(line: 9674, column: 9, scope: !13162)
!13167 = !DILocation(line: 9675, column: 13, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13157, file: !21, line: 9675, column: 13)
!13169 = !DILocation(line: 9675, column: 36, scope: !13168)
!13170 = !DILocation(line: 9675, column: 22, scope: !13168)
!13171 = !DILocation(line: 9675, column: 13, scope: !13157)
!13172 = !DILocation(line: 9676, column: 36, scope: !13168)
!13173 = !DILocation(line: 9676, column: 22, scope: !13168)
!13174 = !DILocation(line: 9676, column: 13, scope: !13168)
!13175 = !DILocation(line: 9677, column: 5, scope: !13157)
!13176 = !DILocation(line: 9678, column: 18, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13099, file: !21, line: 9678, column: 9)
!13178 = !DILocation(line: 9678, column: 30, scope: !13177)
!13179 = !DILocation(line: 9678, column: 28, scope: !13177)
!13180 = !DILocation(line: 9678, column: 42, scope: !13177)
!13181 = !DILocation(line: 9678, column: 40, scope: !13177)
!13182 = !DILocation(line: 9678, column: 9, scope: !13099)
!13183 = !DILocation(line: 9679, column: 22, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13177, file: !21, line: 9678, column: 48)
!13185 = !DILocation(line: 9682, column: 13, scope: !13184)
!13186 = !DILocation(line: 9682, column: 26, scope: !13184)
!13187 = !DILocation(line: 9682, column: 38, scope: !13184)
!13188 = !DILocation(line: 9682, column: 44, scope: !13184)
!13189 = !DILocation(line: 9682, column: 54, scope: !13184)
!13190 = !DILocation(line: 9682, column: 53, scope: !13184)
!13191 = !DILocation(line: 9679, column: 9, scope: !13184)
!13192 = !DILocation(line: 9683, column: 9, scope: !13184)
!13193 = !DILocation(line: 9685, column: 9, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13099, file: !21, line: 9685, column: 9)
!13195 = !DILocation(line: 9685, column: 20, scope: !13194)
!13196 = !DILocation(line: 9685, column: 62, scope: !13194)
!13197 = !DILocation(line: 9686, column: 22, scope: !13194)
!13198 = !DILocation(line: 9686, column: 34, scope: !13194)
!13199 = !DILocation(line: 9686, column: 32, scope: !13194)
!13200 = !DILocation(line: 9686, column: 39, scope: !13194)
!13201 = !DILocation(line: 9686, column: 51, scope: !13194)
!13202 = !DILocation(line: 9686, column: 63, scope: !13194)
!13203 = !DILocation(line: 9686, column: 61, scope: !13194)
!13204 = !DILocation(line: 9686, column: 75, scope: !13194)
!13205 = !DILocation(line: 9686, column: 73, scope: !13194)
!13206 = !DILocation(line: 9685, column: 9, scope: !13099)
!13207 = !DILocation(line: 9687, column: 22, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13194, file: !21, line: 9686, column: 82)
!13209 = !DILocation(line: 9690, column: 13, scope: !13208)
!13210 = !DILocation(line: 9690, column: 26, scope: !13208)
!13211 = !DILocation(line: 9690, column: 38, scope: !13208)
!13212 = !DILocation(line: 9690, column: 44, scope: !13208)
!13213 = !DILocation(line: 9690, column: 55, scope: !13208)
!13214 = !DILocation(line: 9690, column: 65, scope: !13208)
!13215 = !DILocation(line: 9690, column: 64, scope: !13208)
!13216 = !DILocation(line: 9687, column: 9, scope: !13208)
!13217 = !DILocation(line: 9691, column: 9, scope: !13208)
!13218 = !DILocation(line: 9693, column: 14, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13194, file: !21, line: 9693, column: 14)
!13220 = !DILocation(line: 9693, column: 25, scope: !13219)
!13221 = !DILocation(line: 9693, column: 66, scope: !13219)
!13222 = !DILocation(line: 9693, column: 77, scope: !13219)
!13223 = !DILocation(line: 9693, column: 89, scope: !13219)
!13224 = !DILocation(line: 9693, column: 87, scope: !13219)
!13225 = !DILocation(line: 9693, column: 14, scope: !13194)
!13226 = !DILocation(line: 9694, column: 23, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13219, file: !21, line: 9693, column: 95)
!13228 = !DILocation(line: 9697, column: 13, scope: !13227)
!13229 = !DILocation(line: 9697, column: 26, scope: !13227)
!13230 = !DILocation(line: 9697, column: 38, scope: !13227)
!13231 = !DILocation(line: 9697, column: 44, scope: !13227)
!13232 = !DILocation(line: 9694, column: 9, scope: !13227)
!13233 = !DILocation(line: 9698, column: 32, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13227, file: !21, line: 9698, column: 13)
!13235 = !DILocation(line: 9698, column: 13, scope: !13234)
!13236 = !DILocation(line: 9698, column: 44, scope: !13234)
!13237 = !DILocation(line: 9698, column: 13, scope: !13227)
!13238 = !DILocation(line: 9698, column: 49, scope: !13234)
!13239 = !DILocation(line: 9699, column: 5, scope: !13227)
!13240 = !DILocation(line: 9700, column: 28, scope: !13099)
!13241 = !DILocation(line: 9700, column: 5, scope: !13099)
!13242 = !DILocation(line: 9701, column: 1, scope: !13099)
!13243 = !DILocation(line: 9702, column: 5, scope: !13099)
!13244 = !DILocation(line: 9703, column: 5, scope: !13099)
!13245 = !DILocation(line: 9704, column: 1, scope: !13099)
!13246 = distinct !DISubprogram(name: "__Pyx_ImportVoidPtr_3_0_4", scope: !21, file: !21, line: 12109, type: !13247, scopeLine: 12109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13249)
!13247 = !DISubroutineType(types: !13248)
!13248 = !{!7, !28, !54, !559, !54}
!13249 = !{!13250, !13251, !13252, !13253, !13254, !13255, !13256}
!13250 = !DILocalVariable(name: "module", arg: 1, scope: !13246, file: !21, line: 12109, type: !28)
!13251 = !DILocalVariable(name: "name", arg: 2, scope: !13246, file: !21, line: 12109, type: !54)
!13252 = !DILocalVariable(name: "p", arg: 3, scope: !13246, file: !21, line: 12109, type: !559)
!13253 = !DILocalVariable(name: "sig", arg: 4, scope: !13246, file: !21, line: 12109, type: !54)
!13254 = !DILocalVariable(name: "d", scope: !13246, file: !21, line: 12110, type: !28)
!13255 = !DILocalVariable(name: "cobj", scope: !13246, file: !21, line: 12111, type: !28)
!13256 = !DILabel(scope: !13246, name: "bad", file: !21, line: 12133)
!13257 = !DILocation(line: 12109, column: 48, scope: !13246)
!13258 = !DILocation(line: 12109, column: 68, scope: !13246)
!13259 = !DILocation(line: 12109, column: 81, scope: !13246)
!13260 = !DILocation(line: 12109, column: 96, scope: !13246)
!13261 = !DILocation(line: 12110, column: 5, scope: !13246)
!13262 = !DILocation(line: 12110, column: 15, scope: !13246)
!13263 = !DILocation(line: 12111, column: 5, scope: !13246)
!13264 = !DILocation(line: 12111, column: 15, scope: !13246)
!13265 = !DILocation(line: 12112, column: 32, scope: !13246)
!13266 = !DILocation(line: 12112, column: 9, scope: !13246)
!13267 = !DILocation(line: 12112, column: 7, scope: !13246)
!13268 = !DILocation(line: 12113, column: 10, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13246, file: !21, line: 12113, column: 9)
!13270 = !DILocation(line: 12113, column: 9, scope: !13246)
!13271 = !DILocation(line: 12114, column: 9, scope: !13269)
!13272 = !DILocation(line: 12115, column: 33, scope: !13246)
!13273 = !DILocation(line: 12115, column: 36, scope: !13246)
!13274 = !DILocation(line: 12115, column: 12, scope: !13246)
!13275 = !DILocation(line: 12115, column: 10, scope: !13246)
!13276 = !DILocation(line: 12116, column: 10, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13246, file: !21, line: 12116, column: 9)
!13278 = !DILocation(line: 12116, column: 9, scope: !13246)
!13279 = !DILocation(line: 12117, column: 22, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13277, file: !21, line: 12116, column: 16)
!13281 = !DILocation(line: 12119, column: 34, scope: !13280)
!13282 = !DILocation(line: 12119, column: 17, scope: !13280)
!13283 = !DILocation(line: 12119, column: 43, scope: !13280)
!13284 = !DILocation(line: 12117, column: 9, scope: !13280)
!13285 = !DILocation(line: 12120, column: 9, scope: !13280)
!13286 = !DILocation(line: 12122, column: 28, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13246, file: !21, line: 12122, column: 9)
!13288 = !DILocation(line: 12122, column: 34, scope: !13287)
!13289 = !DILocation(line: 12122, column: 10, scope: !13287)
!13290 = !DILocation(line: 12122, column: 9, scope: !13246)
!13291 = !DILocation(line: 12123, column: 22, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13287, file: !21, line: 12122, column: 40)
!13293 = !DILocation(line: 12125, column: 31, scope: !13292)
!13294 = !DILocation(line: 12125, column: 14, scope: !13292)
!13295 = !DILocation(line: 12125, column: 40, scope: !13292)
!13296 = !DILocation(line: 12125, column: 46, scope: !13292)
!13297 = !DILocation(line: 12125, column: 69, scope: !13292)
!13298 = !DILocation(line: 12125, column: 51, scope: !13292)
!13299 = !DILocation(line: 12123, column: 9, scope: !13292)
!13300 = !DILocation(line: 12126, column: 9, scope: !13292)
!13301 = !DILocation(line: 12128, column: 31, scope: !13246)
!13302 = !DILocation(line: 12128, column: 37, scope: !13246)
!13303 = !DILocation(line: 12128, column: 10, scope: !13246)
!13304 = !DILocation(line: 12128, column: 6, scope: !13246)
!13305 = !DILocation(line: 12128, column: 8, scope: !13246)
!13306 = !DILocation(line: 12129, column: 12, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13246, file: !21, line: 12129, column: 9)
!13308 = !DILocation(line: 12129, column: 11, scope: !13307)
!13309 = !DILocation(line: 12129, column: 10, scope: !13307)
!13310 = !DILocation(line: 12129, column: 9, scope: !13246)
!13311 = !DILocation(line: 12130, column: 9, scope: !13307)
!13312 = !DILocation(line: 12131, column: 5, scope: !13246)
!13313 = !DILocation(line: 12132, column: 5, scope: !13246)
!13314 = !DILocation(line: 12133, column: 1, scope: !13246)
!13315 = !DILocation(line: 12134, column: 5, scope: !13246)
!13316 = !DILocation(line: 12135, column: 5, scope: !13246)
!13317 = !DILocation(line: 12136, column: 1, scope: !13246)
!13318 = !DISubprogram(name: "PyModule_GetName", scope: !683, file: !683, line: 27, type: !13319, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13319 = !DISubroutineType(types: !13320)
!13320 = !{!54, !28}
!13321 = !DISubprogram(name: "PyCapsule_IsValid", scope: !8226, file: !8226, line: 41, type: !13322, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{!7, !28, !54}
!13324 = !DISubprogram(name: "PyCapsule_GetName", scope: !8226, file: !8226, line: 37, type: !13319, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13325 = !DISubprogram(name: "PyUnicode_Concat", scope: !544, file: !544, line: 815, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13326 = !DISubprogram(name: "PyImport_GetModule", scope: !2731, file: !2731, line: 36, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13327 = distinct !DISubprogram(name: "__Pyx_CyFunction_Init", scope: !21, file: !21, line: 10276, type: !13328, scopeLine: 10277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13330)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{!28, !354, !261, !7, !28, !28, !28, !28, !28}
!13330 = !{!13331, !13332, !13333, !13334, !13335, !13336, !13337, !13338, !13339}
!13331 = !DILocalVariable(name: "op", arg: 1, scope: !13327, file: !21, line: 10276, type: !354)
!13332 = !DILocalVariable(name: "ml", arg: 2, scope: !13327, file: !21, line: 10276, type: !261)
!13333 = !DILocalVariable(name: "flags", arg: 3, scope: !13327, file: !21, line: 10276, type: !7)
!13334 = !DILocalVariable(name: "qualname", arg: 4, scope: !13327, file: !21, line: 10276, type: !28)
!13335 = !DILocalVariable(name: "closure", arg: 5, scope: !13327, file: !21, line: 10277, type: !28)
!13336 = !DILocalVariable(name: "module", arg: 6, scope: !13327, file: !21, line: 10277, type: !28)
!13337 = !DILocalVariable(name: "globals", arg: 7, scope: !13327, file: !21, line: 10277, type: !28)
!13338 = !DILocalVariable(name: "code", arg: 8, scope: !13327, file: !21, line: 10277, type: !28)
!13339 = !DILocalVariable(name: "cf", scope: !13327, file: !21, line: 10279, type: !343)
!13340 = !DILocation(line: 10276, column: 64, scope: !13327)
!13341 = !DILocation(line: 10276, column: 81, scope: !13327)
!13342 = !DILocation(line: 10276, column: 89, scope: !13327)
!13343 = !DILocation(line: 10276, column: 106, scope: !13327)
!13344 = !DILocation(line: 10277, column: 50, scope: !13327)
!13345 = !DILocation(line: 10277, column: 69, scope: !13327)
!13346 = !DILocation(line: 10277, column: 87, scope: !13327)
!13347 = !DILocation(line: 10277, column: 106, scope: !13327)
!13348 = !DILocation(line: 10279, column: 5, scope: !13327)
!13349 = !DILocation(line: 10279, column: 24, scope: !13327)
!13350 = !DILocation(line: 10279, column: 50, scope: !13327)
!13351 = !DILocation(line: 10281, column: 9, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13327, file: !21, line: 10281, column: 9)
!13353 = !DILocation(line: 10281, column: 9, scope: !13327)
!13354 = !DILocation(line: 10282, column: 9, scope: !13352)
!13355 = !DILocation(line: 10287, column: 17, scope: !13327)
!13356 = !DILocation(line: 10287, column: 5, scope: !13327)
!13357 = !DILocation(line: 10287, column: 9, scope: !13327)
!13358 = !DILocation(line: 10287, column: 15, scope: !13327)
!13359 = !DILocation(line: 10288, column: 5, scope: !13327)
!13360 = !DILocation(line: 10288, column: 38, scope: !13327)
!13361 = !DILocation(line: 10290, column: 16, scope: !13327)
!13362 = !DILocation(line: 10290, column: 5, scope: !13327)
!13363 = !DILocation(line: 10290, column: 9, scope: !13327)
!13364 = !DILocation(line: 10290, column: 14, scope: !13327)
!13365 = !DILocation(line: 10291, column: 31, scope: !13327)
!13366 = !DILocation(line: 10291, column: 5, scope: !13327)
!13367 = !DILocation(line: 10291, column: 9, scope: !13327)
!13368 = !DILocation(line: 10291, column: 16, scope: !13327)
!13369 = !DILocation(line: 10293, column: 5, scope: !13327)
!13370 = !DILocation(line: 10294, column: 24, scope: !13327)
!13371 = !DILocation(line: 10294, column: 5, scope: !13327)
!13372 = !DILocation(line: 10294, column: 9, scope: !13327)
!13373 = !DILocation(line: 10294, column: 22, scope: !13327)
!13374 = !DILocation(line: 10296, column: 5, scope: !13327)
!13375 = !DILocation(line: 10297, column: 20, scope: !13327)
!13376 = !DILocation(line: 10297, column: 5, scope: !13327)
!13377 = !DILocation(line: 10297, column: 9, scope: !13327)
!13378 = !DILocation(line: 10297, column: 18, scope: !13327)
!13379 = !DILocation(line: 10299, column: 5, scope: !13327)
!13380 = !DILocation(line: 10299, column: 9, scope: !13327)
!13381 = !DILocation(line: 10299, column: 19, scope: !13327)
!13382 = !DILocation(line: 10300, column: 5, scope: !13327)
!13383 = !DILocation(line: 10300, column: 9, scope: !13327)
!13384 = !DILocation(line: 10300, column: 19, scope: !13327)
!13385 = !DILocation(line: 10301, column: 5, scope: !13327)
!13386 = !DILocation(line: 10302, column: 25, scope: !13327)
!13387 = !DILocation(line: 10302, column: 5, scope: !13327)
!13388 = !DILocation(line: 10302, column: 9, scope: !13327)
!13389 = !DILocation(line: 10302, column: 23, scope: !13327)
!13390 = !DILocation(line: 10303, column: 5, scope: !13327)
!13391 = !DILocation(line: 10303, column: 9, scope: !13327)
!13392 = !DILocation(line: 10303, column: 18, scope: !13327)
!13393 = !DILocation(line: 10307, column: 24, scope: !13327)
!13394 = !DILocation(line: 10307, column: 29, scope: !13327)
!13395 = !DILocation(line: 10307, column: 38, scope: !13327)
!13396 = !DILocation(line: 10309, column: 24, scope: !13327)
!13397 = !DILocation(line: 10309, column: 5, scope: !13327)
!13398 = !DILocation(line: 10309, column: 9, scope: !13327)
!13399 = !DILocation(line: 10309, column: 22, scope: !13327)
!13400 = !DILocation(line: 10310, column: 5, scope: !13327)
!13401 = !DILocation(line: 10311, column: 5, scope: !13327)
!13402 = !DILocation(line: 10312, column: 21, scope: !13327)
!13403 = !DILocation(line: 10312, column: 5, scope: !13327)
!13404 = !DILocation(line: 10312, column: 9, scope: !13327)
!13405 = !DILocation(line: 10312, column: 19, scope: !13327)
!13406 = !DILocation(line: 10313, column: 5, scope: !13327)
!13407 = !DILocation(line: 10313, column: 9, scope: !13327)
!13408 = !DILocation(line: 10313, column: 28, scope: !13327)
!13409 = !DILocation(line: 10314, column: 5, scope: !13327)
!13410 = !DILocation(line: 10314, column: 9, scope: !13327)
!13411 = !DILocation(line: 10314, column: 23, scope: !13327)
!13412 = !{!3885, !2424, i64 136}
!13413 = !DILocation(line: 10315, column: 5, scope: !13327)
!13414 = !DILocation(line: 10315, column: 9, scope: !13327)
!13415 = !DILocation(line: 10315, column: 18, scope: !13327)
!13416 = !DILocation(line: 10316, column: 5, scope: !13327)
!13417 = !DILocation(line: 10316, column: 9, scope: !13327)
!13418 = !DILocation(line: 10316, column: 24, scope: !13327)
!13419 = !DILocation(line: 10317, column: 5, scope: !13327)
!13420 = !DILocation(line: 10317, column: 9, scope: !13327)
!13421 = !DILocation(line: 10317, column: 25, scope: !13327)
!13422 = !DILocation(line: 10318, column: 5, scope: !13327)
!13423 = !DILocation(line: 10318, column: 9, scope: !13327)
!13424 = !DILocation(line: 10318, column: 25, scope: !13327)
!13425 = !DILocation(line: 10319, column: 5, scope: !13327)
!13426 = !DILocation(line: 10319, column: 9, scope: !13327)
!13427 = !DILocation(line: 10319, column: 26, scope: !13327)
!13428 = !DILocation(line: 10320, column: 5, scope: !13327)
!13429 = !DILocation(line: 10320, column: 9, scope: !13327)
!13430 = !DILocation(line: 10320, column: 27, scope: !13327)
!13431 = !DILocation(line: 10322, column: 13, scope: !13327)
!13432 = !DILocation(line: 10322, column: 17, scope: !13327)
!13433 = !DILocation(line: 10322, column: 26, scope: !13327)
!13434 = !DILocation(line: 10322, column: 5, scope: !13327)
!13435 = !DILocation(line: 10324, column: 9, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13327, file: !21, line: 10322, column: 113)
!13437 = !DILocation(line: 10324, column: 46, scope: !13436)
!13438 = !DILocation(line: 10325, column: 9, scope: !13436)
!13439 = !DILocation(line: 10327, column: 9, scope: !13436)
!13440 = !DILocation(line: 10327, column: 46, scope: !13436)
!13441 = !DILocation(line: 10328, column: 9, scope: !13436)
!13442 = !DILocation(line: 10330, column: 9, scope: !13436)
!13443 = !DILocation(line: 10330, column: 46, scope: !13436)
!13444 = !DILocation(line: 10331, column: 9, scope: !13436)
!13445 = !DILocation(line: 10333, column: 9, scope: !13436)
!13446 = !DILocation(line: 10333, column: 46, scope: !13436)
!13447 = !DILocation(line: 10334, column: 9, scope: !13436)
!13448 = !DILocation(line: 10336, column: 9, scope: !13436)
!13449 = !DILocation(line: 10336, column: 46, scope: !13436)
!13450 = !DILocation(line: 10337, column: 9, scope: !13436)
!13451 = !DILocation(line: 10339, column: 25, scope: !13436)
!13452 = !DILocation(line: 10339, column: 9, scope: !13436)
!13453 = !DILocation(line: 10340, column: 9, scope: !13436)
!13454 = !DILocation(line: 10341, column: 9, scope: !13436)
!13455 = !DILocation(line: 10344, column: 25, scope: !13327)
!13456 = !DILocation(line: 10344, column: 5, scope: !13327)
!13457 = !DILocation(line: 10345, column: 1, scope: !13327)
!13458 = !DISubprogram(name: "_PyObject_GC_New", scope: !4644, file: !4644, line: 169, type: !13459, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13459 = !DISubroutineType(types: !13460)
!13460 = !{!28, !42}
!13461 = !DISubprogram(name: "PyObject_GC_Track", scope: !4644, file: !4644, line: 175, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13462 = distinct !DISubprogram(name: "__Pyx_CyFunction_Vectorcall_NOARGS", scope: !21, file: !21, line: 10614, type: !337, scopeLine: 10615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13463)
!13463 = !{!13464, !13465, !13466, !13467, !13468, !13469, !13470, !13471}
!13464 = !DILocalVariable(name: "func", arg: 1, scope: !13462, file: !21, line: 10614, type: !28)
!13465 = !DILocalVariable(name: "args", arg: 2, scope: !13462, file: !21, line: 10614, type: !339)
!13466 = !DILocalVariable(name: "nargsf", arg: 3, scope: !13462, file: !21, line: 10614, type: !341)
!13467 = !DILocalVariable(name: "kwnames", arg: 4, scope: !13462, file: !21, line: 10614, type: !28)
!13468 = !DILocalVariable(name: "cyfunc", scope: !13462, file: !21, line: 10616, type: !354)
!13469 = !DILocalVariable(name: "def", scope: !13462, file: !21, line: 10617, type: !261)
!13470 = !DILocalVariable(name: "nargs", scope: !13462, file: !21, line: 10621, type: !34)
!13471 = !DILocalVariable(name: "self", scope: !13462, file: !21, line: 10623, type: !28)
!13472 = !DILocation(line: 10614, column: 64, scope: !13462)
!13473 = !DILocation(line: 10614, column: 87, scope: !13462)
!13474 = !DILocation(line: 10614, column: 100, scope: !13462)
!13475 = !DILocation(line: 10614, column: 118, scope: !13462)
!13476 = !DILocation(line: 10616, column: 5, scope: !13462)
!13477 = !DILocation(line: 10616, column: 29, scope: !13462)
!13478 = !DILocation(line: 10616, column: 64, scope: !13462)
!13479 = !DILocation(line: 10617, column: 5, scope: !13462)
!13480 = !DILocation(line: 10617, column: 18, scope: !13462)
!13481 = !DILocation(line: 10617, column: 45, scope: !13462)
!13482 = !DILocation(line: 10617, column: 54, scope: !13462)
!13483 = !DILocation(line: 10621, column: 5, scope: !13462)
!13484 = !DILocation(line: 10621, column: 16, scope: !13462)
!13485 = !DILocation(line: 10621, column: 43, scope: !13462)
!13486 = !DILocation(line: 10621, column: 24, scope: !13462)
!13487 = !DILocation(line: 10623, column: 5, scope: !13462)
!13488 = !DILocation(line: 10623, column: 15, scope: !13462)
!13489 = !DILocation(line: 10624, column: 51, scope: !13462)
!13490 = !DILocation(line: 10624, column: 59, scope: !13462)
!13491 = !DILocation(line: 10624, column: 66, scope: !13462)
!13492 = !DILocation(line: 10624, column: 13, scope: !13462)
!13493 = !DILocation(line: 10624, column: 5, scope: !13462)
!13494 = !DILocation(line: 10626, column: 16, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13462, file: !21, line: 10624, column: 76)
!13496 = !DILocation(line: 10626, column: 14, scope: !13495)
!13497 = !DILocation(line: 10627, column: 14, scope: !13495)
!13498 = !DILocation(line: 10628, column: 15, scope: !13495)
!13499 = !DILocation(line: 10629, column: 9, scope: !13495)
!13500 = !DILocation(line: 10631, column: 37, scope: !13495)
!13501 = !DILocation(line: 10631, column: 46, scope: !13495)
!13502 = !DILocation(line: 10631, column: 14, scope: !13495)
!13503 = !DILocation(line: 10632, column: 9, scope: !13495)
!13504 = !DILocation(line: 10634, column: 9, scope: !13495)
!13505 = !DILocation(line: 10636, column: 9, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13462, file: !21, line: 10636, column: 9)
!13507 = !DILocation(line: 10636, column: 9, scope: !13462)
!13508 = !DILocation(line: 10637, column: 22, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13506, file: !21, line: 10636, column: 31)
!13510 = !DILocation(line: 10639, column: 13, scope: !13509)
!13511 = !DILocation(line: 10639, column: 18, scope: !13509)
!13512 = !DILocation(line: 10639, column: 27, scope: !13509)
!13513 = !DILocation(line: 10637, column: 9, scope: !13509)
!13514 = !DILocation(line: 10640, column: 9, scope: !13509)
!13515 = !DILocation(line: 10642, column: 12, scope: !13462)
!13516 = !DILocation(line: 10642, column: 17, scope: !13462)
!13517 = !DILocation(line: 10642, column: 25, scope: !13462)
!13518 = !DILocation(line: 10642, column: 5, scope: !13462)
!13519 = !DILocation(line: 10643, column: 1, scope: !13462)
!13520 = distinct !DISubprogram(name: "__Pyx_CyFunction_Vectorcall_O", scope: !21, file: !21, line: 10644, type: !337, scopeLine: 10645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13521)
!13521 = !{!13522, !13523, !13524, !13525, !13526, !13527, !13528, !13529}
!13522 = !DILocalVariable(name: "func", arg: 1, scope: !13520, file: !21, line: 10644, type: !28)
!13523 = !DILocalVariable(name: "args", arg: 2, scope: !13520, file: !21, line: 10644, type: !339)
!13524 = !DILocalVariable(name: "nargsf", arg: 3, scope: !13520, file: !21, line: 10644, type: !341)
!13525 = !DILocalVariable(name: "kwnames", arg: 4, scope: !13520, file: !21, line: 10644, type: !28)
!13526 = !DILocalVariable(name: "cyfunc", scope: !13520, file: !21, line: 10646, type: !354)
!13527 = !DILocalVariable(name: "def", scope: !13520, file: !21, line: 10647, type: !261)
!13528 = !DILocalVariable(name: "nargs", scope: !13520, file: !21, line: 10651, type: !34)
!13529 = !DILocalVariable(name: "self", scope: !13520, file: !21, line: 10653, type: !28)
!13530 = !DILocation(line: 10644, column: 59, scope: !13520)
!13531 = !DILocation(line: 10644, column: 82, scope: !13520)
!13532 = !DILocation(line: 10644, column: 95, scope: !13520)
!13533 = !DILocation(line: 10644, column: 113, scope: !13520)
!13534 = !DILocation(line: 10646, column: 5, scope: !13520)
!13535 = !DILocation(line: 10646, column: 29, scope: !13520)
!13536 = !DILocation(line: 10646, column: 64, scope: !13520)
!13537 = !DILocation(line: 10647, column: 5, scope: !13520)
!13538 = !DILocation(line: 10647, column: 18, scope: !13520)
!13539 = !DILocation(line: 10647, column: 45, scope: !13520)
!13540 = !DILocation(line: 10647, column: 54, scope: !13520)
!13541 = !DILocation(line: 10651, column: 5, scope: !13520)
!13542 = !DILocation(line: 10651, column: 16, scope: !13520)
!13543 = !DILocation(line: 10651, column: 43, scope: !13520)
!13544 = !DILocation(line: 10651, column: 24, scope: !13520)
!13545 = !DILocation(line: 10653, column: 5, scope: !13520)
!13546 = !DILocation(line: 10653, column: 15, scope: !13520)
!13547 = !DILocation(line: 10654, column: 51, scope: !13520)
!13548 = !DILocation(line: 10654, column: 59, scope: !13520)
!13549 = !DILocation(line: 10654, column: 66, scope: !13520)
!13550 = !DILocation(line: 10654, column: 13, scope: !13520)
!13551 = !DILocation(line: 10654, column: 5, scope: !13520)
!13552 = !DILocation(line: 10656, column: 16, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13520, file: !21, line: 10654, column: 76)
!13554 = !DILocation(line: 10656, column: 14, scope: !13553)
!13555 = !DILocation(line: 10657, column: 14, scope: !13553)
!13556 = !DILocation(line: 10658, column: 15, scope: !13553)
!13557 = !DILocation(line: 10659, column: 9, scope: !13553)
!13558 = !DILocation(line: 10661, column: 37, scope: !13553)
!13559 = !DILocation(line: 10661, column: 46, scope: !13553)
!13560 = !DILocation(line: 10661, column: 14, scope: !13553)
!13561 = !DILocation(line: 10662, column: 9, scope: !13553)
!13562 = !DILocation(line: 10664, column: 9, scope: !13553)
!13563 = !DILocation(line: 10666, column: 9, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13520, file: !21, line: 10666, column: 9)
!13565 = !DILocation(line: 10666, column: 9, scope: !13520)
!13566 = !DILocation(line: 10667, column: 22, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13564, file: !21, line: 10666, column: 31)
!13568 = !DILocation(line: 10669, column: 13, scope: !13567)
!13569 = !DILocation(line: 10669, column: 18, scope: !13567)
!13570 = !DILocation(line: 10669, column: 27, scope: !13567)
!13571 = !DILocation(line: 10667, column: 9, scope: !13567)
!13572 = !DILocation(line: 10670, column: 9, scope: !13567)
!13573 = !DILocation(line: 10672, column: 12, scope: !13520)
!13574 = !DILocation(line: 10672, column: 17, scope: !13520)
!13575 = !DILocation(line: 10672, column: 25, scope: !13520)
!13576 = !DILocation(line: 10672, column: 31, scope: !13520)
!13577 = !DILocation(line: 10672, column: 5, scope: !13520)
!13578 = !DILocation(line: 10673, column: 1, scope: !13520)
!13579 = distinct !DISubprogram(name: "__Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD", scope: !21, file: !21, line: 10698, type: !337, scopeLine: 10699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13580)
!13580 = !{!13581, !13582, !13583, !13584, !13585, !13586, !13587, !13588, !13589}
!13581 = !DILocalVariable(name: "func", arg: 1, scope: !13579, file: !21, line: 10698, type: !28)
!13582 = !DILocalVariable(name: "args", arg: 2, scope: !13579, file: !21, line: 10698, type: !339)
!13583 = !DILocalVariable(name: "nargsf", arg: 3, scope: !13579, file: !21, line: 10698, type: !341)
!13584 = !DILocalVariable(name: "kwnames", arg: 4, scope: !13579, file: !21, line: 10698, type: !28)
!13585 = !DILocalVariable(name: "cyfunc", scope: !13579, file: !21, line: 10700, type: !354)
!13586 = !DILocalVariable(name: "def", scope: !13579, file: !21, line: 10701, type: !261)
!13587 = !DILocalVariable(name: "cls", scope: !13579, file: !21, line: 10702, type: !42)
!13588 = !DILocalVariable(name: "nargs", scope: !13579, file: !21, line: 10706, type: !34)
!13589 = !DILocalVariable(name: "self", scope: !13579, file: !21, line: 10708, type: !28)
!13590 = !DILocation(line: 10698, column: 82, scope: !13579)
!13591 = !DILocation(line: 10698, column: 105, scope: !13579)
!13592 = !DILocation(line: 10698, column: 118, scope: !13579)
!13593 = !DILocation(line: 10698, column: 136, scope: !13579)
!13594 = !DILocation(line: 10700, column: 5, scope: !13579)
!13595 = !DILocation(line: 10700, column: 29, scope: !13579)
!13596 = !DILocation(line: 10700, column: 64, scope: !13579)
!13597 = !DILocation(line: 10701, column: 5, scope: !13579)
!13598 = !DILocation(line: 10701, column: 18, scope: !13579)
!13599 = !DILocation(line: 10701, column: 45, scope: !13579)
!13600 = !DILocation(line: 10701, column: 54, scope: !13579)
!13601 = !DILocation(line: 10702, column: 5, scope: !13579)
!13602 = !DILocation(line: 10702, column: 19, scope: !13579)
!13603 = !DILocation(line: 10702, column: 42, scope: !13579)
!13604 = !DILocation(line: 10706, column: 5, scope: !13579)
!13605 = !DILocation(line: 10706, column: 16, scope: !13579)
!13606 = !DILocation(line: 10706, column: 43, scope: !13579)
!13607 = !DILocation(line: 10706, column: 24, scope: !13579)
!13608 = !DILocation(line: 10708, column: 5, scope: !13579)
!13609 = !DILocation(line: 10708, column: 15, scope: !13579)
!13610 = !DILocation(line: 10709, column: 51, scope: !13579)
!13611 = !DILocation(line: 10709, column: 59, scope: !13579)
!13612 = !DILocation(line: 10709, column: 13, scope: !13579)
!13613 = !DILocation(line: 10709, column: 5, scope: !13579)
!13614 = !DILocation(line: 10711, column: 16, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13579, file: !21, line: 10709, column: 73)
!13616 = !DILocation(line: 10711, column: 14, scope: !13615)
!13617 = !DILocation(line: 10712, column: 14, scope: !13615)
!13618 = !DILocation(line: 10713, column: 15, scope: !13615)
!13619 = !DILocation(line: 10714, column: 9, scope: !13615)
!13620 = !DILocation(line: 10716, column: 37, scope: !13615)
!13621 = !DILocation(line: 10716, column: 46, scope: !13615)
!13622 = !DILocation(line: 10716, column: 14, scope: !13615)
!13623 = !DILocation(line: 10717, column: 9, scope: !13615)
!13624 = !DILocation(line: 10719, column: 9, scope: !13615)
!13625 = !DILocation(line: 10721, column: 45, scope: !13579)
!13626 = !DILocation(line: 10721, column: 50, scope: !13579)
!13627 = !DILocation(line: 10721, column: 59, scope: !13579)
!13628 = !DILocation(line: 10721, column: 65, scope: !13579)
!13629 = !DILocation(line: 10721, column: 70, scope: !13579)
!13630 = !DILocation(line: 10721, column: 84, scope: !13579)
!13631 = !DILocation(line: 10721, column: 91, scope: !13579)
!13632 = !DILocation(line: 10721, column: 12, scope: !13579)
!13633 = !DILocation(line: 10721, column: 5, scope: !13579)
!13634 = !DILocation(line: 10722, column: 1, scope: !13579)
!13635 = distinct !DISubprogram(name: "__Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS", scope: !21, file: !21, line: 10674, type: !337, scopeLine: 10675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13636)
!13636 = !{!13637, !13638, !13639, !13640, !13641, !13642, !13643, !13644}
!13637 = !DILocalVariable(name: "func", arg: 1, scope: !13635, file: !21, line: 10674, type: !28)
!13638 = !DILocalVariable(name: "args", arg: 2, scope: !13635, file: !21, line: 10674, type: !339)
!13639 = !DILocalVariable(name: "nargsf", arg: 3, scope: !13635, file: !21, line: 10674, type: !341)
!13640 = !DILocalVariable(name: "kwnames", arg: 4, scope: !13635, file: !21, line: 10674, type: !28)
!13641 = !DILocalVariable(name: "cyfunc", scope: !13635, file: !21, line: 10676, type: !354)
!13642 = !DILocalVariable(name: "def", scope: !13635, file: !21, line: 10677, type: !261)
!13643 = !DILocalVariable(name: "nargs", scope: !13635, file: !21, line: 10681, type: !34)
!13644 = !DILocalVariable(name: "self", scope: !13635, file: !21, line: 10683, type: !28)
!13645 = !DILocation(line: 10674, column: 75, scope: !13635)
!13646 = !DILocation(line: 10674, column: 98, scope: !13635)
!13647 = !DILocation(line: 10674, column: 111, scope: !13635)
!13648 = !DILocation(line: 10674, column: 129, scope: !13635)
!13649 = !DILocation(line: 10676, column: 5, scope: !13635)
!13650 = !DILocation(line: 10676, column: 29, scope: !13635)
!13651 = !DILocation(line: 10676, column: 64, scope: !13635)
!13652 = !DILocation(line: 10677, column: 5, scope: !13635)
!13653 = !DILocation(line: 10677, column: 18, scope: !13635)
!13654 = !DILocation(line: 10677, column: 45, scope: !13635)
!13655 = !DILocation(line: 10677, column: 54, scope: !13635)
!13656 = !DILocation(line: 10681, column: 5, scope: !13635)
!13657 = !DILocation(line: 10681, column: 16, scope: !13635)
!13658 = !DILocation(line: 10681, column: 43, scope: !13635)
!13659 = !DILocation(line: 10681, column: 24, scope: !13635)
!13660 = !DILocation(line: 10683, column: 5, scope: !13635)
!13661 = !DILocation(line: 10683, column: 15, scope: !13635)
!13662 = !DILocation(line: 10684, column: 51, scope: !13635)
!13663 = !DILocation(line: 10684, column: 59, scope: !13635)
!13664 = !DILocation(line: 10684, column: 13, scope: !13635)
!13665 = !DILocation(line: 10684, column: 5, scope: !13635)
!13666 = !DILocation(line: 10686, column: 16, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13635, file: !21, line: 10684, column: 73)
!13668 = !DILocation(line: 10686, column: 14, scope: !13667)
!13669 = !DILocation(line: 10687, column: 14, scope: !13667)
!13670 = !DILocation(line: 10688, column: 15, scope: !13667)
!13671 = !DILocation(line: 10689, column: 9, scope: !13667)
!13672 = !DILocation(line: 10691, column: 37, scope: !13667)
!13673 = !DILocation(line: 10691, column: 46, scope: !13667)
!13674 = !DILocation(line: 10691, column: 14, scope: !13667)
!13675 = !DILocation(line: 10692, column: 9, scope: !13667)
!13676 = !DILocation(line: 10694, column: 9, scope: !13667)
!13677 = !DILocation(line: 10696, column: 58, scope: !13635)
!13678 = !DILocation(line: 10696, column: 63, scope: !13635)
!13679 = !DILocation(line: 10696, column: 72, scope: !13635)
!13680 = !DILocation(line: 10696, column: 78, scope: !13635)
!13681 = !DILocation(line: 10696, column: 84, scope: !13635)
!13682 = !DILocation(line: 10696, column: 91, scope: !13635)
!13683 = !DILocation(line: 10696, column: 12, scope: !13635)
!13684 = !DILocation(line: 10696, column: 5, scope: !13635)
!13685 = !DILocation(line: 10697, column: 1, scope: !13635)
!13686 = distinct !DISubprogram(name: "__Pyx_CyFunction_Vectorcall_CheckArgs", scope: !21, file: !21, line: 10596, type: !13687, scopeLine: 10597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13689)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{!7, !354, !34, !28}
!13689 = !{!13690, !13691, !13692, !13693}
!13690 = !DILocalVariable(name: "cyfunc", arg: 1, scope: !13686, file: !21, line: 10596, type: !354)
!13691 = !DILocalVariable(name: "nargs", arg: 2, scope: !13686, file: !21, line: 10596, type: !34)
!13692 = !DILocalVariable(name: "kwnames", arg: 3, scope: !13686, file: !21, line: 10596, type: !28)
!13693 = !DILocalVariable(name: "ret", scope: !13686, file: !21, line: 10598, type: !7)
!13694 = !DILocation(line: 10596, column: 88, scope: !13686)
!13695 = !DILocation(line: 10596, column: 107, scope: !13686)
!13696 = !DILocation(line: 10596, column: 124, scope: !13686)
!13697 = !DILocation(line: 10598, column: 5, scope: !13686)
!13698 = !DILocation(line: 10598, column: 9, scope: !13686)
!13699 = !DILocation(line: 10599, column: 10, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13686, file: !21, line: 10599, column: 9)
!13701 = !DILocation(line: 10599, column: 18, scope: !13700)
!13702 = !DILocation(line: 10599, column: 24, scope: !13700)
!13703 = !DILocation(line: 10599, column: 51, scope: !13700)
!13704 = !DILocation(line: 10599, column: 56, scope: !13700)
!13705 = !DILocation(line: 10599, column: 64, scope: !13700)
!13706 = !DILocation(line: 10599, column: 70, scope: !13700)
!13707 = !DILocation(line: 10599, column: 9, scope: !13686)
!13708 = !DILocation(line: 10600, column: 13, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13710, file: !21, line: 10600, column: 13)
!13710 = distinct !DILexicalBlock(scope: !13700, file: !21, line: 10599, column: 104)
!13711 = !DILocation(line: 10600, column: 13, scope: !13710)
!13712 = !DILocation(line: 10601, column: 26, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13709, file: !21, line: 10600, column: 34)
!13714 = !DILocation(line: 10602, column: 47, scope: !13713)
!13715 = !DILocation(line: 10602, column: 56, scope: !13713)
!13716 = !DILocation(line: 10602, column: 62, scope: !13713)
!13717 = !DILocation(line: 10601, column: 13, scope: !13713)
!13718 = !DILocation(line: 10603, column: 13, scope: !13713)
!13719 = !DILocation(line: 10605, column: 13, scope: !13710)
!13720 = !DILocation(line: 10606, column: 5, scope: !13710)
!13721 = !DILocation(line: 10607, column: 9, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13686, file: !21, line: 10607, column: 9)
!13723 = !DILocation(line: 10607, column: 27, scope: !13722)
!13724 = !DILocation(line: 10607, column: 30, scope: !13722)
!13725 = !DILocation(line: 10607, column: 9, scope: !13686)
!13726 = !DILocation(line: 10608, column: 22, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13722, file: !21, line: 10607, column: 67)
!13728 = !DILocation(line: 10609, column: 82, scope: !13727)
!13729 = !DILocation(line: 10609, column: 91, scope: !13727)
!13730 = !DILocation(line: 10609, column: 97, scope: !13727)
!13731 = !DILocation(line: 10608, column: 9, scope: !13727)
!13732 = !DILocation(line: 10610, column: 9, scope: !13727)
!13733 = !DILocation(line: 10612, column: 12, scope: !13686)
!13734 = !DILocation(line: 10612, column: 5, scope: !13686)
!13735 = !DILocation(line: 10613, column: 1, scope: !13686)
!13736 = distinct !DISubprogram(name: "__pyx_pw_6Cython_4Plex_3DFA_1nfa_to_dfa", scope: !21, file: !21, line: 3826, type: !609, scopeLine: 3832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13737)
!13737 = !{!13738, !13739, !13740, !13741, !13742, !13743, !13744, !13745, !13746, !13747, !13748, !13749, !13750, !13753, !13756, !13760, !13763, !13764, !13765, !13766, !13768, !13769, !13770, !13771}
!13738 = !DILocalVariable(name: "__pyx_self", arg: 1, scope: !13736, file: !21, line: 3826, type: !28)
!13739 = !DILocalVariable(name: "__pyx_args", arg: 2, scope: !13736, file: !21, line: 3828, type: !339)
!13740 = !DILocalVariable(name: "__pyx_nargs", arg: 3, scope: !13736, file: !21, line: 3828, type: !34)
!13741 = !DILocalVariable(name: "__pyx_kwds", arg: 4, scope: !13736, file: !21, line: 3828, type: !28)
!13742 = !DILocalVariable(name: "__pyx_v_old_machine", scope: !13736, file: !21, line: 3833, type: !591)
!13743 = !DILocalVariable(name: "__pyx_v_debug", scope: !13736, file: !21, line: 3834, type: !28)
!13744 = !DILocalVariable(name: "__pyx_kwvalues", scope: !13736, file: !21, line: 3838, type: !339)
!13745 = !DILocalVariable(name: "values", scope: !13736, file: !21, line: 3839, type: !6663)
!13746 = !DILocalVariable(name: "__pyx_lineno", scope: !13736, file: !21, line: 3840, type: !7)
!13747 = !DILocalVariable(name: "__pyx_filename", scope: !13736, file: !21, line: 3841, type: !54)
!13748 = !DILocalVariable(name: "__pyx_clineno", scope: !13736, file: !21, line: 3842, type: !7)
!13749 = !DILocalVariable(name: "__pyx_r", scope: !13736, file: !21, line: 3843, type: !28)
!13750 = !DILocalVariable(name: "__pyx_pyargnames", scope: !13751, file: !21, line: 3855, type: !13752)
!13751 = distinct !DILexicalBlock(scope: !13736, file: !21, line: 3854, column: 3)
!13752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 192, elements: !721)
!13753 = !DILocalVariable(name: "kw_args", scope: !13754, file: !21, line: 3858, type: !34)
!13754 = distinct !DILexicalBlock(scope: !13755, file: !21, line: 3857, column: 21)
!13755 = distinct !DILexicalBlock(scope: !13751, file: !21, line: 3857, column: 9)
!13756 = !DILocalVariable(name: "value", scope: !13757, file: !21, line: 3879, type: !28)
!13757 = distinct !DILexicalBlock(scope: !13758, file: !21, line: 3878, column: 26)
!13758 = distinct !DILexicalBlock(scope: !13759, file: !21, line: 3878, column: 13)
!13759 = distinct !DILexicalBlock(scope: !13754, file: !21, line: 3868, column: 28)
!13760 = !DILocalVariable(name: "kwd_pos_args", scope: !13761, file: !21, line: 3885, type: !5676)
!13761 = distinct !DILexicalBlock(scope: !13762, file: !21, line: 3884, column: 34)
!13762 = distinct !DILexicalBlock(scope: !13754, file: !21, line: 3884, column: 11)
!13763 = !DILabel(scope: !13736, name: "__pyx_L5_argtuple_error", file: !21, line: 3901)
!13764 = !DILabel(scope: !13736, name: "__pyx_L6_skip", file: !21, line: 3903)
!13765 = !DILabel(scope: !13736, name: "__pyx_L3_error", file: !21, line: 3905)
!13766 = !DILocalVariable(name: "__pyx_temp", scope: !13767, file: !21, line: 3907, type: !34)
!13767 = distinct !DILexicalBlock(scope: !13736, file: !21, line: 3906, column: 3)
!13768 = !DILabel(scope: !13736, name: "__pyx_L4_argument_unpacking_done", file: !21, line: 3915)
!13769 = !DILabel(scope: !13736, name: "__pyx_L1_error", file: !21, line: 3921)
!13770 = !DILabel(scope: !13736, name: "__pyx_L0", file: !21, line: 3923)
!13771 = !DILocalVariable(name: "__pyx_temp", scope: !13772, file: !21, line: 3925, type: !34)
!13772 = distinct !DILexicalBlock(scope: !13736, file: !21, line: 3924, column: 3)
!13773 = !DILocation(line: 3826, column: 68, scope: !13736)
!13774 = !DILocation(line: 3828, column: 18, scope: !13736)
!13775 = !DILocation(line: 3828, column: 41, scope: !13736)
!13776 = !DILocation(line: 3828, column: 64, scope: !13736)
!13777 = !DILocation(line: 3833, column: 3, scope: !13736)
!13778 = !DILocation(line: 3833, column: 53, scope: !13736)
!13779 = !DILocation(line: 3834, column: 3, scope: !13736)
!13780 = !DILocation(line: 3834, column: 13, scope: !13736)
!13781 = !DILocation(line: 3838, column: 3, scope: !13736)
!13782 = !DILocation(line: 3838, column: 34, scope: !13736)
!13783 = !DILocation(line: 3839, column: 3, scope: !13736)
!13784 = !DILocation(line: 3839, column: 13, scope: !13736)
!13785 = !DILocation(line: 3840, column: 3, scope: !13736)
!13786 = !DILocation(line: 3840, column: 7, scope: !13736)
!13787 = !DILocation(line: 3841, column: 3, scope: !13736)
!13788 = !DILocation(line: 3841, column: 15, scope: !13736)
!13789 = !DILocation(line: 3842, column: 3, scope: !13736)
!13790 = !DILocation(line: 3842, column: 7, scope: !13736)
!13791 = !DILocation(line: 3843, column: 3, scope: !13736)
!13792 = !DILocation(line: 3843, column: 13, scope: !13736)
!13793 = !DILocation(line: 3853, column: 20, scope: !13736)
!13794 = !DILocation(line: 3853, column: 18, scope: !13736)
!13795 = !DILocation(line: 3855, column: 5, scope: !13751)
!13796 = !DILocation(line: 3855, column: 16, scope: !13751)
!13797 = !DILocation(line: 3855, column: 37, scope: !13751)
!13798 = !DILocation(line: 3855, column: 39, scope: !13751)
!13799 = !DILocation(line: 3855, column: 62, scope: !13751)
!13800 = !DILocation(line: 3856, column: 5, scope: !13751)
!13801 = !DILocation(line: 3856, column: 15, scope: !13751)
!13802 = !DILocation(line: 3857, column: 9, scope: !13755)
!13803 = !DILocation(line: 3857, column: 9, scope: !13751)
!13804 = !DILocation(line: 3858, column: 7, scope: !13754)
!13805 = !DILocation(line: 3858, column: 18, scope: !13754)
!13806 = !DILocation(line: 3859, column: 15, scope: !13754)
!13807 = !DILocation(line: 3859, column: 7, scope: !13754)
!13808 = !DILocation(line: 3860, column: 30, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13754, file: !21, line: 3859, column: 28)
!13810 = !DILocation(line: 3860, column: 18, scope: !13809)
!13811 = !DILocation(line: 3860, column: 28, scope: !13809)
!13812 = !DILocation(line: 3862, column: 30, scope: !13809)
!13813 = !DILocation(line: 3862, column: 18, scope: !13809)
!13814 = !DILocation(line: 3862, column: 28, scope: !13809)
!13815 = !DILocation(line: 3865, column: 18, scope: !13809)
!13816 = !DILocation(line: 3867, column: 17, scope: !13754)
!13817 = !DILocation(line: 3867, column: 15, scope: !13754)
!13818 = !DILocation(line: 3868, column: 15, scope: !13754)
!13819 = !DILocation(line: 3868, column: 7, scope: !13754)
!13820 = !DILocation(line: 3870, column: 13, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13759, file: !21, line: 3870, column: 13)
!13822 = !DILocation(line: 3870, column: 13, scope: !13759)
!13823 = !DILocation(line: 3871, column: 17, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13821, file: !21, line: 3870, column: 118)
!13825 = !DILocation(line: 3872, column: 18, scope: !13824)
!13826 = !DILocation(line: 3873, column: 9, scope: !13824)
!13827 = !DILocation(line: 3874, column: 18, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13821, file: !21, line: 3874, column: 18)
!13829 = !DILocation(line: 3874, column: 18, scope: !13821)
!13830 = !DILocation(line: 3874, column: 46, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13832, file: !21, line: 3874, column: 46)
!13832 = distinct !DILexicalBlock(scope: !13828, file: !21, line: 3874, column: 46)
!13833 = !DILocation(line: 3874, column: 46, scope: !13832)
!13834 = !DILocation(line: 3875, column: 14, scope: !13828)
!13835 = !DILocation(line: 3878, column: 13, scope: !13758)
!13836 = !DILocation(line: 3878, column: 21, scope: !13758)
!13837 = !DILocation(line: 3878, column: 13, scope: !13759)
!13838 = !DILocation(line: 3879, column: 11, scope: !13757)
!13839 = !DILocation(line: 3879, column: 21, scope: !13757)
!13840 = !DILocation(line: 3879, column: 55, scope: !13757)
!13841 = !DILocation(line: 3879, column: 67, scope: !13757)
!13842 = !DILocation(line: 3879, column: 83, scope: !13757)
!13843 = !DILocation(line: 3879, column: 29, scope: !13757)
!13844 = !DILocation(line: 3880, column: 15, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13757, file: !21, line: 3880, column: 15)
!13846 = !DILocation(line: 3880, column: 15, scope: !13757)
!13847 = !DILocation(line: 3880, column: 36, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13845, file: !21, line: 3880, column: 22)
!13849 = !DILocation(line: 3880, column: 24, scope: !13848)
!13850 = !DILocation(line: 3880, column: 34, scope: !13848)
!13851 = !DILocation(line: 3880, column: 77, scope: !13848)
!13852 = !DILocation(line: 3880, column: 81, scope: !13848)
!13853 = !DILocation(line: 3881, column: 20, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13845, file: !21, line: 3881, column: 20)
!13855 = !DILocation(line: 3881, column: 20, scope: !13845)
!13856 = !DILocation(line: 3881, column: 48, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13858, file: !21, line: 3881, column: 48)
!13858 = distinct !DILexicalBlock(scope: !13854, file: !21, line: 3881, column: 48)
!13859 = !DILocation(line: 3881, column: 48, scope: !13858)
!13860 = !DILocation(line: 3882, column: 9, scope: !13758)
!13861 = !DILocation(line: 3882, column: 9, scope: !13757)
!13862 = !DILocation(line: 3883, column: 7, scope: !13759)
!13863 = !DILocation(line: 3884, column: 11, scope: !13762)
!13864 = !DILocation(line: 3884, column: 11, scope: !13754)
!13865 = !DILocation(line: 3885, column: 9, scope: !13761)
!13866 = !DILocation(line: 3885, column: 26, scope: !13761)
!13867 = !DILocation(line: 3885, column: 41, scope: !13761)
!13868 = !DILocation(line: 3886, column: 13, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13761, file: !21, line: 3886, column: 13)
!13870 = !DILocation(line: 3886, column: 13, scope: !13761)
!13871 = !DILocation(line: 3886, column: 145, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !21, line: 3886, column: 145)
!13873 = distinct !DILexicalBlock(scope: !13869, file: !21, line: 3886, column: 145)
!13874 = !DILocation(line: 3886, column: 145, scope: !13873)
!13875 = !DILocation(line: 3887, column: 7, scope: !13762)
!13876 = !DILocation(line: 3887, column: 7, scope: !13761)
!13877 = !DILocation(line: 3888, column: 5, scope: !13755)
!13878 = !DILocation(line: 3888, column: 5, scope: !13754)
!13879 = !DILocation(line: 3889, column: 15, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13755, file: !21, line: 3888, column: 12)
!13881 = !DILocation(line: 3889, column: 7, scope: !13880)
!13882 = !DILocation(line: 3890, column: 30, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13880, file: !21, line: 3889, column: 28)
!13884 = !DILocation(line: 3890, column: 18, scope: !13883)
!13885 = !DILocation(line: 3890, column: 28, scope: !13883)
!13886 = !DILocation(line: 3892, column: 30, scope: !13883)
!13887 = !DILocation(line: 3892, column: 18, scope: !13883)
!13888 = !DILocation(line: 3892, column: 28, scope: !13883)
!13889 = !DILocation(line: 3893, column: 9, scope: !13883)
!13890 = !DILocation(line: 3894, column: 18, scope: !13883)
!13891 = !DILocation(line: 3897, column: 80, scope: !13751)
!13892 = !DILocation(line: 3897, column: 25, scope: !13751)
!13893 = !DILocation(line: 3898, column: 21, scope: !13751)
!13894 = !DILocation(line: 3898, column: 19, scope: !13751)
!13895 = !DILocation(line: 3899, column: 3, scope: !13736)
!13896 = !DILocation(line: 3900, column: 3, scope: !13736)
!13897 = !DILocation(line: 3901, column: 3, scope: !13736)
!13898 = !DILocation(line: 3902, column: 53, scope: !13736)
!13899 = !DILocation(line: 3902, column: 3, scope: !13736)
!13900 = !DILocation(line: 3902, column: 67, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13902, file: !21, line: 3902, column: 67)
!13902 = distinct !DILexicalBlock(scope: !13736, file: !21, line: 3902, column: 67)
!13903 = !DILocation(line: 3902, column: 67, scope: !13902)
!13904 = !DILocation(line: 3903, column: 3, scope: !13736)
!13905 = !DILocation(line: 3904, column: 3, scope: !13736)
!13906 = !DILocation(line: 3905, column: 3, scope: !13736)
!13907 = !DILocation(line: 3907, column: 5, scope: !13767)
!13908 = !DILocation(line: 3907, column: 16, scope: !13767)
!13909 = !DILocation(line: 3908, column: 20, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13767, file: !21, line: 3908, column: 5)
!13911 = !DILocation(line: 3908, column: 10, scope: !13910)
!13912 = !DILocation(line: 3908, column: 24, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13910, file: !21, line: 3908, column: 5)
!13914 = !DILocation(line: 3908, column: 35, scope: !13913)
!13915 = !DILocation(line: 3908, column: 5, scope: !13910)
!13916 = !DILocation(line: 3910, column: 5, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13913, file: !21, line: 3908, column: 99)
!13918 = !DILocation(line: 3908, column: 85, scope: !13913)
!13919 = !DILocation(line: 3908, column: 5, scope: !13913)
!13920 = distinct !{!13920, !13915, !13921, !4470}
!13921 = !DILocation(line: 3910, column: 5, scope: !13910)
!13922 = !DILocation(line: 3911, column: 3, scope: !13736)
!13923 = !DILocation(line: 3912, column: 52, scope: !13736)
!13924 = !DILocation(line: 3912, column: 67, scope: !13736)
!13925 = !DILocation(line: 3912, column: 81, scope: !13736)
!13926 = !DILocation(line: 3912, column: 3, scope: !13736)
!13927 = !DILocation(line: 3914, column: 3, scope: !13736)
!13928 = !DILocation(line: 3915, column: 3, scope: !13736)
!13929 = !DILocation(line: 3916, column: 7, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13736, file: !21, line: 3916, column: 7)
!13931 = !DILocation(line: 3916, column: 7, scope: !13736)
!13932 = !DILocation(line: 3916, column: 138, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13934, file: !21, line: 3916, column: 138)
!13934 = distinct !DILexicalBlock(scope: !13930, file: !21, line: 3916, column: 138)
!13935 = !DILocation(line: 3916, column: 138, scope: !13934)
!13936 = !DILocation(line: 3917, column: 52, scope: !13736)
!13937 = !DILocation(line: 3917, column: 64, scope: !13736)
!13938 = !DILocation(line: 3917, column: 85, scope: !13736)
!13939 = !DILocation(line: 3917, column: 13, scope: !13736)
!13940 = !DILocation(line: 3917, column: 11, scope: !13736)
!13941 = !DILocation(line: 3920, column: 3, scope: !13736)
!13942 = !DILocation(line: 3921, column: 3, scope: !13736)
!13943 = !DILocation(line: 3922, column: 11, scope: !13736)
!13944 = !DILocation(line: 3922, column: 3, scope: !13736)
!13945 = !DILocation(line: 3923, column: 3, scope: !13736)
!13946 = !DILocation(line: 3925, column: 5, scope: !13772)
!13947 = !DILocation(line: 3925, column: 16, scope: !13772)
!13948 = !DILocation(line: 3926, column: 20, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13772, file: !21, line: 3926, column: 5)
!13950 = !DILocation(line: 3926, column: 10, scope: !13949)
!13951 = !DILocation(line: 3926, column: 24, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13949, file: !21, line: 3926, column: 5)
!13953 = !DILocation(line: 3926, column: 35, scope: !13952)
!13954 = !DILocation(line: 3926, column: 5, scope: !13949)
!13955 = !DILocation(line: 3928, column: 5, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13952, file: !21, line: 3926, column: 99)
!13957 = !DILocation(line: 3926, column: 85, scope: !13952)
!13958 = !DILocation(line: 3926, column: 5, scope: !13952)
!13959 = distinct !{!13959, !13954, !13960, !4470}
!13960 = !DILocation(line: 3928, column: 5, scope: !13949)
!13961 = !DILocation(line: 3929, column: 3, scope: !13736)
!13962 = !DILocation(line: 3931, column: 10, scope: !13736)
!13963 = !DILocation(line: 3931, column: 3, scope: !13736)
!13964 = !DILocation(line: 3932, column: 1, scope: !13736)
!13965 = distinct !DISubprogram(name: "__Pyx_GetKwValue_FASTCALL", scope: !21, file: !21, line: 8108, type: !13966, scopeLine: 8109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13968)
!13966 = !DISubroutineType(types: !13967)
!13967 = !{!28, !28, !339, !28}
!13968 = !{!13969, !13970, !13971, !13972, !13973, !13974}
!13969 = !DILocalVariable(name: "kwnames", arg: 1, scope: !13965, file: !21, line: 8108, type: !28)
!13970 = !DILocalVariable(name: "kwvalues", arg: 2, scope: !13965, file: !21, line: 8108, type: !339)
!13971 = !DILocalVariable(name: "s", arg: 3, scope: !13965, file: !21, line: 8108, type: !28)
!13972 = !DILocalVariable(name: "i", scope: !13965, file: !21, line: 8110, type: !34)
!13973 = !DILocalVariable(name: "n", scope: !13965, file: !21, line: 8110, type: !34)
!13974 = !DILocalVariable(name: "eq", scope: !13975, file: !21, line: 8117, type: !7)
!13975 = distinct !DILexicalBlock(scope: !13976, file: !21, line: 8116, column: 5)
!13976 = distinct !DILexicalBlock(scope: !13977, file: !21, line: 8115, column: 5)
!13977 = distinct !DILexicalBlock(scope: !13965, file: !21, line: 8115, column: 5)
!13978 = !DILocation(line: 8108, column: 69, scope: !13965)
!13979 = !DILocation(line: 8108, column: 95, scope: !13965)
!13980 = !DILocation(line: 8108, column: 115, scope: !13965)
!13981 = !DILocation(line: 8110, column: 5, scope: !13965)
!13982 = !DILocation(line: 8110, column: 16, scope: !13965)
!13983 = !DILocation(line: 8110, column: 19, scope: !13965)
!13984 = !DILocation(line: 8110, column: 23, scope: !13965)
!13985 = !DILocation(line: 8111, column: 12, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13965, file: !21, line: 8111, column: 5)
!13987 = !DILocation(line: 8111, column: 10, scope: !13986)
!13988 = !DILocation(line: 8111, column: 17, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13986, file: !21, line: 8111, column: 5)
!13990 = !DILocation(line: 8111, column: 21, scope: !13989)
!13991 = !DILocation(line: 8111, column: 19, scope: !13989)
!13992 = !DILocation(line: 8111, column: 5, scope: !13986)
!13993 = !DILocation(line: 8113, column: 13, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !21, line: 8113, column: 13)
!13995 = distinct !DILexicalBlock(scope: !13989, file: !21, line: 8112, column: 5)
!13996 = !DILocation(line: 8113, column: 18, scope: !13994)
!13997 = !DILocation(line: 8113, column: 15, scope: !13994)
!13998 = !DILocation(line: 8113, column: 13, scope: !13995)
!13999 = !DILocation(line: 8113, column: 55, scope: !13994)
!14000 = !DILocation(line: 8113, column: 64, scope: !13994)
!14001 = !DILocation(line: 8113, column: 48, scope: !13994)
!14002 = !DILocation(line: 8114, column: 5, scope: !13995)
!14003 = !DILocation(line: 8111, column: 25, scope: !13989)
!14004 = !DILocation(line: 8111, column: 5, scope: !13989)
!14005 = distinct !{!14005, !13992, !14006, !4470}
!14006 = !DILocation(line: 8114, column: 5, scope: !13986)
!14007 = !DILocation(line: 8115, column: 12, scope: !13977)
!14008 = !DILocation(line: 8115, column: 10, scope: !13977)
!14009 = !DILocation(line: 8115, column: 17, scope: !13976)
!14010 = !DILocation(line: 8115, column: 21, scope: !13976)
!14011 = !DILocation(line: 8115, column: 19, scope: !13976)
!14012 = !DILocation(line: 8115, column: 5, scope: !13977)
!14013 = !DILocation(line: 8117, column: 9, scope: !13975)
!14014 = !DILocation(line: 8117, column: 13, scope: !13975)
!14015 = !DILocation(line: 8117, column: 41, scope: !13975)
!14016 = !DILocation(line: 8117, column: 44, scope: !13975)
!14017 = !DILocation(line: 8117, column: 18, scope: !13975)
!14018 = !DILocation(line: 8118, column: 13, scope: !14019)
!14019 = distinct !DILexicalBlock(scope: !13975, file: !21, line: 8118, column: 13)
!14020 = !DILocation(line: 8118, column: 13, scope: !13975)
!14021 = !DILocation(line: 8119, column: 17, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !21, line: 8119, column: 17)
!14023 = distinct !DILexicalBlock(scope: !14019, file: !21, line: 8118, column: 32)
!14024 = !DILocation(line: 8119, column: 17, scope: !14023)
!14025 = !DILocation(line: 8119, column: 35, scope: !14022)
!14026 = !DILocation(line: 8120, column: 20, scope: !14023)
!14027 = !DILocation(line: 8120, column: 29, scope: !14023)
!14028 = !DILocation(line: 8120, column: 13, scope: !14023)
!14029 = !DILocation(line: 8122, column: 5, scope: !13976)
!14030 = !DILocation(line: 8122, column: 5, scope: !13975)
!14031 = !DILocation(line: 8115, column: 25, scope: !13976)
!14032 = !DILocation(line: 8115, column: 5, scope: !13976)
!14033 = distinct !{!14033, !14012, !14034, !4470}
!14034 = !DILocation(line: 8122, column: 5, scope: !13977)
!14035 = !DILocation(line: 8123, column: 5, scope: !13965)
!14036 = !DILocation(line: 8124, column: 1, scope: !13965)
!14037 = distinct !DISubprogram(name: "__Pyx__ArgTypeTest", scope: !21, file: !21, line: 8324, type: !14038, scopeLine: 8325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14040)
!14038 = !DISubroutineType(types: !14039)
!14039 = !{!7, !28, !42, !54, !7}
!14040 = !{!14041, !14042, !14043, !14044, !14045, !14046}
!14041 = !DILocalVariable(name: "obj", arg: 1, scope: !14037, file: !21, line: 8324, type: !28)
!14042 = !DILocalVariable(name: "type", arg: 2, scope: !14037, file: !21, line: 8324, type: !42)
!14043 = !DILocalVariable(name: "name", arg: 3, scope: !14037, file: !21, line: 8324, type: !54)
!14044 = !DILocalVariable(name: "exact", arg: 4, scope: !14037, file: !21, line: 8324, type: !7)
!14045 = !DILocalVariable(name: "type_name", scope: !14037, file: !21, line: 8326, type: !8500)
!14046 = !DILocalVariable(name: "obj_type_name", scope: !14037, file: !21, line: 8327, type: !8500)
!14047 = !DILocation(line: 8324, column: 41, scope: !14037)
!14048 = !DILocation(line: 8324, column: 60, scope: !14037)
!14049 = !DILocation(line: 8324, column: 78, scope: !14037)
!14050 = !DILocation(line: 8324, column: 88, scope: !14037)
!14051 = !DILocation(line: 8326, column: 5, scope: !14037)
!14052 = !DILocation(line: 8326, column: 20, scope: !14037)
!14053 = !DILocation(line: 8327, column: 5, scope: !14037)
!14054 = !DILocation(line: 8327, column: 20, scope: !14037)
!14055 = !DILocation(line: 8328, column: 9, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14037, file: !21, line: 8328, column: 9)
!14057 = !DILocation(line: 8328, column: 9, scope: !14037)
!14058 = !DILocation(line: 8329, column: 25, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14056, file: !21, line: 8328, column: 26)
!14060 = !DILocation(line: 8329, column: 9, scope: !14059)
!14061 = !DILocation(line: 8330, column: 9, scope: !14059)
!14062 = !DILocation(line: 8332, column: 14, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14056, file: !21, line: 8332, column: 14)
!14064 = !DILocation(line: 8332, column: 14, scope: !14056)
!14065 = !DILocation(line: 8336, column: 5, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14063, file: !21, line: 8332, column: 21)
!14067 = !DILocation(line: 8338, column: 13, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14069, file: !21, line: 8338, column: 13)
!14069 = distinct !DILexicalBlock(scope: !14063, file: !21, line: 8337, column: 10)
!14070 = !DILocation(line: 8338, column: 13, scope: !14069)
!14071 = !DILocation(line: 8338, column: 49, scope: !14068)
!14072 = !DILocation(line: 8340, column: 17, scope: !14037)
!14073 = !DILocation(line: 8340, column: 15, scope: !14037)
!14074 = !DILocation(line: 8341, column: 21, scope: !14037)
!14075 = !DILocation(line: 8341, column: 19, scope: !14037)
!14076 = !DILocation(line: 8342, column: 18, scope: !14037)
!14077 = !DILocation(line: 8344, column: 42, scope: !14037)
!14078 = !DILocation(line: 8344, column: 48, scope: !14037)
!14079 = !DILocation(line: 8344, column: 59, scope: !14037)
!14080 = !DILocation(line: 8342, column: 5, scope: !14037)
!14081 = !DILocation(line: 8347, column: 5, scope: !14037)
!14082 = !DILocation(line: 8348, column: 1, scope: !14037)
!14083 = distinct !DISubprogram(name: "__pyx_pf_6Cython_4Plex_3DFA_nfa_to_dfa", scope: !21, file: !21, line: 3934, type: !14084, scopeLine: 3934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{!28, !28, !591, !28}
!14086 = !{!14087, !14088, !14089, !14090, !14091, !14092, !14093, !14094, !14095, !14096, !14097}
!14087 = !DILocalVariable(name: "__pyx_self", arg: 1, scope: !14083, file: !21, line: 3934, type: !28)
!14088 = !DILocalVariable(name: "__pyx_v_old_machine", arg: 2, scope: !14083, file: !21, line: 3934, type: !591)
!14089 = !DILocalVariable(name: "__pyx_v_debug", arg: 3, scope: !14083, file: !21, line: 3934, type: !28)
!14090 = !DILocalVariable(name: "__pyx_r", scope: !14083, file: !21, line: 3935, type: !28)
!14091 = !DILocalVariable(name: "__pyx_t_1", scope: !14083, file: !21, line: 3937, type: !28)
!14092 = !DILocalVariable(name: "__pyx_t_2", scope: !14083, file: !21, line: 3938, type: !6591)
!14093 = !DILocalVariable(name: "__pyx_lineno", scope: !14083, file: !21, line: 3939, type: !7)
!14094 = !DILocalVariable(name: "__pyx_filename", scope: !14083, file: !21, line: 3940, type: !54)
!14095 = !DILocalVariable(name: "__pyx_clineno", scope: !14083, file: !21, line: 3941, type: !7)
!14096 = !DILabel(scope: !14083, name: "__pyx_L1_error", file: !21, line: 3953)
!14097 = !DILabel(scope: !14083, name: "__pyx_L0", file: !21, line: 3957)
!14098 = !DILocation(line: 3934, column: 81, scope: !14083)
!14099 = !DILocation(line: 3934, column: 143, scope: !14083)
!14100 = !DILocation(line: 3934, column: 174, scope: !14083)
!14101 = !DILocation(line: 3935, column: 3, scope: !14083)
!14102 = !DILocation(line: 3935, column: 13, scope: !14083)
!14103 = !DILocation(line: 3937, column: 3, scope: !14083)
!14104 = !DILocation(line: 3937, column: 13, scope: !14083)
!14105 = !DILocation(line: 3938, column: 3, scope: !14083)
!14106 = !DILocation(line: 3938, column: 55, scope: !14083)
!14107 = !DILocation(line: 3939, column: 3, scope: !14083)
!14108 = !DILocation(line: 3939, column: 7, scope: !14083)
!14109 = !DILocation(line: 3940, column: 3, scope: !14083)
!14110 = !DILocation(line: 3940, column: 15, scope: !14083)
!14111 = !DILocation(line: 3941, column: 3, scope: !14083)
!14112 = !DILocation(line: 3941, column: 7, scope: !14083)
!14113 = !DILocation(line: 3943, column: 3, scope: !14083)
!14114 = !DILocation(line: 3944, column: 13, scope: !14083)
!14115 = !DILocation(line: 3944, column: 21, scope: !14083)
!14116 = !DILocation(line: 3945, column: 21, scope: !14083)
!14117 = !DILocation(line: 3945, column: 13, scope: !14083)
!14118 = !DILocation(line: 3945, column: 19, scope: !14083)
!14119 = !DILocation(line: 3946, column: 53, scope: !14083)
!14120 = !DILocation(line: 3946, column: 15, scope: !14083)
!14121 = !DILocation(line: 3946, column: 13, scope: !14083)
!14122 = !DILocation(line: 3946, column: 94, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14083, file: !21, line: 3946, column: 94)
!14124 = !DILocation(line: 3946, column: 94, scope: !14083)
!14125 = !DILocation(line: 3946, column: 116, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14127, file: !21, line: 3946, column: 116)
!14127 = distinct !DILexicalBlock(scope: !14123, file: !21, line: 3946, column: 116)
!14128 = !DILocation(line: 3946, column: 116, scope: !14127)
!14129 = !DILocation(line: 3948, column: 13, scope: !14083)
!14130 = !DILocation(line: 3948, column: 11, scope: !14083)
!14131 = !DILocation(line: 3949, column: 13, scope: !14083)
!14132 = !DILocation(line: 3950, column: 3, scope: !14083)
!14133 = !DILocation(line: 3953, column: 3, scope: !14083)
!14134 = !DILocation(line: 3954, column: 3, scope: !14083)
!14135 = !DILocation(line: 3955, column: 52, scope: !14083)
!14136 = !DILocation(line: 3955, column: 67, scope: !14083)
!14137 = !DILocation(line: 3955, column: 81, scope: !14083)
!14138 = !DILocation(line: 3955, column: 3, scope: !14083)
!14139 = !DILocation(line: 3956, column: 11, scope: !14083)
!14140 = !DILocation(line: 3956, column: 3, scope: !14083)
!14141 = !DILocation(line: 3957, column: 3, scope: !14083)
!14142 = !DILocation(line: 3960, column: 10, scope: !14083)
!14143 = !DILocation(line: 3961, column: 1, scope: !14083)
!14144 = !DILocation(line: 3960, column: 3, scope: !14083)
!14145 = distinct !DISubprogram(name: "__Pyx_PyUnicode_Equals", scope: !21, file: !21, line: 8005, type: !13096, scopeLine: 8005, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14146)
!14146 = !{!14147, !14148, !14149, !14150, !14151, !14152, !14155, !14156, !14157, !14158, !14160, !14161, !14165, !14169, !14170, !14171}
!14147 = !DILocalVariable(name: "s1", arg: 1, scope: !14145, file: !21, line: 8005, type: !28)
!14148 = !DILocalVariable(name: "s2", arg: 2, scope: !14145, file: !21, line: 8005, type: !28)
!14149 = !DILocalVariable(name: "equals", arg: 3, scope: !14145, file: !21, line: 8005, type: !7)
!14150 = !DILocalVariable(name: "s1_is_unicode", scope: !14145, file: !21, line: 8012, type: !7)
!14151 = !DILocalVariable(name: "s2_is_unicode", scope: !14145, file: !21, line: 8012, type: !7)
!14152 = !DILocalVariable(name: "length", scope: !14153, file: !21, line: 8036, type: !34)
!14153 = distinct !DILexicalBlock(scope: !14154, file: !21, line: 8035, column: 40)
!14154 = distinct !DILexicalBlock(scope: !14145, file: !21, line: 8035, column: 9)
!14155 = !DILocalVariable(name: "kind", scope: !14153, file: !21, line: 8037, type: !7)
!14156 = !DILocalVariable(name: "data1", scope: !14153, file: !21, line: 8038, type: !27)
!14157 = !DILocalVariable(name: "data2", scope: !14153, file: !21, line: 8038, type: !27)
!14158 = !DILocalVariable(name: "hash1", scope: !14159, file: !21, line: 8047, type: !198)
!14159 = distinct !DILexicalBlock(scope: !14153, file: !21, line: 8046, column: 9)
!14160 = !DILocalVariable(name: "hash2", scope: !14159, file: !21, line: 8047, type: !198)
!14161 = !DILocalVariable(name: "result", scope: !14162, file: !21, line: 8071, type: !7)
!14162 = distinct !DILexicalBlock(scope: !14163, file: !21, line: 8070, column: 16)
!14163 = distinct !DILexicalBlock(scope: !14164, file: !21, line: 8068, column: 20)
!14164 = distinct !DILexicalBlock(scope: !14153, file: !21, line: 8066, column: 13)
!14165 = !DILocalVariable(name: "result", scope: !14166, file: !21, line: 8082, type: !7)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !21, line: 8081, column: 12)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !21, line: 8079, column: 16)
!14168 = distinct !DILexicalBlock(scope: !14154, file: !21, line: 8077, column: 16)
!14169 = !DILocalVariable(name: "py_result", scope: !14166, file: !21, line: 8083, type: !28)
!14170 = !DILabel(scope: !14145, name: "return_eq", file: !21, line: 8093)
!14171 = !DILabel(scope: !14145, name: "return_ne", file: !21, line: 8098)
!14172 = !DILocation(line: 8005, column: 59, scope: !14145)
!14173 = !DILocation(line: 8005, column: 73, scope: !14145)
!14174 = !DILocation(line: 8005, column: 81, scope: !14145)
!14175 = !DILocation(line: 8012, column: 5, scope: !14145)
!14176 = !DILocation(line: 8012, column: 9, scope: !14145)
!14177 = !DILocation(line: 8012, column: 24, scope: !14145)
!14178 = !DILocation(line: 8013, column: 9, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14145, file: !21, line: 8013, column: 9)
!14180 = !DILocation(line: 8013, column: 15, scope: !14179)
!14181 = !DILocation(line: 8013, column: 12, scope: !14179)
!14182 = !DILocation(line: 8013, column: 9, scope: !14145)
!14183 = !DILocation(line: 8014, column: 9, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14179, file: !21, line: 8013, column: 19)
!14185 = !DILocation(line: 8016, column: 21, scope: !14145)
!14186 = !DILocation(line: 8016, column: 19, scope: !14145)
!14187 = !DILocation(line: 8017, column: 21, scope: !14145)
!14188 = !DILocation(line: 8017, column: 19, scope: !14145)
!14189 = !DILocation(line: 8035, column: 9, scope: !14154)
!14190 = !DILocation(line: 8035, column: 25, scope: !14154)
!14191 = !DILocation(line: 8035, column: 23, scope: !14154)
!14192 = !DILocation(line: 8035, column: 9, scope: !14145)
!14193 = !DILocation(line: 8036, column: 9, scope: !14153)
!14194 = !DILocation(line: 8036, column: 20, scope: !14153)
!14195 = !DILocation(line: 8037, column: 9, scope: !14153)
!14196 = !DILocation(line: 8037, column: 13, scope: !14153)
!14197 = !DILocation(line: 8038, column: 9, scope: !14153)
!14198 = !DILocation(line: 8038, column: 15, scope: !14153)
!14199 = !DILocation(line: 8038, column: 23, scope: !14153)
!14200 = !DILocation(line: 8039, column: 13, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14153, file: !21, line: 8039, column: 13)
!14202 = !DILocation(line: 8039, column: 53, scope: !14201)
!14203 = !DILocation(line: 8039, column: 56, scope: !14201)
!14204 = !DILocation(line: 8039, column: 13, scope: !14153)
!14205 = !DILocation(line: 8040, column: 13, scope: !14201)
!14206 = !DILocation(line: 8041, column: 18, scope: !14153)
!14207 = !DILocation(line: 8041, column: 16, scope: !14153)
!14208 = !DILocation(line: 8042, column: 13, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14153, file: !21, line: 8042, column: 13)
!14210 = !DILocation(line: 8042, column: 23, scope: !14209)
!14211 = !DILocation(line: 8042, column: 20, scope: !14209)
!14212 = !DILocation(line: 8042, column: 13, scope: !14153)
!14213 = !DILocation(line: 8043, column: 13, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14209, file: !21, line: 8042, column: 55)
!14215 = !DILocation(line: 8047, column: 13, scope: !14159)
!14216 = !DILocation(line: 8047, column: 23, scope: !14159)
!14217 = !DILocation(line: 8047, column: 30, scope: !14159)
!14218 = !DILocation(line: 8049, column: 38, scope: !14159)
!14219 = !DILocation(line: 8049, column: 43, scope: !14159)
!14220 = !DILocation(line: 8049, column: 19, scope: !14159)
!14221 = !DILocation(line: 8050, column: 38, scope: !14159)
!14222 = !DILocation(line: 8050, column: 43, scope: !14159)
!14223 = !DILocation(line: 8050, column: 19, scope: !14159)
!14224 = !DILocation(line: 8055, column: 17, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14159, file: !21, line: 8055, column: 17)
!14226 = !DILocation(line: 8055, column: 26, scope: !14225)
!14227 = !DILocation(line: 8055, column: 23, scope: !14225)
!14228 = !DILocation(line: 8055, column: 32, scope: !14225)
!14229 = !DILocation(line: 8055, column: 35, scope: !14225)
!14230 = !DILocation(line: 8055, column: 41, scope: !14225)
!14231 = !DILocation(line: 8055, column: 47, scope: !14225)
!14232 = !DILocation(line: 8055, column: 50, scope: !14225)
!14233 = !DILocation(line: 8055, column: 56, scope: !14225)
!14234 = !DILocation(line: 8055, column: 17, scope: !14159)
!14235 = !DILocation(line: 8056, column: 17, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14225, file: !21, line: 8055, column: 63)
!14237 = !DILocation(line: 8058, column: 9, scope: !14153)
!14238 = !DILocation(line: 8060, column: 16, scope: !14153)
!14239 = !DILocation(line: 8060, column: 14, scope: !14153)
!14240 = !DILocation(line: 8061, column: 13, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14153, file: !21, line: 8061, column: 13)
!14242 = !DILocation(line: 8061, column: 21, scope: !14241)
!14243 = !DILocation(line: 8061, column: 18, scope: !14241)
!14244 = !DILocation(line: 8061, column: 13, scope: !14153)
!14245 = !DILocation(line: 8062, column: 13, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14241, file: !21, line: 8061, column: 47)
!14247 = !DILocation(line: 8064, column: 17, scope: !14153)
!14248 = !DILocation(line: 8064, column: 15, scope: !14153)
!14249 = !DILocation(line: 8065, column: 17, scope: !14153)
!14250 = !DILocation(line: 8065, column: 15, scope: !14153)
!14251 = !DILocation(line: 8066, column: 13, scope: !14164)
!14252 = !DILocation(line: 8066, column: 53, scope: !14164)
!14253 = !DILocation(line: 8066, column: 50, scope: !14164)
!14254 = !DILocation(line: 8066, column: 13, scope: !14153)
!14255 = !DILocation(line: 8067, column: 13, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14164, file: !21, line: 8066, column: 91)
!14257 = !DILocation(line: 8068, column: 20, scope: !14163)
!14258 = !DILocation(line: 8068, column: 27, scope: !14163)
!14259 = !DILocation(line: 8068, column: 20, scope: !14164)
!14260 = !DILocation(line: 8069, column: 13, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14163, file: !21, line: 8068, column: 33)
!14262 = !DILocation(line: 8071, column: 13, scope: !14162)
!14263 = !DILocation(line: 8071, column: 17, scope: !14162)
!14264 = !DILocation(line: 8071, column: 33, scope: !14162)
!14265 = !DILocation(line: 8071, column: 40, scope: !14162)
!14266 = !DILocation(line: 8071, column: 56, scope: !14162)
!14267 = !DILocation(line: 8071, column: 65, scope: !14162)
!14268 = !DILocation(line: 8071, column: 63, scope: !14162)
!14269 = !DILocation(line: 8071, column: 26, scope: !14162)
!14270 = !DILocation(line: 8075, column: 21, scope: !14162)
!14271 = !DILocation(line: 8075, column: 28, scope: !14162)
!14272 = !DILocation(line: 8075, column: 20, scope: !14162)
!14273 = !DILocation(line: 8075, column: 41, scope: !14162)
!14274 = !DILocation(line: 8075, column: 48, scope: !14162)
!14275 = !DILocation(line: 8075, column: 57, scope: !14162)
!14276 = !DILocation(line: 8075, column: 64, scope: !14162)
!14277 = !DILocation(line: 8075, column: 13, scope: !14162)
!14278 = !DILocation(line: 8076, column: 9, scope: !14163)
!14279 = !DILocation(line: 8077, column: 5, scope: !14154)
!14280 = !DILocation(line: 8077, column: 17, scope: !14168)
!14281 = !DILocation(line: 8077, column: 20, scope: !14168)
!14282 = !DILocation(line: 8077, column: 34, scope: !14168)
!14283 = !DILocation(line: 8077, column: 32, scope: !14168)
!14284 = !DILocation(line: 8077, column: 16, scope: !14154)
!14285 = !DILocation(line: 8078, column: 9, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14168, file: !21, line: 8077, column: 49)
!14287 = !DILocation(line: 8079, column: 17, scope: !14167)
!14288 = !DILocation(line: 8079, column: 20, scope: !14167)
!14289 = !DILocation(line: 8079, column: 34, scope: !14167)
!14290 = !DILocation(line: 8079, column: 32, scope: !14167)
!14291 = !DILocation(line: 8079, column: 16, scope: !14168)
!14292 = !DILocation(line: 8080, column: 9, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14167, file: !21, line: 8079, column: 49)
!14294 = !DILocation(line: 8082, column: 9, scope: !14166)
!14295 = !DILocation(line: 8082, column: 13, scope: !14166)
!14296 = !DILocation(line: 8083, column: 9, scope: !14166)
!14297 = !DILocation(line: 8083, column: 19, scope: !14166)
!14298 = !DILocation(line: 8083, column: 52, scope: !14166)
!14299 = !DILocation(line: 8083, column: 56, scope: !14166)
!14300 = !DILocation(line: 8083, column: 60, scope: !14166)
!14301 = !DILocation(line: 8083, column: 31, scope: !14166)
!14302 = !DILocation(line: 8087, column: 14, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14166, file: !21, line: 8087, column: 13)
!14304 = !DILocation(line: 8087, column: 13, scope: !14166)
!14305 = !DILocation(line: 8088, column: 13, scope: !14303)
!14306 = !DILocation(line: 8089, column: 40, scope: !14166)
!14307 = !DILocation(line: 8089, column: 18, scope: !14166)
!14308 = !DILocation(line: 8089, column: 16, scope: !14166)
!14309 = !DILocation(line: 8090, column: 9, scope: !14166)
!14310 = !DILocation(line: 8091, column: 16, scope: !14166)
!14311 = !DILocation(line: 8091, column: 9, scope: !14166)
!14312 = !DILocation(line: 8092, column: 5, scope: !14167)
!14313 = !DILocation(line: 8093, column: 1, scope: !14145)
!14314 = !DILocation(line: 8097, column: 13, scope: !14145)
!14315 = !DILocation(line: 8097, column: 20, scope: !14145)
!14316 = !DILocation(line: 8097, column: 5, scope: !14145)
!14317 = !DILocation(line: 8098, column: 1, scope: !14145)
!14318 = !DILocation(line: 8102, column: 13, scope: !14145)
!14319 = !DILocation(line: 8102, column: 20, scope: !14145)
!14320 = !DILocation(line: 8102, column: 5, scope: !14145)
!14321 = !DILocation(line: 8104, column: 1, scope: !14145)
!14322 = distinct !DISubprogram(name: "PyUnicode_READ", scope: !13, file: !13, line: 396, type: !14323, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14325)
!14323 = !DISubroutineType(types: !14324)
!14324 = !{!556, !7, !611, !34}
!14325 = !{!14326, !14327, !14328}
!14326 = !DILocalVariable(name: "kind", arg: 1, scope: !14322, file: !13, line: 396, type: !7)
!14327 = !DILocalVariable(name: "data", arg: 2, scope: !14322, file: !13, line: 397, type: !611)
!14328 = !DILocalVariable(name: "index", arg: 3, scope: !14322, file: !13, line: 397, type: !34)
!14329 = !DILocation(line: 396, column: 42, scope: !14322)
!14330 = !DILocation(line: 397, column: 50, scope: !14322)
!14331 = !DILocation(line: 397, column: 67, scope: !14322)
!14332 = !DILocation(line: 399, column: 9, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14322, file: !13, line: 399, column: 9)
!14334 = !DILocation(line: 399, column: 14, scope: !14333)
!14335 = !DILocation(line: 399, column: 9, scope: !14322)
!14336 = !DILocation(line: 400, column: 16, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14333, file: !13, line: 399, column: 39)
!14338 = !DILocation(line: 400, column: 54, scope: !14337)
!14339 = !DILocation(line: 400, column: 9, scope: !14337)
!14340 = !DILocation(line: 402, column: 9, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14322, file: !13, line: 402, column: 9)
!14342 = !DILocation(line: 402, column: 14, scope: !14341)
!14343 = !DILocation(line: 402, column: 9, scope: !14322)
!14344 = !DILocation(line: 403, column: 16, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14341, file: !13, line: 402, column: 39)
!14346 = !DILocation(line: 403, column: 54, scope: !14345)
!14347 = !{!14348, !14348, i64 0}
!14348 = !{!"short", !1901, i64 0}
!14349 = !DILocation(line: 403, column: 9, scope: !14345)
!14350 = !DILocation(line: 406, column: 12, scope: !14322)
!14351 = !DILocation(line: 406, column: 50, scope: !14322)
!14352 = !DILocation(line: 406, column: 5, scope: !14322)
!14353 = !DILocation(line: 407, column: 1, scope: !14322)
!14354 = !DISubprogram(name: "memcmp", scope: !4100, file: !4100, line: 64, type: !14355, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14355 = !DISubroutineType(types: !14356)
!14356 = !{!7, !611, !611, !341}
!14357 = distinct !DISubprogram(name: "__pyx_pw_6Cython_4Plex_3DFA_3__pyx_unpickle_StateMap", scope: !21, file: !21, line: 5660, type: !609, scopeLine: 5666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14358)
!14358 = !{!14359, !14360, !14361, !14362, !14363, !14364, !14365, !14366, !14367, !14368, !14369, !14370, !14371, !14372, !14375, !14378, !14381, !14382, !14383, !14384, !14386, !14387}
!14359 = !DILocalVariable(name: "__pyx_self", arg: 1, scope: !14357, file: !21, line: 5660, type: !28)
!14360 = !DILocalVariable(name: "__pyx_args", arg: 2, scope: !14357, file: !21, line: 5662, type: !339)
!14361 = !DILocalVariable(name: "__pyx_nargs", arg: 3, scope: !14357, file: !21, line: 5662, type: !34)
!14362 = !DILocalVariable(name: "__pyx_kwds", arg: 4, scope: !14357, file: !21, line: 5662, type: !28)
!14363 = !DILocalVariable(name: "__pyx_v___pyx_type", scope: !14357, file: !21, line: 5667, type: !28)
!14364 = !DILocalVariable(name: "__pyx_v___pyx_checksum", scope: !14357, file: !21, line: 5668, type: !40)
!14365 = !DILocalVariable(name: "__pyx_v___pyx_state", scope: !14357, file: !21, line: 5669, type: !28)
!14366 = !DILocalVariable(name: "__pyx_kwvalues", scope: !14357, file: !21, line: 5673, type: !339)
!14367 = !DILocalVariable(name: "values", scope: !14357, file: !21, line: 5674, type: !6644)
!14368 = !DILocalVariable(name: "__pyx_lineno", scope: !14357, file: !21, line: 5675, type: !7)
!14369 = !DILocalVariable(name: "__pyx_filename", scope: !14357, file: !21, line: 5676, type: !54)
!14370 = !DILocalVariable(name: "__pyx_clineno", scope: !14357, file: !21, line: 5677, type: !7)
!14371 = !DILocalVariable(name: "__pyx_r", scope: !14357, file: !21, line: 5678, type: !28)
!14372 = !DILocalVariable(name: "__pyx_pyargnames", scope: !14373, file: !21, line: 5690, type: !14374)
!14373 = distinct !DILexicalBlock(scope: !14357, file: !21, line: 5689, column: 3)
!14374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 256, elements: !678)
!14375 = !DILocalVariable(name: "kw_args", scope: !14376, file: !21, line: 5692, type: !34)
!14376 = distinct !DILexicalBlock(scope: !14377, file: !21, line: 5691, column: 21)
!14377 = distinct !DILexicalBlock(scope: !14373, file: !21, line: 5691, column: 9)
!14378 = !DILocalVariable(name: "kwd_pos_args", scope: !14379, file: !21, line: 5734, type: !5676)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !21, line: 5733, column: 34)
!14380 = distinct !DILexicalBlock(scope: !14376, file: !21, line: 5733, column: 11)
!14381 = !DILabel(scope: !14357, name: "__pyx_L5_argtuple_error", file: !21, line: 5749)
!14382 = !DILabel(scope: !14357, name: "__pyx_L6_skip", file: !21, line: 5751)
!14383 = !DILabel(scope: !14357, name: "__pyx_L3_error", file: !21, line: 5753)
!14384 = !DILocalVariable(name: "__pyx_temp", scope: !14385, file: !21, line: 5755, type: !34)
!14385 = distinct !DILexicalBlock(scope: !14357, file: !21, line: 5754, column: 3)
!14386 = !DILabel(scope: !14357, name: "__pyx_L4_argument_unpacking_done", file: !21, line: 5763)
!14387 = !DILocalVariable(name: "__pyx_temp", scope: !14388, file: !21, line: 5768, type: !34)
!14388 = distinct !DILexicalBlock(scope: !14357, file: !21, line: 5767, column: 3)
!14389 = !DILocation(line: 5660, column: 81, scope: !14357)
!14390 = !DILocation(line: 5662, column: 18, scope: !14357)
!14391 = !DILocation(line: 5662, column: 41, scope: !14357)
!14392 = !DILocation(line: 5662, column: 64, scope: !14357)
!14393 = !DILocation(line: 5667, column: 3, scope: !14357)
!14394 = !DILocation(line: 5667, column: 13, scope: !14357)
!14395 = !DILocation(line: 5668, column: 3, scope: !14357)
!14396 = !DILocation(line: 5668, column: 8, scope: !14357)
!14397 = !DILocation(line: 5669, column: 3, scope: !14357)
!14398 = !DILocation(line: 5669, column: 13, scope: !14357)
!14399 = !DILocation(line: 5673, column: 3, scope: !14357)
!14400 = !DILocation(line: 5673, column: 34, scope: !14357)
!14401 = !DILocation(line: 5674, column: 3, scope: !14357)
!14402 = !DILocation(line: 5674, column: 13, scope: !14357)
!14403 = !DILocation(line: 5675, column: 3, scope: !14357)
!14404 = !DILocation(line: 5675, column: 7, scope: !14357)
!14405 = !DILocation(line: 5676, column: 3, scope: !14357)
!14406 = !DILocation(line: 5676, column: 15, scope: !14357)
!14407 = !DILocation(line: 5677, column: 3, scope: !14357)
!14408 = !DILocation(line: 5677, column: 7, scope: !14357)
!14409 = !DILocation(line: 5678, column: 3, scope: !14357)
!14410 = !DILocation(line: 5678, column: 13, scope: !14357)
!14411 = !DILocation(line: 5688, column: 20, scope: !14357)
!14412 = !DILocation(line: 5688, column: 18, scope: !14357)
!14413 = !DILocation(line: 5690, column: 5, scope: !14373)
!14414 = !DILocation(line: 5690, column: 16, scope: !14373)
!14415 = !DILocation(line: 5690, column: 37, scope: !14373)
!14416 = !DILocation(line: 5690, column: 39, scope: !14373)
!14417 = !DILocation(line: 5690, column: 59, scope: !14373)
!14418 = !DILocation(line: 5690, column: 83, scope: !14373)
!14419 = !DILocation(line: 5691, column: 9, scope: !14377)
!14420 = !DILocation(line: 5691, column: 9, scope: !14373)
!14421 = !DILocation(line: 5692, column: 7, scope: !14376)
!14422 = !DILocation(line: 5692, column: 18, scope: !14376)
!14423 = !DILocation(line: 5693, column: 15, scope: !14376)
!14424 = !DILocation(line: 5693, column: 7, scope: !14376)
!14425 = !DILocation(line: 5694, column: 30, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14376, file: !21, line: 5693, column: 28)
!14427 = !DILocation(line: 5694, column: 18, scope: !14426)
!14428 = !DILocation(line: 5694, column: 28, scope: !14426)
!14429 = !DILocation(line: 5696, column: 30, scope: !14426)
!14430 = !DILocation(line: 5696, column: 18, scope: !14426)
!14431 = !DILocation(line: 5696, column: 28, scope: !14426)
!14432 = !DILocation(line: 5698, column: 30, scope: !14426)
!14433 = !DILocation(line: 5698, column: 18, scope: !14426)
!14434 = !DILocation(line: 5698, column: 28, scope: !14426)
!14435 = !DILocation(line: 5701, column: 18, scope: !14426)
!14436 = !DILocation(line: 5703, column: 17, scope: !14376)
!14437 = !DILocation(line: 5703, column: 15, scope: !14376)
!14438 = !DILocation(line: 5704, column: 15, scope: !14376)
!14439 = !DILocation(line: 5704, column: 7, scope: !14376)
!14440 = !DILocation(line: 5706, column: 13, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14442, file: !21, line: 5706, column: 13)
!14442 = distinct !DILexicalBlock(scope: !14376, file: !21, line: 5704, column: 28)
!14443 = !DILocation(line: 5706, column: 13, scope: !14442)
!14444 = !DILocation(line: 5707, column: 17, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14441, file: !21, line: 5706, column: 115)
!14446 = !DILocation(line: 5708, column: 18, scope: !14445)
!14447 = !DILocation(line: 5709, column: 9, scope: !14445)
!14448 = !DILocation(line: 5710, column: 18, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14441, file: !21, line: 5710, column: 18)
!14450 = !DILocation(line: 5710, column: 18, scope: !14441)
!14451 = !DILocation(line: 5710, column: 46, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14453, file: !21, line: 5710, column: 46)
!14453 = distinct !DILexicalBlock(scope: !14449, file: !21, line: 5710, column: 46)
!14454 = !DILocation(line: 5710, column: 46, scope: !14453)
!14455 = !DILocation(line: 5711, column: 14, scope: !14449)
!14456 = !DILocation(line: 5714, column: 13, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14442, file: !21, line: 5714, column: 13)
!14458 = !DILocation(line: 5714, column: 13, scope: !14442)
!14459 = !DILocation(line: 5715, column: 17, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14457, file: !21, line: 5714, column: 119)
!14461 = !DILocation(line: 5716, column: 18, scope: !14460)
!14462 = !DILocation(line: 5717, column: 9, scope: !14460)
!14463 = !DILocation(line: 5718, column: 18, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14457, file: !21, line: 5718, column: 18)
!14465 = !DILocation(line: 5718, column: 18, scope: !14457)
!14466 = !DILocation(line: 5718, column: 46, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14468, file: !21, line: 5718, column: 46)
!14468 = distinct !DILexicalBlock(scope: !14464, file: !21, line: 5718, column: 46)
!14469 = !DILocation(line: 5718, column: 46, scope: !14468)
!14470 = !DILocation(line: 5720, column: 11, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14464, file: !21, line: 5719, column: 14)
!14472 = !DILocation(line: 5720, column: 78, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14474, file: !21, line: 5720, column: 78)
!14474 = distinct !DILexicalBlock(scope: !14471, file: !21, line: 5720, column: 78)
!14475 = !DILocation(line: 5720, column: 78, scope: !14474)
!14476 = !DILocation(line: 5724, column: 13, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14442, file: !21, line: 5724, column: 13)
!14478 = !DILocation(line: 5724, column: 13, scope: !14442)
!14479 = !DILocation(line: 5725, column: 17, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14477, file: !21, line: 5724, column: 116)
!14481 = !DILocation(line: 5726, column: 18, scope: !14480)
!14482 = !DILocation(line: 5727, column: 9, scope: !14480)
!14483 = !DILocation(line: 5728, column: 18, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14477, file: !21, line: 5728, column: 18)
!14485 = !DILocation(line: 5728, column: 18, scope: !14477)
!14486 = !DILocation(line: 5728, column: 46, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14488, file: !21, line: 5728, column: 46)
!14488 = distinct !DILexicalBlock(scope: !14484, file: !21, line: 5728, column: 46)
!14489 = !DILocation(line: 5728, column: 46, scope: !14488)
!14490 = !DILocation(line: 5730, column: 11, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14484, file: !21, line: 5729, column: 14)
!14492 = !DILocation(line: 5730, column: 78, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !14494, file: !21, line: 5730, column: 78)
!14494 = distinct !DILexicalBlock(scope: !14491, file: !21, line: 5730, column: 78)
!14495 = !DILocation(line: 5730, column: 78, scope: !14494)
!14496 = !DILocation(line: 5732, column: 7, scope: !14442)
!14497 = !DILocation(line: 5733, column: 11, scope: !14380)
!14498 = !DILocation(line: 5733, column: 11, scope: !14376)
!14499 = !DILocation(line: 5734, column: 9, scope: !14379)
!14500 = !DILocation(line: 5734, column: 26, scope: !14379)
!14501 = !DILocation(line: 5734, column: 41, scope: !14379)
!14502 = !DILocation(line: 5735, column: 13, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14379, file: !21, line: 5735, column: 13)
!14504 = !DILocation(line: 5735, column: 13, scope: !14379)
!14505 = !DILocation(line: 5735, column: 158, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14507, file: !21, line: 5735, column: 158)
!14507 = distinct !DILexicalBlock(scope: !14503, file: !21, line: 5735, column: 158)
!14508 = !DILocation(line: 5735, column: 158, scope: !14507)
!14509 = !DILocation(line: 5736, column: 7, scope: !14380)
!14510 = !DILocation(line: 5736, column: 7, scope: !14379)
!14511 = !DILocation(line: 5737, column: 5, scope: !14377)
!14512 = !DILocation(line: 5737, column: 5, scope: !14376)
!14513 = !DILocation(line: 5737, column: 16, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14377, file: !21, line: 5737, column: 16)
!14515 = !DILocation(line: 5737, column: 16, scope: !14377)
!14516 = !DILocation(line: 5738, column: 7, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14514, file: !21, line: 5737, column: 44)
!14518 = !DILocation(line: 5740, column: 19, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14514, file: !21, line: 5739, column: 12)
!14520 = !DILocation(line: 5740, column: 7, scope: !14519)
!14521 = !DILocation(line: 5740, column: 17, scope: !14519)
!14522 = !DILocation(line: 5741, column: 19, scope: !14519)
!14523 = !DILocation(line: 5741, column: 7, scope: !14519)
!14524 = !DILocation(line: 5741, column: 17, scope: !14519)
!14525 = !DILocation(line: 5742, column: 19, scope: !14519)
!14526 = !DILocation(line: 5742, column: 7, scope: !14519)
!14527 = !DILocation(line: 5742, column: 17, scope: !14519)
!14528 = !DILocation(line: 5744, column: 26, scope: !14373)
!14529 = !DILocation(line: 5744, column: 24, scope: !14373)
!14530 = !DILocation(line: 5745, column: 50, scope: !14373)
!14531 = !DILocation(line: 5745, column: 30, scope: !14373)
!14532 = !DILocation(line: 5745, column: 28, scope: !14373)
!14533 = !DILocation(line: 5745, column: 66, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14373, file: !21, line: 5745, column: 66)
!14535 = !DILocation(line: 0, scope: !14534)
!14536 = !DILocation(line: 5745, column: 66, scope: !14373)
!14537 = !DILocation(line: 5745, column: 134, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14539, file: !21, line: 5745, column: 134)
!14539 = distinct !DILexicalBlock(scope: !14534, file: !21, line: 5745, column: 134)
!14540 = !DILocation(line: 5745, column: 134, scope: !14539)
!14541 = !DILocation(line: 5746, column: 27, scope: !14373)
!14542 = !DILocation(line: 5746, column: 25, scope: !14373)
!14543 = !DILocation(line: 5747, column: 3, scope: !14357)
!14544 = !DILocation(line: 5748, column: 3, scope: !14357)
!14545 = !DILocation(line: 5749, column: 3, scope: !14357)
!14546 = !DILocation(line: 5750, column: 66, scope: !14357)
!14547 = !DILocation(line: 5750, column: 3, scope: !14357)
!14548 = !DILocation(line: 5750, column: 80, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !21, line: 5750, column: 80)
!14550 = distinct !DILexicalBlock(scope: !14357, file: !21, line: 5750, column: 80)
!14551 = !DILocation(line: 5750, column: 80, scope: !14550)
!14552 = !DILocation(line: 5751, column: 3, scope: !14357)
!14553 = !DILocation(line: 5752, column: 3, scope: !14357)
!14554 = !DILocation(line: 5753, column: 3, scope: !14357)
!14555 = !DILocation(line: 5755, column: 5, scope: !14385)
!14556 = !DILocation(line: 5755, column: 16, scope: !14385)
!14557 = !DILocation(line: 5756, column: 20, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14385, file: !21, line: 5756, column: 5)
!14559 = !DILocation(line: 5756, column: 10, scope: !14558)
!14560 = !DILocation(line: 5756, column: 24, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14558, file: !21, line: 5756, column: 5)
!14562 = !DILocation(line: 5756, column: 35, scope: !14561)
!14563 = !DILocation(line: 5756, column: 5, scope: !14558)
!14564 = !DILocation(line: 5758, column: 5, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14561, file: !21, line: 5756, column: 99)
!14566 = !DILocation(line: 5756, column: 85, scope: !14561)
!14567 = !DILocation(line: 5756, column: 5, scope: !14561)
!14568 = distinct !{!14568, !14563, !14569, !4470}
!14569 = !DILocation(line: 5758, column: 5, scope: !14558)
!14570 = !DILocation(line: 5759, column: 3, scope: !14357)
!14571 = !DILocation(line: 5760, column: 65, scope: !14357)
!14572 = !DILocation(line: 5760, column: 80, scope: !14357)
!14573 = !DILocation(line: 5760, column: 94, scope: !14357)
!14574 = !DILocation(line: 5760, column: 3, scope: !14357)
!14575 = !DILocation(line: 5762, column: 3, scope: !14357)
!14576 = !DILocation(line: 5763, column: 3, scope: !14357)
!14577 = !DILocation(line: 5764, column: 66, scope: !14357)
!14578 = !DILocation(line: 5764, column: 78, scope: !14357)
!14579 = !DILocation(line: 5764, column: 98, scope: !14357)
!14580 = !DILocation(line: 5764, column: 122, scope: !14357)
!14581 = !DILocation(line: 5764, column: 13, scope: !14357)
!14582 = !DILocation(line: 5764, column: 11, scope: !14357)
!14583 = !DILocation(line: 5768, column: 5, scope: !14388)
!14584 = !DILocation(line: 5768, column: 16, scope: !14388)
!14585 = !DILocation(line: 5769, column: 20, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14388, file: !21, line: 5769, column: 5)
!14587 = !DILocation(line: 5769, column: 10, scope: !14586)
!14588 = !DILocation(line: 5769, column: 24, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14586, file: !21, line: 5769, column: 5)
!14590 = !DILocation(line: 5769, column: 35, scope: !14589)
!14591 = !DILocation(line: 5769, column: 5, scope: !14586)
!14592 = !DILocation(line: 5771, column: 5, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14589, file: !21, line: 5769, column: 99)
!14594 = !DILocation(line: 5769, column: 85, scope: !14589)
!14595 = !DILocation(line: 5769, column: 5, scope: !14589)
!14596 = distinct !{!14596, !14591, !14597, !4470}
!14597 = !DILocation(line: 5771, column: 5, scope: !14586)
!14598 = !DILocation(line: 5772, column: 3, scope: !14357)
!14599 = !DILocation(line: 5774, column: 10, scope: !14357)
!14600 = !DILocation(line: 5774, column: 3, scope: !14357)
!14601 = !DILocation(line: 5775, column: 1, scope: !14357)
!14602 = distinct !DISubprogram(name: "__Pyx_PyInt_As_long", scope: !21, file: !21, line: 11225, type: !14603, scopeLine: 11225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14605)
!14603 = !DISubroutineType(types: !14604)
!14604 = !{!40, !28}
!14605 = !{!14606, !14607, !14609, !14610, !14611, !14620, !14624, !14631, !14637, !14641, !14643, !14644, !14645}
!14606 = !DILocalVariable(name: "x", arg: 1, scope: !14602, file: !21, line: 11225, type: !28)
!14607 = !DILocalVariable(name: "neg_one", scope: !14602, file: !21, line: 11230, type: !14608)
!14608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!14609 = !DILocalVariable(name: "const_zero", scope: !14602, file: !21, line: 11230, type: !14608)
!14610 = !DILocalVariable(name: "is_unsigned", scope: !14602, file: !21, line: 11234, type: !9768)
!14611 = !DILocalVariable(name: "value", scope: !14612, file: !21, line: 11312, type: !14619)
!14612 = distinct !DILexicalBlock(scope: !14613, file: !21, line: 11312, column: 17)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !21, line: 11311, column: 44)
!14614 = distinct !DILexicalBlock(scope: !14615, file: !21, line: 11311, column: 17)
!14615 = distinct !DILexicalBlock(scope: !14616, file: !21, line: 11309, column: 16)
!14616 = distinct !DILexicalBlock(scope: !14617, file: !21, line: 11249, column: 13)
!14617 = distinct !DILexicalBlock(scope: !14618, file: !21, line: 11248, column: 34)
!14618 = distinct !DILexicalBlock(scope: !14602, file: !21, line: 11248, column: 9)
!14619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_compact_pylong", file: !21, line: 1348, baseType: !619)
!14620 = !DILocalVariable(name: "digits", scope: !14621, file: !21, line: 11314, type: !14622)
!14621 = distinct !DILexicalBlock(scope: !14614, file: !21, line: 11313, column: 20)
!14622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14623, size: 64)
!14623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !631)
!14624 = !DILocalVariable(name: "value", scope: !14625, file: !21, line: 11320, type: !40)
!14625 = distinct !DILexicalBlock(scope: !14626, file: !21, line: 11320, column: 33)
!14626 = distinct !DILexicalBlock(scope: !14627, file: !21, line: 11319, column: 81)
!14627 = distinct !DILexicalBlock(scope: !14628, file: !21, line: 11319, column: 33)
!14628 = distinct !DILexicalBlock(scope: !14629, file: !21, line: 11318, column: 72)
!14629 = distinct !DILexicalBlock(scope: !14630, file: !21, line: 11318, column: 29)
!14630 = distinct !DILexicalBlock(scope: !14621, file: !21, line: 11316, column: 59)
!14631 = !DILocalVariable(name: "value", scope: !14632, file: !21, line: 11329, type: !238)
!14632 = distinct !DILexicalBlock(scope: !14633, file: !21, line: 11329, column: 33)
!14633 = distinct !DILexicalBlock(scope: !14634, file: !21, line: 11328, column: 81)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !21, line: 11328, column: 33)
!14635 = distinct !DILexicalBlock(scope: !14636, file: !21, line: 11327, column: 68)
!14636 = distinct !DILexicalBlock(scope: !14630, file: !21, line: 11327, column: 29)
!14637 = !DILocalVariable(name: "value", scope: !14638, file: !21, line: 11375, type: !40)
!14638 = distinct !DILexicalBlock(scope: !14639, file: !21, line: 11375, column: 17)
!14639 = distinct !DILexicalBlock(scope: !14640, file: !21, line: 11374, column: 49)
!14640 = distinct !DILexicalBlock(scope: !14615, file: !21, line: 11374, column: 17)
!14641 = !DILocalVariable(name: "val", scope: !14642, file: !21, line: 11480, type: !40)
!14642 = distinct !DILexicalBlock(scope: !14618, file: !21, line: 11479, column: 12)
!14643 = !DILocalVariable(name: "tmp", scope: !14642, file: !21, line: 11481, type: !28)
!14644 = !DILabel(scope: !14602, name: "raise_overflow", file: !21, line: 11487)
!14645 = !DILabel(scope: !14602, name: "raise_neg_overflow", file: !21, line: 11491)
!14646 = !DILocation(line: 11225, column: 57, scope: !14602)
!14647 = !DILocation(line: 11230, column: 5, scope: !14602)
!14648 = !DILocation(line: 11230, column: 16, scope: !14602)
!14649 = !DILocation(line: 11230, column: 37, scope: !14602)
!14650 = !DILocation(line: 11234, column: 5, scope: !14602)
!14651 = !DILocation(line: 11234, column: 15, scope: !14602)
!14652 = !DILocation(line: 11248, column: 9, scope: !14618)
!14653 = !DILocation(line: 11248, column: 9, scope: !14602)
!14654 = !DILocation(line: 11311, column: 17, scope: !14614)
!14655 = !DILocation(line: 11311, column: 17, scope: !14615)
!14656 = !DILocation(line: 11312, column: 17, scope: !14612)
!14657 = !DILocation(line: 11312, column: 17, scope: !14613)
!14658 = !DILocation(line: 11314, column: 17, scope: !14621)
!14659 = !DILocation(line: 11314, column: 30, scope: !14621)
!14660 = !DILocation(line: 11314, column: 39, scope: !14621)
!14661 = !DILocation(line: 11316, column: 25, scope: !14621)
!14662 = !DILocation(line: 11316, column: 17, scope: !14621)
!14663 = !DILocation(line: 11320, column: 33, scope: !14625)
!14664 = !DILocation(line: 11320, column: 33, scope: !14626)
!14665 = !DILocation(line: 11329, column: 33, scope: !14632)
!14666 = !DILocation(line: 11329, column: 33, scope: !14633)
!14667 = !DILocation(line: 11343, column: 25, scope: !14630)
!14668 = !DILocation(line: 11352, column: 25, scope: !14630)
!14669 = !DILocation(line: 11361, column: 25, scope: !14630)
!14670 = !DILocation(line: 11370, column: 25, scope: !14630)
!14671 = !DILocation(line: 11372, column: 13, scope: !14614)
!14672 = !DILocation(line: 11375, column: 17, scope: !14638)
!14673 = !DILocation(line: 11375, column: 17, scope: !14639)
!14674 = !DILocation(line: 11480, column: 9, scope: !14642)
!14675 = !DILocation(line: 11480, column: 14, scope: !14642)
!14676 = !DILocation(line: 11481, column: 9, scope: !14642)
!14677 = !DILocation(line: 11481, column: 19, scope: !14642)
!14678 = !DILocation(line: 11481, column: 50, scope: !14642)
!14679 = !DILocation(line: 11481, column: 25, scope: !14642)
!14680 = !DILocation(line: 11482, column: 14, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14642, file: !21, line: 11482, column: 13)
!14682 = !DILocation(line: 11482, column: 13, scope: !14642)
!14683 = !DILocation(line: 11482, column: 19, scope: !14681)
!14684 = !DILocation(line: 11483, column: 35, scope: !14642)
!14685 = !DILocation(line: 11483, column: 15, scope: !14642)
!14686 = !DILocation(line: 11483, column: 13, scope: !14642)
!14687 = !DILocation(line: 11484, column: 9, scope: !14642)
!14688 = !DILocation(line: 11485, column: 16, scope: !14642)
!14689 = !DILocation(line: 11485, column: 9, scope: !14642)
!14690 = !DILocation(line: 11486, column: 5, scope: !14618)
!14691 = !DILocation(line: 11487, column: 1, scope: !14602)
!14692 = !DILocation(line: 11488, column: 21, scope: !14602)
!14693 = !DILocation(line: 11488, column: 5, scope: !14602)
!14694 = !DILocation(line: 11490, column: 5, scope: !14602)
!14695 = !DILocation(line: 11491, column: 1, scope: !14602)
!14696 = !DILocation(line: 11492, column: 21, scope: !14602)
!14697 = !DILocation(line: 11492, column: 5, scope: !14602)
!14698 = !DILocation(line: 11494, column: 5, scope: !14602)
!14699 = !DILocation(line: 11495, column: 1, scope: !14602)
!14700 = distinct !DISubprogram(name: "__pyx_pf_6Cython_4Plex_3DFA_2__pyx_unpickle_StateMap", scope: !21, file: !21, line: 5777, type: !14701, scopeLine: 5777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14703)
!14701 = !DISubroutineType(types: !14702)
!14702 = !{!28, !28, !28, !40, !28}
!14703 = !{!14704, !14705, !14706, !14707, !14708, !14709, !14710, !14711, !14712, !14713, !14714, !14715, !14716, !14717, !14718, !14719, !14724, !14726, !14728, !14729}
!14704 = !DILocalVariable(name: "__pyx_self", arg: 1, scope: !14700, file: !21, line: 5777, type: !28)
!14705 = !DILocalVariable(name: "__pyx_v___pyx_type", arg: 2, scope: !14700, file: !21, line: 5777, type: !28)
!14706 = !DILocalVariable(name: "__pyx_v___pyx_checksum", arg: 3, scope: !14700, file: !21, line: 5777, type: !40)
!14707 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 4, scope: !14700, file: !21, line: 5777, type: !28)
!14708 = !DILocalVariable(name: "__pyx_v___pyx_PickleError", scope: !14700, file: !21, line: 5778, type: !28)
!14709 = !DILocalVariable(name: "__pyx_v___pyx_result", scope: !14700, file: !21, line: 5779, type: !28)
!14710 = !DILocalVariable(name: "__pyx_r", scope: !14700, file: !21, line: 5780, type: !28)
!14711 = !DILocalVariable(name: "__pyx_t_1", scope: !14700, file: !21, line: 5782, type: !28)
!14712 = !DILocalVariable(name: "__pyx_t_2", scope: !14700, file: !21, line: 5783, type: !7)
!14713 = !DILocalVariable(name: "__pyx_t_3", scope: !14700, file: !21, line: 5784, type: !28)
!14714 = !DILocalVariable(name: "__pyx_t_4", scope: !14700, file: !21, line: 5785, type: !28)
!14715 = !DILocalVariable(name: "__pyx_t_5", scope: !14700, file: !21, line: 5786, type: !7)
!14716 = !DILocalVariable(name: "__pyx_lineno", scope: !14700, file: !21, line: 5787, type: !7)
!14717 = !DILocalVariable(name: "__pyx_filename", scope: !14700, file: !21, line: 5788, type: !54)
!14718 = !DILocalVariable(name: "__pyx_clineno", scope: !14700, file: !21, line: 5789, type: !7)
!14719 = !DILocalVariable(name: "function", scope: !14720, file: !21, line: 5867, type: !28)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !21, line: 5866, column: 28)
!14721 = distinct !DILexicalBlock(scope: !14722, file: !21, line: 5866, column: 9)
!14722 = distinct !DILexicalBlock(scope: !14723, file: !21, line: 5864, column: 42)
!14723 = distinct !DILexicalBlock(scope: !14700, file: !21, line: 5864, column: 7)
!14724 = !DILocalVariable(name: "tmp", scope: !14725, file: !21, line: 5870, type: !28)
!14725 = distinct !DILexicalBlock(scope: !14720, file: !21, line: 5870, column: 7)
!14726 = !DILocalVariable(name: "__pyx_callargs", scope: !14727, file: !21, line: 5876, type: !6663)
!14727 = distinct !DILexicalBlock(scope: !14700, file: !21, line: 5875, column: 3)
!14728 = !DILabel(scope: !14700, name: "__pyx_L1_error", file: !21, line: 5936)
!14729 = !DILabel(scope: !14700, name: "__pyx_L0", file: !21, line: 5942)
!14730 = !DILocation(line: 5777, column: 95, scope: !14700)
!14731 = !DILocation(line: 5777, column: 117, scope: !14700)
!14732 = !DILocation(line: 5777, column: 142, scope: !14700)
!14733 = !DILocation(line: 5777, column: 176, scope: !14700)
!14734 = !DILocation(line: 5778, column: 3, scope: !14700)
!14735 = !DILocation(line: 5778, column: 13, scope: !14700)
!14736 = !DILocation(line: 5779, column: 3, scope: !14700)
!14737 = !DILocation(line: 5779, column: 13, scope: !14700)
!14738 = !DILocation(line: 5780, column: 3, scope: !14700)
!14739 = !DILocation(line: 5780, column: 13, scope: !14700)
!14740 = !DILocation(line: 5782, column: 3, scope: !14700)
!14741 = !DILocation(line: 5782, column: 13, scope: !14700)
!14742 = !DILocation(line: 5783, column: 3, scope: !14700)
!14743 = !DILocation(line: 5783, column: 7, scope: !14700)
!14744 = !DILocation(line: 5784, column: 3, scope: !14700)
!14745 = !DILocation(line: 5784, column: 13, scope: !14700)
!14746 = !DILocation(line: 5785, column: 3, scope: !14700)
!14747 = !DILocation(line: 5785, column: 13, scope: !14700)
!14748 = !DILocation(line: 5786, column: 3, scope: !14700)
!14749 = !DILocation(line: 5786, column: 7, scope: !14700)
!14750 = !DILocation(line: 5787, column: 3, scope: !14700)
!14751 = !DILocation(line: 5787, column: 7, scope: !14700)
!14752 = !DILocation(line: 5788, column: 3, scope: !14700)
!14753 = !DILocation(line: 5788, column: 15, scope: !14700)
!14754 = !DILocation(line: 5789, column: 3, scope: !14700)
!14755 = !DILocation(line: 5789, column: 7, scope: !14700)
!14756 = !DILocation(line: 5799, column: 37, scope: !14700)
!14757 = !DILocation(line: 5799, column: 15, scope: !14700)
!14758 = !DILocation(line: 5799, column: 13, scope: !14700)
!14759 = !DILocation(line: 5799, column: 66, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14700, file: !21, line: 5799, column: 66)
!14761 = !DILocation(line: 5799, column: 66, scope: !14700)
!14762 = !DILocation(line: 5799, column: 88, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14764, file: !21, line: 5799, column: 88)
!14764 = distinct !DILexicalBlock(scope: !14760, file: !21, line: 5799, column: 88)
!14765 = !DILocation(line: 5799, column: 88, scope: !14764)
!14766 = !DILocation(line: 5801, column: 44, scope: !14700)
!14767 = !DILocation(line: 5801, column: 55, scope: !14700)
!14768 = !DILocation(line: 5801, column: 16, scope: !14700)
!14769 = !DILocation(line: 5801, column: 13, scope: !14700)
!14770 = !DILocation(line: 5801, column: 84, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14700, file: !21, line: 5801, column: 84)
!14772 = !DILocation(line: 5801, column: 84, scope: !14700)
!14773 = !DILocation(line: 5801, column: 111, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14775, file: !21, line: 5801, column: 111)
!14775 = distinct !DILexicalBlock(scope: !14771, file: !21, line: 5801, column: 111)
!14776 = !DILocation(line: 5801, column: 111, scope: !14775)
!14777 = !DILocation(line: 5802, column: 3, scope: !14700)
!14778 = !DILocation(line: 5802, column: 38, scope: !14700)
!14779 = !DILocation(line: 5803, column: 7, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14700, file: !21, line: 5803, column: 7)
!14781 = !DILocation(line: 5803, column: 7, scope: !14700)
!14782 = !DILocation(line: 5812, column: 17, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14780, file: !21, line: 5803, column: 18)
!14784 = !DILocation(line: 5812, column: 15, scope: !14783)
!14785 = !DILocation(line: 5812, column: 36, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14783, file: !21, line: 5812, column: 36)
!14787 = !DILocation(line: 5812, column: 36, scope: !14783)
!14788 = !DILocation(line: 5812, column: 58, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14790, file: !21, line: 5812, column: 58)
!14790 = distinct !DILexicalBlock(scope: !14786, file: !21, line: 5812, column: 58)
!14791 = !DILocation(line: 5812, column: 58, scope: !14790)
!14792 = !DILocation(line: 5814, column: 5, scope: !14783)
!14793 = !{!2020, !1900, i64 200}
!14794 = !DILocation(line: 5816, column: 9, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14783, file: !21, line: 5816, column: 9)
!14796 = !DILocation(line: 5816, column: 9, scope: !14783)
!14797 = !DILocation(line: 5816, column: 69, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14799, file: !21, line: 5816, column: 69)
!14799 = distinct !DILexicalBlock(scope: !14795, file: !21, line: 5816, column: 69)
!14800 = !DILocation(line: 5816, column: 69, scope: !14799)
!14801 = !DILocation(line: 5817, column: 30, scope: !14783)
!14802 = !{!2020, !1900, i64 552}
!14803 = !DILocation(line: 5817, column: 48, scope: !14783)
!14804 = !DILocation(line: 5817, column: 17, scope: !14783)
!14805 = !DILocation(line: 5817, column: 15, scope: !14783)
!14806 = !DILocation(line: 5817, column: 67, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14783, file: !21, line: 5817, column: 67)
!14808 = !DILocation(line: 5817, column: 67, scope: !14783)
!14809 = !DILocation(line: 5817, column: 89, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14811, file: !21, line: 5817, column: 89)
!14811 = distinct !DILexicalBlock(scope: !14807, file: !21, line: 5817, column: 89)
!14812 = !DILocation(line: 5817, column: 89, scope: !14811)
!14813 = !DILocation(line: 5819, column: 5, scope: !14783)
!14814 = !DILocation(line: 5819, column: 40, scope: !14783)
!14815 = !DILocation(line: 5820, column: 34, scope: !14783)
!14816 = !DILocation(line: 5820, column: 45, scope: !14783)
!14817 = !DILocation(line: 5820, column: 17, scope: !14783)
!14818 = !DILocation(line: 5820, column: 15, scope: !14783)
!14819 = !DILocation(line: 5820, column: 73, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14783, file: !21, line: 5820, column: 73)
!14821 = !DILocation(line: 5820, column: 73, scope: !14783)
!14822 = !DILocation(line: 5820, column: 95, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14824, file: !21, line: 5820, column: 95)
!14824 = distinct !DILexicalBlock(scope: !14820, file: !21, line: 5820, column: 95)
!14825 = !DILocation(line: 5820, column: 95, scope: !14824)
!14826 = !DILocation(line: 5822, column: 5, scope: !14783)
!14827 = !DILocation(line: 5823, column: 33, scope: !14783)
!14828 = !DILocation(line: 5823, column: 31, scope: !14783)
!14829 = !DILocation(line: 5824, column: 5, scope: !14783)
!14830 = !DILocation(line: 5824, column: 40, scope: !14783)
!14831 = !DILocation(line: 5825, column: 5, scope: !14783)
!14832 = !DILocation(line: 5825, column: 40, scope: !14783)
!14833 = !DILocation(line: 5834, column: 39, scope: !14783)
!14834 = !DILocation(line: 5834, column: 17, scope: !14783)
!14835 = !DILocation(line: 5834, column: 15, scope: !14783)
!14836 = !DILocation(line: 5834, column: 68, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14783, file: !21, line: 5834, column: 68)
!14838 = !DILocation(line: 5834, column: 68, scope: !14783)
!14839 = !DILocation(line: 5834, column: 90, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14841, file: !21, line: 5834, column: 90)
!14841 = distinct !DILexicalBlock(scope: !14837, file: !21, line: 5834, column: 90)
!14842 = !DILocation(line: 5834, column: 90, scope: !14841)
!14843 = !DILocation(line: 5836, column: 17, scope: !14783)
!14844 = !{!2020, !1900, i64 176}
!14845 = !DILocation(line: 5836, column: 15, scope: !14783)
!14846 = !DILocation(line: 5836, column: 100, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14783, file: !21, line: 5836, column: 100)
!14848 = !DILocation(line: 5836, column: 100, scope: !14783)
!14849 = !DILocation(line: 5836, column: 122, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14851, file: !21, line: 5836, column: 122)
!14851 = distinct !DILexicalBlock(scope: !14847, file: !21, line: 5836, column: 122)
!14852 = !DILocation(line: 5836, column: 122, scope: !14851)
!14853 = !DILocation(line: 5838, column: 5, scope: !14783)
!14854 = !DILocation(line: 5838, column: 40, scope: !14783)
!14855 = !DILocation(line: 5839, column: 17, scope: !14783)
!14856 = !DILocation(line: 5839, column: 44, scope: !14783)
!14857 = !DILocation(line: 5839, column: 5, scope: !14783)
!14858 = !DILocation(line: 5840, column: 5, scope: !14783)
!14859 = !DILocation(line: 5840, column: 40, scope: !14783)
!14860 = !DILocation(line: 5841, column: 5, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !21, line: 5841, column: 5)
!14862 = distinct !DILexicalBlock(scope: !14783, file: !21, line: 5841, column: 5)
!14863 = !DILocation(line: 5841, column: 5, scope: !14862)
!14864 = !DILocation(line: 5859, column: 54, scope: !14700)
!14865 = !DILocation(line: 5859, column: 96, scope: !14700)
!14866 = !{!2020, !1900, i64 488}
!14867 = !DILocation(line: 5859, column: 15, scope: !14700)
!14868 = !DILocation(line: 5859, column: 13, scope: !14700)
!14869 = !DILocation(line: 5859, column: 116, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14700, file: !21, line: 5859, column: 116)
!14871 = !DILocation(line: 5859, column: 116, scope: !14700)
!14872 = !DILocation(line: 5859, column: 138, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14874, file: !21, line: 5859, column: 138)
!14874 = distinct !DILexicalBlock(scope: !14870, file: !21, line: 5859, column: 138)
!14875 = !DILocation(line: 5859, column: 138, scope: !14874)
!14876 = !DILocation(line: 5861, column: 13, scope: !14700)
!14877 = !DILocation(line: 5862, column: 13, scope: !14700)
!14878 = !DILocation(line: 5864, column: 7, scope: !14723)
!14879 = !DILocation(line: 5864, column: 7, scope: !14700)
!14880 = !DILocation(line: 5865, column: 17, scope: !14722)
!14881 = !DILocation(line: 5865, column: 15, scope: !14722)
!14882 = !DILocation(line: 5866, column: 9, scope: !14721)
!14883 = !DILocation(line: 5866, column: 9, scope: !14722)
!14884 = !DILocation(line: 5867, column: 7, scope: !14720)
!14885 = !DILocation(line: 5867, column: 17, scope: !14720)
!14886 = !DILocation(line: 5867, column: 28, scope: !14720)
!14887 = !DILocation(line: 5868, column: 7, scope: !14720)
!14888 = !DILocation(line: 5869, column: 7, scope: !14720)
!14889 = !DILocation(line: 5870, column: 7, scope: !14720)
!14890 = !DILocation(line: 5870, column: 7, scope: !14725)
!14891 = !DILocation(line: 5871, column: 17, scope: !14720)
!14892 = !DILocation(line: 5872, column: 5, scope: !14721)
!14893 = !DILocation(line: 5872, column: 5, scope: !14720)
!14894 = !DILocation(line: 5873, column: 3, scope: !14722)
!14895 = !DILocation(line: 5876, column: 5, scope: !14727)
!14896 = !DILocation(line: 5876, column: 15, scope: !14727)
!14897 = !DILocation(line: 5876, column: 35, scope: !14727)
!14898 = !DILocation(line: 5876, column: 36, scope: !14727)
!14899 = !DILocation(line: 5876, column: 47, scope: !14727)
!14900 = !DILocation(line: 5877, column: 17, scope: !14727)
!14901 = !DILocation(line: 5877, column: 15, scope: !14727)
!14902 = !DILocation(line: 5878, column: 5, scope: !14727)
!14903 = !DILocation(line: 5878, column: 41, scope: !14727)
!14904 = !DILocation(line: 5879, column: 9, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14727, file: !21, line: 5879, column: 9)
!14906 = !DILocation(line: 5879, column: 9, scope: !14727)
!14907 = !DILocation(line: 5879, column: 31, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14909, file: !21, line: 5879, column: 31)
!14909 = distinct !DILexicalBlock(scope: !14905, file: !21, line: 5879, column: 31)
!14910 = !DILocation(line: 5879, column: 31, scope: !14909)
!14911 = !DILocation(line: 5881, column: 5, scope: !14727)
!14912 = !DILocation(line: 5881, column: 40, scope: !14727)
!14913 = !DILocation(line: 5882, column: 3, scope: !14700)
!14914 = !DILocation(line: 5883, column: 26, scope: !14700)
!14915 = !DILocation(line: 5883, column: 24, scope: !14700)
!14916 = !DILocation(line: 5884, column: 13, scope: !14700)
!14917 = !DILocation(line: 5893, column: 16, scope: !14700)
!14918 = !DILocation(line: 5893, column: 36, scope: !14700)
!14919 = !DILocation(line: 5893, column: 13, scope: !14700)
!14920 = !DILocation(line: 5894, column: 7, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14700, file: !21, line: 5894, column: 7)
!14922 = !DILocation(line: 5894, column: 7, scope: !14700)
!14923 = !DILocation(line: 5903, column: 11, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14925, file: !21, line: 5903, column: 9)
!14925 = distinct !DILexicalBlock(scope: !14921, file: !21, line: 5894, column: 18)
!14926 = !DILocation(line: 5903, column: 58, scope: !14924)
!14927 = !DILocation(line: 5903, column: 62, scope: !14924)
!14928 = !DILocation(line: 5903, column: 83, scope: !14924)
!14929 = !DILocation(line: 5903, column: 95, scope: !14924)
!14930 = !DILocation(line: 5903, column: 138, scope: !14924)
!14931 = !DILocation(line: 5903, column: 98, scope: !14924)
!14932 = !DILocation(line: 5903, column: 9, scope: !14925)
!14933 = !DILocation(line: 5903, column: 161, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !21, line: 5903, column: 161)
!14935 = distinct !DILexicalBlock(scope: !14924, file: !21, line: 5903, column: 161)
!14936 = !DILocation(line: 5903, column: 161, scope: !14935)
!14937 = !DILocation(line: 5904, column: 128, scope: !14925)
!14938 = !DILocation(line: 5904, column: 163, scope: !14925)
!14939 = !DILocation(line: 5904, column: 17, scope: !14925)
!14940 = !DILocation(line: 5904, column: 15, scope: !14925)
!14941 = !DILocation(line: 5904, column: 190, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14925, file: !21, line: 5904, column: 190)
!14943 = !DILocation(line: 5904, column: 190, scope: !14925)
!14944 = !DILocation(line: 5904, column: 212, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14946, file: !21, line: 5904, column: 212)
!14946 = distinct !DILexicalBlock(scope: !14942, file: !21, line: 5904, column: 212)
!14947 = !DILocation(line: 5904, column: 212, scope: !14946)
!14948 = !DILocation(line: 5906, column: 5, scope: !14925)
!14949 = !DILocation(line: 5906, column: 40, scope: !14925)
!14950 = !DILocation(line: 5915, column: 3, scope: !14925)
!14951 = !DILocation(line: 5924, column: 3, scope: !14700)
!14952 = !DILocation(line: 5925, column: 3, scope: !14700)
!14953 = !DILocation(line: 5926, column: 13, scope: !14700)
!14954 = !DILocation(line: 5926, column: 11, scope: !14700)
!14955 = !DILocation(line: 5927, column: 3, scope: !14700)
!14956 = !DILocation(line: 5936, column: 3, scope: !14700)
!14957 = !DILocation(line: 5937, column: 3, scope: !14700)
!14958 = !DILocation(line: 5938, column: 3, scope: !14700)
!14959 = !DILocation(line: 5939, column: 3, scope: !14700)
!14960 = !DILocation(line: 5940, column: 65, scope: !14700)
!14961 = !DILocation(line: 5940, column: 80, scope: !14700)
!14962 = !DILocation(line: 5940, column: 94, scope: !14700)
!14963 = !DILocation(line: 5940, column: 3, scope: !14700)
!14964 = !DILocation(line: 5941, column: 11, scope: !14700)
!14965 = !DILocation(line: 5941, column: 3, scope: !14700)
!14966 = !DILocation(line: 5942, column: 3, scope: !14700)
!14967 = !DILocation(line: 5943, column: 3, scope: !14700)
!14968 = !DILocation(line: 5944, column: 3, scope: !14700)
!14969 = !DILocation(line: 5947, column: 10, scope: !14700)
!14970 = !DILocation(line: 5947, column: 3, scope: !14700)
!14971 = !DILocation(line: 5948, column: 1, scope: !14700)
!14972 = !DISubprogram(name: "PyLong_AsLong", scope: !5839, file: !5839, line: 21, type: !14603, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14973 = distinct !DISubprogram(name: "__Pyx_PyNumber_IntOrLong", scope: !21, file: !21, line: 12306, type: !84, scopeLine: 12306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14974)
!14974 = !{!14975, !14976, !14977, !14978}
!14975 = !DILocalVariable(name: "x", arg: 1, scope: !14973, file: !21, line: 12306, type: !28)
!14976 = !DILocalVariable(name: "m", scope: !14973, file: !21, line: 12308, type: !98)
!14977 = !DILocalVariable(name: "name", scope: !14973, file: !21, line: 12310, type: !54)
!14978 = !DILocalVariable(name: "res", scope: !14973, file: !21, line: 12311, type: !28)
!14979 = !DILocation(line: 12306, column: 67, scope: !14973)
!14980 = !DILocation(line: 12308, column: 3, scope: !14973)
!14981 = !DILocation(line: 12308, column: 20, scope: !14973)
!14982 = !DILocation(line: 12310, column: 3, scope: !14973)
!14983 = !DILocation(line: 12310, column: 15, scope: !14973)
!14984 = !DILocation(line: 12311, column: 3, scope: !14973)
!14985 = !DILocation(line: 12311, column: 13, scope: !14973)
!14986 = !DILocation(line: 12315, column: 7, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14973, file: !21, line: 12315, column: 7)
!14988 = !DILocation(line: 12315, column: 7, scope: !14973)
!14989 = !DILocation(line: 12317, column: 12, scope: !14987)
!14990 = !DILocation(line: 12317, column: 5, scope: !14987)
!14991 = !DILocation(line: 12319, column: 7, scope: !14973)
!14992 = !DILocation(line: 12319, column: 19, scope: !14973)
!14993 = !{!2421, !1900, i64 96}
!14994 = !DILocation(line: 12319, column: 5, scope: !14973)
!14995 = !DILocation(line: 12330, column: 7, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14973, file: !21, line: 12330, column: 7)
!14997 = !{!14998, !1900, i64 128}
!14998 = !{!"", !1900, i64 0, !1900, i64 8, !1900, i64 16, !1900, i64 24, !1900, i64 32, !1900, i64 40, !1900, i64 48, !1900, i64 56, !1900, i64 64, !1900, i64 72, !1900, i64 80, !1900, i64 88, !1900, i64 96, !1900, i64 104, !1900, i64 112, !1900, i64 120, !1900, i64 128, !1900, i64 136, !1900, i64 144, !1900, i64 152, !1900, i64 160, !1900, i64 168, !1900, i64 176, !1900, i64 184, !1900, i64 192, !1900, i64 200, !1900, i64 208, !1900, i64 216, !1900, i64 224, !1900, i64 232, !1900, i64 240, !1900, i64 248, !1900, i64 256, !1900, i64 264, !1900, i64 272, !1900, i64 280}
!14999 = !DILocation(line: 0, scope: !14996)
!15000 = !DILocation(line: 12330, column: 7, scope: !14973)
!15001 = !DILocation(line: 12331, column: 10, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14996, file: !21, line: 12330, column: 31)
!15003 = !DILocation(line: 12332, column: 11, scope: !15002)
!15004 = !DILocation(line: 12332, column: 14, scope: !15002)
!15005 = !DILocation(line: 12332, column: 21, scope: !15002)
!15006 = !DILocation(line: 12332, column: 9, scope: !15002)
!15007 = !DILocation(line: 12333, column: 3, scope: !15002)
!15008 = !DILocation(line: 12340, column: 7, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !14973, file: !21, line: 12340, column: 7)
!15010 = !DILocation(line: 12340, column: 7, scope: !14973)
!15011 = !DILocation(line: 12344, column: 9, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !21, line: 12344, column: 9)
!15013 = distinct !DILexicalBlock(scope: !15009, file: !21, line: 12340, column: 20)
!15014 = !DILocation(line: 12344, column: 9, scope: !15013)
!15015 = !DILocation(line: 12346, column: 56, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15012, file: !21, line: 12344, column: 44)
!15017 = !DILocation(line: 12346, column: 61, scope: !15016)
!15018 = !DILocation(line: 12346, column: 16, scope: !15016)
!15019 = !DILocation(line: 12346, column: 9, scope: !15016)
!15020 = !DILocation(line: 12348, column: 3, scope: !15013)
!15021 = !DILocation(line: 12349, column: 13, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15009, file: !21, line: 12349, column: 12)
!15023 = !DILocation(line: 12349, column: 12, scope: !15009)
!15024 = !DILocation(line: 12350, column: 21, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15022, file: !21, line: 12349, column: 31)
!15026 = !DILocation(line: 12350, column: 5, scope: !15025)
!15027 = !DILocation(line: 12352, column: 3, scope: !15025)
!15028 = !DILocation(line: 12353, column: 10, scope: !14973)
!15029 = !DILocation(line: 12353, column: 3, scope: !14973)
!15030 = !DILocation(line: 12354, column: 1, scope: !14973)
!15031 = distinct !DISubprogram(name: "__Pyx_PyNumber_IntOrLongWrongResultType", scope: !21, file: !21, line: 12282, type: !2627, scopeLine: 12282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15032)
!15032 = !{!15033, !15034, !15035}
!15033 = !DILocalVariable(name: "result", arg: 1, scope: !15031, file: !21, line: 12282, type: !28)
!15034 = !DILocalVariable(name: "type_name", arg: 2, scope: !15031, file: !21, line: 12282, type: !54)
!15035 = !DILocalVariable(name: "result_type_name", scope: !15031, file: !21, line: 12283, type: !8500)
!15036 = !DILocation(line: 12282, column: 68, scope: !15031)
!15037 = !DILocation(line: 12282, column: 88, scope: !15031)
!15038 = !DILocation(line: 12283, column: 5, scope: !15031)
!15039 = !DILocation(line: 12283, column: 20, scope: !15031)
!15040 = !DILocation(line: 12283, column: 39, scope: !15031)
!15041 = !DILocation(line: 12285, column: 9, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15031, file: !21, line: 12285, column: 9)
!15043 = !DILocation(line: 12285, column: 9, scope: !15031)
!15044 = !DILocation(line: 12286, column: 30, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15046, file: !21, line: 12286, column: 13)
!15046 = distinct !DILexicalBlock(scope: !15042, file: !21, line: 12285, column: 31)
!15047 = !DILocation(line: 12290, column: 17, scope: !15045)
!15048 = !DILocation(line: 12286, column: 13, scope: !15045)
!15049 = !DILocation(line: 12286, column: 13, scope: !15046)
!15050 = !DILocation(line: 12292, column: 13, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15045, file: !21, line: 12290, column: 36)
!15052 = !DILocation(line: 12293, column: 13, scope: !15051)
!15053 = !DILocation(line: 12296, column: 16, scope: !15046)
!15054 = !DILocation(line: 12296, column: 9, scope: !15046)
!15055 = !DILocation(line: 12299, column: 18, scope: !15031)
!15056 = !DILocation(line: 12301, column: 18, scope: !15031)
!15057 = !DILocation(line: 12301, column: 29, scope: !15031)
!15058 = !DILocation(line: 12301, column: 40, scope: !15031)
!15059 = !DILocation(line: 12299, column: 5, scope: !15031)
!15060 = !DILocation(line: 12303, column: 5, scope: !15031)
!15061 = !DILocation(line: 12304, column: 5, scope: !15031)
!15062 = !DILocation(line: 12305, column: 1, scope: !15031)
!15063 = !DISubprogram(name: "PyErr_WarnFormat", scope: !3993, file: !3993, line: 12, type: !15064, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{!7, !28, !34, !54, null}
!15066 = distinct !DISubprogram(name: "__Pyx_PyInt_From_long", scope: !21, file: !21, line: 11560, type: !5655, scopeLine: 11560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15067)
!15067 = !{!15068, !15069, !15070, !15071}
!15068 = !DILocalVariable(name: "value", arg: 1, scope: !15066, file: !21, line: 11560, type: !40)
!15069 = !DILocalVariable(name: "neg_one", scope: !15066, file: !21, line: 11565, type: !14608)
!15070 = !DILocalVariable(name: "const_zero", scope: !15066, file: !21, line: 11565, type: !14608)
!15071 = !DILocalVariable(name: "is_unsigned", scope: !15066, file: !21, line: 11569, type: !9768)
!15072 = !DILocation(line: 11560, column: 59, scope: !15066)
!15073 = !DILocation(line: 11565, column: 5, scope: !15066)
!15074 = !DILocation(line: 11565, column: 16, scope: !15066)
!15075 = !DILocation(line: 11565, column: 37, scope: !15066)
!15076 = !DILocation(line: 11569, column: 5, scope: !15066)
!15077 = !DILocation(line: 11569, column: 15, scope: !15066)
!15078 = !DILocation(line: 11582, column: 42, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15080, file: !21, line: 11581, column: 43)
!15080 = distinct !DILexicalBlock(scope: !15081, file: !21, line: 11581, column: 13)
!15081 = distinct !DILexicalBlock(scope: !15082, file: !21, line: 11580, column: 12)
!15082 = distinct !DILexicalBlock(scope: !15066, file: !21, line: 11570, column: 9)
!15083 = !DILocation(line: 11582, column: 20, scope: !15079)
!15084 = !DILocation(line: 11619, column: 1, scope: !15066)
!15085 = !DILocation(line: 11582, column: 13, scope: !15079)
!15086 = distinct !DISubprogram(name: "__Pyx_PySequence_ContainsTF", scope: !21, file: !21, line: 2249, type: !13096, scopeLine: 2249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15087)
!15087 = !{!15088, !15089, !15090, !15091}
!15088 = !DILocalVariable(name: "item", arg: 1, scope: !15086, file: !21, line: 2249, type: !28)
!15089 = !DILocalVariable(name: "seq", arg: 2, scope: !15086, file: !21, line: 2249, type: !28)
!15090 = !DILocalVariable(name: "eq", arg: 3, scope: !15086, file: !21, line: 2249, type: !7)
!15091 = !DILocalVariable(name: "result", scope: !15086, file: !21, line: 2250, type: !7)
!15092 = !DILocation(line: 2249, column: 64, scope: !15086)
!15093 = !DILocation(line: 2249, column: 80, scope: !15086)
!15094 = !DILocation(line: 2249, column: 89, scope: !15086)
!15095 = !DILocation(line: 2250, column: 5, scope: !15086)
!15096 = !DILocation(line: 2250, column: 9, scope: !15086)
!15097 = !DILocation(line: 2250, column: 38, scope: !15086)
!15098 = !DILocation(line: 2250, column: 43, scope: !15086)
!15099 = !DILocation(line: 2250, column: 18, scope: !15086)
!15100 = !DILocation(line: 2251, column: 12, scope: !15086)
!15101 = !DILocation(line: 2251, column: 35, scope: !15086)
!15102 = !DILocation(line: 2251, column: 45, scope: !15086)
!15103 = !DILocation(line: 2251, column: 56, scope: !15086)
!15104 = !DILocation(line: 2251, column: 59, scope: !15086)
!15105 = !DILocation(line: 2251, column: 52, scope: !15086)
!15106 = !DILocation(line: 2252, column: 1, scope: !15086)
!15107 = !DILocation(line: 2251, column: 5, scope: !15086)
!15108 = !DISubprogram(name: "PyUnicode_Format", scope: !544, file: !544, line: 1018, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15109 = distinct !DISubprogram(name: "__Pyx_Raise", scope: !21, file: !21, line: 8909, type: !15110, scopeLine: 8909, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15112)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{null, !28, !28, !28, !28}
!15112 = !{!15113, !15114, !15115, !15116, !15117, !15118, !15122, !15127, !15130, !15133, !15136, !15137}
!15113 = !DILocalVariable(name: "type", arg: 1, scope: !15109, file: !21, line: 8909, type: !28)
!15114 = !DILocalVariable(name: "value", arg: 2, scope: !15109, file: !21, line: 8909, type: !28)
!15115 = !DILocalVariable(name: "tb", arg: 3, scope: !15109, file: !21, line: 8909, type: !28)
!15116 = !DILocalVariable(name: "cause", arg: 4, scope: !15109, file: !21, line: 8909, type: !28)
!15117 = !DILocalVariable(name: "owned_instance", scope: !15109, file: !21, line: 8910, type: !28)
!15118 = !DILocalVariable(name: "instance_class", scope: !15119, file: !21, line: 8929, type: !28)
!15119 = distinct !DILexicalBlock(scope: !15120, file: !21, line: 8928, column: 46)
!15120 = distinct !DILexicalBlock(scope: !15121, file: !21, line: 8928, column: 16)
!15121 = distinct !DILexicalBlock(scope: !15109, file: !21, line: 8920, column: 9)
!15122 = !DILocalVariable(name: "is_subclass", scope: !15123, file: !21, line: 8933, type: !7)
!15123 = distinct !DILexicalBlock(scope: !15124, file: !21, line: 8932, column: 41)
!15124 = distinct !DILexicalBlock(scope: !15125, file: !21, line: 8932, column: 17)
!15125 = distinct !DILexicalBlock(scope: !15126, file: !21, line: 8930, column: 56)
!15126 = distinct !DILexicalBlock(scope: !15119, file: !21, line: 8930, column: 13)
!15127 = !DILocalVariable(name: "args", scope: !15128, file: !21, line: 8944, type: !28)
!15128 = distinct !DILexicalBlock(scope: !15129, file: !21, line: 8943, column: 30)
!15129 = distinct !DILexicalBlock(scope: !15119, file: !21, line: 8943, column: 13)
!15130 = !DILocalVariable(name: "fixed_cause", scope: !15131, file: !21, line: 8973, type: !28)
!15131 = distinct !DILexicalBlock(scope: !15132, file: !21, line: 8972, column: 16)
!15132 = distinct !DILexicalBlock(scope: !15109, file: !21, line: 8972, column: 9)
!15133 = !DILocalVariable(name: "tstate", scope: !15134, file: !21, line: 8996, type: !1698)
!15134 = distinct !DILexicalBlock(scope: !15135, file: !21, line: 8992, column: 13)
!15135 = distinct !DILexicalBlock(scope: !15109, file: !21, line: 8992, column: 9)
!15136 = !DILocalVariable(name: "tmp_tb", scope: !15134, file: !21, line: 8997, type: !28)
!15137 = !DILabel(scope: !15109, name: "bad", file: !21, line: 9011)
!15138 = !DILocation(line: 8909, column: 35, scope: !15109)
!15139 = !DILocation(line: 8909, column: 51, scope: !15109)
!15140 = !DILocation(line: 8909, column: 68, scope: !15109)
!15141 = !DILocation(line: 8909, column: 82, scope: !15109)
!15142 = !DILocation(line: 8910, column: 5, scope: !15109)
!15143 = !DILocation(line: 8910, column: 15, scope: !15109)
!15144 = !DILocation(line: 8911, column: 9, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15109, file: !21, line: 8911, column: 9)
!15146 = !DILocation(line: 8911, column: 12, scope: !15145)
!15147 = !DILocation(line: 8911, column: 9, scope: !15109)
!15148 = !DILocation(line: 8912, column: 12, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15145, file: !21, line: 8911, column: 24)
!15150 = !DILocation(line: 8913, column: 5, scope: !15149)
!15151 = !DILocation(line: 8913, column: 16, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15145, file: !21, line: 8913, column: 16)
!15153 = !DILocation(line: 8913, column: 19, scope: !15152)
!15154 = !DILocation(line: 8913, column: 23, scope: !15152)
!15155 = !DILocation(line: 8913, column: 16, scope: !15145)
!15156 = !DILocation(line: 8914, column: 25, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15152, file: !21, line: 8913, column: 46)
!15158 = !DILocation(line: 8914, column: 9, scope: !15157)
!15159 = !DILocation(line: 8916, column: 9, scope: !15157)
!15160 = !DILocation(line: 8918, column: 9, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15109, file: !21, line: 8918, column: 9)
!15162 = !DILocation(line: 8918, column: 15, scope: !15161)
!15163 = !DILocation(line: 8918, column: 9, scope: !15109)
!15164 = !DILocation(line: 8919, column: 15, scope: !15161)
!15165 = !DILocation(line: 8919, column: 9, scope: !15161)
!15166 = !DILocation(line: 8920, column: 9, scope: !15121)
!15167 = !DILocation(line: 8920, column: 9, scope: !15109)
!15168 = !DILocation(line: 8921, column: 13, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15170, file: !21, line: 8921, column: 13)
!15170 = distinct !DILexicalBlock(scope: !15121, file: !21, line: 8920, column: 42)
!15171 = !DILocation(line: 8921, column: 13, scope: !15170)
!15172 = !DILocation(line: 8922, column: 29, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15169, file: !21, line: 8921, column: 20)
!15174 = !DILocation(line: 8922, column: 13, scope: !15173)
!15175 = !DILocation(line: 8924, column: 13, scope: !15173)
!15176 = !DILocation(line: 8926, column: 17, scope: !15170)
!15177 = !DILocation(line: 8926, column: 15, scope: !15170)
!15178 = !DILocation(line: 8927, column: 28, scope: !15170)
!15179 = !DILocation(line: 8927, column: 14, scope: !15170)
!15180 = !DILocation(line: 8928, column: 5, scope: !15170)
!15181 = !DILocation(line: 8928, column: 16, scope: !15120)
!15182 = !DILocation(line: 8928, column: 16, scope: !15121)
!15183 = !DILocation(line: 8929, column: 9, scope: !15119)
!15184 = !DILocation(line: 8929, column: 19, scope: !15119)
!15185 = !DILocation(line: 8930, column: 13, scope: !15126)
!15186 = !DILocation(line: 8930, column: 19, scope: !15126)
!15187 = !DILocation(line: 8930, column: 22, scope: !15126)
!15188 = !DILocation(line: 8930, column: 13, scope: !15119)
!15189 = !DILocation(line: 8931, column: 42, scope: !15125)
!15190 = !DILocation(line: 8931, column: 28, scope: !15125)
!15191 = !DILocation(line: 8932, column: 17, scope: !15124)
!15192 = !DILocation(line: 8932, column: 35, scope: !15124)
!15193 = !DILocation(line: 8932, column: 32, scope: !15124)
!15194 = !DILocation(line: 8932, column: 17, scope: !15125)
!15195 = !DILocation(line: 8933, column: 17, scope: !15123)
!15196 = !DILocation(line: 8933, column: 21, scope: !15123)
!15197 = !DILocation(line: 8933, column: 55, scope: !15123)
!15198 = !DILocation(line: 8933, column: 71, scope: !15123)
!15199 = !DILocation(line: 8933, column: 35, scope: !15123)
!15200 = !DILocation(line: 8934, column: 22, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15123, file: !21, line: 8934, column: 21)
!15202 = !DILocation(line: 8934, column: 21, scope: !15123)
!15203 = !DILocation(line: 8935, column: 36, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15201, file: !21, line: 8934, column: 35)
!15205 = !DILocation(line: 8936, column: 17, scope: !15204)
!15206 = !DILocation(line: 8936, column: 28, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15201, file: !21, line: 8936, column: 28)
!15208 = !DILocation(line: 8936, column: 28, scope: !15201)
!15209 = !DILocation(line: 8937, column: 21, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15207, file: !21, line: 8936, column: 57)
!15211 = !DILocation(line: 8939, column: 28, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15207, file: !21, line: 8938, column: 24)
!15213 = !DILocation(line: 8939, column: 26, scope: !15212)
!15214 = !DILocation(line: 8941, column: 13, scope: !15124)
!15215 = !DILocation(line: 8941, column: 13, scope: !15123)
!15216 = !DILocation(line: 8942, column: 9, scope: !15125)
!15217 = !DILocation(line: 8943, column: 14, scope: !15129)
!15218 = !DILocation(line: 8943, column: 13, scope: !15119)
!15219 = !DILocation(line: 8944, column: 13, scope: !15128)
!15220 = !DILocation(line: 8944, column: 23, scope: !15128)
!15221 = !DILocation(line: 8945, column: 18, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15128, file: !21, line: 8945, column: 17)
!15223 = !DILocation(line: 8945, column: 17, scope: !15128)
!15224 = !DILocation(line: 8946, column: 24, scope: !15222)
!15225 = !DILocation(line: 8946, column: 22, scope: !15222)
!15226 = !DILocation(line: 8946, column: 17, scope: !15222)
!15227 = !DILocation(line: 8947, column: 22, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15222, file: !21, line: 8947, column: 22)
!15229 = !DILocation(line: 8947, column: 22, scope: !15222)
!15230 = !DILocation(line: 8948, column: 17, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15228, file: !21, line: 8947, column: 44)
!15232 = !DILocation(line: 8949, column: 24, scope: !15231)
!15233 = !DILocation(line: 8949, column: 22, scope: !15231)
!15234 = !DILocation(line: 8950, column: 13, scope: !15231)
!15235 = !DILocation(line: 8951, column: 40, scope: !15228)
!15236 = !DILocation(line: 8951, column: 24, scope: !15228)
!15237 = !DILocation(line: 8951, column: 22, scope: !15228)
!15238 = !DILocation(line: 8952, column: 18, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15128, file: !21, line: 8952, column: 17)
!15240 = !DILocation(line: 8952, column: 17, scope: !15128)
!15241 = !DILocation(line: 8953, column: 17, scope: !15239)
!15242 = !DILocation(line: 8954, column: 44, scope: !15128)
!15243 = !DILocation(line: 8954, column: 50, scope: !15128)
!15244 = !DILocation(line: 8954, column: 30, scope: !15128)
!15245 = !DILocation(line: 8954, column: 28, scope: !15128)
!15246 = !DILocation(line: 8955, column: 13, scope: !15128)
!15247 = !DILocation(line: 8956, column: 18, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15128, file: !21, line: 8956, column: 17)
!15249 = !DILocation(line: 8956, column: 17, scope: !15128)
!15250 = !DILocation(line: 8957, column: 17, scope: !15248)
!15251 = !DILocation(line: 8958, column: 21, scope: !15128)
!15252 = !DILocation(line: 8958, column: 19, scope: !15128)
!15253 = !DILocation(line: 8959, column: 18, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15128, file: !21, line: 8959, column: 17)
!15255 = !DILocation(line: 8959, column: 17, scope: !15128)
!15256 = !DILocation(line: 8960, column: 30, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15254, file: !21, line: 8959, column: 52)
!15258 = !DILocation(line: 8963, column: 30, scope: !15257)
!15259 = !DILocation(line: 8963, column: 36, scope: !15257)
!15260 = !DILocation(line: 8960, column: 17, scope: !15257)
!15261 = !DILocation(line: 8964, column: 17, scope: !15257)
!15262 = !DILocation(line: 8966, column: 9, scope: !15129)
!15263 = !DILocation(line: 8966, column: 9, scope: !15128)
!15264 = !DILocation(line: 8967, column: 5, scope: !15120)
!15265 = !DILocation(line: 8967, column: 5, scope: !15119)
!15266 = !DILocation(line: 8968, column: 25, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15120, file: !21, line: 8967, column: 12)
!15268 = !DILocation(line: 8968, column: 9, scope: !15267)
!15269 = !DILocation(line: 8970, column: 9, scope: !15267)
!15270 = !DILocation(line: 8972, column: 9, scope: !15132)
!15271 = !DILocation(line: 8972, column: 9, scope: !15109)
!15272 = !DILocation(line: 8973, column: 9, scope: !15131)
!15273 = !DILocation(line: 8973, column: 19, scope: !15131)
!15274 = !DILocation(line: 8974, column: 13, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15131, file: !21, line: 8974, column: 13)
!15276 = !DILocation(line: 8974, column: 19, scope: !15275)
!15277 = !DILocation(line: 8974, column: 13, scope: !15131)
!15278 = !DILocation(line: 8975, column: 25, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15275, file: !21, line: 8974, column: 31)
!15280 = !DILocation(line: 8976, column: 9, scope: !15279)
!15281 = !DILocation(line: 8976, column: 20, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15275, file: !21, line: 8976, column: 20)
!15283 = !DILocation(line: 8976, column: 20, scope: !15275)
!15284 = !DILocation(line: 8977, column: 47, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15282, file: !21, line: 8976, column: 51)
!15286 = !DILocation(line: 8977, column: 27, scope: !15285)
!15287 = !DILocation(line: 8977, column: 25, scope: !15285)
!15288 = !DILocation(line: 8978, column: 17, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15285, file: !21, line: 8978, column: 17)
!15290 = !DILocation(line: 8978, column: 29, scope: !15289)
!15291 = !DILocation(line: 8978, column: 17, scope: !15285)
!15292 = !DILocation(line: 8979, column: 17, scope: !15289)
!15293 = !DILocation(line: 8980, column: 9, scope: !15285)
!15294 = !DILocation(line: 8980, column: 20, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15282, file: !21, line: 8980, column: 20)
!15296 = !DILocation(line: 8980, column: 20, scope: !15282)
!15297 = !DILocation(line: 8981, column: 27, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15295, file: !21, line: 8980, column: 54)
!15299 = !DILocation(line: 8981, column: 25, scope: !15298)
!15300 = !DILocation(line: 8982, column: 13, scope: !15298)
!15301 = !DILocation(line: 8983, column: 9, scope: !15298)
!15302 = !DILocation(line: 8984, column: 29, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15295, file: !21, line: 8983, column: 16)
!15304 = !DILocation(line: 8984, column: 13, scope: !15303)
!15305 = !DILocation(line: 8987, column: 13, scope: !15303)
!15306 = !DILocation(line: 8989, column: 30, scope: !15131)
!15307 = !DILocation(line: 8989, column: 37, scope: !15131)
!15308 = !DILocation(line: 8989, column: 9, scope: !15131)
!15309 = !DILocation(line: 8990, column: 5, scope: !15132)
!15310 = !DILocation(line: 8990, column: 5, scope: !15131)
!15311 = !DILocation(line: 8991, column: 21, scope: !15109)
!15312 = !DILocation(line: 8991, column: 27, scope: !15109)
!15313 = !DILocation(line: 8991, column: 5, scope: !15109)
!15314 = !DILocation(line: 8992, column: 9, scope: !15135)
!15315 = !DILocation(line: 8992, column: 9, scope: !15109)
!15316 = !DILocation(line: 8996, column: 9, scope: !15134)
!15317 = !DILocation(line: 8996, column: 24, scope: !15134)
!15318 = !DILocation(line: 8996, column: 33, scope: !15134)
!15319 = !DILocation(line: 8997, column: 9, scope: !15134)
!15320 = !DILocation(line: 8997, column: 19, scope: !15134)
!15321 = !DILocation(line: 8997, column: 28, scope: !15134)
!15322 = !DILocation(line: 8997, column: 36, scope: !15134)
!15323 = !DILocation(line: 8998, column: 13, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15134, file: !21, line: 8998, column: 13)
!15325 = !DILocation(line: 8998, column: 19, scope: !15324)
!15326 = !DILocation(line: 8998, column: 16, scope: !15324)
!15327 = !DILocation(line: 8998, column: 13, scope: !15134)
!15328 = !DILocation(line: 8999, column: 13, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15324, file: !21, line: 8998, column: 27)
!15330 = !DILocation(line: 9000, column: 40, scope: !15329)
!15331 = !DILocation(line: 9000, column: 13, scope: !15329)
!15332 = !DILocation(line: 9000, column: 21, scope: !15329)
!15333 = !DILocation(line: 9000, column: 38, scope: !15329)
!15334 = !DILocation(line: 9001, column: 13, scope: !15329)
!15335 = !DILocation(line: 9002, column: 9, scope: !15329)
!15336 = !DILocation(line: 9010, column: 5, scope: !15135)
!15337 = !DILocation(line: 9010, column: 5, scope: !15134)
!15338 = !DILocation(line: 9011, column: 1, scope: !15109)
!15339 = !DILocation(line: 9012, column: 5, scope: !15109)
!15340 = !DILocation(line: 9013, column: 5, scope: !15109)
!15341 = !DILocation(line: 9014, column: 1, scope: !15109)
!15342 = !DISubprogram(name: "PySequence_Contains", scope: !8895, file: !8895, line: 744, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15343 = !DISubprogram(name: "PyObject_IsSubclass", scope: !8895, file: !8895, line: 862, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15344 = !DISubprogram(name: "PyObject_CallObject", scope: !8895, file: !8895, line: 169, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15345 = !DISubprogram(name: "PyException_SetCause", scope: !2720, file: !2720, line: 48, type: !3869, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15346 = !DILocation(line: 10889, column: 51, scope: !1695)
!15347 = !DILocation(line: 10889, column: 63, scope: !1695)
!15348 = !DILocation(line: 10890, column: 5, scope: !1695)
!15349 = !DILocation(line: 10890, column: 15, scope: !1695)
!15350 = !DILocation(line: 10891, column: 5, scope: !1695)
!15351 = !DILocation(line: 10891, column: 15, scope: !1695)
!15352 = !DILocation(line: 10891, column: 23, scope: !1695)
!15353 = !DILocation(line: 10891, column: 32, scope: !1695)
!15354 = !DILocation(line: 10893, column: 5, scope: !1695)
!15355 = !DILocation(line: 10893, column: 16, scope: !1695)
!15356 = !DILocation(line: 10895, column: 5, scope: !1695)
!15357 = !DILocation(line: 10896, column: 9, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !1695, file: !21, line: 10896, column: 9)
!15359 = !DILocation(line: 10896, column: 9, scope: !1695)
!15360 = !DILocation(line: 10897, column: 16, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15358, file: !21, line: 10896, column: 42)
!15362 = !DILocation(line: 10897, column: 9, scope: !15361)
!15363 = !DILocation(line: 10899, column: 27, scope: !1695)
!15364 = !DILocation(line: 10899, column: 5, scope: !1695)
!15365 = !DILocation(line: 10901, column: 48, scope: !1695)
!15366 = !DILocation(line: 10901, column: 27, scope: !1695)
!15367 = !DILocation(line: 10901, column: 25, scope: !1695)
!15368 = !DILocation(line: 10902, column: 9, scope: !1856)
!15369 = !DILocation(line: 10902, column: 9, scope: !1695)
!15370 = !DILocation(line: 10903, column: 9, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15372, file: !21, line: 10903, column: 9)
!15372 = distinct !DILexicalBlock(scope: !15373, file: !21, line: 10903, column: 9)
!15373 = distinct !DILexicalBlock(scope: !1856, file: !21, line: 10902, column: 38)
!15374 = !DILocation(line: 10903, column: 9, scope: !15372)
!15375 = !DILocation(line: 10903, column: 9, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15371, file: !21, line: 10903, column: 9)
!15377 = !DILocation(line: 10903, column: 9, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15371, file: !21, line: 10903, column: 9)
!15379 = !{!2020, !1900, i64 328}
!15380 = !DILocation(line: 10906, column: 5, scope: !15373)
!15381 = !DILocation(line: 10909, column: 7, scope: !1855)
!15382 = !DILocation(line: 10909, column: 17, scope: !1855)
!15383 = !DILocation(line: 10909, column: 66, scope: !1855)
!15384 = !DILocation(line: 10909, column: 88, scope: !1855)
!15385 = !DILocation(line: 10909, column: 33, scope: !1855)
!15386 = !DILocation(line: 10910, column: 11, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !1855, file: !21, line: 10910, column: 11)
!15388 = !DILocation(line: 10910, column: 11, scope: !1855)
!15389 = !DILocation(line: 10911, column: 34, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15387, file: !21, line: 10910, column: 26)
!15391 = !DILocation(line: 10911, column: 21, scope: !15390)
!15392 = !DILocation(line: 10911, column: 19, scope: !15390)
!15393 = !DILocation(line: 10912, column: 9, scope: !15390)
!15394 = !DILocation(line: 10913, column: 7, scope: !15390)
!15395 = !DILocation(line: 10914, column: 9, scope: !15396)
!15396 = distinct !DILexicalBlock(scope: !15387, file: !21, line: 10913, column: 14)
!15397 = !DILocation(line: 10915, column: 19, scope: !15396)
!15398 = !DILocation(line: 10917, column: 5, scope: !1856)
!15399 = !DILocation(line: 10918, column: 10, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !1695, file: !21, line: 10918, column: 9)
!15401 = !DILocation(line: 10918, column: 9, scope: !1695)
!15402 = !DILocation(line: 10919, column: 16, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15400, file: !21, line: 10918, column: 21)
!15404 = !DILocation(line: 10920, column: 33, scope: !15403)
!15405 = !DILocation(line: 10920, column: 55, scope: !15403)
!15406 = !DILocation(line: 10920, column: 16, scope: !15403)
!15407 = !DILocation(line: 10921, column: 5, scope: !15403)
!15408 = !DILocation(line: 10922, column: 14, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15400, file: !21, line: 10922, column: 14)
!15410 = !DILocation(line: 10922, column: 24, scope: !15409)
!15411 = !DILocation(line: 10922, column: 36, scope: !15409)
!15412 = !DILocation(line: 10922, column: 40, scope: !15409)
!15413 = !DILocation(line: 10922, column: 50, scope: !15409)
!15414 = !DILocation(line: 10922, column: 61, scope: !15409)
!15415 = !DILocation(line: 10922, column: 77, scope: !15409)
!15416 = !DILocation(line: 10922, column: 64, scope: !15409)
!15417 = !DILocation(line: 10922, column: 88, scope: !15409)
!15418 = !DILocation(line: 10922, column: 14, scope: !15400)
!15419 = !DILocation(line: 10923, column: 16, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15409, file: !21, line: 10922, column: 95)
!15421 = !DILocation(line: 10924, column: 5, scope: !15420)
!15422 = !DILocation(line: 10925, column: 29, scope: !1695)
!15423 = !DILocation(line: 10925, column: 37, scope: !1695)
!15424 = !DILocation(line: 10925, column: 44, scope: !1695)
!15425 = !DILocation(line: 10925, column: 52, scope: !1695)
!15426 = !DILocation(line: 10925, column: 5, scope: !1695)
!15427 = !DILocation(line: 10926, column: 12, scope: !1695)
!15428 = !DILocation(line: 10926, column: 5, scope: !1695)
!15429 = !DILocation(line: 10927, column: 1, scope: !1695)
!15430 = distinct !DISubprogram(name: "__pyx_find_code_object", scope: !21, file: !21, line: 10953, type: !15431, scopeLine: 10953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15433)
!15431 = !DISubroutineType(types: !15432)
!15432 = !{!637, !7}
!15433 = !{!15434, !15435, !15436}
!15434 = !DILocalVariable(name: "code_line", arg: 1, scope: !15430, file: !21, line: 10953, type: !7)
!15435 = !DILocalVariable(name: "code_object", scope: !15430, file: !21, line: 10954, type: !637)
!15436 = !DILocalVariable(name: "pos", scope: !15430, file: !21, line: 10955, type: !7)
!15437 = !DILocation(line: 10953, column: 49, scope: !15430)
!15438 = !DILocation(line: 10954, column: 5, scope: !15430)
!15439 = !DILocation(line: 10954, column: 19, scope: !15430)
!15440 = !DILocation(line: 10955, column: 5, scope: !15430)
!15441 = !DILocation(line: 10955, column: 9, scope: !15430)
!15442 = !DILocation(line: 10956, column: 9, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15430, file: !21, line: 10956, column: 9)
!15444 = !DILocation(line: 10956, column: 30, scope: !15443)
!15445 = !DILocation(line: 10956, column: 33, scope: !15443)
!15446 = !{!15447, !1900, i64 8}
!15447 = !{!"__Pyx_CodeObjectCache", !1985, i64 0, !1985, i64 4, !1900, i64 8}
!15448 = !DILocation(line: 10956, column: 9, scope: !15430)
!15449 = !DILocation(line: 10957, column: 9, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15443, file: !21, line: 10956, column: 70)
!15451 = !DILocation(line: 10959, column: 54, scope: !15430)
!15452 = !DILocation(line: 10959, column: 80, scope: !15430)
!15453 = !{!15447, !1985, i64 0}
!15454 = !DILocation(line: 10959, column: 87, scope: !15430)
!15455 = !DILocation(line: 10959, column: 11, scope: !15430)
!15456 = !DILocation(line: 10959, column: 9, scope: !15430)
!15457 = !DILocation(line: 10960, column: 9, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15430, file: !21, line: 10960, column: 9)
!15459 = !DILocation(line: 10960, column: 49, scope: !15458)
!15460 = !DILocation(line: 10960, column: 52, scope: !15458)
!15461 = !{!15462, !1985, i64 8}
!15462 = !{!"", !1900, i64 0, !1985, i64 8}
!15463 = !DILocation(line: 10960, column: 9, scope: !15430)
!15464 = !DILocation(line: 10961, column: 9, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15458, file: !21, line: 10960, column: 116)
!15466 = !DILocation(line: 10963, column: 36, scope: !15430)
!15467 = !DILocation(line: 10963, column: 44, scope: !15430)
!15468 = !DILocation(line: 10963, column: 19, scope: !15430)
!15469 = !DILocation(line: 10963, column: 49, scope: !15430)
!15470 = !{!15462, !1900, i64 0}
!15471 = !DILocation(line: 10963, column: 17, scope: !15430)
!15472 = !DILocation(line: 10964, column: 5, scope: !15430)
!15473 = !DILocation(line: 10965, column: 12, scope: !15430)
!15474 = !DILocation(line: 10965, column: 5, scope: !15430)
!15475 = !DILocation(line: 10966, column: 1, scope: !15430)
!15476 = distinct !DISubprogram(name: "__Pyx_ErrFetchInState", scope: !21, file: !21, line: 7225, type: !15477, scopeLine: 7225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15479)
!15477 = !DISubroutineType(types: !15478)
!15478 = !{null, !1698, !94, !94, !94}
!15479 = !{!15480, !15481, !15482, !15483}
!15480 = !DILocalVariable(name: "tstate", arg: 1, scope: !15476, file: !21, line: 7225, type: !1698)
!15481 = !DILocalVariable(name: "type", arg: 2, scope: !15476, file: !21, line: 7225, type: !94)
!15482 = !DILocalVariable(name: "value", arg: 3, scope: !15476, file: !21, line: 7225, type: !94)
!15483 = !DILocalVariable(name: "tb", arg: 4, scope: !15476, file: !21, line: 7225, type: !94)
!15484 = !DILocation(line: 7225, column: 64, scope: !15476)
!15485 = !DILocation(line: 7225, column: 83, scope: !15476)
!15486 = !DILocation(line: 7225, column: 100, scope: !15476)
!15487 = !DILocation(line: 7225, column: 118, scope: !15476)
!15488 = !DILocation(line: 7244, column: 13, scope: !15476)
!15489 = !DILocation(line: 7244, column: 21, scope: !15476)
!15490 = !DILocation(line: 7244, column: 6, scope: !15476)
!15491 = !DILocation(line: 7244, column: 11, scope: !15476)
!15492 = !DILocation(line: 7245, column: 14, scope: !15476)
!15493 = !DILocation(line: 7245, column: 22, scope: !15476)
!15494 = !DILocation(line: 7245, column: 6, scope: !15476)
!15495 = !DILocation(line: 7245, column: 12, scope: !15476)
!15496 = !DILocation(line: 7246, column: 11, scope: !15476)
!15497 = !DILocation(line: 7246, column: 19, scope: !15476)
!15498 = !DILocation(line: 7246, column: 6, scope: !15476)
!15499 = !DILocation(line: 7246, column: 9, scope: !15476)
!15500 = !DILocation(line: 7247, column: 5, scope: !15476)
!15501 = !DILocation(line: 7247, column: 13, scope: !15476)
!15502 = !DILocation(line: 7247, column: 25, scope: !15476)
!15503 = !DILocation(line: 7248, column: 5, scope: !15476)
!15504 = !DILocation(line: 7248, column: 13, scope: !15476)
!15505 = !DILocation(line: 7248, column: 26, scope: !15476)
!15506 = !DILocation(line: 7249, column: 5, scope: !15476)
!15507 = !DILocation(line: 7249, column: 13, scope: !15476)
!15508 = !DILocation(line: 7249, column: 30, scope: !15476)
!15509 = !DILocation(line: 7251, column: 1, scope: !15476)
!15510 = distinct !DISubprogram(name: "__Pyx_CreateCodeObjectForTraceback", scope: !21, file: !21, line: 11103, type: !15511, scopeLine: 11105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15513)
!15511 = !DISubroutineType(types: !15512)
!15512 = !{!637, !54, !7, !7, !54}
!15513 = !{!15514, !15515, !15516, !15517, !15518, !15519, !15520}
!15514 = !DILocalVariable(name: "funcname", arg: 1, scope: !15510, file: !21, line: 11104, type: !54)
!15515 = !DILocalVariable(name: "c_line", arg: 2, scope: !15510, file: !21, line: 11104, type: !7)
!15516 = !DILocalVariable(name: "py_line", arg: 3, scope: !15510, file: !21, line: 11105, type: !7)
!15517 = !DILocalVariable(name: "filename", arg: 4, scope: !15510, file: !21, line: 11105, type: !54)
!15518 = !DILocalVariable(name: "py_code", scope: !15510, file: !21, line: 11106, type: !637)
!15519 = !DILocalVariable(name: "py_funcname", scope: !15510, file: !21, line: 11107, type: !28)
!15520 = !DILabel(scope: !15510, name: "bad", file: !21, line: 11155)
!15521 = !DILocation(line: 11104, column: 25, scope: !15510)
!15522 = !DILocation(line: 11104, column: 39, scope: !15510)
!15523 = !DILocation(line: 11105, column: 17, scope: !15510)
!15524 = !DILocation(line: 11105, column: 38, scope: !15510)
!15525 = !DILocation(line: 11106, column: 5, scope: !15510)
!15526 = !DILocation(line: 11106, column: 19, scope: !15510)
!15527 = !DILocation(line: 11107, column: 5, scope: !15510)
!15528 = !DILocation(line: 11107, column: 15, scope: !15510)
!15529 = !DILocation(line: 11113, column: 9, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15510, file: !21, line: 11113, column: 9)
!15531 = !DILocation(line: 11113, column: 9, scope: !15510)
!15532 = !DILocation(line: 11118, column: 59, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15530, file: !21, line: 11113, column: 17)
!15534 = !DILocation(line: 11118, column: 69, scope: !15533)
!15535 = !DILocation(line: 11118, column: 84, scope: !15533)
!15536 = !DILocation(line: 11118, column: 23, scope: !15533)
!15537 = !DILocation(line: 11118, column: 21, scope: !15533)
!15538 = !DILocation(line: 11119, column: 14, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15533, file: !21, line: 11119, column: 13)
!15540 = !DILocation(line: 11119, column: 13, scope: !15533)
!15541 = !DILocation(line: 11119, column: 27, scope: !15539)
!15542 = !DILocation(line: 11120, column: 37, scope: !15533)
!15543 = !DILocation(line: 11120, column: 20, scope: !15533)
!15544 = !DILocation(line: 11120, column: 18, scope: !15533)
!15545 = !DILocation(line: 11121, column: 14, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15533, file: !21, line: 11121, column: 13)
!15547 = !DILocation(line: 11121, column: 13, scope: !15533)
!15548 = !DILocation(line: 11121, column: 24, scope: !15546)
!15549 = !DILocation(line: 11123, column: 5, scope: !15533)
!15550 = !DILocation(line: 11151, column: 31, scope: !15510)
!15551 = !DILocation(line: 11151, column: 41, scope: !15510)
!15552 = !DILocation(line: 11151, column: 51, scope: !15510)
!15553 = !DILocation(line: 11151, column: 15, scope: !15510)
!15554 = !DILocation(line: 11151, column: 13, scope: !15510)
!15555 = !DILocation(line: 11153, column: 5, scope: !15510)
!15556 = !DILocation(line: 11154, column: 12, scope: !15510)
!15557 = !DILocation(line: 11154, column: 5, scope: !15510)
!15558 = !DILocation(line: 11155, column: 1, scope: !15510)
!15559 = !DILocation(line: 11156, column: 5, scope: !15510)
!15560 = !DILocation(line: 11160, column: 5, scope: !15510)
!15561 = !DILocation(line: 11161, column: 1, scope: !15510)
!15562 = distinct !DISubprogram(name: "__pyx_insert_code_object", scope: !21, file: !21, line: 10967, type: !15563, scopeLine: 10967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15565)
!15563 = !DISubroutineType(types: !15564)
!15564 = !{null, !7, !637}
!15565 = !{!15566, !15567, !15568, !15569, !15570, !15571, !15574}
!15566 = !DILocalVariable(name: "code_line", arg: 1, scope: !15562, file: !21, line: 10967, type: !7)
!15567 = !DILocalVariable(name: "code_object", arg: 2, scope: !15562, file: !21, line: 10967, type: !637)
!15568 = !DILocalVariable(name: "pos", scope: !15562, file: !21, line: 10968, type: !7)
!15569 = !DILocalVariable(name: "i", scope: !15562, file: !21, line: 10968, type: !7)
!15570 = !DILocalVariable(name: "entries", scope: !15562, file: !21, line: 10969, type: !632)
!15571 = !DILocalVariable(name: "tmp", scope: !15572, file: !21, line: 10987, type: !637)
!15572 = distinct !DILexicalBlock(scope: !15573, file: !21, line: 10986, column: 107)
!15573 = distinct !DILexicalBlock(scope: !15562, file: !21, line: 10986, column: 9)
!15574 = !DILocalVariable(name: "new_max", scope: !15575, file: !21, line: 10993, type: !7)
!15575 = distinct !DILexicalBlock(scope: !15576, file: !21, line: 10992, column: 63)
!15576 = distinct !DILexicalBlock(scope: !15562, file: !21, line: 10992, column: 9)
!15577 = !DILocation(line: 10967, column: 42, scope: !15562)
!15578 = !DILocation(line: 10967, column: 67, scope: !15562)
!15579 = !DILocation(line: 10968, column: 5, scope: !15562)
!15580 = !DILocation(line: 10968, column: 9, scope: !15562)
!15581 = !DILocation(line: 10968, column: 14, scope: !15562)
!15582 = !DILocation(line: 10969, column: 5, scope: !15562)
!15583 = !DILocation(line: 10969, column: 33, scope: !15562)
!15584 = !DILocation(line: 10969, column: 60, scope: !15562)
!15585 = !DILocation(line: 10970, column: 9, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15562, file: !21, line: 10970, column: 9)
!15587 = !DILocation(line: 10970, column: 9, scope: !15562)
!15588 = !DILocation(line: 10971, column: 9, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15586, file: !21, line: 10970, column: 31)
!15590 = !DILocation(line: 10973, column: 9, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15562, file: !21, line: 10973, column: 9)
!15592 = !DILocation(line: 10973, column: 9, scope: !15562)
!15593 = !DILocation(line: 10974, column: 48, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15591, file: !21, line: 10973, column: 29)
!15595 = !DILocation(line: 10974, column: 17, scope: !15594)
!15596 = !DILocation(line: 10975, column: 13, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15594, file: !21, line: 10975, column: 13)
!15598 = !DILocation(line: 10975, column: 13, scope: !15594)
!15599 = !DILocation(line: 10976, column: 40, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15597, file: !21, line: 10975, column: 30)
!15601 = !DILocation(line: 10976, column: 38, scope: !15600)
!15602 = !DILocation(line: 10977, column: 40, scope: !15600)
!15603 = !{!15447, !1985, i64 4}
!15604 = !DILocation(line: 10978, column: 36, scope: !15600)
!15605 = !DILocation(line: 10979, column: 36, scope: !15600)
!15606 = !DILocation(line: 10979, column: 13, scope: !15600)
!15607 = !DILocation(line: 10979, column: 24, scope: !15600)
!15608 = !DILocation(line: 10979, column: 34, scope: !15600)
!15609 = !DILocation(line: 10980, column: 38, scope: !15600)
!15610 = !DILocation(line: 10980, column: 13, scope: !15600)
!15611 = !DILocation(line: 10980, column: 24, scope: !15600)
!15612 = !DILocation(line: 10980, column: 36, scope: !15600)
!15613 = !DILocation(line: 10981, column: 13, scope: !15600)
!15614 = !DILocation(line: 10982, column: 9, scope: !15600)
!15615 = !DILocation(line: 10983, column: 9, scope: !15594)
!15616 = !DILocation(line: 10985, column: 54, scope: !15562)
!15617 = !DILocation(line: 10985, column: 80, scope: !15562)
!15618 = !DILocation(line: 10985, column: 87, scope: !15562)
!15619 = !DILocation(line: 10985, column: 11, scope: !15562)
!15620 = !DILocation(line: 10985, column: 9, scope: !15562)
!15621 = !DILocation(line: 10986, column: 10, scope: !15573)
!15622 = !DILocation(line: 10986, column: 33, scope: !15573)
!15623 = !DILocation(line: 10986, column: 14, scope: !15573)
!15624 = !DILocation(line: 10986, column: 40, scope: !15573)
!15625 = !DILocation(line: 10986, column: 43, scope: !15573)
!15626 = !DILocation(line: 10986, column: 9, scope: !15562)
!15627 = !DILocation(line: 10987, column: 9, scope: !15572)
!15628 = !DILocation(line: 10987, column: 23, scope: !15572)
!15629 = !DILocation(line: 10987, column: 29, scope: !15572)
!15630 = !DILocation(line: 10987, column: 37, scope: !15572)
!15631 = !DILocation(line: 10987, column: 42, scope: !15572)
!15632 = !DILocation(line: 10988, column: 36, scope: !15572)
!15633 = !DILocation(line: 10988, column: 9, scope: !15572)
!15634 = !DILocation(line: 10988, column: 17, scope: !15572)
!15635 = !DILocation(line: 10988, column: 22, scope: !15572)
!15636 = !DILocation(line: 10988, column: 34, scope: !15572)
!15637 = !DILocation(line: 10989, column: 9, scope: !15572)
!15638 = !DILocation(line: 10991, column: 5, scope: !15573)
!15639 = !DILocation(line: 10992, column: 26, scope: !15576)
!15640 = !DILocation(line: 10992, column: 52, scope: !15576)
!15641 = !DILocation(line: 10992, column: 32, scope: !15576)
!15642 = !DILocation(line: 10992, column: 9, scope: !15562)
!15643 = !DILocation(line: 10993, column: 9, scope: !15575)
!15644 = !DILocation(line: 10993, column: 13, scope: !15575)
!15645 = !DILocation(line: 10993, column: 40, scope: !15575)
!15646 = !DILocation(line: 10993, column: 50, scope: !15575)
!15647 = !DILocation(line: 10995, column: 30, scope: !15575)
!15648 = !DILocation(line: 10995, column: 48, scope: !15575)
!15649 = !DILocation(line: 10995, column: 40, scope: !15575)
!15650 = !DILocation(line: 10995, column: 57, scope: !15575)
!15651 = !DILocation(line: 10994, column: 48, scope: !15575)
!15652 = !DILocation(line: 10994, column: 17, scope: !15575)
!15653 = !DILocation(line: 10996, column: 13, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15575, file: !21, line: 10996, column: 13)
!15655 = !DILocation(line: 10996, column: 13, scope: !15575)
!15656 = !DILocation(line: 10997, column: 13, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15654, file: !21, line: 10996, column: 33)
!15658 = !DILocation(line: 10999, column: 36, scope: !15575)
!15659 = !DILocation(line: 10999, column: 34, scope: !15575)
!15660 = !DILocation(line: 11000, column: 38, scope: !15575)
!15661 = !DILocation(line: 11000, column: 36, scope: !15575)
!15662 = !DILocation(line: 11001, column: 5, scope: !15576)
!15663 = !DILocation(line: 11001, column: 5, scope: !15575)
!15664 = !DILocation(line: 11002, column: 29, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15562, file: !21, line: 11002, column: 5)
!15666 = !DILocation(line: 11002, column: 11, scope: !15665)
!15667 = !DILocation(line: 11002, column: 10, scope: !15665)
!15668 = !DILocation(line: 11002, column: 36, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15665, file: !21, line: 11002, column: 5)
!15670 = !DILocation(line: 11002, column: 38, scope: !15669)
!15671 = !DILocation(line: 11002, column: 37, scope: !15669)
!15672 = !DILocation(line: 11002, column: 5, scope: !15665)
!15673 = !DILocation(line: 11003, column: 9, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15669, file: !21, line: 11002, column: 48)
!15675 = !DILocation(line: 11003, column: 17, scope: !15674)
!15676 = !DILocation(line: 11003, column: 22, scope: !15674)
!15677 = !DILocation(line: 11003, column: 30, scope: !15674)
!15678 = !DILocation(line: 11003, column: 31, scope: !15674)
!15679 = !{i64 0, i64 8, !1899, i64 8, i64 4, !1984}
!15680 = !DILocation(line: 11004, column: 5, scope: !15674)
!15681 = !DILocation(line: 11002, column: 44, scope: !15669)
!15682 = !DILocation(line: 11002, column: 5, scope: !15669)
!15683 = distinct !{!15683, !15672, !15684, !4470}
!15684 = !DILocation(line: 11004, column: 5, scope: !15665)
!15685 = !DILocation(line: 11005, column: 30, scope: !15562)
!15686 = !DILocation(line: 11005, column: 5, scope: !15562)
!15687 = !DILocation(line: 11005, column: 13, scope: !15562)
!15688 = !DILocation(line: 11005, column: 18, scope: !15562)
!15689 = !DILocation(line: 11005, column: 28, scope: !15562)
!15690 = !DILocation(line: 11006, column: 32, scope: !15562)
!15691 = !DILocation(line: 11006, column: 5, scope: !15562)
!15692 = !DILocation(line: 11006, column: 13, scope: !15562)
!15693 = !DILocation(line: 11006, column: 18, scope: !15562)
!15694 = !DILocation(line: 11006, column: 30, scope: !15562)
!15695 = !DILocation(line: 11007, column: 27, scope: !15562)
!15696 = !DILocation(line: 11008, column: 5, scope: !15562)
!15697 = !DILocation(line: 11009, column: 1, scope: !15562)
!15698 = !DISubprogram(name: "PyFrame_New", scope: !15699, file: !15699, line: 9, type: !15700, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15699 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/frameobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "50587ac76f9edfbe72d42a5de7f9d73a")
!15700 = !DISubroutineType(types: !15701)
!15701 = !{!1754, !1698, !637, !28, !28}
!15702 = !DISubprogram(name: "PyTraceBack_Here", scope: !15703, file: !15703, line: 9, type: !15704, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15703 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/traceback.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "240e826f65155873105b5c84d4393cdf")
!15704 = !DISubroutineType(types: !15705)
!15705 = !{!7, !1754}
!15706 = !DISubprogram(name: "PyObject_Not", scope: !6, file: !6, line: 304, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15707 = distinct !DISubprogram(name: "__pyx_bisect_code_objects", scope: !21, file: !21, line: 10932, type: !15708, scopeLine: 10932, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !15710)
!15708 = !DISubroutineType(types: !15709)
!15709 = !{!7, !632, !7, !7}
!15710 = !{!15711, !15712, !15713, !15714, !15715, !15716}
!15711 = !DILocalVariable(name: "entries", arg: 1, scope: !15707, file: !21, line: 10932, type: !632)
!15712 = !DILocalVariable(name: "count", arg: 2, scope: !15707, file: !21, line: 10932, type: !7)
!15713 = !DILocalVariable(name: "code_line", arg: 3, scope: !15707, file: !21, line: 10932, type: !7)
!15714 = !DILocalVariable(name: "start", scope: !15707, file: !21, line: 10933, type: !7)
!15715 = !DILocalVariable(name: "mid", scope: !15707, file: !21, line: 10933, type: !7)
!15716 = !DILocalVariable(name: "end", scope: !15707, file: !21, line: 10933, type: !7)
!15717 = !DILocation(line: 10932, column: 66, scope: !15707)
!15718 = !DILocation(line: 10932, column: 79, scope: !15707)
!15719 = !DILocation(line: 10932, column: 90, scope: !15707)
!15720 = !DILocation(line: 10933, column: 5, scope: !15707)
!15721 = !DILocation(line: 10933, column: 9, scope: !15707)
!15722 = !DILocation(line: 10933, column: 20, scope: !15707)
!15723 = !DILocation(line: 10933, column: 29, scope: !15707)
!15724 = !DILocation(line: 10933, column: 35, scope: !15707)
!15725 = !DILocation(line: 10933, column: 41, scope: !15707)
!15726 = !DILocation(line: 10934, column: 9, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15707, file: !21, line: 10934, column: 9)
!15728 = !DILocation(line: 10934, column: 13, scope: !15727)
!15729 = !DILocation(line: 10934, column: 18, scope: !15727)
!15730 = !DILocation(line: 10934, column: 21, scope: !15727)
!15731 = !DILocation(line: 10934, column: 33, scope: !15727)
!15732 = !DILocation(line: 10934, column: 41, scope: !15727)
!15733 = !DILocation(line: 10934, column: 46, scope: !15727)
!15734 = !DILocation(line: 10934, column: 31, scope: !15727)
!15735 = !DILocation(line: 10934, column: 9, scope: !15707)
!15736 = !DILocation(line: 10935, column: 16, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15727, file: !21, line: 10934, column: 57)
!15738 = !DILocation(line: 10935, column: 9, scope: !15737)
!15739 = !DILocation(line: 10937, column: 5, scope: !15707)
!15740 = !DILocation(line: 10937, column: 12, scope: !15707)
!15741 = !DILocation(line: 10937, column: 20, scope: !15707)
!15742 = !DILocation(line: 10937, column: 18, scope: !15707)
!15743 = !DILocation(line: 10938, column: 15, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15707, file: !21, line: 10937, column: 25)
!15745 = !DILocation(line: 10938, column: 24, scope: !15744)
!15746 = !DILocation(line: 10938, column: 30, scope: !15744)
!15747 = !DILocation(line: 10938, column: 28, scope: !15744)
!15748 = !DILocation(line: 10938, column: 37, scope: !15744)
!15749 = !DILocation(line: 10938, column: 21, scope: !15744)
!15750 = !DILocation(line: 10938, column: 13, scope: !15744)
!15751 = !DILocation(line: 10939, column: 13, scope: !15752)
!15752 = distinct !DILexicalBlock(scope: !15744, file: !21, line: 10939, column: 13)
!15753 = !DILocation(line: 10939, column: 25, scope: !15752)
!15754 = !DILocation(line: 10939, column: 33, scope: !15752)
!15755 = !DILocation(line: 10939, column: 38, scope: !15752)
!15756 = !DILocation(line: 10939, column: 23, scope: !15752)
!15757 = !DILocation(line: 10939, column: 13, scope: !15744)
!15758 = !DILocation(line: 10940, column: 19, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15752, file: !21, line: 10939, column: 49)
!15760 = !DILocation(line: 10940, column: 17, scope: !15759)
!15761 = !DILocation(line: 10941, column: 9, scope: !15759)
!15762 = !DILocation(line: 10941, column: 20, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15752, file: !21, line: 10941, column: 20)
!15764 = !DILocation(line: 10941, column: 32, scope: !15763)
!15765 = !DILocation(line: 10941, column: 40, scope: !15763)
!15766 = !DILocation(line: 10941, column: 45, scope: !15763)
!15767 = !DILocation(line: 10941, column: 30, scope: !15763)
!15768 = !DILocation(line: 10941, column: 20, scope: !15752)
!15769 = !DILocation(line: 10942, column: 22, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15763, file: !21, line: 10941, column: 56)
!15771 = !DILocation(line: 10942, column: 26, scope: !15770)
!15772 = !DILocation(line: 10942, column: 20, scope: !15770)
!15773 = !DILocation(line: 10943, column: 9, scope: !15770)
!15774 = !DILocation(line: 10944, column: 20, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15763, file: !21, line: 10943, column: 16)
!15776 = !DILocation(line: 10944, column: 13, scope: !15775)
!15777 = distinct !{!15777, !15739, !15778, !4470}
!15778 = !DILocation(line: 10946, column: 5, scope: !15707)
!15779 = !DILocation(line: 10947, column: 9, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15707, file: !21, line: 10947, column: 9)
!15781 = !DILocation(line: 10947, column: 22, scope: !15780)
!15782 = !DILocation(line: 10947, column: 30, scope: !15780)
!15783 = !DILocation(line: 10947, column: 35, scope: !15780)
!15784 = !DILocation(line: 10947, column: 19, scope: !15780)
!15785 = !DILocation(line: 10947, column: 9, scope: !15707)
!15786 = !DILocation(line: 10948, column: 16, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15780, file: !21, line: 10947, column: 46)
!15788 = !DILocation(line: 10948, column: 9, scope: !15787)
!15789 = !DILocation(line: 10950, column: 16, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15780, file: !21, line: 10949, column: 12)
!15791 = !DILocation(line: 10950, column: 20, scope: !15790)
!15792 = !DILocation(line: 10950, column: 9, scope: !15790)
!15793 = !DILocation(line: 10952, column: 1, scope: !15707)
!15794 = !DISubprogram(name: "PyUnicode_AsUTF8", scope: !13, file: !13, line: 857, type: !13319, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15795 = !DISubprogram(name: "PyCode_NewEmpty", scope: !640, file: !640, line: 163, type: !15796, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15796 = !DISubroutineType(types: !15797)
!15797 = !{!637, !54, !54, !7}
!15798 = !DISubprogram(name: "PyMem_Realloc", scope: !5004, file: !5004, line: 54, type: !15799, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15799 = !DISubroutineType(types: !15800)
!15800 = !{!27, !27, !341}

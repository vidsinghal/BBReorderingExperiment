; ModuleID = 'samples/994.bc'
source_filename = "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src/Cython/Runtime/refnanny.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr }
%struct.PyModuleDef_Base = type { %struct._object, ptr, i64, ptr }
%struct._object = type { i64, ptr }
%struct.PyMethodDef = type { ptr, ptr, i32, ptr }
%struct.PyModuleDef_Slot = type { i32, ptr }
%struct._typeobject = type { %struct.PyVarObject, ptr, i64, i64, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr }
%struct.PyVarObject = type { %struct._object, i64 }
%struct.__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.__pyx_mstate = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.__Pyx_CachedCFunction = type { ptr, ptr, ptr, ptr, i32 }
%struct.__pyx_vtabstruct_6Cython_7Runtime_8refnanny_Context = type { ptr, ptr, ptr }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.PyGetSetDef = type { ptr, ptr, ptr, ptr, ptr }
%struct.__Pyx_CodeObjectCache = type { i32, i32, ptr }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x ptr] }
%struct.PyListObject = type { %struct.PyVarObject, ptr, i64 }
%struct._ts = type { ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, i64, i64, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i64, i64, %struct.PyTraceInfo, ptr, ptr, ptr, %struct._err_stackitem, %struct._PyCFrame }
%struct.PyTraceInfo = type { ptr, %struct._line_offsets }
%struct._line_offsets = type { i32, i32, i32, %struct._opaque }
%struct._opaque = type { i32, ptr, ptr }
%struct._err_stackitem = type { ptr, ptr }
%struct._PyCFrame = type { i8, ptr, ptr }
%struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context = type { %struct._object, ptr, ptr, ptr, ptr, ptr, i64 }
%struct.__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable = type { i32, ptr }
%struct.PyMethodObject = type { %struct._object, ptr, ptr, ptr, ptr }
%struct._frame = type { %struct._object, ptr, ptr, ptr, i32, i8, i8, i8, [1 x ptr] }
%struct.__Pyx_StringTabEntry = type { ptr, ptr, i64, ptr, i8, i8, i8 }
%struct.PyDictObject = type { %struct._object, i64, i64, ptr, ptr }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, ptr }
%struct.anon = type { i32 }
%struct.PyNumberMethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.PyFloatObject = type { %struct._object, double }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, ptr, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { ptr }
%struct.PyCFunctionObject = type { %struct._object, ptr, ptr, ptr, ptr, ptr }
%struct.PyBaseExceptionObject = type { %struct._object, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.PyMappingMethods = type { ptr, ptr, ptr }
%struct.PySequenceMethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.__Pyx_CodeObjectCacheEntry = type { ptr, i32 }

@__pyx_module_is_main_Cython__Runtime__refnanny = global i32 0, align 4, !dbg !0
@__pyx_moduledef = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, ptr null }, ptr null, i64 0, ptr null }, ptr @.str, ptr null, i64 0, ptr @__pyx_methods, ptr @__pyx_moduledef_slots, ptr null, ptr null, ptr null }, align 8, !dbg !563
@.str = private unnamed_addr constant [9 x i8] c"refnanny\00", align 1, !dbg !558
@__pyx_methods = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16, !dbg !593
@__pyx_moduledef_slots = internal global [3 x %struct.PyModuleDef_Slot] [%struct.PyModuleDef_Slot { i32 1, ptr @__pyx_pymod_create }, %struct.PyModuleDef_Slot { i32 2, ptr @__pyx_pymod_exec_refnanny }, %struct.PyModuleDef_Slot zeroinitializer], align 16, !dbg !596
@__pyx_m = internal global ptr null, align 8, !dbg !648
@.str.1 = private unnamed_addr constant [5 x i8] c"name\00", align 1, !dbg !601
@.str.2 = private unnamed_addr constant [7 x i8] c"loader\00", align 1, !dbg !606
@.str.3 = private unnamed_addr constant [11 x i8] c"__loader__\00", align 1, !dbg !611
@.str.4 = private unnamed_addr constant [7 x i8] c"origin\00", align 1, !dbg !616
@.str.5 = private unnamed_addr constant [9 x i8] c"__file__\00", align 1, !dbg !618
@.str.6 = private unnamed_addr constant [7 x i8] c"parent\00", align 1, !dbg !620
@.str.7 = private unnamed_addr constant [12 x i8] c"__package__\00", align 1, !dbg !622
@.str.8 = private unnamed_addr constant [27 x i8] c"submodule_search_locations\00", align 1, !dbg !627
@.str.9 = private unnamed_addr constant [9 x i8] c"__path__\00", align 1, !dbg !632
@__Pyx_check_single_interpreter.main_interpreter_id = internal global i64 -1, align 8, !dbg !634
@PyExc_ImportError = external global ptr, align 8
@.str.10 = private unnamed_addr constant [95 x i8] c"Interpreter change detected - this module can only be loaded into one interpreter per process.\00", align 1, !dbg !643
@_Py_NoneStruct = external global %struct._object, align 8
@PyExc_AttributeError = external global ptr, align 8
@PyExc_RuntimeError = external global ptr, align 8
@.str.11 = private unnamed_addr constant [81 x i8] c"Module 'refnanny' has already been imported. Re-initialisation is not supported.\00", align 1, !dbg !650
@__pyx_mstate_global = internal global ptr @__pyx_mstate_global_static, align 8, !dbg !679
@__pyx_f = internal global [2 x ptr] [ptr @.str.18, ptr @.str.19], align 16, !dbg !757
@.str.12 = private unnamed_addr constant [9 x i8] c"builtins\00", align 1, !dbg !655
@.str.13 = private unnamed_addr constant [15 x i8] c"cython_runtime\00", align 1, !dbg !657
@.str.14 = private unnamed_addr constant [13 x i8] c"__builtins__\00", align 1, !dbg !662
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !667
@.str.16 = private unnamed_addr constant [24 x i8] c"Cython.Runtime.refnanny\00", align 1, !dbg !669
@__pyx_builtin_range = internal global ptr null, align 8, !dbg !1198
@PyTuple_Type = external global %struct._typeobject, align 8
@PyList_Type = external global %struct._typeobject, align 8
@__pyx_v_6Cython_7Runtime_8refnanny_api = internal global %struct.__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct zeroinitializer, align 8, !dbg !1206
@.str.17 = private unnamed_addr constant [29 x i8] c"init Cython.Runtime.refnanny\00", align 1, !dbg !674
@__pyx_mstate_global_static = internal global %struct.__pyx_mstate zeroinitializer, align 8, !dbg !745
@.str.18 = private unnamed_addr constant [28 x i8] c"Cython/Runtime/refnanny.pyx\00", align 1, !dbg !747
@.str.19 = private unnamed_addr constant [33 x i8] c"Cython/Includes/cpython/type.pxd\00", align 1, !dbg !752
@.str.20 = private unnamed_addr constant [78 x i8] c"compile time Python version %d.%d of module '%.100s' %s runtime version %d.%d\00", align 1, !dbg !762
@.str.21 = private unnamed_addr constant [15 x i8] c"was newer than\00", align 1, !dbg !767
@.str.22 = private unnamed_addr constant [15 x i8] c"does not match\00", align 1, !dbg !769
@Py_Version = external constant i64, align 8
@PyDict_Type = external global %struct._typeobject, align 8
@__pyx_umethod_PyDict_Type_get = internal global %struct.__Pyx_CachedCFunction zeroinitializer, align 8, !dbg !771
@__pyx_filename = internal global ptr null, align 8, !dbg !918
@__pyx_lineno = internal global i32 0, align 4, !dbg !920
@__pyx_clineno = internal global i32 0, align 4, !dbg !922
@__pyx_k_ = internal constant [5 x i8] c"\0A  (\00", align 1, !dbg !781
@__pyx_k_Context = internal constant [8 x i8] c"Context\00", align 1, !dbg !784
@__pyx_k_LOG_ALL = internal constant [8 x i8] c"LOG_ALL\00", align 1, !dbg !789
@__pyx_k_LOG_NONE = internal constant [9 x i8] c"LOG_NONE\00", align 1, !dbg !791
@__pyx_k_NULL = internal constant [7 x i8] c"<NULL>\00", align 1, !dbg !794
@__pyx_k_NULL_argument_on_line = internal constant [23 x i8] c"NULL argument on line \00", align 16, !dbg !797
@__pyx_k_REFNANNY = internal constant [11 x i8] c"REFNANNY: \00", align 1, !dbg !802
@__pyx_k_RefNannyAPI = internal constant [12 x i8] c"RefNannyAPI\00", align 1, !dbg !805
@__pyx_k_References_leaked = internal constant [19 x i8] c"References leaked:\00", align 16, !dbg !808
@__pyx_k_Too_many_decrefs_on_line = internal constant [26 x i8] c"Too many decrefs on line \00", align 16, !dbg !813
@__pyx_k__2 = internal constant [3 x i8] c", \00", align 1, !dbg !818
@__pyx_k__3 = internal constant [2 x i8] c"\0A\00", align 1, !dbg !821
@__pyx_k__4 = internal constant [2 x i8] c"*\00", align 1, !dbg !824
@__pyx_k__5 = internal constant [2 x i8] c":\00", align 1, !dbg !826
@__pyx_k__6 = internal constant [3 x i8] c": \00", align 1, !dbg !828
@__pyx_k__7 = internal constant [3 x i8] c"()\00", align 1, !dbg !830
@__pyx_k__9 = internal constant [2 x i8] c"?\00", align 1, !dbg !832
@__pyx_k_acquired_on_lines = internal constant [22 x i8] c") acquired on lines: \00", align 16, !dbg !834
@__pyx_k_append = internal constant [7 x i8] c"append\00", align 1, !dbg !839
@__pyx_k_cline_in_traceback = internal constant [19 x i8] c"cline_in_traceback\00", align 16, !dbg !841
@__pyx_k_decode = internal constant [7 x i8] c"decode\00", align 1, !dbg !843
@__pyx_k_delref = internal constant [7 x i8] c"delref\00", align 1, !dbg !845
@__pyx_k_disable = internal constant [8 x i8] c"disable\00", align 1, !dbg !847
@__pyx_k_enable = internal constant [7 x i8] c"enable\00", align 1, !dbg !849
@__pyx_k_exc_info = internal constant [9 x i8] c"exc_info\00", align 1, !dbg !851
@__pyx_k_filename = internal constant [9 x i8] c"filename\00", align 1, !dbg !853
@__pyx_k_gc = internal constant [3 x i8] c"gc\00", align 1, !dbg !855
@__pyx_k_get = internal constant [4 x i8] c"get\00", align 1, !dbg !857
@__pyx_k_id = internal constant [3 x i8] c"id\00", align 1, !dbg !862
@__pyx_k_import = internal constant [11 x i8] c"__import__\00", align 1, !dbg !864
@__pyx_k_initializing = internal constant [14 x i8] c"_initializing\00", align 1, !dbg !866
@__pyx_k_isenabled = internal constant [10 x i8] c"isenabled\00", align 1, !dbg !871
@__pyx_k_itervalues = internal constant [11 x i8] c"itervalues\00", align 1, !dbg !876
@__pyx_k_latin1 = internal constant [7 x i8] c"latin1\00", align 1, !dbg !878
@__pyx_k_line = internal constant [5 x i8] c"line\00", align 1, !dbg !880
@__pyx_k_loglevel = internal constant [9 x i8] c"loglevel\00", align 1, !dbg !882
@__pyx_k_main = internal constant [9 x i8] c"__main__\00", align 1, !dbg !884
@__pyx_k_name = internal constant [5 x i8] c"name\00", align 1, !dbg !886
@__pyx_k_name_2 = internal constant [9 x i8] c"__name__\00", align 1, !dbg !888
@__pyx_k_print = internal constant [6 x i8] c"print\00", align 1, !dbg !890
@__pyx_k_pyx_vtable = internal constant [15 x i8] c"__pyx_vtable__\00", align 1, !dbg !895
@__pyx_k_range = internal constant [6 x i8] c"range\00", align 1, !dbg !898
@__pyx_k_reference_acquired_on_lines = internal constant [31 x i8] c", reference acquired on lines \00", align 16, !dbg !900
@__pyx_k_reflog = internal constant [7 x i8] c"reflog\00", align 1, !dbg !905
@__pyx_k_refnanny_raised_an_exception_fro = internal constant [35 x i8] c"refnanny raised an exception from \00", align 16, !dbg !907
@__pyx_k_regref = internal constant [7 x i8] c"regref\00", align 1, !dbg !912
@__pyx_k_spec = internal constant [9 x i8] c"__spec__\00", align 1, !dbg !914
@__pyx_k_sys = internal constant [4 x i8] c"sys\00", align 1, !dbg !916
@__pyx_builtin_id = internal global ptr null, align 8, !dbg !929
@__pyx_builtin_print = internal global ptr null, align 8, !dbg !931
@PyExc_NameError = external global ptr, align 8
@.str.23 = private unnamed_addr constant [25 x i8] c"name '%U' is not defined\00", align 1, !dbg !924
@PyBaseObject_Type = external global %struct._typeobject, align 8
@__pyx_vtable_6Cython_7Runtime_8refnanny_Context = internal global %struct.__pyx_vtabstruct_6Cython_7Runtime_8refnanny_Context zeroinitializer, align 8, !dbg !933
@__pyx_vtabptr_6Cython_7Runtime_8refnanny_Context = internal global ptr null, align 8, !dbg !935
@__pyx_type_6Cython_7Runtime_8refnanny_Context = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.44, i64 64, i64 0, ptr @__pyx_tp_dealloc_6Cython_7Runtime_8refnanny_Context, i64 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i64 278528, ptr null, ptr @__pyx_tp_traverse_6Cython_7Runtime_8refnanny_Context, ptr @__pyx_tp_clear_6Cython_7Runtime_8refnanny_Context, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_methods_6Cython_7Runtime_8refnanny_Context, ptr null, ptr @__pyx_getsets_6Cython_7Runtime_8refnanny_Context, ptr null, ptr null, ptr null, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_tp_new_6Cython_7Runtime_8refnanny_Context, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8, !dbg !1111
@__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_version = internal global i64 0, align 8, !dbg !937
@__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !968
@.str.24 = private unnamed_addr constant [43 x i8] c"'NoneType' object has no attribute '%.30s'\00", align 1, !dbg !970
@.str.25 = private unnamed_addr constant [7 x i8] c"append\00", align 1, !dbg !975
@.str.26 = private unnamed_addr constant [4 x i8] c"get\00", align 1, !dbg !977
@PyExc_TypeError = external global ptr, align 8
@.str.27 = private unnamed_addr constant [39 x i8] c"'NoneType' object is not subscriptable\00", align 1, !dbg !980
@.str.28 = private unnamed_addr constant [39 x i8] c"Cython.Runtime.refnanny.Context.regref\00", align 1, !dbg !985
@__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version = internal global i64 0, align 8, !dbg !987
@__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !1008
@__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version.29 = internal global i64 0, align 8, !dbg !1010
@__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.30 = internal global ptr null, align 8, !dbg !1012
@__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version.31 = internal global i64 0, align 8, !dbg !1014
@__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.32 = internal global ptr null, align 8, !dbg !1016
@.str.33 = private unnamed_addr constant [28 x i8] c"Cython.Runtime.refnanny.log\00", align 1, !dbg !1018
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@DIGITS_HEX = internal constant [33 x i8] c"0123456789abcdef0123456789ABCDEF\00", align 16, !dbg !1020
@DIGIT_PAIRS_8 = internal constant [129 x i8] c"00010203040506071011121314151617202122232425262730313233343536374041424344454647505152535455565760616263646566677071727374757677\00", align 16, !dbg !1023
@DIGIT_PAIRS_10 = internal constant [201 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\00", align 16, !dbg !1028
@PyCFunction_Type = external global %struct._typeobject, align 8
@.str.34 = private unnamed_addr constant [31 x i8] c" while calling a Python object\00", align 1, !dbg !1033
@PyExc_SystemError = external global ptr, align 8
@.str.35 = private unnamed_addr constant [43 x i8] c"NULL result without error in PyObject_Call\00", align 1, !dbg !1036
@PyLong_Type = external global %struct._typeobject, align 8
@PyFloat_Type = external global %struct._typeobject, align 8
@.str.36 = private unnamed_addr constant [38 x i8] c"'%.200s' object has no attribute '%U'\00", align 1, !dbg !1038
@PyMethod_Type = external global %struct._typeobject, align 8
@__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_version = internal global i64 0, align 8, !dbg !1043
@__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !1078
@.str.37 = private unnamed_addr constant [39 x i8] c"Cython.Runtime.refnanny.Context.delref\00", align 1, !dbg !1080
@PyUnicode_Type = external global %struct._typeobject, align 8
@PyExc_OverflowError = external global ptr, align 8
@.str.38 = private unnamed_addr constant [46 x i8] c"join() result is too long for a Python string\00", align 1, !dbg !1082
@.str.39 = private unnamed_addr constant [11 x i8] c"itervalues\00", align 1, !dbg !1087
@PyExc_StopIteration = external global ptr, align 8
@.str.40 = private unnamed_addr constant [34 x i8] c"'NoneType' object is not iterable\00", align 1, !dbg !1089
@.str.41 = private unnamed_addr constant [36 x i8] c"Cython.Runtime.refnanny.Context.end\00", align 1, !dbg !1094
@.str.42 = private unnamed_addr constant [41 x i8] c"dictionary changed size during iteration\00", align 1, !dbg !1099
@.str.43 = private unnamed_addr constant [32 x i8] c"strings are too large to concat\00", align 1, !dbg !1104
@.str.44 = private unnamed_addr constant [32 x i8] c"Cython.Runtime.refnanny.Context\00", align 1, !dbg !1109
@__pyx_methods_6Cython_7Runtime_8refnanny_Context = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16, !dbg !1113
@__pyx_getsets_6Cython_7Runtime_8refnanny_Context = internal global [6 x %struct.PyGetSetDef] [%struct.PyGetSetDef { ptr @.str.1, ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_name, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.45, ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_filename, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.46, ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_refs, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.47, ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_errors, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.48, ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_start, ptr null, ptr null, ptr null }, %struct.PyGetSetDef zeroinitializer], align 16, !dbg !1124
@.str.45 = private unnamed_addr constant [9 x i8] c"filename\00", align 1, !dbg !1115
@.str.46 = private unnamed_addr constant [5 x i8] c"refs\00", align 1, !dbg !1117
@.str.47 = private unnamed_addr constant [7 x i8] c"errors\00", align 1, !dbg !1119
@.str.48 = private unnamed_addr constant [6 x i8] c"start\00", align 1, !dbg !1121
@.str.49 = private unnamed_addr constant [46 x i8] c"Cython.Runtime.refnanny.Context.start.__get__\00", align 1, !dbg !1127
@.str.50 = private unnamed_addr constant [10 x i8] c"__cinit__\00", align 1, !dbg !1129
@.str.51 = private unnamed_addr constant [42 x i8] c"Cython.Runtime.refnanny.Context.__cinit__\00", align 1, !dbg !1132
@.str.52 = private unnamed_addr constant [34 x i8] c"%.200s() keywords must be strings\00", align 1, !dbg !1137
@.str.53 = private unnamed_addr constant [45 x i8] c"%s() got an unexpected keyword argument '%U'\00", align 1, !dbg !1139
@.str.54 = private unnamed_addr constant [51 x i8] c"%s() got multiple values for keyword argument '%U'\00", align 1, !dbg !1144
@.str.55 = private unnamed_addr constant [9 x i8] c"at least\00", align 1, !dbg !1149
@.str.56 = private unnamed_addr constant [8 x i8] c"at most\00", align 1, !dbg !1151
@.str.57 = private unnamed_addr constant [8 x i8] c"exactly\00", align 1, !dbg !1154
@.str.58 = private unnamed_addr constant [60 x i8] c"%.200s() takes %.8s %zd positional argument%.1s (%zd given)\00", align 1, !dbg !1156
@.str.59 = private unnamed_addr constant [2 x i8] c"s\00", align 1, !dbg !1161
@.str.60 = private unnamed_addr constant [39 x i8] c"base class '%.200s' is not a heap type\00", align 1, !dbg !1164
@.str.61 = private unnamed_addr constant [172 x i8] c"extension type '%.200s' has no __dict__ slot, but base type '%.200s' has: either add 'cdef dict __dict__' to the extension type or add '__slots__ = [...]' to the base type\00", align 1, !dbg !1166
@.str.62 = private unnamed_addr constant [59 x i8] c"multiple bases have vtable conflict: '%.200s' and '%.200s'\00", align 1, !dbg !1171
@.str.63 = private unnamed_addr constant [39 x i8] c"invalid vtable found for imported type\00", align 1, !dbg !1176
@.str.64 = private unnamed_addr constant [5 x i8] c"type\00", align 1, !dbg !1178
@.str.65 = private unnamed_addr constant [35 x i8] c"%.200s.%.200s is not a type object\00", align 1, !dbg !1180
@PyExc_ValueError = external global ptr, align 8
@.str.66 = private unnamed_addr constant [115 x i8] c"%.200s.%.200s size changed, may indicate binary incompatibility. Expected %zd from C header, got %zd from PyObject\00", align 1, !dbg !1183
@.str.67 = private unnamed_addr constant [119 x i8] c"%.200s.%.200s size changed, may indicate binary incompatibility. Expected %zd from C header, got %zd-%zd from PyObject\00", align 1, !dbg !1188
@.str.68 = private unnamed_addr constant [107 x i8] c"%s.%s size changed, may indicate binary incompatibility. Expected %zd from C header, got %zd from PyObject\00", align 1, !dbg !1193
@.str.69 = private unnamed_addr constant [41 x i8] c"too many values to unpack (expected %zd)\00", align 1, !dbg !1200
@.str.70 = private unnamed_addr constant [39 x i8] c"need more than %zd value%.1s to unpack\00", align 1, !dbg !1202
@.str.71 = private unnamed_addr constant [31 x i8] c"Cython.Runtime.refnanny.INCREF\00", align 1, !dbg !1204
@.str.72 = private unnamed_addr constant [31 x i8] c"Cython.Runtime.refnanny.DECREF\00", align 1, !dbg !1226
@.str.73 = private unnamed_addr constant [43 x i8] c"Cython.Runtime.refnanny.GIVEREF_and_report\00", align 1, !dbg !1228
@.str.74 = private unnamed_addr constant [2 x i8] c".\00", align 1, !dbg !1230
@PyExc_ModuleNotFoundError = external global ptr, align 8
@.str.75 = private unnamed_addr constant [21 x i8] c"No module named '%U'\00", align 1, !dbg !1232
@.str.76 = private unnamed_addr constant [31 x i8] c"Cython.Runtime.refnanny.GOTREF\00", align 1, !dbg !1237
@.str.77 = private unnamed_addr constant [32 x i8] c"Cython.Runtime.refnanny.GIVEREF\00", align 1, !dbg !1239
@PyExc_Exception = external global ptr, align 8
@.str.78 = private unnamed_addr constant [37 x i8] c"Cython.Runtime.refnanny.SetupContext\00", align 1, !dbg !1241
@.str.79 = private unnamed_addr constant [38 x i8] c"Cython.Runtime.refnanny.FinishContext\00", align 1, !dbg !1246
@.str.80 = private unnamed_addr constant [8 x i8] c"context\00", align 1, !dbg !1248
@PyExc_UnboundLocalError = external global ptr, align 8
@.str.81 = private unnamed_addr constant [49 x i8] c"local variable '%s' referenced before assignment\00", align 1, !dbg !1250
@__Pyx_CLineForTraceback.__pyx_dict_version = internal global i64 0, align 8, !dbg !1255
@__Pyx_CLineForTraceback.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !1419
@__pyx_code_cache = internal global %struct.__Pyx_CodeObjectCache zeroinitializer, align 8, !dbg !1421
@.str.82 = private unnamed_addr constant [11 x i8] c"%s (%s:%d)\00", align 1, !dbg !1428
@__pyx_cfilenm = internal global ptr @.str.83, align 8, !dbg !1435
@.str.83 = private unnamed_addr constant [166 x i8] c"/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src/Cython/Runtime/refnanny.c\00", align 1, !dbg !1430

; Function Attrs: nounwind uwtable
define ptr @PyInit_refnanny() #0 !dbg !1443 {
entry:
  %call = call ptr @PyModuleDef_Init(ptr noundef @__pyx_moduledef), !dbg !1444
  ret ptr %call, !dbg !1445
}

declare !dbg !1446 ptr @PyModuleDef_Init(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pymod_create(ptr noundef %spec, ptr noundef %def) #0 !dbg !1451 {
entry:
  %retval = alloca ptr, align 8
  %spec.addr = alloca ptr, align 8
  %def.addr = alloca ptr, align 8
  %module = alloca ptr, align 8
  %moddict = alloca ptr, align 8
  %modname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %spec.addr, metadata !1455, metadata !DIExpression()), !dbg !1465
  store ptr %def, ptr %def.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %def.addr, metadata !1456, metadata !DIExpression()), !dbg !1466
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #10, !dbg !1467
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !1457, metadata !DIExpression()), !dbg !1468
  store ptr null, ptr %module, align 8, !dbg !1468, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %moddict) #10, !dbg !1467
  tail call void @llvm.dbg.declare(metadata ptr %moddict, metadata !1458, metadata !DIExpression()), !dbg !1469
  call void @llvm.lifetime.start.p0(i64 8, ptr %modname) #10, !dbg !1467
  tail call void @llvm.dbg.declare(metadata ptr %modname, metadata !1459, metadata !DIExpression()), !dbg !1470
  %0 = load ptr, ptr %def.addr, align 8, !dbg !1471, !tbaa !1461
  %call = call i32 @__Pyx_check_single_interpreter(), !dbg !1472
  %tobool = icmp ne i32 %call, 0, !dbg !1472
  br i1 %tobool, label %if.then, label %if.end, !dbg !1474

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !1475
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1475

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr @__pyx_m, align 8, !dbg !1476, !tbaa !1461
  %tobool1 = icmp ne ptr %1, null, !dbg !1476
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !1478

if.then2:                                         ; preds = %if.end
  %2 = load ptr, ptr @__pyx_m, align 8, !dbg !1479, !tbaa !1461
  call void @Py_INCREF(ptr noundef %2), !dbg !1479
  %3 = load ptr, ptr @__pyx_m, align 8, !dbg !1479, !tbaa !1461
  store ptr %3, ptr %retval, align 8, !dbg !1480
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1480

if.end3:                                          ; preds = %if.end
  %4 = load ptr, ptr %spec.addr, align 8, !dbg !1481, !tbaa !1461
  %call4 = call ptr @PyObject_GetAttrString(ptr noundef %4, ptr noundef @.str.1), !dbg !1482
  store ptr %call4, ptr %modname, align 8, !dbg !1483, !tbaa !1461
  %5 = load ptr, ptr %modname, align 8, !dbg !1484, !tbaa !1461
  %tobool5 = icmp ne ptr %5, null, !dbg !1484
  %lnot = xor i1 %tobool5, true, !dbg !1484
  %lnot6 = xor i1 %lnot, true, !dbg !1484
  %lnot7 = xor i1 %lnot6, true, !dbg !1484
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !1484
  %conv = sext i32 %lnot.ext to i64, !dbg !1484
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1484
  %tobool8 = icmp ne i64 %expval, 0, !dbg !1484
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !1486

if.then9:                                         ; preds = %if.end3
  br label %bad, !dbg !1487

if.end10:                                         ; preds = %if.end3
  %6 = load ptr, ptr %modname, align 8, !dbg !1488, !tbaa !1461
  %call11 = call ptr @PyModule_NewObject(ptr noundef %6), !dbg !1489
  store ptr %call11, ptr %module, align 8, !dbg !1490, !tbaa !1461
  %7 = load ptr, ptr %modname, align 8, !dbg !1491, !tbaa !1461
  call void @Py_DECREF(ptr noundef %7), !dbg !1491
  %8 = load ptr, ptr %module, align 8, !dbg !1492, !tbaa !1461
  %tobool12 = icmp ne ptr %8, null, !dbg !1492
  %lnot13 = xor i1 %tobool12, true, !dbg !1492
  %lnot15 = xor i1 %lnot13, true, !dbg !1492
  %lnot17 = xor i1 %lnot15, true, !dbg !1492
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !1492
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !1492
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !1492
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !1492
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !1494

if.then22:                                        ; preds = %if.end10
  br label %bad, !dbg !1495

if.end23:                                         ; preds = %if.end10
  %9 = load ptr, ptr %module, align 8, !dbg !1496, !tbaa !1461
  %call24 = call ptr @PyModule_GetDict(ptr noundef %9), !dbg !1497
  store ptr %call24, ptr %moddict, align 8, !dbg !1498, !tbaa !1461
  %10 = load ptr, ptr %moddict, align 8, !dbg !1499, !tbaa !1461
  %tobool25 = icmp ne ptr %10, null, !dbg !1499
  %lnot26 = xor i1 %tobool25, true, !dbg !1499
  %lnot28 = xor i1 %lnot26, true, !dbg !1499
  %lnot30 = xor i1 %lnot28, true, !dbg !1499
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !1499
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !1499
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !1499
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !1499
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !1501

if.then35:                                        ; preds = %if.end23
  br label %bad, !dbg !1502

if.end36:                                         ; preds = %if.end23
  %11 = load ptr, ptr %spec.addr, align 8, !dbg !1503, !tbaa !1461
  %12 = load ptr, ptr %moddict, align 8, !dbg !1503, !tbaa !1461
  %call37 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %11, ptr noundef %12, ptr noundef @.str.2, ptr noundef @.str.3, i32 noundef 1), !dbg !1503
  %cmp = icmp slt i32 %call37, 0, !dbg !1503
  %lnot39 = xor i1 %cmp, true, !dbg !1503
  %lnot41 = xor i1 %lnot39, true, !dbg !1503
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !1503
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !1503
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0), !dbg !1503
  %tobool45 = icmp ne i64 %expval44, 0, !dbg !1503
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !1505

if.then46:                                        ; preds = %if.end36
  br label %bad, !dbg !1506

if.end47:                                         ; preds = %if.end36
  %13 = load ptr, ptr %spec.addr, align 8, !dbg !1507, !tbaa !1461
  %14 = load ptr, ptr %moddict, align 8, !dbg !1507, !tbaa !1461
  %call48 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %13, ptr noundef %14, ptr noundef @.str.4, ptr noundef @.str.5, i32 noundef 1), !dbg !1507
  %cmp49 = icmp slt i32 %call48, 0, !dbg !1507
  %lnot51 = xor i1 %cmp49, true, !dbg !1507
  %lnot53 = xor i1 %lnot51, true, !dbg !1507
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !1507
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !1507
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !1507
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !1507
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !1509

if.then58:                                        ; preds = %if.end47
  br label %bad, !dbg !1510

if.end59:                                         ; preds = %if.end47
  %15 = load ptr, ptr %spec.addr, align 8, !dbg !1511, !tbaa !1461
  %16 = load ptr, ptr %moddict, align 8, !dbg !1511, !tbaa !1461
  %call60 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %15, ptr noundef %16, ptr noundef @.str.6, ptr noundef @.str.7, i32 noundef 1), !dbg !1511
  %cmp61 = icmp slt i32 %call60, 0, !dbg !1511
  %lnot63 = xor i1 %cmp61, true, !dbg !1511
  %lnot65 = xor i1 %lnot63, true, !dbg !1511
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !1511
  %conv67 = sext i32 %lnot.ext66 to i64, !dbg !1511
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0), !dbg !1511
  %tobool69 = icmp ne i64 %expval68, 0, !dbg !1511
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !1513

if.then70:                                        ; preds = %if.end59
  br label %bad, !dbg !1514

if.end71:                                         ; preds = %if.end59
  %17 = load ptr, ptr %spec.addr, align 8, !dbg !1515, !tbaa !1461
  %18 = load ptr, ptr %moddict, align 8, !dbg !1515, !tbaa !1461
  %call72 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %17, ptr noundef %18, ptr noundef @.str.8, ptr noundef @.str.9, i32 noundef 0), !dbg !1515
  %cmp73 = icmp slt i32 %call72, 0, !dbg !1515
  %lnot75 = xor i1 %cmp73, true, !dbg !1515
  %lnot77 = xor i1 %lnot75, true, !dbg !1515
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !1515
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !1515
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 0), !dbg !1515
  %tobool81 = icmp ne i64 %expval80, 0, !dbg !1515
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !1517

if.then82:                                        ; preds = %if.end71
  br label %bad, !dbg !1518

if.end83:                                         ; preds = %if.end71
  %19 = load ptr, ptr %module, align 8, !dbg !1519, !tbaa !1461
  store ptr %19, ptr %retval, align 8, !dbg !1520
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1520

bad:                                              ; preds = %if.then82, %if.then70, %if.then58, %if.then46, %if.then35, %if.then22, %if.then9
  tail call void @llvm.dbg.label(metadata !1460), !dbg !1521
  %20 = load ptr, ptr %module, align 8, !dbg !1522, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %20), !dbg !1522
  store ptr null, ptr %retval, align 8, !dbg !1523
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1523

cleanup:                                          ; preds = %bad, %if.end83, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %modname) #10, !dbg !1524
  call void @llvm.lifetime.end.p0(i64 8, ptr %moddict) #10, !dbg !1524
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #10, !dbg !1524
  %21 = load ptr, ptr %retval, align 8, !dbg !1524
  ret ptr %21, !dbg !1524
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pymod_exec_refnanny(ptr noundef %__pyx_pyinit_module) #0 !dbg !1525 {
entry:
  %retval = alloca i32, align 4
  %__pyx_pyinit_module.addr = alloca ptr, align 8
  %stringtab_initialized = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %modules = alloca ptr, align 8
  %sequence = alloca ptr, align 8
  %size = alloca i64, align 8
  %index = alloca i64, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %__pyx_pyinit_module, ptr %__pyx_pyinit_module.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_pyinit_module.addr, metadata !1527, metadata !DIExpression()), !dbg !1554
  call void @llvm.lifetime.start.p0(i64 4, ptr %stringtab_initialized) #10, !dbg !1555
  tail call void @llvm.dbg.declare(metadata ptr %stringtab_initialized, metadata !1528, metadata !DIExpression()), !dbg !1556
  store i32 0, ptr %stringtab_initialized, align 4, !dbg !1556, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !1559
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !1529, metadata !DIExpression()), !dbg !1560
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !1560, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !1561
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !1530, metadata !DIExpression()), !dbg !1562
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !1562, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !1563
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !1531, metadata !DIExpression()), !dbg !1564
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !1564, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !1565
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !1532, metadata !DIExpression()), !dbg !1566
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !1566, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !1567
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !1533, metadata !DIExpression()), !dbg !1568
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !1568, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !1569
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !1534, metadata !DIExpression()), !dbg !1570
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !1571
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1535, metadata !DIExpression()), !dbg !1572
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !1572, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !1573
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1536, metadata !DIExpression()), !dbg !1574
  store ptr null, ptr %__pyx_filename, align 8, !dbg !1574, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !1575
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1537, metadata !DIExpression()), !dbg !1576
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !1576, !tbaa !1557
  %0 = load ptr, ptr @__pyx_m, align 8, !dbg !1577, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !1577
  br i1 %tobool, label %if.then, label %if.end2, !dbg !1579

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_m, align 8, !dbg !1580, !tbaa !1461
  %2 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !dbg !1583, !tbaa !1461
  %cmp = icmp eq ptr %1, %2, !dbg !1584
  br i1 %cmp, label %if.then1, label %if.end, !dbg !1585

if.then1:                                         ; preds = %if.then
  store i32 0, ptr %retval, align 4, !dbg !1586
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup379, !dbg !1586

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !1587, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.11), !dbg !1588
  store i32 -1, ptr %retval, align 4, !dbg !1589
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup379, !dbg !1589

if.end2:                                          ; preds = %entry
  %4 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !dbg !1590, !tbaa !1461
  store ptr %4, ptr @__pyx_m, align 8, !dbg !1591, !tbaa !1461
  %5 = load ptr, ptr @__pyx_m, align 8, !dbg !1592, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !1592
  %6 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1593, !tbaa !1461
  %7 = load ptr, ptr @__pyx_m, align 8, !dbg !1594, !tbaa !1461
  %call = call ptr @PyModule_GetDict(ptr noundef %7), !dbg !1595
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1596, !tbaa !1461
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 0, !dbg !1596
  store ptr %call, ptr %__pyx_d, align 8, !dbg !1597, !tbaa !1598
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1600, !tbaa !1461
  %__pyx_d3 = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 0, !dbg !1600
  %10 = load ptr, ptr %__pyx_d3, align 8, !dbg !1600, !tbaa !1598
  %tobool4 = icmp ne ptr %10, null, !dbg !1600
  %lnot = xor i1 %tobool4, true, !dbg !1600
  %lnot5 = xor i1 %lnot, true, !dbg !1600
  %lnot6 = xor i1 %lnot5, true, !dbg !1600
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !1600
  %conv = sext i32 %lnot.ext to i64, !dbg !1600
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1600
  %tobool7 = icmp ne i64 %expval, 0, !dbg !1600
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !1602

if.then8:                                         ; preds = %if.end2
  %11 = load ptr, ptr @__pyx_f, align 16, !dbg !1603, !tbaa !1461
  store ptr %11, ptr %__pyx_filename, align 8, !dbg !1603, !tbaa !1461
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !1603, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1603, !tbaa !1557
  %13 = load i32, ptr %__pyx_lineno, align 4, !dbg !1603, !tbaa !1557
  store i32 6535, ptr %__pyx_clineno, align 4, !dbg !1603, !tbaa !1557
  %14 = load i32, ptr %__pyx_clineno, align 4, !dbg !1603, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1606

if.end9:                                          ; preds = %if.end2
  %15 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1607, !tbaa !1461
  %__pyx_d10 = getelementptr inbounds %struct.__pyx_mstate, ptr %15, i32 0, i32 0, !dbg !1607
  %16 = load ptr, ptr %__pyx_d10, align 8, !dbg !1607, !tbaa !1598
  call void @Py_INCREF(ptr noundef %16), !dbg !1607
  %call11 = call ptr @PyImport_AddModule(ptr noundef @.str.12), !dbg !1608
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1609, !tbaa !1461
  %__pyx_b = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 1, !dbg !1609
  store ptr %call11, ptr %__pyx_b, align 8, !dbg !1610, !tbaa !1611
  %18 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1612, !tbaa !1461
  %__pyx_b12 = getelementptr inbounds %struct.__pyx_mstate, ptr %18, i32 0, i32 1, !dbg !1612
  %19 = load ptr, ptr %__pyx_b12, align 8, !dbg !1612, !tbaa !1611
  %tobool13 = icmp ne ptr %19, null, !dbg !1612
  %lnot14 = xor i1 %tobool13, true, !dbg !1612
  %lnot16 = xor i1 %lnot14, true, !dbg !1612
  %lnot18 = xor i1 %lnot16, true, !dbg !1612
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !1612
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !1612
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 0), !dbg !1612
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !1612
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !1614

if.then23:                                        ; preds = %if.end9
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !1615, !tbaa !1461
  store ptr %20, ptr %__pyx_filename, align 8, !dbg !1615, !tbaa !1461
  %21 = load ptr, ptr %__pyx_filename, align 8, !dbg !1615, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1615, !tbaa !1557
  %22 = load i32, ptr %__pyx_lineno, align 4, !dbg !1615, !tbaa !1557
  store i32 6537, ptr %__pyx_clineno, align 4, !dbg !1615, !tbaa !1557
  %23 = load i32, ptr %__pyx_clineno, align 4, !dbg !1615, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1618

if.end24:                                         ; preds = %if.end9
  %24 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1619, !tbaa !1461
  %__pyx_b25 = getelementptr inbounds %struct.__pyx_mstate, ptr %24, i32 0, i32 1, !dbg !1619
  %25 = load ptr, ptr %__pyx_b25, align 8, !dbg !1619, !tbaa !1611
  call void @Py_INCREF(ptr noundef %25), !dbg !1619
  %call26 = call ptr @PyImport_AddModule(ptr noundef @.str.13), !dbg !1620
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1621, !tbaa !1461
  %__pyx_cython_runtime = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 2, !dbg !1621
  store ptr %call26, ptr %__pyx_cython_runtime, align 8, !dbg !1622, !tbaa !1623
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1624, !tbaa !1461
  %__pyx_cython_runtime27 = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 2, !dbg !1624
  %28 = load ptr, ptr %__pyx_cython_runtime27, align 8, !dbg !1624, !tbaa !1623
  %tobool28 = icmp ne ptr %28, null, !dbg !1624
  %lnot29 = xor i1 %tobool28, true, !dbg !1624
  %lnot31 = xor i1 %lnot29, true, !dbg !1624
  %lnot33 = xor i1 %lnot31, true, !dbg !1624
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !1624
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !1624
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 0), !dbg !1624
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !1624
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !1626

if.then38:                                        ; preds = %if.end24
  %29 = load ptr, ptr @__pyx_f, align 16, !dbg !1627, !tbaa !1461
  store ptr %29, ptr %__pyx_filename, align 8, !dbg !1627, !tbaa !1461
  %30 = load ptr, ptr %__pyx_filename, align 8, !dbg !1627, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1627, !tbaa !1557
  %31 = load i32, ptr %__pyx_lineno, align 4, !dbg !1627, !tbaa !1557
  store i32 6539, ptr %__pyx_clineno, align 4, !dbg !1627, !tbaa !1557
  %32 = load i32, ptr %__pyx_clineno, align 4, !dbg !1627, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1630

if.end39:                                         ; preds = %if.end24
  %33 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1631, !tbaa !1461
  %__pyx_cython_runtime40 = getelementptr inbounds %struct.__pyx_mstate, ptr %33, i32 0, i32 2, !dbg !1631
  %34 = load ptr, ptr %__pyx_cython_runtime40, align 8, !dbg !1631, !tbaa !1623
  call void @Py_INCREF(ptr noundef %34), !dbg !1631
  %35 = load ptr, ptr @__pyx_m, align 8, !dbg !1632, !tbaa !1461
  %36 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1634, !tbaa !1461
  %__pyx_b41 = getelementptr inbounds %struct.__pyx_mstate, ptr %36, i32 0, i32 1, !dbg !1634
  %37 = load ptr, ptr %__pyx_b41, align 8, !dbg !1634, !tbaa !1611
  %call42 = call i32 @PyObject_SetAttrString(ptr noundef %35, ptr noundef @.str.14, ptr noundef %37), !dbg !1635
  %cmp43 = icmp slt i32 %call42, 0, !dbg !1636
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !1637

if.then45:                                        ; preds = %if.end39
  %38 = load ptr, ptr @__pyx_f, align 16, !dbg !1638, !tbaa !1461
  store ptr %38, ptr %__pyx_filename, align 8, !dbg !1638, !tbaa !1461
  %39 = load ptr, ptr %__pyx_filename, align 8, !dbg !1638, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1638, !tbaa !1557
  %40 = load i32, ptr %__pyx_lineno, align 4, !dbg !1638, !tbaa !1557
  store i32 6541, ptr %__pyx_clineno, align 4, !dbg !1638, !tbaa !1557
  %41 = load i32, ptr %__pyx_clineno, align 4, !dbg !1638, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1641

if.end46:                                         ; preds = %if.end39
  %call47 = call i64 @__Pyx_get_runtime_version(), !dbg !1642
  %call48 = call i32 @__Pyx_check_binary_version(i64 noundef 51054320, i64 noundef %call47, i32 noundef 0), !dbg !1644
  %cmp49 = icmp slt i32 %call48, 0, !dbg !1645
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !1646

if.then51:                                        ; preds = %if.end46
  %42 = load ptr, ptr @__pyx_f, align 16, !dbg !1647, !tbaa !1461
  store ptr %42, ptr %__pyx_filename, align 8, !dbg !1647, !tbaa !1461
  %43 = load ptr, ptr %__pyx_filename, align 8, !dbg !1647, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1647, !tbaa !1557
  %44 = load i32, ptr %__pyx_lineno, align 4, !dbg !1647, !tbaa !1557
  store i32 6552, ptr %__pyx_clineno, align 4, !dbg !1647, !tbaa !1557
  %45 = load i32, ptr %__pyx_clineno, align 4, !dbg !1647, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1650

if.end52:                                         ; preds = %if.end46
  %call53 = call ptr @PyTuple_New(i64 noundef 0), !dbg !1651
  %46 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1652, !tbaa !1461
  %__pyx_empty_tuple = getelementptr inbounds %struct.__pyx_mstate, ptr %46, i32 0, i32 3, !dbg !1652
  store ptr %call53, ptr %__pyx_empty_tuple, align 8, !dbg !1653, !tbaa !1654
  %47 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1655, !tbaa !1461
  %__pyx_empty_tuple54 = getelementptr inbounds %struct.__pyx_mstate, ptr %47, i32 0, i32 3, !dbg !1655
  %48 = load ptr, ptr %__pyx_empty_tuple54, align 8, !dbg !1655, !tbaa !1654
  %tobool55 = icmp ne ptr %48, null, !dbg !1655
  %lnot56 = xor i1 %tobool55, true, !dbg !1655
  %lnot58 = xor i1 %lnot56, true, !dbg !1655
  %lnot60 = xor i1 %lnot58, true, !dbg !1655
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !1655
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !1655
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0), !dbg !1655
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !1655
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !1657

if.then65:                                        ; preds = %if.end52
  %49 = load ptr, ptr @__pyx_f, align 16, !dbg !1658, !tbaa !1461
  store ptr %49, ptr %__pyx_filename, align 8, !dbg !1658, !tbaa !1461
  %50 = load ptr, ptr %__pyx_filename, align 8, !dbg !1658, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1658, !tbaa !1557
  %51 = load i32, ptr %__pyx_lineno, align 4, !dbg !1658, !tbaa !1557
  store i32 6556, ptr %__pyx_clineno, align 4, !dbg !1658, !tbaa !1557
  %52 = load i32, ptr %__pyx_clineno, align 4, !dbg !1658, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1661

if.end66:                                         ; preds = %if.end52
  %call67 = call ptr @PyBytes_FromStringAndSize(ptr noundef @.str.15, i64 noundef 0), !dbg !1662
  %53 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1663, !tbaa !1461
  %__pyx_empty_bytes = getelementptr inbounds %struct.__pyx_mstate, ptr %53, i32 0, i32 4, !dbg !1663
  store ptr %call67, ptr %__pyx_empty_bytes, align 8, !dbg !1664, !tbaa !1665
  %54 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1666, !tbaa !1461
  %__pyx_empty_bytes68 = getelementptr inbounds %struct.__pyx_mstate, ptr %54, i32 0, i32 4, !dbg !1666
  %55 = load ptr, ptr %__pyx_empty_bytes68, align 8, !dbg !1666, !tbaa !1665
  %tobool69 = icmp ne ptr %55, null, !dbg !1666
  %lnot70 = xor i1 %tobool69, true, !dbg !1666
  %lnot72 = xor i1 %lnot70, true, !dbg !1666
  %lnot74 = xor i1 %lnot72, true, !dbg !1666
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !1666
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !1666
  %expval77 = call i64 @llvm.expect.i64(i64 %conv76, i64 0), !dbg !1666
  %tobool78 = icmp ne i64 %expval77, 0, !dbg !1666
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !1668

if.then79:                                        ; preds = %if.end66
  %56 = load ptr, ptr @__pyx_f, align 16, !dbg !1669, !tbaa !1461
  store ptr %56, ptr %__pyx_filename, align 8, !dbg !1669, !tbaa !1461
  %57 = load ptr, ptr %__pyx_filename, align 8, !dbg !1669, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1669, !tbaa !1557
  %58 = load i32, ptr %__pyx_lineno, align 4, !dbg !1669, !tbaa !1557
  store i32 6557, ptr %__pyx_clineno, align 4, !dbg !1669, !tbaa !1557
  %59 = load i32, ptr %__pyx_clineno, align 4, !dbg !1669, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1672

if.end80:                                         ; preds = %if.end66
  %call81 = call ptr @PyUnicode_FromStringAndSize(ptr noundef @.str.15, i64 noundef 0), !dbg !1673
  %60 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1674, !tbaa !1461
  %__pyx_empty_unicode = getelementptr inbounds %struct.__pyx_mstate, ptr %60, i32 0, i32 5, !dbg !1674
  store ptr %call81, ptr %__pyx_empty_unicode, align 8, !dbg !1675, !tbaa !1676
  %61 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1677, !tbaa !1461
  %__pyx_empty_unicode82 = getelementptr inbounds %struct.__pyx_mstate, ptr %61, i32 0, i32 5, !dbg !1677
  %62 = load ptr, ptr %__pyx_empty_unicode82, align 8, !dbg !1677, !tbaa !1676
  %tobool83 = icmp ne ptr %62, null, !dbg !1677
  %lnot84 = xor i1 %tobool83, true, !dbg !1677
  %lnot86 = xor i1 %lnot84, true, !dbg !1677
  %lnot88 = xor i1 %lnot86, true, !dbg !1677
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !1677
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !1677
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 0), !dbg !1677
  %tobool92 = icmp ne i64 %expval91, 0, !dbg !1677
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !1679

if.then93:                                        ; preds = %if.end80
  %63 = load ptr, ptr @__pyx_f, align 16, !dbg !1680, !tbaa !1461
  store ptr %63, ptr %__pyx_filename, align 8, !dbg !1680, !tbaa !1461
  %64 = load ptr, ptr %__pyx_filename, align 8, !dbg !1680, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1680, !tbaa !1557
  %65 = load i32, ptr %__pyx_lineno, align 4, !dbg !1680, !tbaa !1557
  store i32 6558, ptr %__pyx_clineno, align 4, !dbg !1680, !tbaa !1557
  %66 = load i32, ptr %__pyx_clineno, align 4, !dbg !1680, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1683

if.end94:                                         ; preds = %if.end80
  %call95 = call i32 @__Pyx_InitConstants(), !dbg !1684
  %cmp96 = icmp slt i32 %call95, 0, !dbg !1686
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !1687

if.then98:                                        ; preds = %if.end94
  %67 = load ptr, ptr @__pyx_f, align 16, !dbg !1688, !tbaa !1461
  store ptr %67, ptr %__pyx_filename, align 8, !dbg !1688, !tbaa !1461
  %68 = load ptr, ptr %__pyx_filename, align 8, !dbg !1688, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1688, !tbaa !1557
  %69 = load i32, ptr %__pyx_lineno, align 4, !dbg !1688, !tbaa !1557
  store i32 6583, ptr %__pyx_clineno, align 4, !dbg !1688, !tbaa !1557
  %70 = load i32, ptr %__pyx_clineno, align 4, !dbg !1688, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1691

if.end99:                                         ; preds = %if.end94
  store i32 1, ptr %stringtab_initialized, align 4, !dbg !1692, !tbaa !1557
  %call100 = call i32 @__Pyx_InitGlobals(), !dbg !1693
  %cmp101 = icmp slt i32 %call100, 0, !dbg !1695
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !1696

if.then103:                                       ; preds = %if.end99
  %71 = load ptr, ptr @__pyx_f, align 16, !dbg !1697, !tbaa !1461
  store ptr %71, ptr %__pyx_filename, align 8, !dbg !1697, !tbaa !1461
  %72 = load ptr, ptr %__pyx_filename, align 8, !dbg !1697, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1697, !tbaa !1557
  %73 = load i32, ptr %__pyx_lineno, align 4, !dbg !1697, !tbaa !1557
  store i32 6585, ptr %__pyx_clineno, align 4, !dbg !1697, !tbaa !1557
  %74 = load i32, ptr %__pyx_clineno, align 4, !dbg !1697, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1700

if.end104:                                        ; preds = %if.end99
  %75 = load i32, ptr @__pyx_module_is_main_Cython__Runtime__refnanny, align 4, !dbg !1701, !tbaa !1557
  %tobool105 = icmp ne i32 %75, 0, !dbg !1701
  br i1 %tobool105, label %if.then106, label %if.end112, !dbg !1703

if.then106:                                       ; preds = %if.end104
  %76 = load ptr, ptr @__pyx_m, align 8, !dbg !1704, !tbaa !1461
  %77 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1707, !tbaa !1461
  %__pyx_n_s_name_2 = getelementptr inbounds %struct.__pyx_mstate, ptr %77, i32 0, i32 46, !dbg !1707
  %78 = load ptr, ptr %__pyx_n_s_name_2, align 8, !dbg !1707, !tbaa !1708
  %79 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1709, !tbaa !1461
  %__pyx_n_s_main = getelementptr inbounds %struct.__pyx_mstate, ptr %79, i32 0, i32 44, !dbg !1709
  %80 = load ptr, ptr %__pyx_n_s_main, align 8, !dbg !1709, !tbaa !1710
  %call107 = call i32 @PyObject_SetAttr(ptr noundef %76, ptr noundef %78, ptr noundef %80), !dbg !1711
  %cmp108 = icmp slt i32 %call107, 0, !dbg !1712
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !1713

if.then110:                                       ; preds = %if.then106
  %81 = load ptr, ptr @__pyx_f, align 16, !dbg !1714, !tbaa !1461
  store ptr %81, ptr %__pyx_filename, align 8, !dbg !1714, !tbaa !1461
  %82 = load ptr, ptr %__pyx_filename, align 8, !dbg !1714, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1714, !tbaa !1557
  %83 = load i32, ptr %__pyx_lineno, align 4, !dbg !1714, !tbaa !1557
  store i32 6590, ptr %__pyx_clineno, align 4, !dbg !1714, !tbaa !1557
  %84 = load i32, ptr %__pyx_clineno, align 4, !dbg !1714, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1717

if.end111:                                        ; preds = %if.then106
  br label %if.end112, !dbg !1718

if.end112:                                        ; preds = %if.end111, %if.end104
  call void @llvm.lifetime.start.p0(i64 8, ptr %modules) #10, !dbg !1719
  tail call void @llvm.dbg.declare(metadata ptr %modules, metadata !1538, metadata !DIExpression()), !dbg !1720
  %call113 = call ptr @PyImport_GetModuleDict(), !dbg !1721
  store ptr %call113, ptr %modules, align 8, !dbg !1720, !tbaa !1461
  %85 = load ptr, ptr %modules, align 8, !dbg !1722, !tbaa !1461
  %tobool114 = icmp ne ptr %85, null, !dbg !1722
  %lnot115 = xor i1 %tobool114, true, !dbg !1722
  %lnot117 = xor i1 %lnot115, true, !dbg !1722
  %lnot119 = xor i1 %lnot117, true, !dbg !1722
  %lnot.ext120 = zext i1 %lnot119 to i32, !dbg !1722
  %conv121 = sext i32 %lnot.ext120 to i64, !dbg !1722
  %expval122 = call i64 @llvm.expect.i64(i64 %conv121, i64 0), !dbg !1722
  %tobool123 = icmp ne i64 %expval122, 0, !dbg !1722
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !1724

if.then124:                                       ; preds = %if.end112
  %86 = load ptr, ptr @__pyx_f, align 16, !dbg !1725, !tbaa !1461
  store ptr %86, ptr %__pyx_filename, align 8, !dbg !1725, !tbaa !1461
  %87 = load ptr, ptr %__pyx_filename, align 8, !dbg !1725, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1725, !tbaa !1557
  %88 = load i32, ptr %__pyx_lineno, align 4, !dbg !1725, !tbaa !1557
  store i32 6594, ptr %__pyx_clineno, align 4, !dbg !1725, !tbaa !1557
  %89 = load i32, ptr %__pyx_clineno, align 4, !dbg !1725, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1728

if.end125:                                        ; preds = %if.end112
  %90 = load ptr, ptr %modules, align 8, !dbg !1729, !tbaa !1461
  %call126 = call ptr @PyDict_GetItemString(ptr noundef %90, ptr noundef @.str.16), !dbg !1731
  %tobool127 = icmp ne ptr %call126, null, !dbg !1731
  br i1 %tobool127, label %if.end141, label %if.then128, !dbg !1732

if.then128:                                       ; preds = %if.end125
  %91 = load ptr, ptr %modules, align 8, !dbg !1733, !tbaa !1461
  %92 = load ptr, ptr @__pyx_m, align 8, !dbg !1733, !tbaa !1461
  %call129 = call i32 @PyDict_SetItemString(ptr noundef %91, ptr noundef @.str.16, ptr noundef %92), !dbg !1733
  %cmp130 = icmp slt i32 %call129, 0, !dbg !1733
  %lnot132 = xor i1 %cmp130, true, !dbg !1733
  %lnot134 = xor i1 %lnot132, true, !dbg !1733
  %lnot.ext135 = zext i1 %lnot134 to i32, !dbg !1733
  %conv136 = sext i32 %lnot.ext135 to i64, !dbg !1733
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 0), !dbg !1733
  %tobool138 = icmp ne i64 %expval137, 0, !dbg !1733
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !1736

if.then139:                                       ; preds = %if.then128
  %93 = load ptr, ptr @__pyx_f, align 16, !dbg !1737, !tbaa !1461
  store ptr %93, ptr %__pyx_filename, align 8, !dbg !1737, !tbaa !1461
  %94 = load ptr, ptr %__pyx_filename, align 8, !dbg !1737, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1737, !tbaa !1557
  %95 = load i32, ptr %__pyx_lineno, align 4, !dbg !1737, !tbaa !1557
  store i32 6596, ptr %__pyx_clineno, align 4, !dbg !1737, !tbaa !1557
  %96 = load i32, ptr %__pyx_clineno, align 4, !dbg !1737, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1740

if.end140:                                        ; preds = %if.then128
  br label %if.end141, !dbg !1741

if.end141:                                        ; preds = %if.end140, %if.end125
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1742
  br label %cleanup, !dbg !1742

cleanup:                                          ; preds = %if.then139, %if.then124, %if.end141
  call void @llvm.lifetime.end.p0(i64 8, ptr %modules) #10, !dbg !1742
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup379 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %call142 = call i32 @__Pyx_InitCachedBuiltins(), !dbg !1743
  %cmp143 = icmp slt i32 %call142, 0, !dbg !1745
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !1746

if.then145:                                       ; preds = %cleanup.cont
  %97 = load ptr, ptr @__pyx_f, align 16, !dbg !1747, !tbaa !1461
  store ptr %97, ptr %__pyx_filename, align 8, !dbg !1747, !tbaa !1461
  %98 = load ptr, ptr %__pyx_filename, align 8, !dbg !1747, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1747, !tbaa !1557
  %99 = load i32, ptr %__pyx_lineno, align 4, !dbg !1747, !tbaa !1557
  store i32 6601, ptr %__pyx_clineno, align 4, !dbg !1747, !tbaa !1557
  %100 = load i32, ptr %__pyx_clineno, align 4, !dbg !1747, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1750

if.end146:                                        ; preds = %cleanup.cont
  %call147 = call i32 @__Pyx_InitCachedConstants(), !dbg !1751
  %cmp148 = icmp slt i32 %call147, 0, !dbg !1753
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !1754

if.then150:                                       ; preds = %if.end146
  %101 = load ptr, ptr @__pyx_f, align 16, !dbg !1755, !tbaa !1461
  store ptr %101, ptr %__pyx_filename, align 8, !dbg !1755, !tbaa !1461
  %102 = load ptr, ptr %__pyx_filename, align 8, !dbg !1755, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1755, !tbaa !1557
  %103 = load i32, ptr %__pyx_lineno, align 4, !dbg !1755, !tbaa !1557
  store i32 6603, ptr %__pyx_clineno, align 4, !dbg !1755, !tbaa !1557
  %104 = load i32, ptr %__pyx_clineno, align 4, !dbg !1755, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1758

if.end151:                                        ; preds = %if.end146
  %call152 = call i32 @__Pyx_modinit_global_init_code(), !dbg !1759
  %call153 = call i32 @__Pyx_modinit_variable_export_code(), !dbg !1760
  %call154 = call i32 @__Pyx_modinit_function_export_code(), !dbg !1761
  %call155 = call i32 @__Pyx_modinit_type_init_code(), !dbg !1762
  %cmp156 = icmp slt i32 %call155, 0, !dbg !1762
  %lnot158 = xor i1 %cmp156, true, !dbg !1762
  %lnot160 = xor i1 %lnot158, true, !dbg !1762
  %lnot.ext161 = zext i1 %lnot160 to i32, !dbg !1762
  %conv162 = sext i32 %lnot.ext161 to i64, !dbg !1762
  %expval163 = call i64 @llvm.expect.i64(i64 %conv162, i64 0), !dbg !1762
  %tobool164 = icmp ne i64 %expval163, 0, !dbg !1762
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !1764

if.then165:                                       ; preds = %if.end151
  %105 = load ptr, ptr @__pyx_f, align 16, !dbg !1765, !tbaa !1461
  store ptr %105, ptr %__pyx_filename, align 8, !dbg !1765, !tbaa !1461
  %106 = load ptr, ptr %__pyx_filename, align 8, !dbg !1765, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1765, !tbaa !1557
  %107 = load i32, ptr %__pyx_lineno, align 4, !dbg !1765, !tbaa !1557
  store i32 6608, ptr %__pyx_clineno, align 4, !dbg !1765, !tbaa !1557
  %108 = load i32, ptr %__pyx_clineno, align 4, !dbg !1765, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1768

if.end166:                                        ; preds = %if.end151
  %call167 = call i32 @__Pyx_modinit_type_import_code(), !dbg !1769
  %cmp168 = icmp slt i32 %call167, 0, !dbg !1769
  %lnot170 = xor i1 %cmp168, true, !dbg !1769
  %lnot172 = xor i1 %lnot170, true, !dbg !1769
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !1769
  %conv174 = sext i32 %lnot.ext173 to i64, !dbg !1769
  %expval175 = call i64 @llvm.expect.i64(i64 %conv174, i64 0), !dbg !1769
  %tobool176 = icmp ne i64 %expval175, 0, !dbg !1769
  br i1 %tobool176, label %if.then177, label %if.end178, !dbg !1771

if.then177:                                       ; preds = %if.end166
  %109 = load ptr, ptr @__pyx_f, align 16, !dbg !1772, !tbaa !1461
  store ptr %109, ptr %__pyx_filename, align 8, !dbg !1772, !tbaa !1461
  %110 = load ptr, ptr %__pyx_filename, align 8, !dbg !1772, !tbaa !1461
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1772, !tbaa !1557
  %111 = load i32, ptr %__pyx_lineno, align 4, !dbg !1772, !tbaa !1557
  store i32 6609, ptr %__pyx_clineno, align 4, !dbg !1772, !tbaa !1557
  %112 = load i32, ptr %__pyx_clineno, align 4, !dbg !1772, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1775

if.end178:                                        ; preds = %if.end166
  %call179 = call i32 @__Pyx_modinit_variable_import_code(), !dbg !1776
  %call180 = call i32 @__Pyx_modinit_function_import_code(), !dbg !1777
  %113 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1778, !tbaa !1461
  %__pyx_d181 = getelementptr inbounds %struct.__pyx_mstate, ptr %113, i32 0, i32 0, !dbg !1778
  %114 = load ptr, ptr %__pyx_d181, align 8, !dbg !1778, !tbaa !1598
  %115 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1780, !tbaa !1461
  %__pyx_n_s_loglevel = getelementptr inbounds %struct.__pyx_mstate, ptr %115, i32 0, i32 43, !dbg !1780
  %116 = load ptr, ptr %__pyx_n_s_loglevel, align 8, !dbg !1780, !tbaa !1781
  %117 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1782, !tbaa !1461
  %__pyx_int_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %117, i32 0, i32 56, !dbg !1782
  %118 = load ptr, ptr %__pyx_int_0, align 8, !dbg !1782, !tbaa !1783
  %call182 = call i32 @PyDict_SetItem(ptr noundef %114, ptr noundef %116, ptr noundef %118), !dbg !1784
  %cmp183 = icmp slt i32 %call182, 0, !dbg !1785
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !1786

if.then185:                                       ; preds = %if.end178
  %119 = load ptr, ptr @__pyx_f, align 16, !dbg !1787, !tbaa !1461
  store ptr %119, ptr %__pyx_filename, align 8, !dbg !1787, !tbaa !1461
  %120 = load ptr, ptr %__pyx_filename, align 8, !dbg !1787, !tbaa !1461
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !1787, !tbaa !1557
  %121 = load i32, ptr %__pyx_lineno, align 4, !dbg !1787, !tbaa !1557
  store i32 6624, ptr %__pyx_clineno, align 4, !dbg !1787, !tbaa !1557
  %122 = load i32, ptr %__pyx_clineno, align 4, !dbg !1787, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1790

if.end186:                                        ; preds = %if.end178
  %call187 = call ptr @PyList_New(i64 noundef 0), !dbg !1791
  store ptr %call187, ptr %__pyx_t_2, align 8, !dbg !1792, !tbaa !1461
  %123 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1793, !tbaa !1461
  %tobool188 = icmp ne ptr %123, null, !dbg !1793
  %lnot189 = xor i1 %tobool188, true, !dbg !1793
  %lnot191 = xor i1 %lnot189, true, !dbg !1793
  %lnot193 = xor i1 %lnot191, true, !dbg !1793
  %lnot.ext194 = zext i1 %lnot193 to i32, !dbg !1793
  %conv195 = sext i32 %lnot.ext194 to i64, !dbg !1793
  %expval196 = call i64 @llvm.expect.i64(i64 %conv195, i64 0), !dbg !1793
  %tobool197 = icmp ne i64 %expval196, 0, !dbg !1793
  br i1 %tobool197, label %if.then198, label %if.end199, !dbg !1795

if.then198:                                       ; preds = %if.end186
  %124 = load ptr, ptr @__pyx_f, align 16, !dbg !1796, !tbaa !1461
  store ptr %124, ptr %__pyx_filename, align 8, !dbg !1796, !tbaa !1461
  %125 = load ptr, ptr %__pyx_filename, align 8, !dbg !1796, !tbaa !1461
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !1796, !tbaa !1557
  %126 = load i32, ptr %__pyx_lineno, align 4, !dbg !1796, !tbaa !1557
  store i32 6633, ptr %__pyx_clineno, align 4, !dbg !1796, !tbaa !1557
  %127 = load i32, ptr %__pyx_clineno, align 4, !dbg !1796, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1799

if.end199:                                        ; preds = %if.end186
  %128 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1800, !tbaa !1461
  %__pyx_d200 = getelementptr inbounds %struct.__pyx_mstate, ptr %128, i32 0, i32 0, !dbg !1800
  %129 = load ptr, ptr %__pyx_d200, align 8, !dbg !1800, !tbaa !1598
  %130 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1802, !tbaa !1461
  %__pyx_n_s_reflog = getelementptr inbounds %struct.__pyx_mstate, ptr %130, i32 0, i32 51, !dbg !1802
  %131 = load ptr, ptr %__pyx_n_s_reflog, align 8, !dbg !1802, !tbaa !1803
  %132 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1804, !tbaa !1461
  %call201 = call i32 @PyDict_SetItem(ptr noundef %129, ptr noundef %131, ptr noundef %132), !dbg !1805
  %cmp202 = icmp slt i32 %call201, 0, !dbg !1806
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !1807

if.then204:                                       ; preds = %if.end199
  %133 = load ptr, ptr @__pyx_f, align 16, !dbg !1808, !tbaa !1461
  store ptr %133, ptr %__pyx_filename, align 8, !dbg !1808, !tbaa !1461
  %134 = load ptr, ptr %__pyx_filename, align 8, !dbg !1808, !tbaa !1461
  store i32 10, ptr %__pyx_lineno, align 4, !dbg !1808, !tbaa !1557
  %135 = load i32, ptr %__pyx_lineno, align 4, !dbg !1808, !tbaa !1557
  store i32 6635, ptr %__pyx_clineno, align 4, !dbg !1808, !tbaa !1557
  %136 = load i32, ptr %__pyx_clineno, align 4, !dbg !1808, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1811

if.end205:                                        ; preds = %if.end199
  %137 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1812, !tbaa !1461
  call void @Py_DECREF(ptr noundef %137), !dbg !1812
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !1813, !tbaa !1461
  %138 = load ptr, ptr @__pyx_builtin_range, align 8, !dbg !1814, !tbaa !1461
  %139 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1815, !tbaa !1461
  %__pyx_tuple__8 = getelementptr inbounds %struct.__pyx_mstate, ptr %139, i32 0, i32 59, !dbg !1815
  %140 = load ptr, ptr %__pyx_tuple__8, align 8, !dbg !1815, !tbaa !1816
  %call206 = call ptr @__Pyx_PyObject_Call(ptr noundef %138, ptr noundef %140, ptr noundef null), !dbg !1817
  store ptr %call206, ptr %__pyx_t_2, align 8, !dbg !1818, !tbaa !1461
  %141 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1819, !tbaa !1461
  %tobool207 = icmp ne ptr %141, null, !dbg !1819
  %lnot208 = xor i1 %tobool207, true, !dbg !1819
  %lnot210 = xor i1 %lnot208, true, !dbg !1819
  %lnot212 = xor i1 %lnot210, true, !dbg !1819
  %lnot.ext213 = zext i1 %lnot212 to i32, !dbg !1819
  %conv214 = sext i32 %lnot.ext213 to i64, !dbg !1819
  %expval215 = call i64 @llvm.expect.i64(i64 %conv214, i64 0), !dbg !1819
  %tobool216 = icmp ne i64 %expval215, 0, !dbg !1819
  br i1 %tobool216, label %if.then217, label %if.end218, !dbg !1821

if.then217:                                       ; preds = %if.end205
  %142 = load ptr, ptr @__pyx_f, align 16, !dbg !1822, !tbaa !1461
  store ptr %142, ptr %__pyx_filename, align 8, !dbg !1822, !tbaa !1461
  %143 = load ptr, ptr %__pyx_filename, align 8, !dbg !1822, !tbaa !1461
  store i32 19, ptr %__pyx_lineno, align 4, !dbg !1822, !tbaa !1557
  %144 = load i32, ptr %__pyx_lineno, align 4, !dbg !1822, !tbaa !1557
  store i32 6645, ptr %__pyx_clineno, align 4, !dbg !1822, !tbaa !1557
  %145 = load i32, ptr %__pyx_clineno, align 4, !dbg !1822, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1825

if.end218:                                        ; preds = %if.end205
  %146 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1826, !tbaa !1461
  %call219 = call i32 @Py_IS_TYPE(ptr noundef %146, ptr noundef @PyTuple_Type), !dbg !1826
  %tobool220 = icmp ne i32 %call219, 0, !dbg !1826
  %lnot221 = xor i1 %tobool220, true, !dbg !1826
  %lnot223 = xor i1 %lnot221, true, !dbg !1826
  %lnot.ext224 = zext i1 %lnot223 to i32, !dbg !1826
  %conv225 = sext i32 %lnot.ext224 to i64, !dbg !1826
  %expval226 = call i64 @llvm.expect.i64(i64 %conv225, i64 1), !dbg !1826
  %tobool227 = icmp ne i64 %expval226, 0, !dbg !1826
  br i1 %tobool227, label %if.then230, label %lor.lhs.false, !dbg !1827

lor.lhs.false:                                    ; preds = %if.end218
  %147 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1828, !tbaa !1461
  %call228 = call i32 @Py_IS_TYPE(ptr noundef %147, ptr noundef @PyList_Type), !dbg !1828
  %tobool229 = icmp ne i32 %call228, 0, !dbg !1828
  br i1 %tobool229, label %if.then230, label %if.else273, !dbg !1829

if.then230:                                       ; preds = %lor.lhs.false, %if.end218
  call void @llvm.lifetime.start.p0(i64 8, ptr %sequence) #10, !dbg !1830
  tail call void @llvm.dbg.declare(metadata ptr %sequence, metadata !1540, metadata !DIExpression()), !dbg !1831
  %148 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1832, !tbaa !1461
  store ptr %148, ptr %sequence, align 8, !dbg !1831, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !1833
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !1543, metadata !DIExpression()), !dbg !1834
  %149 = load ptr, ptr %sequence, align 8, !dbg !1835, !tbaa !1461
  %call231 = call i64 @Py_SIZE(ptr noundef %149), !dbg !1835
  store i64 %call231, ptr %size, align 8, !dbg !1834, !tbaa !1836
  %150 = load i64, ptr %size, align 8, !dbg !1838, !tbaa !1836
  %cmp232 = icmp ne i64 %150, 2, !dbg !1838
  %lnot234 = xor i1 %cmp232, true, !dbg !1838
  %lnot236 = xor i1 %lnot234, true, !dbg !1838
  %lnot.ext237 = zext i1 %lnot236 to i32, !dbg !1838
  %conv238 = sext i32 %lnot.ext237 to i64, !dbg !1838
  %expval239 = call i64 @llvm.expect.i64(i64 %conv238, i64 0), !dbg !1838
  %tobool240 = icmp ne i64 %expval239, 0, !dbg !1838
  br i1 %tobool240, label %if.then241, label %if.end250, !dbg !1840

if.then241:                                       ; preds = %if.then230
  %151 = load i64, ptr %size, align 8, !dbg !1841, !tbaa !1836
  %cmp242 = icmp sgt i64 %151, 2, !dbg !1844
  br i1 %cmp242, label %if.then244, label %if.else, !dbg !1845

if.then244:                                       ; preds = %if.then241
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef 2), !dbg !1846
  br label %if.end249, !dbg !1846

if.else:                                          ; preds = %if.then241
  %152 = load i64, ptr %size, align 8, !dbg !1847, !tbaa !1836
  %cmp245 = icmp sge i64 %152, 0, !dbg !1849
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !1850

if.then247:                                       ; preds = %if.else
  %153 = load i64, ptr %size, align 8, !dbg !1851, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %153), !dbg !1852
  br label %if.end248, !dbg !1852

if.end248:                                        ; preds = %if.then247, %if.else
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.then244
  %154 = load ptr, ptr @__pyx_f, align 16, !dbg !1853, !tbaa !1461
  store ptr %154, ptr %__pyx_filename, align 8, !dbg !1853, !tbaa !1461
  %155 = load ptr, ptr %__pyx_filename, align 8, !dbg !1853, !tbaa !1461
  store i32 19, ptr %__pyx_lineno, align 4, !dbg !1853, !tbaa !1557
  %156 = load i32, ptr %__pyx_lineno, align 4, !dbg !1853, !tbaa !1557
  store i32 6653, ptr %__pyx_clineno, align 4, !dbg !1853, !tbaa !1557
  %157 = load i32, ptr %__pyx_clineno, align 4, !dbg !1853, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup269, !dbg !1856

if.end250:                                        ; preds = %if.then230
  %158 = load ptr, ptr %sequence, align 8, !dbg !1857, !tbaa !1461
  %call251 = call i32 @Py_IS_TYPE(ptr noundef %158, ptr noundef @PyTuple_Type), !dbg !1857
  %tobool252 = icmp ne i32 %call251, 0, !dbg !1857
  %lnot253 = xor i1 %tobool252, true, !dbg !1857
  %lnot255 = xor i1 %lnot253, true, !dbg !1857
  %lnot.ext256 = zext i1 %lnot255 to i32, !dbg !1857
  %conv257 = sext i32 %lnot.ext256 to i64, !dbg !1857
  %expval258 = call i64 @llvm.expect.i64(i64 %conv257, i64 1), !dbg !1857
  %tobool259 = icmp ne i64 %expval258, 0, !dbg !1857
  br i1 %tobool259, label %if.then260, label %if.else263, !dbg !1859

if.then260:                                       ; preds = %if.end250
  %159 = load ptr, ptr %sequence, align 8, !dbg !1860, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %159, i32 0, i32 1, !dbg !1860
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !1860
  %160 = load ptr, ptr %arrayidx, align 8, !dbg !1860, !tbaa !1461
  store ptr %160, ptr %__pyx_t_3, align 8, !dbg !1862, !tbaa !1461
  %161 = load ptr, ptr %sequence, align 8, !dbg !1863, !tbaa !1461
  %ob_item261 = getelementptr inbounds %struct.PyTupleObject, ptr %161, i32 0, i32 1, !dbg !1863
  %arrayidx262 = getelementptr [1 x ptr], ptr %ob_item261, i64 0, i64 1, !dbg !1863
  %162 = load ptr, ptr %arrayidx262, align 8, !dbg !1863, !tbaa !1461
  store ptr %162, ptr %__pyx_t_4, align 8, !dbg !1864, !tbaa !1461
  br label %if.end268, !dbg !1865

if.else263:                                       ; preds = %if.end250
  %163 = load ptr, ptr %sequence, align 8, !dbg !1866, !tbaa !1461
  %ob_item264 = getelementptr inbounds %struct.PyListObject, ptr %163, i32 0, i32 1, !dbg !1866
  %164 = load ptr, ptr %ob_item264, align 8, !dbg !1866, !tbaa !1868
  %arrayidx265 = getelementptr ptr, ptr %164, i64 0, !dbg !1866
  %165 = load ptr, ptr %arrayidx265, align 8, !dbg !1866, !tbaa !1461
  store ptr %165, ptr %__pyx_t_3, align 8, !dbg !1872, !tbaa !1461
  %166 = load ptr, ptr %sequence, align 8, !dbg !1873, !tbaa !1461
  %ob_item266 = getelementptr inbounds %struct.PyListObject, ptr %166, i32 0, i32 1, !dbg !1873
  %167 = load ptr, ptr %ob_item266, align 8, !dbg !1873, !tbaa !1868
  %arrayidx267 = getelementptr ptr, ptr %167, i64 1, !dbg !1873
  %168 = load ptr, ptr %arrayidx267, align 8, !dbg !1873, !tbaa !1461
  store ptr %168, ptr %__pyx_t_4, align 8, !dbg !1874, !tbaa !1461
  br label %if.end268

if.end268:                                        ; preds = %if.else263, %if.then260
  %169 = load ptr, ptr %__pyx_t_3, align 8, !dbg !1875, !tbaa !1461
  call void @Py_INCREF(ptr noundef %169), !dbg !1875
  %170 = load ptr, ptr %__pyx_t_4, align 8, !dbg !1876, !tbaa !1461
  call void @Py_INCREF(ptr noundef %170), !dbg !1876
  %171 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1877, !tbaa !1461
  call void @Py_DECREF(ptr noundef %171), !dbg !1877
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !1878, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1879
  br label %cleanup269, !dbg !1879

cleanup269:                                       ; preds = %if.end249, %if.end268
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !1879
  call void @llvm.lifetime.end.p0(i64 8, ptr %sequence) #10, !dbg !1879
  %cleanup.dest271 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest271, label %cleanup379 [
    i32 0, label %cleanup.cont272
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont272:                                  ; preds = %cleanup269
  br label %if.end328, !dbg !1880

if.else273:                                       ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr %index) #10, !dbg !1881
  tail call void @llvm.dbg.declare(metadata ptr %index, metadata !1544, metadata !DIExpression()), !dbg !1882
  store i64 -1, ptr %index, align 8, !dbg !1882, !tbaa !1836
  %172 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1883, !tbaa !1461
  %call274 = call ptr @PyObject_GetIter(ptr noundef %172), !dbg !1884
  store ptr %call274, ptr %__pyx_t_5, align 8, !dbg !1885, !tbaa !1461
  %173 = load ptr, ptr %__pyx_t_5, align 8, !dbg !1886, !tbaa !1461
  %tobool275 = icmp ne ptr %173, null, !dbg !1886
  %lnot276 = xor i1 %tobool275, true, !dbg !1886
  %lnot278 = xor i1 %lnot276, true, !dbg !1886
  %lnot280 = xor i1 %lnot278, true, !dbg !1886
  %lnot.ext281 = zext i1 %lnot280 to i32, !dbg !1886
  %conv282 = sext i32 %lnot.ext281 to i64, !dbg !1886
  %expval283 = call i64 @llvm.expect.i64(i64 %conv282, i64 0), !dbg !1886
  %tobool284 = icmp ne i64 %expval283, 0, !dbg !1886
  br i1 %tobool284, label %if.then285, label %if.end286, !dbg !1888

if.then285:                                       ; preds = %if.else273
  %174 = load ptr, ptr @__pyx_f, align 16, !dbg !1889, !tbaa !1461
  store ptr %174, ptr %__pyx_filename, align 8, !dbg !1889, !tbaa !1461
  %175 = load ptr, ptr %__pyx_filename, align 8, !dbg !1889, !tbaa !1461
  store i32 19, ptr %__pyx_lineno, align 4, !dbg !1889, !tbaa !1557
  %176 = load i32, ptr %__pyx_lineno, align 4, !dbg !1889, !tbaa !1557
  store i32 6674, ptr %__pyx_clineno, align 4, !dbg !1889, !tbaa !1557
  %177 = load i32, ptr %__pyx_clineno, align 4, !dbg !1889, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup325, !dbg !1892

if.end286:                                        ; preds = %if.else273
  %178 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1893, !tbaa !1461
  call void @Py_DECREF(ptr noundef %178), !dbg !1893
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !1894, !tbaa !1461
  %179 = load ptr, ptr %__pyx_t_5, align 8, !dbg !1895, !tbaa !1461
  %call287 = call ptr @Py_TYPE(ptr noundef %179), !dbg !1895
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call287, i32 0, i32 26, !dbg !1895
  %180 = load ptr, ptr %tp_iternext, align 8, !dbg !1895, !tbaa !1896
  store ptr %180, ptr %__pyx_t_6, align 8, !dbg !1898, !tbaa !1461
  store i64 0, ptr %index, align 8, !dbg !1899, !tbaa !1836
  %181 = load ptr, ptr %__pyx_t_6, align 8, !dbg !1900, !tbaa !1461
  %182 = load ptr, ptr %__pyx_t_5, align 8, !dbg !1901, !tbaa !1461
  %call288 = call ptr %181(ptr noundef %182), !dbg !1900
  store ptr %call288, ptr %__pyx_t_3, align 8, !dbg !1902, !tbaa !1461
  %183 = load ptr, ptr %__pyx_t_3, align 8, !dbg !1903, !tbaa !1461
  %tobool289 = icmp ne ptr %183, null, !dbg !1903
  %lnot290 = xor i1 %tobool289, true, !dbg !1903
  %lnot292 = xor i1 %lnot290, true, !dbg !1903
  %lnot294 = xor i1 %lnot292, true, !dbg !1903
  %lnot.ext295 = zext i1 %lnot294 to i32, !dbg !1903
  %conv296 = sext i32 %lnot.ext295 to i64, !dbg !1903
  %expval297 = call i64 @llvm.expect.i64(i64 %conv296, i64 0), !dbg !1903
  %tobool298 = icmp ne i64 %expval297, 0, !dbg !1903
  br i1 %tobool298, label %if.then299, label %if.end300, !dbg !1905

if.then299:                                       ; preds = %if.end286
  br label %__pyx_L2_unpacking_failed, !dbg !1906

if.end300:                                        ; preds = %if.end286
  store i64 1, ptr %index, align 8, !dbg !1907, !tbaa !1836
  %184 = load ptr, ptr %__pyx_t_6, align 8, !dbg !1908, !tbaa !1461
  %185 = load ptr, ptr %__pyx_t_5, align 8, !dbg !1909, !tbaa !1461
  %call301 = call ptr %184(ptr noundef %185), !dbg !1908
  store ptr %call301, ptr %__pyx_t_4, align 8, !dbg !1910, !tbaa !1461
  %186 = load ptr, ptr %__pyx_t_4, align 8, !dbg !1911, !tbaa !1461
  %tobool302 = icmp ne ptr %186, null, !dbg !1911
  %lnot303 = xor i1 %tobool302, true, !dbg !1911
  %lnot305 = xor i1 %lnot303, true, !dbg !1911
  %lnot307 = xor i1 %lnot305, true, !dbg !1911
  %lnot.ext308 = zext i1 %lnot307 to i32, !dbg !1911
  %conv309 = sext i32 %lnot.ext308 to i64, !dbg !1911
  %expval310 = call i64 @llvm.expect.i64(i64 %conv309, i64 0), !dbg !1911
  %tobool311 = icmp ne i64 %expval310, 0, !dbg !1911
  br i1 %tobool311, label %if.then312, label %if.end313, !dbg !1913

if.then312:                                       ; preds = %if.end300
  br label %__pyx_L2_unpacking_failed, !dbg !1914

if.end313:                                        ; preds = %if.end300
  %187 = load ptr, ptr %__pyx_t_6, align 8, !dbg !1915, !tbaa !1461
  %188 = load ptr, ptr %__pyx_t_5, align 8, !dbg !1917, !tbaa !1461
  %call314 = call ptr %187(ptr noundef %188), !dbg !1915
  %call315 = call i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %call314, i64 noundef 2), !dbg !1918
  %cmp316 = icmp slt i32 %call315, 0, !dbg !1919
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !1920

if.then318:                                       ; preds = %if.end313
  %189 = load ptr, ptr @__pyx_f, align 16, !dbg !1921, !tbaa !1461
  store ptr %189, ptr %__pyx_filename, align 8, !dbg !1921, !tbaa !1461
  %190 = load ptr, ptr %__pyx_filename, align 8, !dbg !1921, !tbaa !1461
  store i32 19, ptr %__pyx_lineno, align 4, !dbg !1921, !tbaa !1557
  %191 = load i32, ptr %__pyx_lineno, align 4, !dbg !1921, !tbaa !1557
  store i32 6682, ptr %__pyx_clineno, align 4, !dbg !1921, !tbaa !1557
  %192 = load i32, ptr %__pyx_clineno, align 4, !dbg !1921, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup325, !dbg !1924

if.end319:                                        ; preds = %if.end313
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !1925, !tbaa !1461
  %193 = load ptr, ptr %__pyx_t_5, align 8, !dbg !1926, !tbaa !1461
  call void @Py_DECREF(ptr noundef %193), !dbg !1926
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !1927, !tbaa !1461
  br label %__pyx_L3_unpacking_done, !dbg !1928

__pyx_L2_unpacking_failed:                        ; preds = %if.then312, %if.then299
  tail call void @llvm.dbg.label(metadata !1546), !dbg !1929
  %194 = load ptr, ptr %__pyx_t_5, align 8, !dbg !1930, !tbaa !1461
  call void @Py_DECREF(ptr noundef %194), !dbg !1930
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !1931, !tbaa !1461
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !1932, !tbaa !1461
  %call320 = call i32 @__Pyx_IterFinish(), !dbg !1933
  %cmp321 = icmp eq i32 %call320, 0, !dbg !1935
  br i1 %cmp321, label %if.then323, label %if.end324, !dbg !1936

if.then323:                                       ; preds = %__pyx_L2_unpacking_failed
  %195 = load i64, ptr %index, align 8, !dbg !1937, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %195), !dbg !1938
  br label %if.end324, !dbg !1938

if.end324:                                        ; preds = %if.then323, %__pyx_L2_unpacking_failed
  %196 = load ptr, ptr @__pyx_f, align 16, !dbg !1939, !tbaa !1461
  store ptr %196, ptr %__pyx_filename, align 8, !dbg !1939, !tbaa !1461
  %197 = load ptr, ptr %__pyx_filename, align 8, !dbg !1939, !tbaa !1461
  store i32 19, ptr %__pyx_lineno, align 4, !dbg !1939, !tbaa !1557
  %198 = load i32, ptr %__pyx_lineno, align 4, !dbg !1939, !tbaa !1557
  store i32 6690, ptr %__pyx_clineno, align 4, !dbg !1939, !tbaa !1557
  %199 = load i32, ptr %__pyx_clineno, align 4, !dbg !1939, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup325, !dbg !1942

__pyx_L3_unpacking_done:                          ; preds = %if.end319
  tail call void @llvm.dbg.label(metadata !1547), !dbg !1943
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1944
  br label %cleanup325, !dbg !1944

cleanup325:                                       ; preds = %if.end324, %if.then318, %if.then285, %__pyx_L3_unpacking_done
  call void @llvm.lifetime.end.p0(i64 8, ptr %index) #10, !dbg !1944
  %cleanup.dest326 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest326, label %cleanup379 [
    i32 0, label %cleanup.cont327
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont327:                                  ; preds = %cleanup325
  br label %if.end328

if.end328:                                        ; preds = %cleanup.cont327, %cleanup.cont272
  %200 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1945, !tbaa !1461
  %__pyx_d329 = getelementptr inbounds %struct.__pyx_mstate, ptr %200, i32 0, i32 0, !dbg !1945
  %201 = load ptr, ptr %__pyx_d329, align 8, !dbg !1945, !tbaa !1598
  %202 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1947, !tbaa !1461
  %__pyx_n_s_LOG_NONE = getelementptr inbounds %struct.__pyx_mstate, ptr %202, i32 0, i32 11, !dbg !1947
  %203 = load ptr, ptr %__pyx_n_s_LOG_NONE, align 8, !dbg !1947, !tbaa !1948
  %204 = load ptr, ptr %__pyx_t_3, align 8, !dbg !1949, !tbaa !1461
  %call330 = call i32 @PyDict_SetItem(ptr noundef %201, ptr noundef %203, ptr noundef %204), !dbg !1950
  %cmp331 = icmp slt i32 %call330, 0, !dbg !1951
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !1952

if.then333:                                       ; preds = %if.end328
  %205 = load ptr, ptr @__pyx_f, align 16, !dbg !1953, !tbaa !1461
  store ptr %205, ptr %__pyx_filename, align 8, !dbg !1953, !tbaa !1461
  %206 = load ptr, ptr %__pyx_filename, align 8, !dbg !1953, !tbaa !1461
  store i32 19, ptr %__pyx_lineno, align 4, !dbg !1953, !tbaa !1557
  %207 = load i32, ptr %__pyx_lineno, align 4, !dbg !1953, !tbaa !1557
  store i32 6693, ptr %__pyx_clineno, align 4, !dbg !1953, !tbaa !1557
  %208 = load i32, ptr %__pyx_clineno, align 4, !dbg !1953, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1956

if.end334:                                        ; preds = %if.end328
  %209 = load ptr, ptr %__pyx_t_3, align 8, !dbg !1957, !tbaa !1461
  call void @Py_DECREF(ptr noundef %209), !dbg !1957
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !1958, !tbaa !1461
  %210 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1959, !tbaa !1461
  %__pyx_d335 = getelementptr inbounds %struct.__pyx_mstate, ptr %210, i32 0, i32 0, !dbg !1959
  %211 = load ptr, ptr %__pyx_d335, align 8, !dbg !1959, !tbaa !1598
  %212 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1961, !tbaa !1461
  %__pyx_n_s_LOG_ALL = getelementptr inbounds %struct.__pyx_mstate, ptr %212, i32 0, i32 10, !dbg !1961
  %213 = load ptr, ptr %__pyx_n_s_LOG_ALL, align 8, !dbg !1961, !tbaa !1962
  %214 = load ptr, ptr %__pyx_t_4, align 8, !dbg !1963, !tbaa !1461
  %call336 = call i32 @PyDict_SetItem(ptr noundef %211, ptr noundef %213, ptr noundef %214), !dbg !1964
  %cmp337 = icmp slt i32 %call336, 0, !dbg !1965
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !1966

if.then339:                                       ; preds = %if.end334
  %215 = load ptr, ptr @__pyx_f, align 16, !dbg !1967, !tbaa !1461
  store ptr %215, ptr %__pyx_filename, align 8, !dbg !1967, !tbaa !1461
  %216 = load ptr, ptr %__pyx_filename, align 8, !dbg !1967, !tbaa !1461
  store i32 19, ptr %__pyx_lineno, align 4, !dbg !1967, !tbaa !1557
  %217 = load i32, ptr %__pyx_lineno, align 4, !dbg !1967, !tbaa !1557
  store i32 6695, ptr %__pyx_clineno, align 4, !dbg !1967, !tbaa !1557
  %218 = load i32, ptr %__pyx_clineno, align 4, !dbg !1967, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1970

if.end340:                                        ; preds = %if.end334
  %219 = load ptr, ptr %__pyx_t_4, align 8, !dbg !1971, !tbaa !1461
  call void @Py_DECREF(ptr noundef %219), !dbg !1971
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !1972, !tbaa !1461
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_INCREF, ptr @__pyx_v_6Cython_7Runtime_8refnanny_api, align 8, !dbg !1973, !tbaa !1974
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_DECREF, ptr getelementptr inbounds (%struct.__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct, ptr @__pyx_v_6Cython_7Runtime_8refnanny_api, i32 0, i32 1), align 8, !dbg !1976, !tbaa !1977
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_GOTREF, ptr getelementptr inbounds (%struct.__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct, ptr @__pyx_v_6Cython_7Runtime_8refnanny_api, i32 0, i32 2), align 8, !dbg !1978, !tbaa !1979
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_GIVEREF, ptr getelementptr inbounds (%struct.__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct, ptr @__pyx_v_6Cython_7Runtime_8refnanny_api, i32 0, i32 3), align 8, !dbg !1980, !tbaa !1981
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_SetupContext, ptr getelementptr inbounds (%struct.__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct, ptr @__pyx_v_6Cython_7Runtime_8refnanny_api, i32 0, i32 4), align 8, !dbg !1982, !tbaa !1983
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_FinishContext, ptr getelementptr inbounds (%struct.__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct, ptr @__pyx_v_6Cython_7Runtime_8refnanny_api, i32 0, i32 5), align 8, !dbg !1984, !tbaa !1985
  %call341 = call ptr @PyLong_FromVoidPtr(ptr noundef @__pyx_v_6Cython_7Runtime_8refnanny_api), !dbg !1986
  store ptr %call341, ptr %__pyx_t_2, align 8, !dbg !1987, !tbaa !1461
  %220 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1988, !tbaa !1461
  %tobool342 = icmp ne ptr %220, null, !dbg !1988
  %lnot343 = xor i1 %tobool342, true, !dbg !1988
  %lnot345 = xor i1 %lnot343, true, !dbg !1988
  %lnot347 = xor i1 %lnot345, true, !dbg !1988
  %lnot.ext348 = zext i1 %lnot347 to i32, !dbg !1988
  %conv349 = sext i32 %lnot.ext348 to i64, !dbg !1988
  %expval350 = call i64 @llvm.expect.i64(i64 %conv349, i64 0), !dbg !1988
  %tobool351 = icmp ne i64 %expval350, 0, !dbg !1988
  br i1 %tobool351, label %if.then352, label %if.end353, !dbg !1990

if.then352:                                       ; preds = %if.end340
  %221 = load ptr, ptr @__pyx_f, align 16, !dbg !1991, !tbaa !1461
  store ptr %221, ptr %__pyx_filename, align 8, !dbg !1991, !tbaa !1461
  %222 = load ptr, ptr %__pyx_filename, align 8, !dbg !1991, !tbaa !1461
  store i32 192, ptr %__pyx_lineno, align 4, !dbg !1991, !tbaa !1557
  %223 = load i32, ptr %__pyx_lineno, align 4, !dbg !1991, !tbaa !1557
  store i32 6757, ptr %__pyx_clineno, align 4, !dbg !1991, !tbaa !1557
  %224 = load i32, ptr %__pyx_clineno, align 4, !dbg !1991, !tbaa !1557
  br label %__pyx_L1_error, !dbg !1994

if.end353:                                        ; preds = %if.end340
  %225 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1995, !tbaa !1461
  %__pyx_d354 = getelementptr inbounds %struct.__pyx_mstate, ptr %225, i32 0, i32 0, !dbg !1995
  %226 = load ptr, ptr %__pyx_d354, align 8, !dbg !1995, !tbaa !1598
  %227 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !1997, !tbaa !1461
  %__pyx_n_s_RefNannyAPI = getelementptr inbounds %struct.__pyx_mstate, ptr %227, i32 0, i32 15, !dbg !1997
  %228 = load ptr, ptr %__pyx_n_s_RefNannyAPI, align 8, !dbg !1997, !tbaa !1998
  %229 = load ptr, ptr %__pyx_t_2, align 8, !dbg !1999, !tbaa !1461
  %call355 = call i32 @PyDict_SetItem(ptr noundef %226, ptr noundef %228, ptr noundef %229), !dbg !2000
  %cmp356 = icmp slt i32 %call355, 0, !dbg !2001
  br i1 %cmp356, label %if.then358, label %if.end359, !dbg !2002

if.then358:                                       ; preds = %if.end353
  %230 = load ptr, ptr @__pyx_f, align 16, !dbg !2003, !tbaa !1461
  store ptr %230, ptr %__pyx_filename, align 8, !dbg !2003, !tbaa !1461
  %231 = load ptr, ptr %__pyx_filename, align 8, !dbg !2003, !tbaa !1461
  store i32 192, ptr %__pyx_lineno, align 4, !dbg !2003, !tbaa !1557
  %232 = load i32, ptr %__pyx_lineno, align 4, !dbg !2003, !tbaa !1557
  store i32 6759, ptr %__pyx_clineno, align 4, !dbg !2003, !tbaa !1557
  %233 = load i32, ptr %__pyx_clineno, align 4, !dbg !2003, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2006

if.end359:                                        ; preds = %if.end353
  %234 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2007, !tbaa !1461
  call void @Py_DECREF(ptr noundef %234), !dbg !2007
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2008, !tbaa !1461
  br label %__pyx_L0, !dbg !2009

__pyx_L1_error:                                   ; preds = %cleanup325, %cleanup269, %cleanup, %if.then358, %if.then352, %if.then339, %if.then333, %if.then217, %if.then204, %if.then198, %if.then185, %if.then177, %if.then165, %if.then150, %if.then145, %if.then110, %if.then103, %if.then98, %if.then93, %if.then79, %if.then65, %if.then51, %if.then45, %if.then38, %if.then23, %if.then8
  tail call void @llvm.dbg.label(metadata !1548), !dbg !2010
  %235 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2011, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %235), !dbg !2011
  %236 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2012, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %236), !dbg !2012
  %237 = load ptr, ptr %__pyx_t_4, align 8, !dbg !2013, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %237), !dbg !2013
  %238 = load ptr, ptr %__pyx_t_5, align 8, !dbg !2014, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %238), !dbg !2014
  %239 = load ptr, ptr @__pyx_m, align 8, !dbg !2015, !tbaa !1461
  %tobool360 = icmp ne ptr %239, null, !dbg !2015
  br i1 %tobool360, label %if.then361, label %if.else371, !dbg !2016

if.then361:                                       ; preds = %__pyx_L1_error
  %240 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2017, !tbaa !1461
  %__pyx_d362 = getelementptr inbounds %struct.__pyx_mstate, ptr %240, i32 0, i32 0, !dbg !2017
  %241 = load ptr, ptr %__pyx_d362, align 8, !dbg !2017, !tbaa !1598
  %tobool363 = icmp ne ptr %241, null, !dbg !2017
  br i1 %tobool363, label %land.lhs.true, label %if.end366, !dbg !2019

land.lhs.true:                                    ; preds = %if.then361
  %242 = load i32, ptr %stringtab_initialized, align 4, !dbg !2020, !tbaa !1557
  %tobool364 = icmp ne i32 %242, 0, !dbg !2020
  br i1 %tobool364, label %if.then365, label %if.end366, !dbg !2021

if.then365:                                       ; preds = %land.lhs.true
  %243 = load i32, ptr %__pyx_clineno, align 4, !dbg !2022, !tbaa !1557
  %244 = load i32, ptr %__pyx_lineno, align 4, !dbg !2024, !tbaa !1557
  %245 = load ptr, ptr %__pyx_filename, align 8, !dbg !2025, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.17, i32 noundef %243, i32 noundef %244, ptr noundef %245), !dbg !2026
  br label %if.end366, !dbg !2027

if.end366:                                        ; preds = %if.then365, %land.lhs.true, %if.then361
  br label %do.body, !dbg !2028

do.body:                                          ; preds = %if.end366
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #10, !dbg !2029
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !1549, metadata !DIExpression()), !dbg !2029
  %246 = load ptr, ptr @__pyx_m, align 8, !dbg !2029, !tbaa !1461
  store ptr %246, ptr %_py_tmp, align 8, !dbg !2029, !tbaa !1461
  %247 = load ptr, ptr %_py_tmp, align 8, !dbg !2030, !tbaa !1461
  %cmp367 = icmp ne ptr %247, null, !dbg !2030
  br i1 %cmp367, label %if.then369, label %if.end370, !dbg !2029

if.then369:                                       ; preds = %do.body
  store ptr null, ptr @__pyx_m, align 8, !dbg !2032, !tbaa !1461
  %248 = load ptr, ptr %_py_tmp, align 8, !dbg !2032, !tbaa !1461
  call void @Py_DECREF(ptr noundef %248), !dbg !2032
  br label %if.end370, !dbg !2032

if.end370:                                        ; preds = %if.then369, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #10, !dbg !2028
  br label %do.cond, !dbg !2029

do.cond:                                          ; preds = %if.end370
  br label %do.end, !dbg !2029

do.end:                                           ; preds = %do.cond
  br label %if.end376, !dbg !2034

if.else371:                                       ; preds = %__pyx_L1_error
  %call372 = call ptr @PyErr_Occurred(), !dbg !2035
  %tobool373 = icmp ne ptr %call372, null, !dbg !2035
  br i1 %tobool373, label %if.end375, label %if.then374, !dbg !2037

if.then374:                                       ; preds = %if.else371
  %249 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !2038, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %249, ptr noundef @.str.17), !dbg !2040
  br label %if.end375, !dbg !2041

if.end375:                                        ; preds = %if.then374, %if.else371
  br label %if.end376

if.end376:                                        ; preds = %if.end375, %do.end
  br label %__pyx_L0, !dbg !2015

__pyx_L0:                                         ; preds = %if.end376, %if.end359
  tail call void @llvm.dbg.label(metadata !1553), !dbg !2042
  %250 = load ptr, ptr @__pyx_m, align 8, !dbg !2043, !tbaa !1461
  %cmp377 = icmp ne ptr %250, null, !dbg !2044
  %251 = zext i1 %cmp377 to i64, !dbg !2045
  %cond = select i1 %cmp377, i32 0, i32 -1, !dbg !2045
  store i32 %cond, ptr %retval, align 4, !dbg !2046
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup379, !dbg !2046

cleanup379:                                       ; preds = %__pyx_L0, %cleanup325, %cleanup269, %cleanup, %if.end, %if.then1
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !2047
  call void @llvm.lifetime.end.p0(i64 4, ptr %stringtab_initialized) #10, !dbg !2047
  %252 = load i32, ptr %retval, align 4, !dbg !2047
  ret i32 %252, !dbg !2047
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_single_interpreter() #0 !dbg !636 {
entry:
  %retval = alloca i32, align 4
  %current_id = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %current_id) #10, !dbg !2048
  tail call void @llvm.dbg.declare(metadata ptr %current_id, metadata !640, metadata !DIExpression()), !dbg !2049
  %call = call ptr @PyThreadState_Get(), !dbg !2050
  %interp = getelementptr inbounds %struct._ts, ptr %call, i32 0, i32 2, !dbg !2051
  %0 = load ptr, ptr %interp, align 8, !dbg !2051, !tbaa !2052
  %call1 = call i64 @PyInterpreterState_GetID(ptr noundef %0), !dbg !2059
  store i64 %call1, ptr %current_id, align 8, !dbg !2049, !tbaa !1836
  %1 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !2060, !tbaa !1836
  %cmp = icmp eq i64 %1, -1, !dbg !2062
  br i1 %cmp, label %if.then, label %if.else, !dbg !2063

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %current_id, align 8, !dbg !2064, !tbaa !1836
  store i64 %2, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !2066, !tbaa !1836
  %3 = load i64, ptr %current_id, align 8, !dbg !2067, !tbaa !1836
  %cmp2 = icmp eq i64 %3, -1, !dbg !2067
  %lnot = xor i1 %cmp2, true, !dbg !2067
  %lnot3 = xor i1 %lnot, true, !dbg !2067
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !2067
  %conv = sext i32 %lnot.ext to i64, !dbg !2067
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2067
  %tobool = icmp ne i64 %expval, 0, !dbg !2068
  %4 = zext i1 %tobool to i64, !dbg !2068
  %cond = select i1 %tobool, i32 -1, i32 0, !dbg !2068
  store i32 %cond, ptr %retval, align 4, !dbg !2069
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2069

if.else:                                          ; preds = %entry
  %5 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !2070, !tbaa !1836
  %6 = load i64, ptr %current_id, align 8, !dbg !2070, !tbaa !1836
  %cmp4 = icmp ne i64 %5, %6, !dbg !2070
  %lnot6 = xor i1 %cmp4, true, !dbg !2070
  %lnot8 = xor i1 %lnot6, true, !dbg !2070
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !2070
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !2070
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !2070
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !2070
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !2072

if.then13:                                        ; preds = %if.else
  %7 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !2073, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.10), !dbg !2075
  store i32 -1, ptr %retval, align 4, !dbg !2076
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2076

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !2077
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2077

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %current_id) #10, !dbg !2078
  %8 = load i32, ptr %retval, align 4, !dbg !2078
  ret i32 %8, !dbg !2078
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_INCREF(ptr noundef %op) #3 !dbg !2079 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !2081, metadata !DIExpression()), !dbg !2082
  %0 = load ptr, ptr %op.addr, align 8, !dbg !2083, !tbaa !1461
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0, !dbg !2084
  %1 = load i64, ptr %ob_refcnt, align 8, !dbg !2085, !tbaa !2086
  %inc = add i64 %1, 1, !dbg !2085
  store i64 %inc, ptr %ob_refcnt, align 8, !dbg !2085, !tbaa !2086
  ret void, !dbg !2087
}

declare !dbg !2088 ptr @PyObject_GetAttrString(ptr noundef, ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #4

declare !dbg !2091 ptr @PyModule_NewObject(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_DECREF(ptr noundef %op) #3 !dbg !2092 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load ptr, ptr %op.addr, align 8, !dbg !2096, !tbaa !1461
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0, !dbg !2098
  %1 = load i64, ptr %ob_refcnt, align 8, !dbg !2099, !tbaa !2086
  %dec = add i64 %1, -1, !dbg !2099
  store i64 %dec, ptr %ob_refcnt, align 8, !dbg !2099, !tbaa !2086
  %cmp = icmp eq i64 %dec, 0, !dbg !2100
  br i1 %cmp, label %if.then, label %if.end, !dbg !2101

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !2102, !tbaa !1461
  call void @_Py_Dealloc(ptr noundef %2), !dbg !2104
  br label %if.end, !dbg !2105

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2106
}

declare !dbg !2107 ptr @PyModule_GetDict(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_copy_spec_to_module(ptr noundef %spec, ptr noundef %moddict, ptr noundef %from_name, ptr noundef %to_name, i32 noundef %allow_none) #0 !dbg !2108 {
entry:
  %spec.addr = alloca ptr, align 8
  %moddict.addr = alloca ptr, align 8
  %from_name.addr = alloca ptr, align 8
  %to_name.addr = alloca ptr, align 8
  %allow_none.addr = alloca i32, align 4
  %value = alloca ptr, align 8
  %result = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %spec.addr, metadata !2112, metadata !DIExpression()), !dbg !2119
  store ptr %moddict, ptr %moddict.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %moddict.addr, metadata !2113, metadata !DIExpression()), !dbg !2120
  store ptr %from_name, ptr %from_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %from_name.addr, metadata !2114, metadata !DIExpression()), !dbg !2121
  store ptr %to_name, ptr %to_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %to_name.addr, metadata !2115, metadata !DIExpression()), !dbg !2122
  store i32 %allow_none, ptr %allow_none.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %allow_none.addr, metadata !2116, metadata !DIExpression()), !dbg !2123
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #10, !dbg !2124
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !2117, metadata !DIExpression()), !dbg !2125
  %0 = load ptr, ptr %spec.addr, align 8, !dbg !2126, !tbaa !1461
  %1 = load ptr, ptr %from_name.addr, align 8, !dbg !2127, !tbaa !1461
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef %1), !dbg !2128
  store ptr %call, ptr %value, align 8, !dbg !2125, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !2129
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !2118, metadata !DIExpression()), !dbg !2130
  store i32 0, ptr %result, align 4, !dbg !2130, !tbaa !1557
  %2 = load ptr, ptr %value, align 8, !dbg !2131, !tbaa !1461
  %tobool = icmp ne ptr %2, null, !dbg !2131
  %lnot = xor i1 %tobool, true, !dbg !2131
  %lnot1 = xor i1 %lnot, true, !dbg !2131
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2131
  %conv = sext i32 %lnot.ext to i64, !dbg !2131
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2131
  %tobool2 = icmp ne i64 %expval, 0, !dbg !2131
  br i1 %tobool2, label %if.then, label %if.else, !dbg !2133

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %allow_none.addr, align 4, !dbg !2134, !tbaa !1557
  %tobool3 = icmp ne i32 %3, 0, !dbg !2134
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !2137

lor.lhs.false:                                    ; preds = %if.then
  %4 = load ptr, ptr %value, align 8, !dbg !2138, !tbaa !1461
  %cmp = icmp ne ptr %4, @_Py_NoneStruct, !dbg !2139
  br i1 %cmp, label %if.then5, label %if.end, !dbg !2140

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %5 = load ptr, ptr %moddict.addr, align 8, !dbg !2141, !tbaa !1461
  %6 = load ptr, ptr %to_name.addr, align 8, !dbg !2143, !tbaa !1461
  %7 = load ptr, ptr %value, align 8, !dbg !2144, !tbaa !1461
  %call6 = call i32 @PyDict_SetItemString(ptr noundef %5, ptr noundef %6, ptr noundef %7), !dbg !2145
  store i32 %call6, ptr %result, align 4, !dbg !2146, !tbaa !1557
  br label %if.end, !dbg !2147

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  %8 = load ptr, ptr %value, align 8, !dbg !2148, !tbaa !1461
  call void @Py_DECREF(ptr noundef %8), !dbg !2148
  br label %if.end12, !dbg !2149

if.else:                                          ; preds = %entry
  %9 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !2150, !tbaa !1461
  %call7 = call i32 @PyErr_ExceptionMatches(ptr noundef %9), !dbg !2152
  %tobool8 = icmp ne i32 %call7, 0, !dbg !2152
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !2153

if.then9:                                         ; preds = %if.else
  call void @PyErr_Clear(), !dbg !2154
  br label %if.end11, !dbg !2156

if.else10:                                        ; preds = %if.else
  store i32 -1, ptr %result, align 4, !dbg !2157, !tbaa !1557
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  %10 = load i32, ptr %result, align 4, !dbg !2159, !tbaa !1557
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !2160
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #10, !dbg !2160
  ret i32 %10, !dbg !2161
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_XDECREF(ptr noundef %op) #3 !dbg !2162 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !2164, metadata !DIExpression()), !dbg !2165
  %0 = load ptr, ptr %op.addr, align 8, !dbg !2166, !tbaa !1461
  %cmp = icmp ne ptr %0, null, !dbg !2168
  br i1 %cmp, label %if.then, label %if.end, !dbg !2169

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !2170, !tbaa !1461
  call void @Py_DECREF(ptr noundef %1), !dbg !2170
  br label %if.end, !dbg !2172

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2173
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

declare !dbg !2174 i64 @PyInterpreterState_GetID(ptr noundef) #1

declare !dbg !2178 ptr @PyThreadState_Get() #1

declare !dbg !2181 void @PyErr_SetString(ptr noundef, ptr noundef) #1

declare !dbg !2185 void @_Py_Dealloc(ptr noundef) #1

declare !dbg !2186 i32 @PyDict_SetItemString(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !2190 i32 @PyErr_ExceptionMatches(ptr noundef) #1

declare !dbg !2191 void @PyErr_Clear() #1

declare !dbg !2194 ptr @PyImport_AddModule(ptr noundef) #1

declare !dbg !2198 i32 @PyObject_SetAttrString(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_binary_version(i64 noundef %ct_version, i64 noundef %rt_version, i32 noundef %allow_newer) #0 !dbg !2199 {
entry:
  %retval = alloca i32, align 4
  %ct_version.addr = alloca i64, align 8
  %rt_version.addr = alloca i64, align 8
  %allow_newer.addr = alloca i32, align 4
  %MAJOR_MINOR = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %message = alloca [200 x i8], align 16
  store i64 %ct_version, ptr %ct_version.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %ct_version.addr, metadata !2203, metadata !DIExpression()), !dbg !2213
  store i64 %rt_version, ptr %rt_version.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %rt_version.addr, metadata !2204, metadata !DIExpression()), !dbg !2214
  store i32 %allow_newer, ptr %allow_newer.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %allow_newer.addr, metadata !2205, metadata !DIExpression()), !dbg !2215
  call void @llvm.lifetime.start.p0(i64 8, ptr %MAJOR_MINOR) #10, !dbg !2216
  tail call void @llvm.dbg.declare(metadata ptr %MAJOR_MINOR, metadata !2206, metadata !DIExpression()), !dbg !2217
  store i64 4294901760, ptr %MAJOR_MINOR, align 8, !dbg !2217, !tbaa !1836
  %0 = load i64, ptr %rt_version.addr, align 8, !dbg !2218, !tbaa !1836
  %and = and i64 %0, 4294901760, !dbg !2220
  %1 = load i64, ptr %ct_version.addr, align 8, !dbg !2221, !tbaa !1836
  %and1 = and i64 %1, 4294901760, !dbg !2222
  %cmp = icmp eq i64 %and, %and1, !dbg !2223
  br i1 %cmp, label %if.then, label %if.end, !dbg !2224

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !2225
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2225

if.end:                                           ; preds = %entry
  %2 = load i32, ptr %allow_newer.addr, align 4, !dbg !2226, !tbaa !1557
  %tobool = icmp ne i32 %2, 0, !dbg !2226
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2226

land.rhs:                                         ; preds = %if.end
  %3 = load i64, ptr %rt_version.addr, align 8, !dbg !2226, !tbaa !1836
  %and2 = and i64 %3, 4294901760, !dbg !2226
  %4 = load i64, ptr %ct_version.addr, align 8, !dbg !2226, !tbaa !1836
  %and3 = and i64 %4, 4294901760, !dbg !2226
  %cmp4 = icmp ugt i64 %and2, %and3, !dbg !2226
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %5 = phi i1 [ false, %if.end ], [ %cmp4, %land.rhs ], !dbg !2228
  %lnot = xor i1 %5, true, !dbg !2226
  %lnot5 = xor i1 %lnot, true, !dbg !2226
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !2226
  %conv = sext i32 %lnot.ext to i64, !dbg !2226
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2226
  %tobool6 = icmp ne i64 %expval, 0, !dbg !2226
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !2229

if.then7:                                         ; preds = %land.end
  store i32 1, ptr %retval, align 4, !dbg !2230
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2230

if.end8:                                          ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 200, ptr %message) #10, !dbg !2231
  tail call void @llvm.dbg.declare(metadata ptr %message, metadata !2208, metadata !DIExpression()), !dbg !2232
  %arraydecay = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0, !dbg !2233
  %6 = load i64, ptr %ct_version.addr, align 8, !dbg !2234, !tbaa !1836
  %shr = lshr i64 %6, 24, !dbg !2235
  %conv9 = trunc i64 %shr to i32, !dbg !2236
  %7 = load i64, ptr %ct_version.addr, align 8, !dbg !2237, !tbaa !1836
  %shr10 = lshr i64 %7, 16, !dbg !2238
  %and11 = and i64 %shr10, 255, !dbg !2239
  %conv12 = trunc i64 %and11 to i32, !dbg !2240
  %8 = load i32, ptr %allow_newer.addr, align 4, !dbg !2241, !tbaa !1557
  %tobool13 = icmp ne i32 %8, 0, !dbg !2242
  %9 = zext i1 %tobool13 to i64, !dbg !2242
  %cond = select i1 %tobool13, ptr @.str.21, ptr @.str.22, !dbg !2242
  %10 = load i64, ptr %rt_version.addr, align 8, !dbg !2243, !tbaa !1836
  %shr14 = lshr i64 %10, 24, !dbg !2244
  %conv15 = trunc i64 %shr14 to i32, !dbg !2245
  %11 = load i64, ptr %rt_version.addr, align 8, !dbg !2246, !tbaa !1836
  %shr16 = lshr i64 %11, 16, !dbg !2247
  %and17 = and i64 %shr16, 255, !dbg !2248
  %conv18 = trunc i64 %and17 to i32, !dbg !2249
  %call = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay, i64 noundef 200, ptr noundef @.str.20, i32 noundef %conv9, i32 noundef %conv12, ptr noundef @.str.16, ptr noundef %cond, i32 noundef %conv15, i32 noundef %conv18), !dbg !2250
  %arraydecay19 = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0, !dbg !2251
  %call20 = call i32 @PyErr_WarnEx(ptr noundef null, ptr noundef %arraydecay19, i64 noundef 1), !dbg !2252
  store i32 %call20, ptr %retval, align 4, !dbg !2253
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 200, ptr %message) #10, !dbg !2254
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %MAJOR_MINOR) #10, !dbg !2255
  %12 = load i32, ptr %retval, align 4, !dbg !2255
  ret i32 %12, !dbg !2255
}

; Function Attrs: nounwind uwtable
define internal i64 @__Pyx_get_runtime_version() #0 !dbg !2256 {
entry:
  %0 = load i64, ptr @Py_Version, align 8, !dbg !2259, !tbaa !1836
  %and = and i64 %0, -256, !dbg !2260
  ret i64 %and, !dbg !2261
}

declare !dbg !2262 ptr @PyTuple_New(i64 noundef) #1

declare !dbg !2266 ptr @PyBytes_FromStringAndSize(ptr noundef, i64 noundef) #1

declare !dbg !2270 ptr @PyUnicode_FromStringAndSize(ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitConstants() #0 !dbg !2271 {
entry:
  %retval = alloca i32, align 4
  store ptr @PyDict_Type, ptr @__pyx_umethod_PyDict_Type_get, align 8, !dbg !2274, !tbaa !2275
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2277, !tbaa !1461
  %__pyx_n_s_get = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 35, !dbg !2277
  store ptr %__pyx_n_s_get, ptr getelementptr inbounds (%struct.__Pyx_CachedCFunction, ptr @__pyx_umethod_PyDict_Type_get, i32 0, i32 1), align 8, !dbg !2278, !tbaa !2279
  %call = call i32 @__Pyx_CreateStringTabAndInitStrings(), !dbg !2280
  %cmp = icmp slt i32 %call, 0, !dbg !2282
  br i1 %cmp, label %if.then, label %if.end, !dbg !2283

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_f, align 16, !dbg !2284, !tbaa !1461
  store ptr %1, ptr @__pyx_filename, align 8, !dbg !2284, !tbaa !1461
  %2 = load ptr, ptr @__pyx_filename, align 8, !dbg !2284, !tbaa !1461
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2284, !tbaa !1557
  %3 = load i32, ptr @__pyx_lineno, align 4, !dbg !2284, !tbaa !1557
  store i32 6200, ptr @__pyx_clineno, align 4, !dbg !2284, !tbaa !1557
  %4 = load i32, ptr @__pyx_clineno, align 4, !dbg !2284, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2287

if.end:                                           ; preds = %entry
  %call1 = call ptr @PyLong_FromLong(i64 noundef 0), !dbg !2288
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2289, !tbaa !1461
  %__pyx_int_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 56, !dbg !2289
  store ptr %call1, ptr %__pyx_int_0, align 8, !dbg !2290, !tbaa !1783
  %6 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2291, !tbaa !1461
  %__pyx_int_02 = getelementptr inbounds %struct.__pyx_mstate, ptr %6, i32 0, i32 56, !dbg !2291
  %7 = load ptr, ptr %__pyx_int_02, align 8, !dbg !2291, !tbaa !1783
  %tobool = icmp ne ptr %7, null, !dbg !2291
  %lnot = xor i1 %tobool, true, !dbg !2291
  %lnot3 = xor i1 %lnot, true, !dbg !2291
  %lnot4 = xor i1 %lnot3, true, !dbg !2291
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !2291
  %conv = sext i32 %lnot.ext to i64, !dbg !2291
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2291
  %tobool5 = icmp ne i64 %expval, 0, !dbg !2291
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !2293

if.then6:                                         ; preds = %if.end
  %8 = load ptr, ptr @__pyx_f, align 16, !dbg !2294, !tbaa !1461
  store ptr %8, ptr @__pyx_filename, align 8, !dbg !2294, !tbaa !1461
  %9 = load ptr, ptr @__pyx_filename, align 8, !dbg !2294, !tbaa !1461
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2294, !tbaa !1557
  %10 = load i32, ptr @__pyx_lineno, align 4, !dbg !2294, !tbaa !1557
  store i32 6201, ptr @__pyx_clineno, align 4, !dbg !2294, !tbaa !1557
  %11 = load i32, ptr @__pyx_clineno, align 4, !dbg !2294, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2297

if.end7:                                          ; preds = %if.end
  %call8 = call ptr @PyLong_FromLong(i64 noundef 1), !dbg !2298
  %12 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2299, !tbaa !1461
  %__pyx_int_1 = getelementptr inbounds %struct.__pyx_mstate, ptr %12, i32 0, i32 57, !dbg !2299
  store ptr %call8, ptr %__pyx_int_1, align 8, !dbg !2300, !tbaa !2301
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2302, !tbaa !1461
  %__pyx_int_19 = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 57, !dbg !2302
  %14 = load ptr, ptr %__pyx_int_19, align 8, !dbg !2302, !tbaa !2301
  %tobool10 = icmp ne ptr %14, null, !dbg !2302
  %lnot11 = xor i1 %tobool10, true, !dbg !2302
  %lnot13 = xor i1 %lnot11, true, !dbg !2302
  %lnot15 = xor i1 %lnot13, true, !dbg !2302
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !2302
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !2302
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0), !dbg !2302
  %tobool19 = icmp ne i64 %expval18, 0, !dbg !2302
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !2304

if.then20:                                        ; preds = %if.end7
  %15 = load ptr, ptr @__pyx_f, align 16, !dbg !2305, !tbaa !1461
  store ptr %15, ptr @__pyx_filename, align 8, !dbg !2305, !tbaa !1461
  %16 = load ptr, ptr @__pyx_filename, align 8, !dbg !2305, !tbaa !1461
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2305, !tbaa !1557
  %17 = load i32, ptr @__pyx_lineno, align 4, !dbg !2305, !tbaa !1557
  store i32 6202, ptr @__pyx_clineno, align 4, !dbg !2305, !tbaa !1557
  %18 = load i32, ptr @__pyx_clineno, align 4, !dbg !2305, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2308

if.end21:                                         ; preds = %if.end7
  %call22 = call ptr @PyLong_FromLong(i64 noundef 2), !dbg !2309
  %19 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2310, !tbaa !1461
  %__pyx_int_2 = getelementptr inbounds %struct.__pyx_mstate, ptr %19, i32 0, i32 58, !dbg !2310
  store ptr %call22, ptr %__pyx_int_2, align 8, !dbg !2311, !tbaa !2312
  %20 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2313, !tbaa !1461
  %__pyx_int_223 = getelementptr inbounds %struct.__pyx_mstate, ptr %20, i32 0, i32 58, !dbg !2313
  %21 = load ptr, ptr %__pyx_int_223, align 8, !dbg !2313, !tbaa !2312
  %tobool24 = icmp ne ptr %21, null, !dbg !2313
  %lnot25 = xor i1 %tobool24, true, !dbg !2313
  %lnot27 = xor i1 %lnot25, true, !dbg !2313
  %lnot29 = xor i1 %lnot27, true, !dbg !2313
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !2313
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !2313
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0), !dbg !2313
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !2313
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !2315

if.then34:                                        ; preds = %if.end21
  %22 = load ptr, ptr @__pyx_f, align 16, !dbg !2316, !tbaa !1461
  store ptr %22, ptr @__pyx_filename, align 8, !dbg !2316, !tbaa !1461
  %23 = load ptr, ptr @__pyx_filename, align 8, !dbg !2316, !tbaa !1461
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !2316, !tbaa !1557
  %24 = load i32, ptr @__pyx_lineno, align 4, !dbg !2316, !tbaa !1557
  store i32 6203, ptr @__pyx_clineno, align 4, !dbg !2316, !tbaa !1557
  %25 = load i32, ptr @__pyx_clineno, align 4, !dbg !2316, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2319

if.end35:                                         ; preds = %if.end21
  store i32 0, ptr %retval, align 4, !dbg !2320
  br label %return, !dbg !2320

__pyx_L1_error:                                   ; preds = %if.then34, %if.then20, %if.then6, %if.then
  tail call void @llvm.dbg.label(metadata !2273), !dbg !2321
  store i32 -1, ptr %retval, align 4, !dbg !2322
  br label %return, !dbg !2322

return:                                           ; preds = %__pyx_L1_error, %if.end35
  %26 = load i32, ptr %retval, align 4, !dbg !2323
  ret i32 %26, !dbg !2323
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitGlobals() #0 !dbg !2324 {
entry:
  ret i32 0, !dbg !2325
}

declare !dbg !2326 i32 @PyObject_SetAttr(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !2327 ptr @PyImport_GetModuleDict() #1

declare !dbg !2328 ptr @PyDict_GetItemString(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedBuiltins() #0 !dbg !2329 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2332, !tbaa !1461
  %__pyx_n_s_range = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 49, !dbg !2332
  %1 = load ptr, ptr %__pyx_n_s_range, align 8, !dbg !2332, !tbaa !2333
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %1), !dbg !2334
  store ptr %call, ptr @__pyx_builtin_range, align 8, !dbg !2335, !tbaa !1461
  %2 = load ptr, ptr @__pyx_builtin_range, align 8, !dbg !2336, !tbaa !1461
  %tobool = icmp ne ptr %2, null, !dbg !2336
  br i1 %tobool, label %if.end, label %if.then, !dbg !2338

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !2339, !tbaa !1461
  store ptr %3, ptr @__pyx_filename, align 8, !dbg !2339, !tbaa !1461
  %4 = load ptr, ptr @__pyx_filename, align 8, !dbg !2339, !tbaa !1461
  store i32 19, ptr @__pyx_lineno, align 4, !dbg !2339, !tbaa !1557
  %5 = load i32, ptr @__pyx_lineno, align 4, !dbg !2339, !tbaa !1557
  store i32 6166, ptr @__pyx_clineno, align 4, !dbg !2339, !tbaa !1557
  %6 = load i32, ptr @__pyx_clineno, align 4, !dbg !2339, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2342

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2343, !tbaa !1461
  %__pyx_n_s_id = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 36, !dbg !2343
  %8 = load ptr, ptr %__pyx_n_s_id, align 8, !dbg !2343, !tbaa !2344
  %call1 = call ptr @__Pyx_GetBuiltinName(ptr noundef %8), !dbg !2345
  store ptr %call1, ptr @__pyx_builtin_id, align 8, !dbg !2346, !tbaa !1461
  %9 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !2347, !tbaa !1461
  %tobool2 = icmp ne ptr %9, null, !dbg !2347
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !2349

if.then3:                                         ; preds = %if.end
  %10 = load ptr, ptr @__pyx_f, align 16, !dbg !2350, !tbaa !1461
  store ptr %10, ptr @__pyx_filename, align 8, !dbg !2350, !tbaa !1461
  %11 = load ptr, ptr @__pyx_filename, align 8, !dbg !2350, !tbaa !1461
  store i32 17, ptr @__pyx_lineno, align 4, !dbg !2350, !tbaa !1557
  %12 = load i32, ptr @__pyx_lineno, align 4, !dbg !2350, !tbaa !1557
  store i32 6167, ptr @__pyx_clineno, align 4, !dbg !2350, !tbaa !1557
  %13 = load i32, ptr @__pyx_clineno, align 4, !dbg !2350, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2353

if.end4:                                          ; preds = %if.end
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2354, !tbaa !1461
  %__pyx_n_s_print = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 47, !dbg !2354
  %15 = load ptr, ptr %__pyx_n_s_print, align 8, !dbg !2354, !tbaa !2355
  %call5 = call ptr @__Pyx_GetBuiltinName(ptr noundef %15), !dbg !2356
  store ptr %call5, ptr @__pyx_builtin_print, align 8, !dbg !2357, !tbaa !1461
  %16 = load ptr, ptr @__pyx_builtin_print, align 8, !dbg !2358, !tbaa !1461
  %tobool6 = icmp ne ptr %16, null, !dbg !2358
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !2360

if.then7:                                         ; preds = %if.end4
  %17 = load ptr, ptr @__pyx_f, align 16, !dbg !2361, !tbaa !1461
  store ptr %17, ptr @__pyx_filename, align 8, !dbg !2361, !tbaa !1461
  %18 = load ptr, ptr @__pyx_filename, align 8, !dbg !2361, !tbaa !1461
  store i32 76, ptr @__pyx_lineno, align 4, !dbg !2361, !tbaa !1557
  %19 = load i32, ptr @__pyx_lineno, align 4, !dbg !2361, !tbaa !1557
  store i32 6168, ptr @__pyx_clineno, align 4, !dbg !2361, !tbaa !1557
  %20 = load i32, ptr @__pyx_clineno, align 4, !dbg !2361, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2364

if.end8:                                          ; preds = %if.end4
  store i32 0, ptr %retval, align 4, !dbg !2365
  br label %return, !dbg !2365

__pyx_L1_error:                                   ; preds = %if.then7, %if.then3, %if.then
  tail call void @llvm.dbg.label(metadata !2331), !dbg !2366
  store i32 -1, ptr %retval, align 4, !dbg !2367
  br label %return, !dbg !2367

return:                                           ; preds = %__pyx_L1_error, %if.end8
  %21 = load i32, ptr %retval, align 4, !dbg !2368
  ret i32 %21, !dbg !2368
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedConstants() #0 !dbg !2369 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2372, !tbaa !1461
  %__pyx_int_2 = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 58, !dbg !2372
  %1 = load ptr, ptr %__pyx_int_2, align 8, !dbg !2372, !tbaa !2312
  %call = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %1), !dbg !2373
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2374, !tbaa !1461
  %__pyx_tuple__8 = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 59, !dbg !2374
  store ptr %call, ptr %__pyx_tuple__8, align 8, !dbg !2375, !tbaa !1816
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2376, !tbaa !1461
  %__pyx_tuple__81 = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 59, !dbg !2376
  %4 = load ptr, ptr %__pyx_tuple__81, align 8, !dbg !2376, !tbaa !1816
  %tobool = icmp ne ptr %4, null, !dbg !2376
  %lnot = xor i1 %tobool, true, !dbg !2376
  %lnot2 = xor i1 %lnot, true, !dbg !2376
  %lnot3 = xor i1 %lnot2, true, !dbg !2376
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !2376
  %conv = sext i32 %lnot.ext to i64, !dbg !2376
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2376
  %tobool4 = icmp ne i64 %expval, 0, !dbg !2376
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2378

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr @__pyx_f, align 16, !dbg !2379, !tbaa !1461
  store ptr %5, ptr @__pyx_filename, align 8, !dbg !2379, !tbaa !1461
  %6 = load ptr, ptr @__pyx_filename, align 8, !dbg !2379, !tbaa !1461
  store i32 19, ptr @__pyx_lineno, align 4, !dbg !2379, !tbaa !1557
  %7 = load i32, ptr @__pyx_lineno, align 4, !dbg !2379, !tbaa !1557
  store i32 6186, ptr @__pyx_clineno, align 4, !dbg !2379, !tbaa !1557
  %8 = load i32, ptr @__pyx_clineno, align 4, !dbg !2379, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2382

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !2383
  br label %return, !dbg !2383

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !2371), !dbg !2384
  store i32 -1, ptr %retval, align 4, !dbg !2385
  br label %return, !dbg !2385

return:                                           ; preds = %__pyx_L1_error, %if.end
  %9 = load i32, ptr %retval, align 4, !dbg !2386
  ret i32 %9, !dbg !2386
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_global_init_code() #0 !dbg !2387 {
entry:
  ret i32 0, !dbg !2388
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_export_code() #0 !dbg !2389 {
entry:
  ret i32 0, !dbg !2390
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_export_code() #0 !dbg !2391 {
entry:
  ret i32 0, !dbg !2392
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_init_code() #0 !dbg !2393 {
entry:
  %retval = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2399
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !2395, metadata !DIExpression()), !dbg !2400
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2400, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2401
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !2396, metadata !DIExpression()), !dbg !2402
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2402, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2403
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !2397, metadata !DIExpression()), !dbg !2404
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2404, !tbaa !1557
  store ptr @__pyx_vtable_6Cython_7Runtime_8refnanny_Context, ptr @__pyx_vtabptr_6Cython_7Runtime_8refnanny_Context, align 8, !dbg !2405, !tbaa !1461
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref, ptr @__pyx_vtable_6Cython_7Runtime_8refnanny_Context, align 8, !dbg !2406, !tbaa !2407
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_6Cython_7Runtime_8refnanny_Context, ptr @__pyx_vtable_6Cython_7Runtime_8refnanny_Context, i32 0, i32 1), align 8, !dbg !2409, !tbaa !2410
  store ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_end, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_6Cython_7Runtime_8refnanny_Context, ptr @__pyx_vtable_6Cython_7Runtime_8refnanny_Context, i32 0, i32 2), align 8, !dbg !2411, !tbaa !2412
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2413, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 7, !dbg !2413
  store ptr @__pyx_type_6Cython_7Runtime_8refnanny_Context, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context, align 8, !dbg !2414, !tbaa !2415
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2416, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context1 = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 7, !dbg !2416
  %2 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context1, align 8, !dbg !2416, !tbaa !2415
  %call = call i32 @__Pyx_PyType_Ready(ptr noundef %2), !dbg !2418
  %cmp = icmp slt i32 %call, 0, !dbg !2419
  br i1 %cmp, label %if.then, label %if.end, !dbg !2420

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !2421, !tbaa !1461
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !2421, !tbaa !1461
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !2421, !tbaa !1461
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !2421, !tbaa !1557
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !2421, !tbaa !1557
  store i32 6267, ptr %__pyx_clineno, align 4, !dbg !2421, !tbaa !1557
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !2421, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2424

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2425, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context2 = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 7, !dbg !2425
  %8 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context2, align 8, !dbg !2425, !tbaa !2415
  %tp_dictoffset = getelementptr inbounds %struct._typeobject, ptr %8, i32 0, i32 34, !dbg !2425
  %9 = load i64, ptr %tp_dictoffset, align 8, !dbg !2425, !tbaa !2427
  %tobool = icmp ne i64 %9, 0, !dbg !2425
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2425

land.rhs:                                         ; preds = %if.end
  %10 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2425, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context3 = getelementptr inbounds %struct.__pyx_mstate, ptr %10, i32 0, i32 7, !dbg !2425
  %11 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context3, align 8, !dbg !2425, !tbaa !2415
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %11, i32 0, i32 16, !dbg !2425
  %12 = load ptr, ptr %tp_getattro, align 8, !dbg !2425, !tbaa !2428
  %cmp4 = icmp eq ptr %12, @PyObject_GenericGetAttr, !dbg !2425
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %13 = phi i1 [ false, %if.end ], [ %cmp4, %land.rhs ], !dbg !2429
  %lnot = xor i1 %13, true, !dbg !2425
  %lnot5 = xor i1 %lnot, true, !dbg !2425
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !2425
  %conv = sext i32 %lnot.ext to i64, !dbg !2425
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2425
  %tobool6 = icmp ne i64 %expval, 0, !dbg !2425
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !2430

if.then7:                                         ; preds = %land.end
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2431, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context8 = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 7, !dbg !2431
  %15 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context8, align 8, !dbg !2431, !tbaa !2415
  %tp_getattro9 = getelementptr inbounds %struct._typeobject, ptr %15, i32 0, i32 16, !dbg !2433
  store ptr @PyObject_GenericGetAttr, ptr %tp_getattro9, align 8, !dbg !2434, !tbaa !2428
  br label %if.end10, !dbg !2435

if.end10:                                         ; preds = %if.then7, %land.end
  %16 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2436, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context11 = getelementptr inbounds %struct.__pyx_mstate, ptr %16, i32 0, i32 7, !dbg !2436
  %17 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context11, align 8, !dbg !2436, !tbaa !2415
  %18 = load ptr, ptr @__pyx_vtabptr_6Cython_7Runtime_8refnanny_Context, align 8, !dbg !2438, !tbaa !1461
  %call12 = call i32 @__Pyx_SetVtable(ptr noundef %17, ptr noundef %18), !dbg !2439
  %cmp13 = icmp slt i32 %call12, 0, !dbg !2440
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !2441

if.then15:                                        ; preds = %if.end10
  %19 = load ptr, ptr @__pyx_f, align 16, !dbg !2442, !tbaa !1461
  store ptr %19, ptr %__pyx_filename, align 8, !dbg !2442, !tbaa !1461
  %20 = load ptr, ptr %__pyx_filename, align 8, !dbg !2442, !tbaa !1461
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !2442, !tbaa !1557
  %21 = load i32, ptr %__pyx_lineno, align 4, !dbg !2442, !tbaa !1557
  store i32 6277, ptr %__pyx_clineno, align 4, !dbg !2442, !tbaa !1557
  %22 = load i32, ptr %__pyx_clineno, align 4, !dbg !2442, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2445

if.end16:                                         ; preds = %if.end10
  %23 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2446, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context17 = getelementptr inbounds %struct.__pyx_mstate, ptr %23, i32 0, i32 7, !dbg !2446
  %24 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context17, align 8, !dbg !2446, !tbaa !2415
  %call18 = call i32 @__Pyx_MergeVtables(ptr noundef %24), !dbg !2448
  %cmp19 = icmp slt i32 %call18, 0, !dbg !2449
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2450

if.then21:                                        ; preds = %if.end16
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !2451, !tbaa !1461
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !2451, !tbaa !1461
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !2451, !tbaa !1461
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !2451, !tbaa !1557
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !2451, !tbaa !1557
  store i32 6279, ptr %__pyx_clineno, align 4, !dbg !2451, !tbaa !1557
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !2451, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2454

if.end22:                                         ; preds = %if.end16
  %29 = load ptr, ptr @__pyx_m, align 8, !dbg !2455, !tbaa !1461
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2457, !tbaa !1461
  %__pyx_n_s_Context = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 9, !dbg !2457
  %31 = load ptr, ptr %__pyx_n_s_Context, align 8, !dbg !2457, !tbaa !2458
  %32 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2459, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context23 = getelementptr inbounds %struct.__pyx_mstate, ptr %32, i32 0, i32 7, !dbg !2459
  %33 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context23, align 8, !dbg !2459, !tbaa !2415
  %call24 = call i32 @PyObject_SetAttr(ptr noundef %29, ptr noundef %31, ptr noundef %33), !dbg !2460
  %cmp25 = icmp slt i32 %call24, 0, !dbg !2461
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !2462

if.then27:                                        ; preds = %if.end22
  %34 = load ptr, ptr @__pyx_f, align 16, !dbg !2463, !tbaa !1461
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !2463, !tbaa !1461
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !2463, !tbaa !1461
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !2463, !tbaa !1557
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !2463, !tbaa !1557
  store i32 6281, ptr %__pyx_clineno, align 4, !dbg !2463, !tbaa !1557
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !2463, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2466

if.end28:                                         ; preds = %if.end22
  store i32 0, ptr %retval, align 4, !dbg !2467
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2467

__pyx_L1_error:                                   ; preds = %if.then27, %if.then21, %if.then15, %if.then
  tail call void @llvm.dbg.label(metadata !2398), !dbg !2468
  store i32 -1, ptr %retval, align 4, !dbg !2469
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2469

cleanup:                                          ; preds = %__pyx_L1_error, %if.end28
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2470
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2470
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2470
  %38 = load i32, ptr %retval, align 4, !dbg !2470
  ret i32 %38, !dbg !2470
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_import_code() #0 !dbg !2471 {
entry:
  %retval = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !2478
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !2473, metadata !DIExpression()), !dbg !2479
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !2479, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2480
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !2474, metadata !DIExpression()), !dbg !2481
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2481, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2482
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !2475, metadata !DIExpression()), !dbg !2483
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2483, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2484
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !2476, metadata !DIExpression()), !dbg !2485
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2485, !tbaa !1557
  %call = call ptr @PyImport_ImportModule(ptr noundef @.str.12), !dbg !2486
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !2487, !tbaa !1461
  %0 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2488, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !2488
  %lnot = xor i1 %tobool, true, !dbg !2488
  %lnot1 = xor i1 %lnot, true, !dbg !2488
  %lnot2 = xor i1 %lnot1, true, !dbg !2488
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2488
  %conv = sext i32 %lnot.ext to i64, !dbg !2488
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2488
  %tobool3 = icmp ne i64 %expval, 0, !dbg !2488
  br i1 %tobool3, label %if.then, label %if.end, !dbg !2490

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2491, !tbaa !1461
  store ptr %1, ptr %__pyx_filename, align 8, !dbg !2491, !tbaa !1461
  %2 = load ptr, ptr %__pyx_filename, align 8, !dbg !2491, !tbaa !1461
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !2491, !tbaa !1557
  %3 = load i32, ptr %__pyx_lineno, align 4, !dbg !2491, !tbaa !1557
  store i32 6297, ptr %__pyx_clineno, align 4, !dbg !2491, !tbaa !1557
  %4 = load i32, ptr %__pyx_clineno, align 4, !dbg !2491, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2494

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2495, !tbaa !1461
  %call4 = call ptr @__Pyx_ImportType_3_0_4(ptr noundef %5, ptr noundef @.str.12, ptr noundef @.str.64, i64 noundef 904, i64 noundef 8, i32 noundef 1), !dbg !2496
  %6 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2497, !tbaa !1461
  %__pyx_ptype_7cpython_4type_type = getelementptr inbounds %struct.__pyx_mstate, ptr %6, i32 0, i32 6, !dbg !2497
  store ptr %call4, ptr %__pyx_ptype_7cpython_4type_type, align 8, !dbg !2498, !tbaa !2499
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !2500, !tbaa !1461
  %__pyx_ptype_7cpython_4type_type5 = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 6, !dbg !2500
  %8 = load ptr, ptr %__pyx_ptype_7cpython_4type_type5, align 8, !dbg !2500, !tbaa !2499
  %tobool6 = icmp ne ptr %8, null, !dbg !2500
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !2502

if.then7:                                         ; preds = %if.end
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2503, !tbaa !1461
  store ptr %9, ptr %__pyx_filename, align 8, !dbg !2503, !tbaa !1461
  %10 = load ptr, ptr %__pyx_filename, align 8, !dbg !2503, !tbaa !1461
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !2503, !tbaa !1557
  %11 = load i32, ptr %__pyx_lineno, align 4, !dbg !2503, !tbaa !1557
  store i32 6307, ptr %__pyx_clineno, align 4, !dbg !2503, !tbaa !1557
  %12 = load i32, ptr %__pyx_clineno, align 4, !dbg !2503, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2506

if.end8:                                          ; preds = %if.end
  %13 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2507, !tbaa !1461
  call void @Py_DECREF(ptr noundef %13), !dbg !2507
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !2508, !tbaa !1461
  store i32 0, ptr %retval, align 4, !dbg !2509
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2509

__pyx_L1_error:                                   ; preds = %if.then7, %if.then
  tail call void @llvm.dbg.label(metadata !2477), !dbg !2510
  %14 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2511, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %14), !dbg !2511
  store i32 -1, ptr %retval, align 4, !dbg !2512
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2512

cleanup:                                          ; preds = %__pyx_L1_error, %if.end8
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2513
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2513
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2513
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !2513
  %15 = load i32, ptr %retval, align 4, !dbg !2513
  ret i32 %15, !dbg !2513
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_import_code() #0 !dbg !2514 {
entry:
  ret i32 0, !dbg !2515
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_import_code() #0 !dbg !2516 {
entry:
  ret i32 0, !dbg !2517
}

declare !dbg !2518 i32 @PyDict_SetItem(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !2519 ptr @PyList_New(i64 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_Call(ptr noundef %func, ptr noundef %arg, ptr noundef %kw) #3 !dbg !2521 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %call = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !2523, metadata !DIExpression()), !dbg !2528
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !2524, metadata !DIExpression()), !dbg !2529
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !2525, metadata !DIExpression()), !dbg !2530
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !2531
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !2526, metadata !DIExpression()), !dbg !2532
  call void @llvm.lifetime.start.p0(i64 8, ptr %call) #10, !dbg !2533
  tail call void @llvm.dbg.declare(metadata ptr %call, metadata !2527, metadata !DIExpression()), !dbg !2534
  %0 = load ptr, ptr %func.addr, align 8, !dbg !2535, !tbaa !1461
  %call1 = call ptr @Py_TYPE(ptr noundef %0), !dbg !2535
  %tp_call = getelementptr inbounds %struct._typeobject, ptr %call1, i32 0, i32 14, !dbg !2536
  %1 = load ptr, ptr %tp_call, align 8, !dbg !2536, !tbaa !2537
  store ptr %1, ptr %call, align 8, !dbg !2534, !tbaa !1461
  %2 = load ptr, ptr %call, align 8, !dbg !2538, !tbaa !1461
  %tobool = icmp ne ptr %2, null, !dbg !2538
  %lnot = xor i1 %tobool, true, !dbg !2538
  %lnot2 = xor i1 %lnot, true, !dbg !2538
  %lnot3 = xor i1 %lnot2, true, !dbg !2538
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !2538
  %conv = sext i32 %lnot.ext to i64, !dbg !2538
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2538
  %tobool4 = icmp ne i64 %expval, 0, !dbg !2538
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2540

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %func.addr, align 8, !dbg !2541, !tbaa !1461
  %4 = load ptr, ptr %arg.addr, align 8, !dbg !2542, !tbaa !1461
  %5 = load ptr, ptr %kw.addr, align 8, !dbg !2543, !tbaa !1461
  %call5 = call ptr @PyObject_Call(ptr noundef %3, ptr noundef %4, ptr noundef %5), !dbg !2544
  store ptr %call5, ptr %retval, align 8, !dbg !2545
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2545

if.end:                                           ; preds = %entry
  %call6 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.34), !dbg !2546
  %tobool7 = icmp ne i32 %call6, 0, !dbg !2546
  %lnot8 = xor i1 %tobool7, true, !dbg !2546
  %lnot10 = xor i1 %lnot8, true, !dbg !2546
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !2546
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !2546
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !2546
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !2546
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !2548

if.then15:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !2549
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2549

if.end16:                                         ; preds = %if.end
  %6 = load ptr, ptr %call, align 8, !dbg !2550, !tbaa !1461
  %7 = load ptr, ptr %func.addr, align 8, !dbg !2551, !tbaa !1461
  %8 = load ptr, ptr %arg.addr, align 8, !dbg !2552, !tbaa !1461
  %9 = load ptr, ptr %kw.addr, align 8, !dbg !2553, !tbaa !1461
  %call17 = call ptr %6(ptr noundef %7, ptr noundef %8, ptr noundef %9), !dbg !2554
  store ptr %call17, ptr %result, align 8, !dbg !2555, !tbaa !1461
  call void @Py_LeaveRecursiveCall(), !dbg !2556
  %10 = load ptr, ptr %result, align 8, !dbg !2557, !tbaa !1461
  %tobool18 = icmp ne ptr %10, null, !dbg !2557
  %lnot19 = xor i1 %tobool18, true, !dbg !2557
  %lnot21 = xor i1 %lnot19, true, !dbg !2557
  %lnot23 = xor i1 %lnot21, true, !dbg !2557
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !2557
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !2557
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0), !dbg !2557
  %tobool27 = icmp ne i64 %expval26, 0, !dbg !2557
  br i1 %tobool27, label %land.lhs.true, label %if.end40, !dbg !2559

land.lhs.true:                                    ; preds = %if.end16
  %call28 = call ptr @PyErr_Occurred(), !dbg !2560
  %tobool29 = icmp ne ptr %call28, null, !dbg !2560
  %lnot30 = xor i1 %tobool29, true, !dbg !2560
  %lnot32 = xor i1 %lnot30, true, !dbg !2560
  %lnot34 = xor i1 %lnot32, true, !dbg !2560
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !2560
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !2560
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0), !dbg !2560
  %tobool38 = icmp ne i64 %expval37, 0, !dbg !2560
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !2561

if.then39:                                        ; preds = %land.lhs.true
  %11 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !2562, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %11, ptr noundef @.str.35), !dbg !2564
  br label %if.end40, !dbg !2565

if.end40:                                         ; preds = %if.then39, %land.lhs.true, %if.end16
  %12 = load ptr, ptr %result, align 8, !dbg !2566, !tbaa !1461
  store ptr %12, ptr %retval, align 8, !dbg !2567
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2567

cleanup:                                          ; preds = %if.end40, %if.then15, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %call) #10, !dbg !2568
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !2568
  %13 = load ptr, ptr %retval, align 8, !dbg !2568
  ret ptr %13, !dbg !2568
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @Py_IS_TYPE(ptr noundef %ob, ptr noundef %type) #3 !dbg !2569 {
entry:
  %ob.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !2573, metadata !DIExpression()), !dbg !2575
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !2574, metadata !DIExpression()), !dbg !2576
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !2577, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !2577
  %1 = load ptr, ptr %type.addr, align 8, !dbg !2578, !tbaa !1461
  %cmp = icmp eq ptr %call, %1, !dbg !2579
  %conv = zext i1 %cmp to i32, !dbg !2579
  ret i32 %conv, !dbg !2580
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @Py_SIZE(ptr noundef %ob) #3 !dbg !2581 {
entry:
  %ob.addr = alloca ptr, align 8
  %var_ob = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !2583, metadata !DIExpression()), !dbg !2585
  call void @llvm.lifetime.start.p0(i64 8, ptr %var_ob) #10, !dbg !2586
  tail call void @llvm.dbg.declare(metadata ptr %var_ob, metadata !2584, metadata !DIExpression()), !dbg !2587
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !2588, !tbaa !1461
  store ptr %0, ptr %var_ob, align 8, !dbg !2587, !tbaa !1461
  %1 = load ptr, ptr %var_ob, align 8, !dbg !2589, !tbaa !1461
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %1, i32 0, i32 1, !dbg !2590
  %2 = load i64, ptr %ob_size, align 8, !dbg !2590, !tbaa !2591
  call void @llvm.lifetime.end.p0(i64 8, ptr %var_ob) #10, !dbg !2592
  ret i64 %2, !dbg !2593
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseTooManyValuesError(i64 noundef %expected) #3 !dbg !2594 {
entry:
  %expected.addr = alloca i64, align 8
  store i64 %expected, ptr %expected.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %expected.addr, metadata !2598, metadata !DIExpression()), !dbg !2599
  %0 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !2600, !tbaa !1461
  %1 = load i64, ptr %expected.addr, align 8, !dbg !2601, !tbaa !1836
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.69, i64 noundef %1), !dbg !2602
  ret void, !dbg !2603
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %index) #3 !dbg !2604 {
entry:
  %index.addr = alloca i64, align 8
  store i64 %index, ptr %index.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !2606, metadata !DIExpression()), !dbg !2607
  %0 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !2608, !tbaa !1461
  %1 = load i64, ptr %index.addr, align 8, !dbg !2609, !tbaa !1836
  %2 = load i64, ptr %index.addr, align 8, !dbg !2610, !tbaa !1836
  %cmp = icmp eq i64 %2, 1, !dbg !2611
  %3 = zext i1 %cmp to i64, !dbg !2612
  %cond = select i1 %cmp, ptr @.str.15, ptr @.str.59, !dbg !2612
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.70, i64 noundef %1, ptr noundef %cond), !dbg !2613
  ret void, !dbg !2614
}

declare !dbg !2615 ptr @PyObject_GetIter(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @Py_TYPE(ptr noundef %ob) #3 !dbg !2617 {
entry:
  %ob.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !2621, metadata !DIExpression()), !dbg !2622
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !2623, !tbaa !1461
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !2624
  %1 = load ptr, ptr %ob_type, align 8, !dbg !2624, !tbaa !2625
  ret ptr %1, !dbg !2626
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %retval1, i64 noundef %expected) #0 !dbg !2627 {
entry:
  %retval = alloca i32, align 4
  %retval.addr = alloca ptr, align 8
  %expected.addr = alloca i64, align 8
  store ptr %retval1, ptr %retval.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %retval.addr, metadata !2631, metadata !DIExpression()), !dbg !2633
  store i64 %expected, ptr %expected.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %expected.addr, metadata !2632, metadata !DIExpression()), !dbg !2634
  %0 = load ptr, ptr %retval.addr, align 8, !dbg !2635, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !2635
  %lnot = xor i1 %tobool, true, !dbg !2635
  %lnot2 = xor i1 %lnot, true, !dbg !2635
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2635
  %conv = sext i32 %lnot.ext to i64, !dbg !2635
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2635
  %tobool3 = icmp ne i64 %expval, 0, !dbg !2635
  br i1 %tobool3, label %if.then, label %if.end, !dbg !2637

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %retval.addr, align 8, !dbg !2638, !tbaa !1461
  call void @Py_DECREF(ptr noundef %1), !dbg !2638
  %2 = load i64, ptr %expected.addr, align 8, !dbg !2640, !tbaa !1836
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef %2), !dbg !2641
  store i32 -1, ptr %retval, align 4, !dbg !2642
  br label %return, !dbg !2642

if.end:                                           ; preds = %entry
  %call = call i32 @__Pyx_IterFinish(), !dbg !2643
  store i32 %call, ptr %retval, align 4, !dbg !2644
  br label %return, !dbg !2644

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !2645
  ret i32 %3, !dbg !2645
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IterFinish() #3 !dbg !2646 {
entry:
  %retval = alloca i32, align 4
  %__pyx_tstate = alloca ptr, align 8
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !2650
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !2648, metadata !DIExpression()), !dbg !2650
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !2651
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !2651, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #10, !dbg !2652
  tail call void @llvm.dbg.declare(metadata ptr %exc_type, metadata !2649, metadata !DIExpression()), !dbg !2653
  %0 = load ptr, ptr %__pyx_tstate, align 8, !dbg !2654, !tbaa !1461
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !2654
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !2654, !tbaa !2655
  store ptr %1, ptr %exc_type, align 8, !dbg !2653, !tbaa !1461
  %2 = load ptr, ptr %exc_type, align 8, !dbg !2656, !tbaa !1461
  %tobool = icmp ne ptr %2, null, !dbg !2656
  %lnot = xor i1 %tobool, true, !dbg !2656
  %lnot1 = xor i1 %lnot, true, !dbg !2656
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2656
  %conv = sext i32 %lnot.ext to i64, !dbg !2656
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2656
  %tobool2 = icmp ne i64 %expval, 0, !dbg !2656
  br i1 %tobool2, label %if.then, label %if.end15, !dbg !2658

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %exc_type, align 8, !dbg !2659, !tbaa !1461
  %4 = load ptr, ptr @PyExc_StopIteration, align 8, !dbg !2659, !tbaa !1461
  %call3 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %3, ptr noundef %4), !dbg !2659
  %tobool4 = icmp ne i32 %call3, 0, !dbg !2659
  %lnot5 = xor i1 %tobool4, true, !dbg !2659
  %lnot7 = xor i1 %lnot5, true, !dbg !2659
  %lnot9 = xor i1 %lnot7, true, !dbg !2659
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !2659
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !2659
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !2659
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !2659
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !2662

if.then14:                                        ; preds = %if.then
  store i32 -1, ptr %retval, align 4, !dbg !2663
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2663

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %__pyx_tstate, align 8, !dbg !2664, !tbaa !1461
  call void @__Pyx_ErrRestoreInState(ptr noundef %5, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !2664
  store i32 0, ptr %retval, align 4, !dbg !2665
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2665

if.end15:                                         ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !2666
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2666

cleanup:                                          ; preds = %if.end15, %if.end, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #10, !dbg !2667
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !2667
  %6 = load i32, ptr %retval, align 4, !dbg !2667
  ret i32 %6, !dbg !2667
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_f_6Cython_7Runtime_8refnanny_INCREF(ptr noundef %__pyx_v_ctx, ptr noundef %__pyx_v_obj, i64 noundef %__pyx_v_lineno) #0 !dbg !2668 {
entry:
  %__pyx_v_ctx.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_ctx, ptr %__pyx_v_ctx.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ctx.addr, metadata !2670, metadata !DIExpression()), !dbg !2678
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_obj.addr, metadata !2671, metadata !DIExpression()), !dbg !2679
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !2672, metadata !DIExpression()), !dbg !2680
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2681
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !2673, metadata !DIExpression()), !dbg !2682
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2682, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2683
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !2674, metadata !DIExpression()), !dbg !2684
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2684, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2685
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !2675, metadata !DIExpression()), !dbg !2686
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2686, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !2687, !tbaa !1461
  call void @Py_XINCREF(ptr noundef %0), !dbg !2687
  %call = call ptr @PyThreadState_Get(), !dbg !2688
  %1 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !2689, !tbaa !1461
  %2 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !2690, !tbaa !1461
  %3 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !2691, !tbaa !1836
  call void @__pyx_f_6Cython_7Runtime_8refnanny_GOTREF(ptr noundef %1, ptr noundef %2, i64 noundef %3), !dbg !2692
  %call1 = call ptr @PyErr_Occurred(), !dbg !2693
  %tobool = icmp ne ptr %call1, null, !dbg !2693
  %lnot = xor i1 %tobool, true, !dbg !2693
  %lnot2 = xor i1 %lnot, true, !dbg !2693
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2693
  %conv = sext i32 %lnot.ext to i64, !dbg !2693
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2693
  %tobool3 = icmp ne i64 %expval, 0, !dbg !2693
  br i1 %tobool3, label %if.then, label %if.end, !dbg !2695

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_f, align 16, !dbg !2696, !tbaa !1461
  store ptr %4, ptr %__pyx_filename, align 8, !dbg !2696, !tbaa !1461
  %5 = load ptr, ptr %__pyx_filename, align 8, !dbg !2696, !tbaa !1461
  store i32 142, ptr %__pyx_lineno, align 4, !dbg !2696, !tbaa !1557
  %6 = load i32, ptr %__pyx_lineno, align 4, !dbg !2696, !tbaa !1557
  store i32 5329, ptr %__pyx_clineno, align 4, !dbg !2696, !tbaa !1557
  %7 = load i32, ptr %__pyx_clineno, align 4, !dbg !2696, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2699

if.end:                                           ; preds = %entry
  br label %__pyx_L0, !dbg !2700

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !2676), !dbg !2701
  %8 = load i32, ptr %__pyx_clineno, align 4, !dbg !2702, !tbaa !1557
  %9 = load i32, ptr %__pyx_lineno, align 4, !dbg !2703, !tbaa !1557
  %10 = load ptr, ptr %__pyx_filename, align 8, !dbg !2704, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.71, i32 noundef %8, i32 noundef %9, ptr noundef %10), !dbg !2705
  br label %__pyx_L0, !dbg !2705

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  tail call void @llvm.dbg.label(metadata !2677), !dbg !2706
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2707
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2707
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2707
  ret void, !dbg !2707
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_f_6Cython_7Runtime_8refnanny_DECREF(ptr noundef %__pyx_v_ctx, ptr noundef %__pyx_v_obj, i64 noundef %__pyx_v_lineno) #0 !dbg !2708 {
entry:
  %__pyx_v_ctx.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_ctx, ptr %__pyx_v_ctx.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ctx.addr, metadata !2710, metadata !DIExpression()), !dbg !2719
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_obj.addr, metadata !2711, metadata !DIExpression()), !dbg !2720
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !2712, metadata !DIExpression()), !dbg !2721
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !2722
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !2713, metadata !DIExpression()), !dbg !2723
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2724
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !2714, metadata !DIExpression()), !dbg !2725
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2725, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2726
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !2715, metadata !DIExpression()), !dbg !2727
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2727, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2728
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !2716, metadata !DIExpression()), !dbg !2729
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2729, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !2730, !tbaa !1461
  %1 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !2731, !tbaa !1461
  %2 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !2732, !tbaa !1836
  %call = call i32 @__pyx_f_6Cython_7Runtime_8refnanny_GIVEREF_and_report(ptr noundef %0, ptr noundef %1, i64 noundef %2), !dbg !2733
  store i32 %call, ptr %__pyx_t_1, align 4, !dbg !2734, !tbaa !1557
  %3 = load i32, ptr %__pyx_t_1, align 4, !dbg !2735, !tbaa !1557
  %cmp = icmp eq i32 %3, -1, !dbg !2735
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2735

land.rhs:                                         ; preds = %entry
  %call1 = call ptr @PyErr_Occurred(), !dbg !2735
  %tobool = icmp ne ptr %call1, null, !dbg !2735
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !2737
  %lnot = xor i1 %4, true, !dbg !2735
  %lnot2 = xor i1 %lnot, true, !dbg !2735
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2735
  %conv = sext i32 %lnot.ext to i64, !dbg !2735
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2735
  %tobool3 = icmp ne i64 %expval, 0, !dbg !2735
  br i1 %tobool3, label %if.then, label %if.end, !dbg !2738

if.then:                                          ; preds = %land.end
  %5 = load ptr, ptr @__pyx_f, align 16, !dbg !2739, !tbaa !1461
  store ptr %5, ptr %__pyx_filename, align 8, !dbg !2739, !tbaa !1461
  %6 = load ptr, ptr %__pyx_filename, align 8, !dbg !2739, !tbaa !1461
  store i32 145, ptr %__pyx_lineno, align 4, !dbg !2739, !tbaa !1557
  %7 = load i32, ptr %__pyx_lineno, align 4, !dbg !2739, !tbaa !1557
  store i32 5367, ptr %__pyx_clineno, align 4, !dbg !2739, !tbaa !1557
  %8 = load i32, ptr %__pyx_clineno, align 4, !dbg !2739, !tbaa !1557
  br label %__pyx_L1_error, !dbg !2742

if.end:                                           ; preds = %land.end
  %9 = load i32, ptr %__pyx_t_1, align 4, !dbg !2743, !tbaa !1557
  %tobool4 = icmp ne i32 %9, 0, !dbg !2743
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !2745

if.then5:                                         ; preds = %if.end
  %10 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !2746, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %10), !dbg !2746
  br label %if.end6, !dbg !2748

if.end6:                                          ; preds = %if.then5, %if.end
  %call7 = call ptr @PyThreadState_Get(), !dbg !2749
  br label %__pyx_L0, !dbg !2750

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !2717), !dbg !2751
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !2752, !tbaa !1557
  %12 = load i32, ptr %__pyx_lineno, align 4, !dbg !2753, !tbaa !1557
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !2754, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.72, i32 noundef %11, i32 noundef %12, ptr noundef %13), !dbg !2755
  br label %__pyx_L0, !dbg !2755

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end6
  tail call void @llvm.dbg.label(metadata !2718), !dbg !2756
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2757
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2757
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2757
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !2757
  ret void, !dbg !2757
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_f_6Cython_7Runtime_8refnanny_GOTREF(ptr noundef %__pyx_v_ctx, ptr noundef %__pyx_v_p_obj, i64 noundef %__pyx_v_lineno) #0 !dbg !2758 {
entry:
  %__pyx_v_ctx.addr = alloca ptr, align 8
  %__pyx_v_p_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_v_type = alloca ptr, align 8
  %__pyx_v_value = alloca ptr, align 8
  %__pyx_v_tb = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_tstate = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %__pyx_tstate32 = alloca ptr, align 8
  store ptr %__pyx_v_ctx, ptr %__pyx_v_ctx.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ctx.addr, metadata !2760, metadata !DIExpression()), !dbg !2793
  store ptr %__pyx_v_p_obj, ptr %__pyx_v_p_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_p_obj.addr, metadata !2761, metadata !DIExpression()), !dbg !2794
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !2762, metadata !DIExpression()), !dbg !2795
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !2796
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_type, metadata !2763, metadata !DIExpression()), !dbg !2797
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !2798
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value, metadata !2764, metadata !DIExpression()), !dbg !2799
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !2800
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_tb, metadata !2765, metadata !DIExpression()), !dbg !2801
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !2802
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !2766, metadata !DIExpression()), !dbg !2803
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !2804
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !2767, metadata !DIExpression()), !dbg !2805
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2805, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !2806
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !2768, metadata !DIExpression()), !dbg !2807
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2807, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !2808
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !2769, metadata !DIExpression()), !dbg !2809
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !2809, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !2810
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !2770, metadata !DIExpression()), !dbg !2811
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !2811, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !2812
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !2771, metadata !DIExpression()), !dbg !2813
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !2813, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !2814
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !2772, metadata !DIExpression()), !dbg !2815
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !2815, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !2816
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !2773, metadata !DIExpression()), !dbg !2817
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !2817, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !2818
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !2774, metadata !DIExpression()), !dbg !2819
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !2819, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !2820
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !2775, metadata !DIExpression()), !dbg !2821
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !2821, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !2822
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !2776, metadata !DIExpression()), !dbg !2823
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !2823, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2824
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !2777, metadata !DIExpression()), !dbg !2825
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2825, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2826
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !2778, metadata !DIExpression()), !dbg !2827
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2827, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2828
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !2779, metadata !DIExpression()), !dbg !2829
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2829, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !2830, !tbaa !1461
  %cmp = icmp eq ptr %0, null, !dbg !2831
  %conv = zext i1 %cmp to i32, !dbg !2831
  store i32 %conv, ptr %__pyx_t_1, align 4, !dbg !2832, !tbaa !1557
  %1 = load i32, ptr %__pyx_t_1, align 4, !dbg !2833, !tbaa !1557
  %tobool = icmp ne i32 %1, 0, !dbg !2833
  br i1 %tobool, label %if.then, label %if.end, !dbg !2835

if.then:                                          ; preds = %entry
  br label %__pyx_L0, !dbg !2836

if.end:                                           ; preds = %entry
  store ptr null, ptr %__pyx_v_type, align 8, !dbg !2838, !tbaa !1461
  store ptr null, ptr %__pyx_v_value, align 8, !dbg !2839, !tbaa !1461
  store ptr null, ptr %__pyx_v_tb, align 8, !dbg !2840, !tbaa !1461
  call void @PyErr_Fetch(ptr noundef %__pyx_v_type, ptr noundef %__pyx_v_value, ptr noundef %__pyx_v_tb), !dbg !2841
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !2842
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !2780, metadata !DIExpression()), !dbg !2842
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !2843
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !2843, !tbaa !1461
  %2 = load ptr, ptr %__pyx_tstate, align 8, !dbg !2844, !tbaa !1461
  call void @__Pyx__ExceptionSave(ptr noundef %2, ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4), !dbg !2844
  %3 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !2845, !tbaa !1461
  %cmp1 = icmp ne ptr %3, null, !dbg !2847
  %conv2 = zext i1 %cmp1 to i32, !dbg !2847
  store i32 %conv2, ptr %__pyx_t_1, align 4, !dbg !2848, !tbaa !1557
  %4 = load i32, ptr %__pyx_t_1, align 4, !dbg !2849, !tbaa !1557
  %tobool3 = icmp ne i32 %4, 0, !dbg !2849
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !2851

if.then4:                                         ; preds = %if.end
  %5 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !2852, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !2852
  %6 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !2854, !tbaa !1461
  store ptr %6, ptr %__pyx_t_5, align 8, !dbg !2855, !tbaa !1461
  br label %if.end5, !dbg !2856

if.else:                                          ; preds = %if.end
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !2857
  store ptr @_Py_NoneStruct, ptr %__pyx_t_5, align 8, !dbg !2859, !tbaa !1461
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %7 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !2860, !tbaa !1461
  %8 = load ptr, ptr %__pyx_t_5, align 8, !dbg !2861, !tbaa !1461
  %9 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !2862, !tbaa !1836
  %10 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !2863, !tbaa !1461
  %cmp6 = icmp eq ptr %10, null, !dbg !2864
  %conv7 = zext i1 %cmp6 to i32, !dbg !2864
  %call8 = call ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref(ptr noundef %7, ptr noundef %8, i64 noundef %9, i32 noundef %conv7), !dbg !2865
  store ptr %call8, ptr %__pyx_t_6, align 8, !dbg !2866, !tbaa !1461
  %11 = load ptr, ptr %__pyx_t_6, align 8, !dbg !2867, !tbaa !1461
  %tobool9 = icmp ne ptr %11, null, !dbg !2867
  %lnot = xor i1 %tobool9, true, !dbg !2867
  %lnot10 = xor i1 %lnot, true, !dbg !2867
  %lnot11 = xor i1 %lnot10, true, !dbg !2867
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !2867
  %conv12 = sext i32 %lnot.ext to i64, !dbg !2867
  %expval = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !2867
  %tobool13 = icmp ne i64 %expval, 0, !dbg !2867
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !2869

if.then14:                                        ; preds = %if.end5
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !2870, !tbaa !1461
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !2870, !tbaa !1461
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !2870, !tbaa !1461
  store i32 108, ptr %__pyx_lineno, align 4, !dbg !2870, !tbaa !1557
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !2870, !tbaa !1557
  store i32 4821, ptr %__pyx_clineno, align 4, !dbg !2870, !tbaa !1557
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !2870, !tbaa !1557
  br label %__pyx_L7_error, !dbg !2873

if.end15:                                         ; preds = %if.end5
  %16 = load ptr, ptr %__pyx_t_5, align 8, !dbg !2874, !tbaa !1461
  call void @Py_DECREF(ptr noundef %16), !dbg !2874
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !2875, !tbaa !1461
  %17 = load ptr, ptr %__pyx_t_6, align 8, !dbg !2876, !tbaa !1461
  call void @Py_DECREF(ptr noundef %17), !dbg !2876
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !2877, !tbaa !1461
  %18 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2878, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %18), !dbg !2878
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2879, !tbaa !1461
  %19 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2880, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %19), !dbg !2880
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2881, !tbaa !1461
  %20 = load ptr, ptr %__pyx_t_4, align 8, !dbg !2882, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %20), !dbg !2882
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !2883, !tbaa !1461
  br label %__pyx_L12_try_end, !dbg !2884

__pyx_L7_error:                                   ; preds = %if.then14
  tail call void @llvm.dbg.label(metadata !2783), !dbg !2885
  %21 = load ptr, ptr %__pyx_t_5, align 8, !dbg !2886, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %21), !dbg !2886
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !2887, !tbaa !1461
  %22 = load ptr, ptr %__pyx_t_6, align 8, !dbg !2888, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %22), !dbg !2888
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !2889, !tbaa !1461
  %23 = load i32, ptr %__pyx_clineno, align 4, !dbg !2890, !tbaa !1557
  %24 = load i32, ptr %__pyx_lineno, align 4, !dbg !2892, !tbaa !1557
  %25 = load ptr, ptr %__pyx_filename, align 8, !dbg !2893, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.76, i32 noundef %23, i32 noundef %24, ptr noundef %25), !dbg !2894
  %26 = load ptr, ptr %__pyx_tstate, align 8, !dbg !2895, !tbaa !1461
  %call16 = call i32 @__Pyx__GetException(ptr noundef %26, ptr noundef %__pyx_t_6, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_7), !dbg !2895
  %cmp17 = icmp slt i32 %call16, 0, !dbg !2897
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !2898

if.then19:                                        ; preds = %__pyx_L7_error
  %27 = load ptr, ptr @__pyx_f, align 16, !dbg !2899, !tbaa !1461
  store ptr %27, ptr %__pyx_filename, align 8, !dbg !2899, !tbaa !1461
  %28 = load ptr, ptr %__pyx_filename, align 8, !dbg !2899, !tbaa !1461
  store i32 113, ptr %__pyx_lineno, align 4, !dbg !2899, !tbaa !1557
  %29 = load i32, ptr %__pyx_lineno, align 4, !dbg !2899, !tbaa !1557
  store i32 4851, ptr %__pyx_clineno, align 4, !dbg !2899, !tbaa !1557
  %30 = load i32, ptr %__pyx_clineno, align 4, !dbg !2899, !tbaa !1557
  br label %__pyx_L9_except_error, !dbg !2902

if.end20:                                         ; preds = %__pyx_L7_error
  %31 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !2903, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %31, i32 0, i32 3, !dbg !2904
  %32 = load ptr, ptr %filename, align 8, !dbg !2904, !tbaa !2905
  store ptr %32, ptr %__pyx_t_8, align 8, !dbg !2907, !tbaa !1461
  %33 = load ptr, ptr %__pyx_t_8, align 8, !dbg !2908, !tbaa !1461
  call void @Py_INCREF(ptr noundef %33), !dbg !2908
  %34 = load ptr, ptr %__pyx_t_8, align 8, !dbg !2909, !tbaa !1461
  %35 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !2910, !tbaa !1461
  %start = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %35, i32 0, i32 6, !dbg !2911
  %36 = load i64, ptr %start, align 8, !dbg !2911, !tbaa !2912
  call void @__pyx_f_6Cython_7Runtime_8refnanny_report_unraisable(ptr noundef %34, i64 noundef %36, ptr noundef null), !dbg !2913
  %call21 = call ptr @PyErr_Occurred(), !dbg !2914
  %tobool22 = icmp ne ptr %call21, null, !dbg !2914
  %lnot23 = xor i1 %tobool22, true, !dbg !2914
  %lnot25 = xor i1 %lnot23, true, !dbg !2914
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !2914
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !2914
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0), !dbg !2914
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !2914
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !2916

if.then30:                                        ; preds = %if.end20
  %37 = load ptr, ptr @__pyx_f, align 16, !dbg !2917, !tbaa !1461
  store ptr %37, ptr %__pyx_filename, align 8, !dbg !2917, !tbaa !1461
  %38 = load ptr, ptr %__pyx_filename, align 8, !dbg !2917, !tbaa !1461
  store i32 114, ptr %__pyx_lineno, align 4, !dbg !2917, !tbaa !1557
  %39 = load i32, ptr %__pyx_lineno, align 4, !dbg !2917, !tbaa !1557
  store i32 4865, ptr %__pyx_clineno, align 4, !dbg !2917, !tbaa !1557
  %40 = load i32, ptr %__pyx_clineno, align 4, !dbg !2917, !tbaa !1557
  br label %__pyx_L9_except_error, !dbg !2920

if.end31:                                         ; preds = %if.end20
  %41 = load ptr, ptr %__pyx_t_8, align 8, !dbg !2921, !tbaa !1461
  call void @Py_DECREF(ptr noundef %41), !dbg !2921
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !2922, !tbaa !1461
  %42 = load ptr, ptr %__pyx_t_6, align 8, !dbg !2923, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %42), !dbg !2923
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !2924, !tbaa !1461
  %43 = load ptr, ptr %__pyx_t_5, align 8, !dbg !2925, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %43), !dbg !2925
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !2926, !tbaa !1461
  %44 = load ptr, ptr %__pyx_t_7, align 8, !dbg !2927, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %44), !dbg !2927
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !2928, !tbaa !1461
  br label %__pyx_L8_exception_handled, !dbg !2929

__pyx_L9_except_error:                            ; preds = %if.then30, %if.then19
  tail call void @llvm.dbg.label(metadata !2784), !dbg !2930
  %45 = load ptr, ptr %__pyx_tstate, align 8, !dbg !2931, !tbaa !1461
  %46 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2931, !tbaa !1461
  %47 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2931, !tbaa !1461
  %48 = load ptr, ptr %__pyx_t_4, align 8, !dbg !2931, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %45, ptr noundef %46, ptr noundef %47, ptr noundef %48), !dbg !2931
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2932

__pyx_L8_exception_handled:                       ; preds = %if.end31
  tail call void @llvm.dbg.label(metadata !2785), !dbg !2933
  %49 = load ptr, ptr %__pyx_tstate, align 8, !dbg !2934, !tbaa !1461
  %50 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2934, !tbaa !1461
  %51 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2934, !tbaa !1461
  %52 = load ptr, ptr %__pyx_t_4, align 8, !dbg !2934, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %49, ptr noundef %50, ptr noundef %51, ptr noundef %52), !dbg !2934
  br label %__pyx_L12_try_end, !dbg !2934

__pyx_L12_try_end:                                ; preds = %__pyx_L8_exception_handled, %if.end15
  tail call void @llvm.dbg.label(metadata !2786), !dbg !2935
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2936
  br label %cleanup, !dbg !2936

cleanup:                                          ; preds = %__pyx_L9_except_error, %__pyx_L12_try_end
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !2936
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 7, label %__pyx_L5_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %53 = load ptr, ptr %__pyx_v_type, align 8, !dbg !2937, !tbaa !1461
  %54 = load ptr, ptr %__pyx_v_value, align 8, !dbg !2939, !tbaa !1461
  %55 = load ptr, ptr %__pyx_v_tb, align 8, !dbg !2940, !tbaa !1461
  call void @PyErr_Restore(ptr noundef %53, ptr noundef %54, ptr noundef %55), !dbg !2941
  br label %__pyx_L0, !dbg !2942

__pyx_L5_error:                                   ; preds = %cleanup
  tail call void @llvm.dbg.label(metadata !2787), !dbg !2943
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate32) #10, !dbg !2944
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate32, metadata !2789, metadata !DIExpression()), !dbg !2944
  %call33 = call ptr @_PyThreadState_UncheckedGet(), !dbg !2945
  store ptr %call33, ptr %__pyx_tstate32, align 8, !dbg !2945, !tbaa !1461
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !2946, !tbaa !1461
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2947, !tbaa !1461
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2948, !tbaa !1461
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !2949, !tbaa !1461
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !2950, !tbaa !1461
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !2951, !tbaa !1461
  %56 = load ptr, ptr %__pyx_t_5, align 8, !dbg !2952, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %56), !dbg !2952
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !2953, !tbaa !1461
  %57 = load ptr, ptr %__pyx_t_6, align 8, !dbg !2954, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %57), !dbg !2954
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !2955, !tbaa !1461
  %58 = load ptr, ptr %__pyx_t_7, align 8, !dbg !2956, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %58), !dbg !2956
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !2957, !tbaa !1461
  %59 = load ptr, ptr %__pyx_t_8, align 8, !dbg !2958, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %59), !dbg !2958
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !2959, !tbaa !1461
  %60 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !2960, !tbaa !1461
  call void @__Pyx__ExceptionSwap(ptr noundef %60, ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_10, ptr noundef %__pyx_t_11), !dbg !2960
  %61 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !2962, !tbaa !1461
  %call34 = call i32 @__Pyx__GetException(ptr noundef %61, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_2), !dbg !2962
  %cmp35 = icmp slt i32 %call34, 0, !dbg !2962
  %lnot37 = xor i1 %cmp35, true, !dbg !2962
  %lnot39 = xor i1 %lnot37, true, !dbg !2962
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !2962
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !2962
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 0), !dbg !2962
  %tobool43 = icmp ne i64 %expval42, 0, !dbg !2962
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !2964

if.then44:                                        ; preds = %__pyx_L5_error
  %62 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !2965, !tbaa !1461
  call void @__Pyx_ErrFetchInState(ptr noundef %62, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_2), !dbg !2965
  br label %if.end45, !dbg !2965

if.end45:                                         ; preds = %if.then44, %__pyx_L5_error
  %63 = load ptr, ptr %__pyx_v_type, align 8, !dbg !2966, !tbaa !1461
  %64 = load ptr, ptr %__pyx_v_value, align 8, !dbg !2968, !tbaa !1461
  %65 = load ptr, ptr %__pyx_v_tb, align 8, !dbg !2969, !tbaa !1461
  call void @PyErr_Restore(ptr noundef %63, ptr noundef %64, ptr noundef %65), !dbg !2970
  br label %__pyx_L15_return, !dbg !2971

__pyx_L15_return:                                 ; preds = %if.end45
  tail call void @llvm.dbg.label(metadata !2791), !dbg !2972
  %66 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !2973, !tbaa !1461
  %67 = load ptr, ptr %__pyx_t_9, align 8, !dbg !2973, !tbaa !1461
  %68 = load ptr, ptr %__pyx_t_10, align 8, !dbg !2973, !tbaa !1461
  %69 = load ptr, ptr %__pyx_t_11, align 8, !dbg !2973, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %66, ptr noundef %67, ptr noundef %68, ptr noundef %69), !dbg !2973
  %70 = load ptr, ptr %__pyx_t_4, align 8, !dbg !2976, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %70), !dbg !2976
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !2977, !tbaa !1461
  %71 = load ptr, ptr %__pyx_t_3, align 8, !dbg !2978, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %71), !dbg !2978
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !2979, !tbaa !1461
  %72 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2980, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %72), !dbg !2980
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2981, !tbaa !1461
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !2982, !tbaa !1461
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !2983, !tbaa !1461
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !2984, !tbaa !1461
  store i32 2, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate32) #10, !dbg !2985
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L15_return, %cleanup.cont, %if.then
  tail call void @llvm.dbg.label(metadata !2792), !dbg !2986
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !2987
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !2987
  ret void, !dbg !2987

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_f_6Cython_7Runtime_8refnanny_GIVEREF(ptr noundef %__pyx_v_ctx, ptr noundef %__pyx_v_p_obj, i64 noundef %__pyx_v_lineno) #0 !dbg !2988 {
entry:
  %__pyx_v_ctx.addr = alloca ptr, align 8
  %__pyx_v_p_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_ctx, ptr %__pyx_v_ctx.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ctx.addr, metadata !2990, metadata !DIExpression()), !dbg !2999
  store ptr %__pyx_v_p_obj, ptr %__pyx_v_p_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_p_obj.addr, metadata !2991, metadata !DIExpression()), !dbg !3000
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !2992, metadata !DIExpression()), !dbg !3001
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !3002
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !2993, metadata !DIExpression()), !dbg !3003
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !3004
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !2994, metadata !DIExpression()), !dbg !3005
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3005, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !3006
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !2995, metadata !DIExpression()), !dbg !3007
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3007, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !3008
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !2996, metadata !DIExpression()), !dbg !3009
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3009, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3010, !tbaa !1461
  %1 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !3011, !tbaa !1461
  %2 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !3012, !tbaa !1836
  %call = call i32 @__pyx_f_6Cython_7Runtime_8refnanny_GIVEREF_and_report(ptr noundef %0, ptr noundef %1, i64 noundef %2), !dbg !3013
  store i32 %call, ptr %__pyx_t_1, align 4, !dbg !3014, !tbaa !1557
  %3 = load i32, ptr %__pyx_t_1, align 4, !dbg !3015, !tbaa !1557
  %cmp = icmp eq i32 %3, -1, !dbg !3015
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3015

land.rhs:                                         ; preds = %entry
  %call1 = call ptr @PyErr_Occurred(), !dbg !3015
  %tobool = icmp ne ptr %call1, null, !dbg !3015
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !3017
  %lnot = xor i1 %4, true, !dbg !3015
  %lnot2 = xor i1 %lnot, true, !dbg !3015
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3015
  %conv = sext i32 %lnot.ext to i64, !dbg !3015
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3015
  %tobool3 = icmp ne i64 %expval, 0, !dbg !3015
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3018

if.then:                                          ; preds = %land.end
  %5 = load ptr, ptr @__pyx_f, align 16, !dbg !3019, !tbaa !1461
  store ptr %5, ptr %__pyx_filename, align 8, !dbg !3019, !tbaa !1461
  %6 = load ptr, ptr %__pyx_filename, align 8, !dbg !3019, !tbaa !1461
  store i32 137, ptr %__pyx_lineno, align 4, !dbg !3019, !tbaa !1557
  %7 = load i32, ptr %__pyx_lineno, align 4, !dbg !3019, !tbaa !1557
  store i32 5274, ptr %__pyx_clineno, align 4, !dbg !3019, !tbaa !1557
  %8 = load i32, ptr %__pyx_clineno, align 4, !dbg !3019, !tbaa !1557
  br label %__pyx_L1_error, !dbg !3022

if.end:                                           ; preds = %land.end
  br label %__pyx_L0, !dbg !3023

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !2997), !dbg !3024
  %9 = load i32, ptr %__pyx_clineno, align 4, !dbg !3025, !tbaa !1557
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !3026, !tbaa !1557
  %11 = load ptr, ptr %__pyx_filename, align 8, !dbg !3027, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.77, i32 noundef %9, i32 noundef %10, ptr noundef %11), !dbg !3028
  br label %__pyx_L0, !dbg !3028

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  tail call void @llvm.dbg.label(metadata !2998), !dbg !3029
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !3030
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !3030
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !3030
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !3030
  ret void, !dbg !3030
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_7Runtime_8refnanny_SetupContext(ptr noundef %__pyx_v_funcname, i64 noundef %__pyx_v_lineno, ptr noundef %__pyx_v_filename) #0 !dbg !3031 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_funcname.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_v_filename.addr = alloca ptr, align 8
  %__pyx_v_type = alloca ptr, align 8
  %__pyx_v_value = alloca ptr, align 8
  %__pyx_v_tb = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_v_ctx = alloca ptr, align 8
  %__pyx_v_e = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca i32, align 4
  %__pyx_t_10 = alloca %struct.__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_tstate = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_funcname, ptr %__pyx_v_funcname.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_funcname.addr, metadata !3033, metadata !DIExpression()), !dbg !3068
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !3034, metadata !DIExpression()), !dbg !3069
  store ptr %__pyx_v_filename, ptr %__pyx_v_filename.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_filename.addr, metadata !3035, metadata !DIExpression()), !dbg !3070
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !3071
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_type, metadata !3036, metadata !DIExpression()), !dbg !3072
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !3073
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value, metadata !3037, metadata !DIExpression()), !dbg !3074
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !3075
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_tb, metadata !3038, metadata !DIExpression()), !dbg !3076
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #10, !dbg !3077
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_result, metadata !3039, metadata !DIExpression()), !dbg !3078
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_ctx) #10, !dbg !3079
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ctx, metadata !3040, metadata !DIExpression()), !dbg !3080
  store ptr null, ptr %__pyx_v_ctx, align 8, !dbg !3080, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_e) #10, !dbg !3081
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_e, metadata !3041, metadata !DIExpression()), !dbg !3082
  store ptr null, ptr %__pyx_v_e, align 8, !dbg !3082, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !3083
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !3042, metadata !DIExpression()), !dbg !3084
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !3085
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !3043, metadata !DIExpression()), !dbg !3086
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !3087
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !3044, metadata !DIExpression()), !dbg !3088
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !3088, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !3089
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !3045, metadata !DIExpression()), !dbg !3090
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !3090, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !3091
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !3046, metadata !DIExpression()), !dbg !3092
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !3092, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !3093
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !3047, metadata !DIExpression()), !dbg !3094
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3094, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !3095
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !3048, metadata !DIExpression()), !dbg !3096
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3096, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !3097
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !3049, metadata !DIExpression()), !dbg !3098
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !3098, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !3099
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !3050, metadata !DIExpression()), !dbg !3100
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !3100, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_9) #10, !dbg !3101
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !3051, metadata !DIExpression()), !dbg !3102
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_t_10) #10, !dbg !3103
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !3052, metadata !DIExpression()), !dbg !3104
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !3105
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3057, metadata !DIExpression()), !dbg !3106
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3106, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !3107
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3058, metadata !DIExpression()), !dbg !3108
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3108, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !3109
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3059, metadata !DIExpression()), !dbg !3110
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3110, !tbaa !1557
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3111, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 7, !dbg !3111
  %1 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context, align 8, !dbg !3111, !tbaa !2415
  %cmp = icmp eq ptr %1, @_Py_NoneStruct, !dbg !3112
  %conv = zext i1 %cmp to i32, !dbg !3112
  store i32 %conv, ptr %__pyx_t_1, align 4, !dbg !3113, !tbaa !1557
  %2 = load i32, ptr %__pyx_t_1, align 4, !dbg !3114, !tbaa !1557
  %tobool = icmp ne i32 %2, 0, !dbg !3114
  br i1 %tobool, label %if.then, label %if.end, !dbg !3116

if.then:                                          ; preds = %entry
  store ptr null, ptr %__pyx_r, align 8, !dbg !3117, !tbaa !1461
  br label %__pyx_L0, !dbg !3119

if.end:                                           ; preds = %entry
  store ptr null, ptr %__pyx_v_type, align 8, !dbg !3120, !tbaa !1461
  store ptr null, ptr %__pyx_v_value, align 8, !dbg !3121, !tbaa !1461
  store ptr null, ptr %__pyx_v_tb, align 8, !dbg !3122, !tbaa !1461
  store ptr null, ptr %__pyx_v_result, align 8, !dbg !3123, !tbaa !1461
  %call = call ptr @PyThreadState_Get(), !dbg !3124
  call void @PyErr_Fetch(ptr noundef %__pyx_v_type, ptr noundef %__pyx_v_value, ptr noundef %__pyx_v_tb), !dbg !3125
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !3126
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !3060, metadata !DIExpression()), !dbg !3126
  %call1 = call ptr @_PyThreadState_UncheckedGet(), !dbg !3127
  store ptr %call1, ptr %__pyx_tstate, align 8, !dbg !3127, !tbaa !1461
  %3 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3128, !tbaa !1461
  call void @__Pyx__ExceptionSave(ptr noundef %3, ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4), !dbg !3128
  %4 = load ptr, ptr %__pyx_v_funcname.addr, align 8, !dbg !3129, !tbaa !1461
  %call2 = call ptr @PyBytes_FromString(ptr noundef %4), !dbg !3131
  store ptr %call2, ptr %__pyx_t_5, align 8, !dbg !3132, !tbaa !1461
  %5 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3133, !tbaa !1461
  %tobool3 = icmp ne ptr %5, null, !dbg !3133
  %lnot = xor i1 %tobool3, true, !dbg !3133
  %lnot4 = xor i1 %lnot, true, !dbg !3133
  %lnot5 = xor i1 %lnot4, true, !dbg !3133
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !3133
  %conv6 = sext i32 %lnot.ext to i64, !dbg !3133
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 0), !dbg !3133
  %tobool7 = icmp ne i64 %expval, 0, !dbg !3133
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !3135

if.then8:                                         ; preds = %if.end
  %6 = load ptr, ptr @__pyx_f, align 16, !dbg !3136, !tbaa !1461
  store ptr %6, ptr %__pyx_filename, align 8, !dbg !3136, !tbaa !1461
  %7 = load ptr, ptr %__pyx_filename, align 8, !dbg !3136, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3136, !tbaa !1557
  %8 = load i32, ptr %__pyx_lineno, align 4, !dbg !3136, !tbaa !1557
  store i32 4561, ptr %__pyx_clineno, align 4, !dbg !3136, !tbaa !1557
  %9 = load i32, ptr %__pyx_clineno, align 4, !dbg !3136, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3139

if.end9:                                          ; preds = %if.end
  %10 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !3140, !tbaa !1836
  %call10 = call ptr @PyLong_FromSsize_t(i64 noundef %10), !dbg !3141
  store ptr %call10, ptr %__pyx_t_6, align 8, !dbg !3142, !tbaa !1461
  %11 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3143, !tbaa !1461
  %tobool11 = icmp ne ptr %11, null, !dbg !3143
  %lnot12 = xor i1 %tobool11, true, !dbg !3143
  %lnot14 = xor i1 %lnot12, true, !dbg !3143
  %lnot16 = xor i1 %lnot14, true, !dbg !3143
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !3143
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !3143
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0), !dbg !3143
  %tobool20 = icmp ne i64 %expval19, 0, !dbg !3143
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3145

if.then21:                                        ; preds = %if.end9
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !3146, !tbaa !1461
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !3146, !tbaa !1461
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !3146, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3146, !tbaa !1557
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !3146, !tbaa !1557
  store i32 4563, ptr %__pyx_clineno, align 4, !dbg !3146, !tbaa !1557
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !3146, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3149

if.end22:                                         ; preds = %if.end9
  %16 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !3150, !tbaa !1461
  %call23 = call ptr @PyBytes_FromString(ptr noundef %16), !dbg !3151
  store ptr %call23, ptr %__pyx_t_7, align 8, !dbg !3152, !tbaa !1461
  %17 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3153, !tbaa !1461
  %tobool24 = icmp ne ptr %17, null, !dbg !3153
  %lnot25 = xor i1 %tobool24, true, !dbg !3153
  %lnot27 = xor i1 %lnot25, true, !dbg !3153
  %lnot29 = xor i1 %lnot27, true, !dbg !3153
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !3153
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !3153
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0), !dbg !3153
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !3153
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !3155

if.then34:                                        ; preds = %if.end22
  %18 = load ptr, ptr @__pyx_f, align 16, !dbg !3156, !tbaa !1461
  store ptr %18, ptr %__pyx_filename, align 8, !dbg !3156, !tbaa !1461
  %19 = load ptr, ptr %__pyx_filename, align 8, !dbg !3156, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3156, !tbaa !1557
  %20 = load i32, ptr %__pyx_lineno, align 4, !dbg !3156, !tbaa !1557
  store i32 4565, ptr %__pyx_clineno, align 4, !dbg !3156, !tbaa !1557
  %21 = load i32, ptr %__pyx_clineno, align 4, !dbg !3156, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3159

if.end35:                                         ; preds = %if.end22
  %call36 = call ptr @PyTuple_New(i64 noundef 3), !dbg !3160
  store ptr %call36, ptr %__pyx_t_8, align 8, !dbg !3161, !tbaa !1461
  %22 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3162, !tbaa !1461
  %tobool37 = icmp ne ptr %22, null, !dbg !3162
  %lnot38 = xor i1 %tobool37, true, !dbg !3162
  %lnot40 = xor i1 %lnot38, true, !dbg !3162
  %lnot42 = xor i1 %lnot40, true, !dbg !3162
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !3162
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !3162
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 0), !dbg !3162
  %tobool46 = icmp ne i64 %expval45, 0, !dbg !3162
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !3164

if.then47:                                        ; preds = %if.end35
  %23 = load ptr, ptr @__pyx_f, align 16, !dbg !3165, !tbaa !1461
  store ptr %23, ptr %__pyx_filename, align 8, !dbg !3165, !tbaa !1461
  %24 = load ptr, ptr %__pyx_filename, align 8, !dbg !3165, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3165, !tbaa !1557
  %25 = load i32, ptr %__pyx_lineno, align 4, !dbg !3165, !tbaa !1557
  store i32 4567, ptr %__pyx_clineno, align 4, !dbg !3165, !tbaa !1557
  %26 = load i32, ptr %__pyx_clineno, align 4, !dbg !3165, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3168

if.end48:                                         ; preds = %if.end35
  %27 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3169, !tbaa !1461
  %28 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3169, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %27, i64 noundef 0, ptr noundef %28), !dbg !3169
  br i1 false, label %if.then49, label %if.end50, !dbg !3171

if.then49:                                        ; preds = %if.end48
  %29 = load ptr, ptr @__pyx_f, align 16, !dbg !3172, !tbaa !1461
  store ptr %29, ptr %__pyx_filename, align 8, !dbg !3172, !tbaa !1461
  %30 = load ptr, ptr %__pyx_filename, align 8, !dbg !3172, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3172, !tbaa !1557
  %31 = load i32, ptr %__pyx_lineno, align 4, !dbg !3172, !tbaa !1557
  store i32 4570, ptr %__pyx_clineno, align 4, !dbg !3172, !tbaa !1557
  %32 = load i32, ptr %__pyx_clineno, align 4, !dbg !3172, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3175

if.end50:                                         ; preds = %if.end48
  %33 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3176, !tbaa !1461
  %34 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3176, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %33, i64 noundef 1, ptr noundef %34), !dbg !3176
  br i1 false, label %if.then51, label %if.end52, !dbg !3178

if.then51:                                        ; preds = %if.end50
  %35 = load ptr, ptr @__pyx_f, align 16, !dbg !3179, !tbaa !1461
  store ptr %35, ptr %__pyx_filename, align 8, !dbg !3179, !tbaa !1461
  %36 = load ptr, ptr %__pyx_filename, align 8, !dbg !3179, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3179, !tbaa !1557
  %37 = load i32, ptr %__pyx_lineno, align 4, !dbg !3179, !tbaa !1557
  store i32 4572, ptr %__pyx_clineno, align 4, !dbg !3179, !tbaa !1557
  %38 = load i32, ptr %__pyx_clineno, align 4, !dbg !3179, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3182

if.end52:                                         ; preds = %if.end50
  %39 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3183, !tbaa !1461
  %40 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3183, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %39, i64 noundef 2, ptr noundef %40), !dbg !3183
  br i1 false, label %if.then53, label %if.end54, !dbg !3185

if.then53:                                        ; preds = %if.end52
  %41 = load ptr, ptr @__pyx_f, align 16, !dbg !3186, !tbaa !1461
  store ptr %41, ptr %__pyx_filename, align 8, !dbg !3186, !tbaa !1461
  %42 = load ptr, ptr %__pyx_filename, align 8, !dbg !3186, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3186, !tbaa !1557
  %43 = load i32, ptr %__pyx_lineno, align 4, !dbg !3186, !tbaa !1557
  store i32 4574, ptr %__pyx_clineno, align 4, !dbg !3186, !tbaa !1557
  %44 = load i32, ptr %__pyx_clineno, align 4, !dbg !3186, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3189

if.end54:                                         ; preds = %if.end52
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3190, !tbaa !1461
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3191, !tbaa !1461
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !3192, !tbaa !1461
  %45 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3193, !tbaa !1461
  %__pyx_ptype_6Cython_7Runtime_8refnanny_Context55 = getelementptr inbounds %struct.__pyx_mstate, ptr %45, i32 0, i32 7, !dbg !3193
  %46 = load ptr, ptr %__pyx_ptype_6Cython_7Runtime_8refnanny_Context55, align 8, !dbg !3193, !tbaa !2415
  %47 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3194, !tbaa !1461
  %call56 = call ptr @__Pyx_PyObject_Call(ptr noundef %46, ptr noundef %47, ptr noundef null), !dbg !3195
  store ptr %call56, ptr %__pyx_t_7, align 8, !dbg !3196, !tbaa !1461
  %48 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3197, !tbaa !1461
  %tobool57 = icmp ne ptr %48, null, !dbg !3197
  %lnot58 = xor i1 %tobool57, true, !dbg !3197
  %lnot60 = xor i1 %lnot58, true, !dbg !3197
  %lnot62 = xor i1 %lnot60, true, !dbg !3197
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !3197
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !3197
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0), !dbg !3197
  %tobool66 = icmp ne i64 %expval65, 0, !dbg !3197
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !3199

if.then67:                                        ; preds = %if.end54
  %49 = load ptr, ptr @__pyx_f, align 16, !dbg !3200, !tbaa !1461
  store ptr %49, ptr %__pyx_filename, align 8, !dbg !3200, !tbaa !1461
  %50 = load ptr, ptr %__pyx_filename, align 8, !dbg !3200, !tbaa !1461
  store i32 95, ptr %__pyx_lineno, align 4, !dbg !3200, !tbaa !1557
  %51 = load i32, ptr %__pyx_lineno, align 4, !dbg !3200, !tbaa !1557
  store i32 4578, ptr %__pyx_clineno, align 4, !dbg !3200, !tbaa !1557
  %52 = load i32, ptr %__pyx_clineno, align 4, !dbg !3200, !tbaa !1557
  br label %__pyx_L4_error, !dbg !3203

if.end68:                                         ; preds = %if.end54
  %53 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3204, !tbaa !1461
  call void @Py_DECREF(ptr noundef %53), !dbg !3204
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !3205, !tbaa !1461
  %54 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3206, !tbaa !1461
  store ptr %54, ptr %__pyx_v_ctx, align 8, !dbg !3207, !tbaa !1461
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !3208, !tbaa !1461
  %55 = load ptr, ptr %__pyx_v_ctx, align 8, !dbg !3209, !tbaa !1461
  call void @Py_INCREF(ptr noundef %55), !dbg !3209
  %56 = load ptr, ptr %__pyx_v_ctx, align 8, !dbg !3210, !tbaa !1461
  store ptr %56, ptr %__pyx_v_result, align 8, !dbg !3211, !tbaa !1461
  %57 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3212, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %57), !dbg !3212
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !3213, !tbaa !1461
  %58 = load ptr, ptr %__pyx_t_3, align 8, !dbg !3214, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %58), !dbg !3214
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !3215, !tbaa !1461
  %59 = load ptr, ptr %__pyx_t_4, align 8, !dbg !3216, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %59), !dbg !3216
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !3217, !tbaa !1461
  br label %__pyx_L9_try_end, !dbg !3218

__pyx_L4_error:                                   ; preds = %if.then67, %if.then53, %if.then51, %if.then49, %if.then47, %if.then34, %if.then21, %if.then8
  tail call void @llvm.dbg.label(metadata !3062), !dbg !3219
  %60 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3220, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %60), !dbg !3220
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3221, !tbaa !1461
  %61 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3222, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %61), !dbg !3222
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3223, !tbaa !1461
  %62 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3224, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %62), !dbg !3224
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !3225, !tbaa !1461
  %63 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3226, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %63), !dbg !3226
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !3227, !tbaa !1461
  %64 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3228, !tbaa !1461
  %65 = load ptr, ptr @PyExc_Exception, align 8, !dbg !3228, !tbaa !1461
  %arrayidx = getelementptr %struct._typeobject, ptr %65, i64 0, !dbg !3228
  %call69 = call i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %64, ptr noundef %arrayidx), !dbg !3228
  store i32 %call69, ptr %__pyx_t_9, align 4, !dbg !3229, !tbaa !1557
  %66 = load i32, ptr %__pyx_t_9, align 4, !dbg !3230, !tbaa !1557
  %tobool70 = icmp ne i32 %66, 0, !dbg !3230
  br i1 %tobool70, label %if.then71, label %if.end101, !dbg !3232

if.then71:                                        ; preds = %__pyx_L4_error
  %67 = load i32, ptr %__pyx_clineno, align 4, !dbg !3233, !tbaa !1557
  %68 = load i32, ptr %__pyx_lineno, align 4, !dbg !3235, !tbaa !1557
  %69 = load ptr, ptr %__pyx_filename, align 8, !dbg !3236, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.78, i32 noundef %67, i32 noundef %68, ptr noundef %69), !dbg !3237
  %70 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3238, !tbaa !1461
  %call72 = call i32 @__Pyx__GetException(ptr noundef %70, ptr noundef %__pyx_t_7, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_6), !dbg !3238
  %cmp73 = icmp slt i32 %call72, 0, !dbg !3240
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !3241

if.then75:                                        ; preds = %if.then71
  %71 = load ptr, ptr @__pyx_f, align 16, !dbg !3242, !tbaa !1461
  store ptr %71, ptr %__pyx_filename, align 8, !dbg !3242, !tbaa !1461
  %72 = load ptr, ptr %__pyx_filename, align 8, !dbg !3242, !tbaa !1461
  store i32 98, ptr %__pyx_lineno, align 4, !dbg !3242, !tbaa !1557
  %73 = load i32, ptr %__pyx_lineno, align 4, !dbg !3242, !tbaa !1557
  store i32 4630, ptr %__pyx_clineno, align 4, !dbg !3242, !tbaa !1557
  %74 = load i32, ptr %__pyx_clineno, align 4, !dbg !3242, !tbaa !1557
  br label %__pyx_L6_except_error, !dbg !3245

if.end76:                                         ; preds = %if.then71
  %75 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3246, !tbaa !1461
  call void @Py_INCREF(ptr noundef %75), !dbg !3246
  %76 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3247, !tbaa !1461
  store ptr %76, ptr %__pyx_v_e, align 8, !dbg !3248, !tbaa !1461
  %77 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !3249, !tbaa !1461
  %call77 = call ptr @PyBytes_FromString(ptr noundef %77), !dbg !3250
  store ptr %call77, ptr %__pyx_t_5, align 8, !dbg !3251, !tbaa !1461
  %78 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3252, !tbaa !1461
  %tobool78 = icmp ne ptr %78, null, !dbg !3252
  %lnot79 = xor i1 %tobool78, true, !dbg !3252
  %lnot81 = xor i1 %lnot79, true, !dbg !3252
  %lnot83 = xor i1 %lnot81, true, !dbg !3252
  %lnot.ext84 = zext i1 %lnot83 to i32, !dbg !3252
  %conv85 = sext i32 %lnot.ext84 to i64, !dbg !3252
  %expval86 = call i64 @llvm.expect.i64(i64 %conv85, i64 0), !dbg !3252
  %tobool87 = icmp ne i64 %expval86, 0, !dbg !3252
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !3254

if.then88:                                        ; preds = %if.end76
  %79 = load ptr, ptr @__pyx_f, align 16, !dbg !3255, !tbaa !1461
  store ptr %79, ptr %__pyx_filename, align 8, !dbg !3255, !tbaa !1461
  %80 = load ptr, ptr %__pyx_filename, align 8, !dbg !3255, !tbaa !1461
  store i32 99, ptr %__pyx_lineno, align 4, !dbg !3255, !tbaa !1557
  %81 = load i32, ptr %__pyx_lineno, align 4, !dbg !3255, !tbaa !1557
  store i32 4644, ptr %__pyx_clineno, align 4, !dbg !3255, !tbaa !1557
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !3255, !tbaa !1557
  br label %__pyx_L6_except_error, !dbg !3258

if.end89:                                         ; preds = %if.end76
  %__pyx_n = getelementptr inbounds %struct.__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable, ptr %__pyx_t_10, i32 0, i32 0, !dbg !3259
  store i32 1, ptr %__pyx_n, align 8, !dbg !3260, !tbaa !3261
  %83 = load ptr, ptr %__pyx_v_e, align 8, !dbg !3263, !tbaa !1461
  %e = getelementptr inbounds %struct.__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable, ptr %__pyx_t_10, i32 0, i32 1, !dbg !3264
  store ptr %83, ptr %e, align 8, !dbg !3265, !tbaa !3266
  %84 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3267, !tbaa !1461
  %85 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !3268, !tbaa !1836
  call void @__pyx_f_6Cython_7Runtime_8refnanny_report_unraisable(ptr noundef %84, i64 noundef %85, ptr noundef %__pyx_t_10), !dbg !3269
  %call90 = call ptr @PyErr_Occurred(), !dbg !3270
  %tobool91 = icmp ne ptr %call90, null, !dbg !3270
  %lnot92 = xor i1 %tobool91, true, !dbg !3270
  %lnot94 = xor i1 %lnot92, true, !dbg !3270
  %lnot.ext95 = zext i1 %lnot94 to i32, !dbg !3270
  %conv96 = sext i32 %lnot.ext95 to i64, !dbg !3270
  %expval97 = call i64 @llvm.expect.i64(i64 %conv96, i64 0), !dbg !3270
  %tobool98 = icmp ne i64 %expval97, 0, !dbg !3270
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !3272

if.then99:                                        ; preds = %if.end89
  %86 = load ptr, ptr @__pyx_f, align 16, !dbg !3273, !tbaa !1461
  store ptr %86, ptr %__pyx_filename, align 8, !dbg !3273, !tbaa !1461
  %87 = load ptr, ptr %__pyx_filename, align 8, !dbg !3273, !tbaa !1461
  store i32 99, ptr %__pyx_lineno, align 4, !dbg !3273, !tbaa !1557
  %88 = load i32, ptr %__pyx_lineno, align 4, !dbg !3273, !tbaa !1557
  store i32 4648, ptr %__pyx_clineno, align 4, !dbg !3273, !tbaa !1557
  %89 = load i32, ptr %__pyx_clineno, align 4, !dbg !3273, !tbaa !1557
  br label %__pyx_L6_except_error, !dbg !3276

if.end100:                                        ; preds = %if.end89
  %90 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3277, !tbaa !1461
  call void @Py_DECREF(ptr noundef %90), !dbg !3277
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3278, !tbaa !1461
  %91 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3279, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %91), !dbg !3279
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !3280, !tbaa !1461
  %92 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3281, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %92), !dbg !3281
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !3282, !tbaa !1461
  %93 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3283, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %93), !dbg !3283
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3284, !tbaa !1461
  br label %__pyx_L5_exception_handled, !dbg !3285

if.end101:                                        ; preds = %__pyx_L4_error
  br label %__pyx_L6_except_error, !dbg !3286

__pyx_L6_except_error:                            ; preds = %if.end101, %if.then99, %if.then88, %if.then75
  tail call void @llvm.dbg.label(metadata !3063), !dbg !3287
  %94 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3288, !tbaa !1461
  %95 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3288, !tbaa !1461
  %96 = load ptr, ptr %__pyx_t_3, align 8, !dbg !3288, !tbaa !1461
  %97 = load ptr, ptr %__pyx_t_4, align 8, !dbg !3288, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %94, ptr noundef %95, ptr noundef %96, ptr noundef %97), !dbg !3288
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3289

__pyx_L5_exception_handled:                       ; preds = %if.end100
  tail call void @llvm.dbg.label(metadata !3064), !dbg !3290
  %98 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3291, !tbaa !1461
  %99 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3291, !tbaa !1461
  %100 = load ptr, ptr %__pyx_t_3, align 8, !dbg !3291, !tbaa !1461
  %101 = load ptr, ptr %__pyx_t_4, align 8, !dbg !3291, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %98, ptr noundef %99, ptr noundef %100, ptr noundef %101), !dbg !3291
  br label %__pyx_L9_try_end, !dbg !3291

__pyx_L9_try_end:                                 ; preds = %__pyx_L5_exception_handled, %if.end68
  tail call void @llvm.dbg.label(metadata !3065), !dbg !3292
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3293
  br label %cleanup, !dbg !3293

cleanup:                                          ; preds = %__pyx_L6_except_error, %__pyx_L9_try_end
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !3293
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup102 [
    i32 0, label %cleanup.cont
    i32 7, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %102 = load ptr, ptr %__pyx_v_type, align 8, !dbg !3294, !tbaa !1461
  %103 = load ptr, ptr %__pyx_v_value, align 8, !dbg !3295, !tbaa !1461
  %104 = load ptr, ptr %__pyx_v_tb, align 8, !dbg !3296, !tbaa !1461
  call void @PyErr_Restore(ptr noundef %102, ptr noundef %103, ptr noundef %104), !dbg !3297
  %105 = load ptr, ptr %__pyx_v_result, align 8, !dbg !3298, !tbaa !1461
  store ptr %105, ptr %__pyx_r, align 8, !dbg !3299, !tbaa !1461
  br label %__pyx_L0, !dbg !3300

__pyx_L1_error:                                   ; preds = %cleanup
  tail call void @llvm.dbg.label(metadata !3066), !dbg !3301
  %106 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3302, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %106), !dbg !3302
  %107 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3303, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %107), !dbg !3303
  %108 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3304, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %108), !dbg !3304
  %109 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3305, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %109), !dbg !3305
  %110 = load i32, ptr %__pyx_clineno, align 4, !dbg !3306, !tbaa !1557
  %111 = load i32, ptr %__pyx_lineno, align 4, !dbg !3307, !tbaa !1557
  %112 = load ptr, ptr %__pyx_filename, align 8, !dbg !3308, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.78, i32 noundef %110, i32 noundef %111, ptr noundef %112), !dbg !3309
  store ptr null, ptr %__pyx_r, align 8, !dbg !3310, !tbaa !1461
  br label %__pyx_L0, !dbg !3311

__pyx_L0:                                         ; preds = %__pyx_L1_error, %cleanup.cont, %if.then
  tail call void @llvm.dbg.label(metadata !3067), !dbg !3312
  %113 = load ptr, ptr %__pyx_v_ctx, align 8, !dbg !3313, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %113), !dbg !3313
  %114 = load ptr, ptr %__pyx_v_e, align 8, !dbg !3314, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %114), !dbg !3314
  %115 = load ptr, ptr %__pyx_r, align 8, !dbg !3315, !tbaa !1461
  store ptr %115, ptr %retval, align 8, !dbg !3316
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup102, !dbg !3316

cleanup102:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_t_10) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_9) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_e) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_ctx) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !3317
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !3317
  %116 = load ptr, ptr %retval, align 8, !dbg !3317
  ret ptr %116, !dbg !3317
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_f_6Cython_7Runtime_8refnanny_FinishContext(ptr noundef %__pyx_v_ctx) #0 !dbg !3318 {
entry:
  %__pyx_v_ctx.addr = alloca ptr, align 8
  %__pyx_v_type = alloca ptr, align 8
  %__pyx_v_value = alloca ptr, align 8
  %__pyx_v_tb = alloca ptr, align 8
  %__pyx_v_errors = alloca ptr, align 8
  %__pyx_v_context = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca i32, align 4
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_t_12 = alloca i32, align 4
  %__pyx_t_13 = alloca ptr, align 8
  %__pyx_t_14 = alloca ptr, align 8
  %__pyx_t_15 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_tstate = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %function = alloca ptr, align 8
  %tmp76 = alloca ptr, align 8
  %__pyx_callargs = alloca [2 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %function192 = alloca ptr, align 8
  %tmp195 = alloca ptr, align 8
  %__pyx_callargs200 = alloca [2 x ptr], align 16
  %tmp335 = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %__pyx_tstate428 = alloca ptr, align 8
  %_py_tmp443 = alloca ptr, align 8
  store ptr %__pyx_v_ctx, ptr %__pyx_v_ctx.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ctx.addr, metadata !3320, metadata !DIExpression()), !dbg !3390
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !3391
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_type, metadata !3321, metadata !DIExpression()), !dbg !3392
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !3393
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value, metadata !3322, metadata !DIExpression()), !dbg !3394
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !3395
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_tb, metadata !3323, metadata !DIExpression()), !dbg !3396
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_errors) #10, !dbg !3397
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_errors, metadata !3324, metadata !DIExpression()), !dbg !3398
  store ptr null, ptr %__pyx_v_errors, align 8, !dbg !3398, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_context) #10, !dbg !3399
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_context, metadata !3325, metadata !DIExpression()), !dbg !3400
  store ptr null, ptr %__pyx_v_context, align 8, !dbg !3400, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !3401
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !3326, metadata !DIExpression()), !dbg !3402
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #10, !dbg !3403
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !3327, metadata !DIExpression()), !dbg !3404
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !3405
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !3328, metadata !DIExpression()), !dbg !3406
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !3406, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !3407
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !3329, metadata !DIExpression()), !dbg !3408
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !3408, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !3409
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !3330, metadata !DIExpression()), !dbg !3410
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3410, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !3411
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !3331, metadata !DIExpression()), !dbg !3412
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3412, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !3413
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !3332, metadata !DIExpression()), !dbg !3414
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_8) #10, !dbg !3415
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !3333, metadata !DIExpression()), !dbg !3416
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !3417
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !3334, metadata !DIExpression()), !dbg !3418
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3418, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !3419
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !3335, metadata !DIExpression()), !dbg !3420
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !3420, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !3421
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !3336, metadata !DIExpression()), !dbg !3422
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3422, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_12) #10, !dbg !3423
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_12, metadata !3337, metadata !DIExpression()), !dbg !3424
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_13) #10, !dbg !3425
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_13, metadata !3338, metadata !DIExpression()), !dbg !3426
  store ptr null, ptr %__pyx_t_13, align 8, !dbg !3426, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_14) #10, !dbg !3427
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_14, metadata !3339, metadata !DIExpression()), !dbg !3428
  store ptr null, ptr %__pyx_t_14, align 8, !dbg !3428, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_15) #10, !dbg !3429
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_15, metadata !3340, metadata !DIExpression()), !dbg !3430
  store ptr null, ptr %__pyx_t_15, align 8, !dbg !3430, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !3431
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3341, metadata !DIExpression()), !dbg !3432
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3432, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !3433
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3342, metadata !DIExpression()), !dbg !3434
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3434, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !3435
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3343, metadata !DIExpression()), !dbg !3436
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3436, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3437, !tbaa !1461
  %cmp = icmp eq ptr %0, null, !dbg !3438
  %conv = zext i1 %cmp to i32, !dbg !3438
  store i32 %conv, ptr %__pyx_t_2, align 4, !dbg !3439, !tbaa !1557
  %1 = load i32, ptr %__pyx_t_2, align 4, !dbg !3440, !tbaa !1557
  %tobool = icmp ne i32 %1, 0, !dbg !3440
  br i1 %tobool, label %if.else, label %if.then, !dbg !3442

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3443

if.else:                                          ; preds = %entry
  %2 = load i32, ptr %__pyx_t_2, align 4, !dbg !3445, !tbaa !1557
  store i32 %2, ptr %__pyx_t_1, align 4, !dbg !3447, !tbaa !1557
  br label %__pyx_L4_bool_binop_done, !dbg !3448

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3449, !tbaa !1461
  %arrayidx = getelementptr ptr, ptr %3, i64 0, !dbg !3449
  %4 = load ptr, ptr %arrayidx, align 8, !dbg !3449, !tbaa !1461
  %cmp1 = icmp eq ptr %4, null, !dbg !3450
  %conv2 = zext i1 %cmp1 to i32, !dbg !3450
  store i32 %conv2, ptr %__pyx_t_2, align 4, !dbg !3451, !tbaa !1557
  %5 = load i32, ptr %__pyx_t_2, align 4, !dbg !3452, !tbaa !1557
  store i32 %5, ptr %__pyx_t_1, align 4, !dbg !3453, !tbaa !1557
  br label %__pyx_L4_bool_binop_done, !dbg !3454

__pyx_L4_bool_binop_done:                         ; preds = %if.end, %if.else
  tail call void @llvm.dbg.label(metadata !3344), !dbg !3455
  %6 = load i32, ptr %__pyx_t_1, align 4, !dbg !3456, !tbaa !1557
  %tobool3 = icmp ne i32 %6, 0, !dbg !3456
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3458

if.then4:                                         ; preds = %__pyx_L4_bool_binop_done
  br label %__pyx_L0, !dbg !3459

if.end5:                                          ; preds = %__pyx_L4_bool_binop_done
  store ptr null, ptr %__pyx_v_type, align 8, !dbg !3461, !tbaa !1461
  store ptr null, ptr %__pyx_v_value, align 8, !dbg !3462, !tbaa !1461
  store ptr null, ptr %__pyx_v_tb, align 8, !dbg !3463, !tbaa !1461
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !3464
  store ptr @_Py_NoneStruct, ptr %__pyx_v_errors, align 8, !dbg !3465, !tbaa !1461
  %call = call ptr @PyThreadState_Get(), !dbg !3466
  call void @PyErr_Fetch(ptr noundef %__pyx_v_type, ptr noundef %__pyx_v_value, ptr noundef %__pyx_v_tb), !dbg !3467
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !3468
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !3345, metadata !DIExpression()), !dbg !3468
  %call6 = call ptr @_PyThreadState_UncheckedGet(), !dbg !3469
  store ptr %call6, ptr %__pyx_tstate, align 8, !dbg !3469, !tbaa !1461
  %7 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3470, !tbaa !1461
  call void @__Pyx__ExceptionSave(ptr noundef %7, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_5), !dbg !3470
  %8 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3471, !tbaa !1461
  %arrayidx7 = getelementptr ptr, ptr %8, i64 0, !dbg !3471
  %9 = load ptr, ptr %arrayidx7, align 8, !dbg !3471, !tbaa !1461
  store ptr %9, ptr %__pyx_t_6, align 8, !dbg !3472, !tbaa !1461
  %10 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3473, !tbaa !1461
  call void @Py_INCREF(ptr noundef %10), !dbg !3473
  %11 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3474, !tbaa !1461
  store ptr %11, ptr %__pyx_v_context, align 8, !dbg !3475, !tbaa !1461
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3476, !tbaa !1461
  %12 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3477, !tbaa !1461
  %call8 = call ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_end(ptr noundef %12), !dbg !3478
  store ptr %call8, ptr %__pyx_t_6, align 8, !dbg !3479, !tbaa !1461
  %13 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3480, !tbaa !1461
  %tobool9 = icmp ne ptr %13, null, !dbg !3480
  %lnot = xor i1 %tobool9, true, !dbg !3480
  %lnot10 = xor i1 %lnot, true, !dbg !3480
  %lnot11 = xor i1 %lnot10, true, !dbg !3480
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !3480
  %conv12 = sext i32 %lnot.ext to i64, !dbg !3480
  %expval = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !3480
  %tobool13 = icmp ne i64 %expval, 0, !dbg !3480
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !3482

if.then14:                                        ; preds = %if.end5
  %14 = load ptr, ptr @__pyx_f, align 16, !dbg !3483, !tbaa !1461
  store ptr %14, ptr %__pyx_filename, align 8, !dbg !3483, !tbaa !1461
  %15 = load ptr, ptr %__pyx_filename, align 8, !dbg !3483, !tbaa !1461
  store i32 158, ptr %__pyx_lineno, align 4, !dbg !3483, !tbaa !1557
  %16 = load i32, ptr %__pyx_lineno, align 4, !dbg !3483, !tbaa !1557
  store i32 5542, ptr %__pyx_clineno, align 4, !dbg !3483, !tbaa !1557
  %17 = load i32, ptr %__pyx_clineno, align 4, !dbg !3483, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3486

if.end15:                                         ; preds = %if.end5
  br label %do.body, !dbg !3487

do.body:                                          ; preds = %if.end15
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #10, !dbg !3488
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3348, metadata !DIExpression()), !dbg !3488
  %18 = load ptr, ptr %__pyx_v_errors, align 8, !dbg !3488, !tbaa !1461
  store ptr %18, ptr %tmp, align 8, !dbg !3488, !tbaa !1461
  %19 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3488, !tbaa !1461
  store ptr %19, ptr %__pyx_v_errors, align 8, !dbg !3488, !tbaa !1461
  %20 = load ptr, ptr %tmp, align 8, !dbg !3488, !tbaa !1461
  call void @Py_DECREF(ptr noundef %20), !dbg !3488
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #10, !dbg !3487
  br label %do.cond, !dbg !3488

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3488

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3489, !tbaa !1461
  %21 = load ptr, ptr %__pyx_v_errors, align 8, !dbg !3490, !tbaa !1461
  %call16 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %21), !dbg !3491
  store i32 %call16, ptr %__pyx_t_1, align 4, !dbg !3492, !tbaa !1557
  %22 = load i32, ptr %__pyx_t_1, align 4, !dbg !3493, !tbaa !1557
  %cmp17 = icmp slt i32 %22, 0, !dbg !3493
  %lnot19 = xor i1 %cmp17, true, !dbg !3493
  %lnot21 = xor i1 %lnot19, true, !dbg !3493
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !3493
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !3493
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !3493
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !3493
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !3495

if.then26:                                        ; preds = %do.end
  %23 = load ptr, ptr @__pyx_f, align 16, !dbg !3496, !tbaa !1461
  store ptr %23, ptr %__pyx_filename, align 8, !dbg !3496, !tbaa !1461
  %24 = load ptr, ptr %__pyx_filename, align 8, !dbg !3496, !tbaa !1461
  store i32 159, ptr %__pyx_lineno, align 4, !dbg !3496, !tbaa !1557
  %25 = load i32, ptr %__pyx_lineno, align 4, !dbg !3496, !tbaa !1557
  store i32 5554, ptr %__pyx_clineno, align 4, !dbg !3496, !tbaa !1557
  %26 = load i32, ptr %__pyx_clineno, align 4, !dbg !3496, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3499

if.end27:                                         ; preds = %do.end
  %27 = load i32, ptr %__pyx_t_1, align 4, !dbg !3500, !tbaa !1557
  %tobool28 = icmp ne i32 %27, 0, !dbg !3500
  br i1 %tobool28, label %if.then29, label %if.end333, !dbg !3501

if.then29:                                        ; preds = %if.end27
  %call30 = call ptr @PyTuple_New(i64 noundef 4), !dbg !3502
  store ptr %call30, ptr %__pyx_t_6, align 8, !dbg !3503, !tbaa !1461
  %28 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3504, !tbaa !1461
  %tobool31 = icmp ne ptr %28, null, !dbg !3504
  %lnot32 = xor i1 %tobool31, true, !dbg !3504
  %lnot34 = xor i1 %lnot32, true, !dbg !3504
  %lnot36 = xor i1 %lnot34, true, !dbg !3504
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !3504
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !3504
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0), !dbg !3504
  %tobool40 = icmp ne i64 %expval39, 0, !dbg !3504
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !3506

if.then41:                                        ; preds = %if.then29
  %29 = load ptr, ptr @__pyx_f, align 16, !dbg !3507, !tbaa !1461
  store ptr %29, ptr %__pyx_filename, align 8, !dbg !3507, !tbaa !1461
  %30 = load ptr, ptr %__pyx_filename, align 8, !dbg !3507, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3507, !tbaa !1557
  %31 = load i32, ptr %__pyx_lineno, align 4, !dbg !3507, !tbaa !1557
  store i32 5564, ptr %__pyx_clineno, align 4, !dbg !3507, !tbaa !1557
  %32 = load i32, ptr %__pyx_clineno, align 4, !dbg !3507, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3510

if.end42:                                         ; preds = %if.then29
  store i64 0, ptr %__pyx_t_7, align 8, !dbg !3511, !tbaa !1836
  store i32 127, ptr %__pyx_t_8, align 4, !dbg !3512, !tbaa !1557
  %33 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3513, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %33, i32 0, i32 3, !dbg !3514
  %34 = load ptr, ptr %filename, align 8, !dbg !3514, !tbaa !2905
  %35 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3515, !tbaa !1461
  %__pyx_n_s_decode = getelementptr inbounds %struct.__pyx_mstate, ptr %35, i32 0, i32 28, !dbg !3515
  %36 = load ptr, ptr %__pyx_n_s_decode, align 8, !dbg !3515, !tbaa !3516
  %call43 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %34, ptr noundef %36), !dbg !3517
  store ptr %call43, ptr %__pyx_t_10, align 8, !dbg !3518, !tbaa !1461
  %37 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3519, !tbaa !1461
  %tobool44 = icmp ne ptr %37, null, !dbg !3519
  %lnot45 = xor i1 %tobool44, true, !dbg !3519
  %lnot47 = xor i1 %lnot45, true, !dbg !3519
  %lnot49 = xor i1 %lnot47, true, !dbg !3519
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !3519
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !3519
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0), !dbg !3519
  %tobool53 = icmp ne i64 %expval52, 0, !dbg !3519
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !3521

if.then54:                                        ; preds = %if.end42
  %38 = load ptr, ptr @__pyx_f, align 16, !dbg !3522, !tbaa !1461
  store ptr %38, ptr %__pyx_filename, align 8, !dbg !3522, !tbaa !1461
  %39 = load ptr, ptr %__pyx_filename, align 8, !dbg !3522, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3522, !tbaa !1557
  %40 = load i32, ptr %__pyx_lineno, align 4, !dbg !3522, !tbaa !1557
  store i32 5568, ptr %__pyx_clineno, align 4, !dbg !3522, !tbaa !1557
  %41 = load i32, ptr %__pyx_clineno, align 4, !dbg !3522, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3525

if.end55:                                         ; preds = %if.end42
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3526, !tbaa !1461
  store i32 0, ptr %__pyx_t_12, align 4, !dbg !3527, !tbaa !1557
  %42 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3528, !tbaa !1461
  %call56 = call i32 @Py_IS_TYPE(ptr noundef %42, ptr noundef @PyMethod_Type), !dbg !3528
  %tobool57 = icmp ne i32 %call56, 0, !dbg !3528
  %lnot58 = xor i1 %tobool57, true, !dbg !3528
  %lnot60 = xor i1 %lnot58, true, !dbg !3528
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !3528
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !3528
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 1), !dbg !3528
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !3528
  br i1 %tobool64, label %if.then65, label %if.end80, !dbg !3529

if.then65:                                        ; preds = %if.end55
  %43 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3530, !tbaa !1461
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %43, i32 0, i32 2, !dbg !3530
  %44 = load ptr, ptr %im_self, align 8, !dbg !3530, !tbaa !3531
  store ptr %44, ptr %__pyx_t_11, align 8, !dbg !3533, !tbaa !1461
  %45 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3534, !tbaa !1461
  %tobool66 = icmp ne ptr %45, null, !dbg !3534
  %lnot67 = xor i1 %tobool66, true, !dbg !3534
  %lnot69 = xor i1 %lnot67, true, !dbg !3534
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !3534
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !3534
  %expval72 = call i64 @llvm.expect.i64(i64 %conv71, i64 1), !dbg !3534
  %tobool73 = icmp ne i64 %expval72, 0, !dbg !3534
  br i1 %tobool73, label %if.then74, label %if.end79, !dbg !3535

if.then74:                                        ; preds = %if.then65
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #10, !dbg !3536
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !3351, metadata !DIExpression()), !dbg !3537
  %46 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3538, !tbaa !1461
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %46, i32 0, i32 1, !dbg !3538
  %47 = load ptr, ptr %im_func, align 8, !dbg !3538, !tbaa !3539
  store ptr %47, ptr %function, align 8, !dbg !3537, !tbaa !1461
  %48 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3540, !tbaa !1461
  call void @Py_INCREF(ptr noundef %48), !dbg !3540
  %49 = load ptr, ptr %function, align 8, !dbg !3541, !tbaa !1461
  call void @Py_INCREF(ptr noundef %49), !dbg !3541
  br label %do.body75, !dbg !3542

do.body75:                                        ; preds = %if.then74
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp76) #10, !dbg !3543
  tail call void @llvm.dbg.declare(metadata ptr %tmp76, metadata !3358, metadata !DIExpression()), !dbg !3543
  %50 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3543, !tbaa !1461
  store ptr %50, ptr %tmp76, align 8, !dbg !3543, !tbaa !1461
  %51 = load ptr, ptr %function, align 8, !dbg !3543, !tbaa !1461
  store ptr %51, ptr %__pyx_t_10, align 8, !dbg !3543, !tbaa !1461
  %52 = load ptr, ptr %tmp76, align 8, !dbg !3543, !tbaa !1461
  call void @Py_DECREF(ptr noundef %52), !dbg !3543
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp76) #10, !dbg !3542
  br label %do.cond77, !dbg !3543

do.cond77:                                        ; preds = %do.body75
  br label %do.end78, !dbg !3543

do.end78:                                         ; preds = %do.cond77
  store i32 1, ptr %__pyx_t_12, align 4, !dbg !3544, !tbaa !1557
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #10, !dbg !3545
  br label %if.end79, !dbg !3546

if.end79:                                         ; preds = %do.end78, %if.then65
  br label %if.end80, !dbg !3547

if.end80:                                         ; preds = %if.end79, %if.end55
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs) #10, !dbg !3548
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !3360, metadata !DIExpression()), !dbg !3549
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !3550
  %53 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3551, !tbaa !1461
  store ptr %53, ptr %arrayinit.begin, align 8, !dbg !3550, !tbaa !1461
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !3550
  %54 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3552, !tbaa !1461
  %__pyx_n_u_latin1 = getelementptr inbounds %struct.__pyx_mstate, ptr %54, i32 0, i32 41, !dbg !3552
  %55 = load ptr, ptr %__pyx_n_u_latin1, align 8, !dbg !3552, !tbaa !3553
  store ptr %55, ptr %arrayinit.element, align 8, !dbg !3550, !tbaa !1461
  %56 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3554, !tbaa !1461
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !3554
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !3554
  %57 = load i32, ptr %__pyx_t_12, align 4, !dbg !3554, !tbaa !1557
  %idx.ext = sext i32 %57 to i64, !dbg !3554
  %idx.neg = sub i64 0, %idx.ext, !dbg !3554
  %add.ptr81 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !3554
  %58 = load i32, ptr %__pyx_t_12, align 4, !dbg !3554, !tbaa !1557
  %add = add i32 1, %58, !dbg !3554
  %conv82 = sext i32 %add to i64, !dbg !3554
  %call83 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %56, ptr noundef %add.ptr81, i64 noundef %conv82, ptr noundef null), !dbg !3554
  store ptr %call83, ptr %__pyx_t_9, align 8, !dbg !3555, !tbaa !1461
  %59 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3556, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %59), !dbg !3556
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3557, !tbaa !1461
  %60 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3558, !tbaa !1461
  %tobool84 = icmp ne ptr %60, null, !dbg !3558
  %lnot85 = xor i1 %tobool84, true, !dbg !3558
  %lnot87 = xor i1 %lnot85, true, !dbg !3558
  %lnot89 = xor i1 %lnot87, true, !dbg !3558
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !3558
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !3558
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 0), !dbg !3558
  %tobool93 = icmp ne i64 %expval92, 0, !dbg !3558
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !3560

if.then94:                                        ; preds = %if.end80
  %61 = load ptr, ptr @__pyx_f, align 16, !dbg !3561, !tbaa !1461
  store ptr %61, ptr %__pyx_filename, align 8, !dbg !3561, !tbaa !1461
  %62 = load ptr, ptr %__pyx_filename, align 8, !dbg !3561, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3561, !tbaa !1557
  %63 = load i32, ptr %__pyx_lineno, align 4, !dbg !3561, !tbaa !1557
  store i32 5588, ptr %__pyx_clineno, align 4, !dbg !3561, !tbaa !1557
  %64 = load i32, ptr %__pyx_clineno, align 4, !dbg !3561, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3564

if.end95:                                         ; preds = %if.end80
  %65 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3565, !tbaa !1461
  call void @Py_DECREF(ptr noundef %65), !dbg !3565
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !3566, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3567
  br label %cleanup, !dbg !3567

cleanup:                                          ; preds = %if.then94, %if.end95
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs) #10, !dbg !3567
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup416 [
    i32 0, label %cleanup.cont
    i32 4, label %__pyx_L9_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %66 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  %call96 = call i32 @Py_IS_TYPE(ptr noundef %66, ptr noundef @PyUnicode_Type), !dbg !3568
  %tobool97 = icmp ne i32 %call96, 0, !dbg !3568
  %lnot98 = xor i1 %tobool97, true, !dbg !3568
  %lnot100 = xor i1 %lnot98, true, !dbg !3568
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !3568
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !3568
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 1), !dbg !3568
  %tobool104 = icmp ne i64 %expval103, 0, !dbg !3568
  br i1 %tobool104, label %cond.true, label %cond.false, !dbg !3568

cond.true:                                        ; preds = %cleanup.cont
  %67 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  call void @Py_INCREF(ptr noundef %67), !dbg !3568
  %68 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  br label %cond.end132, !dbg !3568

cond.false:                                       ; preds = %cleanup.cont
  %69 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  %call105 = call i32 @Py_IS_TYPE(ptr noundef %69, ptr noundef @PyLong_Type), !dbg !3568
  %tobool106 = icmp ne i32 %call105, 0, !dbg !3568
  %lnot107 = xor i1 %tobool106, true, !dbg !3568
  %lnot109 = xor i1 %lnot107, true, !dbg !3568
  %lnot.ext110 = zext i1 %lnot109 to i32, !dbg !3568
  %conv111 = sext i32 %lnot.ext110 to i64, !dbg !3568
  %expval112 = call i64 @llvm.expect.i64(i64 %conv111, i64 1), !dbg !3568
  %tobool113 = icmp ne i64 %expval112, 0, !dbg !3568
  br i1 %tobool113, label %cond.true114, label %cond.false116, !dbg !3568

cond.true114:                                     ; preds = %cond.false
  %70 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 9), align 8, !dbg !3568, !tbaa !3569
  %71 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  %call115 = call ptr %70(ptr noundef %71), !dbg !3568
  br label %cond.end130, !dbg !3568

cond.false116:                                    ; preds = %cond.false
  %72 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  %call117 = call i32 @Py_IS_TYPE(ptr noundef %72, ptr noundef @PyFloat_Type), !dbg !3568
  %tobool118 = icmp ne i32 %call117, 0, !dbg !3568
  %lnot119 = xor i1 %tobool118, true, !dbg !3568
  %lnot121 = xor i1 %lnot119, true, !dbg !3568
  %lnot.ext122 = zext i1 %lnot121 to i32, !dbg !3568
  %conv123 = sext i32 %lnot.ext122 to i64, !dbg !3568
  %expval124 = call i64 @llvm.expect.i64(i64 %conv123, i64 1), !dbg !3568
  %tobool125 = icmp ne i64 %expval124, 0, !dbg !3568
  br i1 %tobool125, label %cond.true126, label %cond.false128, !dbg !3568

cond.true126:                                     ; preds = %cond.false116
  %73 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFloat_Type, i32 0, i32 9), align 8, !dbg !3568, !tbaa !3569
  %74 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  %call127 = call ptr %73(ptr noundef %74), !dbg !3568
  br label %cond.end, !dbg !3568

cond.false128:                                    ; preds = %cond.false116
  %75 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3568, !tbaa !1461
  %76 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3568, !tbaa !1461
  %__pyx_empty_unicode = getelementptr inbounds %struct.__pyx_mstate, ptr %76, i32 0, i32 5, !dbg !3568
  %77 = load ptr, ptr %__pyx_empty_unicode, align 8, !dbg !3568, !tbaa !1676
  %call129 = call ptr @PyObject_Format(ptr noundef %75, ptr noundef %77), !dbg !3568
  br label %cond.end, !dbg !3568

cond.end:                                         ; preds = %cond.false128, %cond.true126
  %cond = phi ptr [ %call127, %cond.true126 ], [ %call129, %cond.false128 ], !dbg !3568
  br label %cond.end130, !dbg !3568

cond.end130:                                      ; preds = %cond.end, %cond.true114
  %cond131 = phi ptr [ %call115, %cond.true114 ], [ %cond, %cond.end ], !dbg !3568
  br label %cond.end132, !dbg !3568

cond.end132:                                      ; preds = %cond.end130, %cond.true
  %cond133 = phi ptr [ %68, %cond.true ], [ %cond131, %cond.end130 ], !dbg !3568
  store ptr %cond133, ptr %__pyx_t_10, align 8, !dbg !3570, !tbaa !1461
  %78 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3571, !tbaa !1461
  %tobool134 = icmp ne ptr %78, null, !dbg !3571
  %lnot135 = xor i1 %tobool134, true, !dbg !3571
  %lnot137 = xor i1 %lnot135, true, !dbg !3571
  %lnot139 = xor i1 %lnot137, true, !dbg !3571
  %lnot.ext140 = zext i1 %lnot139 to i32, !dbg !3571
  %conv141 = sext i32 %lnot.ext140 to i64, !dbg !3571
  %expval142 = call i64 @llvm.expect.i64(i64 %conv141, i64 0), !dbg !3571
  %tobool143 = icmp ne i64 %expval142, 0, !dbg !3571
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !3573

if.then144:                                       ; preds = %cond.end132
  %79 = load ptr, ptr @__pyx_f, align 16, !dbg !3574, !tbaa !1461
  store ptr %79, ptr %__pyx_filename, align 8, !dbg !3574, !tbaa !1461
  %80 = load ptr, ptr %__pyx_filename, align 8, !dbg !3574, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3574, !tbaa !1557
  %81 = load i32, ptr %__pyx_lineno, align 4, !dbg !3574, !tbaa !1557
  store i32 5592, ptr %__pyx_clineno, align 4, !dbg !3574, !tbaa !1557
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !3574, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3577

if.end145:                                        ; preds = %cond.end132
  %83 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3578, !tbaa !1461
  call void @Py_DECREF(ptr noundef %83), !dbg !3578
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3579, !tbaa !1461
  %84 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3580, !tbaa !1461
  %call146 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %84), !dbg !3580
  %85 = load i32, ptr %__pyx_t_8, align 4, !dbg !3581, !tbaa !1557
  %cmp147 = icmp ugt i32 %call146, %85, !dbg !3582
  br i1 %cmp147, label %cond.true149, label %cond.false151, !dbg !3583

cond.true149:                                     ; preds = %if.end145
  %86 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3584, !tbaa !1461
  %call150 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %86), !dbg !3584
  br label %cond.end152, !dbg !3583

cond.false151:                                    ; preds = %if.end145
  %87 = load i32, ptr %__pyx_t_8, align 4, !dbg !3585, !tbaa !1557
  br label %cond.end152, !dbg !3583

cond.end152:                                      ; preds = %cond.false151, %cond.true149
  %cond153 = phi i32 [ %call150, %cond.true149 ], [ %87, %cond.false151 ], !dbg !3583
  store i32 %cond153, ptr %__pyx_t_8, align 4, !dbg !3586, !tbaa !1557
  %88 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3587, !tbaa !1461
  %call154 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %88), !dbg !3587
  %89 = load i64, ptr %__pyx_t_7, align 8, !dbg !3588, !tbaa !1836
  %add155 = add i64 %89, %call154, !dbg !3588
  store i64 %add155, ptr %__pyx_t_7, align 8, !dbg !3588, !tbaa !1836
  %90 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3589, !tbaa !1461
  %91 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3589, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %90, i64 noundef 0, ptr noundef %91), !dbg !3589
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !3590, !tbaa !1461
  %92 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3591, !tbaa !1461
  %__pyx_kp_u__6 = getelementptr inbounds %struct.__pyx_mstate, ptr %92, i32 0, i32 22, !dbg !3591
  %93 = load ptr, ptr %__pyx_kp_u__6, align 8, !dbg !3591, !tbaa !3592
  call void @Py_INCREF(ptr noundef %93), !dbg !3591
  %94 = load i64, ptr %__pyx_t_7, align 8, !dbg !3593, !tbaa !1836
  %add156 = add i64 %94, 2, !dbg !3593
  store i64 %add156, ptr %__pyx_t_7, align 8, !dbg !3593, !tbaa !1836
  %95 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3594, !tbaa !1461
  %96 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3594, !tbaa !1461
  %__pyx_kp_u__6157 = getelementptr inbounds %struct.__pyx_mstate, ptr %96, i32 0, i32 22, !dbg !3594
  %97 = load ptr, ptr %__pyx_kp_u__6157, align 8, !dbg !3594, !tbaa !3592
  call void @PyTuple_SET_ITEM(ptr noundef %95, i64 noundef 1, ptr noundef %97), !dbg !3594
  %98 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3595, !tbaa !1461
  %name = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %98, i32 0, i32 2, !dbg !3596
  %99 = load ptr, ptr %name, align 8, !dbg !3596, !tbaa !3597
  %100 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3598, !tbaa !1461
  %__pyx_n_s_decode158 = getelementptr inbounds %struct.__pyx_mstate, ptr %100, i32 0, i32 28, !dbg !3598
  %101 = load ptr, ptr %__pyx_n_s_decode158, align 8, !dbg !3598, !tbaa !3516
  %call159 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %99, ptr noundef %101), !dbg !3599
  store ptr %call159, ptr %__pyx_t_9, align 8, !dbg !3600, !tbaa !1461
  %102 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3601, !tbaa !1461
  %tobool160 = icmp ne ptr %102, null, !dbg !3601
  %lnot161 = xor i1 %tobool160, true, !dbg !3601
  %lnot163 = xor i1 %lnot161, true, !dbg !3601
  %lnot165 = xor i1 %lnot163, true, !dbg !3601
  %lnot.ext166 = zext i1 %lnot165 to i32, !dbg !3601
  %conv167 = sext i32 %lnot.ext166 to i64, !dbg !3601
  %expval168 = call i64 @llvm.expect.i64(i64 %conv167, i64 0), !dbg !3601
  %tobool169 = icmp ne i64 %expval168, 0, !dbg !3601
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !3603

if.then170:                                       ; preds = %cond.end152
  %103 = load ptr, ptr @__pyx_f, align 16, !dbg !3604, !tbaa !1461
  store ptr %103, ptr %__pyx_filename, align 8, !dbg !3604, !tbaa !1461
  %104 = load ptr, ptr %__pyx_filename, align 8, !dbg !3604, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3604, !tbaa !1557
  %105 = load i32, ptr %__pyx_lineno, align 4, !dbg !3604, !tbaa !1557
  store i32 5604, ptr %__pyx_clineno, align 4, !dbg !3604, !tbaa !1557
  %106 = load i32, ptr %__pyx_clineno, align 4, !dbg !3604, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3607

if.end171:                                        ; preds = %cond.end152
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3608, !tbaa !1461
  store i32 0, ptr %__pyx_t_12, align 4, !dbg !3609, !tbaa !1557
  %107 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3610, !tbaa !1461
  %call172 = call i32 @Py_IS_TYPE(ptr noundef %107, ptr noundef @PyMethod_Type), !dbg !3610
  %tobool173 = icmp ne i32 %call172, 0, !dbg !3610
  %lnot174 = xor i1 %tobool173, true, !dbg !3610
  %lnot176 = xor i1 %lnot174, true, !dbg !3610
  %lnot.ext177 = zext i1 %lnot176 to i32, !dbg !3610
  %conv178 = sext i32 %lnot.ext177 to i64, !dbg !3610
  %expval179 = call i64 @llvm.expect.i64(i64 %conv178, i64 1), !dbg !3610
  %tobool180 = icmp ne i64 %expval179, 0, !dbg !3610
  br i1 %tobool180, label %if.then181, label %if.end199, !dbg !3611

if.then181:                                       ; preds = %if.end171
  %108 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3612, !tbaa !1461
  %im_self182 = getelementptr inbounds %struct.PyMethodObject, ptr %108, i32 0, i32 2, !dbg !3612
  %109 = load ptr, ptr %im_self182, align 8, !dbg !3612, !tbaa !3531
  store ptr %109, ptr %__pyx_t_11, align 8, !dbg !3613, !tbaa !1461
  %110 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3614, !tbaa !1461
  %tobool183 = icmp ne ptr %110, null, !dbg !3614
  %lnot184 = xor i1 %tobool183, true, !dbg !3614
  %lnot186 = xor i1 %lnot184, true, !dbg !3614
  %lnot.ext187 = zext i1 %lnot186 to i32, !dbg !3614
  %conv188 = sext i32 %lnot.ext187 to i64, !dbg !3614
  %expval189 = call i64 @llvm.expect.i64(i64 %conv188, i64 1), !dbg !3614
  %tobool190 = icmp ne i64 %expval189, 0, !dbg !3614
  br i1 %tobool190, label %if.then191, label %if.end198, !dbg !3615

if.then191:                                       ; preds = %if.then181
  call void @llvm.lifetime.start.p0(i64 8, ptr %function192) #10, !dbg !3616
  tail call void @llvm.dbg.declare(metadata ptr %function192, metadata !3363, metadata !DIExpression()), !dbg !3617
  %111 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3618, !tbaa !1461
  %im_func193 = getelementptr inbounds %struct.PyMethodObject, ptr %111, i32 0, i32 1, !dbg !3618
  %112 = load ptr, ptr %im_func193, align 8, !dbg !3618, !tbaa !3539
  store ptr %112, ptr %function192, align 8, !dbg !3617, !tbaa !1461
  %113 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3619, !tbaa !1461
  call void @Py_INCREF(ptr noundef %113), !dbg !3619
  %114 = load ptr, ptr %function192, align 8, !dbg !3620, !tbaa !1461
  call void @Py_INCREF(ptr noundef %114), !dbg !3620
  br label %do.body194, !dbg !3621

do.body194:                                       ; preds = %if.then191
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp195) #10, !dbg !3622
  tail call void @llvm.dbg.declare(metadata ptr %tmp195, metadata !3368, metadata !DIExpression()), !dbg !3622
  %115 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3622, !tbaa !1461
  store ptr %115, ptr %tmp195, align 8, !dbg !3622, !tbaa !1461
  %116 = load ptr, ptr %function192, align 8, !dbg !3622, !tbaa !1461
  store ptr %116, ptr %__pyx_t_9, align 8, !dbg !3622, !tbaa !1461
  %117 = load ptr, ptr %tmp195, align 8, !dbg !3622, !tbaa !1461
  call void @Py_DECREF(ptr noundef %117), !dbg !3622
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp195) #10, !dbg !3621
  br label %do.cond196, !dbg !3622

do.cond196:                                       ; preds = %do.body194
  br label %do.end197, !dbg !3622

do.end197:                                        ; preds = %do.cond196
  store i32 1, ptr %__pyx_t_12, align 4, !dbg !3623, !tbaa !1557
  call void @llvm.lifetime.end.p0(i64 8, ptr %function192) #10, !dbg !3624
  br label %if.end198, !dbg !3625

if.end198:                                        ; preds = %do.end197, %if.then181
  br label %if.end199, !dbg !3626

if.end199:                                        ; preds = %if.end198, %if.end171
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs200) #10, !dbg !3627
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs200, metadata !3370, metadata !DIExpression()), !dbg !3628
  %arrayinit.begin201 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs200, i64 0, i64 0, !dbg !3629
  %118 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3630, !tbaa !1461
  store ptr %118, ptr %arrayinit.begin201, align 8, !dbg !3629, !tbaa !1461
  %arrayinit.element202 = getelementptr inbounds ptr, ptr %arrayinit.begin201, i64 1, !dbg !3629
  %119 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3631, !tbaa !1461
  %__pyx_n_u_latin1203 = getelementptr inbounds %struct.__pyx_mstate, ptr %119, i32 0, i32 41, !dbg !3631
  %120 = load ptr, ptr %__pyx_n_u_latin1203, align 8, !dbg !3631, !tbaa !3553
  store ptr %120, ptr %arrayinit.element202, align 8, !dbg !3629, !tbaa !1461
  %121 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3632, !tbaa !1461
  %arraydecay204 = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs200, i64 0, i64 0, !dbg !3632
  %add.ptr205 = getelementptr ptr, ptr %arraydecay204, i64 1, !dbg !3632
  %122 = load i32, ptr %__pyx_t_12, align 4, !dbg !3632, !tbaa !1557
  %idx.ext206 = sext i32 %122 to i64, !dbg !3632
  %idx.neg207 = sub i64 0, %idx.ext206, !dbg !3632
  %add.ptr208 = getelementptr ptr, ptr %add.ptr205, i64 %idx.neg207, !dbg !3632
  %123 = load i32, ptr %__pyx_t_12, align 4, !dbg !3632, !tbaa !1557
  %add209 = add i32 1, %123, !dbg !3632
  %conv210 = sext i32 %add209 to i64, !dbg !3632
  %call211 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %121, ptr noundef %add.ptr208, i64 noundef %conv210, ptr noundef null), !dbg !3632
  store ptr %call211, ptr %__pyx_t_10, align 8, !dbg !3633, !tbaa !1461
  %124 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3634, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %124), !dbg !3634
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3635, !tbaa !1461
  %125 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3636, !tbaa !1461
  %tobool212 = icmp ne ptr %125, null, !dbg !3636
  %lnot213 = xor i1 %tobool212, true, !dbg !3636
  %lnot215 = xor i1 %lnot213, true, !dbg !3636
  %lnot217 = xor i1 %lnot215, true, !dbg !3636
  %lnot.ext218 = zext i1 %lnot217 to i32, !dbg !3636
  %conv219 = sext i32 %lnot.ext218 to i64, !dbg !3636
  %expval220 = call i64 @llvm.expect.i64(i64 %conv219, i64 0), !dbg !3636
  %tobool221 = icmp ne i64 %expval220, 0, !dbg !3636
  br i1 %tobool221, label %if.then222, label %if.end223, !dbg !3638

if.then222:                                       ; preds = %if.end199
  %126 = load ptr, ptr @__pyx_f, align 16, !dbg !3639, !tbaa !1461
  store ptr %126, ptr %__pyx_filename, align 8, !dbg !3639, !tbaa !1461
  %127 = load ptr, ptr %__pyx_filename, align 8, !dbg !3639, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3639, !tbaa !1557
  %128 = load i32, ptr %__pyx_lineno, align 4, !dbg !3639, !tbaa !1557
  store i32 5624, ptr %__pyx_clineno, align 4, !dbg !3639, !tbaa !1557
  %129 = load i32, ptr %__pyx_clineno, align 4, !dbg !3639, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup224, !dbg !3642

if.end223:                                        ; preds = %if.end199
  %130 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3643, !tbaa !1461
  call void @Py_DECREF(ptr noundef %130), !dbg !3643
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3644, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3645
  br label %cleanup224, !dbg !3645

cleanup224:                                       ; preds = %if.then222, %if.end223
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs200) #10, !dbg !3645
  %cleanup.dest225 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest225, label %cleanup416 [
    i32 0, label %cleanup.cont226
    i32 4, label %__pyx_L9_error
  ]

cleanup.cont226:                                  ; preds = %cleanup224
  %131 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  %call227 = call i32 @Py_IS_TYPE(ptr noundef %131, ptr noundef @PyUnicode_Type), !dbg !3646
  %tobool228 = icmp ne i32 %call227, 0, !dbg !3646
  %lnot229 = xor i1 %tobool228, true, !dbg !3646
  %lnot231 = xor i1 %lnot229, true, !dbg !3646
  %lnot.ext232 = zext i1 %lnot231 to i32, !dbg !3646
  %conv233 = sext i32 %lnot.ext232 to i64, !dbg !3646
  %expval234 = call i64 @llvm.expect.i64(i64 %conv233, i64 1), !dbg !3646
  %tobool235 = icmp ne i64 %expval234, 0, !dbg !3646
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !3646

cond.true236:                                     ; preds = %cleanup.cont226
  %132 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  call void @Py_INCREF(ptr noundef %132), !dbg !3646
  %133 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  br label %cond.end268, !dbg !3646

cond.false237:                                    ; preds = %cleanup.cont226
  %134 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  %call238 = call i32 @Py_IS_TYPE(ptr noundef %134, ptr noundef @PyLong_Type), !dbg !3646
  %tobool239 = icmp ne i32 %call238, 0, !dbg !3646
  %lnot240 = xor i1 %tobool239, true, !dbg !3646
  %lnot242 = xor i1 %lnot240, true, !dbg !3646
  %lnot.ext243 = zext i1 %lnot242 to i32, !dbg !3646
  %conv244 = sext i32 %lnot.ext243 to i64, !dbg !3646
  %expval245 = call i64 @llvm.expect.i64(i64 %conv244, i64 1), !dbg !3646
  %tobool246 = icmp ne i64 %expval245, 0, !dbg !3646
  br i1 %tobool246, label %cond.true247, label %cond.false249, !dbg !3646

cond.true247:                                     ; preds = %cond.false237
  %135 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 9), align 8, !dbg !3646, !tbaa !3569
  %136 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  %call248 = call ptr %135(ptr noundef %136), !dbg !3646
  br label %cond.end266, !dbg !3646

cond.false249:                                    ; preds = %cond.false237
  %137 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  %call250 = call i32 @Py_IS_TYPE(ptr noundef %137, ptr noundef @PyFloat_Type), !dbg !3646
  %tobool251 = icmp ne i32 %call250, 0, !dbg !3646
  %lnot252 = xor i1 %tobool251, true, !dbg !3646
  %lnot254 = xor i1 %lnot252, true, !dbg !3646
  %lnot.ext255 = zext i1 %lnot254 to i32, !dbg !3646
  %conv256 = sext i32 %lnot.ext255 to i64, !dbg !3646
  %expval257 = call i64 @llvm.expect.i64(i64 %conv256, i64 1), !dbg !3646
  %tobool258 = icmp ne i64 %expval257, 0, !dbg !3646
  br i1 %tobool258, label %cond.true259, label %cond.false261, !dbg !3646

cond.true259:                                     ; preds = %cond.false249
  %138 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFloat_Type, i32 0, i32 9), align 8, !dbg !3646, !tbaa !3569
  %139 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  %call260 = call ptr %138(ptr noundef %139), !dbg !3646
  br label %cond.end264, !dbg !3646

cond.false261:                                    ; preds = %cond.false249
  %140 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3646, !tbaa !1461
  %141 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3646, !tbaa !1461
  %__pyx_empty_unicode262 = getelementptr inbounds %struct.__pyx_mstate, ptr %141, i32 0, i32 5, !dbg !3646
  %142 = load ptr, ptr %__pyx_empty_unicode262, align 8, !dbg !3646, !tbaa !1676
  %call263 = call ptr @PyObject_Format(ptr noundef %140, ptr noundef %142), !dbg !3646
  br label %cond.end264, !dbg !3646

cond.end264:                                      ; preds = %cond.false261, %cond.true259
  %cond265 = phi ptr [ %call260, %cond.true259 ], [ %call263, %cond.false261 ], !dbg !3646
  br label %cond.end266, !dbg !3646

cond.end266:                                      ; preds = %cond.end264, %cond.true247
  %cond267 = phi ptr [ %call248, %cond.true247 ], [ %cond265, %cond.end264 ], !dbg !3646
  br label %cond.end268, !dbg !3646

cond.end268:                                      ; preds = %cond.end266, %cond.true236
  %cond269 = phi ptr [ %133, %cond.true236 ], [ %cond267, %cond.end266 ], !dbg !3646
  store ptr %cond269, ptr %__pyx_t_9, align 8, !dbg !3647, !tbaa !1461
  %143 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3648, !tbaa !1461
  %tobool270 = icmp ne ptr %143, null, !dbg !3648
  %lnot271 = xor i1 %tobool270, true, !dbg !3648
  %lnot273 = xor i1 %lnot271, true, !dbg !3648
  %lnot275 = xor i1 %lnot273, true, !dbg !3648
  %lnot.ext276 = zext i1 %lnot275 to i32, !dbg !3648
  %conv277 = sext i32 %lnot.ext276 to i64, !dbg !3648
  %expval278 = call i64 @llvm.expect.i64(i64 %conv277, i64 0), !dbg !3648
  %tobool279 = icmp ne i64 %expval278, 0, !dbg !3648
  br i1 %tobool279, label %if.then280, label %if.end281, !dbg !3650

if.then280:                                       ; preds = %cond.end268
  %144 = load ptr, ptr @__pyx_f, align 16, !dbg !3651, !tbaa !1461
  store ptr %144, ptr %__pyx_filename, align 8, !dbg !3651, !tbaa !1461
  %145 = load ptr, ptr %__pyx_filename, align 8, !dbg !3651, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3651, !tbaa !1557
  %146 = load i32, ptr %__pyx_lineno, align 4, !dbg !3651, !tbaa !1557
  store i32 5628, ptr %__pyx_clineno, align 4, !dbg !3651, !tbaa !1557
  %147 = load i32, ptr %__pyx_clineno, align 4, !dbg !3651, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3654

if.end281:                                        ; preds = %cond.end268
  %148 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3655, !tbaa !1461
  call void @Py_DECREF(ptr noundef %148), !dbg !3655
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !3656, !tbaa !1461
  %149 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3657, !tbaa !1461
  %call282 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %149), !dbg !3657
  %150 = load i32, ptr %__pyx_t_8, align 4, !dbg !3658, !tbaa !1557
  %cmp283 = icmp ugt i32 %call282, %150, !dbg !3659
  br i1 %cmp283, label %cond.true285, label %cond.false287, !dbg !3660

cond.true285:                                     ; preds = %if.end281
  %151 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3661, !tbaa !1461
  %call286 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %151), !dbg !3661
  br label %cond.end288, !dbg !3660

cond.false287:                                    ; preds = %if.end281
  %152 = load i32, ptr %__pyx_t_8, align 4, !dbg !3662, !tbaa !1557
  br label %cond.end288, !dbg !3660

cond.end288:                                      ; preds = %cond.false287, %cond.true285
  %cond289 = phi i32 [ %call286, %cond.true285 ], [ %152, %cond.false287 ], !dbg !3660
  store i32 %cond289, ptr %__pyx_t_8, align 4, !dbg !3663, !tbaa !1557
  %153 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3664, !tbaa !1461
  %call290 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %153), !dbg !3664
  %154 = load i64, ptr %__pyx_t_7, align 8, !dbg !3665, !tbaa !1836
  %add291 = add i64 %154, %call290, !dbg !3665
  store i64 %add291, ptr %__pyx_t_7, align 8, !dbg !3665, !tbaa !1836
  %155 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3666, !tbaa !1461
  %156 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3666, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %155, i64 noundef 2, ptr noundef %156), !dbg !3666
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3667, !tbaa !1461
  %157 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3668, !tbaa !1461
  %__pyx_kp_u__7 = getelementptr inbounds %struct.__pyx_mstate, ptr %157, i32 0, i32 23, !dbg !3668
  %158 = load ptr, ptr %__pyx_kp_u__7, align 8, !dbg !3668, !tbaa !3669
  call void @Py_INCREF(ptr noundef %158), !dbg !3668
  %159 = load i64, ptr %__pyx_t_7, align 8, !dbg !3670, !tbaa !1836
  %add292 = add i64 %159, 2, !dbg !3670
  store i64 %add292, ptr %__pyx_t_7, align 8, !dbg !3670, !tbaa !1836
  %160 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3671, !tbaa !1461
  %161 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3671, !tbaa !1461
  %__pyx_kp_u__7293 = getelementptr inbounds %struct.__pyx_mstate, ptr %161, i32 0, i32 23, !dbg !3671
  %162 = load ptr, ptr %__pyx_kp_u__7293, align 8, !dbg !3671, !tbaa !3669
  call void @PyTuple_SET_ITEM(ptr noundef %160, i64 noundef 3, ptr noundef %162), !dbg !3671
  %163 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3672, !tbaa !1461
  %164 = load i64, ptr %__pyx_t_7, align 8, !dbg !3673, !tbaa !1836
  %165 = load i32, ptr %__pyx_t_8, align 4, !dbg !3674, !tbaa !1557
  %call294 = call ptr @__Pyx_PyUnicode_Join(ptr noundef %163, i64 noundef 4, i64 noundef %164, i32 noundef %165), !dbg !3675
  store ptr %call294, ptr %__pyx_t_9, align 8, !dbg !3676, !tbaa !1461
  %166 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3677, !tbaa !1461
  %tobool295 = icmp ne ptr %166, null, !dbg !3677
  %lnot296 = xor i1 %tobool295, true, !dbg !3677
  %lnot298 = xor i1 %lnot296, true, !dbg !3677
  %lnot300 = xor i1 %lnot298, true, !dbg !3677
  %lnot.ext301 = zext i1 %lnot300 to i32, !dbg !3677
  %conv302 = sext i32 %lnot.ext301 to i64, !dbg !3677
  %expval303 = call i64 @llvm.expect.i64(i64 %conv302, i64 0), !dbg !3677
  %tobool304 = icmp ne i64 %expval303, 0, !dbg !3677
  br i1 %tobool304, label %if.then305, label %if.end306, !dbg !3679

if.then305:                                       ; preds = %cond.end288
  %167 = load ptr, ptr @__pyx_f, align 16, !dbg !3680, !tbaa !1461
  store ptr %167, ptr %__pyx_filename, align 8, !dbg !3680, !tbaa !1461
  %168 = load ptr, ptr %__pyx_filename, align 8, !dbg !3680, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3680, !tbaa !1557
  %169 = load i32, ptr %__pyx_lineno, align 4, !dbg !3680, !tbaa !1557
  store i32 5640, ptr %__pyx_clineno, align 4, !dbg !3680, !tbaa !1557
  %170 = load i32, ptr %__pyx_clineno, align 4, !dbg !3680, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3683

if.end306:                                        ; preds = %cond.end288
  %171 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3684, !tbaa !1461
  call void @Py_DECREF(ptr noundef %171), !dbg !3684
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3685, !tbaa !1461
  %172 = load ptr, ptr @__pyx_builtin_print, align 8, !dbg !3686, !tbaa !1461
  %173 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3687, !tbaa !1461
  %call307 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %172, ptr noundef %173), !dbg !3688
  store ptr %call307, ptr %__pyx_t_6, align 8, !dbg !3689, !tbaa !1461
  %174 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3690, !tbaa !1461
  %tobool308 = icmp ne ptr %174, null, !dbg !3690
  %lnot309 = xor i1 %tobool308, true, !dbg !3690
  %lnot311 = xor i1 %lnot309, true, !dbg !3690
  %lnot313 = xor i1 %lnot311, true, !dbg !3690
  %lnot.ext314 = zext i1 %lnot313 to i32, !dbg !3690
  %conv315 = sext i32 %lnot.ext314 to i64, !dbg !3690
  %expval316 = call i64 @llvm.expect.i64(i64 %conv315, i64 0), !dbg !3690
  %tobool317 = icmp ne i64 %expval316, 0, !dbg !3690
  br i1 %tobool317, label %if.then318, label %if.end319, !dbg !3692

if.then318:                                       ; preds = %if.end306
  %175 = load ptr, ptr @__pyx_f, align 16, !dbg !3693, !tbaa !1461
  store ptr %175, ptr %__pyx_filename, align 8, !dbg !3693, !tbaa !1461
  %176 = load ptr, ptr %__pyx_filename, align 8, !dbg !3693, !tbaa !1461
  store i32 160, ptr %__pyx_lineno, align 4, !dbg !3693, !tbaa !1557
  %177 = load i32, ptr %__pyx_lineno, align 4, !dbg !3693, !tbaa !1557
  store i32 5643, ptr %__pyx_clineno, align 4, !dbg !3693, !tbaa !1557
  %178 = load i32, ptr %__pyx_clineno, align 4, !dbg !3693, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3696

if.end319:                                        ; preds = %if.end306
  %179 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3697, !tbaa !1461
  call void @Py_DECREF(ptr noundef %179), !dbg !3697
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3698, !tbaa !1461
  %180 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3699, !tbaa !1461
  call void @Py_DECREF(ptr noundef %180), !dbg !3699
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3700, !tbaa !1461
  %181 = load ptr, ptr @__pyx_builtin_print, align 8, !dbg !3701, !tbaa !1461
  %182 = load ptr, ptr %__pyx_v_errors, align 8, !dbg !3702, !tbaa !1461
  %call320 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %181, ptr noundef %182), !dbg !3703
  store ptr %call320, ptr %__pyx_t_6, align 8, !dbg !3704, !tbaa !1461
  %183 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3705, !tbaa !1461
  %tobool321 = icmp ne ptr %183, null, !dbg !3705
  %lnot322 = xor i1 %tobool321, true, !dbg !3705
  %lnot324 = xor i1 %lnot322, true, !dbg !3705
  %lnot326 = xor i1 %lnot324, true, !dbg !3705
  %lnot.ext327 = zext i1 %lnot326 to i32, !dbg !3705
  %conv328 = sext i32 %lnot.ext327 to i64, !dbg !3705
  %expval329 = call i64 @llvm.expect.i64(i64 %conv328, i64 0), !dbg !3705
  %tobool330 = icmp ne i64 %expval329, 0, !dbg !3705
  br i1 %tobool330, label %if.then331, label %if.end332, !dbg !3707

if.then331:                                       ; preds = %if.end319
  %184 = load ptr, ptr @__pyx_f, align 16, !dbg !3708, !tbaa !1461
  store ptr %184, ptr %__pyx_filename, align 8, !dbg !3708, !tbaa !1461
  %185 = load ptr, ptr %__pyx_filename, align 8, !dbg !3708, !tbaa !1461
  store i32 161, ptr %__pyx_lineno, align 4, !dbg !3708, !tbaa !1557
  %186 = load i32, ptr %__pyx_lineno, align 4, !dbg !3708, !tbaa !1557
  store i32 5655, ptr %__pyx_clineno, align 4, !dbg !3708, !tbaa !1557
  %187 = load i32, ptr %__pyx_clineno, align 4, !dbg !3708, !tbaa !1557
  br label %__pyx_L9_error, !dbg !3711

if.end332:                                        ; preds = %if.end319
  %188 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3712, !tbaa !1461
  call void @Py_DECREF(ptr noundef %188), !dbg !3712
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3713, !tbaa !1461
  br label %if.end333, !dbg !3714

if.end333:                                        ; preds = %if.end332, %if.end27
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !3715
  br label %do.body334, !dbg !3716

do.body334:                                       ; preds = %if.end333
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp335) #10, !dbg !3717
  tail call void @llvm.dbg.declare(metadata ptr %tmp335, metadata !3372, metadata !DIExpression()), !dbg !3717
  %189 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3717, !tbaa !1461
  store ptr %189, ptr %tmp335, align 8, !dbg !3717, !tbaa !1461
  store ptr @_Py_NoneStruct, ptr %__pyx_v_context, align 8, !dbg !3717, !tbaa !1461
  %190 = load ptr, ptr %tmp335, align 8, !dbg !3717, !tbaa !1461
  call void @Py_DECREF(ptr noundef %190), !dbg !3717
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp335) #10, !dbg !3716
  br label %do.cond336, !dbg !3717

do.cond336:                                       ; preds = %do.body334
  br label %do.end337, !dbg !3717

do.end337:                                        ; preds = %do.cond336
  %191 = load ptr, ptr %__pyx_t_3, align 8, !dbg !3718, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %191), !dbg !3718
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !3719, !tbaa !1461
  %192 = load ptr, ptr %__pyx_t_4, align 8, !dbg !3720, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %192), !dbg !3720
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !3721, !tbaa !1461
  %193 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3722, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %193), !dbg !3722
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3723, !tbaa !1461
  br label %__pyx_L14_try_end, !dbg !3724

__pyx_L9_error:                                   ; preds = %cleanup224, %cleanup, %if.then331, %if.then318, %if.then305, %if.then280, %if.then170, %if.then144, %if.then54, %if.then41, %if.then26, %if.then14
  tail call void @llvm.dbg.label(metadata !3374), !dbg !3725
  %194 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3726, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %194), !dbg !3726
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !3727, !tbaa !1461
  %195 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3728, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %195), !dbg !3728
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3729, !tbaa !1461
  %196 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3730, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %196), !dbg !3730
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3731, !tbaa !1461
  %197 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3732, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %197), !dbg !3732
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3733, !tbaa !1461
  %198 = load i32, ptr %__pyx_clineno, align 4, !dbg !3734, !tbaa !1557
  %199 = load i32, ptr %__pyx_lineno, align 4, !dbg !3736, !tbaa !1557
  %200 = load ptr, ptr %__pyx_filename, align 8, !dbg !3737, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.79, i32 noundef %198, i32 noundef %199, ptr noundef %200), !dbg !3738
  %201 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3739, !tbaa !1461
  %call338 = call i32 @__Pyx__GetException(ptr noundef %201, ptr noundef %__pyx_t_6, ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_10), !dbg !3739
  %cmp339 = icmp slt i32 %call338, 0, !dbg !3741
  br i1 %cmp339, label %if.then341, label %if.end342, !dbg !3742

if.then341:                                       ; preds = %__pyx_L9_error
  %202 = load ptr, ptr @__pyx_f, align 16, !dbg !3743, !tbaa !1461
  store ptr %202, ptr %__pyx_filename, align 8, !dbg !3743, !tbaa !1461
  %203 = load ptr, ptr %__pyx_filename, align 8, !dbg !3743, !tbaa !1461
  store i32 163, ptr %__pyx_lineno, align 4, !dbg !3743, !tbaa !1557
  %204 = load i32, ptr %__pyx_lineno, align 4, !dbg !3743, !tbaa !1557
  store i32 5705, ptr %__pyx_clineno, align 4, !dbg !3743, !tbaa !1557
  %205 = load i32, ptr %__pyx_clineno, align 4, !dbg !3743, !tbaa !1557
  br label %__pyx_L11_except_error, !dbg !3746

if.end342:                                        ; preds = %__pyx_L9_error
  %206 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3747, !tbaa !1461
  %tobool343 = icmp ne ptr %206, null, !dbg !3747
  %lnot344 = xor i1 %tobool343, true, !dbg !3747
  %lnot346 = xor i1 %lnot344, true, !dbg !3747
  %lnot348 = xor i1 %lnot346, true, !dbg !3747
  %lnot.ext349 = zext i1 %lnot348 to i32, !dbg !3747
  %conv350 = sext i32 %lnot.ext349 to i64, !dbg !3747
  %expval351 = call i64 @llvm.expect.i64(i64 %conv350, i64 0), !dbg !3747
  %tobool352 = icmp ne i64 %expval351, 0, !dbg !3747
  br i1 %tobool352, label %if.then353, label %if.end354, !dbg !3749

if.then353:                                       ; preds = %if.end342
  call void @__Pyx_RaiseUnboundLocalError(ptr noundef @.str.80), !dbg !3750
  %207 = load ptr, ptr @__pyx_f, align 16, !dbg !3752, !tbaa !1461
  store ptr %207, ptr %__pyx_filename, align 8, !dbg !3752, !tbaa !1461
  %208 = load ptr, ptr %__pyx_filename, align 8, !dbg !3752, !tbaa !1461
  store i32 165, ptr %__pyx_lineno, align 4, !dbg !3752, !tbaa !1557
  %209 = load i32, ptr %__pyx_lineno, align 4, !dbg !3752, !tbaa !1557
  store i32 5717, ptr %__pyx_clineno, align 4, !dbg !3752, !tbaa !1557
  %210 = load i32, ptr %__pyx_clineno, align 4, !dbg !3752, !tbaa !1557
  br label %__pyx_L11_except_error, !dbg !3755

if.end354:                                        ; preds = %if.end342
  %211 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3756, !tbaa !1461
  %cmp355 = icmp ne ptr %211, @_Py_NoneStruct, !dbg !3757
  %conv356 = zext i1 %cmp355 to i32, !dbg !3757
  store i32 %conv356, ptr %__pyx_t_1, align 4, !dbg !3758, !tbaa !1557
  %212 = load i32, ptr %__pyx_t_1, align 4, !dbg !3759, !tbaa !1557
  %tobool357 = icmp ne i32 %212, 0, !dbg !3759
  br i1 %tobool357, label %if.then358, label %if.else373, !dbg !3761

if.then358:                                       ; preds = %if.end354
  %213 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3762, !tbaa !1461
  %tobool359 = icmp ne ptr %213, null, !dbg !3762
  %lnot360 = xor i1 %tobool359, true, !dbg !3762
  %lnot362 = xor i1 %lnot360, true, !dbg !3762
  %lnot364 = xor i1 %lnot362, true, !dbg !3762
  %lnot.ext365 = zext i1 %lnot364 to i32, !dbg !3762
  %conv366 = sext i32 %lnot.ext365 to i64, !dbg !3762
  %expval367 = call i64 @llvm.expect.i64(i64 %conv366, i64 0), !dbg !3762
  %tobool368 = icmp ne i64 %expval367, 0, !dbg !3762
  br i1 %tobool368, label %if.then369, label %if.end370, !dbg !3765

if.then369:                                       ; preds = %if.then358
  call void @__Pyx_RaiseUnboundLocalError(ptr noundef @.str.80), !dbg !3766
  %214 = load ptr, ptr @__pyx_f, align 16, !dbg !3768, !tbaa !1461
  store ptr %214, ptr %__pyx_filename, align 8, !dbg !3768, !tbaa !1461
  %215 = load ptr, ptr %__pyx_filename, align 8, !dbg !3768, !tbaa !1461
  store i32 165, ptr %__pyx_lineno, align 4, !dbg !3768, !tbaa !1557
  %216 = load i32, ptr %__pyx_lineno, align 4, !dbg !3768, !tbaa !1557
  store i32 5720, ptr %__pyx_clineno, align 4, !dbg !3768, !tbaa !1557
  %217 = load i32, ptr %__pyx_clineno, align 4, !dbg !3768, !tbaa !1557
  br label %__pyx_L11_except_error, !dbg !3771

if.end370:                                        ; preds = %if.then358
  %218 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3772, !tbaa !1461
  %filename371 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %218, i32 0, i32 3, !dbg !3772
  %219 = load ptr, ptr %filename371, align 8, !dbg !3772, !tbaa !2905
  call void @Py_INCREF(ptr noundef %219), !dbg !3772
  %220 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3773, !tbaa !1461
  %filename372 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %220, i32 0, i32 3, !dbg !3774
  %221 = load ptr, ptr %filename372, align 8, !dbg !3774, !tbaa !2905
  store ptr %221, ptr %__pyx_t_11, align 8, !dbg !3775, !tbaa !1461
  br label %if.end374, !dbg !3776

if.else373:                                       ; preds = %if.end354
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !3777
  store ptr @_Py_NoneStruct, ptr %__pyx_t_11, align 8, !dbg !3779, !tbaa !1461
  br label %if.end374

if.end374:                                        ; preds = %if.else373, %if.end370
  %222 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3780, !tbaa !1461
  %tobool375 = icmp ne ptr %222, null, !dbg !3780
  %lnot376 = xor i1 %tobool375, true, !dbg !3780
  %lnot378 = xor i1 %lnot376, true, !dbg !3780
  %lnot380 = xor i1 %lnot378, true, !dbg !3780
  %lnot.ext381 = zext i1 %lnot380 to i32, !dbg !3780
  %conv382 = sext i32 %lnot.ext381 to i64, !dbg !3780
  %expval383 = call i64 @llvm.expect.i64(i64 %conv382, i64 0), !dbg !3780
  %tobool384 = icmp ne i64 %expval383, 0, !dbg !3780
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !3782

if.then385:                                       ; preds = %if.end374
  call void @__Pyx_RaiseUnboundLocalError(ptr noundef @.str.80), !dbg !3783
  %223 = load ptr, ptr @__pyx_f, align 16, !dbg !3785, !tbaa !1461
  store ptr %223, ptr %__pyx_filename, align 8, !dbg !3785, !tbaa !1461
  %224 = load ptr, ptr %__pyx_filename, align 8, !dbg !3785, !tbaa !1461
  store i32 166, ptr %__pyx_lineno, align 4, !dbg !3785, !tbaa !1557
  %225 = load i32, ptr %__pyx_lineno, align 4, !dbg !3785, !tbaa !1557
  store i32 5735, ptr %__pyx_clineno, align 4, !dbg !3785, !tbaa !1557
  %226 = load i32, ptr %__pyx_clineno, align 4, !dbg !3785, !tbaa !1557
  br label %__pyx_L11_except_error, !dbg !3788

if.end386:                                        ; preds = %if.end374
  %227 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3789, !tbaa !1461
  %cmp387 = icmp ne ptr %227, @_Py_NoneStruct, !dbg !3790
  %conv388 = zext i1 %cmp387 to i32, !dbg !3790
  store i32 %conv388, ptr %__pyx_t_1, align 4, !dbg !3791, !tbaa !1557
  %228 = load i32, ptr %__pyx_t_1, align 4, !dbg !3792, !tbaa !1557
  %tobool389 = icmp ne i32 %228, 0, !dbg !3792
  br i1 %tobool389, label %if.then390, label %if.else403, !dbg !3794

if.then390:                                       ; preds = %if.end386
  %229 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3795, !tbaa !1461
  %tobool391 = icmp ne ptr %229, null, !dbg !3795
  %lnot392 = xor i1 %tobool391, true, !dbg !3795
  %lnot394 = xor i1 %lnot392, true, !dbg !3795
  %lnot396 = xor i1 %lnot394, true, !dbg !3795
  %lnot.ext397 = zext i1 %lnot396 to i32, !dbg !3795
  %conv398 = sext i32 %lnot.ext397 to i64, !dbg !3795
  %expval399 = call i64 @llvm.expect.i64(i64 %conv398, i64 0), !dbg !3795
  %tobool400 = icmp ne i64 %expval399, 0, !dbg !3795
  br i1 %tobool400, label %if.then401, label %if.end402, !dbg !3798

if.then401:                                       ; preds = %if.then390
  call void @__Pyx_RaiseUnboundLocalError(ptr noundef @.str.80), !dbg !3799
  %230 = load ptr, ptr @__pyx_f, align 16, !dbg !3801, !tbaa !1461
  store ptr %230, ptr %__pyx_filename, align 8, !dbg !3801, !tbaa !1461
  %231 = load ptr, ptr %__pyx_filename, align 8, !dbg !3801, !tbaa !1461
  store i32 166, ptr %__pyx_lineno, align 4, !dbg !3801, !tbaa !1557
  %232 = load i32, ptr %__pyx_lineno, align 4, !dbg !3801, !tbaa !1557
  store i32 5738, ptr %__pyx_clineno, align 4, !dbg !3801, !tbaa !1557
  %233 = load i32, ptr %__pyx_clineno, align 4, !dbg !3801, !tbaa !1557
  br label %__pyx_L11_except_error, !dbg !3804

if.end402:                                        ; preds = %if.then390
  %234 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3805, !tbaa !1461
  %start = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %234, i32 0, i32 6, !dbg !3806
  %235 = load i64, ptr %start, align 8, !dbg !3806, !tbaa !2912
  store i64 %235, ptr %__pyx_t_7, align 8, !dbg !3807, !tbaa !1836
  br label %if.end404, !dbg !3808

if.else403:                                       ; preds = %if.end386
  store i64 0, ptr %__pyx_t_7, align 8, !dbg !3809, !tbaa !1836
  br label %if.end404

if.end404:                                        ; preds = %if.else403, %if.end402
  %236 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3811, !tbaa !1461
  %237 = load i64, ptr %__pyx_t_7, align 8, !dbg !3812, !tbaa !1836
  call void @__pyx_f_6Cython_7Runtime_8refnanny_report_unraisable(ptr noundef %236, i64 noundef %237, ptr noundef null), !dbg !3813
  %call405 = call ptr @PyErr_Occurred(), !dbg !3814
  %tobool406 = icmp ne ptr %call405, null, !dbg !3814
  %lnot407 = xor i1 %tobool406, true, !dbg !3814
  %lnot409 = xor i1 %lnot407, true, !dbg !3814
  %lnot.ext410 = zext i1 %lnot409 to i32, !dbg !3814
  %conv411 = sext i32 %lnot.ext410 to i64, !dbg !3814
  %expval412 = call i64 @llvm.expect.i64(i64 %conv411, i64 0), !dbg !3814
  %tobool413 = icmp ne i64 %expval412, 0, !dbg !3814
  br i1 %tobool413, label %if.then414, label %if.end415, !dbg !3816

if.then414:                                       ; preds = %if.end404
  %238 = load ptr, ptr @__pyx_f, align 16, !dbg !3817, !tbaa !1461
  store ptr %238, ptr %__pyx_filename, align 8, !dbg !3817, !tbaa !1461
  %239 = load ptr, ptr %__pyx_filename, align 8, !dbg !3817, !tbaa !1461
  store i32 164, ptr %__pyx_lineno, align 4, !dbg !3817, !tbaa !1557
  %240 = load i32, ptr %__pyx_lineno, align 4, !dbg !3817, !tbaa !1557
  store i32 5751, ptr %__pyx_clineno, align 4, !dbg !3817, !tbaa !1557
  %241 = load i32, ptr %__pyx_clineno, align 4, !dbg !3817, !tbaa !1557
  br label %__pyx_L11_except_error, !dbg !3820

if.end415:                                        ; preds = %if.end404
  %242 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3821, !tbaa !1461
  call void @Py_DECREF(ptr noundef %242), !dbg !3821
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3822, !tbaa !1461
  %243 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3823, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %243), !dbg !3823
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3824, !tbaa !1461
  %244 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3825, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %244), !dbg !3825
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3826, !tbaa !1461
  %245 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3827, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %245), !dbg !3827
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !3828, !tbaa !1461
  br label %__pyx_L10_exception_handled, !dbg !3829

__pyx_L11_except_error:                           ; preds = %if.then414, %if.then401, %if.then385, %if.then369, %if.then353, %if.then341
  tail call void @llvm.dbg.label(metadata !3375), !dbg !3830
  %246 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3831, !tbaa !1461
  %247 = load ptr, ptr %__pyx_t_3, align 8, !dbg !3831, !tbaa !1461
  %248 = load ptr, ptr %__pyx_t_4, align 8, !dbg !3831, !tbaa !1461
  %249 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3831, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %246, ptr noundef %247, ptr noundef %248, ptr noundef %249), !dbg !3831
  store i32 16, ptr %cleanup.dest.slot, align 4
  br label %cleanup416, !dbg !3832

__pyx_L10_exception_handled:                      ; preds = %if.end415
  tail call void @llvm.dbg.label(metadata !3376), !dbg !3833
  %250 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3834, !tbaa !1461
  %251 = load ptr, ptr %__pyx_t_3, align 8, !dbg !3834, !tbaa !1461
  %252 = load ptr, ptr %__pyx_t_4, align 8, !dbg !3834, !tbaa !1461
  %253 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3834, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %250, ptr noundef %251, ptr noundef %252, ptr noundef %253), !dbg !3834
  br label %__pyx_L14_try_end, !dbg !3834

__pyx_L14_try_end:                                ; preds = %__pyx_L10_exception_handled, %do.end337
  tail call void @llvm.dbg.label(metadata !3377), !dbg !3835
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3836
  br label %cleanup416, !dbg !3836

cleanup416:                                       ; preds = %__pyx_L11_except_error, %__pyx_L14_try_end, %cleanup224, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !3836
  %cleanup.dest417 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest417, label %unreachable [
    i32 0, label %cleanup.cont418
    i32 16, label %__pyx_L7_error
  ]

cleanup.cont418:                                  ; preds = %cleanup416
  br label %do.body419, !dbg !3837

do.body419:                                       ; preds = %cleanup.cont418
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #10, !dbg !3838
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !3378, metadata !DIExpression()), !dbg !3838
  %254 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3838, !tbaa !1461
  %arrayidx420 = getelementptr ptr, ptr %254, i64 0, !dbg !3838
  %255 = load ptr, ptr %arrayidx420, align 8, !dbg !3838, !tbaa !1461
  store ptr %255, ptr %_py_tmp, align 8, !dbg !3838, !tbaa !1461
  %256 = load ptr, ptr %_py_tmp, align 8, !dbg !3839, !tbaa !1461
  %cmp421 = icmp ne ptr %256, null, !dbg !3839
  br i1 %cmp421, label %if.then423, label %if.end425, !dbg !3838

if.then423:                                       ; preds = %do.body419
  %257 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3841, !tbaa !1461
  %arrayidx424 = getelementptr ptr, ptr %257, i64 0, !dbg !3841
  store ptr null, ptr %arrayidx424, align 8, !dbg !3841, !tbaa !1461
  %258 = load ptr, ptr %_py_tmp, align 8, !dbg !3841, !tbaa !1461
  call void @Py_DECREF(ptr noundef %258), !dbg !3841
  br label %if.end425, !dbg !3841

if.end425:                                        ; preds = %if.then423, %do.body419
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #10, !dbg !3837
  br label %do.cond426, !dbg !3838

do.cond426:                                       ; preds = %if.end425
  br label %do.end427, !dbg !3838

do.end427:                                        ; preds = %do.cond426
  %259 = load ptr, ptr %__pyx_v_type, align 8, !dbg !3843, !tbaa !1461
  %260 = load ptr, ptr %__pyx_v_value, align 8, !dbg !3844, !tbaa !1461
  %261 = load ptr, ptr %__pyx_v_tb, align 8, !dbg !3845, !tbaa !1461
  call void @PyErr_Restore(ptr noundef %259, ptr noundef %260, ptr noundef %261), !dbg !3846
  br label %__pyx_L0, !dbg !3847

__pyx_L7_error:                                   ; preds = %cleanup416
  tail call void @llvm.dbg.label(metadata !3382), !dbg !3848
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate428) #10, !dbg !3849
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate428, metadata !3383, metadata !DIExpression()), !dbg !3849
  %call429 = call ptr @_PyThreadState_UncheckedGet(), !dbg !3850
  store ptr %call429, ptr %__pyx_tstate428, align 8, !dbg !3850, !tbaa !1461
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3851, !tbaa !1461
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !3852, !tbaa !1461
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !3853, !tbaa !1461
  store ptr null, ptr %__pyx_t_13, align 8, !dbg !3854, !tbaa !1461
  store ptr null, ptr %__pyx_t_14, align 8, !dbg !3855, !tbaa !1461
  store ptr null, ptr %__pyx_t_15, align 8, !dbg !3856, !tbaa !1461
  %262 = load ptr, ptr %__pyx_t_10, align 8, !dbg !3857, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %262), !dbg !3857
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !3858, !tbaa !1461
  %263 = load ptr, ptr %__pyx_t_11, align 8, !dbg !3859, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %263), !dbg !3859
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !3860, !tbaa !1461
  %264 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3861, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %264), !dbg !3861
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3862, !tbaa !1461
  %265 = load ptr, ptr %__pyx_t_9, align 8, !dbg !3863, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %265), !dbg !3863
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !3864, !tbaa !1461
  %266 = load ptr, ptr %__pyx_tstate428, align 8, !dbg !3865, !tbaa !1461
  call void @__Pyx__ExceptionSwap(ptr noundef %266, ptr noundef %__pyx_t_13, ptr noundef %__pyx_t_14, ptr noundef %__pyx_t_15), !dbg !3865
  %267 = load ptr, ptr %__pyx_tstate428, align 8, !dbg !3867, !tbaa !1461
  %call430 = call i32 @__Pyx__GetException(ptr noundef %267, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_3), !dbg !3867
  %cmp431 = icmp slt i32 %call430, 0, !dbg !3867
  %lnot433 = xor i1 %cmp431, true, !dbg !3867
  %lnot435 = xor i1 %lnot433, true, !dbg !3867
  %lnot.ext436 = zext i1 %lnot435 to i32, !dbg !3867
  %conv437 = sext i32 %lnot.ext436 to i64, !dbg !3867
  %expval438 = call i64 @llvm.expect.i64(i64 %conv437, i64 0), !dbg !3867
  %tobool439 = icmp ne i64 %expval438, 0, !dbg !3867
  br i1 %tobool439, label %if.then440, label %if.end441, !dbg !3869

if.then440:                                       ; preds = %__pyx_L7_error
  %268 = load ptr, ptr %__pyx_tstate428, align 8, !dbg !3870, !tbaa !1461
  call void @__Pyx_ErrFetchInState(ptr noundef %268, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_3), !dbg !3870
  br label %if.end441, !dbg !3870

if.end441:                                        ; preds = %if.then440, %__pyx_L7_error
  br label %do.body442, !dbg !3871

do.body442:                                       ; preds = %if.end441
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp443) #10, !dbg !3872
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp443, metadata !3385, metadata !DIExpression()), !dbg !3872
  %269 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3872, !tbaa !1461
  %arrayidx444 = getelementptr ptr, ptr %269, i64 0, !dbg !3872
  %270 = load ptr, ptr %arrayidx444, align 8, !dbg !3872, !tbaa !1461
  store ptr %270, ptr %_py_tmp443, align 8, !dbg !3872, !tbaa !1461
  %271 = load ptr, ptr %_py_tmp443, align 8, !dbg !3873, !tbaa !1461
  %cmp445 = icmp ne ptr %271, null, !dbg !3873
  br i1 %cmp445, label %if.then447, label %if.end449, !dbg !3872

if.then447:                                       ; preds = %do.body442
  %272 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !3875, !tbaa !1461
  %arrayidx448 = getelementptr ptr, ptr %272, i64 0, !dbg !3875
  store ptr null, ptr %arrayidx448, align 8, !dbg !3875, !tbaa !1461
  %273 = load ptr, ptr %_py_tmp443, align 8, !dbg !3875, !tbaa !1461
  call void @Py_DECREF(ptr noundef %273), !dbg !3875
  br label %if.end449, !dbg !3875

if.end449:                                        ; preds = %if.then447, %do.body442
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp443) #10, !dbg !3871
  br label %do.cond450, !dbg !3872

do.cond450:                                       ; preds = %if.end449
  br label %do.end451, !dbg !3872

do.end451:                                        ; preds = %do.cond450
  %274 = load ptr, ptr %__pyx_v_type, align 8, !dbg !3877, !tbaa !1461
  %275 = load ptr, ptr %__pyx_v_value, align 8, !dbg !3878, !tbaa !1461
  %276 = load ptr, ptr %__pyx_v_tb, align 8, !dbg !3879, !tbaa !1461
  call void @PyErr_Restore(ptr noundef %274, ptr noundef %275, ptr noundef %276), !dbg !3880
  br label %__pyx_L18_return, !dbg !3881

__pyx_L18_return:                                 ; preds = %do.end451
  tail call void @llvm.dbg.label(metadata !3388), !dbg !3882
  %277 = load ptr, ptr %__pyx_tstate428, align 8, !dbg !3883, !tbaa !1461
  %278 = load ptr, ptr %__pyx_t_13, align 8, !dbg !3883, !tbaa !1461
  %279 = load ptr, ptr %__pyx_t_14, align 8, !dbg !3883, !tbaa !1461
  %280 = load ptr, ptr %__pyx_t_15, align 8, !dbg !3883, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %277, ptr noundef %278, ptr noundef %279, ptr noundef %280), !dbg !3883
  %281 = load ptr, ptr %__pyx_t_5, align 8, !dbg !3886, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %281), !dbg !3886
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !3887, !tbaa !1461
  %282 = load ptr, ptr %__pyx_t_4, align 8, !dbg !3888, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %282), !dbg !3888
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !3889, !tbaa !1461
  %283 = load ptr, ptr %__pyx_t_3, align 8, !dbg !3890, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %283), !dbg !3890
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !3891, !tbaa !1461
  store ptr null, ptr %__pyx_t_13, align 8, !dbg !3892, !tbaa !1461
  store ptr null, ptr %__pyx_t_14, align 8, !dbg !3893, !tbaa !1461
  store ptr null, ptr %__pyx_t_15, align 8, !dbg !3894, !tbaa !1461
  store i32 3, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate428) #10, !dbg !3895
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L18_return, %do.end427, %if.then4
  tail call void @llvm.dbg.label(metadata !3389), !dbg !3896
  %284 = load ptr, ptr %__pyx_v_errors, align 8, !dbg !3897, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %284), !dbg !3897
  %285 = load ptr, ptr %__pyx_v_context, align 8, !dbg !3898, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %285), !dbg !3898
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_15) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_14) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_13) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_12) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_8) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_context) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_errors) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !3899
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !3899
  ret void, !dbg !3899

unreachable:                                      ; preds = %cleanup416
  unreachable
}

declare !dbg !3900 ptr @PyLong_FromVoidPtr(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_AddTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 !dbg !3904 {
entry:
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_frame = alloca ptr, align 8
  %tstate = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %funcname.addr, metadata !3908, metadata !DIExpression()), !dbg !3919
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !3909, metadata !DIExpression()), !dbg !3920
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %py_line.addr, metadata !3910, metadata !DIExpression()), !dbg !3921
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !3911, metadata !DIExpression()), !dbg !3922
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #10, !dbg !3923
  tail call void @llvm.dbg.declare(metadata ptr %py_code, metadata !3912, metadata !DIExpression()), !dbg !3924
  store ptr null, ptr %py_code, align 8, !dbg !3924, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_frame) #10, !dbg !3925
  tail call void @llvm.dbg.declare(metadata ptr %py_frame, metadata !3913, metadata !DIExpression()), !dbg !3926
  store ptr null, ptr %py_frame, align 8, !dbg !3926, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %tstate) #10, !dbg !3927
  tail call void @llvm.dbg.declare(metadata ptr %tstate, metadata !3914, metadata !DIExpression()), !dbg !3928
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !3929
  store ptr %call, ptr %tstate, align 8, !dbg !3928, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #10, !dbg !3930
  tail call void @llvm.dbg.declare(metadata ptr %ptype, metadata !3915, metadata !DIExpression()), !dbg !3931
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #10, !dbg !3930
  tail call void @llvm.dbg.declare(metadata ptr %pvalue, metadata !3916, metadata !DIExpression()), !dbg !3932
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #10, !dbg !3930
  tail call void @llvm.dbg.declare(metadata ptr %ptraceback, metadata !3917, metadata !DIExpression()), !dbg !3933
  %0 = load i32, ptr %c_line.addr, align 4, !dbg !3934, !tbaa !1557
  %tobool = icmp ne i32 %0, 0, !dbg !3934
  br i1 %tobool, label %if.then, label %if.end, !dbg !3936

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %tstate, align 8, !dbg !3937, !tbaa !1461
  %2 = load i32, ptr %c_line.addr, align 4, !dbg !3939, !tbaa !1557
  %call1 = call i32 @__Pyx_CLineForTraceback(ptr noundef %1, i32 noundef %2), !dbg !3940
  store i32 %call1, ptr %c_line.addr, align 4, !dbg !3941, !tbaa !1557
  br label %if.end, !dbg !3942

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !3943, !tbaa !1557
  %tobool2 = icmp ne i32 %3, 0, !dbg !3943
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !3943

cond.true:                                        ; preds = %if.end
  %4 = load i32, ptr %c_line.addr, align 4, !dbg !3944, !tbaa !1557
  %sub = sub i32 0, %4, !dbg !3945
  br label %cond.end, !dbg !3943

cond.false:                                       ; preds = %if.end
  %5 = load i32, ptr %py_line.addr, align 4, !dbg !3946, !tbaa !1557
  br label %cond.end, !dbg !3943

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %5, %cond.false ], !dbg !3943
  %call3 = call ptr @__pyx_find_code_object(i32 noundef %cond), !dbg !3947
  store ptr %call3, ptr %py_code, align 8, !dbg !3948, !tbaa !1461
  %6 = load ptr, ptr %py_code, align 8, !dbg !3949, !tbaa !1461
  %tobool4 = icmp ne ptr %6, null, !dbg !3949
  br i1 %tobool4, label %if.end16, label %if.then5, !dbg !3951

if.then5:                                         ; preds = %cond.end
  %7 = load ptr, ptr %tstate, align 8, !dbg !3952, !tbaa !1461
  call void @__Pyx_ErrFetchInState(ptr noundef %7, ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback), !dbg !3954
  %8 = load ptr, ptr %funcname.addr, align 8, !dbg !3955, !tbaa !1461
  %9 = load i32, ptr %c_line.addr, align 4, !dbg !3956, !tbaa !1557
  %10 = load i32, ptr %py_line.addr, align 4, !dbg !3957, !tbaa !1557
  %11 = load ptr, ptr %filename.addr, align 8, !dbg !3958, !tbaa !1461
  %call6 = call ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %8, i32 noundef %9, i32 noundef %10, ptr noundef %11), !dbg !3959
  store ptr %call6, ptr %py_code, align 8, !dbg !3960, !tbaa !1461
  %12 = load ptr, ptr %py_code, align 8, !dbg !3961, !tbaa !1461
  %tobool7 = icmp ne ptr %12, null, !dbg !3961
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3963

if.then8:                                         ; preds = %if.then5
  %13 = load ptr, ptr %ptype, align 8, !dbg !3964, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %13), !dbg !3964
  %14 = load ptr, ptr %pvalue, align 8, !dbg !3966, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %14), !dbg !3966
  %15 = load ptr, ptr %ptraceback, align 8, !dbg !3967, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %15), !dbg !3967
  br label %bad, !dbg !3968

if.end9:                                          ; preds = %if.then5
  %16 = load ptr, ptr %tstate, align 8, !dbg !3969, !tbaa !1461
  %17 = load ptr, ptr %ptype, align 8, !dbg !3970, !tbaa !1461
  %18 = load ptr, ptr %pvalue, align 8, !dbg !3971, !tbaa !1461
  %19 = load ptr, ptr %ptraceback, align 8, !dbg !3972, !tbaa !1461
  call void @__Pyx_ErrRestoreInState(ptr noundef %16, ptr noundef %17, ptr noundef %18, ptr noundef %19), !dbg !3973
  %20 = load i32, ptr %c_line.addr, align 4, !dbg !3974, !tbaa !1557
  %tobool10 = icmp ne i32 %20, 0, !dbg !3974
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !3974

cond.true11:                                      ; preds = %if.end9
  %21 = load i32, ptr %c_line.addr, align 4, !dbg !3975, !tbaa !1557
  %sub12 = sub i32 0, %21, !dbg !3976
  br label %cond.end14, !dbg !3974

cond.false13:                                     ; preds = %if.end9
  %22 = load i32, ptr %py_line.addr, align 4, !dbg !3977, !tbaa !1557
  br label %cond.end14, !dbg !3974

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi i32 [ %sub12, %cond.true11 ], [ %22, %cond.false13 ], !dbg !3974
  %23 = load ptr, ptr %py_code, align 8, !dbg !3978, !tbaa !1461
  call void @__pyx_insert_code_object(i32 noundef %cond15, ptr noundef %23), !dbg !3979
  br label %if.end16, !dbg !3980

if.end16:                                         ; preds = %cond.end14, %cond.end
  %24 = load ptr, ptr %tstate, align 8, !dbg !3981, !tbaa !1461
  %25 = load ptr, ptr %py_code, align 8, !dbg !3982, !tbaa !1461
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !3983, !tbaa !1461
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 0, !dbg !3983
  %27 = load ptr, ptr %__pyx_d, align 8, !dbg !3983, !tbaa !1598
  %call17 = call ptr @PyFrame_New(ptr noundef %24, ptr noundef %25, ptr noundef %27, ptr noundef null), !dbg !3984
  store ptr %call17, ptr %py_frame, align 8, !dbg !3985, !tbaa !1461
  %28 = load ptr, ptr %py_frame, align 8, !dbg !3986, !tbaa !1461
  %tobool18 = icmp ne ptr %28, null, !dbg !3986
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !3988

if.then19:                                        ; preds = %if.end16
  br label %bad, !dbg !3989

if.end20:                                         ; preds = %if.end16
  %29 = load i32, ptr %py_line.addr, align 4, !dbg !3990, !tbaa !1557
  %30 = load ptr, ptr %py_frame, align 8, !dbg !3990, !tbaa !1461
  %f_lineno = getelementptr inbounds %struct._frame, ptr %30, i32 0, i32 4, !dbg !3990
  store i32 %29, ptr %f_lineno, align 8, !dbg !3990, !tbaa !3991
  %31 = load ptr, ptr %py_frame, align 8, !dbg !3993, !tbaa !1461
  %call21 = call i32 @PyTraceBack_Here(ptr noundef %31), !dbg !3994
  br label %bad, !dbg !3994

bad:                                              ; preds = %if.end20, %if.then19, %if.then8
  tail call void @llvm.dbg.label(metadata !3918), !dbg !3995
  %32 = load ptr, ptr %py_code, align 8, !dbg !3996, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %32), !dbg !3996
  %33 = load ptr, ptr %py_frame, align 8, !dbg !3997, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %33), !dbg !3997
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #10, !dbg !3998
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #10, !dbg !3998
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #10, !dbg !3998
  call void @llvm.lifetime.end.p0(i64 8, ptr %tstate) #10, !dbg !3998
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_frame) #10, !dbg !3998
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #10, !dbg !3998
  ret void, !dbg !3998
}

declare !dbg !3999 ptr @PyErr_Occurred() #1

declare !dbg !4000 i32 @PyOS_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #1

declare !dbg !4003 i32 @PyErr_WarnEx(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CreateStringTabAndInitStrings() #0 !dbg !4007 {
entry:
  %__pyx_string_tab = alloca [49 x %struct.__Pyx_StringTabEntry], align 16
  call void @llvm.lifetime.start.p0(i64 1960, ptr %__pyx_string_tab) #10, !dbg !4022
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_string_tab, metadata !4009, metadata !DIExpression()), !dbg !4023
  %arrayinit.begin = getelementptr inbounds [49 x %struct.__Pyx_StringTabEntry], ptr %__pyx_string_tab, i64 0, i64 0, !dbg !4024
  %p = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 0, !dbg !4025
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4026, !tbaa !1461
  %__pyx_kp_u_ = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 8, !dbg !4026
  store ptr %__pyx_kp_u_, ptr %p, align 8, !dbg !4025, !tbaa !4027
  %s = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 1, !dbg !4025
  store ptr @__pyx_k_, ptr %s, align 8, !dbg !4025, !tbaa !4029
  %n = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 2, !dbg !4025
  store i64 5, ptr %n, align 8, !dbg !4025, !tbaa !4030
  %encoding = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 3, !dbg !4025
  store ptr null, ptr %encoding, align 8, !dbg !4025, !tbaa !4031
  %is_unicode = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 4, !dbg !4025
  store i8 1, ptr %is_unicode, align 8, !dbg !4025, !tbaa !4032
  %is_str = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 5, !dbg !4025
  store i8 0, ptr %is_str, align 1, !dbg !4025, !tbaa !4033
  %intern = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i32 0, i32 6, !dbg !4025
  store i8 0, ptr %intern, align 2, !dbg !4025, !tbaa !4034
  %arrayinit.element = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.begin, i64 1, !dbg !4024
  %p1 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 0, !dbg !4035
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4036, !tbaa !1461
  %__pyx_n_s_Context = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 9, !dbg !4036
  store ptr %__pyx_n_s_Context, ptr %p1, align 8, !dbg !4035, !tbaa !4027
  %s2 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 1, !dbg !4035
  store ptr @__pyx_k_Context, ptr %s2, align 8, !dbg !4035, !tbaa !4029
  %n3 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 2, !dbg !4035
  store i64 8, ptr %n3, align 8, !dbg !4035, !tbaa !4030
  %encoding4 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 3, !dbg !4035
  store ptr null, ptr %encoding4, align 8, !dbg !4035, !tbaa !4031
  %is_unicode5 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 4, !dbg !4035
  store i8 0, ptr %is_unicode5, align 8, !dbg !4035, !tbaa !4032
  %is_str6 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 5, !dbg !4035
  store i8 1, ptr %is_str6, align 1, !dbg !4035, !tbaa !4033
  %intern7 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i32 0, i32 6, !dbg !4035
  store i8 1, ptr %intern7, align 2, !dbg !4035, !tbaa !4034
  %arrayinit.element8 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element, i64 1, !dbg !4024
  %p9 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 0, !dbg !4037
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4038, !tbaa !1461
  %__pyx_n_s_LOG_ALL = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 10, !dbg !4038
  store ptr %__pyx_n_s_LOG_ALL, ptr %p9, align 8, !dbg !4037, !tbaa !4027
  %s10 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 1, !dbg !4037
  store ptr @__pyx_k_LOG_ALL, ptr %s10, align 8, !dbg !4037, !tbaa !4029
  %n11 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 2, !dbg !4037
  store i64 8, ptr %n11, align 8, !dbg !4037, !tbaa !4030
  %encoding12 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 3, !dbg !4037
  store ptr null, ptr %encoding12, align 8, !dbg !4037, !tbaa !4031
  %is_unicode13 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 4, !dbg !4037
  store i8 0, ptr %is_unicode13, align 8, !dbg !4037, !tbaa !4032
  %is_str14 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 5, !dbg !4037
  store i8 1, ptr %is_str14, align 1, !dbg !4037, !tbaa !4033
  %intern15 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i32 0, i32 6, !dbg !4037
  store i8 1, ptr %intern15, align 2, !dbg !4037, !tbaa !4034
  %arrayinit.element16 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element8, i64 1, !dbg !4024
  %p17 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 0, !dbg !4039
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4040, !tbaa !1461
  %__pyx_n_s_LOG_NONE = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 11, !dbg !4040
  store ptr %__pyx_n_s_LOG_NONE, ptr %p17, align 8, !dbg !4039, !tbaa !4027
  %s18 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 1, !dbg !4039
  store ptr @__pyx_k_LOG_NONE, ptr %s18, align 8, !dbg !4039, !tbaa !4029
  %n19 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 2, !dbg !4039
  store i64 9, ptr %n19, align 8, !dbg !4039, !tbaa !4030
  %encoding20 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 3, !dbg !4039
  store ptr null, ptr %encoding20, align 8, !dbg !4039, !tbaa !4031
  %is_unicode21 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 4, !dbg !4039
  store i8 0, ptr %is_unicode21, align 8, !dbg !4039, !tbaa !4032
  %is_str22 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 5, !dbg !4039
  store i8 1, ptr %is_str22, align 1, !dbg !4039, !tbaa !4033
  %intern23 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i32 0, i32 6, !dbg !4039
  store i8 1, ptr %intern23, align 2, !dbg !4039, !tbaa !4034
  %arrayinit.element24 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element16, i64 1, !dbg !4024
  %p25 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 0, !dbg !4041
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4042, !tbaa !1461
  %__pyx_kp_u_NULL = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 12, !dbg !4042
  store ptr %__pyx_kp_u_NULL, ptr %p25, align 8, !dbg !4041, !tbaa !4027
  %s26 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 1, !dbg !4041
  store ptr @__pyx_k_NULL, ptr %s26, align 8, !dbg !4041, !tbaa !4029
  %n27 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 2, !dbg !4041
  store i64 7, ptr %n27, align 8, !dbg !4041, !tbaa !4030
  %encoding28 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 3, !dbg !4041
  store ptr null, ptr %encoding28, align 8, !dbg !4041, !tbaa !4031
  %is_unicode29 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 4, !dbg !4041
  store i8 1, ptr %is_unicode29, align 8, !dbg !4041, !tbaa !4032
  %is_str30 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 5, !dbg !4041
  store i8 0, ptr %is_str30, align 1, !dbg !4041, !tbaa !4033
  %intern31 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i32 0, i32 6, !dbg !4041
  store i8 0, ptr %intern31, align 2, !dbg !4041, !tbaa !4034
  %arrayinit.element32 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element24, i64 1, !dbg !4024
  %p33 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 0, !dbg !4043
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4044, !tbaa !1461
  %__pyx_kp_u_NULL_argument_on_line = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 13, !dbg !4044
  store ptr %__pyx_kp_u_NULL_argument_on_line, ptr %p33, align 8, !dbg !4043, !tbaa !4027
  %s34 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 1, !dbg !4043
  store ptr @__pyx_k_NULL_argument_on_line, ptr %s34, align 8, !dbg !4043, !tbaa !4029
  %n35 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 2, !dbg !4043
  store i64 23, ptr %n35, align 8, !dbg !4043, !tbaa !4030
  %encoding36 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 3, !dbg !4043
  store ptr null, ptr %encoding36, align 8, !dbg !4043, !tbaa !4031
  %is_unicode37 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 4, !dbg !4043
  store i8 1, ptr %is_unicode37, align 8, !dbg !4043, !tbaa !4032
  %is_str38 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 5, !dbg !4043
  store i8 0, ptr %is_str38, align 1, !dbg !4043, !tbaa !4033
  %intern39 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i32 0, i32 6, !dbg !4043
  store i8 0, ptr %intern39, align 2, !dbg !4043, !tbaa !4034
  %arrayinit.element40 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element32, i64 1, !dbg !4024
  %p41 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 0, !dbg !4045
  %6 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4046, !tbaa !1461
  %__pyx_kp_u_REFNANNY = getelementptr inbounds %struct.__pyx_mstate, ptr %6, i32 0, i32 14, !dbg !4046
  store ptr %__pyx_kp_u_REFNANNY, ptr %p41, align 8, !dbg !4045, !tbaa !4027
  %s42 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 1, !dbg !4045
  store ptr @__pyx_k_REFNANNY, ptr %s42, align 8, !dbg !4045, !tbaa !4029
  %n43 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 2, !dbg !4045
  store i64 11, ptr %n43, align 8, !dbg !4045, !tbaa !4030
  %encoding44 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 3, !dbg !4045
  store ptr null, ptr %encoding44, align 8, !dbg !4045, !tbaa !4031
  %is_unicode45 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 4, !dbg !4045
  store i8 1, ptr %is_unicode45, align 8, !dbg !4045, !tbaa !4032
  %is_str46 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 5, !dbg !4045
  store i8 0, ptr %is_str46, align 1, !dbg !4045, !tbaa !4033
  %intern47 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i32 0, i32 6, !dbg !4045
  store i8 0, ptr %intern47, align 2, !dbg !4045, !tbaa !4034
  %arrayinit.element48 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element40, i64 1, !dbg !4024
  %p49 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 0, !dbg !4047
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4048, !tbaa !1461
  %__pyx_n_s_RefNannyAPI = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 15, !dbg !4048
  store ptr %__pyx_n_s_RefNannyAPI, ptr %p49, align 8, !dbg !4047, !tbaa !4027
  %s50 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 1, !dbg !4047
  store ptr @__pyx_k_RefNannyAPI, ptr %s50, align 8, !dbg !4047, !tbaa !4029
  %n51 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 2, !dbg !4047
  store i64 12, ptr %n51, align 8, !dbg !4047, !tbaa !4030
  %encoding52 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 3, !dbg !4047
  store ptr null, ptr %encoding52, align 8, !dbg !4047, !tbaa !4031
  %is_unicode53 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 4, !dbg !4047
  store i8 0, ptr %is_unicode53, align 8, !dbg !4047, !tbaa !4032
  %is_str54 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 5, !dbg !4047
  store i8 1, ptr %is_str54, align 1, !dbg !4047, !tbaa !4033
  %intern55 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i32 0, i32 6, !dbg !4047
  store i8 1, ptr %intern55, align 2, !dbg !4047, !tbaa !4034
  %arrayinit.element56 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element48, i64 1, !dbg !4024
  %p57 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 0, !dbg !4049
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4050, !tbaa !1461
  %__pyx_kp_u_References_leaked = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 16, !dbg !4050
  store ptr %__pyx_kp_u_References_leaked, ptr %p57, align 8, !dbg !4049, !tbaa !4027
  %s58 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 1, !dbg !4049
  store ptr @__pyx_k_References_leaked, ptr %s58, align 8, !dbg !4049, !tbaa !4029
  %n59 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 2, !dbg !4049
  store i64 19, ptr %n59, align 8, !dbg !4049, !tbaa !4030
  %encoding60 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 3, !dbg !4049
  store ptr null, ptr %encoding60, align 8, !dbg !4049, !tbaa !4031
  %is_unicode61 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 4, !dbg !4049
  store i8 1, ptr %is_unicode61, align 8, !dbg !4049, !tbaa !4032
  %is_str62 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 5, !dbg !4049
  store i8 0, ptr %is_str62, align 1, !dbg !4049, !tbaa !4033
  %intern63 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i32 0, i32 6, !dbg !4049
  store i8 0, ptr %intern63, align 2, !dbg !4049, !tbaa !4034
  %arrayinit.element64 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element56, i64 1, !dbg !4024
  %p65 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 0, !dbg !4051
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4052, !tbaa !1461
  %__pyx_kp_u_Too_many_decrefs_on_line = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 17, !dbg !4052
  store ptr %__pyx_kp_u_Too_many_decrefs_on_line, ptr %p65, align 8, !dbg !4051, !tbaa !4027
  %s66 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 1, !dbg !4051
  store ptr @__pyx_k_Too_many_decrefs_on_line, ptr %s66, align 8, !dbg !4051, !tbaa !4029
  %n67 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 2, !dbg !4051
  store i64 26, ptr %n67, align 8, !dbg !4051, !tbaa !4030
  %encoding68 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 3, !dbg !4051
  store ptr null, ptr %encoding68, align 8, !dbg !4051, !tbaa !4031
  %is_unicode69 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 4, !dbg !4051
  store i8 1, ptr %is_unicode69, align 8, !dbg !4051, !tbaa !4032
  %is_str70 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 5, !dbg !4051
  store i8 0, ptr %is_str70, align 1, !dbg !4051, !tbaa !4033
  %intern71 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i32 0, i32 6, !dbg !4051
  store i8 0, ptr %intern71, align 2, !dbg !4051, !tbaa !4034
  %arrayinit.element72 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element64, i64 1, !dbg !4024
  %p73 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 0, !dbg !4053
  %10 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4054, !tbaa !1461
  %__pyx_kp_u__2 = getelementptr inbounds %struct.__pyx_mstate, ptr %10, i32 0, i32 18, !dbg !4054
  store ptr %__pyx_kp_u__2, ptr %p73, align 8, !dbg !4053, !tbaa !4027
  %s74 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 1, !dbg !4053
  store ptr @__pyx_k__2, ptr %s74, align 8, !dbg !4053, !tbaa !4029
  %n75 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 2, !dbg !4053
  store i64 3, ptr %n75, align 8, !dbg !4053, !tbaa !4030
  %encoding76 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 3, !dbg !4053
  store ptr null, ptr %encoding76, align 8, !dbg !4053, !tbaa !4031
  %is_unicode77 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 4, !dbg !4053
  store i8 1, ptr %is_unicode77, align 8, !dbg !4053, !tbaa !4032
  %is_str78 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 5, !dbg !4053
  store i8 0, ptr %is_str78, align 1, !dbg !4053, !tbaa !4033
  %intern79 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i32 0, i32 6, !dbg !4053
  store i8 0, ptr %intern79, align 2, !dbg !4053, !tbaa !4034
  %arrayinit.element80 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element72, i64 1, !dbg !4024
  %p81 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 0, !dbg !4055
  %11 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4056, !tbaa !1461
  %__pyx_kp_u__3 = getelementptr inbounds %struct.__pyx_mstate, ptr %11, i32 0, i32 19, !dbg !4056
  store ptr %__pyx_kp_u__3, ptr %p81, align 8, !dbg !4055, !tbaa !4027
  %s82 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 1, !dbg !4055
  store ptr @__pyx_k__3, ptr %s82, align 8, !dbg !4055, !tbaa !4029
  %n83 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 2, !dbg !4055
  store i64 2, ptr %n83, align 8, !dbg !4055, !tbaa !4030
  %encoding84 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 3, !dbg !4055
  store ptr null, ptr %encoding84, align 8, !dbg !4055, !tbaa !4031
  %is_unicode85 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 4, !dbg !4055
  store i8 1, ptr %is_unicode85, align 8, !dbg !4055, !tbaa !4032
  %is_str86 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 5, !dbg !4055
  store i8 0, ptr %is_str86, align 1, !dbg !4055, !tbaa !4033
  %intern87 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i32 0, i32 6, !dbg !4055
  store i8 0, ptr %intern87, align 2, !dbg !4055, !tbaa !4034
  %arrayinit.element88 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element80, i64 1, !dbg !4024
  %p89 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 0, !dbg !4057
  %12 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4058, !tbaa !1461
  %__pyx_n_s__4 = getelementptr inbounds %struct.__pyx_mstate, ptr %12, i32 0, i32 20, !dbg !4058
  store ptr %__pyx_n_s__4, ptr %p89, align 8, !dbg !4057, !tbaa !4027
  %s90 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 1, !dbg !4057
  store ptr @__pyx_k__4, ptr %s90, align 8, !dbg !4057, !tbaa !4029
  %n91 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 2, !dbg !4057
  store i64 2, ptr %n91, align 8, !dbg !4057, !tbaa !4030
  %encoding92 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 3, !dbg !4057
  store ptr null, ptr %encoding92, align 8, !dbg !4057, !tbaa !4031
  %is_unicode93 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 4, !dbg !4057
  store i8 0, ptr %is_unicode93, align 8, !dbg !4057, !tbaa !4032
  %is_str94 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 5, !dbg !4057
  store i8 1, ptr %is_str94, align 1, !dbg !4057, !tbaa !4033
  %intern95 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i32 0, i32 6, !dbg !4057
  store i8 1, ptr %intern95, align 2, !dbg !4057, !tbaa !4034
  %arrayinit.element96 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element88, i64 1, !dbg !4024
  %p97 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 0, !dbg !4059
  %13 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4060, !tbaa !1461
  %__pyx_kp_u__5 = getelementptr inbounds %struct.__pyx_mstate, ptr %13, i32 0, i32 21, !dbg !4060
  store ptr %__pyx_kp_u__5, ptr %p97, align 8, !dbg !4059, !tbaa !4027
  %s98 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 1, !dbg !4059
  store ptr @__pyx_k__5, ptr %s98, align 8, !dbg !4059, !tbaa !4029
  %n99 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 2, !dbg !4059
  store i64 2, ptr %n99, align 8, !dbg !4059, !tbaa !4030
  %encoding100 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 3, !dbg !4059
  store ptr null, ptr %encoding100, align 8, !dbg !4059, !tbaa !4031
  %is_unicode101 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 4, !dbg !4059
  store i8 1, ptr %is_unicode101, align 8, !dbg !4059, !tbaa !4032
  %is_str102 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 5, !dbg !4059
  store i8 0, ptr %is_str102, align 1, !dbg !4059, !tbaa !4033
  %intern103 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i32 0, i32 6, !dbg !4059
  store i8 0, ptr %intern103, align 2, !dbg !4059, !tbaa !4034
  %arrayinit.element104 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element96, i64 1, !dbg !4024
  %p105 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 0, !dbg !4061
  %14 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4062, !tbaa !1461
  %__pyx_kp_u__6 = getelementptr inbounds %struct.__pyx_mstate, ptr %14, i32 0, i32 22, !dbg !4062
  store ptr %__pyx_kp_u__6, ptr %p105, align 8, !dbg !4061, !tbaa !4027
  %s106 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 1, !dbg !4061
  store ptr @__pyx_k__6, ptr %s106, align 8, !dbg !4061, !tbaa !4029
  %n107 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 2, !dbg !4061
  store i64 3, ptr %n107, align 8, !dbg !4061, !tbaa !4030
  %encoding108 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 3, !dbg !4061
  store ptr null, ptr %encoding108, align 8, !dbg !4061, !tbaa !4031
  %is_unicode109 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 4, !dbg !4061
  store i8 1, ptr %is_unicode109, align 8, !dbg !4061, !tbaa !4032
  %is_str110 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 5, !dbg !4061
  store i8 0, ptr %is_str110, align 1, !dbg !4061, !tbaa !4033
  %intern111 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i32 0, i32 6, !dbg !4061
  store i8 0, ptr %intern111, align 2, !dbg !4061, !tbaa !4034
  %arrayinit.element112 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element104, i64 1, !dbg !4024
  %p113 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 0, !dbg !4063
  %15 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4064, !tbaa !1461
  %__pyx_kp_u__7 = getelementptr inbounds %struct.__pyx_mstate, ptr %15, i32 0, i32 23, !dbg !4064
  store ptr %__pyx_kp_u__7, ptr %p113, align 8, !dbg !4063, !tbaa !4027
  %s114 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 1, !dbg !4063
  store ptr @__pyx_k__7, ptr %s114, align 8, !dbg !4063, !tbaa !4029
  %n115 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 2, !dbg !4063
  store i64 3, ptr %n115, align 8, !dbg !4063, !tbaa !4030
  %encoding116 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 3, !dbg !4063
  store ptr null, ptr %encoding116, align 8, !dbg !4063, !tbaa !4031
  %is_unicode117 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 4, !dbg !4063
  store i8 1, ptr %is_unicode117, align 8, !dbg !4063, !tbaa !4032
  %is_str118 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 5, !dbg !4063
  store i8 0, ptr %is_str118, align 1, !dbg !4063, !tbaa !4033
  %intern119 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i32 0, i32 6, !dbg !4063
  store i8 0, ptr %intern119, align 2, !dbg !4063, !tbaa !4034
  %arrayinit.element120 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element112, i64 1, !dbg !4024
  %p121 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 0, !dbg !4065
  %16 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4066, !tbaa !1461
  %__pyx_n_s__9 = getelementptr inbounds %struct.__pyx_mstate, ptr %16, i32 0, i32 24, !dbg !4066
  store ptr %__pyx_n_s__9, ptr %p121, align 8, !dbg !4065, !tbaa !4027
  %s122 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 1, !dbg !4065
  store ptr @__pyx_k__9, ptr %s122, align 8, !dbg !4065, !tbaa !4029
  %n123 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 2, !dbg !4065
  store i64 2, ptr %n123, align 8, !dbg !4065, !tbaa !4030
  %encoding124 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 3, !dbg !4065
  store ptr null, ptr %encoding124, align 8, !dbg !4065, !tbaa !4031
  %is_unicode125 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 4, !dbg !4065
  store i8 0, ptr %is_unicode125, align 8, !dbg !4065, !tbaa !4032
  %is_str126 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 5, !dbg !4065
  store i8 1, ptr %is_str126, align 1, !dbg !4065, !tbaa !4033
  %intern127 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i32 0, i32 6, !dbg !4065
  store i8 1, ptr %intern127, align 2, !dbg !4065, !tbaa !4034
  %arrayinit.element128 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element120, i64 1, !dbg !4024
  %p129 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 0, !dbg !4067
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4068, !tbaa !1461
  %__pyx_kp_u_acquired_on_lines = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 25, !dbg !4068
  store ptr %__pyx_kp_u_acquired_on_lines, ptr %p129, align 8, !dbg !4067, !tbaa !4027
  %s130 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 1, !dbg !4067
  store ptr @__pyx_k_acquired_on_lines, ptr %s130, align 8, !dbg !4067, !tbaa !4029
  %n131 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 2, !dbg !4067
  store i64 22, ptr %n131, align 8, !dbg !4067, !tbaa !4030
  %encoding132 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 3, !dbg !4067
  store ptr null, ptr %encoding132, align 8, !dbg !4067, !tbaa !4031
  %is_unicode133 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 4, !dbg !4067
  store i8 1, ptr %is_unicode133, align 8, !dbg !4067, !tbaa !4032
  %is_str134 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 5, !dbg !4067
  store i8 0, ptr %is_str134, align 1, !dbg !4067, !tbaa !4033
  %intern135 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i32 0, i32 6, !dbg !4067
  store i8 0, ptr %intern135, align 2, !dbg !4067, !tbaa !4034
  %arrayinit.element136 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element128, i64 1, !dbg !4024
  %p137 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 0, !dbg !4069
  %18 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4070, !tbaa !1461
  %__pyx_n_s_append = getelementptr inbounds %struct.__pyx_mstate, ptr %18, i32 0, i32 26, !dbg !4070
  store ptr %__pyx_n_s_append, ptr %p137, align 8, !dbg !4069, !tbaa !4027
  %s138 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 1, !dbg !4069
  store ptr @__pyx_k_append, ptr %s138, align 8, !dbg !4069, !tbaa !4029
  %n139 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 2, !dbg !4069
  store i64 7, ptr %n139, align 8, !dbg !4069, !tbaa !4030
  %encoding140 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 3, !dbg !4069
  store ptr null, ptr %encoding140, align 8, !dbg !4069, !tbaa !4031
  %is_unicode141 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 4, !dbg !4069
  store i8 0, ptr %is_unicode141, align 8, !dbg !4069, !tbaa !4032
  %is_str142 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 5, !dbg !4069
  store i8 1, ptr %is_str142, align 1, !dbg !4069, !tbaa !4033
  %intern143 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i32 0, i32 6, !dbg !4069
  store i8 1, ptr %intern143, align 2, !dbg !4069, !tbaa !4034
  %arrayinit.element144 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element136, i64 1, !dbg !4024
  %p145 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 0, !dbg !4071
  %19 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4072, !tbaa !1461
  %__pyx_n_s_cline_in_traceback = getelementptr inbounds %struct.__pyx_mstate, ptr %19, i32 0, i32 27, !dbg !4072
  store ptr %__pyx_n_s_cline_in_traceback, ptr %p145, align 8, !dbg !4071, !tbaa !4027
  %s146 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 1, !dbg !4071
  store ptr @__pyx_k_cline_in_traceback, ptr %s146, align 8, !dbg !4071, !tbaa !4029
  %n147 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 2, !dbg !4071
  store i64 19, ptr %n147, align 8, !dbg !4071, !tbaa !4030
  %encoding148 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 3, !dbg !4071
  store ptr null, ptr %encoding148, align 8, !dbg !4071, !tbaa !4031
  %is_unicode149 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 4, !dbg !4071
  store i8 0, ptr %is_unicode149, align 8, !dbg !4071, !tbaa !4032
  %is_str150 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 5, !dbg !4071
  store i8 1, ptr %is_str150, align 1, !dbg !4071, !tbaa !4033
  %intern151 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i32 0, i32 6, !dbg !4071
  store i8 1, ptr %intern151, align 2, !dbg !4071, !tbaa !4034
  %arrayinit.element152 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element144, i64 1, !dbg !4024
  %p153 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 0, !dbg !4073
  %20 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4074, !tbaa !1461
  %__pyx_n_s_decode = getelementptr inbounds %struct.__pyx_mstate, ptr %20, i32 0, i32 28, !dbg !4074
  store ptr %__pyx_n_s_decode, ptr %p153, align 8, !dbg !4073, !tbaa !4027
  %s154 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 1, !dbg !4073
  store ptr @__pyx_k_decode, ptr %s154, align 8, !dbg !4073, !tbaa !4029
  %n155 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 2, !dbg !4073
  store i64 7, ptr %n155, align 8, !dbg !4073, !tbaa !4030
  %encoding156 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 3, !dbg !4073
  store ptr null, ptr %encoding156, align 8, !dbg !4073, !tbaa !4031
  %is_unicode157 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 4, !dbg !4073
  store i8 0, ptr %is_unicode157, align 8, !dbg !4073, !tbaa !4032
  %is_str158 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 5, !dbg !4073
  store i8 1, ptr %is_str158, align 1, !dbg !4073, !tbaa !4033
  %intern159 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i32 0, i32 6, !dbg !4073
  store i8 1, ptr %intern159, align 2, !dbg !4073, !tbaa !4034
  %arrayinit.element160 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element152, i64 1, !dbg !4024
  %p161 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 0, !dbg !4075
  %21 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4076, !tbaa !1461
  %__pyx_n_u_delref = getelementptr inbounds %struct.__pyx_mstate, ptr %21, i32 0, i32 29, !dbg !4076
  store ptr %__pyx_n_u_delref, ptr %p161, align 8, !dbg !4075, !tbaa !4027
  %s162 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 1, !dbg !4075
  store ptr @__pyx_k_delref, ptr %s162, align 8, !dbg !4075, !tbaa !4029
  %n163 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 2, !dbg !4075
  store i64 7, ptr %n163, align 8, !dbg !4075, !tbaa !4030
  %encoding164 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 3, !dbg !4075
  store ptr null, ptr %encoding164, align 8, !dbg !4075, !tbaa !4031
  %is_unicode165 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 4, !dbg !4075
  store i8 1, ptr %is_unicode165, align 8, !dbg !4075, !tbaa !4032
  %is_str166 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 5, !dbg !4075
  store i8 0, ptr %is_str166, align 1, !dbg !4075, !tbaa !4033
  %intern167 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i32 0, i32 6, !dbg !4075
  store i8 1, ptr %intern167, align 2, !dbg !4075, !tbaa !4034
  %arrayinit.element168 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element160, i64 1, !dbg !4024
  %p169 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 0, !dbg !4077
  %22 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4078, !tbaa !1461
  %__pyx_kp_u_disable = getelementptr inbounds %struct.__pyx_mstate, ptr %22, i32 0, i32 30, !dbg !4078
  store ptr %__pyx_kp_u_disable, ptr %p169, align 8, !dbg !4077, !tbaa !4027
  %s170 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 1, !dbg !4077
  store ptr @__pyx_k_disable, ptr %s170, align 8, !dbg !4077, !tbaa !4029
  %n171 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 2, !dbg !4077
  store i64 8, ptr %n171, align 8, !dbg !4077, !tbaa !4030
  %encoding172 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 3, !dbg !4077
  store ptr null, ptr %encoding172, align 8, !dbg !4077, !tbaa !4031
  %is_unicode173 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 4, !dbg !4077
  store i8 1, ptr %is_unicode173, align 8, !dbg !4077, !tbaa !4032
  %is_str174 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 5, !dbg !4077
  store i8 0, ptr %is_str174, align 1, !dbg !4077, !tbaa !4033
  %intern175 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i32 0, i32 6, !dbg !4077
  store i8 0, ptr %intern175, align 2, !dbg !4077, !tbaa !4034
  %arrayinit.element176 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element168, i64 1, !dbg !4024
  %p177 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 0, !dbg !4079
  %23 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4080, !tbaa !1461
  %__pyx_kp_u_enable = getelementptr inbounds %struct.__pyx_mstate, ptr %23, i32 0, i32 31, !dbg !4080
  store ptr %__pyx_kp_u_enable, ptr %p177, align 8, !dbg !4079, !tbaa !4027
  %s178 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 1, !dbg !4079
  store ptr @__pyx_k_enable, ptr %s178, align 8, !dbg !4079, !tbaa !4029
  %n179 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 2, !dbg !4079
  store i64 7, ptr %n179, align 8, !dbg !4079, !tbaa !4030
  %encoding180 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 3, !dbg !4079
  store ptr null, ptr %encoding180, align 8, !dbg !4079, !tbaa !4031
  %is_unicode181 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 4, !dbg !4079
  store i8 1, ptr %is_unicode181, align 8, !dbg !4079, !tbaa !4032
  %is_str182 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 5, !dbg !4079
  store i8 0, ptr %is_str182, align 1, !dbg !4079, !tbaa !4033
  %intern183 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i32 0, i32 6, !dbg !4079
  store i8 0, ptr %intern183, align 2, !dbg !4079, !tbaa !4034
  %arrayinit.element184 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element176, i64 1, !dbg !4024
  %p185 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 0, !dbg !4081
  %24 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4082, !tbaa !1461
  %__pyx_n_s_exc_info = getelementptr inbounds %struct.__pyx_mstate, ptr %24, i32 0, i32 32, !dbg !4082
  store ptr %__pyx_n_s_exc_info, ptr %p185, align 8, !dbg !4081, !tbaa !4027
  %s186 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 1, !dbg !4081
  store ptr @__pyx_k_exc_info, ptr %s186, align 8, !dbg !4081, !tbaa !4029
  %n187 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 2, !dbg !4081
  store i64 9, ptr %n187, align 8, !dbg !4081, !tbaa !4030
  %encoding188 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 3, !dbg !4081
  store ptr null, ptr %encoding188, align 8, !dbg !4081, !tbaa !4031
  %is_unicode189 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 4, !dbg !4081
  store i8 0, ptr %is_unicode189, align 8, !dbg !4081, !tbaa !4032
  %is_str190 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 5, !dbg !4081
  store i8 1, ptr %is_str190, align 1, !dbg !4081, !tbaa !4033
  %intern191 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i32 0, i32 6, !dbg !4081
  store i8 1, ptr %intern191, align 2, !dbg !4081, !tbaa !4034
  %arrayinit.element192 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element184, i64 1, !dbg !4024
  %p193 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 0, !dbg !4083
  %25 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4084, !tbaa !1461
  %__pyx_n_s_filename = getelementptr inbounds %struct.__pyx_mstate, ptr %25, i32 0, i32 33, !dbg !4084
  store ptr %__pyx_n_s_filename, ptr %p193, align 8, !dbg !4083, !tbaa !4027
  %s194 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 1, !dbg !4083
  store ptr @__pyx_k_filename, ptr %s194, align 8, !dbg !4083, !tbaa !4029
  %n195 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 2, !dbg !4083
  store i64 9, ptr %n195, align 8, !dbg !4083, !tbaa !4030
  %encoding196 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 3, !dbg !4083
  store ptr null, ptr %encoding196, align 8, !dbg !4083, !tbaa !4031
  %is_unicode197 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 4, !dbg !4083
  store i8 0, ptr %is_unicode197, align 8, !dbg !4083, !tbaa !4032
  %is_str198 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 5, !dbg !4083
  store i8 1, ptr %is_str198, align 1, !dbg !4083, !tbaa !4033
  %intern199 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i32 0, i32 6, !dbg !4083
  store i8 1, ptr %intern199, align 2, !dbg !4083, !tbaa !4034
  %arrayinit.element200 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element192, i64 1, !dbg !4024
  %p201 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 0, !dbg !4085
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4086, !tbaa !1461
  %__pyx_kp_u_gc = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 34, !dbg !4086
  store ptr %__pyx_kp_u_gc, ptr %p201, align 8, !dbg !4085, !tbaa !4027
  %s202 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 1, !dbg !4085
  store ptr @__pyx_k_gc, ptr %s202, align 8, !dbg !4085, !tbaa !4029
  %n203 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 2, !dbg !4085
  store i64 3, ptr %n203, align 8, !dbg !4085, !tbaa !4030
  %encoding204 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 3, !dbg !4085
  store ptr null, ptr %encoding204, align 8, !dbg !4085, !tbaa !4031
  %is_unicode205 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 4, !dbg !4085
  store i8 1, ptr %is_unicode205, align 8, !dbg !4085, !tbaa !4032
  %is_str206 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 5, !dbg !4085
  store i8 0, ptr %is_str206, align 1, !dbg !4085, !tbaa !4033
  %intern207 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i32 0, i32 6, !dbg !4085
  store i8 0, ptr %intern207, align 2, !dbg !4085, !tbaa !4034
  %arrayinit.element208 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element200, i64 1, !dbg !4024
  %p209 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 0, !dbg !4087
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4088, !tbaa !1461
  %__pyx_n_s_get = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 35, !dbg !4088
  store ptr %__pyx_n_s_get, ptr %p209, align 8, !dbg !4087, !tbaa !4027
  %s210 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 1, !dbg !4087
  store ptr @__pyx_k_get, ptr %s210, align 8, !dbg !4087, !tbaa !4029
  %n211 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 2, !dbg !4087
  store i64 4, ptr %n211, align 8, !dbg !4087, !tbaa !4030
  %encoding212 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 3, !dbg !4087
  store ptr null, ptr %encoding212, align 8, !dbg !4087, !tbaa !4031
  %is_unicode213 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 4, !dbg !4087
  store i8 0, ptr %is_unicode213, align 8, !dbg !4087, !tbaa !4032
  %is_str214 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 5, !dbg !4087
  store i8 1, ptr %is_str214, align 1, !dbg !4087, !tbaa !4033
  %intern215 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i32 0, i32 6, !dbg !4087
  store i8 1, ptr %intern215, align 2, !dbg !4087, !tbaa !4034
  %arrayinit.element216 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element208, i64 1, !dbg !4024
  %p217 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 0, !dbg !4089
  %28 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4090, !tbaa !1461
  %__pyx_n_s_id = getelementptr inbounds %struct.__pyx_mstate, ptr %28, i32 0, i32 36, !dbg !4090
  store ptr %__pyx_n_s_id, ptr %p217, align 8, !dbg !4089, !tbaa !4027
  %s218 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 1, !dbg !4089
  store ptr @__pyx_k_id, ptr %s218, align 8, !dbg !4089, !tbaa !4029
  %n219 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 2, !dbg !4089
  store i64 3, ptr %n219, align 8, !dbg !4089, !tbaa !4030
  %encoding220 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 3, !dbg !4089
  store ptr null, ptr %encoding220, align 8, !dbg !4089, !tbaa !4031
  %is_unicode221 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 4, !dbg !4089
  store i8 0, ptr %is_unicode221, align 8, !dbg !4089, !tbaa !4032
  %is_str222 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 5, !dbg !4089
  store i8 1, ptr %is_str222, align 1, !dbg !4089, !tbaa !4033
  %intern223 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i32 0, i32 6, !dbg !4089
  store i8 1, ptr %intern223, align 2, !dbg !4089, !tbaa !4034
  %arrayinit.element224 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element216, i64 1, !dbg !4024
  %p225 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 0, !dbg !4091
  %29 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4092, !tbaa !1461
  %__pyx_n_s_import = getelementptr inbounds %struct.__pyx_mstate, ptr %29, i32 0, i32 37, !dbg !4092
  store ptr %__pyx_n_s_import, ptr %p225, align 8, !dbg !4091, !tbaa !4027
  %s226 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 1, !dbg !4091
  store ptr @__pyx_k_import, ptr %s226, align 8, !dbg !4091, !tbaa !4029
  %n227 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 2, !dbg !4091
  store i64 11, ptr %n227, align 8, !dbg !4091, !tbaa !4030
  %encoding228 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 3, !dbg !4091
  store ptr null, ptr %encoding228, align 8, !dbg !4091, !tbaa !4031
  %is_unicode229 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 4, !dbg !4091
  store i8 0, ptr %is_unicode229, align 8, !dbg !4091, !tbaa !4032
  %is_str230 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 5, !dbg !4091
  store i8 1, ptr %is_str230, align 1, !dbg !4091, !tbaa !4033
  %intern231 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i32 0, i32 6, !dbg !4091
  store i8 1, ptr %intern231, align 2, !dbg !4091, !tbaa !4034
  %arrayinit.element232 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element224, i64 1, !dbg !4024
  %p233 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 0, !dbg !4093
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4094, !tbaa !1461
  %__pyx_n_s_initializing = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 38, !dbg !4094
  store ptr %__pyx_n_s_initializing, ptr %p233, align 8, !dbg !4093, !tbaa !4027
  %s234 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 1, !dbg !4093
  store ptr @__pyx_k_initializing, ptr %s234, align 8, !dbg !4093, !tbaa !4029
  %n235 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 2, !dbg !4093
  store i64 14, ptr %n235, align 8, !dbg !4093, !tbaa !4030
  %encoding236 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 3, !dbg !4093
  store ptr null, ptr %encoding236, align 8, !dbg !4093, !tbaa !4031
  %is_unicode237 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 4, !dbg !4093
  store i8 0, ptr %is_unicode237, align 8, !dbg !4093, !tbaa !4032
  %is_str238 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 5, !dbg !4093
  store i8 1, ptr %is_str238, align 1, !dbg !4093, !tbaa !4033
  %intern239 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i32 0, i32 6, !dbg !4093
  store i8 1, ptr %intern239, align 2, !dbg !4093, !tbaa !4034
  %arrayinit.element240 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element232, i64 1, !dbg !4024
  %p241 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 0, !dbg !4095
  %31 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4096, !tbaa !1461
  %__pyx_kp_u_isenabled = getelementptr inbounds %struct.__pyx_mstate, ptr %31, i32 0, i32 39, !dbg !4096
  store ptr %__pyx_kp_u_isenabled, ptr %p241, align 8, !dbg !4095, !tbaa !4027
  %s242 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 1, !dbg !4095
  store ptr @__pyx_k_isenabled, ptr %s242, align 8, !dbg !4095, !tbaa !4029
  %n243 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 2, !dbg !4095
  store i64 10, ptr %n243, align 8, !dbg !4095, !tbaa !4030
  %encoding244 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 3, !dbg !4095
  store ptr null, ptr %encoding244, align 8, !dbg !4095, !tbaa !4031
  %is_unicode245 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 4, !dbg !4095
  store i8 1, ptr %is_unicode245, align 8, !dbg !4095, !tbaa !4032
  %is_str246 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 5, !dbg !4095
  store i8 0, ptr %is_str246, align 1, !dbg !4095, !tbaa !4033
  %intern247 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i32 0, i32 6, !dbg !4095
  store i8 0, ptr %intern247, align 2, !dbg !4095, !tbaa !4034
  %arrayinit.element248 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element240, i64 1, !dbg !4024
  %p249 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 0, !dbg !4097
  %32 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4098, !tbaa !1461
  %__pyx_n_s_itervalues = getelementptr inbounds %struct.__pyx_mstate, ptr %32, i32 0, i32 40, !dbg !4098
  store ptr %__pyx_n_s_itervalues, ptr %p249, align 8, !dbg !4097, !tbaa !4027
  %s250 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 1, !dbg !4097
  store ptr @__pyx_k_itervalues, ptr %s250, align 8, !dbg !4097, !tbaa !4029
  %n251 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 2, !dbg !4097
  store i64 11, ptr %n251, align 8, !dbg !4097, !tbaa !4030
  %encoding252 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 3, !dbg !4097
  store ptr null, ptr %encoding252, align 8, !dbg !4097, !tbaa !4031
  %is_unicode253 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 4, !dbg !4097
  store i8 0, ptr %is_unicode253, align 8, !dbg !4097, !tbaa !4032
  %is_str254 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 5, !dbg !4097
  store i8 1, ptr %is_str254, align 1, !dbg !4097, !tbaa !4033
  %intern255 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i32 0, i32 6, !dbg !4097
  store i8 1, ptr %intern255, align 2, !dbg !4097, !tbaa !4034
  %arrayinit.element256 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element248, i64 1, !dbg !4024
  %p257 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 0, !dbg !4099
  %33 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4100, !tbaa !1461
  %__pyx_n_u_latin1 = getelementptr inbounds %struct.__pyx_mstate, ptr %33, i32 0, i32 41, !dbg !4100
  store ptr %__pyx_n_u_latin1, ptr %p257, align 8, !dbg !4099, !tbaa !4027
  %s258 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 1, !dbg !4099
  store ptr @__pyx_k_latin1, ptr %s258, align 8, !dbg !4099, !tbaa !4029
  %n259 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 2, !dbg !4099
  store i64 7, ptr %n259, align 8, !dbg !4099, !tbaa !4030
  %encoding260 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 3, !dbg !4099
  store ptr null, ptr %encoding260, align 8, !dbg !4099, !tbaa !4031
  %is_unicode261 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 4, !dbg !4099
  store i8 1, ptr %is_unicode261, align 8, !dbg !4099, !tbaa !4032
  %is_str262 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 5, !dbg !4099
  store i8 0, ptr %is_str262, align 1, !dbg !4099, !tbaa !4033
  %intern263 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i32 0, i32 6, !dbg !4099
  store i8 1, ptr %intern263, align 2, !dbg !4099, !tbaa !4034
  %arrayinit.element264 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element256, i64 1, !dbg !4024
  %p265 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 0, !dbg !4101
  %34 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4102, !tbaa !1461
  %__pyx_n_s_line = getelementptr inbounds %struct.__pyx_mstate, ptr %34, i32 0, i32 42, !dbg !4102
  store ptr %__pyx_n_s_line, ptr %p265, align 8, !dbg !4101, !tbaa !4027
  %s266 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 1, !dbg !4101
  store ptr @__pyx_k_line, ptr %s266, align 8, !dbg !4101, !tbaa !4029
  %n267 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 2, !dbg !4101
  store i64 5, ptr %n267, align 8, !dbg !4101, !tbaa !4030
  %encoding268 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 3, !dbg !4101
  store ptr null, ptr %encoding268, align 8, !dbg !4101, !tbaa !4031
  %is_unicode269 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 4, !dbg !4101
  store i8 0, ptr %is_unicode269, align 8, !dbg !4101, !tbaa !4032
  %is_str270 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 5, !dbg !4101
  store i8 1, ptr %is_str270, align 1, !dbg !4101, !tbaa !4033
  %intern271 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i32 0, i32 6, !dbg !4101
  store i8 1, ptr %intern271, align 2, !dbg !4101, !tbaa !4034
  %arrayinit.element272 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element264, i64 1, !dbg !4024
  %p273 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 0, !dbg !4103
  %35 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4104, !tbaa !1461
  %__pyx_n_s_loglevel = getelementptr inbounds %struct.__pyx_mstate, ptr %35, i32 0, i32 43, !dbg !4104
  store ptr %__pyx_n_s_loglevel, ptr %p273, align 8, !dbg !4103, !tbaa !4027
  %s274 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 1, !dbg !4103
  store ptr @__pyx_k_loglevel, ptr %s274, align 8, !dbg !4103, !tbaa !4029
  %n275 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 2, !dbg !4103
  store i64 9, ptr %n275, align 8, !dbg !4103, !tbaa !4030
  %encoding276 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 3, !dbg !4103
  store ptr null, ptr %encoding276, align 8, !dbg !4103, !tbaa !4031
  %is_unicode277 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 4, !dbg !4103
  store i8 0, ptr %is_unicode277, align 8, !dbg !4103, !tbaa !4032
  %is_str278 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 5, !dbg !4103
  store i8 1, ptr %is_str278, align 1, !dbg !4103, !tbaa !4033
  %intern279 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i32 0, i32 6, !dbg !4103
  store i8 1, ptr %intern279, align 2, !dbg !4103, !tbaa !4034
  %arrayinit.element280 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element272, i64 1, !dbg !4024
  %p281 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 0, !dbg !4105
  %36 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4106, !tbaa !1461
  %__pyx_n_s_main = getelementptr inbounds %struct.__pyx_mstate, ptr %36, i32 0, i32 44, !dbg !4106
  store ptr %__pyx_n_s_main, ptr %p281, align 8, !dbg !4105, !tbaa !4027
  %s282 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 1, !dbg !4105
  store ptr @__pyx_k_main, ptr %s282, align 8, !dbg !4105, !tbaa !4029
  %n283 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 2, !dbg !4105
  store i64 9, ptr %n283, align 8, !dbg !4105, !tbaa !4030
  %encoding284 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 3, !dbg !4105
  store ptr null, ptr %encoding284, align 8, !dbg !4105, !tbaa !4031
  %is_unicode285 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 4, !dbg !4105
  store i8 0, ptr %is_unicode285, align 8, !dbg !4105, !tbaa !4032
  %is_str286 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 5, !dbg !4105
  store i8 1, ptr %is_str286, align 1, !dbg !4105, !tbaa !4033
  %intern287 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i32 0, i32 6, !dbg !4105
  store i8 1, ptr %intern287, align 2, !dbg !4105, !tbaa !4034
  %arrayinit.element288 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element280, i64 1, !dbg !4024
  %p289 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 0, !dbg !4107
  %37 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4108, !tbaa !1461
  %__pyx_n_s_name = getelementptr inbounds %struct.__pyx_mstate, ptr %37, i32 0, i32 45, !dbg !4108
  store ptr %__pyx_n_s_name, ptr %p289, align 8, !dbg !4107, !tbaa !4027
  %s290 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 1, !dbg !4107
  store ptr @__pyx_k_name, ptr %s290, align 8, !dbg !4107, !tbaa !4029
  %n291 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 2, !dbg !4107
  store i64 5, ptr %n291, align 8, !dbg !4107, !tbaa !4030
  %encoding292 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 3, !dbg !4107
  store ptr null, ptr %encoding292, align 8, !dbg !4107, !tbaa !4031
  %is_unicode293 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 4, !dbg !4107
  store i8 0, ptr %is_unicode293, align 8, !dbg !4107, !tbaa !4032
  %is_str294 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 5, !dbg !4107
  store i8 1, ptr %is_str294, align 1, !dbg !4107, !tbaa !4033
  %intern295 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i32 0, i32 6, !dbg !4107
  store i8 1, ptr %intern295, align 2, !dbg !4107, !tbaa !4034
  %arrayinit.element296 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element288, i64 1, !dbg !4024
  %p297 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 0, !dbg !4109
  %38 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4110, !tbaa !1461
  %__pyx_n_s_name_2 = getelementptr inbounds %struct.__pyx_mstate, ptr %38, i32 0, i32 46, !dbg !4110
  store ptr %__pyx_n_s_name_2, ptr %p297, align 8, !dbg !4109, !tbaa !4027
  %s298 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 1, !dbg !4109
  store ptr @__pyx_k_name_2, ptr %s298, align 8, !dbg !4109, !tbaa !4029
  %n299 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 2, !dbg !4109
  store i64 9, ptr %n299, align 8, !dbg !4109, !tbaa !4030
  %encoding300 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 3, !dbg !4109
  store ptr null, ptr %encoding300, align 8, !dbg !4109, !tbaa !4031
  %is_unicode301 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 4, !dbg !4109
  store i8 0, ptr %is_unicode301, align 8, !dbg !4109, !tbaa !4032
  %is_str302 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 5, !dbg !4109
  store i8 1, ptr %is_str302, align 1, !dbg !4109, !tbaa !4033
  %intern303 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i32 0, i32 6, !dbg !4109
  store i8 1, ptr %intern303, align 2, !dbg !4109, !tbaa !4034
  %arrayinit.element304 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element296, i64 1, !dbg !4024
  %p305 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 0, !dbg !4111
  %39 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4112, !tbaa !1461
  %__pyx_n_s_print = getelementptr inbounds %struct.__pyx_mstate, ptr %39, i32 0, i32 47, !dbg !4112
  store ptr %__pyx_n_s_print, ptr %p305, align 8, !dbg !4111, !tbaa !4027
  %s306 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 1, !dbg !4111
  store ptr @__pyx_k_print, ptr %s306, align 8, !dbg !4111, !tbaa !4029
  %n307 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 2, !dbg !4111
  store i64 6, ptr %n307, align 8, !dbg !4111, !tbaa !4030
  %encoding308 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 3, !dbg !4111
  store ptr null, ptr %encoding308, align 8, !dbg !4111, !tbaa !4031
  %is_unicode309 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 4, !dbg !4111
  store i8 0, ptr %is_unicode309, align 8, !dbg !4111, !tbaa !4032
  %is_str310 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 5, !dbg !4111
  store i8 1, ptr %is_str310, align 1, !dbg !4111, !tbaa !4033
  %intern311 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i32 0, i32 6, !dbg !4111
  store i8 1, ptr %intern311, align 2, !dbg !4111, !tbaa !4034
  %arrayinit.element312 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element304, i64 1, !dbg !4024
  %p313 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 0, !dbg !4113
  %40 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4114, !tbaa !1461
  %__pyx_n_s_pyx_vtable = getelementptr inbounds %struct.__pyx_mstate, ptr %40, i32 0, i32 48, !dbg !4114
  store ptr %__pyx_n_s_pyx_vtable, ptr %p313, align 8, !dbg !4113, !tbaa !4027
  %s314 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 1, !dbg !4113
  store ptr @__pyx_k_pyx_vtable, ptr %s314, align 8, !dbg !4113, !tbaa !4029
  %n315 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 2, !dbg !4113
  store i64 15, ptr %n315, align 8, !dbg !4113, !tbaa !4030
  %encoding316 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 3, !dbg !4113
  store ptr null, ptr %encoding316, align 8, !dbg !4113, !tbaa !4031
  %is_unicode317 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 4, !dbg !4113
  store i8 0, ptr %is_unicode317, align 8, !dbg !4113, !tbaa !4032
  %is_str318 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 5, !dbg !4113
  store i8 1, ptr %is_str318, align 1, !dbg !4113, !tbaa !4033
  %intern319 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i32 0, i32 6, !dbg !4113
  store i8 1, ptr %intern319, align 2, !dbg !4113, !tbaa !4034
  %arrayinit.element320 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element312, i64 1, !dbg !4024
  %p321 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 0, !dbg !4115
  %41 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4116, !tbaa !1461
  %__pyx_n_s_range = getelementptr inbounds %struct.__pyx_mstate, ptr %41, i32 0, i32 49, !dbg !4116
  store ptr %__pyx_n_s_range, ptr %p321, align 8, !dbg !4115, !tbaa !4027
  %s322 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 1, !dbg !4115
  store ptr @__pyx_k_range, ptr %s322, align 8, !dbg !4115, !tbaa !4029
  %n323 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 2, !dbg !4115
  store i64 6, ptr %n323, align 8, !dbg !4115, !tbaa !4030
  %encoding324 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 3, !dbg !4115
  store ptr null, ptr %encoding324, align 8, !dbg !4115, !tbaa !4031
  %is_unicode325 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 4, !dbg !4115
  store i8 0, ptr %is_unicode325, align 8, !dbg !4115, !tbaa !4032
  %is_str326 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 5, !dbg !4115
  store i8 1, ptr %is_str326, align 1, !dbg !4115, !tbaa !4033
  %intern327 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i32 0, i32 6, !dbg !4115
  store i8 1, ptr %intern327, align 2, !dbg !4115, !tbaa !4034
  %arrayinit.element328 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element320, i64 1, !dbg !4024
  %p329 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 0, !dbg !4117
  %42 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4118, !tbaa !1461
  %__pyx_kp_u_reference_acquired_on_lines = getelementptr inbounds %struct.__pyx_mstate, ptr %42, i32 0, i32 50, !dbg !4118
  store ptr %__pyx_kp_u_reference_acquired_on_lines, ptr %p329, align 8, !dbg !4117, !tbaa !4027
  %s330 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 1, !dbg !4117
  store ptr @__pyx_k_reference_acquired_on_lines, ptr %s330, align 8, !dbg !4117, !tbaa !4029
  %n331 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 2, !dbg !4117
  store i64 31, ptr %n331, align 8, !dbg !4117, !tbaa !4030
  %encoding332 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 3, !dbg !4117
  store ptr null, ptr %encoding332, align 8, !dbg !4117, !tbaa !4031
  %is_unicode333 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 4, !dbg !4117
  store i8 1, ptr %is_unicode333, align 8, !dbg !4117, !tbaa !4032
  %is_str334 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 5, !dbg !4117
  store i8 0, ptr %is_str334, align 1, !dbg !4117, !tbaa !4033
  %intern335 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i32 0, i32 6, !dbg !4117
  store i8 0, ptr %intern335, align 2, !dbg !4117, !tbaa !4034
  %arrayinit.element336 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element328, i64 1, !dbg !4024
  %p337 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 0, !dbg !4119
  %43 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4120, !tbaa !1461
  %__pyx_n_s_reflog = getelementptr inbounds %struct.__pyx_mstate, ptr %43, i32 0, i32 51, !dbg !4120
  store ptr %__pyx_n_s_reflog, ptr %p337, align 8, !dbg !4119, !tbaa !4027
  %s338 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 1, !dbg !4119
  store ptr @__pyx_k_reflog, ptr %s338, align 8, !dbg !4119, !tbaa !4029
  %n339 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 2, !dbg !4119
  store i64 7, ptr %n339, align 8, !dbg !4119, !tbaa !4030
  %encoding340 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 3, !dbg !4119
  store ptr null, ptr %encoding340, align 8, !dbg !4119, !tbaa !4031
  %is_unicode341 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 4, !dbg !4119
  store i8 0, ptr %is_unicode341, align 8, !dbg !4119, !tbaa !4032
  %is_str342 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 5, !dbg !4119
  store i8 1, ptr %is_str342, align 1, !dbg !4119, !tbaa !4033
  %intern343 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i32 0, i32 6, !dbg !4119
  store i8 1, ptr %intern343, align 2, !dbg !4119, !tbaa !4034
  %arrayinit.element344 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element336, i64 1, !dbg !4024
  %p345 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 0, !dbg !4121
  %44 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4122, !tbaa !1461
  %__pyx_kp_u_refnanny_raised_an_exception_fro = getelementptr inbounds %struct.__pyx_mstate, ptr %44, i32 0, i32 52, !dbg !4122
  store ptr %__pyx_kp_u_refnanny_raised_an_exception_fro, ptr %p345, align 8, !dbg !4121, !tbaa !4027
  %s346 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 1, !dbg !4121
  store ptr @__pyx_k_refnanny_raised_an_exception_fro, ptr %s346, align 8, !dbg !4121, !tbaa !4029
  %n347 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 2, !dbg !4121
  store i64 35, ptr %n347, align 8, !dbg !4121, !tbaa !4030
  %encoding348 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 3, !dbg !4121
  store ptr null, ptr %encoding348, align 8, !dbg !4121, !tbaa !4031
  %is_unicode349 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 4, !dbg !4121
  store i8 1, ptr %is_unicode349, align 8, !dbg !4121, !tbaa !4032
  %is_str350 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 5, !dbg !4121
  store i8 0, ptr %is_str350, align 1, !dbg !4121, !tbaa !4033
  %intern351 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i32 0, i32 6, !dbg !4121
  store i8 0, ptr %intern351, align 2, !dbg !4121, !tbaa !4034
  %arrayinit.element352 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element344, i64 1, !dbg !4024
  %p353 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 0, !dbg !4123
  %45 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4124, !tbaa !1461
  %__pyx_n_u_regref = getelementptr inbounds %struct.__pyx_mstate, ptr %45, i32 0, i32 53, !dbg !4124
  store ptr %__pyx_n_u_regref, ptr %p353, align 8, !dbg !4123, !tbaa !4027
  %s354 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 1, !dbg !4123
  store ptr @__pyx_k_regref, ptr %s354, align 8, !dbg !4123, !tbaa !4029
  %n355 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 2, !dbg !4123
  store i64 7, ptr %n355, align 8, !dbg !4123, !tbaa !4030
  %encoding356 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 3, !dbg !4123
  store ptr null, ptr %encoding356, align 8, !dbg !4123, !tbaa !4031
  %is_unicode357 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 4, !dbg !4123
  store i8 1, ptr %is_unicode357, align 8, !dbg !4123, !tbaa !4032
  %is_str358 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 5, !dbg !4123
  store i8 0, ptr %is_str358, align 1, !dbg !4123, !tbaa !4033
  %intern359 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i32 0, i32 6, !dbg !4123
  store i8 1, ptr %intern359, align 2, !dbg !4123, !tbaa !4034
  %arrayinit.element360 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element352, i64 1, !dbg !4024
  %p361 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 0, !dbg !4125
  %46 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4126, !tbaa !1461
  %__pyx_n_s_spec = getelementptr inbounds %struct.__pyx_mstate, ptr %46, i32 0, i32 54, !dbg !4126
  store ptr %__pyx_n_s_spec, ptr %p361, align 8, !dbg !4125, !tbaa !4027
  %s362 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 1, !dbg !4125
  store ptr @__pyx_k_spec, ptr %s362, align 8, !dbg !4125, !tbaa !4029
  %n363 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 2, !dbg !4125
  store i64 9, ptr %n363, align 8, !dbg !4125, !tbaa !4030
  %encoding364 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 3, !dbg !4125
  store ptr null, ptr %encoding364, align 8, !dbg !4125, !tbaa !4031
  %is_unicode365 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 4, !dbg !4125
  store i8 0, ptr %is_unicode365, align 8, !dbg !4125, !tbaa !4032
  %is_str366 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 5, !dbg !4125
  store i8 1, ptr %is_str366, align 1, !dbg !4125, !tbaa !4033
  %intern367 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i32 0, i32 6, !dbg !4125
  store i8 1, ptr %intern367, align 2, !dbg !4125, !tbaa !4034
  %arrayinit.element368 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element360, i64 1, !dbg !4024
  %p369 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 0, !dbg !4127
  %47 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4128, !tbaa !1461
  %__pyx_n_s_sys = getelementptr inbounds %struct.__pyx_mstate, ptr %47, i32 0, i32 55, !dbg !4128
  store ptr %__pyx_n_s_sys, ptr %p369, align 8, !dbg !4127, !tbaa !4027
  %s370 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 1, !dbg !4127
  store ptr @__pyx_k_sys, ptr %s370, align 8, !dbg !4127, !tbaa !4029
  %n371 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 2, !dbg !4127
  store i64 4, ptr %n371, align 8, !dbg !4127, !tbaa !4030
  %encoding372 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 3, !dbg !4127
  store ptr null, ptr %encoding372, align 8, !dbg !4127, !tbaa !4031
  %is_unicode373 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 4, !dbg !4127
  store i8 0, ptr %is_unicode373, align 8, !dbg !4127, !tbaa !4032
  %is_str374 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 5, !dbg !4127
  store i8 1, ptr %is_str374, align 1, !dbg !4127, !tbaa !4033
  %intern375 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i32 0, i32 6, !dbg !4127
  store i8 1, ptr %intern375, align 2, !dbg !4127, !tbaa !4034
  %arrayinit.element376 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %arrayinit.element368, i64 1, !dbg !4024
  call void @llvm.memset.p0.i64(ptr align 8 %arrayinit.element376, i8 0, i64 40, i1 false), !dbg !4024
  %arraydecay = getelementptr inbounds [49 x %struct.__Pyx_StringTabEntry], ptr %__pyx_string_tab, i64 0, i64 0, !dbg !4129
  %call = call i32 @__Pyx_InitStrings(ptr noundef %arraydecay), !dbg !4130
  call void @llvm.lifetime.end.p0(i64 1960, ptr %__pyx_string_tab) #10, !dbg !4131
  ret i32 %call, !dbg !4132
}

declare !dbg !4133 ptr @PyLong_FromLong(i64 noundef) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitStrings(ptr noundef %t) #0 !dbg !4136 {
entry:
  %t.addr = alloca ptr, align 8
  store ptr %t, ptr %t.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !4141, metadata !DIExpression()), !dbg !4142
  br label %while.cond, !dbg !4143

while.cond:                                       ; preds = %while.body, %entry
  %0 = load ptr, ptr %t.addr, align 8, !dbg !4144, !tbaa !1461
  %p = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %0, i32 0, i32 0, !dbg !4145
  %1 = load ptr, ptr %p, align 8, !dbg !4145, !tbaa !4027
  %tobool = icmp ne ptr %1, null, !dbg !4143
  br i1 %tobool, label %while.body, label %while.end, !dbg !4143

while.body:                                       ; preds = %while.cond
  %2 = load ptr, ptr %t.addr, align 8, !dbg !4146, !tbaa !1461
  %3 = load ptr, ptr %t.addr, align 8, !dbg !4148, !tbaa !1461
  %p1 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %3, i32 0, i32 0, !dbg !4149
  %4 = load ptr, ptr %p1, align 8, !dbg !4149, !tbaa !4027
  %call = call i32 @__Pyx_InitString(ptr noundef byval(%struct.__Pyx_StringTabEntry) align 8 %2, ptr noundef %4), !dbg !4150
  %5 = load ptr, ptr %t.addr, align 8, !dbg !4151, !tbaa !1461
  %incdec.ptr = getelementptr %struct.__Pyx_StringTabEntry, ptr %5, i32 1, !dbg !4151
  store ptr %incdec.ptr, ptr %t.addr, align 8, !dbg !4151, !tbaa !1461
  br label %while.cond, !dbg !4143, !llvm.loop !4152

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !4155
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitString(ptr noundef byval(%struct.__Pyx_StringTabEntry) align 8 %t, ptr noundef %str) #0 !dbg !4156 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca ptr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !4160, metadata !DIExpression()), !dbg !4162
  store ptr %str, ptr %str.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %str.addr, metadata !4161, metadata !DIExpression()), !dbg !4163
  %is_unicode = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 4, !dbg !4164
  %0 = load i8, ptr %is_unicode, align 8, !dbg !4164, !tbaa !4032
  %conv = sext i8 %0 to i32, !dbg !4166
  %is_str = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 5, !dbg !4167
  %1 = load i8, ptr %is_str, align 1, !dbg !4167, !tbaa !4033
  %conv1 = sext i8 %1 to i32, !dbg !4168
  %or = or i32 %conv, %conv1, !dbg !4169
  %tobool = icmp ne i32 %or, 0, !dbg !4169
  br i1 %tobool, label %if.then, label %if.else15, !dbg !4170

if.then:                                          ; preds = %entry
  %intern = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 6, !dbg !4171
  %2 = load i8, ptr %intern, align 2, !dbg !4171, !tbaa !4034
  %tobool2 = icmp ne i8 %2, 0, !dbg !4174
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !4175

if.then3:                                         ; preds = %if.then
  %s = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !4176
  %3 = load ptr, ptr %s, align 8, !dbg !4176, !tbaa !4029
  %call = call ptr @PyUnicode_InternFromString(ptr noundef %3), !dbg !4178
  %4 = load ptr, ptr %str.addr, align 8, !dbg !4179, !tbaa !1461
  store ptr %call, ptr %4, align 8, !dbg !4180, !tbaa !1461
  br label %if.end14, !dbg !4181

if.else:                                          ; preds = %if.then
  %encoding = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 3, !dbg !4182
  %5 = load ptr, ptr %encoding, align 8, !dbg !4182, !tbaa !4031
  %tobool4 = icmp ne ptr %5, null, !dbg !4184
  br i1 %tobool4, label %if.then5, label %if.else9, !dbg !4185

if.then5:                                         ; preds = %if.else
  %s6 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !4186
  %6 = load ptr, ptr %s6, align 8, !dbg !4186, !tbaa !4029
  %n = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 2, !dbg !4188
  %7 = load i64, ptr %n, align 8, !dbg !4188, !tbaa !4030
  %sub = sub i64 %7, 1, !dbg !4189
  %encoding7 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 3, !dbg !4190
  %8 = load ptr, ptr %encoding7, align 8, !dbg !4190, !tbaa !4031
  %call8 = call ptr @PyUnicode_Decode(ptr noundef %6, i64 noundef %sub, ptr noundef %8, ptr noundef null), !dbg !4191
  %9 = load ptr, ptr %str.addr, align 8, !dbg !4192, !tbaa !1461
  store ptr %call8, ptr %9, align 8, !dbg !4193, !tbaa !1461
  br label %if.end, !dbg !4194

if.else9:                                         ; preds = %if.else
  %s10 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !4195
  %10 = load ptr, ptr %s10, align 8, !dbg !4195, !tbaa !4029
  %n11 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 2, !dbg !4197
  %11 = load i64, ptr %n11, align 8, !dbg !4197, !tbaa !4030
  %sub12 = sub i64 %11, 1, !dbg !4198
  %call13 = call ptr @PyUnicode_FromStringAndSize(ptr noundef %10, i64 noundef %sub12), !dbg !4199
  %12 = load ptr, ptr %str.addr, align 8, !dbg !4200, !tbaa !1461
  store ptr %call13, ptr %12, align 8, !dbg !4201, !tbaa !1461
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then5
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then3
  br label %if.end20, !dbg !4202

if.else15:                                        ; preds = %entry
  %s16 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 1, !dbg !4203
  %13 = load ptr, ptr %s16, align 8, !dbg !4203, !tbaa !4029
  %n17 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %t, i32 0, i32 2, !dbg !4205
  %14 = load i64, ptr %n17, align 8, !dbg !4205, !tbaa !4030
  %sub18 = sub i64 %14, 1, !dbg !4206
  %call19 = call ptr @PyBytes_FromStringAndSize(ptr noundef %13, i64 noundef %sub18), !dbg !4207
  %15 = load ptr, ptr %str.addr, align 8, !dbg !4208, !tbaa !1461
  store ptr %call19, ptr %15, align 8, !dbg !4209, !tbaa !1461
  br label %if.end20

if.end20:                                         ; preds = %if.else15, %if.end14
  %16 = load ptr, ptr %str.addr, align 8, !dbg !4210, !tbaa !1461
  %17 = load ptr, ptr %16, align 8, !dbg !4212, !tbaa !1461
  %tobool21 = icmp ne ptr %17, null, !dbg !4212
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4213

if.then22:                                        ; preds = %if.end20
  store i32 -1, ptr %retval, align 4, !dbg !4214
  br label %return, !dbg !4214

if.end23:                                         ; preds = %if.end20
  %18 = load ptr, ptr %str.addr, align 8, !dbg !4215, !tbaa !1461
  %19 = load ptr, ptr %18, align 8, !dbg !4217, !tbaa !1461
  %call24 = call i64 @PyObject_Hash(ptr noundef %19), !dbg !4218
  %cmp = icmp eq i64 %call24, -1, !dbg !4219
  br i1 %cmp, label %if.then26, label %if.end27, !dbg !4220

if.then26:                                        ; preds = %if.end23
  store i32 -1, ptr %retval, align 4, !dbg !4221
  br label %return, !dbg !4221

if.end27:                                         ; preds = %if.end23
  store i32 0, ptr %retval, align 4, !dbg !4222
  br label %return, !dbg !4222

return:                                           ; preds = %if.end27, %if.then26, %if.then22
  %20 = load i32, ptr %retval, align 4, !dbg !4223
  ret i32 %20, !dbg !4223
}

declare !dbg !4224 ptr @PyUnicode_InternFromString(ptr noundef) #1

declare !dbg !4225 ptr @PyUnicode_Decode(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #1

declare !dbg !4228 i64 @PyObject_Hash(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetBuiltinName(ptr noundef %name) #0 !dbg !4229 {
entry:
  %name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !4231, metadata !DIExpression()), !dbg !4233
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !4234
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4232, metadata !DIExpression()), !dbg !4235
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4236, !tbaa !1461
  %__pyx_b = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 1, !dbg !4236
  %1 = load ptr, ptr %__pyx_b, align 8, !dbg !4236, !tbaa !1611
  %2 = load ptr, ptr %name.addr, align 8, !dbg !4237, !tbaa !1461
  %call = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %1, ptr noundef %2), !dbg !4238
  store ptr %call, ptr %result, align 8, !dbg !4235, !tbaa !1461
  %3 = load ptr, ptr %result, align 8, !dbg !4239, !tbaa !1461
  %tobool = icmp ne ptr %3, null, !dbg !4239
  %lnot = xor i1 %tobool, true, !dbg !4239
  %lnot1 = xor i1 %lnot, true, !dbg !4239
  %lnot2 = xor i1 %lnot1, true, !dbg !4239
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4239
  %conv = sext i32 %lnot.ext to i64, !dbg !4239
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4239
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4239
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !4241

land.lhs.true:                                    ; preds = %entry
  %call4 = call ptr @PyErr_Occurred(), !dbg !4242
  %tobool5 = icmp ne ptr %call4, null, !dbg !4242
  br i1 %tobool5, label %if.end, label %if.then, !dbg !4243

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr @PyExc_NameError, align 8, !dbg !4244, !tbaa !1461
  %5 = load ptr, ptr %name.addr, align 8, !dbg !4246, !tbaa !1461
  %call6 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.23, ptr noundef %5), !dbg !4247
  br label %if.end, !dbg !4248

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load ptr, ptr %result, align 8, !dbg !4249, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !4250
  ret ptr %6, !dbg !4251
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %obj, ptr noundef %attr_name) #3 !dbg !4252 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !4254, metadata !DIExpression()), !dbg !4258
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %attr_name.addr, metadata !4255, metadata !DIExpression()), !dbg !4259
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !4260
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4256, metadata !DIExpression()), !dbg !4261
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #10, !dbg !4262
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !4257, metadata !DIExpression()), !dbg !4263
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !4264, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !4264
  store ptr %call, ptr %tp, align 8, !dbg !4263, !tbaa !1461
  %1 = load ptr, ptr %tp, align 8, !dbg !4265, !tbaa !1461
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16, !dbg !4265
  %2 = load ptr, ptr %tp_getattro, align 8, !dbg !4265, !tbaa !2428
  %cmp = icmp eq ptr %2, @PyObject_GenericGetAttr, !dbg !4265
  %lnot = xor i1 %cmp, true, !dbg !4265
  %lnot1 = xor i1 %lnot, true, !dbg !4265
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4265
  %conv = sext i32 %lnot.ext to i64, !dbg !4265
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4265
  %tobool = icmp ne i64 %expval, 0, !dbg !4265
  br i1 %tobool, label %if.then, label %if.end, !dbg !4267

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %obj.addr, align 8, !dbg !4268, !tbaa !1461
  %4 = load ptr, ptr %attr_name.addr, align 8, !dbg !4270, !tbaa !1461
  %call2 = call ptr @_PyObject_GenericGetAttrWithDict(ptr noundef %3, ptr noundef %4, ptr noundef null, i32 noundef 1), !dbg !4271
  store ptr %call2, ptr %retval, align 8, !dbg !4272
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4272

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %obj.addr, align 8, !dbg !4273, !tbaa !1461
  %6 = load ptr, ptr %attr_name.addr, align 8, !dbg !4274, !tbaa !1461
  %call3 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %5, ptr noundef %6), !dbg !4275
  store ptr %call3, ptr %result, align 8, !dbg !4276, !tbaa !1461
  %7 = load ptr, ptr %result, align 8, !dbg !4277, !tbaa !1461
  %tobool4 = icmp ne ptr %7, null, !dbg !4277
  %lnot5 = xor i1 %tobool4, true, !dbg !4277
  %lnot7 = xor i1 %lnot5, true, !dbg !4277
  %lnot9 = xor i1 %lnot7, true, !dbg !4277
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !4277
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !4277
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !4277
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !4277
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4279

if.then14:                                        ; preds = %if.end
  call void @__Pyx_PyObject_GetAttrStr_ClearAttributeError(), !dbg !4280
  br label %if.end15, !dbg !4282

if.end15:                                         ; preds = %if.then14, %if.end
  %8 = load ptr, ptr %result, align 8, !dbg !4283, !tbaa !1461
  store ptr %8, ptr %retval, align 8, !dbg !4284
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4284

cleanup:                                          ; preds = %if.end15, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #10, !dbg !4285
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !4285
  %9 = load ptr, ptr %retval, align 8, !dbg !4285
  ret ptr %9, !dbg !4285
}

declare !dbg !4286 ptr @PyErr_Format(ptr noundef, ptr noundef, ...) #1

declare ptr @PyObject_GenericGetAttr(ptr noundef, ptr noundef) #1

declare !dbg !4289 ptr @_PyObject_GenericGetAttrWithDict(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %obj, ptr noundef %attr_name) #3 !dbg !4292 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !4294, metadata !DIExpression()), !dbg !4297
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %attr_name.addr, metadata !4295, metadata !DIExpression()), !dbg !4298
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #10, !dbg !4299
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !4296, metadata !DIExpression()), !dbg !4300
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !4301, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !4301
  store ptr %call, ptr %tp, align 8, !dbg !4300, !tbaa !1461
  %1 = load ptr, ptr %tp, align 8, !dbg !4302, !tbaa !1461
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16, !dbg !4302
  %2 = load ptr, ptr %tp_getattro, align 8, !dbg !4302, !tbaa !2428
  %tobool = icmp ne ptr %2, null, !dbg !4302
  %lnot = xor i1 %tobool, true, !dbg !4302
  %lnot1 = xor i1 %lnot, true, !dbg !4302
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4302
  %conv = sext i32 %lnot.ext to i64, !dbg !4302
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4302
  %tobool2 = icmp ne i64 %expval, 0, !dbg !4302
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4304

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %tp, align 8, !dbg !4305, !tbaa !1461
  %tp_getattro3 = getelementptr inbounds %struct._typeobject, ptr %3, i32 0, i32 16, !dbg !4306
  %4 = load ptr, ptr %tp_getattro3, align 8, !dbg !4306, !tbaa !2428
  %5 = load ptr, ptr %obj.addr, align 8, !dbg !4307, !tbaa !1461
  %6 = load ptr, ptr %attr_name.addr, align 8, !dbg !4308, !tbaa !1461
  %call4 = call ptr %4(ptr noundef %5, ptr noundef %6), !dbg !4305
  store ptr %call4, ptr %retval, align 8, !dbg !4309
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4309

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %obj.addr, align 8, !dbg !4310, !tbaa !1461
  %8 = load ptr, ptr %attr_name.addr, align 8, !dbg !4311, !tbaa !1461
  %call5 = call ptr @PyObject_GetAttr(ptr noundef %7, ptr noundef %8), !dbg !4312
  store ptr %call5, ptr %retval, align 8, !dbg !4313
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4313

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #10, !dbg !4314
  %9 = load ptr, ptr %retval, align 8, !dbg !4314
  ret ptr %9, !dbg !4314
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_PyObject_GetAttrStr_ClearAttributeError() #0 !dbg !4315 {
entry:
  %__pyx_tstate = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !4318
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !4317, metadata !DIExpression()), !dbg !4318
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !4319
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !4319, !tbaa !1461
  %0 = load ptr, ptr %__pyx_tstate, align 8, !dbg !4320, !tbaa !1461
  %1 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !4320, !tbaa !1461
  %call1 = call i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %0, ptr noundef %1), !dbg !4320
  %tobool = icmp ne i32 %call1, 0, !dbg !4320
  %lnot = xor i1 %tobool, true, !dbg !4320
  %lnot2 = xor i1 %lnot, true, !dbg !4320
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4320
  %conv = sext i32 %lnot.ext to i64, !dbg !4320
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4320
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4320
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4322

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__pyx_tstate, align 8, !dbg !4323, !tbaa !1461
  call void @__Pyx_ErrRestoreInState(ptr noundef %2, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !4323
  br label %if.end, !dbg !4323

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !4324
  ret void, !dbg !4324
}

declare !dbg !4325 ptr @PyObject_GetAttr(ptr noundef, ptr noundef) #1

declare !dbg !4326 ptr @_PyThreadState_UncheckedGet() #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %tstate, ptr noundef %err) #3 !dbg !4327 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %result = alloca i32, align 4
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !4331, metadata !DIExpression()), !dbg !4335
  store ptr %err, ptr %err.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4332, metadata !DIExpression()), !dbg !4336
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !4337
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4333, metadata !DIExpression()), !dbg !4338
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #10, !dbg !4339
  tail call void @llvm.dbg.declare(metadata ptr %exc_type, metadata !4334, metadata !DIExpression()), !dbg !4340
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !4341, !tbaa !1461
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !4342
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !4342, !tbaa !2655
  store ptr %1, ptr %exc_type, align 8, !dbg !4343, !tbaa !1461
  %2 = load ptr, ptr %exc_type, align 8, !dbg !4344, !tbaa !1461
  %3 = load ptr, ptr %err.addr, align 8, !dbg !4346, !tbaa !1461
  %cmp = icmp eq ptr %2, %3, !dbg !4347
  br i1 %cmp, label %if.then, label %if.end, !dbg !4348

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !4349
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4349

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %exc_type, align 8, !dbg !4350, !tbaa !1461
  %tobool = icmp ne ptr %4, null, !dbg !4350
  %lnot = xor i1 %tobool, true, !dbg !4350
  %lnot1 = xor i1 %lnot, true, !dbg !4350
  %lnot2 = xor i1 %lnot1, true, !dbg !4350
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4350
  %conv = sext i32 %lnot.ext to i64, !dbg !4350
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4350
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4350
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4352

if.then4:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !4353
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4353

if.end5:                                          ; preds = %if.end
  %5 = load ptr, ptr %err.addr, align 8, !dbg !4354, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %5), !dbg !4354
  %call6 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864), !dbg !4354
  %tobool7 = icmp ne i32 %call6, 0, !dbg !4354
  %lnot8 = xor i1 %tobool7, true, !dbg !4354
  %lnot10 = xor i1 %lnot8, true, !dbg !4354
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !4354
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !4354
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !4354
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !4354
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !4356

if.then15:                                        ; preds = %if.end5
  %6 = load ptr, ptr %exc_type, align 8, !dbg !4357, !tbaa !1461
  %7 = load ptr, ptr %err.addr, align 8, !dbg !4359, !tbaa !1461
  %call16 = call i32 @__Pyx_PyErr_ExceptionMatchesTuple(ptr noundef %6, ptr noundef %7), !dbg !4360
  store i32 %call16, ptr %result, align 4, !dbg !4361, !tbaa !1557
  br label %if.end18, !dbg !4362

if.else:                                          ; preds = %if.end5
  %8 = load ptr, ptr %exc_type, align 8, !dbg !4363, !tbaa !1461
  %9 = load ptr, ptr %err.addr, align 8, !dbg !4365, !tbaa !1461
  %call17 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %8, ptr noundef %9), !dbg !4366
  store i32 %call17, ptr %result, align 4, !dbg !4367, !tbaa !1557
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  %10 = load i32, ptr %result, align 4, !dbg !4368, !tbaa !1557
  store i32 %10, ptr %retval, align 4, !dbg !4369
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4369

cleanup:                                          ; preds = %if.end18, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #10, !dbg !4370
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !4370
  %11 = load i32, ptr %retval, align 4, !dbg !4370
  ret i32 %11, !dbg !4370
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_ErrRestoreInState(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !4371 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %tmp_type = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !4375, metadata !DIExpression()), !dbg !4382
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !4376, metadata !DIExpression()), !dbg !4383
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !4377, metadata !DIExpression()), !dbg !4384
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !4378, metadata !DIExpression()), !dbg !4385
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_type) #10, !dbg !4386
  tail call void @llvm.dbg.declare(metadata ptr %tmp_type, metadata !4379, metadata !DIExpression()), !dbg !4387
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #10, !dbg !4386
  tail call void @llvm.dbg.declare(metadata ptr %tmp_value, metadata !4380, metadata !DIExpression()), !dbg !4388
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #10, !dbg !4386
  tail call void @llvm.dbg.declare(metadata ptr %tmp_tb, metadata !4381, metadata !DIExpression()), !dbg !4389
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !4390, !tbaa !1461
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !4391
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !4391, !tbaa !2655
  store ptr %1, ptr %tmp_type, align 8, !dbg !4392, !tbaa !1461
  %2 = load ptr, ptr %tstate.addr, align 8, !dbg !4393, !tbaa !1461
  %curexc_value = getelementptr inbounds %struct._ts, ptr %2, i32 0, i32 16, !dbg !4394
  %3 = load ptr, ptr %curexc_value, align 8, !dbg !4394, !tbaa !4395
  store ptr %3, ptr %tmp_value, align 8, !dbg !4396, !tbaa !1461
  %4 = load ptr, ptr %tstate.addr, align 8, !dbg !4397, !tbaa !1461
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %4, i32 0, i32 17, !dbg !4398
  %5 = load ptr, ptr %curexc_traceback, align 8, !dbg !4398, !tbaa !4399
  store ptr %5, ptr %tmp_tb, align 8, !dbg !4400, !tbaa !1461
  %6 = load ptr, ptr %type.addr, align 8, !dbg !4401, !tbaa !1461
  %7 = load ptr, ptr %tstate.addr, align 8, !dbg !4402, !tbaa !1461
  %curexc_type1 = getelementptr inbounds %struct._ts, ptr %7, i32 0, i32 15, !dbg !4403
  store ptr %6, ptr %curexc_type1, align 8, !dbg !4404, !tbaa !2655
  %8 = load ptr, ptr %value.addr, align 8, !dbg !4405, !tbaa !1461
  %9 = load ptr, ptr %tstate.addr, align 8, !dbg !4406, !tbaa !1461
  %curexc_value2 = getelementptr inbounds %struct._ts, ptr %9, i32 0, i32 16, !dbg !4407
  store ptr %8, ptr %curexc_value2, align 8, !dbg !4408, !tbaa !4395
  %10 = load ptr, ptr %tb.addr, align 8, !dbg !4409, !tbaa !1461
  %11 = load ptr, ptr %tstate.addr, align 8, !dbg !4410, !tbaa !1461
  %curexc_traceback3 = getelementptr inbounds %struct._ts, ptr %11, i32 0, i32 17, !dbg !4411
  store ptr %10, ptr %curexc_traceback3, align 8, !dbg !4412, !tbaa !4399
  %12 = load ptr, ptr %tmp_type, align 8, !dbg !4413, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %12), !dbg !4413
  %13 = load ptr, ptr %tmp_value, align 8, !dbg !4414, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %13), !dbg !4414
  %14 = load ptr, ptr %tmp_tb, align 8, !dbg !4415, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %14), !dbg !4415
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #10, !dbg !4416
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #10, !dbg !4416
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_type) #10, !dbg !4416
  ret void, !dbg !4416
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyType_HasFeature(ptr noundef %type, i64 noundef %feature) #3 !dbg !4417 {
entry:
  %type.addr = alloca ptr, align 8
  %feature.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !4421, metadata !DIExpression()), !dbg !4424
  store i64 %feature, ptr %feature.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %feature.addr, metadata !4422, metadata !DIExpression()), !dbg !4425
  call void @llvm.lifetime.start.p0(i64 8, ptr %flags) #10, !dbg !4426
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !4423, metadata !DIExpression()), !dbg !4427
  %0 = load ptr, ptr %type.addr, align 8, !dbg !4428, !tbaa !1461
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19, !dbg !4429
  %1 = load i64, ptr %tp_flags, align 8, !dbg !4429, !tbaa !4430
  store i64 %1, ptr %flags, align 8, !dbg !4431, !tbaa !1836
  %2 = load i64, ptr %flags, align 8, !dbg !4432, !tbaa !1836
  %3 = load i64, ptr %feature.addr, align 8, !dbg !4433, !tbaa !1836
  %and = and i64 %2, %3, !dbg !4434
  %cmp = icmp ne i64 %and, 0, !dbg !4435
  %conv = zext i1 %cmp to i32, !dbg !4435
  call void @llvm.lifetime.end.p0(i64 8, ptr %flags) #10, !dbg !4436
  ret i32 %conv, !dbg !4437
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyErr_ExceptionMatchesTuple(ptr noundef %exc_type, ptr noundef %tuple) #0 !dbg !4438 {
entry:
  %retval = alloca i32, align 4
  %exc_type.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !4440, metadata !DIExpression()), !dbg !4444
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !4441, metadata !DIExpression()), !dbg !4445
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !4446
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4442, metadata !DIExpression()), !dbg !4447
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #10, !dbg !4446
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !4443, metadata !DIExpression()), !dbg !4448
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !4449, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !4449
  store i64 %call, ptr %n, align 8, !dbg !4450, !tbaa !1836
  store i64 0, ptr %i, align 8, !dbg !4451, !tbaa !1836
  br label %for.cond, !dbg !4453

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !4454, !tbaa !1836
  %2 = load i64, ptr %n, align 8, !dbg !4456, !tbaa !1836
  %cmp = icmp slt i64 %1, %2, !dbg !4457
  br i1 %cmp, label %for.body, label %for.end, !dbg !4458

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %exc_type.addr, align 8, !dbg !4459, !tbaa !1461
  %4 = load ptr, ptr %tuple.addr, align 8, !dbg !4462, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !4462
  %5 = load i64, ptr %i, align 8, !dbg !4462, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %5, !dbg !4462
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4462, !tbaa !1461
  %cmp1 = icmp eq ptr %3, %6, !dbg !4463
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4464

if.then:                                          ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !4465
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4465

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4466

for.inc:                                          ; preds = %if.end
  %7 = load i64, ptr %i, align 8, !dbg !4467, !tbaa !1836
  %inc = add i64 %7, 1, !dbg !4467
  store i64 %inc, ptr %i, align 8, !dbg !4467, !tbaa !1836
  br label %for.cond, !dbg !4468, !llvm.loop !4469

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !dbg !4471, !tbaa !1836
  br label %for.cond2, !dbg !4473

for.cond2:                                        ; preds = %for.inc10, %for.end
  %8 = load i64, ptr %i, align 8, !dbg !4474, !tbaa !1836
  %9 = load i64, ptr %n, align 8, !dbg !4476, !tbaa !1836
  %cmp3 = icmp slt i64 %8, %9, !dbg !4477
  br i1 %cmp3, label %for.body4, label %for.end12, !dbg !4478

for.body4:                                        ; preds = %for.cond2
  %10 = load ptr, ptr %exc_type.addr, align 8, !dbg !4479, !tbaa !1461
  %11 = load ptr, ptr %tuple.addr, align 8, !dbg !4482, !tbaa !1461
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %11, i32 0, i32 1, !dbg !4482
  %12 = load i64, ptr %i, align 8, !dbg !4482, !tbaa !1836
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 %12, !dbg !4482
  %13 = load ptr, ptr %arrayidx6, align 8, !dbg !4482, !tbaa !1461
  %call7 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %10, ptr noundef %13), !dbg !4483
  %tobool = icmp ne i32 %call7, 0, !dbg !4483
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !4484

if.then8:                                         ; preds = %for.body4
  store i32 1, ptr %retval, align 4, !dbg !4485
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4485

if.end9:                                          ; preds = %for.body4
  br label %for.inc10, !dbg !4486

for.inc10:                                        ; preds = %if.end9
  %14 = load i64, ptr %i, align 8, !dbg !4487, !tbaa !1836
  %inc11 = add i64 %14, 1, !dbg !4487
  store i64 %inc11, ptr %i, align 8, !dbg !4487, !tbaa !1836
  br label %for.cond2, !dbg !4488, !llvm.loop !4489

for.end12:                                        ; preds = %for.cond2
  store i32 0, ptr %retval, align 4, !dbg !4491
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4491

cleanup:                                          ; preds = %for.end12, %if.then8, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #10, !dbg !4492
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !4492
  %15 = load i32, ptr %retval, align 4, !dbg !4492
  ret i32 %15, !dbg !4492
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %err, ptr noundef %exc_type) #3 !dbg !4493 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca ptr, align 8
  %exc_type.addr = alloca ptr, align 8
  store ptr %err, ptr %err.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4495, metadata !DIExpression()), !dbg !4497
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !4496, metadata !DIExpression()), !dbg !4498
  %0 = load ptr, ptr %err.addr, align 8, !dbg !4499, !tbaa !1461
  %1 = load ptr, ptr %exc_type.addr, align 8, !dbg !4499, !tbaa !1461
  %cmp = icmp eq ptr %0, %1, !dbg !4499
  %lnot = xor i1 %cmp, true, !dbg !4499
  %lnot1 = xor i1 %lnot, true, !dbg !4499
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4499
  %conv = sext i32 %lnot.ext to i64, !dbg !4499
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4499
  %tobool = icmp ne i64 %expval, 0, !dbg !4499
  br i1 %tobool, label %if.then, label %if.end, !dbg !4501

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !4502
  br label %return, !dbg !4502

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %err.addr, align 8, !dbg !4503, !tbaa !1461
  %call = call i32 @PyType_Check(ptr noundef %2), !dbg !4503
  %tobool2 = icmp ne i32 %call, 0, !dbg !4503
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !4503

land.rhs:                                         ; preds = %if.end
  %3 = load ptr, ptr %err.addr, align 8, !dbg !4503, !tbaa !1461
  %call3 = call i32 @PyType_HasFeature(ptr noundef %3, i64 noundef 1073741824), !dbg !4503
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4503
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %4 = phi i1 [ false, %if.end ], [ %tobool4, %land.rhs ], !dbg !4505
  %lnot5 = xor i1 %4, true, !dbg !4503
  %lnot7 = xor i1 %lnot5, true, !dbg !4503
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !4503
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !4503
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !4503
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !4503
  br i1 %tobool11, label %if.then12, label %if.end43, !dbg !4506

if.then12:                                        ; preds = %land.end
  %5 = load ptr, ptr %exc_type.addr, align 8, !dbg !4507, !tbaa !1461
  %call13 = call i32 @PyType_Check(ptr noundef %5), !dbg !4507
  %tobool14 = icmp ne i32 %call13, 0, !dbg !4507
  br i1 %tobool14, label %land.rhs15, label %land.end18, !dbg !4507

land.rhs15:                                       ; preds = %if.then12
  %6 = load ptr, ptr %exc_type.addr, align 8, !dbg !4507, !tbaa !1461
  %call16 = call i32 @PyType_HasFeature(ptr noundef %6, i64 noundef 1073741824), !dbg !4507
  %tobool17 = icmp ne i32 %call16, 0, !dbg !4507
  br label %land.end18

land.end18:                                       ; preds = %land.rhs15, %if.then12
  %7 = phi i1 [ false, %if.then12 ], [ %tobool17, %land.rhs15 ], !dbg !4510
  %lnot19 = xor i1 %7, true, !dbg !4507
  %lnot21 = xor i1 %lnot19, true, !dbg !4507
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4507
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !4507
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !4507
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !4507
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !4511

if.then26:                                        ; preds = %land.end18
  %8 = load ptr, ptr %err.addr, align 8, !dbg !4512, !tbaa !1461
  %9 = load ptr, ptr %exc_type.addr, align 8, !dbg !4514, !tbaa !1461
  %call27 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %8, ptr noundef null, ptr noundef %9), !dbg !4515
  store i32 %call27, ptr %retval, align 4, !dbg !4516
  br label %return, !dbg !4516

if.else:                                          ; preds = %land.end18
  %10 = load ptr, ptr %exc_type.addr, align 8, !dbg !4517, !tbaa !1461
  %call28 = call ptr @Py_TYPE(ptr noundef %10), !dbg !4517
  %call29 = call i32 @PyType_HasFeature(ptr noundef %call28, i64 noundef 67108864), !dbg !4517
  %tobool30 = icmp ne i32 %call29, 0, !dbg !4517
  %lnot31 = xor i1 %tobool30, true, !dbg !4517
  %lnot33 = xor i1 %lnot31, true, !dbg !4517
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !4517
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !4517
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1), !dbg !4517
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !4517
  br i1 %tobool37, label %if.then38, label %if.else40, !dbg !4519

if.then38:                                        ; preds = %if.else
  %11 = load ptr, ptr %err.addr, align 8, !dbg !4520, !tbaa !1461
  %12 = load ptr, ptr %exc_type.addr, align 8, !dbg !4522, !tbaa !1461
  %call39 = call i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %11, ptr noundef %12), !dbg !4523
  store i32 %call39, ptr %retval, align 4, !dbg !4524
  br label %return, !dbg !4524

if.else40:                                        ; preds = %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.else40
  br label %if.end42

if.end42:                                         ; preds = %if.end41
  br label %if.end43, !dbg !4525

if.end43:                                         ; preds = %if.end42, %land.end
  %13 = load ptr, ptr %err.addr, align 8, !dbg !4526, !tbaa !1461
  %14 = load ptr, ptr %exc_type.addr, align 8, !dbg !4527, !tbaa !1461
  %call44 = call i32 @PyErr_GivenExceptionMatches(ptr noundef %13, ptr noundef %14), !dbg !4528
  store i32 %call44, ptr %retval, align 4, !dbg !4529
  br label %return, !dbg !4529

return:                                           ; preds = %if.end43, %if.then38, %if.then26, %if.then
  %15 = load i32, ptr %retval, align 4, !dbg !4530
  ret i32 %15, !dbg !4530
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyTuple_GET_SIZE(ptr noundef %op) #3 !dbg !4531 {
entry:
  %op.addr = alloca ptr, align 8
  %tuple = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !4533, metadata !DIExpression()), !dbg !4535
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #10, !dbg !4536
  tail call void @llvm.dbg.declare(metadata ptr %tuple, metadata !4534, metadata !DIExpression()), !dbg !4537
  %0 = load ptr, ptr %op.addr, align 8, !dbg !4538, !tbaa !1461
  store ptr %0, ptr %tuple, align 8, !dbg !4537, !tbaa !1461
  %1 = load ptr, ptr %tuple, align 8, !dbg !4539, !tbaa !1461
  %call = call i64 @Py_SIZE(ptr noundef %1), !dbg !4539
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #10, !dbg !4540
  ret i64 %call, !dbg !4541
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyType_Check(ptr noundef %op) #3 !dbg !4542 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  %0 = load ptr, ptr %op.addr, align 8, !dbg !4546, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !4546
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 2147483648), !dbg !4546
  ret i32 %call1, !dbg !4547
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %err, ptr noundef %exc_type1, ptr noundef %exc_type2) #3 !dbg !4548 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca ptr, align 8
  %exc_type1.addr = alloca ptr, align 8
  %exc_type2.addr = alloca ptr, align 8
  store ptr %err, ptr %err.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4550, metadata !DIExpression()), !dbg !4553
  store ptr %exc_type1, ptr %exc_type1.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %exc_type1.addr, metadata !4551, metadata !DIExpression()), !dbg !4554
  store ptr %exc_type2, ptr %exc_type2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %exc_type2.addr, metadata !4552, metadata !DIExpression()), !dbg !4555
  %0 = load ptr, ptr %exc_type1.addr, align 8, !dbg !4556, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !4556
  br i1 %tobool, label %if.then, label %if.else, !dbg !4558

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %err.addr, align 8, !dbg !4559, !tbaa !1461
  %2 = load ptr, ptr %exc_type1.addr, align 8, !dbg !4561, !tbaa !1461
  %3 = load ptr, ptr %exc_type2.addr, align 8, !dbg !4562, !tbaa !1461
  %call = call i32 @__Pyx_IsAnySubtype2(ptr noundef %1, ptr noundef %2, ptr noundef %3), !dbg !4563
  store i32 %call, ptr %retval, align 4, !dbg !4564
  br label %return, !dbg !4564

if.else:                                          ; preds = %entry
  %4 = load ptr, ptr %err.addr, align 8, !dbg !4565, !tbaa !1461
  %5 = load ptr, ptr %exc_type2.addr, align 8, !dbg !4567, !tbaa !1461
  %call1 = call i32 @__Pyx_IsSubtype(ptr noundef %4, ptr noundef %5), !dbg !4568
  store i32 %call1, ptr %retval, align 4, !dbg !4569
  br label %return, !dbg !4569

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, ptr %retval, align 4, !dbg !4570
  ret i32 %6, !dbg !4570
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %exc_type, ptr noundef %tuple) #0 !dbg !4571 {
entry:
  %retval = alloca i32, align 4
  %exc_type.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %t = alloca ptr, align 8
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !4573, metadata !DIExpression()), !dbg !4581
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !4574, metadata !DIExpression()), !dbg !4582
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !4583
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4575, metadata !DIExpression()), !dbg !4584
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #10, !dbg !4583
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !4576, metadata !DIExpression()), !dbg !4585
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !4586, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !4586
  store i64 %call, ptr %n, align 8, !dbg !4587, !tbaa !1836
  store i64 0, ptr %i, align 8, !dbg !4588, !tbaa !1836
  br label %for.cond, !dbg !4590

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !4591, !tbaa !1836
  %2 = load i64, ptr %n, align 8, !dbg !4593, !tbaa !1836
  %cmp = icmp slt i64 %1, %2, !dbg !4594
  br i1 %cmp, label %for.body, label %for.end, !dbg !4595

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %exc_type.addr, align 8, !dbg !4596, !tbaa !1461
  %4 = load ptr, ptr %tuple.addr, align 8, !dbg !4599, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !4599
  %5 = load i64, ptr %i, align 8, !dbg !4599, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %5, !dbg !4599
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4599, !tbaa !1461
  %cmp1 = icmp eq ptr %3, %6, !dbg !4600
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4601

if.then:                                          ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !4602
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !4602

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4603

for.inc:                                          ; preds = %if.end
  %7 = load i64, ptr %i, align 8, !dbg !4604, !tbaa !1836
  %inc = add i64 %7, 1, !dbg !4604
  store i64 %inc, ptr %i, align 8, !dbg !4604, !tbaa !1836
  br label %for.cond, !dbg !4605, !llvm.loop !4606

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !dbg !4608, !tbaa !1836
  br label %for.cond2, !dbg !4609

for.cond2:                                        ; preds = %for.inc18, %for.end
  %8 = load i64, ptr %i, align 8, !dbg !4610, !tbaa !1836
  %9 = load i64, ptr %n, align 8, !dbg !4611, !tbaa !1836
  %cmp3 = icmp slt i64 %8, %9, !dbg !4612
  br i1 %cmp3, label %for.body4, label %for.end20, !dbg !4613

for.body4:                                        ; preds = %for.cond2
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #10, !dbg !4614
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !4577, metadata !DIExpression()), !dbg !4615
  %10 = load ptr, ptr %tuple.addr, align 8, !dbg !4616, !tbaa !1461
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1, !dbg !4616
  %11 = load i64, ptr %i, align 8, !dbg !4616, !tbaa !1836
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 %11, !dbg !4616
  %12 = load ptr, ptr %arrayidx6, align 8, !dbg !4616, !tbaa !1461
  store ptr %12, ptr %t, align 8, !dbg !4615, !tbaa !1461
  %13 = load ptr, ptr %t, align 8, !dbg !4617, !tbaa !1461
  %call7 = call i32 @PyType_Check(ptr noundef %13), !dbg !4617
  %tobool = icmp ne i32 %call7, 0, !dbg !4617
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4617

land.rhs:                                         ; preds = %for.body4
  %14 = load ptr, ptr %t, align 8, !dbg !4617, !tbaa !1461
  %call8 = call i32 @PyType_HasFeature(ptr noundef %14, i64 noundef 1073741824), !dbg !4617
  %tobool9 = icmp ne i32 %call8, 0, !dbg !4617
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body4
  %15 = phi i1 [ false, %for.body4 ], [ %tobool9, %land.rhs ], !dbg !4619
  %lnot = xor i1 %15, true, !dbg !4617
  %lnot10 = xor i1 %lnot, true, !dbg !4617
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !4617
  %conv = sext i32 %lnot.ext to i64, !dbg !4617
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4617
  %tobool11 = icmp ne i64 %expval, 0, !dbg !4617
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !4620

if.then12:                                        ; preds = %land.end
  %16 = load ptr, ptr %exc_type.addr, align 8, !dbg !4621, !tbaa !1461
  %17 = load ptr, ptr %t, align 8, !dbg !4624, !tbaa !1461
  %call13 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %16, ptr noundef null, ptr noundef %17), !dbg !4625
  %tobool14 = icmp ne i32 %call13, 0, !dbg !4625
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !4626

if.then15:                                        ; preds = %if.then12
  store i32 1, ptr %retval, align 4, !dbg !4627
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4627

if.end16:                                         ; preds = %if.then12
  br label %if.end17, !dbg !4628

if.else:                                          ; preds = %land.end
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4629
  br label %cleanup, !dbg !4629

cleanup:                                          ; preds = %if.end17, %if.then15
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #10, !dbg !4629
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup21 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc18, !dbg !4630

for.inc18:                                        ; preds = %cleanup.cont
  %18 = load i64, ptr %i, align 8, !dbg !4631, !tbaa !1836
  %inc19 = add i64 %18, 1, !dbg !4631
  store i64 %inc19, ptr %i, align 8, !dbg !4631, !tbaa !1836
  br label %for.cond2, !dbg !4632, !llvm.loop !4633

for.end20:                                        ; preds = %for.cond2
  store i32 0, ptr %retval, align 4, !dbg !4635
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !4635

cleanup21:                                        ; preds = %for.end20, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #10, !dbg !4636
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !4636
  %19 = load i32, ptr %retval, align 4, !dbg !4636
  ret i32 %19, !dbg !4636
}

declare !dbg !4637 i32 @PyErr_GivenExceptionMatches(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IsAnySubtype2(ptr noundef %cls, ptr noundef %a, ptr noundef %b) #3 !dbg !4638 {
entry:
  %retval = alloca i32, align 4
  %cls.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %mro = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %base = alloca ptr, align 8
  store ptr %cls, ptr %cls.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %cls.addr, metadata !4642, metadata !DIExpression()), !dbg !4654
  store ptr %a, ptr %a.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !4643, metadata !DIExpression()), !dbg !4655
  store ptr %b, ptr %b.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !4644, metadata !DIExpression()), !dbg !4656
  call void @llvm.lifetime.start.p0(i64 8, ptr %mro) #10, !dbg !4657
  tail call void @llvm.dbg.declare(metadata ptr %mro, metadata !4645, metadata !DIExpression()), !dbg !4658
  %0 = load ptr, ptr %cls.addr, align 8, !dbg !4659, !tbaa !1461
  %1 = load ptr, ptr %a.addr, align 8, !dbg !4661, !tbaa !1461
  %cmp = icmp eq ptr %0, %1, !dbg !4662
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4663

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %cls.addr, align 8, !dbg !4664, !tbaa !1461
  %3 = load ptr, ptr %b.addr, align 8, !dbg !4665, !tbaa !1461
  %cmp1 = icmp eq ptr %2, %3, !dbg !4666
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4667

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, ptr %retval, align 4, !dbg !4668
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !4668

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %cls.addr, align 8, !dbg !4669, !tbaa !1461
  %tp_mro = getelementptr inbounds %struct._typeobject, ptr %4, i32 0, i32 41, !dbg !4670
  %5 = load ptr, ptr %tp_mro, align 8, !dbg !4670, !tbaa !4671
  store ptr %5, ptr %mro, align 8, !dbg !4672, !tbaa !1461
  %6 = load ptr, ptr %mro, align 8, !dbg !4673, !tbaa !1461
  %tobool = icmp ne ptr %6, null, !dbg !4673
  %lnot = xor i1 %tobool, true, !dbg !4673
  %lnot2 = xor i1 %lnot, true, !dbg !4673
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4673
  %conv = sext i32 %lnot.ext to i64, !dbg !4673
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4673
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4673
  br i1 %tobool3, label %if.then4, label %if.end16, !dbg !4674

if.then4:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !4675
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4646, metadata !DIExpression()), !dbg !4676
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #10, !dbg !4675
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !4649, metadata !DIExpression()), !dbg !4677
  %7 = load ptr, ptr %mro, align 8, !dbg !4678, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %7), !dbg !4678
  store i64 %call, ptr %n, align 8, !dbg !4679, !tbaa !1836
  store i64 0, ptr %i, align 8, !dbg !4680, !tbaa !1836
  br label %for.cond, !dbg !4681

for.cond:                                         ; preds = %for.inc, %if.then4
  %8 = load i64, ptr %i, align 8, !dbg !4682, !tbaa !1836
  %9 = load i64, ptr %n, align 8, !dbg !4683, !tbaa !1836
  %cmp5 = icmp slt i64 %8, %9, !dbg !4684
  br i1 %cmp5, label %for.body, label %for.end, !dbg !4685

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %base) #10, !dbg !4686
  tail call void @llvm.dbg.declare(metadata ptr %base, metadata !4650, metadata !DIExpression()), !dbg !4687
  %10 = load ptr, ptr %mro, align 8, !dbg !4688, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1, !dbg !4688
  %11 = load i64, ptr %i, align 8, !dbg !4688, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %11, !dbg !4688
  %12 = load ptr, ptr %arrayidx, align 8, !dbg !4688, !tbaa !1461
  store ptr %12, ptr %base, align 8, !dbg !4687, !tbaa !1461
  %13 = load ptr, ptr %base, align 8, !dbg !4689, !tbaa !1461
  %14 = load ptr, ptr %a.addr, align 8, !dbg !4691, !tbaa !1461
  %cmp7 = icmp eq ptr %13, %14, !dbg !4692
  br i1 %cmp7, label %if.then12, label %lor.lhs.false9, !dbg !4693

lor.lhs.false9:                                   ; preds = %for.body
  %15 = load ptr, ptr %base, align 8, !dbg !4694, !tbaa !1461
  %16 = load ptr, ptr %b.addr, align 8, !dbg !4695, !tbaa !1461
  %cmp10 = icmp eq ptr %15, %16, !dbg !4696
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !4697

if.then12:                                        ; preds = %lor.lhs.false9, %for.body
  store i32 1, ptr %retval, align 4, !dbg !4698
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4698

if.end13:                                         ; preds = %lor.lhs.false9
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4699
  br label %cleanup, !dbg !4699

cleanup:                                          ; preds = %if.end13, %if.then12
  call void @llvm.lifetime.end.p0(i64 8, ptr %base) #10, !dbg !4699
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup14 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !4700

for.inc:                                          ; preds = %cleanup.cont
  %17 = load i64, ptr %i, align 8, !dbg !4701, !tbaa !1836
  %inc = add i64 %17, 1, !dbg !4701
  store i64 %inc, ptr %i, align 8, !dbg !4701, !tbaa !1836
  br label %for.cond, !dbg !4702, !llvm.loop !4703

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !4705
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup14, !dbg !4705

cleanup14:                                        ; preds = %for.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #10, !dbg !4706
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !4706
  br label %cleanup21

if.end16:                                         ; preds = %if.end
  %18 = load ptr, ptr %cls.addr, align 8, !dbg !4707, !tbaa !1461
  %19 = load ptr, ptr %a.addr, align 8, !dbg !4708, !tbaa !1461
  %call17 = call i32 @__Pyx_InBases(ptr noundef %18, ptr noundef %19), !dbg !4709
  %tobool18 = icmp ne i32 %call17, 0, !dbg !4709
  br i1 %tobool18, label %lor.end, label %lor.rhs, !dbg !4710

lor.rhs:                                          ; preds = %if.end16
  %20 = load ptr, ptr %cls.addr, align 8, !dbg !4711, !tbaa !1461
  %21 = load ptr, ptr %b.addr, align 8, !dbg !4712, !tbaa !1461
  %call19 = call i32 @__Pyx_InBases(ptr noundef %20, ptr noundef %21), !dbg !4713
  %tobool20 = icmp ne i32 %call19, 0, !dbg !4710
  br label %lor.end, !dbg !4710

lor.end:                                          ; preds = %lor.rhs, %if.end16
  %22 = phi i1 [ true, %if.end16 ], [ %tobool20, %lor.rhs ]
  %lor.ext = zext i1 %22 to i32, !dbg !4710
  store i32 %lor.ext, ptr %retval, align 4, !dbg !4714
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21, !dbg !4714

cleanup21:                                        ; preds = %lor.end, %cleanup14, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mro) #10, !dbg !4715
  %23 = load i32, ptr %retval, align 4, !dbg !4715
  ret i32 %23, !dbg !4715
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IsSubtype(ptr noundef %a, ptr noundef %b) #3 !dbg !4716 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %mro = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !4720, metadata !DIExpression()), !dbg !4727
  store ptr %b, ptr %b.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !4721, metadata !DIExpression()), !dbg !4728
  call void @llvm.lifetime.start.p0(i64 8, ptr %mro) #10, !dbg !4729
  tail call void @llvm.dbg.declare(metadata ptr %mro, metadata !4722, metadata !DIExpression()), !dbg !4730
  %0 = load ptr, ptr %a.addr, align 8, !dbg !4731, !tbaa !1461
  %1 = load ptr, ptr %b.addr, align 8, !dbg !4733, !tbaa !1461
  %cmp = icmp eq ptr %0, %1, !dbg !4734
  br i1 %cmp, label %if.then, label %if.end, !dbg !4735

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !4736
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup13, !dbg !4736

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %a.addr, align 8, !dbg !4737, !tbaa !1461
  %tp_mro = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 41, !dbg !4738
  %3 = load ptr, ptr %tp_mro, align 8, !dbg !4738, !tbaa !4671
  store ptr %3, ptr %mro, align 8, !dbg !4739, !tbaa !1461
  %4 = load ptr, ptr %mro, align 8, !dbg !4740, !tbaa !1461
  %tobool = icmp ne ptr %4, null, !dbg !4740
  %lnot = xor i1 %tobool, true, !dbg !4740
  %lnot1 = xor i1 %lnot, true, !dbg !4740
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4740
  %conv = sext i32 %lnot.ext to i64, !dbg !4740
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4740
  %tobool2 = icmp ne i64 %expval, 0, !dbg !4740
  br i1 %tobool2, label %if.then3, label %if.end11, !dbg !4741

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !4742
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4723, metadata !DIExpression()), !dbg !4743
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #10, !dbg !4742
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !4726, metadata !DIExpression()), !dbg !4744
  %5 = load ptr, ptr %mro, align 8, !dbg !4745, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %5), !dbg !4745
  store i64 %call, ptr %n, align 8, !dbg !4746, !tbaa !1836
  store i64 0, ptr %i, align 8, !dbg !4747, !tbaa !1836
  br label %for.cond, !dbg !4749

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, ptr %i, align 8, !dbg !4750, !tbaa !1836
  %7 = load i64, ptr %n, align 8, !dbg !4752, !tbaa !1836
  %cmp4 = icmp slt i64 %6, %7, !dbg !4753
  br i1 %cmp4, label %for.body, label %for.end, !dbg !4754

for.body:                                         ; preds = %for.cond
  %8 = load ptr, ptr %mro, align 8, !dbg !4755, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1, !dbg !4755
  %9 = load i64, ptr %i, align 8, !dbg !4755, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %9, !dbg !4755
  %10 = load ptr, ptr %arrayidx, align 8, !dbg !4755, !tbaa !1461
  %11 = load ptr, ptr %b.addr, align 8, !dbg !4758, !tbaa !1461
  %cmp6 = icmp eq ptr %10, %11, !dbg !4759
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4760

if.then8:                                         ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !4761
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4761

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !4762

for.inc:                                          ; preds = %if.end9
  %12 = load i64, ptr %i, align 8, !dbg !4763, !tbaa !1836
  %inc = add i64 %12, 1, !dbg !4763
  store i64 %inc, ptr %i, align 8, !dbg !4763, !tbaa !1836
  br label %for.cond, !dbg !4764, !llvm.loop !4765

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !4767
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4767

cleanup:                                          ; preds = %for.end, %if.then8
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #10, !dbg !4768
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !4768
  br label %cleanup13

if.end11:                                         ; preds = %if.end
  %13 = load ptr, ptr %a.addr, align 8, !dbg !4769, !tbaa !1461
  %14 = load ptr, ptr %b.addr, align 8, !dbg !4770, !tbaa !1461
  %call12 = call i32 @__Pyx_InBases(ptr noundef %13, ptr noundef %14), !dbg !4771
  store i32 %call12, ptr %retval, align 4, !dbg !4772
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup13, !dbg !4772

cleanup13:                                        ; preds = %if.end11, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mro) #10, !dbg !4773
  %15 = load i32, ptr %retval, align 4, !dbg !4773
  ret i32 %15, !dbg !4773
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InBases(ptr noundef %a, ptr noundef %b) #0 !dbg !4774 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !4776, metadata !DIExpression()), !dbg !4778
  store ptr %b, ptr %b.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !4777, metadata !DIExpression()), !dbg !4779
  br label %while.cond, !dbg !4780

while.cond:                                       ; preds = %if.end, %entry
  %0 = load ptr, ptr %a.addr, align 8, !dbg !4781, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !4780
  br i1 %tobool, label %while.body, label %while.end, !dbg !4780

while.body:                                       ; preds = %while.cond
  %1 = load ptr, ptr %a.addr, align 8, !dbg !4782, !tbaa !1461
  %tp_base = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 30, !dbg !4782
  %2 = load ptr, ptr %tp_base, align 8, !dbg !4782, !tbaa !4784
  store ptr %2, ptr %a.addr, align 8, !dbg !4785, !tbaa !1461
  %3 = load ptr, ptr %a.addr, align 8, !dbg !4786, !tbaa !1461
  %4 = load ptr, ptr %b.addr, align 8, !dbg !4788, !tbaa !1461
  %cmp = icmp eq ptr %3, %4, !dbg !4789
  br i1 %cmp, label %if.then, label %if.end, !dbg !4790

if.then:                                          ; preds = %while.body
  store i32 1, ptr %retval, align 4, !dbg !4791
  br label %return, !dbg !4791

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !4780, !llvm.loop !4792

while.end:                                        ; preds = %while.cond
  %5 = load ptr, ptr %b.addr, align 8, !dbg !4794, !tbaa !1461
  %cmp1 = icmp eq ptr %5, @PyBaseObject_Type, !dbg !4795
  %conv = zext i1 %cmp1 to i32, !dbg !4795
  store i32 %conv, ptr %retval, align 4, !dbg !4796
  br label %return, !dbg !4796

return:                                           ; preds = %while.end, %if.then
  %6 = load i32, ptr %retval, align 4, !dbg !4797
  ret i32 %6, !dbg !4797
}

declare !dbg !4798 ptr @PyTuple_Pack(i64 noundef, ...) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_obj, i64 noundef %__pyx_v_lineno, i32 noundef %__pyx_v_is_null) #0 !dbg !939 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_v_is_null.addr = alloca i32, align 4
  %__pyx_v_id_ = alloca ptr, align 8
  %__pyx_v_count = alloca ptr, align 8
  %__pyx_v_linenumbers = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %sequence = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %index = alloca i64, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !941, metadata !DIExpression()), !dbg !4801
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_obj.addr, metadata !942, metadata !DIExpression()), !dbg !4802
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !943, metadata !DIExpression()), !dbg !4803
  store i32 %__pyx_v_is_null, ptr %__pyx_v_is_null.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_is_null.addr, metadata !944, metadata !DIExpression()), !dbg !4804
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_id_) #10, !dbg !4805
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_id_, metadata !945, metadata !DIExpression()), !dbg !4806
  store ptr null, ptr %__pyx_v_id_, align 8, !dbg !4806, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_count) #10, !dbg !4807
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_count, metadata !946, metadata !DIExpression()), !dbg !4808
  store ptr null, ptr %__pyx_v_count, align 8, !dbg !4808, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_linenumbers) #10, !dbg !4809
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_linenumbers, metadata !947, metadata !DIExpression()), !dbg !4810
  store ptr null, ptr %__pyx_v_linenumbers, align 8, !dbg !4810, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !4811
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !948, metadata !DIExpression()), !dbg !4812
  store ptr null, ptr %__pyx_r, align 8, !dbg !4812, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !4813
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !949, metadata !DIExpression()), !dbg !4814
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4814, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !4815
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !950, metadata !DIExpression()), !dbg !4816
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !4816, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !4817
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !951, metadata !DIExpression()), !dbg !4818
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !4818, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !4819
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !952, metadata !DIExpression()), !dbg !4820
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !4820, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !4821
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !953, metadata !DIExpression()), !dbg !4822
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !4823
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !954, metadata !DIExpression()), !dbg !4824
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !4825
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !955, metadata !DIExpression()), !dbg !4826
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !4826, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !4827
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !956, metadata !DIExpression()), !dbg !4828
  store ptr null, ptr %__pyx_filename, align 8, !dbg !4828, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !4829
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !957, metadata !DIExpression()), !dbg !4830
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !4830, !tbaa !1557
  br label %do.body, !dbg !4831

do.body:                                          ; preds = %entry
  %0 = load i64, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_version, align 8, !dbg !4832, !tbaa !1836
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4832, !tbaa !1461
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 0, !dbg !4832
  %2 = load ptr, ptr %__pyx_d, align 8, !dbg !4832, !tbaa !1598
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %2, i32 0, i32 2, !dbg !4832
  %3 = load i64, ptr %ma_version_tag, align 8, !dbg !4832, !tbaa !4834
  %cmp = icmp eq i64 %0, %3, !dbg !4832
  %lnot = xor i1 %cmp, true, !dbg !4832
  %lnot1 = xor i1 %lnot, true, !dbg !4832
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4832
  %conv = sext i32 %lnot.ext to i64, !dbg !4832
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4832
  %tobool = icmp ne i64 %expval, 0, !dbg !4832
  br i1 %tobool, label %cond.true, label %cond.false11, !dbg !4832

cond.true:                                        ; preds = %do.body
  %4 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_cached_value, align 8, !dbg !4832, !tbaa !1461
  %tobool2 = icmp ne ptr %4, null, !dbg !4832
  %lnot3 = xor i1 %tobool2, true, !dbg !4832
  %lnot5 = xor i1 %lnot3, true, !dbg !4832
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !4832
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !4832
  %expval8 = call i64 @llvm.expect.i64(i64 %conv7, i64 1), !dbg !4832
  %tobool9 = icmp ne i64 %expval8, 0, !dbg !4832
  br i1 %tobool9, label %cond.true10, label %cond.false, !dbg !4832

cond.true10:                                      ; preds = %cond.true
  %5 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_cached_value, align 8, !dbg !4832, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !4832
  %6 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_cached_value, align 8, !dbg !4832, !tbaa !1461
  br label %cond.end, !dbg !4832

cond.false:                                       ; preds = %cond.true
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4832, !tbaa !1461
  %__pyx_n_s_LOG_ALL = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 10, !dbg !4832
  %8 = load ptr, ptr %__pyx_n_s_LOG_ALL, align 8, !dbg !4832, !tbaa !1962
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %8), !dbg !4832
  br label %cond.end, !dbg !4832

cond.end:                                         ; preds = %cond.false, %cond.true10
  %cond = phi ptr [ %6, %cond.true10 ], [ %call, %cond.false ], !dbg !4832
  br label %cond.end14, !dbg !4832

cond.false11:                                     ; preds = %do.body
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4832, !tbaa !1461
  %__pyx_n_s_LOG_ALL12 = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 10, !dbg !4832
  %10 = load ptr, ptr %__pyx_n_s_LOG_ALL12, align 8, !dbg !4832, !tbaa !1962
  %call13 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %10, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_version, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref.__pyx_dict_cached_value), !dbg !4832
  br label %cond.end14, !dbg !4832

cond.end14:                                       ; preds = %cond.false11, %cond.end
  %cond15 = phi ptr [ %cond, %cond.end ], [ %call13, %cond.false11 ], !dbg !4832
  store ptr %cond15, ptr %__pyx_t_1, align 8, !dbg !4832, !tbaa !1461
  br label %do.cond, !dbg !4832

do.cond:                                          ; preds = %cond.end14
  br label %do.end, !dbg !4832

do.end:                                           ; preds = %do.cond
  %11 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4836, !tbaa !1461
  %tobool16 = icmp ne ptr %11, null, !dbg !4836
  %lnot17 = xor i1 %tobool16, true, !dbg !4836
  %lnot19 = xor i1 %lnot17, true, !dbg !4836
  %lnot21 = xor i1 %lnot19, true, !dbg !4836
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4836
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !4836
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !4836
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !4836
  br i1 %tobool25, label %if.then, label %if.end, !dbg !4838

if.then:                                          ; preds = %do.end
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !4839, !tbaa !1461
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !4839, !tbaa !1461
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !4839, !tbaa !1461
  store i32 36, ptr %__pyx_lineno, align 4, !dbg !4839, !tbaa !1557
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !4839, !tbaa !1557
  store i32 3098, ptr %__pyx_clineno, align 4, !dbg !4839, !tbaa !1557
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !4839, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4842

if.end:                                           ; preds = %do.end
  %16 = load i32, ptr %__pyx_v_is_null.addr, align 4, !dbg !4843, !tbaa !1557
  %tobool26 = icmp ne i32 %16, 0, !dbg !4843
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !4845

if.then27:                                        ; preds = %if.end
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4846, !tbaa !1461
  %__pyx_kp_u_NULL = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 12, !dbg !4846
  %18 = load ptr, ptr %__pyx_kp_u_NULL, align 8, !dbg !4846, !tbaa !4848
  call void @Py_INCREF(ptr noundef %18), !dbg !4846
  %19 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4849, !tbaa !1461
  %__pyx_kp_u_NULL28 = getelementptr inbounds %struct.__pyx_mstate, ptr %19, i32 0, i32 12, !dbg !4849
  %20 = load ptr, ptr %__pyx_kp_u_NULL28, align 8, !dbg !4849, !tbaa !4848
  store ptr %20, ptr %__pyx_t_2, align 8, !dbg !4850, !tbaa !1461
  br label %if.end29, !dbg !4851

if.else:                                          ; preds = %if.end
  %21 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !4852, !tbaa !1461
  call void @Py_INCREF(ptr noundef %21), !dbg !4852
  %22 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !4854, !tbaa !1461
  store ptr %22, ptr %__pyx_t_2, align 8, !dbg !4855, !tbaa !1461
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then27
  %23 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !4856, !tbaa !1836
  %call30 = call ptr @PyLong_FromSsize_t(i64 noundef %23), !dbg !4857
  store ptr %call30, ptr %__pyx_t_3, align 8, !dbg !4858, !tbaa !1461
  %24 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4859, !tbaa !1461
  %tobool31 = icmp ne ptr %24, null, !dbg !4859
  %lnot32 = xor i1 %tobool31, true, !dbg !4859
  %lnot34 = xor i1 %lnot32, true, !dbg !4859
  %lnot36 = xor i1 %lnot34, true, !dbg !4859
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !4859
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !4859
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0), !dbg !4859
  %tobool40 = icmp ne i64 %expval39, 0, !dbg !4859
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !4861

if.then41:                                        ; preds = %if.end29
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !4862, !tbaa !1461
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !4862, !tbaa !1461
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !4862, !tbaa !1461
  store i32 36, ptr %__pyx_lineno, align 4, !dbg !4862, !tbaa !1557
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !4862, !tbaa !1557
  store i32 3107, ptr %__pyx_clineno, align 4, !dbg !4862, !tbaa !1557
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !4862, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4865

if.end42:                                         ; preds = %if.end29
  %29 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4866, !tbaa !1461
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4867, !tbaa !1461
  %__pyx_n_u_regref = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 53, !dbg !4867
  %31 = load ptr, ptr %__pyx_n_u_regref, align 8, !dbg !4867, !tbaa !4868
  %32 = load ptr, ptr %__pyx_t_2, align 8, !dbg !4869, !tbaa !1461
  %33 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4870, !tbaa !1461
  %call43 = call ptr @__pyx_f_6Cython_7Runtime_8refnanny_log(ptr noundef %29, ptr noundef %31, ptr noundef %32, ptr noundef %33), !dbg !4871
  store ptr %call43, ptr %__pyx_t_4, align 8, !dbg !4872, !tbaa !1461
  %34 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4873, !tbaa !1461
  %tobool44 = icmp ne ptr %34, null, !dbg !4873
  %lnot45 = xor i1 %tobool44, true, !dbg !4873
  %lnot47 = xor i1 %lnot45, true, !dbg !4873
  %lnot49 = xor i1 %lnot47, true, !dbg !4873
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !4873
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !4873
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0), !dbg !4873
  %tobool53 = icmp ne i64 %expval52, 0, !dbg !4873
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !4875

if.then54:                                        ; preds = %if.end42
  %35 = load ptr, ptr @__pyx_f, align 16, !dbg !4876, !tbaa !1461
  store ptr %35, ptr %__pyx_filename, align 8, !dbg !4876, !tbaa !1461
  %36 = load ptr, ptr %__pyx_filename, align 8, !dbg !4876, !tbaa !1461
  store i32 36, ptr %__pyx_lineno, align 4, !dbg !4876, !tbaa !1557
  %37 = load i32, ptr %__pyx_lineno, align 4, !dbg !4876, !tbaa !1557
  store i32 3109, ptr %__pyx_clineno, align 4, !dbg !4876, !tbaa !1557
  %38 = load i32, ptr %__pyx_clineno, align 4, !dbg !4876, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4879

if.end55:                                         ; preds = %if.end42
  %39 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4880, !tbaa !1461
  call void @Py_DECREF(ptr noundef %39), !dbg !4880
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4881, !tbaa !1461
  %40 = load ptr, ptr %__pyx_t_2, align 8, !dbg !4882, !tbaa !1461
  call void @Py_DECREF(ptr noundef %40), !dbg !4882
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !4883, !tbaa !1461
  %41 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4884, !tbaa !1461
  call void @Py_DECREF(ptr noundef %41), !dbg !4884
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !4885, !tbaa !1461
  %42 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4886, !tbaa !1461
  call void @Py_DECREF(ptr noundef %42), !dbg !4886
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !4887, !tbaa !1461
  %43 = load i32, ptr %__pyx_v_is_null.addr, align 4, !dbg !4888, !tbaa !1557
  %tobool56 = icmp ne i32 %43, 0, !dbg !4888
  br i1 %tobool56, label %if.then57, label %if.end109, !dbg !4890

if.then57:                                        ; preds = %if.end55
  %44 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !4891, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %44, i32 0, i32 5, !dbg !4891
  %45 = load ptr, ptr %errors, align 8, !dbg !4891, !tbaa !4894
  %cmp58 = icmp eq ptr %45, @_Py_NoneStruct, !dbg !4891
  %lnot60 = xor i1 %cmp58, true, !dbg !4891
  %lnot62 = xor i1 %lnot60, true, !dbg !4891
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !4891
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !4891
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0), !dbg !4891
  %tobool66 = icmp ne i64 %expval65, 0, !dbg !4891
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !4895

if.then67:                                        ; preds = %if.then57
  %46 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !4896, !tbaa !1461
  %call68 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %46, ptr noundef @.str.24, ptr noundef @.str.25), !dbg !4898
  %47 = load ptr, ptr @__pyx_f, align 16, !dbg !4899, !tbaa !1461
  store ptr %47, ptr %__pyx_filename, align 8, !dbg !4899, !tbaa !1461
  %48 = load ptr, ptr %__pyx_filename, align 8, !dbg !4899, !tbaa !1461
  store i32 38, ptr %__pyx_lineno, align 4, !dbg !4899, !tbaa !1557
  %49 = load i32, ptr %__pyx_lineno, align 4, !dbg !4899, !tbaa !1557
  store i32 3134, ptr %__pyx_clineno, align 4, !dbg !4899, !tbaa !1557
  %50 = load i32, ptr %__pyx_clineno, align 4, !dbg !4899, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4902

if.end69:                                         ; preds = %if.then57
  %51 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !4903, !tbaa !1836
  %call70 = call ptr @__Pyx_PyUnicode_From_Py_ssize_t(i64 noundef %51, i64 noundef 0, i8 noundef signext 32, i8 noundef signext 100), !dbg !4904
  store ptr %call70, ptr %__pyx_t_4, align 8, !dbg !4905, !tbaa !1461
  %52 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4906, !tbaa !1461
  %tobool71 = icmp ne ptr %52, null, !dbg !4906
  %lnot72 = xor i1 %tobool71, true, !dbg !4906
  %lnot74 = xor i1 %lnot72, true, !dbg !4906
  %lnot76 = xor i1 %lnot74, true, !dbg !4906
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !4906
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !4906
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0), !dbg !4906
  %tobool80 = icmp ne i64 %expval79, 0, !dbg !4906
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !4908

if.then81:                                        ; preds = %if.end69
  %53 = load ptr, ptr @__pyx_f, align 16, !dbg !4909, !tbaa !1461
  store ptr %53, ptr %__pyx_filename, align 8, !dbg !4909, !tbaa !1461
  %54 = load ptr, ptr %__pyx_filename, align 8, !dbg !4909, !tbaa !1461
  store i32 38, ptr %__pyx_lineno, align 4, !dbg !4909, !tbaa !1557
  %55 = load i32, ptr %__pyx_lineno, align 4, !dbg !4909, !tbaa !1557
  store i32 3136, ptr %__pyx_clineno, align 4, !dbg !4909, !tbaa !1557
  %56 = load i32, ptr %__pyx_clineno, align 4, !dbg !4909, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4912

if.end82:                                         ; preds = %if.end69
  %57 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4913, !tbaa !1461
  %__pyx_kp_u_NULL_argument_on_line = getelementptr inbounds %struct.__pyx_mstate, ptr %57, i32 0, i32 13, !dbg !4913
  %58 = load ptr, ptr %__pyx_kp_u_NULL_argument_on_line, align 8, !dbg !4913, !tbaa !4914
  %59 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4913, !tbaa !1461
  %call83 = call ptr @PyUnicode_Concat(ptr noundef %58, ptr noundef %59), !dbg !4913
  store ptr %call83, ptr %__pyx_t_3, align 8, !dbg !4915, !tbaa !1461
  %60 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4916, !tbaa !1461
  %tobool84 = icmp ne ptr %60, null, !dbg !4916
  %lnot85 = xor i1 %tobool84, true, !dbg !4916
  %lnot87 = xor i1 %lnot85, true, !dbg !4916
  %lnot89 = xor i1 %lnot87, true, !dbg !4916
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !4916
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !4916
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 0), !dbg !4916
  %tobool93 = icmp ne i64 %expval92, 0, !dbg !4916
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !4918

if.then94:                                        ; preds = %if.end82
  %61 = load ptr, ptr @__pyx_f, align 16, !dbg !4919, !tbaa !1461
  store ptr %61, ptr %__pyx_filename, align 8, !dbg !4919, !tbaa !1461
  %62 = load ptr, ptr %__pyx_filename, align 8, !dbg !4919, !tbaa !1461
  store i32 38, ptr %__pyx_lineno, align 4, !dbg !4919, !tbaa !1557
  %63 = load i32, ptr %__pyx_lineno, align 4, !dbg !4919, !tbaa !1557
  store i32 3138, ptr %__pyx_clineno, align 4, !dbg !4919, !tbaa !1557
  %64 = load i32, ptr %__pyx_clineno, align 4, !dbg !4919, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4922

if.end95:                                         ; preds = %if.end82
  %65 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4923, !tbaa !1461
  call void @Py_DECREF(ptr noundef %65), !dbg !4923
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !4924, !tbaa !1461
  %66 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !4925, !tbaa !1461
  %errors96 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %66, i32 0, i32 5, !dbg !4926
  %67 = load ptr, ptr %errors96, align 8, !dbg !4926, !tbaa !4894
  %68 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4927, !tbaa !1461
  %call97 = call i32 @__Pyx_PyList_Append(ptr noundef %67, ptr noundef %68), !dbg !4928
  store i32 %call97, ptr %__pyx_t_5, align 4, !dbg !4929, !tbaa !1557
  %69 = load i32, ptr %__pyx_t_5, align 4, !dbg !4930, !tbaa !1557
  %cmp98 = icmp eq i32 %69, -1, !dbg !4930
  %lnot100 = xor i1 %cmp98, true, !dbg !4930
  %lnot102 = xor i1 %lnot100, true, !dbg !4930
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !4930
  %conv104 = sext i32 %lnot.ext103 to i64, !dbg !4930
  %expval105 = call i64 @llvm.expect.i64(i64 %conv104, i64 0), !dbg !4930
  %tobool106 = icmp ne i64 %expval105, 0, !dbg !4930
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !4932

if.then107:                                       ; preds = %if.end95
  %70 = load ptr, ptr @__pyx_f, align 16, !dbg !4933, !tbaa !1461
  store ptr %70, ptr %__pyx_filename, align 8, !dbg !4933, !tbaa !1461
  %71 = load ptr, ptr %__pyx_filename, align 8, !dbg !4933, !tbaa !1461
  store i32 38, ptr %__pyx_lineno, align 4, !dbg !4933, !tbaa !1557
  %72 = load i32, ptr %__pyx_lineno, align 4, !dbg !4933, !tbaa !1557
  store i32 3141, ptr %__pyx_clineno, align 4, !dbg !4933, !tbaa !1557
  %73 = load i32, ptr %__pyx_clineno, align 4, !dbg !4933, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4936

if.end108:                                        ; preds = %if.end95
  %74 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4937, !tbaa !1461
  call void @Py_DECREF(ptr noundef %74), !dbg !4937
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !4938, !tbaa !1461
  %75 = load ptr, ptr %__pyx_r, align 8, !dbg !4939, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %75), !dbg !4939
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !4940, !tbaa !1461
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !4941
  br label %__pyx_L0, !dbg !4942

if.end109:                                        ; preds = %if.end55
  %76 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !4943, !tbaa !1461
  %77 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !4944, !tbaa !1461
  %call110 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %76, ptr noundef %77), !dbg !4945
  store ptr %call110, ptr %__pyx_t_3, align 8, !dbg !4946, !tbaa !1461
  %78 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4947, !tbaa !1461
  %tobool111 = icmp ne ptr %78, null, !dbg !4947
  %lnot112 = xor i1 %tobool111, true, !dbg !4947
  %lnot114 = xor i1 %lnot112, true, !dbg !4947
  %lnot116 = xor i1 %lnot114, true, !dbg !4947
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !4947
  %conv118 = sext i32 %lnot.ext117 to i64, !dbg !4947
  %expval119 = call i64 @llvm.expect.i64(i64 %conv118, i64 0), !dbg !4947
  %tobool120 = icmp ne i64 %expval119, 0, !dbg !4947
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !4949

if.then121:                                       ; preds = %if.end109
  %79 = load ptr, ptr @__pyx_f, align 16, !dbg !4950, !tbaa !1461
  store ptr %79, ptr %__pyx_filename, align 8, !dbg !4950, !tbaa !1461
  %80 = load ptr, ptr %__pyx_filename, align 8, !dbg !4950, !tbaa !1461
  store i32 40, ptr %__pyx_lineno, align 4, !dbg !4950, !tbaa !1557
  %81 = load i32, ptr %__pyx_lineno, align 4, !dbg !4950, !tbaa !1557
  store i32 3171, ptr %__pyx_clineno, align 4, !dbg !4950, !tbaa !1557
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !4950, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4953

if.end122:                                        ; preds = %if.end109
  %83 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4954, !tbaa !1461
  store ptr %83, ptr %__pyx_v_id_, align 8, !dbg !4955, !tbaa !1461
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !4956, !tbaa !1461
  %84 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !4957, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %84, i32 0, i32 4, !dbg !4957
  %85 = load ptr, ptr %refs, align 8, !dbg !4957, !tbaa !4959
  %cmp123 = icmp eq ptr %85, @_Py_NoneStruct, !dbg !4957
  %lnot125 = xor i1 %cmp123, true, !dbg !4957
  %lnot127 = xor i1 %lnot125, true, !dbg !4957
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !4957
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !4957
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0), !dbg !4957
  %tobool131 = icmp ne i64 %expval130, 0, !dbg !4957
  br i1 %tobool131, label %if.then132, label %if.end134, !dbg !4960

if.then132:                                       ; preds = %if.end122
  %86 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !4961, !tbaa !1461
  %call133 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %86, ptr noundef @.str.24, ptr noundef @.str.26), !dbg !4963
  %87 = load ptr, ptr @__pyx_f, align 16, !dbg !4964, !tbaa !1461
  store ptr %87, ptr %__pyx_filename, align 8, !dbg !4964, !tbaa !1461
  %88 = load ptr, ptr %__pyx_filename, align 8, !dbg !4964, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !4964, !tbaa !1557
  %89 = load i32, ptr %__pyx_lineno, align 4, !dbg !4964, !tbaa !1557
  store i32 3185, ptr %__pyx_clineno, align 4, !dbg !4964, !tbaa !1557
  %90 = load i32, ptr %__pyx_clineno, align 4, !dbg !4964, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4967

if.end134:                                        ; preds = %if.end122
  %call135 = call ptr @PyList_New(i64 noundef 0), !dbg !4968
  store ptr %call135, ptr %__pyx_t_3, align 8, !dbg !4969, !tbaa !1461
  %91 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4970, !tbaa !1461
  %tobool136 = icmp ne ptr %91, null, !dbg !4970
  %lnot137 = xor i1 %tobool136, true, !dbg !4970
  %lnot139 = xor i1 %lnot137, true, !dbg !4970
  %lnot141 = xor i1 %lnot139, true, !dbg !4970
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !4970
  %conv143 = sext i32 %lnot.ext142 to i64, !dbg !4970
  %expval144 = call i64 @llvm.expect.i64(i64 %conv143, i64 0), !dbg !4970
  %tobool145 = icmp ne i64 %expval144, 0, !dbg !4970
  br i1 %tobool145, label %if.then146, label %if.end147, !dbg !4972

if.then146:                                       ; preds = %if.end134
  %92 = load ptr, ptr @__pyx_f, align 16, !dbg !4973, !tbaa !1461
  store ptr %92, ptr %__pyx_filename, align 8, !dbg !4973, !tbaa !1461
  %93 = load ptr, ptr %__pyx_filename, align 8, !dbg !4973, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !4973, !tbaa !1557
  %94 = load i32, ptr %__pyx_lineno, align 4, !dbg !4973, !tbaa !1557
  store i32 3187, ptr %__pyx_clineno, align 4, !dbg !4973, !tbaa !1557
  %95 = load i32, ptr %__pyx_clineno, align 4, !dbg !4973, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4976

if.end147:                                        ; preds = %if.end134
  %call148 = call ptr @PyTuple_New(i64 noundef 2), !dbg !4977
  store ptr %call148, ptr %__pyx_t_4, align 8, !dbg !4978, !tbaa !1461
  %96 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4979, !tbaa !1461
  %tobool149 = icmp ne ptr %96, null, !dbg !4979
  %lnot150 = xor i1 %tobool149, true, !dbg !4979
  %lnot152 = xor i1 %lnot150, true, !dbg !4979
  %lnot154 = xor i1 %lnot152, true, !dbg !4979
  %lnot.ext155 = zext i1 %lnot154 to i32, !dbg !4979
  %conv156 = sext i32 %lnot.ext155 to i64, !dbg !4979
  %expval157 = call i64 @llvm.expect.i64(i64 %conv156, i64 0), !dbg !4979
  %tobool158 = icmp ne i64 %expval157, 0, !dbg !4979
  br i1 %tobool158, label %if.then159, label %if.end160, !dbg !4981

if.then159:                                       ; preds = %if.end147
  %97 = load ptr, ptr @__pyx_f, align 16, !dbg !4982, !tbaa !1461
  store ptr %97, ptr %__pyx_filename, align 8, !dbg !4982, !tbaa !1461
  %98 = load ptr, ptr %__pyx_filename, align 8, !dbg !4982, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !4982, !tbaa !1557
  %99 = load i32, ptr %__pyx_lineno, align 4, !dbg !4982, !tbaa !1557
  store i32 3189, ptr %__pyx_clineno, align 4, !dbg !4982, !tbaa !1557
  %100 = load i32, ptr %__pyx_clineno, align 4, !dbg !4982, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4985

if.end160:                                        ; preds = %if.end147
  %101 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4986, !tbaa !1461
  %__pyx_int_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %101, i32 0, i32 56, !dbg !4986
  %102 = load ptr, ptr %__pyx_int_0, align 8, !dbg !4986, !tbaa !1783
  call void @Py_INCREF(ptr noundef %102), !dbg !4986
  %103 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4987, !tbaa !1461
  %104 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !4987, !tbaa !1461
  %__pyx_int_0161 = getelementptr inbounds %struct.__pyx_mstate, ptr %104, i32 0, i32 56, !dbg !4987
  %105 = load ptr, ptr %__pyx_int_0161, align 8, !dbg !4987, !tbaa !1783
  call void @PyTuple_SET_ITEM(ptr noundef %103, i64 noundef 0, ptr noundef %105), !dbg !4987
  br i1 false, label %if.then162, label %if.end163, !dbg !4989

if.then162:                                       ; preds = %if.end160
  %106 = load ptr, ptr @__pyx_f, align 16, !dbg !4990, !tbaa !1461
  store ptr %106, ptr %__pyx_filename, align 8, !dbg !4990, !tbaa !1461
  %107 = load ptr, ptr %__pyx_filename, align 8, !dbg !4990, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !4990, !tbaa !1557
  %108 = load i32, ptr %__pyx_lineno, align 4, !dbg !4990, !tbaa !1557
  store i32 3193, ptr %__pyx_clineno, align 4, !dbg !4990, !tbaa !1557
  %109 = load i32, ptr %__pyx_clineno, align 4, !dbg !4990, !tbaa !1557
  br label %__pyx_L1_error, !dbg !4993

if.end163:                                        ; preds = %if.end160
  %110 = load ptr, ptr %__pyx_t_4, align 8, !dbg !4994, !tbaa !1461
  %111 = load ptr, ptr %__pyx_t_3, align 8, !dbg !4994, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %110, i64 noundef 1, ptr noundef %111), !dbg !4994
  br i1 false, label %if.then164, label %if.end165, !dbg !4996

if.then164:                                       ; preds = %if.end163
  %112 = load ptr, ptr @__pyx_f, align 16, !dbg !4997, !tbaa !1461
  store ptr %112, ptr %__pyx_filename, align 8, !dbg !4997, !tbaa !1461
  %113 = load ptr, ptr %__pyx_filename, align 8, !dbg !4997, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !4997, !tbaa !1557
  %114 = load i32, ptr %__pyx_lineno, align 4, !dbg !4997, !tbaa !1557
  store i32 3195, ptr %__pyx_clineno, align 4, !dbg !4997, !tbaa !1557
  %115 = load i32, ptr %__pyx_clineno, align 4, !dbg !4997, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5000

if.end165:                                        ; preds = %if.end163
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5001, !tbaa !1461
  %116 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5002, !tbaa !1461
  %refs166 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %116, i32 0, i32 4, !dbg !5003
  %117 = load ptr, ptr %refs166, align 8, !dbg !5003, !tbaa !4959
  %118 = load ptr, ptr %__pyx_v_id_, align 8, !dbg !5004, !tbaa !1461
  %119 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5005, !tbaa !1461
  %call167 = call ptr @__Pyx_PyDict_GetItemDefault(ptr noundef %117, ptr noundef %118, ptr noundef %119), !dbg !5006
  store ptr %call167, ptr %__pyx_t_3, align 8, !dbg !5007, !tbaa !1461
  %120 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5008, !tbaa !1461
  %tobool168 = icmp ne ptr %120, null, !dbg !5008
  %lnot169 = xor i1 %tobool168, true, !dbg !5008
  %lnot171 = xor i1 %lnot169, true, !dbg !5008
  %lnot173 = xor i1 %lnot171, true, !dbg !5008
  %lnot.ext174 = zext i1 %lnot173 to i32, !dbg !5008
  %conv175 = sext i32 %lnot.ext174 to i64, !dbg !5008
  %expval176 = call i64 @llvm.expect.i64(i64 %conv175, i64 0), !dbg !5008
  %tobool177 = icmp ne i64 %expval176, 0, !dbg !5008
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !5010

if.then178:                                       ; preds = %if.end165
  %121 = load ptr, ptr @__pyx_f, align 16, !dbg !5011, !tbaa !1461
  store ptr %121, ptr %__pyx_filename, align 8, !dbg !5011, !tbaa !1461
  %122 = load ptr, ptr %__pyx_filename, align 8, !dbg !5011, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !5011, !tbaa !1557
  %123 = load i32, ptr %__pyx_lineno, align 4, !dbg !5011, !tbaa !1557
  store i32 3197, ptr %__pyx_clineno, align 4, !dbg !5011, !tbaa !1557
  %124 = load i32, ptr %__pyx_clineno, align 4, !dbg !5011, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5014

if.end179:                                        ; preds = %if.end165
  %125 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5015, !tbaa !1461
  call void @Py_DECREF(ptr noundef %125), !dbg !5015
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !5016, !tbaa !1461
  %126 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5017, !tbaa !1461
  %call180 = call i32 @Py_IS_TYPE(ptr noundef %126, ptr noundef @PyTuple_Type), !dbg !5017
  %tobool181 = icmp ne i32 %call180, 0, !dbg !5017
  %lnot182 = xor i1 %tobool181, true, !dbg !5017
  %lnot184 = xor i1 %lnot182, true, !dbg !5017
  %lnot.ext185 = zext i1 %lnot184 to i32, !dbg !5017
  %conv186 = sext i32 %lnot.ext185 to i64, !dbg !5017
  %expval187 = call i64 @llvm.expect.i64(i64 %conv186, i64 1), !dbg !5017
  %tobool188 = icmp ne i64 %expval187, 0, !dbg !5017
  br i1 %tobool188, label %if.then191, label %lor.lhs.false, !dbg !5018

lor.lhs.false:                                    ; preds = %if.end179
  %127 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5019, !tbaa !1461
  %call189 = call i32 @Py_IS_TYPE(ptr noundef %127, ptr noundef @PyList_Type), !dbg !5019
  %tobool190 = icmp ne i32 %call189, 0, !dbg !5019
  br i1 %tobool190, label %if.then191, label %if.else232, !dbg !5020

if.then191:                                       ; preds = %lor.lhs.false, %if.end179
  call void @llvm.lifetime.start.p0(i64 8, ptr %sequence) #10, !dbg !5021
  tail call void @llvm.dbg.declare(metadata ptr %sequence, metadata !958, metadata !DIExpression()), !dbg !5022
  %128 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5023, !tbaa !1461
  store ptr %128, ptr %sequence, align 8, !dbg !5022, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !5024
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !961, metadata !DIExpression()), !dbg !5025
  %129 = load ptr, ptr %sequence, align 8, !dbg !5026, !tbaa !1461
  %call192 = call i64 @Py_SIZE(ptr noundef %129), !dbg !5026
  store i64 %call192, ptr %size, align 8, !dbg !5025, !tbaa !1836
  %130 = load i64, ptr %size, align 8, !dbg !5027, !tbaa !1836
  %cmp193 = icmp ne i64 %130, 2, !dbg !5027
  %lnot195 = xor i1 %cmp193, true, !dbg !5027
  %lnot197 = xor i1 %lnot195, true, !dbg !5027
  %lnot.ext198 = zext i1 %lnot197 to i32, !dbg !5027
  %conv199 = sext i32 %lnot.ext198 to i64, !dbg !5027
  %expval200 = call i64 @llvm.expect.i64(i64 %conv199, i64 0), !dbg !5027
  %tobool201 = icmp ne i64 %expval200, 0, !dbg !5027
  br i1 %tobool201, label %if.then202, label %if.end212, !dbg !5029

if.then202:                                       ; preds = %if.then191
  %131 = load i64, ptr %size, align 8, !dbg !5030, !tbaa !1836
  %cmp203 = icmp sgt i64 %131, 2, !dbg !5033
  br i1 %cmp203, label %if.then205, label %if.else206, !dbg !5034

if.then205:                                       ; preds = %if.then202
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef 2), !dbg !5035
  br label %if.end211, !dbg !5035

if.else206:                                       ; preds = %if.then202
  %132 = load i64, ptr %size, align 8, !dbg !5036, !tbaa !1836
  %cmp207 = icmp sge i64 %132, 0, !dbg !5038
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !5039

if.then209:                                       ; preds = %if.else206
  %133 = load i64, ptr %size, align 8, !dbg !5040, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %133), !dbg !5041
  br label %if.end210, !dbg !5041

if.end210:                                        ; preds = %if.then209, %if.else206
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then205
  %134 = load ptr, ptr @__pyx_f, align 16, !dbg !5042, !tbaa !1461
  store ptr %134, ptr %__pyx_filename, align 8, !dbg !5042, !tbaa !1461
  %135 = load ptr, ptr %__pyx_filename, align 8, !dbg !5042, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !5042, !tbaa !1557
  %136 = load i32, ptr %__pyx_lineno, align 4, !dbg !5042, !tbaa !1557
  store i32 3206, ptr %__pyx_clineno, align 4, !dbg !5042, !tbaa !1557
  %137 = load i32, ptr %__pyx_clineno, align 4, !dbg !5042, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5045

if.end212:                                        ; preds = %if.then191
  %138 = load ptr, ptr %sequence, align 8, !dbg !5046, !tbaa !1461
  %call213 = call i32 @Py_IS_TYPE(ptr noundef %138, ptr noundef @PyTuple_Type), !dbg !5046
  %tobool214 = icmp ne i32 %call213, 0, !dbg !5046
  %lnot215 = xor i1 %tobool214, true, !dbg !5046
  %lnot217 = xor i1 %lnot215, true, !dbg !5046
  %lnot.ext218 = zext i1 %lnot217 to i32, !dbg !5046
  %conv219 = sext i32 %lnot.ext218 to i64, !dbg !5046
  %expval220 = call i64 @llvm.expect.i64(i64 %conv219, i64 1), !dbg !5046
  %tobool221 = icmp ne i64 %expval220, 0, !dbg !5046
  br i1 %tobool221, label %if.then222, label %if.else225, !dbg !5048

if.then222:                                       ; preds = %if.end212
  %139 = load ptr, ptr %sequence, align 8, !dbg !5049, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %139, i32 0, i32 1, !dbg !5049
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !5049
  %140 = load ptr, ptr %arrayidx, align 8, !dbg !5049, !tbaa !1461
  store ptr %140, ptr %__pyx_t_4, align 8, !dbg !5051, !tbaa !1461
  %141 = load ptr, ptr %sequence, align 8, !dbg !5052, !tbaa !1461
  %ob_item223 = getelementptr inbounds %struct.PyTupleObject, ptr %141, i32 0, i32 1, !dbg !5052
  %arrayidx224 = getelementptr [1 x ptr], ptr %ob_item223, i64 0, i64 1, !dbg !5052
  %142 = load ptr, ptr %arrayidx224, align 8, !dbg !5052, !tbaa !1461
  store ptr %142, ptr %__pyx_t_2, align 8, !dbg !5053, !tbaa !1461
  br label %if.end230, !dbg !5054

if.else225:                                       ; preds = %if.end212
  %143 = load ptr, ptr %sequence, align 8, !dbg !5055, !tbaa !1461
  %ob_item226 = getelementptr inbounds %struct.PyListObject, ptr %143, i32 0, i32 1, !dbg !5055
  %144 = load ptr, ptr %ob_item226, align 8, !dbg !5055, !tbaa !1868
  %arrayidx227 = getelementptr ptr, ptr %144, i64 0, !dbg !5055
  %145 = load ptr, ptr %arrayidx227, align 8, !dbg !5055, !tbaa !1461
  store ptr %145, ptr %__pyx_t_4, align 8, !dbg !5057, !tbaa !1461
  %146 = load ptr, ptr %sequence, align 8, !dbg !5058, !tbaa !1461
  %ob_item228 = getelementptr inbounds %struct.PyListObject, ptr %146, i32 0, i32 1, !dbg !5058
  %147 = load ptr, ptr %ob_item228, align 8, !dbg !5058, !tbaa !1868
  %arrayidx229 = getelementptr ptr, ptr %147, i64 1, !dbg !5058
  %148 = load ptr, ptr %arrayidx229, align 8, !dbg !5058, !tbaa !1461
  store ptr %148, ptr %__pyx_t_2, align 8, !dbg !5059, !tbaa !1461
  br label %if.end230

if.end230:                                        ; preds = %if.else225, %if.then222
  %149 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5060, !tbaa !1461
  call void @Py_INCREF(ptr noundef %149), !dbg !5060
  %150 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5061, !tbaa !1461
  call void @Py_INCREF(ptr noundef %150), !dbg !5061
  %151 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5062, !tbaa !1461
  call void @Py_DECREF(ptr noundef %151), !dbg !5062
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5063, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5064
  br label %cleanup, !dbg !5064

cleanup:                                          ; preds = %if.end211, %if.end230
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !5064
  call void @llvm.lifetime.end.p0(i64 8, ptr %sequence) #10, !dbg !5064
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup368 [
    i32 0, label %cleanup.cont
    i32 4, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end287, !dbg !5065

if.else232:                                       ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr %index) #10, !dbg !5066
  tail call void @llvm.dbg.declare(metadata ptr %index, metadata !962, metadata !DIExpression()), !dbg !5067
  store i64 -1, ptr %index, align 8, !dbg !5067, !tbaa !1836
  %152 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5068, !tbaa !1461
  %call233 = call ptr @PyObject_GetIter(ptr noundef %152), !dbg !5069
  store ptr %call233, ptr %__pyx_t_1, align 8, !dbg !5070, !tbaa !1461
  %153 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5071, !tbaa !1461
  %tobool234 = icmp ne ptr %153, null, !dbg !5071
  %lnot235 = xor i1 %tobool234, true, !dbg !5071
  %lnot237 = xor i1 %lnot235, true, !dbg !5071
  %lnot239 = xor i1 %lnot237, true, !dbg !5071
  %lnot.ext240 = zext i1 %lnot239 to i32, !dbg !5071
  %conv241 = sext i32 %lnot.ext240 to i64, !dbg !5071
  %expval242 = call i64 @llvm.expect.i64(i64 %conv241, i64 0), !dbg !5071
  %tobool243 = icmp ne i64 %expval242, 0, !dbg !5071
  br i1 %tobool243, label %if.then244, label %if.end245, !dbg !5073

if.then244:                                       ; preds = %if.else232
  %154 = load ptr, ptr @__pyx_f, align 16, !dbg !5074, !tbaa !1461
  store ptr %154, ptr %__pyx_filename, align 8, !dbg !5074, !tbaa !1461
  %155 = load ptr, ptr %__pyx_filename, align 8, !dbg !5074, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !5074, !tbaa !1557
  %156 = load i32, ptr %__pyx_lineno, align 4, !dbg !5074, !tbaa !1557
  store i32 3227, ptr %__pyx_clineno, align 4, !dbg !5074, !tbaa !1557
  %157 = load i32, ptr %__pyx_clineno, align 4, !dbg !5074, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup284, !dbg !5077

if.end245:                                        ; preds = %if.else232
  %158 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5078, !tbaa !1461
  call void @Py_DECREF(ptr noundef %158), !dbg !5078
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5079, !tbaa !1461
  %159 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5080, !tbaa !1461
  %call246 = call ptr @Py_TYPE(ptr noundef %159), !dbg !5080
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call246, i32 0, i32 26, !dbg !5080
  %160 = load ptr, ptr %tp_iternext, align 8, !dbg !5080, !tbaa !1896
  store ptr %160, ptr %__pyx_t_6, align 8, !dbg !5081, !tbaa !1461
  store i64 0, ptr %index, align 8, !dbg !5082, !tbaa !1836
  %161 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5083, !tbaa !1461
  %162 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5084, !tbaa !1461
  %call247 = call ptr %161(ptr noundef %162), !dbg !5083
  store ptr %call247, ptr %__pyx_t_4, align 8, !dbg !5085, !tbaa !1461
  %163 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5086, !tbaa !1461
  %tobool248 = icmp ne ptr %163, null, !dbg !5086
  %lnot249 = xor i1 %tobool248, true, !dbg !5086
  %lnot251 = xor i1 %lnot249, true, !dbg !5086
  %lnot253 = xor i1 %lnot251, true, !dbg !5086
  %lnot.ext254 = zext i1 %lnot253 to i32, !dbg !5086
  %conv255 = sext i32 %lnot.ext254 to i64, !dbg !5086
  %expval256 = call i64 @llvm.expect.i64(i64 %conv255, i64 0), !dbg !5086
  %tobool257 = icmp ne i64 %expval256, 0, !dbg !5086
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !5088

if.then258:                                       ; preds = %if.end245
  br label %__pyx_L4_unpacking_failed, !dbg !5089

if.end259:                                        ; preds = %if.end245
  store i64 1, ptr %index, align 8, !dbg !5090, !tbaa !1836
  %164 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5091, !tbaa !1461
  %165 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5092, !tbaa !1461
  %call260 = call ptr %164(ptr noundef %165), !dbg !5091
  store ptr %call260, ptr %__pyx_t_2, align 8, !dbg !5093, !tbaa !1461
  %166 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5094, !tbaa !1461
  %tobool261 = icmp ne ptr %166, null, !dbg !5094
  %lnot262 = xor i1 %tobool261, true, !dbg !5094
  %lnot264 = xor i1 %lnot262, true, !dbg !5094
  %lnot266 = xor i1 %lnot264, true, !dbg !5094
  %lnot.ext267 = zext i1 %lnot266 to i32, !dbg !5094
  %conv268 = sext i32 %lnot.ext267 to i64, !dbg !5094
  %expval269 = call i64 @llvm.expect.i64(i64 %conv268, i64 0), !dbg !5094
  %tobool270 = icmp ne i64 %expval269, 0, !dbg !5094
  br i1 %tobool270, label %if.then271, label %if.end272, !dbg !5096

if.then271:                                       ; preds = %if.end259
  br label %__pyx_L4_unpacking_failed, !dbg !5097

if.end272:                                        ; preds = %if.end259
  %167 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5098, !tbaa !1461
  %168 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5100, !tbaa !1461
  %call273 = call ptr %167(ptr noundef %168), !dbg !5098
  %call274 = call i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %call273, i64 noundef 2), !dbg !5101
  %cmp275 = icmp slt i32 %call274, 0, !dbg !5102
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !5103

if.then277:                                       ; preds = %if.end272
  %169 = load ptr, ptr @__pyx_f, align 16, !dbg !5104, !tbaa !1461
  store ptr %169, ptr %__pyx_filename, align 8, !dbg !5104, !tbaa !1461
  %170 = load ptr, ptr %__pyx_filename, align 8, !dbg !5104, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !5104, !tbaa !1557
  %171 = load i32, ptr %__pyx_lineno, align 4, !dbg !5104, !tbaa !1557
  store i32 3235, ptr %__pyx_clineno, align 4, !dbg !5104, !tbaa !1557
  %172 = load i32, ptr %__pyx_clineno, align 4, !dbg !5104, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup284, !dbg !5107

if.end278:                                        ; preds = %if.end272
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !5108, !tbaa !1461
  %173 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5109, !tbaa !1461
  call void @Py_DECREF(ptr noundef %173), !dbg !5109
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5110, !tbaa !1461
  br label %__pyx_L5_unpacking_done, !dbg !5111

__pyx_L4_unpacking_failed:                        ; preds = %if.then271, %if.then258
  tail call void @llvm.dbg.label(metadata !964), !dbg !5112
  %174 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5113, !tbaa !1461
  call void @Py_DECREF(ptr noundef %174), !dbg !5113
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5114, !tbaa !1461
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !5115, !tbaa !1461
  %call279 = call i32 @__Pyx_IterFinish(), !dbg !5116
  %cmp280 = icmp eq i32 %call279, 0, !dbg !5118
  br i1 %cmp280, label %if.then282, label %if.end283, !dbg !5119

if.then282:                                       ; preds = %__pyx_L4_unpacking_failed
  %175 = load i64, ptr %index, align 8, !dbg !5120, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %175), !dbg !5121
  br label %if.end283, !dbg !5121

if.end283:                                        ; preds = %if.then282, %__pyx_L4_unpacking_failed
  %176 = load ptr, ptr @__pyx_f, align 16, !dbg !5122, !tbaa !1461
  store ptr %176, ptr %__pyx_filename, align 8, !dbg !5122, !tbaa !1461
  %177 = load ptr, ptr %__pyx_filename, align 8, !dbg !5122, !tbaa !1461
  store i32 41, ptr %__pyx_lineno, align 4, !dbg !5122, !tbaa !1557
  %178 = load i32, ptr %__pyx_lineno, align 4, !dbg !5122, !tbaa !1557
  store i32 3243, ptr %__pyx_clineno, align 4, !dbg !5122, !tbaa !1557
  %179 = load i32, ptr %__pyx_clineno, align 4, !dbg !5122, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup284, !dbg !5125

__pyx_L5_unpacking_done:                          ; preds = %if.end278
  tail call void @llvm.dbg.label(metadata !965), !dbg !5126
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5127
  br label %cleanup284, !dbg !5127

cleanup284:                                       ; preds = %if.end283, %if.then277, %if.then244, %__pyx_L5_unpacking_done
  call void @llvm.lifetime.end.p0(i64 8, ptr %index) #10, !dbg !5127
  %cleanup.dest285 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest285, label %cleanup368 [
    i32 0, label %cleanup.cont286
    i32 4, label %__pyx_L1_error
  ]

cleanup.cont286:                                  ; preds = %cleanup284
  br label %if.end287

if.end287:                                        ; preds = %cleanup.cont286, %cleanup.cont
  %180 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5128, !tbaa !1461
  store ptr %180, ptr %__pyx_v_count, align 8, !dbg !5129, !tbaa !1461
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !5130, !tbaa !1461
  %181 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5131, !tbaa !1461
  store ptr %181, ptr %__pyx_v_linenumbers, align 8, !dbg !5132, !tbaa !1461
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5133, !tbaa !1461
  %182 = load ptr, ptr %__pyx_v_count, align 8, !dbg !5134, !tbaa !1461
  %183 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5135, !tbaa !1461
  %__pyx_int_1 = getelementptr inbounds %struct.__pyx_mstate, ptr %183, i32 0, i32 57, !dbg !5135
  %184 = load ptr, ptr %__pyx_int_1, align 8, !dbg !5135, !tbaa !2301
  %call288 = call ptr @__Pyx_PyInt_AddObjC(ptr noundef %182, ptr noundef %184, i64 noundef 1, i32 noundef 0, i32 noundef 0), !dbg !5136
  store ptr %call288, ptr %__pyx_t_3, align 8, !dbg !5137, !tbaa !1461
  %185 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5138, !tbaa !1461
  %tobool289 = icmp ne ptr %185, null, !dbg !5138
  %lnot290 = xor i1 %tobool289, true, !dbg !5138
  %lnot292 = xor i1 %lnot290, true, !dbg !5138
  %lnot294 = xor i1 %lnot292, true, !dbg !5138
  %lnot.ext295 = zext i1 %lnot294 to i32, !dbg !5138
  %conv296 = sext i32 %lnot.ext295 to i64, !dbg !5138
  %expval297 = call i64 @llvm.expect.i64(i64 %conv296, i64 0), !dbg !5138
  %tobool298 = icmp ne i64 %expval297, 0, !dbg !5138
  br i1 %tobool298, label %if.then299, label %if.end300, !dbg !5140

if.then299:                                       ; preds = %if.end287
  %186 = load ptr, ptr @__pyx_f, align 16, !dbg !5141, !tbaa !1461
  store ptr %186, ptr %__pyx_filename, align 8, !dbg !5141, !tbaa !1461
  %187 = load ptr, ptr %__pyx_filename, align 8, !dbg !5141, !tbaa !1461
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !5141, !tbaa !1557
  %188 = load i32, ptr %__pyx_lineno, align 4, !dbg !5141, !tbaa !1557
  store i32 3258, ptr %__pyx_clineno, align 4, !dbg !5141, !tbaa !1557
  %189 = load i32, ptr %__pyx_clineno, align 4, !dbg !5141, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5144

if.end300:                                        ; preds = %if.end287
  %call301 = call ptr @PyTuple_New(i64 noundef 2), !dbg !5145
  store ptr %call301, ptr %__pyx_t_2, align 8, !dbg !5146, !tbaa !1461
  %190 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5147, !tbaa !1461
  %tobool302 = icmp ne ptr %190, null, !dbg !5147
  %lnot303 = xor i1 %tobool302, true, !dbg !5147
  %lnot305 = xor i1 %lnot303, true, !dbg !5147
  %lnot307 = xor i1 %lnot305, true, !dbg !5147
  %lnot.ext308 = zext i1 %lnot307 to i32, !dbg !5147
  %conv309 = sext i32 %lnot.ext308 to i64, !dbg !5147
  %expval310 = call i64 @llvm.expect.i64(i64 %conv309, i64 0), !dbg !5147
  %tobool311 = icmp ne i64 %expval310, 0, !dbg !5147
  br i1 %tobool311, label %if.then312, label %if.end313, !dbg !5149

if.then312:                                       ; preds = %if.end300
  %191 = load ptr, ptr @__pyx_f, align 16, !dbg !5150, !tbaa !1461
  store ptr %191, ptr %__pyx_filename, align 8, !dbg !5150, !tbaa !1461
  %192 = load ptr, ptr %__pyx_filename, align 8, !dbg !5150, !tbaa !1461
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !5150, !tbaa !1557
  %193 = load i32, ptr %__pyx_lineno, align 4, !dbg !5150, !tbaa !1557
  store i32 3260, ptr %__pyx_clineno, align 4, !dbg !5150, !tbaa !1557
  %194 = load i32, ptr %__pyx_clineno, align 4, !dbg !5150, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5153

if.end313:                                        ; preds = %if.end300
  %195 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5154, !tbaa !1461
  %196 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5154, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %195, i64 noundef 0, ptr noundef %196), !dbg !5154
  br i1 false, label %if.then314, label %if.end315, !dbg !5156

if.then314:                                       ; preds = %if.end313
  %197 = load ptr, ptr @__pyx_f, align 16, !dbg !5157, !tbaa !1461
  store ptr %197, ptr %__pyx_filename, align 8, !dbg !5157, !tbaa !1461
  %198 = load ptr, ptr %__pyx_filename, align 8, !dbg !5157, !tbaa !1461
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !5157, !tbaa !1557
  %199 = load i32, ptr %__pyx_lineno, align 4, !dbg !5157, !tbaa !1557
  store i32 3263, ptr %__pyx_clineno, align 4, !dbg !5157, !tbaa !1557
  %200 = load i32, ptr %__pyx_clineno, align 4, !dbg !5157, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5160

if.end315:                                        ; preds = %if.end313
  %201 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5161, !tbaa !1461
  call void @Py_INCREF(ptr noundef %201), !dbg !5161
  %202 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5162, !tbaa !1461
  %203 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5162, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %202, i64 noundef 1, ptr noundef %203), !dbg !5162
  br i1 false, label %if.then316, label %if.end317, !dbg !5164

if.then316:                                       ; preds = %if.end315
  %204 = load ptr, ptr @__pyx_f, align 16, !dbg !5165, !tbaa !1461
  store ptr %204, ptr %__pyx_filename, align 8, !dbg !5165, !tbaa !1461
  %205 = load ptr, ptr %__pyx_filename, align 8, !dbg !5165, !tbaa !1461
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !5165, !tbaa !1557
  %206 = load i32, ptr %__pyx_lineno, align 4, !dbg !5165, !tbaa !1557
  store i32 3266, ptr %__pyx_clineno, align 4, !dbg !5165, !tbaa !1557
  %207 = load i32, ptr %__pyx_clineno, align 4, !dbg !5165, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5168

if.end317:                                        ; preds = %if.end315
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5169, !tbaa !1461
  %208 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5170, !tbaa !1461
  %refs318 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %208, i32 0, i32 4, !dbg !5170
  %209 = load ptr, ptr %refs318, align 8, !dbg !5170, !tbaa !4959
  %cmp319 = icmp eq ptr %209, @_Py_NoneStruct, !dbg !5170
  %lnot321 = xor i1 %cmp319, true, !dbg !5170
  %lnot323 = xor i1 %lnot321, true, !dbg !5170
  %lnot.ext324 = zext i1 %lnot323 to i32, !dbg !5170
  %conv325 = sext i32 %lnot.ext324 to i64, !dbg !5170
  %expval326 = call i64 @llvm.expect.i64(i64 %conv325, i64 0), !dbg !5170
  %tobool327 = icmp ne i64 %expval326, 0, !dbg !5170
  br i1 %tobool327, label %if.then328, label %if.end329, !dbg !5172

if.then328:                                       ; preds = %if.end317
  %210 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5173, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %210, ptr noundef @.str.27), !dbg !5175
  %211 = load ptr, ptr @__pyx_f, align 16, !dbg !5176, !tbaa !1461
  store ptr %211, ptr %__pyx_filename, align 8, !dbg !5176, !tbaa !1461
  %212 = load ptr, ptr %__pyx_filename, align 8, !dbg !5176, !tbaa !1461
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !5176, !tbaa !1557
  %213 = load i32, ptr %__pyx_lineno, align 4, !dbg !5176, !tbaa !1557
  store i32 3270, ptr %__pyx_clineno, align 4, !dbg !5176, !tbaa !1557
  %214 = load i32, ptr %__pyx_clineno, align 4, !dbg !5176, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5179

if.end329:                                        ; preds = %if.end317
  %215 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5180, !tbaa !1461
  %refs330 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %215, i32 0, i32 4, !dbg !5180
  %216 = load ptr, ptr %refs330, align 8, !dbg !5180, !tbaa !4959
  %217 = load ptr, ptr %__pyx_v_id_, align 8, !dbg !5180, !tbaa !1461
  %218 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5180, !tbaa !1461
  %call331 = call i32 @PyDict_SetItem(ptr noundef %216, ptr noundef %217, ptr noundef %218), !dbg !5180
  %cmp332 = icmp slt i32 %call331, 0, !dbg !5180
  %lnot334 = xor i1 %cmp332, true, !dbg !5180
  %lnot336 = xor i1 %lnot334, true, !dbg !5180
  %lnot.ext337 = zext i1 %lnot336 to i32, !dbg !5180
  %conv338 = sext i32 %lnot.ext337 to i64, !dbg !5180
  %expval339 = call i64 @llvm.expect.i64(i64 %conv338, i64 0), !dbg !5180
  %tobool340 = icmp ne i64 %expval339, 0, !dbg !5180
  br i1 %tobool340, label %if.then341, label %if.end342, !dbg !5182

if.then341:                                       ; preds = %if.end329
  %219 = load ptr, ptr @__pyx_f, align 16, !dbg !5183, !tbaa !1461
  store ptr %219, ptr %__pyx_filename, align 8, !dbg !5183, !tbaa !1461
  %220 = load ptr, ptr %__pyx_filename, align 8, !dbg !5183, !tbaa !1461
  store i32 42, ptr %__pyx_lineno, align 4, !dbg !5183, !tbaa !1557
  %221 = load i32, ptr %__pyx_lineno, align 4, !dbg !5183, !tbaa !1557
  store i32 3272, ptr %__pyx_clineno, align 4, !dbg !5183, !tbaa !1557
  %222 = load i32, ptr %__pyx_clineno, align 4, !dbg !5183, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5186

if.end342:                                        ; preds = %if.end329
  %223 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5187, !tbaa !1461
  call void @Py_DECREF(ptr noundef %223), !dbg !5187
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5188, !tbaa !1461
  %224 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !5189, !tbaa !1836
  %call343 = call ptr @PyLong_FromSsize_t(i64 noundef %224), !dbg !5190
  store ptr %call343, ptr %__pyx_t_2, align 8, !dbg !5191, !tbaa !1461
  %225 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5192, !tbaa !1461
  %tobool344 = icmp ne ptr %225, null, !dbg !5192
  %lnot345 = xor i1 %tobool344, true, !dbg !5192
  %lnot347 = xor i1 %lnot345, true, !dbg !5192
  %lnot349 = xor i1 %lnot347, true, !dbg !5192
  %lnot.ext350 = zext i1 %lnot349 to i32, !dbg !5192
  %conv351 = sext i32 %lnot.ext350 to i64, !dbg !5192
  %expval352 = call i64 @llvm.expect.i64(i64 %conv351, i64 0), !dbg !5192
  %tobool353 = icmp ne i64 %expval352, 0, !dbg !5192
  br i1 %tobool353, label %if.then354, label %if.end355, !dbg !5194

if.then354:                                       ; preds = %if.end342
  %226 = load ptr, ptr @__pyx_f, align 16, !dbg !5195, !tbaa !1461
  store ptr %226, ptr %__pyx_filename, align 8, !dbg !5195, !tbaa !1461
  %227 = load ptr, ptr %__pyx_filename, align 8, !dbg !5195, !tbaa !1461
  store i32 43, ptr %__pyx_lineno, align 4, !dbg !5195, !tbaa !1557
  %228 = load i32, ptr %__pyx_lineno, align 4, !dbg !5195, !tbaa !1557
  store i32 3282, ptr %__pyx_clineno, align 4, !dbg !5195, !tbaa !1557
  %229 = load i32, ptr %__pyx_clineno, align 4, !dbg !5195, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5198

if.end355:                                        ; preds = %if.end342
  %230 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5199, !tbaa !1461
  %231 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5200, !tbaa !1461
  %call356 = call i32 @__Pyx_PyObject_Append(ptr noundef %230, ptr noundef %231), !dbg !5201
  store i32 %call356, ptr %__pyx_t_5, align 4, !dbg !5202, !tbaa !1557
  %232 = load i32, ptr %__pyx_t_5, align 4, !dbg !5203, !tbaa !1557
  %cmp357 = icmp eq i32 %232, -1, !dbg !5203
  %lnot359 = xor i1 %cmp357, true, !dbg !5203
  %lnot361 = xor i1 %lnot359, true, !dbg !5203
  %lnot.ext362 = zext i1 %lnot361 to i32, !dbg !5203
  %conv363 = sext i32 %lnot.ext362 to i64, !dbg !5203
  %expval364 = call i64 @llvm.expect.i64(i64 %conv363, i64 0), !dbg !5203
  %tobool365 = icmp ne i64 %expval364, 0, !dbg !5203
  br i1 %tobool365, label %if.then366, label %if.end367, !dbg !5205

if.then366:                                       ; preds = %if.end355
  %233 = load ptr, ptr @__pyx_f, align 16, !dbg !5206, !tbaa !1461
  store ptr %233, ptr %__pyx_filename, align 8, !dbg !5206, !tbaa !1461
  %234 = load ptr, ptr %__pyx_filename, align 8, !dbg !5206, !tbaa !1461
  store i32 43, ptr %__pyx_lineno, align 4, !dbg !5206, !tbaa !1557
  %235 = load i32, ptr %__pyx_lineno, align 4, !dbg !5206, !tbaa !1557
  store i32 3284, ptr %__pyx_clineno, align 4, !dbg !5206, !tbaa !1557
  %236 = load i32, ptr %__pyx_clineno, align 4, !dbg !5206, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5209

if.end367:                                        ; preds = %if.end355
  %237 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5210, !tbaa !1461
  call void @Py_DECREF(ptr noundef %237), !dbg !5210
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5211, !tbaa !1461
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !5212, !tbaa !1461
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !5213
  br label %__pyx_L0, !dbg !5214

__pyx_L1_error:                                   ; preds = %cleanup284, %cleanup, %if.then366, %if.then354, %if.then341, %if.then328, %if.then316, %if.then314, %if.then312, %if.then299, %if.then178, %if.then164, %if.then162, %if.then159, %if.then146, %if.then132, %if.then121, %if.then107, %if.then94, %if.then81, %if.then67, %if.then54, %if.then41, %if.then
  tail call void @llvm.dbg.label(metadata !966), !dbg !5215
  %238 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5216, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %238), !dbg !5216
  %239 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5217, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %239), !dbg !5217
  %240 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5218, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %240), !dbg !5218
  %241 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5219, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %241), !dbg !5219
  %242 = load i32, ptr %__pyx_clineno, align 4, !dbg !5220, !tbaa !1557
  %243 = load i32, ptr %__pyx_lineno, align 4, !dbg !5221, !tbaa !1557
  %244 = load ptr, ptr %__pyx_filename, align 8, !dbg !5222, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.28, i32 noundef %242, i32 noundef %243, ptr noundef %244), !dbg !5223
  store ptr null, ptr %__pyx_r, align 8, !dbg !5224, !tbaa !1461
  br label %__pyx_L0, !dbg !5225

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end367, %if.end108
  tail call void @llvm.dbg.label(metadata !967), !dbg !5226
  %245 = load ptr, ptr %__pyx_v_id_, align 8, !dbg !5227, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %245), !dbg !5227
  %246 = load ptr, ptr %__pyx_v_count, align 8, !dbg !5228, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %246), !dbg !5228
  %247 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5229, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %247), !dbg !5229
  %248 = load ptr, ptr %__pyx_r, align 8, !dbg !5230, !tbaa !1461
  store ptr %248, ptr %retval, align 8, !dbg !5231
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup368, !dbg !5231

cleanup368:                                       ; preds = %__pyx_L0, %cleanup284, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_linenumbers) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_count) #10, !dbg !5232
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_id_) #10, !dbg !5232
  %249 = load ptr, ptr %retval, align 8, !dbg !5232
  ret ptr %249, !dbg !5232
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_obj, i64 noundef %__pyx_v_lineno, i32 noundef %__pyx_v_is_null) #0 !dbg !1045 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_v_is_null.addr = alloca i32, align 4
  %__pyx_v_id_ = alloca ptr, align 8
  %__pyx_v_count = alloca ptr, align 8
  %__pyx_v_linenumbers = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %sequence = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %index = alloca i64, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !1047, metadata !DIExpression()), !dbg !5233
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_obj.addr, metadata !1048, metadata !DIExpression()), !dbg !5234
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !1049, metadata !DIExpression()), !dbg !5235
  store i32 %__pyx_v_is_null, ptr %__pyx_v_is_null.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_is_null.addr, metadata !1050, metadata !DIExpression()), !dbg !5236
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_id_) #10, !dbg !5237
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_id_, metadata !1051, metadata !DIExpression()), !dbg !5238
  store ptr null, ptr %__pyx_v_id_, align 8, !dbg !5238, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_count) #10, !dbg !5239
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_count, metadata !1052, metadata !DIExpression()), !dbg !5240
  store ptr null, ptr %__pyx_v_count, align 8, !dbg !5240, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_linenumbers) #10, !dbg !5241
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_linenumbers, metadata !1053, metadata !DIExpression()), !dbg !5242
  store ptr null, ptr %__pyx_v_linenumbers, align 8, !dbg !5242, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #10, !dbg !5243
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !1054, metadata !DIExpression()), !dbg !5244
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !5245
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !1055, metadata !DIExpression()), !dbg !5246
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5246, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !5247
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !1056, metadata !DIExpression()), !dbg !5248
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5248, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !5249
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !1057, metadata !DIExpression()), !dbg !5250
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5250, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !5251
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !1058, metadata !DIExpression()), !dbg !5252
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !5252, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !5253
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !1059, metadata !DIExpression()), !dbg !5254
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !5255
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !1060, metadata !DIExpression()), !dbg !5256
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #10, !dbg !5257
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !1061, metadata !DIExpression()), !dbg !5258
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !5259
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !1062, metadata !DIExpression()), !dbg !5260
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_9) #10, !dbg !5261
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !1063, metadata !DIExpression()), !dbg !5262
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !5263
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1064, metadata !DIExpression()), !dbg !5264
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !5264, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !5265
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1065, metadata !DIExpression()), !dbg !5266
  store ptr null, ptr %__pyx_filename, align 8, !dbg !5266, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !5267
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1066, metadata !DIExpression()), !dbg !5268
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !5268, !tbaa !1557
  br label %do.body, !dbg !5269

do.body:                                          ; preds = %entry
  %0 = load i64, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_version, align 8, !dbg !5270, !tbaa !1836
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5270, !tbaa !1461
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 0, !dbg !5270
  %2 = load ptr, ptr %__pyx_d, align 8, !dbg !5270, !tbaa !1598
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %2, i32 0, i32 2, !dbg !5270
  %3 = load i64, ptr %ma_version_tag, align 8, !dbg !5270, !tbaa !4834
  %cmp = icmp eq i64 %0, %3, !dbg !5270
  %lnot = xor i1 %cmp, true, !dbg !5270
  %lnot1 = xor i1 %lnot, true, !dbg !5270
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5270
  %conv = sext i32 %lnot.ext to i64, !dbg !5270
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5270
  %tobool = icmp ne i64 %expval, 0, !dbg !5270
  br i1 %tobool, label %cond.true, label %cond.false11, !dbg !5270

cond.true:                                        ; preds = %do.body
  %4 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_cached_value, align 8, !dbg !5270, !tbaa !1461
  %tobool2 = icmp ne ptr %4, null, !dbg !5270
  %lnot3 = xor i1 %tobool2, true, !dbg !5270
  %lnot5 = xor i1 %lnot3, true, !dbg !5270
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !5270
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !5270
  %expval8 = call i64 @llvm.expect.i64(i64 %conv7, i64 1), !dbg !5270
  %tobool9 = icmp ne i64 %expval8, 0, !dbg !5270
  br i1 %tobool9, label %cond.true10, label %cond.false, !dbg !5270

cond.true10:                                      ; preds = %cond.true
  %5 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_cached_value, align 8, !dbg !5270, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !5270
  %6 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_cached_value, align 8, !dbg !5270, !tbaa !1461
  br label %cond.end, !dbg !5270

cond.false:                                       ; preds = %cond.true
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5270, !tbaa !1461
  %__pyx_n_s_LOG_ALL = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 10, !dbg !5270
  %8 = load ptr, ptr %__pyx_n_s_LOG_ALL, align 8, !dbg !5270, !tbaa !1962
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %8), !dbg !5270
  br label %cond.end, !dbg !5270

cond.end:                                         ; preds = %cond.false, %cond.true10
  %cond = phi ptr [ %6, %cond.true10 ], [ %call, %cond.false ], !dbg !5270
  br label %cond.end14, !dbg !5270

cond.false11:                                     ; preds = %do.body
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5270, !tbaa !1461
  %__pyx_n_s_LOG_ALL12 = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 10, !dbg !5270
  %10 = load ptr, ptr %__pyx_n_s_LOG_ALL12, align 8, !dbg !5270, !tbaa !1962
  %call13 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %10, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_version, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref.__pyx_dict_cached_value), !dbg !5270
  br label %cond.end14, !dbg !5270

cond.end14:                                       ; preds = %cond.false11, %cond.end
  %cond15 = phi ptr [ %cond, %cond.end ], [ %call13, %cond.false11 ], !dbg !5270
  store ptr %cond15, ptr %__pyx_t_1, align 8, !dbg !5270, !tbaa !1461
  br label %do.cond, !dbg !5270

do.cond:                                          ; preds = %cond.end14
  br label %do.end, !dbg !5270

do.end:                                           ; preds = %do.cond
  %11 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5272, !tbaa !1461
  %tobool16 = icmp ne ptr %11, null, !dbg !5272
  %lnot17 = xor i1 %tobool16, true, !dbg !5272
  %lnot19 = xor i1 %lnot17, true, !dbg !5272
  %lnot21 = xor i1 %lnot19, true, !dbg !5272
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !5272
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !5272
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !5272
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !5272
  br i1 %tobool25, label %if.then, label %if.end, !dbg !5274

if.then:                                          ; preds = %do.end
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !5275, !tbaa !1461
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !5275, !tbaa !1461
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !5275, !tbaa !1461
  store i32 47, ptr %__pyx_lineno, align 4, !dbg !5275, !tbaa !1557
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !5275, !tbaa !1557
  store i32 3349, ptr %__pyx_clineno, align 4, !dbg !5275, !tbaa !1557
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !5275, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5278

if.end:                                           ; preds = %do.end
  %16 = load i32, ptr %__pyx_v_is_null.addr, align 4, !dbg !5279, !tbaa !1557
  %tobool26 = icmp ne i32 %16, 0, !dbg !5279
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !5281

if.then27:                                        ; preds = %if.end
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5282, !tbaa !1461
  %__pyx_kp_u_NULL = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 12, !dbg !5282
  %18 = load ptr, ptr %__pyx_kp_u_NULL, align 8, !dbg !5282, !tbaa !4848
  call void @Py_INCREF(ptr noundef %18), !dbg !5282
  %19 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5284, !tbaa !1461
  %__pyx_kp_u_NULL28 = getelementptr inbounds %struct.__pyx_mstate, ptr %19, i32 0, i32 12, !dbg !5284
  %20 = load ptr, ptr %__pyx_kp_u_NULL28, align 8, !dbg !5284, !tbaa !4848
  store ptr %20, ptr %__pyx_t_2, align 8, !dbg !5285, !tbaa !1461
  br label %if.end29, !dbg !5286

if.else:                                          ; preds = %if.end
  %21 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !5287, !tbaa !1461
  call void @Py_INCREF(ptr noundef %21), !dbg !5287
  %22 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !5289, !tbaa !1461
  store ptr %22, ptr %__pyx_t_2, align 8, !dbg !5290, !tbaa !1461
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then27
  %23 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !5291, !tbaa !1836
  %call30 = call ptr @PyLong_FromSsize_t(i64 noundef %23), !dbg !5292
  store ptr %call30, ptr %__pyx_t_3, align 8, !dbg !5293, !tbaa !1461
  %24 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5294, !tbaa !1461
  %tobool31 = icmp ne ptr %24, null, !dbg !5294
  %lnot32 = xor i1 %tobool31, true, !dbg !5294
  %lnot34 = xor i1 %lnot32, true, !dbg !5294
  %lnot36 = xor i1 %lnot34, true, !dbg !5294
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !5294
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !5294
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0), !dbg !5294
  %tobool40 = icmp ne i64 %expval39, 0, !dbg !5294
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !5296

if.then41:                                        ; preds = %if.end29
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !5297, !tbaa !1461
  store ptr %25, ptr %__pyx_filename, align 8, !dbg !5297, !tbaa !1461
  %26 = load ptr, ptr %__pyx_filename, align 8, !dbg !5297, !tbaa !1461
  store i32 47, ptr %__pyx_lineno, align 4, !dbg !5297, !tbaa !1557
  %27 = load i32, ptr %__pyx_lineno, align 4, !dbg !5297, !tbaa !1557
  store i32 3358, ptr %__pyx_clineno, align 4, !dbg !5297, !tbaa !1557
  %28 = load i32, ptr %__pyx_clineno, align 4, !dbg !5297, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5300

if.end42:                                         ; preds = %if.end29
  %29 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5301, !tbaa !1461
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5302, !tbaa !1461
  %__pyx_n_u_delref = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 29, !dbg !5302
  %31 = load ptr, ptr %__pyx_n_u_delref, align 8, !dbg !5302, !tbaa !5303
  %32 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5304, !tbaa !1461
  %33 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5305, !tbaa !1461
  %call43 = call ptr @__pyx_f_6Cython_7Runtime_8refnanny_log(ptr noundef %29, ptr noundef %31, ptr noundef %32, ptr noundef %33), !dbg !5306
  store ptr %call43, ptr %__pyx_t_4, align 8, !dbg !5307, !tbaa !1461
  %34 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5308, !tbaa !1461
  %tobool44 = icmp ne ptr %34, null, !dbg !5308
  %lnot45 = xor i1 %tobool44, true, !dbg !5308
  %lnot47 = xor i1 %lnot45, true, !dbg !5308
  %lnot49 = xor i1 %lnot47, true, !dbg !5308
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !5308
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !5308
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0), !dbg !5308
  %tobool53 = icmp ne i64 %expval52, 0, !dbg !5308
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !5310

if.then54:                                        ; preds = %if.end42
  %35 = load ptr, ptr @__pyx_f, align 16, !dbg !5311, !tbaa !1461
  store ptr %35, ptr %__pyx_filename, align 8, !dbg !5311, !tbaa !1461
  %36 = load ptr, ptr %__pyx_filename, align 8, !dbg !5311, !tbaa !1461
  store i32 47, ptr %__pyx_lineno, align 4, !dbg !5311, !tbaa !1557
  %37 = load i32, ptr %__pyx_lineno, align 4, !dbg !5311, !tbaa !1557
  store i32 3360, ptr %__pyx_clineno, align 4, !dbg !5311, !tbaa !1557
  %38 = load i32, ptr %__pyx_clineno, align 4, !dbg !5311, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5314

if.end55:                                         ; preds = %if.end42
  %39 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5315, !tbaa !1461
  call void @Py_DECREF(ptr noundef %39), !dbg !5315
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5316, !tbaa !1461
  %40 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5317, !tbaa !1461
  call void @Py_DECREF(ptr noundef %40), !dbg !5317
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5318, !tbaa !1461
  %41 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5319, !tbaa !1461
  call void @Py_DECREF(ptr noundef %41), !dbg !5319
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5320, !tbaa !1461
  %42 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5321, !tbaa !1461
  call void @Py_DECREF(ptr noundef %42), !dbg !5321
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !5322, !tbaa !1461
  %43 = load i32, ptr %__pyx_v_is_null.addr, align 4, !dbg !5323, !tbaa !1557
  %tobool56 = icmp ne i32 %43, 0, !dbg !5323
  br i1 %tobool56, label %if.then57, label %if.end109, !dbg !5325

if.then57:                                        ; preds = %if.end55
  %44 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5326, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %44, i32 0, i32 5, !dbg !5326
  %45 = load ptr, ptr %errors, align 8, !dbg !5326, !tbaa !4894
  %cmp58 = icmp eq ptr %45, @_Py_NoneStruct, !dbg !5326
  %lnot60 = xor i1 %cmp58, true, !dbg !5326
  %lnot62 = xor i1 %lnot60, true, !dbg !5326
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !5326
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !5326
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0), !dbg !5326
  %tobool66 = icmp ne i64 %expval65, 0, !dbg !5326
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !5329

if.then67:                                        ; preds = %if.then57
  %46 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !5330, !tbaa !1461
  %call68 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %46, ptr noundef @.str.24, ptr noundef @.str.25), !dbg !5332
  %47 = load ptr, ptr @__pyx_f, align 16, !dbg !5333, !tbaa !1461
  store ptr %47, ptr %__pyx_filename, align 8, !dbg !5333, !tbaa !1461
  %48 = load ptr, ptr %__pyx_filename, align 8, !dbg !5333, !tbaa !1461
  store i32 49, ptr %__pyx_lineno, align 4, !dbg !5333, !tbaa !1557
  %49 = load i32, ptr %__pyx_lineno, align 4, !dbg !5333, !tbaa !1557
  store i32 3385, ptr %__pyx_clineno, align 4, !dbg !5333, !tbaa !1557
  %50 = load i32, ptr %__pyx_clineno, align 4, !dbg !5333, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5336

if.end69:                                         ; preds = %if.then57
  %51 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !5337, !tbaa !1836
  %call70 = call ptr @__Pyx_PyUnicode_From_Py_ssize_t(i64 noundef %51, i64 noundef 0, i8 noundef signext 32, i8 noundef signext 100), !dbg !5338
  store ptr %call70, ptr %__pyx_t_4, align 8, !dbg !5339, !tbaa !1461
  %52 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5340, !tbaa !1461
  %tobool71 = icmp ne ptr %52, null, !dbg !5340
  %lnot72 = xor i1 %tobool71, true, !dbg !5340
  %lnot74 = xor i1 %lnot72, true, !dbg !5340
  %lnot76 = xor i1 %lnot74, true, !dbg !5340
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !5340
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !5340
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0), !dbg !5340
  %tobool80 = icmp ne i64 %expval79, 0, !dbg !5340
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !5342

if.then81:                                        ; preds = %if.end69
  %53 = load ptr, ptr @__pyx_f, align 16, !dbg !5343, !tbaa !1461
  store ptr %53, ptr %__pyx_filename, align 8, !dbg !5343, !tbaa !1461
  %54 = load ptr, ptr %__pyx_filename, align 8, !dbg !5343, !tbaa !1461
  store i32 49, ptr %__pyx_lineno, align 4, !dbg !5343, !tbaa !1557
  %55 = load i32, ptr %__pyx_lineno, align 4, !dbg !5343, !tbaa !1557
  store i32 3387, ptr %__pyx_clineno, align 4, !dbg !5343, !tbaa !1557
  %56 = load i32, ptr %__pyx_clineno, align 4, !dbg !5343, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5346

if.end82:                                         ; preds = %if.end69
  %57 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5347, !tbaa !1461
  %__pyx_kp_u_NULL_argument_on_line = getelementptr inbounds %struct.__pyx_mstate, ptr %57, i32 0, i32 13, !dbg !5347
  %58 = load ptr, ptr %__pyx_kp_u_NULL_argument_on_line, align 8, !dbg !5347, !tbaa !4914
  %59 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5347, !tbaa !1461
  %call83 = call ptr @PyUnicode_Concat(ptr noundef %58, ptr noundef %59), !dbg !5347
  store ptr %call83, ptr %__pyx_t_3, align 8, !dbg !5348, !tbaa !1461
  %60 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5349, !tbaa !1461
  %tobool84 = icmp ne ptr %60, null, !dbg !5349
  %lnot85 = xor i1 %tobool84, true, !dbg !5349
  %lnot87 = xor i1 %lnot85, true, !dbg !5349
  %lnot89 = xor i1 %lnot87, true, !dbg !5349
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !5349
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !5349
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 0), !dbg !5349
  %tobool93 = icmp ne i64 %expval92, 0, !dbg !5349
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !5351

if.then94:                                        ; preds = %if.end82
  %61 = load ptr, ptr @__pyx_f, align 16, !dbg !5352, !tbaa !1461
  store ptr %61, ptr %__pyx_filename, align 8, !dbg !5352, !tbaa !1461
  %62 = load ptr, ptr %__pyx_filename, align 8, !dbg !5352, !tbaa !1461
  store i32 49, ptr %__pyx_lineno, align 4, !dbg !5352, !tbaa !1557
  %63 = load i32, ptr %__pyx_lineno, align 4, !dbg !5352, !tbaa !1557
  store i32 3389, ptr %__pyx_clineno, align 4, !dbg !5352, !tbaa !1557
  %64 = load i32, ptr %__pyx_clineno, align 4, !dbg !5352, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5355

if.end95:                                         ; preds = %if.end82
  %65 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5356, !tbaa !1461
  call void @Py_DECREF(ptr noundef %65), !dbg !5356
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !5357, !tbaa !1461
  %66 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5358, !tbaa !1461
  %errors96 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %66, i32 0, i32 5, !dbg !5359
  %67 = load ptr, ptr %errors96, align 8, !dbg !5359, !tbaa !4894
  %68 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5360, !tbaa !1461
  %call97 = call i32 @__Pyx_PyList_Append(ptr noundef %67, ptr noundef %68), !dbg !5361
  store i32 %call97, ptr %__pyx_t_5, align 4, !dbg !5362, !tbaa !1557
  %69 = load i32, ptr %__pyx_t_5, align 4, !dbg !5363, !tbaa !1557
  %cmp98 = icmp eq i32 %69, -1, !dbg !5363
  %lnot100 = xor i1 %cmp98, true, !dbg !5363
  %lnot102 = xor i1 %lnot100, true, !dbg !5363
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !5363
  %conv104 = sext i32 %lnot.ext103 to i64, !dbg !5363
  %expval105 = call i64 @llvm.expect.i64(i64 %conv104, i64 0), !dbg !5363
  %tobool106 = icmp ne i64 %expval105, 0, !dbg !5363
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !5365

if.then107:                                       ; preds = %if.end95
  %70 = load ptr, ptr @__pyx_f, align 16, !dbg !5366, !tbaa !1461
  store ptr %70, ptr %__pyx_filename, align 8, !dbg !5366, !tbaa !1461
  %71 = load ptr, ptr %__pyx_filename, align 8, !dbg !5366, !tbaa !1461
  store i32 49, ptr %__pyx_lineno, align 4, !dbg !5366, !tbaa !1557
  %72 = load i32, ptr %__pyx_lineno, align 4, !dbg !5366, !tbaa !1557
  store i32 3392, ptr %__pyx_clineno, align 4, !dbg !5366, !tbaa !1557
  %73 = load i32, ptr %__pyx_clineno, align 4, !dbg !5366, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5369

if.end108:                                        ; preds = %if.end95
  %74 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5370, !tbaa !1461
  call void @Py_DECREF(ptr noundef %74), !dbg !5370
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5371, !tbaa !1461
  store i32 0, ptr %__pyx_r, align 4, !dbg !5372, !tbaa !1557
  br label %__pyx_L0, !dbg !5373

if.end109:                                        ; preds = %if.end55
  %75 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !5374, !tbaa !1461
  %76 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !5375, !tbaa !1461
  %call110 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %75, ptr noundef %76), !dbg !5376
  store ptr %call110, ptr %__pyx_t_3, align 8, !dbg !5377, !tbaa !1461
  %77 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5378, !tbaa !1461
  %tobool111 = icmp ne ptr %77, null, !dbg !5378
  %lnot112 = xor i1 %tobool111, true, !dbg !5378
  %lnot114 = xor i1 %lnot112, true, !dbg !5378
  %lnot116 = xor i1 %lnot114, true, !dbg !5378
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !5378
  %conv118 = sext i32 %lnot.ext117 to i64, !dbg !5378
  %expval119 = call i64 @llvm.expect.i64(i64 %conv118, i64 0), !dbg !5378
  %tobool120 = icmp ne i64 %expval119, 0, !dbg !5378
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !5380

if.then121:                                       ; preds = %if.end109
  %78 = load ptr, ptr @__pyx_f, align 16, !dbg !5381, !tbaa !1461
  store ptr %78, ptr %__pyx_filename, align 8, !dbg !5381, !tbaa !1461
  %79 = load ptr, ptr %__pyx_filename, align 8, !dbg !5381, !tbaa !1461
  store i32 51, ptr %__pyx_lineno, align 4, !dbg !5381, !tbaa !1557
  %80 = load i32, ptr %__pyx_lineno, align 4, !dbg !5381, !tbaa !1557
  store i32 3421, ptr %__pyx_clineno, align 4, !dbg !5381, !tbaa !1557
  %81 = load i32, ptr %__pyx_clineno, align 4, !dbg !5381, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5384

if.end122:                                        ; preds = %if.end109
  %82 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5385, !tbaa !1461
  store ptr %82, ptr %__pyx_v_id_, align 8, !dbg !5386, !tbaa !1461
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5387, !tbaa !1461
  %83 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5388, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %83, i32 0, i32 4, !dbg !5388
  %84 = load ptr, ptr %refs, align 8, !dbg !5388, !tbaa !4959
  %cmp123 = icmp eq ptr %84, @_Py_NoneStruct, !dbg !5388
  %lnot125 = xor i1 %cmp123, true, !dbg !5388
  %lnot127 = xor i1 %lnot125, true, !dbg !5388
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !5388
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !5388
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0), !dbg !5388
  %tobool131 = icmp ne i64 %expval130, 0, !dbg !5388
  br i1 %tobool131, label %if.then132, label %if.end134, !dbg !5390

if.then132:                                       ; preds = %if.end122
  %85 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !5391, !tbaa !1461
  %call133 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %85, ptr noundef @.str.24, ptr noundef @.str.26), !dbg !5393
  %86 = load ptr, ptr @__pyx_f, align 16, !dbg !5394, !tbaa !1461
  store ptr %86, ptr %__pyx_filename, align 8, !dbg !5394, !tbaa !1461
  %87 = load ptr, ptr %__pyx_filename, align 8, !dbg !5394, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5394, !tbaa !1557
  %88 = load i32, ptr %__pyx_lineno, align 4, !dbg !5394, !tbaa !1557
  store i32 3435, ptr %__pyx_clineno, align 4, !dbg !5394, !tbaa !1557
  %89 = load i32, ptr %__pyx_clineno, align 4, !dbg !5394, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5397

if.end134:                                        ; preds = %if.end122
  %call135 = call ptr @PyList_New(i64 noundef 0), !dbg !5398
  store ptr %call135, ptr %__pyx_t_3, align 8, !dbg !5399, !tbaa !1461
  %90 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5400, !tbaa !1461
  %tobool136 = icmp ne ptr %90, null, !dbg !5400
  %lnot137 = xor i1 %tobool136, true, !dbg !5400
  %lnot139 = xor i1 %lnot137, true, !dbg !5400
  %lnot141 = xor i1 %lnot139, true, !dbg !5400
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !5400
  %conv143 = sext i32 %lnot.ext142 to i64, !dbg !5400
  %expval144 = call i64 @llvm.expect.i64(i64 %conv143, i64 0), !dbg !5400
  %tobool145 = icmp ne i64 %expval144, 0, !dbg !5400
  br i1 %tobool145, label %if.then146, label %if.end147, !dbg !5402

if.then146:                                       ; preds = %if.end134
  %91 = load ptr, ptr @__pyx_f, align 16, !dbg !5403, !tbaa !1461
  store ptr %91, ptr %__pyx_filename, align 8, !dbg !5403, !tbaa !1461
  %92 = load ptr, ptr %__pyx_filename, align 8, !dbg !5403, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5403, !tbaa !1557
  %93 = load i32, ptr %__pyx_lineno, align 4, !dbg !5403, !tbaa !1557
  store i32 3437, ptr %__pyx_clineno, align 4, !dbg !5403, !tbaa !1557
  %94 = load i32, ptr %__pyx_clineno, align 4, !dbg !5403, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5406

if.end147:                                        ; preds = %if.end134
  %call148 = call ptr @PyTuple_New(i64 noundef 2), !dbg !5407
  store ptr %call148, ptr %__pyx_t_4, align 8, !dbg !5408, !tbaa !1461
  %95 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5409, !tbaa !1461
  %tobool149 = icmp ne ptr %95, null, !dbg !5409
  %lnot150 = xor i1 %tobool149, true, !dbg !5409
  %lnot152 = xor i1 %lnot150, true, !dbg !5409
  %lnot154 = xor i1 %lnot152, true, !dbg !5409
  %lnot.ext155 = zext i1 %lnot154 to i32, !dbg !5409
  %conv156 = sext i32 %lnot.ext155 to i64, !dbg !5409
  %expval157 = call i64 @llvm.expect.i64(i64 %conv156, i64 0), !dbg !5409
  %tobool158 = icmp ne i64 %expval157, 0, !dbg !5409
  br i1 %tobool158, label %if.then159, label %if.end160, !dbg !5411

if.then159:                                       ; preds = %if.end147
  %96 = load ptr, ptr @__pyx_f, align 16, !dbg !5412, !tbaa !1461
  store ptr %96, ptr %__pyx_filename, align 8, !dbg !5412, !tbaa !1461
  %97 = load ptr, ptr %__pyx_filename, align 8, !dbg !5412, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5412, !tbaa !1557
  %98 = load i32, ptr %__pyx_lineno, align 4, !dbg !5412, !tbaa !1557
  store i32 3439, ptr %__pyx_clineno, align 4, !dbg !5412, !tbaa !1557
  %99 = load i32, ptr %__pyx_clineno, align 4, !dbg !5412, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5415

if.end160:                                        ; preds = %if.end147
  %100 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5416, !tbaa !1461
  %__pyx_int_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %100, i32 0, i32 56, !dbg !5416
  %101 = load ptr, ptr %__pyx_int_0, align 8, !dbg !5416, !tbaa !1783
  call void @Py_INCREF(ptr noundef %101), !dbg !5416
  %102 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5417, !tbaa !1461
  %103 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5417, !tbaa !1461
  %__pyx_int_0161 = getelementptr inbounds %struct.__pyx_mstate, ptr %103, i32 0, i32 56, !dbg !5417
  %104 = load ptr, ptr %__pyx_int_0161, align 8, !dbg !5417, !tbaa !1783
  call void @PyTuple_SET_ITEM(ptr noundef %102, i64 noundef 0, ptr noundef %104), !dbg !5417
  br i1 false, label %if.then162, label %if.end163, !dbg !5419

if.then162:                                       ; preds = %if.end160
  %105 = load ptr, ptr @__pyx_f, align 16, !dbg !5420, !tbaa !1461
  store ptr %105, ptr %__pyx_filename, align 8, !dbg !5420, !tbaa !1461
  %106 = load ptr, ptr %__pyx_filename, align 8, !dbg !5420, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5420, !tbaa !1557
  %107 = load i32, ptr %__pyx_lineno, align 4, !dbg !5420, !tbaa !1557
  store i32 3443, ptr %__pyx_clineno, align 4, !dbg !5420, !tbaa !1557
  %108 = load i32, ptr %__pyx_clineno, align 4, !dbg !5420, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5423

if.end163:                                        ; preds = %if.end160
  %109 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5424, !tbaa !1461
  %110 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5424, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %109, i64 noundef 1, ptr noundef %110), !dbg !5424
  br i1 false, label %if.then164, label %if.end165, !dbg !5426

if.then164:                                       ; preds = %if.end163
  %111 = load ptr, ptr @__pyx_f, align 16, !dbg !5427, !tbaa !1461
  store ptr %111, ptr %__pyx_filename, align 8, !dbg !5427, !tbaa !1461
  %112 = load ptr, ptr %__pyx_filename, align 8, !dbg !5427, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5427, !tbaa !1557
  %113 = load i32, ptr %__pyx_lineno, align 4, !dbg !5427, !tbaa !1557
  store i32 3445, ptr %__pyx_clineno, align 4, !dbg !5427, !tbaa !1557
  %114 = load i32, ptr %__pyx_clineno, align 4, !dbg !5427, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5430

if.end165:                                        ; preds = %if.end163
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5431, !tbaa !1461
  %115 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5432, !tbaa !1461
  %refs166 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %115, i32 0, i32 4, !dbg !5433
  %116 = load ptr, ptr %refs166, align 8, !dbg !5433, !tbaa !4959
  %117 = load ptr, ptr %__pyx_v_id_, align 8, !dbg !5434, !tbaa !1461
  %118 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5435, !tbaa !1461
  %call167 = call ptr @__Pyx_PyDict_GetItemDefault(ptr noundef %116, ptr noundef %117, ptr noundef %118), !dbg !5436
  store ptr %call167, ptr %__pyx_t_3, align 8, !dbg !5437, !tbaa !1461
  %119 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5438, !tbaa !1461
  %tobool168 = icmp ne ptr %119, null, !dbg !5438
  %lnot169 = xor i1 %tobool168, true, !dbg !5438
  %lnot171 = xor i1 %lnot169, true, !dbg !5438
  %lnot173 = xor i1 %lnot171, true, !dbg !5438
  %lnot.ext174 = zext i1 %lnot173 to i32, !dbg !5438
  %conv175 = sext i32 %lnot.ext174 to i64, !dbg !5438
  %expval176 = call i64 @llvm.expect.i64(i64 %conv175, i64 0), !dbg !5438
  %tobool177 = icmp ne i64 %expval176, 0, !dbg !5438
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !5440

if.then178:                                       ; preds = %if.end165
  %120 = load ptr, ptr @__pyx_f, align 16, !dbg !5441, !tbaa !1461
  store ptr %120, ptr %__pyx_filename, align 8, !dbg !5441, !tbaa !1461
  %121 = load ptr, ptr %__pyx_filename, align 8, !dbg !5441, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5441, !tbaa !1557
  %122 = load i32, ptr %__pyx_lineno, align 4, !dbg !5441, !tbaa !1557
  store i32 3447, ptr %__pyx_clineno, align 4, !dbg !5441, !tbaa !1557
  %123 = load i32, ptr %__pyx_clineno, align 4, !dbg !5441, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5444

if.end179:                                        ; preds = %if.end165
  %124 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5445, !tbaa !1461
  call void @Py_DECREF(ptr noundef %124), !dbg !5445
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !5446, !tbaa !1461
  %125 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5447, !tbaa !1461
  %call180 = call i32 @Py_IS_TYPE(ptr noundef %125, ptr noundef @PyTuple_Type), !dbg !5447
  %tobool181 = icmp ne i32 %call180, 0, !dbg !5447
  %lnot182 = xor i1 %tobool181, true, !dbg !5447
  %lnot184 = xor i1 %lnot182, true, !dbg !5447
  %lnot.ext185 = zext i1 %lnot184 to i32, !dbg !5447
  %conv186 = sext i32 %lnot.ext185 to i64, !dbg !5447
  %expval187 = call i64 @llvm.expect.i64(i64 %conv186, i64 1), !dbg !5447
  %tobool188 = icmp ne i64 %expval187, 0, !dbg !5447
  br i1 %tobool188, label %if.then191, label %lor.lhs.false, !dbg !5448

lor.lhs.false:                                    ; preds = %if.end179
  %126 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5449, !tbaa !1461
  %call189 = call i32 @Py_IS_TYPE(ptr noundef %126, ptr noundef @PyList_Type), !dbg !5449
  %tobool190 = icmp ne i32 %call189, 0, !dbg !5449
  br i1 %tobool190, label %if.then191, label %if.else232, !dbg !5450

if.then191:                                       ; preds = %lor.lhs.false, %if.end179
  call void @llvm.lifetime.start.p0(i64 8, ptr %sequence) #10, !dbg !5451
  tail call void @llvm.dbg.declare(metadata ptr %sequence, metadata !1067, metadata !DIExpression()), !dbg !5452
  %127 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5453, !tbaa !1461
  store ptr %127, ptr %sequence, align 8, !dbg !5452, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !5454
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !1070, metadata !DIExpression()), !dbg !5455
  %128 = load ptr, ptr %sequence, align 8, !dbg !5456, !tbaa !1461
  %call192 = call i64 @Py_SIZE(ptr noundef %128), !dbg !5456
  store i64 %call192, ptr %size, align 8, !dbg !5455, !tbaa !1836
  %129 = load i64, ptr %size, align 8, !dbg !5457, !tbaa !1836
  %cmp193 = icmp ne i64 %129, 2, !dbg !5457
  %lnot195 = xor i1 %cmp193, true, !dbg !5457
  %lnot197 = xor i1 %lnot195, true, !dbg !5457
  %lnot.ext198 = zext i1 %lnot197 to i32, !dbg !5457
  %conv199 = sext i32 %lnot.ext198 to i64, !dbg !5457
  %expval200 = call i64 @llvm.expect.i64(i64 %conv199, i64 0), !dbg !5457
  %tobool201 = icmp ne i64 %expval200, 0, !dbg !5457
  br i1 %tobool201, label %if.then202, label %if.end212, !dbg !5459

if.then202:                                       ; preds = %if.then191
  %130 = load i64, ptr %size, align 8, !dbg !5460, !tbaa !1836
  %cmp203 = icmp sgt i64 %130, 2, !dbg !5463
  br i1 %cmp203, label %if.then205, label %if.else206, !dbg !5464

if.then205:                                       ; preds = %if.then202
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef 2), !dbg !5465
  br label %if.end211, !dbg !5465

if.else206:                                       ; preds = %if.then202
  %131 = load i64, ptr %size, align 8, !dbg !5466, !tbaa !1836
  %cmp207 = icmp sge i64 %131, 0, !dbg !5468
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !5469

if.then209:                                       ; preds = %if.else206
  %132 = load i64, ptr %size, align 8, !dbg !5470, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %132), !dbg !5471
  br label %if.end210, !dbg !5471

if.end210:                                        ; preds = %if.then209, %if.else206
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then205
  %133 = load ptr, ptr @__pyx_f, align 16, !dbg !5472, !tbaa !1461
  store ptr %133, ptr %__pyx_filename, align 8, !dbg !5472, !tbaa !1461
  %134 = load ptr, ptr %__pyx_filename, align 8, !dbg !5472, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5472, !tbaa !1557
  %135 = load i32, ptr %__pyx_lineno, align 4, !dbg !5472, !tbaa !1557
  store i32 3456, ptr %__pyx_clineno, align 4, !dbg !5472, !tbaa !1557
  %136 = load i32, ptr %__pyx_clineno, align 4, !dbg !5472, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5475

if.end212:                                        ; preds = %if.then191
  %137 = load ptr, ptr %sequence, align 8, !dbg !5476, !tbaa !1461
  %call213 = call i32 @Py_IS_TYPE(ptr noundef %137, ptr noundef @PyTuple_Type), !dbg !5476
  %tobool214 = icmp ne i32 %call213, 0, !dbg !5476
  %lnot215 = xor i1 %tobool214, true, !dbg !5476
  %lnot217 = xor i1 %lnot215, true, !dbg !5476
  %lnot.ext218 = zext i1 %lnot217 to i32, !dbg !5476
  %conv219 = sext i32 %lnot.ext218 to i64, !dbg !5476
  %expval220 = call i64 @llvm.expect.i64(i64 %conv219, i64 1), !dbg !5476
  %tobool221 = icmp ne i64 %expval220, 0, !dbg !5476
  br i1 %tobool221, label %if.then222, label %if.else225, !dbg !5478

if.then222:                                       ; preds = %if.end212
  %138 = load ptr, ptr %sequence, align 8, !dbg !5479, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %138, i32 0, i32 1, !dbg !5479
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !5479
  %139 = load ptr, ptr %arrayidx, align 8, !dbg !5479, !tbaa !1461
  store ptr %139, ptr %__pyx_t_4, align 8, !dbg !5481, !tbaa !1461
  %140 = load ptr, ptr %sequence, align 8, !dbg !5482, !tbaa !1461
  %ob_item223 = getelementptr inbounds %struct.PyTupleObject, ptr %140, i32 0, i32 1, !dbg !5482
  %arrayidx224 = getelementptr [1 x ptr], ptr %ob_item223, i64 0, i64 1, !dbg !5482
  %141 = load ptr, ptr %arrayidx224, align 8, !dbg !5482, !tbaa !1461
  store ptr %141, ptr %__pyx_t_2, align 8, !dbg !5483, !tbaa !1461
  br label %if.end230, !dbg !5484

if.else225:                                       ; preds = %if.end212
  %142 = load ptr, ptr %sequence, align 8, !dbg !5485, !tbaa !1461
  %ob_item226 = getelementptr inbounds %struct.PyListObject, ptr %142, i32 0, i32 1, !dbg !5485
  %143 = load ptr, ptr %ob_item226, align 8, !dbg !5485, !tbaa !1868
  %arrayidx227 = getelementptr ptr, ptr %143, i64 0, !dbg !5485
  %144 = load ptr, ptr %arrayidx227, align 8, !dbg !5485, !tbaa !1461
  store ptr %144, ptr %__pyx_t_4, align 8, !dbg !5487, !tbaa !1461
  %145 = load ptr, ptr %sequence, align 8, !dbg !5488, !tbaa !1461
  %ob_item228 = getelementptr inbounds %struct.PyListObject, ptr %145, i32 0, i32 1, !dbg !5488
  %146 = load ptr, ptr %ob_item228, align 8, !dbg !5488, !tbaa !1868
  %arrayidx229 = getelementptr ptr, ptr %146, i64 1, !dbg !5488
  %147 = load ptr, ptr %arrayidx229, align 8, !dbg !5488, !tbaa !1461
  store ptr %147, ptr %__pyx_t_2, align 8, !dbg !5489, !tbaa !1461
  br label %if.end230

if.end230:                                        ; preds = %if.else225, %if.then222
  %148 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5490, !tbaa !1461
  call void @Py_INCREF(ptr noundef %148), !dbg !5490
  %149 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5491, !tbaa !1461
  call void @Py_INCREF(ptr noundef %149), !dbg !5491
  %150 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5492, !tbaa !1461
  call void @Py_DECREF(ptr noundef %150), !dbg !5492
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5493, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5494
  br label %cleanup, !dbg !5494

cleanup:                                          ; preds = %if.end211, %if.end230
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !5494
  call void @llvm.lifetime.end.p0(i64 8, ptr %sequence) #10, !dbg !5494
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup494 [
    i32 0, label %cleanup.cont
    i32 4, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end287, !dbg !5495

if.else232:                                       ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr %index) #10, !dbg !5496
  tail call void @llvm.dbg.declare(metadata ptr %index, metadata !1071, metadata !DIExpression()), !dbg !5497
  store i64 -1, ptr %index, align 8, !dbg !5497, !tbaa !1836
  %151 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5498, !tbaa !1461
  %call233 = call ptr @PyObject_GetIter(ptr noundef %151), !dbg !5499
  store ptr %call233, ptr %__pyx_t_1, align 8, !dbg !5500, !tbaa !1461
  %152 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5501, !tbaa !1461
  %tobool234 = icmp ne ptr %152, null, !dbg !5501
  %lnot235 = xor i1 %tobool234, true, !dbg !5501
  %lnot237 = xor i1 %lnot235, true, !dbg !5501
  %lnot239 = xor i1 %lnot237, true, !dbg !5501
  %lnot.ext240 = zext i1 %lnot239 to i32, !dbg !5501
  %conv241 = sext i32 %lnot.ext240 to i64, !dbg !5501
  %expval242 = call i64 @llvm.expect.i64(i64 %conv241, i64 0), !dbg !5501
  %tobool243 = icmp ne i64 %expval242, 0, !dbg !5501
  br i1 %tobool243, label %if.then244, label %if.end245, !dbg !5503

if.then244:                                       ; preds = %if.else232
  %153 = load ptr, ptr @__pyx_f, align 16, !dbg !5504, !tbaa !1461
  store ptr %153, ptr %__pyx_filename, align 8, !dbg !5504, !tbaa !1461
  %154 = load ptr, ptr %__pyx_filename, align 8, !dbg !5504, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5504, !tbaa !1557
  %155 = load i32, ptr %__pyx_lineno, align 4, !dbg !5504, !tbaa !1557
  store i32 3477, ptr %__pyx_clineno, align 4, !dbg !5504, !tbaa !1557
  %156 = load i32, ptr %__pyx_clineno, align 4, !dbg !5504, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup284, !dbg !5507

if.end245:                                        ; preds = %if.else232
  %157 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5508, !tbaa !1461
  call void @Py_DECREF(ptr noundef %157), !dbg !5508
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5509, !tbaa !1461
  %158 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5510, !tbaa !1461
  %call246 = call ptr @Py_TYPE(ptr noundef %158), !dbg !5510
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call246, i32 0, i32 26, !dbg !5510
  %159 = load ptr, ptr %tp_iternext, align 8, !dbg !5510, !tbaa !1896
  store ptr %159, ptr %__pyx_t_6, align 8, !dbg !5511, !tbaa !1461
  store i64 0, ptr %index, align 8, !dbg !5512, !tbaa !1836
  %160 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5513, !tbaa !1461
  %161 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5514, !tbaa !1461
  %call247 = call ptr %160(ptr noundef %161), !dbg !5513
  store ptr %call247, ptr %__pyx_t_4, align 8, !dbg !5515, !tbaa !1461
  %162 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5516, !tbaa !1461
  %tobool248 = icmp ne ptr %162, null, !dbg !5516
  %lnot249 = xor i1 %tobool248, true, !dbg !5516
  %lnot251 = xor i1 %lnot249, true, !dbg !5516
  %lnot253 = xor i1 %lnot251, true, !dbg !5516
  %lnot.ext254 = zext i1 %lnot253 to i32, !dbg !5516
  %conv255 = sext i32 %lnot.ext254 to i64, !dbg !5516
  %expval256 = call i64 @llvm.expect.i64(i64 %conv255, i64 0), !dbg !5516
  %tobool257 = icmp ne i64 %expval256, 0, !dbg !5516
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !5518

if.then258:                                       ; preds = %if.end245
  br label %__pyx_L4_unpacking_failed, !dbg !5519

if.end259:                                        ; preds = %if.end245
  store i64 1, ptr %index, align 8, !dbg !5520, !tbaa !1836
  %163 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5521, !tbaa !1461
  %164 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5522, !tbaa !1461
  %call260 = call ptr %163(ptr noundef %164), !dbg !5521
  store ptr %call260, ptr %__pyx_t_2, align 8, !dbg !5523, !tbaa !1461
  %165 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5524, !tbaa !1461
  %tobool261 = icmp ne ptr %165, null, !dbg !5524
  %lnot262 = xor i1 %tobool261, true, !dbg !5524
  %lnot264 = xor i1 %lnot262, true, !dbg !5524
  %lnot266 = xor i1 %lnot264, true, !dbg !5524
  %lnot.ext267 = zext i1 %lnot266 to i32, !dbg !5524
  %conv268 = sext i32 %lnot.ext267 to i64, !dbg !5524
  %expval269 = call i64 @llvm.expect.i64(i64 %conv268, i64 0), !dbg !5524
  %tobool270 = icmp ne i64 %expval269, 0, !dbg !5524
  br i1 %tobool270, label %if.then271, label %if.end272, !dbg !5526

if.then271:                                       ; preds = %if.end259
  br label %__pyx_L4_unpacking_failed, !dbg !5527

if.end272:                                        ; preds = %if.end259
  %166 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5528, !tbaa !1461
  %167 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5530, !tbaa !1461
  %call273 = call ptr %166(ptr noundef %167), !dbg !5528
  %call274 = call i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %call273, i64 noundef 2), !dbg !5531
  %cmp275 = icmp slt i32 %call274, 0, !dbg !5532
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !5533

if.then277:                                       ; preds = %if.end272
  %168 = load ptr, ptr @__pyx_f, align 16, !dbg !5534, !tbaa !1461
  store ptr %168, ptr %__pyx_filename, align 8, !dbg !5534, !tbaa !1461
  %169 = load ptr, ptr %__pyx_filename, align 8, !dbg !5534, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5534, !tbaa !1557
  %170 = load i32, ptr %__pyx_lineno, align 4, !dbg !5534, !tbaa !1557
  store i32 3485, ptr %__pyx_clineno, align 4, !dbg !5534, !tbaa !1557
  %171 = load i32, ptr %__pyx_clineno, align 4, !dbg !5534, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup284, !dbg !5537

if.end278:                                        ; preds = %if.end272
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !5538, !tbaa !1461
  %172 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5539, !tbaa !1461
  call void @Py_DECREF(ptr noundef %172), !dbg !5539
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5540, !tbaa !1461
  br label %__pyx_L5_unpacking_done, !dbg !5541

__pyx_L4_unpacking_failed:                        ; preds = %if.then271, %if.then258
  tail call void @llvm.dbg.label(metadata !1073), !dbg !5542
  %173 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5543, !tbaa !1461
  call void @Py_DECREF(ptr noundef %173), !dbg !5543
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5544, !tbaa !1461
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !5545, !tbaa !1461
  %call279 = call i32 @__Pyx_IterFinish(), !dbg !5546
  %cmp280 = icmp eq i32 %call279, 0, !dbg !5548
  br i1 %cmp280, label %if.then282, label %if.end283, !dbg !5549

if.then282:                                       ; preds = %__pyx_L4_unpacking_failed
  %174 = load i64, ptr %index, align 8, !dbg !5550, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %174), !dbg !5551
  br label %if.end283, !dbg !5551

if.end283:                                        ; preds = %if.then282, %__pyx_L4_unpacking_failed
  %175 = load ptr, ptr @__pyx_f, align 16, !dbg !5552, !tbaa !1461
  store ptr %175, ptr %__pyx_filename, align 8, !dbg !5552, !tbaa !1461
  %176 = load ptr, ptr %__pyx_filename, align 8, !dbg !5552, !tbaa !1461
  store i32 52, ptr %__pyx_lineno, align 4, !dbg !5552, !tbaa !1557
  %177 = load i32, ptr %__pyx_lineno, align 4, !dbg !5552, !tbaa !1557
  store i32 3493, ptr %__pyx_clineno, align 4, !dbg !5552, !tbaa !1557
  %178 = load i32, ptr %__pyx_clineno, align 4, !dbg !5552, !tbaa !1557
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup284, !dbg !5555

__pyx_L5_unpacking_done:                          ; preds = %if.end278
  tail call void @llvm.dbg.label(metadata !1074), !dbg !5556
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5557
  br label %cleanup284, !dbg !5557

cleanup284:                                       ; preds = %if.end283, %if.then277, %if.then244, %__pyx_L5_unpacking_done
  call void @llvm.lifetime.end.p0(i64 8, ptr %index) #10, !dbg !5557
  %cleanup.dest285 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest285, label %cleanup494 [
    i32 0, label %cleanup.cont286
    i32 4, label %__pyx_L1_error
  ]

cleanup.cont286:                                  ; preds = %cleanup284
  br label %if.end287

if.end287:                                        ; preds = %cleanup.cont286, %cleanup.cont
  %179 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5558, !tbaa !1461
  store ptr %179, ptr %__pyx_v_count, align 8, !dbg !5559, !tbaa !1461
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !5560, !tbaa !1461
  %180 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5561, !tbaa !1461
  store ptr %180, ptr %__pyx_v_linenumbers, align 8, !dbg !5562, !tbaa !1461
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5563, !tbaa !1461
  %181 = load ptr, ptr %__pyx_v_count, align 8, !dbg !5564, !tbaa !1461
  %182 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5565, !tbaa !1461
  %__pyx_int_0288 = getelementptr inbounds %struct.__pyx_mstate, ptr %182, i32 0, i32 56, !dbg !5565
  %183 = load ptr, ptr %__pyx_int_0288, align 8, !dbg !5565, !tbaa !1783
  %call289 = call i32 @__Pyx_PyInt_BoolEqObjC(ptr noundef %181, ptr noundef %183, i64 noundef 0, i64 noundef 0), !dbg !5566
  store i32 %call289, ptr %__pyx_t_7, align 4, !dbg !5567, !tbaa !1557
  %184 = load i32, ptr %__pyx_t_7, align 4, !dbg !5568, !tbaa !1557
  %cmp290 = icmp slt i32 %184, 0, !dbg !5568
  %lnot292 = xor i1 %cmp290, true, !dbg !5568
  %lnot294 = xor i1 %lnot292, true, !dbg !5568
  %lnot.ext295 = zext i1 %lnot294 to i32, !dbg !5568
  %conv296 = sext i32 %lnot.ext295 to i64, !dbg !5568
  %expval297 = call i64 @llvm.expect.i64(i64 %conv296, i64 0), !dbg !5568
  %tobool298 = icmp ne i64 %expval297, 0, !dbg !5568
  br i1 %tobool298, label %if.then299, label %if.end300, !dbg !5570

if.then299:                                       ; preds = %if.end287
  %185 = load ptr, ptr @__pyx_f, align 16, !dbg !5571, !tbaa !1461
  store ptr %185, ptr %__pyx_filename, align 8, !dbg !5571, !tbaa !1461
  %186 = load ptr, ptr %__pyx_filename, align 8, !dbg !5571, !tbaa !1461
  store i32 53, ptr %__pyx_lineno, align 4, !dbg !5571, !tbaa !1557
  %187 = load i32, ptr %__pyx_lineno, align 4, !dbg !5571, !tbaa !1557
  store i32 3508, ptr %__pyx_clineno, align 4, !dbg !5571, !tbaa !1557
  %188 = load i32, ptr %__pyx_clineno, align 4, !dbg !5571, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5574

if.end300:                                        ; preds = %if.end287
  %189 = load i32, ptr %__pyx_t_7, align 4, !dbg !5575, !tbaa !1557
  %tobool301 = icmp ne i32 %189, 0, !dbg !5575
  br i1 %tobool301, label %if.then302, label %if.end397, !dbg !5577

if.then302:                                       ; preds = %if.end300
  %190 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5578, !tbaa !1461
  %errors303 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %190, i32 0, i32 5, !dbg !5578
  %191 = load ptr, ptr %errors303, align 8, !dbg !5578, !tbaa !4894
  %cmp304 = icmp eq ptr %191, @_Py_NoneStruct, !dbg !5578
  %lnot306 = xor i1 %cmp304, true, !dbg !5578
  %lnot308 = xor i1 %lnot306, true, !dbg !5578
  %lnot.ext309 = zext i1 %lnot308 to i32, !dbg !5578
  %conv310 = sext i32 %lnot.ext309 to i64, !dbg !5578
  %expval311 = call i64 @llvm.expect.i64(i64 %conv310, i64 0), !dbg !5578
  %tobool312 = icmp ne i64 %expval311, 0, !dbg !5578
  br i1 %tobool312, label %if.then313, label %if.end315, !dbg !5581

if.then313:                                       ; preds = %if.then302
  %192 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !5582, !tbaa !1461
  %call314 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %192, ptr noundef @.str.24, ptr noundef @.str.25), !dbg !5584
  %193 = load ptr, ptr @__pyx_f, align 16, !dbg !5585, !tbaa !1461
  store ptr %193, ptr %__pyx_filename, align 8, !dbg !5585, !tbaa !1461
  %194 = load ptr, ptr %__pyx_filename, align 8, !dbg !5585, !tbaa !1461
  store i32 54, ptr %__pyx_lineno, align 4, !dbg !5585, !tbaa !1557
  %195 = load i32, ptr %__pyx_lineno, align 4, !dbg !5585, !tbaa !1557
  store i32 3520, ptr %__pyx_clineno, align 4, !dbg !5585, !tbaa !1557
  %196 = load i32, ptr %__pyx_clineno, align 4, !dbg !5585, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5588

if.end315:                                        ; preds = %if.then302
  %call316 = call ptr @PyTuple_New(i64 noundef 4), !dbg !5589
  store ptr %call316, ptr %__pyx_t_3, align 8, !dbg !5590, !tbaa !1461
  %197 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5591, !tbaa !1461
  %tobool317 = icmp ne ptr %197, null, !dbg !5591
  %lnot318 = xor i1 %tobool317, true, !dbg !5591
  %lnot320 = xor i1 %lnot318, true, !dbg !5591
  %lnot322 = xor i1 %lnot320, true, !dbg !5591
  %lnot.ext323 = zext i1 %lnot322 to i32, !dbg !5591
  %conv324 = sext i32 %lnot.ext323 to i64, !dbg !5591
  %expval325 = call i64 @llvm.expect.i64(i64 %conv324, i64 0), !dbg !5591
  %tobool326 = icmp ne i64 %expval325, 0, !dbg !5591
  br i1 %tobool326, label %if.then327, label %if.end328, !dbg !5593

if.then327:                                       ; preds = %if.end315
  %198 = load ptr, ptr @__pyx_f, align 16, !dbg !5594, !tbaa !1461
  store ptr %198, ptr %__pyx_filename, align 8, !dbg !5594, !tbaa !1461
  %199 = load ptr, ptr %__pyx_filename, align 8, !dbg !5594, !tbaa !1461
  store i32 54, ptr %__pyx_lineno, align 4, !dbg !5594, !tbaa !1557
  %200 = load i32, ptr %__pyx_lineno, align 4, !dbg !5594, !tbaa !1557
  store i32 3522, ptr %__pyx_clineno, align 4, !dbg !5594, !tbaa !1557
  %201 = load i32, ptr %__pyx_clineno, align 4, !dbg !5594, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5597

if.end328:                                        ; preds = %if.end315
  store i64 0, ptr %__pyx_t_8, align 8, !dbg !5598, !tbaa !1836
  store i32 127, ptr %__pyx_t_9, align 4, !dbg !5599, !tbaa !1557
  %202 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5600, !tbaa !1461
  %__pyx_kp_u_Too_many_decrefs_on_line = getelementptr inbounds %struct.__pyx_mstate, ptr %202, i32 0, i32 17, !dbg !5600
  %203 = load ptr, ptr %__pyx_kp_u_Too_many_decrefs_on_line, align 8, !dbg !5600, !tbaa !5601
  call void @Py_INCREF(ptr noundef %203), !dbg !5600
  %204 = load i64, ptr %__pyx_t_8, align 8, !dbg !5602, !tbaa !1836
  %add = add i64 %204, 25, !dbg !5602
  store i64 %add, ptr %__pyx_t_8, align 8, !dbg !5602, !tbaa !1836
  %205 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5603, !tbaa !1461
  %206 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5603, !tbaa !1461
  %__pyx_kp_u_Too_many_decrefs_on_line329 = getelementptr inbounds %struct.__pyx_mstate, ptr %206, i32 0, i32 17, !dbg !5603
  %207 = load ptr, ptr %__pyx_kp_u_Too_many_decrefs_on_line329, align 8, !dbg !5603, !tbaa !5601
  call void @PyTuple_SET_ITEM(ptr noundef %205, i64 noundef 0, ptr noundef %207), !dbg !5603
  %208 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !5604, !tbaa !1836
  %call330 = call ptr @__Pyx_PyUnicode_From_Py_ssize_t(i64 noundef %208, i64 noundef 0, i8 noundef signext 32, i8 noundef signext 100), !dbg !5605
  store ptr %call330, ptr %__pyx_t_2, align 8, !dbg !5606, !tbaa !1461
  %209 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5607, !tbaa !1461
  %tobool331 = icmp ne ptr %209, null, !dbg !5607
  %lnot332 = xor i1 %tobool331, true, !dbg !5607
  %lnot334 = xor i1 %lnot332, true, !dbg !5607
  %lnot336 = xor i1 %lnot334, true, !dbg !5607
  %lnot.ext337 = zext i1 %lnot336 to i32, !dbg !5607
  %conv338 = sext i32 %lnot.ext337 to i64, !dbg !5607
  %expval339 = call i64 @llvm.expect.i64(i64 %conv338, i64 0), !dbg !5607
  %tobool340 = icmp ne i64 %expval339, 0, !dbg !5607
  br i1 %tobool340, label %if.then341, label %if.end342, !dbg !5609

if.then341:                                       ; preds = %if.end328
  %210 = load ptr, ptr @__pyx_f, align 16, !dbg !5610, !tbaa !1461
  store ptr %210, ptr %__pyx_filename, align 8, !dbg !5610, !tbaa !1461
  %211 = load ptr, ptr %__pyx_filename, align 8, !dbg !5610, !tbaa !1461
  store i32 54, ptr %__pyx_lineno, align 4, !dbg !5610, !tbaa !1557
  %212 = load i32, ptr %__pyx_lineno, align 4, !dbg !5610, !tbaa !1557
  store i32 3530, ptr %__pyx_clineno, align 4, !dbg !5610, !tbaa !1557
  %213 = load i32, ptr %__pyx_clineno, align 4, !dbg !5610, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5613

if.end342:                                        ; preds = %if.end328
  %214 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5614, !tbaa !1461
  %call343 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %214), !dbg !5614
  %215 = load i64, ptr %__pyx_t_8, align 8, !dbg !5615, !tbaa !1836
  %add344 = add i64 %215, %call343, !dbg !5615
  store i64 %add344, ptr %__pyx_t_8, align 8, !dbg !5615, !tbaa !1836
  %216 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5616, !tbaa !1461
  %217 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5616, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %216, i64 noundef 1, ptr noundef %217), !dbg !5616
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5617, !tbaa !1461
  %218 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5618, !tbaa !1461
  %__pyx_kp_u_reference_acquired_on_lines = getelementptr inbounds %struct.__pyx_mstate, ptr %218, i32 0, i32 50, !dbg !5618
  %219 = load ptr, ptr %__pyx_kp_u_reference_acquired_on_lines, align 8, !dbg !5618, !tbaa !5619
  call void @Py_INCREF(ptr noundef %219), !dbg !5618
  %220 = load i64, ptr %__pyx_t_8, align 8, !dbg !5620, !tbaa !1836
  %add345 = add i64 %220, 30, !dbg !5620
  store i64 %add345, ptr %__pyx_t_8, align 8, !dbg !5620, !tbaa !1836
  %221 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5621, !tbaa !1461
  %222 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5621, !tbaa !1461
  %__pyx_kp_u_reference_acquired_on_lines346 = getelementptr inbounds %struct.__pyx_mstate, ptr %222, i32 0, i32 50, !dbg !5621
  %223 = load ptr, ptr %__pyx_kp_u_reference_acquired_on_lines346, align 8, !dbg !5621, !tbaa !5619
  call void @PyTuple_SET_ITEM(ptr noundef %221, i64 noundef 2, ptr noundef %223), !dbg !5621
  %224 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5622, !tbaa !1461
  %call347 = call ptr @PyObject_Repr(ptr noundef %224), !dbg !5623
  %225 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5624, !tbaa !1461
  %__pyx_empty_unicode = getelementptr inbounds %struct.__pyx_mstate, ptr %225, i32 0, i32 5, !dbg !5624
  %226 = load ptr, ptr %__pyx_empty_unicode, align 8, !dbg !5624, !tbaa !1676
  %call348 = call ptr @__Pyx_PyObject_FormatSimpleAndDecref(ptr noundef %call347, ptr noundef %226), !dbg !5625
  store ptr %call348, ptr %__pyx_t_2, align 8, !dbg !5626, !tbaa !1461
  %227 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5627, !tbaa !1461
  %tobool349 = icmp ne ptr %227, null, !dbg !5627
  %lnot350 = xor i1 %tobool349, true, !dbg !5627
  %lnot352 = xor i1 %lnot350, true, !dbg !5627
  %lnot354 = xor i1 %lnot352, true, !dbg !5627
  %lnot.ext355 = zext i1 %lnot354 to i32, !dbg !5627
  %conv356 = sext i32 %lnot.ext355 to i64, !dbg !5627
  %expval357 = call i64 @llvm.expect.i64(i64 %conv356, i64 0), !dbg !5627
  %tobool358 = icmp ne i64 %expval357, 0, !dbg !5627
  br i1 %tobool358, label %if.then359, label %if.end360, !dbg !5629

if.then359:                                       ; preds = %if.end342
  %228 = load ptr, ptr @__pyx_f, align 16, !dbg !5630, !tbaa !1461
  store ptr %228, ptr %__pyx_filename, align 8, !dbg !5630, !tbaa !1461
  %229 = load ptr, ptr %__pyx_filename, align 8, !dbg !5630, !tbaa !1461
  store i32 54, ptr %__pyx_lineno, align 4, !dbg !5630, !tbaa !1557
  %230 = load i32, ptr %__pyx_lineno, align 4, !dbg !5630, !tbaa !1557
  store i32 3540, ptr %__pyx_clineno, align 4, !dbg !5630, !tbaa !1557
  %231 = load i32, ptr %__pyx_clineno, align 4, !dbg !5630, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5633

if.end360:                                        ; preds = %if.end342
  %232 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5634, !tbaa !1461
  %call361 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %232), !dbg !5634
  %233 = load i32, ptr %__pyx_t_9, align 4, !dbg !5635, !tbaa !1557
  %cmp362 = icmp ugt i32 %call361, %233, !dbg !5636
  br i1 %cmp362, label %cond.true364, label %cond.false366, !dbg !5637

cond.true364:                                     ; preds = %if.end360
  %234 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5638, !tbaa !1461
  %call365 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %234), !dbg !5638
  br label %cond.end367, !dbg !5637

cond.false366:                                    ; preds = %if.end360
  %235 = load i32, ptr %__pyx_t_9, align 4, !dbg !5639, !tbaa !1557
  br label %cond.end367, !dbg !5637

cond.end367:                                      ; preds = %cond.false366, %cond.true364
  %cond368 = phi i32 [ %call365, %cond.true364 ], [ %235, %cond.false366 ], !dbg !5637
  store i32 %cond368, ptr %__pyx_t_9, align 4, !dbg !5640, !tbaa !1557
  %236 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5641, !tbaa !1461
  %call369 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %236), !dbg !5641
  %237 = load i64, ptr %__pyx_t_8, align 8, !dbg !5642, !tbaa !1836
  %add370 = add i64 %237, %call369, !dbg !5642
  store i64 %add370, ptr %__pyx_t_8, align 8, !dbg !5642, !tbaa !1836
  %238 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5643, !tbaa !1461
  %239 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5643, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %238, i64 noundef 3, ptr noundef %239), !dbg !5643
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5644, !tbaa !1461
  %240 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5645, !tbaa !1461
  %241 = load i64, ptr %__pyx_t_8, align 8, !dbg !5646, !tbaa !1836
  %242 = load i32, ptr %__pyx_t_9, align 4, !dbg !5647, !tbaa !1557
  %call371 = call ptr @__Pyx_PyUnicode_Join(ptr noundef %240, i64 noundef 4, i64 noundef %241, i32 noundef %242), !dbg !5648
  store ptr %call371, ptr %__pyx_t_2, align 8, !dbg !5649, !tbaa !1461
  %243 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5650, !tbaa !1461
  %tobool372 = icmp ne ptr %243, null, !dbg !5650
  %lnot373 = xor i1 %tobool372, true, !dbg !5650
  %lnot375 = xor i1 %lnot373, true, !dbg !5650
  %lnot377 = xor i1 %lnot375, true, !dbg !5650
  %lnot.ext378 = zext i1 %lnot377 to i32, !dbg !5650
  %conv379 = sext i32 %lnot.ext378 to i64, !dbg !5650
  %expval380 = call i64 @llvm.expect.i64(i64 %conv379, i64 0), !dbg !5650
  %tobool381 = icmp ne i64 %expval380, 0, !dbg !5650
  br i1 %tobool381, label %if.then382, label %if.end383, !dbg !5652

if.then382:                                       ; preds = %cond.end367
  %244 = load ptr, ptr @__pyx_f, align 16, !dbg !5653, !tbaa !1461
  store ptr %244, ptr %__pyx_filename, align 8, !dbg !5653, !tbaa !1461
  %245 = load ptr, ptr %__pyx_filename, align 8, !dbg !5653, !tbaa !1461
  store i32 54, ptr %__pyx_lineno, align 4, !dbg !5653, !tbaa !1557
  %246 = load i32, ptr %__pyx_lineno, align 4, !dbg !5653, !tbaa !1557
  store i32 3547, ptr %__pyx_clineno, align 4, !dbg !5653, !tbaa !1557
  %247 = load i32, ptr %__pyx_clineno, align 4, !dbg !5653, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5656

if.end383:                                        ; preds = %cond.end367
  %248 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5657, !tbaa !1461
  call void @Py_DECREF(ptr noundef %248), !dbg !5657
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5658, !tbaa !1461
  %249 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5659, !tbaa !1461
  %errors384 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %249, i32 0, i32 5, !dbg !5660
  %250 = load ptr, ptr %errors384, align 8, !dbg !5660, !tbaa !4894
  %251 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5661, !tbaa !1461
  %call385 = call i32 @__Pyx_PyList_Append(ptr noundef %250, ptr noundef %251), !dbg !5662
  store i32 %call385, ptr %__pyx_t_5, align 4, !dbg !5663, !tbaa !1557
  %252 = load i32, ptr %__pyx_t_5, align 4, !dbg !5664, !tbaa !1557
  %cmp386 = icmp eq i32 %252, -1, !dbg !5664
  %lnot388 = xor i1 %cmp386, true, !dbg !5664
  %lnot390 = xor i1 %lnot388, true, !dbg !5664
  %lnot.ext391 = zext i1 %lnot390 to i32, !dbg !5664
  %conv392 = sext i32 %lnot.ext391 to i64, !dbg !5664
  %expval393 = call i64 @llvm.expect.i64(i64 %conv392, i64 0), !dbg !5664
  %tobool394 = icmp ne i64 %expval393, 0, !dbg !5664
  br i1 %tobool394, label %if.then395, label %if.end396, !dbg !5666

if.then395:                                       ; preds = %if.end383
  %253 = load ptr, ptr @__pyx_f, align 16, !dbg !5667, !tbaa !1461
  store ptr %253, ptr %__pyx_filename, align 8, !dbg !5667, !tbaa !1461
  %254 = load ptr, ptr %__pyx_filename, align 8, !dbg !5667, !tbaa !1461
  store i32 54, ptr %__pyx_lineno, align 4, !dbg !5667, !tbaa !1557
  %255 = load i32, ptr %__pyx_lineno, align 4, !dbg !5667, !tbaa !1557
  store i32 3550, ptr %__pyx_clineno, align 4, !dbg !5667, !tbaa !1557
  %256 = load i32, ptr %__pyx_clineno, align 4, !dbg !5667, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5670

if.end396:                                        ; preds = %if.end383
  %257 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5671, !tbaa !1461
  call void @Py_DECREF(ptr noundef %257), !dbg !5671
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5672, !tbaa !1461
  store i32 0, ptr %__pyx_r, align 4, !dbg !5673, !tbaa !1557
  br label %__pyx_L0, !dbg !5674

if.end397:                                        ; preds = %if.end300
  %258 = load ptr, ptr %__pyx_v_count, align 8, !dbg !5675, !tbaa !1461
  %259 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5676, !tbaa !1461
  %__pyx_int_1 = getelementptr inbounds %struct.__pyx_mstate, ptr %259, i32 0, i32 57, !dbg !5676
  %260 = load ptr, ptr %__pyx_int_1, align 8, !dbg !5676, !tbaa !2301
  %call398 = call i32 @__Pyx_PyInt_BoolEqObjC(ptr noundef %258, ptr noundef %260, i64 noundef 1, i64 noundef 0), !dbg !5677
  store i32 %call398, ptr %__pyx_t_7, align 4, !dbg !5678, !tbaa !1557
  %261 = load i32, ptr %__pyx_t_7, align 4, !dbg !5679, !tbaa !1557
  %cmp399 = icmp slt i32 %261, 0, !dbg !5679
  %lnot401 = xor i1 %cmp399, true, !dbg !5679
  %lnot403 = xor i1 %lnot401, true, !dbg !5679
  %lnot.ext404 = zext i1 %lnot403 to i32, !dbg !5679
  %conv405 = sext i32 %lnot.ext404 to i64, !dbg !5679
  %expval406 = call i64 @llvm.expect.i64(i64 %conv405, i64 0), !dbg !5679
  %tobool407 = icmp ne i64 %expval406, 0, !dbg !5679
  br i1 %tobool407, label %if.then408, label %if.end409, !dbg !5681

if.then408:                                       ; preds = %if.end397
  %262 = load ptr, ptr @__pyx_f, align 16, !dbg !5682, !tbaa !1461
  store ptr %262, ptr %__pyx_filename, align 8, !dbg !5682, !tbaa !1461
  %263 = load ptr, ptr %__pyx_filename, align 8, !dbg !5682, !tbaa !1461
  store i32 56, ptr %__pyx_lineno, align 4, !dbg !5682, !tbaa !1557
  %264 = load i32, ptr %__pyx_lineno, align 4, !dbg !5682, !tbaa !1557
  store i32 3579, ptr %__pyx_clineno, align 4, !dbg !5682, !tbaa !1557
  %265 = load i32, ptr %__pyx_clineno, align 4, !dbg !5682, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5685

if.end409:                                        ; preds = %if.end397
  %266 = load i32, ptr %__pyx_t_7, align 4, !dbg !5686, !tbaa !1557
  %tobool410 = icmp ne i32 %266, 0, !dbg !5686
  br i1 %tobool410, label %if.then411, label %if.end437, !dbg !5688

if.then411:                                       ; preds = %if.end409
  %267 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5689, !tbaa !1461
  %refs412 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %267, i32 0, i32 4, !dbg !5689
  %268 = load ptr, ptr %refs412, align 8, !dbg !5689, !tbaa !4959
  %cmp413 = icmp eq ptr %268, @_Py_NoneStruct, !dbg !5689
  %lnot415 = xor i1 %cmp413, true, !dbg !5689
  %lnot417 = xor i1 %lnot415, true, !dbg !5689
  %lnot.ext418 = zext i1 %lnot417 to i32, !dbg !5689
  %conv419 = sext i32 %lnot.ext418 to i64, !dbg !5689
  %expval420 = call i64 @llvm.expect.i64(i64 %conv419, i64 0), !dbg !5689
  %tobool421 = icmp ne i64 %expval420, 0, !dbg !5689
  br i1 %tobool421, label %if.then422, label %if.end423, !dbg !5692

if.then422:                                       ; preds = %if.then411
  %269 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5693, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %269, ptr noundef @.str.27), !dbg !5695
  %270 = load ptr, ptr @__pyx_f, align 16, !dbg !5696, !tbaa !1461
  store ptr %270, ptr %__pyx_filename, align 8, !dbg !5696, !tbaa !1461
  %271 = load ptr, ptr %__pyx_filename, align 8, !dbg !5696, !tbaa !1461
  store i32 57, ptr %__pyx_lineno, align 4, !dbg !5696, !tbaa !1557
  %272 = load i32, ptr %__pyx_lineno, align 4, !dbg !5696, !tbaa !1557
  store i32 3591, ptr %__pyx_clineno, align 4, !dbg !5696, !tbaa !1557
  %273 = load i32, ptr %__pyx_clineno, align 4, !dbg !5696, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5699

if.end423:                                        ; preds = %if.then411
  %274 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5700, !tbaa !1461
  %refs424 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %274, i32 0, i32 4, !dbg !5700
  %275 = load ptr, ptr %refs424, align 8, !dbg !5700, !tbaa !4959
  %276 = load ptr, ptr %__pyx_v_id_, align 8, !dbg !5700, !tbaa !1461
  %call425 = call i32 @PyDict_DelItem(ptr noundef %275, ptr noundef %276), !dbg !5700
  %cmp426 = icmp slt i32 %call425, 0, !dbg !5700
  %lnot428 = xor i1 %cmp426, true, !dbg !5700
  %lnot430 = xor i1 %lnot428, true, !dbg !5700
  %lnot.ext431 = zext i1 %lnot430 to i32, !dbg !5700
  %conv432 = sext i32 %lnot.ext431 to i64, !dbg !5700
  %expval433 = call i64 @llvm.expect.i64(i64 %conv432, i64 0), !dbg !5700
  %tobool434 = icmp ne i64 %expval433, 0, !dbg !5700
  br i1 %tobool434, label %if.then435, label %if.end436, !dbg !5702

if.then435:                                       ; preds = %if.end423
  %277 = load ptr, ptr @__pyx_f, align 16, !dbg !5703, !tbaa !1461
  store ptr %277, ptr %__pyx_filename, align 8, !dbg !5703, !tbaa !1461
  %278 = load ptr, ptr %__pyx_filename, align 8, !dbg !5703, !tbaa !1461
  store i32 57, ptr %__pyx_lineno, align 4, !dbg !5703, !tbaa !1557
  %279 = load i32, ptr %__pyx_lineno, align 4, !dbg !5703, !tbaa !1557
  store i32 3593, ptr %__pyx_clineno, align 4, !dbg !5703, !tbaa !1557
  %280 = load i32, ptr %__pyx_clineno, align 4, !dbg !5703, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5706

if.end436:                                        ; preds = %if.end423
  br label %__pyx_L7, !dbg !5707

if.end437:                                        ; preds = %if.end409
  %281 = load ptr, ptr %__pyx_v_count, align 8, !dbg !5708, !tbaa !1461
  %282 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5710, !tbaa !1461
  %__pyx_int_1438 = getelementptr inbounds %struct.__pyx_mstate, ptr %282, i32 0, i32 57, !dbg !5710
  %283 = load ptr, ptr %__pyx_int_1438, align 8, !dbg !5710, !tbaa !2301
  %call439 = call ptr @__Pyx_PyInt_SubtractObjC(ptr noundef %281, ptr noundef %283, i64 noundef 1, i32 noundef 0, i32 noundef 0), !dbg !5711
  store ptr %call439, ptr %__pyx_t_2, align 8, !dbg !5712, !tbaa !1461
  %284 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5713, !tbaa !1461
  %tobool440 = icmp ne ptr %284, null, !dbg !5713
  %lnot441 = xor i1 %tobool440, true, !dbg !5713
  %lnot443 = xor i1 %lnot441, true, !dbg !5713
  %lnot445 = xor i1 %lnot443, true, !dbg !5713
  %lnot.ext446 = zext i1 %lnot445 to i32, !dbg !5713
  %conv447 = sext i32 %lnot.ext446 to i64, !dbg !5713
  %expval448 = call i64 @llvm.expect.i64(i64 %conv447, i64 0), !dbg !5713
  %tobool449 = icmp ne i64 %expval448, 0, !dbg !5713
  br i1 %tobool449, label %if.then450, label %if.end451, !dbg !5715

if.then450:                                       ; preds = %if.end437
  %285 = load ptr, ptr @__pyx_f, align 16, !dbg !5716, !tbaa !1461
  store ptr %285, ptr %__pyx_filename, align 8, !dbg !5716, !tbaa !1461
  %286 = load ptr, ptr %__pyx_filename, align 8, !dbg !5716, !tbaa !1461
  store i32 59, ptr %__pyx_lineno, align 4, !dbg !5716, !tbaa !1557
  %287 = load i32, ptr %__pyx_lineno, align 4, !dbg !5716, !tbaa !1557
  store i32 3613, ptr %__pyx_clineno, align 4, !dbg !5716, !tbaa !1557
  %288 = load i32, ptr %__pyx_clineno, align 4, !dbg !5716, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5719

if.end451:                                        ; preds = %if.end437
  %call452 = call ptr @PyTuple_New(i64 noundef 2), !dbg !5720
  store ptr %call452, ptr %__pyx_t_3, align 8, !dbg !5721, !tbaa !1461
  %289 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5722, !tbaa !1461
  %tobool453 = icmp ne ptr %289, null, !dbg !5722
  %lnot454 = xor i1 %tobool453, true, !dbg !5722
  %lnot456 = xor i1 %lnot454, true, !dbg !5722
  %lnot458 = xor i1 %lnot456, true, !dbg !5722
  %lnot.ext459 = zext i1 %lnot458 to i32, !dbg !5722
  %conv460 = sext i32 %lnot.ext459 to i64, !dbg !5722
  %expval461 = call i64 @llvm.expect.i64(i64 %conv460, i64 0), !dbg !5722
  %tobool462 = icmp ne i64 %expval461, 0, !dbg !5722
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !5724

if.then463:                                       ; preds = %if.end451
  %290 = load ptr, ptr @__pyx_f, align 16, !dbg !5725, !tbaa !1461
  store ptr %290, ptr %__pyx_filename, align 8, !dbg !5725, !tbaa !1461
  %291 = load ptr, ptr %__pyx_filename, align 8, !dbg !5725, !tbaa !1461
  store i32 59, ptr %__pyx_lineno, align 4, !dbg !5725, !tbaa !1557
  %292 = load i32, ptr %__pyx_lineno, align 4, !dbg !5725, !tbaa !1557
  store i32 3615, ptr %__pyx_clineno, align 4, !dbg !5725, !tbaa !1557
  %293 = load i32, ptr %__pyx_clineno, align 4, !dbg !5725, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5728

if.end464:                                        ; preds = %if.end451
  %294 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5729, !tbaa !1461
  %295 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5729, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %294, i64 noundef 0, ptr noundef %295), !dbg !5729
  br i1 false, label %if.then465, label %if.end466, !dbg !5731

if.then465:                                       ; preds = %if.end464
  %296 = load ptr, ptr @__pyx_f, align 16, !dbg !5732, !tbaa !1461
  store ptr %296, ptr %__pyx_filename, align 8, !dbg !5732, !tbaa !1461
  %297 = load ptr, ptr %__pyx_filename, align 8, !dbg !5732, !tbaa !1461
  store i32 59, ptr %__pyx_lineno, align 4, !dbg !5732, !tbaa !1557
  %298 = load i32, ptr %__pyx_lineno, align 4, !dbg !5732, !tbaa !1557
  store i32 3618, ptr %__pyx_clineno, align 4, !dbg !5732, !tbaa !1557
  %299 = load i32, ptr %__pyx_clineno, align 4, !dbg !5732, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5735

if.end466:                                        ; preds = %if.end464
  %300 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5736, !tbaa !1461
  call void @Py_INCREF(ptr noundef %300), !dbg !5736
  %301 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5737, !tbaa !1461
  %302 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5737, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %301, i64 noundef 1, ptr noundef %302), !dbg !5737
  br i1 false, label %if.then467, label %if.end468, !dbg !5739

if.then467:                                       ; preds = %if.end466
  %303 = load ptr, ptr @__pyx_f, align 16, !dbg !5740, !tbaa !1461
  store ptr %303, ptr %__pyx_filename, align 8, !dbg !5740, !tbaa !1461
  %304 = load ptr, ptr %__pyx_filename, align 8, !dbg !5740, !tbaa !1461
  store i32 59, ptr %__pyx_lineno, align 4, !dbg !5740, !tbaa !1557
  %305 = load i32, ptr %__pyx_lineno, align 4, !dbg !5740, !tbaa !1557
  store i32 3621, ptr %__pyx_clineno, align 4, !dbg !5740, !tbaa !1557
  %306 = load i32, ptr %__pyx_clineno, align 4, !dbg !5740, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5743

if.end468:                                        ; preds = %if.end466
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5744, !tbaa !1461
  %307 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5745, !tbaa !1461
  %refs469 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %307, i32 0, i32 4, !dbg !5745
  %308 = load ptr, ptr %refs469, align 8, !dbg !5745, !tbaa !4959
  %cmp470 = icmp eq ptr %308, @_Py_NoneStruct, !dbg !5745
  %lnot472 = xor i1 %cmp470, true, !dbg !5745
  %lnot474 = xor i1 %lnot472, true, !dbg !5745
  %lnot.ext475 = zext i1 %lnot474 to i32, !dbg !5745
  %conv476 = sext i32 %lnot.ext475 to i64, !dbg !5745
  %expval477 = call i64 @llvm.expect.i64(i64 %conv476, i64 0), !dbg !5745
  %tobool478 = icmp ne i64 %expval477, 0, !dbg !5745
  br i1 %tobool478, label %if.then479, label %if.end480, !dbg !5747

if.then479:                                       ; preds = %if.end468
  %309 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5748, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %309, ptr noundef @.str.27), !dbg !5750
  %310 = load ptr, ptr @__pyx_f, align 16, !dbg !5751, !tbaa !1461
  store ptr %310, ptr %__pyx_filename, align 8, !dbg !5751, !tbaa !1461
  %311 = load ptr, ptr %__pyx_filename, align 8, !dbg !5751, !tbaa !1461
  store i32 59, ptr %__pyx_lineno, align 4, !dbg !5751, !tbaa !1557
  %312 = load i32, ptr %__pyx_lineno, align 4, !dbg !5751, !tbaa !1557
  store i32 3625, ptr %__pyx_clineno, align 4, !dbg !5751, !tbaa !1557
  %313 = load i32, ptr %__pyx_clineno, align 4, !dbg !5751, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5754

if.end480:                                        ; preds = %if.end468
  %314 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5755, !tbaa !1461
  %refs481 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %314, i32 0, i32 4, !dbg !5755
  %315 = load ptr, ptr %refs481, align 8, !dbg !5755, !tbaa !4959
  %316 = load ptr, ptr %__pyx_v_id_, align 8, !dbg !5755, !tbaa !1461
  %317 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5755, !tbaa !1461
  %call482 = call i32 @PyDict_SetItem(ptr noundef %315, ptr noundef %316, ptr noundef %317), !dbg !5755
  %cmp483 = icmp slt i32 %call482, 0, !dbg !5755
  %lnot485 = xor i1 %cmp483, true, !dbg !5755
  %lnot487 = xor i1 %lnot485, true, !dbg !5755
  %lnot.ext488 = zext i1 %lnot487 to i32, !dbg !5755
  %conv489 = sext i32 %lnot.ext488 to i64, !dbg !5755
  %expval490 = call i64 @llvm.expect.i64(i64 %conv489, i64 0), !dbg !5755
  %tobool491 = icmp ne i64 %expval490, 0, !dbg !5755
  br i1 %tobool491, label %if.then492, label %if.end493, !dbg !5757

if.then492:                                       ; preds = %if.end480
  %318 = load ptr, ptr @__pyx_f, align 16, !dbg !5758, !tbaa !1461
  store ptr %318, ptr %__pyx_filename, align 8, !dbg !5758, !tbaa !1461
  %319 = load ptr, ptr %__pyx_filename, align 8, !dbg !5758, !tbaa !1461
  store i32 59, ptr %__pyx_lineno, align 4, !dbg !5758, !tbaa !1557
  %320 = load i32, ptr %__pyx_lineno, align 4, !dbg !5758, !tbaa !1557
  store i32 3627, ptr %__pyx_clineno, align 4, !dbg !5758, !tbaa !1557
  %321 = load i32, ptr %__pyx_clineno, align 4, !dbg !5758, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5761

if.end493:                                        ; preds = %if.end480
  %322 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5762, !tbaa !1461
  call void @Py_DECREF(ptr noundef %322), !dbg !5762
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !5763, !tbaa !1461
  br label %__pyx_L7, !dbg !5764

__pyx_L7:                                         ; preds = %if.end493, %if.end436
  tail call void @llvm.dbg.label(metadata !1075), !dbg !5765
  store i32 1, ptr %__pyx_r, align 4, !dbg !5766, !tbaa !1557
  br label %__pyx_L0, !dbg !5767

__pyx_L1_error:                                   ; preds = %cleanup284, %cleanup, %if.then492, %if.then479, %if.then467, %if.then465, %if.then463, %if.then450, %if.then435, %if.then422, %if.then408, %if.then395, %if.then382, %if.then359, %if.then341, %if.then327, %if.then313, %if.then299, %if.then178, %if.then164, %if.then162, %if.then159, %if.then146, %if.then132, %if.then121, %if.then107, %if.then94, %if.then81, %if.then67, %if.then54, %if.then41, %if.then
  tail call void @llvm.dbg.label(metadata !1076), !dbg !5768
  %323 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5769, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %323), !dbg !5769
  %324 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5770, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %324), !dbg !5770
  %325 = load ptr, ptr %__pyx_t_3, align 8, !dbg !5771, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %325), !dbg !5771
  %326 = load ptr, ptr %__pyx_t_4, align 8, !dbg !5772, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %326), !dbg !5772
  %327 = load i32, ptr %__pyx_clineno, align 4, !dbg !5773, !tbaa !1557
  %328 = load i32, ptr %__pyx_lineno, align 4, !dbg !5774, !tbaa !1557
  %329 = load ptr, ptr %__pyx_filename, align 8, !dbg !5775, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.37, i32 noundef %327, i32 noundef %328, ptr noundef %329), !dbg !5776
  store i32 -1, ptr %__pyx_r, align 4, !dbg !5777, !tbaa !1557
  br label %__pyx_L0, !dbg !5778

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L7, %if.end396, %if.end108
  tail call void @llvm.dbg.label(metadata !1077), !dbg !5779
  %330 = load ptr, ptr %__pyx_v_id_, align 8, !dbg !5780, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %330), !dbg !5780
  %331 = load ptr, ptr %__pyx_v_count, align 8, !dbg !5781, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %331), !dbg !5781
  %332 = load ptr, ptr %__pyx_v_linenumbers, align 8, !dbg !5782, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %332), !dbg !5782
  %333 = load i32, ptr %__pyx_r, align 4, !dbg !5783, !tbaa !1557
  store i32 %333, ptr %retval, align 4, !dbg !5784
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup494, !dbg !5784

cleanup494:                                       ; preds = %__pyx_L0, %cleanup284, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_9) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_linenumbers) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_count) #10, !dbg !5785
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_id_) #10, !dbg !5785
  %334 = load i32, ptr %retval, align 4, !dbg !5785
  ret i32 %334, !dbg !5785
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_7Runtime_8refnanny_7Context_end(ptr noundef %__pyx_v_self) #0 !dbg !5786 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_msg = alloca ptr, align 8
  %__pyx_v_count = alloca ptr, align 8
  %__pyx_v_linenos = alloca ptr, align 8
  %__pyx_7genexpr__pyx_v_x = alloca ptr, align 8
  %__pyx_8genexpr1__pyx_v_error = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i64, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_t_12 = alloca i64, align 8
  %__pyx_t_13 = alloca i32, align 4
  %__pyx_t_14 = alloca i64, align 8
  %__pyx_t_15 = alloca ptr, align 8
  %__pyx_t_16 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %sequence = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %index = alloca i64, align 8
  %tmp = alloca ptr, align 8
  %tmp163 = alloca ptr, align 8
  %__pyx_temp = alloca i64, align 8
  %__pyx_temp329 = alloca i64, align 8
  %exc_type = alloca ptr, align 8
  %tmp376 = alloca ptr, align 8
  %tmp495 = alloca ptr, align 8
  %__pyx_temp560 = alloca i64, align 8
  %tmp573 = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5788, metadata !DIExpression()), !dbg !5866
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_msg) #10, !dbg !5867
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_msg, metadata !5789, metadata !DIExpression()), !dbg !5868
  store ptr null, ptr %__pyx_v_msg, align 8, !dbg !5868, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_count) #10, !dbg !5869
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_count, metadata !5790, metadata !DIExpression()), !dbg !5870
  store ptr null, ptr %__pyx_v_count, align 8, !dbg !5870, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_linenos) #10, !dbg !5871
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_linenos, metadata !5791, metadata !DIExpression()), !dbg !5872
  store ptr null, ptr %__pyx_v_linenos, align 8, !dbg !5872, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_7genexpr__pyx_v_x) #10, !dbg !5873
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_7genexpr__pyx_v_x, metadata !5792, metadata !DIExpression()), !dbg !5874
  store ptr null, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !5874, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_8genexpr1__pyx_v_error) #10, !dbg !5875
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_8genexpr1__pyx_v_error, metadata !5793, metadata !DIExpression()), !dbg !5876
  store ptr null, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !5876, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !5877
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5794, metadata !DIExpression()), !dbg !5878
  store ptr null, ptr %__pyx_r, align 8, !dbg !5878, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !5879
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !5795, metadata !DIExpression()), !dbg !5880
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !5881
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !5796, metadata !DIExpression()), !dbg !5882
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !5882, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !5883
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !5797, metadata !DIExpression()), !dbg !5884
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !5885
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !5798, metadata !DIExpression()), !dbg !5886
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !5887
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !5799, metadata !DIExpression()), !dbg !5888
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !5889
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !5800, metadata !DIExpression()), !dbg !5890
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !5890, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #10, !dbg !5891
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !5801, metadata !DIExpression()), !dbg !5892
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !5893
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !5802, metadata !DIExpression()), !dbg !5894
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !5894, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !5895
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !5803, metadata !DIExpression()), !dbg !5896
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !5896, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !5897
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !5804, metadata !DIExpression()), !dbg !5898
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !5898, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !5899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !5805, metadata !DIExpression()), !dbg !5900
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #10, !dbg !5901
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_12, metadata !5806, metadata !DIExpression()), !dbg !5902
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_13) #10, !dbg !5903
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_13, metadata !5807, metadata !DIExpression()), !dbg !5904
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_14) #10, !dbg !5905
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_14, metadata !5808, metadata !DIExpression()), !dbg !5906
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_15) #10, !dbg !5907
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_15, metadata !5809, metadata !DIExpression()), !dbg !5908
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_16) #10, !dbg !5909
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_16, metadata !5810, metadata !DIExpression()), !dbg !5910
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !5911
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !5811, metadata !DIExpression()), !dbg !5912
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !5912, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !5913
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !5812, metadata !DIExpression()), !dbg !5914
  store ptr null, ptr %__pyx_filename, align 8, !dbg !5914, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !5915
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !5813, metadata !DIExpression()), !dbg !5916
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !5916, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5917, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %0, i32 0, i32 4, !dbg !5918
  %1 = load ptr, ptr %refs, align 8, !dbg !5918, !tbaa !4959
  %call = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %1), !dbg !5919
  store i32 %call, ptr %__pyx_t_1, align 4, !dbg !5920, !tbaa !1557
  %2 = load i32, ptr %__pyx_t_1, align 4, !dbg !5921, !tbaa !1557
  %cmp = icmp slt i32 %2, 0, !dbg !5921
  %lnot = xor i1 %cmp, true, !dbg !5921
  %lnot1 = xor i1 %lnot, true, !dbg !5921
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5921
  %conv = sext i32 %lnot.ext to i64, !dbg !5921
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5921
  %tobool = icmp ne i64 %expval, 0, !dbg !5921
  br i1 %tobool, label %if.then, label %if.end, !dbg !5923

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !5924, !tbaa !1461
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !5924, !tbaa !1461
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !5924, !tbaa !1461
  store i32 63, ptr %__pyx_lineno, align 4, !dbg !5924, !tbaa !1557
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !5924, !tbaa !1557
  store i32 3710, ptr %__pyx_clineno, align 4, !dbg !5924, !tbaa !1557
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !5924, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5927

if.end:                                           ; preds = %entry
  %7 = load i32, ptr %__pyx_t_1, align 4, !dbg !5928, !tbaa !1557
  %tobool2 = icmp ne i32 %7, 0, !dbg !5928
  br i1 %tobool2, label %if.then3, label %if.end523, !dbg !5929

if.then3:                                         ; preds = %if.end
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5930, !tbaa !1461
  %__pyx_kp_u_References_leaked = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 16, !dbg !5930
  %9 = load ptr, ptr %__pyx_kp_u_References_leaked, align 8, !dbg !5930, !tbaa !5931
  call void @Py_INCREF(ptr noundef %9), !dbg !5930
  %10 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5932, !tbaa !1461
  %__pyx_kp_u_References_leaked4 = getelementptr inbounds %struct.__pyx_mstate, ptr %10, i32 0, i32 16, !dbg !5932
  %11 = load ptr, ptr %__pyx_kp_u_References_leaked4, align 8, !dbg !5932, !tbaa !5931
  store ptr %11, ptr %__pyx_v_msg, align 8, !dbg !5933, !tbaa !1461
  store i64 0, ptr %__pyx_t_3, align 8, !dbg !5934, !tbaa !1836
  %12 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5935, !tbaa !1461
  %refs5 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %12, i32 0, i32 4, !dbg !5935
  %13 = load ptr, ptr %refs5, align 8, !dbg !5935, !tbaa !4959
  %cmp6 = icmp eq ptr %13, @_Py_NoneStruct, !dbg !5935
  %lnot8 = xor i1 %cmp6, true, !dbg !5935
  %lnot10 = xor i1 %lnot8, true, !dbg !5935
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !5935
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !5935
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !5935
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !5935
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !5937

if.then15:                                        ; preds = %if.then3
  %14 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !5938, !tbaa !1461
  %call16 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %14, ptr noundef @.str.24, ptr noundef @.str.39), !dbg !5940
  %15 = load ptr, ptr @__pyx_f, align 16, !dbg !5941, !tbaa !1461
  store ptr %15, ptr %__pyx_filename, align 8, !dbg !5941, !tbaa !1461
  %16 = load ptr, ptr %__pyx_filename, align 8, !dbg !5941, !tbaa !1461
  store i32 65, ptr %__pyx_lineno, align 4, !dbg !5941, !tbaa !1557
  %17 = load i32, ptr %__pyx_lineno, align 4, !dbg !5941, !tbaa !1557
  store i32 3733, ptr %__pyx_clineno, align 4, !dbg !5941, !tbaa !1557
  %18 = load i32, ptr %__pyx_clineno, align 4, !dbg !5941, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5944

if.end17:                                         ; preds = %if.then3
  %19 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5945, !tbaa !1461
  %refs18 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %19, i32 0, i32 4, !dbg !5946
  %20 = load ptr, ptr %refs18, align 8, !dbg !5946, !tbaa !4959
  %21 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !5947, !tbaa !1461
  %__pyx_n_s_itervalues = getelementptr inbounds %struct.__pyx_mstate, ptr %21, i32 0, i32 40, !dbg !5947
  %22 = load ptr, ptr %__pyx_n_s_itervalues, align 8, !dbg !5947, !tbaa !5948
  %call19 = call ptr @__Pyx_dict_iterator(ptr noundef %20, i32 noundef 1, ptr noundef %22, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_5), !dbg !5949
  store ptr %call19, ptr %__pyx_t_6, align 8, !dbg !5950, !tbaa !1461
  %23 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5951, !tbaa !1461
  %tobool20 = icmp ne ptr %23, null, !dbg !5951
  %lnot21 = xor i1 %tobool20, true, !dbg !5951
  %lnot23 = xor i1 %lnot21, true, !dbg !5951
  %lnot25 = xor i1 %lnot23, true, !dbg !5951
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !5951
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !5951
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0), !dbg !5951
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !5951
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !5953

if.then30:                                        ; preds = %if.end17
  %24 = load ptr, ptr @__pyx_f, align 16, !dbg !5954, !tbaa !1461
  store ptr %24, ptr %__pyx_filename, align 8, !dbg !5954, !tbaa !1461
  %25 = load ptr, ptr %__pyx_filename, align 8, !dbg !5954, !tbaa !1461
  store i32 65, ptr %__pyx_lineno, align 4, !dbg !5954, !tbaa !1557
  %26 = load i32, ptr %__pyx_lineno, align 4, !dbg !5954, !tbaa !1557
  store i32 3735, ptr %__pyx_clineno, align 4, !dbg !5954, !tbaa !1557
  %27 = load i32, ptr %__pyx_clineno, align 4, !dbg !5954, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5957

if.end31:                                         ; preds = %if.end17
  %28 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5958, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %28), !dbg !5958
  %29 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5959, !tbaa !1461
  store ptr %29, ptr %__pyx_t_2, align 8, !dbg !5960, !tbaa !1461
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !5961, !tbaa !1461
  br label %while.cond, !dbg !5962

while.cond:                                       ; preds = %do.end497, %if.end31
  br label %while.body, !dbg !5962

while.body:                                       ; preds = %while.cond
  %30 = load ptr, ptr %__pyx_t_2, align 8, !dbg !5963, !tbaa !1461
  %31 = load i64, ptr %__pyx_t_4, align 8, !dbg !5964, !tbaa !1836
  %32 = load i32, ptr %__pyx_t_5, align 4, !dbg !5965, !tbaa !1557
  %call32 = call i32 @__Pyx_dict_iter_next(ptr noundef %30, i64 noundef %31, ptr noundef %__pyx_t_3, ptr noundef null, ptr noundef %__pyx_t_6, ptr noundef null, i32 noundef %32), !dbg !5966
  store i32 %call32, ptr %__pyx_t_7, align 4, !dbg !5967, !tbaa !1557
  %33 = load i32, ptr %__pyx_t_7, align 4, !dbg !5968, !tbaa !1557
  %cmp33 = icmp eq i32 %33, 0, !dbg !5968
  %lnot35 = xor i1 %cmp33, true, !dbg !5968
  %lnot37 = xor i1 %lnot35, true, !dbg !5968
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !5968
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !5968
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0), !dbg !5968
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !5968
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !5970

if.then42:                                        ; preds = %while.body
  br label %while.end, !dbg !5971

if.end43:                                         ; preds = %while.body
  %34 = load i32, ptr %__pyx_t_7, align 4, !dbg !5972, !tbaa !1557
  %cmp44 = icmp eq i32 %34, -1, !dbg !5972
  %lnot46 = xor i1 %cmp44, true, !dbg !5972
  %lnot48 = xor i1 %lnot46, true, !dbg !5972
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !5972
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !5972
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 0), !dbg !5972
  %tobool52 = icmp ne i64 %expval51, 0, !dbg !5972
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !5974

if.then53:                                        ; preds = %if.end43
  %35 = load ptr, ptr @__pyx_f, align 16, !dbg !5975, !tbaa !1461
  store ptr %35, ptr %__pyx_filename, align 8, !dbg !5975, !tbaa !1461
  %36 = load ptr, ptr %__pyx_filename, align 8, !dbg !5975, !tbaa !1461
  store i32 65, ptr %__pyx_lineno, align 4, !dbg !5975, !tbaa !1557
  %37 = load i32, ptr %__pyx_lineno, align 4, !dbg !5975, !tbaa !1557
  store i32 3743, ptr %__pyx_clineno, align 4, !dbg !5975, !tbaa !1557
  %38 = load i32, ptr %__pyx_clineno, align 4, !dbg !5975, !tbaa !1557
  br label %__pyx_L1_error, !dbg !5978

if.end54:                                         ; preds = %if.end43
  %39 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5979, !tbaa !1461
  %call55 = call i32 @Py_IS_TYPE(ptr noundef %39, ptr noundef @PyTuple_Type), !dbg !5979
  %tobool56 = icmp ne i32 %call55, 0, !dbg !5979
  %lnot57 = xor i1 %tobool56, true, !dbg !5979
  %lnot59 = xor i1 %lnot57, true, !dbg !5979
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !5979
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !5979
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 1), !dbg !5979
  %tobool63 = icmp ne i64 %expval62, 0, !dbg !5979
  br i1 %tobool63, label %if.then66, label %lor.lhs.false, !dbg !5980

lor.lhs.false:                                    ; preds = %if.end54
  %40 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5981, !tbaa !1461
  %call64 = call i32 @Py_IS_TYPE(ptr noundef %40, ptr noundef @PyList_Type), !dbg !5981
  %tobool65 = icmp ne i32 %call64, 0, !dbg !5981
  br i1 %tobool65, label %if.then66, label %if.else106, !dbg !5982

if.then66:                                        ; preds = %lor.lhs.false, %if.end54
  call void @llvm.lifetime.start.p0(i64 8, ptr %sequence) #10, !dbg !5983
  tail call void @llvm.dbg.declare(metadata ptr %sequence, metadata !5814, metadata !DIExpression()), !dbg !5984
  %41 = load ptr, ptr %__pyx_t_6, align 8, !dbg !5985, !tbaa !1461
  store ptr %41, ptr %sequence, align 8, !dbg !5984, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !5986
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !5820, metadata !DIExpression()), !dbg !5987
  %42 = load ptr, ptr %sequence, align 8, !dbg !5988, !tbaa !1461
  %call67 = call i64 @Py_SIZE(ptr noundef %42), !dbg !5988
  store i64 %call67, ptr %size, align 8, !dbg !5987, !tbaa !1836
  %43 = load i64, ptr %size, align 8, !dbg !5989, !tbaa !1836
  %cmp68 = icmp ne i64 %43, 2, !dbg !5989
  %lnot70 = xor i1 %cmp68, true, !dbg !5989
  %lnot72 = xor i1 %lnot70, true, !dbg !5989
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !5989
  %conv74 = sext i32 %lnot.ext73 to i64, !dbg !5989
  %expval75 = call i64 @llvm.expect.i64(i64 %conv74, i64 0), !dbg !5989
  %tobool76 = icmp ne i64 %expval75, 0, !dbg !5989
  br i1 %tobool76, label %if.then77, label %if.end86, !dbg !5991

if.then77:                                        ; preds = %if.then66
  %44 = load i64, ptr %size, align 8, !dbg !5992, !tbaa !1836
  %cmp78 = icmp sgt i64 %44, 2, !dbg !5995
  br i1 %cmp78, label %if.then80, label %if.else, !dbg !5996

if.then80:                                        ; preds = %if.then77
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef 2), !dbg !5997
  br label %if.end85, !dbg !5997

if.else:                                          ; preds = %if.then77
  %45 = load i64, ptr %size, align 8, !dbg !5998, !tbaa !1836
  %cmp81 = icmp sge i64 %45, 0, !dbg !6000
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !6001

if.then83:                                        ; preds = %if.else
  %46 = load i64, ptr %size, align 8, !dbg !6002, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %46), !dbg !6003
  br label %if.end84, !dbg !6003

if.end84:                                         ; preds = %if.then83, %if.else
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then80
  %47 = load ptr, ptr @__pyx_f, align 16, !dbg !6004, !tbaa !1461
  store ptr %47, ptr %__pyx_filename, align 8, !dbg !6004, !tbaa !1461
  %48 = load ptr, ptr %__pyx_filename, align 8, !dbg !6004, !tbaa !1461
  store i32 65, ptr %__pyx_lineno, align 4, !dbg !6004, !tbaa !1557
  %49 = load i32, ptr %__pyx_lineno, align 4, !dbg !6004, !tbaa !1557
  store i32 3751, ptr %__pyx_clineno, align 4, !dbg !6004, !tbaa !1557
  %50 = load i32, ptr %__pyx_clineno, align 4, !dbg !6004, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6007

if.end86:                                         ; preds = %if.then66
  %51 = load ptr, ptr %sequence, align 8, !dbg !6008, !tbaa !1461
  %call87 = call i32 @Py_IS_TYPE(ptr noundef %51, ptr noundef @PyTuple_Type), !dbg !6008
  %tobool88 = icmp ne i32 %call87, 0, !dbg !6008
  %lnot89 = xor i1 %tobool88, true, !dbg !6008
  %lnot91 = xor i1 %lnot89, true, !dbg !6008
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !6008
  %conv93 = sext i32 %lnot.ext92 to i64, !dbg !6008
  %expval94 = call i64 @llvm.expect.i64(i64 %conv93, i64 1), !dbg !6008
  %tobool95 = icmp ne i64 %expval94, 0, !dbg !6008
  br i1 %tobool95, label %if.then96, label %if.else99, !dbg !6010

if.then96:                                        ; preds = %if.end86
  %52 = load ptr, ptr %sequence, align 8, !dbg !6011, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %52, i32 0, i32 1, !dbg !6011
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !6011
  %53 = load ptr, ptr %arrayidx, align 8, !dbg !6011, !tbaa !1461
  store ptr %53, ptr %__pyx_t_8, align 8, !dbg !6013, !tbaa !1461
  %54 = load ptr, ptr %sequence, align 8, !dbg !6014, !tbaa !1461
  %ob_item97 = getelementptr inbounds %struct.PyTupleObject, ptr %54, i32 0, i32 1, !dbg !6014
  %arrayidx98 = getelementptr [1 x ptr], ptr %ob_item97, i64 0, i64 1, !dbg !6014
  %55 = load ptr, ptr %arrayidx98, align 8, !dbg !6014, !tbaa !1461
  store ptr %55, ptr %__pyx_t_9, align 8, !dbg !6015, !tbaa !1461
  br label %if.end104, !dbg !6016

if.else99:                                        ; preds = %if.end86
  %56 = load ptr, ptr %sequence, align 8, !dbg !6017, !tbaa !1461
  %ob_item100 = getelementptr inbounds %struct.PyListObject, ptr %56, i32 0, i32 1, !dbg !6017
  %57 = load ptr, ptr %ob_item100, align 8, !dbg !6017, !tbaa !1868
  %arrayidx101 = getelementptr ptr, ptr %57, i64 0, !dbg !6017
  %58 = load ptr, ptr %arrayidx101, align 8, !dbg !6017, !tbaa !1461
  store ptr %58, ptr %__pyx_t_8, align 8, !dbg !6019, !tbaa !1461
  %59 = load ptr, ptr %sequence, align 8, !dbg !6020, !tbaa !1461
  %ob_item102 = getelementptr inbounds %struct.PyListObject, ptr %59, i32 0, i32 1, !dbg !6020
  %60 = load ptr, ptr %ob_item102, align 8, !dbg !6020, !tbaa !1868
  %arrayidx103 = getelementptr ptr, ptr %60, i64 1, !dbg !6020
  %61 = load ptr, ptr %arrayidx103, align 8, !dbg !6020, !tbaa !1461
  store ptr %61, ptr %__pyx_t_9, align 8, !dbg !6021, !tbaa !1461
  br label %if.end104

if.end104:                                        ; preds = %if.else99, %if.then96
  %62 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6022, !tbaa !1461
  call void @Py_INCREF(ptr noundef %62), !dbg !6022
  %63 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6023, !tbaa !1461
  call void @Py_INCREF(ptr noundef %63), !dbg !6023
  %64 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6024, !tbaa !1461
  call void @Py_DECREF(ptr noundef %64), !dbg !6024
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6025, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6026
  br label %cleanup, !dbg !6026

cleanup:                                          ; preds = %if.end85, %if.end104
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !6026
  call void @llvm.lifetime.end.p0(i64 8, ptr %sequence) #10, !dbg !6026
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup671 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end161, !dbg !6027

if.else106:                                       ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr %index) #10, !dbg !6028
  tail call void @llvm.dbg.declare(metadata ptr %index, metadata !5821, metadata !DIExpression()), !dbg !6029
  store i64 -1, ptr %index, align 8, !dbg !6029, !tbaa !1836
  %65 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6030, !tbaa !1461
  %call107 = call ptr @PyObject_GetIter(ptr noundef %65), !dbg !6031
  store ptr %call107, ptr %__pyx_t_10, align 8, !dbg !6032, !tbaa !1461
  %66 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6033, !tbaa !1461
  %tobool108 = icmp ne ptr %66, null, !dbg !6033
  %lnot109 = xor i1 %tobool108, true, !dbg !6033
  %lnot111 = xor i1 %lnot109, true, !dbg !6033
  %lnot113 = xor i1 %lnot111, true, !dbg !6033
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !6033
  %conv115 = sext i32 %lnot.ext114 to i64, !dbg !6033
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 0), !dbg !6033
  %tobool117 = icmp ne i64 %expval116, 0, !dbg !6033
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !6035

if.then118:                                       ; preds = %if.else106
  %67 = load ptr, ptr @__pyx_f, align 16, !dbg !6036, !tbaa !1461
  store ptr %67, ptr %__pyx_filename, align 8, !dbg !6036, !tbaa !1461
  %68 = load ptr, ptr %__pyx_filename, align 8, !dbg !6036, !tbaa !1461
  store i32 65, ptr %__pyx_lineno, align 4, !dbg !6036, !tbaa !1557
  %69 = load i32, ptr %__pyx_lineno, align 4, !dbg !6036, !tbaa !1557
  store i32 3772, ptr %__pyx_clineno, align 4, !dbg !6036, !tbaa !1557
  %70 = load i32, ptr %__pyx_clineno, align 4, !dbg !6036, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup158, !dbg !6039

if.end119:                                        ; preds = %if.else106
  %71 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6040, !tbaa !1461
  call void @Py_DECREF(ptr noundef %71), !dbg !6040
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6041, !tbaa !1461
  %72 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6042, !tbaa !1461
  %call120 = call ptr @Py_TYPE(ptr noundef %72), !dbg !6042
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call120, i32 0, i32 26, !dbg !6042
  %73 = load ptr, ptr %tp_iternext, align 8, !dbg !6042, !tbaa !1896
  store ptr %73, ptr %__pyx_t_11, align 8, !dbg !6043, !tbaa !1461
  store i64 0, ptr %index, align 8, !dbg !6044, !tbaa !1836
  %74 = load ptr, ptr %__pyx_t_11, align 8, !dbg !6045, !tbaa !1461
  %75 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6046, !tbaa !1461
  %call121 = call ptr %74(ptr noundef %75), !dbg !6045
  store ptr %call121, ptr %__pyx_t_8, align 8, !dbg !6047, !tbaa !1461
  %76 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6048, !tbaa !1461
  %tobool122 = icmp ne ptr %76, null, !dbg !6048
  %lnot123 = xor i1 %tobool122, true, !dbg !6048
  %lnot125 = xor i1 %lnot123, true, !dbg !6048
  %lnot127 = xor i1 %lnot125, true, !dbg !6048
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !6048
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !6048
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0), !dbg !6048
  %tobool131 = icmp ne i64 %expval130, 0, !dbg !6048
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !6050

if.then132:                                       ; preds = %if.end119
  br label %__pyx_L6_unpacking_failed, !dbg !6051

if.end133:                                        ; preds = %if.end119
  store i64 1, ptr %index, align 8, !dbg !6052, !tbaa !1836
  %77 = load ptr, ptr %__pyx_t_11, align 8, !dbg !6053, !tbaa !1461
  %78 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6054, !tbaa !1461
  %call134 = call ptr %77(ptr noundef %78), !dbg !6053
  store ptr %call134, ptr %__pyx_t_9, align 8, !dbg !6055, !tbaa !1461
  %79 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6056, !tbaa !1461
  %tobool135 = icmp ne ptr %79, null, !dbg !6056
  %lnot136 = xor i1 %tobool135, true, !dbg !6056
  %lnot138 = xor i1 %lnot136, true, !dbg !6056
  %lnot140 = xor i1 %lnot138, true, !dbg !6056
  %lnot.ext141 = zext i1 %lnot140 to i32, !dbg !6056
  %conv142 = sext i32 %lnot.ext141 to i64, !dbg !6056
  %expval143 = call i64 @llvm.expect.i64(i64 %conv142, i64 0), !dbg !6056
  %tobool144 = icmp ne i64 %expval143, 0, !dbg !6056
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !6058

if.then145:                                       ; preds = %if.end133
  br label %__pyx_L6_unpacking_failed, !dbg !6059

if.end146:                                        ; preds = %if.end133
  %80 = load ptr, ptr %__pyx_t_11, align 8, !dbg !6060, !tbaa !1461
  %81 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6062, !tbaa !1461
  %call147 = call ptr %80(ptr noundef %81), !dbg !6060
  %call148 = call i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %call147, i64 noundef 2), !dbg !6063
  %cmp149 = icmp slt i32 %call148, 0, !dbg !6064
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !6065

if.then151:                                       ; preds = %if.end146
  %82 = load ptr, ptr @__pyx_f, align 16, !dbg !6066, !tbaa !1461
  store ptr %82, ptr %__pyx_filename, align 8, !dbg !6066, !tbaa !1461
  %83 = load ptr, ptr %__pyx_filename, align 8, !dbg !6066, !tbaa !1461
  store i32 65, ptr %__pyx_lineno, align 4, !dbg !6066, !tbaa !1557
  %84 = load i32, ptr %__pyx_lineno, align 4, !dbg !6066, !tbaa !1557
  store i32 3780, ptr %__pyx_clineno, align 4, !dbg !6066, !tbaa !1557
  %85 = load i32, ptr %__pyx_clineno, align 4, !dbg !6066, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup158, !dbg !6069

if.end152:                                        ; preds = %if.end146
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !6070, !tbaa !1461
  %86 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6071, !tbaa !1461
  call void @Py_DECREF(ptr noundef %86), !dbg !6071
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !6072, !tbaa !1461
  br label %__pyx_L7_unpacking_done, !dbg !6073

__pyx_L6_unpacking_failed:                        ; preds = %if.then145, %if.then132
  tail call void @llvm.dbg.label(metadata !5823), !dbg !6074
  %87 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6075, !tbaa !1461
  call void @Py_DECREF(ptr noundef %87), !dbg !6075
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !6076, !tbaa !1461
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !6077, !tbaa !1461
  %call153 = call i32 @__Pyx_IterFinish(), !dbg !6078
  %cmp154 = icmp eq i32 %call153, 0, !dbg !6080
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !6081

if.then156:                                       ; preds = %__pyx_L6_unpacking_failed
  %88 = load i64, ptr %index, align 8, !dbg !6082, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %88), !dbg !6083
  br label %if.end157, !dbg !6083

if.end157:                                        ; preds = %if.then156, %__pyx_L6_unpacking_failed
  %89 = load ptr, ptr @__pyx_f, align 16, !dbg !6084, !tbaa !1461
  store ptr %89, ptr %__pyx_filename, align 8, !dbg !6084, !tbaa !1461
  %90 = load ptr, ptr %__pyx_filename, align 8, !dbg !6084, !tbaa !1461
  store i32 65, ptr %__pyx_lineno, align 4, !dbg !6084, !tbaa !1557
  %91 = load i32, ptr %__pyx_lineno, align 4, !dbg !6084, !tbaa !1557
  store i32 3788, ptr %__pyx_clineno, align 4, !dbg !6084, !tbaa !1557
  %92 = load i32, ptr %__pyx_clineno, align 4, !dbg !6084, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup158, !dbg !6087

__pyx_L7_unpacking_done:                          ; preds = %if.end152
  tail call void @llvm.dbg.label(metadata !5824), !dbg !6088
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6089
  br label %cleanup158, !dbg !6089

cleanup158:                                       ; preds = %if.end157, %if.then151, %if.then118, %__pyx_L7_unpacking_done
  call void @llvm.lifetime.end.p0(i64 8, ptr %index) #10, !dbg !6089
  %cleanup.dest159 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest159, label %cleanup671 [
    i32 0, label %cleanup.cont160
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont160:                                  ; preds = %cleanup158
  br label %if.end161

if.end161:                                        ; preds = %cleanup.cont160, %cleanup.cont
  br label %do.body, !dbg !6090

do.body:                                          ; preds = %if.end161
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #10, !dbg !6091
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5825, metadata !DIExpression()), !dbg !6091
  %93 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6091, !tbaa !1461
  store ptr %93, ptr %tmp, align 8, !dbg !6091, !tbaa !1461
  %94 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6091, !tbaa !1461
  store ptr %94, ptr %__pyx_v_count, align 8, !dbg !6091, !tbaa !1461
  %95 = load ptr, ptr %tmp, align 8, !dbg !6091, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %95), !dbg !6091
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #10, !dbg !6090
  br label %do.cond, !dbg !6091

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6091

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6092, !tbaa !1461
  br label %do.body162, !dbg !6093

do.body162:                                       ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp163) #10, !dbg !6094
  tail call void @llvm.dbg.declare(metadata ptr %tmp163, metadata !5827, metadata !DIExpression()), !dbg !6094
  %96 = load ptr, ptr %__pyx_v_linenos, align 8, !dbg !6094, !tbaa !1461
  store ptr %96, ptr %tmp163, align 8, !dbg !6094, !tbaa !1461
  %97 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6094, !tbaa !1461
  store ptr %97, ptr %__pyx_v_linenos, align 8, !dbg !6094, !tbaa !1461
  %98 = load ptr, ptr %tmp163, align 8, !dbg !6094, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %98), !dbg !6094
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp163) #10, !dbg !6093
  br label %do.cond164, !dbg !6094

do.cond164:                                       ; preds = %do.body162
  br label %do.end165, !dbg !6094

do.end165:                                        ; preds = %do.cond164
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !6095, !tbaa !1461
  %call166 = call ptr @PyTuple_New(i64 noundef 4), !dbg !6096
  store ptr %call166, ptr %__pyx_t_6, align 8, !dbg !6097, !tbaa !1461
  %99 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6098, !tbaa !1461
  %tobool167 = icmp ne ptr %99, null, !dbg !6098
  %lnot168 = xor i1 %tobool167, true, !dbg !6098
  %lnot170 = xor i1 %lnot168, true, !dbg !6098
  %lnot172 = xor i1 %lnot170, true, !dbg !6098
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !6098
  %conv174 = sext i32 %lnot.ext173 to i64, !dbg !6098
  %expval175 = call i64 @llvm.expect.i64(i64 %conv174, i64 0), !dbg !6098
  %tobool176 = icmp ne i64 %expval175, 0, !dbg !6098
  br i1 %tobool176, label %if.then177, label %if.end178, !dbg !6100

if.then177:                                       ; preds = %do.end165
  %100 = load ptr, ptr @__pyx_f, align 16, !dbg !6101, !tbaa !1461
  store ptr %100, ptr %__pyx_filename, align 8, !dbg !6101, !tbaa !1461
  %101 = load ptr, ptr %__pyx_filename, align 8, !dbg !6101, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6101, !tbaa !1557
  %102 = load i32, ptr %__pyx_lineno, align 4, !dbg !6101, !tbaa !1557
  store i32 3803, ptr %__pyx_clineno, align 4, !dbg !6101, !tbaa !1557
  %103 = load i32, ptr %__pyx_clineno, align 4, !dbg !6101, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6104

if.end178:                                        ; preds = %do.end165
  store i64 0, ptr %__pyx_t_12, align 8, !dbg !6105, !tbaa !1836
  store i32 127, ptr %__pyx_t_13, align 4, !dbg !6106, !tbaa !1557
  %104 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6107, !tbaa !1461
  %__pyx_kp_u_ = getelementptr inbounds %struct.__pyx_mstate, ptr %104, i32 0, i32 8, !dbg !6107
  %105 = load ptr, ptr %__pyx_kp_u_, align 8, !dbg !6107, !tbaa !6108
  call void @Py_INCREF(ptr noundef %105), !dbg !6107
  %106 = load i64, ptr %__pyx_t_12, align 8, !dbg !6109, !tbaa !1836
  %add = add i64 %106, 4, !dbg !6109
  store i64 %add, ptr %__pyx_t_12, align 8, !dbg !6109, !tbaa !1836
  %107 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6110, !tbaa !1461
  %108 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6110, !tbaa !1461
  %__pyx_kp_u_179 = getelementptr inbounds %struct.__pyx_mstate, ptr %108, i32 0, i32 8, !dbg !6110
  %109 = load ptr, ptr %__pyx_kp_u_179, align 8, !dbg !6110, !tbaa !6108
  call void @PyTuple_SET_ITEM(ptr noundef %107, i64 noundef 0, ptr noundef %109), !dbg !6110
  %110 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  %call180 = call i32 @Py_IS_TYPE(ptr noundef %110, ptr noundef @PyUnicode_Type), !dbg !6111
  %tobool181 = icmp ne i32 %call180, 0, !dbg !6111
  %lnot182 = xor i1 %tobool181, true, !dbg !6111
  %lnot184 = xor i1 %lnot182, true, !dbg !6111
  %lnot.ext185 = zext i1 %lnot184 to i32, !dbg !6111
  %conv186 = sext i32 %lnot.ext185 to i64, !dbg !6111
  %expval187 = call i64 @llvm.expect.i64(i64 %conv186, i64 1), !dbg !6111
  %tobool188 = icmp ne i64 %expval187, 0, !dbg !6111
  br i1 %tobool188, label %cond.true, label %cond.false, !dbg !6111

cond.true:                                        ; preds = %if.end178
  %111 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  call void @Py_INCREF(ptr noundef %111), !dbg !6111
  %112 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  br label %cond.end216, !dbg !6111

cond.false:                                       ; preds = %if.end178
  %113 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  %call189 = call i32 @Py_IS_TYPE(ptr noundef %113, ptr noundef @PyLong_Type), !dbg !6111
  %tobool190 = icmp ne i32 %call189, 0, !dbg !6111
  %lnot191 = xor i1 %tobool190, true, !dbg !6111
  %lnot193 = xor i1 %lnot191, true, !dbg !6111
  %lnot.ext194 = zext i1 %lnot193 to i32, !dbg !6111
  %conv195 = sext i32 %lnot.ext194 to i64, !dbg !6111
  %expval196 = call i64 @llvm.expect.i64(i64 %conv195, i64 1), !dbg !6111
  %tobool197 = icmp ne i64 %expval196, 0, !dbg !6111
  br i1 %tobool197, label %cond.true198, label %cond.false200, !dbg !6111

cond.true198:                                     ; preds = %cond.false
  %114 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 9), align 8, !dbg !6111, !tbaa !3569
  %115 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  %call199 = call ptr %114(ptr noundef %115), !dbg !6111
  br label %cond.end214, !dbg !6111

cond.false200:                                    ; preds = %cond.false
  %116 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  %call201 = call i32 @Py_IS_TYPE(ptr noundef %116, ptr noundef @PyFloat_Type), !dbg !6111
  %tobool202 = icmp ne i32 %call201, 0, !dbg !6111
  %lnot203 = xor i1 %tobool202, true, !dbg !6111
  %lnot205 = xor i1 %lnot203, true, !dbg !6111
  %lnot.ext206 = zext i1 %lnot205 to i32, !dbg !6111
  %conv207 = sext i32 %lnot.ext206 to i64, !dbg !6111
  %expval208 = call i64 @llvm.expect.i64(i64 %conv207, i64 1), !dbg !6111
  %tobool209 = icmp ne i64 %expval208, 0, !dbg !6111
  br i1 %tobool209, label %cond.true210, label %cond.false212, !dbg !6111

cond.true210:                                     ; preds = %cond.false200
  %117 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFloat_Type, i32 0, i32 9), align 8, !dbg !6111, !tbaa !3569
  %118 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  %call211 = call ptr %117(ptr noundef %118), !dbg !6111
  br label %cond.end, !dbg !6111

cond.false212:                                    ; preds = %cond.false200
  %119 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6111, !tbaa !1461
  %120 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6111, !tbaa !1461
  %__pyx_empty_unicode = getelementptr inbounds %struct.__pyx_mstate, ptr %120, i32 0, i32 5, !dbg !6111
  %121 = load ptr, ptr %__pyx_empty_unicode, align 8, !dbg !6111, !tbaa !1676
  %call213 = call ptr @PyObject_Format(ptr noundef %119, ptr noundef %121), !dbg !6111
  br label %cond.end, !dbg !6111

cond.end:                                         ; preds = %cond.false212, %cond.true210
  %cond = phi ptr [ %call211, %cond.true210 ], [ %call213, %cond.false212 ], !dbg !6111
  br label %cond.end214, !dbg !6111

cond.end214:                                      ; preds = %cond.end, %cond.true198
  %cond215 = phi ptr [ %call199, %cond.true198 ], [ %cond, %cond.end ], !dbg !6111
  br label %cond.end216, !dbg !6111

cond.end216:                                      ; preds = %cond.end214, %cond.true
  %cond217 = phi ptr [ %112, %cond.true ], [ %cond215, %cond.end214 ], !dbg !6111
  store ptr %cond217, ptr %__pyx_t_9, align 8, !dbg !6112, !tbaa !1461
  %122 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6113, !tbaa !1461
  %tobool218 = icmp ne ptr %122, null, !dbg !6113
  %lnot219 = xor i1 %tobool218, true, !dbg !6113
  %lnot221 = xor i1 %lnot219, true, !dbg !6113
  %lnot223 = xor i1 %lnot221, true, !dbg !6113
  %lnot.ext224 = zext i1 %lnot223 to i32, !dbg !6113
  %conv225 = sext i32 %lnot.ext224 to i64, !dbg !6113
  %expval226 = call i64 @llvm.expect.i64(i64 %conv225, i64 0), !dbg !6113
  %tobool227 = icmp ne i64 %expval226, 0, !dbg !6113
  br i1 %tobool227, label %if.then228, label %if.end229, !dbg !6115

if.then228:                                       ; preds = %cond.end216
  %123 = load ptr, ptr @__pyx_f, align 16, !dbg !6116, !tbaa !1461
  store ptr %123, ptr %__pyx_filename, align 8, !dbg !6116, !tbaa !1461
  %124 = load ptr, ptr %__pyx_filename, align 8, !dbg !6116, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6116, !tbaa !1557
  %125 = load i32, ptr %__pyx_lineno, align 4, !dbg !6116, !tbaa !1557
  store i32 3811, ptr %__pyx_clineno, align 4, !dbg !6116, !tbaa !1557
  %126 = load i32, ptr %__pyx_clineno, align 4, !dbg !6116, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6119

if.end229:                                        ; preds = %cond.end216
  %127 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6120, !tbaa !1461
  %call230 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %127), !dbg !6120
  %128 = load i32, ptr %__pyx_t_13, align 4, !dbg !6121, !tbaa !1557
  %cmp231 = icmp ugt i32 %call230, %128, !dbg !6122
  br i1 %cmp231, label %cond.true233, label %cond.false235, !dbg !6123

cond.true233:                                     ; preds = %if.end229
  %129 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6124, !tbaa !1461
  %call234 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %129), !dbg !6124
  br label %cond.end236, !dbg !6123

cond.false235:                                    ; preds = %if.end229
  %130 = load i32, ptr %__pyx_t_13, align 4, !dbg !6125, !tbaa !1557
  br label %cond.end236, !dbg !6123

cond.end236:                                      ; preds = %cond.false235, %cond.true233
  %cond237 = phi i32 [ %call234, %cond.true233 ], [ %130, %cond.false235 ], !dbg !6123
  store i32 %cond237, ptr %__pyx_t_13, align 4, !dbg !6126, !tbaa !1557
  %131 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6127, !tbaa !1461
  %call238 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %131), !dbg !6127
  %132 = load i64, ptr %__pyx_t_12, align 8, !dbg !6128, !tbaa !1836
  %add239 = add i64 %132, %call238, !dbg !6128
  store i64 %add239, ptr %__pyx_t_12, align 8, !dbg !6128, !tbaa !1836
  %133 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6129, !tbaa !1461
  %134 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6129, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %133, i64 noundef 1, ptr noundef %134), !dbg !6129
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !6130, !tbaa !1461
  %135 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6131, !tbaa !1461
  %__pyx_kp_u_acquired_on_lines = getelementptr inbounds %struct.__pyx_mstate, ptr %135, i32 0, i32 25, !dbg !6131
  %136 = load ptr, ptr %__pyx_kp_u_acquired_on_lines, align 8, !dbg !6131, !tbaa !6132
  call void @Py_INCREF(ptr noundef %136), !dbg !6131
  %137 = load i64, ptr %__pyx_t_12, align 8, !dbg !6133, !tbaa !1836
  %add240 = add i64 %137, 21, !dbg !6133
  store i64 %add240, ptr %__pyx_t_12, align 8, !dbg !6133, !tbaa !1836
  %138 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6134, !tbaa !1461
  %139 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6134, !tbaa !1461
  %__pyx_kp_u_acquired_on_lines241 = getelementptr inbounds %struct.__pyx_mstate, ptr %139, i32 0, i32 25, !dbg !6134
  %140 = load ptr, ptr %__pyx_kp_u_acquired_on_lines241, align 8, !dbg !6134, !tbaa !6132
  call void @PyTuple_SET_ITEM(ptr noundef %138, i64 noundef 2, ptr noundef %140), !dbg !6134
  %call242 = call ptr @PyList_New(i64 noundef 0), !dbg !6135
  store ptr %call242, ptr %__pyx_t_9, align 8, !dbg !6136, !tbaa !1461
  %141 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6137, !tbaa !1461
  %tobool243 = icmp ne ptr %141, null, !dbg !6137
  %lnot244 = xor i1 %tobool243, true, !dbg !6137
  %lnot246 = xor i1 %lnot244, true, !dbg !6137
  %lnot248 = xor i1 %lnot246, true, !dbg !6137
  %lnot.ext249 = zext i1 %lnot248 to i32, !dbg !6137
  %conv250 = sext i32 %lnot.ext249 to i64, !dbg !6137
  %expval251 = call i64 @llvm.expect.i64(i64 %conv250, i64 0), !dbg !6137
  %tobool252 = icmp ne i64 %expval251, 0, !dbg !6137
  br i1 %tobool252, label %if.then253, label %if.end254, !dbg !6139

if.then253:                                       ; preds = %cond.end236
  %142 = load ptr, ptr @__pyx_f, align 16, !dbg !6140, !tbaa !1461
  store ptr %142, ptr %__pyx_filename, align 8, !dbg !6140, !tbaa !1461
  %143 = load ptr, ptr %__pyx_filename, align 8, !dbg !6140, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6140, !tbaa !1557
  %144 = load i32, ptr %__pyx_lineno, align 4, !dbg !6140, !tbaa !1557
  store i32 3823, ptr %__pyx_clineno, align 4, !dbg !6140, !tbaa !1557
  %145 = load i32, ptr %__pyx_clineno, align 4, !dbg !6140, !tbaa !1557
  br label %__pyx_L10_error, !dbg !6143

if.end254:                                        ; preds = %cond.end236
  %146 = load ptr, ptr %__pyx_v_linenos, align 8, !dbg !6144, !tbaa !1461
  %call255 = call i32 @Py_IS_TYPE(ptr noundef %146, ptr noundef @PyList_Type), !dbg !6144
  %tobool256 = icmp ne i32 %call255, 0, !dbg !6144
  %lnot257 = xor i1 %tobool256, true, !dbg !6144
  %lnot259 = xor i1 %lnot257, true, !dbg !6144
  %lnot.ext260 = zext i1 %lnot259 to i32, !dbg !6144
  %conv261 = sext i32 %lnot.ext260 to i64, !dbg !6144
  %expval262 = call i64 @llvm.expect.i64(i64 %conv261, i64 1), !dbg !6144
  %tobool263 = icmp ne i64 %expval262, 0, !dbg !6144
  br i1 %tobool263, label %if.then267, label %lor.lhs.false264, !dbg !6146

lor.lhs.false264:                                 ; preds = %if.end254
  %147 = load ptr, ptr %__pyx_v_linenos, align 8, !dbg !6147, !tbaa !1461
  %call265 = call i32 @Py_IS_TYPE(ptr noundef %147, ptr noundef @PyTuple_Type), !dbg !6147
  %tobool266 = icmp ne i32 %call265, 0, !dbg !6147
  br i1 %tobool266, label %if.then267, label %if.else268, !dbg !6148

if.then267:                                       ; preds = %lor.lhs.false264, %if.end254
  %148 = load ptr, ptr %__pyx_v_linenos, align 8, !dbg !6149, !tbaa !1461
  store ptr %148, ptr %__pyx_t_8, align 8, !dbg !6151, !tbaa !1461
  %149 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6152, !tbaa !1461
  call void @Py_INCREF(ptr noundef %149), !dbg !6152
  store i64 0, ptr %__pyx_t_14, align 8, !dbg !6153, !tbaa !1836
  store ptr null, ptr %__pyx_t_15, align 8, !dbg !6154, !tbaa !1461
  br label %if.end296, !dbg !6155

if.else268:                                       ; preds = %lor.lhs.false264
  store i64 -1, ptr %__pyx_t_14, align 8, !dbg !6156, !tbaa !1836
  %150 = load ptr, ptr %__pyx_v_linenos, align 8, !dbg !6158, !tbaa !1461
  %call269 = call ptr @PyObject_GetIter(ptr noundef %150), !dbg !6159
  store ptr %call269, ptr %__pyx_t_8, align 8, !dbg !6160, !tbaa !1461
  %151 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6161, !tbaa !1461
  %tobool270 = icmp ne ptr %151, null, !dbg !6161
  %lnot271 = xor i1 %tobool270, true, !dbg !6161
  %lnot273 = xor i1 %lnot271, true, !dbg !6161
  %lnot275 = xor i1 %lnot273, true, !dbg !6161
  %lnot.ext276 = zext i1 %lnot275 to i32, !dbg !6161
  %conv277 = sext i32 %lnot.ext276 to i64, !dbg !6161
  %expval278 = call i64 @llvm.expect.i64(i64 %conv277, i64 0), !dbg !6161
  %tobool279 = icmp ne i64 %expval278, 0, !dbg !6161
  br i1 %tobool279, label %if.then280, label %if.end281, !dbg !6163

if.then280:                                       ; preds = %if.else268
  %152 = load ptr, ptr @__pyx_f, align 16, !dbg !6164, !tbaa !1461
  store ptr %152, ptr %__pyx_filename, align 8, !dbg !6164, !tbaa !1461
  %153 = load ptr, ptr %__pyx_filename, align 8, !dbg !6164, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6164, !tbaa !1557
  %154 = load i32, ptr %__pyx_lineno, align 4, !dbg !6164, !tbaa !1557
  store i32 3830, ptr %__pyx_clineno, align 4, !dbg !6164, !tbaa !1557
  %155 = load i32, ptr %__pyx_clineno, align 4, !dbg !6164, !tbaa !1557
  br label %__pyx_L10_error, !dbg !6167

if.end281:                                        ; preds = %if.else268
  %156 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6168, !tbaa !1461
  %call282 = call ptr @Py_TYPE(ptr noundef %156), !dbg !6168
  %tp_iternext283 = getelementptr inbounds %struct._typeobject, ptr %call282, i32 0, i32 26, !dbg !6168
  %157 = load ptr, ptr %tp_iternext283, align 8, !dbg !6168, !tbaa !1896
  store ptr %157, ptr %__pyx_t_15, align 8, !dbg !6169, !tbaa !1461
  %158 = load ptr, ptr %__pyx_t_15, align 8, !dbg !6170, !tbaa !1461
  %tobool284 = icmp ne ptr %158, null, !dbg !6170
  %lnot285 = xor i1 %tobool284, true, !dbg !6170
  %lnot287 = xor i1 %lnot285, true, !dbg !6170
  %lnot289 = xor i1 %lnot287, true, !dbg !6170
  %lnot.ext290 = zext i1 %lnot289 to i32, !dbg !6170
  %conv291 = sext i32 %lnot.ext290 to i64, !dbg !6170
  %expval292 = call i64 @llvm.expect.i64(i64 %conv291, i64 0), !dbg !6170
  %tobool293 = icmp ne i64 %expval292, 0, !dbg !6170
  br i1 %tobool293, label %if.then294, label %if.end295, !dbg !6172

if.then294:                                       ; preds = %if.end281
  %159 = load ptr, ptr @__pyx_f, align 16, !dbg !6173, !tbaa !1461
  store ptr %159, ptr %__pyx_filename, align 8, !dbg !6173, !tbaa !1461
  %160 = load ptr, ptr %__pyx_filename, align 8, !dbg !6173, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6173, !tbaa !1557
  %161 = load i32, ptr %__pyx_lineno, align 4, !dbg !6173, !tbaa !1557
  store i32 3832, ptr %__pyx_clineno, align 4, !dbg !6173, !tbaa !1557
  %162 = load i32, ptr %__pyx_clineno, align 4, !dbg !6173, !tbaa !1557
  br label %__pyx_L10_error, !dbg !6176

if.end295:                                        ; preds = %if.end281
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.then267
  br label %for.cond, !dbg !6177

for.cond:                                         ; preds = %if.end444, %if.end296
  %163 = load ptr, ptr %__pyx_t_15, align 8, !dbg !6178, !tbaa !1461
  %tobool297 = icmp ne ptr %163, null, !dbg !6178
  %lnot298 = xor i1 %tobool297, true, !dbg !6178
  %lnot300 = xor i1 %lnot298, true, !dbg !6178
  %lnot302 = xor i1 %lnot300, true, !dbg !6178
  %lnot.ext303 = zext i1 %lnot302 to i32, !dbg !6178
  %conv304 = sext i32 %lnot.ext303 to i64, !dbg !6178
  %expval305 = call i64 @llvm.expect.i64(i64 %conv304, i64 1), !dbg !6178
  %tobool306 = icmp ne i64 %expval305, 0, !dbg !6178
  br i1 %tobool306, label %if.then307, label %if.else342, !dbg !6179

if.then307:                                       ; preds = %for.cond
  %164 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6180, !tbaa !1461
  %call308 = call i32 @Py_IS_TYPE(ptr noundef %164, ptr noundef @PyList_Type), !dbg !6180
  %tobool309 = icmp ne i32 %call308, 0, !dbg !6180
  %lnot310 = xor i1 %tobool309, true, !dbg !6180
  %lnot312 = xor i1 %lnot310, true, !dbg !6180
  %lnot.ext313 = zext i1 %lnot312 to i32, !dbg !6180
  %conv314 = sext i32 %lnot.ext313 to i64, !dbg !6180
  %expval315 = call i64 @llvm.expect.i64(i64 %conv314, i64 1), !dbg !6180
  %tobool316 = icmp ne i64 %expval315, 0, !dbg !6180
  br i1 %tobool316, label %if.then317, label %if.else328, !dbg !6181

if.then317:                                       ; preds = %if.then307
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #10, !dbg !6182
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp, metadata !5829, metadata !DIExpression()), !dbg !6183
  %165 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6184, !tbaa !1461
  %call318 = call i64 @PyList_GET_SIZE(ptr noundef %165), !dbg !6184
  store i64 %call318, ptr %__pyx_temp, align 8, !dbg !6183, !tbaa !1836
  %166 = load i64, ptr %__pyx_t_14, align 8, !dbg !6185, !tbaa !1836
  %167 = load i64, ptr %__pyx_temp, align 8, !dbg !6187, !tbaa !1836
  %cmp319 = icmp sge i64 %166, %167, !dbg !6188
  br i1 %cmp319, label %if.then321, label %if.end322, !dbg !6189

if.then321:                                       ; preds = %if.then317
  store i32 12, ptr %cleanup.dest.slot, align 4
  br label %cleanup323, !dbg !6190

if.end322:                                        ; preds = %if.then317
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6191
  br label %cleanup323, !dbg !6191

cleanup323:                                       ; preds = %if.end322, %if.then321
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #10, !dbg !6191
  %cleanup.dest324 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest324, label %unreachable [
    i32 0, label %cleanup.cont325
    i32 12, label %for.end
  ]

cleanup.cont325:                                  ; preds = %cleanup323
  %168 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6192, !tbaa !1461
  %ob_item326 = getelementptr inbounds %struct.PyListObject, ptr %168, i32 0, i32 1, !dbg !6192
  %169 = load ptr, ptr %ob_item326, align 8, !dbg !6192, !tbaa !1868
  %170 = load i64, ptr %__pyx_t_14, align 8, !dbg !6192, !tbaa !1836
  %arrayidx327 = getelementptr ptr, ptr %169, i64 %170, !dbg !6192
  %171 = load ptr, ptr %arrayidx327, align 8, !dbg !6192, !tbaa !1461
  store ptr %171, ptr %__pyx_t_10, align 8, !dbg !6193, !tbaa !1461
  %172 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6194, !tbaa !1461
  call void @Py_INCREF(ptr noundef %172), !dbg !6194
  %173 = load i64, ptr %__pyx_t_14, align 8, !dbg !6195, !tbaa !1836
  %inc = add i64 %173, 1, !dbg !6195
  store i64 %inc, ptr %__pyx_t_14, align 8, !dbg !6195, !tbaa !1836
  br label %if.end341, !dbg !6196

if.else328:                                       ; preds = %if.then307
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp329) #10, !dbg !6197
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp329, metadata !5839, metadata !DIExpression()), !dbg !6198
  %174 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6199, !tbaa !1461
  %call330 = call i64 @PyTuple_GET_SIZE(ptr noundef %174), !dbg !6199
  store i64 %call330, ptr %__pyx_temp329, align 8, !dbg !6198, !tbaa !1836
  %175 = load i64, ptr %__pyx_t_14, align 8, !dbg !6200, !tbaa !1836
  %176 = load i64, ptr %__pyx_temp329, align 8, !dbg !6202, !tbaa !1836
  %cmp331 = icmp sge i64 %175, %176, !dbg !6203
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !6204

if.then333:                                       ; preds = %if.else328
  store i32 12, ptr %cleanup.dest.slot, align 4
  br label %cleanup335, !dbg !6205

if.end334:                                        ; preds = %if.else328
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6206
  br label %cleanup335, !dbg !6206

cleanup335:                                       ; preds = %if.end334, %if.then333
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp329) #10, !dbg !6206
  %cleanup.dest336 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest336, label %unreachable [
    i32 0, label %cleanup.cont337
    i32 12, label %for.end
  ]

cleanup.cont337:                                  ; preds = %cleanup335
  %177 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6207, !tbaa !1461
  %ob_item338 = getelementptr inbounds %struct.PyTupleObject, ptr %177, i32 0, i32 1, !dbg !6207
  %178 = load i64, ptr %__pyx_t_14, align 8, !dbg !6207, !tbaa !1836
  %arrayidx339 = getelementptr [1 x ptr], ptr %ob_item338, i64 0, i64 %178, !dbg !6207
  %179 = load ptr, ptr %arrayidx339, align 8, !dbg !6207, !tbaa !1461
  store ptr %179, ptr %__pyx_t_10, align 8, !dbg !6208, !tbaa !1461
  %180 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6209, !tbaa !1461
  call void @Py_INCREF(ptr noundef %180), !dbg !6209
  %181 = load i64, ptr %__pyx_t_14, align 8, !dbg !6210, !tbaa !1836
  %inc340 = add i64 %181, 1, !dbg !6210
  store i64 %inc340, ptr %__pyx_t_14, align 8, !dbg !6210, !tbaa !1836
  br label %if.end341

if.end341:                                        ; preds = %cleanup.cont337, %cleanup.cont325
  br label %if.end374, !dbg !6211

if.else342:                                       ; preds = %for.cond
  %182 = load ptr, ptr %__pyx_t_15, align 8, !dbg !6212, !tbaa !1461
  %183 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6213, !tbaa !1461
  %call343 = call ptr %182(ptr noundef %183), !dbg !6212
  store ptr %call343, ptr %__pyx_t_10, align 8, !dbg !6214, !tbaa !1461
  %184 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6215, !tbaa !1461
  %tobool344 = icmp ne ptr %184, null, !dbg !6215
  %lnot345 = xor i1 %tobool344, true, !dbg !6215
  %lnot347 = xor i1 %lnot345, true, !dbg !6215
  %lnot349 = xor i1 %lnot347, true, !dbg !6215
  %lnot.ext350 = zext i1 %lnot349 to i32, !dbg !6215
  %conv351 = sext i32 %lnot.ext350 to i64, !dbg !6215
  %expval352 = call i64 @llvm.expect.i64(i64 %conv351, i64 0), !dbg !6215
  %tobool353 = icmp ne i64 %expval352, 0, !dbg !6215
  br i1 %tobool353, label %if.then354, label %if.end373, !dbg !6216

if.then354:                                       ; preds = %if.else342
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #10, !dbg !6217
  tail call void @llvm.dbg.declare(metadata ptr %exc_type, metadata !5842, metadata !DIExpression()), !dbg !6218
  %call355 = call ptr @PyErr_Occurred(), !dbg !6219
  store ptr %call355, ptr %exc_type, align 8, !dbg !6218, !tbaa !1461
  %185 = load ptr, ptr %exc_type, align 8, !dbg !6220, !tbaa !1461
  %tobool356 = icmp ne ptr %185, null, !dbg !6220
  br i1 %tobool356, label %if.then357, label %if.end370, !dbg !6222

if.then357:                                       ; preds = %if.then354
  %186 = load ptr, ptr %exc_type, align 8, !dbg !6223, !tbaa !1461
  %187 = load ptr, ptr @PyExc_StopIteration, align 8, !dbg !6223, !tbaa !1461
  %call358 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %186, ptr noundef %187), !dbg !6223
  %tobool359 = icmp ne i32 %call358, 0, !dbg !6223
  %lnot360 = xor i1 %tobool359, true, !dbg !6223
  %lnot362 = xor i1 %lnot360, true, !dbg !6223
  %lnot.ext363 = zext i1 %lnot362 to i32, !dbg !6223
  %conv364 = sext i32 %lnot.ext363 to i64, !dbg !6223
  %expval365 = call i64 @llvm.expect.i64(i64 %conv364, i64 1), !dbg !6223
  %tobool366 = icmp ne i64 %expval365, 0, !dbg !6223
  br i1 %tobool366, label %if.then367, label %if.else368, !dbg !6226

if.then367:                                       ; preds = %if.then357
  call void @PyErr_Clear(), !dbg !6227
  br label %if.end369, !dbg !6227

if.else368:                                       ; preds = %if.then357
  %188 = load ptr, ptr @__pyx_f, align 16, !dbg !6228, !tbaa !1461
  store ptr %188, ptr %__pyx_filename, align 8, !dbg !6228, !tbaa !1461
  %189 = load ptr, ptr %__pyx_filename, align 8, !dbg !6228, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6228, !tbaa !1557
  %190 = load i32, ptr %__pyx_lineno, align 4, !dbg !6228, !tbaa !1557
  store i32 3871, ptr %__pyx_clineno, align 4, !dbg !6228, !tbaa !1557
  %191 = load i32, ptr %__pyx_clineno, align 4, !dbg !6228, !tbaa !1557
  store i32 11, ptr %cleanup.dest.slot, align 4
  br label %cleanup371, !dbg !6231

if.end369:                                        ; preds = %if.then367
  br label %if.end370, !dbg !6232

if.end370:                                        ; preds = %if.end369, %if.then354
  store i32 12, ptr %cleanup.dest.slot, align 4
  br label %cleanup371, !dbg !6233

cleanup371:                                       ; preds = %if.else368, %if.end370
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #10, !dbg !6234
  %cleanup.dest372 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest372, label %cleanup671 [
    i32 12, label %for.end
    i32 11, label %__pyx_L10_error
  ]

if.end373:                                        ; preds = %if.else342
  br label %if.end374

if.end374:                                        ; preds = %if.end373, %if.end341
  br label %do.body375, !dbg !6235

do.body375:                                       ; preds = %if.end374
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp376) #10, !dbg !6236
  tail call void @llvm.dbg.declare(metadata ptr %tmp376, metadata !5846, metadata !DIExpression()), !dbg !6236
  %192 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6236, !tbaa !1461
  store ptr %192, ptr %tmp376, align 8, !dbg !6236, !tbaa !1461
  %193 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6236, !tbaa !1461
  store ptr %193, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6236, !tbaa !1461
  %194 = load ptr, ptr %tmp376, align 8, !dbg !6236, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %194), !dbg !6236
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp376) #10, !dbg !6235
  br label %do.cond377, !dbg !6236

do.cond377:                                       ; preds = %do.body375
  br label %do.end378, !dbg !6236

do.end378:                                        ; preds = %do.cond377
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !6237, !tbaa !1461
  %195 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  %call379 = call i32 @Py_IS_TYPE(ptr noundef %195, ptr noundef @PyUnicode_Type), !dbg !6238
  %tobool380 = icmp ne i32 %call379, 0, !dbg !6238
  %lnot381 = xor i1 %tobool380, true, !dbg !6238
  %lnot383 = xor i1 %lnot381, true, !dbg !6238
  %lnot.ext384 = zext i1 %lnot383 to i32, !dbg !6238
  %conv385 = sext i32 %lnot.ext384 to i64, !dbg !6238
  %expval386 = call i64 @llvm.expect.i64(i64 %conv385, i64 1), !dbg !6238
  %tobool387 = icmp ne i64 %expval386, 0, !dbg !6238
  br i1 %tobool387, label %cond.true388, label %cond.false389, !dbg !6238

cond.true388:                                     ; preds = %do.end378
  %196 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  call void @Py_INCREF(ptr noundef %196), !dbg !6238
  %197 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  br label %cond.end420, !dbg !6238

cond.false389:                                    ; preds = %do.end378
  %198 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  %call390 = call i32 @Py_IS_TYPE(ptr noundef %198, ptr noundef @PyLong_Type), !dbg !6238
  %tobool391 = icmp ne i32 %call390, 0, !dbg !6238
  %lnot392 = xor i1 %tobool391, true, !dbg !6238
  %lnot394 = xor i1 %lnot392, true, !dbg !6238
  %lnot.ext395 = zext i1 %lnot394 to i32, !dbg !6238
  %conv396 = sext i32 %lnot.ext395 to i64, !dbg !6238
  %expval397 = call i64 @llvm.expect.i64(i64 %conv396, i64 1), !dbg !6238
  %tobool398 = icmp ne i64 %expval397, 0, !dbg !6238
  br i1 %tobool398, label %cond.true399, label %cond.false401, !dbg !6238

cond.true399:                                     ; preds = %cond.false389
  %199 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 9), align 8, !dbg !6238, !tbaa !3569
  %200 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  %call400 = call ptr %199(ptr noundef %200), !dbg !6238
  br label %cond.end418, !dbg !6238

cond.false401:                                    ; preds = %cond.false389
  %201 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  %call402 = call i32 @Py_IS_TYPE(ptr noundef %201, ptr noundef @PyFloat_Type), !dbg !6238
  %tobool403 = icmp ne i32 %call402, 0, !dbg !6238
  %lnot404 = xor i1 %tobool403, true, !dbg !6238
  %lnot406 = xor i1 %lnot404, true, !dbg !6238
  %lnot.ext407 = zext i1 %lnot406 to i32, !dbg !6238
  %conv408 = sext i32 %lnot.ext407 to i64, !dbg !6238
  %expval409 = call i64 @llvm.expect.i64(i64 %conv408, i64 1), !dbg !6238
  %tobool410 = icmp ne i64 %expval409, 0, !dbg !6238
  br i1 %tobool410, label %cond.true411, label %cond.false413, !dbg !6238

cond.true411:                                     ; preds = %cond.false401
  %202 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFloat_Type, i32 0, i32 9), align 8, !dbg !6238, !tbaa !3569
  %203 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  %call412 = call ptr %202(ptr noundef %203), !dbg !6238
  br label %cond.end416, !dbg !6238

cond.false413:                                    ; preds = %cond.false401
  %204 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6238, !tbaa !1461
  %205 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6238, !tbaa !1461
  %__pyx_empty_unicode414 = getelementptr inbounds %struct.__pyx_mstate, ptr %205, i32 0, i32 5, !dbg !6238
  %206 = load ptr, ptr %__pyx_empty_unicode414, align 8, !dbg !6238, !tbaa !1676
  %call415 = call ptr @PyObject_Format(ptr noundef %204, ptr noundef %206), !dbg !6238
  br label %cond.end416, !dbg !6238

cond.end416:                                      ; preds = %cond.false413, %cond.true411
  %cond417 = phi ptr [ %call412, %cond.true411 ], [ %call415, %cond.false413 ], !dbg !6238
  br label %cond.end418, !dbg !6238

cond.end418:                                      ; preds = %cond.end416, %cond.true399
  %cond419 = phi ptr [ %call400, %cond.true399 ], [ %cond417, %cond.end416 ], !dbg !6238
  br label %cond.end420, !dbg !6238

cond.end420:                                      ; preds = %cond.end418, %cond.true388
  %cond421 = phi ptr [ %197, %cond.true388 ], [ %cond419, %cond.end418 ], !dbg !6238
  store ptr %cond421, ptr %__pyx_t_10, align 8, !dbg !6239, !tbaa !1461
  %207 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6240, !tbaa !1461
  %tobool422 = icmp ne ptr %207, null, !dbg !6240
  %lnot423 = xor i1 %tobool422, true, !dbg !6240
  %lnot425 = xor i1 %lnot423, true, !dbg !6240
  %lnot427 = xor i1 %lnot425, true, !dbg !6240
  %lnot.ext428 = zext i1 %lnot427 to i32, !dbg !6240
  %conv429 = sext i32 %lnot.ext428 to i64, !dbg !6240
  %expval430 = call i64 @llvm.expect.i64(i64 %conv429, i64 0), !dbg !6240
  %tobool431 = icmp ne i64 %expval430, 0, !dbg !6240
  br i1 %tobool431, label %if.then432, label %if.end433, !dbg !6242

if.then432:                                       ; preds = %cond.end420
  %208 = load ptr, ptr @__pyx_f, align 16, !dbg !6243, !tbaa !1461
  store ptr %208, ptr %__pyx_filename, align 8, !dbg !6243, !tbaa !1461
  %209 = load ptr, ptr %__pyx_filename, align 8, !dbg !6243, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6243, !tbaa !1557
  %210 = load i32, ptr %__pyx_lineno, align 4, !dbg !6243, !tbaa !1557
  store i32 3879, ptr %__pyx_clineno, align 4, !dbg !6243, !tbaa !1557
  %211 = load i32, ptr %__pyx_clineno, align 4, !dbg !6243, !tbaa !1557
  br label %__pyx_L10_error, !dbg !6246

if.end433:                                        ; preds = %cond.end420
  %212 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6247, !tbaa !1461
  %213 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6247, !tbaa !1461
  %call434 = call i32 @__Pyx_ListComp_Append(ptr noundef %212, ptr noundef %213), !dbg !6247
  %tobool435 = icmp ne i32 %call434, 0, !dbg !6247
  %lnot436 = xor i1 %tobool435, true, !dbg !6247
  %lnot438 = xor i1 %lnot436, true, !dbg !6247
  %lnot.ext439 = zext i1 %lnot438 to i32, !dbg !6247
  %conv440 = sext i32 %lnot.ext439 to i64, !dbg !6247
  %expval441 = call i64 @llvm.expect.i64(i64 %conv440, i64 0), !dbg !6247
  %tobool442 = icmp ne i64 %expval441, 0, !dbg !6247
  br i1 %tobool442, label %if.then443, label %if.end444, !dbg !6249

if.then443:                                       ; preds = %if.end433
  %214 = load ptr, ptr @__pyx_f, align 16, !dbg !6250, !tbaa !1461
  store ptr %214, ptr %__pyx_filename, align 8, !dbg !6250, !tbaa !1461
  %215 = load ptr, ptr %__pyx_filename, align 8, !dbg !6250, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6250, !tbaa !1557
  %216 = load i32, ptr %__pyx_lineno, align 4, !dbg !6250, !tbaa !1557
  store i32 3881, ptr %__pyx_clineno, align 4, !dbg !6250, !tbaa !1557
  %217 = load i32, ptr %__pyx_clineno, align 4, !dbg !6250, !tbaa !1557
  br label %__pyx_L10_error, !dbg !6253

if.end444:                                        ; preds = %if.end433
  %218 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6254, !tbaa !1461
  call void @Py_DECREF(ptr noundef %218), !dbg !6254
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !6255, !tbaa !1461
  br label %for.cond, !dbg !6256, !llvm.loop !6257

for.end:                                          ; preds = %cleanup371, %cleanup335, %cleanup323
  %219 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6260, !tbaa !1461
  call void @Py_DECREF(ptr noundef %219), !dbg !6260
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6261, !tbaa !1461
  %220 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6262, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %220), !dbg !6262
  store ptr null, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6263, !tbaa !1461
  br label %__pyx_L14_exit_scope, !dbg !6264

__pyx_L10_error:                                  ; preds = %cleanup371, %if.then443, %if.then432, %if.then294, %if.then280, %if.then253
  tail call void @llvm.dbg.label(metadata !5848), !dbg !6265
  %221 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6266, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %221), !dbg !6266
  store ptr null, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6267, !tbaa !1461
  br label %__pyx_L1_error, !dbg !6268

__pyx_L14_exit_scope:                             ; preds = %for.end
  tail call void @llvm.dbg.label(metadata !5849), !dbg !6269
  %222 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6270, !tbaa !1461
  %__pyx_kp_u__2 = getelementptr inbounds %struct.__pyx_mstate, ptr %222, i32 0, i32 18, !dbg !6270
  %223 = load ptr, ptr %__pyx_kp_u__2, align 8, !dbg !6270, !tbaa !6271
  %224 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6272, !tbaa !1461
  %call445 = call ptr @PyUnicode_Join(ptr noundef %223, ptr noundef %224), !dbg !6273
  store ptr %call445, ptr %__pyx_t_8, align 8, !dbg !6274, !tbaa !1461
  %225 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6275, !tbaa !1461
  %tobool446 = icmp ne ptr %225, null, !dbg !6275
  %lnot447 = xor i1 %tobool446, true, !dbg !6275
  %lnot449 = xor i1 %lnot447, true, !dbg !6275
  %lnot451 = xor i1 %lnot449, true, !dbg !6275
  %lnot.ext452 = zext i1 %lnot451 to i32, !dbg !6275
  %conv453 = sext i32 %lnot.ext452 to i64, !dbg !6275
  %expval454 = call i64 @llvm.expect.i64(i64 %conv453, i64 0), !dbg !6275
  %tobool455 = icmp ne i64 %expval454, 0, !dbg !6275
  br i1 %tobool455, label %if.then456, label %if.end457, !dbg !6277

if.then456:                                       ; preds = %__pyx_L14_exit_scope
  %226 = load ptr, ptr @__pyx_f, align 16, !dbg !6278, !tbaa !1461
  store ptr %226, ptr %__pyx_filename, align 8, !dbg !6278, !tbaa !1461
  %227 = load ptr, ptr %__pyx_filename, align 8, !dbg !6278, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6278, !tbaa !1557
  %228 = load i32, ptr %__pyx_lineno, align 4, !dbg !6278, !tbaa !1557
  store i32 3892, ptr %__pyx_clineno, align 4, !dbg !6278, !tbaa !1557
  %229 = load i32, ptr %__pyx_clineno, align 4, !dbg !6278, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6281

if.end457:                                        ; preds = %__pyx_L14_exit_scope
  %230 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6282, !tbaa !1461
  call void @Py_DECREF(ptr noundef %230), !dbg !6282
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !6283, !tbaa !1461
  %231 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6284, !tbaa !1461
  %call458 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %231), !dbg !6284
  %232 = load i32, ptr %__pyx_t_13, align 4, !dbg !6285, !tbaa !1557
  %cmp459 = icmp ugt i32 %call458, %232, !dbg !6286
  br i1 %cmp459, label %cond.true461, label %cond.false463, !dbg !6287

cond.true461:                                     ; preds = %if.end457
  %233 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6288, !tbaa !1461
  %call462 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %233), !dbg !6288
  br label %cond.end464, !dbg !6287

cond.false463:                                    ; preds = %if.end457
  %234 = load i32, ptr %__pyx_t_13, align 4, !dbg !6289, !tbaa !1557
  br label %cond.end464, !dbg !6287

cond.end464:                                      ; preds = %cond.false463, %cond.true461
  %cond465 = phi i32 [ %call462, %cond.true461 ], [ %234, %cond.false463 ], !dbg !6287
  store i32 %cond465, ptr %__pyx_t_13, align 4, !dbg !6290, !tbaa !1557
  %235 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6291, !tbaa !1461
  %call466 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %235), !dbg !6291
  %236 = load i64, ptr %__pyx_t_12, align 8, !dbg !6292, !tbaa !1836
  %add467 = add i64 %236, %call466, !dbg !6292
  store i64 %add467, ptr %__pyx_t_12, align 8, !dbg !6292, !tbaa !1836
  %237 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6293, !tbaa !1461
  %238 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6293, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %237, i64 noundef 3, ptr noundef %238), !dbg !6293
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6294, !tbaa !1461
  %239 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6295, !tbaa !1461
  %240 = load i64, ptr %__pyx_t_12, align 8, !dbg !6296, !tbaa !1836
  %241 = load i32, ptr %__pyx_t_13, align 4, !dbg !6297, !tbaa !1557
  %call468 = call ptr @__Pyx_PyUnicode_Join(ptr noundef %239, i64 noundef 4, i64 noundef %240, i32 noundef %241), !dbg !6298
  store ptr %call468, ptr %__pyx_t_8, align 8, !dbg !6299, !tbaa !1461
  %242 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6300, !tbaa !1461
  %tobool469 = icmp ne ptr %242, null, !dbg !6300
  %lnot470 = xor i1 %tobool469, true, !dbg !6300
  %lnot472 = xor i1 %lnot470, true, !dbg !6300
  %lnot474 = xor i1 %lnot472, true, !dbg !6300
  %lnot.ext475 = zext i1 %lnot474 to i32, !dbg !6300
  %conv476 = sext i32 %lnot.ext475 to i64, !dbg !6300
  %expval477 = call i64 @llvm.expect.i64(i64 %conv476, i64 0), !dbg !6300
  %tobool478 = icmp ne i64 %expval477, 0, !dbg !6300
  br i1 %tobool478, label %if.then479, label %if.end480, !dbg !6302

if.then479:                                       ; preds = %cond.end464
  %243 = load ptr, ptr @__pyx_f, align 16, !dbg !6303, !tbaa !1461
  store ptr %243, ptr %__pyx_filename, align 8, !dbg !6303, !tbaa !1461
  %244 = load ptr, ptr %__pyx_filename, align 8, !dbg !6303, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6303, !tbaa !1557
  %245 = load i32, ptr %__pyx_lineno, align 4, !dbg !6303, !tbaa !1557
  store i32 3900, ptr %__pyx_clineno, align 4, !dbg !6303, !tbaa !1557
  %246 = load i32, ptr %__pyx_clineno, align 4, !dbg !6303, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6306

if.end480:                                        ; preds = %cond.end464
  %247 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6307, !tbaa !1461
  call void @Py_DECREF(ptr noundef %247), !dbg !6307
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6308, !tbaa !1461
  %248 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6309, !tbaa !1461
  %call481 = call ptr @__Pyx_PyUnicode_ConcatInPlaceImpl(ptr noundef %__pyx_v_msg, ptr noundef %248), !dbg !6309
  store ptr %call481, ptr %__pyx_t_6, align 8, !dbg !6310, !tbaa !1461
  %249 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6311, !tbaa !1461
  %tobool482 = icmp ne ptr %249, null, !dbg !6311
  %lnot483 = xor i1 %tobool482, true, !dbg !6311
  %lnot485 = xor i1 %lnot483, true, !dbg !6311
  %lnot487 = xor i1 %lnot485, true, !dbg !6311
  %lnot.ext488 = zext i1 %lnot487 to i32, !dbg !6311
  %conv489 = sext i32 %lnot.ext488 to i64, !dbg !6311
  %expval490 = call i64 @llvm.expect.i64(i64 %conv489, i64 0), !dbg !6311
  %tobool491 = icmp ne i64 %expval490, 0, !dbg !6311
  br i1 %tobool491, label %if.then492, label %if.end493, !dbg !6313

if.then492:                                       ; preds = %if.end480
  %250 = load ptr, ptr @__pyx_f, align 16, !dbg !6314, !tbaa !1461
  store ptr %250, ptr %__pyx_filename, align 8, !dbg !6314, !tbaa !1461
  %251 = load ptr, ptr %__pyx_filename, align 8, !dbg !6314, !tbaa !1461
  store i32 66, ptr %__pyx_lineno, align 4, !dbg !6314, !tbaa !1557
  %252 = load i32, ptr %__pyx_lineno, align 4, !dbg !6314, !tbaa !1557
  store i32 3903, ptr %__pyx_clineno, align 4, !dbg !6314, !tbaa !1557
  %253 = load i32, ptr %__pyx_clineno, align 4, !dbg !6314, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6317

if.end493:                                        ; preds = %if.end480
  %254 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6318, !tbaa !1461
  call void @Py_DECREF(ptr noundef %254), !dbg !6318
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6319, !tbaa !1461
  br label %do.body494, !dbg !6320

do.body494:                                       ; preds = %if.end493
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp495) #10, !dbg !6321
  tail call void @llvm.dbg.declare(metadata ptr %tmp495, metadata !5850, metadata !DIExpression()), !dbg !6321
  %255 = load ptr, ptr %__pyx_v_msg, align 8, !dbg !6321, !tbaa !1461
  store ptr %255, ptr %tmp495, align 8, !dbg !6321, !tbaa !1461
  %256 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6321, !tbaa !1461
  store ptr %256, ptr %__pyx_v_msg, align 8, !dbg !6321, !tbaa !1461
  %257 = load ptr, ptr %tmp495, align 8, !dbg !6321, !tbaa !1461
  call void @Py_DECREF(ptr noundef %257), !dbg !6321
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp495) #10, !dbg !6320
  br label %do.cond496, !dbg !6321

do.cond496:                                       ; preds = %do.body494
  br label %do.end497, !dbg !6321

do.end497:                                        ; preds = %do.cond496
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6322, !tbaa !1461
  br label %while.cond, !dbg !5962, !llvm.loop !6323

while.end:                                        ; preds = %if.then42
  %258 = load ptr, ptr %__pyx_t_2, align 8, !dbg !6325, !tbaa !1461
  call void @Py_DECREF(ptr noundef %258), !dbg !6325
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !6326, !tbaa !1461
  %259 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6327, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %259, i32 0, i32 5, !dbg !6327
  %260 = load ptr, ptr %errors, align 8, !dbg !6327, !tbaa !4894
  %cmp498 = icmp eq ptr %260, @_Py_NoneStruct, !dbg !6327
  %lnot500 = xor i1 %cmp498, true, !dbg !6327
  %lnot502 = xor i1 %lnot500, true, !dbg !6327
  %lnot.ext503 = zext i1 %lnot502 to i32, !dbg !6327
  %conv504 = sext i32 %lnot.ext503 to i64, !dbg !6327
  %expval505 = call i64 @llvm.expect.i64(i64 %conv504, i64 0), !dbg !6327
  %tobool506 = icmp ne i64 %expval505, 0, !dbg !6327
  br i1 %tobool506, label %if.then507, label %if.end509, !dbg !6329

if.then507:                                       ; preds = %while.end
  %261 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !6330, !tbaa !1461
  %call508 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %261, ptr noundef @.str.24, ptr noundef @.str.25), !dbg !6332
  %262 = load ptr, ptr @__pyx_f, align 16, !dbg !6333, !tbaa !1461
  store ptr %262, ptr %__pyx_filename, align 8, !dbg !6333, !tbaa !1461
  %263 = load ptr, ptr %__pyx_filename, align 8, !dbg !6333, !tbaa !1461
  store i32 67, ptr %__pyx_lineno, align 4, !dbg !6333, !tbaa !1557
  %264 = load i32, ptr %__pyx_lineno, align 4, !dbg !6333, !tbaa !1557
  store i32 3920, ptr %__pyx_clineno, align 4, !dbg !6333, !tbaa !1557
  %265 = load i32, ptr %__pyx_clineno, align 4, !dbg !6333, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6336

if.end509:                                        ; preds = %while.end
  %266 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6337, !tbaa !1461
  %errors510 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %266, i32 0, i32 5, !dbg !6338
  %267 = load ptr, ptr %errors510, align 8, !dbg !6338, !tbaa !4894
  %268 = load ptr, ptr %__pyx_v_msg, align 8, !dbg !6339, !tbaa !1461
  %call511 = call i32 @__Pyx_PyList_Append(ptr noundef %267, ptr noundef %268), !dbg !6340
  store i32 %call511, ptr %__pyx_t_16, align 4, !dbg !6341, !tbaa !1557
  %269 = load i32, ptr %__pyx_t_16, align 4, !dbg !6342, !tbaa !1557
  %cmp512 = icmp eq i32 %269, -1, !dbg !6342
  %lnot514 = xor i1 %cmp512, true, !dbg !6342
  %lnot516 = xor i1 %lnot514, true, !dbg !6342
  %lnot.ext517 = zext i1 %lnot516 to i32, !dbg !6342
  %conv518 = sext i32 %lnot.ext517 to i64, !dbg !6342
  %expval519 = call i64 @llvm.expect.i64(i64 %conv518, i64 0), !dbg !6342
  %tobool520 = icmp ne i64 %expval519, 0, !dbg !6342
  br i1 %tobool520, label %if.then521, label %if.end522, !dbg !6344

if.then521:                                       ; preds = %if.end509
  %270 = load ptr, ptr @__pyx_f, align 16, !dbg !6345, !tbaa !1461
  store ptr %270, ptr %__pyx_filename, align 8, !dbg !6345, !tbaa !1461
  %271 = load ptr, ptr %__pyx_filename, align 8, !dbg !6345, !tbaa !1461
  store i32 67, ptr %__pyx_lineno, align 4, !dbg !6345, !tbaa !1557
  %272 = load i32, ptr %__pyx_lineno, align 4, !dbg !6345, !tbaa !1557
  store i32 3922, ptr %__pyx_clineno, align 4, !dbg !6345, !tbaa !1557
  %273 = load i32, ptr %__pyx_clineno, align 4, !dbg !6345, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6348

if.end522:                                        ; preds = %if.end509
  br label %if.end523, !dbg !6349

if.end523:                                        ; preds = %if.end522, %if.end
  %274 = load ptr, ptr %__pyx_r, align 8, !dbg !6350, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %274), !dbg !6350
  %275 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6351, !tbaa !1461
  %errors524 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %275, i32 0, i32 5, !dbg !6352
  %276 = load ptr, ptr %errors524, align 8, !dbg !6352, !tbaa !4894
  %cmp525 = icmp ne ptr %276, @_Py_NoneStruct, !dbg !6353
  br i1 %cmp525, label %land.rhs, label %land.end, !dbg !6354

land.rhs:                                         ; preds = %if.end523
  %277 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6355, !tbaa !1461
  %errors527 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %277, i32 0, i32 5, !dbg !6355
  %278 = load ptr, ptr %errors527, align 8, !dbg !6355, !tbaa !4894
  %call528 = call i64 @PyList_GET_SIZE(ptr noundef %278), !dbg !6355
  %cmp529 = icmp ne i64 %call528, 0, !dbg !6356
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end523
  %279 = phi i1 [ false, %if.end523 ], [ %cmp529, %land.rhs ], !dbg !6357
  %land.ext = zext i1 %279 to i32, !dbg !6354
  store i32 %land.ext, ptr %__pyx_t_1, align 4, !dbg !6358, !tbaa !1557
  %280 = load i32, ptr %__pyx_t_1, align 4, !dbg !6359, !tbaa !1557
  %tobool531 = icmp ne i32 %280, 0, !dbg !6359
  br i1 %tobool531, label %if.then532, label %if.else669, !dbg !6360

if.then532:                                       ; preds = %land.end
  %call533 = call ptr @PyList_New(i64 noundef 0), !dbg !6361
  store ptr %call533, ptr %__pyx_t_6, align 8, !dbg !6362, !tbaa !1461
  %281 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6363, !tbaa !1461
  %tobool534 = icmp ne ptr %281, null, !dbg !6363
  %lnot535 = xor i1 %tobool534, true, !dbg !6363
  %lnot537 = xor i1 %lnot535, true, !dbg !6363
  %lnot539 = xor i1 %lnot537, true, !dbg !6363
  %lnot.ext540 = zext i1 %lnot539 to i32, !dbg !6363
  %conv541 = sext i32 %lnot.ext540 to i64, !dbg !6363
  %expval542 = call i64 @llvm.expect.i64(i64 %conv541, i64 0), !dbg !6363
  %tobool543 = icmp ne i64 %expval542, 0, !dbg !6363
  br i1 %tobool543, label %if.then544, label %if.end545, !dbg !6365

if.then544:                                       ; preds = %if.then532
  %282 = load ptr, ptr @__pyx_f, align 16, !dbg !6366, !tbaa !1461
  store ptr %282, ptr %__pyx_filename, align 8, !dbg !6366, !tbaa !1461
  %283 = load ptr, ptr %__pyx_filename, align 8, !dbg !6366, !tbaa !1461
  store i32 68, ptr %__pyx_lineno, align 4, !dbg !6366, !tbaa !1557
  %284 = load i32, ptr %__pyx_lineno, align 4, !dbg !6366, !tbaa !1557
  store i32 3944, ptr %__pyx_clineno, align 4, !dbg !6366, !tbaa !1557
  %285 = load i32, ptr %__pyx_clineno, align 4, !dbg !6366, !tbaa !1557
  br label %__pyx_L17_error, !dbg !6369

if.end545:                                        ; preds = %if.then532
  %286 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6370, !tbaa !1461
  %errors546 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %286, i32 0, i32 5, !dbg !6370
  %287 = load ptr, ptr %errors546, align 8, !dbg !6370, !tbaa !4894
  %cmp547 = icmp eq ptr %287, @_Py_NoneStruct, !dbg !6370
  %lnot549 = xor i1 %cmp547, true, !dbg !6370
  %lnot551 = xor i1 %lnot549, true, !dbg !6370
  %lnot.ext552 = zext i1 %lnot551 to i32, !dbg !6370
  %conv553 = sext i32 %lnot.ext552 to i64, !dbg !6370
  %expval554 = call i64 @llvm.expect.i64(i64 %conv553, i64 0), !dbg !6370
  %tobool555 = icmp ne i64 %expval554, 0, !dbg !6370
  br i1 %tobool555, label %if.then556, label %if.end557, !dbg !6372

if.then556:                                       ; preds = %if.end545
  %288 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !6373, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %288, ptr noundef @.str.40), !dbg !6375
  %289 = load ptr, ptr @__pyx_f, align 16, !dbg !6376, !tbaa !1461
  store ptr %289, ptr %__pyx_filename, align 8, !dbg !6376, !tbaa !1461
  %290 = load ptr, ptr %__pyx_filename, align 8, !dbg !6376, !tbaa !1461
  store i32 68, ptr %__pyx_lineno, align 4, !dbg !6376, !tbaa !1557
  %291 = load i32, ptr %__pyx_lineno, align 4, !dbg !6376, !tbaa !1557
  store i32 3948, ptr %__pyx_clineno, align 4, !dbg !6376, !tbaa !1557
  %292 = load i32, ptr %__pyx_clineno, align 4, !dbg !6376, !tbaa !1557
  br label %__pyx_L17_error, !dbg !6379

if.end557:                                        ; preds = %if.end545
  %293 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6380, !tbaa !1461
  %errors558 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %293, i32 0, i32 5, !dbg !6381
  %294 = load ptr, ptr %errors558, align 8, !dbg !6381, !tbaa !4894
  store ptr %294, ptr %__pyx_t_8, align 8, !dbg !6382, !tbaa !1461
  %295 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6383, !tbaa !1461
  call void @Py_INCREF(ptr noundef %295), !dbg !6383
  store i64 0, ptr %__pyx_t_4, align 8, !dbg !6384, !tbaa !1836
  br label %for.cond559, !dbg !6385

for.cond559:                                      ; preds = %if.end654, %if.end557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp560) #10, !dbg !6386
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp560, metadata !5852, metadata !DIExpression()), !dbg !6387
  %296 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6388, !tbaa !1461
  %call561 = call i64 @PyList_GET_SIZE(ptr noundef %296), !dbg !6388
  store i64 %call561, ptr %__pyx_temp560, align 8, !dbg !6387, !tbaa !1836
  %297 = load i64, ptr %__pyx_t_4, align 8, !dbg !6389, !tbaa !1836
  %298 = load i64, ptr %__pyx_temp560, align 8, !dbg !6391, !tbaa !1836
  %cmp562 = icmp sge i64 %297, %298, !dbg !6392
  br i1 %cmp562, label %if.then564, label %if.end565, !dbg !6393

if.then564:                                       ; preds = %for.cond559
  store i32 20, ptr %cleanup.dest.slot, align 4
  br label %cleanup566, !dbg !6394

if.end565:                                        ; preds = %for.cond559
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6395
  br label %cleanup566, !dbg !6395

cleanup566:                                       ; preds = %if.end565, %if.then564
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp560) #10, !dbg !6395
  %cleanup.dest567 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest567, label %unreachable [
    i32 0, label %cleanup.cont568
    i32 20, label %for.end655
  ]

cleanup.cont568:                                  ; preds = %cleanup566
  %299 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6396, !tbaa !1461
  %ob_item569 = getelementptr inbounds %struct.PyListObject, ptr %299, i32 0, i32 1, !dbg !6396
  %300 = load ptr, ptr %ob_item569, align 8, !dbg !6396, !tbaa !1868
  %301 = load i64, ptr %__pyx_t_4, align 8, !dbg !6396, !tbaa !1836
  %arrayidx570 = getelementptr ptr, ptr %300, i64 %301, !dbg !6396
  %302 = load ptr, ptr %arrayidx570, align 8, !dbg !6396, !tbaa !1461
  store ptr %302, ptr %__pyx_t_9, align 8, !dbg !6397, !tbaa !1461
  %303 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6398, !tbaa !1461
  call void @Py_INCREF(ptr noundef %303), !dbg !6398
  %304 = load i64, ptr %__pyx_t_4, align 8, !dbg !6399, !tbaa !1836
  %inc571 = add i64 %304, 1, !dbg !6399
  store i64 %inc571, ptr %__pyx_t_4, align 8, !dbg !6399, !tbaa !1836
  br label %do.body572, !dbg !6400

do.body572:                                       ; preds = %cleanup.cont568
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp573) #10, !dbg !6401
  tail call void @llvm.dbg.declare(metadata ptr %tmp573, metadata !5860, metadata !DIExpression()), !dbg !6401
  %305 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6401, !tbaa !1461
  store ptr %305, ptr %tmp573, align 8, !dbg !6401, !tbaa !1461
  %306 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6401, !tbaa !1461
  store ptr %306, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6401, !tbaa !1461
  %307 = load ptr, ptr %tmp573, align 8, !dbg !6401, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %307), !dbg !6401
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp573) #10, !dbg !6400
  br label %do.cond574, !dbg !6401

do.cond574:                                       ; preds = %do.body572
  br label %do.end575, !dbg !6401

do.end575:                                        ; preds = %do.cond574
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !6402, !tbaa !1461
  %308 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  %call576 = call i32 @Py_IS_TYPE(ptr noundef %308, ptr noundef @PyUnicode_Type), !dbg !6403
  %tobool577 = icmp ne i32 %call576, 0, !dbg !6403
  %lnot578 = xor i1 %tobool577, true, !dbg !6403
  %lnot580 = xor i1 %lnot578, true, !dbg !6403
  %lnot.ext581 = zext i1 %lnot580 to i32, !dbg !6403
  %conv582 = sext i32 %lnot.ext581 to i64, !dbg !6403
  %expval583 = call i64 @llvm.expect.i64(i64 %conv582, i64 1), !dbg !6403
  %tobool584 = icmp ne i64 %expval583, 0, !dbg !6403
  br i1 %tobool584, label %cond.true585, label %cond.false586, !dbg !6403

cond.true585:                                     ; preds = %do.end575
  %309 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  call void @Py_INCREF(ptr noundef %309), !dbg !6403
  %310 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  br label %cond.end617, !dbg !6403

cond.false586:                                    ; preds = %do.end575
  %311 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  %call587 = call i32 @Py_IS_TYPE(ptr noundef %311, ptr noundef @PyLong_Type), !dbg !6403
  %tobool588 = icmp ne i32 %call587, 0, !dbg !6403
  %lnot589 = xor i1 %tobool588, true, !dbg !6403
  %lnot591 = xor i1 %lnot589, true, !dbg !6403
  %lnot.ext592 = zext i1 %lnot591 to i32, !dbg !6403
  %conv593 = sext i32 %lnot.ext592 to i64, !dbg !6403
  %expval594 = call i64 @llvm.expect.i64(i64 %conv593, i64 1), !dbg !6403
  %tobool595 = icmp ne i64 %expval594, 0, !dbg !6403
  br i1 %tobool595, label %cond.true596, label %cond.false598, !dbg !6403

cond.true596:                                     ; preds = %cond.false586
  %312 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 9), align 8, !dbg !6403, !tbaa !3569
  %313 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  %call597 = call ptr %312(ptr noundef %313), !dbg !6403
  br label %cond.end615, !dbg !6403

cond.false598:                                    ; preds = %cond.false586
  %314 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  %call599 = call i32 @Py_IS_TYPE(ptr noundef %314, ptr noundef @PyFloat_Type), !dbg !6403
  %tobool600 = icmp ne i32 %call599, 0, !dbg !6403
  %lnot601 = xor i1 %tobool600, true, !dbg !6403
  %lnot603 = xor i1 %lnot601, true, !dbg !6403
  %lnot.ext604 = zext i1 %lnot603 to i32, !dbg !6403
  %conv605 = sext i32 %lnot.ext604 to i64, !dbg !6403
  %expval606 = call i64 @llvm.expect.i64(i64 %conv605, i64 1), !dbg !6403
  %tobool607 = icmp ne i64 %expval606, 0, !dbg !6403
  br i1 %tobool607, label %cond.true608, label %cond.false610, !dbg !6403

cond.true608:                                     ; preds = %cond.false598
  %315 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFloat_Type, i32 0, i32 9), align 8, !dbg !6403, !tbaa !3569
  %316 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  %call609 = call ptr %315(ptr noundef %316), !dbg !6403
  br label %cond.end613, !dbg !6403

cond.false610:                                    ; preds = %cond.false598
  %317 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6403, !tbaa !1461
  %318 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6403, !tbaa !1461
  %__pyx_empty_unicode611 = getelementptr inbounds %struct.__pyx_mstate, ptr %318, i32 0, i32 5, !dbg !6403
  %319 = load ptr, ptr %__pyx_empty_unicode611, align 8, !dbg !6403, !tbaa !1676
  %call612 = call ptr @PyObject_Format(ptr noundef %317, ptr noundef %319), !dbg !6403
  br label %cond.end613, !dbg !6403

cond.end613:                                      ; preds = %cond.false610, %cond.true608
  %cond614 = phi ptr [ %call609, %cond.true608 ], [ %call612, %cond.false610 ], !dbg !6403
  br label %cond.end615, !dbg !6403

cond.end615:                                      ; preds = %cond.end613, %cond.true596
  %cond616 = phi ptr [ %call597, %cond.true596 ], [ %cond614, %cond.end613 ], !dbg !6403
  br label %cond.end617, !dbg !6403

cond.end617:                                      ; preds = %cond.end615, %cond.true585
  %cond618 = phi ptr [ %310, %cond.true585 ], [ %cond616, %cond.end615 ], !dbg !6403
  store ptr %cond618, ptr %__pyx_t_9, align 8, !dbg !6404, !tbaa !1461
  %320 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6405, !tbaa !1461
  %tobool619 = icmp ne ptr %320, null, !dbg !6405
  %lnot620 = xor i1 %tobool619, true, !dbg !6405
  %lnot622 = xor i1 %lnot620, true, !dbg !6405
  %lnot624 = xor i1 %lnot622, true, !dbg !6405
  %lnot.ext625 = zext i1 %lnot624 to i32, !dbg !6405
  %conv626 = sext i32 %lnot.ext625 to i64, !dbg !6405
  %expval627 = call i64 @llvm.expect.i64(i64 %conv626, i64 0), !dbg !6405
  %tobool628 = icmp ne i64 %expval627, 0, !dbg !6405
  br i1 %tobool628, label %if.then629, label %if.end630, !dbg !6407

if.then629:                                       ; preds = %cond.end617
  %321 = load ptr, ptr @__pyx_f, align 16, !dbg !6408, !tbaa !1461
  store ptr %321, ptr %__pyx_filename, align 8, !dbg !6408, !tbaa !1461
  %322 = load ptr, ptr %__pyx_filename, align 8, !dbg !6408, !tbaa !1461
  store i32 68, ptr %__pyx_lineno, align 4, !dbg !6408, !tbaa !1557
  %323 = load i32, ptr %__pyx_lineno, align 4, !dbg !6408, !tbaa !1557
  store i32 3968, ptr %__pyx_clineno, align 4, !dbg !6408, !tbaa !1557
  %324 = load i32, ptr %__pyx_clineno, align 4, !dbg !6408, !tbaa !1557
  br label %__pyx_L17_error, !dbg !6411

if.end630:                                        ; preds = %cond.end617
  %325 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6412, !tbaa !1461
  %__pyx_kp_u_REFNANNY = getelementptr inbounds %struct.__pyx_mstate, ptr %325, i32 0, i32 14, !dbg !6412
  %326 = load ptr, ptr %__pyx_kp_u_REFNANNY, align 8, !dbg !6412, !tbaa !6413
  %327 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6412, !tbaa !1461
  %call631 = call ptr @PyUnicode_Concat(ptr noundef %326, ptr noundef %327), !dbg !6412
  store ptr %call631, ptr %__pyx_t_10, align 8, !dbg !6414, !tbaa !1461
  %328 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6415, !tbaa !1461
  %tobool632 = icmp ne ptr %328, null, !dbg !6415
  %lnot633 = xor i1 %tobool632, true, !dbg !6415
  %lnot635 = xor i1 %lnot633, true, !dbg !6415
  %lnot637 = xor i1 %lnot635, true, !dbg !6415
  %lnot.ext638 = zext i1 %lnot637 to i32, !dbg !6415
  %conv639 = sext i32 %lnot.ext638 to i64, !dbg !6415
  %expval640 = call i64 @llvm.expect.i64(i64 %conv639, i64 0), !dbg !6415
  %tobool641 = icmp ne i64 %expval640, 0, !dbg !6415
  br i1 %tobool641, label %if.then642, label %if.end643, !dbg !6417

if.then642:                                       ; preds = %if.end630
  %329 = load ptr, ptr @__pyx_f, align 16, !dbg !6418, !tbaa !1461
  store ptr %329, ptr %__pyx_filename, align 8, !dbg !6418, !tbaa !1461
  %330 = load ptr, ptr %__pyx_filename, align 8, !dbg !6418, !tbaa !1461
  store i32 68, ptr %__pyx_lineno, align 4, !dbg !6418, !tbaa !1557
  %331 = load i32, ptr %__pyx_lineno, align 4, !dbg !6418, !tbaa !1557
  store i32 3970, ptr %__pyx_clineno, align 4, !dbg !6418, !tbaa !1557
  %332 = load i32, ptr %__pyx_clineno, align 4, !dbg !6418, !tbaa !1557
  br label %__pyx_L17_error, !dbg !6421

if.end643:                                        ; preds = %if.end630
  %333 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6422, !tbaa !1461
  call void @Py_DECREF(ptr noundef %333), !dbg !6422
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !6423, !tbaa !1461
  %334 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6424, !tbaa !1461
  %335 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6424, !tbaa !1461
  %call644 = call i32 @__Pyx_ListComp_Append(ptr noundef %334, ptr noundef %335), !dbg !6424
  %tobool645 = icmp ne i32 %call644, 0, !dbg !6424
  %lnot646 = xor i1 %tobool645, true, !dbg !6424
  %lnot648 = xor i1 %lnot646, true, !dbg !6424
  %lnot.ext649 = zext i1 %lnot648 to i32, !dbg !6424
  %conv650 = sext i32 %lnot.ext649 to i64, !dbg !6424
  %expval651 = call i64 @llvm.expect.i64(i64 %conv650, i64 0), !dbg !6424
  %tobool652 = icmp ne i64 %expval651, 0, !dbg !6424
  br i1 %tobool652, label %if.then653, label %if.end654, !dbg !6426

if.then653:                                       ; preds = %if.end643
  %336 = load ptr, ptr @__pyx_f, align 16, !dbg !6427, !tbaa !1461
  store ptr %336, ptr %__pyx_filename, align 8, !dbg !6427, !tbaa !1461
  %337 = load ptr, ptr %__pyx_filename, align 8, !dbg !6427, !tbaa !1461
  store i32 68, ptr %__pyx_lineno, align 4, !dbg !6427, !tbaa !1557
  %338 = load i32, ptr %__pyx_lineno, align 4, !dbg !6427, !tbaa !1557
  store i32 3973, ptr %__pyx_clineno, align 4, !dbg !6427, !tbaa !1557
  %339 = load i32, ptr %__pyx_clineno, align 4, !dbg !6427, !tbaa !1557
  br label %__pyx_L17_error, !dbg !6430

if.end654:                                        ; preds = %if.end643
  %340 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6431, !tbaa !1461
  call void @Py_DECREF(ptr noundef %340), !dbg !6431
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !6432, !tbaa !1461
  br label %for.cond559, !dbg !6433, !llvm.loop !6434

for.end655:                                       ; preds = %cleanup566
  %341 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6437, !tbaa !1461
  call void @Py_DECREF(ptr noundef %341), !dbg !6437
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6438, !tbaa !1461
  %342 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6439, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %342), !dbg !6439
  store ptr null, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6440, !tbaa !1461
  br label %__pyx_L21_exit_scope, !dbg !6441

__pyx_L17_error:                                  ; preds = %if.then653, %if.then642, %if.then629, %if.then556, %if.then544
  tail call void @llvm.dbg.label(metadata !5862), !dbg !6442
  %343 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6443, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %343), !dbg !6443
  store ptr null, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6444, !tbaa !1461
  br label %__pyx_L1_error, !dbg !6445

__pyx_L21_exit_scope:                             ; preds = %for.end655
  tail call void @llvm.dbg.label(metadata !5863), !dbg !6446
  %344 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6447, !tbaa !1461
  %__pyx_kp_u__3 = getelementptr inbounds %struct.__pyx_mstate, ptr %344, i32 0, i32 19, !dbg !6447
  %345 = load ptr, ptr %__pyx_kp_u__3, align 8, !dbg !6447, !tbaa !6448
  %346 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6449, !tbaa !1461
  %call656 = call ptr @PyUnicode_Join(ptr noundef %345, ptr noundef %346), !dbg !6450
  store ptr %call656, ptr %__pyx_t_8, align 8, !dbg !6451, !tbaa !1461
  %347 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6452, !tbaa !1461
  %tobool657 = icmp ne ptr %347, null, !dbg !6452
  %lnot658 = xor i1 %tobool657, true, !dbg !6452
  %lnot660 = xor i1 %lnot658, true, !dbg !6452
  %lnot662 = xor i1 %lnot660, true, !dbg !6452
  %lnot.ext663 = zext i1 %lnot662 to i32, !dbg !6452
  %conv664 = sext i32 %lnot.ext663 to i64, !dbg !6452
  %expval665 = call i64 @llvm.expect.i64(i64 %conv664, i64 0), !dbg !6452
  %tobool666 = icmp ne i64 %expval665, 0, !dbg !6452
  br i1 %tobool666, label %if.then667, label %if.end668, !dbg !6454

if.then667:                                       ; preds = %__pyx_L21_exit_scope
  %348 = load ptr, ptr @__pyx_f, align 16, !dbg !6455, !tbaa !1461
  store ptr %348, ptr %__pyx_filename, align 8, !dbg !6455, !tbaa !1461
  %349 = load ptr, ptr %__pyx_filename, align 8, !dbg !6455, !tbaa !1461
  store i32 68, ptr %__pyx_lineno, align 4, !dbg !6455, !tbaa !1557
  %350 = load i32, ptr %__pyx_lineno, align 4, !dbg !6455, !tbaa !1557
  store i32 3984, ptr %__pyx_clineno, align 4, !dbg !6455, !tbaa !1557
  %351 = load i32, ptr %__pyx_clineno, align 4, !dbg !6455, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6458

if.end668:                                        ; preds = %__pyx_L21_exit_scope
  %352 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6459, !tbaa !1461
  call void @Py_DECREF(ptr noundef %352), !dbg !6459
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6460, !tbaa !1461
  %353 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6461, !tbaa !1461
  store ptr %353, ptr %__pyx_t_2, align 8, !dbg !6462, !tbaa !1461
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !6463, !tbaa !1461
  br label %if.end670, !dbg !6464

if.else669:                                       ; preds = %land.end
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !6465
  store ptr @_Py_NoneStruct, ptr %__pyx_t_2, align 8, !dbg !6467, !tbaa !1461
  br label %if.end670

if.end670:                                        ; preds = %if.else669, %if.end668
  %354 = load ptr, ptr %__pyx_t_2, align 8, !dbg !6468, !tbaa !1461
  store ptr %354, ptr %__pyx_r, align 8, !dbg !6469, !tbaa !1461
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !6470, !tbaa !1461
  br label %__pyx_L0, !dbg !6471

__pyx_L1_error:                                   ; preds = %cleanup158, %cleanup, %if.then667, %__pyx_L17_error, %if.then521, %if.then507, %if.then492, %if.then479, %if.then456, %__pyx_L10_error, %if.then228, %if.then177, %if.then53, %if.then30, %if.then15, %if.then
  tail call void @llvm.dbg.label(metadata !5864), !dbg !6472
  %355 = load ptr, ptr %__pyx_t_2, align 8, !dbg !6473, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %355), !dbg !6473
  %356 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6474, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %356), !dbg !6474
  %357 = load ptr, ptr %__pyx_t_8, align 8, !dbg !6475, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %357), !dbg !6475
  %358 = load ptr, ptr %__pyx_t_9, align 8, !dbg !6476, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %358), !dbg !6476
  %359 = load ptr, ptr %__pyx_t_10, align 8, !dbg !6477, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %359), !dbg !6477
  %360 = load i32, ptr %__pyx_clineno, align 4, !dbg !6478, !tbaa !1557
  %361 = load i32, ptr %__pyx_lineno, align 4, !dbg !6479, !tbaa !1557
  %362 = load ptr, ptr %__pyx_filename, align 8, !dbg !6480, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.41, i32 noundef %360, i32 noundef %361, ptr noundef %362), !dbg !6481
  store ptr null, ptr %__pyx_r, align 8, !dbg !6482, !tbaa !1461
  br label %__pyx_L0, !dbg !6483

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end670
  tail call void @llvm.dbg.label(metadata !5865), !dbg !6484
  %363 = load ptr, ptr %__pyx_v_msg, align 8, !dbg !6485, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %363), !dbg !6485
  %364 = load ptr, ptr %__pyx_v_count, align 8, !dbg !6486, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %364), !dbg !6486
  %365 = load ptr, ptr %__pyx_v_linenos, align 8, !dbg !6487, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %365), !dbg !6487
  %366 = load ptr, ptr %__pyx_7genexpr__pyx_v_x, align 8, !dbg !6488, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %366), !dbg !6488
  %367 = load ptr, ptr %__pyx_8genexpr1__pyx_v_error, align 8, !dbg !6489, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %367), !dbg !6489
  %368 = load ptr, ptr %__pyx_r, align 8, !dbg !6490, !tbaa !1461
  store ptr %368, ptr %retval, align 8, !dbg !6491
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup671, !dbg !6491

cleanup671:                                       ; preds = %__pyx_L0, %cleanup371, %cleanup158, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_16) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_15) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_14) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_13) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_8genexpr1__pyx_v_error) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_7genexpr__pyx_v_x) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_linenos) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_count) #10, !dbg !6492
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_msg) #10, !dbg !6492
  %369 = load ptr, ptr %retval, align 8, !dbg !6492
  ret ptr %369, !dbg !6492

unreachable:                                      ; preds = %cleanup566, %cleanup335, %cleanup323
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyType_Ready(ptr noundef %t) #0 !dbg !6493 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca ptr, align 8
  %r = alloca i32, align 4
  %bases = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %gc_was_enabled = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !6497, metadata !DIExpression()), !dbg !6502
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #10, !dbg !6503
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !6498, metadata !DIExpression()), !dbg !6504
  call void @llvm.lifetime.start.p0(i64 8, ptr %bases) #10, !dbg !6505
  tail call void @llvm.dbg.declare(metadata ptr %bases, metadata !6499, metadata !DIExpression()), !dbg !6506
  %0 = load ptr, ptr %t.addr, align 8, !dbg !6507, !tbaa !1461
  %tp_bases = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 40, !dbg !6507
  %1 = load ptr, ptr %tp_bases, align 8, !dbg !6507, !tbaa !6508
  store ptr %1, ptr %bases, align 8, !dbg !6506, !tbaa !1461
  %2 = load ptr, ptr %bases, align 8, !dbg !6509, !tbaa !1461
  %tobool = icmp ne ptr %2, null, !dbg !6509
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6511

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr %t.addr, align 8, !dbg !6512, !tbaa !1461
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %3, i32 0, i32 1, !dbg !6512
  %4 = load ptr, ptr %tp_name, align 8, !dbg !6512, !tbaa !6513
  %5 = load ptr, ptr %t.addr, align 8, !dbg !6512, !tbaa !1461
  %tp_dictoffset = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 34, !dbg !6512
  %6 = load i64, ptr %tp_dictoffset, align 8, !dbg !6512, !tbaa !2427
  %7 = load ptr, ptr %bases, align 8, !dbg !6512, !tbaa !1461
  %call = call i32 @__Pyx_validate_bases_tuple(ptr noundef %4, i64 noundef %6, ptr noundef %7), !dbg !6512
  %cmp = icmp eq i32 %call, -1, !dbg !6512
  %lnot = xor i1 %cmp, true, !dbg !6512
  %lnot1 = xor i1 %lnot, true, !dbg !6512
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6512
  %conv = sext i32 %lnot.ext to i64, !dbg !6512
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6512
  %tobool2 = icmp ne i64 %expval, 0, !dbg !6512
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6514

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, ptr %retval, align 4, !dbg !6515
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6515

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %gc_was_enabled) #10, !dbg !6516
  tail call void @llvm.dbg.declare(metadata ptr %gc_was_enabled, metadata !6500, metadata !DIExpression()), !dbg !6517
  %call3 = call i32 @PyGC_Disable(), !dbg !6518
  store i32 %call3, ptr %gc_was_enabled, align 4, !dbg !6519, !tbaa !1557
  %8 = load ptr, ptr %t.addr, align 8, !dbg !6520, !tbaa !1461
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %8, i32 0, i32 19, !dbg !6521
  %9 = load i64, ptr %tp_flags, align 8, !dbg !6522, !tbaa !4430
  %or = or i64 %9, 512, !dbg !6522
  store i64 %or, ptr %tp_flags, align 8, !dbg !6522, !tbaa !4430
  %10 = load ptr, ptr %t.addr, align 8, !dbg !6523, !tbaa !1461
  %tp_flags4 = getelementptr inbounds %struct._typeobject, ptr %10, i32 0, i32 19, !dbg !6524
  %11 = load i64, ptr %tp_flags4, align 8, !dbg !6525, !tbaa !4430
  %or5 = or i64 %11, 256, !dbg !6525
  store i64 %or5, ptr %tp_flags4, align 8, !dbg !6525, !tbaa !4430
  %12 = load ptr, ptr %t.addr, align 8, !dbg !6526, !tbaa !1461
  %call6 = call i32 @PyType_Ready(ptr noundef %12), !dbg !6527
  store i32 %call6, ptr %r, align 4, !dbg !6528, !tbaa !1557
  %13 = load ptr, ptr %t.addr, align 8, !dbg !6529, !tbaa !1461
  %tp_flags7 = getelementptr inbounds %struct._typeobject, ptr %13, i32 0, i32 19, !dbg !6530
  %14 = load i64, ptr %tp_flags7, align 8, !dbg !6531, !tbaa !4430
  %and = and i64 %14, -513, !dbg !6531
  store i64 %and, ptr %tp_flags7, align 8, !dbg !6531, !tbaa !4430
  %15 = load i32, ptr %gc_was_enabled, align 4, !dbg !6532, !tbaa !1557
  %tobool8 = icmp ne i32 %15, 0, !dbg !6532
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !6534

if.then9:                                         ; preds = %if.end
  %call10 = call i32 @PyGC_Enable(), !dbg !6535
  br label %if.end11, !dbg !6535

if.end11:                                         ; preds = %if.then9, %if.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %gc_was_enabled) #10, !dbg !6536
  %16 = load i32, ptr %r, align 4, !dbg !6537, !tbaa !1557
  store i32 %16, ptr %retval, align 4, !dbg !6538
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6538

cleanup:                                          ; preds = %if.end11, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %bases) #10, !dbg !6539
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #10, !dbg !6539
  %17 = load i32, ptr %retval, align 4, !dbg !6539
  ret i32 %17, !dbg !6539
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_SetVtable(ptr noundef %type, ptr noundef %vtable) #0 !dbg !6540 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca ptr, align 8
  %vtable.addr = alloca ptr, align 8
  %ob = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !6544, metadata !DIExpression()), !dbg !6548
  store ptr %vtable, ptr %vtable.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %vtable.addr, metadata !6545, metadata !DIExpression()), !dbg !6549
  call void @llvm.lifetime.start.p0(i64 8, ptr %ob) #10, !dbg !6550
  tail call void @llvm.dbg.declare(metadata ptr %ob, metadata !6546, metadata !DIExpression()), !dbg !6551
  %0 = load ptr, ptr %vtable.addr, align 8, !dbg !6552, !tbaa !1461
  %call = call ptr @PyCapsule_New(ptr noundef %0, ptr noundef null, ptr noundef null), !dbg !6553
  store ptr %call, ptr %ob, align 8, !dbg !6551, !tbaa !1461
  %1 = load ptr, ptr %ob, align 8, !dbg !6554, !tbaa !1461
  %tobool = icmp ne ptr %1, null, !dbg !6554
  %lnot = xor i1 %tobool, true, !dbg !6554
  %lnot1 = xor i1 %lnot, true, !dbg !6554
  %lnot2 = xor i1 %lnot1, true, !dbg !6554
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6554
  %conv = sext i32 %lnot.ext to i64, !dbg !6554
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6554
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6554
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6556

if.then:                                          ; preds = %entry
  br label %bad, !dbg !6557

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %type.addr, align 8, !dbg !6558, !tbaa !1461
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 31, !dbg !6558
  %3 = load ptr, ptr %tp_dict, align 8, !dbg !6558, !tbaa !6560
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6558, !tbaa !1461
  %__pyx_n_s_pyx_vtable = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 48, !dbg !6558
  %5 = load ptr, ptr %__pyx_n_s_pyx_vtable, align 8, !dbg !6558, !tbaa !6561
  %6 = load ptr, ptr %ob, align 8, !dbg !6558, !tbaa !1461
  %call4 = call i32 @PyDict_SetItem(ptr noundef %3, ptr noundef %5, ptr noundef %6), !dbg !6558
  %cmp = icmp slt i32 %call4, 0, !dbg !6558
  %lnot6 = xor i1 %cmp, true, !dbg !6558
  %lnot8 = xor i1 %lnot6, true, !dbg !6558
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !6558
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !6558
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !6558
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !6558
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6562

if.then13:                                        ; preds = %if.end
  br label %bad, !dbg !6563

if.end14:                                         ; preds = %if.end
  %7 = load ptr, ptr %ob, align 8, !dbg !6564, !tbaa !1461
  call void @Py_DECREF(ptr noundef %7), !dbg !6564
  store i32 0, ptr %retval, align 4, !dbg !6565
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6565

bad:                                              ; preds = %if.then13, %if.then
  tail call void @llvm.dbg.label(metadata !6547), !dbg !6566
  %8 = load ptr, ptr %ob, align 8, !dbg !6567, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %8), !dbg !6567
  store i32 -1, ptr %retval, align 4, !dbg !6568
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6568

cleanup:                                          ; preds = %bad, %if.end14
  call void @llvm.lifetime.end.p0(i64 8, ptr %ob) #10, !dbg !6569
  %9 = load i32, ptr %retval, align 4, !dbg !6569
  ret i32 %9, !dbg !6569
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_MergeVtables(ptr noundef %type) #0 !dbg !6570 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %base_vtables = alloca ptr, align 8
  %tp_base_name = alloca ptr, align 8
  %base_name = alloca ptr, align 8
  %unknown = alloca ptr, align 8
  %bases = alloca ptr, align 8
  %base_depth = alloca i32, align 4
  %base = alloca ptr, align 8
  %base_vtable = alloca ptr, align 8
  %j = alloca i32, align 4
  %base10 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !6572, metadata !DIExpression()), !dbg !6592
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !6593
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6573, metadata !DIExpression()), !dbg !6594
  call void @llvm.lifetime.start.p0(i64 8, ptr %base_vtables) #10, !dbg !6595
  tail call void @llvm.dbg.declare(metadata ptr %base_vtables, metadata !6574, metadata !DIExpression()), !dbg !6596
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp_base_name) #10, !dbg !6597
  tail call void @llvm.dbg.declare(metadata ptr %tp_base_name, metadata !6575, metadata !DIExpression()), !dbg !6598
  call void @llvm.lifetime.start.p0(i64 8, ptr %base_name) #10, !dbg !6599
  tail call void @llvm.dbg.declare(metadata ptr %base_name, metadata !6577, metadata !DIExpression()), !dbg !6600
  call void @llvm.lifetime.start.p0(i64 8, ptr %unknown) #10, !dbg !6601
  tail call void @llvm.dbg.declare(metadata ptr %unknown, metadata !6578, metadata !DIExpression()), !dbg !6602
  store ptr inttoptr (i64 -1 to ptr), ptr %unknown, align 8, !dbg !6602, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %bases) #10, !dbg !6603
  tail call void @llvm.dbg.declare(metadata ptr %bases, metadata !6579, metadata !DIExpression()), !dbg !6604
  %0 = load ptr, ptr %type.addr, align 8, !dbg !6605, !tbaa !1461
  %tp_bases = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 40, !dbg !6606
  %1 = load ptr, ptr %tp_bases, align 8, !dbg !6606, !tbaa !6508
  store ptr %1, ptr %bases, align 8, !dbg !6604, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %base_depth) #10, !dbg !6607
  tail call void @llvm.dbg.declare(metadata ptr %base_depth, metadata !6580, metadata !DIExpression()), !dbg !6608
  store i32 0, ptr %base_depth, align 4, !dbg !6608, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %base) #10, !dbg !6609
  tail call void @llvm.dbg.declare(metadata ptr %base, metadata !6581, metadata !DIExpression()), !dbg !6610
  %2 = load ptr, ptr %type.addr, align 8, !dbg !6611, !tbaa !1461
  %tp_base = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 30, !dbg !6612
  %3 = load ptr, ptr %tp_base, align 8, !dbg !6612, !tbaa !4784
  store ptr %3, ptr %base, align 8, !dbg !6610, !tbaa !1461
  br label %while.cond, !dbg !6613

while.cond:                                       ; preds = %while.body, %entry
  %4 = load ptr, ptr %base, align 8, !dbg !6614, !tbaa !1461
  %tobool = icmp ne ptr %4, null, !dbg !6613
  br i1 %tobool, label %while.body, label %while.end, !dbg !6613

while.body:                                       ; preds = %while.cond
  %5 = load i32, ptr %base_depth, align 4, !dbg !6615, !tbaa !1557
  %add = add i32 %5, 1, !dbg !6615
  store i32 %add, ptr %base_depth, align 4, !dbg !6615, !tbaa !1557
  %6 = load ptr, ptr %base, align 8, !dbg !6617, !tbaa !1461
  %tp_base1 = getelementptr inbounds %struct._typeobject, ptr %6, i32 0, i32 30, !dbg !6618
  %7 = load ptr, ptr %tp_base1, align 8, !dbg !6618, !tbaa !4784
  store ptr %7, ptr %base, align 8, !dbg !6619, !tbaa !1461
  br label %while.cond, !dbg !6613, !llvm.loop !6620

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %base) #10, !dbg !6622
  %8 = load i32, ptr %base_depth, align 4, !dbg !6623, !tbaa !1557
  %add2 = add i32 %8, 1, !dbg !6624
  %conv = sext i32 %add2 to i64, !dbg !6625
  %mul = mul i64 8, %conv, !dbg !6626
  %call = call noalias ptr @malloc(i64 noundef %mul) #11, !dbg !6627
  store ptr %call, ptr %base_vtables, align 8, !dbg !6628, !tbaa !1461
  %9 = load ptr, ptr %unknown, align 8, !dbg !6629, !tbaa !1461
  %10 = load ptr, ptr %base_vtables, align 8, !dbg !6630, !tbaa !1461
  %arrayidx = getelementptr ptr, ptr %10, i64 0, !dbg !6630
  store ptr %9, ptr %arrayidx, align 8, !dbg !6631, !tbaa !1461
  store i32 1, ptr %i, align 4, !dbg !6632, !tbaa !1557
  br label %for.cond, !dbg !6633

for.cond:                                         ; preds = %for.inc45, %while.end
  %11 = load i32, ptr %i, align 4, !dbg !6634, !tbaa !1557
  %conv3 = sext i32 %11 to i64, !dbg !6634
  %12 = load ptr, ptr %bases, align 8, !dbg !6635, !tbaa !1461
  %call4 = call i64 @PyTuple_GET_SIZE(ptr noundef %12), !dbg !6635
  %cmp = icmp slt i64 %conv3, %call4, !dbg !6636
  br i1 %cmp, label %for.body, label %for.end47, !dbg !6637

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %base_vtable) #10, !dbg !6638
  tail call void @llvm.dbg.declare(metadata ptr %base_vtable, metadata !6583, metadata !DIExpression()), !dbg !6639
  %13 = load ptr, ptr %bases, align 8, !dbg !6640, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %13, i32 0, i32 1, !dbg !6640
  %14 = load i32, ptr %i, align 4, !dbg !6640, !tbaa !1557
  %idxprom = sext i32 %14 to i64, !dbg !6640
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %idxprom, !dbg !6640
  %15 = load ptr, ptr %arrayidx6, align 8, !dbg !6640, !tbaa !1461
  %call7 = call ptr @__Pyx_GetVtable(ptr noundef %15), !dbg !6641
  store ptr %call7, ptr %base_vtable, align 8, !dbg !6639, !tbaa !1461
  %16 = load ptr, ptr %base_vtable, align 8, !dbg !6642, !tbaa !1461
  %cmp8 = icmp ne ptr %16, null, !dbg !6643
  br i1 %cmp8, label %if.then, label %if.end41, !dbg !6644

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #10, !dbg !6645
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !6587, metadata !DIExpression()), !dbg !6646
  call void @llvm.lifetime.start.p0(i64 8, ptr %base10) #10, !dbg !6647
  tail call void @llvm.dbg.declare(metadata ptr %base10, metadata !6590, metadata !DIExpression()), !dbg !6648
  %17 = load ptr, ptr %type.addr, align 8, !dbg !6649, !tbaa !1461
  %tp_base11 = getelementptr inbounds %struct._typeobject, ptr %17, i32 0, i32 30, !dbg !6650
  %18 = load ptr, ptr %tp_base11, align 8, !dbg !6650, !tbaa !4784
  store ptr %18, ptr %base10, align 8, !dbg !6648, !tbaa !1461
  store i32 0, ptr %j, align 4, !dbg !6651, !tbaa !1557
  br label %for.cond12, !dbg !6653

for.cond12:                                       ; preds = %for.inc, %if.then
  %19 = load i32, ptr %j, align 4, !dbg !6654, !tbaa !1557
  %20 = load i32, ptr %base_depth, align 4, !dbg !6656, !tbaa !1557
  %cmp13 = icmp slt i32 %19, %20, !dbg !6657
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !6658

for.body15:                                       ; preds = %for.cond12
  %21 = load ptr, ptr %base_vtables, align 8, !dbg !6659, !tbaa !1461
  %22 = load i32, ptr %j, align 4, !dbg !6662, !tbaa !1557
  %idxprom16 = sext i32 %22 to i64, !dbg !6659
  %arrayidx17 = getelementptr ptr, ptr %21, i64 %idxprom16, !dbg !6659
  %23 = load ptr, ptr %arrayidx17, align 8, !dbg !6659, !tbaa !1461
  %24 = load ptr, ptr %unknown, align 8, !dbg !6663, !tbaa !1461
  %cmp18 = icmp eq ptr %23, %24, !dbg !6664
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !6665

if.then20:                                        ; preds = %for.body15
  %25 = load ptr, ptr %base10, align 8, !dbg !6666, !tbaa !1461
  %call21 = call ptr @__Pyx_GetVtable(ptr noundef %25), !dbg !6668
  %26 = load ptr, ptr %base_vtables, align 8, !dbg !6669, !tbaa !1461
  %27 = load i32, ptr %j, align 4, !dbg !6670, !tbaa !1557
  %idxprom22 = sext i32 %27 to i64, !dbg !6669
  %arrayidx23 = getelementptr ptr, ptr %26, i64 %idxprom22, !dbg !6669
  store ptr %call21, ptr %arrayidx23, align 8, !dbg !6671, !tbaa !1461
  %28 = load ptr, ptr %unknown, align 8, !dbg !6672, !tbaa !1461
  %29 = load ptr, ptr %base_vtables, align 8, !dbg !6673, !tbaa !1461
  %30 = load i32, ptr %j, align 4, !dbg !6674, !tbaa !1557
  %add24 = add i32 %30, 1, !dbg !6675
  %idxprom25 = sext i32 %add24 to i64, !dbg !6673
  %arrayidx26 = getelementptr ptr, ptr %29, i64 %idxprom25, !dbg !6673
  store ptr %28, ptr %arrayidx26, align 8, !dbg !6676, !tbaa !1461
  br label %if.end, !dbg !6677

if.end:                                           ; preds = %if.then20, %for.body15
  %31 = load ptr, ptr %base_vtables, align 8, !dbg !6678, !tbaa !1461
  %32 = load i32, ptr %j, align 4, !dbg !6680, !tbaa !1557
  %idxprom27 = sext i32 %32 to i64, !dbg !6678
  %arrayidx28 = getelementptr ptr, ptr %31, i64 %idxprom27, !dbg !6678
  %33 = load ptr, ptr %arrayidx28, align 8, !dbg !6678, !tbaa !1461
  %34 = load ptr, ptr %base_vtable, align 8, !dbg !6681, !tbaa !1461
  %cmp29 = icmp eq ptr %33, %34, !dbg !6682
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !6683

if.then31:                                        ; preds = %if.end
  br label %for.end, !dbg !6684

if.else:                                          ; preds = %if.end
  %35 = load ptr, ptr %base_vtables, align 8, !dbg !6686, !tbaa !1461
  %36 = load i32, ptr %j, align 4, !dbg !6688, !tbaa !1557
  %idxprom32 = sext i32 %36 to i64, !dbg !6686
  %arrayidx33 = getelementptr ptr, ptr %35, i64 %idxprom32, !dbg !6686
  %37 = load ptr, ptr %arrayidx33, align 8, !dbg !6686, !tbaa !1461
  %cmp34 = icmp eq ptr %37, null, !dbg !6689
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !6690

if.then36:                                        ; preds = %if.else
  store i32 10, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6691

if.end37:                                         ; preds = %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %38 = load ptr, ptr %base10, align 8, !dbg !6693, !tbaa !1461
  %tp_base39 = getelementptr inbounds %struct._typeobject, ptr %38, i32 0, i32 30, !dbg !6694
  %39 = load ptr, ptr %tp_base39, align 8, !dbg !6694, !tbaa !4784
  store ptr %39, ptr %base10, align 8, !dbg !6695, !tbaa !1461
  br label %for.inc, !dbg !6696

for.inc:                                          ; preds = %if.end38
  %40 = load i32, ptr %j, align 4, !dbg !6697, !tbaa !1557
  %inc = add i32 %40, 1, !dbg !6697
  store i32 %inc, ptr %j, align 4, !dbg !6697, !tbaa !1557
  br label %for.cond12, !dbg !6698, !llvm.loop !6699

for.end:                                          ; preds = %if.then31, %for.cond12
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6701
  br label %cleanup, !dbg !6701

cleanup:                                          ; preds = %if.then36, %for.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %base10) #10, !dbg !6701
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #10, !dbg !6701
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup42 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end41, !dbg !6702

if.end41:                                         ; preds = %cleanup.cont, %for.body
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6703
  br label %cleanup42, !dbg !6703

cleanup42:                                        ; preds = %if.end41, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %base_vtable) #10, !dbg !6703
  %cleanup.dest43 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest43, label %cleanup54 [
    i32 0, label %cleanup.cont44
    i32 10, label %bad
  ]

cleanup.cont44:                                   ; preds = %cleanup42
  br label %for.inc45, !dbg !6704

for.inc45:                                        ; preds = %cleanup.cont44
  %41 = load i32, ptr %i, align 4, !dbg !6705, !tbaa !1557
  %inc46 = add i32 %41, 1, !dbg !6705
  store i32 %inc46, ptr %i, align 4, !dbg !6705, !tbaa !1557
  br label %for.cond, !dbg !6706, !llvm.loop !6707

for.end47:                                        ; preds = %for.cond
  call void @PyErr_Clear(), !dbg !6709
  %42 = load ptr, ptr %base_vtables, align 8, !dbg !6710, !tbaa !1461
  call void @free(ptr noundef %42) #10, !dbg !6711
  store i32 0, ptr %retval, align 4, !dbg !6712
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup54, !dbg !6712

bad:                                              ; preds = %cleanup42
  tail call void @llvm.dbg.label(metadata !6591), !dbg !6713
  %43 = load ptr, ptr %type.addr, align 8, !dbg !6714, !tbaa !1461
  %tp_base48 = getelementptr inbounds %struct._typeobject, ptr %43, i32 0, i32 30, !dbg !6714
  %44 = load ptr, ptr %tp_base48, align 8, !dbg !6714, !tbaa !4784
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %44, i32 0, i32 1, !dbg !6714
  %45 = load ptr, ptr %tp_name, align 8, !dbg !6714, !tbaa !6513
  store ptr %45, ptr %tp_base_name, align 8, !dbg !6715, !tbaa !1461
  %46 = load ptr, ptr %bases, align 8, !dbg !6716, !tbaa !1461
  %ob_item49 = getelementptr inbounds %struct.PyTupleObject, ptr %46, i32 0, i32 1, !dbg !6716
  %47 = load i32, ptr %i, align 4, !dbg !6716, !tbaa !1557
  %idxprom50 = sext i32 %47 to i64, !dbg !6716
  %arrayidx51 = getelementptr [1 x ptr], ptr %ob_item49, i64 0, i64 %idxprom50, !dbg !6716
  %48 = load ptr, ptr %arrayidx51, align 8, !dbg !6716, !tbaa !1461
  %tp_name52 = getelementptr inbounds %struct._typeobject, ptr %48, i32 0, i32 1, !dbg !6716
  %49 = load ptr, ptr %tp_name52, align 8, !dbg !6716, !tbaa !6513
  store ptr %49, ptr %base_name, align 8, !dbg !6717, !tbaa !1461
  %50 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !6718, !tbaa !1461
  %51 = load ptr, ptr %tp_base_name, align 8, !dbg !6719, !tbaa !1461
  %52 = load ptr, ptr %base_name, align 8, !dbg !6720, !tbaa !1461
  %call53 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %50, ptr noundef @.str.62, ptr noundef %51, ptr noundef %52), !dbg !6721
  %53 = load ptr, ptr %base_vtables, align 8, !dbg !6722, !tbaa !1461
  call void @free(ptr noundef %53) #10, !dbg !6723
  store i32 -1, ptr %retval, align 4, !dbg !6724
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup54, !dbg !6724

cleanup54:                                        ; preds = %bad, %for.end47, %cleanup42
  call void @llvm.lifetime.end.p0(i64 4, ptr %base_depth) #10, !dbg !6725
  call void @llvm.lifetime.end.p0(i64 8, ptr %bases) #10, !dbg !6725
  call void @llvm.lifetime.end.p0(i64 8, ptr %unknown) #10, !dbg !6725
  call void @llvm.lifetime.end.p0(i64 8, ptr %base_name) #10, !dbg !6725
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp_base_name) #10, !dbg !6725
  call void @llvm.lifetime.end.p0(i64 8, ptr %base_vtables) #10, !dbg !6725
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !6725
  %54 = load i32, ptr %retval, align 4, !dbg !6725
  ret i32 %54, !dbg !6725
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__GetModuleGlobalName(ptr noundef %name, ptr noundef %dict_version, ptr noundef %dict_cached_value) #0 !dbg !6726 {
entry:
  %retval = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %dict_version.addr = alloca ptr, align 8
  %dict_cached_value.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6731, metadata !DIExpression()), !dbg !6735
  store ptr %dict_version, ptr %dict_version.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %dict_version.addr, metadata !6732, metadata !DIExpression()), !dbg !6736
  store ptr %dict_cached_value, ptr %dict_cached_value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %dict_cached_value.addr, metadata !6733, metadata !DIExpression()), !dbg !6737
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !6738
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6734, metadata !DIExpression()), !dbg !6739
  %0 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6740, !tbaa !1461
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %0, i32 0, i32 0, !dbg !6740
  %1 = load ptr, ptr %__pyx_d, align 8, !dbg !6740, !tbaa !1598
  %2 = load ptr, ptr %name.addr, align 8, !dbg !6741, !tbaa !1461
  %3 = load ptr, ptr %name.addr, align 8, !dbg !6742, !tbaa !1461
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %3, i32 0, i32 2, !dbg !6743
  %4 = load i64, ptr %hash, align 8, !dbg !6743, !tbaa !6744
  %call = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %1, ptr noundef %2, i64 noundef %4), !dbg !6747
  store ptr %call, ptr %result, align 8, !dbg !6748, !tbaa !1461
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6749, !tbaa !1461
  %__pyx_d1 = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 0, !dbg !6749
  %6 = load ptr, ptr %__pyx_d1, align 8, !dbg !6749, !tbaa !1598
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %6, i32 0, i32 2, !dbg !6749
  %7 = load i64, ptr %ma_version_tag, align 8, !dbg !6749, !tbaa !4834
  %8 = load ptr, ptr %dict_version.addr, align 8, !dbg !6749, !tbaa !1461
  store i64 %7, ptr %8, align 8, !dbg !6749, !tbaa !1836
  %9 = load ptr, ptr %result, align 8, !dbg !6749, !tbaa !1461
  %10 = load ptr, ptr %dict_cached_value.addr, align 8, !dbg !6749, !tbaa !1461
  store ptr %9, ptr %10, align 8, !dbg !6749, !tbaa !1461
  %11 = load ptr, ptr %result, align 8, !dbg !6750, !tbaa !1461
  %tobool = icmp ne ptr %11, null, !dbg !6750
  %lnot = xor i1 %tobool, true, !dbg !6750
  %lnot2 = xor i1 %lnot, true, !dbg !6750
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6750
  %conv = sext i32 %lnot.ext to i64, !dbg !6750
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6750
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6750
  br i1 %tobool3, label %if.then, label %if.else, !dbg !6752

if.then:                                          ; preds = %entry
  %12 = load ptr, ptr %result, align 8, !dbg !6753, !tbaa !1461
  call void @Py_INCREF(ptr noundef %12), !dbg !6753
  %13 = load ptr, ptr %result, align 8, !dbg !6753, !tbaa !1461
  store ptr %13, ptr %retval, align 8, !dbg !6755
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6755

if.else:                                          ; preds = %entry
  %call4 = call ptr @PyErr_Occurred(), !dbg !6756
  %tobool5 = icmp ne ptr %call4, null, !dbg !6756
  %lnot6 = xor i1 %tobool5, true, !dbg !6756
  %lnot8 = xor i1 %lnot6, true, !dbg !6756
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !6756
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !6756
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !6756
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !6756
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !6758

if.then13:                                        ; preds = %if.else
  store ptr null, ptr %retval, align 8, !dbg !6759
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6759

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  %14 = load ptr, ptr %name.addr, align 8, !dbg !6761, !tbaa !1461
  %call15 = call ptr @__Pyx_GetBuiltinName(ptr noundef %14), !dbg !6762
  store ptr %call15, ptr %retval, align 8, !dbg !6763
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6763

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !6764
  %15 = load ptr, ptr %retval, align 8, !dbg !6764
  ret ptr %15, !dbg !6764
}

declare !dbg !6765 ptr @PyLong_FromSsize_t(i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6Cython_7Runtime_8refnanny_log(ptr noundef %__pyx_v_level, ptr noundef %__pyx_v_action, ptr noundef %__pyx_v_obj, ptr noundef %__pyx_v_lineno) #0 !dbg !989 {
entry:
  %__pyx_v_level.addr = alloca ptr, align 8
  %__pyx_v_action.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_level, ptr %__pyx_v_level.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_level.addr, metadata !993, metadata !DIExpression()), !dbg !6766
  store ptr %__pyx_v_action, ptr %__pyx_v_action.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_action.addr, metadata !994, metadata !DIExpression()), !dbg !6767
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_obj.addr, metadata !995, metadata !DIExpression()), !dbg !6768
  store ptr %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !996, metadata !DIExpression()), !dbg !6769
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !6770
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !997, metadata !DIExpression()), !dbg !6771
  store ptr null, ptr %__pyx_r, align 8, !dbg !6771, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !6772
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !998, metadata !DIExpression()), !dbg !6773
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6773, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #10, !dbg !6774
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !999, metadata !DIExpression()), !dbg !6775
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !6776
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !1000, metadata !DIExpression()), !dbg !6777
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !6777, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !6778
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !1001, metadata !DIExpression()), !dbg !6779
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !6779, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !6780
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !1002, metadata !DIExpression()), !dbg !6781
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !6782
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1003, metadata !DIExpression()), !dbg !6783
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !6783, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !6784
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1004, metadata !DIExpression()), !dbg !6785
  store ptr null, ptr %__pyx_filename, align 8, !dbg !6785, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !6786
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1005, metadata !DIExpression()), !dbg !6787
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !6787, !tbaa !1557
  br label %do.body, !dbg !6788

do.body:                                          ; preds = %entry
  %0 = load i64, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version, align 8, !dbg !6789, !tbaa !1836
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6789, !tbaa !1461
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 0, !dbg !6789
  %2 = load ptr, ptr %__pyx_d, align 8, !dbg !6789, !tbaa !1598
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %2, i32 0, i32 2, !dbg !6789
  %3 = load i64, ptr %ma_version_tag, align 8, !dbg !6789, !tbaa !4834
  %cmp = icmp eq i64 %0, %3, !dbg !6789
  %lnot = xor i1 %cmp, true, !dbg !6789
  %lnot1 = xor i1 %lnot, true, !dbg !6789
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6789
  %conv = sext i32 %lnot.ext to i64, !dbg !6789
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6789
  %tobool = icmp ne i64 %expval, 0, !dbg !6789
  br i1 %tobool, label %cond.true, label %cond.false11, !dbg !6789

cond.true:                                        ; preds = %do.body
  %4 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value, align 8, !dbg !6789, !tbaa !1461
  %tobool2 = icmp ne ptr %4, null, !dbg !6789
  %lnot3 = xor i1 %tobool2, true, !dbg !6789
  %lnot5 = xor i1 %lnot3, true, !dbg !6789
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !6789
  %conv7 = sext i32 %lnot.ext6 to i64, !dbg !6789
  %expval8 = call i64 @llvm.expect.i64(i64 %conv7, i64 1), !dbg !6789
  %tobool9 = icmp ne i64 %expval8, 0, !dbg !6789
  br i1 %tobool9, label %cond.true10, label %cond.false, !dbg !6789

cond.true10:                                      ; preds = %cond.true
  %5 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value, align 8, !dbg !6789, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !6789
  %6 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value, align 8, !dbg !6789, !tbaa !1461
  br label %cond.end, !dbg !6789

cond.false:                                       ; preds = %cond.true
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6789, !tbaa !1461
  %__pyx_n_s_reflog = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 51, !dbg !6789
  %8 = load ptr, ptr %__pyx_n_s_reflog, align 8, !dbg !6789, !tbaa !1803
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %8), !dbg !6789
  br label %cond.end, !dbg !6789

cond.end:                                         ; preds = %cond.false, %cond.true10
  %cond = phi ptr [ %6, %cond.true10 ], [ %call, %cond.false ], !dbg !6789
  br label %cond.end14, !dbg !6789

cond.false11:                                     ; preds = %do.body
  %9 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6789, !tbaa !1461
  %__pyx_n_s_reflog12 = getelementptr inbounds %struct.__pyx_mstate, ptr %9, i32 0, i32 51, !dbg !6789
  %10 = load ptr, ptr %__pyx_n_s_reflog12, align 8, !dbg !6789, !tbaa !1803
  %call13 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %10, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value), !dbg !6789
  br label %cond.end14, !dbg !6789

cond.end14:                                       ; preds = %cond.false11, %cond.end
  %cond15 = phi ptr [ %cond, %cond.end ], [ %call13, %cond.false11 ], !dbg !6789
  store ptr %cond15, ptr %__pyx_t_1, align 8, !dbg !6789, !tbaa !1461
  br label %do.cond, !dbg !6789

do.cond:                                          ; preds = %cond.end14
  br label %do.end, !dbg !6789

do.end:                                           ; preds = %do.cond
  %11 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6791, !tbaa !1461
  %tobool16 = icmp ne ptr %11, null, !dbg !6791
  %lnot17 = xor i1 %tobool16, true, !dbg !6791
  %lnot19 = xor i1 %lnot17, true, !dbg !6791
  %lnot21 = xor i1 %lnot19, true, !dbg !6791
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6791
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6791
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !6791
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !6791
  br i1 %tobool25, label %if.then, label %if.end, !dbg !6793

if.then:                                          ; preds = %do.end
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !6794, !tbaa !1461
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !6794, !tbaa !1461
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !6794, !tbaa !1461
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !6794, !tbaa !1557
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !6794, !tbaa !1557
  store i32 2754, ptr %__pyx_clineno, align 4, !dbg !6794, !tbaa !1557
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !6794, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6797

if.end:                                           ; preds = %do.end
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6798, !tbaa !1461
  %cmp26 = icmp eq ptr %16, @_Py_NoneStruct, !dbg !6799
  %conv27 = zext i1 %cmp26 to i32, !dbg !6799
  store i32 %conv27, ptr %__pyx_t_2, align 4, !dbg !6800, !tbaa !1557
  %17 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6801, !tbaa !1461
  call void @Py_DECREF(ptr noundef %17), !dbg !6801
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6802, !tbaa !1461
  %18 = load i32, ptr %__pyx_t_2, align 4, !dbg !6803, !tbaa !1557
  %tobool28 = icmp ne i32 %18, 0, !dbg !6803
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !6805

if.then29:                                        ; preds = %if.end
  %19 = load ptr, ptr %__pyx_r, align 8, !dbg !6806, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %19), !dbg !6806
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !6808, !tbaa !1461
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !6809
  br label %__pyx_L0, !dbg !6810

if.end30:                                         ; preds = %if.end
  br label %do.body31, !dbg !6811

do.body31:                                        ; preds = %if.end30
  %20 = load i64, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version.29, align 8, !dbg !6812, !tbaa !1836
  %21 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6812, !tbaa !1461
  %__pyx_d32 = getelementptr inbounds %struct.__pyx_mstate, ptr %21, i32 0, i32 0, !dbg !6812
  %22 = load ptr, ptr %__pyx_d32, align 8, !dbg !6812, !tbaa !1598
  %ma_version_tag33 = getelementptr inbounds %struct.PyDictObject, ptr %22, i32 0, i32 2, !dbg !6812
  %23 = load i64, ptr %ma_version_tag33, align 8, !dbg !6812, !tbaa !4834
  %cmp34 = icmp eq i64 %20, %23, !dbg !6812
  %lnot36 = xor i1 %cmp34, true, !dbg !6812
  %lnot38 = xor i1 %lnot36, true, !dbg !6812
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !6812
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !6812
  %expval41 = call i64 @llvm.expect.i64(i64 %conv40, i64 1), !dbg !6812
  %tobool42 = icmp ne i64 %expval41, 0, !dbg !6812
  br i1 %tobool42, label %cond.true43, label %cond.false57, !dbg !6812

cond.true43:                                      ; preds = %do.body31
  %24 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.30, align 8, !dbg !6812, !tbaa !1461
  %tobool44 = icmp ne ptr %24, null, !dbg !6812
  %lnot45 = xor i1 %tobool44, true, !dbg !6812
  %lnot47 = xor i1 %lnot45, true, !dbg !6812
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !6812
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !6812
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 1), !dbg !6812
  %tobool51 = icmp ne i64 %expval50, 0, !dbg !6812
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !6812

cond.true52:                                      ; preds = %cond.true43
  %25 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.30, align 8, !dbg !6812, !tbaa !1461
  call void @Py_INCREF(ptr noundef %25), !dbg !6812
  %26 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.30, align 8, !dbg !6812, !tbaa !1461
  br label %cond.end55, !dbg !6812

cond.false53:                                     ; preds = %cond.true43
  %27 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6812, !tbaa !1461
  %__pyx_n_s_loglevel = getelementptr inbounds %struct.__pyx_mstate, ptr %27, i32 0, i32 43, !dbg !6812
  %28 = load ptr, ptr %__pyx_n_s_loglevel, align 8, !dbg !6812, !tbaa !1781
  %call54 = call ptr @__Pyx_GetBuiltinName(ptr noundef %28), !dbg !6812
  br label %cond.end55, !dbg !6812

cond.end55:                                       ; preds = %cond.false53, %cond.true52
  %cond56 = phi ptr [ %26, %cond.true52 ], [ %call54, %cond.false53 ], !dbg !6812
  br label %cond.end60, !dbg !6812

cond.false57:                                     ; preds = %do.body31
  %29 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6812, !tbaa !1461
  %__pyx_n_s_loglevel58 = getelementptr inbounds %struct.__pyx_mstate, ptr %29, i32 0, i32 43, !dbg !6812
  %30 = load ptr, ptr %__pyx_n_s_loglevel58, align 8, !dbg !6812, !tbaa !1781
  %call59 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %30, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version.29, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.30), !dbg !6812
  br label %cond.end60, !dbg !6812

cond.end60:                                       ; preds = %cond.false57, %cond.end55
  %cond61 = phi ptr [ %cond56, %cond.end55 ], [ %call59, %cond.false57 ], !dbg !6812
  store ptr %cond61, ptr %__pyx_t_1, align 8, !dbg !6812, !tbaa !1461
  br label %do.cond62, !dbg !6812

do.cond62:                                        ; preds = %cond.end60
  br label %do.end63, !dbg !6812

do.end63:                                         ; preds = %do.cond62
  %31 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6814, !tbaa !1461
  %tobool64 = icmp ne ptr %31, null, !dbg !6814
  %lnot65 = xor i1 %tobool64, true, !dbg !6814
  %lnot67 = xor i1 %lnot65, true, !dbg !6814
  %lnot69 = xor i1 %lnot67, true, !dbg !6814
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !6814
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !6814
  %expval72 = call i64 @llvm.expect.i64(i64 %conv71, i64 0), !dbg !6814
  %tobool73 = icmp ne i64 %expval72, 0, !dbg !6814
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !6816

if.then74:                                        ; preds = %do.end63
  %32 = load ptr, ptr @__pyx_f, align 16, !dbg !6817, !tbaa !1461
  store ptr %32, ptr %__pyx_filename, align 8, !dbg !6817, !tbaa !1461
  %33 = load ptr, ptr %__pyx_filename, align 8, !dbg !6817, !tbaa !1461
  store i32 16, ptr %__pyx_lineno, align 4, !dbg !6817, !tbaa !1557
  %34 = load i32, ptr %__pyx_lineno, align 4, !dbg !6817, !tbaa !1557
  store i32 2787, ptr %__pyx_clineno, align 4, !dbg !6817, !tbaa !1557
  %35 = load i32, ptr %__pyx_clineno, align 4, !dbg !6817, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6820

if.end75:                                         ; preds = %do.end63
  %36 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6821, !tbaa !1461
  %37 = load ptr, ptr %__pyx_v_level.addr, align 8, !dbg !6822, !tbaa !1461
  %call76 = call ptr @PyObject_RichCompare(ptr noundef %36, ptr noundef %37, i32 noundef 5), !dbg !6823
  store ptr %call76, ptr %__pyx_t_3, align 8, !dbg !6824, !tbaa !1461
  %38 = load ptr, ptr %__pyx_t_3, align 8, !dbg !6825, !tbaa !1461
  %tobool77 = icmp ne ptr %38, null, !dbg !6825
  %lnot78 = xor i1 %tobool77, true, !dbg !6825
  %lnot80 = xor i1 %lnot78, true, !dbg !6825
  %lnot82 = xor i1 %lnot80, true, !dbg !6825
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !6825
  %conv84 = sext i32 %lnot.ext83 to i64, !dbg !6825
  %expval85 = call i64 @llvm.expect.i64(i64 %conv84, i64 0), !dbg !6825
  %tobool86 = icmp ne i64 %expval85, 0, !dbg !6825
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !6827

if.then87:                                        ; preds = %if.end75
  %39 = load ptr, ptr @__pyx_f, align 16, !dbg !6828, !tbaa !1461
  store ptr %39, ptr %__pyx_filename, align 8, !dbg !6828, !tbaa !1461
  %40 = load ptr, ptr %__pyx_filename, align 8, !dbg !6828, !tbaa !1461
  store i32 16, ptr %__pyx_lineno, align 4, !dbg !6828, !tbaa !1557
  %41 = load i32, ptr %__pyx_lineno, align 4, !dbg !6828, !tbaa !1557
  store i32 2789, ptr %__pyx_clineno, align 4, !dbg !6828, !tbaa !1557
  %42 = load i32, ptr %__pyx_clineno, align 4, !dbg !6828, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6831

if.end88:                                         ; preds = %if.end75
  %43 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6832, !tbaa !1461
  call void @Py_DECREF(ptr noundef %43), !dbg !6832
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6833, !tbaa !1461
  %44 = load ptr, ptr %__pyx_t_3, align 8, !dbg !6834, !tbaa !1461
  %call89 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %44), !dbg !6835
  store i32 %call89, ptr %__pyx_t_2, align 4, !dbg !6836, !tbaa !1557
  %45 = load i32, ptr %__pyx_t_2, align 4, !dbg !6837, !tbaa !1557
  %cmp90 = icmp slt i32 %45, 0, !dbg !6837
  %lnot92 = xor i1 %cmp90, true, !dbg !6837
  %lnot94 = xor i1 %lnot92, true, !dbg !6837
  %lnot.ext95 = zext i1 %lnot94 to i32, !dbg !6837
  %conv96 = sext i32 %lnot.ext95 to i64, !dbg !6837
  %expval97 = call i64 @llvm.expect.i64(i64 %conv96, i64 0), !dbg !6837
  %tobool98 = icmp ne i64 %expval97, 0, !dbg !6837
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !6839

if.then99:                                        ; preds = %if.end88
  %46 = load ptr, ptr @__pyx_f, align 16, !dbg !6840, !tbaa !1461
  store ptr %46, ptr %__pyx_filename, align 8, !dbg !6840, !tbaa !1461
  %47 = load ptr, ptr %__pyx_filename, align 8, !dbg !6840, !tbaa !1461
  store i32 16, ptr %__pyx_lineno, align 4, !dbg !6840, !tbaa !1557
  %48 = load i32, ptr %__pyx_lineno, align 4, !dbg !6840, !tbaa !1557
  store i32 2791, ptr %__pyx_clineno, align 4, !dbg !6840, !tbaa !1557
  %49 = load i32, ptr %__pyx_clineno, align 4, !dbg !6840, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6843

if.end100:                                        ; preds = %if.end88
  %50 = load ptr, ptr %__pyx_t_3, align 8, !dbg !6844, !tbaa !1461
  call void @Py_DECREF(ptr noundef %50), !dbg !6844
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !6845, !tbaa !1461
  %51 = load i32, ptr %__pyx_t_2, align 4, !dbg !6846, !tbaa !1557
  %tobool101 = icmp ne i32 %51, 0, !dbg !6846
  br i1 %tobool101, label %if.then102, label %if.end193, !dbg !6848

if.then102:                                       ; preds = %if.end100
  br label %do.body103, !dbg !6849

do.body103:                                       ; preds = %if.then102
  %52 = load i64, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version.31, align 8, !dbg !6851, !tbaa !1836
  %53 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6851, !tbaa !1461
  %__pyx_d104 = getelementptr inbounds %struct.__pyx_mstate, ptr %53, i32 0, i32 0, !dbg !6851
  %54 = load ptr, ptr %__pyx_d104, align 8, !dbg !6851, !tbaa !1598
  %ma_version_tag105 = getelementptr inbounds %struct.PyDictObject, ptr %54, i32 0, i32 2, !dbg !6851
  %55 = load i64, ptr %ma_version_tag105, align 8, !dbg !6851, !tbaa !4834
  %cmp106 = icmp eq i64 %52, %55, !dbg !6851
  %lnot108 = xor i1 %cmp106, true, !dbg !6851
  %lnot110 = xor i1 %lnot108, true, !dbg !6851
  %lnot.ext111 = zext i1 %lnot110 to i32, !dbg !6851
  %conv112 = sext i32 %lnot.ext111 to i64, !dbg !6851
  %expval113 = call i64 @llvm.expect.i64(i64 %conv112, i64 1), !dbg !6851
  %tobool114 = icmp ne i64 %expval113, 0, !dbg !6851
  br i1 %tobool114, label %cond.true115, label %cond.false130, !dbg !6851

cond.true115:                                     ; preds = %do.body103
  %56 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.32, align 8, !dbg !6851, !tbaa !1461
  %tobool116 = icmp ne ptr %56, null, !dbg !6851
  %lnot117 = xor i1 %tobool116, true, !dbg !6851
  %lnot119 = xor i1 %lnot117, true, !dbg !6851
  %lnot.ext120 = zext i1 %lnot119 to i32, !dbg !6851
  %conv121 = sext i32 %lnot.ext120 to i64, !dbg !6851
  %expval122 = call i64 @llvm.expect.i64(i64 %conv121, i64 1), !dbg !6851
  %tobool123 = icmp ne i64 %expval122, 0, !dbg !6851
  br i1 %tobool123, label %cond.true124, label %cond.false125, !dbg !6851

cond.true124:                                     ; preds = %cond.true115
  %57 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.32, align 8, !dbg !6851, !tbaa !1461
  call void @Py_INCREF(ptr noundef %57), !dbg !6851
  %58 = load ptr, ptr @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.32, align 8, !dbg !6851, !tbaa !1461
  br label %cond.end128, !dbg !6851

cond.false125:                                    ; preds = %cond.true115
  %59 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6851, !tbaa !1461
  %__pyx_n_s_reflog126 = getelementptr inbounds %struct.__pyx_mstate, ptr %59, i32 0, i32 51, !dbg !6851
  %60 = load ptr, ptr %__pyx_n_s_reflog126, align 8, !dbg !6851, !tbaa !1803
  %call127 = call ptr @__Pyx_GetBuiltinName(ptr noundef %60), !dbg !6851
  br label %cond.end128, !dbg !6851

cond.end128:                                      ; preds = %cond.false125, %cond.true124
  %cond129 = phi ptr [ %58, %cond.true124 ], [ %call127, %cond.false125 ], !dbg !6851
  br label %cond.end133, !dbg !6851

cond.false130:                                    ; preds = %do.body103
  %61 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !6851, !tbaa !1461
  %__pyx_n_s_reflog131 = getelementptr inbounds %struct.__pyx_mstate, ptr %61, i32 0, i32 51, !dbg !6851
  %62 = load ptr, ptr %__pyx_n_s_reflog131, align 8, !dbg !6851, !tbaa !1803
  %call132 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %62, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_version.31, ptr noundef @__pyx_f_6Cython_7Runtime_8refnanny_log.__pyx_dict_cached_value.32), !dbg !6851
  br label %cond.end133, !dbg !6851

cond.end133:                                      ; preds = %cond.false130, %cond.end128
  %cond134 = phi ptr [ %cond129, %cond.end128 ], [ %call132, %cond.false130 ], !dbg !6851
  store ptr %cond134, ptr %__pyx_t_3, align 8, !dbg !6851, !tbaa !1461
  br label %do.cond135, !dbg !6851

do.cond135:                                       ; preds = %cond.end133
  br label %do.end136, !dbg !6851

do.end136:                                        ; preds = %do.cond135
  %63 = load ptr, ptr %__pyx_t_3, align 8, !dbg !6853, !tbaa !1461
  %tobool137 = icmp ne ptr %63, null, !dbg !6853
  %lnot138 = xor i1 %tobool137, true, !dbg !6853
  %lnot140 = xor i1 %lnot138, true, !dbg !6853
  %lnot142 = xor i1 %lnot140, true, !dbg !6853
  %lnot.ext143 = zext i1 %lnot142 to i32, !dbg !6853
  %conv144 = sext i32 %lnot.ext143 to i64, !dbg !6853
  %expval145 = call i64 @llvm.expect.i64(i64 %conv144, i64 0), !dbg !6853
  %tobool146 = icmp ne i64 %expval145, 0, !dbg !6853
  br i1 %tobool146, label %if.then147, label %if.end148, !dbg !6855

if.then147:                                       ; preds = %do.end136
  %64 = load ptr, ptr @__pyx_f, align 16, !dbg !6856, !tbaa !1461
  store ptr %64, ptr %__pyx_filename, align 8, !dbg !6856, !tbaa !1461
  %65 = load ptr, ptr %__pyx_filename, align 8, !dbg !6856, !tbaa !1461
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !6856, !tbaa !1557
  %66 = load i32, ptr %__pyx_lineno, align 4, !dbg !6856, !tbaa !1557
  store i32 2802, ptr %__pyx_clineno, align 4, !dbg !6856, !tbaa !1557
  %67 = load i32, ptr %__pyx_clineno, align 4, !dbg !6856, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6859

if.end148:                                        ; preds = %do.end136
  %68 = load ptr, ptr @__pyx_builtin_id, align 8, !dbg !6860, !tbaa !1461
  %69 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !6861, !tbaa !1461
  %call149 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %68, ptr noundef %69), !dbg !6862
  store ptr %call149, ptr %__pyx_t_1, align 8, !dbg !6863, !tbaa !1461
  %70 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6864, !tbaa !1461
  %tobool150 = icmp ne ptr %70, null, !dbg !6864
  %lnot151 = xor i1 %tobool150, true, !dbg !6864
  %lnot153 = xor i1 %lnot151, true, !dbg !6864
  %lnot155 = xor i1 %lnot153, true, !dbg !6864
  %lnot.ext156 = zext i1 %lnot155 to i32, !dbg !6864
  %conv157 = sext i32 %lnot.ext156 to i64, !dbg !6864
  %expval158 = call i64 @llvm.expect.i64(i64 %conv157, i64 0), !dbg !6864
  %tobool159 = icmp ne i64 %expval158, 0, !dbg !6864
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !6866

if.then160:                                       ; preds = %if.end148
  %71 = load ptr, ptr @__pyx_f, align 16, !dbg !6867, !tbaa !1461
  store ptr %71, ptr %__pyx_filename, align 8, !dbg !6867, !tbaa !1461
  %72 = load ptr, ptr %__pyx_filename, align 8, !dbg !6867, !tbaa !1461
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !6867, !tbaa !1557
  %73 = load i32, ptr %__pyx_lineno, align 4, !dbg !6867, !tbaa !1557
  store i32 2804, ptr %__pyx_clineno, align 4, !dbg !6867, !tbaa !1557
  %74 = load i32, ptr %__pyx_clineno, align 4, !dbg !6867, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6870

if.end161:                                        ; preds = %if.end148
  %call162 = call ptr @PyTuple_New(i64 noundef 3), !dbg !6871
  store ptr %call162, ptr %__pyx_t_4, align 8, !dbg !6872, !tbaa !1461
  %75 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6873, !tbaa !1461
  %tobool163 = icmp ne ptr %75, null, !dbg !6873
  %lnot164 = xor i1 %tobool163, true, !dbg !6873
  %lnot166 = xor i1 %lnot164, true, !dbg !6873
  %lnot168 = xor i1 %lnot166, true, !dbg !6873
  %lnot.ext169 = zext i1 %lnot168 to i32, !dbg !6873
  %conv170 = sext i32 %lnot.ext169 to i64, !dbg !6873
  %expval171 = call i64 @llvm.expect.i64(i64 %conv170, i64 0), !dbg !6873
  %tobool172 = icmp ne i64 %expval171, 0, !dbg !6873
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !6875

if.then173:                                       ; preds = %if.end161
  %76 = load ptr, ptr @__pyx_f, align 16, !dbg !6876, !tbaa !1461
  store ptr %76, ptr %__pyx_filename, align 8, !dbg !6876, !tbaa !1461
  %77 = load ptr, ptr %__pyx_filename, align 8, !dbg !6876, !tbaa !1461
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !6876, !tbaa !1557
  %78 = load i32, ptr %__pyx_lineno, align 4, !dbg !6876, !tbaa !1557
  store i32 2806, ptr %__pyx_clineno, align 4, !dbg !6876, !tbaa !1557
  %79 = load i32, ptr %__pyx_clineno, align 4, !dbg !6876, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6879

if.end174:                                        ; preds = %if.end161
  %80 = load ptr, ptr %__pyx_v_lineno.addr, align 8, !dbg !6880, !tbaa !1461
  call void @Py_INCREF(ptr noundef %80), !dbg !6880
  %81 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6881, !tbaa !1461
  %82 = load ptr, ptr %__pyx_v_lineno.addr, align 8, !dbg !6881, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %81, i64 noundef 0, ptr noundef %82), !dbg !6881
  br i1 false, label %if.then175, label %if.end176, !dbg !6883

if.then175:                                       ; preds = %if.end174
  %83 = load ptr, ptr @__pyx_f, align 16, !dbg !6884, !tbaa !1461
  store ptr %83, ptr %__pyx_filename, align 8, !dbg !6884, !tbaa !1461
  %84 = load ptr, ptr %__pyx_filename, align 8, !dbg !6884, !tbaa !1461
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !6884, !tbaa !1557
  %85 = load i32, ptr %__pyx_lineno, align 4, !dbg !6884, !tbaa !1557
  store i32 2810, ptr %__pyx_clineno, align 4, !dbg !6884, !tbaa !1557
  %86 = load i32, ptr %__pyx_clineno, align 4, !dbg !6884, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6887

if.end176:                                        ; preds = %if.end174
  %87 = load ptr, ptr %__pyx_v_action.addr, align 8, !dbg !6888, !tbaa !1461
  call void @Py_INCREF(ptr noundef %87), !dbg !6888
  %88 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6889, !tbaa !1461
  %89 = load ptr, ptr %__pyx_v_action.addr, align 8, !dbg !6889, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %88, i64 noundef 1, ptr noundef %89), !dbg !6889
  br i1 false, label %if.then177, label %if.end178, !dbg !6891

if.then177:                                       ; preds = %if.end176
  %90 = load ptr, ptr @__pyx_f, align 16, !dbg !6892, !tbaa !1461
  store ptr %90, ptr %__pyx_filename, align 8, !dbg !6892, !tbaa !1461
  %91 = load ptr, ptr %__pyx_filename, align 8, !dbg !6892, !tbaa !1461
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !6892, !tbaa !1557
  %92 = load i32, ptr %__pyx_lineno, align 4, !dbg !6892, !tbaa !1557
  store i32 2813, ptr %__pyx_clineno, align 4, !dbg !6892, !tbaa !1557
  %93 = load i32, ptr %__pyx_clineno, align 4, !dbg !6892, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6895

if.end178:                                        ; preds = %if.end176
  %94 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6896, !tbaa !1461
  %95 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6896, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %94, i64 noundef 2, ptr noundef %95), !dbg !6896
  br i1 false, label %if.then179, label %if.end180, !dbg !6898

if.then179:                                       ; preds = %if.end178
  %96 = load ptr, ptr @__pyx_f, align 16, !dbg !6899, !tbaa !1461
  store ptr %96, ptr %__pyx_filename, align 8, !dbg !6899, !tbaa !1461
  %97 = load ptr, ptr %__pyx_filename, align 8, !dbg !6899, !tbaa !1461
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !6899, !tbaa !1557
  %98 = load i32, ptr %__pyx_lineno, align 4, !dbg !6899, !tbaa !1557
  store i32 2815, ptr %__pyx_clineno, align 4, !dbg !6899, !tbaa !1557
  %99 = load i32, ptr %__pyx_clineno, align 4, !dbg !6899, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6902

if.end180:                                        ; preds = %if.end178
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6903, !tbaa !1461
  %100 = load ptr, ptr %__pyx_t_3, align 8, !dbg !6904, !tbaa !1461
  %101 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6905, !tbaa !1461
  %call181 = call i32 @__Pyx_PyObject_Append(ptr noundef %100, ptr noundef %101), !dbg !6906
  store i32 %call181, ptr %__pyx_t_5, align 4, !dbg !6907, !tbaa !1557
  %102 = load i32, ptr %__pyx_t_5, align 4, !dbg !6908, !tbaa !1557
  %cmp182 = icmp eq i32 %102, -1, !dbg !6908
  %lnot184 = xor i1 %cmp182, true, !dbg !6908
  %lnot186 = xor i1 %lnot184, true, !dbg !6908
  %lnot.ext187 = zext i1 %lnot186 to i32, !dbg !6908
  %conv188 = sext i32 %lnot.ext187 to i64, !dbg !6908
  %expval189 = call i64 @llvm.expect.i64(i64 %conv188, i64 0), !dbg !6908
  %tobool190 = icmp ne i64 %expval189, 0, !dbg !6908
  br i1 %tobool190, label %if.then191, label %if.end192, !dbg !6910

if.then191:                                       ; preds = %if.end180
  %103 = load ptr, ptr @__pyx_f, align 16, !dbg !6911, !tbaa !1461
  store ptr %103, ptr %__pyx_filename, align 8, !dbg !6911, !tbaa !1461
  %104 = load ptr, ptr %__pyx_filename, align 8, !dbg !6911, !tbaa !1461
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !6911, !tbaa !1557
  %105 = load i32, ptr %__pyx_lineno, align 4, !dbg !6911, !tbaa !1557
  store i32 2817, ptr %__pyx_clineno, align 4, !dbg !6911, !tbaa !1557
  %106 = load i32, ptr %__pyx_clineno, align 4, !dbg !6911, !tbaa !1557
  br label %__pyx_L1_error, !dbg !6914

if.end192:                                        ; preds = %if.end180
  %107 = load ptr, ptr %__pyx_t_3, align 8, !dbg !6915, !tbaa !1461
  call void @Py_DECREF(ptr noundef %107), !dbg !6915
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !6916, !tbaa !1461
  %108 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6917, !tbaa !1461
  call void @Py_DECREF(ptr noundef %108), !dbg !6917
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !6918, !tbaa !1461
  br label %if.end193, !dbg !6919

if.end193:                                        ; preds = %if.end192, %if.end100
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !6920, !tbaa !1461
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !6921
  br label %__pyx_L0, !dbg !6922

__pyx_L1_error:                                   ; preds = %if.then191, %if.then179, %if.then177, %if.then175, %if.then173, %if.then160, %if.then147, %if.then99, %if.then87, %if.then74, %if.then
  tail call void @llvm.dbg.label(metadata !1006), !dbg !6923
  %109 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6924, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %109), !dbg !6924
  %110 = load ptr, ptr %__pyx_t_3, align 8, !dbg !6925, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %110), !dbg !6925
  %111 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6926, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %111), !dbg !6926
  %112 = load i32, ptr %__pyx_clineno, align 4, !dbg !6927, !tbaa !1557
  %113 = load i32, ptr %__pyx_lineno, align 4, !dbg !6928, !tbaa !1557
  %114 = load ptr, ptr %__pyx_filename, align 8, !dbg !6929, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.33, i32 noundef %112, i32 noundef %113, ptr noundef %114), !dbg !6930
  store ptr null, ptr %__pyx_r, align 8, !dbg !6931, !tbaa !1461
  br label %__pyx_L0, !dbg !6932

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end193, %if.then29
  tail call void @llvm.dbg.label(metadata !1007), !dbg !6933
  %115 = load ptr, ptr %__pyx_r, align 8, !dbg !6934, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !6935
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !6935
  ret ptr %115, !dbg !6936
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyUnicode_From_Py_ssize_t(i64 noundef %value, i64 noundef %width, i8 noundef signext %padding_char, i8 noundef signext %format_char) #3 !dbg !6937 {
entry:
  %retval = alloca ptr, align 8
  %value.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %padding_char.addr = alloca i8, align 1
  %format_char.addr = alloca i8, align 1
  %digits = alloca [26 x i8], align 16
  %dpos = alloca ptr, align 8
  %end = alloca ptr, align 8
  %hex_digits = alloca ptr, align 8
  %length = alloca i64, align 8
  %ulength = alloca i64, align 8
  %prepend_sign = alloca i32, align 4
  %last_one_off = alloca i32, align 4
  %remaining = alloca i64, align 8
  %neg_one = alloca i64, align 8
  %const_zero = alloca i64, align 8
  %is_unsigned = alloca i32, align 4
  %digit_pos = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %value, ptr %value.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !6941, metadata !DIExpression()), !dbg !6961
  store i64 %width, ptr %width.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %width.addr, metadata !6942, metadata !DIExpression()), !dbg !6962
  store i8 %padding_char, ptr %padding_char.addr, align 1, !tbaa !6963
  tail call void @llvm.dbg.declare(metadata ptr %padding_char.addr, metadata !6943, metadata !DIExpression()), !dbg !6964
  store i8 %format_char, ptr %format_char.addr, align 1, !tbaa !6963
  tail call void @llvm.dbg.declare(metadata ptr %format_char.addr, metadata !6944, metadata !DIExpression()), !dbg !6965
  call void @llvm.lifetime.start.p0(i64 26, ptr %digits) #10, !dbg !6966
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !6945, metadata !DIExpression()), !dbg !6967
  call void @llvm.lifetime.start.p0(i64 8, ptr %dpos) #10, !dbg !6968
  tail call void @llvm.dbg.declare(metadata ptr %dpos, metadata !6947, metadata !DIExpression()), !dbg !6969
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #10, !dbg !6968
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !6948, metadata !DIExpression()), !dbg !6970
  %arraydecay = getelementptr inbounds [26 x i8], ptr %digits, i64 0, i64 0, !dbg !6971
  %add.ptr = getelementptr i8, ptr %arraydecay, i64 24, !dbg !6972
  %add.ptr1 = getelementptr i8, ptr %add.ptr, i64 2, !dbg !6973
  store ptr %add.ptr1, ptr %end, align 8, !dbg !6970, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %hex_digits) #10, !dbg !6974
  tail call void @llvm.dbg.declare(metadata ptr %hex_digits, metadata !6949, metadata !DIExpression()), !dbg !6975
  store ptr @DIGITS_HEX, ptr %hex_digits, align 8, !dbg !6975, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %length) #10, !dbg !6976
  tail call void @llvm.dbg.declare(metadata ptr %length, metadata !6950, metadata !DIExpression()), !dbg !6977
  call void @llvm.lifetime.start.p0(i64 8, ptr %ulength) #10, !dbg !6976
  tail call void @llvm.dbg.declare(metadata ptr %ulength, metadata !6951, metadata !DIExpression()), !dbg !6978
  call void @llvm.lifetime.start.p0(i64 4, ptr %prepend_sign) #10, !dbg !6979
  tail call void @llvm.dbg.declare(metadata ptr %prepend_sign, metadata !6952, metadata !DIExpression()), !dbg !6980
  call void @llvm.lifetime.start.p0(i64 4, ptr %last_one_off) #10, !dbg !6979
  tail call void @llvm.dbg.declare(metadata ptr %last_one_off, metadata !6953, metadata !DIExpression()), !dbg !6981
  call void @llvm.lifetime.start.p0(i64 8, ptr %remaining) #10, !dbg !6982
  tail call void @llvm.dbg.declare(metadata ptr %remaining, metadata !6954, metadata !DIExpression()), !dbg !6983
  call void @llvm.lifetime.start.p0(i64 8, ptr %neg_one) #10, !dbg !6984
  tail call void @llvm.dbg.declare(metadata ptr %neg_one, metadata !6955, metadata !DIExpression()), !dbg !6985
  store i64 -1, ptr %neg_one, align 8, !dbg !6985, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_zero) #10, !dbg !6984
  tail call void @llvm.dbg.declare(metadata ptr %const_zero, metadata !6956, metadata !DIExpression()), !dbg !6986
  store i64 0, ptr %const_zero, align 8, !dbg !6986, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #10, !dbg !6987
  tail call void @llvm.dbg.declare(metadata ptr %is_unsigned, metadata !6957, metadata !DIExpression()), !dbg !6988
  store i32 0, ptr %is_unsigned, align 4, !dbg !6988, !tbaa !1557
  %0 = load i8, ptr %format_char.addr, align 1, !dbg !6989, !tbaa !6963
  %conv = sext i8 %0 to i32, !dbg !6989
  %cmp = icmp eq i32 %conv, 88, !dbg !6991
  br i1 %cmp, label %if.then, label %if.end, !dbg !6992

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %hex_digits, align 8, !dbg !6993, !tbaa !1461
  %add.ptr3 = getelementptr i8, ptr %1, i64 16, !dbg !6993
  store ptr %add.ptr3, ptr %hex_digits, align 8, !dbg !6993, !tbaa !1461
  store i8 120, ptr %format_char.addr, align 1, !dbg !6995, !tbaa !6963
  br label %if.end, !dbg !6996

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64, ptr %value.addr, align 8, !dbg !6997, !tbaa !1836
  store i64 %2, ptr %remaining, align 8, !dbg !6998, !tbaa !1836
  store i32 0, ptr %last_one_off, align 4, !dbg !6999, !tbaa !1557
  %3 = load ptr, ptr %end, align 8, !dbg !7000, !tbaa !1461
  store ptr %3, ptr %dpos, align 8, !dbg !7001, !tbaa !1461
  br label %do.body, !dbg !7002

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %digit_pos) #10, !dbg !7003
  tail call void @llvm.dbg.declare(metadata ptr %digit_pos, metadata !6959, metadata !DIExpression()), !dbg !7004
  %4 = load i8, ptr %format_char.addr, align 1, !dbg !7005, !tbaa !6963
  %conv4 = sext i8 %4 to i32, !dbg !7005
  switch i32 %conv4, label %sw.default [
    i32 111, label %sw.bb
    i32 100, label %sw.bb10
    i32 120, label %sw.bb23
  ], !dbg !7006

sw.bb:                                            ; preds = %do.body
  %5 = load i64, ptr %remaining, align 8, !dbg !7007, !tbaa !1836
  %rem = srem i64 %5, 64, !dbg !7009
  %conv5 = trunc i64 %rem to i32, !dbg !7010
  %neg = sub i32 0, %conv5, !dbg !7011
  %abscond = icmp slt i32 %conv5, 0, !dbg !7011
  %abs = select i1 %abscond, i32 %neg, i32 %conv5, !dbg !7011
  store i32 %abs, ptr %digit_pos, align 4, !dbg !7012, !tbaa !1557
  %6 = load i64, ptr %remaining, align 8, !dbg !7013, !tbaa !1836
  %div = sdiv i64 %6, 64, !dbg !7014
  store i64 %div, ptr %remaining, align 8, !dbg !7015, !tbaa !1836
  %7 = load ptr, ptr %dpos, align 8, !dbg !7016, !tbaa !1461
  %add.ptr6 = getelementptr i8, ptr %7, i64 -2, !dbg !7016
  store ptr %add.ptr6, ptr %dpos, align 8, !dbg !7016, !tbaa !1461
  %8 = load ptr, ptr %dpos, align 8, !dbg !7017, !tbaa !1461
  %9 = load i32, ptr %digit_pos, align 4, !dbg !7018, !tbaa !1557
  %mul = mul i32 %9, 2, !dbg !7019
  %idx.ext = sext i32 %mul to i64, !dbg !7020
  %add.ptr7 = getelementptr i8, ptr @DIGIT_PAIRS_8, i64 %idx.ext, !dbg !7020
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %8, ptr align 1 %add.ptr7, i64 2, i1 false), !dbg !7021
  %10 = load i32, ptr %digit_pos, align 4, !dbg !7022, !tbaa !1557
  %cmp8 = icmp slt i32 %10, 8, !dbg !7023
  %conv9 = zext i1 %cmp8 to i32, !dbg !7023
  store i32 %conv9, ptr %last_one_off, align 4, !dbg !7024, !tbaa !1557
  br label %sw.epilog, !dbg !7025

sw.bb10:                                          ; preds = %do.body
  %11 = load i64, ptr %remaining, align 8, !dbg !7026, !tbaa !1836
  %rem11 = srem i64 %11, 100, !dbg !7027
  %conv12 = trunc i64 %rem11 to i32, !dbg !7028
  %neg13 = sub i32 0, %conv12, !dbg !7029
  %abscond14 = icmp slt i32 %conv12, 0, !dbg !7029
  %abs15 = select i1 %abscond14, i32 %neg13, i32 %conv12, !dbg !7029
  store i32 %abs15, ptr %digit_pos, align 4, !dbg !7030, !tbaa !1557
  %12 = load i64, ptr %remaining, align 8, !dbg !7031, !tbaa !1836
  %div16 = sdiv i64 %12, 100, !dbg !7032
  store i64 %div16, ptr %remaining, align 8, !dbg !7033, !tbaa !1836
  %13 = load ptr, ptr %dpos, align 8, !dbg !7034, !tbaa !1461
  %add.ptr17 = getelementptr i8, ptr %13, i64 -2, !dbg !7034
  store ptr %add.ptr17, ptr %dpos, align 8, !dbg !7034, !tbaa !1461
  %14 = load ptr, ptr %dpos, align 8, !dbg !7035, !tbaa !1461
  %15 = load i32, ptr %digit_pos, align 4, !dbg !7036, !tbaa !1557
  %mul18 = mul i32 %15, 2, !dbg !7037
  %idx.ext19 = sext i32 %mul18 to i64, !dbg !7038
  %add.ptr20 = getelementptr i8, ptr @DIGIT_PAIRS_10, i64 %idx.ext19, !dbg !7038
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %14, ptr align 1 %add.ptr20, i64 2, i1 false), !dbg !7039
  %16 = load i32, ptr %digit_pos, align 4, !dbg !7040, !tbaa !1557
  %cmp21 = icmp slt i32 %16, 10, !dbg !7041
  %conv22 = zext i1 %cmp21 to i32, !dbg !7041
  store i32 %conv22, ptr %last_one_off, align 4, !dbg !7042, !tbaa !1557
  br label %sw.epilog, !dbg !7043

sw.bb23:                                          ; preds = %do.body
  %17 = load ptr, ptr %hex_digits, align 8, !dbg !7044, !tbaa !1461
  %18 = load i64, ptr %remaining, align 8, !dbg !7045, !tbaa !1836
  %rem24 = srem i64 %18, 16, !dbg !7046
  %conv25 = trunc i64 %rem24 to i32, !dbg !7047
  %neg26 = sub i32 0, %conv25, !dbg !7048
  %abscond27 = icmp slt i32 %conv25, 0, !dbg !7048
  %abs28 = select i1 %abscond27, i32 %neg26, i32 %conv25, !dbg !7048
  %idxprom = sext i32 %abs28 to i64, !dbg !7044
  %arrayidx = getelementptr i8, ptr %17, i64 %idxprom, !dbg !7044
  %19 = load i8, ptr %arrayidx, align 1, !dbg !7044, !tbaa !6963
  %20 = load ptr, ptr %dpos, align 8, !dbg !7049, !tbaa !1461
  %incdec.ptr = getelementptr i8, ptr %20, i32 -1, !dbg !7049
  store ptr %incdec.ptr, ptr %dpos, align 8, !dbg !7049, !tbaa !1461
  store i8 %19, ptr %incdec.ptr, align 1, !dbg !7050, !tbaa !6963
  %21 = load i64, ptr %remaining, align 8, !dbg !7051, !tbaa !1836
  %div29 = sdiv i64 %21, 16, !dbg !7052
  store i64 %div29, ptr %remaining, align 8, !dbg !7053, !tbaa !1836
  br label %sw.epilog, !dbg !7054

sw.default:                                       ; preds = %do.body
  br label %sw.epilog, !dbg !7055

sw.epilog:                                        ; preds = %sw.default, %sw.bb23, %sw.bb10, %sw.bb
  call void @llvm.lifetime.end.p0(i64 4, ptr %digit_pos) #10, !dbg !7056
  br label %do.cond, !dbg !7057

do.cond:                                          ; preds = %sw.epilog
  %22 = load i64, ptr %remaining, align 8, !dbg !7058, !tbaa !1836
  %cmp30 = icmp ne i64 %22, 0, !dbg !7058
  %lnot = xor i1 %cmp30, true, !dbg !7058
  %lnot32 = xor i1 %lnot, true, !dbg !7058
  %lnot.ext = zext i1 %lnot32 to i32, !dbg !7058
  %conv33 = sext i32 %lnot.ext to i64, !dbg !7058
  %expval = call i64 @llvm.expect.i64(i64 %conv33, i64 0), !dbg !7058
  %tobool = icmp ne i64 %expval, 0, !dbg !7057
  br i1 %tobool, label %do.body, label %do.end, !dbg !7057, !llvm.loop !7059

do.end:                                           ; preds = %do.cond
  %23 = load i32, ptr %last_one_off, align 4, !dbg !7061, !tbaa !1557
  %24 = load ptr, ptr %dpos, align 8, !dbg !7062, !tbaa !1461
  %idx.ext34 = sext i32 %23 to i64, !dbg !7062
  %add.ptr35 = getelementptr i8, ptr %24, i64 %idx.ext34, !dbg !7062
  store ptr %add.ptr35, ptr %dpos, align 8, !dbg !7062, !tbaa !1461
  %25 = load ptr, ptr %end, align 8, !dbg !7063, !tbaa !1461
  %26 = load ptr, ptr %dpos, align 8, !dbg !7064, !tbaa !1461
  %sub.ptr.lhs.cast = ptrtoint ptr %25 to i64, !dbg !7065
  %sub.ptr.rhs.cast = ptrtoint ptr %26 to i64, !dbg !7065
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7065
  store i64 %sub.ptr.sub, ptr %length, align 8, !dbg !7066, !tbaa !1836
  %27 = load i64, ptr %length, align 8, !dbg !7067, !tbaa !1836
  store i64 %27, ptr %ulength, align 8, !dbg !7068, !tbaa !1836
  store i32 0, ptr %prepend_sign, align 4, !dbg !7069, !tbaa !1557
  %28 = load i64, ptr %value.addr, align 8, !dbg !7070, !tbaa !1836
  %cmp36 = icmp sle i64 %28, -1, !dbg !7072
  br i1 %cmp36, label %if.then38, label %if.end48, !dbg !7073

if.then38:                                        ; preds = %do.end
  %29 = load i8, ptr %padding_char.addr, align 1, !dbg !7074, !tbaa !6963
  %conv39 = sext i8 %29 to i32, !dbg !7074
  %cmp40 = icmp eq i32 %conv39, 32, !dbg !7077
  br i1 %cmp40, label %if.then44, label %lor.lhs.false, !dbg !7078

lor.lhs.false:                                    ; preds = %if.then38
  %30 = load i64, ptr %width.addr, align 8, !dbg !7079, !tbaa !1836
  %31 = load i64, ptr %length, align 8, !dbg !7080, !tbaa !1836
  %add = add i64 %31, 1, !dbg !7081
  %cmp42 = icmp sle i64 %30, %add, !dbg !7082
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !7083

if.then44:                                        ; preds = %lor.lhs.false, %if.then38
  %32 = load ptr, ptr %dpos, align 8, !dbg !7084, !tbaa !1461
  %incdec.ptr45 = getelementptr i8, ptr %32, i32 -1, !dbg !7084
  store ptr %incdec.ptr45, ptr %dpos, align 8, !dbg !7084, !tbaa !1461
  store i8 45, ptr %incdec.ptr45, align 1, !dbg !7086, !tbaa !6963
  %33 = load i64, ptr %length, align 8, !dbg !7087, !tbaa !1836
  %inc = add i64 %33, 1, !dbg !7087
  store i64 %inc, ptr %length, align 8, !dbg !7087, !tbaa !1836
  br label %if.end46, !dbg !7088

if.else:                                          ; preds = %lor.lhs.false
  store i32 1, ptr %prepend_sign, align 4, !dbg !7089, !tbaa !1557
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then44
  %34 = load i64, ptr %ulength, align 8, !dbg !7091, !tbaa !1836
  %inc47 = add i64 %34, 1, !dbg !7091
  store i64 %inc47, ptr %ulength, align 8, !dbg !7091, !tbaa !1836
  br label %if.end48, !dbg !7092

if.end48:                                         ; preds = %if.end46, %do.end
  %35 = load i64, ptr %width.addr, align 8, !dbg !7093, !tbaa !1836
  %36 = load i64, ptr %ulength, align 8, !dbg !7095, !tbaa !1836
  %cmp49 = icmp sgt i64 %35, %36, !dbg !7096
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !7097

if.then51:                                        ; preds = %if.end48
  %37 = load i64, ptr %width.addr, align 8, !dbg !7098, !tbaa !1836
  store i64 %37, ptr %ulength, align 8, !dbg !7100, !tbaa !1836
  br label %if.end52, !dbg !7101

if.end52:                                         ; preds = %if.then51, %if.end48
  %38 = load i64, ptr %ulength, align 8, !dbg !7102, !tbaa !1836
  %cmp53 = icmp eq i64 %38, 1, !dbg !7104
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !7105

if.then55:                                        ; preds = %if.end52
  %39 = load ptr, ptr %dpos, align 8, !dbg !7106, !tbaa !1461
  %40 = load i8, ptr %39, align 1, !dbg !7108, !tbaa !6963
  %conv56 = sext i8 %40 to i32, !dbg !7108
  %call = call ptr @PyUnicode_FromOrdinal(i32 noundef %conv56), !dbg !7109
  store ptr %call, ptr %retval, align 8, !dbg !7110
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7110

if.end57:                                         ; preds = %if.end52
  %41 = load i64, ptr %ulength, align 8, !dbg !7111, !tbaa !1836
  %42 = load ptr, ptr %dpos, align 8, !dbg !7112, !tbaa !1461
  %43 = load i64, ptr %length, align 8, !dbg !7113, !tbaa !1836
  %conv58 = trunc i64 %43 to i32, !dbg !7114
  %44 = load i32, ptr %prepend_sign, align 4, !dbg !7115, !tbaa !1557
  %45 = load i8, ptr %padding_char.addr, align 1, !dbg !7116, !tbaa !6963
  %call59 = call ptr @__Pyx_PyUnicode_BuildFromAscii(i64 noundef %41, ptr noundef %42, i32 noundef %conv58, i32 noundef %44, i8 noundef signext %45), !dbg !7117
  store ptr %call59, ptr %retval, align 8, !dbg !7118
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7118

cleanup:                                          ; preds = %if.end57, %if.then55
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_zero) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %neg_one) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %remaining) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 4, ptr %last_one_off) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 4, ptr %prepend_sign) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %ulength) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %length) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %hex_digits) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 8, ptr %dpos) #10, !dbg !7119
  call void @llvm.lifetime.end.p0(i64 26, ptr %digits) #10, !dbg !7119
  %46 = load ptr, ptr %retval, align 8, !dbg !7119
  ret ptr %46, !dbg !7119
}

declare !dbg !7120 ptr @PyUnicode_Concat(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyList_Append(ptr noundef %list, ptr noundef %x) #3 !dbg !7121 {
entry:
  %retval = alloca i32, align 4
  %list.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %L = alloca ptr, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %list, ptr %list.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %list.addr, metadata !7123, metadata !DIExpression()), !dbg !7127
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !7124, metadata !DIExpression()), !dbg !7128
  call void @llvm.lifetime.start.p0(i64 8, ptr %L) #10, !dbg !7129
  tail call void @llvm.dbg.declare(metadata ptr %L, metadata !7125, metadata !DIExpression()), !dbg !7130
  %0 = load ptr, ptr %list.addr, align 8, !dbg !7131, !tbaa !1461
  store ptr %0, ptr %L, align 8, !dbg !7130, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %len) #10, !dbg !7132
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !7126, metadata !DIExpression()), !dbg !7133
  %1 = load ptr, ptr %list.addr, align 8, !dbg !7134, !tbaa !1461
  %call = call i64 @Py_SIZE(ptr noundef %1), !dbg !7134
  store i64 %call, ptr %len, align 8, !dbg !7133, !tbaa !1836
  %2 = load ptr, ptr %L, align 8, !dbg !7135, !tbaa !1461
  %allocated = getelementptr inbounds %struct.PyListObject, ptr %2, i32 0, i32 2, !dbg !7135
  %3 = load i64, ptr %allocated, align 8, !dbg !7135, !tbaa !7137
  %4 = load i64, ptr %len, align 8, !dbg !7135, !tbaa !1836
  %cmp = icmp sgt i64 %3, %4, !dbg !7135
  %lnot = xor i1 %cmp, true, !dbg !7135
  %lnot1 = xor i1 %lnot, true, !dbg !7135
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7135
  %conv = sext i32 %lnot.ext to i64, !dbg !7135
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !7135
  %5 = load i64, ptr %len, align 8, !dbg !7138, !tbaa !1836
  %6 = load ptr, ptr %L, align 8, !dbg !7138, !tbaa !1461
  %allocated2 = getelementptr inbounds %struct.PyListObject, ptr %6, i32 0, i32 2, !dbg !7138
  %7 = load i64, ptr %allocated2, align 8, !dbg !7138, !tbaa !7137
  %shr = ashr i64 %7, 1, !dbg !7138
  %cmp3 = icmp sgt i64 %5, %shr, !dbg !7138
  %lnot5 = xor i1 %cmp3, true, !dbg !7138
  %lnot7 = xor i1 %lnot5, true, !dbg !7138
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7138
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7138
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !7138
  %and = and i64 %expval, %expval10, !dbg !7139
  %tobool = icmp ne i64 %and, 0, !dbg !7139
  br i1 %tobool, label %if.then, label %if.end, !dbg !7140

if.then:                                          ; preds = %entry
  %8 = load ptr, ptr %x.addr, align 8, !dbg !7141, !tbaa !1461
  call void @Py_INCREF(ptr noundef %8), !dbg !7141
  %9 = load ptr, ptr %list.addr, align 8, !dbg !7143, !tbaa !1461
  %10 = load i64, ptr %len, align 8, !dbg !7143, !tbaa !1836
  %11 = load ptr, ptr %x.addr, align 8, !dbg !7143, !tbaa !1461
  call void @PyList_SET_ITEM(ptr noundef %9, i64 noundef %10, ptr noundef %11), !dbg !7143
  %12 = load ptr, ptr %list.addr, align 8, !dbg !7144, !tbaa !1461
  %13 = load i64, ptr %len, align 8, !dbg !7144, !tbaa !1836
  %add = add i64 %13, 1, !dbg !7144
  call void @Py_SET_SIZE(ptr noundef %12, i64 noundef %add), !dbg !7144
  store i32 0, ptr %retval, align 4, !dbg !7145
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7145

if.end:                                           ; preds = %entry
  %14 = load ptr, ptr %list.addr, align 8, !dbg !7146, !tbaa !1461
  %15 = load ptr, ptr %x.addr, align 8, !dbg !7147, !tbaa !1461
  %call11 = call i32 @PyList_Append(ptr noundef %14, ptr noundef %15), !dbg !7148
  store i32 %call11, ptr %retval, align 4, !dbg !7149
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7149

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %len) #10, !dbg !7150
  call void @llvm.lifetime.end.p0(i64 8, ptr %L) #10, !dbg !7150
  %16 = load i32, ptr %retval, align 4, !dbg !7150
  ret i32 %16, !dbg !7150
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallOneArg(ptr noundef %func, ptr noundef %arg) #3 !dbg !7151 {
entry:
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %args = alloca [2 x ptr], align 16
  store ptr %func, ptr %func.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !7153, metadata !DIExpression()), !dbg !7156
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !7154, metadata !DIExpression()), !dbg !7157
  call void @llvm.lifetime.start.p0(i64 16, ptr %args) #10, !dbg !7158
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !7155, metadata !DIExpression()), !dbg !7159
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %args, i64 0, i64 0, !dbg !7160
  store ptr null, ptr %arrayinit.begin, align 8, !dbg !7160, !tbaa !1461
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !7160
  %0 = load ptr, ptr %arg.addr, align 8, !dbg !7161, !tbaa !1461
  store ptr %0, ptr %arrayinit.element, align 8, !dbg !7160, !tbaa !1461
  %1 = load ptr, ptr %func.addr, align 8, !dbg !7162, !tbaa !1461
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %args, i64 0, i64 0, !dbg !7162
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !7162
  %call = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %1, ptr noundef %add.ptr, i64 noundef -9223372036854775807, ptr noundef null), !dbg !7162
  call void @llvm.lifetime.end.p0(i64 16, ptr %args) #10, !dbg !7163
  ret ptr %call, !dbg !7164
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @PyTuple_SET_ITEM(ptr noundef %op, i64 noundef %index, ptr noundef %value) #3 !dbg !7165 {
entry:
  %op.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca ptr, align 8
  %tuple = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !7169, metadata !DIExpression()), !dbg !7173
  store i64 %index, ptr %index.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !7170, metadata !DIExpression()), !dbg !7174
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !7171, metadata !DIExpression()), !dbg !7175
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #10, !dbg !7176
  tail call void @llvm.dbg.declare(metadata ptr %tuple, metadata !7172, metadata !DIExpression()), !dbg !7177
  %0 = load ptr, ptr %op.addr, align 8, !dbg !7178, !tbaa !1461
  store ptr %0, ptr %tuple, align 8, !dbg !7177, !tbaa !1461
  %1 = load ptr, ptr %value.addr, align 8, !dbg !7179, !tbaa !1461
  %2 = load ptr, ptr %tuple, align 8, !dbg !7180, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %2, i32 0, i32 1, !dbg !7181
  %3 = load i64, ptr %index.addr, align 8, !dbg !7182, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %3, !dbg !7180
  store ptr %1, ptr %arrayidx, align 8, !dbg !7183, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #10, !dbg !7184
  ret void, !dbg !7184
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyDict_GetItemDefault(ptr noundef %d, ptr noundef %key, ptr noundef %default_value) #0 !dbg !7185 {
entry:
  %retval = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %key.addr = alloca ptr, align 8
  %default_value.addr = alloca ptr, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %d, ptr %d.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %d.addr, metadata !7187, metadata !DIExpression()), !dbg !7191
  store ptr %key, ptr %key.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !7188, metadata !DIExpression()), !dbg !7192
  store ptr %default_value, ptr %default_value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %default_value.addr, metadata !7189, metadata !DIExpression()), !dbg !7193
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #10, !dbg !7194
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !7190, metadata !DIExpression()), !dbg !7195
  %0 = load ptr, ptr %d.addr, align 8, !dbg !7196, !tbaa !1461
  %1 = load ptr, ptr %key.addr, align 8, !dbg !7197, !tbaa !1461
  %call = call ptr @PyDict_GetItemWithError(ptr noundef %0, ptr noundef %1), !dbg !7198
  store ptr %call, ptr %value, align 8, !dbg !7199, !tbaa !1461
  %2 = load ptr, ptr %value, align 8, !dbg !7200, !tbaa !1461
  %tobool = icmp ne ptr %2, null, !dbg !7200
  %lnot = xor i1 %tobool, true, !dbg !7200
  %lnot1 = xor i1 %lnot, true, !dbg !7200
  %lnot2 = xor i1 %lnot1, true, !dbg !7200
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7200
  %conv = sext i32 %lnot.ext to i64, !dbg !7200
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7200
  %tobool3 = icmp ne i64 %expval, 0, !dbg !7200
  br i1 %tobool3, label %if.then, label %if.end14, !dbg !7202

if.then:                                          ; preds = %entry
  %call4 = call ptr @PyErr_Occurred(), !dbg !7203
  %tobool5 = icmp ne ptr %call4, null, !dbg !7203
  %lnot6 = xor i1 %tobool5, true, !dbg !7203
  %lnot8 = xor i1 %lnot6, true, !dbg !7203
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !7203
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !7203
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !7203
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !7203
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !7206

if.then13:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8, !dbg !7207
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7207

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr %default_value.addr, align 8, !dbg !7208, !tbaa !1461
  store ptr %3, ptr %value, align 8, !dbg !7209, !tbaa !1461
  br label %if.end14, !dbg !7210

if.end14:                                         ; preds = %if.end, %entry
  %4 = load ptr, ptr %value, align 8, !dbg !7211, !tbaa !1461
  call void @Py_INCREF(ptr noundef %4), !dbg !7211
  %5 = load ptr, ptr %value, align 8, !dbg !7212, !tbaa !1461
  store ptr %5, ptr %retval, align 8, !dbg !7213
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7213

cleanup:                                          ; preds = %if.end14, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #10, !dbg !7214
  %6 = load ptr, ptr %retval, align 8, !dbg !7214
  ret ptr %6, !dbg !7214
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyInt_AddObjC(ptr noundef %op1, ptr noundef %op2, i64 noundef %intval, i32 noundef %inplace, i32 noundef %zerodivision_check) #0 !dbg !7215 {
entry:
  %retval = alloca ptr, align 8
  %op1.addr = alloca ptr, align 8
  %op2.addr = alloca ptr, align 8
  %intval.addr = alloca i64, align 8
  %inplace.addr = alloca i32, align 4
  %zerodivision_check.addr = alloca i32, align 4
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %x = alloca i64, align 8
  %llb = alloca i64, align 8
  %lla = alloca i64, align 8
  %llx = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %digits = alloca ptr, align 8
  %size = alloca i64, align 8
  %b77 = alloca i64, align 8
  %a78 = alloca double, align 8
  %result = alloca double, align 8
  store ptr %op1, ptr %op1.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op1.addr, metadata !7219, metadata !DIExpression()), !dbg !7247
  store ptr %op2, ptr %op2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op2.addr, metadata !7220, metadata !DIExpression()), !dbg !7248
  store i64 %intval, ptr %intval.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %intval.addr, metadata !7221, metadata !DIExpression()), !dbg !7249
  store i32 %inplace, ptr %inplace.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %inplace.addr, metadata !7222, metadata !DIExpression()), !dbg !7250
  store i32 %zerodivision_check, ptr %zerodivision_check.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %zerodivision_check.addr, metadata !7223, metadata !DIExpression()), !dbg !7251
  %0 = load i64, ptr %intval.addr, align 8, !dbg !7252, !tbaa !1836
  %1 = load i32, ptr %inplace.addr, align 4, !dbg !7253, !tbaa !1557
  %2 = load i32, ptr %zerodivision_check.addr, align 4, !dbg !7254, !tbaa !1557
  %3 = load ptr, ptr %op1.addr, align 8, !dbg !7255, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %3, ptr noundef @PyLong_Type), !dbg !7255
  %tobool = icmp ne i32 %call, 0, !dbg !7255
  %lnot = xor i1 %tobool, true, !dbg !7255
  %lnot1 = xor i1 %lnot, true, !dbg !7255
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7255
  %conv = sext i32 %lnot.ext to i64, !dbg !7255
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !7255
  %tobool2 = icmp ne i64 %expval, 0, !dbg !7255
  br i1 %tobool2, label %if.then, label %if.end73, !dbg !7256

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #10, !dbg !7257
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !7224, metadata !DIExpression()), !dbg !7258
  %4 = load i64, ptr %intval.addr, align 8, !dbg !7259, !tbaa !1836
  store i64 %4, ptr %b, align 8, !dbg !7258, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #10, !dbg !7260
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !7228, metadata !DIExpression()), !dbg !7261
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #10, !dbg !7260
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !7229, metadata !DIExpression()), !dbg !7262
  call void @llvm.lifetime.start.p0(i64 8, ptr %llb) #10, !dbg !7263
  tail call void @llvm.dbg.declare(metadata ptr %llb, metadata !7230, metadata !DIExpression()), !dbg !7264
  %5 = load i64, ptr %intval.addr, align 8, !dbg !7265, !tbaa !1836
  store i64 %5, ptr %llb, align 8, !dbg !7264, !tbaa !7266
  call void @llvm.lifetime.start.p0(i64 8, ptr %lla) #10, !dbg !7268
  tail call void @llvm.dbg.declare(metadata ptr %lla, metadata !7233, metadata !DIExpression()), !dbg !7269
  call void @llvm.lifetime.start.p0(i64 8, ptr %llx) #10, !dbg !7268
  tail call void @llvm.dbg.declare(metadata ptr %llx, metadata !7234, metadata !DIExpression()), !dbg !7270
  %6 = load ptr, ptr %op1.addr, align 8, !dbg !7271, !tbaa !1461
  %call3 = call i64 @Py_SIZE(ptr noundef %6), !dbg !7271
  %cmp = icmp eq i64 %call3, 0, !dbg !7271
  %lnot5 = xor i1 %cmp, true, !dbg !7271
  %lnot7 = xor i1 %lnot5, true, !dbg !7271
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7271
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7271
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !7271
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !7271
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !7273

if.then12:                                        ; preds = %if.then
  %7 = load ptr, ptr %op2.addr, align 8, !dbg !7274, !tbaa !1461
  call void @Py_INCREF(ptr noundef %7), !dbg !7274
  %8 = load ptr, ptr %op2.addr, align 8, !dbg !7274, !tbaa !1461
  store ptr %8, ptr %retval, align 8, !dbg !7276
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !7276

if.end:                                           ; preds = %if.then
  %9 = load ptr, ptr %op1.addr, align 8, !dbg !7277, !tbaa !1461
  %call13 = call i64 @Py_SIZE(ptr noundef %9), !dbg !7277
  %cmp14 = icmp eq i64 %call13, 0, !dbg !7277
  br i1 %cmp14, label %lor.end, label %lor.lhs.false, !dbg !7277

lor.lhs.false:                                    ; preds = %if.end
  %10 = load ptr, ptr %op1.addr, align 8, !dbg !7277, !tbaa !1461
  %call16 = call i64 @Py_SIZE(ptr noundef %10), !dbg !7277
  %cmp17 = icmp eq i64 %call16, 1, !dbg !7277
  br i1 %cmp17, label %lor.end, label %lor.rhs, !dbg !7277

lor.rhs:                                          ; preds = %lor.lhs.false
  %11 = load ptr, ptr %op1.addr, align 8, !dbg !7277, !tbaa !1461
  %call19 = call i64 @Py_SIZE(ptr noundef %11), !dbg !7277
  %cmp20 = icmp eq i64 %call19, -1, !dbg !7277
  br label %lor.end, !dbg !7277

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end
  %12 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end ], [ %cmp20, %lor.rhs ]
  %lnot22 = xor i1 %12, true, !dbg !7277
  %lnot24 = xor i1 %lnot22, true, !dbg !7277
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7277
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !7277
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 1), !dbg !7277
  %tobool28 = icmp ne i64 %expval27, 0, !dbg !7277
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !7278

if.then29:                                        ; preds = %lor.end
  %13 = load ptr, ptr %op1.addr, align 8, !dbg !7279, !tbaa !1461
  %call30 = call i64 @Py_SIZE(ptr noundef %13), !dbg !7279
  %cmp31 = icmp eq i64 %call30, 0, !dbg !7279
  br i1 %cmp31, label %cond.true, label %cond.false, !dbg !7279

cond.true:                                        ; preds = %if.then29
  br label %cond.end40, !dbg !7279

cond.false:                                       ; preds = %if.then29
  %14 = load ptr, ptr %op1.addr, align 8, !dbg !7279, !tbaa !1461
  %call33 = call i64 @Py_SIZE(ptr noundef %14), !dbg !7279
  %cmp34 = icmp slt i64 %call33, 0, !dbg !7279
  br i1 %cmp34, label %cond.true36, label %cond.false37, !dbg !7279

cond.true36:                                      ; preds = %cond.false
  %15 = load ptr, ptr %op1.addr, align 8, !dbg !7279, !tbaa !1461
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %15, i32 0, i32 1, !dbg !7279
  %arrayidx = getelementptr [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !7279
  %16 = load i32, ptr %arrayidx, align 8, !dbg !7279, !tbaa !1557
  %sub = sub i32 0, %16, !dbg !7279
  br label %cond.end, !dbg !7279

cond.false37:                                     ; preds = %cond.false
  %17 = load ptr, ptr %op1.addr, align 8, !dbg !7279, !tbaa !1461
  %ob_digit38 = getelementptr inbounds %struct._longobject, ptr %17, i32 0, i32 1, !dbg !7279
  %arrayidx39 = getelementptr [1 x i32], ptr %ob_digit38, i64 0, i64 0, !dbg !7279
  %18 = load i32, ptr %arrayidx39, align 8, !dbg !7279, !tbaa !1557
  br label %cond.end, !dbg !7279

cond.end:                                         ; preds = %cond.false37, %cond.true36
  %cond = phi i32 [ %sub, %cond.true36 ], [ %18, %cond.false37 ], !dbg !7279
  br label %cond.end40, !dbg !7279

cond.end40:                                       ; preds = %cond.end, %cond.true
  %cond41 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !7279
  %conv42 = sext i32 %cond41 to i64, !dbg !7279
  store i64 %conv42, ptr %a, align 8, !dbg !7281, !tbaa !1836
  br label %if.end63, !dbg !7282

if.else:                                          ; preds = %lor.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #10, !dbg !7283
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !7235, metadata !DIExpression()), !dbg !7284
  %19 = load ptr, ptr %op1.addr, align 8, !dbg !7285, !tbaa !1461
  %ob_digit43 = getelementptr inbounds %struct._longobject, ptr %19, i32 0, i32 1, !dbg !7285
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit43, i64 0, i64 0, !dbg !7285
  store ptr %arraydecay, ptr %digits, align 8, !dbg !7284, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !7286
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !7240, metadata !DIExpression()), !dbg !7287
  %20 = load ptr, ptr %op1.addr, align 8, !dbg !7288, !tbaa !1461
  %call44 = call i64 @Py_SIZE(ptr noundef %20), !dbg !7288
  store i64 %call44, ptr %size, align 8, !dbg !7287, !tbaa !1836
  %21 = load i64, ptr %size, align 8, !dbg !7289, !tbaa !1836
  switch i64 %21, label %sw.default [
    i64 -2, label %sw.bb
    i64 2, label %sw.bb50
    i64 -3, label %sw.bb57
    i64 3, label %sw.bb58
    i64 -4, label %sw.bb59
    i64 4, label %sw.bb60
  ], !dbg !7290

sw.bb:                                            ; preds = %if.else
  %22 = load ptr, ptr %digits, align 8, !dbg !7291, !tbaa !1461
  %arrayidx45 = getelementptr i32, ptr %22, i64 1, !dbg !7291
  %23 = load i32, ptr %arrayidx45, align 4, !dbg !7291, !tbaa !1557
  %conv46 = zext i32 %23 to i64, !dbg !7295
  %shl = shl i64 %conv46, 30, !dbg !7296
  %24 = load ptr, ptr %digits, align 8, !dbg !7297, !tbaa !1461
  %arrayidx47 = getelementptr i32, ptr %24, i64 0, !dbg !7297
  %25 = load i32, ptr %arrayidx47, align 4, !dbg !7297, !tbaa !1557
  %conv48 = zext i32 %25 to i64, !dbg !7298
  %or = or i64 %shl, %conv48, !dbg !7299
  %sub49 = sub i64 0, %or, !dbg !7300
  store i64 %sub49, ptr %a, align 8, !dbg !7301, !tbaa !1836
  br label %sw.epilog, !dbg !7302

sw.bb50:                                          ; preds = %if.else
  %26 = load ptr, ptr %digits, align 8, !dbg !7303, !tbaa !1461
  %arrayidx51 = getelementptr i32, ptr %26, i64 1, !dbg !7303
  %27 = load i32, ptr %arrayidx51, align 4, !dbg !7303, !tbaa !1557
  %conv52 = zext i32 %27 to i64, !dbg !7306
  %shl53 = shl i64 %conv52, 30, !dbg !7307
  %28 = load ptr, ptr %digits, align 8, !dbg !7308, !tbaa !1461
  %arrayidx54 = getelementptr i32, ptr %28, i64 0, !dbg !7308
  %29 = load i32, ptr %arrayidx54, align 4, !dbg !7308, !tbaa !1557
  %conv55 = zext i32 %29 to i64, !dbg !7309
  %or56 = or i64 %shl53, %conv55, !dbg !7310
  store i64 %or56, ptr %a, align 8, !dbg !7311, !tbaa !1836
  br label %sw.epilog, !dbg !7312

sw.bb57:                                          ; preds = %if.else
  br label %sw.bb58, !dbg !7313

sw.bb58:                                          ; preds = %if.else, %sw.bb57
  br label %sw.bb59, !dbg !7315

sw.bb59:                                          ; preds = %if.else, %sw.bb58
  br label %sw.bb60, !dbg !7317

sw.bb60:                                          ; preds = %if.else, %sw.bb59
  br label %sw.default, !dbg !7319

sw.default:                                       ; preds = %if.else, %sw.bb60
  %30 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 10), align 8, !dbg !7321, !tbaa !7322
  %nb_add = getelementptr inbounds %struct.PyNumberMethods, ptr %30, i32 0, i32 0, !dbg !7323
  %31 = load ptr, ptr %nb_add, align 8, !dbg !7323, !tbaa !7324
  %32 = load ptr, ptr %op1.addr, align 8, !dbg !7326, !tbaa !1461
  %33 = load ptr, ptr %op2.addr, align 8, !dbg !7327, !tbaa !1461
  %call61 = call ptr %31(ptr noundef %32, ptr noundef %33), !dbg !7328
  store ptr %call61, ptr %retval, align 8, !dbg !7329
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7329

sw.epilog:                                        ; preds = %sw.bb50, %sw.bb
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7330
  br label %cleanup, !dbg !7330

cleanup:                                          ; preds = %sw.epilog, %sw.default
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !7330
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #10, !dbg !7330
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup67 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end63

if.end63:                                         ; preds = %cleanup.cont, %cond.end40
  %34 = load i64, ptr %a, align 8, !dbg !7331, !tbaa !1836
  %35 = load i64, ptr %b, align 8, !dbg !7332, !tbaa !1836
  %add = add i64 %34, %35, !dbg !7333
  store i64 %add, ptr %x, align 8, !dbg !7334, !tbaa !1836
  %36 = load i64, ptr %x, align 8, !dbg !7335, !tbaa !1836
  %call64 = call ptr @PyLong_FromLong(i64 noundef %36), !dbg !7336
  store ptr %call64, ptr %retval, align 8, !dbg !7337
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !7337

long_long:                                        ; No predecessors!
  tail call void @llvm.dbg.label(metadata !7241), !dbg !7338
  %37 = load i64, ptr %lla, align 8, !dbg !7339, !tbaa !7266
  %38 = load i64, ptr %llb, align 8, !dbg !7340, !tbaa !7266
  %add65 = add i64 %37, %38, !dbg !7341
  store i64 %add65, ptr %llx, align 8, !dbg !7342, !tbaa !7266
  %39 = load i64, ptr %llx, align 8, !dbg !7343, !tbaa !7266
  %call66 = call ptr @PyLong_FromLongLong(i64 noundef %39), !dbg !7344
  store ptr %call66, ptr %retval, align 8, !dbg !7345
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !7345

cleanup67:                                        ; preds = %long_long, %if.end63, %cleanup, %if.then12
  call void @llvm.lifetime.end.p0(i64 8, ptr %llx) #10, !dbg !7346
  call void @llvm.lifetime.end.p0(i64 8, ptr %lla) #10, !dbg !7346
  call void @llvm.lifetime.end.p0(i64 8, ptr %llb) #10, !dbg !7346
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #10, !dbg !7346
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #10, !dbg !7346
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #10, !dbg !7346
  br label %return

if.end73:                                         ; preds = %entry
  %40 = load ptr, ptr %op1.addr, align 8, !dbg !7347, !tbaa !1461
  %call74 = call i32 @Py_IS_TYPE(ptr noundef %40, ptr noundef @PyFloat_Type), !dbg !7347
  %tobool75 = icmp ne i32 %call74, 0, !dbg !7347
  br i1 %tobool75, label %if.then76, label %if.end85, !dbg !7348

if.then76:                                        ; preds = %if.end73
  call void @llvm.lifetime.start.p0(i64 8, ptr %b77) #10, !dbg !7349
  tail call void @llvm.dbg.declare(metadata ptr %b77, metadata !7242, metadata !DIExpression()), !dbg !7350
  %41 = load i64, ptr %intval.addr, align 8, !dbg !7351, !tbaa !1836
  store i64 %41, ptr %b77, align 8, !dbg !7350, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %a78) #10, !dbg !7352
  tail call void @llvm.dbg.declare(metadata ptr %a78, metadata !7245, metadata !DIExpression()), !dbg !7353
  %42 = load ptr, ptr %op1.addr, align 8, !dbg !7354, !tbaa !1461
  %ob_fval = getelementptr inbounds %struct.PyFloatObject, ptr %42, i32 0, i32 1, !dbg !7354
  %43 = load double, ptr %ob_fval, align 8, !dbg !7354, !tbaa !7355
  store double %43, ptr %a78, align 8, !dbg !7353, !tbaa !7358
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !7359
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !7246, metadata !DIExpression()), !dbg !7360
  %44 = load double, ptr %a78, align 8, !dbg !7361, !tbaa !7358
  %45 = load i64, ptr %b77, align 8, !dbg !7362, !tbaa !1836
  %conv79 = sitofp i64 %45 to double, !dbg !7363
  %add80 = fadd double %44, %conv79, !dbg !7364
  store double %add80, ptr %result, align 8, !dbg !7365, !tbaa !7358
  %46 = load double, ptr %result, align 8, !dbg !7366, !tbaa !7358
  %call81 = call ptr @PyFloat_FromDouble(double noundef %46), !dbg !7367
  store ptr %call81, ptr %retval, align 8, !dbg !7368
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !7369
  call void @llvm.lifetime.end.p0(i64 8, ptr %a78) #10, !dbg !7369
  call void @llvm.lifetime.end.p0(i64 8, ptr %b77) #10, !dbg !7369
  br label %return

if.end85:                                         ; preds = %if.end73
  %47 = load i32, ptr %inplace.addr, align 4, !dbg !7370, !tbaa !1557
  %tobool86 = icmp ne i32 %47, 0, !dbg !7370
  %48 = zext i1 %tobool86 to i64, !dbg !7370
  %cond87 = select i1 %tobool86, ptr @PyNumber_InPlaceAdd, ptr @PyNumber_Add, !dbg !7370
  %49 = load ptr, ptr %op1.addr, align 8, !dbg !7371, !tbaa !1461
  %50 = load ptr, ptr %op2.addr, align 8, !dbg !7372, !tbaa !1461
  %call88 = call ptr %cond87(ptr noundef %49, ptr noundef %50), !dbg !7373
  store ptr %call88, ptr %retval, align 8, !dbg !7374
  br label %return, !dbg !7374

return:                                           ; preds = %if.end85, %if.then76, %cleanup67
  %51 = load ptr, ptr %retval, align 8, !dbg !7375
  ret ptr %51, !dbg !7375
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyObject_Append(ptr noundef %L, ptr noundef %x) #3 !dbg !7376 {
entry:
  %retval = alloca i32, align 4
  %L.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %retval13 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %L, ptr %L.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %L.addr, metadata !7378, metadata !DIExpression()), !dbg !7383
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !7379, metadata !DIExpression()), !dbg !7384
  %0 = load ptr, ptr %L.addr, align 8, !dbg !7385, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %0, ptr noundef @PyList_Type), !dbg !7385
  %tobool = icmp ne i32 %call, 0, !dbg !7385
  %lnot = xor i1 %tobool, true, !dbg !7385
  %lnot1 = xor i1 %lnot, true, !dbg !7385
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7385
  %conv = sext i32 %lnot.ext to i64, !dbg !7385
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !7385
  %tobool2 = icmp ne i64 %expval, 0, !dbg !7385
  br i1 %tobool2, label %if.then, label %if.else, !dbg !7386

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %L.addr, align 8, !dbg !7387, !tbaa !1461
  %2 = load ptr, ptr %x.addr, align 8, !dbg !7387, !tbaa !1461
  %call3 = call i32 @__Pyx_PyList_Append(ptr noundef %1, ptr noundef %2), !dbg !7387
  %cmp = icmp slt i32 %call3, 0, !dbg !7387
  %lnot5 = xor i1 %cmp, true, !dbg !7387
  %lnot7 = xor i1 %lnot5, true, !dbg !7387
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7387
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7387
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !7387
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !7387
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !7390

if.then12:                                        ; preds = %if.then
  store i32 -1, ptr %retval, align 4, !dbg !7391
  br label %return, !dbg !7391

if.end:                                           ; preds = %if.then
  br label %if.end27, !dbg !7392

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %retval13) #10, !dbg !7393
  tail call void @llvm.dbg.declare(metadata ptr %retval13, metadata !7380, metadata !DIExpression()), !dbg !7394
  %3 = load ptr, ptr %L.addr, align 8, !dbg !7395, !tbaa !1461
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7396, !tbaa !1461
  %__pyx_n_s_append = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 26, !dbg !7396
  %5 = load ptr, ptr %__pyx_n_s_append, align 8, !dbg !7396, !tbaa !7397
  %6 = load ptr, ptr %x.addr, align 8, !dbg !7398, !tbaa !1461
  %call14 = call ptr @__Pyx_PyObject_CallMethod1(ptr noundef %3, ptr noundef %5, ptr noundef %6), !dbg !7399
  store ptr %call14, ptr %retval13, align 8, !dbg !7394, !tbaa !1461
  %7 = load ptr, ptr %retval13, align 8, !dbg !7400, !tbaa !1461
  %tobool15 = icmp ne ptr %7, null, !dbg !7400
  %lnot16 = xor i1 %tobool15, true, !dbg !7400
  %lnot18 = xor i1 %lnot16, true, !dbg !7400
  %lnot20 = xor i1 %lnot18, true, !dbg !7400
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !7400
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !7400
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0), !dbg !7400
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !7400
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !7402

if.then25:                                        ; preds = %if.else
  store i32 -1, ptr %retval, align 4, !dbg !7403
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7403

if.end26:                                         ; preds = %if.else
  %8 = load ptr, ptr %retval13, align 8, !dbg !7404, !tbaa !1461
  call void @Py_DECREF(ptr noundef %8), !dbg !7404
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7405
  br label %cleanup, !dbg !7405

cleanup:                                          ; preds = %if.end26, %if.then25
  call void @llvm.lifetime.end.p0(i64 8, ptr %retval13) #10, !dbg !7405
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end27

if.end27:                                         ; preds = %cleanup.cont, %if.end
  store i32 0, ptr %retval, align 4, !dbg !7406
  br label %return, !dbg !7406

return:                                           ; preds = %if.end27, %cleanup, %if.then12
  %9 = load i32, ptr %retval, align 4, !dbg !7407
  ret i32 %9, !dbg !7407

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !7408 ptr @_PyDict_GetItem_KnownHash(ptr noundef, ptr noundef, i64 noundef) #1

declare !dbg !7411 ptr @PyObject_RichCompare(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyObject_IsTrue(ptr noundef %x) #3 !dbg !7412 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca ptr, align 8
  %is_true = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !7414, metadata !DIExpression()), !dbg !7416
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_true) #10, !dbg !7417
  tail call void @llvm.dbg.declare(metadata ptr %is_true, metadata !7415, metadata !DIExpression()), !dbg !7418
  %0 = load ptr, ptr %x.addr, align 8, !dbg !7419, !tbaa !1461
  %cmp = icmp eq ptr %0, @_Py_TrueStruct, !dbg !7420
  %conv = zext i1 %cmp to i32, !dbg !7420
  store i32 %conv, ptr %is_true, align 4, !dbg !7418, !tbaa !1557
  %1 = load i32, ptr %is_true, align 4, !dbg !7421, !tbaa !1557
  %2 = load ptr, ptr %x.addr, align 8, !dbg !7423, !tbaa !1461
  %cmp1 = icmp eq ptr %2, @_Py_FalseStruct, !dbg !7424
  %conv2 = zext i1 %cmp1 to i32, !dbg !7424
  %or = or i32 %1, %conv2, !dbg !7425
  %3 = load ptr, ptr %x.addr, align 8, !dbg !7426, !tbaa !1461
  %cmp3 = icmp eq ptr %3, @_Py_NoneStruct, !dbg !7427
  %conv4 = zext i1 %cmp3 to i32, !dbg !7427
  %or5 = or i32 %or, %conv4, !dbg !7428
  %tobool = icmp ne i32 %or5, 0, !dbg !7428
  br i1 %tobool, label %if.then, label %if.else, !dbg !7429

if.then:                                          ; preds = %entry
  %4 = load i32, ptr %is_true, align 4, !dbg !7430, !tbaa !1557
  store i32 %4, ptr %retval, align 4, !dbg !7431
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7431

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %x.addr, align 8, !dbg !7432, !tbaa !1461
  %call = call i32 @PyObject_IsTrue(ptr noundef %5), !dbg !7433
  store i32 %call, ptr %retval, align 4, !dbg !7434
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7434

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_true) #10, !dbg !7435
  %6 = load i32, ptr %retval, align 4, !dbg !7435
  ret i32 %6, !dbg !7435
}

declare !dbg !7436 i32 @PyObject_IsTrue(ptr noundef) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

declare !dbg !7437 ptr @PyUnicode_FromOrdinal(i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyUnicode_BuildFromAscii(i64 noundef %ulength, ptr noundef %chars, i32 noundef %clength, i32 noundef %prepend_sign, i8 noundef signext %padding_char) #0 !dbg !7440 {
entry:
  %retval = alloca ptr, align 8
  %ulength.addr = alloca i64, align 8
  %chars.addr = alloca ptr, align 8
  %clength.addr = alloca i32, align 4
  %prepend_sign.addr = alloca i32, align 4
  %padding_char.addr = alloca i8, align 1
  %uval = alloca ptr, align 8
  %uoffset = alloca i64, align 8
  %i = alloca i64, align 8
  %udata = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %ulength, ptr %ulength.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %ulength.addr, metadata !7444, metadata !DIExpression()), !dbg !7453
  store ptr %chars, ptr %chars.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %chars.addr, metadata !7445, metadata !DIExpression()), !dbg !7454
  store i32 %clength, ptr %clength.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %clength.addr, metadata !7446, metadata !DIExpression()), !dbg !7455
  store i32 %prepend_sign, ptr %prepend_sign.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %prepend_sign.addr, metadata !7447, metadata !DIExpression()), !dbg !7456
  store i8 %padding_char, ptr %padding_char.addr, align 1, !tbaa !6963
  tail call void @llvm.dbg.declare(metadata ptr %padding_char.addr, metadata !7448, metadata !DIExpression()), !dbg !7457
  call void @llvm.lifetime.start.p0(i64 8, ptr %uval) #10, !dbg !7458
  tail call void @llvm.dbg.declare(metadata ptr %uval, metadata !7449, metadata !DIExpression()), !dbg !7459
  call void @llvm.lifetime.start.p0(i64 8, ptr %uoffset) #10, !dbg !7460
  tail call void @llvm.dbg.declare(metadata ptr %uoffset, metadata !7450, metadata !DIExpression()), !dbg !7461
  %0 = load i64, ptr %ulength.addr, align 8, !dbg !7462, !tbaa !1836
  %1 = load i32, ptr %clength.addr, align 4, !dbg !7463, !tbaa !1557
  %conv = sext i32 %1 to i64, !dbg !7463
  %sub = sub i64 %0, %conv, !dbg !7464
  store i64 %sub, ptr %uoffset, align 8, !dbg !7461, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !7465
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !7451, metadata !DIExpression()), !dbg !7466
  call void @llvm.lifetime.start.p0(i64 8, ptr %udata) #10, !dbg !7467
  tail call void @llvm.dbg.declare(metadata ptr %udata, metadata !7452, metadata !DIExpression()), !dbg !7468
  %2 = load i64, ptr %ulength.addr, align 8, !dbg !7469, !tbaa !1836
  %call = call ptr @PyUnicode_New(i64 noundef %2, i32 noundef 127), !dbg !7470
  store ptr %call, ptr %uval, align 8, !dbg !7471, !tbaa !1461
  %3 = load ptr, ptr %uval, align 8, !dbg !7472, !tbaa !1461
  %tobool = icmp ne ptr %3, null, !dbg !7472
  %lnot = xor i1 %tobool, true, !dbg !7472
  %lnot1 = xor i1 %lnot, true, !dbg !7472
  %lnot2 = xor i1 %lnot1, true, !dbg !7472
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7472
  %conv3 = sext i32 %lnot.ext to i64, !dbg !7472
  %expval = call i64 @llvm.expect.i64(i64 %conv3, i64 0), !dbg !7472
  %tobool4 = icmp ne i64 %expval, 0, !dbg !7472
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7474

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !7475
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7475

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %uval, align 8, !dbg !7476, !tbaa !1461
  %call5 = call ptr @PyUnicode_DATA(ptr noundef %4), !dbg !7476
  store ptr %call5, ptr %udata, align 8, !dbg !7477, !tbaa !1461
  %5 = load i64, ptr %uoffset, align 8, !dbg !7478, !tbaa !1836
  %cmp = icmp sgt i64 %5, 0, !dbg !7480
  br i1 %cmp, label %if.then7, label %if.end15, !dbg !7481

if.then7:                                         ; preds = %if.end
  store i64 0, ptr %i, align 8, !dbg !7482, !tbaa !1836
  %6 = load i32, ptr %prepend_sign.addr, align 4, !dbg !7484, !tbaa !1557
  %tobool8 = icmp ne i32 %6, 0, !dbg !7484
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7486

if.then9:                                         ; preds = %if.then7
  %7 = load ptr, ptr %udata, align 8, !dbg !7487, !tbaa !1461
  call void @PyUnicode_WRITE(i32 noundef 1, ptr noundef %7, i64 noundef 0, i32 noundef 45), !dbg !7487
  %8 = load i64, ptr %i, align 8, !dbg !7489, !tbaa !1836
  %inc = add i64 %8, 1, !dbg !7489
  store i64 %inc, ptr %i, align 8, !dbg !7489, !tbaa !1836
  br label %if.end10, !dbg !7490

if.end10:                                         ; preds = %if.then9, %if.then7
  br label %for.cond, !dbg !7491

for.cond:                                         ; preds = %for.inc, %if.end10
  %9 = load i64, ptr %i, align 8, !dbg !7492, !tbaa !1836
  %10 = load i64, ptr %uoffset, align 8, !dbg !7495, !tbaa !1836
  %cmp11 = icmp slt i64 %9, %10, !dbg !7496
  br i1 %cmp11, label %for.body, label %for.end, !dbg !7497

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %udata, align 8, !dbg !7498, !tbaa !1461
  %12 = load i64, ptr %i, align 8, !dbg !7498, !tbaa !1836
  %13 = load i8, ptr %padding_char.addr, align 1, !dbg !7498, !tbaa !6963
  %conv13 = sext i8 %13 to i32, !dbg !7498
  call void @PyUnicode_WRITE(i32 noundef 1, ptr noundef %11, i64 noundef %12, i32 noundef %conv13), !dbg !7498
  br label %for.inc, !dbg !7500

for.inc:                                          ; preds = %for.body
  %14 = load i64, ptr %i, align 8, !dbg !7501, !tbaa !1836
  %inc14 = add i64 %14, 1, !dbg !7501
  store i64 %inc14, ptr %i, align 8, !dbg !7501, !tbaa !1836
  br label %for.cond, !dbg !7502, !llvm.loop !7503

for.end:                                          ; preds = %for.cond
  br label %if.end15, !dbg !7505

if.end15:                                         ; preds = %for.end, %if.end
  store i64 0, ptr %i, align 8, !dbg !7506, !tbaa !1836
  br label %for.cond16, !dbg !7508

for.cond16:                                       ; preds = %for.inc22, %if.end15
  %15 = load i64, ptr %i, align 8, !dbg !7509, !tbaa !1836
  %16 = load i32, ptr %clength.addr, align 4, !dbg !7511, !tbaa !1557
  %conv17 = sext i32 %16 to i64, !dbg !7511
  %cmp18 = icmp slt i64 %15, %conv17, !dbg !7512
  br i1 %cmp18, label %for.body20, label %for.end24, !dbg !7513

for.body20:                                       ; preds = %for.cond16
  %17 = load ptr, ptr %udata, align 8, !dbg !7514, !tbaa !1461
  %18 = load i64, ptr %uoffset, align 8, !dbg !7514, !tbaa !1836
  %19 = load i64, ptr %i, align 8, !dbg !7514, !tbaa !1836
  %add = add i64 %18, %19, !dbg !7514
  %20 = load ptr, ptr %chars.addr, align 8, !dbg !7514, !tbaa !1461
  %21 = load i64, ptr %i, align 8, !dbg !7514, !tbaa !1836
  %arrayidx = getelementptr i8, ptr %20, i64 %21, !dbg !7514
  %22 = load i8, ptr %arrayidx, align 1, !dbg !7514, !tbaa !6963
  %conv21 = sext i8 %22 to i32, !dbg !7514
  call void @PyUnicode_WRITE(i32 noundef 1, ptr noundef %17, i64 noundef %add, i32 noundef %conv21), !dbg !7514
  br label %for.inc22, !dbg !7516

for.inc22:                                        ; preds = %for.body20
  %23 = load i64, ptr %i, align 8, !dbg !7517, !tbaa !1836
  %inc23 = add i64 %23, 1, !dbg !7517
  store i64 %inc23, ptr %i, align 8, !dbg !7517, !tbaa !1836
  br label %for.cond16, !dbg !7518, !llvm.loop !7519

for.end24:                                        ; preds = %for.cond16
  %24 = load ptr, ptr %uval, align 8, !dbg !7521, !tbaa !1461
  store ptr %24, ptr %retval, align 8, !dbg !7522
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7522

cleanup:                                          ; preds = %for.end24, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %udata) #10, !dbg !7523
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !7523
  call void @llvm.lifetime.end.p0(i64 8, ptr %uoffset) #10, !dbg !7523
  call void @llvm.lifetime.end.p0(i64 8, ptr %uval) #10, !dbg !7523
  %25 = load ptr, ptr %retval, align 8, !dbg !7523
  ret ptr %25, !dbg !7523
}

declare !dbg !7524 ptr @PyUnicode_New(i64 noundef, i32 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @PyUnicode_DATA(ptr noundef %op) #3 !dbg !7527 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !7531, metadata !DIExpression()), !dbg !7532
  %0 = load ptr, ptr %op.addr, align 8, !dbg !7533, !tbaa !1461
  %call = call i32 @PyUnicode_IS_COMPACT(ptr noundef %0), !dbg !7533
  %tobool = icmp ne i32 %call, 0, !dbg !7533
  br i1 %tobool, label %if.then, label %if.end, !dbg !7535

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !7536, !tbaa !1461
  %call1 = call ptr @_PyUnicode_COMPACT_DATA(ptr noundef %1), !dbg !7538
  store ptr %call1, ptr %retval, align 8, !dbg !7539
  br label %return, !dbg !7539

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !7540, !tbaa !1461
  %call2 = call ptr @_PyUnicode_NONCOMPACT_DATA(ptr noundef %2), !dbg !7541
  store ptr %call2, ptr %retval, align 8, !dbg !7542
  br label %return, !dbg !7542

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8, !dbg !7543
  ret ptr %3, !dbg !7543
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @PyUnicode_WRITE(i32 noundef %kind, ptr noundef %data, i64 noundef %index, i32 noundef %value) #3 !dbg !7544 {
entry:
  %kind.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca i32, align 4
  store i32 %kind, ptr %kind.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %kind.addr, metadata !7548, metadata !DIExpression()), !dbg !7552
  store ptr %data, ptr %data.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !7549, metadata !DIExpression()), !dbg !7553
  store i64 %index, ptr %index.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !7550, metadata !DIExpression()), !dbg !7554
  store i32 %value, ptr %value.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !7551, metadata !DIExpression()), !dbg !7555
  %0 = load i32, ptr %kind.addr, align 4, !dbg !7556, !tbaa !1557
  %cmp = icmp eq i32 %0, 1, !dbg !7558
  br i1 %cmp, label %if.then, label %if.else, !dbg !7559

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %value.addr, align 4, !dbg !7560, !tbaa !1557
  %conv = trunc i32 %1 to i8, !dbg !7560
  %2 = load ptr, ptr %data.addr, align 8, !dbg !7562, !tbaa !1461
  %3 = load i64, ptr %index.addr, align 8, !dbg !7563, !tbaa !1836
  %arrayidx = getelementptr i8, ptr %2, i64 %3, !dbg !7562
  store i8 %conv, ptr %arrayidx, align 1, !dbg !7564, !tbaa !6963
  br label %if.end8, !dbg !7565

if.else:                                          ; preds = %entry
  %4 = load i32, ptr %kind.addr, align 4, !dbg !7566, !tbaa !1557
  %cmp1 = icmp eq i32 %4, 2, !dbg !7568
  br i1 %cmp1, label %if.then3, label %if.else6, !dbg !7569

if.then3:                                         ; preds = %if.else
  %5 = load i32, ptr %value.addr, align 4, !dbg !7570, !tbaa !1557
  %conv4 = trunc i32 %5 to i16, !dbg !7570
  %6 = load ptr, ptr %data.addr, align 8, !dbg !7572, !tbaa !1461
  %7 = load i64, ptr %index.addr, align 8, !dbg !7573, !tbaa !1836
  %arrayidx5 = getelementptr i16, ptr %6, i64 %7, !dbg !7572
  store i16 %conv4, ptr %arrayidx5, align 2, !dbg !7574, !tbaa !7575
  br label %if.end, !dbg !7577

if.else6:                                         ; preds = %if.else
  %8 = load i32, ptr %value.addr, align 4, !dbg !7578, !tbaa !1557
  %9 = load ptr, ptr %data.addr, align 8, !dbg !7580, !tbaa !1461
  %10 = load i64, ptr %index.addr, align 8, !dbg !7581, !tbaa !1836
  %arrayidx7 = getelementptr i32, ptr %9, i64 %10, !dbg !7580
  store i32 %8, ptr %arrayidx7, align 4, !dbg !7582, !tbaa !1557
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then3
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !7583
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_COMPACT(ptr noundef %op) #3 !dbg !7584 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !7588, metadata !DIExpression()), !dbg !7589
  %0 = load ptr, ptr %op.addr, align 8, !dbg !7590, !tbaa !1461
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3, !dbg !7591
  %bf.load = load i32, ptr %state, align 8, !dbg !7592
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !7592
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7592
  ret i32 %bf.clear, !dbg !7593
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @_PyUnicode_COMPACT_DATA(ptr noundef %op) #3 !dbg !7594 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !7596, metadata !DIExpression()), !dbg !7597
  %0 = load ptr, ptr %op.addr, align 8, !dbg !7598, !tbaa !1461
  %call = call i32 @PyUnicode_IS_ASCII(ptr noundef %0), !dbg !7598
  %tobool = icmp ne i32 %call, 0, !dbg !7598
  br i1 %tobool, label %if.then, label %if.end, !dbg !7600

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !7601, !tbaa !1461
  %add.ptr = getelementptr %struct.PyASCIIObject, ptr %1, i64 1, !dbg !7601
  store ptr %add.ptr, ptr %retval, align 8, !dbg !7603
  br label %return, !dbg !7603

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !7604, !tbaa !1461
  %add.ptr1 = getelementptr %struct.PyCompactUnicodeObject, ptr %2, i64 1, !dbg !7604
  store ptr %add.ptr1, ptr %retval, align 8, !dbg !7605
  br label %return, !dbg !7605

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8, !dbg !7606
  ret ptr %3, !dbg !7606
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @_PyUnicode_NONCOMPACT_DATA(ptr noundef %op) #3 !dbg !7607 {
entry:
  %op.addr = alloca ptr, align 8
  %data = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !7609, metadata !DIExpression()), !dbg !7611
  call void @llvm.lifetime.start.p0(i64 8, ptr %data) #10, !dbg !7612
  tail call void @llvm.dbg.declare(metadata ptr %data, metadata !7610, metadata !DIExpression()), !dbg !7613
  %0 = load ptr, ptr %op.addr, align 8, !dbg !7614, !tbaa !1461
  %data1 = getelementptr inbounds %struct.PyUnicodeObject, ptr %0, i32 0, i32 1, !dbg !7615
  %1 = load ptr, ptr %data1, align 8, !dbg !7616, !tbaa !6963
  store ptr %1, ptr %data, align 8, !dbg !7617, !tbaa !1461
  %2 = load ptr, ptr %data, align 8, !dbg !7618, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %data) #10, !dbg !7619
  ret ptr %2, !dbg !7620
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_ASCII(ptr noundef %op) #3 !dbg !7621 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !7623, metadata !DIExpression()), !dbg !7624
  %0 = load ptr, ptr %op.addr, align 8, !dbg !7625, !tbaa !1461
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3, !dbg !7626
  %bf.load = load i32, ptr %state, align 8, !dbg !7627
  %bf.lshr = lshr i32 %bf.load, 6, !dbg !7627
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7627
  ret i32 %bf.clear, !dbg !7628
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @PyList_SET_ITEM(ptr noundef %op, i64 noundef %index, ptr noundef %value) #3 !dbg !7629 {
entry:
  %op.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !7631, metadata !DIExpression()), !dbg !7635
  store i64 %index, ptr %index.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !7632, metadata !DIExpression()), !dbg !7636
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !7633, metadata !DIExpression()), !dbg !7637
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #10, !dbg !7638
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !7634, metadata !DIExpression()), !dbg !7639
  %0 = load ptr, ptr %op.addr, align 8, !dbg !7640, !tbaa !1461
  store ptr %0, ptr %list, align 8, !dbg !7639, !tbaa !1461
  %1 = load ptr, ptr %value.addr, align 8, !dbg !7641, !tbaa !1461
  %2 = load ptr, ptr %list, align 8, !dbg !7642, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %2, i32 0, i32 1, !dbg !7643
  %3 = load ptr, ptr %ob_item, align 8, !dbg !7643, !tbaa !1868
  %4 = load i64, ptr %index.addr, align 8, !dbg !7644, !tbaa !1836
  %arrayidx = getelementptr ptr, ptr %3, i64 %4, !dbg !7642
  store ptr %1, ptr %arrayidx, align 8, !dbg !7645, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #10, !dbg !7646
  ret void, !dbg !7646
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_SET_SIZE(ptr noundef %ob, i64 noundef %size) #3 !dbg !7647 {
entry:
  %ob.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !7651, metadata !DIExpression()), !dbg !7653
  store i64 %size, ptr %size.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !7652, metadata !DIExpression()), !dbg !7654
  %0 = load i64, ptr %size.addr, align 8, !dbg !7655, !tbaa !1836
  %1 = load ptr, ptr %ob.addr, align 8, !dbg !7656, !tbaa !1461
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %1, i32 0, i32 1, !dbg !7657
  store i64 %0, ptr %ob_size, align 8, !dbg !7658, !tbaa !2591
  ret void, !dbg !7659
}

declare !dbg !7660 i32 @PyList_Append(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_FastCallDict(ptr noundef %func, ptr noundef %args, i64 noundef %_nargs, ptr noundef %kwargs) #3 !dbg !7661 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %_nargs.addr = alloca i64, align 8
  %kwargs.addr = alloca ptr, align 8
  %nargs = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %f = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !7665, metadata !DIExpression()), !dbg !7673
  store ptr %args, ptr %args.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !7666, metadata !DIExpression()), !dbg !7674
  store i64 %_nargs, ptr %_nargs.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %_nargs.addr, metadata !7667, metadata !DIExpression()), !dbg !7675
  store ptr %kwargs, ptr %kwargs.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %kwargs.addr, metadata !7668, metadata !DIExpression()), !dbg !7676
  call void @llvm.lifetime.start.p0(i64 8, ptr %nargs) #10, !dbg !7677
  tail call void @llvm.dbg.declare(metadata ptr %nargs, metadata !7669, metadata !DIExpression()), !dbg !7678
  %0 = load i64, ptr %_nargs.addr, align 8, !dbg !7679, !tbaa !1836
  %call = call i64 @PyVectorcall_NARGS(i64 noundef %0), !dbg !7679
  store i64 %call, ptr %nargs, align 8, !dbg !7678, !tbaa !1836
  %1 = load i64, ptr %nargs, align 8, !dbg !7680, !tbaa !1836
  %cmp = icmp eq i64 %1, 0, !dbg !7682
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7683

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %kwargs.addr, align 8, !dbg !7684, !tbaa !1461
  %cmp1 = icmp eq ptr %2, null, !dbg !7685
  br i1 %cmp1, label %if.then, label %if.else, !dbg !7686

if.then:                                          ; preds = %land.lhs.true
  %3 = load ptr, ptr %func.addr, align 8, !dbg !7687, !tbaa !1461
  %call2 = call i32 @PyObject_TypeCheck(ptr noundef %3, ptr noundef @PyCFunction_Type), !dbg !7687
  %tobool = icmp ne i32 %call2, 0, !dbg !7687
  br i1 %tobool, label %land.lhs.true3, label %if.end, !dbg !7690

land.lhs.true3:                                   ; preds = %if.then
  %4 = load ptr, ptr %func.addr, align 8, !dbg !7691, !tbaa !1461
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %4, i32 0, i32 1, !dbg !7691
  %5 = load ptr, ptr %m_ml, align 8, !dbg !7691, !tbaa !7692
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %5, i32 0, i32 2, !dbg !7691
  %6 = load i32, ptr %ml_flags, align 8, !dbg !7691, !tbaa !7694
  %and = and i32 %6, 4, !dbg !7691
  %tobool4 = icmp ne i32 %and, 0, !dbg !7691
  %lnot = xor i1 %tobool4, true, !dbg !7691
  %lnot5 = xor i1 %lnot, true, !dbg !7691
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !7691
  %conv = sext i32 %lnot.ext to i64, !dbg !7691
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !7691
  %tobool6 = icmp ne i64 %expval, 0, !dbg !7691
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !7696

if.then7:                                         ; preds = %land.lhs.true3
  %7 = load ptr, ptr %func.addr, align 8, !dbg !7697, !tbaa !1461
  %call8 = call ptr @__Pyx_PyObject_CallMethO(ptr noundef %7, ptr noundef null), !dbg !7698
  store ptr %call8, ptr %retval, align 8, !dbg !7699
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup49, !dbg !7699

if.end:                                           ; preds = %land.lhs.true3, %if.then
  br label %if.end33, !dbg !7700

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load i64, ptr %nargs, align 8, !dbg !7701, !tbaa !1836
  %cmp9 = icmp eq i64 %8, 1, !dbg !7703
  br i1 %cmp9, label %land.lhs.true11, label %if.end32, !dbg !7704

land.lhs.true11:                                  ; preds = %if.else
  %9 = load ptr, ptr %kwargs.addr, align 8, !dbg !7705, !tbaa !1461
  %cmp12 = icmp eq ptr %9, null, !dbg !7706
  br i1 %cmp12, label %if.then14, label %if.end32, !dbg !7707

if.then14:                                        ; preds = %land.lhs.true11
  %10 = load ptr, ptr %func.addr, align 8, !dbg !7708, !tbaa !1461
  %call15 = call i32 @PyObject_TypeCheck(ptr noundef %10, ptr noundef @PyCFunction_Type), !dbg !7708
  %tobool16 = icmp ne i32 %call15, 0, !dbg !7708
  br i1 %tobool16, label %land.lhs.true17, label %if.end31, !dbg !7711

land.lhs.true17:                                  ; preds = %if.then14
  %11 = load ptr, ptr %func.addr, align 8, !dbg !7712, !tbaa !1461
  %m_ml18 = getelementptr inbounds %struct.PyCFunctionObject, ptr %11, i32 0, i32 1, !dbg !7712
  %12 = load ptr, ptr %m_ml18, align 8, !dbg !7712, !tbaa !7692
  %ml_flags19 = getelementptr inbounds %struct.PyMethodDef, ptr %12, i32 0, i32 2, !dbg !7712
  %13 = load i32, ptr %ml_flags19, align 8, !dbg !7712, !tbaa !7694
  %and20 = and i32 %13, 8, !dbg !7712
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7712
  %lnot22 = xor i1 %tobool21, true, !dbg !7712
  %lnot24 = xor i1 %lnot22, true, !dbg !7712
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7712
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !7712
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 1), !dbg !7712
  %tobool28 = icmp ne i64 %expval27, 0, !dbg !7712
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !7713

if.then29:                                        ; preds = %land.lhs.true17
  %14 = load ptr, ptr %func.addr, align 8, !dbg !7714, !tbaa !1461
  %15 = load ptr, ptr %args.addr, align 8, !dbg !7715, !tbaa !1461
  %arrayidx = getelementptr ptr, ptr %15, i64 0, !dbg !7715
  %16 = load ptr, ptr %arrayidx, align 8, !dbg !7715, !tbaa !1461
  %call30 = call ptr @__Pyx_PyObject_CallMethO(ptr noundef %14, ptr noundef %16), !dbg !7716
  store ptr %call30, ptr %retval, align 8, !dbg !7717
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup49, !dbg !7717

if.end31:                                         ; preds = %land.lhs.true17, %if.then14
  br label %if.end32, !dbg !7718

if.end32:                                         ; preds = %if.end31, %land.lhs.true11, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end
  %17 = load ptr, ptr %kwargs.addr, align 8, !dbg !7719, !tbaa !1461
  %cmp34 = icmp eq ptr %17, null, !dbg !7720
  br i1 %cmp34, label %if.then36, label %if.end42, !dbg !7721

if.then36:                                        ; preds = %if.end33
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #10, !dbg !7722
  tail call void @llvm.dbg.declare(metadata ptr %f, metadata !7670, metadata !DIExpression()), !dbg !7723
  %18 = load ptr, ptr %func.addr, align 8, !dbg !7724, !tbaa !1461
  %call37 = call ptr @PyVectorcall_Function(ptr noundef %18), !dbg !7725
  store ptr %call37, ptr %f, align 8, !dbg !7723, !tbaa !1461
  %19 = load ptr, ptr %f, align 8, !dbg !7726, !tbaa !1461
  %tobool38 = icmp ne ptr %19, null, !dbg !7726
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !7728

if.then39:                                        ; preds = %if.then36
  %20 = load ptr, ptr %f, align 8, !dbg !7729, !tbaa !1461
  %21 = load ptr, ptr %func.addr, align 8, !dbg !7731, !tbaa !1461
  %22 = load ptr, ptr %args.addr, align 8, !dbg !7732, !tbaa !1461
  %23 = load i64, ptr %nargs, align 8, !dbg !7733, !tbaa !1836
  %call40 = call ptr %20(ptr noundef %21, ptr noundef %22, i64 noundef %23, ptr noundef null), !dbg !7729
  store ptr %call40, ptr %retval, align 8, !dbg !7734
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7734

if.end41:                                         ; preds = %if.then36
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7735
  br label %cleanup, !dbg !7735

cleanup:                                          ; preds = %if.end41, %if.then39
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #10, !dbg !7735
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup49 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end42, !dbg !7736

if.end42:                                         ; preds = %cleanup.cont, %if.end33
  %24 = load i64, ptr %nargs, align 8, !dbg !7737, !tbaa !1836
  %cmp43 = icmp eq i64 %24, 0, !dbg !7739
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !7740

if.then45:                                        ; preds = %if.end42
  %25 = load ptr, ptr %func.addr, align 8, !dbg !7741, !tbaa !1461
  %26 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !7743, !tbaa !1461
  %__pyx_empty_tuple = getelementptr inbounds %struct.__pyx_mstate, ptr %26, i32 0, i32 3, !dbg !7743
  %27 = load ptr, ptr %__pyx_empty_tuple, align 8, !dbg !7743, !tbaa !1654
  %28 = load ptr, ptr %kwargs.addr, align 8, !dbg !7744, !tbaa !1461
  %call46 = call ptr @__Pyx_PyObject_Call(ptr noundef %25, ptr noundef %27, ptr noundef %28), !dbg !7745
  store ptr %call46, ptr %retval, align 8, !dbg !7746
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup49, !dbg !7746

if.end47:                                         ; preds = %if.end42
  %29 = load ptr, ptr %func.addr, align 8, !dbg !7747, !tbaa !1461
  %30 = load ptr, ptr %args.addr, align 8, !dbg !7748, !tbaa !1461
  %31 = load i64, ptr %nargs, align 8, !dbg !7749, !tbaa !1836
  %32 = load ptr, ptr %kwargs.addr, align 8, !dbg !7750, !tbaa !1461
  %call48 = call ptr @PyObject_VectorcallDict(ptr noundef %29, ptr noundef %30, i64 noundef %31, ptr noundef %32), !dbg !7751
  store ptr %call48, ptr %retval, align 8, !dbg !7752
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup49, !dbg !7752

cleanup49:                                        ; preds = %if.end47, %if.then45, %cleanup, %if.then29, %if.then7
  call void @llvm.lifetime.end.p0(i64 8, ptr %nargs) #10, !dbg !7753
  %33 = load ptr, ptr %retval, align 8, !dbg !7753
  ret ptr %33, !dbg !7753
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyVectorcall_NARGS(i64 noundef %n) #3 !dbg !7754 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, ptr %n.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !7759, metadata !DIExpression()), !dbg !7760
  %0 = load i64, ptr %n.addr, align 8, !dbg !7761, !tbaa !1836
  %and = and i64 %0, 9223372036854775807, !dbg !7762
  ret i64 %and, !dbg !7763
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyObject_TypeCheck(ptr noundef %ob, ptr noundef %type) #3 !dbg !7764 {
entry:
  %ob.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !7766, metadata !DIExpression()), !dbg !7768
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !7767, metadata !DIExpression()), !dbg !7769
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !7770, !tbaa !1461
  %1 = load ptr, ptr %type.addr, align 8, !dbg !7770, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %0, ptr noundef %1), !dbg !7770
  %tobool = icmp ne i32 %call, 0, !dbg !7770
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !7771

lor.rhs:                                          ; preds = %entry
  %2 = load ptr, ptr %ob.addr, align 8, !dbg !7772, !tbaa !1461
  %call1 = call ptr @Py_TYPE(ptr noundef %2), !dbg !7772
  %3 = load ptr, ptr %type.addr, align 8, !dbg !7773, !tbaa !1461
  %call2 = call i32 @PyType_IsSubtype(ptr noundef %call1, ptr noundef %3), !dbg !7774
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7771
  br label %lor.end, !dbg !7771

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !7771
  ret i32 %lor.ext, !dbg !7775
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethO(ptr noundef %func, ptr noundef %arg) #3 !dbg !7776 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cfunc = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !7778, metadata !DIExpression()), !dbg !7783
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !7779, metadata !DIExpression()), !dbg !7784
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #10, !dbg !7785
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !7780, metadata !DIExpression()), !dbg !7786
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !7785
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !7781, metadata !DIExpression()), !dbg !7787
  call void @llvm.lifetime.start.p0(i64 8, ptr %cfunc) #10, !dbg !7788
  tail call void @llvm.dbg.declare(metadata ptr %cfunc, metadata !7782, metadata !DIExpression()), !dbg !7789
  %0 = load ptr, ptr %func.addr, align 8, !dbg !7790, !tbaa !1461
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 1, !dbg !7790
  %1 = load ptr, ptr %m_ml, align 8, !dbg !7790, !tbaa !7692
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %1, i32 0, i32 1, !dbg !7790
  %2 = load ptr, ptr %ml_meth, align 8, !dbg !7790, !tbaa !7791
  store ptr %2, ptr %cfunc, align 8, !dbg !7792, !tbaa !1461
  %3 = load ptr, ptr %func.addr, align 8, !dbg !7793, !tbaa !1461
  %call = call ptr @__Pyx_CyOrPyCFunction_GET_SELF(ptr noundef %3), !dbg !7794
  store ptr %call, ptr %self, align 8, !dbg !7795, !tbaa !1461
  %call1 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.34), !dbg !7796
  %tobool = icmp ne i32 %call1, 0, !dbg !7796
  %lnot = xor i1 %tobool, true, !dbg !7796
  %lnot2 = xor i1 %lnot, true, !dbg !7796
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7796
  %conv = sext i32 %lnot.ext to i64, !dbg !7796
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7796
  %tobool3 = icmp ne i64 %expval, 0, !dbg !7796
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7798

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !7799
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7799

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %cfunc, align 8, !dbg !7800, !tbaa !1461
  %5 = load ptr, ptr %self, align 8, !dbg !7801, !tbaa !1461
  %6 = load ptr, ptr %arg.addr, align 8, !dbg !7802, !tbaa !1461
  %call4 = call ptr %4(ptr noundef %5, ptr noundef %6), !dbg !7800
  store ptr %call4, ptr %result, align 8, !dbg !7803, !tbaa !1461
  call void @Py_LeaveRecursiveCall(), !dbg !7804
  %7 = load ptr, ptr %result, align 8, !dbg !7805, !tbaa !1461
  %tobool5 = icmp ne ptr %7, null, !dbg !7805
  %lnot6 = xor i1 %tobool5, true, !dbg !7805
  %lnot8 = xor i1 %lnot6, true, !dbg !7805
  %lnot10 = xor i1 %lnot8, true, !dbg !7805
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !7805
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !7805
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !7805
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !7805
  br i1 %tobool14, label %land.lhs.true, label %if.end27, !dbg !7807

land.lhs.true:                                    ; preds = %if.end
  %call15 = call ptr @PyErr_Occurred(), !dbg !7808
  %tobool16 = icmp ne ptr %call15, null, !dbg !7808
  %lnot17 = xor i1 %tobool16, true, !dbg !7808
  %lnot19 = xor i1 %lnot17, true, !dbg !7808
  %lnot21 = xor i1 %lnot19, true, !dbg !7808
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !7808
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !7808
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !7808
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !7808
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !7809

if.then26:                                        ; preds = %land.lhs.true
  %8 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !7810, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %8, ptr noundef @.str.35), !dbg !7812
  br label %if.end27, !dbg !7813

if.end27:                                         ; preds = %if.then26, %land.lhs.true, %if.end
  %9 = load ptr, ptr %result, align 8, !dbg !7814, !tbaa !1461
  store ptr %9, ptr %retval, align 8, !dbg !7815
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7815

cleanup:                                          ; preds = %if.end27, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cfunc) #10, !dbg !7816
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !7816
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #10, !dbg !7816
  %10 = load ptr, ptr %retval, align 8, !dbg !7816
  ret ptr %10, !dbg !7816
}

declare !dbg !7817 ptr @PyVectorcall_Function(ptr noundef) #1

declare !dbg !7820 ptr @PyObject_VectorcallDict(ptr noundef, ptr noundef, i64 noundef, ptr noundef) #1

declare !dbg !7821 i32 @PyType_IsSubtype(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_CyOrPyCFunction_GET_SELF(ptr noundef %func) #3 !dbg !7822 {
entry:
  %func.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !7824, metadata !DIExpression()), !dbg !7825
  %0 = load ptr, ptr %func.addr, align 8, !dbg !7826, !tbaa !1461
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 1, !dbg !7826
  %1 = load ptr, ptr %m_ml, align 8, !dbg !7826, !tbaa !7692
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %1, i32 0, i32 2, !dbg !7826
  %2 = load i32, ptr %ml_flags, align 8, !dbg !7826, !tbaa !7694
  %and = and i32 %2, 32, !dbg !7827
  %tobool = icmp ne i32 %and, 0, !dbg !7827
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7828

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7828

cond.false:                                       ; preds = %entry
  %3 = load ptr, ptr %func.addr, align 8, !dbg !7829, !tbaa !1461
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %3, i32 0, i32 2, !dbg !7830
  %4 = load ptr, ptr %m_self, align 8, !dbg !7830, !tbaa !7831
  br label %cond.end, !dbg !7828

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ null, %cond.true ], [ %4, %cond.false ], !dbg !7828
  ret ptr %cond, !dbg !7832
}

declare !dbg !7833 i32 @Py_EnterRecursiveCall(ptr noundef) #1

declare !dbg !7837 void @Py_LeaveRecursiveCall() #1

declare !dbg !7838 ptr @PyDict_GetItemWithError(ptr noundef, ptr noundef) #1

declare !dbg !7839 ptr @PyLong_FromLongLong(i64 noundef) #1

declare !dbg !7842 ptr @PyFloat_FromDouble(double noundef) #1

declare ptr @PyNumber_InPlaceAdd(ptr noundef, ptr noundef) #1

declare ptr @PyNumber_Add(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethod1(ptr noundef %obj, ptr noundef %method_name, ptr noundef %arg) #0 !dbg !7846 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %method_name.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %method = alloca ptr, align 8
  %result = alloca ptr, align 8
  %is_method = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !7848, metadata !DIExpression()), !dbg !7854
  store ptr %method_name, ptr %method_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %method_name.addr, metadata !7849, metadata !DIExpression()), !dbg !7855
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !7850, metadata !DIExpression()), !dbg !7856
  call void @llvm.lifetime.start.p0(i64 8, ptr %method) #10, !dbg !7857
  tail call void @llvm.dbg.declare(metadata ptr %method, metadata !7851, metadata !DIExpression()), !dbg !7858
  store ptr null, ptr %method, align 8, !dbg !7858, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !7857
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !7852, metadata !DIExpression()), !dbg !7859
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_method) #10, !dbg !7860
  tail call void @llvm.dbg.declare(metadata ptr %is_method, metadata !7853, metadata !DIExpression()), !dbg !7861
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !7862, !tbaa !1461
  %1 = load ptr, ptr %method_name.addr, align 8, !dbg !7863, !tbaa !1461
  %call = call i32 @__Pyx_PyObject_GetMethod(ptr noundef %0, ptr noundef %1, ptr noundef %method), !dbg !7864
  store i32 %call, ptr %is_method, align 4, !dbg !7861, !tbaa !1557
  %2 = load i32, ptr %is_method, align 4, !dbg !7865, !tbaa !1557
  %tobool = icmp ne i32 %2, 0, !dbg !7865
  %lnot = xor i1 %tobool, true, !dbg !7865
  %lnot1 = xor i1 %lnot, true, !dbg !7865
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7865
  %conv = sext i32 %lnot.ext to i64, !dbg !7865
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !7865
  %tobool2 = icmp ne i64 %expval, 0, !dbg !7865
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7867

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %method, align 8, !dbg !7868, !tbaa !1461
  %4 = load ptr, ptr %obj.addr, align 8, !dbg !7870, !tbaa !1461
  %5 = load ptr, ptr %arg.addr, align 8, !dbg !7871, !tbaa !1461
  %call3 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %3, ptr noundef %4, ptr noundef %5), !dbg !7872
  store ptr %call3, ptr %result, align 8, !dbg !7873, !tbaa !1461
  %6 = load ptr, ptr %method, align 8, !dbg !7874, !tbaa !1461
  call void @Py_DECREF(ptr noundef %6), !dbg !7874
  %7 = load ptr, ptr %result, align 8, !dbg !7875, !tbaa !1461
  store ptr %7, ptr %retval, align 8, !dbg !7876
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7876

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %method, align 8, !dbg !7877, !tbaa !1461
  %tobool4 = icmp ne ptr %8, null, !dbg !7877
  %lnot5 = xor i1 %tobool4, true, !dbg !7877
  %lnot7 = xor i1 %lnot5, true, !dbg !7877
  %lnot9 = xor i1 %lnot7, true, !dbg !7877
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !7877
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !7877
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !7877
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !7877
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7879

if.then14:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !7880
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7880

if.end15:                                         ; preds = %if.end
  %9 = load ptr, ptr %method, align 8, !dbg !7881, !tbaa !1461
  %10 = load ptr, ptr %arg.addr, align 8, !dbg !7882, !tbaa !1461
  %call16 = call ptr @__Pyx__PyObject_CallMethod1(ptr noundef %9, ptr noundef %10), !dbg !7883
  store ptr %call16, ptr %retval, align 8, !dbg !7884
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7884

cleanup:                                          ; preds = %if.end15, %if.then14, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_method) #10, !dbg !7885
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !7885
  call void @llvm.lifetime.end.p0(i64 8, ptr %method) #10, !dbg !7885
  %11 = load ptr, ptr %retval, align 8, !dbg !7885
  ret ptr %11, !dbg !7885
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyObject_GetMethod(ptr noundef %obj, ptr noundef %name, ptr noundef %method) #0 !dbg !7886 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %method.addr = alloca ptr, align 8
  %attr = alloca ptr, align 8
  %type_name = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %descr = alloca ptr, align 8
  %f = alloca ptr, align 8
  %dictptr = alloca ptr, align 8
  %dict = alloca ptr, align 8
  %meth_found = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %function = alloca ptr, align 8
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !7890, metadata !DIExpression()), !dbg !7905
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !7891, metadata !DIExpression()), !dbg !7906
  store ptr %method, ptr %method.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %method.addr, metadata !7892, metadata !DIExpression()), !dbg !7907
  call void @llvm.lifetime.start.p0(i64 8, ptr %attr) #10, !dbg !7908
  tail call void @llvm.dbg.declare(metadata ptr %attr, metadata !7893, metadata !DIExpression()), !dbg !7909
  call void @llvm.lifetime.start.p0(i64 8, ptr %type_name) #10, !dbg !7910
  tail call void @llvm.dbg.declare(metadata ptr %type_name, metadata !7894, metadata !DIExpression()), !dbg !7911
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #10, !dbg !7912
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !7895, metadata !DIExpression()), !dbg !7913
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !7914, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %0), !dbg !7914
  store ptr %call, ptr %tp, align 8, !dbg !7913, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %descr) #10, !dbg !7915
  tail call void @llvm.dbg.declare(metadata ptr %descr, metadata !7896, metadata !DIExpression()), !dbg !7916
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #10, !dbg !7917
  tail call void @llvm.dbg.declare(metadata ptr %f, metadata !7897, metadata !DIExpression()), !dbg !7918
  store ptr null, ptr %f, align 8, !dbg !7918, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %dictptr) #10, !dbg !7919
  tail call void @llvm.dbg.declare(metadata ptr %dictptr, metadata !7898, metadata !DIExpression()), !dbg !7920
  call void @llvm.lifetime.start.p0(i64 8, ptr %dict) #10, !dbg !7919
  tail call void @llvm.dbg.declare(metadata ptr %dict, metadata !7899, metadata !DIExpression()), !dbg !7921
  call void @llvm.lifetime.start.p0(i64 4, ptr %meth_found) #10, !dbg !7922
  tail call void @llvm.dbg.declare(metadata ptr %meth_found, metadata !7900, metadata !DIExpression()), !dbg !7923
  store i32 0, ptr %meth_found, align 4, !dbg !7923, !tbaa !1557
  %1 = load ptr, ptr %tp, align 8, !dbg !7924, !tbaa !1461
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16, !dbg !7924
  %2 = load ptr, ptr %tp_getattro, align 8, !dbg !7924, !tbaa !2428
  %cmp = icmp ne ptr %2, @PyObject_GenericGetAttr, !dbg !7924
  %lnot = xor i1 %cmp, true, !dbg !7924
  %lnot1 = xor i1 %lnot, true, !dbg !7924
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7924
  %conv = sext i32 %lnot.ext to i64, !dbg !7924
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7924
  %tobool = icmp ne i64 %expval, 0, !dbg !7924
  br i1 %tobool, label %if.then, label %if.end, !dbg !7926

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %obj.addr, align 8, !dbg !7927, !tbaa !1461
  %4 = load ptr, ptr %name.addr, align 8, !dbg !7929, !tbaa !1461
  %call2 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %3, ptr noundef %4), !dbg !7930
  store ptr %call2, ptr %attr, align 8, !dbg !7931, !tbaa !1461
  br label %try_unpack, !dbg !7932

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %tp, align 8, !dbg !7933, !tbaa !1461
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 31, !dbg !7933
  %6 = load ptr, ptr %tp_dict, align 8, !dbg !7933, !tbaa !6560
  %cmp3 = icmp eq ptr %6, null, !dbg !7933
  %lnot5 = xor i1 %cmp3, true, !dbg !7933
  %lnot7 = xor i1 %lnot5, true, !dbg !7933
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7933
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7933
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !7933
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !7933
  br i1 %tobool11, label %land.lhs.true, label %if.end23, !dbg !7935

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %tp, align 8, !dbg !7936, !tbaa !1461
  %call12 = call i32 @PyType_Ready(ptr noundef %7), !dbg !7936
  %cmp13 = icmp slt i32 %call12, 0, !dbg !7936
  %lnot15 = xor i1 %cmp13, true, !dbg !7936
  %lnot17 = xor i1 %lnot15, true, !dbg !7936
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7936
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7936
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !7936
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !7936
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !7937

if.then22:                                        ; preds = %land.lhs.true
  store i32 0, ptr %retval, align 4, !dbg !7938
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7938

if.end23:                                         ; preds = %land.lhs.true, %if.end
  %8 = load ptr, ptr %tp, align 8, !dbg !7940, !tbaa !1461
  %9 = load ptr, ptr %name.addr, align 8, !dbg !7941, !tbaa !1461
  %call24 = call ptr @_PyType_Lookup(ptr noundef %8, ptr noundef %9), !dbg !7942
  store ptr %call24, ptr %descr, align 8, !dbg !7943, !tbaa !1461
  %10 = load ptr, ptr %descr, align 8, !dbg !7944, !tbaa !1461
  %cmp25 = icmp ne ptr %10, null, !dbg !7944
  %lnot27 = xor i1 %cmp25, true, !dbg !7944
  %lnot29 = xor i1 %lnot27, true, !dbg !7944
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !7944
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !7944
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 1), !dbg !7944
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !7944
  br i1 %tobool33, label %if.then34, label %if.end50, !dbg !7946

if.then34:                                        ; preds = %if.end23
  %11 = load ptr, ptr %descr, align 8, !dbg !7947, !tbaa !1461
  call void @Py_INCREF(ptr noundef %11), !dbg !7947
  %12 = load ptr, ptr %descr, align 8, !dbg !7949, !tbaa !1461
  %call35 = call ptr @Py_TYPE(ptr noundef %12), !dbg !7949
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %call35, i32 0, i32 19, !dbg !7949
  %13 = load i64, ptr %tp_flags, align 8, !dbg !7949, !tbaa !4430
  %and = and i64 %13, 131072, !dbg !7949
  %cmp36 = icmp ne i64 %and, 0, !dbg !7949
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !7951

if.then38:                                        ; preds = %if.then34
  store i32 1, ptr %meth_found, align 4, !dbg !7952, !tbaa !1557
  br label %if.end49, !dbg !7954

if.else:                                          ; preds = %if.then34
  %14 = load ptr, ptr %descr, align 8, !dbg !7955, !tbaa !1461
  %call39 = call ptr @Py_TYPE(ptr noundef %14), !dbg !7955
  %tp_descr_get = getelementptr inbounds %struct._typeobject, ptr %call39, i32 0, i32 32, !dbg !7957
  %15 = load ptr, ptr %tp_descr_get, align 8, !dbg !7957, !tbaa !7958
  store ptr %15, ptr %f, align 8, !dbg !7959, !tbaa !1461
  %16 = load ptr, ptr %f, align 8, !dbg !7960, !tbaa !1461
  %cmp40 = icmp ne ptr %16, null, !dbg !7962
  br i1 %cmp40, label %land.lhs.true42, label %if.end48, !dbg !7963

land.lhs.true42:                                  ; preds = %if.else
  %17 = load ptr, ptr %descr, align 8, !dbg !7964, !tbaa !1461
  %call43 = call i32 @PyDescr_IsData(ptr noundef %17), !dbg !7965
  %tobool44 = icmp ne i32 %call43, 0, !dbg !7965
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !7966

if.then45:                                        ; preds = %land.lhs.true42
  %18 = load ptr, ptr %f, align 8, !dbg !7967, !tbaa !1461
  %19 = load ptr, ptr %descr, align 8, !dbg !7969, !tbaa !1461
  %20 = load ptr, ptr %obj.addr, align 8, !dbg !7970, !tbaa !1461
  %21 = load ptr, ptr %obj.addr, align 8, !dbg !7971, !tbaa !1461
  %call46 = call ptr @Py_TYPE(ptr noundef %21), !dbg !7971
  %call47 = call ptr %18(ptr noundef %19, ptr noundef %20, ptr noundef %call46), !dbg !7967
  store ptr %call47, ptr %attr, align 8, !dbg !7972, !tbaa !1461
  %22 = load ptr, ptr %descr, align 8, !dbg !7973, !tbaa !1461
  call void @Py_DECREF(ptr noundef %22), !dbg !7973
  br label %try_unpack, !dbg !7974

if.end48:                                         ; preds = %land.lhs.true42, %if.else
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then38
  br label %if.end50, !dbg !7975

if.end50:                                         ; preds = %if.end49, %if.end23
  %23 = load ptr, ptr %obj.addr, align 8, !dbg !7976, !tbaa !1461
  %call51 = call ptr @_PyObject_GetDictPtr(ptr noundef %23), !dbg !7977
  store ptr %call51, ptr %dictptr, align 8, !dbg !7978, !tbaa !1461
  %24 = load ptr, ptr %dictptr, align 8, !dbg !7979, !tbaa !1461
  %cmp52 = icmp ne ptr %24, null, !dbg !7981
  br i1 %cmp52, label %land.lhs.true54, label %if.end63, !dbg !7982

land.lhs.true54:                                  ; preds = %if.end50
  %25 = load ptr, ptr %dictptr, align 8, !dbg !7983, !tbaa !1461
  %26 = load ptr, ptr %25, align 8, !dbg !7984, !tbaa !1461
  store ptr %26, ptr %dict, align 8, !dbg !7985, !tbaa !1461
  %cmp55 = icmp ne ptr %26, null, !dbg !7986
  br i1 %cmp55, label %if.then57, label %if.end63, !dbg !7987

if.then57:                                        ; preds = %land.lhs.true54
  %27 = load ptr, ptr %dict, align 8, !dbg !7988, !tbaa !1461
  call void @Py_INCREF(ptr noundef %27), !dbg !7988
  %28 = load ptr, ptr %dict, align 8, !dbg !7990, !tbaa !1461
  %29 = load ptr, ptr %name.addr, align 8, !dbg !7991, !tbaa !1461
  %call58 = call ptr @__Pyx_PyDict_GetItemStr(ptr noundef %28, ptr noundef %29), !dbg !7992
  store ptr %call58, ptr %attr, align 8, !dbg !7993, !tbaa !1461
  %30 = load ptr, ptr %attr, align 8, !dbg !7994, !tbaa !1461
  %cmp59 = icmp ne ptr %30, null, !dbg !7996
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !7997

if.then61:                                        ; preds = %if.then57
  %31 = load ptr, ptr %attr, align 8, !dbg !7998, !tbaa !1461
  call void @Py_INCREF(ptr noundef %31), !dbg !7998
  %32 = load ptr, ptr %dict, align 8, !dbg !8000, !tbaa !1461
  call void @Py_DECREF(ptr noundef %32), !dbg !8000
  %33 = load ptr, ptr %descr, align 8, !dbg !8001, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %33), !dbg !8001
  br label %try_unpack, !dbg !8002

if.end62:                                         ; preds = %if.then57
  %34 = load ptr, ptr %dict, align 8, !dbg !8003, !tbaa !1461
  call void @Py_DECREF(ptr noundef %34), !dbg !8003
  br label %if.end63, !dbg !8004

if.end63:                                         ; preds = %if.end62, %land.lhs.true54, %if.end50
  %35 = load i32, ptr %meth_found, align 4, !dbg !8005, !tbaa !1557
  %tobool64 = icmp ne i32 %35, 0, !dbg !8005
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !8007

if.then65:                                        ; preds = %if.end63
  %36 = load ptr, ptr %descr, align 8, !dbg !8008, !tbaa !1461
  %37 = load ptr, ptr %method.addr, align 8, !dbg !8010, !tbaa !1461
  store ptr %36, ptr %37, align 8, !dbg !8011, !tbaa !1461
  store i32 1, ptr %retval, align 4, !dbg !8012
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8012

if.end66:                                         ; preds = %if.end63
  %38 = load ptr, ptr %f, align 8, !dbg !8013, !tbaa !1461
  %cmp67 = icmp ne ptr %38, null, !dbg !8015
  br i1 %cmp67, label %if.then69, label %if.end72, !dbg !8016

if.then69:                                        ; preds = %if.end66
  %39 = load ptr, ptr %f, align 8, !dbg !8017, !tbaa !1461
  %40 = load ptr, ptr %descr, align 8, !dbg !8019, !tbaa !1461
  %41 = load ptr, ptr %obj.addr, align 8, !dbg !8020, !tbaa !1461
  %42 = load ptr, ptr %obj.addr, align 8, !dbg !8021, !tbaa !1461
  %call70 = call ptr @Py_TYPE(ptr noundef %42), !dbg !8021
  %call71 = call ptr %39(ptr noundef %40, ptr noundef %41, ptr noundef %call70), !dbg !8017
  store ptr %call71, ptr %attr, align 8, !dbg !8022, !tbaa !1461
  %43 = load ptr, ptr %descr, align 8, !dbg !8023, !tbaa !1461
  call void @Py_DECREF(ptr noundef %43), !dbg !8023
  br label %try_unpack, !dbg !8024

if.end72:                                         ; preds = %if.end66
  %44 = load ptr, ptr %descr, align 8, !dbg !8025, !tbaa !1461
  %cmp73 = icmp ne ptr %44, null, !dbg !8025
  %lnot75 = xor i1 %cmp73, true, !dbg !8025
  %lnot77 = xor i1 %lnot75, true, !dbg !8025
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !8025
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !8025
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 1), !dbg !8025
  %tobool81 = icmp ne i64 %expval80, 0, !dbg !8025
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !8027

if.then82:                                        ; preds = %if.end72
  %45 = load ptr, ptr %descr, align 8, !dbg !8028, !tbaa !1461
  %46 = load ptr, ptr %method.addr, align 8, !dbg !8030, !tbaa !1461
  store ptr %45, ptr %46, align 8, !dbg !8031, !tbaa !1461
  store i32 0, ptr %retval, align 4, !dbg !8032
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8032

if.end83:                                         ; preds = %if.end72
  %47 = load ptr, ptr %tp, align 8, !dbg !8033, !tbaa !1461
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %47, i32 0, i32 1, !dbg !8033
  %48 = load ptr, ptr %tp_name, align 8, !dbg !8033, !tbaa !6513
  store ptr %48, ptr %type_name, align 8, !dbg !8034, !tbaa !1461
  %49 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !8035, !tbaa !1461
  %50 = load ptr, ptr %type_name, align 8, !dbg !8036, !tbaa !1461
  %51 = load ptr, ptr %name.addr, align 8, !dbg !8037, !tbaa !1461
  %call84 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %49, ptr noundef @.str.36, ptr noundef %50, ptr noundef %51), !dbg !8038
  store i32 0, ptr %retval, align 4, !dbg !8039
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8039

try_unpack:                                       ; preds = %if.then69, %if.then61, %if.then45, %if.then
  tail call void @llvm.dbg.label(metadata !7901), !dbg !8040
  %52 = load ptr, ptr %attr, align 8, !dbg !8041, !tbaa !1461
  %tobool85 = icmp ne ptr %52, null, !dbg !8041
  %lnot86 = xor i1 %tobool85, true, !dbg !8041
  %lnot88 = xor i1 %lnot86, true, !dbg !8041
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !8041
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !8041
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 1), !dbg !8041
  %tobool92 = icmp ne i64 %expval91, 0, !dbg !8041
  br i1 %tobool92, label %land.lhs.true93, label %if.end107, !dbg !8042

land.lhs.true93:                                  ; preds = %try_unpack
  %53 = load ptr, ptr %attr, align 8, !dbg !8043, !tbaa !1461
  %call94 = call i32 @Py_IS_TYPE(ptr noundef %53, ptr noundef @PyMethod_Type), !dbg !8043
  %tobool95 = icmp ne i32 %call94, 0, !dbg !8043
  br i1 %tobool95, label %land.lhs.true96, label %if.end107, !dbg !8044

land.lhs.true96:                                  ; preds = %land.lhs.true93
  %54 = load ptr, ptr %attr, align 8, !dbg !8045, !tbaa !1461
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %54, i32 0, i32 2, !dbg !8045
  %55 = load ptr, ptr %im_self, align 8, !dbg !8045, !tbaa !3531
  %56 = load ptr, ptr %obj.addr, align 8, !dbg !8045, !tbaa !1461
  %cmp97 = icmp eq ptr %55, %56, !dbg !8045
  %lnot99 = xor i1 %cmp97, true, !dbg !8045
  %lnot101 = xor i1 %lnot99, true, !dbg !8045
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !8045
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !8045
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 1), !dbg !8045
  %tobool105 = icmp ne i64 %expval104, 0, !dbg !8045
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !8046

if.then106:                                       ; preds = %land.lhs.true96
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #10, !dbg !8047
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !7902, metadata !DIExpression()), !dbg !8048
  %57 = load ptr, ptr %attr, align 8, !dbg !8049, !tbaa !1461
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %57, i32 0, i32 1, !dbg !8049
  %58 = load ptr, ptr %im_func, align 8, !dbg !8049, !tbaa !3539
  store ptr %58, ptr %function, align 8, !dbg !8048, !tbaa !1461
  %59 = load ptr, ptr %function, align 8, !dbg !8050, !tbaa !1461
  call void @Py_INCREF(ptr noundef %59), !dbg !8050
  %60 = load ptr, ptr %attr, align 8, !dbg !8051, !tbaa !1461
  call void @Py_DECREF(ptr noundef %60), !dbg !8051
  %61 = load ptr, ptr %function, align 8, !dbg !8052, !tbaa !1461
  %62 = load ptr, ptr %method.addr, align 8, !dbg !8053, !tbaa !1461
  store ptr %61, ptr %62, align 8, !dbg !8054, !tbaa !1461
  store i32 1, ptr %retval, align 4, !dbg !8055
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #10, !dbg !8056
  br label %cleanup

if.end107:                                        ; preds = %land.lhs.true96, %land.lhs.true93, %try_unpack
  %63 = load ptr, ptr %attr, align 8, !dbg !8057, !tbaa !1461
  %64 = load ptr, ptr %method.addr, align 8, !dbg !8058, !tbaa !1461
  store ptr %63, ptr %64, align 8, !dbg !8059, !tbaa !1461
  store i32 0, ptr %retval, align 4, !dbg !8060
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8060

cleanup:                                          ; preds = %if.end107, %if.then106, %if.end83, %if.then82, %if.then65, %if.then22
  call void @llvm.lifetime.end.p0(i64 4, ptr %meth_found) #10, !dbg !8061
  call void @llvm.lifetime.end.p0(i64 8, ptr %dict) #10, !dbg !8061
  call void @llvm.lifetime.end.p0(i64 8, ptr %dictptr) #10, !dbg !8061
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #10, !dbg !8061
  call void @llvm.lifetime.end.p0(i64 8, ptr %descr) #10, !dbg !8061
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #10, !dbg !8061
  call void @llvm.lifetime.end.p0(i64 8, ptr %type_name) #10, !dbg !8061
  call void @llvm.lifetime.end.p0(i64 8, ptr %attr) #10, !dbg !8061
  %65 = load i32, ptr %retval, align 4, !dbg !8061
  ret i32 %65, !dbg !8061
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_Call2Args(ptr noundef %function, ptr noundef %arg1, ptr noundef %arg2) #3 !dbg !8062 {
entry:
  %function.addr = alloca ptr, align 8
  %arg1.addr = alloca ptr, align 8
  %arg2.addr = alloca ptr, align 8
  %args = alloca [3 x ptr], align 16
  store ptr %function, ptr %function.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %function.addr, metadata !8064, metadata !DIExpression()), !dbg !8069
  store ptr %arg1, ptr %arg1.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %arg1.addr, metadata !8065, metadata !DIExpression()), !dbg !8070
  store ptr %arg2, ptr %arg2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %arg2.addr, metadata !8066, metadata !DIExpression()), !dbg !8071
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #10, !dbg !8072
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !8067, metadata !DIExpression()), !dbg !8073
  %arrayinit.begin = getelementptr inbounds [3 x ptr], ptr %args, i64 0, i64 0, !dbg !8074
  store ptr null, ptr %arrayinit.begin, align 8, !dbg !8074, !tbaa !1461
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !8074
  %0 = load ptr, ptr %arg1.addr, align 8, !dbg !8075, !tbaa !1461
  store ptr %0, ptr %arrayinit.element, align 8, !dbg !8074, !tbaa !1461
  %arrayinit.element1 = getelementptr inbounds ptr, ptr %arrayinit.element, i64 1, !dbg !8074
  %1 = load ptr, ptr %arg2.addr, align 8, !dbg !8076, !tbaa !1461
  store ptr %1, ptr %arrayinit.element1, align 8, !dbg !8074, !tbaa !1461
  %2 = load ptr, ptr %function.addr, align 8, !dbg !8077, !tbaa !1461
  %arraydecay = getelementptr inbounds [3 x ptr], ptr %args, i64 0, i64 0, !dbg !8077
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !8077
  %call = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %2, ptr noundef %add.ptr, i64 noundef -9223372036854775806, ptr noundef null), !dbg !8077
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #10, !dbg !8078
  ret ptr %call, !dbg !8079
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__PyObject_CallMethod1(ptr noundef %method, ptr noundef %arg) #0 !dbg !8080 {
entry:
  %method.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %method, ptr %method.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %method.addr, metadata !8082, metadata !DIExpression()), !dbg !8085
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !8083, metadata !DIExpression()), !dbg !8086
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !8087
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !8084, metadata !DIExpression()), !dbg !8088
  %0 = load ptr, ptr %method.addr, align 8, !dbg !8089, !tbaa !1461
  %1 = load ptr, ptr %arg.addr, align 8, !dbg !8090, !tbaa !1461
  %call = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %0, ptr noundef %1), !dbg !8091
  store ptr %call, ptr %result, align 8, !dbg !8088, !tbaa !1461
  %2 = load ptr, ptr %method.addr, align 8, !dbg !8092, !tbaa !1461
  call void @Py_DECREF(ptr noundef %2), !dbg !8092
  %3 = load ptr, ptr %result, align 8, !dbg !8093, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !8094
  ret ptr %3, !dbg !8095
}

declare !dbg !8096 i32 @PyType_Ready(ptr noundef) #1

declare !dbg !8097 ptr @_PyType_Lookup(ptr noundef, ptr noundef) #1

declare !dbg !8100 i32 @PyDescr_IsData(ptr noundef) #1

declare !dbg !8102 ptr @_PyObject_GetDictPtr(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyDict_GetItemStr(ptr noundef %dict, ptr noundef %name) #3 !dbg !8105 {
entry:
  %dict.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %res = alloca ptr, align 8
  store ptr %dict, ptr %dict.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %dict.addr, metadata !8107, metadata !DIExpression()), !dbg !8110
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !8108, metadata !DIExpression()), !dbg !8111
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #10, !dbg !8112
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !8109, metadata !DIExpression()), !dbg !8113
  %0 = load ptr, ptr %dict.addr, align 8, !dbg !8114, !tbaa !1461
  %1 = load ptr, ptr %name.addr, align 8, !dbg !8114, !tbaa !1461
  %2 = load ptr, ptr %name.addr, align 8, !dbg !8114, !tbaa !1461
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %2, i32 0, i32 2, !dbg !8114
  %3 = load i64, ptr %hash, align 8, !dbg !8114, !tbaa !6744
  %call = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %0, ptr noundef %1, i64 noundef %3), !dbg !8114
  store ptr %call, ptr %res, align 8, !dbg !8113, !tbaa !1461
  %4 = load ptr, ptr %res, align 8, !dbg !8115, !tbaa !1461
  %cmp = icmp eq ptr %4, null, !dbg !8117
  br i1 %cmp, label %if.then, label %if.end, !dbg !8118

if.then:                                          ; preds = %entry
  call void @PyErr_Clear(), !dbg !8119
  br label %if.end, !dbg !8119

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %res, align 8, !dbg !8120, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #10, !dbg !8121
  ret ptr %5, !dbg !8122
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyInt_BoolEqObjC(ptr noundef %op1, ptr noundef %op2, i64 noundef %intval, i64 noundef %inplace) #3 !dbg !8123 {
entry:
  %retval = alloca i32, align 4
  %op1.addr = alloca ptr, align 8
  %op2.addr = alloca ptr, align 8
  %intval.addr = alloca i64, align 8
  %inplace.addr = alloca i64, align 8
  %unequal = alloca i32, align 4
  %uintval = alloca i64, align 8
  %size = alloca i64, align 8
  %digits = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %b = alloca i64, align 8
  %a = alloca double, align 8
  store ptr %op1, ptr %op1.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op1.addr, metadata !8127, metadata !DIExpression()), !dbg !8141
  store ptr %op2, ptr %op2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op2.addr, metadata !8128, metadata !DIExpression()), !dbg !8142
  store i64 %intval, ptr %intval.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %intval.addr, metadata !8129, metadata !DIExpression()), !dbg !8143
  store i64 %inplace, ptr %inplace.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %inplace.addr, metadata !8130, metadata !DIExpression()), !dbg !8144
  %0 = load i64, ptr %intval.addr, align 8, !dbg !8145, !tbaa !1836
  %1 = load i64, ptr %inplace.addr, align 8, !dbg !8146, !tbaa !1836
  %2 = load ptr, ptr %op1.addr, align 8, !dbg !8147, !tbaa !1461
  %3 = load ptr, ptr %op2.addr, align 8, !dbg !8149, !tbaa !1461
  %cmp = icmp eq ptr %2, %3, !dbg !8150
  br i1 %cmp, label %if.then, label %if.end, !dbg !8151

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !8152
  br label %return, !dbg !8152

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %op1.addr, align 8, !dbg !8154, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %4, ptr noundef @PyLong_Type), !dbg !8154
  %tobool = icmp ne i32 %call, 0, !dbg !8154
  %lnot = xor i1 %tobool, true, !dbg !8154
  %lnot1 = xor i1 %lnot, true, !dbg !8154
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8154
  %conv = sext i32 %lnot.ext to i64, !dbg !8154
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8154
  %tobool2 = icmp ne i64 %expval, 0, !dbg !8154
  br i1 %tobool2, label %if.then3, label %if.end90, !dbg !8155

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %unequal) #10, !dbg !8156
  tail call void @llvm.dbg.declare(metadata ptr %unequal, metadata !8131, metadata !DIExpression()), !dbg !8157
  call void @llvm.lifetime.start.p0(i64 8, ptr %uintval) #10, !dbg !8158
  tail call void @llvm.dbg.declare(metadata ptr %uintval, metadata !8134, metadata !DIExpression()), !dbg !8159
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !8160
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !8135, metadata !DIExpression()), !dbg !8161
  %5 = load ptr, ptr %op1.addr, align 8, !dbg !8162, !tbaa !1461
  %call4 = call i64 @Py_SIZE(ptr noundef %5), !dbg !8162
  %neg = sub i64 0, %call4, !dbg !8162
  %abscond = icmp slt i64 %call4, 0, !dbg !8162
  %abs = select i1 %abscond, i64 %neg, i64 %call4, !dbg !8162
  store i64 %abs, ptr %size, align 8, !dbg !8161, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #10, !dbg !8163
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !8136, metadata !DIExpression()), !dbg !8164
  %6 = load ptr, ptr %op1.addr, align 8, !dbg !8165, !tbaa !1461
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %6, i32 0, i32 1, !dbg !8165
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !8165
  store ptr %arraydecay, ptr %digits, align 8, !dbg !8164, !tbaa !1461
  %7 = load i64, ptr %intval.addr, align 8, !dbg !8166, !tbaa !1836
  %cmp5 = icmp eq i64 %7, 0, !dbg !8168
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !8169

if.then7:                                         ; preds = %if.then3
  %8 = load ptr, ptr %op1.addr, align 8, !dbg !8170, !tbaa !1461
  %call8 = call i64 @Py_SIZE(ptr noundef %8), !dbg !8170
  %cmp9 = icmp eq i64 %call8, 0, !dbg !8170
  %conv10 = zext i1 %cmp9 to i32, !dbg !8170
  %cmp11 = icmp eq i32 %conv10, 1, !dbg !8172
  %conv12 = zext i1 %cmp11 to i32, !dbg !8172
  store i32 %conv12, ptr %retval, align 4, !dbg !8173
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8173

if.else:                                          ; preds = %if.then3
  %9 = load i64, ptr %intval.addr, align 8, !dbg !8174, !tbaa !1836
  %cmp13 = icmp slt i64 %9, 0, !dbg !8176
  br i1 %cmp13, label %if.then15, label %if.else21, !dbg !8177

if.then15:                                        ; preds = %if.else
  %10 = load ptr, ptr %op1.addr, align 8, !dbg !8178, !tbaa !1461
  %call16 = call i64 @Py_SIZE(ptr noundef %10), !dbg !8178
  %cmp17 = icmp sge i64 %call16, 0, !dbg !8178
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !8181

if.then19:                                        ; preds = %if.then15
  store i32 0, ptr %retval, align 4, !dbg !8182
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8182

if.end20:                                         ; preds = %if.then15
  %11 = load i64, ptr %intval.addr, align 8, !dbg !8183, !tbaa !1836
  %sub = sub i64 0, %11, !dbg !8184
  store i64 %sub, ptr %intval.addr, align 8, !dbg !8185, !tbaa !1836
  br label %if.end27, !dbg !8186

if.else21:                                        ; preds = %if.else
  %12 = load ptr, ptr %op1.addr, align 8, !dbg !8187, !tbaa !1461
  %call22 = call i64 @Py_SIZE(ptr noundef %12), !dbg !8187
  %cmp23 = icmp slt i64 %call22, 0, !dbg !8187
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8190

if.then25:                                        ; preds = %if.else21
  store i32 0, ptr %retval, align 4, !dbg !8191
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8191

if.end26:                                         ; preds = %if.else21
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end20
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  %13 = load i64, ptr %intval.addr, align 8, !dbg !8192, !tbaa !1836
  store i64 %13, ptr %uintval, align 8, !dbg !8193, !tbaa !1836
  %14 = load i64, ptr %uintval, align 8, !dbg !8194, !tbaa !1836
  %shr = lshr i64 %14, 60, !dbg !8196
  %tobool29 = icmp ne i64 %shr, 0, !dbg !8196
  br i1 %tobool29, label %if.then30, label %if.else50, !dbg !8197

if.then30:                                        ; preds = %if.end28
  %15 = load i64, ptr %size, align 8, !dbg !8198, !tbaa !1836
  %cmp31 = icmp ne i64 %15, 3, !dbg !8200
  br i1 %cmp31, label %lor.end, label %lor.rhs, !dbg !8201

lor.rhs:                                          ; preds = %if.then30
  %16 = load ptr, ptr %digits, align 8, !dbg !8202, !tbaa !1461
  %arrayidx = getelementptr i32, ptr %16, i64 0, !dbg !8202
  %17 = load i32, ptr %arrayidx, align 4, !dbg !8202, !tbaa !1557
  %conv33 = zext i32 %17 to i64, !dbg !8202
  %18 = load i64, ptr %uintval, align 8, !dbg !8203, !tbaa !1836
  %and = and i64 %18, 1073741823, !dbg !8204
  %cmp34 = icmp ne i64 %conv33, %and, !dbg !8205
  %conv35 = zext i1 %cmp34 to i32, !dbg !8205
  %19 = load ptr, ptr %digits, align 8, !dbg !8206, !tbaa !1461
  %arrayidx36 = getelementptr i32, ptr %19, i64 1, !dbg !8206
  %20 = load i32, ptr %arrayidx36, align 4, !dbg !8206, !tbaa !1557
  %conv37 = zext i32 %20 to i64, !dbg !8206
  %21 = load i64, ptr %uintval, align 8, !dbg !8207, !tbaa !1836
  %shr38 = lshr i64 %21, 30, !dbg !8208
  %and39 = and i64 %shr38, 1073741823, !dbg !8209
  %cmp40 = icmp ne i64 %conv37, %and39, !dbg !8210
  %conv41 = zext i1 %cmp40 to i32, !dbg !8210
  %or = or i32 %conv35, %conv41, !dbg !8211
  %22 = load ptr, ptr %digits, align 8, !dbg !8212, !tbaa !1461
  %arrayidx42 = getelementptr i32, ptr %22, i64 2, !dbg !8212
  %23 = load i32, ptr %arrayidx42, align 4, !dbg !8212, !tbaa !1557
  %conv43 = zext i32 %23 to i64, !dbg !8212
  %24 = load i64, ptr %uintval, align 8, !dbg !8213, !tbaa !1836
  %shr44 = lshr i64 %24, 60, !dbg !8214
  %and45 = and i64 %shr44, 1073741823, !dbg !8215
  %cmp46 = icmp ne i64 %conv43, %and45, !dbg !8216
  %conv47 = zext i1 %cmp46 to i32, !dbg !8216
  %or48 = or i32 %or, %conv47, !dbg !8217
  %tobool49 = icmp ne i32 %or48, 0, !dbg !8201
  br label %lor.end, !dbg !8201

lor.end:                                          ; preds = %lor.rhs, %if.then30
  %25 = phi i1 [ true, %if.then30 ], [ %tobool49, %lor.rhs ]
  %lor.ext = zext i1 %25 to i32, !dbg !8201
  store i32 %lor.ext, ptr %unequal, align 4, !dbg !8218, !tbaa !1557
  br label %if.end84, !dbg !8219

if.else50:                                        ; preds = %if.end28
  %26 = load i64, ptr %uintval, align 8, !dbg !8220, !tbaa !1836
  %shr51 = lshr i64 %26, 30, !dbg !8222
  %tobool52 = icmp ne i64 %shr51, 0, !dbg !8222
  br i1 %tobool52, label %if.then53, label %if.else72, !dbg !8223

if.then53:                                        ; preds = %if.else50
  %27 = load i64, ptr %size, align 8, !dbg !8224, !tbaa !1836
  %cmp54 = icmp ne i64 %27, 2, !dbg !8226
  br i1 %cmp54, label %lor.end70, label %lor.rhs56, !dbg !8227

lor.rhs56:                                        ; preds = %if.then53
  %28 = load ptr, ptr %digits, align 8, !dbg !8228, !tbaa !1461
  %arrayidx57 = getelementptr i32, ptr %28, i64 0, !dbg !8228
  %29 = load i32, ptr %arrayidx57, align 4, !dbg !8228, !tbaa !1557
  %conv58 = zext i32 %29 to i64, !dbg !8228
  %30 = load i64, ptr %uintval, align 8, !dbg !8229, !tbaa !1836
  %and59 = and i64 %30, 1073741823, !dbg !8230
  %cmp60 = icmp ne i64 %conv58, %and59, !dbg !8231
  %conv61 = zext i1 %cmp60 to i32, !dbg !8231
  %31 = load ptr, ptr %digits, align 8, !dbg !8232, !tbaa !1461
  %arrayidx62 = getelementptr i32, ptr %31, i64 1, !dbg !8232
  %32 = load i32, ptr %arrayidx62, align 4, !dbg !8232, !tbaa !1557
  %conv63 = zext i32 %32 to i64, !dbg !8232
  %33 = load i64, ptr %uintval, align 8, !dbg !8233, !tbaa !1836
  %shr64 = lshr i64 %33, 30, !dbg !8234
  %and65 = and i64 %shr64, 1073741823, !dbg !8235
  %cmp66 = icmp ne i64 %conv63, %and65, !dbg !8236
  %conv67 = zext i1 %cmp66 to i32, !dbg !8236
  %or68 = or i32 %conv61, %conv67, !dbg !8237
  %tobool69 = icmp ne i32 %or68, 0, !dbg !8227
  br label %lor.end70, !dbg !8227

lor.end70:                                        ; preds = %lor.rhs56, %if.then53
  %34 = phi i1 [ true, %if.then53 ], [ %tobool69, %lor.rhs56 ]
  %lor.ext71 = zext i1 %34 to i32, !dbg !8227
  store i32 %lor.ext71, ptr %unequal, align 4, !dbg !8238, !tbaa !1557
  br label %if.end83, !dbg !8239

if.else72:                                        ; preds = %if.else50
  %35 = load i64, ptr %size, align 8, !dbg !8240, !tbaa !1836
  %cmp73 = icmp ne i64 %35, 1, !dbg !8241
  br i1 %cmp73, label %lor.end81, label %lor.rhs75, !dbg !8242

lor.rhs75:                                        ; preds = %if.else72
  %36 = load ptr, ptr %digits, align 8, !dbg !8243, !tbaa !1461
  %arrayidx76 = getelementptr i32, ptr %36, i64 0, !dbg !8243
  %37 = load i32, ptr %arrayidx76, align 4, !dbg !8243, !tbaa !1557
  %conv77 = zext i32 %37 to i64, !dbg !8244
  %38 = load i64, ptr %uintval, align 8, !dbg !8245, !tbaa !1836
  %and78 = and i64 %38, 1073741823, !dbg !8246
  %cmp79 = icmp ne i64 %conv77, %and78, !dbg !8247
  br label %lor.end81, !dbg !8242

lor.end81:                                        ; preds = %lor.rhs75, %if.else72
  %39 = phi i1 [ true, %if.else72 ], [ %cmp79, %lor.rhs75 ]
  %lor.ext82 = zext i1 %39 to i32, !dbg !8242
  store i32 %lor.ext82, ptr %unequal, align 4, !dbg !8248, !tbaa !1557
  br label %if.end83

if.end83:                                         ; preds = %lor.end81, %lor.end70
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %lor.end
  %40 = load i32, ptr %unequal, align 4, !dbg !8249, !tbaa !1557
  %cmp85 = icmp eq i32 %40, 0, !dbg !8250
  %conv86 = zext i1 %cmp85 to i32, !dbg !8250
  store i32 %conv86, ptr %retval, align 4, !dbg !8251
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8251

cleanup:                                          ; preds = %if.end84, %if.then25, %if.then19, %if.then7
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #10, !dbg !8252
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !8252
  call void @llvm.lifetime.end.p0(i64 8, ptr %uintval) #10, !dbg !8252
  call void @llvm.lifetime.end.p0(i64 4, ptr %unequal) #10, !dbg !8252
  br label %return

if.end90:                                         ; preds = %if.end
  %41 = load ptr, ptr %op1.addr, align 8, !dbg !8253, !tbaa !1461
  %call91 = call i32 @Py_IS_TYPE(ptr noundef %41, ptr noundef @PyFloat_Type), !dbg !8253
  %tobool92 = icmp ne i32 %call91, 0, !dbg !8253
  br i1 %tobool92, label %if.then93, label %if.end99, !dbg !8254

if.then93:                                        ; preds = %if.end90
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #10, !dbg !8255
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !8137, metadata !DIExpression()), !dbg !8256
  %42 = load i64, ptr %intval.addr, align 8, !dbg !8257, !tbaa !1836
  store i64 %42, ptr %b, align 8, !dbg !8256, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #10, !dbg !8258
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !8140, metadata !DIExpression()), !dbg !8259
  %43 = load ptr, ptr %op1.addr, align 8, !dbg !8260, !tbaa !1461
  %ob_fval = getelementptr inbounds %struct.PyFloatObject, ptr %43, i32 0, i32 1, !dbg !8260
  %44 = load double, ptr %ob_fval, align 8, !dbg !8260, !tbaa !7355
  store double %44, ptr %a, align 8, !dbg !8259, !tbaa !7358
  %45 = load double, ptr %a, align 8, !dbg !8261, !tbaa !7358
  %46 = load i64, ptr %b, align 8, !dbg !8262, !tbaa !1836
  %conv94 = sitofp i64 %46 to double, !dbg !8263
  %cmp95 = fcmp oeq double %45, %conv94, !dbg !8264
  %conv96 = zext i1 %cmp95 to i32, !dbg !8264
  store i32 %conv96, ptr %retval, align 4, !dbg !8265
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #10, !dbg !8266
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #10, !dbg !8266
  br label %return

if.end99:                                         ; preds = %if.end90
  %47 = load ptr, ptr %op1.addr, align 8, !dbg !8267, !tbaa !1461
  %48 = load ptr, ptr %op2.addr, align 8, !dbg !8268, !tbaa !1461
  %call100 = call ptr @PyObject_RichCompare(ptr noundef %47, ptr noundef %48, i32 noundef 2), !dbg !8269
  %call101 = call i32 @__Pyx_PyObject_IsTrueAndDecref(ptr noundef %call100), !dbg !8270
  store i32 %call101, ptr %retval, align 4, !dbg !8271
  br label %return, !dbg !8271

return:                                           ; preds = %if.end99, %if.then93, %cleanup, %if.then
  %49 = load i32, ptr %retval, align 4, !dbg !8272
  ret i32 %49, !dbg !8272
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyUnicode_GET_LENGTH(ptr noundef %op) #3 !dbg !8273 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  %0 = load ptr, ptr %op.addr, align 8, !dbg !8277, !tbaa !1461
  %length = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 1, !dbg !8278
  %1 = load i64, ptr %length, align 8, !dbg !8278, !tbaa !8279
  ret i64 %1, !dbg !8280
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_FormatSimpleAndDecref(ptr noundef %s, ptr noundef %f) #3 !dbg !8281 {
entry:
  %retval = alloca ptr, align 8
  %s.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  store ptr %s, ptr %s.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !8283, metadata !DIExpression()), !dbg !8285
  store ptr %f, ptr %f.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !8284, metadata !DIExpression()), !dbg !8286
  %0 = load ptr, ptr %s.addr, align 8, !dbg !8287, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !8287
  %lnot = xor i1 %tobool, true, !dbg !8287
  %lnot1 = xor i1 %lnot, true, !dbg !8287
  %lnot2 = xor i1 %lnot1, true, !dbg !8287
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8287
  %conv = sext i32 %lnot.ext to i64, !dbg !8287
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8287
  %tobool3 = icmp ne i64 %expval, 0, !dbg !8287
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8289

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !8290
  br label %return, !dbg !8290

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %s.addr, align 8, !dbg !8291, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyUnicode_Type), !dbg !8291
  %tobool4 = icmp ne i32 %call, 0, !dbg !8291
  %lnot5 = xor i1 %tobool4, true, !dbg !8291
  %lnot7 = xor i1 %lnot5, true, !dbg !8291
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8291
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !8291
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !8291
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !8291
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8293

if.then12:                                        ; preds = %if.end
  %2 = load ptr, ptr %s.addr, align 8, !dbg !8294, !tbaa !1461
  store ptr %2, ptr %retval, align 8, !dbg !8295
  br label %return, !dbg !8295

if.end13:                                         ; preds = %if.end
  %3 = load ptr, ptr %s.addr, align 8, !dbg !8296, !tbaa !1461
  %4 = load ptr, ptr %f.addr, align 8, !dbg !8297, !tbaa !1461
  %call14 = call ptr @__Pyx_PyObject_FormatAndDecref(ptr noundef %3, ptr noundef %4), !dbg !8298
  store ptr %call14, ptr %retval, align 8, !dbg !8299
  br label %return, !dbg !8299

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %5 = load ptr, ptr %retval, align 8, !dbg !8300
  ret ptr %5, !dbg !8300
}

declare !dbg !8301 ptr @PyObject_Repr(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %op) #3 !dbg !8302 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %kind = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.lifetime.start.p0(i64 4, ptr %kind) #10, !dbg !8309
  tail call void @llvm.dbg.declare(metadata ptr %kind, metadata !8307, metadata !DIExpression()), !dbg !8310
  %0 = load ptr, ptr %op.addr, align 8, !dbg !8311, !tbaa !1461
  %call = call i32 @PyUnicode_IS_ASCII(ptr noundef %0), !dbg !8311
  %tobool = icmp ne i32 %call, 0, !dbg !8311
  br i1 %tobool, label %if.then, label %if.end, !dbg !8313

if.then:                                          ; preds = %entry
  store i32 127, ptr %retval, align 4, !dbg !8314
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8314

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !8316, !tbaa !1461
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %1, i32 0, i32 3, !dbg !8316
  %bf.load = load i32, ptr %state, align 8, !dbg !8316
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !8316
  %bf.clear = and i32 %bf.lshr, 7, !dbg !8316
  store i32 %bf.clear, ptr %kind, align 4, !dbg !8317, !tbaa !1557
  %2 = load i32, ptr %kind, align 4, !dbg !8318, !tbaa !1557
  %cmp = icmp eq i32 %2, 1, !dbg !8320
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8321

if.then1:                                         ; preds = %if.end
  store i32 255, ptr %retval, align 4, !dbg !8322
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8322

if.end2:                                          ; preds = %if.end
  %3 = load i32, ptr %kind, align 4, !dbg !8324, !tbaa !1557
  %cmp3 = icmp eq i32 %3, 2, !dbg !8326
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8327

if.then4:                                         ; preds = %if.end2
  store i32 65535, ptr %retval, align 4, !dbg !8328
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8328

if.end5:                                          ; preds = %if.end2
  store i32 1114111, ptr %retval, align 4, !dbg !8330
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8330

cleanup:                                          ; preds = %if.end5, %if.then4, %if.then1, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %kind) #10, !dbg !8331
  %4 = load i32, ptr %retval, align 4, !dbg !8331
  ret i32 %4, !dbg !8331
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyUnicode_Join(ptr noundef %value_tuple, i64 noundef %value_count, i64 noundef %result_ulength, i32 noundef %max_char) #0 !dbg !8332 {
entry:
  %retval = alloca ptr, align 8
  %value_tuple.addr = alloca ptr, align 8
  %value_count.addr = alloca i64, align 8
  %result_ulength.addr = alloca i64, align 8
  %max_char.addr = alloca i32, align 4
  %result_uval = alloca ptr, align 8
  %result_ukind = alloca i32, align 4
  %kind_shift = alloca i32, align 4
  %i = alloca i64, align 8
  %char_pos = alloca i64, align 8
  %result_udata = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %ukind = alloca i32, align 4
  %ulength = alloca i64, align 8
  %udata = alloca ptr, align 8
  %uval = alloca ptr, align 8
  store ptr %value_tuple, ptr %value_tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value_tuple.addr, metadata !8336, metadata !DIExpression()), !dbg !8355
  store i64 %value_count, ptr %value_count.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %value_count.addr, metadata !8337, metadata !DIExpression()), !dbg !8356
  store i64 %result_ulength, ptr %result_ulength.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %result_ulength.addr, metadata !8338, metadata !DIExpression()), !dbg !8357
  store i32 %max_char, ptr %max_char.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %max_char.addr, metadata !8339, metadata !DIExpression()), !dbg !8358
  call void @llvm.lifetime.start.p0(i64 8, ptr %result_uval) #10, !dbg !8359
  tail call void @llvm.dbg.declare(metadata ptr %result_uval, metadata !8340, metadata !DIExpression()), !dbg !8360
  call void @llvm.lifetime.start.p0(i64 4, ptr %result_ukind) #10, !dbg !8361
  tail call void @llvm.dbg.declare(metadata ptr %result_ukind, metadata !8341, metadata !DIExpression()), !dbg !8362
  call void @llvm.lifetime.start.p0(i64 4, ptr %kind_shift) #10, !dbg !8361
  tail call void @llvm.dbg.declare(metadata ptr %kind_shift, metadata !8342, metadata !DIExpression()), !dbg !8363
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !8364
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !8343, metadata !DIExpression()), !dbg !8365
  call void @llvm.lifetime.start.p0(i64 8, ptr %char_pos) #10, !dbg !8364
  tail call void @llvm.dbg.declare(metadata ptr %char_pos, metadata !8344, metadata !DIExpression()), !dbg !8366
  call void @llvm.lifetime.start.p0(i64 8, ptr %result_udata) #10, !dbg !8367
  tail call void @llvm.dbg.declare(metadata ptr %result_udata, metadata !8345, metadata !DIExpression()), !dbg !8368
  %0 = load i32, ptr %max_char.addr, align 4, !dbg !8369, !tbaa !1557
  %1 = load i64, ptr %result_ulength.addr, align 8, !dbg !8370, !tbaa !1836
  %2 = load i32, ptr %max_char.addr, align 4, !dbg !8371, !tbaa !1557
  %call = call ptr @PyUnicode_New(i64 noundef %1, i32 noundef %2), !dbg !8372
  store ptr %call, ptr %result_uval, align 8, !dbg !8373, !tbaa !1461
  %3 = load ptr, ptr %result_uval, align 8, !dbg !8374, !tbaa !1461
  %tobool = icmp ne ptr %3, null, !dbg !8374
  %lnot = xor i1 %tobool, true, !dbg !8374
  %lnot1 = xor i1 %lnot, true, !dbg !8374
  %lnot2 = xor i1 %lnot1, true, !dbg !8374
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8374
  %conv = sext i32 %lnot.ext to i64, !dbg !8374
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8374
  %tobool3 = icmp ne i64 %expval, 0, !dbg !8374
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8376

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !8377
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !8377

if.end:                                           ; preds = %entry
  %4 = load i32, ptr %max_char.addr, align 4, !dbg !8378, !tbaa !1557
  %cmp = icmp ule i32 %4, 255, !dbg !8379
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8380

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !8380

cond.false:                                       ; preds = %if.end
  %5 = load i32, ptr %max_char.addr, align 4, !dbg !8381, !tbaa !1557
  %cmp5 = icmp ule i32 %5, 65535, !dbg !8382
  %6 = zext i1 %cmp5 to i64, !dbg !8383
  %cond = select i1 %cmp5, i32 2, i32 4, !dbg !8383
  br label %cond.end, !dbg !8380

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond7 = phi i32 [ 1, %cond.true ], [ %cond, %cond.false ], !dbg !8380
  store i32 %cond7, ptr %result_ukind, align 4, !dbg !8384, !tbaa !1557
  %7 = load i32, ptr %result_ukind, align 4, !dbg !8385, !tbaa !1557
  %cmp8 = icmp eq i32 %7, 4, !dbg !8386
  br i1 %cmp8, label %cond.true10, label %cond.false11, !dbg !8387

cond.true10:                                      ; preds = %cond.end
  br label %cond.end12, !dbg !8387

cond.false11:                                     ; preds = %cond.end
  %8 = load i32, ptr %result_ukind, align 4, !dbg !8388, !tbaa !1557
  %sub = sub i32 %8, 1, !dbg !8389
  br label %cond.end12, !dbg !8387

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ 2, %cond.true10 ], [ %sub, %cond.false11 ], !dbg !8387
  store i32 %cond13, ptr %kind_shift, align 4, !dbg !8390, !tbaa !1557
  %9 = load ptr, ptr %result_uval, align 8, !dbg !8391, !tbaa !1461
  %call14 = call ptr @PyUnicode_DATA(ptr noundef %9), !dbg !8391
  store ptr %call14, ptr %result_udata, align 8, !dbg !8392, !tbaa !1461
  store i64 0, ptr %char_pos, align 8, !dbg !8393, !tbaa !1836
  store i64 0, ptr %i, align 8, !dbg !8394, !tbaa !1836
  br label %for.cond, !dbg !8395

for.cond:                                         ; preds = %for.inc, %cond.end12
  %10 = load i64, ptr %i, align 8, !dbg !8396, !tbaa !1836
  %11 = load i64, ptr %value_count.addr, align 8, !dbg !8397, !tbaa !1836
  %cmp15 = icmp slt i64 %10, %11, !dbg !8398
  br i1 %cmp15, label %for.body, label %for.end, !dbg !8399

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %ukind) #10, !dbg !8400
  tail call void @llvm.dbg.declare(metadata ptr %ukind, metadata !8346, metadata !DIExpression()), !dbg !8401
  call void @llvm.lifetime.start.p0(i64 8, ptr %ulength) #10, !dbg !8402
  tail call void @llvm.dbg.declare(metadata ptr %ulength, metadata !8350, metadata !DIExpression()), !dbg !8403
  call void @llvm.lifetime.start.p0(i64 8, ptr %udata) #10, !dbg !8404
  tail call void @llvm.dbg.declare(metadata ptr %udata, metadata !8351, metadata !DIExpression()), !dbg !8405
  call void @llvm.lifetime.start.p0(i64 8, ptr %uval) #10, !dbg !8406
  tail call void @llvm.dbg.declare(metadata ptr %uval, metadata !8352, metadata !DIExpression()), !dbg !8407
  %12 = load ptr, ptr %value_tuple.addr, align 8, !dbg !8408, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %12, i32 0, i32 1, !dbg !8408
  %13 = load i64, ptr %i, align 8, !dbg !8408, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %13, !dbg !8408
  %14 = load ptr, ptr %arrayidx, align 8, !dbg !8408, !tbaa !1461
  store ptr %14, ptr %uval, align 8, !dbg !8407, !tbaa !1461
  %15 = load ptr, ptr %uval, align 8, !dbg !8409, !tbaa !1461
  %call17 = call i32 @PyUnicode_IS_READY(ptr noundef %15), !dbg !8409
  %tobool18 = icmp ne i32 %call17, 0, !dbg !8409
  %lnot19 = xor i1 %tobool18, true, !dbg !8409
  %lnot21 = xor i1 %lnot19, true, !dbg !8409
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !8409
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !8409
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !8409
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !8409
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8409

cond.true26:                                      ; preds = %for.body
  br label %cond.end29, !dbg !8409

cond.false27:                                     ; preds = %for.body
  %16 = load ptr, ptr %uval, align 8, !dbg !8409, !tbaa !1461
  %call28 = call i32 @_PyUnicode_Ready(ptr noundef %16), !dbg !8409
  br label %cond.end29, !dbg !8409

cond.end29:                                       ; preds = %cond.false27, %cond.true26
  %cond30 = phi i32 [ 0, %cond.true26 ], [ %call28, %cond.false27 ], !dbg !8409
  %tobool31 = icmp ne i32 %cond30, 0, !dbg !8409
  %lnot32 = xor i1 %tobool31, true, !dbg !8409
  %lnot34 = xor i1 %lnot32, true, !dbg !8409
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !8409
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !8409
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0), !dbg !8409
  %tobool38 = icmp ne i64 %expval37, 0, !dbg !8409
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !8411

if.then39:                                        ; preds = %cond.end29
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8412

if.end40:                                         ; preds = %cond.end29
  %17 = load ptr, ptr %uval, align 8, !dbg !8413, !tbaa !1461
  %call41 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %17), !dbg !8413
  store i64 %call41, ptr %ulength, align 8, !dbg !8414, !tbaa !1836
  %18 = load i64, ptr %ulength, align 8, !dbg !8415, !tbaa !1836
  %tobool42 = icmp ne i64 %18, 0, !dbg !8415
  %lnot43 = xor i1 %tobool42, true, !dbg !8415
  %lnot45 = xor i1 %lnot43, true, !dbg !8415
  %lnot47 = xor i1 %lnot45, true, !dbg !8415
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !8415
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !8415
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0), !dbg !8415
  %tobool51 = icmp ne i64 %expval50, 0, !dbg !8415
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !8417

if.then52:                                        ; preds = %if.end40
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8418

if.end53:                                         ; preds = %if.end40
  %19 = load i32, ptr %kind_shift, align 4, !dbg !8419, !tbaa !1557
  %sh_prom = zext i32 %19 to i64, !dbg !8419
  %shr = ashr i64 9223372036854775807, %sh_prom, !dbg !8419
  %20 = load i64, ptr %ulength, align 8, !dbg !8419, !tbaa !1836
  %sub54 = sub i64 %shr, %20, !dbg !8419
  %21 = load i64, ptr %char_pos, align 8, !dbg !8419, !tbaa !1836
  %cmp55 = icmp slt i64 %sub54, %21, !dbg !8419
  %lnot57 = xor i1 %cmp55, true, !dbg !8419
  %lnot59 = xor i1 %lnot57, true, !dbg !8419
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !8419
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !8419
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 0), !dbg !8419
  %tobool63 = icmp ne i64 %expval62, 0, !dbg !8419
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !8421

if.then64:                                        ; preds = %if.end53
  store i32 6, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8422

if.end65:                                         ; preds = %if.end53
  %22 = load ptr, ptr %uval, align 8, !dbg !8423, !tbaa !1461
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %22, i32 0, i32 3, !dbg !8423
  %bf.load = load i32, ptr %state, align 8, !dbg !8423
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !8423
  %bf.clear = and i32 %bf.lshr, 7, !dbg !8423
  store i32 %bf.clear, ptr %ukind, align 4, !dbg !8424, !tbaa !1557
  %23 = load ptr, ptr %uval, align 8, !dbg !8425, !tbaa !1461
  %call66 = call ptr @PyUnicode_DATA(ptr noundef %23), !dbg !8425
  store ptr %call66, ptr %udata, align 8, !dbg !8426, !tbaa !1461
  %24 = load i32, ptr %ukind, align 4, !dbg !8427, !tbaa !1557
  %25 = load i32, ptr %result_ukind, align 4, !dbg !8429, !tbaa !1557
  %cmp67 = icmp eq i32 %24, %25, !dbg !8430
  br i1 %cmp67, label %if.then69, label %if.else, !dbg !8431

if.then69:                                        ; preds = %if.end65
  %26 = load ptr, ptr %result_udata, align 8, !dbg !8432, !tbaa !1461
  %27 = load i64, ptr %char_pos, align 8, !dbg !8434, !tbaa !1836
  %28 = load i32, ptr %kind_shift, align 4, !dbg !8435, !tbaa !1557
  %sh_prom70 = zext i32 %28 to i64, !dbg !8436
  %shl = shl i64 %27, %sh_prom70, !dbg !8436
  %add.ptr = getelementptr i8, ptr %26, i64 %shl, !dbg !8437
  %29 = load ptr, ptr %udata, align 8, !dbg !8438, !tbaa !1461
  %30 = load i64, ptr %ulength, align 8, !dbg !8439, !tbaa !1836
  %31 = load i32, ptr %kind_shift, align 4, !dbg !8440, !tbaa !1557
  %sh_prom71 = zext i32 %31 to i64, !dbg !8441
  %shl72 = shl i64 %30, %sh_prom71, !dbg !8441
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr, ptr align 1 %29, i64 %shl72, i1 false), !dbg !8442
  br label %if.end73, !dbg !8443

if.else:                                          ; preds = %if.end65
  %32 = load ptr, ptr %result_uval, align 8, !dbg !8444, !tbaa !1461
  %33 = load i64, ptr %char_pos, align 8, !dbg !8446, !tbaa !1836
  %34 = load ptr, ptr %uval, align 8, !dbg !8447, !tbaa !1461
  %35 = load i64, ptr %ulength, align 8, !dbg !8448, !tbaa !1836
  call void @_PyUnicode_FastCopyCharacters(ptr noundef %32, i64 noundef %33, ptr noundef %34, i64 noundef 0, i64 noundef %35), !dbg !8449
  br label %if.end73

if.end73:                                         ; preds = %if.else, %if.then69
  %36 = load i64, ptr %ulength, align 8, !dbg !8450, !tbaa !1836
  %37 = load i64, ptr %char_pos, align 8, !dbg !8451, !tbaa !1836
  %add = add i64 %37, %36, !dbg !8451
  store i64 %add, ptr %char_pos, align 8, !dbg !8451, !tbaa !1836
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8452
  br label %cleanup, !dbg !8452

cleanup:                                          ; preds = %if.then64, %if.then39, %if.end73, %if.then52
  call void @llvm.lifetime.end.p0(i64 8, ptr %uval) #10, !dbg !8452
  call void @llvm.lifetime.end.p0(i64 8, ptr %udata) #10, !dbg !8452
  call void @llvm.lifetime.end.p0(i64 8, ptr %ulength) #10, !dbg !8452
  call void @llvm.lifetime.end.p0(i64 4, ptr %ukind) #10, !dbg !8452
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup77 [
    i32 0, label %cleanup.cont
    i32 4, label %for.inc
    i32 6, label %overflow
    i32 5, label %bad
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !8453

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %38 = load i64, ptr %i, align 8, !dbg !8454, !tbaa !1836
  %inc = add i64 %38, 1, !dbg !8454
  store i64 %inc, ptr %i, align 8, !dbg !8454, !tbaa !1836
  br label %for.cond, !dbg !8455, !llvm.loop !8456

for.end:                                          ; preds = %for.cond
  %39 = load ptr, ptr %result_uval, align 8, !dbg !8458, !tbaa !1461
  store ptr %39, ptr %retval, align 8, !dbg !8459
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !8459

overflow:                                         ; preds = %cleanup
  tail call void @llvm.dbg.label(metadata !8353), !dbg !8460
  %40 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !8461, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %40, ptr noundef @.str.38), !dbg !8462
  br label %bad, !dbg !8462

bad:                                              ; preds = %overflow, %cleanup
  tail call void @llvm.dbg.label(metadata !8354), !dbg !8463
  %41 = load ptr, ptr %result_uval, align 8, !dbg !8464, !tbaa !1461
  call void @Py_DECREF(ptr noundef %41), !dbg !8464
  store ptr null, ptr %retval, align 8, !dbg !8465
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !8465

cleanup77:                                        ; preds = %bad, %for.end, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result_udata) #10, !dbg !8466
  call void @llvm.lifetime.end.p0(i64 8, ptr %char_pos) #10, !dbg !8466
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !8466
  call void @llvm.lifetime.end.p0(i64 4, ptr %kind_shift) #10, !dbg !8466
  call void @llvm.lifetime.end.p0(i64 4, ptr %result_ukind) #10, !dbg !8466
  call void @llvm.lifetime.end.p0(i64 8, ptr %result_uval) #10, !dbg !8466
  %42 = load ptr, ptr %retval, align 8, !dbg !8466
  ret ptr %42, !dbg !8466
}

declare !dbg !8467 i32 @PyDict_DelItem(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyInt_SubtractObjC(ptr noundef %op1, ptr noundef %op2, i64 noundef %intval, i32 noundef %inplace, i32 noundef %zerodivision_check) #0 !dbg !8468 {
entry:
  %retval = alloca ptr, align 8
  %op1.addr = alloca ptr, align 8
  %op2.addr = alloca ptr, align 8
  %intval.addr = alloca i64, align 8
  %inplace.addr = alloca i32, align 4
  %zerodivision_check.addr = alloca i32, align 4
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %x = alloca i64, align 8
  %llb = alloca i64, align 8
  %lla = alloca i64, align 8
  %llx = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %digits = alloca ptr, align 8
  %size = alloca i64, align 8
  %b80 = alloca i64, align 8
  %a81 = alloca double, align 8
  %result = alloca double, align 8
  store ptr %op1, ptr %op1.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op1.addr, metadata !8470, metadata !DIExpression()), !dbg !8493
  store ptr %op2, ptr %op2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op2.addr, metadata !8471, metadata !DIExpression()), !dbg !8494
  store i64 %intval, ptr %intval.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %intval.addr, metadata !8472, metadata !DIExpression()), !dbg !8495
  store i32 %inplace, ptr %inplace.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %inplace.addr, metadata !8473, metadata !DIExpression()), !dbg !8496
  store i32 %zerodivision_check, ptr %zerodivision_check.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %zerodivision_check.addr, metadata !8474, metadata !DIExpression()), !dbg !8497
  %0 = load i64, ptr %intval.addr, align 8, !dbg !8498, !tbaa !1836
  %1 = load i32, ptr %inplace.addr, align 4, !dbg !8499, !tbaa !1557
  %2 = load i32, ptr %zerodivision_check.addr, align 4, !dbg !8500, !tbaa !1557
  %3 = load ptr, ptr %op1.addr, align 8, !dbg !8501, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %3, ptr noundef @PyLong_Type), !dbg !8501
  %tobool = icmp ne i32 %call, 0, !dbg !8501
  %lnot = xor i1 %tobool, true, !dbg !8501
  %lnot1 = xor i1 %lnot, true, !dbg !8501
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8501
  %conv = sext i32 %lnot.ext to i64, !dbg !8501
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8501
  %tobool2 = icmp ne i64 %expval, 0, !dbg !8501
  br i1 %tobool2, label %if.then, label %if.end76, !dbg !8502

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #10, !dbg !8503
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !8475, metadata !DIExpression()), !dbg !8504
  %4 = load i64, ptr %intval.addr, align 8, !dbg !8505, !tbaa !1836
  store i64 %4, ptr %b, align 8, !dbg !8504, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #10, !dbg !8506
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !8478, metadata !DIExpression()), !dbg !8507
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #10, !dbg !8506
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !8479, metadata !DIExpression()), !dbg !8508
  call void @llvm.lifetime.start.p0(i64 8, ptr %llb) #10, !dbg !8509
  tail call void @llvm.dbg.declare(metadata ptr %llb, metadata !8480, metadata !DIExpression()), !dbg !8510
  %5 = load i64, ptr %intval.addr, align 8, !dbg !8511, !tbaa !1836
  store i64 %5, ptr %llb, align 8, !dbg !8510, !tbaa !7266
  call void @llvm.lifetime.start.p0(i64 8, ptr %lla) #10, !dbg !8512
  tail call void @llvm.dbg.declare(metadata ptr %lla, metadata !8481, metadata !DIExpression()), !dbg !8513
  call void @llvm.lifetime.start.p0(i64 8, ptr %llx) #10, !dbg !8512
  tail call void @llvm.dbg.declare(metadata ptr %llx, metadata !8482, metadata !DIExpression()), !dbg !8514
  %6 = load ptr, ptr %op1.addr, align 8, !dbg !8515, !tbaa !1461
  %call3 = call i64 @Py_SIZE(ptr noundef %6), !dbg !8515
  %cmp = icmp eq i64 %call3, 0, !dbg !8515
  %lnot5 = xor i1 %cmp, true, !dbg !8515
  %lnot7 = xor i1 %lnot5, true, !dbg !8515
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8515
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !8515
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !8515
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !8515
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !8517

if.then12:                                        ; preds = %if.then
  %7 = load i64, ptr %intval.addr, align 8, !dbg !8518, !tbaa !1836
  %sub = sub i64 0, %7, !dbg !8520
  %call13 = call ptr @PyLong_FromLong(i64 noundef %sub), !dbg !8521
  store ptr %call13, ptr %retval, align 8, !dbg !8522
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !8522

if.end:                                           ; preds = %if.then
  %8 = load ptr, ptr %op1.addr, align 8, !dbg !8523, !tbaa !1461
  %call14 = call i64 @Py_SIZE(ptr noundef %8), !dbg !8523
  %cmp15 = icmp eq i64 %call14, 0, !dbg !8523
  br i1 %cmp15, label %lor.end, label %lor.lhs.false, !dbg !8523

lor.lhs.false:                                    ; preds = %if.end
  %9 = load ptr, ptr %op1.addr, align 8, !dbg !8523, !tbaa !1461
  %call17 = call i64 @Py_SIZE(ptr noundef %9), !dbg !8523
  %cmp18 = icmp eq i64 %call17, 1, !dbg !8523
  br i1 %cmp18, label %lor.end, label %lor.rhs, !dbg !8523

lor.rhs:                                          ; preds = %lor.lhs.false
  %10 = load ptr, ptr %op1.addr, align 8, !dbg !8523, !tbaa !1461
  %call20 = call i64 @Py_SIZE(ptr noundef %10), !dbg !8523
  %cmp21 = icmp eq i64 %call20, -1, !dbg !8523
  br label %lor.end, !dbg !8523

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end
  %11 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end ], [ %cmp21, %lor.rhs ]
  %lnot23 = xor i1 %11, true, !dbg !8523
  %lnot25 = xor i1 %lnot23, true, !dbg !8523
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !8523
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !8523
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 1), !dbg !8523
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !8523
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !8524

if.then30:                                        ; preds = %lor.end
  %12 = load ptr, ptr %op1.addr, align 8, !dbg !8525, !tbaa !1461
  %call31 = call i64 @Py_SIZE(ptr noundef %12), !dbg !8525
  %cmp32 = icmp eq i64 %call31, 0, !dbg !8525
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !8525

cond.true:                                        ; preds = %if.then30
  br label %cond.end42, !dbg !8525

cond.false:                                       ; preds = %if.then30
  %13 = load ptr, ptr %op1.addr, align 8, !dbg !8525, !tbaa !1461
  %call34 = call i64 @Py_SIZE(ptr noundef %13), !dbg !8525
  %cmp35 = icmp slt i64 %call34, 0, !dbg !8525
  br i1 %cmp35, label %cond.true37, label %cond.false39, !dbg !8525

cond.true37:                                      ; preds = %cond.false
  %14 = load ptr, ptr %op1.addr, align 8, !dbg !8525, !tbaa !1461
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %14, i32 0, i32 1, !dbg !8525
  %arrayidx = getelementptr [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !8525
  %15 = load i32, ptr %arrayidx, align 8, !dbg !8525, !tbaa !1557
  %sub38 = sub i32 0, %15, !dbg !8525
  br label %cond.end, !dbg !8525

cond.false39:                                     ; preds = %cond.false
  %16 = load ptr, ptr %op1.addr, align 8, !dbg !8525, !tbaa !1461
  %ob_digit40 = getelementptr inbounds %struct._longobject, ptr %16, i32 0, i32 1, !dbg !8525
  %arrayidx41 = getelementptr [1 x i32], ptr %ob_digit40, i64 0, i64 0, !dbg !8525
  %17 = load i32, ptr %arrayidx41, align 8, !dbg !8525, !tbaa !1557
  br label %cond.end, !dbg !8525

cond.end:                                         ; preds = %cond.false39, %cond.true37
  %cond = phi i32 [ %sub38, %cond.true37 ], [ %17, %cond.false39 ], !dbg !8525
  br label %cond.end42, !dbg !8525

cond.end42:                                       ; preds = %cond.end, %cond.true
  %cond43 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !8525
  %conv44 = sext i32 %cond43 to i64, !dbg !8525
  store i64 %conv44, ptr %a, align 8, !dbg !8527, !tbaa !1836
  br label %if.end65, !dbg !8528

if.else:                                          ; preds = %lor.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #10, !dbg !8529
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !8483, metadata !DIExpression()), !dbg !8530
  %18 = load ptr, ptr %op1.addr, align 8, !dbg !8531, !tbaa !1461
  %ob_digit45 = getelementptr inbounds %struct._longobject, ptr %18, i32 0, i32 1, !dbg !8531
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit45, i64 0, i64 0, !dbg !8531
  store ptr %arraydecay, ptr %digits, align 8, !dbg !8530, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !8532
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !8486, metadata !DIExpression()), !dbg !8533
  %19 = load ptr, ptr %op1.addr, align 8, !dbg !8534, !tbaa !1461
  %call46 = call i64 @Py_SIZE(ptr noundef %19), !dbg !8534
  store i64 %call46, ptr %size, align 8, !dbg !8533, !tbaa !1836
  %20 = load i64, ptr %size, align 8, !dbg !8535, !tbaa !1836
  switch i64 %20, label %sw.default [
    i64 -2, label %sw.bb
    i64 2, label %sw.bb52
    i64 -3, label %sw.bb59
    i64 3, label %sw.bb60
    i64 -4, label %sw.bb61
    i64 4, label %sw.bb62
  ], !dbg !8536

sw.bb:                                            ; preds = %if.else
  %21 = load ptr, ptr %digits, align 8, !dbg !8537, !tbaa !1461
  %arrayidx47 = getelementptr i32, ptr %21, i64 1, !dbg !8537
  %22 = load i32, ptr %arrayidx47, align 4, !dbg !8537, !tbaa !1557
  %conv48 = zext i32 %22 to i64, !dbg !8541
  %shl = shl i64 %conv48, 30, !dbg !8542
  %23 = load ptr, ptr %digits, align 8, !dbg !8543, !tbaa !1461
  %arrayidx49 = getelementptr i32, ptr %23, i64 0, !dbg !8543
  %24 = load i32, ptr %arrayidx49, align 4, !dbg !8543, !tbaa !1557
  %conv50 = zext i32 %24 to i64, !dbg !8544
  %or = or i64 %shl, %conv50, !dbg !8545
  %sub51 = sub i64 0, %or, !dbg !8546
  store i64 %sub51, ptr %a, align 8, !dbg !8547, !tbaa !1836
  br label %sw.epilog, !dbg !8548

sw.bb52:                                          ; preds = %if.else
  %25 = load ptr, ptr %digits, align 8, !dbg !8549, !tbaa !1461
  %arrayidx53 = getelementptr i32, ptr %25, i64 1, !dbg !8549
  %26 = load i32, ptr %arrayidx53, align 4, !dbg !8549, !tbaa !1557
  %conv54 = zext i32 %26 to i64, !dbg !8552
  %shl55 = shl i64 %conv54, 30, !dbg !8553
  %27 = load ptr, ptr %digits, align 8, !dbg !8554, !tbaa !1461
  %arrayidx56 = getelementptr i32, ptr %27, i64 0, !dbg !8554
  %28 = load i32, ptr %arrayidx56, align 4, !dbg !8554, !tbaa !1557
  %conv57 = zext i32 %28 to i64, !dbg !8555
  %or58 = or i64 %shl55, %conv57, !dbg !8556
  store i64 %or58, ptr %a, align 8, !dbg !8557, !tbaa !1836
  br label %sw.epilog, !dbg !8558

sw.bb59:                                          ; preds = %if.else
  br label %sw.bb60, !dbg !8559

sw.bb60:                                          ; preds = %if.else, %sw.bb59
  br label %sw.bb61, !dbg !8561

sw.bb61:                                          ; preds = %if.else, %sw.bb60
  br label %sw.bb62, !dbg !8563

sw.bb62:                                          ; preds = %if.else, %sw.bb61
  br label %sw.default, !dbg !8565

sw.default:                                       ; preds = %if.else, %sw.bb62
  %29 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 10), align 8, !dbg !8567, !tbaa !7322
  %nb_subtract = getelementptr inbounds %struct.PyNumberMethods, ptr %29, i32 0, i32 1, !dbg !8568
  %30 = load ptr, ptr %nb_subtract, align 8, !dbg !8568, !tbaa !8569
  %31 = load ptr, ptr %op1.addr, align 8, !dbg !8570, !tbaa !1461
  %32 = load ptr, ptr %op2.addr, align 8, !dbg !8571, !tbaa !1461
  %call63 = call ptr %30(ptr noundef %31, ptr noundef %32), !dbg !8572
  store ptr %call63, ptr %retval, align 8, !dbg !8573
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8573

sw.epilog:                                        ; preds = %sw.bb52, %sw.bb
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8574
  br label %cleanup, !dbg !8574

cleanup:                                          ; preds = %sw.epilog, %sw.default
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !8574
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #10, !dbg !8574
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup70 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end65

if.end65:                                         ; preds = %cleanup.cont, %cond.end42
  %33 = load i64, ptr %a, align 8, !dbg !8575, !tbaa !1836
  %34 = load i64, ptr %b, align 8, !dbg !8576, !tbaa !1836
  %sub66 = sub i64 %33, %34, !dbg !8577
  store i64 %sub66, ptr %x, align 8, !dbg !8578, !tbaa !1836
  %35 = load i64, ptr %x, align 8, !dbg !8579, !tbaa !1836
  %call67 = call ptr @PyLong_FromLong(i64 noundef %35), !dbg !8580
  store ptr %call67, ptr %retval, align 8, !dbg !8581
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !8581

long_long:                                        ; No predecessors!
  tail call void @llvm.dbg.label(metadata !8487), !dbg !8582
  %36 = load i64, ptr %lla, align 8, !dbg !8583, !tbaa !7266
  %37 = load i64, ptr %llb, align 8, !dbg !8584, !tbaa !7266
  %sub68 = sub i64 %36, %37, !dbg !8585
  store i64 %sub68, ptr %llx, align 8, !dbg !8586, !tbaa !7266
  %38 = load i64, ptr %llx, align 8, !dbg !8587, !tbaa !7266
  %call69 = call ptr @PyLong_FromLongLong(i64 noundef %38), !dbg !8588
  store ptr %call69, ptr %retval, align 8, !dbg !8589
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !8589

cleanup70:                                        ; preds = %long_long, %if.end65, %cleanup, %if.then12
  call void @llvm.lifetime.end.p0(i64 8, ptr %llx) #10, !dbg !8590
  call void @llvm.lifetime.end.p0(i64 8, ptr %lla) #10, !dbg !8590
  call void @llvm.lifetime.end.p0(i64 8, ptr %llb) #10, !dbg !8590
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #10, !dbg !8590
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #10, !dbg !8590
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #10, !dbg !8590
  br label %return

if.end76:                                         ; preds = %entry
  %39 = load ptr, ptr %op1.addr, align 8, !dbg !8591, !tbaa !1461
  %call77 = call i32 @Py_IS_TYPE(ptr noundef %39, ptr noundef @PyFloat_Type), !dbg !8591
  %tobool78 = icmp ne i32 %call77, 0, !dbg !8591
  br i1 %tobool78, label %if.then79, label %if.end88, !dbg !8592

if.then79:                                        ; preds = %if.end76
  call void @llvm.lifetime.start.p0(i64 8, ptr %b80) #10, !dbg !8593
  tail call void @llvm.dbg.declare(metadata ptr %b80, metadata !8488, metadata !DIExpression()), !dbg !8594
  %40 = load i64, ptr %intval.addr, align 8, !dbg !8595, !tbaa !1836
  store i64 %40, ptr %b80, align 8, !dbg !8594, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %a81) #10, !dbg !8596
  tail call void @llvm.dbg.declare(metadata ptr %a81, metadata !8491, metadata !DIExpression()), !dbg !8597
  %41 = load ptr, ptr %op1.addr, align 8, !dbg !8598, !tbaa !1461
  %ob_fval = getelementptr inbounds %struct.PyFloatObject, ptr %41, i32 0, i32 1, !dbg !8598
  %42 = load double, ptr %ob_fval, align 8, !dbg !8598, !tbaa !7355
  store double %42, ptr %a81, align 8, !dbg !8597, !tbaa !7358
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !8599
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !8492, metadata !DIExpression()), !dbg !8600
  %43 = load double, ptr %a81, align 8, !dbg !8601, !tbaa !7358
  %44 = load i64, ptr %b80, align 8, !dbg !8602, !tbaa !1836
  %conv82 = sitofp i64 %44 to double, !dbg !8603
  %sub83 = fsub double %43, %conv82, !dbg !8604
  store double %sub83, ptr %result, align 8, !dbg !8605, !tbaa !7358
  %45 = load double, ptr %result, align 8, !dbg !8606, !tbaa !7358
  %call84 = call ptr @PyFloat_FromDouble(double noundef %45), !dbg !8607
  store ptr %call84, ptr %retval, align 8, !dbg !8608
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !8609
  call void @llvm.lifetime.end.p0(i64 8, ptr %a81) #10, !dbg !8609
  call void @llvm.lifetime.end.p0(i64 8, ptr %b80) #10, !dbg !8609
  br label %return

if.end88:                                         ; preds = %if.end76
  %46 = load i32, ptr %inplace.addr, align 4, !dbg !8610, !tbaa !1557
  %tobool89 = icmp ne i32 %46, 0, !dbg !8610
  %47 = zext i1 %tobool89 to i64, !dbg !8610
  %cond90 = select i1 %tobool89, ptr @PyNumber_InPlaceSubtract, ptr @PyNumber_Subtract, !dbg !8610
  %48 = load ptr, ptr %op1.addr, align 8, !dbg !8611, !tbaa !1461
  %49 = load ptr, ptr %op2.addr, align 8, !dbg !8612, !tbaa !1461
  %call91 = call ptr %cond90(ptr noundef %48, ptr noundef %49), !dbg !8613
  store ptr %call91, ptr %retval, align 8, !dbg !8614
  br label %return, !dbg !8614

return:                                           ; preds = %if.end88, %if.then79, %cleanup70
  %50 = load ptr, ptr %retval, align 8, !dbg !8615
  ret ptr %50, !dbg !8615
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyObject_IsTrueAndDecref(ptr noundef %x) #3 !dbg !8616 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca ptr, align 8
  %retval1 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !8618, metadata !DIExpression()), !dbg !8620
  call void @llvm.lifetime.start.p0(i64 4, ptr %retval1) #10, !dbg !8621
  tail call void @llvm.dbg.declare(metadata ptr %retval1, metadata !8619, metadata !DIExpression()), !dbg !8622
  %0 = load ptr, ptr %x.addr, align 8, !dbg !8623, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !8623
  %lnot = xor i1 %tobool, true, !dbg !8623
  %lnot2 = xor i1 %lnot, true, !dbg !8623
  %lnot3 = xor i1 %lnot2, true, !dbg !8623
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8623
  %conv = sext i32 %lnot.ext to i64, !dbg !8623
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8623
  %tobool4 = icmp ne i64 %expval, 0, !dbg !8623
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8625

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !8626
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8626

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %x.addr, align 8, !dbg !8627, !tbaa !1461
  %call = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %1), !dbg !8628
  store i32 %call, ptr %retval1, align 4, !dbg !8629, !tbaa !1557
  %2 = load ptr, ptr %x.addr, align 8, !dbg !8630, !tbaa !1461
  call void @Py_DECREF(ptr noundef %2), !dbg !8630
  %3 = load i32, ptr %retval1, align 4, !dbg !8631, !tbaa !1557
  store i32 %3, ptr %retval, align 4, !dbg !8632
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8632

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retval1) #10, !dbg !8633
  %4 = load i32, ptr %retval, align 4, !dbg !8633
  ret i32 %4, !dbg !8633
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_FormatAndDecref(ptr noundef %s, ptr noundef %f) #3 !dbg !8634 {
entry:
  %s.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %s, ptr %s.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !8636, metadata !DIExpression()), !dbg !8639
  store ptr %f, ptr %f.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %f.addr, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !8641
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !8638, metadata !DIExpression()), !dbg !8642
  %0 = load ptr, ptr %s.addr, align 8, !dbg !8643, !tbaa !1461
  %1 = load ptr, ptr %f.addr, align 8, !dbg !8644, !tbaa !1461
  %call = call ptr @PyObject_Format(ptr noundef %0, ptr noundef %1), !dbg !8645
  store ptr %call, ptr %result, align 8, !dbg !8642, !tbaa !1461
  %2 = load ptr, ptr %s.addr, align 8, !dbg !8646, !tbaa !1461
  call void @Py_DECREF(ptr noundef %2), !dbg !8646
  %3 = load ptr, ptr %result, align 8, !dbg !8647, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !8648
  ret ptr %3, !dbg !8649
}

declare !dbg !8650 ptr @PyObject_Format(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_READY(ptr noundef %op) #3 !dbg !8651 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !8653, metadata !DIExpression()), !dbg !8654
  %0 = load ptr, ptr %op.addr, align 8, !dbg !8655, !tbaa !1461
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3, !dbg !8656
  %bf.load = load i32, ptr %state, align 8, !dbg !8657
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !8657
  %bf.clear = and i32 %bf.lshr, 1, !dbg !8657
  ret i32 %bf.clear, !dbg !8658
}

declare !dbg !8659 i32 @_PyUnicode_Ready(ptr noundef) #1

declare !dbg !8660 void @_PyUnicode_FastCopyCharacters(ptr noundef, i64 noundef, ptr noundef, i64 noundef, i64 noundef) #1

declare ptr @PyNumber_InPlaceSubtract(ptr noundef, ptr noundef) #1

declare ptr @PyNumber_Subtract(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_dict_iterator(ptr noundef %iterable, i32 noundef %is_dict, ptr noundef %method_name, ptr noundef %p_orig_length, ptr noundef %p_source_is_dict) #3 !dbg !8663 {
entry:
  %retval = alloca ptr, align 8
  %iterable.addr = alloca ptr, align 8
  %is_dict.addr = alloca i32, align 4
  %method_name.addr = alloca ptr, align 8
  %p_orig_length.addr = alloca ptr, align 8
  %p_source_is_dict.addr = alloca ptr, align 8
  %iter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterable, ptr %iterable.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %iterable.addr, metadata !8668, metadata !DIExpression()), !dbg !8676
  store i32 %is_dict, ptr %is_dict.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %is_dict.addr, metadata !8669, metadata !DIExpression()), !dbg !8677
  store ptr %method_name, ptr %method_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %method_name.addr, metadata !8670, metadata !DIExpression()), !dbg !8678
  store ptr %p_orig_length, ptr %p_orig_length.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %p_orig_length.addr, metadata !8671, metadata !DIExpression()), !dbg !8679
  store ptr %p_source_is_dict, ptr %p_source_is_dict.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %p_source_is_dict.addr, metadata !8672, metadata !DIExpression()), !dbg !8680
  %0 = load i32, ptr %is_dict.addr, align 4, !dbg !8681, !tbaa !1557
  %tobool = icmp ne i32 %0, 0, !dbg !8681
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !8682

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %iterable.addr, align 8, !dbg !8683, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyDict_Type), !dbg !8683
  %tobool1 = icmp ne i32 %call, 0, !dbg !8683
  %lnot = xor i1 %tobool1, true, !dbg !8683
  %lnot2 = xor i1 %lnot, true, !dbg !8683
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8683
  %conv = sext i32 %lnot.ext to i64, !dbg !8683
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8683
  %tobool3 = icmp ne i64 %expval, 0, !dbg !8682
  br label %lor.end, !dbg !8682

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32, !dbg !8682
  store i32 %lor.ext, ptr %is_dict.addr, align 4, !dbg !8684, !tbaa !1557
  %3 = load i32, ptr %is_dict.addr, align 4, !dbg !8685, !tbaa !1557
  %4 = load ptr, ptr %p_source_is_dict.addr, align 8, !dbg !8686, !tbaa !1461
  store i32 %3, ptr %4, align 4, !dbg !8687, !tbaa !1557
  %5 = load i32, ptr %is_dict.addr, align 4, !dbg !8688, !tbaa !1557
  %tobool4 = icmp ne i32 %5, 0, !dbg !8688
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8690

if.then:                                          ; preds = %lor.end
  %6 = load ptr, ptr %iterable.addr, align 8, !dbg !8691, !tbaa !1461
  %call5 = call i64 @PyDict_Size(ptr noundef %6), !dbg !8693
  %7 = load ptr, ptr %p_orig_length.addr, align 8, !dbg !8694, !tbaa !1461
  store i64 %call5, ptr %7, align 8, !dbg !8695, !tbaa !1836
  %8 = load ptr, ptr %iterable.addr, align 8, !dbg !8696, !tbaa !1461
  call void @Py_INCREF(ptr noundef %8), !dbg !8696
  %9 = load ptr, ptr %iterable.addr, align 8, !dbg !8697, !tbaa !1461
  store ptr %9, ptr %retval, align 8, !dbg !8698
  br label %return, !dbg !8698

if.end:                                           ; preds = %lor.end
  %10 = load ptr, ptr %p_orig_length.addr, align 8, !dbg !8699, !tbaa !1461
  store i64 0, ptr %10, align 8, !dbg !8700, !tbaa !1836
  %11 = load ptr, ptr %method_name.addr, align 8, !dbg !8701, !tbaa !1461
  %tobool6 = icmp ne ptr %11, null, !dbg !8701
  br i1 %tobool6, label %if.then7, label %if.end19, !dbg !8702

if.then7:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %iter) #10, !dbg !8703
  tail call void @llvm.dbg.declare(metadata ptr %iter, metadata !8673, metadata !DIExpression()), !dbg !8704
  %12 = load ptr, ptr %iterable.addr, align 8, !dbg !8705, !tbaa !1461
  %13 = load ptr, ptr %method_name.addr, align 8, !dbg !8706, !tbaa !1461
  %call8 = call ptr @__Pyx_PyObject_CallMethod0(ptr noundef %12, ptr noundef %13), !dbg !8707
  store ptr %call8, ptr %iterable.addr, align 8, !dbg !8708, !tbaa !1461
  %14 = load ptr, ptr %iterable.addr, align 8, !dbg !8709, !tbaa !1461
  %tobool9 = icmp ne ptr %14, null, !dbg !8709
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !8711

if.then10:                                        ; preds = %if.then7
  store ptr null, ptr %retval, align 8, !dbg !8712
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8712

if.end11:                                         ; preds = %if.then7
  %15 = load ptr, ptr %iterable.addr, align 8, !dbg !8713, !tbaa !1461
  %call12 = call i32 @Py_IS_TYPE(ptr noundef %15, ptr noundef @PyTuple_Type), !dbg !8713
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8713
  br i1 %tobool13, label %if.then16, label %lor.lhs.false, !dbg !8715

lor.lhs.false:                                    ; preds = %if.end11
  %16 = load ptr, ptr %iterable.addr, align 8, !dbg !8716, !tbaa !1461
  %call14 = call i32 @Py_IS_TYPE(ptr noundef %16, ptr noundef @PyList_Type), !dbg !8716
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8716
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8717

if.then16:                                        ; preds = %lor.lhs.false, %if.end11
  %17 = load ptr, ptr %iterable.addr, align 8, !dbg !8718, !tbaa !1461
  store ptr %17, ptr %retval, align 8, !dbg !8719
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8719

if.end17:                                         ; preds = %lor.lhs.false
  %18 = load ptr, ptr %iterable.addr, align 8, !dbg !8720, !tbaa !1461
  %call18 = call ptr @PyObject_GetIter(ptr noundef %18), !dbg !8721
  store ptr %call18, ptr %iter, align 8, !dbg !8722, !tbaa !1461
  %19 = load ptr, ptr %iterable.addr, align 8, !dbg !8723, !tbaa !1461
  call void @Py_DECREF(ptr noundef %19), !dbg !8723
  %20 = load ptr, ptr %iter, align 8, !dbg !8724, !tbaa !1461
  store ptr %20, ptr %retval, align 8, !dbg !8725
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8725

cleanup:                                          ; preds = %if.end17, %if.then16, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %iter) #10, !dbg !8726
  br label %return

if.end19:                                         ; preds = %if.end
  %21 = load ptr, ptr %iterable.addr, align 8, !dbg !8727, !tbaa !1461
  %call20 = call ptr @PyObject_GetIter(ptr noundef %21), !dbg !8728
  store ptr %call20, ptr %retval, align 8, !dbg !8729
  br label %return, !dbg !8729

return:                                           ; preds = %if.end19, %cleanup, %if.then
  %22 = load ptr, ptr %retval, align 8, !dbg !8730
  ret ptr %22, !dbg !8730
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_dict_iter_next(ptr noundef %iter_obj, i64 noundef %orig_length, ptr noundef %ppos, ptr noundef %pkey, ptr noundef %pvalue, ptr noundef %pitem, i32 noundef %source_is_dict) #3 !dbg !8731 {
entry:
  %retval = alloca i32, align 4
  %iter_obj.addr = alloca ptr, align 8
  %orig_length.addr = alloca i64, align 8
  %ppos.addr = alloca ptr, align 8
  %pkey.addr = alloca ptr, align 8
  %pvalue.addr = alloca ptr, align 8
  %pitem.addr = alloca ptr, align 8
  %source_is_dict.addr = alloca i32, align 4
  %next_item = alloca ptr, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tuple = alloca ptr, align 8
  %pos = alloca i64, align 8
  %pos64 = alloca i64, align 8
  store ptr %iter_obj, ptr %iter_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %iter_obj.addr, metadata !8735, metadata !DIExpression()), !dbg !8756
  store i64 %orig_length, ptr %orig_length.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %orig_length.addr, metadata !8736, metadata !DIExpression()), !dbg !8757
  store ptr %ppos, ptr %ppos.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %ppos.addr, metadata !8737, metadata !DIExpression()), !dbg !8758
  store ptr %pkey, ptr %pkey.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %pkey.addr, metadata !8738, metadata !DIExpression()), !dbg !8759
  store ptr %pvalue, ptr %pvalue.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %pvalue.addr, metadata !8739, metadata !DIExpression()), !dbg !8760
  store ptr %pitem, ptr %pitem.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %pitem.addr, metadata !8740, metadata !DIExpression()), !dbg !8761
  store i32 %source_is_dict, ptr %source_is_dict.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %source_is_dict.addr, metadata !8741, metadata !DIExpression()), !dbg !8762
  call void @llvm.lifetime.start.p0(i64 8, ptr %next_item) #10, !dbg !8763
  tail call void @llvm.dbg.declare(metadata ptr %next_item, metadata !8742, metadata !DIExpression()), !dbg !8764
  %0 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8765, !tbaa !1557
  %tobool = icmp ne i32 %0, 0, !dbg !8765
  br i1 %tobool, label %if.then, label %if.else41, !dbg !8766

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #10, !dbg !8767
  tail call void @llvm.dbg.declare(metadata ptr %key, metadata !8743, metadata !DIExpression()), !dbg !8768
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #10, !dbg !8767
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !8746, metadata !DIExpression()), !dbg !8769
  %1 = load i64, ptr %orig_length.addr, align 8, !dbg !8770, !tbaa !1836
  %2 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8770, !tbaa !1461
  %call = call i64 @PyDict_Size(ptr noundef %2), !dbg !8770
  %cmp = icmp ne i64 %1, %call, !dbg !8770
  %lnot = xor i1 %cmp, true, !dbg !8770
  %lnot1 = xor i1 %lnot, true, !dbg !8770
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8770
  %conv = sext i32 %lnot.ext to i64, !dbg !8770
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !8770
  %tobool2 = icmp ne i64 %expval, 0, !dbg !8770
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8772

if.then3:                                         ; preds = %if.then
  %3 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !8773, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.42), !dbg !8775
  store i32 -1, ptr %retval, align 4, !dbg !8776
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39, !dbg !8776

if.end:                                           ; preds = %if.then
  %4 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8777, !tbaa !1461
  %5 = load ptr, ptr %ppos.addr, align 8, !dbg !8777, !tbaa !1461
  %call4 = call i32 @PyDict_Next(ptr noundef %4, ptr noundef %5, ptr noundef %key, ptr noundef %value), !dbg !8777
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8777
  %lnot6 = xor i1 %tobool5, true, !dbg !8777
  %lnot8 = xor i1 %lnot6, true, !dbg !8777
  %lnot10 = xor i1 %lnot8, true, !dbg !8777
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !8777
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !8777
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !8777
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !8777
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8779

if.then15:                                        ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !8780
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39, !dbg !8780

if.end16:                                         ; preds = %if.end
  %6 = load ptr, ptr %pitem.addr, align 8, !dbg !8782, !tbaa !1461
  %tobool17 = icmp ne ptr %6, null, !dbg !8782
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !8783

if.then18:                                        ; preds = %if.end16
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #10, !dbg !8784
  tail call void @llvm.dbg.declare(metadata ptr %tuple, metadata !8747, metadata !DIExpression()), !dbg !8785
  %call19 = call ptr @PyTuple_New(i64 noundef 2), !dbg !8786
  store ptr %call19, ptr %tuple, align 8, !dbg !8785, !tbaa !1461
  %7 = load ptr, ptr %tuple, align 8, !dbg !8787, !tbaa !1461
  %tobool20 = icmp ne ptr %7, null, !dbg !8787
  %lnot21 = xor i1 %tobool20, true, !dbg !8787
  %lnot23 = xor i1 %lnot21, true, !dbg !8787
  %lnot25 = xor i1 %lnot23, true, !dbg !8787
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !8787
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !8787
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0), !dbg !8787
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !8787
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !8789

if.then30:                                        ; preds = %if.then18
  store i32 -1, ptr %retval, align 4, !dbg !8790
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8790

if.end31:                                         ; preds = %if.then18
  %8 = load ptr, ptr %key, align 8, !dbg !8792, !tbaa !1461
  call void @Py_INCREF(ptr noundef %8), !dbg !8792
  %9 = load ptr, ptr %value, align 8, !dbg !8793, !tbaa !1461
  call void @Py_INCREF(ptr noundef %9), !dbg !8793
  %10 = load ptr, ptr %tuple, align 8, !dbg !8794, !tbaa !1461
  %11 = load ptr, ptr %key, align 8, !dbg !8794, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %10, i64 noundef 0, ptr noundef %11), !dbg !8794
  %12 = load ptr, ptr %tuple, align 8, !dbg !8795, !tbaa !1461
  %13 = load ptr, ptr %value, align 8, !dbg !8795, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %12, i64 noundef 1, ptr noundef %13), !dbg !8795
  %14 = load ptr, ptr %tuple, align 8, !dbg !8796, !tbaa !1461
  %15 = load ptr, ptr %pitem.addr, align 8, !dbg !8797, !tbaa !1461
  store ptr %14, ptr %15, align 8, !dbg !8798, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8799
  br label %cleanup, !dbg !8799

cleanup:                                          ; preds = %if.end31, %if.then30
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #10, !dbg !8799
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup39 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end38, !dbg !8800

if.else:                                          ; preds = %if.end16
  %16 = load ptr, ptr %pkey.addr, align 8, !dbg !8801, !tbaa !1461
  %tobool32 = icmp ne ptr %16, null, !dbg !8801
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8804

if.then33:                                        ; preds = %if.else
  %17 = load ptr, ptr %key, align 8, !dbg !8805, !tbaa !1461
  call void @Py_INCREF(ptr noundef %17), !dbg !8805
  %18 = load ptr, ptr %key, align 8, !dbg !8807, !tbaa !1461
  %19 = load ptr, ptr %pkey.addr, align 8, !dbg !8808, !tbaa !1461
  store ptr %18, ptr %19, align 8, !dbg !8809, !tbaa !1461
  br label %if.end34, !dbg !8810

if.end34:                                         ; preds = %if.then33, %if.else
  %20 = load ptr, ptr %pvalue.addr, align 8, !dbg !8811, !tbaa !1461
  %tobool35 = icmp ne ptr %20, null, !dbg !8811
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !8813

if.then36:                                        ; preds = %if.end34
  %21 = load ptr, ptr %value, align 8, !dbg !8814, !tbaa !1461
  call void @Py_INCREF(ptr noundef %21), !dbg !8814
  %22 = load ptr, ptr %value, align 8, !dbg !8816, !tbaa !1461
  %23 = load ptr, ptr %pvalue.addr, align 8, !dbg !8817, !tbaa !1461
  store ptr %22, ptr %23, align 8, !dbg !8818, !tbaa !1461
  br label %if.end37, !dbg !8819

if.end37:                                         ; preds = %if.then36, %if.end34
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %cleanup.cont
  store i32 1, ptr %retval, align 4, !dbg !8820
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39, !dbg !8820

cleanup39:                                        ; preds = %if.end38, %cleanup, %if.then15, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #10, !dbg !8821
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #10, !dbg !8821
  br label %cleanup146

if.else41:                                        ; preds = %entry
  %24 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8822, !tbaa !1461
  %call42 = call i32 @Py_IS_TYPE(ptr noundef %24, ptr noundef @PyTuple_Type), !dbg !8822
  %tobool43 = icmp ne i32 %call42, 0, !dbg !8822
  br i1 %tobool43, label %if.then44, label %if.else60, !dbg !8823

if.then44:                                        ; preds = %if.else41
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #10, !dbg !8824
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !8750, metadata !DIExpression()), !dbg !8825
  %25 = load ptr, ptr %ppos.addr, align 8, !dbg !8826, !tbaa !1461
  %26 = load i64, ptr %25, align 8, !dbg !8827, !tbaa !1836
  store i64 %26, ptr %pos, align 8, !dbg !8825, !tbaa !1836
  %27 = load i64, ptr %pos, align 8, !dbg !8828, !tbaa !1836
  %28 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8828, !tbaa !1461
  %call45 = call i64 @PyTuple_GET_SIZE(ptr noundef %28), !dbg !8828
  %cmp46 = icmp sge i64 %27, %call45, !dbg !8828
  %lnot48 = xor i1 %cmp46, true, !dbg !8828
  %lnot50 = xor i1 %lnot48, true, !dbg !8828
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !8828
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !8828
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !8828
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !8828
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !8830

if.then55:                                        ; preds = %if.then44
  store i32 0, ptr %retval, align 4, !dbg !8831
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup57, !dbg !8831

if.end56:                                         ; preds = %if.then44
  %29 = load i64, ptr %pos, align 8, !dbg !8832, !tbaa !1836
  %add = add i64 %29, 1, !dbg !8833
  %30 = load ptr, ptr %ppos.addr, align 8, !dbg !8834, !tbaa !1461
  store i64 %add, ptr %30, align 8, !dbg !8835, !tbaa !1836
  %31 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8836, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %31, i32 0, i32 1, !dbg !8836
  %32 = load i64, ptr %pos, align 8, !dbg !8836, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %32, !dbg !8836
  %33 = load ptr, ptr %arrayidx, align 8, !dbg !8836, !tbaa !1461
  store ptr %33, ptr %next_item, align 8, !dbg !8837, !tbaa !1461
  %34 = load ptr, ptr %next_item, align 8, !dbg !8838, !tbaa !1461
  call void @Py_INCREF(ptr noundef %34), !dbg !8838
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8839
  br label %cleanup57, !dbg !8839

cleanup57:                                        ; preds = %if.end56, %if.then55
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #10, !dbg !8839
  %cleanup.dest58 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest58, label %cleanup146 [
    i32 0, label %cleanup.cont59
  ]

cleanup.cont59:                                   ; preds = %cleanup57
  br label %if.end99, !dbg !8840

if.else60:                                        ; preds = %if.else41
  %35 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8841, !tbaa !1461
  %call61 = call i32 @Py_IS_TYPE(ptr noundef %35, ptr noundef @PyList_Type), !dbg !8841
  %tobool62 = icmp ne i32 %call61, 0, !dbg !8841
  br i1 %tobool62, label %if.then63, label %if.else83, !dbg !8842

if.then63:                                        ; preds = %if.else60
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos64) #10, !dbg !8843
  tail call void @llvm.dbg.declare(metadata ptr %pos64, metadata !8753, metadata !DIExpression()), !dbg !8844
  %36 = load ptr, ptr %ppos.addr, align 8, !dbg !8845, !tbaa !1461
  %37 = load i64, ptr %36, align 8, !dbg !8846, !tbaa !1836
  store i64 %37, ptr %pos64, align 8, !dbg !8844, !tbaa !1836
  %38 = load i64, ptr %pos64, align 8, !dbg !8847, !tbaa !1836
  %39 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8847, !tbaa !1461
  %call65 = call i64 @PyList_GET_SIZE(ptr noundef %39), !dbg !8847
  %cmp66 = icmp sge i64 %38, %call65, !dbg !8847
  %lnot68 = xor i1 %cmp66, true, !dbg !8847
  %lnot70 = xor i1 %lnot68, true, !dbg !8847
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !8847
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !8847
  %expval73 = call i64 @llvm.expect.i64(i64 %conv72, i64 0), !dbg !8847
  %tobool74 = icmp ne i64 %expval73, 0, !dbg !8847
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !8849

if.then75:                                        ; preds = %if.then63
  store i32 0, ptr %retval, align 4, !dbg !8850
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !8850

if.end76:                                         ; preds = %if.then63
  %40 = load i64, ptr %pos64, align 8, !dbg !8851, !tbaa !1836
  %add77 = add i64 %40, 1, !dbg !8852
  %41 = load ptr, ptr %ppos.addr, align 8, !dbg !8853, !tbaa !1461
  store i64 %add77, ptr %41, align 8, !dbg !8854, !tbaa !1836
  %42 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8855, !tbaa !1461
  %ob_item78 = getelementptr inbounds %struct.PyListObject, ptr %42, i32 0, i32 1, !dbg !8855
  %43 = load ptr, ptr %ob_item78, align 8, !dbg !8855, !tbaa !1868
  %44 = load i64, ptr %pos64, align 8, !dbg !8855, !tbaa !1836
  %arrayidx79 = getelementptr ptr, ptr %43, i64 %44, !dbg !8855
  %45 = load ptr, ptr %arrayidx79, align 8, !dbg !8855, !tbaa !1461
  store ptr %45, ptr %next_item, align 8, !dbg !8856, !tbaa !1461
  %46 = load ptr, ptr %next_item, align 8, !dbg !8857, !tbaa !1461
  call void @Py_INCREF(ptr noundef %46), !dbg !8857
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8858
  br label %cleanup80, !dbg !8858

cleanup80:                                        ; preds = %if.end76, %if.then75
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos64) #10, !dbg !8858
  %cleanup.dest81 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest81, label %cleanup146 [
    i32 0, label %cleanup.cont82
  ]

cleanup.cont82:                                   ; preds = %cleanup80
  br label %if.end98, !dbg !8859

if.else83:                                        ; preds = %if.else60
  %47 = load ptr, ptr %iter_obj.addr, align 8, !dbg !8860, !tbaa !1461
  %call84 = call ptr @PyIter_Next(ptr noundef %47), !dbg !8862
  store ptr %call84, ptr %next_item, align 8, !dbg !8863, !tbaa !1461
  %48 = load ptr, ptr %next_item, align 8, !dbg !8864, !tbaa !1461
  %tobool85 = icmp ne ptr %48, null, !dbg !8864
  %lnot86 = xor i1 %tobool85, true, !dbg !8864
  %lnot88 = xor i1 %lnot86, true, !dbg !8864
  %lnot90 = xor i1 %lnot88, true, !dbg !8864
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !8864
  %conv92 = sext i32 %lnot.ext91 to i64, !dbg !8864
  %expval93 = call i64 @llvm.expect.i64(i64 %conv92, i64 0), !dbg !8864
  %tobool94 = icmp ne i64 %expval93, 0, !dbg !8864
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !8866

if.then95:                                        ; preds = %if.else83
  %call96 = call i32 @__Pyx_IterFinish(), !dbg !8867
  store i32 %call96, ptr %retval, align 4, !dbg !8869
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146, !dbg !8869

if.end97:                                         ; preds = %if.else83
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %cleanup.cont82
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %cleanup.cont59
  br label %if.end100

if.end100:                                        ; preds = %if.end99
  %49 = load ptr, ptr %pitem.addr, align 8, !dbg !8870, !tbaa !1461
  %tobool101 = icmp ne ptr %49, null, !dbg !8870
  br i1 %tobool101, label %if.then102, label %if.else103, !dbg !8872

if.then102:                                       ; preds = %if.end100
  %50 = load ptr, ptr %next_item, align 8, !dbg !8873, !tbaa !1461
  %51 = load ptr, ptr %pitem.addr, align 8, !dbg !8875, !tbaa !1461
  store ptr %50, ptr %51, align 8, !dbg !8876, !tbaa !1461
  br label %if.end145, !dbg !8877

if.else103:                                       ; preds = %if.end100
  %52 = load ptr, ptr %pkey.addr, align 8, !dbg !8878, !tbaa !1461
  %tobool104 = icmp ne ptr %52, null, !dbg !8878
  br i1 %tobool104, label %land.lhs.true, label %if.else139, !dbg !8880

land.lhs.true:                                    ; preds = %if.else103
  %53 = load ptr, ptr %pvalue.addr, align 8, !dbg !8881, !tbaa !1461
  %tobool105 = icmp ne ptr %53, null, !dbg !8881
  br i1 %tobool105, label %if.then106, label %if.else139, !dbg !8882

if.then106:                                       ; preds = %land.lhs.true
  %54 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8883, !tbaa !1557
  %tobool107 = icmp ne i32 %54, 0, !dbg !8883
  br i1 %tobool107, label %lor.end, label %lor.rhs, !dbg !8883

lor.rhs:                                          ; preds = %if.then106
  %55 = load ptr, ptr %next_item, align 8, !dbg !8883, !tbaa !1461
  %call108 = call ptr @Py_TYPE(ptr noundef %55), !dbg !8883
  %call109 = call i32 @PyType_HasFeature(ptr noundef %call108, i64 noundef 67108864), !dbg !8883
  %tobool110 = icmp ne i32 %call109, 0, !dbg !8883
  br label %lor.end, !dbg !8883

lor.end:                                          ; preds = %lor.rhs, %if.then106
  %56 = phi i1 [ true, %if.then106 ], [ %tobool110, %lor.rhs ]
  %lnot111 = xor i1 %56, true, !dbg !8883
  %lnot113 = xor i1 %lnot111, true, !dbg !8883
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !8883
  %conv115 = sext i32 %lnot.ext114 to i64, !dbg !8883
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 1), !dbg !8883
  %tobool117 = icmp ne i64 %expval116, 0, !dbg !8883
  br i1 %tobool117, label %cond.true, label %cond.false134, !dbg !8886

cond.true:                                        ; preds = %lor.end
  %57 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8883, !tbaa !1557
  %tobool118 = icmp ne i32 %57, 0, !dbg !8883
  br i1 %tobool118, label %lor.end123, label %lor.rhs119, !dbg !8883

lor.rhs119:                                       ; preds = %cond.true
  %58 = load ptr, ptr %next_item, align 8, !dbg !8883, !tbaa !1461
  %call120 = call i64 @PyTuple_GET_SIZE(ptr noundef %58), !dbg !8883
  %cmp121 = icmp eq i64 %call120, 2, !dbg !8883
  br label %lor.end123, !dbg !8883

lor.end123:                                       ; preds = %lor.rhs119, %cond.true
  %59 = phi i1 [ true, %cond.true ], [ %cmp121, %lor.rhs119 ]
  %lnot124 = xor i1 %59, true, !dbg !8883
  %lnot126 = xor i1 %lnot124, true, !dbg !8883
  %lnot.ext127 = zext i1 %lnot126 to i32, !dbg !8883
  %conv128 = sext i32 %lnot.ext127 to i64, !dbg !8883
  %expval129 = call i64 @llvm.expect.i64(i64 %conv128, i64 1), !dbg !8883
  %tobool130 = icmp ne i64 %expval129, 0, !dbg !8883
  br i1 %tobool130, label %cond.true131, label %cond.false, !dbg !8883

cond.true131:                                     ; preds = %lor.end123
  %60 = load ptr, ptr %next_item, align 8, !dbg !8883, !tbaa !1461
  %61 = load ptr, ptr %pkey.addr, align 8, !dbg !8883, !tbaa !1461
  %62 = load ptr, ptr %pvalue.addr, align 8, !dbg !8883, !tbaa !1461
  %call132 = call i32 @__Pyx_unpack_tuple2_exact(ptr noundef %60, ptr noundef %61, ptr noundef %62, i32 noundef 1), !dbg !8883
  %tobool133 = icmp ne i32 %call132, 0, !dbg !8883
  br i1 %tobool133, label %if.then137, label %if.end138, !dbg !8883

cond.false:                                       ; preds = %lor.end123
  %63 = load ptr, ptr %next_item, align 8, !dbg !8883, !tbaa !1461
  call void @__Pyx_UnpackTupleError(ptr noundef %63, i64 noundef 2), !dbg !8883
  br i1 true, label %if.then137, label %if.end138, !dbg !8883

cond.false134:                                    ; preds = %lor.end
  %64 = load ptr, ptr %next_item, align 8, !dbg !8883, !tbaa !1461
  %65 = load ptr, ptr %pkey.addr, align 8, !dbg !8883, !tbaa !1461
  %66 = load ptr, ptr %pvalue.addr, align 8, !dbg !8883, !tbaa !1461
  %67 = load i32, ptr %source_is_dict.addr, align 4, !dbg !8883, !tbaa !1557
  %call135 = call i32 @__Pyx_unpack_tuple2_generic(ptr noundef %64, ptr noundef %65, ptr noundef %66, i32 noundef %67, i32 noundef 1), !dbg !8883
  %tobool136 = icmp ne i32 %call135, 0, !dbg !8883
  br i1 %tobool136, label %if.then137, label %if.end138, !dbg !8886

if.then137:                                       ; preds = %cond.false134, %cond.false, %cond.true131
  store i32 -1, ptr %retval, align 4, !dbg !8887
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146, !dbg !8887

if.end138:                                        ; preds = %cond.false134, %cond.false, %cond.true131
  br label %if.end144, !dbg !8888

if.else139:                                       ; preds = %land.lhs.true, %if.else103
  %68 = load ptr, ptr %pkey.addr, align 8, !dbg !8889, !tbaa !1461
  %tobool140 = icmp ne ptr %68, null, !dbg !8889
  br i1 %tobool140, label %if.then141, label %if.else142, !dbg !8891

if.then141:                                       ; preds = %if.else139
  %69 = load ptr, ptr %next_item, align 8, !dbg !8892, !tbaa !1461
  %70 = load ptr, ptr %pkey.addr, align 8, !dbg !8894, !tbaa !1461
  store ptr %69, ptr %70, align 8, !dbg !8895, !tbaa !1461
  br label %if.end143, !dbg !8896

if.else142:                                       ; preds = %if.else139
  %71 = load ptr, ptr %next_item, align 8, !dbg !8897, !tbaa !1461
  %72 = load ptr, ptr %pvalue.addr, align 8, !dbg !8899, !tbaa !1461
  store ptr %71, ptr %72, align 8, !dbg !8900, !tbaa !1461
  br label %if.end143

if.end143:                                        ; preds = %if.else142, %if.then141
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end138
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then102
  store i32 1, ptr %retval, align 4, !dbg !8901
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146, !dbg !8901

cleanup146:                                       ; preds = %if.end145, %if.then137, %if.then95, %cleanup80, %cleanup57, %cleanup39
  call void @llvm.lifetime.end.p0(i64 8, ptr %next_item) #10, !dbg !8902
  %73 = load i32, ptr %retval, align 4, !dbg !8902
  ret i32 %73, !dbg !8902
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyList_GET_SIZE(ptr noundef %op) #3 !dbg !8903 {
entry:
  %op.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #10, !dbg !8908
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !8906, metadata !DIExpression()), !dbg !8909
  %0 = load ptr, ptr %op.addr, align 8, !dbg !8910, !tbaa !1461
  store ptr %0, ptr %list, align 8, !dbg !8909, !tbaa !1461
  %1 = load ptr, ptr %list, align 8, !dbg !8911, !tbaa !1461
  %call = call i64 @Py_SIZE(ptr noundef %1), !dbg !8911
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #10, !dbg !8912
  ret i64 %call, !dbg !8913
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_ListComp_Append(ptr noundef %list, ptr noundef %x) #3 !dbg !8914 {
entry:
  %retval = alloca i32, align 4
  %list.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %L = alloca ptr, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %list, ptr %list.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %list.addr, metadata !8916, metadata !DIExpression()), !dbg !8920
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !8917, metadata !DIExpression()), !dbg !8921
  call void @llvm.lifetime.start.p0(i64 8, ptr %L) #10, !dbg !8922
  tail call void @llvm.dbg.declare(metadata ptr %L, metadata !8918, metadata !DIExpression()), !dbg !8923
  %0 = load ptr, ptr %list.addr, align 8, !dbg !8924, !tbaa !1461
  store ptr %0, ptr %L, align 8, !dbg !8923, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %len) #10, !dbg !8925
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !8919, metadata !DIExpression()), !dbg !8926
  %1 = load ptr, ptr %list.addr, align 8, !dbg !8927, !tbaa !1461
  %call = call i64 @Py_SIZE(ptr noundef %1), !dbg !8927
  store i64 %call, ptr %len, align 8, !dbg !8926, !tbaa !1836
  %2 = load ptr, ptr %L, align 8, !dbg !8928, !tbaa !1461
  %allocated = getelementptr inbounds %struct.PyListObject, ptr %2, i32 0, i32 2, !dbg !8928
  %3 = load i64, ptr %allocated, align 8, !dbg !8928, !tbaa !7137
  %4 = load i64, ptr %len, align 8, !dbg !8928, !tbaa !1836
  %cmp = icmp sgt i64 %3, %4, !dbg !8928
  %lnot = xor i1 %cmp, true, !dbg !8928
  %lnot1 = xor i1 %lnot, true, !dbg !8928
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8928
  %conv = sext i32 %lnot.ext to i64, !dbg !8928
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8928
  %tobool = icmp ne i64 %expval, 0, !dbg !8928
  br i1 %tobool, label %if.then, label %if.end, !dbg !8930

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %x.addr, align 8, !dbg !8931, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !8931
  %6 = load ptr, ptr %list.addr, align 8, !dbg !8933, !tbaa !1461
  %7 = load i64, ptr %len, align 8, !dbg !8933, !tbaa !1836
  %8 = load ptr, ptr %x.addr, align 8, !dbg !8933, !tbaa !1461
  call void @PyList_SET_ITEM(ptr noundef %6, i64 noundef %7, ptr noundef %8), !dbg !8933
  %9 = load ptr, ptr %list.addr, align 8, !dbg !8934, !tbaa !1461
  %10 = load i64, ptr %len, align 8, !dbg !8934, !tbaa !1836
  %add = add i64 %10, 1, !dbg !8934
  call void @Py_SET_SIZE(ptr noundef %9, i64 noundef %add), !dbg !8934
  store i32 0, ptr %retval, align 4, !dbg !8935
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8935

if.end:                                           ; preds = %entry
  %11 = load ptr, ptr %list.addr, align 8, !dbg !8936, !tbaa !1461
  %12 = load ptr, ptr %x.addr, align 8, !dbg !8937, !tbaa !1461
  %call2 = call i32 @PyList_Append(ptr noundef %11, ptr noundef %12), !dbg !8938
  store i32 %call2, ptr %retval, align 4, !dbg !8939
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8939

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %len) #10, !dbg !8940
  call void @llvm.lifetime.end.p0(i64 8, ptr %L) #10, !dbg !8940
  %13 = load i32, ptr %retval, align 4, !dbg !8940
  ret i32 %13, !dbg !8940
}

declare !dbg !8941 ptr @PyUnicode_Join(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyUnicode_ConcatInPlaceImpl(ptr noundef %p_left, ptr noundef %right) #3 !dbg !8942 {
entry:
  %retval = alloca ptr, align 8
  %p_left.addr = alloca ptr, align 8
  %right.addr = alloca ptr, align 8
  %left = alloca ptr, align 8
  %left_len = alloca i64, align 8
  %right_len = alloca i64, align 8
  %new_len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %p_left, ptr %p_left.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %p_left.addr, metadata !8946, metadata !DIExpression()), !dbg !8952
  store ptr %right, ptr %right.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %right.addr, metadata !8947, metadata !DIExpression()), !dbg !8953
  call void @llvm.lifetime.start.p0(i64 8, ptr %left) #10, !dbg !8954
  tail call void @llvm.dbg.declare(metadata ptr %left, metadata !8948, metadata !DIExpression()), !dbg !8955
  %0 = load ptr, ptr %p_left.addr, align 8, !dbg !8956, !tbaa !1461
  %1 = load ptr, ptr %0, align 8, !dbg !8957, !tbaa !1461
  store ptr %1, ptr %left, align 8, !dbg !8955, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %left_len) #10, !dbg !8958
  tail call void @llvm.dbg.declare(metadata ptr %left_len, metadata !8949, metadata !DIExpression()), !dbg !8959
  call void @llvm.lifetime.start.p0(i64 8, ptr %right_len) #10, !dbg !8958
  tail call void @llvm.dbg.declare(metadata ptr %right_len, metadata !8950, metadata !DIExpression()), !dbg !8960
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_len) #10, !dbg !8958
  tail call void @llvm.dbg.declare(metadata ptr %new_len, metadata !8951, metadata !DIExpression()), !dbg !8961
  %2 = load ptr, ptr %left, align 8, !dbg !8962, !tbaa !1461
  %call = call i32 @PyUnicode_IS_READY(ptr noundef %2), !dbg !8962
  %tobool = icmp ne i32 %call, 0, !dbg !8962
  %lnot = xor i1 %tobool, true, !dbg !8962
  %lnot1 = xor i1 %lnot, true, !dbg !8962
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8962
  %conv = sext i32 %lnot.ext to i64, !dbg !8962
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !8962
  %tobool2 = icmp ne i64 %expval, 0, !dbg !8962
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !8962

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8962

cond.false:                                       ; preds = %entry
  %3 = load ptr, ptr %left, align 8, !dbg !8962, !tbaa !1461
  %call3 = call i32 @_PyUnicode_Ready(ptr noundef %3), !dbg !8962
  br label %cond.end, !dbg !8962

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call3, %cond.false ], !dbg !8962
  %cmp = icmp eq i32 %cond, -1, !dbg !8962
  %lnot5 = xor i1 %cmp, true, !dbg !8962
  %lnot7 = xor i1 %lnot5, true, !dbg !8962
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8962
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !8962
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !8962
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !8962
  br i1 %tobool11, label %if.then, label %if.end, !dbg !8964

if.then:                                          ; preds = %cond.end
  store ptr null, ptr %retval, align 8, !dbg !8965
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8965

if.end:                                           ; preds = %cond.end
  %4 = load ptr, ptr %right.addr, align 8, !dbg !8966, !tbaa !1461
  %call12 = call i32 @PyUnicode_IS_READY(ptr noundef %4), !dbg !8966
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8966
  %lnot14 = xor i1 %tobool13, true, !dbg !8966
  %lnot16 = xor i1 %lnot14, true, !dbg !8966
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !8966
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !8966
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 1), !dbg !8966
  %tobool20 = icmp ne i64 %expval19, 0, !dbg !8966
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8966

cond.true21:                                      ; preds = %if.end
  br label %cond.end24, !dbg !8966

cond.false22:                                     ; preds = %if.end
  %5 = load ptr, ptr %right.addr, align 8, !dbg !8966, !tbaa !1461
  %call23 = call i32 @_PyUnicode_Ready(ptr noundef %5), !dbg !8966
  br label %cond.end24, !dbg !8966

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ 0, %cond.true21 ], [ %call23, %cond.false22 ], !dbg !8966
  %cmp26 = icmp eq i32 %cond25, -1, !dbg !8966
  %lnot28 = xor i1 %cmp26, true, !dbg !8966
  %lnot30 = xor i1 %lnot28, true, !dbg !8966
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !8966
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !8966
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !8966
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !8966
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !8968

if.then35:                                        ; preds = %cond.end24
  store ptr null, ptr %retval, align 8, !dbg !8969
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8969

if.end36:                                         ; preds = %cond.end24
  %6 = load ptr, ptr %left, align 8, !dbg !8970, !tbaa !1461
  %call37 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %6), !dbg !8970
  store i64 %call37, ptr %left_len, align 8, !dbg !8971, !tbaa !1836
  %7 = load i64, ptr %left_len, align 8, !dbg !8972, !tbaa !1836
  %cmp38 = icmp eq i64 %7, 0, !dbg !8974
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8975

if.then40:                                        ; preds = %if.end36
  %8 = load ptr, ptr %right.addr, align 8, !dbg !8976, !tbaa !1461
  call void @Py_INCREF(ptr noundef %8), !dbg !8976
  %9 = load ptr, ptr %right.addr, align 8, !dbg !8978, !tbaa !1461
  store ptr %9, ptr %retval, align 8, !dbg !8979
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8979

if.end41:                                         ; preds = %if.end36
  %10 = load ptr, ptr %right.addr, align 8, !dbg !8980, !tbaa !1461
  %call42 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %10), !dbg !8980
  store i64 %call42, ptr %right_len, align 8, !dbg !8981, !tbaa !1836
  %11 = load i64, ptr %right_len, align 8, !dbg !8982, !tbaa !1836
  %cmp43 = icmp eq i64 %11, 0, !dbg !8984
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !8985

if.then45:                                        ; preds = %if.end41
  %12 = load ptr, ptr %left, align 8, !dbg !8986, !tbaa !1461
  call void @Py_INCREF(ptr noundef %12), !dbg !8986
  %13 = load ptr, ptr %left, align 8, !dbg !8988, !tbaa !1461
  store ptr %13, ptr %retval, align 8, !dbg !8989
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8989

if.end46:                                         ; preds = %if.end41
  %14 = load i64, ptr %left_len, align 8, !dbg !8990, !tbaa !1836
  %15 = load i64, ptr %right_len, align 8, !dbg !8990, !tbaa !1836
  %sub = sub i64 9223372036854775807, %15, !dbg !8990
  %cmp47 = icmp sgt i64 %14, %sub, !dbg !8990
  %lnot49 = xor i1 %cmp47, true, !dbg !8990
  %lnot51 = xor i1 %lnot49, true, !dbg !8990
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !8990
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !8990
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 0), !dbg !8990
  %tobool55 = icmp ne i64 %expval54, 0, !dbg !8990
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !8992

if.then56:                                        ; preds = %if.end46
  %16 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !8993, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %16, ptr noundef @.str.43), !dbg !8995
  store ptr null, ptr %retval, align 8, !dbg !8996
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8996

if.end57:                                         ; preds = %if.end46
  %17 = load i64, ptr %left_len, align 8, !dbg !8997, !tbaa !1836
  %18 = load i64, ptr %right_len, align 8, !dbg !8998, !tbaa !1836
  %add = add i64 %17, %18, !dbg !8999
  store i64 %add, ptr %new_len, align 8, !dbg !9000, !tbaa !1836
  %19 = load ptr, ptr %left, align 8, !dbg !9001, !tbaa !1461
  %call58 = call i32 @__Pyx_unicode_modifiable(ptr noundef %19), !dbg !9003
  %tobool59 = icmp ne i32 %call58, 0, !dbg !9003
  br i1 %tobool59, label %land.lhs.true, label %if.else, !dbg !9004

land.lhs.true:                                    ; preds = %if.end57
  %20 = load ptr, ptr %right.addr, align 8, !dbg !9005, !tbaa !1461
  %call60 = call i32 @Py_IS_TYPE(ptr noundef %20, ptr noundef @PyUnicode_Type), !dbg !9005
  %tobool61 = icmp ne i32 %call60, 0, !dbg !9005
  br i1 %tobool61, label %land.lhs.true62, label %if.else, !dbg !9006

land.lhs.true62:                                  ; preds = %land.lhs.true
  %21 = load ptr, ptr %right.addr, align 8, !dbg !9007, !tbaa !1461
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %21, i32 0, i32 3, !dbg !9007
  %bf.load = load i32, ptr %state, align 8, !dbg !9007
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !9007
  %bf.clear = and i32 %bf.lshr, 7, !dbg !9007
  %22 = load ptr, ptr %left, align 8, !dbg !9008, !tbaa !1461
  %state63 = getelementptr inbounds %struct.PyASCIIObject, ptr %22, i32 0, i32 3, !dbg !9008
  %bf.load64 = load i32, ptr %state63, align 8, !dbg !9008
  %bf.lshr65 = lshr i32 %bf.load64, 2, !dbg !9008
  %bf.clear66 = and i32 %bf.lshr65, 7, !dbg !9008
  %cmp67 = icmp sle i32 %bf.clear, %bf.clear66, !dbg !9009
  br i1 %cmp67, label %land.lhs.true69, label %if.else, !dbg !9010

land.lhs.true69:                                  ; preds = %land.lhs.true62
  %23 = load ptr, ptr %left, align 8, !dbg !9011, !tbaa !1461
  %call70 = call i32 @PyUnicode_IS_ASCII(ptr noundef %23), !dbg !9011
  %tobool71 = icmp ne i32 %call70, 0, !dbg !9011
  br i1 %tobool71, label %land.lhs.true72, label %if.then75, !dbg !9012

land.lhs.true72:                                  ; preds = %land.lhs.true69
  %24 = load ptr, ptr %right.addr, align 8, !dbg !9013, !tbaa !1461
  %call73 = call i32 @PyUnicode_IS_ASCII(ptr noundef %24), !dbg !9013
  %tobool74 = icmp ne i32 %call73, 0, !dbg !9013
  br i1 %tobool74, label %if.then75, label %if.else, !dbg !9014

if.then75:                                        ; preds = %land.lhs.true72, %land.lhs.true69
  %25 = load ptr, ptr %p_left.addr, align 8, !dbg !9015, !tbaa !1461
  %26 = load i64, ptr %new_len, align 8, !dbg !9015, !tbaa !1836
  %call76 = call i32 @PyUnicode_Resize(ptr noundef %25, i64 noundef %26), !dbg !9015
  %cmp77 = icmp ne i32 %call76, 0, !dbg !9015
  %lnot79 = xor i1 %cmp77, true, !dbg !9015
  %lnot81 = xor i1 %lnot79, true, !dbg !9015
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !9015
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !9015
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 0), !dbg !9015
  %tobool85 = icmp ne i64 %expval84, 0, !dbg !9015
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !9018

if.then86:                                        ; preds = %if.then75
  store ptr null, ptr %retval, align 8, !dbg !9019
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9019

if.end87:                                         ; preds = %if.then75
  %27 = load ptr, ptr %p_left.addr, align 8, !dbg !9021, !tbaa !1461
  %28 = load ptr, ptr %27, align 8, !dbg !9021, !tbaa !1461
  call void @Py_INCREF(ptr noundef %28), !dbg !9021
  %29 = load ptr, ptr %p_left.addr, align 8, !dbg !9022, !tbaa !1461
  %30 = load ptr, ptr %29, align 8, !dbg !9023, !tbaa !1461
  %31 = load i64, ptr %left_len, align 8, !dbg !9024, !tbaa !1836
  %32 = load ptr, ptr %right.addr, align 8, !dbg !9025, !tbaa !1461
  %33 = load i64, ptr %right_len, align 8, !dbg !9026, !tbaa !1836
  call void @_PyUnicode_FastCopyCharacters(ptr noundef %30, i64 noundef %31, ptr noundef %32, i64 noundef 0, i64 noundef %33), !dbg !9027
  %34 = load ptr, ptr %p_left.addr, align 8, !dbg !9028, !tbaa !1461
  %35 = load ptr, ptr %34, align 8, !dbg !9029, !tbaa !1461
  store ptr %35, ptr %retval, align 8, !dbg !9030
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9030

if.else:                                          ; preds = %land.lhs.true72, %land.lhs.true62, %land.lhs.true, %if.end57
  %36 = load ptr, ptr %left, align 8, !dbg !9031, !tbaa !1461
  %37 = load ptr, ptr %right.addr, align 8, !dbg !9031, !tbaa !1461
  %call88 = call ptr @PyUnicode_Concat(ptr noundef %36, ptr noundef %37), !dbg !9031
  store ptr %call88, ptr %retval, align 8, !dbg !9033
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9033

cleanup:                                          ; preds = %if.else, %if.end87, %if.then86, %if.then56, %if.then45, %if.then40, %if.then35, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_len) #10, !dbg !9034
  call void @llvm.lifetime.end.p0(i64 8, ptr %right_len) #10, !dbg !9034
  call void @llvm.lifetime.end.p0(i64 8, ptr %left_len) #10, !dbg !9034
  call void @llvm.lifetime.end.p0(i64 8, ptr %left) #10, !dbg !9034
  %38 = load ptr, ptr %retval, align 8, !dbg !9034
  ret ptr %38, !dbg !9034
}

declare !dbg !9035 i64 @PyDict_Size(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethod0(ptr noundef %obj, ptr noundef %method_name) #0 !dbg !9036 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %method_name.addr = alloca ptr, align 8
  %method = alloca ptr, align 8
  %result = alloca ptr, align 8
  %is_method = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !9038, metadata !DIExpression()), !dbg !9044
  store ptr %method_name, ptr %method_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %method_name.addr, metadata !9039, metadata !DIExpression()), !dbg !9045
  call void @llvm.lifetime.start.p0(i64 8, ptr %method) #10, !dbg !9046
  tail call void @llvm.dbg.declare(metadata ptr %method, metadata !9040, metadata !DIExpression()), !dbg !9047
  store ptr null, ptr %method, align 8, !dbg !9047, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !9046
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9041, metadata !DIExpression()), !dbg !9048
  store ptr null, ptr %result, align 8, !dbg !9048, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_method) #10, !dbg !9049
  tail call void @llvm.dbg.declare(metadata ptr %is_method, metadata !9042, metadata !DIExpression()), !dbg !9050
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !9051, !tbaa !1461
  %1 = load ptr, ptr %method_name.addr, align 8, !dbg !9052, !tbaa !1461
  %call = call i32 @__Pyx_PyObject_GetMethod(ptr noundef %0, ptr noundef %1, ptr noundef %method), !dbg !9053
  store i32 %call, ptr %is_method, align 4, !dbg !9050, !tbaa !1557
  %2 = load i32, ptr %is_method, align 4, !dbg !9054, !tbaa !1557
  %tobool = icmp ne i32 %2, 0, !dbg !9054
  %lnot = xor i1 %tobool, true, !dbg !9054
  %lnot1 = xor i1 %lnot, true, !dbg !9054
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9054
  %conv = sext i32 %lnot.ext to i64, !dbg !9054
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !9054
  %tobool2 = icmp ne i64 %expval, 0, !dbg !9054
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9056

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %method, align 8, !dbg !9057, !tbaa !1461
  %4 = load ptr, ptr %obj.addr, align 8, !dbg !9059, !tbaa !1461
  %call3 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %3, ptr noundef %4), !dbg !9060
  store ptr %call3, ptr %result, align 8, !dbg !9061, !tbaa !1461
  %5 = load ptr, ptr %method, align 8, !dbg !9062, !tbaa !1461
  call void @Py_DECREF(ptr noundef %5), !dbg !9062
  %6 = load ptr, ptr %result, align 8, !dbg !9063, !tbaa !1461
  store ptr %6, ptr %retval, align 8, !dbg !9064
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9064

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %method, align 8, !dbg !9065, !tbaa !1461
  %tobool4 = icmp ne ptr %7, null, !dbg !9065
  %lnot5 = xor i1 %tobool4, true, !dbg !9065
  %lnot7 = xor i1 %lnot5, true, !dbg !9065
  %lnot9 = xor i1 %lnot7, true, !dbg !9065
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !9065
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !9065
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !9065
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !9065
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9067

if.then14:                                        ; preds = %if.end
  br label %bad, !dbg !9068

if.end15:                                         ; preds = %if.end
  %8 = load ptr, ptr %method, align 8, !dbg !9069, !tbaa !1461
  %call16 = call ptr @__Pyx_PyObject_CallNoArg(ptr noundef %8), !dbg !9070
  store ptr %call16, ptr %result, align 8, !dbg !9071, !tbaa !1461
  %9 = load ptr, ptr %method, align 8, !dbg !9072, !tbaa !1461
  call void @Py_DECREF(ptr noundef %9), !dbg !9072
  br label %bad, !dbg !9072

bad:                                              ; preds = %if.end15, %if.then14
  tail call void @llvm.dbg.label(metadata !9043), !dbg !9073
  %10 = load ptr, ptr %result, align 8, !dbg !9074, !tbaa !1461
  store ptr %10, ptr %retval, align 8, !dbg !9075
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9075

cleanup:                                          ; preds = %bad, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_method) #10, !dbg !9076
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !9076
  call void @llvm.lifetime.end.p0(i64 8, ptr %method) #10, !dbg !9076
  %11 = load ptr, ptr %retval, align 8, !dbg !9076
  ret ptr %11, !dbg !9076
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallNoArg(ptr noundef %func) #3 !dbg !9077 {
entry:
  %func.addr = alloca ptr, align 8
  %arg = alloca [2 x ptr], align 16
  store ptr %func, ptr %func.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !9079, metadata !DIExpression()), !dbg !9081
  call void @llvm.lifetime.start.p0(i64 16, ptr %arg) #10, !dbg !9082
  tail call void @llvm.dbg.declare(metadata ptr %arg, metadata !9080, metadata !DIExpression()), !dbg !9083
  call void @llvm.memset.p0.i64(ptr align 16 %arg, i8 0, i64 16, i1 false), !dbg !9083
  %0 = load ptr, ptr %func.addr, align 8, !dbg !9084, !tbaa !1461
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %arg, i64 0, i64 0, !dbg !9084
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !9084
  %call = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %0, ptr noundef %add.ptr, i64 noundef -9223372036854775808, ptr noundef null), !dbg !9084
  call void @llvm.lifetime.end.p0(i64 16, ptr %arg) #10, !dbg !9085
  ret ptr %call, !dbg !9086
}

declare !dbg !9087 i32 @PyDict_Next(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !9090 ptr @PyIter_Next(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_unpack_tuple2_exact(ptr noundef %tuple, ptr noundef %pvalue1, ptr noundef %pvalue2, i32 noundef %decref_tuple) #3 !dbg !9091 {
entry:
  %tuple.addr = alloca ptr, align 8
  %pvalue1.addr = alloca ptr, align 8
  %pvalue2.addr = alloca ptr, align 8
  %decref_tuple.addr = alloca i32, align 4
  %value1 = alloca ptr, align 8
  %value2 = alloca ptr, align 8
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !9095, metadata !DIExpression()), !dbg !9101
  store ptr %pvalue1, ptr %pvalue1.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %pvalue1.addr, metadata !9096, metadata !DIExpression()), !dbg !9102
  store ptr %pvalue2, ptr %pvalue2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %pvalue2.addr, metadata !9097, metadata !DIExpression()), !dbg !9103
  store i32 %decref_tuple, ptr %decref_tuple.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %decref_tuple.addr, metadata !9098, metadata !DIExpression()), !dbg !9104
  call void @llvm.lifetime.start.p0(i64 8, ptr %value1) #10, !dbg !9105
  tail call void @llvm.dbg.declare(metadata ptr %value1, metadata !9099, metadata !DIExpression()), !dbg !9106
  store ptr null, ptr %value1, align 8, !dbg !9106, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %value2) #10, !dbg !9105
  tail call void @llvm.dbg.declare(metadata ptr %value2, metadata !9100, metadata !DIExpression()), !dbg !9107
  store ptr null, ptr %value2, align 8, !dbg !9107, !tbaa !1461
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !9108, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %0, i32 0, i32 1, !dbg !9108
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !9108
  %1 = load ptr, ptr %arrayidx, align 8, !dbg !9108, !tbaa !1461
  store ptr %1, ptr %value1, align 8, !dbg !9109, !tbaa !1461
  %2 = load ptr, ptr %value1, align 8, !dbg !9110, !tbaa !1461
  call void @Py_INCREF(ptr noundef %2), !dbg !9110
  %3 = load ptr, ptr %tuple.addr, align 8, !dbg !9111, !tbaa !1461
  %ob_item1 = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1, !dbg !9111
  %arrayidx2 = getelementptr [1 x ptr], ptr %ob_item1, i64 0, i64 1, !dbg !9111
  %4 = load ptr, ptr %arrayidx2, align 8, !dbg !9111, !tbaa !1461
  store ptr %4, ptr %value2, align 8, !dbg !9112, !tbaa !1461
  %5 = load ptr, ptr %value2, align 8, !dbg !9113, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !9113
  %6 = load i32, ptr %decref_tuple.addr, align 4, !dbg !9114, !tbaa !1557
  %tobool = icmp ne i32 %6, 0, !dbg !9114
  br i1 %tobool, label %if.then, label %if.end, !dbg !9116

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %tuple.addr, align 8, !dbg !9117, !tbaa !1461
  call void @Py_DECREF(ptr noundef %7), !dbg !9117
  br label %if.end, !dbg !9119

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %value1, align 8, !dbg !9120, !tbaa !1461
  %9 = load ptr, ptr %pvalue1.addr, align 8, !dbg !9121, !tbaa !1461
  store ptr %8, ptr %9, align 8, !dbg !9122, !tbaa !1461
  %10 = load ptr, ptr %value2, align 8, !dbg !9123, !tbaa !1461
  %11 = load ptr, ptr %pvalue2.addr, align 8, !dbg !9124, !tbaa !1461
  store ptr %10, ptr %11, align 8, !dbg !9125, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %value2) #10, !dbg !9126
  call void @llvm.lifetime.end.p0(i64 8, ptr %value1) #10, !dbg !9126
  ret i32 0, !dbg !9127
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_UnpackTupleError(ptr noundef %t, i64 noundef %index) #0 !dbg !9128 {
entry:
  %t.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  store ptr %t, ptr %t.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !9132, metadata !DIExpression()), !dbg !9134
  store i64 %index, ptr %index.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !9133, metadata !DIExpression()), !dbg !9135
  %0 = load ptr, ptr %t.addr, align 8, !dbg !9136, !tbaa !1461
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !9138
  br i1 %cmp, label %if.then, label %if.else, !dbg !9139

if.then:                                          ; preds = %entry
  call void @__Pyx_RaiseNoneNotIterableError(), !dbg !9140
  br label %if.end5, !dbg !9142

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %t.addr, align 8, !dbg !9143, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1), !dbg !9143
  %2 = load i64, ptr %index.addr, align 8, !dbg !9145, !tbaa !1836
  %cmp1 = icmp slt i64 %call, %2, !dbg !9146
  br i1 %cmp1, label %if.then2, label %if.else4, !dbg !9147

if.then2:                                         ; preds = %if.else
  %3 = load ptr, ptr %t.addr, align 8, !dbg !9148, !tbaa !1461
  %call3 = call i64 @PyTuple_GET_SIZE(ptr noundef %3), !dbg !9148
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %call3), !dbg !9150
  br label %if.end, !dbg !9151

if.else4:                                         ; preds = %if.else
  %4 = load i64, ptr %index.addr, align 8, !dbg !9152, !tbaa !1836
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef %4), !dbg !9154
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void, !dbg !9155
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_unpack_tuple2_generic(ptr noundef %tuple, ptr noundef %pvalue1, ptr noundef %pvalue2, i32 noundef %has_known_size, i32 noundef %decref_tuple) #0 !dbg !9156 {
entry:
  %retval = alloca i32, align 4
  %tuple.addr = alloca ptr, align 8
  %pvalue1.addr = alloca ptr, align 8
  %pvalue2.addr = alloca ptr, align 8
  %has_known_size.addr = alloca i32, align 4
  %decref_tuple.addr = alloca i32, align 4
  %index = alloca i64, align 8
  %value1 = alloca ptr, align 8
  %value2 = alloca ptr, align 8
  %iter = alloca ptr, align 8
  %iternext = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !9160, metadata !DIExpression()), !dbg !9172
  store ptr %pvalue1, ptr %pvalue1.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %pvalue1.addr, metadata !9161, metadata !DIExpression()), !dbg !9173
  store ptr %pvalue2, ptr %pvalue2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %pvalue2.addr, metadata !9162, metadata !DIExpression()), !dbg !9174
  store i32 %has_known_size, ptr %has_known_size.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %has_known_size.addr, metadata !9163, metadata !DIExpression()), !dbg !9175
  store i32 %decref_tuple, ptr %decref_tuple.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %decref_tuple.addr, metadata !9164, metadata !DIExpression()), !dbg !9176
  call void @llvm.lifetime.start.p0(i64 8, ptr %index) #10, !dbg !9177
  tail call void @llvm.dbg.declare(metadata ptr %index, metadata !9165, metadata !DIExpression()), !dbg !9178
  call void @llvm.lifetime.start.p0(i64 8, ptr %value1) #10, !dbg !9179
  tail call void @llvm.dbg.declare(metadata ptr %value1, metadata !9166, metadata !DIExpression()), !dbg !9180
  store ptr null, ptr %value1, align 8, !dbg !9180, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %value2) #10, !dbg !9179
  tail call void @llvm.dbg.declare(metadata ptr %value2, metadata !9167, metadata !DIExpression()), !dbg !9181
  store ptr null, ptr %value2, align 8, !dbg !9181, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %iter) #10, !dbg !9179
  tail call void @llvm.dbg.declare(metadata ptr %iter, metadata !9168, metadata !DIExpression()), !dbg !9182
  store ptr null, ptr %iter, align 8, !dbg !9182, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %iternext) #10, !dbg !9183
  tail call void @llvm.dbg.declare(metadata ptr %iternext, metadata !9169, metadata !DIExpression()), !dbg !9184
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !9185, !tbaa !1461
  %call = call ptr @PyObject_GetIter(ptr noundef %0), !dbg !9186
  store ptr %call, ptr %iter, align 8, !dbg !9187, !tbaa !1461
  %1 = load ptr, ptr %iter, align 8, !dbg !9188, !tbaa !1461
  %tobool = icmp ne ptr %1, null, !dbg !9188
  %lnot = xor i1 %tobool, true, !dbg !9188
  %lnot1 = xor i1 %lnot, true, !dbg !9188
  %lnot2 = xor i1 %lnot1, true, !dbg !9188
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9188
  %conv = sext i32 %lnot.ext to i64, !dbg !9188
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9188
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9188
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9190

if.then:                                          ; preds = %entry
  br label %bad, !dbg !9191

if.end:                                           ; preds = %entry
  %2 = load i32, ptr %decref_tuple.addr, align 4, !dbg !9192, !tbaa !1557
  %tobool4 = icmp ne i32 %2, 0, !dbg !9192
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9194

if.then5:                                         ; preds = %if.end
  %3 = load ptr, ptr %tuple.addr, align 8, !dbg !9195, !tbaa !1461
  call void @Py_DECREF(ptr noundef %3), !dbg !9195
  store ptr null, ptr %tuple.addr, align 8, !dbg !9197, !tbaa !1461
  br label %if.end6, !dbg !9198

if.end6:                                          ; preds = %if.then5, %if.end
  %4 = load ptr, ptr %iter, align 8, !dbg !9199, !tbaa !1461
  %call7 = call ptr @Py_TYPE(ptr noundef %4), !dbg !9199
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call7, i32 0, i32 26, !dbg !9199
  %5 = load ptr, ptr %tp_iternext, align 8, !dbg !9199, !tbaa !1896
  store ptr %5, ptr %iternext, align 8, !dbg !9200, !tbaa !1461
  %6 = load ptr, ptr %iternext, align 8, !dbg !9201, !tbaa !1461
  %7 = load ptr, ptr %iter, align 8, !dbg !9202, !tbaa !1461
  %call8 = call ptr %6(ptr noundef %7), !dbg !9201
  store ptr %call8, ptr %value1, align 8, !dbg !9203, !tbaa !1461
  %8 = load ptr, ptr %value1, align 8, !dbg !9204, !tbaa !1461
  %tobool9 = icmp ne ptr %8, null, !dbg !9204
  %lnot10 = xor i1 %tobool9, true, !dbg !9204
  %lnot12 = xor i1 %lnot10, true, !dbg !9204
  %lnot14 = xor i1 %lnot12, true, !dbg !9204
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !9204
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !9204
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 0), !dbg !9204
  %tobool18 = icmp ne i64 %expval17, 0, !dbg !9204
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !9206

if.then19:                                        ; preds = %if.end6
  store i64 0, ptr %index, align 8, !dbg !9207, !tbaa !1836
  br label %unpacking_failed, !dbg !9209

if.end20:                                         ; preds = %if.end6
  %9 = load ptr, ptr %iternext, align 8, !dbg !9210, !tbaa !1461
  %10 = load ptr, ptr %iter, align 8, !dbg !9211, !tbaa !1461
  %call21 = call ptr %9(ptr noundef %10), !dbg !9210
  store ptr %call21, ptr %value2, align 8, !dbg !9212, !tbaa !1461
  %11 = load ptr, ptr %value2, align 8, !dbg !9213, !tbaa !1461
  %tobool22 = icmp ne ptr %11, null, !dbg !9213
  %lnot23 = xor i1 %tobool22, true, !dbg !9213
  %lnot25 = xor i1 %lnot23, true, !dbg !9213
  %lnot27 = xor i1 %lnot25, true, !dbg !9213
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !9213
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !9213
  %expval30 = call i64 @llvm.expect.i64(i64 %conv29, i64 0), !dbg !9213
  %tobool31 = icmp ne i64 %expval30, 0, !dbg !9213
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !9215

if.then32:                                        ; preds = %if.end20
  store i64 1, ptr %index, align 8, !dbg !9216, !tbaa !1836
  br label %unpacking_failed, !dbg !9218

if.end33:                                         ; preds = %if.end20
  %12 = load i32, ptr %has_known_size.addr, align 4, !dbg !9219, !tbaa !1557
  %tobool34 = icmp ne i32 %12, 0, !dbg !9219
  br i1 %tobool34, label %if.end46, label %land.lhs.true, !dbg !9221

land.lhs.true:                                    ; preds = %if.end33
  %13 = load ptr, ptr %iternext, align 8, !dbg !9222, !tbaa !1461
  %14 = load ptr, ptr %iter, align 8, !dbg !9222, !tbaa !1461
  %call35 = call ptr %13(ptr noundef %14), !dbg !9222
  %call36 = call i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %call35, i64 noundef 2), !dbg !9222
  %tobool37 = icmp ne i32 %call36, 0, !dbg !9222
  %lnot38 = xor i1 %tobool37, true, !dbg !9222
  %lnot40 = xor i1 %lnot38, true, !dbg !9222
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !9222
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !9222
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 0), !dbg !9222
  %tobool44 = icmp ne i64 %expval43, 0, !dbg !9222
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !9223

if.then45:                                        ; preds = %land.lhs.true
  br label %bad, !dbg !9224

if.end46:                                         ; preds = %land.lhs.true, %if.end33
  %15 = load ptr, ptr %iter, align 8, !dbg !9225, !tbaa !1461
  call void @Py_DECREF(ptr noundef %15), !dbg !9225
  %16 = load ptr, ptr %value1, align 8, !dbg !9226, !tbaa !1461
  %17 = load ptr, ptr %pvalue1.addr, align 8, !dbg !9227, !tbaa !1461
  store ptr %16, ptr %17, align 8, !dbg !9228, !tbaa !1461
  %18 = load ptr, ptr %value2, align 8, !dbg !9229, !tbaa !1461
  %19 = load ptr, ptr %pvalue2.addr, align 8, !dbg !9230, !tbaa !1461
  store ptr %18, ptr %19, align 8, !dbg !9231, !tbaa !1461
  store i32 0, ptr %retval, align 4, !dbg !9232
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9232

unpacking_failed:                                 ; preds = %if.then32, %if.then19
  tail call void @llvm.dbg.label(metadata !9170), !dbg !9233
  %20 = load i32, ptr %has_known_size.addr, align 4, !dbg !9234, !tbaa !1557
  %tobool47 = icmp ne i32 %20, 0, !dbg !9234
  br i1 %tobool47, label %if.end52, label %land.lhs.true48, !dbg !9236

land.lhs.true48:                                  ; preds = %unpacking_failed
  %call49 = call i32 @__Pyx_IterFinish(), !dbg !9237
  %cmp = icmp eq i32 %call49, 0, !dbg !9238
  br i1 %cmp, label %if.then51, label %if.end52, !dbg !9239

if.then51:                                        ; preds = %land.lhs.true48
  %21 = load i64, ptr %index, align 8, !dbg !9240, !tbaa !1836
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %21), !dbg !9241
  br label %if.end52, !dbg !9241

if.end52:                                         ; preds = %if.then51, %land.lhs.true48, %unpacking_failed
  br label %bad, !dbg !9242

bad:                                              ; preds = %if.end52, %if.then45, %if.then
  tail call void @llvm.dbg.label(metadata !9171), !dbg !9243
  %22 = load ptr, ptr %iter, align 8, !dbg !9244, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %22), !dbg !9244
  %23 = load ptr, ptr %value1, align 8, !dbg !9245, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %23), !dbg !9245
  %24 = load ptr, ptr %value2, align 8, !dbg !9246, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %24), !dbg !9246
  %25 = load i32, ptr %decref_tuple.addr, align 4, !dbg !9247, !tbaa !1557
  %tobool53 = icmp ne i32 %25, 0, !dbg !9247
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !9249

if.then54:                                        ; preds = %bad
  %26 = load ptr, ptr %tuple.addr, align 8, !dbg !9250, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %26), !dbg !9250
  br label %if.end55, !dbg !9252

if.end55:                                         ; preds = %if.then54, %bad
  store i32 -1, ptr %retval, align 4, !dbg !9253
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9253

cleanup:                                          ; preds = %if.end55, %if.end46
  call void @llvm.lifetime.end.p0(i64 8, ptr %iternext) #10, !dbg !9254
  call void @llvm.lifetime.end.p0(i64 8, ptr %iter) #10, !dbg !9254
  call void @llvm.lifetime.end.p0(i64 8, ptr %value2) #10, !dbg !9254
  call void @llvm.lifetime.end.p0(i64 8, ptr %value1) #10, !dbg !9254
  call void @llvm.lifetime.end.p0(i64 8, ptr %index) #10, !dbg !9254
  %27 = load i32, ptr %retval, align 4, !dbg !9254
  ret i32 %27, !dbg !9254
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseNoneNotIterableError() #3 !dbg !9255 {
entry:
  %0 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !9256, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %0, ptr noundef @.str.40), !dbg !9257
  ret void, !dbg !9258
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_unicode_modifiable(ptr noundef %unicode) #0 !dbg !9259 {
entry:
  %retval = alloca i32, align 4
  %unicode.addr = alloca ptr, align 8
  store ptr %unicode, ptr %unicode.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %unicode.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  %0 = load ptr, ptr %unicode.addr, align 8, !dbg !9263, !tbaa !1461
  %call = call i64 @Py_REFCNT(ptr noundef %0), !dbg !9263
  %cmp = icmp ne i64 %call, 1, !dbg !9265
  br i1 %cmp, label %if.then, label %if.end, !dbg !9266

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !9267
  br label %return, !dbg !9267

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %unicode.addr, align 8, !dbg !9268, !tbaa !1461
  %call1 = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyUnicode_Type), !dbg !9268
  %tobool = icmp ne i32 %call1, 0, !dbg !9268
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9270

if.then2:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !9271
  br label %return, !dbg !9271

if.end3:                                          ; preds = %if.end
  %2 = load ptr, ptr %unicode.addr, align 8, !dbg !9272, !tbaa !1461
  %call4 = call i32 @PyUnicode_CHECK_INTERNED(ptr noundef %2), !dbg !9272
  %tobool5 = icmp ne i32 %call4, 0, !dbg !9272
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9274

if.then6:                                         ; preds = %if.end3
  store i32 0, ptr %retval, align 4, !dbg !9275
  br label %return, !dbg !9275

if.end7:                                          ; preds = %if.end3
  store i32 1, ptr %retval, align 4, !dbg !9276
  br label %return, !dbg !9276

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !9277
  ret i32 %3, !dbg !9277
}

declare !dbg !9278 i32 @PyUnicode_Resize(ptr noundef, i64 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @Py_REFCNT(ptr noundef %ob) #3 !dbg !9281 {
entry:
  %ob.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !9283, metadata !DIExpression()), !dbg !9284
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !9285, !tbaa !1461
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0, !dbg !9286
  %1 = load i64, ptr %ob_refcnt, align 8, !dbg !9286, !tbaa !2086
  ret i64 %1, !dbg !9287
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_CHECK_INTERNED(ptr noundef %op) #3 !dbg !9288 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !9290, metadata !DIExpression()), !dbg !9291
  %0 = load ptr, ptr %op.addr, align 8, !dbg !9292, !tbaa !1461
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3, !dbg !9293
  %bf.load = load i32, ptr %state, align 8, !dbg !9294
  %bf.clear = and i32 %bf.load, 3, !dbg !9294
  ret i32 %bf.clear, !dbg !9295
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_tp_dealloc_6Cython_7Runtime_8refnanny_Context(ptr noundef %o) #0 !dbg !9296 {
entry:
  %o.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp3 = alloca ptr, align 8
  %_py_tmp11 = alloca ptr, align 8
  %_py_tmp19 = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9298, metadata !DIExpression()), !dbg !9308
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #10, !dbg !9309
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !9299, metadata !DIExpression()), !dbg !9310
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9311, !tbaa !1461
  store ptr %0, ptr %p, align 8, !dbg !9310, !tbaa !1461
  %1 = load ptr, ptr %o.addr, align 8, !dbg !9312, !tbaa !1461
  call void @PyObject_GC_UnTrack(ptr noundef %1), !dbg !9313
  br label %do.body, !dbg !9314

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #10, !dbg !9315
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !9300, metadata !DIExpression()), !dbg !9315
  %2 = load ptr, ptr %p, align 8, !dbg !9315, !tbaa !1461
  %name = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %2, i32 0, i32 2, !dbg !9315
  %3 = load ptr, ptr %name, align 8, !dbg !9315, !tbaa !3597
  store ptr %3, ptr %_py_tmp, align 8, !dbg !9315, !tbaa !1461
  %4 = load ptr, ptr %_py_tmp, align 8, !dbg !9316, !tbaa !1461
  %cmp = icmp ne ptr %4, null, !dbg !9316
  br i1 %cmp, label %if.then, label %if.end, !dbg !9315

if.then:                                          ; preds = %do.body
  %5 = load ptr, ptr %p, align 8, !dbg !9318, !tbaa !1461
  %name1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %5, i32 0, i32 2, !dbg !9318
  store ptr null, ptr %name1, align 8, !dbg !9318, !tbaa !3597
  %6 = load ptr, ptr %_py_tmp, align 8, !dbg !9318, !tbaa !1461
  call void @Py_DECREF(ptr noundef %6), !dbg !9318
  br label %if.end, !dbg !9318

if.end:                                           ; preds = %if.then, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #10, !dbg !9314
  br label %do.cond, !dbg !9315

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !9315

do.end:                                           ; preds = %do.cond
  br label %do.body2, !dbg !9320

do.body2:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp3) #10, !dbg !9321
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp3, metadata !9302, metadata !DIExpression()), !dbg !9321
  %7 = load ptr, ptr %p, align 8, !dbg !9321, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %7, i32 0, i32 3, !dbg !9321
  %8 = load ptr, ptr %filename, align 8, !dbg !9321, !tbaa !2905
  store ptr %8, ptr %_py_tmp3, align 8, !dbg !9321, !tbaa !1461
  %9 = load ptr, ptr %_py_tmp3, align 8, !dbg !9322, !tbaa !1461
  %cmp4 = icmp ne ptr %9, null, !dbg !9322
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !9321

if.then5:                                         ; preds = %do.body2
  %10 = load ptr, ptr %p, align 8, !dbg !9324, !tbaa !1461
  %filename6 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %10, i32 0, i32 3, !dbg !9324
  store ptr null, ptr %filename6, align 8, !dbg !9324, !tbaa !2905
  %11 = load ptr, ptr %_py_tmp3, align 8, !dbg !9324, !tbaa !1461
  call void @Py_DECREF(ptr noundef %11), !dbg !9324
  br label %if.end7, !dbg !9324

if.end7:                                          ; preds = %if.then5, %do.body2
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp3) #10, !dbg !9320
  br label %do.cond8, !dbg !9321

do.cond8:                                         ; preds = %if.end7
  br label %do.end9, !dbg !9321

do.end9:                                          ; preds = %do.cond8
  br label %do.body10, !dbg !9326

do.body10:                                        ; preds = %do.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp11) #10, !dbg !9327
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp11, metadata !9304, metadata !DIExpression()), !dbg !9327
  %12 = load ptr, ptr %p, align 8, !dbg !9327, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %12, i32 0, i32 4, !dbg !9327
  %13 = load ptr, ptr %refs, align 8, !dbg !9327, !tbaa !4959
  store ptr %13, ptr %_py_tmp11, align 8, !dbg !9327, !tbaa !1461
  %14 = load ptr, ptr %_py_tmp11, align 8, !dbg !9328, !tbaa !1461
  %cmp12 = icmp ne ptr %14, null, !dbg !9328
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !9327

if.then13:                                        ; preds = %do.body10
  %15 = load ptr, ptr %p, align 8, !dbg !9330, !tbaa !1461
  %refs14 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %15, i32 0, i32 4, !dbg !9330
  store ptr null, ptr %refs14, align 8, !dbg !9330, !tbaa !4959
  %16 = load ptr, ptr %_py_tmp11, align 8, !dbg !9330, !tbaa !1461
  call void @Py_DECREF(ptr noundef %16), !dbg !9330
  br label %if.end15, !dbg !9330

if.end15:                                         ; preds = %if.then13, %do.body10
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp11) #10, !dbg !9326
  br label %do.cond16, !dbg !9327

do.cond16:                                        ; preds = %if.end15
  br label %do.end17, !dbg !9327

do.end17:                                         ; preds = %do.cond16
  br label %do.body18, !dbg !9332

do.body18:                                        ; preds = %do.end17
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp19) #10, !dbg !9333
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp19, metadata !9306, metadata !DIExpression()), !dbg !9333
  %17 = load ptr, ptr %p, align 8, !dbg !9333, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %17, i32 0, i32 5, !dbg !9333
  %18 = load ptr, ptr %errors, align 8, !dbg !9333, !tbaa !4894
  store ptr %18, ptr %_py_tmp19, align 8, !dbg !9333, !tbaa !1461
  %19 = load ptr, ptr %_py_tmp19, align 8, !dbg !9334, !tbaa !1461
  %cmp20 = icmp ne ptr %19, null, !dbg !9334
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !9333

if.then21:                                        ; preds = %do.body18
  %20 = load ptr, ptr %p, align 8, !dbg !9336, !tbaa !1461
  %errors22 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %20, i32 0, i32 5, !dbg !9336
  store ptr null, ptr %errors22, align 8, !dbg !9336, !tbaa !4894
  %21 = load ptr, ptr %_py_tmp19, align 8, !dbg !9336, !tbaa !1461
  call void @Py_DECREF(ptr noundef %21), !dbg !9336
  br label %if.end23, !dbg !9336

if.end23:                                         ; preds = %if.then21, %do.body18
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp19) #10, !dbg !9332
  br label %do.cond24, !dbg !9333

do.cond24:                                        ; preds = %if.end23
  br label %do.end25, !dbg !9333

do.end25:                                         ; preds = %do.cond24
  %22 = load ptr, ptr %o.addr, align 8, !dbg !9338, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %22), !dbg !9338
  %tp_free = getelementptr inbounds %struct._typeobject, ptr %call, i32 0, i32 38, !dbg !9339
  %23 = load ptr, ptr %tp_free, align 8, !dbg !9339, !tbaa !9340
  %24 = load ptr, ptr %o.addr, align 8, !dbg !9341, !tbaa !1461
  call void %23(ptr noundef %24), !dbg !9342
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #10, !dbg !9343
  ret void, !dbg !9343
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_traverse_6Cython_7Runtime_8refnanny_Context(ptr noundef %o, ptr noundef %v, ptr noundef %a) #0 !dbg !9344 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %e = alloca i32, align 4
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9346, metadata !DIExpression()), !dbg !9351
  store ptr %v, ptr %v.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !9347, metadata !DIExpression()), !dbg !9352
  store ptr %a, ptr %a.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !9348, metadata !DIExpression()), !dbg !9353
  call void @llvm.lifetime.start.p0(i64 4, ptr %e) #10, !dbg !9354
  tail call void @llvm.dbg.declare(metadata ptr %e, metadata !9349, metadata !DIExpression()), !dbg !9355
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #10, !dbg !9356
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !9350, metadata !DIExpression()), !dbg !9357
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9358, !tbaa !1461
  store ptr %0, ptr %p, align 8, !dbg !9357, !tbaa !1461
  %1 = load ptr, ptr %p, align 8, !dbg !9359, !tbaa !1461
  %name = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 2, !dbg !9361
  %2 = load ptr, ptr %name, align 8, !dbg !9361, !tbaa !3597
  %tobool = icmp ne ptr %2, null, !dbg !9359
  br i1 %tobool, label %if.then, label %if.end4, !dbg !9362

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %v.addr, align 8, !dbg !9363, !tbaa !1461
  %4 = load ptr, ptr %p, align 8, !dbg !9365, !tbaa !1461
  %name1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %4, i32 0, i32 2, !dbg !9366
  %5 = load ptr, ptr %name1, align 8, !dbg !9366, !tbaa !3597
  %6 = load ptr, ptr %a.addr, align 8, !dbg !9367, !tbaa !1461
  %call = call i32 %3(ptr noundef %5, ptr noundef %6), !dbg !9368
  store i32 %call, ptr %e, align 4, !dbg !9369, !tbaa !1557
  %7 = load i32, ptr %e, align 4, !dbg !9370, !tbaa !1557
  %tobool2 = icmp ne i32 %7, 0, !dbg !9370
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9372

if.then3:                                         ; preds = %if.then
  %8 = load i32, ptr %e, align 4, !dbg !9373, !tbaa !1557
  store i32 %8, ptr %retval, align 4, !dbg !9374
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9374

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !9375

if.end4:                                          ; preds = %if.end, %entry
  %9 = load ptr, ptr %p, align 8, !dbg !9376, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %9, i32 0, i32 3, !dbg !9378
  %10 = load ptr, ptr %filename, align 8, !dbg !9378, !tbaa !2905
  %tobool5 = icmp ne ptr %10, null, !dbg !9376
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !9379

if.then6:                                         ; preds = %if.end4
  %11 = load ptr, ptr %v.addr, align 8, !dbg !9380, !tbaa !1461
  %12 = load ptr, ptr %p, align 8, !dbg !9382, !tbaa !1461
  %filename7 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %12, i32 0, i32 3, !dbg !9383
  %13 = load ptr, ptr %filename7, align 8, !dbg !9383, !tbaa !2905
  %14 = load ptr, ptr %a.addr, align 8, !dbg !9384, !tbaa !1461
  %call8 = call i32 %11(ptr noundef %13, ptr noundef %14), !dbg !9385
  store i32 %call8, ptr %e, align 4, !dbg !9386, !tbaa !1557
  %15 = load i32, ptr %e, align 4, !dbg !9387, !tbaa !1557
  %tobool9 = icmp ne i32 %15, 0, !dbg !9387
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9389

if.then10:                                        ; preds = %if.then6
  %16 = load i32, ptr %e, align 4, !dbg !9390, !tbaa !1557
  store i32 %16, ptr %retval, align 4, !dbg !9391
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9391

if.end11:                                         ; preds = %if.then6
  br label %if.end12, !dbg !9392

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load ptr, ptr %p, align 8, !dbg !9393, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %17, i32 0, i32 4, !dbg !9395
  %18 = load ptr, ptr %refs, align 8, !dbg !9395, !tbaa !4959
  %tobool13 = icmp ne ptr %18, null, !dbg !9393
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !9396

if.then14:                                        ; preds = %if.end12
  %19 = load ptr, ptr %v.addr, align 8, !dbg !9397, !tbaa !1461
  %20 = load ptr, ptr %p, align 8, !dbg !9399, !tbaa !1461
  %refs15 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %20, i32 0, i32 4, !dbg !9400
  %21 = load ptr, ptr %refs15, align 8, !dbg !9400, !tbaa !4959
  %22 = load ptr, ptr %a.addr, align 8, !dbg !9401, !tbaa !1461
  %call16 = call i32 %19(ptr noundef %21, ptr noundef %22), !dbg !9402
  store i32 %call16, ptr %e, align 4, !dbg !9403, !tbaa !1557
  %23 = load i32, ptr %e, align 4, !dbg !9404, !tbaa !1557
  %tobool17 = icmp ne i32 %23, 0, !dbg !9404
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9406

if.then18:                                        ; preds = %if.then14
  %24 = load i32, ptr %e, align 4, !dbg !9407, !tbaa !1557
  store i32 %24, ptr %retval, align 4, !dbg !9408
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9408

if.end19:                                         ; preds = %if.then14
  br label %if.end20, !dbg !9409

if.end20:                                         ; preds = %if.end19, %if.end12
  %25 = load ptr, ptr %p, align 8, !dbg !9410, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %25, i32 0, i32 5, !dbg !9412
  %26 = load ptr, ptr %errors, align 8, !dbg !9412, !tbaa !4894
  %tobool21 = icmp ne ptr %26, null, !dbg !9410
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !9413

if.then22:                                        ; preds = %if.end20
  %27 = load ptr, ptr %v.addr, align 8, !dbg !9414, !tbaa !1461
  %28 = load ptr, ptr %p, align 8, !dbg !9416, !tbaa !1461
  %errors23 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %28, i32 0, i32 5, !dbg !9417
  %29 = load ptr, ptr %errors23, align 8, !dbg !9417, !tbaa !4894
  %30 = load ptr, ptr %a.addr, align 8, !dbg !9418, !tbaa !1461
  %call24 = call i32 %27(ptr noundef %29, ptr noundef %30), !dbg !9419
  store i32 %call24, ptr %e, align 4, !dbg !9420, !tbaa !1557
  %31 = load i32, ptr %e, align 4, !dbg !9421, !tbaa !1557
  %tobool25 = icmp ne i32 %31, 0, !dbg !9421
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9423

if.then26:                                        ; preds = %if.then22
  %32 = load i32, ptr %e, align 4, !dbg !9424, !tbaa !1557
  store i32 %32, ptr %retval, align 4, !dbg !9425
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9425

if.end27:                                         ; preds = %if.then22
  br label %if.end28, !dbg !9426

if.end28:                                         ; preds = %if.end27, %if.end20
  store i32 0, ptr %retval, align 4, !dbg !9427
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9427

cleanup:                                          ; preds = %if.end28, %if.then26, %if.then18, %if.then10, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #10, !dbg !9428
  call void @llvm.lifetime.end.p0(i64 4, ptr %e) #10, !dbg !9428
  %33 = load i32, ptr %retval, align 4, !dbg !9428
  ret i32 %33, !dbg !9428
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_clear_6Cython_7Runtime_8refnanny_Context(ptr noundef %o) #0 !dbg !9429 {
entry:
  %o.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %p = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9431, metadata !DIExpression()), !dbg !9434
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #10, !dbg !9435
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !9432, metadata !DIExpression()), !dbg !9436
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #10, !dbg !9437
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !9433, metadata !DIExpression()), !dbg !9438
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9439, !tbaa !1461
  store ptr %0, ptr %p, align 8, !dbg !9438, !tbaa !1461
  %1 = load ptr, ptr %p, align 8, !dbg !9440, !tbaa !1461
  %name = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 2, !dbg !9441
  %2 = load ptr, ptr %name, align 8, !dbg !9441, !tbaa !3597
  store ptr %2, ptr %tmp, align 8, !dbg !9442, !tbaa !1461
  %3 = load ptr, ptr %p, align 8, !dbg !9443, !tbaa !1461
  %name1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %3, i32 0, i32 2, !dbg !9444
  store ptr @_Py_NoneStruct, ptr %name1, align 8, !dbg !9445, !tbaa !3597
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9446
  %4 = load ptr, ptr %tmp, align 8, !dbg !9447, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %4), !dbg !9447
  %5 = load ptr, ptr %p, align 8, !dbg !9448, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %5, i32 0, i32 3, !dbg !9449
  %6 = load ptr, ptr %filename, align 8, !dbg !9449, !tbaa !2905
  store ptr %6, ptr %tmp, align 8, !dbg !9450, !tbaa !1461
  %7 = load ptr, ptr %p, align 8, !dbg !9451, !tbaa !1461
  %filename2 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %7, i32 0, i32 3, !dbg !9452
  store ptr @_Py_NoneStruct, ptr %filename2, align 8, !dbg !9453, !tbaa !2905
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9454
  %8 = load ptr, ptr %tmp, align 8, !dbg !9455, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %8), !dbg !9455
  %9 = load ptr, ptr %p, align 8, !dbg !9456, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %9, i32 0, i32 4, !dbg !9457
  %10 = load ptr, ptr %refs, align 8, !dbg !9457, !tbaa !4959
  store ptr %10, ptr %tmp, align 8, !dbg !9458, !tbaa !1461
  %11 = load ptr, ptr %p, align 8, !dbg !9459, !tbaa !1461
  %refs3 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %11, i32 0, i32 4, !dbg !9460
  store ptr @_Py_NoneStruct, ptr %refs3, align 8, !dbg !9461, !tbaa !4959
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9462
  %12 = load ptr, ptr %tmp, align 8, !dbg !9463, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %12), !dbg !9463
  %13 = load ptr, ptr %p, align 8, !dbg !9464, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %13, i32 0, i32 5, !dbg !9465
  %14 = load ptr, ptr %errors, align 8, !dbg !9465, !tbaa !4894
  store ptr %14, ptr %tmp, align 8, !dbg !9466, !tbaa !1461
  %15 = load ptr, ptr %p, align 8, !dbg !9467, !tbaa !1461
  %errors4 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %15, i32 0, i32 5, !dbg !9468
  store ptr @_Py_NoneStruct, ptr %errors4, align 8, !dbg !9469, !tbaa !4894
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9470
  %16 = load ptr, ptr %tmp, align 8, !dbg !9471, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %16), !dbg !9471
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #10, !dbg !9472
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #10, !dbg !9472
  ret i32 0, !dbg !9473
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_new_6Cython_7Runtime_8refnanny_Context(ptr noundef %t, ptr noundef %a, ptr noundef %k) #0 !dbg !9474 {
entry:
  %retval = alloca ptr, align 8
  %t.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %o = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !9476, metadata !DIExpression()), !dbg !9482
  store ptr %a, ptr %a.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !9477, metadata !DIExpression()), !dbg !9483
  store ptr %k, ptr %k.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %k.addr, metadata !9478, metadata !DIExpression()), !dbg !9484
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #10, !dbg !9485
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !9479, metadata !DIExpression()), !dbg !9486
  call void @llvm.lifetime.start.p0(i64 8, ptr %o) #10, !dbg !9487
  tail call void @llvm.dbg.declare(metadata ptr %o, metadata !9480, metadata !DIExpression()), !dbg !9488
  %0 = load ptr, ptr %t.addr, align 8, !dbg !9489, !tbaa !1461
  %tp_alloc = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 36, !dbg !9490
  %1 = load ptr, ptr %tp_alloc, align 8, !dbg !9490, !tbaa !9491
  %2 = load ptr, ptr %t.addr, align 8, !dbg !9492, !tbaa !1461
  %call = call ptr %1(ptr noundef %2, i64 noundef 0), !dbg !9493
  store ptr %call, ptr %o, align 8, !dbg !9494, !tbaa !1461
  %3 = load ptr, ptr %o, align 8, !dbg !9495, !tbaa !1461
  %tobool = icmp ne ptr %3, null, !dbg !9495
  %lnot = xor i1 %tobool, true, !dbg !9495
  %lnot1 = xor i1 %lnot, true, !dbg !9495
  %lnot2 = xor i1 %lnot1, true, !dbg !9495
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9495
  %conv = sext i32 %lnot.ext to i64, !dbg !9495
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9495
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9495
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9497

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !9498
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9498

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %o, align 8, !dbg !9499, !tbaa !1461
  store ptr %4, ptr %p, align 8, !dbg !9500, !tbaa !1461
  %5 = load ptr, ptr @__pyx_vtabptr_6Cython_7Runtime_8refnanny_Context, align 8, !dbg !9501, !tbaa !1461
  %6 = load ptr, ptr %p, align 8, !dbg !9502, !tbaa !1461
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %6, i32 0, i32 1, !dbg !9503
  store ptr %5, ptr %__pyx_vtab, align 8, !dbg !9504, !tbaa !9505
  %7 = load ptr, ptr %p, align 8, !dbg !9506, !tbaa !1461
  %name = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %7, i32 0, i32 2, !dbg !9507
  store ptr @_Py_NoneStruct, ptr %name, align 8, !dbg !9508, !tbaa !3597
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9509
  %8 = load ptr, ptr %p, align 8, !dbg !9510, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %8, i32 0, i32 3, !dbg !9511
  store ptr @_Py_NoneStruct, ptr %filename, align 8, !dbg !9512, !tbaa !2905
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9513
  %9 = load ptr, ptr %p, align 8, !dbg !9514, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %9, i32 0, i32 4, !dbg !9515
  store ptr @_Py_NoneStruct, ptr %refs, align 8, !dbg !9516, !tbaa !4959
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9517
  %10 = load ptr, ptr %p, align 8, !dbg !9518, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %10, i32 0, i32 5, !dbg !9519
  store ptr @_Py_NoneStruct, ptr %errors, align 8, !dbg !9520, !tbaa !4894
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !9521
  %11 = load ptr, ptr %o, align 8, !dbg !9522, !tbaa !1461
  %12 = load ptr, ptr %a.addr, align 8, !dbg !9522, !tbaa !1461
  %13 = load ptr, ptr %k.addr, align 8, !dbg !9522, !tbaa !1461
  %call4 = call i32 @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_1__cinit__(ptr noundef %11, ptr noundef %12, ptr noundef %13), !dbg !9522
  %cmp = icmp slt i32 %call4, 0, !dbg !9522
  %lnot6 = xor i1 %cmp, true, !dbg !9522
  %lnot8 = xor i1 %lnot6, true, !dbg !9522
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9522
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !9522
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !9522
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !9522
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9524

if.then13:                                        ; preds = %if.end
  br label %bad, !dbg !9525

if.end14:                                         ; preds = %if.end
  %14 = load ptr, ptr %o, align 8, !dbg !9526, !tbaa !1461
  store ptr %14, ptr %retval, align 8, !dbg !9527
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9527

bad:                                              ; preds = %if.then13
  tail call void @llvm.dbg.label(metadata !9481), !dbg !9528
  %15 = load ptr, ptr %o, align 8, !dbg !9529, !tbaa !1461
  call void @Py_DECREF(ptr noundef %15), !dbg !9529
  store ptr null, ptr %o, align 8, !dbg !9530, !tbaa !1461
  store ptr null, ptr %retval, align 8, !dbg !9531
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9531

cleanup:                                          ; preds = %bad, %if.end14, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %o) #10, !dbg !9532
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #10, !dbg !9532
  %16 = load ptr, ptr %retval, align 8, !dbg !9532
  ret ptr %16, !dbg !9532
}

declare !dbg !9533 void @PyObject_GC_UnTrack(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_name(ptr noundef %o, ptr noundef %x) #0 !dbg !9535 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9537, metadata !DIExpression()), !dbg !9539
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !9538, metadata !DIExpression()), !dbg !9540
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9541, !tbaa !1461
  %call = call ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_4name_1__get__(ptr noundef %0), !dbg !9542
  ret ptr %call, !dbg !9543
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_filename(ptr noundef %o, ptr noundef %x) #0 !dbg !9544 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9546, metadata !DIExpression()), !dbg !9548
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !9547, metadata !DIExpression()), !dbg !9549
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9550, !tbaa !1461
  %call = call ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_8filename_1__get__(ptr noundef %0), !dbg !9551
  ret ptr %call, !dbg !9552
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_refs(ptr noundef %o, ptr noundef %x) #0 !dbg !9553 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9555, metadata !DIExpression()), !dbg !9557
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !9556, metadata !DIExpression()), !dbg !9558
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9559, !tbaa !1461
  %call = call ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_4refs_1__get__(ptr noundef %0), !dbg !9560
  ret ptr %call, !dbg !9561
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_errors(ptr noundef %o, ptr noundef %x) #0 !dbg !9562 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9564, metadata !DIExpression()), !dbg !9566
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !9565, metadata !DIExpression()), !dbg !9567
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9568, !tbaa !1461
  %call = call ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_6errors_1__get__(ptr noundef %0), !dbg !9569
  ret ptr %call, !dbg !9570
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_start(ptr noundef %o, ptr noundef %x) #0 !dbg !9571 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !9573, metadata !DIExpression()), !dbg !9575
  store ptr %x, ptr %x.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !9574, metadata !DIExpression()), !dbg !9576
  %0 = load ptr, ptr %o.addr, align 8, !dbg !9577, !tbaa !1461
  %call = call ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_5start_1__get__(ptr noundef %0), !dbg !9578
  ret ptr %call, !dbg !9579
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_4name_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !9580 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9582, metadata !DIExpression()), !dbg !9585
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9586
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !9583, metadata !DIExpression()), !dbg !9587
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9588
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9584, metadata !DIExpression()), !dbg !9589
  store ptr null, ptr %__pyx_r, align 8, !dbg !9589, !tbaa !1461
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !9590, !tbaa !1461
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9591, !tbaa !1461
  %call = call ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_4name___get__(ptr noundef %0), !dbg !9592
  store ptr %call, ptr %__pyx_r, align 8, !dbg !9593, !tbaa !1461
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !9594, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9595
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9595
  ret ptr %1, !dbg !9596
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_4name___get__(ptr noundef %__pyx_v_self) #0 !dbg !9597 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9599, metadata !DIExpression()), !dbg !9602
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9603
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9600, metadata !DIExpression()), !dbg !9604
  store ptr null, ptr %__pyx_r, align 8, !dbg !9604, !tbaa !1461
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !9605, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %0), !dbg !9605
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9606, !tbaa !1461
  %name = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 2, !dbg !9606
  %2 = load ptr, ptr %name, align 8, !dbg !9606, !tbaa !3597
  call void @Py_INCREF(ptr noundef %2), !dbg !9606
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9607, !tbaa !1461
  %name1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %3, i32 0, i32 2, !dbg !9608
  %4 = load ptr, ptr %name1, align 8, !dbg !9608, !tbaa !3597
  store ptr %4, ptr %__pyx_r, align 8, !dbg !9609, !tbaa !1461
  br label %__pyx_L0, !dbg !9610

__pyx_L0:                                         ; preds = %entry
  tail call void @llvm.dbg.label(metadata !9601), !dbg !9611
  %5 = load ptr, ptr %__pyx_r, align 8, !dbg !9612, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9613
  ret ptr %5, !dbg !9614
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_8filename_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !9615 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9617, metadata !DIExpression()), !dbg !9620
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9621
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !9618, metadata !DIExpression()), !dbg !9622
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9623
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9619, metadata !DIExpression()), !dbg !9624
  store ptr null, ptr %__pyx_r, align 8, !dbg !9624, !tbaa !1461
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !9625, !tbaa !1461
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9626, !tbaa !1461
  %call = call ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_8filename___get__(ptr noundef %0), !dbg !9627
  store ptr %call, ptr %__pyx_r, align 8, !dbg !9628, !tbaa !1461
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !9629, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9630
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9630
  ret ptr %1, !dbg !9631
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_8filename___get__(ptr noundef %__pyx_v_self) #0 !dbg !9632 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9634, metadata !DIExpression()), !dbg !9637
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9638
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9635, metadata !DIExpression()), !dbg !9639
  store ptr null, ptr %__pyx_r, align 8, !dbg !9639, !tbaa !1461
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !9640, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %0), !dbg !9640
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9641, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 3, !dbg !9641
  %2 = load ptr, ptr %filename, align 8, !dbg !9641, !tbaa !2905
  call void @Py_INCREF(ptr noundef %2), !dbg !9641
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9642, !tbaa !1461
  %filename1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %3, i32 0, i32 3, !dbg !9643
  %4 = load ptr, ptr %filename1, align 8, !dbg !9643, !tbaa !2905
  store ptr %4, ptr %__pyx_r, align 8, !dbg !9644, !tbaa !1461
  br label %__pyx_L0, !dbg !9645

__pyx_L0:                                         ; preds = %entry
  tail call void @llvm.dbg.label(metadata !9636), !dbg !9646
  %5 = load ptr, ptr %__pyx_r, align 8, !dbg !9647, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9648
  ret ptr %5, !dbg !9649
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_4refs_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !9650 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9652, metadata !DIExpression()), !dbg !9655
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9656
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !9653, metadata !DIExpression()), !dbg !9657
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9658
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9654, metadata !DIExpression()), !dbg !9659
  store ptr null, ptr %__pyx_r, align 8, !dbg !9659, !tbaa !1461
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !9660, !tbaa !1461
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9661, !tbaa !1461
  %call = call ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_4refs___get__(ptr noundef %0), !dbg !9662
  store ptr %call, ptr %__pyx_r, align 8, !dbg !9663, !tbaa !1461
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !9664, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9665
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9665
  ret ptr %1, !dbg !9666
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_4refs___get__(ptr noundef %__pyx_v_self) #0 !dbg !9667 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9669, metadata !DIExpression()), !dbg !9672
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9673
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9670, metadata !DIExpression()), !dbg !9674
  store ptr null, ptr %__pyx_r, align 8, !dbg !9674, !tbaa !1461
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !9675, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %0), !dbg !9675
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9676, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 4, !dbg !9676
  %2 = load ptr, ptr %refs, align 8, !dbg !9676, !tbaa !4959
  call void @Py_INCREF(ptr noundef %2), !dbg !9676
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9677, !tbaa !1461
  %refs1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %3, i32 0, i32 4, !dbg !9678
  %4 = load ptr, ptr %refs1, align 8, !dbg !9678, !tbaa !4959
  store ptr %4, ptr %__pyx_r, align 8, !dbg !9679, !tbaa !1461
  br label %__pyx_L0, !dbg !9680

__pyx_L0:                                         ; preds = %entry
  tail call void @llvm.dbg.label(metadata !9671), !dbg !9681
  %5 = load ptr, ptr %__pyx_r, align 8, !dbg !9682, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9683
  ret ptr %5, !dbg !9684
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_6errors_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !9685 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9687, metadata !DIExpression()), !dbg !9690
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9691
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !9688, metadata !DIExpression()), !dbg !9692
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9693
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9689, metadata !DIExpression()), !dbg !9694
  store ptr null, ptr %__pyx_r, align 8, !dbg !9694, !tbaa !1461
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !9695, !tbaa !1461
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9696, !tbaa !1461
  %call = call ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_6errors___get__(ptr noundef %0), !dbg !9697
  store ptr %call, ptr %__pyx_r, align 8, !dbg !9698, !tbaa !1461
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !9699, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9700
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9700
  ret ptr %1, !dbg !9701
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_6errors___get__(ptr noundef %__pyx_v_self) #0 !dbg !9702 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9704, metadata !DIExpression()), !dbg !9707
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9708
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9705, metadata !DIExpression()), !dbg !9709
  store ptr null, ptr %__pyx_r, align 8, !dbg !9709, !tbaa !1461
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !9710, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %0), !dbg !9710
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9711, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 5, !dbg !9711
  %2 = load ptr, ptr %errors, align 8, !dbg !9711, !tbaa !4894
  call void @Py_INCREF(ptr noundef %2), !dbg !9711
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9712, !tbaa !1461
  %errors1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %3, i32 0, i32 5, !dbg !9713
  %4 = load ptr, ptr %errors1, align 8, !dbg !9713, !tbaa !4894
  store ptr %4, ptr %__pyx_r, align 8, !dbg !9714, !tbaa !1461
  br label %__pyx_L0, !dbg !9715

__pyx_L0:                                         ; preds = %entry
  tail call void @llvm.dbg.label(metadata !9706), !dbg !9716
  %5 = load ptr, ptr %__pyx_r, align 8, !dbg !9717, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9718
  ret ptr %5, !dbg !9719
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_5start_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !9720 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9722, metadata !DIExpression()), !dbg !9725
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9726
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !9723, metadata !DIExpression()), !dbg !9727
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9728
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9724, metadata !DIExpression()), !dbg !9729
  store ptr null, ptr %__pyx_r, align 8, !dbg !9729, !tbaa !1461
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !9730, !tbaa !1461
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9731, !tbaa !1461
  %call = call ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_5start___get__(ptr noundef %0), !dbg !9732
  store ptr %call, ptr %__pyx_r, align 8, !dbg !9733, !tbaa !1461
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !9734, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9735
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9735
  ret ptr %1, !dbg !9736
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6Cython_7Runtime_8refnanny_7Context_5start___get__(ptr noundef %__pyx_v_self) #0 !dbg !9737 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9739, metadata !DIExpression()), !dbg !9747
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #10, !dbg !9748
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9740, metadata !DIExpression()), !dbg !9749
  store ptr null, ptr %__pyx_r, align 8, !dbg !9749, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !9750
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !9741, metadata !DIExpression()), !dbg !9751
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !9751, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !9752
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !9742, metadata !DIExpression()), !dbg !9753
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !9753, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !9754
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !9743, metadata !DIExpression()), !dbg !9755
  store ptr null, ptr %__pyx_filename, align 8, !dbg !9755, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !9756
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !9744, metadata !DIExpression()), !dbg !9757
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !9757, !tbaa !1557
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !9758, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %0), !dbg !9758
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !9759, !tbaa !1461
  %start = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 6, !dbg !9760
  %2 = load i64, ptr %start, align 8, !dbg !9760, !tbaa !2912
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %2), !dbg !9761
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !9762, !tbaa !1461
  %3 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9763, !tbaa !1461
  %tobool = icmp ne ptr %3, null, !dbg !9763
  %lnot = xor i1 %tobool, true, !dbg !9763
  %lnot1 = xor i1 %lnot, true, !dbg !9763
  %lnot2 = xor i1 %lnot1, true, !dbg !9763
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9763
  %conv = sext i32 %lnot.ext to i64, !dbg !9763
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9763
  %tobool3 = icmp ne i64 %expval, 0, !dbg !9763
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9765

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_f, align 16, !dbg !9766, !tbaa !1461
  store ptr %4, ptr %__pyx_filename, align 8, !dbg !9766, !tbaa !1461
  %5 = load ptr, ptr %__pyx_filename, align 8, !dbg !9766, !tbaa !1461
  store i32 26, ptr %__pyx_lineno, align 4, !dbg !9766, !tbaa !1557
  %6 = load i32, ptr %__pyx_lineno, align 4, !dbg !9766, !tbaa !1557
  store i32 4205, ptr %__pyx_clineno, align 4, !dbg !9766, !tbaa !1557
  %7 = load i32, ptr %__pyx_clineno, align 4, !dbg !9766, !tbaa !1557
  br label %__pyx_L1_error, !dbg !9769

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9770, !tbaa !1461
  store ptr %8, ptr %__pyx_r, align 8, !dbg !9771, !tbaa !1461
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !9772, !tbaa !1461
  br label %__pyx_L0, !dbg !9773

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !9745), !dbg !9774
  %9 = load ptr, ptr %__pyx_t_1, align 8, !dbg !9775, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %9), !dbg !9775
  %10 = load i32, ptr %__pyx_clineno, align 4, !dbg !9776, !tbaa !1557
  %11 = load i32, ptr %__pyx_lineno, align 4, !dbg !9777, !tbaa !1557
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !9778, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.49, i32 noundef %10, i32 noundef %11, ptr noundef %12), !dbg !9779
  store ptr null, ptr %__pyx_r, align 8, !dbg !9780, !tbaa !1461
  br label %__pyx_L0, !dbg !9781

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  tail call void @llvm.dbg.label(metadata !9746), !dbg !9782
  %13 = load ptr, ptr %__pyx_r, align 8, !dbg !9783, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !9784
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !9784
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !9784
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !9784
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #10, !dbg !9784
  ret ptr %13, !dbg !9785
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pw_6Cython_7Runtime_8refnanny_7Context_1__cinit__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 !dbg !9786 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_name = alloca ptr, align 8
  %__pyx_v_line = alloca ptr, align 8
  %__pyx_v_filename = alloca ptr, align 8
  %__pyx_nargs = alloca i64, align 8
  %__pyx_kwvalues = alloca ptr, align 8
  %values = alloca [3 x ptr], align 16
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_pyargnames = alloca [4 x ptr], align 16
  %kw_args = alloca i64, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %value65 = alloca ptr, align 8
  %kwd_pos_args = alloca i64, align 8
  %__pyx_temp = alloca i64, align 8
  %__pyx_temp147 = alloca i64, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !9788, metadata !DIExpression()), !dbg !9825
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_args.addr, metadata !9789, metadata !DIExpression()), !dbg !9826
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwds.addr, metadata !9790, metadata !DIExpression()), !dbg !9827
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_name) #10, !dbg !9828
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_name, metadata !9791, metadata !DIExpression()), !dbg !9829
  store ptr null, ptr %__pyx_v_name, align 8, !dbg !9829, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_line) #10, !dbg !9830
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_line, metadata !9792, metadata !DIExpression()), !dbg !9831
  store ptr null, ptr %__pyx_v_line, align 8, !dbg !9831, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_filename) #10, !dbg !9832
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_filename, metadata !9793, metadata !DIExpression()), !dbg !9833
  store ptr null, ptr %__pyx_v_filename, align 8, !dbg !9833, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_nargs) #10, !dbg !9834
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_nargs, metadata !9794, metadata !DIExpression()), !dbg !9835
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !9836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwvalues, metadata !9795, metadata !DIExpression()), !dbg !9837
  call void @llvm.lifetime.start.p0(i64 24, ptr %values) #10, !dbg !9838
  tail call void @llvm.dbg.declare(metadata ptr %values, metadata !9796, metadata !DIExpression()), !dbg !9839
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 24, i1 false), !dbg !9839
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !9840
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !9797, metadata !DIExpression()), !dbg !9841
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !9841, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !9842
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !9798, metadata !DIExpression()), !dbg !9843
  store ptr null, ptr %__pyx_filename, align 8, !dbg !9843, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !9844
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !9799, metadata !DIExpression()), !dbg !9845
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !9845, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #10, !dbg !9846
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !9800, metadata !DIExpression()), !dbg !9847
  %0 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !9848, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !9848
  store i64 %call, ptr %__pyx_nargs, align 8, !dbg !9849, !tbaa !1836
  store ptr null, ptr %__pyx_kwvalues, align 8, !dbg !9850, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 32, ptr %__pyx_pyargnames) #10, !dbg !9851
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_pyargnames, metadata !9801, metadata !DIExpression()), !dbg !9852
  %arrayinit.begin = getelementptr inbounds [4 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !9853
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9854, !tbaa !1461
  %__pyx_n_s_name = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 45, !dbg !9854
  store ptr %__pyx_n_s_name, ptr %arrayinit.begin, align 8, !dbg !9853, !tbaa !1461
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !9853
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9855, !tbaa !1461
  %__pyx_n_s_line = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 42, !dbg !9855
  store ptr %__pyx_n_s_line, ptr %arrayinit.element, align 8, !dbg !9853, !tbaa !1461
  %arrayinit.element1 = getelementptr inbounds ptr, ptr %arrayinit.element, i64 1, !dbg !9853
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9856, !tbaa !1461
  %__pyx_n_s_filename = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 33, !dbg !9856
  store ptr %__pyx_n_s_filename, ptr %arrayinit.element1, align 8, !dbg !9853, !tbaa !1461
  %arrayinit.element2 = getelementptr inbounds ptr, ptr %arrayinit.element1, i64 1, !dbg !9853
  store ptr null, ptr %arrayinit.element2, align 8, !dbg !9853, !tbaa !1461
  %4 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9857, !tbaa !1461
  %__pyx_int_0 = getelementptr inbounds %struct.__pyx_mstate, ptr %4, i32 0, i32 56, !dbg !9857
  %5 = load ptr, ptr %__pyx_int_0, align 8, !dbg !9857, !tbaa !1783
  %arrayidx = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !9858
  store ptr %5, ptr %arrayidx, align 8, !dbg !9859, !tbaa !1461
  %arrayidx3 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !9860
  store ptr @_Py_NoneStruct, ptr %arrayidx3, align 16, !dbg !9861, !tbaa !1461
  %6 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !9862, !tbaa !1461
  %tobool = icmp ne ptr %6, null, !dbg !9862
  br i1 %tobool, label %if.then, label %if.else122, !dbg !9863

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #10, !dbg !9864
  tail call void @llvm.dbg.declare(metadata ptr %kw_args, metadata !9804, metadata !DIExpression()), !dbg !9865
  %7 = load i64, ptr %__pyx_nargs, align 8, !dbg !9866, !tbaa !1836
  switch i64 %7, label %sw.default [
    i64 3, label %sw.bb
    i64 2, label %sw.bb6
    i64 1, label %sw.bb10
    i64 0, label %sw.epilog
  ], !dbg !9867

sw.bb:                                            ; preds = %if.then
  %8 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !9868, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1, !dbg !9868
  %arrayidx4 = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 2, !dbg !9868
  %9 = load ptr, ptr %arrayidx4, align 8, !dbg !9868, !tbaa !1461
  %arrayidx5 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !9870
  store ptr %9, ptr %arrayidx5, align 16, !dbg !9871, !tbaa !1461
  br label %sw.bb6, !dbg !9870

sw.bb6:                                           ; preds = %if.then, %sw.bb
  %10 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !9872, !tbaa !1461
  %ob_item7 = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1, !dbg !9872
  %arrayidx8 = getelementptr [1 x ptr], ptr %ob_item7, i64 0, i64 1, !dbg !9872
  %11 = load ptr, ptr %arrayidx8, align 8, !dbg !9872, !tbaa !1461
  %arrayidx9 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !9873
  store ptr %11, ptr %arrayidx9, align 8, !dbg !9874, !tbaa !1461
  br label %sw.bb10, !dbg !9873

sw.bb10:                                          ; preds = %if.then, %sw.bb6
  %12 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !9875, !tbaa !1461
  %ob_item11 = getelementptr inbounds %struct.PyTupleObject, ptr %12, i32 0, i32 1, !dbg !9875
  %arrayidx12 = getelementptr [1 x ptr], ptr %ob_item11, i64 0, i64 0, !dbg !9875
  %13 = load ptr, ptr %arrayidx12, align 8, !dbg !9875, !tbaa !1461
  %arrayidx13 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !9876
  store ptr %13, ptr %arrayidx13, align 16, !dbg !9877, !tbaa !1461
  br label %sw.epilog, !dbg !9876

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !9878

sw.epilog:                                        ; preds = %sw.bb10, %if.then
  %14 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !9879, !tbaa !1461
  %call14 = call i64 @PyDict_Size(ptr noundef %14), !dbg !9879
  store i64 %call14, ptr %kw_args, align 8, !dbg !9880, !tbaa !1836
  %15 = load i64, ptr %__pyx_nargs, align 8, !dbg !9881, !tbaa !1836
  switch i64 %15, label %sw.epilog91 [
    i64 0, label %sw.bb15
    i64 1, label %sw.bb35
    i64 2, label %sw.bb61
  ], !dbg !9882

sw.bb15:                                          ; preds = %sw.epilog
  %16 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !9883, !tbaa !1461
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9883, !tbaa !1461
  %__pyx_n_s_name16 = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 45, !dbg !9883
  %18 = load ptr, ptr %__pyx_n_s_name16, align 8, !dbg !9883, !tbaa !9885
  %19 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9883, !tbaa !1461
  %__pyx_n_s_name17 = getelementptr inbounds %struct.__pyx_mstate, ptr %19, i32 0, i32 45, !dbg !9883
  %20 = load ptr, ptr %__pyx_n_s_name17, align 8, !dbg !9883, !tbaa !9885
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %20, i32 0, i32 2, !dbg !9883
  %21 = load i64, ptr %hash, align 8, !dbg !9883, !tbaa !6744
  %call18 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %16, ptr noundef %18, i64 noundef %21), !dbg !9883
  %arrayidx19 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !9883
  store ptr %call18, ptr %arrayidx19, align 16, !dbg !9883, !tbaa !1461
  %cmp = icmp ne ptr %call18, null, !dbg !9883
  %lnot = xor i1 %cmp, true, !dbg !9883
  %lnot20 = xor i1 %lnot, true, !dbg !9883
  %lnot.ext = zext i1 %lnot20 to i32, !dbg !9883
  %conv = sext i32 %lnot.ext to i64, !dbg !9883
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !9883
  %tobool21 = icmp ne i64 %expval, 0, !dbg !9883
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !9886

if.then22:                                        ; preds = %sw.bb15
  %arrayidx23 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !9887
  %22 = load ptr, ptr %arrayidx23, align 16, !dbg !9887, !tbaa !1461
  %23 = load i64, ptr %kw_args, align 8, !dbg !9889, !tbaa !1836
  %dec = add i64 %23, -1, !dbg !9889
  store i64 %dec, ptr %kw_args, align 8, !dbg !9889, !tbaa !1836
  br label %if.end, !dbg !9890

if.else:                                          ; preds = %sw.bb15
  %call24 = call ptr @PyErr_Occurred(), !dbg !9891
  %tobool25 = icmp ne ptr %call24, null, !dbg !9891
  %lnot26 = xor i1 %tobool25, true, !dbg !9891
  %lnot28 = xor i1 %lnot26, true, !dbg !9891
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !9891
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !9891
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !9891
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !9891
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !9893

if.then33:                                        ; preds = %if.else
  %24 = load ptr, ptr @__pyx_f, align 16, !dbg !9894, !tbaa !1461
  store ptr %24, ptr %__pyx_filename, align 8, !dbg !9894, !tbaa !1461
  %25 = load ptr, ptr %__pyx_filename, align 8, !dbg !9894, !tbaa !1461
  store i32 28, ptr %__pyx_lineno, align 4, !dbg !9894, !tbaa !1557
  %26 = load i32, ptr %__pyx_lineno, align 4, !dbg !9894, !tbaa !1557
  store i32 2905, ptr %__pyx_clineno, align 4, !dbg !9894, !tbaa !1557
  %27 = load i32, ptr %__pyx_clineno, align 4, !dbg !9894, !tbaa !1557
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !9897

if.else34:                                        ; preds = %if.else
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !9898

if.end:                                           ; preds = %if.then22
  br label %sw.bb35, !dbg !9883

sw.bb35:                                          ; preds = %sw.epilog, %if.end
  %28 = load i64, ptr %kw_args, align 8, !dbg !9899, !tbaa !1836
  %cmp36 = icmp sgt i64 %28, 0, !dbg !9900
  br i1 %cmp36, label %if.then38, label %if.end60, !dbg !9901

if.then38:                                        ; preds = %sw.bb35
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #10, !dbg !9902
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !9807, metadata !DIExpression()), !dbg !9903
  %29 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !9904, !tbaa !1461
  %30 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9904, !tbaa !1461
  %__pyx_n_s_line39 = getelementptr inbounds %struct.__pyx_mstate, ptr %30, i32 0, i32 42, !dbg !9904
  %31 = load ptr, ptr %__pyx_n_s_line39, align 8, !dbg !9904, !tbaa !9905
  %32 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9904, !tbaa !1461
  %__pyx_n_s_line40 = getelementptr inbounds %struct.__pyx_mstate, ptr %32, i32 0, i32 42, !dbg !9904
  %33 = load ptr, ptr %__pyx_n_s_line40, align 8, !dbg !9904, !tbaa !9905
  %hash41 = getelementptr inbounds %struct.PyASCIIObject, ptr %33, i32 0, i32 2, !dbg !9904
  %34 = load i64, ptr %hash41, align 8, !dbg !9904, !tbaa !6744
  %call42 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %29, ptr noundef %31, i64 noundef %34), !dbg !9904
  store ptr %call42, ptr %value, align 8, !dbg !9903, !tbaa !1461
  %35 = load ptr, ptr %value, align 8, !dbg !9906, !tbaa !1461
  %tobool43 = icmp ne ptr %35, null, !dbg !9906
  br i1 %tobool43, label %if.then44, label %if.else47, !dbg !9908

if.then44:                                        ; preds = %if.then38
  %36 = load ptr, ptr %value, align 8, !dbg !9909, !tbaa !1461
  %arrayidx45 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !9911
  store ptr %36, ptr %arrayidx45, align 8, !dbg !9912, !tbaa !1461
  %37 = load i64, ptr %kw_args, align 8, !dbg !9913, !tbaa !1836
  %dec46 = add i64 %37, -1, !dbg !9913
  store i64 %dec46, ptr %kw_args, align 8, !dbg !9913, !tbaa !1836
  br label %if.end59, !dbg !9914

if.else47:                                        ; preds = %if.then38
  %call48 = call ptr @PyErr_Occurred(), !dbg !9915
  %tobool49 = icmp ne ptr %call48, null, !dbg !9915
  %lnot50 = xor i1 %tobool49, true, !dbg !9915
  %lnot52 = xor i1 %lnot50, true, !dbg !9915
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !9915
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !9915
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 0), !dbg !9915
  %tobool56 = icmp ne i64 %expval55, 0, !dbg !9915
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !9917

if.then57:                                        ; preds = %if.else47
  %38 = load ptr, ptr @__pyx_f, align 16, !dbg !9918, !tbaa !1461
  store ptr %38, ptr %__pyx_filename, align 8, !dbg !9918, !tbaa !1461
  %39 = load ptr, ptr %__pyx_filename, align 8, !dbg !9918, !tbaa !1461
  store i32 28, ptr %__pyx_lineno, align 4, !dbg !9918, !tbaa !1557
  %40 = load i32, ptr %__pyx_lineno, align 4, !dbg !9918, !tbaa !1557
  store i32 2912, ptr %__pyx_clineno, align 4, !dbg !9918, !tbaa !1557
  %41 = load i32, ptr %__pyx_clineno, align 4, !dbg !9918, !tbaa !1557
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9921

if.end58:                                         ; preds = %if.else47
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then44
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9922
  br label %cleanup, !dbg !9922

cleanup:                                          ; preds = %if.then57, %if.end59
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #10, !dbg !9922
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup119 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end60, !dbg !9923

if.end60:                                         ; preds = %cleanup.cont, %sw.bb35
  br label %sw.bb61, !dbg !9924

sw.bb61:                                          ; preds = %sw.epilog, %if.end60
  %42 = load i64, ptr %kw_args, align 8, !dbg !9925, !tbaa !1836
  %cmp62 = icmp sgt i64 %42, 0, !dbg !9926
  br i1 %cmp62, label %if.then64, label %if.end90, !dbg !9927

if.then64:                                        ; preds = %sw.bb61
  call void @llvm.lifetime.start.p0(i64 8, ptr %value65) #10, !dbg !9928
  tail call void @llvm.dbg.declare(metadata ptr %value65, metadata !9811, metadata !DIExpression()), !dbg !9929
  %43 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !9930, !tbaa !1461
  %44 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9930, !tbaa !1461
  %__pyx_n_s_filename66 = getelementptr inbounds %struct.__pyx_mstate, ptr %44, i32 0, i32 33, !dbg !9930
  %45 = load ptr, ptr %__pyx_n_s_filename66, align 8, !dbg !9930, !tbaa !9931
  %46 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !9930, !tbaa !1461
  %__pyx_n_s_filename67 = getelementptr inbounds %struct.__pyx_mstate, ptr %46, i32 0, i32 33, !dbg !9930
  %47 = load ptr, ptr %__pyx_n_s_filename67, align 8, !dbg !9930, !tbaa !9931
  %hash68 = getelementptr inbounds %struct.PyASCIIObject, ptr %47, i32 0, i32 2, !dbg !9930
  %48 = load i64, ptr %hash68, align 8, !dbg !9930, !tbaa !6744
  %call69 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %43, ptr noundef %45, i64 noundef %48), !dbg !9930
  store ptr %call69, ptr %value65, align 8, !dbg !9929, !tbaa !1461
  %49 = load ptr, ptr %value65, align 8, !dbg !9932, !tbaa !1461
  %tobool70 = icmp ne ptr %49, null, !dbg !9932
  br i1 %tobool70, label %if.then71, label %if.else74, !dbg !9934

if.then71:                                        ; preds = %if.then64
  %50 = load ptr, ptr %value65, align 8, !dbg !9935, !tbaa !1461
  %arrayidx72 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !9937
  store ptr %50, ptr %arrayidx72, align 16, !dbg !9938, !tbaa !1461
  %51 = load i64, ptr %kw_args, align 8, !dbg !9939, !tbaa !1836
  %dec73 = add i64 %51, -1, !dbg !9939
  store i64 %dec73, ptr %kw_args, align 8, !dbg !9939, !tbaa !1836
  br label %if.end86, !dbg !9940

if.else74:                                        ; preds = %if.then64
  %call75 = call ptr @PyErr_Occurred(), !dbg !9941
  %tobool76 = icmp ne ptr %call75, null, !dbg !9941
  %lnot77 = xor i1 %tobool76, true, !dbg !9941
  %lnot79 = xor i1 %lnot77, true, !dbg !9941
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !9941
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !9941
  %expval82 = call i64 @llvm.expect.i64(i64 %conv81, i64 0), !dbg !9941
  %tobool83 = icmp ne i64 %expval82, 0, !dbg !9941
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !9943

if.then84:                                        ; preds = %if.else74
  %52 = load ptr, ptr @__pyx_f, align 16, !dbg !9944, !tbaa !1461
  store ptr %52, ptr %__pyx_filename, align 8, !dbg !9944, !tbaa !1461
  %53 = load ptr, ptr %__pyx_filename, align 8, !dbg !9944, !tbaa !1461
  store i32 28, ptr %__pyx_lineno, align 4, !dbg !9944, !tbaa !1557
  %54 = load i32, ptr %__pyx_lineno, align 4, !dbg !9944, !tbaa !1557
  store i32 2919, ptr %__pyx_clineno, align 4, !dbg !9944, !tbaa !1557
  %55 = load i32, ptr %__pyx_clineno, align 4, !dbg !9944, !tbaa !1557
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup87, !dbg !9947

if.end85:                                         ; preds = %if.else74
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then71
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9948
  br label %cleanup87, !dbg !9948

cleanup87:                                        ; preds = %if.then84, %if.end86
  call void @llvm.lifetime.end.p0(i64 8, ptr %value65) #10, !dbg !9948
  %cleanup.dest88 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest88, label %cleanup119 [
    i32 0, label %cleanup.cont89
  ]

cleanup.cont89:                                   ; preds = %cleanup87
  br label %if.end90, !dbg !9949

if.end90:                                         ; preds = %cleanup.cont89, %sw.bb61
  br label %sw.epilog91, !dbg !9950

sw.epilog91:                                      ; preds = %if.end90, %sw.epilog
  %56 = load i64, ptr %kw_args, align 8, !dbg !9951, !tbaa !1836
  %cmp92 = icmp sgt i64 %56, 0, !dbg !9951
  %lnot94 = xor i1 %cmp92, true, !dbg !9951
  %lnot96 = xor i1 %lnot94, true, !dbg !9951
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !9951
  %conv98 = sext i32 %lnot.ext97 to i64, !dbg !9951
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0), !dbg !9951
  %tobool100 = icmp ne i64 %expval99, 0, !dbg !9951
  br i1 %tobool100, label %if.then101, label %if.end118, !dbg !9952

if.then101:                                       ; preds = %sw.epilog91
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwd_pos_args) #10, !dbg !9953
  tail call void @llvm.dbg.declare(metadata ptr %kwd_pos_args, metadata !9814, metadata !DIExpression()), !dbg !9954
  %57 = load i64, ptr %__pyx_nargs, align 8, !dbg !9955, !tbaa !1836
  store i64 %57, ptr %kwd_pos_args, align 8, !dbg !9954, !tbaa !1836
  %58 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !9956, !tbaa !1461
  %59 = load ptr, ptr %__pyx_kwvalues, align 8, !dbg !9956, !tbaa !1461
  %arraydecay = getelementptr inbounds [4 x ptr], ptr %__pyx_pyargnames, i64 0, i64 0, !dbg !9956
  %arraydecay102 = getelementptr inbounds [3 x ptr], ptr %values, i64 0, i64 0, !dbg !9956
  %add.ptr = getelementptr ptr, ptr %arraydecay102, i64 0, !dbg !9956
  %60 = load i64, ptr %kwd_pos_args, align 8, !dbg !9956, !tbaa !1836
  %call103 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %58, ptr noundef %59, ptr noundef %arraydecay, ptr noundef null, ptr noundef %add.ptr, i64 noundef %60, ptr noundef @.str.50), !dbg !9956
  %cmp104 = icmp slt i32 %call103, 0, !dbg !9956
  %lnot106 = xor i1 %cmp104, true, !dbg !9956
  %lnot108 = xor i1 %lnot106, true, !dbg !9956
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !9956
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !9956
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 0), !dbg !9956
  %tobool112 = icmp ne i64 %expval111, 0, !dbg !9956
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !9958

if.then113:                                       ; preds = %if.then101
  %61 = load ptr, ptr @__pyx_f, align 16, !dbg !9959, !tbaa !1461
  store ptr %61, ptr %__pyx_filename, align 8, !dbg !9959, !tbaa !1461
  %62 = load ptr, ptr %__pyx_filename, align 8, !dbg !9959, !tbaa !1461
  store i32 28, ptr %__pyx_lineno, align 4, !dbg !9959, !tbaa !1557
  %63 = load i32, ptr %__pyx_lineno, align 4, !dbg !9959, !tbaa !1557
  store i32 2924, ptr %__pyx_clineno, align 4, !dbg !9959, !tbaa !1557
  %64 = load i32, ptr %__pyx_clineno, align 4, !dbg !9959, !tbaa !1557
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup115, !dbg !9962

if.end114:                                        ; preds = %if.then101
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9963
  br label %cleanup115, !dbg !9963

cleanup115:                                       ; preds = %if.then113, %if.end114
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwd_pos_args) #10, !dbg !9963
  %cleanup.dest116 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest116, label %cleanup119 [
    i32 0, label %cleanup.cont117
  ]

cleanup.cont117:                                  ; preds = %cleanup115
  br label %if.end118, !dbg !9964

if.end118:                                        ; preds = %cleanup.cont117, %sw.epilog91
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9965
  br label %cleanup119, !dbg !9965

cleanup119:                                       ; preds = %if.else34, %if.then33, %sw.default, %if.end118, %cleanup115, %cleanup87, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #10, !dbg !9965
  %cleanup.dest120 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest120, label %cleanup141 [
    i32 0, label %cleanup.cont121
  ]

cleanup.cont121:                                  ; preds = %cleanup119
  br label %if.end137, !dbg !9966

if.else122:                                       ; preds = %entry
  %65 = load i64, ptr %__pyx_nargs, align 8, !dbg !9967, !tbaa !1836
  switch i64 %65, label %sw.default135 [
    i64 3, label %sw.bb123
    i64 2, label %sw.bb127
    i64 1, label %sw.bb131
  ], !dbg !9969

sw.bb123:                                         ; preds = %if.else122
  %66 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !9970, !tbaa !1461
  %ob_item124 = getelementptr inbounds %struct.PyTupleObject, ptr %66, i32 0, i32 1, !dbg !9970
  %arrayidx125 = getelementptr [1 x ptr], ptr %ob_item124, i64 0, i64 2, !dbg !9970
  %67 = load ptr, ptr %arrayidx125, align 8, !dbg !9970, !tbaa !1461
  %arrayidx126 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !9972
  store ptr %67, ptr %arrayidx126, align 16, !dbg !9973, !tbaa !1461
  br label %sw.bb127, !dbg !9972

sw.bb127:                                         ; preds = %if.else122, %sw.bb123
  %68 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !9974, !tbaa !1461
  %ob_item128 = getelementptr inbounds %struct.PyTupleObject, ptr %68, i32 0, i32 1, !dbg !9974
  %arrayidx129 = getelementptr [1 x ptr], ptr %ob_item128, i64 0, i64 1, !dbg !9974
  %69 = load ptr, ptr %arrayidx129, align 8, !dbg !9974, !tbaa !1461
  %arrayidx130 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !9975
  store ptr %69, ptr %arrayidx130, align 8, !dbg !9976, !tbaa !1461
  br label %sw.bb131, !dbg !9975

sw.bb131:                                         ; preds = %if.else122, %sw.bb127
  %70 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !9977, !tbaa !1461
  %ob_item132 = getelementptr inbounds %struct.PyTupleObject, ptr %70, i32 0, i32 1, !dbg !9977
  %arrayidx133 = getelementptr [1 x ptr], ptr %ob_item132, i64 0, i64 0, !dbg !9977
  %71 = load ptr, ptr %arrayidx133, align 8, !dbg !9977, !tbaa !1461
  %arrayidx134 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !9978
  store ptr %71, ptr %arrayidx134, align 16, !dbg !9979, !tbaa !1461
  br label %sw.epilog136, !dbg !9980

sw.default135:                                    ; preds = %if.else122
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup141, !dbg !9981

sw.epilog136:                                     ; preds = %sw.bb131
  br label %if.end137

if.end137:                                        ; preds = %sw.epilog136, %cleanup.cont121
  %arrayidx138 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !9982
  %72 = load ptr, ptr %arrayidx138, align 16, !dbg !9982, !tbaa !1461
  store ptr %72, ptr %__pyx_v_name, align 8, !dbg !9983, !tbaa !1461
  %arrayidx139 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !9984
  %73 = load ptr, ptr %arrayidx139, align 8, !dbg !9984, !tbaa !1461
  store ptr %73, ptr %__pyx_v_line, align 8, !dbg !9985, !tbaa !1461
  %arrayidx140 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !9986
  %74 = load ptr, ptr %arrayidx140, align 16, !dbg !9986, !tbaa !1461
  store ptr %74, ptr %__pyx_v_filename, align 8, !dbg !9987, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9988
  br label %cleanup141, !dbg !9988

cleanup141:                                       ; preds = %sw.default135, %if.end137, %cleanup119
  call void @llvm.lifetime.end.p0(i64 32, ptr %__pyx_pyargnames) #10, !dbg !9988
  %cleanup.dest142 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest142, label %cleanup155 [
    i32 0, label %cleanup.cont143
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont143:                                  ; preds = %cleanup141
  br label %__pyx_L6_skip, !dbg !9989

__pyx_L5_argtuple_error:                          ; preds = %cleanup141
  tail call void @llvm.dbg.label(metadata !9817), !dbg !9990
  %75 = load i64, ptr %__pyx_nargs, align 8, !dbg !9991, !tbaa !1836
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.50, i32 noundef 0, i64 noundef 1, i64 noundef 3, i64 noundef %75), !dbg !9992
  %76 = load ptr, ptr @__pyx_f, align 16, !dbg !9993, !tbaa !1461
  store ptr %76, ptr %__pyx_filename, align 8, !dbg !9993, !tbaa !1461
  %77 = load ptr, ptr %__pyx_filename, align 8, !dbg !9993, !tbaa !1461
  store i32 28, ptr %__pyx_lineno, align 4, !dbg !9993, !tbaa !1557
  %78 = load i32, ptr %__pyx_lineno, align 4, !dbg !9993, !tbaa !1557
  store i32 2943, ptr %__pyx_clineno, align 4, !dbg !9993, !tbaa !1557
  %79 = load i32, ptr %__pyx_clineno, align 4, !dbg !9993, !tbaa !1557
  br label %__pyx_L3_error, !dbg !9996

__pyx_L6_skip:                                    ; preds = %cleanup.cont143
  tail call void @llvm.dbg.label(metadata !9818), !dbg !9997
  br label %__pyx_L4_argument_unpacking_done, !dbg !9998

__pyx_L3_error:                                   ; preds = %cleanup141, %__pyx_L5_argtuple_error
  tail call void @llvm.dbg.label(metadata !9819), !dbg !9999
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #10, !dbg !10000
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp, metadata !9820, metadata !DIExpression()), !dbg !10001
  store i64 0, ptr %__pyx_temp, align 8, !dbg !10002, !tbaa !1836
  br label %for.cond, !dbg !10004

for.cond:                                         ; preds = %for.inc, %__pyx_L3_error
  %80 = load i64, ptr %__pyx_temp, align 8, !dbg !10005, !tbaa !1836
  %cmp144 = icmp slt i64 %80, 3, !dbg !10007
  br i1 %cmp144, label %for.body, label %for.end, !dbg !10008

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10009

for.inc:                                          ; preds = %for.body
  %81 = load i64, ptr %__pyx_temp, align 8, !dbg !10011, !tbaa !1836
  %inc = add i64 %81, 1, !dbg !10011
  store i64 %inc, ptr %__pyx_temp, align 8, !dbg !10011, !tbaa !1836
  br label %for.cond, !dbg !10012, !llvm.loop !10013

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #10, !dbg !10015
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !10016, !tbaa !1557
  %83 = load i32, ptr %__pyx_lineno, align 4, !dbg !10017, !tbaa !1557
  %84 = load ptr, ptr %__pyx_filename, align 8, !dbg !10018, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.51, i32 noundef %82, i32 noundef %83, ptr noundef %84), !dbg !10019
  store i32 -1, ptr %retval, align 4, !dbg !10020
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup155, !dbg !10020

__pyx_L4_argument_unpacking_done:                 ; preds = %__pyx_L6_skip
  tail call void @llvm.dbg.label(metadata !9822), !dbg !10021
  %85 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10022, !tbaa !1461
  %86 = load ptr, ptr %__pyx_v_name, align 8, !dbg !10023, !tbaa !1461
  %87 = load ptr, ptr %__pyx_v_line, align 8, !dbg !10024, !tbaa !1461
  %88 = load ptr, ptr %__pyx_v_filename, align 8, !dbg !10025, !tbaa !1461
  %call146 = call i32 @__pyx_pf_6Cython_7Runtime_8refnanny_7Context___cinit__(ptr noundef %85, ptr noundef %86, ptr noundef %87, ptr noundef %88), !dbg !10026
  store i32 %call146, ptr %__pyx_r, align 4, !dbg !10027, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp147) #10, !dbg !10028
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_temp147, metadata !9823, metadata !DIExpression()), !dbg !10029
  store i64 0, ptr %__pyx_temp147, align 8, !dbg !10030, !tbaa !1836
  br label %for.cond148, !dbg !10032

for.cond148:                                      ; preds = %for.inc152, %__pyx_L4_argument_unpacking_done
  %89 = load i64, ptr %__pyx_temp147, align 8, !dbg !10033, !tbaa !1836
  %cmp149 = icmp slt i64 %89, 3, !dbg !10035
  br i1 %cmp149, label %for.body151, label %for.end154, !dbg !10036

for.body151:                                      ; preds = %for.cond148
  br label %for.inc152, !dbg !10037

for.inc152:                                       ; preds = %for.body151
  %90 = load i64, ptr %__pyx_temp147, align 8, !dbg !10039, !tbaa !1836
  %inc153 = add i64 %90, 1, !dbg !10039
  store i64 %inc153, ptr %__pyx_temp147, align 8, !dbg !10039, !tbaa !1836
  br label %for.cond148, !dbg !10040, !llvm.loop !10041

for.end154:                                       ; preds = %for.cond148
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp147) #10, !dbg !10043
  %91 = load i32, ptr %__pyx_r, align 4, !dbg !10044, !tbaa !1557
  store i32 %91, ptr %retval, align 4, !dbg !10045
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup155, !dbg !10045

cleanup155:                                       ; preds = %for.end154, %for.end, %cleanup141
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 24, ptr %values) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_kwvalues) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_nargs) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_filename) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_line) #10, !dbg !10046
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_name) #10, !dbg !10046
  %92 = load i32, ptr %retval, align 4, !dbg !10046
  ret i32 %92, !dbg !10046
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_ParseOptionalKeywords(ptr noundef %kwds, ptr noundef %kwvalues, ptr noundef %argnames, ptr noundef %kwds2, ptr noundef %values, i64 noundef %num_pos_args, ptr noundef %function_name) #0 !dbg !10047 {
entry:
  %retval = alloca i32, align 4
  %kwds.addr = alloca ptr, align 8
  %kwvalues.addr = alloca ptr, align 8
  %argnames.addr = alloca ptr, align 8
  %kwds2.addr = alloca ptr, align 8
  %values.addr = alloca ptr, align 8
  %num_pos_args.addr = alloca i64, align 8
  %function_name.addr = alloca ptr, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %pos = alloca i64, align 8
  %name = alloca ptr, align 8
  %first_kw_arg = alloca ptr, align 8
  %kwds_is_tuple = alloca i32, align 4
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %cmp38 = alloca i32, align 4
  %argname = alloca ptr, align 8
  %cmp78 = alloca i32, align 4
  store ptr %kwds, ptr %kwds.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %kwds.addr, metadata !10052, metadata !DIExpression()), !dbg !10082
  store ptr %kwvalues, ptr %kwvalues.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %kwvalues.addr, metadata !10053, metadata !DIExpression()), !dbg !10083
  store ptr %argnames, ptr %argnames.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %argnames.addr, metadata !10054, metadata !DIExpression()), !dbg !10084
  store ptr %kwds2, ptr %kwds2.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %kwds2.addr, metadata !10055, metadata !DIExpression()), !dbg !10085
  store ptr %values, ptr %values.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %values.addr, metadata !10056, metadata !DIExpression()), !dbg !10086
  store i64 %num_pos_args, ptr %num_pos_args.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %num_pos_args.addr, metadata !10057, metadata !DIExpression()), !dbg !10087
  store ptr %function_name, ptr %function_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %function_name.addr, metadata !10058, metadata !DIExpression()), !dbg !10088
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #10, !dbg !10089
  tail call void @llvm.dbg.declare(metadata ptr %key, metadata !10059, metadata !DIExpression()), !dbg !10090
  store ptr null, ptr %key, align 8, !dbg !10090, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #10, !dbg !10089
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !10060, metadata !DIExpression()), !dbg !10091
  store ptr null, ptr %value, align 8, !dbg !10091, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #10, !dbg !10092
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !10061, metadata !DIExpression()), !dbg !10093
  store i64 0, ptr %pos, align 8, !dbg !10093, !tbaa !1836
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #10, !dbg !10094
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !10062, metadata !DIExpression()), !dbg !10095
  call void @llvm.lifetime.start.p0(i64 8, ptr %first_kw_arg) #10, !dbg !10096
  tail call void @llvm.dbg.declare(metadata ptr %first_kw_arg, metadata !10063, metadata !DIExpression()), !dbg !10097
  %0 = load ptr, ptr %argnames.addr, align 8, !dbg !10098, !tbaa !1461
  %1 = load i64, ptr %num_pos_args.addr, align 8, !dbg !10099, !tbaa !1836
  %add.ptr = getelementptr ptr, ptr %0, i64 %1, !dbg !10100
  store ptr %add.ptr, ptr %first_kw_arg, align 8, !dbg !10097, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %kwds_is_tuple) #10, !dbg !10101
  tail call void @llvm.dbg.declare(metadata ptr %kwds_is_tuple, metadata !10064, metadata !DIExpression()), !dbg !10102
  %2 = load ptr, ptr %kwds.addr, align 8, !dbg !10103, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %2), !dbg !10103
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864), !dbg !10103
  %tobool = icmp ne i32 %call1, 0, !dbg !10103
  %lnot = xor i1 %tobool, true, !dbg !10103
  %lnot2 = xor i1 %lnot, true, !dbg !10103
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10103
  %conv = sext i32 %lnot.ext to i64, !dbg !10103
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !10103
  %tobool3 = icmp ne i64 %expval, 0, !dbg !10104
  %land.ext = zext i1 %tobool3 to i32, !dbg !10104
  store i32 %land.ext, ptr %kwds_is_tuple, align 4, !dbg !10102, !tbaa !1557
  br label %while.cond, !dbg !10105

while.cond:                                       ; preds = %if.end137, %if.then72, %if.then21, %entry
  br label %while.body, !dbg !10105

while.body:                                       ; preds = %while.cond
  %3 = load ptr, ptr %key, align 8, !dbg !10106, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %3), !dbg !10106
  store ptr null, ptr %key, align 8, !dbg !10107, !tbaa !1461
  %4 = load ptr, ptr %value, align 8, !dbg !10108, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %4), !dbg !10108
  store ptr null, ptr %value, align 8, !dbg !10109, !tbaa !1461
  %5 = load i32, ptr %kwds_is_tuple, align 4, !dbg !10110, !tbaa !1557
  %tobool4 = icmp ne i32 %5, 0, !dbg !10110
  br i1 %tobool4, label %if.then, label %if.else, !dbg !10111

if.then:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !10112
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !10065, metadata !DIExpression()), !dbg !10113
  %6 = load ptr, ptr %kwds.addr, align 8, !dbg !10114, !tbaa !1461
  %call5 = call i64 @PyTuple_GET_SIZE(ptr noundef %6), !dbg !10114
  store i64 %call5, ptr %size, align 8, !dbg !10115, !tbaa !1836
  %7 = load i64, ptr %pos, align 8, !dbg !10116, !tbaa !1836
  %8 = load i64, ptr %size, align 8, !dbg !10118, !tbaa !1836
  %cmp = icmp sge i64 %7, %8, !dbg !10119
  br i1 %cmp, label %if.then7, label %if.end, !dbg !10120

if.then7:                                         ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10121

if.end:                                           ; preds = %if.then
  %9 = load ptr, ptr %kwds.addr, align 8, !dbg !10122, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1, !dbg !10122
  %10 = load i64, ptr %pos, align 8, !dbg !10122, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %10, !dbg !10122
  %11 = load ptr, ptr %arrayidx, align 8, !dbg !10122, !tbaa !1461
  store ptr %11, ptr %key, align 8, !dbg !10123, !tbaa !1461
  %12 = load ptr, ptr %kwvalues.addr, align 8, !dbg !10124, !tbaa !1461
  %13 = load i64, ptr %pos, align 8, !dbg !10125, !tbaa !1836
  %arrayidx8 = getelementptr ptr, ptr %12, i64 %13, !dbg !10124
  %14 = load ptr, ptr %arrayidx8, align 8, !dbg !10124, !tbaa !1461
  store ptr %14, ptr %value, align 8, !dbg !10126, !tbaa !1461
  %15 = load i64, ptr %pos, align 8, !dbg !10127, !tbaa !1836
  %inc = add i64 %15, 1, !dbg !10127
  store i64 %inc, ptr %pos, align 8, !dbg !10127, !tbaa !1836
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10128
  br label %cleanup, !dbg !10128

cleanup:                                          ; preds = %if.end, %if.then7
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !10128
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %while.end138
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end13, !dbg !10129

if.else:                                          ; preds = %while.body
  %16 = load ptr, ptr %kwds.addr, align 8, !dbg !10130, !tbaa !1461
  %call9 = call i32 @PyDict_Next(ptr noundef %16, ptr noundef %pos, ptr noundef %key, ptr noundef %value), !dbg !10133
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10133
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !10134

if.then11:                                        ; preds = %if.else
  br label %while.end138, !dbg !10135

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %cleanup.cont
  %17 = load ptr, ptr %first_kw_arg, align 8, !dbg !10136, !tbaa !1461
  store ptr %17, ptr %name, align 8, !dbg !10137, !tbaa !1461
  br label %while.cond14, !dbg !10138

while.cond14:                                     ; preds = %while.body19, %if.end13
  %18 = load ptr, ptr %name, align 8, !dbg !10139, !tbaa !1461
  %19 = load ptr, ptr %18, align 8, !dbg !10140, !tbaa !1461
  %tobool15 = icmp ne ptr %19, null, !dbg !10140
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !10141

land.rhs:                                         ; preds = %while.cond14
  %20 = load ptr, ptr %name, align 8, !dbg !10142, !tbaa !1461
  %21 = load ptr, ptr %20, align 8, !dbg !10143, !tbaa !1461
  %22 = load ptr, ptr %21, align 8, !dbg !10144, !tbaa !1461
  %23 = load ptr, ptr %key, align 8, !dbg !10145, !tbaa !1461
  %cmp16 = icmp ne ptr %22, %23, !dbg !10146
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond14
  %24 = phi i1 [ false, %while.cond14 ], [ %cmp16, %land.rhs ], !dbg !10147
  br i1 %24, label %while.body19, label %while.end, !dbg !10138

while.body19:                                     ; preds = %land.end
  %25 = load ptr, ptr %name, align 8, !dbg !10148, !tbaa !1461
  %incdec.ptr = getelementptr ptr, ptr %25, i32 1, !dbg !10148
  store ptr %incdec.ptr, ptr %name, align 8, !dbg !10148, !tbaa !1461
  br label %while.cond14, !dbg !10138, !llvm.loop !10149

while.end:                                        ; preds = %land.end
  %26 = load ptr, ptr %name, align 8, !dbg !10150, !tbaa !1461
  %27 = load ptr, ptr %26, align 8, !dbg !10152, !tbaa !1461
  %tobool20 = icmp ne ptr %27, null, !dbg !10152
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !10153

if.then21:                                        ; preds = %while.end
  %28 = load ptr, ptr %value, align 8, !dbg !10154, !tbaa !1461
  %29 = load ptr, ptr %values.addr, align 8, !dbg !10156, !tbaa !1461
  %30 = load ptr, ptr %name, align 8, !dbg !10157, !tbaa !1461
  %31 = load ptr, ptr %argnames.addr, align 8, !dbg !10158, !tbaa !1461
  %sub.ptr.lhs.cast = ptrtoint ptr %30 to i64, !dbg !10159
  %sub.ptr.rhs.cast = ptrtoint ptr %31 to i64, !dbg !10159
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10159
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !10159
  %arrayidx22 = getelementptr ptr, ptr %29, i64 %sub.ptr.div, !dbg !10156
  store ptr %28, ptr %arrayidx22, align 8, !dbg !10160, !tbaa !1461
  store ptr null, ptr %key, align 8, !dbg !10161, !tbaa !1461
  store ptr null, ptr %value, align 8, !dbg !10162, !tbaa !1461
  br label %while.cond, !dbg !10163, !llvm.loop !10164

if.end23:                                         ; preds = %while.end
  %32 = load ptr, ptr %key, align 8, !dbg !10166, !tbaa !1461
  call void @Py_INCREF(ptr noundef %32), !dbg !10166
  %33 = load ptr, ptr %value, align 8, !dbg !10167, !tbaa !1461
  call void @Py_INCREF(ptr noundef %33), !dbg !10167
  %34 = load ptr, ptr %first_kw_arg, align 8, !dbg !10168, !tbaa !1461
  store ptr %34, ptr %name, align 8, !dbg !10169, !tbaa !1461
  %35 = load ptr, ptr %key, align 8, !dbg !10170, !tbaa !1461
  %call24 = call ptr @Py_TYPE(ptr noundef %35), !dbg !10170
  %call25 = call i32 @PyType_HasFeature(ptr noundef %call24, i64 noundef 268435456), !dbg !10170
  %tobool26 = icmp ne i32 %call25, 0, !dbg !10170
  %lnot27 = xor i1 %tobool26, true, !dbg !10170
  %lnot29 = xor i1 %lnot27, true, !dbg !10170
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !10170
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !10170
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 1), !dbg !10170
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !10170
  br i1 %tobool33, label %if.then34, label %if.else121, !dbg !10171

if.then34:                                        ; preds = %if.end23
  br label %while.cond35, !dbg !10172

while.cond35:                                     ; preds = %cleanup.cont69, %if.then34
  %36 = load ptr, ptr %name, align 8, !dbg !10173, !tbaa !1461
  %37 = load ptr, ptr %36, align 8, !dbg !10174, !tbaa !1461
  %tobool36 = icmp ne ptr %37, null, !dbg !10172
  br i1 %tobool36, label %while.body37, label %while.end70, !dbg !10172

while.body37:                                     ; preds = %while.cond35
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp38) #10, !dbg !10175
  tail call void @llvm.dbg.declare(metadata ptr %cmp38, metadata !10069, metadata !DIExpression()), !dbg !10176
  %38 = load ptr, ptr %name, align 8, !dbg !10177, !tbaa !1461
  %39 = load ptr, ptr %38, align 8, !dbg !10177, !tbaa !1461
  %40 = load ptr, ptr %39, align 8, !dbg !10177, !tbaa !1461
  %call39 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %40), !dbg !10177
  %41 = load ptr, ptr %key, align 8, !dbg !10178, !tbaa !1461
  %call40 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %41), !dbg !10178
  %cmp41 = icmp ne i64 %call39, %call40, !dbg !10179
  br i1 %cmp41, label %cond.true, label %cond.false, !dbg !10180

cond.true:                                        ; preds = %while.body37
  br label %cond.end, !dbg !10180

cond.false:                                       ; preds = %while.body37
  %42 = load ptr, ptr %name, align 8, !dbg !10181, !tbaa !1461
  %43 = load ptr, ptr %42, align 8, !dbg !10182, !tbaa !1461
  %44 = load ptr, ptr %43, align 8, !dbg !10183, !tbaa !1461
  %45 = load ptr, ptr %key, align 8, !dbg !10184, !tbaa !1461
  %call43 = call i32 @PyUnicode_Compare(ptr noundef %44, ptr noundef %45), !dbg !10185
  br label %cond.end, !dbg !10180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %call43, %cond.false ], !dbg !10180
  store i32 %cond, ptr %cmp38, align 4, !dbg !10176, !tbaa !1557
  %46 = load i32, ptr %cmp38, align 4, !dbg !10186, !tbaa !1557
  %cmp44 = icmp slt i32 %46, 0, !dbg !10188
  br i1 %cmp44, label %land.lhs.true, label %if.end56, !dbg !10189

land.lhs.true:                                    ; preds = %cond.end
  %call46 = call ptr @PyErr_Occurred(), !dbg !10190
  %tobool47 = icmp ne ptr %call46, null, !dbg !10190
  %lnot48 = xor i1 %tobool47, true, !dbg !10190
  %lnot50 = xor i1 %lnot48, true, !dbg !10190
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !10190
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !10190
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !10190
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !10190
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !10191

if.then55:                                        ; preds = %land.lhs.true
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !10192

if.end56:                                         ; preds = %land.lhs.true, %cond.end
  %47 = load i32, ptr %cmp38, align 4, !dbg !10193, !tbaa !1557
  %cmp57 = icmp eq i32 %47, 0, !dbg !10195
  br i1 %cmp57, label %if.then59, label %if.end65, !dbg !10196

if.then59:                                        ; preds = %if.end56
  %48 = load ptr, ptr %value, align 8, !dbg !10197, !tbaa !1461
  %49 = load ptr, ptr %values.addr, align 8, !dbg !10199, !tbaa !1461
  %50 = load ptr, ptr %name, align 8, !dbg !10200, !tbaa !1461
  %51 = load ptr, ptr %argnames.addr, align 8, !dbg !10201, !tbaa !1461
  %sub.ptr.lhs.cast60 = ptrtoint ptr %50 to i64, !dbg !10202
  %sub.ptr.rhs.cast61 = ptrtoint ptr %51 to i64, !dbg !10202
  %sub.ptr.sub62 = sub i64 %sub.ptr.lhs.cast60, %sub.ptr.rhs.cast61, !dbg !10202
  %sub.ptr.div63 = sdiv exact i64 %sub.ptr.sub62, 8, !dbg !10202
  %arrayidx64 = getelementptr ptr, ptr %49, i64 %sub.ptr.div63, !dbg !10199
  store ptr %48, ptr %arrayidx64, align 8, !dbg !10203, !tbaa !1461
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !10204

if.end65:                                         ; preds = %if.end56
  %52 = load ptr, ptr %name, align 8, !dbg !10205, !tbaa !1461
  %incdec.ptr66 = getelementptr ptr, ptr %52, i32 1, !dbg !10205
  store ptr %incdec.ptr66, ptr %name, align 8, !dbg !10205, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10206
  br label %cleanup67, !dbg !10206

cleanup67:                                        ; preds = %if.then55, %if.end65, %if.then59
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp38) #10, !dbg !10206
  %cleanup.dest68 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest68, label %cleanup141 [
    i32 0, label %cleanup.cont69
    i32 7, label %while.end70
    i32 8, label %bad
  ]

cleanup.cont69:                                   ; preds = %cleanup67
  br label %while.cond35, !dbg !10172, !llvm.loop !10207

while.end70:                                      ; preds = %cleanup67, %while.cond35
  %53 = load ptr, ptr %name, align 8, !dbg !10208, !tbaa !1461
  %54 = load ptr, ptr %53, align 8, !dbg !10209, !tbaa !1461
  %tobool71 = icmp ne ptr %54, null, !dbg !10209
  br i1 %tobool71, label %if.then72, label %if.else73, !dbg !10210

if.then72:                                        ; preds = %while.end70
  br label %while.cond, !dbg !10211, !llvm.loop !10164

if.else73:                                        ; preds = %while.end70
  call void @llvm.lifetime.start.p0(i64 8, ptr %argname) #10, !dbg !10212
  tail call void @llvm.dbg.declare(metadata ptr %argname, metadata !10073, metadata !DIExpression()), !dbg !10213
  %55 = load ptr, ptr %argnames.addr, align 8, !dbg !10214, !tbaa !1461
  store ptr %55, ptr %argname, align 8, !dbg !10213, !tbaa !1461
  br label %while.cond74, !dbg !10215

while.cond74:                                     ; preds = %cleanup.cont115, %if.else73
  %56 = load ptr, ptr %argname, align 8, !dbg !10216, !tbaa !1461
  %57 = load ptr, ptr %first_kw_arg, align 8, !dbg !10217, !tbaa !1461
  %cmp75 = icmp ne ptr %56, %57, !dbg !10218
  br i1 %cmp75, label %while.body77, label %while.end116, !dbg !10215

while.body77:                                     ; preds = %while.cond74
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp78) #10, !dbg !10219
  tail call void @llvm.dbg.declare(metadata ptr %cmp78, metadata !10076, metadata !DIExpression()), !dbg !10220
  %58 = load ptr, ptr %argname, align 8, !dbg !10221, !tbaa !1461
  %59 = load ptr, ptr %58, align 8, !dbg !10222, !tbaa !1461
  %60 = load ptr, ptr %59, align 8, !dbg !10223, !tbaa !1461
  %61 = load ptr, ptr %key, align 8, !dbg !10224, !tbaa !1461
  %cmp79 = icmp eq ptr %60, %61, !dbg !10225
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !10226

cond.true81:                                      ; preds = %while.body77
  br label %cond.end92, !dbg !10226

cond.false82:                                     ; preds = %while.body77
  %62 = load ptr, ptr %argname, align 8, !dbg !10227, !tbaa !1461
  %63 = load ptr, ptr %62, align 8, !dbg !10227, !tbaa !1461
  %64 = load ptr, ptr %63, align 8, !dbg !10227, !tbaa !1461
  %call83 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %64), !dbg !10227
  %65 = load ptr, ptr %key, align 8, !dbg !10228, !tbaa !1461
  %call84 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %65), !dbg !10228
  %cmp85 = icmp ne i64 %call83, %call84, !dbg !10229
  br i1 %cmp85, label %cond.true87, label %cond.false88, !dbg !10230

cond.true87:                                      ; preds = %cond.false82
  br label %cond.end90, !dbg !10230

cond.false88:                                     ; preds = %cond.false82
  %66 = load ptr, ptr %argname, align 8, !dbg !10231, !tbaa !1461
  %67 = load ptr, ptr %66, align 8, !dbg !10232, !tbaa !1461
  %68 = load ptr, ptr %67, align 8, !dbg !10233, !tbaa !1461
  %69 = load ptr, ptr %key, align 8, !dbg !10234, !tbaa !1461
  %call89 = call i32 @PyUnicode_Compare(ptr noundef %68, ptr noundef %69), !dbg !10235
  br label %cond.end90, !dbg !10230

cond.end90:                                       ; preds = %cond.false88, %cond.true87
  %cond91 = phi i32 [ 1, %cond.true87 ], [ %call89, %cond.false88 ], !dbg !10230
  br label %cond.end92, !dbg !10226

cond.end92:                                       ; preds = %cond.end90, %cond.true81
  %cond93 = phi i32 [ 0, %cond.true81 ], [ %cond91, %cond.end90 ], !dbg !10226
  store i32 %cond93, ptr %cmp78, align 4, !dbg !10220, !tbaa !1557
  %70 = load i32, ptr %cmp78, align 4, !dbg !10236, !tbaa !1557
  %cmp94 = icmp slt i32 %70, 0, !dbg !10238
  br i1 %cmp94, label %land.lhs.true96, label %if.end107, !dbg !10239

land.lhs.true96:                                  ; preds = %cond.end92
  %call97 = call ptr @PyErr_Occurred(), !dbg !10240
  %tobool98 = icmp ne ptr %call97, null, !dbg !10240
  %lnot99 = xor i1 %tobool98, true, !dbg !10240
  %lnot101 = xor i1 %lnot99, true, !dbg !10240
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !10240
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !10240
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 0), !dbg !10240
  %tobool105 = icmp ne i64 %expval104, 0, !dbg !10240
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !10241

if.then106:                                       ; preds = %land.lhs.true96
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !10242

if.end107:                                        ; preds = %land.lhs.true96, %cond.end92
  %71 = load i32, ptr %cmp78, align 4, !dbg !10243, !tbaa !1557
  %cmp108 = icmp eq i32 %71, 0, !dbg !10245
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !10246

if.then110:                                       ; preds = %if.end107
  store i32 11, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !10247

if.end111:                                        ; preds = %if.end107
  %72 = load ptr, ptr %argname, align 8, !dbg !10248, !tbaa !1461
  %incdec.ptr112 = getelementptr ptr, ptr %72, i32 1, !dbg !10248
  store ptr %incdec.ptr112, ptr %argname, align 8, !dbg !10248, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10249
  br label %cleanup113, !dbg !10249

cleanup113:                                       ; preds = %if.then110, %if.then106, %if.end111
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp78) #10, !dbg !10249
  %cleanup.dest114 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest114, label %cleanup117 [
    i32 0, label %cleanup.cont115
  ]

cleanup.cont115:                                  ; preds = %cleanup113
  br label %while.cond74, !dbg !10215, !llvm.loop !10250

while.end116:                                     ; preds = %while.cond74
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10251
  br label %cleanup117, !dbg !10251

cleanup117:                                       ; preds = %while.end116, %cleanup113
  call void @llvm.lifetime.end.p0(i64 8, ptr %argname) #10, !dbg !10251
  %cleanup.dest118 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest118, label %cleanup141 [
    i32 0, label %cleanup.cont119
    i32 11, label %arg_passed_twice
    i32 8, label %bad
  ]

cleanup.cont119:                                  ; preds = %cleanup117
  br label %if.end120

if.end120:                                        ; preds = %cleanup.cont119
  br label %if.end122, !dbg !10252

if.else121:                                       ; preds = %if.end23
  br label %invalid_keyword_type, !dbg !10253

if.end122:                                        ; preds = %if.end120
  %73 = load ptr, ptr %kwds2.addr, align 8, !dbg !10254, !tbaa !1461
  %tobool123 = icmp ne ptr %73, null, !dbg !10254
  br i1 %tobool123, label %if.then124, label %if.else136, !dbg !10256

if.then124:                                       ; preds = %if.end122
  %74 = load ptr, ptr %kwds2.addr, align 8, !dbg !10257, !tbaa !1461
  %75 = load ptr, ptr %key, align 8, !dbg !10257, !tbaa !1461
  %76 = load ptr, ptr %value, align 8, !dbg !10257, !tbaa !1461
  %call125 = call i32 @PyDict_SetItem(ptr noundef %74, ptr noundef %75, ptr noundef %76), !dbg !10257
  %tobool126 = icmp ne i32 %call125, 0, !dbg !10257
  %lnot127 = xor i1 %tobool126, true, !dbg !10257
  %lnot129 = xor i1 %lnot127, true, !dbg !10257
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !10257
  %conv131 = sext i32 %lnot.ext130 to i64, !dbg !10257
  %expval132 = call i64 @llvm.expect.i64(i64 %conv131, i64 0), !dbg !10257
  %tobool133 = icmp ne i64 %expval132, 0, !dbg !10257
  br i1 %tobool133, label %if.then134, label %if.end135, !dbg !10260

if.then134:                                       ; preds = %if.then124
  br label %bad, !dbg !10261

if.end135:                                        ; preds = %if.then124
  br label %if.end137, !dbg !10262

if.else136:                                       ; preds = %if.end122
  br label %invalid_keyword, !dbg !10263

if.end137:                                        ; preds = %if.end135
  br label %while.cond, !dbg !10105, !llvm.loop !10164

while.end138:                                     ; preds = %if.then11, %cleanup
  %77 = load ptr, ptr %key, align 8, !dbg !10265, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %77), !dbg !10265
  %78 = load ptr, ptr %value, align 8, !dbg !10266, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %78), !dbg !10266
  store i32 0, ptr %retval, align 4, !dbg !10267
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup141, !dbg !10267

arg_passed_twice:                                 ; preds = %cleanup117
  tail call void @llvm.dbg.label(metadata !10078), !dbg !10268
  %79 = load ptr, ptr %function_name.addr, align 8, !dbg !10269, !tbaa !1461
  %80 = load ptr, ptr %key, align 8, !dbg !10270, !tbaa !1461
  call void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %79, ptr noundef %80), !dbg !10271
  br label %bad, !dbg !10272

invalid_keyword_type:                             ; preds = %if.else121
  tail call void @llvm.dbg.label(metadata !10079), !dbg !10273
  %81 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10274, !tbaa !1461
  %82 = load ptr, ptr %function_name.addr, align 8, !dbg !10275, !tbaa !1461
  %call139 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %81, ptr noundef @.str.52, ptr noundef %82), !dbg !10276
  br label %bad, !dbg !10277

invalid_keyword:                                  ; preds = %if.else136
  tail call void @llvm.dbg.label(metadata !10080), !dbg !10278
  %83 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10279, !tbaa !1461
  %84 = load ptr, ptr %function_name.addr, align 8, !dbg !10280, !tbaa !1461
  %85 = load ptr, ptr %key, align 8, !dbg !10281, !tbaa !1461
  %call140 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %83, ptr noundef @.str.53, ptr noundef %84, ptr noundef %85), !dbg !10282
  br label %bad, !dbg !10282

bad:                                              ; preds = %invalid_keyword, %cleanup117, %cleanup67, %invalid_keyword_type, %arg_passed_twice, %if.then134
  tail call void @llvm.dbg.label(metadata !10081), !dbg !10283
  %86 = load ptr, ptr %key, align 8, !dbg !10284, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %86), !dbg !10284
  %87 = load ptr, ptr %value, align 8, !dbg !10285, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %87), !dbg !10285
  store i32 -1, ptr %retval, align 4, !dbg !10286
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup141, !dbg !10286

cleanup141:                                       ; preds = %bad, %while.end138, %cleanup117, %cleanup67
  call void @llvm.lifetime.end.p0(i64 4, ptr %kwds_is_tuple) #10, !dbg !10287
  call void @llvm.lifetime.end.p0(i64 8, ptr %first_kw_arg) #10, !dbg !10287
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #10, !dbg !10287
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #10, !dbg !10287
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #10, !dbg !10287
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #10, !dbg !10287
  %88 = load i32, ptr %retval, align 4, !dbg !10287
  ret i32 %88, !dbg !10287

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseArgtupleInvalid(ptr noundef %func_name, i32 noundef %exact, i64 noundef %num_min, i64 noundef %num_max, i64 noundef %num_found) #0 !dbg !10288 {
entry:
  %func_name.addr = alloca ptr, align 8
  %exact.addr = alloca i32, align 4
  %num_min.addr = alloca i64, align 8
  %num_max.addr = alloca i64, align 8
  %num_found.addr = alloca i64, align 8
  %num_expected = alloca i64, align 8
  %more_or_less = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func_name.addr, metadata !10292, metadata !DIExpression()), !dbg !10299
  store i32 %exact, ptr %exact.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %exact.addr, metadata !10293, metadata !DIExpression()), !dbg !10300
  store i64 %num_min, ptr %num_min.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %num_min.addr, metadata !10294, metadata !DIExpression()), !dbg !10301
  store i64 %num_max, ptr %num_max.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %num_max.addr, metadata !10295, metadata !DIExpression()), !dbg !10302
  store i64 %num_found, ptr %num_found.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %num_found.addr, metadata !10296, metadata !DIExpression()), !dbg !10303
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_expected) #10, !dbg !10304
  tail call void @llvm.dbg.declare(metadata ptr %num_expected, metadata !10297, metadata !DIExpression()), !dbg !10305
  call void @llvm.lifetime.start.p0(i64 8, ptr %more_or_less) #10, !dbg !10306
  tail call void @llvm.dbg.declare(metadata ptr %more_or_less, metadata !10298, metadata !DIExpression()), !dbg !10307
  %0 = load i64, ptr %num_found.addr, align 8, !dbg !10308, !tbaa !1836
  %1 = load i64, ptr %num_min.addr, align 8, !dbg !10310, !tbaa !1836
  %cmp = icmp slt i64 %0, %1, !dbg !10311
  br i1 %cmp, label %if.then, label %if.else, !dbg !10312

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %num_min.addr, align 8, !dbg !10313, !tbaa !1836
  store i64 %2, ptr %num_expected, align 8, !dbg !10315, !tbaa !1836
  store ptr @.str.55, ptr %more_or_less, align 8, !dbg !10316, !tbaa !1461
  br label %if.end, !dbg !10317

if.else:                                          ; preds = %entry
  %3 = load i64, ptr %num_max.addr, align 8, !dbg !10318, !tbaa !1836
  store i64 %3, ptr %num_expected, align 8, !dbg !10320, !tbaa !1836
  store ptr @.str.56, ptr %more_or_less, align 8, !dbg !10321, !tbaa !1461
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, ptr %exact.addr, align 4, !dbg !10322, !tbaa !1557
  %tobool = icmp ne i32 %4, 0, !dbg !10322
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !10324

if.then1:                                         ; preds = %if.end
  store ptr @.str.57, ptr %more_or_less, align 8, !dbg !10325, !tbaa !1461
  br label %if.end2, !dbg !10327

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10328, !tbaa !1461
  %6 = load ptr, ptr %func_name.addr, align 8, !dbg !10329, !tbaa !1461
  %7 = load ptr, ptr %more_or_less, align 8, !dbg !10330, !tbaa !1461
  %8 = load i64, ptr %num_expected, align 8, !dbg !10331, !tbaa !1836
  %9 = load i64, ptr %num_expected, align 8, !dbg !10332, !tbaa !1836
  %cmp3 = icmp eq i64 %9, 1, !dbg !10333
  %10 = zext i1 %cmp3 to i64, !dbg !10334
  %cond = select i1 %cmp3, ptr @.str.15, ptr @.str.59, !dbg !10334
  %11 = load i64, ptr %num_found.addr, align 8, !dbg !10335, !tbaa !1836
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.58, ptr noundef %6, ptr noundef %7, i64 noundef %8, ptr noundef %cond, i64 noundef %11), !dbg !10336
  call void @llvm.lifetime.end.p0(i64 8, ptr %more_or_less) #10, !dbg !10337
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_expected) #10, !dbg !10337
  ret void, !dbg !10337
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pf_6Cython_7Runtime_8refnanny_7Context___cinit__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_name, ptr noundef %__pyx_v_line, ptr noundef %__pyx_v_filename) #0 !dbg !10338 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_name.addr = alloca ptr, align 8
  %__pyx_v_line.addr = alloca ptr, align 8
  %__pyx_v_filename.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !10342, metadata !DIExpression()), !dbg !10354
  store ptr %__pyx_v_name, ptr %__pyx_v_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_name.addr, metadata !10343, metadata !DIExpression()), !dbg !10355
  store ptr %__pyx_v_line, ptr %__pyx_v_line.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_line.addr, metadata !10344, metadata !DIExpression()), !dbg !10356
  store ptr %__pyx_v_filename, ptr %__pyx_v_filename.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_filename.addr, metadata !10345, metadata !DIExpression()), !dbg !10357
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #10, !dbg !10358
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10346, metadata !DIExpression()), !dbg !10359
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !10360
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !10347, metadata !DIExpression()), !dbg !10361
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !10362
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !10348, metadata !DIExpression()), !dbg !10363
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10363, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !10364
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !10349, metadata !DIExpression()), !dbg !10365
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !10365, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !10366
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !10350, metadata !DIExpression()), !dbg !10367
  store ptr null, ptr %__pyx_filename, align 8, !dbg !10367, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !10368
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !10351, metadata !DIExpression()), !dbg !10369
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !10369, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_name.addr, align 8, !dbg !10370, !tbaa !1461
  call void @Py_INCREF(ptr noundef %0), !dbg !10370
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10371, !tbaa !1461
  %name = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %1, i32 0, i32 2, !dbg !10371
  %2 = load ptr, ptr %name, align 8, !dbg !10371, !tbaa !3597
  call void @Py_DECREF(ptr noundef %2), !dbg !10371
  %3 = load ptr, ptr %__pyx_v_name.addr, align 8, !dbg !10372, !tbaa !1461
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10373, !tbaa !1461
  %name1 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %4, i32 0, i32 2, !dbg !10374
  store ptr %3, ptr %name1, align 8, !dbg !10375, !tbaa !3597
  %5 = load ptr, ptr %__pyx_v_line.addr, align 8, !dbg !10376, !tbaa !1461
  %call = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %5), !dbg !10377
  store i64 %call, ptr %__pyx_t_1, align 8, !dbg !10378, !tbaa !1836
  %6 = load i64, ptr %__pyx_t_1, align 8, !dbg !10379, !tbaa !1836
  %cmp = icmp eq i64 %6, -1, !dbg !10379
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10379

land.rhs:                                         ; preds = %entry
  %call2 = call ptr @PyErr_Occurred(), !dbg !10379
  %tobool = icmp ne ptr %call2, null, !dbg !10379
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !10381
  %lnot = xor i1 %7, true, !dbg !10379
  %lnot3 = xor i1 %lnot, true, !dbg !10379
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10379
  %conv = sext i32 %lnot.ext to i64, !dbg !10379
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10379
  %tobool4 = icmp ne i64 %expval, 0, !dbg !10379
  br i1 %tobool4, label %if.then, label %if.end, !dbg !10382

if.then:                                          ; preds = %land.end
  %8 = load ptr, ptr @__pyx_f, align 16, !dbg !10383, !tbaa !1461
  store ptr %8, ptr %__pyx_filename, align 8, !dbg !10383, !tbaa !1461
  %9 = load ptr, ptr %__pyx_filename, align 8, !dbg !10383, !tbaa !1461
  store i32 30, ptr %__pyx_lineno, align 4, !dbg !10383, !tbaa !1557
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !10383, !tbaa !1557
  store i32 3000, ptr %__pyx_clineno, align 4, !dbg !10383, !tbaa !1557
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !10383, !tbaa !1557
  br label %__pyx_L1_error, !dbg !10386

if.end:                                           ; preds = %land.end
  %12 = load i64, ptr %__pyx_t_1, align 8, !dbg !10387, !tbaa !1836
  %13 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10388, !tbaa !1461
  %start = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %13, i32 0, i32 6, !dbg !10389
  store i64 %12, ptr %start, align 8, !dbg !10390, !tbaa !2912
  %14 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !10391, !tbaa !1461
  call void @Py_INCREF(ptr noundef %14), !dbg !10391
  %15 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10392, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %15, i32 0, i32 3, !dbg !10392
  %16 = load ptr, ptr %filename, align 8, !dbg !10392, !tbaa !2905
  call void @Py_DECREF(ptr noundef %16), !dbg !10392
  %17 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !10393, !tbaa !1461
  %18 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10394, !tbaa !1461
  %filename5 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %18, i32 0, i32 3, !dbg !10395
  store ptr %17, ptr %filename5, align 8, !dbg !10396, !tbaa !2905
  %call6 = call ptr @PyDict_New(), !dbg !10397
  store ptr %call6, ptr %__pyx_t_2, align 8, !dbg !10398, !tbaa !1461
  %19 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10399, !tbaa !1461
  %tobool7 = icmp ne ptr %19, null, !dbg !10399
  %lnot8 = xor i1 %tobool7, true, !dbg !10399
  %lnot10 = xor i1 %lnot8, true, !dbg !10399
  %lnot12 = xor i1 %lnot10, true, !dbg !10399
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !10399
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !10399
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !10399
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !10399
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !10401

if.then17:                                        ; preds = %if.end
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !10402, !tbaa !1461
  store ptr %20, ptr %__pyx_filename, align 8, !dbg !10402, !tbaa !1461
  %21 = load ptr, ptr %__pyx_filename, align 8, !dbg !10402, !tbaa !1461
  store i32 32, ptr %__pyx_lineno, align 4, !dbg !10402, !tbaa !1557
  %22 = load i32, ptr %__pyx_lineno, align 4, !dbg !10402, !tbaa !1557
  store i32 3023, ptr %__pyx_clineno, align 4, !dbg !10402, !tbaa !1557
  %23 = load i32, ptr %__pyx_clineno, align 4, !dbg !10402, !tbaa !1557
  br label %__pyx_L1_error, !dbg !10405

if.end18:                                         ; preds = %if.end
  %24 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10406, !tbaa !1461
  %refs = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %24, i32 0, i32 4, !dbg !10406
  %25 = load ptr, ptr %refs, align 8, !dbg !10406, !tbaa !4959
  call void @Py_DECREF(ptr noundef %25), !dbg !10406
  %26 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10407, !tbaa !1461
  %27 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10408, !tbaa !1461
  %refs19 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %27, i32 0, i32 4, !dbg !10409
  store ptr %26, ptr %refs19, align 8, !dbg !10410, !tbaa !4959
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10411, !tbaa !1461
  %call20 = call ptr @PyList_New(i64 noundef 0), !dbg !10412
  store ptr %call20, ptr %__pyx_t_2, align 8, !dbg !10413, !tbaa !1461
  %28 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10414, !tbaa !1461
  %tobool21 = icmp ne ptr %28, null, !dbg !10414
  %lnot22 = xor i1 %tobool21, true, !dbg !10414
  %lnot24 = xor i1 %lnot22, true, !dbg !10414
  %lnot26 = xor i1 %lnot24, true, !dbg !10414
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !10414
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !10414
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0), !dbg !10414
  %tobool30 = icmp ne i64 %expval29, 0, !dbg !10414
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10416

if.then31:                                        ; preds = %if.end18
  %29 = load ptr, ptr @__pyx_f, align 16, !dbg !10417, !tbaa !1461
  store ptr %29, ptr %__pyx_filename, align 8, !dbg !10417, !tbaa !1461
  %30 = load ptr, ptr %__pyx_filename, align 8, !dbg !10417, !tbaa !1461
  store i32 33, ptr %__pyx_lineno, align 4, !dbg !10417, !tbaa !1557
  %31 = load i32, ptr %__pyx_lineno, align 4, !dbg !10417, !tbaa !1557
  store i32 3038, ptr %__pyx_clineno, align 4, !dbg !10417, !tbaa !1557
  %32 = load i32, ptr %__pyx_clineno, align 4, !dbg !10417, !tbaa !1557
  br label %__pyx_L1_error, !dbg !10420

if.end32:                                         ; preds = %if.end18
  %33 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10421, !tbaa !1461
  %errors = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %33, i32 0, i32 5, !dbg !10421
  %34 = load ptr, ptr %errors, align 8, !dbg !10421, !tbaa !4894
  call void @Py_DECREF(ptr noundef %34), !dbg !10421
  %35 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10422, !tbaa !1461
  %36 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !10423, !tbaa !1461
  %errors33 = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %36, i32 0, i32 5, !dbg !10424
  store ptr %35, ptr %errors33, align 8, !dbg !10425, !tbaa !4894
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10426, !tbaa !1461
  store i32 0, ptr %__pyx_r, align 4, !dbg !10427, !tbaa !1557
  br label %__pyx_L0, !dbg !10428

__pyx_L1_error:                                   ; preds = %if.then31, %if.then17, %if.then
  tail call void @llvm.dbg.label(metadata !10352), !dbg !10429
  %37 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10430, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %37), !dbg !10430
  %38 = load i32, ptr %__pyx_clineno, align 4, !dbg !10431, !tbaa !1557
  %39 = load i32, ptr %__pyx_lineno, align 4, !dbg !10432, !tbaa !1557
  %40 = load ptr, ptr %__pyx_filename, align 8, !dbg !10433, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.51, i32 noundef %38, i32 noundef %39, ptr noundef %40), !dbg !10434
  store i32 -1, ptr %__pyx_r, align 4, !dbg !10435, !tbaa !1557
  br label %__pyx_L0, !dbg !10436

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end32
  tail call void @llvm.dbg.label(metadata !10353), !dbg !10437
  %41 = load i32, ptr %__pyx_r, align 4, !dbg !10438, !tbaa !1557
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !10439
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !10439
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !10439
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !10439
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #10, !dbg !10439
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #10, !dbg !10439
  ret i32 %41, !dbg !10440
}

declare !dbg !10441 i32 @PyUnicode_Compare(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %func_name, ptr noundef %kw_name) #0 !dbg !10442 {
entry:
  %func_name.addr = alloca ptr, align 8
  %kw_name.addr = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %func_name.addr, metadata !10446, metadata !DIExpression()), !dbg !10448
  store ptr %kw_name, ptr %kw_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %kw_name.addr, metadata !10447, metadata !DIExpression()), !dbg !10449
  %0 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10450, !tbaa !1461
  %1 = load ptr, ptr %func_name.addr, align 8, !dbg !10451, !tbaa !1461
  %2 = load ptr, ptr %kw_name.addr, align 8, !dbg !10452, !tbaa !1461
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.54, ptr noundef %1, ptr noundef %2), !dbg !10453
  ret void, !dbg !10454
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %b) #3 !dbg !10455 {
entry:
  %retval = alloca i64, align 8
  %b.addr = alloca ptr, align 8
  %ival = alloca i64, align 8
  %x = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %digits = alloca ptr, align 8
  %size = alloca i64, align 8
  store ptr %b, ptr %b.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !10457, metadata !DIExpression()), !dbg !10466
  call void @llvm.lifetime.start.p0(i64 8, ptr %ival) #10, !dbg !10467
  tail call void @llvm.dbg.declare(metadata ptr %ival, metadata !10458, metadata !DIExpression()), !dbg !10468
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #10, !dbg !10469
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !10459, metadata !DIExpression()), !dbg !10470
  %0 = load ptr, ptr %b.addr, align 8, !dbg !10471, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %0, ptr noundef @PyLong_Type), !dbg !10471
  %tobool = icmp ne i32 %call, 0, !dbg !10471
  %lnot = xor i1 %tobool, true, !dbg !10471
  %lnot1 = xor i1 %lnot, true, !dbg !10471
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10471
  %conv = sext i32 %lnot.ext to i64, !dbg !10471
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !10471
  %tobool2 = icmp ne i64 %expval, 0, !dbg !10471
  br i1 %tobool2, label %if.then, label %if.end52, !dbg !10472

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %b.addr, align 8, !dbg !10473, !tbaa !1461
  %call3 = call i64 @Py_SIZE(ptr noundef %1), !dbg !10473
  %cmp = icmp eq i64 %call3, 0, !dbg !10473
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !10473

lor.lhs.false:                                    ; preds = %if.then
  %2 = load ptr, ptr %b.addr, align 8, !dbg !10473, !tbaa !1461
  %call5 = call i64 @Py_SIZE(ptr noundef %2), !dbg !10473
  %cmp6 = icmp eq i64 %call5, 1, !dbg !10473
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !10473

lor.rhs:                                          ; preds = %lor.lhs.false
  %3 = load ptr, ptr %b.addr, align 8, !dbg !10473, !tbaa !1461
  %call8 = call i64 @Py_SIZE(ptr noundef %3), !dbg !10473
  %cmp9 = icmp eq i64 %call8, -1, !dbg !10473
  br label %lor.end, !dbg !10473

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.then
  %4 = phi i1 [ true, %lor.lhs.false ], [ true, %if.then ], [ %cmp9, %lor.rhs ]
  %lnot11 = xor i1 %4, true, !dbg !10473
  %lnot13 = xor i1 %lnot11, true, !dbg !10473
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !10473
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !10473
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 1), !dbg !10473
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !10473
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !10474

if.then18:                                        ; preds = %lor.end
  %5 = load ptr, ptr %b.addr, align 8, !dbg !10475, !tbaa !1461
  %call19 = call i64 @Py_SIZE(ptr noundef %5), !dbg !10475
  %cmp20 = icmp eq i64 %call19, 0, !dbg !10475
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !10475

cond.true:                                        ; preds = %if.then18
  br label %cond.end29, !dbg !10475

cond.false:                                       ; preds = %if.then18
  %6 = load ptr, ptr %b.addr, align 8, !dbg !10475, !tbaa !1461
  %call22 = call i64 @Py_SIZE(ptr noundef %6), !dbg !10475
  %cmp23 = icmp slt i64 %call22, 0, !dbg !10475
  br i1 %cmp23, label %cond.true25, label %cond.false26, !dbg !10475

cond.true25:                                      ; preds = %cond.false
  %7 = load ptr, ptr %b.addr, align 8, !dbg !10475, !tbaa !1461
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %7, i32 0, i32 1, !dbg !10475
  %arrayidx = getelementptr [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !10475
  %8 = load i32, ptr %arrayidx, align 8, !dbg !10475, !tbaa !1557
  %sub = sub i32 0, %8, !dbg !10475
  br label %cond.end, !dbg !10475

cond.false26:                                     ; preds = %cond.false
  %9 = load ptr, ptr %b.addr, align 8, !dbg !10475, !tbaa !1461
  %ob_digit27 = getelementptr inbounds %struct._longobject, ptr %9, i32 0, i32 1, !dbg !10475
  %arrayidx28 = getelementptr [1 x i32], ptr %ob_digit27, i64 0, i64 0, !dbg !10475
  %10 = load i32, ptr %arrayidx28, align 8, !dbg !10475, !tbaa !1557
  br label %cond.end, !dbg !10475

cond.end:                                         ; preds = %cond.false26, %cond.true25
  %cond = phi i32 [ %sub, %cond.true25 ], [ %10, %cond.false26 ], !dbg !10475
  br label %cond.end29, !dbg !10475

cond.end29:                                       ; preds = %cond.end, %cond.true
  %cond30 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !10475
  %conv31 = sext i32 %cond30 to i64, !dbg !10475
  store i64 %conv31, ptr %retval, align 8, !dbg !10477
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup58, !dbg !10477

if.else:                                          ; preds = %lor.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #10, !dbg !10478
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !10460, metadata !DIExpression()), !dbg !10479
  %11 = load ptr, ptr %b.addr, align 8, !dbg !10480, !tbaa !1461
  %ob_digit32 = getelementptr inbounds %struct._longobject, ptr %11, i32 0, i32 1, !dbg !10480
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit32, i64 0, i64 0, !dbg !10480
  store ptr %arraydecay, ptr %digits, align 8, !dbg !10479, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #10, !dbg !10481
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !10465, metadata !DIExpression()), !dbg !10482
  %12 = load ptr, ptr %b.addr, align 8, !dbg !10483, !tbaa !1461
  %call33 = call i64 @Py_SIZE(ptr noundef %12), !dbg !10483
  store i64 %call33, ptr %size, align 8, !dbg !10482, !tbaa !1836
  %13 = load i64, ptr %size, align 8, !dbg !10484, !tbaa !1836
  switch i64 %13, label %sw.epilog [
    i64 2, label %sw.bb
    i64 -2, label %sw.bb38
    i64 3, label %sw.bb46
    i64 -3, label %sw.bb47
    i64 4, label %sw.bb48
    i64 -4, label %sw.bb49
  ], !dbg !10485

sw.bb:                                            ; preds = %if.else
  %14 = load ptr, ptr %digits, align 8, !dbg !10486, !tbaa !1461
  %arrayidx34 = getelementptr i32, ptr %14, i64 1, !dbg !10486
  %15 = load i32, ptr %arrayidx34, align 4, !dbg !10486, !tbaa !1557
  %conv35 = zext i32 %15 to i64, !dbg !10490
  %shl = shl i64 %conv35, 30, !dbg !10491
  %16 = load ptr, ptr %digits, align 8, !dbg !10492, !tbaa !1461
  %arrayidx36 = getelementptr i32, ptr %16, i64 0, !dbg !10492
  %17 = load i32, ptr %arrayidx36, align 4, !dbg !10492, !tbaa !1557
  %conv37 = zext i32 %17 to i64, !dbg !10493
  %or = or i64 %shl, %conv37, !dbg !10494
  store i64 %or, ptr %retval, align 8, !dbg !10495
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10495

sw.bb38:                                          ; preds = %if.else
  %18 = load ptr, ptr %digits, align 8, !dbg !10496, !tbaa !1461
  %arrayidx39 = getelementptr i32, ptr %18, i64 1, !dbg !10496
  %19 = load i32, ptr %arrayidx39, align 4, !dbg !10496, !tbaa !1557
  %conv40 = zext i32 %19 to i64, !dbg !10499
  %shl41 = shl i64 %conv40, 30, !dbg !10500
  %20 = load ptr, ptr %digits, align 8, !dbg !10501, !tbaa !1461
  %arrayidx42 = getelementptr i32, ptr %20, i64 0, !dbg !10501
  %21 = load i32, ptr %arrayidx42, align 4, !dbg !10501, !tbaa !1557
  %conv43 = zext i32 %21 to i64, !dbg !10502
  %or44 = or i64 %shl41, %conv43, !dbg !10503
  %sub45 = sub i64 0, %or44, !dbg !10504
  store i64 %sub45, ptr %retval, align 8, !dbg !10505
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10505

sw.bb46:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !10506

sw.bb47:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !10507

sw.bb48:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !10508

sw.bb49:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !10509

sw.epilog:                                        ; preds = %if.else, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10510
  br label %cleanup, !dbg !10510

cleanup:                                          ; preds = %sw.epilog, %sw.bb38, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #10, !dbg !10510
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #10, !dbg !10510
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup58 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end

if.end:                                           ; preds = %cleanup.cont
  %22 = load ptr, ptr %b.addr, align 8, !dbg !10511, !tbaa !1461
  %call51 = call i64 @PyLong_AsSsize_t(ptr noundef %22), !dbg !10512
  store i64 %call51, ptr %retval, align 8, !dbg !10513
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup58, !dbg !10513

if.end52:                                         ; preds = %entry
  %23 = load ptr, ptr %b.addr, align 8, !dbg !10514, !tbaa !1461
  %call53 = call ptr @PyNumber_Index(ptr noundef %23), !dbg !10515
  store ptr %call53, ptr %x, align 8, !dbg !10516, !tbaa !1461
  %24 = load ptr, ptr %x, align 8, !dbg !10517, !tbaa !1461
  %tobool54 = icmp ne ptr %24, null, !dbg !10517
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !10519

if.then55:                                        ; preds = %if.end52
  store i64 -1, ptr %retval, align 8, !dbg !10520
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup58, !dbg !10520

if.end56:                                         ; preds = %if.end52
  %25 = load ptr, ptr %x, align 8, !dbg !10521, !tbaa !1461
  %call57 = call i64 @PyLong_AsSsize_t(ptr noundef %25), !dbg !10522
  store i64 %call57, ptr %ival, align 8, !dbg !10523, !tbaa !1836
  %26 = load ptr, ptr %x, align 8, !dbg !10524, !tbaa !1461
  call void @Py_DECREF(ptr noundef %26), !dbg !10524
  %27 = load i64, ptr %ival, align 8, !dbg !10525, !tbaa !1836
  store i64 %27, ptr %retval, align 8, !dbg !10526
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup58, !dbg !10526

cleanup58:                                        ; preds = %if.end56, %if.then55, %if.end, %cleanup, %cond.end29
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #10, !dbg !10527
  call void @llvm.lifetime.end.p0(i64 8, ptr %ival) #10, !dbg !10527
  %28 = load i64, ptr %retval, align 8, !dbg !10527
  ret i64 %28, !dbg !10527
}

declare !dbg !10528 ptr @PyDict_New() #1

declare !dbg !10529 i64 @PyLong_AsSsize_t(ptr noundef) #1

declare !dbg !10530 ptr @PyNumber_Index(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_validate_bases_tuple(ptr noundef %type_name, i64 noundef %dictoffset, ptr noundef %bases) #0 !dbg !10531 {
entry:
  %retval = alloca i32, align 4
  %type_name.addr = alloca ptr, align 8
  %dictoffset.addr = alloca i64, align 8
  %bases.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %b0 = alloca ptr, align 8
  %b = alloca ptr, align 8
  %b_name = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %b_name5 = alloca ptr, align 8
  store ptr %type_name, ptr %type_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type_name.addr, metadata !10535, metadata !DIExpression()), !dbg !10551
  store i64 %dictoffset, ptr %dictoffset.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %dictoffset.addr, metadata !10536, metadata !DIExpression()), !dbg !10552
  store ptr %bases, ptr %bases.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %bases.addr, metadata !10537, metadata !DIExpression()), !dbg !10553
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !10554
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !10538, metadata !DIExpression()), !dbg !10555
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #10, !dbg !10554
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !10539, metadata !DIExpression()), !dbg !10556
  %0 = load ptr, ptr %bases.addr, align 8, !dbg !10557, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !10557
  store i64 %call, ptr %n, align 8, !dbg !10558, !tbaa !1836
  store i64 1, ptr %i, align 8, !dbg !10559, !tbaa !1836
  br label %for.cond, !dbg !10560

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !10561, !tbaa !1836
  %2 = load i64, ptr %n, align 8, !dbg !10562, !tbaa !1836
  %cmp = icmp slt i64 %1, %2, !dbg !10563
  br i1 %cmp, label %for.body, label %for.end, !dbg !10564

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %b0) #10, !dbg !10565
  tail call void @llvm.dbg.declare(metadata ptr %b0, metadata !10540, metadata !DIExpression()), !dbg !10566
  %3 = load ptr, ptr %bases.addr, align 8, !dbg !10567, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1, !dbg !10567
  %4 = load i64, ptr %i, align 8, !dbg !10567, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %4, !dbg !10567
  %5 = load ptr, ptr %arrayidx, align 8, !dbg !10567, !tbaa !1461
  store ptr %5, ptr %b0, align 8, !dbg !10566, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #10, !dbg !10568
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !10544, metadata !DIExpression()), !dbg !10569
  %6 = load ptr, ptr %b0, align 8, !dbg !10570, !tbaa !1461
  store ptr %6, ptr %b, align 8, !dbg !10571, !tbaa !1461
  %7 = load ptr, ptr %b, align 8, !dbg !10572, !tbaa !1461
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %7, i32 0, i32 19, !dbg !10572
  %8 = load i64, ptr %tp_flags, align 8, !dbg !10572, !tbaa !4430
  %and = and i64 %8, 512, !dbg !10572
  %cmp1 = icmp ne i64 %and, 0, !dbg !10572
  br i1 %cmp1, label %if.end, label %if.then, !dbg !10573

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_name) #10, !dbg !10574
  tail call void @llvm.dbg.declare(metadata ptr %b_name, metadata !10545, metadata !DIExpression()), !dbg !10575
  %9 = load ptr, ptr %b, align 8, !dbg !10576, !tbaa !1461
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %9, i32 0, i32 1, !dbg !10576
  %10 = load ptr, ptr %tp_name, align 8, !dbg !10576, !tbaa !6513
  store ptr %10, ptr %b_name, align 8, !dbg !10575, !tbaa !1461
  %11 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10577, !tbaa !1461
  %12 = load ptr, ptr %b_name, align 8, !dbg !10578, !tbaa !1461
  %call2 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %11, ptr noundef @.str.60, ptr noundef %12), !dbg !10579
  store i32 -1, ptr %retval, align 4, !dbg !10580
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_name) #10, !dbg !10581
  br label %cleanup

if.end:                                           ; preds = %for.body
  %13 = load i64, ptr %dictoffset.addr, align 8, !dbg !10582, !tbaa !1836
  %cmp3 = icmp eq i64 %13, 0, !dbg !10583
  br i1 %cmp3, label %land.lhs.true, label %if.end8, !dbg !10584

land.lhs.true:                                    ; preds = %if.end
  %14 = load ptr, ptr %b, align 8, !dbg !10585, !tbaa !1461
  %tp_dictoffset = getelementptr inbounds %struct._typeobject, ptr %14, i32 0, i32 34, !dbg !10586
  %15 = load i64, ptr %tp_dictoffset, align 8, !dbg !10586, !tbaa !2427
  %tobool = icmp ne i64 %15, 0, !dbg !10585
  br i1 %tobool, label %if.then4, label %if.end8, !dbg !10587

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %b_name5) #10, !dbg !10588
  tail call void @llvm.dbg.declare(metadata ptr %b_name5, metadata !10548, metadata !DIExpression()), !dbg !10589
  %16 = load ptr, ptr %b, align 8, !dbg !10590, !tbaa !1461
  %tp_name6 = getelementptr inbounds %struct._typeobject, ptr %16, i32 0, i32 1, !dbg !10590
  %17 = load ptr, ptr %tp_name6, align 8, !dbg !10590, !tbaa !6513
  store ptr %17, ptr %b_name5, align 8, !dbg !10589, !tbaa !1461
  %18 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10591, !tbaa !1461
  %19 = load ptr, ptr %type_name.addr, align 8, !dbg !10592, !tbaa !1461
  %20 = load ptr, ptr %b_name5, align 8, !dbg !10593, !tbaa !1461
  %call7 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %18, ptr noundef @.str.61, ptr noundef %19, ptr noundef %20), !dbg !10594
  store i32 -1, ptr %retval, align 4, !dbg !10595
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %b_name5) #10, !dbg !10596
  br label %cleanup

if.end8:                                          ; preds = %land.lhs.true, %if.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10597
  br label %cleanup, !dbg !10597

cleanup:                                          ; preds = %if.end8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #10, !dbg !10597
  call void @llvm.lifetime.end.p0(i64 8, ptr %b0) #10, !dbg !10597
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup10 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !10598

for.inc:                                          ; preds = %cleanup.cont
  %21 = load i64, ptr %i, align 8, !dbg !10599, !tbaa !1836
  %inc = add i64 %21, 1, !dbg !10599
  store i64 %inc, ptr %i, align 8, !dbg !10599, !tbaa !1836
  br label %for.cond, !dbg !10600, !llvm.loop !10601

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !10603
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup10, !dbg !10603

cleanup10:                                        ; preds = %for.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #10, !dbg !10604
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !10604
  %22 = load i32, ptr %retval, align 4, !dbg !10604
  ret i32 %22, !dbg !10604
}

declare !dbg !10605 i32 @PyGC_Disable() #1

declare !dbg !10606 i32 @PyGC_Enable() #1

declare !dbg !10607 ptr @PyCapsule_New(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind allocsize(0)
declare !dbg !10612 noalias ptr @malloc(i64 noundef) #7

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetVtable(ptr noundef %type) #0 !dbg !10616 {
entry:
  %retval = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %ob = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !10620, metadata !DIExpression()), !dbg !10624
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #10, !dbg !10625
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !10621, metadata !DIExpression()), !dbg !10626
  call void @llvm.lifetime.start.p0(i64 8, ptr %ob) #10, !dbg !10627
  tail call void @llvm.dbg.declare(metadata ptr %ob, metadata !10622, metadata !DIExpression()), !dbg !10628
  %0 = load ptr, ptr %type.addr, align 8, !dbg !10629, !tbaa !1461
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 31, !dbg !10630
  %1 = load ptr, ptr %tp_dict, align 8, !dbg !10630, !tbaa !6560
  %2 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !10631, !tbaa !1461
  %__pyx_n_s_pyx_vtable = getelementptr inbounds %struct.__pyx_mstate, ptr %2, i32 0, i32 48, !dbg !10631
  %3 = load ptr, ptr %__pyx_n_s_pyx_vtable, align 8, !dbg !10631, !tbaa !6561
  %call = call ptr @PyObject_GetItem(ptr noundef %1, ptr noundef %3), !dbg !10632
  store ptr %call, ptr %ob, align 8, !dbg !10628, !tbaa !1461
  %4 = load ptr, ptr %ob, align 8, !dbg !10633, !tbaa !1461
  %tobool = icmp ne ptr %4, null, !dbg !10633
  br i1 %tobool, label %if.end, label %if.then, !dbg !10635

if.then:                                          ; preds = %entry
  br label %bad, !dbg !10636

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %ob, align 8, !dbg !10637, !tbaa !1461
  %call1 = call ptr @PyCapsule_GetPointer(ptr noundef %5, ptr noundef null), !dbg !10638
  store ptr %call1, ptr %ptr, align 8, !dbg !10639, !tbaa !1461
  %6 = load ptr, ptr %ptr, align 8, !dbg !10640, !tbaa !1461
  %tobool2 = icmp ne ptr %6, null, !dbg !10640
  br i1 %tobool2, label %if.end6, label %land.lhs.true, !dbg !10642

land.lhs.true:                                    ; preds = %if.end
  %call3 = call ptr @PyErr_Occurred(), !dbg !10643
  %tobool4 = icmp ne ptr %call3, null, !dbg !10643
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10644

if.then5:                                         ; preds = %land.lhs.true
  %7 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !10645, !tbaa !1461
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.63), !dbg !10646
  br label %if.end6, !dbg !10646

if.end6:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %8 = load ptr, ptr %ob, align 8, !dbg !10647, !tbaa !1461
  call void @Py_DECREF(ptr noundef %8), !dbg !10647
  %9 = load ptr, ptr %ptr, align 8, !dbg !10648, !tbaa !1461
  store ptr %9, ptr %retval, align 8, !dbg !10649
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10649

bad:                                              ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !10623), !dbg !10650
  %10 = load ptr, ptr %ob, align 8, !dbg !10651, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %10), !dbg !10651
  store ptr null, ptr %retval, align 8, !dbg !10652
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10652

cleanup:                                          ; preds = %bad, %if.end6
  call void @llvm.lifetime.end.p0(i64 8, ptr %ob) #10, !dbg !10653
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #10, !dbg !10653
  %11 = load ptr, ptr %retval, align 8, !dbg !10653
  ret ptr %11, !dbg !10653
}

; Function Attrs: nounwind
declare !dbg !10654 void @free(ptr noundef) #8

declare !dbg !10655 ptr @PyObject_GetItem(ptr noundef, ptr noundef) #1

declare !dbg !10656 ptr @PyCapsule_GetPointer(ptr noundef, ptr noundef) #1

declare !dbg !10659 ptr @PyImport_ImportModule(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_ImportType_3_0_4(ptr noundef %module, ptr noundef %module_name, ptr noundef %class_name, i64 noundef %size, i64 noundef %alignment, i32 noundef %check_size) #0 !dbg !10660 {
entry:
  %retval = alloca ptr, align 8
  %module.addr = alloca ptr, align 8
  %module_name.addr = alloca ptr, align 8
  %class_name.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %check_size.addr = alloca i32, align 4
  %result = alloca ptr, align 8
  %warning = alloca [200 x i8], align 16
  %basicsize = alloca i64, align 8
  %itemsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %module, ptr %module.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !10664, metadata !DIExpression()), !dbg !10675
  store ptr %module_name, ptr %module_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %module_name.addr, metadata !10665, metadata !DIExpression()), !dbg !10676
  store ptr %class_name, ptr %class_name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %class_name.addr, metadata !10666, metadata !DIExpression()), !dbg !10677
  store i64 %size, ptr %size.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !10667, metadata !DIExpression()), !dbg !10678
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !10668, metadata !DIExpression()), !dbg !10679
  store i32 %check_size, ptr %check_size.addr, align 4, !tbaa !6963
  tail call void @llvm.dbg.declare(metadata ptr %check_size.addr, metadata !10669, metadata !DIExpression()), !dbg !10680
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #10, !dbg !10681
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !10670, metadata !DIExpression()), !dbg !10682
  store ptr null, ptr %result, align 8, !dbg !10682, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 200, ptr %warning) #10, !dbg !10683
  tail call void @llvm.dbg.declare(metadata ptr %warning, metadata !10671, metadata !DIExpression()), !dbg !10684
  call void @llvm.lifetime.start.p0(i64 8, ptr %basicsize) #10, !dbg !10685
  tail call void @llvm.dbg.declare(metadata ptr %basicsize, metadata !10672, metadata !DIExpression()), !dbg !10686
  call void @llvm.lifetime.start.p0(i64 8, ptr %itemsize) #10, !dbg !10687
  tail call void @llvm.dbg.declare(metadata ptr %itemsize, metadata !10673, metadata !DIExpression()), !dbg !10688
  %0 = load ptr, ptr %module.addr, align 8, !dbg !10689, !tbaa !1461
  %1 = load ptr, ptr %class_name.addr, align 8, !dbg !10690, !tbaa !1461
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef %1), !dbg !10691
  store ptr %call, ptr %result, align 8, !dbg !10692, !tbaa !1461
  %2 = load ptr, ptr %result, align 8, !dbg !10693, !tbaa !1461
  %tobool = icmp ne ptr %2, null, !dbg !10693
  br i1 %tobool, label %if.end, label %if.then, !dbg !10695

if.then:                                          ; preds = %entry
  br label %bad, !dbg !10696

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %result, align 8, !dbg !10697, !tbaa !1461
  %call1 = call i32 @PyType_Check(ptr noundef %3), !dbg !10697
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10697
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !10699

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !10700, !tbaa !1461
  %5 = load ptr, ptr %module_name.addr, align 8, !dbg !10702, !tbaa !1461
  %6 = load ptr, ptr %class_name.addr, align 8, !dbg !10703, !tbaa !1461
  %call4 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.65, ptr noundef %5, ptr noundef %6), !dbg !10704
  br label %bad, !dbg !10705

if.end5:                                          ; preds = %if.end
  %7 = load ptr, ptr %result, align 8, !dbg !10706, !tbaa !1461
  %tp_basicsize = getelementptr inbounds %struct._typeobject, ptr %7, i32 0, i32 2, !dbg !10707
  %8 = load i64, ptr %tp_basicsize, align 8, !dbg !10707, !tbaa !10708
  store i64 %8, ptr %basicsize, align 8, !dbg !10709, !tbaa !1836
  %9 = load ptr, ptr %result, align 8, !dbg !10710, !tbaa !1461
  %tp_itemsize = getelementptr inbounds %struct._typeobject, ptr %9, i32 0, i32 3, !dbg !10711
  %10 = load i64, ptr %tp_itemsize, align 8, !dbg !10711, !tbaa !10712
  store i64 %10, ptr %itemsize, align 8, !dbg !10713, !tbaa !1836
  %11 = load i64, ptr %itemsize, align 8, !dbg !10714, !tbaa !1836
  %tobool6 = icmp ne i64 %11, 0, !dbg !10714
  br i1 %tobool6, label %if.then7, label %if.end14, !dbg !10716

if.then7:                                         ; preds = %if.end5
  %12 = load i64, ptr %size.addr, align 8, !dbg !10717, !tbaa !1836
  %13 = load i64, ptr %alignment.addr, align 8, !dbg !10720, !tbaa !1836
  %rem = urem i64 %12, %13, !dbg !10721
  %tobool8 = icmp ne i64 %rem, 0, !dbg !10721
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !10722

if.then9:                                         ; preds = %if.then7
  %14 = load i64, ptr %size.addr, align 8, !dbg !10723, !tbaa !1836
  %15 = load i64, ptr %alignment.addr, align 8, !dbg !10725, !tbaa !1836
  %rem10 = urem i64 %14, %15, !dbg !10726
  store i64 %rem10, ptr %alignment.addr, align 8, !dbg !10727, !tbaa !1836
  br label %if.end11, !dbg !10728

if.end11:                                         ; preds = %if.then9, %if.then7
  %16 = load i64, ptr %itemsize, align 8, !dbg !10729, !tbaa !1836
  %17 = load i64, ptr %alignment.addr, align 8, !dbg !10731, !tbaa !1836
  %cmp = icmp slt i64 %16, %17, !dbg !10732
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !10733

if.then12:                                        ; preds = %if.end11
  %18 = load i64, ptr %alignment.addr, align 8, !dbg !10734, !tbaa !1836
  store i64 %18, ptr %itemsize, align 8, !dbg !10735, !tbaa !1836
  br label %if.end13, !dbg !10736

if.end13:                                         ; preds = %if.then12, %if.end11
  br label %if.end14, !dbg !10737

if.end14:                                         ; preds = %if.end13, %if.end5
  %19 = load i64, ptr %basicsize, align 8, !dbg !10738, !tbaa !1836
  %20 = load i64, ptr %itemsize, align 8, !dbg !10740, !tbaa !1836
  %add = add i64 %19, %20, !dbg !10741
  %21 = load i64, ptr %size.addr, align 8, !dbg !10742, !tbaa !1836
  %cmp15 = icmp ult i64 %add, %21, !dbg !10743
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !10744

if.then16:                                        ; preds = %if.end14
  %22 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !10745, !tbaa !1461
  %23 = load ptr, ptr %module_name.addr, align 8, !dbg !10747, !tbaa !1461
  %24 = load ptr, ptr %class_name.addr, align 8, !dbg !10748, !tbaa !1461
  %25 = load i64, ptr %size.addr, align 8, !dbg !10749, !tbaa !1836
  %26 = load i64, ptr %basicsize, align 8, !dbg !10750, !tbaa !1836
  %27 = load i64, ptr %itemsize, align 8, !dbg !10751, !tbaa !1836
  %add17 = add i64 %26, %27, !dbg !10752
  %call18 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %22, ptr noundef @.str.66, ptr noundef %23, ptr noundef %24, i64 noundef %25, i64 noundef %add17), !dbg !10753
  br label %bad, !dbg !10754

if.end19:                                         ; preds = %if.end14
  %28 = load i32, ptr %check_size.addr, align 4, !dbg !10755, !tbaa !6963
  %cmp20 = icmp eq i32 %28, 0, !dbg !10757
  br i1 %cmp20, label %land.lhs.true, label %if.else, !dbg !10758

land.lhs.true:                                    ; preds = %if.end19
  %29 = load i64, ptr %basicsize, align 8, !dbg !10759, !tbaa !1836
  %30 = load i64, ptr %size.addr, align 8, !dbg !10760, !tbaa !1836
  %cmp21 = icmp ugt i64 %29, %30, !dbg !10761
  br i1 %cmp21, label %if.then24, label %lor.lhs.false, !dbg !10762

lor.lhs.false:                                    ; preds = %land.lhs.true
  %31 = load i64, ptr %basicsize, align 8, !dbg !10763, !tbaa !1836
  %32 = load i64, ptr %itemsize, align 8, !dbg !10764, !tbaa !1836
  %add22 = add i64 %31, %32, !dbg !10765
  %33 = load i64, ptr %size.addr, align 8, !dbg !10766, !tbaa !1836
  %cmp23 = icmp ult i64 %add22, %33, !dbg !10767
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !10768

if.then24:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %34 = load ptr, ptr @PyExc_ValueError, align 8, !dbg !10769, !tbaa !1461
  %35 = load ptr, ptr %module_name.addr, align 8, !dbg !10771, !tbaa !1461
  %36 = load ptr, ptr %class_name.addr, align 8, !dbg !10772, !tbaa !1461
  %37 = load i64, ptr %size.addr, align 8, !dbg !10773, !tbaa !1836
  %38 = load i64, ptr %basicsize, align 8, !dbg !10774, !tbaa !1836
  %39 = load i64, ptr %basicsize, align 8, !dbg !10775, !tbaa !1836
  %40 = load i64, ptr %itemsize, align 8, !dbg !10776, !tbaa !1836
  %add25 = add i64 %39, %40, !dbg !10777
  %call26 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %34, ptr noundef @.str.67, ptr noundef %35, ptr noundef %36, i64 noundef %37, i64 noundef %38, i64 noundef %add25), !dbg !10778
  br label %bad, !dbg !10779

if.else:                                          ; preds = %lor.lhs.false, %if.end19
  %41 = load i32, ptr %check_size.addr, align 4, !dbg !10780, !tbaa !6963
  %cmp27 = icmp eq i32 %41, 1, !dbg !10782
  br i1 %cmp27, label %land.lhs.true28, label %if.end37, !dbg !10783

land.lhs.true28:                                  ; preds = %if.else
  %42 = load i64, ptr %basicsize, align 8, !dbg !10784, !tbaa !1836
  %43 = load i64, ptr %size.addr, align 8, !dbg !10785, !tbaa !1836
  %cmp29 = icmp ugt i64 %42, %43, !dbg !10786
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !10787

if.then30:                                        ; preds = %land.lhs.true28
  %arraydecay = getelementptr inbounds [200 x i8], ptr %warning, i64 0, i64 0, !dbg !10788
  %44 = load ptr, ptr %module_name.addr, align 8, !dbg !10790, !tbaa !1461
  %45 = load ptr, ptr %class_name.addr, align 8, !dbg !10791, !tbaa !1461
  %46 = load i64, ptr %size.addr, align 8, !dbg !10792, !tbaa !1836
  %47 = load i64, ptr %basicsize, align 8, !dbg !10793, !tbaa !1836
  %call31 = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay, i64 noundef 200, ptr noundef @.str.68, ptr noundef %44, ptr noundef %45, i64 noundef %46, i64 noundef %47), !dbg !10794
  %arraydecay32 = getelementptr inbounds [200 x i8], ptr %warning, i64 0, i64 0, !dbg !10795
  %call33 = call i32 @PyErr_WarnEx(ptr noundef null, ptr noundef %arraydecay32, i64 noundef 0), !dbg !10797
  %cmp34 = icmp slt i32 %call33, 0, !dbg !10798
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !10799

if.then35:                                        ; preds = %if.then30
  br label %bad, !dbg !10800

if.end36:                                         ; preds = %if.then30
  br label %if.end37, !dbg !10801

if.end37:                                         ; preds = %if.end36, %land.lhs.true28, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %48 = load ptr, ptr %result, align 8, !dbg !10802, !tbaa !1461
  store ptr %48, ptr %retval, align 8, !dbg !10803
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10803

bad:                                              ; preds = %if.then35, %if.then24, %if.then16, %if.then3, %if.then
  tail call void @llvm.dbg.label(metadata !10674), !dbg !10804
  %49 = load ptr, ptr %result, align 8, !dbg !10805, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %49), !dbg !10805
  store ptr null, ptr %retval, align 8, !dbg !10806
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10806

cleanup:                                          ; preds = %bad, %if.end38
  call void @llvm.lifetime.end.p0(i64 8, ptr %itemsize) #10, !dbg !10807
  call void @llvm.lifetime.end.p0(i64 8, ptr %basicsize) #10, !dbg !10807
  call void @llvm.lifetime.end.p0(i64 200, ptr %warning) #10, !dbg !10807
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #10, !dbg !10807
  %50 = load ptr, ptr %retval, align 8, !dbg !10807
  ret ptr %50, !dbg !10807
}

declare !dbg !10808 ptr @PyObject_Call(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_XINCREF(ptr noundef %op) #3 !dbg !10809 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  %0 = load ptr, ptr %op.addr, align 8, !dbg !10813, !tbaa !1461
  %cmp = icmp ne ptr %0, null, !dbg !10815
  br i1 %cmp, label %if.then, label %if.end, !dbg !10816

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !10817, !tbaa !1461
  call void @Py_INCREF(ptr noundef %1), !dbg !10817
  br label %if.end, !dbg !10819

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10820
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_f_6Cython_7Runtime_8refnanny_GIVEREF_and_report(ptr noundef %__pyx_v_ctx, ptr noundef %__pyx_v_p_obj, i64 noundef %__pyx_v_lineno) #0 !dbg !10821 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_ctx.addr = alloca ptr, align 8
  %__pyx_v_p_obj.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_v_type = alloca ptr, align 8
  %__pyx_v_value = alloca ptr, align 8
  %__pyx_v_tb = alloca ptr, align 8
  %__pyx_v_decref_ok = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_tstate = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %__pyx_tstate32 = alloca ptr, align 8
  store ptr %__pyx_v_ctx, ptr %__pyx_v_ctx.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ctx.addr, metadata !10825, metadata !DIExpression()), !dbg !10860
  store ptr %__pyx_v_p_obj, ptr %__pyx_v_p_obj.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_p_obj.addr, metadata !10826, metadata !DIExpression()), !dbg !10861
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !10827, metadata !DIExpression()), !dbg !10862
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !10863
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_type, metadata !10828, metadata !DIExpression()), !dbg !10864
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !10865
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value, metadata !10829, metadata !DIExpression()), !dbg !10866
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !10867
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_tb, metadata !10830, metadata !DIExpression()), !dbg !10868
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_decref_ok) #10, !dbg !10869
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_decref_ok, metadata !10831, metadata !DIExpression()), !dbg !10870
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #10, !dbg !10871
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !10832, metadata !DIExpression()), !dbg !10872
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !10873
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !10833, metadata !DIExpression()), !dbg !10874
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !10875
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !10834, metadata !DIExpression()), !dbg !10876
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10876, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !10877
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !10835, metadata !DIExpression()), !dbg !10878
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !10878, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !10879
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !10836, metadata !DIExpression()), !dbg !10880
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !10880, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !10881
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !10837, metadata !DIExpression()), !dbg !10882
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !10882, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !10883
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !10838, metadata !DIExpression()), !dbg !10884
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !10884, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !10885
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !10839, metadata !DIExpression()), !dbg !10886
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !10886, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !10887
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !10840, metadata !DIExpression()), !dbg !10888
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !10888, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !10889
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !10841, metadata !DIExpression()), !dbg !10890
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !10890, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !10891
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !10842, metadata !DIExpression()), !dbg !10892
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !10892, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !10893
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !10843, metadata !DIExpression()), !dbg !10894
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !10894, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !10895
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !10844, metadata !DIExpression()), !dbg !10896
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !10896, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !10897
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !10845, metadata !DIExpression()), !dbg !10898
  store ptr null, ptr %__pyx_filename, align 8, !dbg !10898, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !10899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !10846, metadata !DIExpression()), !dbg !10900
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !10900, !tbaa !1557
  %0 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !10901, !tbaa !1461
  %cmp = icmp eq ptr %0, null, !dbg !10902
  %conv = zext i1 %cmp to i32, !dbg !10902
  store i32 %conv, ptr %__pyx_t_1, align 4, !dbg !10903, !tbaa !1557
  %1 = load i32, ptr %__pyx_t_1, align 4, !dbg !10904, !tbaa !1557
  %tobool = icmp ne i32 %1, 0, !dbg !10904
  br i1 %tobool, label %if.then, label %if.end, !dbg !10906

if.then:                                          ; preds = %entry
  store i32 1, ptr %__pyx_r, align 4, !dbg !10907, !tbaa !1557
  br label %__pyx_L0, !dbg !10909

if.end:                                           ; preds = %entry
  store ptr null, ptr %__pyx_v_type, align 8, !dbg !10910, !tbaa !1461
  store ptr null, ptr %__pyx_v_value, align 8, !dbg !10911, !tbaa !1461
  store ptr null, ptr %__pyx_v_tb, align 8, !dbg !10912, !tbaa !1461
  store i32 0, ptr %__pyx_v_decref_ok, align 4, !dbg !10913, !tbaa !1557
  call void @PyErr_Fetch(ptr noundef %__pyx_v_type, ptr noundef %__pyx_v_value, ptr noundef %__pyx_v_tb), !dbg !10914
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !10915
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !10847, metadata !DIExpression()), !dbg !10915
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !10916
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !10916, !tbaa !1461
  %2 = load ptr, ptr %__pyx_tstate, align 8, !dbg !10917, !tbaa !1461
  call void @__Pyx__ExceptionSave(ptr noundef %2, ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4), !dbg !10917
  %3 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !10918, !tbaa !1461
  %cmp1 = icmp ne ptr %3, null, !dbg !10920
  %conv2 = zext i1 %cmp1 to i32, !dbg !10920
  store i32 %conv2, ptr %__pyx_t_1, align 4, !dbg !10921, !tbaa !1557
  %4 = load i32, ptr %__pyx_t_1, align 4, !dbg !10922, !tbaa !1557
  %tobool3 = icmp ne i32 %4, 0, !dbg !10922
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !10924

if.then4:                                         ; preds = %if.end
  %5 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !10925, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !10925
  %6 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !10927, !tbaa !1461
  store ptr %6, ptr %__pyx_t_5, align 8, !dbg !10928, !tbaa !1461
  br label %if.end5, !dbg !10929

if.else:                                          ; preds = %if.end
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !10930
  store ptr @_Py_NoneStruct, ptr %__pyx_t_5, align 8, !dbg !10932, !tbaa !1461
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %7 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !10933, !tbaa !1461
  %8 = load ptr, ptr %__pyx_t_5, align 8, !dbg !10934, !tbaa !1461
  %9 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !10935, !tbaa !1836
  %10 = load ptr, ptr %__pyx_v_p_obj.addr, align 8, !dbg !10936, !tbaa !1461
  %cmp6 = icmp eq ptr %10, null, !dbg !10937
  %conv7 = zext i1 %cmp6 to i32, !dbg !10937
  %call8 = call i32 @__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref(ptr noundef %7, ptr noundef %8, i64 noundef %9, i32 noundef %conv7), !dbg !10938
  store i32 %call8, ptr %__pyx_t_1, align 4, !dbg !10939, !tbaa !1557
  %11 = load i32, ptr %__pyx_t_1, align 4, !dbg !10940, !tbaa !1557
  %cmp9 = icmp eq i32 %11, -1, !dbg !10940
  %lnot = xor i1 %cmp9, true, !dbg !10940
  %lnot11 = xor i1 %lnot, true, !dbg !10940
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !10940
  %conv12 = sext i32 %lnot.ext to i64, !dbg !10940
  %expval = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !10940
  %tobool13 = icmp ne i64 %expval, 0, !dbg !10940
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10942

if.then14:                                        ; preds = %if.end5
  %12 = load ptr, ptr @__pyx_f, align 16, !dbg !10943, !tbaa !1461
  store ptr %12, ptr %__pyx_filename, align 8, !dbg !10943, !tbaa !1461
  %13 = load ptr, ptr %__pyx_filename, align 8, !dbg !10943, !tbaa !1461
  store i32 125, ptr %__pyx_lineno, align 4, !dbg !10943, !tbaa !1557
  %14 = load i32, ptr %__pyx_lineno, align 4, !dbg !10943, !tbaa !1557
  store i32 5093, ptr %__pyx_clineno, align 4, !dbg !10943, !tbaa !1557
  %15 = load i32, ptr %__pyx_clineno, align 4, !dbg !10943, !tbaa !1557
  br label %__pyx_L7_error, !dbg !10946

if.end15:                                         ; preds = %if.end5
  %16 = load ptr, ptr %__pyx_t_5, align 8, !dbg !10947, !tbaa !1461
  call void @Py_DECREF(ptr noundef %16), !dbg !10947
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !10948, !tbaa !1461
  %17 = load i32, ptr %__pyx_t_1, align 4, !dbg !10949, !tbaa !1557
  store i32 %17, ptr %__pyx_v_decref_ok, align 4, !dbg !10950, !tbaa !1557
  %18 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10951, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %18), !dbg !10951
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !10952, !tbaa !1461
  %19 = load ptr, ptr %__pyx_t_3, align 8, !dbg !10953, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %19), !dbg !10953
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !10954, !tbaa !1461
  %20 = load ptr, ptr %__pyx_t_4, align 8, !dbg !10955, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %20), !dbg !10955
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !10956, !tbaa !1461
  br label %__pyx_L12_try_end, !dbg !10957

__pyx_L7_error:                                   ; preds = %if.then14
  tail call void @llvm.dbg.label(metadata !10850), !dbg !10958
  %21 = load ptr, ptr %__pyx_t_5, align 8, !dbg !10959, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %21), !dbg !10959
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !10960, !tbaa !1461
  %22 = load i32, ptr %__pyx_clineno, align 4, !dbg !10961, !tbaa !1557
  %23 = load i32, ptr %__pyx_lineno, align 4, !dbg !10963, !tbaa !1557
  %24 = load ptr, ptr %__pyx_filename, align 8, !dbg !10964, !tbaa !1461
  call void @__Pyx_AddTraceback(ptr noundef @.str.73, i32 noundef %22, i32 noundef %23, ptr noundef %24), !dbg !10965
  %25 = load ptr, ptr %__pyx_tstate, align 8, !dbg !10966, !tbaa !1461
  %call16 = call i32 @__Pyx__GetException(ptr noundef %25, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_6, ptr noundef %__pyx_t_7), !dbg !10966
  %cmp17 = icmp slt i32 %call16, 0, !dbg !10968
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !10969

if.then19:                                        ; preds = %__pyx_L7_error
  %26 = load ptr, ptr @__pyx_f, align 16, !dbg !10970, !tbaa !1461
  store ptr %26, ptr %__pyx_filename, align 8, !dbg !10970, !tbaa !1461
  %27 = load ptr, ptr %__pyx_filename, align 8, !dbg !10970, !tbaa !1461
  store i32 130, ptr %__pyx_lineno, align 4, !dbg !10970, !tbaa !1557
  %28 = load i32, ptr %__pyx_lineno, align 4, !dbg !10970, !tbaa !1557
  store i32 5121, ptr %__pyx_clineno, align 4, !dbg !10970, !tbaa !1557
  %29 = load i32, ptr %__pyx_clineno, align 4, !dbg !10970, !tbaa !1557
  br label %__pyx_L9_except_error, !dbg !10973

if.end20:                                         ; preds = %__pyx_L7_error
  %30 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !10974, !tbaa !1461
  %filename = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %30, i32 0, i32 3, !dbg !10975
  %31 = load ptr, ptr %filename, align 8, !dbg !10975, !tbaa !2905
  store ptr %31, ptr %__pyx_t_8, align 8, !dbg !10976, !tbaa !1461
  %32 = load ptr, ptr %__pyx_t_8, align 8, !dbg !10977, !tbaa !1461
  call void @Py_INCREF(ptr noundef %32), !dbg !10977
  %33 = load ptr, ptr %__pyx_t_8, align 8, !dbg !10978, !tbaa !1461
  %34 = load ptr, ptr %__pyx_v_ctx.addr, align 8, !dbg !10979, !tbaa !1461
  %start = getelementptr inbounds %struct.__pyx_obj_6Cython_7Runtime_8refnanny_Context, ptr %34, i32 0, i32 6, !dbg !10980
  %35 = load i64, ptr %start, align 8, !dbg !10980, !tbaa !2912
  call void @__pyx_f_6Cython_7Runtime_8refnanny_report_unraisable(ptr noundef %33, i64 noundef %35, ptr noundef null), !dbg !10981
  %call21 = call ptr @PyErr_Occurred(), !dbg !10982
  %tobool22 = icmp ne ptr %call21, null, !dbg !10982
  %lnot23 = xor i1 %tobool22, true, !dbg !10982
  %lnot25 = xor i1 %lnot23, true, !dbg !10982
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !10982
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !10982
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0), !dbg !10982
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !10982
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !10984

if.then30:                                        ; preds = %if.end20
  %36 = load ptr, ptr @__pyx_f, align 16, !dbg !10985, !tbaa !1461
  store ptr %36, ptr %__pyx_filename, align 8, !dbg !10985, !tbaa !1461
  %37 = load ptr, ptr %__pyx_filename, align 8, !dbg !10985, !tbaa !1461
  store i32 131, ptr %__pyx_lineno, align 4, !dbg !10985, !tbaa !1557
  %38 = load i32, ptr %__pyx_lineno, align 4, !dbg !10985, !tbaa !1557
  store i32 5135, ptr %__pyx_clineno, align 4, !dbg !10985, !tbaa !1557
  %39 = load i32, ptr %__pyx_clineno, align 4, !dbg !10985, !tbaa !1557
  br label %__pyx_L9_except_error, !dbg !10988

if.end31:                                         ; preds = %if.end20
  %40 = load ptr, ptr %__pyx_t_8, align 8, !dbg !10989, !tbaa !1461
  call void @Py_DECREF(ptr noundef %40), !dbg !10989
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !10990, !tbaa !1461
  %41 = load ptr, ptr %__pyx_t_5, align 8, !dbg !10991, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %41), !dbg !10991
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !10992, !tbaa !1461
  %42 = load ptr, ptr %__pyx_t_6, align 8, !dbg !10993, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %42), !dbg !10993
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !10994, !tbaa !1461
  %43 = load ptr, ptr %__pyx_t_7, align 8, !dbg !10995, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %43), !dbg !10995
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !10996, !tbaa !1461
  br label %__pyx_L8_exception_handled, !dbg !10997

__pyx_L9_except_error:                            ; preds = %if.then30, %if.then19
  tail call void @llvm.dbg.label(metadata !10851), !dbg !10998
  %44 = load ptr, ptr %__pyx_tstate, align 8, !dbg !10999, !tbaa !1461
  %45 = load ptr, ptr %__pyx_t_2, align 8, !dbg !10999, !tbaa !1461
  %46 = load ptr, ptr %__pyx_t_3, align 8, !dbg !10999, !tbaa !1461
  %47 = load ptr, ptr %__pyx_t_4, align 8, !dbg !10999, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %44, ptr noundef %45, ptr noundef %46, ptr noundef %47), !dbg !10999
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11000

__pyx_L8_exception_handled:                       ; preds = %if.end31
  tail call void @llvm.dbg.label(metadata !10852), !dbg !11001
  %48 = load ptr, ptr %__pyx_tstate, align 8, !dbg !11002, !tbaa !1461
  %49 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11002, !tbaa !1461
  %50 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11002, !tbaa !1461
  %51 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11002, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %48, ptr noundef %49, ptr noundef %50, ptr noundef %51), !dbg !11002
  br label %__pyx_L12_try_end, !dbg !11002

__pyx_L12_try_end:                                ; preds = %__pyx_L8_exception_handled, %if.end15
  tail call void @llvm.dbg.label(metadata !10853), !dbg !11003
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11004
  br label %cleanup, !dbg !11004

cleanup:                                          ; preds = %__pyx_L9_except_error, %__pyx_L12_try_end
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !11004
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup48 [
    i32 0, label %cleanup.cont
    i32 7, label %__pyx_L5_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %52 = load ptr, ptr %__pyx_v_type, align 8, !dbg !11005, !tbaa !1461
  %53 = load ptr, ptr %__pyx_v_value, align 8, !dbg !11007, !tbaa !1461
  %54 = load ptr, ptr %__pyx_v_tb, align 8, !dbg !11008, !tbaa !1461
  call void @PyErr_Restore(ptr noundef %52, ptr noundef %53, ptr noundef %54), !dbg !11009
  %55 = load i32, ptr %__pyx_v_decref_ok, align 4, !dbg !11010, !tbaa !1557
  store i32 %55, ptr %__pyx_r, align 4, !dbg !11011, !tbaa !1557
  br label %__pyx_L0, !dbg !11012

__pyx_L5_error:                                   ; preds = %cleanup
  tail call void @llvm.dbg.label(metadata !10854), !dbg !11013
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate32) #10, !dbg !11014
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate32, metadata !10856, metadata !DIExpression()), !dbg !11014
  %call33 = call ptr @_PyThreadState_UncheckedGet(), !dbg !11015
  store ptr %call33, ptr %__pyx_tstate32, align 8, !dbg !11015, !tbaa !1461
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11016, !tbaa !1461
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11017, !tbaa !1461
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11018, !tbaa !1461
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11019, !tbaa !1461
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11020, !tbaa !1461
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !11021, !tbaa !1461
  %56 = load ptr, ptr %__pyx_t_5, align 8, !dbg !11022, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %56), !dbg !11022
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !11023, !tbaa !1461
  %57 = load ptr, ptr %__pyx_t_6, align 8, !dbg !11024, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %57), !dbg !11024
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !11025, !tbaa !1461
  %58 = load ptr, ptr %__pyx_t_7, align 8, !dbg !11026, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %58), !dbg !11026
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !11027, !tbaa !1461
  %59 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11028, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %59), !dbg !11028
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11029, !tbaa !1461
  %60 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !11030, !tbaa !1461
  call void @__Pyx__ExceptionSwap(ptr noundef %60, ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_10, ptr noundef %__pyx_t_11), !dbg !11030
  %61 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !11032, !tbaa !1461
  %call34 = call i32 @__Pyx__GetException(ptr noundef %61, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_2), !dbg !11032
  %cmp35 = icmp slt i32 %call34, 0, !dbg !11032
  %lnot37 = xor i1 %cmp35, true, !dbg !11032
  %lnot39 = xor i1 %lnot37, true, !dbg !11032
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !11032
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !11032
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 0), !dbg !11032
  %tobool43 = icmp ne i64 %expval42, 0, !dbg !11032
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !11034

if.then44:                                        ; preds = %__pyx_L5_error
  %62 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !11035, !tbaa !1461
  call void @__Pyx_ErrFetchInState(ptr noundef %62, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_2), !dbg !11035
  br label %if.end45, !dbg !11035

if.end45:                                         ; preds = %if.then44, %__pyx_L5_error
  %63 = load ptr, ptr %__pyx_v_type, align 8, !dbg !11036, !tbaa !1461
  %64 = load ptr, ptr %__pyx_v_value, align 8, !dbg !11038, !tbaa !1461
  %65 = load ptr, ptr %__pyx_v_tb, align 8, !dbg !11039, !tbaa !1461
  call void @PyErr_Restore(ptr noundef %63, ptr noundef %64, ptr noundef %65), !dbg !11040
  %66 = load i32, ptr %__pyx_v_decref_ok, align 4, !dbg !11041, !tbaa !1557
  store i32 %66, ptr %__pyx_r, align 4, !dbg !11042, !tbaa !1557
  br label %__pyx_L15_return, !dbg !11043

__pyx_L15_return:                                 ; preds = %if.end45
  tail call void @llvm.dbg.label(metadata !10858), !dbg !11044
  %67 = load ptr, ptr %__pyx_tstate32, align 8, !dbg !11045, !tbaa !1461
  %68 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11045, !tbaa !1461
  %69 = load ptr, ptr %__pyx_t_10, align 8, !dbg !11045, !tbaa !1461
  %70 = load ptr, ptr %__pyx_t_11, align 8, !dbg !11045, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %67, ptr noundef %68, ptr noundef %69, ptr noundef %70), !dbg !11045
  %71 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11048, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %71), !dbg !11048
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11049, !tbaa !1461
  %72 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11050, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %72), !dbg !11050
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11051, !tbaa !1461
  %73 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11052, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %73), !dbg !11052
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11053, !tbaa !1461
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11054, !tbaa !1461
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11055, !tbaa !1461
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !11056, !tbaa !1461
  store i32 2, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate32) #10, !dbg !11057
  %cleanup.dest47 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest47, label %cleanup48 [
    i32 2, label %__pyx_L0
  ]

__pyx_L0:                                         ; preds = %__pyx_L15_return, %cleanup.cont, %if.then
  tail call void @llvm.dbg.label(metadata !10859), !dbg !11058
  %74 = load i32, ptr %__pyx_r, align 4, !dbg !11059, !tbaa !1557
  store i32 %74, ptr %retval, align 4, !dbg !11060
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !11060

cleanup48:                                        ; preds = %__pyx_L0, %__pyx_L15_return, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_decref_ok) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_tb) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_value) #10, !dbg !11061
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_type) #10, !dbg !11061
  %75 = load i32, ptr %retval, align 4, !dbg !11061
  ret i32 %75, !dbg !11061
}

declare !dbg !11062 void @PyErr_Fetch(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx__ExceptionSave(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !11065 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %exc_info = alloca ptr, align 8
  %exc_value = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !11069, metadata !DIExpression()), !dbg !11075
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !11070, metadata !DIExpression()), !dbg !11076
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !11071, metadata !DIExpression()), !dbg !11077
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !11072, metadata !DIExpression()), !dbg !11078
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_info) #10, !dbg !11079
  tail call void @llvm.dbg.declare(metadata ptr %exc_info, metadata !11073, metadata !DIExpression()), !dbg !11080
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !11081, !tbaa !1461
  %call = call ptr @__Pyx_PyErr_GetTopmostException(ptr noundef %0), !dbg !11082
  store ptr %call, ptr %exc_info, align 8, !dbg !11080, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_value) #10, !dbg !11083
  tail call void @llvm.dbg.declare(metadata ptr %exc_value, metadata !11074, metadata !DIExpression()), !dbg !11084
  %1 = load ptr, ptr %exc_info, align 8, !dbg !11085, !tbaa !1461
  %exc_value1 = getelementptr inbounds %struct._err_stackitem, ptr %1, i32 0, i32 0, !dbg !11086
  %2 = load ptr, ptr %exc_value1, align 8, !dbg !11086, !tbaa !11087
  store ptr %2, ptr %exc_value, align 8, !dbg !11084, !tbaa !1461
  %3 = load ptr, ptr %exc_value, align 8, !dbg !11088, !tbaa !1461
  %cmp = icmp eq ptr %3, null, !dbg !11090
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11091

lor.lhs.false:                                    ; preds = %entry
  %4 = load ptr, ptr %exc_value, align 8, !dbg !11092, !tbaa !1461
  %cmp2 = icmp eq ptr %4, @_Py_NoneStruct, !dbg !11093
  br i1 %cmp2, label %if.then, label %if.else, !dbg !11094

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load ptr, ptr %value.addr, align 8, !dbg !11095, !tbaa !1461
  store ptr null, ptr %5, align 8, !dbg !11097, !tbaa !1461
  %6 = load ptr, ptr %type.addr, align 8, !dbg !11098, !tbaa !1461
  store ptr null, ptr %6, align 8, !dbg !11099, !tbaa !1461
  %7 = load ptr, ptr %tb.addr, align 8, !dbg !11100, !tbaa !1461
  store ptr null, ptr %7, align 8, !dbg !11101, !tbaa !1461
  br label %if.end, !dbg !11102

if.else:                                          ; preds = %lor.lhs.false
  %8 = load ptr, ptr %exc_value, align 8, !dbg !11103, !tbaa !1461
  %9 = load ptr, ptr %value.addr, align 8, !dbg !11105, !tbaa !1461
  store ptr %8, ptr %9, align 8, !dbg !11106, !tbaa !1461
  %10 = load ptr, ptr %value.addr, align 8, !dbg !11107, !tbaa !1461
  %11 = load ptr, ptr %10, align 8, !dbg !11107, !tbaa !1461
  call void @Py_INCREF(ptr noundef %11), !dbg !11107
  %12 = load ptr, ptr %exc_value, align 8, !dbg !11108, !tbaa !1461
  %call3 = call ptr @Py_TYPE(ptr noundef %12), !dbg !11108
  %13 = load ptr, ptr %type.addr, align 8, !dbg !11109, !tbaa !1461
  store ptr %call3, ptr %13, align 8, !dbg !11110, !tbaa !1461
  %14 = load ptr, ptr %type.addr, align 8, !dbg !11111, !tbaa !1461
  %15 = load ptr, ptr %14, align 8, !dbg !11111, !tbaa !1461
  call void @Py_INCREF(ptr noundef %15), !dbg !11111
  %16 = load ptr, ptr %exc_value, align 8, !dbg !11112, !tbaa !1461
  %call4 = call ptr @PyException_GetTraceback(ptr noundef %16), !dbg !11113
  %17 = load ptr, ptr %tb.addr, align 8, !dbg !11114, !tbaa !1461
  store ptr %call4, ptr %17, align 8, !dbg !11115, !tbaa !1461
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_value) #10, !dbg !11116
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_info) #10, !dbg !11116
  ret void, !dbg !11116
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx__GetException(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #0 !dbg !11117 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %local_type = alloca ptr, align 8
  %local_value = alloca ptr, align 8
  %local_tb = alloca ptr, align 8
  %tmp_type = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  %exc_info = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !11121, metadata !DIExpression()), !dbg !11134
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !11122, metadata !DIExpression()), !dbg !11135
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !11123, metadata !DIExpression()), !dbg !11136
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !11124, metadata !DIExpression()), !dbg !11137
  call void @llvm.lifetime.start.p0(i64 8, ptr %local_type) #10, !dbg !11138
  tail call void @llvm.dbg.declare(metadata ptr %local_type, metadata !11125, metadata !DIExpression()), !dbg !11139
  store ptr null, ptr %local_type, align 8, !dbg !11139, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %local_value) #10, !dbg !11138
  tail call void @llvm.dbg.declare(metadata ptr %local_value, metadata !11126, metadata !DIExpression()), !dbg !11140
  call void @llvm.lifetime.start.p0(i64 8, ptr %local_tb) #10, !dbg !11138
  tail call void @llvm.dbg.declare(metadata ptr %local_tb, metadata !11127, metadata !DIExpression()), !dbg !11141
  store ptr null, ptr %local_tb, align 8, !dbg !11141, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_type) #10, !dbg !11142
  tail call void @llvm.dbg.declare(metadata ptr %tmp_type, metadata !11128, metadata !DIExpression()), !dbg !11143
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #10, !dbg !11142
  tail call void @llvm.dbg.declare(metadata ptr %tmp_value, metadata !11129, metadata !DIExpression()), !dbg !11144
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #10, !dbg !11142
  tail call void @llvm.dbg.declare(metadata ptr %tmp_tb, metadata !11130, metadata !DIExpression()), !dbg !11145
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !11146, !tbaa !1461
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !11147
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !11147, !tbaa !2655
  store ptr %1, ptr %local_type, align 8, !dbg !11148, !tbaa !1461
  %2 = load ptr, ptr %tstate.addr, align 8, !dbg !11149, !tbaa !1461
  %curexc_value = getelementptr inbounds %struct._ts, ptr %2, i32 0, i32 16, !dbg !11150
  %3 = load ptr, ptr %curexc_value, align 8, !dbg !11150, !tbaa !4395
  store ptr %3, ptr %local_value, align 8, !dbg !11151, !tbaa !1461
  %4 = load ptr, ptr %tstate.addr, align 8, !dbg !11152, !tbaa !1461
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %4, i32 0, i32 17, !dbg !11153
  %5 = load ptr, ptr %curexc_traceback, align 8, !dbg !11153, !tbaa !4399
  store ptr %5, ptr %local_tb, align 8, !dbg !11154, !tbaa !1461
  %6 = load ptr, ptr %tstate.addr, align 8, !dbg !11155, !tbaa !1461
  %curexc_type1 = getelementptr inbounds %struct._ts, ptr %6, i32 0, i32 15, !dbg !11156
  store ptr null, ptr %curexc_type1, align 8, !dbg !11157, !tbaa !2655
  %7 = load ptr, ptr %tstate.addr, align 8, !dbg !11158, !tbaa !1461
  %curexc_value2 = getelementptr inbounds %struct._ts, ptr %7, i32 0, i32 16, !dbg !11159
  store ptr null, ptr %curexc_value2, align 8, !dbg !11160, !tbaa !4395
  %8 = load ptr, ptr %tstate.addr, align 8, !dbg !11161, !tbaa !1461
  %curexc_traceback3 = getelementptr inbounds %struct._ts, ptr %8, i32 0, i32 17, !dbg !11162
  store ptr null, ptr %curexc_traceback3, align 8, !dbg !11163, !tbaa !4399
  call void @PyErr_NormalizeException(ptr noundef %local_type, ptr noundef %local_value, ptr noundef %local_tb), !dbg !11164
  %9 = load ptr, ptr %tstate.addr, align 8, !dbg !11165, !tbaa !1461
  %curexc_type4 = getelementptr inbounds %struct._ts, ptr %9, i32 0, i32 15, !dbg !11165
  %10 = load ptr, ptr %curexc_type4, align 8, !dbg !11165, !tbaa !2655
  %tobool = icmp ne ptr %10, null, !dbg !11165
  %lnot = xor i1 %tobool, true, !dbg !11165
  %lnot5 = xor i1 %lnot, true, !dbg !11165
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11165
  %conv = sext i32 %lnot.ext to i64, !dbg !11165
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11165
  %tobool6 = icmp ne i64 %expval, 0, !dbg !11165
  br i1 %tobool6, label %if.then, label %if.end, !dbg !11167

if.then:                                          ; preds = %entry
  br label %bad, !dbg !11168

if.end:                                           ; preds = %entry
  %11 = load ptr, ptr %local_tb, align 8, !dbg !11169, !tbaa !1461
  %tobool7 = icmp ne ptr %11, null, !dbg !11169
  br i1 %tobool7, label %if.then8, label %if.end19, !dbg !11171

if.then8:                                         ; preds = %if.end
  %12 = load ptr, ptr %local_value, align 8, !dbg !11172, !tbaa !1461
  %13 = load ptr, ptr %local_tb, align 8, !dbg !11172, !tbaa !1461
  %call = call i32 @PyException_SetTraceback(ptr noundef %12, ptr noundef %13), !dbg !11172
  %cmp = icmp slt i32 %call, 0, !dbg !11172
  %lnot10 = xor i1 %cmp, true, !dbg !11172
  %lnot12 = xor i1 %lnot10, true, !dbg !11172
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !11172
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !11172
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !11172
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !11172
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !11175

if.then17:                                        ; preds = %if.then8
  br label %bad, !dbg !11176

if.end18:                                         ; preds = %if.then8
  br label %if.end19, !dbg !11177

if.end19:                                         ; preds = %if.end18, %if.end
  %14 = load ptr, ptr %local_tb, align 8, !dbg !11178, !tbaa !1461
  call void @Py_XINCREF(ptr noundef %14), !dbg !11178
  %15 = load ptr, ptr %local_type, align 8, !dbg !11179, !tbaa !1461
  call void @Py_XINCREF(ptr noundef %15), !dbg !11179
  %16 = load ptr, ptr %local_value, align 8, !dbg !11180, !tbaa !1461
  call void @Py_XINCREF(ptr noundef %16), !dbg !11180
  %17 = load ptr, ptr %local_type, align 8, !dbg !11181, !tbaa !1461
  %18 = load ptr, ptr %type.addr, align 8, !dbg !11182, !tbaa !1461
  store ptr %17, ptr %18, align 8, !dbg !11183, !tbaa !1461
  %19 = load ptr, ptr %local_value, align 8, !dbg !11184, !tbaa !1461
  %20 = load ptr, ptr %value.addr, align 8, !dbg !11185, !tbaa !1461
  store ptr %19, ptr %20, align 8, !dbg !11186, !tbaa !1461
  %21 = load ptr, ptr %local_tb, align 8, !dbg !11187, !tbaa !1461
  %22 = load ptr, ptr %tb.addr, align 8, !dbg !11188, !tbaa !1461
  store ptr %21, ptr %22, align 8, !dbg !11189, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_info) #10, !dbg !11190
  tail call void @llvm.dbg.declare(metadata ptr %exc_info, metadata !11131, metadata !DIExpression()), !dbg !11191
  %23 = load ptr, ptr %tstate.addr, align 8, !dbg !11192, !tbaa !1461
  %exc_info20 = getelementptr inbounds %struct._ts, ptr %23, i32 0, i32 18, !dbg !11193
  %24 = load ptr, ptr %exc_info20, align 8, !dbg !11193, !tbaa !11194
  store ptr %24, ptr %exc_info, align 8, !dbg !11191, !tbaa !1461
  %25 = load ptr, ptr %exc_info, align 8, !dbg !11195, !tbaa !1461
  %exc_value = getelementptr inbounds %struct._err_stackitem, ptr %25, i32 0, i32 0, !dbg !11196
  %26 = load ptr, ptr %exc_value, align 8, !dbg !11196, !tbaa !11087
  store ptr %26, ptr %tmp_value, align 8, !dbg !11197, !tbaa !1461
  %27 = load ptr, ptr %local_value, align 8, !dbg !11198, !tbaa !1461
  %28 = load ptr, ptr %exc_info, align 8, !dbg !11199, !tbaa !1461
  %exc_value21 = getelementptr inbounds %struct._err_stackitem, ptr %28, i32 0, i32 0, !dbg !11200
  store ptr %27, ptr %exc_value21, align 8, !dbg !11201, !tbaa !11087
  store ptr null, ptr %tmp_type, align 8, !dbg !11202, !tbaa !1461
  store ptr null, ptr %tmp_tb, align 8, !dbg !11203, !tbaa !1461
  %29 = load ptr, ptr %local_type, align 8, !dbg !11204, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %29), !dbg !11204
  %30 = load ptr, ptr %local_tb, align 8, !dbg !11205, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %30), !dbg !11205
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_info) #10, !dbg !11206
  %31 = load ptr, ptr %tmp_type, align 8, !dbg !11207, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %31), !dbg !11207
  %32 = load ptr, ptr %tmp_value, align 8, !dbg !11208, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %32), !dbg !11208
  %33 = load ptr, ptr %tmp_tb, align 8, !dbg !11209, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %33), !dbg !11209
  store i32 0, ptr %retval, align 4, !dbg !11210
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11210

bad:                                              ; preds = %if.then17, %if.then
  tail call void @llvm.dbg.label(metadata !11133), !dbg !11211
  %34 = load ptr, ptr %type.addr, align 8, !dbg !11212, !tbaa !1461
  store ptr null, ptr %34, align 8, !dbg !11213, !tbaa !1461
  %35 = load ptr, ptr %value.addr, align 8, !dbg !11214, !tbaa !1461
  store ptr null, ptr %35, align 8, !dbg !11215, !tbaa !1461
  %36 = load ptr, ptr %tb.addr, align 8, !dbg !11216, !tbaa !1461
  store ptr null, ptr %36, align 8, !dbg !11217, !tbaa !1461
  %37 = load ptr, ptr %local_type, align 8, !dbg !11218, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %37), !dbg !11218
  %38 = load ptr, ptr %local_value, align 8, !dbg !11219, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %38), !dbg !11219
  %39 = load ptr, ptr %local_tb, align 8, !dbg !11220, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %39), !dbg !11220
  store i32 -1, ptr %retval, align 4, !dbg !11221
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11221

cleanup:                                          ; preds = %bad, %if.end19
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #10, !dbg !11222
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #10, !dbg !11222
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_type) #10, !dbg !11222
  call void @llvm.lifetime.end.p0(i64 8, ptr %local_tb) #10, !dbg !11222
  call void @llvm.lifetime.end.p0(i64 8, ptr %local_value) #10, !dbg !11222
  call void @llvm.lifetime.end.p0(i64 8, ptr %local_type) #10, !dbg !11222
  %40 = load i32, ptr %retval, align 4, !dbg !11222
  ret i32 %40, !dbg !11222
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_f_6Cython_7Runtime_8refnanny_report_unraisable(ptr noundef %__pyx_v_filename, i64 noundef %__pyx_v_lineno, ptr noundef %__pyx_optional_args) #0 !dbg !11223 {
entry:
  %__pyx_v_filename.addr = alloca ptr, align 8
  %__pyx_v_lineno.addr = alloca i64, align 8
  %__pyx_optional_args.addr = alloca ptr, align 8
  %__pyx_v_e = alloca ptr, align 8
  %__pyx_v_sys = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_t_12 = alloca ptr, align 8
  %__pyx_t_13 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %__pyx_callargs = alloca [2 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %tmp76 = alloca ptr, align 8
  %__pyx_tstate = alloca ptr, align 8
  store ptr %__pyx_v_filename, ptr %__pyx_v_filename.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_filename.addr, metadata !11228, metadata !DIExpression()), !dbg !11269
  store i64 %__pyx_v_lineno, ptr %__pyx_v_lineno.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_lineno.addr, metadata !11229, metadata !DIExpression()), !dbg !11270
  store ptr %__pyx_optional_args, ptr %__pyx_optional_args.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_optional_args.addr, metadata !11230, metadata !DIExpression()), !dbg !11271
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_e) #10, !dbg !11272
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_e, metadata !11231, metadata !DIExpression()), !dbg !11273
  store ptr @_Py_NoneStruct, ptr %__pyx_v_e, align 8, !dbg !11273, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_sys) #10, !dbg !11274
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_sys, metadata !11232, metadata !DIExpression()), !dbg !11275
  store ptr null, ptr %__pyx_v_sys, align 8, !dbg !11275, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !11276
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !11233, metadata !DIExpression()), !dbg !11277
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !11278
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !11234, metadata !DIExpression()), !dbg !11279
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11279, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !11280
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !11235, metadata !DIExpression()), !dbg !11281
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11281, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !11282
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !11236, metadata !DIExpression()), !dbg !11283
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11283, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !11284
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !11237, metadata !DIExpression()), !dbg !11285
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !11286
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !11238, metadata !DIExpression()), !dbg !11287
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #10, !dbg !11288
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !11239, metadata !DIExpression()), !dbg !11289
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !11290
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !11240, metadata !DIExpression()), !dbg !11291
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11291, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !11292
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_9, metadata !11241, metadata !DIExpression()), !dbg !11293
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11293, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !11294
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_10, metadata !11242, metadata !DIExpression()), !dbg !11295
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11295, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !11296
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_11, metadata !11243, metadata !DIExpression()), !dbg !11297
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !11297, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #10, !dbg !11298
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_12, metadata !11244, metadata !DIExpression()), !dbg !11299
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !11299, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_13) #10, !dbg !11300
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_13, metadata !11245, metadata !DIExpression()), !dbg !11301
  store ptr null, ptr %__pyx_t_13, align 8, !dbg !11301, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !11302
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !11246, metadata !DIExpression()), !dbg !11303
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !11303, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #10, !dbg !11304
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !11247, metadata !DIExpression()), !dbg !11305
  store ptr null, ptr %__pyx_filename, align 8, !dbg !11305, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !11306
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !11248, metadata !DIExpression()), !dbg !11307
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !11307, !tbaa !1557
  %0 = load ptr, ptr %__pyx_optional_args.addr, align 8, !dbg !11308, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !11308
  br i1 %tobool, label %if.then, label %if.end2, !dbg !11310

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__pyx_optional_args.addr, align 8, !dbg !11311, !tbaa !1461
  %__pyx_n = getelementptr inbounds %struct.__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable, ptr %1, i32 0, i32 0, !dbg !11314
  %2 = load i32, ptr %__pyx_n, align 8, !dbg !11314, !tbaa !3261
  %cmp = icmp sgt i32 %2, 0, !dbg !11315
  br i1 %cmp, label %if.then1, label %if.end, !dbg !11316

if.then1:                                         ; preds = %if.then
  %3 = load ptr, ptr %__pyx_optional_args.addr, align 8, !dbg !11317, !tbaa !1461
  %e = getelementptr inbounds %struct.__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable, ptr %3, i32 0, i32 1, !dbg !11319
  %4 = load ptr, ptr %e, align 8, !dbg !11319, !tbaa !3266
  store ptr %4, ptr %__pyx_v_e, align 8, !dbg !11320, !tbaa !1461
  br label %if.end, !dbg !11321

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end2, !dbg !11322

if.end2:                                          ; preds = %if.end, %entry
  %5 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11323, !tbaa !1461
  call void @Py_INCREF(ptr noundef %5), !dbg !11323
  %6 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11324, !tbaa !1461
  %cmp3 = icmp eq ptr %6, @_Py_NoneStruct, !dbg !11325
  %conv = zext i1 %cmp3 to i32, !dbg !11325
  store i32 %conv, ptr %__pyx_t_1, align 4, !dbg !11326, !tbaa !1557
  %7 = load i32, ptr %__pyx_t_1, align 4, !dbg !11327, !tbaa !1557
  %tobool4 = icmp ne i32 %7, 0, !dbg !11327
  br i1 %tobool4, label %if.then5, label %if.end79, !dbg !11328

if.then5:                                         ; preds = %if.end2
  %8 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11329, !tbaa !1461
  %__pyx_n_s_sys = getelementptr inbounds %struct.__pyx_mstate, ptr %8, i32 0, i32 55, !dbg !11329
  %9 = load ptr, ptr %__pyx_n_s_sys, align 8, !dbg !11329, !tbaa !11330
  %call = call ptr @__Pyx_ImportDottedModule(ptr noundef %9, ptr noundef null), !dbg !11331
  store ptr %call, ptr %__pyx_t_2, align 8, !dbg !11332, !tbaa !1461
  %10 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11333, !tbaa !1461
  %tobool6 = icmp ne ptr %10, null, !dbg !11333
  %lnot = xor i1 %tobool6, true, !dbg !11333
  %lnot7 = xor i1 %lnot, true, !dbg !11333
  %lnot8 = xor i1 %lnot7, true, !dbg !11333
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !11333
  %conv9 = sext i32 %lnot.ext to i64, !dbg !11333
  %expval = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !11333
  %tobool10 = icmp ne i64 %expval, 0, !dbg !11333
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !11335

if.then11:                                        ; preds = %if.then5
  %11 = load ptr, ptr @__pyx_f, align 16, !dbg !11336, !tbaa !1461
  store ptr %11, ptr %__pyx_filename, align 8, !dbg !11336, !tbaa !1461
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !11336, !tbaa !1461
  store i32 74, ptr %__pyx_lineno, align 4, !dbg !11336, !tbaa !1557
  %13 = load i32, ptr %__pyx_lineno, align 4, !dbg !11336, !tbaa !1557
  store i32 4284, ptr %__pyx_clineno, align 4, !dbg !11336, !tbaa !1557
  %14 = load i32, ptr %__pyx_clineno, align 4, !dbg !11336, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11339

if.end12:                                         ; preds = %if.then5
  %15 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11340, !tbaa !1461
  store ptr %15, ptr %__pyx_v_sys, align 8, !dbg !11341, !tbaa !1461
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11342, !tbaa !1461
  %16 = load ptr, ptr %__pyx_v_sys, align 8, !dbg !11343, !tbaa !1461
  %17 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11344, !tbaa !1461
  %__pyx_n_s_exc_info = getelementptr inbounds %struct.__pyx_mstate, ptr %17, i32 0, i32 32, !dbg !11344
  %18 = load ptr, ptr %__pyx_n_s_exc_info, align 8, !dbg !11344, !tbaa !11345
  %call13 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %16, ptr noundef %18), !dbg !11346
  store ptr %call13, ptr %__pyx_t_3, align 8, !dbg !11347, !tbaa !1461
  %19 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11348, !tbaa !1461
  %tobool14 = icmp ne ptr %19, null, !dbg !11348
  %lnot15 = xor i1 %tobool14, true, !dbg !11348
  %lnot17 = xor i1 %lnot15, true, !dbg !11348
  %lnot19 = xor i1 %lnot17, true, !dbg !11348
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !11348
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !11348
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0), !dbg !11348
  %tobool23 = icmp ne i64 %expval22, 0, !dbg !11348
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !11350

if.then24:                                        ; preds = %if.end12
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !11351, !tbaa !1461
  store ptr %20, ptr %__pyx_filename, align 8, !dbg !11351, !tbaa !1461
  %21 = load ptr, ptr %__pyx_filename, align 8, !dbg !11351, !tbaa !1461
  store i32 75, ptr %__pyx_lineno, align 4, !dbg !11351, !tbaa !1557
  %22 = load i32, ptr %__pyx_lineno, align 4, !dbg !11351, !tbaa !1557
  store i32 4296, ptr %__pyx_clineno, align 4, !dbg !11351, !tbaa !1557
  %23 = load i32, ptr %__pyx_clineno, align 4, !dbg !11351, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11354

if.end25:                                         ; preds = %if.end12
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11355, !tbaa !1461
  store i32 0, ptr %__pyx_t_5, align 4, !dbg !11356, !tbaa !1557
  %24 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11357, !tbaa !1461
  %call26 = call i32 @Py_IS_TYPE(ptr noundef %24, ptr noundef @PyMethod_Type), !dbg !11357
  %tobool27 = icmp ne i32 %call26, 0, !dbg !11357
  %lnot28 = xor i1 %tobool27, true, !dbg !11357
  %lnot30 = xor i1 %lnot28, true, !dbg !11357
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !11357
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !11357
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 1), !dbg !11357
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !11357
  br i1 %tobool34, label %if.then35, label %if.end46, !dbg !11358

if.then35:                                        ; preds = %if.end25
  %25 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11359, !tbaa !1461
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %25, i32 0, i32 2, !dbg !11359
  %26 = load ptr, ptr %im_self, align 8, !dbg !11359, !tbaa !3531
  store ptr %26, ptr %__pyx_t_4, align 8, !dbg !11360, !tbaa !1461
  %27 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11361, !tbaa !1461
  %tobool36 = icmp ne ptr %27, null, !dbg !11361
  %lnot37 = xor i1 %tobool36, true, !dbg !11361
  %lnot39 = xor i1 %lnot37, true, !dbg !11361
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !11361
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !11361
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 1), !dbg !11361
  %tobool43 = icmp ne i64 %expval42, 0, !dbg !11361
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !11362

if.then44:                                        ; preds = %if.then35
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #10, !dbg !11363
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !11249, metadata !DIExpression()), !dbg !11364
  %28 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11365, !tbaa !1461
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %28, i32 0, i32 1, !dbg !11365
  %29 = load ptr, ptr %im_func, align 8, !dbg !11365, !tbaa !3539
  store ptr %29, ptr %function, align 8, !dbg !11364, !tbaa !1461
  %30 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11366, !tbaa !1461
  call void @Py_INCREF(ptr noundef %30), !dbg !11366
  %31 = load ptr, ptr %function, align 8, !dbg !11367, !tbaa !1461
  call void @Py_INCREF(ptr noundef %31), !dbg !11367
  br label %do.body, !dbg !11368

do.body:                                          ; preds = %if.then44
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #10, !dbg !11369
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !11257, metadata !DIExpression()), !dbg !11369
  %32 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11369, !tbaa !1461
  store ptr %32, ptr %tmp, align 8, !dbg !11369, !tbaa !1461
  %33 = load ptr, ptr %function, align 8, !dbg !11369, !tbaa !1461
  store ptr %33, ptr %__pyx_t_3, align 8, !dbg !11369, !tbaa !1461
  %34 = load ptr, ptr %tmp, align 8, !dbg !11369, !tbaa !1461
  call void @Py_DECREF(ptr noundef %34), !dbg !11369
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #10, !dbg !11368
  br label %do.cond, !dbg !11369

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11369

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %__pyx_t_5, align 4, !dbg !11370, !tbaa !1557
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #10, !dbg !11371
  br label %if.end45, !dbg !11372

if.end45:                                         ; preds = %do.end, %if.then35
  br label %if.end46, !dbg !11373

if.end46:                                         ; preds = %if.end45, %if.end25
  call void @llvm.lifetime.start.p0(i64 16, ptr %__pyx_callargs) #10, !dbg !11374
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_callargs, metadata !11259, metadata !DIExpression()), !dbg !11375
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !11376
  %35 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11377, !tbaa !1461
  store ptr %35, ptr %arrayinit.begin, align 8, !dbg !11376, !tbaa !1461
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !11376
  store ptr null, ptr %arrayinit.element, align 8, !dbg !11376, !tbaa !1461
  %36 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11378, !tbaa !1461
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %__pyx_callargs, i64 0, i64 0, !dbg !11378
  %add.ptr = getelementptr ptr, ptr %arraydecay, i64 1, !dbg !11378
  %37 = load i32, ptr %__pyx_t_5, align 4, !dbg !11378, !tbaa !1557
  %idx.ext = sext i32 %37 to i64, !dbg !11378
  %idx.neg = sub i64 0, %idx.ext, !dbg !11378
  %add.ptr47 = getelementptr ptr, ptr %add.ptr, i64 %idx.neg, !dbg !11378
  %38 = load i32, ptr %__pyx_t_5, align 4, !dbg !11378, !tbaa !1557
  %add = add i32 0, %38, !dbg !11378
  %conv48 = sext i32 %add to i64, !dbg !11378
  %call49 = call ptr @__Pyx_PyObject_FastCallDict(ptr noundef %36, ptr noundef %add.ptr47, i64 noundef %conv48, ptr noundef null), !dbg !11378
  store ptr %call49, ptr %__pyx_t_2, align 8, !dbg !11379, !tbaa !1461
  %39 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11380, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %39), !dbg !11380
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11381, !tbaa !1461
  %40 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11382, !tbaa !1461
  %tobool50 = icmp ne ptr %40, null, !dbg !11382
  %lnot51 = xor i1 %tobool50, true, !dbg !11382
  %lnot53 = xor i1 %lnot51, true, !dbg !11382
  %lnot55 = xor i1 %lnot53, true, !dbg !11382
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !11382
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !11382
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0), !dbg !11382
  %tobool59 = icmp ne i64 %expval58, 0, !dbg !11382
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !11384

if.then60:                                        ; preds = %if.end46
  %41 = load ptr, ptr @__pyx_f, align 16, !dbg !11385, !tbaa !1461
  store ptr %41, ptr %__pyx_filename, align 8, !dbg !11385, !tbaa !1461
  %42 = load ptr, ptr %__pyx_filename, align 8, !dbg !11385, !tbaa !1461
  store i32 75, ptr %__pyx_lineno, align 4, !dbg !11385, !tbaa !1557
  %43 = load i32, ptr %__pyx_lineno, align 4, !dbg !11385, !tbaa !1557
  store i32 4316, ptr %__pyx_clineno, align 4, !dbg !11385, !tbaa !1557
  %44 = load i32, ptr %__pyx_clineno, align 4, !dbg !11385, !tbaa !1557
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11388

if.end61:                                         ; preds = %if.end46
  %45 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11389, !tbaa !1461
  call void @Py_DECREF(ptr noundef %45), !dbg !11389
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11390, !tbaa !1461
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11391
  br label %cleanup, !dbg !11391

cleanup:                                          ; preds = %if.then60, %if.end61
  call void @llvm.lifetime.end.p0(i64 16, ptr %__pyx_callargs) #10, !dbg !11391
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L4_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %46 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11392, !tbaa !1461
  %call62 = call ptr @__Pyx_GetItemInt_Fast(ptr noundef %46, i64 noundef 1, i32 noundef 0, i32 noundef 0, i32 noundef 1), !dbg !11392
  store ptr %call62, ptr %__pyx_t_3, align 8, !dbg !11393, !tbaa !1461
  %47 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11394, !tbaa !1461
  %tobool63 = icmp ne ptr %47, null, !dbg !11394
  %lnot64 = xor i1 %tobool63, true, !dbg !11394
  %lnot66 = xor i1 %lnot64, true, !dbg !11394
  %lnot68 = xor i1 %lnot66, true, !dbg !11394
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !11394
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !11394
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0), !dbg !11394
  %tobool72 = icmp ne i64 %expval71, 0, !dbg !11394
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !11396

if.then73:                                        ; preds = %cleanup.cont
  %48 = load ptr, ptr @__pyx_f, align 16, !dbg !11397, !tbaa !1461
  store ptr %48, ptr %__pyx_filename, align 8, !dbg !11397, !tbaa !1461
  %49 = load ptr, ptr %__pyx_filename, align 8, !dbg !11397, !tbaa !1461
  store i32 75, ptr %__pyx_lineno, align 4, !dbg !11397, !tbaa !1557
  %50 = load i32, ptr %__pyx_lineno, align 4, !dbg !11397, !tbaa !1557
  store i32 4320, ptr %__pyx_clineno, align 4, !dbg !11397, !tbaa !1557
  %51 = load i32, ptr %__pyx_clineno, align 4, !dbg !11397, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11400

if.end74:                                         ; preds = %cleanup.cont
  %52 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11401, !tbaa !1461
  call void @Py_DECREF(ptr noundef %52), !dbg !11401
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11402, !tbaa !1461
  br label %do.body75, !dbg !11403

do.body75:                                        ; preds = %if.end74
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp76) #10, !dbg !11404
  tail call void @llvm.dbg.declare(metadata ptr %tmp76, metadata !11261, metadata !DIExpression()), !dbg !11404
  %53 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11404, !tbaa !1461
  store ptr %53, ptr %tmp76, align 8, !dbg !11404, !tbaa !1461
  %54 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11404, !tbaa !1461
  store ptr %54, ptr %__pyx_v_e, align 8, !dbg !11404, !tbaa !1461
  %55 = load ptr, ptr %tmp76, align 8, !dbg !11404, !tbaa !1461
  call void @Py_DECREF(ptr noundef %55), !dbg !11404
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp76) #10, !dbg !11403
  br label %do.cond77, !dbg !11404

do.cond77:                                        ; preds = %do.body75
  br label %do.end78, !dbg !11404

do.end78:                                         ; preds = %do.cond77
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11405, !tbaa !1461
  br label %if.end79, !dbg !11406

if.end79:                                         ; preds = %do.end78, %if.end2
  %call80 = call ptr @PyTuple_New(i64 noundef 6), !dbg !11407
  store ptr %call80, ptr %__pyx_t_3, align 8, !dbg !11408, !tbaa !1461
  %56 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11409, !tbaa !1461
  %tobool81 = icmp ne ptr %56, null, !dbg !11409
  %lnot82 = xor i1 %tobool81, true, !dbg !11409
  %lnot84 = xor i1 %lnot82, true, !dbg !11409
  %lnot86 = xor i1 %lnot84, true, !dbg !11409
  %lnot.ext87 = zext i1 %lnot86 to i32, !dbg !11409
  %conv88 = sext i32 %lnot.ext87 to i64, !dbg !11409
  %expval89 = call i64 @llvm.expect.i64(i64 %conv88, i64 0), !dbg !11409
  %tobool90 = icmp ne i64 %expval89, 0, !dbg !11409
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !11411

if.then91:                                        ; preds = %if.end79
  %57 = load ptr, ptr @__pyx_f, align 16, !dbg !11412, !tbaa !1461
  store ptr %57, ptr %__pyx_filename, align 8, !dbg !11412, !tbaa !1461
  %58 = load ptr, ptr %__pyx_filename, align 8, !dbg !11412, !tbaa !1461
  store i32 76, ptr %__pyx_lineno, align 4, !dbg !11412, !tbaa !1557
  %59 = load i32, ptr %__pyx_lineno, align 4, !dbg !11412, !tbaa !1557
  store i32 4342, ptr %__pyx_clineno, align 4, !dbg !11412, !tbaa !1557
  %60 = load i32, ptr %__pyx_clineno, align 4, !dbg !11412, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11415

if.end92:                                         ; preds = %if.end79
  store i64 0, ptr %__pyx_t_6, align 8, !dbg !11416, !tbaa !1836
  store i32 127, ptr %__pyx_t_7, align 4, !dbg !11417, !tbaa !1557
  %61 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11418, !tbaa !1461
  %__pyx_kp_u_refnanny_raised_an_exception_fro = getelementptr inbounds %struct.__pyx_mstate, ptr %61, i32 0, i32 52, !dbg !11418
  %62 = load ptr, ptr %__pyx_kp_u_refnanny_raised_an_exception_fro, align 8, !dbg !11418, !tbaa !11419
  call void @Py_INCREF(ptr noundef %62), !dbg !11418
  %63 = load i64, ptr %__pyx_t_6, align 8, !dbg !11420, !tbaa !1836
  %add93 = add i64 %63, 34, !dbg !11420
  store i64 %add93, ptr %__pyx_t_6, align 8, !dbg !11420, !tbaa !1836
  %64 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11421, !tbaa !1461
  %65 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11421, !tbaa !1461
  %__pyx_kp_u_refnanny_raised_an_exception_fro94 = getelementptr inbounds %struct.__pyx_mstate, ptr %65, i32 0, i32 52, !dbg !11421
  %66 = load ptr, ptr %__pyx_kp_u_refnanny_raised_an_exception_fro94, align 8, !dbg !11421, !tbaa !11419
  call void @PyTuple_SET_ITEM(ptr noundef %64, i64 noundef 0, ptr noundef %66), !dbg !11421
  %67 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  %call95 = call i32 @Py_IS_TYPE(ptr noundef %67, ptr noundef @PyUnicode_Type), !dbg !11422
  %tobool96 = icmp ne i32 %call95, 0, !dbg !11422
  %lnot97 = xor i1 %tobool96, true, !dbg !11422
  %lnot99 = xor i1 %lnot97, true, !dbg !11422
  %lnot.ext100 = zext i1 %lnot99 to i32, !dbg !11422
  %conv101 = sext i32 %lnot.ext100 to i64, !dbg !11422
  %expval102 = call i64 @llvm.expect.i64(i64 %conv101, i64 1), !dbg !11422
  %tobool103 = icmp ne i64 %expval102, 0, !dbg !11422
  br i1 %tobool103, label %cond.true, label %cond.false, !dbg !11422

cond.true:                                        ; preds = %if.end92
  %68 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  call void @Py_INCREF(ptr noundef %68), !dbg !11422
  %69 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  br label %cond.end131, !dbg !11422

cond.false:                                       ; preds = %if.end92
  %70 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  %call104 = call i32 @Py_IS_TYPE(ptr noundef %70, ptr noundef @PyLong_Type), !dbg !11422
  %tobool105 = icmp ne i32 %call104, 0, !dbg !11422
  %lnot106 = xor i1 %tobool105, true, !dbg !11422
  %lnot108 = xor i1 %lnot106, true, !dbg !11422
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !11422
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !11422
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 1), !dbg !11422
  %tobool112 = icmp ne i64 %expval111, 0, !dbg !11422
  br i1 %tobool112, label %cond.true113, label %cond.false115, !dbg !11422

cond.true113:                                     ; preds = %cond.false
  %71 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 9), align 8, !dbg !11422, !tbaa !3569
  %72 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  %call114 = call ptr %71(ptr noundef %72), !dbg !11422
  br label %cond.end129, !dbg !11422

cond.false115:                                    ; preds = %cond.false
  %73 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  %call116 = call i32 @Py_IS_TYPE(ptr noundef %73, ptr noundef @PyFloat_Type), !dbg !11422
  %tobool117 = icmp ne i32 %call116, 0, !dbg !11422
  %lnot118 = xor i1 %tobool117, true, !dbg !11422
  %lnot120 = xor i1 %lnot118, true, !dbg !11422
  %lnot.ext121 = zext i1 %lnot120 to i32, !dbg !11422
  %conv122 = sext i32 %lnot.ext121 to i64, !dbg !11422
  %expval123 = call i64 @llvm.expect.i64(i64 %conv122, i64 1), !dbg !11422
  %tobool124 = icmp ne i64 %expval123, 0, !dbg !11422
  br i1 %tobool124, label %cond.true125, label %cond.false127, !dbg !11422

cond.true125:                                     ; preds = %cond.false115
  %74 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFloat_Type, i32 0, i32 9), align 8, !dbg !11422, !tbaa !3569
  %75 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  %call126 = call ptr %74(ptr noundef %75), !dbg !11422
  br label %cond.end, !dbg !11422

cond.false127:                                    ; preds = %cond.false115
  %76 = load ptr, ptr %__pyx_v_filename.addr, align 8, !dbg !11422, !tbaa !1461
  %77 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11422, !tbaa !1461
  %__pyx_empty_unicode = getelementptr inbounds %struct.__pyx_mstate, ptr %77, i32 0, i32 5, !dbg !11422
  %78 = load ptr, ptr %__pyx_empty_unicode, align 8, !dbg !11422, !tbaa !1676
  %call128 = call ptr @PyObject_Format(ptr noundef %76, ptr noundef %78), !dbg !11422
  br label %cond.end, !dbg !11422

cond.end:                                         ; preds = %cond.false127, %cond.true125
  %cond = phi ptr [ %call126, %cond.true125 ], [ %call128, %cond.false127 ], !dbg !11422
  br label %cond.end129, !dbg !11422

cond.end129:                                      ; preds = %cond.end, %cond.true113
  %cond130 = phi ptr [ %call114, %cond.true113 ], [ %cond, %cond.end ], !dbg !11422
  br label %cond.end131, !dbg !11422

cond.end131:                                      ; preds = %cond.end129, %cond.true
  %cond132 = phi ptr [ %69, %cond.true ], [ %cond130, %cond.end129 ], !dbg !11422
  store ptr %cond132, ptr %__pyx_t_2, align 8, !dbg !11423, !tbaa !1461
  %79 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11424, !tbaa !1461
  %tobool133 = icmp ne ptr %79, null, !dbg !11424
  %lnot134 = xor i1 %tobool133, true, !dbg !11424
  %lnot136 = xor i1 %lnot134, true, !dbg !11424
  %lnot138 = xor i1 %lnot136, true, !dbg !11424
  %lnot.ext139 = zext i1 %lnot138 to i32, !dbg !11424
  %conv140 = sext i32 %lnot.ext139 to i64, !dbg !11424
  %expval141 = call i64 @llvm.expect.i64(i64 %conv140, i64 0), !dbg !11424
  %tobool142 = icmp ne i64 %expval141, 0, !dbg !11424
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !11426

if.then143:                                       ; preds = %cond.end131
  %80 = load ptr, ptr @__pyx_f, align 16, !dbg !11427, !tbaa !1461
  store ptr %80, ptr %__pyx_filename, align 8, !dbg !11427, !tbaa !1461
  %81 = load ptr, ptr %__pyx_filename, align 8, !dbg !11427, !tbaa !1461
  store i32 76, ptr %__pyx_lineno, align 4, !dbg !11427, !tbaa !1557
  %82 = load i32, ptr %__pyx_lineno, align 4, !dbg !11427, !tbaa !1557
  store i32 4350, ptr %__pyx_clineno, align 4, !dbg !11427, !tbaa !1557
  %83 = load i32, ptr %__pyx_clineno, align 4, !dbg !11427, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11430

if.end144:                                        ; preds = %cond.end131
  %84 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11431, !tbaa !1461
  %call145 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %84), !dbg !11431
  %85 = load i32, ptr %__pyx_t_7, align 4, !dbg !11432, !tbaa !1557
  %cmp146 = icmp ugt i32 %call145, %85, !dbg !11433
  br i1 %cmp146, label %cond.true148, label %cond.false150, !dbg !11434

cond.true148:                                     ; preds = %if.end144
  %86 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11435, !tbaa !1461
  %call149 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %86), !dbg !11435
  br label %cond.end151, !dbg !11434

cond.false150:                                    ; preds = %if.end144
  %87 = load i32, ptr %__pyx_t_7, align 4, !dbg !11436, !tbaa !1557
  br label %cond.end151, !dbg !11434

cond.end151:                                      ; preds = %cond.false150, %cond.true148
  %cond152 = phi i32 [ %call149, %cond.true148 ], [ %87, %cond.false150 ], !dbg !11434
  store i32 %cond152, ptr %__pyx_t_7, align 4, !dbg !11437, !tbaa !1557
  %88 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11438, !tbaa !1461
  %call153 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %88), !dbg !11438
  %89 = load i64, ptr %__pyx_t_6, align 8, !dbg !11439, !tbaa !1836
  %add154 = add i64 %89, %call153, !dbg !11439
  store i64 %add154, ptr %__pyx_t_6, align 8, !dbg !11439, !tbaa !1836
  %90 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11440, !tbaa !1461
  %91 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11440, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %90, i64 noundef 1, ptr noundef %91), !dbg !11440
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11441, !tbaa !1461
  %92 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11442, !tbaa !1461
  %__pyx_kp_u__5 = getelementptr inbounds %struct.__pyx_mstate, ptr %92, i32 0, i32 21, !dbg !11442
  %93 = load ptr, ptr %__pyx_kp_u__5, align 8, !dbg !11442, !tbaa !11443
  call void @Py_INCREF(ptr noundef %93), !dbg !11442
  %94 = load i64, ptr %__pyx_t_6, align 8, !dbg !11444, !tbaa !1836
  %add155 = add i64 %94, 1, !dbg !11444
  store i64 %add155, ptr %__pyx_t_6, align 8, !dbg !11444, !tbaa !1836
  %95 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11445, !tbaa !1461
  %96 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11445, !tbaa !1461
  %__pyx_kp_u__5156 = getelementptr inbounds %struct.__pyx_mstate, ptr %96, i32 0, i32 21, !dbg !11445
  %97 = load ptr, ptr %__pyx_kp_u__5156, align 8, !dbg !11445, !tbaa !11443
  call void @PyTuple_SET_ITEM(ptr noundef %95, i64 noundef 2, ptr noundef %97), !dbg !11445
  %98 = load i64, ptr %__pyx_v_lineno.addr, align 8, !dbg !11446, !tbaa !1836
  %call157 = call ptr @__Pyx_PyUnicode_From_Py_ssize_t(i64 noundef %98, i64 noundef 0, i8 noundef signext 32, i8 noundef signext 100), !dbg !11447
  store ptr %call157, ptr %__pyx_t_2, align 8, !dbg !11448, !tbaa !1461
  %99 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11449, !tbaa !1461
  %tobool158 = icmp ne ptr %99, null, !dbg !11449
  %lnot159 = xor i1 %tobool158, true, !dbg !11449
  %lnot161 = xor i1 %lnot159, true, !dbg !11449
  %lnot163 = xor i1 %lnot161, true, !dbg !11449
  %lnot.ext164 = zext i1 %lnot163 to i32, !dbg !11449
  %conv165 = sext i32 %lnot.ext164 to i64, !dbg !11449
  %expval166 = call i64 @llvm.expect.i64(i64 %conv165, i64 0), !dbg !11449
  %tobool167 = icmp ne i64 %expval166, 0, !dbg !11449
  br i1 %tobool167, label %if.then168, label %if.end169, !dbg !11451

if.then168:                                       ; preds = %cond.end151
  %100 = load ptr, ptr @__pyx_f, align 16, !dbg !11452, !tbaa !1461
  store ptr %100, ptr %__pyx_filename, align 8, !dbg !11452, !tbaa !1461
  %101 = load ptr, ptr %__pyx_filename, align 8, !dbg !11452, !tbaa !1461
  store i32 76, ptr %__pyx_lineno, align 4, !dbg !11452, !tbaa !1557
  %102 = load i32, ptr %__pyx_lineno, align 4, !dbg !11452, !tbaa !1557
  store i32 4361, ptr %__pyx_clineno, align 4, !dbg !11452, !tbaa !1557
  %103 = load i32, ptr %__pyx_clineno, align 4, !dbg !11452, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11455

if.end169:                                        ; preds = %cond.end151
  %104 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11456, !tbaa !1461
  %call170 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %104), !dbg !11456
  %105 = load i64, ptr %__pyx_t_6, align 8, !dbg !11457, !tbaa !1836
  %add171 = add i64 %105, %call170, !dbg !11457
  store i64 %add171, ptr %__pyx_t_6, align 8, !dbg !11457, !tbaa !1836
  %106 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11458, !tbaa !1461
  %107 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11458, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %106, i64 noundef 3, ptr noundef %107), !dbg !11458
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11459, !tbaa !1461
  %108 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11460, !tbaa !1461
  %__pyx_kp_u__6 = getelementptr inbounds %struct.__pyx_mstate, ptr %108, i32 0, i32 22, !dbg !11460
  %109 = load ptr, ptr %__pyx_kp_u__6, align 8, !dbg !11460, !tbaa !3592
  call void @Py_INCREF(ptr noundef %109), !dbg !11460
  %110 = load i64, ptr %__pyx_t_6, align 8, !dbg !11461, !tbaa !1836
  %add172 = add i64 %110, 2, !dbg !11461
  store i64 %add172, ptr %__pyx_t_6, align 8, !dbg !11461, !tbaa !1836
  %111 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11462, !tbaa !1461
  %112 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11462, !tbaa !1461
  %__pyx_kp_u__6173 = getelementptr inbounds %struct.__pyx_mstate, ptr %112, i32 0, i32 22, !dbg !11462
  %113 = load ptr, ptr %__pyx_kp_u__6173, align 8, !dbg !11462, !tbaa !3592
  call void @PyTuple_SET_ITEM(ptr noundef %111, i64 noundef 4, ptr noundef %113), !dbg !11462
  %114 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  %call174 = call i32 @Py_IS_TYPE(ptr noundef %114, ptr noundef @PyUnicode_Type), !dbg !11463
  %tobool175 = icmp ne i32 %call174, 0, !dbg !11463
  %lnot176 = xor i1 %tobool175, true, !dbg !11463
  %lnot178 = xor i1 %lnot176, true, !dbg !11463
  %lnot.ext179 = zext i1 %lnot178 to i32, !dbg !11463
  %conv180 = sext i32 %lnot.ext179 to i64, !dbg !11463
  %expval181 = call i64 @llvm.expect.i64(i64 %conv180, i64 1), !dbg !11463
  %tobool182 = icmp ne i64 %expval181, 0, !dbg !11463
  br i1 %tobool182, label %cond.true183, label %cond.false184, !dbg !11463

cond.true183:                                     ; preds = %if.end169
  %115 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  call void @Py_INCREF(ptr noundef %115), !dbg !11463
  %116 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  br label %cond.end215, !dbg !11463

cond.false184:                                    ; preds = %if.end169
  %117 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  %call185 = call i32 @Py_IS_TYPE(ptr noundef %117, ptr noundef @PyLong_Type), !dbg !11463
  %tobool186 = icmp ne i32 %call185, 0, !dbg !11463
  %lnot187 = xor i1 %tobool186, true, !dbg !11463
  %lnot189 = xor i1 %lnot187, true, !dbg !11463
  %lnot.ext190 = zext i1 %lnot189 to i32, !dbg !11463
  %conv191 = sext i32 %lnot.ext190 to i64, !dbg !11463
  %expval192 = call i64 @llvm.expect.i64(i64 %conv191, i64 1), !dbg !11463
  %tobool193 = icmp ne i64 %expval192, 0, !dbg !11463
  br i1 %tobool193, label %cond.true194, label %cond.false196, !dbg !11463

cond.true194:                                     ; preds = %cond.false184
  %118 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 9), align 8, !dbg !11463, !tbaa !3569
  %119 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  %call195 = call ptr %118(ptr noundef %119), !dbg !11463
  br label %cond.end213, !dbg !11463

cond.false196:                                    ; preds = %cond.false184
  %120 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  %call197 = call i32 @Py_IS_TYPE(ptr noundef %120, ptr noundef @PyFloat_Type), !dbg !11463
  %tobool198 = icmp ne i32 %call197, 0, !dbg !11463
  %lnot199 = xor i1 %tobool198, true, !dbg !11463
  %lnot201 = xor i1 %lnot199, true, !dbg !11463
  %lnot.ext202 = zext i1 %lnot201 to i32, !dbg !11463
  %conv203 = sext i32 %lnot.ext202 to i64, !dbg !11463
  %expval204 = call i64 @llvm.expect.i64(i64 %conv203, i64 1), !dbg !11463
  %tobool205 = icmp ne i64 %expval204, 0, !dbg !11463
  br i1 %tobool205, label %cond.true206, label %cond.false208, !dbg !11463

cond.true206:                                     ; preds = %cond.false196
  %121 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFloat_Type, i32 0, i32 9), align 8, !dbg !11463, !tbaa !3569
  %122 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  %call207 = call ptr %121(ptr noundef %122), !dbg !11463
  br label %cond.end211, !dbg !11463

cond.false208:                                    ; preds = %cond.false196
  %123 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11463, !tbaa !1461
  %124 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11463, !tbaa !1461
  %__pyx_empty_unicode209 = getelementptr inbounds %struct.__pyx_mstate, ptr %124, i32 0, i32 5, !dbg !11463
  %125 = load ptr, ptr %__pyx_empty_unicode209, align 8, !dbg !11463, !tbaa !1676
  %call210 = call ptr @PyObject_Format(ptr noundef %123, ptr noundef %125), !dbg !11463
  br label %cond.end211, !dbg !11463

cond.end211:                                      ; preds = %cond.false208, %cond.true206
  %cond212 = phi ptr [ %call207, %cond.true206 ], [ %call210, %cond.false208 ], !dbg !11463
  br label %cond.end213, !dbg !11463

cond.end213:                                      ; preds = %cond.end211, %cond.true194
  %cond214 = phi ptr [ %call195, %cond.true194 ], [ %cond212, %cond.end211 ], !dbg !11463
  br label %cond.end215, !dbg !11463

cond.end215:                                      ; preds = %cond.end213, %cond.true183
  %cond216 = phi ptr [ %116, %cond.true183 ], [ %cond214, %cond.end213 ], !dbg !11463
  store ptr %cond216, ptr %__pyx_t_2, align 8, !dbg !11464, !tbaa !1461
  %126 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11465, !tbaa !1461
  %tobool217 = icmp ne ptr %126, null, !dbg !11465
  %lnot218 = xor i1 %tobool217, true, !dbg !11465
  %lnot220 = xor i1 %lnot218, true, !dbg !11465
  %lnot222 = xor i1 %lnot220, true, !dbg !11465
  %lnot.ext223 = zext i1 %lnot222 to i32, !dbg !11465
  %conv224 = sext i32 %lnot.ext223 to i64, !dbg !11465
  %expval225 = call i64 @llvm.expect.i64(i64 %conv224, i64 0), !dbg !11465
  %tobool226 = icmp ne i64 %expval225, 0, !dbg !11465
  br i1 %tobool226, label %if.then227, label %if.end228, !dbg !11467

if.then227:                                       ; preds = %cond.end215
  %127 = load ptr, ptr @__pyx_f, align 16, !dbg !11468, !tbaa !1461
  store ptr %127, ptr %__pyx_filename, align 8, !dbg !11468, !tbaa !1461
  %128 = load ptr, ptr %__pyx_filename, align 8, !dbg !11468, !tbaa !1461
  store i32 76, ptr %__pyx_lineno, align 4, !dbg !11468, !tbaa !1557
  %129 = load i32, ptr %__pyx_lineno, align 4, !dbg !11468, !tbaa !1557
  store i32 4371, ptr %__pyx_clineno, align 4, !dbg !11468, !tbaa !1557
  %130 = load i32, ptr %__pyx_clineno, align 4, !dbg !11468, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11471

if.end228:                                        ; preds = %cond.end215
  %131 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11472, !tbaa !1461
  %call229 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %131), !dbg !11472
  %132 = load i32, ptr %__pyx_t_7, align 4, !dbg !11473, !tbaa !1557
  %cmp230 = icmp ugt i32 %call229, %132, !dbg !11474
  br i1 %cmp230, label %cond.true232, label %cond.false234, !dbg !11475

cond.true232:                                     ; preds = %if.end228
  %133 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11476, !tbaa !1461
  %call233 = call i32 @PyUnicode_MAX_CHAR_VALUE(ptr noundef %133), !dbg !11476
  br label %cond.end235, !dbg !11475

cond.false234:                                    ; preds = %if.end228
  %134 = load i32, ptr %__pyx_t_7, align 4, !dbg !11477, !tbaa !1557
  br label %cond.end235, !dbg !11475

cond.end235:                                      ; preds = %cond.false234, %cond.true232
  %cond236 = phi i32 [ %call233, %cond.true232 ], [ %134, %cond.false234 ], !dbg !11475
  store i32 %cond236, ptr %__pyx_t_7, align 4, !dbg !11478, !tbaa !1557
  %135 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11479, !tbaa !1461
  %call237 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %135), !dbg !11479
  %136 = load i64, ptr %__pyx_t_6, align 8, !dbg !11480, !tbaa !1836
  %add238 = add i64 %136, %call237, !dbg !11480
  store i64 %add238, ptr %__pyx_t_6, align 8, !dbg !11480, !tbaa !1836
  %137 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11481, !tbaa !1461
  %138 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11481, !tbaa !1461
  call void @PyTuple_SET_ITEM(ptr noundef %137, i64 noundef 5, ptr noundef %138), !dbg !11481
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11482, !tbaa !1461
  %139 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11483, !tbaa !1461
  %140 = load i64, ptr %__pyx_t_6, align 8, !dbg !11484, !tbaa !1836
  %141 = load i32, ptr %__pyx_t_7, align 4, !dbg !11485, !tbaa !1557
  %call239 = call ptr @__Pyx_PyUnicode_Join(ptr noundef %139, i64 noundef 6, i64 noundef %140, i32 noundef %141), !dbg !11486
  store ptr %call239, ptr %__pyx_t_2, align 8, !dbg !11487, !tbaa !1461
  %142 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11488, !tbaa !1461
  %tobool240 = icmp ne ptr %142, null, !dbg !11488
  %lnot241 = xor i1 %tobool240, true, !dbg !11488
  %lnot243 = xor i1 %lnot241, true, !dbg !11488
  %lnot245 = xor i1 %lnot243, true, !dbg !11488
  %lnot.ext246 = zext i1 %lnot245 to i32, !dbg !11488
  %conv247 = sext i32 %lnot.ext246 to i64, !dbg !11488
  %expval248 = call i64 @llvm.expect.i64(i64 %conv247, i64 0), !dbg !11488
  %tobool249 = icmp ne i64 %expval248, 0, !dbg !11488
  br i1 %tobool249, label %if.then250, label %if.end251, !dbg !11490

if.then250:                                       ; preds = %cond.end235
  %143 = load ptr, ptr @__pyx_f, align 16, !dbg !11491, !tbaa !1461
  store ptr %143, ptr %__pyx_filename, align 8, !dbg !11491, !tbaa !1461
  %144 = load ptr, ptr %__pyx_filename, align 8, !dbg !11491, !tbaa !1461
  store i32 76, ptr %__pyx_lineno, align 4, !dbg !11491, !tbaa !1557
  %145 = load i32, ptr %__pyx_lineno, align 4, !dbg !11491, !tbaa !1557
  store i32 4378, ptr %__pyx_clineno, align 4, !dbg !11491, !tbaa !1557
  %146 = load i32, ptr %__pyx_clineno, align 4, !dbg !11491, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11494

if.end251:                                        ; preds = %cond.end235
  %147 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11495, !tbaa !1461
  call void @Py_DECREF(ptr noundef %147), !dbg !11495
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11496, !tbaa !1461
  %148 = load ptr, ptr @__pyx_builtin_print, align 8, !dbg !11497, !tbaa !1461
  %149 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11498, !tbaa !1461
  %call252 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %148, ptr noundef %149), !dbg !11499
  store ptr %call252, ptr %__pyx_t_3, align 8, !dbg !11500, !tbaa !1461
  %150 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11501, !tbaa !1461
  %tobool253 = icmp ne ptr %150, null, !dbg !11501
  %lnot254 = xor i1 %tobool253, true, !dbg !11501
  %lnot256 = xor i1 %lnot254, true, !dbg !11501
  %lnot258 = xor i1 %lnot256, true, !dbg !11501
  %lnot.ext259 = zext i1 %lnot258 to i32, !dbg !11501
  %conv260 = sext i32 %lnot.ext259 to i64, !dbg !11501
  %expval261 = call i64 @llvm.expect.i64(i64 %conv260, i64 0), !dbg !11501
  %tobool262 = icmp ne i64 %expval261, 0, !dbg !11501
  br i1 %tobool262, label %if.then263, label %if.end264, !dbg !11503

if.then263:                                       ; preds = %if.end251
  %151 = load ptr, ptr @__pyx_f, align 16, !dbg !11504, !tbaa !1461
  store ptr %151, ptr %__pyx_filename, align 8, !dbg !11504, !tbaa !1461
  %152 = load ptr, ptr %__pyx_filename, align 8, !dbg !11504, !tbaa !1461
  store i32 76, ptr %__pyx_lineno, align 4, !dbg !11504, !tbaa !1557
  %153 = load i32, ptr %__pyx_lineno, align 4, !dbg !11504, !tbaa !1557
  store i32 4381, ptr %__pyx_clineno, align 4, !dbg !11504, !tbaa !1557
  %154 = load i32, ptr %__pyx_clineno, align 4, !dbg !11504, !tbaa !1557
  br label %__pyx_L4_error, !dbg !11507

if.end264:                                        ; preds = %if.end251
  %155 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11508, !tbaa !1461
  call void @Py_DECREF(ptr noundef %155), !dbg !11508
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11509, !tbaa !1461
  %156 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11510, !tbaa !1461
  call void @Py_DECREF(ptr noundef %156), !dbg !11510
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11511, !tbaa !1461
  br label %__pyx_L0, !dbg !11512

__pyx_L4_error:                                   ; preds = %cleanup, %if.then263, %if.then250, %if.then227, %if.then168, %if.then143, %if.then91, %if.then73, %if.then24, %if.then11
  tail call void @llvm.dbg.label(metadata !11263), !dbg !11514
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !11515
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !11265, metadata !DIExpression()), !dbg !11515
  %call265 = call ptr @_PyThreadState_UncheckedGet(), !dbg !11516
  store ptr %call265, ptr %__pyx_tstate, align 8, !dbg !11516, !tbaa !1461
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11517, !tbaa !1461
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11518, !tbaa !1461
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11519, !tbaa !1461
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !11520, !tbaa !1461
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !11521, !tbaa !1461
  store ptr null, ptr %__pyx_t_13, align 8, !dbg !11522, !tbaa !1461
  %157 = load ptr, ptr %__pyx_t_2, align 8, !dbg !11523, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %157), !dbg !11523
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !11524, !tbaa !1461
  %158 = load ptr, ptr %__pyx_t_3, align 8, !dbg !11525, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %158), !dbg !11525
  store ptr null, ptr %__pyx_t_3, align 8, !dbg !11526, !tbaa !1461
  %159 = load ptr, ptr %__pyx_t_4, align 8, !dbg !11527, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %159), !dbg !11527
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !11528, !tbaa !1461
  %160 = load ptr, ptr %__pyx_tstate, align 8, !dbg !11529, !tbaa !1461
  call void @__Pyx__ExceptionSwap(ptr noundef %160, ptr noundef %__pyx_t_11, ptr noundef %__pyx_t_12, ptr noundef %__pyx_t_13), !dbg !11529
  %161 = load ptr, ptr %__pyx_tstate, align 8, !dbg !11531, !tbaa !1461
  %call266 = call i32 @__Pyx__GetException(ptr noundef %161, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_10), !dbg !11531
  %cmp267 = icmp slt i32 %call266, 0, !dbg !11531
  %lnot269 = xor i1 %cmp267, true, !dbg !11531
  %lnot271 = xor i1 %lnot269, true, !dbg !11531
  %lnot.ext272 = zext i1 %lnot271 to i32, !dbg !11531
  %conv273 = sext i32 %lnot.ext272 to i64, !dbg !11531
  %expval274 = call i64 @llvm.expect.i64(i64 %conv273, i64 0), !dbg !11531
  %tobool275 = icmp ne i64 %expval274, 0, !dbg !11531
  br i1 %tobool275, label %if.then276, label %if.end277, !dbg !11533

if.then276:                                       ; preds = %__pyx_L4_error
  %162 = load ptr, ptr %__pyx_tstate, align 8, !dbg !11534, !tbaa !1461
  call void @__Pyx_ErrFetchInState(ptr noundef %162, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_10), !dbg !11534
  br label %if.end277, !dbg !11534

if.end277:                                        ; preds = %if.then276, %__pyx_L4_error
  br label %__pyx_L7_return, !dbg !11535

__pyx_L7_return:                                  ; preds = %if.end277
  tail call void @llvm.dbg.label(metadata !11267), !dbg !11537
  %163 = load ptr, ptr %__pyx_tstate, align 8, !dbg !11538, !tbaa !1461
  %164 = load ptr, ptr %__pyx_t_11, align 8, !dbg !11538, !tbaa !1461
  %165 = load ptr, ptr %__pyx_t_12, align 8, !dbg !11538, !tbaa !1461
  %166 = load ptr, ptr %__pyx_t_13, align 8, !dbg !11538, !tbaa !1461
  call void @__Pyx__ExceptionReset(ptr noundef %163, ptr noundef %164, ptr noundef %165, ptr noundef %166), !dbg !11538
  %167 = load ptr, ptr %__pyx_t_8, align 8, !dbg !11541, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %167), !dbg !11541
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !11542, !tbaa !1461
  %168 = load ptr, ptr %__pyx_t_9, align 8, !dbg !11543, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %168), !dbg !11543
  store ptr null, ptr %__pyx_t_9, align 8, !dbg !11544, !tbaa !1461
  %169 = load ptr, ptr %__pyx_t_10, align 8, !dbg !11545, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %169), !dbg !11545
  store ptr null, ptr %__pyx_t_10, align 8, !dbg !11546, !tbaa !1461
  store ptr null, ptr %__pyx_t_11, align 8, !dbg !11547, !tbaa !1461
  store ptr null, ptr %__pyx_t_12, align 8, !dbg !11548, !tbaa !1461
  store ptr null, ptr %__pyx_t_13, align 8, !dbg !11549, !tbaa !1461
  store i32 7, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #10, !dbg !11550
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L7_return, %if.end264
  tail call void @llvm.dbg.label(metadata !11268), !dbg !11551
  %170 = load ptr, ptr %__pyx_v_sys, align 8, !dbg !11552, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %170), !dbg !11552
  %171 = load ptr, ptr %__pyx_v_e, align 8, !dbg !11553, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %171), !dbg !11553
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_13) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_sys) #10, !dbg !11554
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_e) #10, !dbg !11554
  ret void, !dbg !11554

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx__ExceptionReset(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !11555 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %exc_info = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !11557, metadata !DIExpression()), !dbg !11563
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !11558, metadata !DIExpression()), !dbg !11564
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !11559, metadata !DIExpression()), !dbg !11565
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !11560, metadata !DIExpression()), !dbg !11566
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_info) #10, !dbg !11567
  tail call void @llvm.dbg.declare(metadata ptr %exc_info, metadata !11561, metadata !DIExpression()), !dbg !11568
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !11569, !tbaa !1461
  %exc_info1 = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 18, !dbg !11570
  %1 = load ptr, ptr %exc_info1, align 8, !dbg !11570, !tbaa !11194
  store ptr %1, ptr %exc_info, align 8, !dbg !11568, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #10, !dbg !11571
  tail call void @llvm.dbg.declare(metadata ptr %tmp_value, metadata !11562, metadata !DIExpression()), !dbg !11572
  %2 = load ptr, ptr %exc_info, align 8, !dbg !11573, !tbaa !1461
  %exc_value = getelementptr inbounds %struct._err_stackitem, ptr %2, i32 0, i32 0, !dbg !11574
  %3 = load ptr, ptr %exc_value, align 8, !dbg !11574, !tbaa !11087
  store ptr %3, ptr %tmp_value, align 8, !dbg !11572, !tbaa !1461
  %4 = load ptr, ptr %value.addr, align 8, !dbg !11575, !tbaa !1461
  %5 = load ptr, ptr %exc_info, align 8, !dbg !11576, !tbaa !1461
  %exc_value2 = getelementptr inbounds %struct._err_stackitem, ptr %5, i32 0, i32 0, !dbg !11577
  store ptr %4, ptr %exc_value2, align 8, !dbg !11578, !tbaa !11087
  %6 = load ptr, ptr %tmp_value, align 8, !dbg !11579, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %6), !dbg !11579
  %7 = load ptr, ptr %type.addr, align 8, !dbg !11580, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %7), !dbg !11580
  %8 = load ptr, ptr %tb.addr, align 8, !dbg !11581, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %8), !dbg !11581
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #10, !dbg !11582
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_info) #10, !dbg !11582
  ret void, !dbg !11582
}

declare !dbg !11583 void @PyErr_Restore(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx__ExceptionSwap(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !11586 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %tmp_type = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  %exc_info = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !11588, metadata !DIExpression()), !dbg !11596
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !11589, metadata !DIExpression()), !dbg !11597
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !11590, metadata !DIExpression()), !dbg !11598
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !11591, metadata !DIExpression()), !dbg !11599
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_type) #10, !dbg !11600
  tail call void @llvm.dbg.declare(metadata ptr %tmp_type, metadata !11592, metadata !DIExpression()), !dbg !11601
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #10, !dbg !11600
  tail call void @llvm.dbg.declare(metadata ptr %tmp_value, metadata !11593, metadata !DIExpression()), !dbg !11602
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #10, !dbg !11600
  tail call void @llvm.dbg.declare(metadata ptr %tmp_tb, metadata !11594, metadata !DIExpression()), !dbg !11603
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_info) #10, !dbg !11604
  tail call void @llvm.dbg.declare(metadata ptr %exc_info, metadata !11595, metadata !DIExpression()), !dbg !11605
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !11606, !tbaa !1461
  %exc_info1 = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 18, !dbg !11607
  %1 = load ptr, ptr %exc_info1, align 8, !dbg !11607, !tbaa !11194
  store ptr %1, ptr %exc_info, align 8, !dbg !11605, !tbaa !1461
  %2 = load ptr, ptr %exc_info, align 8, !dbg !11608, !tbaa !1461
  %exc_value = getelementptr inbounds %struct._err_stackitem, ptr %2, i32 0, i32 0, !dbg !11609
  %3 = load ptr, ptr %exc_value, align 8, !dbg !11609, !tbaa !11087
  store ptr %3, ptr %tmp_value, align 8, !dbg !11610, !tbaa !1461
  %4 = load ptr, ptr %value.addr, align 8, !dbg !11611, !tbaa !1461
  %5 = load ptr, ptr %4, align 8, !dbg !11612, !tbaa !1461
  %6 = load ptr, ptr %exc_info, align 8, !dbg !11613, !tbaa !1461
  %exc_value2 = getelementptr inbounds %struct._err_stackitem, ptr %6, i32 0, i32 0, !dbg !11614
  store ptr %5, ptr %exc_value2, align 8, !dbg !11615, !tbaa !11087
  %7 = load ptr, ptr %tmp_value, align 8, !dbg !11616, !tbaa !1461
  %cmp = icmp eq ptr %7, null, !dbg !11618
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11619

lor.lhs.false:                                    ; preds = %entry
  %8 = load ptr, ptr %tmp_value, align 8, !dbg !11620, !tbaa !1461
  %cmp3 = icmp eq ptr %8, @_Py_NoneStruct, !dbg !11621
  br i1 %cmp3, label %if.then, label %if.else, !dbg !11622

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load ptr, ptr %tmp_value, align 8, !dbg !11623, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %9), !dbg !11623
  store ptr null, ptr %tmp_value, align 8, !dbg !11625, !tbaa !1461
  store ptr null, ptr %tmp_type, align 8, !dbg !11626, !tbaa !1461
  store ptr null, ptr %tmp_tb, align 8, !dbg !11627, !tbaa !1461
  br label %if.end, !dbg !11628

if.else:                                          ; preds = %lor.lhs.false
  %10 = load ptr, ptr %tmp_value, align 8, !dbg !11629, !tbaa !1461
  %call = call ptr @Py_TYPE(ptr noundef %10), !dbg !11629
  store ptr %call, ptr %tmp_type, align 8, !dbg !11631, !tbaa !1461
  %11 = load ptr, ptr %tmp_type, align 8, !dbg !11632, !tbaa !1461
  call void @Py_INCREF(ptr noundef %11), !dbg !11632
  %12 = load ptr, ptr %tmp_value, align 8, !dbg !11633, !tbaa !1461
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, ptr %12, i32 0, i32 4, !dbg !11634
  %13 = load ptr, ptr %traceback, align 8, !dbg !11634, !tbaa !11635
  store ptr %13, ptr %tmp_tb, align 8, !dbg !11637, !tbaa !1461
  %14 = load ptr, ptr %tmp_tb, align 8, !dbg !11638, !tbaa !1461
  call void @Py_XINCREF(ptr noundef %14), !dbg !11638
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load ptr, ptr %tmp_type, align 8, !dbg !11639, !tbaa !1461
  %16 = load ptr, ptr %type.addr, align 8, !dbg !11640, !tbaa !1461
  store ptr %15, ptr %16, align 8, !dbg !11641, !tbaa !1461
  %17 = load ptr, ptr %tmp_value, align 8, !dbg !11642, !tbaa !1461
  %18 = load ptr, ptr %value.addr, align 8, !dbg !11643, !tbaa !1461
  store ptr %17, ptr %18, align 8, !dbg !11644, !tbaa !1461
  %19 = load ptr, ptr %tmp_tb, align 8, !dbg !11645, !tbaa !1461
  %20 = load ptr, ptr %tb.addr, align 8, !dbg !11646, !tbaa !1461
  store ptr %19, ptr %20, align 8, !dbg !11647, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_info) #10, !dbg !11648
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #10, !dbg !11648
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #10, !dbg !11648
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_type) #10, !dbg !11648
  ret void, !dbg !11648
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_ErrFetchInState(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !11649 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !11651, metadata !DIExpression()), !dbg !11655
  store ptr %type, ptr %type.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !11652, metadata !DIExpression()), !dbg !11656
  store ptr %value, ptr %value.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !11653, metadata !DIExpression()), !dbg !11657
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !11654, metadata !DIExpression()), !dbg !11658
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !11659, !tbaa !1461
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 15, !dbg !11660
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !11660, !tbaa !2655
  %2 = load ptr, ptr %type.addr, align 8, !dbg !11661, !tbaa !1461
  store ptr %1, ptr %2, align 8, !dbg !11662, !tbaa !1461
  %3 = load ptr, ptr %tstate.addr, align 8, !dbg !11663, !tbaa !1461
  %curexc_value = getelementptr inbounds %struct._ts, ptr %3, i32 0, i32 16, !dbg !11664
  %4 = load ptr, ptr %curexc_value, align 8, !dbg !11664, !tbaa !4395
  %5 = load ptr, ptr %value.addr, align 8, !dbg !11665, !tbaa !1461
  store ptr %4, ptr %5, align 8, !dbg !11666, !tbaa !1461
  %6 = load ptr, ptr %tstate.addr, align 8, !dbg !11667, !tbaa !1461
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %6, i32 0, i32 17, !dbg !11668
  %7 = load ptr, ptr %curexc_traceback, align 8, !dbg !11668, !tbaa !4399
  %8 = load ptr, ptr %tb.addr, align 8, !dbg !11669, !tbaa !1461
  store ptr %7, ptr %8, align 8, !dbg !11670, !tbaa !1461
  %9 = load ptr, ptr %tstate.addr, align 8, !dbg !11671, !tbaa !1461
  %curexc_type1 = getelementptr inbounds %struct._ts, ptr %9, i32 0, i32 15, !dbg !11672
  store ptr null, ptr %curexc_type1, align 8, !dbg !11673, !tbaa !2655
  %10 = load ptr, ptr %tstate.addr, align 8, !dbg !11674, !tbaa !1461
  %curexc_value2 = getelementptr inbounds %struct._ts, ptr %10, i32 0, i32 16, !dbg !11675
  store ptr null, ptr %curexc_value2, align 8, !dbg !11676, !tbaa !4395
  %11 = load ptr, ptr %tstate.addr, align 8, !dbg !11677, !tbaa !1461
  %curexc_traceback3 = getelementptr inbounds %struct._ts, ptr %11, i32 0, i32 17, !dbg !11678
  store ptr null, ptr %curexc_traceback3, align 8, !dbg !11679, !tbaa !4399
  ret void, !dbg !11680
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyErr_GetTopmostException(ptr noundef %tstate) #0 !dbg !11681 {
entry:
  %tstate.addr = alloca ptr, align 8
  %exc_info = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !11685, metadata !DIExpression()), !dbg !11687
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_info) #10, !dbg !11688
  tail call void @llvm.dbg.declare(metadata ptr %exc_info, metadata !11686, metadata !DIExpression()), !dbg !11689
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !11690, !tbaa !1461
  %exc_info1 = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 18, !dbg !11691
  %1 = load ptr, ptr %exc_info1, align 8, !dbg !11691, !tbaa !11194
  store ptr %1, ptr %exc_info, align 8, !dbg !11689, !tbaa !1461
  br label %while.cond, !dbg !11692

while.cond:                                       ; preds = %while.body, %entry
  %2 = load ptr, ptr %exc_info, align 8, !dbg !11693, !tbaa !1461
  %exc_value = getelementptr inbounds %struct._err_stackitem, ptr %2, i32 0, i32 0, !dbg !11694
  %3 = load ptr, ptr %exc_value, align 8, !dbg !11694, !tbaa !11087
  %cmp = icmp eq ptr %3, null, !dbg !11695
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !11696

lor.lhs.false:                                    ; preds = %while.cond
  %4 = load ptr, ptr %exc_info, align 8, !dbg !11697, !tbaa !1461
  %exc_value2 = getelementptr inbounds %struct._err_stackitem, ptr %4, i32 0, i32 0, !dbg !11698
  %5 = load ptr, ptr %exc_value2, align 8, !dbg !11698, !tbaa !11087
  %cmp3 = icmp eq ptr %5, @_Py_NoneStruct, !dbg !11699
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !11700

land.rhs:                                         ; preds = %lor.lhs.false, %while.cond
  %6 = load ptr, ptr %exc_info, align 8, !dbg !11701, !tbaa !1461
  %previous_item = getelementptr inbounds %struct._err_stackitem, ptr %6, i32 0, i32 1, !dbg !11702
  %7 = load ptr, ptr %previous_item, align 8, !dbg !11702, !tbaa !11703
  %cmp4 = icmp ne ptr %7, null, !dbg !11704
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %8 = phi i1 [ false, %lor.lhs.false ], [ %cmp4, %land.rhs ], !dbg !11705
  br i1 %8, label %while.body, label %while.end, !dbg !11692

while.body:                                       ; preds = %land.end
  %9 = load ptr, ptr %exc_info, align 8, !dbg !11706, !tbaa !1461
  %previous_item5 = getelementptr inbounds %struct._err_stackitem, ptr %9, i32 0, i32 1, !dbg !11708
  %10 = load ptr, ptr %previous_item5, align 8, !dbg !11708, !tbaa !11703
  store ptr %10, ptr %exc_info, align 8, !dbg !11709, !tbaa !1461
  br label %while.cond, !dbg !11692, !llvm.loop !11710

while.end:                                        ; preds = %land.end
  %11 = load ptr, ptr %exc_info, align 8, !dbg !11712, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_info) #10, !dbg !11713
  ret ptr %11, !dbg !11714
}

declare !dbg !11715 ptr @PyException_GetTraceback(ptr noundef) #1

declare !dbg !11716 void @PyErr_NormalizeException(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !11717 i32 @PyException_SetTraceback(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_ImportDottedModule(ptr noundef %name, ptr noundef %parts_tuple) #0 !dbg !11718 {
entry:
  %retval = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %parts_tuple.addr = alloca ptr, align 8
  %module = alloca ptr, align 8
  %spec = alloca ptr, align 8
  %unsafe = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !11720, metadata !DIExpression()), !dbg !11729
  store ptr %parts_tuple, ptr %parts_tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %parts_tuple.addr, metadata !11721, metadata !DIExpression()), !dbg !11730
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #10, !dbg !11731
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !11722, metadata !DIExpression()), !dbg !11732
  %0 = load ptr, ptr %name.addr, align 8, !dbg !11733, !tbaa !1461
  %call = call ptr @__Pyx__ImportDottedModule_Lookup(ptr noundef %0), !dbg !11734
  store ptr %call, ptr %module, align 8, !dbg !11732, !tbaa !1461
  %1 = load ptr, ptr %module, align 8, !dbg !11735, !tbaa !1461
  %tobool = icmp ne ptr %1, null, !dbg !11735
  %lnot = xor i1 %tobool, true, !dbg !11735
  %lnot1 = xor i1 %lnot, true, !dbg !11735
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11735
  %conv = sext i32 %lnot.ext to i64, !dbg !11735
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !11735
  %tobool2 = icmp ne i64 %expval, 0, !dbg !11735
  br i1 %tobool2, label %if.then, label %if.else, !dbg !11736

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %spec) #10, !dbg !11737
  tail call void @llvm.dbg.declare(metadata ptr %spec, metadata !11723, metadata !DIExpression()), !dbg !11738
  %2 = load ptr, ptr %module, align 8, !dbg !11739, !tbaa !1461
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11740, !tbaa !1461
  %__pyx_n_s_spec = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 54, !dbg !11740
  %4 = load ptr, ptr %__pyx_n_s_spec, align 8, !dbg !11740, !tbaa !11741
  %call3 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %2, ptr noundef %4), !dbg !11742
  store ptr %call3, ptr %spec, align 8, !dbg !11738, !tbaa !1461
  %5 = load ptr, ptr %spec, align 8, !dbg !11743, !tbaa !1461
  %tobool4 = icmp ne ptr %5, null, !dbg !11743
  %lnot5 = xor i1 %tobool4, true, !dbg !11743
  %lnot7 = xor i1 %lnot5, true, !dbg !11743
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11743
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !11743
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !11743
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !11743
  br i1 %tobool11, label %if.then12, label %if.end27, !dbg !11744

if.then12:                                        ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %unsafe) #10, !dbg !11745
  tail call void @llvm.dbg.declare(metadata ptr %unsafe, metadata !11726, metadata !DIExpression()), !dbg !11746
  %6 = load ptr, ptr %spec, align 8, !dbg !11747, !tbaa !1461
  %7 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !11748, !tbaa !1461
  %__pyx_n_s_initializing = getelementptr inbounds %struct.__pyx_mstate, ptr %7, i32 0, i32 38, !dbg !11748
  %8 = load ptr, ptr %__pyx_n_s_initializing, align 8, !dbg !11748, !tbaa !11749
  %call13 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %6, ptr noundef %8), !dbg !11750
  store ptr %call13, ptr %unsafe, align 8, !dbg !11746, !tbaa !1461
  %9 = load ptr, ptr %unsafe, align 8, !dbg !11751, !tbaa !1461
  %tobool14 = icmp ne ptr %9, null, !dbg !11751
  br i1 %tobool14, label %lor.rhs, label %lor.end, !dbg !11751

lor.rhs:                                          ; preds = %if.then12
  %10 = load ptr, ptr %unsafe, align 8, !dbg !11751, !tbaa !1461
  %call15 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %10), !dbg !11751
  %tobool16 = icmp ne i32 %call15, 0, !dbg !11751
  %lnot17 = xor i1 %tobool16, true, !dbg !11751
  br label %lor.end, !dbg !11751

lor.end:                                          ; preds = %lor.rhs, %if.then12
  %11 = phi i1 [ true, %if.then12 ], [ %lnot17, %lor.rhs ]
  %lnot19 = xor i1 %11, true, !dbg !11751
  %lnot21 = xor i1 %lnot19, true, !dbg !11751
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11751
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !11751
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !11751
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !11751
  br i1 %tobool25, label %if.then26, label %if.end, !dbg !11753

if.then26:                                        ; preds = %lor.end
  %12 = load ptr, ptr %spec, align 8, !dbg !11754, !tbaa !1461
  call void @Py_DECREF(ptr noundef %12), !dbg !11754
  store ptr null, ptr %spec, align 8, !dbg !11756, !tbaa !1461
  br label %if.end, !dbg !11757

if.end:                                           ; preds = %if.then26, %lor.end
  %13 = load ptr, ptr %unsafe, align 8, !dbg !11758, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %13), !dbg !11758
  call void @llvm.lifetime.end.p0(i64 8, ptr %unsafe) #10, !dbg !11759
  br label %if.end27, !dbg !11760

if.end27:                                         ; preds = %if.end, %if.then
  %14 = load ptr, ptr %spec, align 8, !dbg !11761, !tbaa !1461
  %tobool28 = icmp ne ptr %14, null, !dbg !11761
  %lnot29 = xor i1 %tobool28, true, !dbg !11761
  %lnot31 = xor i1 %lnot29, true, !dbg !11761
  %lnot33 = xor i1 %lnot31, true, !dbg !11761
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !11761
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !11761
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1), !dbg !11761
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !11761
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !11763

if.then38:                                        ; preds = %if.end27
  call void @PyErr_Clear(), !dbg !11764
  %15 = load ptr, ptr %module, align 8, !dbg !11766, !tbaa !1461
  store ptr %15, ptr %retval, align 8, !dbg !11767
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11767

if.end39:                                         ; preds = %if.end27
  %16 = load ptr, ptr %spec, align 8, !dbg !11768, !tbaa !1461
  call void @Py_DECREF(ptr noundef %16), !dbg !11768
  %17 = load ptr, ptr %module, align 8, !dbg !11769, !tbaa !1461
  call void @Py_DECREF(ptr noundef %17), !dbg !11769
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11770
  br label %cleanup, !dbg !11770

cleanup:                                          ; preds = %if.end39, %if.then38
  call void @llvm.lifetime.end.p0(i64 8, ptr %spec) #10, !dbg !11770
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup46 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end44, !dbg !11771

if.else:                                          ; preds = %entry
  %call40 = call ptr @PyErr_Occurred(), !dbg !11772
  %tobool41 = icmp ne ptr %call40, null, !dbg !11772
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !11774

if.then42:                                        ; preds = %if.else
  call void @PyErr_Clear(), !dbg !11775
  br label %if.end43, !dbg !11777

if.end43:                                         ; preds = %if.then42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %cleanup.cont
  %18 = load ptr, ptr %name.addr, align 8, !dbg !11778, !tbaa !1461
  %19 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !11779, !tbaa !1461
  %call45 = call ptr @__Pyx__ImportDottedModule(ptr noundef %18, ptr noundef %19), !dbg !11780
  store ptr %call45, ptr %retval, align 8, !dbg !11781
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup46, !dbg !11781

cleanup46:                                        ; preds = %if.end44, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #10, !dbg !11782
  %20 = load ptr, ptr %retval, align 8, !dbg !11782
  ret ptr %20, !dbg !11782
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Fast(ptr noundef %o, i64 noundef %i, i32 noundef %is_list, i32 noundef %wraparound, i32 noundef %boundscheck) #3 !dbg !11783 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %is_list.addr = alloca i32, align 4
  %wraparound.addr = alloca i32, align 4
  %boundscheck.addr = alloca i32, align 4
  %n = alloca i64, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %n27 = alloca i64, align 8
  %r61 = alloca ptr, align 8
  %mm = alloca ptr, align 8
  %sm = alloca ptr, align 8
  %r75 = alloca ptr, align 8
  %key = alloca ptr, align 8
  %l = alloca i64, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !11787, metadata !DIExpression()), !dbg !11816
  store i64 %i, ptr %i.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !11788, metadata !DIExpression()), !dbg !11817
  store i32 %is_list, ptr %is_list.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %is_list.addr, metadata !11789, metadata !DIExpression()), !dbg !11818
  store i32 %wraparound, ptr %wraparound.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %wraparound.addr, metadata !11790, metadata !DIExpression()), !dbg !11819
  store i32 %boundscheck, ptr %boundscheck.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %boundscheck.addr, metadata !11791, metadata !DIExpression()), !dbg !11820
  %0 = load i32, ptr %is_list.addr, align 4, !dbg !11821, !tbaa !1557
  %tobool = icmp ne i32 %0, 0, !dbg !11821
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11822

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !11823, !tbaa !1461
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyList_Type), !dbg !11823
  %tobool1 = icmp ne i32 %call, 0, !dbg !11823
  br i1 %tobool1, label %if.then, label %if.else, !dbg !11824

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #10, !dbg !11825
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !11792, metadata !DIExpression()), !dbg !11826
  %2 = load i32, ptr %wraparound.addr, align 4, !dbg !11827, !tbaa !1557
  %tobool2 = icmp ne i32 %2, 0, !dbg !11828
  %lnot = xor i1 %tobool2, true, !dbg !11828
  %lnot.ext = zext i1 %lnot to i32, !dbg !11828
  %conv = sext i32 %lnot.ext to i64, !dbg !11829
  %3 = load i64, ptr %i.addr, align 8, !dbg !11830, !tbaa !1836
  %cmp = icmp sge i64 %3, 0, !dbg !11830
  %lnot4 = xor i1 %cmp, true, !dbg !11830
  %lnot6 = xor i1 %lnot4, true, !dbg !11830
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !11830
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !11830
  %expval = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !11830
  %or = or i64 %conv, %expval, !dbg !11831
  %tobool9 = icmp ne i64 %or, 0, !dbg !11831
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !11832

cond.true:                                        ; preds = %if.then
  %4 = load i64, ptr %i.addr, align 8, !dbg !11833, !tbaa !1836
  br label %cond.end, !dbg !11832

cond.false:                                       ; preds = %if.then
  %5 = load i64, ptr %i.addr, align 8, !dbg !11834, !tbaa !1836
  %6 = load ptr, ptr %o.addr, align 8, !dbg !11835, !tbaa !1461
  %call10 = call i64 @PyList_GET_SIZE(ptr noundef %6), !dbg !11835
  %add = add i64 %5, %call10, !dbg !11836
  br label %cond.end, !dbg !11832

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %add, %cond.false ], !dbg !11832
  store i64 %cond, ptr %n, align 8, !dbg !11826, !tbaa !1836
  %7 = load i32, ptr %boundscheck.addr, align 4, !dbg !11837, !tbaa !1557
  %tobool11 = icmp ne i32 %7, 0, !dbg !11837
  br i1 %tobool11, label %lor.lhs.false12, label %if.then23, !dbg !11838

lor.lhs.false12:                                  ; preds = %cond.end
  %8 = load i64, ptr %n, align 8, !dbg !11839, !tbaa !1836
  %9 = load ptr, ptr %o.addr, align 8, !dbg !11839, !tbaa !1461
  %call13 = call i64 @PyList_GET_SIZE(ptr noundef %9), !dbg !11839
  %call14 = call i32 @__Pyx_is_valid_index(i64 noundef %8, i64 noundef %call13), !dbg !11839
  %tobool15 = icmp ne i32 %call14, 0, !dbg !11839
  %lnot16 = xor i1 %tobool15, true, !dbg !11839
  %lnot18 = xor i1 %lnot16, true, !dbg !11839
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11839
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11839
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !11839
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !11839
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !11840

if.then23:                                        ; preds = %lor.lhs.false12, %cond.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #10, !dbg !11841
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !11795, metadata !DIExpression()), !dbg !11842
  %10 = load ptr, ptr %o.addr, align 8, !dbg !11843, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %10, i32 0, i32 1, !dbg !11843
  %11 = load ptr, ptr %ob_item, align 8, !dbg !11843, !tbaa !1868
  %12 = load i64, ptr %n, align 8, !dbg !11843, !tbaa !1836
  %arrayidx = getelementptr ptr, ptr %11, i64 %12, !dbg !11843
  %13 = load ptr, ptr %arrayidx, align 8, !dbg !11843, !tbaa !1461
  store ptr %13, ptr %r, align 8, !dbg !11842, !tbaa !1461
  %14 = load ptr, ptr %r, align 8, !dbg !11844, !tbaa !1461
  call void @Py_INCREF(ptr noundef %14), !dbg !11844
  %15 = load ptr, ptr %r, align 8, !dbg !11845, !tbaa !1461
  store ptr %15, ptr %retval, align 8, !dbg !11846
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #10, !dbg !11847
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false12
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11848
  br label %cleanup, !dbg !11848

cleanup:                                          ; preds = %if.end, %if.then23
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #10, !dbg !11848
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end156, !dbg !11849

if.else:                                          ; preds = %lor.lhs.false
  %16 = load ptr, ptr %o.addr, align 8, !dbg !11850, !tbaa !1461
  %call24 = call i32 @Py_IS_TYPE(ptr noundef %16, ptr noundef @PyTuple_Type), !dbg !11850
  %tobool25 = icmp ne i32 %call24, 0, !dbg !11850
  br i1 %tobool25, label %if.then26, label %if.else69, !dbg !11851

if.then26:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %n27) #10, !dbg !11852
  tail call void @llvm.dbg.declare(metadata ptr %n27, metadata !11798, metadata !DIExpression()), !dbg !11853
  %17 = load i32, ptr %wraparound.addr, align 4, !dbg !11854, !tbaa !1557
  %tobool28 = icmp ne i32 %17, 0, !dbg !11855
  %lnot29 = xor i1 %tobool28, true, !dbg !11855
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !11855
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !11856
  %18 = load i64, ptr %i.addr, align 8, !dbg !11857, !tbaa !1836
  %cmp32 = icmp sge i64 %18, 0, !dbg !11857
  %lnot34 = xor i1 %cmp32, true, !dbg !11857
  %lnot36 = xor i1 %lnot34, true, !dbg !11857
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !11857
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !11857
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 1), !dbg !11857
  %or40 = or i64 %conv31, %expval39, !dbg !11858
  %tobool41 = icmp ne i64 %or40, 0, !dbg !11858
  br i1 %tobool41, label %cond.true42, label %cond.false43, !dbg !11859

cond.true42:                                      ; preds = %if.then26
  %19 = load i64, ptr %i.addr, align 8, !dbg !11860, !tbaa !1836
  br label %cond.end46, !dbg !11859

cond.false43:                                     ; preds = %if.then26
  %20 = load i64, ptr %i.addr, align 8, !dbg !11861, !tbaa !1836
  %21 = load ptr, ptr %o.addr, align 8, !dbg !11862, !tbaa !1461
  %call44 = call i64 @PyTuple_GET_SIZE(ptr noundef %21), !dbg !11862
  %add45 = add i64 %20, %call44, !dbg !11863
  br label %cond.end46, !dbg !11859

cond.end46:                                       ; preds = %cond.false43, %cond.true42
  %cond47 = phi i64 [ %19, %cond.true42 ], [ %add45, %cond.false43 ], !dbg !11859
  store i64 %cond47, ptr %n27, align 8, !dbg !11853, !tbaa !1836
  %22 = load i32, ptr %boundscheck.addr, align 4, !dbg !11864, !tbaa !1557
  %tobool48 = icmp ne i32 %22, 0, !dbg !11864
  br i1 %tobool48, label %lor.lhs.false49, label %if.then60, !dbg !11865

lor.lhs.false49:                                  ; preds = %cond.end46
  %23 = load i64, ptr %n27, align 8, !dbg !11866, !tbaa !1836
  %24 = load ptr, ptr %o.addr, align 8, !dbg !11866, !tbaa !1461
  %call50 = call i64 @PyTuple_GET_SIZE(ptr noundef %24), !dbg !11866
  %call51 = call i32 @__Pyx_is_valid_index(i64 noundef %23, i64 noundef %call50), !dbg !11866
  %tobool52 = icmp ne i32 %call51, 0, !dbg !11866
  %lnot53 = xor i1 %tobool52, true, !dbg !11866
  %lnot55 = xor i1 %lnot53, true, !dbg !11866
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !11866
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !11866
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 1), !dbg !11866
  %tobool59 = icmp ne i64 %expval58, 0, !dbg !11866
  br i1 %tobool59, label %if.then60, label %if.end65, !dbg !11867

if.then60:                                        ; preds = %lor.lhs.false49, %cond.end46
  call void @llvm.lifetime.start.p0(i64 8, ptr %r61) #10, !dbg !11868
  tail call void @llvm.dbg.declare(metadata ptr %r61, metadata !11801, metadata !DIExpression()), !dbg !11869
  %25 = load ptr, ptr %o.addr, align 8, !dbg !11870, !tbaa !1461
  %ob_item62 = getelementptr inbounds %struct.PyTupleObject, ptr %25, i32 0, i32 1, !dbg !11870
  %26 = load i64, ptr %n27, align 8, !dbg !11870, !tbaa !1836
  %arrayidx63 = getelementptr [1 x ptr], ptr %ob_item62, i64 0, i64 %26, !dbg !11870
  %27 = load ptr, ptr %arrayidx63, align 8, !dbg !11870, !tbaa !1461
  store ptr %27, ptr %r61, align 8, !dbg !11869, !tbaa !1461
  %28 = load ptr, ptr %r61, align 8, !dbg !11871, !tbaa !1461
  call void @Py_INCREF(ptr noundef %28), !dbg !11871
  %29 = load ptr, ptr %r61, align 8, !dbg !11872, !tbaa !1461
  store ptr %29, ptr %retval, align 8, !dbg !11873
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %r61) #10, !dbg !11874
  br label %cleanup66

if.end65:                                         ; preds = %lor.lhs.false49
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11875
  br label %cleanup66, !dbg !11875

cleanup66:                                        ; preds = %if.end65, %if.then60
  call void @llvm.lifetime.end.p0(i64 8, ptr %n27) #10, !dbg !11875
  %cleanup.dest67 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest67, label %unreachable [
    i32 0, label %cleanup.cont68
    i32 1, label %return
  ]

cleanup.cont68:                                   ; preds = %cleanup66
  br label %if.end155, !dbg !11876

if.else69:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %mm) #10, !dbg !11877
  tail call void @llvm.dbg.declare(metadata ptr %mm, metadata !11804, metadata !DIExpression()), !dbg !11878
  %30 = load ptr, ptr %o.addr, align 8, !dbg !11879, !tbaa !1461
  %call70 = call ptr @Py_TYPE(ptr noundef %30), !dbg !11879
  %tp_as_mapping = getelementptr inbounds %struct._typeobject, ptr %call70, i32 0, i32 12, !dbg !11880
  %31 = load ptr, ptr %tp_as_mapping, align 8, !dbg !11880, !tbaa !11881
  store ptr %31, ptr %mm, align 8, !dbg !11878, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %sm) #10, !dbg !11882
  tail call void @llvm.dbg.declare(metadata ptr %sm, metadata !11806, metadata !DIExpression()), !dbg !11883
  %32 = load ptr, ptr %o.addr, align 8, !dbg !11884, !tbaa !1461
  %call71 = call ptr @Py_TYPE(ptr noundef %32), !dbg !11884
  %tp_as_sequence = getelementptr inbounds %struct._typeobject, ptr %call71, i32 0, i32 11, !dbg !11885
  %33 = load ptr, ptr %tp_as_sequence, align 8, !dbg !11885, !tbaa !11886
  store ptr %33, ptr %sm, align 8, !dbg !11883, !tbaa !1461
  %34 = load ptr, ptr %mm, align 8, !dbg !11887, !tbaa !1461
  %tobool72 = icmp ne ptr %34, null, !dbg !11887
  br i1 %tobool72, label %land.lhs.true, label %if.end93, !dbg !11888

land.lhs.true:                                    ; preds = %if.else69
  %35 = load ptr, ptr %mm, align 8, !dbg !11889, !tbaa !1461
  %mp_subscript = getelementptr inbounds %struct.PyMappingMethods, ptr %35, i32 0, i32 1, !dbg !11890
  %36 = load ptr, ptr %mp_subscript, align 8, !dbg !11890, !tbaa !11891
  %tobool73 = icmp ne ptr %36, null, !dbg !11889
  br i1 %tobool73, label %if.then74, label %if.end93, !dbg !11893

if.then74:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %r75) #10, !dbg !11894
  tail call void @llvm.dbg.declare(metadata ptr %r75, metadata !11807, metadata !DIExpression()), !dbg !11895
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #10, !dbg !11894
  tail call void @llvm.dbg.declare(metadata ptr %key, metadata !11810, metadata !DIExpression()), !dbg !11896
  %37 = load i64, ptr %i.addr, align 8, !dbg !11897, !tbaa !1836
  %call76 = call ptr @PyLong_FromSsize_t(i64 noundef %37), !dbg !11898
  store ptr %call76, ptr %key, align 8, !dbg !11896, !tbaa !1461
  %38 = load ptr, ptr %key, align 8, !dbg !11899, !tbaa !1461
  %tobool77 = icmp ne ptr %38, null, !dbg !11899
  %lnot78 = xor i1 %tobool77, true, !dbg !11899
  %lnot80 = xor i1 %lnot78, true, !dbg !11899
  %lnot82 = xor i1 %lnot80, true, !dbg !11899
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !11899
  %conv84 = sext i32 %lnot.ext83 to i64, !dbg !11899
  %expval85 = call i64 @llvm.expect.i64(i64 %conv84, i64 0), !dbg !11899
  %tobool86 = icmp ne i64 %expval85, 0, !dbg !11899
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !11901

if.then87:                                        ; preds = %if.then74
  store ptr null, ptr %retval, align 8, !dbg !11902
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup91, !dbg !11902

if.end88:                                         ; preds = %if.then74
  %39 = load ptr, ptr %mm, align 8, !dbg !11903, !tbaa !1461
  %mp_subscript89 = getelementptr inbounds %struct.PyMappingMethods, ptr %39, i32 0, i32 1, !dbg !11904
  %40 = load ptr, ptr %mp_subscript89, align 8, !dbg !11904, !tbaa !11891
  %41 = load ptr, ptr %o.addr, align 8, !dbg !11905, !tbaa !1461
  %42 = load ptr, ptr %key, align 8, !dbg !11906, !tbaa !1461
  %call90 = call ptr %40(ptr noundef %41, ptr noundef %42), !dbg !11903
  store ptr %call90, ptr %r75, align 8, !dbg !11907, !tbaa !1461
  %43 = load ptr, ptr %key, align 8, !dbg !11908, !tbaa !1461
  call void @Py_DECREF(ptr noundef %43), !dbg !11908
  %44 = load ptr, ptr %r75, align 8, !dbg !11909, !tbaa !1461
  store ptr %44, ptr %retval, align 8, !dbg !11910
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup91, !dbg !11910

cleanup91:                                        ; preds = %if.end88, %if.then87
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #10, !dbg !11911
  call void @llvm.lifetime.end.p0(i64 8, ptr %r75) #10, !dbg !11911
  br label %cleanup151

if.end93:                                         ; preds = %land.lhs.true, %if.else69
  %45 = load ptr, ptr %sm, align 8, !dbg !11912, !tbaa !1461
  %tobool94 = icmp ne ptr %45, null, !dbg !11912
  br i1 %tobool94, label %land.rhs, label %land.end, !dbg !11912

land.rhs:                                         ; preds = %if.end93
  %46 = load ptr, ptr %sm, align 8, !dbg !11912, !tbaa !1461
  %sq_item = getelementptr inbounds %struct.PySequenceMethods, ptr %46, i32 0, i32 3, !dbg !11912
  %47 = load ptr, ptr %sq_item, align 8, !dbg !11912, !tbaa !11913
  %tobool95 = icmp ne ptr %47, null, !dbg !11912
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end93
  %48 = phi i1 [ false, %if.end93 ], [ %tobool95, %land.rhs ], !dbg !11915
  %lnot96 = xor i1 %48, true, !dbg !11912
  %lnot98 = xor i1 %lnot96, true, !dbg !11912
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !11912
  %conv100 = sext i32 %lnot.ext99 to i64, !dbg !11912
  %expval101 = call i64 @llvm.expect.i64(i64 %conv100, i64 1), !dbg !11912
  %tobool102 = icmp ne i64 %expval101, 0, !dbg !11912
  br i1 %tobool102, label %if.then103, label %if.end150, !dbg !11916

if.then103:                                       ; preds = %land.end
  %49 = load i32, ptr %wraparound.addr, align 4, !dbg !11917, !tbaa !1557
  %tobool104 = icmp ne i32 %49, 0, !dbg !11917
  br i1 %tobool104, label %land.lhs.true105, label %if.end147, !dbg !11918

land.lhs.true105:                                 ; preds = %if.then103
  %50 = load i64, ptr %i.addr, align 8, !dbg !11919, !tbaa !1836
  %cmp106 = icmp slt i64 %50, 0, !dbg !11919
  %lnot108 = xor i1 %cmp106, true, !dbg !11919
  %lnot110 = xor i1 %lnot108, true, !dbg !11919
  %lnot.ext111 = zext i1 %lnot110 to i32, !dbg !11919
  %conv112 = sext i32 %lnot.ext111 to i64, !dbg !11919
  %expval113 = call i64 @llvm.expect.i64(i64 %conv112, i64 0), !dbg !11919
  %tobool114 = icmp ne i64 %expval113, 0, !dbg !11919
  br i1 %tobool114, label %land.lhs.true115, label %if.end147, !dbg !11920

land.lhs.true115:                                 ; preds = %land.lhs.true105
  %51 = load ptr, ptr %sm, align 8, !dbg !11921, !tbaa !1461
  %sq_length = getelementptr inbounds %struct.PySequenceMethods, ptr %51, i32 0, i32 0, !dbg !11921
  %52 = load ptr, ptr %sq_length, align 8, !dbg !11921, !tbaa !11922
  %tobool116 = icmp ne ptr %52, null, !dbg !11921
  %lnot117 = xor i1 %tobool116, true, !dbg !11921
  %lnot119 = xor i1 %lnot117, true, !dbg !11921
  %lnot.ext120 = zext i1 %lnot119 to i32, !dbg !11921
  %conv121 = sext i32 %lnot.ext120 to i64, !dbg !11921
  %expval122 = call i64 @llvm.expect.i64(i64 %conv121, i64 1), !dbg !11921
  %tobool123 = icmp ne i64 %expval122, 0, !dbg !11921
  br i1 %tobool123, label %if.then124, label %if.end147, !dbg !11923

if.then124:                                       ; preds = %land.lhs.true115
  call void @llvm.lifetime.start.p0(i64 8, ptr %l) #10, !dbg !11924
  tail call void @llvm.dbg.declare(metadata ptr %l, metadata !11811, metadata !DIExpression()), !dbg !11925
  %53 = load ptr, ptr %sm, align 8, !dbg !11926, !tbaa !1461
  %sq_length125 = getelementptr inbounds %struct.PySequenceMethods, ptr %53, i32 0, i32 0, !dbg !11927
  %54 = load ptr, ptr %sq_length125, align 8, !dbg !11927, !tbaa !11922
  %55 = load ptr, ptr %o.addr, align 8, !dbg !11928, !tbaa !1461
  %call126 = call i64 %54(ptr noundef %55), !dbg !11926
  store i64 %call126, ptr %l, align 8, !dbg !11925, !tbaa !1836
  %56 = load i64, ptr %l, align 8, !dbg !11929, !tbaa !1836
  %cmp127 = icmp sge i64 %56, 0, !dbg !11929
  %lnot129 = xor i1 %cmp127, true, !dbg !11929
  %lnot131 = xor i1 %lnot129, true, !dbg !11929
  %lnot.ext132 = zext i1 %lnot131 to i32, !dbg !11929
  %conv133 = sext i32 %lnot.ext132 to i64, !dbg !11929
  %expval134 = call i64 @llvm.expect.i64(i64 %conv133, i64 1), !dbg !11929
  %tobool135 = icmp ne i64 %expval134, 0, !dbg !11929
  br i1 %tobool135, label %if.then136, label %if.else138, !dbg !11931

if.then136:                                       ; preds = %if.then124
  %57 = load i64, ptr %l, align 8, !dbg !11932, !tbaa !1836
  %58 = load i64, ptr %i.addr, align 8, !dbg !11934, !tbaa !1836
  %add137 = add i64 %58, %57, !dbg !11934
  store i64 %add137, ptr %i.addr, align 8, !dbg !11934, !tbaa !1836
  br label %if.end143, !dbg !11935

if.else138:                                       ; preds = %if.then124
  %59 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !11936, !tbaa !1461
  %call139 = call i32 @PyErr_ExceptionMatches(ptr noundef %59), !dbg !11939
  %tobool140 = icmp ne i32 %call139, 0, !dbg !11939
  br i1 %tobool140, label %if.end142, label %if.then141, !dbg !11940

if.then141:                                       ; preds = %if.else138
  store ptr null, ptr %retval, align 8, !dbg !11941
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup144, !dbg !11941

if.end142:                                        ; preds = %if.else138
  call void @PyErr_Clear(), !dbg !11942
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then136
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11943
  br label %cleanup144, !dbg !11943

cleanup144:                                       ; preds = %if.end143, %if.then141
  call void @llvm.lifetime.end.p0(i64 8, ptr %l) #10, !dbg !11943
  %cleanup.dest145 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest145, label %cleanup151 [
    i32 0, label %cleanup.cont146
  ]

cleanup.cont146:                                  ; preds = %cleanup144
  br label %if.end147, !dbg !11944

if.end147:                                        ; preds = %cleanup.cont146, %land.lhs.true115, %land.lhs.true105, %if.then103
  %60 = load ptr, ptr %sm, align 8, !dbg !11945, !tbaa !1461
  %sq_item148 = getelementptr inbounds %struct.PySequenceMethods, ptr %60, i32 0, i32 3, !dbg !11946
  %61 = load ptr, ptr %sq_item148, align 8, !dbg !11946, !tbaa !11913
  %62 = load ptr, ptr %o.addr, align 8, !dbg !11947, !tbaa !1461
  %63 = load i64, ptr %i.addr, align 8, !dbg !11948, !tbaa !1836
  %call149 = call ptr %61(ptr noundef %62, i64 noundef %63), !dbg !11945
  store ptr %call149, ptr %retval, align 8, !dbg !11949
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup151, !dbg !11949

if.end150:                                        ; preds = %land.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11950
  br label %cleanup151, !dbg !11950

cleanup151:                                       ; preds = %if.end150, %if.end147, %cleanup144, %cleanup91
  call void @llvm.lifetime.end.p0(i64 8, ptr %sm) #10, !dbg !11950
  call void @llvm.lifetime.end.p0(i64 8, ptr %mm) #10, !dbg !11950
  %cleanup.dest153 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest153, label %unreachable [
    i32 0, label %cleanup.cont154
    i32 1, label %return
  ]

cleanup.cont154:                                  ; preds = %cleanup151
  br label %if.end155

if.end155:                                        ; preds = %cleanup.cont154, %cleanup.cont68
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %cleanup.cont
  %64 = load ptr, ptr %o.addr, align 8, !dbg !11951, !tbaa !1461
  %65 = load i64, ptr %i.addr, align 8, !dbg !11952, !tbaa !1836
  %call157 = call ptr @PyLong_FromSsize_t(i64 noundef %65), !dbg !11953
  %call158 = call ptr @__Pyx_GetItemInt_Generic(ptr noundef %64, ptr noundef %call157), !dbg !11954
  store ptr %call158, ptr %retval, align 8, !dbg !11955
  br label %return, !dbg !11955

return:                                           ; preds = %if.end156, %cleanup151, %cleanup66, %cleanup
  %66 = load ptr, ptr %retval, align 8, !dbg !11956
  ret ptr %66, !dbg !11956

unreachable:                                      ; preds = %cleanup151, %cleanup66, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__ImportDottedModule_Lookup(ptr noundef %name) #0 !dbg !11957 {
entry:
  %name.addr = alloca ptr, align 8
  %imported_module = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !11959, metadata !DIExpression()), !dbg !11961
  call void @llvm.lifetime.start.p0(i64 8, ptr %imported_module) #10, !dbg !11962
  tail call void @llvm.dbg.declare(metadata ptr %imported_module, metadata !11960, metadata !DIExpression()), !dbg !11963
  %0 = load ptr, ptr %name.addr, align 8, !dbg !11964, !tbaa !1461
  %call = call ptr @PyImport_GetModule(ptr noundef %0), !dbg !11965
  store ptr %call, ptr %imported_module, align 8, !dbg !11966, !tbaa !1461
  %1 = load ptr, ptr %imported_module, align 8, !dbg !11967, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %imported_module) #10, !dbg !11968
  ret ptr %1, !dbg !11969
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__ImportDottedModule(ptr noundef %name, ptr noundef %parts_tuple) #0 !dbg !11970 {
entry:
  %retval = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %parts_tuple.addr = alloca ptr, align 8
  %imported_module = alloca ptr, align 8
  %module = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !11972, metadata !DIExpression()), !dbg !11976
  store ptr %parts_tuple, ptr %parts_tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %parts_tuple.addr, metadata !11973, metadata !DIExpression()), !dbg !11977
  call void @llvm.lifetime.start.p0(i64 8, ptr %imported_module) #10, !dbg !11978
  tail call void @llvm.dbg.declare(metadata ptr %imported_module, metadata !11974, metadata !DIExpression()), !dbg !11979
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #10, !dbg !11980
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !11975, metadata !DIExpression()), !dbg !11981
  %0 = load ptr, ptr %name.addr, align 8, !dbg !11982, !tbaa !1461
  %call = call ptr @__Pyx_Import(ptr noundef %0, ptr noundef null, i32 noundef 0), !dbg !11983
  store ptr %call, ptr %module, align 8, !dbg !11981, !tbaa !1461
  %1 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !11984, !tbaa !1461
  %tobool = icmp ne ptr %1, null, !dbg !11984
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11986

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %module, align 8, !dbg !11987, !tbaa !1461
  %tobool1 = icmp ne ptr %2, null, !dbg !11987
  %lnot = xor i1 %tobool1, true, !dbg !11987
  %lnot2 = xor i1 %lnot, true, !dbg !11987
  %lnot3 = xor i1 %lnot2, true, !dbg !11987
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11987
  %conv = sext i32 %lnot.ext to i64, !dbg !11987
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11987
  %tobool4 = icmp ne i64 %expval, 0, !dbg !11987
  br i1 %tobool4, label %if.then, label %if.end, !dbg !11988

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load ptr, ptr %module, align 8, !dbg !11989, !tbaa !1461
  store ptr %3, ptr %retval, align 8, !dbg !11990
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11990

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %name.addr, align 8, !dbg !11991, !tbaa !1461
  %call5 = call ptr @__Pyx__ImportDottedModule_Lookup(ptr noundef %4), !dbg !11992
  store ptr %call5, ptr %imported_module, align 8, !dbg !11993, !tbaa !1461
  %5 = load ptr, ptr %imported_module, align 8, !dbg !11994, !tbaa !1461
  %tobool6 = icmp ne ptr %5, null, !dbg !11994
  %lnot7 = xor i1 %tobool6, true, !dbg !11994
  %lnot9 = xor i1 %lnot7, true, !dbg !11994
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !11994
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !11994
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1), !dbg !11994
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !11994
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11996

if.then14:                                        ; preds = %if.end
  %6 = load ptr, ptr %module, align 8, !dbg !11997, !tbaa !1461
  call void @Py_DECREF(ptr noundef %6), !dbg !11997
  %7 = load ptr, ptr %imported_module, align 8, !dbg !11999, !tbaa !1461
  store ptr %7, ptr %retval, align 8, !dbg !12000
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12000

if.end15:                                         ; preds = %if.end
  call void @PyErr_Clear(), !dbg !12001
  %8 = load ptr, ptr %module, align 8, !dbg !12002, !tbaa !1461
  %9 = load ptr, ptr %name.addr, align 8, !dbg !12003, !tbaa !1461
  %10 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !12004, !tbaa !1461
  %call16 = call ptr @__Pyx_ImportDottedModule_WalkParts(ptr noundef %8, ptr noundef %9, ptr noundef %10), !dbg !12005
  store ptr %call16, ptr %retval, align 8, !dbg !12006
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12006

cleanup:                                          ; preds = %if.end15, %if.then14, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #10, !dbg !12007
  call void @llvm.lifetime.end.p0(i64 8, ptr %imported_module) #10, !dbg !12007
  %11 = load ptr, ptr %retval, align 8, !dbg !12007
  ret ptr %11, !dbg !12007
}

declare !dbg !12008 ptr @PyImport_GetModule(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_Import(ptr noundef %name, ptr noundef %from_list, i32 noundef %level) #0 !dbg !12009 {
entry:
  %name.addr = alloca ptr, align 8
  %from_list.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %module = alloca ptr, align 8
  %empty_dict = alloca ptr, align 8
  %empty_list = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !12011, metadata !DIExpression()), !dbg !12018
  store ptr %from_list, ptr %from_list.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %from_list.addr, metadata !12012, metadata !DIExpression()), !dbg !12019
  store i32 %level, ptr %level.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !12013, metadata !DIExpression()), !dbg !12020
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #10, !dbg !12021
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !12014, metadata !DIExpression()), !dbg !12022
  store ptr null, ptr %module, align 8, !dbg !12022, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_dict) #10, !dbg !12023
  tail call void @llvm.dbg.declare(metadata ptr %empty_dict, metadata !12015, metadata !DIExpression()), !dbg !12024
  store ptr null, ptr %empty_dict, align 8, !dbg !12024, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_list) #10, !dbg !12025
  tail call void @llvm.dbg.declare(metadata ptr %empty_list, metadata !12016, metadata !DIExpression()), !dbg !12026
  store ptr null, ptr %empty_list, align 8, !dbg !12026, !tbaa !1461
  %call = call ptr @PyDict_New(), !dbg !12027
  store ptr %call, ptr %empty_dict, align 8, !dbg !12028, !tbaa !1461
  %0 = load ptr, ptr %empty_dict, align 8, !dbg !12029, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !12029
  %lnot = xor i1 %tobool, true, !dbg !12029
  %lnot1 = xor i1 %lnot, true, !dbg !12029
  %lnot2 = xor i1 %lnot1, true, !dbg !12029
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12029
  %conv = sext i32 %lnot.ext to i64, !dbg !12029
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12029
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12029
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12031

if.then:                                          ; preds = %entry
  br label %bad, !dbg !12032

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %level.addr, align 4, !dbg !12033, !tbaa !1557
  %cmp = icmp eq i32 %1, -1, !dbg !12036
  br i1 %cmp, label %if.then5, label %if.end32, !dbg !12037

if.then5:                                         ; preds = %if.end
  %2 = load ptr, ptr %name.addr, align 8, !dbg !12038, !tbaa !1461
  %3 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12042, !tbaa !1461
  %__pyx_d = getelementptr inbounds %struct.__pyx_mstate, ptr %3, i32 0, i32 0, !dbg !12042
  %4 = load ptr, ptr %__pyx_d, align 8, !dbg !12042, !tbaa !1598
  %5 = load ptr, ptr %empty_dict, align 8, !dbg !12043, !tbaa !1461
  %6 = load ptr, ptr %from_list.addr, align 8, !dbg !12044, !tbaa !1461
  %call6 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %2, ptr noundef %4, ptr noundef %5, ptr noundef %6, i32 noundef 1), !dbg !12045
  store ptr %call6, ptr %module, align 8, !dbg !12046, !tbaa !1461
  %7 = load ptr, ptr %module, align 8, !dbg !12047, !tbaa !1461
  %tobool7 = icmp ne ptr %7, null, !dbg !12047
  %lnot8 = xor i1 %tobool7, true, !dbg !12047
  %lnot10 = xor i1 %lnot8, true, !dbg !12047
  %lnot12 = xor i1 %lnot10, true, !dbg !12047
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !12047
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !12047
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !12047
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !12047
  br i1 %tobool16, label %if.then17, label %if.end31, !dbg !12049

if.then17:                                        ; preds = %if.then5
  %8 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !12050, !tbaa !1461
  %call18 = call i32 @PyErr_ExceptionMatches(ptr noundef %8), !dbg !12050
  %tobool19 = icmp ne i32 %call18, 0, !dbg !12050
  %lnot20 = xor i1 %tobool19, true, !dbg !12050
  %lnot22 = xor i1 %lnot20, true, !dbg !12050
  %lnot24 = xor i1 %lnot22, true, !dbg !12050
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !12050
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !12050
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0), !dbg !12050
  %tobool28 = icmp ne i64 %expval27, 0, !dbg !12050
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !12053

if.then29:                                        ; preds = %if.then17
  br label %bad, !dbg !12054

if.end30:                                         ; preds = %if.then17
  call void @PyErr_Clear(), !dbg !12055
  br label %if.end31, !dbg !12056

if.end31:                                         ; preds = %if.end30, %if.then5
  store i32 0, ptr %level.addr, align 4, !dbg !12057, !tbaa !1557
  br label %if.end32, !dbg !12058

if.end32:                                         ; preds = %if.end31, %if.end
  %9 = load ptr, ptr %module, align 8, !dbg !12059, !tbaa !1461
  %tobool33 = icmp ne ptr %9, null, !dbg !12059
  br i1 %tobool33, label %if.end37, label %if.then34, !dbg !12061

if.then34:                                        ; preds = %if.end32
  %10 = load ptr, ptr %name.addr, align 8, !dbg !12062, !tbaa !1461
  %11 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12064, !tbaa !1461
  %__pyx_d35 = getelementptr inbounds %struct.__pyx_mstate, ptr %11, i32 0, i32 0, !dbg !12064
  %12 = load ptr, ptr %__pyx_d35, align 8, !dbg !12064, !tbaa !1598
  %13 = load ptr, ptr %empty_dict, align 8, !dbg !12065, !tbaa !1461
  %14 = load ptr, ptr %from_list.addr, align 8, !dbg !12066, !tbaa !1461
  %15 = load i32, ptr %level.addr, align 4, !dbg !12067, !tbaa !1557
  %call36 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %10, ptr noundef %12, ptr noundef %13, ptr noundef %14, i32 noundef %15), !dbg !12068
  store ptr %call36, ptr %module, align 8, !dbg !12069, !tbaa !1461
  br label %if.end37, !dbg !12070

if.end37:                                         ; preds = %if.then34, %if.end32
  br label %bad, !dbg !12071

bad:                                              ; preds = %if.end37, %if.then29, %if.then
  tail call void @llvm.dbg.label(metadata !12017), !dbg !12072
  %16 = load ptr, ptr %empty_dict, align 8, !dbg !12073, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %16), !dbg !12073
  %17 = load ptr, ptr %empty_list, align 8, !dbg !12074, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %17), !dbg !12074
  %18 = load ptr, ptr %module, align 8, !dbg !12075, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_list) #10, !dbg !12076
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_dict) #10, !dbg !12076
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #10, !dbg !12076
  ret ptr %18, !dbg !12077
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_ImportDottedModule_WalkParts(ptr noundef %module, ptr noundef %name, ptr noundef %parts_tuple) #0 !dbg !12078 {
entry:
  %retval = alloca ptr, align 8
  %module.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %parts_tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %nparts = alloca i64, align 8
  %part = alloca ptr, align 8
  %submodule = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %module, ptr %module.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !12080, metadata !DIExpression()), !dbg !12090
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !12081, metadata !DIExpression()), !dbg !12091
  store ptr %parts_tuple, ptr %parts_tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %parts_tuple.addr, metadata !12082, metadata !DIExpression()), !dbg !12092
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #10, !dbg !12093
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !12083, metadata !DIExpression()), !dbg !12094
  call void @llvm.lifetime.start.p0(i64 8, ptr %nparts) #10, !dbg !12093
  tail call void @llvm.dbg.declare(metadata ptr %nparts, metadata !12084, metadata !DIExpression()), !dbg !12095
  %0 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !12096, !tbaa !1461
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !12096
  store i64 %call, ptr %nparts, align 8, !dbg !12097, !tbaa !1836
  store i64 1, ptr %i, align 8, !dbg !12098, !tbaa !1836
  br label %for.cond, !dbg !12099

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !dbg !12100, !tbaa !1836
  %2 = load i64, ptr %nparts, align 8, !dbg !12101, !tbaa !1836
  %cmp = icmp slt i64 %1, %2, !dbg !12102
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12103

land.rhs:                                         ; preds = %for.cond
  %3 = load ptr, ptr %module.addr, align 8, !dbg !12104, !tbaa !1461
  %tobool = icmp ne ptr %3, null, !dbg !12103
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !12105
  br i1 %4, label %for.body, label %for.end, !dbg !12106

for.body:                                         ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %part) #10, !dbg !12107
  tail call void @llvm.dbg.declare(metadata ptr %part, metadata !12085, metadata !DIExpression()), !dbg !12108
  call void @llvm.lifetime.start.p0(i64 8, ptr %submodule) #10, !dbg !12107
  tail call void @llvm.dbg.declare(metadata ptr %submodule, metadata !12089, metadata !DIExpression()), !dbg !12109
  %5 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !12110, !tbaa !1461
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1, !dbg !12110
  %6 = load i64, ptr %i, align 8, !dbg !12110, !tbaa !1836
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %6, !dbg !12110
  %7 = load ptr, ptr %arrayidx, align 8, !dbg !12110, !tbaa !1461
  store ptr %7, ptr %part, align 8, !dbg !12111, !tbaa !1461
  %8 = load ptr, ptr %module.addr, align 8, !dbg !12112, !tbaa !1461
  %9 = load ptr, ptr %part, align 8, !dbg !12113, !tbaa !1461
  %call1 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %8, ptr noundef %9), !dbg !12114
  store ptr %call1, ptr %submodule, align 8, !dbg !12115, !tbaa !1461
  %10 = load ptr, ptr %module.addr, align 8, !dbg !12116, !tbaa !1461
  call void @Py_DECREF(ptr noundef %10), !dbg !12116
  %11 = load ptr, ptr %submodule, align 8, !dbg !12117, !tbaa !1461
  store ptr %11, ptr %module.addr, align 8, !dbg !12118, !tbaa !1461
  call void @llvm.lifetime.end.p0(i64 8, ptr %submodule) #10, !dbg !12119
  call void @llvm.lifetime.end.p0(i64 8, ptr %part) #10, !dbg !12119
  br label %for.inc, !dbg !12120

for.inc:                                          ; preds = %for.body
  %12 = load i64, ptr %i, align 8, !dbg !12121, !tbaa !1836
  %inc = add i64 %12, 1, !dbg !12121
  store i64 %inc, ptr %i, align 8, !dbg !12121, !tbaa !1836
  br label %for.cond, !dbg !12122, !llvm.loop !12123

for.end:                                          ; preds = %land.end
  %13 = load ptr, ptr %module.addr, align 8, !dbg !12125, !tbaa !1461
  %tobool2 = icmp ne ptr %13, null, !dbg !12125
  %lnot = xor i1 %tobool2, true, !dbg !12125
  %lnot3 = xor i1 %lnot, true, !dbg !12125
  %lnot4 = xor i1 %lnot3, true, !dbg !12125
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !12125
  %conv = sext i32 %lnot.ext to i64, !dbg !12125
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12125
  %tobool5 = icmp ne i64 %expval, 0, !dbg !12125
  br i1 %tobool5, label %if.then, label %if.end, !dbg !12127

if.then:                                          ; preds = %for.end
  %14 = load ptr, ptr %name.addr, align 8, !dbg !12128, !tbaa !1461
  %15 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !12130, !tbaa !1461
  %16 = load i64, ptr %i, align 8, !dbg !12131, !tbaa !1836
  %call6 = call ptr @__Pyx__ImportDottedModule_Error(ptr noundef %14, ptr noundef %15, i64 noundef %16), !dbg !12132
  store ptr %call6, ptr %retval, align 8, !dbg !12133
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12133

if.end:                                           ; preds = %for.end
  %17 = load ptr, ptr %module.addr, align 8, !dbg !12134, !tbaa !1461
  store ptr %17, ptr %retval, align 8, !dbg !12135
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12135

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %nparts) #10, !dbg !12136
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #10, !dbg !12136
  %18 = load ptr, ptr %retval, align 8, !dbg !12136
  ret ptr %18, !dbg !12136
}

declare !dbg !12137 ptr @PyImport_ImportModuleLevelObject(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__ImportDottedModule_Error(ptr noundef %name, ptr noundef %parts_tuple, i64 noundef %count) #0 !dbg !12140 {
entry:
  %name.addr = alloca ptr, align 8
  %parts_tuple.addr = alloca ptr, align 8
  %count.addr = alloca i64, align 8
  %partial_name = alloca ptr, align 8
  %slice = alloca ptr, align 8
  %sep = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !12144, metadata !DIExpression()), !dbg !12151
  store ptr %parts_tuple, ptr %parts_tuple.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %parts_tuple.addr, metadata !12145, metadata !DIExpression()), !dbg !12152
  store i64 %count, ptr %count.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %count.addr, metadata !12146, metadata !DIExpression()), !dbg !12153
  call void @llvm.lifetime.start.p0(i64 8, ptr %partial_name) #10, !dbg !12154
  tail call void @llvm.dbg.declare(metadata ptr %partial_name, metadata !12147, metadata !DIExpression()), !dbg !12155
  store ptr null, ptr %partial_name, align 8, !dbg !12155, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %slice) #10, !dbg !12154
  tail call void @llvm.dbg.declare(metadata ptr %slice, metadata !12148, metadata !DIExpression()), !dbg !12156
  store ptr null, ptr %slice, align 8, !dbg !12156, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %sep) #10, !dbg !12154
  tail call void @llvm.dbg.declare(metadata ptr %sep, metadata !12149, metadata !DIExpression()), !dbg !12157
  store ptr null, ptr %sep, align 8, !dbg !12157, !tbaa !1461
  %call = call ptr @PyErr_Occurred(), !dbg !12158
  %tobool = icmp ne ptr %call, null, !dbg !12158
  %lnot = xor i1 %tobool, true, !dbg !12158
  %lnot1 = xor i1 %lnot, true, !dbg !12158
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12158
  %conv = sext i32 %lnot.ext to i64, !dbg !12158
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12158
  %tobool2 = icmp ne i64 %expval, 0, !dbg !12158
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12160

if.then:                                          ; preds = %entry
  call void @PyErr_Clear(), !dbg !12161
  br label %if.end, !dbg !12163

if.end:                                           ; preds = %if.then, %entry
  %0 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !12164, !tbaa !1461
  %call3 = call i64 @PyTuple_GET_SIZE(ptr noundef %0), !dbg !12164
  %1 = load i64, ptr %count.addr, align 8, !dbg !12164, !tbaa !1836
  %cmp = icmp eq i64 %call3, %1, !dbg !12164
  %lnot5 = xor i1 %cmp, true, !dbg !12164
  %lnot7 = xor i1 %lnot5, true, !dbg !12164
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !12164
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !12164
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !12164
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !12164
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !12166

if.then12:                                        ; preds = %if.end
  %2 = load ptr, ptr %name.addr, align 8, !dbg !12167, !tbaa !1461
  store ptr %2, ptr %partial_name, align 8, !dbg !12169, !tbaa !1461
  br label %if.end40, !dbg !12170

if.else:                                          ; preds = %if.end
  %3 = load ptr, ptr %parts_tuple.addr, align 8, !dbg !12171, !tbaa !1461
  %4 = load i64, ptr %count.addr, align 8, !dbg !12173, !tbaa !1836
  %call13 = call ptr @PySequence_GetSlice(ptr noundef %3, i64 noundef 0, i64 noundef %4), !dbg !12174
  store ptr %call13, ptr %slice, align 8, !dbg !12175, !tbaa !1461
  %5 = load ptr, ptr %slice, align 8, !dbg !12176, !tbaa !1461
  %tobool14 = icmp ne ptr %5, null, !dbg !12176
  %lnot15 = xor i1 %tobool14, true, !dbg !12176
  %lnot17 = xor i1 %lnot15, true, !dbg !12176
  %lnot19 = xor i1 %lnot17, true, !dbg !12176
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !12176
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !12176
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0), !dbg !12176
  %tobool23 = icmp ne i64 %expval22, 0, !dbg !12176
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !12178

if.then24:                                        ; preds = %if.else
  br label %bad, !dbg !12179

if.end25:                                         ; preds = %if.else
  %call26 = call ptr @PyUnicode_FromStringAndSize(ptr noundef @.str.74, i64 noundef 1), !dbg !12180
  store ptr %call26, ptr %sep, align 8, !dbg !12181, !tbaa !1461
  %6 = load ptr, ptr %sep, align 8, !dbg !12182, !tbaa !1461
  %tobool27 = icmp ne ptr %6, null, !dbg !12182
  %lnot28 = xor i1 %tobool27, true, !dbg !12182
  %lnot30 = xor i1 %lnot28, true, !dbg !12182
  %lnot32 = xor i1 %lnot30, true, !dbg !12182
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !12182
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !12182
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0), !dbg !12182
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !12182
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !12184

if.then37:                                        ; preds = %if.end25
  br label %bad, !dbg !12185

if.end38:                                         ; preds = %if.end25
  %7 = load ptr, ptr %sep, align 8, !dbg !12186, !tbaa !1461
  %8 = load ptr, ptr %slice, align 8, !dbg !12187, !tbaa !1461
  %call39 = call ptr @PyUnicode_Join(ptr noundef %7, ptr noundef %8), !dbg !12188
  store ptr %call39, ptr %partial_name, align 8, !dbg !12189, !tbaa !1461
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %if.then12
  %9 = load ptr, ptr @PyExc_ModuleNotFoundError, align 8, !dbg !12190, !tbaa !1461
  %10 = load ptr, ptr %partial_name, align 8, !dbg !12191, !tbaa !1461
  %call41 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %9, ptr noundef @.str.75, ptr noundef %10), !dbg !12192
  br label %bad, !dbg !12192

bad:                                              ; preds = %if.end40, %if.then37, %if.then24
  tail call void @llvm.dbg.label(metadata !12150), !dbg !12193
  %11 = load ptr, ptr %sep, align 8, !dbg !12194, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %11), !dbg !12194
  %12 = load ptr, ptr %slice, align 8, !dbg !12195, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %12), !dbg !12195
  %13 = load ptr, ptr %partial_name, align 8, !dbg !12196, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %13), !dbg !12196
  call void @llvm.lifetime.end.p0(i64 8, ptr %sep) #10, !dbg !12197
  call void @llvm.lifetime.end.p0(i64 8, ptr %slice) #10, !dbg !12197
  call void @llvm.lifetime.end.p0(i64 8, ptr %partial_name) #10, !dbg !12197
  ret ptr null, !dbg !12198
}

declare !dbg !12199 ptr @PySequence_GetSlice(ptr noundef, i64 noundef, i64 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_is_valid_index(i64 noundef %i, i64 noundef %limit) #3 !dbg !12202 {
entry:
  %i.addr = alloca i64, align 8
  %limit.addr = alloca i64, align 8
  store i64 %i, ptr %i.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !12206, metadata !DIExpression()), !dbg !12208
  store i64 %limit, ptr %limit.addr, align 8, !tbaa !1836
  tail call void @llvm.dbg.declare(metadata ptr %limit.addr, metadata !12207, metadata !DIExpression()), !dbg !12209
  %0 = load i64, ptr %i.addr, align 8, !dbg !12210, !tbaa !1836
  %1 = load i64, ptr %limit.addr, align 8, !dbg !12211, !tbaa !1836
  %cmp = icmp ult i64 %0, %1, !dbg !12212
  %conv = zext i1 %cmp to i32, !dbg !12212
  ret i32 %conv, !dbg !12213
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Generic(ptr noundef %o, ptr noundef %j) #0 !dbg !12214 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %j.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !12216, metadata !DIExpression()), !dbg !12219
  store ptr %j, ptr %j.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %j.addr, metadata !12217, metadata !DIExpression()), !dbg !12220
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #10, !dbg !12221
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !12218, metadata !DIExpression()), !dbg !12222
  %0 = load ptr, ptr %j.addr, align 8, !dbg !12223, !tbaa !1461
  %tobool = icmp ne ptr %0, null, !dbg !12223
  %lnot = xor i1 %tobool, true, !dbg !12223
  %lnot1 = xor i1 %lnot, true, !dbg !12223
  %lnot2 = xor i1 %lnot1, true, !dbg !12223
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12223
  %conv = sext i32 %lnot.ext to i64, !dbg !12223
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12223
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12223
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12225

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !12226
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12226

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !12227, !tbaa !1461
  %2 = load ptr, ptr %j.addr, align 8, !dbg !12228, !tbaa !1461
  %call = call ptr @PyObject_GetItem(ptr noundef %1, ptr noundef %2), !dbg !12229
  store ptr %call, ptr %r, align 8, !dbg !12230, !tbaa !1461
  %3 = load ptr, ptr %j.addr, align 8, !dbg !12231, !tbaa !1461
  call void @Py_DECREF(ptr noundef %3), !dbg !12231
  %4 = load ptr, ptr %r, align 8, !dbg !12232, !tbaa !1461
  store ptr %4, ptr %retval, align 8, !dbg !12233
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12233

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #10, !dbg !12234
  %5 = load ptr, ptr %retval, align 8, !dbg !12234
  ret ptr %5, !dbg !12234
}

declare !dbg !12235 ptr @PyBytes_FromString(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseUnboundLocalError(ptr noundef %varname) #3 !dbg !12236 {
entry:
  %varname.addr = alloca ptr, align 8
  store ptr %varname, ptr %varname.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %varname.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  %0 = load ptr, ptr @PyExc_UnboundLocalError, align 8, !dbg !12242, !tbaa !1461
  %1 = load ptr, ptr %varname.addr, align 8, !dbg !12243, !tbaa !1461
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.81, ptr noundef %1), !dbg !12244
  ret void, !dbg !12245
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CLineForTraceback(ptr noundef %tstate, i32 noundef %c_line) #0 !dbg !1257 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %use_cline = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  %cython_runtime_dict = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %use_cline_obj = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !1409, metadata !DIExpression()), !dbg !12246
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !1410, metadata !DIExpression()), !dbg !12247
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline) #10, !dbg !12248
  tail call void @llvm.dbg.declare(metadata ptr %use_cline, metadata !1411, metadata !DIExpression()), !dbg !12249
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #10, !dbg !12250
  tail call void @llvm.dbg.declare(metadata ptr %ptype, metadata !1412, metadata !DIExpression()), !dbg !12251
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #10, !dbg !12250
  tail call void @llvm.dbg.declare(metadata ptr %pvalue, metadata !1413, metadata !DIExpression()), !dbg !12252
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #10, !dbg !12250
  tail call void @llvm.dbg.declare(metadata ptr %ptraceback, metadata !1414, metadata !DIExpression()), !dbg !12253
  call void @llvm.lifetime.start.p0(i64 8, ptr %cython_runtime_dict) #10, !dbg !12254
  tail call void @llvm.dbg.declare(metadata ptr %cython_runtime_dict, metadata !1415, metadata !DIExpression()), !dbg !12255
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !12256, !tbaa !1461
  %1 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12257, !tbaa !1461
  %__pyx_cython_runtime = getelementptr inbounds %struct.__pyx_mstate, ptr %1, i32 0, i32 2, !dbg !12257
  %2 = load ptr, ptr %__pyx_cython_runtime, align 8, !dbg !12257, !tbaa !1623
  %tobool = icmp ne ptr %2, null, !dbg !12257
  %lnot = xor i1 %tobool, true, !dbg !12257
  %lnot1 = xor i1 %lnot, true, !dbg !12257
  %lnot2 = xor i1 %lnot1, true, !dbg !12257
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12257
  %conv = sext i32 %lnot.ext to i64, !dbg !12257
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12257
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12257
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12259

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !12260, !tbaa !1557
  store i32 %3, ptr %retval, align 4, !dbg !12262
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12262

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %tstate.addr, align 8, !dbg !12263, !tbaa !1461
  call void @__Pyx_ErrFetchInState(ptr noundef %4, ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback), !dbg !12264
  %5 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12265, !tbaa !1461
  %__pyx_cython_runtime4 = getelementptr inbounds %struct.__pyx_mstate, ptr %5, i32 0, i32 2, !dbg !12265
  %6 = load ptr, ptr %__pyx_cython_runtime4, align 8, !dbg !12265, !tbaa !1623
  %call = call ptr @_PyObject_GetDictPtr(ptr noundef %6), !dbg !12266
  store ptr %call, ptr %cython_runtime_dict, align 8, !dbg !12267, !tbaa !1461
  %7 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !12268, !tbaa !1461
  %tobool5 = icmp ne ptr %7, null, !dbg !12268
  %lnot6 = xor i1 %tobool5, true, !dbg !12268
  %lnot8 = xor i1 %lnot6, true, !dbg !12268
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !12268
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !12268
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 1), !dbg !12268
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !12268
  br i1 %tobool12, label %if.then13, label %if.else26, !dbg !12269

if.then13:                                        ; preds = %if.end
  %8 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !12270, !tbaa !1461
  %9 = load ptr, ptr %8, align 8, !dbg !12270, !tbaa !1461
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %9, i32 0, i32 2, !dbg !12270
  %10 = load i64, ptr %ma_version_tag, align 8, !dbg !12270, !tbaa !4834
  %11 = load i64, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !dbg !12270, !tbaa !1836
  %cmp = icmp eq i64 %10, %11, !dbg !12270
  %lnot15 = xor i1 %cmp, true, !dbg !12270
  %lnot17 = xor i1 %lnot15, true, !dbg !12270
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !12270
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !12270
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 1), !dbg !12270
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !12270
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !12274

if.then22:                                        ; preds = %if.then13
  %12 = load ptr, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !dbg !12275, !tbaa !1461
  store ptr %12, ptr %use_cline, align 8, !dbg !12275, !tbaa !1461
  br label %if.end25, !dbg !12275

if.else:                                          ; preds = %if.then13
  %13 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !12277, !tbaa !1461
  %14 = load ptr, ptr %13, align 8, !dbg !12277, !tbaa !1461
  %15 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12277, !tbaa !1461
  %__pyx_n_s_cline_in_traceback = getelementptr inbounds %struct.__pyx_mstate, ptr %15, i32 0, i32 27, !dbg !12277
  %16 = load ptr, ptr %__pyx_n_s_cline_in_traceback, align 8, !dbg !12277, !tbaa !12279
  %call23 = call ptr @__Pyx_PyDict_GetItemStr(ptr noundef %14, ptr noundef %16), !dbg !12277
  store ptr %call23, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !dbg !12277, !tbaa !1461
  store ptr %call23, ptr %use_cline, align 8, !dbg !12277, !tbaa !1461
  %17 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !12277, !tbaa !1461
  %18 = load ptr, ptr %17, align 8, !dbg !12277, !tbaa !1461
  %ma_version_tag24 = getelementptr inbounds %struct.PyDictObject, ptr %18, i32 0, i32 2, !dbg !12277
  %19 = load i64, ptr %ma_version_tag24, align 8, !dbg !12277, !tbaa !4834
  store i64 %19, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !dbg !12277, !tbaa !1836
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then22
  br label %if.end36, !dbg !12280

if.else26:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline_obj) #10, !dbg !12281
  tail call void @llvm.dbg.declare(metadata ptr %use_cline_obj, metadata !1416, metadata !DIExpression()), !dbg !12282
  %20 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12283, !tbaa !1461
  %__pyx_cython_runtime27 = getelementptr inbounds %struct.__pyx_mstate, ptr %20, i32 0, i32 2, !dbg !12283
  %21 = load ptr, ptr %__pyx_cython_runtime27, align 8, !dbg !12283, !tbaa !1623
  %22 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12284, !tbaa !1461
  %__pyx_n_s_cline_in_traceback28 = getelementptr inbounds %struct.__pyx_mstate, ptr %22, i32 0, i32 27, !dbg !12284
  %23 = load ptr, ptr %__pyx_n_s_cline_in_traceback28, align 8, !dbg !12284, !tbaa !12279
  %call29 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %21, ptr noundef %23), !dbg !12285
  store ptr %call29, ptr %use_cline_obj, align 8, !dbg !12282, !tbaa !1461
  %24 = load ptr, ptr %use_cline_obj, align 8, !dbg !12286, !tbaa !1461
  %tobool30 = icmp ne ptr %24, null, !dbg !12286
  br i1 %tobool30, label %if.then31, label %if.else34, !dbg !12288

if.then31:                                        ; preds = %if.else26
  %25 = load ptr, ptr %use_cline_obj, align 8, !dbg !12289, !tbaa !1461
  %call32 = call i32 @PyObject_Not(ptr noundef %25), !dbg !12291
  %tobool33 = icmp ne i32 %call32, 0, !dbg !12291
  %26 = zext i1 %tobool33 to i64, !dbg !12291
  %cond = select i1 %tobool33, ptr @_Py_FalseStruct, ptr @_Py_TrueStruct, !dbg !12291
  store ptr %cond, ptr %use_cline, align 8, !dbg !12292, !tbaa !1461
  %27 = load ptr, ptr %use_cline_obj, align 8, !dbg !12293, !tbaa !1461
  call void @Py_DECREF(ptr noundef %27), !dbg !12293
  br label %if.end35, !dbg !12294

if.else34:                                        ; preds = %if.else26
  call void @PyErr_Clear(), !dbg !12295
  store ptr null, ptr %use_cline, align 8, !dbg !12297, !tbaa !1461
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then31
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline_obj) #10, !dbg !12298
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end25
  %28 = load ptr, ptr %use_cline, align 8, !dbg !12299, !tbaa !1461
  %tobool37 = icmp ne ptr %28, null, !dbg !12299
  br i1 %tobool37, label %if.else42, label %if.then38, !dbg !12301

if.then38:                                        ; preds = %if.end36
  store i32 0, ptr %c_line.addr, align 4, !dbg !12302, !tbaa !1557
  %29 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12304, !tbaa !1461
  %__pyx_cython_runtime39 = getelementptr inbounds %struct.__pyx_mstate, ptr %29, i32 0, i32 2, !dbg !12304
  %30 = load ptr, ptr %__pyx_cython_runtime39, align 8, !dbg !12304, !tbaa !1623
  %31 = load ptr, ptr @__pyx_mstate_global, align 8, !dbg !12305, !tbaa !1461
  %__pyx_n_s_cline_in_traceback40 = getelementptr inbounds %struct.__pyx_mstate, ptr %31, i32 0, i32 27, !dbg !12305
  %32 = load ptr, ptr %__pyx_n_s_cline_in_traceback40, align 8, !dbg !12305, !tbaa !12279
  %call41 = call i32 @PyObject_SetAttr(ptr noundef %30, ptr noundef %32, ptr noundef @_Py_FalseStruct), !dbg !12306
  br label %if.end52, !dbg !12307

if.else42:                                        ; preds = %if.end36
  %33 = load ptr, ptr %use_cline, align 8, !dbg !12308, !tbaa !1461
  %cmp43 = icmp eq ptr %33, @_Py_FalseStruct, !dbg !12310
  br i1 %cmp43, label %if.then50, label %lor.lhs.false, !dbg !12311

lor.lhs.false:                                    ; preds = %if.else42
  %34 = load ptr, ptr %use_cline, align 8, !dbg !12312, !tbaa !1461
  %cmp45 = icmp ne ptr %34, @_Py_TrueStruct, !dbg !12313
  br i1 %cmp45, label %land.lhs.true, label %if.end51, !dbg !12314

land.lhs.true:                                    ; preds = %lor.lhs.false
  %35 = load ptr, ptr %use_cline, align 8, !dbg !12315, !tbaa !1461
  %call47 = call i32 @PyObject_Not(ptr noundef %35), !dbg !12316
  %cmp48 = icmp ne i32 %call47, 0, !dbg !12317
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !12318

if.then50:                                        ; preds = %land.lhs.true, %if.else42
  store i32 0, ptr %c_line.addr, align 4, !dbg !12319, !tbaa !1557
  br label %if.end51, !dbg !12321

if.end51:                                         ; preds = %if.then50, %land.lhs.true, %lor.lhs.false
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then38
  %36 = load ptr, ptr %tstate.addr, align 8, !dbg !12322, !tbaa !1461
  %37 = load ptr, ptr %ptype, align 8, !dbg !12323, !tbaa !1461
  %38 = load ptr, ptr %pvalue, align 8, !dbg !12324, !tbaa !1461
  %39 = load ptr, ptr %ptraceback, align 8, !dbg !12325, !tbaa !1461
  call void @__Pyx_ErrRestoreInState(ptr noundef %36, ptr noundef %37, ptr noundef %38, ptr noundef %39), !dbg !12326
  %40 = load i32, ptr %c_line.addr, align 4, !dbg !12327, !tbaa !1557
  store i32 %40, ptr %retval, align 4, !dbg !12328
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12328

cleanup:                                          ; preds = %if.end52, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cython_runtime_dict) #10, !dbg !12329
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #10, !dbg !12329
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #10, !dbg !12329
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #10, !dbg !12329
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline) #10, !dbg !12329
  %41 = load i32, ptr %retval, align 4, !dbg !12329
  ret i32 %41, !dbg !12329
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_find_code_object(i32 noundef %code_line) #0 !dbg !12330 {
entry:
  %retval = alloca ptr, align 8
  %code_line.addr = alloca i32, align 4
  %code_object = alloca ptr, align 8
  %pos = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !12334, metadata !DIExpression()), !dbg !12337
  call void @llvm.lifetime.start.p0(i64 8, ptr %code_object) #10, !dbg !12338
  tail call void @llvm.dbg.declare(metadata ptr %code_object, metadata !12335, metadata !DIExpression()), !dbg !12339
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #10, !dbg !12340
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !12336, metadata !DIExpression()), !dbg !12341
  %0 = load i32, ptr %code_line.addr, align 4, !dbg !12342, !tbaa !1557
  %tobool = icmp ne i32 %0, 0, !dbg !12342
  %lnot = xor i1 %tobool, true, !dbg !12342
  %lnot1 = xor i1 %lnot, true, !dbg !12342
  %lnot2 = xor i1 %lnot1, true, !dbg !12342
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12342
  %conv = sext i32 %lnot.ext to i64, !dbg !12342
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12342
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12342
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !12344

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12345, !tbaa !12346
  %tobool4 = icmp ne ptr %1, null, !dbg !12345
  %lnot5 = xor i1 %tobool4, true, !dbg !12345
  %lnot7 = xor i1 %lnot5, true, !dbg !12345
  %lnot9 = xor i1 %lnot7, true, !dbg !12345
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !12345
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !12345
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !12345
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !12345
  br i1 %tobool13, label %if.then, label %if.end, !dbg !12348

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !12349
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12349

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12351, !tbaa !12346
  %3 = load i32, ptr @__pyx_code_cache, align 8, !dbg !12352, !tbaa !12353
  %4 = load i32, ptr %code_line.addr, align 4, !dbg !12354, !tbaa !1557
  %call = call i32 @__pyx_bisect_code_objects(ptr noundef %2, i32 noundef %3, i32 noundef %4), !dbg !12355
  store i32 %call, ptr %pos, align 4, !dbg !12356, !tbaa !1557
  %5 = load i32, ptr %pos, align 4, !dbg !12357, !tbaa !1557
  %6 = load i32, ptr @__pyx_code_cache, align 8, !dbg !12357, !tbaa !12353
  %cmp = icmp sge i32 %5, %6, !dbg !12357
  %lnot15 = xor i1 %cmp, true, !dbg !12357
  %lnot17 = xor i1 %lnot15, true, !dbg !12357
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !12357
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !12357
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !12357
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !12357
  br i1 %tobool21, label %if.then33, label %lor.lhs.false22, !dbg !12359

lor.lhs.false22:                                  ; preds = %if.end
  %7 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12360, !tbaa !12346
  %8 = load i32, ptr %pos, align 4, !dbg !12360, !tbaa !1557
  %idxprom = sext i32 %8 to i64, !dbg !12360
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %7, i64 %idxprom, !dbg !12360
  %code_line23 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !12360
  %9 = load i32, ptr %code_line23, align 8, !dbg !12360, !tbaa !12361
  %10 = load i32, ptr %code_line.addr, align 4, !dbg !12360, !tbaa !1557
  %cmp24 = icmp ne i32 %9, %10, !dbg !12360
  %lnot26 = xor i1 %cmp24, true, !dbg !12360
  %lnot28 = xor i1 %lnot26, true, !dbg !12360
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !12360
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !12360
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !12360
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !12360
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !12363

if.then33:                                        ; preds = %lor.lhs.false22, %if.end
  store ptr null, ptr %retval, align 8, !dbg !12364
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12364

if.end34:                                         ; preds = %lor.lhs.false22
  %11 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12366, !tbaa !12346
  %12 = load i32, ptr %pos, align 4, !dbg !12367, !tbaa !1557
  %idxprom35 = sext i32 %12 to i64, !dbg !12368
  %arrayidx36 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %11, i64 %idxprom35, !dbg !12368
  %code_object37 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx36, i32 0, i32 0, !dbg !12369
  %13 = load ptr, ptr %code_object37, align 8, !dbg !12369, !tbaa !12370
  store ptr %13, ptr %code_object, align 8, !dbg !12371, !tbaa !1461
  %14 = load ptr, ptr %code_object, align 8, !dbg !12372, !tbaa !1461
  call void @Py_INCREF(ptr noundef %14), !dbg !12372
  %15 = load ptr, ptr %code_object, align 8, !dbg !12373, !tbaa !1461
  store ptr %15, ptr %retval, align 8, !dbg !12374
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12374

cleanup:                                          ; preds = %if.end34, %if.then33, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #10, !dbg !12375
  call void @llvm.lifetime.end.p0(i64 8, ptr %code_object) #10, !dbg !12375
  %16 = load ptr, ptr %retval, align 8, !dbg !12375
  ret ptr %16, !dbg !12375
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 !dbg !12376 {
entry:
  %retval = alloca ptr, align 8
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_funcname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %funcname.addr, metadata !12380, metadata !DIExpression()), !dbg !12387
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !12381, metadata !DIExpression()), !dbg !12388
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %py_line.addr, metadata !12382, metadata !DIExpression()), !dbg !12389
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !12383, metadata !DIExpression()), !dbg !12390
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #10, !dbg !12391
  tail call void @llvm.dbg.declare(metadata ptr %py_code, metadata !12384, metadata !DIExpression()), !dbg !12392
  store ptr null, ptr %py_code, align 8, !dbg !12392, !tbaa !1461
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_funcname) #10, !dbg !12393
  tail call void @llvm.dbg.declare(metadata ptr %py_funcname, metadata !12385, metadata !DIExpression()), !dbg !12394
  store ptr null, ptr %py_funcname, align 8, !dbg !12394, !tbaa !1461
  %0 = load i32, ptr %c_line.addr, align 4, !dbg !12395, !tbaa !1557
  %tobool = icmp ne i32 %0, 0, !dbg !12395
  br i1 %tobool, label %if.then, label %if.else, !dbg !12397

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %funcname.addr, align 8, !dbg !12398, !tbaa !1461
  %2 = load ptr, ptr @__pyx_cfilenm, align 8, !dbg !12400, !tbaa !1461
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !12401, !tbaa !1557
  %call = call ptr (ptr, ...) @PyUnicode_FromFormat(ptr noundef @.str.82, ptr noundef %1, ptr noundef %2, i32 noundef %3), !dbg !12402
  store ptr %call, ptr %py_funcname, align 8, !dbg !12403, !tbaa !1461
  %4 = load ptr, ptr %py_funcname, align 8, !dbg !12404, !tbaa !1461
  %tobool1 = icmp ne ptr %4, null, !dbg !12404
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !12406

if.then2:                                         ; preds = %if.then
  br label %bad, !dbg !12407

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %py_funcname, align 8, !dbg !12408, !tbaa !1461
  %call3 = call ptr @PyUnicode_AsUTF8(ptr noundef %5), !dbg !12409
  store ptr %call3, ptr %funcname.addr, align 8, !dbg !12410, !tbaa !1461
  %6 = load ptr, ptr %funcname.addr, align 8, !dbg !12411, !tbaa !1461
  %tobool4 = icmp ne ptr %6, null, !dbg !12411
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !12413

if.then5:                                         ; preds = %if.end
  br label %bad, !dbg !12414

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !12415

if.else:                                          ; preds = %entry
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end6
  %7 = load ptr, ptr %filename.addr, align 8, !dbg !12416, !tbaa !1461
  %8 = load ptr, ptr %funcname.addr, align 8, !dbg !12417, !tbaa !1461
  %9 = load i32, ptr %py_line.addr, align 4, !dbg !12418, !tbaa !1557
  %call8 = call ptr @PyCode_NewEmpty(ptr noundef %7, ptr noundef %8, i32 noundef %9), !dbg !12419
  store ptr %call8, ptr %py_code, align 8, !dbg !12420, !tbaa !1461
  %10 = load ptr, ptr %py_funcname, align 8, !dbg !12421, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %10), !dbg !12421
  %11 = load ptr, ptr %py_code, align 8, !dbg !12422, !tbaa !1461
  store ptr %11, ptr %retval, align 8, !dbg !12423
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12423

bad:                                              ; preds = %if.then5, %if.then2
  tail call void @llvm.dbg.label(metadata !12386), !dbg !12424
  %12 = load ptr, ptr %py_funcname, align 8, !dbg !12425, !tbaa !1461
  call void @Py_XDECREF(ptr noundef %12), !dbg !12425
  store ptr null, ptr %retval, align 8, !dbg !12426
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12426

cleanup:                                          ; preds = %bad, %if.end7
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_funcname) #10, !dbg !12427
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #10, !dbg !12427
  %13 = load ptr, ptr %retval, align 8, !dbg !12427
  ret ptr %13, !dbg !12427
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_insert_code_object(i32 noundef %code_line, ptr noundef %code_object) #0 !dbg !12428 {
entry:
  %code_line.addr = alloca i32, align 4
  %code_object.addr = alloca ptr, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %entries = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %new_max = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !12432, metadata !DIExpression()), !dbg !12443
  store ptr %code_object, ptr %code_object.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %code_object.addr, metadata !12433, metadata !DIExpression()), !dbg !12444
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #10, !dbg !12445
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !12434, metadata !DIExpression()), !dbg !12446
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !12445
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !12435, metadata !DIExpression()), !dbg !12447
  call void @llvm.lifetime.start.p0(i64 8, ptr %entries) #10, !dbg !12448
  tail call void @llvm.dbg.declare(metadata ptr %entries, metadata !12436, metadata !DIExpression()), !dbg !12449
  %0 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12450, !tbaa !12346
  store ptr %0, ptr %entries, align 8, !dbg !12449, !tbaa !1461
  %1 = load i32, ptr %code_line.addr, align 4, !dbg !12451, !tbaa !1557
  %tobool = icmp ne i32 %1, 0, !dbg !12451
  %lnot = xor i1 %tobool, true, !dbg !12451
  %lnot1 = xor i1 %lnot, true, !dbg !12451
  %lnot2 = xor i1 %lnot1, true, !dbg !12451
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12451
  %conv = sext i32 %lnot.ext to i64, !dbg !12451
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12451
  %tobool3 = icmp ne i64 %expval, 0, !dbg !12451
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12453

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !12454

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %entries, align 8, !dbg !12456, !tbaa !1461
  %tobool4 = icmp ne ptr %2, null, !dbg !12456
  %lnot5 = xor i1 %tobool4, true, !dbg !12456
  %lnot7 = xor i1 %lnot5, true, !dbg !12456
  %lnot9 = xor i1 %lnot7, true, !dbg !12456
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !12456
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !12456
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !12456
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !12456
  br i1 %tobool13, label %if.then14, label %if.end28, !dbg !12458

if.then14:                                        ; preds = %if.end
  %call = call ptr @PyMem_Malloc(i64 noundef 1024), !dbg !12459
  store ptr %call, ptr %entries, align 8, !dbg !12461, !tbaa !1461
  %3 = load ptr, ptr %entries, align 8, !dbg !12462, !tbaa !1461
  %tobool15 = icmp ne ptr %3, null, !dbg !12462
  %lnot16 = xor i1 %tobool15, true, !dbg !12462
  %lnot18 = xor i1 %lnot16, true, !dbg !12462
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !12462
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !12462
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !12462
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !12462
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !12464

if.then23:                                        ; preds = %if.then14
  %4 = load ptr, ptr %entries, align 8, !dbg !12465, !tbaa !1461
  store ptr %4, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12467, !tbaa !12346
  store i32 64, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !12468, !tbaa !12469
  store i32 1, ptr @__pyx_code_cache, align 8, !dbg !12470, !tbaa !12353
  %5 = load i32, ptr %code_line.addr, align 4, !dbg !12471, !tbaa !1557
  %6 = load ptr, ptr %entries, align 8, !dbg !12472, !tbaa !1461
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %6, i64 0, !dbg !12472
  %code_line24 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !12473
  store i32 %5, ptr %code_line24, align 8, !dbg !12474, !tbaa !12361
  %7 = load ptr, ptr %code_object.addr, align 8, !dbg !12475, !tbaa !1461
  %8 = load ptr, ptr %entries, align 8, !dbg !12476, !tbaa !1461
  %arrayidx25 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %8, i64 0, !dbg !12476
  %code_object26 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx25, i32 0, i32 0, !dbg !12477
  store ptr %7, ptr %code_object26, align 8, !dbg !12478, !tbaa !12370
  %9 = load ptr, ptr %code_object.addr, align 8, !dbg !12479, !tbaa !1461
  call void @Py_INCREF(ptr noundef %9), !dbg !12479
  br label %if.end27, !dbg !12480

if.end27:                                         ; preds = %if.then23, %if.then14
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !12481

if.end28:                                         ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12482, !tbaa !12346
  %11 = load i32, ptr @__pyx_code_cache, align 8, !dbg !12483, !tbaa !12353
  %12 = load i32, ptr %code_line.addr, align 4, !dbg !12484, !tbaa !1557
  %call29 = call i32 @__pyx_bisect_code_objects(ptr noundef %10, i32 noundef %11, i32 noundef %12), !dbg !12485
  store i32 %call29, ptr %pos, align 4, !dbg !12486, !tbaa !1557
  %13 = load i32, ptr %pos, align 4, !dbg !12487, !tbaa !1557
  %14 = load i32, ptr @__pyx_code_cache, align 8, !dbg !12488, !tbaa !12353
  %cmp = icmp slt i32 %13, %14, !dbg !12489
  br i1 %cmp, label %land.lhs.true, label %if.end49, !dbg !12490

land.lhs.true:                                    ; preds = %if.end28
  %15 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12491, !tbaa !12346
  %16 = load i32, ptr %pos, align 4, !dbg !12491, !tbaa !1557
  %idxprom = sext i32 %16 to i64, !dbg !12491
  %arrayidx31 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %15, i64 %idxprom, !dbg !12491
  %code_line32 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx31, i32 0, i32 1, !dbg !12491
  %17 = load i32, ptr %code_line32, align 8, !dbg !12491, !tbaa !12361
  %18 = load i32, ptr %code_line.addr, align 4, !dbg !12491, !tbaa !1557
  %cmp33 = icmp eq i32 %17, %18, !dbg !12491
  %lnot35 = xor i1 %cmp33, true, !dbg !12491
  %lnot37 = xor i1 %lnot35, true, !dbg !12491
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !12491
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !12491
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0), !dbg !12491
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !12491
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !12492

if.then42:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #10, !dbg !12493
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !12437, metadata !DIExpression()), !dbg !12494
  %19 = load ptr, ptr %entries, align 8, !dbg !12495, !tbaa !1461
  %20 = load i32, ptr %pos, align 4, !dbg !12496, !tbaa !1557
  %idxprom43 = sext i32 %20 to i64, !dbg !12495
  %arrayidx44 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %19, i64 %idxprom43, !dbg !12495
  %code_object45 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx44, i32 0, i32 0, !dbg !12497
  %21 = load ptr, ptr %code_object45, align 8, !dbg !12497, !tbaa !12370
  store ptr %21, ptr %tmp, align 8, !dbg !12494, !tbaa !1461
  %22 = load ptr, ptr %code_object.addr, align 8, !dbg !12498, !tbaa !1461
  %23 = load ptr, ptr %entries, align 8, !dbg !12499, !tbaa !1461
  %24 = load i32, ptr %pos, align 4, !dbg !12500, !tbaa !1557
  %idxprom46 = sext i32 %24 to i64, !dbg !12499
  %arrayidx47 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %23, i64 %idxprom46, !dbg !12499
  %code_object48 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx47, i32 0, i32 0, !dbg !12501
  store ptr %22, ptr %code_object48, align 8, !dbg !12502, !tbaa !12370
  %25 = load ptr, ptr %tmp, align 8, !dbg !12503, !tbaa !1461
  call void @Py_DECREF(ptr noundef %25), !dbg !12503
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #10, !dbg !12504
  br label %cleanup80

if.end49:                                         ; preds = %land.lhs.true, %if.end28
  %26 = load i32, ptr @__pyx_code_cache, align 8, !dbg !12505, !tbaa !12353
  %27 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !12506, !tbaa !12469
  %cmp50 = icmp eq i32 %26, %27, !dbg !12507
  br i1 %cmp50, label %if.then52, label %if.end67, !dbg !12508

if.then52:                                        ; preds = %if.end49
  call void @llvm.lifetime.start.p0(i64 4, ptr %new_max) #10, !dbg !12509
  tail call void @llvm.dbg.declare(metadata ptr %new_max, metadata !12440, metadata !DIExpression()), !dbg !12510
  %28 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !12511, !tbaa !12469
  %add = add i32 %28, 64, !dbg !12512
  store i32 %add, ptr %new_max, align 4, !dbg !12510, !tbaa !1557
  %29 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12513, !tbaa !12346
  %30 = load i32, ptr %new_max, align 4, !dbg !12514, !tbaa !1557
  %conv53 = sext i32 %30 to i64, !dbg !12515
  %mul = mul i64 %conv53, 16, !dbg !12516
  %call54 = call ptr @PyMem_Realloc(ptr noundef %29, i64 noundef %mul), !dbg !12517
  store ptr %call54, ptr %entries, align 8, !dbg !12518, !tbaa !1461
  %31 = load ptr, ptr %entries, align 8, !dbg !12519, !tbaa !1461
  %tobool55 = icmp ne ptr %31, null, !dbg !12519
  %lnot56 = xor i1 %tobool55, true, !dbg !12519
  %lnot58 = xor i1 %lnot56, true, !dbg !12519
  %lnot60 = xor i1 %lnot58, true, !dbg !12519
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !12519
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !12519
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0), !dbg !12519
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !12519
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !12521

if.then65:                                        ; preds = %if.then52
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12522

if.end66:                                         ; preds = %if.then52
  %32 = load ptr, ptr %entries, align 8, !dbg !12524, !tbaa !1461
  store ptr %32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !12525, !tbaa !12346
  %33 = load i32, ptr %new_max, align 4, !dbg !12526, !tbaa !1557
  store i32 %33, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !12527, !tbaa !12469
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12528
  br label %cleanup, !dbg !12528

cleanup:                                          ; preds = %if.end66, %if.then65
  call void @llvm.lifetime.end.p0(i64 4, ptr %new_max) #10, !dbg !12528
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup80 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end67, !dbg !12529

if.end67:                                         ; preds = %cleanup.cont, %if.end49
  %34 = load i32, ptr @__pyx_code_cache, align 8, !dbg !12530, !tbaa !12353
  store i32 %34, ptr %i, align 4, !dbg !12532, !tbaa !1557
  br label %for.cond, !dbg !12533

for.cond:                                         ; preds = %for.inc, %if.end67
  %35 = load i32, ptr %i, align 4, !dbg !12534, !tbaa !1557
  %36 = load i32, ptr %pos, align 4, !dbg !12536, !tbaa !1557
  %cmp68 = icmp sgt i32 %35, %36, !dbg !12537
  br i1 %cmp68, label %for.body, label %for.end, !dbg !12538

for.body:                                         ; preds = %for.cond
  %37 = load ptr, ptr %entries, align 8, !dbg !12539, !tbaa !1461
  %38 = load i32, ptr %i, align 4, !dbg !12541, !tbaa !1557
  %idxprom70 = sext i32 %38 to i64, !dbg !12539
  %arrayidx71 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %37, i64 %idxprom70, !dbg !12539
  %39 = load ptr, ptr %entries, align 8, !dbg !12542, !tbaa !1461
  %40 = load i32, ptr %i, align 4, !dbg !12543, !tbaa !1557
  %sub = sub i32 %40, 1, !dbg !12544
  %idxprom72 = sext i32 %sub to i64, !dbg !12542
  %arrayidx73 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %39, i64 %idxprom72, !dbg !12542
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %arrayidx71, ptr align 8 %arrayidx73, i64 16, i1 false), !dbg !12542, !tbaa.struct !12545
  br label %for.inc, !dbg !12546

for.inc:                                          ; preds = %for.body
  %41 = load i32, ptr %i, align 4, !dbg !12547, !tbaa !1557
  %dec = add i32 %41, -1, !dbg !12547
  store i32 %dec, ptr %i, align 4, !dbg !12547, !tbaa !1557
  br label %for.cond, !dbg !12548, !llvm.loop !12549

for.end:                                          ; preds = %for.cond
  %42 = load i32, ptr %code_line.addr, align 4, !dbg !12551, !tbaa !1557
  %43 = load ptr, ptr %entries, align 8, !dbg !12552, !tbaa !1461
  %44 = load i32, ptr %pos, align 4, !dbg !12553, !tbaa !1557
  %idxprom74 = sext i32 %44 to i64, !dbg !12552
  %arrayidx75 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %43, i64 %idxprom74, !dbg !12552
  %code_line76 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx75, i32 0, i32 1, !dbg !12554
  store i32 %42, ptr %code_line76, align 8, !dbg !12555, !tbaa !12361
  %45 = load ptr, ptr %code_object.addr, align 8, !dbg !12556, !tbaa !1461
  %46 = load ptr, ptr %entries, align 8, !dbg !12557, !tbaa !1461
  %47 = load i32, ptr %pos, align 4, !dbg !12558, !tbaa !1557
  %idxprom77 = sext i32 %47 to i64, !dbg !12557
  %arrayidx78 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %46, i64 %idxprom77, !dbg !12557
  %code_object79 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx78, i32 0, i32 0, !dbg !12559
  store ptr %45, ptr %code_object79, align 8, !dbg !12560, !tbaa !12370
  %48 = load i32, ptr @__pyx_code_cache, align 8, !dbg !12561, !tbaa !12353
  %inc = add i32 %48, 1, !dbg !12561
  store i32 %inc, ptr @__pyx_code_cache, align 8, !dbg !12561, !tbaa !12353
  %49 = load ptr, ptr %code_object.addr, align 8, !dbg !12562, !tbaa !1461
  call void @Py_INCREF(ptr noundef %49), !dbg !12562
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12563
  br label %cleanup80, !dbg !12563

cleanup80:                                        ; preds = %for.end, %cleanup, %if.then42, %if.end27, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %entries) #10, !dbg !12563
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !12563
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #10, !dbg !12563
  %cleanup.dest83 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest83, label %unreachable [
    i32 0, label %cleanup.cont84
    i32 1, label %cleanup.cont84
  ]

cleanup.cont84:                                   ; preds = %cleanup80, %cleanup80
  ret void, !dbg !12563

unreachable:                                      ; preds = %cleanup80
  unreachable
}

declare !dbg !12564 ptr @PyFrame_New(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !12568 i32 @PyTraceBack_Here(ptr noundef) #1

declare !dbg !12572 i32 @PyObject_Not(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_bisect_code_objects(ptr noundef %entries, i32 noundef %count, i32 noundef %code_line) #0 !dbg !12573 {
entry:
  %retval = alloca i32, align 4
  %entries.addr = alloca ptr, align 8
  %count.addr = alloca i32, align 4
  %code_line.addr = alloca i32, align 4
  %start = alloca i32, align 4
  %mid = alloca i32, align 4
  %end = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %entries, ptr %entries.addr, align 8, !tbaa !1461
  tail call void @llvm.dbg.declare(metadata ptr %entries.addr, metadata !12577, metadata !DIExpression()), !dbg !12583
  store i32 %count, ptr %count.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %count.addr, metadata !12578, metadata !DIExpression()), !dbg !12584
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1557
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !12579, metadata !DIExpression()), !dbg !12585
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #10, !dbg !12586
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !12580, metadata !DIExpression()), !dbg !12587
  store i32 0, ptr %start, align 4, !dbg !12587, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 4, ptr %mid) #10, !dbg !12586
  tail call void @llvm.dbg.declare(metadata ptr %mid, metadata !12581, metadata !DIExpression()), !dbg !12588
  store i32 0, ptr %mid, align 4, !dbg !12588, !tbaa !1557
  call void @llvm.lifetime.start.p0(i64 4, ptr %end) #10, !dbg !12586
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !12582, metadata !DIExpression()), !dbg !12589
  %0 = load i32, ptr %count.addr, align 4, !dbg !12590, !tbaa !1557
  %sub = sub i32 %0, 1, !dbg !12591
  store i32 %sub, ptr %end, align 4, !dbg !12589, !tbaa !1557
  %1 = load i32, ptr %end, align 4, !dbg !12592, !tbaa !1557
  %cmp = icmp sge i32 %1, 0, !dbg !12594
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12595

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, ptr %code_line.addr, align 4, !dbg !12596, !tbaa !1557
  %3 = load ptr, ptr %entries.addr, align 8, !dbg !12597, !tbaa !1461
  %4 = load i32, ptr %end, align 4, !dbg !12598, !tbaa !1557
  %idxprom = sext i32 %4 to i64, !dbg !12597
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %3, i64 %idxprom, !dbg !12597
  %code_line1 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !12599
  %5 = load i32, ptr %code_line1, align 8, !dbg !12599, !tbaa !12361
  %cmp2 = icmp sgt i32 %2, %5, !dbg !12600
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12601

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, ptr %count.addr, align 4, !dbg !12602, !tbaa !1557
  store i32 %6, ptr %retval, align 4, !dbg !12604
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12604

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %while.cond, !dbg !12605

while.cond:                                       ; preds = %if.end18, %if.end
  %7 = load i32, ptr %start, align 4, !dbg !12606, !tbaa !1557
  %8 = load i32, ptr %end, align 4, !dbg !12607, !tbaa !1557
  %cmp3 = icmp slt i32 %7, %8, !dbg !12608
  br i1 %cmp3, label %while.body, label %while.end, !dbg !12605

while.body:                                       ; preds = %while.cond
  %9 = load i32, ptr %start, align 4, !dbg !12609, !tbaa !1557
  %10 = load i32, ptr %end, align 4, !dbg !12611, !tbaa !1557
  %11 = load i32, ptr %start, align 4, !dbg !12612, !tbaa !1557
  %sub4 = sub i32 %10, %11, !dbg !12613
  %div = sdiv i32 %sub4, 2, !dbg !12614
  %add = add i32 %9, %div, !dbg !12615
  store i32 %add, ptr %mid, align 4, !dbg !12616, !tbaa !1557
  %12 = load i32, ptr %code_line.addr, align 4, !dbg !12617, !tbaa !1557
  %13 = load ptr, ptr %entries.addr, align 8, !dbg !12619, !tbaa !1461
  %14 = load i32, ptr %mid, align 4, !dbg !12620, !tbaa !1557
  %idxprom5 = sext i32 %14 to i64, !dbg !12619
  %arrayidx6 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %13, i64 %idxprom5, !dbg !12619
  %code_line7 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx6, i32 0, i32 1, !dbg !12621
  %15 = load i32, ptr %code_line7, align 8, !dbg !12621, !tbaa !12361
  %cmp8 = icmp slt i32 %12, %15, !dbg !12622
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !12623

if.then9:                                         ; preds = %while.body
  %16 = load i32, ptr %mid, align 4, !dbg !12624, !tbaa !1557
  store i32 %16, ptr %end, align 4, !dbg !12626, !tbaa !1557
  br label %if.end18, !dbg !12627

if.else:                                          ; preds = %while.body
  %17 = load i32, ptr %code_line.addr, align 4, !dbg !12628, !tbaa !1557
  %18 = load ptr, ptr %entries.addr, align 8, !dbg !12630, !tbaa !1461
  %19 = load i32, ptr %mid, align 4, !dbg !12631, !tbaa !1557
  %idxprom10 = sext i32 %19 to i64, !dbg !12630
  %arrayidx11 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %18, i64 %idxprom10, !dbg !12630
  %code_line12 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx11, i32 0, i32 1, !dbg !12632
  %20 = load i32, ptr %code_line12, align 8, !dbg !12632, !tbaa !12361
  %cmp13 = icmp sgt i32 %17, %20, !dbg !12633
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !12634

if.then14:                                        ; preds = %if.else
  %21 = load i32, ptr %mid, align 4, !dbg !12635, !tbaa !1557
  %add15 = add i32 %21, 1, !dbg !12637
  store i32 %add15, ptr %start, align 4, !dbg !12638, !tbaa !1557
  br label %if.end17, !dbg !12639

if.else16:                                        ; preds = %if.else
  %22 = load i32, ptr %mid, align 4, !dbg !12640, !tbaa !1557
  store i32 %22, ptr %retval, align 4, !dbg !12642
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12642

if.end17:                                         ; preds = %if.then14
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then9
  br label %while.cond, !dbg !12605, !llvm.loop !12643

while.end:                                        ; preds = %while.cond
  %23 = load i32, ptr %code_line.addr, align 4, !dbg !12645, !tbaa !1557
  %24 = load ptr, ptr %entries.addr, align 8, !dbg !12647, !tbaa !1461
  %25 = load i32, ptr %mid, align 4, !dbg !12648, !tbaa !1557
  %idxprom19 = sext i32 %25 to i64, !dbg !12647
  %arrayidx20 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %24, i64 %idxprom19, !dbg !12647
  %code_line21 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx20, i32 0, i32 1, !dbg !12649
  %26 = load i32, ptr %code_line21, align 8, !dbg !12649, !tbaa !12361
  %cmp22 = icmp sle i32 %23, %26, !dbg !12650
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !12651

if.then23:                                        ; preds = %while.end
  %27 = load i32, ptr %mid, align 4, !dbg !12652, !tbaa !1557
  store i32 %27, ptr %retval, align 4, !dbg !12654
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12654

if.else24:                                        ; preds = %while.end
  %28 = load i32, ptr %mid, align 4, !dbg !12655, !tbaa !1557
  %add25 = add i32 %28, 1, !dbg !12657
  store i32 %add25, ptr %retval, align 4, !dbg !12658
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12658

cleanup:                                          ; preds = %if.else24, %if.then23, %if.else16, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %end) #10, !dbg !12659
  call void @llvm.lifetime.end.p0(i64 4, ptr %mid) #10, !dbg !12659
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #10, !dbg !12659
  %29 = load i32, ptr %retval, align 4, !dbg !12659
  ret i32 %29, !dbg !12659
}

declare !dbg !12660 ptr @PyUnicode_FromFormat(ptr noundef, ...) #1

declare !dbg !12663 ptr @PyUnicode_AsUTF8(ptr noundef) #1

declare !dbg !12666 ptr @PyCode_NewEmpty(ptr noundef, ptr noundef, i32 noundef) #1

declare !dbg !12669 ptr @PyMem_Malloc(i64 noundef) #1

declare !dbg !12671 ptr @PyMem_Realloc(ptr noundef, i64 noundef) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #9

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #9

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nounwind allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #10 = { nounwind }
attributes #11 = { nounwind allocsize(0) }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1437, !1438, !1439, !1440, !1441}
!llvm.ident = !{!1442}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__pyx_module_is_main_Cython__Runtime__refnanny", scope: !2, file: !21, line: 2278, type: !7, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !26, globals: !557, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src/Cython/Runtime/refnanny.c", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src", checksumkind: CSK_MD5, checksum: "d88f6d061f2225d82143d7ff355528bd")
!4 = !{!5, !12, !20}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 676, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/object.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "059c0d359e891772b7814c88f6fa55ff")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "PYGEN_RETURN", value: 0)
!10 = !DIEnumerator(name: "PYGEN_ERROR", value: -1)
!11 = !DIEnumerator(name: "PYGEN_NEXT", value: 1)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !13, line: 304, baseType: !14, size: 32, elements: !15)
!13 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/unicodeobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "f386b2e1a1c191e8bf459eb4bae7acee")
!14 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!15 = !{!16, !17, !18, !19}
!16 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!17 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!18 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!19 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__Pyx_ImportType_CheckSize_3_0_4", file: !21, line: 2156, baseType: !14, size: 32, elements: !22)
!21 = !DIFile(filename: "Cython/Runtime/refnanny.c", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build/aidengro/spack-stage-py-cython-3.0.4-dy46r2wwmuglnne2coy4h6brykhora2n/spack-src", checksumkind: CSK_MD5, checksum: "d88f6d061f2225d82143d7ff355528bd")
!22 = !{!23, !24, !25}
!23 = !DIEnumerator(name: "__Pyx_ImportType_CheckSize_Error_3_0_4", value: 0)
!24 = !DIEnumerator(name: "__Pyx_ImportType_CheckSize_Warn_3_0_4", value: 1)
!25 = !DIEnumerator(name: "__Pyx_ImportType_CheckSize_Ignore_3_0_4", value: 2)
!26 = !{!27, !28, !70, !343, !353, !7, !42, !361, !374, !378, !386, !405, !34, !423, !427, !435, !446, !445, !452, !451, !457, !458, !341, !459, !470, !475, !40, !238, !483, !490, !491, !482, !364, !501, !502, !515}
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !30, line: 18, baseType: !31)
!30 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pytypedefs.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "38482a77e5b3188ef0e82980904fb142")
!31 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !6, line: 100, size: 128, elements: !32)
!32 = !{!33, !41}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !31, file: !6, line: 102, baseType: !34, size: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !35, line: 131, baseType: !36)
!35 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pyport.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "a198b01de4c7067d893cd27dc3108f8a")
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !37, line: 108, baseType: !38)
!37 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !39, line: 194, baseType: !40)
!39 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!40 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !31, file: !6, line: 103, baseType: !42, size: 64, offset: 64)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !30, line: 20, baseType: !44)
!44 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !45, line: 148, size: 3264, elements: !46)
!45 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/object.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "5cecebbdf3585641a3ef3ab354ac3a06")
!46 = !{!47, !53, !57, !58, !59, !64, !65, !71, !76, !95, !97, !150, !181, !193, !199, !200, !201, !203, !205, !237, !239, !240, !249, !250, !255, !256, !258, !260, !271, !282, !301, !302, !303, !305, !307, !308, !310, !315, !320, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !44, file: !45, line: 149, baseType: !48, size: 192)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !6, line: 112, baseType: !49)
!49 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 109, size: 192, elements: !50)
!50 = !{!51, !52}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !49, file: !6, line: 110, baseType: !29, size: 128)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !49, file: !6, line: 111, baseType: !34, size: 64, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !44, file: !45, line: 150, baseType: !54, size: 64, offset: 192)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!56 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !44, file: !45, line: 151, baseType: !34, size: 64, offset: 256)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !44, file: !45, line: 151, baseType: !34, size: 64, offset: 320)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !44, file: !45, line: 155, baseType: !60, size: 64, offset: 384)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !6, line: 213, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{null, !28}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vectorcall_offset", scope: !44, file: !45, line: 156, baseType: !34, size: 64, offset: 448)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !44, file: !45, line: 157, baseType: !66, size: 64, offset: 512)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !6, line: 214, baseType: !67)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DISubroutineType(types: !69)
!69 = !{!28, !28, !70}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !44, file: !45, line: 158, baseType: !72, size: 64, offset: 576)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !6, line: 216, baseType: !73)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DISubroutineType(types: !75)
!75 = !{!7, !28, !70, !28}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_async", scope: !44, file: !45, line: 159, baseType: !77, size: 64, offset: 640)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyAsyncMethods", file: !45, line: 135, baseType: !79)
!79 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 130, size: 256, elements: !80)
!80 = !{!81, !86, !87, !88}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "am_await", scope: !79, file: !45, line: 131, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !6, line: 196, baseType: !83)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DISubroutineType(types: !85)
!85 = !{!28, !28}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "am_aiter", scope: !79, file: !45, line: 132, baseType: !82, size: 64, offset: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "am_anext", scope: !79, file: !45, line: 133, baseType: !82, size: 64, offset: 128)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "am_send", scope: !79, file: !45, line: 134, baseType: !89, size: 64, offset: 192)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "sendfunc", file: !45, line: 128, baseType: !90)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DISubroutineType(types: !92)
!92 = !{!93, !28, !28, !94}
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySendResult", file: !6, line: 680, baseType: !5)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !44, file: !45, line: 161, baseType: !96, size: 64, offset: 704)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !6, line: 218, baseType: !83)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !44, file: !45, line: 165, baseType: !98, size: 64, offset: 768)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !45, line: 106, baseType: !100)
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 61, size: 2304, elements: !101)
!101 = !{!102, !107, !108, !109, !110, !111, !116, !117, !118, !119, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !100, file: !45, line: 66, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !6, line: 197, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!105 = !DISubroutineType(types: !106)
!106 = !{!28, !28, !28}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !100, file: !45, line: 67, baseType: !103, size: 64, offset: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !100, file: !45, line: 68, baseType: !103, size: 64, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !100, file: !45, line: 69, baseType: !103, size: 64, offset: 192)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !100, file: !45, line: 70, baseType: !103, size: 64, offset: 256)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !100, file: !45, line: 71, baseType: !112, size: 64, offset: 320)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !6, line: 198, baseType: !113)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DISubroutineType(types: !115)
!115 = !{!28, !28, !28, !28}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !100, file: !45, line: 72, baseType: !82, size: 64, offset: 384)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !100, file: !45, line: 73, baseType: !82, size: 64, offset: 448)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !100, file: !45, line: 74, baseType: !82, size: 64, offset: 512)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !100, file: !45, line: 75, baseType: !120, size: 64, offset: 576)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !6, line: 199, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DISubroutineType(types: !123)
!123 = !{!7, !28}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !100, file: !45, line: 76, baseType: !82, size: 64, offset: 640)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !100, file: !45, line: 77, baseType: !103, size: 64, offset: 704)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !100, file: !45, line: 78, baseType: !103, size: 64, offset: 768)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !100, file: !45, line: 79, baseType: !103, size: 64, offset: 832)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !100, file: !45, line: 80, baseType: !103, size: 64, offset: 896)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !100, file: !45, line: 81, baseType: !103, size: 64, offset: 960)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !100, file: !45, line: 82, baseType: !82, size: 64, offset: 1024)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !100, file: !45, line: 83, baseType: !27, size: 64, offset: 1088)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !100, file: !45, line: 84, baseType: !82, size: 64, offset: 1152)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !100, file: !45, line: 86, baseType: !103, size: 64, offset: 1216)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !100, file: !45, line: 87, baseType: !103, size: 64, offset: 1280)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !100, file: !45, line: 88, baseType: !103, size: 64, offset: 1344)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !100, file: !45, line: 89, baseType: !103, size: 64, offset: 1408)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !100, file: !45, line: 90, baseType: !112, size: 64, offset: 1472)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !100, file: !45, line: 91, baseType: !103, size: 64, offset: 1536)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !100, file: !45, line: 92, baseType: !103, size: 64, offset: 1600)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !100, file: !45, line: 93, baseType: !103, size: 64, offset: 1664)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !100, file: !45, line: 94, baseType: !103, size: 64, offset: 1728)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !100, file: !45, line: 95, baseType: !103, size: 64, offset: 1792)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !100, file: !45, line: 97, baseType: !103, size: 64, offset: 1856)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !100, file: !45, line: 98, baseType: !103, size: 64, offset: 1920)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !100, file: !45, line: 99, baseType: !103, size: 64, offset: 1984)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !100, file: !45, line: 100, baseType: !103, size: 64, offset: 2048)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !100, file: !45, line: 102, baseType: !82, size: 64, offset: 2112)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_matrix_multiply", scope: !100, file: !45, line: 104, baseType: !103, size: 64, offset: 2176)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_matrix_multiply", scope: !100, file: !45, line: 105, baseType: !103, size: 64, offset: 2240)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !44, file: !45, line: 166, baseType: !151, size: 64, offset: 832)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !45, line: 120, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 108, size: 640, elements: !154)
!154 = !{!155, !160, !161, !166, !167, !168, !173, !174, !179, !180}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !153, file: !45, line: 109, baseType: !156, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !6, line: 200, baseType: !157)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DISubroutineType(types: !159)
!159 = !{!34, !28}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !153, file: !45, line: 110, baseType: !103, size: 64, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !153, file: !45, line: 111, baseType: !162, size: 64, offset: 128)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !6, line: 201, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DISubroutineType(types: !165)
!165 = !{!28, !28, !34}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !153, file: !45, line: 112, baseType: !162, size: 64, offset: 192)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !153, file: !45, line: 113, baseType: !27, size: 64, offset: 256)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !153, file: !45, line: 114, baseType: !169, size: 64, offset: 320)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !6, line: 203, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DISubroutineType(types: !172)
!172 = !{!7, !28, !34, !28}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !153, file: !45, line: 115, baseType: !27, size: 64, offset: 384)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !153, file: !45, line: 116, baseType: !175, size: 64, offset: 448)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !6, line: 207, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DISubroutineType(types: !178)
!178 = !{!7, !28, !28}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !153, file: !45, line: 118, baseType: !103, size: 64, offset: 512)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !153, file: !45, line: 119, baseType: !162, size: 64, offset: 576)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !44, file: !45, line: 167, baseType: !182, size: 64, offset: 896)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !45, line: 126, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 122, size: 192, elements: !185)
!185 = !{!186, !187, !188}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !184, file: !45, line: 123, baseType: !156, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !184, file: !45, line: 124, baseType: !103, size: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !184, file: !45, line: 125, baseType: !189, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !6, line: 205, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!7, !28, !28, !28}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !44, file: !45, line: 171, baseType: !194, size: 64, offset: 960)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !6, line: 219, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!198, !28}
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !35, line: 145, baseType: !34)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !44, file: !45, line: 172, baseType: !112, size: 64, offset: 1024)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !44, file: !45, line: 173, baseType: !96, size: 64, offset: 1088)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !44, file: !45, line: 174, baseType: !202, size: 64, offset: 1152)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !6, line: 215, baseType: !104)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !44, file: !45, line: 175, baseType: !204, size: 64, offset: 1216)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !6, line: 217, baseType: !190)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !44, file: !45, line: 178, baseType: !206, size: 64, offset: 1280)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !45, line: 140, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !45, line: 137, size: 128, elements: !209)
!209 = !{!210, !232}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !208, file: !45, line: 138, baseType: !211, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !45, line: 54, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DISubroutineType(types: !214)
!214 = !{!7, !28, !215, !7}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !217, line: 33, baseType: !218)
!217 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pybuffer.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "b062a75218ff363c388d03c953e9be96")
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !217, line: 20, size: 640, elements: !219)
!219 = !{!220, !221, !222, !223, !224, !225, !226, !227, !229, !230, !231}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !218, file: !217, line: 21, baseType: !27, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !218, file: !217, line: 22, baseType: !28, size: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !218, file: !217, line: 23, baseType: !34, size: 64, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !218, file: !217, line: 24, baseType: !34, size: 64, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !218, file: !217, line: 26, baseType: !7, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !218, file: !217, line: 27, baseType: !7, size: 32, offset: 288)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !218, file: !217, line: 28, baseType: !70, size: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !218, file: !217, line: 29, baseType: !228, size: 64, offset: 384)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !218, file: !217, line: 30, baseType: !228, size: 64, offset: 448)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !218, file: !217, line: 31, baseType: !228, size: 64, offset: 512)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !218, file: !217, line: 32, baseType: !27, size: 64, offset: 576)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !208, file: !45, line: 139, baseType: !233, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !45, line: 55, baseType: !234)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DISubroutineType(types: !236)
!236 = !{null, !28, !215}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !44, file: !45, line: 181, baseType: !238, size: 64, offset: 1344)
!238 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !44, file: !45, line: 183, baseType: !54, size: 64, offset: 1408)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !44, file: !45, line: 187, baseType: !241, size: 64, offset: 1472)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !6, line: 209, baseType: !242)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DISubroutineType(types: !244)
!244 = !{!7, !28, !245, !27}
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !6, line: 208, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DISubroutineType(types: !248)
!248 = !{!7, !28, !27}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !44, file: !45, line: 190, baseType: !120, size: 64, offset: 1536)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !44, file: !45, line: 194, baseType: !251, size: 64, offset: 1600)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !6, line: 220, baseType: !252)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DISubroutineType(types: !254)
!254 = !{!28, !28, !28, !7}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !44, file: !45, line: 197, baseType: !34, size: 64, offset: 1664)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !44, file: !45, line: 200, baseType: !257, size: 64, offset: 1728)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !6, line: 221, baseType: !83)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !44, file: !45, line: 201, baseType: !259, size: 64, offset: 1792)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !6, line: 222, baseType: !83)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !44, file: !45, line: 204, baseType: !261, size: 64, offset: 1856)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !30, line: 14, baseType: !263)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !264, line: 54, size: 256, elements: !265)
!264 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/methodobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "d16253797aba078267dcb5d0afce23bc")
!265 = !{!266, !267, !269, !270}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !263, file: !264, line: 55, baseType: !54, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !263, file: !264, line: 56, baseType: !268, size: 64, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !264, line: 19, baseType: !104)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !263, file: !264, line: 57, baseType: !7, size: 32, offset: 128)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !263, file: !264, line: 59, baseType: !54, size: 64, offset: 192)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !44, file: !45, line: 205, baseType: !272, size: 64, offset: 1920)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !30, line: 16, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !275, line: 18, size: 320, elements: !276)
!275 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/structmember.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7454eedd17059aa65fa47c9e0f3b5384")
!276 = !{!277, !278, !279, !280, !281}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !274, file: !275, line: 19, baseType: !54, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !274, file: !275, line: 20, baseType: !7, size: 32, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !274, file: !275, line: 21, baseType: !34, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !274, file: !275, line: 22, baseType: !7, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !274, file: !275, line: 23, baseType: !54, size: 64, offset: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !44, file: !45, line: 206, baseType: !283, size: 64, offset: 1984)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !30, line: 15, baseType: !285)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !286, line: 11, size: 320, elements: !287)
!286 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/descrobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "242ee4d5fc45bad34457db881bf071ca")
!287 = !{!288, !289, !294, !299, !300}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !285, file: !286, line: 12, baseType: !54, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !285, file: !286, line: 13, baseType: !290, size: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !286, line: 8, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{!28, !28, !27}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !285, file: !286, line: 14, baseType: !295, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !286, line: 9, baseType: !296)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{!7, !28, !28, !27}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !285, file: !286, line: 15, baseType: !54, size: 64, offset: 192)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !285, file: !286, line: 16, baseType: !27, size: 64, offset: 256)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !44, file: !45, line: 208, baseType: !42, size: 64, offset: 2048)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !44, file: !45, line: 209, baseType: !28, size: 64, offset: 2112)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !44, file: !45, line: 210, baseType: !304, size: 64, offset: 2176)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !6, line: 223, baseType: !113)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !44, file: !45, line: 211, baseType: !306, size: 64, offset: 2240)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !6, line: 224, baseType: !190)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !44, file: !45, line: 212, baseType: !34, size: 64, offset: 2304)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !44, file: !45, line: 213, baseType: !309, size: 64, offset: 2368)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !6, line: 225, baseType: !190)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !44, file: !45, line: 214, baseType: !311, size: 64, offset: 2432)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !6, line: 227, baseType: !312)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{!28, !42, !34}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !44, file: !45, line: 215, baseType: !316, size: 64, offset: 2496)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !6, line: 226, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DISubroutineType(types: !319)
!319 = !{!28, !42, !28, !28}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !44, file: !45, line: 216, baseType: !321, size: 64, offset: 2560)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !6, line: 212, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !27}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !44, file: !45, line: 217, baseType: !120, size: 64, offset: 2624)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !44, file: !45, line: 218, baseType: !28, size: 64, offset: 2688)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !44, file: !45, line: 219, baseType: !28, size: 64, offset: 2752)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !44, file: !45, line: 220, baseType: !28, size: 64, offset: 2816)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !44, file: !45, line: 221, baseType: !28, size: 64, offset: 2880)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !44, file: !45, line: 222, baseType: !28, size: 64, offset: 2944)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !44, file: !45, line: 223, baseType: !60, size: 64, offset: 3008)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !44, file: !45, line: 226, baseType: !14, size: 32, offset: 3072)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !44, file: !45, line: 228, baseType: !60, size: 64, offset: 3136)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vectorcall", scope: !44, file: !45, line: 229, baseType: !335, size: 64, offset: 3200)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "vectorcallfunc", file: !45, line: 57, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!28, !28, !339, !341, !28}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !28)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !342, line: 70, baseType: !238)
!342 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !345, line: 11, baseType: !346)
!345 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/tupleobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "dc5125d9874a31c3ab3d1fe314ca89bb")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 5, size: 256, elements: !347)
!347 = !{!348, !349}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !346, file: !345, line: 6, baseType: !48, size: 192)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !346, file: !345, line: 10, baseType: !350, size: 64, offset: 192)
!350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !351)
!351 = !{!352}
!352 = !DISubrange(count: 1)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !355, line: 22, baseType: !356)
!355 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/listobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "fb4fd95f673a2d5fdee5b26f4d68bde2")
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !355, line: 5, size: 320, elements: !357)
!357 = !{!358, !359, !360}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !356, file: !355, line: 6, baseType: !48, size: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !356, file: !355, line: 8, baseType: !94, size: 64, offset: 192)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !356, file: !355, line: 21, baseType: !34, size: 64, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!28, !364, !28, !34, !7}
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6Cython_7Runtime_8refnanny_Context", file: !21, line: 1510, size: 512, elements: !366)
!366 = !{!367, !368, !381, !382, !383, !384, !385}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !365, file: !21, line: 1511, baseType: !29, size: 128)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_vtab", scope: !365, file: !21, line: 1512, baseType: !369, size: 64, offset: 128)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_vtabstruct_6Cython_7Runtime_8refnanny_Context", file: !21, line: 1522, size: 192, elements: !371)
!371 = !{!372, !373, !377}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "regref", scope: !370, file: !21, line: 1523, baseType: !361, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "delref", scope: !370, file: !21, line: 1524, baseType: !374, size: 64, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!7, !364, !28, !34, !7}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !370, file: !21, line: 1525, baseType: !378, size: 64, offset: 128)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DISubroutineType(types: !380)
!380 = !{!28, !364}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !365, file: !21, line: 1513, baseType: !28, size: 64, offset: 192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !365, file: !21, line: 1514, baseType: !28, size: 64, offset: 256)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !365, file: !21, line: 1515, baseType: !28, size: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !365, file: !21, line: 1516, baseType: !28, size: 64, offset: 384)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !365, file: !21, line: 1517, baseType: !34, size: 64, offset: 448)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictObject", file: !388, line: 29, baseType: !389)
!388 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/dictobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "ca445c2681ff34d200fbf38fa4280db0")
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !388, line: 11, size: 384, elements: !390)
!390 = !{!391, !392, !393, !397, !401}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !389, file: !388, line: 12, baseType: !29, size: 128)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "ma_used", scope: !389, file: !388, line: 15, baseType: !34, size: 64, offset: 128)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "ma_version_tag", scope: !389, file: !388, line: 19, baseType: !394, size: 64, offset: 192)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !395, line: 27, baseType: !396)
!395 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !39, line: 45, baseType: !238)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ma_keys", scope: !389, file: !388, line: 21, baseType: !398, size: 64, offset: 256)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictKeysObject", file: !388, line: 5, baseType: !400)
!400 = !DICompositeType(tag: DW_TAG_structure_type, name: "_dictkeysobject", file: !45, line: 254, flags: DIFlagFwdDecl)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ma_values", scope: !389, file: !388, line: 28, baseType: !402, size: 64, offset: 320)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictValues", file: !388, line: 6, baseType: !404)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "_dictvalues", file: !388, line: 6, flags: DIFlagFwdDecl)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !13, line: 206, baseType: !407)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 72, size: 384, elements: !408)
!408 = !{!409, !410, !411, !412, !420}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !407, file: !13, line: 146, baseType: !29, size: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !407, file: !13, line: 147, baseType: !34, size: 64, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !407, file: !13, line: 148, baseType: !198, size: 64, offset: 192)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !407, file: !13, line: 204, baseType: !413, size: 32, offset: 256)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !407, file: !13, line: 149, size: 32, elements: !414)
!414 = !{!415, !416, !417, !418, !419}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !413, file: !13, line: 158, baseType: !14, size: 2, flags: DIFlagBitField, extraData: i64 0)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !413, file: !13, line: 186, baseType: !14, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !413, file: !13, line: 191, baseType: !14, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !413, file: !13, line: 195, baseType: !14, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !413, file: !13, line: 200, baseType: !14, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !407, file: !13, line: 205, baseType: !421, size: 64, offset: 320)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !342, line: 96, baseType: !7)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !424, line: 102, baseType: !425)
!424 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/unicodeobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "0cca020c29e2c9bcb16b6fcf0d642f7b")
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !395, line: 26, baseType: !426)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !39, line: 42, baseType: !14)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !13, line: 218, baseType: !429)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 211, size: 576, elements: !430)
!430 = !{!431, !432, !433, !434}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !429, file: !13, line: 212, baseType: !406, size: 384)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !429, file: !13, line: 213, baseType: !34, size: 64, offset: 384)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !429, file: !13, line: 215, baseType: !70, size: 64, offset: 448)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !429, file: !13, line: 216, baseType: !34, size: 64, offset: 512)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !13, line: 231, baseType: !437)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 223, size: 640, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !437, file: !13, line: 224, baseType: !428, size: 576)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !437, file: !13, line: 230, baseType: !441, size: 64, offset: 576)
!441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !437, file: !13, line: 225, size: 64, elements: !442)
!442 = !{!443, !444, !450, !456}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !441, file: !13, line: 226, baseType: !27, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !441, file: !13, line: 227, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !424, line: 104, baseType: !447)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !395, line: 24, baseType: !448)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !39, line: 38, baseType: !449)
!449 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !441, file: !13, line: 228, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !424, line: 103, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !395, line: 25, baseType: !454)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !39, line: 40, baseType: !455)
!455 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !441, file: !13, line: 229, baseType: !457, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunctionObject", file: !461, line: 14, baseType: !462)
!461 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/methodobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "de162f3f7705d370de4a5b2391985004")
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !461, line: 7, size: 448, elements: !463)
!463 = !{!464, !465, !466, !467, !468, !469}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !462, file: !461, line: 8, baseType: !29, size: 128)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "m_ml", scope: !462, file: !461, line: 9, baseType: !261, size: 64, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "m_self", scope: !462, file: !461, line: 10, baseType: !28, size: 64, offset: 192)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "m_module", scope: !462, file: !461, line: 11, baseType: !28, size: 64, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "m_weakreflist", scope: !462, file: !461, line: 12, baseType: !28, size: 64, offset: 320)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !462, file: !461, line: 13, baseType: !335, size: 64, offset: 384)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "sdigit", file: !471, line: 44, baseType: !472)
!471 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/longintrepr.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "8513e3439a1d73970093054a9381adac")
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !473, line: 26, baseType: !474)
!473 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !39, line: 41, baseType: !7)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyLongObject", file: !30, line: 19, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_longobject", file: !471, line: 82, size: 256, elements: !478)
!478 = !{!479, !480}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !477, file: !471, line: 83, baseType: !48, size: 192)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "ob_digit", scope: !477, file: !471, line: 84, baseType: !481, size: 32, offset: 192)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 32, elements: !351)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "digit", file: !471, line: 43, baseType: !425)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFloatObject", file: !485, line: 8, baseType: !486)
!485 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/floatobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "0127bed5b76fd86b83262b685d601e4b")
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !485, line: 5, size: 192, elements: !487)
!487 = !{!488, !489}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !486, file: !485, line: 6, baseType: !29, size: 128)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ob_fval", scope: !486, file: !485, line: 7, baseType: !490, size: 64, offset: 128)
!490 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodObject", file: !493, line: 18, baseType: !494)
!493 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/classobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "f84d2b52de3a2730fbf0010ddbe9b14d")
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !493, line: 12, size: 384, elements: !495)
!495 = !{!496, !497, !498, !499, !500}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !494, file: !493, line: 13, baseType: !29, size: 128)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "im_func", scope: !494, file: !493, line: 14, baseType: !28, size: 64, offset: 128)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "im_self", scope: !494, file: !493, line: 15, baseType: !28, size: 64, offset: 192)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "im_weakreflist", scope: !494, file: !493, line: 16, baseType: !28, size: 64, offset: 256)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !494, file: !493, line: 17, baseType: !335, size: 64, offset: 320)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBaseExceptionObject", file: !504, line: 15, baseType: !505)
!504 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/pyerrors.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "2f3eb284fb3e39b9b78ca1d783b6f62c")
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !504, line: 13, size: 576, elements: !506)
!506 = !{!507, !508, !509, !510, !511, !512, !513, !514}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !505, file: !504, line: 14, baseType: !29, size: 128)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !505, file: !504, line: 14, baseType: !28, size: 64, offset: 128)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !505, file: !504, line: 14, baseType: !28, size: 64, offset: 192)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "notes", scope: !505, file: !504, line: 14, baseType: !28, size: 64, offset: 256)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !505, file: !504, line: 14, baseType: !28, size: 64, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !505, file: !504, line: 14, baseType: !28, size: 64, offset: 384)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !505, file: !504, line: 14, baseType: !28, size: 64, offset: 448)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !505, file: !504, line: 14, baseType: !56, size: 8, offset: 512)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_CodeObjectCacheEntry", file: !21, line: 2176, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 2173, size: 128, elements: !518)
!518 = !{!519, !556}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "code_object", scope: !517, file: !21, line: 2174, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCodeObject", file: !30, line: 21, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyCodeObject", file: !523, line: 103, size: 1536, elements: !524)
!523 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/code.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "0b18b017cf6ecc9860048f5ec02e4f52")
!524 = !{!525, !526, !527, !528, !529, !530, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !522, file: !523, line: 103, baseType: !48, size: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "co_consts", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 192)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "co_names", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "co_exceptiontable", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 320)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "co_flags", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 384)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "co_warmup", scope: !522, file: !523, line: 103, baseType: !531, size: 16, offset: 416)
!531 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_co_linearray_entry_size", scope: !522, file: !523, line: 103, baseType: !531, size: 16, offset: 432)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "co_argcount", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 448)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "co_posonlyargcount", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 480)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "co_kwonlyargcount", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 512)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "co_stacksize", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 544)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "co_firstlineno", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 576)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "co_nlocalsplus", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 608)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "co_nlocals", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 640)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "co_nplaincellvars", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 672)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "co_ncellvars", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 704)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "co_nfreevars", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 736)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "co_localsplusnames", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 768)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "co_localspluskinds", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 832)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "co_filename", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 896)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "co_name", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 960)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "co_qualname", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 1024)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "co_linetable", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 1088)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "co_weakreflist", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 1152)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "_co_code", scope: !522, file: !523, line: 103, baseType: !28, size: 64, offset: 1216)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "_co_linearray", scope: !522, file: !523, line: 103, baseType: !70, size: 64, offset: 1280)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_co_firsttraceable", scope: !522, file: !523, line: 103, baseType: !7, size: 32, offset: 1344)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "co_extra", scope: !522, file: !523, line: 103, baseType: !27, size: 64, offset: 1408)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "co_code_adaptive", scope: !522, file: !523, line: 103, baseType: !555, size: 8, offset: 1472)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 8, elements: !351)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "code_line", scope: !517, file: !21, line: 2175, baseType: !7, size: 32, offset: 64)
!557 = !{!0, !558, !563, !593, !596, !601, !606, !611, !616, !618, !620, !622, !627, !632, !634, !643, !648, !650, !655, !657, !662, !667, !669, !674, !679, !745, !747, !752, !757, !762, !767, !769, !771, !781, !784, !789, !791, !794, !797, !802, !805, !808, !813, !818, !821, !824, !826, !828, !830, !832, !834, !839, !841, !843, !845, !847, !849, !851, !853, !855, !857, !862, !864, !866, !871, !876, !878, !880, !882, !884, !886, !888, !890, !895, !898, !900, !905, !907, !912, !914, !916, !918, !920, !922, !924, !929, !931, !933, !935, !937, !968, !970, !975, !977, !980, !985, !987, !1008, !1010, !1012, !1014, !1016, !1018, !1020, !1023, !1028, !1033, !1036, !1038, !1043, !1078, !1080, !1082, !1087, !1089, !1094, !1099, !1104, !1109, !1111, !1113, !1115, !1117, !1119, !1121, !1124, !1127, !1129, !1132, !1137, !1139, !1144, !1149, !1151, !1154, !1156, !1161, !1164, !1166, !1171, !1176, !1178, !1180, !1183, !1188, !1193, !1198, !1200, !1202, !1204, !1206, !1226, !1228, !1230, !1232, !1237, !1239, !1241, !1246, !1248, !1250, !1255, !1419, !1421, !1428, !1430, !1435}
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6353, type: !560, isLocal: true, isDefinition: true)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 72, elements: !561)
!561 = !{!562}
!562 = !DISubrange(count: 9)
!563 = !DIGlobalVariableExpression(var: !564, expr: !DIExpression())
!564 = distinct !DIGlobalVariable(name: "__pyx_moduledef", scope: !2, file: !21, line: 6349, type: !565, isLocal: true, isDefinition: true)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !566, line: 74, size: 832, elements: !567)
!566 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/moduleobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "daa9b768501fad61bad25a7caf4dc4db")
!567 = !{!568, !579, !580, !581, !582, !583, !590, !591, !592}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !565, file: !566, line: 75, baseType: !569, size: 320)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !566, line: 49, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !566, line: 44, size: 320, elements: !571)
!571 = !{!572, !573, !577, !578}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !570, file: !566, line: 45, baseType: !29, size: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !570, file: !566, line: 46, baseType: !574, size: 64, offset: 128)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!28}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !570, file: !566, line: 47, baseType: !34, size: 64, offset: 192)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !570, file: !566, line: 48, baseType: !28, size: 64, offset: 256)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !565, file: !566, line: 76, baseType: !54, size: 64, offset: 320)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !565, file: !566, line: 77, baseType: !54, size: 64, offset: 384)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !565, file: !566, line: 78, baseType: !34, size: 64, offset: 448)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !565, file: !566, line: 79, baseType: !261, size: 64, offset: 512)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "m_slots", scope: !565, file: !566, line: 80, baseType: !584, size: 64, offset: 576)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Slot", file: !30, line: 13, baseType: !586)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Slot", file: !566, line: 60, size: 128, elements: !587)
!587 = !{!588, !589}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !586, file: !566, line: 61, baseType: !7, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !586, file: !566, line: 62, baseType: !27, size: 64, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !565, file: !566, line: 81, baseType: !241, size: 64, offset: 640)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !565, file: !566, line: 82, baseType: !120, size: 64, offset: 704)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !565, file: !566, line: 83, baseType: !321, size: 64, offset: 768)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "__pyx_methods", scope: !2, file: !21, line: 6096, type: !595, isLocal: true, isDefinition: true)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !351)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "__pyx_moduledef_slots", scope: !2, file: !21, line: 6338, type: !598, isLocal: true, isDefinition: true)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !585, size: 384, elements: !599)
!599 = !{!600}
!600 = !DISubrange(count: 3)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6464, type: !603, isLocal: true, isDefinition: true)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 40, elements: !604)
!604 = !{!605}
!605 = !DISubrange(count: 5)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6475, type: !608, isLocal: true, isDefinition: true)
!608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 56, elements: !609)
!609 = !{!610}
!610 = !DISubrange(count: 7)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6475, type: !613, isLocal: true, isDefinition: true)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 88, elements: !614)
!614 = !{!615}
!615 = !DISubrange(count: 11)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6476, type: !608, isLocal: true, isDefinition: true)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6476, type: !560, isLocal: true, isDefinition: true)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6477, type: !608, isLocal: true, isDefinition: true)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6477, type: !624, isLocal: true, isDefinition: true)
!624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 96, elements: !625)
!625 = !{!626}
!626 = !DISubrange(count: 12)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6478, type: !629, isLocal: true, isDefinition: true)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 216, elements: !630)
!630 = !{!631}
!631 = !DISubrange(count: 27)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6478, type: !560, isLocal: true, isDefinition: true)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "main_interpreter_id", scope: !636, file: !21, line: 6412, type: !641, isLocal: true, isDefinition: true)
!636 = distinct !DISubprogram(name: "__Pyx_check_single_interpreter", scope: !21, file: !21, line: 6410, type: !637, scopeLine: 6410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !639)
!637 = !DISubroutineType(types: !638)
!638 = !{!7}
!639 = !{!640}
!640 = !DILocalVariable(name: "current_id", scope: !636, file: !21, line: 6413, type: !641)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !473, line: 27, baseType: !642)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !39, line: 44, baseType: !40)
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6428, type: !645, isLocal: true, isDefinition: true)
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 760, elements: !646)
!646 = !{!647}
!647 = !DISubrange(count: 95)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "__pyx_m", scope: !2, file: !21, line: 1446, type: !28, isLocal: true, isDefinition: true)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6507, type: !652, isLocal: true, isDefinition: true)
!652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 648, elements: !653)
!653 = !{!654}
!654 = !DISubrange(count: 81)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6537, type: !560, isLocal: true, isDefinition: true)
!657 = !DIGlobalVariableExpression(var: !658, expr: !DIExpression())
!658 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6539, type: !659, isLocal: true, isDefinition: true)
!659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 120, elements: !660)
!660 = !{!661}
!661 = !DISubrange(count: 15)
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6541, type: !664, isLocal: true, isDefinition: true)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 104, elements: !665)
!665 = !{!666}
!666 = !DISubrange(count: 13)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6557, type: !555, isLocal: true, isDefinition: true)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6595, type: !671, isLocal: true, isDefinition: true)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 192, elements: !672)
!672 = !{!673}
!673 = !DISubrange(count: 24)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6772, type: !676, isLocal: true, isDefinition: true)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 232, elements: !677)
!677 = !{!678}
!678 = !DISubrange(count: 29)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "__pyx_mstate_global", scope: !2, file: !21, line: 2470, type: !681, isLocal: true, isDefinition: true)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pyx_mstate", file: !21, line: 2447, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 2345, size: 3840, elements: !684)
!684 = !{!685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_d", scope: !683, file: !21, line: 2346, baseType: !28, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_b", scope: !683, file: !21, line: 2347, baseType: !28, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_cython_runtime", scope: !683, file: !21, line: 2348, baseType: !28, size: 64, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_empty_tuple", scope: !683, file: !21, line: 2349, baseType: !28, size: 64, offset: 192)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_empty_bytes", scope: !683, file: !21, line: 2350, baseType: !28, size: 64, offset: 256)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_empty_unicode", scope: !683, file: !21, line: 2351, baseType: !28, size: 64, offset: 320)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_7cpython_4type_type", scope: !683, file: !21, line: 2378, baseType: !42, size: 64, offset: 384)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_ptype_6Cython_7Runtime_8refnanny_Context", scope: !683, file: !21, line: 2394, baseType: !42, size: 64, offset: 448)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_", scope: !683, file: !21, line: 2395, baseType: !28, size: 64, offset: 512)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_Context", scope: !683, file: !21, line: 2396, baseType: !28, size: 64, offset: 576)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_LOG_ALL", scope: !683, file: !21, line: 2397, baseType: !28, size: 64, offset: 640)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_LOG_NONE", scope: !683, file: !21, line: 2398, baseType: !28, size: 64, offset: 704)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_NULL", scope: !683, file: !21, line: 2399, baseType: !28, size: 64, offset: 768)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_NULL_argument_on_line", scope: !683, file: !21, line: 2400, baseType: !28, size: 64, offset: 832)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_REFNANNY", scope: !683, file: !21, line: 2401, baseType: !28, size: 64, offset: 896)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_RefNannyAPI", scope: !683, file: !21, line: 2402, baseType: !28, size: 64, offset: 960)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_References_leaked", scope: !683, file: !21, line: 2403, baseType: !28, size: 64, offset: 1024)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_Too_many_decrefs_on_line", scope: !683, file: !21, line: 2404, baseType: !28, size: 64, offset: 1088)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u__2", scope: !683, file: !21, line: 2405, baseType: !28, size: 64, offset: 1152)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u__3", scope: !683, file: !21, line: 2406, baseType: !28, size: 64, offset: 1216)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s__4", scope: !683, file: !21, line: 2407, baseType: !28, size: 64, offset: 1280)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u__5", scope: !683, file: !21, line: 2408, baseType: !28, size: 64, offset: 1344)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u__6", scope: !683, file: !21, line: 2409, baseType: !28, size: 64, offset: 1408)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u__7", scope: !683, file: !21, line: 2410, baseType: !28, size: 64, offset: 1472)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s__9", scope: !683, file: !21, line: 2411, baseType: !28, size: 64, offset: 1536)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_acquired_on_lines", scope: !683, file: !21, line: 2412, baseType: !28, size: 64, offset: 1600)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_append", scope: !683, file: !21, line: 2413, baseType: !28, size: 64, offset: 1664)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_cline_in_traceback", scope: !683, file: !21, line: 2414, baseType: !28, size: 64, offset: 1728)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_decode", scope: !683, file: !21, line: 2415, baseType: !28, size: 64, offset: 1792)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_u_delref", scope: !683, file: !21, line: 2416, baseType: !28, size: 64, offset: 1856)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_disable", scope: !683, file: !21, line: 2417, baseType: !28, size: 64, offset: 1920)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_enable", scope: !683, file: !21, line: 2418, baseType: !28, size: 64, offset: 1984)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_exc_info", scope: !683, file: !21, line: 2419, baseType: !28, size: 64, offset: 2048)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_filename", scope: !683, file: !21, line: 2420, baseType: !28, size: 64, offset: 2112)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_gc", scope: !683, file: !21, line: 2421, baseType: !28, size: 64, offset: 2176)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_get", scope: !683, file: !21, line: 2422, baseType: !28, size: 64, offset: 2240)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_id", scope: !683, file: !21, line: 2423, baseType: !28, size: 64, offset: 2304)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_import", scope: !683, file: !21, line: 2424, baseType: !28, size: 64, offset: 2368)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_initializing", scope: !683, file: !21, line: 2425, baseType: !28, size: 64, offset: 2432)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_isenabled", scope: !683, file: !21, line: 2426, baseType: !28, size: 64, offset: 2496)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_itervalues", scope: !683, file: !21, line: 2427, baseType: !28, size: 64, offset: 2560)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_u_latin1", scope: !683, file: !21, line: 2428, baseType: !28, size: 64, offset: 2624)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_line", scope: !683, file: !21, line: 2429, baseType: !28, size: 64, offset: 2688)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_loglevel", scope: !683, file: !21, line: 2430, baseType: !28, size: 64, offset: 2752)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_main", scope: !683, file: !21, line: 2431, baseType: !28, size: 64, offset: 2816)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_name", scope: !683, file: !21, line: 2432, baseType: !28, size: 64, offset: 2880)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_name_2", scope: !683, file: !21, line: 2433, baseType: !28, size: 64, offset: 2944)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_print", scope: !683, file: !21, line: 2434, baseType: !28, size: 64, offset: 3008)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_pyx_vtable", scope: !683, file: !21, line: 2435, baseType: !28, size: 64, offset: 3072)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_range", scope: !683, file: !21, line: 2436, baseType: !28, size: 64, offset: 3136)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_reference_acquired_on_lines", scope: !683, file: !21, line: 2437, baseType: !28, size: 64, offset: 3200)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_reflog", scope: !683, file: !21, line: 2438, baseType: !28, size: 64, offset: 3264)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_kp_u_refnanny_raised_an_exception_fro", scope: !683, file: !21, line: 2439, baseType: !28, size: 64, offset: 3328)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_u_regref", scope: !683, file: !21, line: 2440, baseType: !28, size: 64, offset: 3392)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_spec", scope: !683, file: !21, line: 2441, baseType: !28, size: 64, offset: 3456)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n_s_sys", scope: !683, file: !21, line: 2442, baseType: !28, size: 64, offset: 3520)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_0", scope: !683, file: !21, line: 2443, baseType: !28, size: 64, offset: 3584)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_1", scope: !683, file: !21, line: 2444, baseType: !28, size: 64, offset: 3648)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_int_2", scope: !683, file: !21, line: 2445, baseType: !28, size: 64, offset: 3712)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_tuple__8", scope: !683, file: !21, line: 2446, baseType: !28, size: 64, offset: 3776)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__pyx_mstate_global_static", scope: !2, file: !21, line: 2464, type: !682, isLocal: true, isDefinition: true)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1456, type: !749, isLocal: true, isDefinition: true)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 224, elements: !750)
!750 = !{!751}
!751 = !DISubrange(count: 28)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1457, type: !754, isLocal: true, isDefinition: true)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 264, elements: !755)
!755 = !{!756}
!756 = !DISubrange(count: 33)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__pyx_f", scope: !2, file: !21, line: 1455, type: !759, isLocal: true, isDefinition: true)
!759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 128, elements: !760)
!760 = !{!761}
!761 = !DISubrange(count: 2)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(scope: null, file: !21, line: 11022, type: !764, isLocal: true, isDefinition: true)
!764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 624, elements: !765)
!765 = !{!766}
!766 = !DISubrange(count: 78)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(scope: null, file: !21, line: 11028, type: !659, isLocal: true, isDefinition: true)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(scope: null, file: !21, line: 11028, type: !659, isLocal: true, isDefinition: true)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__pyx_umethod_PyDict_Type_get", scope: !2, file: !21, line: 2342, type: !773, isLocal: true, isDefinition: true)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_CachedCFunction", file: !21, line: 1901, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 1895, size: 320, elements: !775)
!775 = !{!776, !777, !778, !779, !780}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !774, file: !21, line: 1896, baseType: !28, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "method_name", scope: !774, file: !21, line: 1897, baseType: !94, size: 64, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !774, file: !21, line: 1898, baseType: !268, size: 64, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !774, file: !21, line: 1899, baseType: !28, size: 64, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !774, file: !21, line: 1900, baseType: !7, size: 32, offset: 256)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__pyx_k_", scope: !2, file: !21, line: 2286, type: !783, isLocal: true, isDefinition: true)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 40, elements: !604)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__pyx_k_Context", scope: !2, file: !21, line: 2314, type: !786, isLocal: true, isDefinition: true)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 64, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 8)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__pyx_k_LOG_ALL", scope: !2, file: !21, line: 2315, type: !786, isLocal: true, isDefinition: true)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__pyx_k_LOG_NONE", scope: !2, file: !21, line: 2317, type: !793, isLocal: true, isDefinition: true)
!793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 72, elements: !561)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__pyx_k_NULL", scope: !2, file: !21, line: 2298, type: !796, isLocal: true, isDefinition: true)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 56, elements: !609)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__pyx_k_NULL_argument_on_line", scope: !2, file: !21, line: 2330, type: !799, isLocal: true, isDefinition: true)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 184, elements: !800)
!800 = !{!801}
!801 = !DISubrange(count: 23)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__pyx_k_REFNANNY", scope: !2, file: !21, line: 2318, type: !804, isLocal: true, isDefinition: true)
!804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 88, elements: !614)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__pyx_k_RefNannyAPI", scope: !2, file: !21, line: 2325, type: !807, isLocal: true, isDefinition: true)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 96, elements: !625)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__pyx_k_References_leaked", scope: !2, file: !21, line: 2327, type: !810, isLocal: true, isDefinition: true)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 152, elements: !811)
!811 = !{!812}
!812 = !DISubrange(count: 19)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__pyx_k_Too_many_decrefs_on_line", scope: !2, file: !21, line: 2331, type: !815, isLocal: true, isDefinition: true)
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 208, elements: !816)
!816 = !{!817}
!817 = !DISubrange(count: 26)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__pyx_k__2", scope: !2, file: !21, line: 2287, type: !820, isLocal: true, isDefinition: true)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 24, elements: !599)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "__pyx_k__3", scope: !2, file: !21, line: 2288, type: !823, isLocal: true, isDefinition: true)
!823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 16, elements: !760)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__pyx_k__4", scope: !2, file: !21, line: 2289, type: !823, isLocal: true, isDefinition: true)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__pyx_k__5", scope: !2, file: !21, line: 2290, type: !823, isLocal: true, isDefinition: true)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__pyx_k__6", scope: !2, file: !21, line: 2291, type: !820, isLocal: true, isDefinition: true)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__pyx_k__7", scope: !2, file: !21, line: 2292, type: !820, isLocal: true, isDefinition: true)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "__pyx_k__9", scope: !2, file: !21, line: 2293, type: !823, isLocal: true, isDefinition: true)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__pyx_k_acquired_on_lines", scope: !2, file: !21, line: 2328, type: !836, isLocal: true, isDefinition: true)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 176, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 22)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__pyx_k_append", scope: !2, file: !21, line: 2305, type: !796, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "__pyx_k_cline_in_traceback", scope: !2, file: !21, line: 2329, type: !810, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "__pyx_k_decode", scope: !2, file: !21, line: 2306, type: !796, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "__pyx_k_delref", scope: !2, file: !21, line: 2307, type: !796, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "__pyx_k_disable", scope: !2, file: !21, line: 2316, type: !786, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__pyx_k_enable", scope: !2, file: !21, line: 2308, type: !796, isLocal: true, isDefinition: true)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__pyx_k_exc_info", scope: !2, file: !21, line: 2319, type: !793, isLocal: true, isDefinition: true)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__pyx_k_filename", scope: !2, file: !21, line: 2320, type: !793, isLocal: true, isDefinition: true)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__pyx_k_gc", scope: !2, file: !21, line: 2294, type: !820, isLocal: true, isDefinition: true)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__pyx_k_get", scope: !2, file: !21, line: 2296, type: !859, isLocal: true, isDefinition: true)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 32, elements: !860)
!860 = !{!861}
!861 = !DISubrange(count: 4)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "__pyx_k_id", scope: !2, file: !21, line: 2295, type: !820, isLocal: true, isDefinition: true)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__pyx_k_import", scope: !2, file: !21, line: 2309, type: !804, isLocal: true, isDefinition: true)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__pyx_k_initializing", scope: !2, file: !21, line: 2326, type: !868, isLocal: true, isDefinition: true)
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 112, elements: !869)
!869 = !{!870}
!870 = !DISubrange(count: 14)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "__pyx_k_isenabled", scope: !2, file: !21, line: 2322, type: !873, isLocal: true, isDefinition: true)
!873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 80, elements: !874)
!874 = !{!875}
!875 = !DISubrange(count: 10)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__pyx_k_itervalues", scope: !2, file: !21, line: 2323, type: !804, isLocal: true, isDefinition: true)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__pyx_k_latin1", scope: !2, file: !21, line: 2310, type: !796, isLocal: true, isDefinition: true)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "__pyx_k_line", scope: !2, file: !21, line: 2299, type: !783, isLocal: true, isDefinition: true)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "__pyx_k_loglevel", scope: !2, file: !21, line: 2321, type: !793, isLocal: true, isDefinition: true)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__pyx_k_main", scope: !2, file: !21, line: 2300, type: !793, isLocal: true, isDefinition: true)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__pyx_k_name", scope: !2, file: !21, line: 2301, type: !783, isLocal: true, isDefinition: true)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__pyx_k_name_2", scope: !2, file: !21, line: 2311, type: !793, isLocal: true, isDefinition: true)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__pyx_k_print", scope: !2, file: !21, line: 2303, type: !892, isLocal: true, isDefinition: true)
!892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 48, elements: !893)
!893 = !{!894}
!894 = !DISubrange(count: 6)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_vtable", scope: !2, file: !21, line: 2324, type: !897, isLocal: true, isDefinition: true)
!897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 120, elements: !660)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__pyx_k_range", scope: !2, file: !21, line: 2304, type: !892, isLocal: true, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__pyx_k_reference_acquired_on_lines", scope: !2, file: !21, line: 2332, type: !902, isLocal: true, isDefinition: true)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 248, elements: !903)
!903 = !{!904}
!904 = !DISubrange(count: 31)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__pyx_k_reflog", scope: !2, file: !21, line: 2312, type: !796, isLocal: true, isDefinition: true)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__pyx_k_refnanny_raised_an_exception_fro", scope: !2, file: !21, line: 2333, type: !909, isLocal: true, isDefinition: true)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 280, elements: !910)
!910 = !{!911}
!911 = !DISubrange(count: 35)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__pyx_k_regref", scope: !2, file: !21, line: 2313, type: !796, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__pyx_k_spec", scope: !2, file: !21, line: 2302, type: !793, isLocal: true, isDefinition: true)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__pyx_k_sys", scope: !2, file: !21, line: 2297, type: !859, isLocal: true, isDefinition: true)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__pyx_filename", scope: !2, file: !21, line: 1451, type: !54, isLocal: true, isDefinition: true)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__pyx_lineno", scope: !2, file: !21, line: 1448, type: !7, isLocal: true, isDefinition: true)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__pyx_clineno", scope: !2, file: !21, line: 1449, type: !7, isLocal: true, isDefinition: true)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6977, type: !926, isLocal: true, isDefinition: true)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 200, elements: !927)
!927 = !{!928}
!928 = !DISubrange(count: 25)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__pyx_builtin_id", scope: !2, file: !21, line: 2283, type: !28, isLocal: true, isDefinition: true)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__pyx_builtin_print", scope: !2, file: !21, line: 2284, type: !28, isLocal: true, isDefinition: true)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__pyx_vtable_6Cython_7Runtime_8refnanny_Context", scope: !2, file: !21, line: 5885, type: !370, isLocal: true, isDefinition: true)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__pyx_vtabptr_6Cython_7Runtime_8refnanny_Context", scope: !2, file: !21, line: 1527, type: !369, isLocal: true, isDefinition: true)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !939, file: !21, line: 3098, type: !394, isLocal: true, isDefinition: true)
!939 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_7Context_regref", scope: !21, file: !21, line: 3074, type: !362, scopeLine: 3074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !940)
!940 = !{!941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !961, !962, !964, !965, !966, !967}
!941 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !939, file: !21, line: 3074, type: !364)
!942 = !DILocalVariable(name: "__pyx_v_obj", arg: 2, scope: !939, file: !21, line: 3074, type: !28)
!943 = !DILocalVariable(name: "__pyx_v_lineno", arg: 3, scope: !939, file: !21, line: 3074, type: !34)
!944 = !DILocalVariable(name: "__pyx_v_is_null", arg: 4, scope: !939, file: !21, line: 3074, type: !7)
!945 = !DILocalVariable(name: "__pyx_v_id_", scope: !939, file: !21, line: 3075, type: !28)
!946 = !DILocalVariable(name: "__pyx_v_count", scope: !939, file: !21, line: 3076, type: !28)
!947 = !DILocalVariable(name: "__pyx_v_linenumbers", scope: !939, file: !21, line: 3077, type: !28)
!948 = !DILocalVariable(name: "__pyx_r", scope: !939, file: !21, line: 3078, type: !28)
!949 = !DILocalVariable(name: "__pyx_t_1", scope: !939, file: !21, line: 3080, type: !28)
!950 = !DILocalVariable(name: "__pyx_t_2", scope: !939, file: !21, line: 3081, type: !28)
!951 = !DILocalVariable(name: "__pyx_t_3", scope: !939, file: !21, line: 3082, type: !28)
!952 = !DILocalVariable(name: "__pyx_t_4", scope: !939, file: !21, line: 3083, type: !28)
!953 = !DILocalVariable(name: "__pyx_t_5", scope: !939, file: !21, line: 3084, type: !7)
!954 = !DILocalVariable(name: "__pyx_t_6", scope: !939, file: !21, line: 3085, type: !83)
!955 = !DILocalVariable(name: "__pyx_lineno", scope: !939, file: !21, line: 3086, type: !7)
!956 = !DILocalVariable(name: "__pyx_filename", scope: !939, file: !21, line: 3087, type: !54)
!957 = !DILocalVariable(name: "__pyx_clineno", scope: !939, file: !21, line: 3088, type: !7)
!958 = !DILocalVariable(name: "sequence", scope: !959, file: !21, line: 3201, type: !28)
!959 = distinct !DILexicalBlock(scope: !960, file: !21, line: 3200, column: 82)
!960 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3200, column: 7)
!961 = !DILocalVariable(name: "size", scope: !959, file: !21, line: 3202, type: !34)
!962 = !DILocalVariable(name: "index", scope: !963, file: !21, line: 3226, type: !34)
!963 = distinct !DILexicalBlock(scope: !960, file: !21, line: 3225, column: 10)
!964 = !DILabel(scope: !963, name: "__pyx_L4_unpacking_failed", file: !21, line: 3239)
!965 = !DILabel(scope: !963, name: "__pyx_L5_unpacking_done", file: !21, line: 3244)
!966 = !DILabel(scope: !939, name: "__pyx_L1_error", file: !21, line: 3298)
!967 = !DILabel(scope: !939, name: "__pyx_L0", file: !21, line: 3305)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !939, file: !21, line: 3098, type: !28, isLocal: true, isDefinition: true)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3133, type: !972, isLocal: true, isDefinition: true)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 344, elements: !973)
!973 = !{!974}
!974 = !DISubrange(count: 43)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3133, type: !608, isLocal: true, isDefinition: true)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3184, type: !979, isLocal: true, isDefinition: true)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 32, elements: !860)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3269, type: !982, isLocal: true, isDefinition: true)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 312, elements: !983)
!983 = !{!984}
!984 = !DISubrange(count: 39)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3303, type: !982, isLocal: true, isDefinition: true)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !989, file: !21, line: 2754, type: !394, isLocal: true, isDefinition: true)
!989 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_log", scope: !21, file: !21, line: 2734, type: !990, scopeLine: 2734, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !992)
!990 = !DISubroutineType(types: !991)
!991 = !{!28, !28, !28, !28, !28}
!992 = !{!993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007}
!993 = !DILocalVariable(name: "__pyx_v_level", arg: 1, scope: !989, file: !21, line: 2734, type: !28)
!994 = !DILocalVariable(name: "__pyx_v_action", arg: 2, scope: !989, file: !21, line: 2734, type: !28)
!995 = !DILocalVariable(name: "__pyx_v_obj", arg: 3, scope: !989, file: !21, line: 2734, type: !28)
!996 = !DILocalVariable(name: "__pyx_v_lineno", arg: 4, scope: !989, file: !21, line: 2734, type: !28)
!997 = !DILocalVariable(name: "__pyx_r", scope: !989, file: !21, line: 2735, type: !28)
!998 = !DILocalVariable(name: "__pyx_t_1", scope: !989, file: !21, line: 2737, type: !28)
!999 = !DILocalVariable(name: "__pyx_t_2", scope: !989, file: !21, line: 2738, type: !7)
!1000 = !DILocalVariable(name: "__pyx_t_3", scope: !989, file: !21, line: 2739, type: !28)
!1001 = !DILocalVariable(name: "__pyx_t_4", scope: !989, file: !21, line: 2740, type: !28)
!1002 = !DILocalVariable(name: "__pyx_t_5", scope: !989, file: !21, line: 2741, type: !7)
!1003 = !DILocalVariable(name: "__pyx_lineno", scope: !989, file: !21, line: 2742, type: !7)
!1004 = !DILocalVariable(name: "__pyx_filename", scope: !989, file: !21, line: 2743, type: !54)
!1005 = !DILocalVariable(name: "__pyx_clineno", scope: !989, file: !21, line: 2744, type: !7)
!1006 = !DILabel(scope: !989, name: "__pyx_L1_error", file: !21, line: 2841)
!1007 = !DILabel(scope: !989, name: "__pyx_L0", file: !21, line: 2847)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !989, file: !21, line: 2754, type: !28, isLocal: true, isDefinition: true)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !989, file: !21, line: 2787, type: !394, isLocal: true, isDefinition: true)
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !989, file: !21, line: 2787, type: !28, isLocal: true, isDefinition: true)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !989, file: !21, line: 2802, type: !394, isLocal: true, isDefinition: true)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !989, file: !21, line: 2802, type: !28, isLocal: true, isDefinition: true)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(scope: null, file: !21, line: 2845, type: !749, isLocal: true, isDefinition: true)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "DIGITS_HEX", scope: !2, file: !21, line: 7859, type: !1022, isLocal: true, isDefinition: true)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 264, elements: !755)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "DIGIT_PAIRS_8", scope: !2, file: !21, line: 7849, type: !1025, isLocal: true, isDefinition: true)
!1025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 1032, elements: !1026)
!1026 = !{!1027}
!1027 = !DISubrange(count: 129)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "DIGIT_PAIRS_10", scope: !2, file: !21, line: 7837, type: !1030, isLocal: true, isDefinition: true)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 1608, elements: !1031)
!1031 = !{!1032}
!1032 = !DISubrange(count: 201)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7198, type: !1035, isLocal: true, isDefinition: true)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 248, elements: !903)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7205, type: !972, isLocal: true, isDefinition: true)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7376, type: !1040, isLocal: true, isDefinition: true)
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 304, elements: !1041)
!1041 = !{!1042}
!1042 = !DISubrange(count: 38)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !1045, file: !21, line: 3349, type: !394, isLocal: true, isDefinition: true)
!1045 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_7Context_delref", scope: !21, file: !21, line: 3322, type: !375, scopeLine: 3322, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1046)
!1046 = !{!1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1070, !1071, !1073, !1074, !1075, !1076, !1077}
!1047 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !1045, file: !21, line: 3322, type: !364)
!1048 = !DILocalVariable(name: "__pyx_v_obj", arg: 2, scope: !1045, file: !21, line: 3322, type: !28)
!1049 = !DILocalVariable(name: "__pyx_v_lineno", arg: 3, scope: !1045, file: !21, line: 3322, type: !34)
!1050 = !DILocalVariable(name: "__pyx_v_is_null", arg: 4, scope: !1045, file: !21, line: 3322, type: !7)
!1051 = !DILocalVariable(name: "__pyx_v_id_", scope: !1045, file: !21, line: 3323, type: !28)
!1052 = !DILocalVariable(name: "__pyx_v_count", scope: !1045, file: !21, line: 3324, type: !28)
!1053 = !DILocalVariable(name: "__pyx_v_linenumbers", scope: !1045, file: !21, line: 3325, type: !28)
!1054 = !DILocalVariable(name: "__pyx_r", scope: !1045, file: !21, line: 3326, type: !7)
!1055 = !DILocalVariable(name: "__pyx_t_1", scope: !1045, file: !21, line: 3328, type: !28)
!1056 = !DILocalVariable(name: "__pyx_t_2", scope: !1045, file: !21, line: 3329, type: !28)
!1057 = !DILocalVariable(name: "__pyx_t_3", scope: !1045, file: !21, line: 3330, type: !28)
!1058 = !DILocalVariable(name: "__pyx_t_4", scope: !1045, file: !21, line: 3331, type: !28)
!1059 = !DILocalVariable(name: "__pyx_t_5", scope: !1045, file: !21, line: 3332, type: !7)
!1060 = !DILocalVariable(name: "__pyx_t_6", scope: !1045, file: !21, line: 3333, type: !83)
!1061 = !DILocalVariable(name: "__pyx_t_7", scope: !1045, file: !21, line: 3334, type: !7)
!1062 = !DILocalVariable(name: "__pyx_t_8", scope: !1045, file: !21, line: 3335, type: !34)
!1063 = !DILocalVariable(name: "__pyx_t_9", scope: !1045, file: !21, line: 3336, type: !423)
!1064 = !DILocalVariable(name: "__pyx_lineno", scope: !1045, file: !21, line: 3337, type: !7)
!1065 = !DILocalVariable(name: "__pyx_filename", scope: !1045, file: !21, line: 3338, type: !54)
!1066 = !DILocalVariable(name: "__pyx_clineno", scope: !1045, file: !21, line: 3339, type: !7)
!1067 = !DILocalVariable(name: "sequence", scope: !1068, file: !21, line: 3451, type: !28)
!1068 = distinct !DILexicalBlock(scope: !1069, file: !21, line: 3450, column: 82)
!1069 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3450, column: 7)
!1070 = !DILocalVariable(name: "size", scope: !1068, file: !21, line: 3452, type: !34)
!1071 = !DILocalVariable(name: "index", scope: !1072, file: !21, line: 3476, type: !34)
!1072 = distinct !DILexicalBlock(scope: !1069, file: !21, line: 3475, column: 10)
!1073 = !DILabel(scope: !1072, name: "__pyx_L4_unpacking_failed", file: !21, line: 3489)
!1074 = !DILabel(scope: !1072, name: "__pyx_L5_unpacking_done", file: !21, line: 3494)
!1075 = !DILabel(scope: !1045, name: "__pyx_L7", file: !21, line: 3630)
!1076 = !DILabel(scope: !1045, name: "__pyx_L1_error", file: !21, line: 3651)
!1077 = !DILabel(scope: !1045, name: "__pyx_L0", file: !21, line: 3658)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !1045, file: !21, line: 3349, type: !28, isLocal: true, isDefinition: true)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3656, type: !982, isLocal: true, isDefinition: true)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8528, type: !1084, isLocal: true, isDefinition: true)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 368, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 46)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3732, type: !613, isLocal: true, isDefinition: true)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(scope: null, file: !21, line: 3947, type: !1091, isLocal: true, isDefinition: true)
!1091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 272, elements: !1092)
!1092 = !{!1093}
!1093 = !DISubrange(count: 34)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4012, type: !1096, isLocal: true, isDefinition: true)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 288, elements: !1097)
!1097 = !{!1098}
!1098 = !DISubrange(count: 36)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8819, type: !1101, isLocal: true, isDefinition: true)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 328, elements: !1102)
!1102 = !{!1103}
!1103 = !DISubrange(count: 41)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8915, type: !1106, isLocal: true, isDefinition: true)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 256, elements: !1107)
!1107 = !{!1108}
!1108 = !DISubrange(count: 32)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6016, type: !1106, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "__pyx_type_6Cython_7Runtime_8refnanny_Context", scope: !2, file: !21, line: 6014, type: !43, isLocal: true, isDefinition: true)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "__pyx_methods_6Cython_7Runtime_8refnanny_Context", scope: !2, file: !21, line: 5983, type: !595, isLocal: true, isDefinition: true)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5989, type: !560, isLocal: true, isDefinition: true)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5990, type: !603, isLocal: true, isDefinition: true)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5991, type: !608, isLocal: true, isDefinition: true)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5992, type: !1123, isLocal: true, isDefinition: true)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 48, elements: !893)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "__pyx_getsets_6Cython_7Runtime_8refnanny_Context", scope: !2, file: !21, line: 5987, type: !1126, isLocal: true, isDefinition: true)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 1920, elements: !893)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4214, type: !1084, isLocal: true, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(scope: null, file: !21, line: 2924, type: !1131, isLocal: true, isDefinition: true)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 80, elements: !874)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(scope: null, file: !21, line: 2953, type: !1134, isLocal: true, isDefinition: true)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 336, elements: !1135)
!1135 = !{!1136}
!1136 = !DISubrange(count: 42)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7792, type: !1091, isLocal: true, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7801, type: !1141, isLocal: true, isDefinition: true)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 360, elements: !1142)
!1142 = !{!1143}
!1143 = !DISubrange(count: 45)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7647, type: !1146, isLocal: true, isDefinition: true)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 408, elements: !1147)
!1147 = !{!1148}
!1148 = !DISubrange(count: 51)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7822, type: !560, isLocal: true, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7825, type: !1153, isLocal: true, isDefinition: true)
!1153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 64, elements: !787)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7828, type: !1153, isLocal: true, isDefinition: true)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7831, type: !1158, isLocal: true, isDefinition: true)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 480, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 60)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(scope: null, file: !21, line: 7833, type: !1163, isLocal: true, isDefinition: true)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 16, elements: !760)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9569, type: !982, isLocal: true, isDefinition: true)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9596, type: !1168, isLocal: true, isDefinition: true)
!1168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1376, elements: !1169)
!1169 = !{!1170}
!1170 = !DISubrange(count: 172)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9823, type: !1173, isLocal: true, isDefinition: true)
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 472, elements: !1174)
!1174 = !{!1175}
!1175 = !DISubrange(count: 59)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9770, type: !982, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(scope: null, file: !21, line: 6299, type: !603, isLocal: true, isDefinition: true)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9850, type: !1182, isLocal: true, isDefinition: true)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 280, elements: !910)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9884, type: !1185, isLocal: true, isDefinition: true)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 920, elements: !1186)
!1186 = !{!1187}
!1187 = !DISubrange(count: 115)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9892, type: !1190, isLocal: true, isDefinition: true)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 952, elements: !1191)
!1191 = !{!1192}
!1192 = !DISubrange(count: 119)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9899, type: !1195, isLocal: true, isDefinition: true)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 856, elements: !1196)
!1196 = !{!1197}
!1197 = !DISubrange(count: 107)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__pyx_builtin_range", scope: !2, file: !21, line: 2282, type: !28, isLocal: true, isDefinition: true)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8213, type: !1101, isLocal: true, isDefinition: true)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(scope: null, file: !21, line: 8219, type: !982, isLocal: true, isDefinition: true)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5342, type: !1035, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__pyx_v_6Cython_7Runtime_8refnanny_api", scope: !2, file: !21, line: 2264, type: !1208, isLocal: true, isDefinition: true)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct", file: !21, line: 1473, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct", file: !21, line: 1494, size: 384, elements: !1210)
!1210 = !{!1211, !1215, !1216, !1217, !1218, !1222}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "INCREF", scope: !1209, file: !21, line: 1495, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{null, !28, !28, !34}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "DECREF", scope: !1209, file: !21, line: 1496, baseType: !1212, size: 64, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "GOTREF", scope: !1209, file: !21, line: 1497, baseType: !1212, size: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "GIVEREF", scope: !1209, file: !21, line: 1498, baseType: !1212, size: 64, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "SetupContext", scope: !1209, file: !21, line: 1499, baseType: !1219, size: 64, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!28, !70, !34, !70}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "FinishContext", scope: !1209, file: !21, line: 1500, baseType: !1223, size: 64, offset: 320)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !94}
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5408, type: !1035, isLocal: true, isDefinition: true)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5120, type: !972, isLocal: true, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9012, type: !1163, isLocal: true, isDefinition: true)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9027, type: !1234, isLocal: true, isDefinition: true)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 168, elements: !1235)
!1235 = !{!1236}
!1236 = !DISubrange(count: 21)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4850, type: !1035, isLocal: true, isDefinition: true)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5287, type: !1106, isLocal: true, isDefinition: true)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(scope: null, file: !21, line: 4629, type: !1243, isLocal: true, isDefinition: true)
!1243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 296, elements: !1244)
!1244 = !{!1245}
!1245 = !DISubrange(count: 37)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5704, type: !1040, isLocal: true, isDefinition: true)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(scope: null, file: !21, line: 5717, type: !1153, isLocal: true, isDefinition: true)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(scope: null, file: !21, line: 9455, type: !1252, isLocal: true, isDefinition: true)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 392, elements: !1253)
!1253 = !{!1254}
!1254 = !DISubrange(count: 49)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !1257, file: !21, line: 9927, type: !394, isLocal: true, isDefinition: true)
!1257 = distinct !DISubprogram(name: "__Pyx_CLineForTraceback", scope: !21, file: !21, line: 9913, type: !1258, scopeLine: 9913, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1408)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!7, !1260, !7}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !30, line: 24, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !1263, line: 82, size: 2880, elements: !1264)
!1263 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/pystate.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "474ae1b51b4924e8bec8b13b56a451da")
!1264 = !{!1265, !1266, !1267, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1340, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1394, !1404, !1405, !1406, !1407}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1262, file: !1263, line: 85, baseType: !1260, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1262, file: !1263, line: 86, baseType: !1260, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !1262, file: !1263, line: 87, baseType: !1268, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !30, line: 25, baseType: !1270)
!1270 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !30, line: 25, flags: DIFlagFwdDecl)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "_initialized", scope: !1262, file: !1263, line: 93, baseType: !7, size: 32, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "_static", scope: !1262, file: !1263, line: 96, baseType: !7, size: 32, offset: 224)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_remaining", scope: !1262, file: !1263, line: 98, baseType: !7, size: 32, offset: 256)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_limit", scope: !1262, file: !1263, line: 99, baseType: !7, size: 32, offset: 288)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_headroom", scope: !1262, file: !1263, line: 100, baseType: !7, size: 32, offset: 320)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !1262, file: !1263, line: 105, baseType: !7, size: 32, offset: 352)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "tracing_what", scope: !1262, file: !1263, line: 106, baseType: !7, size: 32, offset: 384)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "cframe", scope: !1262, file: !1263, line: 110, baseType: !1279, size: 64, offset: 448)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyCFrame", file: !1263, line: 53, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PyCFrame", file: !1263, line: 38, size: 192, elements: !1282)
!1282 = !{!1283, !1284, !1338}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !1281, file: !1263, line: 49, baseType: !447, size: 8)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "current_frame", scope: !1281, file: !1263, line: 51, baseType: !1285, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PyInterpreterFrame", file: !1287, line: 47, size: 640, elements: !1288)
!1287 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/internal/pycore_frame.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "553e3382ea38f2c6ad91a452160e87fd")
!1288 = !{!1289, !1311, !1312, !1313, !1314, !1315, !1329, !1330, !1333, !1334, !1336, !1337}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "f_func", scope: !1286, file: !1287, line: 49, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFunctionObject", file: !1292, line: 59, baseType: !1293)
!1292 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/funcobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7328382f2637048b906e52f1dfe7b495")
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1292, line: 36, size: 1088, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1293, file: !1292, line: 37, baseType: !29, size: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "func_globals", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "func_builtins", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "func_qualname", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 320)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "func_code", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 384)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "func_defaults", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 448)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "func_kwdefaults", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 512)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "func_closure", scope: !1293, file: !1292, line: 38, baseType: !28, size: 64, offset: 576)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "func_doc", scope: !1293, file: !1292, line: 39, baseType: !28, size: 64, offset: 640)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "func_dict", scope: !1293, file: !1292, line: 40, baseType: !28, size: 64, offset: 704)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "func_weakreflist", scope: !1293, file: !1292, line: 41, baseType: !28, size: 64, offset: 768)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "func_module", scope: !1293, file: !1292, line: 42, baseType: !28, size: 64, offset: 832)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "func_annotations", scope: !1293, file: !1292, line: 43, baseType: !28, size: 64, offset: 896)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !1293, file: !1292, line: 44, baseType: !335, size: 64, offset: 960)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "func_version", scope: !1293, file: !1292, line: 52, baseType: !425, size: 32, offset: 1024)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "f_globals", scope: !1286, file: !1287, line: 50, baseType: !28, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "f_builtins", scope: !1286, file: !1287, line: 51, baseType: !28, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "f_locals", scope: !1286, file: !1287, line: 52, baseType: !28, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !1286, file: !1287, line: 53, baseType: !520, size: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "frame_obj", scope: !1286, file: !1287, line: 54, baseType: !1316, size: 64, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFrameObject", file: !30, line: 22, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !1287, line: 15, size: 448, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1318, file: !1287, line: 16, baseType: !29, size: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "f_back", scope: !1318, file: !1287, line: 17, baseType: !1316, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "f_frame", scope: !1318, file: !1287, line: 18, baseType: !1285, size: 64, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace", scope: !1318, file: !1287, line: 19, baseType: !28, size: 64, offset: 256)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "f_lineno", scope: !1318, file: !1287, line: 20, baseType: !7, size: 32, offset: 320)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace_lines", scope: !1318, file: !1287, line: 21, baseType: !56, size: 8, offset: 352)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace_opcodes", scope: !1318, file: !1287, line: 22, baseType: !56, size: 8, offset: 360)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "f_fast_as_locals", scope: !1318, file: !1287, line: 23, baseType: !56, size: 8, offset: 368)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "_f_frame_data", scope: !1318, file: !1287, line: 25, baseType: !350, size: 64, offset: 384)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1286, file: !1287, line: 56, baseType: !1285, size: 64, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "prev_instr", scope: !1286, file: !1287, line: 61, baseType: !1331, size: 64, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_CODEUNIT", file: !523, line: 19, baseType: !453)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "stacktop", scope: !1286, file: !1287, line: 62, baseType: !7, size: 32, offset: 512)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "is_entry", scope: !1286, file: !1287, line: 63, baseType: !1335, size: 8, offset: 544)
!1335 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1286, file: !1287, line: 64, baseType: !56, size: 8, offset: 552)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "localsplus", scope: !1286, file: !1287, line: 66, baseType: !350, size: 64, offset: 576)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1281, file: !1263, line: 52, baseType: !1339, size: 64, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !1262, file: !1263, line: 112, baseType: !1341, size: 64, offset: 512)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !1263, line: 14, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!7, !28, !1316, !7, !28}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !1262, file: !1263, line: 113, baseType: !1341, size: 64, offset: 576)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !1262, file: !1263, line: 114, baseType: !28, size: 64, offset: 640)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !1262, file: !1263, line: 115, baseType: !28, size: 64, offset: 704)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !1262, file: !1263, line: 118, baseType: !28, size: 64, offset: 768)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !1262, file: !1263, line: 119, baseType: !28, size: 64, offset: 832)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !1262, file: !1263, line: 120, baseType: !28, size: 64, offset: 896)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "exc_info", scope: !1262, file: !1263, line: 125, baseType: !1352, size: 64, offset: 960)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyErr_StackItem", file: !1263, line: 73, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_err_stackitem", file: !1263, line: 55, size: 128, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !1354, file: !1263, line: 69, baseType: !28, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "previous_item", scope: !1354, file: !1263, line: 71, baseType: !1358, size: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1262, file: !1263, line: 127, baseType: !28, size: 64, offset: 1024)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !1262, file: !1263, line: 129, baseType: !7, size: 32, offset: 1088)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !1262, file: !1263, line: 131, baseType: !28, size: 64, offset: 1152)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !1262, file: !1263, line: 132, baseType: !238, size: 64, offset: 1216)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "native_thread_id", scope: !1262, file: !1263, line: 138, baseType: !238, size: 64, offset: 1280)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !1262, file: !1263, line: 140, baseType: !7, size: 32, offset: 1344)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !1262, file: !1263, line: 141, baseType: !28, size: 64, offset: 1408)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !1262, file: !1263, line: 166, baseType: !322, size: 64, offset: 1472)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !1262, file: !1263, line: 167, baseType: !27, size: 64, offset: 1536)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "coroutine_origin_tracking_depth", scope: !1262, file: !1263, line: 169, baseType: !7, size: 32, offset: 1600)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "async_gen_firstiter", scope: !1262, file: !1263, line: 171, baseType: !28, size: 64, offset: 1664)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "async_gen_finalizer", scope: !1262, file: !1263, line: 172, baseType: !28, size: 64, offset: 1728)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1262, file: !1263, line: 174, baseType: !28, size: 64, offset: 1792)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "context_ver", scope: !1262, file: !1263, line: 175, baseType: !394, size: 64, offset: 1856)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1262, file: !1263, line: 178, baseType: !394, size: 64, offset: 1920)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "trace_info", scope: !1262, file: !1263, line: 180, baseType: !1375, size: 384, offset: 1984)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTraceInfo", file: !1263, line: 34, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1263, line: 31, size: 384, elements: !1377)
!1377 = !{!1378, !1379}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1376, file: !1263, line: 32, baseType: !520, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1376, file: !1263, line: 33, baseType: !1380, size: 320, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCodeAddressRange", file: !523, line: 184, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_line_offsets", file: !523, line: 179, size: 320, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "ar_start", scope: !1381, file: !523, line: 180, baseType: !7, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "ar_end", scope: !1381, file: !523, line: 181, baseType: !7, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ar_line", scope: !1381, file: !523, line: 182, baseType: !7, size: 32, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1381, file: !523, line: 183, baseType: !1387, size: 192, offset: 128)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_opaque", file: !523, line: 173, size: 192, elements: !1388)
!1388 = !{!1389, !1390, !1393}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "computed_line", scope: !1387, file: !523, line: 174, baseType: !7, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "lo_next", scope: !1387, file: !523, line: 175, baseType: !1391, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !447)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1387, file: !523, line: 176, baseType: !1391, size: 64, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "datastack_chunk", scope: !1262, file: !1263, line: 182, baseType: !1395, size: 64, offset: 2368)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyStackChunk", file: !1263, line: 80, baseType: !1397)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stack_chunk", file: !1263, line: 75, size: 256, elements: !1398)
!1398 = !{!1399, !1401, !1402, !1403}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1397, file: !1263, line: 76, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1397, file: !1263, line: 77, baseType: !341, size: 64, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1397, file: !1263, line: 78, baseType: !341, size: 64, offset: 128)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1397, file: !1263, line: 79, baseType: !350, size: 64, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "datastack_top", scope: !1262, file: !1263, line: 183, baseType: !94, size: 64, offset: 2432)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "datastack_limit", scope: !1262, file: !1263, line: 184, baseType: !94, size: 64, offset: 2496)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "exc_state", scope: !1262, file: !1263, line: 199, baseType: !1353, size: 128, offset: 2560)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "root_cframe", scope: !1262, file: !1263, line: 202, baseType: !1280, size: 192, offset: 2688)
!1408 = !{!1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416}
!1409 = !DILocalVariable(name: "tstate", arg: 1, scope: !1257, file: !21, line: 9913, type: !1260)
!1410 = !DILocalVariable(name: "c_line", arg: 2, scope: !1257, file: !21, line: 9913, type: !7)
!1411 = !DILocalVariable(name: "use_cline", scope: !1257, file: !21, line: 9914, type: !28)
!1412 = !DILocalVariable(name: "ptype", scope: !1257, file: !21, line: 9915, type: !28)
!1413 = !DILocalVariable(name: "pvalue", scope: !1257, file: !21, line: 9915, type: !28)
!1414 = !DILocalVariable(name: "ptraceback", scope: !1257, file: !21, line: 9915, type: !28)
!1415 = !DILocalVariable(name: "cython_runtime_dict", scope: !1257, file: !21, line: 9917, type: !94)
!1416 = !DILocalVariable(name: "use_cline_obj", scope: !1417, file: !21, line: 9933, type: !28)
!1417 = distinct !DILexicalBlock(scope: !1418, file: !21, line: 9932, column: 5)
!1418 = distinct !DILexicalBlock(scope: !1257, file: !21, line: 9926, column: 9)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !1257, file: !21, line: 9927, type: !28, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__pyx_code_cache", scope: !2, file: !21, line: 2182, type: !1423, isLocal: true, isDefinition: true)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__Pyx_CodeObjectCache", file: !21, line: 2177, size: 128, elements: !1424)
!1424 = !{!1425, !1426, !1427}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1423, file: !21, line: 2178, baseType: !7, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "max_count", scope: !1423, file: !21, line: 2179, baseType: !7, size: 32, offset: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1423, file: !21, line: 2180, baseType: !515, size: 64, offset: 64)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(scope: null, file: !21, line: 10142, type: !613, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(scope: null, file: !21, line: 1450, type: !1432, isLocal: true, isDefinition: true)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1328, elements: !1433)
!1433 = !{!1434}
!1434 = !DISubrange(count: 166)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "__pyx_cfilenm", scope: !2, file: !21, line: 1450, type: !54, isLocal: true, isDefinition: true)
!1437 = !{i32 7, !"Dwarf Version", i32 5}
!1438 = !{i32 2, !"Debug Info Version", i32 3}
!1439 = !{i32 1, !"wchar_size", i32 4}
!1440 = !{i32 8, !"PIC Level", i32 2}
!1441 = !{i32 7, !"uwtable", i32 2}
!1442 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!1443 = distinct !DISubprogram(name: "PyInit_refnanny", scope: !21, file: !21, line: 6405, type: !575, scopeLine: 6407, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!1444 = !DILocation(line: 6408, column: 10, scope: !1443)
!1445 = !DILocation(line: 6408, column: 3, scope: !1443)
!1446 = !DISubprogram(name: "PyModuleDef_Init", scope: !566, file: !566, line: 40, type: !1447, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!28, !1449}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef", file: !30, line: 12, baseType: !565)
!1451 = distinct !DISubprogram(name: "__pyx_pymod_create", scope: !21, file: !21, line: 6457, type: !1452, scopeLine: 6457, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1454)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!28, !28, !1449}
!1454 = !{!1455, !1456, !1457, !1458, !1459, !1460}
!1455 = !DILocalVariable(name: "spec", arg: 1, scope: !1451, file: !21, line: 6457, type: !28)
!1456 = !DILocalVariable(name: "def", arg: 2, scope: !1451, file: !21, line: 6457, type: !1449)
!1457 = !DILocalVariable(name: "module", scope: !1451, file: !21, line: 6458, type: !28)
!1458 = !DILocalVariable(name: "moddict", scope: !1451, file: !21, line: 6458, type: !28)
!1459 = !DILocalVariable(name: "modname", scope: !1451, file: !21, line: 6458, type: !28)
!1460 = !DILabel(scope: !1451, name: "bad", file: !21, line: 6480)
!1461 = !{!1462, !1462, i64 0}
!1462 = !{!"any pointer", !1463, i64 0}
!1463 = !{!"omnipotent char", !1464, i64 0}
!1464 = !{!"Simple C/C++ TBAA"}
!1465 = !DILocation(line: 6457, column: 65, scope: !1451)
!1466 = !DILocation(line: 6457, column: 84, scope: !1451)
!1467 = !DILocation(line: 6458, column: 5, scope: !1451)
!1468 = !DILocation(line: 6458, column: 15, scope: !1451)
!1469 = !DILocation(line: 6458, column: 31, scope: !1451)
!1470 = !DILocation(line: 6458, column: 41, scope: !1451)
!1471 = !DILocation(line: 6459, column: 5, scope: !1451)
!1472 = !DILocation(line: 6460, column: 9, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6460, column: 9)
!1474 = !DILocation(line: 6460, column: 9, scope: !1451)
!1475 = !DILocation(line: 6461, column: 9, scope: !1473)
!1476 = !DILocation(line: 6462, column: 9, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6462, column: 9)
!1478 = !DILocation(line: 6462, column: 9, scope: !1451)
!1479 = !DILocation(line: 6463, column: 16, scope: !1477)
!1480 = !DILocation(line: 6463, column: 9, scope: !1477)
!1481 = !DILocation(line: 6464, column: 38, scope: !1451)
!1482 = !DILocation(line: 6464, column: 15, scope: !1451)
!1483 = !DILocation(line: 6464, column: 13, scope: !1451)
!1484 = !DILocation(line: 6465, column: 9, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6465, column: 9)
!1486 = !DILocation(line: 6465, column: 9, scope: !1451)
!1487 = !DILocation(line: 6465, column: 29, scope: !1485)
!1488 = !DILocation(line: 6466, column: 33, scope: !1451)
!1489 = !DILocation(line: 6466, column: 14, scope: !1451)
!1490 = !DILocation(line: 6466, column: 12, scope: !1451)
!1491 = !DILocation(line: 6467, column: 5, scope: !1451)
!1492 = !DILocation(line: 6468, column: 9, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6468, column: 9)
!1494 = !DILocation(line: 6468, column: 9, scope: !1451)
!1495 = !DILocation(line: 6468, column: 28, scope: !1493)
!1496 = !DILocation(line: 6472, column: 32, scope: !1451)
!1497 = !DILocation(line: 6472, column: 15, scope: !1451)
!1498 = !DILocation(line: 6472, column: 13, scope: !1451)
!1499 = !DILocation(line: 6473, column: 9, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6473, column: 9)
!1501 = !DILocation(line: 6473, column: 9, scope: !1451)
!1502 = !DILocation(line: 6473, column: 29, scope: !1500)
!1503 = !DILocation(line: 6475, column: 9, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6475, column: 9)
!1505 = !DILocation(line: 6475, column: 9, scope: !1451)
!1506 = !DILocation(line: 6475, column: 92, scope: !1504)
!1507 = !DILocation(line: 6476, column: 9, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6476, column: 9)
!1509 = !DILocation(line: 6476, column: 9, scope: !1451)
!1510 = !DILocation(line: 6476, column: 90, scope: !1508)
!1511 = !DILocation(line: 6477, column: 9, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6477, column: 9)
!1513 = !DILocation(line: 6477, column: 9, scope: !1451)
!1514 = !DILocation(line: 6477, column: 93, scope: !1512)
!1515 = !DILocation(line: 6478, column: 9, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !1451, file: !21, line: 6478, column: 9)
!1517 = !DILocation(line: 6478, column: 9, scope: !1451)
!1518 = !DILocation(line: 6478, column: 110, scope: !1516)
!1519 = !DILocation(line: 6479, column: 12, scope: !1451)
!1520 = !DILocation(line: 6479, column: 5, scope: !1451)
!1521 = !DILocation(line: 6480, column: 1, scope: !1451)
!1522 = !DILocation(line: 6481, column: 5, scope: !1451)
!1523 = !DILocation(line: 6482, column: 5, scope: !1451)
!1524 = !DILocation(line: 6483, column: 1, scope: !1451)
!1525 = distinct !DISubprogram(name: "__pyx_pymod_exec_refnanny", scope: !21, file: !21, line: 6486, type: !122, scopeLine: 6489, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1526)
!1526 = !{!1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1540, !1543, !1544, !1546, !1547, !1548, !1549, !1553}
!1527 = !DILocalVariable(name: "__pyx_pyinit_module", arg: 1, scope: !1525, file: !21, line: 6486, type: !28)
!1528 = !DILocalVariable(name: "stringtab_initialized", scope: !1525, file: !21, line: 6490, type: !7)
!1529 = !DILocalVariable(name: "__pyx_t_1", scope: !1525, file: !21, line: 6494, type: !28)
!1530 = !DILocalVariable(name: "__pyx_t_2", scope: !1525, file: !21, line: 6495, type: !28)
!1531 = !DILocalVariable(name: "__pyx_t_3", scope: !1525, file: !21, line: 6496, type: !28)
!1532 = !DILocalVariable(name: "__pyx_t_4", scope: !1525, file: !21, line: 6497, type: !28)
!1533 = !DILocalVariable(name: "__pyx_t_5", scope: !1525, file: !21, line: 6498, type: !28)
!1534 = !DILocalVariable(name: "__pyx_t_6", scope: !1525, file: !21, line: 6499, type: !83)
!1535 = !DILocalVariable(name: "__pyx_lineno", scope: !1525, file: !21, line: 6500, type: !7)
!1536 = !DILocalVariable(name: "__pyx_filename", scope: !1525, file: !21, line: 6501, type: !54)
!1537 = !DILocalVariable(name: "__pyx_clineno", scope: !1525, file: !21, line: 6502, type: !7)
!1538 = !DILocalVariable(name: "modules", scope: !1539, file: !21, line: 6594, type: !28)
!1539 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6593, column: 3)
!1540 = !DILocalVariable(name: "sequence", scope: !1541, file: !21, line: 6648, type: !28)
!1541 = distinct !DILexicalBlock(scope: !1542, file: !21, line: 6647, column: 82)
!1542 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6647, column: 7)
!1543 = !DILocalVariable(name: "size", scope: !1541, file: !21, line: 6649, type: !34)
!1544 = !DILocalVariable(name: "index", scope: !1545, file: !21, line: 6673, type: !34)
!1545 = distinct !DILexicalBlock(scope: !1542, file: !21, line: 6672, column: 10)
!1546 = !DILabel(scope: !1545, name: "__pyx_L2_unpacking_failed", file: !21, line: 6686)
!1547 = !DILabel(scope: !1545, name: "__pyx_L3_unpacking_done", file: !21, line: 6691)
!1548 = !DILabel(scope: !1525, name: "__pyx_L1_error", file: !21, line: 6765)
!1549 = !DILocalVariable(name: "_py_tmp", scope: !1550, file: !21, line: 6775, type: !28)
!1550 = distinct !DILexicalBlock(scope: !1551, file: !21, line: 6775, column: 5)
!1551 = distinct !DILexicalBlock(scope: !1552, file: !21, line: 6770, column: 16)
!1552 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6770, column: 7)
!1553 = !DILabel(scope: !1525, name: "__pyx_L0", file: !21, line: 6788)
!1554 = !DILocation(line: 6486, column: 66, scope: !1525)
!1555 = !DILocation(line: 6490, column: 3, scope: !1525)
!1556 = !DILocation(line: 6490, column: 7, scope: !1525)
!1557 = !{!1558, !1558, i64 0}
!1558 = !{!"int", !1463, i64 0}
!1559 = !DILocation(line: 6494, column: 3, scope: !1525)
!1560 = !DILocation(line: 6494, column: 13, scope: !1525)
!1561 = !DILocation(line: 6495, column: 3, scope: !1525)
!1562 = !DILocation(line: 6495, column: 13, scope: !1525)
!1563 = !DILocation(line: 6496, column: 3, scope: !1525)
!1564 = !DILocation(line: 6496, column: 13, scope: !1525)
!1565 = !DILocation(line: 6497, column: 3, scope: !1525)
!1566 = !DILocation(line: 6497, column: 13, scope: !1525)
!1567 = !DILocation(line: 6498, column: 3, scope: !1525)
!1568 = !DILocation(line: 6498, column: 13, scope: !1525)
!1569 = !DILocation(line: 6499, column: 3, scope: !1525)
!1570 = !DILocation(line: 6499, column: 15, scope: !1525)
!1571 = !DILocation(line: 6500, column: 3, scope: !1525)
!1572 = !DILocation(line: 6500, column: 7, scope: !1525)
!1573 = !DILocation(line: 6501, column: 3, scope: !1525)
!1574 = !DILocation(line: 6501, column: 15, scope: !1525)
!1575 = !DILocation(line: 6502, column: 3, scope: !1525)
!1576 = !DILocation(line: 6502, column: 7, scope: !1525)
!1577 = !DILocation(line: 6505, column: 7, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6505, column: 7)
!1579 = !DILocation(line: 6505, column: 7, scope: !1525)
!1580 = !DILocation(line: 6506, column: 9, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1582, file: !21, line: 6506, column: 9)
!1582 = distinct !DILexicalBlock(scope: !1578, file: !21, line: 6505, column: 16)
!1583 = !DILocation(line: 6506, column: 20, scope: !1581)
!1584 = !DILocation(line: 6506, column: 17, scope: !1581)
!1585 = !DILocation(line: 6506, column: 9, scope: !1582)
!1586 = !DILocation(line: 6506, column: 41, scope: !1581)
!1587 = !DILocation(line: 6507, column: 21, scope: !1582)
!1588 = !DILocation(line: 6507, column: 5, scope: !1582)
!1589 = !DILocation(line: 6508, column: 5, scope: !1582)
!1590 = !DILocation(line: 6515, column: 13, scope: !1525)
!1591 = !DILocation(line: 6515, column: 11, scope: !1525)
!1592 = !DILocation(line: 6516, column: 3, scope: !1525)
!1593 = !DILocation(line: 6534, column: 3, scope: !1525)
!1594 = !DILocation(line: 6535, column: 30, scope: !1525)
!1595 = !DILocation(line: 6535, column: 13, scope: !1525)
!1596 = !DILocation(line: 6535, column: 3, scope: !1525)
!1597 = !DILocation(line: 6535, column: 11, scope: !1525)
!1598 = !{!1599, !1462, i64 0}
!1599 = !{!"", !1462, i64 0, !1462, i64 8, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40, !1462, i64 48, !1462, i64 56, !1462, i64 64, !1462, i64 72, !1462, i64 80, !1462, i64 88, !1462, i64 96, !1462, i64 104, !1462, i64 112, !1462, i64 120, !1462, i64 128, !1462, i64 136, !1462, i64 144, !1462, i64 152, !1462, i64 160, !1462, i64 168, !1462, i64 176, !1462, i64 184, !1462, i64 192, !1462, i64 200, !1462, i64 208, !1462, i64 216, !1462, i64 224, !1462, i64 232, !1462, i64 240, !1462, i64 248, !1462, i64 256, !1462, i64 264, !1462, i64 272, !1462, i64 280, !1462, i64 288, !1462, i64 296, !1462, i64 304, !1462, i64 312, !1462, i64 320, !1462, i64 328, !1462, i64 336, !1462, i64 344, !1462, i64 352, !1462, i64 360, !1462, i64 368, !1462, i64 376, !1462, i64 384, !1462, i64 392, !1462, i64 400, !1462, i64 408, !1462, i64 416, !1462, i64 424, !1462, i64 432, !1462, i64 440, !1462, i64 448, !1462, i64 456, !1462, i64 464, !1462, i64 472}
!1600 = !DILocation(line: 6535, column: 44, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6535, column: 44)
!1602 = !DILocation(line: 6535, column: 44, scope: !1525)
!1603 = !DILocation(line: 6535, column: 64, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1605, file: !21, line: 6535, column: 64)
!1605 = distinct !DILexicalBlock(scope: !1601, file: !21, line: 6535, column: 64)
!1606 = !DILocation(line: 6535, column: 64, scope: !1605)
!1607 = !DILocation(line: 6536, column: 3, scope: !1525)
!1608 = !DILocation(line: 6537, column: 13, scope: !1525)
!1609 = !DILocation(line: 6537, column: 3, scope: !1525)
!1610 = !DILocation(line: 6537, column: 11, scope: !1525)
!1611 = !{!1599, !1462, i64 8}
!1612 = !DILocation(line: 6537, column: 64, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6537, column: 64)
!1614 = !DILocation(line: 6537, column: 64, scope: !1525)
!1615 = !DILocation(line: 6537, column: 84, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !21, line: 6537, column: 84)
!1617 = distinct !DILexicalBlock(scope: !1613, file: !21, line: 6537, column: 84)
!1618 = !DILocation(line: 6537, column: 84, scope: !1617)
!1619 = !DILocation(line: 6538, column: 3, scope: !1525)
!1620 = !DILocation(line: 6539, column: 26, scope: !1525)
!1621 = !DILocation(line: 6539, column: 3, scope: !1525)
!1622 = !DILocation(line: 6539, column: 24, scope: !1525)
!1623 = !{!1599, !1462, i64 16}
!1624 = !DILocation(line: 6539, column: 77, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6539, column: 77)
!1626 = !DILocation(line: 6539, column: 77, scope: !1525)
!1627 = !DILocation(line: 6539, column: 110, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1629, file: !21, line: 6539, column: 110)
!1629 = distinct !DILexicalBlock(scope: !1625, file: !21, line: 6539, column: 110)
!1630 = !DILocation(line: 6539, column: 110, scope: !1629)
!1631 = !DILocation(line: 6540, column: 3, scope: !1525)
!1632 = !DILocation(line: 6541, column: 30, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6541, column: 7)
!1634 = !DILocation(line: 6541, column: 55, scope: !1633)
!1635 = !DILocation(line: 6541, column: 7, scope: !1633)
!1636 = !DILocation(line: 6541, column: 64, scope: !1633)
!1637 = !DILocation(line: 6541, column: 7, scope: !1525)
!1638 = !DILocation(line: 6541, column: 69, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !21, line: 6541, column: 69)
!1640 = distinct !DILexicalBlock(scope: !1633, file: !21, line: 6541, column: 69)
!1641 = !DILocation(line: 6541, column: 69, scope: !1640)
!1642 = !DILocation(line: 6552, column: 61, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6552, column: 7)
!1644 = !DILocation(line: 6552, column: 7, scope: !1643)
!1645 = !DILocation(line: 6552, column: 123, scope: !1643)
!1646 = !DILocation(line: 6552, column: 7, scope: !1525)
!1647 = !DILocation(line: 6552, column: 128, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1649, file: !21, line: 6552, column: 128)
!1649 = distinct !DILexicalBlock(scope: !1643, file: !21, line: 6552, column: 128)
!1650 = !DILocation(line: 6552, column: 128, scope: !1649)
!1651 = !DILocation(line: 6556, column: 23, scope: !1525)
!1652 = !DILocation(line: 6556, column: 3, scope: !1525)
!1653 = !DILocation(line: 6556, column: 21, scope: !1525)
!1654 = !{!1599, !1462, i64 24}
!1655 = !DILocation(line: 6556, column: 43, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6556, column: 43)
!1657 = !DILocation(line: 6556, column: 43, scope: !1525)
!1658 = !DILocation(line: 6556, column: 73, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1660, file: !21, line: 6556, column: 73)
!1660 = distinct !DILexicalBlock(scope: !1656, file: !21, line: 6556, column: 73)
!1661 = !DILocation(line: 6556, column: 73, scope: !1660)
!1662 = !DILocation(line: 6557, column: 23, scope: !1525)
!1663 = !DILocation(line: 6557, column: 3, scope: !1525)
!1664 = !DILocation(line: 6557, column: 21, scope: !1525)
!1665 = !{!1599, !1462, i64 32}
!1666 = !DILocation(line: 6557, column: 61, scope: !1667)
!1667 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6557, column: 61)
!1668 = !DILocation(line: 6557, column: 61, scope: !1525)
!1669 = !DILocation(line: 6557, column: 91, scope: !1670)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !21, line: 6557, column: 91)
!1671 = distinct !DILexicalBlock(scope: !1667, file: !21, line: 6557, column: 91)
!1672 = !DILocation(line: 6557, column: 91, scope: !1671)
!1673 = !DILocation(line: 6558, column: 25, scope: !1525)
!1674 = !DILocation(line: 6558, column: 3, scope: !1525)
!1675 = !DILocation(line: 6558, column: 23, scope: !1525)
!1676 = !{!1599, !1462, i64 40}
!1677 = !DILocation(line: 6558, column: 65, scope: !1678)
!1678 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6558, column: 65)
!1679 = !DILocation(line: 6558, column: 65, scope: !1525)
!1680 = !DILocation(line: 6558, column: 97, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1682, file: !21, line: 6558, column: 97)
!1682 = distinct !DILexicalBlock(scope: !1678, file: !21, line: 6558, column: 97)
!1683 = !DILocation(line: 6558, column: 97, scope: !1682)
!1684 = !DILocation(line: 6583, column: 7, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6583, column: 7)
!1686 = !DILocation(line: 6583, column: 29, scope: !1685)
!1687 = !DILocation(line: 6583, column: 7, scope: !1525)
!1688 = !DILocation(line: 6583, column: 34, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1690, file: !21, line: 6583, column: 34)
!1690 = distinct !DILexicalBlock(scope: !1685, file: !21, line: 6583, column: 34)
!1691 = !DILocation(line: 6583, column: 34, scope: !1690)
!1692 = !DILocation(line: 6584, column: 25, scope: !1525)
!1693 = !DILocation(line: 6585, column: 7, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6585, column: 7)
!1695 = !DILocation(line: 6585, column: 27, scope: !1694)
!1696 = !DILocation(line: 6585, column: 7, scope: !1525)
!1697 = !DILocation(line: 6585, column: 32, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !21, line: 6585, column: 32)
!1699 = distinct !DILexicalBlock(scope: !1694, file: !21, line: 6585, column: 32)
!1700 = !DILocation(line: 6585, column: 32, scope: !1699)
!1701 = !DILocation(line: 6589, column: 7, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6589, column: 7)
!1703 = !DILocation(line: 6589, column: 7, scope: !1525)
!1704 = !DILocation(line: 6590, column: 26, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1706, file: !21, line: 6590, column: 9)
!1706 = distinct !DILexicalBlock(scope: !1702, file: !21, line: 6589, column: 55)
!1707 = !DILocation(line: 6590, column: 35, scope: !1705)
!1708 = !{!1599, !1462, i64 368}
!1709 = !DILocation(line: 6590, column: 53, scope: !1705)
!1710 = !{!1599, !1462, i64 352}
!1711 = !DILocation(line: 6590, column: 9, scope: !1705)
!1712 = !DILocation(line: 6590, column: 69, scope: !1705)
!1713 = !DILocation(line: 6590, column: 9, scope: !1706)
!1714 = !DILocation(line: 6590, column: 74, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1716, file: !21, line: 6590, column: 74)
!1716 = distinct !DILexicalBlock(scope: !1705, file: !21, line: 6590, column: 74)
!1717 = !DILocation(line: 6590, column: 74, scope: !1716)
!1718 = !DILocation(line: 6591, column: 3, scope: !1706)
!1719 = !DILocation(line: 6594, column: 5, scope: !1539)
!1720 = !DILocation(line: 6594, column: 15, scope: !1539)
!1721 = !DILocation(line: 6594, column: 25, scope: !1539)
!1722 = !DILocation(line: 6594, column: 55, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1539, file: !21, line: 6594, column: 55)
!1724 = !DILocation(line: 6594, column: 55, scope: !1539)
!1725 = !DILocation(line: 6594, column: 75, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1727, file: !21, line: 6594, column: 75)
!1727 = distinct !DILexicalBlock(scope: !1723, file: !21, line: 6594, column: 75)
!1728 = !DILocation(line: 6594, column: 75, scope: !1727)
!1729 = !DILocation(line: 6595, column: 31, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1539, file: !21, line: 6595, column: 9)
!1731 = !DILocation(line: 6595, column: 10, scope: !1730)
!1732 = !DILocation(line: 6595, column: 9, scope: !1539)
!1733 = !DILocation(line: 6596, column: 11, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1735, file: !21, line: 6596, column: 11)
!1735 = distinct !DILexicalBlock(scope: !1730, file: !21, line: 6595, column: 68)
!1736 = !DILocation(line: 6596, column: 11, scope: !1735)
!1737 = !DILocation(line: 6596, column: 94, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1739, file: !21, line: 6596, column: 94)
!1739 = distinct !DILexicalBlock(scope: !1734, file: !21, line: 6596, column: 94)
!1740 = !DILocation(line: 6596, column: 94, scope: !1739)
!1741 = !DILocation(line: 6597, column: 5, scope: !1735)
!1742 = !DILocation(line: 6598, column: 3, scope: !1525)
!1743 = !DILocation(line: 6601, column: 7, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6601, column: 7)
!1745 = !DILocation(line: 6601, column: 34, scope: !1744)
!1746 = !DILocation(line: 6601, column: 7, scope: !1525)
!1747 = !DILocation(line: 6601, column: 39, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !21, line: 6601, column: 39)
!1749 = distinct !DILexicalBlock(scope: !1744, file: !21, line: 6601, column: 39)
!1750 = !DILocation(line: 6601, column: 39, scope: !1749)
!1751 = !DILocation(line: 6603, column: 7, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6603, column: 7)
!1753 = !DILocation(line: 6603, column: 35, scope: !1752)
!1754 = !DILocation(line: 6603, column: 7, scope: !1525)
!1755 = !DILocation(line: 6603, column: 40, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1757, file: !21, line: 6603, column: 40)
!1757 = distinct !DILexicalBlock(scope: !1752, file: !21, line: 6603, column: 40)
!1758 = !DILocation(line: 6603, column: 40, scope: !1757)
!1759 = !DILocation(line: 6605, column: 9, scope: !1525)
!1760 = !DILocation(line: 6606, column: 9, scope: !1525)
!1761 = !DILocation(line: 6607, column: 9, scope: !1525)
!1762 = !DILocation(line: 6608, column: 7, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6608, column: 7)
!1764 = !DILocation(line: 6608, column: 7, scope: !1525)
!1765 = !DILocation(line: 6608, column: 55, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1767, file: !21, line: 6608, column: 55)
!1767 = distinct !DILexicalBlock(scope: !1763, file: !21, line: 6608, column: 55)
!1768 = !DILocation(line: 6608, column: 55, scope: !1767)
!1769 = !DILocation(line: 6609, column: 7, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6609, column: 7)
!1771 = !DILocation(line: 6609, column: 7, scope: !1525)
!1772 = !DILocation(line: 6609, column: 57, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1774, file: !21, line: 6609, column: 57)
!1774 = distinct !DILexicalBlock(scope: !1770, file: !21, line: 6609, column: 57)
!1775 = !DILocation(line: 6609, column: 57, scope: !1774)
!1776 = !DILocation(line: 6610, column: 9, scope: !1525)
!1777 = !DILocation(line: 6611, column: 9, scope: !1525)
!1778 = !DILocation(line: 6624, column: 22, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6624, column: 7)
!1780 = !DILocation(line: 6624, column: 31, scope: !1779)
!1781 = !{!1599, !1462, i64 344}
!1782 = !DILocation(line: 6624, column: 51, scope: !1779)
!1783 = !{!1599, !1462, i64 448}
!1784 = !DILocation(line: 6624, column: 7, scope: !1779)
!1785 = !DILocation(line: 6624, column: 64, scope: !1779)
!1786 = !DILocation(line: 6624, column: 7, scope: !1525)
!1787 = !DILocation(line: 6624, column: 69, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !21, line: 6624, column: 69)
!1789 = distinct !DILexicalBlock(scope: !1779, file: !21, line: 6624, column: 69)
!1790 = !DILocation(line: 6624, column: 69, scope: !1789)
!1791 = !DILocation(line: 6633, column: 15, scope: !1525)
!1792 = !DILocation(line: 6633, column: 13, scope: !1525)
!1793 = !DILocation(line: 6633, column: 34, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6633, column: 34)
!1795 = !DILocation(line: 6633, column: 34, scope: !1525)
!1796 = !DILocation(line: 6633, column: 56, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1798, file: !21, line: 6633, column: 56)
!1798 = distinct !DILexicalBlock(scope: !1794, file: !21, line: 6633, column: 56)
!1799 = !DILocation(line: 6633, column: 56, scope: !1798)
!1800 = !DILocation(line: 6635, column: 22, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6635, column: 7)
!1802 = !DILocation(line: 6635, column: 31, scope: !1801)
!1803 = !{!1599, !1462, i64 408}
!1804 = !DILocation(line: 6635, column: 49, scope: !1801)
!1805 = !DILocation(line: 6635, column: 7, scope: !1801)
!1806 = !DILocation(line: 6635, column: 60, scope: !1801)
!1807 = !DILocation(line: 6635, column: 7, scope: !1525)
!1808 = !DILocation(line: 6635, column: 65, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1810, file: !21, line: 6635, column: 65)
!1810 = distinct !DILexicalBlock(scope: !1801, file: !21, line: 6635, column: 65)
!1811 = !DILocation(line: 6635, column: 65, scope: !1810)
!1812 = !DILocation(line: 6636, column: 3, scope: !1525)
!1813 = !DILocation(line: 6636, column: 38, scope: !1525)
!1814 = !DILocation(line: 6645, column: 35, scope: !1525)
!1815 = !DILocation(line: 6645, column: 56, scope: !1525)
!1816 = !{!1599, !1462, i64 472}
!1817 = !DILocation(line: 6645, column: 15, scope: !1525)
!1818 = !DILocation(line: 6645, column: 13, scope: !1525)
!1819 = !DILocation(line: 6645, column: 83, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6645, column: 83)
!1821 = !DILocation(line: 6645, column: 83, scope: !1525)
!1822 = !DILocation(line: 6645, column: 105, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1824, file: !21, line: 6645, column: 105)
!1824 = distinct !DILexicalBlock(scope: !1820, file: !21, line: 6645, column: 105)
!1825 = !DILocation(line: 6645, column: 105, scope: !1824)
!1826 = !DILocation(line: 6647, column: 8, scope: !1542)
!1827 = !DILocation(line: 6647, column: 47, scope: !1542)
!1828 = !DILocation(line: 6647, column: 51, scope: !1542)
!1829 = !DILocation(line: 6647, column: 7, scope: !1525)
!1830 = !DILocation(line: 6648, column: 5, scope: !1541)
!1831 = !DILocation(line: 6648, column: 15, scope: !1541)
!1832 = !DILocation(line: 6648, column: 26, scope: !1541)
!1833 = !DILocation(line: 6649, column: 5, scope: !1541)
!1834 = !DILocation(line: 6649, column: 16, scope: !1541)
!1835 = !DILocation(line: 6649, column: 23, scope: !1541)
!1836 = !{!1837, !1837, i64 0}
!1837 = !{!"long", !1463, i64 0}
!1838 = !DILocation(line: 6650, column: 9, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1541, file: !21, line: 6650, column: 9)
!1840 = !DILocation(line: 6650, column: 9, scope: !1541)
!1841 = !DILocation(line: 6651, column: 11, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1843, file: !21, line: 6651, column: 11)
!1843 = distinct !DILexicalBlock(scope: !1839, file: !21, line: 6650, column: 30)
!1844 = !DILocation(line: 6651, column: 16, scope: !1842)
!1845 = !DILocation(line: 6651, column: 11, scope: !1843)
!1846 = !DILocation(line: 6651, column: 21, scope: !1842)
!1847 = !DILocation(line: 6652, column: 16, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1842, file: !21, line: 6652, column: 16)
!1849 = !DILocation(line: 6652, column: 21, scope: !1848)
!1850 = !DILocation(line: 6652, column: 16, scope: !1842)
!1851 = !DILocation(line: 6652, column: 58, scope: !1848)
!1852 = !DILocation(line: 6652, column: 27, scope: !1848)
!1853 = !DILocation(line: 6653, column: 7, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1855, file: !21, line: 6653, column: 7)
!1855 = distinct !DILexicalBlock(scope: !1843, file: !21, line: 6653, column: 7)
!1856 = !DILocation(line: 6653, column: 7, scope: !1855)
!1857 = !DILocation(line: 6656, column: 9, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1541, file: !21, line: 6656, column: 9)
!1859 = !DILocation(line: 6656, column: 9, scope: !1541)
!1860 = !DILocation(line: 6657, column: 19, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1858, file: !21, line: 6656, column: 47)
!1862 = !DILocation(line: 6657, column: 17, scope: !1861)
!1863 = !DILocation(line: 6658, column: 19, scope: !1861)
!1864 = !DILocation(line: 6658, column: 17, scope: !1861)
!1865 = !DILocation(line: 6659, column: 5, scope: !1861)
!1866 = !DILocation(line: 6660, column: 19, scope: !1867)
!1867 = distinct !DILexicalBlock(scope: !1858, file: !21, line: 6659, column: 12)
!1868 = !{!1869, !1462, i64 24}
!1869 = !{!"", !1870, i64 0, !1462, i64 24, !1837, i64 32}
!1870 = !{!"", !1871, i64 0, !1837, i64 16}
!1871 = !{!"_object", !1837, i64 0, !1462, i64 8}
!1872 = !DILocation(line: 6660, column: 17, scope: !1867)
!1873 = !DILocation(line: 6661, column: 19, scope: !1867)
!1874 = !DILocation(line: 6661, column: 17, scope: !1867)
!1875 = !DILocation(line: 6663, column: 5, scope: !1541)
!1876 = !DILocation(line: 6664, column: 5, scope: !1541)
!1877 = !DILocation(line: 6671, column: 5, scope: !1541)
!1878 = !DILocation(line: 6671, column: 40, scope: !1541)
!1879 = !DILocation(line: 6672, column: 3, scope: !1542)
!1880 = !DILocation(line: 6672, column: 3, scope: !1541)
!1881 = !DILocation(line: 6673, column: 5, scope: !1545)
!1882 = !DILocation(line: 6673, column: 16, scope: !1545)
!1883 = !DILocation(line: 6674, column: 34, scope: !1545)
!1884 = !DILocation(line: 6674, column: 17, scope: !1545)
!1885 = !DILocation(line: 6674, column: 15, scope: !1545)
!1886 = !DILocation(line: 6674, column: 50, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1545, file: !21, line: 6674, column: 50)
!1888 = !DILocation(line: 6674, column: 50, scope: !1545)
!1889 = !DILocation(line: 6674, column: 72, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1891, file: !21, line: 6674, column: 72)
!1891 = distinct !DILexicalBlock(scope: !1887, file: !21, line: 6674, column: 72)
!1892 = !DILocation(line: 6674, column: 72, scope: !1891)
!1893 = !DILocation(line: 6676, column: 5, scope: !1545)
!1894 = !DILocation(line: 6676, column: 40, scope: !1545)
!1895 = !DILocation(line: 6677, column: 17, scope: !1545)
!1896 = !{!1897, !1462, i64 224}
!1897 = !{!"_typeobject", !1870, i64 0, !1462, i64 24, !1837, i64 32, !1837, i64 40, !1462, i64 48, !1837, i64 56, !1462, i64 64, !1462, i64 72, !1462, i64 80, !1462, i64 88, !1462, i64 96, !1462, i64 104, !1462, i64 112, !1462, i64 120, !1462, i64 128, !1462, i64 136, !1462, i64 144, !1462, i64 152, !1462, i64 160, !1837, i64 168, !1462, i64 176, !1462, i64 184, !1462, i64 192, !1462, i64 200, !1837, i64 208, !1462, i64 216, !1462, i64 224, !1462, i64 232, !1462, i64 240, !1462, i64 248, !1462, i64 256, !1462, i64 264, !1462, i64 272, !1462, i64 280, !1837, i64 288, !1462, i64 296, !1462, i64 304, !1462, i64 312, !1462, i64 320, !1462, i64 328, !1462, i64 336, !1462, i64 344, !1462, i64 352, !1462, i64 360, !1462, i64 368, !1462, i64 376, !1558, i64 384, !1462, i64 392, !1462, i64 400}
!1898 = !DILocation(line: 6677, column: 15, scope: !1545)
!1899 = !DILocation(line: 6678, column: 11, scope: !1545)
!1900 = !DILocation(line: 6678, column: 28, scope: !1545)
!1901 = !DILocation(line: 6678, column: 38, scope: !1545)
!1902 = !DILocation(line: 6678, column: 26, scope: !1545)
!1903 = !DILocation(line: 6678, column: 54, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1545, file: !21, line: 6678, column: 54)
!1905 = !DILocation(line: 6678, column: 54, scope: !1545)
!1906 = !DILocation(line: 6678, column: 76, scope: !1904)
!1907 = !DILocation(line: 6680, column: 11, scope: !1545)
!1908 = !DILocation(line: 6680, column: 28, scope: !1545)
!1909 = !DILocation(line: 6680, column: 38, scope: !1545)
!1910 = !DILocation(line: 6680, column: 26, scope: !1545)
!1911 = !DILocation(line: 6680, column: 54, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1545, file: !21, line: 6680, column: 54)
!1913 = !DILocation(line: 6680, column: 54, scope: !1545)
!1914 = !DILocation(line: 6680, column: 76, scope: !1912)
!1915 = !DILocation(line: 6682, column: 38, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1545, file: !21, line: 6682, column: 9)
!1917 = !DILocation(line: 6682, column: 48, scope: !1916)
!1918 = !DILocation(line: 6682, column: 9, scope: !1916)
!1919 = !DILocation(line: 6682, column: 63, scope: !1916)
!1920 = !DILocation(line: 6682, column: 9, scope: !1545)
!1921 = !DILocation(line: 6682, column: 68, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1923, file: !21, line: 6682, column: 68)
!1923 = distinct !DILexicalBlock(scope: !1916, file: !21, line: 6682, column: 68)
!1924 = !DILocation(line: 6682, column: 68, scope: !1923)
!1925 = !DILocation(line: 6683, column: 15, scope: !1545)
!1926 = !DILocation(line: 6684, column: 5, scope: !1545)
!1927 = !DILocation(line: 6684, column: 40, scope: !1545)
!1928 = !DILocation(line: 6685, column: 5, scope: !1545)
!1929 = !DILocation(line: 6686, column: 5, scope: !1545)
!1930 = !DILocation(line: 6687, column: 5, scope: !1545)
!1931 = !DILocation(line: 6687, column: 40, scope: !1545)
!1932 = !DILocation(line: 6688, column: 15, scope: !1545)
!1933 = !DILocation(line: 6689, column: 9, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1545, file: !21, line: 6689, column: 9)
!1935 = !DILocation(line: 6689, column: 28, scope: !1934)
!1936 = !DILocation(line: 6689, column: 9, scope: !1545)
!1937 = !DILocation(line: 6689, column: 65, scope: !1934)
!1938 = !DILocation(line: 6689, column: 34, scope: !1934)
!1939 = !DILocation(line: 6690, column: 5, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1941, file: !21, line: 6690, column: 5)
!1941 = distinct !DILexicalBlock(scope: !1545, file: !21, line: 6690, column: 5)
!1942 = !DILocation(line: 6690, column: 5, scope: !1941)
!1943 = !DILocation(line: 6691, column: 5, scope: !1545)
!1944 = !DILocation(line: 6692, column: 3, scope: !1542)
!1945 = !DILocation(line: 6693, column: 22, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6693, column: 7)
!1947 = !DILocation(line: 6693, column: 31, scope: !1946)
!1948 = !{!1599, !1462, i64 88}
!1949 = !DILocation(line: 6693, column: 51, scope: !1946)
!1950 = !DILocation(line: 6693, column: 7, scope: !1946)
!1951 = !DILocation(line: 6693, column: 62, scope: !1946)
!1952 = !DILocation(line: 6693, column: 7, scope: !1525)
!1953 = !DILocation(line: 6693, column: 67, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !21, line: 6693, column: 67)
!1955 = distinct !DILexicalBlock(scope: !1946, file: !21, line: 6693, column: 67)
!1956 = !DILocation(line: 6693, column: 67, scope: !1955)
!1957 = !DILocation(line: 6694, column: 3, scope: !1525)
!1958 = !DILocation(line: 6694, column: 38, scope: !1525)
!1959 = !DILocation(line: 6695, column: 22, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6695, column: 7)
!1961 = !DILocation(line: 6695, column: 31, scope: !1960)
!1962 = !{!1599, !1462, i64 80}
!1963 = !DILocation(line: 6695, column: 50, scope: !1960)
!1964 = !DILocation(line: 6695, column: 7, scope: !1960)
!1965 = !DILocation(line: 6695, column: 61, scope: !1960)
!1966 = !DILocation(line: 6695, column: 7, scope: !1525)
!1967 = !DILocation(line: 6695, column: 66, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !21, line: 6695, column: 66)
!1969 = distinct !DILexicalBlock(scope: !1960, file: !21, line: 6695, column: 66)
!1970 = !DILocation(line: 6695, column: 66, scope: !1969)
!1971 = !DILocation(line: 6696, column: 3, scope: !1525)
!1972 = !DILocation(line: 6696, column: 38, scope: !1525)
!1973 = !DILocation(line: 6705, column: 49, scope: !1525)
!1974 = !{!1975, !1462, i64 0}
!1975 = !{!"__pyx_t_6Cython_7Runtime_8refnanny_RefNannyAPIStruct", !1462, i64 0, !1462, i64 8, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40}
!1976 = !DILocation(line: 6714, column: 49, scope: !1525)
!1977 = !{!1975, !1462, i64 8}
!1978 = !DILocation(line: 6723, column: 49, scope: !1525)
!1979 = !{!1975, !1462, i64 16}
!1980 = !DILocation(line: 6732, column: 50, scope: !1525)
!1981 = !{!1975, !1462, i64 24}
!1982 = !DILocation(line: 6741, column: 55, scope: !1525)
!1983 = !{!1975, !1462, i64 32}
!1984 = !DILocation(line: 6750, column: 56, scope: !1525)
!1985 = !{!1975, !1462, i64 40}
!1986 = !DILocation(line: 6757, column: 15, scope: !1525)
!1987 = !DILocation(line: 6757, column: 13, scope: !1525)
!1988 = !DILocation(line: 6757, column: 92, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6757, column: 92)
!1990 = !DILocation(line: 6757, column: 92, scope: !1525)
!1991 = !DILocation(line: 6757, column: 114, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1993, file: !21, line: 6757, column: 114)
!1993 = distinct !DILexicalBlock(scope: !1989, file: !21, line: 6757, column: 114)
!1994 = !DILocation(line: 6757, column: 114, scope: !1993)
!1995 = !DILocation(line: 6759, column: 22, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1525, file: !21, line: 6759, column: 7)
!1997 = !DILocation(line: 6759, column: 31, scope: !1996)
!1998 = !{!1599, !1462, i64 120}
!1999 = !DILocation(line: 6759, column: 54, scope: !1996)
!2000 = !DILocation(line: 6759, column: 7, scope: !1996)
!2001 = !DILocation(line: 6759, column: 65, scope: !1996)
!2002 = !DILocation(line: 6759, column: 7, scope: !1525)
!2003 = !DILocation(line: 6759, column: 70, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !2005, file: !21, line: 6759, column: 70)
!2005 = distinct !DILexicalBlock(scope: !1996, file: !21, line: 6759, column: 70)
!2006 = !DILocation(line: 6759, column: 70, scope: !2005)
!2007 = !DILocation(line: 6760, column: 3, scope: !1525)
!2008 = !DILocation(line: 6760, column: 38, scope: !1525)
!2009 = !DILocation(line: 6764, column: 3, scope: !1525)
!2010 = !DILocation(line: 6765, column: 3, scope: !1525)
!2011 = !DILocation(line: 6766, column: 3, scope: !1525)
!2012 = !DILocation(line: 6767, column: 3, scope: !1525)
!2013 = !DILocation(line: 6768, column: 3, scope: !1525)
!2014 = !DILocation(line: 6769, column: 3, scope: !1525)
!2015 = !DILocation(line: 6770, column: 7, scope: !1552)
!2016 = !DILocation(line: 6770, column: 7, scope: !1525)
!2017 = !DILocation(line: 6771, column: 9, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !1551, file: !21, line: 6771, column: 9)
!2019 = !DILocation(line: 6771, column: 17, scope: !2018)
!2020 = !DILocation(line: 6771, column: 20, scope: !2018)
!2021 = !DILocation(line: 6771, column: 9, scope: !1551)
!2022 = !DILocation(line: 6772, column: 58, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !2018, file: !21, line: 6771, column: 43)
!2024 = !DILocation(line: 6772, column: 73, scope: !2023)
!2025 = !DILocation(line: 6772, column: 87, scope: !2023)
!2026 = !DILocation(line: 6772, column: 7, scope: !2023)
!2027 = !DILocation(line: 6773, column: 5, scope: !2023)
!2028 = !DILocation(line: 6775, column: 5, scope: !1551)
!2029 = !DILocation(line: 6775, column: 5, scope: !1550)
!2030 = !DILocation(line: 6775, column: 5, scope: !2031)
!2031 = distinct !DILexicalBlock(scope: !1550, file: !21, line: 6775, column: 5)
!2032 = !DILocation(line: 6775, column: 5, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2031, file: !21, line: 6775, column: 5)
!2034 = !DILocation(line: 6785, column: 3, scope: !1551)
!2035 = !DILocation(line: 6785, column: 15, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !1552, file: !21, line: 6785, column: 14)
!2037 = !DILocation(line: 6785, column: 14, scope: !1552)
!2038 = !DILocation(line: 6786, column: 21, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2036, file: !21, line: 6785, column: 33)
!2040 = !DILocation(line: 6786, column: 5, scope: !2039)
!2041 = !DILocation(line: 6787, column: 3, scope: !2039)
!2042 = !DILocation(line: 6788, column: 3, scope: !1525)
!2043 = !DILocation(line: 6791, column: 11, scope: !1525)
!2044 = !DILocation(line: 6791, column: 19, scope: !1525)
!2045 = !DILocation(line: 6791, column: 10, scope: !1525)
!2046 = !DILocation(line: 6791, column: 3, scope: !1525)
!2047 = !DILocation(line: 6797, column: 1, scope: !1525)
!2048 = !DILocation(line: 6413, column: 5, scope: !636)
!2049 = !DILocation(line: 6413, column: 16, scope: !636)
!2050 = !DILocation(line: 6413, column: 54, scope: !636)
!2051 = !DILocation(line: 6413, column: 75, scope: !636)
!2052 = !{!2053, !1462, i64 16}
!2053 = !{!"_ts", !1462, i64 0, !1462, i64 8, !1462, i64 16, !1558, i64 24, !1558, i64 28, !1558, i64 32, !1558, i64 36, !1558, i64 40, !1558, i64 44, !1558, i64 48, !1462, i64 56, !1462, i64 64, !1462, i64 72, !1462, i64 80, !1462, i64 88, !1462, i64 96, !1462, i64 104, !1462, i64 112, !1462, i64 120, !1462, i64 128, !1558, i64 136, !1462, i64 144, !1837, i64 152, !1837, i64 160, !1558, i64 168, !1462, i64 176, !1462, i64 184, !1462, i64 192, !1558, i64 200, !1462, i64 208, !1462, i64 216, !1462, i64 224, !1837, i64 232, !1837, i64 240, !2054, i64 248, !1462, i64 296, !1462, i64 304, !1462, i64 312, !2057, i64 320, !2058, i64 336}
!2054 = !{!"", !1462, i64 0, !2055, i64 8}
!2055 = !{!"_line_offsets", !1558, i64 0, !1558, i64 4, !1558, i64 8, !2056, i64 16}
!2056 = !{!"_opaque", !1558, i64 0, !1462, i64 8, !1462, i64 16}
!2057 = !{!"_err_stackitem", !1462, i64 0, !1462, i64 8}
!2058 = !{!"_PyCFrame", !1463, i64 0, !1462, i64 8, !1462, i64 16}
!2059 = !DILocation(line: 6413, column: 29, scope: !636)
!2060 = !DILocation(line: 6414, column: 9, scope: !2061)
!2061 = distinct !DILexicalBlock(scope: !636, file: !21, line: 6414, column: 9)
!2062 = !DILocation(line: 6414, column: 29, scope: !2061)
!2063 = !DILocation(line: 6414, column: 9, scope: !636)
!2064 = !DILocation(line: 6415, column: 31, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2061, file: !21, line: 6414, column: 36)
!2066 = !DILocation(line: 6415, column: 29, scope: !2065)
!2067 = !DILocation(line: 6416, column: 17, scope: !2065)
!2068 = !DILocation(line: 6416, column: 16, scope: !2065)
!2069 = !DILocation(line: 6416, column: 9, scope: !2065)
!2070 = !DILocation(line: 6417, column: 16, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2061, file: !21, line: 6417, column: 16)
!2072 = !DILocation(line: 6417, column: 16, scope: !2061)
!2073 = !DILocation(line: 6427, column: 13, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2071, file: !21, line: 6425, column: 5)
!2075 = !DILocation(line: 6426, column: 9, scope: !2074)
!2076 = !DILocation(line: 6429, column: 9, scope: !2074)
!2077 = !DILocation(line: 6431, column: 5, scope: !636)
!2078 = !DILocation(line: 6432, column: 1, scope: !636)
!2079 = distinct !DISubprogram(name: "Py_INCREF", scope: !6, file: !6, line: 491, type: !62, scopeLine: 492, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2080)
!2080 = !{!2081}
!2081 = !DILocalVariable(name: "op", arg: 1, scope: !2079, file: !6, line: 491, type: !28)
!2082 = !DILocation(line: 491, column: 40, scope: !2079)
!2083 = !DILocation(line: 502, column: 5, scope: !2079)
!2084 = !DILocation(line: 502, column: 9, scope: !2079)
!2085 = !DILocation(line: 502, column: 18, scope: !2079)
!2086 = !{!1871, !1837, i64 0}
!2087 = !DILocation(line: 504, column: 1, scope: !2079)
!2088 = !DISubprogram(name: "PyObject_GetAttrString", scope: !6, file: !6, line: 289, type: !2089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!28, !28, !54}
!2091 = !DISubprogram(name: "PyModule_NewObject", scope: !566, file: !566, line: 16, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2092 = distinct !DISubprogram(name: "Py_DECREF", scope: !6, file: !6, line: 533, type: !62, scopeLine: 534, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2093)
!2093 = !{!2094}
!2094 = !DILocalVariable(name: "op", arg: 1, scope: !2092, file: !6, line: 533, type: !28)
!2095 = !DILocation(line: 533, column: 40, scope: !2092)
!2096 = !DILocation(line: 537, column: 11, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2092, file: !6, line: 537, column: 9)
!2098 = !DILocation(line: 537, column: 15, scope: !2097)
!2099 = !DILocation(line: 537, column: 9, scope: !2097)
!2100 = !DILocation(line: 537, column: 25, scope: !2097)
!2101 = !DILocation(line: 537, column: 9, scope: !2092)
!2102 = !DILocation(line: 538, column: 21, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2097, file: !6, line: 537, column: 31)
!2104 = !DILocation(line: 538, column: 9, scope: !2103)
!2105 = !DILocation(line: 539, column: 5, scope: !2103)
!2106 = !DILocation(line: 540, column: 1, scope: !2092)
!2107 = !DISubprogram(name: "PyModule_GetDict", scope: !566, file: !566, line: 23, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2108 = distinct !DISubprogram(name: "__Pyx_copy_spec_to_module", scope: !21, file: !21, line: 6436, type: !2109, scopeLine: 6438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2111)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!7, !28, !28, !54, !54, !7}
!2111 = !{!2112, !2113, !2114, !2115, !2116, !2117, !2118}
!2112 = !DILocalVariable(name: "spec", arg: 1, scope: !2108, file: !21, line: 6436, type: !28)
!2113 = !DILocalVariable(name: "moddict", arg: 2, scope: !2108, file: !21, line: 6436, type: !28)
!2114 = !DILocalVariable(name: "from_name", arg: 3, scope: !2108, file: !21, line: 6436, type: !54)
!2115 = !DILocalVariable(name: "to_name", arg: 4, scope: !2108, file: !21, line: 6436, type: !54)
!2116 = !DILocalVariable(name: "allow_none", arg: 5, scope: !2108, file: !21, line: 6436, type: !7)
!2117 = !DILocalVariable(name: "value", scope: !2108, file: !21, line: 6439, type: !28)
!2118 = !DILocalVariable(name: "result", scope: !2108, file: !21, line: 6440, type: !7)
!2119 = !DILocation(line: 6436, column: 66, scope: !2108)
!2120 = !DILocation(line: 6436, column: 82, scope: !2108)
!2121 = !DILocation(line: 6436, column: 103, scope: !2108)
!2122 = !DILocation(line: 6436, column: 126, scope: !2108)
!2123 = !DILocation(line: 6436, column: 139, scope: !2108)
!2124 = !DILocation(line: 6439, column: 5, scope: !2108)
!2125 = !DILocation(line: 6439, column: 15, scope: !2108)
!2126 = !DILocation(line: 6439, column: 46, scope: !2108)
!2127 = !DILocation(line: 6439, column: 52, scope: !2108)
!2128 = !DILocation(line: 6439, column: 23, scope: !2108)
!2129 = !DILocation(line: 6440, column: 5, scope: !2108)
!2130 = !DILocation(line: 6440, column: 9, scope: !2108)
!2131 = !DILocation(line: 6441, column: 9, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2108, file: !21, line: 6441, column: 9)
!2133 = !DILocation(line: 6441, column: 9, scope: !2108)
!2134 = !DILocation(line: 6442, column: 13, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !21, line: 6442, column: 13)
!2136 = distinct !DILexicalBlock(scope: !2132, file: !21, line: 6441, column: 24)
!2137 = !DILocation(line: 6442, column: 24, scope: !2135)
!2138 = !DILocation(line: 6442, column: 27, scope: !2135)
!2139 = !DILocation(line: 6442, column: 33, scope: !2135)
!2140 = !DILocation(line: 6442, column: 13, scope: !2136)
!2141 = !DILocation(line: 6446, column: 43, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2135, file: !21, line: 6442, column: 45)
!2143 = !DILocation(line: 6446, column: 52, scope: !2142)
!2144 = !DILocation(line: 6446, column: 61, scope: !2142)
!2145 = !DILocation(line: 6446, column: 22, scope: !2142)
!2146 = !DILocation(line: 6446, column: 20, scope: !2142)
!2147 = !DILocation(line: 6448, column: 9, scope: !2142)
!2148 = !DILocation(line: 6449, column: 9, scope: !2136)
!2149 = !DILocation(line: 6450, column: 5, scope: !2136)
!2150 = !DILocation(line: 6450, column: 39, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2132, file: !21, line: 6450, column: 16)
!2152 = !DILocation(line: 6450, column: 16, scope: !2151)
!2153 = !DILocation(line: 6450, column: 16, scope: !2132)
!2154 = !DILocation(line: 6451, column: 9, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2151, file: !21, line: 6450, column: 62)
!2156 = !DILocation(line: 6452, column: 5, scope: !2155)
!2157 = !DILocation(line: 6453, column: 16, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2151, file: !21, line: 6452, column: 12)
!2159 = !DILocation(line: 6455, column: 12, scope: !2108)
!2160 = !DILocation(line: 6456, column: 1, scope: !2108)
!2161 = !DILocation(line: 6455, column: 5, scope: !2108)
!2162 = distinct !DISubprogram(name: "Py_XDECREF", scope: !6, file: !6, line: 599, type: !62, scopeLine: 600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2163)
!2163 = !{!2164}
!2164 = !DILocalVariable(name: "op", arg: 1, scope: !2162, file: !6, line: 599, type: !28)
!2165 = !DILocation(line: 599, column: 41, scope: !2162)
!2166 = !DILocation(line: 601, column: 9, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2162, file: !6, line: 601, column: 9)
!2168 = !DILocation(line: 601, column: 12, scope: !2167)
!2169 = !DILocation(line: 601, column: 9, scope: !2162)
!2170 = !DILocation(line: 602, column: 9, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !2167, file: !6, line: 601, column: 25)
!2172 = !DILocation(line: 603, column: 5, scope: !2171)
!2173 = !DILocation(line: 604, column: 1, scope: !2162)
!2174 = !DISubprogram(name: "PyInterpreterState_GetID", scope: !2175, file: !2175, line: 36, type: !2176, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2175 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pystate.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "47bcf81a3ade86878f3e119bcc367bce")
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!641, !1268}
!2178 = !DISubprogram(name: "PyThreadState_Get", scope: !2175, file: !2175, line: 60, type: !2179, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!1260}
!2181 = !DISubprogram(name: "PyErr_SetString", scope: !2182, file: !2182, line: 13, type: !2183, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2182 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pyerrors.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "b73e4b5df7a17ee42bc3fece0535c8f9")
!2183 = !DISubroutineType(types: !2184)
!2184 = !{null, !28, !54}
!2185 = !DISubprogram(name: "_Py_Dealloc", scope: !6, file: !6, line: 477, type: !62, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2186 = !DISubprogram(name: "PyDict_SetItemString", scope: !2187, file: !2187, line: 58, type: !2188, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2187 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/dictobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "572218e19a764bc436837bf1e74340b3")
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!7, !28, !54, !28}
!2190 = !DISubprogram(name: "PyErr_ExceptionMatches", scope: !2182, file: !2182, line: 39, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2191 = !DISubprogram(name: "PyErr_Clear", scope: !2182, file: !2182, line: 18, type: !2192, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{null}
!2194 = !DISubprogram(name: "PyImport_AddModule", scope: !2195, file: !2195, line: 43, type: !2196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2195 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/import.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "283acfa302bf06babd574eee608cf1a1")
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!28, !54}
!2198 = !DISubprogram(name: "PyObject_SetAttrString", scope: !6, file: !6, line: 290, type: !2188, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2199 = distinct !DISubprogram(name: "__Pyx_check_binary_version", scope: !21, file: !21, line: 11013, type: !2200, scopeLine: 11013, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!7, !238, !238, !7}
!2202 = !{!2203, !2204, !2205, !2206, !2208}
!2203 = !DILocalVariable(name: "ct_version", arg: 1, scope: !2199, file: !21, line: 11013, type: !238)
!2204 = !DILocalVariable(name: "rt_version", arg: 2, scope: !2199, file: !21, line: 11013, type: !238)
!2205 = !DILocalVariable(name: "allow_newer", arg: 3, scope: !2199, file: !21, line: 11013, type: !7)
!2206 = !DILocalVariable(name: "MAJOR_MINOR", scope: !2199, file: !21, line: 11014, type: !2207)
!2207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !238)
!2208 = !DILocalVariable(name: "message", scope: !2209, file: !21, line: 11020, type: !2210)
!2209 = distinct !DILexicalBlock(scope: !2199, file: !21, line: 11019, column: 5)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 1600, elements: !2211)
!2211 = !{!2212}
!2212 = !DISubrange(count: 200)
!2213 = !DILocation(line: 11013, column: 53, scope: !2199)
!2214 = !DILocation(line: 11013, column: 79, scope: !2199)
!2215 = !DILocation(line: 11013, column: 95, scope: !2199)
!2216 = !DILocation(line: 11014, column: 5, scope: !2199)
!2217 = !DILocation(line: 11014, column: 25, scope: !2199)
!2218 = !DILocation(line: 11015, column: 10, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2199, file: !21, line: 11015, column: 9)
!2220 = !DILocation(line: 11015, column: 21, scope: !2219)
!2221 = !DILocation(line: 11015, column: 40, scope: !2219)
!2222 = !DILocation(line: 11015, column: 51, scope: !2219)
!2223 = !DILocation(line: 11015, column: 36, scope: !2219)
!2224 = !DILocation(line: 11015, column: 9, scope: !2199)
!2225 = !DILocation(line: 11016, column: 9, scope: !2219)
!2226 = !DILocation(line: 11017, column: 9, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2199, file: !21, line: 11017, column: 9)
!2228 = !DILocation(line: 0, scope: !2227)
!2229 = !DILocation(line: 11017, column: 9, scope: !2199)
!2230 = !DILocation(line: 11018, column: 9, scope: !2227)
!2231 = !DILocation(line: 11020, column: 9, scope: !2209)
!2232 = !DILocation(line: 11020, column: 14, scope: !2209)
!2233 = !DILocation(line: 11021, column: 23, scope: !2209)
!2234 = !DILocation(line: 11026, column: 31, scope: !2209)
!2235 = !DILocation(line: 11026, column: 42, scope: !2209)
!2236 = !DILocation(line: 11026, column: 24, scope: !2209)
!2237 = !DILocation(line: 11026, column: 58, scope: !2209)
!2238 = !DILocation(line: 11026, column: 69, scope: !2209)
!2239 = !DILocation(line: 11026, column: 76, scope: !2209)
!2240 = !DILocation(line: 11026, column: 50, scope: !2209)
!2241 = !DILocation(line: 11028, column: 25, scope: !2209)
!2242 = !DILocation(line: 11028, column: 24, scope: !2209)
!2243 = !DILocation(line: 11029, column: 31, scope: !2209)
!2244 = !DILocation(line: 11029, column: 42, scope: !2209)
!2245 = !DILocation(line: 11029, column: 24, scope: !2209)
!2246 = !DILocation(line: 11029, column: 58, scope: !2209)
!2247 = !DILocation(line: 11029, column: 69, scope: !2209)
!2248 = !DILocation(line: 11029, column: 76, scope: !2209)
!2249 = !DILocation(line: 11029, column: 50, scope: !2209)
!2250 = !DILocation(line: 11021, column: 9, scope: !2209)
!2251 = !DILocation(line: 11031, column: 35, scope: !2209)
!2252 = !DILocation(line: 11031, column: 16, scope: !2209)
!2253 = !DILocation(line: 11031, column: 9, scope: !2209)
!2254 = !DILocation(line: 11032, column: 5, scope: !2199)
!2255 = !DILocation(line: 11033, column: 1, scope: !2199)
!2256 = distinct !DISubprogram(name: "__Pyx_get_runtime_version", scope: !21, file: !21, line: 10989, type: !2257, scopeLine: 10989, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!238}
!2259 = !DILocation(line: 10991, column: 12, scope: !2256)
!2260 = !DILocation(line: 10991, column: 23, scope: !2256)
!2261 = !DILocation(line: 10991, column: 5, scope: !2256)
!2262 = !DISubprogram(name: "PyTuple_New", scope: !2263, file: !2263, line: 30, type: !2264, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2263 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/tupleobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "ef7731d859c7588a602c086240aebf11")
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!28, !34}
!2266 = !DISubprogram(name: "PyBytes_FromStringAndSize", scope: !2267, file: !2267, line: 34, type: !2268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2267 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/bytesobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "4bc8d34477ea1dd228eae99f80a8951b")
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!28, !54, !34}
!2270 = !DISubprogram(name: "PyUnicode_FromStringAndSize", scope: !424, file: !424, line: 130, type: !2268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2271 = distinct !DISubprogram(name: "__Pyx_InitConstants", scope: !21, file: !21, line: 6197, type: !637, scopeLine: 6197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2272)
!2272 = !{!2273}
!2273 = !DILabel(scope: !2271, name: "__pyx_L1_error", file: !21, line: 6205)
!2274 = !DILocation(line: 6198, column: 38, scope: !2271)
!2275 = !{!2276, !1462, i64 0}
!2276 = !{!"", !1462, i64 0, !1462, i64 8, !1462, i64 16, !1462, i64 24, !1558, i64 32}
!2277 = !DILocation(line: 6199, column: 48, scope: !2271)
!2278 = !DILocation(line: 6199, column: 45, scope: !2271)
!2279 = !{!2276, !1462, i64 8}
!2280 = !DILocation(line: 6200, column: 7, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2271, file: !21, line: 6200, column: 7)
!2282 = !DILocation(line: 6200, column: 45, scope: !2281)
!2283 = !DILocation(line: 6200, column: 7, scope: !2271)
!2284 = !DILocation(line: 6200, column: 50, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2286, file: !21, line: 6200, column: 50)
!2286 = distinct !DILexicalBlock(scope: !2281, file: !21, line: 6200, column: 50)
!2287 = !DILocation(line: 6200, column: 50, scope: !2286)
!2288 = !DILocation(line: 6201, column: 17, scope: !2271)
!2289 = !DILocation(line: 6201, column: 3, scope: !2271)
!2290 = !DILocation(line: 6201, column: 15, scope: !2271)
!2291 = !DILocation(line: 6201, column: 40, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2271, file: !21, line: 6201, column: 40)
!2293 = !DILocation(line: 6201, column: 40, scope: !2271)
!2294 = !DILocation(line: 6201, column: 64, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2296, file: !21, line: 6201, column: 64)
!2296 = distinct !DILexicalBlock(scope: !2292, file: !21, line: 6201, column: 64)
!2297 = !DILocation(line: 6201, column: 64, scope: !2296)
!2298 = !DILocation(line: 6202, column: 17, scope: !2271)
!2299 = !DILocation(line: 6202, column: 3, scope: !2271)
!2300 = !DILocation(line: 6202, column: 15, scope: !2271)
!2301 = !{!1599, !1462, i64 456}
!2302 = !DILocation(line: 6202, column: 40, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2271, file: !21, line: 6202, column: 40)
!2304 = !DILocation(line: 6202, column: 40, scope: !2271)
!2305 = !DILocation(line: 6202, column: 64, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !21, line: 6202, column: 64)
!2307 = distinct !DILexicalBlock(scope: !2303, file: !21, line: 6202, column: 64)
!2308 = !DILocation(line: 6202, column: 64, scope: !2307)
!2309 = !DILocation(line: 6203, column: 17, scope: !2271)
!2310 = !DILocation(line: 6203, column: 3, scope: !2271)
!2311 = !DILocation(line: 6203, column: 15, scope: !2271)
!2312 = !{!1599, !1462, i64 464}
!2313 = !DILocation(line: 6203, column: 40, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2271, file: !21, line: 6203, column: 40)
!2315 = !DILocation(line: 6203, column: 40, scope: !2271)
!2316 = !DILocation(line: 6203, column: 64, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2318, file: !21, line: 6203, column: 64)
!2318 = distinct !DILexicalBlock(scope: !2314, file: !21, line: 6203, column: 64)
!2319 = !DILocation(line: 6203, column: 64, scope: !2318)
!2320 = !DILocation(line: 6204, column: 3, scope: !2271)
!2321 = !DILocation(line: 6205, column: 3, scope: !2271)
!2322 = !DILocation(line: 6206, column: 3, scope: !2271)
!2323 = !DILocation(line: 6207, column: 1, scope: !2271)
!2324 = distinct !DISubprogram(name: "__Pyx_InitGlobals", scope: !21, file: !21, line: 6210, type: !637, scopeLine: 6210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2325 = !DILocation(line: 6211, column: 3, scope: !2324)
!2326 = !DISubprogram(name: "PyObject_SetAttr", scope: !6, file: !6, line: 293, type: !191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2327 = !DISubprogram(name: "PyImport_GetModuleDict", scope: !2195, file: !2195, line: 34, type: !575, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2328 = !DISubprogram(name: "PyDict_GetItemString", scope: !2187, file: !2187, line: 57, type: !2089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2329 = distinct !DISubprogram(name: "__Pyx_InitCachedBuiltins", scope: !21, file: !21, line: 6165, type: !637, scopeLine: 6165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2330)
!2330 = !{!2331}
!2331 = !DILabel(scope: !2329, name: "__pyx_L1_error", file: !21, line: 6170)
!2332 = !DILocation(line: 6166, column: 46, scope: !2329)
!2333 = !{!1599, !1462, i64 392}
!2334 = !DILocation(line: 6166, column: 25, scope: !2329)
!2335 = !DILocation(line: 6166, column: 23, scope: !2329)
!2336 = !DILocation(line: 6166, column: 69, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2329, file: !21, line: 6166, column: 68)
!2338 = !DILocation(line: 6166, column: 68, scope: !2329)
!2339 = !DILocation(line: 6166, column: 90, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2341, file: !21, line: 6166, column: 90)
!2341 = distinct !DILexicalBlock(scope: !2337, file: !21, line: 6166, column: 90)
!2342 = !DILocation(line: 6166, column: 90, scope: !2341)
!2343 = !DILocation(line: 6167, column: 43, scope: !2329)
!2344 = !{!1599, !1462, i64 288}
!2345 = !DILocation(line: 6167, column: 22, scope: !2329)
!2346 = !DILocation(line: 6167, column: 20, scope: !2329)
!2347 = !DILocation(line: 6167, column: 63, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2329, file: !21, line: 6167, column: 62)
!2349 = !DILocation(line: 6167, column: 62, scope: !2329)
!2350 = !DILocation(line: 6167, column: 81, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !2352, file: !21, line: 6167, column: 81)
!2352 = distinct !DILexicalBlock(scope: !2348, file: !21, line: 6167, column: 81)
!2353 = !DILocation(line: 6167, column: 81, scope: !2352)
!2354 = !DILocation(line: 6168, column: 46, scope: !2329)
!2355 = !{!1599, !1462, i64 376}
!2356 = !DILocation(line: 6168, column: 25, scope: !2329)
!2357 = !DILocation(line: 6168, column: 23, scope: !2329)
!2358 = !DILocation(line: 6168, column: 69, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2329, file: !21, line: 6168, column: 68)
!2360 = !DILocation(line: 6168, column: 68, scope: !2329)
!2361 = !DILocation(line: 6168, column: 90, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !21, line: 6168, column: 90)
!2363 = distinct !DILexicalBlock(scope: !2359, file: !21, line: 6168, column: 90)
!2364 = !DILocation(line: 6168, column: 90, scope: !2363)
!2365 = !DILocation(line: 6169, column: 3, scope: !2329)
!2366 = !DILocation(line: 6170, column: 3, scope: !2329)
!2367 = !DILocation(line: 6171, column: 3, scope: !2329)
!2368 = !DILocation(line: 6172, column: 1, scope: !2329)
!2369 = distinct !DISubprogram(name: "__Pyx_InitCachedConstants", scope: !21, file: !21, line: 6175, type: !637, scopeLine: 6175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2370)
!2370 = !{!2371}
!2371 = !DILabel(scope: !2369, name: "__pyx_L1_error", file: !21, line: 6191)
!2372 = !DILocation(line: 6186, column: 36, scope: !2369)
!2373 = !DILocation(line: 6186, column: 20, scope: !2369)
!2374 = !DILocation(line: 6186, column: 3, scope: !2369)
!2375 = !DILocation(line: 6186, column: 18, scope: !2369)
!2376 = !DILocation(line: 6186, column: 54, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2369, file: !21, line: 6186, column: 54)
!2378 = !DILocation(line: 6186, column: 54, scope: !2369)
!2379 = !DILocation(line: 6186, column: 81, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !21, line: 6186, column: 81)
!2381 = distinct !DILexicalBlock(scope: !2377, file: !21, line: 6186, column: 81)
!2382 = !DILocation(line: 6186, column: 81, scope: !2381)
!2383 = !DILocation(line: 6190, column: 3, scope: !2369)
!2384 = !DILocation(line: 6191, column: 3, scope: !2369)
!2385 = !DILocation(line: 6193, column: 3, scope: !2369)
!2386 = !DILocation(line: 6194, column: 1, scope: !2369)
!2387 = distinct !DISubprogram(name: "__Pyx_modinit_global_init_code", scope: !21, file: !21, line: 6223, type: !637, scopeLine: 6223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2388 = !DILocation(line: 6228, column: 3, scope: !2387)
!2389 = distinct !DISubprogram(name: "__Pyx_modinit_variable_export_code", scope: !21, file: !21, line: 6231, type: !637, scopeLine: 6231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2390 = !DILocation(line: 6236, column: 3, scope: !2389)
!2391 = distinct !DISubprogram(name: "__Pyx_modinit_function_export_code", scope: !21, file: !21, line: 6239, type: !637, scopeLine: 6239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2392 = !DILocation(line: 6244, column: 3, scope: !2391)
!2393 = distinct !DISubprogram(name: "__Pyx_modinit_type_init_code", scope: !21, file: !21, line: 6247, type: !637, scopeLine: 6247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2394)
!2394 = !{!2395, !2396, !2397, !2398}
!2395 = !DILocalVariable(name: "__pyx_lineno", scope: !2393, file: !21, line: 6249, type: !7)
!2396 = !DILocalVariable(name: "__pyx_filename", scope: !2393, file: !21, line: 6250, type: !54)
!2397 = !DILocalVariable(name: "__pyx_clineno", scope: !2393, file: !21, line: 6251, type: !7)
!2398 = !DILabel(scope: !2393, name: "__pyx_L1_error", file: !21, line: 6284)
!2399 = !DILocation(line: 6249, column: 3, scope: !2393)
!2400 = !DILocation(line: 6249, column: 7, scope: !2393)
!2401 = !DILocation(line: 6250, column: 3, scope: !2393)
!2402 = !DILocation(line: 6250, column: 15, scope: !2393)
!2403 = !DILocation(line: 6251, column: 3, scope: !2393)
!2404 = !DILocation(line: 6251, column: 7, scope: !2393)
!2405 = !DILocation(line: 6254, column: 52, scope: !2393)
!2406 = !DILocation(line: 6255, column: 58, scope: !2393)
!2407 = !{!2408, !1462, i64 0}
!2408 = !{!"__pyx_vtabstruct_6Cython_7Runtime_8refnanny_Context", !1462, i64 0, !1462, i64 8, !1462, i64 16}
!2409 = !DILocation(line: 6256, column: 58, scope: !2393)
!2410 = !{!2408, !1462, i64 8}
!2411 = !DILocation(line: 6257, column: 55, scope: !2393)
!2412 = !{!2408, !1462, i64 16}
!2413 = !DILocation(line: 6262, column: 3, scope: !2393)
!2414 = !DILocation(line: 6262, column: 50, scope: !2393)
!2415 = !{!1599, !1462, i64 56}
!2416 = !DILocation(line: 6267, column: 26, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2393, file: !21, line: 6267, column: 7)
!2418 = !DILocation(line: 6267, column: 7, scope: !2417)
!2419 = !DILocation(line: 6267, column: 74, scope: !2417)
!2420 = !DILocation(line: 6267, column: 7, scope: !2393)
!2421 = !DILocation(line: 6267, column: 79, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2423, file: !21, line: 6267, column: 79)
!2423 = distinct !DILexicalBlock(scope: !2417, file: !21, line: 6267, column: 79)
!2424 = !DILocation(line: 6267, column: 79, scope: !2423)
!2425 = !DILocation(line: 6273, column: 62, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2393, file: !21, line: 6273, column: 7)
!2427 = !{!1897, !1837, i64 288}
!2428 = !{!1897, !1462, i64 144}
!2429 = !DILocation(line: 0, scope: !2426)
!2430 = !DILocation(line: 6273, column: 7, scope: !2393)
!2431 = !DILocation(line: 6274, column: 5, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2426, file: !21, line: 6273, column: 224)
!2433 = !DILocation(line: 6274, column: 53, scope: !2432)
!2434 = !DILocation(line: 6274, column: 65, scope: !2432)
!2435 = !DILocation(line: 6275, column: 3, scope: !2432)
!2436 = !DILocation(line: 6277, column: 23, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2393, file: !21, line: 6277, column: 7)
!2438 = !DILocation(line: 6277, column: 71, scope: !2437)
!2439 = !DILocation(line: 6277, column: 7, scope: !2437)
!2440 = !DILocation(line: 6277, column: 121, scope: !2437)
!2441 = !DILocation(line: 6277, column: 7, scope: !2393)
!2442 = !DILocation(line: 6277, column: 126, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2444, file: !21, line: 6277, column: 126)
!2444 = distinct !DILexicalBlock(scope: !2437, file: !21, line: 6277, column: 126)
!2445 = !DILocation(line: 6277, column: 126, scope: !2444)
!2446 = !DILocation(line: 6279, column: 26, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2393, file: !21, line: 6279, column: 7)
!2448 = !DILocation(line: 6279, column: 7, scope: !2447)
!2449 = !DILocation(line: 6279, column: 74, scope: !2447)
!2450 = !DILocation(line: 6279, column: 7, scope: !2393)
!2451 = !DILocation(line: 6279, column: 79, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !21, line: 6279, column: 79)
!2453 = distinct !DILexicalBlock(scope: !2447, file: !21, line: 6279, column: 79)
!2454 = !DILocation(line: 6279, column: 79, scope: !2453)
!2455 = !DILocation(line: 6281, column: 24, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2393, file: !21, line: 6281, column: 7)
!2457 = !DILocation(line: 6281, column: 33, scope: !2456)
!2458 = !{!1599, !1462, i64 72}
!2459 = !DILocation(line: 6281, column: 65, scope: !2456)
!2460 = !DILocation(line: 6281, column: 7, scope: !2456)
!2461 = !DILocation(line: 6281, column: 113, scope: !2456)
!2462 = !DILocation(line: 6281, column: 7, scope: !2393)
!2463 = !DILocation(line: 6281, column: 118, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !21, line: 6281, column: 118)
!2465 = distinct !DILexicalBlock(scope: !2456, file: !21, line: 6281, column: 118)
!2466 = !DILocation(line: 6281, column: 118, scope: !2465)
!2467 = !DILocation(line: 6283, column: 3, scope: !2393)
!2468 = !DILocation(line: 6284, column: 3, scope: !2393)
!2469 = !DILocation(line: 6286, column: 3, scope: !2393)
!2470 = !DILocation(line: 6287, column: 1, scope: !2393)
!2471 = distinct !DISubprogram(name: "__Pyx_modinit_type_import_code", scope: !21, file: !21, line: 6289, type: !637, scopeLine: 6289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477}
!2473 = !DILocalVariable(name: "__pyx_t_1", scope: !2471, file: !21, line: 6291, type: !28)
!2474 = !DILocalVariable(name: "__pyx_lineno", scope: !2471, file: !21, line: 6292, type: !7)
!2475 = !DILocalVariable(name: "__pyx_filename", scope: !2471, file: !21, line: 6293, type: !54)
!2476 = !DILocalVariable(name: "__pyx_clineno", scope: !2471, file: !21, line: 6294, type: !7)
!2477 = !DILabel(scope: !2471, name: "__pyx_L1_error", file: !21, line: 6311)
!2478 = !DILocation(line: 6291, column: 3, scope: !2471)
!2479 = !DILocation(line: 6291, column: 13, scope: !2471)
!2480 = !DILocation(line: 6292, column: 3, scope: !2471)
!2481 = !DILocation(line: 6292, column: 7, scope: !2471)
!2482 = !DILocation(line: 6293, column: 3, scope: !2471)
!2483 = !DILocation(line: 6293, column: 15, scope: !2471)
!2484 = !DILocation(line: 6294, column: 3, scope: !2471)
!2485 = !DILocation(line: 6294, column: 7, scope: !2471)
!2486 = !DILocation(line: 6297, column: 15, scope: !2471)
!2487 = !DILocation(line: 6297, column: 13, scope: !2471)
!2488 = !DILocation(line: 6297, column: 69, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2471, file: !21, line: 6297, column: 69)
!2490 = !DILocation(line: 6297, column: 69, scope: !2471)
!2491 = !DILocation(line: 6297, column: 91, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2493, file: !21, line: 6297, column: 91)
!2493 = distinct !DILexicalBlock(scope: !2489, file: !21, line: 6297, column: 91)
!2494 = !DILocation(line: 6297, column: 91, scope: !2493)
!2495 = !DILocation(line: 6299, column: 60, scope: !2471)
!2496 = !DILocation(line: 6299, column: 37, scope: !2471)
!2497 = !DILocation(line: 6299, column: 3, scope: !2471)
!2498 = !DILocation(line: 6299, column: 35, scope: !2471)
!2499 = !{!1599, !1462, i64 48}
!2500 = !DILocation(line: 6307, column: 48, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2471, file: !21, line: 6307, column: 47)
!2502 = !DILocation(line: 6307, column: 47, scope: !2471)
!2503 = !DILocation(line: 6307, column: 81, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2505, file: !21, line: 6307, column: 81)
!2505 = distinct !DILexicalBlock(scope: !2501, file: !21, line: 6307, column: 81)
!2506 = !DILocation(line: 6307, column: 81, scope: !2505)
!2507 = !DILocation(line: 6308, column: 3, scope: !2471)
!2508 = !DILocation(line: 6308, column: 38, scope: !2471)
!2509 = !DILocation(line: 6310, column: 3, scope: !2471)
!2510 = !DILocation(line: 6311, column: 3, scope: !2471)
!2511 = !DILocation(line: 6312, column: 3, scope: !2471)
!2512 = !DILocation(line: 6314, column: 3, scope: !2471)
!2513 = !DILocation(line: 6315, column: 1, scope: !2471)
!2514 = distinct !DISubprogram(name: "__Pyx_modinit_variable_import_code", scope: !21, file: !21, line: 6317, type: !637, scopeLine: 6317, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2515 = !DILocation(line: 6322, column: 3, scope: !2514)
!2516 = distinct !DISubprogram(name: "__Pyx_modinit_function_import_code", scope: !21, file: !21, line: 6325, type: !637, scopeLine: 6325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2517 = !DILocation(line: 6330, column: 3, scope: !2516)
!2518 = !DISubprogram(name: "PyDict_SetItem", scope: !2187, file: !2187, line: 24, type: !191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2519 = !DISubprogram(name: "PyList_New", scope: !2520, file: !2520, line: 28, type: !2264, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2520 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/listobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "25d04b0feb81d42e208a0c9a8e628e6b")
!2521 = distinct !DISubprogram(name: "__Pyx_PyObject_Call", scope: !21, file: !21, line: 7173, type: !114, scopeLine: 7173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2522)
!2522 = !{!2523, !2524, !2525, !2526, !2527}
!2523 = !DILocalVariable(name: "func", arg: 1, scope: !2521, file: !21, line: 7173, type: !28)
!2524 = !DILocalVariable(name: "arg", arg: 2, scope: !2521, file: !21, line: 7173, type: !28)
!2525 = !DILocalVariable(name: "kw", arg: 3, scope: !2521, file: !21, line: 7173, type: !28)
!2526 = !DILocalVariable(name: "result", scope: !2521, file: !21, line: 7174, type: !28)
!2527 = !DILocalVariable(name: "call", scope: !2521, file: !21, line: 7175, type: !112)
!2528 = !DILocation(line: 7173, column: 62, scope: !2521)
!2529 = !DILocation(line: 7173, column: 78, scope: !2521)
!2530 = !DILocation(line: 7173, column: 93, scope: !2521)
!2531 = !DILocation(line: 7174, column: 5, scope: !2521)
!2532 = !DILocation(line: 7174, column: 15, scope: !2521)
!2533 = !DILocation(line: 7175, column: 5, scope: !2521)
!2534 = !DILocation(line: 7175, column: 17, scope: !2521)
!2535 = !DILocation(line: 7175, column: 24, scope: !2521)
!2536 = !DILocation(line: 7175, column: 39, scope: !2521)
!2537 = !{!1897, !1462, i64 128}
!2538 = !DILocation(line: 7176, column: 9, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2521, file: !21, line: 7176, column: 9)
!2540 = !DILocation(line: 7176, column: 9, scope: !2521)
!2541 = !DILocation(line: 7177, column: 30, scope: !2539)
!2542 = !DILocation(line: 7177, column: 36, scope: !2539)
!2543 = !DILocation(line: 7177, column: 41, scope: !2539)
!2544 = !DILocation(line: 7177, column: 16, scope: !2539)
!2545 = !DILocation(line: 7177, column: 9, scope: !2539)
!2546 = !DILocation(line: 7178, column: 9, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2521, file: !21, line: 7178, column: 9)
!2548 = !DILocation(line: 7178, column: 9, scope: !2521)
!2549 = !DILocation(line: 7179, column: 9, scope: !2547)
!2550 = !DILocation(line: 7180, column: 16, scope: !2521)
!2551 = !DILocation(line: 7180, column: 22, scope: !2521)
!2552 = !DILocation(line: 7180, column: 28, scope: !2521)
!2553 = !DILocation(line: 7180, column: 33, scope: !2521)
!2554 = !DILocation(line: 7180, column: 14, scope: !2521)
!2555 = !DILocation(line: 7180, column: 12, scope: !2521)
!2556 = !DILocation(line: 7181, column: 5, scope: !2521)
!2557 = !DILocation(line: 7182, column: 9, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2521, file: !21, line: 7182, column: 9)
!2559 = !DILocation(line: 7182, column: 27, scope: !2558)
!2560 = !DILocation(line: 7182, column: 30, scope: !2558)
!2561 = !DILocation(line: 7182, column: 9, scope: !2521)
!2562 = !DILocation(line: 7184, column: 13, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2558, file: !21, line: 7182, column: 59)
!2564 = !DILocation(line: 7183, column: 9, scope: !2563)
!2565 = !DILocation(line: 7186, column: 5, scope: !2563)
!2566 = !DILocation(line: 7187, column: 12, scope: !2521)
!2567 = !DILocation(line: 7187, column: 5, scope: !2521)
!2568 = !DILocation(line: 7188, column: 1, scope: !2521)
!2569 = distinct !DISubprogram(name: "Py_IS_TYPE", scope: !6, file: !6, line: 149, type: !2570, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2572)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!7, !28, !42}
!2572 = !{!2573, !2574}
!2573 = !DILocalVariable(name: "ob", arg: 1, scope: !2569, file: !6, line: 149, type: !28)
!2574 = !DILocalVariable(name: "type", arg: 2, scope: !2569, file: !6, line: 149, type: !42)
!2575 = !DILocation(line: 149, column: 40, scope: !2569)
!2576 = !DILocation(line: 149, column: 58, scope: !2569)
!2577 = !DILocation(line: 150, column: 12, scope: !2569)
!2578 = !DILocation(line: 150, column: 27, scope: !2569)
!2579 = !DILocation(line: 150, column: 24, scope: !2569)
!2580 = !DILocation(line: 150, column: 5, scope: !2569)
!2581 = distinct !DISubprogram(name: "Py_SIZE", scope: !6, file: !6, line: 140, type: !158, scopeLine: 140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2582)
!2582 = !{!2583, !2584}
!2583 = !DILocalVariable(name: "ob", arg: 1, scope: !2581, file: !6, line: 140, type: !28)
!2584 = !DILocalVariable(name: "var_ob", scope: !2581, file: !6, line: 141, type: !458)
!2585 = !DILocation(line: 140, column: 44, scope: !2581)
!2586 = !DILocation(line: 141, column: 5, scope: !2581)
!2587 = !DILocation(line: 141, column: 18, scope: !2581)
!2588 = !DILocation(line: 141, column: 27, scope: !2581)
!2589 = !DILocation(line: 142, column: 12, scope: !2581)
!2590 = !DILocation(line: 142, column: 20, scope: !2581)
!2591 = !{!1870, !1837, i64 16}
!2592 = !DILocation(line: 143, column: 1, scope: !2581)
!2593 = !DILocation(line: 142, column: 5, scope: !2581)
!2594 = distinct !DISubprogram(name: "__Pyx_RaiseTooManyValuesError", scope: !21, file: !21, line: 8211, type: !2595, scopeLine: 8211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2597)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{null, !34}
!2597 = !{!2598}
!2598 = !DILocalVariable(name: "expected", arg: 1, scope: !2594, file: !21, line: 8211, type: !34)
!2599 = !DILocation(line: 8211, column: 68, scope: !2594)
!2600 = !DILocation(line: 8212, column: 18, scope: !2594)
!2601 = !DILocation(line: 8213, column: 86, scope: !2594)
!2602 = !DILocation(line: 8212, column: 5, scope: !2594)
!2603 = !DILocation(line: 8214, column: 1, scope: !2594)
!2604 = distinct !DISubprogram(name: "__Pyx_RaiseNeedMoreValuesError", scope: !21, file: !21, line: 8217, type: !2595, scopeLine: 8217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2605)
!2605 = !{!2606}
!2606 = !DILocalVariable(name: "index", arg: 1, scope: !2604, file: !21, line: 8217, type: !34)
!2607 = !DILocation(line: 8217, column: 69, scope: !2604)
!2608 = !DILocation(line: 8218, column: 18, scope: !2604)
!2609 = !DILocation(line: 8220, column: 18, scope: !2604)
!2610 = !DILocation(line: 8220, column: 26, scope: !2604)
!2611 = !DILocation(line: 8220, column: 32, scope: !2604)
!2612 = !DILocation(line: 8220, column: 25, scope: !2604)
!2613 = !DILocation(line: 8218, column: 5, scope: !2604)
!2614 = !DILocation(line: 8221, column: 1, scope: !2604)
!2615 = !DISubprogram(name: "PyObject_GetIter", scope: !2616, file: !2616, line: 372, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2616 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/abstract.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "c6c7b7821c389c947e1fc710c923c80c")
!2617 = distinct !DISubprogram(name: "Py_TYPE", scope: !6, file: !6, line: 132, type: !2618, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2620)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{!42, !28}
!2620 = !{!2621}
!2621 = !DILocalVariable(name: "ob", arg: 1, scope: !2617, file: !6, line: 132, type: !28)
!2622 = !DILocation(line: 132, column: 47, scope: !2617)
!2623 = !DILocation(line: 133, column: 12, scope: !2617)
!2624 = !DILocation(line: 133, column: 16, scope: !2617)
!2625 = !{!1871, !1462, i64 8}
!2626 = !DILocation(line: 133, column: 5, scope: !2617)
!2627 = distinct !DISubprogram(name: "__Pyx_IternextUnpackEndCheck", scope: !21, file: !21, line: 8238, type: !2628, scopeLine: 8238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2630)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!7, !28, !34}
!2630 = !{!2631, !2632}
!2631 = !DILocalVariable(name: "retval", arg: 1, scope: !2627, file: !21, line: 8238, type: !28)
!2632 = !DILocalVariable(name: "expected", arg: 2, scope: !2627, file: !21, line: 8238, type: !34)
!2633 = !DILocation(line: 8238, column: 51, scope: !2627)
!2634 = !DILocation(line: 8238, column: 70, scope: !2627)
!2635 = !DILocation(line: 8239, column: 9, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2627, file: !21, line: 8239, column: 9)
!2637 = !DILocation(line: 8239, column: 9, scope: !2627)
!2638 = !DILocation(line: 8240, column: 9, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2636, file: !21, line: 8239, column: 27)
!2640 = !DILocation(line: 8241, column: 39, scope: !2639)
!2641 = !DILocation(line: 8241, column: 9, scope: !2639)
!2642 = !DILocation(line: 8242, column: 9, scope: !2639)
!2643 = !DILocation(line: 8244, column: 12, scope: !2627)
!2644 = !DILocation(line: 8244, column: 5, scope: !2627)
!2645 = !DILocation(line: 8245, column: 1, scope: !2627)
!2646 = distinct !DISubprogram(name: "__Pyx_IterFinish", scope: !21, file: !21, line: 8224, type: !637, scopeLine: 8224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2647)
!2647 = !{!2648, !2649}
!2648 = !DILocalVariable(name: "__pyx_tstate", scope: !2646, file: !21, line: 8225, type: !1260)
!2649 = !DILocalVariable(name: "exc_type", scope: !2646, file: !21, line: 8227, type: !28)
!2650 = !DILocation(line: 8225, column: 5, scope: !2646)
!2651 = !DILocation(line: 8226, column: 5, scope: !2646)
!2652 = !DILocation(line: 8227, column: 5, scope: !2646)
!2653 = !DILocation(line: 8227, column: 15, scope: !2646)
!2654 = !DILocation(line: 8227, column: 26, scope: !2646)
!2655 = !{!2053, !1462, i64 96}
!2656 = !DILocation(line: 8228, column: 9, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2646, file: !21, line: 8228, column: 9)
!2658 = !DILocation(line: 8228, column: 9, scope: !2646)
!2659 = !DILocation(line: 8229, column: 13, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !21, line: 8229, column: 13)
!2661 = distinct !DILexicalBlock(scope: !2657, file: !21, line: 8228, column: 29)
!2662 = !DILocation(line: 8229, column: 13, scope: !2661)
!2663 = !DILocation(line: 8230, column: 13, scope: !2660)
!2664 = !DILocation(line: 8231, column: 9, scope: !2661)
!2665 = !DILocation(line: 8232, column: 9, scope: !2661)
!2666 = !DILocation(line: 8234, column: 5, scope: !2646)
!2667 = !DILocation(line: 8235, column: 1, scope: !2646)
!2668 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_INCREF", scope: !21, file: !21, line: 5299, type: !1213, scopeLine: 5299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2669)
!2669 = !{!2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677}
!2670 = !DILocalVariable(name: "__pyx_v_ctx", arg: 1, scope: !2668, file: !21, line: 5299, type: !28)
!2671 = !DILocalVariable(name: "__pyx_v_obj", arg: 2, scope: !2668, file: !21, line: 5299, type: !28)
!2672 = !DILocalVariable(name: "__pyx_v_lineno", arg: 3, scope: !2668, file: !21, line: 5299, type: !34)
!2673 = !DILocalVariable(name: "__pyx_lineno", scope: !2668, file: !21, line: 5300, type: !7)
!2674 = !DILocalVariable(name: "__pyx_filename", scope: !2668, file: !21, line: 5301, type: !54)
!2675 = !DILocalVariable(name: "__pyx_clineno", scope: !2668, file: !21, line: 5302, type: !7)
!2676 = !DILabel(scope: !2668, name: "__pyx_L1_error", file: !21, line: 5341)
!2677 = !DILabel(scope: !2668, name: "__pyx_L0", file: !21, line: 5343)
!2678 = !DILocation(line: 5299, column: 65, scope: !2668)
!2679 = !DILocation(line: 5299, column: 88, scope: !2668)
!2680 = !DILocation(line: 5299, column: 112, scope: !2668)
!2681 = !DILocation(line: 5300, column: 3, scope: !2668)
!2682 = !DILocation(line: 5300, column: 7, scope: !2668)
!2683 = !DILocation(line: 5301, column: 3, scope: !2668)
!2684 = !DILocation(line: 5301, column: 15, scope: !2668)
!2685 = !DILocation(line: 5302, column: 3, scope: !2668)
!2686 = !DILocation(line: 5302, column: 7, scope: !2668)
!2687 = !DILocation(line: 5311, column: 3, scope: !2668)
!2688 = !DILocation(line: 5320, column: 10, scope: !2668)
!2689 = !DILocation(line: 5329, column: 45, scope: !2668)
!2690 = !DILocation(line: 5329, column: 58, scope: !2668)
!2691 = !DILocation(line: 5329, column: 71, scope: !2668)
!2692 = !DILocation(line: 5329, column: 3, scope: !2668)
!2693 = !DILocation(line: 5329, column: 92, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2668, file: !21, line: 5329, column: 92)
!2695 = !DILocation(line: 5329, column: 92, scope: !2668)
!2696 = !DILocation(line: 5329, column: 120, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2698, file: !21, line: 5329, column: 120)
!2698 = distinct !DILexicalBlock(scope: !2694, file: !21, line: 5329, column: 120)
!2699 = !DILocation(line: 5329, column: 120, scope: !2698)
!2700 = !DILocation(line: 5340, column: 3, scope: !2668)
!2701 = !DILocation(line: 5341, column: 3, scope: !2668)
!2702 = !DILocation(line: 5342, column: 56, scope: !2668)
!2703 = !DILocation(line: 5342, column: 71, scope: !2668)
!2704 = !DILocation(line: 5342, column: 85, scope: !2668)
!2705 = !DILocation(line: 5342, column: 3, scope: !2668)
!2706 = !DILocation(line: 5343, column: 3, scope: !2668)
!2707 = !DILocation(line: 5344, column: 1, scope: !2668)
!2708 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_DECREF", scope: !21, file: !21, line: 5354, type: !1213, scopeLine: 5354, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2709)
!2709 = !{!2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718}
!2710 = !DILocalVariable(name: "__pyx_v_ctx", arg: 1, scope: !2708, file: !21, line: 5354, type: !28)
!2711 = !DILocalVariable(name: "__pyx_v_obj", arg: 2, scope: !2708, file: !21, line: 5354, type: !28)
!2712 = !DILocalVariable(name: "__pyx_v_lineno", arg: 3, scope: !2708, file: !21, line: 5354, type: !34)
!2713 = !DILocalVariable(name: "__pyx_t_1", scope: !2708, file: !21, line: 5355, type: !7)
!2714 = !DILocalVariable(name: "__pyx_lineno", scope: !2708, file: !21, line: 5356, type: !7)
!2715 = !DILocalVariable(name: "__pyx_filename", scope: !2708, file: !21, line: 5357, type: !54)
!2716 = !DILocalVariable(name: "__pyx_clineno", scope: !2708, file: !21, line: 5358, type: !7)
!2717 = !DILabel(scope: !2708, name: "__pyx_L1_error", file: !21, line: 5407)
!2718 = !DILabel(scope: !2708, name: "__pyx_L0", file: !21, line: 5409)
!2719 = !DILocation(line: 5354, column: 65, scope: !2708)
!2720 = !DILocation(line: 5354, column: 88, scope: !2708)
!2721 = !DILocation(line: 5354, column: 112, scope: !2708)
!2722 = !DILocation(line: 5355, column: 3, scope: !2708)
!2723 = !DILocation(line: 5355, column: 7, scope: !2708)
!2724 = !DILocation(line: 5356, column: 3, scope: !2708)
!2725 = !DILocation(line: 5356, column: 7, scope: !2708)
!2726 = !DILocation(line: 5357, column: 3, scope: !2708)
!2727 = !DILocation(line: 5357, column: 15, scope: !2708)
!2728 = !DILocation(line: 5358, column: 3, scope: !2708)
!2729 = !DILocation(line: 5358, column: 7, scope: !2708)
!2730 = !DILocation(line: 5367, column: 69, scope: !2708)
!2731 = !DILocation(line: 5367, column: 82, scope: !2708)
!2732 = !DILocation(line: 5367, column: 95, scope: !2708)
!2733 = !DILocation(line: 5367, column: 15, scope: !2708)
!2734 = !DILocation(line: 5367, column: 13, scope: !2708)
!2735 = !DILocation(line: 5367, column: 116, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2708, file: !21, line: 5367, column: 116)
!2737 = !DILocation(line: 0, scope: !2736)
!2738 = !DILocation(line: 5367, column: 116, scope: !2708)
!2739 = !DILocation(line: 5367, column: 170, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2741, file: !21, line: 5367, column: 170)
!2741 = distinct !DILexicalBlock(scope: !2736, file: !21, line: 5367, column: 170)
!2742 = !DILocation(line: 5367, column: 170, scope: !2741)
!2743 = !DILocation(line: 5368, column: 7, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2708, file: !21, line: 5368, column: 7)
!2745 = !DILocation(line: 5368, column: 7, scope: !2708)
!2746 = !DILocation(line: 5377, column: 5, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2744, file: !21, line: 5368, column: 18)
!2748 = !DILocation(line: 5386, column: 3, scope: !2747)
!2749 = !DILocation(line: 5395, column: 10, scope: !2708)
!2750 = !DILocation(line: 5406, column: 3, scope: !2708)
!2751 = !DILocation(line: 5407, column: 3, scope: !2708)
!2752 = !DILocation(line: 5408, column: 56, scope: !2708)
!2753 = !DILocation(line: 5408, column: 71, scope: !2708)
!2754 = !DILocation(line: 5408, column: 85, scope: !2708)
!2755 = !DILocation(line: 5408, column: 3, scope: !2708)
!2756 = !DILocation(line: 5409, column: 3, scope: !2708)
!2757 = !DILocation(line: 5410, column: 1, scope: !2708)
!2758 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_GOTREF", scope: !21, file: !21, line: 4728, type: !1213, scopeLine: 4728, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2759)
!2759 = !{!2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2783, !2784, !2785, !2786, !2787, !2789, !2791, !2792}
!2760 = !DILocalVariable(name: "__pyx_v_ctx", arg: 1, scope: !2758, file: !21, line: 4728, type: !28)
!2761 = !DILocalVariable(name: "__pyx_v_p_obj", arg: 2, scope: !2758, file: !21, line: 4728, type: !28)
!2762 = !DILocalVariable(name: "__pyx_v_lineno", arg: 3, scope: !2758, file: !21, line: 4728, type: !34)
!2763 = !DILocalVariable(name: "__pyx_v_type", scope: !2758, file: !21, line: 4729, type: !28)
!2764 = !DILocalVariable(name: "__pyx_v_value", scope: !2758, file: !21, line: 4730, type: !28)
!2765 = !DILocalVariable(name: "__pyx_v_tb", scope: !2758, file: !21, line: 4731, type: !28)
!2766 = !DILocalVariable(name: "__pyx_t_1", scope: !2758, file: !21, line: 4733, type: !7)
!2767 = !DILocalVariable(name: "__pyx_t_2", scope: !2758, file: !21, line: 4734, type: !28)
!2768 = !DILocalVariable(name: "__pyx_t_3", scope: !2758, file: !21, line: 4735, type: !28)
!2769 = !DILocalVariable(name: "__pyx_t_4", scope: !2758, file: !21, line: 4736, type: !28)
!2770 = !DILocalVariable(name: "__pyx_t_5", scope: !2758, file: !21, line: 4737, type: !28)
!2771 = !DILocalVariable(name: "__pyx_t_6", scope: !2758, file: !21, line: 4738, type: !28)
!2772 = !DILocalVariable(name: "__pyx_t_7", scope: !2758, file: !21, line: 4739, type: !28)
!2773 = !DILocalVariable(name: "__pyx_t_8", scope: !2758, file: !21, line: 4740, type: !28)
!2774 = !DILocalVariable(name: "__pyx_t_9", scope: !2758, file: !21, line: 4741, type: !28)
!2775 = !DILocalVariable(name: "__pyx_t_10", scope: !2758, file: !21, line: 4742, type: !28)
!2776 = !DILocalVariable(name: "__pyx_t_11", scope: !2758, file: !21, line: 4743, type: !28)
!2777 = !DILocalVariable(name: "__pyx_lineno", scope: !2758, file: !21, line: 4744, type: !7)
!2778 = !DILocalVariable(name: "__pyx_filename", scope: !2758, file: !21, line: 4745, type: !54)
!2779 = !DILocalVariable(name: "__pyx_clineno", scope: !2758, file: !21, line: 4746, type: !7)
!2780 = !DILocalVariable(name: "__pyx_tstate", scope: !2781, file: !21, line: 4790, type: !1260)
!2781 = distinct !DILexicalBlock(scope: !2782, file: !21, line: 4789, column: 5)
!2782 = distinct !DILexicalBlock(scope: !2758, file: !21, line: 4788, column: 12)
!2783 = !DILabel(scope: !2781, name: "__pyx_L7_error", file: !21, line: 4838)
!2784 = !DILabel(scope: !2781, name: "__pyx_L9_except_error", file: !21, line: 4880)
!2785 = !DILabel(scope: !2781, name: "__pyx_L8_exception_handled", file: !21, line: 4886)
!2786 = !DILabel(scope: !2781, name: "__pyx_L12_try_end", file: !21, line: 4891)
!2787 = !DILabel(scope: !2788, name: "__pyx_L5_error", file: !21, line: 4915)
!2788 = distinct !DILexicalBlock(scope: !2758, file: !21, line: 4902, column: 16)
!2789 = !DILocalVariable(name: "__pyx_tstate", scope: !2790, file: !21, line: 4917, type: !1260)
!2790 = distinct !DILexicalBlock(scope: !2788, file: !21, line: 4916, column: 24)
!2791 = !DILabel(scope: !2790, name: "__pyx_L15_return", file: !21, line: 4952)
!2792 = !DILabel(scope: !2758, name: "__pyx_L0", file: !21, line: 4976)
!2793 = !DILocation(line: 4728, column: 65, scope: !2758)
!2794 = !DILocation(line: 4728, column: 88, scope: !2758)
!2795 = !DILocation(line: 4728, column: 114, scope: !2758)
!2796 = !DILocation(line: 4729, column: 3, scope: !2758)
!2797 = !DILocation(line: 4729, column: 13, scope: !2758)
!2798 = !DILocation(line: 4730, column: 3, scope: !2758)
!2799 = !DILocation(line: 4730, column: 13, scope: !2758)
!2800 = !DILocation(line: 4731, column: 3, scope: !2758)
!2801 = !DILocation(line: 4731, column: 13, scope: !2758)
!2802 = !DILocation(line: 4733, column: 3, scope: !2758)
!2803 = !DILocation(line: 4733, column: 7, scope: !2758)
!2804 = !DILocation(line: 4734, column: 3, scope: !2758)
!2805 = !DILocation(line: 4734, column: 13, scope: !2758)
!2806 = !DILocation(line: 4735, column: 3, scope: !2758)
!2807 = !DILocation(line: 4735, column: 13, scope: !2758)
!2808 = !DILocation(line: 4736, column: 3, scope: !2758)
!2809 = !DILocation(line: 4736, column: 13, scope: !2758)
!2810 = !DILocation(line: 4737, column: 3, scope: !2758)
!2811 = !DILocation(line: 4737, column: 13, scope: !2758)
!2812 = !DILocation(line: 4738, column: 3, scope: !2758)
!2813 = !DILocation(line: 4738, column: 13, scope: !2758)
!2814 = !DILocation(line: 4739, column: 3, scope: !2758)
!2815 = !DILocation(line: 4739, column: 13, scope: !2758)
!2816 = !DILocation(line: 4740, column: 3, scope: !2758)
!2817 = !DILocation(line: 4740, column: 13, scope: !2758)
!2818 = !DILocation(line: 4741, column: 3, scope: !2758)
!2819 = !DILocation(line: 4741, column: 13, scope: !2758)
!2820 = !DILocation(line: 4742, column: 3, scope: !2758)
!2821 = !DILocation(line: 4742, column: 13, scope: !2758)
!2822 = !DILocation(line: 4743, column: 3, scope: !2758)
!2823 = !DILocation(line: 4743, column: 13, scope: !2758)
!2824 = !DILocation(line: 4744, column: 3, scope: !2758)
!2825 = !DILocation(line: 4744, column: 7, scope: !2758)
!2826 = !DILocation(line: 4745, column: 3, scope: !2758)
!2827 = !DILocation(line: 4745, column: 15, scope: !2758)
!2828 = !DILocation(line: 4746, column: 3, scope: !2758)
!2829 = !DILocation(line: 4746, column: 7, scope: !2758)
!2830 = !DILocation(line: 4756, column: 16, scope: !2758)
!2831 = !DILocation(line: 4756, column: 28, scope: !2758)
!2832 = !DILocation(line: 4756, column: 13, scope: !2758)
!2833 = !DILocation(line: 4757, column: 7, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2758, file: !21, line: 4757, column: 7)
!2835 = !DILocation(line: 4757, column: 7, scope: !2758)
!2836 = !DILocation(line: 4758, column: 5, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2834, file: !21, line: 4757, column: 18)
!2838 = !DILocation(line: 4768, column: 16, scope: !2758)
!2839 = !DILocation(line: 4769, column: 17, scope: !2758)
!2840 = !DILocation(line: 4770, column: 14, scope: !2758)
!2841 = !DILocation(line: 4779, column: 3, scope: !2758)
!2842 = !DILocation(line: 4790, column: 7, scope: !2781)
!2843 = !DILocation(line: 4791, column: 7, scope: !2781)
!2844 = !DILocation(line: 4792, column: 7, scope: !2781)
!2845 = !DILocation(line: 4805, column: 22, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2781, file: !21, line: 4796, column: 16)
!2847 = !DILocation(line: 4805, column: 36, scope: !2846)
!2848 = !DILocation(line: 4805, column: 19, scope: !2846)
!2849 = !DILocation(line: 4806, column: 13, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2846, file: !21, line: 4806, column: 13)
!2851 = !DILocation(line: 4806, column: 13, scope: !2846)
!2852 = !DILocation(line: 4807, column: 11, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2850, file: !21, line: 4806, column: 24)
!2854 = !DILocation(line: 4808, column: 36, scope: !2853)
!2855 = !DILocation(line: 4808, column: 21, scope: !2853)
!2856 = !DILocation(line: 4809, column: 9, scope: !2853)
!2857 = !DILocation(line: 4810, column: 11, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2850, file: !21, line: 4809, column: 16)
!2859 = !DILocation(line: 4811, column: 21, scope: !2858)
!2860 = !DILocation(line: 4821, column: 128, scope: !2846)
!2861 = !DILocation(line: 4821, column: 142, scope: !2846)
!2862 = !DILocation(line: 4821, column: 153, scope: !2846)
!2863 = !DILocation(line: 4821, column: 170, scope: !2846)
!2864 = !DILocation(line: 4821, column: 184, scope: !2846)
!2865 = !DILocation(line: 4821, column: 21, scope: !2846)
!2866 = !DILocation(line: 4821, column: 19, scope: !2846)
!2867 = !DILocation(line: 4821, column: 199, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2846, file: !21, line: 4821, column: 199)
!2869 = !DILocation(line: 4821, column: 199, scope: !2846)
!2870 = !DILocation(line: 4821, column: 221, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2872, file: !21, line: 4821, column: 221)
!2872 = distinct !DILexicalBlock(scope: !2868, file: !21, line: 4821, column: 221)
!2873 = !DILocation(line: 4821, column: 221, scope: !2872)
!2874 = !DILocation(line: 4823, column: 9, scope: !2846)
!2875 = !DILocation(line: 4823, column: 44, scope: !2846)
!2876 = !DILocation(line: 4824, column: 9, scope: !2846)
!2877 = !DILocation(line: 4824, column: 44, scope: !2846)
!2878 = !DILocation(line: 4834, column: 7, scope: !2781)
!2879 = !DILocation(line: 4834, column: 43, scope: !2781)
!2880 = !DILocation(line: 4835, column: 7, scope: !2781)
!2881 = !DILocation(line: 4835, column: 43, scope: !2781)
!2882 = !DILocation(line: 4836, column: 7, scope: !2781)
!2883 = !DILocation(line: 4836, column: 43, scope: !2781)
!2884 = !DILocation(line: 4837, column: 7, scope: !2781)
!2885 = !DILocation(line: 4838, column: 7, scope: !2781)
!2886 = !DILocation(line: 4839, column: 7, scope: !2781)
!2887 = !DILocation(line: 4839, column: 43, scope: !2781)
!2888 = !DILocation(line: 4840, column: 7, scope: !2781)
!2889 = !DILocation(line: 4840, column: 43, scope: !2781)
!2890 = !DILocation(line: 4850, column: 62, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2781, file: !21, line: 4849, column: 19)
!2892 = !DILocation(line: 4850, column: 77, scope: !2891)
!2893 = !DILocation(line: 4850, column: 91, scope: !2891)
!2894 = !DILocation(line: 4850, column: 9, scope: !2891)
!2895 = !DILocation(line: 4851, column: 13, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2891, file: !21, line: 4851, column: 13)
!2897 = !DILocation(line: 4851, column: 68, scope: !2896)
!2898 = !DILocation(line: 4851, column: 13, scope: !2891)
!2899 = !DILocation(line: 4851, column: 73, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2901, file: !21, line: 4851, column: 73)
!2901 = distinct !DILexicalBlock(scope: !2896, file: !21, line: 4851, column: 73)
!2902 = !DILocation(line: 4851, column: 73, scope: !2901)
!2903 = !DILocation(line: 4863, column: 77, scope: !2891)
!2904 = !DILocation(line: 4863, column: 91, scope: !2891)
!2905 = !{!2906, !1462, i64 32}
!2906 = !{!"__pyx_obj_6Cython_7Runtime_8refnanny_Context", !1871, i64 0, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40, !1462, i64 48, !1837, i64 56}
!2907 = !DILocation(line: 4863, column: 19, scope: !2891)
!2908 = !DILocation(line: 4864, column: 9, scope: !2891)
!2909 = !DILocation(line: 4865, column: 62, scope: !2891)
!2910 = !DILocation(line: 4865, column: 129, scope: !2891)
!2911 = !DILocation(line: 4865, column: 143, scope: !2891)
!2912 = !{!2906, !1837, i64 56}
!2913 = !DILocation(line: 4865, column: 9, scope: !2891)
!2914 = !DILocation(line: 4865, column: 161, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2891, file: !21, line: 4865, column: 161)
!2916 = !DILocation(line: 4865, column: 161, scope: !2891)
!2917 = !DILocation(line: 4865, column: 189, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2919, file: !21, line: 4865, column: 189)
!2919 = distinct !DILexicalBlock(scope: !2915, file: !21, line: 4865, column: 189)
!2920 = !DILocation(line: 4865, column: 189, scope: !2919)
!2921 = !DILocation(line: 4866, column: 9, scope: !2891)
!2922 = !DILocation(line: 4866, column: 44, scope: !2891)
!2923 = !DILocation(line: 4867, column: 9, scope: !2891)
!2924 = !DILocation(line: 4867, column: 45, scope: !2891)
!2925 = !DILocation(line: 4868, column: 9, scope: !2891)
!2926 = !DILocation(line: 4868, column: 45, scope: !2891)
!2927 = !DILocation(line: 4869, column: 9, scope: !2891)
!2928 = !DILocation(line: 4869, column: 45, scope: !2891)
!2929 = !DILocation(line: 4870, column: 9, scope: !2891)
!2930 = !DILocation(line: 4880, column: 7, scope: !2781)
!2931 = !DILocation(line: 4884, column: 7, scope: !2781)
!2932 = !DILocation(line: 4885, column: 7, scope: !2781)
!2933 = !DILocation(line: 4886, column: 7, scope: !2781)
!2934 = !DILocation(line: 4890, column: 7, scope: !2781)
!2935 = !DILocation(line: 4891, column: 7, scope: !2781)
!2936 = !DILocation(line: 4892, column: 5, scope: !2782)
!2937 = !DILocation(line: 4904, column: 21, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2788, file: !21, line: 4903, column: 21)
!2939 = !DILocation(line: 4904, column: 35, scope: !2938)
!2940 = !DILocation(line: 4904, column: 50, scope: !2938)
!2941 = !DILocation(line: 4904, column: 7, scope: !2938)
!2942 = !DILocation(line: 4913, column: 7, scope: !2938)
!2943 = !DILocation(line: 4915, column: 5, scope: !2788)
!2944 = !DILocation(line: 4917, column: 7, scope: !2790)
!2945 = !DILocation(line: 4918, column: 7, scope: !2790)
!2946 = !DILocation(line: 4919, column: 17, scope: !2790)
!2947 = !DILocation(line: 4919, column: 32, scope: !2790)
!2948 = !DILocation(line: 4919, column: 47, scope: !2790)
!2949 = !DILocation(line: 4919, column: 62, scope: !2790)
!2950 = !DILocation(line: 4919, column: 78, scope: !2790)
!2951 = !DILocation(line: 4919, column: 94, scope: !2790)
!2952 = !DILocation(line: 4920, column: 7, scope: !2790)
!2953 = !DILocation(line: 4920, column: 43, scope: !2790)
!2954 = !DILocation(line: 4921, column: 7, scope: !2790)
!2955 = !DILocation(line: 4921, column: 43, scope: !2790)
!2956 = !DILocation(line: 4922, column: 7, scope: !2790)
!2957 = !DILocation(line: 4922, column: 43, scope: !2790)
!2958 = !DILocation(line: 4923, column: 7, scope: !2790)
!2959 = !DILocation(line: 4923, column: 43, scope: !2790)
!2960 = !DILocation(line: 4924, column: 34, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2790, file: !21, line: 4924, column: 11)
!2962 = !DILocation(line: 4925, column: 37, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2790, file: !21, line: 4925, column: 11)
!2964 = !DILocation(line: 4925, column: 11, scope: !2790)
!2965 = !DILocation(line: 4925, column: 107, scope: !2963)
!2966 = !DILocation(line: 4941, column: 23, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2790, file: !21, line: 4932, column: 7)
!2968 = !DILocation(line: 4941, column: 37, scope: !2967)
!2969 = !DILocation(line: 4941, column: 52, scope: !2967)
!2970 = !DILocation(line: 4941, column: 9, scope: !2967)
!2971 = !DILocation(line: 4950, column: 9, scope: !2967)
!2972 = !DILocation(line: 4952, column: 7, scope: !2790)
!2973 = !DILocation(line: 4957, column: 9, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2975, file: !21, line: 4953, column: 34)
!2975 = distinct !DILexicalBlock(scope: !2790, file: !21, line: 4953, column: 11)
!2976 = !DILocation(line: 4959, column: 7, scope: !2790)
!2977 = !DILocation(line: 4959, column: 43, scope: !2790)
!2978 = !DILocation(line: 4960, column: 7, scope: !2790)
!2979 = !DILocation(line: 4960, column: 43, scope: !2790)
!2980 = !DILocation(line: 4961, column: 7, scope: !2790)
!2981 = !DILocation(line: 4961, column: 43, scope: !2790)
!2982 = !DILocation(line: 4962, column: 17, scope: !2790)
!2983 = !DILocation(line: 4962, column: 33, scope: !2790)
!2984 = !DILocation(line: 4962, column: 49, scope: !2790)
!2985 = !DILocation(line: 4964, column: 5, scope: !2788)
!2986 = !DILocation(line: 4976, column: 3, scope: !2758)
!2987 = !DILocation(line: 4978, column: 1, scope: !2758)
!2988 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_GIVEREF", scope: !21, file: !21, line: 5261, type: !1213, scopeLine: 5261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2989)
!2989 = !{!2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998}
!2990 = !DILocalVariable(name: "__pyx_v_ctx", arg: 1, scope: !2988, file: !21, line: 5261, type: !28)
!2991 = !DILocalVariable(name: "__pyx_v_p_obj", arg: 2, scope: !2988, file: !21, line: 5261, type: !28)
!2992 = !DILocalVariable(name: "__pyx_v_lineno", arg: 3, scope: !2988, file: !21, line: 5261, type: !34)
!2993 = !DILocalVariable(name: "__pyx_t_1", scope: !2988, file: !21, line: 5262, type: !7)
!2994 = !DILocalVariable(name: "__pyx_lineno", scope: !2988, file: !21, line: 5263, type: !7)
!2995 = !DILocalVariable(name: "__pyx_filename", scope: !2988, file: !21, line: 5264, type: !54)
!2996 = !DILocalVariable(name: "__pyx_clineno", scope: !2988, file: !21, line: 5265, type: !7)
!2997 = !DILabel(scope: !2988, name: "__pyx_L1_error", file: !21, line: 5286)
!2998 = !DILabel(scope: !2988, name: "__pyx_L0", file: !21, line: 5288)
!2999 = !DILocation(line: 5261, column: 66, scope: !2988)
!3000 = !DILocation(line: 5261, column: 89, scope: !2988)
!3001 = !DILocation(line: 5261, column: 115, scope: !2988)
!3002 = !DILocation(line: 5262, column: 3, scope: !2988)
!3003 = !DILocation(line: 5262, column: 7, scope: !2988)
!3004 = !DILocation(line: 5263, column: 3, scope: !2988)
!3005 = !DILocation(line: 5263, column: 7, scope: !2988)
!3006 = !DILocation(line: 5264, column: 3, scope: !2988)
!3007 = !DILocation(line: 5264, column: 15, scope: !2988)
!3008 = !DILocation(line: 5265, column: 3, scope: !2988)
!3009 = !DILocation(line: 5265, column: 7, scope: !2988)
!3010 = !DILocation(line: 5274, column: 69, scope: !2988)
!3011 = !DILocation(line: 5274, column: 82, scope: !2988)
!3012 = !DILocation(line: 5274, column: 97, scope: !2988)
!3013 = !DILocation(line: 5274, column: 15, scope: !2988)
!3014 = !DILocation(line: 5274, column: 13, scope: !2988)
!3015 = !DILocation(line: 5274, column: 118, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2988, file: !21, line: 5274, column: 118)
!3017 = !DILocation(line: 0, scope: !3016)
!3018 = !DILocation(line: 5274, column: 118, scope: !2988)
!3019 = !DILocation(line: 5274, column: 172, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !21, line: 5274, column: 172)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !21, line: 5274, column: 172)
!3022 = !DILocation(line: 5274, column: 172, scope: !3021)
!3023 = !DILocation(line: 5285, column: 3, scope: !2988)
!3024 = !DILocation(line: 5286, column: 3, scope: !2988)
!3025 = !DILocation(line: 5287, column: 57, scope: !2988)
!3026 = !DILocation(line: 5287, column: 72, scope: !2988)
!3027 = !DILocation(line: 5287, column: 86, scope: !2988)
!3028 = !DILocation(line: 5287, column: 3, scope: !2988)
!3029 = !DILocation(line: 5288, column: 3, scope: !2988)
!3030 = !DILocation(line: 5289, column: 1, scope: !2988)
!3031 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_SetupContext", scope: !21, file: !21, line: 4455, type: !1220, scopeLine: 4455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3032)
!3032 = !{!3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3057, !3058, !3059, !3060, !3062, !3063, !3064, !3065, !3066, !3067}
!3033 = !DILocalVariable(name: "__pyx_v_funcname", arg: 1, scope: !3031, file: !21, line: 4455, type: !70)
!3034 = !DILocalVariable(name: "__pyx_v_lineno", arg: 2, scope: !3031, file: !21, line: 4455, type: !34)
!3035 = !DILocalVariable(name: "__pyx_v_filename", arg: 3, scope: !3031, file: !21, line: 4455, type: !70)
!3036 = !DILocalVariable(name: "__pyx_v_type", scope: !3031, file: !21, line: 4456, type: !28)
!3037 = !DILocalVariable(name: "__pyx_v_value", scope: !3031, file: !21, line: 4457, type: !28)
!3038 = !DILocalVariable(name: "__pyx_v_tb", scope: !3031, file: !21, line: 4458, type: !28)
!3039 = !DILocalVariable(name: "__pyx_v_result", scope: !3031, file: !21, line: 4459, type: !28)
!3040 = !DILocalVariable(name: "__pyx_v_ctx", scope: !3031, file: !21, line: 4460, type: !364)
!3041 = !DILocalVariable(name: "__pyx_v_e", scope: !3031, file: !21, line: 4461, type: !28)
!3042 = !DILocalVariable(name: "__pyx_r", scope: !3031, file: !21, line: 4462, type: !28)
!3043 = !DILocalVariable(name: "__pyx_t_1", scope: !3031, file: !21, line: 4464, type: !7)
!3044 = !DILocalVariable(name: "__pyx_t_2", scope: !3031, file: !21, line: 4465, type: !28)
!3045 = !DILocalVariable(name: "__pyx_t_3", scope: !3031, file: !21, line: 4466, type: !28)
!3046 = !DILocalVariable(name: "__pyx_t_4", scope: !3031, file: !21, line: 4467, type: !28)
!3047 = !DILocalVariable(name: "__pyx_t_5", scope: !3031, file: !21, line: 4468, type: !28)
!3048 = !DILocalVariable(name: "__pyx_t_6", scope: !3031, file: !21, line: 4469, type: !28)
!3049 = !DILocalVariable(name: "__pyx_t_7", scope: !3031, file: !21, line: 4470, type: !28)
!3050 = !DILocalVariable(name: "__pyx_t_8", scope: !3031, file: !21, line: 4471, type: !28)
!3051 = !DILocalVariable(name: "__pyx_t_9", scope: !3031, file: !21, line: 4472, type: !7)
!3052 = !DILocalVariable(name: "__pyx_t_10", scope: !3031, file: !21, line: 4473, type: !3053)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable", file: !21, line: 1482, size: 128, elements: !3054)
!3054 = !{!3055, !3056}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "__pyx_n", scope: !3053, file: !21, line: 1483, baseType: !7, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3053, file: !21, line: 1484, baseType: !28, size: 64, offset: 64)
!3057 = !DILocalVariable(name: "__pyx_lineno", scope: !3031, file: !21, line: 4474, type: !7)
!3058 = !DILocalVariable(name: "__pyx_filename", scope: !3031, file: !21, line: 4475, type: !54)
!3059 = !DILocalVariable(name: "__pyx_clineno", scope: !3031, file: !21, line: 4476, type: !7)
!3060 = !DILocalVariable(name: "__pyx_tstate", scope: !3061, file: !21, line: 4546, type: !1260)
!3061 = distinct !DILexicalBlock(scope: !3031, file: !21, line: 4545, column: 3)
!3062 = !DILabel(scope: !3061, name: "__pyx_L4_error", file: !21, line: 4614)
!3063 = !DILabel(scope: !3061, name: "__pyx_L6_except_error", file: !21, line: 4664)
!3064 = !DILabel(scope: !3061, name: "__pyx_L5_exception_handled", file: !21, line: 4670)
!3065 = !DILabel(scope: !3061, name: "__pyx_L9_try_end", file: !21, line: 4675)
!3066 = !DILabel(scope: !3031, name: "__pyx_L1_error", file: !21, line: 4706)
!3067 = !DILabel(scope: !3031, name: "__pyx_L0", file: !21, line: 4713)
!3068 = !DILocation(line: 4455, column: 72, scope: !3031)
!3069 = !DILocation(line: 4455, column: 101, scope: !3031)
!3070 = !DILocation(line: 4455, column: 123, scope: !3031)
!3071 = !DILocation(line: 4456, column: 3, scope: !3031)
!3072 = !DILocation(line: 4456, column: 13, scope: !3031)
!3073 = !DILocation(line: 4457, column: 3, scope: !3031)
!3074 = !DILocation(line: 4457, column: 13, scope: !3031)
!3075 = !DILocation(line: 4458, column: 3, scope: !3031)
!3076 = !DILocation(line: 4458, column: 13, scope: !3031)
!3077 = !DILocation(line: 4459, column: 3, scope: !3031)
!3078 = !DILocation(line: 4459, column: 13, scope: !3031)
!3079 = !DILocation(line: 4460, column: 3, scope: !3031)
!3080 = !DILocation(line: 4460, column: 56, scope: !3031)
!3081 = !DILocation(line: 4461, column: 3, scope: !3031)
!3082 = !DILocation(line: 4461, column: 13, scope: !3031)
!3083 = !DILocation(line: 4462, column: 3, scope: !3031)
!3084 = !DILocation(line: 4462, column: 13, scope: !3031)
!3085 = !DILocation(line: 4464, column: 3, scope: !3031)
!3086 = !DILocation(line: 4464, column: 7, scope: !3031)
!3087 = !DILocation(line: 4465, column: 3, scope: !3031)
!3088 = !DILocation(line: 4465, column: 13, scope: !3031)
!3089 = !DILocation(line: 4466, column: 3, scope: !3031)
!3090 = !DILocation(line: 4466, column: 13, scope: !3031)
!3091 = !DILocation(line: 4467, column: 3, scope: !3031)
!3092 = !DILocation(line: 4467, column: 13, scope: !3031)
!3093 = !DILocation(line: 4468, column: 3, scope: !3031)
!3094 = !DILocation(line: 4468, column: 13, scope: !3031)
!3095 = !DILocation(line: 4469, column: 3, scope: !3031)
!3096 = !DILocation(line: 4469, column: 13, scope: !3031)
!3097 = !DILocation(line: 4470, column: 3, scope: !3031)
!3098 = !DILocation(line: 4470, column: 13, scope: !3031)
!3099 = !DILocation(line: 4471, column: 3, scope: !3031)
!3100 = !DILocation(line: 4471, column: 13, scope: !3031)
!3101 = !DILocation(line: 4472, column: 3, scope: !3031)
!3102 = !DILocation(line: 4472, column: 7, scope: !3031)
!3103 = !DILocation(line: 4473, column: 3, scope: !3031)
!3104 = !DILocation(line: 4473, column: 70, scope: !3031)
!3105 = !DILocation(line: 4474, column: 3, scope: !3031)
!3106 = !DILocation(line: 4474, column: 7, scope: !3031)
!3107 = !DILocation(line: 4475, column: 3, scope: !3031)
!3108 = !DILocation(line: 4475, column: 15, scope: !3031)
!3109 = !DILocation(line: 4476, column: 3, scope: !3031)
!3110 = !DILocation(line: 4476, column: 7, scope: !3031)
!3111 = !DILocation(line: 4486, column: 16, scope: !3031)
!3112 = !DILocation(line: 4486, column: 63, scope: !3031)
!3113 = !DILocation(line: 4486, column: 13, scope: !3031)
!3114 = !DILocation(line: 4487, column: 7, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3031, file: !21, line: 4487, column: 7)
!3116 = !DILocation(line: 4487, column: 7, scope: !3031)
!3117 = !DILocation(line: 4496, column: 13, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3115, file: !21, line: 4487, column: 18)
!3119 = !DILocation(line: 4497, column: 5, scope: !3118)
!3120 = !DILocation(line: 4515, column: 16, scope: !3031)
!3121 = !DILocation(line: 4516, column: 17, scope: !3031)
!3122 = !DILocation(line: 4517, column: 14, scope: !3031)
!3123 = !DILocation(line: 4518, column: 18, scope: !3031)
!3124 = !DILocation(line: 4527, column: 10, scope: !3031)
!3125 = !DILocation(line: 4536, column: 3, scope: !3031)
!3126 = !DILocation(line: 4546, column: 5, scope: !3061)
!3127 = !DILocation(line: 4547, column: 5, scope: !3061)
!3128 = !DILocation(line: 4548, column: 5, scope: !3061)
!3129 = !DILocation(line: 4561, column: 44, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3061, file: !21, line: 4552, column: 14)
!3131 = !DILocation(line: 4561, column: 19, scope: !3130)
!3132 = !DILocation(line: 4561, column: 17, scope: !3130)
!3133 = !DILocation(line: 4561, column: 67, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4561, column: 67)
!3135 = !DILocation(line: 4561, column: 67, scope: !3130)
!3136 = !DILocation(line: 4561, column: 89, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !21, line: 4561, column: 89)
!3138 = distinct !DILexicalBlock(scope: !3134, file: !21, line: 4561, column: 89)
!3139 = !DILocation(line: 4561, column: 89, scope: !3138)
!3140 = !DILocation(line: 4563, column: 37, scope: !3130)
!3141 = !DILocation(line: 4563, column: 19, scope: !3130)
!3142 = !DILocation(line: 4563, column: 17, scope: !3130)
!3143 = !DILocation(line: 4563, column: 58, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4563, column: 58)
!3145 = !DILocation(line: 4563, column: 58, scope: !3130)
!3146 = !DILocation(line: 4563, column: 80, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3148, file: !21, line: 4563, column: 80)
!3148 = distinct !DILexicalBlock(scope: !3144, file: !21, line: 4563, column: 80)
!3149 = !DILocation(line: 4563, column: 80, scope: !3148)
!3150 = !DILocation(line: 4565, column: 44, scope: !3130)
!3151 = !DILocation(line: 4565, column: 19, scope: !3130)
!3152 = !DILocation(line: 4565, column: 17, scope: !3130)
!3153 = !DILocation(line: 4565, column: 67, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4565, column: 67)
!3155 = !DILocation(line: 4565, column: 67, scope: !3130)
!3156 = !DILocation(line: 4565, column: 89, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !21, line: 4565, column: 89)
!3158 = distinct !DILexicalBlock(scope: !3154, file: !21, line: 4565, column: 89)
!3159 = !DILocation(line: 4565, column: 89, scope: !3158)
!3160 = !DILocation(line: 4567, column: 19, scope: !3130)
!3161 = !DILocation(line: 4567, column: 17, scope: !3130)
!3162 = !DILocation(line: 4567, column: 39, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4567, column: 39)
!3164 = !DILocation(line: 4567, column: 39, scope: !3130)
!3165 = !DILocation(line: 4567, column: 61, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !21, line: 4567, column: 61)
!3167 = distinct !DILexicalBlock(scope: !3163, file: !21, line: 4567, column: 61)
!3168 = !DILocation(line: 4567, column: 61, scope: !3167)
!3169 = !DILocation(line: 4570, column: 11, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4570, column: 11)
!3171 = !DILocation(line: 4570, column: 11, scope: !3130)
!3172 = !DILocation(line: 4570, column: 60, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3174, file: !21, line: 4570, column: 60)
!3174 = distinct !DILexicalBlock(scope: !3170, file: !21, line: 4570, column: 60)
!3175 = !DILocation(line: 4570, column: 60, scope: !3174)
!3176 = !DILocation(line: 4572, column: 11, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4572, column: 11)
!3178 = !DILocation(line: 4572, column: 11, scope: !3130)
!3179 = !DILocation(line: 4572, column: 60, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3181, file: !21, line: 4572, column: 60)
!3181 = distinct !DILexicalBlock(scope: !3177, file: !21, line: 4572, column: 60)
!3182 = !DILocation(line: 4572, column: 60, scope: !3181)
!3183 = !DILocation(line: 4574, column: 11, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4574, column: 11)
!3185 = !DILocation(line: 4574, column: 11, scope: !3130)
!3186 = !DILocation(line: 4574, column: 60, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3188, file: !21, line: 4574, column: 60)
!3188 = distinct !DILexicalBlock(scope: !3184, file: !21, line: 4574, column: 60)
!3189 = !DILocation(line: 4574, column: 60, scope: !3188)
!3190 = !DILocation(line: 4575, column: 17, scope: !3130)
!3191 = !DILocation(line: 4576, column: 17, scope: !3130)
!3192 = !DILocation(line: 4577, column: 17, scope: !3130)
!3193 = !DILocation(line: 4578, column: 52, scope: !3130)
!3194 = !DILocation(line: 4578, column: 101, scope: !3130)
!3195 = !DILocation(line: 4578, column: 19, scope: !3130)
!3196 = !DILocation(line: 4578, column: 17, scope: !3130)
!3197 = !DILocation(line: 4578, column: 123, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3130, file: !21, line: 4578, column: 123)
!3199 = !DILocation(line: 4578, column: 123, scope: !3130)
!3200 = !DILocation(line: 4578, column: 145, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !21, line: 4578, column: 145)
!3202 = distinct !DILexicalBlock(scope: !3198, file: !21, line: 4578, column: 145)
!3203 = !DILocation(line: 4578, column: 145, scope: !3202)
!3204 = !DILocation(line: 4580, column: 7, scope: !3130)
!3205 = !DILocation(line: 4580, column: 42, scope: !3130)
!3206 = !DILocation(line: 4581, column: 77, scope: !3130)
!3207 = !DILocation(line: 4581, column: 19, scope: !3130)
!3208 = !DILocation(line: 4582, column: 17, scope: !3130)
!3209 = !DILocation(line: 4591, column: 7, scope: !3130)
!3210 = !DILocation(line: 4600, column: 37, scope: !3130)
!3211 = !DILocation(line: 4600, column: 22, scope: !3130)
!3212 = !DILocation(line: 4610, column: 5, scope: !3061)
!3213 = !DILocation(line: 4610, column: 41, scope: !3061)
!3214 = !DILocation(line: 4611, column: 5, scope: !3061)
!3215 = !DILocation(line: 4611, column: 41, scope: !3061)
!3216 = !DILocation(line: 4612, column: 5, scope: !3061)
!3217 = !DILocation(line: 4612, column: 41, scope: !3061)
!3218 = !DILocation(line: 4613, column: 5, scope: !3061)
!3219 = !DILocation(line: 4614, column: 5, scope: !3061)
!3220 = !DILocation(line: 4615, column: 5, scope: !3061)
!3221 = !DILocation(line: 4615, column: 41, scope: !3061)
!3222 = !DILocation(line: 4616, column: 5, scope: !3061)
!3223 = !DILocation(line: 4616, column: 41, scope: !3061)
!3224 = !DILocation(line: 4617, column: 5, scope: !3061)
!3225 = !DILocation(line: 4617, column: 41, scope: !3061)
!3226 = !DILocation(line: 4618, column: 5, scope: !3061)
!3227 = !DILocation(line: 4618, column: 41, scope: !3061)
!3228 = !DILocation(line: 4627, column: 17, scope: !3061)
!3229 = !DILocation(line: 4627, column: 15, scope: !3061)
!3230 = !DILocation(line: 4628, column: 9, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3061, file: !21, line: 4628, column: 9)
!3232 = !DILocation(line: 4628, column: 9, scope: !3061)
!3233 = !DILocation(line: 4629, column: 66, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3231, file: !21, line: 4628, column: 20)
!3235 = !DILocation(line: 4629, column: 81, scope: !3234)
!3236 = !DILocation(line: 4629, column: 95, scope: !3234)
!3237 = !DILocation(line: 4629, column: 7, scope: !3234)
!3238 = !DILocation(line: 4630, column: 11, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3234, file: !21, line: 4630, column: 11)
!3240 = !DILocation(line: 4630, column: 66, scope: !3239)
!3241 = !DILocation(line: 4630, column: 11, scope: !3234)
!3242 = !DILocation(line: 4630, column: 71, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !21, line: 4630, column: 71)
!3244 = distinct !DILexicalBlock(scope: !3239, file: !21, line: 4630, column: 71)
!3245 = !DILocation(line: 4630, column: 71, scope: !3244)
!3246 = !DILocation(line: 4634, column: 7, scope: !3234)
!3247 = !DILocation(line: 4635, column: 19, scope: !3234)
!3248 = !DILocation(line: 4635, column: 17, scope: !3234)
!3249 = !DILocation(line: 4644, column: 44, scope: !3234)
!3250 = !DILocation(line: 4644, column: 19, scope: !3234)
!3251 = !DILocation(line: 4644, column: 17, scope: !3234)
!3252 = !DILocation(line: 4644, column: 67, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3234, file: !21, line: 4644, column: 67)
!3254 = !DILocation(line: 4644, column: 67, scope: !3234)
!3255 = !DILocation(line: 4644, column: 89, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !21, line: 4644, column: 89)
!3257 = distinct !DILexicalBlock(scope: !3253, file: !21, line: 4644, column: 89)
!3258 = !DILocation(line: 4644, column: 89, scope: !3257)
!3259 = !DILocation(line: 4646, column: 18, scope: !3234)
!3260 = !DILocation(line: 4646, column: 26, scope: !3234)
!3261 = !{!3262, !1558, i64 0}
!3262 = !{!"__pyx_opt_args_6Cython_7Runtime_8refnanny_report_unraisable", !1558, i64 0, !1462, i64 8}
!3263 = !DILocation(line: 4647, column: 22, scope: !3234)
!3264 = !DILocation(line: 4647, column: 18, scope: !3234)
!3265 = !DILocation(line: 4647, column: 20, scope: !3234)
!3266 = !{!3262, !1462, i64 8}
!3267 = !DILocation(line: 4648, column: 60, scope: !3234)
!3268 = !DILocation(line: 4648, column: 71, scope: !3234)
!3269 = !DILocation(line: 4648, column: 7, scope: !3234)
!3270 = !DILocation(line: 4648, column: 105, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3234, file: !21, line: 4648, column: 105)
!3272 = !DILocation(line: 4648, column: 105, scope: !3234)
!3273 = !DILocation(line: 4648, column: 133, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !21, line: 4648, column: 133)
!3275 = distinct !DILexicalBlock(scope: !3271, file: !21, line: 4648, column: 133)
!3276 = !DILocation(line: 4648, column: 133, scope: !3275)
!3277 = !DILocation(line: 4649, column: 7, scope: !3234)
!3278 = !DILocation(line: 4649, column: 42, scope: !3234)
!3279 = !DILocation(line: 4650, column: 7, scope: !3234)
!3280 = !DILocation(line: 4650, column: 43, scope: !3234)
!3281 = !DILocation(line: 4651, column: 7, scope: !3234)
!3282 = !DILocation(line: 4651, column: 43, scope: !3234)
!3283 = !DILocation(line: 4652, column: 7, scope: !3234)
!3284 = !DILocation(line: 4652, column: 43, scope: !3234)
!3285 = !DILocation(line: 4653, column: 7, scope: !3234)
!3286 = !DILocation(line: 4655, column: 5, scope: !3061)
!3287 = !DILocation(line: 4664, column: 5, scope: !3061)
!3288 = !DILocation(line: 4668, column: 5, scope: !3061)
!3289 = !DILocation(line: 4669, column: 5, scope: !3061)
!3290 = !DILocation(line: 4670, column: 5, scope: !3061)
!3291 = !DILocation(line: 4674, column: 5, scope: !3061)
!3292 = !DILocation(line: 4675, column: 5, scope: !3061)
!3293 = !DILocation(line: 4676, column: 3, scope: !3031)
!3294 = !DILocation(line: 4685, column: 17, scope: !3031)
!3295 = !DILocation(line: 4685, column: 31, scope: !3031)
!3296 = !DILocation(line: 4685, column: 46, scope: !3031)
!3297 = !DILocation(line: 4685, column: 3, scope: !3031)
!3298 = !DILocation(line: 4694, column: 13, scope: !3031)
!3299 = !DILocation(line: 4694, column: 11, scope: !3031)
!3300 = !DILocation(line: 4695, column: 3, scope: !3031)
!3301 = !DILocation(line: 4706, column: 3, scope: !3031)
!3302 = !DILocation(line: 4707, column: 3, scope: !3031)
!3303 = !DILocation(line: 4708, column: 3, scope: !3031)
!3304 = !DILocation(line: 4709, column: 3, scope: !3031)
!3305 = !DILocation(line: 4710, column: 3, scope: !3031)
!3306 = !DILocation(line: 4711, column: 62, scope: !3031)
!3307 = !DILocation(line: 4711, column: 77, scope: !3031)
!3308 = !DILocation(line: 4711, column: 91, scope: !3031)
!3309 = !DILocation(line: 4711, column: 3, scope: !3031)
!3310 = !DILocation(line: 4712, column: 11, scope: !3031)
!3311 = !DILocation(line: 4712, column: 3, scope: !3031)
!3312 = !DILocation(line: 4713, column: 3, scope: !3031)
!3313 = !DILocation(line: 4714, column: 3, scope: !3031)
!3314 = !DILocation(line: 4715, column: 3, scope: !3031)
!3315 = !DILocation(line: 4717, column: 10, scope: !3031)
!3316 = !DILocation(line: 4717, column: 3, scope: !3031)
!3317 = !DILocation(line: 4718, column: 1, scope: !3031)
!3318 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_FinishContext", scope: !21, file: !21, line: 5420, type: !1224, scopeLine: 5420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3348, !3351, !3358, !3360, !3363, !3368, !3370, !3372, !3374, !3375, !3376, !3377, !3378, !3382, !3383, !3385, !3388, !3389}
!3320 = !DILocalVariable(name: "__pyx_v_ctx", arg: 1, scope: !3318, file: !21, line: 5420, type: !94)
!3321 = !DILocalVariable(name: "__pyx_v_type", scope: !3318, file: !21, line: 5421, type: !28)
!3322 = !DILocalVariable(name: "__pyx_v_value", scope: !3318, file: !21, line: 5422, type: !28)
!3323 = !DILocalVariable(name: "__pyx_v_tb", scope: !3318, file: !21, line: 5423, type: !28)
!3324 = !DILocalVariable(name: "__pyx_v_errors", scope: !3318, file: !21, line: 5424, type: !28)
!3325 = !DILocalVariable(name: "__pyx_v_context", scope: !3318, file: !21, line: 5425, type: !364)
!3326 = !DILocalVariable(name: "__pyx_t_1", scope: !3318, file: !21, line: 5427, type: !7)
!3327 = !DILocalVariable(name: "__pyx_t_2", scope: !3318, file: !21, line: 5428, type: !7)
!3328 = !DILocalVariable(name: "__pyx_t_3", scope: !3318, file: !21, line: 5429, type: !28)
!3329 = !DILocalVariable(name: "__pyx_t_4", scope: !3318, file: !21, line: 5430, type: !28)
!3330 = !DILocalVariable(name: "__pyx_t_5", scope: !3318, file: !21, line: 5431, type: !28)
!3331 = !DILocalVariable(name: "__pyx_t_6", scope: !3318, file: !21, line: 5432, type: !28)
!3332 = !DILocalVariable(name: "__pyx_t_7", scope: !3318, file: !21, line: 5433, type: !34)
!3333 = !DILocalVariable(name: "__pyx_t_8", scope: !3318, file: !21, line: 5434, type: !423)
!3334 = !DILocalVariable(name: "__pyx_t_9", scope: !3318, file: !21, line: 5435, type: !28)
!3335 = !DILocalVariable(name: "__pyx_t_10", scope: !3318, file: !21, line: 5436, type: !28)
!3336 = !DILocalVariable(name: "__pyx_t_11", scope: !3318, file: !21, line: 5437, type: !28)
!3337 = !DILocalVariable(name: "__pyx_t_12", scope: !3318, file: !21, line: 5438, type: !7)
!3338 = !DILocalVariable(name: "__pyx_t_13", scope: !3318, file: !21, line: 5439, type: !28)
!3339 = !DILocalVariable(name: "__pyx_t_14", scope: !3318, file: !21, line: 5440, type: !28)
!3340 = !DILocalVariable(name: "__pyx_t_15", scope: !3318, file: !21, line: 5441, type: !28)
!3341 = !DILocalVariable(name: "__pyx_lineno", scope: !3318, file: !21, line: 5442, type: !7)
!3342 = !DILocalVariable(name: "__pyx_filename", scope: !3318, file: !21, line: 5443, type: !54)
!3343 = !DILocalVariable(name: "__pyx_clineno", scope: !3318, file: !21, line: 5444, type: !7)
!3344 = !DILabel(scope: !3318, name: "__pyx_L4_bool_binop_done", file: !21, line: 5462)
!3345 = !DILocalVariable(name: "__pyx_tstate", scope: !3346, file: !21, line: 5515, type: !1260)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !21, line: 5514, column: 5)
!3347 = distinct !DILexicalBlock(scope: !3318, file: !21, line: 5513, column: 12)
!3348 = !DILocalVariable(name: "tmp", scope: !3349, file: !21, line: 5544, type: !28)
!3349 = distinct !DILexicalBlock(scope: !3350, file: !21, line: 5544, column: 9)
!3350 = distinct !DILexicalBlock(scope: !3346, file: !21, line: 5521, column: 16)
!3351 = !DILocalVariable(name: "function", scope: !3352, file: !21, line: 5576, type: !28)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !21, line: 5575, column: 37)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !21, line: 5575, column: 17)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !21, line: 5573, column: 51)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5573, column: 15)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !21, line: 5555, column: 24)
!3357 = distinct !DILexicalBlock(scope: !3350, file: !21, line: 5555, column: 13)
!3358 = !DILocalVariable(name: "tmp", scope: !3359, file: !21, line: 5579, type: !28)
!3359 = distinct !DILexicalBlock(scope: !3352, file: !21, line: 5579, column: 15)
!3360 = !DILocalVariable(name: "__pyx_callargs", scope: !3361, file: !21, line: 5585, type: !3362)
!3361 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5584, column: 11)
!3362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !760)
!3363 = !DILocalVariable(name: "function", scope: !3364, file: !21, line: 5612, type: !28)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !21, line: 5611, column: 37)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !21, line: 5611, column: 17)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !21, line: 5609, column: 50)
!3367 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5609, column: 15)
!3368 = !DILocalVariable(name: "tmp", scope: !3369, file: !21, line: 5615, type: !28)
!3369 = distinct !DILexicalBlock(scope: !3364, file: !21, line: 5615, column: 15)
!3370 = !DILocalVariable(name: "__pyx_callargs", scope: !3371, file: !21, line: 5621, type: !3362)
!3371 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5620, column: 11)
!3372 = !DILocalVariable(name: "tmp", scope: !3373, file: !21, line: 5676, type: !28)
!3373 = distinct !DILexicalBlock(scope: !3350, file: !21, line: 5676, column: 9)
!3374 = !DILabel(scope: !3346, name: "__pyx_L9_error", file: !21, line: 5690)
!3375 = !DILabel(scope: !3346, name: "__pyx_L11_except_error", file: !21, line: 5766)
!3376 = !DILabel(scope: !3346, name: "__pyx_L10_exception_handled", file: !21, line: 5772)
!3377 = !DILabel(scope: !3346, name: "__pyx_L14_try_end", file: !21, line: 5777)
!3378 = !DILocalVariable(name: "_py_tmp", scope: !3379, file: !21, line: 5790, type: !28)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !21, line: 5790, column: 7)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !21, line: 5789, column: 21)
!3381 = distinct !DILexicalBlock(scope: !3318, file: !21, line: 5788, column: 16)
!3382 = !DILabel(scope: !3381, name: "__pyx_L7_error", file: !21, line: 5810)
!3383 = !DILocalVariable(name: "__pyx_tstate", scope: !3384, file: !21, line: 5812, type: !1260)
!3384 = distinct !DILexicalBlock(scope: !3381, file: !21, line: 5811, column: 24)
!3385 = !DILocalVariable(name: "_py_tmp", scope: !3386, file: !21, line: 5836, type: !28)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !21, line: 5836, column: 9)
!3387 = distinct !DILexicalBlock(scope: !3384, file: !21, line: 5827, column: 7)
!3388 = !DILabel(scope: !3384, name: "__pyx_L18_return", file: !21, line: 5856)
!3389 = !DILabel(scope: !3318, name: "__pyx_L0", file: !21, line: 5880)
!3390 = !DILocation(line: 5420, column: 73, scope: !3318)
!3391 = !DILocation(line: 5421, column: 3, scope: !3318)
!3392 = !DILocation(line: 5421, column: 13, scope: !3318)
!3393 = !DILocation(line: 5422, column: 3, scope: !3318)
!3394 = !DILocation(line: 5422, column: 13, scope: !3318)
!3395 = !DILocation(line: 5423, column: 3, scope: !3318)
!3396 = !DILocation(line: 5423, column: 13, scope: !3318)
!3397 = !DILocation(line: 5424, column: 3, scope: !3318)
!3398 = !DILocation(line: 5424, column: 13, scope: !3318)
!3399 = !DILocation(line: 5425, column: 3, scope: !3318)
!3400 = !DILocation(line: 5425, column: 56, scope: !3318)
!3401 = !DILocation(line: 5427, column: 3, scope: !3318)
!3402 = !DILocation(line: 5427, column: 7, scope: !3318)
!3403 = !DILocation(line: 5428, column: 3, scope: !3318)
!3404 = !DILocation(line: 5428, column: 7, scope: !3318)
!3405 = !DILocation(line: 5429, column: 3, scope: !3318)
!3406 = !DILocation(line: 5429, column: 13, scope: !3318)
!3407 = !DILocation(line: 5430, column: 3, scope: !3318)
!3408 = !DILocation(line: 5430, column: 13, scope: !3318)
!3409 = !DILocation(line: 5431, column: 3, scope: !3318)
!3410 = !DILocation(line: 5431, column: 13, scope: !3318)
!3411 = !DILocation(line: 5432, column: 3, scope: !3318)
!3412 = !DILocation(line: 5432, column: 13, scope: !3318)
!3413 = !DILocation(line: 5433, column: 3, scope: !3318)
!3414 = !DILocation(line: 5433, column: 14, scope: !3318)
!3415 = !DILocation(line: 5434, column: 3, scope: !3318)
!3416 = !DILocation(line: 5434, column: 11, scope: !3318)
!3417 = !DILocation(line: 5435, column: 3, scope: !3318)
!3418 = !DILocation(line: 5435, column: 13, scope: !3318)
!3419 = !DILocation(line: 5436, column: 3, scope: !3318)
!3420 = !DILocation(line: 5436, column: 13, scope: !3318)
!3421 = !DILocation(line: 5437, column: 3, scope: !3318)
!3422 = !DILocation(line: 5437, column: 13, scope: !3318)
!3423 = !DILocation(line: 5438, column: 3, scope: !3318)
!3424 = !DILocation(line: 5438, column: 7, scope: !3318)
!3425 = !DILocation(line: 5439, column: 3, scope: !3318)
!3426 = !DILocation(line: 5439, column: 13, scope: !3318)
!3427 = !DILocation(line: 5440, column: 3, scope: !3318)
!3428 = !DILocation(line: 5440, column: 13, scope: !3318)
!3429 = !DILocation(line: 5441, column: 3, scope: !3318)
!3430 = !DILocation(line: 5441, column: 13, scope: !3318)
!3431 = !DILocation(line: 5442, column: 3, scope: !3318)
!3432 = !DILocation(line: 5442, column: 7, scope: !3318)
!3433 = !DILocation(line: 5443, column: 3, scope: !3318)
!3434 = !DILocation(line: 5443, column: 15, scope: !3318)
!3435 = !DILocation(line: 5444, column: 3, scope: !3318)
!3436 = !DILocation(line: 5444, column: 7, scope: !3318)
!3437 = !DILocation(line: 5454, column: 16, scope: !3318)
!3438 = !DILocation(line: 5454, column: 28, scope: !3318)
!3439 = !DILocation(line: 5454, column: 13, scope: !3318)
!3440 = !DILocation(line: 5455, column: 8, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3318, file: !21, line: 5455, column: 7)
!3442 = !DILocation(line: 5455, column: 7, scope: !3318)
!3443 = !DILocation(line: 5456, column: 3, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3441, file: !21, line: 5455, column: 19)
!3445 = !DILocation(line: 5457, column: 17, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3441, file: !21, line: 5456, column: 10)
!3447 = !DILocation(line: 5457, column: 15, scope: !3446)
!3448 = !DILocation(line: 5458, column: 5, scope: !3446)
!3449 = !DILocation(line: 5460, column: 17, scope: !3318)
!3450 = !DILocation(line: 5460, column: 33, scope: !3318)
!3451 = !DILocation(line: 5460, column: 13, scope: !3318)
!3452 = !DILocation(line: 5461, column: 15, scope: !3318)
!3453 = !DILocation(line: 5461, column: 13, scope: !3318)
!3454 = !DILocation(line: 5461, column: 3, scope: !3318)
!3455 = !DILocation(line: 5462, column: 3, scope: !3318)
!3456 = !DILocation(line: 5463, column: 7, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3318, file: !21, line: 5463, column: 7)
!3458 = !DILocation(line: 5463, column: 7, scope: !3318)
!3459 = !DILocation(line: 5464, column: 5, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3457, file: !21, line: 5463, column: 18)
!3461 = !DILocation(line: 5474, column: 16, scope: !3318)
!3462 = !DILocation(line: 5475, column: 17, scope: !3318)
!3463 = !DILocation(line: 5476, column: 14, scope: !3318)
!3464 = !DILocation(line: 5485, column: 3, scope: !3318)
!3465 = !DILocation(line: 5486, column: 18, scope: !3318)
!3466 = !DILocation(line: 5495, column: 10, scope: !3318)
!3467 = !DILocation(line: 5504, column: 3, scope: !3318)
!3468 = !DILocation(line: 5515, column: 7, scope: !3346)
!3469 = !DILocation(line: 5516, column: 7, scope: !3346)
!3470 = !DILocation(line: 5517, column: 7, scope: !3346)
!3471 = !DILocation(line: 5530, column: 35, scope: !3350)
!3472 = !DILocation(line: 5530, column: 19, scope: !3350)
!3473 = !DILocation(line: 5531, column: 9, scope: !3350)
!3474 = !DILocation(line: 5532, column: 83, scope: !3350)
!3475 = !DILocation(line: 5532, column: 25, scope: !3350)
!3476 = !DILocation(line: 5533, column: 19, scope: !3350)
!3477 = !DILocation(line: 5542, column: 69, scope: !3350)
!3478 = !DILocation(line: 5542, column: 21, scope: !3350)
!3479 = !DILocation(line: 5542, column: 19, scope: !3350)
!3480 = !DILocation(line: 5542, column: 91, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3350, file: !21, line: 5542, column: 91)
!3482 = !DILocation(line: 5542, column: 91, scope: !3350)
!3483 = !DILocation(line: 5542, column: 113, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !21, line: 5542, column: 113)
!3485 = distinct !DILexicalBlock(scope: !3481, file: !21, line: 5542, column: 113)
!3486 = !DILocation(line: 5542, column: 113, scope: !3485)
!3487 = !DILocation(line: 5544, column: 9, scope: !3350)
!3488 = !DILocation(line: 5544, column: 9, scope: !3349)
!3489 = !DILocation(line: 5545, column: 19, scope: !3350)
!3490 = !DILocation(line: 5554, column: 43, scope: !3350)
!3491 = !DILocation(line: 5554, column: 21, scope: !3350)
!3492 = !DILocation(line: 5554, column: 19, scope: !3350)
!3493 = !DILocation(line: 5554, column: 64, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3350, file: !21, line: 5554, column: 64)
!3495 = !DILocation(line: 5554, column: 64, scope: !3350)
!3496 = !DILocation(line: 5554, column: 91, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !21, line: 5554, column: 91)
!3498 = distinct !DILexicalBlock(scope: !3494, file: !21, line: 5554, column: 91)
!3499 = !DILocation(line: 5554, column: 91, scope: !3498)
!3500 = !DILocation(line: 5555, column: 13, scope: !3357)
!3501 = !DILocation(line: 5555, column: 13, scope: !3350)
!3502 = !DILocation(line: 5564, column: 23, scope: !3356)
!3503 = !DILocation(line: 5564, column: 21, scope: !3356)
!3504 = !DILocation(line: 5564, column: 43, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5564, column: 43)
!3506 = !DILocation(line: 5564, column: 43, scope: !3356)
!3507 = !DILocation(line: 5564, column: 65, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !21, line: 5564, column: 65)
!3509 = distinct !DILexicalBlock(scope: !3505, file: !21, line: 5564, column: 65)
!3510 = !DILocation(line: 5564, column: 65, scope: !3509)
!3511 = !DILocation(line: 5566, column: 21, scope: !3356)
!3512 = !DILocation(line: 5567, column: 21, scope: !3356)
!3513 = !DILocation(line: 5568, column: 50, scope: !3356)
!3514 = !DILocation(line: 5568, column: 67, scope: !3356)
!3515 = !DILocation(line: 5568, column: 77, scope: !3356)
!3516 = !{!1599, !1462, i64 224}
!3517 = !DILocation(line: 5568, column: 24, scope: !3356)
!3518 = !DILocation(line: 5568, column: 22, scope: !3356)
!3519 = !DILocation(line: 5568, column: 100, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5568, column: 100)
!3521 = !DILocation(line: 5568, column: 100, scope: !3356)
!3522 = !DILocation(line: 5568, column: 123, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !21, line: 5568, column: 123)
!3524 = distinct !DILexicalBlock(scope: !3520, file: !21, line: 5568, column: 123)
!3525 = !DILocation(line: 5568, column: 123, scope: !3524)
!3526 = !DILocation(line: 5570, column: 22, scope: !3356)
!3527 = !DILocation(line: 5571, column: 22, scope: !3356)
!3528 = !DILocation(line: 5573, column: 15, scope: !3355)
!3529 = !DILocation(line: 5573, column: 15, scope: !3356)
!3530 = !DILocation(line: 5574, column: 26, scope: !3354)
!3531 = !{!3532, !1462, i64 24}
!3532 = !{!"", !1871, i64 0, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40}
!3533 = !DILocation(line: 5574, column: 24, scope: !3354)
!3534 = !DILocation(line: 5575, column: 17, scope: !3353)
!3535 = !DILocation(line: 5575, column: 17, scope: !3354)
!3536 = !DILocation(line: 5576, column: 15, scope: !3352)
!3537 = !DILocation(line: 5576, column: 25, scope: !3352)
!3538 = !DILocation(line: 5576, column: 36, scope: !3352)
!3539 = !{!3532, !1462, i64 16}
!3540 = !DILocation(line: 5577, column: 15, scope: !3352)
!3541 = !DILocation(line: 5578, column: 15, scope: !3352)
!3542 = !DILocation(line: 5579, column: 15, scope: !3352)
!3543 = !DILocation(line: 5579, column: 15, scope: !3359)
!3544 = !DILocation(line: 5580, column: 26, scope: !3352)
!3545 = !DILocation(line: 5581, column: 13, scope: !3353)
!3546 = !DILocation(line: 5581, column: 13, scope: !3352)
!3547 = !DILocation(line: 5582, column: 11, scope: !3354)
!3548 = !DILocation(line: 5585, column: 13, scope: !3361)
!3549 = !DILocation(line: 5585, column: 23, scope: !3361)
!3550 = !DILocation(line: 5585, column: 43, scope: !3361)
!3551 = !DILocation(line: 5585, column: 44, scope: !3361)
!3552 = !DILocation(line: 5585, column: 56, scope: !3361)
!3553 = !{!1599, !1462, i64 328}
!3554 = !DILocation(line: 5586, column: 25, scope: !3361)
!3555 = !DILocation(line: 5586, column: 23, scope: !3361)
!3556 = !DILocation(line: 5587, column: 13, scope: !3361)
!3557 = !DILocation(line: 5587, column: 51, scope: !3361)
!3558 = !DILocation(line: 5588, column: 17, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3361, file: !21, line: 5588, column: 17)
!3560 = !DILocation(line: 5588, column: 17, scope: !3361)
!3561 = !DILocation(line: 5588, column: 39, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !21, line: 5588, column: 39)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !21, line: 5588, column: 39)
!3564 = !DILocation(line: 5588, column: 39, scope: !3563)
!3565 = !DILocation(line: 5590, column: 13, scope: !3361)
!3566 = !DILocation(line: 5590, column: 50, scope: !3361)
!3567 = !DILocation(line: 5591, column: 11, scope: !3356)
!3568 = !DILocation(line: 5592, column: 24, scope: !3356)
!3569 = !{!1897, !1462, i64 88}
!3570 = !DILocation(line: 5592, column: 22, scope: !3356)
!3571 = !DILocation(line: 5592, column: 89, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5592, column: 89)
!3573 = !DILocation(line: 5592, column: 89, scope: !3356)
!3574 = !DILocation(line: 5592, column: 112, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !21, line: 5592, column: 112)
!3576 = distinct !DILexicalBlock(scope: !3572, file: !21, line: 5592, column: 112)
!3577 = !DILocation(line: 5592, column: 112, scope: !3576)
!3578 = !DILocation(line: 5594, column: 11, scope: !3356)
!3579 = !DILocation(line: 5594, column: 46, scope: !3356)
!3580 = !DILocation(line: 5595, column: 24, scope: !3356)
!3581 = !DILocation(line: 5595, column: 69, scope: !3356)
!3582 = !DILocation(line: 5595, column: 67, scope: !3356)
!3583 = !DILocation(line: 5595, column: 23, scope: !3356)
!3584 = !DILocation(line: 5595, column: 82, scope: !3356)
!3585 = !DILocation(line: 5595, column: 127, scope: !3356)
!3586 = !DILocation(line: 5595, column: 21, scope: !3356)
!3587 = !DILocation(line: 5596, column: 24, scope: !3356)
!3588 = !DILocation(line: 5596, column: 21, scope: !3356)
!3589 = !DILocation(line: 5598, column: 11, scope: !3356)
!3590 = !DILocation(line: 5599, column: 22, scope: !3356)
!3591 = !DILocation(line: 5600, column: 11, scope: !3356)
!3592 = !{!1599, !1462, i64 176}
!3593 = !DILocation(line: 5601, column: 21, scope: !3356)
!3594 = !DILocation(line: 5603, column: 11, scope: !3356)
!3595 = !DILocation(line: 5604, column: 49, scope: !3356)
!3596 = !DILocation(line: 5604, column: 66, scope: !3356)
!3597 = !{!2906, !1462, i64 24}
!3598 = !DILocation(line: 5604, column: 72, scope: !3356)
!3599 = !DILocation(line: 5604, column: 23, scope: !3356)
!3600 = !DILocation(line: 5604, column: 21, scope: !3356)
!3601 = !DILocation(line: 5604, column: 95, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5604, column: 95)
!3603 = !DILocation(line: 5604, column: 95, scope: !3356)
!3604 = !DILocation(line: 5604, column: 117, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !21, line: 5604, column: 117)
!3606 = distinct !DILexicalBlock(scope: !3602, file: !21, line: 5604, column: 117)
!3607 = !DILocation(line: 5604, column: 117, scope: !3606)
!3608 = !DILocation(line: 5606, column: 22, scope: !3356)
!3609 = !DILocation(line: 5607, column: 22, scope: !3356)
!3610 = !DILocation(line: 5609, column: 15, scope: !3367)
!3611 = !DILocation(line: 5609, column: 15, scope: !3356)
!3612 = !DILocation(line: 5610, column: 26, scope: !3366)
!3613 = !DILocation(line: 5610, column: 24, scope: !3366)
!3614 = !DILocation(line: 5611, column: 17, scope: !3365)
!3615 = !DILocation(line: 5611, column: 17, scope: !3366)
!3616 = !DILocation(line: 5612, column: 15, scope: !3364)
!3617 = !DILocation(line: 5612, column: 25, scope: !3364)
!3618 = !DILocation(line: 5612, column: 36, scope: !3364)
!3619 = !DILocation(line: 5613, column: 15, scope: !3364)
!3620 = !DILocation(line: 5614, column: 15, scope: !3364)
!3621 = !DILocation(line: 5615, column: 15, scope: !3364)
!3622 = !DILocation(line: 5615, column: 15, scope: !3369)
!3623 = !DILocation(line: 5616, column: 26, scope: !3364)
!3624 = !DILocation(line: 5617, column: 13, scope: !3365)
!3625 = !DILocation(line: 5617, column: 13, scope: !3364)
!3626 = !DILocation(line: 5618, column: 11, scope: !3366)
!3627 = !DILocation(line: 5621, column: 13, scope: !3371)
!3628 = !DILocation(line: 5621, column: 23, scope: !3371)
!3629 = !DILocation(line: 5621, column: 43, scope: !3371)
!3630 = !DILocation(line: 5621, column: 44, scope: !3371)
!3631 = !DILocation(line: 5621, column: 56, scope: !3371)
!3632 = !DILocation(line: 5622, column: 26, scope: !3371)
!3633 = !DILocation(line: 5622, column: 24, scope: !3371)
!3634 = !DILocation(line: 5623, column: 13, scope: !3371)
!3635 = !DILocation(line: 5623, column: 51, scope: !3371)
!3636 = !DILocation(line: 5624, column: 17, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3371, file: !21, line: 5624, column: 17)
!3638 = !DILocation(line: 5624, column: 17, scope: !3371)
!3639 = !DILocation(line: 5624, column: 40, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !21, line: 5624, column: 40)
!3641 = distinct !DILexicalBlock(scope: !3637, file: !21, line: 5624, column: 40)
!3642 = !DILocation(line: 5624, column: 40, scope: !3641)
!3643 = !DILocation(line: 5626, column: 13, scope: !3371)
!3644 = !DILocation(line: 5626, column: 48, scope: !3371)
!3645 = !DILocation(line: 5627, column: 11, scope: !3356)
!3646 = !DILocation(line: 5628, column: 23, scope: !3356)
!3647 = !DILocation(line: 5628, column: 21, scope: !3356)
!3648 = !DILocation(line: 5628, column: 89, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5628, column: 89)
!3650 = !DILocation(line: 5628, column: 89, scope: !3356)
!3651 = !DILocation(line: 5628, column: 111, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !21, line: 5628, column: 111)
!3653 = distinct !DILexicalBlock(scope: !3649, file: !21, line: 5628, column: 111)
!3654 = !DILocation(line: 5628, column: 111, scope: !3653)
!3655 = !DILocation(line: 5630, column: 11, scope: !3356)
!3656 = !DILocation(line: 5630, column: 48, scope: !3356)
!3657 = !DILocation(line: 5631, column: 24, scope: !3356)
!3658 = !DILocation(line: 5631, column: 68, scope: !3356)
!3659 = !DILocation(line: 5631, column: 66, scope: !3356)
!3660 = !DILocation(line: 5631, column: 23, scope: !3356)
!3661 = !DILocation(line: 5631, column: 81, scope: !3356)
!3662 = !DILocation(line: 5631, column: 125, scope: !3356)
!3663 = !DILocation(line: 5631, column: 21, scope: !3356)
!3664 = !DILocation(line: 5632, column: 24, scope: !3356)
!3665 = !DILocation(line: 5632, column: 21, scope: !3356)
!3666 = !DILocation(line: 5634, column: 11, scope: !3356)
!3667 = !DILocation(line: 5635, column: 21, scope: !3356)
!3668 = !DILocation(line: 5636, column: 11, scope: !3356)
!3669 = !{!1599, !1462, i64 184}
!3670 = !DILocation(line: 5637, column: 21, scope: !3356)
!3671 = !DILocation(line: 5639, column: 11, scope: !3356)
!3672 = !DILocation(line: 5640, column: 44, scope: !3356)
!3673 = !DILocation(line: 5640, column: 58, scope: !3356)
!3674 = !DILocation(line: 5640, column: 69, scope: !3356)
!3675 = !DILocation(line: 5640, column: 23, scope: !3356)
!3676 = !DILocation(line: 5640, column: 21, scope: !3356)
!3677 = !DILocation(line: 5640, column: 85, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5640, column: 85)
!3679 = !DILocation(line: 5640, column: 85, scope: !3356)
!3680 = !DILocation(line: 5640, column: 107, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !21, line: 5640, column: 107)
!3682 = distinct !DILexicalBlock(scope: !3678, file: !21, line: 5640, column: 107)
!3683 = !DILocation(line: 5640, column: 107, scope: !3682)
!3684 = !DILocation(line: 5642, column: 11, scope: !3356)
!3685 = !DILocation(line: 5642, column: 46, scope: !3356)
!3686 = !DILocation(line: 5643, column: 49, scope: !3356)
!3687 = !DILocation(line: 5643, column: 70, scope: !3356)
!3688 = !DILocation(line: 5643, column: 23, scope: !3356)
!3689 = !DILocation(line: 5643, column: 21, scope: !3356)
!3690 = !DILocation(line: 5643, column: 86, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5643, column: 86)
!3692 = !DILocation(line: 5643, column: 86, scope: !3356)
!3693 = !DILocation(line: 5643, column: 108, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !21, line: 5643, column: 108)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !21, line: 5643, column: 108)
!3696 = !DILocation(line: 5643, column: 108, scope: !3695)
!3697 = !DILocation(line: 5645, column: 11, scope: !3356)
!3698 = !DILocation(line: 5645, column: 46, scope: !3356)
!3699 = !DILocation(line: 5646, column: 11, scope: !3356)
!3700 = !DILocation(line: 5646, column: 46, scope: !3356)
!3701 = !DILocation(line: 5655, column: 49, scope: !3356)
!3702 = !DILocation(line: 5655, column: 70, scope: !3356)
!3703 = !DILocation(line: 5655, column: 23, scope: !3356)
!3704 = !DILocation(line: 5655, column: 21, scope: !3356)
!3705 = !DILocation(line: 5655, column: 91, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3356, file: !21, line: 5655, column: 91)
!3707 = !DILocation(line: 5655, column: 91, scope: !3356)
!3708 = !DILocation(line: 5655, column: 113, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !21, line: 5655, column: 113)
!3710 = distinct !DILexicalBlock(scope: !3706, file: !21, line: 5655, column: 113)
!3711 = !DILocation(line: 5655, column: 113, scope: !3710)
!3712 = !DILocation(line: 5657, column: 11, scope: !3356)
!3713 = !DILocation(line: 5657, column: 46, scope: !3356)
!3714 = !DILocation(line: 5666, column: 9, scope: !3356)
!3715 = !DILocation(line: 5675, column: 9, scope: !3350)
!3716 = !DILocation(line: 5676, column: 9, scope: !3350)
!3717 = !DILocation(line: 5676, column: 9, scope: !3373)
!3718 = !DILocation(line: 5686, column: 7, scope: !3346)
!3719 = !DILocation(line: 5686, column: 43, scope: !3346)
!3720 = !DILocation(line: 5687, column: 7, scope: !3346)
!3721 = !DILocation(line: 5687, column: 43, scope: !3346)
!3722 = !DILocation(line: 5688, column: 7, scope: !3346)
!3723 = !DILocation(line: 5688, column: 43, scope: !3346)
!3724 = !DILocation(line: 5689, column: 7, scope: !3346)
!3725 = !DILocation(line: 5690, column: 7, scope: !3346)
!3726 = !DILocation(line: 5691, column: 7, scope: !3346)
!3727 = !DILocation(line: 5691, column: 45, scope: !3346)
!3728 = !DILocation(line: 5692, column: 7, scope: !3346)
!3729 = !DILocation(line: 5692, column: 45, scope: !3346)
!3730 = !DILocation(line: 5693, column: 7, scope: !3346)
!3731 = !DILocation(line: 5693, column: 43, scope: !3346)
!3732 = !DILocation(line: 5694, column: 7, scope: !3346)
!3733 = !DILocation(line: 5694, column: 43, scope: !3346)
!3734 = !DILocation(line: 5704, column: 69, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3346, file: !21, line: 5703, column: 19)
!3736 = !DILocation(line: 5704, column: 84, scope: !3735)
!3737 = !DILocation(line: 5704, column: 98, scope: !3735)
!3738 = !DILocation(line: 5704, column: 9, scope: !3735)
!3739 = !DILocation(line: 5705, column: 13, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3735, file: !21, line: 5705, column: 13)
!3741 = !DILocation(line: 5705, column: 69, scope: !3740)
!3742 = !DILocation(line: 5705, column: 13, scope: !3735)
!3743 = !DILocation(line: 5705, column: 74, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !21, line: 5705, column: 74)
!3745 = distinct !DILexicalBlock(scope: !3740, file: !21, line: 5705, column: 74)
!3746 = !DILocation(line: 5705, column: 74, scope: !3745)
!3747 = !DILocation(line: 5717, column: 13, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3735, file: !21, line: 5717, column: 13)
!3749 = !DILocation(line: 5717, column: 13, scope: !3735)
!3750 = !DILocation(line: 5717, column: 43, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3748, file: !21, line: 5717, column: 41)
!3752 = !DILocation(line: 5717, column: 84, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !21, line: 5717, column: 84)
!3754 = distinct !DILexicalBlock(scope: !3751, file: !21, line: 5717, column: 84)
!3755 = !DILocation(line: 5717, column: 84, scope: !3754)
!3756 = !DILocation(line: 5718, column: 35, scope: !3735)
!3757 = !DILocation(line: 5718, column: 52, scope: !3735)
!3758 = !DILocation(line: 5718, column: 19, scope: !3735)
!3759 = !DILocation(line: 5719, column: 13, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3735, file: !21, line: 5719, column: 13)
!3761 = !DILocation(line: 5719, column: 13, scope: !3735)
!3762 = !DILocation(line: 5720, column: 15, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !21, line: 5720, column: 15)
!3764 = distinct !DILexicalBlock(scope: !3760, file: !21, line: 5719, column: 24)
!3765 = !DILocation(line: 5720, column: 15, scope: !3764)
!3766 = !DILocation(line: 5720, column: 45, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3763, file: !21, line: 5720, column: 43)
!3768 = !DILocation(line: 5720, column: 86, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !21, line: 5720, column: 86)
!3770 = distinct !DILexicalBlock(scope: !3767, file: !21, line: 5720, column: 86)
!3771 = !DILocation(line: 5720, column: 86, scope: !3770)
!3772 = !DILocation(line: 5721, column: 11, scope: !3764)
!3773 = !DILocation(line: 5722, column: 24, scope: !3764)
!3774 = !DILocation(line: 5722, column: 41, scope: !3764)
!3775 = !DILocation(line: 5722, column: 22, scope: !3764)
!3776 = !DILocation(line: 5723, column: 9, scope: !3764)
!3777 = !DILocation(line: 5724, column: 11, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3760, file: !21, line: 5723, column: 16)
!3779 = !DILocation(line: 5725, column: 22, scope: !3778)
!3780 = !DILocation(line: 5735, column: 13, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3735, file: !21, line: 5735, column: 13)
!3782 = !DILocation(line: 5735, column: 13, scope: !3735)
!3783 = !DILocation(line: 5735, column: 43, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3781, file: !21, line: 5735, column: 41)
!3785 = !DILocation(line: 5735, column: 84, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !21, line: 5735, column: 84)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !21, line: 5735, column: 84)
!3788 = !DILocation(line: 5735, column: 84, scope: !3787)
!3789 = !DILocation(line: 5736, column: 35, scope: !3735)
!3790 = !DILocation(line: 5736, column: 52, scope: !3735)
!3791 = !DILocation(line: 5736, column: 19, scope: !3735)
!3792 = !DILocation(line: 5737, column: 13, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3735, file: !21, line: 5737, column: 13)
!3794 = !DILocation(line: 5737, column: 13, scope: !3735)
!3795 = !DILocation(line: 5738, column: 15, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !21, line: 5738, column: 15)
!3797 = distinct !DILexicalBlock(scope: !3793, file: !21, line: 5737, column: 24)
!3798 = !DILocation(line: 5738, column: 15, scope: !3797)
!3799 = !DILocation(line: 5738, column: 45, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !21, line: 5738, column: 43)
!3801 = !DILocation(line: 5738, column: 86, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !21, line: 5738, column: 86)
!3803 = distinct !DILexicalBlock(scope: !3800, file: !21, line: 5738, column: 86)
!3804 = !DILocation(line: 5738, column: 86, scope: !3803)
!3805 = !DILocation(line: 5739, column: 23, scope: !3797)
!3806 = !DILocation(line: 5739, column: 40, scope: !3797)
!3807 = !DILocation(line: 5739, column: 21, scope: !3797)
!3808 = !DILocation(line: 5740, column: 9, scope: !3797)
!3809 = !DILocation(line: 5741, column: 21, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3793, file: !21, line: 5740, column: 16)
!3811 = !DILocation(line: 5751, column: 62, scope: !3735)
!3812 = !DILocation(line: 5751, column: 74, scope: !3735)
!3813 = !DILocation(line: 5751, column: 9, scope: !3735)
!3814 = !DILocation(line: 5751, column: 96, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3735, file: !21, line: 5751, column: 96)
!3816 = !DILocation(line: 5751, column: 96, scope: !3735)
!3817 = !DILocation(line: 5751, column: 124, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !21, line: 5751, column: 124)
!3819 = distinct !DILexicalBlock(scope: !3815, file: !21, line: 5751, column: 124)
!3820 = !DILocation(line: 5751, column: 124, scope: !3819)
!3821 = !DILocation(line: 5752, column: 9, scope: !3735)
!3822 = !DILocation(line: 5752, column: 46, scope: !3735)
!3823 = !DILocation(line: 5753, column: 9, scope: !3735)
!3824 = !DILocation(line: 5753, column: 45, scope: !3735)
!3825 = !DILocation(line: 5754, column: 9, scope: !3735)
!3826 = !DILocation(line: 5754, column: 45, scope: !3735)
!3827 = !DILocation(line: 5755, column: 9, scope: !3735)
!3828 = !DILocation(line: 5755, column: 47, scope: !3735)
!3829 = !DILocation(line: 5756, column: 9, scope: !3735)
!3830 = !DILocation(line: 5766, column: 7, scope: !3346)
!3831 = !DILocation(line: 5770, column: 7, scope: !3346)
!3832 = !DILocation(line: 5771, column: 7, scope: !3346)
!3833 = !DILocation(line: 5772, column: 7, scope: !3346)
!3834 = !DILocation(line: 5776, column: 7, scope: !3346)
!3835 = !DILocation(line: 5777, column: 7, scope: !3346)
!3836 = !DILocation(line: 5778, column: 5, scope: !3347)
!3837 = !DILocation(line: 5790, column: 7, scope: !3380)
!3838 = !DILocation(line: 5790, column: 7, scope: !3379)
!3839 = !DILocation(line: 5790, column: 7, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3379, file: !21, line: 5790, column: 7)
!3841 = !DILocation(line: 5790, column: 7, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3840, file: !21, line: 5790, column: 7)
!3843 = !DILocation(line: 5799, column: 21, scope: !3380)
!3844 = !DILocation(line: 5799, column: 35, scope: !3380)
!3845 = !DILocation(line: 5799, column: 50, scope: !3380)
!3846 = !DILocation(line: 5799, column: 7, scope: !3380)
!3847 = !DILocation(line: 5808, column: 7, scope: !3380)
!3848 = !DILocation(line: 5810, column: 5, scope: !3381)
!3849 = !DILocation(line: 5812, column: 7, scope: !3384)
!3850 = !DILocation(line: 5813, column: 7, scope: !3384)
!3851 = !DILocation(line: 5814, column: 17, scope: !3384)
!3852 = !DILocation(line: 5814, column: 32, scope: !3384)
!3853 = !DILocation(line: 5814, column: 47, scope: !3384)
!3854 = !DILocation(line: 5814, column: 63, scope: !3384)
!3855 = !DILocation(line: 5814, column: 79, scope: !3384)
!3856 = !DILocation(line: 5814, column: 95, scope: !3384)
!3857 = !DILocation(line: 5815, column: 7, scope: !3384)
!3858 = !DILocation(line: 5815, column: 45, scope: !3384)
!3859 = !DILocation(line: 5816, column: 7, scope: !3384)
!3860 = !DILocation(line: 5816, column: 45, scope: !3384)
!3861 = !DILocation(line: 5817, column: 7, scope: !3384)
!3862 = !DILocation(line: 5817, column: 43, scope: !3384)
!3863 = !DILocation(line: 5818, column: 7, scope: !3384)
!3864 = !DILocation(line: 5818, column: 43, scope: !3384)
!3865 = !DILocation(line: 5819, column: 34, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3384, file: !21, line: 5819, column: 11)
!3867 = !DILocation(line: 5820, column: 37, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3384, file: !21, line: 5820, column: 11)
!3869 = !DILocation(line: 5820, column: 11, scope: !3384)
!3870 = !DILocation(line: 5820, column: 107, scope: !3868)
!3871 = !DILocation(line: 5836, column: 9, scope: !3387)
!3872 = !DILocation(line: 5836, column: 9, scope: !3386)
!3873 = !DILocation(line: 5836, column: 9, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3386, file: !21, line: 5836, column: 9)
!3875 = !DILocation(line: 5836, column: 9, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3874, file: !21, line: 5836, column: 9)
!3877 = !DILocation(line: 5845, column: 23, scope: !3387)
!3878 = !DILocation(line: 5845, column: 37, scope: !3387)
!3879 = !DILocation(line: 5845, column: 52, scope: !3387)
!3880 = !DILocation(line: 5845, column: 9, scope: !3387)
!3881 = !DILocation(line: 5854, column: 9, scope: !3387)
!3882 = !DILocation(line: 5856, column: 7, scope: !3384)
!3883 = !DILocation(line: 5861, column: 9, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !21, line: 5857, column: 34)
!3885 = distinct !DILexicalBlock(scope: !3384, file: !21, line: 5857, column: 11)
!3886 = !DILocation(line: 5863, column: 7, scope: !3384)
!3887 = !DILocation(line: 5863, column: 43, scope: !3384)
!3888 = !DILocation(line: 5864, column: 7, scope: !3384)
!3889 = !DILocation(line: 5864, column: 43, scope: !3384)
!3890 = !DILocation(line: 5865, column: 7, scope: !3384)
!3891 = !DILocation(line: 5865, column: 43, scope: !3384)
!3892 = !DILocation(line: 5866, column: 18, scope: !3384)
!3893 = !DILocation(line: 5866, column: 34, scope: !3384)
!3894 = !DILocation(line: 5866, column: 50, scope: !3384)
!3895 = !DILocation(line: 5868, column: 5, scope: !3381)
!3896 = !DILocation(line: 5880, column: 3, scope: !3318)
!3897 = !DILocation(line: 5881, column: 3, scope: !3318)
!3898 = !DILocation(line: 5882, column: 3, scope: !3318)
!3899 = !DILocation(line: 5884, column: 1, scope: !3318)
!3900 = !DISubprogram(name: "PyLong_FromVoidPtr", scope: !3901, file: !3901, line: 64, type: !3902, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3901 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/longobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7f1ad7d2783e1cef14a999a2b7ddd9d0")
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!28, !27}
!3904 = distinct !DISubprogram(name: "__Pyx_AddTraceback", scope: !21, file: !21, line: 10186, type: !3905, scopeLine: 10187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !54, !7, !7, !54}
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918}
!3908 = !DILocalVariable(name: "funcname", arg: 1, scope: !3904, file: !21, line: 10186, type: !54)
!3909 = !DILocalVariable(name: "c_line", arg: 2, scope: !3904, file: !21, line: 10186, type: !7)
!3910 = !DILocalVariable(name: "py_line", arg: 3, scope: !3904, file: !21, line: 10187, type: !7)
!3911 = !DILocalVariable(name: "filename", arg: 4, scope: !3904, file: !21, line: 10187, type: !54)
!3912 = !DILocalVariable(name: "py_code", scope: !3904, file: !21, line: 10188, type: !520)
!3913 = !DILocalVariable(name: "py_frame", scope: !3904, file: !21, line: 10189, type: !1316)
!3914 = !DILocalVariable(name: "tstate", scope: !3904, file: !21, line: 10190, type: !1260)
!3915 = !DILocalVariable(name: "ptype", scope: !3904, file: !21, line: 10191, type: !28)
!3916 = !DILocalVariable(name: "pvalue", scope: !3904, file: !21, line: 10191, type: !28)
!3917 = !DILocalVariable(name: "ptraceback", scope: !3904, file: !21, line: 10191, type: !28)
!3918 = !DILabel(scope: !3904, name: "bad", file: !21, line: 10220)
!3919 = !DILocation(line: 10186, column: 44, scope: !3904)
!3920 = !DILocation(line: 10186, column: 58, scope: !3904)
!3921 = !DILocation(line: 10187, column: 36, scope: !3904)
!3922 = !DILocation(line: 10187, column: 57, scope: !3904)
!3923 = !DILocation(line: 10188, column: 5, scope: !3904)
!3924 = !DILocation(line: 10188, column: 19, scope: !3904)
!3925 = !DILocation(line: 10189, column: 5, scope: !3904)
!3926 = !DILocation(line: 10189, column: 20, scope: !3904)
!3927 = !DILocation(line: 10190, column: 5, scope: !3904)
!3928 = !DILocation(line: 10190, column: 20, scope: !3904)
!3929 = !DILocation(line: 10190, column: 29, scope: !3904)
!3930 = !DILocation(line: 10191, column: 5, scope: !3904)
!3931 = !DILocation(line: 10191, column: 15, scope: !3904)
!3932 = !DILocation(line: 10191, column: 23, scope: !3904)
!3933 = !DILocation(line: 10191, column: 32, scope: !3904)
!3934 = !DILocation(line: 10192, column: 9, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3904, file: !21, line: 10192, column: 9)
!3936 = !DILocation(line: 10192, column: 9, scope: !3904)
!3937 = !DILocation(line: 10193, column: 42, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3935, file: !21, line: 10192, column: 17)
!3939 = !DILocation(line: 10193, column: 50, scope: !3938)
!3940 = !DILocation(line: 10193, column: 18, scope: !3938)
!3941 = !DILocation(line: 10193, column: 16, scope: !3938)
!3942 = !DILocation(line: 10194, column: 5, scope: !3938)
!3943 = !DILocation(line: 10195, column: 38, scope: !3904)
!3944 = !DILocation(line: 10195, column: 48, scope: !3904)
!3945 = !DILocation(line: 10195, column: 47, scope: !3904)
!3946 = !DILocation(line: 10195, column: 57, scope: !3904)
!3947 = !DILocation(line: 10195, column: 15, scope: !3904)
!3948 = !DILocation(line: 10195, column: 13, scope: !3904)
!3949 = !DILocation(line: 10196, column: 10, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3904, file: !21, line: 10196, column: 9)
!3951 = !DILocation(line: 10196, column: 9, scope: !3904)
!3952 = !DILocation(line: 10197, column: 31, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3950, file: !21, line: 10196, column: 19)
!3954 = !DILocation(line: 10197, column: 9, scope: !3953)
!3955 = !DILocation(line: 10199, column: 13, scope: !3953)
!3956 = !DILocation(line: 10199, column: 23, scope: !3953)
!3957 = !DILocation(line: 10199, column: 31, scope: !3953)
!3958 = !DILocation(line: 10199, column: 40, scope: !3953)
!3959 = !DILocation(line: 10198, column: 19, scope: !3953)
!3960 = !DILocation(line: 10198, column: 17, scope: !3953)
!3961 = !DILocation(line: 10200, column: 14, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3953, file: !21, line: 10200, column: 13)
!3963 = !DILocation(line: 10200, column: 13, scope: !3953)
!3964 = !DILocation(line: 10203, column: 13, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3962, file: !21, line: 10200, column: 23)
!3966 = !DILocation(line: 10204, column: 13, scope: !3965)
!3967 = !DILocation(line: 10205, column: 13, scope: !3965)
!3968 = !DILocation(line: 10206, column: 13, scope: !3965)
!3969 = !DILocation(line: 10208, column: 33, scope: !3953)
!3970 = !DILocation(line: 10208, column: 41, scope: !3953)
!3971 = !DILocation(line: 10208, column: 48, scope: !3953)
!3972 = !DILocation(line: 10208, column: 56, scope: !3953)
!3973 = !DILocation(line: 10208, column: 9, scope: !3953)
!3974 = !DILocation(line: 10209, column: 34, scope: !3953)
!3975 = !DILocation(line: 10209, column: 44, scope: !3953)
!3976 = !DILocation(line: 10209, column: 43, scope: !3953)
!3977 = !DILocation(line: 10209, column: 53, scope: !3953)
!3978 = !DILocation(line: 10209, column: 62, scope: !3953)
!3979 = !DILocation(line: 10209, column: 9, scope: !3953)
!3980 = !DILocation(line: 10210, column: 5, scope: !3953)
!3981 = !DILocation(line: 10212, column: 9, scope: !3904)
!3982 = !DILocation(line: 10213, column: 9, scope: !3904)
!3983 = !DILocation(line: 10214, column: 9, scope: !3904)
!3984 = !DILocation(line: 10211, column: 16, scope: !3904)
!3985 = !DILocation(line: 10211, column: 14, scope: !3904)
!3986 = !DILocation(line: 10217, column: 10, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3904, file: !21, line: 10217, column: 9)
!3988 = !DILocation(line: 10217, column: 9, scope: !3904)
!3989 = !DILocation(line: 10217, column: 20, scope: !3987)
!3990 = !DILocation(line: 10218, column: 5, scope: !3904)
!3991 = !{!3992, !1558, i64 40}
!3992 = !{!"_frame", !1871, i64 0, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1558, i64 40, !1463, i64 44, !1463, i64 45, !1463, i64 46, !1463, i64 48}
!3993 = !DILocation(line: 10219, column: 22, scope: !3904)
!3994 = !DILocation(line: 10219, column: 5, scope: !3904)
!3995 = !DILocation(line: 10220, column: 1, scope: !3904)
!3996 = !DILocation(line: 10221, column: 5, scope: !3904)
!3997 = !DILocation(line: 10222, column: 5, scope: !3904)
!3998 = !DILocation(line: 10223, column: 1, scope: !3904)
!3999 = !DISubprogram(name: "PyErr_Occurred", scope: !2182, file: !2182, line: 17, type: !575, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4000 = !DISubprogram(name: "PyOS_snprintf", scope: !2182, file: !2182, line: 317, type: !4001, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!7, !70, !341, !54, null}
!4003 = !DISubprogram(name: "PyErr_WarnEx", scope: !4004, file: !4004, line: 7, type: !4005, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4004 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/warnings.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "9528d302e04153e64eccd7d4f8658e04")
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!7, !28, !54, !34}
!4007 = distinct !DISubprogram(name: "__Pyx_CreateStringTabAndInitStrings", scope: !21, file: !21, line: 6110, type: !637, scopeLine: 6110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4008)
!4008 = !{!4009}
!4009 = !DILocalVariable(name: "__pyx_string_tab", scope: !4007, file: !21, line: 6111, type: !4010)
!4010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4011, size: 15680, elements: !1253)
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_StringTabEntry", file: !21, line: 1200, baseType: !4012)
!4012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !21, line: 1199, size: 320, elements: !4013)
!4013 = !{!4014, !4015, !4016, !4018, !4019, !4020, !4021}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4012, file: !21, line: 1199, baseType: !94, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4012, file: !21, line: 1199, baseType: !54, size: 64, offset: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4012, file: !21, line: 1199, baseType: !4017, size: 64, offset: 128)
!4017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !4012, file: !21, line: 1199, baseType: !54, size: 64, offset: 192)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "is_unicode", scope: !4012, file: !21, line: 1200, baseType: !55, size: 8, offset: 256)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "is_str", scope: !4012, file: !21, line: 1200, baseType: !55, size: 8, offset: 264)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "intern", scope: !4012, file: !21, line: 1200, baseType: !55, size: 8, offset: 272)
!4022 = !DILocation(line: 6111, column: 3, scope: !4007)
!4023 = !DILocation(line: 6111, column: 24, scope: !4007)
!4024 = !DILocation(line: 6111, column: 45, scope: !4007)
!4025 = !DILocation(line: 6112, column: 5, scope: !4007)
!4026 = !DILocation(line: 6112, column: 7, scope: !4007)
!4027 = !{!4028, !1462, i64 0}
!4028 = !{!"", !1462, i64 0, !1462, i64 8, !1837, i64 16, !1462, i64 24, !1463, i64 32, !1463, i64 33, !1463, i64 34}
!4029 = !{!4028, !1462, i64 8}
!4030 = !{!4028, !1837, i64 16}
!4031 = !{!4028, !1462, i64 24}
!4032 = !{!4028, !1463, i64 32}
!4033 = !{!4028, !1463, i64 33}
!4034 = !{!4028, !1463, i64 34}
!4035 = !DILocation(line: 6113, column: 5, scope: !4007)
!4036 = !DILocation(line: 6113, column: 7, scope: !4007)
!4037 = !DILocation(line: 6114, column: 5, scope: !4007)
!4038 = !DILocation(line: 6114, column: 7, scope: !4007)
!4039 = !DILocation(line: 6115, column: 5, scope: !4007)
!4040 = !DILocation(line: 6115, column: 7, scope: !4007)
!4041 = !DILocation(line: 6116, column: 5, scope: !4007)
!4042 = !DILocation(line: 6116, column: 7, scope: !4007)
!4043 = !DILocation(line: 6117, column: 5, scope: !4007)
!4044 = !DILocation(line: 6117, column: 7, scope: !4007)
!4045 = !DILocation(line: 6118, column: 5, scope: !4007)
!4046 = !DILocation(line: 6118, column: 7, scope: !4007)
!4047 = !DILocation(line: 6119, column: 5, scope: !4007)
!4048 = !DILocation(line: 6119, column: 7, scope: !4007)
!4049 = !DILocation(line: 6120, column: 5, scope: !4007)
!4050 = !DILocation(line: 6120, column: 7, scope: !4007)
!4051 = !DILocation(line: 6121, column: 5, scope: !4007)
!4052 = !DILocation(line: 6121, column: 7, scope: !4007)
!4053 = !DILocation(line: 6122, column: 5, scope: !4007)
!4054 = !DILocation(line: 6122, column: 7, scope: !4007)
!4055 = !DILocation(line: 6123, column: 5, scope: !4007)
!4056 = !DILocation(line: 6123, column: 7, scope: !4007)
!4057 = !DILocation(line: 6124, column: 5, scope: !4007)
!4058 = !DILocation(line: 6124, column: 7, scope: !4007)
!4059 = !DILocation(line: 6125, column: 5, scope: !4007)
!4060 = !DILocation(line: 6125, column: 7, scope: !4007)
!4061 = !DILocation(line: 6126, column: 5, scope: !4007)
!4062 = !DILocation(line: 6126, column: 7, scope: !4007)
!4063 = !DILocation(line: 6127, column: 5, scope: !4007)
!4064 = !DILocation(line: 6127, column: 7, scope: !4007)
!4065 = !DILocation(line: 6128, column: 5, scope: !4007)
!4066 = !DILocation(line: 6128, column: 7, scope: !4007)
!4067 = !DILocation(line: 6129, column: 5, scope: !4007)
!4068 = !DILocation(line: 6129, column: 7, scope: !4007)
!4069 = !DILocation(line: 6130, column: 5, scope: !4007)
!4070 = !DILocation(line: 6130, column: 7, scope: !4007)
!4071 = !DILocation(line: 6131, column: 5, scope: !4007)
!4072 = !DILocation(line: 6131, column: 7, scope: !4007)
!4073 = !DILocation(line: 6132, column: 5, scope: !4007)
!4074 = !DILocation(line: 6132, column: 7, scope: !4007)
!4075 = !DILocation(line: 6133, column: 5, scope: !4007)
!4076 = !DILocation(line: 6133, column: 7, scope: !4007)
!4077 = !DILocation(line: 6134, column: 5, scope: !4007)
!4078 = !DILocation(line: 6134, column: 7, scope: !4007)
!4079 = !DILocation(line: 6135, column: 5, scope: !4007)
!4080 = !DILocation(line: 6135, column: 7, scope: !4007)
!4081 = !DILocation(line: 6136, column: 5, scope: !4007)
!4082 = !DILocation(line: 6136, column: 7, scope: !4007)
!4083 = !DILocation(line: 6137, column: 5, scope: !4007)
!4084 = !DILocation(line: 6137, column: 7, scope: !4007)
!4085 = !DILocation(line: 6138, column: 5, scope: !4007)
!4086 = !DILocation(line: 6138, column: 7, scope: !4007)
!4087 = !DILocation(line: 6139, column: 5, scope: !4007)
!4088 = !DILocation(line: 6139, column: 7, scope: !4007)
!4089 = !DILocation(line: 6140, column: 5, scope: !4007)
!4090 = !DILocation(line: 6140, column: 7, scope: !4007)
!4091 = !DILocation(line: 6141, column: 5, scope: !4007)
!4092 = !DILocation(line: 6141, column: 7, scope: !4007)
!4093 = !DILocation(line: 6142, column: 5, scope: !4007)
!4094 = !DILocation(line: 6142, column: 7, scope: !4007)
!4095 = !DILocation(line: 6143, column: 5, scope: !4007)
!4096 = !DILocation(line: 6143, column: 7, scope: !4007)
!4097 = !DILocation(line: 6144, column: 5, scope: !4007)
!4098 = !DILocation(line: 6144, column: 7, scope: !4007)
!4099 = !DILocation(line: 6145, column: 5, scope: !4007)
!4100 = !DILocation(line: 6145, column: 7, scope: !4007)
!4101 = !DILocation(line: 6146, column: 5, scope: !4007)
!4102 = !DILocation(line: 6146, column: 7, scope: !4007)
!4103 = !DILocation(line: 6147, column: 5, scope: !4007)
!4104 = !DILocation(line: 6147, column: 7, scope: !4007)
!4105 = !DILocation(line: 6148, column: 5, scope: !4007)
!4106 = !DILocation(line: 6148, column: 7, scope: !4007)
!4107 = !DILocation(line: 6149, column: 5, scope: !4007)
!4108 = !DILocation(line: 6149, column: 7, scope: !4007)
!4109 = !DILocation(line: 6150, column: 5, scope: !4007)
!4110 = !DILocation(line: 6150, column: 7, scope: !4007)
!4111 = !DILocation(line: 6151, column: 5, scope: !4007)
!4112 = !DILocation(line: 6151, column: 7, scope: !4007)
!4113 = !DILocation(line: 6152, column: 5, scope: !4007)
!4114 = !DILocation(line: 6152, column: 7, scope: !4007)
!4115 = !DILocation(line: 6153, column: 5, scope: !4007)
!4116 = !DILocation(line: 6153, column: 7, scope: !4007)
!4117 = !DILocation(line: 6154, column: 5, scope: !4007)
!4118 = !DILocation(line: 6154, column: 7, scope: !4007)
!4119 = !DILocation(line: 6155, column: 5, scope: !4007)
!4120 = !DILocation(line: 6155, column: 7, scope: !4007)
!4121 = !DILocation(line: 6156, column: 5, scope: !4007)
!4122 = !DILocation(line: 6156, column: 7, scope: !4007)
!4123 = !DILocation(line: 6157, column: 5, scope: !4007)
!4124 = !DILocation(line: 6157, column: 7, scope: !4007)
!4125 = !DILocation(line: 6158, column: 5, scope: !4007)
!4126 = !DILocation(line: 6158, column: 7, scope: !4007)
!4127 = !DILocation(line: 6159, column: 5, scope: !4007)
!4128 = !DILocation(line: 6159, column: 7, scope: !4007)
!4129 = !DILocation(line: 6162, column: 28, scope: !4007)
!4130 = !DILocation(line: 6162, column: 10, scope: !4007)
!4131 = !DILocation(line: 6163, column: 1, scope: !4007)
!4132 = !DILocation(line: 6162, column: 3, scope: !4007)
!4133 = !DISubprogram(name: "PyLong_FromLong", scope: !3901, file: !3901, line: 16, type: !4134, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!28, !40}
!4136 = distinct !DISubprogram(name: "__Pyx_InitStrings", scope: !21, file: !21, line: 11056, type: !4137, scopeLine: 11056, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4140)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!7, !4139}
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4140 = !{!4141}
!4141 = !DILocalVariable(name: "t", arg: 1, scope: !4136, file: !21, line: 11056, type: !4139)
!4142 = !DILocation(line: 11056, column: 52, scope: !4136)
!4143 = !DILocation(line: 11057, column: 5, scope: !4136)
!4144 = !DILocation(line: 11057, column: 12, scope: !4136)
!4145 = !DILocation(line: 11057, column: 15, scope: !4136)
!4146 = !DILocation(line: 11059, column: 27, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4136, file: !21, line: 11057, column: 18)
!4148 = !DILocation(line: 11059, column: 30, scope: !4147)
!4149 = !DILocation(line: 11059, column: 33, scope: !4147)
!4150 = !DILocation(line: 11059, column: 9, scope: !4147)
!4151 = !DILocation(line: 11073, column: 9, scope: !4147)
!4152 = distinct !{!4152, !4143, !4153, !4154}
!4153 = !DILocation(line: 11074, column: 5, scope: !4136)
!4154 = !{!"llvm.loop.mustprogress"}
!4155 = !DILocation(line: 11075, column: 5, scope: !4136)
!4156 = distinct !DISubprogram(name: "__Pyx_InitString", scope: !21, file: !21, line: 11037, type: !4157, scopeLine: 11037, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4159)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{!7, !4011, !94}
!4159 = !{!4160, !4161}
!4160 = !DILocalVariable(name: "t", arg: 1, scope: !4156, file: !21, line: 11037, type: !4011)
!4161 = !DILocalVariable(name: "str", arg: 2, scope: !4156, file: !21, line: 11037, type: !94)
!4162 = !DILocation(line: 11037, column: 50, scope: !4156)
!4163 = !DILocation(line: 11037, column: 64, scope: !4156)
!4164 = !DILocation(line: 11038, column: 11, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4156, file: !21, line: 11038, column: 9)
!4166 = !DILocation(line: 11038, column: 9, scope: !4165)
!4167 = !DILocation(line: 11038, column: 26, scope: !4165)
!4168 = !DILocation(line: 11038, column: 24, scope: !4165)
!4169 = !DILocation(line: 11038, column: 22, scope: !4165)
!4170 = !DILocation(line: 11038, column: 9, scope: !4156)
!4171 = !DILocation(line: 11039, column: 15, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !21, line: 11039, column: 13)
!4173 = distinct !DILexicalBlock(scope: !4165, file: !21, line: 11038, column: 34)
!4174 = !DILocation(line: 11039, column: 13, scope: !4172)
!4175 = !DILocation(line: 11039, column: 13, scope: !4173)
!4176 = !DILocation(line: 11040, column: 49, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4172, file: !21, line: 11039, column: 23)
!4178 = !DILocation(line: 11040, column: 20, scope: !4177)
!4179 = !DILocation(line: 11040, column: 14, scope: !4177)
!4180 = !DILocation(line: 11040, column: 18, scope: !4177)
!4181 = !DILocation(line: 11041, column: 9, scope: !4177)
!4182 = !DILocation(line: 11041, column: 22, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4172, file: !21, line: 11041, column: 20)
!4184 = !DILocation(line: 11041, column: 20, scope: !4183)
!4185 = !DILocation(line: 11041, column: 20, scope: !4172)
!4186 = !DILocation(line: 11042, column: 39, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !21, line: 11041, column: 32)
!4188 = !DILocation(line: 11042, column: 44, scope: !4187)
!4189 = !DILocation(line: 11042, column: 46, scope: !4187)
!4190 = !DILocation(line: 11042, column: 53, scope: !4187)
!4191 = !DILocation(line: 11042, column: 20, scope: !4187)
!4192 = !DILocation(line: 11042, column: 14, scope: !4187)
!4193 = !DILocation(line: 11042, column: 18, scope: !4187)
!4194 = !DILocation(line: 11043, column: 9, scope: !4187)
!4195 = !DILocation(line: 11044, column: 50, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4183, file: !21, line: 11043, column: 16)
!4197 = !DILocation(line: 11044, column: 55, scope: !4196)
!4198 = !DILocation(line: 11044, column: 57, scope: !4196)
!4199 = !DILocation(line: 11044, column: 20, scope: !4196)
!4200 = !DILocation(line: 11044, column: 14, scope: !4196)
!4201 = !DILocation(line: 11044, column: 18, scope: !4196)
!4202 = !DILocation(line: 11046, column: 5, scope: !4173)
!4203 = !DILocation(line: 11047, column: 44, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4165, file: !21, line: 11046, column: 12)
!4205 = !DILocation(line: 11047, column: 49, scope: !4204)
!4206 = !DILocation(line: 11047, column: 51, scope: !4204)
!4207 = !DILocation(line: 11047, column: 16, scope: !4204)
!4208 = !DILocation(line: 11047, column: 10, scope: !4204)
!4209 = !DILocation(line: 11047, column: 14, scope: !4204)
!4210 = !DILocation(line: 11049, column: 11, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4156, file: !21, line: 11049, column: 9)
!4212 = !DILocation(line: 11049, column: 10, scope: !4211)
!4213 = !DILocation(line: 11049, column: 9, scope: !4156)
!4214 = !DILocation(line: 11050, column: 9, scope: !4211)
!4215 = !DILocation(line: 11051, column: 24, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4156, file: !21, line: 11051, column: 9)
!4217 = !DILocation(line: 11051, column: 23, scope: !4216)
!4218 = !DILocation(line: 11051, column: 9, scope: !4216)
!4219 = !DILocation(line: 11051, column: 29, scope: !4216)
!4220 = !DILocation(line: 11051, column: 9, scope: !4156)
!4221 = !DILocation(line: 11052, column: 9, scope: !4216)
!4222 = !DILocation(line: 11053, column: 5, scope: !4156)
!4223 = !DILocation(line: 11054, column: 1, scope: !4156)
!4224 = !DISubprogram(name: "PyUnicode_InternFromString", scope: !424, file: !424, line: 264, type: !2196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4225 = !DISubprogram(name: "PyUnicode_Decode", scope: !424, file: !424, line: 358, type: !4226, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4226 = !DISubroutineType(types: !4227)
!4227 = !{!28, !54, !34, !54, !54}
!4228 = !DISubprogram(name: "PyObject_Hash", scope: !6, file: !6, line: 301, type: !196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4229 = distinct !DISubprogram(name: "__Pyx_GetBuiltinName", scope: !21, file: !21, line: 6972, type: !84, scopeLine: 6972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4230)
!4230 = !{!4231, !4232}
!4231 = !DILocalVariable(name: "name", arg: 1, scope: !4229, file: !21, line: 6972, type: !28)
!4232 = !DILocalVariable(name: "result", scope: !4229, file: !21, line: 6973, type: !28)
!4233 = !DILocation(line: 6972, column: 49, scope: !4229)
!4234 = !DILocation(line: 6973, column: 5, scope: !4229)
!4235 = !DILocation(line: 6973, column: 15, scope: !4229)
!4236 = !DILocation(line: 6973, column: 57, scope: !4229)
!4237 = !DILocation(line: 6973, column: 66, scope: !4229)
!4238 = !DILocation(line: 6973, column: 24, scope: !4229)
!4239 = !DILocation(line: 6974, column: 9, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4229, file: !21, line: 6974, column: 9)
!4241 = !DILocation(line: 6974, column: 27, scope: !4240)
!4242 = !DILocation(line: 6974, column: 31, scope: !4240)
!4243 = !DILocation(line: 6974, column: 9, scope: !4229)
!4244 = !DILocation(line: 6975, column: 22, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4240, file: !21, line: 6974, column: 49)
!4246 = !DILocation(line: 6977, column: 41, scope: !4245)
!4247 = !DILocation(line: 6975, column: 9, scope: !4245)
!4248 = !DILocation(line: 6981, column: 5, scope: !4245)
!4249 = !DILocation(line: 6982, column: 12, scope: !4229)
!4250 = !DILocation(line: 6983, column: 1, scope: !4229)
!4251 = !DILocation(line: 6982, column: 5, scope: !4229)
!4252 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStrNoError", scope: !21, file: !21, line: 6956, type: !105, scopeLine: 6956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4253)
!4253 = !{!4254, !4255, !4256, !4257}
!4254 = !DILocalVariable(name: "obj", arg: 1, scope: !4252, file: !21, line: 6956, type: !28)
!4255 = !DILocalVariable(name: "attr_name", arg: 2, scope: !4252, file: !21, line: 6956, type: !28)
!4256 = !DILocalVariable(name: "result", scope: !4252, file: !21, line: 6957, type: !28)
!4257 = !DILocalVariable(name: "tp", scope: !4252, file: !21, line: 6959, type: !42)
!4258 = !DILocation(line: 6956, column: 75, scope: !4252)
!4259 = !DILocation(line: 6956, column: 90, scope: !4252)
!4260 = !DILocation(line: 6957, column: 5, scope: !4252)
!4261 = !DILocation(line: 6957, column: 15, scope: !4252)
!4262 = !DILocation(line: 6959, column: 5, scope: !4252)
!4263 = !DILocation(line: 6959, column: 19, scope: !4252)
!4264 = !DILocation(line: 6959, column: 24, scope: !4252)
!4265 = !DILocation(line: 6960, column: 9, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4252, file: !21, line: 6960, column: 9)
!4267 = !DILocation(line: 6960, column: 9, scope: !4252)
!4268 = !DILocation(line: 6961, column: 49, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4266, file: !21, line: 6960, column: 61)
!4270 = !DILocation(line: 6961, column: 54, scope: !4269)
!4271 = !DILocation(line: 6961, column: 16, scope: !4269)
!4272 = !DILocation(line: 6961, column: 9, scope: !4269)
!4273 = !DILocation(line: 6964, column: 40, scope: !4252)
!4274 = !DILocation(line: 6964, column: 45, scope: !4252)
!4275 = !DILocation(line: 6964, column: 14, scope: !4252)
!4276 = !DILocation(line: 6964, column: 12, scope: !4252)
!4277 = !DILocation(line: 6965, column: 9, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4252, file: !21, line: 6965, column: 9)
!4279 = !DILocation(line: 6965, column: 9, scope: !4252)
!4280 = !DILocation(line: 6966, column: 9, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4278, file: !21, line: 6965, column: 28)
!4282 = !DILocation(line: 6967, column: 5, scope: !4281)
!4283 = !DILocation(line: 6968, column: 12, scope: !4252)
!4284 = !DILocation(line: 6968, column: 5, scope: !4252)
!4285 = !DILocation(line: 6969, column: 1, scope: !4252)
!4286 = !DISubprogram(name: "PyErr_Format", scope: !2182, file: !2182, line: 176, type: !4287, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!28, !28, !54, null}
!4289 = !DISubprogram(name: "_PyObject_GenericGetAttrWithDict", scope: !45, file: !45, line: 305, type: !4290, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!28, !28, !28, !28, !7}
!4292 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStr", scope: !21, file: !21, line: 6937, type: !105, scopeLine: 6937, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4293)
!4293 = !{!4294, !4295, !4296}
!4294 = !DILocalVariable(name: "obj", arg: 1, scope: !4292, file: !21, line: 6937, type: !28)
!4295 = !DILocalVariable(name: "attr_name", arg: 2, scope: !4292, file: !21, line: 6937, type: !28)
!4296 = !DILocalVariable(name: "tp", scope: !4292, file: !21, line: 6938, type: !42)
!4297 = !DILocation(line: 6937, column: 68, scope: !4292)
!4298 = !DILocation(line: 6937, column: 83, scope: !4292)
!4299 = !DILocation(line: 6938, column: 5, scope: !4292)
!4300 = !DILocation(line: 6938, column: 19, scope: !4292)
!4301 = !DILocation(line: 6938, column: 24, scope: !4292)
!4302 = !DILocation(line: 6939, column: 9, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4292, file: !21, line: 6939, column: 9)
!4304 = !DILocation(line: 6939, column: 9, scope: !4292)
!4305 = !DILocation(line: 6940, column: 16, scope: !4303)
!4306 = !DILocation(line: 6940, column: 20, scope: !4303)
!4307 = !DILocation(line: 6940, column: 32, scope: !4303)
!4308 = !DILocation(line: 6940, column: 37, scope: !4303)
!4309 = !DILocation(line: 6940, column: 9, scope: !4303)
!4310 = !DILocation(line: 6945, column: 29, scope: !4292)
!4311 = !DILocation(line: 6945, column: 34, scope: !4292)
!4312 = !DILocation(line: 6945, column: 12, scope: !4292)
!4313 = !DILocation(line: 6945, column: 5, scope: !4292)
!4314 = !DILocation(line: 6946, column: 1, scope: !4292)
!4315 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStr_ClearAttributeError", scope: !21, file: !21, line: 6950, type: !2192, scopeLine: 6950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4316)
!4316 = !{!4317}
!4317 = !DILocalVariable(name: "__pyx_tstate", scope: !4315, file: !21, line: 6951, type: !1260)
!4318 = !DILocation(line: 6951, column: 5, scope: !4315)
!4319 = !DILocation(line: 6952, column: 5, scope: !4315)
!4320 = !DILocation(line: 6953, column: 9, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4315, file: !21, line: 6953, column: 9)
!4322 = !DILocation(line: 6953, column: 9, scope: !4315)
!4323 = !DILocation(line: 6954, column: 9, scope: !4321)
!4324 = !DILocation(line: 6955, column: 1, scope: !4315)
!4325 = !DISubprogram(name: "PyObject_GetAttr", scope: !6, file: !6, line: 292, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4326 = !DISubprogram(name: "_PyThreadState_UncheckedGet", scope: !1263, file: !1263, line: 215, type: !2179, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4327 = distinct !DISubprogram(name: "__Pyx_PyErr_ExceptionMatchesInState", scope: !21, file: !21, line: 6848, type: !4328, scopeLine: 6848, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4330)
!4328 = !DISubroutineType(types: !4329)
!4329 = !{!7, !1260, !28}
!4330 = !{!4331, !4332, !4333, !4334}
!4331 = !DILocalVariable(name: "tstate", arg: 1, scope: !4327, file: !21, line: 6848, type: !1260)
!4332 = !DILocalVariable(name: "err", arg: 2, scope: !4327, file: !21, line: 6848, type: !28)
!4333 = !DILocalVariable(name: "result", scope: !4327, file: !21, line: 6849, type: !7)
!4334 = !DILocalVariable(name: "exc_type", scope: !4327, file: !21, line: 6850, type: !28)
!4335 = !DILocation(line: 6848, column: 77, scope: !4327)
!4336 = !DILocation(line: 6848, column: 95, scope: !4327)
!4337 = !DILocation(line: 6849, column: 5, scope: !4327)
!4338 = !DILocation(line: 6849, column: 9, scope: !4327)
!4339 = !DILocation(line: 6850, column: 5, scope: !4327)
!4340 = !DILocation(line: 6850, column: 15, scope: !4327)
!4341 = !DILocation(line: 6857, column: 16, scope: !4327)
!4342 = !DILocation(line: 6857, column: 24, scope: !4327)
!4343 = !DILocation(line: 6857, column: 14, scope: !4327)
!4344 = !DILocation(line: 6858, column: 9, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4327, file: !21, line: 6858, column: 9)
!4346 = !DILocation(line: 6858, column: 21, scope: !4345)
!4347 = !DILocation(line: 6858, column: 18, scope: !4345)
!4348 = !DILocation(line: 6858, column: 9, scope: !4327)
!4349 = !DILocation(line: 6858, column: 26, scope: !4345)
!4350 = !DILocation(line: 6859, column: 9, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4327, file: !21, line: 6859, column: 9)
!4352 = !DILocation(line: 6859, column: 9, scope: !4327)
!4353 = !DILocation(line: 6859, column: 30, scope: !4351)
!4354 = !DILocation(line: 6864, column: 9, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4327, file: !21, line: 6864, column: 9)
!4356 = !DILocation(line: 6864, column: 9, scope: !4327)
!4357 = !DILocation(line: 6865, column: 52, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4355, file: !21, line: 6864, column: 39)
!4359 = !DILocation(line: 6865, column: 62, scope: !4358)
!4360 = !DILocation(line: 6865, column: 18, scope: !4358)
!4361 = !DILocation(line: 6865, column: 16, scope: !4358)
!4362 = !DILocation(line: 6866, column: 5, scope: !4358)
!4363 = !DILocation(line: 6867, column: 52, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4355, file: !21, line: 6866, column: 12)
!4365 = !DILocation(line: 6867, column: 62, scope: !4364)
!4366 = !DILocation(line: 6867, column: 18, scope: !4364)
!4367 = !DILocation(line: 6867, column: 16, scope: !4364)
!4368 = !DILocation(line: 6872, column: 12, scope: !4327)
!4369 = !DILocation(line: 6872, column: 5, scope: !4327)
!4370 = !DILocation(line: 6873, column: 1, scope: !4327)
!4371 = distinct !DISubprogram(name: "__Pyx_ErrRestoreInState", scope: !21, file: !21, line: 6878, type: !4372, scopeLine: 6878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{null, !1260, !28, !28, !28}
!4374 = !{!4375, !4376, !4377, !4378, !4379, !4380, !4381}
!4375 = !DILocalVariable(name: "tstate", arg: 1, scope: !4371, file: !21, line: 6878, type: !1260)
!4376 = !DILocalVariable(name: "type", arg: 2, scope: !4371, file: !21, line: 6878, type: !28)
!4377 = !DILocalVariable(name: "value", arg: 3, scope: !4371, file: !21, line: 6878, type: !28)
!4378 = !DILocalVariable(name: "tb", arg: 4, scope: !4371, file: !21, line: 6878, type: !28)
!4379 = !DILocalVariable(name: "tmp_type", scope: !4371, file: !21, line: 6894, type: !28)
!4380 = !DILocalVariable(name: "tmp_value", scope: !4371, file: !21, line: 6894, type: !28)
!4381 = !DILocalVariable(name: "tmp_tb", scope: !4371, file: !21, line: 6894, type: !28)
!4382 = !DILocation(line: 6878, column: 66, scope: !4371)
!4383 = !DILocation(line: 6878, column: 84, scope: !4371)
!4384 = !DILocation(line: 6878, column: 100, scope: !4371)
!4385 = !DILocation(line: 6878, column: 117, scope: !4371)
!4386 = !DILocation(line: 6894, column: 5, scope: !4371)
!4387 = !DILocation(line: 6894, column: 15, scope: !4371)
!4388 = !DILocation(line: 6894, column: 26, scope: !4371)
!4389 = !DILocation(line: 6894, column: 38, scope: !4371)
!4390 = !DILocation(line: 6895, column: 16, scope: !4371)
!4391 = !DILocation(line: 6895, column: 24, scope: !4371)
!4392 = !DILocation(line: 6895, column: 14, scope: !4371)
!4393 = !DILocation(line: 6896, column: 17, scope: !4371)
!4394 = !DILocation(line: 6896, column: 25, scope: !4371)
!4395 = !{!2053, !1462, i64 104}
!4396 = !DILocation(line: 6896, column: 15, scope: !4371)
!4397 = !DILocation(line: 6897, column: 14, scope: !4371)
!4398 = !DILocation(line: 6897, column: 22, scope: !4371)
!4399 = !{!2053, !1462, i64 112}
!4400 = !DILocation(line: 6897, column: 12, scope: !4371)
!4401 = !DILocation(line: 6898, column: 27, scope: !4371)
!4402 = !DILocation(line: 6898, column: 5, scope: !4371)
!4403 = !DILocation(line: 6898, column: 13, scope: !4371)
!4404 = !DILocation(line: 6898, column: 25, scope: !4371)
!4405 = !DILocation(line: 6899, column: 28, scope: !4371)
!4406 = !DILocation(line: 6899, column: 5, scope: !4371)
!4407 = !DILocation(line: 6899, column: 13, scope: !4371)
!4408 = !DILocation(line: 6899, column: 26, scope: !4371)
!4409 = !DILocation(line: 6900, column: 32, scope: !4371)
!4410 = !DILocation(line: 6900, column: 5, scope: !4371)
!4411 = !DILocation(line: 6900, column: 13, scope: !4371)
!4412 = !DILocation(line: 6900, column: 30, scope: !4371)
!4413 = !DILocation(line: 6901, column: 5, scope: !4371)
!4414 = !DILocation(line: 6902, column: 5, scope: !4371)
!4415 = !DILocation(line: 6903, column: 5, scope: !4371)
!4416 = !DILocation(line: 6905, column: 1, scope: !4371)
!4417 = distinct !DISubprogram(name: "PyType_HasFeature", scope: !6, file: !6, line: 763, type: !4418, scopeLine: 764, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4420)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!7, !42, !238}
!4420 = !{!4421, !4422, !4423}
!4421 = !DILocalVariable(name: "type", arg: 1, scope: !4417, file: !6, line: 763, type: !42)
!4422 = !DILocalVariable(name: "feature", arg: 2, scope: !4417, file: !6, line: 763, type: !238)
!4423 = !DILocalVariable(name: "flags", scope: !4417, file: !6, line: 765, type: !238)
!4424 = !DILocation(line: 763, column: 33, scope: !4417)
!4425 = !DILocation(line: 763, column: 53, scope: !4417)
!4426 = !DILocation(line: 765, column: 5, scope: !4417)
!4427 = !DILocation(line: 765, column: 19, scope: !4417)
!4428 = !DILocation(line: 770, column: 13, scope: !4417)
!4429 = !DILocation(line: 770, column: 19, scope: !4417)
!4430 = !{!1897, !1837, i64 168}
!4431 = !DILocation(line: 770, column: 11, scope: !4417)
!4432 = !DILocation(line: 772, column: 14, scope: !4417)
!4433 = !DILocation(line: 772, column: 22, scope: !4417)
!4434 = !DILocation(line: 772, column: 20, scope: !4417)
!4435 = !DILocation(line: 772, column: 31, scope: !4417)
!4436 = !DILocation(line: 773, column: 1, scope: !4417)
!4437 = !DILocation(line: 772, column: 5, scope: !4417)
!4438 = distinct !DISubprogram(name: "__Pyx_PyErr_ExceptionMatchesTuple", scope: !21, file: !21, line: 6835, type: !177, scopeLine: 6835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4439)
!4439 = !{!4440, !4441, !4442, !4443}
!4440 = !DILocalVariable(name: "exc_type", arg: 1, scope: !4438, file: !21, line: 6835, type: !28)
!4441 = !DILocalVariable(name: "tuple", arg: 2, scope: !4438, file: !21, line: 6835, type: !28)
!4442 = !DILocalVariable(name: "i", scope: !4438, file: !21, line: 6836, type: !34)
!4443 = !DILocalVariable(name: "n", scope: !4438, file: !21, line: 6836, type: !34)
!4444 = !DILocation(line: 6835, column: 56, scope: !4438)
!4445 = !DILocation(line: 6835, column: 76, scope: !4438)
!4446 = !DILocation(line: 6836, column: 5, scope: !4438)
!4447 = !DILocation(line: 6836, column: 16, scope: !4438)
!4448 = !DILocation(line: 6836, column: 19, scope: !4438)
!4449 = !DILocation(line: 6837, column: 9, scope: !4438)
!4450 = !DILocation(line: 6837, column: 7, scope: !4438)
!4451 = !DILocation(line: 6839, column: 11, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4438, file: !21, line: 6839, column: 5)
!4453 = !DILocation(line: 6839, column: 10, scope: !4452)
!4454 = !DILocation(line: 6839, column: 15, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4452, file: !21, line: 6839, column: 5)
!4456 = !DILocation(line: 6839, column: 17, scope: !4455)
!4457 = !DILocation(line: 6839, column: 16, scope: !4455)
!4458 = !DILocation(line: 6839, column: 5, scope: !4452)
!4459 = !DILocation(line: 6840, column: 13, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !21, line: 6840, column: 13)
!4461 = distinct !DILexicalBlock(scope: !4455, file: !21, line: 6839, column: 25)
!4462 = !DILocation(line: 6840, column: 25, scope: !4460)
!4463 = !DILocation(line: 6840, column: 22, scope: !4460)
!4464 = !DILocation(line: 6840, column: 13, scope: !4461)
!4465 = !DILocation(line: 6840, column: 53, scope: !4460)
!4466 = !DILocation(line: 6841, column: 5, scope: !4461)
!4467 = !DILocation(line: 6839, column: 21, scope: !4455)
!4468 = !DILocation(line: 6839, column: 5, scope: !4455)
!4469 = distinct !{!4469, !4458, !4470, !4154}
!4470 = !DILocation(line: 6841, column: 5, scope: !4452)
!4471 = !DILocation(line: 6843, column: 11, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4438, file: !21, line: 6843, column: 5)
!4473 = !DILocation(line: 6843, column: 10, scope: !4472)
!4474 = !DILocation(line: 6843, column: 15, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4472, file: !21, line: 6843, column: 5)
!4476 = !DILocation(line: 6843, column: 17, scope: !4475)
!4477 = !DILocation(line: 6843, column: 16, scope: !4475)
!4478 = !DILocation(line: 6843, column: 5, scope: !4472)
!4479 = !DILocation(line: 6844, column: 47, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !21, line: 6844, column: 13)
!4481 = distinct !DILexicalBlock(scope: !4475, file: !21, line: 6843, column: 25)
!4482 = !DILocation(line: 6844, column: 57, scope: !4480)
!4483 = !DILocation(line: 6844, column: 13, scope: !4480)
!4484 = !DILocation(line: 6844, column: 13, scope: !4481)
!4485 = !DILocation(line: 6844, column: 86, scope: !4480)
!4486 = !DILocation(line: 6845, column: 5, scope: !4481)
!4487 = !DILocation(line: 6843, column: 21, scope: !4475)
!4488 = !DILocation(line: 6843, column: 5, scope: !4475)
!4489 = distinct !{!4489, !4478, !4490, !4154}
!4490 = !DILocation(line: 6845, column: 5, scope: !4472)
!4491 = !DILocation(line: 6846, column: 5, scope: !4438)
!4492 = !DILocation(line: 6847, column: 1, scope: !4438)
!4493 = distinct !DISubprogram(name: "__Pyx_PyErr_GivenExceptionMatches", scope: !21, file: !21, line: 10965, type: !177, scopeLine: 10965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4494)
!4494 = !{!4495, !4496}
!4495 = !DILocalVariable(name: "err", arg: 1, scope: !4493, file: !21, line: 10965, type: !28)
!4496 = !DILocalVariable(name: "exc_type", arg: 2, scope: !4493, file: !21, line: 10965, type: !28)
!4497 = !DILocation(line: 10965, column: 70, scope: !4493)
!4498 = !DILocation(line: 10965, column: 85, scope: !4493)
!4499 = !DILocation(line: 10966, column: 9, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4493, file: !21, line: 10966, column: 9)
!4501 = !DILocation(line: 10966, column: 9, scope: !4493)
!4502 = !DILocation(line: 10966, column: 34, scope: !4500)
!4503 = !DILocation(line: 10967, column: 9, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4493, file: !21, line: 10967, column: 9)
!4505 = !DILocation(line: 0, scope: !4504)
!4506 = !DILocation(line: 10967, column: 9, scope: !4493)
!4507 = !DILocation(line: 10968, column: 13, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !21, line: 10968, column: 13)
!4509 = distinct !DILexicalBlock(scope: !4504, file: !21, line: 10967, column: 46)
!4510 = !DILocation(line: 0, scope: !4508)
!4511 = !DILocation(line: 10968, column: 13, scope: !4509)
!4512 = !DILocation(line: 10969, column: 61, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4508, file: !21, line: 10968, column: 55)
!4514 = !DILocation(line: 10969, column: 72, scope: !4513)
!4515 = !DILocation(line: 10969, column: 20, scope: !4513)
!4516 = !DILocation(line: 10969, column: 13, scope: !4513)
!4517 = !DILocation(line: 10970, column: 20, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4508, file: !21, line: 10970, column: 20)
!4519 = !DILocation(line: 10970, column: 20, scope: !4508)
!4520 = !DILocation(line: 10971, column: 59, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4518, file: !21, line: 10970, column: 53)
!4522 = !DILocation(line: 10971, column: 64, scope: !4521)
!4523 = !DILocation(line: 10971, column: 20, scope: !4521)
!4524 = !DILocation(line: 10971, column: 13, scope: !4521)
!4525 = !DILocation(line: 10974, column: 5, scope: !4509)
!4526 = !DILocation(line: 10975, column: 40, scope: !4493)
!4527 = !DILocation(line: 10975, column: 45, scope: !4493)
!4528 = !DILocation(line: 10975, column: 12, scope: !4493)
!4529 = !DILocation(line: 10975, column: 5, scope: !4493)
!4530 = !DILocation(line: 10976, column: 1, scope: !4493)
!4531 = distinct !DISubprogram(name: "PyTuple_GET_SIZE", scope: !345, file: !345, line: 22, type: !158, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4532)
!4532 = !{!4533, !4534}
!4533 = !DILocalVariable(name: "op", arg: 1, scope: !4531, file: !345, line: 22, type: !28)
!4534 = !DILocalVariable(name: "tuple", scope: !4531, file: !345, line: 23, type: !343)
!4535 = !DILocation(line: 22, column: 53, scope: !4531)
!4536 = !DILocation(line: 23, column: 5, scope: !4531)
!4537 = !DILocation(line: 23, column: 20, scope: !4531)
!4538 = !DILocation(line: 23, column: 28, scope: !4531)
!4539 = !DILocation(line: 24, column: 12, scope: !4531)
!4540 = !DILocation(line: 25, column: 1, scope: !4531)
!4541 = !DILocation(line: 24, column: 5, scope: !4531)
!4542 = distinct !DISubprogram(name: "PyType_Check", scope: !6, file: !6, line: 777, type: !122, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4543)
!4543 = !{!4544}
!4544 = !DILocalVariable(name: "op", arg: 1, scope: !4542, file: !6, line: 777, type: !28)
!4545 = !DILocation(line: 777, column: 42, scope: !4542)
!4546 = !DILocation(line: 778, column: 12, scope: !4542)
!4547 = !DILocation(line: 778, column: 5, scope: !4542)
!4548 = distinct !DISubprogram(name: "__Pyx_inner_PyErr_GivenExceptionMatches2", scope: !21, file: !21, line: 10936, type: !191, scopeLine: 10936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4549)
!4549 = !{!4550, !4551, !4552}
!4550 = !DILocalVariable(name: "err", arg: 1, scope: !4548, file: !21, line: 10936, type: !28)
!4551 = !DILocalVariable(name: "exc_type1", arg: 2, scope: !4548, file: !21, line: 10936, type: !28)
!4552 = !DILocalVariable(name: "exc_type2", arg: 3, scope: !4548, file: !21, line: 10936, type: !28)
!4553 = !DILocation(line: 10936, column: 77, scope: !4548)
!4554 = !DILocation(line: 10936, column: 92, scope: !4548)
!4555 = !DILocation(line: 10936, column: 113, scope: !4548)
!4556 = !DILocation(line: 10937, column: 9, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4548, file: !21, line: 10937, column: 9)
!4558 = !DILocation(line: 10937, column: 9, scope: !4548)
!4559 = !DILocation(line: 10938, column: 51, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4557, file: !21, line: 10937, column: 20)
!4561 = !DILocation(line: 10938, column: 71, scope: !4560)
!4562 = !DILocation(line: 10938, column: 97, scope: !4560)
!4563 = !DILocation(line: 10938, column: 16, scope: !4560)
!4564 = !DILocation(line: 10938, column: 9, scope: !4560)
!4565 = !DILocation(line: 10940, column: 47, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4557, file: !21, line: 10939, column: 12)
!4567 = !DILocation(line: 10940, column: 67, scope: !4566)
!4568 = !DILocation(line: 10940, column: 16, scope: !4566)
!4569 = !DILocation(line: 10940, column: 9, scope: !4566)
!4570 = !DILocation(line: 10942, column: 1, scope: !4548)
!4571 = distinct !DISubprogram(name: "__Pyx_PyErr_GivenExceptionMatchesTuple", scope: !21, file: !21, line: 10944, type: !177, scopeLine: 10944, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4572)
!4572 = !{!4573, !4574, !4575, !4576, !4577}
!4573 = !DILocalVariable(name: "exc_type", arg: 1, scope: !4571, file: !21, line: 10944, type: !28)
!4574 = !DILocalVariable(name: "tuple", arg: 2, scope: !4571, file: !21, line: 10944, type: !28)
!4575 = !DILocalVariable(name: "i", scope: !4571, file: !21, line: 10945, type: !34)
!4576 = !DILocalVariable(name: "n", scope: !4571, file: !21, line: 10945, type: !34)
!4577 = !DILocalVariable(name: "t", scope: !4578, file: !21, line: 10954, type: !28)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !21, line: 10953, column: 25)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !21, line: 10953, column: 5)
!4580 = distinct !DILexicalBlock(scope: !4571, file: !21, line: 10953, column: 5)
!4581 = !DILocation(line: 10944, column: 61, scope: !4571)
!4582 = !DILocation(line: 10944, column: 81, scope: !4571)
!4583 = !DILocation(line: 10945, column: 5, scope: !4571)
!4584 = !DILocation(line: 10945, column: 16, scope: !4571)
!4585 = !DILocation(line: 10945, column: 19, scope: !4571)
!4586 = !DILocation(line: 10947, column: 9, scope: !4571)
!4587 = !DILocation(line: 10947, column: 7, scope: !4571)
!4588 = !DILocation(line: 10949, column: 11, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4571, file: !21, line: 10949, column: 5)
!4590 = !DILocation(line: 10949, column: 10, scope: !4589)
!4591 = !DILocation(line: 10949, column: 15, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4589, file: !21, line: 10949, column: 5)
!4593 = !DILocation(line: 10949, column: 17, scope: !4592)
!4594 = !DILocation(line: 10949, column: 16, scope: !4592)
!4595 = !DILocation(line: 10949, column: 5, scope: !4589)
!4596 = !DILocation(line: 10950, column: 13, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !21, line: 10950, column: 13)
!4598 = distinct !DILexicalBlock(scope: !4592, file: !21, line: 10949, column: 25)
!4599 = !DILocation(line: 10950, column: 25, scope: !4597)
!4600 = !DILocation(line: 10950, column: 22, scope: !4597)
!4601 = !DILocation(line: 10950, column: 13, scope: !4598)
!4602 = !DILocation(line: 10950, column: 53, scope: !4597)
!4603 = !DILocation(line: 10951, column: 5, scope: !4598)
!4604 = !DILocation(line: 10949, column: 21, scope: !4592)
!4605 = !DILocation(line: 10949, column: 5, scope: !4592)
!4606 = distinct !{!4606, !4595, !4607, !4154}
!4607 = !DILocation(line: 10951, column: 5, scope: !4589)
!4608 = !DILocation(line: 10953, column: 11, scope: !4580)
!4609 = !DILocation(line: 10953, column: 10, scope: !4580)
!4610 = !DILocation(line: 10953, column: 15, scope: !4579)
!4611 = !DILocation(line: 10953, column: 17, scope: !4579)
!4612 = !DILocation(line: 10953, column: 16, scope: !4579)
!4613 = !DILocation(line: 10953, column: 5, scope: !4580)
!4614 = !DILocation(line: 10954, column: 9, scope: !4578)
!4615 = !DILocation(line: 10954, column: 19, scope: !4578)
!4616 = !DILocation(line: 10954, column: 23, scope: !4578)
!4617 = !DILocation(line: 10958, column: 13, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4578, file: !21, line: 10958, column: 13)
!4619 = !DILocation(line: 0, scope: !4618)
!4620 = !DILocation(line: 10958, column: 13, scope: !4578)
!4621 = !DILocation(line: 10959, column: 58, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !21, line: 10959, column: 17)
!4623 = distinct !DILexicalBlock(scope: !4618, file: !21, line: 10958, column: 48)
!4624 = !DILocation(line: 10959, column: 74, scope: !4622)
!4625 = !DILocation(line: 10959, column: 17, scope: !4622)
!4626 = !DILocation(line: 10959, column: 17, scope: !4623)
!4627 = !DILocation(line: 10959, column: 78, scope: !4622)
!4628 = !DILocation(line: 10960, column: 9, scope: !4623)
!4629 = !DILocation(line: 10962, column: 5, scope: !4579)
!4630 = !DILocation(line: 10962, column: 5, scope: !4578)
!4631 = !DILocation(line: 10953, column: 21, scope: !4579)
!4632 = !DILocation(line: 10953, column: 5, scope: !4579)
!4633 = distinct !{!4633, !4613, !4634, !4154}
!4634 = !DILocation(line: 10962, column: 5, scope: !4580)
!4635 = !DILocation(line: 10963, column: 5, scope: !4571)
!4636 = !DILocation(line: 10964, column: 1, scope: !4571)
!4637 = !DISubprogram(name: "PyErr_GivenExceptionMatches", scope: !2182, file: !2182, line: 38, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4638 = distinct !DISubprogram(name: "__Pyx_IsAnySubtype2", scope: !21, file: !21, line: 10897, type: !4639, scopeLine: 10897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4641)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!7, !42, !42, !42}
!4641 = !{!4642, !4643, !4644, !4645, !4646, !4649, !4650}
!4642 = !DILocalVariable(name: "cls", arg: 1, scope: !4638, file: !21, line: 10897, type: !42)
!4643 = !DILocalVariable(name: "a", arg: 2, scope: !4638, file: !21, line: 10897, type: !42)
!4644 = !DILocalVariable(name: "b", arg: 3, scope: !4638, file: !21, line: 10897, type: !42)
!4645 = !DILocalVariable(name: "mro", scope: !4638, file: !21, line: 10898, type: !28)
!4646 = !DILocalVariable(name: "i", scope: !4647, file: !21, line: 10902, type: !34)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !21, line: 10901, column: 22)
!4648 = distinct !DILexicalBlock(scope: !4638, file: !21, line: 10901, column: 9)
!4649 = !DILocalVariable(name: "n", scope: !4647, file: !21, line: 10902, type: !34)
!4650 = !DILocalVariable(name: "base", scope: !4651, file: !21, line: 10905, type: !28)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !21, line: 10904, column: 33)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !21, line: 10904, column: 9)
!4653 = distinct !DILexicalBlock(scope: !4647, file: !21, line: 10904, column: 9)
!4654 = !DILocation(line: 10897, column: 60, scope: !4638)
!4655 = !DILocation(line: 10897, column: 79, scope: !4638)
!4656 = !DILocation(line: 10897, column: 96, scope: !4638)
!4657 = !DILocation(line: 10898, column: 5, scope: !4638)
!4658 = !DILocation(line: 10898, column: 15, scope: !4638)
!4659 = !DILocation(line: 10899, column: 9, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4638, file: !21, line: 10899, column: 9)
!4661 = !DILocation(line: 10899, column: 16, scope: !4660)
!4662 = !DILocation(line: 10899, column: 13, scope: !4660)
!4663 = !DILocation(line: 10899, column: 18, scope: !4660)
!4664 = !DILocation(line: 10899, column: 21, scope: !4660)
!4665 = !DILocation(line: 10899, column: 28, scope: !4660)
!4666 = !DILocation(line: 10899, column: 25, scope: !4660)
!4667 = !DILocation(line: 10899, column: 9, scope: !4638)
!4668 = !DILocation(line: 10899, column: 31, scope: !4660)
!4669 = !DILocation(line: 10900, column: 11, scope: !4638)
!4670 = !DILocation(line: 10900, column: 16, scope: !4638)
!4671 = !{!1897, !1462, i64 344}
!4672 = !DILocation(line: 10900, column: 9, scope: !4638)
!4673 = !DILocation(line: 10901, column: 9, scope: !4648)
!4674 = !DILocation(line: 10901, column: 9, scope: !4638)
!4675 = !DILocation(line: 10902, column: 9, scope: !4647)
!4676 = !DILocation(line: 10902, column: 20, scope: !4647)
!4677 = !DILocation(line: 10902, column: 23, scope: !4647)
!4678 = !DILocation(line: 10903, column: 13, scope: !4647)
!4679 = !DILocation(line: 10903, column: 11, scope: !4647)
!4680 = !DILocation(line: 10904, column: 16, scope: !4653)
!4681 = !DILocation(line: 10904, column: 14, scope: !4653)
!4682 = !DILocation(line: 10904, column: 21, scope: !4652)
!4683 = !DILocation(line: 10904, column: 25, scope: !4652)
!4684 = !DILocation(line: 10904, column: 23, scope: !4652)
!4685 = !DILocation(line: 10904, column: 9, scope: !4653)
!4686 = !DILocation(line: 10905, column: 13, scope: !4651)
!4687 = !DILocation(line: 10905, column: 23, scope: !4651)
!4688 = !DILocation(line: 10905, column: 30, scope: !4651)
!4689 = !DILocation(line: 10906, column: 17, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4651, file: !21, line: 10906, column: 17)
!4691 = !DILocation(line: 10906, column: 37, scope: !4690)
!4692 = !DILocation(line: 10906, column: 22, scope: !4690)
!4693 = !DILocation(line: 10906, column: 39, scope: !4690)
!4694 = !DILocation(line: 10906, column: 42, scope: !4690)
!4695 = !DILocation(line: 10906, column: 62, scope: !4690)
!4696 = !DILocation(line: 10906, column: 47, scope: !4690)
!4697 = !DILocation(line: 10906, column: 17, scope: !4651)
!4698 = !DILocation(line: 10907, column: 17, scope: !4690)
!4699 = !DILocation(line: 10908, column: 9, scope: !4652)
!4700 = !DILocation(line: 10908, column: 9, scope: !4651)
!4701 = !DILocation(line: 10904, column: 29, scope: !4652)
!4702 = !DILocation(line: 10904, column: 9, scope: !4652)
!4703 = distinct !{!4703, !4685, !4704, !4154}
!4704 = !DILocation(line: 10908, column: 9, scope: !4653)
!4705 = !DILocation(line: 10909, column: 9, scope: !4647)
!4706 = !DILocation(line: 10910, column: 5, scope: !4648)
!4707 = !DILocation(line: 10911, column: 26, scope: !4638)
!4708 = !DILocation(line: 10911, column: 31, scope: !4638)
!4709 = !DILocation(line: 10911, column: 12, scope: !4638)
!4710 = !DILocation(line: 10911, column: 34, scope: !4638)
!4711 = !DILocation(line: 10911, column: 51, scope: !4638)
!4712 = !DILocation(line: 10911, column: 56, scope: !4638)
!4713 = !DILocation(line: 10911, column: 37, scope: !4638)
!4714 = !DILocation(line: 10911, column: 5, scope: !4638)
!4715 = !DILocation(line: 10912, column: 1, scope: !4638)
!4716 = distinct !DISubprogram(name: "__Pyx_IsSubtype", scope: !21, file: !21, line: 10882, type: !4717, scopeLine: 10882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4719)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!7, !42, !42}
!4719 = !{!4720, !4721, !4722, !4723, !4726}
!4720 = !DILocalVariable(name: "a", arg: 1, scope: !4716, file: !21, line: 10882, type: !42)
!4721 = !DILocalVariable(name: "b", arg: 2, scope: !4716, file: !21, line: 10882, type: !42)
!4722 = !DILocalVariable(name: "mro", scope: !4716, file: !21, line: 10883, type: !28)
!4723 = !DILocalVariable(name: "i", scope: !4724, file: !21, line: 10887, type: !34)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !21, line: 10886, column: 22)
!4725 = distinct !DILexicalBlock(scope: !4716, file: !21, line: 10886, column: 9)
!4726 = !DILocalVariable(name: "n", scope: !4724, file: !21, line: 10887, type: !34)
!4727 = !DILocation(line: 10882, column: 56, scope: !4716)
!4728 = !DILocation(line: 10882, column: 73, scope: !4716)
!4729 = !DILocation(line: 10883, column: 5, scope: !4716)
!4730 = !DILocation(line: 10883, column: 15, scope: !4716)
!4731 = !DILocation(line: 10884, column: 9, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4716, file: !21, line: 10884, column: 9)
!4733 = !DILocation(line: 10884, column: 14, scope: !4732)
!4734 = !DILocation(line: 10884, column: 11, scope: !4732)
!4735 = !DILocation(line: 10884, column: 9, scope: !4716)
!4736 = !DILocation(line: 10884, column: 17, scope: !4732)
!4737 = !DILocation(line: 10885, column: 11, scope: !4716)
!4738 = !DILocation(line: 10885, column: 14, scope: !4716)
!4739 = !DILocation(line: 10885, column: 9, scope: !4716)
!4740 = !DILocation(line: 10886, column: 9, scope: !4725)
!4741 = !DILocation(line: 10886, column: 9, scope: !4716)
!4742 = !DILocation(line: 10887, column: 9, scope: !4724)
!4743 = !DILocation(line: 10887, column: 20, scope: !4724)
!4744 = !DILocation(line: 10887, column: 23, scope: !4724)
!4745 = !DILocation(line: 10888, column: 13, scope: !4724)
!4746 = !DILocation(line: 10888, column: 11, scope: !4724)
!4747 = !DILocation(line: 10889, column: 16, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4724, file: !21, line: 10889, column: 9)
!4749 = !DILocation(line: 10889, column: 14, scope: !4748)
!4750 = !DILocation(line: 10889, column: 21, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !21, line: 10889, column: 9)
!4752 = !DILocation(line: 10889, column: 25, scope: !4751)
!4753 = !DILocation(line: 10889, column: 23, scope: !4751)
!4754 = !DILocation(line: 10889, column: 9, scope: !4748)
!4755 = !DILocation(line: 10890, column: 17, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !21, line: 10890, column: 17)
!4757 = distinct !DILexicalBlock(scope: !4751, file: !21, line: 10889, column: 33)
!4758 = !DILocation(line: 10890, column: 57, scope: !4756)
!4759 = !DILocation(line: 10890, column: 42, scope: !4756)
!4760 = !DILocation(line: 10890, column: 17, scope: !4757)
!4761 = !DILocation(line: 10891, column: 17, scope: !4756)
!4762 = !DILocation(line: 10892, column: 9, scope: !4757)
!4763 = !DILocation(line: 10889, column: 29, scope: !4751)
!4764 = !DILocation(line: 10889, column: 9, scope: !4751)
!4765 = distinct !{!4765, !4754, !4766, !4154}
!4766 = !DILocation(line: 10892, column: 9, scope: !4748)
!4767 = !DILocation(line: 10893, column: 9, scope: !4724)
!4768 = !DILocation(line: 10894, column: 5, scope: !4725)
!4769 = !DILocation(line: 10895, column: 26, scope: !4716)
!4770 = !DILocation(line: 10895, column: 29, scope: !4716)
!4771 = !DILocation(line: 10895, column: 12, scope: !4716)
!4772 = !DILocation(line: 10895, column: 5, scope: !4716)
!4773 = !DILocation(line: 10896, column: 1, scope: !4716)
!4774 = distinct !DISubprogram(name: "__Pyx_InBases", scope: !21, file: !21, line: 10874, type: !4717, scopeLine: 10874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4775)
!4775 = !{!4776, !4777}
!4776 = !DILocalVariable(name: "a", arg: 1, scope: !4774, file: !21, line: 10874, type: !42)
!4777 = !DILocalVariable(name: "b", arg: 2, scope: !4774, file: !21, line: 10874, type: !42)
!4778 = !DILocation(line: 10874, column: 40, scope: !4774)
!4779 = !DILocation(line: 10874, column: 57, scope: !4774)
!4780 = !DILocation(line: 10875, column: 5, scope: !4774)
!4781 = !DILocation(line: 10875, column: 12, scope: !4774)
!4782 = !DILocation(line: 10876, column: 13, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4774, file: !21, line: 10875, column: 15)
!4784 = !{!1897, !1462, i64 256}
!4785 = !DILocation(line: 10876, column: 11, scope: !4783)
!4786 = !DILocation(line: 10877, column: 13, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4783, file: !21, line: 10877, column: 13)
!4788 = !DILocation(line: 10877, column: 18, scope: !4787)
!4789 = !DILocation(line: 10877, column: 15, scope: !4787)
!4790 = !DILocation(line: 10877, column: 13, scope: !4783)
!4791 = !DILocation(line: 10878, column: 13, scope: !4787)
!4792 = distinct !{!4792, !4780, !4793, !4154}
!4793 = !DILocation(line: 10879, column: 5, scope: !4774)
!4794 = !DILocation(line: 10880, column: 12, scope: !4774)
!4795 = !DILocation(line: 10880, column: 14, scope: !4774)
!4796 = !DILocation(line: 10880, column: 5, scope: !4774)
!4797 = !DILocation(line: 10881, column: 1, scope: !4774)
!4798 = !DISubprogram(name: "PyTuple_Pack", scope: !2263, file: !2263, line: 35, type: !4799, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4799 = !DISubroutineType(types: !4800)
!4800 = !{!28, !34, null}
!4801 = !DILocation(line: 3074, column: 122, scope: !939)
!4802 = !DILocation(line: 3074, column: 146, scope: !939)
!4803 = !DILocation(line: 3074, column: 170, scope: !939)
!4804 = !DILocation(line: 3074, column: 190, scope: !939)
!4805 = !DILocation(line: 3075, column: 3, scope: !939)
!4806 = !DILocation(line: 3075, column: 13, scope: !939)
!4807 = !DILocation(line: 3076, column: 3, scope: !939)
!4808 = !DILocation(line: 3076, column: 13, scope: !939)
!4809 = !DILocation(line: 3077, column: 3, scope: !939)
!4810 = !DILocation(line: 3077, column: 13, scope: !939)
!4811 = !DILocation(line: 3078, column: 3, scope: !939)
!4812 = !DILocation(line: 3078, column: 13, scope: !939)
!4813 = !DILocation(line: 3080, column: 3, scope: !939)
!4814 = !DILocation(line: 3080, column: 13, scope: !939)
!4815 = !DILocation(line: 3081, column: 3, scope: !939)
!4816 = !DILocation(line: 3081, column: 13, scope: !939)
!4817 = !DILocation(line: 3082, column: 3, scope: !939)
!4818 = !DILocation(line: 3082, column: 13, scope: !939)
!4819 = !DILocation(line: 3083, column: 3, scope: !939)
!4820 = !DILocation(line: 3083, column: 13, scope: !939)
!4821 = !DILocation(line: 3084, column: 3, scope: !939)
!4822 = !DILocation(line: 3084, column: 7, scope: !939)
!4823 = !DILocation(line: 3085, column: 3, scope: !939)
!4824 = !DILocation(line: 3085, column: 15, scope: !939)
!4825 = !DILocation(line: 3086, column: 3, scope: !939)
!4826 = !DILocation(line: 3086, column: 7, scope: !939)
!4827 = !DILocation(line: 3087, column: 3, scope: !939)
!4828 = !DILocation(line: 3087, column: 15, scope: !939)
!4829 = !DILocation(line: 3088, column: 3, scope: !939)
!4830 = !DILocation(line: 3088, column: 7, scope: !939)
!4831 = !DILocation(line: 3098, column: 3, scope: !939)
!4832 = !DILocation(line: 3098, column: 3, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3098, column: 3)
!4834 = !{!4835, !1837, i64 24}
!4835 = !{!"", !1871, i64 0, !1837, i64 16, !1837, i64 24, !1462, i64 32, !1462, i64 40}
!4836 = !DILocation(line: 3098, column: 64, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3098, column: 64)
!4838 = !DILocation(line: 3098, column: 64, scope: !939)
!4839 = !DILocation(line: 3098, column: 86, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !21, line: 3098, column: 86)
!4841 = distinct !DILexicalBlock(scope: !4837, file: !21, line: 3098, column: 86)
!4842 = !DILocation(line: 3098, column: 86, scope: !4841)
!4843 = !DILocation(line: 3100, column: 7, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3100, column: 7)
!4845 = !DILocation(line: 3100, column: 7, scope: !939)
!4846 = !DILocation(line: 3101, column: 5, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !21, line: 3100, column: 24)
!4848 = !{!1599, !1462, i64 96}
!4849 = !DILocation(line: 3102, column: 17, scope: !4847)
!4850 = !DILocation(line: 3102, column: 15, scope: !4847)
!4851 = !DILocation(line: 3103, column: 3, scope: !4847)
!4852 = !DILocation(line: 3104, column: 5, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4844, file: !21, line: 3103, column: 10)
!4854 = !DILocation(line: 3105, column: 17, scope: !4853)
!4855 = !DILocation(line: 3105, column: 15, scope: !4853)
!4856 = !DILocation(line: 3107, column: 33, scope: !939)
!4857 = !DILocation(line: 3107, column: 15, scope: !939)
!4858 = !DILocation(line: 3107, column: 13, scope: !939)
!4859 = !DILocation(line: 3107, column: 54, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3107, column: 54)
!4861 = !DILocation(line: 3107, column: 54, scope: !939)
!4862 = !DILocation(line: 3107, column: 76, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !21, line: 3107, column: 76)
!4864 = distinct !DILexicalBlock(scope: !4860, file: !21, line: 3107, column: 76)
!4865 = !DILocation(line: 3107, column: 76, scope: !4864)
!4866 = !DILocation(line: 3109, column: 54, scope: !939)
!4867 = !DILocation(line: 3109, column: 65, scope: !939)
!4868 = !{!1599, !1462, i64 424}
!4869 = !DILocation(line: 3109, column: 83, scope: !939)
!4870 = !DILocation(line: 3109, column: 94, scope: !939)
!4871 = !DILocation(line: 3109, column: 15, scope: !939)
!4872 = !DILocation(line: 3109, column: 13, scope: !939)
!4873 = !DILocation(line: 3109, column: 110, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3109, column: 110)
!4875 = !DILocation(line: 3109, column: 110, scope: !939)
!4876 = !DILocation(line: 3109, column: 132, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !21, line: 3109, column: 132)
!4878 = distinct !DILexicalBlock(scope: !4874, file: !21, line: 3109, column: 132)
!4879 = !DILocation(line: 3109, column: 132, scope: !4878)
!4880 = !DILocation(line: 3111, column: 3, scope: !939)
!4881 = !DILocation(line: 3111, column: 38, scope: !939)
!4882 = !DILocation(line: 3112, column: 3, scope: !939)
!4883 = !DILocation(line: 3112, column: 38, scope: !939)
!4884 = !DILocation(line: 3113, column: 3, scope: !939)
!4885 = !DILocation(line: 3113, column: 38, scope: !939)
!4886 = !DILocation(line: 3114, column: 3, scope: !939)
!4887 = !DILocation(line: 3114, column: 38, scope: !939)
!4888 = !DILocation(line: 3123, column: 7, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3123, column: 7)
!4890 = !DILocation(line: 3123, column: 7, scope: !939)
!4891 = !DILocation(line: 3132, column: 9, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !21, line: 3132, column: 9)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !21, line: 3123, column: 24)
!4894 = !{!2906, !1462, i64 48}
!4895 = !DILocation(line: 3132, column: 9, scope: !4893)
!4896 = !DILocation(line: 3133, column: 20, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4892, file: !21, line: 3132, column: 52)
!4898 = !DILocation(line: 3133, column: 7, scope: !4897)
!4899 = !DILocation(line: 3134, column: 7, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !21, line: 3134, column: 7)
!4901 = distinct !DILexicalBlock(scope: !4897, file: !21, line: 3134, column: 7)
!4902 = !DILocation(line: 3134, column: 7, scope: !4901)
!4903 = !DILocation(line: 3136, column: 49, scope: !4893)
!4904 = !DILocation(line: 3136, column: 17, scope: !4893)
!4905 = !DILocation(line: 3136, column: 15, scope: !4893)
!4906 = !DILocation(line: 3136, column: 83, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4893, file: !21, line: 3136, column: 83)
!4908 = !DILocation(line: 3136, column: 83, scope: !4893)
!4909 = !DILocation(line: 3136, column: 105, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !21, line: 3136, column: 105)
!4911 = distinct !DILexicalBlock(scope: !4907, file: !21, line: 3136, column: 105)
!4912 = !DILocation(line: 3136, column: 105, scope: !4911)
!4913 = !DILocation(line: 3138, column: 17, scope: !4893)
!4914 = !{!1599, !1462, i64 104}
!4915 = !DILocation(line: 3138, column: 15, scope: !4893)
!4916 = !DILocation(line: 3138, column: 90, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4893, file: !21, line: 3138, column: 90)
!4918 = !DILocation(line: 3138, column: 90, scope: !4893)
!4919 = !DILocation(line: 3138, column: 112, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !21, line: 3138, column: 112)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !21, line: 3138, column: 112)
!4922 = !DILocation(line: 3138, column: 112, scope: !4921)
!4923 = !DILocation(line: 3140, column: 5, scope: !4893)
!4924 = !DILocation(line: 3140, column: 40, scope: !4893)
!4925 = !DILocation(line: 3141, column: 37, scope: !4893)
!4926 = !DILocation(line: 3141, column: 51, scope: !4893)
!4927 = !DILocation(line: 3141, column: 59, scope: !4893)
!4928 = !DILocation(line: 3141, column: 17, scope: !4893)
!4929 = !DILocation(line: 3141, column: 15, scope: !4893)
!4930 = !DILocation(line: 3141, column: 75, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4893, file: !21, line: 3141, column: 75)
!4932 = !DILocation(line: 3141, column: 75, scope: !4893)
!4933 = !DILocation(line: 3141, column: 109, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !21, line: 3141, column: 109)
!4935 = distinct !DILexicalBlock(scope: !4931, file: !21, line: 3141, column: 109)
!4936 = !DILocation(line: 3141, column: 109, scope: !4935)
!4937 = !DILocation(line: 3142, column: 5, scope: !4893)
!4938 = !DILocation(line: 3142, column: 40, scope: !4893)
!4939 = !DILocation(line: 3151, column: 5, scope: !4893)
!4940 = !DILocation(line: 3152, column: 13, scope: !4893)
!4941 = !DILocation(line: 3152, column: 24, scope: !4893)
!4942 = !DILocation(line: 3153, column: 5, scope: !4893)
!4943 = !DILocation(line: 3171, column: 41, scope: !939)
!4944 = !DILocation(line: 3171, column: 59, scope: !939)
!4945 = !DILocation(line: 3171, column: 15, scope: !939)
!4946 = !DILocation(line: 3171, column: 13, scope: !939)
!4947 = !DILocation(line: 3171, column: 77, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3171, column: 77)
!4949 = !DILocation(line: 3171, column: 77, scope: !939)
!4950 = !DILocation(line: 3171, column: 99, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !21, line: 3171, column: 99)
!4952 = distinct !DILexicalBlock(scope: !4948, file: !21, line: 3171, column: 99)
!4953 = !DILocation(line: 3171, column: 99, scope: !4952)
!4954 = !DILocation(line: 3173, column: 17, scope: !939)
!4955 = !DILocation(line: 3173, column: 15, scope: !939)
!4956 = !DILocation(line: 3174, column: 13, scope: !939)
!4957 = !DILocation(line: 3183, column: 7, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3183, column: 7)
!4959 = !{!2906, !1462, i64 40}
!4960 = !DILocation(line: 3183, column: 7, scope: !939)
!4961 = !DILocation(line: 3184, column: 18, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !21, line: 3183, column: 48)
!4963 = !DILocation(line: 3184, column: 5, scope: !4962)
!4964 = !DILocation(line: 3185, column: 5, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !21, line: 3185, column: 5)
!4966 = distinct !DILexicalBlock(scope: !4962, file: !21, line: 3185, column: 5)
!4967 = !DILocation(line: 3185, column: 5, scope: !4966)
!4968 = !DILocation(line: 3187, column: 15, scope: !939)
!4969 = !DILocation(line: 3187, column: 13, scope: !939)
!4970 = !DILocation(line: 3187, column: 34, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3187, column: 34)
!4972 = !DILocation(line: 3187, column: 34, scope: !939)
!4973 = !DILocation(line: 3187, column: 56, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !21, line: 3187, column: 56)
!4975 = distinct !DILexicalBlock(scope: !4971, file: !21, line: 3187, column: 56)
!4976 = !DILocation(line: 3187, column: 56, scope: !4975)
!4977 = !DILocation(line: 3189, column: 15, scope: !939)
!4978 = !DILocation(line: 3189, column: 13, scope: !939)
!4979 = !DILocation(line: 3189, column: 35, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3189, column: 35)
!4981 = !DILocation(line: 3189, column: 35, scope: !939)
!4982 = !DILocation(line: 3189, column: 57, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !21, line: 3189, column: 57)
!4984 = distinct !DILexicalBlock(scope: !4980, file: !21, line: 3189, column: 57)
!4985 = !DILocation(line: 3189, column: 57, scope: !4984)
!4986 = !DILocation(line: 3191, column: 3, scope: !939)
!4987 = !DILocation(line: 3193, column: 7, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3193, column: 7)
!4989 = !DILocation(line: 3193, column: 7, scope: !939)
!4990 = !DILocation(line: 3193, column: 58, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4992, file: !21, line: 3193, column: 58)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !21, line: 3193, column: 58)
!4993 = !DILocation(line: 3193, column: 58, scope: !4992)
!4994 = !DILocation(line: 3195, column: 7, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3195, column: 7)
!4996 = !DILocation(line: 3195, column: 7, scope: !939)
!4997 = !DILocation(line: 3195, column: 56, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !21, line: 3195, column: 56)
!4999 = distinct !DILexicalBlock(scope: !4995, file: !21, line: 3195, column: 56)
!5000 = !DILocation(line: 3195, column: 56, scope: !4999)
!5001 = !DILocation(line: 3196, column: 13, scope: !939)
!5002 = !DILocation(line: 3197, column: 43, scope: !939)
!5003 = !DILocation(line: 3197, column: 57, scope: !939)
!5004 = !DILocation(line: 3197, column: 63, scope: !939)
!5005 = !DILocation(line: 3197, column: 76, scope: !939)
!5006 = !DILocation(line: 3197, column: 15, scope: !939)
!5007 = !DILocation(line: 3197, column: 13, scope: !939)
!5008 = !DILocation(line: 3197, column: 92, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3197, column: 92)
!5010 = !DILocation(line: 3197, column: 92, scope: !939)
!5011 = !DILocation(line: 3197, column: 114, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !21, line: 3197, column: 114)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !21, line: 3197, column: 114)
!5014 = !DILocation(line: 3197, column: 114, scope: !5013)
!5015 = !DILocation(line: 3199, column: 3, scope: !939)
!5016 = !DILocation(line: 3199, column: 38, scope: !939)
!5017 = !DILocation(line: 3200, column: 8, scope: !960)
!5018 = !DILocation(line: 3200, column: 47, scope: !960)
!5019 = !DILocation(line: 3200, column: 51, scope: !960)
!5020 = !DILocation(line: 3200, column: 7, scope: !939)
!5021 = !DILocation(line: 3201, column: 5, scope: !959)
!5022 = !DILocation(line: 3201, column: 15, scope: !959)
!5023 = !DILocation(line: 3201, column: 26, scope: !959)
!5024 = !DILocation(line: 3202, column: 5, scope: !959)
!5025 = !DILocation(line: 3202, column: 16, scope: !959)
!5026 = !DILocation(line: 3202, column: 23, scope: !959)
!5027 = !DILocation(line: 3203, column: 9, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !959, file: !21, line: 3203, column: 9)
!5029 = !DILocation(line: 3203, column: 9, scope: !959)
!5030 = !DILocation(line: 3204, column: 11, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !21, line: 3204, column: 11)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !21, line: 3203, column: 30)
!5033 = !DILocation(line: 3204, column: 16, scope: !5031)
!5034 = !DILocation(line: 3204, column: 11, scope: !5032)
!5035 = !DILocation(line: 3204, column: 21, scope: !5031)
!5036 = !DILocation(line: 3205, column: 16, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5031, file: !21, line: 3205, column: 16)
!5038 = !DILocation(line: 3205, column: 21, scope: !5037)
!5039 = !DILocation(line: 3205, column: 16, scope: !5031)
!5040 = !DILocation(line: 3205, column: 58, scope: !5037)
!5041 = !DILocation(line: 3205, column: 27, scope: !5037)
!5042 = !DILocation(line: 3206, column: 7, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5044, file: !21, line: 3206, column: 7)
!5044 = distinct !DILexicalBlock(scope: !5032, file: !21, line: 3206, column: 7)
!5045 = !DILocation(line: 3206, column: 7, scope: !5044)
!5046 = !DILocation(line: 3209, column: 9, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !959, file: !21, line: 3209, column: 9)
!5048 = !DILocation(line: 3209, column: 9, scope: !959)
!5049 = !DILocation(line: 3210, column: 19, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5047, file: !21, line: 3209, column: 47)
!5051 = !DILocation(line: 3210, column: 17, scope: !5050)
!5052 = !DILocation(line: 3211, column: 19, scope: !5050)
!5053 = !DILocation(line: 3211, column: 17, scope: !5050)
!5054 = !DILocation(line: 3212, column: 5, scope: !5050)
!5055 = !DILocation(line: 3213, column: 19, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5047, file: !21, line: 3212, column: 12)
!5057 = !DILocation(line: 3213, column: 17, scope: !5056)
!5058 = !DILocation(line: 3214, column: 19, scope: !5056)
!5059 = !DILocation(line: 3214, column: 17, scope: !5056)
!5060 = !DILocation(line: 3216, column: 5, scope: !959)
!5061 = !DILocation(line: 3217, column: 5, scope: !959)
!5062 = !DILocation(line: 3224, column: 5, scope: !959)
!5063 = !DILocation(line: 3224, column: 40, scope: !959)
!5064 = !DILocation(line: 3225, column: 3, scope: !960)
!5065 = !DILocation(line: 3225, column: 3, scope: !959)
!5066 = !DILocation(line: 3226, column: 5, scope: !963)
!5067 = !DILocation(line: 3226, column: 16, scope: !963)
!5068 = !DILocation(line: 3227, column: 34, scope: !963)
!5069 = !DILocation(line: 3227, column: 17, scope: !963)
!5070 = !DILocation(line: 3227, column: 15, scope: !963)
!5071 = !DILocation(line: 3227, column: 50, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !963, file: !21, line: 3227, column: 50)
!5073 = !DILocation(line: 3227, column: 50, scope: !963)
!5074 = !DILocation(line: 3227, column: 72, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !21, line: 3227, column: 72)
!5076 = distinct !DILexicalBlock(scope: !5072, file: !21, line: 3227, column: 72)
!5077 = !DILocation(line: 3227, column: 72, scope: !5076)
!5078 = !DILocation(line: 3229, column: 5, scope: !963)
!5079 = !DILocation(line: 3229, column: 40, scope: !963)
!5080 = !DILocation(line: 3230, column: 17, scope: !963)
!5081 = !DILocation(line: 3230, column: 15, scope: !963)
!5082 = !DILocation(line: 3231, column: 11, scope: !963)
!5083 = !DILocation(line: 3231, column: 28, scope: !963)
!5084 = !DILocation(line: 3231, column: 38, scope: !963)
!5085 = !DILocation(line: 3231, column: 26, scope: !963)
!5086 = !DILocation(line: 3231, column: 54, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !963, file: !21, line: 3231, column: 54)
!5088 = !DILocation(line: 3231, column: 54, scope: !963)
!5089 = !DILocation(line: 3231, column: 76, scope: !5087)
!5090 = !DILocation(line: 3233, column: 11, scope: !963)
!5091 = !DILocation(line: 3233, column: 28, scope: !963)
!5092 = !DILocation(line: 3233, column: 38, scope: !963)
!5093 = !DILocation(line: 3233, column: 26, scope: !963)
!5094 = !DILocation(line: 3233, column: 54, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !963, file: !21, line: 3233, column: 54)
!5096 = !DILocation(line: 3233, column: 54, scope: !963)
!5097 = !DILocation(line: 3233, column: 76, scope: !5095)
!5098 = !DILocation(line: 3235, column: 38, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !963, file: !21, line: 3235, column: 9)
!5100 = !DILocation(line: 3235, column: 48, scope: !5099)
!5101 = !DILocation(line: 3235, column: 9, scope: !5099)
!5102 = !DILocation(line: 3235, column: 63, scope: !5099)
!5103 = !DILocation(line: 3235, column: 9, scope: !963)
!5104 = !DILocation(line: 3235, column: 68, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !21, line: 3235, column: 68)
!5106 = distinct !DILexicalBlock(scope: !5099, file: !21, line: 3235, column: 68)
!5107 = !DILocation(line: 3235, column: 68, scope: !5106)
!5108 = !DILocation(line: 3236, column: 15, scope: !963)
!5109 = !DILocation(line: 3237, column: 5, scope: !963)
!5110 = !DILocation(line: 3237, column: 40, scope: !963)
!5111 = !DILocation(line: 3238, column: 5, scope: !963)
!5112 = !DILocation(line: 3239, column: 5, scope: !963)
!5113 = !DILocation(line: 3240, column: 5, scope: !963)
!5114 = !DILocation(line: 3240, column: 40, scope: !963)
!5115 = !DILocation(line: 3241, column: 15, scope: !963)
!5116 = !DILocation(line: 3242, column: 9, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !963, file: !21, line: 3242, column: 9)
!5118 = !DILocation(line: 3242, column: 28, scope: !5117)
!5119 = !DILocation(line: 3242, column: 9, scope: !963)
!5120 = !DILocation(line: 3242, column: 65, scope: !5117)
!5121 = !DILocation(line: 3242, column: 34, scope: !5117)
!5122 = !DILocation(line: 3243, column: 5, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5124, file: !21, line: 3243, column: 5)
!5124 = distinct !DILexicalBlock(scope: !963, file: !21, line: 3243, column: 5)
!5125 = !DILocation(line: 3243, column: 5, scope: !5124)
!5126 = !DILocation(line: 3244, column: 5, scope: !963)
!5127 = !DILocation(line: 3245, column: 3, scope: !960)
!5128 = !DILocation(line: 3246, column: 19, scope: !939)
!5129 = !DILocation(line: 3246, column: 17, scope: !939)
!5130 = !DILocation(line: 3247, column: 13, scope: !939)
!5131 = !DILocation(line: 3248, column: 25, scope: !939)
!5132 = !DILocation(line: 3248, column: 23, scope: !939)
!5133 = !DILocation(line: 3249, column: 13, scope: !939)
!5134 = !DILocation(line: 3258, column: 35, scope: !939)
!5135 = !DILocation(line: 3258, column: 50, scope: !939)
!5136 = !DILocation(line: 3258, column: 15, scope: !939)
!5137 = !DILocation(line: 3258, column: 13, scope: !939)
!5138 = !DILocation(line: 3258, column: 77, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3258, column: 77)
!5140 = !DILocation(line: 3258, column: 77, scope: !939)
!5141 = !DILocation(line: 3258, column: 99, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !21, line: 3258, column: 99)
!5143 = distinct !DILexicalBlock(scope: !5139, file: !21, line: 3258, column: 99)
!5144 = !DILocation(line: 3258, column: 99, scope: !5143)
!5145 = !DILocation(line: 3260, column: 15, scope: !939)
!5146 = !DILocation(line: 3260, column: 13, scope: !939)
!5147 = !DILocation(line: 3260, column: 35, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3260, column: 35)
!5149 = !DILocation(line: 3260, column: 35, scope: !939)
!5150 = !DILocation(line: 3260, column: 57, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5152, file: !21, line: 3260, column: 57)
!5152 = distinct !DILexicalBlock(scope: !5148, file: !21, line: 3260, column: 57)
!5153 = !DILocation(line: 3260, column: 57, scope: !5152)
!5154 = !DILocation(line: 3263, column: 7, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3263, column: 7)
!5156 = !DILocation(line: 3263, column: 7, scope: !939)
!5157 = !DILocation(line: 3263, column: 56, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !21, line: 3263, column: 56)
!5159 = distinct !DILexicalBlock(scope: !5155, file: !21, line: 3263, column: 56)
!5160 = !DILocation(line: 3263, column: 56, scope: !5159)
!5161 = !DILocation(line: 3264, column: 3, scope: !939)
!5162 = !DILocation(line: 3266, column: 7, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3266, column: 7)
!5164 = !DILocation(line: 3266, column: 7, scope: !939)
!5165 = !DILocation(line: 3266, column: 66, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !21, line: 3266, column: 66)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !21, line: 3266, column: 66)
!5168 = !DILocation(line: 3266, column: 66, scope: !5167)
!5169 = !DILocation(line: 3267, column: 13, scope: !939)
!5170 = !DILocation(line: 3268, column: 7, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3268, column: 7)
!5172 = !DILocation(line: 3268, column: 7, scope: !939)
!5173 = !DILocation(line: 3269, column: 21, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5171, file: !21, line: 3268, column: 48)
!5175 = !DILocation(line: 3269, column: 5, scope: !5174)
!5176 = !DILocation(line: 3270, column: 5, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !21, line: 3270, column: 5)
!5178 = distinct !DILexicalBlock(scope: !5174, file: !21, line: 3270, column: 5)
!5179 = !DILocation(line: 3270, column: 5, scope: !5178)
!5180 = !DILocation(line: 3272, column: 7, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3272, column: 7)
!5182 = !DILocation(line: 3272, column: 7, scope: !939)
!5183 = !DILocation(line: 3272, column: 83, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !21, line: 3272, column: 83)
!5185 = distinct !DILexicalBlock(scope: !5181, file: !21, line: 3272, column: 83)
!5186 = !DILocation(line: 3272, column: 83, scope: !5185)
!5187 = !DILocation(line: 3273, column: 3, scope: !939)
!5188 = !DILocation(line: 3273, column: 38, scope: !939)
!5189 = !DILocation(line: 3282, column: 33, scope: !939)
!5190 = !DILocation(line: 3282, column: 15, scope: !939)
!5191 = !DILocation(line: 3282, column: 13, scope: !939)
!5192 = !DILocation(line: 3282, column: 54, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3282, column: 54)
!5194 = !DILocation(line: 3282, column: 54, scope: !939)
!5195 = !DILocation(line: 3282, column: 76, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !21, line: 3282, column: 76)
!5197 = distinct !DILexicalBlock(scope: !5193, file: !21, line: 3282, column: 76)
!5198 = !DILocation(line: 3282, column: 76, scope: !5197)
!5199 = !DILocation(line: 3284, column: 37, scope: !939)
!5200 = !DILocation(line: 3284, column: 58, scope: !939)
!5201 = !DILocation(line: 3284, column: 15, scope: !939)
!5202 = !DILocation(line: 3284, column: 13, scope: !939)
!5203 = !DILocation(line: 3284, column: 74, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !939, file: !21, line: 3284, column: 74)
!5205 = !DILocation(line: 3284, column: 74, scope: !939)
!5206 = !DILocation(line: 3284, column: 108, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !21, line: 3284, column: 108)
!5208 = distinct !DILexicalBlock(scope: !5204, file: !21, line: 3284, column: 108)
!5209 = !DILocation(line: 3284, column: 108, scope: !5208)
!5210 = !DILocation(line: 3285, column: 3, scope: !939)
!5211 = !DILocation(line: 3285, column: 38, scope: !939)
!5212 = !DILocation(line: 3296, column: 11, scope: !939)
!5213 = !DILocation(line: 3296, column: 22, scope: !939)
!5214 = !DILocation(line: 3297, column: 3, scope: !939)
!5215 = !DILocation(line: 3298, column: 3, scope: !939)
!5216 = !DILocation(line: 3299, column: 3, scope: !939)
!5217 = !DILocation(line: 3300, column: 3, scope: !939)
!5218 = !DILocation(line: 3301, column: 3, scope: !939)
!5219 = !DILocation(line: 3302, column: 3, scope: !939)
!5220 = !DILocation(line: 3303, column: 64, scope: !939)
!5221 = !DILocation(line: 3303, column: 79, scope: !939)
!5222 = !DILocation(line: 3303, column: 93, scope: !939)
!5223 = !DILocation(line: 3303, column: 3, scope: !939)
!5224 = !DILocation(line: 3304, column: 11, scope: !939)
!5225 = !DILocation(line: 3304, column: 3, scope: !939)
!5226 = !DILocation(line: 3305, column: 3, scope: !939)
!5227 = !DILocation(line: 3306, column: 3, scope: !939)
!5228 = !DILocation(line: 3307, column: 3, scope: !939)
!5229 = !DILocation(line: 3308, column: 3, scope: !939)
!5230 = !DILocation(line: 3311, column: 10, scope: !939)
!5231 = !DILocation(line: 3311, column: 3, scope: !939)
!5232 = !DILocation(line: 3312, column: 1, scope: !939)
!5233 = !DILocation(line: 3322, column: 116, scope: !1045)
!5234 = !DILocation(line: 3322, column: 140, scope: !1045)
!5235 = !DILocation(line: 3322, column: 164, scope: !1045)
!5236 = !DILocation(line: 3322, column: 184, scope: !1045)
!5237 = !DILocation(line: 3323, column: 3, scope: !1045)
!5238 = !DILocation(line: 3323, column: 13, scope: !1045)
!5239 = !DILocation(line: 3324, column: 3, scope: !1045)
!5240 = !DILocation(line: 3324, column: 13, scope: !1045)
!5241 = !DILocation(line: 3325, column: 3, scope: !1045)
!5242 = !DILocation(line: 3325, column: 13, scope: !1045)
!5243 = !DILocation(line: 3326, column: 3, scope: !1045)
!5244 = !DILocation(line: 3326, column: 7, scope: !1045)
!5245 = !DILocation(line: 3328, column: 3, scope: !1045)
!5246 = !DILocation(line: 3328, column: 13, scope: !1045)
!5247 = !DILocation(line: 3329, column: 3, scope: !1045)
!5248 = !DILocation(line: 3329, column: 13, scope: !1045)
!5249 = !DILocation(line: 3330, column: 3, scope: !1045)
!5250 = !DILocation(line: 3330, column: 13, scope: !1045)
!5251 = !DILocation(line: 3331, column: 3, scope: !1045)
!5252 = !DILocation(line: 3331, column: 13, scope: !1045)
!5253 = !DILocation(line: 3332, column: 3, scope: !1045)
!5254 = !DILocation(line: 3332, column: 7, scope: !1045)
!5255 = !DILocation(line: 3333, column: 3, scope: !1045)
!5256 = !DILocation(line: 3333, column: 15, scope: !1045)
!5257 = !DILocation(line: 3334, column: 3, scope: !1045)
!5258 = !DILocation(line: 3334, column: 7, scope: !1045)
!5259 = !DILocation(line: 3335, column: 3, scope: !1045)
!5260 = !DILocation(line: 3335, column: 14, scope: !1045)
!5261 = !DILocation(line: 3336, column: 3, scope: !1045)
!5262 = !DILocation(line: 3336, column: 11, scope: !1045)
!5263 = !DILocation(line: 3337, column: 3, scope: !1045)
!5264 = !DILocation(line: 3337, column: 7, scope: !1045)
!5265 = !DILocation(line: 3338, column: 3, scope: !1045)
!5266 = !DILocation(line: 3338, column: 15, scope: !1045)
!5267 = !DILocation(line: 3339, column: 3, scope: !1045)
!5268 = !DILocation(line: 3339, column: 7, scope: !1045)
!5269 = !DILocation(line: 3349, column: 3, scope: !1045)
!5270 = !DILocation(line: 3349, column: 3, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3349, column: 3)
!5272 = !DILocation(line: 3349, column: 64, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3349, column: 64)
!5274 = !DILocation(line: 3349, column: 64, scope: !1045)
!5275 = !DILocation(line: 3349, column: 86, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !21, line: 3349, column: 86)
!5277 = distinct !DILexicalBlock(scope: !5273, file: !21, line: 3349, column: 86)
!5278 = !DILocation(line: 3349, column: 86, scope: !5277)
!5279 = !DILocation(line: 3351, column: 7, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3351, column: 7)
!5281 = !DILocation(line: 3351, column: 7, scope: !1045)
!5282 = !DILocation(line: 3352, column: 5, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5280, file: !21, line: 3351, column: 24)
!5284 = !DILocation(line: 3353, column: 17, scope: !5283)
!5285 = !DILocation(line: 3353, column: 15, scope: !5283)
!5286 = !DILocation(line: 3354, column: 3, scope: !5283)
!5287 = !DILocation(line: 3355, column: 5, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5280, file: !21, line: 3354, column: 10)
!5289 = !DILocation(line: 3356, column: 17, scope: !5288)
!5290 = !DILocation(line: 3356, column: 15, scope: !5288)
!5291 = !DILocation(line: 3358, column: 33, scope: !1045)
!5292 = !DILocation(line: 3358, column: 15, scope: !1045)
!5293 = !DILocation(line: 3358, column: 13, scope: !1045)
!5294 = !DILocation(line: 3358, column: 54, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3358, column: 54)
!5296 = !DILocation(line: 3358, column: 54, scope: !1045)
!5297 = !DILocation(line: 3358, column: 76, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !21, line: 3358, column: 76)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !21, line: 3358, column: 76)
!5300 = !DILocation(line: 3358, column: 76, scope: !5299)
!5301 = !DILocation(line: 3360, column: 54, scope: !1045)
!5302 = !DILocation(line: 3360, column: 65, scope: !1045)
!5303 = !{!1599, !1462, i64 232}
!5304 = !DILocation(line: 3360, column: 83, scope: !1045)
!5305 = !DILocation(line: 3360, column: 94, scope: !1045)
!5306 = !DILocation(line: 3360, column: 15, scope: !1045)
!5307 = !DILocation(line: 3360, column: 13, scope: !1045)
!5308 = !DILocation(line: 3360, column: 110, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3360, column: 110)
!5310 = !DILocation(line: 3360, column: 110, scope: !1045)
!5311 = !DILocation(line: 3360, column: 132, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5313, file: !21, line: 3360, column: 132)
!5313 = distinct !DILexicalBlock(scope: !5309, file: !21, line: 3360, column: 132)
!5314 = !DILocation(line: 3360, column: 132, scope: !5313)
!5315 = !DILocation(line: 3362, column: 3, scope: !1045)
!5316 = !DILocation(line: 3362, column: 38, scope: !1045)
!5317 = !DILocation(line: 3363, column: 3, scope: !1045)
!5318 = !DILocation(line: 3363, column: 38, scope: !1045)
!5319 = !DILocation(line: 3364, column: 3, scope: !1045)
!5320 = !DILocation(line: 3364, column: 38, scope: !1045)
!5321 = !DILocation(line: 3365, column: 3, scope: !1045)
!5322 = !DILocation(line: 3365, column: 38, scope: !1045)
!5323 = !DILocation(line: 3374, column: 7, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3374, column: 7)
!5325 = !DILocation(line: 3374, column: 7, scope: !1045)
!5326 = !DILocation(line: 3383, column: 9, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !21, line: 3383, column: 9)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !21, line: 3374, column: 24)
!5329 = !DILocation(line: 3383, column: 9, scope: !5328)
!5330 = !DILocation(line: 3384, column: 20, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !21, line: 3383, column: 52)
!5332 = !DILocation(line: 3384, column: 7, scope: !5331)
!5333 = !DILocation(line: 3385, column: 7, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !21, line: 3385, column: 7)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !21, line: 3385, column: 7)
!5336 = !DILocation(line: 3385, column: 7, scope: !5335)
!5337 = !DILocation(line: 3387, column: 49, scope: !5328)
!5338 = !DILocation(line: 3387, column: 17, scope: !5328)
!5339 = !DILocation(line: 3387, column: 15, scope: !5328)
!5340 = !DILocation(line: 3387, column: 83, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5328, file: !21, line: 3387, column: 83)
!5342 = !DILocation(line: 3387, column: 83, scope: !5328)
!5343 = !DILocation(line: 3387, column: 105, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5345, file: !21, line: 3387, column: 105)
!5345 = distinct !DILexicalBlock(scope: !5341, file: !21, line: 3387, column: 105)
!5346 = !DILocation(line: 3387, column: 105, scope: !5345)
!5347 = !DILocation(line: 3389, column: 17, scope: !5328)
!5348 = !DILocation(line: 3389, column: 15, scope: !5328)
!5349 = !DILocation(line: 3389, column: 90, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5328, file: !21, line: 3389, column: 90)
!5351 = !DILocation(line: 3389, column: 90, scope: !5328)
!5352 = !DILocation(line: 3389, column: 112, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5354, file: !21, line: 3389, column: 112)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !21, line: 3389, column: 112)
!5355 = !DILocation(line: 3389, column: 112, scope: !5354)
!5356 = !DILocation(line: 3391, column: 5, scope: !5328)
!5357 = !DILocation(line: 3391, column: 40, scope: !5328)
!5358 = !DILocation(line: 3392, column: 37, scope: !5328)
!5359 = !DILocation(line: 3392, column: 51, scope: !5328)
!5360 = !DILocation(line: 3392, column: 59, scope: !5328)
!5361 = !DILocation(line: 3392, column: 17, scope: !5328)
!5362 = !DILocation(line: 3392, column: 15, scope: !5328)
!5363 = !DILocation(line: 3392, column: 75, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5328, file: !21, line: 3392, column: 75)
!5365 = !DILocation(line: 3392, column: 75, scope: !5328)
!5366 = !DILocation(line: 3392, column: 109, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !21, line: 3392, column: 109)
!5368 = distinct !DILexicalBlock(scope: !5364, file: !21, line: 3392, column: 109)
!5369 = !DILocation(line: 3392, column: 109, scope: !5368)
!5370 = !DILocation(line: 3393, column: 5, scope: !5328)
!5371 = !DILocation(line: 3393, column: 40, scope: !5328)
!5372 = !DILocation(line: 3402, column: 13, scope: !5328)
!5373 = !DILocation(line: 3403, column: 5, scope: !5328)
!5374 = !DILocation(line: 3421, column: 41, scope: !1045)
!5375 = !DILocation(line: 3421, column: 59, scope: !1045)
!5376 = !DILocation(line: 3421, column: 15, scope: !1045)
!5377 = !DILocation(line: 3421, column: 13, scope: !1045)
!5378 = !DILocation(line: 3421, column: 77, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3421, column: 77)
!5380 = !DILocation(line: 3421, column: 77, scope: !1045)
!5381 = !DILocation(line: 3421, column: 99, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !21, line: 3421, column: 99)
!5383 = distinct !DILexicalBlock(scope: !5379, file: !21, line: 3421, column: 99)
!5384 = !DILocation(line: 3421, column: 99, scope: !5383)
!5385 = !DILocation(line: 3423, column: 17, scope: !1045)
!5386 = !DILocation(line: 3423, column: 15, scope: !1045)
!5387 = !DILocation(line: 3424, column: 13, scope: !1045)
!5388 = !DILocation(line: 3433, column: 7, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3433, column: 7)
!5390 = !DILocation(line: 3433, column: 7, scope: !1045)
!5391 = !DILocation(line: 3434, column: 18, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !21, line: 3433, column: 48)
!5393 = !DILocation(line: 3434, column: 5, scope: !5392)
!5394 = !DILocation(line: 3435, column: 5, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !21, line: 3435, column: 5)
!5396 = distinct !DILexicalBlock(scope: !5392, file: !21, line: 3435, column: 5)
!5397 = !DILocation(line: 3435, column: 5, scope: !5396)
!5398 = !DILocation(line: 3437, column: 15, scope: !1045)
!5399 = !DILocation(line: 3437, column: 13, scope: !1045)
!5400 = !DILocation(line: 3437, column: 34, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3437, column: 34)
!5402 = !DILocation(line: 3437, column: 34, scope: !1045)
!5403 = !DILocation(line: 3437, column: 56, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !21, line: 3437, column: 56)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !21, line: 3437, column: 56)
!5406 = !DILocation(line: 3437, column: 56, scope: !5405)
!5407 = !DILocation(line: 3439, column: 15, scope: !1045)
!5408 = !DILocation(line: 3439, column: 13, scope: !1045)
!5409 = !DILocation(line: 3439, column: 35, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3439, column: 35)
!5411 = !DILocation(line: 3439, column: 35, scope: !1045)
!5412 = !DILocation(line: 3439, column: 57, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !21, line: 3439, column: 57)
!5414 = distinct !DILexicalBlock(scope: !5410, file: !21, line: 3439, column: 57)
!5415 = !DILocation(line: 3439, column: 57, scope: !5414)
!5416 = !DILocation(line: 3441, column: 3, scope: !1045)
!5417 = !DILocation(line: 3443, column: 7, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3443, column: 7)
!5419 = !DILocation(line: 3443, column: 7, scope: !1045)
!5420 = !DILocation(line: 3443, column: 58, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !21, line: 3443, column: 58)
!5422 = distinct !DILexicalBlock(scope: !5418, file: !21, line: 3443, column: 58)
!5423 = !DILocation(line: 3443, column: 58, scope: !5422)
!5424 = !DILocation(line: 3445, column: 7, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3445, column: 7)
!5426 = !DILocation(line: 3445, column: 7, scope: !1045)
!5427 = !DILocation(line: 3445, column: 56, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5429, file: !21, line: 3445, column: 56)
!5429 = distinct !DILexicalBlock(scope: !5425, file: !21, line: 3445, column: 56)
!5430 = !DILocation(line: 3445, column: 56, scope: !5429)
!5431 = !DILocation(line: 3446, column: 13, scope: !1045)
!5432 = !DILocation(line: 3447, column: 43, scope: !1045)
!5433 = !DILocation(line: 3447, column: 57, scope: !1045)
!5434 = !DILocation(line: 3447, column: 63, scope: !1045)
!5435 = !DILocation(line: 3447, column: 76, scope: !1045)
!5436 = !DILocation(line: 3447, column: 15, scope: !1045)
!5437 = !DILocation(line: 3447, column: 13, scope: !1045)
!5438 = !DILocation(line: 3447, column: 92, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3447, column: 92)
!5440 = !DILocation(line: 3447, column: 92, scope: !1045)
!5441 = !DILocation(line: 3447, column: 114, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !21, line: 3447, column: 114)
!5443 = distinct !DILexicalBlock(scope: !5439, file: !21, line: 3447, column: 114)
!5444 = !DILocation(line: 3447, column: 114, scope: !5443)
!5445 = !DILocation(line: 3449, column: 3, scope: !1045)
!5446 = !DILocation(line: 3449, column: 38, scope: !1045)
!5447 = !DILocation(line: 3450, column: 8, scope: !1069)
!5448 = !DILocation(line: 3450, column: 47, scope: !1069)
!5449 = !DILocation(line: 3450, column: 51, scope: !1069)
!5450 = !DILocation(line: 3450, column: 7, scope: !1045)
!5451 = !DILocation(line: 3451, column: 5, scope: !1068)
!5452 = !DILocation(line: 3451, column: 15, scope: !1068)
!5453 = !DILocation(line: 3451, column: 26, scope: !1068)
!5454 = !DILocation(line: 3452, column: 5, scope: !1068)
!5455 = !DILocation(line: 3452, column: 16, scope: !1068)
!5456 = !DILocation(line: 3452, column: 23, scope: !1068)
!5457 = !DILocation(line: 3453, column: 9, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !1068, file: !21, line: 3453, column: 9)
!5459 = !DILocation(line: 3453, column: 9, scope: !1068)
!5460 = !DILocation(line: 3454, column: 11, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !21, line: 3454, column: 11)
!5462 = distinct !DILexicalBlock(scope: !5458, file: !21, line: 3453, column: 30)
!5463 = !DILocation(line: 3454, column: 16, scope: !5461)
!5464 = !DILocation(line: 3454, column: 11, scope: !5462)
!5465 = !DILocation(line: 3454, column: 21, scope: !5461)
!5466 = !DILocation(line: 3455, column: 16, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5461, file: !21, line: 3455, column: 16)
!5468 = !DILocation(line: 3455, column: 21, scope: !5467)
!5469 = !DILocation(line: 3455, column: 16, scope: !5461)
!5470 = !DILocation(line: 3455, column: 58, scope: !5467)
!5471 = !DILocation(line: 3455, column: 27, scope: !5467)
!5472 = !DILocation(line: 3456, column: 7, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !21, line: 3456, column: 7)
!5474 = distinct !DILexicalBlock(scope: !5462, file: !21, line: 3456, column: 7)
!5475 = !DILocation(line: 3456, column: 7, scope: !5474)
!5476 = !DILocation(line: 3459, column: 9, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !1068, file: !21, line: 3459, column: 9)
!5478 = !DILocation(line: 3459, column: 9, scope: !1068)
!5479 = !DILocation(line: 3460, column: 19, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5477, file: !21, line: 3459, column: 47)
!5481 = !DILocation(line: 3460, column: 17, scope: !5480)
!5482 = !DILocation(line: 3461, column: 19, scope: !5480)
!5483 = !DILocation(line: 3461, column: 17, scope: !5480)
!5484 = !DILocation(line: 3462, column: 5, scope: !5480)
!5485 = !DILocation(line: 3463, column: 19, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5477, file: !21, line: 3462, column: 12)
!5487 = !DILocation(line: 3463, column: 17, scope: !5486)
!5488 = !DILocation(line: 3464, column: 19, scope: !5486)
!5489 = !DILocation(line: 3464, column: 17, scope: !5486)
!5490 = !DILocation(line: 3466, column: 5, scope: !1068)
!5491 = !DILocation(line: 3467, column: 5, scope: !1068)
!5492 = !DILocation(line: 3474, column: 5, scope: !1068)
!5493 = !DILocation(line: 3474, column: 40, scope: !1068)
!5494 = !DILocation(line: 3475, column: 3, scope: !1069)
!5495 = !DILocation(line: 3475, column: 3, scope: !1068)
!5496 = !DILocation(line: 3476, column: 5, scope: !1072)
!5497 = !DILocation(line: 3476, column: 16, scope: !1072)
!5498 = !DILocation(line: 3477, column: 34, scope: !1072)
!5499 = !DILocation(line: 3477, column: 17, scope: !1072)
!5500 = !DILocation(line: 3477, column: 15, scope: !1072)
!5501 = !DILocation(line: 3477, column: 50, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !1072, file: !21, line: 3477, column: 50)
!5503 = !DILocation(line: 3477, column: 50, scope: !1072)
!5504 = !DILocation(line: 3477, column: 72, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !21, line: 3477, column: 72)
!5506 = distinct !DILexicalBlock(scope: !5502, file: !21, line: 3477, column: 72)
!5507 = !DILocation(line: 3477, column: 72, scope: !5506)
!5508 = !DILocation(line: 3479, column: 5, scope: !1072)
!5509 = !DILocation(line: 3479, column: 40, scope: !1072)
!5510 = !DILocation(line: 3480, column: 17, scope: !1072)
!5511 = !DILocation(line: 3480, column: 15, scope: !1072)
!5512 = !DILocation(line: 3481, column: 11, scope: !1072)
!5513 = !DILocation(line: 3481, column: 28, scope: !1072)
!5514 = !DILocation(line: 3481, column: 38, scope: !1072)
!5515 = !DILocation(line: 3481, column: 26, scope: !1072)
!5516 = !DILocation(line: 3481, column: 54, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !1072, file: !21, line: 3481, column: 54)
!5518 = !DILocation(line: 3481, column: 54, scope: !1072)
!5519 = !DILocation(line: 3481, column: 76, scope: !5517)
!5520 = !DILocation(line: 3483, column: 11, scope: !1072)
!5521 = !DILocation(line: 3483, column: 28, scope: !1072)
!5522 = !DILocation(line: 3483, column: 38, scope: !1072)
!5523 = !DILocation(line: 3483, column: 26, scope: !1072)
!5524 = !DILocation(line: 3483, column: 54, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !1072, file: !21, line: 3483, column: 54)
!5526 = !DILocation(line: 3483, column: 54, scope: !1072)
!5527 = !DILocation(line: 3483, column: 76, scope: !5525)
!5528 = !DILocation(line: 3485, column: 38, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !1072, file: !21, line: 3485, column: 9)
!5530 = !DILocation(line: 3485, column: 48, scope: !5529)
!5531 = !DILocation(line: 3485, column: 9, scope: !5529)
!5532 = !DILocation(line: 3485, column: 63, scope: !5529)
!5533 = !DILocation(line: 3485, column: 9, scope: !1072)
!5534 = !DILocation(line: 3485, column: 68, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5536, file: !21, line: 3485, column: 68)
!5536 = distinct !DILexicalBlock(scope: !5529, file: !21, line: 3485, column: 68)
!5537 = !DILocation(line: 3485, column: 68, scope: !5536)
!5538 = !DILocation(line: 3486, column: 15, scope: !1072)
!5539 = !DILocation(line: 3487, column: 5, scope: !1072)
!5540 = !DILocation(line: 3487, column: 40, scope: !1072)
!5541 = !DILocation(line: 3488, column: 5, scope: !1072)
!5542 = !DILocation(line: 3489, column: 5, scope: !1072)
!5543 = !DILocation(line: 3490, column: 5, scope: !1072)
!5544 = !DILocation(line: 3490, column: 40, scope: !1072)
!5545 = !DILocation(line: 3491, column: 15, scope: !1072)
!5546 = !DILocation(line: 3492, column: 9, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !1072, file: !21, line: 3492, column: 9)
!5548 = !DILocation(line: 3492, column: 28, scope: !5547)
!5549 = !DILocation(line: 3492, column: 9, scope: !1072)
!5550 = !DILocation(line: 3492, column: 65, scope: !5547)
!5551 = !DILocation(line: 3492, column: 34, scope: !5547)
!5552 = !DILocation(line: 3493, column: 5, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !21, line: 3493, column: 5)
!5554 = distinct !DILexicalBlock(scope: !1072, file: !21, line: 3493, column: 5)
!5555 = !DILocation(line: 3493, column: 5, scope: !5554)
!5556 = !DILocation(line: 3494, column: 5, scope: !1072)
!5557 = !DILocation(line: 3495, column: 3, scope: !1069)
!5558 = !DILocation(line: 3496, column: 19, scope: !1045)
!5559 = !DILocation(line: 3496, column: 17, scope: !1045)
!5560 = !DILocation(line: 3497, column: 13, scope: !1045)
!5561 = !DILocation(line: 3498, column: 25, scope: !1045)
!5562 = !DILocation(line: 3498, column: 23, scope: !1045)
!5563 = !DILocation(line: 3499, column: 13, scope: !1045)
!5564 = !DILocation(line: 3508, column: 39, scope: !1045)
!5565 = !DILocation(line: 3508, column: 54, scope: !1045)
!5566 = !DILocation(line: 3508, column: 16, scope: !1045)
!5567 = !DILocation(line: 3508, column: 13, scope: !1045)
!5568 = !DILocation(line: 3508, column: 79, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3508, column: 79)
!5570 = !DILocation(line: 3508, column: 79, scope: !1045)
!5571 = !DILocation(line: 3508, column: 106, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !21, line: 3508, column: 106)
!5573 = distinct !DILexicalBlock(scope: !5569, file: !21, line: 3508, column: 106)
!5574 = !DILocation(line: 3508, column: 106, scope: !5573)
!5575 = !DILocation(line: 3509, column: 7, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3509, column: 7)
!5577 = !DILocation(line: 3509, column: 7, scope: !1045)
!5578 = !DILocation(line: 3518, column: 9, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !21, line: 3518, column: 9)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !21, line: 3509, column: 18)
!5581 = !DILocation(line: 3518, column: 9, scope: !5580)
!5582 = !DILocation(line: 3519, column: 20, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5579, file: !21, line: 3518, column: 52)
!5584 = !DILocation(line: 3519, column: 7, scope: !5583)
!5585 = !DILocation(line: 3520, column: 7, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !21, line: 3520, column: 7)
!5587 = distinct !DILexicalBlock(scope: !5583, file: !21, line: 3520, column: 7)
!5588 = !DILocation(line: 3520, column: 7, scope: !5587)
!5589 = !DILocation(line: 3522, column: 17, scope: !5580)
!5590 = !DILocation(line: 3522, column: 15, scope: !5580)
!5591 = !DILocation(line: 3522, column: 37, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5580, file: !21, line: 3522, column: 37)
!5593 = !DILocation(line: 3522, column: 37, scope: !5580)
!5594 = !DILocation(line: 3522, column: 59, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !21, line: 3522, column: 59)
!5596 = distinct !DILexicalBlock(scope: !5592, file: !21, line: 3522, column: 59)
!5597 = !DILocation(line: 3522, column: 59, scope: !5596)
!5598 = !DILocation(line: 3524, column: 15, scope: !5580)
!5599 = !DILocation(line: 3525, column: 15, scope: !5580)
!5600 = !DILocation(line: 3526, column: 5, scope: !5580)
!5601 = !{!1599, !1462, i64 136}
!5602 = !DILocation(line: 3527, column: 15, scope: !5580)
!5603 = !DILocation(line: 3529, column: 5, scope: !5580)
!5604 = !DILocation(line: 3530, column: 49, scope: !5580)
!5605 = !DILocation(line: 3530, column: 17, scope: !5580)
!5606 = !DILocation(line: 3530, column: 15, scope: !5580)
!5607 = !DILocation(line: 3530, column: 83, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5580, file: !21, line: 3530, column: 83)
!5609 = !DILocation(line: 3530, column: 83, scope: !5580)
!5610 = !DILocation(line: 3530, column: 105, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !21, line: 3530, column: 105)
!5612 = distinct !DILexicalBlock(scope: !5608, file: !21, line: 3530, column: 105)
!5613 = !DILocation(line: 3530, column: 105, scope: !5612)
!5614 = !DILocation(line: 3532, column: 18, scope: !5580)
!5615 = !DILocation(line: 3532, column: 15, scope: !5580)
!5616 = !DILocation(line: 3534, column: 5, scope: !5580)
!5617 = !DILocation(line: 3535, column: 15, scope: !5580)
!5618 = !DILocation(line: 3536, column: 5, scope: !5580)
!5619 = !{!1599, !1462, i64 400}
!5620 = !DILocation(line: 3537, column: 15, scope: !5580)
!5621 = !DILocation(line: 3539, column: 5, scope: !5580)
!5622 = !DILocation(line: 3540, column: 68, scope: !5580)
!5623 = !DILocation(line: 3540, column: 54, scope: !5580)
!5624 = !DILocation(line: 3540, column: 90, scope: !5580)
!5625 = !DILocation(line: 3540, column: 17, scope: !5580)
!5626 = !DILocation(line: 3540, column: 15, scope: !5580)
!5627 = !DILocation(line: 3540, column: 116, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5580, file: !21, line: 3540, column: 116)
!5629 = !DILocation(line: 3540, column: 116, scope: !5580)
!5630 = !DILocation(line: 3540, column: 138, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !21, line: 3540, column: 138)
!5632 = distinct !DILexicalBlock(scope: !5628, file: !21, line: 3540, column: 138)
!5633 = !DILocation(line: 3540, column: 138, scope: !5632)
!5634 = !DILocation(line: 3542, column: 18, scope: !5580)
!5635 = !DILocation(line: 3542, column: 62, scope: !5580)
!5636 = !DILocation(line: 3542, column: 60, scope: !5580)
!5637 = !DILocation(line: 3542, column: 17, scope: !5580)
!5638 = !DILocation(line: 3542, column: 75, scope: !5580)
!5639 = !DILocation(line: 3542, column: 119, scope: !5580)
!5640 = !DILocation(line: 3542, column: 15, scope: !5580)
!5641 = !DILocation(line: 3543, column: 18, scope: !5580)
!5642 = !DILocation(line: 3543, column: 15, scope: !5580)
!5643 = !DILocation(line: 3545, column: 5, scope: !5580)
!5644 = !DILocation(line: 3546, column: 15, scope: !5580)
!5645 = !DILocation(line: 3547, column: 38, scope: !5580)
!5646 = !DILocation(line: 3547, column: 52, scope: !5580)
!5647 = !DILocation(line: 3547, column: 63, scope: !5580)
!5648 = !DILocation(line: 3547, column: 17, scope: !5580)
!5649 = !DILocation(line: 3547, column: 15, scope: !5580)
!5650 = !DILocation(line: 3547, column: 79, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5580, file: !21, line: 3547, column: 79)
!5652 = !DILocation(line: 3547, column: 79, scope: !5580)
!5653 = !DILocation(line: 3547, column: 101, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !21, line: 3547, column: 101)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !21, line: 3547, column: 101)
!5656 = !DILocation(line: 3547, column: 101, scope: !5655)
!5657 = !DILocation(line: 3549, column: 5, scope: !5580)
!5658 = !DILocation(line: 3549, column: 40, scope: !5580)
!5659 = !DILocation(line: 3550, column: 37, scope: !5580)
!5660 = !DILocation(line: 3550, column: 51, scope: !5580)
!5661 = !DILocation(line: 3550, column: 59, scope: !5580)
!5662 = !DILocation(line: 3550, column: 17, scope: !5580)
!5663 = !DILocation(line: 3550, column: 15, scope: !5580)
!5664 = !DILocation(line: 3550, column: 75, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5580, file: !21, line: 3550, column: 75)
!5666 = !DILocation(line: 3550, column: 75, scope: !5580)
!5667 = !DILocation(line: 3550, column: 109, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !21, line: 3550, column: 109)
!5669 = distinct !DILexicalBlock(scope: !5665, file: !21, line: 3550, column: 109)
!5670 = !DILocation(line: 3550, column: 109, scope: !5669)
!5671 = !DILocation(line: 3551, column: 5, scope: !5580)
!5672 = !DILocation(line: 3551, column: 40, scope: !5580)
!5673 = !DILocation(line: 3560, column: 13, scope: !5580)
!5674 = !DILocation(line: 3561, column: 5, scope: !5580)
!5675 = !DILocation(line: 3579, column: 39, scope: !1045)
!5676 = !DILocation(line: 3579, column: 54, scope: !1045)
!5677 = !DILocation(line: 3579, column: 16, scope: !1045)
!5678 = !DILocation(line: 3579, column: 13, scope: !1045)
!5679 = !DILocation(line: 3579, column: 79, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3579, column: 79)
!5681 = !DILocation(line: 3579, column: 79, scope: !1045)
!5682 = !DILocation(line: 3579, column: 106, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !21, line: 3579, column: 106)
!5684 = distinct !DILexicalBlock(scope: !5680, file: !21, line: 3579, column: 106)
!5685 = !DILocation(line: 3579, column: 106, scope: !5684)
!5686 = !DILocation(line: 3580, column: 7, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3580, column: 7)
!5688 = !DILocation(line: 3580, column: 7, scope: !1045)
!5689 = !DILocation(line: 3589, column: 9, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !21, line: 3589, column: 9)
!5691 = distinct !DILexicalBlock(scope: !5687, file: !21, line: 3580, column: 18)
!5692 = !DILocation(line: 3589, column: 9, scope: !5691)
!5693 = !DILocation(line: 3590, column: 23, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5690, file: !21, line: 3589, column: 50)
!5695 = !DILocation(line: 3590, column: 7, scope: !5694)
!5696 = !DILocation(line: 3591, column: 7, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5698, file: !21, line: 3591, column: 7)
!5698 = distinct !DILexicalBlock(scope: !5694, file: !21, line: 3591, column: 7)
!5699 = !DILocation(line: 3591, column: 7, scope: !5698)
!5700 = !DILocation(line: 3593, column: 9, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5691, file: !21, line: 3593, column: 9)
!5702 = !DILocation(line: 3593, column: 9, scope: !5691)
!5703 = !DILocation(line: 3593, column: 74, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !21, line: 3593, column: 74)
!5705 = distinct !DILexicalBlock(scope: !5701, file: !21, line: 3593, column: 74)
!5706 = !DILocation(line: 3593, column: 74, scope: !5705)
!5707 = !DILocation(line: 3602, column: 5, scope: !5691)
!5708 = !DILocation(line: 3613, column: 42, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !1045, file: !21, line: 3612, column: 12)
!5710 = !DILocation(line: 3613, column: 57, scope: !5709)
!5711 = !DILocation(line: 3613, column: 17, scope: !5709)
!5712 = !DILocation(line: 3613, column: 15, scope: !5709)
!5713 = !DILocation(line: 3613, column: 84, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5709, file: !21, line: 3613, column: 84)
!5715 = !DILocation(line: 3613, column: 84, scope: !5709)
!5716 = !DILocation(line: 3613, column: 106, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5718, file: !21, line: 3613, column: 106)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !21, line: 3613, column: 106)
!5719 = !DILocation(line: 3613, column: 106, scope: !5718)
!5720 = !DILocation(line: 3615, column: 17, scope: !5709)
!5721 = !DILocation(line: 3615, column: 15, scope: !5709)
!5722 = !DILocation(line: 3615, column: 37, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5709, file: !21, line: 3615, column: 37)
!5724 = !DILocation(line: 3615, column: 37, scope: !5709)
!5725 = !DILocation(line: 3615, column: 59, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !21, line: 3615, column: 59)
!5727 = distinct !DILexicalBlock(scope: !5723, file: !21, line: 3615, column: 59)
!5728 = !DILocation(line: 3615, column: 59, scope: !5727)
!5729 = !DILocation(line: 3618, column: 9, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5709, file: !21, line: 3618, column: 9)
!5731 = !DILocation(line: 3618, column: 9, scope: !5709)
!5732 = !DILocation(line: 3618, column: 58, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !21, line: 3618, column: 58)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !21, line: 3618, column: 58)
!5735 = !DILocation(line: 3618, column: 58, scope: !5734)
!5736 = !DILocation(line: 3619, column: 5, scope: !5709)
!5737 = !DILocation(line: 3621, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5709, file: !21, line: 3621, column: 9)
!5739 = !DILocation(line: 3621, column: 9, scope: !5709)
!5740 = !DILocation(line: 3621, column: 68, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !21, line: 3621, column: 68)
!5742 = distinct !DILexicalBlock(scope: !5738, file: !21, line: 3621, column: 68)
!5743 = !DILocation(line: 3621, column: 68, scope: !5742)
!5744 = !DILocation(line: 3622, column: 15, scope: !5709)
!5745 = !DILocation(line: 3623, column: 9, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5709, file: !21, line: 3623, column: 9)
!5747 = !DILocation(line: 3623, column: 9, scope: !5709)
!5748 = !DILocation(line: 3624, column: 23, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5746, file: !21, line: 3623, column: 50)
!5750 = !DILocation(line: 3624, column: 7, scope: !5749)
!5751 = !DILocation(line: 3625, column: 7, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5753, file: !21, line: 3625, column: 7)
!5753 = distinct !DILexicalBlock(scope: !5749, file: !21, line: 3625, column: 7)
!5754 = !DILocation(line: 3625, column: 7, scope: !5753)
!5755 = !DILocation(line: 3627, column: 9, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5709, file: !21, line: 3627, column: 9)
!5757 = !DILocation(line: 3627, column: 9, scope: !5709)
!5758 = !DILocation(line: 3627, column: 85, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5760, file: !21, line: 3627, column: 85)
!5760 = distinct !DILexicalBlock(scope: !5756, file: !21, line: 3627, column: 85)
!5761 = !DILocation(line: 3627, column: 85, scope: !5760)
!5762 = !DILocation(line: 3628, column: 5, scope: !5709)
!5763 = !DILocation(line: 3628, column: 40, scope: !5709)
!5764 = !DILocation(line: 3629, column: 3, scope: !5709)
!5765 = !DILocation(line: 3630, column: 3, scope: !1045)
!5766 = !DILocation(line: 3639, column: 11, scope: !1045)
!5767 = !DILocation(line: 3640, column: 3, scope: !1045)
!5768 = !DILocation(line: 3651, column: 3, scope: !1045)
!5769 = !DILocation(line: 3652, column: 3, scope: !1045)
!5770 = !DILocation(line: 3653, column: 3, scope: !1045)
!5771 = !DILocation(line: 3654, column: 3, scope: !1045)
!5772 = !DILocation(line: 3655, column: 3, scope: !1045)
!5773 = !DILocation(line: 3656, column: 64, scope: !1045)
!5774 = !DILocation(line: 3656, column: 79, scope: !1045)
!5775 = !DILocation(line: 3656, column: 93, scope: !1045)
!5776 = !DILocation(line: 3656, column: 3, scope: !1045)
!5777 = !DILocation(line: 3657, column: 11, scope: !1045)
!5778 = !DILocation(line: 3657, column: 3, scope: !1045)
!5779 = !DILocation(line: 3658, column: 3, scope: !1045)
!5780 = !DILocation(line: 3659, column: 3, scope: !1045)
!5781 = !DILocation(line: 3660, column: 3, scope: !1045)
!5782 = !DILocation(line: 3661, column: 3, scope: !1045)
!5783 = !DILocation(line: 3663, column: 10, scope: !1045)
!5784 = !DILocation(line: 3663, column: 3, scope: !1045)
!5785 = !DILocation(line: 3664, column: 1, scope: !1045)
!5786 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_7Context_end", scope: !21, file: !21, line: 3674, type: !379, scopeLine: 3674, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5787)
!5787 = !{!5788, !5789, !5790, !5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5820, !5821, !5823, !5824, !5825, !5827, !5829, !5839, !5842, !5846, !5848, !5849, !5850, !5852, !5860, !5862, !5863, !5864, !5865}
!5788 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5786, file: !21, line: 3674, type: !364)
!5789 = !DILocalVariable(name: "__pyx_v_msg", scope: !5786, file: !21, line: 3675, type: !28)
!5790 = !DILocalVariable(name: "__pyx_v_count", scope: !5786, file: !21, line: 3676, type: !28)
!5791 = !DILocalVariable(name: "__pyx_v_linenos", scope: !5786, file: !21, line: 3677, type: !28)
!5792 = !DILocalVariable(name: "__pyx_7genexpr__pyx_v_x", scope: !5786, file: !21, line: 3678, type: !28)
!5793 = !DILocalVariable(name: "__pyx_8genexpr1__pyx_v_error", scope: !5786, file: !21, line: 3679, type: !28)
!5794 = !DILocalVariable(name: "__pyx_r", scope: !5786, file: !21, line: 3680, type: !28)
!5795 = !DILocalVariable(name: "__pyx_t_1", scope: !5786, file: !21, line: 3682, type: !7)
!5796 = !DILocalVariable(name: "__pyx_t_2", scope: !5786, file: !21, line: 3683, type: !28)
!5797 = !DILocalVariable(name: "__pyx_t_3", scope: !5786, file: !21, line: 3684, type: !34)
!5798 = !DILocalVariable(name: "__pyx_t_4", scope: !5786, file: !21, line: 3685, type: !34)
!5799 = !DILocalVariable(name: "__pyx_t_5", scope: !5786, file: !21, line: 3686, type: !7)
!5800 = !DILocalVariable(name: "__pyx_t_6", scope: !5786, file: !21, line: 3687, type: !28)
!5801 = !DILocalVariable(name: "__pyx_t_7", scope: !5786, file: !21, line: 3688, type: !7)
!5802 = !DILocalVariable(name: "__pyx_t_8", scope: !5786, file: !21, line: 3689, type: !28)
!5803 = !DILocalVariable(name: "__pyx_t_9", scope: !5786, file: !21, line: 3690, type: !28)
!5804 = !DILocalVariable(name: "__pyx_t_10", scope: !5786, file: !21, line: 3691, type: !28)
!5805 = !DILocalVariable(name: "__pyx_t_11", scope: !5786, file: !21, line: 3692, type: !83)
!5806 = !DILocalVariable(name: "__pyx_t_12", scope: !5786, file: !21, line: 3693, type: !34)
!5807 = !DILocalVariable(name: "__pyx_t_13", scope: !5786, file: !21, line: 3694, type: !423)
!5808 = !DILocalVariable(name: "__pyx_t_14", scope: !5786, file: !21, line: 3695, type: !34)
!5809 = !DILocalVariable(name: "__pyx_t_15", scope: !5786, file: !21, line: 3696, type: !83)
!5810 = !DILocalVariable(name: "__pyx_t_16", scope: !5786, file: !21, line: 3697, type: !7)
!5811 = !DILocalVariable(name: "__pyx_lineno", scope: !5786, file: !21, line: 3698, type: !7)
!5812 = !DILocalVariable(name: "__pyx_filename", scope: !5786, file: !21, line: 3699, type: !54)
!5813 = !DILocalVariable(name: "__pyx_clineno", scope: !5786, file: !21, line: 3700, type: !7)
!5814 = !DILocalVariable(name: "sequence", scope: !5815, file: !21, line: 3746, type: !28)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !21, line: 3745, column: 86)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3745, column: 11)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !21, line: 3740, column: 15)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !21, line: 3711, column: 18)
!5819 = distinct !DILexicalBlock(scope: !5786, file: !21, line: 3711, column: 7)
!5820 = !DILocalVariable(name: "size", scope: !5815, file: !21, line: 3747, type: !34)
!5821 = !DILocalVariable(name: "index", scope: !5822, file: !21, line: 3771, type: !34)
!5822 = distinct !DILexicalBlock(scope: !5816, file: !21, line: 3770, column: 14)
!5823 = !DILabel(scope: !5822, name: "__pyx_L6_unpacking_failed", file: !21, line: 3784)
!5824 = !DILabel(scope: !5822, name: "__pyx_L7_unpacking_done", file: !21, line: 3789)
!5825 = !DILocalVariable(name: "tmp", scope: !5826, file: !21, line: 3791, type: !28)
!5826 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3791, column: 7)
!5827 = !DILocalVariable(name: "tmp", scope: !5828, file: !21, line: 3793, type: !28)
!5828 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3793, column: 7)
!5829 = !DILocalVariable(name: "__pyx_temp", scope: !5830, file: !21, line: 3838, type: !34)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !21, line: 3837, column: 15)
!5831 = distinct !DILexicalBlock(scope: !5832, file: !21, line: 3836, column: 55)
!5832 = distinct !DILexicalBlock(scope: !5833, file: !21, line: 3836, column: 17)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !21, line: 3835, column: 36)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !21, line: 3835, column: 15)
!5835 = distinct !DILexicalBlock(scope: !5836, file: !21, line: 3834, column: 18)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !21, line: 3834, column: 9)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !21, line: 3834, column: 9)
!5838 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3822, column: 7)
!5839 = !DILocalVariable(name: "__pyx_temp", scope: !5840, file: !21, line: 3852, type: !34)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !21, line: 3851, column: 15)
!5841 = distinct !DILexicalBlock(scope: !5832, file: !21, line: 3850, column: 20)
!5842 = !DILocalVariable(name: "exc_type", scope: !5843, file: !21, line: 3868, type: !28)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !21, line: 3867, column: 40)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !21, line: 3867, column: 17)
!5845 = distinct !DILexicalBlock(scope: !5834, file: !21, line: 3865, column: 18)
!5846 = !DILocalVariable(name: "tmp", scope: !5847, file: !21, line: 3877, type: !28)
!5847 = distinct !DILexicalBlock(scope: !5835, file: !21, line: 3877, column: 11)
!5848 = !DILabel(scope: !5838, name: "__pyx_L10_error", file: !21, line: 3887)
!5849 = !DILabel(scope: !5838, name: "__pyx_L14_exit_scope", file: !21, line: 3890)
!5850 = !DILocalVariable(name: "tmp", scope: !5851, file: !21, line: 3906, type: !28)
!5851 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3906, column: 7)
!5852 = !DILocalVariable(name: "__pyx_temp", scope: !5853, file: !21, line: 3954, type: !34)
!5853 = distinct !DILexicalBlock(scope: !5854, file: !21, line: 3953, column: 9)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !21, line: 3952, column: 16)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !21, line: 3952, column: 7)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !21, line: 3952, column: 7)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !21, line: 3943, column: 5)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !21, line: 3942, column: 18)
!5859 = distinct !DILexicalBlock(scope: !5786, file: !21, line: 3942, column: 7)
!5860 = !DILocalVariable(name: "tmp", scope: !5861, file: !21, line: 3966, type: !28)
!5861 = distinct !DILexicalBlock(scope: !5854, file: !21, line: 3966, column: 9)
!5862 = !DILabel(scope: !5857, name: "__pyx_L17_error", file: !21, line: 3979)
!5863 = !DILabel(scope: !5857, name: "__pyx_L21_exit_scope", file: !21, line: 3982)
!5864 = !DILabel(scope: !5786, name: "__pyx_L1_error", file: !21, line: 4006)
!5865 = !DILabel(scope: !5786, name: "__pyx_L0", file: !21, line: 4014)
!5866 = !DILocation(line: 3674, column: 119, scope: !5786)
!5867 = !DILocation(line: 3675, column: 3, scope: !5786)
!5868 = !DILocation(line: 3675, column: 13, scope: !5786)
!5869 = !DILocation(line: 3676, column: 3, scope: !5786)
!5870 = !DILocation(line: 3676, column: 13, scope: !5786)
!5871 = !DILocation(line: 3677, column: 3, scope: !5786)
!5872 = !DILocation(line: 3677, column: 13, scope: !5786)
!5873 = !DILocation(line: 3678, column: 3, scope: !5786)
!5874 = !DILocation(line: 3678, column: 13, scope: !5786)
!5875 = !DILocation(line: 3679, column: 3, scope: !5786)
!5876 = !DILocation(line: 3679, column: 13, scope: !5786)
!5877 = !DILocation(line: 3680, column: 3, scope: !5786)
!5878 = !DILocation(line: 3680, column: 13, scope: !5786)
!5879 = !DILocation(line: 3682, column: 3, scope: !5786)
!5880 = !DILocation(line: 3682, column: 7, scope: !5786)
!5881 = !DILocation(line: 3683, column: 3, scope: !5786)
!5882 = !DILocation(line: 3683, column: 13, scope: !5786)
!5883 = !DILocation(line: 3684, column: 3, scope: !5786)
!5884 = !DILocation(line: 3684, column: 14, scope: !5786)
!5885 = !DILocation(line: 3685, column: 3, scope: !5786)
!5886 = !DILocation(line: 3685, column: 14, scope: !5786)
!5887 = !DILocation(line: 3686, column: 3, scope: !5786)
!5888 = !DILocation(line: 3686, column: 7, scope: !5786)
!5889 = !DILocation(line: 3687, column: 3, scope: !5786)
!5890 = !DILocation(line: 3687, column: 13, scope: !5786)
!5891 = !DILocation(line: 3688, column: 3, scope: !5786)
!5892 = !DILocation(line: 3688, column: 7, scope: !5786)
!5893 = !DILocation(line: 3689, column: 3, scope: !5786)
!5894 = !DILocation(line: 3689, column: 13, scope: !5786)
!5895 = !DILocation(line: 3690, column: 3, scope: !5786)
!5896 = !DILocation(line: 3690, column: 13, scope: !5786)
!5897 = !DILocation(line: 3691, column: 3, scope: !5786)
!5898 = !DILocation(line: 3691, column: 13, scope: !5786)
!5899 = !DILocation(line: 3692, column: 3, scope: !5786)
!5900 = !DILocation(line: 3692, column: 15, scope: !5786)
!5901 = !DILocation(line: 3693, column: 3, scope: !5786)
!5902 = !DILocation(line: 3693, column: 14, scope: !5786)
!5903 = !DILocation(line: 3694, column: 3, scope: !5786)
!5904 = !DILocation(line: 3694, column: 11, scope: !5786)
!5905 = !DILocation(line: 3695, column: 3, scope: !5786)
!5906 = !DILocation(line: 3695, column: 14, scope: !5786)
!5907 = !DILocation(line: 3696, column: 3, scope: !5786)
!5908 = !DILocation(line: 3696, column: 15, scope: !5786)
!5909 = !DILocation(line: 3697, column: 3, scope: !5786)
!5910 = !DILocation(line: 3697, column: 7, scope: !5786)
!5911 = !DILocation(line: 3698, column: 3, scope: !5786)
!5912 = !DILocation(line: 3698, column: 7, scope: !5786)
!5913 = !DILocation(line: 3699, column: 3, scope: !5786)
!5914 = !DILocation(line: 3699, column: 15, scope: !5786)
!5915 = !DILocation(line: 3700, column: 3, scope: !5786)
!5916 = !DILocation(line: 3700, column: 7, scope: !5786)
!5917 = !DILocation(line: 3710, column: 37, scope: !5786)
!5918 = !DILocation(line: 3710, column: 51, scope: !5786)
!5919 = !DILocation(line: 3710, column: 15, scope: !5786)
!5920 = !DILocation(line: 3710, column: 13, scope: !5786)
!5921 = !DILocation(line: 3710, column: 62, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5786, file: !21, line: 3710, column: 62)
!5923 = !DILocation(line: 3710, column: 62, scope: !5786)
!5924 = !DILocation(line: 3710, column: 89, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !21, line: 3710, column: 89)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !21, line: 3710, column: 89)
!5927 = !DILocation(line: 3710, column: 89, scope: !5926)
!5928 = !DILocation(line: 3711, column: 7, scope: !5819)
!5929 = !DILocation(line: 3711, column: 7, scope: !5786)
!5930 = !DILocation(line: 3720, column: 5, scope: !5818)
!5931 = !{!1599, !1462, i64 128}
!5932 = !DILocation(line: 3721, column: 19, scope: !5818)
!5933 = !DILocation(line: 3721, column: 17, scope: !5818)
!5934 = !DILocation(line: 3730, column: 15, scope: !5818)
!5935 = !DILocation(line: 3731, column: 9, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5818, file: !21, line: 3731, column: 9)
!5937 = !DILocation(line: 3731, column: 9, scope: !5818)
!5938 = !DILocation(line: 3732, column: 20, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5936, file: !21, line: 3731, column: 50)
!5940 = !DILocation(line: 3732, column: 7, scope: !5939)
!5941 = !DILocation(line: 3733, column: 7, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5943, file: !21, line: 3733, column: 7)
!5943 = distinct !DILexicalBlock(scope: !5939, file: !21, line: 3733, column: 7)
!5944 = !DILocation(line: 3733, column: 7, scope: !5943)
!5945 = !DILocation(line: 3735, column: 37, scope: !5818)
!5946 = !DILocation(line: 3735, column: 51, scope: !5818)
!5947 = !DILocation(line: 3735, column: 60, scope: !5818)
!5948 = !{!1599, !1462, i64 320}
!5949 = !DILocation(line: 3735, column: 17, scope: !5818)
!5950 = !DILocation(line: 3735, column: 15, scope: !5818)
!5951 = !DILocation(line: 3735, column: 115, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5818, file: !21, line: 3735, column: 115)
!5953 = !DILocation(line: 3735, column: 115, scope: !5818)
!5954 = !DILocation(line: 3735, column: 137, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !21, line: 3735, column: 137)
!5956 = distinct !DILexicalBlock(scope: !5952, file: !21, line: 3735, column: 137)
!5957 = !DILocation(line: 3735, column: 137, scope: !5956)
!5958 = !DILocation(line: 3737, column: 5, scope: !5818)
!5959 = !DILocation(line: 3738, column: 17, scope: !5818)
!5960 = !DILocation(line: 3738, column: 15, scope: !5818)
!5961 = !DILocation(line: 3739, column: 15, scope: !5818)
!5962 = !DILocation(line: 3740, column: 5, scope: !5818)
!5963 = !DILocation(line: 3741, column: 40, scope: !5817)
!5964 = !DILocation(line: 3741, column: 51, scope: !5817)
!5965 = !DILocation(line: 3741, column: 98, scope: !5817)
!5966 = !DILocation(line: 3741, column: 19, scope: !5817)
!5967 = !DILocation(line: 3741, column: 17, scope: !5817)
!5968 = !DILocation(line: 3742, column: 11, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3742, column: 11)
!5970 = !DILocation(line: 3742, column: 11, scope: !5817)
!5971 = !DILocation(line: 3742, column: 37, scope: !5969)
!5972 = !DILocation(line: 3743, column: 11, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3743, column: 11)
!5974 = !DILocation(line: 3743, column: 11, scope: !5817)
!5975 = !DILocation(line: 3743, column: 38, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5977, file: !21, line: 3743, column: 38)
!5977 = distinct !DILexicalBlock(scope: !5973, file: !21, line: 3743, column: 38)
!5978 = !DILocation(line: 3743, column: 38, scope: !5977)
!5979 = !DILocation(line: 3745, column: 12, scope: !5816)
!5980 = !DILocation(line: 3745, column: 51, scope: !5816)
!5981 = !DILocation(line: 3745, column: 55, scope: !5816)
!5982 = !DILocation(line: 3745, column: 11, scope: !5817)
!5983 = !DILocation(line: 3746, column: 9, scope: !5815)
!5984 = !DILocation(line: 3746, column: 19, scope: !5815)
!5985 = !DILocation(line: 3746, column: 30, scope: !5815)
!5986 = !DILocation(line: 3747, column: 9, scope: !5815)
!5987 = !DILocation(line: 3747, column: 20, scope: !5815)
!5988 = !DILocation(line: 3747, column: 27, scope: !5815)
!5989 = !DILocation(line: 3748, column: 13, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5815, file: !21, line: 3748, column: 13)
!5991 = !DILocation(line: 3748, column: 13, scope: !5815)
!5992 = !DILocation(line: 3749, column: 15, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5994, file: !21, line: 3749, column: 15)
!5994 = distinct !DILexicalBlock(scope: !5990, file: !21, line: 3748, column: 34)
!5995 = !DILocation(line: 3749, column: 20, scope: !5993)
!5996 = !DILocation(line: 3749, column: 15, scope: !5994)
!5997 = !DILocation(line: 3749, column: 25, scope: !5993)
!5998 = !DILocation(line: 3750, column: 20, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5993, file: !21, line: 3750, column: 20)
!6000 = !DILocation(line: 3750, column: 25, scope: !5999)
!6001 = !DILocation(line: 3750, column: 20, scope: !5993)
!6002 = !DILocation(line: 3750, column: 62, scope: !5999)
!6003 = !DILocation(line: 3750, column: 31, scope: !5999)
!6004 = !DILocation(line: 3751, column: 11, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !21, line: 3751, column: 11)
!6006 = distinct !DILexicalBlock(scope: !5994, file: !21, line: 3751, column: 11)
!6007 = !DILocation(line: 3751, column: 11, scope: !6006)
!6008 = !DILocation(line: 3754, column: 13, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5815, file: !21, line: 3754, column: 13)
!6010 = !DILocation(line: 3754, column: 13, scope: !5815)
!6011 = !DILocation(line: 3755, column: 23, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6009, file: !21, line: 3754, column: 51)
!6013 = !DILocation(line: 3755, column: 21, scope: !6012)
!6014 = !DILocation(line: 3756, column: 23, scope: !6012)
!6015 = !DILocation(line: 3756, column: 21, scope: !6012)
!6016 = !DILocation(line: 3757, column: 9, scope: !6012)
!6017 = !DILocation(line: 3758, column: 23, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6009, file: !21, line: 3757, column: 16)
!6019 = !DILocation(line: 3758, column: 21, scope: !6018)
!6020 = !DILocation(line: 3759, column: 23, scope: !6018)
!6021 = !DILocation(line: 3759, column: 21, scope: !6018)
!6022 = !DILocation(line: 3761, column: 9, scope: !5815)
!6023 = !DILocation(line: 3762, column: 9, scope: !5815)
!6024 = !DILocation(line: 3769, column: 9, scope: !5815)
!6025 = !DILocation(line: 3769, column: 44, scope: !5815)
!6026 = !DILocation(line: 3770, column: 7, scope: !5816)
!6027 = !DILocation(line: 3770, column: 7, scope: !5815)
!6028 = !DILocation(line: 3771, column: 9, scope: !5822)
!6029 = !DILocation(line: 3771, column: 20, scope: !5822)
!6030 = !DILocation(line: 3772, column: 39, scope: !5822)
!6031 = !DILocation(line: 3772, column: 22, scope: !5822)
!6032 = !DILocation(line: 3772, column: 20, scope: !5822)
!6033 = !DILocation(line: 3772, column: 55, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !5822, file: !21, line: 3772, column: 55)
!6035 = !DILocation(line: 3772, column: 55, scope: !5822)
!6036 = !DILocation(line: 3772, column: 78, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !21, line: 3772, column: 78)
!6038 = distinct !DILexicalBlock(scope: !6034, file: !21, line: 3772, column: 78)
!6039 = !DILocation(line: 3772, column: 78, scope: !6038)
!6040 = !DILocation(line: 3774, column: 9, scope: !5822)
!6041 = !DILocation(line: 3774, column: 44, scope: !5822)
!6042 = !DILocation(line: 3775, column: 22, scope: !5822)
!6043 = !DILocation(line: 3775, column: 20, scope: !5822)
!6044 = !DILocation(line: 3776, column: 15, scope: !5822)
!6045 = !DILocation(line: 3776, column: 32, scope: !5822)
!6046 = !DILocation(line: 3776, column: 43, scope: !5822)
!6047 = !DILocation(line: 3776, column: 30, scope: !5822)
!6048 = !DILocation(line: 3776, column: 60, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !5822, file: !21, line: 3776, column: 60)
!6050 = !DILocation(line: 3776, column: 60, scope: !5822)
!6051 = !DILocation(line: 3776, column: 82, scope: !6049)
!6052 = !DILocation(line: 3778, column: 15, scope: !5822)
!6053 = !DILocation(line: 3778, column: 32, scope: !5822)
!6054 = !DILocation(line: 3778, column: 43, scope: !5822)
!6055 = !DILocation(line: 3778, column: 30, scope: !5822)
!6056 = !DILocation(line: 3778, column: 60, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5822, file: !21, line: 3778, column: 60)
!6058 = !DILocation(line: 3778, column: 60, scope: !5822)
!6059 = !DILocation(line: 3778, column: 82, scope: !6057)
!6060 = !DILocation(line: 3780, column: 42, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !5822, file: !21, line: 3780, column: 13)
!6062 = !DILocation(line: 3780, column: 53, scope: !6061)
!6063 = !DILocation(line: 3780, column: 13, scope: !6061)
!6064 = !DILocation(line: 3780, column: 69, scope: !6061)
!6065 = !DILocation(line: 3780, column: 13, scope: !5822)
!6066 = !DILocation(line: 3780, column: 74, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !21, line: 3780, column: 74)
!6068 = distinct !DILexicalBlock(scope: !6061, file: !21, line: 3780, column: 74)
!6069 = !DILocation(line: 3780, column: 74, scope: !6068)
!6070 = !DILocation(line: 3781, column: 20, scope: !5822)
!6071 = !DILocation(line: 3782, column: 9, scope: !5822)
!6072 = !DILocation(line: 3782, column: 46, scope: !5822)
!6073 = !DILocation(line: 3783, column: 9, scope: !5822)
!6074 = !DILocation(line: 3784, column: 9, scope: !5822)
!6075 = !DILocation(line: 3785, column: 9, scope: !5822)
!6076 = !DILocation(line: 3785, column: 46, scope: !5822)
!6077 = !DILocation(line: 3786, column: 20, scope: !5822)
!6078 = !DILocation(line: 3787, column: 13, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !5822, file: !21, line: 3787, column: 13)
!6080 = !DILocation(line: 3787, column: 32, scope: !6079)
!6081 = !DILocation(line: 3787, column: 13, scope: !5822)
!6082 = !DILocation(line: 3787, column: 69, scope: !6079)
!6083 = !DILocation(line: 3787, column: 38, scope: !6079)
!6084 = !DILocation(line: 3788, column: 9, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !21, line: 3788, column: 9)
!6086 = distinct !DILexicalBlock(scope: !5822, file: !21, line: 3788, column: 9)
!6087 = !DILocation(line: 3788, column: 9, scope: !6086)
!6088 = !DILocation(line: 3789, column: 9, scope: !5822)
!6089 = !DILocation(line: 3790, column: 7, scope: !5816)
!6090 = !DILocation(line: 3791, column: 7, scope: !5817)
!6091 = !DILocation(line: 3791, column: 7, scope: !5826)
!6092 = !DILocation(line: 3792, column: 17, scope: !5817)
!6093 = !DILocation(line: 3793, column: 7, scope: !5817)
!6094 = !DILocation(line: 3793, column: 7, scope: !5828)
!6095 = !DILocation(line: 3794, column: 17, scope: !5817)
!6096 = !DILocation(line: 3803, column: 19, scope: !5817)
!6097 = !DILocation(line: 3803, column: 17, scope: !5817)
!6098 = !DILocation(line: 3803, column: 39, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3803, column: 39)
!6100 = !DILocation(line: 3803, column: 39, scope: !5817)
!6101 = !DILocation(line: 3803, column: 61, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !21, line: 3803, column: 61)
!6103 = distinct !DILexicalBlock(scope: !6099, file: !21, line: 3803, column: 61)
!6104 = !DILocation(line: 3803, column: 61, scope: !6103)
!6105 = !DILocation(line: 3805, column: 18, scope: !5817)
!6106 = !DILocation(line: 3806, column: 18, scope: !5817)
!6107 = !DILocation(line: 3807, column: 7, scope: !5817)
!6108 = !{!1599, !1462, i64 64}
!6109 = !DILocation(line: 3808, column: 18, scope: !5817)
!6110 = !DILocation(line: 3810, column: 7, scope: !5817)
!6111 = !DILocation(line: 3811, column: 19, scope: !5817)
!6112 = !DILocation(line: 3811, column: 17, scope: !5817)
!6113 = !DILocation(line: 3811, column: 88, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3811, column: 88)
!6115 = !DILocation(line: 3811, column: 88, scope: !5817)
!6116 = !DILocation(line: 3811, column: 110, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !21, line: 3811, column: 110)
!6118 = distinct !DILexicalBlock(scope: !6114, file: !21, line: 3811, column: 110)
!6119 = !DILocation(line: 3811, column: 110, scope: !6118)
!6120 = !DILocation(line: 3813, column: 21, scope: !5817)
!6121 = !DILocation(line: 3813, column: 65, scope: !5817)
!6122 = !DILocation(line: 3813, column: 63, scope: !5817)
!6123 = !DILocation(line: 3813, column: 20, scope: !5817)
!6124 = !DILocation(line: 3813, column: 79, scope: !5817)
!6125 = !DILocation(line: 3813, column: 123, scope: !5817)
!6126 = !DILocation(line: 3813, column: 18, scope: !5817)
!6127 = !DILocation(line: 3814, column: 21, scope: !5817)
!6128 = !DILocation(line: 3814, column: 18, scope: !5817)
!6129 = !DILocation(line: 3816, column: 7, scope: !5817)
!6130 = !DILocation(line: 3817, column: 17, scope: !5817)
!6131 = !DILocation(line: 3818, column: 7, scope: !5817)
!6132 = !{!1599, !1462, i64 200}
!6133 = !DILocation(line: 3819, column: 18, scope: !5817)
!6134 = !DILocation(line: 3821, column: 7, scope: !5817)
!6135 = !DILocation(line: 3823, column: 21, scope: !5838)
!6136 = !DILocation(line: 3823, column: 19, scope: !5838)
!6137 = !DILocation(line: 3823, column: 40, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !5838, file: !21, line: 3823, column: 40)
!6139 = !DILocation(line: 3823, column: 40, scope: !5838)
!6140 = !DILocation(line: 3823, column: 62, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !21, line: 3823, column: 62)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !21, line: 3823, column: 62)
!6143 = !DILocation(line: 3823, column: 62, scope: !6142)
!6144 = !DILocation(line: 3825, column: 13, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !5838, file: !21, line: 3825, column: 13)
!6146 = !DILocation(line: 3825, column: 56, scope: !6145)
!6147 = !DILocation(line: 3825, column: 59, scope: !6145)
!6148 = !DILocation(line: 3825, column: 13, scope: !5838)
!6149 = !DILocation(line: 3826, column: 23, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6145, file: !21, line: 3825, column: 96)
!6151 = !DILocation(line: 3826, column: 21, scope: !6150)
!6152 = !DILocation(line: 3826, column: 40, scope: !6150)
!6153 = !DILocation(line: 3827, column: 22, scope: !6150)
!6154 = !DILocation(line: 3828, column: 22, scope: !6150)
!6155 = !DILocation(line: 3829, column: 9, scope: !6150)
!6156 = !DILocation(line: 3830, column: 22, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6145, file: !21, line: 3829, column: 16)
!6158 = !DILocation(line: 3830, column: 57, scope: !6157)
!6159 = !DILocation(line: 3830, column: 40, scope: !6157)
!6160 = !DILocation(line: 3830, column: 38, scope: !6157)
!6161 = !DILocation(line: 3830, column: 79, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6157, file: !21, line: 3830, column: 79)
!6163 = !DILocation(line: 3830, column: 79, scope: !6157)
!6164 = !DILocation(line: 3830, column: 101, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !21, line: 3830, column: 101)
!6166 = distinct !DILexicalBlock(scope: !6162, file: !21, line: 3830, column: 101)
!6167 = !DILocation(line: 3830, column: 101, scope: !6166)
!6168 = !DILocation(line: 3832, column: 24, scope: !6157)
!6169 = !DILocation(line: 3832, column: 22, scope: !6157)
!6170 = !DILocation(line: 3832, column: 71, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6157, file: !21, line: 3832, column: 71)
!6172 = !DILocation(line: 3832, column: 71, scope: !6157)
!6173 = !DILocation(line: 3832, column: 94, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !21, line: 3832, column: 94)
!6175 = distinct !DILexicalBlock(scope: !6171, file: !21, line: 3832, column: 94)
!6176 = !DILocation(line: 3832, column: 94, scope: !6175)
!6177 = !DILocation(line: 3834, column: 9, scope: !5838)
!6178 = !DILocation(line: 3835, column: 15, scope: !5834)
!6179 = !DILocation(line: 3835, column: 15, scope: !5835)
!6180 = !DILocation(line: 3836, column: 17, scope: !5832)
!6181 = !DILocation(line: 3836, column: 17, scope: !5833)
!6182 = !DILocation(line: 3838, column: 17, scope: !5830)
!6183 = !DILocation(line: 3838, column: 28, scope: !5830)
!6184 = !DILocation(line: 3838, column: 41, scope: !5830)
!6185 = !DILocation(line: 3842, column: 21, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !5830, file: !21, line: 3842, column: 21)
!6187 = !DILocation(line: 3842, column: 35, scope: !6186)
!6188 = !DILocation(line: 3842, column: 32, scope: !6186)
!6189 = !DILocation(line: 3842, column: 21, scope: !5830)
!6190 = !DILocation(line: 3842, column: 47, scope: !6186)
!6191 = !DILocation(line: 3843, column: 15, scope: !5831)
!6192 = !DILocation(line: 3845, column: 28, scope: !5831)
!6193 = !DILocation(line: 3845, column: 26, scope: !5831)
!6194 = !DILocation(line: 3845, column: 68, scope: !5831)
!6195 = !DILocation(line: 3845, column: 104, scope: !5831)
!6196 = !DILocation(line: 3850, column: 13, scope: !5831)
!6197 = !DILocation(line: 3852, column: 17, scope: !5840)
!6198 = !DILocation(line: 3852, column: 28, scope: !5840)
!6199 = !DILocation(line: 3852, column: 41, scope: !5840)
!6200 = !DILocation(line: 3856, column: 21, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !5840, file: !21, line: 3856, column: 21)
!6202 = !DILocation(line: 3856, column: 35, scope: !6201)
!6203 = !DILocation(line: 3856, column: 32, scope: !6201)
!6204 = !DILocation(line: 3856, column: 21, scope: !5840)
!6205 = !DILocation(line: 3856, column: 47, scope: !6201)
!6206 = !DILocation(line: 3857, column: 15, scope: !5841)
!6207 = !DILocation(line: 3859, column: 28, scope: !5841)
!6208 = !DILocation(line: 3859, column: 26, scope: !5841)
!6209 = !DILocation(line: 3859, column: 69, scope: !5841)
!6210 = !DILocation(line: 3859, column: 105, scope: !5841)
!6211 = !DILocation(line: 3865, column: 11, scope: !5833)
!6212 = !DILocation(line: 3866, column: 26, scope: !5845)
!6213 = !DILocation(line: 3866, column: 37, scope: !5845)
!6214 = !DILocation(line: 3866, column: 24, scope: !5845)
!6215 = !DILocation(line: 3867, column: 17, scope: !5844)
!6216 = !DILocation(line: 3867, column: 17, scope: !5845)
!6217 = !DILocation(line: 3868, column: 15, scope: !5843)
!6218 = !DILocation(line: 3868, column: 25, scope: !5843)
!6219 = !DILocation(line: 3868, column: 36, scope: !5843)
!6220 = !DILocation(line: 3869, column: 19, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !5843, file: !21, line: 3869, column: 19)
!6222 = !DILocation(line: 3869, column: 19, scope: !5843)
!6223 = !DILocation(line: 3870, column: 21, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !21, line: 3870, column: 21)
!6225 = distinct !DILexicalBlock(scope: !6221, file: !21, line: 3869, column: 29)
!6226 = !DILocation(line: 3870, column: 21, scope: !6225)
!6227 = !DILocation(line: 3870, column: 95, scope: !6224)
!6228 = !DILocation(line: 3871, column: 22, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !21, line: 3871, column: 22)
!6230 = distinct !DILexicalBlock(scope: !6224, file: !21, line: 3871, column: 22)
!6231 = !DILocation(line: 3871, column: 22, scope: !6230)
!6232 = !DILocation(line: 3872, column: 15, scope: !6225)
!6233 = !DILocation(line: 3873, column: 15, scope: !5843)
!6234 = !DILocation(line: 3874, column: 13, scope: !5844)
!6235 = !DILocation(line: 3877, column: 11, scope: !5835)
!6236 = !DILocation(line: 3877, column: 11, scope: !5847)
!6237 = !DILocation(line: 3878, column: 22, scope: !5835)
!6238 = !DILocation(line: 3879, column: 24, scope: !5835)
!6239 = !DILocation(line: 3879, column: 22, scope: !5835)
!6240 = !DILocation(line: 3879, column: 103, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !5835, file: !21, line: 3879, column: 103)
!6242 = !DILocation(line: 3879, column: 103, scope: !5835)
!6243 = !DILocation(line: 3879, column: 126, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !21, line: 3879, column: 126)
!6245 = distinct !DILexicalBlock(scope: !6241, file: !21, line: 3879, column: 126)
!6246 = !DILocation(line: 3879, column: 126, scope: !6245)
!6247 = !DILocation(line: 3881, column: 15, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !5835, file: !21, line: 3881, column: 15)
!6249 = !DILocation(line: 3881, column: 15, scope: !5835)
!6250 = !DILocation(line: 3881, column: 82, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6252, file: !21, line: 3881, column: 82)
!6252 = distinct !DILexicalBlock(scope: !6248, file: !21, line: 3881, column: 82)
!6253 = !DILocation(line: 3881, column: 82, scope: !6252)
!6254 = !DILocation(line: 3882, column: 11, scope: !5835)
!6255 = !DILocation(line: 3882, column: 48, scope: !5835)
!6256 = !DILocation(line: 3834, column: 9, scope: !5836)
!6257 = distinct !{!6257, !6258, !6259}
!6258 = !DILocation(line: 3834, column: 9, scope: !5837)
!6259 = !DILocation(line: 3883, column: 9, scope: !5837)
!6260 = !DILocation(line: 3884, column: 9, scope: !5838)
!6261 = !DILocation(line: 3884, column: 44, scope: !5838)
!6262 = !DILocation(line: 3885, column: 9, scope: !5838)
!6263 = !DILocation(line: 3885, column: 73, scope: !5838)
!6264 = !DILocation(line: 3886, column: 9, scope: !5838)
!6265 = !DILocation(line: 3887, column: 9, scope: !5838)
!6266 = !DILocation(line: 3888, column: 9, scope: !5838)
!6267 = !DILocation(line: 3888, column: 73, scope: !5838)
!6268 = !DILocation(line: 3889, column: 9, scope: !5838)
!6269 = !DILocation(line: 3890, column: 9, scope: !5838)
!6270 = !DILocation(line: 3892, column: 34, scope: !5817)
!6271 = !{!1599, !1462, i64 144}
!6272 = !DILocation(line: 3892, column: 49, scope: !5817)
!6273 = !DILocation(line: 3892, column: 19, scope: !5817)
!6274 = !DILocation(line: 3892, column: 17, scope: !5817)
!6275 = !DILocation(line: 3892, column: 65, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3892, column: 65)
!6277 = !DILocation(line: 3892, column: 65, scope: !5817)
!6278 = !DILocation(line: 3892, column: 87, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !21, line: 3892, column: 87)
!6280 = distinct !DILexicalBlock(scope: !6276, file: !21, line: 3892, column: 87)
!6281 = !DILocation(line: 3892, column: 87, scope: !6280)
!6282 = !DILocation(line: 3894, column: 7, scope: !5817)
!6283 = !DILocation(line: 3894, column: 42, scope: !5817)
!6284 = !DILocation(line: 3895, column: 21, scope: !5817)
!6285 = !DILocation(line: 3895, column: 65, scope: !5817)
!6286 = !DILocation(line: 3895, column: 63, scope: !5817)
!6287 = !DILocation(line: 3895, column: 20, scope: !5817)
!6288 = !DILocation(line: 3895, column: 79, scope: !5817)
!6289 = !DILocation(line: 3895, column: 123, scope: !5817)
!6290 = !DILocation(line: 3895, column: 18, scope: !5817)
!6291 = !DILocation(line: 3896, column: 21, scope: !5817)
!6292 = !DILocation(line: 3896, column: 18, scope: !5817)
!6293 = !DILocation(line: 3898, column: 7, scope: !5817)
!6294 = !DILocation(line: 3899, column: 17, scope: !5817)
!6295 = !DILocation(line: 3900, column: 40, scope: !5817)
!6296 = !DILocation(line: 3900, column: 54, scope: !5817)
!6297 = !DILocation(line: 3900, column: 66, scope: !5817)
!6298 = !DILocation(line: 3900, column: 19, scope: !5817)
!6299 = !DILocation(line: 3900, column: 17, scope: !5817)
!6300 = !DILocation(line: 3900, column: 83, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3900, column: 83)
!6302 = !DILocation(line: 3900, column: 83, scope: !5817)
!6303 = !DILocation(line: 3900, column: 105, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !21, line: 3900, column: 105)
!6305 = distinct !DILexicalBlock(scope: !6301, file: !21, line: 3900, column: 105)
!6306 = !DILocation(line: 3900, column: 105, scope: !6305)
!6307 = !DILocation(line: 3902, column: 7, scope: !5817)
!6308 = !DILocation(line: 3902, column: 42, scope: !5817)
!6309 = !DILocation(line: 3903, column: 19, scope: !5817)
!6310 = !DILocation(line: 3903, column: 17, scope: !5817)
!6311 = !DILocation(line: 3903, column: 78, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !5817, file: !21, line: 3903, column: 78)
!6313 = !DILocation(line: 3903, column: 78, scope: !5817)
!6314 = !DILocation(line: 3903, column: 100, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !21, line: 3903, column: 100)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !21, line: 3903, column: 100)
!6317 = !DILocation(line: 3903, column: 100, scope: !6316)
!6318 = !DILocation(line: 3905, column: 7, scope: !5817)
!6319 = !DILocation(line: 3905, column: 42, scope: !5817)
!6320 = !DILocation(line: 3906, column: 7, scope: !5817)
!6321 = !DILocation(line: 3906, column: 7, scope: !5851)
!6322 = !DILocation(line: 3907, column: 17, scope: !5817)
!6323 = distinct !{!6323, !5962, !6324}
!6324 = !DILocation(line: 3908, column: 5, scope: !5818)
!6325 = !DILocation(line: 3909, column: 5, scope: !5818)
!6326 = !DILocation(line: 3909, column: 40, scope: !5818)
!6327 = !DILocation(line: 3918, column: 9, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !5818, file: !21, line: 3918, column: 9)
!6329 = !DILocation(line: 3918, column: 9, scope: !5818)
!6330 = !DILocation(line: 3919, column: 20, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6328, file: !21, line: 3918, column: 52)
!6332 = !DILocation(line: 3919, column: 7, scope: !6331)
!6333 = !DILocation(line: 3920, column: 7, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !21, line: 3920, column: 7)
!6335 = distinct !DILexicalBlock(scope: !6331, file: !21, line: 3920, column: 7)
!6336 = !DILocation(line: 3920, column: 7, scope: !6335)
!6337 = !DILocation(line: 3922, column: 38, scope: !5818)
!6338 = !DILocation(line: 3922, column: 52, scope: !5818)
!6339 = !DILocation(line: 3922, column: 60, scope: !5818)
!6340 = !DILocation(line: 3922, column: 18, scope: !5818)
!6341 = !DILocation(line: 3922, column: 16, scope: !5818)
!6342 = !DILocation(line: 3922, column: 78, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !5818, file: !21, line: 3922, column: 78)
!6344 = !DILocation(line: 3922, column: 78, scope: !5818)
!6345 = !DILocation(line: 3922, column: 113, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !21, line: 3922, column: 113)
!6347 = distinct !DILexicalBlock(scope: !6343, file: !21, line: 3922, column: 113)
!6348 = !DILocation(line: 3922, column: 113, scope: !6347)
!6349 = !DILocation(line: 3931, column: 3, scope: !5818)
!6350 = !DILocation(line: 3940, column: 3, scope: !5786)
!6351 = !DILocation(line: 3941, column: 16, scope: !5786)
!6352 = !DILocation(line: 3941, column: 30, scope: !5786)
!6353 = !DILocation(line: 3941, column: 37, scope: !5786)
!6354 = !DILocation(line: 3941, column: 48, scope: !5786)
!6355 = !DILocation(line: 3941, column: 51, scope: !5786)
!6356 = !DILocation(line: 3941, column: 89, scope: !5786)
!6357 = !DILocation(line: 0, scope: !5786)
!6358 = !DILocation(line: 3941, column: 13, scope: !5786)
!6359 = !DILocation(line: 3942, column: 7, scope: !5859)
!6360 = !DILocation(line: 3942, column: 7, scope: !5786)
!6361 = !DILocation(line: 3944, column: 19, scope: !5857)
!6362 = !DILocation(line: 3944, column: 17, scope: !5857)
!6363 = !DILocation(line: 3944, column: 38, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !5857, file: !21, line: 3944, column: 38)
!6365 = !DILocation(line: 3944, column: 38, scope: !5857)
!6366 = !DILocation(line: 3944, column: 60, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !21, line: 3944, column: 60)
!6368 = distinct !DILexicalBlock(scope: !6364, file: !21, line: 3944, column: 60)
!6369 = !DILocation(line: 3944, column: 60, scope: !6368)
!6370 = !DILocation(line: 3946, column: 11, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !5857, file: !21, line: 3946, column: 11)
!6372 = !DILocation(line: 3946, column: 11, scope: !5857)
!6373 = !DILocation(line: 3947, column: 25, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6371, file: !21, line: 3946, column: 54)
!6375 = !DILocation(line: 3947, column: 9, scope: !6374)
!6376 = !DILocation(line: 3948, column: 9, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !21, line: 3948, column: 9)
!6378 = distinct !DILexicalBlock(scope: !6374, file: !21, line: 3948, column: 9)
!6379 = !DILocation(line: 3948, column: 9, scope: !6378)
!6380 = !DILocation(line: 3950, column: 19, scope: !5857)
!6381 = !DILocation(line: 3950, column: 33, scope: !5857)
!6382 = !DILocation(line: 3950, column: 17, scope: !5857)
!6383 = !DILocation(line: 3950, column: 41, scope: !5857)
!6384 = !DILocation(line: 3951, column: 17, scope: !5857)
!6385 = !DILocation(line: 3952, column: 7, scope: !5857)
!6386 = !DILocation(line: 3954, column: 11, scope: !5853)
!6387 = !DILocation(line: 3954, column: 22, scope: !5853)
!6388 = !DILocation(line: 3954, column: 35, scope: !5853)
!6389 = !DILocation(line: 3958, column: 15, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !5853, file: !21, line: 3958, column: 15)
!6391 = !DILocation(line: 3958, column: 28, scope: !6390)
!6392 = !DILocation(line: 3958, column: 25, scope: !6390)
!6393 = !DILocation(line: 3958, column: 15, scope: !5853)
!6394 = !DILocation(line: 3958, column: 40, scope: !6390)
!6395 = !DILocation(line: 3959, column: 9, scope: !5854)
!6396 = !DILocation(line: 3961, column: 21, scope: !5854)
!6397 = !DILocation(line: 3961, column: 19, scope: !5854)
!6398 = !DILocation(line: 3961, column: 60, scope: !5854)
!6399 = !DILocation(line: 3961, column: 94, scope: !5854)
!6400 = !DILocation(line: 3966, column: 9, scope: !5854)
!6401 = !DILocation(line: 3966, column: 9, scope: !5861)
!6402 = !DILocation(line: 3967, column: 19, scope: !5854)
!6403 = !DILocation(line: 3968, column: 21, scope: !5854)
!6404 = !DILocation(line: 3968, column: 19, scope: !5854)
!6405 = !DILocation(line: 3968, column: 105, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !5854, file: !21, line: 3968, column: 105)
!6407 = !DILocation(line: 3968, column: 105, scope: !5854)
!6408 = !DILocation(line: 3968, column: 127, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !21, line: 3968, column: 127)
!6410 = distinct !DILexicalBlock(scope: !6406, file: !21, line: 3968, column: 127)
!6411 = !DILocation(line: 3968, column: 127, scope: !6410)
!6412 = !DILocation(line: 3970, column: 22, scope: !5854)
!6413 = !{!1599, !1462, i64 112}
!6414 = !DILocation(line: 3970, column: 20, scope: !5854)
!6415 = !DILocation(line: 3970, column: 82, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !5854, file: !21, line: 3970, column: 82)
!6417 = !DILocation(line: 3970, column: 82, scope: !5854)
!6418 = !DILocation(line: 3970, column: 105, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !21, line: 3970, column: 105)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !21, line: 3970, column: 105)
!6421 = !DILocation(line: 3970, column: 105, scope: !6420)
!6422 = !DILocation(line: 3972, column: 9, scope: !5854)
!6423 = !DILocation(line: 3972, column: 44, scope: !5854)
!6424 = !DILocation(line: 3973, column: 13, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !5854, file: !21, line: 3973, column: 13)
!6426 = !DILocation(line: 3973, column: 13, scope: !5854)
!6427 = !DILocation(line: 3973, column: 80, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6429, file: !21, line: 3973, column: 80)
!6429 = distinct !DILexicalBlock(scope: !6425, file: !21, line: 3973, column: 80)
!6430 = !DILocation(line: 3973, column: 80, scope: !6429)
!6431 = !DILocation(line: 3974, column: 9, scope: !5854)
!6432 = !DILocation(line: 3974, column: 46, scope: !5854)
!6433 = !DILocation(line: 3952, column: 7, scope: !5855)
!6434 = distinct !{!6434, !6435, !6436}
!6435 = !DILocation(line: 3952, column: 7, scope: !5856)
!6436 = !DILocation(line: 3975, column: 7, scope: !5856)
!6437 = !DILocation(line: 3976, column: 7, scope: !5857)
!6438 = !DILocation(line: 3976, column: 42, scope: !5857)
!6439 = !DILocation(line: 3977, column: 7, scope: !5857)
!6440 = !DILocation(line: 3977, column: 81, scope: !5857)
!6441 = !DILocation(line: 3978, column: 7, scope: !5857)
!6442 = !DILocation(line: 3979, column: 7, scope: !5857)
!6443 = !DILocation(line: 3980, column: 7, scope: !5857)
!6444 = !DILocation(line: 3980, column: 81, scope: !5857)
!6445 = !DILocation(line: 3981, column: 7, scope: !5857)
!6446 = !DILocation(line: 3982, column: 7, scope: !5857)
!6447 = !DILocation(line: 3984, column: 32, scope: !5858)
!6448 = !{!1599, !1462, i64 152}
!6449 = !DILocation(line: 3984, column: 47, scope: !5858)
!6450 = !DILocation(line: 3984, column: 17, scope: !5858)
!6451 = !DILocation(line: 3984, column: 15, scope: !5858)
!6452 = !DILocation(line: 3984, column: 63, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !5858, file: !21, line: 3984, column: 63)
!6454 = !DILocation(line: 3984, column: 63, scope: !5858)
!6455 = !DILocation(line: 3984, column: 85, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !21, line: 3984, column: 85)
!6457 = distinct !DILexicalBlock(scope: !6453, file: !21, line: 3984, column: 85)
!6458 = !DILocation(line: 3984, column: 85, scope: !6457)
!6459 = !DILocation(line: 3986, column: 5, scope: !5858)
!6460 = !DILocation(line: 3986, column: 40, scope: !5858)
!6461 = !DILocation(line: 3987, column: 17, scope: !5858)
!6462 = !DILocation(line: 3987, column: 15, scope: !5858)
!6463 = !DILocation(line: 3988, column: 15, scope: !5858)
!6464 = !DILocation(line: 3989, column: 3, scope: !5858)
!6465 = !DILocation(line: 3990, column: 5, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !5859, file: !21, line: 3989, column: 10)
!6467 = !DILocation(line: 3991, column: 15, scope: !6466)
!6468 = !DILocation(line: 3993, column: 13, scope: !5786)
!6469 = !DILocation(line: 3993, column: 11, scope: !5786)
!6470 = !DILocation(line: 3994, column: 13, scope: !5786)
!6471 = !DILocation(line: 3995, column: 3, scope: !5786)
!6472 = !DILocation(line: 4006, column: 3, scope: !5786)
!6473 = !DILocation(line: 4007, column: 3, scope: !5786)
!6474 = !DILocation(line: 4008, column: 3, scope: !5786)
!6475 = !DILocation(line: 4009, column: 3, scope: !5786)
!6476 = !DILocation(line: 4010, column: 3, scope: !5786)
!6477 = !DILocation(line: 4011, column: 3, scope: !5786)
!6478 = !DILocation(line: 4012, column: 61, scope: !5786)
!6479 = !DILocation(line: 4012, column: 76, scope: !5786)
!6480 = !DILocation(line: 4012, column: 90, scope: !5786)
!6481 = !DILocation(line: 4012, column: 3, scope: !5786)
!6482 = !DILocation(line: 4013, column: 11, scope: !5786)
!6483 = !DILocation(line: 4013, column: 3, scope: !5786)
!6484 = !DILocation(line: 4014, column: 3, scope: !5786)
!6485 = !DILocation(line: 4015, column: 3, scope: !5786)
!6486 = !DILocation(line: 4016, column: 3, scope: !5786)
!6487 = !DILocation(line: 4017, column: 3, scope: !5786)
!6488 = !DILocation(line: 4018, column: 3, scope: !5786)
!6489 = !DILocation(line: 4019, column: 3, scope: !5786)
!6490 = !DILocation(line: 4022, column: 10, scope: !5786)
!6491 = !DILocation(line: 4022, column: 3, scope: !5786)
!6492 = !DILocation(line: 4023, column: 1, scope: !5786)
!6493 = distinct !DISubprogram(name: "__Pyx_PyType_Ready", scope: !21, file: !21, line: 9617, type: !6494, scopeLine: 9617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6496)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!7, !42}
!6496 = !{!6497, !6498, !6499, !6500}
!6497 = !DILocalVariable(name: "t", arg: 1, scope: !6493, file: !21, line: 9617, type: !42)
!6498 = !DILocalVariable(name: "r", scope: !6493, file: !21, line: 9625, type: !7)
!6499 = !DILocalVariable(name: "bases", scope: !6493, file: !21, line: 9626, type: !28)
!6500 = !DILocalVariable(name: "gc_was_enabled", scope: !6501, file: !21, line: 9631, type: !7)
!6501 = distinct !DILexicalBlock(scope: !6493, file: !21, line: 9630, column: 5)
!6502 = !DILocation(line: 9617, column: 45, scope: !6493)
!6503 = !DILocation(line: 9625, column: 5, scope: !6493)
!6504 = !DILocation(line: 9625, column: 9, scope: !6493)
!6505 = !DILocation(line: 9626, column: 5, scope: !6493)
!6506 = !DILocation(line: 9626, column: 15, scope: !6493)
!6507 = !DILocation(line: 9626, column: 23, scope: !6493)
!6508 = !{!1897, !1462, i64 336}
!6509 = !DILocation(line: 9627, column: 9, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6493, file: !21, line: 9627, column: 9)
!6511 = !DILocation(line: 9627, column: 15, scope: !6510)
!6512 = !DILocation(line: 9627, column: 18, scope: !6510)
!6513 = !{!1897, !1462, i64 24}
!6514 = !DILocation(line: 9627, column: 9, scope: !6493)
!6515 = !DILocation(line: 9628, column: 9, scope: !6510)
!6516 = !DILocation(line: 9631, column: 9, scope: !6501)
!6517 = !DILocation(line: 9631, column: 13, scope: !6501)
!6518 = !DILocation(line: 9633, column: 26, scope: !6501)
!6519 = !DILocation(line: 9633, column: 24, scope: !6501)
!6520 = !DILocation(line: 9662, column: 9, scope: !6501)
!6521 = !DILocation(line: 9662, column: 12, scope: !6501)
!6522 = !DILocation(line: 9662, column: 21, scope: !6501)
!6523 = !DILocation(line: 9664, column: 9, scope: !6501)
!6524 = !DILocation(line: 9664, column: 12, scope: !6501)
!6525 = !DILocation(line: 9664, column: 21, scope: !6501)
!6526 = !DILocation(line: 9669, column: 22, scope: !6501)
!6527 = !DILocation(line: 9669, column: 9, scope: !6501)
!6528 = !DILocation(line: 9669, column: 7, scope: !6501)
!6529 = !DILocation(line: 9671, column: 9, scope: !6501)
!6530 = !DILocation(line: 9671, column: 12, scope: !6501)
!6531 = !DILocation(line: 9671, column: 21, scope: !6501)
!6532 = !DILocation(line: 9673, column: 13, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6501, file: !21, line: 9673, column: 13)
!6534 = !DILocation(line: 9673, column: 13, scope: !6501)
!6535 = !DILocation(line: 9674, column: 13, scope: !6533)
!6536 = !DILocation(line: 9692, column: 5, scope: !6493)
!6537 = !DILocation(line: 9694, column: 12, scope: !6493)
!6538 = !DILocation(line: 9694, column: 5, scope: !6493)
!6539 = !DILocation(line: 9696, column: 1, scope: !6493)
!6540 = distinct !DISubprogram(name: "__Pyx_SetVtable", scope: !21, file: !21, line: 9741, type: !6541, scopeLine: 9741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!7, !42, !27}
!6543 = !{!6544, !6545, !6546, !6547}
!6544 = !DILocalVariable(name: "type", arg: 1, scope: !6540, file: !21, line: 9741, type: !42)
!6545 = !DILocalVariable(name: "vtable", arg: 2, scope: !6540, file: !21, line: 9741, type: !27)
!6546 = !DILocalVariable(name: "ob", scope: !6540, file: !21, line: 9742, type: !28)
!6547 = !DILabel(scope: !6540, name: "bad", file: !21, line: 9753)
!6548 = !DILocation(line: 9741, column: 42, scope: !6540)
!6549 = !DILocation(line: 9741, column: 54, scope: !6540)
!6550 = !DILocation(line: 9742, column: 5, scope: !6540)
!6551 = !DILocation(line: 9742, column: 15, scope: !6540)
!6552 = !DILocation(line: 9742, column: 34, scope: !6540)
!6553 = !DILocation(line: 9742, column: 20, scope: !6540)
!6554 = !DILocation(line: 9743, column: 9, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6540, file: !21, line: 9743, column: 9)
!6556 = !DILocation(line: 9743, column: 9, scope: !6540)
!6557 = !DILocation(line: 9744, column: 9, scope: !6555)
!6558 = !DILocation(line: 9748, column: 9, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6540, file: !21, line: 9748, column: 9)
!6560 = !{!1897, !1462, i64 264}
!6561 = !{!1599, !1462, i64 384}
!6562 = !DILocation(line: 9748, column: 9, scope: !6540)
!6563 = !DILocation(line: 9750, column: 9, scope: !6559)
!6564 = !DILocation(line: 9751, column: 5, scope: !6540)
!6565 = !DILocation(line: 9752, column: 5, scope: !6540)
!6566 = !DILocation(line: 9753, column: 1, scope: !6540)
!6567 = !DILocation(line: 9754, column: 5, scope: !6540)
!6568 = !DILocation(line: 9755, column: 5, scope: !6540)
!6569 = !DILocation(line: 9756, column: 1, scope: !6540)
!6570 = distinct !DISubprogram(name: "__Pyx_MergeVtables", scope: !21, file: !21, line: 9780, type: !6494, scopeLine: 9780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6571)
!6571 = !{!6572, !6573, !6574, !6575, !6577, !6578, !6579, !6580, !6581, !6583, !6587, !6590, !6591}
!6572 = !DILocalVariable(name: "type", arg: 1, scope: !6570, file: !21, line: 9780, type: !42)
!6573 = !DILocalVariable(name: "i", scope: !6570, file: !21, line: 9781, type: !7)
!6574 = !DILocalVariable(name: "base_vtables", scope: !6570, file: !21, line: 9782, type: !501)
!6575 = !DILocalVariable(name: "tp_base_name", scope: !6570, file: !21, line: 9783, type: !6576)
!6576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_TypeName", file: !21, line: 2202, baseType: !54)
!6577 = !DILocalVariable(name: "base_name", scope: !6570, file: !21, line: 9784, type: !6576)
!6578 = !DILocalVariable(name: "unknown", scope: !6570, file: !21, line: 9785, type: !27)
!6579 = !DILocalVariable(name: "bases", scope: !6570, file: !21, line: 9786, type: !28)
!6580 = !DILocalVariable(name: "base_depth", scope: !6570, file: !21, line: 9787, type: !7)
!6581 = !DILocalVariable(name: "base", scope: !6582, file: !21, line: 9789, type: !42)
!6582 = distinct !DILexicalBlock(scope: !6570, file: !21, line: 9788, column: 5)
!6583 = !DILocalVariable(name: "base_vtable", scope: !6584, file: !21, line: 9798, type: !27)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !21, line: 9797, column: 51)
!6585 = distinct !DILexicalBlock(scope: !6586, file: !21, line: 9797, column: 5)
!6586 = distinct !DILexicalBlock(scope: !6570, file: !21, line: 9797, column: 5)
!6587 = !DILocalVariable(name: "j", scope: !6588, file: !21, line: 9800, type: !7)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !21, line: 9799, column: 34)
!6589 = distinct !DILexicalBlock(scope: !6584, file: !21, line: 9799, column: 13)
!6590 = !DILocalVariable(name: "base", scope: !6588, file: !21, line: 9801, type: !42)
!6591 = !DILabel(scope: !6570, name: "bad", file: !21, line: 9819)
!6592 = !DILocation(line: 9780, column: 45, scope: !6570)
!6593 = !DILocation(line: 9781, column: 5, scope: !6570)
!6594 = !DILocation(line: 9781, column: 9, scope: !6570)
!6595 = !DILocation(line: 9782, column: 5, scope: !6570)
!6596 = !DILocation(line: 9782, column: 12, scope: !6570)
!6597 = !DILocation(line: 9783, column: 5, scope: !6570)
!6598 = !DILocation(line: 9783, column: 20, scope: !6570)
!6599 = !DILocation(line: 9784, column: 5, scope: !6570)
!6600 = !DILocation(line: 9784, column: 20, scope: !6570)
!6601 = !DILocation(line: 9785, column: 5, scope: !6570)
!6602 = !DILocation(line: 9785, column: 11, scope: !6570)
!6603 = !DILocation(line: 9786, column: 5, scope: !6570)
!6604 = !DILocation(line: 9786, column: 15, scope: !6570)
!6605 = !DILocation(line: 9786, column: 23, scope: !6570)
!6606 = !DILocation(line: 9786, column: 29, scope: !6570)
!6607 = !DILocation(line: 9787, column: 5, scope: !6570)
!6608 = !DILocation(line: 9787, column: 9, scope: !6570)
!6609 = !DILocation(line: 9789, column: 9, scope: !6582)
!6610 = !DILocation(line: 9789, column: 23, scope: !6582)
!6611 = !DILocation(line: 9789, column: 30, scope: !6582)
!6612 = !DILocation(line: 9789, column: 36, scope: !6582)
!6613 = !DILocation(line: 9790, column: 9, scope: !6582)
!6614 = !DILocation(line: 9790, column: 16, scope: !6582)
!6615 = !DILocation(line: 9791, column: 24, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6582, file: !21, line: 9790, column: 22)
!6617 = !DILocation(line: 9792, column: 20, scope: !6616)
!6618 = !DILocation(line: 9792, column: 26, scope: !6616)
!6619 = !DILocation(line: 9792, column: 18, scope: !6616)
!6620 = distinct !{!6620, !6613, !6621, !4154}
!6621 = !DILocation(line: 9793, column: 9, scope: !6582)
!6622 = !DILocation(line: 9794, column: 5, scope: !6570)
!6623 = !DILocation(line: 9795, column: 61, scope: !6570)
!6624 = !DILocation(line: 9795, column: 72, scope: !6570)
!6625 = !DILocation(line: 9795, column: 52, scope: !6570)
!6626 = !DILocation(line: 9795, column: 50, scope: !6570)
!6627 = !DILocation(line: 9795, column: 29, scope: !6570)
!6628 = !DILocation(line: 9795, column: 18, scope: !6570)
!6629 = !DILocation(line: 9796, column: 23, scope: !6570)
!6630 = !DILocation(line: 9796, column: 5, scope: !6570)
!6631 = !DILocation(line: 9796, column: 21, scope: !6570)
!6632 = !DILocation(line: 9797, column: 12, scope: !6586)
!6633 = !DILocation(line: 9797, column: 10, scope: !6586)
!6634 = !DILocation(line: 9797, column: 17, scope: !6585)
!6635 = !DILocation(line: 9797, column: 21, scope: !6585)
!6636 = !DILocation(line: 9797, column: 19, scope: !6585)
!6637 = !DILocation(line: 9797, column: 5, scope: !6586)
!6638 = !DILocation(line: 9798, column: 9, scope: !6584)
!6639 = !DILocation(line: 9798, column: 15, scope: !6584)
!6640 = !DILocation(line: 9798, column: 61, scope: !6584)
!6641 = !DILocation(line: 9798, column: 29, scope: !6584)
!6642 = !DILocation(line: 9799, column: 13, scope: !6589)
!6643 = !DILocation(line: 9799, column: 25, scope: !6589)
!6644 = !DILocation(line: 9799, column: 13, scope: !6584)
!6645 = !DILocation(line: 9800, column: 13, scope: !6588)
!6646 = !DILocation(line: 9800, column: 17, scope: !6588)
!6647 = !DILocation(line: 9801, column: 13, scope: !6588)
!6648 = !DILocation(line: 9801, column: 27, scope: !6588)
!6649 = !DILocation(line: 9801, column: 34, scope: !6588)
!6650 = !DILocation(line: 9801, column: 40, scope: !6588)
!6651 = !DILocation(line: 9802, column: 20, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6588, file: !21, line: 9802, column: 13)
!6653 = !DILocation(line: 9802, column: 18, scope: !6652)
!6654 = !DILocation(line: 9802, column: 25, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6652, file: !21, line: 9802, column: 13)
!6656 = !DILocation(line: 9802, column: 29, scope: !6655)
!6657 = !DILocation(line: 9802, column: 27, scope: !6655)
!6658 = !DILocation(line: 9802, column: 13, scope: !6652)
!6659 = !DILocation(line: 9803, column: 21, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !21, line: 9803, column: 21)
!6661 = distinct !DILexicalBlock(scope: !6655, file: !21, line: 9802, column: 46)
!6662 = !DILocation(line: 9803, column: 34, scope: !6660)
!6663 = !DILocation(line: 9803, column: 40, scope: !6660)
!6664 = !DILocation(line: 9803, column: 37, scope: !6660)
!6665 = !DILocation(line: 9803, column: 21, scope: !6661)
!6666 = !DILocation(line: 9804, column: 55, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6660, file: !21, line: 9803, column: 49)
!6668 = !DILocation(line: 9804, column: 39, scope: !6667)
!6669 = !DILocation(line: 9804, column: 21, scope: !6667)
!6670 = !DILocation(line: 9804, column: 34, scope: !6667)
!6671 = !DILocation(line: 9804, column: 37, scope: !6667)
!6672 = !DILocation(line: 9805, column: 43, scope: !6667)
!6673 = !DILocation(line: 9805, column: 21, scope: !6667)
!6674 = !DILocation(line: 9805, column: 34, scope: !6667)
!6675 = !DILocation(line: 9805, column: 36, scope: !6667)
!6676 = !DILocation(line: 9805, column: 41, scope: !6667)
!6677 = !DILocation(line: 9806, column: 17, scope: !6667)
!6678 = !DILocation(line: 9807, column: 21, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6661, file: !21, line: 9807, column: 21)
!6680 = !DILocation(line: 9807, column: 34, scope: !6679)
!6681 = !DILocation(line: 9807, column: 40, scope: !6679)
!6682 = !DILocation(line: 9807, column: 37, scope: !6679)
!6683 = !DILocation(line: 9807, column: 21, scope: !6661)
!6684 = !DILocation(line: 9808, column: 21, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6679, file: !21, line: 9807, column: 53)
!6686 = !DILocation(line: 9809, column: 28, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6679, file: !21, line: 9809, column: 28)
!6688 = !DILocation(line: 9809, column: 41, scope: !6687)
!6689 = !DILocation(line: 9809, column: 44, scope: !6687)
!6690 = !DILocation(line: 9809, column: 28, scope: !6679)
!6691 = !DILocation(line: 9810, column: 21, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6687, file: !21, line: 9809, column: 53)
!6693 = !DILocation(line: 9812, column: 24, scope: !6661)
!6694 = !DILocation(line: 9812, column: 30, scope: !6661)
!6695 = !DILocation(line: 9812, column: 22, scope: !6661)
!6696 = !DILocation(line: 9813, column: 13, scope: !6661)
!6697 = !DILocation(line: 9802, column: 42, scope: !6655)
!6698 = !DILocation(line: 9802, column: 13, scope: !6655)
!6699 = distinct !{!6699, !6658, !6700, !4154}
!6700 = !DILocation(line: 9813, column: 13, scope: !6652)
!6701 = !DILocation(line: 9814, column: 9, scope: !6589)
!6702 = !DILocation(line: 9814, column: 9, scope: !6588)
!6703 = !DILocation(line: 9815, column: 5, scope: !6585)
!6704 = !DILocation(line: 9815, column: 5, scope: !6584)
!6705 = !DILocation(line: 9797, column: 47, scope: !6585)
!6706 = !DILocation(line: 9797, column: 5, scope: !6585)
!6707 = distinct !{!6707, !6637, !6708, !4154}
!6708 = !DILocation(line: 9815, column: 5, scope: !6586)
!6709 = !DILocation(line: 9816, column: 5, scope: !6570)
!6710 = !DILocation(line: 9817, column: 10, scope: !6570)
!6711 = !DILocation(line: 9817, column: 5, scope: !6570)
!6712 = !DILocation(line: 9818, column: 5, scope: !6570)
!6713 = !DILocation(line: 9819, column: 1, scope: !6570)
!6714 = !DILocation(line: 9820, column: 20, scope: !6570)
!6715 = !DILocation(line: 9820, column: 18, scope: !6570)
!6716 = !DILocation(line: 9821, column: 17, scope: !6570)
!6717 = !DILocation(line: 9821, column: 15, scope: !6570)
!6718 = !DILocation(line: 9822, column: 18, scope: !6570)
!6719 = !DILocation(line: 9823, column: 103, scope: !6570)
!6720 = !DILocation(line: 9823, column: 117, scope: !6570)
!6721 = !DILocation(line: 9822, column: 5, scope: !6570)
!6722 = !DILocation(line: 9826, column: 10, scope: !6570)
!6723 = !DILocation(line: 9826, column: 5, scope: !6570)
!6724 = !DILocation(line: 9827, column: 5, scope: !6570)
!6725 = !DILocation(line: 9828, column: 1, scope: !6570)
!6726 = distinct !DISubprogram(name: "__Pyx__GetModuleGlobalName", scope: !21, file: !21, line: 7013, type: !6727, scopeLine: 7017, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6730)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!28, !28, !6729, !94}
!6729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!6730 = !{!6731, !6732, !6733, !6734}
!6731 = !DILocalVariable(name: "name", arg: 1, scope: !6726, file: !21, line: 7013, type: !28)
!6732 = !DILocalVariable(name: "dict_version", arg: 2, scope: !6726, file: !21, line: 7013, type: !6729)
!6733 = !DILocalVariable(name: "dict_cached_value", arg: 3, scope: !6726, file: !21, line: 7013, type: !94)
!6734 = !DILocalVariable(name: "result", scope: !6726, file: !21, line: 7018, type: !28)
!6735 = !DILocation(line: 7013, column: 55, scope: !6726)
!6736 = !DILocation(line: 7013, column: 74, scope: !6726)
!6737 = !DILocation(line: 7013, column: 99, scope: !6726)
!6738 = !DILocation(line: 7018, column: 5, scope: !6726)
!6739 = !DILocation(line: 7018, column: 15, scope: !6726)
!6740 = !DILocation(line: 7021, column: 40, scope: !6726)
!6741 = !DILocation(line: 7021, column: 49, scope: !6726)
!6742 = !DILocation(line: 7021, column: 74, scope: !6726)
!6743 = !DILocation(line: 7021, column: 81, scope: !6726)
!6744 = !{!6745, !1837, i64 24}
!6745 = !{!"", !1871, i64 0, !1837, i64 16, !1837, i64 24, !6746, i64 32, !1462, i64 40}
!6746 = !{!"", !1558, i64 0, !1558, i64 0, !1558, i64 0, !1558, i64 0, !1558, i64 0}
!6747 = !DILocation(line: 7021, column: 14, scope: !6726)
!6748 = !DILocation(line: 7021, column: 12, scope: !6726)
!6749 = !DILocation(line: 7022, column: 5, scope: !6726)
!6750 = !DILocation(line: 7023, column: 9, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6726, file: !21, line: 7023, column: 9)
!6752 = !DILocation(line: 7023, column: 9, scope: !6726)
!6753 = !DILocation(line: 7024, column: 16, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6751, file: !21, line: 7023, column: 25)
!6755 = !DILocation(line: 7024, column: 9, scope: !6754)
!6756 = !DILocation(line: 7025, column: 16, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6751, file: !21, line: 7025, column: 16)
!6758 = !DILocation(line: 7025, column: 16, scope: !6751)
!6759 = !DILocation(line: 7026, column: 9, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6757, file: !21, line: 7025, column: 44)
!6761 = !DILocation(line: 7051, column: 33, scope: !6726)
!6762 = !DILocation(line: 7051, column: 12, scope: !6726)
!6763 = !DILocation(line: 7051, column: 5, scope: !6726)
!6764 = !DILocation(line: 7052, column: 1, scope: !6726)
!6765 = !DISubprogram(name: "PyLong_FromSsize_t", scope: !3901, file: !3901, line: 19, type: !2264, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6766 = !DILocation(line: 2734, column: 67, scope: !989)
!6767 = !DILocation(line: 2734, column: 92, scope: !989)
!6768 = !DILocation(line: 2734, column: 118, scope: !989)
!6769 = !DILocation(line: 2734, column: 141, scope: !989)
!6770 = !DILocation(line: 2735, column: 3, scope: !989)
!6771 = !DILocation(line: 2735, column: 13, scope: !989)
!6772 = !DILocation(line: 2737, column: 3, scope: !989)
!6773 = !DILocation(line: 2737, column: 13, scope: !989)
!6774 = !DILocation(line: 2738, column: 3, scope: !989)
!6775 = !DILocation(line: 2738, column: 7, scope: !989)
!6776 = !DILocation(line: 2739, column: 3, scope: !989)
!6777 = !DILocation(line: 2739, column: 13, scope: !989)
!6778 = !DILocation(line: 2740, column: 3, scope: !989)
!6779 = !DILocation(line: 2740, column: 13, scope: !989)
!6780 = !DILocation(line: 2741, column: 3, scope: !989)
!6781 = !DILocation(line: 2741, column: 7, scope: !989)
!6782 = !DILocation(line: 2742, column: 3, scope: !989)
!6783 = !DILocation(line: 2742, column: 7, scope: !989)
!6784 = !DILocation(line: 2743, column: 3, scope: !989)
!6785 = !DILocation(line: 2743, column: 15, scope: !989)
!6786 = !DILocation(line: 2744, column: 3, scope: !989)
!6787 = !DILocation(line: 2744, column: 7, scope: !989)
!6788 = !DILocation(line: 2754, column: 3, scope: !989)
!6789 = !DILocation(line: 2754, column: 3, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2754, column: 3)
!6791 = !DILocation(line: 2754, column: 63, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2754, column: 63)
!6793 = !DILocation(line: 2754, column: 63, scope: !989)
!6794 = !DILocation(line: 2754, column: 85, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !21, line: 2754, column: 85)
!6796 = distinct !DILexicalBlock(scope: !6792, file: !21, line: 2754, column: 85)
!6797 = !DILocation(line: 2754, column: 85, scope: !6796)
!6798 = !DILocation(line: 2756, column: 16, scope: !989)
!6799 = !DILocation(line: 2756, column: 26, scope: !989)
!6800 = !DILocation(line: 2756, column: 13, scope: !989)
!6801 = !DILocation(line: 2757, column: 3, scope: !989)
!6802 = !DILocation(line: 2757, column: 38, scope: !989)
!6803 = !DILocation(line: 2758, column: 7, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2758, column: 7)
!6805 = !DILocation(line: 2758, column: 7, scope: !989)
!6806 = !DILocation(line: 2767, column: 5, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6804, file: !21, line: 2758, column: 18)
!6808 = !DILocation(line: 2768, column: 13, scope: !6807)
!6809 = !DILocation(line: 2768, column: 24, scope: !6807)
!6810 = !DILocation(line: 2769, column: 5, scope: !6807)
!6811 = !DILocation(line: 2787, column: 3, scope: !989)
!6812 = !DILocation(line: 2787, column: 3, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2787, column: 3)
!6814 = !DILocation(line: 2787, column: 65, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2787, column: 65)
!6816 = !DILocation(line: 2787, column: 65, scope: !989)
!6817 = !DILocation(line: 2787, column: 87, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !21, line: 2787, column: 87)
!6819 = distinct !DILexicalBlock(scope: !6815, file: !21, line: 2787, column: 87)
!6820 = !DILocation(line: 2787, column: 87, scope: !6819)
!6821 = !DILocation(line: 2789, column: 36, scope: !989)
!6822 = !DILocation(line: 2789, column: 47, scope: !989)
!6823 = !DILocation(line: 2789, column: 15, scope: !989)
!6824 = !DILocation(line: 2789, column: 13, scope: !989)
!6825 = !DILocation(line: 2789, column: 100, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2789, column: 100)
!6827 = !DILocation(line: 2789, column: 100, scope: !989)
!6828 = !DILocation(line: 2789, column: 122, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !21, line: 2789, column: 122)
!6830 = distinct !DILexicalBlock(scope: !6826, file: !21, line: 2789, column: 122)
!6831 = !DILocation(line: 2789, column: 122, scope: !6830)
!6832 = !DILocation(line: 2790, column: 3, scope: !989)
!6833 = !DILocation(line: 2790, column: 38, scope: !989)
!6834 = !DILocation(line: 2791, column: 37, scope: !989)
!6835 = !DILocation(line: 2791, column: 15, scope: !989)
!6836 = !DILocation(line: 2791, column: 13, scope: !989)
!6837 = !DILocation(line: 2791, column: 53, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2791, column: 53)
!6839 = !DILocation(line: 2791, column: 53, scope: !989)
!6840 = !DILocation(line: 2791, column: 80, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !21, line: 2791, column: 80)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !21, line: 2791, column: 80)
!6843 = !DILocation(line: 2791, column: 80, scope: !6842)
!6844 = !DILocation(line: 2792, column: 3, scope: !989)
!6845 = !DILocation(line: 2792, column: 38, scope: !989)
!6846 = !DILocation(line: 2793, column: 7, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !989, file: !21, line: 2793, column: 7)
!6848 = !DILocation(line: 2793, column: 7, scope: !989)
!6849 = !DILocation(line: 2802, column: 5, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6847, file: !21, line: 2793, column: 18)
!6851 = !DILocation(line: 2802, column: 5, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2802, column: 5)
!6853 = !DILocation(line: 2802, column: 65, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2802, column: 65)
!6855 = !DILocation(line: 2802, column: 65, scope: !6850)
!6856 = !DILocation(line: 2802, column: 87, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !21, line: 2802, column: 87)
!6858 = distinct !DILexicalBlock(scope: !6854, file: !21, line: 2802, column: 87)
!6859 = !DILocation(line: 2802, column: 87, scope: !6858)
!6860 = !DILocation(line: 2804, column: 43, scope: !6850)
!6861 = !DILocation(line: 2804, column: 61, scope: !6850)
!6862 = !DILocation(line: 2804, column: 17, scope: !6850)
!6863 = !DILocation(line: 2804, column: 15, scope: !6850)
!6864 = !DILocation(line: 2804, column: 79, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2804, column: 79)
!6866 = !DILocation(line: 2804, column: 79, scope: !6850)
!6867 = !DILocation(line: 2804, column: 101, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !21, line: 2804, column: 101)
!6869 = distinct !DILexicalBlock(scope: !6865, file: !21, line: 2804, column: 101)
!6870 = !DILocation(line: 2804, column: 101, scope: !6869)
!6871 = !DILocation(line: 2806, column: 17, scope: !6850)
!6872 = !DILocation(line: 2806, column: 15, scope: !6850)
!6873 = !DILocation(line: 2806, column: 37, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2806, column: 37)
!6875 = !DILocation(line: 2806, column: 37, scope: !6850)
!6876 = !DILocation(line: 2806, column: 59, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !21, line: 2806, column: 59)
!6878 = distinct !DILexicalBlock(scope: !6874, file: !21, line: 2806, column: 59)
!6879 = !DILocation(line: 2806, column: 59, scope: !6878)
!6880 = !DILocation(line: 2808, column: 5, scope: !6850)
!6881 = !DILocation(line: 2810, column: 9, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2810, column: 9)
!6883 = !DILocation(line: 2810, column: 9, scope: !6850)
!6884 = !DILocation(line: 2810, column: 63, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !21, line: 2810, column: 63)
!6886 = distinct !DILexicalBlock(scope: !6882, file: !21, line: 2810, column: 63)
!6887 = !DILocation(line: 2810, column: 63, scope: !6886)
!6888 = !DILocation(line: 2811, column: 5, scope: !6850)
!6889 = !DILocation(line: 2813, column: 9, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2813, column: 9)
!6891 = !DILocation(line: 2813, column: 9, scope: !6850)
!6892 = !DILocation(line: 2813, column: 63, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !21, line: 2813, column: 63)
!6894 = distinct !DILexicalBlock(scope: !6890, file: !21, line: 2813, column: 63)
!6895 = !DILocation(line: 2813, column: 63, scope: !6894)
!6896 = !DILocation(line: 2815, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2815, column: 9)
!6898 = !DILocation(line: 2815, column: 9, scope: !6850)
!6899 = !DILocation(line: 2815, column: 58, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !21, line: 2815, column: 58)
!6901 = distinct !DILexicalBlock(scope: !6897, file: !21, line: 2815, column: 58)
!6902 = !DILocation(line: 2815, column: 58, scope: !6901)
!6903 = !DILocation(line: 2816, column: 15, scope: !6850)
!6904 = !DILocation(line: 2817, column: 39, scope: !6850)
!6905 = !DILocation(line: 2817, column: 50, scope: !6850)
!6906 = !DILocation(line: 2817, column: 17, scope: !6850)
!6907 = !DILocation(line: 2817, column: 15, scope: !6850)
!6908 = !DILocation(line: 2817, column: 66, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6850, file: !21, line: 2817, column: 66)
!6910 = !DILocation(line: 2817, column: 66, scope: !6850)
!6911 = !DILocation(line: 2817, column: 100, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !21, line: 2817, column: 100)
!6913 = distinct !DILexicalBlock(scope: !6909, file: !21, line: 2817, column: 100)
!6914 = !DILocation(line: 2817, column: 100, scope: !6913)
!6915 = !DILocation(line: 2818, column: 5, scope: !6850)
!6916 = !DILocation(line: 2818, column: 40, scope: !6850)
!6917 = !DILocation(line: 2819, column: 5, scope: !6850)
!6918 = !DILocation(line: 2819, column: 40, scope: !6850)
!6919 = !DILocation(line: 2828, column: 3, scope: !6850)
!6920 = !DILocation(line: 2839, column: 11, scope: !989)
!6921 = !DILocation(line: 2839, column: 22, scope: !989)
!6922 = !DILocation(line: 2840, column: 3, scope: !989)
!6923 = !DILocation(line: 2841, column: 3, scope: !989)
!6924 = !DILocation(line: 2842, column: 3, scope: !989)
!6925 = !DILocation(line: 2843, column: 3, scope: !989)
!6926 = !DILocation(line: 2844, column: 3, scope: !989)
!6927 = !DILocation(line: 2845, column: 53, scope: !989)
!6928 = !DILocation(line: 2845, column: 68, scope: !989)
!6929 = !DILocation(line: 2845, column: 82, scope: !989)
!6930 = !DILocation(line: 2845, column: 3, scope: !989)
!6931 = !DILocation(line: 2846, column: 11, scope: !989)
!6932 = !DILocation(line: 2846, column: 3, scope: !989)
!6933 = !DILocation(line: 2847, column: 3, scope: !989)
!6934 = !DILocation(line: 2850, column: 10, scope: !989)
!6935 = !DILocation(line: 2851, column: 1, scope: !989)
!6936 = !DILocation(line: 2850, column: 3, scope: !989)
!6937 = distinct !DISubprogram(name: "__Pyx_PyUnicode_From_Py_ssize_t", scope: !21, file: !21, line: 7939, type: !6938, scopeLine: 7939, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6940)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{!28, !34, !34, !56, !56}
!6940 = !{!6941, !6942, !6943, !6944, !6945, !6947, !6948, !6949, !6950, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6959}
!6941 = !DILocalVariable(name: "value", arg: 1, scope: !6937, file: !21, line: 7939, type: !34)
!6942 = !DILocalVariable(name: "width", arg: 2, scope: !6937, file: !21, line: 7939, type: !34)
!6943 = !DILocalVariable(name: "padding_char", arg: 3, scope: !6937, file: !21, line: 7939, type: !56)
!6944 = !DILocalVariable(name: "format_char", arg: 4, scope: !6937, file: !21, line: 7939, type: !56)
!6945 = !DILocalVariable(name: "digits", scope: !6937, file: !21, line: 7940, type: !6946)
!6946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 208, elements: !816)
!6947 = !DILocalVariable(name: "dpos", scope: !6937, file: !21, line: 7941, type: !70)
!6948 = !DILocalVariable(name: "end", scope: !6937, file: !21, line: 7941, type: !70)
!6949 = !DILocalVariable(name: "hex_digits", scope: !6937, file: !21, line: 7942, type: !54)
!6950 = !DILocalVariable(name: "length", scope: !6937, file: !21, line: 7943, type: !34)
!6951 = !DILocalVariable(name: "ulength", scope: !6937, file: !21, line: 7943, type: !34)
!6952 = !DILocalVariable(name: "prepend_sign", scope: !6937, file: !21, line: 7944, type: !7)
!6953 = !DILocalVariable(name: "last_one_off", scope: !6937, file: !21, line: 7944, type: !7)
!6954 = !DILocalVariable(name: "remaining", scope: !6937, file: !21, line: 7945, type: !34)
!6955 = !DILocalVariable(name: "neg_one", scope: !6937, file: !21, line: 7950, type: !4017)
!6956 = !DILocalVariable(name: "const_zero", scope: !6937, file: !21, line: 7950, type: !4017)
!6957 = !DILocalVariable(name: "is_unsigned", scope: !6937, file: !21, line: 7954, type: !6958)
!6958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!6959 = !DILocalVariable(name: "digit_pos", scope: !6960, file: !21, line: 7963, type: !7)
!6960 = distinct !DILexicalBlock(scope: !6937, file: !21, line: 7962, column: 8)
!6961 = !DILocation(line: 7939, column: 75, scope: !6937)
!6962 = !DILocation(line: 7939, column: 93, scope: !6937)
!6963 = !{!1463, !1463, i64 0}
!6964 = !DILocation(line: 7939, column: 105, scope: !6937)
!6965 = !DILocation(line: 7939, column: 124, scope: !6937)
!6966 = !DILocation(line: 7940, column: 5, scope: !6937)
!6967 = !DILocation(line: 7940, column: 10, scope: !6937)
!6968 = !DILocation(line: 7941, column: 5, scope: !6937)
!6969 = !DILocation(line: 7941, column: 11, scope: !6937)
!6970 = !DILocation(line: 7941, column: 18, scope: !6937)
!6971 = !DILocation(line: 7941, column: 24, scope: !6937)
!6972 = !DILocation(line: 7941, column: 31, scope: !6937)
!6973 = !DILocation(line: 7941, column: 53, scope: !6937)
!6974 = !DILocation(line: 7942, column: 5, scope: !6937)
!6975 = !DILocation(line: 7942, column: 17, scope: !6937)
!6976 = !DILocation(line: 7943, column: 5, scope: !6937)
!6977 = !DILocation(line: 7943, column: 16, scope: !6937)
!6978 = !DILocation(line: 7943, column: 24, scope: !6937)
!6979 = !DILocation(line: 7944, column: 5, scope: !6937)
!6980 = !DILocation(line: 7944, column: 9, scope: !6937)
!6981 = !DILocation(line: 7944, column: 23, scope: !6937)
!6982 = !DILocation(line: 7945, column: 5, scope: !6937)
!6983 = !DILocation(line: 7945, column: 16, scope: !6937)
!6984 = !DILocation(line: 7950, column: 5, scope: !6937)
!6985 = !DILocation(line: 7950, column: 22, scope: !6937)
!6986 = !DILocation(line: 7950, column: 49, scope: !6937)
!6987 = !DILocation(line: 7954, column: 5, scope: !6937)
!6988 = !DILocation(line: 7954, column: 15, scope: !6937)
!6989 = !DILocation(line: 7955, column: 9, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6937, file: !21, line: 7955, column: 9)
!6991 = !DILocation(line: 7955, column: 21, scope: !6990)
!6992 = !DILocation(line: 7955, column: 9, scope: !6937)
!6993 = !DILocation(line: 7956, column: 20, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6990, file: !21, line: 7955, column: 29)
!6995 = !DILocation(line: 7957, column: 21, scope: !6994)
!6996 = !DILocation(line: 7958, column: 5, scope: !6994)
!6997 = !DILocation(line: 7959, column: 17, scope: !6937)
!6998 = !DILocation(line: 7959, column: 15, scope: !6937)
!6999 = !DILocation(line: 7960, column: 18, scope: !6937)
!7000 = !DILocation(line: 7961, column: 12, scope: !6937)
!7001 = !DILocation(line: 7961, column: 10, scope: !6937)
!7002 = !DILocation(line: 7962, column: 5, scope: !6937)
!7003 = !DILocation(line: 7963, column: 9, scope: !6960)
!7004 = !DILocation(line: 7963, column: 13, scope: !6960)
!7005 = !DILocation(line: 7964, column: 17, scope: !6960)
!7006 = !DILocation(line: 7964, column: 9, scope: !6960)
!7007 = !DILocation(line: 7966, column: 35, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6960, file: !21, line: 7964, column: 30)
!7009 = !DILocation(line: 7966, column: 45, scope: !7008)
!7010 = !DILocation(line: 7966, column: 29, scope: !7008)
!7011 = !DILocation(line: 7966, column: 25, scope: !7008)
!7012 = !DILocation(line: 7966, column: 23, scope: !7008)
!7013 = !DILocation(line: 7967, column: 39, scope: !7008)
!7014 = !DILocation(line: 7967, column: 49, scope: !7008)
!7015 = !DILocation(line: 7967, column: 23, scope: !7008)
!7016 = !DILocation(line: 7968, column: 18, scope: !7008)
!7017 = !DILocation(line: 7969, column: 20, scope: !7008)
!7018 = !DILocation(line: 7969, column: 42, scope: !7008)
!7019 = !DILocation(line: 7969, column: 52, scope: !7008)
!7020 = !DILocation(line: 7969, column: 40, scope: !7008)
!7021 = !DILocation(line: 7969, column: 13, scope: !7008)
!7022 = !DILocation(line: 7970, column: 29, scope: !7008)
!7023 = !DILocation(line: 7970, column: 39, scope: !7008)
!7024 = !DILocation(line: 7970, column: 26, scope: !7008)
!7025 = !DILocation(line: 7971, column: 13, scope: !7008)
!7026 = !DILocation(line: 7973, column: 35, scope: !7008)
!7027 = !DILocation(line: 7973, column: 45, scope: !7008)
!7028 = !DILocation(line: 7973, column: 29, scope: !7008)
!7029 = !DILocation(line: 7973, column: 25, scope: !7008)
!7030 = !DILocation(line: 7973, column: 23, scope: !7008)
!7031 = !DILocation(line: 7974, column: 39, scope: !7008)
!7032 = !DILocation(line: 7974, column: 49, scope: !7008)
!7033 = !DILocation(line: 7974, column: 23, scope: !7008)
!7034 = !DILocation(line: 7975, column: 18, scope: !7008)
!7035 = !DILocation(line: 7976, column: 20, scope: !7008)
!7036 = !DILocation(line: 7976, column: 43, scope: !7008)
!7037 = !DILocation(line: 7976, column: 53, scope: !7008)
!7038 = !DILocation(line: 7976, column: 41, scope: !7008)
!7039 = !DILocation(line: 7976, column: 13, scope: !7008)
!7040 = !DILocation(line: 7977, column: 29, scope: !7008)
!7041 = !DILocation(line: 7977, column: 39, scope: !7008)
!7042 = !DILocation(line: 7977, column: 26, scope: !7008)
!7043 = !DILocation(line: 7978, column: 13, scope: !7008)
!7044 = !DILocation(line: 7980, column: 25, scope: !7008)
!7045 = !DILocation(line: 7980, column: 46, scope: !7008)
!7046 = !DILocation(line: 7980, column: 56, scope: !7008)
!7047 = !DILocation(line: 7980, column: 40, scope: !7008)
!7048 = !DILocation(line: 7980, column: 36, scope: !7008)
!7049 = !DILocation(line: 7980, column: 15, scope: !7008)
!7050 = !DILocation(line: 7980, column: 23, scope: !7008)
!7051 = !DILocation(line: 7981, column: 39, scope: !7008)
!7052 = !DILocation(line: 7981, column: 49, scope: !7008)
!7053 = !DILocation(line: 7981, column: 23, scope: !7008)
!7054 = !DILocation(line: 7982, column: 13, scope: !7008)
!7055 = !DILocation(line: 7985, column: 13, scope: !7008)
!7056 = !DILocation(line: 7987, column: 5, scope: !6937)
!7057 = !DILocation(line: 7987, column: 5, scope: !6960)
!7058 = !DILocation(line: 7987, column: 14, scope: !6937)
!7059 = distinct !{!7059, !7002, !7060, !4154}
!7060 = !DILocation(line: 7987, column: 38, scope: !6937)
!7061 = !DILocation(line: 7989, column: 13, scope: !6937)
!7062 = !DILocation(line: 7989, column: 10, scope: !6937)
!7063 = !DILocation(line: 7990, column: 14, scope: !6937)
!7064 = !DILocation(line: 7990, column: 20, scope: !6937)
!7065 = !DILocation(line: 7990, column: 18, scope: !6937)
!7066 = !DILocation(line: 7990, column: 12, scope: !6937)
!7067 = !DILocation(line: 7991, column: 15, scope: !6937)
!7068 = !DILocation(line: 7991, column: 13, scope: !6937)
!7069 = !DILocation(line: 7992, column: 18, scope: !6937)
!7070 = !DILocation(line: 7993, column: 25, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !6937, file: !21, line: 7993, column: 9)
!7072 = !DILocation(line: 7993, column: 31, scope: !7071)
!7073 = !DILocation(line: 7993, column: 9, scope: !6937)
!7074 = !DILocation(line: 7994, column: 13, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !21, line: 7994, column: 13)
!7076 = distinct !DILexicalBlock(scope: !7071, file: !21, line: 7993, column: 43)
!7077 = !DILocation(line: 7994, column: 26, scope: !7075)
!7078 = !DILocation(line: 7994, column: 33, scope: !7075)
!7079 = !DILocation(line: 7994, column: 36, scope: !7075)
!7080 = !DILocation(line: 7994, column: 45, scope: !7075)
!7081 = !DILocation(line: 7994, column: 52, scope: !7075)
!7082 = !DILocation(line: 7994, column: 42, scope: !7075)
!7083 = !DILocation(line: 7994, column: 13, scope: !7076)
!7084 = !DILocation(line: 7995, column: 15, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7075, file: !21, line: 7994, column: 57)
!7086 = !DILocation(line: 7995, column: 23, scope: !7085)
!7087 = !DILocation(line: 7996, column: 13, scope: !7085)
!7088 = !DILocation(line: 7997, column: 9, scope: !7085)
!7089 = !DILocation(line: 7998, column: 26, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7075, file: !21, line: 7997, column: 16)
!7091 = !DILocation(line: 8000, column: 9, scope: !7076)
!7092 = !DILocation(line: 8001, column: 5, scope: !7076)
!7093 = !DILocation(line: 8002, column: 9, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !6937, file: !21, line: 8002, column: 9)
!7095 = !DILocation(line: 8002, column: 17, scope: !7094)
!7096 = !DILocation(line: 8002, column: 15, scope: !7094)
!7097 = !DILocation(line: 8002, column: 9, scope: !6937)
!7098 = !DILocation(line: 8003, column: 19, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7094, file: !21, line: 8002, column: 26)
!7100 = !DILocation(line: 8003, column: 17, scope: !7099)
!7101 = !DILocation(line: 8004, column: 5, scope: !7099)
!7102 = !DILocation(line: 8005, column: 9, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !6937, file: !21, line: 8005, column: 9)
!7104 = !DILocation(line: 8005, column: 17, scope: !7103)
!7105 = !DILocation(line: 8005, column: 9, scope: !6937)
!7106 = !DILocation(line: 8006, column: 39, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7103, file: !21, line: 8005, column: 23)
!7108 = !DILocation(line: 8006, column: 38, scope: !7107)
!7109 = !DILocation(line: 8006, column: 16, scope: !7107)
!7110 = !DILocation(line: 8006, column: 9, scope: !7107)
!7111 = !DILocation(line: 8008, column: 43, scope: !6937)
!7112 = !DILocation(line: 8008, column: 52, scope: !6937)
!7113 = !DILocation(line: 8008, column: 64, scope: !6937)
!7114 = !DILocation(line: 8008, column: 58, scope: !6937)
!7115 = !DILocation(line: 8008, column: 72, scope: !6937)
!7116 = !DILocation(line: 8008, column: 86, scope: !6937)
!7117 = !DILocation(line: 8008, column: 12, scope: !6937)
!7118 = !DILocation(line: 8008, column: 5, scope: !6937)
!7119 = !DILocation(line: 8009, column: 1, scope: !6937)
!7120 = !DISubprogram(name: "PyUnicode_Concat", scope: !424, file: !424, line: 815, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7121 = distinct !DISubprogram(name: "__Pyx_PyList_Append", scope: !21, file: !21, line: 1726, type: !177, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7122)
!7122 = !{!7123, !7124, !7125, !7126}
!7123 = !DILocalVariable(name: "list", arg: 1, scope: !7121, file: !21, line: 1726, type: !28)
!7124 = !DILocalVariable(name: "x", arg: 2, scope: !7121, file: !21, line: 1726, type: !28)
!7125 = !DILocalVariable(name: "L", scope: !7121, file: !21, line: 1727, type: !353)
!7126 = !DILocalVariable(name: "len", scope: !7121, file: !21, line: 1728, type: !34)
!7127 = !DILocation(line: 1726, column: 56, scope: !7121)
!7128 = !DILocation(line: 1726, column: 72, scope: !7121)
!7129 = !DILocation(line: 1727, column: 5, scope: !7121)
!7130 = !DILocation(line: 1727, column: 19, scope: !7121)
!7131 = !DILocation(line: 1727, column: 39, scope: !7121)
!7132 = !DILocation(line: 1728, column: 5, scope: !7121)
!7133 = !DILocation(line: 1728, column: 16, scope: !7121)
!7134 = !DILocation(line: 1728, column: 22, scope: !7121)
!7135 = !DILocation(line: 1729, column: 9, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7121, file: !21, line: 1729, column: 9)
!7137 = !{!1869, !1837, i64 32}
!7138 = !DILocation(line: 1729, column: 38, scope: !7136)
!7139 = !DILocation(line: 1729, column: 36, scope: !7136)
!7140 = !DILocation(line: 1729, column: 9, scope: !7121)
!7141 = !DILocation(line: 1730, column: 9, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7136, file: !21, line: 1729, column: 73)
!7143 = !DILocation(line: 1731, column: 9, scope: !7142)
!7144 = !DILocation(line: 1732, column: 9, scope: !7142)
!7145 = !DILocation(line: 1733, column: 9, scope: !7142)
!7146 = !DILocation(line: 1735, column: 26, scope: !7121)
!7147 = !DILocation(line: 1735, column: 32, scope: !7121)
!7148 = !DILocation(line: 1735, column: 12, scope: !7121)
!7149 = !DILocation(line: 1735, column: 5, scope: !7121)
!7150 = !DILocation(line: 1736, column: 1, scope: !7121)
!7151 = distinct !DISubprogram(name: "__Pyx_PyObject_CallOneArg", scope: !21, file: !21, line: 7296, type: !105, scopeLine: 7296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7152)
!7152 = !{!7153, !7154, !7155}
!7153 = !DILocalVariable(name: "func", arg: 1, scope: !7151, file: !21, line: 7296, type: !28)
!7154 = !DILocalVariable(name: "arg", arg: 2, scope: !7151, file: !21, line: 7296, type: !28)
!7155 = !DILocalVariable(name: "args", scope: !7151, file: !21, line: 7297, type: !3362)
!7156 = !DILocation(line: 7296, column: 68, scope: !7151)
!7157 = !DILocation(line: 7296, column: 84, scope: !7151)
!7158 = !DILocation(line: 7297, column: 5, scope: !7151)
!7159 = !DILocation(line: 7297, column: 15, scope: !7151)
!7160 = !DILocation(line: 7297, column: 25, scope: !7151)
!7161 = !DILocation(line: 7297, column: 32, scope: !7151)
!7162 = !DILocation(line: 7298, column: 12, scope: !7151)
!7163 = !DILocation(line: 7299, column: 1, scope: !7151)
!7164 = !DILocation(line: 7298, column: 5, scope: !7151)
!7165 = distinct !DISubprogram(name: "PyTuple_SET_ITEM", scope: !345, file: !345, line: 34, type: !7166, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7168)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{null, !28, !34, !28}
!7168 = !{!7169, !7170, !7171, !7172}
!7169 = !DILocalVariable(name: "op", arg: 1, scope: !7165, file: !345, line: 34, type: !28)
!7170 = !DILocalVariable(name: "index", arg: 2, scope: !7165, file: !345, line: 34, type: !34)
!7171 = !DILocalVariable(name: "value", arg: 3, scope: !7165, file: !345, line: 34, type: !28)
!7172 = !DILocalVariable(name: "tuple", scope: !7165, file: !345, line: 35, type: !343)
!7173 = !DILocation(line: 34, column: 28, scope: !7165)
!7174 = !DILocation(line: 34, column: 43, scope: !7165)
!7175 = !DILocation(line: 34, column: 60, scope: !7165)
!7176 = !DILocation(line: 35, column: 5, scope: !7165)
!7177 = !DILocation(line: 35, column: 20, scope: !7165)
!7178 = !DILocation(line: 35, column: 28, scope: !7165)
!7179 = !DILocation(line: 36, column: 29, scope: !7165)
!7180 = !DILocation(line: 36, column: 5, scope: !7165)
!7181 = !DILocation(line: 36, column: 12, scope: !7165)
!7182 = !DILocation(line: 36, column: 20, scope: !7165)
!7183 = !DILocation(line: 36, column: 27, scope: !7165)
!7184 = !DILocation(line: 37, column: 1, scope: !7165)
!7185 = distinct !DISubprogram(name: "__Pyx_PyDict_GetItemDefault", scope: !21, file: !21, line: 8181, type: !114, scopeLine: 8181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7186)
!7186 = !{!7187, !7188, !7189, !7190}
!7187 = !DILocalVariable(name: "d", arg: 1, scope: !7185, file: !21, line: 8181, type: !28)
!7188 = !DILocalVariable(name: "key", arg: 2, scope: !7185, file: !21, line: 8181, type: !28)
!7189 = !DILocalVariable(name: "default_value", arg: 3, scope: !7185, file: !21, line: 8181, type: !28)
!7190 = !DILocalVariable(name: "value", scope: !7185, file: !21, line: 8182, type: !28)
!7191 = !DILocation(line: 8181, column: 56, scope: !7185)
!7192 = !DILocation(line: 8181, column: 69, scope: !7185)
!7193 = !DILocation(line: 8181, column: 84, scope: !7185)
!7194 = !DILocation(line: 8182, column: 5, scope: !7185)
!7195 = !DILocation(line: 8182, column: 15, scope: !7185)
!7196 = !DILocation(line: 8184, column: 37, scope: !7185)
!7197 = !DILocation(line: 8184, column: 40, scope: !7185)
!7198 = !DILocation(line: 8184, column: 13, scope: !7185)
!7199 = !DILocation(line: 8184, column: 11, scope: !7185)
!7200 = !DILocation(line: 8185, column: 9, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7185, file: !21, line: 8185, column: 9)
!7202 = !DILocation(line: 8185, column: 9, scope: !7185)
!7203 = !DILocation(line: 8186, column: 13, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !21, line: 8186, column: 13)
!7205 = distinct !DILexicalBlock(scope: !7201, file: !21, line: 8185, column: 27)
!7206 = !DILocation(line: 8186, column: 13, scope: !7205)
!7207 = !DILocation(line: 8187, column: 13, scope: !7204)
!7208 = !DILocation(line: 8188, column: 17, scope: !7205)
!7209 = !DILocation(line: 8188, column: 15, scope: !7205)
!7210 = !DILocation(line: 8189, column: 5, scope: !7205)
!7211 = !DILocation(line: 8190, column: 5, scope: !7185)
!7212 = !DILocation(line: 8207, column: 12, scope: !7185)
!7213 = !DILocation(line: 8207, column: 5, scope: !7185)
!7214 = !DILocation(line: 8208, column: 1, scope: !7185)
!7215 = distinct !DISubprogram(name: "__Pyx_PyInt_AddObjC", scope: !21, file: !21, line: 8249, type: !7216, scopeLine: 8249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7218)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!28, !28, !28, !40, !7, !7}
!7218 = !{!7219, !7220, !7221, !7222, !7223, !7224, !7228, !7229, !7230, !7233, !7234, !7235, !7240, !7241, !7242, !7245, !7246}
!7219 = !DILocalVariable(name: "op1", arg: 1, scope: !7215, file: !21, line: 8249, type: !28)
!7220 = !DILocalVariable(name: "op2", arg: 2, scope: !7215, file: !21, line: 8249, type: !28)
!7221 = !DILocalVariable(name: "intval", arg: 3, scope: !7215, file: !21, line: 8249, type: !40)
!7222 = !DILocalVariable(name: "inplace", arg: 4, scope: !7215, file: !21, line: 8249, type: !7)
!7223 = !DILocalVariable(name: "zerodivision_check", arg: 5, scope: !7215, file: !21, line: 8249, type: !7)
!7224 = !DILocalVariable(name: "b", scope: !7225, file: !21, line: 8267, type: !7227)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !21, line: 8266, column: 41)
!7226 = distinct !DILexicalBlock(scope: !7215, file: !21, line: 8266, column: 9)
!7227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!7228 = !DILocalVariable(name: "a", scope: !7225, file: !21, line: 8268, type: !40)
!7229 = !DILocalVariable(name: "x", scope: !7225, file: !21, line: 8268, type: !40)
!7230 = !DILocalVariable(name: "llb", scope: !7225, file: !21, line: 8270, type: !7231)
!7231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7232)
!7232 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!7233 = !DILocalVariable(name: "lla", scope: !7225, file: !21, line: 8271, type: !7232)
!7234 = !DILocalVariable(name: "llx", scope: !7225, file: !21, line: 8271, type: !7232)
!7235 = !DILocalVariable(name: "digits", scope: !7236, file: !21, line: 8279, type: !7238)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !21, line: 8278, column: 16)
!7237 = distinct !DILexicalBlock(scope: !7225, file: !21, line: 8276, column: 13)
!7238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7239, size: 64)
!7239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!7240 = !DILocalVariable(name: "size", scope: !7236, file: !21, line: 8280, type: !4017)
!7241 = !DILabel(scope: !7225, name: "long_long", file: !21, line: 8354)
!7242 = !DILocalVariable(name: "b", scope: !7243, file: !21, line: 8363, type: !7227)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !21, line: 8362, column: 34)
!7244 = distinct !DILexicalBlock(scope: !7215, file: !21, line: 8362, column: 9)
!7245 = !DILocalVariable(name: "a", scope: !7243, file: !21, line: 8367, type: !490)
!7246 = !DILocalVariable(name: "result", scope: !7243, file: !21, line: 8369, type: !490)
!7247 = !DILocation(line: 8249, column: 48, scope: !7215)
!7248 = !DILocation(line: 8249, column: 63, scope: !7215)
!7249 = !DILocation(line: 8249, column: 73, scope: !7215)
!7250 = !DILocation(line: 8249, column: 85, scope: !7215)
!7251 = !DILocation(line: 8249, column: 98, scope: !7215)
!7252 = !DILocation(line: 8250, column: 5, scope: !7215)
!7253 = !DILocation(line: 8251, column: 5, scope: !7215)
!7254 = !DILocation(line: 8252, column: 5, scope: !7215)
!7255 = !DILocation(line: 8266, column: 9, scope: !7226)
!7256 = !DILocation(line: 8266, column: 9, scope: !7215)
!7257 = !DILocation(line: 8267, column: 9, scope: !7225)
!7258 = !DILocation(line: 8267, column: 20, scope: !7225)
!7259 = !DILocation(line: 8267, column: 24, scope: !7225)
!7260 = !DILocation(line: 8268, column: 9, scope: !7225)
!7261 = !DILocation(line: 8268, column: 14, scope: !7225)
!7262 = !DILocation(line: 8268, column: 17, scope: !7225)
!7263 = !DILocation(line: 8270, column: 9, scope: !7225)
!7264 = !DILocation(line: 8270, column: 28, scope: !7225)
!7265 = !DILocation(line: 8270, column: 34, scope: !7225)
!7266 = !{!7267, !7267, i64 0}
!7267 = !{!"long long", !1463, i64 0}
!7268 = !DILocation(line: 8271, column: 9, scope: !7225)
!7269 = !DILocation(line: 8271, column: 22, scope: !7225)
!7270 = !DILocation(line: 8271, column: 27, scope: !7225)
!7271 = !DILocation(line: 8273, column: 13, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7225, file: !21, line: 8273, column: 13)
!7273 = !DILocation(line: 8273, column: 13, scope: !7225)
!7274 = !DILocation(line: 8274, column: 20, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7272, file: !21, line: 8273, column: 49)
!7276 = !DILocation(line: 8274, column: 13, scope: !7275)
!7277 = !DILocation(line: 8276, column: 13, scope: !7237)
!7278 = !DILocation(line: 8276, column: 13, scope: !7225)
!7279 = !DILocation(line: 8277, column: 17, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7237, file: !21, line: 8276, column: 50)
!7281 = !DILocation(line: 8277, column: 15, scope: !7280)
!7282 = !DILocation(line: 8278, column: 9, scope: !7280)
!7283 = !DILocation(line: 8279, column: 13, scope: !7236)
!7284 = !DILocation(line: 8279, column: 26, scope: !7236)
!7285 = !DILocation(line: 8279, column: 35, scope: !7236)
!7286 = !DILocation(line: 8280, column: 13, scope: !7236)
!7287 = !DILocation(line: 8280, column: 30, scope: !7236)
!7288 = !DILocation(line: 8280, column: 37, scope: !7236)
!7289 = !DILocation(line: 8281, column: 21, scope: !7236)
!7290 = !DILocation(line: 8281, column: 13, scope: !7236)
!7291 = !DILocation(line: 8284, column: 56, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !21, line: 8283, column: 66)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !21, line: 8283, column: 25)
!7294 = distinct !DILexicalBlock(scope: !7236, file: !21, line: 8281, column: 27)
!7295 = !DILocation(line: 8284, column: 41, scope: !7292)
!7296 = !DILocation(line: 8284, column: 67, scope: !7292)
!7297 = !DILocation(line: 8284, column: 101, scope: !7292)
!7298 = !DILocation(line: 8284, column: 86, scope: !7292)
!7299 = !DILocation(line: 8284, column: 84, scope: !7292)
!7300 = !DILocation(line: 8284, column: 29, scope: !7292)
!7301 = !DILocation(line: 8284, column: 27, scope: !7292)
!7302 = !DILocation(line: 8285, column: 25, scope: !7292)
!7303 = !DILocation(line: 8295, column: 55, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7305, file: !21, line: 8294, column: 66)
!7305 = distinct !DILexicalBlock(scope: !7294, file: !21, line: 8294, column: 25)
!7306 = !DILocation(line: 8295, column: 40, scope: !7304)
!7307 = !DILocation(line: 8295, column: 66, scope: !7304)
!7308 = !DILocation(line: 8295, column: 100, scope: !7304)
!7309 = !DILocation(line: 8295, column: 85, scope: !7304)
!7310 = !DILocation(line: 8295, column: 83, scope: !7304)
!7311 = !DILocation(line: 8295, column: 27, scope: !7304)
!7312 = !DILocation(line: 8296, column: 25, scope: !7304)
!7313 = !DILocation(line: 8305, column: 52, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7294, file: !21, line: 8305, column: 25)
!7315 = !DILocation(line: 8316, column: 52, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7294, file: !21, line: 8316, column: 25)
!7317 = !DILocation(line: 8327, column: 52, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7294, file: !21, line: 8327, column: 25)
!7319 = !DILocation(line: 8338, column: 52, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7294, file: !21, line: 8338, column: 25)
!7321 = !DILocation(line: 8348, column: 45, scope: !7294)
!7322 = !{!1897, !1462, i64 96}
!7323 = !DILocation(line: 8348, column: 59, scope: !7294)
!7324 = !{!7325, !1462, i64 0}
!7325 = !{!"", !1462, i64 0, !1462, i64 8, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40, !1462, i64 48, !1462, i64 56, !1462, i64 64, !1462, i64 72, !1462, i64 80, !1462, i64 88, !1462, i64 96, !1462, i64 104, !1462, i64 112, !1462, i64 120, !1462, i64 128, !1462, i64 136, !1462, i64 144, !1462, i64 152, !1462, i64 160, !1462, i64 168, !1462, i64 176, !1462, i64 184, !1462, i64 192, !1462, i64 200, !1462, i64 208, !1462, i64 216, !1462, i64 224, !1462, i64 232, !1462, i64 240, !1462, i64 248, !1462, i64 256, !1462, i64 264, !1462, i64 272, !1462, i64 280}
!7326 = !DILocation(line: 8348, column: 66, scope: !7294)
!7327 = !DILocation(line: 8348, column: 71, scope: !7294)
!7328 = !DILocation(line: 8348, column: 33, scope: !7294)
!7329 = !DILocation(line: 8348, column: 26, scope: !7294)
!7330 = !DILocation(line: 8350, column: 9, scope: !7237)
!7331 = !DILocation(line: 8351, column: 21, scope: !7225)
!7332 = !DILocation(line: 8351, column: 25, scope: !7225)
!7333 = !DILocation(line: 8351, column: 23, scope: !7225)
!7334 = !DILocation(line: 8351, column: 19, scope: !7225)
!7335 = !DILocation(line: 8352, column: 36, scope: !7225)
!7336 = !DILocation(line: 8352, column: 20, scope: !7225)
!7337 = !DILocation(line: 8352, column: 13, scope: !7225)
!7338 = !DILocation(line: 8354, column: 9, scope: !7225)
!7339 = !DILocation(line: 8355, column: 23, scope: !7225)
!7340 = !DILocation(line: 8355, column: 29, scope: !7225)
!7341 = !DILocation(line: 8355, column: 27, scope: !7225)
!7342 = !DILocation(line: 8355, column: 21, scope: !7225)
!7343 = !DILocation(line: 8356, column: 40, scope: !7225)
!7344 = !DILocation(line: 8356, column: 20, scope: !7225)
!7345 = !DILocation(line: 8356, column: 13, scope: !7225)
!7346 = !DILocation(line: 8360, column: 5, scope: !7226)
!7347 = !DILocation(line: 8362, column: 9, scope: !7244)
!7348 = !DILocation(line: 8362, column: 9, scope: !7215)
!7349 = !DILocation(line: 8363, column: 9, scope: !7243)
!7350 = !DILocation(line: 8363, column: 20, scope: !7243)
!7351 = !DILocation(line: 8363, column: 24, scope: !7243)
!7352 = !DILocation(line: 8367, column: 9, scope: !7243)
!7353 = !DILocation(line: 8367, column: 16, scope: !7243)
!7354 = !DILocation(line: 8367, column: 20, scope: !7243)
!7355 = !{!7356, !7357, i64 16}
!7356 = !{!"", !1871, i64 0, !7357, i64 16}
!7357 = !{!"double", !1463, i64 0}
!7358 = !{!7357, !7357, i64 0}
!7359 = !DILocation(line: 8369, column: 13, scope: !7243)
!7360 = !DILocation(line: 8369, column: 20, scope: !7243)
!7361 = !DILocation(line: 8372, column: 31, scope: !7243)
!7362 = !DILocation(line: 8372, column: 44, scope: !7243)
!7363 = !DILocation(line: 8372, column: 36, scope: !7243)
!7364 = !DILocation(line: 8372, column: 34, scope: !7243)
!7365 = !DILocation(line: 8372, column: 20, scope: !7243)
!7366 = !DILocation(line: 8374, column: 39, scope: !7243)
!7367 = !DILocation(line: 8374, column: 20, scope: !7243)
!7368 = !DILocation(line: 8374, column: 13, scope: !7243)
!7369 = !DILocation(line: 8375, column: 5, scope: !7244)
!7370 = !DILocation(line: 8376, column: 13, scope: !7215)
!7371 = !DILocation(line: 8376, column: 59, scope: !7215)
!7372 = !DILocation(line: 8376, column: 64, scope: !7215)
!7373 = !DILocation(line: 8376, column: 12, scope: !7215)
!7374 = !DILocation(line: 8376, column: 5, scope: !7215)
!7375 = !DILocation(line: 8377, column: 1, scope: !7215)
!7376 = distinct !DISubprogram(name: "__Pyx_PyObject_Append", scope: !21, file: !21, line: 7421, type: !177, scopeLine: 7421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7377)
!7377 = !{!7378, !7379, !7380}
!7378 = !DILocalVariable(name: "L", arg: 1, scope: !7376, file: !21, line: 7421, type: !28)
!7379 = !DILocalVariable(name: "x", arg: 2, scope: !7376, file: !21, line: 7421, type: !28)
!7380 = !DILocalVariable(name: "retval", scope: !7381, file: !21, line: 7425, type: !28)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !21, line: 7424, column: 12)
!7382 = distinct !DILexicalBlock(scope: !7376, file: !21, line: 7422, column: 9)
!7383 = !DILocation(line: 7421, column: 58, scope: !7376)
!7384 = !DILocation(line: 7421, column: 71, scope: !7376)
!7385 = !DILocation(line: 7422, column: 9, scope: !7382)
!7386 = !DILocation(line: 7422, column: 9, scope: !7376)
!7387 = !DILocation(line: 7423, column: 13, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !21, line: 7423, column: 13)
!7389 = distinct !DILexicalBlock(scope: !7382, file: !21, line: 7422, column: 39)
!7390 = !DILocation(line: 7423, column: 13, scope: !7389)
!7391 = !DILocation(line: 7423, column: 54, scope: !7388)
!7392 = !DILocation(line: 7424, column: 5, scope: !7389)
!7393 = !DILocation(line: 7425, column: 9, scope: !7381)
!7394 = !DILocation(line: 7425, column: 19, scope: !7381)
!7395 = !DILocation(line: 7425, column: 55, scope: !7381)
!7396 = !DILocation(line: 7425, column: 58, scope: !7381)
!7397 = !{!1599, !1462, i64 208}
!7398 = !DILocation(line: 7425, column: 76, scope: !7381)
!7399 = !DILocation(line: 7425, column: 28, scope: !7381)
!7400 = !DILocation(line: 7426, column: 13, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7381, file: !21, line: 7426, column: 13)
!7402 = !DILocation(line: 7426, column: 13, scope: !7381)
!7403 = !DILocation(line: 7427, column: 13, scope: !7401)
!7404 = !DILocation(line: 7428, column: 9, scope: !7381)
!7405 = !DILocation(line: 7429, column: 5, scope: !7382)
!7406 = !DILocation(line: 7430, column: 5, scope: !7376)
!7407 = !DILocation(line: 7431, column: 1, scope: !7376)
!7408 = !DISubprogram(name: "_PyDict_GetItem_KnownHash", scope: !388, file: !388, line: 31, type: !7409, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{!28, !28, !28, !198}
!7411 = !DISubprogram(name: "PyObject_RichCompare", scope: !6, file: !6, line: 287, type: !253, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7412 = distinct !DISubprogram(name: "__Pyx_PyObject_IsTrue", scope: !21, file: !21, line: 11166, type: !122, scopeLine: 11166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7413)
!7413 = !{!7414, !7415}
!7414 = !DILocalVariable(name: "x", arg: 1, scope: !7412, file: !21, line: 11166, type: !28)
!7415 = !DILocalVariable(name: "is_true", scope: !7412, file: !21, line: 11167, type: !7)
!7416 = !DILocation(line: 11166, column: 58, scope: !7412)
!7417 = !DILocation(line: 11167, column: 4, scope: !7412)
!7418 = !DILocation(line: 11167, column: 8, scope: !7412)
!7419 = !DILocation(line: 11167, column: 18, scope: !7412)
!7420 = !DILocation(line: 11167, column: 20, scope: !7412)
!7421 = !DILocation(line: 11168, column: 8, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7412, file: !21, line: 11168, column: 8)
!7423 = !DILocation(line: 11168, column: 19, scope: !7422)
!7424 = !DILocation(line: 11168, column: 21, scope: !7422)
!7425 = !DILocation(line: 11168, column: 16, scope: !7422)
!7426 = !DILocation(line: 11168, column: 37, scope: !7422)
!7427 = !DILocation(line: 11168, column: 39, scope: !7422)
!7428 = !DILocation(line: 11168, column: 34, scope: !7422)
!7429 = !DILocation(line: 11168, column: 8, scope: !7412)
!7430 = !DILocation(line: 11168, column: 59, scope: !7422)
!7431 = !DILocation(line: 11168, column: 52, scope: !7422)
!7432 = !DILocation(line: 11169, column: 32, scope: !7422)
!7433 = !DILocation(line: 11169, column: 16, scope: !7422)
!7434 = !DILocation(line: 11169, column: 9, scope: !7422)
!7435 = !DILocation(line: 11170, column: 1, scope: !7412)
!7436 = !DISubprogram(name: "PyObject_IsTrue", scope: !6, file: !6, line: 303, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7437 = !DISubprogram(name: "PyUnicode_FromOrdinal", scope: !424, file: !424, line: 328, type: !7438, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7438 = !DISubroutineType(types: !7439)
!7439 = !{!28, !7}
!7440 = distinct !DISubprogram(name: "__Pyx_PyUnicode_BuildFromAscii", scope: !21, file: !21, line: 7865, type: !7441, scopeLine: 7866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7443)
!7441 = !DISubroutineType(types: !7442)
!7442 = !{!28, !34, !70, !7, !7, !56}
!7443 = !{!7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451, !7452}
!7444 = !DILocalVariable(name: "ulength", arg: 1, scope: !7440, file: !21, line: 7865, type: !34)
!7445 = !DILocalVariable(name: "chars", arg: 2, scope: !7440, file: !21, line: 7865, type: !70)
!7446 = !DILocalVariable(name: "clength", arg: 3, scope: !7440, file: !21, line: 7865, type: !7)
!7447 = !DILocalVariable(name: "prepend_sign", arg: 4, scope: !7440, file: !21, line: 7866, type: !7)
!7448 = !DILocalVariable(name: "padding_char", arg: 5, scope: !7440, file: !21, line: 7866, type: !56)
!7449 = !DILocalVariable(name: "uval", scope: !7440, file: !21, line: 7867, type: !28)
!7450 = !DILocalVariable(name: "uoffset", scope: !7440, file: !21, line: 7868, type: !34)
!7451 = !DILocalVariable(name: "i", scope: !7440, file: !21, line: 7870, type: !34)
!7452 = !DILocalVariable(name: "udata", scope: !7440, file: !21, line: 7872, type: !27)
!7453 = !DILocation(line: 7865, column: 60, scope: !7440)
!7454 = !DILocation(line: 7865, column: 75, scope: !7440)
!7455 = !DILocation(line: 7865, column: 86, scope: !7440)
!7456 = !DILocation(line: 7866, column: 53, scope: !7440)
!7457 = !DILocation(line: 7866, column: 72, scope: !7440)
!7458 = !DILocation(line: 7867, column: 5, scope: !7440)
!7459 = !DILocation(line: 7867, column: 15, scope: !7440)
!7460 = !DILocation(line: 7868, column: 5, scope: !7440)
!7461 = !DILocation(line: 7868, column: 16, scope: !7440)
!7462 = !DILocation(line: 7868, column: 26, scope: !7440)
!7463 = !DILocation(line: 7868, column: 36, scope: !7440)
!7464 = !DILocation(line: 7868, column: 34, scope: !7440)
!7465 = !DILocation(line: 7870, column: 5, scope: !7440)
!7466 = !DILocation(line: 7870, column: 16, scope: !7440)
!7467 = !DILocation(line: 7872, column: 5, scope: !7440)
!7468 = !DILocation(line: 7872, column: 11, scope: !7440)
!7469 = !DILocation(line: 7873, column: 26, scope: !7440)
!7470 = !DILocation(line: 7873, column: 12, scope: !7440)
!7471 = !DILocation(line: 7873, column: 10, scope: !7440)
!7472 = !DILocation(line: 7874, column: 9, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7440, file: !21, line: 7874, column: 9)
!7474 = !DILocation(line: 7874, column: 9, scope: !7440)
!7475 = !DILocation(line: 7874, column: 26, scope: !7473)
!7476 = !DILocation(line: 7875, column: 13, scope: !7440)
!7477 = !DILocation(line: 7875, column: 11, scope: !7440)
!7478 = !DILocation(line: 7882, column: 9, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7440, file: !21, line: 7882, column: 9)
!7480 = !DILocation(line: 7882, column: 17, scope: !7479)
!7481 = !DILocation(line: 7882, column: 9, scope: !7440)
!7482 = !DILocation(line: 7883, column: 11, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7479, file: !21, line: 7882, column: 22)
!7484 = !DILocation(line: 7884, column: 13, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7483, file: !21, line: 7884, column: 13)
!7486 = !DILocation(line: 7884, column: 13, scope: !7483)
!7487 = !DILocation(line: 7885, column: 13, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7485, file: !21, line: 7884, column: 27)
!7489 = !DILocation(line: 7886, column: 14, scope: !7488)
!7490 = !DILocation(line: 7887, column: 9, scope: !7488)
!7491 = !DILocation(line: 7888, column: 9, scope: !7483)
!7492 = !DILocation(line: 7888, column: 16, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !21, line: 7888, column: 9)
!7494 = distinct !DILexicalBlock(scope: !7483, file: !21, line: 7888, column: 9)
!7495 = !DILocation(line: 7888, column: 20, scope: !7493)
!7496 = !DILocation(line: 7888, column: 18, scope: !7493)
!7497 = !DILocation(line: 7888, column: 9, scope: !7494)
!7498 = !DILocation(line: 7889, column: 13, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7493, file: !21, line: 7888, column: 34)
!7500 = !DILocation(line: 7890, column: 9, scope: !7499)
!7501 = !DILocation(line: 7888, column: 30, scope: !7493)
!7502 = !DILocation(line: 7888, column: 9, scope: !7493)
!7503 = distinct !{!7503, !7497, !7504, !4154}
!7504 = !DILocation(line: 7890, column: 9, scope: !7494)
!7505 = !DILocation(line: 7891, column: 5, scope: !7483)
!7506 = !DILocation(line: 7892, column: 11, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7440, file: !21, line: 7892, column: 5)
!7508 = !DILocation(line: 7892, column: 10, scope: !7507)
!7509 = !DILocation(line: 7892, column: 15, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7507, file: !21, line: 7892, column: 5)
!7511 = !DILocation(line: 7892, column: 19, scope: !7510)
!7512 = !DILocation(line: 7892, column: 17, scope: !7510)
!7513 = !DILocation(line: 7892, column: 5, scope: !7507)
!7514 = !DILocation(line: 7893, column: 9, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !21, line: 7892, column: 33)
!7516 = !DILocation(line: 7894, column: 5, scope: !7515)
!7517 = !DILocation(line: 7892, column: 29, scope: !7510)
!7518 = !DILocation(line: 7892, column: 5, scope: !7510)
!7519 = distinct !{!7519, !7513, !7520, !4154}
!7520 = !DILocation(line: 7894, column: 5, scope: !7507)
!7521 = !DILocation(line: 7935, column: 12, scope: !7440)
!7522 = !DILocation(line: 7935, column: 5, scope: !7440)
!7523 = !DILocation(line: 7936, column: 1, scope: !7440)
!7524 = !DISubprogram(name: "PyUnicode_New", scope: !13, file: !13, line: 472, type: !7525, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{!28, !34, !423}
!7527 = distinct !DISubprogram(name: "PyUnicode_DATA", scope: !13, file: !13, line: 336, type: !7528, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!27, !28}
!7530 = !{!7531}
!7531 = !DILocalVariable(name: "op", arg: 1, scope: !7527, file: !13, line: 336, type: !28)
!7532 = !DILocation(line: 336, column: 46, scope: !7527)
!7533 = !DILocation(line: 337, column: 9, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7527, file: !13, line: 337, column: 9)
!7535 = !DILocation(line: 337, column: 9, scope: !7527)
!7536 = !DILocation(line: 338, column: 40, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7534, file: !13, line: 337, column: 35)
!7538 = !DILocation(line: 338, column: 16, scope: !7537)
!7539 = !DILocation(line: 338, column: 9, scope: !7537)
!7540 = !DILocation(line: 340, column: 39, scope: !7527)
!7541 = !DILocation(line: 340, column: 12, scope: !7527)
!7542 = !DILocation(line: 340, column: 5, scope: !7527)
!7543 = !DILocation(line: 341, column: 1, scope: !7527)
!7544 = distinct !DISubprogram(name: "PyUnicode_WRITE", scope: !13, file: !13, line: 371, type: !7545, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7547)
!7545 = !DISubroutineType(types: !7546)
!7546 = !{null, !7, !27, !34, !423}
!7547 = !{!7548, !7549, !7550, !7551}
!7548 = !DILocalVariable(name: "kind", arg: 1, scope: !7544, file: !13, line: 371, type: !7)
!7549 = !DILocalVariable(name: "data", arg: 2, scope: !7544, file: !13, line: 371, type: !27)
!7550 = !DILocalVariable(name: "index", arg: 3, scope: !7544, file: !13, line: 372, type: !34)
!7551 = !DILocalVariable(name: "value", arg: 4, scope: !7544, file: !13, line: 372, type: !423)
!7552 = !DILocation(line: 371, column: 40, scope: !7544)
!7553 = !DILocation(line: 371, column: 52, scope: !7544)
!7554 = !DILocation(line: 372, column: 47, scope: !7544)
!7555 = !DILocation(line: 372, column: 62, scope: !7544)
!7556 = !DILocation(line: 374, column: 9, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7544, file: !13, line: 374, column: 9)
!7558 = !DILocation(line: 374, column: 14, scope: !7557)
!7559 = !DILocation(line: 374, column: 9, scope: !7544)
!7560 = !DILocation(line: 376, column: 50, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7557, file: !13, line: 374, column: 39)
!7562 = !DILocation(line: 376, column: 9, scope: !7561)
!7563 = !DILocation(line: 376, column: 41, scope: !7561)
!7564 = !DILocation(line: 376, column: 48, scope: !7561)
!7565 = !DILocation(line: 377, column: 5, scope: !7561)
!7566 = !DILocation(line: 378, column: 14, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7557, file: !13, line: 378, column: 14)
!7568 = !DILocation(line: 378, column: 19, scope: !7567)
!7569 = !DILocation(line: 378, column: 14, scope: !7557)
!7570 = !DILocation(line: 380, column: 50, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7567, file: !13, line: 378, column: 44)
!7572 = !DILocation(line: 380, column: 9, scope: !7571)
!7573 = !DILocation(line: 380, column: 41, scope: !7571)
!7574 = !DILocation(line: 380, column: 48, scope: !7571)
!7575 = !{!7576, !7576, i64 0}
!7576 = !{!"short", !1463, i64 0}
!7577 = !DILocation(line: 381, column: 5, scope: !7571)
!7578 = !DILocation(line: 385, column: 50, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7567, file: !13, line: 382, column: 10)
!7580 = !DILocation(line: 385, column: 9, scope: !7579)
!7581 = !DILocation(line: 385, column: 41, scope: !7579)
!7582 = !DILocation(line: 385, column: 48, scope: !7579)
!7583 = !DILocation(line: 387, column: 1, scope: !7544)
!7584 = distinct !DISubprogram(name: "PyUnicode_IS_COMPACT", scope: !13, file: !13, line: 288, type: !7585, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7587)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{!14, !28}
!7587 = !{!7588}
!7588 = !DILocalVariable(name: "op", arg: 1, scope: !7584, file: !13, line: 288, type: !28)
!7589 = !DILocation(line: 288, column: 59, scope: !7584)
!7590 = !DILocation(line: 289, column: 12, scope: !7584)
!7591 = !DILocation(line: 289, column: 37, scope: !7584)
!7592 = !DILocation(line: 289, column: 43, scope: !7584)
!7593 = !DILocation(line: 289, column: 5, scope: !7584)
!7594 = distinct !DISubprogram(name: "_PyUnicode_COMPACT_DATA", scope: !13, file: !13, line: 321, type: !7528, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7595)
!7595 = !{!7596}
!7596 = !DILocalVariable(name: "op", arg: 1, scope: !7594, file: !13, line: 321, type: !28)
!7597 = !DILocation(line: 321, column: 55, scope: !7594)
!7598 = !DILocation(line: 322, column: 9, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7594, file: !13, line: 322, column: 9)
!7600 = !DILocation(line: 322, column: 9, scope: !7594)
!7601 = !DILocation(line: 323, column: 16, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7599, file: !13, line: 322, column: 33)
!7603 = !DILocation(line: 323, column: 9, scope: !7602)
!7604 = !DILocation(line: 325, column: 12, scope: !7594)
!7605 = !DILocation(line: 325, column: 5, scope: !7594)
!7606 = !DILocation(line: 326, column: 1, scope: !7594)
!7607 = distinct !DISubprogram(name: "_PyUnicode_NONCOMPACT_DATA", scope: !13, file: !13, line: 328, type: !7528, scopeLine: 328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7608)
!7608 = !{!7609, !7610}
!7609 = !DILocalVariable(name: "op", arg: 1, scope: !7607, file: !13, line: 328, type: !28)
!7610 = !DILocalVariable(name: "data", scope: !7607, file: !13, line: 329, type: !27)
!7611 = !DILocation(line: 328, column: 58, scope: !7607)
!7612 = !DILocation(line: 329, column: 5, scope: !7607)
!7613 = !DILocation(line: 329, column: 11, scope: !7607)
!7614 = !DILocation(line: 331, column: 12, scope: !7607)
!7615 = !DILocation(line: 331, column: 39, scope: !7607)
!7616 = !DILocation(line: 331, column: 44, scope: !7607)
!7617 = !DILocation(line: 331, column: 10, scope: !7607)
!7618 = !DILocation(line: 333, column: 12, scope: !7607)
!7619 = !DILocation(line: 334, column: 1, scope: !7607)
!7620 = !DILocation(line: 333, column: 5, scope: !7607)
!7621 = distinct !DISubprogram(name: "PyUnicode_IS_ASCII", scope: !13, file: !13, line: 278, type: !7585, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7622)
!7622 = !{!7623}
!7623 = !DILocalVariable(name: "op", arg: 1, scope: !7621, file: !13, line: 278, type: !28)
!7624 = !DILocation(line: 278, column: 57, scope: !7621)
!7625 = !DILocation(line: 280, column: 12, scope: !7621)
!7626 = !DILocation(line: 280, column: 37, scope: !7621)
!7627 = !DILocation(line: 280, column: 43, scope: !7621)
!7628 = !DILocation(line: 280, column: 5, scope: !7621)
!7629 = distinct !DISubprogram(name: "PyList_SET_ITEM", scope: !355, file: !355, line: 44, type: !7166, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7630)
!7630 = !{!7631, !7632, !7633, !7634}
!7631 = !DILocalVariable(name: "op", arg: 1, scope: !7629, file: !355, line: 44, type: !28)
!7632 = !DILocalVariable(name: "index", arg: 2, scope: !7629, file: !355, line: 44, type: !34)
!7633 = !DILocalVariable(name: "value", arg: 3, scope: !7629, file: !355, line: 44, type: !28)
!7634 = !DILocalVariable(name: "list", scope: !7629, file: !355, line: 45, type: !353)
!7635 = !DILocation(line: 44, column: 27, scope: !7629)
!7636 = !DILocation(line: 44, column: 42, scope: !7629)
!7637 = !DILocation(line: 44, column: 59, scope: !7629)
!7638 = !DILocation(line: 45, column: 5, scope: !7629)
!7639 = !DILocation(line: 45, column: 19, scope: !7629)
!7640 = !DILocation(line: 45, column: 26, scope: !7629)
!7641 = !DILocation(line: 46, column: 28, scope: !7629)
!7642 = !DILocation(line: 46, column: 5, scope: !7629)
!7643 = !DILocation(line: 46, column: 11, scope: !7629)
!7644 = !DILocation(line: 46, column: 19, scope: !7629)
!7645 = !DILocation(line: 46, column: 26, scope: !7629)
!7646 = !DILocation(line: 47, column: 1, scope: !7629)
!7647 = distinct !DISubprogram(name: "Py_SET_SIZE", scope: !6, file: !6, line: 173, type: !7648, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7650)
!7648 = !DISubroutineType(types: !7649)
!7649 = !{null, !458, !34}
!7650 = !{!7651, !7652}
!7651 = !DILocalVariable(name: "ob", arg: 1, scope: !7647, file: !6, line: 173, type: !458)
!7652 = !DILocalVariable(name: "size", arg: 2, scope: !7647, file: !6, line: 173, type: !34)
!7653 = !DILocation(line: 173, column: 45, scope: !7647)
!7654 = !DILocation(line: 173, column: 60, scope: !7647)
!7655 = !DILocation(line: 174, column: 19, scope: !7647)
!7656 = !DILocation(line: 174, column: 5, scope: !7647)
!7657 = !DILocation(line: 174, column: 9, scope: !7647)
!7658 = !DILocation(line: 174, column: 17, scope: !7647)
!7659 = !DILocation(line: 175, column: 1, scope: !7647)
!7660 = !DISubprogram(name: "PyList_Append", scope: !2520, file: !2520, line: 34, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7661 = distinct !DISubprogram(name: "__Pyx_PyObject_FastCallDict", scope: !21, file: !21, line: 7229, type: !7662, scopeLine: 7229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7664)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{!28, !28, !94, !341, !28}
!7664 = !{!7665, !7666, !7667, !7668, !7669, !7670}
!7665 = !DILocalVariable(name: "func", arg: 1, scope: !7661, file: !21, line: 7229, type: !28)
!7666 = !DILocalVariable(name: "args", arg: 2, scope: !7661, file: !21, line: 7229, type: !94)
!7667 = !DILocalVariable(name: "_nargs", arg: 3, scope: !7661, file: !21, line: 7229, type: !341)
!7668 = !DILocalVariable(name: "kwargs", arg: 4, scope: !7661, file: !21, line: 7229, type: !28)
!7669 = !DILocalVariable(name: "nargs", scope: !7661, file: !21, line: 7230, type: !34)
!7670 = !DILocalVariable(name: "f", scope: !7671, file: !21, line: 7265, type: !335)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !21, line: 7262, column: 25)
!7672 = distinct !DILexicalBlock(scope: !7661, file: !21, line: 7262, column: 9)
!7673 = !DILocation(line: 7229, column: 70, scope: !7661)
!7674 = !DILocation(line: 7229, column: 87, scope: !7661)
!7675 = !DILocation(line: 7229, column: 100, scope: !7661)
!7676 = !DILocation(line: 7229, column: 118, scope: !7661)
!7677 = !DILocation(line: 7230, column: 5, scope: !7661)
!7678 = !DILocation(line: 7230, column: 16, scope: !7661)
!7679 = !DILocation(line: 7230, column: 24, scope: !7661)
!7680 = !DILocation(line: 7232, column: 9, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7661, file: !21, line: 7232, column: 9)
!7682 = !DILocation(line: 7232, column: 15, scope: !7681)
!7683 = !DILocation(line: 7232, column: 20, scope: !7681)
!7684 = !DILocation(line: 7232, column: 23, scope: !7681)
!7685 = !DILocation(line: 7232, column: 30, scope: !7681)
!7686 = !DILocation(line: 7232, column: 9, scope: !7661)
!7687 = !DILocation(line: 7233, column: 13, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !21, line: 7233, column: 13)
!7689 = distinct !DILexicalBlock(scope: !7681, file: !21, line: 7232, column: 39)
!7690 = !DILocation(line: 7233, column: 47, scope: !7688)
!7691 = !DILocation(line: 7233, column: 50, scope: !7688)
!7692 = !{!7693, !1462, i64 16}
!7693 = !{!"", !1871, i64 0, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40, !1462, i64 48}
!7694 = !{!7695, !1558, i64 16}
!7695 = !{!"PyMethodDef", !1462, i64 0, !1462, i64 8, !1558, i64 16, !1462, i64 24}
!7696 = !DILocation(line: 7233, column: 13, scope: !7689)
!7697 = !DILocation(line: 7234, column: 45, scope: !7688)
!7698 = !DILocation(line: 7234, column: 20, scope: !7688)
!7699 = !DILocation(line: 7234, column: 13, scope: !7688)
!7700 = !DILocation(line: 7235, column: 5, scope: !7689)
!7701 = !DILocation(line: 7236, column: 14, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7681, file: !21, line: 7236, column: 14)
!7703 = !DILocation(line: 7236, column: 20, scope: !7702)
!7704 = !DILocation(line: 7236, column: 25, scope: !7702)
!7705 = !DILocation(line: 7236, column: 28, scope: !7702)
!7706 = !DILocation(line: 7236, column: 35, scope: !7702)
!7707 = !DILocation(line: 7236, column: 14, scope: !7681)
!7708 = !DILocation(line: 7237, column: 13, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !21, line: 7237, column: 13)
!7710 = distinct !DILexicalBlock(scope: !7702, file: !21, line: 7236, column: 44)
!7711 = !DILocation(line: 7237, column: 47, scope: !7709)
!7712 = !DILocation(line: 7237, column: 50, scope: !7709)
!7713 = !DILocation(line: 7237, column: 13, scope: !7710)
!7714 = !DILocation(line: 7238, column: 45, scope: !7709)
!7715 = !DILocation(line: 7238, column: 51, scope: !7709)
!7716 = !DILocation(line: 7238, column: 20, scope: !7709)
!7717 = !DILocation(line: 7238, column: 13, scope: !7709)
!7718 = !DILocation(line: 7239, column: 5, scope: !7710)
!7719 = !DILocation(line: 7262, column: 9, scope: !7672)
!7720 = !DILocation(line: 7262, column: 16, scope: !7672)
!7721 = !DILocation(line: 7262, column: 9, scope: !7661)
!7722 = !DILocation(line: 7265, column: 9, scope: !7671)
!7723 = !DILocation(line: 7265, column: 24, scope: !7671)
!7724 = !DILocation(line: 7265, column: 51, scope: !7671)
!7725 = !DILocation(line: 7265, column: 28, scope: !7671)
!7726 = !DILocation(line: 7269, column: 13, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7671, file: !21, line: 7269, column: 13)
!7728 = !DILocation(line: 7269, column: 13, scope: !7671)
!7729 = !DILocation(line: 7270, column: 20, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7727, file: !21, line: 7269, column: 16)
!7731 = !DILocation(line: 7270, column: 22, scope: !7730)
!7732 = !DILocation(line: 7270, column: 28, scope: !7730)
!7733 = !DILocation(line: 7270, column: 42, scope: !7730)
!7734 = !DILocation(line: 7270, column: 13, scope: !7730)
!7735 = !DILocation(line: 7278, column: 5, scope: !7672)
!7736 = !DILocation(line: 7278, column: 5, scope: !7671)
!7737 = !DILocation(line: 7279, column: 9, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7661, file: !21, line: 7279, column: 9)
!7739 = !DILocation(line: 7279, column: 15, scope: !7738)
!7740 = !DILocation(line: 7279, column: 9, scope: !7661)
!7741 = !DILocation(line: 7280, column: 36, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7738, file: !21, line: 7279, column: 21)
!7743 = !DILocation(line: 7280, column: 42, scope: !7742)
!7744 = !DILocation(line: 7280, column: 61, scope: !7742)
!7745 = !DILocation(line: 7280, column: 16, scope: !7742)
!7746 = !DILocation(line: 7280, column: 9, scope: !7742)
!7747 = !DILocation(line: 7283, column: 36, scope: !7661)
!7748 = !DILocation(line: 7283, column: 42, scope: !7661)
!7749 = !DILocation(line: 7283, column: 56, scope: !7661)
!7750 = !DILocation(line: 7283, column: 63, scope: !7661)
!7751 = !DILocation(line: 7283, column: 12, scope: !7661)
!7752 = !DILocation(line: 7283, column: 5, scope: !7661)
!7753 = !DILocation(line: 7287, column: 1, scope: !7661)
!7754 = distinct !DISubprogram(name: "PyVectorcall_NARGS", scope: !7755, file: !7755, line: 57, type: !7756, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7758)
!7755 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/abstract.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "c590b3d6f2f267779e1246e98b55ede9")
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!34, !341}
!7758 = !{!7759}
!7759 = !DILocalVariable(name: "n", arg: 1, scope: !7754, file: !7755, line: 57, type: !341)
!7760 = !DILocation(line: 57, column: 27, scope: !7754)
!7761 = !DILocation(line: 59, column: 12, scope: !7754)
!7762 = !DILocation(line: 59, column: 14, scope: !7754)
!7763 = !DILocation(line: 59, column: 5, scope: !7754)
!7764 = distinct !DISubprogram(name: "PyObject_TypeCheck", scope: !6, file: !6, line: 262, type: !2570, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7765)
!7765 = !{!7766, !7767}
!7766 = !DILocalVariable(name: "ob", arg: 1, scope: !7764, file: !6, line: 262, type: !28)
!7767 = !DILocalVariable(name: "type", arg: 2, scope: !7764, file: !6, line: 262, type: !42)
!7768 = !DILocation(line: 262, column: 48, scope: !7764)
!7769 = !DILocation(line: 262, column: 66, scope: !7764)
!7770 = !DILocation(line: 263, column: 12, scope: !7764)
!7771 = !DILocation(line: 263, column: 33, scope: !7764)
!7772 = !DILocation(line: 263, column: 53, scope: !7764)
!7773 = !DILocation(line: 263, column: 66, scope: !7764)
!7774 = !DILocation(line: 263, column: 36, scope: !7764)
!7775 = !DILocation(line: 263, column: 5, scope: !7764)
!7776 = distinct !DISubprogram(name: "__Pyx_PyObject_CallMethO", scope: !21, file: !21, line: 7193, type: !105, scopeLine: 7193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7777)
!7777 = !{!7778, !7779, !7780, !7781, !7782}
!7778 = !DILocalVariable(name: "func", arg: 1, scope: !7776, file: !21, line: 7193, type: !28)
!7779 = !DILocalVariable(name: "arg", arg: 2, scope: !7776, file: !21, line: 7193, type: !28)
!7780 = !DILocalVariable(name: "self", scope: !7776, file: !21, line: 7194, type: !28)
!7781 = !DILocalVariable(name: "result", scope: !7776, file: !21, line: 7194, type: !28)
!7782 = !DILocalVariable(name: "cfunc", scope: !7776, file: !21, line: 7195, type: !268)
!7783 = !DILocation(line: 7193, column: 67, scope: !7776)
!7784 = !DILocation(line: 7193, column: 83, scope: !7776)
!7785 = !DILocation(line: 7194, column: 5, scope: !7776)
!7786 = !DILocation(line: 7194, column: 15, scope: !7776)
!7787 = !DILocation(line: 7194, column: 22, scope: !7776)
!7788 = !DILocation(line: 7195, column: 5, scope: !7776)
!7789 = !DILocation(line: 7195, column: 17, scope: !7776)
!7790 = !DILocation(line: 7196, column: 13, scope: !7776)
!7791 = !{!7695, !1462, i64 8}
!7792 = !DILocation(line: 7196, column: 11, scope: !7776)
!7793 = !DILocation(line: 7197, column: 43, scope: !7776)
!7794 = !DILocation(line: 7197, column: 12, scope: !7776)
!7795 = !DILocation(line: 7197, column: 10, scope: !7776)
!7796 = !DILocation(line: 7198, column: 9, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7776, file: !21, line: 7198, column: 9)
!7798 = !DILocation(line: 7198, column: 9, scope: !7776)
!7799 = !DILocation(line: 7199, column: 9, scope: !7797)
!7800 = !DILocation(line: 7200, column: 14, scope: !7776)
!7801 = !DILocation(line: 7200, column: 20, scope: !7776)
!7802 = !DILocation(line: 7200, column: 26, scope: !7776)
!7803 = !DILocation(line: 7200, column: 12, scope: !7776)
!7804 = !DILocation(line: 7201, column: 5, scope: !7776)
!7805 = !DILocation(line: 7202, column: 9, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7776, file: !21, line: 7202, column: 9)
!7807 = !DILocation(line: 7202, column: 27, scope: !7806)
!7808 = !DILocation(line: 7202, column: 30, scope: !7806)
!7809 = !DILocation(line: 7202, column: 9, scope: !7776)
!7810 = !DILocation(line: 7204, column: 13, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7806, file: !21, line: 7202, column: 59)
!7812 = !DILocation(line: 7203, column: 9, scope: !7811)
!7813 = !DILocation(line: 7206, column: 5, scope: !7811)
!7814 = !DILocation(line: 7207, column: 12, scope: !7776)
!7815 = !DILocation(line: 7207, column: 5, scope: !7776)
!7816 = !DILocation(line: 7208, column: 1, scope: !7776)
!7817 = !DISubprogram(name: "PyVectorcall_Function", scope: !7755, file: !7755, line: 62, type: !7818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7818 = !DISubroutineType(types: !7819)
!7819 = !{!335, !28}
!7820 = !DISubprogram(name: "PyObject_VectorcallDict", scope: !7755, file: !7755, line: 81, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7821 = !DISubprogram(name: "PyType_IsSubtype", scope: !6, file: !6, line: 260, type: !4717, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7822 = distinct !DISubprogram(name: "__Pyx_CyOrPyCFunction_GET_SELF", scope: !21, file: !21, line: 774, type: !84, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7823)
!7823 = !{!7824}
!7824 = !DILocalVariable(name: "func", arg: 1, scope: !7822, file: !21, line: 774, type: !28)
!7825 = !DILocation(line: 774, column: 73, scope: !7822)
!7826 = !DILocation(line: 775, column: 13, scope: !7822)
!7827 = !DILocation(line: 775, column: 51, scope: !7822)
!7828 = !DILocation(line: 775, column: 12, scope: !7822)
!7829 = !DILocation(line: 775, column: 96, scope: !7822)
!7830 = !DILocation(line: 775, column: 103, scope: !7822)
!7831 = !{!7693, !1462, i64 24}
!7832 = !DILocation(line: 775, column: 5, scope: !7822)
!7833 = !DISubprogram(name: "Py_EnterRecursiveCall", scope: !7834, file: !7834, line: 77, type: !7835, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7834 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/ceval.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "62959cdd0486750cb3245302ff2e97e7")
!7835 = !DISubroutineType(types: !7836)
!7836 = !{!7, !54}
!7837 = !DISubprogram(name: "Py_LeaveRecursiveCall", scope: !7834, file: !7834, line: 78, type: !2192, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7838 = !DISubprogram(name: "PyDict_GetItemWithError", scope: !2187, file: !2187, line: 23, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7839 = !DISubprogram(name: "PyLong_FromLongLong", scope: !3901, file: !3901, line: 67, type: !7840, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!28, !7232}
!7842 = !DISubprogram(name: "PyFloat_FromDouble", scope: !7843, file: !7843, line: 39, type: !7844, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7843 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/floatobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "181db7ef53ea6ecfd1219d2d594e905e")
!7844 = !DISubroutineType(types: !7845)
!7845 = !{!28, !490}
!7846 = distinct !DISubprogram(name: "__Pyx_PyObject_CallMethod1", scope: !21, file: !21, line: 7408, type: !114, scopeLine: 7408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7847)
!7847 = !{!7848, !7849, !7850, !7851, !7852, !7853}
!7848 = !DILocalVariable(name: "obj", arg: 1, scope: !7846, file: !21, line: 7408, type: !28)
!7849 = !DILocalVariable(name: "method_name", arg: 2, scope: !7846, file: !21, line: 7408, type: !28)
!7850 = !DILocalVariable(name: "arg", arg: 3, scope: !7846, file: !21, line: 7408, type: !28)
!7851 = !DILocalVariable(name: "method", scope: !7846, file: !21, line: 7409, type: !28)
!7852 = !DILocalVariable(name: "result", scope: !7846, file: !21, line: 7409, type: !28)
!7853 = !DILocalVariable(name: "is_method", scope: !7846, file: !21, line: 7410, type: !7)
!7854 = !DILocation(line: 7408, column: 55, scope: !7846)
!7855 = !DILocation(line: 7408, column: 70, scope: !7846)
!7856 = !DILocation(line: 7408, column: 93, scope: !7846)
!7857 = !DILocation(line: 7409, column: 5, scope: !7846)
!7858 = !DILocation(line: 7409, column: 15, scope: !7846)
!7859 = !DILocation(line: 7409, column: 31, scope: !7846)
!7860 = !DILocation(line: 7410, column: 5, scope: !7846)
!7861 = !DILocation(line: 7410, column: 9, scope: !7846)
!7862 = !DILocation(line: 7410, column: 46, scope: !7846)
!7863 = !DILocation(line: 7410, column: 51, scope: !7846)
!7864 = !DILocation(line: 7410, column: 21, scope: !7846)
!7865 = !DILocation(line: 7411, column: 9, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7846, file: !21, line: 7411, column: 9)
!7867 = !DILocation(line: 7411, column: 9, scope: !7846)
!7868 = !DILocation(line: 7412, column: 43, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7866, file: !21, line: 7411, column: 28)
!7870 = !DILocation(line: 7412, column: 51, scope: !7869)
!7871 = !DILocation(line: 7412, column: 56, scope: !7869)
!7872 = !DILocation(line: 7412, column: 18, scope: !7869)
!7873 = !DILocation(line: 7412, column: 16, scope: !7869)
!7874 = !DILocation(line: 7413, column: 9, scope: !7869)
!7875 = !DILocation(line: 7414, column: 16, scope: !7869)
!7876 = !DILocation(line: 7414, column: 9, scope: !7869)
!7877 = !DILocation(line: 7416, column: 9, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7846, file: !21, line: 7416, column: 9)
!7879 = !DILocation(line: 7416, column: 9, scope: !7846)
!7880 = !DILocation(line: 7416, column: 28, scope: !7878)
!7881 = !DILocation(line: 7417, column: 40, scope: !7846)
!7882 = !DILocation(line: 7417, column: 48, scope: !7846)
!7883 = !DILocation(line: 7417, column: 12, scope: !7846)
!7884 = !DILocation(line: 7417, column: 5, scope: !7846)
!7885 = !DILocation(line: 7418, column: 1, scope: !7846)
!7886 = distinct !DISubprogram(name: "__Pyx_PyObject_GetMethod", scope: !21, file: !21, line: 7302, type: !7887, scopeLine: 7302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7889)
!7887 = !DISubroutineType(types: !7888)
!7888 = !{!7, !28, !28, !94}
!7889 = !{!7890, !7891, !7892, !7893, !7894, !7895, !7896, !7897, !7898, !7899, !7900, !7901, !7902}
!7890 = !DILocalVariable(name: "obj", arg: 1, scope: !7886, file: !21, line: 7302, type: !28)
!7891 = !DILocalVariable(name: "name", arg: 2, scope: !7886, file: !21, line: 7302, type: !28)
!7892 = !DILocalVariable(name: "method", arg: 3, scope: !7886, file: !21, line: 7302, type: !94)
!7893 = !DILocalVariable(name: "attr", scope: !7886, file: !21, line: 7303, type: !28)
!7894 = !DILocalVariable(name: "type_name", scope: !7886, file: !21, line: 7305, type: !6576)
!7895 = !DILocalVariable(name: "tp", scope: !7886, file: !21, line: 7306, type: !42)
!7896 = !DILocalVariable(name: "descr", scope: !7886, file: !21, line: 7307, type: !28)
!7897 = !DILocalVariable(name: "f", scope: !7886, file: !21, line: 7308, type: !304)
!7898 = !DILocalVariable(name: "dictptr", scope: !7886, file: !21, line: 7309, type: !94)
!7899 = !DILocalVariable(name: "dict", scope: !7886, file: !21, line: 7309, type: !28)
!7900 = !DILocalVariable(name: "meth_found", scope: !7886, file: !21, line: 7310, type: !7)
!7901 = !DILabel(scope: !7886, name: "try_unpack", file: !21, line: 7388)
!7902 = !DILocalVariable(name: "function", scope: !7903, file: !21, line: 7391, type: !28)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !21, line: 7390, column: 89)
!7904 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7390, column: 9)
!7905 = !DILocation(line: 7302, column: 47, scope: !7886)
!7906 = !DILocation(line: 7302, column: 62, scope: !7886)
!7907 = !DILocation(line: 7302, column: 79, scope: !7886)
!7908 = !DILocation(line: 7303, column: 5, scope: !7886)
!7909 = !DILocation(line: 7303, column: 15, scope: !7886)
!7910 = !DILocation(line: 7305, column: 5, scope: !7886)
!7911 = !DILocation(line: 7305, column: 20, scope: !7886)
!7912 = !DILocation(line: 7306, column: 5, scope: !7886)
!7913 = !DILocation(line: 7306, column: 19, scope: !7886)
!7914 = !DILocation(line: 7306, column: 24, scope: !7886)
!7915 = !DILocation(line: 7307, column: 5, scope: !7886)
!7916 = !DILocation(line: 7307, column: 15, scope: !7886)
!7917 = !DILocation(line: 7308, column: 5, scope: !7886)
!7918 = !DILocation(line: 7308, column: 18, scope: !7886)
!7919 = !DILocation(line: 7309, column: 5, scope: !7886)
!7920 = !DILocation(line: 7309, column: 16, scope: !7886)
!7921 = !DILocation(line: 7309, column: 26, scope: !7886)
!7922 = !DILocation(line: 7310, column: 5, scope: !7886)
!7923 = !DILocation(line: 7310, column: 9, scope: !7886)
!7924 = !DILocation(line: 7312, column: 9, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7312, column: 9)
!7926 = !DILocation(line: 7312, column: 9, scope: !7886)
!7927 = !DILocation(line: 7313, column: 42, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7925, file: !21, line: 7312, column: 63)
!7929 = !DILocation(line: 7313, column: 47, scope: !7928)
!7930 = !DILocation(line: 7313, column: 16, scope: !7928)
!7931 = !DILocation(line: 7313, column: 14, scope: !7928)
!7932 = !DILocation(line: 7314, column: 9, scope: !7928)
!7933 = !DILocation(line: 7316, column: 9, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7316, column: 9)
!7935 = !DILocation(line: 7316, column: 39, scope: !7934)
!7936 = !DILocation(line: 7316, column: 42, scope: !7934)
!7937 = !DILocation(line: 7316, column: 9, scope: !7886)
!7938 = !DILocation(line: 7317, column: 9, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7934, file: !21, line: 7316, column: 74)
!7940 = !DILocation(line: 7319, column: 28, scope: !7886)
!7941 = !DILocation(line: 7319, column: 32, scope: !7886)
!7942 = !DILocation(line: 7319, column: 13, scope: !7886)
!7943 = !DILocation(line: 7319, column: 11, scope: !7886)
!7944 = !DILocation(line: 7320, column: 9, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7320, column: 9)
!7946 = !DILocation(line: 7320, column: 9, scope: !7886)
!7947 = !DILocation(line: 7321, column: 9, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7945, file: !21, line: 7320, column: 32)
!7949 = !DILocation(line: 7323, column: 13, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7948, file: !21, line: 7323, column: 13)
!7951 = !DILocation(line: 7323, column: 13, scope: !7948)
!7952 = !DILocation(line: 7338, column: 24, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !21, line: 7337, column: 9)
!7954 = !DILocation(line: 7339, column: 9, scope: !7953)
!7955 = !DILocation(line: 7340, column: 17, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7950, file: !21, line: 7339, column: 16)
!7957 = !DILocation(line: 7340, column: 33, scope: !7956)
!7958 = !{!1897, !1462, i64 272}
!7959 = !DILocation(line: 7340, column: 15, scope: !7956)
!7960 = !DILocation(line: 7341, column: 17, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7956, file: !21, line: 7341, column: 17)
!7962 = !DILocation(line: 7341, column: 19, scope: !7961)
!7963 = !DILocation(line: 7341, column: 27, scope: !7961)
!7964 = !DILocation(line: 7341, column: 45, scope: !7961)
!7965 = !DILocation(line: 7341, column: 30, scope: !7961)
!7966 = !DILocation(line: 7341, column: 17, scope: !7956)
!7967 = !DILocation(line: 7342, column: 24, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7961, file: !21, line: 7341, column: 53)
!7969 = !DILocation(line: 7342, column: 26, scope: !7968)
!7970 = !DILocation(line: 7342, column: 33, scope: !7968)
!7971 = !DILocation(line: 7342, column: 50, scope: !7968)
!7972 = !DILocation(line: 7342, column: 22, scope: !7968)
!7973 = !DILocation(line: 7343, column: 17, scope: !7968)
!7974 = !DILocation(line: 7344, column: 17, scope: !7968)
!7975 = !DILocation(line: 7347, column: 5, scope: !7948)
!7976 = !DILocation(line: 7348, column: 36, scope: !7886)
!7977 = !DILocation(line: 7348, column: 15, scope: !7886)
!7978 = !DILocation(line: 7348, column: 13, scope: !7886)
!7979 = !DILocation(line: 7349, column: 9, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7349, column: 9)
!7981 = !DILocation(line: 7349, column: 17, scope: !7980)
!7982 = !DILocation(line: 7349, column: 25, scope: !7980)
!7983 = !DILocation(line: 7349, column: 37, scope: !7980)
!7984 = !DILocation(line: 7349, column: 36, scope: !7980)
!7985 = !DILocation(line: 7349, column: 34, scope: !7980)
!7986 = !DILocation(line: 7349, column: 46, scope: !7980)
!7987 = !DILocation(line: 7349, column: 9, scope: !7886)
!7988 = !DILocation(line: 7350, column: 9, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7980, file: !21, line: 7349, column: 55)
!7990 = !DILocation(line: 7351, column: 40, scope: !7989)
!7991 = !DILocation(line: 7351, column: 46, scope: !7989)
!7992 = !DILocation(line: 7351, column: 16, scope: !7989)
!7993 = !DILocation(line: 7351, column: 14, scope: !7989)
!7994 = !DILocation(line: 7352, column: 13, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7989, file: !21, line: 7352, column: 13)
!7996 = !DILocation(line: 7352, column: 18, scope: !7995)
!7997 = !DILocation(line: 7352, column: 13, scope: !7989)
!7998 = !DILocation(line: 7353, column: 13, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7995, file: !21, line: 7352, column: 27)
!8000 = !DILocation(line: 7354, column: 13, scope: !7999)
!8001 = !DILocation(line: 7355, column: 13, scope: !7999)
!8002 = !DILocation(line: 7356, column: 13, scope: !7999)
!8003 = !DILocation(line: 7358, column: 9, scope: !7989)
!8004 = !DILocation(line: 7359, column: 5, scope: !7989)
!8005 = !DILocation(line: 7360, column: 9, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7360, column: 9)
!8007 = !DILocation(line: 7360, column: 9, scope: !7886)
!8008 = !DILocation(line: 7361, column: 19, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8006, file: !21, line: 7360, column: 21)
!8010 = !DILocation(line: 7361, column: 10, scope: !8009)
!8011 = !DILocation(line: 7361, column: 17, scope: !8009)
!8012 = !DILocation(line: 7362, column: 9, scope: !8009)
!8013 = !DILocation(line: 7364, column: 9, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7364, column: 9)
!8015 = !DILocation(line: 7364, column: 11, scope: !8014)
!8016 = !DILocation(line: 7364, column: 9, scope: !7886)
!8017 = !DILocation(line: 7365, column: 16, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8014, file: !21, line: 7364, column: 20)
!8019 = !DILocation(line: 7365, column: 18, scope: !8018)
!8020 = !DILocation(line: 7365, column: 25, scope: !8018)
!8021 = !DILocation(line: 7365, column: 42, scope: !8018)
!8022 = !DILocation(line: 7365, column: 14, scope: !8018)
!8023 = !DILocation(line: 7366, column: 9, scope: !8018)
!8024 = !DILocation(line: 7367, column: 9, scope: !8018)
!8025 = !DILocation(line: 7369, column: 9, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !7886, file: !21, line: 7369, column: 9)
!8027 = !DILocation(line: 7369, column: 9, scope: !7886)
!8028 = !DILocation(line: 7370, column: 19, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8026, file: !21, line: 7369, column: 32)
!8030 = !DILocation(line: 7370, column: 10, scope: !8029)
!8031 = !DILocation(line: 7370, column: 17, scope: !8029)
!8032 = !DILocation(line: 7371, column: 9, scope: !8029)
!8033 = !DILocation(line: 7373, column: 17, scope: !7886)
!8034 = !DILocation(line: 7373, column: 15, scope: !7886)
!8035 = !DILocation(line: 7374, column: 18, scope: !7886)
!8036 = !DILocation(line: 7377, column: 18, scope: !7886)
!8037 = !DILocation(line: 7377, column: 29, scope: !7886)
!8038 = !DILocation(line: 7374, column: 5, scope: !7886)
!8039 = !DILocation(line: 7383, column: 5, scope: !7886)
!8040 = !DILocation(line: 7388, column: 1, scope: !7886)
!8041 = !DILocation(line: 7390, column: 9, scope: !7904)
!8042 = !DILocation(line: 7390, column: 22, scope: !7904)
!8043 = !DILocation(line: 7390, column: 25, scope: !7904)
!8044 = !DILocation(line: 7390, column: 46, scope: !7904)
!8045 = !DILocation(line: 7390, column: 49, scope: !7904)
!8046 = !DILocation(line: 7390, column: 9, scope: !7886)
!8047 = !DILocation(line: 7391, column: 9, scope: !7903)
!8048 = !DILocation(line: 7391, column: 19, scope: !7903)
!8049 = !DILocation(line: 7391, column: 30, scope: !7903)
!8050 = !DILocation(line: 7392, column: 9, scope: !7903)
!8051 = !DILocation(line: 7393, column: 9, scope: !7903)
!8052 = !DILocation(line: 7394, column: 19, scope: !7903)
!8053 = !DILocation(line: 7394, column: 10, scope: !7903)
!8054 = !DILocation(line: 7394, column: 17, scope: !7903)
!8055 = !DILocation(line: 7395, column: 9, scope: !7903)
!8056 = !DILocation(line: 7396, column: 5, scope: !7904)
!8057 = !DILocation(line: 7398, column: 15, scope: !7886)
!8058 = !DILocation(line: 7398, column: 6, scope: !7886)
!8059 = !DILocation(line: 7398, column: 13, scope: !7886)
!8060 = !DILocation(line: 7399, column: 5, scope: !7886)
!8061 = !DILocation(line: 7400, column: 1, scope: !7886)
!8062 = distinct !DISubprogram(name: "__Pyx_PyObject_Call2Args", scope: !21, file: !21, line: 7290, type: !114, scopeLine: 7290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8063)
!8063 = !{!8064, !8065, !8066, !8067}
!8064 = !DILocalVariable(name: "function", arg: 1, scope: !8062, file: !21, line: 7290, type: !28)
!8065 = !DILocalVariable(name: "arg1", arg: 2, scope: !8062, file: !21, line: 7290, type: !28)
!8066 = !DILocalVariable(name: "arg2", arg: 3, scope: !8062, file: !21, line: 7290, type: !28)
!8067 = !DILocalVariable(name: "args", scope: !8062, file: !21, line: 7291, type: !8068)
!8068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 192, elements: !599)
!8069 = !DILocation(line: 7290, column: 67, scope: !8062)
!8070 = !DILocation(line: 7290, column: 87, scope: !8062)
!8071 = !DILocation(line: 7290, column: 103, scope: !8062)
!8072 = !DILocation(line: 7291, column: 5, scope: !8062)
!8073 = !DILocation(line: 7291, column: 15, scope: !8062)
!8074 = !DILocation(line: 7291, column: 25, scope: !8062)
!8075 = !DILocation(line: 7291, column: 32, scope: !8062)
!8076 = !DILocation(line: 7291, column: 38, scope: !8062)
!8077 = !DILocation(line: 7292, column: 12, scope: !8062)
!8078 = !DILocation(line: 7293, column: 1, scope: !8062)
!8079 = !DILocation(line: 7292, column: 5, scope: !8062)
!8080 = distinct !DISubprogram(name: "__Pyx__PyObject_CallMethod1", scope: !21, file: !21, line: 7403, type: !105, scopeLine: 7403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8081)
!8081 = !{!8082, !8083, !8084}
!8082 = !DILocalVariable(name: "method", arg: 1, scope: !8080, file: !21, line: 7403, type: !28)
!8083 = !DILocalVariable(name: "arg", arg: 2, scope: !8080, file: !21, line: 7403, type: !28)
!8084 = !DILocalVariable(name: "result", scope: !8080, file: !21, line: 7404, type: !28)
!8085 = !DILocation(line: 7403, column: 56, scope: !8080)
!8086 = !DILocation(line: 7403, column: 74, scope: !8080)
!8087 = !DILocation(line: 7404, column: 5, scope: !8080)
!8088 = !DILocation(line: 7404, column: 15, scope: !8080)
!8089 = !DILocation(line: 7404, column: 50, scope: !8080)
!8090 = !DILocation(line: 7404, column: 58, scope: !8080)
!8091 = !DILocation(line: 7404, column: 24, scope: !8080)
!8092 = !DILocation(line: 7405, column: 5, scope: !8080)
!8093 = !DILocation(line: 7406, column: 12, scope: !8080)
!8094 = !DILocation(line: 7407, column: 1, scope: !8080)
!8095 = !DILocation(line: 7406, column: 5, scope: !8080)
!8096 = !DISubprogram(name: "PyType_Ready", scope: !6, file: !6, line: 275, type: !6494, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8097 = !DISubprogram(name: "_PyType_Lookup", scope: !45, file: !45, line: 262, type: !8098, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8098 = !DISubroutineType(types: !8099)
!8099 = !{!28, !42, !28}
!8100 = !DISubprogram(name: "PyDescr_IsData", scope: !8101, file: !8101, line: 64, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8101 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/descrobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "7b11f0153f187b8dd2f98d8ebe41be94")
!8102 = !DISubprogram(name: "_PyObject_GetDictPtr", scope: !45, file: !45, line: 297, type: !8103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!94, !28}
!8105 = distinct !DISubprogram(name: "__Pyx_PyDict_GetItemStr", scope: !21, file: !21, line: 901, type: !105, scopeLine: 901, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8106)
!8106 = !{!8107, !8108, !8109}
!8107 = !DILocalVariable(name: "dict", arg: 1, scope: !8105, file: !21, line: 901, type: !28)
!8108 = !DILocalVariable(name: "name", arg: 2, scope: !8105, file: !21, line: 901, type: !28)
!8109 = !DILocalVariable(name: "res", scope: !8105, file: !21, line: 902, type: !28)
!8110 = !DILocation(line: 901, column: 67, scope: !8105)
!8111 = !DILocation(line: 901, column: 83, scope: !8105)
!8112 = !DILocation(line: 902, column: 5, scope: !8105)
!8113 = !DILocation(line: 902, column: 15, scope: !8105)
!8114 = !DILocation(line: 902, column: 21, scope: !8105)
!8115 = !DILocation(line: 903, column: 9, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8105, file: !21, line: 903, column: 9)
!8117 = !DILocation(line: 903, column: 13, scope: !8116)
!8118 = !DILocation(line: 903, column: 9, scope: !8105)
!8119 = !DILocation(line: 903, column: 22, scope: !8116)
!8120 = !DILocation(line: 904, column: 12, scope: !8105)
!8121 = !DILocation(line: 905, column: 1, scope: !8105)
!8122 = !DILocation(line: 904, column: 5, scope: !8105)
!8123 = distinct !DISubprogram(name: "__Pyx_PyInt_BoolEqObjC", scope: !21, file: !21, line: 8381, type: !8124, scopeLine: 8381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8126)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{!7, !28, !28, !40, !40}
!8126 = !{!8127, !8128, !8129, !8130, !8131, !8134, !8135, !8136, !8137, !8140}
!8127 = !DILocalVariable(name: "op1", arg: 1, scope: !8123, file: !21, line: 8381, type: !28)
!8128 = !DILocalVariable(name: "op2", arg: 2, scope: !8123, file: !21, line: 8381, type: !28)
!8129 = !DILocalVariable(name: "intval", arg: 3, scope: !8123, file: !21, line: 8381, type: !40)
!8130 = !DILocalVariable(name: "inplace", arg: 4, scope: !8123, file: !21, line: 8381, type: !40)
!8131 = !DILocalVariable(name: "unequal", scope: !8132, file: !21, line: 8396, type: !7)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !21, line: 8395, column: 41)
!8133 = distinct !DILexicalBlock(scope: !8123, file: !21, line: 8395, column: 9)
!8134 = !DILocalVariable(name: "uintval", scope: !8132, file: !21, line: 8397, type: !238)
!8135 = !DILocalVariable(name: "size", scope: !8132, file: !21, line: 8398, type: !34)
!8136 = !DILocalVariable(name: "digits", scope: !8132, file: !21, line: 8399, type: !7238)
!8137 = !DILocalVariable(name: "b", scope: !8138, file: !21, line: 8440, type: !7227)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !21, line: 8439, column: 34)
!8139 = distinct !DILexicalBlock(scope: !8123, file: !21, line: 8439, column: 9)
!8140 = !DILocalVariable(name: "a", scope: !8138, file: !21, line: 8444, type: !490)
!8141 = !DILocation(line: 8381, column: 59, scope: !8123)
!8142 = !DILocation(line: 8381, column: 74, scope: !8123)
!8143 = !DILocation(line: 8381, column: 84, scope: !8123)
!8144 = !DILocation(line: 8381, column: 97, scope: !8123)
!8145 = !DILocation(line: 8382, column: 5, scope: !8123)
!8146 = !DILocation(line: 8383, column: 5, scope: !8123)
!8147 = !DILocation(line: 8384, column: 9, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8123, file: !21, line: 8384, column: 9)
!8149 = !DILocation(line: 8384, column: 16, scope: !8148)
!8150 = !DILocation(line: 8384, column: 13, scope: !8148)
!8151 = !DILocation(line: 8384, column: 9, scope: !8123)
!8152 = !DILocation(line: 8385, column: 9, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8148, file: !21, line: 8384, column: 21)
!8154 = !DILocation(line: 8395, column: 9, scope: !8133)
!8155 = !DILocation(line: 8395, column: 9, scope: !8123)
!8156 = !DILocation(line: 8396, column: 9, scope: !8132)
!8157 = !DILocation(line: 8396, column: 13, scope: !8132)
!8158 = !DILocation(line: 8397, column: 9, scope: !8132)
!8159 = !DILocation(line: 8397, column: 23, scope: !8132)
!8160 = !DILocation(line: 8398, column: 9, scope: !8132)
!8161 = !DILocation(line: 8398, column: 20, scope: !8132)
!8162 = !DILocation(line: 8398, column: 27, scope: !8132)
!8163 = !DILocation(line: 8399, column: 9, scope: !8132)
!8164 = !DILocation(line: 8399, column: 22, scope: !8132)
!8165 = !DILocation(line: 8399, column: 31, scope: !8132)
!8166 = !DILocation(line: 8400, column: 13, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8132, file: !21, line: 8400, column: 13)
!8168 = !DILocation(line: 8400, column: 20, scope: !8167)
!8169 = !DILocation(line: 8400, column: 13, scope: !8132)
!8170 = !DILocation(line: 8401, column: 21, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8167, file: !21, line: 8400, column: 26)
!8172 = !DILocation(line: 8401, column: 46, scope: !8171)
!8173 = !DILocation(line: 8401, column: 13, scope: !8171)
!8174 = !DILocation(line: 8402, column: 20, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8167, file: !21, line: 8402, column: 20)
!8176 = !DILocation(line: 8402, column: 27, scope: !8175)
!8177 = !DILocation(line: 8402, column: 20, scope: !8167)
!8178 = !DILocation(line: 8403, column: 17, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !21, line: 8403, column: 17)
!8180 = distinct !DILexicalBlock(scope: !8175, file: !21, line: 8402, column: 32)
!8181 = !DILocation(line: 8403, column: 17, scope: !8180)
!8182 = !DILocation(line: 8404, column: 17, scope: !8179)
!8183 = !DILocation(line: 8405, column: 23, scope: !8180)
!8184 = !DILocation(line: 8405, column: 22, scope: !8180)
!8185 = !DILocation(line: 8405, column: 20, scope: !8180)
!8186 = !DILocation(line: 8406, column: 9, scope: !8180)
!8187 = !DILocation(line: 8407, column: 17, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !21, line: 8407, column: 17)
!8189 = distinct !DILexicalBlock(scope: !8175, file: !21, line: 8406, column: 16)
!8190 = !DILocation(line: 8407, column: 17, scope: !8189)
!8191 = !DILocation(line: 8408, column: 17, scope: !8188)
!8192 = !DILocation(line: 8410, column: 35, scope: !8132)
!8193 = !DILocation(line: 8410, column: 17, scope: !8132)
!8194 = !DILocation(line: 8424, column: 13, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8132, file: !21, line: 8424, column: 13)
!8196 = !DILocation(line: 8424, column: 21, scope: !8195)
!8197 = !DILocation(line: 8424, column: 13, scope: !8132)
!8198 = !DILocation(line: 8425, column: 24, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8195, file: !21, line: 8424, column: 44)
!8200 = !DILocation(line: 8425, column: 29, scope: !8199)
!8201 = !DILocation(line: 8425, column: 35, scope: !8199)
!8202 = !DILocation(line: 8425, column: 39, scope: !8199)
!8203 = !DILocation(line: 8425, column: 53, scope: !8199)
!8204 = !DILocation(line: 8425, column: 61, scope: !8199)
!8205 = !DILocation(line: 8425, column: 49, scope: !8199)
!8206 = !DILocation(line: 8426, column: 21, scope: !8199)
!8207 = !DILocation(line: 8426, column: 36, scope: !8199)
!8208 = !DILocation(line: 8426, column: 44, scope: !8199)
!8209 = !DILocation(line: 8426, column: 67, scope: !8199)
!8210 = !DILocation(line: 8426, column: 31, scope: !8199)
!8211 = !DILocation(line: 8426, column: 18, scope: !8199)
!8212 = !DILocation(line: 8426, column: 102, scope: !8199)
!8213 = !DILocation(line: 8426, column: 117, scope: !8199)
!8214 = !DILocation(line: 8426, column: 125, scope: !8199)
!8215 = !DILocation(line: 8426, column: 148, scope: !8199)
!8216 = !DILocation(line: 8426, column: 112, scope: !8199)
!8217 = !DILocation(line: 8426, column: 99, scope: !8199)
!8218 = !DILocation(line: 8425, column: 21, scope: !8199)
!8219 = !DILocation(line: 8427, column: 9, scope: !8199)
!8220 = !DILocation(line: 8430, column: 13, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8195, file: !21, line: 8430, column: 13)
!8222 = !DILocation(line: 8430, column: 21, scope: !8221)
!8223 = !DILocation(line: 8430, column: 13, scope: !8195)
!8224 = !DILocation(line: 8431, column: 24, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8221, file: !21, line: 8430, column: 44)
!8226 = !DILocation(line: 8431, column: 29, scope: !8225)
!8227 = !DILocation(line: 8431, column: 35, scope: !8225)
!8228 = !DILocation(line: 8431, column: 39, scope: !8225)
!8229 = !DILocation(line: 8431, column: 53, scope: !8225)
!8230 = !DILocation(line: 8431, column: 61, scope: !8225)
!8231 = !DILocation(line: 8431, column: 49, scope: !8225)
!8232 = !DILocation(line: 8432, column: 21, scope: !8225)
!8233 = !DILocation(line: 8432, column: 36, scope: !8225)
!8234 = !DILocation(line: 8432, column: 44, scope: !8225)
!8235 = !DILocation(line: 8432, column: 67, scope: !8225)
!8236 = !DILocation(line: 8432, column: 31, scope: !8225)
!8237 = !DILocation(line: 8432, column: 18, scope: !8225)
!8238 = !DILocation(line: 8431, column: 21, scope: !8225)
!8239 = !DILocation(line: 8433, column: 9, scope: !8225)
!8240 = !DILocation(line: 8435, column: 24, scope: !8221)
!8241 = !DILocation(line: 8435, column: 29, scope: !8221)
!8242 = !DILocation(line: 8435, column: 35, scope: !8221)
!8243 = !DILocation(line: 8435, column: 56, scope: !8221)
!8244 = !DILocation(line: 8435, column: 40, scope: !8221)
!8245 = !DILocation(line: 8435, column: 71, scope: !8221)
!8246 = !DILocation(line: 8435, column: 79, scope: !8221)
!8247 = !DILocation(line: 8435, column: 67, scope: !8221)
!8248 = !DILocation(line: 8435, column: 21, scope: !8221)
!8249 = !DILocation(line: 8436, column: 17, scope: !8132)
!8250 = !DILocation(line: 8436, column: 25, scope: !8132)
!8251 = !DILocation(line: 8436, column: 9, scope: !8132)
!8252 = !DILocation(line: 8437, column: 5, scope: !8133)
!8253 = !DILocation(line: 8439, column: 9, scope: !8139)
!8254 = !DILocation(line: 8439, column: 9, scope: !8123)
!8255 = !DILocation(line: 8440, column: 9, scope: !8138)
!8256 = !DILocation(line: 8440, column: 20, scope: !8138)
!8257 = !DILocation(line: 8440, column: 24, scope: !8138)
!8258 = !DILocation(line: 8444, column: 9, scope: !8138)
!8259 = !DILocation(line: 8444, column: 16, scope: !8138)
!8260 = !DILocation(line: 8444, column: 20, scope: !8138)
!8261 = !DILocation(line: 8446, column: 25, scope: !8138)
!8262 = !DILocation(line: 8446, column: 38, scope: !8138)
!8263 = !DILocation(line: 8446, column: 30, scope: !8138)
!8264 = !DILocation(line: 8446, column: 27, scope: !8138)
!8265 = !DILocation(line: 8446, column: 9, scope: !8138)
!8266 = !DILocation(line: 8447, column: 5, scope: !8139)
!8267 = !DILocation(line: 8449, column: 30, scope: !8123)
!8268 = !DILocation(line: 8449, column: 35, scope: !8123)
!8269 = !DILocation(line: 8449, column: 9, scope: !8123)
!8270 = !DILocation(line: 8448, column: 12, scope: !8123)
!8271 = !DILocation(line: 8448, column: 5, scope: !8123)
!8272 = !DILocation(line: 8450, column: 1, scope: !8123)
!8273 = distinct !DISubprogram(name: "PyUnicode_GET_LENGTH", scope: !13, file: !13, line: 358, type: !158, scopeLine: 358, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8274)
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "op", arg: 1, scope: !8273, file: !13, line: 358, type: !28)
!8276 = !DILocation(line: 358, column: 57, scope: !8273)
!8277 = !DILocation(line: 360, column: 12, scope: !8273)
!8278 = !DILocation(line: 360, column: 37, scope: !8273)
!8279 = !{!6745, !1837, i64 16}
!8280 = !DILocation(line: 360, column: 5, scope: !8273)
!8281 = distinct !DISubprogram(name: "__Pyx_PyObject_FormatSimpleAndDecref", scope: !21, file: !21, line: 8453, type: !105, scopeLine: 8453, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8282)
!8282 = !{!8283, !8284}
!8283 = !DILocalVariable(name: "s", arg: 1, scope: !8281, file: !21, line: 8453, type: !28)
!8284 = !DILocalVariable(name: "f", arg: 2, scope: !8281, file: !21, line: 8453, type: !28)
!8285 = !DILocation(line: 8453, column: 79, scope: !8281)
!8286 = !DILocation(line: 8453, column: 92, scope: !8281)
!8287 = !DILocation(line: 8454, column: 9, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8281, file: !21, line: 8454, column: 9)
!8289 = !DILocation(line: 8454, column: 9, scope: !8281)
!8290 = !DILocation(line: 8454, column: 23, scope: !8288)
!8291 = !DILocation(line: 8455, column: 9, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8281, file: !21, line: 8455, column: 9)
!8293 = !DILocation(line: 8455, column: 9, scope: !8281)
!8294 = !DILocation(line: 8455, column: 49, scope: !8292)
!8295 = !DILocation(line: 8455, column: 42, scope: !8292)
!8296 = !DILocation(line: 8463, column: 43, scope: !8281)
!8297 = !DILocation(line: 8463, column: 46, scope: !8281)
!8298 = !DILocation(line: 8463, column: 12, scope: !8281)
!8299 = !DILocation(line: 8463, column: 5, scope: !8281)
!8300 = !DILocation(line: 8464, column: 1, scope: !8281)
!8301 = !DISubprogram(name: "PyObject_Repr", scope: !6, file: !6, line: 283, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8302 = distinct !DISubprogram(name: "PyUnicode_MAX_CHAR_VALUE", scope: !13, file: !13, line: 441, type: !8303, scopeLine: 442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8305)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!423, !28}
!8305 = !{!8306, !8307}
!8306 = !DILocalVariable(name: "op", arg: 1, scope: !8302, file: !13, line: 441, type: !28)
!8307 = !DILocalVariable(name: "kind", scope: !8302, file: !13, line: 443, type: !7)
!8308 = !DILocation(line: 441, column: 58, scope: !8302)
!8309 = !DILocation(line: 443, column: 5, scope: !8302)
!8310 = !DILocation(line: 443, column: 9, scope: !8302)
!8311 = !DILocation(line: 446, column: 9, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8302, file: !13, line: 446, column: 9)
!8313 = !DILocation(line: 446, column: 9, scope: !8302)
!8314 = !DILocation(line: 447, column: 9, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8312, file: !13, line: 446, column: 33)
!8316 = !DILocation(line: 450, column: 12, scope: !8302)
!8317 = !DILocation(line: 450, column: 10, scope: !8302)
!8318 = !DILocation(line: 451, column: 9, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8302, file: !13, line: 451, column: 9)
!8320 = !DILocation(line: 451, column: 14, scope: !8319)
!8321 = !DILocation(line: 451, column: 9, scope: !8302)
!8322 = !DILocation(line: 452, column: 8, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8319, file: !13, line: 451, column: 39)
!8324 = !DILocation(line: 454, column: 9, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8302, file: !13, line: 454, column: 9)
!8326 = !DILocation(line: 454, column: 14, scope: !8325)
!8327 = !DILocation(line: 454, column: 9, scope: !8302)
!8328 = !DILocation(line: 455, column: 9, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8325, file: !13, line: 454, column: 39)
!8330 = !DILocation(line: 458, column: 5, scope: !8302)
!8331 = !DILocation(line: 459, column: 1, scope: !8302)
!8332 = distinct !DISubprogram(name: "__Pyx_PyUnicode_Join", scope: !21, file: !21, line: 8472, type: !8333, scopeLine: 8473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8335)
!8333 = !DISubroutineType(types: !8334)
!8334 = !{!28, !28, !34, !34, !423}
!8335 = !{!8336, !8337, !8338, !8339, !8340, !8341, !8342, !8343, !8344, !8345, !8346, !8350, !8351, !8352, !8353, !8354}
!8336 = !DILocalVariable(name: "value_tuple", arg: 1, scope: !8332, file: !21, line: 8472, type: !28)
!8337 = !DILocalVariable(name: "value_count", arg: 2, scope: !8332, file: !21, line: 8472, type: !34)
!8338 = !DILocalVariable(name: "result_ulength", arg: 3, scope: !8332, file: !21, line: 8472, type: !34)
!8339 = !DILocalVariable(name: "max_char", arg: 4, scope: !8332, file: !21, line: 8473, type: !423)
!8340 = !DILocalVariable(name: "result_uval", scope: !8332, file: !21, line: 8475, type: !28)
!8341 = !DILocalVariable(name: "result_ukind", scope: !8332, file: !21, line: 8476, type: !7)
!8342 = !DILocalVariable(name: "kind_shift", scope: !8332, file: !21, line: 8476, type: !7)
!8343 = !DILocalVariable(name: "i", scope: !8332, file: !21, line: 8477, type: !34)
!8344 = !DILocalVariable(name: "char_pos", scope: !8332, file: !21, line: 8477, type: !34)
!8345 = !DILocalVariable(name: "result_udata", scope: !8332, file: !21, line: 8478, type: !27)
!8346 = !DILocalVariable(name: "ukind", scope: !8347, file: !21, line: 8496, type: !7)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !21, line: 8495, column: 37)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !21, line: 8495, column: 5)
!8349 = distinct !DILexicalBlock(scope: !8332, file: !21, line: 8495, column: 5)
!8350 = !DILocalVariable(name: "ulength", scope: !8347, file: !21, line: 8497, type: !34)
!8351 = !DILocalVariable(name: "udata", scope: !8347, file: !21, line: 8498, type: !27)
!8352 = !DILocalVariable(name: "uval", scope: !8347, file: !21, line: 8499, type: !28)
!8353 = !DILabel(scope: !8332, name: "overflow", file: !21, line: 8527)
!8354 = !DILabel(scope: !8332, name: "bad", file: !21, line: 8529)
!8355 = !DILocation(line: 8472, column: 49, scope: !8332)
!8356 = !DILocation(line: 8472, column: 73, scope: !8332)
!8357 = !DILocation(line: 8472, column: 97, scope: !8332)
!8358 = !DILocation(line: 8473, column: 47, scope: !8332)
!8359 = !DILocation(line: 8475, column: 5, scope: !8332)
!8360 = !DILocation(line: 8475, column: 15, scope: !8332)
!8361 = !DILocation(line: 8476, column: 5, scope: !8332)
!8362 = !DILocation(line: 8476, column: 9, scope: !8332)
!8363 = !DILocation(line: 8476, column: 23, scope: !8332)
!8364 = !DILocation(line: 8477, column: 5, scope: !8332)
!8365 = !DILocation(line: 8477, column: 16, scope: !8332)
!8366 = !DILocation(line: 8477, column: 19, scope: !8332)
!8367 = !DILocation(line: 8478, column: 5, scope: !8332)
!8368 = !DILocation(line: 8478, column: 11, scope: !8332)
!8369 = !DILocation(line: 8479, column: 5, scope: !8332)
!8370 = !DILocation(line: 8481, column: 33, scope: !8332)
!8371 = !DILocation(line: 8481, column: 49, scope: !8332)
!8372 = !DILocation(line: 8481, column: 19, scope: !8332)
!8373 = !DILocation(line: 8481, column: 17, scope: !8332)
!8374 = !DILocation(line: 8482, column: 9, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8332, file: !21, line: 8482, column: 9)
!8376 = !DILocation(line: 8482, column: 9, scope: !8332)
!8377 = !DILocation(line: 8482, column: 33, scope: !8375)
!8378 = !DILocation(line: 8483, column: 21, scope: !8332)
!8379 = !DILocation(line: 8483, column: 30, scope: !8332)
!8380 = !DILocation(line: 8483, column: 20, scope: !8332)
!8381 = !DILocation(line: 8483, column: 64, scope: !8332)
!8382 = !DILocation(line: 8483, column: 73, scope: !8332)
!8383 = !DILocation(line: 8483, column: 63, scope: !8332)
!8384 = !DILocation(line: 8483, column: 18, scope: !8332)
!8385 = !DILocation(line: 8484, column: 19, scope: !8332)
!8386 = !DILocation(line: 8484, column: 32, scope: !8332)
!8387 = !DILocation(line: 8484, column: 18, scope: !8332)
!8388 = !DILocation(line: 8484, column: 63, scope: !8332)
!8389 = !DILocation(line: 8484, column: 76, scope: !8332)
!8390 = !DILocation(line: 8484, column: 16, scope: !8332)
!8391 = !DILocation(line: 8485, column: 20, scope: !8332)
!8392 = !DILocation(line: 8485, column: 18, scope: !8332)
!8393 = !DILocation(line: 8494, column: 14, scope: !8332)
!8394 = !DILocation(line: 8495, column: 11, scope: !8349)
!8395 = !DILocation(line: 8495, column: 10, scope: !8349)
!8396 = !DILocation(line: 8495, column: 15, scope: !8348)
!8397 = !DILocation(line: 8495, column: 19, scope: !8348)
!8398 = !DILocation(line: 8495, column: 17, scope: !8348)
!8399 = !DILocation(line: 8495, column: 5, scope: !8349)
!8400 = !DILocation(line: 8496, column: 9, scope: !8347)
!8401 = !DILocation(line: 8496, column: 13, scope: !8347)
!8402 = !DILocation(line: 8497, column: 9, scope: !8347)
!8403 = !DILocation(line: 8497, column: 20, scope: !8347)
!8404 = !DILocation(line: 8498, column: 9, scope: !8347)
!8405 = !DILocation(line: 8498, column: 15, scope: !8347)
!8406 = !DILocation(line: 8499, column: 9, scope: !8347)
!8407 = !DILocation(line: 8499, column: 19, scope: !8347)
!8408 = !DILocation(line: 8499, column: 26, scope: !8347)
!8409 = !DILocation(line: 8500, column: 13, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8347, file: !21, line: 8500, column: 13)
!8411 = !DILocation(line: 8500, column: 13, scope: !8347)
!8412 = !DILocation(line: 8501, column: 13, scope: !8410)
!8413 = !DILocation(line: 8502, column: 19, scope: !8347)
!8414 = !DILocation(line: 8502, column: 17, scope: !8347)
!8415 = !DILocation(line: 8503, column: 13, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8347, file: !21, line: 8503, column: 13)
!8417 = !DILocation(line: 8503, column: 13, scope: !8347)
!8418 = !DILocation(line: 8504, column: 13, scope: !8416)
!8419 = !DILocation(line: 8505, column: 13, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8347, file: !21, line: 8505, column: 13)
!8421 = !DILocation(line: 8505, column: 13, scope: !8347)
!8422 = !DILocation(line: 8506, column: 13, scope: !8420)
!8423 = !DILocation(line: 8507, column: 17, scope: !8347)
!8424 = !DILocation(line: 8507, column: 15, scope: !8347)
!8425 = !DILocation(line: 8508, column: 17, scope: !8347)
!8426 = !DILocation(line: 8508, column: 15, scope: !8347)
!8427 = !DILocation(line: 8509, column: 39, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8347, file: !21, line: 8509, column: 13)
!8429 = !DILocation(line: 8509, column: 48, scope: !8428)
!8430 = !DILocation(line: 8509, column: 45, scope: !8428)
!8431 = !DILocation(line: 8509, column: 13, scope: !8347)
!8432 = !DILocation(line: 8510, column: 28, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8428, file: !21, line: 8509, column: 62)
!8434 = !DILocation(line: 8510, column: 44, scope: !8433)
!8435 = !DILocation(line: 8510, column: 56, scope: !8433)
!8436 = !DILocation(line: 8510, column: 53, scope: !8433)
!8437 = !DILocation(line: 8510, column: 41, scope: !8433)
!8438 = !DILocation(line: 8510, column: 69, scope: !8433)
!8439 = !DILocation(line: 8510, column: 86, scope: !8433)
!8440 = !DILocation(line: 8510, column: 97, scope: !8433)
!8441 = !DILocation(line: 8510, column: 94, scope: !8433)
!8442 = !DILocation(line: 8510, column: 13, scope: !8433)
!8443 = !DILocation(line: 8511, column: 9, scope: !8433)
!8444 = !DILocation(line: 8515, column: 43, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8428, file: !21, line: 8511, column: 16)
!8446 = !DILocation(line: 8515, column: 56, scope: !8445)
!8447 = !DILocation(line: 8515, column: 66, scope: !8445)
!8448 = !DILocation(line: 8515, column: 75, scope: !8445)
!8449 = !DILocation(line: 8515, column: 13, scope: !8445)
!8450 = !DILocation(line: 8524, column: 21, scope: !8347)
!8451 = !DILocation(line: 8524, column: 18, scope: !8347)
!8452 = !DILocation(line: 8525, column: 5, scope: !8348)
!8453 = !DILocation(line: 8525, column: 5, scope: !8347)
!8454 = !DILocation(line: 8495, column: 33, scope: !8348)
!8455 = !DILocation(line: 8495, column: 5, scope: !8348)
!8456 = distinct !{!8456, !8399, !8457, !4154}
!8457 = !DILocation(line: 8525, column: 5, scope: !8349)
!8458 = !DILocation(line: 8526, column: 12, scope: !8332)
!8459 = !DILocation(line: 8526, column: 5, scope: !8332)
!8460 = !DILocation(line: 8527, column: 1, scope: !8332)
!8461 = !DILocation(line: 8528, column: 21, scope: !8332)
!8462 = !DILocation(line: 8528, column: 5, scope: !8332)
!8463 = !DILocation(line: 8529, column: 1, scope: !8332)
!8464 = !DILocation(line: 8530, column: 5, scope: !8332)
!8465 = !DILocation(line: 8531, column: 5, scope: !8332)
!8466 = !DILocation(line: 8538, column: 1, scope: !8332)
!8467 = !DISubprogram(name: "PyDict_DelItem", scope: !2187, file: !2187, line: 25, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8468 = distinct !DISubprogram(name: "__Pyx_PyInt_SubtractObjC", scope: !21, file: !21, line: 8542, type: !7216, scopeLine: 8542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8469)
!8469 = !{!8470, !8471, !8472, !8473, !8474, !8475, !8478, !8479, !8480, !8481, !8482, !8483, !8486, !8487, !8488, !8491, !8492}
!8470 = !DILocalVariable(name: "op1", arg: 1, scope: !8468, file: !21, line: 8542, type: !28)
!8471 = !DILocalVariable(name: "op2", arg: 2, scope: !8468, file: !21, line: 8542, type: !28)
!8472 = !DILocalVariable(name: "intval", arg: 3, scope: !8468, file: !21, line: 8542, type: !40)
!8473 = !DILocalVariable(name: "inplace", arg: 4, scope: !8468, file: !21, line: 8542, type: !7)
!8474 = !DILocalVariable(name: "zerodivision_check", arg: 5, scope: !8468, file: !21, line: 8542, type: !7)
!8475 = !DILocalVariable(name: "b", scope: !8476, file: !21, line: 8560, type: !7227)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !21, line: 8559, column: 41)
!8477 = distinct !DILexicalBlock(scope: !8468, file: !21, line: 8559, column: 9)
!8478 = !DILocalVariable(name: "a", scope: !8476, file: !21, line: 8561, type: !40)
!8479 = !DILocalVariable(name: "x", scope: !8476, file: !21, line: 8561, type: !40)
!8480 = !DILocalVariable(name: "llb", scope: !8476, file: !21, line: 8563, type: !7231)
!8481 = !DILocalVariable(name: "lla", scope: !8476, file: !21, line: 8564, type: !7232)
!8482 = !DILocalVariable(name: "llx", scope: !8476, file: !21, line: 8564, type: !7232)
!8483 = !DILocalVariable(name: "digits", scope: !8484, file: !21, line: 8572, type: !7238)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !21, line: 8571, column: 16)
!8485 = distinct !DILexicalBlock(scope: !8476, file: !21, line: 8569, column: 13)
!8486 = !DILocalVariable(name: "size", scope: !8484, file: !21, line: 8573, type: !4017)
!8487 = !DILabel(scope: !8476, name: "long_long", file: !21, line: 8647)
!8488 = !DILocalVariable(name: "b", scope: !8489, file: !21, line: 8656, type: !7227)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !21, line: 8655, column: 34)
!8490 = distinct !DILexicalBlock(scope: !8468, file: !21, line: 8655, column: 9)
!8491 = !DILocalVariable(name: "a", scope: !8489, file: !21, line: 8660, type: !490)
!8492 = !DILocalVariable(name: "result", scope: !8489, file: !21, line: 8662, type: !490)
!8493 = !DILocation(line: 8542, column: 53, scope: !8468)
!8494 = !DILocation(line: 8542, column: 68, scope: !8468)
!8495 = !DILocation(line: 8542, column: 78, scope: !8468)
!8496 = !DILocation(line: 8542, column: 90, scope: !8468)
!8497 = !DILocation(line: 8542, column: 103, scope: !8468)
!8498 = !DILocation(line: 8543, column: 5, scope: !8468)
!8499 = !DILocation(line: 8544, column: 5, scope: !8468)
!8500 = !DILocation(line: 8545, column: 5, scope: !8468)
!8501 = !DILocation(line: 8559, column: 9, scope: !8477)
!8502 = !DILocation(line: 8559, column: 9, scope: !8468)
!8503 = !DILocation(line: 8560, column: 9, scope: !8476)
!8504 = !DILocation(line: 8560, column: 20, scope: !8476)
!8505 = !DILocation(line: 8560, column: 24, scope: !8476)
!8506 = !DILocation(line: 8561, column: 9, scope: !8476)
!8507 = !DILocation(line: 8561, column: 14, scope: !8476)
!8508 = !DILocation(line: 8561, column: 17, scope: !8476)
!8509 = !DILocation(line: 8563, column: 9, scope: !8476)
!8510 = !DILocation(line: 8563, column: 28, scope: !8476)
!8511 = !DILocation(line: 8563, column: 34, scope: !8476)
!8512 = !DILocation(line: 8564, column: 9, scope: !8476)
!8513 = !DILocation(line: 8564, column: 22, scope: !8476)
!8514 = !DILocation(line: 8564, column: 27, scope: !8476)
!8515 = !DILocation(line: 8566, column: 13, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8476, file: !21, line: 8566, column: 13)
!8517 = !DILocation(line: 8566, column: 13, scope: !8476)
!8518 = !DILocation(line: 8567, column: 37, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8516, file: !21, line: 8566, column: 49)
!8520 = !DILocation(line: 8567, column: 36, scope: !8519)
!8521 = !DILocation(line: 8567, column: 20, scope: !8519)
!8522 = !DILocation(line: 8567, column: 13, scope: !8519)
!8523 = !DILocation(line: 8569, column: 13, scope: !8485)
!8524 = !DILocation(line: 8569, column: 13, scope: !8476)
!8525 = !DILocation(line: 8570, column: 17, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8485, file: !21, line: 8569, column: 50)
!8527 = !DILocation(line: 8570, column: 15, scope: !8526)
!8528 = !DILocation(line: 8571, column: 9, scope: !8526)
!8529 = !DILocation(line: 8572, column: 13, scope: !8484)
!8530 = !DILocation(line: 8572, column: 26, scope: !8484)
!8531 = !DILocation(line: 8572, column: 35, scope: !8484)
!8532 = !DILocation(line: 8573, column: 13, scope: !8484)
!8533 = !DILocation(line: 8573, column: 30, scope: !8484)
!8534 = !DILocation(line: 8573, column: 37, scope: !8484)
!8535 = !DILocation(line: 8574, column: 21, scope: !8484)
!8536 = !DILocation(line: 8574, column: 13, scope: !8484)
!8537 = !DILocation(line: 8577, column: 56, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8539, file: !21, line: 8576, column: 66)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !21, line: 8576, column: 25)
!8540 = distinct !DILexicalBlock(scope: !8484, file: !21, line: 8574, column: 27)
!8541 = !DILocation(line: 8577, column: 41, scope: !8538)
!8542 = !DILocation(line: 8577, column: 67, scope: !8538)
!8543 = !DILocation(line: 8577, column: 101, scope: !8538)
!8544 = !DILocation(line: 8577, column: 86, scope: !8538)
!8545 = !DILocation(line: 8577, column: 84, scope: !8538)
!8546 = !DILocation(line: 8577, column: 29, scope: !8538)
!8547 = !DILocation(line: 8577, column: 27, scope: !8538)
!8548 = !DILocation(line: 8578, column: 25, scope: !8538)
!8549 = !DILocation(line: 8588, column: 55, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !21, line: 8587, column: 66)
!8551 = distinct !DILexicalBlock(scope: !8540, file: !21, line: 8587, column: 25)
!8552 = !DILocation(line: 8588, column: 40, scope: !8550)
!8553 = !DILocation(line: 8588, column: 66, scope: !8550)
!8554 = !DILocation(line: 8588, column: 100, scope: !8550)
!8555 = !DILocation(line: 8588, column: 85, scope: !8550)
!8556 = !DILocation(line: 8588, column: 83, scope: !8550)
!8557 = !DILocation(line: 8588, column: 27, scope: !8550)
!8558 = !DILocation(line: 8589, column: 25, scope: !8550)
!8559 = !DILocation(line: 8598, column: 52, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8540, file: !21, line: 8598, column: 25)
!8561 = !DILocation(line: 8609, column: 52, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8540, file: !21, line: 8609, column: 25)
!8563 = !DILocation(line: 8620, column: 52, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8540, file: !21, line: 8620, column: 25)
!8565 = !DILocation(line: 8631, column: 52, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8540, file: !21, line: 8631, column: 25)
!8567 = !DILocation(line: 8641, column: 45, scope: !8540)
!8568 = !DILocation(line: 8641, column: 59, scope: !8540)
!8569 = !{!7325, !1462, i64 8}
!8570 = !DILocation(line: 8641, column: 71, scope: !8540)
!8571 = !DILocation(line: 8641, column: 76, scope: !8540)
!8572 = !DILocation(line: 8641, column: 33, scope: !8540)
!8573 = !DILocation(line: 8641, column: 26, scope: !8540)
!8574 = !DILocation(line: 8643, column: 9, scope: !8485)
!8575 = !DILocation(line: 8644, column: 21, scope: !8476)
!8576 = !DILocation(line: 8644, column: 25, scope: !8476)
!8577 = !DILocation(line: 8644, column: 23, scope: !8476)
!8578 = !DILocation(line: 8644, column: 19, scope: !8476)
!8579 = !DILocation(line: 8645, column: 36, scope: !8476)
!8580 = !DILocation(line: 8645, column: 20, scope: !8476)
!8581 = !DILocation(line: 8645, column: 13, scope: !8476)
!8582 = !DILocation(line: 8647, column: 9, scope: !8476)
!8583 = !DILocation(line: 8648, column: 23, scope: !8476)
!8584 = !DILocation(line: 8648, column: 29, scope: !8476)
!8585 = !DILocation(line: 8648, column: 27, scope: !8476)
!8586 = !DILocation(line: 8648, column: 21, scope: !8476)
!8587 = !DILocation(line: 8649, column: 40, scope: !8476)
!8588 = !DILocation(line: 8649, column: 20, scope: !8476)
!8589 = !DILocation(line: 8649, column: 13, scope: !8476)
!8590 = !DILocation(line: 8653, column: 5, scope: !8477)
!8591 = !DILocation(line: 8655, column: 9, scope: !8490)
!8592 = !DILocation(line: 8655, column: 9, scope: !8468)
!8593 = !DILocation(line: 8656, column: 9, scope: !8489)
!8594 = !DILocation(line: 8656, column: 20, scope: !8489)
!8595 = !DILocation(line: 8656, column: 24, scope: !8489)
!8596 = !DILocation(line: 8660, column: 9, scope: !8489)
!8597 = !DILocation(line: 8660, column: 16, scope: !8489)
!8598 = !DILocation(line: 8660, column: 20, scope: !8489)
!8599 = !DILocation(line: 8662, column: 13, scope: !8489)
!8600 = !DILocation(line: 8662, column: 20, scope: !8489)
!8601 = !DILocation(line: 8665, column: 31, scope: !8489)
!8602 = !DILocation(line: 8665, column: 44, scope: !8489)
!8603 = !DILocation(line: 8665, column: 36, scope: !8489)
!8604 = !DILocation(line: 8665, column: 34, scope: !8489)
!8605 = !DILocation(line: 8665, column: 20, scope: !8489)
!8606 = !DILocation(line: 8667, column: 39, scope: !8489)
!8607 = !DILocation(line: 8667, column: 20, scope: !8489)
!8608 = !DILocation(line: 8667, column: 13, scope: !8489)
!8609 = !DILocation(line: 8668, column: 5, scope: !8490)
!8610 = !DILocation(line: 8669, column: 13, scope: !8468)
!8611 = !DILocation(line: 8669, column: 69, scope: !8468)
!8612 = !DILocation(line: 8669, column: 74, scope: !8468)
!8613 = !DILocation(line: 8669, column: 12, scope: !8468)
!8614 = !DILocation(line: 8669, column: 5, scope: !8468)
!8615 = !DILocation(line: 8670, column: 1, scope: !8468)
!8616 = distinct !DISubprogram(name: "__Pyx_PyObject_IsTrueAndDecref", scope: !21, file: !21, line: 11171, type: !122, scopeLine: 11171, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8617)
!8617 = !{!8618, !8619}
!8618 = !DILocalVariable(name: "x", arg: 1, scope: !8616, file: !21, line: 11171, type: !28)
!8619 = !DILocalVariable(name: "retval", scope: !8616, file: !21, line: 11172, type: !7)
!8620 = !DILocation(line: 11171, column: 67, scope: !8616)
!8621 = !DILocation(line: 11172, column: 5, scope: !8616)
!8622 = !DILocation(line: 11172, column: 9, scope: !8616)
!8623 = !DILocation(line: 11173, column: 9, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8616, file: !21, line: 11173, column: 9)
!8625 = !DILocation(line: 11173, column: 9, scope: !8616)
!8626 = !DILocation(line: 11173, column: 23, scope: !8624)
!8627 = !DILocation(line: 11174, column: 36, scope: !8616)
!8628 = !DILocation(line: 11174, column: 14, scope: !8616)
!8629 = !DILocation(line: 11174, column: 12, scope: !8616)
!8630 = !DILocation(line: 11175, column: 5, scope: !8616)
!8631 = !DILocation(line: 11176, column: 12, scope: !8616)
!8632 = !DILocation(line: 11176, column: 5, scope: !8616)
!8633 = !DILocation(line: 11177, column: 1, scope: !8616)
!8634 = distinct !DISubprogram(name: "__Pyx_PyObject_FormatAndDecref", scope: !21, file: !21, line: 8465, type: !105, scopeLine: 8465, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8635)
!8635 = !{!8636, !8637, !8638}
!8636 = !DILocalVariable(name: "s", arg: 1, scope: !8634, file: !21, line: 8465, type: !28)
!8637 = !DILocalVariable(name: "f", arg: 2, scope: !8634, file: !21, line: 8465, type: !28)
!8638 = !DILocalVariable(name: "result", scope: !8634, file: !21, line: 8466, type: !28)
!8639 = !DILocation(line: 8465, column: 73, scope: !8634)
!8640 = !DILocation(line: 8465, column: 86, scope: !8634)
!8641 = !DILocation(line: 8466, column: 5, scope: !8634)
!8642 = !DILocation(line: 8466, column: 15, scope: !8634)
!8643 = !DILocation(line: 8466, column: 40, scope: !8634)
!8644 = !DILocation(line: 8466, column: 43, scope: !8634)
!8645 = !DILocation(line: 8466, column: 24, scope: !8634)
!8646 = !DILocation(line: 8467, column: 5, scope: !8634)
!8647 = !DILocation(line: 8468, column: 12, scope: !8634)
!8648 = !DILocation(line: 8469, column: 1, scope: !8634)
!8649 = !DILocation(line: 8468, column: 5, scope: !8634)
!8650 = !DISubprogram(name: "PyObject_Format", scope: !2616, file: !2616, line: 363, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8651 = distinct !DISubprogram(name: "PyUnicode_IS_READY", scope: !13, file: !13, line: 268, type: !7585, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8652)
!8652 = !{!8653}
!8653 = !DILocalVariable(name: "op", arg: 1, scope: !8651, file: !13, line: 268, type: !28)
!8654 = !DILocation(line: 268, column: 57, scope: !8651)
!8655 = !DILocation(line: 269, column: 12, scope: !8651)
!8656 = !DILocation(line: 269, column: 37, scope: !8651)
!8657 = !DILocation(line: 269, column: 43, scope: !8651)
!8658 = !DILocation(line: 269, column: 5, scope: !8651)
!8659 = !DISubprogram(name: "_PyUnicode_Ready", scope: !13, file: !13, line: 484, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8660 = !DISubprogram(name: "_PyUnicode_FastCopyCharacters", scope: !13, file: !13, line: 537, type: !8661, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{null, !28, !34, !28, !34, !34}
!8663 = distinct !DISubprogram(name: "__Pyx_dict_iterator", scope: !21, file: !21, line: 8767, type: !8664, scopeLine: 8768, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8667)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!28, !28, !7, !28, !228, !8666}
!8666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!8667 = !{!8668, !8669, !8670, !8671, !8672, !8673}
!8668 = !DILocalVariable(name: "iterable", arg: 1, scope: !8663, file: !21, line: 8767, type: !28)
!8669 = !DILocalVariable(name: "is_dict", arg: 2, scope: !8663, file: !21, line: 8767, type: !7)
!8670 = !DILocalVariable(name: "method_name", arg: 3, scope: !8663, file: !21, line: 8767, type: !28)
!8671 = !DILocalVariable(name: "p_orig_length", arg: 4, scope: !8663, file: !21, line: 8768, type: !228)
!8672 = !DILocalVariable(name: "p_source_is_dict", arg: 5, scope: !8663, file: !21, line: 8768, type: !8666)
!8673 = !DILocalVariable(name: "iter", scope: !8674, file: !21, line: 8797, type: !28)
!8674 = distinct !DILexicalBlock(scope: !8675, file: !21, line: 8796, column: 22)
!8675 = distinct !DILexicalBlock(scope: !8663, file: !21, line: 8796, column: 9)
!8676 = !DILocation(line: 8767, column: 62, scope: !8663)
!8677 = !DILocation(line: 8767, column: 76, scope: !8663)
!8678 = !DILocation(line: 8767, column: 95, scope: !8663)
!8679 = !DILocation(line: 8768, column: 64, scope: !8663)
!8680 = !DILocation(line: 8768, column: 84, scope: !8663)
!8681 = !DILocation(line: 8769, column: 15, scope: !8663)
!8682 = !DILocation(line: 8769, column: 23, scope: !8663)
!8683 = !DILocation(line: 8769, column: 26, scope: !8663)
!8684 = !DILocation(line: 8769, column: 13, scope: !8663)
!8685 = !DILocation(line: 8770, column: 25, scope: !8663)
!8686 = !DILocation(line: 8770, column: 6, scope: !8663)
!8687 = !DILocation(line: 8770, column: 23, scope: !8663)
!8688 = !DILocation(line: 8771, column: 9, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8663, file: !21, line: 8771, column: 9)
!8690 = !DILocation(line: 8771, column: 9, scope: !8663)
!8691 = !DILocation(line: 8773, column: 38, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8689, file: !21, line: 8771, column: 18)
!8693 = !DILocation(line: 8773, column: 26, scope: !8692)
!8694 = !DILocation(line: 8773, column: 10, scope: !8692)
!8695 = !DILocation(line: 8773, column: 24, scope: !8692)
!8696 = !DILocation(line: 8774, column: 9, scope: !8692)
!8697 = !DILocation(line: 8775, column: 16, scope: !8692)
!8698 = !DILocation(line: 8775, column: 9, scope: !8692)
!8699 = !DILocation(line: 8795, column: 6, scope: !8663)
!8700 = !DILocation(line: 8795, column: 20, scope: !8663)
!8701 = !DILocation(line: 8796, column: 9, scope: !8675)
!8702 = !DILocation(line: 8796, column: 9, scope: !8663)
!8703 = !DILocation(line: 8797, column: 9, scope: !8674)
!8704 = !DILocation(line: 8797, column: 19, scope: !8674)
!8705 = !DILocation(line: 8798, column: 47, scope: !8674)
!8706 = !DILocation(line: 8798, column: 57, scope: !8674)
!8707 = !DILocation(line: 8798, column: 20, scope: !8674)
!8708 = !DILocation(line: 8798, column: 18, scope: !8674)
!8709 = !DILocation(line: 8799, column: 14, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8674, file: !21, line: 8799, column: 13)
!8711 = !DILocation(line: 8799, column: 13, scope: !8674)
!8712 = !DILocation(line: 8800, column: 13, scope: !8710)
!8713 = !DILocation(line: 8802, column: 13, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8674, file: !21, line: 8802, column: 13)
!8715 = !DILocation(line: 8802, column: 42, scope: !8714)
!8716 = !DILocation(line: 8802, column: 45, scope: !8714)
!8717 = !DILocation(line: 8802, column: 13, scope: !8674)
!8718 = !DILocation(line: 8803, column: 20, scope: !8714)
!8719 = !DILocation(line: 8803, column: 13, scope: !8714)
!8720 = !DILocation(line: 8805, column: 33, scope: !8674)
!8721 = !DILocation(line: 8805, column: 16, scope: !8674)
!8722 = !DILocation(line: 8805, column: 14, scope: !8674)
!8723 = !DILocation(line: 8806, column: 9, scope: !8674)
!8724 = !DILocation(line: 8807, column: 16, scope: !8674)
!8725 = !DILocation(line: 8807, column: 9, scope: !8674)
!8726 = !DILocation(line: 8808, column: 5, scope: !8675)
!8727 = !DILocation(line: 8809, column: 29, scope: !8663)
!8728 = !DILocation(line: 8809, column: 12, scope: !8663)
!8729 = !DILocation(line: 8809, column: 5, scope: !8663)
!8730 = !DILocation(line: 8810, column: 1, scope: !8663)
!8731 = distinct !DISubprogram(name: "__Pyx_dict_iter_next", scope: !21, file: !21, line: 8811, type: !8732, scopeLine: 8813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8734)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!7, !28, !34, !228, !94, !94, !94, !7}
!8734 = !{!8735, !8736, !8737, !8738, !8739, !8740, !8741, !8742, !8743, !8746, !8747, !8750, !8753}
!8735 = !DILocalVariable(name: "iter_obj", arg: 1, scope: !8731, file: !21, line: 8812, type: !28)
!8736 = !DILocalVariable(name: "orig_length", arg: 2, scope: !8731, file: !21, line: 8812, type: !34)
!8737 = !DILocalVariable(name: "ppos", arg: 3, scope: !8731, file: !21, line: 8812, type: !228)
!8738 = !DILocalVariable(name: "pkey", arg: 4, scope: !8731, file: !21, line: 8813, type: !94)
!8739 = !DILocalVariable(name: "pvalue", arg: 5, scope: !8731, file: !21, line: 8813, type: !94)
!8740 = !DILocalVariable(name: "pitem", arg: 6, scope: !8731, file: !21, line: 8813, type: !94)
!8741 = !DILocalVariable(name: "source_is_dict", arg: 7, scope: !8731, file: !21, line: 8813, type: !7)
!8742 = !DILocalVariable(name: "next_item", scope: !8731, file: !21, line: 8814, type: !28)
!8743 = !DILocalVariable(name: "key", scope: !8744, file: !21, line: 8817, type: !28)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !21, line: 8816, column: 25)
!8745 = distinct !DILexicalBlock(scope: !8731, file: !21, line: 8816, column: 9)
!8746 = !DILocalVariable(name: "value", scope: !8744, file: !21, line: 8817, type: !28)
!8747 = !DILocalVariable(name: "tuple", scope: !8748, file: !21, line: 8826, type: !28)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !21, line: 8825, column: 20)
!8749 = distinct !DILexicalBlock(scope: !8744, file: !21, line: 8825, column: 13)
!8750 = !DILocalVariable(name: "pos", scope: !8751, file: !21, line: 8847, type: !34)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !21, line: 8846, column: 46)
!8752 = distinct !DILexicalBlock(scope: !8745, file: !21, line: 8846, column: 16)
!8753 = !DILocalVariable(name: "pos", scope: !8754, file: !21, line: 8853, type: !34)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !21, line: 8852, column: 45)
!8755 = distinct !DILexicalBlock(scope: !8752, file: !21, line: 8852, column: 16)
!8756 = !DILocation(line: 8812, column: 19, scope: !8731)
!8757 = !DILocation(line: 8812, column: 58, scope: !8731)
!8758 = !DILocation(line: 8812, column: 101, scope: !8731)
!8759 = !DILocation(line: 8813, column: 20, scope: !8731)
!8760 = !DILocation(line: 8813, column: 37, scope: !8731)
!8761 = !DILocation(line: 8813, column: 56, scope: !8731)
!8762 = !DILocation(line: 8813, column: 67, scope: !8731)
!8763 = !DILocation(line: 8814, column: 5, scope: !8731)
!8764 = !DILocation(line: 8814, column: 15, scope: !8731)
!8765 = !DILocation(line: 8816, column: 9, scope: !8745)
!8766 = !DILocation(line: 8816, column: 9, scope: !8731)
!8767 = !DILocation(line: 8817, column: 9, scope: !8744)
!8768 = !DILocation(line: 8817, column: 19, scope: !8744)
!8769 = !DILocation(line: 8817, column: 25, scope: !8744)
!8770 = !DILocation(line: 8818, column: 13, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8744, file: !21, line: 8818, column: 13)
!8772 = !DILocation(line: 8818, column: 13, scope: !8744)
!8773 = !DILocation(line: 8819, column: 29, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8771, file: !21, line: 8818, column: 61)
!8775 = !DILocation(line: 8819, column: 13, scope: !8774)
!8776 = !DILocation(line: 8820, column: 13, scope: !8774)
!8777 = !DILocation(line: 8822, column: 13, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8744, file: !21, line: 8822, column: 13)
!8779 = !DILocation(line: 8822, column: 13, scope: !8744)
!8780 = !DILocation(line: 8823, column: 13, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8778, file: !21, line: 8822, column: 67)
!8782 = !DILocation(line: 8825, column: 13, scope: !8749)
!8783 = !DILocation(line: 8825, column: 13, scope: !8744)
!8784 = !DILocation(line: 8826, column: 13, scope: !8748)
!8785 = !DILocation(line: 8826, column: 23, scope: !8748)
!8786 = !DILocation(line: 8826, column: 31, scope: !8748)
!8787 = !DILocation(line: 8827, column: 17, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8748, file: !21, line: 8827, column: 17)
!8789 = !DILocation(line: 8827, column: 17, scope: !8748)
!8790 = !DILocation(line: 8828, column: 17, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !21, line: 8827, column: 35)
!8792 = !DILocation(line: 8830, column: 13, scope: !8748)
!8793 = !DILocation(line: 8831, column: 13, scope: !8748)
!8794 = !DILocation(line: 8832, column: 13, scope: !8748)
!8795 = !DILocation(line: 8833, column: 13, scope: !8748)
!8796 = !DILocation(line: 8834, column: 22, scope: !8748)
!8797 = !DILocation(line: 8834, column: 14, scope: !8748)
!8798 = !DILocation(line: 8834, column: 20, scope: !8748)
!8799 = !DILocation(line: 8835, column: 9, scope: !8749)
!8800 = !DILocation(line: 8835, column: 9, scope: !8748)
!8801 = !DILocation(line: 8836, column: 17, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !21, line: 8836, column: 17)
!8803 = distinct !DILexicalBlock(scope: !8749, file: !21, line: 8835, column: 16)
!8804 = !DILocation(line: 8836, column: 17, scope: !8803)
!8805 = !DILocation(line: 8837, column: 17, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8802, file: !21, line: 8836, column: 23)
!8807 = !DILocation(line: 8838, column: 25, scope: !8806)
!8808 = !DILocation(line: 8838, column: 18, scope: !8806)
!8809 = !DILocation(line: 8838, column: 23, scope: !8806)
!8810 = !DILocation(line: 8839, column: 13, scope: !8806)
!8811 = !DILocation(line: 8840, column: 17, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8803, file: !21, line: 8840, column: 17)
!8813 = !DILocation(line: 8840, column: 17, scope: !8803)
!8814 = !DILocation(line: 8841, column: 17, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !21, line: 8840, column: 25)
!8816 = !DILocation(line: 8842, column: 27, scope: !8815)
!8817 = !DILocation(line: 8842, column: 18, scope: !8815)
!8818 = !DILocation(line: 8842, column: 25, scope: !8815)
!8819 = !DILocation(line: 8843, column: 13, scope: !8815)
!8820 = !DILocation(line: 8845, column: 9, scope: !8744)
!8821 = !DILocation(line: 8846, column: 5, scope: !8745)
!8822 = !DILocation(line: 8846, column: 16, scope: !8752)
!8823 = !DILocation(line: 8846, column: 16, scope: !8745)
!8824 = !DILocation(line: 8847, column: 9, scope: !8751)
!8825 = !DILocation(line: 8847, column: 20, scope: !8751)
!8826 = !DILocation(line: 8847, column: 27, scope: !8751)
!8827 = !DILocation(line: 8847, column: 26, scope: !8751)
!8828 = !DILocation(line: 8848, column: 13, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8751, file: !21, line: 8848, column: 13)
!8830 = !DILocation(line: 8848, column: 13, scope: !8751)
!8831 = !DILocation(line: 8848, column: 58, scope: !8829)
!8832 = !DILocation(line: 8849, column: 17, scope: !8751)
!8833 = !DILocation(line: 8849, column: 21, scope: !8751)
!8834 = !DILocation(line: 8849, column: 10, scope: !8751)
!8835 = !DILocation(line: 8849, column: 15, scope: !8751)
!8836 = !DILocation(line: 8850, column: 21, scope: !8751)
!8837 = !DILocation(line: 8850, column: 19, scope: !8751)
!8838 = !DILocation(line: 8851, column: 9, scope: !8751)
!8839 = !DILocation(line: 8852, column: 5, scope: !8752)
!8840 = !DILocation(line: 8852, column: 5, scope: !8751)
!8841 = !DILocation(line: 8852, column: 16, scope: !8755)
!8842 = !DILocation(line: 8852, column: 16, scope: !8752)
!8843 = !DILocation(line: 8853, column: 9, scope: !8754)
!8844 = !DILocation(line: 8853, column: 20, scope: !8754)
!8845 = !DILocation(line: 8853, column: 27, scope: !8754)
!8846 = !DILocation(line: 8853, column: 26, scope: !8754)
!8847 = !DILocation(line: 8854, column: 13, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8754, file: !21, line: 8854, column: 13)
!8849 = !DILocation(line: 8854, column: 13, scope: !8754)
!8850 = !DILocation(line: 8854, column: 57, scope: !8848)
!8851 = !DILocation(line: 8855, column: 17, scope: !8754)
!8852 = !DILocation(line: 8855, column: 21, scope: !8754)
!8853 = !DILocation(line: 8855, column: 10, scope: !8754)
!8854 = !DILocation(line: 8855, column: 15, scope: !8754)
!8855 = !DILocation(line: 8856, column: 21, scope: !8754)
!8856 = !DILocation(line: 8856, column: 19, scope: !8754)
!8857 = !DILocation(line: 8857, column: 9, scope: !8754)
!8858 = !DILocation(line: 8858, column: 5, scope: !8755)
!8859 = !DILocation(line: 8858, column: 5, scope: !8754)
!8860 = !DILocation(line: 8861, column: 33, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8755, file: !21, line: 8860, column: 5)
!8862 = !DILocation(line: 8861, column: 21, scope: !8861)
!8863 = !DILocation(line: 8861, column: 19, scope: !8861)
!8864 = !DILocation(line: 8862, column: 13, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !21, line: 8862, column: 13)
!8866 = !DILocation(line: 8862, column: 13, scope: !8861)
!8867 = !DILocation(line: 8863, column: 20, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8865, file: !21, line: 8862, column: 35)
!8869 = !DILocation(line: 8863, column: 13, scope: !8868)
!8870 = !DILocation(line: 8866, column: 9, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8731, file: !21, line: 8866, column: 9)
!8872 = !DILocation(line: 8866, column: 9, scope: !8731)
!8873 = !DILocation(line: 8867, column: 18, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8871, file: !21, line: 8866, column: 16)
!8875 = !DILocation(line: 8867, column: 10, scope: !8874)
!8876 = !DILocation(line: 8867, column: 16, scope: !8874)
!8877 = !DILocation(line: 8868, column: 5, scope: !8874)
!8878 = !DILocation(line: 8868, column: 16, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8871, file: !21, line: 8868, column: 16)
!8880 = !DILocation(line: 8868, column: 21, scope: !8879)
!8881 = !DILocation(line: 8868, column: 24, scope: !8879)
!8882 = !DILocation(line: 8868, column: 16, scope: !8871)
!8883 = !DILocation(line: 8869, column: 13, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !21, line: 8869, column: 13)
!8885 = distinct !DILexicalBlock(scope: !8879, file: !21, line: 8868, column: 32)
!8886 = !DILocation(line: 8869, column: 13, scope: !8885)
!8887 = !DILocation(line: 8870, column: 13, scope: !8884)
!8888 = !DILocation(line: 8871, column: 5, scope: !8885)
!8889 = !DILocation(line: 8871, column: 16, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8879, file: !21, line: 8871, column: 16)
!8891 = !DILocation(line: 8871, column: 16, scope: !8879)
!8892 = !DILocation(line: 8872, column: 17, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8890, file: !21, line: 8871, column: 22)
!8894 = !DILocation(line: 8872, column: 10, scope: !8893)
!8895 = !DILocation(line: 8872, column: 15, scope: !8893)
!8896 = !DILocation(line: 8873, column: 5, scope: !8893)
!8897 = !DILocation(line: 8874, column: 19, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8890, file: !21, line: 8873, column: 12)
!8899 = !DILocation(line: 8874, column: 10, scope: !8898)
!8900 = !DILocation(line: 8874, column: 17, scope: !8898)
!8901 = !DILocation(line: 8876, column: 5, scope: !8731)
!8902 = !DILocation(line: 8877, column: 1, scope: !8731)
!8903 = distinct !DISubprogram(name: "PyList_GET_SIZE", scope: !355, file: !355, line: 33, type: !158, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8904)
!8904 = !{!8905, !8906}
!8905 = !DILocalVariable(name: "op", arg: 1, scope: !8903, file: !355, line: 33, type: !28)
!8906 = !DILocalVariable(name: "list", scope: !8903, file: !355, line: 34, type: !353)
!8907 = !DILocation(line: 33, column: 52, scope: !8903)
!8908 = !DILocation(line: 34, column: 5, scope: !8903)
!8909 = !DILocation(line: 34, column: 19, scope: !8903)
!8910 = !DILocation(line: 34, column: 26, scope: !8903)
!8911 = !DILocation(line: 35, column: 12, scope: !8903)
!8912 = !DILocation(line: 36, column: 1, scope: !8903)
!8913 = !DILocation(line: 35, column: 5, scope: !8903)
!8914 = distinct !DISubprogram(name: "__Pyx_ListComp_Append", scope: !21, file: !21, line: 2012, type: !177, scopeLine: 2012, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8915)
!8915 = !{!8916, !8917, !8918, !8919}
!8916 = !DILocalVariable(name: "list", arg: 1, scope: !8914, file: !21, line: 2012, type: !28)
!8917 = !DILocalVariable(name: "x", arg: 2, scope: !8914, file: !21, line: 2012, type: !28)
!8918 = !DILocalVariable(name: "L", scope: !8914, file: !21, line: 2013, type: !353)
!8919 = !DILocalVariable(name: "len", scope: !8914, file: !21, line: 2014, type: !34)
!8920 = !DILocation(line: 2012, column: 58, scope: !8914)
!8921 = !DILocation(line: 2012, column: 74, scope: !8914)
!8922 = !DILocation(line: 2013, column: 5, scope: !8914)
!8923 = !DILocation(line: 2013, column: 19, scope: !8914)
!8924 = !DILocation(line: 2013, column: 39, scope: !8914)
!8925 = !DILocation(line: 2014, column: 5, scope: !8914)
!8926 = !DILocation(line: 2014, column: 16, scope: !8914)
!8927 = !DILocation(line: 2014, column: 22, scope: !8914)
!8928 = !DILocation(line: 2015, column: 9, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8914, file: !21, line: 2015, column: 9)
!8930 = !DILocation(line: 2015, column: 9, scope: !8914)
!8931 = !DILocation(line: 2016, column: 9, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8929, file: !21, line: 2015, column: 37)
!8933 = !DILocation(line: 2017, column: 9, scope: !8932)
!8934 = !DILocation(line: 2018, column: 9, scope: !8932)
!8935 = !DILocation(line: 2019, column: 9, scope: !8932)
!8936 = !DILocation(line: 2021, column: 26, scope: !8914)
!8937 = !DILocation(line: 2021, column: 32, scope: !8914)
!8938 = !DILocation(line: 2021, column: 12, scope: !8914)
!8939 = !DILocation(line: 2021, column: 5, scope: !8914)
!8940 = !DILocation(line: 2022, column: 1, scope: !8914)
!8941 = !DISubprogram(name: "PyUnicode_Join", scope: !424, file: !424, line: 918, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8942 = distinct !DISubprogram(name: "__Pyx_PyUnicode_ConcatInPlaceImpl", scope: !21, file: !21, line: 8892, type: !8943, scopeLine: 8896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8945)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!28, !94, !28}
!8945 = !{!8946, !8947, !8948, !8949, !8950, !8951}
!8946 = !DILocalVariable(name: "p_left", arg: 1, scope: !8942, file: !21, line: 8892, type: !94)
!8947 = !DILocalVariable(name: "right", arg: 2, scope: !8942, file: !21, line: 8892, type: !28)
!8948 = !DILocalVariable(name: "left", scope: !8942, file: !21, line: 8897, type: !28)
!8949 = !DILocalVariable(name: "left_len", scope: !8942, file: !21, line: 8898, type: !34)
!8950 = !DILocalVariable(name: "right_len", scope: !8942, file: !21, line: 8898, type: !34)
!8951 = !DILocalVariable(name: "new_len", scope: !8942, file: !21, line: 8898, type: !34)
!8952 = !DILocation(line: 8892, column: 77, scope: !8942)
!8953 = !DILocation(line: 8892, column: 95, scope: !8942)
!8954 = !DILocation(line: 8897, column: 5, scope: !8942)
!8955 = !DILocation(line: 8897, column: 15, scope: !8942)
!8956 = !DILocation(line: 8897, column: 23, scope: !8942)
!8957 = !DILocation(line: 8897, column: 22, scope: !8942)
!8958 = !DILocation(line: 8898, column: 5, scope: !8942)
!8959 = !DILocation(line: 8898, column: 16, scope: !8942)
!8960 = !DILocation(line: 8898, column: 26, scope: !8942)
!8961 = !DILocation(line: 8898, column: 37, scope: !8942)
!8962 = !DILocation(line: 8899, column: 9, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8942, file: !21, line: 8899, column: 9)
!8964 = !DILocation(line: 8899, column: 9, scope: !8942)
!8965 = !DILocation(line: 8900, column: 9, scope: !8963)
!8966 = !DILocation(line: 8901, column: 9, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8942, file: !21, line: 8901, column: 9)
!8968 = !DILocation(line: 8901, column: 9, scope: !8942)
!8969 = !DILocation(line: 8902, column: 9, scope: !8967)
!8970 = !DILocation(line: 8903, column: 16, scope: !8942)
!8971 = !DILocation(line: 8903, column: 14, scope: !8942)
!8972 = !DILocation(line: 8904, column: 9, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8942, file: !21, line: 8904, column: 9)
!8974 = !DILocation(line: 8904, column: 18, scope: !8973)
!8975 = !DILocation(line: 8904, column: 9, scope: !8942)
!8976 = !DILocation(line: 8905, column: 9, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8973, file: !21, line: 8904, column: 24)
!8978 = !DILocation(line: 8906, column: 16, scope: !8977)
!8979 = !DILocation(line: 8906, column: 9, scope: !8977)
!8980 = !DILocation(line: 8908, column: 17, scope: !8942)
!8981 = !DILocation(line: 8908, column: 15, scope: !8942)
!8982 = !DILocation(line: 8909, column: 9, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8942, file: !21, line: 8909, column: 9)
!8984 = !DILocation(line: 8909, column: 19, scope: !8983)
!8985 = !DILocation(line: 8909, column: 9, scope: !8942)
!8986 = !DILocation(line: 8910, column: 9, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !21, line: 8909, column: 25)
!8988 = !DILocation(line: 8911, column: 16, scope: !8987)
!8989 = !DILocation(line: 8911, column: 9, scope: !8987)
!8990 = !DILocation(line: 8913, column: 9, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8942, file: !21, line: 8913, column: 9)
!8992 = !DILocation(line: 8913, column: 9, scope: !8942)
!8993 = !DILocation(line: 8914, column: 25, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8991, file: !21, line: 8913, column: 58)
!8995 = !DILocation(line: 8914, column: 9, scope: !8994)
!8996 = !DILocation(line: 8916, column: 9, scope: !8994)
!8997 = !DILocation(line: 8918, column: 15, scope: !8942)
!8998 = !DILocation(line: 8918, column: 26, scope: !8942)
!8999 = !DILocation(line: 8918, column: 24, scope: !8942)
!9000 = !DILocation(line: 8918, column: 13, scope: !8942)
!9001 = !DILocation(line: 8919, column: 34, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8942, file: !21, line: 8919, column: 9)
!9003 = !DILocation(line: 8919, column: 9, scope: !9002)
!9004 = !DILocation(line: 8920, column: 13, scope: !9002)
!9005 = !DILocation(line: 8920, column: 16, scope: !9002)
!9006 = !DILocation(line: 8921, column: 13, scope: !9002)
!9007 = !DILocation(line: 8921, column: 16, scope: !9002)
!9008 = !DILocation(line: 8921, column: 41, scope: !9002)
!9009 = !DILocation(line: 8921, column: 38, scope: !9002)
!9010 = !DILocation(line: 8922, column: 13, scope: !9002)
!9011 = !DILocation(line: 8922, column: 18, scope: !9002)
!9012 = !DILocation(line: 8922, column: 43, scope: !9002)
!9013 = !DILocation(line: 8922, column: 47, scope: !9002)
!9014 = !DILocation(line: 8919, column: 9, scope: !8942)
!9015 = !DILocation(line: 8924, column: 13, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !21, line: 8924, column: 13)
!9017 = distinct !DILexicalBlock(scope: !9002, file: !21, line: 8922, column: 75)
!9018 = !DILocation(line: 8924, column: 13, scope: !9017)
!9019 = !DILocation(line: 8926, column: 13, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9016, file: !21, line: 8924, column: 63)
!9021 = !DILocation(line: 8928, column: 9, scope: !9017)
!9022 = !DILocation(line: 8932, column: 40, scope: !9017)
!9023 = !DILocation(line: 8932, column: 39, scope: !9017)
!9024 = !DILocation(line: 8932, column: 48, scope: !9017)
!9025 = !DILocation(line: 8932, column: 58, scope: !9017)
!9026 = !DILocation(line: 8932, column: 68, scope: !9017)
!9027 = !DILocation(line: 8932, column: 9, scope: !9017)
!9028 = !DILocation(line: 8934, column: 17, scope: !9017)
!9029 = !DILocation(line: 8934, column: 16, scope: !9017)
!9030 = !DILocation(line: 8934, column: 9, scope: !9017)
!9031 = !DILocation(line: 8936, column: 16, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9002, file: !21, line: 8935, column: 12)
!9033 = !DILocation(line: 8936, column: 9, scope: !9032)
!9034 = !DILocation(line: 8938, column: 3, scope: !8942)
!9035 = !DISubprogram(name: "PyDict_Size", scope: !2187, file: !2187, line: 32, type: !158, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9036 = distinct !DISubprogram(name: "__Pyx_PyObject_CallMethod0", scope: !21, file: !21, line: 8680, type: !105, scopeLine: 8680, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9037)
!9037 = !{!9038, !9039, !9040, !9041, !9042, !9043}
!9038 = !DILocalVariable(name: "obj", arg: 1, scope: !9036, file: !21, line: 8680, type: !28)
!9039 = !DILocalVariable(name: "method_name", arg: 2, scope: !9036, file: !21, line: 8680, type: !28)
!9040 = !DILocalVariable(name: "method", scope: !9036, file: !21, line: 8681, type: !28)
!9041 = !DILocalVariable(name: "result", scope: !9036, file: !21, line: 8681, type: !28)
!9042 = !DILocalVariable(name: "is_method", scope: !9036, file: !21, line: 8682, type: !7)
!9043 = !DILabel(scope: !9036, name: "bad", file: !21, line: 8691)
!9044 = !DILocation(line: 8680, column: 55, scope: !9036)
!9045 = !DILocation(line: 8680, column: 70, scope: !9036)
!9046 = !DILocation(line: 8681, column: 5, scope: !9036)
!9047 = !DILocation(line: 8681, column: 15, scope: !9036)
!9048 = !DILocation(line: 8681, column: 31, scope: !9036)
!9049 = !DILocation(line: 8682, column: 5, scope: !9036)
!9050 = !DILocation(line: 8682, column: 9, scope: !9036)
!9051 = !DILocation(line: 8682, column: 46, scope: !9036)
!9052 = !DILocation(line: 8682, column: 51, scope: !9036)
!9053 = !DILocation(line: 8682, column: 21, scope: !9036)
!9054 = !DILocation(line: 8683, column: 9, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9036, file: !21, line: 8683, column: 9)
!9056 = !DILocation(line: 8683, column: 9, scope: !9036)
!9057 = !DILocation(line: 8684, column: 44, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9055, file: !21, line: 8683, column: 28)
!9059 = !DILocation(line: 8684, column: 52, scope: !9058)
!9060 = !DILocation(line: 8684, column: 18, scope: !9058)
!9061 = !DILocation(line: 8684, column: 16, scope: !9058)
!9062 = !DILocation(line: 8685, column: 9, scope: !9058)
!9063 = !DILocation(line: 8686, column: 16, scope: !9058)
!9064 = !DILocation(line: 8686, column: 9, scope: !9058)
!9065 = !DILocation(line: 8688, column: 9, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9036, file: !21, line: 8688, column: 9)
!9067 = !DILocation(line: 8688, column: 9, scope: !9036)
!9068 = !DILocation(line: 8688, column: 28, scope: !9066)
!9069 = !DILocation(line: 8689, column: 39, scope: !9036)
!9070 = !DILocation(line: 8689, column: 14, scope: !9036)
!9071 = !DILocation(line: 8689, column: 12, scope: !9036)
!9072 = !DILocation(line: 8690, column: 5, scope: !9036)
!9073 = !DILocation(line: 8691, column: 1, scope: !9036)
!9074 = !DILocation(line: 8692, column: 12, scope: !9036)
!9075 = !DILocation(line: 8692, column: 5, scope: !9036)
!9076 = !DILocation(line: 8693, column: 1, scope: !9036)
!9077 = distinct !DISubprogram(name: "__Pyx_PyObject_CallNoArg", scope: !21, file: !21, line: 8674, type: !84, scopeLine: 8674, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9078)
!9078 = !{!9079, !9080}
!9079 = !DILocalVariable(name: "func", arg: 1, scope: !9077, file: !21, line: 8674, type: !28)
!9080 = !DILocalVariable(name: "arg", scope: !9077, file: !21, line: 8675, type: !3362)
!9081 = !DILocation(line: 8674, column: 67, scope: !9077)
!9082 = !DILocation(line: 8675, column: 5, scope: !9077)
!9083 = !DILocation(line: 8675, column: 15, scope: !9077)
!9084 = !DILocation(line: 8676, column: 12, scope: !9077)
!9085 = !DILocation(line: 8677, column: 1, scope: !9077)
!9086 = !DILocation(line: 8676, column: 5, scope: !9077)
!9087 = !DISubprogram(name: "PyDict_Next", scope: !2187, file: !2187, line: 27, type: !9088, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{!7, !28, !228, !94, !94}
!9090 = !DISubprogram(name: "PyIter_Next", scope: !2616, file: !2616, line: 396, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9091 = distinct !DISubprogram(name: "__Pyx_unpack_tuple2_exact", scope: !21, file: !21, line: 8712, type: !9092, scopeLine: 8713, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9094)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!7, !28, !94, !94, !7}
!9094 = !{!9095, !9096, !9097, !9098, !9099, !9100}
!9095 = !DILocalVariable(name: "tuple", arg: 1, scope: !9091, file: !21, line: 8713, type: !28)
!9096 = !DILocalVariable(name: "pvalue1", arg: 2, scope: !9091, file: !21, line: 8713, type: !94)
!9097 = !DILocalVariable(name: "pvalue2", arg: 3, scope: !9091, file: !21, line: 8713, type: !94)
!9098 = !DILocalVariable(name: "decref_tuple", arg: 4, scope: !9091, file: !21, line: 8713, type: !7)
!9099 = !DILocalVariable(name: "value1", scope: !9091, file: !21, line: 8714, type: !28)
!9100 = !DILocalVariable(name: "value2", scope: !9091, file: !21, line: 8714, type: !28)
!9101 = !DILocation(line: 8713, column: 19, scope: !9091)
!9102 = !DILocation(line: 8713, column: 37, scope: !9091)
!9103 = !DILocation(line: 8713, column: 57, scope: !9091)
!9104 = !DILocation(line: 8713, column: 70, scope: !9091)
!9105 = !DILocation(line: 8714, column: 5, scope: !9091)
!9106 = !DILocation(line: 8714, column: 15, scope: !9091)
!9107 = !DILocation(line: 8714, column: 31, scope: !9091)
!9108 = !DILocation(line: 8719, column: 14, scope: !9091)
!9109 = !DILocation(line: 8719, column: 12, scope: !9091)
!9110 = !DILocation(line: 8719, column: 43, scope: !9091)
!9111 = !DILocation(line: 8720, column: 14, scope: !9091)
!9112 = !DILocation(line: 8720, column: 12, scope: !9091)
!9113 = !DILocation(line: 8720, column: 43, scope: !9091)
!9114 = !DILocation(line: 8722, column: 9, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9091, file: !21, line: 8722, column: 9)
!9116 = !DILocation(line: 8722, column: 9, scope: !9091)
!9117 = !DILocation(line: 8723, column: 9, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9115, file: !21, line: 8722, column: 23)
!9119 = !DILocation(line: 8724, column: 5, scope: !9118)
!9120 = !DILocation(line: 8725, column: 16, scope: !9091)
!9121 = !DILocation(line: 8725, column: 6, scope: !9091)
!9122 = !DILocation(line: 8725, column: 14, scope: !9091)
!9123 = !DILocation(line: 8726, column: 16, scope: !9091)
!9124 = !DILocation(line: 8726, column: 6, scope: !9091)
!9125 = !DILocation(line: 8726, column: 14, scope: !9091)
!9126 = !DILocation(line: 8735, column: 1, scope: !9091)
!9127 = !DILocation(line: 8727, column: 5, scope: !9091)
!9128 = distinct !DISubprogram(name: "__Pyx_UnpackTupleError", scope: !21, file: !21, line: 8701, type: !9129, scopeLine: 8701, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9131)
!9129 = !DISubroutineType(types: !9130)
!9130 = !{null, !28, !34}
!9131 = !{!9132, !9133}
!9132 = !DILocalVariable(name: "t", arg: 1, scope: !9128, file: !21, line: 8701, type: !28)
!9133 = !DILocalVariable(name: "index", arg: 2, scope: !9128, file: !21, line: 8701, type: !34)
!9134 = !DILocation(line: 8701, column: 46, scope: !9128)
!9135 = !DILocation(line: 8701, column: 60, scope: !9128)
!9136 = !DILocation(line: 8702, column: 9, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9128, file: !21, line: 8702, column: 9)
!9138 = !DILocation(line: 8702, column: 11, scope: !9137)
!9139 = !DILocation(line: 8702, column: 9, scope: !9128)
!9140 = !DILocation(line: 8703, column: 7, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9137, file: !21, line: 8702, column: 23)
!9142 = !DILocation(line: 8704, column: 5, scope: !9141)
!9143 = !DILocation(line: 8704, column: 16, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9137, file: !21, line: 8704, column: 16)
!9145 = !DILocation(line: 8704, column: 38, scope: !9144)
!9146 = !DILocation(line: 8704, column: 36, scope: !9144)
!9147 = !DILocation(line: 8704, column: 16, scope: !9137)
!9148 = !DILocation(line: 8705, column: 38, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9144, file: !21, line: 8704, column: 45)
!9150 = !DILocation(line: 8705, column: 7, scope: !9149)
!9151 = !DILocation(line: 8706, column: 5, scope: !9149)
!9152 = !DILocation(line: 8707, column: 37, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9144, file: !21, line: 8706, column: 12)
!9154 = !DILocation(line: 8707, column: 7, scope: !9153)
!9155 = !DILocation(line: 8709, column: 1, scope: !9128)
!9156 = distinct !DISubprogram(name: "__Pyx_unpack_tuple2_generic", scope: !21, file: !21, line: 8736, type: !9157, scopeLine: 8737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9159)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{!7, !28, !94, !94, !7, !7}
!9159 = !{!9160, !9161, !9162, !9163, !9164, !9165, !9166, !9167, !9168, !9169, !9170, !9171}
!9160 = !DILocalVariable(name: "tuple", arg: 1, scope: !9156, file: !21, line: 8736, type: !28)
!9161 = !DILocalVariable(name: "pvalue1", arg: 2, scope: !9156, file: !21, line: 8736, type: !94)
!9162 = !DILocalVariable(name: "pvalue2", arg: 3, scope: !9156, file: !21, line: 8736, type: !94)
!9163 = !DILocalVariable(name: "has_known_size", arg: 4, scope: !9156, file: !21, line: 8737, type: !7)
!9164 = !DILocalVariable(name: "decref_tuple", arg: 5, scope: !9156, file: !21, line: 8737, type: !7)
!9165 = !DILocalVariable(name: "index", scope: !9156, file: !21, line: 8738, type: !34)
!9166 = !DILocalVariable(name: "value1", scope: !9156, file: !21, line: 8739, type: !28)
!9167 = !DILocalVariable(name: "value2", scope: !9156, file: !21, line: 8739, type: !28)
!9168 = !DILocalVariable(name: "iter", scope: !9156, file: !21, line: 8739, type: !28)
!9169 = !DILocalVariable(name: "iternext", scope: !9156, file: !21, line: 8740, type: !259)
!9170 = !DILabel(scope: !9156, name: "unpacking_failed", file: !21, line: 8752)
!9171 = !DILabel(scope: !9156, name: "bad", file: !21, line: 8755)
!9172 = !DILocation(line: 8736, column: 50, scope: !9156)
!9173 = !DILocation(line: 8736, column: 68, scope: !9156)
!9174 = !DILocation(line: 8736, column: 88, scope: !9156)
!9175 = !DILocation(line: 8737, column: 44, scope: !9156)
!9176 = !DILocation(line: 8737, column: 64, scope: !9156)
!9177 = !DILocation(line: 8738, column: 5, scope: !9156)
!9178 = !DILocation(line: 8738, column: 16, scope: !9156)
!9179 = !DILocation(line: 8739, column: 5, scope: !9156)
!9180 = !DILocation(line: 8739, column: 15, scope: !9156)
!9181 = !DILocation(line: 8739, column: 31, scope: !9156)
!9182 = !DILocation(line: 8739, column: 47, scope: !9156)
!9183 = !DILocation(line: 8740, column: 5, scope: !9156)
!9184 = !DILocation(line: 8740, column: 18, scope: !9156)
!9185 = !DILocation(line: 8741, column: 29, scope: !9156)
!9186 = !DILocation(line: 8741, column: 12, scope: !9156)
!9187 = !DILocation(line: 8741, column: 10, scope: !9156)
!9188 = !DILocation(line: 8742, column: 9, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9156, file: !21, line: 8742, column: 9)
!9190 = !DILocation(line: 8742, column: 9, scope: !9156)
!9191 = !DILocation(line: 8742, column: 26, scope: !9189)
!9192 = !DILocation(line: 8743, column: 9, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9156, file: !21, line: 8743, column: 9)
!9194 = !DILocation(line: 8743, column: 9, scope: !9156)
!9195 = !DILocation(line: 8743, column: 25, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9193, file: !21, line: 8743, column: 23)
!9197 = !DILocation(line: 8743, column: 49, scope: !9196)
!9198 = !DILocation(line: 8743, column: 57, scope: !9196)
!9199 = !DILocation(line: 8744, column: 16, scope: !9156)
!9200 = !DILocation(line: 8744, column: 14, scope: !9156)
!9201 = !DILocation(line: 8745, column: 14, scope: !9156)
!9202 = !DILocation(line: 8745, column: 23, scope: !9156)
!9203 = !DILocation(line: 8745, column: 12, scope: !9156)
!9204 = !DILocation(line: 8745, column: 34, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9156, file: !21, line: 8745, column: 34)
!9206 = !DILocation(line: 8745, column: 34, scope: !9156)
!9207 = !DILocation(line: 8745, column: 61, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9205, file: !21, line: 8745, column: 53)
!9209 = !DILocation(line: 8745, column: 66, scope: !9208)
!9210 = !DILocation(line: 8746, column: 14, scope: !9156)
!9211 = !DILocation(line: 8746, column: 23, scope: !9156)
!9212 = !DILocation(line: 8746, column: 12, scope: !9156)
!9213 = !DILocation(line: 8746, column: 34, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9156, file: !21, line: 8746, column: 34)
!9215 = !DILocation(line: 8746, column: 34, scope: !9156)
!9216 = !DILocation(line: 8746, column: 61, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9214, file: !21, line: 8746, column: 53)
!9218 = !DILocation(line: 8746, column: 66, scope: !9217)
!9219 = !DILocation(line: 8747, column: 10, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9156, file: !21, line: 8747, column: 9)
!9221 = !DILocation(line: 8747, column: 25, scope: !9220)
!9222 = !DILocation(line: 8747, column: 28, scope: !9220)
!9223 = !DILocation(line: 8747, column: 9, scope: !9156)
!9224 = !DILocation(line: 8747, column: 87, scope: !9220)
!9225 = !DILocation(line: 8748, column: 5, scope: !9156)
!9226 = !DILocation(line: 8749, column: 16, scope: !9156)
!9227 = !DILocation(line: 8749, column: 6, scope: !9156)
!9228 = !DILocation(line: 8749, column: 14, scope: !9156)
!9229 = !DILocation(line: 8750, column: 16, scope: !9156)
!9230 = !DILocation(line: 8750, column: 6, scope: !9156)
!9231 = !DILocation(line: 8750, column: 14, scope: !9156)
!9232 = !DILocation(line: 8751, column: 5, scope: !9156)
!9233 = !DILocation(line: 8752, column: 1, scope: !9156)
!9234 = !DILocation(line: 8753, column: 10, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9156, file: !21, line: 8753, column: 9)
!9236 = !DILocation(line: 8753, column: 25, scope: !9235)
!9237 = !DILocation(line: 8753, column: 28, scope: !9235)
!9238 = !DILocation(line: 8753, column: 47, scope: !9235)
!9239 = !DILocation(line: 8753, column: 9, scope: !9156)
!9240 = !DILocation(line: 8754, column: 40, scope: !9235)
!9241 = !DILocation(line: 8754, column: 9, scope: !9235)
!9242 = !DILocation(line: 8753, column: 50, scope: !9235)
!9243 = !DILocation(line: 8755, column: 1, scope: !9156)
!9244 = !DILocation(line: 8756, column: 5, scope: !9156)
!9245 = !DILocation(line: 8757, column: 5, scope: !9156)
!9246 = !DILocation(line: 8758, column: 5, scope: !9156)
!9247 = !DILocation(line: 8759, column: 9, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9156, file: !21, line: 8759, column: 9)
!9249 = !DILocation(line: 8759, column: 9, scope: !9156)
!9250 = !DILocation(line: 8759, column: 25, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9248, file: !21, line: 8759, column: 23)
!9252 = !DILocation(line: 8759, column: 44, scope: !9251)
!9253 = !DILocation(line: 8760, column: 5, scope: !9156)
!9254 = !DILocation(line: 8761, column: 1, scope: !9156)
!9255 = distinct !DISubprogram(name: "__Pyx_RaiseNoneNotIterableError", scope: !21, file: !21, line: 8696, type: !2192, scopeLine: 8696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!9256 = !DILocation(line: 8697, column: 21, scope: !9255)
!9257 = !DILocation(line: 8697, column: 5, scope: !9255)
!9258 = !DILocation(line: 8698, column: 1, scope: !9255)
!9259 = distinct !DISubprogram(name: "__Pyx_unicode_modifiable", scope: !21, file: !21, line: 8882, type: !122, scopeLine: 8883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9260)
!9260 = !{!9261}
!9261 = !DILocalVariable(name: "unicode", arg: 1, scope: !9259, file: !21, line: 8882, type: !28)
!9262 = !DILocation(line: 8882, column: 36, scope: !9259)
!9263 = !DILocation(line: 8884, column: 9, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9259, file: !21, line: 8884, column: 9)
!9265 = !DILocation(line: 8884, column: 28, scope: !9264)
!9266 = !DILocation(line: 8884, column: 9, scope: !9259)
!9267 = !DILocation(line: 8885, column: 9, scope: !9264)
!9268 = !DILocation(line: 8886, column: 10, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9259, file: !21, line: 8886, column: 9)
!9270 = !DILocation(line: 8886, column: 9, scope: !9259)
!9271 = !DILocation(line: 8887, column: 9, scope: !9269)
!9272 = !DILocation(line: 8888, column: 9, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9259, file: !21, line: 8888, column: 9)
!9274 = !DILocation(line: 8888, column: 9, scope: !9259)
!9275 = !DILocation(line: 8889, column: 9, scope: !9273)
!9276 = !DILocation(line: 8890, column: 5, scope: !9259)
!9277 = !DILocation(line: 8891, column: 1, scope: !9259)
!9278 = !DISubprogram(name: "PyUnicode_Resize", scope: !424, file: !424, line: 217, type: !9279, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9279 = !DISubroutineType(types: !9280)
!9280 = !{!7, !94, !34}
!9281 = distinct !DISubprogram(name: "Py_REFCNT", scope: !6, file: !6, line: 123, type: !158, scopeLine: 123, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9282)
!9282 = !{!9283}
!9283 = !DILocalVariable(name: "ob", arg: 1, scope: !9281, file: !6, line: 123, type: !28)
!9284 = !DILocation(line: 123, column: 46, scope: !9281)
!9285 = !DILocation(line: 124, column: 12, scope: !9281)
!9286 = !DILocation(line: 124, column: 16, scope: !9281)
!9287 = !DILocation(line: 124, column: 5, scope: !9281)
!9288 = distinct !DISubprogram(name: "PyUnicode_CHECK_INTERNED", scope: !13, file: !13, line: 259, type: !7585, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9289)
!9289 = !{!9290}
!9290 = !DILocalVariable(name: "op", arg: 1, scope: !9288, file: !13, line: 259, type: !28)
!9291 = !DILocation(line: 259, column: 63, scope: !9288)
!9292 = !DILocation(line: 260, column: 12, scope: !9288)
!9293 = !DILocation(line: 260, column: 37, scope: !9288)
!9294 = !DILocation(line: 260, column: 43, scope: !9288)
!9295 = !DILocation(line: 260, column: 5, scope: !9288)
!9296 = distinct !DISubprogram(name: "__pyx_tp_dealloc_6Cython_7Runtime_8refnanny_Context", scope: !21, file: !21, line: 5910, type: !62, scopeLine: 5910, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9297)
!9297 = !{!9298, !9299, !9300, !9302, !9304, !9306}
!9298 = !DILocalVariable(name: "o", arg: 1, scope: !9296, file: !21, line: 5910, type: !28)
!9299 = !DILocalVariable(name: "p", scope: !9296, file: !21, line: 5911, type: !364)
!9300 = !DILocalVariable(name: "_py_tmp", scope: !9301, file: !21, line: 5913, type: !28)
!9301 = distinct !DILexicalBlock(scope: !9296, file: !21, line: 5913, column: 3)
!9302 = !DILocalVariable(name: "_py_tmp", scope: !9303, file: !21, line: 5914, type: !28)
!9303 = distinct !DILexicalBlock(scope: !9296, file: !21, line: 5914, column: 3)
!9304 = !DILocalVariable(name: "_py_tmp", scope: !9305, file: !21, line: 5915, type: !28)
!9305 = distinct !DILexicalBlock(scope: !9296, file: !21, line: 5915, column: 3)
!9306 = !DILocalVariable(name: "_py_tmp", scope: !9307, file: !21, line: 5916, type: !28)
!9307 = distinct !DILexicalBlock(scope: !9296, file: !21, line: 5916, column: 3)
!9308 = !DILocation(line: 5910, column: 75, scope: !9296)
!9309 = !DILocation(line: 5911, column: 3, scope: !9296)
!9310 = !DILocation(line: 5911, column: 56, scope: !9296)
!9311 = !DILocation(line: 5911, column: 115, scope: !9296)
!9312 = !DILocation(line: 5912, column: 23, scope: !9296)
!9313 = !DILocation(line: 5912, column: 3, scope: !9296)
!9314 = !DILocation(line: 5913, column: 3, scope: !9296)
!9315 = !DILocation(line: 5913, column: 3, scope: !9301)
!9316 = !DILocation(line: 5913, column: 3, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9301, file: !21, line: 5913, column: 3)
!9318 = !DILocation(line: 5913, column: 3, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9317, file: !21, line: 5913, column: 3)
!9320 = !DILocation(line: 5914, column: 3, scope: !9296)
!9321 = !DILocation(line: 5914, column: 3, scope: !9303)
!9322 = !DILocation(line: 5914, column: 3, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9303, file: !21, line: 5914, column: 3)
!9324 = !DILocation(line: 5914, column: 3, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9323, file: !21, line: 5914, column: 3)
!9326 = !DILocation(line: 5915, column: 3, scope: !9296)
!9327 = !DILocation(line: 5915, column: 3, scope: !9305)
!9328 = !DILocation(line: 5915, column: 3, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9305, file: !21, line: 5915, column: 3)
!9330 = !DILocation(line: 5915, column: 3, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9329, file: !21, line: 5915, column: 3)
!9332 = !DILocation(line: 5916, column: 3, scope: !9296)
!9333 = !DILocation(line: 5916, column: 3, scope: !9307)
!9334 = !DILocation(line: 5916, column: 3, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9307, file: !21, line: 5916, column: 3)
!9336 = !DILocation(line: 5916, column: 3, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9335, file: !21, line: 5916, column: 3)
!9338 = !DILocation(line: 5918, column: 5, scope: !9296)
!9339 = !DILocation(line: 5918, column: 17, scope: !9296)
!9340 = !{!1897, !1462, i64 320}
!9341 = !DILocation(line: 5918, column: 26, scope: !9296)
!9342 = !DILocation(line: 5918, column: 3, scope: !9296)
!9343 = !DILocation(line: 5925, column: 1, scope: !9296)
!9344 = distinct !DISubprogram(name: "__pyx_tp_traverse_6Cython_7Runtime_8refnanny_Context", scope: !21, file: !21, line: 5927, type: !243, scopeLine: 5927, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9345)
!9345 = !{!9346, !9347, !9348, !9349, !9350}
!9346 = !DILocalVariable(name: "o", arg: 1, scope: !9344, file: !21, line: 5927, type: !28)
!9347 = !DILocalVariable(name: "v", arg: 2, scope: !9344, file: !21, line: 5927, type: !245)
!9348 = !DILocalVariable(name: "a", arg: 3, scope: !9344, file: !21, line: 5927, type: !27)
!9349 = !DILocalVariable(name: "e", scope: !9344, file: !21, line: 5928, type: !7)
!9350 = !DILocalVariable(name: "p", scope: !9344, file: !21, line: 5929, type: !364)
!9351 = !DILocation(line: 5927, column: 75, scope: !9344)
!9352 = !DILocation(line: 5927, column: 88, scope: !9344)
!9353 = !DILocation(line: 5927, column: 97, scope: !9344)
!9354 = !DILocation(line: 5928, column: 3, scope: !9344)
!9355 = !DILocation(line: 5928, column: 7, scope: !9344)
!9356 = !DILocation(line: 5929, column: 3, scope: !9344)
!9357 = !DILocation(line: 5929, column: 56, scope: !9344)
!9358 = !DILocation(line: 5929, column: 115, scope: !9344)
!9359 = !DILocation(line: 5930, column: 7, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9344, file: !21, line: 5930, column: 7)
!9361 = !DILocation(line: 5930, column: 10, scope: !9360)
!9362 = !DILocation(line: 5930, column: 7, scope: !9344)
!9363 = !DILocation(line: 5931, column: 11, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9360, file: !21, line: 5930, column: 16)
!9365 = !DILocation(line: 5931, column: 14, scope: !9364)
!9366 = !DILocation(line: 5931, column: 17, scope: !9364)
!9367 = !DILocation(line: 5931, column: 23, scope: !9364)
!9368 = !DILocation(line: 5931, column: 9, scope: !9364)
!9369 = !DILocation(line: 5931, column: 7, scope: !9364)
!9370 = !DILocation(line: 5931, column: 31, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9364, file: !21, line: 5931, column: 31)
!9372 = !DILocation(line: 5931, column: 31, scope: !9364)
!9373 = !DILocation(line: 5931, column: 41, scope: !9371)
!9374 = !DILocation(line: 5931, column: 34, scope: !9371)
!9375 = !DILocation(line: 5932, column: 3, scope: !9364)
!9376 = !DILocation(line: 5933, column: 7, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9344, file: !21, line: 5933, column: 7)
!9378 = !DILocation(line: 5933, column: 10, scope: !9377)
!9379 = !DILocation(line: 5933, column: 7, scope: !9344)
!9380 = !DILocation(line: 5934, column: 11, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9377, file: !21, line: 5933, column: 20)
!9382 = !DILocation(line: 5934, column: 14, scope: !9381)
!9383 = !DILocation(line: 5934, column: 17, scope: !9381)
!9384 = !DILocation(line: 5934, column: 27, scope: !9381)
!9385 = !DILocation(line: 5934, column: 9, scope: !9381)
!9386 = !DILocation(line: 5934, column: 7, scope: !9381)
!9387 = !DILocation(line: 5934, column: 35, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9381, file: !21, line: 5934, column: 35)
!9389 = !DILocation(line: 5934, column: 35, scope: !9381)
!9390 = !DILocation(line: 5934, column: 45, scope: !9388)
!9391 = !DILocation(line: 5934, column: 38, scope: !9388)
!9392 = !DILocation(line: 5935, column: 3, scope: !9381)
!9393 = !DILocation(line: 5936, column: 7, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9344, file: !21, line: 5936, column: 7)
!9395 = !DILocation(line: 5936, column: 10, scope: !9394)
!9396 = !DILocation(line: 5936, column: 7, scope: !9344)
!9397 = !DILocation(line: 5937, column: 11, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9394, file: !21, line: 5936, column: 16)
!9399 = !DILocation(line: 5937, column: 14, scope: !9398)
!9400 = !DILocation(line: 5937, column: 17, scope: !9398)
!9401 = !DILocation(line: 5937, column: 23, scope: !9398)
!9402 = !DILocation(line: 5937, column: 9, scope: !9398)
!9403 = !DILocation(line: 5937, column: 7, scope: !9398)
!9404 = !DILocation(line: 5937, column: 31, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9398, file: !21, line: 5937, column: 31)
!9406 = !DILocation(line: 5937, column: 31, scope: !9398)
!9407 = !DILocation(line: 5937, column: 41, scope: !9405)
!9408 = !DILocation(line: 5937, column: 34, scope: !9405)
!9409 = !DILocation(line: 5938, column: 3, scope: !9398)
!9410 = !DILocation(line: 5939, column: 7, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9344, file: !21, line: 5939, column: 7)
!9412 = !DILocation(line: 5939, column: 10, scope: !9411)
!9413 = !DILocation(line: 5939, column: 7, scope: !9344)
!9414 = !DILocation(line: 5940, column: 11, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9411, file: !21, line: 5939, column: 18)
!9416 = !DILocation(line: 5940, column: 14, scope: !9415)
!9417 = !DILocation(line: 5940, column: 17, scope: !9415)
!9418 = !DILocation(line: 5940, column: 25, scope: !9415)
!9419 = !DILocation(line: 5940, column: 9, scope: !9415)
!9420 = !DILocation(line: 5940, column: 7, scope: !9415)
!9421 = !DILocation(line: 5940, column: 33, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9415, file: !21, line: 5940, column: 33)
!9423 = !DILocation(line: 5940, column: 33, scope: !9415)
!9424 = !DILocation(line: 5940, column: 43, scope: !9422)
!9425 = !DILocation(line: 5940, column: 36, scope: !9422)
!9426 = !DILocation(line: 5941, column: 3, scope: !9415)
!9427 = !DILocation(line: 5942, column: 3, scope: !9344)
!9428 = !DILocation(line: 5943, column: 1, scope: !9344)
!9429 = distinct !DISubprogram(name: "__pyx_tp_clear_6Cython_7Runtime_8refnanny_Context", scope: !21, file: !21, line: 5945, type: !122, scopeLine: 5945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9430)
!9430 = !{!9431, !9432, !9433}
!9431 = !DILocalVariable(name: "o", arg: 1, scope: !9429, file: !21, line: 5945, type: !28)
!9432 = !DILocalVariable(name: "tmp", scope: !9429, file: !21, line: 5946, type: !28)
!9433 = !DILocalVariable(name: "p", scope: !9429, file: !21, line: 5947, type: !364)
!9434 = !DILocation(line: 5945, column: 72, scope: !9429)
!9435 = !DILocation(line: 5946, column: 3, scope: !9429)
!9436 = !DILocation(line: 5946, column: 13, scope: !9429)
!9437 = !DILocation(line: 5947, column: 3, scope: !9429)
!9438 = !DILocation(line: 5947, column: 56, scope: !9429)
!9439 = !DILocation(line: 5947, column: 115, scope: !9429)
!9440 = !DILocation(line: 5948, column: 21, scope: !9429)
!9441 = !DILocation(line: 5948, column: 24, scope: !9429)
!9442 = !DILocation(line: 5948, column: 7, scope: !9429)
!9443 = !DILocation(line: 5949, column: 3, scope: !9429)
!9444 = !DILocation(line: 5949, column: 6, scope: !9429)
!9445 = !DILocation(line: 5949, column: 11, scope: !9429)
!9446 = !DILocation(line: 5949, column: 22, scope: !9429)
!9447 = !DILocation(line: 5950, column: 3, scope: !9429)
!9448 = !DILocation(line: 5951, column: 21, scope: !9429)
!9449 = !DILocation(line: 5951, column: 24, scope: !9429)
!9450 = !DILocation(line: 5951, column: 7, scope: !9429)
!9451 = !DILocation(line: 5952, column: 3, scope: !9429)
!9452 = !DILocation(line: 5952, column: 6, scope: !9429)
!9453 = !DILocation(line: 5952, column: 15, scope: !9429)
!9454 = !DILocation(line: 5952, column: 26, scope: !9429)
!9455 = !DILocation(line: 5953, column: 3, scope: !9429)
!9456 = !DILocation(line: 5954, column: 21, scope: !9429)
!9457 = !DILocation(line: 5954, column: 24, scope: !9429)
!9458 = !DILocation(line: 5954, column: 7, scope: !9429)
!9459 = !DILocation(line: 5955, column: 3, scope: !9429)
!9460 = !DILocation(line: 5955, column: 6, scope: !9429)
!9461 = !DILocation(line: 5955, column: 11, scope: !9429)
!9462 = !DILocation(line: 5955, column: 35, scope: !9429)
!9463 = !DILocation(line: 5956, column: 3, scope: !9429)
!9464 = !DILocation(line: 5957, column: 21, scope: !9429)
!9465 = !DILocation(line: 5957, column: 24, scope: !9429)
!9466 = !DILocation(line: 5957, column: 7, scope: !9429)
!9467 = !DILocation(line: 5958, column: 3, scope: !9429)
!9468 = !DILocation(line: 5958, column: 6, scope: !9429)
!9469 = !DILocation(line: 5958, column: 13, scope: !9429)
!9470 = !DILocation(line: 5958, column: 37, scope: !9429)
!9471 = !DILocation(line: 5959, column: 3, scope: !9429)
!9472 = !DILocation(line: 5961, column: 1, scope: !9429)
!9473 = !DILocation(line: 5960, column: 3, scope: !9429)
!9474 = distinct !DISubprogram(name: "__pyx_tp_new_6Cython_7Runtime_8refnanny_Context", scope: !21, file: !21, line: 5887, type: !318, scopeLine: 5887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9475)
!9475 = !{!9476, !9477, !9478, !9479, !9480, !9481}
!9476 = !DILocalVariable(name: "t", arg: 1, scope: !9474, file: !21, line: 5887, type: !42)
!9477 = !DILocalVariable(name: "a", arg: 2, scope: !9474, file: !21, line: 5887, type: !28)
!9478 = !DILocalVariable(name: "k", arg: 3, scope: !9474, file: !21, line: 5887, type: !28)
!9479 = !DILocalVariable(name: "p", scope: !9474, file: !21, line: 5888, type: !364)
!9480 = !DILocalVariable(name: "o", scope: !9474, file: !21, line: 5889, type: !28)
!9481 = !DILabel(scope: !9474, name: "bad", file: !21, line: 5905)
!9482 = !DILocation(line: 5887, column: 80, scope: !9474)
!9483 = !DILocation(line: 5887, column: 93, scope: !9474)
!9484 = !DILocation(line: 5887, column: 106, scope: !9474)
!9485 = !DILocation(line: 5888, column: 3, scope: !9474)
!9486 = !DILocation(line: 5888, column: 56, scope: !9474)
!9487 = !DILocation(line: 5889, column: 3, scope: !9474)
!9488 = !DILocation(line: 5889, column: 13, scope: !9474)
!9489 = !DILocation(line: 5894, column: 9, scope: !9474)
!9490 = !DILocation(line: 5894, column: 12, scope: !9474)
!9491 = !{!1897, !1462, i64 304}
!9492 = !DILocation(line: 5894, column: 22, scope: !9474)
!9493 = !DILocation(line: 5894, column: 7, scope: !9474)
!9494 = !DILocation(line: 5894, column: 5, scope: !9474)
!9495 = !DILocation(line: 5895, column: 7, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9474, file: !21, line: 5895, column: 7)
!9497 = !DILocation(line: 5895, column: 7, scope: !9474)
!9498 = !DILocation(line: 5895, column: 21, scope: !9496)
!9499 = !DILocation(line: 5897, column: 63, scope: !9474)
!9500 = !DILocation(line: 5897, column: 5, scope: !9474)
!9501 = !DILocation(line: 5898, column: 19, scope: !9474)
!9502 = !DILocation(line: 5898, column: 3, scope: !9474)
!9503 = !DILocation(line: 5898, column: 6, scope: !9474)
!9504 = !DILocation(line: 5898, column: 17, scope: !9474)
!9505 = !{!2906, !1462, i64 16}
!9506 = !DILocation(line: 5899, column: 3, scope: !9474)
!9507 = !DILocation(line: 5899, column: 6, scope: !9474)
!9508 = !DILocation(line: 5899, column: 11, scope: !9474)
!9509 = !DILocation(line: 5899, column: 22, scope: !9474)
!9510 = !DILocation(line: 5900, column: 3, scope: !9474)
!9511 = !DILocation(line: 5900, column: 6, scope: !9474)
!9512 = !DILocation(line: 5900, column: 15, scope: !9474)
!9513 = !DILocation(line: 5900, column: 26, scope: !9474)
!9514 = !DILocation(line: 5901, column: 3, scope: !9474)
!9515 = !DILocation(line: 5901, column: 6, scope: !9474)
!9516 = !DILocation(line: 5901, column: 11, scope: !9474)
!9517 = !DILocation(line: 5901, column: 35, scope: !9474)
!9518 = !DILocation(line: 5902, column: 3, scope: !9474)
!9519 = !DILocation(line: 5902, column: 6, scope: !9474)
!9520 = !DILocation(line: 5902, column: 13, scope: !9474)
!9521 = !DILocation(line: 5902, column: 37, scope: !9474)
!9522 = !DILocation(line: 5903, column: 7, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9474, file: !21, line: 5903, column: 7)
!9524 = !DILocation(line: 5903, column: 7, scope: !9474)
!9525 = !DILocation(line: 5903, column: 87, scope: !9523)
!9526 = !DILocation(line: 5904, column: 10, scope: !9474)
!9527 = !DILocation(line: 5904, column: 3, scope: !9474)
!9528 = !DILocation(line: 5905, column: 3, scope: !9474)
!9529 = !DILocation(line: 5906, column: 3, scope: !9474)
!9530 = !DILocation(line: 5906, column: 19, scope: !9474)
!9531 = !DILocation(line: 5907, column: 3, scope: !9474)
!9532 = !DILocation(line: 5908, column: 1, scope: !9474)
!9533 = !DISubprogram(name: "PyObject_GC_UnTrack", scope: !9534, file: !9534, line: 180, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9534 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/objimpl.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "51f87f55ba613adeb014c58e2d4a9451")
!9535 = distinct !DISubprogram(name: "__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_name", scope: !21, file: !21, line: 5963, type: !292, scopeLine: 5963, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9536)
!9536 = !{!9537, !9538}
!9537 = !DILocalVariable(name: "o", arg: 1, scope: !9535, file: !21, line: 5963, type: !28)
!9538 = !DILocalVariable(name: "x", arg: 2, scope: !9535, file: !21, line: 5963, type: !27)
!9539 = !DILocation(line: 5963, column: 83, scope: !9535)
!9540 = !DILocation(line: 5963, column: 106, scope: !9535)
!9541 = !DILocation(line: 5964, column: 70, scope: !9535)
!9542 = !DILocation(line: 5964, column: 10, scope: !9535)
!9543 = !DILocation(line: 5964, column: 3, scope: !9535)
!9544 = distinct !DISubprogram(name: "__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_filename", scope: !21, file: !21, line: 5967, type: !292, scopeLine: 5967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9545)
!9545 = !{!9546, !9547}
!9546 = !DILocalVariable(name: "o", arg: 1, scope: !9544, file: !21, line: 5967, type: !28)
!9547 = !DILocalVariable(name: "x", arg: 2, scope: !9544, file: !21, line: 5967, type: !27)
!9548 = !DILocation(line: 5967, column: 87, scope: !9544)
!9549 = !DILocation(line: 5967, column: 110, scope: !9544)
!9550 = !DILocation(line: 5968, column: 74, scope: !9544)
!9551 = !DILocation(line: 5968, column: 10, scope: !9544)
!9552 = !DILocation(line: 5968, column: 3, scope: !9544)
!9553 = distinct !DISubprogram(name: "__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_refs", scope: !21, file: !21, line: 5971, type: !292, scopeLine: 5971, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9554)
!9554 = !{!9555, !9556}
!9555 = !DILocalVariable(name: "o", arg: 1, scope: !9553, file: !21, line: 5971, type: !28)
!9556 = !DILocalVariable(name: "x", arg: 2, scope: !9553, file: !21, line: 5971, type: !27)
!9557 = !DILocation(line: 5971, column: 83, scope: !9553)
!9558 = !DILocation(line: 5971, column: 106, scope: !9553)
!9559 = !DILocation(line: 5972, column: 70, scope: !9553)
!9560 = !DILocation(line: 5972, column: 10, scope: !9553)
!9561 = !DILocation(line: 5972, column: 3, scope: !9553)
!9562 = distinct !DISubprogram(name: "__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_errors", scope: !21, file: !21, line: 5975, type: !292, scopeLine: 5975, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9563)
!9563 = !{!9564, !9565}
!9564 = !DILocalVariable(name: "o", arg: 1, scope: !9562, file: !21, line: 5975, type: !28)
!9565 = !DILocalVariable(name: "x", arg: 2, scope: !9562, file: !21, line: 5975, type: !27)
!9566 = !DILocation(line: 5975, column: 85, scope: !9562)
!9567 = !DILocation(line: 5975, column: 108, scope: !9562)
!9568 = !DILocation(line: 5976, column: 72, scope: !9562)
!9569 = !DILocation(line: 5976, column: 10, scope: !9562)
!9570 = !DILocation(line: 5976, column: 3, scope: !9562)
!9571 = distinct !DISubprogram(name: "__pyx_getprop_6Cython_7Runtime_8refnanny_7Context_start", scope: !21, file: !21, line: 5979, type: !292, scopeLine: 5979, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9572)
!9572 = !{!9573, !9574}
!9573 = !DILocalVariable(name: "o", arg: 1, scope: !9571, file: !21, line: 5979, type: !28)
!9574 = !DILocalVariable(name: "x", arg: 2, scope: !9571, file: !21, line: 5979, type: !27)
!9575 = !DILocation(line: 5979, column: 84, scope: !9571)
!9576 = !DILocation(line: 5979, column: 107, scope: !9571)
!9577 = !DILocation(line: 5980, column: 71, scope: !9571)
!9578 = !DILocation(line: 5980, column: 10, scope: !9571)
!9579 = !DILocation(line: 5980, column: 3, scope: !9571)
!9580 = distinct !DISubprogram(name: "__pyx_pw_6Cython_7Runtime_8refnanny_7Context_4name_1__get__", scope: !21, file: !21, line: 4035, type: !84, scopeLine: 4035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9581)
!9581 = !{!9582, !9583, !9584}
!9582 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9580, file: !21, line: 4035, type: !28)
!9583 = !DILocalVariable(name: "__pyx_kwvalues", scope: !9580, file: !21, line: 4036, type: !339)
!9584 = !DILocalVariable(name: "__pyx_r", scope: !9580, file: !21, line: 4037, type: !28)
!9585 = !DILocation(line: 4035, column: 88, scope: !9580)
!9586 = !DILocation(line: 4036, column: 3, scope: !9580)
!9587 = !DILocation(line: 4036, column: 34, scope: !9580)
!9588 = !DILocation(line: 4037, column: 3, scope: !9580)
!9589 = !DILocation(line: 4037, column: 13, scope: !9580)
!9590 = !DILocation(line: 4040, column: 18, scope: !9580)
!9591 = !DILocation(line: 4041, column: 128, scope: !9580)
!9592 = !DILocation(line: 4041, column: 13, scope: !9580)
!9593 = !DILocation(line: 4041, column: 11, scope: !9580)
!9594 = !DILocation(line: 4045, column: 10, scope: !9580)
!9595 = !DILocation(line: 4046, column: 1, scope: !9580)
!9596 = !DILocation(line: 4045, column: 3, scope: !9580)
!9597 = distinct !DISubprogram(name: "__pyx_pf_6Cython_7Runtime_8refnanny_7Context_4name___get__", scope: !21, file: !21, line: 4048, type: !379, scopeLine: 4048, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9598)
!9598 = !{!9599, !9600, !9601}
!9599 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9597, file: !21, line: 4048, type: !364)
!9600 = !DILocalVariable(name: "__pyx_r", scope: !9597, file: !21, line: 4049, type: !28)
!9601 = !DILabel(scope: !9597, name: "__pyx_L0", file: !21, line: 4058)
!9602 = !DILocation(line: 4048, column: 130, scope: !9597)
!9603 = !DILocation(line: 4049, column: 3, scope: !9597)
!9604 = !DILocation(line: 4049, column: 13, scope: !9597)
!9605 = !DILocation(line: 4052, column: 3, scope: !9597)
!9606 = !DILocation(line: 4053, column: 3, scope: !9597)
!9607 = !DILocation(line: 4054, column: 13, scope: !9597)
!9608 = !DILocation(line: 4054, column: 27, scope: !9597)
!9609 = !DILocation(line: 4054, column: 11, scope: !9597)
!9610 = !DILocation(line: 4055, column: 3, scope: !9597)
!9611 = !DILocation(line: 4058, column: 3, scope: !9597)
!9612 = !DILocation(line: 4061, column: 10, scope: !9597)
!9613 = !DILocation(line: 4062, column: 1, scope: !9597)
!9614 = !DILocation(line: 4061, column: 3, scope: !9597)
!9615 = distinct !DISubprogram(name: "__pyx_pw_6Cython_7Runtime_8refnanny_7Context_8filename_1__get__", scope: !21, file: !21, line: 4066, type: !84, scopeLine: 4066, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9616)
!9616 = !{!9617, !9618, !9619}
!9617 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9615, file: !21, line: 4066, type: !28)
!9618 = !DILocalVariable(name: "__pyx_kwvalues", scope: !9615, file: !21, line: 4067, type: !339)
!9619 = !DILocalVariable(name: "__pyx_r", scope: !9615, file: !21, line: 4068, type: !28)
!9620 = !DILocation(line: 4066, column: 92, scope: !9615)
!9621 = !DILocation(line: 4067, column: 3, scope: !9615)
!9622 = !DILocation(line: 4067, column: 34, scope: !9615)
!9623 = !DILocation(line: 4068, column: 3, scope: !9615)
!9624 = !DILocation(line: 4068, column: 13, scope: !9615)
!9625 = !DILocation(line: 4071, column: 18, scope: !9615)
!9626 = !DILocation(line: 4072, column: 132, scope: !9615)
!9627 = !DILocation(line: 4072, column: 13, scope: !9615)
!9628 = !DILocation(line: 4072, column: 11, scope: !9615)
!9629 = !DILocation(line: 4076, column: 10, scope: !9615)
!9630 = !DILocation(line: 4077, column: 1, scope: !9615)
!9631 = !DILocation(line: 4076, column: 3, scope: !9615)
!9632 = distinct !DISubprogram(name: "__pyx_pf_6Cython_7Runtime_8refnanny_7Context_8filename___get__", scope: !21, file: !21, line: 4079, type: !379, scopeLine: 4079, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9633)
!9633 = !{!9634, !9635, !9636}
!9634 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9632, file: !21, line: 4079, type: !364)
!9635 = !DILocalVariable(name: "__pyx_r", scope: !9632, file: !21, line: 4080, type: !28)
!9636 = !DILabel(scope: !9632, name: "__pyx_L0", file: !21, line: 4089)
!9637 = !DILocation(line: 4079, column: 134, scope: !9632)
!9638 = !DILocation(line: 4080, column: 3, scope: !9632)
!9639 = !DILocation(line: 4080, column: 13, scope: !9632)
!9640 = !DILocation(line: 4083, column: 3, scope: !9632)
!9641 = !DILocation(line: 4084, column: 3, scope: !9632)
!9642 = !DILocation(line: 4085, column: 13, scope: !9632)
!9643 = !DILocation(line: 4085, column: 27, scope: !9632)
!9644 = !DILocation(line: 4085, column: 11, scope: !9632)
!9645 = !DILocation(line: 4086, column: 3, scope: !9632)
!9646 = !DILocation(line: 4089, column: 3, scope: !9632)
!9647 = !DILocation(line: 4092, column: 10, scope: !9632)
!9648 = !DILocation(line: 4093, column: 1, scope: !9632)
!9649 = !DILocation(line: 4092, column: 3, scope: !9632)
!9650 = distinct !DISubprogram(name: "__pyx_pw_6Cython_7Runtime_8refnanny_7Context_4refs_1__get__", scope: !21, file: !21, line: 4105, type: !84, scopeLine: 4105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9651)
!9651 = !{!9652, !9653, !9654}
!9652 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9650, file: !21, line: 4105, type: !28)
!9653 = !DILocalVariable(name: "__pyx_kwvalues", scope: !9650, file: !21, line: 4106, type: !339)
!9654 = !DILocalVariable(name: "__pyx_r", scope: !9650, file: !21, line: 4107, type: !28)
!9655 = !DILocation(line: 4105, column: 88, scope: !9650)
!9656 = !DILocation(line: 4106, column: 3, scope: !9650)
!9657 = !DILocation(line: 4106, column: 34, scope: !9650)
!9658 = !DILocation(line: 4107, column: 3, scope: !9650)
!9659 = !DILocation(line: 4107, column: 13, scope: !9650)
!9660 = !DILocation(line: 4110, column: 18, scope: !9650)
!9661 = !DILocation(line: 4111, column: 128, scope: !9650)
!9662 = !DILocation(line: 4111, column: 13, scope: !9650)
!9663 = !DILocation(line: 4111, column: 11, scope: !9650)
!9664 = !DILocation(line: 4115, column: 10, scope: !9650)
!9665 = !DILocation(line: 4116, column: 1, scope: !9650)
!9666 = !DILocation(line: 4115, column: 3, scope: !9650)
!9667 = distinct !DISubprogram(name: "__pyx_pf_6Cython_7Runtime_8refnanny_7Context_4refs___get__", scope: !21, file: !21, line: 4118, type: !379, scopeLine: 4118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9668)
!9668 = !{!9669, !9670, !9671}
!9669 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9667, file: !21, line: 4118, type: !364)
!9670 = !DILocalVariable(name: "__pyx_r", scope: !9667, file: !21, line: 4119, type: !28)
!9671 = !DILabel(scope: !9667, name: "__pyx_L0", file: !21, line: 4128)
!9672 = !DILocation(line: 4118, column: 130, scope: !9667)
!9673 = !DILocation(line: 4119, column: 3, scope: !9667)
!9674 = !DILocation(line: 4119, column: 13, scope: !9667)
!9675 = !DILocation(line: 4122, column: 3, scope: !9667)
!9676 = !DILocation(line: 4123, column: 3, scope: !9667)
!9677 = !DILocation(line: 4124, column: 13, scope: !9667)
!9678 = !DILocation(line: 4124, column: 27, scope: !9667)
!9679 = !DILocation(line: 4124, column: 11, scope: !9667)
!9680 = !DILocation(line: 4125, column: 3, scope: !9667)
!9681 = !DILocation(line: 4128, column: 3, scope: !9667)
!9682 = !DILocation(line: 4131, column: 10, scope: !9667)
!9683 = !DILocation(line: 4132, column: 1, scope: !9667)
!9684 = !DILocation(line: 4131, column: 3, scope: !9667)
!9685 = distinct !DISubprogram(name: "__pyx_pw_6Cython_7Runtime_8refnanny_7Context_6errors_1__get__", scope: !21, file: !21, line: 4144, type: !84, scopeLine: 4144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9686)
!9686 = !{!9687, !9688, !9689}
!9687 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9685, file: !21, line: 4144, type: !28)
!9688 = !DILocalVariable(name: "__pyx_kwvalues", scope: !9685, file: !21, line: 4145, type: !339)
!9689 = !DILocalVariable(name: "__pyx_r", scope: !9685, file: !21, line: 4146, type: !28)
!9690 = !DILocation(line: 4144, column: 90, scope: !9685)
!9691 = !DILocation(line: 4145, column: 3, scope: !9685)
!9692 = !DILocation(line: 4145, column: 34, scope: !9685)
!9693 = !DILocation(line: 4146, column: 3, scope: !9685)
!9694 = !DILocation(line: 4146, column: 13, scope: !9685)
!9695 = !DILocation(line: 4149, column: 18, scope: !9685)
!9696 = !DILocation(line: 4150, column: 130, scope: !9685)
!9697 = !DILocation(line: 4150, column: 13, scope: !9685)
!9698 = !DILocation(line: 4150, column: 11, scope: !9685)
!9699 = !DILocation(line: 4154, column: 10, scope: !9685)
!9700 = !DILocation(line: 4155, column: 1, scope: !9685)
!9701 = !DILocation(line: 4154, column: 3, scope: !9685)
!9702 = distinct !DISubprogram(name: "__pyx_pf_6Cython_7Runtime_8refnanny_7Context_6errors___get__", scope: !21, file: !21, line: 4157, type: !379, scopeLine: 4157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9703)
!9703 = !{!9704, !9705, !9706}
!9704 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9702, file: !21, line: 4157, type: !364)
!9705 = !DILocalVariable(name: "__pyx_r", scope: !9702, file: !21, line: 4158, type: !28)
!9706 = !DILabel(scope: !9702, name: "__pyx_L0", file: !21, line: 4167)
!9707 = !DILocation(line: 4157, column: 132, scope: !9702)
!9708 = !DILocation(line: 4158, column: 3, scope: !9702)
!9709 = !DILocation(line: 4158, column: 13, scope: !9702)
!9710 = !DILocation(line: 4161, column: 3, scope: !9702)
!9711 = !DILocation(line: 4162, column: 3, scope: !9702)
!9712 = !DILocation(line: 4163, column: 13, scope: !9702)
!9713 = !DILocation(line: 4163, column: 27, scope: !9702)
!9714 = !DILocation(line: 4163, column: 11, scope: !9702)
!9715 = !DILocation(line: 4164, column: 3, scope: !9702)
!9716 = !DILocation(line: 4167, column: 3, scope: !9702)
!9717 = !DILocation(line: 4170, column: 10, scope: !9702)
!9718 = !DILocation(line: 4171, column: 1, scope: !9702)
!9719 = !DILocation(line: 4170, column: 3, scope: !9702)
!9720 = distinct !DISubprogram(name: "__pyx_pw_6Cython_7Runtime_8refnanny_7Context_5start_1__get__", scope: !21, file: !21, line: 4183, type: !84, scopeLine: 4183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9721)
!9721 = !{!9722, !9723, !9724}
!9722 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9720, file: !21, line: 4183, type: !28)
!9723 = !DILocalVariable(name: "__pyx_kwvalues", scope: !9720, file: !21, line: 4184, type: !339)
!9724 = !DILocalVariable(name: "__pyx_r", scope: !9720, file: !21, line: 4185, type: !28)
!9725 = !DILocation(line: 4183, column: 89, scope: !9720)
!9726 = !DILocation(line: 4184, column: 3, scope: !9720)
!9727 = !DILocation(line: 4184, column: 34, scope: !9720)
!9728 = !DILocation(line: 4185, column: 3, scope: !9720)
!9729 = !DILocation(line: 4185, column: 13, scope: !9720)
!9730 = !DILocation(line: 4188, column: 18, scope: !9720)
!9731 = !DILocation(line: 4189, column: 129, scope: !9720)
!9732 = !DILocation(line: 4189, column: 13, scope: !9720)
!9733 = !DILocation(line: 4189, column: 11, scope: !9720)
!9734 = !DILocation(line: 4193, column: 10, scope: !9720)
!9735 = !DILocation(line: 4194, column: 1, scope: !9720)
!9736 = !DILocation(line: 4193, column: 3, scope: !9720)
!9737 = distinct !DISubprogram(name: "__pyx_pf_6Cython_7Runtime_8refnanny_7Context_5start___get__", scope: !21, file: !21, line: 4196, type: !379, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9738)
!9738 = !{!9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746}
!9739 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9737, file: !21, line: 4196, type: !364)
!9740 = !DILocalVariable(name: "__pyx_r", scope: !9737, file: !21, line: 4197, type: !28)
!9741 = !DILocalVariable(name: "__pyx_t_1", scope: !9737, file: !21, line: 4199, type: !28)
!9742 = !DILocalVariable(name: "__pyx_lineno", scope: !9737, file: !21, line: 4200, type: !7)
!9743 = !DILocalVariable(name: "__pyx_filename", scope: !9737, file: !21, line: 4201, type: !54)
!9744 = !DILocalVariable(name: "__pyx_clineno", scope: !9737, file: !21, line: 4202, type: !7)
!9745 = !DILabel(scope: !9737, name: "__pyx_L1_error", file: !21, line: 4212)
!9746 = !DILabel(scope: !9737, name: "__pyx_L0", file: !21, line: 4216)
!9747 = !DILocation(line: 4196, column: 131, scope: !9737)
!9748 = !DILocation(line: 4197, column: 3, scope: !9737)
!9749 = !DILocation(line: 4197, column: 13, scope: !9737)
!9750 = !DILocation(line: 4199, column: 3, scope: !9737)
!9751 = !DILocation(line: 4199, column: 13, scope: !9737)
!9752 = !DILocation(line: 4200, column: 3, scope: !9737)
!9753 = !DILocation(line: 4200, column: 7, scope: !9737)
!9754 = !DILocation(line: 4201, column: 3, scope: !9737)
!9755 = !DILocation(line: 4201, column: 15, scope: !9737)
!9756 = !DILocation(line: 4202, column: 3, scope: !9737)
!9757 = !DILocation(line: 4202, column: 7, scope: !9737)
!9758 = !DILocation(line: 4204, column: 3, scope: !9737)
!9759 = !DILocation(line: 4205, column: 33, scope: !9737)
!9760 = !DILocation(line: 4205, column: 47, scope: !9737)
!9761 = !DILocation(line: 4205, column: 15, scope: !9737)
!9762 = !DILocation(line: 4205, column: 13, scope: !9737)
!9763 = !DILocation(line: 4205, column: 59, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9737, file: !21, line: 4205, column: 59)
!9765 = !DILocation(line: 4205, column: 59, scope: !9737)
!9766 = !DILocation(line: 4205, column: 81, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9768, file: !21, line: 4205, column: 81)
!9768 = distinct !DILexicalBlock(scope: !9764, file: !21, line: 4205, column: 81)
!9769 = !DILocation(line: 4205, column: 81, scope: !9768)
!9770 = !DILocation(line: 4207, column: 13, scope: !9737)
!9771 = !DILocation(line: 4207, column: 11, scope: !9737)
!9772 = !DILocation(line: 4208, column: 13, scope: !9737)
!9773 = !DILocation(line: 4209, column: 3, scope: !9737)
!9774 = !DILocation(line: 4212, column: 3, scope: !9737)
!9775 = !DILocation(line: 4213, column: 3, scope: !9737)
!9776 = !DILocation(line: 4214, column: 71, scope: !9737)
!9777 = !DILocation(line: 4214, column: 86, scope: !9737)
!9778 = !DILocation(line: 4214, column: 100, scope: !9737)
!9779 = !DILocation(line: 4214, column: 3, scope: !9737)
!9780 = !DILocation(line: 4215, column: 11, scope: !9737)
!9781 = !DILocation(line: 4215, column: 3, scope: !9737)
!9782 = !DILocation(line: 4216, column: 3, scope: !9737)
!9783 = !DILocation(line: 4219, column: 10, scope: !9737)
!9784 = !DILocation(line: 4220, column: 1, scope: !9737)
!9785 = !DILocation(line: 4219, column: 3, scope: !9737)
!9786 = distinct !DISubprogram(name: "__pyx_pw_6Cython_7Runtime_8refnanny_7Context_1__cinit__", scope: !21, file: !21, line: 2863, type: !191, scopeLine: 2863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9787)
!9787 = !{!9788, !9789, !9790, !9791, !9792, !9793, !9794, !9795, !9796, !9797, !9798, !9799, !9800, !9801, !9804, !9807, !9811, !9814, !9817, !9818, !9819, !9820, !9822, !9823}
!9788 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !9786, file: !21, line: 2863, type: !28)
!9789 = !DILocalVariable(name: "__pyx_args", arg: 2, scope: !9786, file: !21, line: 2863, type: !28)
!9790 = !DILocalVariable(name: "__pyx_kwds", arg: 3, scope: !9786, file: !21, line: 2863, type: !28)
!9791 = !DILocalVariable(name: "__pyx_v_name", scope: !9786, file: !21, line: 2864, type: !28)
!9792 = !DILocalVariable(name: "__pyx_v_line", scope: !9786, file: !21, line: 2865, type: !28)
!9793 = !DILocalVariable(name: "__pyx_v_filename", scope: !9786, file: !21, line: 2866, type: !28)
!9794 = !DILocalVariable(name: "__pyx_nargs", scope: !9786, file: !21, line: 2867, type: !34)
!9795 = !DILocalVariable(name: "__pyx_kwvalues", scope: !9786, file: !21, line: 2868, type: !339)
!9796 = !DILocalVariable(name: "values", scope: !9786, file: !21, line: 2869, type: !8068)
!9797 = !DILocalVariable(name: "__pyx_lineno", scope: !9786, file: !21, line: 2870, type: !7)
!9798 = !DILocalVariable(name: "__pyx_filename", scope: !9786, file: !21, line: 2871, type: !54)
!9799 = !DILocalVariable(name: "__pyx_clineno", scope: !9786, file: !21, line: 2872, type: !7)
!9800 = !DILocalVariable(name: "__pyx_r", scope: !9786, file: !21, line: 2873, type: !7)
!9801 = !DILocalVariable(name: "__pyx_pyargnames", scope: !9802, file: !21, line: 2883, type: !9803)
!9802 = distinct !DILexicalBlock(scope: !9786, file: !21, line: 2882, column: 3)
!9803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 256, elements: !860)
!9804 = !DILocalVariable(name: "kw_args", scope: !9805, file: !21, line: 2887, type: !34)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !21, line: 2886, column: 21)
!9806 = distinct !DILexicalBlock(scope: !9802, file: !21, line: 2886, column: 9)
!9807 = !DILocalVariable(name: "value", scope: !9808, file: !21, line: 2910, type: !28)
!9808 = distinct !DILexicalBlock(scope: !9809, file: !21, line: 2909, column: 26)
!9809 = distinct !DILexicalBlock(scope: !9810, file: !21, line: 2909, column: 13)
!9810 = distinct !DILexicalBlock(scope: !9805, file: !21, line: 2899, column: 28)
!9811 = !DILocalVariable(name: "value", scope: !9812, file: !21, line: 2917, type: !28)
!9812 = distinct !DILexicalBlock(scope: !9813, file: !21, line: 2916, column: 26)
!9813 = distinct !DILexicalBlock(scope: !9810, file: !21, line: 2916, column: 13)
!9814 = !DILocalVariable(name: "kwd_pos_args", scope: !9815, file: !21, line: 2923, type: !4017)
!9815 = distinct !DILexicalBlock(scope: !9816, file: !21, line: 2922, column: 34)
!9816 = distinct !DILexicalBlock(scope: !9805, file: !21, line: 2922, column: 11)
!9817 = !DILabel(scope: !9786, name: "__pyx_L5_argtuple_error", file: !21, line: 2942)
!9818 = !DILabel(scope: !9786, name: "__pyx_L6_skip", file: !21, line: 2944)
!9819 = !DILabel(scope: !9786, name: "__pyx_L3_error", file: !21, line: 2946)
!9820 = !DILocalVariable(name: "__pyx_temp", scope: !9821, file: !21, line: 2948, type: !34)
!9821 = distinct !DILexicalBlock(scope: !9786, file: !21, line: 2947, column: 3)
!9822 = !DILabel(scope: !9786, name: "__pyx_L4_argument_unpacking_done", file: !21, line: 2956)
!9823 = !DILocalVariable(name: "__pyx_temp", scope: !9824, file: !21, line: 2961, type: !34)
!9824 = distinct !DILexicalBlock(scope: !9786, file: !21, line: 2960, column: 3)
!9825 = !DILocation(line: 2863, column: 78, scope: !9786)
!9826 = !DILocation(line: 2863, column: 102, scope: !9786)
!9827 = !DILocation(line: 2863, column: 124, scope: !9786)
!9828 = !DILocation(line: 2864, column: 3, scope: !9786)
!9829 = !DILocation(line: 2864, column: 13, scope: !9786)
!9830 = !DILocation(line: 2865, column: 3, scope: !9786)
!9831 = !DILocation(line: 2865, column: 13, scope: !9786)
!9832 = !DILocation(line: 2866, column: 3, scope: !9786)
!9833 = !DILocation(line: 2866, column: 13, scope: !9786)
!9834 = !DILocation(line: 2867, column: 3, scope: !9786)
!9835 = !DILocation(line: 2867, column: 28, scope: !9786)
!9836 = !DILocation(line: 2868, column: 3, scope: !9786)
!9837 = !DILocation(line: 2868, column: 34, scope: !9786)
!9838 = !DILocation(line: 2869, column: 3, scope: !9786)
!9839 = !DILocation(line: 2869, column: 13, scope: !9786)
!9840 = !DILocation(line: 2870, column: 3, scope: !9786)
!9841 = !DILocation(line: 2870, column: 7, scope: !9786)
!9842 = !DILocation(line: 2871, column: 3, scope: !9786)
!9843 = !DILocation(line: 2871, column: 15, scope: !9786)
!9844 = !DILocation(line: 2872, column: 3, scope: !9786)
!9845 = !DILocation(line: 2872, column: 7, scope: !9786)
!9846 = !DILocation(line: 2873, column: 3, scope: !9786)
!9847 = !DILocation(line: 2873, column: 7, scope: !9786)
!9848 = !DILocation(line: 2877, column: 17, scope: !9786)
!9849 = !DILocation(line: 2877, column: 15, scope: !9786)
!9850 = !DILocation(line: 2881, column: 18, scope: !9786)
!9851 = !DILocation(line: 2883, column: 5, scope: !9802)
!9852 = !DILocation(line: 2883, column: 16, scope: !9802)
!9853 = !DILocation(line: 2883, column: 37, scope: !9802)
!9854 = !DILocation(line: 2883, column: 39, scope: !9802)
!9855 = !DILocation(line: 2883, column: 55, scope: !9802)
!9856 = !DILocation(line: 2883, column: 71, scope: !9802)
!9857 = !DILocation(line: 2884, column: 17, scope: !9802)
!9858 = !DILocation(line: 2884, column: 5, scope: !9802)
!9859 = !DILocation(line: 2884, column: 15, scope: !9802)
!9860 = !DILocation(line: 2885, column: 5, scope: !9802)
!9861 = !DILocation(line: 2885, column: 15, scope: !9802)
!9862 = !DILocation(line: 2886, column: 9, scope: !9806)
!9863 = !DILocation(line: 2886, column: 9, scope: !9802)
!9864 = !DILocation(line: 2887, column: 7, scope: !9805)
!9865 = !DILocation(line: 2887, column: 18, scope: !9805)
!9866 = !DILocation(line: 2888, column: 15, scope: !9805)
!9867 = !DILocation(line: 2888, column: 7, scope: !9805)
!9868 = !DILocation(line: 2889, column: 30, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9805, file: !21, line: 2888, column: 28)
!9870 = !DILocation(line: 2889, column: 18, scope: !9869)
!9871 = !DILocation(line: 2889, column: 28, scope: !9869)
!9872 = !DILocation(line: 2891, column: 30, scope: !9869)
!9873 = !DILocation(line: 2891, column: 18, scope: !9869)
!9874 = !DILocation(line: 2891, column: 28, scope: !9869)
!9875 = !DILocation(line: 2893, column: 30, scope: !9869)
!9876 = !DILocation(line: 2893, column: 18, scope: !9869)
!9877 = !DILocation(line: 2893, column: 28, scope: !9869)
!9878 = !DILocation(line: 2896, column: 18, scope: !9869)
!9879 = !DILocation(line: 2898, column: 17, scope: !9805)
!9880 = !DILocation(line: 2898, column: 15, scope: !9805)
!9881 = !DILocation(line: 2899, column: 15, scope: !9805)
!9882 = !DILocation(line: 2899, column: 7, scope: !9805)
!9883 = !DILocation(line: 2901, column: 13, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9810, file: !21, line: 2901, column: 13)
!9885 = !{!1599, !1462, i64 360}
!9886 = !DILocation(line: 2901, column: 13, scope: !9810)
!9887 = !DILocation(line: 2902, column: 17, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9884, file: !21, line: 2901, column: 110)
!9889 = !DILocation(line: 2903, column: 18, scope: !9888)
!9890 = !DILocation(line: 2904, column: 9, scope: !9888)
!9891 = !DILocation(line: 2905, column: 18, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9884, file: !21, line: 2905, column: 18)
!9893 = !DILocation(line: 2905, column: 18, scope: !9884)
!9894 = !DILocation(line: 2905, column: 46, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9896, file: !21, line: 2905, column: 46)
!9896 = distinct !DILexicalBlock(scope: !9892, file: !21, line: 2905, column: 46)
!9897 = !DILocation(line: 2905, column: 46, scope: !9896)
!9898 = !DILocation(line: 2906, column: 14, scope: !9892)
!9899 = !DILocation(line: 2909, column: 13, scope: !9809)
!9900 = !DILocation(line: 2909, column: 21, scope: !9809)
!9901 = !DILocation(line: 2909, column: 13, scope: !9810)
!9902 = !DILocation(line: 2910, column: 11, scope: !9808)
!9903 = !DILocation(line: 2910, column: 21, scope: !9808)
!9904 = !DILocation(line: 2910, column: 29, scope: !9808)
!9905 = !{!1599, !1462, i64 336}
!9906 = !DILocation(line: 2911, column: 15, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9808, file: !21, line: 2911, column: 15)
!9908 = !DILocation(line: 2911, column: 15, scope: !9808)
!9909 = !DILocation(line: 2911, column: 36, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9907, file: !21, line: 2911, column: 22)
!9911 = !DILocation(line: 2911, column: 24, scope: !9910)
!9912 = !DILocation(line: 2911, column: 34, scope: !9910)
!9913 = !DILocation(line: 2911, column: 76, scope: !9910)
!9914 = !DILocation(line: 2911, column: 80, scope: !9910)
!9915 = !DILocation(line: 2912, column: 20, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9907, file: !21, line: 2912, column: 20)
!9917 = !DILocation(line: 2912, column: 20, scope: !9907)
!9918 = !DILocation(line: 2912, column: 48, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !21, line: 2912, column: 48)
!9920 = distinct !DILexicalBlock(scope: !9916, file: !21, line: 2912, column: 48)
!9921 = !DILocation(line: 2912, column: 48, scope: !9920)
!9922 = !DILocation(line: 2913, column: 9, scope: !9809)
!9923 = !DILocation(line: 2913, column: 9, scope: !9808)
!9924 = !DILocation(line: 2909, column: 23, scope: !9809)
!9925 = !DILocation(line: 2916, column: 13, scope: !9813)
!9926 = !DILocation(line: 2916, column: 21, scope: !9813)
!9927 = !DILocation(line: 2916, column: 13, scope: !9810)
!9928 = !DILocation(line: 2917, column: 11, scope: !9812)
!9929 = !DILocation(line: 2917, column: 21, scope: !9812)
!9930 = !DILocation(line: 2917, column: 29, scope: !9812)
!9931 = !{!1599, !1462, i64 264}
!9932 = !DILocation(line: 2918, column: 15, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9812, file: !21, line: 2918, column: 15)
!9934 = !DILocation(line: 2918, column: 15, scope: !9812)
!9935 = !DILocation(line: 2918, column: 36, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9933, file: !21, line: 2918, column: 22)
!9937 = !DILocation(line: 2918, column: 24, scope: !9936)
!9938 = !DILocation(line: 2918, column: 34, scope: !9936)
!9939 = !DILocation(line: 2918, column: 76, scope: !9936)
!9940 = !DILocation(line: 2918, column: 80, scope: !9936)
!9941 = !DILocation(line: 2919, column: 20, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9933, file: !21, line: 2919, column: 20)
!9943 = !DILocation(line: 2919, column: 20, scope: !9933)
!9944 = !DILocation(line: 2919, column: 48, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !21, line: 2919, column: 48)
!9946 = distinct !DILexicalBlock(scope: !9942, file: !21, line: 2919, column: 48)
!9947 = !DILocation(line: 2919, column: 48, scope: !9946)
!9948 = !DILocation(line: 2920, column: 9, scope: !9813)
!9949 = !DILocation(line: 2920, column: 9, scope: !9812)
!9950 = !DILocation(line: 2921, column: 7, scope: !9810)
!9951 = !DILocation(line: 2922, column: 11, scope: !9816)
!9952 = !DILocation(line: 2922, column: 11, scope: !9805)
!9953 = !DILocation(line: 2923, column: 9, scope: !9815)
!9954 = !DILocation(line: 2923, column: 26, scope: !9815)
!9955 = !DILocation(line: 2923, column: 41, scope: !9815)
!9956 = !DILocation(line: 2924, column: 13, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9815, file: !21, line: 2924, column: 13)
!9958 = !DILocation(line: 2924, column: 13, scope: !9815)
!9959 = !DILocation(line: 2924, column: 144, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !21, line: 2924, column: 144)
!9961 = distinct !DILexicalBlock(scope: !9957, file: !21, line: 2924, column: 144)
!9962 = !DILocation(line: 2924, column: 144, scope: !9961)
!9963 = !DILocation(line: 2925, column: 7, scope: !9816)
!9964 = !DILocation(line: 2925, column: 7, scope: !9815)
!9965 = !DILocation(line: 2926, column: 5, scope: !9806)
!9966 = !DILocation(line: 2926, column: 5, scope: !9805)
!9967 = !DILocation(line: 2927, column: 15, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9806, file: !21, line: 2926, column: 12)
!9969 = !DILocation(line: 2927, column: 7, scope: !9968)
!9970 = !DILocation(line: 2928, column: 30, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9968, file: !21, line: 2927, column: 28)
!9972 = !DILocation(line: 2928, column: 18, scope: !9971)
!9973 = !DILocation(line: 2928, column: 28, scope: !9971)
!9974 = !DILocation(line: 2930, column: 30, scope: !9971)
!9975 = !DILocation(line: 2930, column: 18, scope: !9971)
!9976 = !DILocation(line: 2930, column: 28, scope: !9971)
!9977 = !DILocation(line: 2932, column: 30, scope: !9971)
!9978 = !DILocation(line: 2932, column: 18, scope: !9971)
!9979 = !DILocation(line: 2932, column: 28, scope: !9971)
!9980 = !DILocation(line: 2933, column: 9, scope: !9971)
!9981 = !DILocation(line: 2934, column: 18, scope: !9971)
!9982 = !DILocation(line: 2937, column: 20, scope: !9802)
!9983 = !DILocation(line: 2937, column: 18, scope: !9802)
!9984 = !DILocation(line: 2938, column: 20, scope: !9802)
!9985 = !DILocation(line: 2938, column: 18, scope: !9802)
!9986 = !DILocation(line: 2939, column: 24, scope: !9802)
!9987 = !DILocation(line: 2939, column: 22, scope: !9802)
!9988 = !DILocation(line: 2940, column: 3, scope: !9786)
!9989 = !DILocation(line: 2941, column: 3, scope: !9786)
!9990 = !DILocation(line: 2942, column: 3, scope: !9786)
!9991 = !DILocation(line: 2943, column: 52, scope: !9786)
!9992 = !DILocation(line: 2943, column: 3, scope: !9786)
!9993 = !DILocation(line: 2943, column: 66, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !21, line: 2943, column: 66)
!9995 = distinct !DILexicalBlock(scope: !9786, file: !21, line: 2943, column: 66)
!9996 = !DILocation(line: 2943, column: 66, scope: !9995)
!9997 = !DILocation(line: 2944, column: 3, scope: !9786)
!9998 = !DILocation(line: 2945, column: 3, scope: !9786)
!9999 = !DILocation(line: 2946, column: 3, scope: !9786)
!10000 = !DILocation(line: 2948, column: 5, scope: !9821)
!10001 = !DILocation(line: 2948, column: 16, scope: !9821)
!10002 = !DILocation(line: 2949, column: 20, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9821, file: !21, line: 2949, column: 5)
!10004 = !DILocation(line: 2949, column: 10, scope: !10003)
!10005 = !DILocation(line: 2949, column: 24, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10003, file: !21, line: 2949, column: 5)
!10007 = !DILocation(line: 2949, column: 35, scope: !10006)
!10008 = !DILocation(line: 2949, column: 5, scope: !10003)
!10009 = !DILocation(line: 2951, column: 5, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10006, file: !21, line: 2949, column: 99)
!10011 = !DILocation(line: 2949, column: 85, scope: !10006)
!10012 = !DILocation(line: 2949, column: 5, scope: !10006)
!10013 = distinct !{!10013, !10008, !10014, !4154}
!10014 = !DILocation(line: 2951, column: 5, scope: !10003)
!10015 = !DILocation(line: 2952, column: 3, scope: !9786)
!10016 = !DILocation(line: 2953, column: 67, scope: !9786)
!10017 = !DILocation(line: 2953, column: 82, scope: !9786)
!10018 = !DILocation(line: 2953, column: 96, scope: !9786)
!10019 = !DILocation(line: 2953, column: 3, scope: !9786)
!10020 = !DILocation(line: 2955, column: 3, scope: !9786)
!10021 = !DILocation(line: 2956, column: 3, scope: !9786)
!10022 = !DILocation(line: 2957, column: 124, scope: !9786)
!10023 = !DILocation(line: 2957, column: 139, scope: !9786)
!10024 = !DILocation(line: 2957, column: 153, scope: !9786)
!10025 = !DILocation(line: 2957, column: 167, scope: !9786)
!10026 = !DILocation(line: 2957, column: 13, scope: !9786)
!10027 = !DILocation(line: 2957, column: 11, scope: !9786)
!10028 = !DILocation(line: 2961, column: 5, scope: !9824)
!10029 = !DILocation(line: 2961, column: 16, scope: !9824)
!10030 = !DILocation(line: 2962, column: 20, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !9824, file: !21, line: 2962, column: 5)
!10032 = !DILocation(line: 2962, column: 10, scope: !10031)
!10033 = !DILocation(line: 2962, column: 24, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10031, file: !21, line: 2962, column: 5)
!10035 = !DILocation(line: 2962, column: 35, scope: !10034)
!10036 = !DILocation(line: 2962, column: 5, scope: !10031)
!10037 = !DILocation(line: 2964, column: 5, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10034, file: !21, line: 2962, column: 99)
!10039 = !DILocation(line: 2962, column: 85, scope: !10034)
!10040 = !DILocation(line: 2962, column: 5, scope: !10034)
!10041 = distinct !{!10041, !10036, !10042, !4154}
!10042 = !DILocation(line: 2964, column: 5, scope: !10031)
!10043 = !DILocation(line: 2965, column: 3, scope: !9786)
!10044 = !DILocation(line: 2967, column: 10, scope: !9786)
!10045 = !DILocation(line: 2967, column: 3, scope: !9786)
!10046 = !DILocation(line: 2968, column: 1, scope: !9786)
!10047 = distinct !DISubprogram(name: "__Pyx_ParseOptionalKeywords", scope: !21, file: !21, line: 7655, type: !10048, scopeLine: 7663, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10051)
!10048 = !DISubroutineType(types: !10049)
!10049 = !{!7, !28, !339, !10050, !28, !94, !34, !54}
!10050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!10051 = !{!10052, !10053, !10054, !10055, !10056, !10057, !10058, !10059, !10060, !10061, !10062, !10063, !10064, !10065, !10069, !10073, !10076, !10078, !10079, !10080, !10081}
!10052 = !DILocalVariable(name: "kwds", arg: 1, scope: !10047, file: !21, line: 7656, type: !28)
!10053 = !DILocalVariable(name: "kwvalues", arg: 2, scope: !10047, file: !21, line: 7657, type: !339)
!10054 = !DILocalVariable(name: "argnames", arg: 3, scope: !10047, file: !21, line: 7658, type: !10050)
!10055 = !DILocalVariable(name: "kwds2", arg: 4, scope: !10047, file: !21, line: 7659, type: !28)
!10056 = !DILocalVariable(name: "values", arg: 5, scope: !10047, file: !21, line: 7660, type: !94)
!10057 = !DILocalVariable(name: "num_pos_args", arg: 6, scope: !10047, file: !21, line: 7661, type: !34)
!10058 = !DILocalVariable(name: "function_name", arg: 7, scope: !10047, file: !21, line: 7662, type: !54)
!10059 = !DILocalVariable(name: "key", scope: !10047, file: !21, line: 7664, type: !28)
!10060 = !DILocalVariable(name: "value", scope: !10047, file: !21, line: 7664, type: !28)
!10061 = !DILocalVariable(name: "pos", scope: !10047, file: !21, line: 7665, type: !34)
!10062 = !DILocalVariable(name: "name", scope: !10047, file: !21, line: 7666, type: !10050)
!10063 = !DILocalVariable(name: "first_kw_arg", scope: !10047, file: !21, line: 7667, type: !10050)
!10064 = !DILocalVariable(name: "kwds_is_tuple", scope: !10047, file: !21, line: 7668, type: !7)
!10065 = !DILocalVariable(name: "size", scope: !10066, file: !21, line: 7673, type: !34)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !21, line: 7672, column: 28)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !21, line: 7672, column: 13)
!10068 = distinct !DILexicalBlock(scope: !10047, file: !21, line: 7669, column: 15)
!10069 = !DILocalVariable(name: "cmp", scope: !10070, file: !21, line: 7746, type: !7)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !21, line: 7745, column: 27)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !21, line: 7744, column: 43)
!10072 = distinct !DILexicalBlock(scope: !10068, file: !21, line: 7744, column: 13)
!10073 = !DILocalVariable(name: "argname", scope: !10074, file: !21, line: 7764, type: !10050)
!10074 = distinct !DILexicalBlock(scope: !10075, file: !21, line: 7763, column: 18)
!10075 = distinct !DILexicalBlock(scope: !10071, file: !21, line: 7762, column: 17)
!10076 = !DILocalVariable(name: "cmp", scope: !10077, file: !21, line: 7766, type: !7)
!10077 = distinct !DILexicalBlock(scope: !10074, file: !21, line: 7765, column: 49)
!10078 = !DILabel(scope: !10047, name: "arg_passed_twice", file: !21, line: 7787)
!10079 = !DILabel(scope: !10047, name: "invalid_keyword_type", file: !21, line: 7790)
!10080 = !DILabel(scope: !10047, name: "invalid_keyword", file: !21, line: 7794)
!10081 = !DILabel(scope: !10047, name: "bad", file: !21, line: 7804)
!10082 = !DILocation(line: 7656, column: 15, scope: !10047)
!10083 = !DILocation(line: 7657, column: 22, scope: !10047)
!10084 = !DILocation(line: 7658, column: 16, scope: !10047)
!10085 = !DILocation(line: 7659, column: 15, scope: !10047)
!10086 = !DILocation(line: 7660, column: 15, scope: !10047)
!10087 = !DILocation(line: 7661, column: 16, scope: !10047)
!10088 = !DILocation(line: 7662, column: 17, scope: !10047)
!10089 = !DILocation(line: 7664, column: 5, scope: !10047)
!10090 = !DILocation(line: 7664, column: 15, scope: !10047)
!10091 = !DILocation(line: 7664, column: 25, scope: !10047)
!10092 = !DILocation(line: 7665, column: 5, scope: !10047)
!10093 = !DILocation(line: 7665, column: 16, scope: !10047)
!10094 = !DILocation(line: 7666, column: 5, scope: !10047)
!10095 = !DILocation(line: 7666, column: 17, scope: !10047)
!10096 = !DILocation(line: 7667, column: 5, scope: !10047)
!10097 = !DILocation(line: 7667, column: 17, scope: !10047)
!10098 = !DILocation(line: 7667, column: 32, scope: !10047)
!10099 = !DILocation(line: 7667, column: 43, scope: !10047)
!10100 = !DILocation(line: 7667, column: 41, scope: !10047)
!10101 = !DILocation(line: 7668, column: 5, scope: !10047)
!10102 = !DILocation(line: 7668, column: 9, scope: !10047)
!10103 = !DILocation(line: 7668, column: 49, scope: !10047)
!10104 = !DILocation(line: 7668, column: 46, scope: !10047)
!10105 = !DILocation(line: 7669, column: 5, scope: !10047)
!10106 = !DILocation(line: 7670, column: 9, scope: !10068)
!10107 = !DILocation(line: 7670, column: 30, scope: !10068)
!10108 = !DILocation(line: 7671, column: 9, scope: !10068)
!10109 = !DILocation(line: 7671, column: 34, scope: !10068)
!10110 = !DILocation(line: 7672, column: 13, scope: !10067)
!10111 = !DILocation(line: 7672, column: 13, scope: !10068)
!10112 = !DILocation(line: 7673, column: 13, scope: !10066)
!10113 = !DILocation(line: 7673, column: 24, scope: !10066)
!10114 = !DILocation(line: 7675, column: 20, scope: !10066)
!10115 = !DILocation(line: 7675, column: 18, scope: !10066)
!10116 = !DILocation(line: 7680, column: 17, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10066, file: !21, line: 7680, column: 17)
!10118 = !DILocation(line: 7680, column: 24, scope: !10117)
!10119 = !DILocation(line: 7680, column: 21, scope: !10117)
!10120 = !DILocation(line: 7680, column: 17, scope: !10066)
!10121 = !DILocation(line: 7680, column: 30, scope: !10117)
!10122 = !DILocation(line: 7685, column: 19, scope: !10066)
!10123 = !DILocation(line: 7685, column: 17, scope: !10066)
!10124 = !DILocation(line: 7690, column: 21, scope: !10066)
!10125 = !DILocation(line: 7690, column: 30, scope: !10066)
!10126 = !DILocation(line: 7690, column: 19, scope: !10066)
!10127 = !DILocation(line: 7691, column: 16, scope: !10066)
!10128 = !DILocation(line: 7692, column: 9, scope: !10067)
!10129 = !DILocation(line: 7692, column: 9, scope: !10066)
!10130 = !DILocation(line: 7695, column: 30, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !21, line: 7695, column: 17)
!10132 = distinct !DILexicalBlock(scope: !10067, file: !21, line: 7694, column: 9)
!10133 = !DILocation(line: 7695, column: 18, scope: !10131)
!10134 = !DILocation(line: 7695, column: 17, scope: !10132)
!10135 = !DILocation(line: 7695, column: 57, scope: !10131)
!10136 = !DILocation(line: 7700, column: 16, scope: !10068)
!10137 = !DILocation(line: 7700, column: 14, scope: !10068)
!10138 = !DILocation(line: 7701, column: 9, scope: !10068)
!10139 = !DILocation(line: 7701, column: 17, scope: !10068)
!10140 = !DILocation(line: 7701, column: 16, scope: !10068)
!10141 = !DILocation(line: 7701, column: 22, scope: !10068)
!10142 = !DILocation(line: 7701, column: 28, scope: !10068)
!10143 = !DILocation(line: 7701, column: 27, scope: !10068)
!10144 = !DILocation(line: 7701, column: 26, scope: !10068)
!10145 = !DILocation(line: 7701, column: 36, scope: !10068)
!10146 = !DILocation(line: 7701, column: 33, scope: !10068)
!10147 = !DILocation(line: 0, scope: !10068)
!10148 = !DILocation(line: 7701, column: 46, scope: !10068)
!10149 = distinct !{!10149, !10138, !10148, !4154}
!10150 = !DILocation(line: 7702, column: 14, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10068, file: !21, line: 7702, column: 13)
!10152 = !DILocation(line: 7702, column: 13, scope: !10151)
!10153 = !DILocation(line: 7702, column: 13, scope: !10068)
!10154 = !DILocation(line: 7703, column: 37, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !21, line: 7702, column: 20)
!10156 = !DILocation(line: 7703, column: 13, scope: !10155)
!10157 = !DILocation(line: 7703, column: 20, scope: !10155)
!10158 = !DILocation(line: 7703, column: 25, scope: !10155)
!10159 = !DILocation(line: 7703, column: 24, scope: !10155)
!10160 = !DILocation(line: 7703, column: 35, scope: !10155)
!10161 = !DILocation(line: 7708, column: 17, scope: !10155)
!10162 = !DILocation(line: 7709, column: 19, scope: !10155)
!10163 = !DILocation(line: 7710, column: 13, scope: !10155)
!10164 = distinct !{!10164, !10105, !10165}
!10165 = !DILocation(line: 7783, column: 5, scope: !10047)
!10166 = !DILocation(line: 7713, column: 9, scope: !10068)
!10167 = !DILocation(line: 7715, column: 9, scope: !10068)
!10168 = !DILocation(line: 7716, column: 16, scope: !10068)
!10169 = !DILocation(line: 7716, column: 14, scope: !10068)
!10170 = !DILocation(line: 7744, column: 13, scope: !10072)
!10171 = !DILocation(line: 7744, column: 13, scope: !10068)
!10172 = !DILocation(line: 7745, column: 13, scope: !10071)
!10173 = !DILocation(line: 7745, column: 21, scope: !10071)
!10174 = !DILocation(line: 7745, column: 20, scope: !10071)
!10175 = !DILocation(line: 7746, column: 17, scope: !10070)
!10176 = !DILocation(line: 7746, column: 21, scope: !10070)
!10177 = !DILocation(line: 7748, column: 22, scope: !10070)
!10178 = !DILocation(line: 7748, column: 60, scope: !10070)
!10179 = !DILocation(line: 7748, column: 57, scope: !10070)
!10180 = !DILocation(line: 7748, column: 21, scope: !10070)
!10181 = !DILocation(line: 7750, column: 41, scope: !10070)
!10182 = !DILocation(line: 7750, column: 40, scope: !10070)
!10183 = !DILocation(line: 7750, column: 39, scope: !10070)
!10184 = !DILocation(line: 7750, column: 47, scope: !10070)
!10185 = !DILocation(line: 7750, column: 21, scope: !10070)
!10186 = !DILocation(line: 7752, column: 21, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10070, file: !21, line: 7752, column: 21)
!10188 = !DILocation(line: 7752, column: 25, scope: !10187)
!10189 = !DILocation(line: 7752, column: 29, scope: !10187)
!10190 = !DILocation(line: 7752, column: 32, scope: !10187)
!10191 = !DILocation(line: 7752, column: 21, scope: !10070)
!10192 = !DILocation(line: 7752, column: 60, scope: !10187)
!10193 = !DILocation(line: 7753, column: 21, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10070, file: !21, line: 7753, column: 21)
!10195 = !DILocation(line: 7753, column: 25, scope: !10194)
!10196 = !DILocation(line: 7753, column: 21, scope: !10070)
!10197 = !DILocation(line: 7754, column: 45, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10194, file: !21, line: 7753, column: 31)
!10199 = !DILocation(line: 7754, column: 21, scope: !10198)
!10200 = !DILocation(line: 7754, column: 28, scope: !10198)
!10201 = !DILocation(line: 7754, column: 33, scope: !10198)
!10202 = !DILocation(line: 7754, column: 32, scope: !10198)
!10203 = !DILocation(line: 7754, column: 43, scope: !10198)
!10204 = !DILocation(line: 7758, column: 21, scope: !10198)
!10205 = !DILocation(line: 7760, column: 21, scope: !10070)
!10206 = !DILocation(line: 7761, column: 13, scope: !10071)
!10207 = distinct !{!10207, !10172, !10206, !4154}
!10208 = !DILocation(line: 7762, column: 18, scope: !10075)
!10209 = !DILocation(line: 7762, column: 17, scope: !10075)
!10210 = !DILocation(line: 7762, column: 17, scope: !10071)
!10211 = !DILocation(line: 7762, column: 24, scope: !10075)
!10212 = !DILocation(line: 7764, column: 17, scope: !10074)
!10213 = !DILocation(line: 7764, column: 29, scope: !10074)
!10214 = !DILocation(line: 7764, column: 39, scope: !10074)
!10215 = !DILocation(line: 7765, column: 17, scope: !10074)
!10216 = !DILocation(line: 7765, column: 24, scope: !10074)
!10217 = !DILocation(line: 7765, column: 35, scope: !10074)
!10218 = !DILocation(line: 7765, column: 32, scope: !10074)
!10219 = !DILocation(line: 7766, column: 21, scope: !10077)
!10220 = !DILocation(line: 7766, column: 25, scope: !10077)
!10221 = !DILocation(line: 7766, column: 34, scope: !10077)
!10222 = !DILocation(line: 7766, column: 33, scope: !10077)
!10223 = !DILocation(line: 7766, column: 32, scope: !10077)
!10224 = !DILocation(line: 7766, column: 45, scope: !10077)
!10225 = !DILocation(line: 7766, column: 42, scope: !10077)
!10226 = !DILocation(line: 7766, column: 31, scope: !10077)
!10227 = !DILocation(line: 7768, column: 26, scope: !10077)
!10228 = !DILocation(line: 7768, column: 67, scope: !10077)
!10229 = !DILocation(line: 7768, column: 64, scope: !10077)
!10230 = !DILocation(line: 7768, column: 25, scope: !10077)
!10231 = !DILocation(line: 7770, column: 45, scope: !10077)
!10232 = !DILocation(line: 7770, column: 44, scope: !10077)
!10233 = !DILocation(line: 7770, column: 43, scope: !10077)
!10234 = !DILocation(line: 7770, column: 54, scope: !10077)
!10235 = !DILocation(line: 7770, column: 25, scope: !10077)
!10236 = !DILocation(line: 7771, column: 25, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10077, file: !21, line: 7771, column: 25)
!10238 = !DILocation(line: 7771, column: 29, scope: !10237)
!10239 = !DILocation(line: 7771, column: 33, scope: !10237)
!10240 = !DILocation(line: 7771, column: 36, scope: !10237)
!10241 = !DILocation(line: 7771, column: 25, scope: !10077)
!10242 = !DILocation(line: 7771, column: 64, scope: !10237)
!10243 = !DILocation(line: 7772, column: 25, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10077, file: !21, line: 7772, column: 25)
!10245 = !DILocation(line: 7772, column: 29, scope: !10244)
!10246 = !DILocation(line: 7772, column: 25, scope: !10077)
!10247 = !DILocation(line: 7772, column: 35, scope: !10244)
!10248 = !DILocation(line: 7773, column: 28, scope: !10077)
!10249 = !DILocation(line: 7774, column: 17, scope: !10074)
!10250 = distinct !{!10250, !10215, !10249, !4154}
!10251 = !DILocation(line: 7775, column: 13, scope: !10075)
!10252 = !DILocation(line: 7776, column: 9, scope: !10071)
!10253 = !DILocation(line: 7777, column: 13, scope: !10072)
!10254 = !DILocation(line: 7778, column: 13, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10068, file: !21, line: 7778, column: 13)
!10256 = !DILocation(line: 7778, column: 13, scope: !10068)
!10257 = !DILocation(line: 7779, column: 17, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10259, file: !21, line: 7779, column: 17)
!10259 = distinct !DILexicalBlock(scope: !10255, file: !21, line: 7778, column: 20)
!10260 = !DILocation(line: 7779, column: 17, scope: !10259)
!10261 = !DILocation(line: 7779, column: 62, scope: !10258)
!10262 = !DILocation(line: 7780, column: 9, scope: !10259)
!10263 = !DILocation(line: 7781, column: 13, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10255, file: !21, line: 7780, column: 16)
!10265 = !DILocation(line: 7784, column: 5, scope: !10047)
!10266 = !DILocation(line: 7785, column: 5, scope: !10047)
!10267 = !DILocation(line: 7786, column: 5, scope: !10047)
!10268 = !DILocation(line: 7787, column: 1, scope: !10047)
!10269 = !DILocation(line: 7788, column: 36, scope: !10047)
!10270 = !DILocation(line: 7788, column: 51, scope: !10047)
!10271 = !DILocation(line: 7788, column: 5, scope: !10047)
!10272 = !DILocation(line: 7789, column: 5, scope: !10047)
!10273 = !DILocation(line: 7790, column: 1, scope: !10047)
!10274 = !DILocation(line: 7791, column: 18, scope: !10047)
!10275 = !DILocation(line: 7792, column: 46, scope: !10047)
!10276 = !DILocation(line: 7791, column: 5, scope: !10047)
!10277 = !DILocation(line: 7793, column: 5, scope: !10047)
!10278 = !DILocation(line: 7794, column: 1, scope: !10047)
!10279 = !DILocation(line: 7800, column: 18, scope: !10047)
!10280 = !DILocation(line: 7802, column: 9, scope: !10047)
!10281 = !DILocation(line: 7802, column: 24, scope: !10047)
!10282 = !DILocation(line: 7800, column: 5, scope: !10047)
!10283 = !DILocation(line: 7804, column: 1, scope: !10047)
!10284 = !DILocation(line: 7805, column: 5, scope: !10047)
!10285 = !DILocation(line: 7806, column: 5, scope: !10047)
!10286 = !DILocation(line: 7807, column: 5, scope: !10047)
!10287 = !DILocation(line: 7808, column: 1, scope: !10047)
!10288 = distinct !DISubprogram(name: "__Pyx_RaiseArgtupleInvalid", scope: !21, file: !21, line: 7811, type: !10289, scopeLine: 7817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10291)
!10289 = !DISubroutineType(types: !10290)
!10290 = !{null, !54, !7, !34, !34, !34}
!10291 = !{!10292, !10293, !10294, !10295, !10296, !10297, !10298}
!10292 = !DILocalVariable(name: "func_name", arg: 1, scope: !10288, file: !21, line: 7812, type: !54)
!10293 = !DILocalVariable(name: "exact", arg: 2, scope: !10288, file: !21, line: 7813, type: !7)
!10294 = !DILocalVariable(name: "num_min", arg: 3, scope: !10288, file: !21, line: 7814, type: !34)
!10295 = !DILocalVariable(name: "num_max", arg: 4, scope: !10288, file: !21, line: 7815, type: !34)
!10296 = !DILocalVariable(name: "num_found", arg: 5, scope: !10288, file: !21, line: 7816, type: !34)
!10297 = !DILocalVariable(name: "num_expected", scope: !10288, file: !21, line: 7818, type: !34)
!10298 = !DILocalVariable(name: "more_or_less", scope: !10288, file: !21, line: 7819, type: !54)
!10299 = !DILocation(line: 7812, column: 17, scope: !10288)
!10300 = !DILocation(line: 7813, column: 9, scope: !10288)
!10301 = !DILocation(line: 7814, column: 16, scope: !10288)
!10302 = !DILocation(line: 7815, column: 16, scope: !10288)
!10303 = !DILocation(line: 7816, column: 16, scope: !10288)
!10304 = !DILocation(line: 7818, column: 5, scope: !10288)
!10305 = !DILocation(line: 7818, column: 16, scope: !10288)
!10306 = !DILocation(line: 7819, column: 5, scope: !10288)
!10307 = !DILocation(line: 7819, column: 17, scope: !10288)
!10308 = !DILocation(line: 7820, column: 9, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10288, file: !21, line: 7820, column: 9)
!10310 = !DILocation(line: 7820, column: 21, scope: !10309)
!10311 = !DILocation(line: 7820, column: 19, scope: !10309)
!10312 = !DILocation(line: 7820, column: 9, scope: !10288)
!10313 = !DILocation(line: 7821, column: 24, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10309, file: !21, line: 7820, column: 30)
!10315 = !DILocation(line: 7821, column: 22, scope: !10314)
!10316 = !DILocation(line: 7822, column: 22, scope: !10314)
!10317 = !DILocation(line: 7823, column: 5, scope: !10314)
!10318 = !DILocation(line: 7824, column: 24, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10309, file: !21, line: 7823, column: 12)
!10320 = !DILocation(line: 7824, column: 22, scope: !10319)
!10321 = !DILocation(line: 7825, column: 22, scope: !10319)
!10322 = !DILocation(line: 7827, column: 9, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10288, file: !21, line: 7827, column: 9)
!10324 = !DILocation(line: 7827, column: 9, scope: !10288)
!10325 = !DILocation(line: 7828, column: 22, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10323, file: !21, line: 7827, column: 16)
!10327 = !DILocation(line: 7829, column: 5, scope: !10326)
!10328 = !DILocation(line: 7830, column: 18, scope: !10288)
!10329 = !DILocation(line: 7832, column: 18, scope: !10288)
!10330 = !DILocation(line: 7832, column: 29, scope: !10288)
!10331 = !DILocation(line: 7832, column: 43, scope: !10288)
!10332 = !DILocation(line: 7833, column: 19, scope: !10288)
!10333 = !DILocation(line: 7833, column: 32, scope: !10288)
!10334 = !DILocation(line: 7833, column: 18, scope: !10288)
!10335 = !DILocation(line: 7833, column: 50, scope: !10288)
!10336 = !DILocation(line: 7830, column: 5, scope: !10288)
!10337 = !DILocation(line: 7834, column: 1, scope: !10288)
!10338 = distinct !DISubprogram(name: "__pyx_pf_6Cython_7Runtime_8refnanny_7Context___cinit__", scope: !21, file: !21, line: 2970, type: !10339, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10341)
!10339 = !DISubroutineType(types: !10340)
!10340 = !{!7, !364, !28, !28, !28}
!10341 = !{!10342, !10343, !10344, !10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352, !10353}
!10342 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !10338, file: !21, line: 2970, type: !364)
!10343 = !DILocalVariable(name: "__pyx_v_name", arg: 2, scope: !10338, file: !21, line: 2970, type: !28)
!10344 = !DILocalVariable(name: "__pyx_v_line", arg: 3, scope: !10338, file: !21, line: 2970, type: !28)
!10345 = !DILocalVariable(name: "__pyx_v_filename", arg: 4, scope: !10338, file: !21, line: 2970, type: !28)
!10346 = !DILocalVariable(name: "__pyx_r", scope: !10338, file: !21, line: 2971, type: !7)
!10347 = !DILocalVariable(name: "__pyx_t_1", scope: !10338, file: !21, line: 2973, type: !34)
!10348 = !DILocalVariable(name: "__pyx_t_2", scope: !10338, file: !21, line: 2974, type: !28)
!10349 = !DILocalVariable(name: "__pyx_lineno", scope: !10338, file: !21, line: 2975, type: !7)
!10350 = !DILocalVariable(name: "__pyx_filename", scope: !10338, file: !21, line: 2976, type: !54)
!10351 = !DILocalVariable(name: "__pyx_clineno", scope: !10338, file: !21, line: 2977, type: !7)
!10352 = !DILabel(scope: !10338, name: "__pyx_L1_error", file: !21, line: 3057)
!10353 = !DILabel(scope: !10338, name: "__pyx_L0", file: !21, line: 3061)
!10354 = !DILocation(line: 2970, column: 120, scope: !10338)
!10355 = !DILocation(line: 2970, column: 144, scope: !10338)
!10356 = !DILocation(line: 2970, column: 168, scope: !10338)
!10357 = !DILocation(line: 2970, column: 192, scope: !10338)
!10358 = !DILocation(line: 2971, column: 3, scope: !10338)
!10359 = !DILocation(line: 2971, column: 7, scope: !10338)
!10360 = !DILocation(line: 2973, column: 3, scope: !10338)
!10361 = !DILocation(line: 2973, column: 14, scope: !10338)
!10362 = !DILocation(line: 2974, column: 3, scope: !10338)
!10363 = !DILocation(line: 2974, column: 13, scope: !10338)
!10364 = !DILocation(line: 2975, column: 3, scope: !10338)
!10365 = !DILocation(line: 2975, column: 7, scope: !10338)
!10366 = !DILocation(line: 2976, column: 3, scope: !10338)
!10367 = !DILocation(line: 2976, column: 15, scope: !10338)
!10368 = !DILocation(line: 2977, column: 3, scope: !10338)
!10369 = !DILocation(line: 2977, column: 7, scope: !10338)
!10370 = !DILocation(line: 2987, column: 3, scope: !10338)
!10371 = !DILocation(line: 2990, column: 3, scope: !10338)
!10372 = !DILocation(line: 2991, column: 24, scope: !10338)
!10373 = !DILocation(line: 2991, column: 3, scope: !10338)
!10374 = !DILocation(line: 2991, column: 17, scope: !10338)
!10375 = !DILocation(line: 2991, column: 22, scope: !10338)
!10376 = !DILocation(line: 3000, column: 39, scope: !10338)
!10377 = !DILocation(line: 3000, column: 15, scope: !10338)
!10378 = !DILocation(line: 3000, column: 13, scope: !10338)
!10379 = !DILocation(line: 3000, column: 58, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10338, file: !21, line: 3000, column: 58)
!10381 = !DILocation(line: 0, scope: !10380)
!10382 = !DILocation(line: 3000, column: 58, scope: !10338)
!10383 = !DILocation(line: 3000, column: 119, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !21, line: 3000, column: 119)
!10385 = distinct !DILexicalBlock(scope: !10380, file: !21, line: 3000, column: 119)
!10386 = !DILocation(line: 3000, column: 119, scope: !10385)
!10387 = !DILocation(line: 3001, column: 25, scope: !10338)
!10388 = !DILocation(line: 3001, column: 3, scope: !10338)
!10389 = !DILocation(line: 3001, column: 17, scope: !10338)
!10390 = !DILocation(line: 3001, column: 23, scope: !10338)
!10391 = !DILocation(line: 3010, column: 3, scope: !10338)
!10392 = !DILocation(line: 3013, column: 3, scope: !10338)
!10393 = !DILocation(line: 3014, column: 28, scope: !10338)
!10394 = !DILocation(line: 3014, column: 3, scope: !10338)
!10395 = !DILocation(line: 3014, column: 17, scope: !10338)
!10396 = !DILocation(line: 3014, column: 26, scope: !10338)
!10397 = !DILocation(line: 3023, column: 15, scope: !10338)
!10398 = !DILocation(line: 3023, column: 13, scope: !10338)
!10399 = !DILocation(line: 3023, column: 48, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10338, file: !21, line: 3023, column: 48)
!10401 = !DILocation(line: 3023, column: 48, scope: !10338)
!10402 = !DILocation(line: 3023, column: 70, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !21, line: 3023, column: 70)
!10404 = distinct !DILexicalBlock(scope: !10400, file: !21, line: 3023, column: 70)
!10405 = !DILocation(line: 3023, column: 70, scope: !10404)
!10406 = !DILocation(line: 3027, column: 3, scope: !10338)
!10407 = !DILocation(line: 3028, column: 36, scope: !10338)
!10408 = !DILocation(line: 3028, column: 3, scope: !10338)
!10409 = !DILocation(line: 3028, column: 17, scope: !10338)
!10410 = !DILocation(line: 3028, column: 22, scope: !10338)
!10411 = !DILocation(line: 3029, column: 13, scope: !10338)
!10412 = !DILocation(line: 3038, column: 15, scope: !10338)
!10413 = !DILocation(line: 3038, column: 13, scope: !10338)
!10414 = !DILocation(line: 3038, column: 34, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10338, file: !21, line: 3038, column: 34)
!10416 = !DILocation(line: 3038, column: 34, scope: !10338)
!10417 = !DILocation(line: 3038, column: 56, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !21, line: 3038, column: 56)
!10419 = distinct !DILexicalBlock(scope: !10415, file: !21, line: 3038, column: 56)
!10420 = !DILocation(line: 3038, column: 56, scope: !10419)
!10421 = !DILocation(line: 3042, column: 3, scope: !10338)
!10422 = !DILocation(line: 3043, column: 38, scope: !10338)
!10423 = !DILocation(line: 3043, column: 3, scope: !10338)
!10424 = !DILocation(line: 3043, column: 17, scope: !10338)
!10425 = !DILocation(line: 3043, column: 24, scope: !10338)
!10426 = !DILocation(line: 3044, column: 13, scope: !10338)
!10427 = !DILocation(line: 3055, column: 11, scope: !10338)
!10428 = !DILocation(line: 3056, column: 3, scope: !10338)
!10429 = !DILocation(line: 3057, column: 3, scope: !10338)
!10430 = !DILocation(line: 3058, column: 3, scope: !10338)
!10431 = !DILocation(line: 3059, column: 67, scope: !10338)
!10432 = !DILocation(line: 3059, column: 82, scope: !10338)
!10433 = !DILocation(line: 3059, column: 96, scope: !10338)
!10434 = !DILocation(line: 3059, column: 3, scope: !10338)
!10435 = !DILocation(line: 3060, column: 11, scope: !10338)
!10436 = !DILocation(line: 3060, column: 3, scope: !10338)
!10437 = !DILocation(line: 3061, column: 3, scope: !10338)
!10438 = !DILocation(line: 3063, column: 10, scope: !10338)
!10439 = !DILocation(line: 3064, column: 1, scope: !10338)
!10440 = !DILocation(line: 3063, column: 3, scope: !10338)
!10441 = !DISubprogram(name: "PyUnicode_Compare", scope: !424, file: !424, line: 981, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10442 = distinct !DISubprogram(name: "__Pyx_RaiseDoubleKeywordsError", scope: !21, file: !21, line: 7641, type: !10443, scopeLine: 7644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10445)
!10443 = !DISubroutineType(types: !10444)
!10444 = !{null, !54, !28}
!10445 = !{!10446, !10447}
!10446 = !DILocalVariable(name: "func_name", arg: 1, scope: !10442, file: !21, line: 7642, type: !54)
!10447 = !DILocalVariable(name: "kw_name", arg: 2, scope: !10442, file: !21, line: 7643, type: !28)
!10448 = !DILocation(line: 7642, column: 17, scope: !10442)
!10449 = !DILocation(line: 7643, column: 15, scope: !10442)
!10450 = !DILocation(line: 7645, column: 18, scope: !10442)
!10451 = !DILocation(line: 7647, column: 63, scope: !10442)
!10452 = !DILocation(line: 7647, column: 74, scope: !10442)
!10453 = !DILocation(line: 7645, column: 5, scope: !10442)
!10454 = !DILocation(line: 7652, column: 1, scope: !10442)
!10455 = distinct !DISubprogram(name: "__Pyx_PyIndex_AsSsize_t", scope: !21, file: !21, line: 11251, type: !158, scopeLine: 11251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10456)
!10456 = !{!10457, !10458, !10459, !10460, !10465}
!10457 = !DILocalVariable(name: "b", arg: 1, scope: !10455, file: !21, line: 11251, type: !28)
!10458 = !DILocalVariable(name: "ival", scope: !10455, file: !21, line: 11252, type: !34)
!10459 = !DILocalVariable(name: "x", scope: !10455, file: !21, line: 11253, type: !28)
!10460 = !DILocalVariable(name: "digits", scope: !10461, file: !21, line: 11267, type: !7238)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !21, line: 11266, column: 12)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !21, line: 11264, column: 9)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !21, line: 11262, column: 37)
!10464 = distinct !DILexicalBlock(scope: !10455, file: !21, line: 11262, column: 7)
!10465 = !DILocalVariable(name: "size", scope: !10461, file: !21, line: 11268, type: !4017)
!10466 = !DILocation(line: 11251, column: 67, scope: !10455)
!10467 = !DILocation(line: 11252, column: 3, scope: !10455)
!10468 = !DILocation(line: 11252, column: 14, scope: !10455)
!10469 = !DILocation(line: 11253, column: 3, scope: !10455)
!10470 = !DILocation(line: 11253, column: 13, scope: !10455)
!10471 = !DILocation(line: 11262, column: 7, scope: !10464)
!10472 = !DILocation(line: 11262, column: 7, scope: !10455)
!10473 = !DILocation(line: 11264, column: 9, scope: !10462)
!10474 = !DILocation(line: 11264, column: 9, scope: !10463)
!10475 = !DILocation(line: 11265, column: 16, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10462, file: !21, line: 11264, column: 44)
!10477 = !DILocation(line: 11265, column: 9, scope: !10476)
!10478 = !DILocation(line: 11267, column: 7, scope: !10461)
!10479 = !DILocation(line: 11267, column: 20, scope: !10461)
!10480 = !DILocation(line: 11267, column: 29, scope: !10461)
!10481 = !DILocation(line: 11268, column: 7, scope: !10461)
!10482 = !DILocation(line: 11268, column: 24, scope: !10461)
!10483 = !DILocation(line: 11268, column: 31, scope: !10461)
!10484 = !DILocation(line: 11269, column: 15, scope: !10461)
!10485 = !DILocation(line: 11269, column: 7, scope: !10461)
!10486 = !DILocation(line: 11272, column: 46, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !21, line: 11271, column: 59)
!10488 = distinct !DILexicalBlock(scope: !10489, file: !21, line: 11271, column: 16)
!10489 = distinct !DILexicalBlock(scope: !10461, file: !21, line: 11269, column: 21)
!10490 = !DILocation(line: 11272, column: 38, scope: !10487)
!10491 = !DILocation(line: 11272, column: 57, scope: !10487)
!10492 = !DILocation(line: 11272, column: 84, scope: !10487)
!10493 = !DILocation(line: 11272, column: 76, scope: !10487)
!10494 = !DILocation(line: 11272, column: 74, scope: !10487)
!10495 = !DILocation(line: 11272, column: 14, scope: !10487)
!10496 = !DILocation(line: 11277, column: 47, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !21, line: 11276, column: 59)
!10498 = distinct !DILexicalBlock(scope: !10489, file: !21, line: 11276, column: 16)
!10499 = !DILocation(line: 11277, column: 39, scope: !10497)
!10500 = !DILocation(line: 11277, column: 58, scope: !10497)
!10501 = !DILocation(line: 11277, column: 85, scope: !10497)
!10502 = !DILocation(line: 11277, column: 77, scope: !10497)
!10503 = !DILocation(line: 11277, column: 75, scope: !10497)
!10504 = !DILocation(line: 11277, column: 21, scope: !10497)
!10505 = !DILocation(line: 11277, column: 14, scope: !10497)
!10506 = !DILocation(line: 11284, column: 12, scope: !10489)
!10507 = !DILocation(line: 11289, column: 12, scope: !10489)
!10508 = !DILocation(line: 11294, column: 12, scope: !10489)
!10509 = !DILocation(line: 11299, column: 12, scope: !10489)
!10510 = !DILocation(line: 11301, column: 5, scope: !10462)
!10511 = !DILocation(line: 11303, column: 29, scope: !10463)
!10512 = !DILocation(line: 11303, column: 12, scope: !10463)
!10513 = !DILocation(line: 11303, column: 5, scope: !10463)
!10514 = !DILocation(line: 11305, column: 22, scope: !10455)
!10515 = !DILocation(line: 11305, column: 7, scope: !10455)
!10516 = !DILocation(line: 11305, column: 5, scope: !10455)
!10517 = !DILocation(line: 11306, column: 8, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10455, file: !21, line: 11306, column: 7)
!10519 = !DILocation(line: 11306, column: 7, scope: !10455)
!10520 = !DILocation(line: 11306, column: 11, scope: !10518)
!10521 = !DILocation(line: 11307, column: 26, scope: !10455)
!10522 = !DILocation(line: 11307, column: 10, scope: !10455)
!10523 = !DILocation(line: 11307, column: 8, scope: !10455)
!10524 = !DILocation(line: 11308, column: 3, scope: !10455)
!10525 = !DILocation(line: 11309, column: 10, scope: !10455)
!10526 = !DILocation(line: 11309, column: 3, scope: !10455)
!10527 = !DILocation(line: 11310, column: 1, scope: !10455)
!10528 = !DISubprogram(name: "PyDict_New", scope: !2187, file: !2187, line: 21, type: !575, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10529 = !DISubprogram(name: "PyLong_AsSsize_t", scope: !3901, file: !3901, line: 23, type: !158, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10530 = !DISubprogram(name: "PyNumber_Index", scope: !2616, file: !2616, line: 524, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10531 = distinct !DISubprogram(name: "__Pyx_validate_bases_tuple", scope: !21, file: !21, line: 9533, type: !10532, scopeLine: 9533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10534)
!10532 = !DISubroutineType(types: !10533)
!10533 = !{!7, !54, !34, !28}
!10534 = !{!10535, !10536, !10537, !10538, !10539, !10540, !10544, !10545, !10548}
!10535 = !DILocalVariable(name: "type_name", arg: 1, scope: !10531, file: !21, line: 9533, type: !54)
!10536 = !DILocalVariable(name: "dictoffset", arg: 2, scope: !10531, file: !21, line: 9533, type: !34)
!10537 = !DILocalVariable(name: "bases", arg: 3, scope: !10531, file: !21, line: 9533, type: !28)
!10538 = !DILocalVariable(name: "i", scope: !10531, file: !21, line: 9534, type: !34)
!10539 = !DILocalVariable(name: "n", scope: !10531, file: !21, line: 9534, type: !34)
!10540 = !DILocalVariable(name: "b0", scope: !10541, file: !21, line: 9547, type: !28)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !21, line: 9542, column: 5)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !21, line: 9541, column: 5)
!10543 = distinct !DILexicalBlock(scope: !10531, file: !21, line: 9541, column: 5)
!10544 = !DILocalVariable(name: "b", scope: !10541, file: !21, line: 9552, type: !42)
!10545 = !DILocalVariable(name: "b_name", scope: !10546, file: !21, line: 9567, type: !6576)
!10546 = distinct !DILexicalBlock(scope: !10547, file: !21, line: 9566, column: 9)
!10547 = distinct !DILexicalBlock(scope: !10541, file: !21, line: 9565, column: 13)
!10548 = !DILocalVariable(name: "b_name", scope: !10549, file: !21, line: 9594, type: !6576)
!10549 = distinct !DILexicalBlock(scope: !10550, file: !21, line: 9593, column: 9)
!10550 = distinct !DILexicalBlock(scope: !10541, file: !21, line: 9592, column: 13)
!10551 = !DILocation(line: 9533, column: 51, scope: !10531)
!10552 = !DILocation(line: 9533, column: 73, scope: !10531)
!10553 = !DILocation(line: 9533, column: 95, scope: !10531)
!10554 = !DILocation(line: 9534, column: 5, scope: !10531)
!10555 = !DILocation(line: 9534, column: 16, scope: !10531)
!10556 = !DILocation(line: 9534, column: 19, scope: !10531)
!10557 = !DILocation(line: 9536, column: 9, scope: !10531)
!10558 = !DILocation(line: 9536, column: 7, scope: !10531)
!10559 = !DILocation(line: 9541, column: 12, scope: !10543)
!10560 = !DILocation(line: 9541, column: 10, scope: !10543)
!10561 = !DILocation(line: 9541, column: 17, scope: !10542)
!10562 = !DILocation(line: 9541, column: 21, scope: !10542)
!10563 = !DILocation(line: 9541, column: 19, scope: !10542)
!10564 = !DILocation(line: 9541, column: 5, scope: !10543)
!10565 = !DILocation(line: 9547, column: 9, scope: !10541)
!10566 = !DILocation(line: 9547, column: 19, scope: !10541)
!10567 = !DILocation(line: 9547, column: 24, scope: !10541)
!10568 = !DILocation(line: 9552, column: 9, scope: !10541)
!10569 = !DILocation(line: 9552, column: 23, scope: !10541)
!10570 = !DILocation(line: 9564, column: 29, scope: !10541)
!10571 = !DILocation(line: 9564, column: 11, scope: !10541)
!10572 = !DILocation(line: 9565, column: 14, scope: !10547)
!10573 = !DILocation(line: 9565, column: 13, scope: !10541)
!10574 = !DILocation(line: 9567, column: 13, scope: !10546)
!10575 = !DILocation(line: 9567, column: 28, scope: !10546)
!10576 = !DILocation(line: 9567, column: 37, scope: !10546)
!10577 = !DILocation(line: 9568, column: 26, scope: !10546)
!10578 = !DILocation(line: 9569, column: 75, scope: !10546)
!10579 = !DILocation(line: 9568, column: 13, scope: !10546)
!10580 = !DILocation(line: 9574, column: 13, scope: !10546)
!10581 = !DILocation(line: 9575, column: 9, scope: !10547)
!10582 = !DILocation(line: 9592, column: 13, scope: !10550)
!10583 = !DILocation(line: 9592, column: 24, scope: !10550)
!10584 = !DILocation(line: 9592, column: 29, scope: !10550)
!10585 = !DILocation(line: 9592, column: 32, scope: !10550)
!10586 = !DILocation(line: 9592, column: 35, scope: !10550)
!10587 = !DILocation(line: 9592, column: 13, scope: !10541)
!10588 = !DILocation(line: 9594, column: 13, scope: !10549)
!10589 = !DILocation(line: 9594, column: 28, scope: !10549)
!10590 = !DILocation(line: 9594, column: 37, scope: !10549)
!10591 = !DILocation(line: 9595, column: 26, scope: !10549)
!10592 = !DILocation(line: 9600, column: 17, scope: !10549)
!10593 = !DILocation(line: 9600, column: 28, scope: !10549)
!10594 = !DILocation(line: 9595, column: 13, scope: !10549)
!10595 = !DILocation(line: 9605, column: 13, scope: !10549)
!10596 = !DILocation(line: 9606, column: 9, scope: !10550)
!10597 = !DILocation(line: 9611, column: 5, scope: !10542)
!10598 = !DILocation(line: 9611, column: 5, scope: !10541)
!10599 = !DILocation(line: 9541, column: 25, scope: !10542)
!10600 = !DILocation(line: 9541, column: 5, scope: !10542)
!10601 = distinct !{!10601, !10564, !10602, !4154}
!10602 = !DILocation(line: 9611, column: 5, scope: !10543)
!10603 = !DILocation(line: 9612, column: 5, scope: !10531)
!10604 = !DILocation(line: 9613, column: 1, scope: !10531)
!10605 = !DISubprogram(name: "PyGC_Disable", scope: !9534, file: !9534, line: 157, type: !637, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10606 = !DISubprogram(name: "PyGC_Enable", scope: !9534, file: !9534, line: 156, type: !637, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10607 = !DISubprogram(name: "PyCapsule_New", scope: !10608, file: !10608, line: 28, type: !10609, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10608 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pycapsule.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "bc4a90e95c580fae2ea2e52ffdbca7b9")
!10609 = !DISubroutineType(types: !10610)
!10610 = !{!28, !27, !54, !10611}
!10611 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCapsule_Destructor", file: !10608, line: 23, baseType: !61)
!10612 = !DISubprogram(name: "malloc", scope: !10613, file: !10613, line: 540, type: !10614, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10613 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "02258fad21adf111bb9df9825e61954a")
!10614 = !DISubroutineType(types: !10615)
!10615 = !{!27, !341}
!10616 = distinct !DISubprogram(name: "__Pyx_GetVtable", scope: !21, file: !21, line: 9759, type: !10617, scopeLine: 9759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!27, !42}
!10619 = !{!10620, !10621, !10622, !10623}
!10620 = !DILocalVariable(name: "type", arg: 1, scope: !10616, file: !21, line: 9759, type: !42)
!10621 = !DILocalVariable(name: "ptr", scope: !10616, file: !21, line: 9760, type: !27)
!10622 = !DILocalVariable(name: "ob", scope: !10616, file: !21, line: 9764, type: !28)
!10623 = !DILabel(scope: !10616, name: "bad", file: !21, line: 9773)
!10624 = !DILocation(line: 9759, column: 44, scope: !10616)
!10625 = !DILocation(line: 9760, column: 5, scope: !10616)
!10626 = !DILocation(line: 9760, column: 11, scope: !10616)
!10627 = !DILocation(line: 9764, column: 5, scope: !10616)
!10628 = !DILocation(line: 9764, column: 15, scope: !10616)
!10629 = !DILocation(line: 9764, column: 37, scope: !10616)
!10630 = !DILocation(line: 9764, column: 43, scope: !10616)
!10631 = !DILocation(line: 9764, column: 52, scope: !10616)
!10632 = !DILocation(line: 9764, column: 20, scope: !10616)
!10633 = !DILocation(line: 9766, column: 10, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10616, file: !21, line: 9766, column: 9)
!10635 = !DILocation(line: 9766, column: 9, scope: !10616)
!10636 = !DILocation(line: 9767, column: 9, scope: !10634)
!10637 = !DILocation(line: 9768, column: 32, scope: !10616)
!10638 = !DILocation(line: 9768, column: 11, scope: !10616)
!10639 = !DILocation(line: 9768, column: 9, scope: !10616)
!10640 = !DILocation(line: 9769, column: 10, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10616, file: !21, line: 9769, column: 9)
!10642 = !DILocation(line: 9769, column: 14, scope: !10641)
!10643 = !DILocation(line: 9769, column: 18, scope: !10641)
!10644 = !DILocation(line: 9769, column: 9, scope: !10616)
!10645 = !DILocation(line: 9770, column: 25, scope: !10641)
!10646 = !DILocation(line: 9770, column: 9, scope: !10641)
!10647 = !DILocation(line: 9771, column: 5, scope: !10616)
!10648 = !DILocation(line: 9772, column: 12, scope: !10616)
!10649 = !DILocation(line: 9772, column: 5, scope: !10616)
!10650 = !DILocation(line: 9773, column: 1, scope: !10616)
!10651 = !DILocation(line: 9774, column: 5, scope: !10616)
!10652 = !DILocation(line: 9775, column: 5, scope: !10616)
!10653 = !DILocation(line: 9776, column: 1, scope: !10616)
!10654 = !DISubprogram(name: "free", scope: !10613, file: !10613, line: 555, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10655 = !DISubprogram(name: "PyObject_GetItem", scope: !2616, file: !2616, line: 289, type: !105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10656 = !DISubprogram(name: "PyCapsule_GetPointer", scope: !10608, file: !10608, line: 33, type: !10657, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10657 = !DISubroutineType(types: !10658)
!10658 = !{!27, !28, !54}
!10659 = !DISubprogram(name: "PyImport_ImportModule", scope: !2195, file: !2195, line: 46, type: !2196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10660 = distinct !DISubprogram(name: "__Pyx_ImportType_3_0_4", scope: !21, file: !21, line: 9834, type: !10661, scopeLine: 9836, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10663)
!10661 = !DISubroutineType(types: !10662)
!10662 = !{!42, !28, !54, !54, !341, !341, !20}
!10663 = !{!10664, !10665, !10666, !10667, !10668, !10669, !10670, !10671, !10672, !10673, !10674}
!10664 = !DILocalVariable(name: "module", arg: 1, scope: !10660, file: !21, line: 9834, type: !28)
!10665 = !DILocalVariable(name: "module_name", arg: 2, scope: !10660, file: !21, line: 9834, type: !54)
!10666 = !DILocalVariable(name: "class_name", arg: 3, scope: !10660, file: !21, line: 9834, type: !54)
!10667 = !DILocalVariable(name: "size", arg: 4, scope: !10660, file: !21, line: 9835, type: !341)
!10668 = !DILocalVariable(name: "alignment", arg: 5, scope: !10660, file: !21, line: 9835, type: !341)
!10669 = !DILocalVariable(name: "check_size", arg: 6, scope: !10660, file: !21, line: 9835, type: !20)
!10670 = !DILocalVariable(name: "result", scope: !10660, file: !21, line: 9837, type: !28)
!10671 = !DILocalVariable(name: "warning", scope: !10660, file: !21, line: 9838, type: !2210)
!10672 = !DILocalVariable(name: "basicsize", scope: !10660, file: !21, line: 9839, type: !34)
!10673 = !DILocalVariable(name: "itemsize", scope: !10660, file: !21, line: 9840, type: !34)
!10674 = !DILabel(scope: !10660, name: "bad", file: !21, line: 9905)
!10675 = !DILocation(line: 9834, column: 55, scope: !10660)
!10676 = !DILocation(line: 9834, column: 75, scope: !10660)
!10677 = !DILocation(line: 9834, column: 100, scope: !10660)
!10678 = !DILocation(line: 9835, column: 12, scope: !10660)
!10679 = !DILocation(line: 9835, column: 25, scope: !10660)
!10680 = !DILocation(line: 9835, column: 74, scope: !10660)
!10681 = !DILocation(line: 9837, column: 5, scope: !10660)
!10682 = !DILocation(line: 9837, column: 15, scope: !10660)
!10683 = !DILocation(line: 9838, column: 5, scope: !10660)
!10684 = !DILocation(line: 9838, column: 10, scope: !10660)
!10685 = !DILocation(line: 9839, column: 5, scope: !10660)
!10686 = !DILocation(line: 9839, column: 16, scope: !10660)
!10687 = !DILocation(line: 9840, column: 5, scope: !10660)
!10688 = !DILocation(line: 9840, column: 16, scope: !10660)
!10689 = !DILocation(line: 9845, column: 37, scope: !10660)
!10690 = !DILocation(line: 9845, column: 45, scope: !10660)
!10691 = !DILocation(line: 9845, column: 14, scope: !10660)
!10692 = !DILocation(line: 9845, column: 12, scope: !10660)
!10693 = !DILocation(line: 9846, column: 10, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10660, file: !21, line: 9846, column: 9)
!10695 = !DILocation(line: 9846, column: 9, scope: !10660)
!10696 = !DILocation(line: 9847, column: 9, scope: !10694)
!10697 = !DILocation(line: 9848, column: 10, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10660, file: !21, line: 9848, column: 9)
!10699 = !DILocation(line: 9848, column: 9, scope: !10660)
!10700 = !DILocation(line: 9849, column: 22, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10698, file: !21, line: 9848, column: 32)
!10702 = !DILocation(line: 9851, column: 13, scope: !10701)
!10703 = !DILocation(line: 9851, column: 26, scope: !10701)
!10704 = !DILocation(line: 9849, column: 9, scope: !10701)
!10705 = !DILocation(line: 9852, column: 9, scope: !10701)
!10706 = !DILocation(line: 9855, column: 34, scope: !10660)
!10707 = !DILocation(line: 9855, column: 43, scope: !10660)
!10708 = !{!1897, !1837, i64 32}
!10709 = !DILocation(line: 9855, column: 15, scope: !10660)
!10710 = !DILocation(line: 9856, column: 33, scope: !10660)
!10711 = !DILocation(line: 9856, column: 42, scope: !10660)
!10712 = !{!1897, !1837, i64 40}
!10713 = !DILocation(line: 9856, column: 14, scope: !10660)
!10714 = !DILocation(line: 9875, column: 9, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10660, file: !21, line: 9875, column: 9)
!10716 = !DILocation(line: 9875, column: 9, scope: !10660)
!10717 = !DILocation(line: 9876, column: 13, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !21, line: 9876, column: 13)
!10719 = distinct !DILexicalBlock(scope: !10715, file: !21, line: 9875, column: 19)
!10720 = !DILocation(line: 9876, column: 20, scope: !10718)
!10721 = !DILocation(line: 9876, column: 18, scope: !10718)
!10722 = !DILocation(line: 9876, column: 13, scope: !10719)
!10723 = !DILocation(line: 9877, column: 25, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10718, file: !21, line: 9876, column: 31)
!10725 = !DILocation(line: 9877, column: 32, scope: !10724)
!10726 = !DILocation(line: 9877, column: 30, scope: !10724)
!10727 = !DILocation(line: 9877, column: 23, scope: !10724)
!10728 = !DILocation(line: 9878, column: 9, scope: !10724)
!10729 = !DILocation(line: 9879, column: 13, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10719, file: !21, line: 9879, column: 13)
!10731 = !DILocation(line: 9879, column: 36, scope: !10730)
!10732 = !DILocation(line: 9879, column: 22, scope: !10730)
!10733 = !DILocation(line: 9879, column: 13, scope: !10719)
!10734 = !DILocation(line: 9880, column: 36, scope: !10730)
!10735 = !DILocation(line: 9880, column: 22, scope: !10730)
!10736 = !DILocation(line: 9880, column: 13, scope: !10730)
!10737 = !DILocation(line: 9881, column: 5, scope: !10719)
!10738 = !DILocation(line: 9882, column: 18, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10660, file: !21, line: 9882, column: 9)
!10740 = !DILocation(line: 9882, column: 30, scope: !10739)
!10741 = !DILocation(line: 9882, column: 28, scope: !10739)
!10742 = !DILocation(line: 9882, column: 42, scope: !10739)
!10743 = !DILocation(line: 9882, column: 40, scope: !10739)
!10744 = !DILocation(line: 9882, column: 9, scope: !10660)
!10745 = !DILocation(line: 9883, column: 22, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10739, file: !21, line: 9882, column: 48)
!10747 = !DILocation(line: 9886, column: 13, scope: !10746)
!10748 = !DILocation(line: 9886, column: 26, scope: !10746)
!10749 = !DILocation(line: 9886, column: 38, scope: !10746)
!10750 = !DILocation(line: 9886, column: 44, scope: !10746)
!10751 = !DILocation(line: 9886, column: 54, scope: !10746)
!10752 = !DILocation(line: 9886, column: 53, scope: !10746)
!10753 = !DILocation(line: 9883, column: 9, scope: !10746)
!10754 = !DILocation(line: 9887, column: 9, scope: !10746)
!10755 = !DILocation(line: 9889, column: 9, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10660, file: !21, line: 9889, column: 9)
!10757 = !DILocation(line: 9889, column: 20, scope: !10756)
!10758 = !DILocation(line: 9889, column: 62, scope: !10756)
!10759 = !DILocation(line: 9890, column: 22, scope: !10756)
!10760 = !DILocation(line: 9890, column: 34, scope: !10756)
!10761 = !DILocation(line: 9890, column: 32, scope: !10756)
!10762 = !DILocation(line: 9890, column: 39, scope: !10756)
!10763 = !DILocation(line: 9890, column: 51, scope: !10756)
!10764 = !DILocation(line: 9890, column: 63, scope: !10756)
!10765 = !DILocation(line: 9890, column: 61, scope: !10756)
!10766 = !DILocation(line: 9890, column: 75, scope: !10756)
!10767 = !DILocation(line: 9890, column: 73, scope: !10756)
!10768 = !DILocation(line: 9889, column: 9, scope: !10660)
!10769 = !DILocation(line: 9891, column: 22, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10756, file: !21, line: 9890, column: 82)
!10771 = !DILocation(line: 9894, column: 13, scope: !10770)
!10772 = !DILocation(line: 9894, column: 26, scope: !10770)
!10773 = !DILocation(line: 9894, column: 38, scope: !10770)
!10774 = !DILocation(line: 9894, column: 44, scope: !10770)
!10775 = !DILocation(line: 9894, column: 55, scope: !10770)
!10776 = !DILocation(line: 9894, column: 65, scope: !10770)
!10777 = !DILocation(line: 9894, column: 64, scope: !10770)
!10778 = !DILocation(line: 9891, column: 9, scope: !10770)
!10779 = !DILocation(line: 9895, column: 9, scope: !10770)
!10780 = !DILocation(line: 9897, column: 14, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10756, file: !21, line: 9897, column: 14)
!10782 = !DILocation(line: 9897, column: 25, scope: !10781)
!10783 = !DILocation(line: 9897, column: 66, scope: !10781)
!10784 = !DILocation(line: 9897, column: 77, scope: !10781)
!10785 = !DILocation(line: 9897, column: 89, scope: !10781)
!10786 = !DILocation(line: 9897, column: 87, scope: !10781)
!10787 = !DILocation(line: 9897, column: 14, scope: !10756)
!10788 = !DILocation(line: 9898, column: 23, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10781, file: !21, line: 9897, column: 95)
!10790 = !DILocation(line: 9901, column: 13, scope: !10789)
!10791 = !DILocation(line: 9901, column: 26, scope: !10789)
!10792 = !DILocation(line: 9901, column: 38, scope: !10789)
!10793 = !DILocation(line: 9901, column: 44, scope: !10789)
!10794 = !DILocation(line: 9898, column: 9, scope: !10789)
!10795 = !DILocation(line: 9902, column: 32, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10789, file: !21, line: 9902, column: 13)
!10797 = !DILocation(line: 9902, column: 13, scope: !10796)
!10798 = !DILocation(line: 9902, column: 44, scope: !10796)
!10799 = !DILocation(line: 9902, column: 13, scope: !10789)
!10800 = !DILocation(line: 9902, column: 49, scope: !10796)
!10801 = !DILocation(line: 9903, column: 5, scope: !10789)
!10802 = !DILocation(line: 9904, column: 28, scope: !10660)
!10803 = !DILocation(line: 9904, column: 5, scope: !10660)
!10804 = !DILocation(line: 9905, column: 1, scope: !10660)
!10805 = !DILocation(line: 9906, column: 5, scope: !10660)
!10806 = !DILocation(line: 9907, column: 5, scope: !10660)
!10807 = !DILocation(line: 9908, column: 1, scope: !10660)
!10808 = !DISubprogram(name: "PyObject_Call", scope: !2616, file: !2616, line: 158, type: !114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10809 = distinct !DISubprogram(name: "Py_XINCREF", scope: !6, file: !6, line: 589, type: !62, scopeLine: 590, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10810)
!10810 = !{!10811}
!10811 = !DILocalVariable(name: "op", arg: 1, scope: !10809, file: !6, line: 589, type: !28)
!10812 = !DILocation(line: 589, column: 41, scope: !10809)
!10813 = !DILocation(line: 591, column: 9, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10809, file: !6, line: 591, column: 9)
!10815 = !DILocation(line: 591, column: 12, scope: !10814)
!10816 = !DILocation(line: 591, column: 9, scope: !10809)
!10817 = !DILocation(line: 592, column: 9, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10814, file: !6, line: 591, column: 25)
!10819 = !DILocation(line: 593, column: 5, scope: !10818)
!10820 = !DILocation(line: 594, column: 1, scope: !10809)
!10821 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_GIVEREF_and_report", scope: !21, file: !21, line: 4988, type: !10822, scopeLine: 4988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10824)
!10822 = !DISubroutineType(types: !10823)
!10823 = !{!7, !28, !28, !34}
!10824 = !{!10825, !10826, !10827, !10828, !10829, !10830, !10831, !10832, !10833, !10834, !10835, !10836, !10837, !10838, !10839, !10840, !10841, !10842, !10843, !10844, !10845, !10846, !10847, !10850, !10851, !10852, !10853, !10854, !10856, !10858, !10859}
!10825 = !DILocalVariable(name: "__pyx_v_ctx", arg: 1, scope: !10821, file: !21, line: 4988, type: !28)
!10826 = !DILocalVariable(name: "__pyx_v_p_obj", arg: 2, scope: !10821, file: !21, line: 4988, type: !28)
!10827 = !DILocalVariable(name: "__pyx_v_lineno", arg: 3, scope: !10821, file: !21, line: 4988, type: !34)
!10828 = !DILocalVariable(name: "__pyx_v_type", scope: !10821, file: !21, line: 4989, type: !28)
!10829 = !DILocalVariable(name: "__pyx_v_value", scope: !10821, file: !21, line: 4990, type: !28)
!10830 = !DILocalVariable(name: "__pyx_v_tb", scope: !10821, file: !21, line: 4991, type: !28)
!10831 = !DILocalVariable(name: "__pyx_v_decref_ok", scope: !10821, file: !21, line: 4992, type: !7)
!10832 = !DILocalVariable(name: "__pyx_r", scope: !10821, file: !21, line: 4993, type: !7)
!10833 = !DILocalVariable(name: "__pyx_t_1", scope: !10821, file: !21, line: 4995, type: !7)
!10834 = !DILocalVariable(name: "__pyx_t_2", scope: !10821, file: !21, line: 4996, type: !28)
!10835 = !DILocalVariable(name: "__pyx_t_3", scope: !10821, file: !21, line: 4997, type: !28)
!10836 = !DILocalVariable(name: "__pyx_t_4", scope: !10821, file: !21, line: 4998, type: !28)
!10837 = !DILocalVariable(name: "__pyx_t_5", scope: !10821, file: !21, line: 4999, type: !28)
!10838 = !DILocalVariable(name: "__pyx_t_6", scope: !10821, file: !21, line: 5000, type: !28)
!10839 = !DILocalVariable(name: "__pyx_t_7", scope: !10821, file: !21, line: 5001, type: !28)
!10840 = !DILocalVariable(name: "__pyx_t_8", scope: !10821, file: !21, line: 5002, type: !28)
!10841 = !DILocalVariable(name: "__pyx_t_9", scope: !10821, file: !21, line: 5003, type: !28)
!10842 = !DILocalVariable(name: "__pyx_t_10", scope: !10821, file: !21, line: 5004, type: !28)
!10843 = !DILocalVariable(name: "__pyx_t_11", scope: !10821, file: !21, line: 5005, type: !28)
!10844 = !DILocalVariable(name: "__pyx_lineno", scope: !10821, file: !21, line: 5006, type: !7)
!10845 = !DILocalVariable(name: "__pyx_filename", scope: !10821, file: !21, line: 5007, type: !54)
!10846 = !DILocalVariable(name: "__pyx_clineno", scope: !10821, file: !21, line: 5008, type: !7)
!10847 = !DILocalVariable(name: "__pyx_tstate", scope: !10848, file: !21, line: 5062, type: !1260)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !21, line: 5061, column: 5)
!10849 = distinct !DILexicalBlock(scope: !10821, file: !21, line: 5060, column: 12)
!10850 = !DILabel(scope: !10848, name: "__pyx_L7_error", file: !21, line: 5109)
!10851 = !DILabel(scope: !10848, name: "__pyx_L9_except_error", file: !21, line: 5150)
!10852 = !DILabel(scope: !10848, name: "__pyx_L8_exception_handled", file: !21, line: 5156)
!10853 = !DILabel(scope: !10848, name: "__pyx_L12_try_end", file: !21, line: 5161)
!10854 = !DILabel(scope: !10855, name: "__pyx_L5_error", file: !21, line: 5186)
!10855 = distinct !DILexicalBlock(scope: !10821, file: !21, line: 5172, column: 16)
!10856 = !DILocalVariable(name: "__pyx_tstate", scope: !10857, file: !21, line: 5188, type: !1260)
!10857 = distinct !DILexicalBlock(scope: !10855, file: !21, line: 5187, column: 24)
!10858 = !DILabel(scope: !10857, name: "__pyx_L15_return", file: !21, line: 5224)
!10859 = !DILabel(scope: !10821, name: "__pyx_L0", file: !21, line: 5248)
!10860 = !DILocation(line: 4988, column: 76, scope: !10821)
!10861 = !DILocation(line: 4988, column: 99, scope: !10821)
!10862 = !DILocation(line: 4988, column: 125, scope: !10821)
!10863 = !DILocation(line: 4989, column: 3, scope: !10821)
!10864 = !DILocation(line: 4989, column: 13, scope: !10821)
!10865 = !DILocation(line: 4990, column: 3, scope: !10821)
!10866 = !DILocation(line: 4990, column: 13, scope: !10821)
!10867 = !DILocation(line: 4991, column: 3, scope: !10821)
!10868 = !DILocation(line: 4991, column: 13, scope: !10821)
!10869 = !DILocation(line: 4992, column: 3, scope: !10821)
!10870 = !DILocation(line: 4992, column: 7, scope: !10821)
!10871 = !DILocation(line: 4993, column: 3, scope: !10821)
!10872 = !DILocation(line: 4993, column: 7, scope: !10821)
!10873 = !DILocation(line: 4995, column: 3, scope: !10821)
!10874 = !DILocation(line: 4995, column: 7, scope: !10821)
!10875 = !DILocation(line: 4996, column: 3, scope: !10821)
!10876 = !DILocation(line: 4996, column: 13, scope: !10821)
!10877 = !DILocation(line: 4997, column: 3, scope: !10821)
!10878 = !DILocation(line: 4997, column: 13, scope: !10821)
!10879 = !DILocation(line: 4998, column: 3, scope: !10821)
!10880 = !DILocation(line: 4998, column: 13, scope: !10821)
!10881 = !DILocation(line: 4999, column: 3, scope: !10821)
!10882 = !DILocation(line: 4999, column: 13, scope: !10821)
!10883 = !DILocation(line: 5000, column: 3, scope: !10821)
!10884 = !DILocation(line: 5000, column: 13, scope: !10821)
!10885 = !DILocation(line: 5001, column: 3, scope: !10821)
!10886 = !DILocation(line: 5001, column: 13, scope: !10821)
!10887 = !DILocation(line: 5002, column: 3, scope: !10821)
!10888 = !DILocation(line: 5002, column: 13, scope: !10821)
!10889 = !DILocation(line: 5003, column: 3, scope: !10821)
!10890 = !DILocation(line: 5003, column: 13, scope: !10821)
!10891 = !DILocation(line: 5004, column: 3, scope: !10821)
!10892 = !DILocation(line: 5004, column: 13, scope: !10821)
!10893 = !DILocation(line: 5005, column: 3, scope: !10821)
!10894 = !DILocation(line: 5005, column: 13, scope: !10821)
!10895 = !DILocation(line: 5006, column: 3, scope: !10821)
!10896 = !DILocation(line: 5006, column: 7, scope: !10821)
!10897 = !DILocation(line: 5007, column: 3, scope: !10821)
!10898 = !DILocation(line: 5007, column: 15, scope: !10821)
!10899 = !DILocation(line: 5008, column: 3, scope: !10821)
!10900 = !DILocation(line: 5008, column: 7, scope: !10821)
!10901 = !DILocation(line: 5018, column: 16, scope: !10821)
!10902 = !DILocation(line: 5018, column: 28, scope: !10821)
!10903 = !DILocation(line: 5018, column: 13, scope: !10821)
!10904 = !DILocation(line: 5019, column: 7, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10821, file: !21, line: 5019, column: 7)
!10906 = !DILocation(line: 5019, column: 7, scope: !10821)
!10907 = !DILocation(line: 5020, column: 13, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10905, file: !21, line: 5019, column: 18)
!10909 = !DILocation(line: 5021, column: 5, scope: !10908)
!10910 = !DILocation(line: 5031, column: 16, scope: !10821)
!10911 = !DILocation(line: 5032, column: 17, scope: !10821)
!10912 = !DILocation(line: 5033, column: 14, scope: !10821)
!10913 = !DILocation(line: 5042, column: 21, scope: !10821)
!10914 = !DILocation(line: 5051, column: 3, scope: !10821)
!10915 = !DILocation(line: 5062, column: 7, scope: !10848)
!10916 = !DILocation(line: 5063, column: 7, scope: !10848)
!10917 = !DILocation(line: 5064, column: 7, scope: !10848)
!10918 = !DILocation(line: 5077, column: 22, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10848, file: !21, line: 5068, column: 16)
!10920 = !DILocation(line: 5077, column: 36, scope: !10919)
!10921 = !DILocation(line: 5077, column: 19, scope: !10919)
!10922 = !DILocation(line: 5078, column: 13, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10919, file: !21, line: 5078, column: 13)
!10924 = !DILocation(line: 5078, column: 13, scope: !10919)
!10925 = !DILocation(line: 5079, column: 11, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10923, file: !21, line: 5078, column: 24)
!10927 = !DILocation(line: 5080, column: 36, scope: !10926)
!10928 = !DILocation(line: 5080, column: 21, scope: !10926)
!10929 = !DILocation(line: 5081, column: 9, scope: !10926)
!10930 = !DILocation(line: 5082, column: 11, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10923, file: !21, line: 5081, column: 16)
!10932 = !DILocation(line: 5083, column: 21, scope: !10931)
!10933 = !DILocation(line: 5093, column: 128, scope: !10919)
!10934 = !DILocation(line: 5093, column: 142, scope: !10919)
!10935 = !DILocation(line: 5093, column: 153, scope: !10919)
!10936 = !DILocation(line: 5093, column: 170, scope: !10919)
!10937 = !DILocation(line: 5093, column: 184, scope: !10919)
!10938 = !DILocation(line: 5093, column: 21, scope: !10919)
!10939 = !DILocation(line: 5093, column: 19, scope: !10919)
!10940 = !DILocation(line: 5093, column: 199, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10919, file: !21, line: 5093, column: 199)
!10942 = !DILocation(line: 5093, column: 199, scope: !10919)
!10943 = !DILocation(line: 5093, column: 233, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10945, file: !21, line: 5093, column: 233)
!10945 = distinct !DILexicalBlock(scope: !10941, file: !21, line: 5093, column: 233)
!10946 = !DILocation(line: 5093, column: 233, scope: !10945)
!10947 = !DILocation(line: 5094, column: 9, scope: !10919)
!10948 = !DILocation(line: 5094, column: 44, scope: !10919)
!10949 = !DILocation(line: 5095, column: 29, scope: !10919)
!10950 = !DILocation(line: 5095, column: 27, scope: !10919)
!10951 = !DILocation(line: 5105, column: 7, scope: !10848)
!10952 = !DILocation(line: 5105, column: 43, scope: !10848)
!10953 = !DILocation(line: 5106, column: 7, scope: !10848)
!10954 = !DILocation(line: 5106, column: 43, scope: !10848)
!10955 = !DILocation(line: 5107, column: 7, scope: !10848)
!10956 = !DILocation(line: 5107, column: 43, scope: !10848)
!10957 = !DILocation(line: 5108, column: 7, scope: !10848)
!10958 = !DILocation(line: 5109, column: 7, scope: !10848)
!10959 = !DILocation(line: 5110, column: 7, scope: !10848)
!10960 = !DILocation(line: 5110, column: 43, scope: !10848)
!10961 = !DILocation(line: 5120, column: 74, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10848, file: !21, line: 5119, column: 19)
!10963 = !DILocation(line: 5120, column: 89, scope: !10962)
!10964 = !DILocation(line: 5120, column: 103, scope: !10962)
!10965 = !DILocation(line: 5120, column: 9, scope: !10962)
!10966 = !DILocation(line: 5121, column: 13, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10962, file: !21, line: 5121, column: 13)
!10968 = !DILocation(line: 5121, column: 68, scope: !10967)
!10969 = !DILocation(line: 5121, column: 13, scope: !10962)
!10970 = !DILocation(line: 5121, column: 73, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !21, line: 5121, column: 73)
!10972 = distinct !DILexicalBlock(scope: !10967, file: !21, line: 5121, column: 73)
!10973 = !DILocation(line: 5121, column: 73, scope: !10972)
!10974 = !DILocation(line: 5133, column: 77, scope: !10962)
!10975 = !DILocation(line: 5133, column: 91, scope: !10962)
!10976 = !DILocation(line: 5133, column: 19, scope: !10962)
!10977 = !DILocation(line: 5134, column: 9, scope: !10962)
!10978 = !DILocation(line: 5135, column: 62, scope: !10962)
!10979 = !DILocation(line: 5135, column: 129, scope: !10962)
!10980 = !DILocation(line: 5135, column: 143, scope: !10962)
!10981 = !DILocation(line: 5135, column: 9, scope: !10962)
!10982 = !DILocation(line: 5135, column: 161, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10962, file: !21, line: 5135, column: 161)
!10984 = !DILocation(line: 5135, column: 161, scope: !10962)
!10985 = !DILocation(line: 5135, column: 189, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10987, file: !21, line: 5135, column: 189)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !21, line: 5135, column: 189)
!10988 = !DILocation(line: 5135, column: 189, scope: !10987)
!10989 = !DILocation(line: 5136, column: 9, scope: !10962)
!10990 = !DILocation(line: 5136, column: 44, scope: !10962)
!10991 = !DILocation(line: 5137, column: 9, scope: !10962)
!10992 = !DILocation(line: 5137, column: 45, scope: !10962)
!10993 = !DILocation(line: 5138, column: 9, scope: !10962)
!10994 = !DILocation(line: 5138, column: 45, scope: !10962)
!10995 = !DILocation(line: 5139, column: 9, scope: !10962)
!10996 = !DILocation(line: 5139, column: 45, scope: !10962)
!10997 = !DILocation(line: 5140, column: 9, scope: !10962)
!10998 = !DILocation(line: 5150, column: 7, scope: !10848)
!10999 = !DILocation(line: 5154, column: 7, scope: !10848)
!11000 = !DILocation(line: 5155, column: 7, scope: !10848)
!11001 = !DILocation(line: 5156, column: 7, scope: !10848)
!11002 = !DILocation(line: 5160, column: 7, scope: !10848)
!11003 = !DILocation(line: 5161, column: 7, scope: !10848)
!11004 = !DILocation(line: 5162, column: 5, scope: !10849)
!11005 = !DILocation(line: 5174, column: 21, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10855, file: !21, line: 5173, column: 21)
!11007 = !DILocation(line: 5174, column: 35, scope: !11006)
!11008 = !DILocation(line: 5174, column: 50, scope: !11006)
!11009 = !DILocation(line: 5174, column: 7, scope: !11006)
!11010 = !DILocation(line: 5183, column: 17, scope: !11006)
!11011 = !DILocation(line: 5183, column: 15, scope: !11006)
!11012 = !DILocation(line: 5184, column: 7, scope: !11006)
!11013 = !DILocation(line: 5186, column: 5, scope: !10855)
!11014 = !DILocation(line: 5188, column: 7, scope: !10857)
!11015 = !DILocation(line: 5189, column: 7, scope: !10857)
!11016 = !DILocation(line: 5190, column: 17, scope: !10857)
!11017 = !DILocation(line: 5190, column: 32, scope: !10857)
!11018 = !DILocation(line: 5190, column: 47, scope: !10857)
!11019 = !DILocation(line: 5190, column: 62, scope: !10857)
!11020 = !DILocation(line: 5190, column: 78, scope: !10857)
!11021 = !DILocation(line: 5190, column: 94, scope: !10857)
!11022 = !DILocation(line: 5191, column: 7, scope: !10857)
!11023 = !DILocation(line: 5191, column: 43, scope: !10857)
!11024 = !DILocation(line: 5192, column: 7, scope: !10857)
!11025 = !DILocation(line: 5192, column: 43, scope: !10857)
!11026 = !DILocation(line: 5193, column: 7, scope: !10857)
!11027 = !DILocation(line: 5193, column: 43, scope: !10857)
!11028 = !DILocation(line: 5194, column: 7, scope: !10857)
!11029 = !DILocation(line: 5194, column: 43, scope: !10857)
!11030 = !DILocation(line: 5195, column: 34, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !10857, file: !21, line: 5195, column: 11)
!11032 = !DILocation(line: 5196, column: 37, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !10857, file: !21, line: 5196, column: 11)
!11034 = !DILocation(line: 5196, column: 11, scope: !10857)
!11035 = !DILocation(line: 5196, column: 107, scope: !11033)
!11036 = !DILocation(line: 5212, column: 23, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !10857, file: !21, line: 5203, column: 7)
!11038 = !DILocation(line: 5212, column: 37, scope: !11037)
!11039 = !DILocation(line: 5212, column: 52, scope: !11037)
!11040 = !DILocation(line: 5212, column: 9, scope: !11037)
!11041 = !DILocation(line: 5221, column: 19, scope: !11037)
!11042 = !DILocation(line: 5221, column: 17, scope: !11037)
!11043 = !DILocation(line: 5222, column: 9, scope: !11037)
!11044 = !DILocation(line: 5224, column: 7, scope: !10857)
!11045 = !DILocation(line: 5229, column: 9, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !21, line: 5225, column: 34)
!11047 = distinct !DILexicalBlock(scope: !10857, file: !21, line: 5225, column: 11)
!11048 = !DILocation(line: 5231, column: 7, scope: !10857)
!11049 = !DILocation(line: 5231, column: 43, scope: !10857)
!11050 = !DILocation(line: 5232, column: 7, scope: !10857)
!11051 = !DILocation(line: 5232, column: 43, scope: !10857)
!11052 = !DILocation(line: 5233, column: 7, scope: !10857)
!11053 = !DILocation(line: 5233, column: 43, scope: !10857)
!11054 = !DILocation(line: 5234, column: 17, scope: !10857)
!11055 = !DILocation(line: 5234, column: 33, scope: !10857)
!11056 = !DILocation(line: 5234, column: 49, scope: !10857)
!11057 = !DILocation(line: 5236, column: 5, scope: !10855)
!11058 = !DILocation(line: 5248, column: 3, scope: !10821)
!11059 = !DILocation(line: 5250, column: 10, scope: !10821)
!11060 = !DILocation(line: 5250, column: 3, scope: !10821)
!11061 = !DILocation(line: 5251, column: 1, scope: !10821)
!11062 = !DISubprogram(name: "PyErr_Fetch", scope: !2182, file: !2182, line: 19, type: !11063, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11063 = !DISubroutineType(types: !11064)
!11064 = !{null, !94, !94, !94}
!11065 = distinct !DISubprogram(name: "__Pyx__ExceptionSave", scope: !21, file: !21, line: 9388, type: !11066, scopeLine: 9388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11068)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{null, !1260, !94, !94, !94}
!11068 = !{!11069, !11070, !11071, !11072, !11073, !11074}
!11069 = !DILocalVariable(name: "tstate", arg: 1, scope: !11065, file: !21, line: 9388, type: !1260)
!11070 = !DILocalVariable(name: "type", arg: 2, scope: !11065, file: !21, line: 9388, type: !94)
!11071 = !DILocalVariable(name: "value", arg: 3, scope: !11065, file: !21, line: 9388, type: !94)
!11072 = !DILocalVariable(name: "tb", arg: 4, scope: !11065, file: !21, line: 9388, type: !94)
!11073 = !DILocalVariable(name: "exc_info", scope: !11065, file: !21, line: 9390, type: !1352)
!11074 = !DILocalVariable(name: "exc_value", scope: !11065, file: !21, line: 9391, type: !28)
!11075 = !DILocation(line: 9388, column: 63, scope: !11065)
!11076 = !DILocation(line: 9388, column: 82, scope: !11065)
!11077 = !DILocation(line: 9388, column: 99, scope: !11065)
!11078 = !DILocation(line: 9388, column: 117, scope: !11065)
!11079 = !DILocation(line: 9390, column: 5, scope: !11065)
!11080 = !DILocation(line: 9390, column: 23, scope: !11065)
!11081 = !DILocation(line: 9390, column: 66, scope: !11065)
!11082 = !DILocation(line: 9390, column: 34, scope: !11065)
!11083 = !DILocation(line: 9391, column: 5, scope: !11065)
!11084 = !DILocation(line: 9391, column: 15, scope: !11065)
!11085 = !DILocation(line: 9391, column: 27, scope: !11065)
!11086 = !DILocation(line: 9391, column: 37, scope: !11065)
!11087 = !{!2057, !1462, i64 0}
!11088 = !DILocation(line: 9392, column: 9, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11065, file: !21, line: 9392, column: 9)
!11090 = !DILocation(line: 9392, column: 19, scope: !11089)
!11091 = !DILocation(line: 9392, column: 27, scope: !11089)
!11092 = !DILocation(line: 9392, column: 30, scope: !11089)
!11093 = !DILocation(line: 9392, column: 40, scope: !11089)
!11094 = !DILocation(line: 9392, column: 9, scope: !11065)
!11095 = !DILocation(line: 9393, column: 10, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11089, file: !21, line: 9392, column: 52)
!11097 = !DILocation(line: 9393, column: 16, scope: !11096)
!11098 = !DILocation(line: 9394, column: 10, scope: !11096)
!11099 = !DILocation(line: 9394, column: 15, scope: !11096)
!11100 = !DILocation(line: 9395, column: 10, scope: !11096)
!11101 = !DILocation(line: 9395, column: 13, scope: !11096)
!11102 = !DILocation(line: 9396, column: 5, scope: !11096)
!11103 = !DILocation(line: 9397, column: 18, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11089, file: !21, line: 9396, column: 12)
!11105 = !DILocation(line: 9397, column: 10, scope: !11104)
!11106 = !DILocation(line: 9397, column: 16, scope: !11104)
!11107 = !DILocation(line: 9398, column: 9, scope: !11104)
!11108 = !DILocation(line: 9399, column: 29, scope: !11104)
!11109 = !DILocation(line: 9399, column: 10, scope: !11104)
!11110 = !DILocation(line: 9399, column: 15, scope: !11104)
!11111 = !DILocation(line: 9400, column: 9, scope: !11104)
!11112 = !DILocation(line: 9401, column: 40, scope: !11104)
!11113 = !DILocation(line: 9401, column: 15, scope: !11104)
!11114 = !DILocation(line: 9401, column: 10, scope: !11104)
!11115 = !DILocation(line: 9401, column: 13, scope: !11104)
!11116 = !DILocation(line: 9419, column: 1, scope: !11065)
!11117 = distinct !DISubprogram(name: "__Pyx__GetException", scope: !21, file: !21, line: 9224, type: !11118, scopeLine: 9228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11120)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{!7, !1260, !94, !94, !94}
!11120 = !{!11121, !11122, !11123, !11124, !11125, !11126, !11127, !11128, !11129, !11130, !11131, !11133}
!11121 = !DILocalVariable(name: "tstate", arg: 1, scope: !11117, file: !21, line: 9224, type: !1260)
!11122 = !DILocalVariable(name: "type", arg: 2, scope: !11117, file: !21, line: 9224, type: !94)
!11123 = !DILocalVariable(name: "value", arg: 3, scope: !11117, file: !21, line: 9224, type: !94)
!11124 = !DILocalVariable(name: "tb", arg: 4, scope: !11117, file: !21, line: 9224, type: !94)
!11125 = !DILocalVariable(name: "local_type", scope: !11117, file: !21, line: 9229, type: !28)
!11126 = !DILocalVariable(name: "local_value", scope: !11117, file: !21, line: 9229, type: !28)
!11127 = !DILocalVariable(name: "local_tb", scope: !11117, file: !21, line: 9229, type: !28)
!11128 = !DILocalVariable(name: "tmp_type", scope: !11117, file: !21, line: 9231, type: !28)
!11129 = !DILocalVariable(name: "tmp_value", scope: !11117, file: !21, line: 9231, type: !28)
!11130 = !DILocalVariable(name: "tmp_tb", scope: !11117, file: !21, line: 9231, type: !28)
!11131 = !DILocalVariable(name: "exc_info", scope: !11132, file: !21, line: 9275, type: !1352)
!11132 = distinct !DILexicalBlock(scope: !11117, file: !21, line: 9274, column: 5)
!11133 = !DILabel(scope: !11117, name: "bad", file: !21, line: 9307)
!11134 = !DILocation(line: 9224, column: 47, scope: !11117)
!11135 = !DILocation(line: 9224, column: 66, scope: !11117)
!11136 = !DILocation(line: 9224, column: 83, scope: !11117)
!11137 = !DILocation(line: 9224, column: 101, scope: !11117)
!11138 = !DILocation(line: 9229, column: 5, scope: !11117)
!11139 = !DILocation(line: 9229, column: 15, scope: !11117)
!11140 = !DILocation(line: 9229, column: 35, scope: !11117)
!11141 = !DILocation(line: 9229, column: 49, scope: !11117)
!11142 = !DILocation(line: 9231, column: 5, scope: !11117)
!11143 = !DILocation(line: 9231, column: 15, scope: !11117)
!11144 = !DILocation(line: 9231, column: 26, scope: !11117)
!11145 = !DILocation(line: 9231, column: 38, scope: !11117)
!11146 = !DILocation(line: 9241, column: 18, scope: !11117)
!11147 = !DILocation(line: 9241, column: 26, scope: !11117)
!11148 = !DILocation(line: 9241, column: 16, scope: !11117)
!11149 = !DILocation(line: 9242, column: 19, scope: !11117)
!11150 = !DILocation(line: 9242, column: 27, scope: !11117)
!11151 = !DILocation(line: 9242, column: 17, scope: !11117)
!11152 = !DILocation(line: 9243, column: 16, scope: !11117)
!11153 = !DILocation(line: 9243, column: 24, scope: !11117)
!11154 = !DILocation(line: 9243, column: 14, scope: !11117)
!11155 = !DILocation(line: 9244, column: 5, scope: !11117)
!11156 = !DILocation(line: 9244, column: 13, scope: !11117)
!11157 = !DILocation(line: 9244, column: 25, scope: !11117)
!11158 = !DILocation(line: 9245, column: 5, scope: !11117)
!11159 = !DILocation(line: 9245, column: 13, scope: !11117)
!11160 = !DILocation(line: 9245, column: 26, scope: !11117)
!11161 = !DILocation(line: 9246, column: 5, scope: !11117)
!11162 = !DILocation(line: 9246, column: 13, scope: !11117)
!11163 = !DILocation(line: 9246, column: 30, scope: !11117)
!11164 = !DILocation(line: 9251, column: 5, scope: !11117)
!11165 = !DILocation(line: 9255, column: 9, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11117, file: !21, line: 9255, column: 9)
!11167 = !DILocation(line: 9255, column: 9, scope: !11117)
!11168 = !DILocation(line: 9259, column: 9, scope: !11166)
!11169 = !DILocation(line: 9261, column: 9, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11117, file: !21, line: 9261, column: 9)
!11171 = !DILocation(line: 9261, column: 9, scope: !11117)
!11172 = !DILocation(line: 9262, column: 13, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !21, line: 9262, column: 13)
!11174 = distinct !DILexicalBlock(scope: !11170, file: !21, line: 9261, column: 19)
!11175 = !DILocation(line: 9262, column: 13, scope: !11174)
!11176 = !DILocation(line: 9263, column: 13, scope: !11173)
!11177 = !DILocation(line: 9264, column: 5, scope: !11174)
!11178 = !DILocation(line: 9266, column: 5, scope: !11117)
!11179 = !DILocation(line: 9267, column: 5, scope: !11117)
!11180 = !DILocation(line: 9268, column: 5, scope: !11117)
!11181 = !DILocation(line: 9269, column: 13, scope: !11117)
!11182 = !DILocation(line: 9269, column: 6, scope: !11117)
!11183 = !DILocation(line: 9269, column: 11, scope: !11117)
!11184 = !DILocation(line: 9270, column: 14, scope: !11117)
!11185 = !DILocation(line: 9270, column: 6, scope: !11117)
!11186 = !DILocation(line: 9270, column: 12, scope: !11117)
!11187 = !DILocation(line: 9271, column: 11, scope: !11117)
!11188 = !DILocation(line: 9271, column: 6, scope: !11117)
!11189 = !DILocation(line: 9271, column: 9, scope: !11117)
!11190 = !DILocation(line: 9275, column: 9, scope: !11132)
!11191 = !DILocation(line: 9275, column: 27, scope: !11132)
!11192 = !DILocation(line: 9275, column: 38, scope: !11132)
!11193 = !DILocation(line: 9275, column: 46, scope: !11132)
!11194 = !{!2053, !1462, i64 120}
!11195 = !DILocation(line: 9277, column: 21, scope: !11132)
!11196 = !DILocation(line: 9277, column: 31, scope: !11132)
!11197 = !DILocation(line: 9277, column: 19, scope: !11132)
!11198 = !DILocation(line: 9278, column: 31, scope: !11132)
!11199 = !DILocation(line: 9278, column: 9, scope: !11132)
!11200 = !DILocation(line: 9278, column: 19, scope: !11132)
!11201 = !DILocation(line: 9278, column: 29, scope: !11132)
!11202 = !DILocation(line: 9279, column: 18, scope: !11132)
!11203 = !DILocation(line: 9280, column: 16, scope: !11132)
!11204 = !DILocation(line: 9281, column: 9, scope: !11132)
!11205 = !DILocation(line: 9282, column: 9, scope: !11132)
!11206 = !DILocation(line: 9291, column: 5, scope: !11117)
!11207 = !DILocation(line: 9300, column: 5, scope: !11117)
!11208 = !DILocation(line: 9301, column: 5, scope: !11117)
!11209 = !DILocation(line: 9302, column: 5, scope: !11117)
!11210 = !DILocation(line: 9306, column: 5, scope: !11117)
!11211 = !DILocation(line: 9307, column: 1, scope: !11117)
!11212 = !DILocation(line: 9308, column: 6, scope: !11117)
!11213 = !DILocation(line: 9308, column: 11, scope: !11117)
!11214 = !DILocation(line: 9309, column: 6, scope: !11117)
!11215 = !DILocation(line: 9309, column: 12, scope: !11117)
!11216 = !DILocation(line: 9310, column: 6, scope: !11117)
!11217 = !DILocation(line: 9310, column: 9, scope: !11117)
!11218 = !DILocation(line: 9311, column: 5, scope: !11117)
!11219 = !DILocation(line: 9312, column: 5, scope: !11117)
!11220 = !DILocation(line: 9313, column: 5, scope: !11117)
!11221 = !DILocation(line: 9314, column: 5, scope: !11117)
!11222 = !DILocation(line: 9315, column: 1, scope: !11117)
!11223 = distinct !DISubprogram(name: "__pyx_f_6Cython_7Runtime_8refnanny_report_unraisable", scope: !21, file: !21, line: 4230, type: !11224, scopeLine: 4230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11227)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{null, !28, !34, !11226}
!11226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!11227 = !{!11228, !11229, !11230, !11231, !11232, !11233, !11234, !11235, !11236, !11237, !11238, !11239, !11240, !11241, !11242, !11243, !11244, !11245, !11246, !11247, !11248, !11249, !11257, !11259, !11261, !11263, !11265, !11267, !11268}
!11228 = !DILocalVariable(name: "__pyx_v_filename", arg: 1, scope: !11223, file: !21, line: 4230, type: !28)
!11229 = !DILocalVariable(name: "__pyx_v_lineno", arg: 2, scope: !11223, file: !21, line: 4230, type: !34)
!11230 = !DILocalVariable(name: "__pyx_optional_args", arg: 3, scope: !11223, file: !21, line: 4230, type: !11226)
!11231 = !DILocalVariable(name: "__pyx_v_e", scope: !11223, file: !21, line: 4231, type: !28)
!11232 = !DILocalVariable(name: "__pyx_v_sys", scope: !11223, file: !21, line: 4232, type: !28)
!11233 = !DILocalVariable(name: "__pyx_t_1", scope: !11223, file: !21, line: 4234, type: !7)
!11234 = !DILocalVariable(name: "__pyx_t_2", scope: !11223, file: !21, line: 4235, type: !28)
!11235 = !DILocalVariable(name: "__pyx_t_3", scope: !11223, file: !21, line: 4236, type: !28)
!11236 = !DILocalVariable(name: "__pyx_t_4", scope: !11223, file: !21, line: 4237, type: !28)
!11237 = !DILocalVariable(name: "__pyx_t_5", scope: !11223, file: !21, line: 4238, type: !7)
!11238 = !DILocalVariable(name: "__pyx_t_6", scope: !11223, file: !21, line: 4239, type: !34)
!11239 = !DILocalVariable(name: "__pyx_t_7", scope: !11223, file: !21, line: 4240, type: !423)
!11240 = !DILocalVariable(name: "__pyx_t_8", scope: !11223, file: !21, line: 4241, type: !28)
!11241 = !DILocalVariable(name: "__pyx_t_9", scope: !11223, file: !21, line: 4242, type: !28)
!11242 = !DILocalVariable(name: "__pyx_t_10", scope: !11223, file: !21, line: 4243, type: !28)
!11243 = !DILocalVariable(name: "__pyx_t_11", scope: !11223, file: !21, line: 4244, type: !28)
!11244 = !DILocalVariable(name: "__pyx_t_12", scope: !11223, file: !21, line: 4245, type: !28)
!11245 = !DILocalVariable(name: "__pyx_t_13", scope: !11223, file: !21, line: 4246, type: !28)
!11246 = !DILocalVariable(name: "__pyx_lineno", scope: !11223, file: !21, line: 4247, type: !7)
!11247 = !DILocalVariable(name: "__pyx_filename", scope: !11223, file: !21, line: 4248, type: !54)
!11248 = !DILocalVariable(name: "__pyx_clineno", scope: !11223, file: !21, line: 4249, type: !7)
!11249 = !DILocalVariable(name: "function", scope: !11250, file: !21, line: 4304, type: !28)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !21, line: 4303, column: 32)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !21, line: 4303, column: 13)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !21, line: 4301, column: 46)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !21, line: 4301, column: 11)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !21, line: 4275, column: 20)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !21, line: 4275, column: 9)
!11256 = distinct !DILexicalBlock(scope: !11223, file: !21, line: 4265, column: 12)
!11257 = !DILocalVariable(name: "tmp", scope: !11258, file: !21, line: 4307, type: !28)
!11258 = distinct !DILexicalBlock(scope: !11250, file: !21, line: 4307, column: 11)
!11259 = !DILocalVariable(name: "__pyx_callargs", scope: !11260, file: !21, line: 4313, type: !3362)
!11260 = distinct !DILexicalBlock(scope: !11254, file: !21, line: 4312, column: 7)
!11261 = !DILocalVariable(name: "tmp", scope: !11262, file: !21, line: 4323, type: !28)
!11262 = distinct !DILexicalBlock(scope: !11254, file: !21, line: 4323, column: 7)
!11263 = !DILabel(scope: !11264, name: "__pyx_L4_error", file: !21, line: 4398)
!11264 = distinct !DILexicalBlock(scope: !11223, file: !21, line: 4394, column: 16)
!11265 = !DILocalVariable(name: "__pyx_tstate", scope: !11266, file: !21, line: 4400, type: !1260)
!11266 = distinct !DILexicalBlock(scope: !11264, file: !21, line: 4399, column: 24)
!11267 = !DILabel(scope: !11266, name: "__pyx_L7_return", file: !21, line: 4417)
!11268 = !DILabel(scope: !11223, name: "__pyx_L0", file: !21, line: 4441)
!11269 = !DILocation(line: 4230, column: 76, scope: !11223)
!11270 = !DILocation(line: 4230, column: 105, scope: !11223)
!11271 = !DILocation(line: 4230, column: 189, scope: !11223)
!11272 = !DILocation(line: 4231, column: 3, scope: !11223)
!11273 = !DILocation(line: 4231, column: 13, scope: !11223)
!11274 = !DILocation(line: 4232, column: 3, scope: !11223)
!11275 = !DILocation(line: 4232, column: 13, scope: !11223)
!11276 = !DILocation(line: 4234, column: 3, scope: !11223)
!11277 = !DILocation(line: 4234, column: 7, scope: !11223)
!11278 = !DILocation(line: 4235, column: 3, scope: !11223)
!11279 = !DILocation(line: 4235, column: 13, scope: !11223)
!11280 = !DILocation(line: 4236, column: 3, scope: !11223)
!11281 = !DILocation(line: 4236, column: 13, scope: !11223)
!11282 = !DILocation(line: 4237, column: 3, scope: !11223)
!11283 = !DILocation(line: 4237, column: 13, scope: !11223)
!11284 = !DILocation(line: 4238, column: 3, scope: !11223)
!11285 = !DILocation(line: 4238, column: 7, scope: !11223)
!11286 = !DILocation(line: 4239, column: 3, scope: !11223)
!11287 = !DILocation(line: 4239, column: 14, scope: !11223)
!11288 = !DILocation(line: 4240, column: 3, scope: !11223)
!11289 = !DILocation(line: 4240, column: 11, scope: !11223)
!11290 = !DILocation(line: 4241, column: 3, scope: !11223)
!11291 = !DILocation(line: 4241, column: 13, scope: !11223)
!11292 = !DILocation(line: 4242, column: 3, scope: !11223)
!11293 = !DILocation(line: 4242, column: 13, scope: !11223)
!11294 = !DILocation(line: 4243, column: 3, scope: !11223)
!11295 = !DILocation(line: 4243, column: 13, scope: !11223)
!11296 = !DILocation(line: 4244, column: 3, scope: !11223)
!11297 = !DILocation(line: 4244, column: 13, scope: !11223)
!11298 = !DILocation(line: 4245, column: 3, scope: !11223)
!11299 = !DILocation(line: 4245, column: 13, scope: !11223)
!11300 = !DILocation(line: 4246, column: 3, scope: !11223)
!11301 = !DILocation(line: 4246, column: 13, scope: !11223)
!11302 = !DILocation(line: 4247, column: 3, scope: !11223)
!11303 = !DILocation(line: 4247, column: 7, scope: !11223)
!11304 = !DILocation(line: 4248, column: 3, scope: !11223)
!11305 = !DILocation(line: 4248, column: 15, scope: !11223)
!11306 = !DILocation(line: 4249, column: 3, scope: !11223)
!11307 = !DILocation(line: 4249, column: 7, scope: !11223)
!11308 = !DILocation(line: 4251, column: 7, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11223, file: !21, line: 4251, column: 7)
!11310 = !DILocation(line: 4251, column: 7, scope: !11223)
!11311 = !DILocation(line: 4252, column: 9, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !21, line: 4252, column: 9)
!11313 = distinct !DILexicalBlock(scope: !11309, file: !21, line: 4251, column: 28)
!11314 = !DILocation(line: 4252, column: 30, scope: !11312)
!11315 = !DILocation(line: 4252, column: 38, scope: !11312)
!11316 = !DILocation(line: 4252, column: 9, scope: !11313)
!11317 = !DILocation(line: 4253, column: 19, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11312, file: !21, line: 4252, column: 43)
!11319 = !DILocation(line: 4253, column: 40, scope: !11318)
!11320 = !DILocation(line: 4253, column: 17, scope: !11318)
!11321 = !DILocation(line: 4254, column: 5, scope: !11318)
!11322 = !DILocation(line: 4255, column: 3, scope: !11313)
!11323 = !DILocation(line: 4256, column: 3, scope: !11223)
!11324 = !DILocation(line: 4274, column: 18, scope: !11256)
!11325 = !DILocation(line: 4274, column: 28, scope: !11256)
!11326 = !DILocation(line: 4274, column: 15, scope: !11256)
!11327 = !DILocation(line: 4275, column: 9, scope: !11255)
!11328 = !DILocation(line: 4275, column: 9, scope: !11256)
!11329 = !DILocation(line: 4284, column: 44, scope: !11254)
!11330 = !{!1599, !1462, i64 440}
!11331 = !DILocation(line: 4284, column: 19, scope: !11254)
!11332 = !DILocation(line: 4284, column: 17, scope: !11254)
!11333 = !DILocation(line: 4284, column: 70, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11254, file: !21, line: 4284, column: 70)
!11335 = !DILocation(line: 4284, column: 70, scope: !11254)
!11336 = !DILocation(line: 4284, column: 92, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !21, line: 4284, column: 92)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !21, line: 4284, column: 92)
!11339 = !DILocation(line: 4284, column: 92, scope: !11338)
!11340 = !DILocation(line: 4286, column: 21, scope: !11254)
!11341 = !DILocation(line: 4286, column: 19, scope: !11254)
!11342 = !DILocation(line: 4287, column: 17, scope: !11254)
!11343 = !DILocation(line: 4296, column: 45, scope: !11254)
!11344 = !DILocation(line: 4296, column: 58, scope: !11254)
!11345 = !{!1599, !1462, i64 256}
!11346 = !DILocation(line: 4296, column: 19, scope: !11254)
!11347 = !DILocation(line: 4296, column: 17, scope: !11254)
!11348 = !DILocation(line: 4296, column: 83, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11254, file: !21, line: 4296, column: 83)
!11350 = !DILocation(line: 4296, column: 83, scope: !11254)
!11351 = !DILocation(line: 4296, column: 105, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11353, file: !21, line: 4296, column: 105)
!11353 = distinct !DILexicalBlock(scope: !11349, file: !21, line: 4296, column: 105)
!11354 = !DILocation(line: 4296, column: 105, scope: !11353)
!11355 = !DILocation(line: 4298, column: 17, scope: !11254)
!11356 = !DILocation(line: 4299, column: 17, scope: !11254)
!11357 = !DILocation(line: 4301, column: 11, scope: !11253)
!11358 = !DILocation(line: 4301, column: 11, scope: !11254)
!11359 = !DILocation(line: 4302, column: 21, scope: !11252)
!11360 = !DILocation(line: 4302, column: 19, scope: !11252)
!11361 = !DILocation(line: 4303, column: 13, scope: !11251)
!11362 = !DILocation(line: 4303, column: 13, scope: !11252)
!11363 = !DILocation(line: 4304, column: 11, scope: !11250)
!11364 = !DILocation(line: 4304, column: 21, scope: !11250)
!11365 = !DILocation(line: 4304, column: 32, scope: !11250)
!11366 = !DILocation(line: 4305, column: 11, scope: !11250)
!11367 = !DILocation(line: 4306, column: 11, scope: !11250)
!11368 = !DILocation(line: 4307, column: 11, scope: !11250)
!11369 = !DILocation(line: 4307, column: 11, scope: !11258)
!11370 = !DILocation(line: 4308, column: 21, scope: !11250)
!11371 = !DILocation(line: 4309, column: 9, scope: !11251)
!11372 = !DILocation(line: 4309, column: 9, scope: !11250)
!11373 = !DILocation(line: 4310, column: 7, scope: !11252)
!11374 = !DILocation(line: 4313, column: 9, scope: !11260)
!11375 = !DILocation(line: 4313, column: 19, scope: !11260)
!11376 = !DILocation(line: 4313, column: 39, scope: !11260)
!11377 = !DILocation(line: 4313, column: 40, scope: !11260)
!11378 = !DILocation(line: 4314, column: 21, scope: !11260)
!11379 = !DILocation(line: 4314, column: 19, scope: !11260)
!11380 = !DILocation(line: 4315, column: 9, scope: !11260)
!11381 = !DILocation(line: 4315, column: 45, scope: !11260)
!11382 = !DILocation(line: 4316, column: 13, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11260, file: !21, line: 4316, column: 13)
!11384 = !DILocation(line: 4316, column: 13, scope: !11260)
!11385 = !DILocation(line: 4316, column: 35, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11387, file: !21, line: 4316, column: 35)
!11387 = distinct !DILexicalBlock(scope: !11383, file: !21, line: 4316, column: 35)
!11388 = !DILocation(line: 4316, column: 35, scope: !11387)
!11389 = !DILocation(line: 4318, column: 9, scope: !11260)
!11390 = !DILocation(line: 4318, column: 44, scope: !11260)
!11391 = !DILocation(line: 4319, column: 7, scope: !11254)
!11392 = !DILocation(line: 4320, column: 19, scope: !11254)
!11393 = !DILocation(line: 4320, column: 17, scope: !11254)
!11394 = !DILocation(line: 4320, column: 96, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11254, file: !21, line: 4320, column: 96)
!11396 = !DILocation(line: 4320, column: 96, scope: !11254)
!11397 = !DILocation(line: 4320, column: 118, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !21, line: 4320, column: 118)
!11399 = distinct !DILexicalBlock(scope: !11395, file: !21, line: 4320, column: 118)
!11400 = !DILocation(line: 4320, column: 118, scope: !11399)
!11401 = !DILocation(line: 4322, column: 7, scope: !11254)
!11402 = !DILocation(line: 4322, column: 42, scope: !11254)
!11403 = !DILocation(line: 4323, column: 7, scope: !11254)
!11404 = !DILocation(line: 4323, column: 7, scope: !11262)
!11405 = !DILocation(line: 4324, column: 17, scope: !11254)
!11406 = !DILocation(line: 4333, column: 5, scope: !11254)
!11407 = !DILocation(line: 4342, column: 17, scope: !11256)
!11408 = !DILocation(line: 4342, column: 15, scope: !11256)
!11409 = !DILocation(line: 4342, column: 37, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11256, file: !21, line: 4342, column: 37)
!11411 = !DILocation(line: 4342, column: 37, scope: !11256)
!11412 = !DILocation(line: 4342, column: 59, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !21, line: 4342, column: 59)
!11414 = distinct !DILexicalBlock(scope: !11410, file: !21, line: 4342, column: 59)
!11415 = !DILocation(line: 4342, column: 59, scope: !11414)
!11416 = !DILocation(line: 4344, column: 15, scope: !11256)
!11417 = !DILocation(line: 4345, column: 15, scope: !11256)
!11418 = !DILocation(line: 4346, column: 5, scope: !11256)
!11419 = !{!1599, !1462, i64 416}
!11420 = !DILocation(line: 4347, column: 15, scope: !11256)
!11421 = !DILocation(line: 4349, column: 5, scope: !11256)
!11422 = !DILocation(line: 4350, column: 17, scope: !11256)
!11423 = !DILocation(line: 4350, column: 15, scope: !11256)
!11424 = !DILocation(line: 4350, column: 89, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11256, file: !21, line: 4350, column: 89)
!11426 = !DILocation(line: 4350, column: 89, scope: !11256)
!11427 = !DILocation(line: 4350, column: 111, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11429, file: !21, line: 4350, column: 111)
!11429 = distinct !DILexicalBlock(scope: !11425, file: !21, line: 4350, column: 111)
!11430 = !DILocation(line: 4350, column: 111, scope: !11429)
!11431 = !DILocation(line: 4352, column: 18, scope: !11256)
!11432 = !DILocation(line: 4352, column: 62, scope: !11256)
!11433 = !DILocation(line: 4352, column: 60, scope: !11256)
!11434 = !DILocation(line: 4352, column: 17, scope: !11256)
!11435 = !DILocation(line: 4352, column: 75, scope: !11256)
!11436 = !DILocation(line: 4352, column: 119, scope: !11256)
!11437 = !DILocation(line: 4352, column: 15, scope: !11256)
!11438 = !DILocation(line: 4353, column: 18, scope: !11256)
!11439 = !DILocation(line: 4353, column: 15, scope: !11256)
!11440 = !DILocation(line: 4355, column: 5, scope: !11256)
!11441 = !DILocation(line: 4356, column: 15, scope: !11256)
!11442 = !DILocation(line: 4357, column: 5, scope: !11256)
!11443 = !{!1599, !1462, i64 168}
!11444 = !DILocation(line: 4358, column: 15, scope: !11256)
!11445 = !DILocation(line: 4360, column: 5, scope: !11256)
!11446 = !DILocation(line: 4361, column: 49, scope: !11256)
!11447 = !DILocation(line: 4361, column: 17, scope: !11256)
!11448 = !DILocation(line: 4361, column: 15, scope: !11256)
!11449 = !DILocation(line: 4361, column: 83, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11256, file: !21, line: 4361, column: 83)
!11451 = !DILocation(line: 4361, column: 83, scope: !11256)
!11452 = !DILocation(line: 4361, column: 105, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !21, line: 4361, column: 105)
!11454 = distinct !DILexicalBlock(scope: !11450, file: !21, line: 4361, column: 105)
!11455 = !DILocation(line: 4361, column: 105, scope: !11454)
!11456 = !DILocation(line: 4363, column: 18, scope: !11256)
!11457 = !DILocation(line: 4363, column: 15, scope: !11256)
!11458 = !DILocation(line: 4365, column: 5, scope: !11256)
!11459 = !DILocation(line: 4366, column: 15, scope: !11256)
!11460 = !DILocation(line: 4367, column: 5, scope: !11256)
!11461 = !DILocation(line: 4368, column: 15, scope: !11256)
!11462 = !DILocation(line: 4370, column: 5, scope: !11256)
!11463 = !DILocation(line: 4371, column: 17, scope: !11256)
!11464 = !DILocation(line: 4371, column: 15, scope: !11256)
!11465 = !DILocation(line: 4371, column: 82, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11256, file: !21, line: 4371, column: 82)
!11467 = !DILocation(line: 4371, column: 82, scope: !11256)
!11468 = !DILocation(line: 4371, column: 104, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !21, line: 4371, column: 104)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !21, line: 4371, column: 104)
!11471 = !DILocation(line: 4371, column: 104, scope: !11470)
!11472 = !DILocation(line: 4373, column: 18, scope: !11256)
!11473 = !DILocation(line: 4373, column: 62, scope: !11256)
!11474 = !DILocation(line: 4373, column: 60, scope: !11256)
!11475 = !DILocation(line: 4373, column: 17, scope: !11256)
!11476 = !DILocation(line: 4373, column: 75, scope: !11256)
!11477 = !DILocation(line: 4373, column: 119, scope: !11256)
!11478 = !DILocation(line: 4373, column: 15, scope: !11256)
!11479 = !DILocation(line: 4374, column: 18, scope: !11256)
!11480 = !DILocation(line: 4374, column: 15, scope: !11256)
!11481 = !DILocation(line: 4376, column: 5, scope: !11256)
!11482 = !DILocation(line: 4377, column: 15, scope: !11256)
!11483 = !DILocation(line: 4378, column: 38, scope: !11256)
!11484 = !DILocation(line: 4378, column: 52, scope: !11256)
!11485 = !DILocation(line: 4378, column: 63, scope: !11256)
!11486 = !DILocation(line: 4378, column: 17, scope: !11256)
!11487 = !DILocation(line: 4378, column: 15, scope: !11256)
!11488 = !DILocation(line: 4378, column: 79, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11256, file: !21, line: 4378, column: 79)
!11490 = !DILocation(line: 4378, column: 79, scope: !11256)
!11491 = !DILocation(line: 4378, column: 101, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11493, file: !21, line: 4378, column: 101)
!11493 = distinct !DILexicalBlock(scope: !11489, file: !21, line: 4378, column: 101)
!11494 = !DILocation(line: 4378, column: 101, scope: !11493)
!11495 = !DILocation(line: 4380, column: 5, scope: !11256)
!11496 = !DILocation(line: 4380, column: 40, scope: !11256)
!11497 = !DILocation(line: 4381, column: 43, scope: !11256)
!11498 = !DILocation(line: 4381, column: 64, scope: !11256)
!11499 = !DILocation(line: 4381, column: 17, scope: !11256)
!11500 = !DILocation(line: 4381, column: 15, scope: !11256)
!11501 = !DILocation(line: 4381, column: 80, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11256, file: !21, line: 4381, column: 80)
!11503 = !DILocation(line: 4381, column: 80, scope: !11256)
!11504 = !DILocation(line: 4381, column: 102, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !21, line: 4381, column: 102)
!11506 = distinct !DILexicalBlock(scope: !11502, file: !21, line: 4381, column: 102)
!11507 = !DILocation(line: 4381, column: 102, scope: !11506)
!11508 = !DILocation(line: 4383, column: 5, scope: !11256)
!11509 = !DILocation(line: 4383, column: 40, scope: !11256)
!11510 = !DILocation(line: 4384, column: 5, scope: !11256)
!11511 = !DILocation(line: 4384, column: 40, scope: !11256)
!11512 = !DILocation(line: 4396, column: 7, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11264, file: !21, line: 4395, column: 21)
!11514 = !DILocation(line: 4398, column: 5, scope: !11264)
!11515 = !DILocation(line: 4400, column: 7, scope: !11266)
!11516 = !DILocation(line: 4401, column: 7, scope: !11266)
!11517 = !DILocation(line: 4402, column: 17, scope: !11266)
!11518 = !DILocation(line: 4402, column: 32, scope: !11266)
!11519 = !DILocation(line: 4402, column: 48, scope: !11266)
!11520 = !DILocation(line: 4402, column: 64, scope: !11266)
!11521 = !DILocation(line: 4402, column: 80, scope: !11266)
!11522 = !DILocation(line: 4402, column: 96, scope: !11266)
!11523 = !DILocation(line: 4403, column: 7, scope: !11266)
!11524 = !DILocation(line: 4403, column: 43, scope: !11266)
!11525 = !DILocation(line: 4404, column: 7, scope: !11266)
!11526 = !DILocation(line: 4404, column: 43, scope: !11266)
!11527 = !DILocation(line: 4405, column: 7, scope: !11266)
!11528 = !DILocation(line: 4405, column: 43, scope: !11266)
!11529 = !DILocation(line: 4406, column: 34, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11266, file: !21, line: 4406, column: 11)
!11531 = !DILocation(line: 4407, column: 37, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11266, file: !21, line: 4407, column: 11)
!11533 = !DILocation(line: 4407, column: 11, scope: !11266)
!11534 = !DILocation(line: 4407, column: 108, scope: !11532)
!11535 = !DILocation(line: 4415, column: 9, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11266, file: !21, line: 4414, column: 7)
!11537 = !DILocation(line: 4417, column: 7, scope: !11266)
!11538 = !DILocation(line: 4422, column: 9, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !21, line: 4418, column: 34)
!11540 = distinct !DILexicalBlock(scope: !11266, file: !21, line: 4418, column: 11)
!11541 = !DILocation(line: 4424, column: 7, scope: !11266)
!11542 = !DILocation(line: 4424, column: 43, scope: !11266)
!11543 = !DILocation(line: 4425, column: 7, scope: !11266)
!11544 = !DILocation(line: 4425, column: 43, scope: !11266)
!11545 = !DILocation(line: 4426, column: 7, scope: !11266)
!11546 = !DILocation(line: 4426, column: 45, scope: !11266)
!11547 = !DILocation(line: 4427, column: 18, scope: !11266)
!11548 = !DILocation(line: 4427, column: 34, scope: !11266)
!11549 = !DILocation(line: 4427, column: 50, scope: !11266)
!11550 = !DILocation(line: 4429, column: 5, scope: !11264)
!11551 = !DILocation(line: 4441, column: 3, scope: !11223)
!11552 = !DILocation(line: 4442, column: 3, scope: !11223)
!11553 = !DILocation(line: 4443, column: 3, scope: !11223)
!11554 = !DILocation(line: 4445, column: 1, scope: !11223)
!11555 = distinct !DISubprogram(name: "__Pyx__ExceptionReset", scope: !21, file: !21, line: 9420, type: !4372, scopeLine: 9420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11556)
!11556 = !{!11557, !11558, !11559, !11560, !11561, !11562}
!11557 = !DILocalVariable(name: "tstate", arg: 1, scope: !11555, file: !21, line: 9420, type: !1260)
!11558 = !DILocalVariable(name: "type", arg: 2, scope: !11555, file: !21, line: 9420, type: !28)
!11559 = !DILocalVariable(name: "value", arg: 3, scope: !11555, file: !21, line: 9420, type: !28)
!11560 = !DILocalVariable(name: "tb", arg: 4, scope: !11555, file: !21, line: 9420, type: !28)
!11561 = !DILocalVariable(name: "exc_info", scope: !11555, file: !21, line: 9422, type: !1352)
!11562 = !DILocalVariable(name: "tmp_value", scope: !11555, file: !21, line: 9423, type: !28)
!11563 = !DILocation(line: 9420, column: 64, scope: !11555)
!11564 = !DILocation(line: 9420, column: 82, scope: !11555)
!11565 = !DILocation(line: 9420, column: 98, scope: !11555)
!11566 = !DILocation(line: 9420, column: 115, scope: !11555)
!11567 = !DILocation(line: 9422, column: 5, scope: !11555)
!11568 = !DILocation(line: 9422, column: 23, scope: !11555)
!11569 = !DILocation(line: 9422, column: 34, scope: !11555)
!11570 = !DILocation(line: 9422, column: 42, scope: !11555)
!11571 = !DILocation(line: 9423, column: 5, scope: !11555)
!11572 = !DILocation(line: 9423, column: 15, scope: !11555)
!11573 = !DILocation(line: 9423, column: 27, scope: !11555)
!11574 = !DILocation(line: 9423, column: 37, scope: !11555)
!11575 = !DILocation(line: 9424, column: 27, scope: !11555)
!11576 = !DILocation(line: 9424, column: 5, scope: !11555)
!11577 = !DILocation(line: 9424, column: 15, scope: !11555)
!11578 = !DILocation(line: 9424, column: 25, scope: !11555)
!11579 = !DILocation(line: 9425, column: 5, scope: !11555)
!11580 = !DILocation(line: 9426, column: 5, scope: !11555)
!11581 = !DILocation(line: 9427, column: 5, scope: !11555)
!11582 = !DILocation(line: 9450, column: 1, scope: !11555)
!11583 = !DISubprogram(name: "PyErr_Restore", scope: !2182, file: !2182, line: 20, type: !11584, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11584 = !DISubroutineType(types: !11585)
!11585 = !{null, !28, !28, !28}
!11586 = distinct !DISubprogram(name: "__Pyx__ExceptionSwap", scope: !21, file: !21, line: 9319, type: !11066, scopeLine: 9319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11587)
!11587 = !{!11588, !11589, !11590, !11591, !11592, !11593, !11594, !11595}
!11588 = !DILocalVariable(name: "tstate", arg: 1, scope: !11586, file: !21, line: 9319, type: !1260)
!11589 = !DILocalVariable(name: "type", arg: 2, scope: !11586, file: !21, line: 9319, type: !94)
!11590 = !DILocalVariable(name: "value", arg: 3, scope: !11586, file: !21, line: 9319, type: !94)
!11591 = !DILocalVariable(name: "tb", arg: 4, scope: !11586, file: !21, line: 9319, type: !94)
!11592 = !DILocalVariable(name: "tmp_type", scope: !11586, file: !21, line: 9320, type: !28)
!11593 = !DILocalVariable(name: "tmp_value", scope: !11586, file: !21, line: 9320, type: !28)
!11594 = !DILocalVariable(name: "tmp_tb", scope: !11586, file: !21, line: 9320, type: !28)
!11595 = !DILocalVariable(name: "exc_info", scope: !11586, file: !21, line: 9322, type: !1352)
!11596 = !DILocation(line: 9319, column: 63, scope: !11586)
!11597 = !DILocation(line: 9319, column: 82, scope: !11586)
!11598 = !DILocation(line: 9319, column: 99, scope: !11586)
!11599 = !DILocation(line: 9319, column: 117, scope: !11586)
!11600 = !DILocation(line: 9320, column: 5, scope: !11586)
!11601 = !DILocation(line: 9320, column: 15, scope: !11586)
!11602 = !DILocation(line: 9320, column: 26, scope: !11586)
!11603 = !DILocation(line: 9320, column: 38, scope: !11586)
!11604 = !DILocation(line: 9322, column: 5, scope: !11586)
!11605 = !DILocation(line: 9322, column: 23, scope: !11586)
!11606 = !DILocation(line: 9322, column: 34, scope: !11586)
!11607 = !DILocation(line: 9322, column: 42, scope: !11586)
!11608 = !DILocation(line: 9323, column: 17, scope: !11586)
!11609 = !DILocation(line: 9323, column: 27, scope: !11586)
!11610 = !DILocation(line: 9323, column: 15, scope: !11586)
!11611 = !DILocation(line: 9324, column: 28, scope: !11586)
!11612 = !DILocation(line: 9324, column: 27, scope: !11586)
!11613 = !DILocation(line: 9324, column: 5, scope: !11586)
!11614 = !DILocation(line: 9324, column: 15, scope: !11586)
!11615 = !DILocation(line: 9324, column: 25, scope: !11586)
!11616 = !DILocation(line: 9325, column: 9, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11586, file: !21, line: 9325, column: 9)
!11618 = !DILocation(line: 9325, column: 19, scope: !11617)
!11619 = !DILocation(line: 9325, column: 27, scope: !11617)
!11620 = !DILocation(line: 9325, column: 30, scope: !11617)
!11621 = !DILocation(line: 9325, column: 40, scope: !11617)
!11622 = !DILocation(line: 9325, column: 9, scope: !11586)
!11623 = !DILocation(line: 9326, column: 9, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11617, file: !21, line: 9325, column: 52)
!11625 = !DILocation(line: 9327, column: 19, scope: !11624)
!11626 = !DILocation(line: 9328, column: 18, scope: !11624)
!11627 = !DILocation(line: 9329, column: 16, scope: !11624)
!11628 = !DILocation(line: 9330, column: 5, scope: !11624)
!11629 = !DILocation(line: 9331, column: 32, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11617, file: !21, line: 9330, column: 12)
!11631 = !DILocation(line: 9331, column: 18, scope: !11630)
!11632 = !DILocation(line: 9332, column: 9, scope: !11630)
!11633 = !DILocation(line: 9334, column: 44, scope: !11630)
!11634 = !DILocation(line: 9334, column: 56, scope: !11630)
!11635 = !{!11636, !1462, i64 40}
!11636 = !{!"", !1871, i64 0, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40, !1462, i64 48, !1462, i64 56, !1463, i64 64}
!11637 = !DILocation(line: 9334, column: 16, scope: !11630)
!11638 = !DILocation(line: 9335, column: 9, scope: !11630)
!11639 = !DILocation(line: 9356, column: 13, scope: !11586)
!11640 = !DILocation(line: 9356, column: 6, scope: !11586)
!11641 = !DILocation(line: 9356, column: 11, scope: !11586)
!11642 = !DILocation(line: 9357, column: 14, scope: !11586)
!11643 = !DILocation(line: 9357, column: 6, scope: !11586)
!11644 = !DILocation(line: 9357, column: 12, scope: !11586)
!11645 = !DILocation(line: 9358, column: 11, scope: !11586)
!11646 = !DILocation(line: 9358, column: 6, scope: !11586)
!11647 = !DILocation(line: 9358, column: 9, scope: !11586)
!11648 = !DILocation(line: 9359, column: 1, scope: !11586)
!11649 = distinct !DISubprogram(name: "__Pyx_ErrFetchInState", scope: !21, file: !21, line: 6906, type: !11066, scopeLine: 6906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11650)
!11650 = !{!11651, !11652, !11653, !11654}
!11651 = !DILocalVariable(name: "tstate", arg: 1, scope: !11649, file: !21, line: 6906, type: !1260)
!11652 = !DILocalVariable(name: "type", arg: 2, scope: !11649, file: !21, line: 6906, type: !94)
!11653 = !DILocalVariable(name: "value", arg: 3, scope: !11649, file: !21, line: 6906, type: !94)
!11654 = !DILocalVariable(name: "tb", arg: 4, scope: !11649, file: !21, line: 6906, type: !94)
!11655 = !DILocation(line: 6906, column: 64, scope: !11649)
!11656 = !DILocation(line: 6906, column: 83, scope: !11649)
!11657 = !DILocation(line: 6906, column: 100, scope: !11649)
!11658 = !DILocation(line: 6906, column: 118, scope: !11649)
!11659 = !DILocation(line: 6925, column: 13, scope: !11649)
!11660 = !DILocation(line: 6925, column: 21, scope: !11649)
!11661 = !DILocation(line: 6925, column: 6, scope: !11649)
!11662 = !DILocation(line: 6925, column: 11, scope: !11649)
!11663 = !DILocation(line: 6926, column: 14, scope: !11649)
!11664 = !DILocation(line: 6926, column: 22, scope: !11649)
!11665 = !DILocation(line: 6926, column: 6, scope: !11649)
!11666 = !DILocation(line: 6926, column: 12, scope: !11649)
!11667 = !DILocation(line: 6927, column: 11, scope: !11649)
!11668 = !DILocation(line: 6927, column: 19, scope: !11649)
!11669 = !DILocation(line: 6927, column: 6, scope: !11649)
!11670 = !DILocation(line: 6927, column: 9, scope: !11649)
!11671 = !DILocation(line: 6928, column: 5, scope: !11649)
!11672 = !DILocation(line: 6928, column: 13, scope: !11649)
!11673 = !DILocation(line: 6928, column: 25, scope: !11649)
!11674 = !DILocation(line: 6929, column: 5, scope: !11649)
!11675 = !DILocation(line: 6929, column: 13, scope: !11649)
!11676 = !DILocation(line: 6929, column: 26, scope: !11649)
!11677 = !DILocation(line: 6930, column: 5, scope: !11649)
!11678 = !DILocation(line: 6930, column: 13, scope: !11649)
!11679 = !DILocation(line: 6930, column: 30, scope: !11649)
!11680 = !DILocation(line: 6932, column: 1, scope: !11649)
!11681 = distinct !DISubprogram(name: "__Pyx_PyErr_GetTopmostException", scope: !21, file: !21, line: 9374, type: !11682, scopeLine: 9375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11684)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{!1352, !1260}
!11684 = !{!11685, !11686}
!11685 = !DILocalVariable(name: "tstate", arg: 1, scope: !11681, file: !21, line: 9374, type: !1260)
!11686 = !DILocalVariable(name: "exc_info", scope: !11681, file: !21, line: 9376, type: !1352)
!11687 = !DILocation(line: 9374, column: 48, scope: !11681)
!11688 = !DILocation(line: 9376, column: 5, scope: !11681)
!11689 = !DILocation(line: 9376, column: 23, scope: !11681)
!11690 = !DILocation(line: 9376, column: 34, scope: !11681)
!11691 = !DILocation(line: 9376, column: 42, scope: !11681)
!11692 = !DILocation(line: 9377, column: 5, scope: !11681)
!11693 = !DILocation(line: 9377, column: 13, scope: !11681)
!11694 = !DILocation(line: 9377, column: 23, scope: !11681)
!11695 = !DILocation(line: 9377, column: 33, scope: !11681)
!11696 = !DILocation(line: 9377, column: 41, scope: !11681)
!11697 = !DILocation(line: 9377, column: 44, scope: !11681)
!11698 = !DILocation(line: 9377, column: 54, scope: !11681)
!11699 = !DILocation(line: 9377, column: 64, scope: !11681)
!11700 = !DILocation(line: 9377, column: 76, scope: !11681)
!11701 = !DILocation(line: 9378, column: 12, scope: !11681)
!11702 = !DILocation(line: 9378, column: 22, scope: !11681)
!11703 = !{!2057, !1462, i64 8}
!11704 = !DILocation(line: 9378, column: 36, scope: !11681)
!11705 = !DILocation(line: 0, scope: !11681)
!11706 = !DILocation(line: 9380, column: 20, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11681, file: !21, line: 9379, column: 5)
!11708 = !DILocation(line: 9380, column: 30, scope: !11707)
!11709 = !DILocation(line: 9380, column: 18, scope: !11707)
!11710 = distinct !{!11710, !11692, !11711, !4154}
!11711 = !DILocation(line: 9381, column: 5, scope: !11681)
!11712 = !DILocation(line: 9382, column: 12, scope: !11681)
!11713 = !DILocation(line: 9383, column: 1, scope: !11681)
!11714 = !DILocation(line: 9382, column: 5, scope: !11681)
!11715 = !DISubprogram(name: "PyException_GetTraceback", scope: !2182, file: !2182, line: 44, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11716 = !DISubprogram(name: "PyErr_NormalizeException", scope: !2182, file: !2182, line: 40, type: !11063, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11717 = !DISubprogram(name: "PyException_SetTraceback", scope: !2182, file: !2182, line: 43, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11718 = distinct !DISubprogram(name: "__Pyx_ImportDottedModule", scope: !21, file: !21, line: 9101, type: !105, scopeLine: 9101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11719)
!11719 = !{!11720, !11721, !11722, !11723, !11726}
!11720 = !DILocalVariable(name: "name", arg: 1, scope: !11718, file: !21, line: 9101, type: !28)
!11721 = !DILocalVariable(name: "parts_tuple", arg: 2, scope: !11718, file: !21, line: 9101, type: !28)
!11722 = !DILocalVariable(name: "module", scope: !11718, file: !21, line: 9103, type: !28)
!11723 = !DILocalVariable(name: "spec", scope: !11724, file: !21, line: 9105, type: !28)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !21, line: 9104, column: 25)
!11725 = distinct !DILexicalBlock(scope: !11718, file: !21, line: 9104, column: 9)
!11726 = !DILocalVariable(name: "unsafe", scope: !11727, file: !21, line: 9107, type: !28)
!11727 = distinct !DILexicalBlock(scope: !11728, file: !21, line: 9106, column: 27)
!11728 = distinct !DILexicalBlock(scope: !11724, file: !21, line: 9106, column: 13)
!11729 = !DILocation(line: 9101, column: 53, scope: !11718)
!11730 = !DILocation(line: 9101, column: 69, scope: !11718)
!11731 = !DILocation(line: 9103, column: 5, scope: !11718)
!11732 = !DILocation(line: 9103, column: 15, scope: !11718)
!11733 = !DILocation(line: 9103, column: 57, scope: !11718)
!11734 = !DILocation(line: 9103, column: 24, scope: !11718)
!11735 = !DILocation(line: 9104, column: 9, scope: !11725)
!11736 = !DILocation(line: 9104, column: 9, scope: !11718)
!11737 = !DILocation(line: 9105, column: 9, scope: !11724)
!11738 = !DILocation(line: 9105, column: 19, scope: !11724)
!11739 = !DILocation(line: 9105, column: 59, scope: !11724)
!11740 = !DILocation(line: 9105, column: 67, scope: !11724)
!11741 = !{!1599, !1462, i64 432}
!11742 = !DILocation(line: 9105, column: 26, scope: !11724)
!11743 = !DILocation(line: 9106, column: 13, scope: !11728)
!11744 = !DILocation(line: 9106, column: 13, scope: !11724)
!11745 = !DILocation(line: 9107, column: 13, scope: !11727)
!11746 = !DILocation(line: 9107, column: 23, scope: !11727)
!11747 = !DILocation(line: 9107, column: 65, scope: !11727)
!11748 = !DILocation(line: 9107, column: 71, scope: !11727)
!11749 = !{!1599, !1462, i64 304}
!11750 = !DILocation(line: 9107, column: 32, scope: !11727)
!11751 = !DILocation(line: 9108, column: 17, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11727, file: !21, line: 9108, column: 17)
!11753 = !DILocation(line: 9108, column: 17, scope: !11727)
!11754 = !DILocation(line: 9109, column: 17, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11752, file: !21, line: 9108, column: 68)
!11756 = !DILocation(line: 9110, column: 22, scope: !11755)
!11757 = !DILocation(line: 9111, column: 13, scope: !11755)
!11758 = !DILocation(line: 9112, column: 13, scope: !11727)
!11759 = !DILocation(line: 9113, column: 9, scope: !11728)
!11760 = !DILocation(line: 9113, column: 9, scope: !11727)
!11761 = !DILocation(line: 9114, column: 13, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11724, file: !21, line: 9114, column: 13)
!11763 = !DILocation(line: 9114, column: 13, scope: !11724)
!11764 = !DILocation(line: 9115, column: 13, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11762, file: !21, line: 9114, column: 28)
!11766 = !DILocation(line: 9116, column: 20, scope: !11765)
!11767 = !DILocation(line: 9116, column: 13, scope: !11765)
!11768 = !DILocation(line: 9118, column: 9, scope: !11724)
!11769 = !DILocation(line: 9119, column: 9, scope: !11724)
!11770 = !DILocation(line: 9120, column: 5, scope: !11725)
!11771 = !DILocation(line: 9120, column: 5, scope: !11724)
!11772 = !DILocation(line: 9120, column: 16, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11725, file: !21, line: 9120, column: 16)
!11774 = !DILocation(line: 9120, column: 16, scope: !11725)
!11775 = !DILocation(line: 9121, column: 9, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11773, file: !21, line: 9120, column: 34)
!11777 = !DILocation(line: 9122, column: 5, scope: !11776)
!11778 = !DILocation(line: 9124, column: 38, scope: !11718)
!11779 = !DILocation(line: 9124, column: 44, scope: !11718)
!11780 = !DILocation(line: 9124, column: 12, scope: !11718)
!11781 = !DILocation(line: 9124, column: 5, scope: !11718)
!11782 = !DILocation(line: 9125, column: 1, scope: !11718)
!11783 = distinct !DISubprogram(name: "__Pyx_GetItemInt_Fast", scope: !21, file: !21, line: 9171, type: !11784, scopeLine: 9173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11786)
!11784 = !DISubroutineType(types: !11785)
!11785 = !{!28, !28, !34, !7, !7, !7}
!11786 = !{!11787, !11788, !11789, !11790, !11791, !11792, !11795, !11798, !11801, !11804, !11806, !11807, !11810, !11811}
!11787 = !DILocalVariable(name: "o", arg: 1, scope: !11783, file: !21, line: 9171, type: !28)
!11788 = !DILocalVariable(name: "i", arg: 2, scope: !11783, file: !21, line: 9171, type: !34)
!11789 = !DILocalVariable(name: "is_list", arg: 3, scope: !11783, file: !21, line: 9171, type: !7)
!11790 = !DILocalVariable(name: "wraparound", arg: 4, scope: !11783, file: !21, line: 9172, type: !7)
!11791 = !DILocalVariable(name: "boundscheck", arg: 5, scope: !11783, file: !21, line: 9173, type: !7)
!11792 = !DILocalVariable(name: "n", scope: !11793, file: !21, line: 9176, type: !34)
!11793 = distinct !DILexicalBlock(scope: !11794, file: !21, line: 9175, column: 42)
!11794 = distinct !DILexicalBlock(scope: !11783, file: !21, line: 9175, column: 9)
!11795 = !DILocalVariable(name: "r", scope: !11796, file: !21, line: 9178, type: !28)
!11796 = distinct !DILexicalBlock(scope: !11797, file: !21, line: 9177, column: 86)
!11797 = distinct !DILexicalBlock(scope: !11793, file: !21, line: 9177, column: 13)
!11798 = !DILocalVariable(name: "n", scope: !11799, file: !21, line: 9184, type: !34)
!11799 = distinct !DILexicalBlock(scope: !11800, file: !21, line: 9183, column: 37)
!11800 = distinct !DILexicalBlock(scope: !11794, file: !21, line: 9183, column: 14)
!11801 = !DILocalVariable(name: "r", scope: !11802, file: !21, line: 9186, type: !28)
!11802 = distinct !DILexicalBlock(scope: !11803, file: !21, line: 9185, column: 85)
!11803 = distinct !DILexicalBlock(scope: !11799, file: !21, line: 9185, column: 13)
!11804 = !DILocalVariable(name: "mm", scope: !11805, file: !21, line: 9191, type: !182)
!11805 = distinct !DILexicalBlock(scope: !11800, file: !21, line: 9190, column: 12)
!11806 = !DILocalVariable(name: "sm", scope: !11805, file: !21, line: 9192, type: !151)
!11807 = !DILocalVariable(name: "r", scope: !11808, file: !21, line: 9194, type: !28)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !21, line: 9193, column: 37)
!11809 = distinct !DILexicalBlock(scope: !11805, file: !21, line: 9193, column: 13)
!11810 = !DILocalVariable(name: "key", scope: !11808, file: !21, line: 9194, type: !28)
!11811 = !DILocalVariable(name: "l", scope: !11812, file: !21, line: 9202, type: !34)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !21, line: 9201, column: 73)
!11813 = distinct !DILexicalBlock(scope: !11814, file: !21, line: 9201, column: 17)
!11814 = distinct !DILexicalBlock(scope: !11815, file: !21, line: 9200, column: 40)
!11815 = distinct !DILexicalBlock(scope: !11805, file: !21, line: 9200, column: 13)
!11816 = !DILocation(line: 9171, column: 64, scope: !11783)
!11817 = !DILocation(line: 9171, column: 78, scope: !11783)
!11818 = !DILocation(line: 9171, column: 85, scope: !11783)
!11819 = !DILocation(line: 9172, column: 76, scope: !11783)
!11820 = !DILocation(line: 9173, column: 76, scope: !11783)
!11821 = !DILocation(line: 9175, column: 9, scope: !11794)
!11822 = !DILocation(line: 9175, column: 17, scope: !11794)
!11823 = !DILocation(line: 9175, column: 20, scope: !11794)
!11824 = !DILocation(line: 9175, column: 9, scope: !11783)
!11825 = !DILocation(line: 9176, column: 9, scope: !11793)
!11826 = !DILocation(line: 9176, column: 20, scope: !11793)
!11827 = !DILocation(line: 9176, column: 27, scope: !11793)
!11828 = !DILocation(line: 9176, column: 26, scope: !11793)
!11829 = !DILocation(line: 9176, column: 25, scope: !11793)
!11830 = !DILocation(line: 9176, column: 41, scope: !11793)
!11831 = !DILocation(line: 9176, column: 39, scope: !11793)
!11832 = !DILocation(line: 9176, column: 24, scope: !11793)
!11833 = !DILocation(line: 9176, column: 59, scope: !11793)
!11834 = !DILocation(line: 9176, column: 63, scope: !11793)
!11835 = !DILocation(line: 9176, column: 67, scope: !11793)
!11836 = !DILocation(line: 9176, column: 65, scope: !11793)
!11837 = !DILocation(line: 9177, column: 15, scope: !11797)
!11838 = !DILocation(line: 9177, column: 28, scope: !11797)
!11839 = !DILocation(line: 9177, column: 32, scope: !11797)
!11840 = !DILocation(line: 9177, column: 13, scope: !11793)
!11841 = !DILocation(line: 9178, column: 13, scope: !11796)
!11842 = !DILocation(line: 9178, column: 23, scope: !11796)
!11843 = !DILocation(line: 9178, column: 27, scope: !11796)
!11844 = !DILocation(line: 9179, column: 13, scope: !11796)
!11845 = !DILocation(line: 9180, column: 20, scope: !11796)
!11846 = !DILocation(line: 9180, column: 13, scope: !11796)
!11847 = !DILocation(line: 9181, column: 9, scope: !11797)
!11848 = !DILocation(line: 9182, column: 5, scope: !11794)
!11849 = !DILocation(line: 9182, column: 5, scope: !11793)
!11850 = !DILocation(line: 9183, column: 14, scope: !11800)
!11851 = !DILocation(line: 9183, column: 14, scope: !11794)
!11852 = !DILocation(line: 9184, column: 9, scope: !11799)
!11853 = !DILocation(line: 9184, column: 20, scope: !11799)
!11854 = !DILocation(line: 9184, column: 27, scope: !11799)
!11855 = !DILocation(line: 9184, column: 26, scope: !11799)
!11856 = !DILocation(line: 9184, column: 25, scope: !11799)
!11857 = !DILocation(line: 9184, column: 41, scope: !11799)
!11858 = !DILocation(line: 9184, column: 39, scope: !11799)
!11859 = !DILocation(line: 9184, column: 24, scope: !11799)
!11860 = !DILocation(line: 9184, column: 59, scope: !11799)
!11861 = !DILocation(line: 9184, column: 63, scope: !11799)
!11862 = !DILocation(line: 9184, column: 67, scope: !11799)
!11863 = !DILocation(line: 9184, column: 65, scope: !11799)
!11864 = !DILocation(line: 9185, column: 15, scope: !11803)
!11865 = !DILocation(line: 9185, column: 28, scope: !11803)
!11866 = !DILocation(line: 9185, column: 31, scope: !11803)
!11867 = !DILocation(line: 9185, column: 13, scope: !11799)
!11868 = !DILocation(line: 9186, column: 13, scope: !11802)
!11869 = !DILocation(line: 9186, column: 23, scope: !11802)
!11870 = !DILocation(line: 9186, column: 27, scope: !11802)
!11871 = !DILocation(line: 9187, column: 13, scope: !11802)
!11872 = !DILocation(line: 9188, column: 20, scope: !11802)
!11873 = !DILocation(line: 9188, column: 13, scope: !11802)
!11874 = !DILocation(line: 9189, column: 9, scope: !11803)
!11875 = !DILocation(line: 9190, column: 5, scope: !11800)
!11876 = !DILocation(line: 9190, column: 5, scope: !11799)
!11877 = !DILocation(line: 9191, column: 9, scope: !11805)
!11878 = !DILocation(line: 9191, column: 27, scope: !11805)
!11879 = !DILocation(line: 9191, column: 32, scope: !11805)
!11880 = !DILocation(line: 9191, column: 44, scope: !11805)
!11881 = !{!1897, !1462, i64 112}
!11882 = !DILocation(line: 9192, column: 9, scope: !11805)
!11883 = !DILocation(line: 9192, column: 28, scope: !11805)
!11884 = !DILocation(line: 9192, column: 33, scope: !11805)
!11885 = !DILocation(line: 9192, column: 45, scope: !11805)
!11886 = !{!1897, !1462, i64 104}
!11887 = !DILocation(line: 9193, column: 13, scope: !11809)
!11888 = !DILocation(line: 9193, column: 16, scope: !11809)
!11889 = !DILocation(line: 9193, column: 19, scope: !11809)
!11890 = !DILocation(line: 9193, column: 23, scope: !11809)
!11891 = !{!11892, !1462, i64 8}
!11892 = !{!"", !1462, i64 0, !1462, i64 8, !1462, i64 16}
!11893 = !DILocation(line: 9193, column: 13, scope: !11805)
!11894 = !DILocation(line: 9194, column: 13, scope: !11808)
!11895 = !DILocation(line: 9194, column: 23, scope: !11808)
!11896 = !DILocation(line: 9194, column: 27, scope: !11808)
!11897 = !DILocation(line: 9194, column: 51, scope: !11808)
!11898 = !DILocation(line: 9194, column: 33, scope: !11808)
!11899 = !DILocation(line: 9195, column: 17, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11808, file: !21, line: 9195, column: 17)
!11901 = !DILocation(line: 9195, column: 17, scope: !11808)
!11902 = !DILocation(line: 9195, column: 33, scope: !11900)
!11903 = !DILocation(line: 9196, column: 17, scope: !11808)
!11904 = !DILocation(line: 9196, column: 21, scope: !11808)
!11905 = !DILocation(line: 9196, column: 34, scope: !11808)
!11906 = !DILocation(line: 9196, column: 37, scope: !11808)
!11907 = !DILocation(line: 9196, column: 15, scope: !11808)
!11908 = !DILocation(line: 9197, column: 13, scope: !11808)
!11909 = !DILocation(line: 9198, column: 20, scope: !11808)
!11910 = !DILocation(line: 9198, column: 13, scope: !11808)
!11911 = !DILocation(line: 9199, column: 9, scope: !11809)
!11912 = !DILocation(line: 9200, column: 13, scope: !11815)
!11913 = !{!11914, !1462, i64 24}
!11914 = !{!"", !1462, i64 0, !1462, i64 8, !1462, i64 16, !1462, i64 24, !1462, i64 32, !1462, i64 40, !1462, i64 48, !1462, i64 56, !1462, i64 64, !1462, i64 72}
!11915 = !DILocation(line: 0, scope: !11815)
!11916 = !DILocation(line: 9200, column: 13, scope: !11805)
!11917 = !DILocation(line: 9201, column: 17, scope: !11813)
!11918 = !DILocation(line: 9201, column: 28, scope: !11813)
!11919 = !DILocation(line: 9201, column: 31, scope: !11813)
!11920 = !DILocation(line: 9201, column: 47, scope: !11813)
!11921 = !DILocation(line: 9201, column: 50, scope: !11813)
!11922 = !{!11914, !1462, i64 0}
!11923 = !DILocation(line: 9201, column: 17, scope: !11814)
!11924 = !DILocation(line: 9202, column: 17, scope: !11812)
!11925 = !DILocation(line: 9202, column: 28, scope: !11812)
!11926 = !DILocation(line: 9202, column: 32, scope: !11812)
!11927 = !DILocation(line: 9202, column: 36, scope: !11812)
!11928 = !DILocation(line: 9202, column: 46, scope: !11812)
!11929 = !DILocation(line: 9203, column: 21, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11812, file: !21, line: 9203, column: 21)
!11931 = !DILocation(line: 9203, column: 21, scope: !11812)
!11932 = !DILocation(line: 9204, column: 26, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11930, file: !21, line: 9203, column: 37)
!11934 = !DILocation(line: 9204, column: 23, scope: !11933)
!11935 = !DILocation(line: 9205, column: 17, scope: !11933)
!11936 = !DILocation(line: 9206, column: 49, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !21, line: 9206, column: 25)
!11938 = distinct !DILexicalBlock(scope: !11930, file: !21, line: 9205, column: 24)
!11939 = !DILocation(line: 9206, column: 26, scope: !11937)
!11940 = !DILocation(line: 9206, column: 25, scope: !11938)
!11941 = !DILocation(line: 9207, column: 25, scope: !11937)
!11942 = !DILocation(line: 9208, column: 21, scope: !11938)
!11943 = !DILocation(line: 9210, column: 13, scope: !11813)
!11944 = !DILocation(line: 9210, column: 13, scope: !11812)
!11945 = !DILocation(line: 9211, column: 20, scope: !11814)
!11946 = !DILocation(line: 9211, column: 24, scope: !11814)
!11947 = !DILocation(line: 9211, column: 32, scope: !11814)
!11948 = !DILocation(line: 9211, column: 35, scope: !11814)
!11949 = !DILocation(line: 9211, column: 13, scope: !11814)
!11950 = !DILocation(line: 9213, column: 5, scope: !11800)
!11951 = !DILocation(line: 9219, column: 37, scope: !11783)
!11952 = !DILocation(line: 9219, column: 58, scope: !11783)
!11953 = !DILocation(line: 9219, column: 40, scope: !11783)
!11954 = !DILocation(line: 9219, column: 12, scope: !11783)
!11955 = !DILocation(line: 9219, column: 5, scope: !11783)
!11956 = !DILocation(line: 9220, column: 1, scope: !11783)
!11957 = distinct !DISubprogram(name: "__Pyx__ImportDottedModule_Lookup", scope: !21, file: !21, line: 9037, type: !84, scopeLine: 9037, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11958)
!11958 = !{!11959, !11960}
!11959 = !DILocalVariable(name: "name", arg: 1, scope: !11957, file: !21, line: 9037, type: !28)
!11960 = !DILocalVariable(name: "imported_module", scope: !11957, file: !21, line: 9038, type: !28)
!11961 = !DILocation(line: 9037, column: 61, scope: !11957)
!11962 = !DILocation(line: 9038, column: 5, scope: !11957)
!11963 = !DILocation(line: 9038, column: 15, scope: !11957)
!11964 = !DILocation(line: 9046, column: 42, scope: !11957)
!11965 = !DILocation(line: 9046, column: 23, scope: !11957)
!11966 = !DILocation(line: 9046, column: 21, scope: !11957)
!11967 = !DILocation(line: 9048, column: 12, scope: !11957)
!11968 = !DILocation(line: 9049, column: 1, scope: !11957)
!11969 = !DILocation(line: 9048, column: 5, scope: !11957)
!11970 = distinct !DISubprogram(name: "__Pyx__ImportDottedModule", scope: !21, file: !21, line: 9075, type: !105, scopeLine: 9075, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11971)
!11971 = !{!11972, !11973, !11974, !11975}
!11972 = !DILocalVariable(name: "name", arg: 1, scope: !11970, file: !21, line: 9075, type: !28)
!11973 = !DILocalVariable(name: "parts_tuple", arg: 2, scope: !11970, file: !21, line: 9075, type: !28)
!11974 = !DILocalVariable(name: "imported_module", scope: !11970, file: !21, line: 9088, type: !28)
!11975 = !DILocalVariable(name: "module", scope: !11970, file: !21, line: 9089, type: !28)
!11976 = !DILocation(line: 9075, column: 54, scope: !11970)
!11977 = !DILocation(line: 9075, column: 70, scope: !11970)
!11978 = !DILocation(line: 9088, column: 5, scope: !11970)
!11979 = !DILocation(line: 9088, column: 15, scope: !11970)
!11980 = !DILocation(line: 9089, column: 5, scope: !11970)
!11981 = !DILocation(line: 9089, column: 15, scope: !11970)
!11982 = !DILocation(line: 9089, column: 37, scope: !11970)
!11983 = !DILocation(line: 9089, column: 24, scope: !11970)
!11984 = !DILocation(line: 9090, column: 10, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11970, file: !21, line: 9090, column: 9)
!11986 = !DILocation(line: 9090, column: 22, scope: !11985)
!11987 = !DILocation(line: 9090, column: 25, scope: !11985)
!11988 = !DILocation(line: 9090, column: 9, scope: !11970)
!11989 = !DILocation(line: 9091, column: 16, scope: !11985)
!11990 = !DILocation(line: 9091, column: 9, scope: !11985)
!11991 = !DILocation(line: 9092, column: 56, scope: !11970)
!11992 = !DILocation(line: 9092, column: 23, scope: !11970)
!11993 = !DILocation(line: 9092, column: 21, scope: !11970)
!11994 = !DILocation(line: 9093, column: 9, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11970, file: !21, line: 9093, column: 9)
!11996 = !DILocation(line: 9093, column: 9, scope: !11970)
!11997 = !DILocation(line: 9094, column: 9, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11995, file: !21, line: 9093, column: 34)
!11999 = !DILocation(line: 9095, column: 16, scope: !11998)
!12000 = !DILocation(line: 9095, column: 9, scope: !11998)
!12001 = !DILocation(line: 9097, column: 5, scope: !11970)
!12002 = !DILocation(line: 9098, column: 47, scope: !11970)
!12003 = !DILocation(line: 9098, column: 55, scope: !11970)
!12004 = !DILocation(line: 9098, column: 61, scope: !11970)
!12005 = !DILocation(line: 9098, column: 12, scope: !11970)
!12006 = !DILocation(line: 9098, column: 5, scope: !11970)
!12007 = !DILocation(line: 9100, column: 1, scope: !11970)
!12008 = !DISubprogram(name: "PyImport_GetModule", scope: !2195, file: !2195, line: 36, type: !84, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12009 = distinct !DISubprogram(name: "__Pyx_Import", scope: !21, file: !21, line: 8942, type: !253, scopeLine: 8942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12010)
!12010 = !{!12011, !12012, !12013, !12014, !12015, !12016, !12017}
!12011 = !DILocalVariable(name: "name", arg: 1, scope: !12009, file: !21, line: 8942, type: !28)
!12012 = !DILocalVariable(name: "from_list", arg: 2, scope: !12009, file: !21, line: 8942, type: !28)
!12013 = !DILocalVariable(name: "level", arg: 3, scope: !12009, file: !21, line: 8942, type: !7)
!12014 = !DILocalVariable(name: "module", scope: !12009, file: !21, line: 8943, type: !28)
!12015 = !DILocalVariable(name: "empty_dict", scope: !12009, file: !21, line: 8944, type: !28)
!12016 = !DILocalVariable(name: "empty_list", scope: !12009, file: !21, line: 8945, type: !28)
!12017 = !DILabel(scope: !12009, name: "bad", file: !21, line: 8990)
!12018 = !DILocation(line: 8942, column: 41, scope: !12009)
!12019 = !DILocation(line: 8942, column: 57, scope: !12009)
!12020 = !DILocation(line: 8942, column: 72, scope: !12009)
!12021 = !DILocation(line: 8943, column: 5, scope: !12009)
!12022 = !DILocation(line: 8943, column: 15, scope: !12009)
!12023 = !DILocation(line: 8944, column: 5, scope: !12009)
!12024 = !DILocation(line: 8944, column: 15, scope: !12009)
!12025 = !DILocation(line: 8945, column: 5, scope: !12009)
!12026 = !DILocation(line: 8945, column: 15, scope: !12009)
!12027 = !DILocation(line: 8958, column: 18, scope: !12009)
!12028 = !DILocation(line: 8958, column: 16, scope: !12009)
!12029 = !DILocation(line: 8959, column: 9, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12009, file: !21, line: 8959, column: 9)
!12031 = !DILocation(line: 8959, column: 9, scope: !12009)
!12032 = !DILocation(line: 8960, column: 9, scope: !12030)
!12033 = !DILocation(line: 8963, column: 13, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !21, line: 8963, column: 13)
!12035 = distinct !DILexicalBlock(scope: !12009, file: !21, line: 8961, column: 5)
!12036 = !DILocation(line: 8963, column: 19, scope: !12034)
!12037 = !DILocation(line: 8963, column: 13, scope: !12035)
!12038 = !DILocation(line: 8966, column: 21, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !21, line: 8964, column: 57)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !21, line: 8964, column: 17)
!12041 = distinct !DILexicalBlock(scope: !12034, file: !21, line: 8963, column: 26)
!12042 = !DILocation(line: 8966, column: 27, scope: !12039)
!12043 = !DILocation(line: 8966, column: 36, scope: !12039)
!12044 = !DILocation(line: 8966, column: 48, scope: !12039)
!12045 = !DILocation(line: 8965, column: 26, scope: !12039)
!12046 = !DILocation(line: 8965, column: 24, scope: !12039)
!12047 = !DILocation(line: 8967, column: 21, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12039, file: !21, line: 8967, column: 21)
!12049 = !DILocation(line: 8967, column: 21, scope: !12039)
!12050 = !DILocation(line: 8968, column: 25, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12052, file: !21, line: 8968, column: 25)
!12052 = distinct !DILexicalBlock(scope: !12048, file: !21, line: 8967, column: 40)
!12053 = !DILocation(line: 8968, column: 25, scope: !12052)
!12054 = !DILocation(line: 8969, column: 25, scope: !12051)
!12055 = !DILocation(line: 8970, column: 21, scope: !12052)
!12056 = !DILocation(line: 8971, column: 17, scope: !12052)
!12057 = !DILocation(line: 8973, column: 19, scope: !12041)
!12058 = !DILocation(line: 8974, column: 9, scope: !12041)
!12059 = !DILocation(line: 8976, column: 14, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12035, file: !21, line: 8976, column: 13)
!12061 = !DILocation(line: 8976, column: 13, scope: !12035)
!12062 = !DILocation(line: 8986, column: 17, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12060, file: !21, line: 8976, column: 22)
!12064 = !DILocation(line: 8986, column: 23, scope: !12063)
!12065 = !DILocation(line: 8986, column: 32, scope: !12063)
!12066 = !DILocation(line: 8986, column: 44, scope: !12063)
!12067 = !DILocation(line: 8986, column: 55, scope: !12063)
!12068 = !DILocation(line: 8985, column: 22, scope: !12063)
!12069 = !DILocation(line: 8985, column: 20, scope: !12063)
!12070 = !DILocation(line: 8988, column: 9, scope: !12063)
!12071 = !DILocation(line: 8989, column: 5, scope: !12035)
!12072 = !DILocation(line: 8990, column: 1, scope: !12009)
!12073 = !DILocation(line: 8991, column: 5, scope: !12009)
!12074 = !DILocation(line: 8992, column: 5, scope: !12009)
!12075 = !DILocation(line: 8996, column: 12, scope: !12009)
!12076 = !DILocation(line: 8997, column: 1, scope: !12009)
!12077 = !DILocation(line: 8996, column: 5, scope: !12009)
!12078 = distinct !DISubprogram(name: "__Pyx_ImportDottedModule_WalkParts", scope: !21, file: !21, line: 9052, type: !114, scopeLine: 9052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12079)
!12079 = !{!12080, !12081, !12082, !12083, !12084, !12085, !12089}
!12080 = !DILocalVariable(name: "module", arg: 1, scope: !12078, file: !21, line: 9052, type: !28)
!12081 = !DILocalVariable(name: "name", arg: 2, scope: !12078, file: !21, line: 9052, type: !28)
!12082 = !DILocalVariable(name: "parts_tuple", arg: 3, scope: !12078, file: !21, line: 9052, type: !28)
!12083 = !DILocalVariable(name: "i", scope: !12078, file: !21, line: 9053, type: !34)
!12084 = !DILocalVariable(name: "nparts", scope: !12078, file: !21, line: 9053, type: !34)
!12085 = !DILocalVariable(name: "part", scope: !12086, file: !21, line: 9056, type: !28)
!12086 = distinct !DILexicalBlock(scope: !12087, file: !21, line: 9055, column: 42)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !21, line: 9055, column: 5)
!12088 = distinct !DILexicalBlock(scope: !12078, file: !21, line: 9055, column: 5)
!12089 = !DILocalVariable(name: "submodule", scope: !12086, file: !21, line: 9056, type: !28)
!12090 = !DILocation(line: 9052, column: 63, scope: !12078)
!12091 = !DILocation(line: 9052, column: 81, scope: !12078)
!12092 = !DILocation(line: 9052, column: 97, scope: !12078)
!12093 = !DILocation(line: 9053, column: 5, scope: !12078)
!12094 = !DILocation(line: 9053, column: 16, scope: !12078)
!12095 = !DILocation(line: 9053, column: 19, scope: !12078)
!12096 = !DILocation(line: 9054, column: 14, scope: !12078)
!12097 = !DILocation(line: 9054, column: 12, scope: !12078)
!12098 = !DILocation(line: 9055, column: 11, scope: !12088)
!12099 = !DILocation(line: 9055, column: 10, scope: !12088)
!12100 = !DILocation(line: 9055, column: 15, scope: !12087)
!12101 = !DILocation(line: 9055, column: 19, scope: !12087)
!12102 = !DILocation(line: 9055, column: 17, scope: !12087)
!12103 = !DILocation(line: 9055, column: 26, scope: !12087)
!12104 = !DILocation(line: 9055, column: 29, scope: !12087)
!12105 = !DILocation(line: 0, scope: !12087)
!12106 = !DILocation(line: 9055, column: 5, scope: !12088)
!12107 = !DILocation(line: 9056, column: 9, scope: !12086)
!12108 = !DILocation(line: 9056, column: 19, scope: !12086)
!12109 = !DILocation(line: 9056, column: 26, scope: !12086)
!12110 = !DILocation(line: 9058, column: 16, scope: !12086)
!12111 = !DILocation(line: 9058, column: 14, scope: !12086)
!12112 = !DILocation(line: 9062, column: 54, scope: !12086)
!12113 = !DILocation(line: 9062, column: 62, scope: !12086)
!12114 = !DILocation(line: 9062, column: 21, scope: !12086)
!12115 = !DILocation(line: 9062, column: 19, scope: !12086)
!12116 = !DILocation(line: 9066, column: 9, scope: !12086)
!12117 = !DILocation(line: 9067, column: 18, scope: !12086)
!12118 = !DILocation(line: 9067, column: 16, scope: !12086)
!12119 = !DILocation(line: 9068, column: 5, scope: !12087)
!12120 = !DILocation(line: 9068, column: 5, scope: !12086)
!12121 = !DILocation(line: 9055, column: 38, scope: !12087)
!12122 = !DILocation(line: 9055, column: 5, scope: !12087)
!12123 = distinct !{!12123, !12106, !12124, !4154}
!12124 = !DILocation(line: 9068, column: 5, scope: !12088)
!12125 = !DILocation(line: 9069, column: 9, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12078, file: !21, line: 9069, column: 9)
!12127 = !DILocation(line: 9069, column: 9, scope: !12078)
!12128 = !DILocation(line: 9070, column: 48, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12126, file: !21, line: 9069, column: 28)
!12130 = !DILocation(line: 9070, column: 54, scope: !12129)
!12131 = !DILocation(line: 9070, column: 67, scope: !12129)
!12132 = !DILocation(line: 9070, column: 16, scope: !12129)
!12133 = !DILocation(line: 9070, column: 9, scope: !12129)
!12134 = !DILocation(line: 9072, column: 12, scope: !12078)
!12135 = !DILocation(line: 9072, column: 5, scope: !12078)
!12136 = !DILocation(line: 9073, column: 1, scope: !12078)
!12137 = !DISubprogram(name: "PyImport_ImportModuleLevelObject", scope: !2195, file: !2195, line: 60, type: !12138, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12138 = !DISubroutineType(types: !12139)
!12139 = !{!28, !28, !28, !28, !28, !7}
!12140 = distinct !DISubprogram(name: "__Pyx__ImportDottedModule_Error", scope: !21, file: !21, line: 9001, type: !12141, scopeLine: 9001, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12143)
!12141 = !DISubroutineType(types: !12142)
!12142 = !{!28, !28, !28, !34}
!12143 = !{!12144, !12145, !12146, !12147, !12148, !12149, !12150}
!12144 = !DILocalVariable(name: "name", arg: 1, scope: !12140, file: !21, line: 9001, type: !28)
!12145 = !DILocalVariable(name: "parts_tuple", arg: 2, scope: !12140, file: !21, line: 9001, type: !28)
!12146 = !DILocalVariable(name: "count", arg: 3, scope: !12140, file: !21, line: 9001, type: !34)
!12147 = !DILocalVariable(name: "partial_name", scope: !12140, file: !21, line: 9002, type: !28)
!12148 = !DILocalVariable(name: "slice", scope: !12140, file: !21, line: 9002, type: !28)
!12149 = !DILocalVariable(name: "sep", scope: !12140, file: !21, line: 9002, type: !28)
!12150 = !DILabel(scope: !12140, name: "bad", file: !21, line: 9029)
!12151 = !DILocation(line: 9001, column: 60, scope: !12140)
!12152 = !DILocation(line: 9001, column: 76, scope: !12140)
!12153 = !DILocation(line: 9001, column: 100, scope: !12140)
!12154 = !DILocation(line: 9002, column: 5, scope: !12140)
!12155 = !DILocation(line: 9002, column: 15, scope: !12140)
!12156 = !DILocation(line: 9002, column: 37, scope: !12140)
!12157 = !DILocation(line: 9002, column: 52, scope: !12140)
!12158 = !DILocation(line: 9003, column: 9, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12140, file: !21, line: 9003, column: 9)
!12160 = !DILocation(line: 9003, column: 9, scope: !12140)
!12161 = !DILocation(line: 9004, column: 9, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12159, file: !21, line: 9003, column: 37)
!12163 = !DILocation(line: 9005, column: 5, scope: !12162)
!12164 = !DILocation(line: 9006, column: 9, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12140, file: !21, line: 9006, column: 9)
!12166 = !DILocation(line: 9006, column: 9, scope: !12140)
!12167 = !DILocation(line: 9007, column: 24, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12165, file: !21, line: 9006, column: 57)
!12169 = !DILocation(line: 9007, column: 22, scope: !12168)
!12170 = !DILocation(line: 9008, column: 5, scope: !12168)
!12171 = !DILocation(line: 9009, column: 37, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12165, file: !21, line: 9008, column: 12)
!12173 = !DILocation(line: 9009, column: 53, scope: !12172)
!12174 = !DILocation(line: 9009, column: 17, scope: !12172)
!12175 = !DILocation(line: 9009, column: 15, scope: !12172)
!12176 = !DILocation(line: 9010, column: 13, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12172, file: !21, line: 9010, column: 13)
!12178 = !DILocation(line: 9010, column: 13, scope: !12172)
!12179 = !DILocation(line: 9011, column: 13, scope: !12177)
!12180 = !DILocation(line: 9012, column: 15, scope: !12172)
!12181 = !DILocation(line: 9012, column: 13, scope: !12172)
!12182 = !DILocation(line: 9013, column: 13, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12172, file: !21, line: 9013, column: 13)
!12184 = !DILocation(line: 9013, column: 13, scope: !12172)
!12185 = !DILocation(line: 9014, column: 13, scope: !12183)
!12186 = !DILocation(line: 9015, column: 39, scope: !12172)
!12187 = !DILocation(line: 9015, column: 44, scope: !12172)
!12188 = !DILocation(line: 9015, column: 24, scope: !12172)
!12189 = !DILocation(line: 9015, column: 22, scope: !12172)
!12190 = !DILocation(line: 9023, column: 9, scope: !12140)
!12191 = !DILocation(line: 9027, column: 33, scope: !12140)
!12192 = !DILocation(line: 9017, column: 5, scope: !12140)
!12193 = !DILocation(line: 9029, column: 1, scope: !12140)
!12194 = !DILocation(line: 9030, column: 5, scope: !12140)
!12195 = !DILocation(line: 9031, column: 5, scope: !12140)
!12196 = !DILocation(line: 9032, column: 5, scope: !12140)
!12197 = !DILocation(line: 9034, column: 1, scope: !12140)
!12198 = !DILocation(line: 9033, column: 5, scope: !12140)
!12199 = !DISubprogram(name: "PySequence_GetSlice", scope: !2616, file: !2616, line: 673, type: !12200, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12200 = !DISubroutineType(types: !12201)
!12201 = !{!28, !28, !34, !34}
!12202 = distinct !DISubprogram(name: "__Pyx_is_valid_index", scope: !21, file: !21, line: 1220, type: !12203, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12205)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!7, !34, !34}
!12205 = !{!12206, !12207}
!12206 = !DILocalVariable(name: "i", arg: 1, scope: !12202, file: !21, line: 1220, type: !34)
!12207 = !DILocalVariable(name: "limit", arg: 2, scope: !12202, file: !21, line: 1220, type: !34)
!12208 = !DILocation(line: 1220, column: 58, scope: !12202)
!12209 = !DILocation(line: 1220, column: 72, scope: !12202)
!12210 = !DILocation(line: 1221, column: 21, scope: !12202)
!12211 = !DILocation(line: 1221, column: 34, scope: !12202)
!12212 = !DILocation(line: 1221, column: 23, scope: !12202)
!12213 = !DILocation(line: 1221, column: 5, scope: !12202)
!12214 = distinct !DISubprogram(name: "__Pyx_GetItemInt_Generic", scope: !21, file: !21, line: 9128, type: !105, scopeLine: 9128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12215)
!12215 = !{!12216, !12217, !12218}
!12216 = !DILocalVariable(name: "o", arg: 1, scope: !12214, file: !21, line: 9128, type: !28)
!12217 = !DILocalVariable(name: "j", arg: 2, scope: !12214, file: !21, line: 9128, type: !28)
!12218 = !DILocalVariable(name: "r", scope: !12214, file: !21, line: 9129, type: !28)
!12219 = !DILocation(line: 9128, column: 53, scope: !12214)
!12220 = !DILocation(line: 9128, column: 66, scope: !12214)
!12221 = !DILocation(line: 9129, column: 5, scope: !12214)
!12222 = !DILocation(line: 9129, column: 15, scope: !12214)
!12223 = !DILocation(line: 9130, column: 9, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12214, file: !21, line: 9130, column: 9)
!12225 = !DILocation(line: 9130, column: 9, scope: !12214)
!12226 = !DILocation(line: 9130, column: 23, scope: !12224)
!12227 = !DILocation(line: 9131, column: 26, scope: !12214)
!12228 = !DILocation(line: 9131, column: 29, scope: !12214)
!12229 = !DILocation(line: 9131, column: 9, scope: !12214)
!12230 = !DILocation(line: 9131, column: 7, scope: !12214)
!12231 = !DILocation(line: 9132, column: 5, scope: !12214)
!12232 = !DILocation(line: 9133, column: 12, scope: !12214)
!12233 = !DILocation(line: 9133, column: 5, scope: !12214)
!12234 = !DILocation(line: 9134, column: 1, scope: !12214)
!12235 = !DISubprogram(name: "PyBytes_FromString", scope: !2267, file: !2267, line: 35, type: !2196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12236 = distinct !DISubprogram(name: "__Pyx_RaiseUnboundLocalError", scope: !21, file: !21, line: 9454, type: !12237, scopeLine: 9454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12239)
!12237 = !DISubroutineType(types: !12238)
!12238 = !{null, !54}
!12239 = !{!12240}
!12240 = !DILocalVariable(name: "varname", arg: 1, scope: !12236, file: !21, line: 9454, type: !54)
!12241 = !DILocation(line: 9454, column: 68, scope: !12236)
!12242 = !DILocation(line: 9455, column: 18, scope: !12236)
!12243 = !DILocation(line: 9455, column: 95, scope: !12236)
!12244 = !DILocation(line: 9455, column: 5, scope: !12236)
!12245 = !DILocation(line: 9456, column: 1, scope: !12236)
!12246 = !DILocation(line: 9913, column: 51, scope: !1257)
!12247 = !DILocation(line: 9913, column: 63, scope: !1257)
!12248 = !DILocation(line: 9914, column: 5, scope: !1257)
!12249 = !DILocation(line: 9914, column: 15, scope: !1257)
!12250 = !DILocation(line: 9915, column: 5, scope: !1257)
!12251 = !DILocation(line: 9915, column: 15, scope: !1257)
!12252 = !DILocation(line: 9915, column: 23, scope: !1257)
!12253 = !DILocation(line: 9915, column: 32, scope: !1257)
!12254 = !DILocation(line: 9917, column: 5, scope: !1257)
!12255 = !DILocation(line: 9917, column: 16, scope: !1257)
!12256 = !DILocation(line: 9919, column: 5, scope: !1257)
!12257 = !DILocation(line: 9920, column: 9, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !1257, file: !21, line: 9920, column: 9)
!12259 = !DILocation(line: 9920, column: 9, scope: !1257)
!12260 = !DILocation(line: 9921, column: 16, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12258, file: !21, line: 9920, column: 42)
!12262 = !DILocation(line: 9921, column: 9, scope: !12261)
!12263 = !DILocation(line: 9923, column: 27, scope: !1257)
!12264 = !DILocation(line: 9923, column: 5, scope: !1257)
!12265 = !DILocation(line: 9925, column: 48, scope: !1257)
!12266 = !DILocation(line: 9925, column: 27, scope: !1257)
!12267 = !DILocation(line: 9925, column: 25, scope: !1257)
!12268 = !DILocation(line: 9926, column: 9, scope: !1418)
!12269 = !DILocation(line: 9926, column: 9, scope: !1257)
!12270 = !DILocation(line: 9927, column: 9, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !21, line: 9927, column: 9)
!12272 = distinct !DILexicalBlock(scope: !12273, file: !21, line: 9927, column: 9)
!12273 = distinct !DILexicalBlock(scope: !1418, file: !21, line: 9926, column: 38)
!12274 = !DILocation(line: 9927, column: 9, scope: !12272)
!12275 = !DILocation(line: 9927, column: 9, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12271, file: !21, line: 9927, column: 9)
!12277 = !DILocation(line: 9927, column: 9, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12271, file: !21, line: 9927, column: 9)
!12279 = !{!1599, !1462, i64 216}
!12280 = !DILocation(line: 9930, column: 5, scope: !12273)
!12281 = !DILocation(line: 9933, column: 7, scope: !1417)
!12282 = !DILocation(line: 9933, column: 17, scope: !1417)
!12283 = !DILocation(line: 9933, column: 66, scope: !1417)
!12284 = !DILocation(line: 9933, column: 88, scope: !1417)
!12285 = !DILocation(line: 9933, column: 33, scope: !1417)
!12286 = !DILocation(line: 9934, column: 11, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !1417, file: !21, line: 9934, column: 11)
!12288 = !DILocation(line: 9934, column: 11, scope: !1417)
!12289 = !DILocation(line: 9935, column: 34, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12287, file: !21, line: 9934, column: 26)
!12291 = !DILocation(line: 9935, column: 21, scope: !12290)
!12292 = !DILocation(line: 9935, column: 19, scope: !12290)
!12293 = !DILocation(line: 9936, column: 9, scope: !12290)
!12294 = !DILocation(line: 9937, column: 7, scope: !12290)
!12295 = !DILocation(line: 9938, column: 9, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12287, file: !21, line: 9937, column: 14)
!12297 = !DILocation(line: 9939, column: 19, scope: !12296)
!12298 = !DILocation(line: 9941, column: 5, scope: !1418)
!12299 = !DILocation(line: 9942, column: 10, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !1257, file: !21, line: 9942, column: 9)
!12301 = !DILocation(line: 9942, column: 9, scope: !1257)
!12302 = !DILocation(line: 9943, column: 16, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12300, file: !21, line: 9942, column: 21)
!12304 = !DILocation(line: 9944, column: 33, scope: !12303)
!12305 = !DILocation(line: 9944, column: 55, scope: !12303)
!12306 = !DILocation(line: 9944, column: 16, scope: !12303)
!12307 = !DILocation(line: 9945, column: 5, scope: !12303)
!12308 = !DILocation(line: 9946, column: 14, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12300, file: !21, line: 9946, column: 14)
!12310 = !DILocation(line: 9946, column: 24, scope: !12309)
!12311 = !DILocation(line: 9946, column: 36, scope: !12309)
!12312 = !DILocation(line: 9946, column: 40, scope: !12309)
!12313 = !DILocation(line: 9946, column: 50, scope: !12309)
!12314 = !DILocation(line: 9946, column: 61, scope: !12309)
!12315 = !DILocation(line: 9946, column: 77, scope: !12309)
!12316 = !DILocation(line: 9946, column: 64, scope: !12309)
!12317 = !DILocation(line: 9946, column: 88, scope: !12309)
!12318 = !DILocation(line: 9946, column: 14, scope: !12300)
!12319 = !DILocation(line: 9947, column: 16, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12309, file: !21, line: 9946, column: 95)
!12321 = !DILocation(line: 9948, column: 5, scope: !12320)
!12322 = !DILocation(line: 9949, column: 29, scope: !1257)
!12323 = !DILocation(line: 9949, column: 37, scope: !1257)
!12324 = !DILocation(line: 9949, column: 44, scope: !1257)
!12325 = !DILocation(line: 9949, column: 52, scope: !1257)
!12326 = !DILocation(line: 9949, column: 5, scope: !1257)
!12327 = !DILocation(line: 9950, column: 12, scope: !1257)
!12328 = !DILocation(line: 9950, column: 5, scope: !1257)
!12329 = !DILocation(line: 9951, column: 1, scope: !1257)
!12330 = distinct !DISubprogram(name: "__pyx_find_code_object", scope: !21, file: !21, line: 9977, type: !12331, scopeLine: 9977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12333)
!12331 = !DISubroutineType(types: !12332)
!12332 = !{!520, !7}
!12333 = !{!12334, !12335, !12336}
!12334 = !DILocalVariable(name: "code_line", arg: 1, scope: !12330, file: !21, line: 9977, type: !7)
!12335 = !DILocalVariable(name: "code_object", scope: !12330, file: !21, line: 9978, type: !520)
!12336 = !DILocalVariable(name: "pos", scope: !12330, file: !21, line: 9979, type: !7)
!12337 = !DILocation(line: 9977, column: 49, scope: !12330)
!12338 = !DILocation(line: 9978, column: 5, scope: !12330)
!12339 = !DILocation(line: 9978, column: 19, scope: !12330)
!12340 = !DILocation(line: 9979, column: 5, scope: !12330)
!12341 = !DILocation(line: 9979, column: 9, scope: !12330)
!12342 = !DILocation(line: 9980, column: 9, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12330, file: !21, line: 9980, column: 9)
!12344 = !DILocation(line: 9980, column: 30, scope: !12343)
!12345 = !DILocation(line: 9980, column: 33, scope: !12343)
!12346 = !{!12347, !1462, i64 8}
!12347 = !{!"__Pyx_CodeObjectCache", !1558, i64 0, !1558, i64 4, !1462, i64 8}
!12348 = !DILocation(line: 9980, column: 9, scope: !12330)
!12349 = !DILocation(line: 9981, column: 9, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12343, file: !21, line: 9980, column: 70)
!12351 = !DILocation(line: 9983, column: 54, scope: !12330)
!12352 = !DILocation(line: 9983, column: 80, scope: !12330)
!12353 = !{!12347, !1558, i64 0}
!12354 = !DILocation(line: 9983, column: 87, scope: !12330)
!12355 = !DILocation(line: 9983, column: 11, scope: !12330)
!12356 = !DILocation(line: 9983, column: 9, scope: !12330)
!12357 = !DILocation(line: 9984, column: 9, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12330, file: !21, line: 9984, column: 9)
!12359 = !DILocation(line: 9984, column: 49, scope: !12358)
!12360 = !DILocation(line: 9984, column: 52, scope: !12358)
!12361 = !{!12362, !1558, i64 8}
!12362 = !{!"", !1462, i64 0, !1558, i64 8}
!12363 = !DILocation(line: 9984, column: 9, scope: !12330)
!12364 = !DILocation(line: 9985, column: 9, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12358, file: !21, line: 9984, column: 116)
!12366 = !DILocation(line: 9987, column: 36, scope: !12330)
!12367 = !DILocation(line: 9987, column: 44, scope: !12330)
!12368 = !DILocation(line: 9987, column: 19, scope: !12330)
!12369 = !DILocation(line: 9987, column: 49, scope: !12330)
!12370 = !{!12362, !1462, i64 0}
!12371 = !DILocation(line: 9987, column: 17, scope: !12330)
!12372 = !DILocation(line: 9988, column: 5, scope: !12330)
!12373 = !DILocation(line: 9989, column: 12, scope: !12330)
!12374 = !DILocation(line: 9989, column: 5, scope: !12330)
!12375 = !DILocation(line: 9990, column: 1, scope: !12330)
!12376 = distinct !DISubprogram(name: "__Pyx_CreateCodeObjectForTraceback", scope: !21, file: !21, line: 10127, type: !12377, scopeLine: 10129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12379)
!12377 = !DISubroutineType(types: !12378)
!12378 = !{!520, !54, !7, !7, !54}
!12379 = !{!12380, !12381, !12382, !12383, !12384, !12385, !12386}
!12380 = !DILocalVariable(name: "funcname", arg: 1, scope: !12376, file: !21, line: 10128, type: !54)
!12381 = !DILocalVariable(name: "c_line", arg: 2, scope: !12376, file: !21, line: 10128, type: !7)
!12382 = !DILocalVariable(name: "py_line", arg: 3, scope: !12376, file: !21, line: 10129, type: !7)
!12383 = !DILocalVariable(name: "filename", arg: 4, scope: !12376, file: !21, line: 10129, type: !54)
!12384 = !DILocalVariable(name: "py_code", scope: !12376, file: !21, line: 10130, type: !520)
!12385 = !DILocalVariable(name: "py_funcname", scope: !12376, file: !21, line: 10131, type: !28)
!12386 = !DILabel(scope: !12376, name: "bad", file: !21, line: 10179)
!12387 = !DILocation(line: 10128, column: 25, scope: !12376)
!12388 = !DILocation(line: 10128, column: 39, scope: !12376)
!12389 = !DILocation(line: 10129, column: 17, scope: !12376)
!12390 = !DILocation(line: 10129, column: 38, scope: !12376)
!12391 = !DILocation(line: 10130, column: 5, scope: !12376)
!12392 = !DILocation(line: 10130, column: 19, scope: !12376)
!12393 = !DILocation(line: 10131, column: 5, scope: !12376)
!12394 = !DILocation(line: 10131, column: 15, scope: !12376)
!12395 = !DILocation(line: 10137, column: 9, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12376, file: !21, line: 10137, column: 9)
!12397 = !DILocation(line: 10137, column: 9, scope: !12376)
!12398 = !DILocation(line: 10142, column: 59, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12396, file: !21, line: 10137, column: 17)
!12400 = !DILocation(line: 10142, column: 69, scope: !12399)
!12401 = !DILocation(line: 10142, column: 84, scope: !12399)
!12402 = !DILocation(line: 10142, column: 23, scope: !12399)
!12403 = !DILocation(line: 10142, column: 21, scope: !12399)
!12404 = !DILocation(line: 10143, column: 14, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12399, file: !21, line: 10143, column: 13)
!12406 = !DILocation(line: 10143, column: 13, scope: !12399)
!12407 = !DILocation(line: 10143, column: 27, scope: !12405)
!12408 = !DILocation(line: 10144, column: 37, scope: !12399)
!12409 = !DILocation(line: 10144, column: 20, scope: !12399)
!12410 = !DILocation(line: 10144, column: 18, scope: !12399)
!12411 = !DILocation(line: 10145, column: 14, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12399, file: !21, line: 10145, column: 13)
!12413 = !DILocation(line: 10145, column: 13, scope: !12399)
!12414 = !DILocation(line: 10145, column: 24, scope: !12412)
!12415 = !DILocation(line: 10147, column: 5, scope: !12399)
!12416 = !DILocation(line: 10175, column: 31, scope: !12376)
!12417 = !DILocation(line: 10175, column: 41, scope: !12376)
!12418 = !DILocation(line: 10175, column: 51, scope: !12376)
!12419 = !DILocation(line: 10175, column: 15, scope: !12376)
!12420 = !DILocation(line: 10175, column: 13, scope: !12376)
!12421 = !DILocation(line: 10177, column: 5, scope: !12376)
!12422 = !DILocation(line: 10178, column: 12, scope: !12376)
!12423 = !DILocation(line: 10178, column: 5, scope: !12376)
!12424 = !DILocation(line: 10179, column: 1, scope: !12376)
!12425 = !DILocation(line: 10180, column: 5, scope: !12376)
!12426 = !DILocation(line: 10184, column: 5, scope: !12376)
!12427 = !DILocation(line: 10185, column: 1, scope: !12376)
!12428 = distinct !DISubprogram(name: "__pyx_insert_code_object", scope: !21, file: !21, line: 9991, type: !12429, scopeLine: 9991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12431)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{null, !7, !520}
!12431 = !{!12432, !12433, !12434, !12435, !12436, !12437, !12440}
!12432 = !DILocalVariable(name: "code_line", arg: 1, scope: !12428, file: !21, line: 9991, type: !7)
!12433 = !DILocalVariable(name: "code_object", arg: 2, scope: !12428, file: !21, line: 9991, type: !520)
!12434 = !DILocalVariable(name: "pos", scope: !12428, file: !21, line: 9992, type: !7)
!12435 = !DILocalVariable(name: "i", scope: !12428, file: !21, line: 9992, type: !7)
!12436 = !DILocalVariable(name: "entries", scope: !12428, file: !21, line: 9993, type: !515)
!12437 = !DILocalVariable(name: "tmp", scope: !12438, file: !21, line: 10011, type: !520)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !21, line: 10010, column: 107)
!12439 = distinct !DILexicalBlock(scope: !12428, file: !21, line: 10010, column: 9)
!12440 = !DILocalVariable(name: "new_max", scope: !12441, file: !21, line: 10017, type: !7)
!12441 = distinct !DILexicalBlock(scope: !12442, file: !21, line: 10016, column: 63)
!12442 = distinct !DILexicalBlock(scope: !12428, file: !21, line: 10016, column: 9)
!12443 = !DILocation(line: 9991, column: 42, scope: !12428)
!12444 = !DILocation(line: 9991, column: 67, scope: !12428)
!12445 = !DILocation(line: 9992, column: 5, scope: !12428)
!12446 = !DILocation(line: 9992, column: 9, scope: !12428)
!12447 = !DILocation(line: 9992, column: 14, scope: !12428)
!12448 = !DILocation(line: 9993, column: 5, scope: !12428)
!12449 = !DILocation(line: 9993, column: 33, scope: !12428)
!12450 = !DILocation(line: 9993, column: 60, scope: !12428)
!12451 = !DILocation(line: 9994, column: 9, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12428, file: !21, line: 9994, column: 9)
!12453 = !DILocation(line: 9994, column: 9, scope: !12428)
!12454 = !DILocation(line: 9995, column: 9, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12452, file: !21, line: 9994, column: 31)
!12456 = !DILocation(line: 9997, column: 9, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12428, file: !21, line: 9997, column: 9)
!12458 = !DILocation(line: 9997, column: 9, scope: !12428)
!12459 = !DILocation(line: 9998, column: 48, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12457, file: !21, line: 9997, column: 29)
!12461 = !DILocation(line: 9998, column: 17, scope: !12460)
!12462 = !DILocation(line: 9999, column: 13, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12460, file: !21, line: 9999, column: 13)
!12464 = !DILocation(line: 9999, column: 13, scope: !12460)
!12465 = !DILocation(line: 10000, column: 40, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12463, file: !21, line: 9999, column: 30)
!12467 = !DILocation(line: 10000, column: 38, scope: !12466)
!12468 = !DILocation(line: 10001, column: 40, scope: !12466)
!12469 = !{!12347, !1558, i64 4}
!12470 = !DILocation(line: 10002, column: 36, scope: !12466)
!12471 = !DILocation(line: 10003, column: 36, scope: !12466)
!12472 = !DILocation(line: 10003, column: 13, scope: !12466)
!12473 = !DILocation(line: 10003, column: 24, scope: !12466)
!12474 = !DILocation(line: 10003, column: 34, scope: !12466)
!12475 = !DILocation(line: 10004, column: 38, scope: !12466)
!12476 = !DILocation(line: 10004, column: 13, scope: !12466)
!12477 = !DILocation(line: 10004, column: 24, scope: !12466)
!12478 = !DILocation(line: 10004, column: 36, scope: !12466)
!12479 = !DILocation(line: 10005, column: 13, scope: !12466)
!12480 = !DILocation(line: 10006, column: 9, scope: !12466)
!12481 = !DILocation(line: 10007, column: 9, scope: !12460)
!12482 = !DILocation(line: 10009, column: 54, scope: !12428)
!12483 = !DILocation(line: 10009, column: 80, scope: !12428)
!12484 = !DILocation(line: 10009, column: 87, scope: !12428)
!12485 = !DILocation(line: 10009, column: 11, scope: !12428)
!12486 = !DILocation(line: 10009, column: 9, scope: !12428)
!12487 = !DILocation(line: 10010, column: 10, scope: !12439)
!12488 = !DILocation(line: 10010, column: 33, scope: !12439)
!12489 = !DILocation(line: 10010, column: 14, scope: !12439)
!12490 = !DILocation(line: 10010, column: 40, scope: !12439)
!12491 = !DILocation(line: 10010, column: 43, scope: !12439)
!12492 = !DILocation(line: 10010, column: 9, scope: !12428)
!12493 = !DILocation(line: 10011, column: 9, scope: !12438)
!12494 = !DILocation(line: 10011, column: 23, scope: !12438)
!12495 = !DILocation(line: 10011, column: 29, scope: !12438)
!12496 = !DILocation(line: 10011, column: 37, scope: !12438)
!12497 = !DILocation(line: 10011, column: 42, scope: !12438)
!12498 = !DILocation(line: 10012, column: 36, scope: !12438)
!12499 = !DILocation(line: 10012, column: 9, scope: !12438)
!12500 = !DILocation(line: 10012, column: 17, scope: !12438)
!12501 = !DILocation(line: 10012, column: 22, scope: !12438)
!12502 = !DILocation(line: 10012, column: 34, scope: !12438)
!12503 = !DILocation(line: 10013, column: 9, scope: !12438)
!12504 = !DILocation(line: 10015, column: 5, scope: !12439)
!12505 = !DILocation(line: 10016, column: 26, scope: !12442)
!12506 = !DILocation(line: 10016, column: 52, scope: !12442)
!12507 = !DILocation(line: 10016, column: 32, scope: !12442)
!12508 = !DILocation(line: 10016, column: 9, scope: !12428)
!12509 = !DILocation(line: 10017, column: 9, scope: !12441)
!12510 = !DILocation(line: 10017, column: 13, scope: !12441)
!12511 = !DILocation(line: 10017, column: 40, scope: !12441)
!12512 = !DILocation(line: 10017, column: 50, scope: !12441)
!12513 = !DILocation(line: 10019, column: 30, scope: !12441)
!12514 = !DILocation(line: 10019, column: 48, scope: !12441)
!12515 = !DILocation(line: 10019, column: 40, scope: !12441)
!12516 = !DILocation(line: 10019, column: 57, scope: !12441)
!12517 = !DILocation(line: 10018, column: 48, scope: !12441)
!12518 = !DILocation(line: 10018, column: 17, scope: !12441)
!12519 = !DILocation(line: 10020, column: 13, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12441, file: !21, line: 10020, column: 13)
!12521 = !DILocation(line: 10020, column: 13, scope: !12441)
!12522 = !DILocation(line: 10021, column: 13, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12520, file: !21, line: 10020, column: 33)
!12524 = !DILocation(line: 10023, column: 36, scope: !12441)
!12525 = !DILocation(line: 10023, column: 34, scope: !12441)
!12526 = !DILocation(line: 10024, column: 38, scope: !12441)
!12527 = !DILocation(line: 10024, column: 36, scope: !12441)
!12528 = !DILocation(line: 10025, column: 5, scope: !12442)
!12529 = !DILocation(line: 10025, column: 5, scope: !12441)
!12530 = !DILocation(line: 10026, column: 29, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12428, file: !21, line: 10026, column: 5)
!12532 = !DILocation(line: 10026, column: 11, scope: !12531)
!12533 = !DILocation(line: 10026, column: 10, scope: !12531)
!12534 = !DILocation(line: 10026, column: 36, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12531, file: !21, line: 10026, column: 5)
!12536 = !DILocation(line: 10026, column: 38, scope: !12535)
!12537 = !DILocation(line: 10026, column: 37, scope: !12535)
!12538 = !DILocation(line: 10026, column: 5, scope: !12531)
!12539 = !DILocation(line: 10027, column: 9, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12535, file: !21, line: 10026, column: 48)
!12541 = !DILocation(line: 10027, column: 17, scope: !12540)
!12542 = !DILocation(line: 10027, column: 22, scope: !12540)
!12543 = !DILocation(line: 10027, column: 30, scope: !12540)
!12544 = !DILocation(line: 10027, column: 31, scope: !12540)
!12545 = !{i64 0, i64 8, !1461, i64 8, i64 4, !1557}
!12546 = !DILocation(line: 10028, column: 5, scope: !12540)
!12547 = !DILocation(line: 10026, column: 44, scope: !12535)
!12548 = !DILocation(line: 10026, column: 5, scope: !12535)
!12549 = distinct !{!12549, !12538, !12550, !4154}
!12550 = !DILocation(line: 10028, column: 5, scope: !12531)
!12551 = !DILocation(line: 10029, column: 30, scope: !12428)
!12552 = !DILocation(line: 10029, column: 5, scope: !12428)
!12553 = !DILocation(line: 10029, column: 13, scope: !12428)
!12554 = !DILocation(line: 10029, column: 18, scope: !12428)
!12555 = !DILocation(line: 10029, column: 28, scope: !12428)
!12556 = !DILocation(line: 10030, column: 32, scope: !12428)
!12557 = !DILocation(line: 10030, column: 5, scope: !12428)
!12558 = !DILocation(line: 10030, column: 13, scope: !12428)
!12559 = !DILocation(line: 10030, column: 18, scope: !12428)
!12560 = !DILocation(line: 10030, column: 30, scope: !12428)
!12561 = !DILocation(line: 10031, column: 27, scope: !12428)
!12562 = !DILocation(line: 10032, column: 5, scope: !12428)
!12563 = !DILocation(line: 10033, column: 1, scope: !12428)
!12564 = !DISubprogram(name: "PyFrame_New", scope: !12565, file: !12565, line: 9, type: !12566, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12565 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/cpython/frameobject.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "50587ac76f9edfbe72d42a5de7f9d73a")
!12566 = !DISubroutineType(types: !12567)
!12567 = !{!1316, !1260, !520, !28, !28}
!12568 = !DISubprogram(name: "PyTraceBack_Here", scope: !12569, file: !12569, line: 9, type: !12570, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12569 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/traceback.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "240e826f65155873105b5c84d4393cdf")
!12570 = !DISubroutineType(types: !12571)
!12571 = !{!7, !1316}
!12572 = !DISubprogram(name: "PyObject_Not", scope: !6, file: !6, line: 304, type: !122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12573 = distinct !DISubprogram(name: "__pyx_bisect_code_objects", scope: !21, file: !21, line: 9956, type: !12574, scopeLine: 9956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12576)
!12574 = !DISubroutineType(types: !12575)
!12575 = !{!7, !515, !7, !7}
!12576 = !{!12577, !12578, !12579, !12580, !12581, !12582}
!12577 = !DILocalVariable(name: "entries", arg: 1, scope: !12573, file: !21, line: 9956, type: !515)
!12578 = !DILocalVariable(name: "count", arg: 2, scope: !12573, file: !21, line: 9956, type: !7)
!12579 = !DILocalVariable(name: "code_line", arg: 3, scope: !12573, file: !21, line: 9956, type: !7)
!12580 = !DILocalVariable(name: "start", scope: !12573, file: !21, line: 9957, type: !7)
!12581 = !DILocalVariable(name: "mid", scope: !12573, file: !21, line: 9957, type: !7)
!12582 = !DILocalVariable(name: "end", scope: !12573, file: !21, line: 9957, type: !7)
!12583 = !DILocation(line: 9956, column: 66, scope: !12573)
!12584 = !DILocation(line: 9956, column: 79, scope: !12573)
!12585 = !DILocation(line: 9956, column: 90, scope: !12573)
!12586 = !DILocation(line: 9957, column: 5, scope: !12573)
!12587 = !DILocation(line: 9957, column: 9, scope: !12573)
!12588 = !DILocation(line: 9957, column: 20, scope: !12573)
!12589 = !DILocation(line: 9957, column: 29, scope: !12573)
!12590 = !DILocation(line: 9957, column: 35, scope: !12573)
!12591 = !DILocation(line: 9957, column: 41, scope: !12573)
!12592 = !DILocation(line: 9958, column: 9, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12573, file: !21, line: 9958, column: 9)
!12594 = !DILocation(line: 9958, column: 13, scope: !12593)
!12595 = !DILocation(line: 9958, column: 18, scope: !12593)
!12596 = !DILocation(line: 9958, column: 21, scope: !12593)
!12597 = !DILocation(line: 9958, column: 33, scope: !12593)
!12598 = !DILocation(line: 9958, column: 41, scope: !12593)
!12599 = !DILocation(line: 9958, column: 46, scope: !12593)
!12600 = !DILocation(line: 9958, column: 31, scope: !12593)
!12601 = !DILocation(line: 9958, column: 9, scope: !12573)
!12602 = !DILocation(line: 9959, column: 16, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12593, file: !21, line: 9958, column: 57)
!12604 = !DILocation(line: 9959, column: 9, scope: !12603)
!12605 = !DILocation(line: 9961, column: 5, scope: !12573)
!12606 = !DILocation(line: 9961, column: 12, scope: !12573)
!12607 = !DILocation(line: 9961, column: 20, scope: !12573)
!12608 = !DILocation(line: 9961, column: 18, scope: !12573)
!12609 = !DILocation(line: 9962, column: 15, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12573, file: !21, line: 9961, column: 25)
!12611 = !DILocation(line: 9962, column: 24, scope: !12610)
!12612 = !DILocation(line: 9962, column: 30, scope: !12610)
!12613 = !DILocation(line: 9962, column: 28, scope: !12610)
!12614 = !DILocation(line: 9962, column: 37, scope: !12610)
!12615 = !DILocation(line: 9962, column: 21, scope: !12610)
!12616 = !DILocation(line: 9962, column: 13, scope: !12610)
!12617 = !DILocation(line: 9963, column: 13, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12610, file: !21, line: 9963, column: 13)
!12619 = !DILocation(line: 9963, column: 25, scope: !12618)
!12620 = !DILocation(line: 9963, column: 33, scope: !12618)
!12621 = !DILocation(line: 9963, column: 38, scope: !12618)
!12622 = !DILocation(line: 9963, column: 23, scope: !12618)
!12623 = !DILocation(line: 9963, column: 13, scope: !12610)
!12624 = !DILocation(line: 9964, column: 19, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12618, file: !21, line: 9963, column: 49)
!12626 = !DILocation(line: 9964, column: 17, scope: !12625)
!12627 = !DILocation(line: 9965, column: 9, scope: !12625)
!12628 = !DILocation(line: 9965, column: 20, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12618, file: !21, line: 9965, column: 20)
!12630 = !DILocation(line: 9965, column: 32, scope: !12629)
!12631 = !DILocation(line: 9965, column: 40, scope: !12629)
!12632 = !DILocation(line: 9965, column: 45, scope: !12629)
!12633 = !DILocation(line: 9965, column: 30, scope: !12629)
!12634 = !DILocation(line: 9965, column: 20, scope: !12618)
!12635 = !DILocation(line: 9966, column: 22, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12629, file: !21, line: 9965, column: 56)
!12637 = !DILocation(line: 9966, column: 26, scope: !12636)
!12638 = !DILocation(line: 9966, column: 20, scope: !12636)
!12639 = !DILocation(line: 9967, column: 9, scope: !12636)
!12640 = !DILocation(line: 9968, column: 20, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12629, file: !21, line: 9967, column: 16)
!12642 = !DILocation(line: 9968, column: 13, scope: !12641)
!12643 = distinct !{!12643, !12605, !12644, !4154}
!12644 = !DILocation(line: 9970, column: 5, scope: !12573)
!12645 = !DILocation(line: 9971, column: 9, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12573, file: !21, line: 9971, column: 9)
!12647 = !DILocation(line: 9971, column: 22, scope: !12646)
!12648 = !DILocation(line: 9971, column: 30, scope: !12646)
!12649 = !DILocation(line: 9971, column: 35, scope: !12646)
!12650 = !DILocation(line: 9971, column: 19, scope: !12646)
!12651 = !DILocation(line: 9971, column: 9, scope: !12573)
!12652 = !DILocation(line: 9972, column: 16, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12646, file: !21, line: 9971, column: 46)
!12654 = !DILocation(line: 9972, column: 9, scope: !12653)
!12655 = !DILocation(line: 9974, column: 16, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12646, file: !21, line: 9973, column: 12)
!12657 = !DILocation(line: 9974, column: 20, scope: !12656)
!12658 = !DILocation(line: 9974, column: 9, scope: !12656)
!12659 = !DILocation(line: 9976, column: 1, scope: !12573)
!12660 = !DISubprogram(name: "PyUnicode_FromFormat", scope: !424, file: !424, line: 258, type: !12661, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12661 = !DISubroutineType(types: !12662)
!12662 = !{!28, !54, null}
!12663 = !DISubprogram(name: "PyUnicode_AsUTF8", scope: !13, file: !13, line: 857, type: !12664, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12664 = !DISubroutineType(types: !12665)
!12665 = !{!54, !28}
!12666 = !DISubprogram(name: "PyCode_NewEmpty", scope: !523, file: !523, line: 163, type: !12667, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!520, !54, !54, !7}
!12669 = !DISubprogram(name: "PyMem_Malloc", scope: !12670, file: !12670, line: 52, type: !10614, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12670 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.11.6-6oftvkex3mj55vzhbivz73ixugpsaanv/include/python3.11/pymem.h", directory: "/local-ssd/py-cython-dy46r2wwmuglnne2coy4h6brykhora2n-build", checksumkind: CSK_MD5, checksum: "def2bc9518ac308a42a6a9761801810f")
!12671 = !DISubprogram(name: "PyMem_Realloc", scope: !12670, file: !12670, line: 54, type: !12672, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12672 = !DISubroutineType(types: !12673)
!12673 = !{!27, !27, !341}

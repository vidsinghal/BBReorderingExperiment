; ModuleID = 'samples/546.bc'
source_filename = "src/jemalloc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.atomic_zu_t = type { i64 }
%struct.hpa_shard_opts_s = type { i64, i64, i32, i8, i64, i64 }
%struct.sec_opts_s = type { i64, i64, i64, i64, i64 }
%struct.atomic_p_t = type { ptr }
%struct.atomic_u_t = type { i32 }
%struct.malloc_mutex_s = type { %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct.mutex_prof_data_t, %union.pthread_mutex_t, %struct.atomic_b_t }
%struct.mutex_prof_data_t = type { %struct.nstime_t, %struct.nstime_t, i64, i64, i32, %struct.atomic_u32_t, i64, ptr, i64 }
%struct.nstime_t = type { i64 }
%struct.atomic_u32_t = type { i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { ptr, ptr }
%struct.atomic_b_t = type { i8 }
%struct.arena_config_s = type { ptr, i8 }
%struct.log_var_s = type { %struct.atomic_u_t, ptr }
%struct.emap_s = type { %struct.rtree_s }
%struct.rtree_s = type { ptr, %struct.malloc_mutex_s, [262144 x %struct.rtree_node_elm_s] }
%struct.rtree_node_elm_s = type { %struct.atomic_p_t }
%struct.bin_info_s = type { i64, i64, i32, i32, %struct.bitmap_info_s }
%struct.bitmap_info_s = type { i64, i64 }
%struct.tsd_s = type { i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, ptr, i64, i64, i64, ptr, ptr, %struct.ticker_geom_s, i8, %struct.tsd_binshards_s, %struct.tsd_link_t, i8, %struct.peak_s, %struct.activity_callback_thunk_s, %struct.tcache_slow_s, %struct.rtree_ctx_s, %struct.atomic_u8_t, i64, i64, i64, i64, %struct.tcache_s, %struct.witness_tsd_s }
%struct.ticker_geom_s = type { i32, i32 }
%struct.tsd_binshards_s = type { [36 x i8] }
%struct.tsd_link_t = type { ptr, ptr }
%struct.peak_s = type { i64, i64 }
%struct.activity_callback_thunk_s = type { ptr, ptr }
%struct.tcache_slow_s = type { %struct.anon.8, %struct.cache_bin_array_descriptor_s, ptr, i32, [36 x i8], [36 x i8], [36 x i8], ptr, ptr }
%struct.anon.8 = type { ptr, ptr }
%struct.cache_bin_array_descriptor_s = type { %struct.anon.9, ptr }
%struct.anon.9 = type { ptr, ptr }
%struct.rtree_ctx_s = type { [16 x %struct.rtree_ctx_cache_elm_s], [8 x %struct.rtree_ctx_cache_elm_s] }
%struct.rtree_ctx_cache_elm_s = type { i64, ptr }
%struct.atomic_u8_t = type { i8 }
%struct.tcache_s = type { ptr, [73 x %struct.cache_bin_s] }
%struct.cache_bin_s = type { ptr, %struct.cache_bin_stats_s, i16, i16, i16 }
%struct.cache_bin_stats_s = type { i64 }
%struct.witness_tsd_s = type { %struct.witness_list_t, i8 }
%struct.witness_list_t = type { ptr }
%struct.rtree_level_s = type { i32, i32 }
%struct.arena_s = type { [2 x %struct.atomic_u_t], %struct.atomic_u_t, ptr, %struct.arena_stats_s, %struct.anon.1, %struct.anon.2, %struct.malloc_mutex_s, %struct.atomic_u_t, %struct.edata_list_active_t, %struct.malloc_mutex_s, %struct.pa_shard_s, i32, ptr, %struct.nstime_t, [0 x %struct.bin_s] }
%struct.arena_stats_s = type { i64, i64, i64, i64, %struct.atomic_zu_t, i64, i64, i64, i64, i64, i64, %struct.pa_shard_stats_s, i64, i64, [12 x %struct.mutex_prof_data_t], [196 x %struct.arena_stats_large_s], %struct.nstime_t }
%struct.pa_shard_stats_s = type { i64, %struct.pac_stats_s }
%struct.pac_stats_s = type { %struct.pac_decay_stats_s, %struct.pac_decay_stats_s, i64, %struct.atomic_zu_t, %struct.atomic_zu_t }
%struct.pac_decay_stats_s = type { %struct.locked_u64_s, %struct.locked_u64_s, %struct.locked_u64_s }
%struct.locked_u64_s = type { %struct.atomic_u64_t }
%struct.atomic_u64_t = type { i64 }
%struct.arena_stats_large_s = type { %struct.locked_u64_s, %struct.locked_u64_s, %struct.locked_u64_s, %struct.locked_u64_s, %struct.locked_u64_s, i64 }
%struct.anon.1 = type { ptr }
%struct.anon.2 = type { ptr }
%struct.edata_list_active_t = type { %struct.anon.3 }
%struct.anon.3 = type { ptr }
%struct.pa_shard_s = type { ptr, %struct.atomic_zu_t, %struct.atomic_b_t, i8, %struct.pac_s, %struct.sec_s, %struct.hpa_shard_s, %struct.edata_cache_s, i32, ptr, ptr, ptr, ptr }
%struct.pac_s = type { %struct.pai_s, %struct.ecache_s, %struct.ecache_s, %struct.ecache_s, ptr, ptr, ptr, %struct.exp_grow_s, %struct.malloc_mutex_s, %struct.san_bump_alloc_s, %struct.atomic_zu_t, %struct.decay_s, %struct.decay_s, ptr, ptr, %struct.atomic_zu_t }
%struct.pai_s = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ecache_s = type { %struct.malloc_mutex_s, %struct.eset_s, %struct.eset_s, i32, i32, i8 }
%struct.eset_s = type { [4 x i64], [200 x %struct.eset_bin_s], [200 x %struct.eset_bin_stats_s], %struct.edata_list_inactive_t, %struct.atomic_zu_t, i32 }
%struct.eset_bin_s = type { %struct.edata_heap_t, %struct.edata_cmp_summary_s }
%struct.edata_heap_t = type { %struct.ph_s }
%struct.ph_s = type { ptr, i64 }
%struct.edata_cmp_summary_s = type { i64, i64 }
%struct.eset_bin_stats_s = type { %struct.atomic_zu_t, %struct.atomic_zu_t }
%struct.edata_list_inactive_t = type { %struct.anon.4 }
%struct.anon.4 = type { ptr }
%struct.exp_grow_s = type { i32, i32 }
%struct.san_bump_alloc_s = type { %struct.malloc_mutex_s, ptr }
%struct.decay_s = type { %struct.malloc_mutex_s, i8, %struct.atomic_zd_t, %struct.nstime_t, %struct.nstime_t, i64, %struct.nstime_t, i64, i64, [200 x i64], i64 }
%struct.atomic_zd_t = type { i64 }
%struct.sec_s = type { %struct.pai_s, ptr, %struct.sec_opts_s, ptr, i32 }
%struct.hpa_shard_s = type { %struct.pai_s, ptr, %struct.malloc_mutex_s, %struct.malloc_mutex_s, ptr, %struct.edata_cache_fast_s, %struct.psset_s, i64, i32, ptr, %struct.hpa_shard_opts_s, i64, %struct.hpa_shard_nonderived_stats_s, %struct.nstime_t }
%struct.edata_cache_fast_s = type { %struct.edata_list_inactive_t, ptr, i8 }
%struct.psset_s = type { [64 x %struct.hpdata_age_heap_t], [1 x i64], %struct.psset_bin_stats_s, %struct.psset_stats_s, %struct.hpdata_empty_list_t, [128 x %struct.hpdata_purge_list_t], [2 x i64], %struct.hpdata_hugify_list_t }
%struct.hpdata_age_heap_t = type { %struct.ph_s }
%struct.psset_bin_stats_s = type { i64, i64, i64 }
%struct.psset_stats_s = type { [64 x [2 x %struct.psset_bin_stats_s]], [2 x %struct.psset_bin_stats_s], [2 x %struct.psset_bin_stats_s] }
%struct.hpdata_empty_list_t = type { %struct.anon.5 }
%struct.anon.5 = type { ptr }
%struct.hpdata_purge_list_t = type { %struct.anon.6 }
%struct.anon.6 = type { ptr }
%struct.hpdata_hugify_list_t = type { %struct.anon.7 }
%struct.anon.7 = type { ptr }
%struct.hpa_shard_nonderived_stats_s = type { i64, i64, i64, i64 }
%struct.edata_cache_s = type { %struct.edata_avail_t, %struct.atomic_zu_t, %struct.malloc_mutex_s, ptr }
%struct.edata_avail_t = type { %struct.ph_s }
%struct.bin_s = type { %struct.malloc_mutex_s, %struct.bin_stats_s, ptr, %struct.edata_heap_t, %struct.edata_list_active_t }
%struct.bin_stats_s = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.static_opts_s = type { i8, i8, i8, i8, i8, i64, ptr, ptr, i8, i8 }
%struct.dynamic_opts_s = type { ptr, i64, i64, i64, i64, i8, i32, i32 }
%struct.emap_alloc_ctx_t = type { i32, i8 }
%struct.hook_ralloc_args_s = type { i8, [4 x i64] }
%struct.rtree_contents_s = type { ptr, %struct.rtree_metadata_s }
%struct.rtree_metadata_s = type { i32, i32, i8, i8 }
%struct.buf_writer_t = type { ptr, ptr, ptr, i64, i64, i8 }
%struct.sc_data_s = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i64, i64, i8, [232 x %struct.sc_s] }
%struct.sc_s = type { i32, i32, i32, i32, i8, i8, i32, i32 }
%struct.tsdn_s = type { %struct.tsd_s }
%struct.cache_bin_info_s = type { i16 }
%struct.edata_s = type { i64, ptr, %union.anon.10, ptr, i64, %union.anon.11, %union.anon.14 }
%union.anon.10 = type { i64 }
%union.anon.11 = type { %union.anon.13 }
%union.anon.13 = type { %struct.edata_heap_link_t }
%struct.edata_heap_link_t = type { %struct.phn_link_s }
%struct.phn_link_s = type { ptr, ptr, ptr }
%union.anon.14 = type { %struct.slab_data_s }
%struct.slab_data_s = type { [8 x i64] }
%struct.tcaches_s = type { %union.anon.16 }
%union.anon.16 = type { ptr }
%struct.rtree_leaf_elm_s = type { %struct.atomic_p_t }
%struct.te_ctx_s = type { i8, ptr, ptr, ptr, ptr }
%struct.spin_t = type { i32 }
%struct.cpu_set_t = type { [16 x i64] }

@opt_abort = hidden global i8 0, align 1, !dbg !0
@opt_abort_conf = hidden global i8 0, align 1, !dbg !1429
@opt_confirm_conf = hidden global i8 0, align 1, !dbg !1431
@.str = private unnamed_addr constant [6 x i8] c"false\00", align 1, !dbg !1433
@opt_junk = hidden global ptr @.str, align 8, !dbg !1438
@opt_junk_alloc = hidden global i8 0, align 1, !dbg !1440
@opt_junk_free = hidden global i8 0, align 1, !dbg !1442
@opt_trust_madvise = hidden global i8 0, align 1, !dbg !1444
@opt_cache_oblivious = hidden global i8 1, align 1, !dbg !1446
@opt_zero_realloc_action = hidden global i32 1, align 4, !dbg !1448
@zero_realloc_count = hidden global %struct.atomic_zu_t zeroinitializer, align 8, !dbg !1451
@.str.1 = private unnamed_addr constant [6 x i8] c"alloc\00", align 1, !dbg !1453
@.str.2 = private unnamed_addr constant [5 x i8] c"free\00", align 1, !dbg !1455
@.str.3 = private unnamed_addr constant [6 x i8] c"abort\00", align 1, !dbg !1460
@zero_realloc_mode_names = hidden global [3 x ptr] [ptr @.str.1, ptr @.str.2, ptr @.str.3], align 16, !dbg !1462
@junk_alloc_callback = hidden global ptr @default_junk_alloc, align 8, !dbg !1467
@junk_free_callback = hidden global ptr @default_junk_free, align 8, !dbg !1469
@opt_utrace = hidden global i8 0, align 1, !dbg !1471
@opt_xmalloc = hidden global i8 0, align 1, !dbg !1473
@opt_experimental_infallible_new = hidden global i8 0, align 1, !dbg !1475
@opt_zero = hidden global i8 0, align 1, !dbg !1477
@opt_narenas = hidden global i32 0, align 4, !dbg !1479
@opt_narenas_ratio = hidden global i32 262144, align 4, !dbg !1481
@opt_hpa = hidden global i8 0, align 1, !dbg !1483
@opt_hpa_opts = hidden global %struct.hpa_shard_opts_s { i64 65536, i64 1992294, i32 16384, i8 0, i64 10000, i64 5000 }, align 8, !dbg !1485
@opt_hpa_sec_opts = hidden global %struct.sec_opts_s { i64 4, i64 32768, i64 262144, i64 131072, i64 0 }, align 8, !dbg !1487
@malloc_init_state = hidden global i32 3, align 4, !dbg !1489
@malloc_slow = hidden global i8 1, align 1, !dbg !1492
@arenas = hidden global [4095 x %struct.atomic_p_t] zeroinitializer, align 64, !dbg !2065
@narenas_total = internal global %struct.atomic_u_t zeroinitializer, align 4, !dbg !2070
@arenas_lock = hidden global %struct.malloc_mutex_s zeroinitializer, align 8, !dbg !2063
@opt_percpu_arena = external global i32, align 4
@narenas_auto = hidden global i32 0, align 4, !dbg !2072
@arena_config_default = external constant %struct.arena_config_s, align 8
@.str.4 = private unnamed_addr constant [46 x i8] c"<jemalloc>: Error in malloc(): out of memory\0A\00", align 1, !dbg !1494
@malloc_default.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.5 }, align 8, !dbg !1504
@.str.5 = private unnamed_addr constant [17 x i8] c"core.malloc.exit\00", align 1, !dbg !1499
@je_posix_memalign.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.6 }, align 8, !dbg !1551
@.str.6 = private unnamed_addr constant [26 x i8] c"core.posix_memalign.entry\00", align 1, !dbg !1546
@.str.7 = private unnamed_addr constant [60 x i8] c"<jemalloc>: Error allocating aligned memory: out of memory\0A\00", align 1, !dbg !1566
@.str.8 = private unnamed_addr constant [64 x i8] c"<jemalloc>: Error allocating aligned memory: invalid alignment\0A\00", align 1, !dbg !1571
@je_posix_memalign.log_var.9 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.10 }, align 8, !dbg !1579
@.str.10 = private unnamed_addr constant [25 x i8] c"core.posix_memalign.exit\00", align 1, !dbg !1574
@je_aligned_alloc.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.11 }, align 8, !dbg !1583
@.str.11 = private unnamed_addr constant [25 x i8] c"core.aligned_alloc.entry\00", align 1, !dbg !1581
@je_aligned_alloc.log_var.12 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.13 }, align 8, !dbg !1602
@.str.13 = private unnamed_addr constant [24 x i8] c"core.aligned_alloc.exit\00", align 1, !dbg !1597
@je_calloc.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.14 }, align 8, !dbg !1609
@.str.14 = private unnamed_addr constant [18 x i8] c"core.calloc.entry\00", align 1, !dbg !1604
@.str.15 = private unnamed_addr constant [46 x i8] c"<jemalloc>: Error in calloc(): out of memory\0A\00", align 1, !dbg !1621
@je_calloc.log_var.16 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.17 }, align 8, !dbg !1625
@.str.17 = private unnamed_addr constant [17 x i8] c"core.calloc.exit\00", align 1, !dbg !1623
@je_free.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.18 }, align 8, !dbg !1630
@.str.18 = private unnamed_addr constant [16 x i8] c"core.free.entry\00", align 1, !dbg !1627
@je_free.log_var.19 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.20 }, align 8, !dbg !1642
@.str.20 = private unnamed_addr constant [15 x i8] c"core.free.exit\00", align 1, !dbg !1637
@je_memalign.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.21 }, align 8, !dbg !1649
@.str.21 = private unnamed_addr constant [20 x i8] c"core.memalign.entry\00", align 1, !dbg !1644
@je_memalign.log_var.22 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.23 }, align 8, !dbg !1666
@.str.23 = private unnamed_addr constant [19 x i8] c"core.memalign.exit\00", align 1, !dbg !1661
@je_valloc.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.24 }, align 8, !dbg !1670
@.str.24 = private unnamed_addr constant [18 x i8] c"core.valloc.entry\00", align 1, !dbg !1668
@je_valloc.log_var.25 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.26 }, align 8, !dbg !1683
@.str.26 = private unnamed_addr constant [17 x i8] c"core.valloc.exit\00", align 1, !dbg !1681
@je_mallocx.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.27 }, align 8, !dbg !1687
@.str.27 = private unnamed_addr constant [19 x i8] c"core.mallocx.entry\00", align 1, !dbg !1685
@.str.28 = private unnamed_addr constant [47 x i8] c"<jemalloc>: Error in mallocx(): out of memory\0A\00", align 1, !dbg !1701
@je_mallocx.log_var.29 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.30 }, align 8, !dbg !1708
@.str.30 = private unnamed_addr constant [18 x i8] c"core.mallocx.exit\00", align 1, !dbg !1706
@je_rallocx.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.31 }, align 8, !dbg !1712
@.str.31 = private unnamed_addr constant [19 x i8] c"core.rallocx.entry\00", align 1, !dbg !1710
@je_rallocx.log_var.32 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.33 }, align 8, !dbg !1724
@.str.33 = private unnamed_addr constant [18 x i8] c"core.rallocx.exit\00", align 1, !dbg !1722
@je_realloc.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.34 }, align 8, !dbg !1728
@.str.34 = private unnamed_addr constant [19 x i8] c"core.realloc.entry\00", align 1, !dbg !1726
@je_realloc.log_var.35 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.36 }, align 8, !dbg !1751
@.str.36 = private unnamed_addr constant [18 x i8] c"core.realloc.exit\00", align 1, !dbg !1749
@je_realloc.log_var.37 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.36 }, align 8, !dbg !1753
@.str.38 = private unnamed_addr constant [47 x i8] c"<jemalloc>: Error in realloc(): out of memory\0A\00", align 1, !dbg !1755
@je_realloc.log_var.39 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.36 }, align 8, !dbg !1757
@je_xallocx.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.40 }, align 8, !dbg !1761
@.str.40 = private unnamed_addr constant [19 x i8] c"core.xallocx.entry\00", align 1, !dbg !1759
@arena_emap_global = external global %struct.emap_s, align 8
@je_xallocx.log_var.41 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.42 }, align 8, !dbg !1794
@.str.42 = private unnamed_addr constant [18 x i8] c"core.xallocx.exit\00", align 1, !dbg !1792
@je_sallocx.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.43 }, align 8, !dbg !1798
@.str.43 = private unnamed_addr constant [19 x i8] c"core.sallocx.entry\00", align 1, !dbg !1796
@je_sallocx.log_var.44 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.45 }, align 8, !dbg !1810
@.str.45 = private unnamed_addr constant [18 x i8] c"core.sallocx.exit\00", align 1, !dbg !1808
@je_dallocx.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.46 }, align 8, !dbg !1814
@.str.46 = private unnamed_addr constant [19 x i8] c"core.dallocx.entry\00", align 1, !dbg !1812
@je_dallocx.log_var.47 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.48 }, align 8, !dbg !1831
@.str.48 = private unnamed_addr constant [18 x i8] c"core.dallocx.exit\00", align 1, !dbg !1829
@je_sdallocx.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.49 }, align 8, !dbg !1835
@.str.49 = private unnamed_addr constant [20 x i8] c"core.sdallocx.entry\00", align 1, !dbg !1833
@je_sdallocx.log_var.50 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.51 }, align 8, !dbg !1846
@.str.51 = private unnamed_addr constant [19 x i8] c"core.sdallocx.exit\00", align 1, !dbg !1844
@je_sdallocx_noflags.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.49 }, align 8, !dbg !1848
@je_sdallocx_noflags.log_var.52 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.51 }, align 8, !dbg !1854
@je_nallocx.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.53 }, align 8, !dbg !1858
@.str.53 = private unnamed_addr constant [18 x i8] c"core.nallocx.exit\00", align 1, !dbg !1856
@je_nallocx.log_var.54 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.53 }, align 8, !dbg !1868
@je_nallocx.log_var.55 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.53 }, align 8, !dbg !1870
@je_mallctl.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.56 }, align 8, !dbg !1874
@.str.56 = private unnamed_addr constant [19 x i8] c"core.mallctl.entry\00", align 1, !dbg !1872
@je_mallctl.log_var.57 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.58 }, align 8, !dbg !1889
@.str.58 = private unnamed_addr constant [18 x i8] c"core.mallctl.exit\00", align 1, !dbg !1887
@je_mallctl.log_var.59 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.58 }, align 8, !dbg !1891
@je_mallctlnametomib.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.60 }, align 8, !dbg !1898
@.str.60 = private unnamed_addr constant [28 x i8] c"core.mallctlnametomib.entry\00", align 1, !dbg !1893
@je_mallctlnametomib.log_var.61 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.62 }, align 8, !dbg !1914
@.str.62 = private unnamed_addr constant [27 x i8] c"core.mallctlnametomib.exit\00", align 1, !dbg !1909
@je_mallctlnametomib.log_var.63 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.62 }, align 8, !dbg !1916
@je_mallctlbymib.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.64 }, align 8, !dbg !1920
@.str.64 = private unnamed_addr constant [24 x i8] c"core.mallctlbymib.entry\00", align 1, !dbg !1918
@je_mallctlbymib.log_var.65 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.66 }, align 8, !dbg !1941
@.str.66 = private unnamed_addr constant [23 x i8] c"core.mallctlbymib.exit\00", align 1, !dbg !1936
@je_mallctlbymib.log_var.67 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.66 }, align 8, !dbg !1943
@je_malloc_stats_print.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.68 }, align 8, !dbg !1950
@.str.68 = private unnamed_addr constant [30 x i8] c"core.malloc_stats_print.entry\00", align 1, !dbg !1945
@je_malloc_stats_print.log_var.69 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.70 }, align 8, !dbg !1983
@.str.70 = private unnamed_addr constant [29 x i8] c"core.malloc_stats_print.exit\00", align 1, !dbg !1978
@je_malloc_usable_size.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.71 }, align 8, !dbg !1987
@.str.71 = private unnamed_addr constant [30 x i8] c"core.malloc_usable_size.entry\00", align 1, !dbg !1985
@je_malloc_usable_size.log_var.72 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.73 }, align 8, !dbg !1997
@.str.73 = private unnamed_addr constant [29 x i8] c"core.malloc_usable_size.exit\00", align 1, !dbg !1995
@batch_alloc.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.74 }, align 8, !dbg !2001
@.str.74 = private unnamed_addr constant [23 x i8] c"core.batch_alloc.entry\00", align 1, !dbg !1999
@bin_infos = external global [36 x %struct.bin_info_s], align 16
@nhbins = external global i32, align 4
@batch_alloc.log_var.75 = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.76 }, align 8, !dbg !2055
@.str.76 = private unnamed_addr constant [22 x i8] c"core.batch_alloc.exit\00", align 1, !dbg !2050
@je_malloc_conf = weak global ptr null, align 8, !dbg !2057
@je_malloc_conf_2_conf_harder = weak hidden global ptr null, align 8, !dbg !2059
@ncpus = hidden global i32 0, align 4, !dbg !2061
@manual_arena_base = hidden global i32 0, align 4, !dbg !2074
@init_lock = internal global %struct.malloc_mutex_s zeroinitializer, align 8, !dbg !2081
@malloc_initializer = internal global i64 0, align 8, !dbg !2105
@opt_lg_san_uaf_align = external global i64, align 8
@opt_stats_print = external global i8, align 1
@.str.77 = private unnamed_addr constant [31 x i8] c"<jemalloc>: Error in atexit()\0A\00", align 1, !dbg !2083
@.str.78 = private unnamed_addr constant [64 x i8] c"<jemalloc>: HPA not supported in the current configuration; %s.\00", align 1, !dbg !2088
@.str.79 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1, !dbg !2090
@.str.80 = private unnamed_addr constant [10 x i8] c"disabling\00", align 1, !dbg !2095
@.str.81 = private unnamed_addr constant [7 x i8] c"arenas\00", align 1, !dbg !2100
@a0 = internal global ptr null, align 8, !dbg !2546
@malloc_conf_init_helper.opts_explain = internal global [5 x ptr] [ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86], align 16, !dbg !2127
@.str.82 = private unnamed_addr constant [40 x i8] c"string specified via --with-malloc-conf\00", align 1, !dbg !2108
@.str.83 = private unnamed_addr constant [53 x i8] c"string pointed to by the global variable malloc_conf\00", align 1, !dbg !2110
@.str.84 = private unnamed_addr constant [74 x i8] c"\22name\22 of the file referenced by the symbolic link named /etc/malloc.conf\00", align 1, !dbg !2115
@.str.85 = private unnamed_addr constant [46 x i8] c"value of the environment variable MALLOC_CONF\00", align 1, !dbg !2120
@.str.86 = private unnamed_addr constant [67 x i8] c"string pointed to by the global variable malloc_conf_2_conf_harder\00", align 1, !dbg !2122
@.str.87 = private unnamed_addr constant [40 x i8] c"<jemalloc>: malloc_conf #%u (%s): \22%s\22\0A\00", align 1, !dbg !2353
@.str.88 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !2355
@.str.89 = private unnamed_addr constant [13 x i8] c"confirm_conf\00", align 1, !dbg !2358
@.str.90 = private unnamed_addr constant [5 x i8] c"true\00", align 1, !dbg !2363
@.str.91 = private unnamed_addr constant [19 x i8] c"Invalid conf value\00", align 1, !dbg !2365
@.str.92 = private unnamed_addr constant [42 x i8] c"<jemalloc>: -- Set conf value: %.*s:%.*s\0A\00", align 1, !dbg !2367
@.str.93 = private unnamed_addr constant [11 x i8] c"abort_conf\00", align 1, !dbg !2372
@.str.94 = private unnamed_addr constant [14 x i8] c"trust_madvise\00", align 1, !dbg !2377
@.str.95 = private unnamed_addr constant [13 x i8] c"metadata_thp\00", align 1, !dbg !2382
@metadata_thp_mode_names = external global [0 x ptr], align 8
@opt_metadata_thp = external global i32, align 4
@.str.96 = private unnamed_addr constant [7 x i8] c"retain\00", align 1, !dbg !2384
@opt_retain = external global i8, align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"dss\00", align 1, !dbg !2386
@dss_prec_names = external global [0 x ptr], align 8
@.str.98 = private unnamed_addr constant [18 x i8] c"Error setting dss\00", align 1, !dbg !2389
@opt_dss = external global ptr, align 8
@.str.99 = private unnamed_addr constant [8 x i8] c"narenas\00", align 1, !dbg !2391
@.str.100 = private unnamed_addr constant [8 x i8] c"default\00", align 1, !dbg !2394
@.str.101 = private unnamed_addr constant [24 x i8] c"Out-of-range conf value\00", align 1, !dbg !2396
@.str.102 = private unnamed_addr constant [14 x i8] c"narenas_ratio\00", align 1, !dbg !2398
@.str.103 = private unnamed_addr constant [11 x i8] c"bin_shards\00", align 1, !dbg !2400
@.str.104 = private unnamed_addr constant [32 x i8] c"Invalid settings for bin_shards\00", align 1, !dbg !2402
@.str.105 = private unnamed_addr constant [15 x i8] c"mutex_max_spin\00", align 1, !dbg !2407
@opt_mutex_max_spin = external global i64, align 8
@.str.106 = private unnamed_addr constant [15 x i8] c"dirty_decay_ms\00", align 1, !dbg !2409
@opt_dirty_decay_ms = external global i64, align 8
@.str.107 = private unnamed_addr constant [15 x i8] c"muzzy_decay_ms\00", align 1, !dbg !2411
@opt_muzzy_decay_ms = external global i64, align 8
@.str.108 = private unnamed_addr constant [12 x i8] c"stats_print\00", align 1, !dbg !2413
@.str.109 = private unnamed_addr constant [17 x i8] c"stats_print_opts\00", align 1, !dbg !2416
@opt_stats_print_opts = external global [11 x i8], align 1
@.str.110 = private unnamed_addr constant [15 x i8] c"stats_interval\00", align 1, !dbg !2418
@opt_stats_interval = external global i64, align 8
@.str.111 = private unnamed_addr constant [20 x i8] c"stats_interval_opts\00", align 1, !dbg !2420
@opt_stats_interval_opts = external global [11 x i8], align 1
@.str.112 = private unnamed_addr constant [5 x i8] c"junk\00", align 1, !dbg !2422
@.str.113 = private unnamed_addr constant [5 x i8] c"zero\00", align 1, !dbg !2424
@.str.114 = private unnamed_addr constant [28 x i8] c"experimental_infallible_new\00", align 1, !dbg !2426
@.str.115 = private unnamed_addr constant [7 x i8] c"tcache\00", align 1, !dbg !2428
@opt_tcache = external global i8, align 1
@.str.116 = private unnamed_addr constant [11 x i8] c"tcache_max\00", align 1, !dbg !2430
@opt_tcache_max = external global i64, align 8
@.str.117 = private unnamed_addr constant [14 x i8] c"lg_tcache_max\00", align 1, !dbg !2432
@.str.118 = private unnamed_addr constant [21 x i8] c"lg_tcache_nslots_mul\00", align 1, !dbg !2434
@opt_lg_tcache_nslots_mul = external global i64, align 8
@.str.119 = private unnamed_addr constant [24 x i8] c"tcache_nslots_small_min\00", align 1, !dbg !2439
@opt_tcache_nslots_small_min = external global i32, align 4
@.str.120 = private unnamed_addr constant [24 x i8] c"tcache_nslots_small_max\00", align 1, !dbg !2441
@opt_tcache_nslots_small_max = external global i32, align 4
@.str.121 = private unnamed_addr constant [20 x i8] c"tcache_nslots_large\00", align 1, !dbg !2443
@opt_tcache_nslots_large = external global i32, align 4
@.str.122 = private unnamed_addr constant [21 x i8] c"tcache_gc_incr_bytes\00", align 1, !dbg !2445
@opt_tcache_gc_incr_bytes = external global i64, align 8
@.str.123 = private unnamed_addr constant [22 x i8] c"tcache_gc_delay_bytes\00", align 1, !dbg !2447
@opt_tcache_gc_delay_bytes = external global i64, align 8
@.str.124 = private unnamed_addr constant [26 x i8] c"lg_tcache_flush_small_div\00", align 1, !dbg !2449
@opt_lg_tcache_flush_small_div = external global i32, align 4
@.str.125 = private unnamed_addr constant [26 x i8] c"lg_tcache_flush_large_div\00", align 1, !dbg !2451
@opt_lg_tcache_flush_large_div = external global i32, align 4
@.str.126 = private unnamed_addr constant [19 x i8] c"oversize_threshold\00", align 1, !dbg !2453
@opt_oversize_threshold = external global i64, align 8
@.str.127 = private unnamed_addr constant [25 x i8] c"lg_extent_max_active_fit\00", align 1, !dbg !2455
@opt_lg_extent_max_active_fit = external global i64, align 8
@.str.128 = private unnamed_addr constant [13 x i8] c"percpu_arena\00", align 1, !dbg !2457
@percpu_arena_mode_names = external global [0 x ptr], align 8
@.str.129 = private unnamed_addr constant [18 x i8] c"background_thread\00", align 1, !dbg !2459
@opt_background_thread = external global i8, align 1
@.str.130 = private unnamed_addr constant [23 x i8] c"max_background_threads\00", align 1, !dbg !2461
@opt_max_background_threads = external global i64, align 8
@.str.131 = private unnamed_addr constant [4 x i8] c"hpa\00", align 1, !dbg !2463
@.str.132 = private unnamed_addr constant [19 x i8] c"hpa_slab_max_alloc\00", align 1, !dbg !2465
@.str.133 = private unnamed_addr constant [27 x i8] c"hpa_hugification_threshold\00", align 1, !dbg !2467
@.str.134 = private unnamed_addr constant [33 x i8] c"hpa_hugification_threshold_ratio\00", align 1, !dbg !2469
@.str.135 = private unnamed_addr constant [20 x i8] c"hpa_hugify_delay_ms\00", align 1, !dbg !2474
@.str.136 = private unnamed_addr constant [26 x i8] c"hpa_min_purge_interval_ms\00", align 1, !dbg !2476
@.str.137 = private unnamed_addr constant [15 x i8] c"hpa_dirty_mult\00", align 1, !dbg !2478
@.str.138 = private unnamed_addr constant [3 x i8] c"-1\00", align 1, !dbg !2480
@.str.139 = private unnamed_addr constant [16 x i8] c"hpa_sec_nshards\00", align 1, !dbg !2483
@.str.140 = private unnamed_addr constant [18 x i8] c"hpa_sec_max_alloc\00", align 1, !dbg !2485
@.str.141 = private unnamed_addr constant [18 x i8] c"hpa_sec_max_bytes\00", align 1, !dbg !2487
@.str.142 = private unnamed_addr constant [26 x i8] c"hpa_sec_bytes_after_flush\00", align 1, !dbg !2489
@.str.143 = private unnamed_addr constant [25 x i8] c"hpa_sec_batch_fill_extra\00", align 1, !dbg !2491
@.str.144 = private unnamed_addr constant [11 x i8] c"slab_sizes\00", align 1, !dbg !2493
@.str.145 = private unnamed_addr constant [32 x i8] c"Invalid settings for slab_sizes\00", align 1, !dbg !2495
@.str.146 = private unnamed_addr constant [4 x i8] c"thp\00", align 1, !dbg !2497
@thp_mode_names = external global [0 x ptr], align 8
@opt_thp = external global i32, align 4
@.str.147 = private unnamed_addr constant [13 x i8] c"zero_realloc\00", align 1, !dbg !2499
@.str.148 = private unnamed_addr constant [16 x i8] c"san_guard_small\00", align 1, !dbg !2501
@opt_san_guard_small = external global i64, align 8
@.str.149 = private unnamed_addr constant [16 x i8] c"san_guard_large\00", align 1, !dbg !2503
@opt_san_guard_large = external global i64, align 8
@.str.150 = private unnamed_addr constant [18 x i8] c"Invalid conf pair\00", align 1, !dbg !2505
@had_conf_error = internal global i8 0, align 1, !dbg !2534
@log_init_done = external global %struct.atomic_b_t, align 1
@.str.151 = private unnamed_addr constant [20 x i8] c"/etc/je_malloc.conf\00", align 1, !dbg !2511
@.str.152 = private unnamed_addr constant [15 x i8] c"JE_MALLOC_CONF\00", align 1, !dbg !2513
@.str.153 = private unnamed_addr constant [39 x i8] c"<jemalloc>: Conf string ends with key\0A\00", align 1, !dbg !2515
@.str.154 = private unnamed_addr constant [35 x i8] c"<jemalloc>: Malformed conf string\0A\00", align 1, !dbg !2520
@.str.155 = private unnamed_addr constant [41 x i8] c"<jemalloc>: Conf string ends with comma\0A\00", align 1, !dbg !2525
@.str.156 = private unnamed_addr constant [27 x i8] c"<jemalloc>: %s: %.*s:%.*s\0A\00", align 1, !dbg !2530
@.str.157 = private unnamed_addr constant [14 x i8] c"experimental_\00", align 1, !dbg !2532
@opt_prof_leak_error = external global i8, align 1
@opt_prof_final = external global i8, align 1
@.str.158 = private unnamed_addr constant [52 x i8] c"<jemalloc>: prof_leak_error is set w/o prof_final.\0A\00", align 1, !dbg !2536
@.str.159 = private unnamed_addr constant [72 x i8] c"<jemalloc>: Abort (abort_conf:true) on invalid conf value (see above).\0A\00", align 1, !dbg !2541
@background_thread_enabled_state = external global %struct.atomic_b_t, align 1
@tcache_maxclass = external global i64, align 8
@tcache_bin_info = external global ptr, align 8
@sz_index2size_tab = external global [232 x i64], align 16
@sz_size2index_tab = external global [0 x i8], align 1
@.str.160 = private unnamed_addr constant [70 x i8] c"<jemalloc>: error in background thread creation for arena %u. Abort.\0A\00", align 1, !dbg !2552
@compute_size_with_overflow.high_bits = internal constant i64 -4294967296, align 8, !dbg !2560
@imalloc_fastpath.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.161 }, align 8, !dbg !2573
@.str.161 = private unnamed_addr constant [18 x i8] c"core.malloc.entry\00", align 1, !dbg !2570
@tsd_tls = external thread_local(initialexec) global %struct.tsd_s, align 8
@fastpath_success_finish.log_var = internal global %struct.log_var_s { %struct.atomic_u_t zeroinitializer, ptr @.str.5 }, align 8, !dbg !2591
@tcaches = external global ptr, align 8
@.str.162 = private unnamed_addr constant [37 x i8] c"<jemalloc>: invalid tcache id (%u).\0A\00", align 1, !dbg !2601
@rtree_levels = internal constant [2 x %struct.rtree_level_s] [%struct.rtree_level_s { i32 18, i32 34 }, %struct.rtree_level_s { i32 18, i32 52 }], align 16, !dbg !2607
@sz_large_pad = external global i64, align 8
@.str.163 = private unnamed_addr constant [61 x i8] c"Called realloc(non-null-ptr, 0) with zero_realloc:abort set\0A\00", align 1, !dbg !2616
@tsd_booted = external global i8, align 1
@.str.164 = private unnamed_addr constant [83 x i8] c"<jemalloc>: Number of CPUs detected is not deterministic. Per-CPU arena disabled.\0A\00", align 1, !dbg !2621
@.str.165 = private unnamed_addr constant [39 x i8] c"<jemalloc>: Error in pthread_atfork()\0A\00", align 1, !dbg !2626
@.str.166 = private unnamed_addr constant [73 x i8] c"<jemalloc>: perCPU arena getcpu() not available. Setting narenas to %u.\0A\00", align 1, !dbg !2628
@.str.167 = private unnamed_addr constant [54 x i8] c"<jemalloc>: narenas w/ percpuarena beyond limit (%d)\0A\00", align 1, !dbg !2631
@.str.168 = private unnamed_addr constant [113 x i8] c"<jemalloc>: invalid configuration -- per physical CPU arena with odd number (%u) of CPUs (no hyper threading?).\0A\00", align 1, !dbg !2636
@.str.169 = private unnamed_addr constant [44 x i8] c"<jemalloc>: Reducing narenas to limit (%d)\0A\00", align 1, !dbg !2641
@malloc_slow_flags = internal global i8 0, align 1, !dbg !2646
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @jemalloc_constructor, ptr null }]

; Function Attrs: nounwind uwtable
define internal void @default_junk_alloc(ptr noundef %ptr, i64 noundef %usize) #0 !dbg !2654 {
entry:
  %ptr.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !2656, metadata !DIExpression()), !dbg !2662
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !2657, metadata !DIExpression()), !dbg !2665
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !2666, !tbaa !2658
  %1 = load i64, ptr %usize.addr, align 8, !dbg !2667, !tbaa !2663
  call void @llvm.memset.p0.i64(ptr align 1 %0, i8 -91, i64 %1, i1 false), !dbg !2668
  ret void, !dbg !2669
}

; Function Attrs: nounwind uwtable
define internal void @default_junk_free(ptr noundef %ptr, i64 noundef %usize) #0 !dbg !2670 {
entry:
  %ptr.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !2672, metadata !DIExpression()), !dbg !2674
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !2673, metadata !DIExpression()), !dbg !2675
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !2676, !tbaa !2658
  %1 = load i64, ptr %usize.addr, align 8, !dbg !2677, !tbaa !2663
  call void @llvm.memset.p0.i64(ptr align 1 %0, i8 90, i64 %1, i1 false), !dbg !2678
  ret void, !dbg !2679
}

; Function Attrs: nounwind uwtable
define hidden ptr @a0malloc(i64 noundef %size) #0 !dbg !2680 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !2682, metadata !DIExpression()), !dbg !2683
  %0 = load i64, ptr %size.addr, align 8, !dbg !2684, !tbaa !2663
  %call = call ptr @a0ialloc(i64 noundef %0, i1 noundef zeroext false, i1 noundef zeroext true), !dbg !2685
  ret ptr %call, !dbg !2686
}

; Function Attrs: nounwind uwtable
define internal ptr @a0ialloc(i64 noundef %size, i1 noundef zeroext %zero, i1 noundef zeroext %is_internal) #0 !dbg !2687 {
entry:
  %retval = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %zero.addr = alloca i8, align 1
  %is_internal.addr = alloca i8, align 1
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !2691, metadata !DIExpression()), !dbg !2694
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !2692, metadata !DIExpression()), !dbg !2697
  %frombool1 = zext i1 %is_internal to i8
  store i8 %frombool1, ptr %is_internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_internal.addr, metadata !2693, metadata !DIExpression()), !dbg !2698
  %call = call zeroext i1 @malloc_init_a0(), !dbg !2699
  %lnot = xor i1 %call, true, !dbg !2699
  %lnot2 = xor i1 %lnot, true, !dbg !2699
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2699
  %conv = sext i32 %lnot.ext to i64, !dbg !2699
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2699
  %tobool = icmp ne i64 %expval, 0, !dbg !2699
  br i1 %tobool, label %if.then, label %if.end, !dbg !2701

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !2702
  br label %return, !dbg !2702

if.end:                                           ; preds = %entry
  %0 = load i64, ptr %size.addr, align 8, !dbg !2704, !tbaa !2663
  %1 = load i64, ptr %size.addr, align 8, !dbg !2705, !tbaa !2663
  %call3 = call i32 @sz_size2index(i64 noundef %1), !dbg !2706
  %2 = load i8, ptr %zero.addr, align 1, !dbg !2707, !tbaa !2695, !range !2708, !noundef !2709
  %tobool4 = trunc i8 %2 to i1, !dbg !2707
  %3 = load i8, ptr %is_internal.addr, align 1, !dbg !2710, !tbaa !2695, !range !2708, !noundef !2709
  %tobool5 = trunc i8 %3 to i1, !dbg !2710
  %call6 = call ptr @arena_get(ptr noundef null, i32 noundef 0, i1 noundef zeroext true), !dbg !2711
  %call7 = call ptr @iallocztm(ptr noundef null, i64 noundef %0, i32 noundef %call3, i1 noundef zeroext %tobool4, ptr noundef null, i1 noundef zeroext %tobool5, ptr noundef %call6, i1 noundef zeroext true), !dbg !2712
  store ptr %call7, ptr %retval, align 8, !dbg !2713
  br label %return, !dbg !2713

return:                                           ; preds = %if.end, %if.then
  %4 = load ptr, ptr %retval, align 8, !dbg !2714
  ret ptr %4, !dbg !2714
}

; Function Attrs: nounwind uwtable
define hidden void @a0dalloc(ptr noundef %ptr) #0 !dbg !2715 {
entry:
  %ptr.addr = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !2717, metadata !DIExpression()), !dbg !2718
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !2719, !tbaa !2658
  call void @a0idalloc(ptr noundef %0, i1 noundef zeroext true), !dbg !2720
  ret void, !dbg !2721
}

; Function Attrs: nounwind uwtable
define internal void @a0idalloc(ptr noundef %ptr, i1 noundef zeroext %is_internal) #0 !dbg !2722 {
entry:
  %ptr.addr = alloca ptr, align 8
  %is_internal.addr = alloca i8, align 1
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !2726, metadata !DIExpression()), !dbg !2728
  %frombool = zext i1 %is_internal to i8
  store i8 %frombool, ptr %is_internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_internal.addr, metadata !2727, metadata !DIExpression()), !dbg !2729
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !2730, !tbaa !2658
  %1 = load i8, ptr %is_internal.addr, align 1, !dbg !2731, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !2731
  call void @idalloctm(ptr noundef null, ptr noundef %0, ptr noundef null, ptr noundef null, i1 noundef zeroext %tobool, i1 noundef zeroext true), !dbg !2732
  ret void, !dbg !2733
}

; Function Attrs: nounwind uwtable
define hidden ptr @bootstrap_malloc(i64 noundef %size) #0 !dbg !2734 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !2736, metadata !DIExpression()), !dbg !2737
  %0 = load i64, ptr %size.addr, align 8, !dbg !2738, !tbaa !2663
  %cmp = icmp eq i64 %0, 0, !dbg !2738
  %lnot = xor i1 %cmp, true, !dbg !2738
  %lnot1 = xor i1 %lnot, true, !dbg !2738
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2738
  %conv = sext i32 %lnot.ext to i64, !dbg !2738
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2738
  %tobool = icmp ne i64 %expval, 0, !dbg !2738
  br i1 %tobool, label %if.then, label %if.end, !dbg !2740

if.then:                                          ; preds = %entry
  store i64 1, ptr %size.addr, align 8, !dbg !2741, !tbaa !2663
  br label %if.end, !dbg !2743

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, ptr %size.addr, align 8, !dbg !2744, !tbaa !2663
  %call = call ptr @a0ialloc(i64 noundef %1, i1 noundef zeroext false, i1 noundef zeroext false), !dbg !2745
  ret ptr %call, !dbg !2746
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #1

; Function Attrs: nounwind uwtable
define hidden ptr @bootstrap_calloc(i64 noundef %num, i64 noundef %size) #0 !dbg !2747 {
entry:
  %num.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %num_size = alloca i64, align 8
  store i64 %num, ptr %num.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %num.addr, metadata !2749, metadata !DIExpression()), !dbg !2752
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !2750, metadata !DIExpression()), !dbg !2753
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_size) #18, !dbg !2754
  tail call void @llvm.dbg.declare(metadata ptr %num_size, metadata !2751, metadata !DIExpression()), !dbg !2755
  %0 = load i64, ptr %num.addr, align 8, !dbg !2756, !tbaa !2663
  %1 = load i64, ptr %size.addr, align 8, !dbg !2757, !tbaa !2663
  %mul = mul i64 %0, %1, !dbg !2758
  store i64 %mul, ptr %num_size, align 8, !dbg !2759, !tbaa !2663
  %2 = load i64, ptr %num_size, align 8, !dbg !2760, !tbaa !2663
  %cmp = icmp eq i64 %2, 0, !dbg !2760
  %lnot = xor i1 %cmp, true, !dbg !2760
  %lnot1 = xor i1 %lnot, true, !dbg !2760
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2760
  %conv = sext i32 %lnot.ext to i64, !dbg !2760
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2760
  %tobool = icmp ne i64 %expval, 0, !dbg !2760
  br i1 %tobool, label %if.then, label %if.end, !dbg !2762

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2763

do.body:                                          ; preds = %if.then
  br label %do.cond, !dbg !2765

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !2765

do.end:                                           ; preds = %do.cond
  store i64 1, ptr %num_size, align 8, !dbg !2767, !tbaa !2663
  br label %if.end, !dbg !2768

if.end:                                           ; preds = %do.end, %entry
  %3 = load i64, ptr %num_size, align 8, !dbg !2769, !tbaa !2663
  %call = call ptr @a0ialloc(i64 noundef %3, i1 noundef zeroext true, i1 noundef zeroext false), !dbg !2770
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_size) #18, !dbg !2771
  ret ptr %call, !dbg !2772
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind uwtable
define hidden void @bootstrap_free(ptr noundef %ptr) #0 !dbg !2773 {
entry:
  %ptr.addr = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !2775, metadata !DIExpression()), !dbg !2776
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !2777, !tbaa !2658
  %cmp = icmp eq ptr %0, null, !dbg !2777
  %lnot = xor i1 %cmp, true, !dbg !2777
  %lnot1 = xor i1 %lnot, true, !dbg !2777
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2777
  %conv = sext i32 %lnot.ext to i64, !dbg !2777
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2777
  %tobool = icmp ne i64 %expval, 0, !dbg !2777
  br i1 %tobool, label %if.then, label %if.end, !dbg !2779

if.then:                                          ; preds = %entry
  br label %return, !dbg !2780

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !2782, !tbaa !2658
  call void @a0idalloc(ptr noundef %1, i1 noundef zeroext false), !dbg !2783
  br label %return, !dbg !2784

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2784
}

; Function Attrs: nounwind uwtable
define hidden void @arena_set(i32 noundef %ind, ptr noundef %arena) #0 !dbg !2785 {
entry:
  %ind.addr = alloca i32, align 4
  %arena.addr = alloca ptr, align 8
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !2789, metadata !DIExpression()), !dbg !2793
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !2790, metadata !DIExpression()), !dbg !2794
  %0 = load i32, ptr %ind.addr, align 4, !dbg !2795, !tbaa !2791
  %idxprom = zext i32 %0 to i64, !dbg !2796
  %arrayidx = getelementptr inbounds [4095 x %struct.atomic_p_t], ptr @arenas, i64 0, i64 %idxprom, !dbg !2796
  %1 = load ptr, ptr %arena.addr, align 8, !dbg !2797, !tbaa !2658
  call void @atomic_store_p(ptr noundef %arrayidx, ptr noundef %1, i32 noundef 2), !dbg !2798
  ret void, !dbg !2799
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_store_p(ptr noundef %a, ptr noundef %val, i32 noundef %mo) #3 !dbg !2800 {
entry:
  %a.addr = alloca ptr, align 8
  %val.addr = alloca ptr, align 8
  %mo.addr = alloca i32, align 4
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !2806, metadata !DIExpression()), !dbg !2809
  store ptr %val, ptr %val.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !2807, metadata !DIExpression()), !dbg !2809
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !2808, metadata !DIExpression()), !dbg !2809
  %0 = load ptr, ptr %a.addr, align 8, !dbg !2809, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_p_t, ptr %0, i32 0, i32 0, !dbg !2809
  %1 = load i32, ptr %mo.addr, align 4, !dbg !2809, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !2809
  switch i32 %call, label %monotonic [
    i32 3, label %release
    i32 5, label %seqcst
  ], !dbg !2809

monotonic:                                        ; preds = %entry
  %2 = load i64, ptr %val.addr, align 8, !dbg !2809
  store atomic i64 %2, ptr %repr monotonic, align 8, !dbg !2809
  br label %atomic.continue, !dbg !2809

release:                                          ; preds = %entry
  %3 = load i64, ptr %val.addr, align 8, !dbg !2809
  store atomic i64 %3, ptr %repr release, align 8, !dbg !2809
  br label %atomic.continue, !dbg !2809

seqcst:                                           ; preds = %entry
  %4 = load i64, ptr %val.addr, align 8, !dbg !2809
  store atomic i64 %4, ptr %repr seq_cst, align 8, !dbg !2809
  br label %atomic.continue, !dbg !2809

atomic.continue:                                  ; preds = %seqcst, %release, %monotonic
  ret void, !dbg !2809
}

; Function Attrs: nounwind uwtable
define hidden i32 @narenas_total_get() #0 !dbg !2811 {
entry:
  %call = call i32 @atomic_load_u(ptr noundef @narenas_total, i32 noundef 1), !dbg !2814
  ret i32 %call, !dbg !2815
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_load_u(ptr noundef %a, i32 noundef %mo) #3 !dbg !2816 {
entry:
  %a.addr = alloca ptr, align 8
  %mo.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !2822, metadata !DIExpression()), !dbg !2825
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !2823, metadata !DIExpression()), !dbg !2825
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #18, !dbg !2825
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !2824, metadata !DIExpression()), !dbg !2825
  %0 = load ptr, ptr %a.addr, align 8, !dbg !2825, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_u_t, ptr %0, i32 0, i32 0, !dbg !2825
  %1 = load i32, ptr %mo.addr, align 4, !dbg !2825, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !2825
  switch i32 %call, label %monotonic [
    i32 1, label %acquire
    i32 2, label %acquire
    i32 5, label %seqcst
  ], !dbg !2825

monotonic:                                        ; preds = %entry
  %2 = load atomic i32, ptr %repr monotonic, align 4, !dbg !2825
  store i32 %2, ptr %result, align 4, !dbg !2825
  br label %atomic.continue, !dbg !2825

acquire:                                          ; preds = %entry, %entry
  %3 = load atomic i32, ptr %repr acquire, align 4, !dbg !2825
  store i32 %3, ptr %result, align 4, !dbg !2825
  br label %atomic.continue, !dbg !2825

seqcst:                                           ; preds = %entry
  %4 = load atomic i32, ptr %repr seq_cst, align 4, !dbg !2825
  store i32 %4, ptr %result, align 4, !dbg !2825
  br label %atomic.continue, !dbg !2825

atomic.continue:                                  ; preds = %seqcst, %acquire, %monotonic
  %5 = load i32, ptr %result, align 4, !dbg !2825, !tbaa !2791
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #18, !dbg !2825
  ret i32 %5, !dbg !2825
}

; Function Attrs: nounwind uwtable
define hidden ptr @arena_init(ptr noundef %tsdn, i32 noundef %ind, ptr noundef %config) #0 !dbg !2826 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ind.addr = alloca i32, align 4
  %config.addr = alloca ptr, align 8
  %arena = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !2879, metadata !DIExpression()), !dbg !2883
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !2880, metadata !DIExpression()), !dbg !2884
  store ptr %config, ptr %config.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %config.addr, metadata !2881, metadata !DIExpression()), !dbg !2885
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !2886
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !2882, metadata !DIExpression()), !dbg !2887
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !2888, !tbaa !2658
  call void @malloc_mutex_lock(ptr noundef %0, ptr noundef @arenas_lock), !dbg !2889
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !2890, !tbaa !2658
  %2 = load i32, ptr %ind.addr, align 4, !dbg !2891, !tbaa !2791
  %3 = load ptr, ptr %config.addr, align 8, !dbg !2892, !tbaa !2658
  %call = call ptr @arena_init_locked(ptr noundef %1, i32 noundef %2, ptr noundef %3), !dbg !2893
  store ptr %call, ptr %arena, align 8, !dbg !2894, !tbaa !2658
  %4 = load ptr, ptr %tsdn.addr, align 8, !dbg !2895, !tbaa !2658
  call void @malloc_mutex_unlock(ptr noundef %4, ptr noundef @arenas_lock), !dbg !2896
  %5 = load ptr, ptr %tsdn.addr, align 8, !dbg !2897, !tbaa !2658
  %6 = load i32, ptr %ind.addr, align 4, !dbg !2898, !tbaa !2791
  call void @arena_new_create_background_thread(ptr noundef %5, i32 noundef %6), !dbg !2899
  %7 = load ptr, ptr %arena, align 8, !dbg !2900, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !2901
  ret ptr %7, !dbg !2902
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @malloc_mutex_lock(ptr noundef %tsdn, ptr noundef %mutex) #4 !dbg !2903 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %mutex.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !2907, metadata !DIExpression()), !dbg !2909
  store ptr %mutex, ptr %mutex.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mutex.addr, metadata !2908, metadata !DIExpression()), !dbg !2910
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !2911, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !2912
  %1 = load ptr, ptr %mutex.addr, align 8, !dbg !2913, !tbaa !2658
  %2 = getelementptr inbounds %struct.malloc_mutex_s, ptr %1, i32 0, i32 0, !dbg !2914
  call void @witness_assert_not_owner(ptr noundef %call, ptr noundef %2), !dbg !2915
  %3 = load ptr, ptr %mutex.addr, align 8, !dbg !2916, !tbaa !2658
  %call1 = call zeroext i1 @malloc_mutex_trylock_final(ptr noundef %3), !dbg !2920
  br i1 %call1, label %if.then, label %if.end, !dbg !2921

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %mutex.addr, align 8, !dbg !2922, !tbaa !2658
  call void @malloc_mutex_lock_slow(ptr noundef %4), !dbg !2924
  %5 = load ptr, ptr %mutex.addr, align 8, !dbg !2925, !tbaa !2658
  %6 = getelementptr inbounds %struct.malloc_mutex_s, ptr %5, i32 0, i32 0, !dbg !2926
  %locked = getelementptr inbounds %struct.anon, ptr %6, i32 0, i32 2, !dbg !2926
  call void @atomic_store_b(ptr noundef %locked, i1 noundef zeroext true, i32 noundef 0), !dbg !2927
  br label %if.end, !dbg !2928

if.end:                                           ; preds = %if.then, %entry
  %7 = load ptr, ptr %tsdn.addr, align 8, !dbg !2929, !tbaa !2658
  %8 = load ptr, ptr %mutex.addr, align 8, !dbg !2930, !tbaa !2658
  call void @mutex_owner_stats_update(ptr noundef %7, ptr noundef %8), !dbg !2931
  %9 = load ptr, ptr %tsdn.addr, align 8, !dbg !2932, !tbaa !2658
  %call2 = call ptr @tsdn_witness_tsdp_get(ptr noundef %9), !dbg !2933
  %10 = load ptr, ptr %mutex.addr, align 8, !dbg !2934, !tbaa !2658
  %11 = getelementptr inbounds %struct.malloc_mutex_s, ptr %10, i32 0, i32 0, !dbg !2935
  call void @witness_lock(ptr noundef %call2, ptr noundef %11), !dbg !2936
  ret void, !dbg !2937
}

; Function Attrs: nounwind uwtable
define internal ptr @arena_init_locked(ptr noundef %tsdn, i32 noundef %ind, ptr noundef %config) #0 !dbg !2938 {
entry:
  %retval = alloca ptr, align 8
  %tsdn.addr = alloca ptr, align 8
  %ind.addr = alloca i32, align 4
  %config.addr = alloca ptr, align 8
  %arena = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !2940, metadata !DIExpression()), !dbg !2944
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !2941, metadata !DIExpression()), !dbg !2945
  store ptr %config, ptr %config.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %config.addr, metadata !2942, metadata !DIExpression()), !dbg !2946
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !2947
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !2943, metadata !DIExpression()), !dbg !2948
  br label %do.body, !dbg !2949

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !2950

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !2950

do.end:                                           ; preds = %do.cond
  %0 = load i32, ptr %ind.addr, align 4, !dbg !2952, !tbaa !2791
  %cmp = icmp uge i32 %0, 4095, !dbg !2954
  br i1 %cmp, label %if.then, label %if.end, !dbg !2955

if.then:                                          ; preds = %do.end
  store ptr null, ptr %retval, align 8, !dbg !2956
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2956

if.end:                                           ; preds = %do.end
  %1 = load i32, ptr %ind.addr, align 4, !dbg !2958, !tbaa !2791
  %call = call i32 @narenas_total_get(), !dbg !2960
  %cmp1 = icmp eq i32 %1, %call, !dbg !2961
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2962

if.then2:                                         ; preds = %if.end
  call void @narenas_total_inc(), !dbg !2963
  br label %if.end3, !dbg !2965

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load ptr, ptr %tsdn.addr, align 8, !dbg !2966, !tbaa !2658
  %3 = load i32, ptr %ind.addr, align 4, !dbg !2967, !tbaa !2791
  %call4 = call ptr @arena_get(ptr noundef %2, i32 noundef %3, i1 noundef zeroext false), !dbg !2968
  store ptr %call4, ptr %arena, align 8, !dbg !2969, !tbaa !2658
  %4 = load ptr, ptr %arena, align 8, !dbg !2970, !tbaa !2658
  %cmp5 = icmp ne ptr %4, null, !dbg !2972
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !2973

if.then6:                                         ; preds = %if.end3
  br label %do.body7, !dbg !2974

do.body7:                                         ; preds = %if.then6
  br label %do.cond8, !dbg !2976

do.cond8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !2976

do.end9:                                          ; preds = %do.cond8
  %5 = load ptr, ptr %arena, align 8, !dbg !2978, !tbaa !2658
  store ptr %5, ptr %retval, align 8, !dbg !2979
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2979

if.end10:                                         ; preds = %if.end3
  %6 = load ptr, ptr %tsdn.addr, align 8, !dbg !2980, !tbaa !2658
  %7 = load i32, ptr %ind.addr, align 4, !dbg !2981, !tbaa !2791
  %8 = load ptr, ptr %config.addr, align 8, !dbg !2982, !tbaa !2658
  %call11 = call ptr @arena_new(ptr noundef %6, i32 noundef %7, ptr noundef %8), !dbg !2983
  store ptr %call11, ptr %arena, align 8, !dbg !2984, !tbaa !2658
  %9 = load ptr, ptr %arena, align 8, !dbg !2985, !tbaa !2658
  store ptr %9, ptr %retval, align 8, !dbg !2986
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2986

cleanup:                                          ; preds = %if.end10, %do.end9, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !2987
  %10 = load ptr, ptr %retval, align 8, !dbg !2987
  ret ptr %10, !dbg !2987
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @malloc_mutex_unlock(ptr noundef %tsdn, ptr noundef %mutex) #4 !dbg !2988 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %mutex.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !2990, metadata !DIExpression()), !dbg !2992
  store ptr %mutex, ptr %mutex.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mutex.addr, metadata !2991, metadata !DIExpression()), !dbg !2993
  %0 = load ptr, ptr %mutex.addr, align 8, !dbg !2994, !tbaa !2658
  %1 = getelementptr inbounds %struct.malloc_mutex_s, ptr %0, i32 0, i32 0, !dbg !2995
  %locked = getelementptr inbounds %struct.anon, ptr %1, i32 0, i32 2, !dbg !2995
  call void @atomic_store_b(ptr noundef %locked, i1 noundef zeroext false, i32 noundef 0), !dbg !2996
  %2 = load ptr, ptr %tsdn.addr, align 8, !dbg !2997, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %2), !dbg !2998
  %3 = load ptr, ptr %mutex.addr, align 8, !dbg !2999, !tbaa !2658
  %4 = getelementptr inbounds %struct.malloc_mutex_s, ptr %3, i32 0, i32 0, !dbg !3000
  call void @witness_unlock(ptr noundef %call, ptr noundef %4), !dbg !3001
  %5 = load ptr, ptr %mutex.addr, align 8, !dbg !3002, !tbaa !2658
  %6 = getelementptr inbounds %struct.malloc_mutex_s, ptr %5, i32 0, i32 0, !dbg !3002
  %lock = getelementptr inbounds %struct.anon, ptr %6, i32 0, i32 1, !dbg !3002
  %call1 = call i32 @pthread_mutex_unlock(ptr noundef %lock) #18, !dbg !3002
  ret void, !dbg !3005
}

; Function Attrs: nounwind uwtable
define internal void @arena_new_create_background_thread(ptr noundef %tsdn, i32 noundef %ind) #0 !dbg !3006 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ind.addr = alloca i32, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !3010, metadata !DIExpression()), !dbg !3012
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !3011, metadata !DIExpression()), !dbg !3013
  %0 = load i32, ptr %ind.addr, align 4, !dbg !3014, !tbaa !2791
  %cmp = icmp eq i32 %0, 0, !dbg !3016
  br i1 %cmp, label %if.then, label %if.end, !dbg !3017

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !3018

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %ind.addr, align 4, !dbg !3020, !tbaa !2791
  %call = call zeroext i1 @arena_is_huge(i32 noundef %1), !dbg !3022
  br i1 %call, label %if.end6, label %if.then1, !dbg !3023

if.then1:                                         ; preds = %if.end
  %2 = load ptr, ptr %tsdn.addr, align 8, !dbg !3024, !tbaa !2658
  %call2 = call ptr @tsdn_tsd(ptr noundef %2), !dbg !3027
  %3 = load i32, ptr %ind.addr, align 4, !dbg !3028, !tbaa !2791
  %call3 = call zeroext i1 @background_thread_create(ptr noundef %call2, i32 noundef %3), !dbg !3029
  br i1 %call3, label %if.then4, label %if.end5, !dbg !3030

if.then4:                                         ; preds = %if.then1
  %4 = load i32, ptr %ind.addr, align 4, !dbg !3031, !tbaa !2791
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.160, i32 noundef %4), !dbg !3033
  call void @abort() #19, !dbg !3034
  unreachable, !dbg !3034

if.end5:                                          ; preds = %if.then1
  br label %if.end6, !dbg !3035

if.end6:                                          ; preds = %if.then, %if.end5, %if.end
  ret void, !dbg !3036
}

; Function Attrs: nounwind uwtable
define hidden void @arena_migrate(ptr noundef %tsd, ptr noundef %oldarena, ptr noundef %newarena) #0 !dbg !3037 {
entry:
  %tsd.addr = alloca ptr, align 8
  %oldarena.addr = alloca ptr, align 8
  %newarena.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3041, metadata !DIExpression()), !dbg !3044
  store ptr %oldarena, ptr %oldarena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %oldarena.addr, metadata !3042, metadata !DIExpression()), !dbg !3045
  store ptr %newarena, ptr %newarena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %newarena.addr, metadata !3043, metadata !DIExpression()), !dbg !3046
  br label %do.body, !dbg !3047

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3048

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !3050

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !3051

do.end2:                                          ; preds = %do.body1
  %0 = load ptr, ptr %oldarena.addr, align 8, !dbg !3053, !tbaa !2658
  call void @arena_nthreads_dec(ptr noundef %0, i1 noundef zeroext false), !dbg !3054
  %1 = load ptr, ptr %newarena.addr, align 8, !dbg !3055, !tbaa !2658
  call void @arena_nthreads_inc(ptr noundef %1, i1 noundef zeroext false), !dbg !3056
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !3057, !tbaa !2658
  %3 = load ptr, ptr %newarena.addr, align 8, !dbg !3058, !tbaa !2658
  call void @tsd_arena_set(ptr noundef %2, ptr noundef %3), !dbg !3059
  %4 = load ptr, ptr %oldarena.addr, align 8, !dbg !3060, !tbaa !2658
  %call = call i32 @arena_nthreads_get(ptr noundef %4, i1 noundef zeroext false), !dbg !3062
  %cmp = icmp eq i32 %call, 0, !dbg !3063
  br i1 %cmp, label %if.then, label %if.end, !dbg !3064

if.then:                                          ; preds = %do.end2
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !3065, !tbaa !2658
  %call3 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !3067
  %6 = load ptr, ptr %oldarena.addr, align 8, !dbg !3068, !tbaa !2658
  call void @arena_decay(ptr noundef %call3, ptr noundef %6, i1 noundef zeroext false, i1 noundef zeroext true), !dbg !3069
  br label %if.end, !dbg !3070

if.end:                                           ; preds = %if.then, %do.end2
  ret void, !dbg !3071
}

declare !dbg !3072 void @arena_nthreads_dec(ptr noundef, i1 noundef zeroext) #5

declare !dbg !3076 void @arena_nthreads_inc(ptr noundef, i1 noundef zeroext) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal void @tsd_arena_set(ptr noundef %tsd, ptr noundef %val) #3 !dbg !3077 {
entry:
  %tsd.addr = alloca ptr, align 8
  %val.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3081, metadata !DIExpression()), !dbg !3083
  store ptr %val, ptr %val.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !3082, metadata !DIExpression()), !dbg !3083
  br label %do.body, !dbg !3083

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3084

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %val.addr, align 8, !dbg !3083, !tbaa !2658
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !3083, !tbaa !2658
  %call = call ptr @tsd_arenap_get(ptr noundef %1), !dbg !3083
  store ptr %0, ptr %call, align 8, !dbg !3083, !tbaa !2658
  ret void, !dbg !3083
}

declare !dbg !3086 i32 @arena_nthreads_get(ptr noundef, i1 noundef zeroext) #5

declare !dbg !3089 void @arena_decay(ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_tsdn(ptr noundef %tsd) #3 !dbg !3092 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !3098, !tbaa !2658
  ret ptr %0, !dbg !3099
}

; Function Attrs: nounwind uwtable
define hidden ptr @arena_choose_hard(ptr noundef %tsd, i1 noundef zeroext %internal) #0 !dbg !3100 {
entry:
  %retval = alloca ptr, align 8
  %tsd.addr = alloca ptr, align 8
  %internal.addr = alloca i8, align 1
  %ret = alloca ptr, align 8
  %choose = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %choose7 = alloca [2 x i32], align 4
  %first_null = alloca i32, align 4
  %is_new_arena = alloca [2 x i8], align 1
  %arena = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3104, metadata !DIExpression()), !dbg !3125
  %frombool = zext i1 %internal to i8
  store i8 %frombool, ptr %internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %internal.addr, metadata !3105, metadata !DIExpression()), !dbg !3126
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !3127
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !3106, metadata !DIExpression()), !dbg !3128
  store ptr null, ptr %ret, align 8, !dbg !3128, !tbaa !2658
  %0 = load i32, ptr @opt_percpu_arena, align 4, !dbg !3129, !tbaa !2810
  %cmp = icmp uge i32 %0, 3, !dbg !3129
  br i1 %cmp, label %if.then, label %if.end, !dbg !3130

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %choose) #18, !dbg !3131
  tail call void @llvm.dbg.declare(metadata ptr %choose, metadata !3107, metadata !DIExpression()), !dbg !3132
  %call = call i32 @percpu_arena_choose(), !dbg !3133
  store i32 %call, ptr %choose, align 4, !dbg !3132, !tbaa !2791
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !3134, !tbaa !2658
  %call1 = call ptr @tsd_tsdn(ptr noundef %1), !dbg !3135
  %2 = load i32, ptr %choose, align 4, !dbg !3136, !tbaa !2791
  %call2 = call ptr @arena_get(ptr noundef %call1, i32 noundef %2, i1 noundef zeroext true), !dbg !3137
  store ptr %call2, ptr %ret, align 8, !dbg !3138, !tbaa !2658
  br label %do.body, !dbg !3139

do.body:                                          ; preds = %if.then
  br label %do.cond, !dbg !3140

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3140

do.end:                                           ; preds = %do.cond
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !3142, !tbaa !2658
  %4 = load ptr, ptr %ret, align 8, !dbg !3143, !tbaa !2658
  %call3 = call i32 @arena_ind_get(ptr noundef %4), !dbg !3144
  call void @arena_bind(ptr noundef %3, i32 noundef %call3, i1 noundef zeroext false), !dbg !3145
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !3146, !tbaa !2658
  %6 = load ptr, ptr %ret, align 8, !dbg !3147, !tbaa !2658
  %call4 = call i32 @arena_ind_get(ptr noundef %6), !dbg !3148
  call void @arena_bind(ptr noundef %5, i32 noundef %call4, i1 noundef zeroext true), !dbg !3149
  %7 = load ptr, ptr %ret, align 8, !dbg !3150, !tbaa !2658
  store ptr %7, ptr %retval, align 8, !dbg !3151
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %choose) #18, !dbg !3152
  br label %cleanup144

if.end:                                           ; preds = %entry
  %8 = load i32, ptr @narenas_auto, align 4, !dbg !3153, !tbaa !2791
  %cmp5 = icmp ugt i32 %8, 1, !dbg !3154
  br i1 %cmp5, label %if.then6, label %if.else140, !dbg !3155

if.then6:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !3156
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3110, metadata !DIExpression()), !dbg !3157
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #18, !dbg !3156
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !3113, metadata !DIExpression()), !dbg !3158
  call void @llvm.lifetime.start.p0(i64 8, ptr %choose7) #18, !dbg !3156
  tail call void @llvm.dbg.declare(metadata ptr %choose7, metadata !3114, metadata !DIExpression()), !dbg !3159
  call void @llvm.lifetime.start.p0(i64 4, ptr %first_null) #18, !dbg !3156
  tail call void @llvm.dbg.declare(metadata ptr %first_null, metadata !3116, metadata !DIExpression()), !dbg !3160
  call void @llvm.lifetime.start.p0(i64 2, ptr %is_new_arena) #18, !dbg !3161
  tail call void @llvm.dbg.declare(metadata ptr %is_new_arena, metadata !3117, metadata !DIExpression()), !dbg !3162
  store i32 0, ptr %j, align 4, !dbg !3163, !tbaa !2791
  br label %for.cond, !dbg !3165

for.cond:                                         ; preds = %for.inc, %if.then6
  %9 = load i32, ptr %j, align 4, !dbg !3166, !tbaa !2791
  %cmp8 = icmp ult i32 %9, 2, !dbg !3168
  br i1 %cmp8, label %for.body, label %for.end, !dbg !3169

for.body:                                         ; preds = %for.cond
  %10 = load i32, ptr %j, align 4, !dbg !3170, !tbaa !2791
  %idxprom = zext i32 %10 to i64, !dbg !3172
  %arrayidx = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom, !dbg !3172
  store i32 0, ptr %arrayidx, align 4, !dbg !3173, !tbaa !2791
  %11 = load i32, ptr %j, align 4, !dbg !3174, !tbaa !2791
  %idxprom9 = zext i32 %11 to i64, !dbg !3175
  %arrayidx10 = getelementptr inbounds [2 x i8], ptr %is_new_arena, i64 0, i64 %idxprom9, !dbg !3175
  store i8 0, ptr %arrayidx10, align 1, !dbg !3176, !tbaa !2695
  br label %for.inc, !dbg !3177

for.inc:                                          ; preds = %for.body
  %12 = load i32, ptr %j, align 4, !dbg !3178, !tbaa !2791
  %inc = add i32 %12, 1, !dbg !3178
  store i32 %inc, ptr %j, align 4, !dbg !3178, !tbaa !2791
  br label %for.cond, !dbg !3179, !llvm.loop !3180

for.end:                                          ; preds = %for.cond
  %13 = load i32, ptr @narenas_auto, align 4, !dbg !3183, !tbaa !2791
  store i32 %13, ptr %first_null, align 4, !dbg !3184, !tbaa !2791
  %14 = load ptr, ptr %tsd.addr, align 8, !dbg !3185, !tbaa !2658
  %call11 = call ptr @tsd_tsdn(ptr noundef %14), !dbg !3186
  call void @malloc_mutex_lock(ptr noundef %call11, ptr noundef @arenas_lock), !dbg !3187
  br label %do.body12, !dbg !3188

do.body12:                                        ; preds = %for.end
  br label %do.cond13, !dbg !3189

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !3189

do.end14:                                         ; preds = %do.cond13
  store i32 1, ptr %i, align 4, !dbg !3191, !tbaa !2791
  br label %for.cond15, !dbg !3193

for.cond15:                                       ; preds = %for.inc49, %do.end14
  %15 = load i32, ptr %i, align 4, !dbg !3194, !tbaa !2791
  %16 = load i32, ptr @narenas_auto, align 4, !dbg !3196, !tbaa !2791
  %cmp16 = icmp ult i32 %15, %16, !dbg !3197
  br i1 %cmp16, label %for.body17, label %for.end51, !dbg !3198

for.body17:                                       ; preds = %for.cond15
  %17 = load ptr, ptr %tsd.addr, align 8, !dbg !3199, !tbaa !2658
  %call18 = call ptr @tsd_tsdn(ptr noundef %17), !dbg !3202
  %18 = load i32, ptr %i, align 4, !dbg !3203, !tbaa !2791
  %call19 = call ptr @arena_get(ptr noundef %call18, i32 noundef %18, i1 noundef zeroext false), !dbg !3204
  %cmp20 = icmp ne ptr %call19, null, !dbg !3205
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !3206

if.then21:                                        ; preds = %for.body17
  store i32 0, ptr %j, align 4, !dbg !3207, !tbaa !2791
  br label %for.cond22, !dbg !3210

for.cond22:                                       ; preds = %for.inc42, %if.then21
  %19 = load i32, ptr %j, align 4, !dbg !3211, !tbaa !2791
  %cmp23 = icmp ult i32 %19, 2, !dbg !3213
  br i1 %cmp23, label %for.body24, label %for.end44, !dbg !3214

for.body24:                                       ; preds = %for.cond22
  %20 = load ptr, ptr %tsd.addr, align 8, !dbg !3215, !tbaa !2658
  %call25 = call ptr @tsd_tsdn(ptr noundef %20), !dbg !3218
  %21 = load i32, ptr %i, align 4, !dbg !3219, !tbaa !2791
  %call26 = call ptr @arena_get(ptr noundef %call25, i32 noundef %21, i1 noundef zeroext false), !dbg !3220
  %22 = load i32, ptr %j, align 4, !dbg !3221, !tbaa !2791
  %tobool = icmp ne i32 %22, 0, !dbg !3222
  %lnot = xor i1 %tobool, true, !dbg !3222
  %lnot27 = xor i1 %lnot, true, !dbg !3223
  %call28 = call i32 @arena_nthreads_get(ptr noundef %call26, i1 noundef zeroext %lnot27), !dbg !3224
  %23 = load ptr, ptr %tsd.addr, align 8, !dbg !3225, !tbaa !2658
  %call29 = call ptr @tsd_tsdn(ptr noundef %23), !dbg !3226
  %24 = load i32, ptr %j, align 4, !dbg !3227, !tbaa !2791
  %idxprom30 = zext i32 %24 to i64, !dbg !3228
  %arrayidx31 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom30, !dbg !3228
  %25 = load i32, ptr %arrayidx31, align 4, !dbg !3228, !tbaa !2791
  %call32 = call ptr @arena_get(ptr noundef %call29, i32 noundef %25, i1 noundef zeroext false), !dbg !3229
  %26 = load i32, ptr %j, align 4, !dbg !3230, !tbaa !2791
  %tobool33 = icmp ne i32 %26, 0, !dbg !3231
  %lnot34 = xor i1 %tobool33, true, !dbg !3231
  %lnot35 = xor i1 %lnot34, true, !dbg !3232
  %call36 = call i32 @arena_nthreads_get(ptr noundef %call32, i1 noundef zeroext %lnot35), !dbg !3233
  %cmp37 = icmp ult i32 %call28, %call36, !dbg !3234
  br i1 %cmp37, label %if.then38, label %if.end41, !dbg !3235

if.then38:                                        ; preds = %for.body24
  %27 = load i32, ptr %i, align 4, !dbg !3236, !tbaa !2791
  %28 = load i32, ptr %j, align 4, !dbg !3238, !tbaa !2791
  %idxprom39 = zext i32 %28 to i64, !dbg !3239
  %arrayidx40 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom39, !dbg !3239
  store i32 %27, ptr %arrayidx40, align 4, !dbg !3240, !tbaa !2791
  br label %if.end41, !dbg !3241

if.end41:                                         ; preds = %if.then38, %for.body24
  br label %for.inc42, !dbg !3242

for.inc42:                                        ; preds = %if.end41
  %29 = load i32, ptr %j, align 4, !dbg !3243, !tbaa !2791
  %inc43 = add i32 %29, 1, !dbg !3243
  store i32 %inc43, ptr %j, align 4, !dbg !3243, !tbaa !2791
  br label %for.cond22, !dbg !3244, !llvm.loop !3245

for.end44:                                        ; preds = %for.cond22
  br label %if.end48, !dbg !3247

if.else:                                          ; preds = %for.body17
  %30 = load i32, ptr %first_null, align 4, !dbg !3248, !tbaa !2791
  %31 = load i32, ptr @narenas_auto, align 4, !dbg !3250, !tbaa !2791
  %cmp45 = icmp eq i32 %30, %31, !dbg !3251
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !3252

if.then46:                                        ; preds = %if.else
  %32 = load i32, ptr %i, align 4, !dbg !3253, !tbaa !2791
  store i32 %32, ptr %first_null, align 4, !dbg !3255, !tbaa !2791
  br label %if.end47, !dbg !3256

if.end47:                                         ; preds = %if.then46, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %for.end44
  br label %for.inc49, !dbg !3257

for.inc49:                                        ; preds = %if.end48
  %33 = load i32, ptr %i, align 4, !dbg !3258, !tbaa !2791
  %inc50 = add i32 %33, 1, !dbg !3258
  store i32 %inc50, ptr %i, align 4, !dbg !3258, !tbaa !2791
  br label %for.cond15, !dbg !3259, !llvm.loop !3260

for.end51:                                        ; preds = %for.cond15
  store i32 0, ptr %j, align 4, !dbg !3262, !tbaa !2791
  br label %for.cond52, !dbg !3263

for.cond52:                                       ; preds = %for.inc111, %for.end51
  %34 = load i32, ptr %j, align 4, !dbg !3264, !tbaa !2791
  %cmp53 = icmp ult i32 %34, 2, !dbg !3265
  br i1 %cmp53, label %for.body54, label %for.end113, !dbg !3266

for.body54:                                       ; preds = %for.cond52
  %35 = load ptr, ptr %tsd.addr, align 8, !dbg !3267, !tbaa !2658
  %call55 = call ptr @tsd_tsdn(ptr noundef %35), !dbg !3268
  %36 = load i32, ptr %j, align 4, !dbg !3269, !tbaa !2791
  %idxprom56 = zext i32 %36 to i64, !dbg !3270
  %arrayidx57 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom56, !dbg !3270
  %37 = load i32, ptr %arrayidx57, align 4, !dbg !3270, !tbaa !2791
  %call58 = call ptr @arena_get(ptr noundef %call55, i32 noundef %37, i1 noundef zeroext false), !dbg !3271
  %38 = load i32, ptr %j, align 4, !dbg !3272, !tbaa !2791
  %tobool59 = icmp ne i32 %38, 0, !dbg !3273
  %lnot60 = xor i1 %tobool59, true, !dbg !3273
  %lnot61 = xor i1 %lnot60, true, !dbg !3274
  %call62 = call i32 @arena_nthreads_get(ptr noundef %call58, i1 noundef zeroext %lnot61), !dbg !3275
  %cmp63 = icmp eq i32 %call62, 0, !dbg !3276
  br i1 %cmp63, label %if.then65, label %lor.lhs.false, !dbg !3277

lor.lhs.false:                                    ; preds = %for.body54
  %39 = load i32, ptr %first_null, align 4, !dbg !3278, !tbaa !2791
  %40 = load i32, ptr @narenas_auto, align 4, !dbg !3279, !tbaa !2791
  %cmp64 = icmp eq i32 %39, %40, !dbg !3280
  br i1 %cmp64, label %if.then65, label %if.else78, !dbg !3281

if.then65:                                        ; preds = %lor.lhs.false, %for.body54
  %41 = load i32, ptr %j, align 4, !dbg !3282, !tbaa !2791
  %tobool66 = icmp ne i32 %41, 0, !dbg !3285
  %lnot67 = xor i1 %tobool66, true, !dbg !3285
  %lnot68 = xor i1 %lnot67, true, !dbg !3286
  %lnot.ext = zext i1 %lnot68 to i32, !dbg !3286
  %42 = load i8, ptr %internal.addr, align 1, !dbg !3287, !tbaa !2695, !range !2708, !noundef !2709
  %tobool69 = trunc i8 %42 to i1, !dbg !3287
  %conv = zext i1 %tobool69 to i32, !dbg !3287
  %cmp70 = icmp eq i32 %lnot.ext, %conv, !dbg !3288
  br i1 %cmp70, label %if.then72, label %if.end77, !dbg !3289

if.then72:                                        ; preds = %if.then65
  %43 = load ptr, ptr %tsd.addr, align 8, !dbg !3290, !tbaa !2658
  %call73 = call ptr @tsd_tsdn(ptr noundef %43), !dbg !3292
  %44 = load i32, ptr %j, align 4, !dbg !3293, !tbaa !2791
  %idxprom74 = zext i32 %44 to i64, !dbg !3294
  %arrayidx75 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom74, !dbg !3294
  %45 = load i32, ptr %arrayidx75, align 4, !dbg !3294, !tbaa !2791
  %call76 = call ptr @arena_get(ptr noundef %call73, i32 noundef %45, i1 noundef zeroext false), !dbg !3295
  store ptr %call76, ptr %ret, align 8, !dbg !3296, !tbaa !2658
  br label %if.end77, !dbg !3297

if.end77:                                         ; preds = %if.then72, %if.then65
  br label %if.end103, !dbg !3298

if.else78:                                        ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !3299
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !3119, metadata !DIExpression()), !dbg !3300
  %46 = load i32, ptr %first_null, align 4, !dbg !3301, !tbaa !2791
  %47 = load i32, ptr %j, align 4, !dbg !3302, !tbaa !2791
  %idxprom79 = zext i32 %47 to i64, !dbg !3303
  %arrayidx80 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom79, !dbg !3303
  store i32 %46, ptr %arrayidx80, align 4, !dbg !3304, !tbaa !2791
  %48 = load ptr, ptr %tsd.addr, align 8, !dbg !3305, !tbaa !2658
  %call81 = call ptr @tsd_tsdn(ptr noundef %48), !dbg !3306
  %49 = load i32, ptr %j, align 4, !dbg !3307, !tbaa !2791
  %idxprom82 = zext i32 %49 to i64, !dbg !3308
  %arrayidx83 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom82, !dbg !3308
  %50 = load i32, ptr %arrayidx83, align 4, !dbg !3308, !tbaa !2791
  %call84 = call ptr @arena_init_locked(ptr noundef %call81, i32 noundef %50, ptr noundef @arena_config_default), !dbg !3309
  store ptr %call84, ptr %arena, align 8, !dbg !3310, !tbaa !2658
  %51 = load ptr, ptr %arena, align 8, !dbg !3311, !tbaa !2658
  %cmp85 = icmp eq ptr %51, null, !dbg !3313
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !3314

if.then87:                                        ; preds = %if.else78
  %52 = load ptr, ptr %tsd.addr, align 8, !dbg !3315, !tbaa !2658
  %call88 = call ptr @tsd_tsdn(ptr noundef %52), !dbg !3317
  call void @malloc_mutex_unlock(ptr noundef %call88, ptr noundef @arenas_lock), !dbg !3318
  store ptr null, ptr %retval, align 8, !dbg !3319
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3319

if.end89:                                         ; preds = %if.else78
  %53 = load i32, ptr %j, align 4, !dbg !3320, !tbaa !2791
  %idxprom90 = zext i32 %53 to i64, !dbg !3321
  %arrayidx91 = getelementptr inbounds [2 x i8], ptr %is_new_arena, i64 0, i64 %idxprom90, !dbg !3321
  store i8 1, ptr %arrayidx91, align 1, !dbg !3322, !tbaa !2695
  %54 = load i32, ptr %j, align 4, !dbg !3323, !tbaa !2791
  %tobool92 = icmp ne i32 %54, 0, !dbg !3325
  %lnot93 = xor i1 %tobool92, true, !dbg !3325
  %lnot95 = xor i1 %lnot93, true, !dbg !3326
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !3326
  %55 = load i8, ptr %internal.addr, align 1, !dbg !3327, !tbaa !2695, !range !2708, !noundef !2709
  %tobool97 = trunc i8 %55 to i1, !dbg !3327
  %conv98 = zext i1 %tobool97 to i32, !dbg !3327
  %cmp99 = icmp eq i32 %lnot.ext96, %conv98, !dbg !3328
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !3329

if.then101:                                       ; preds = %if.end89
  %56 = load ptr, ptr %arena, align 8, !dbg !3330, !tbaa !2658
  store ptr %56, ptr %ret, align 8, !dbg !3332, !tbaa !2658
  br label %if.end102, !dbg !3333

if.end102:                                        ; preds = %if.then101, %if.end89
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3334
  br label %cleanup, !dbg !3334

cleanup:                                          ; preds = %if.end102, %if.then87
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !3334
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup133 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end103

if.end103:                                        ; preds = %cleanup.cont, %if.end77
  %57 = load ptr, ptr %tsd.addr, align 8, !dbg !3335, !tbaa !2658
  %58 = load i32, ptr %j, align 4, !dbg !3336, !tbaa !2791
  %idxprom104 = zext i32 %58 to i64, !dbg !3337
  %arrayidx105 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom104, !dbg !3337
  %59 = load i32, ptr %arrayidx105, align 4, !dbg !3337, !tbaa !2791
  %60 = load i32, ptr %j, align 4, !dbg !3338, !tbaa !2791
  %tobool106 = icmp ne i32 %60, 0, !dbg !3339
  %lnot107 = xor i1 %tobool106, true, !dbg !3339
  %lnot109 = xor i1 %lnot107, true, !dbg !3340
  call void @arena_bind(ptr noundef %57, i32 noundef %59, i1 noundef zeroext %lnot109), !dbg !3341
  br label %for.inc111, !dbg !3342

for.inc111:                                       ; preds = %if.end103
  %61 = load i32, ptr %j, align 4, !dbg !3343, !tbaa !2791
  %inc112 = add i32 %61, 1, !dbg !3343
  store i32 %inc112, ptr %j, align 4, !dbg !3343, !tbaa !2791
  br label %for.cond52, !dbg !3344, !llvm.loop !3345

for.end113:                                       ; preds = %for.cond52
  %62 = load ptr, ptr %tsd.addr, align 8, !dbg !3347, !tbaa !2658
  %call114 = call ptr @tsd_tsdn(ptr noundef %62), !dbg !3348
  call void @malloc_mutex_unlock(ptr noundef %call114, ptr noundef @arenas_lock), !dbg !3349
  store i32 0, ptr %j, align 4, !dbg !3350, !tbaa !2791
  br label %for.cond115, !dbg !3352

for.cond115:                                      ; preds = %for.inc130, %for.end113
  %63 = load i32, ptr %j, align 4, !dbg !3353, !tbaa !2791
  %cmp116 = icmp ult i32 %63, 2, !dbg !3355
  br i1 %cmp116, label %for.body118, label %for.end132, !dbg !3356

for.body118:                                      ; preds = %for.cond115
  %64 = load i32, ptr %j, align 4, !dbg !3357, !tbaa !2791
  %idxprom119 = zext i32 %64 to i64, !dbg !3360
  %arrayidx120 = getelementptr inbounds [2 x i8], ptr %is_new_arena, i64 0, i64 %idxprom119, !dbg !3360
  %65 = load i8, ptr %arrayidx120, align 1, !dbg !3360, !tbaa !2695, !range !2708, !noundef !2709
  %tobool121 = trunc i8 %65 to i1, !dbg !3360
  br i1 %tobool121, label %if.then122, label %if.end129, !dbg !3361

if.then122:                                       ; preds = %for.body118
  br label %do.body123, !dbg !3362

do.body123:                                       ; preds = %if.then122
  br label %do.cond124, !dbg !3364

do.cond124:                                       ; preds = %do.body123
  br label %do.end125, !dbg !3364

do.end125:                                        ; preds = %do.cond124
  %66 = load ptr, ptr %tsd.addr, align 8, !dbg !3366, !tbaa !2658
  %call126 = call ptr @tsd_tsdn(ptr noundef %66), !dbg !3367
  %67 = load i32, ptr %j, align 4, !dbg !3368, !tbaa !2791
  %idxprom127 = zext i32 %67 to i64, !dbg !3369
  %arrayidx128 = getelementptr inbounds [2 x i32], ptr %choose7, i64 0, i64 %idxprom127, !dbg !3369
  %68 = load i32, ptr %arrayidx128, align 4, !dbg !3369, !tbaa !2791
  call void @arena_new_create_background_thread(ptr noundef %call126, i32 noundef %68), !dbg !3370
  br label %if.end129, !dbg !3371

if.end129:                                        ; preds = %do.end125, %for.body118
  br label %for.inc130, !dbg !3372

for.inc130:                                       ; preds = %if.end129
  %69 = load i32, ptr %j, align 4, !dbg !3373, !tbaa !2791
  %inc131 = add i32 %69, 1, !dbg !3373
  store i32 %inc131, ptr %j, align 4, !dbg !3373, !tbaa !2791
  br label %for.cond115, !dbg !3374, !llvm.loop !3375

for.end132:                                       ; preds = %for.cond115
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3377
  br label %cleanup133, !dbg !3377

cleanup133:                                       ; preds = %for.end132, %cleanup
  call void @llvm.lifetime.end.p0(i64 2, ptr %is_new_arena) #18, !dbg !3377
  call void @llvm.lifetime.end.p0(i64 4, ptr %first_null) #18, !dbg !3377
  call void @llvm.lifetime.end.p0(i64 8, ptr %choose7) #18, !dbg !3377
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #18, !dbg !3377
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !3377
  %cleanup.dest138 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest138, label %cleanup144 [
    i32 0, label %cleanup.cont139
  ]

cleanup.cont139:                                  ; preds = %cleanup133
  br label %if.end143, !dbg !3378

if.else140:                                       ; preds = %if.end
  %70 = load ptr, ptr %tsd.addr, align 8, !dbg !3379, !tbaa !2658
  %call141 = call ptr @tsd_tsdn(ptr noundef %70), !dbg !3381
  %call142 = call ptr @arena_get(ptr noundef %call141, i32 noundef 0, i1 noundef zeroext false), !dbg !3382
  store ptr %call142, ptr %ret, align 8, !dbg !3383, !tbaa !2658
  %71 = load ptr, ptr %tsd.addr, align 8, !dbg !3384, !tbaa !2658
  call void @arena_bind(ptr noundef %71, i32 noundef 0, i1 noundef zeroext false), !dbg !3385
  %72 = load ptr, ptr %tsd.addr, align 8, !dbg !3386, !tbaa !2658
  call void @arena_bind(ptr noundef %72, i32 noundef 0, i1 noundef zeroext true), !dbg !3387
  br label %if.end143

if.end143:                                        ; preds = %if.else140, %cleanup.cont139
  %73 = load ptr, ptr %ret, align 8, !dbg !3388, !tbaa !2658
  store ptr %73, ptr %retval, align 8, !dbg !3389
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup144, !dbg !3389

cleanup144:                                       ; preds = %if.end143, %cleanup133, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !3390
  %74 = load ptr, ptr %retval, align 8, !dbg !3390
  ret ptr %74, !dbg !3390
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @percpu_arena_choose() #3 !dbg !3391 {
entry:
  %cpuid = alloca i32, align 4
  %arena_ind = alloca i32, align 4
  br label %do.body, !dbg !3396

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3397

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %cpuid) #18, !dbg !3399
  tail call void @llvm.dbg.declare(metadata ptr %cpuid, metadata !3394, metadata !DIExpression()), !dbg !3400
  %call = call i32 @malloc_getcpu(), !dbg !3401
  store i32 %call, ptr %cpuid, align 4, !dbg !3400, !tbaa !2791
  br label %do.body1, !dbg !3402

do.body1:                                         ; preds = %do.end
  br label %do.cond, !dbg !3403

do.cond:                                          ; preds = %do.body1
  br label %do.end2, !dbg !3403

do.end2:                                          ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %arena_ind) #18, !dbg !3405
  tail call void @llvm.dbg.declare(metadata ptr %arena_ind, metadata !3395, metadata !DIExpression()), !dbg !3406
  %0 = load i32, ptr @opt_percpu_arena, align 4, !dbg !3407, !tbaa !2810
  %cmp = icmp eq i32 %0, 3, !dbg !3409
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3410

lor.lhs.false:                                    ; preds = %do.end2
  %1 = load i32, ptr %cpuid, align 4, !dbg !3411, !tbaa !2791
  %2 = load i32, ptr @ncpus, align 4, !dbg !3412, !tbaa !2791
  %div = udiv i32 %2, 2, !dbg !3413
  %cmp3 = icmp ult i32 %1, %div, !dbg !3414
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3415

if.then:                                          ; preds = %lor.lhs.false, %do.end2
  %3 = load i32, ptr %cpuid, align 4, !dbg !3416, !tbaa !2791
  store i32 %3, ptr %arena_ind, align 4, !dbg !3418, !tbaa !2791
  br label %if.end, !dbg !3419

if.else:                                          ; preds = %lor.lhs.false
  br label %do.body4, !dbg !3420

do.body4:                                         ; preds = %if.else
  br label %do.cond5, !dbg !3422

do.cond5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !3422

do.end6:                                          ; preds = %do.cond5
  %4 = load i32, ptr %cpuid, align 4, !dbg !3424, !tbaa !2791
  %5 = load i32, ptr @ncpus, align 4, !dbg !3425, !tbaa !2791
  %div7 = udiv i32 %5, 2, !dbg !3426
  %sub = sub i32 %4, %div7, !dbg !3427
  store i32 %sub, ptr %arena_ind, align 4, !dbg !3428, !tbaa !2791
  br label %if.end

if.end:                                           ; preds = %do.end6, %if.then
  %6 = load i32, ptr %arena_ind, align 4, !dbg !3429, !tbaa !2791
  call void @llvm.lifetime.end.p0(i64 4, ptr %arena_ind) #18, !dbg !3430
  call void @llvm.lifetime.end.p0(i64 4, ptr %cpuid) #18, !dbg !3430
  ret i32 %6, !dbg !3431
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @arena_get(ptr noundef %tsdn, i32 noundef %ind, i1 noundef zeroext %init_if_missing) #4 !dbg !3432 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ind.addr = alloca i32, align 4
  %init_if_missing.addr = alloca i8, align 1
  %ret = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !3436, metadata !DIExpression()), !dbg !3440
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !3437, metadata !DIExpression()), !dbg !3441
  %frombool = zext i1 %init_if_missing to i8
  store i8 %frombool, ptr %init_if_missing.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %init_if_missing.addr, metadata !3438, metadata !DIExpression()), !dbg !3442
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !3443
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !3439, metadata !DIExpression()), !dbg !3444
  br label %do.body, !dbg !3445

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !3446

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3446

do.end:                                           ; preds = %do.cond
  %0 = load i32, ptr %ind.addr, align 4, !dbg !3448, !tbaa !2791
  %idxprom = zext i32 %0 to i64, !dbg !3449
  %arrayidx = getelementptr inbounds [0 x %struct.atomic_p_t], ptr @arenas, i64 0, i64 %idxprom, !dbg !3449
  %call = call ptr @atomic_load_p(ptr noundef %arrayidx, i32 noundef 1), !dbg !3450
  store ptr %call, ptr %ret, align 8, !dbg !3451, !tbaa !2658
  %1 = load ptr, ptr %ret, align 8, !dbg !3452, !tbaa !2658
  %cmp = icmp eq ptr %1, null, !dbg !3452
  %lnot = xor i1 %cmp, true, !dbg !3452
  %lnot1 = xor i1 %lnot, true, !dbg !3452
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3452
  %conv = sext i32 %lnot.ext to i64, !dbg !3452
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3452
  %tobool = icmp ne i64 %expval, 0, !dbg !3452
  br i1 %tobool, label %if.then, label %if.end5, !dbg !3454

if.then:                                          ; preds = %do.end
  %2 = load i8, ptr %init_if_missing.addr, align 1, !dbg !3455, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2 = trunc i8 %2 to i1, !dbg !3455
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3458

if.then3:                                         ; preds = %if.then
  %3 = load ptr, ptr %tsdn.addr, align 8, !dbg !3459, !tbaa !2658
  %4 = load i32, ptr %ind.addr, align 4, !dbg !3461, !tbaa !2791
  %call4 = call ptr @arena_init(ptr noundef %3, i32 noundef %4, ptr noundef @arena_config_default), !dbg !3462
  store ptr %call4, ptr %ret, align 8, !dbg !3463, !tbaa !2658
  br label %if.end, !dbg !3464

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !3465

if.end5:                                          ; preds = %if.end, %do.end
  %5 = load ptr, ptr %ret, align 8, !dbg !3466, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !3467
  ret ptr %5, !dbg !3468
}

; Function Attrs: nounwind uwtable
define internal void @arena_bind(ptr noundef %tsd, i32 noundef %ind, i1 noundef zeroext %internal) #0 !dbg !3469 {
entry:
  %tsd.addr = alloca ptr, align 8
  %ind.addr = alloca i32, align 4
  %internal.addr = alloca i8, align 1
  %arena = alloca ptr, align 8
  %shard = alloca i32, align 4
  %bins = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3473, metadata !DIExpression()), !dbg !3484
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !3474, metadata !DIExpression()), !dbg !3485
  %frombool = zext i1 %internal to i8
  store i8 %frombool, ptr %internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %internal.addr, metadata !3475, metadata !DIExpression()), !dbg !3486
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !3487
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !3476, metadata !DIExpression()), !dbg !3488
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !3489, !tbaa !2658
  %call = call ptr @tsd_tsdn(ptr noundef %0), !dbg !3490
  %1 = load i32, ptr %ind.addr, align 4, !dbg !3491, !tbaa !2791
  %call1 = call ptr @arena_get(ptr noundef %call, i32 noundef %1, i1 noundef zeroext false), !dbg !3492
  store ptr %call1, ptr %arena, align 8, !dbg !3488, !tbaa !2658
  %2 = load ptr, ptr %arena, align 8, !dbg !3493, !tbaa !2658
  %3 = load i8, ptr %internal.addr, align 1, !dbg !3494, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !3494
  call void @arena_nthreads_inc(ptr noundef %2, i1 noundef zeroext %tobool), !dbg !3495
  %4 = load i8, ptr %internal.addr, align 1, !dbg !3496, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2 = trunc i8 %4 to i1, !dbg !3496
  br i1 %tobool2, label %if.then, label %if.else, !dbg !3497

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !3498, !tbaa !2658
  %6 = load ptr, ptr %arena, align 8, !dbg !3500, !tbaa !2658
  call void @tsd_iarena_set(ptr noundef %5, ptr noundef %6), !dbg !3501
  br label %if.end, !dbg !3502

if.else:                                          ; preds = %entry
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !3503, !tbaa !2658
  %8 = load ptr, ptr %arena, align 8, !dbg !3504, !tbaa !2658
  call void @tsd_arena_set(ptr noundef %7, ptr noundef %8), !dbg !3505
  call void @llvm.lifetime.start.p0(i64 4, ptr %shard) #18, !dbg !3506
  tail call void @llvm.dbg.declare(metadata ptr %shard, metadata !3477, metadata !DIExpression()), !dbg !3507
  %9 = load ptr, ptr %arena, align 8, !dbg !3508, !tbaa !2658
  %binshard_next = getelementptr inbounds %struct.arena_s, ptr %9, i32 0, i32 1, !dbg !3509
  %call3 = call i32 @atomic_fetch_add_u(ptr noundef %binshard_next, i32 noundef 1, i32 noundef 0), !dbg !3510
  store i32 %call3, ptr %shard, align 4, !dbg !3507, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %bins) #18, !dbg !3511
  tail call void @llvm.dbg.declare(metadata ptr %bins, metadata !3480, metadata !DIExpression()), !dbg !3512
  %10 = load ptr, ptr %tsd.addr, align 8, !dbg !3513, !tbaa !2658
  %call4 = call ptr @tsd_binshardsp_get(ptr noundef %10), !dbg !3514
  store ptr %call4, ptr %bins, align 8, !dbg !3512, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !3515
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3482, metadata !DIExpression()), !dbg !3516
  store i32 0, ptr %i, align 4, !dbg !3516, !tbaa !2791
  br label %for.cond, !dbg !3515

for.cond:                                         ; preds = %for.inc, %if.else
  %11 = load i32, ptr %i, align 4, !dbg !3517, !tbaa !2791
  %conv = zext i32 %11 to i64, !dbg !3517
  %cmp = icmp ult i64 %conv, 36, !dbg !3519
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !dbg !3520

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !3521
  br label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !3522

do.body:                                          ; preds = %for.body
  br label %do.cond, !dbg !3524

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3524

do.end:                                           ; preds = %do.cond
  %12 = load i32, ptr %shard, align 4, !dbg !3526, !tbaa !2791
  %13 = load i32, ptr %i, align 4, !dbg !3527, !tbaa !2791
  %idxprom = zext i32 %13 to i64, !dbg !3528
  %arrayidx = getelementptr inbounds [36 x %struct.bin_info_s], ptr @bin_infos, i64 0, i64 %idxprom, !dbg !3528
  %n_shards = getelementptr inbounds %struct.bin_info_s, ptr %arrayidx, i32 0, i32 3, !dbg !3529
  %14 = load i32, ptr %n_shards, align 4, !dbg !3529, !tbaa !3530
  %rem = urem i32 %12, %14, !dbg !3533
  %conv6 = trunc i32 %rem to i8, !dbg !3526
  %15 = load ptr, ptr %bins, align 8, !dbg !3534, !tbaa !2658
  %binshard = getelementptr inbounds %struct.tsd_binshards_s, ptr %15, i32 0, i32 0, !dbg !3535
  %16 = load i32, ptr %i, align 4, !dbg !3536, !tbaa !2791
  %idxprom7 = zext i32 %16 to i64, !dbg !3534
  %arrayidx8 = getelementptr inbounds [36 x i8], ptr %binshard, i64 0, i64 %idxprom7, !dbg !3534
  store i8 %conv6, ptr %arrayidx8, align 1, !dbg !3537, !tbaa !2810
  br label %for.inc, !dbg !3538

for.inc:                                          ; preds = %do.end
  %17 = load i32, ptr %i, align 4, !dbg !3539, !tbaa !2791
  %inc = add i32 %17, 1, !dbg !3539
  store i32 %inc, ptr %i, align 4, !dbg !3539, !tbaa !2791
  br label %for.cond, !dbg !3521, !llvm.loop !3540

for.end:                                          ; preds = %for.cond.cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %bins) #18, !dbg !3542
  call void @llvm.lifetime.end.p0(i64 4, ptr %shard) #18, !dbg !3542
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !3543
  ret void, !dbg !3543
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @arena_ind_get(ptr noundef %arena) #4 !dbg !3544 {
entry:
  %arena.addr = alloca ptr, align 8
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !3551, metadata !DIExpression()), !dbg !3552
  %0 = load ptr, ptr %arena.addr, align 8, !dbg !3553, !tbaa !2658
  %ind = getelementptr inbounds %struct.arena_s, ptr %0, i32 0, i32 11, !dbg !3554
  %1 = load i32, ptr %ind, align 8, !dbg !3554, !tbaa !3555
  ret i32 %1, !dbg !3588
}

; Function Attrs: nounwind uwtable
define hidden void @iarena_cleanup(ptr noundef %tsd) #0 !dbg !3589 {
entry:
  %tsd.addr = alloca ptr, align 8
  %iarena = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3593, metadata !DIExpression()), !dbg !3595
  call void @llvm.lifetime.start.p0(i64 8, ptr %iarena) #18, !dbg !3596
  tail call void @llvm.dbg.declare(metadata ptr %iarena, metadata !3594, metadata !DIExpression()), !dbg !3597
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !3598, !tbaa !2658
  %call = call ptr @tsd_iarena_get(ptr noundef %0), !dbg !3599
  store ptr %call, ptr %iarena, align 8, !dbg !3600, !tbaa !2658
  %1 = load ptr, ptr %iarena, align 8, !dbg !3601, !tbaa !2658
  %cmp = icmp ne ptr %1, null, !dbg !3603
  br i1 %cmp, label %if.then, label %if.end, !dbg !3604

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !3605, !tbaa !2658
  %3 = load ptr, ptr %iarena, align 8, !dbg !3607, !tbaa !2658
  %call1 = call i32 @arena_ind_get(ptr noundef %3), !dbg !3608
  call void @arena_unbind(ptr noundef %2, i32 noundef %call1, i1 noundef zeroext true), !dbg !3609
  br label %if.end, !dbg !3610

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %iarena) #18, !dbg !3611
  ret void, !dbg !3611
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_iarena_get(ptr noundef %tsd) #3 !dbg !3612 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !3617, !tbaa !2658
  %call = call ptr @tsd_iarenap_get(ptr noundef %0), !dbg !3617
  %1 = load ptr, ptr %call, align 8, !dbg !3617, !tbaa !2658
  ret ptr %1, !dbg !3617
}

; Function Attrs: nounwind uwtable
define internal void @arena_unbind(ptr noundef %tsd, i32 noundef %ind, i1 noundef zeroext %internal) #0 !dbg !3618 {
entry:
  %tsd.addr = alloca ptr, align 8
  %ind.addr = alloca i32, align 4
  %internal.addr = alloca i8, align 1
  %arena = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3620, metadata !DIExpression()), !dbg !3624
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !3621, metadata !DIExpression()), !dbg !3625
  %frombool = zext i1 %internal to i8
  store i8 %frombool, ptr %internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %internal.addr, metadata !3622, metadata !DIExpression()), !dbg !3626
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !3627
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !3623, metadata !DIExpression()), !dbg !3628
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !3629, !tbaa !2658
  %call = call ptr @tsd_tsdn(ptr noundef %0), !dbg !3630
  %1 = load i32, ptr %ind.addr, align 4, !dbg !3631, !tbaa !2791
  %call1 = call ptr @arena_get(ptr noundef %call, i32 noundef %1, i1 noundef zeroext false), !dbg !3632
  store ptr %call1, ptr %arena, align 8, !dbg !3633, !tbaa !2658
  %2 = load ptr, ptr %arena, align 8, !dbg !3634, !tbaa !2658
  %3 = load i8, ptr %internal.addr, align 1, !dbg !3635, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !3635
  call void @arena_nthreads_dec(ptr noundef %2, i1 noundef zeroext %tobool), !dbg !3636
  %4 = load i8, ptr %internal.addr, align 1, !dbg !3637, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2 = trunc i8 %4 to i1, !dbg !3637
  br i1 %tobool2, label %if.then, label %if.else, !dbg !3639

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !3640, !tbaa !2658
  call void @tsd_iarena_set(ptr noundef %5, ptr noundef null), !dbg !3642
  br label %if.end, !dbg !3643

if.else:                                          ; preds = %entry
  %6 = load ptr, ptr %tsd.addr, align 8, !dbg !3644, !tbaa !2658
  call void @tsd_arena_set(ptr noundef %6, ptr noundef null), !dbg !3646
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !3647
  ret void, !dbg !3647
}

; Function Attrs: nounwind uwtable
define hidden void @arena_cleanup(ptr noundef %tsd) #0 !dbg !3648 {
entry:
  %tsd.addr = alloca ptr, align 8
  %arena = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3650, metadata !DIExpression()), !dbg !3652
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !3653
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !3651, metadata !DIExpression()), !dbg !3654
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !3655, !tbaa !2658
  %call = call ptr @tsd_arena_get(ptr noundef %0), !dbg !3656
  store ptr %call, ptr %arena, align 8, !dbg !3657, !tbaa !2658
  %1 = load ptr, ptr %arena, align 8, !dbg !3658, !tbaa !2658
  %cmp = icmp ne ptr %1, null, !dbg !3660
  br i1 %cmp, label %if.then, label %if.end, !dbg !3661

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !3662, !tbaa !2658
  %3 = load ptr, ptr %arena, align 8, !dbg !3664, !tbaa !2658
  %call1 = call i32 @arena_ind_get(ptr noundef %3), !dbg !3665
  call void @arena_unbind(ptr noundef %2, i32 noundef %call1, i1 noundef zeroext false), !dbg !3666
  br label %if.end, !dbg !3667

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !3668
  ret void, !dbg !3668
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_arena_get(ptr noundef %tsd) #3 !dbg !3669 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !3671, metadata !DIExpression()), !dbg !3672
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !3672, !tbaa !2658
  %call = call ptr @tsd_arenap_get(ptr noundef %0), !dbg !3672
  %1 = load ptr, ptr %call, align 8, !dbg !3672, !tbaa !2658
  ret ptr %1, !dbg !3672
}

; Function Attrs: noinline nounwind uwtable
define hidden ptr @malloc_default(i64 noundef %size) #6 !dbg !1506 {
entry:
  %size.addr = alloca i64, align 8
  %ret = alloca ptr, align 8
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1508, metadata !DIExpression()), !dbg !3673
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !3674
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1509, metadata !DIExpression()), !dbg !3675
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !3676
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1510, metadata !DIExpression()), !dbg !3677
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !3678
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1524, metadata !DIExpression()), !dbg !3679
  call void @static_opts_init(ptr noundef %sopts), !dbg !3680
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !3681
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 3, !dbg !3682
  store i8 1, ptr %null_out_result_on_error, align 1, !dbg !3683, !tbaa !3684
  %set_errno_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 4, !dbg !3686
  store i8 1, ptr %set_errno_on_error, align 4, !dbg !3687, !tbaa !3688
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !3689
  store ptr @.str.4, ptr %oom_string, align 8, !dbg !3690, !tbaa !3691
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !3692
  store ptr %ret, ptr %result, align 8, !dbg !3693, !tbaa !3694
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !3696
  store i64 1, ptr %num_items, align 8, !dbg !3697, !tbaa !3698
  %0 = load i64, ptr %size.addr, align 8, !dbg !3699, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !3700
  store i64 %0, ptr %item_size, align 8, !dbg !3701, !tbaa !3702
  %call = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !3703
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !3704
  %1 = load i8, ptr %slow, align 8, !dbg !3704, !tbaa !3705, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !3704
  br i1 %tobool, label %if.then, label %if.end, !dbg !3706

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !3707
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1536, metadata !DIExpression()), !dbg !3708
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !3709
  %2 = load i64, ptr %size.addr, align 8, !dbg !3710, !tbaa !2663
  store i64 %2, ptr %arrayinit.begin, align 8, !dbg !3709, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !3709
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !3709
  br label %arrayinit.body, !dbg !3709

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then ], [ %arrayinit.next, %arrayinit.body ], !dbg !3709
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !3709, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !3709
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !3709
  br i1 %arrayinit.done, label %arrayinit.end1, label %arrayinit.body, !dbg !3709

arrayinit.end1:                                   ; preds = %arrayinit.body
  %3 = load ptr, ptr %ret, align 8, !dbg !3711, !tbaa !2658
  %4 = load ptr, ptr %ret, align 8, !dbg !3712, !tbaa !2658
  %5 = ptrtoint ptr %4 to i64, !dbg !3713
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !3714
  call void @hook_invoke_alloc(i32 noundef 0, ptr noundef %3, i64 noundef %5, ptr noundef %arraydecay), !dbg !3715
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !3716
  br label %if.end, !dbg !3717

if.end:                                           ; preds = %arrayinit.end1, %entry
  br label %do.body, !dbg !3718

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !3719

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3719

do.end:                                           ; preds = %do.cond
  %6 = load ptr, ptr %ret, align 8, !dbg !3721, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !3722
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !3722
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !3722
  ret ptr %6, !dbg !3723
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @static_opts_init(ptr noundef %static_opts) #3 !dbg !3724 {
entry:
  %static_opts.addr = alloca ptr, align 8
  store ptr %static_opts, ptr %static_opts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %static_opts.addr, metadata !3729, metadata !DIExpression()), !dbg !3730
  %0 = load ptr, ptr %static_opts.addr, align 8, !dbg !3731, !tbaa !2658
  %may_overflow = getelementptr inbounds %struct.static_opts_s, ptr %0, i32 0, i32 0, !dbg !3732
  store i8 0, ptr %may_overflow, align 8, !dbg !3733, !tbaa !3734
  %1 = load ptr, ptr %static_opts.addr, align 8, !dbg !3735, !tbaa !2658
  %bump_empty_aligned_alloc = getelementptr inbounds %struct.static_opts_s, ptr %1, i32 0, i32 1, !dbg !3736
  store i8 0, ptr %bump_empty_aligned_alloc, align 1, !dbg !3737, !tbaa !3738
  %2 = load ptr, ptr %static_opts.addr, align 8, !dbg !3739, !tbaa !2658
  %assert_nonempty_alloc = getelementptr inbounds %struct.static_opts_s, ptr %2, i32 0, i32 2, !dbg !3740
  store i8 0, ptr %assert_nonempty_alloc, align 2, !dbg !3741, !tbaa !3742
  %3 = load ptr, ptr %static_opts.addr, align 8, !dbg !3743, !tbaa !2658
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %3, i32 0, i32 3, !dbg !3744
  store i8 0, ptr %null_out_result_on_error, align 1, !dbg !3745, !tbaa !3684
  %4 = load ptr, ptr %static_opts.addr, align 8, !dbg !3746, !tbaa !2658
  %set_errno_on_error = getelementptr inbounds %struct.static_opts_s, ptr %4, i32 0, i32 4, !dbg !3747
  store i8 0, ptr %set_errno_on_error, align 4, !dbg !3748, !tbaa !3688
  %5 = load ptr, ptr %static_opts.addr, align 8, !dbg !3749, !tbaa !2658
  %min_alignment = getelementptr inbounds %struct.static_opts_s, ptr %5, i32 0, i32 5, !dbg !3750
  store i64 0, ptr %min_alignment, align 8, !dbg !3751, !tbaa !3752
  %6 = load ptr, ptr %static_opts.addr, align 8, !dbg !3753, !tbaa !2658
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %6, i32 0, i32 6, !dbg !3754
  store ptr @.str.88, ptr %oom_string, align 8, !dbg !3755, !tbaa !3691
  %7 = load ptr, ptr %static_opts.addr, align 8, !dbg !3756, !tbaa !2658
  %invalid_alignment_string = getelementptr inbounds %struct.static_opts_s, ptr %7, i32 0, i32 7, !dbg !3757
  store ptr @.str.88, ptr %invalid_alignment_string, align 8, !dbg !3758, !tbaa !3759
  %8 = load ptr, ptr %static_opts.addr, align 8, !dbg !3760, !tbaa !2658
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %8, i32 0, i32 8, !dbg !3761
  store i8 0, ptr %slow, align 8, !dbg !3762, !tbaa !3705
  %9 = load ptr, ptr %static_opts.addr, align 8, !dbg !3763, !tbaa !2658
  %usize = getelementptr inbounds %struct.static_opts_s, ptr %9, i32 0, i32 9, !dbg !3764
  store i8 0, ptr %usize, align 1, !dbg !3765, !tbaa !3766
  ret void, !dbg !3767
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @dynamic_opts_init(ptr noundef %dynamic_opts) #3 !dbg !3768 {
entry:
  %dynamic_opts.addr = alloca ptr, align 8
  store ptr %dynamic_opts, ptr %dynamic_opts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %dynamic_opts.addr, metadata !3772, metadata !DIExpression()), !dbg !3773
  %0 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3774, !tbaa !2658
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %0, i32 0, i32 0, !dbg !3775
  store ptr null, ptr %result, align 8, !dbg !3776, !tbaa !3694
  %1 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3777, !tbaa !2658
  %usize = getelementptr inbounds %struct.dynamic_opts_s, ptr %1, i32 0, i32 1, !dbg !3778
  store i64 0, ptr %usize, align 8, !dbg !3779, !tbaa !3780
  %2 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3781, !tbaa !2658
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %2, i32 0, i32 2, !dbg !3782
  store i64 0, ptr %num_items, align 8, !dbg !3783, !tbaa !3698
  %3 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3784, !tbaa !2658
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %3, i32 0, i32 3, !dbg !3785
  store i64 0, ptr %item_size, align 8, !dbg !3786, !tbaa !3702
  %4 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3787, !tbaa !2658
  %alignment = getelementptr inbounds %struct.dynamic_opts_s, ptr %4, i32 0, i32 4, !dbg !3788
  store i64 0, ptr %alignment, align 8, !dbg !3789, !tbaa !3790
  %5 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3791, !tbaa !2658
  %zero = getelementptr inbounds %struct.dynamic_opts_s, ptr %5, i32 0, i32 5, !dbg !3792
  store i8 0, ptr %zero, align 8, !dbg !3793, !tbaa !3794
  %6 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3795, !tbaa !2658
  %tcache_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %6, i32 0, i32 6, !dbg !3796
  store i32 -2, ptr %tcache_ind, align 4, !dbg !3797, !tbaa !3798
  %7 = load ptr, ptr %dynamic_opts.addr, align 8, !dbg !3799, !tbaa !2658
  %arena_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %7, i32 0, i32 7, !dbg !3800
  store i32 -1, ptr %arena_ind, align 8, !dbg !3801, !tbaa !3802
  ret void, !dbg !3803
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts) #3 !dbg !3804 {
entry:
  %retval = alloca i32, align 4
  %sopts.addr = alloca ptr, align 8
  %dopts.addr = alloca ptr, align 8
  %tsd = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %sopts, ptr %sopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %sopts.addr, metadata !3808, metadata !DIExpression()), !dbg !3811
  store ptr %dopts, ptr %dopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %dopts.addr, metadata !3809, metadata !DIExpression()), !dbg !3812
  %call = call zeroext i1 @tsd_get_allocates(), !dbg !3813
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !3815

land.lhs.true:                                    ; preds = %entry
  %0 = load ptr, ptr %sopts.addr, align 8, !dbg !3816, !tbaa !2658
  %1 = load ptr, ptr %dopts.addr, align 8, !dbg !3817, !tbaa !2658
  %call1 = call zeroext i1 @imalloc_init_check(ptr noundef %0, ptr noundef %1), !dbg !3818
  br i1 %call1, label %if.end, label %if.then, !dbg !3819

if.then:                                          ; preds = %land.lhs.true
  store i32 12, ptr %retval, align 4, !dbg !3820
  br label %return, !dbg !3820

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !3822
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !3810, metadata !DIExpression()), !dbg !3823
  %call2 = call ptr @tsd_fetch(), !dbg !3824
  store ptr %call2, ptr %tsd, align 8, !dbg !3823, !tbaa !2658
  br label %do.body, !dbg !3825

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !3826

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3826

do.end:                                           ; preds = %do.cond
  %2 = load ptr, ptr %tsd, align 8, !dbg !3828, !tbaa !2658
  %call3 = call zeroext i1 @tsd_fast(ptr noundef %2), !dbg !3828
  %lnot = xor i1 %call3, true, !dbg !3828
  %lnot4 = xor i1 %lnot, true, !dbg !3828
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !3828
  %conv = sext i32 %lnot.ext to i64, !dbg !3828
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3828
  %tobool = icmp ne i64 %expval, 0, !dbg !3828
  br i1 %tobool, label %if.then5, label %if.else, !dbg !3830

if.then5:                                         ; preds = %do.end
  %3 = load ptr, ptr %tsd, align 8, !dbg !3831, !tbaa !2658
  call void @tsd_assert_fast(ptr noundef %3), !dbg !3833
  %4 = load ptr, ptr %sopts.addr, align 8, !dbg !3834, !tbaa !2658
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %4, i32 0, i32 8, !dbg !3835
  store i8 0, ptr %slow, align 8, !dbg !3836, !tbaa !3705
  %5 = load ptr, ptr %sopts.addr, align 8, !dbg !3837, !tbaa !2658
  %6 = load ptr, ptr %dopts.addr, align 8, !dbg !3838, !tbaa !2658
  %7 = load ptr, ptr %tsd, align 8, !dbg !3839, !tbaa !2658
  %call6 = call i32 @imalloc_body(ptr noundef %5, ptr noundef %6, ptr noundef %7), !dbg !3840
  store i32 %call6, ptr %retval, align 4, !dbg !3841
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3841

if.else:                                          ; preds = %do.end
  %call7 = call zeroext i1 @tsd_get_allocates(), !dbg !3842
  br i1 %call7, label %if.end11, label %land.lhs.true8, !dbg !3845

land.lhs.true8:                                   ; preds = %if.else
  %8 = load ptr, ptr %sopts.addr, align 8, !dbg !3846, !tbaa !2658
  %9 = load ptr, ptr %dopts.addr, align 8, !dbg !3847, !tbaa !2658
  %call9 = call zeroext i1 @imalloc_init_check(ptr noundef %8, ptr noundef %9), !dbg !3848
  br i1 %call9, label %if.end11, label %if.then10, !dbg !3849

if.then10:                                        ; preds = %land.lhs.true8
  store i32 12, ptr %retval, align 4, !dbg !3850
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3850

if.end11:                                         ; preds = %land.lhs.true8, %if.else
  %10 = load ptr, ptr %sopts.addr, align 8, !dbg !3852, !tbaa !2658
  %slow12 = getelementptr inbounds %struct.static_opts_s, ptr %10, i32 0, i32 8, !dbg !3853
  store i8 1, ptr %slow12, align 8, !dbg !3854, !tbaa !3705
  %11 = load ptr, ptr %sopts.addr, align 8, !dbg !3855, !tbaa !2658
  %12 = load ptr, ptr %dopts.addr, align 8, !dbg !3856, !tbaa !2658
  %13 = load ptr, ptr %tsd, align 8, !dbg !3857, !tbaa !2658
  %call13 = call i32 @imalloc_body(ptr noundef %11, ptr noundef %12, ptr noundef %13), !dbg !3858
  store i32 %call13, ptr %retval, align 4, !dbg !3859
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3859

cleanup:                                          ; preds = %if.end11, %if.then10, %if.then5
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !3860
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %14 = load i32, ptr %retval, align 4, !dbg !3860
  ret i32 %14, !dbg !3860
}

declare !dbg !3861 void @hook_invoke_alloc(i32 noundef, ptr noundef, i64 noundef, ptr noundef) #5

; Function Attrs: nounwind allocsize(0) uwtable
define noalias ptr @je_malloc(i64 noundef %size) #7 !dbg !3865 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !3867, metadata !DIExpression()), !dbg !3868
  %0 = load i64, ptr %size.addr, align 8, !dbg !3869, !tbaa !2663
  %call = call ptr @imalloc_fastpath(i64 noundef %0, ptr noundef @malloc_default), !dbg !3870
  ret ptr %call, !dbg !3871
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @imalloc_fastpath(i64 noundef %size, ptr noundef %fallback_alloc) #3 !dbg !2575 {
entry:
  %retval = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %fallback_alloc.addr = alloca ptr, align 8
  %tsd = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %ind = alloca i32, align 4
  %usize = alloca i64, align 8
  %allocated = alloca i64, align 8
  %threshold = alloca i64, align 8
  %allocated_after = alloca i64, align 8
  %tcache = alloca ptr, align 8
  %bin = alloca ptr, align 8
  %tcache_success = alloca i8, align 1
  %ret = alloca ptr, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !2579, metadata !DIExpression()), !dbg !3872
  store ptr %fallback_alloc, ptr %fallback_alloc.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %fallback_alloc.addr, metadata !2580, metadata !DIExpression()), !dbg !3873
  br label %do.body, !dbg !3874

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !3875

do.end:                                           ; preds = %do.body
  %call = call zeroext i1 @tsd_get_allocates(), !dbg !3877
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !3879

land.lhs.true:                                    ; preds = %do.end
  %call1 = call zeroext i1 @malloc_initialized(), !dbg !3880
  %lnot = xor i1 %call1, true, !dbg !3880
  %lnot2 = xor i1 %lnot, true, !dbg !3880
  %lnot3 = xor i1 %lnot2, true, !dbg !3880
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !3880
  %conv = sext i32 %lnot.ext to i64, !dbg !3880
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3880
  %tobool = icmp ne i64 %expval, 0, !dbg !3880
  br i1 %tobool, label %if.then, label %if.end, !dbg !3881

if.then:                                          ; preds = %land.lhs.true
  %0 = load ptr, ptr %fallback_alloc.addr, align 8, !dbg !3882, !tbaa !2658
  %1 = load i64, ptr %size.addr, align 8, !dbg !3884, !tbaa !2663
  %call4 = call ptr %0(i64 noundef %1), !dbg !3882
  store ptr %call4, ptr %retval, align 8, !dbg !3885
  br label %return, !dbg !3885

if.end:                                           ; preds = %land.lhs.true, %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !3886
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !2581, metadata !DIExpression()), !dbg !3887
  %call5 = call ptr @tsd_get(i1 noundef zeroext false), !dbg !3888
  store ptr %call5, ptr %tsd, align 8, !dbg !3887, !tbaa !2658
  %2 = load i64, ptr %size.addr, align 8, !dbg !3889, !tbaa !2663
  %cmp = icmp ugt i64 %2, 4096, !dbg !3889
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3889

lor.rhs:                                          ; preds = %if.end
  %3 = load ptr, ptr %tsd, align 8, !dbg !3889, !tbaa !2658
  %cmp7 = icmp eq ptr %3, null, !dbg !3889
  br label %lor.end, !dbg !3889

lor.end:                                          ; preds = %lor.rhs, %if.end
  %4 = phi i1 [ true, %if.end ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %4, true, !dbg !3889
  %lnot11 = xor i1 %lnot9, true, !dbg !3889
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !3889
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !3889
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0), !dbg !3889
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !3889
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !3891

if.then16:                                        ; preds = %lor.end
  %5 = load ptr, ptr %fallback_alloc.addr, align 8, !dbg !3892, !tbaa !2658
  %6 = load i64, ptr %size.addr, align 8, !dbg !3894, !tbaa !2663
  %call17 = call ptr %5(i64 noundef %6), !dbg !3892
  store ptr %call17, ptr %retval, align 8, !dbg !3895
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup72, !dbg !3895

if.end18:                                         ; preds = %lor.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %ind) #18, !dbg !3896
  tail call void @llvm.dbg.declare(metadata ptr %ind, metadata !2582, metadata !DIExpression()), !dbg !3897
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !3898
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !2583, metadata !DIExpression()), !dbg !3899
  %7 = load i64, ptr %size.addr, align 8, !dbg !3900, !tbaa !2663
  call void @sz_size2index_usize_fastpath(i64 noundef %7, ptr noundef %ind, ptr noundef %usize), !dbg !3901
  br label %do.body19, !dbg !3902

do.body19:                                        ; preds = %if.end18
  br label %do.cond, !dbg !3903

do.cond:                                          ; preds = %do.body19
  br label %do.end20, !dbg !3903

do.end20:                                         ; preds = %do.cond
  br label %do.body21, !dbg !3905

do.body21:                                        ; preds = %do.end20
  br label %do.cond22, !dbg !3906

do.cond22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !3906

do.end23:                                         ; preds = %do.cond22
  call void @llvm.lifetime.start.p0(i64 8, ptr %allocated) #18, !dbg !3908
  tail call void @llvm.dbg.declare(metadata ptr %allocated, metadata !2584, metadata !DIExpression()), !dbg !3909
  call void @llvm.lifetime.start.p0(i64 8, ptr %threshold) #18, !dbg !3908
  tail call void @llvm.dbg.declare(metadata ptr %threshold, metadata !2585, metadata !DIExpression()), !dbg !3910
  %8 = load ptr, ptr %tsd, align 8, !dbg !3911, !tbaa !2658
  call void @te_malloc_fastpath_ctx(ptr noundef %8, ptr noundef %allocated, ptr noundef %threshold), !dbg !3912
  call void @llvm.lifetime.start.p0(i64 8, ptr %allocated_after) #18, !dbg !3913
  tail call void @llvm.dbg.declare(metadata ptr %allocated_after, metadata !2586, metadata !DIExpression()), !dbg !3914
  %9 = load i64, ptr %allocated, align 8, !dbg !3915, !tbaa !2663
  %10 = load i64, ptr %usize, align 8, !dbg !3916, !tbaa !2663
  %add = add i64 %9, %10, !dbg !3917
  store i64 %add, ptr %allocated_after, align 8, !dbg !3914, !tbaa !2663
  %call24 = call zeroext i1 @malloc_initialized(), !dbg !3918
  br i1 %call24, label %if.else, label %if.then25, !dbg !3920

if.then25:                                        ; preds = %do.end23
  br label %do.body26, !dbg !3921

do.body26:                                        ; preds = %if.then25
  br label %do.cond27, !dbg !3923

do.cond27:                                        ; preds = %do.body26
  br label %do.end28, !dbg !3923

do.end28:                                         ; preds = %do.cond27
  br label %if.end35, !dbg !3925

if.else:                                          ; preds = %do.end23
  br label %do.body29, !dbg !3926

do.body29:                                        ; preds = %if.else
  br label %do.cond30, !dbg !3928

do.cond30:                                        ; preds = %do.body29
  br label %do.end31, !dbg !3928

do.end31:                                         ; preds = %do.cond30
  br label %do.body32, !dbg !3930

do.body32:                                        ; preds = %do.end31
  br label %do.cond33, !dbg !3931

do.cond33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !3931

do.end34:                                         ; preds = %do.cond33
  br label %if.end35

if.end35:                                         ; preds = %do.end34, %do.end28
  %11 = load i64, ptr %allocated_after, align 8, !dbg !3933, !tbaa !2663
  %12 = load i64, ptr %threshold, align 8, !dbg !3933, !tbaa !2663
  %cmp36 = icmp uge i64 %11, %12, !dbg !3933
  %lnot38 = xor i1 %cmp36, true, !dbg !3933
  %lnot40 = xor i1 %lnot38, true, !dbg !3933
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !3933
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !3933
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 0), !dbg !3933
  %tobool44 = icmp ne i64 %expval43, 0, !dbg !3933
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !3935

if.then45:                                        ; preds = %if.end35
  %13 = load ptr, ptr %fallback_alloc.addr, align 8, !dbg !3936, !tbaa !2658
  %14 = load i64, ptr %size.addr, align 8, !dbg !3938, !tbaa !2663
  %call46 = call ptr %13(i64 noundef %14), !dbg !3936
  store ptr %call46, ptr %retval, align 8, !dbg !3939
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !3939

if.end47:                                         ; preds = %if.end35
  br label %do.body48, !dbg !3940

do.body48:                                        ; preds = %if.end47
  br label %do.cond49, !dbg !3941

do.cond49:                                        ; preds = %do.body48
  br label %do.end50, !dbg !3941

do.end50:                                         ; preds = %do.cond49
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !3943
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !2587, metadata !DIExpression()), !dbg !3944
  %15 = load ptr, ptr %tsd, align 8, !dbg !3945, !tbaa !2658
  %call51 = call ptr @tsd_tcachep_get(ptr noundef %15), !dbg !3946
  store ptr %call51, ptr %tcache, align 8, !dbg !3944, !tbaa !2658
  br label %do.body52, !dbg !3947

do.body52:                                        ; preds = %do.end50
  br label %do.cond53, !dbg !3948

do.cond53:                                        ; preds = %do.body52
  br label %do.end54, !dbg !3948

do.end54:                                         ; preds = %do.cond53
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin) #18, !dbg !3950
  tail call void @llvm.dbg.declare(metadata ptr %bin, metadata !2588, metadata !DIExpression()), !dbg !3951
  %16 = load ptr, ptr %tcache, align 8, !dbg !3952, !tbaa !2658
  %bins = getelementptr inbounds %struct.tcache_s, ptr %16, i32 0, i32 1, !dbg !3953
  %17 = load i32, ptr %ind, align 4, !dbg !3954, !tbaa !2791
  %idxprom = zext i32 %17 to i64, !dbg !3952
  %arrayidx = getelementptr inbounds [73 x %struct.cache_bin_s], ptr %bins, i64 0, i64 %idxprom, !dbg !3952
  store ptr %arrayidx, ptr %bin, align 8, !dbg !3951, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 1, ptr %tcache_success) #18, !dbg !3955
  tail call void @llvm.dbg.declare(metadata ptr %tcache_success, metadata !2589, metadata !DIExpression()), !dbg !3956
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !3957
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !2590, metadata !DIExpression()), !dbg !3958
  %18 = load ptr, ptr %bin, align 8, !dbg !3959, !tbaa !2658
  %call55 = call ptr @cache_bin_alloc_easy(ptr noundef %18, ptr noundef %tcache_success), !dbg !3960
  store ptr %call55, ptr %ret, align 8, !dbg !3961, !tbaa !2658
  %19 = load i8, ptr %tcache_success, align 1, !dbg !3962, !tbaa !2695, !range !2708, !noundef !2709
  %tobool56 = trunc i8 %19 to i1, !dbg !3962
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !3964

if.then57:                                        ; preds = %do.end54
  %20 = load ptr, ptr %tsd, align 8, !dbg !3965, !tbaa !2658
  %21 = load i64, ptr %allocated_after, align 8, !dbg !3967, !tbaa !2663
  %22 = load ptr, ptr %bin, align 8, !dbg !3968, !tbaa !2658
  %23 = load ptr, ptr %ret, align 8, !dbg !3969, !tbaa !2658
  call void @fastpath_success_finish(ptr noundef %20, i64 noundef %21, ptr noundef %22, ptr noundef %23), !dbg !3970
  %24 = load ptr, ptr %ret, align 8, !dbg !3971, !tbaa !2658
  store ptr %24, ptr %retval, align 8, !dbg !3972
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3972

if.end58:                                         ; preds = %do.end54
  %25 = load ptr, ptr %bin, align 8, !dbg !3973, !tbaa !2658
  %call59 = call ptr @cache_bin_alloc(ptr noundef %25, ptr noundef %tcache_success), !dbg !3974
  store ptr %call59, ptr %ret, align 8, !dbg !3975, !tbaa !2658
  %26 = load i8, ptr %tcache_success, align 1, !dbg !3976, !tbaa !2695, !range !2708, !noundef !2709
  %tobool60 = trunc i8 %26 to i1, !dbg !3976
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !3978

if.then61:                                        ; preds = %if.end58
  %27 = load ptr, ptr %tsd, align 8, !dbg !3979, !tbaa !2658
  %28 = load i64, ptr %allocated_after, align 8, !dbg !3981, !tbaa !2663
  %29 = load ptr, ptr %bin, align 8, !dbg !3982, !tbaa !2658
  %30 = load ptr, ptr %ret, align 8, !dbg !3983, !tbaa !2658
  call void @fastpath_success_finish(ptr noundef %27, i64 noundef %28, ptr noundef %29, ptr noundef %30), !dbg !3984
  %31 = load ptr, ptr %ret, align 8, !dbg !3985, !tbaa !2658
  store ptr %31, ptr %retval, align 8, !dbg !3986
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3986

if.end62:                                         ; preds = %if.end58
  %32 = load ptr, ptr %fallback_alloc.addr, align 8, !dbg !3987, !tbaa !2658
  %33 = load i64, ptr %size.addr, align 8, !dbg !3988, !tbaa !2663
  %call63 = call ptr %32(i64 noundef %33), !dbg !3987
  store ptr %call63, ptr %retval, align 8, !dbg !3989
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3989

cleanup:                                          ; preds = %if.end62, %if.then61, %if.then57
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !3990
  call void @llvm.lifetime.end.p0(i64 1, ptr %tcache_success) #18, !dbg !3990
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin) #18, !dbg !3990
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !3990
  br label %cleanup67

cleanup67:                                        ; preds = %cleanup, %if.then45
  call void @llvm.lifetime.end.p0(i64 8, ptr %allocated_after) #18, !dbg !3990
  call void @llvm.lifetime.end.p0(i64 8, ptr %threshold) #18, !dbg !3990
  call void @llvm.lifetime.end.p0(i64 8, ptr %allocated) #18, !dbg !3990
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !3990
  call void @llvm.lifetime.end.p0(i64 4, ptr %ind) #18, !dbg !3990
  br label %cleanup72

cleanup72:                                        ; preds = %cleanup67, %if.then16
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !3990
  br label %return

return:                                           ; preds = %cleanup72, %if.then
  %34 = load ptr, ptr %retval, align 8, !dbg !3990
  ret ptr %34, !dbg !3990
}

; Function Attrs: nounwind uwtable
define i32 @je_posix_memalign(ptr noundef nonnull %memptr, i64 noundef %alignment, i64 noundef %size) #0 !dbg !1553 {
entry:
  %memptr.addr = alloca ptr, align 8
  %alignment.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store ptr %memptr, ptr %memptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %memptr.addr, metadata !1557, metadata !DIExpression()), !dbg !3991
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !1558, metadata !DIExpression()), !dbg !3992
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1559, metadata !DIExpression()), !dbg !3993
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #18, !dbg !3994
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1560, metadata !DIExpression()), !dbg !3995
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !3996
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1561, metadata !DIExpression()), !dbg !3997
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !3998
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1562, metadata !DIExpression()), !dbg !3999
  br label %do.body, !dbg !4000

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !4001

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4001

do.end:                                           ; preds = %do.cond
  call void @static_opts_init(ptr noundef %sopts), !dbg !4003
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !4004
  %bump_empty_aligned_alloc = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 1, !dbg !4005
  store i8 1, ptr %bump_empty_aligned_alloc, align 1, !dbg !4006, !tbaa !3738
  %min_alignment = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 5, !dbg !4007
  store i64 8, ptr %min_alignment, align 8, !dbg !4008, !tbaa !3752
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !4009
  store ptr @.str.7, ptr %oom_string, align 8, !dbg !4010, !tbaa !3691
  %invalid_alignment_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 7, !dbg !4011
  store ptr @.str.8, ptr %invalid_alignment_string, align 8, !dbg !4012, !tbaa !3759
  %0 = load ptr, ptr %memptr.addr, align 8, !dbg !4013, !tbaa !2658
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !4014
  store ptr %0, ptr %result, align 8, !dbg !4015, !tbaa !3694
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !4016
  store i64 1, ptr %num_items, align 8, !dbg !4017, !tbaa !3698
  %1 = load i64, ptr %size.addr, align 8, !dbg !4018, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !4019
  store i64 %1, ptr %item_size, align 8, !dbg !4020, !tbaa !3702
  %2 = load i64, ptr %alignment.addr, align 8, !dbg !4021, !tbaa !2663
  %alignment1 = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 4, !dbg !4022
  store i64 %2, ptr %alignment1, align 8, !dbg !4023, !tbaa !3790
  %call = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !4024
  store i32 %call, ptr %ret, align 4, !dbg !4025, !tbaa !2791
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !4026
  %3 = load i8, ptr %slow, align 8, !dbg !4026, !tbaa !3705, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !4026
  br i1 %tobool, label %if.then, label %if.end, !dbg !4027

if.then:                                          ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !4028
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1563, metadata !DIExpression()), !dbg !4029
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4030
  %4 = load ptr, ptr %memptr.addr, align 8, !dbg !4031, !tbaa !2658
  %5 = ptrtoint ptr %4 to i64, !dbg !4032
  store i64 %5, ptr %arrayinit.begin, align 8, !dbg !4030, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4030
  %6 = load i64, ptr %alignment.addr, align 8, !dbg !4033, !tbaa !2663
  store i64 %6, ptr %arrayinit.element, align 8, !dbg !4030, !tbaa !2663
  %arrayinit.element2 = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !4030
  %7 = load i64, ptr %size.addr, align 8, !dbg !4034, !tbaa !2663
  store i64 %7, ptr %arrayinit.element2, align 8, !dbg !4030, !tbaa !2663
  %8 = load ptr, ptr %memptr.addr, align 8, !dbg !4035, !tbaa !2658
  %9 = load ptr, ptr %8, align 8, !dbg !4036, !tbaa !2658
  %10 = load i32, ptr %ret, align 4, !dbg !4037, !tbaa !2791
  %conv = sext i32 %10 to i64, !dbg !4038
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4039
  call void @hook_invoke_alloc(i32 noundef 1, ptr noundef %9, i64 noundef %conv, ptr noundef %arraydecay), !dbg !4040
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !4041
  br label %if.end, !dbg !4042

if.end:                                           ; preds = %if.then, %do.end
  br label %do.body3, !dbg !4043

do.body3:                                         ; preds = %if.end
  br label %do.cond4, !dbg !4044

do.cond4:                                         ; preds = %do.body3
  br label %do.end5, !dbg !4044

do.end5:                                          ; preds = %do.cond4
  %11 = load i32, ptr %ret, align 4, !dbg !4046, !tbaa !2791
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !4047
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !4047
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #18, !dbg !4047
  ret i32 %11, !dbg !4048
}

; Function Attrs: nounwind allocsize(1) uwtable
define noalias ptr @je_aligned_alloc(i64 noundef %alignment, i64 noundef %size) #8 !dbg !1585 {
entry:
  %alignment.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %ret = alloca ptr, align 8
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !1589, metadata !DIExpression()), !dbg !4049
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1590, metadata !DIExpression()), !dbg !4050
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !4051
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1591, metadata !DIExpression()), !dbg !4052
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !4053
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1592, metadata !DIExpression()), !dbg !4054
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !4055
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1593, metadata !DIExpression()), !dbg !4056
  br label %do.body, !dbg !4057

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !4058

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4058

do.end:                                           ; preds = %do.cond
  call void @static_opts_init(ptr noundef %sopts), !dbg !4060
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !4061
  %bump_empty_aligned_alloc = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 1, !dbg !4062
  store i8 1, ptr %bump_empty_aligned_alloc, align 1, !dbg !4063, !tbaa !3738
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 3, !dbg !4064
  store i8 1, ptr %null_out_result_on_error, align 1, !dbg !4065, !tbaa !3684
  %set_errno_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 4, !dbg !4066
  store i8 1, ptr %set_errno_on_error, align 4, !dbg !4067, !tbaa !3688
  %min_alignment = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 5, !dbg !4068
  store i64 1, ptr %min_alignment, align 8, !dbg !4069, !tbaa !3752
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !4070
  store ptr @.str.7, ptr %oom_string, align 8, !dbg !4071, !tbaa !3691
  %invalid_alignment_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 7, !dbg !4072
  store ptr @.str.8, ptr %invalid_alignment_string, align 8, !dbg !4073, !tbaa !3759
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !4074
  store ptr %ret, ptr %result, align 8, !dbg !4075, !tbaa !3694
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !4076
  store i64 1, ptr %num_items, align 8, !dbg !4077, !tbaa !3698
  %0 = load i64, ptr %size.addr, align 8, !dbg !4078, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !4079
  store i64 %0, ptr %item_size, align 8, !dbg !4080, !tbaa !3702
  %1 = load i64, ptr %alignment.addr, align 8, !dbg !4081, !tbaa !2663
  %alignment1 = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 4, !dbg !4082
  store i64 %1, ptr %alignment1, align 8, !dbg !4083, !tbaa !3790
  %call = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !4084
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !4085
  %2 = load i8, ptr %slow, align 8, !dbg !4085, !tbaa !3705, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !4085
  br i1 %tobool, label %if.then, label %if.end, !dbg !4086

if.then:                                          ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !4087
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1594, metadata !DIExpression()), !dbg !4088
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4089
  %3 = load i64, ptr %alignment.addr, align 8, !dbg !4090, !tbaa !2663
  store i64 %3, ptr %arrayinit.begin, align 8, !dbg !4089, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4089
  %4 = load i64, ptr %size.addr, align 8, !dbg !4091, !tbaa !2663
  store i64 %4, ptr %arrayinit.element, align 8, !dbg !4089, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !4089
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !4089
  br label %arrayinit.body, !dbg !4089

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then ], [ %arrayinit.next, %arrayinit.body ], !dbg !4089
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !4089, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !4089
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !4089
  br i1 %arrayinit.done, label %arrayinit.end2, label %arrayinit.body, !dbg !4089

arrayinit.end2:                                   ; preds = %arrayinit.body
  %5 = load ptr, ptr %ret, align 8, !dbg !4092, !tbaa !2658
  %6 = load ptr, ptr %ret, align 8, !dbg !4093, !tbaa !2658
  %7 = ptrtoint ptr %6 to i64, !dbg !4094
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4095
  call void @hook_invoke_alloc(i32 noundef 2, ptr noundef %5, i64 noundef %7, ptr noundef %arraydecay), !dbg !4096
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !4097
  br label %if.end, !dbg !4098

if.end:                                           ; preds = %arrayinit.end2, %do.end
  br label %do.body3, !dbg !4099

do.body3:                                         ; preds = %if.end
  br label %do.cond4, !dbg !4100

do.cond4:                                         ; preds = %do.body3
  br label %do.end5, !dbg !4100

do.end5:                                          ; preds = %do.cond4
  %8 = load ptr, ptr %ret, align 8, !dbg !4102, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !4103
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !4103
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !4103
  ret ptr %8, !dbg !4104
}

; Function Attrs: nounwind allocsize(0,1) uwtable
define noalias ptr @je_calloc(i64 noundef %num, i64 noundef %size) #9 !dbg !1611 {
entry:
  %num.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %ret = alloca ptr, align 8
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store i64 %num, ptr %num.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %num.addr, metadata !1613, metadata !DIExpression()), !dbg !4105
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1614, metadata !DIExpression()), !dbg !4106
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !4107
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1615, metadata !DIExpression()), !dbg !4108
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !4109
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1616, metadata !DIExpression()), !dbg !4110
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !4111
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1617, metadata !DIExpression()), !dbg !4112
  br label %do.body, !dbg !4113

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !4114

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4114

do.end:                                           ; preds = %do.cond
  call void @static_opts_init(ptr noundef %sopts), !dbg !4116
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !4117
  %may_overflow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 0, !dbg !4118
  store i8 1, ptr %may_overflow, align 8, !dbg !4119, !tbaa !3734
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 3, !dbg !4120
  store i8 1, ptr %null_out_result_on_error, align 1, !dbg !4121, !tbaa !3684
  %set_errno_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 4, !dbg !4122
  store i8 1, ptr %set_errno_on_error, align 4, !dbg !4123, !tbaa !3688
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !4124
  store ptr @.str.15, ptr %oom_string, align 8, !dbg !4125, !tbaa !3691
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !4126
  store ptr %ret, ptr %result, align 8, !dbg !4127, !tbaa !3694
  %0 = load i64, ptr %num.addr, align 8, !dbg !4128, !tbaa !2663
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !4129
  store i64 %0, ptr %num_items, align 8, !dbg !4130, !tbaa !3698
  %1 = load i64, ptr %size.addr, align 8, !dbg !4131, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !4132
  store i64 %1, ptr %item_size, align 8, !dbg !4133, !tbaa !3702
  %zero = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 5, !dbg !4134
  store i8 1, ptr %zero, align 8, !dbg !4135, !tbaa !3794
  %call = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !4136
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !4137
  %2 = load i8, ptr %slow, align 8, !dbg !4137, !tbaa !3705, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !4137
  br i1 %tobool, label %if.then, label %if.end, !dbg !4138

if.then:                                          ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !4139
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1618, metadata !DIExpression()), !dbg !4140
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4141
  %3 = load i64, ptr %num.addr, align 8, !dbg !4142, !tbaa !2663
  store i64 %3, ptr %arrayinit.begin, align 8, !dbg !4141, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4141
  %4 = load i64, ptr %size.addr, align 8, !dbg !4143, !tbaa !2663
  store i64 %4, ptr %arrayinit.element, align 8, !dbg !4141, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !4141
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !4141
  br label %arrayinit.body, !dbg !4141

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then ], [ %arrayinit.next, %arrayinit.body ], !dbg !4141
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !4141, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !4141
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !4141
  br i1 %arrayinit.done, label %arrayinit.end1, label %arrayinit.body, !dbg !4141

arrayinit.end1:                                   ; preds = %arrayinit.body
  %5 = load ptr, ptr %ret, align 8, !dbg !4144, !tbaa !2658
  %6 = load ptr, ptr %ret, align 8, !dbg !4145, !tbaa !2658
  %7 = ptrtoint ptr %6 to i64, !dbg !4146
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4147
  call void @hook_invoke_alloc(i32 noundef 3, ptr noundef %5, i64 noundef %7, ptr noundef %arraydecay), !dbg !4148
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !4149
  br label %if.end, !dbg !4150

if.end:                                           ; preds = %arrayinit.end1, %do.end
  br label %do.body2, !dbg !4151

do.body2:                                         ; preds = %if.end
  br label %do.cond3, !dbg !4152

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !4152

do.end4:                                          ; preds = %do.cond3
  %8 = load ptr, ptr %ret, align 8, !dbg !4154, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !4155
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !4155
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !4155
  ret ptr %8, !dbg !4156
}

; Function Attrs: noinline nounwind uwtable
define hidden void @free_default(ptr noundef %ptr) #6 !dbg !4157 {
entry:
  %ptr.addr = alloca ptr, align 8
  %tsd = alloca ptr, align 8
  %tcache = alloca ptr, align 8
  %tcache13 = alloca ptr, align 8
  %args_raw = alloca [3 x i64], align 16
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !4159, metadata !DIExpression()), !dbg !4169
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !4170, !tbaa !2658
  %cmp = icmp ne ptr %0, null, !dbg !4170
  %lnot = xor i1 %cmp, true, !dbg !4170
  %lnot1 = xor i1 %lnot, true, !dbg !4170
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4170
  %conv = sext i32 %lnot.ext to i64, !dbg !4170
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4170
  %tobool = icmp ne i64 %expval, 0, !dbg !4170
  br i1 %tobool, label %if.then, label %if.end17, !dbg !4171

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !4172
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !4160, metadata !DIExpression()), !dbg !4173
  %call = call ptr @tsd_fetch_min(), !dbg !4174
  store ptr %call, ptr %tsd, align 8, !dbg !4173, !tbaa !2658
  %1 = load ptr, ptr %tsd, align 8, !dbg !4175, !tbaa !2658
  %call2 = call ptr @tsd_tsdn(ptr noundef %1), !dbg !4176
  call void @check_entry_exit_locking(ptr noundef %call2), !dbg !4177
  %2 = load ptr, ptr %tsd, align 8, !dbg !4178, !tbaa !2658
  %call3 = call zeroext i1 @tsd_fast(ptr noundef %2), !dbg !4178
  %lnot4 = xor i1 %call3, true, !dbg !4178
  %lnot6 = xor i1 %lnot4, true, !dbg !4178
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !4178
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !4178
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !4178
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !4178
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !4179

if.then11:                                        ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !4180
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !4163, metadata !DIExpression()), !dbg !4181
  %3 = load ptr, ptr %tsd, align 8, !dbg !4182, !tbaa !2658
  %call12 = call ptr @tcache_get_from_ind(ptr noundef %3, i32 noundef -2, i1 noundef zeroext false, i1 noundef zeroext false), !dbg !4183
  store ptr %call12, ptr %tcache, align 8, !dbg !4181, !tbaa !2658
  %4 = load ptr, ptr %tsd, align 8, !dbg !4184, !tbaa !2658
  %5 = load ptr, ptr %ptr.addr, align 8, !dbg !4185, !tbaa !2658
  %6 = load ptr, ptr %tcache, align 8, !dbg !4186, !tbaa !2658
  call void @ifree(ptr noundef %4, ptr noundef %5, ptr noundef %6, i1 noundef zeroext false), !dbg !4187
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !4188
  br label %if.end, !dbg !4189

if.else:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache13) #18, !dbg !4190
  tail call void @llvm.dbg.declare(metadata ptr %tcache13, metadata !4166, metadata !DIExpression()), !dbg !4191
  %7 = load ptr, ptr %tsd, align 8, !dbg !4192, !tbaa !2658
  %call14 = call ptr @tcache_get_from_ind(ptr noundef %7, i32 noundef -2, i1 noundef zeroext true, i1 noundef zeroext false), !dbg !4193
  store ptr %call14, ptr %tcache13, align 8, !dbg !4191, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 24, ptr %args_raw) #18, !dbg !4194
  tail call void @llvm.dbg.declare(metadata ptr %args_raw, metadata !4168, metadata !DIExpression()), !dbg !4195
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args_raw, i64 0, i64 0, !dbg !4196
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !4197, !tbaa !2658
  %9 = ptrtoint ptr %8 to i64, !dbg !4198
  store i64 %9, ptr %arrayinit.begin, align 8, !dbg !4196, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4196
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !4196
  br label %arrayinit.body, !dbg !4196

arrayinit.body:                                   ; preds = %arrayinit.body, %if.else
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.else ], [ %arrayinit.next, %arrayinit.body ], !dbg !4196
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !4196, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !4196
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !4196
  br i1 %arrayinit.done, label %arrayinit.end15, label %arrayinit.body, !dbg !4196

arrayinit.end15:                                  ; preds = %arrayinit.body
  %10 = load ptr, ptr %ptr.addr, align 8, !dbg !4199, !tbaa !2658
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args_raw, i64 0, i64 0, !dbg !4200
  call void @hook_invoke_dalloc(i32 noundef 0, ptr noundef %10, ptr noundef %arraydecay), !dbg !4201
  %11 = load ptr, ptr %tsd, align 8, !dbg !4202, !tbaa !2658
  %12 = load ptr, ptr %ptr.addr, align 8, !dbg !4203, !tbaa !2658
  %13 = load ptr, ptr %tcache13, align 8, !dbg !4204, !tbaa !2658
  call void @ifree(ptr noundef %11, ptr noundef %12, ptr noundef %13, i1 noundef zeroext true), !dbg !4205
  call void @llvm.lifetime.end.p0(i64 24, ptr %args_raw) #18, !dbg !4206
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache13) #18, !dbg !4206
  br label %if.end

if.end:                                           ; preds = %arrayinit.end15, %if.then11
  %14 = load ptr, ptr %tsd, align 8, !dbg !4207, !tbaa !2658
  %call16 = call ptr @tsd_tsdn(ptr noundef %14), !dbg !4208
  call void @check_entry_exit_locking(ptr noundef %call16), !dbg !4209
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !4210
  br label %if.end17, !dbg !4211

if.end17:                                         ; preds = %if.end, %entry
  ret void, !dbg !4212
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_fetch_min() #3 !dbg !4213 {
entry:
  %call = call ptr @tsd_fetch_impl(i1 noundef zeroext true, i1 noundef zeroext true), !dbg !4216
  ret ptr %call, !dbg !4217
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @check_entry_exit_locking(ptr noundef %tsdn) #3 !dbg !4218 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %tsd = alloca ptr, align 8
  %reentrancy_level = alloca i8, align 1
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !4222, metadata !DIExpression()), !dbg !4223
  ret void, !dbg !4224
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @tsd_fast(ptr noundef %tsd) #3 !dbg !4227 {
entry:
  %tsd.addr = alloca ptr, align 8
  %fast = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !4231, metadata !DIExpression()), !dbg !4233
  call void @llvm.lifetime.start.p0(i64 1, ptr %fast) #18, !dbg !4234
  tail call void @llvm.dbg.declare(metadata ptr %fast, metadata !4232, metadata !DIExpression()), !dbg !4235
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !4236, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !4237
  %conv = zext i8 %call to i32, !dbg !4237
  %cmp = icmp eq i32 %conv, 0, !dbg !4238
  %frombool = zext i1 %cmp to i8, !dbg !4235
  store i8 %frombool, ptr %fast, align 1, !dbg !4235, !tbaa !2695
  %1 = load i8, ptr %fast, align 1, !dbg !4239, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !4239
  br i1 %tobool, label %if.then, label %if.end, !dbg !4241

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !4242, !tbaa !2658
  call void @tsd_assert_fast(ptr noundef %2), !dbg !4244
  br label %if.end, !dbg !4245

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8, ptr %fast, align 1, !dbg !4246, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2 = trunc i8 %3 to i1, !dbg !4246
  call void @llvm.lifetime.end.p0(i64 1, ptr %fast) #18, !dbg !4247
  ret i1 %tobool2, !dbg !4248
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tcache_get_from_ind(ptr noundef %tsd, i32 noundef %tcache_ind, i1 noundef zeroext %slow, i1 noundef zeroext %is_alloc) #3 !dbg !4249 {
entry:
  %tsd.addr = alloca ptr, align 8
  %tcache_ind.addr = alloca i32, align 4
  %slow.addr = alloca i8, align 1
  %is_alloc.addr = alloca i8, align 1
  %tcache = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !4253, metadata !DIExpression()), !dbg !4258
  store i32 %tcache_ind, ptr %tcache_ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %tcache_ind.addr, metadata !4254, metadata !DIExpression()), !dbg !4259
  %frombool = zext i1 %slow to i8
  store i8 %frombool, ptr %slow.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow.addr, metadata !4255, metadata !DIExpression()), !dbg !4260
  %frombool1 = zext i1 %is_alloc to i8
  store i8 %frombool1, ptr %is_alloc.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_alloc.addr, metadata !4256, metadata !DIExpression()), !dbg !4261
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !4262
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !4257, metadata !DIExpression()), !dbg !4263
  %0 = load i32, ptr %tcache_ind.addr, align 4, !dbg !4264, !tbaa !2791
  %cmp = icmp eq i32 %0, -2, !dbg !4266
  br i1 %cmp, label %if.then, label %if.else23, !dbg !4267

if.then:                                          ; preds = %entry
  %1 = load i8, ptr %slow.addr, align 1, !dbg !4268, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !4268
  %lnot = xor i1 %tobool, true, !dbg !4268
  %lnot2 = xor i1 %lnot, true, !dbg !4268
  %lnot3 = xor i1 %lnot2, true, !dbg !4268
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !4268
  %conv = sext i32 %lnot.ext to i64, !dbg !4268
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4268
  %tobool4 = icmp ne i64 %expval, 0, !dbg !4268
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4271

if.then5:                                         ; preds = %if.then
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !4272, !tbaa !2658
  %call = call ptr @tsd_tcachep_get(ptr noundef %2), !dbg !4274
  store ptr %call, ptr %tcache, align 8, !dbg !4275, !tbaa !2658
  br label %do.body, !dbg !4276

do.body:                                          ; preds = %if.then5
  br label %do.cond, !dbg !4277

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4277

do.end:                                           ; preds = %do.cond
  br label %if.end22, !dbg !4279

if.else:                                          ; preds = %if.then
  %3 = load i8, ptr %is_alloc.addr, align 1, !dbg !4280, !tbaa !2695, !range !2708, !noundef !2709
  %tobool6 = trunc i8 %3 to i1, !dbg !4280
  br i1 %tobool6, label %if.then19, label %lor.lhs.false, !dbg !4282

lor.lhs.false:                                    ; preds = %if.else
  %4 = load ptr, ptr %tsd.addr, align 8, !dbg !4283, !tbaa !2658
  %call8 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %4), !dbg !4283
  %conv9 = sext i8 %call8 to i32, !dbg !4283
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !4283
  %lnot12 = xor i1 %cmp10, true, !dbg !4283
  %lnot14 = xor i1 %lnot12, true, !dbg !4283
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !4283
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !4283
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 1), !dbg !4283
  %tobool18 = icmp ne i64 %expval17, 0, !dbg !4283
  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !4284

if.then19:                                        ; preds = %lor.lhs.false, %if.else
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !4285, !tbaa !2658
  %call20 = call ptr @tcache_get(ptr noundef %5), !dbg !4287
  store ptr %call20, ptr %tcache, align 8, !dbg !4288, !tbaa !2658
  br label %if.end, !dbg !4289

if.else21:                                        ; preds = %lor.lhs.false
  store ptr null, ptr %tcache, align 8, !dbg !4290, !tbaa !2658
  br label %if.end

if.end:                                           ; preds = %if.else21, %if.then19
  br label %if.end22

if.end22:                                         ; preds = %if.end, %do.end
  br label %if.end33, !dbg !4292

if.else23:                                        ; preds = %entry
  br label %do.body24, !dbg !4293

do.body24:                                        ; preds = %if.else23
  br label %do.cond25, !dbg !4295

do.cond25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !4295

do.end26:                                         ; preds = %do.cond25
  %6 = load i32, ptr %tcache_ind.addr, align 4, !dbg !4297, !tbaa !2791
  %cmp27 = icmp eq i32 %6, -1, !dbg !4299
  br i1 %cmp27, label %if.then29, label %if.else30, !dbg !4300

if.then29:                                        ; preds = %do.end26
  store ptr null, ptr %tcache, align 8, !dbg !4301, !tbaa !2658
  br label %if.end32, !dbg !4303

if.else30:                                        ; preds = %do.end26
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !4304, !tbaa !2658
  %8 = load i32, ptr %tcache_ind.addr, align 4, !dbg !4306, !tbaa !2791
  %call31 = call ptr @tcaches_get(ptr noundef %7, i32 noundef %8), !dbg !4307
  store ptr %call31, ptr %tcache, align 8, !dbg !4308, !tbaa !2658
  br label %if.end32

if.end32:                                         ; preds = %if.else30, %if.then29
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end22
  %9 = load ptr, ptr %tcache, align 8, !dbg !4309, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !4310
  ret ptr %9, !dbg !4311
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @ifree(ptr noundef %tsd, ptr noundef %ptr, ptr noundef %tcache, i1 noundef zeroext %slow_path) #3 !dbg !4312 {
entry:
  %tsd.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %slow_path.addr = alloca i8, align 1
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  %usize = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !4316, metadata !DIExpression()), !dbg !4322
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !4317, metadata !DIExpression()), !dbg !4323
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !4318, metadata !DIExpression()), !dbg !4324
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !4319, metadata !DIExpression()), !dbg !4325
  %0 = load i8, ptr %slow_path.addr, align 1, !dbg !4326, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !4326
  br i1 %tobool, label %if.end, label %if.then, !dbg !4328

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !4329, !tbaa !2658
  call void @tsd_assert_fast(ptr noundef %1), !dbg !4331
  br label %if.end, !dbg !4332

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !4333, !tbaa !2658
  %call = call ptr @tsd_tsdn(ptr noundef %2), !dbg !4334
  call void @check_entry_exit_locking(ptr noundef %call), !dbg !4335
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !4336, !tbaa !2658
  %call1 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %3), !dbg !4338
  %conv = sext i8 %call1 to i32, !dbg !4338
  %cmp = icmp ne i32 %conv, 0, !dbg !4339
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !4340

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !4341

do.body:                                          ; preds = %if.then3
  br label %do.end, !dbg !4343

do.end:                                           ; preds = %do.body
  br label %if.end4, !dbg !4345

if.end4:                                          ; preds = %do.end, %if.end
  br label %do.body5, !dbg !4346

do.body5:                                         ; preds = %if.end4
  br label %do.end6, !dbg !4347

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !4349

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !4350

do.end8:                                          ; preds = %do.body7
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !4352
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !4320, metadata !DIExpression()), !dbg !4353
  %4 = load ptr, ptr %tsd.addr, align 8, !dbg !4354, !tbaa !2658
  %call9 = call ptr @tsd_tsdn(ptr noundef %4), !dbg !4355
  %5 = load ptr, ptr %ptr.addr, align 8, !dbg !4356, !tbaa !2658
  call void @emap_alloc_ctx_lookup(ptr noundef %call9, ptr noundef @arena_emap_global, ptr noundef %5, ptr noundef %alloc_ctx), !dbg !4357
  br label %do.body10, !dbg !4358

do.body10:                                        ; preds = %do.end8
  br label %do.cond, !dbg !4359

do.cond:                                          ; preds = %do.body10
  br label %do.end11, !dbg !4359

do.end11:                                         ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !4361
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !4321, metadata !DIExpression()), !dbg !4362
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !4363
  %6 = load i32, ptr %szind, align 4, !dbg !4363, !tbaa !4364
  %call12 = call i64 @sz_index2size(i32 noundef %6), !dbg !4366
  store i64 %call12, ptr %usize, align 8, !dbg !4362, !tbaa !2663
  %7 = load i8, ptr %slow_path.addr, align 1, !dbg !4367, !tbaa !2695, !range !2708, !noundef !2709
  %tobool13 = trunc i8 %7 to i1, !dbg !4367
  %lnot = xor i1 %tobool13, true, !dbg !4367
  %lnot14 = xor i1 %lnot, true, !dbg !4367
  %lnot15 = xor i1 %lnot14, true, !dbg !4367
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !4367
  %conv16 = sext i32 %lnot.ext to i64, !dbg !4367
  %expval = call i64 @llvm.expect.i64(i64 %conv16, i64 1), !dbg !4367
  %tobool17 = icmp ne i64 %expval, 0, !dbg !4367
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !4369

if.then18:                                        ; preds = %do.end11
  %8 = load ptr, ptr %tsd.addr, align 8, !dbg !4370, !tbaa !2658
  %call19 = call ptr @tsd_tsdn(ptr noundef %8), !dbg !4372
  %9 = load ptr, ptr %ptr.addr, align 8, !dbg !4373, !tbaa !2658
  %10 = load ptr, ptr %tcache.addr, align 8, !dbg !4374, !tbaa !2658
  call void @idalloctm(ptr noundef %call19, ptr noundef %9, ptr noundef %10, ptr noundef %alloc_ctx, i1 noundef zeroext false, i1 noundef zeroext false), !dbg !4375
  br label %if.end27, !dbg !4376

if.else:                                          ; preds = %do.end11
  %11 = load i8, ptr %slow_path.addr, align 1, !dbg !4377, !tbaa !2695, !range !2708, !noundef !2709
  %tobool20 = trunc i8 %11 to i1, !dbg !4377
  br i1 %tobool20, label %land.lhs.true, label %if.end25, !dbg !4380

land.lhs.true:                                    ; preds = %if.else
  %12 = load i8, ptr @opt_junk_free, align 1, !dbg !4381, !tbaa !2695, !range !2708, !noundef !2709
  %tobool22 = trunc i8 %12 to i1, !dbg !4381
  br i1 %tobool22, label %if.then24, label %if.end25, !dbg !4382

if.then24:                                        ; preds = %land.lhs.true
  %13 = load ptr, ptr @junk_free_callback, align 8, !dbg !4383, !tbaa !2658
  %14 = load ptr, ptr %ptr.addr, align 8, !dbg !4385, !tbaa !2658
  %15 = load i64, ptr %usize, align 8, !dbg !4386, !tbaa !2663
  call void %13(ptr noundef %14, i64 noundef %15), !dbg !4383
  br label %if.end25, !dbg !4387

if.end25:                                         ; preds = %if.then24, %land.lhs.true, %if.else
  %16 = load ptr, ptr %tsd.addr, align 8, !dbg !4388, !tbaa !2658
  %call26 = call ptr @tsd_tsdn(ptr noundef %16), !dbg !4389
  %17 = load ptr, ptr %ptr.addr, align 8, !dbg !4390, !tbaa !2658
  %18 = load ptr, ptr %tcache.addr, align 8, !dbg !4391, !tbaa !2658
  call void @idalloctm(ptr noundef %call26, ptr noundef %17, ptr noundef %18, ptr noundef %alloc_ctx, i1 noundef zeroext false, i1 noundef zeroext true), !dbg !4392
  br label %if.end27

if.end27:                                         ; preds = %if.end25, %if.then18
  %19 = load ptr, ptr %tsd.addr, align 8, !dbg !4393, !tbaa !2658
  %20 = load i64, ptr %usize, align 8, !dbg !4394, !tbaa !2663
  call void @thread_dalloc_event(ptr noundef %19, i64 noundef %20), !dbg !4395
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !4396
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !4396
  ret void, !dbg !4396
}

declare !dbg !4397 void @hook_invoke_dalloc(i32 noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define void @je_free(ptr noundef %ptr) #0 !dbg !1632 {
entry:
  %ptr.addr = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1636, metadata !DIExpression()), !dbg !4401
  br label %do.body, !dbg !4402

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4403

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !4405, !tbaa !2658
  %call = call zeroext i1 @free_fastpath(ptr noundef %0, i64 noundef 0, i1 noundef zeroext false), !dbg !4407
  br i1 %call, label %if.end, label %if.then, !dbg !4408

if.then:                                          ; preds = %do.end
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !4409, !tbaa !2658
  call void @free_default(ptr noundef %1), !dbg !4411
  br label %if.end, !dbg !4412

if.end:                                           ; preds = %if.then, %do.end
  br label %do.body1, !dbg !4413

do.body1:                                         ; preds = %if.end
  br label %do.end2, !dbg !4414

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !4416
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @free_fastpath(ptr noundef %ptr, i64 noundef %size, i1 noundef zeroext %size_hint) #3 !dbg !4417 {
entry:
  %retval = alloca i1, align 1
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %size_hint.addr = alloca i8, align 1
  %tsd = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  %err = alloca i8, align 1
  %deallocated = alloca i64, align 8
  %threshold = alloca i64, align 8
  %usize = alloca i64, align 8
  %deallocated_after = alloca i64, align 8
  %fail = alloca i8, align 1
  %tcache = alloca ptr, align 8
  %bin = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !4421, metadata !DIExpression()), !dbg !4436
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !4422, metadata !DIExpression()), !dbg !4437
  %frombool = zext i1 %size_hint to i8
  store i8 %frombool, ptr %size_hint.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %size_hint.addr, metadata !4423, metadata !DIExpression()), !dbg !4438
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !4439
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !4424, metadata !DIExpression()), !dbg !4440
  %call = call ptr @tsd_get(i1 noundef zeroext false), !dbg !4441
  store ptr %call, ptr %tsd, align 8, !dbg !4440, !tbaa !2658
  %0 = load ptr, ptr %tsd, align 8, !dbg !4442, !tbaa !2658
  %cmp = icmp eq ptr %0, null, !dbg !4442
  %lnot = xor i1 %cmp, true, !dbg !4442
  %lnot1 = xor i1 %lnot, true, !dbg !4442
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4442
  %conv = sext i32 %lnot.ext to i64, !dbg !4442
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4442
  %tobool = icmp ne i64 %expval, 0, !dbg !4442
  br i1 %tobool, label %if.then, label %if.end, !dbg !4444

if.then:                                          ; preds = %entry
  store i1 false, ptr %retval, align 1, !dbg !4445
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup85, !dbg !4445

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4447

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !4448

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4448

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !4450
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !4425, metadata !DIExpression()), !dbg !4451
  %1 = load i8, ptr %size_hint.addr, align 1, !dbg !4452, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2 = trunc i8 %1 to i1, !dbg !4452
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !4453

if.then3:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 1, ptr %err) #18, !dbg !4454
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !4426, metadata !DIExpression()), !dbg !4455
  %2 = load ptr, ptr %tsd, align 8, !dbg !4456, !tbaa !2658
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !4457, !tbaa !2658
  %call4 = call zeroext i1 @emap_alloc_ctx_try_lookup_fast(ptr noundef %2, ptr noundef @arena_emap_global, ptr noundef %3, ptr noundef %alloc_ctx), !dbg !4458
  %frombool5 = zext i1 %call4 to i8, !dbg !4455
  store i8 %frombool5, ptr %err, align 1, !dbg !4455, !tbaa !2695
  %4 = load i8, ptr %err, align 1, !dbg !4459, !tbaa !2695, !range !2708, !noundef !2709
  %tobool6 = trunc i8 %4 to i1, !dbg !4459
  br i1 %tobool6, label %lor.end, label %lor.lhs.false, !dbg !4459

lor.lhs.false:                                    ; preds = %if.then3
  %slab = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !4459
  %5 = load i8, ptr %slab, align 4, !dbg !4459, !tbaa !4461, !range !2708, !noundef !2709
  %tobool8 = trunc i8 %5 to i1, !dbg !4459
  br i1 %tobool8, label %lor.rhs, label %lor.end, !dbg !4459

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !4459, !tbaa !2658
  %call9 = call zeroext i1 @free_fastpath_nonfast_aligned(ptr noundef %6, i1 noundef zeroext false), !dbg !4459
  br label %lor.end, !dbg !4459

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.then3
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %if.then3 ], [ %call9, %lor.rhs ]
  %lnot11 = xor i1 %7, true, !dbg !4459
  %lnot13 = xor i1 %lnot11, true, !dbg !4459
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !4459
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !4459
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0), !dbg !4459
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !4459
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !4462

if.then18:                                        ; preds = %lor.end
  store i1 false, ptr %retval, align 1, !dbg !4463
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4463

if.end19:                                         ; preds = %lor.end
  br label %do.body20, !dbg !4465

do.body20:                                        ; preds = %if.end19
  br label %do.cond21, !dbg !4466

do.cond21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !4466

do.end22:                                         ; preds = %do.cond21
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4468
  br label %cleanup, !dbg !4468

cleanup:                                          ; preds = %do.end22, %if.then18
  call void @llvm.lifetime.end.p0(i64 1, ptr %err) #18, !dbg !4468
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup84 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end43, !dbg !4469

if.else:                                          ; preds = %do.end
  %8 = load i64, ptr %size.addr, align 8, !dbg !4470, !tbaa !2663
  %cmp23 = icmp ugt i64 %8, 4096, !dbg !4470
  br i1 %cmp23, label %lor.end28, label %lor.rhs25, !dbg !4470

lor.rhs25:                                        ; preds = %if.else
  %9 = load ptr, ptr %ptr.addr, align 8, !dbg !4470, !tbaa !2658
  %call26 = call zeroext i1 @free_fastpath_nonfast_aligned(ptr noundef %9, i1 noundef zeroext true), !dbg !4470
  br label %lor.end28, !dbg !4470

lor.end28:                                        ; preds = %lor.rhs25, %if.else
  %10 = phi i1 [ true, %if.else ], [ %call26, %lor.rhs25 ]
  %lnot29 = xor i1 %10, true, !dbg !4470
  %lnot31 = xor i1 %lnot29, true, !dbg !4470
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !4470
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !4470
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 0), !dbg !4470
  %tobool35 = icmp ne i64 %expval34, 0, !dbg !4470
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !4473

if.then36:                                        ; preds = %lor.end28
  store i1 false, ptr %retval, align 1, !dbg !4474
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup84, !dbg !4474

if.end37:                                         ; preds = %lor.end28
  %11 = load i64, ptr %size.addr, align 8, !dbg !4476, !tbaa !2663
  %call38 = call i32 @sz_size2index_lookup(i64 noundef %11), !dbg !4477
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !4478
  store i32 %call38, ptr %szind, align 4, !dbg !4479, !tbaa !4364
  br label %do.body39, !dbg !4480

do.body39:                                        ; preds = %if.end37
  br label %do.cond40, !dbg !4481

do.cond40:                                        ; preds = %do.body39
  br label %do.end41, !dbg !4481

do.end41:                                         ; preds = %do.cond40
  %slab42 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !4483
  store i8 1, ptr %slab42, align 4, !dbg !4484, !tbaa !4461
  br label %if.end43

if.end43:                                         ; preds = %do.end41, %cleanup.cont
  br label %do.body44, !dbg !4485

do.body44:                                        ; preds = %if.end43
  br label %do.cond45, !dbg !4486

do.cond45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !4486

do.end46:                                         ; preds = %do.cond45
  call void @llvm.lifetime.start.p0(i64 8, ptr %deallocated) #18, !dbg !4488
  tail call void @llvm.dbg.declare(metadata ptr %deallocated, metadata !4429, metadata !DIExpression()), !dbg !4489
  call void @llvm.lifetime.start.p0(i64 8, ptr %threshold) #18, !dbg !4488
  tail call void @llvm.dbg.declare(metadata ptr %threshold, metadata !4430, metadata !DIExpression()), !dbg !4490
  %12 = load ptr, ptr %tsd, align 8, !dbg !4491, !tbaa !2658
  call void @te_free_fastpath_ctx(ptr noundef %12, ptr noundef %deallocated, ptr noundef %threshold), !dbg !4492
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !4493
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !4431, metadata !DIExpression()), !dbg !4494
  %szind47 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !4495
  %13 = load i32, ptr %szind47, align 4, !dbg !4495, !tbaa !4364
  %call48 = call i64 @sz_index2size(i32 noundef %13), !dbg !4496
  store i64 %call48, ptr %usize, align 8, !dbg !4494, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %deallocated_after) #18, !dbg !4497
  tail call void @llvm.dbg.declare(metadata ptr %deallocated_after, metadata !4432, metadata !DIExpression()), !dbg !4498
  %14 = load i64, ptr %deallocated, align 8, !dbg !4499, !tbaa !2663
  %15 = load i64, ptr %usize, align 8, !dbg !4500, !tbaa !2663
  %add = add i64 %14, %15, !dbg !4501
  store i64 %add, ptr %deallocated_after, align 8, !dbg !4498, !tbaa !2663
  %16 = load i64, ptr %deallocated_after, align 8, !dbg !4502, !tbaa !2663
  %17 = load i64, ptr %threshold, align 8, !dbg !4502, !tbaa !2663
  %cmp49 = icmp uge i64 %16, %17, !dbg !4502
  %lnot51 = xor i1 %cmp49, true, !dbg !4502
  %lnot53 = xor i1 %lnot51, true, !dbg !4502
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !4502
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !4502
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !4502
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !4502
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !4504

if.then58:                                        ; preds = %do.end46
  store i1 false, ptr %retval, align 1, !dbg !4505
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !4505

if.end59:                                         ; preds = %do.end46
  br label %do.body60, !dbg !4507

do.body60:                                        ; preds = %if.end59
  br label %do.cond61, !dbg !4508

do.cond61:                                        ; preds = %do.body60
  br label %do.end62, !dbg !4508

do.end62:                                         ; preds = %do.cond61
  call void @llvm.lifetime.start.p0(i64 1, ptr %fail) #18, !dbg !4510
  tail call void @llvm.dbg.declare(metadata ptr %fail, metadata !4433, metadata !DIExpression()), !dbg !4511
  %18 = load ptr, ptr %tsd, align 8, !dbg !4512, !tbaa !2658
  %19 = load ptr, ptr %ptr.addr, align 8, !dbg !4513, !tbaa !2658
  %call63 = call zeroext i1 @maybe_check_alloc_ctx(ptr noundef %18, ptr noundef %19, ptr noundef %alloc_ctx), !dbg !4514
  %frombool64 = zext i1 %call63 to i8, !dbg !4511
  store i8 %frombool64, ptr %fail, align 1, !dbg !4511, !tbaa !2695
  %20 = load i8, ptr %fail, align 1, !dbg !4515, !tbaa !2695, !range !2708, !noundef !2709
  %tobool65 = trunc i8 %20 to i1, !dbg !4515
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !4517

if.then66:                                        ; preds = %do.end62
  store i1 true, ptr %retval, align 1, !dbg !4518
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup79, !dbg !4518

if.end67:                                         ; preds = %do.end62
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !4520
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !4434, metadata !DIExpression()), !dbg !4521
  %21 = load ptr, ptr %tsd, align 8, !dbg !4522, !tbaa !2658
  %call68 = call ptr @tcache_get_from_ind(ptr noundef %21, i32 noundef -2, i1 noundef zeroext false, i1 noundef zeroext false), !dbg !4523
  store ptr %call68, ptr %tcache, align 8, !dbg !4521, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin) #18, !dbg !4524
  tail call void @llvm.dbg.declare(metadata ptr %bin, metadata !4435, metadata !DIExpression()), !dbg !4525
  %22 = load ptr, ptr %tcache, align 8, !dbg !4526, !tbaa !2658
  %bins = getelementptr inbounds %struct.tcache_s, ptr %22, i32 0, i32 1, !dbg !4527
  %szind69 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !4528
  %23 = load i32, ptr %szind69, align 4, !dbg !4528, !tbaa !4364
  %idxprom = zext i32 %23 to i64, !dbg !4526
  %arrayidx = getelementptr inbounds [73 x %struct.cache_bin_s], ptr %bins, i64 0, i64 %idxprom, !dbg !4526
  store ptr %arrayidx, ptr %bin, align 8, !dbg !4525, !tbaa !2658
  br label %do.body70, !dbg !4529

do.body70:                                        ; preds = %if.end67
  br label %do.cond71, !dbg !4530

do.cond71:                                        ; preds = %do.body70
  br label %do.end72, !dbg !4530

do.end72:                                         ; preds = %do.cond71
  %24 = load ptr, ptr %bin, align 8, !dbg !4532, !tbaa !2658
  %25 = load ptr, ptr %ptr.addr, align 8, !dbg !4534, !tbaa !2658
  %call73 = call zeroext i1 @cache_bin_dalloc_easy(ptr noundef %24, ptr noundef %25), !dbg !4535
  br i1 %call73, label %if.end75, label %if.then74, !dbg !4536

if.then74:                                        ; preds = %do.end72
  store i1 false, ptr %retval, align 1, !dbg !4537
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !4537

if.end75:                                         ; preds = %do.end72
  %26 = load i64, ptr %deallocated_after, align 8, !dbg !4539, !tbaa !2663
  %27 = load ptr, ptr %tsd, align 8, !dbg !4540, !tbaa !2658
  %call76 = call ptr @tsd_thread_deallocatedp_get(ptr noundef %27), !dbg !4541
  store i64 %26, ptr %call76, align 8, !dbg !4542, !tbaa !2663
  store i1 true, ptr %retval, align 1, !dbg !4543
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !4543

cleanup77:                                        ; preds = %if.end75, %if.then74
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin) #18, !dbg !4544
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !4544
  br label %cleanup79

cleanup79:                                        ; preds = %cleanup77, %if.then66
  call void @llvm.lifetime.end.p0(i64 1, ptr %fail) #18, !dbg !4544
  br label %cleanup80

cleanup80:                                        ; preds = %cleanup79, %if.then58
  call void @llvm.lifetime.end.p0(i64 8, ptr %deallocated_after) #18, !dbg !4544
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !4544
  call void @llvm.lifetime.end.p0(i64 8, ptr %threshold) #18, !dbg !4544
  call void @llvm.lifetime.end.p0(i64 8, ptr %deallocated) #18, !dbg !4544
  br label %cleanup84

cleanup84:                                        ; preds = %cleanup80, %if.then36, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !4544
  br label %cleanup85

cleanup85:                                        ; preds = %cleanup84, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !4544
  %28 = load i1, ptr %retval, align 1, !dbg !4544
  ret i1 %28, !dbg !4544
}

; Function Attrs: nounwind uwtable
define noalias ptr @je_memalign(i64 noundef %alignment, i64 noundef %size) #0 !dbg !1651 {
entry:
  %alignment.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %ret = alloca ptr, align 8
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !1653, metadata !DIExpression()), !dbg !4545
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1654, metadata !DIExpression()), !dbg !4546
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !4547
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1655, metadata !DIExpression()), !dbg !4548
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !4549
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1656, metadata !DIExpression()), !dbg !4550
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !4551
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1657, metadata !DIExpression()), !dbg !4552
  br label %do.body, !dbg !4553

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !4554

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4554

do.end:                                           ; preds = %do.cond
  call void @static_opts_init(ptr noundef %sopts), !dbg !4556
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !4557
  %min_alignment = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 5, !dbg !4558
  store i64 1, ptr %min_alignment, align 8, !dbg !4559, !tbaa !3752
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !4560
  store ptr @.str.7, ptr %oom_string, align 8, !dbg !4561, !tbaa !3691
  %invalid_alignment_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 7, !dbg !4562
  store ptr @.str.8, ptr %invalid_alignment_string, align 8, !dbg !4563, !tbaa !3759
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 3, !dbg !4564
  store i8 1, ptr %null_out_result_on_error, align 1, !dbg !4565, !tbaa !3684
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !4566
  store ptr %ret, ptr %result, align 8, !dbg !4567, !tbaa !3694
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !4568
  store i64 1, ptr %num_items, align 8, !dbg !4569, !tbaa !3698
  %0 = load i64, ptr %size.addr, align 8, !dbg !4570, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !4571
  store i64 %0, ptr %item_size, align 8, !dbg !4572, !tbaa !3702
  %1 = load i64, ptr %alignment.addr, align 8, !dbg !4573, !tbaa !2663
  %alignment1 = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 4, !dbg !4574
  store i64 %1, ptr %alignment1, align 8, !dbg !4575, !tbaa !3790
  %call = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !4576
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !4577
  %2 = load i8, ptr %slow, align 8, !dbg !4577, !tbaa !3705, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !4577
  br i1 %tobool, label %if.then, label %if.end, !dbg !4578

if.then:                                          ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !4579
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1658, metadata !DIExpression()), !dbg !4580
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4581
  %3 = load i64, ptr %alignment.addr, align 8, !dbg !4582, !tbaa !2663
  store i64 %3, ptr %arrayinit.begin, align 8, !dbg !4581, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4581
  %4 = load i64, ptr %size.addr, align 8, !dbg !4583, !tbaa !2663
  store i64 %4, ptr %arrayinit.element, align 8, !dbg !4581, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !4581
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !4581
  br label %arrayinit.body, !dbg !4581

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then ], [ %arrayinit.next, %arrayinit.body ], !dbg !4581
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !4581, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !4581
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !4581
  br i1 %arrayinit.done, label %arrayinit.end2, label %arrayinit.body, !dbg !4581

arrayinit.end2:                                   ; preds = %arrayinit.body
  %5 = load ptr, ptr %ret, align 8, !dbg !4584, !tbaa !2658
  %6 = load ptr, ptr %ret, align 8, !dbg !4585, !tbaa !2658
  %7 = ptrtoint ptr %6 to i64, !dbg !4586
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4587
  call void @hook_invoke_alloc(i32 noundef 4, ptr noundef %5, i64 noundef %7, ptr noundef %arraydecay), !dbg !4588
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !4589
  br label %if.end, !dbg !4590

if.end:                                           ; preds = %arrayinit.end2, %do.end
  br label %do.body3, !dbg !4591

do.body3:                                         ; preds = %if.end
  br label %do.cond4, !dbg !4592

do.cond4:                                         ; preds = %do.body3
  br label %do.end5, !dbg !4592

do.end5:                                          ; preds = %do.cond4
  %8 = load ptr, ptr %ret, align 8, !dbg !4594, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !4595
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !4595
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !4595
  ret ptr %8, !dbg !4596
}

; Function Attrs: nounwind uwtable
define noalias ptr @je_valloc(i64 noundef %size) #0 !dbg !1672 {
entry:
  %size.addr = alloca i64, align 8
  %ret = alloca ptr, align 8
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1674, metadata !DIExpression()), !dbg !4597
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !4598
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1675, metadata !DIExpression()), !dbg !4599
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !4600
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1676, metadata !DIExpression()), !dbg !4601
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !4602
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1677, metadata !DIExpression()), !dbg !4603
  br label %do.body, !dbg !4604

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !4605

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4605

do.end:                                           ; preds = %do.cond
  call void @static_opts_init(ptr noundef %sopts), !dbg !4607
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !4608
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 3, !dbg !4609
  store i8 1, ptr %null_out_result_on_error, align 1, !dbg !4610, !tbaa !3684
  %min_alignment = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 5, !dbg !4611
  store i64 4096, ptr %min_alignment, align 8, !dbg !4612, !tbaa !3752
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !4613
  store ptr @.str.7, ptr %oom_string, align 8, !dbg !4614, !tbaa !3691
  %invalid_alignment_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 7, !dbg !4615
  store ptr @.str.8, ptr %invalid_alignment_string, align 8, !dbg !4616, !tbaa !3759
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !4617
  store ptr %ret, ptr %result, align 8, !dbg !4618, !tbaa !3694
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !4619
  store i64 1, ptr %num_items, align 8, !dbg !4620, !tbaa !3698
  %0 = load i64, ptr %size.addr, align 8, !dbg !4621, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !4622
  store i64 %0, ptr %item_size, align 8, !dbg !4623, !tbaa !3702
  %alignment = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 4, !dbg !4624
  store i64 4096, ptr %alignment, align 8, !dbg !4625, !tbaa !3790
  %call = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !4626
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !4627
  %1 = load i8, ptr %slow, align 8, !dbg !4627, !tbaa !3705, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !4627
  br i1 %tobool, label %if.then, label %if.end, !dbg !4628

if.then:                                          ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !4629
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1678, metadata !DIExpression()), !dbg !4630
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4631
  %2 = load i64, ptr %size.addr, align 8, !dbg !4632, !tbaa !2663
  store i64 %2, ptr %arrayinit.begin, align 8, !dbg !4631, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4631
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !4631
  br label %arrayinit.body, !dbg !4631

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then ], [ %arrayinit.next, %arrayinit.body ], !dbg !4631
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !4631, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !4631
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !4631
  br i1 %arrayinit.done, label %arrayinit.end1, label %arrayinit.body, !dbg !4631

arrayinit.end1:                                   ; preds = %arrayinit.body
  %3 = load ptr, ptr %ret, align 8, !dbg !4633, !tbaa !2658
  %4 = load ptr, ptr %ret, align 8, !dbg !4634, !tbaa !2658
  %5 = ptrtoint ptr %4 to i64, !dbg !4635
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4636
  call void @hook_invoke_alloc(i32 noundef 5, ptr noundef %3, i64 noundef %5, ptr noundef %arraydecay), !dbg !4637
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !4638
  br label %if.end, !dbg !4639

if.end:                                           ; preds = %arrayinit.end1, %do.end
  br label %do.body2, !dbg !4640

do.body2:                                         ; preds = %if.end
  br label %do.cond3, !dbg !4641

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !4641

do.end4:                                          ; preds = %do.cond3
  %6 = load ptr, ptr %ret, align 8, !dbg !4643, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !4644
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !4644
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !4644
  ret ptr %6, !dbg !4645
}

; Function Attrs: nounwind allocsize(0) uwtable
define noalias ptr @je_mallocx(i64 noundef %size, i32 noundef %flags) #7 !dbg !1689 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1693, metadata !DIExpression()), !dbg !4646
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !1694, metadata !DIExpression()), !dbg !4647
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !4648
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1695, metadata !DIExpression()), !dbg !4649
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !4650
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1696, metadata !DIExpression()), !dbg !4651
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !4652
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1697, metadata !DIExpression()), !dbg !4653
  br label %do.body, !dbg !4654

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !4655

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4655

do.end:                                           ; preds = %do.cond
  call void @static_opts_init(ptr noundef %sopts), !dbg !4657
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !4658
  %assert_nonempty_alloc = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 2, !dbg !4659
  store i8 1, ptr %assert_nonempty_alloc, align 2, !dbg !4660, !tbaa !3742
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 3, !dbg !4661
  store i8 1, ptr %null_out_result_on_error, align 1, !dbg !4662, !tbaa !3684
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !4663
  store ptr @.str.28, ptr %oom_string, align 8, !dbg !4664, !tbaa !3691
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !4665
  store ptr %ret, ptr %result, align 8, !dbg !4666, !tbaa !3694
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !4667
  store i64 1, ptr %num_items, align 8, !dbg !4668, !tbaa !3698
  %0 = load i64, ptr %size.addr, align 8, !dbg !4669, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !4670
  store i64 %0, ptr %item_size, align 8, !dbg !4671, !tbaa !3702
  %1 = load i32, ptr %flags.addr, align 4, !dbg !4672, !tbaa !2791
  %cmp = icmp ne i32 %1, 0, !dbg !4672
  %lnot = xor i1 %cmp, true, !dbg !4672
  %lnot1 = xor i1 %lnot, true, !dbg !4672
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4672
  %conv = sext i32 %lnot.ext to i64, !dbg !4672
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4672
  %tobool = icmp ne i64 %expval, 0, !dbg !4672
  br i1 %tobool, label %if.then, label %if.end, !dbg !4674

if.then:                                          ; preds = %do.end
  %2 = load i32, ptr %flags.addr, align 4, !dbg !4675, !tbaa !2791
  %and = and i32 %2, 63, !dbg !4675
  %sh_prom = zext i32 %and to i64, !dbg !4675
  %shl = shl i64 1, %sh_prom, !dbg !4675
  %and2 = and i64 %shl, -2, !dbg !4675
  %alignment = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 4, !dbg !4677
  store i64 %and2, ptr %alignment, align 8, !dbg !4678, !tbaa !3790
  %3 = load i32, ptr %flags.addr, align 4, !dbg !4679, !tbaa !2791
  %and3 = and i32 %3, 64, !dbg !4679
  %tobool4 = icmp ne i32 %and3, 0, !dbg !4679
  %zero = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 5, !dbg !4680
  %frombool = zext i1 %tobool4 to i8, !dbg !4681
  store i8 %frombool, ptr %zero, align 8, !dbg !4681, !tbaa !3794
  %4 = load i32, ptr %flags.addr, align 4, !dbg !4682, !tbaa !2791
  %call = call i32 @mallocx_tcache_get(i32 noundef %4), !dbg !4683
  %tcache_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 6, !dbg !4684
  store i32 %call, ptr %tcache_ind, align 4, !dbg !4685, !tbaa !3798
  %5 = load i32, ptr %flags.addr, align 4, !dbg !4686, !tbaa !2791
  %call5 = call i32 @mallocx_arena_get(i32 noundef %5), !dbg !4687
  %arena_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 7, !dbg !4688
  store i32 %call5, ptr %arena_ind, align 8, !dbg !4689, !tbaa !3802
  br label %if.end, !dbg !4690

if.end:                                           ; preds = %if.then, %do.end
  %call6 = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !4691
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !4692
  %6 = load i8, ptr %slow, align 8, !dbg !4692, !tbaa !3705, !range !2708, !noundef !2709
  %tobool7 = trunc i8 %6 to i1, !dbg !4692
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !4693

if.then8:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !4694
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1698, metadata !DIExpression()), !dbg !4695
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4696
  %7 = load i64, ptr %size.addr, align 8, !dbg !4697, !tbaa !2663
  store i64 %7, ptr %arrayinit.begin, align 8, !dbg !4696, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4696
  %8 = load i32, ptr %flags.addr, align 4, !dbg !4698, !tbaa !2791
  %conv9 = sext i32 %8 to i64, !dbg !4698
  store i64 %conv9, ptr %arrayinit.element, align 8, !dbg !4696, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !4696
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !4696
  br label %arrayinit.body, !dbg !4696

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then8
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then8 ], [ %arrayinit.next, %arrayinit.body ], !dbg !4696
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !4696, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !4696
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !4696
  br i1 %arrayinit.done, label %arrayinit.end10, label %arrayinit.body, !dbg !4696

arrayinit.end10:                                  ; preds = %arrayinit.body
  %9 = load ptr, ptr %ret, align 8, !dbg !4699, !tbaa !2658
  %10 = load ptr, ptr %ret, align 8, !dbg !4700, !tbaa !2658
  %11 = ptrtoint ptr %10 to i64, !dbg !4701
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !4702
  call void @hook_invoke_alloc(i32 noundef 6, ptr noundef %9, i64 noundef %11, ptr noundef %arraydecay), !dbg !4703
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !4704
  br label %if.end11, !dbg !4705

if.end11:                                         ; preds = %arrayinit.end10, %if.end
  br label %do.body12, !dbg !4706

do.body12:                                        ; preds = %if.end11
  br label %do.cond13, !dbg !4707

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !4707

do.end14:                                         ; preds = %do.cond13
  %12 = load ptr, ptr %ret, align 8, !dbg !4709, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !4710
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !4710
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !4710
  ret ptr %12, !dbg !4711
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @mallocx_tcache_get(i32 noundef %flags) #3 !dbg !4712 {
entry:
  %retval = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  %0 = load i32, ptr %flags.addr, align 4, !dbg !4718, !tbaa !2791
  %and = and i32 %0, 1048320, !dbg !4718
  %cmp = icmp eq i32 %and, 0, !dbg !4718
  %lnot = xor i1 %cmp, true, !dbg !4718
  %lnot1 = xor i1 %lnot, true, !dbg !4718
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4718
  %conv = sext i32 %lnot.ext to i64, !dbg !4718
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4718
  %tobool = icmp ne i64 %expval, 0, !dbg !4718
  br i1 %tobool, label %if.then, label %if.else, !dbg !4720

if.then:                                          ; preds = %entry
  store i32 -2, ptr %retval, align 4, !dbg !4721
  br label %return, !dbg !4721

if.else:                                          ; preds = %entry
  %1 = load i32, ptr %flags.addr, align 4, !dbg !4723, !tbaa !2791
  %and2 = and i32 %1, 1048320, !dbg !4725
  %cmp3 = icmp eq i32 %and2, 256, !dbg !4726
  br i1 %cmp3, label %if.then5, label %if.else6, !dbg !4727

if.then5:                                         ; preds = %if.else
  store i32 -1, ptr %retval, align 4, !dbg !4728
  br label %return, !dbg !4728

if.else6:                                         ; preds = %if.else
  %2 = load i32, ptr %flags.addr, align 4, !dbg !4730, !tbaa !2791
  %and7 = and i32 %2, 1048320, !dbg !4730
  %shr = ashr i32 %and7, 8, !dbg !4730
  %sub = sub i32 %shr, 2, !dbg !4730
  store i32 %sub, ptr %retval, align 4, !dbg !4732
  br label %return, !dbg !4732

return:                                           ; preds = %if.else6, %if.then5, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !4733
  ret i32 %3, !dbg !4733
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @mallocx_arena_get(i32 noundef %flags) #3 !dbg !4734 {
entry:
  %retval = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  %0 = load i32, ptr %flags.addr, align 4, !dbg !4738, !tbaa !2791
  %and = and i32 %0, -1048576, !dbg !4738
  %cmp = icmp ne i32 %and, 0, !dbg !4738
  %lnot = xor i1 %cmp, true, !dbg !4738
  %lnot1 = xor i1 %lnot, true, !dbg !4738
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4738
  %conv = sext i32 %lnot.ext to i64, !dbg !4738
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4738
  %tobool = icmp ne i64 %expval, 0, !dbg !4738
  br i1 %tobool, label %if.then, label %if.else, !dbg !4740

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %flags.addr, align 4, !dbg !4741, !tbaa !2791
  %shr = lshr i32 %1, 20, !dbg !4741
  %sub = sub i32 %shr, 1, !dbg !4741
  store i32 %sub, ptr %retval, align 4, !dbg !4743
  br label %return, !dbg !4743

if.else:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !4744
  br label %return, !dbg !4744

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, ptr %retval, align 4, !dbg !4746
  ret i32 %2, !dbg !4746
}

; Function Attrs: nounwind allocsize(1) uwtable
define ptr @je_rallocx(ptr noundef %ptr, i64 noundef %size, i32 noundef %flags) #8 !dbg !1714 {
entry:
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1718, metadata !DIExpression()), !dbg !4747
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1719, metadata !DIExpression()), !dbg !4748
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !1720, metadata !DIExpression()), !dbg !4749
  br label %do.body, !dbg !4750

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4751

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !4753
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1721, metadata !DIExpression()), !dbg !4754
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !4755, !tbaa !2658
  %1 = load i64, ptr %size.addr, align 8, !dbg !4756, !tbaa !2663
  %2 = load i32, ptr %flags.addr, align 4, !dbg !4757, !tbaa !2791
  %call = call ptr @do_rallocx(ptr noundef %0, i64 noundef %1, i32 noundef %2, i1 noundef zeroext false), !dbg !4758
  store ptr %call, ptr %ret, align 8, !dbg !4754, !tbaa !2658
  br label %do.body1, !dbg !4759

do.body1:                                         ; preds = %do.end
  br label %do.cond, !dbg !4760

do.cond:                                          ; preds = %do.body1
  br label %do.end2, !dbg !4760

do.end2:                                          ; preds = %do.cond
  %3 = load ptr, ptr %ret, align 8, !dbg !4762, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !4763
  ret ptr %3, !dbg !4764
}

; Function Attrs: nounwind uwtable
define internal ptr @do_rallocx(ptr noundef %ptr, i64 noundef %size, i32 noundef %flags, i1 noundef zeroext %is_realloc) #0 !dbg !4765 {
entry:
  %retval = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %is_realloc.addr = alloca i8, align 1
  %p = alloca ptr, align 8
  %tsd = alloca ptr, align 8
  %usize = alloca i64, align 8
  %old_usize = alloca i64, align 8
  %alignment = alloca i64, align 8
  %arena = alloca ptr, align 8
  %zero = alloca i8, align 1
  %arena_ind = alloca i32, align 4
  %tcache_ind = alloca i32, align 4
  %tcache = alloca ptr, align 8
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  %hook_args = alloca %struct.hook_ralloc_args_s, align 8
  %excess_len = alloca i64, align 8
  %excess_start = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !4769, metadata !DIExpression()), !dbg !4795
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !4770, metadata !DIExpression()), !dbg !4796
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !4771, metadata !DIExpression()), !dbg !4797
  %frombool = zext i1 %is_realloc to i8
  store i8 %frombool, ptr %is_realloc.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_realloc.addr, metadata !4772, metadata !DIExpression()), !dbg !4798
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #18, !dbg !4799
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !4773, metadata !DIExpression()), !dbg !4800
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !4801
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !4774, metadata !DIExpression()), !dbg !4802
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !4803
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !4775, metadata !DIExpression()), !dbg !4804
  call void @llvm.lifetime.start.p0(i64 8, ptr %old_usize) #18, !dbg !4805
  tail call void @llvm.dbg.declare(metadata ptr %old_usize, metadata !4776, metadata !DIExpression()), !dbg !4806
  call void @llvm.lifetime.start.p0(i64 8, ptr %alignment) #18, !dbg !4807
  tail call void @llvm.dbg.declare(metadata ptr %alignment, metadata !4777, metadata !DIExpression()), !dbg !4808
  %0 = load i32, ptr %flags.addr, align 4, !dbg !4809, !tbaa !2791
  %and = and i32 %0, 63, !dbg !4809
  %sh_prom = zext i32 %and to i64, !dbg !4809
  %shl = shl i64 1, %sh_prom, !dbg !4809
  %and1 = and i64 %shl, -2, !dbg !4809
  store i64 %and1, ptr %alignment, align 8, !dbg !4808, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !4810
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !4778, metadata !DIExpression()), !dbg !4811
  br label %do.body, !dbg !4812

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !4813

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4813

do.end:                                           ; preds = %do.cond
  br label %do.body2, !dbg !4815

do.body2:                                         ; preds = %do.end
  br label %do.cond3, !dbg !4816

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !4816

do.end4:                                          ; preds = %do.cond3
  br label %do.body5, !dbg !4818

do.body5:                                         ; preds = %do.end4
  br label %do.cond6, !dbg !4819

do.cond6:                                         ; preds = %do.body5
  br label %do.end7, !dbg !4819

do.end7:                                          ; preds = %do.cond6
  %call = call ptr @tsd_fetch(), !dbg !4821
  store ptr %call, ptr %tsd, align 8, !dbg !4822, !tbaa !2658
  %1 = load ptr, ptr %tsd, align 8, !dbg !4823, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %1), !dbg !4824
  call void @check_entry_exit_locking(ptr noundef %call8), !dbg !4825
  call void @llvm.lifetime.start.p0(i64 1, ptr %zero) #18, !dbg !4826
  tail call void @llvm.dbg.declare(metadata ptr %zero, metadata !4779, metadata !DIExpression()), !dbg !4827
  %2 = load i32, ptr %flags.addr, align 4, !dbg !4828, !tbaa !2791
  %and9 = and i32 %2, 64, !dbg !4828
  %tobool = icmp ne i32 %and9, 0, !dbg !4828
  %call10 = call zeroext i1 @zero_get(i1 noundef zeroext %tobool, i1 noundef zeroext true), !dbg !4829
  %frombool11 = zext i1 %call10 to i8, !dbg !4827
  store i8 %frombool11, ptr %zero, align 1, !dbg !4827, !tbaa !2695
  call void @llvm.lifetime.start.p0(i64 4, ptr %arena_ind) #18, !dbg !4830
  tail call void @llvm.dbg.declare(metadata ptr %arena_ind, metadata !4780, metadata !DIExpression()), !dbg !4831
  %3 = load i32, ptr %flags.addr, align 4, !dbg !4832, !tbaa !2791
  %call12 = call i32 @mallocx_arena_get(i32 noundef %3), !dbg !4833
  store i32 %call12, ptr %arena_ind, align 4, !dbg !4831, !tbaa !2791
  %4 = load ptr, ptr %tsd, align 8, !dbg !4834, !tbaa !2658
  %5 = load i32, ptr %arena_ind, align 4, !dbg !4836, !tbaa !2791
  %call13 = call zeroext i1 @arena_get_from_ind(ptr noundef %4, i32 noundef %5, ptr noundef %arena), !dbg !4837
  br i1 %call13, label %if.then, label %if.end, !dbg !4838

if.then:                                          ; preds = %do.end7
  br label %label_oom, !dbg !4839

if.end:                                           ; preds = %do.end7
  tail call void @llvm.dbg.declare(metadata ptr %tcache_ind, metadata !4781, metadata !DIExpression()), !dbg !4841
  %6 = load i32, ptr %flags.addr, align 4, !dbg !4842, !tbaa !2791
  %call14 = call i32 @mallocx_tcache_get(i32 noundef %6), !dbg !4843
  store i32 %call14, ptr %tcache_ind, align 4, !dbg !4841, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !4782, metadata !DIExpression()), !dbg !4844
  %7 = load ptr, ptr %tsd, align 8, !dbg !4845, !tbaa !2658
  %8 = load i32, ptr %tcache_ind, align 4, !dbg !4846, !tbaa !2791
  %call15 = call ptr @tcache_get_from_ind(ptr noundef %7, i32 noundef %8, i1 noundef zeroext true, i1 noundef zeroext true), !dbg !4847
  store ptr %call15, ptr %tcache, align 8, !dbg !4844, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !4783, metadata !DIExpression()), !dbg !4848
  %9 = load ptr, ptr %tsd, align 8, !dbg !4849, !tbaa !2658
  %call16 = call ptr @tsd_tsdn(ptr noundef %9), !dbg !4850
  %10 = load ptr, ptr %ptr.addr, align 8, !dbg !4851, !tbaa !2658
  call void @emap_alloc_ctx_lookup(ptr noundef %call16, ptr noundef @arena_emap_global, ptr noundef %10, ptr noundef %alloc_ctx), !dbg !4852
  br label %do.body17, !dbg !4853

do.body17:                                        ; preds = %if.end
  br label %do.cond18, !dbg !4854

do.cond18:                                        ; preds = %do.body17
  br label %do.end19, !dbg !4854

do.end19:                                         ; preds = %do.cond18
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !4856
  %11 = load i32, ptr %szind, align 4, !dbg !4856, !tbaa !4364
  %call20 = call i64 @sz_index2size(i32 noundef %11), !dbg !4857
  store i64 %call20, ptr %old_usize, align 8, !dbg !4858, !tbaa !2663
  br label %do.body21, !dbg !4859

do.body21:                                        ; preds = %do.end19
  br label %do.cond22, !dbg !4860

do.cond22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !4860

do.end23:                                         ; preds = %do.cond22
  %12 = load i64, ptr %size.addr, align 8, !dbg !4862, !tbaa !2663
  %13 = load i64, ptr %alignment, align 8, !dbg !4864, !tbaa !2663
  %call24 = call zeroext i1 @aligned_usize_get(i64 noundef %12, i64 noundef %13, ptr noundef %usize, ptr noundef null, i1 noundef zeroext false), !dbg !4865
  br i1 %call24, label %if.then25, label %if.end26, !dbg !4866

if.then25:                                        ; preds = %do.end23
  br label %label_oom, !dbg !4867

if.end26:                                         ; preds = %do.end23
  tail call void @llvm.dbg.declare(metadata ptr %hook_args, metadata !4784, metadata !DIExpression()), !dbg !4869
  %is_realloc27 = getelementptr inbounds %struct.hook_ralloc_args_s, ptr %hook_args, i32 0, i32 0, !dbg !4870
  %14 = load i8, ptr %is_realloc.addr, align 1, !dbg !4871, !tbaa !2695, !range !2708, !noundef !2709
  %tobool28 = trunc i8 %14 to i1, !dbg !4871
  %frombool29 = zext i1 %tobool28 to i8, !dbg !4870
  store i8 %frombool29, ptr %is_realloc27, align 8, !dbg !4870, !tbaa !4872
  %args = getelementptr inbounds %struct.hook_ralloc_args_s, ptr %hook_args, i32 0, i32 1, !dbg !4870
  %arrayinit.begin = getelementptr inbounds [4 x i64], ptr %args, i64 0, i64 0, !dbg !4874
  %15 = load ptr, ptr %ptr.addr, align 8, !dbg !4875, !tbaa !2658
  %16 = ptrtoint ptr %15 to i64, !dbg !4876
  store i64 %16, ptr %arrayinit.begin, align 8, !dbg !4874, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !4874
  %17 = load i64, ptr %size.addr, align 8, !dbg !4877, !tbaa !2663
  store i64 %17, ptr %arrayinit.element, align 8, !dbg !4874, !tbaa !2663
  %arrayinit.element30 = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !4874
  %18 = load i32, ptr %flags.addr, align 4, !dbg !4878, !tbaa !2791
  %conv = sext i32 %18 to i64, !dbg !4878
  store i64 %conv, ptr %arrayinit.element30, align 8, !dbg !4874, !tbaa !2663
  %arrayinit.element31 = getelementptr inbounds i64, ptr %arrayinit.element30, i64 1, !dbg !4874
  store i64 0, ptr %arrayinit.element31, align 8, !dbg !4874, !tbaa !2663
  %19 = load ptr, ptr %tsd, align 8, !dbg !4879, !tbaa !2658
  %call32 = call ptr @tsd_tsdn(ptr noundef %19), !dbg !4882
  %20 = load ptr, ptr %ptr.addr, align 8, !dbg !4883, !tbaa !2658
  %21 = load i64, ptr %old_usize, align 8, !dbg !4884, !tbaa !2663
  %22 = load i64, ptr %size.addr, align 8, !dbg !4885, !tbaa !2663
  %23 = load i64, ptr %alignment, align 8, !dbg !4886, !tbaa !2663
  %24 = load i8, ptr %zero, align 1, !dbg !4887, !tbaa !2695, !range !2708, !noundef !2709
  %tobool33 = trunc i8 %24 to i1, !dbg !4887
  %25 = load ptr, ptr %tcache, align 8, !dbg !4888, !tbaa !2658
  %26 = load ptr, ptr %arena, align 8, !dbg !4889, !tbaa !2658
  %call34 = call ptr @iralloct(ptr noundef %call32, ptr noundef %20, i64 noundef %21, i64 noundef %22, i64 noundef %23, i1 noundef zeroext %tobool33, ptr noundef %25, ptr noundef %26, ptr noundef %hook_args), !dbg !4890
  store ptr %call34, ptr %p, align 8, !dbg !4891, !tbaa !2658
  %27 = load ptr, ptr %p, align 8, !dbg !4892, !tbaa !2658
  %cmp = icmp eq ptr %27, null, !dbg !4892
  %lnot = xor i1 %cmp, true, !dbg !4892
  %lnot36 = xor i1 %lnot, true, !dbg !4892
  %lnot.ext = zext i1 %lnot36 to i32, !dbg !4892
  %conv37 = sext i32 %lnot.ext to i64, !dbg !4892
  %expval = call i64 @llvm.expect.i64(i64 %conv37, i64 0), !dbg !4892
  %tobool38 = icmp ne i64 %expval, 0, !dbg !4892
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !4894

if.then39:                                        ; preds = %if.end26
  br label %label_oom, !dbg !4895

if.end40:                                         ; preds = %if.end26
  br label %do.body41, !dbg !4897

do.body41:                                        ; preds = %if.end40
  br label %do.cond42, !dbg !4898

do.cond42:                                        ; preds = %do.body41
  br label %do.end43, !dbg !4898

do.end43:                                         ; preds = %do.cond42
  br label %do.body44, !dbg !4900

do.body44:                                        ; preds = %do.end43
  br label %do.cond45, !dbg !4901

do.cond45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !4901

do.end46:                                         ; preds = %do.cond45
  %28 = load ptr, ptr %tsd, align 8, !dbg !4903, !tbaa !2658
  %29 = load i64, ptr %usize, align 8, !dbg !4904, !tbaa !2663
  call void @thread_alloc_event(ptr noundef %28, i64 noundef %29), !dbg !4905
  %30 = load ptr, ptr %tsd, align 8, !dbg !4906, !tbaa !2658
  %31 = load i64, ptr %old_usize, align 8, !dbg !4907, !tbaa !2663
  call void @thread_dalloc_event(ptr noundef %30, i64 noundef %31), !dbg !4908
  %32 = load ptr, ptr %tsd, align 8, !dbg !4909, !tbaa !2658
  %call47 = call ptr @tsd_tsdn(ptr noundef %32), !dbg !4910
  call void @check_entry_exit_locking(ptr noundef %call47), !dbg !4911
  %33 = load i8, ptr @opt_junk_alloc, align 1, !dbg !4912, !tbaa !2695, !range !2708, !noundef !2709
  %tobool48 = trunc i8 %33 to i1, !dbg !4912
  %lnot49 = xor i1 %tobool48, true, !dbg !4912
  %lnot51 = xor i1 %lnot49, true, !dbg !4912
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !4912
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !4912
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 0), !dbg !4912
  %tobool55 = icmp ne i64 %expval54, 0, !dbg !4912
  br i1 %tobool55, label %land.lhs.true, label %if.end61, !dbg !4913

land.lhs.true:                                    ; preds = %do.end46
  %34 = load i64, ptr %usize, align 8, !dbg !4914, !tbaa !2663
  %35 = load i64, ptr %old_usize, align 8, !dbg !4915, !tbaa !2663
  %cmp56 = icmp ugt i64 %34, %35, !dbg !4916
  br i1 %cmp56, label %land.lhs.true58, label %if.end61, !dbg !4917

land.lhs.true58:                                  ; preds = %land.lhs.true
  %36 = load i8, ptr %zero, align 1, !dbg !4918, !tbaa !2695, !range !2708, !noundef !2709
  %tobool59 = trunc i8 %36 to i1, !dbg !4918
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !4919

if.then60:                                        ; preds = %land.lhs.true58
  call void @llvm.lifetime.start.p0(i64 8, ptr %excess_len) #18, !dbg !4920
  tail call void @llvm.dbg.declare(metadata ptr %excess_len, metadata !4790, metadata !DIExpression()), !dbg !4921
  %37 = load i64, ptr %usize, align 8, !dbg !4922, !tbaa !2663
  %38 = load i64, ptr %old_usize, align 8, !dbg !4923, !tbaa !2663
  %sub = sub i64 %37, %38, !dbg !4924
  store i64 %sub, ptr %excess_len, align 8, !dbg !4921, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %excess_start) #18, !dbg !4925
  tail call void @llvm.dbg.declare(metadata ptr %excess_start, metadata !4793, metadata !DIExpression()), !dbg !4926
  %39 = load ptr, ptr %p, align 8, !dbg !4927, !tbaa !2658
  %40 = ptrtoint ptr %39 to i64, !dbg !4928
  %41 = load i64, ptr %old_usize, align 8, !dbg !4929, !tbaa !2663
  %add = add i64 %40, %41, !dbg !4930
  %42 = inttoptr i64 %add to ptr, !dbg !4931
  store ptr %42, ptr %excess_start, align 8, !dbg !4926, !tbaa !2658
  %43 = load ptr, ptr @junk_alloc_callback, align 8, !dbg !4932, !tbaa !2658
  %44 = load ptr, ptr %excess_start, align 8, !dbg !4933, !tbaa !2658
  %45 = load i64, ptr %excess_len, align 8, !dbg !4934, !tbaa !2663
  call void %43(ptr noundef %44, i64 noundef %45), !dbg !4932
  call void @llvm.lifetime.end.p0(i64 8, ptr %excess_start) #18, !dbg !4935
  call void @llvm.lifetime.end.p0(i64 8, ptr %excess_len) #18, !dbg !4935
  br label %if.end61, !dbg !4936

if.end61:                                         ; preds = %if.then60, %land.lhs.true58, %land.lhs.true, %do.end46
  %46 = load ptr, ptr %p, align 8, !dbg !4937, !tbaa !2658
  store ptr %46, ptr %retval, align 8, !dbg !4938
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4938

label_oom:                                        ; preds = %if.then39, %if.then25, %if.then
  tail call void @llvm.dbg.label(metadata !4794), !dbg !4939
  %47 = load ptr, ptr %tsd, align 8, !dbg !4940, !tbaa !2658
  %call62 = call ptr @tsd_tsdn(ptr noundef %47), !dbg !4941
  call void @check_entry_exit_locking(ptr noundef %call62), !dbg !4942
  store ptr null, ptr %retval, align 8, !dbg !4943
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4943

cleanup:                                          ; preds = %label_oom, %if.end61
  call void @llvm.lifetime.end.p0(i64 4, ptr %arena_ind) #18, !dbg !4944
  call void @llvm.lifetime.end.p0(i64 1, ptr %zero) #18, !dbg !4944
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !4944
  call void @llvm.lifetime.end.p0(i64 8, ptr %alignment) #18, !dbg !4944
  call void @llvm.lifetime.end.p0(i64 8, ptr %old_usize) #18, !dbg !4944
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !4944
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !4944
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #18, !dbg !4944
  %48 = load ptr, ptr %retval, align 8, !dbg !4944
  ret ptr %48, !dbg !4944
}

; Function Attrs: nounwind allocsize(1) uwtable
define ptr @je_realloc(ptr noundef %ptr, i64 noundef %size) #8 !dbg !1730 {
entry:
  %retval = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %ret = alloca ptr, align 8
  %ret10 = alloca ptr, align 8
  %ret16 = alloca ptr, align 8
  %sopts = alloca %struct.static_opts_s, align 8
  %dopts = alloca %struct.dynamic_opts_s, align 8
  %args = alloca [3 x i64], align 16
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1734, metadata !DIExpression()), !dbg !4945
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1735, metadata !DIExpression()), !dbg !4946
  br label %do.body, !dbg !4947

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4948

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !4950, !tbaa !2658
  %cmp = icmp ne ptr %0, null, !dbg !4950
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4950

land.rhs:                                         ; preds = %do.end
  %1 = load i64, ptr %size.addr, align 8, !dbg !4950, !tbaa !2663
  %cmp1 = icmp ne i64 %1, 0, !dbg !4950
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end
  %2 = phi i1 [ false, %do.end ], [ %cmp1, %land.rhs ], !dbg !4951
  %lnot = xor i1 %2, true, !dbg !4950
  %lnot2 = xor i1 %lnot, true, !dbg !4950
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4950
  %conv = sext i32 %lnot.ext to i64, !dbg !4950
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4950
  %tobool = icmp ne i64 %expval, 0, !dbg !4950
  br i1 %tobool, label %if.then, label %if.else, !dbg !4952

if.then:                                          ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !4953
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1736, metadata !DIExpression()), !dbg !4954
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !4955, !tbaa !2658
  %4 = load i64, ptr %size.addr, align 8, !dbg !4956, !tbaa !2663
  %call = call ptr @do_rallocx(ptr noundef %3, i64 noundef %4, i32 noundef 0, i1 noundef zeroext true), !dbg !4957
  store ptr %call, ptr %ret, align 8, !dbg !4954, !tbaa !2658
  br label %do.body3, !dbg !4958

do.body3:                                         ; preds = %if.then
  br label %do.cond, !dbg !4959

do.cond:                                          ; preds = %do.body3
  br label %do.end4, !dbg !4959

do.end4:                                          ; preds = %do.cond
  %5 = load ptr, ptr %ret, align 8, !dbg !4961, !tbaa !2658
  store ptr %5, ptr %retval, align 8, !dbg !4962
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !4963
  br label %return

if.else:                                          ; preds = %land.end
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !4964, !tbaa !2658
  %cmp5 = icmp ne ptr %6, null, !dbg !4965
  br i1 %cmp5, label %land.lhs.true, label %if.else15, !dbg !4966

land.lhs.true:                                    ; preds = %if.else
  %7 = load i64, ptr %size.addr, align 8, !dbg !4967, !tbaa !2663
  %cmp7 = icmp eq i64 %7, 0, !dbg !4968
  br i1 %cmp7, label %if.then9, label %if.else15, !dbg !4969

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret10) #18, !dbg !4970
  tail call void @llvm.dbg.declare(metadata ptr %ret10, metadata !1739, metadata !DIExpression()), !dbg !4971
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !4972, !tbaa !2658
  %call11 = call ptr @do_realloc_nonnull_zero(ptr noundef %8), !dbg !4973
  store ptr %call11, ptr %ret10, align 8, !dbg !4971, !tbaa !2658
  br label %do.body12, !dbg !4974

do.body12:                                        ; preds = %if.then9
  br label %do.cond13, !dbg !4975

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !4975

do.end14:                                         ; preds = %do.cond13
  %9 = load ptr, ptr %ret10, align 8, !dbg !4977, !tbaa !2658
  store ptr %9, ptr %retval, align 8, !dbg !4978
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret10) #18, !dbg !4979
  br label %return

if.else15:                                        ; preds = %land.lhs.true, %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret16) #18, !dbg !4980
  tail call void @llvm.dbg.declare(metadata ptr %ret16, metadata !1742, metadata !DIExpression()), !dbg !4981
  call void @llvm.lifetime.start.p0(i64 40, ptr %sopts) #18, !dbg !4982
  tail call void @llvm.dbg.declare(metadata ptr %sopts, metadata !1744, metadata !DIExpression()), !dbg !4983
  call void @llvm.lifetime.start.p0(i64 56, ptr %dopts) #18, !dbg !4984
  tail call void @llvm.dbg.declare(metadata ptr %dopts, metadata !1745, metadata !DIExpression()), !dbg !4985
  call void @static_opts_init(ptr noundef %sopts), !dbg !4986
  call void @dynamic_opts_init(ptr noundef %dopts), !dbg !4987
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 3, !dbg !4988
  store i8 1, ptr %null_out_result_on_error, align 1, !dbg !4989, !tbaa !3684
  %set_errno_on_error = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 4, !dbg !4990
  store i8 1, ptr %set_errno_on_error, align 4, !dbg !4991, !tbaa !3688
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 6, !dbg !4992
  store ptr @.str.38, ptr %oom_string, align 8, !dbg !4993, !tbaa !3691
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 0, !dbg !4994
  store ptr %ret16, ptr %result, align 8, !dbg !4995, !tbaa !3694
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 2, !dbg !4996
  store i64 1, ptr %num_items, align 8, !dbg !4997, !tbaa !3698
  %10 = load i64, ptr %size.addr, align 8, !dbg !4998, !tbaa !2663
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %dopts, i32 0, i32 3, !dbg !4999
  store i64 %10, ptr %item_size, align 8, !dbg !5000, !tbaa !3702
  %call17 = call i32 @imalloc(ptr noundef %sopts, ptr noundef %dopts), !dbg !5001
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %sopts, i32 0, i32 8, !dbg !5002
  %11 = load i8, ptr %slow, align 8, !dbg !5002, !tbaa !3705, !range !2708, !noundef !2709
  %tobool18 = trunc i8 %11 to i1, !dbg !5002
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !5003

if.then19:                                        ; preds = %if.else15
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !5004
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1746, metadata !DIExpression()), !dbg !5005
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !5006
  %12 = load ptr, ptr %ptr.addr, align 8, !dbg !5007, !tbaa !2658
  %13 = ptrtoint ptr %12 to i64, !dbg !5008
  store i64 %13, ptr %arrayinit.begin, align 8, !dbg !5006, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !5006
  %14 = load i64, ptr %size.addr, align 8, !dbg !5009, !tbaa !2663
  store i64 %14, ptr %arrayinit.element, align 8, !dbg !5006, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !5006
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !5006
  br label %arrayinit.body, !dbg !5006

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then19
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then19 ], [ %arrayinit.next, %arrayinit.body ], !dbg !5006
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !5006, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !5006
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !5006
  br i1 %arrayinit.done, label %arrayinit.end20, label %arrayinit.body, !dbg !5006

arrayinit.end20:                                  ; preds = %arrayinit.body
  %15 = load ptr, ptr %ret16, align 8, !dbg !5010, !tbaa !2658
  %16 = load ptr, ptr %ret16, align 8, !dbg !5011, !tbaa !2658
  %17 = ptrtoint ptr %16 to i64, !dbg !5012
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !5013
  call void @hook_invoke_alloc(i32 noundef 7, ptr noundef %15, i64 noundef %17, ptr noundef %arraydecay), !dbg !5014
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !5015
  br label %if.end, !dbg !5016

if.end:                                           ; preds = %arrayinit.end20, %if.else15
  br label %do.body21, !dbg !5017

do.body21:                                        ; preds = %if.end
  br label %do.cond22, !dbg !5018

do.cond22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !5018

do.end23:                                         ; preds = %do.cond22
  %18 = load ptr, ptr %ret16, align 8, !dbg !5020, !tbaa !2658
  store ptr %18, ptr %retval, align 8, !dbg !5021
  call void @llvm.lifetime.end.p0(i64 56, ptr %dopts) #18, !dbg !5022
  call void @llvm.lifetime.end.p0(i64 40, ptr %sopts) #18, !dbg !5022
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret16) #18, !dbg !5022
  br label %return

return:                                           ; preds = %do.end23, %do.end14, %do.end4
  %19 = load ptr, ptr %retval, align 8, !dbg !5023
  ret ptr %19, !dbg !5023
}

; Function Attrs: nounwind uwtable
define internal ptr @do_realloc_nonnull_zero(ptr noundef %ptr) #0 !dbg !5024 {
entry:
  %retval = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %tsd = alloca ptr, align 8
  %tcache = alloca ptr, align 8
  %args = alloca [3 x i64], align 16
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5028, metadata !DIExpression()), !dbg !5035
  %call = call i64 @atomic_fetch_add_zu(ptr noundef @zero_realloc_count, i64 noundef 1, i32 noundef 0), !dbg !5036
  %0 = load i32, ptr @opt_zero_realloc_action, align 4, !dbg !5039, !tbaa !2810
  %cmp = icmp eq i32 %0, 0, !dbg !5040
  br i1 %cmp, label %if.then, label %if.else, !dbg !5041

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !5042, !tbaa !2658
  %call1 = call ptr @do_rallocx(ptr noundef %1, i64 noundef 1, i32 noundef 256, i1 noundef zeroext true), !dbg !5044
  store ptr %call1, ptr %retval, align 8, !dbg !5045
  br label %return, !dbg !5045

if.else:                                          ; preds = %entry
  %2 = load i32, ptr @opt_zero_realloc_action, align 4, !dbg !5046, !tbaa !2810
  %cmp2 = icmp eq i32 %2, 1, !dbg !5047
  br i1 %cmp2, label %if.then3, label %if.else9, !dbg !5048

if.then3:                                         ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !5049
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !5029, metadata !DIExpression()), !dbg !5050
  %call4 = call ptr @tsd_fetch(), !dbg !5051
  store ptr %call4, ptr %tsd, align 8, !dbg !5050, !tbaa !2658
  %3 = load ptr, ptr %tsd, align 8, !dbg !5052, !tbaa !2658
  %call5 = call ptr @tsd_tsdn(ptr noundef %3), !dbg !5053
  call void @check_entry_exit_locking(ptr noundef %call5), !dbg !5054
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !5055
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !5033, metadata !DIExpression()), !dbg !5056
  %4 = load ptr, ptr %tsd, align 8, !dbg !5057, !tbaa !2658
  %call6 = call ptr @tcache_get_from_ind(ptr noundef %4, i32 noundef -2, i1 noundef zeroext true, i1 noundef zeroext false), !dbg !5058
  store ptr %call6, ptr %tcache, align 8, !dbg !5056, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 24, ptr %args) #18, !dbg !5059
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !5034, metadata !DIExpression()), !dbg !5060
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !5061
  %5 = load ptr, ptr %ptr.addr, align 8, !dbg !5062, !tbaa !2658
  %6 = ptrtoint ptr %5 to i64, !dbg !5063
  store i64 %6, ptr %arrayinit.begin, align 8, !dbg !5061, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !5061
  store i64 0, ptr %arrayinit.element, align 8, !dbg !5061, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !5061
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !5061
  br label %arrayinit.body, !dbg !5061

arrayinit.body:                                   ; preds = %arrayinit.body, %if.then3
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.then3 ], [ %arrayinit.next, %arrayinit.body ], !dbg !5061
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !5061, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !5061
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !5061
  br i1 %arrayinit.done, label %arrayinit.end7, label %arrayinit.body, !dbg !5061

arrayinit.end7:                                   ; preds = %arrayinit.body
  %7 = load ptr, ptr %ptr.addr, align 8, !dbg !5064, !tbaa !2658
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args, i64 0, i64 0, !dbg !5065
  call void @hook_invoke_dalloc(i32 noundef 3, ptr noundef %7, ptr noundef %arraydecay), !dbg !5066
  %8 = load ptr, ptr %tsd, align 8, !dbg !5067, !tbaa !2658
  %9 = load ptr, ptr %ptr.addr, align 8, !dbg !5068, !tbaa !2658
  %10 = load ptr, ptr %tcache, align 8, !dbg !5069, !tbaa !2658
  call void @ifree(ptr noundef %8, ptr noundef %9, ptr noundef %10, i1 noundef zeroext true), !dbg !5070
  %11 = load ptr, ptr %tsd, align 8, !dbg !5071, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %11), !dbg !5072
  call void @check_entry_exit_locking(ptr noundef %call8), !dbg !5073
  store ptr null, ptr %retval, align 8, !dbg !5074
  call void @llvm.lifetime.end.p0(i64 24, ptr %args) #18, !dbg !5075
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !5075
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !5075
  br label %return

if.else9:                                         ; preds = %if.else
  call void (ptr, ...) @safety_check_fail(ptr noundef @.str.163), !dbg !5076
  store ptr null, ptr %retval, align 8, !dbg !5078
  br label %return, !dbg !5078

return:                                           ; preds = %if.else9, %arrayinit.end7, %if.then
  %12 = load ptr, ptr %retval, align 8, !dbg !5079
  ret ptr %12, !dbg !5079
}

; Function Attrs: nounwind uwtable
define i64 @je_xallocx(ptr noundef %ptr, i64 noundef %size, i64 noundef %extra, i32 noundef %flags) #0 !dbg !1763 {
entry:
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %extra.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %tsd = alloca ptr, align 8
  %usize = alloca i64, align 8
  %old_usize = alloca i64, align 8
  %alignment = alloca i64, align 8
  %zero = alloca i8, align 1
  %old_edata = alloca ptr, align 8
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  %excess_len = alloca i64, align 8
  %excess_start = alloca ptr, align 8
  %args = alloca [4 x i64], align 16
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1767, metadata !DIExpression()), !dbg !5080
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1768, metadata !DIExpression()), !dbg !5081
  store i64 %extra, ptr %extra.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !1769, metadata !DIExpression()), !dbg !5082
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !1770, metadata !DIExpression()), !dbg !5083
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !5084
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !1771, metadata !DIExpression()), !dbg !5085
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !5086
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !1772, metadata !DIExpression()), !dbg !5087
  call void @llvm.lifetime.start.p0(i64 8, ptr %old_usize) #18, !dbg !5086
  tail call void @llvm.dbg.declare(metadata ptr %old_usize, metadata !1773, metadata !DIExpression()), !dbg !5088
  call void @llvm.lifetime.start.p0(i64 8, ptr %alignment) #18, !dbg !5089
  tail call void @llvm.dbg.declare(metadata ptr %alignment, metadata !1774, metadata !DIExpression()), !dbg !5090
  %0 = load i32, ptr %flags.addr, align 4, !dbg !5091, !tbaa !2791
  %and = and i32 %0, 63, !dbg !5091
  %sh_prom = zext i32 %and to i64, !dbg !5091
  %shl = shl i64 1, %sh_prom, !dbg !5091
  %and1 = and i64 %shl, -2, !dbg !5091
  store i64 %and1, ptr %alignment, align 8, !dbg !5090, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 1, ptr %zero) #18, !dbg !5092
  tail call void @llvm.dbg.declare(metadata ptr %zero, metadata !1775, metadata !DIExpression()), !dbg !5093
  %1 = load i32, ptr %flags.addr, align 4, !dbg !5094, !tbaa !2791
  %and2 = and i32 %1, 64, !dbg !5094
  %tobool = icmp ne i32 %and2, 0, !dbg !5094
  %call = call zeroext i1 @zero_get(i1 noundef zeroext %tobool, i1 noundef zeroext true), !dbg !5095
  %frombool = zext i1 %call to i8, !dbg !5093
  store i8 %frombool, ptr %zero, align 1, !dbg !5093, !tbaa !2695
  br label %do.body, !dbg !5096

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !5097

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5097

do.end:                                           ; preds = %do.cond
  br label %do.body3, !dbg !5099

do.body3:                                         ; preds = %do.end
  br label %do.cond4, !dbg !5100

do.cond4:                                         ; preds = %do.body3
  br label %do.end5, !dbg !5100

do.end5:                                          ; preds = %do.cond4
  br label %do.body6, !dbg !5102

do.body6:                                         ; preds = %do.end5
  br label %do.cond7, !dbg !5103

do.cond7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !5103

do.end8:                                          ; preds = %do.cond7
  br label %do.body9, !dbg !5105

do.body9:                                         ; preds = %do.end8
  br label %do.cond10, !dbg !5106

do.cond10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !5106

do.end11:                                         ; preds = %do.cond10
  br label %do.body12, !dbg !5108

do.body12:                                        ; preds = %do.end11
  br label %do.cond13, !dbg !5109

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !5109

do.end14:                                         ; preds = %do.cond13
  %call15 = call ptr @tsd_fetch(), !dbg !5111
  store ptr %call15, ptr %tsd, align 8, !dbg !5112, !tbaa !2658
  %2 = load ptr, ptr %tsd, align 8, !dbg !5113, !tbaa !2658
  %call16 = call ptr @tsd_tsdn(ptr noundef %2), !dbg !5114
  call void @check_entry_exit_locking(ptr noundef %call16), !dbg !5115
  call void @llvm.lifetime.start.p0(i64 8, ptr %old_edata) #18, !dbg !5116
  tail call void @llvm.dbg.declare(metadata ptr %old_edata, metadata !1776, metadata !DIExpression()), !dbg !5117
  %3 = load ptr, ptr %tsd, align 8, !dbg !5118, !tbaa !2658
  %call17 = call ptr @tsd_tsdn(ptr noundef %3), !dbg !5119
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !5120, !tbaa !2658
  %call18 = call ptr @emap_edata_lookup(ptr noundef %call17, ptr noundef @arena_emap_global, ptr noundef %4), !dbg !5121
  store ptr %call18, ptr %old_edata, align 8, !dbg !5117, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !5122
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !1777, metadata !DIExpression()), !dbg !5123
  %5 = load ptr, ptr %tsd, align 8, !dbg !5124, !tbaa !2658
  %call19 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !5125
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !5126, !tbaa !2658
  call void @emap_alloc_ctx_lookup(ptr noundef %call19, ptr noundef @arena_emap_global, ptr noundef %6, ptr noundef %alloc_ctx), !dbg !5127
  br label %do.body20, !dbg !5128

do.body20:                                        ; preds = %do.end14
  br label %do.cond21, !dbg !5129

do.cond21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !5129

do.end22:                                         ; preds = %do.cond21
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !5131
  %7 = load i32, ptr %szind, align 4, !dbg !5131, !tbaa !4364
  %call23 = call i64 @sz_index2size(i32 noundef %7), !dbg !5132
  store i64 %call23, ptr %old_usize, align 8, !dbg !5133, !tbaa !2663
  br label %do.body24, !dbg !5134

do.body24:                                        ; preds = %do.end22
  br label %do.cond25, !dbg !5135

do.cond25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !5135

do.end26:                                         ; preds = %do.cond25
  %8 = load i64, ptr %size.addr, align 8, !dbg !5137, !tbaa !2663
  %cmp = icmp ugt i64 %8, 8070450532247928832, !dbg !5137
  %lnot = xor i1 %cmp, true, !dbg !5137
  %lnot27 = xor i1 %lnot, true, !dbg !5137
  %lnot.ext = zext i1 %lnot27 to i32, !dbg !5137
  %conv = sext i32 %lnot.ext to i64, !dbg !5137
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5137
  %tobool28 = icmp ne i64 %expval, 0, !dbg !5137
  br i1 %tobool28, label %if.then, label %if.end, !dbg !5139

if.then:                                          ; preds = %do.end26
  %9 = load i64, ptr %old_usize, align 8, !dbg !5140, !tbaa !2663
  store i64 %9, ptr %usize, align 8, !dbg !5142, !tbaa !2663
  br label %label_not_resized, !dbg !5143

if.end:                                           ; preds = %do.end26
  %10 = load i64, ptr %size.addr, align 8, !dbg !5144, !tbaa !2663
  %sub = sub i64 8070450532247928832, %10, !dbg !5144
  %11 = load i64, ptr %extra.addr, align 8, !dbg !5144, !tbaa !2663
  %cmp29 = icmp ult i64 %sub, %11, !dbg !5144
  %lnot31 = xor i1 %cmp29, true, !dbg !5144
  %lnot33 = xor i1 %lnot31, true, !dbg !5144
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !5144
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !5144
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 0), !dbg !5144
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !5144
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !5146

if.then38:                                        ; preds = %if.end
  %12 = load i64, ptr %size.addr, align 8, !dbg !5147, !tbaa !2663
  %sub39 = sub i64 8070450532247928832, %12, !dbg !5149
  store i64 %sub39, ptr %extra.addr, align 8, !dbg !5150, !tbaa !2663
  br label %if.end40, !dbg !5151

if.end40:                                         ; preds = %if.then38, %if.end
  %13 = load ptr, ptr %tsd, align 8, !dbg !5152, !tbaa !2658
  %call41 = call ptr @tsd_tsdn(ptr noundef %13), !dbg !5155
  %14 = load ptr, ptr %ptr.addr, align 8, !dbg !5156, !tbaa !2658
  %15 = load i64, ptr %old_usize, align 8, !dbg !5157, !tbaa !2663
  %16 = load i64, ptr %size.addr, align 8, !dbg !5158, !tbaa !2663
  %17 = load i64, ptr %extra.addr, align 8, !dbg !5159, !tbaa !2663
  %18 = load i64, ptr %alignment, align 8, !dbg !5160, !tbaa !2663
  %19 = load i8, ptr %zero, align 1, !dbg !5161, !tbaa !2695, !range !2708, !noundef !2709
  %tobool42 = trunc i8 %19 to i1, !dbg !5161
  %call43 = call i64 @ixallocx_helper(ptr noundef %call41, ptr noundef %14, i64 noundef %15, i64 noundef %16, i64 noundef %17, i64 noundef %18, i1 noundef zeroext %tobool42), !dbg !5162
  store i64 %call43, ptr %usize, align 8, !dbg !5163, !tbaa !2663
  br label %do.body44, !dbg !5164

do.body44:                                        ; preds = %if.end40
  br label %do.cond45, !dbg !5165

do.cond45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !5165

do.end46:                                         ; preds = %do.cond45
  %20 = load i64, ptr %usize, align 8, !dbg !5167, !tbaa !2663
  %21 = load i64, ptr %old_usize, align 8, !dbg !5167, !tbaa !2663
  %cmp47 = icmp eq i64 %20, %21, !dbg !5167
  %lnot49 = xor i1 %cmp47, true, !dbg !5167
  %lnot51 = xor i1 %lnot49, true, !dbg !5167
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !5167
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !5167
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 0), !dbg !5167
  %tobool55 = icmp ne i64 %expval54, 0, !dbg !5167
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5169

if.then56:                                        ; preds = %do.end46
  br label %label_not_resized, !dbg !5170

if.end57:                                         ; preds = %do.end46
  %22 = load ptr, ptr %tsd, align 8, !dbg !5172, !tbaa !2658
  %23 = load i64, ptr %usize, align 8, !dbg !5173, !tbaa !2663
  call void @thread_alloc_event(ptr noundef %22, i64 noundef %23), !dbg !5174
  %24 = load ptr, ptr %tsd, align 8, !dbg !5175, !tbaa !2658
  %25 = load i64, ptr %old_usize, align 8, !dbg !5176, !tbaa !2663
  call void @thread_dalloc_event(ptr noundef %24, i64 noundef %25), !dbg !5177
  %26 = load i8, ptr @opt_junk_alloc, align 1, !dbg !5178, !tbaa !2695, !range !2708, !noundef !2709
  %tobool58 = trunc i8 %26 to i1, !dbg !5178
  %lnot59 = xor i1 %tobool58, true, !dbg !5178
  %lnot61 = xor i1 %lnot59, true, !dbg !5178
  %lnot.ext62 = zext i1 %lnot61 to i32, !dbg !5178
  %conv63 = sext i32 %lnot.ext62 to i64, !dbg !5178
  %expval64 = call i64 @llvm.expect.i64(i64 %conv63, i64 0), !dbg !5178
  %tobool65 = icmp ne i64 %expval64, 0, !dbg !5178
  br i1 %tobool65, label %land.lhs.true, label %if.end72, !dbg !5179

land.lhs.true:                                    ; preds = %if.end57
  %27 = load i64, ptr %usize, align 8, !dbg !5180, !tbaa !2663
  %28 = load i64, ptr %old_usize, align 8, !dbg !5181, !tbaa !2663
  %cmp66 = icmp ugt i64 %27, %28, !dbg !5182
  br i1 %cmp66, label %land.lhs.true68, label %if.end72, !dbg !5183

land.lhs.true68:                                  ; preds = %land.lhs.true
  %29 = load i8, ptr %zero, align 1, !dbg !5184, !tbaa !2695, !range !2708, !noundef !2709
  %tobool69 = trunc i8 %29 to i1, !dbg !5184
  br i1 %tobool69, label %if.end72, label %if.then70, !dbg !5185

if.then70:                                        ; preds = %land.lhs.true68
  call void @llvm.lifetime.start.p0(i64 8, ptr %excess_len) #18, !dbg !5186
  tail call void @llvm.dbg.declare(metadata ptr %excess_len, metadata !1783, metadata !DIExpression()), !dbg !5187
  %30 = load i64, ptr %usize, align 8, !dbg !5188, !tbaa !2663
  %31 = load i64, ptr %old_usize, align 8, !dbg !5189, !tbaa !2663
  %sub71 = sub i64 %30, %31, !dbg !5190
  store i64 %sub71, ptr %excess_len, align 8, !dbg !5187, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %excess_start) #18, !dbg !5191
  tail call void @llvm.dbg.declare(metadata ptr %excess_start, metadata !1786, metadata !DIExpression()), !dbg !5192
  %32 = load ptr, ptr %ptr.addr, align 8, !dbg !5193, !tbaa !2658
  %33 = ptrtoint ptr %32 to i64, !dbg !5194
  %34 = load i64, ptr %old_usize, align 8, !dbg !5195, !tbaa !2663
  %add = add i64 %33, %34, !dbg !5196
  %35 = inttoptr i64 %add to ptr, !dbg !5197
  store ptr %35, ptr %excess_start, align 8, !dbg !5192, !tbaa !2658
  %36 = load ptr, ptr @junk_alloc_callback, align 8, !dbg !5198, !tbaa !2658
  %37 = load ptr, ptr %excess_start, align 8, !dbg !5199, !tbaa !2658
  %38 = load i64, ptr %excess_len, align 8, !dbg !5200, !tbaa !2663
  call void %36(ptr noundef %37, i64 noundef %38), !dbg !5198
  call void @llvm.lifetime.end.p0(i64 8, ptr %excess_start) #18, !dbg !5201
  call void @llvm.lifetime.end.p0(i64 8, ptr %excess_len) #18, !dbg !5201
  br label %if.end72, !dbg !5202

if.end72:                                         ; preds = %if.then70, %land.lhs.true68, %land.lhs.true, %if.end57
  br label %label_not_resized, !dbg !5184

label_not_resized:                                ; preds = %if.end72, %if.then56, %if.then
  tail call void @llvm.dbg.label(metadata !1787), !dbg !5203
  %39 = load ptr, ptr %tsd, align 8, !dbg !5204, !tbaa !2658
  %call73 = call zeroext i1 @tsd_fast(ptr noundef %39), !dbg !5204
  %lnot74 = xor i1 %call73, true, !dbg !5204
  %lnot76 = xor i1 %lnot74, true, !dbg !5204
  %lnot78 = xor i1 %lnot76, true, !dbg !5204
  %lnot.ext79 = zext i1 %lnot78 to i32, !dbg !5204
  %conv80 = sext i32 %lnot.ext79 to i64, !dbg !5204
  %expval81 = call i64 @llvm.expect.i64(i64 %conv80, i64 0), !dbg !5204
  %tobool82 = icmp ne i64 %expval81, 0, !dbg !5204
  br i1 %tobool82, label %if.then83, label %if.end87, !dbg !5205

if.then83:                                        ; preds = %label_not_resized
  call void @llvm.lifetime.start.p0(i64 32, ptr %args) #18, !dbg !5206
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1788, metadata !DIExpression()), !dbg !5207
  %arrayinit.begin = getelementptr inbounds [4 x i64], ptr %args, i64 0, i64 0, !dbg !5208
  %40 = load ptr, ptr %ptr.addr, align 8, !dbg !5209, !tbaa !2658
  %41 = ptrtoint ptr %40 to i64, !dbg !5210
  store i64 %41, ptr %arrayinit.begin, align 8, !dbg !5208, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !5208
  %42 = load i64, ptr %size.addr, align 8, !dbg !5211, !tbaa !2663
  store i64 %42, ptr %arrayinit.element, align 8, !dbg !5208, !tbaa !2663
  %arrayinit.element84 = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !5208
  %43 = load i64, ptr %extra.addr, align 8, !dbg !5212, !tbaa !2663
  store i64 %43, ptr %arrayinit.element84, align 8, !dbg !5208, !tbaa !2663
  %arrayinit.element85 = getelementptr inbounds i64, ptr %arrayinit.element84, i64 1, !dbg !5208
  %44 = load i32, ptr %flags.addr, align 4, !dbg !5213, !tbaa !2791
  %conv86 = sext i32 %44 to i64, !dbg !5213
  store i64 %conv86, ptr %arrayinit.element85, align 8, !dbg !5208, !tbaa !2663
  %45 = load ptr, ptr %ptr.addr, align 8, !dbg !5214, !tbaa !2658
  %46 = load i64, ptr %old_usize, align 8, !dbg !5215, !tbaa !2663
  %47 = load i64, ptr %usize, align 8, !dbg !5216, !tbaa !2663
  %48 = load i64, ptr %usize, align 8, !dbg !5217, !tbaa !2663
  %arraydecay = getelementptr inbounds [4 x i64], ptr %args, i64 0, i64 0, !dbg !5218
  call void @hook_invoke_expand(i32 noundef 2, ptr noundef %45, i64 noundef %46, i64 noundef %47, i64 noundef %48, ptr noundef %arraydecay), !dbg !5219
  call void @llvm.lifetime.end.p0(i64 32, ptr %args) #18, !dbg !5220
  br label %if.end87, !dbg !5221

if.end87:                                         ; preds = %if.then83, %label_not_resized
  %49 = load ptr, ptr %tsd, align 8, !dbg !5222, !tbaa !2658
  %call88 = call ptr @tsd_tsdn(ptr noundef %49), !dbg !5223
  call void @check_entry_exit_locking(ptr noundef %call88), !dbg !5224
  br label %do.body89, !dbg !5225

do.body89:                                        ; preds = %if.end87
  br label %do.cond90, !dbg !5226

do.cond90:                                        ; preds = %do.body89
  br label %do.end91, !dbg !5226

do.end91:                                         ; preds = %do.cond90
  %50 = load i64, ptr %usize, align 8, !dbg !5228, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !5229
  call void @llvm.lifetime.end.p0(i64 8, ptr %old_edata) #18, !dbg !5229
  call void @llvm.lifetime.end.p0(i64 1, ptr %zero) #18, !dbg !5229
  call void @llvm.lifetime.end.p0(i64 8, ptr %alignment) #18, !dbg !5229
  call void @llvm.lifetime.end.p0(i64 8, ptr %old_usize) #18, !dbg !5229
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !5229
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !5229
  ret i64 %50, !dbg !5230
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @zero_get(i1 noundef zeroext %guarantee, i1 noundef zeroext %slow) #3 !dbg !5231 {
entry:
  %retval = alloca i1, align 1
  %guarantee.addr = alloca i8, align 1
  %slow.addr = alloca i8, align 1
  %frombool = zext i1 %guarantee to i8
  store i8 %frombool, ptr %guarantee.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %guarantee.addr, metadata !5235, metadata !DIExpression()), !dbg !5237
  %frombool1 = zext i1 %slow to i8
  store i8 %frombool1, ptr %slow.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow.addr, metadata !5236, metadata !DIExpression()), !dbg !5238
  %0 = load i8, ptr %slow.addr, align 1, !dbg !5239, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !5239
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5241

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, ptr @opt_zero, align 1, !dbg !5242, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2 = trunc i8 %1 to i1, !dbg !5242
  %lnot = xor i1 %tobool2, true, !dbg !5242
  %lnot3 = xor i1 %lnot, true, !dbg !5242
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5242
  %conv = sext i32 %lnot.ext to i64, !dbg !5242
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5242
  %tobool4 = icmp ne i64 %expval, 0, !dbg !5242
  br i1 %tobool4, label %if.then, label %if.else, !dbg !5243

if.then:                                          ; preds = %land.lhs.true
  store i1 true, ptr %retval, align 1, !dbg !5244
  br label %return, !dbg !5244

if.else:                                          ; preds = %land.lhs.true, %entry
  %2 = load i8, ptr %guarantee.addr, align 1, !dbg !5246, !tbaa !2695, !range !2708, !noundef !2709
  %tobool5 = trunc i8 %2 to i1, !dbg !5246
  store i1 %tobool5, ptr %retval, align 1, !dbg !5248
  br label %return, !dbg !5248

return:                                           ; preds = %if.else, %if.then
  %3 = load i1, ptr %retval, align 1, !dbg !5249
  ret i1 %3, !dbg !5249
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_fetch() #3 !dbg !5250 {
entry:
  %call = call ptr @tsd_fetch_impl(i1 noundef zeroext true, i1 noundef zeroext false), !dbg !5251
  ret ptr %call, !dbg !5252
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @emap_edata_lookup(ptr noundef %tsdn, ptr noundef %emap, ptr noundef %ptr) #3 !dbg !5253 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %emap.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %rtree_ctx_fallback = alloca %struct.rtree_ctx_s, align 8
  %rtree_ctx = alloca ptr, align 8
  %tmp = alloca %struct.rtree_contents_s, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !5257, metadata !DIExpression()), !dbg !5263
  store ptr %emap, ptr %emap.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %emap.addr, metadata !5258, metadata !DIExpression()), !dbg !5264
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5259, metadata !DIExpression()), !dbg !5265
  call void @llvm.lifetime.start.p0(i64 384, ptr %rtree_ctx_fallback) #18, !dbg !5266
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx_fallback, metadata !5260, metadata !DIExpression()), !dbg !5266
  call void @llvm.lifetime.start.p0(i64 8, ptr %rtree_ctx) #18, !dbg !5266
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx, metadata !5261, metadata !DIExpression()), !dbg !5266
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !5266, !tbaa !2658
  %call = call ptr @tsdn_rtree_ctx(ptr noundef %0, ptr noundef %rtree_ctx_fallback), !dbg !5266
  store ptr %call, ptr %rtree_ctx, align 8, !dbg !5266, !tbaa !2658
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !5267, !tbaa !2658
  %2 = load ptr, ptr %emap.addr, align 8, !dbg !5268, !tbaa !2658
  %rtree = getelementptr inbounds %struct.emap_s, ptr %2, i32 0, i32 0, !dbg !5269
  %3 = load ptr, ptr %rtree_ctx, align 8, !dbg !5270, !tbaa !2658
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !5271, !tbaa !2658
  %5 = ptrtoint ptr %4 to i64, !dbg !5272
  call void @rtree_read(ptr sret(%struct.rtree_contents_s) align 8 %tmp, ptr noundef %1, ptr noundef %rtree, ptr noundef %3, i64 noundef %5), !dbg !5273
  %edata = getelementptr inbounds %struct.rtree_contents_s, ptr %tmp, i32 0, i32 0, !dbg !5274
  %6 = load ptr, ptr %edata, align 8, !dbg !5274, !tbaa !5275
  call void @llvm.lifetime.end.p0(i64 8, ptr %rtree_ctx) #18, !dbg !5278
  call void @llvm.lifetime.end.p0(i64 384, ptr %rtree_ctx_fallback) #18, !dbg !5278
  ret ptr %6, !dbg !5279
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @emap_alloc_ctx_lookup(ptr noundef %tsdn, ptr noundef %emap, ptr noundef %ptr, ptr noundef %alloc_ctx) #3 !dbg !5280 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %emap.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %alloc_ctx.addr = alloca ptr, align 8
  %rtree_ctx_fallback = alloca %struct.rtree_ctx_s, align 8
  %rtree_ctx = alloca ptr, align 8
  %metadata = alloca %struct.rtree_metadata_s, align 4
  %tmp.coerce = alloca { i64, i32 }, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !5285, metadata !DIExpression()), !dbg !5299
  store ptr %emap, ptr %emap.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %emap.addr, metadata !5286, metadata !DIExpression()), !dbg !5300
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5287, metadata !DIExpression()), !dbg !5301
  store ptr %alloc_ctx, ptr %alloc_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx.addr, metadata !5288, metadata !DIExpression()), !dbg !5302
  call void @llvm.lifetime.start.p0(i64 384, ptr %rtree_ctx_fallback) #18, !dbg !5303
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx_fallback, metadata !5289, metadata !DIExpression()), !dbg !5303
  call void @llvm.lifetime.start.p0(i64 8, ptr %rtree_ctx) #18, !dbg !5303
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx, metadata !5290, metadata !DIExpression()), !dbg !5303
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !5303, !tbaa !2658
  %call = call ptr @tsdn_rtree_ctx(ptr noundef %0, ptr noundef %rtree_ctx_fallback), !dbg !5303
  store ptr %call, ptr %rtree_ctx, align 8, !dbg !5303, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 12, ptr %metadata) #18, !dbg !5304
  tail call void @llvm.dbg.declare(metadata ptr %metadata, metadata !5291, metadata !DIExpression()), !dbg !5305
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !5306, !tbaa !2658
  %2 = load ptr, ptr %emap.addr, align 8, !dbg !5307, !tbaa !2658
  %rtree = getelementptr inbounds %struct.emap_s, ptr %2, i32 0, i32 0, !dbg !5308
  %3 = load ptr, ptr %rtree_ctx, align 8, !dbg !5309, !tbaa !2658
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !5310, !tbaa !2658
  %5 = ptrtoint ptr %4 to i64, !dbg !5311
  %call1 = call { i64, i32 } @rtree_metadata_read(ptr noundef %1, ptr noundef %rtree, ptr noundef %3, i64 noundef %5), !dbg !5312
  store { i64, i32 } %call1, ptr %tmp.coerce, align 8, !dbg !5312
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %metadata, ptr align 8 %tmp.coerce, i64 12, i1 false), !dbg !5312
  %szind = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata, i32 0, i32 0, !dbg !5313
  %6 = load i32, ptr %szind, align 4, !dbg !5313, !tbaa !5314
  %7 = load ptr, ptr %alloc_ctx.addr, align 8, !dbg !5315, !tbaa !2658
  %szind2 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %7, i32 0, i32 0, !dbg !5316
  store i32 %6, ptr %szind2, align 4, !dbg !5317, !tbaa !4364
  %slab = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata, i32 0, i32 3, !dbg !5318
  %8 = load i8, ptr %slab, align 1, !dbg !5318, !tbaa !5319, !range !2708, !noundef !2709
  %tobool = trunc i8 %8 to i1, !dbg !5318
  %9 = load ptr, ptr %alloc_ctx.addr, align 8, !dbg !5320, !tbaa !2658
  %slab3 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %9, i32 0, i32 1, !dbg !5321
  %frombool = zext i1 %tobool to i8, !dbg !5322
  store i8 %frombool, ptr %slab3, align 4, !dbg !5322, !tbaa !4461
  call void @llvm.lifetime.end.p0(i64 12, ptr %metadata) #18, !dbg !5323
  call void @llvm.lifetime.end.p0(i64 8, ptr %rtree_ctx) #18, !dbg !5323
  call void @llvm.lifetime.end.p0(i64 384, ptr %rtree_ctx_fallback) #18, !dbg !5323
  ret void, !dbg !5323
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @sz_index2size(i32 noundef %index) #3 !dbg !5324 {
entry:
  %index.addr = alloca i32, align 4
  store i32 %index, ptr %index.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %do.body, !dbg !5330

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5331

do.end:                                           ; preds = %do.body
  %0 = load i32, ptr %index.addr, align 4, !dbg !5333, !tbaa !2791
  %call = call i64 @sz_index2size_lookup(i32 noundef %0), !dbg !5334
  ret i64 %call, !dbg !5335
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @ixallocx_helper(ptr noundef %tsdn, ptr noundef %ptr, i64 noundef %old_usize, i64 noundef %size, i64 noundef %extra, i64 noundef %alignment, i1 noundef zeroext %zero) #3 !dbg !5336 {
entry:
  %retval = alloca i64, align 8
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %old_usize.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %extra.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %zero.addr = alloca i8, align 1
  %newsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !5340, metadata !DIExpression()), !dbg !5348
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5341, metadata !DIExpression()), !dbg !5349
  store i64 %old_usize, ptr %old_usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %old_usize.addr, metadata !5342, metadata !DIExpression()), !dbg !5350
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !5343, metadata !DIExpression()), !dbg !5351
  store i64 %extra, ptr %extra.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !5344, metadata !DIExpression()), !dbg !5352
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !5345, metadata !DIExpression()), !dbg !5353
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !5346, metadata !DIExpression()), !dbg !5354
  call void @llvm.lifetime.start.p0(i64 8, ptr %newsize) #18, !dbg !5355
  tail call void @llvm.dbg.declare(metadata ptr %newsize, metadata !5347, metadata !DIExpression()), !dbg !5356
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !5357, !tbaa !2658
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !5359, !tbaa !2658
  %2 = load i64, ptr %old_usize.addr, align 8, !dbg !5360, !tbaa !2663
  %3 = load i64, ptr %size.addr, align 8, !dbg !5361, !tbaa !2663
  %4 = load i64, ptr %extra.addr, align 8, !dbg !5362, !tbaa !2663
  %5 = load i64, ptr %alignment.addr, align 8, !dbg !5363, !tbaa !2663
  %6 = load i8, ptr %zero.addr, align 1, !dbg !5364, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %6 to i1, !dbg !5364
  %call = call zeroext i1 @ixalloc(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4, i64 noundef %5, i1 noundef zeroext %tobool, ptr noundef %newsize), !dbg !5365
  br i1 %call, label %if.then, label %if.end, !dbg !5366

if.then:                                          ; preds = %entry
  %7 = load i64, ptr %old_usize.addr, align 8, !dbg !5367, !tbaa !2663
  store i64 %7, ptr %retval, align 8, !dbg !5369
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5369

if.end:                                           ; preds = %entry
  %8 = load i64, ptr %newsize, align 8, !dbg !5370, !tbaa !2663
  store i64 %8, ptr %retval, align 8, !dbg !5371
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5371

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %newsize) #18, !dbg !5372
  %9 = load i64, ptr %retval, align 8, !dbg !5372
  ret i64 %9, !dbg !5372
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @thread_alloc_event(ptr noundef %tsd, i64 noundef %usize) #3 !dbg !5373 {
entry:
  %tsd.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !5378, metadata !DIExpression()), !dbg !5380
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !5379, metadata !DIExpression()), !dbg !5381
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !5382, !tbaa !2658
  %1 = load i64, ptr %usize.addr, align 8, !dbg !5383, !tbaa !2663
  call void @te_event_advance(ptr noundef %0, i64 noundef %1, i1 noundef zeroext true), !dbg !5384
  ret void, !dbg !5385
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @thread_dalloc_event(ptr noundef %tsd, i64 noundef %usize) #3 !dbg !5386 {
entry:
  %tsd.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !5388, metadata !DIExpression()), !dbg !5390
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !5389, metadata !DIExpression()), !dbg !5391
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !5392, !tbaa !2658
  %1 = load i64, ptr %usize.addr, align 8, !dbg !5393, !tbaa !2663
  call void @te_event_advance(ptr noundef %0, i64 noundef %1, i1 noundef zeroext false), !dbg !5394
  ret void, !dbg !5395
}

declare !dbg !5396 void @hook_invoke_expand(i32 noundef, ptr noundef, i64 noundef, i64 noundef, i64 noundef, ptr noundef) #5

; Function Attrs: nounwind willreturn memory(read) uwtable
define i64 @je_sallocx(ptr noundef %ptr, i32 noundef %flags) #10 !dbg !1800 {
entry:
  %ptr.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  %usize = alloca i64, align 8
  %tsdn = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1804, metadata !DIExpression()), !dbg !5400
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !1805, metadata !DIExpression()), !dbg !5401
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !5402
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !1806, metadata !DIExpression()), !dbg !5403
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsdn) #18, !dbg !5404
  tail call void @llvm.dbg.declare(metadata ptr %tsdn, metadata !1807, metadata !DIExpression()), !dbg !5405
  br label %do.body, !dbg !5406

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !5407

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5407

do.end:                                           ; preds = %do.cond
  br label %do.body1, !dbg !5409

do.body1:                                         ; preds = %do.end
  br label %do.cond2, !dbg !5410

do.cond2:                                         ; preds = %do.body1
  br label %do.end3, !dbg !5410

do.end3:                                          ; preds = %do.cond2
  br label %do.body4, !dbg !5412

do.body4:                                         ; preds = %do.end3
  br label %do.cond5, !dbg !5413

do.cond5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !5413

do.end6:                                          ; preds = %do.cond5
  %call = call ptr @tsdn_fetch(), !dbg !5415
  store ptr %call, ptr %tsdn, align 8, !dbg !5416, !tbaa !2658
  %0 = load ptr, ptr %tsdn, align 8, !dbg !5417, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %0), !dbg !5418
  %1 = load ptr, ptr %tsdn, align 8, !dbg !5419, !tbaa !2658
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !5422, !tbaa !2658
  %call7 = call i64 @isalloc(ptr noundef %1, ptr noundef %2), !dbg !5423
  store i64 %call7, ptr %usize, align 8, !dbg !5424, !tbaa !2663
  %3 = load ptr, ptr %tsdn, align 8, !dbg !5425, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %3), !dbg !5426
  br label %do.body8, !dbg !5427

do.body8:                                         ; preds = %do.end6
  br label %do.cond9, !dbg !5428

do.cond9:                                         ; preds = %do.body8
  br label %do.end10, !dbg !5428

do.end10:                                         ; preds = %do.cond9
  %4 = load i64, ptr %usize, align 8, !dbg !5430, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsdn) #18, !dbg !5431
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !5431
  ret i64 %4, !dbg !5432
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsdn_fetch() #3 !dbg !5433 {
entry:
  %retval = alloca ptr, align 8
  %call = call zeroext i1 @tsd_booted_get(), !dbg !5436
  br i1 %call, label %if.end, label %if.then, !dbg !5438

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !5439
  br label %return, !dbg !5439

if.end:                                           ; preds = %entry
  %call1 = call ptr @tsd_fetch_impl(i1 noundef zeroext false, i1 noundef zeroext false), !dbg !5441
  %call2 = call ptr @tsd_tsdn(ptr noundef %call1), !dbg !5442
  store ptr %call2, ptr %retval, align 8, !dbg !5443
  br label %return, !dbg !5443

return:                                           ; preds = %if.end, %if.then
  %0 = load ptr, ptr %retval, align 8, !dbg !5444
  ret ptr %0, !dbg !5444
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @isalloc(ptr noundef %tsdn, ptr noundef %ptr) #3 !dbg !5445 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !5449, metadata !DIExpression()), !dbg !5451
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5450, metadata !DIExpression()), !dbg !5452
  br label %do.body, !dbg !5453

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5454

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !5456, !tbaa !2658
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !5457, !tbaa !2658
  %call = call i64 @arena_salloc(ptr noundef %0, ptr noundef %1), !dbg !5458
  ret i64 %call, !dbg !5459
}

; Function Attrs: nounwind uwtable
define void @je_dallocx(ptr noundef %ptr, i32 noundef %flags) #0 !dbg !1816 {
entry:
  %ptr.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  %tsd = alloca ptr, align 8
  %fast = alloca i8, align 1
  %tcache_ind = alloca i32, align 4
  %tcache = alloca ptr, align 8
  %args_raw = alloca [3 x i64], align 16
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1820, metadata !DIExpression()), !dbg !5460
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !1821, metadata !DIExpression()), !dbg !5461
  br label %do.body, !dbg !5462

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5463

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !5465

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5466

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !5468

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !5469

do.end4:                                          ; preds = %do.body3
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !5471
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !1822, metadata !DIExpression()), !dbg !5472
  %call = call ptr @tsd_fetch_min(), !dbg !5473
  store ptr %call, ptr %tsd, align 8, !dbg !5472, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 1, ptr %fast) #18, !dbg !5474
  tail call void @llvm.dbg.declare(metadata ptr %fast, metadata !1823, metadata !DIExpression()), !dbg !5475
  %0 = load ptr, ptr %tsd, align 8, !dbg !5476, !tbaa !2658
  %call5 = call zeroext i1 @tsd_fast(ptr noundef %0), !dbg !5477
  %frombool = zext i1 %call5 to i8, !dbg !5475
  store i8 %frombool, ptr %fast, align 1, !dbg !5475, !tbaa !2695
  %1 = load ptr, ptr %tsd, align 8, !dbg !5478, !tbaa !2658
  %call6 = call ptr @tsd_tsdn(ptr noundef %1), !dbg !5479
  call void @check_entry_exit_locking(ptr noundef %call6), !dbg !5480
  call void @llvm.lifetime.start.p0(i64 4, ptr %tcache_ind) #18, !dbg !5481
  tail call void @llvm.dbg.declare(metadata ptr %tcache_ind, metadata !1824, metadata !DIExpression()), !dbg !5482
  %2 = load i32, ptr %flags.addr, align 4, !dbg !5483, !tbaa !2791
  %call7 = call i32 @mallocx_tcache_get(i32 noundef %2), !dbg !5484
  store i32 %call7, ptr %tcache_ind, align 4, !dbg !5482, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !5485
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !1825, metadata !DIExpression()), !dbg !5486
  %3 = load ptr, ptr %tsd, align 8, !dbg !5487, !tbaa !2658
  %4 = load i32, ptr %tcache_ind, align 4, !dbg !5488, !tbaa !2791
  %5 = load i8, ptr %fast, align 1, !dbg !5489, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %5 to i1, !dbg !5489
  %lnot = xor i1 %tobool, true, !dbg !5490
  %call8 = call ptr @tcache_get_from_ind(ptr noundef %3, i32 noundef %4, i1 noundef zeroext %lnot, i1 noundef zeroext false), !dbg !5491
  store ptr %call8, ptr %tcache, align 8, !dbg !5486, !tbaa !2658
  %6 = load i8, ptr %fast, align 1, !dbg !5492, !tbaa !2695, !range !2708, !noundef !2709
  %tobool9 = trunc i8 %6 to i1, !dbg !5492
  %lnot10 = xor i1 %tobool9, true, !dbg !5492
  %lnot11 = xor i1 %lnot10, true, !dbg !5492
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !5492
  %conv = sext i32 %lnot.ext to i64, !dbg !5492
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5492
  %tobool12 = icmp ne i64 %expval, 0, !dbg !5492
  br i1 %tobool12, label %if.then, label %if.else, !dbg !5493

if.then:                                          ; preds = %do.end4
  %7 = load ptr, ptr %tsd, align 8, !dbg !5494, !tbaa !2658
  call void @tsd_assert_fast(ptr noundef %7), !dbg !5496
  %8 = load ptr, ptr %tsd, align 8, !dbg !5497, !tbaa !2658
  %9 = load ptr, ptr %ptr.addr, align 8, !dbg !5498, !tbaa !2658
  %10 = load ptr, ptr %tcache, align 8, !dbg !5499, !tbaa !2658
  call void @ifree(ptr noundef %8, ptr noundef %9, ptr noundef %10, i1 noundef zeroext false), !dbg !5500
  br label %if.end, !dbg !5501

if.else:                                          ; preds = %do.end4
  call void @llvm.lifetime.start.p0(i64 24, ptr %args_raw) #18, !dbg !5502
  tail call void @llvm.dbg.declare(metadata ptr %args_raw, metadata !1826, metadata !DIExpression()), !dbg !5503
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args_raw, i64 0, i64 0, !dbg !5504
  %11 = load ptr, ptr %ptr.addr, align 8, !dbg !5505, !tbaa !2658
  %12 = ptrtoint ptr %11 to i64, !dbg !5506
  store i64 %12, ptr %arrayinit.begin, align 8, !dbg !5504, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !5504
  %13 = load i32, ptr %flags.addr, align 4, !dbg !5507, !tbaa !2791
  %conv13 = sext i32 %13 to i64, !dbg !5507
  store i64 %conv13, ptr %arrayinit.element, align 8, !dbg !5504, !tbaa !2663
  %arrayinit.start = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !5504
  %arrayinit.end = getelementptr inbounds i64, ptr %arrayinit.begin, i64 3, !dbg !5504
  br label %arrayinit.body, !dbg !5504

arrayinit.body:                                   ; preds = %arrayinit.body, %if.else
  %arrayinit.cur = phi ptr [ %arrayinit.start, %if.else ], [ %arrayinit.next, %arrayinit.body ], !dbg !5504
  store i64 0, ptr %arrayinit.cur, align 8, !dbg !5504, !tbaa !2663
  %arrayinit.next = getelementptr inbounds i64, ptr %arrayinit.cur, i64 1, !dbg !5504
  %arrayinit.done = icmp eq ptr %arrayinit.next, %arrayinit.end, !dbg !5504
  br i1 %arrayinit.done, label %arrayinit.end14, label %arrayinit.body, !dbg !5504

arrayinit.end14:                                  ; preds = %arrayinit.body
  %14 = load ptr, ptr %ptr.addr, align 8, !dbg !5508, !tbaa !2658
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args_raw, i64 0, i64 0, !dbg !5509
  call void @hook_invoke_dalloc(i32 noundef 1, ptr noundef %14, ptr noundef %arraydecay), !dbg !5510
  %15 = load ptr, ptr %tsd, align 8, !dbg !5511, !tbaa !2658
  %16 = load ptr, ptr %ptr.addr, align 8, !dbg !5512, !tbaa !2658
  %17 = load ptr, ptr %tcache, align 8, !dbg !5513, !tbaa !2658
  call void @ifree(ptr noundef %15, ptr noundef %16, ptr noundef %17, i1 noundef zeroext true), !dbg !5514
  call void @llvm.lifetime.end.p0(i64 24, ptr %args_raw) #18, !dbg !5515
  br label %if.end

if.end:                                           ; preds = %arrayinit.end14, %if.then
  %18 = load ptr, ptr %tsd, align 8, !dbg !5516, !tbaa !2658
  %call15 = call ptr @tsd_tsdn(ptr noundef %18), !dbg !5517
  call void @check_entry_exit_locking(ptr noundef %call15), !dbg !5518
  br label %do.body16, !dbg !5519

do.body16:                                        ; preds = %if.end
  br label %do.cond, !dbg !5520

do.cond:                                          ; preds = %do.body16
  br label %do.end17, !dbg !5520

do.end17:                                         ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 4, ptr %tcache_ind) #18, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 1, ptr %fast) #18, !dbg !5522
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !5522
  ret void, !dbg !5522
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @tsd_assert_fast(ptr noundef %tsd) #3 !dbg !5523 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !5525, metadata !DIExpression()), !dbg !5526
  br label %do.body, !dbg !5527

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5528

do.end:                                           ; preds = %do.body
  ret void, !dbg !5530
}

; Function Attrs: noinline nounwind uwtable
define hidden void @sdallocx_default(ptr noundef %ptr, i64 noundef %size, i32 noundef %flags) #6 !dbg !5531 {
entry:
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %tsd = alloca ptr, align 8
  %fast = alloca i8, align 1
  %usize = alloca i64, align 8
  %tcache_ind = alloca i32, align 4
  %tcache = alloca ptr, align 8
  %args_raw = alloca [3 x i64], align 16
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5533, metadata !DIExpression()), !dbg !5544
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !5534, metadata !DIExpression()), !dbg !5545
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !5535, metadata !DIExpression()), !dbg !5546
  br label %do.body, !dbg !5547

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5548

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !5550

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5551

do.end2:                                          ; preds = %do.body1
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !5553
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !5536, metadata !DIExpression()), !dbg !5554
  %call = call ptr @tsd_fetch_min(), !dbg !5555
  store ptr %call, ptr %tsd, align 8, !dbg !5554, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 1, ptr %fast) #18, !dbg !5556
  tail call void @llvm.dbg.declare(metadata ptr %fast, metadata !5537, metadata !DIExpression()), !dbg !5557
  %0 = load ptr, ptr %tsd, align 8, !dbg !5558, !tbaa !2658
  %call3 = call zeroext i1 @tsd_fast(ptr noundef %0), !dbg !5559
  %frombool = zext i1 %call3 to i8, !dbg !5557
  store i8 %frombool, ptr %fast, align 1, !dbg !5557, !tbaa !2695
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !5560
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !5538, metadata !DIExpression()), !dbg !5561
  %1 = load ptr, ptr %tsd, align 8, !dbg !5562, !tbaa !2658
  %call4 = call ptr @tsd_tsdn(ptr noundef %1), !dbg !5563
  %2 = load i64, ptr %size.addr, align 8, !dbg !5564, !tbaa !2663
  %3 = load i32, ptr %flags.addr, align 4, !dbg !5565, !tbaa !2791
  %call5 = call i64 @inallocx(ptr noundef %call4, i64 noundef %2, i32 noundef %3), !dbg !5566
  store i64 %call5, ptr %usize, align 8, !dbg !5561, !tbaa !2663
  %4 = load ptr, ptr %tsd, align 8, !dbg !5567, !tbaa !2658
  %call6 = call ptr @tsd_tsdn(ptr noundef %4), !dbg !5568
  call void @check_entry_exit_locking(ptr noundef %call6), !dbg !5569
  call void @llvm.lifetime.start.p0(i64 4, ptr %tcache_ind) #18, !dbg !5570
  tail call void @llvm.dbg.declare(metadata ptr %tcache_ind, metadata !5539, metadata !DIExpression()), !dbg !5571
  %5 = load i32, ptr %flags.addr, align 4, !dbg !5572, !tbaa !2791
  %call7 = call i32 @mallocx_tcache_get(i32 noundef %5), !dbg !5573
  store i32 %call7, ptr %tcache_ind, align 4, !dbg !5571, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !5574
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !5540, metadata !DIExpression()), !dbg !5575
  %6 = load ptr, ptr %tsd, align 8, !dbg !5576, !tbaa !2658
  %7 = load i32, ptr %tcache_ind, align 4, !dbg !5577, !tbaa !2791
  %8 = load i8, ptr %fast, align 1, !dbg !5578, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %8 to i1, !dbg !5578
  %lnot = xor i1 %tobool, true, !dbg !5579
  %call8 = call ptr @tcache_get_from_ind(ptr noundef %6, i32 noundef %7, i1 noundef zeroext %lnot, i1 noundef zeroext false), !dbg !5580
  store ptr %call8, ptr %tcache, align 8, !dbg !5575, !tbaa !2658
  %9 = load i8, ptr %fast, align 1, !dbg !5581, !tbaa !2695, !range !2708, !noundef !2709
  %tobool9 = trunc i8 %9 to i1, !dbg !5581
  %lnot10 = xor i1 %tobool9, true, !dbg !5581
  %lnot11 = xor i1 %lnot10, true, !dbg !5581
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !5581
  %conv = sext i32 %lnot.ext to i64, !dbg !5581
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5581
  %tobool12 = icmp ne i64 %expval, 0, !dbg !5581
  br i1 %tobool12, label %if.then, label %if.else, !dbg !5582

if.then:                                          ; preds = %do.end2
  %10 = load ptr, ptr %tsd, align 8, !dbg !5583, !tbaa !2658
  call void @tsd_assert_fast(ptr noundef %10), !dbg !5585
  %11 = load ptr, ptr %tsd, align 8, !dbg !5586, !tbaa !2658
  %12 = load ptr, ptr %ptr.addr, align 8, !dbg !5587, !tbaa !2658
  %13 = load i64, ptr %usize, align 8, !dbg !5588, !tbaa !2663
  %14 = load ptr, ptr %tcache, align 8, !dbg !5589, !tbaa !2658
  call void @isfree(ptr noundef %11, ptr noundef %12, i64 noundef %13, ptr noundef %14, i1 noundef zeroext false), !dbg !5590
  br label %if.end, !dbg !5591

if.else:                                          ; preds = %do.end2
  call void @llvm.lifetime.start.p0(i64 24, ptr %args_raw) #18, !dbg !5592
  tail call void @llvm.dbg.declare(metadata ptr %args_raw, metadata !5541, metadata !DIExpression()), !dbg !5593
  %arrayinit.begin = getelementptr inbounds [3 x i64], ptr %args_raw, i64 0, i64 0, !dbg !5594
  %15 = load ptr, ptr %ptr.addr, align 8, !dbg !5595, !tbaa !2658
  %16 = ptrtoint ptr %15 to i64, !dbg !5596
  store i64 %16, ptr %arrayinit.begin, align 8, !dbg !5594, !tbaa !2663
  %arrayinit.element = getelementptr inbounds i64, ptr %arrayinit.begin, i64 1, !dbg !5594
  %17 = load i64, ptr %size.addr, align 8, !dbg !5597, !tbaa !2663
  store i64 %17, ptr %arrayinit.element, align 8, !dbg !5594, !tbaa !2663
  %arrayinit.element13 = getelementptr inbounds i64, ptr %arrayinit.element, i64 1, !dbg !5594
  %18 = load i32, ptr %flags.addr, align 4, !dbg !5598, !tbaa !2791
  %conv14 = sext i32 %18 to i64, !dbg !5598
  store i64 %conv14, ptr %arrayinit.element13, align 8, !dbg !5594, !tbaa !2663
  %19 = load ptr, ptr %ptr.addr, align 8, !dbg !5599, !tbaa !2658
  %arraydecay = getelementptr inbounds [3 x i64], ptr %args_raw, i64 0, i64 0, !dbg !5600
  call void @hook_invoke_dalloc(i32 noundef 2, ptr noundef %19, ptr noundef %arraydecay), !dbg !5601
  %20 = load ptr, ptr %tsd, align 8, !dbg !5602, !tbaa !2658
  %21 = load ptr, ptr %ptr.addr, align 8, !dbg !5603, !tbaa !2658
  %22 = load i64, ptr %usize, align 8, !dbg !5604, !tbaa !2663
  %23 = load ptr, ptr %tcache, align 8, !dbg !5605, !tbaa !2658
  call void @isfree(ptr noundef %20, ptr noundef %21, i64 noundef %22, ptr noundef %23, i1 noundef zeroext true), !dbg !5606
  call void @llvm.lifetime.end.p0(i64 24, ptr %args_raw) #18, !dbg !5607
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load ptr, ptr %tsd, align 8, !dbg !5608, !tbaa !2658
  %call15 = call ptr @tsd_tsdn(ptr noundef %24), !dbg !5609
  call void @check_entry_exit_locking(ptr noundef %call15), !dbg !5610
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !5611
  call void @llvm.lifetime.end.p0(i64 4, ptr %tcache_ind) #18, !dbg !5611
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !5611
  call void @llvm.lifetime.end.p0(i64 1, ptr %fast) #18, !dbg !5611
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !5611
  ret void, !dbg !5611
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @inallocx(ptr noundef %tsdn, i64 noundef %size, i32 noundef %flags) #3 !dbg !5612 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %usize = alloca i64, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !5616, metadata !DIExpression()), !dbg !5620
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !5617, metadata !DIExpression()), !dbg !5621
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !5618, metadata !DIExpression()), !dbg !5622
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !5623, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %0), !dbg !5624
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !5625
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !5619, metadata !DIExpression()), !dbg !5626
  %1 = load i64, ptr %size.addr, align 8, !dbg !5627, !tbaa !2663
  %2 = load i32, ptr %flags.addr, align 4, !dbg !5628, !tbaa !2791
  %and = and i32 %2, 63, !dbg !5628
  %sh_prom = zext i32 %and to i64, !dbg !5628
  %shl = shl i64 1, %sh_prom, !dbg !5628
  %and1 = and i64 %shl, -2, !dbg !5628
  %call = call zeroext i1 @aligned_usize_get(i64 noundef %1, i64 noundef %and1, ptr noundef %usize, ptr noundef null, i1 noundef zeroext false), !dbg !5629
  %3 = load ptr, ptr %tsdn.addr, align 8, !dbg !5630, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %3), !dbg !5631
  %4 = load i64, ptr %usize, align 8, !dbg !5632, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !5633
  ret i64 %4, !dbg !5634
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @isfree(ptr noundef %tsd, ptr noundef %ptr, i64 noundef %usize, ptr noundef %tcache, i1 noundef zeroext %slow_path) #3 !dbg !5635 {
entry:
  %tsd.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  %tcache.addr = alloca ptr, align 8
  %slow_path.addr = alloca i8, align 1
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  %fail = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !5639, metadata !DIExpression()), !dbg !5646
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5640, metadata !DIExpression()), !dbg !5647
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !5641, metadata !DIExpression()), !dbg !5648
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !5642, metadata !DIExpression()), !dbg !5649
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !5643, metadata !DIExpression()), !dbg !5650
  %0 = load i8, ptr %slow_path.addr, align 1, !dbg !5651, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !5651
  br i1 %tobool, label %if.end, label %if.then, !dbg !5653

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !5654, !tbaa !2658
  call void @tsd_assert_fast(ptr noundef %1), !dbg !5656
  br label %if.end, !dbg !5657

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !5658, !tbaa !2658
  %call = call ptr @tsd_tsdn(ptr noundef %2), !dbg !5659
  call void @check_entry_exit_locking(ptr noundef %call), !dbg !5660
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !5661, !tbaa !2658
  %call1 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %3), !dbg !5663
  %conv = sext i8 %call1 to i32, !dbg !5663
  %cmp = icmp ne i32 %conv, 0, !dbg !5664
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !5665

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !5666

do.body:                                          ; preds = %if.then3
  br label %do.end, !dbg !5668

do.end:                                           ; preds = %do.body
  br label %if.end4, !dbg !5670

if.end4:                                          ; preds = %do.end, %if.end
  br label %do.body5, !dbg !5671

do.body5:                                         ; preds = %if.end4
  br label %do.end6, !dbg !5672

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !5674

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !5675

do.end8:                                          ; preds = %do.body7
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !5677
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !5644, metadata !DIExpression()), !dbg !5678
  %4 = load i64, ptr %usize.addr, align 8, !dbg !5679, !tbaa !2663
  %call9 = call i32 @sz_size2index(i64 noundef %4), !dbg !5682
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !5683
  store i32 %call9, ptr %szind, align 4, !dbg !5684, !tbaa !4364
  %szind10 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !5685
  %5 = load i32, ptr %szind10, align 4, !dbg !5685, !tbaa !4364
  %conv11 = zext i32 %5 to i64, !dbg !5686
  %cmp12 = icmp ult i64 %conv11, 36, !dbg !5687
  %slab = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !5688
  %frombool14 = zext i1 %cmp12 to i8, !dbg !5689
  store i8 %frombool14, ptr %slab, align 4, !dbg !5689, !tbaa !4461
  call void @llvm.lifetime.start.p0(i64 1, ptr %fail) #18, !dbg !5690
  tail call void @llvm.dbg.declare(metadata ptr %fail, metadata !5645, metadata !DIExpression()), !dbg !5691
  %6 = load ptr, ptr %tsd.addr, align 8, !dbg !5692, !tbaa !2658
  %7 = load ptr, ptr %ptr.addr, align 8, !dbg !5693, !tbaa !2658
  %call15 = call zeroext i1 @maybe_check_alloc_ctx(ptr noundef %6, ptr noundef %7, ptr noundef %alloc_ctx), !dbg !5694
  %frombool16 = zext i1 %call15 to i8, !dbg !5691
  store i8 %frombool16, ptr %fail, align 1, !dbg !5691, !tbaa !2695
  %8 = load i8, ptr %fail, align 1, !dbg !5695, !tbaa !2695, !range !2708, !noundef !2709
  %tobool17 = trunc i8 %8 to i1, !dbg !5695
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !5697

if.then18:                                        ; preds = %do.end8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5698

if.end19:                                         ; preds = %do.end8
  %9 = load i8, ptr %slow_path.addr, align 1, !dbg !5700, !tbaa !2695, !range !2708, !noundef !2709
  %tobool20 = trunc i8 %9 to i1, !dbg !5700
  %lnot = xor i1 %tobool20, true, !dbg !5700
  %lnot21 = xor i1 %lnot, true, !dbg !5700
  %lnot22 = xor i1 %lnot21, true, !dbg !5700
  %lnot.ext = zext i1 %lnot22 to i32, !dbg !5700
  %conv23 = sext i32 %lnot.ext to i64, !dbg !5700
  %expval = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !5700
  %tobool24 = icmp ne i64 %expval, 0, !dbg !5700
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !5702

if.then25:                                        ; preds = %if.end19
  %10 = load ptr, ptr %tsd.addr, align 8, !dbg !5703, !tbaa !2658
  %call26 = call ptr @tsd_tsdn(ptr noundef %10), !dbg !5705
  %11 = load ptr, ptr %ptr.addr, align 8, !dbg !5706, !tbaa !2658
  %12 = load i64, ptr %usize.addr, align 8, !dbg !5707, !tbaa !2663
  %13 = load ptr, ptr %tcache.addr, align 8, !dbg !5708, !tbaa !2658
  call void @isdalloct(ptr noundef %call26, ptr noundef %11, i64 noundef %12, ptr noundef %13, ptr noundef %alloc_ctx, i1 noundef zeroext false), !dbg !5709
  br label %if.end34, !dbg !5710

if.else:                                          ; preds = %if.end19
  %14 = load i8, ptr %slow_path.addr, align 1, !dbg !5711, !tbaa !2695, !range !2708, !noundef !2709
  %tobool27 = trunc i8 %14 to i1, !dbg !5711
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !5714

land.lhs.true:                                    ; preds = %if.else
  %15 = load i8, ptr @opt_junk_free, align 1, !dbg !5715, !tbaa !2695, !range !2708, !noundef !2709
  %tobool29 = trunc i8 %15 to i1, !dbg !5715
  br i1 %tobool29, label %if.then31, label %if.end32, !dbg !5716

if.then31:                                        ; preds = %land.lhs.true
  %16 = load ptr, ptr @junk_free_callback, align 8, !dbg !5717, !tbaa !2658
  %17 = load ptr, ptr %ptr.addr, align 8, !dbg !5719, !tbaa !2658
  %18 = load i64, ptr %usize.addr, align 8, !dbg !5720, !tbaa !2663
  call void %16(ptr noundef %17, i64 noundef %18), !dbg !5717
  br label %if.end32, !dbg !5721

if.end32:                                         ; preds = %if.then31, %land.lhs.true, %if.else
  %19 = load ptr, ptr %tsd.addr, align 8, !dbg !5722, !tbaa !2658
  %call33 = call ptr @tsd_tsdn(ptr noundef %19), !dbg !5723
  %20 = load ptr, ptr %ptr.addr, align 8, !dbg !5724, !tbaa !2658
  %21 = load i64, ptr %usize.addr, align 8, !dbg !5725, !tbaa !2663
  %22 = load ptr, ptr %tcache.addr, align 8, !dbg !5726, !tbaa !2658
  call void @isdalloct(ptr noundef %call33, ptr noundef %20, i64 noundef %21, ptr noundef %22, ptr noundef %alloc_ctx, i1 noundef zeroext true), !dbg !5727
  br label %if.end34

if.end34:                                         ; preds = %if.end32, %if.then25
  %23 = load ptr, ptr %tsd.addr, align 8, !dbg !5728, !tbaa !2658
  %24 = load i64, ptr %usize.addr, align 8, !dbg !5729, !tbaa !2663
  call void @thread_dalloc_event(ptr noundef %23, i64 noundef %24), !dbg !5730
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5731
  br label %cleanup, !dbg !5731

cleanup:                                          ; preds = %if.end34, %if.then18
  call void @llvm.lifetime.end.p0(i64 1, ptr %fail) #18, !dbg !5731
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !5731
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !5731

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define void @je_sdallocx(ptr noundef %ptr, i64 noundef %size, i32 noundef %flags) #0 !dbg !1837 {
entry:
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1841, metadata !DIExpression()), !dbg !5732
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1842, metadata !DIExpression()), !dbg !5733
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !1843, metadata !DIExpression()), !dbg !5734
  br label %do.body, !dbg !5735

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5736

do.end:                                           ; preds = %do.body
  %0 = load i32, ptr %flags.addr, align 4, !dbg !5738, !tbaa !2791
  %cmp = icmp ne i32 %0, 0, !dbg !5740
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5741

lor.lhs.false:                                    ; preds = %do.end
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !5742, !tbaa !2658
  %2 = load i64, ptr %size.addr, align 8, !dbg !5743, !tbaa !2663
  %call = call zeroext i1 @free_fastpath(ptr noundef %1, i64 noundef %2, i1 noundef zeroext true), !dbg !5744
  br i1 %call, label %if.end, label %if.then, !dbg !5745

if.then:                                          ; preds = %lor.lhs.false, %do.end
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !5746, !tbaa !2658
  %4 = load i64, ptr %size.addr, align 8, !dbg !5748, !tbaa !2663
  %5 = load i32, ptr %flags.addr, align 4, !dbg !5749, !tbaa !2791
  call void @sdallocx_default(ptr noundef %3, i64 noundef %4, i32 noundef %5), !dbg !5750
  br label %if.end, !dbg !5751

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %do.body1, !dbg !5752

do.body1:                                         ; preds = %if.end
  br label %do.end2, !dbg !5753

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !5755
}

; Function Attrs: nounwind uwtable
define hidden void @je_sdallocx_noflags(ptr noundef %ptr, i64 noundef %size) #0 !dbg !1850 {
entry:
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1852, metadata !DIExpression()), !dbg !5756
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1853, metadata !DIExpression()), !dbg !5757
  br label %do.body, !dbg !5758

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5759

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !5761, !tbaa !2658
  %1 = load i64, ptr %size.addr, align 8, !dbg !5763, !tbaa !2663
  %call = call zeroext i1 @free_fastpath(ptr noundef %0, i64 noundef %1, i1 noundef zeroext true), !dbg !5764
  br i1 %call, label %if.end, label %if.then, !dbg !5765

if.then:                                          ; preds = %do.end
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !5766, !tbaa !2658
  %3 = load i64, ptr %size.addr, align 8, !dbg !5768, !tbaa !2663
  call void @sdallocx_default(ptr noundef %2, i64 noundef %3, i32 noundef 0), !dbg !5769
  br label %if.end, !dbg !5770

if.end:                                           ; preds = %if.then, %do.end
  br label %do.body1, !dbg !5771

do.body1:                                         ; preds = %if.end
  br label %do.end2, !dbg !5772

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !5774
}

; Function Attrs: nounwind willreturn memory(read) uwtable
define i64 @je_nallocx(i64 noundef %size, i32 noundef %flags) #10 !dbg !1860 {
entry:
  %retval = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %usize = alloca i64, align 8
  %tsdn = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !1864, metadata !DIExpression()), !dbg !5775
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !1865, metadata !DIExpression()), !dbg !5776
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !5777
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !1866, metadata !DIExpression()), !dbg !5778
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsdn) #18, !dbg !5779
  tail call void @llvm.dbg.declare(metadata ptr %tsdn, metadata !1867, metadata !DIExpression()), !dbg !5780
  br label %do.body, !dbg !5781

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !5782

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5782

do.end:                                           ; preds = %do.cond
  %call = call zeroext i1 @malloc_init(), !dbg !5784
  %lnot = xor i1 %call, true, !dbg !5784
  %lnot1 = xor i1 %lnot, true, !dbg !5784
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5784
  %conv = sext i32 %lnot.ext to i64, !dbg !5784
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5784
  %tobool = icmp ne i64 %expval, 0, !dbg !5784
  br i1 %tobool, label %if.then, label %if.end, !dbg !5786

if.then:                                          ; preds = %do.end
  br label %do.body2, !dbg !5787

do.body2:                                         ; preds = %if.then
  br label %do.cond3, !dbg !5789

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !5789

do.end4:                                          ; preds = %do.cond3
  store i64 0, ptr %retval, align 8, !dbg !5791
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5791

if.end:                                           ; preds = %do.end
  %call5 = call ptr @tsdn_fetch(), !dbg !5792
  store ptr %call5, ptr %tsdn, align 8, !dbg !5793, !tbaa !2658
  %0 = load ptr, ptr %tsdn, align 8, !dbg !5794, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %0), !dbg !5795
  %1 = load ptr, ptr %tsdn, align 8, !dbg !5796, !tbaa !2658
  %2 = load i64, ptr %size.addr, align 8, !dbg !5797, !tbaa !2663
  %3 = load i32, ptr %flags.addr, align 4, !dbg !5798, !tbaa !2791
  %call6 = call i64 @inallocx(ptr noundef %1, i64 noundef %2, i32 noundef %3), !dbg !5799
  store i64 %call6, ptr %usize, align 8, !dbg !5800, !tbaa !2663
  %4 = load i64, ptr %usize, align 8, !dbg !5801, !tbaa !2663
  %cmp = icmp ugt i64 %4, 8070450532247928832, !dbg !5801
  %lnot8 = xor i1 %cmp, true, !dbg !5801
  %lnot10 = xor i1 %lnot8, true, !dbg !5801
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !5801
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !5801
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !5801
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !5801
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !5803

if.then15:                                        ; preds = %if.end
  br label %do.body16, !dbg !5804

do.body16:                                        ; preds = %if.then15
  br label %do.cond17, !dbg !5806

do.cond17:                                        ; preds = %do.body16
  br label %do.end18, !dbg !5806

do.end18:                                         ; preds = %do.cond17
  store i64 0, ptr %retval, align 8, !dbg !5808
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5808

if.end19:                                         ; preds = %if.end
  %5 = load ptr, ptr %tsdn, align 8, !dbg !5809, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %5), !dbg !5810
  br label %do.body20, !dbg !5811

do.body20:                                        ; preds = %if.end19
  br label %do.cond21, !dbg !5812

do.cond21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !5812

do.end22:                                         ; preds = %do.cond21
  %6 = load i64, ptr %usize, align 8, !dbg !5814, !tbaa !2663
  store i64 %6, ptr %retval, align 8, !dbg !5815
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5815

cleanup:                                          ; preds = %do.end22, %do.end18, %do.end4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsdn) #18, !dbg !5816
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !5816
  %7 = load i64, ptr %retval, align 8, !dbg !5816
  ret i64 %7, !dbg !5816
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @malloc_init() #3 !dbg !5817 {
entry:
  %retval = alloca i1, align 1
  %call = call zeroext i1 @malloc_initialized(), !dbg !5820
  %lnot = xor i1 %call, true, !dbg !5820
  %lnot1 = xor i1 %lnot, true, !dbg !5820
  %lnot2 = xor i1 %lnot1, true, !dbg !5820
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5820
  %conv = sext i32 %lnot.ext to i64, !dbg !5820
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5820
  %tobool = icmp ne i64 %expval, 0, !dbg !5820
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5822

land.lhs.true:                                    ; preds = %entry
  %call3 = call zeroext i1 @malloc_init_hard(), !dbg !5823
  br i1 %call3, label %if.then, label %if.end, !dbg !5824

if.then:                                          ; preds = %land.lhs.true
  store i1 true, ptr %retval, align 1, !dbg !5825
  br label %return, !dbg !5825

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, ptr %retval, align 1, !dbg !5827
  br label %return, !dbg !5827

return:                                           ; preds = %if.end, %if.then
  %0 = load i1, ptr %retval, align 1, !dbg !5828
  ret i1 %0, !dbg !5828
}

; Function Attrs: nounwind uwtable
define i32 @je_mallctl(ptr noundef %name, ptr noundef %oldp, ptr noundef %oldlenp, ptr noundef %newp, i64 noundef %newlen) #0 !dbg !1876 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca ptr, align 8
  %oldp.addr = alloca ptr, align 8
  %oldlenp.addr = alloca ptr, align 8
  %newp.addr = alloca ptr, align 8
  %newlen.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %tsd = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !1880, metadata !DIExpression()), !dbg !5829
  store ptr %oldp, ptr %oldp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %oldp.addr, metadata !1881, metadata !DIExpression()), !dbg !5830
  store ptr %oldlenp, ptr %oldlenp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %oldlenp.addr, metadata !1882, metadata !DIExpression()), !dbg !5831
  store ptr %newp, ptr %newp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %newp.addr, metadata !1883, metadata !DIExpression()), !dbg !5832
  store i64 %newlen, ptr %newlen.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %newlen.addr, metadata !1884, metadata !DIExpression()), !dbg !5833
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #18, !dbg !5834
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1885, metadata !DIExpression()), !dbg !5835
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !5836
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !1886, metadata !DIExpression()), !dbg !5837
  br label %do.body, !dbg !5838

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !5839

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5839

do.end:                                           ; preds = %do.cond
  %call = call zeroext i1 @malloc_init(), !dbg !5841
  %lnot = xor i1 %call, true, !dbg !5841
  %lnot1 = xor i1 %lnot, true, !dbg !5841
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5841
  %conv = sext i32 %lnot.ext to i64, !dbg !5841
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5841
  %tobool = icmp ne i64 %expval, 0, !dbg !5841
  br i1 %tobool, label %if.then, label %if.end, !dbg !5843

if.then:                                          ; preds = %do.end
  br label %do.body2, !dbg !5844

do.body2:                                         ; preds = %if.then
  br label %do.cond3, !dbg !5846

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !5846

do.end4:                                          ; preds = %do.cond3
  store i32 11, ptr %retval, align 4, !dbg !5848
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5848

if.end:                                           ; preds = %do.end
  %call5 = call ptr @tsd_fetch(), !dbg !5849
  store ptr %call5, ptr %tsd, align 8, !dbg !5850, !tbaa !2658
  %0 = load ptr, ptr %tsd, align 8, !dbg !5851, !tbaa !2658
  %call6 = call ptr @tsd_tsdn(ptr noundef %0), !dbg !5852
  call void @check_entry_exit_locking(ptr noundef %call6), !dbg !5853
  %1 = load ptr, ptr %tsd, align 8, !dbg !5854, !tbaa !2658
  %2 = load ptr, ptr %name.addr, align 8, !dbg !5855, !tbaa !2658
  %3 = load ptr, ptr %oldp.addr, align 8, !dbg !5856, !tbaa !2658
  %4 = load ptr, ptr %oldlenp.addr, align 8, !dbg !5857, !tbaa !2658
  %5 = load ptr, ptr %newp.addr, align 8, !dbg !5858, !tbaa !2658
  %6 = load i64, ptr %newlen.addr, align 8, !dbg !5859, !tbaa !2663
  %call7 = call i32 @ctl_byname(ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i64 noundef %6), !dbg !5860
  store i32 %call7, ptr %ret, align 4, !dbg !5861, !tbaa !2791
  %7 = load ptr, ptr %tsd, align 8, !dbg !5862, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %7), !dbg !5863
  call void @check_entry_exit_locking(ptr noundef %call8), !dbg !5864
  br label %do.body9, !dbg !5865

do.body9:                                         ; preds = %if.end
  br label %do.cond10, !dbg !5866

do.cond10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !5866

do.end11:                                         ; preds = %do.cond10
  %8 = load i32, ptr %ret, align 4, !dbg !5868, !tbaa !2791
  store i32 %8, ptr %retval, align 4, !dbg !5869
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5869

cleanup:                                          ; preds = %do.end11, %do.end4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !5870
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #18, !dbg !5870
  %9 = load i32, ptr %retval, align 4, !dbg !5870
  ret i32 %9, !dbg !5870
}

declare !dbg !5871 i32 @ctl_byname(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef) #5

; Function Attrs: nounwind uwtable
define i32 @je_mallctlnametomib(ptr noundef %name, ptr noundef %mibp, ptr noundef %miblenp) #0 !dbg !1900 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca ptr, align 8
  %mibp.addr = alloca ptr, align 8
  %miblenp.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %tsd = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !1904, metadata !DIExpression()), !dbg !5875
  store ptr %mibp, ptr %mibp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mibp.addr, metadata !1905, metadata !DIExpression()), !dbg !5876
  store ptr %miblenp, ptr %miblenp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %miblenp.addr, metadata !1906, metadata !DIExpression()), !dbg !5877
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #18, !dbg !5878
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1907, metadata !DIExpression()), !dbg !5879
  br label %do.body, !dbg !5880

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !5881

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5881

do.end:                                           ; preds = %do.cond
  %call = call zeroext i1 @malloc_init(), !dbg !5883
  %lnot = xor i1 %call, true, !dbg !5883
  %lnot1 = xor i1 %lnot, true, !dbg !5883
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5883
  %conv = sext i32 %lnot.ext to i64, !dbg !5883
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5883
  %tobool = icmp ne i64 %expval, 0, !dbg !5883
  br i1 %tobool, label %if.then, label %if.end, !dbg !5885

if.then:                                          ; preds = %do.end
  br label %do.body2, !dbg !5886

do.body2:                                         ; preds = %if.then
  br label %do.cond3, !dbg !5888

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !5888

do.end4:                                          ; preds = %do.cond3
  store i32 11, ptr %retval, align 4, !dbg !5890
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5890

if.end:                                           ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !5891
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !1908, metadata !DIExpression()), !dbg !5892
  %call5 = call ptr @tsd_fetch(), !dbg !5893
  store ptr %call5, ptr %tsd, align 8, !dbg !5892, !tbaa !2658
  %0 = load ptr, ptr %tsd, align 8, !dbg !5894, !tbaa !2658
  %call6 = call ptr @tsd_tsdn(ptr noundef %0), !dbg !5895
  call void @check_entry_exit_locking(ptr noundef %call6), !dbg !5896
  %1 = load ptr, ptr %tsd, align 8, !dbg !5897, !tbaa !2658
  %2 = load ptr, ptr %name.addr, align 8, !dbg !5898, !tbaa !2658
  %3 = load ptr, ptr %mibp.addr, align 8, !dbg !5899, !tbaa !2658
  %4 = load ptr, ptr %miblenp.addr, align 8, !dbg !5900, !tbaa !2658
  %call7 = call i32 @ctl_nametomib(ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4), !dbg !5901
  store i32 %call7, ptr %ret, align 4, !dbg !5902, !tbaa !2791
  %5 = load ptr, ptr %tsd, align 8, !dbg !5903, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !5904
  call void @check_entry_exit_locking(ptr noundef %call8), !dbg !5905
  br label %do.body9, !dbg !5906

do.body9:                                         ; preds = %if.end
  br label %do.cond10, !dbg !5907

do.cond10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !5907

do.end11:                                         ; preds = %do.cond10
  %6 = load i32, ptr %ret, align 4, !dbg !5909, !tbaa !2791
  store i32 %6, ptr %retval, align 4, !dbg !5910
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !5911
  br label %cleanup

cleanup:                                          ; preds = %do.end11, %do.end4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #18, !dbg !5911
  %7 = load i32, ptr %retval, align 4, !dbg !5911
  ret i32 %7, !dbg !5911
}

declare !dbg !5912 i32 @ctl_nametomib(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define i32 @je_mallctlbymib(ptr noundef %mib, i64 noundef %miblen, ptr noundef %oldp, ptr noundef %oldlenp, ptr noundef %newp, i64 noundef %newlen) #0 !dbg !1922 {
entry:
  %retval = alloca i32, align 4
  %mib.addr = alloca ptr, align 8
  %miblen.addr = alloca i64, align 8
  %oldp.addr = alloca ptr, align 8
  %oldlenp.addr = alloca ptr, align 8
  %newp.addr = alloca ptr, align 8
  %newlen.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %tsd = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mib, ptr %mib.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mib.addr, metadata !1928, metadata !DIExpression()), !dbg !5915
  store i64 %miblen, ptr %miblen.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %miblen.addr, metadata !1929, metadata !DIExpression()), !dbg !5916
  store ptr %oldp, ptr %oldp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %oldp.addr, metadata !1930, metadata !DIExpression()), !dbg !5917
  store ptr %oldlenp, ptr %oldlenp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %oldlenp.addr, metadata !1931, metadata !DIExpression()), !dbg !5918
  store ptr %newp, ptr %newp.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %newp.addr, metadata !1932, metadata !DIExpression()), !dbg !5919
  store i64 %newlen, ptr %newlen.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %newlen.addr, metadata !1933, metadata !DIExpression()), !dbg !5920
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #18, !dbg !5921
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1934, metadata !DIExpression()), !dbg !5922
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !5923
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !1935, metadata !DIExpression()), !dbg !5924
  br label %do.body, !dbg !5925

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !5926

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5926

do.end:                                           ; preds = %do.cond
  %call = call zeroext i1 @malloc_init(), !dbg !5928
  %lnot = xor i1 %call, true, !dbg !5928
  %lnot1 = xor i1 %lnot, true, !dbg !5928
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5928
  %conv = sext i32 %lnot.ext to i64, !dbg !5928
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5928
  %tobool = icmp ne i64 %expval, 0, !dbg !5928
  br i1 %tobool, label %if.then, label %if.end, !dbg !5930

if.then:                                          ; preds = %do.end
  br label %do.body2, !dbg !5931

do.body2:                                         ; preds = %if.then
  br label %do.cond3, !dbg !5933

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !5933

do.end4:                                          ; preds = %do.cond3
  store i32 11, ptr %retval, align 4, !dbg !5935
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5935

if.end:                                           ; preds = %do.end
  %call5 = call ptr @tsd_fetch(), !dbg !5936
  store ptr %call5, ptr %tsd, align 8, !dbg !5937, !tbaa !2658
  %0 = load ptr, ptr %tsd, align 8, !dbg !5938, !tbaa !2658
  %call6 = call ptr @tsd_tsdn(ptr noundef %0), !dbg !5939
  call void @check_entry_exit_locking(ptr noundef %call6), !dbg !5940
  %1 = load ptr, ptr %tsd, align 8, !dbg !5941, !tbaa !2658
  %2 = load ptr, ptr %mib.addr, align 8, !dbg !5942, !tbaa !2658
  %3 = load i64, ptr %miblen.addr, align 8, !dbg !5943, !tbaa !2663
  %4 = load ptr, ptr %oldp.addr, align 8, !dbg !5944, !tbaa !2658
  %5 = load ptr, ptr %oldlenp.addr, align 8, !dbg !5945, !tbaa !2658
  %6 = load ptr, ptr %newp.addr, align 8, !dbg !5946, !tbaa !2658
  %7 = load i64, ptr %newlen.addr, align 8, !dbg !5947, !tbaa !2663
  %call7 = call i32 @ctl_bymib(ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, i64 noundef %7), !dbg !5948
  store i32 %call7, ptr %ret, align 4, !dbg !5949, !tbaa !2791
  %8 = load ptr, ptr %tsd, align 8, !dbg !5950, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %8), !dbg !5951
  call void @check_entry_exit_locking(ptr noundef %call8), !dbg !5952
  br label %do.body9, !dbg !5953

do.body9:                                         ; preds = %if.end
  br label %do.cond10, !dbg !5954

do.cond10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !5954

do.end11:                                         ; preds = %do.cond10
  %9 = load i32, ptr %ret, align 4, !dbg !5956, !tbaa !2791
  store i32 %9, ptr %retval, align 4, !dbg !5957
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5957

cleanup:                                          ; preds = %do.end11, %do.end4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !5958
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #18, !dbg !5958
  %10 = load i32, ptr %retval, align 4, !dbg !5958
  ret i32 %10, !dbg !5958
}

declare !dbg !5959 i32 @ctl_bymib(ptr noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef) #5

; Function Attrs: nounwind uwtable
define void @je_malloc_stats_print(ptr noundef %write_cb, ptr noundef %cbopaque, ptr noundef %opts) #0 !dbg !1952 {
entry:
  %write_cb.addr = alloca ptr, align 8
  %cbopaque.addr = alloca ptr, align 8
  %opts.addr = alloca ptr, align 8
  %tsdn = alloca ptr, align 8
  %buf_writer = alloca %struct.buf_writer_t, align 8
  store ptr %write_cb, ptr %write_cb.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %write_cb.addr, metadata !1959, metadata !DIExpression()), !dbg !5962
  store ptr %cbopaque, ptr %cbopaque.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %cbopaque.addr, metadata !1960, metadata !DIExpression()), !dbg !5963
  store ptr %opts, ptr %opts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %opts.addr, metadata !1961, metadata !DIExpression()), !dbg !5964
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsdn) #18, !dbg !5965
  tail call void @llvm.dbg.declare(metadata ptr %tsdn, metadata !1962, metadata !DIExpression()), !dbg !5966
  br label %do.body, !dbg !5967

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !5968

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !5968

do.end:                                           ; preds = %do.cond
  %call = call ptr @tsdn_fetch(), !dbg !5970
  store ptr %call, ptr %tsdn, align 8, !dbg !5971, !tbaa !2658
  %0 = load ptr, ptr %tsdn, align 8, !dbg !5972, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %0), !dbg !5973
  call void @llvm.lifetime.start.p0(i64 48, ptr %buf_writer) #18, !dbg !5974
  tail call void @llvm.dbg.declare(metadata ptr %buf_writer, metadata !1963, metadata !DIExpression()), !dbg !5975
  %1 = load ptr, ptr %tsdn, align 8, !dbg !5976, !tbaa !2658
  %2 = load ptr, ptr %write_cb.addr, align 8, !dbg !5977, !tbaa !2658
  %3 = load ptr, ptr %cbopaque.addr, align 8, !dbg !5978, !tbaa !2658
  %call1 = call zeroext i1 @buf_writer_init(ptr noundef %1, ptr noundef %buf_writer, ptr noundef %2, ptr noundef %3, ptr noundef null, i64 noundef 65536), !dbg !5979
  %4 = load ptr, ptr %opts.addr, align 8, !dbg !5980, !tbaa !2658
  call void @stats_print(ptr noundef @buf_writer_cb, ptr noundef %buf_writer, ptr noundef %4), !dbg !5981
  %5 = load ptr, ptr %tsdn, align 8, !dbg !5982, !tbaa !2658
  call void @buf_writer_terminate(ptr noundef %5, ptr noundef %buf_writer), !dbg !5983
  call void @llvm.lifetime.end.p0(i64 48, ptr %buf_writer) #18, !dbg !5984
  %6 = load ptr, ptr %tsdn, align 8, !dbg !5985, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %6), !dbg !5986
  br label %do.body2, !dbg !5987

do.body2:                                         ; preds = %do.end
  br label %do.cond3, !dbg !5988

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !5988

do.end4:                                          ; preds = %do.cond3
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsdn) #18, !dbg !5990
  ret void, !dbg !5990
}

declare !dbg !5991 zeroext i1 @buf_writer_init(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef) #5

declare !dbg !5995 void @stats_print(ptr noundef, ptr noundef, ptr noundef) #5

declare void @buf_writer_cb(ptr noundef, ptr noundef) #5

declare !dbg !5999 void @buf_writer_terminate(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define i64 @je_malloc_usable_size(ptr noundef %ptr) #0 !dbg !1989 {
entry:
  %ptr.addr = alloca ptr, align 8
  %ret = alloca i64, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !1993, metadata !DIExpression()), !dbg !6002
  br label %do.body, !dbg !6003

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6004

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !6006
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1994, metadata !DIExpression()), !dbg !6007
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !6008, !tbaa !2658
  %call = call i64 @je_malloc_usable_size_impl(ptr noundef %0), !dbg !6009
  store i64 %call, ptr %ret, align 8, !dbg !6007, !tbaa !2663
  br label %do.body1, !dbg !6010

do.body1:                                         ; preds = %do.end
  br label %do.cond, !dbg !6011

do.cond:                                          ; preds = %do.body1
  br label %do.end2, !dbg !6011

do.end2:                                          ; preds = %do.cond
  %1 = load i64, ptr %ret, align 8, !dbg !6013, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !6014
  ret i64 %1, !dbg !6015
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @je_malloc_usable_size_impl(ptr noundef %ptr) #3 !dbg !6016 {
entry:
  %ptr.addr = alloca ptr, align 8
  %tsdn = alloca ptr, align 8
  %ret = alloca i64, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !6018, metadata !DIExpression()), !dbg !6021
  br label %do.body, !dbg !6022

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6023

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsdn) #18, !dbg !6025
  tail call void @llvm.dbg.declare(metadata ptr %tsdn, metadata !6019, metadata !DIExpression()), !dbg !6026
  %call = call ptr @tsdn_fetch(), !dbg !6027
  store ptr %call, ptr %tsdn, align 8, !dbg !6026, !tbaa !2658
  %0 = load ptr, ptr %tsdn, align 8, !dbg !6028, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %0), !dbg !6029
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !6030
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !6020, metadata !DIExpression()), !dbg !6031
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !6032, !tbaa !2658
  %cmp = icmp eq ptr %1, null, !dbg !6032
  %lnot = xor i1 %cmp, true, !dbg !6032
  %lnot1 = xor i1 %lnot, true, !dbg !6032
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6032
  %conv = sext i32 %lnot.ext to i64, !dbg !6032
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6032
  %tobool = icmp ne i64 %expval, 0, !dbg !6032
  br i1 %tobool, label %if.then, label %if.else, !dbg !6034

if.then:                                          ; preds = %do.end
  store i64 0, ptr %ret, align 8, !dbg !6035, !tbaa !2663
  br label %if.end, !dbg !6037

if.else:                                          ; preds = %do.end
  %2 = load ptr, ptr %tsdn, align 8, !dbg !6038, !tbaa !2658
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !6042, !tbaa !2658
  %call2 = call i64 @isalloc(ptr noundef %2, ptr noundef %3), !dbg !6043
  store i64 %call2, ptr %ret, align 8, !dbg !6044, !tbaa !2663
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load ptr, ptr %tsdn, align 8, !dbg !6045, !tbaa !2658
  call void @check_entry_exit_locking(ptr noundef %4), !dbg !6046
  %5 = load i64, ptr %ret, align 8, !dbg !6047, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !6048
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsdn) #18, !dbg !6048
  ret i64 %5, !dbg !6049
}

; Function Attrs: nounwind uwtable
define hidden i64 @batch_alloc(ptr noundef %ptrs, i64 noundef %num, i64 noundef %size, i32 noundef %flags) #0 !dbg !2003 {
entry:
  %retval = alloca i64, align 8
  %ptrs.addr = alloca ptr, align 8
  %num.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %tsd = alloca ptr, align 8
  %filled = alloca i64, align 8
  %alignment = alloca i64, align 8
  %usize = alloca i64, align 8
  %ind = alloca i32, align 4
  %zero = alloca i8, align 1
  %bin = alloca ptr, align 8
  %arena = alloca ptr, align 8
  %nregs = alloca i64, align 8
  %batch = alloca i64, align 8
  %surplus = alloca i64, align 8
  %prof_sample_event = alloca i8, align 1
  %progress = alloca i64, align 8
  %arena_ind = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %arena_batch = alloca i64, align 8
  %n = alloca i64, align 8
  %tcache_ind = alloca i32, align 4
  %tcache = alloca ptr, align 8
  %bin_batch = alloca i64, align 8
  %n110 = alloca i64, align 8
  %i = alloca i64, align 8
  %p = alloca ptr, align 8
  store ptr %ptrs, ptr %ptrs.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptrs.addr, metadata !2007, metadata !DIExpression()), !dbg !6050
  store i64 %num, ptr %num.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %num.addr, metadata !2008, metadata !DIExpression()), !dbg !6051
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !2009, metadata !DIExpression()), !dbg !6052
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !2010, metadata !DIExpression()), !dbg !6053
  br label %do.body, !dbg !6054

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6055

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !6057
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !2011, metadata !DIExpression()), !dbg !6058
  %call = call ptr @tsd_fetch(), !dbg !6059
  store ptr %call, ptr %tsd, align 8, !dbg !6058, !tbaa !2658
  %0 = load ptr, ptr %tsd, align 8, !dbg !6060, !tbaa !2658
  %call1 = call ptr @tsd_tsdn(ptr noundef %0), !dbg !6061
  call void @check_entry_exit_locking(ptr noundef %call1), !dbg !6062
  call void @llvm.lifetime.start.p0(i64 8, ptr %filled) #18, !dbg !6063
  tail call void @llvm.dbg.declare(metadata ptr %filled, metadata !2012, metadata !DIExpression()), !dbg !6064
  store i64 0, ptr %filled, align 8, !dbg !6064, !tbaa !2663
  %1 = load ptr, ptr %tsd, align 8, !dbg !6065, !tbaa !2658
  %cmp = icmp eq ptr %1, null, !dbg !6065
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6065

lor.rhs:                                          ; preds = %do.end
  %2 = load ptr, ptr %tsd, align 8, !dbg !6065, !tbaa !2658
  %call2 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %2), !dbg !6065
  %conv = sext i8 %call2 to i32, !dbg !6065
  %cmp3 = icmp sgt i32 %conv, 0, !dbg !6065
  br label %lor.end, !dbg !6065

lor.end:                                          ; preds = %lor.rhs, %do.end
  %3 = phi i1 [ true, %do.end ], [ %cmp3, %lor.rhs ]
  %lnot = xor i1 %3, true, !dbg !6065
  %lnot5 = xor i1 %lnot, true, !dbg !6065
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6065
  %conv6 = sext i32 %lnot.ext to i64, !dbg !6065
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 0), !dbg !6065
  %tobool = icmp ne i64 %expval, 0, !dbg !6065
  br i1 %tobool, label %if.then, label %if.end, !dbg !6067

if.then:                                          ; preds = %lor.end
  br label %label_done, !dbg !6068

if.end:                                           ; preds = %lor.end
  tail call void @llvm.dbg.declare(metadata ptr %alignment, metadata !2013, metadata !DIExpression()), !dbg !6070
  %4 = load i32, ptr %flags.addr, align 4, !dbg !6071, !tbaa !2791
  %and = and i32 %4, 63, !dbg !6071
  %sh_prom = zext i32 %and to i64, !dbg !6071
  %shl = shl i64 1, %sh_prom, !dbg !6071
  %and7 = and i64 %shl, -2, !dbg !6071
  store i64 %and7, ptr %alignment, align 8, !dbg !6070, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !2014, metadata !DIExpression()), !dbg !6072
  %5 = load i64, ptr %size.addr, align 8, !dbg !6073, !tbaa !2663
  %6 = load i64, ptr %alignment, align 8, !dbg !6075, !tbaa !2663
  %call8 = call zeroext i1 @aligned_usize_get(i64 noundef %5, i64 noundef %6, ptr noundef %usize, ptr noundef null, i1 noundef zeroext false), !dbg !6076
  br i1 %call8, label %if.then9, label %if.end10, !dbg !6077

if.then9:                                         ; preds = %if.end
  br label %label_done, !dbg !6078

if.end10:                                         ; preds = %if.end
  tail call void @llvm.dbg.declare(metadata ptr %ind, metadata !2015, metadata !DIExpression()), !dbg !6080
  %7 = load i64, ptr %usize, align 8, !dbg !6081, !tbaa !2663
  %call11 = call i32 @sz_size2index(i64 noundef %7), !dbg !6082
  store i32 %call11, ptr %ind, align 4, !dbg !6080, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %zero, metadata !2016, metadata !DIExpression()), !dbg !6083
  %8 = load i32, ptr %flags.addr, align 4, !dbg !6084, !tbaa !2791
  %and12 = and i32 %8, 64, !dbg !6084
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6084
  %call14 = call zeroext i1 @zero_get(i1 noundef zeroext %tobool13, i1 noundef zeroext true), !dbg !6085
  %frombool = zext i1 %call14 to i8, !dbg !6083
  store i8 %frombool, ptr %zero, align 1, !dbg !6083, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %bin, metadata !2017, metadata !DIExpression()), !dbg !6086
  store ptr null, ptr %bin, align 8, !dbg !6086, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !2018, metadata !DIExpression()), !dbg !6087
  store ptr null, ptr %arena, align 8, !dbg !6087, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %nregs, metadata !2019, metadata !DIExpression()), !dbg !6088
  store i64 0, ptr %nregs, align 8, !dbg !6088, !tbaa !2663
  %9 = load i32, ptr %ind, align 4, !dbg !6089, !tbaa !2791
  %conv15 = zext i32 %9 to i64, !dbg !6089
  %cmp16 = icmp ult i64 %conv15, 36, !dbg !6089
  %lnot18 = xor i1 %cmp16, true, !dbg !6089
  %lnot20 = xor i1 %lnot18, true, !dbg !6089
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !6089
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !6089
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 1), !dbg !6089
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !6089
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !6091

if.then25:                                        ; preds = %if.end10
  %10 = load i32, ptr %ind, align 4, !dbg !6092, !tbaa !2791
  %idxprom = zext i32 %10 to i64, !dbg !6094
  %arrayidx = getelementptr inbounds [36 x %struct.bin_info_s], ptr @bin_infos, i64 0, i64 %idxprom, !dbg !6094
  %nregs26 = getelementptr inbounds %struct.bin_info_s, ptr %arrayidx, i32 0, i32 2, !dbg !6095
  %11 = load i32, ptr %nregs26, align 8, !dbg !6095, !tbaa !6096
  %conv27 = zext i32 %11 to i64, !dbg !6094
  store i64 %conv27, ptr %nregs, align 8, !dbg !6097, !tbaa !2663
  br label %do.body28, !dbg !6098

do.body28:                                        ; preds = %if.then25
  br label %do.cond, !dbg !6099

do.cond:                                          ; preds = %do.body28
  br label %do.end29, !dbg !6099

do.end29:                                         ; preds = %do.cond
  br label %if.end30, !dbg !6101

if.end30:                                         ; preds = %do.end29, %if.end10
  br label %while.cond, !dbg !6102

while.cond:                                       ; preds = %cleanup.cont155, %if.end30
  %12 = load i64, ptr %filled, align 8, !dbg !6103, !tbaa !2663
  %13 = load i64, ptr %num.addr, align 8, !dbg !6104, !tbaa !2663
  %cmp31 = icmp ult i64 %12, %13, !dbg !6105
  br i1 %cmp31, label %while.body, label %while.end, !dbg !6102

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %batch) #18, !dbg !6106
  tail call void @llvm.dbg.declare(metadata ptr %batch, metadata !2020, metadata !DIExpression()), !dbg !6107
  %14 = load i64, ptr %num.addr, align 8, !dbg !6108, !tbaa !2663
  %15 = load i64, ptr %filled, align 8, !dbg !6109, !tbaa !2663
  %sub = sub i64 %14, %15, !dbg !6110
  store i64 %sub, ptr %batch, align 8, !dbg !6107, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %surplus) #18, !dbg !6111
  tail call void @llvm.dbg.declare(metadata ptr %surplus, metadata !2022, metadata !DIExpression()), !dbg !6112
  store i64 -1, ptr %surplus, align 8, !dbg !6112, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 1, ptr %prof_sample_event) #18, !dbg !6113
  tail call void @llvm.dbg.declare(metadata ptr %prof_sample_event, metadata !2023, metadata !DIExpression()), !dbg !6114
  store i8 0, ptr %prof_sample_event, align 1, !dbg !6114, !tbaa !2695
  %16 = load i8, ptr %prof_sample_event, align 1, !dbg !6115, !tbaa !2695, !range !2708, !noundef !2709
  %tobool33 = trunc i8 %16 to i1, !dbg !6115
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !6117

if.then34:                                        ; preds = %while.body
  %17 = load i64, ptr %surplus, align 8, !dbg !6118, !tbaa !2663
  %18 = load i64, ptr %usize, align 8, !dbg !6120, !tbaa !2663
  %div = udiv i64 %17, %18, !dbg !6121
  %add = add i64 %div, 1, !dbg !6122
  %19 = load i64, ptr %batch, align 8, !dbg !6123, !tbaa !2663
  %sub35 = sub i64 %19, %add, !dbg !6123
  store i64 %sub35, ptr %batch, align 8, !dbg !6123, !tbaa !2663
  %20 = load ptr, ptr %tsd, align 8, !dbg !6124, !tbaa !2658
  %21 = load i64, ptr %batch, align 8, !dbg !6125, !tbaa !2663
  %22 = load i64, ptr %usize, align 8, !dbg !6126, !tbaa !2663
  call void @batch_alloc_prof_sample_assert(ptr noundef %20, i64 noundef %21, i64 noundef %22), !dbg !6127
  br label %if.end36, !dbg !6128

if.end36:                                         ; preds = %if.then34, %while.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %progress) #18, !dbg !6129
  tail call void @llvm.dbg.declare(metadata ptr %progress, metadata !2024, metadata !DIExpression()), !dbg !6130
  store i64 0, ptr %progress, align 8, !dbg !6130, !tbaa !2663
  %23 = load i32, ptr %ind, align 4, !dbg !6131, !tbaa !2791
  %conv37 = zext i32 %23 to i64, !dbg !6131
  %cmp38 = icmp ult i64 %conv37, 36, !dbg !6131
  %lnot40 = xor i1 %cmp38, true, !dbg !6131
  %lnot42 = xor i1 %lnot40, true, !dbg !6131
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !6131
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !6131
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 1), !dbg !6131
  %tobool46 = icmp ne i64 %expval45, 0, !dbg !6131
  br i1 %tobool46, label %land.lhs.true, label %if.end80, !dbg !6132

land.lhs.true:                                    ; preds = %if.end36
  %24 = load i64, ptr %batch, align 8, !dbg !6133, !tbaa !2663
  %25 = load i64, ptr %nregs, align 8, !dbg !6134, !tbaa !2663
  %cmp47 = icmp uge i64 %24, %25, !dbg !6135
  br i1 %cmp47, label %if.then49, label %if.end80, !dbg !6136

if.then49:                                        ; preds = %land.lhs.true
  %26 = load ptr, ptr %arena, align 8, !dbg !6137, !tbaa !2658
  %cmp50 = icmp eq ptr %26, null, !dbg !6138
  br i1 %cmp50, label %if.then52, label %if.end73, !dbg !6139

if.then52:                                        ; preds = %if.then49
  call void @llvm.lifetime.start.p0(i64 4, ptr %arena_ind) #18, !dbg !6140
  tail call void @llvm.dbg.declare(metadata ptr %arena_ind, metadata !2025, metadata !DIExpression()), !dbg !6141
  %27 = load i32, ptr %flags.addr, align 4, !dbg !6142, !tbaa !2791
  %call53 = call i32 @mallocx_arena_get(i32 noundef %27), !dbg !6143
  store i32 %call53, ptr %arena_ind, align 4, !dbg !6141, !tbaa !2791
  %28 = load ptr, ptr %tsd, align 8, !dbg !6144, !tbaa !2658
  %29 = load i32, ptr %arena_ind, align 4, !dbg !6146, !tbaa !2791
  %call54 = call zeroext i1 @arena_get_from_ind(ptr noundef %28, i32 noundef %29, ptr noundef %arena), !dbg !6147
  br i1 %call54, label %if.then55, label %if.end56, !dbg !6148

if.then55:                                        ; preds = %if.then52
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6149

if.end56:                                         ; preds = %if.then52
  %30 = load ptr, ptr %arena, align 8, !dbg !6151, !tbaa !2658
  %cmp57 = icmp eq ptr %30, null, !dbg !6153
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !6154

if.then59:                                        ; preds = %if.end56
  %31 = load ptr, ptr %tsd, align 8, !dbg !6155, !tbaa !2658
  %call60 = call ptr @arena_choose(ptr noundef %31, ptr noundef null), !dbg !6157
  store ptr %call60, ptr %arena, align 8, !dbg !6158, !tbaa !2658
  br label %if.end61, !dbg !6159

if.end61:                                         ; preds = %if.then59, %if.end56
  %32 = load ptr, ptr %arena, align 8, !dbg !6160, !tbaa !2658
  %cmp62 = icmp eq ptr %32, null, !dbg !6160
  %lnot64 = xor i1 %cmp62, true, !dbg !6160
  %lnot66 = xor i1 %lnot64, true, !dbg !6160
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !6160
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !6160
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 0), !dbg !6160
  %tobool70 = icmp ne i64 %expval69, 0, !dbg !6160
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !6162

if.then71:                                        ; preds = %if.end61
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6163

if.end72:                                         ; preds = %if.end61
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6165
  br label %cleanup, !dbg !6165

cleanup:                                          ; preds = %if.then71, %if.then55, %if.end72
  call void @llvm.lifetime.end.p0(i64 4, ptr %arena_ind) #18, !dbg !6165
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup150 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end73, !dbg !6166

if.end73:                                         ; preds = %cleanup.cont, %if.then49
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena_batch) #18, !dbg !6167
  tail call void @llvm.dbg.declare(metadata ptr %arena_batch, metadata !2030, metadata !DIExpression()), !dbg !6168
  %33 = load i64, ptr %batch, align 8, !dbg !6169, !tbaa !2663
  %34 = load i64, ptr %batch, align 8, !dbg !6170, !tbaa !2663
  %35 = load i64, ptr %nregs, align 8, !dbg !6171, !tbaa !2663
  %rem = urem i64 %34, %35, !dbg !6172
  %sub74 = sub i64 %33, %rem, !dbg !6173
  store i64 %sub74, ptr %arena_batch, align 8, !dbg !6168, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #18, !dbg !6174
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !2031, metadata !DIExpression()), !dbg !6175
  %36 = load ptr, ptr %tsd, align 8, !dbg !6176, !tbaa !2658
  %call75 = call ptr @tsd_tsdn(ptr noundef %36), !dbg !6177
  %37 = load ptr, ptr %arena, align 8, !dbg !6178, !tbaa !2658
  %38 = load i32, ptr %ind, align 4, !dbg !6179, !tbaa !2791
  %39 = load ptr, ptr %ptrs.addr, align 8, !dbg !6180, !tbaa !2658
  %40 = load i64, ptr %filled, align 8, !dbg !6181, !tbaa !2663
  %add.ptr = getelementptr inbounds ptr, ptr %39, i64 %40, !dbg !6182
  %41 = load i64, ptr %arena_batch, align 8, !dbg !6183, !tbaa !2663
  %42 = load i8, ptr %zero, align 1, !dbg !6184, !tbaa !2695, !range !2708, !noundef !2709
  %tobool76 = trunc i8 %42 to i1, !dbg !6184
  %call77 = call i64 @arena_fill_small_fresh(ptr noundef %call75, ptr noundef %37, i32 noundef %38, ptr noundef %add.ptr, i64 noundef %41, i1 noundef zeroext %tobool76), !dbg !6185
  store i64 %call77, ptr %n, align 8, !dbg !6175, !tbaa !2663
  %43 = load i64, ptr %n, align 8, !dbg !6186, !tbaa !2663
  %44 = load i64, ptr %progress, align 8, !dbg !6187, !tbaa !2663
  %add78 = add i64 %44, %43, !dbg !6187
  store i64 %add78, ptr %progress, align 8, !dbg !6187, !tbaa !2663
  %45 = load i64, ptr %n, align 8, !dbg !6188, !tbaa !2663
  %46 = load i64, ptr %filled, align 8, !dbg !6189, !tbaa !2663
  %add79 = add i64 %46, %45, !dbg !6189
  store i64 %add79, ptr %filled, align 8, !dbg !6189, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #18, !dbg !6190
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena_batch) #18, !dbg !6190
  br label %if.end80, !dbg !6191

if.end80:                                         ; preds = %if.end73, %land.lhs.true, %if.end36
  %47 = load i32, ptr %ind, align 4, !dbg !6192, !tbaa !2791
  %48 = load i32, ptr @nhbins, align 4, !dbg !6192, !tbaa !2791
  %cmp81 = icmp ult i32 %47, %48, !dbg !6192
  %lnot83 = xor i1 %cmp81, true, !dbg !6192
  %lnot85 = xor i1 %lnot83, true, !dbg !6192
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !6192
  %conv87 = sext i32 %lnot.ext86 to i64, !dbg !6192
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 1), !dbg !6192
  %tobool89 = icmp ne i64 %expval88, 0, !dbg !6192
  br i1 %tobool89, label %land.lhs.true90, label %if.end126, !dbg !6193

land.lhs.true90:                                  ; preds = %if.end80
  %49 = load i64, ptr %progress, align 8, !dbg !6194, !tbaa !2663
  %50 = load i64, ptr %batch, align 8, !dbg !6195, !tbaa !2663
  %cmp91 = icmp ult i64 %49, %50, !dbg !6196
  br i1 %cmp91, label %if.then93, label %if.end126, !dbg !6197

if.then93:                                        ; preds = %land.lhs.true90
  %51 = load ptr, ptr %bin, align 8, !dbg !6198, !tbaa !2658
  %cmp94 = icmp eq ptr %51, null, !dbg !6199
  br i1 %cmp94, label %if.then96, label %if.end105, !dbg !6200

if.then96:                                        ; preds = %if.then93
  call void @llvm.lifetime.start.p0(i64 4, ptr %tcache_ind) #18, !dbg !6201
  tail call void @llvm.dbg.declare(metadata ptr %tcache_ind, metadata !2032, metadata !DIExpression()), !dbg !6202
  %52 = load i32, ptr %flags.addr, align 4, !dbg !6203, !tbaa !2791
  %call97 = call i32 @mallocx_tcache_get(i32 noundef %52), !dbg !6204
  store i32 %call97, ptr %tcache_ind, align 4, !dbg !6202, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !6205
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !2037, metadata !DIExpression()), !dbg !6206
  %53 = load ptr, ptr %tsd, align 8, !dbg !6207, !tbaa !2658
  %54 = load i32, ptr %tcache_ind, align 4, !dbg !6208, !tbaa !2791
  %call98 = call ptr @tcache_get_from_ind(ptr noundef %53, i32 noundef %54, i1 noundef zeroext true, i1 noundef zeroext true), !dbg !6209
  store ptr %call98, ptr %tcache, align 8, !dbg !6206, !tbaa !2658
  %55 = load ptr, ptr %tcache, align 8, !dbg !6210, !tbaa !2658
  %cmp99 = icmp ne ptr %55, null, !dbg !6212
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !6213

if.then101:                                       ; preds = %if.then96
  %56 = load ptr, ptr %tcache, align 8, !dbg !6214, !tbaa !2658
  %bins = getelementptr inbounds %struct.tcache_s, ptr %56, i32 0, i32 1, !dbg !6216
  %57 = load i32, ptr %ind, align 4, !dbg !6217, !tbaa !2791
  %idxprom102 = zext i32 %57 to i64, !dbg !6214
  %arrayidx103 = getelementptr inbounds [73 x %struct.cache_bin_s], ptr %bins, i64 0, i64 %idxprom102, !dbg !6214
  store ptr %arrayidx103, ptr %bin, align 8, !dbg !6218, !tbaa !2658
  br label %if.end104, !dbg !6219

if.end104:                                        ; preds = %if.then101, %if.then96
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !6220
  call void @llvm.lifetime.end.p0(i64 4, ptr %tcache_ind) #18, !dbg !6220
  br label %if.end105, !dbg !6221

if.end105:                                        ; preds = %if.end104, %if.then93
  %58 = load ptr, ptr %bin, align 8, !dbg !6222, !tbaa !2658
  %cmp106 = icmp ne ptr %58, null, !dbg !6223
  br i1 %cmp106, label %if.then108, label %if.end125, !dbg !6224

if.then108:                                       ; preds = %if.end105
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin_batch) #18, !dbg !6225
  tail call void @llvm.dbg.declare(metadata ptr %bin_batch, metadata !2038, metadata !DIExpression()), !dbg !6226
  %59 = load i64, ptr %batch, align 8, !dbg !6227, !tbaa !2663
  %60 = load i64, ptr %progress, align 8, !dbg !6228, !tbaa !2663
  %sub109 = sub i64 %59, %60, !dbg !6229
  store i64 %sub109, ptr %bin_batch, align 8, !dbg !6226, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %n110) #18, !dbg !6230
  tail call void @llvm.dbg.declare(metadata ptr %n110, metadata !2041, metadata !DIExpression()), !dbg !6231
  %61 = load ptr, ptr %bin, align 8, !dbg !6232, !tbaa !2658
  %62 = load i64, ptr %bin_batch, align 8, !dbg !6233, !tbaa !2663
  %63 = load ptr, ptr %ptrs.addr, align 8, !dbg !6234, !tbaa !2658
  %64 = load i64, ptr %filled, align 8, !dbg !6235, !tbaa !2663
  %add.ptr111 = getelementptr inbounds ptr, ptr %63, i64 %64, !dbg !6236
  %call112 = call zeroext i16 @cache_bin_alloc_batch(ptr noundef %61, i64 noundef %62, ptr noundef %add.ptr111), !dbg !6237
  %conv113 = zext i16 %call112 to i64, !dbg !6237
  store i64 %conv113, ptr %n110, align 8, !dbg !6231, !tbaa !2663
  %65 = load i64, ptr %n110, align 8, !dbg !6238, !tbaa !2663
  %66 = load ptr, ptr %bin, align 8, !dbg !6241, !tbaa !2658
  %tstats = getelementptr inbounds %struct.cache_bin_s, ptr %66, i32 0, i32 1, !dbg !6242
  %nrequests = getelementptr inbounds %struct.cache_bin_stats_s, ptr %tstats, i32 0, i32 0, !dbg !6243
  %67 = load i64, ptr %nrequests, align 8, !dbg !6244, !tbaa !6245
  %add114 = add i64 %67, %65, !dbg !6244
  store i64 %add114, ptr %nrequests, align 8, !dbg !6244, !tbaa !6245
  %68 = load i8, ptr %zero, align 1, !dbg !6249, !tbaa !2695, !range !2708, !noundef !2709
  %tobool115 = trunc i8 %68 to i1, !dbg !6249
  br i1 %tobool115, label %if.then116, label %if.end122, !dbg !6250

if.then116:                                       ; preds = %if.then108
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #18, !dbg !6251
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !2042, metadata !DIExpression()), !dbg !6252
  store i64 0, ptr %i, align 8, !dbg !6252, !tbaa !2663
  br label %for.cond, !dbg !6251

for.cond:                                         ; preds = %for.inc, %if.then116
  %69 = load i64, ptr %i, align 8, !dbg !6253, !tbaa !2663
  %70 = load i64, ptr %n110, align 8, !dbg !6255, !tbaa !2663
  %cmp117 = icmp ult i64 %69, %70, !dbg !6256
  br i1 %cmp117, label %for.body, label %for.cond.cleanup, !dbg !6257

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 9, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #18, !dbg !6258
  br label %for.end

for.body:                                         ; preds = %for.cond
  %71 = load ptr, ptr %ptrs.addr, align 8, !dbg !6259, !tbaa !2658
  %72 = load i64, ptr %filled, align 8, !dbg !6261, !tbaa !2663
  %73 = load i64, ptr %i, align 8, !dbg !6262, !tbaa !2663
  %add119 = add i64 %72, %73, !dbg !6263
  %arrayidx120 = getelementptr inbounds ptr, ptr %71, i64 %add119, !dbg !6259
  %74 = load ptr, ptr %arrayidx120, align 8, !dbg !6259, !tbaa !2658
  %75 = load i64, ptr %usize, align 8, !dbg !6264, !tbaa !2663
  call void @llvm.memset.p0.i64(ptr align 1 %74, i8 0, i64 %75, i1 false), !dbg !6265
  br label %for.inc, !dbg !6266

for.inc:                                          ; preds = %for.body
  %76 = load i64, ptr %i, align 8, !dbg !6267, !tbaa !2663
  %inc = add i64 %76, 1, !dbg !6267
  store i64 %inc, ptr %i, align 8, !dbg !6267, !tbaa !2663
  br label %for.cond, !dbg !6258, !llvm.loop !6268

for.end:                                          ; preds = %for.cond.cleanup
  br label %if.end122, !dbg !6270

if.end122:                                        ; preds = %for.end, %if.then108
  %77 = load i64, ptr %n110, align 8, !dbg !6271, !tbaa !2663
  %78 = load i64, ptr %progress, align 8, !dbg !6272, !tbaa !2663
  %add123 = add i64 %78, %77, !dbg !6272
  store i64 %add123, ptr %progress, align 8, !dbg !6272, !tbaa !2663
  %79 = load i64, ptr %n110, align 8, !dbg !6273, !tbaa !2663
  %80 = load i64, ptr %filled, align 8, !dbg !6274, !tbaa !2663
  %add124 = add i64 %80, %79, !dbg !6274
  store i64 %add124, ptr %filled, align 8, !dbg !6274, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %n110) #18, !dbg !6275
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin_batch) #18, !dbg !6275
  br label %if.end125, !dbg !6276

if.end125:                                        ; preds = %if.end122, %if.end105
  br label %if.end126, !dbg !6277

if.end126:                                        ; preds = %if.end125, %land.lhs.true90, %if.end80
  %81 = load ptr, ptr %tsd, align 8, !dbg !6278, !tbaa !2658
  %82 = load i64, ptr %progress, align 8, !dbg !6279, !tbaa !2663
  %83 = load i64, ptr %usize, align 8, !dbg !6280, !tbaa !2663
  %mul = mul i64 %82, %83, !dbg !6281
  call void @thread_alloc_event(ptr noundef %81, i64 noundef %mul), !dbg !6282
  %84 = load i64, ptr %progress, align 8, !dbg !6283, !tbaa !2663
  %85 = load i64, ptr %batch, align 8, !dbg !6284, !tbaa !2663
  %cmp127 = icmp ult i64 %84, %85, !dbg !6285
  br i1 %cmp127, label %if.then131, label %lor.lhs.false, !dbg !6286

lor.lhs.false:                                    ; preds = %if.end126
  %86 = load i8, ptr %prof_sample_event, align 1, !dbg !6287, !tbaa !2695, !range !2708, !noundef !2709
  %tobool129 = trunc i8 %86 to i1, !dbg !6287
  br i1 %tobool129, label %if.then131, label %if.end149, !dbg !6288

if.then131:                                       ; preds = %lor.lhs.false, %if.end126
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #18, !dbg !6289
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !2046, metadata !DIExpression()), !dbg !6290
  %87 = load i64, ptr %size.addr, align 8, !dbg !6291, !tbaa !2663
  %88 = load i32, ptr %flags.addr, align 4, !dbg !6292, !tbaa !2791
  %call132 = call noalias ptr @je_mallocx(i64 noundef %87, i32 noundef %88) #20, !dbg !6293
  store ptr %call132, ptr %p, align 8, !dbg !6290, !tbaa !2658
  %89 = load ptr, ptr %p, align 8, !dbg !6294, !tbaa !2658
  %cmp133 = icmp eq ptr %89, null, !dbg !6296
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !6297

if.then135:                                       ; preds = %if.then131
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup146, !dbg !6298

if.end136:                                        ; preds = %if.then131
  %90 = load i64, ptr %progress, align 8, !dbg !6300, !tbaa !2663
  %91 = load i64, ptr %batch, align 8, !dbg !6302, !tbaa !2663
  %cmp137 = icmp eq i64 %90, %91, !dbg !6303
  br i1 %cmp137, label %if.then139, label %if.end143, !dbg !6304

if.then139:                                       ; preds = %if.end136
  br label %do.body140, !dbg !6305

do.body140:                                       ; preds = %if.then139
  br label %do.cond141, !dbg !6307

do.cond141:                                       ; preds = %do.body140
  br label %do.end142, !dbg !6307

do.end142:                                        ; preds = %do.cond141
  br label %if.end143, !dbg !6309

if.end143:                                        ; preds = %do.end142, %if.end136
  %92 = load ptr, ptr %p, align 8, !dbg !6310, !tbaa !2658
  %93 = load ptr, ptr %ptrs.addr, align 8, !dbg !6311, !tbaa !2658
  %94 = load i64, ptr %filled, align 8, !dbg !6312, !tbaa !2663
  %inc144 = add i64 %94, 1, !dbg !6312
  store i64 %inc144, ptr %filled, align 8, !dbg !6312, !tbaa !2663
  %arrayidx145 = getelementptr inbounds ptr, ptr %93, i64 %94, !dbg !6311
  store ptr %92, ptr %arrayidx145, align 8, !dbg !6313, !tbaa !2658
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6314
  br label %cleanup146, !dbg !6314

cleanup146:                                       ; preds = %if.end143, %if.then135
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #18, !dbg !6314
  %cleanup.dest147 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest147, label %cleanup150 [
    i32 0, label %cleanup.cont148
  ]

cleanup.cont148:                                  ; preds = %cleanup146
  br label %if.end149, !dbg !6315

if.end149:                                        ; preds = %cleanup.cont148, %lor.lhs.false
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6316
  br label %cleanup150, !dbg !6316

cleanup150:                                       ; preds = %if.end149, %cleanup146, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %progress) #18, !dbg !6316
  call void @llvm.lifetime.end.p0(i64 1, ptr %prof_sample_event) #18, !dbg !6316
  call void @llvm.lifetime.end.p0(i64 8, ptr %surplus) #18, !dbg !6316
  call void @llvm.lifetime.end.p0(i64 8, ptr %batch) #18, !dbg !6316
  %cleanup.dest154 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest154, label %cleanup160 [
    i32 0, label %cleanup.cont155
    i32 8, label %while.end
    i32 4, label %label_done
  ]

cleanup.cont155:                                  ; preds = %cleanup150
  br label %while.cond, !dbg !6102, !llvm.loop !6317

while.end:                                        ; preds = %cleanup150, %while.cond
  br label %label_done, !dbg !6102

label_done:                                       ; preds = %while.end, %cleanup150, %if.then9, %if.then
  tail call void @llvm.dbg.label(metadata !2049), !dbg !6318
  %95 = load ptr, ptr %tsd, align 8, !dbg !6319, !tbaa !2658
  %call156 = call ptr @tsd_tsdn(ptr noundef %95), !dbg !6320
  call void @check_entry_exit_locking(ptr noundef %call156), !dbg !6321
  br label %do.body157, !dbg !6322

do.body157:                                       ; preds = %label_done
  br label %do.cond158, !dbg !6323

do.cond158:                                       ; preds = %do.body157
  br label %do.end159, !dbg !6323

do.end159:                                        ; preds = %do.cond158
  %96 = load i64, ptr %filled, align 8, !dbg !6325, !tbaa !2663
  store i64 %96, ptr %retval, align 8, !dbg !6326
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup160, !dbg !6326

cleanup160:                                       ; preds = %do.end159, %cleanup150
  call void @llvm.lifetime.end.p0(i64 8, ptr %filled) #18, !dbg !6327
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !6327
  %97 = load i64, ptr %retval, align 8, !dbg !6327
  ret i64 %97, !dbg !6327
}

; Function Attrs: alwaysinline nounwind uwtable
define internal signext i8 @tsd_reentrancy_level_get(ptr noundef %tsd) #3 !dbg !6328 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !6332, metadata !DIExpression()), !dbg !6333
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !6333, !tbaa !2658
  %call = call ptr @tsd_reentrancy_levelp_get(ptr noundef %0), !dbg !6333
  %1 = load i8, ptr %call, align 1, !dbg !6333, !tbaa !2810
  ret i8 %1, !dbg !6333
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @aligned_usize_get(i64 noundef %size, i64 noundef %alignment, ptr noundef %usize, ptr noundef %ind, i1 noundef zeroext %bump_empty_aligned_alloc) #3 !dbg !6334 {
entry:
  %retval = alloca i1, align 1
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %usize.addr = alloca ptr, align 8
  %ind.addr = alloca ptr, align 8
  %bump_empty_aligned_alloc.addr = alloca i8, align 1
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !6339, metadata !DIExpression()), !dbg !6344
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !6340, metadata !DIExpression()), !dbg !6345
  store ptr %usize, ptr %usize.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !6341, metadata !DIExpression()), !dbg !6346
  store ptr %ind, ptr %ind.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !6342, metadata !DIExpression()), !dbg !6347
  %frombool = zext i1 %bump_empty_aligned_alloc to i8
  store i8 %frombool, ptr %bump_empty_aligned_alloc.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %bump_empty_aligned_alloc.addr, metadata !6343, metadata !DIExpression()), !dbg !6348
  br label %do.body, !dbg !6349

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6350

do.end:                                           ; preds = %do.body
  %0 = load i64, ptr %alignment.addr, align 8, !dbg !6352, !tbaa !2663
  %cmp = icmp eq i64 %0, 0, !dbg !6354
  br i1 %cmp, label %if.then, label %if.else, !dbg !6355

if.then:                                          ; preds = %do.end
  %1 = load ptr, ptr %ind.addr, align 8, !dbg !6356, !tbaa !2658
  %cmp1 = icmp ne ptr %1, null, !dbg !6359
  br i1 %cmp1, label %if.then2, label %if.end11, !dbg !6360

if.then2:                                         ; preds = %if.then
  %2 = load i64, ptr %size.addr, align 8, !dbg !6361, !tbaa !2663
  %call = call i32 @sz_size2index(i64 noundef %2), !dbg !6363
  %3 = load ptr, ptr %ind.addr, align 8, !dbg !6364, !tbaa !2658
  store i32 %call, ptr %3, align 4, !dbg !6365, !tbaa !2791
  %4 = load ptr, ptr %ind.addr, align 8, !dbg !6366, !tbaa !2658
  %5 = load i32, ptr %4, align 4, !dbg !6366, !tbaa !2791
  %conv = zext i32 %5 to i64, !dbg !6366
  %cmp3 = icmp uge i64 %conv, 232, !dbg !6366
  %lnot = xor i1 %cmp3, true, !dbg !6366
  %lnot5 = xor i1 %lnot, true, !dbg !6366
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6366
  %conv6 = sext i32 %lnot.ext to i64, !dbg !6366
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 0), !dbg !6366
  %tobool = icmp ne i64 %expval, 0, !dbg !6366
  br i1 %tobool, label %if.then7, label %if.end, !dbg !6368

if.then7:                                         ; preds = %if.then2
  store i1 true, ptr %retval, align 1, !dbg !6369
  br label %return, !dbg !6369

if.end:                                           ; preds = %if.then2
  %6 = load ptr, ptr %ind.addr, align 8, !dbg !6371, !tbaa !2658
  %7 = load i32, ptr %6, align 4, !dbg !6372, !tbaa !2791
  %call8 = call i64 @sz_index2size(i32 noundef %7), !dbg !6373
  %8 = load ptr, ptr %usize.addr, align 8, !dbg !6374, !tbaa !2658
  store i64 %call8, ptr %8, align 8, !dbg !6375, !tbaa !2663
  br label %do.body9, !dbg !6376

do.body9:                                         ; preds = %if.end
  br label %do.end10, !dbg !6377

do.end10:                                         ; preds = %do.body9
  store i1 false, ptr %retval, align 1, !dbg !6379
  br label %return, !dbg !6379

if.end11:                                         ; preds = %if.then
  %9 = load i64, ptr %size.addr, align 8, !dbg !6380, !tbaa !2663
  %call12 = call i64 @sz_s2u(i64 noundef %9), !dbg !6381
  %10 = load ptr, ptr %usize.addr, align 8, !dbg !6382, !tbaa !2658
  store i64 %call12, ptr %10, align 8, !dbg !6383, !tbaa !2663
  br label %if.end27, !dbg !6384

if.else:                                          ; preds = %do.end
  %11 = load i8, ptr %bump_empty_aligned_alloc.addr, align 1, !dbg !6385, !tbaa !2695, !range !2708, !noundef !2709
  %tobool13 = trunc i8 %11 to i1, !dbg !6385
  br i1 %tobool13, label %land.lhs.true, label %if.end25, !dbg !6388

land.lhs.true:                                    ; preds = %if.else
  %12 = load i64, ptr %size.addr, align 8, !dbg !6389, !tbaa !2663
  %cmp15 = icmp eq i64 %12, 0, !dbg !6389
  %lnot17 = xor i1 %cmp15, true, !dbg !6389
  %lnot19 = xor i1 %lnot17, true, !dbg !6389
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !6389
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !6389
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0), !dbg !6389
  %tobool23 = icmp ne i64 %expval22, 0, !dbg !6389
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6390

if.then24:                                        ; preds = %land.lhs.true
  store i64 1, ptr %size.addr, align 8, !dbg !6391, !tbaa !2663
  br label %if.end25, !dbg !6393

if.end25:                                         ; preds = %if.then24, %land.lhs.true, %if.else
  %13 = load i64, ptr %size.addr, align 8, !dbg !6394, !tbaa !2663
  %14 = load i64, ptr %alignment.addr, align 8, !dbg !6395, !tbaa !2663
  %call26 = call i64 @sz_sa2u(i64 noundef %13, i64 noundef %14), !dbg !6396
  %15 = load ptr, ptr %usize.addr, align 8, !dbg !6397, !tbaa !2658
  store i64 %call26, ptr %15, align 8, !dbg !6398, !tbaa !2663
  br label %if.end27

if.end27:                                         ; preds = %if.end25, %if.end11
  %16 = load ptr, ptr %usize.addr, align 8, !dbg !6399, !tbaa !2658
  %17 = load i64, ptr %16, align 8, !dbg !6399, !tbaa !2663
  %cmp28 = icmp eq i64 %17, 0, !dbg !6399
  br i1 %cmp28, label %lor.end, label %lor.rhs, !dbg !6399

lor.rhs:                                          ; preds = %if.end27
  %18 = load ptr, ptr %usize.addr, align 8, !dbg !6399, !tbaa !2658
  %19 = load i64, ptr %18, align 8, !dbg !6399, !tbaa !2663
  %cmp30 = icmp ugt i64 %19, 8070450532247928832, !dbg !6399
  br label %lor.end, !dbg !6399

lor.end:                                          ; preds = %lor.rhs, %if.end27
  %20 = phi i1 [ true, %if.end27 ], [ %cmp30, %lor.rhs ]
  %lnot32 = xor i1 %20, true, !dbg !6399
  %lnot34 = xor i1 %lnot32, true, !dbg !6399
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !6399
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !6399
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0), !dbg !6399
  %tobool38 = icmp ne i64 %expval37, 0, !dbg !6399
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6401

if.then39:                                        ; preds = %lor.end
  store i1 true, ptr %retval, align 1, !dbg !6402
  br label %return, !dbg !6402

if.end40:                                         ; preds = %lor.end
  store i1 false, ptr %retval, align 1, !dbg !6404
  br label %return, !dbg !6404

return:                                           ; preds = %if.end40, %if.then39, %do.end10, %if.then7
  %21 = load i1, ptr %retval, align 1, !dbg !6405
  ret i1 %21, !dbg !6405
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @sz_size2index(i64 noundef %size) #3 !dbg !6406 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !6410, metadata !DIExpression()), !dbg !6411
  %0 = load i64, ptr %size.addr, align 8, !dbg !6412, !tbaa !2663
  %cmp = icmp ule i64 %0, 4096, !dbg !6412
  %lnot = xor i1 %cmp, true, !dbg !6412
  %lnot1 = xor i1 %lnot, true, !dbg !6412
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6412
  %conv = sext i32 %lnot.ext to i64, !dbg !6412
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6412
  %tobool = icmp ne i64 %expval, 0, !dbg !6412
  br i1 %tobool, label %if.then, label %if.end, !dbg !6414

if.then:                                          ; preds = %entry
  %1 = load i64, ptr %size.addr, align 8, !dbg !6415, !tbaa !2663
  %call = call i32 @sz_size2index_lookup(i64 noundef %1), !dbg !6417
  store i32 %call, ptr %retval, align 4, !dbg !6418
  br label %return, !dbg !6418

if.end:                                           ; preds = %entry
  %2 = load i64, ptr %size.addr, align 8, !dbg !6419, !tbaa !2663
  %call2 = call i32 @sz_size2index_compute(i64 noundef %2), !dbg !6420
  store i32 %call2, ptr %retval, align 4, !dbg !6421
  br label %return, !dbg !6421

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !6422
  ret i32 %3, !dbg !6422
}

; Function Attrs: nounwind uwtable
define internal void @batch_alloc_prof_sample_assert(ptr noundef %tsd, i64 noundef %batch, i64 noundef %usize) #0 !dbg !6423 {
entry:
  %tsd.addr = alloca ptr, align 8
  %batch.addr = alloca i64, align 8
  %usize.addr = alloca i64, align 8
  %prof_sample_event = alloca i8, align 1
  %surplus = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !6427, metadata !DIExpression()), !dbg !6432
  store i64 %batch, ptr %batch.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %batch.addr, metadata !6428, metadata !DIExpression()), !dbg !6433
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !6429, metadata !DIExpression()), !dbg !6434
  br label %do.body, !dbg !6435

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6436

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 1, ptr %prof_sample_event) #18, !dbg !6438
  tail call void @llvm.dbg.declare(metadata ptr %prof_sample_event, metadata !6430, metadata !DIExpression()), !dbg !6439
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !6440, !tbaa !2658
  %1 = load i64, ptr %batch.addr, align 8, !dbg !6441, !tbaa !2663
  %2 = load i64, ptr %usize.addr, align 8, !dbg !6442, !tbaa !2663
  %mul = mul i64 %1, %2, !dbg !6443
  %call = call zeroext i1 @te_prof_sample_event_lookahead(ptr noundef %0, i64 noundef %mul), !dbg !6444
  %frombool = zext i1 %call to i8, !dbg !6439
  store i8 %frombool, ptr %prof_sample_event, align 1, !dbg !6439, !tbaa !2695
  br label %do.body1, !dbg !6445

do.body1:                                         ; preds = %do.end
  br label %do.cond, !dbg !6446

do.cond:                                          ; preds = %do.body1
  br label %do.end2, !dbg !6446

do.end2:                                          ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %surplus) #18, !dbg !6448
  tail call void @llvm.dbg.declare(metadata ptr %surplus, metadata !6431, metadata !DIExpression()), !dbg !6449
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !6450, !tbaa !2658
  %4 = load i64, ptr %batch.addr, align 8, !dbg !6451, !tbaa !2663
  %add = add i64 %4, 1, !dbg !6452
  %5 = load i64, ptr %usize.addr, align 8, !dbg !6453, !tbaa !2663
  %mul3 = mul i64 %add, %5, !dbg !6454
  %call4 = call zeroext i1 @te_prof_sample_event_lookahead_surplus(ptr noundef %3, i64 noundef %mul3, ptr noundef %surplus), !dbg !6455
  %frombool5 = zext i1 %call4 to i8, !dbg !6456
  store i8 %frombool5, ptr %prof_sample_event, align 1, !dbg !6456, !tbaa !2695
  br label %do.body6, !dbg !6457

do.body6:                                         ; preds = %do.end2
  br label %do.cond7, !dbg !6458

do.cond7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !6458

do.end8:                                          ; preds = %do.cond7
  br label %do.body9, !dbg !6460

do.body9:                                         ; preds = %do.end8
  br label %do.cond10, !dbg !6461

do.cond10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !6461

do.end11:                                         ; preds = %do.cond10
  call void @llvm.lifetime.end.p0(i64 8, ptr %surplus) #18, !dbg !6463
  call void @llvm.lifetime.end.p0(i64 1, ptr %prof_sample_event) #18, !dbg !6463
  ret void, !dbg !6463
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @arena_get_from_ind(ptr noundef %tsd, i32 noundef %arena_ind, ptr noundef %arena_p) #3 !dbg !6464 {
entry:
  %retval = alloca i1, align 1
  %tsd.addr = alloca ptr, align 8
  %arena_ind.addr = alloca i32, align 4
  %arena_p.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !6469, metadata !DIExpression()), !dbg !6472
  store i32 %arena_ind, ptr %arena_ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %arena_ind.addr, metadata !6470, metadata !DIExpression()), !dbg !6473
  store ptr %arena_p, ptr %arena_p.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena_p.addr, metadata !6471, metadata !DIExpression()), !dbg !6474
  %0 = load i32, ptr %arena_ind.addr, align 4, !dbg !6475, !tbaa !2791
  %cmp = icmp eq i32 %0, -1, !dbg !6477
  br i1 %cmp, label %if.then, label %if.else, !dbg !6478

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %arena_p.addr, align 8, !dbg !6479, !tbaa !2658
  store ptr null, ptr %1, align 8, !dbg !6481, !tbaa !2658
  br label %if.end7, !dbg !6482

if.else:                                          ; preds = %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !6483, !tbaa !2658
  %call = call ptr @tsd_tsdn(ptr noundef %2), !dbg !6485
  %3 = load i32, ptr %arena_ind.addr, align 4, !dbg !6486, !tbaa !2791
  %call1 = call ptr @arena_get(ptr noundef %call, i32 noundef %3, i1 noundef zeroext true), !dbg !6487
  %4 = load ptr, ptr %arena_p.addr, align 8, !dbg !6488, !tbaa !2658
  store ptr %call1, ptr %4, align 8, !dbg !6489, !tbaa !2658
  %5 = load ptr, ptr %arena_p.addr, align 8, !dbg !6490, !tbaa !2658
  %6 = load ptr, ptr %5, align 8, !dbg !6490, !tbaa !2658
  %cmp2 = icmp eq ptr %6, null, !dbg !6490
  %lnot = xor i1 %cmp2, true, !dbg !6490
  %lnot3 = xor i1 %lnot, true, !dbg !6490
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6490
  %conv = sext i32 %lnot.ext to i64, !dbg !6490
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6490
  %tobool = icmp ne i64 %expval, 0, !dbg !6490
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6492

land.lhs.true:                                    ; preds = %if.else
  %7 = load i32, ptr %arena_ind.addr, align 4, !dbg !6493, !tbaa !2791
  %8 = load i32, ptr @narenas_auto, align 4, !dbg !6494, !tbaa !2791
  %cmp4 = icmp uge i32 %7, %8, !dbg !6495
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !6496

if.then6:                                         ; preds = %land.lhs.true
  store i1 true, ptr %retval, align 1, !dbg !6497
  br label %return, !dbg !6497

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  store i1 false, ptr %retval, align 1, !dbg !6499
  br label %return, !dbg !6499

return:                                           ; preds = %if.end7, %if.then6
  %9 = load i1, ptr %retval, align 1, !dbg !6500
  ret i1 %9, !dbg !6500
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @arena_choose(ptr noundef %tsd, ptr noundef %arena) #4 !dbg !6501 {
entry:
  %tsd.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !6506, metadata !DIExpression()), !dbg !6508
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !6507, metadata !DIExpression()), !dbg !6509
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !6510, !tbaa !2658
  %1 = load ptr, ptr %arena.addr, align 8, !dbg !6511, !tbaa !2658
  %call = call ptr @arena_choose_impl(ptr noundef %0, ptr noundef %1, i1 noundef zeroext false), !dbg !6512
  ret ptr %call, !dbg !6513
}

declare !dbg !6514 i64 @arena_fill_small_fresh(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i64 noundef, i1 noundef zeroext) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i16 @cache_bin_alloc_batch(ptr noundef %bin, i64 noundef %num, ptr noundef %out) #3 !dbg !6517 {
entry:
  %bin.addr = alloca ptr, align 8
  %num.addr = alloca i64, align 8
  %out.addr = alloca ptr, align 8
  %n = alloca i16, align 2
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !6521, metadata !DIExpression()), !dbg !6525
  store i64 %num, ptr %num.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %num.addr, metadata !6522, metadata !DIExpression()), !dbg !6526
  store ptr %out, ptr %out.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %out.addr, metadata !6523, metadata !DIExpression()), !dbg !6527
  call void @llvm.lifetime.start.p0(i64 2, ptr %n) #18, !dbg !6528
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !6524, metadata !DIExpression()), !dbg !6529
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !6530, !tbaa !2658
  %call = call zeroext i16 @cache_bin_ncached_get_internal(ptr noundef %0, i1 noundef zeroext false), !dbg !6531
  store i16 %call, ptr %n, align 2, !dbg !6529, !tbaa !6532
  %1 = load i16, ptr %n, align 2, !dbg !6533, !tbaa !6532
  %conv = zext i16 %1 to i64, !dbg !6533
  %2 = load i64, ptr %num.addr, align 8, !dbg !6535, !tbaa !2663
  %cmp = icmp ugt i64 %conv, %2, !dbg !6536
  br i1 %cmp, label %if.then, label %if.end, !dbg !6537

if.then:                                          ; preds = %entry
  %3 = load i64, ptr %num.addr, align 8, !dbg !6538, !tbaa !2663
  %conv2 = trunc i64 %3 to i16, !dbg !6540
  store i16 %conv2, ptr %n, align 2, !dbg !6541, !tbaa !6532
  br label %if.end, !dbg !6542

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %out.addr, align 8, !dbg !6543, !tbaa !2658
  %5 = load ptr, ptr %bin.addr, align 8, !dbg !6544, !tbaa !2658
  %stack_head = getelementptr inbounds %struct.cache_bin_s, ptr %5, i32 0, i32 0, !dbg !6545
  %6 = load ptr, ptr %stack_head, align 8, !dbg !6545, !tbaa !6546
  %7 = load i16, ptr %n, align 2, !dbg !6547, !tbaa !6532
  %conv3 = zext i16 %7 to i64, !dbg !6547
  %mul = mul i64 %conv3, 8, !dbg !6548
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %6, i64 %mul, i1 false), !dbg !6549
  %8 = load i16, ptr %n, align 2, !dbg !6550, !tbaa !6532
  %conv4 = zext i16 %8 to i32, !dbg !6550
  %9 = load ptr, ptr %bin.addr, align 8, !dbg !6551, !tbaa !2658
  %stack_head5 = getelementptr inbounds %struct.cache_bin_s, ptr %9, i32 0, i32 0, !dbg !6552
  %10 = load ptr, ptr %stack_head5, align 8, !dbg !6553, !tbaa !6546
  %idx.ext = sext i32 %conv4 to i64, !dbg !6553
  %add.ptr = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !6553
  store ptr %add.ptr, ptr %stack_head5, align 8, !dbg !6553, !tbaa !6546
  %11 = load ptr, ptr %bin.addr, align 8, !dbg !6554, !tbaa !2658
  call void @cache_bin_low_water_adjust(ptr noundef %11), !dbg !6555
  %12 = load i16, ptr %n, align 2, !dbg !6556, !tbaa !6532
  call void @llvm.lifetime.end.p0(i64 2, ptr %n) #18, !dbg !6557
  ret i16 %12, !dbg !6558
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nounwind uwtable
define internal void @jemalloc_constructor() #0 !dbg !6559 {
entry:
  %call = call zeroext i1 @malloc_init(), !dbg !6562
  ret void, !dbg !6563
}

; Function Attrs: nounwind uwtable
define hidden void @jemalloc_prefork() #0 !dbg !6564 {
entry:
  %tsd = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %narenas = alloca i32, align 4
  %arena = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !6571
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !6566, metadata !DIExpression()), !dbg !6572
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !6573
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6567, metadata !DIExpression()), !dbg !6574
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #18, !dbg !6573
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !6568, metadata !DIExpression()), !dbg !6575
  call void @llvm.lifetime.start.p0(i64 4, ptr %narenas) #18, !dbg !6573
  tail call void @llvm.dbg.declare(metadata ptr %narenas, metadata !6569, metadata !DIExpression()), !dbg !6576
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !6577
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !6570, metadata !DIExpression()), !dbg !6578
  br label %do.body, !dbg !6579

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !6580

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6580

do.end:                                           ; preds = %do.cond
  %call = call ptr @tsd_fetch(), !dbg !6582
  store ptr %call, ptr %tsd, align 8, !dbg !6583, !tbaa !2658
  %call1 = call i32 @narenas_total_get(), !dbg !6584
  store i32 %call1, ptr %narenas, align 4, !dbg !6585, !tbaa !2791
  %0 = load ptr, ptr %tsd, align 8, !dbg !6586, !tbaa !2658
  %call2 = call ptr @tsd_witness_tsdp_get(ptr noundef %0), !dbg !6587
  call void @witness_prefork(ptr noundef %call2), !dbg !6588
  %1 = load ptr, ptr %tsd, align 8, !dbg !6589, !tbaa !2658
  %call3 = call ptr @tsd_tsdn(ptr noundef %1), !dbg !6590
  call void @ctl_prefork(ptr noundef %call3), !dbg !6591
  %2 = load ptr, ptr %tsd, align 8, !dbg !6592, !tbaa !2658
  %call4 = call ptr @tsd_tsdn(ptr noundef %2), !dbg !6593
  call void @tcache_prefork(ptr noundef %call4), !dbg !6594
  %3 = load ptr, ptr %tsd, align 8, !dbg !6595, !tbaa !2658
  %call5 = call ptr @tsd_tsdn(ptr noundef %3), !dbg !6596
  call void @malloc_mutex_prefork(ptr noundef %call5, ptr noundef @arenas_lock), !dbg !6597
  %4 = load ptr, ptr %tsd, align 8, !dbg !6598, !tbaa !2658
  %call6 = call ptr @tsd_tsdn(ptr noundef %4), !dbg !6601
  call void @background_thread_prefork0(ptr noundef %call6), !dbg !6602
  %5 = load ptr, ptr %tsd, align 8, !dbg !6603, !tbaa !2658
  %call7 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !6604
  call void @prof_prefork0(ptr noundef %call7), !dbg !6605
  %6 = load ptr, ptr %tsd, align 8, !dbg !6606, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %6), !dbg !6609
  call void @background_thread_prefork1(ptr noundef %call8), !dbg !6610
  store i32 0, ptr %i, align 4, !dbg !6611, !tbaa !2791
  br label %for.cond, !dbg !6613

for.cond:                                         ; preds = %for.inc35, %do.end
  %7 = load i32, ptr %i, align 4, !dbg !6614, !tbaa !2791
  %cmp = icmp ult i32 %7, 9, !dbg !6616
  br i1 %cmp, label %for.body, label %for.end37, !dbg !6617

for.body:                                         ; preds = %for.cond
  store i32 0, ptr %j, align 4, !dbg !6618, !tbaa !2791
  br label %for.cond9, !dbg !6621

for.cond9:                                        ; preds = %for.inc, %for.body
  %8 = load i32, ptr %j, align 4, !dbg !6622, !tbaa !2791
  %9 = load i32, ptr %narenas, align 4, !dbg !6624, !tbaa !2791
  %cmp10 = icmp ult i32 %8, %9, !dbg !6625
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !6626

for.body11:                                       ; preds = %for.cond9
  %10 = load ptr, ptr %tsd, align 8, !dbg !6627, !tbaa !2658
  %call12 = call ptr @tsd_tsdn(ptr noundef %10), !dbg !6630
  %11 = load i32, ptr %j, align 4, !dbg !6631, !tbaa !2791
  %call13 = call ptr @arena_get(ptr noundef %call12, i32 noundef %11, i1 noundef zeroext false), !dbg !6632
  store ptr %call13, ptr %arena, align 8, !dbg !6633, !tbaa !2658
  %cmp14 = icmp ne ptr %call13, null, !dbg !6634
  br i1 %cmp14, label %if.then, label %if.end, !dbg !6635

if.then:                                          ; preds = %for.body11
  %12 = load i32, ptr %i, align 4, !dbg !6636, !tbaa !2791
  switch i32 %12, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb16
    i32 2, label %sw.bb18
    i32 3, label %sw.bb20
    i32 4, label %sw.bb22
    i32 5, label %sw.bb24
    i32 6, label %sw.bb26
    i32 7, label %sw.bb28
    i32 8, label %sw.bb30
  ], !dbg !6638

sw.bb:                                            ; preds = %if.then
  %13 = load ptr, ptr %tsd, align 8, !dbg !6639, !tbaa !2658
  %call15 = call ptr @tsd_tsdn(ptr noundef %13), !dbg !6641
  %14 = load ptr, ptr %arena, align 8, !dbg !6642, !tbaa !2658
  call void @arena_prefork0(ptr noundef %call15, ptr noundef %14), !dbg !6643
  br label %sw.epilog, !dbg !6644

sw.bb16:                                          ; preds = %if.then
  %15 = load ptr, ptr %tsd, align 8, !dbg !6645, !tbaa !2658
  %call17 = call ptr @tsd_tsdn(ptr noundef %15), !dbg !6646
  %16 = load ptr, ptr %arena, align 8, !dbg !6647, !tbaa !2658
  call void @arena_prefork1(ptr noundef %call17, ptr noundef %16), !dbg !6648
  br label %sw.epilog, !dbg !6649

sw.bb18:                                          ; preds = %if.then
  %17 = load ptr, ptr %tsd, align 8, !dbg !6650, !tbaa !2658
  %call19 = call ptr @tsd_tsdn(ptr noundef %17), !dbg !6651
  %18 = load ptr, ptr %arena, align 8, !dbg !6652, !tbaa !2658
  call void @arena_prefork2(ptr noundef %call19, ptr noundef %18), !dbg !6653
  br label %sw.epilog, !dbg !6654

sw.bb20:                                          ; preds = %if.then
  %19 = load ptr, ptr %tsd, align 8, !dbg !6655, !tbaa !2658
  %call21 = call ptr @tsd_tsdn(ptr noundef %19), !dbg !6656
  %20 = load ptr, ptr %arena, align 8, !dbg !6657, !tbaa !2658
  call void @arena_prefork3(ptr noundef %call21, ptr noundef %20), !dbg !6658
  br label %sw.epilog, !dbg !6659

sw.bb22:                                          ; preds = %if.then
  %21 = load ptr, ptr %tsd, align 8, !dbg !6660, !tbaa !2658
  %call23 = call ptr @tsd_tsdn(ptr noundef %21), !dbg !6661
  %22 = load ptr, ptr %arena, align 8, !dbg !6662, !tbaa !2658
  call void @arena_prefork4(ptr noundef %call23, ptr noundef %22), !dbg !6663
  br label %sw.epilog, !dbg !6664

sw.bb24:                                          ; preds = %if.then
  %23 = load ptr, ptr %tsd, align 8, !dbg !6665, !tbaa !2658
  %call25 = call ptr @tsd_tsdn(ptr noundef %23), !dbg !6666
  %24 = load ptr, ptr %arena, align 8, !dbg !6667, !tbaa !2658
  call void @arena_prefork5(ptr noundef %call25, ptr noundef %24), !dbg !6668
  br label %sw.epilog, !dbg !6669

sw.bb26:                                          ; preds = %if.then
  %25 = load ptr, ptr %tsd, align 8, !dbg !6670, !tbaa !2658
  %call27 = call ptr @tsd_tsdn(ptr noundef %25), !dbg !6671
  %26 = load ptr, ptr %arena, align 8, !dbg !6672, !tbaa !2658
  call void @arena_prefork6(ptr noundef %call27, ptr noundef %26), !dbg !6673
  br label %sw.epilog, !dbg !6674

sw.bb28:                                          ; preds = %if.then
  %27 = load ptr, ptr %tsd, align 8, !dbg !6675, !tbaa !2658
  %call29 = call ptr @tsd_tsdn(ptr noundef %27), !dbg !6676
  %28 = load ptr, ptr %arena, align 8, !dbg !6677, !tbaa !2658
  call void @arena_prefork7(ptr noundef %call29, ptr noundef %28), !dbg !6678
  br label %sw.epilog, !dbg !6679

sw.bb30:                                          ; preds = %if.then
  %29 = load ptr, ptr %tsd, align 8, !dbg !6680, !tbaa !2658
  %call31 = call ptr @tsd_tsdn(ptr noundef %29), !dbg !6681
  %30 = load ptr, ptr %arena, align 8, !dbg !6682, !tbaa !2658
  call void @arena_prefork8(ptr noundef %call31, ptr noundef %30), !dbg !6683
  br label %sw.epilog, !dbg !6684

sw.default:                                       ; preds = %if.then
  br label %do.body32, !dbg !6685

do.body32:                                        ; preds = %sw.default
  unreachable, !dbg !6686

do.cond33:                                        ; No predecessors!
  br label %do.end34, !dbg !6686

do.end34:                                         ; preds = %do.cond33
  br label %sw.epilog, !dbg !6688

sw.epilog:                                        ; preds = %do.end34, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb
  br label %if.end, !dbg !6689

if.end:                                           ; preds = %sw.epilog, %for.body11
  br label %for.inc, !dbg !6690

for.inc:                                          ; preds = %if.end
  %31 = load i32, ptr %j, align 4, !dbg !6691, !tbaa !2791
  %inc = add i32 %31, 1, !dbg !6691
  store i32 %inc, ptr %j, align 4, !dbg !6691, !tbaa !2791
  br label %for.cond9, !dbg !6692, !llvm.loop !6693

for.end:                                          ; preds = %for.cond9
  br label %for.inc35, !dbg !6695

for.inc35:                                        ; preds = %for.end
  %32 = load i32, ptr %i, align 4, !dbg !6696, !tbaa !2791
  %inc36 = add i32 %32, 1, !dbg !6696
  store i32 %inc36, ptr %i, align 4, !dbg !6696, !tbaa !2791
  br label %for.cond, !dbg !6697, !llvm.loop !6698

for.end37:                                        ; preds = %for.cond
  %33 = load ptr, ptr %tsd, align 8, !dbg !6700, !tbaa !2658
  %call38 = call ptr @tsd_tsdn(ptr noundef %33), !dbg !6701
  call void @prof_prefork1(ptr noundef %call38), !dbg !6702
  %34 = load ptr, ptr %tsd, align 8, !dbg !6703, !tbaa !2658
  %call39 = call ptr @tsd_tsdn(ptr noundef %34), !dbg !6704
  call void @stats_prefork(ptr noundef %call39), !dbg !6705
  %35 = load ptr, ptr %tsd, align 8, !dbg !6706, !tbaa !2658
  call void @tsd_prefork(ptr noundef %35), !dbg !6707
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !6708
  call void @llvm.lifetime.end.p0(i64 4, ptr %narenas) #18, !dbg !6708
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #18, !dbg !6708
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !6708
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !6708
  ret void, !dbg !6708
}

declare !dbg !6709 void @witness_prefork(ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_witness_tsdp_get(ptr noundef %tsd) #3 !dbg !6713 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !6717, metadata !DIExpression()), !dbg !6719
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !6719
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !6718, metadata !DIExpression()), !dbg !6719
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !6719, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !6719
  store i8 %call, ptr %state, align 1, !dbg !6719, !tbaa !2810
  br label %do.body, !dbg !6719

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !6720

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6720

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !6719, !tbaa !2658
  %call1 = call ptr @tsd_witness_tsdp_get_unsafe(ptr noundef %1), !dbg !6719
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !6719
  ret ptr %call1, !dbg !6719
}

declare !dbg !6722 void @ctl_prefork(ptr noundef) #5

declare !dbg !6723 void @tcache_prefork(ptr noundef) #5

declare !dbg !6725 void @malloc_mutex_prefork(ptr noundef, ptr noundef) #5

declare !dbg !6726 void @background_thread_prefork0(ptr noundef) #5

declare !dbg !6728 void @prof_prefork0(ptr noundef) #5

declare !dbg !6730 void @background_thread_prefork1(ptr noundef) #5

declare !dbg !6731 void @arena_prefork0(ptr noundef, ptr noundef) #5

declare !dbg !6734 void @arena_prefork1(ptr noundef, ptr noundef) #5

declare !dbg !6735 void @arena_prefork2(ptr noundef, ptr noundef) #5

declare !dbg !6736 void @arena_prefork3(ptr noundef, ptr noundef) #5

declare !dbg !6737 void @arena_prefork4(ptr noundef, ptr noundef) #5

declare !dbg !6738 void @arena_prefork5(ptr noundef, ptr noundef) #5

declare !dbg !6739 void @arena_prefork6(ptr noundef, ptr noundef) #5

declare !dbg !6740 void @arena_prefork7(ptr noundef, ptr noundef) #5

declare !dbg !6741 void @arena_prefork8(ptr noundef, ptr noundef) #5

declare !dbg !6742 void @prof_prefork1(ptr noundef) #5

declare !dbg !6743 void @stats_prefork(ptr noundef) #5

declare !dbg !6744 void @tsd_prefork(ptr noundef) #5

; Function Attrs: nounwind uwtable
define hidden void @jemalloc_postfork_parent() #0 !dbg !6745 {
entry:
  %tsd = alloca ptr, align 8
  %i = alloca i32, align 4
  %narenas = alloca i32, align 4
  %arena = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !6754
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !6747, metadata !DIExpression()), !dbg !6755
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !6756
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6748, metadata !DIExpression()), !dbg !6757
  call void @llvm.lifetime.start.p0(i64 4, ptr %narenas) #18, !dbg !6756
  tail call void @llvm.dbg.declare(metadata ptr %narenas, metadata !6749, metadata !DIExpression()), !dbg !6758
  br label %do.body, !dbg !6759

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !6760

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6760

do.end:                                           ; preds = %do.cond
  %call = call ptr @tsd_fetch(), !dbg !6762
  store ptr %call, ptr %tsd, align 8, !dbg !6763, !tbaa !2658
  %0 = load ptr, ptr %tsd, align 8, !dbg !6764, !tbaa !2658
  call void @tsd_postfork_parent(ptr noundef %0), !dbg !6765
  %1 = load ptr, ptr %tsd, align 8, !dbg !6766, !tbaa !2658
  %call1 = call ptr @tsd_witness_tsdp_get(ptr noundef %1), !dbg !6767
  call void @witness_postfork_parent(ptr noundef %call1), !dbg !6768
  %2 = load ptr, ptr %tsd, align 8, !dbg !6769, !tbaa !2658
  %call2 = call ptr @tsd_tsdn(ptr noundef %2), !dbg !6770
  call void @stats_postfork_parent(ptr noundef %call2), !dbg !6771
  store i32 0, ptr %i, align 4, !dbg !6772, !tbaa !2791
  %call3 = call i32 @narenas_total_get(), !dbg !6773
  store i32 %call3, ptr %narenas, align 4, !dbg !6774, !tbaa !2791
  br label %for.cond, !dbg !6775

for.cond:                                         ; preds = %for.inc, %do.end
  %3 = load i32, ptr %i, align 4, !dbg !6776, !tbaa !2791
  %4 = load i32, ptr %narenas, align 4, !dbg !6777, !tbaa !2791
  %cmp = icmp ult i32 %3, %4, !dbg !6778
  br i1 %cmp, label %for.body, label %for.end, !dbg !6779

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !6780
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !6750, metadata !DIExpression()), !dbg !6781
  %5 = load ptr, ptr %tsd, align 8, !dbg !6782, !tbaa !2658
  %call4 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !6784
  %6 = load i32, ptr %i, align 4, !dbg !6785, !tbaa !2791
  %call5 = call ptr @arena_get(ptr noundef %call4, i32 noundef %6, i1 noundef zeroext false), !dbg !6786
  store ptr %call5, ptr %arena, align 8, !dbg !6787, !tbaa !2658
  %cmp6 = icmp ne ptr %call5, null, !dbg !6788
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6789

if.then:                                          ; preds = %for.body
  %7 = load ptr, ptr %tsd, align 8, !dbg !6790, !tbaa !2658
  %call7 = call ptr @tsd_tsdn(ptr noundef %7), !dbg !6792
  %8 = load ptr, ptr %arena, align 8, !dbg !6793, !tbaa !2658
  call void @arena_postfork_parent(ptr noundef %call7, ptr noundef %8), !dbg !6794
  br label %if.end, !dbg !6795

if.end:                                           ; preds = %if.then, %for.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !6796
  br label %for.inc, !dbg !6797

for.inc:                                          ; preds = %if.end
  %9 = load i32, ptr %i, align 4, !dbg !6798, !tbaa !2791
  %inc = add i32 %9, 1, !dbg !6798
  store i32 %inc, ptr %i, align 4, !dbg !6798, !tbaa !2791
  br label %for.cond, !dbg !6799, !llvm.loop !6800

for.end:                                          ; preds = %for.cond
  %10 = load ptr, ptr %tsd, align 8, !dbg !6802, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %10), !dbg !6803
  call void @prof_postfork_parent(ptr noundef %call8), !dbg !6804
  %11 = load ptr, ptr %tsd, align 8, !dbg !6805, !tbaa !2658
  %call9 = call ptr @tsd_tsdn(ptr noundef %11), !dbg !6808
  call void @background_thread_postfork_parent(ptr noundef %call9), !dbg !6809
  %12 = load ptr, ptr %tsd, align 8, !dbg !6810, !tbaa !2658
  %call10 = call ptr @tsd_tsdn(ptr noundef %12), !dbg !6811
  call void @malloc_mutex_postfork_parent(ptr noundef %call10, ptr noundef @arenas_lock), !dbg !6812
  %13 = load ptr, ptr %tsd, align 8, !dbg !6813, !tbaa !2658
  %call11 = call ptr @tsd_tsdn(ptr noundef %13), !dbg !6814
  call void @tcache_postfork_parent(ptr noundef %call11), !dbg !6815
  %14 = load ptr, ptr %tsd, align 8, !dbg !6816, !tbaa !2658
  %call12 = call ptr @tsd_tsdn(ptr noundef %14), !dbg !6817
  call void @ctl_postfork_parent(ptr noundef %call12), !dbg !6818
  call void @llvm.lifetime.end.p0(i64 4, ptr %narenas) #18, !dbg !6819
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !6819
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !6819
  ret void, !dbg !6819
}

declare !dbg !6820 void @tsd_postfork_parent(ptr noundef) #5

declare !dbg !6821 void @witness_postfork_parent(ptr noundef) #5

declare !dbg !6822 void @stats_postfork_parent(ptr noundef) #5

declare !dbg !6823 void @arena_postfork_parent(ptr noundef, ptr noundef) #5

declare !dbg !6824 void @prof_postfork_parent(ptr noundef) #5

declare !dbg !6825 void @background_thread_postfork_parent(ptr noundef) #5

declare !dbg !6826 void @malloc_mutex_postfork_parent(ptr noundef, ptr noundef) #5

declare !dbg !6827 void @tcache_postfork_parent(ptr noundef) #5

declare !dbg !6828 void @ctl_postfork_parent(ptr noundef) #5

; Function Attrs: nounwind uwtable
define hidden void @jemalloc_postfork_child() #0 !dbg !6829 {
entry:
  %tsd = alloca ptr, align 8
  %i = alloca i32, align 4
  %narenas = alloca i32, align 4
  %arena = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !6838
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !6831, metadata !DIExpression()), !dbg !6839
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !6840
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6832, metadata !DIExpression()), !dbg !6841
  call void @llvm.lifetime.start.p0(i64 4, ptr %narenas) #18, !dbg !6840
  tail call void @llvm.dbg.declare(metadata ptr %narenas, metadata !6833, metadata !DIExpression()), !dbg !6842
  br label %do.body, !dbg !6843

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !6844

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6844

do.end:                                           ; preds = %do.cond
  %call = call ptr @tsd_fetch(), !dbg !6846
  store ptr %call, ptr %tsd, align 8, !dbg !6847, !tbaa !2658
  %0 = load ptr, ptr %tsd, align 8, !dbg !6848, !tbaa !2658
  call void @tsd_postfork_child(ptr noundef %0), !dbg !6849
  %1 = load ptr, ptr %tsd, align 8, !dbg !6850, !tbaa !2658
  %call1 = call ptr @tsd_witness_tsdp_get(ptr noundef %1), !dbg !6851
  call void @witness_postfork_child(ptr noundef %call1), !dbg !6852
  %2 = load ptr, ptr %tsd, align 8, !dbg !6853, !tbaa !2658
  %call2 = call ptr @tsd_tsdn(ptr noundef %2), !dbg !6854
  call void @stats_postfork_child(ptr noundef %call2), !dbg !6855
  store i32 0, ptr %i, align 4, !dbg !6856, !tbaa !2791
  %call3 = call i32 @narenas_total_get(), !dbg !6857
  store i32 %call3, ptr %narenas, align 4, !dbg !6858, !tbaa !2791
  br label %for.cond, !dbg !6859

for.cond:                                         ; preds = %for.inc, %do.end
  %3 = load i32, ptr %i, align 4, !dbg !6860, !tbaa !2791
  %4 = load i32, ptr %narenas, align 4, !dbg !6861, !tbaa !2791
  %cmp = icmp ult i32 %3, %4, !dbg !6862
  br i1 %cmp, label %for.body, label %for.end, !dbg !6863

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !6864
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !6834, metadata !DIExpression()), !dbg !6865
  %5 = load ptr, ptr %tsd, align 8, !dbg !6866, !tbaa !2658
  %call4 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !6868
  %6 = load i32, ptr %i, align 4, !dbg !6869, !tbaa !2791
  %call5 = call ptr @arena_get(ptr noundef %call4, i32 noundef %6, i1 noundef zeroext false), !dbg !6870
  store ptr %call5, ptr %arena, align 8, !dbg !6871, !tbaa !2658
  %cmp6 = icmp ne ptr %call5, null, !dbg !6872
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6873

if.then:                                          ; preds = %for.body
  %7 = load ptr, ptr %tsd, align 8, !dbg !6874, !tbaa !2658
  %call7 = call ptr @tsd_tsdn(ptr noundef %7), !dbg !6876
  %8 = load ptr, ptr %arena, align 8, !dbg !6877, !tbaa !2658
  call void @arena_postfork_child(ptr noundef %call7, ptr noundef %8), !dbg !6878
  br label %if.end, !dbg !6879

if.end:                                           ; preds = %if.then, %for.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !6880
  br label %for.inc, !dbg !6881

for.inc:                                          ; preds = %if.end
  %9 = load i32, ptr %i, align 4, !dbg !6882, !tbaa !2791
  %inc = add i32 %9, 1, !dbg !6882
  store i32 %inc, ptr %i, align 4, !dbg !6882, !tbaa !2791
  br label %for.cond, !dbg !6883, !llvm.loop !6884

for.end:                                          ; preds = %for.cond
  %10 = load ptr, ptr %tsd, align 8, !dbg !6886, !tbaa !2658
  %call8 = call ptr @tsd_tsdn(ptr noundef %10), !dbg !6887
  call void @prof_postfork_child(ptr noundef %call8), !dbg !6888
  %11 = load ptr, ptr %tsd, align 8, !dbg !6889, !tbaa !2658
  %call9 = call ptr @tsd_tsdn(ptr noundef %11), !dbg !6892
  call void @background_thread_postfork_child(ptr noundef %call9), !dbg !6893
  %12 = load ptr, ptr %tsd, align 8, !dbg !6894, !tbaa !2658
  %call10 = call ptr @tsd_tsdn(ptr noundef %12), !dbg !6895
  call void @malloc_mutex_postfork_child(ptr noundef %call10, ptr noundef @arenas_lock), !dbg !6896
  %13 = load ptr, ptr %tsd, align 8, !dbg !6897, !tbaa !2658
  %call11 = call ptr @tsd_tsdn(ptr noundef %13), !dbg !6898
  call void @tcache_postfork_child(ptr noundef %call11), !dbg !6899
  %14 = load ptr, ptr %tsd, align 8, !dbg !6900, !tbaa !2658
  %call12 = call ptr @tsd_tsdn(ptr noundef %14), !dbg !6901
  call void @ctl_postfork_child(ptr noundef %call12), !dbg !6902
  call void @llvm.lifetime.end.p0(i64 4, ptr %narenas) #18, !dbg !6903
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !6903
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !6903
  ret void, !dbg !6903
}

declare !dbg !6904 void @tsd_postfork_child(ptr noundef) #5

declare !dbg !6905 void @witness_postfork_child(ptr noundef) #5

declare !dbg !6906 void @stats_postfork_child(ptr noundef) #5

declare !dbg !6907 void @arena_postfork_child(ptr noundef, ptr noundef) #5

declare !dbg !6908 void @prof_postfork_child(ptr noundef) #5

declare !dbg !6909 void @background_thread_postfork_child(ptr noundef) #5

declare !dbg !6910 void @malloc_mutex_postfork_child(ptr noundef, ptr noundef) #5

declare !dbg !6911 void @tcache_postfork_child(ptr noundef) #5

declare !dbg !6912 void @ctl_postfork_child(ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @malloc_init_a0() #3 !dbg !6913 {
entry:
  %retval = alloca i1, align 1
  %0 = load i32, ptr @malloc_init_state, align 4, !dbg !6914, !tbaa !2810
  %cmp = icmp eq i32 %0, 3, !dbg !6914
  %lnot = xor i1 %cmp, true, !dbg !6914
  %lnot1 = xor i1 %lnot, true, !dbg !6914
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6914
  %conv = sext i32 %lnot.ext to i64, !dbg !6914
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6914
  %tobool = icmp ne i64 %expval, 0, !dbg !6914
  br i1 %tobool, label %if.then, label %if.end, !dbg !6916

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @malloc_init_hard_a0(), !dbg !6917
  store i1 %call, ptr %retval, align 1, !dbg !6919
  br label %return, !dbg !6919

if.end:                                           ; preds = %entry
  store i1 false, ptr %retval, align 1, !dbg !6920
  br label %return, !dbg !6920

return:                                           ; preds = %if.end, %if.then
  %1 = load i1, ptr %retval, align 1, !dbg !6921
  ret i1 %1, !dbg !6921
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @iallocztm(ptr noundef %tsdn, i64 noundef %size, i32 noundef %ind, i1 noundef zeroext %zero, ptr noundef %tcache, i1 noundef zeroext %is_internal, ptr noundef %arena, i1 noundef zeroext %slow_path) #3 !dbg !6922 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %ind.addr = alloca i32, align 4
  %zero.addr = alloca i8, align 1
  %tcache.addr = alloca ptr, align 8
  %is_internal.addr = alloca i8, align 1
  %arena.addr = alloca ptr, align 8
  %slow_path.addr = alloca i8, align 1
  %ret = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !6926, metadata !DIExpression()), !dbg !6935
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !6927, metadata !DIExpression()), !dbg !6936
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !6928, metadata !DIExpression()), !dbg !6937
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !6929, metadata !DIExpression()), !dbg !6938
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !6930, metadata !DIExpression()), !dbg !6939
  %frombool1 = zext i1 %is_internal to i8
  store i8 %frombool1, ptr %is_internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_internal.addr, metadata !6931, metadata !DIExpression()), !dbg !6940
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !6932, metadata !DIExpression()), !dbg !6941
  %frombool2 = zext i1 %slow_path to i8
  store i8 %frombool2, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !6933, metadata !DIExpression()), !dbg !6942
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !6943
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !6934, metadata !DIExpression()), !dbg !6944
  br label %do.body, !dbg !6945

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !6946

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6946

do.end:                                           ; preds = %do.cond
  br label %do.body3, !dbg !6948

do.body3:                                         ; preds = %do.end
  br label %do.cond4, !dbg !6949

do.cond4:                                         ; preds = %do.body3
  br label %do.end5, !dbg !6949

do.end5:                                          ; preds = %do.cond4
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !6951, !tbaa !2658
  %call = call zeroext i1 @tsdn_null(ptr noundef %0), !dbg !6953
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !6954

land.lhs.true:                                    ; preds = %do.end5
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !6955, !tbaa !2658
  %call6 = call ptr @tsdn_tsd(ptr noundef %1), !dbg !6956
  %call7 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %call6), !dbg !6957
  %conv = sext i8 %call7 to i32, !dbg !6957
  %cmp = icmp eq i32 %conv, 0, !dbg !6958
  br i1 %cmp, label %if.then, label %if.end, !dbg !6959

if.then:                                          ; preds = %land.lhs.true
  %2 = load ptr, ptr %tsdn.addr, align 8, !dbg !6960, !tbaa !2658
  %call9 = call ptr @tsdn_witness_tsdp_get(ptr noundef %2), !dbg !6962
  call void @witness_assert_depth_to_rank(ptr noundef %call9, i32 noundef 14, i32 noundef 0), !dbg !6963
  br label %if.end, !dbg !6964

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end5
  %3 = load ptr, ptr %tsdn.addr, align 8, !dbg !6965, !tbaa !2658
  %4 = load ptr, ptr %arena.addr, align 8, !dbg !6966, !tbaa !2658
  %5 = load i64, ptr %size.addr, align 8, !dbg !6967, !tbaa !2663
  %6 = load i32, ptr %ind.addr, align 4, !dbg !6968, !tbaa !2791
  %7 = load i8, ptr %zero.addr, align 1, !dbg !6969, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %7 to i1, !dbg !6969
  %8 = load ptr, ptr %tcache.addr, align 8, !dbg !6970, !tbaa !2658
  %9 = load i8, ptr %slow_path.addr, align 1, !dbg !6971, !tbaa !2695, !range !2708, !noundef !2709
  %tobool10 = trunc i8 %9 to i1, !dbg !6971
  %call11 = call ptr @arena_malloc(ptr noundef %3, ptr noundef %4, i64 noundef %5, i32 noundef %6, i1 noundef zeroext %tobool, ptr noundef %8, i1 noundef zeroext %tobool10), !dbg !6972
  store ptr %call11, ptr %ret, align 8, !dbg !6973, !tbaa !2658
  %10 = load i8, ptr %is_internal.addr, align 1, !dbg !6974, !tbaa !2695, !range !2708, !noundef !2709
  %tobool12 = trunc i8 %10 to i1, !dbg !6974
  br i1 %tobool12, label %land.lhs.true14, label %if.end23, !dbg !6976

land.lhs.true14:                                  ; preds = %if.end
  %11 = load ptr, ptr %ret, align 8, !dbg !6977, !tbaa !2658
  %cmp15 = icmp ne ptr %11, null, !dbg !6977
  %lnot = xor i1 %cmp15, true, !dbg !6977
  %lnot17 = xor i1 %lnot, true, !dbg !6977
  %lnot.ext = zext i1 %lnot17 to i32, !dbg !6977
  %conv18 = sext i32 %lnot.ext to i64, !dbg !6977
  %expval = call i64 @llvm.expect.i64(i64 %conv18, i64 1), !dbg !6977
  %tobool19 = icmp ne i64 %expval, 0, !dbg !6977
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !6978

if.then20:                                        ; preds = %land.lhs.true14
  %12 = load ptr, ptr %tsdn.addr, align 8, !dbg !6979, !tbaa !2658
  %13 = load ptr, ptr %ret, align 8, !dbg !6981, !tbaa !2658
  %call21 = call ptr @iaalloc(ptr noundef %12, ptr noundef %13), !dbg !6982
  %14 = load ptr, ptr %tsdn.addr, align 8, !dbg !6983, !tbaa !2658
  %15 = load ptr, ptr %ret, align 8, !dbg !6984, !tbaa !2658
  %call22 = call i64 @isalloc(ptr noundef %14, ptr noundef %15), !dbg !6985
  call void @arena_internal_add(ptr noundef %call21, i64 noundef %call22), !dbg !6986
  br label %if.end23, !dbg !6987

if.end23:                                         ; preds = %if.then20, %land.lhs.true14, %if.end
  %16 = load ptr, ptr %ret, align 8, !dbg !6988, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !6989
  ret ptr %16, !dbg !6990
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_init_hard_a0() #0 !dbg !6991 {
entry:
  %ret = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr %ret) #18, !dbg !6994
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !6993, metadata !DIExpression()), !dbg !6995
  call void @malloc_mutex_lock(ptr noundef null, ptr noundef @init_lock), !dbg !6996
  %call = call zeroext i1 @malloc_init_hard_a0_locked(), !dbg !6997
  %frombool = zext i1 %call to i8, !dbg !6998
  store i8 %frombool, ptr %ret, align 1, !dbg !6998, !tbaa !2695
  call void @malloc_mutex_unlock(ptr noundef null, ptr noundef @init_lock), !dbg !6999
  %0 = load i8, ptr %ret, align 1, !dbg !7000, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !7000
  call void @llvm.lifetime.end.p0(i64 1, ptr %ret) #18, !dbg !7001
  ret i1 %tobool, !dbg !7002
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_init_hard_a0_locked() #0 !dbg !7003 {
entry:
  %retval = alloca i1, align 1
  %sc_data = alloca %struct.sc_data_s, align 8
  %bin_shard_sizes = alloca [36 x i32], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %hpa_shard_opts = alloca %struct.hpa_shard_opts_s, align 8
  %call = call i64 @pthread_self() #21, !dbg !7012
  store i64 %call, ptr @malloc_initializer, align 8, !dbg !7013, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 6576, ptr %sc_data) #18, !dbg !7014
  tail call void @llvm.dbg.declare(metadata ptr %sc_data, metadata !7005, metadata !DIExpression()), !dbg !7015
  call void @llvm.memset.p0.i64(ptr align 8 %sc_data, i8 0, i64 6576, i1 false), !dbg !7015
  call void @sc_boot(ptr noundef %sc_data), !dbg !7016
  call void @llvm.lifetime.start.p0(i64 144, ptr %bin_shard_sizes) #18, !dbg !7017
  tail call void @llvm.dbg.declare(metadata ptr %bin_shard_sizes, metadata !7006, metadata !DIExpression()), !dbg !7018
  %arraydecay = getelementptr inbounds [36 x i32], ptr %bin_shard_sizes, i64 0, i64 0, !dbg !7019
  call void @bin_shard_sizes_boot(ptr noundef %arraydecay), !dbg !7020
  %arraydecay1 = getelementptr inbounds [36 x i32], ptr %bin_shard_sizes, i64 0, i64 0, !dbg !7021
  call void @malloc_conf_init(ptr noundef %sc_data, ptr noundef %arraydecay1), !dbg !7022
  %0 = load i64, ptr @opt_lg_san_uaf_align, align 8, !dbg !7023, !tbaa !2663
  call void @san_init(i64 noundef %0), !dbg !7024
  %1 = load i8, ptr @opt_cache_oblivious, align 1, !dbg !7025, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !7025
  call void @sz_boot(ptr noundef %sc_data, i1 noundef zeroext %tobool), !dbg !7026
  %arraydecay2 = getelementptr inbounds [36 x i32], ptr %bin_shard_sizes, i64 0, i64 0, !dbg !7027
  call void @bin_info_boot(ptr noundef %sc_data, ptr noundef %arraydecay2), !dbg !7028
  %2 = load i8, ptr @opt_stats_print, align 1, !dbg !7029, !tbaa !2695, !range !2708, !noundef !2709
  %tobool3 = trunc i8 %2 to i1, !dbg !7029
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !7031

if.then:                                          ; preds = %entry
  %call4 = call i32 @atexit(ptr noundef @stats_print_atexit) #18, !dbg !7032
  %cmp = icmp ne i32 %call4, 0, !dbg !7035
  br i1 %cmp, label %if.then5, label %if.end8, !dbg !7036

if.then5:                                         ; preds = %if.then
  call void @malloc_write(ptr noundef @.str.77), !dbg !7037
  %3 = load i8, ptr @opt_abort, align 1, !dbg !7039, !tbaa !2695, !range !2708, !noundef !2709
  %tobool6 = trunc i8 %3 to i1, !dbg !7039
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !7041

if.then7:                                         ; preds = %if.then5
  call void @abort() #19, !dbg !7042
  unreachable, !dbg !7042

if.end:                                           ; preds = %if.then5
  br label %if.end8, !dbg !7044

if.end8:                                          ; preds = %if.end, %if.then
  br label %if.end9, !dbg !7045

if.end9:                                          ; preds = %if.end8, %entry
  %call10 = call zeroext i1 @stats_boot(), !dbg !7046
  br i1 %call10, label %if.then11, label %if.end12, !dbg !7048

if.then11:                                        ; preds = %if.end9
  store i1 true, ptr %retval, align 1, !dbg !7049
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7049

if.end12:                                         ; preds = %if.end9
  %call13 = call zeroext i1 @pages_boot(), !dbg !7051
  br i1 %call13, label %if.then14, label %if.end15, !dbg !7053

if.then14:                                        ; preds = %if.end12
  store i1 true, ptr %retval, align 1, !dbg !7054
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7054

if.end15:                                         ; preds = %if.end12
  %call16 = call zeroext i1 @base_boot(ptr noundef null), !dbg !7056
  br i1 %call16, label %if.then17, label %if.end18, !dbg !7058

if.then17:                                        ; preds = %if.end15
  store i1 true, ptr %retval, align 1, !dbg !7059
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7059

if.end18:                                         ; preds = %if.end15
  %call19 = call ptr @b0get(), !dbg !7061
  %call20 = call zeroext i1 @emap_init(ptr noundef @arena_emap_global, ptr noundef %call19, i1 noundef zeroext true), !dbg !7063
  br i1 %call20, label %if.then21, label %if.end22, !dbg !7064

if.then21:                                        ; preds = %if.end18
  store i1 true, ptr %retval, align 1, !dbg !7065
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7065

if.end22:                                         ; preds = %if.end18
  %call23 = call zeroext i1 @extent_boot(), !dbg !7067
  br i1 %call23, label %if.then24, label %if.end25, !dbg !7069

if.then24:                                        ; preds = %if.end22
  store i1 true, ptr %retval, align 1, !dbg !7070
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7070

if.end25:                                         ; preds = %if.end22
  %call26 = call zeroext i1 @ctl_boot(), !dbg !7072
  br i1 %call26, label %if.then27, label %if.end28, !dbg !7074

if.then27:                                        ; preds = %if.end25
  store i1 true, ptr %retval, align 1, !dbg !7075
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7075

if.end28:                                         ; preds = %if.end25
  %4 = load i8, ptr @opt_hpa, align 1, !dbg !7077, !tbaa !2695, !range !2708, !noundef !2709
  %tobool29 = trunc i8 %4 to i1, !dbg !7077
  br i1 %tobool29, label %land.lhs.true, label %if.end36, !dbg !7079

land.lhs.true:                                    ; preds = %if.end28
  %call30 = call zeroext i1 (...) @hpa_supported(), !dbg !7080
  br i1 %call30, label %if.end36, label %if.then31, !dbg !7081

if.then31:                                        ; preds = %land.lhs.true
  %5 = load i8, ptr @opt_abort_conf, align 1, !dbg !7082, !tbaa !2695, !range !2708, !noundef !2709
  %tobool32 = trunc i8 %5 to i1, !dbg !7082
  %6 = zext i1 %tobool32 to i64, !dbg !7082
  %cond = select i1 %tobool32, ptr @.str.79, ptr @.str.80, !dbg !7082
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.78, ptr noundef %cond), !dbg !7084
  %7 = load i8, ptr @opt_abort_conf, align 1, !dbg !7085, !tbaa !2695, !range !2708, !noundef !2709
  %tobool33 = trunc i8 %7 to i1, !dbg !7085
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !7087

if.then34:                                        ; preds = %if.then31
  call void @malloc_abort_invalid_conf(), !dbg !7088
  br label %if.end35, !dbg !7090

if.else:                                          ; preds = %if.then31
  store i8 0, ptr @opt_hpa, align 1, !dbg !7091, !tbaa !2695
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then34
  br label %if.end36, !dbg !7093

if.end36:                                         ; preds = %if.end35, %land.lhs.true, %if.end28
  %call37 = call ptr @b0get(), !dbg !7094
  %8 = load i8, ptr @opt_hpa, align 1, !dbg !7096, !tbaa !2695, !range !2708, !noundef !2709
  %tobool38 = trunc i8 %8 to i1, !dbg !7096
  %call39 = call zeroext i1 @arena_boot(ptr noundef %sc_data, ptr noundef %call37, i1 noundef zeroext %tobool38), !dbg !7097
  br i1 %call39, label %if.then40, label %if.end41, !dbg !7098

if.then40:                                        ; preds = %if.end36
  store i1 true, ptr %retval, align 1, !dbg !7099
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7099

if.end41:                                         ; preds = %if.end36
  %call42 = call ptr @b0get(), !dbg !7101
  %call43 = call zeroext i1 @tcache_boot(ptr noundef null, ptr noundef %call42), !dbg !7103
  br i1 %call43, label %if.then44, label %if.end45, !dbg !7104

if.then44:                                        ; preds = %if.end41
  store i1 true, ptr %retval, align 1, !dbg !7105
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7105

if.end45:                                         ; preds = %if.end41
  %call46 = call zeroext i1 @malloc_mutex_init(ptr noundef @arenas_lock, ptr noundef @.str.81, i32 noundef 4, i32 noundef 0), !dbg !7107
  br i1 %call46, label %if.then47, label %if.end48, !dbg !7109

if.then47:                                        ; preds = %if.end45
  store i1 true, ptr %retval, align 1, !dbg !7110
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7110

if.end48:                                         ; preds = %if.end45
  %call49 = call zeroext i1 (...) @hook_boot(), !dbg !7112
  store i32 1, ptr @narenas_auto, align 4, !dbg !7113, !tbaa !2791
  %9 = load i32, ptr @narenas_auto, align 4, !dbg !7114, !tbaa !2791
  %add = add i32 %9, 1, !dbg !7115
  store i32 %add, ptr @manual_arena_base, align 4, !dbg !7116, !tbaa !2791
  %10 = load i32, ptr @narenas_auto, align 4, !dbg !7117, !tbaa !2791
  %conv = zext i32 %10 to i64, !dbg !7117
  %mul = mul i64 8, %conv, !dbg !7118
  call void @llvm.memset.p0.i64(ptr align 64 @arenas, i8 0, i64 %mul, i1 false), !dbg !7119
  %call50 = call ptr @arena_init(ptr noundef null, i32 noundef 0, ptr noundef @arena_config_default), !dbg !7120
  %cmp51 = icmp eq ptr %call50, null, !dbg !7122
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !7123

if.then53:                                        ; preds = %if.end48
  store i1 true, ptr %retval, align 1, !dbg !7124
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7124

if.end54:                                         ; preds = %if.end48
  %call55 = call ptr @arena_get(ptr noundef null, i32 noundef 0, i1 noundef zeroext false), !dbg !7126
  store ptr %call55, ptr @a0, align 8, !dbg !7127, !tbaa !2658
  %11 = load i8, ptr @opt_hpa, align 1, !dbg !7128, !tbaa !2695, !range !2708, !noundef !2709
  %tobool56 = trunc i8 %11 to i1, !dbg !7128
  br i1 %tobool56, label %land.lhs.true58, label %if.else68, !dbg !7129

land.lhs.true58:                                  ; preds = %if.end54
  %call59 = call zeroext i1 (...) @hpa_supported(), !dbg !7130
  br i1 %call59, label %if.else68, label %if.then60, !dbg !7131

if.then60:                                        ; preds = %land.lhs.true58
  %12 = load i8, ptr @opt_abort_conf, align 1, !dbg !7132, !tbaa !2695, !range !2708, !noundef !2709
  %tobool61 = trunc i8 %12 to i1, !dbg !7132
  %13 = zext i1 %tobool61 to i64, !dbg !7132
  %cond63 = select i1 %tobool61, ptr @.str.79, ptr @.str.80, !dbg !7132
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.78, ptr noundef %cond63), !dbg !7134
  %14 = load i8, ptr @opt_abort_conf, align 1, !dbg !7135, !tbaa !2695, !range !2708, !noundef !2709
  %tobool64 = trunc i8 %14 to i1, !dbg !7135
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !7137

if.then65:                                        ; preds = %if.then60
  call void @malloc_abort_invalid_conf(), !dbg !7138
  br label %if.end67, !dbg !7140

if.else66:                                        ; preds = %if.then60
  store i8 0, ptr @opt_hpa, align 1, !dbg !7141, !tbaa !2695
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then65
  br label %if.end76, !dbg !7143

if.else68:                                        ; preds = %land.lhs.true58, %if.end54
  %15 = load i8, ptr @opt_hpa, align 1, !dbg !7144, !tbaa !2695, !range !2708, !noundef !2709
  %tobool69 = trunc i8 %15 to i1, !dbg !7144
  br i1 %tobool69, label %if.then70, label %if.end75, !dbg !7145

if.then70:                                        ; preds = %if.else68
  call void @llvm.lifetime.start.p0(i64 40, ptr %hpa_shard_opts) #18, !dbg !7146
  tail call void @llvm.dbg.declare(metadata ptr %hpa_shard_opts, metadata !7008, metadata !DIExpression()), !dbg !7147
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %hpa_shard_opts, ptr align 8 @opt_hpa_opts, i64 40, i1 false), !dbg !7148, !tbaa.struct !7149
  %call71 = call zeroext i1 @background_thread_enabled(), !dbg !7150
  %deferral_allowed = getelementptr inbounds %struct.hpa_shard_opts_s, ptr %hpa_shard_opts, i32 0, i32 3, !dbg !7151
  %frombool = zext i1 %call71 to i8, !dbg !7152
  store i8 %frombool, ptr %deferral_allowed, align 4, !dbg !7152, !tbaa !7153
  %16 = load ptr, ptr @a0, align 8, !dbg !7154, !tbaa !2658
  %pa_shard = getelementptr inbounds %struct.arena_s, ptr %16, i32 0, i32 10, !dbg !7156
  %call72 = call zeroext i1 @pa_shard_enable_hpa(ptr noundef null, ptr noundef %pa_shard, ptr noundef %hpa_shard_opts, ptr noundef @opt_hpa_sec_opts), !dbg !7157
  br i1 %call72, label %if.then73, label %if.end74, !dbg !7158

if.then73:                                        ; preds = %if.then70
  store i1 true, ptr %retval, align 1, !dbg !7159
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7159

if.end74:                                         ; preds = %if.then70
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7161
  br label %cleanup, !dbg !7161

cleanup:                                          ; preds = %if.end74, %if.then73
  call void @llvm.lifetime.end.p0(i64 40, ptr %hpa_shard_opts) #18, !dbg !7161
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup77 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end75, !dbg !7162

if.end75:                                         ; preds = %cleanup.cont, %if.else68
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end67
  store i32 2, ptr @malloc_init_state, align 4, !dbg !7163, !tbaa !2810
  store i1 false, ptr %retval, align 1, !dbg !7164
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77, !dbg !7164

cleanup77:                                        ; preds = %if.end76, %cleanup, %if.then53, %if.then47, %if.then44, %if.then40, %if.then27, %if.then24, %if.then21, %if.then17, %if.then14, %if.then11
  call void @llvm.lifetime.end.p0(i64 144, ptr %bin_shard_sizes) #18, !dbg !7165
  call void @llvm.lifetime.end.p0(i64 6576, ptr %sc_data) #18, !dbg !7165
  %17 = load i1, ptr %retval, align 1, !dbg !7165
  ret i1 %17, !dbg !7165
}

; Function Attrs: nounwind willreturn memory(none)
declare !dbg !7166 i64 @pthread_self() #12

declare !dbg !7170 void @sc_boot(ptr noundef) #5

declare !dbg !7173 void @bin_shard_sizes_boot(ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @malloc_conf_init(ptr noundef %sc_data, ptr noundef %bin_shard_sizes) #0 !dbg !7176 {
entry:
  %sc_data.addr = alloca ptr, align 8
  %bin_shard_sizes.addr = alloca ptr, align 8
  %opts_cache = alloca [5 x ptr], align 16
  %buf = alloca [4097 x i8], align 16
  store ptr %sc_data, ptr %sc_data.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %sc_data.addr, metadata !7180, metadata !DIExpression()), !dbg !7187
  store ptr %bin_shard_sizes, ptr %bin_shard_sizes.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin_shard_sizes.addr, metadata !7181, metadata !DIExpression()), !dbg !7188
  call void @llvm.lifetime.start.p0(i64 40, ptr %opts_cache) #18, !dbg !7189
  tail call void @llvm.dbg.declare(metadata ptr %opts_cache, metadata !7182, metadata !DIExpression()), !dbg !7190
  call void @llvm.memset.p0.i64(ptr align 16 %opts_cache, i8 0, i64 40, i1 false), !dbg !7190
  call void @llvm.lifetime.start.p0(i64 4097, ptr %buf) #18, !dbg !7191
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !7183, metadata !DIExpression()), !dbg !7192
  %arraydecay = getelementptr inbounds [5 x ptr], ptr %opts_cache, i64 0, i64 0, !dbg !7193
  %arraydecay1 = getelementptr inbounds [4097 x i8], ptr %buf, i64 0, i64 0, !dbg !7194
  call void @malloc_conf_init_helper(ptr noundef null, ptr noundef null, i1 noundef zeroext true, ptr noundef %arraydecay, ptr noundef %arraydecay1), !dbg !7195
  %0 = load ptr, ptr %sc_data.addr, align 8, !dbg !7196, !tbaa !2658
  %1 = load ptr, ptr %bin_shard_sizes.addr, align 8, !dbg !7197, !tbaa !2658
  %arraydecay2 = getelementptr inbounds [5 x ptr], ptr %opts_cache, i64 0, i64 0, !dbg !7198
  call void @malloc_conf_init_helper(ptr noundef %0, ptr noundef %1, i1 noundef zeroext false, ptr noundef %arraydecay2, ptr noundef null), !dbg !7199
  %call = call zeroext i1 @malloc_conf_init_check_deps(), !dbg !7200
  br i1 %call, label %if.then, label %if.end4, !dbg !7202

if.then:                                          ; preds = %entry
  %2 = load i8, ptr @opt_abort_conf, align 1, !dbg !7203, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !7203
  br i1 %tobool, label %if.then3, label %if.end, !dbg !7206

if.then3:                                         ; preds = %if.then
  call void @malloc_abort_invalid_conf(), !dbg !7207
  br label %if.end, !dbg !7209

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !7210

if.end4:                                          ; preds = %if.end, %entry
  call void @llvm.lifetime.end.p0(i64 4097, ptr %buf) #18, !dbg !7211
  call void @llvm.lifetime.end.p0(i64 40, ptr %opts_cache) #18, !dbg !7211
  ret void, !dbg !7211
}

declare !dbg !7212 void @san_init(i64 noundef) #5

declare !dbg !7215 void @sz_boot(ptr noundef, i1 noundef zeroext) #5

declare !dbg !7220 void @bin_info_boot(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind
declare !dbg !7222 i32 @atexit(ptr noundef) #13

; Function Attrs: nounwind uwtable
define internal void @stats_print_atexit() #0 !dbg !7227 {
entry:
  %tsdn = alloca ptr, align 8
  %narenas = alloca i32, align 4
  %i = alloca i32, align 4
  %arena = alloca ptr, align 8
  %tcache_slow = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsdn) #18, !dbg !7241
  tail call void @llvm.dbg.declare(metadata ptr %tsdn, metadata !7229, metadata !DIExpression()), !dbg !7242
  call void @llvm.lifetime.start.p0(i64 4, ptr %narenas) #18, !dbg !7243
  tail call void @llvm.dbg.declare(metadata ptr %narenas, metadata !7232, metadata !DIExpression()), !dbg !7244
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !7243
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !7233, metadata !DIExpression()), !dbg !7245
  %call = call ptr @tsdn_fetch(), !dbg !7246
  store ptr %call, ptr %tsdn, align 8, !dbg !7247, !tbaa !2658
  store i32 0, ptr %i, align 4, !dbg !7248, !tbaa !2791
  %call1 = call i32 @narenas_total_get(), !dbg !7249
  store i32 %call1, ptr %narenas, align 4, !dbg !7250, !tbaa !2791
  br label %for.cond, !dbg !7251

for.cond:                                         ; preds = %for.inc13, %entry
  %0 = load i32, ptr %i, align 4, !dbg !7252, !tbaa !2791
  %1 = load i32, ptr %narenas, align 4, !dbg !7253, !tbaa !2791
  %cmp = icmp ult i32 %0, %1, !dbg !7254
  br i1 %cmp, label %for.body, label %for.end14, !dbg !7255

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !7256
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !7234, metadata !DIExpression()), !dbg !7257
  %2 = load ptr, ptr %tsdn, align 8, !dbg !7258, !tbaa !2658
  %3 = load i32, ptr %i, align 4, !dbg !7259, !tbaa !2791
  %call2 = call ptr @arena_get(ptr noundef %2, i32 noundef %3, i1 noundef zeroext false), !dbg !7260
  store ptr %call2, ptr %arena, align 8, !dbg !7257, !tbaa !2658
  %4 = load ptr, ptr %arena, align 8, !dbg !7261, !tbaa !2658
  %cmp3 = icmp ne ptr %4, null, !dbg !7262
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7263

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache_slow) #18, !dbg !7264
  tail call void @llvm.dbg.declare(metadata ptr %tcache_slow, metadata !7238, metadata !DIExpression()), !dbg !7265
  %5 = load ptr, ptr %tsdn, align 8, !dbg !7266, !tbaa !2658
  %6 = load ptr, ptr %arena, align 8, !dbg !7267, !tbaa !2658
  %tcache_ql_mtx = getelementptr inbounds %struct.arena_s, ptr %6, i32 0, i32 6, !dbg !7268
  call void @malloc_mutex_lock(ptr noundef %5, ptr noundef %tcache_ql_mtx), !dbg !7269
  %7 = load ptr, ptr %arena, align 8, !dbg !7270, !tbaa !2658
  %tcache_ql = getelementptr inbounds %struct.arena_s, ptr %7, i32 0, i32 4, !dbg !7270
  %qlh_first = getelementptr inbounds %struct.anon.1, ptr %tcache_ql, i32 0, i32 0, !dbg !7270
  %8 = load ptr, ptr %qlh_first, align 8, !dbg !7270, !tbaa !7272
  store ptr %8, ptr %tcache_slow, align 8, !dbg !7270, !tbaa !2658
  br label %for.cond4, !dbg !7270

for.cond4:                                        ; preds = %cond.end, %if.then
  %9 = load ptr, ptr %tcache_slow, align 8, !dbg !7273, !tbaa !2658
  %cmp5 = icmp ne ptr %9, null, !dbg !7273
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !7270

for.body6:                                        ; preds = %for.cond4
  %10 = load ptr, ptr %tsdn, align 8, !dbg !7275, !tbaa !2658
  %11 = load ptr, ptr %tcache_slow, align 8, !dbg !7277, !tbaa !2658
  %tcache = getelementptr inbounds %struct.tcache_slow_s, ptr %11, i32 0, i32 8, !dbg !7278
  %12 = load ptr, ptr %tcache, align 8, !dbg !7278, !tbaa !7279
  %13 = load ptr, ptr %arena, align 8, !dbg !7283, !tbaa !2658
  call void @tcache_stats_merge(ptr noundef %10, ptr noundef %12, ptr noundef %13), !dbg !7284
  br label %for.inc, !dbg !7285

for.inc:                                          ; preds = %for.body6
  %14 = load ptr, ptr %tcache_slow, align 8, !dbg !7273, !tbaa !2658
  %link = getelementptr inbounds %struct.tcache_slow_s, ptr %14, i32 0, i32 0, !dbg !7273
  %qre_next = getelementptr inbounds %struct.anon.8, ptr %link, i32 0, i32 0, !dbg !7273
  %15 = load ptr, ptr %qre_next, align 8, !dbg !7273, !tbaa !7286
  %16 = load ptr, ptr %arena, align 8, !dbg !7273, !tbaa !2658
  %tcache_ql7 = getelementptr inbounds %struct.arena_s, ptr %16, i32 0, i32 4, !dbg !7273
  %qlh_first8 = getelementptr inbounds %struct.anon.1, ptr %tcache_ql7, i32 0, i32 0, !dbg !7273
  %17 = load ptr, ptr %qlh_first8, align 8, !dbg !7273, !tbaa !7272
  %cmp9 = icmp ne ptr %15, %17, !dbg !7273
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !7273

cond.true:                                        ; preds = %for.inc
  %18 = load ptr, ptr %tcache_slow, align 8, !dbg !7273, !tbaa !2658
  %link10 = getelementptr inbounds %struct.tcache_slow_s, ptr %18, i32 0, i32 0, !dbg !7273
  %qre_next11 = getelementptr inbounds %struct.anon.8, ptr %link10, i32 0, i32 0, !dbg !7273
  %19 = load ptr, ptr %qre_next11, align 8, !dbg !7273, !tbaa !7286
  br label %cond.end, !dbg !7273

cond.false:                                       ; preds = %for.inc
  br label %cond.end, !dbg !7273

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %19, %cond.true ], [ null, %cond.false ], !dbg !7273
  store ptr %cond, ptr %tcache_slow, align 8, !dbg !7273, !tbaa !2658
  br label %for.cond4, !dbg !7273, !llvm.loop !7287

for.end:                                          ; preds = %for.cond4
  %20 = load ptr, ptr %tsdn, align 8, !dbg !7289, !tbaa !2658
  %21 = load ptr, ptr %arena, align 8, !dbg !7290, !tbaa !2658
  %tcache_ql_mtx12 = getelementptr inbounds %struct.arena_s, ptr %21, i32 0, i32 6, !dbg !7291
  call void @malloc_mutex_unlock(ptr noundef %20, ptr noundef %tcache_ql_mtx12), !dbg !7292
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache_slow) #18, !dbg !7293
  br label %if.end, !dbg !7294

if.end:                                           ; preds = %for.end, %for.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !7295
  br label %for.inc13, !dbg !7296

for.inc13:                                        ; preds = %if.end
  %22 = load i32, ptr %i, align 4, !dbg !7297, !tbaa !2791
  %inc = add i32 %22, 1, !dbg !7297
  store i32 %inc, ptr %i, align 4, !dbg !7297, !tbaa !2791
  br label %for.cond, !dbg !7298, !llvm.loop !7299

for.end14:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !7301
  call void @llvm.lifetime.end.p0(i64 4, ptr %narenas) #18, !dbg !7301
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsdn) #18, !dbg !7301
  call void @je_malloc_stats_print(ptr noundef null, ptr noundef null, ptr noundef @opt_stats_print_opts) #18, !dbg !7302
  ret void, !dbg !7303
}

declare !dbg !7304 void @malloc_write(ptr noundef) #5

; Function Attrs: noreturn nounwind
declare !dbg !7308 void @abort() #14

declare !dbg !7309 zeroext i1 @stats_boot() #5

declare !dbg !7310 zeroext i1 @pages_boot() #5

declare !dbg !7311 zeroext i1 @base_boot(ptr noundef) #5

declare !dbg !7314 zeroext i1 @emap_init(ptr noundef, ptr noundef, i1 noundef zeroext) #5

declare !dbg !7317 ptr @b0get() #5

declare !dbg !7320 zeroext i1 @extent_boot() #5

declare !dbg !7322 zeroext i1 @ctl_boot() #5

declare !dbg !7323 zeroext i1 @hpa_supported(...) #5

declare !dbg !7324 void @malloc_printf(ptr noundef, ...) #5

; Function Attrs: nounwind uwtable
define internal void @malloc_abort_invalid_conf() #0 !dbg !7327 {
entry:
  br label %do.body, !dbg !7328

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7329

do.end:                                           ; preds = %do.body
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.159), !dbg !7331
  call void @abort() #19, !dbg !7332
  unreachable, !dbg !7332
}

declare !dbg !7333 zeroext i1 @arena_boot(ptr noundef, ptr noundef, i1 noundef zeroext) #5

declare !dbg !7336 zeroext i1 @tcache_boot(ptr noundef, ptr noundef) #5

declare !dbg !7339 zeroext i1 @malloc_mutex_init(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #5

declare !dbg !7342 zeroext i1 @hook_boot(...) #5

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #15

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @background_thread_enabled() #3 !dbg !7343 {
entry:
  %call = call zeroext i1 @atomic_load_b(ptr noundef @background_thread_enabled_state, i32 noundef 0), !dbg !7345
  ret i1 %call, !dbg !7346
}

declare !dbg !7347 zeroext i1 @pa_shard_enable_hpa(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @malloc_conf_init_helper(ptr noundef %sc_data, ptr noundef %bin_shard_sizes, i1 noundef zeroext %initial_call, ptr noundef %opts_cache, ptr noundef %buf) #0 !dbg !2129 {
entry:
  %sc_data.addr = alloca ptr, align 8
  %bin_shard_sizes.addr = alloca ptr, align 8
  %initial_call.addr = alloca i8, align 1
  %opts_cache.addr = alloca ptr, align 8
  %buf.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %opts = alloca ptr, align 8
  %k = alloca ptr, align 8
  %v = alloca ptr, align 8
  %klen = alloca i64, align 8
  %vlen = alloca i64, align 8
  %cur_opt_valid = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  %m = alloca i32, align 4
  %match = alloca i8, align 1
  %m255 = alloca i32, align 4
  %match256 = alloca i8, align 1
  %mv = alloca i64, align 8
  %end = alloca ptr, align 8
  %end373 = alloca ptr, align 8
  %err = alloca i8, align 1
  %bin_shards_segment_cur = alloca ptr, align 8
  %vlen_left = alloca i64, align 8
  %size_start = alloca i64, align 8
  %size_end = alloca i64, align 8
  %nshards = alloca i64, align 8
  %err405 = alloca i8, align 1
  %mv444 = alloca i64, align 8
  %end445 = alloca ptr, align 8
  %mv489 = alloca i64, align 8
  %end490 = alloca ptr, align 8
  %mv537 = alloca i64, align 8
  %end538 = alloca ptr, align 8
  %mv644 = alloca i64, align 8
  %end645 = alloca ptr, align 8
  %mv886 = alloca i64, align 8
  %end887 = alloca ptr, align 8
  %m928 = alloca i64, align 8
  %end929 = alloca ptr, align 8
  %mv969 = alloca i64, align 8
  %end970 = alloca ptr, align 8
  %mv1017 = alloca i64, align 8
  %end1018 = alloca ptr, align 8
  %mv1065 = alloca i64, align 8
  %end1066 = alloca ptr, align 8
  %mv1113 = alloca i64, align 8
  %end1114 = alloca ptr, align 8
  %mv1161 = alloca i64, align 8
  %end1162 = alloca ptr, align 8
  %mv1203 = alloca i64, align 8
  %end1204 = alloca ptr, align 8
  %mv1240 = alloca i64, align 8
  %end1241 = alloca ptr, align 8
  %mv1288 = alloca i64, align 8
  %end1289 = alloca ptr, align 8
  %mv1336 = alloca i64, align 8
  %end1337 = alloca ptr, align 8
  %mv1381 = alloca i64, align 8
  %end1382 = alloca ptr, align 8
  %match1423 = alloca i8, align 1
  %m1424 = alloca i32, align 4
  %mv1506 = alloca i64, align 8
  %end1507 = alloca ptr, align 8
  %mv1593 = alloca i64, align 8
  %end1594 = alloca ptr, align 8
  %mv1640 = alloca i64, align 8
  %end1641 = alloca ptr, align 8
  %ratio = alloca i32, align 4
  %end1687 = alloca ptr, align 8
  %err1688 = alloca i8, align 1
  %mv1731 = alloca i64, align 8
  %end1732 = alloca ptr, align 8
  %mv1768 = alloca i64, align 8
  %end1769 = alloca ptr, align 8
  %ratio1824 = alloca i32, align 4
  %end1825 = alloca ptr, align 8
  %err1826 = alloca i8, align 1
  %mv1865 = alloca i64, align 8
  %end1866 = alloca ptr, align 8
  %mv1907 = alloca i64, align 8
  %end1908 = alloca ptr, align 8
  %mv1949 = alloca i64, align 8
  %end1950 = alloca ptr, align 8
  %mv1991 = alloca i64, align 8
  %end1992 = alloca ptr, align 8
  %mv2033 = alloca i64, align 8
  %end2034 = alloca ptr, align 8
  %err2099 = alloca i8, align 1
  %slab_size_segment_cur = alloca ptr, align 8
  %vlen_left2100 = alloca i64, align 8
  %slab_start = alloca i64, align 8
  %slab_end = alloca i64, align 8
  %pgs = alloca i64, align 8
  %match2141 = alloca i8, align 1
  %m2142 = alloca i32, align 4
  %mv2234 = alloca i64, align 8
  %end2235 = alloca ptr, align 8
  %mv2271 = alloca i64, align 8
  %end2272 = alloca ptr, align 8
  store ptr %sc_data, ptr %sc_data.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %sc_data.addr, metadata !2166, metadata !DIExpression()), !dbg !7355
  store ptr %bin_shard_sizes, ptr %bin_shard_sizes.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin_shard_sizes.addr, metadata !2167, metadata !DIExpression()), !dbg !7356
  %frombool = zext i1 %initial_call to i8
  store i8 %frombool, ptr %initial_call.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %initial_call.addr, metadata !2168, metadata !DIExpression()), !dbg !7357
  store ptr %opts_cache, ptr %opts_cache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %opts_cache.addr, metadata !2169, metadata !DIExpression()), !dbg !7358
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !2170, metadata !DIExpression()), !dbg !7359
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !7360
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !2171, metadata !DIExpression()), !dbg !7361
  call void @llvm.lifetime.start.p0(i64 8, ptr %opts) #18, !dbg !7362
  tail call void @llvm.dbg.declare(metadata ptr %opts, metadata !2172, metadata !DIExpression()), !dbg !7363
  call void @llvm.lifetime.start.p0(i64 8, ptr %k) #18, !dbg !7362
  tail call void @llvm.dbg.declare(metadata ptr %k, metadata !2173, metadata !DIExpression()), !dbg !7364
  call void @llvm.lifetime.start.p0(i64 8, ptr %v) #18, !dbg !7362
  tail call void @llvm.dbg.declare(metadata ptr %v, metadata !2174, metadata !DIExpression()), !dbg !7365
  call void @llvm.lifetime.start.p0(i64 8, ptr %klen) #18, !dbg !7366
  tail call void @llvm.dbg.declare(metadata ptr %klen, metadata !2175, metadata !DIExpression()), !dbg !7367
  call void @llvm.lifetime.start.p0(i64 8, ptr %vlen) #18, !dbg !7366
  tail call void @llvm.dbg.declare(metadata ptr %vlen, metadata !2176, metadata !DIExpression()), !dbg !7368
  store i32 0, ptr %i, align 4, !dbg !7369, !tbaa !2791
  br label %for.cond, !dbg !7370

for.cond:                                         ; preds = %for.inc2314, %entry
  %0 = load i32, ptr %i, align 4, !dbg !7371, !tbaa !2791
  %cmp = icmp ult i32 %0, 5, !dbg !7372
  br i1 %cmp, label %for.body, label %for.end2316, !dbg !7373

for.body:                                         ; preds = %for.cond
  %1 = load i8, ptr %initial_call.addr, align 1, !dbg !7374, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !7374
  br i1 %tobool, label %if.then, label %if.end, !dbg !7376

if.then:                                          ; preds = %for.body
  %2 = load i32, ptr %i, align 4, !dbg !7377, !tbaa !2791
  %3 = load ptr, ptr %buf.addr, align 8, !dbg !7379, !tbaa !2658
  %call = call ptr @obtain_malloc_conf(i32 noundef %2, ptr noundef %3), !dbg !7380
  %4 = load ptr, ptr %opts_cache.addr, align 8, !dbg !7381, !tbaa !2658
  %5 = load i32, ptr %i, align 4, !dbg !7382, !tbaa !2791
  %idxprom = zext i32 %5 to i64, !dbg !7381
  %arrayidx = getelementptr inbounds ptr, ptr %4, i64 %idxprom, !dbg !7381
  store ptr %call, ptr %arrayidx, align 8, !dbg !7383, !tbaa !2658
  br label %if.end, !dbg !7384

if.end:                                           ; preds = %if.then, %for.body
  %6 = load ptr, ptr %opts_cache.addr, align 8, !dbg !7385, !tbaa !2658
  %7 = load i32, ptr %i, align 4, !dbg !7386, !tbaa !2791
  %idxprom1 = zext i32 %7 to i64, !dbg !7385
  %arrayidx2 = getelementptr inbounds ptr, ptr %6, i64 %idxprom1, !dbg !7385
  %8 = load ptr, ptr %arrayidx2, align 8, !dbg !7385, !tbaa !2658
  store ptr %8, ptr %opts, align 8, !dbg !7387, !tbaa !2658
  %9 = load i8, ptr %initial_call.addr, align 1, !dbg !7388, !tbaa !2695, !range !2708, !noundef !2709
  %tobool3 = trunc i8 %9 to i1, !dbg !7388
  br i1 %tobool3, label %if.end9, label %land.lhs.true, !dbg !7390

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7391, !tbaa !2695, !range !2708, !noundef !2709
  %tobool4 = trunc i8 %10 to i1, !dbg !7391
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !7392

if.then5:                                         ; preds = %land.lhs.true
  %11 = load i32, ptr %i, align 4, !dbg !7393, !tbaa !2791
  %add = add i32 %11, 1, !dbg !7395
  %12 = load i32, ptr %i, align 4, !dbg !7396, !tbaa !2791
  %idxprom6 = zext i32 %12 to i64, !dbg !7397
  %arrayidx7 = getelementptr inbounds [5 x ptr], ptr @malloc_conf_init_helper.opts_explain, i64 0, i64 %idxprom6, !dbg !7397
  %13 = load ptr, ptr %arrayidx7, align 8, !dbg !7397, !tbaa !2658
  %14 = load ptr, ptr %opts, align 8, !dbg !7398, !tbaa !2658
  %cmp8 = icmp ne ptr %14, null, !dbg !7399
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !7398

cond.true:                                        ; preds = %if.then5
  %15 = load ptr, ptr %opts, align 8, !dbg !7400, !tbaa !2658
  br label %cond.end, !dbg !7398

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !7398

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %15, %cond.true ], [ @.str.88, %cond.false ], !dbg !7398
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.87, i32 noundef %add, ptr noundef %13, ptr noundef %cond), !dbg !7401
  br label %if.end9, !dbg !7402

if.end9:                                          ; preds = %cond.end, %land.lhs.true, %if.end
  %16 = load ptr, ptr %opts, align 8, !dbg !7403, !tbaa !2658
  %cmp10 = icmp eq ptr %16, null, !dbg !7405
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7406

if.then11:                                        ; preds = %if.end9
  br label %for.inc2314, !dbg !7407

if.end12:                                         ; preds = %if.end9
  br label %while.cond, !dbg !7409

while.cond:                                       ; preds = %cleanup.cont2306, %cleanup2304, %if.end12
  %17 = load ptr, ptr %opts, align 8, !dbg !7410, !tbaa !2658
  %18 = load i8, ptr %17, align 1, !dbg !7411, !tbaa !2810
  %conv = sext i8 %18 to i32, !dbg !7411
  %cmp13 = icmp ne i32 %conv, 0, !dbg !7412
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !7413

land.rhs:                                         ; preds = %while.cond
  %call15 = call zeroext i1 @malloc_conf_next(ptr noundef %opts, ptr noundef %k, ptr noundef %klen, ptr noundef %v, ptr noundef %vlen), !dbg !7414
  %lnot = xor i1 %call15, true, !dbg !7415
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %19 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !7416
  br i1 %19, label %while.body, label %while.end, !dbg !7409

while.body:                                       ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 1, ptr %cur_opt_valid) #18, !dbg !7417
  tail call void @llvm.dbg.declare(metadata ptr %cur_opt_valid, metadata !2177, metadata !DIExpression()), !dbg !7418
  store i8 1, ptr %cur_opt_valid, align 1, !dbg !7418, !tbaa !2695
  %20 = load i64, ptr %klen, align 8, !dbg !7419, !tbaa !2663
  %cmp16 = icmp eq i64 12, %20, !dbg !7419
  br i1 %cmp16, label %land.lhs.true18, label %if.end54, !dbg !7419

land.lhs.true18:                                  ; preds = %while.body
  %21 = load ptr, ptr %k, align 8, !dbg !7419, !tbaa !2658
  %22 = load i64, ptr %klen, align 8, !dbg !7419, !tbaa !2663
  %call19 = call i32 @strncmp(ptr noundef @.str.89, ptr noundef %21, i64 noundef %22) #22, !dbg !7419
  %cmp20 = icmp eq i32 %call19, 0, !dbg !7419
  br i1 %cmp20, label %if.then22, label %if.end54, !dbg !7421

if.then22:                                        ; preds = %land.lhs.true18
  %23 = load i64, ptr %vlen, align 8, !dbg !7422, !tbaa !2663
  %cmp23 = icmp eq i64 4, %23, !dbg !7422
  br i1 %cmp23, label %land.lhs.true25, label %if.else, !dbg !7422

land.lhs.true25:                                  ; preds = %if.then22
  %24 = load ptr, ptr %v, align 8, !dbg !7422, !tbaa !2658
  %25 = load i64, ptr %vlen, align 8, !dbg !7422, !tbaa !2663
  %call26 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %24, i64 noundef %25) #22, !dbg !7422
  %cmp27 = icmp eq i32 %call26, 0, !dbg !7422
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !7425

if.then29:                                        ; preds = %land.lhs.true25
  store i8 1, ptr @opt_confirm_conf, align 1, !dbg !7426, !tbaa !2695
  br label %if.end42, !dbg !7426

if.else:                                          ; preds = %land.lhs.true25, %if.then22
  %26 = load i64, ptr %vlen, align 8, !dbg !7428, !tbaa !2663
  %cmp30 = icmp eq i64 5, %26, !dbg !7428
  br i1 %cmp30, label %land.lhs.true32, label %if.else37, !dbg !7428

land.lhs.true32:                                  ; preds = %if.else
  %27 = load ptr, ptr %v, align 8, !dbg !7428, !tbaa !2658
  %28 = load i64, ptr %vlen, align 8, !dbg !7428, !tbaa !2663
  %call33 = call i32 @strncmp(ptr noundef @.str, ptr noundef %27, i64 noundef %28) #22, !dbg !7428
  %cmp34 = icmp eq i32 %call33, 0, !dbg !7428
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !7422

if.then36:                                        ; preds = %land.lhs.true32
  store i8 0, ptr @opt_confirm_conf, align 1, !dbg !7430, !tbaa !2695
  br label %if.end41, !dbg !7430

if.else37:                                        ; preds = %land.lhs.true32, %if.else
  %29 = load i8, ptr %initial_call.addr, align 1, !dbg !7432, !tbaa !2695, !range !2708, !noundef !2709
  %tobool38 = trunc i8 %29 to i1, !dbg !7432
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !7435

if.then39:                                        ; preds = %if.else37
  %30 = load ptr, ptr %k, align 8, !dbg !7436, !tbaa !2658
  %31 = load i64, ptr %klen, align 8, !dbg !7436, !tbaa !2663
  %32 = load ptr, ptr %v, align 8, !dbg !7436, !tbaa !2658
  %33 = load i64, ptr %vlen, align 8, !dbg !7436, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %30, i64 noundef %31, ptr noundef %32, i64 noundef %33), !dbg !7436
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7436, !tbaa !2695
  br label %if.end40, !dbg !7436

if.end40:                                         ; preds = %if.then39, %if.else37
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then36
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  %34 = load i8, ptr %initial_call.addr, align 1, !dbg !7438, !tbaa !2695, !range !2708, !noundef !2709
  %tobool43 = trunc i8 %34 to i1, !dbg !7438
  br i1 %tobool43, label %if.end53, label %land.lhs.true44, !dbg !7438

land.lhs.true44:                                  ; preds = %if.end42
  %35 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7438, !tbaa !2695, !range !2708, !noundef !2709
  %tobool45 = trunc i8 %35 to i1, !dbg !7438
  br i1 %tobool45, label %land.lhs.true47, label %if.end53, !dbg !7438

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %36 = load i8, ptr %cur_opt_valid, align 1, !dbg !7438, !tbaa !2695, !range !2708, !noundef !2709
  %tobool48 = trunc i8 %36 to i1, !dbg !7438
  br i1 %tobool48, label %if.then50, label %if.end53, !dbg !7441

if.then50:                                        ; preds = %land.lhs.true47
  %37 = load i64, ptr %klen, align 8, !dbg !7442, !tbaa !2663
  %conv51 = trunc i64 %37 to i32, !dbg !7442
  %38 = load ptr, ptr %k, align 8, !dbg !7442, !tbaa !2658
  %39 = load i64, ptr %vlen, align 8, !dbg !7442, !tbaa !2663
  %conv52 = trunc i64 %39 to i32, !dbg !7442
  %40 = load ptr, ptr %v, align 8, !dbg !7442, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv51, ptr noundef %38, i32 noundef %conv52, ptr noundef %40), !dbg !7442
  br label %if.end53, !dbg !7442

if.end53:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.end42
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7441, !llvm.loop !7444

if.end54:                                         ; preds = %land.lhs.true18, %while.body
  %41 = load i8, ptr %initial_call.addr, align 1, !dbg !7446, !tbaa !2695, !range !2708, !noundef !2709
  %tobool55 = trunc i8 %41 to i1, !dbg !7446
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !7448

if.then56:                                        ; preds = %if.end54
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7449, !llvm.loop !7444

if.end57:                                         ; preds = %if.end54
  %42 = load i64, ptr %klen, align 8, !dbg !7451, !tbaa !2663
  %cmp58 = icmp eq i64 5, %42, !dbg !7451
  br i1 %cmp58, label %land.lhs.true60, label %if.end97, !dbg !7451

land.lhs.true60:                                  ; preds = %if.end57
  %43 = load ptr, ptr %k, align 8, !dbg !7451, !tbaa !2658
  %44 = load i64, ptr %klen, align 8, !dbg !7451, !tbaa !2663
  %call61 = call i32 @strncmp(ptr noundef @.str.3, ptr noundef %43, i64 noundef %44) #22, !dbg !7451
  %cmp62 = icmp eq i32 %call61, 0, !dbg !7451
  br i1 %cmp62, label %if.then64, label %if.end97, !dbg !7453

if.then64:                                        ; preds = %land.lhs.true60
  %45 = load i64, ptr %vlen, align 8, !dbg !7454, !tbaa !2663
  %cmp65 = icmp eq i64 4, %45, !dbg !7454
  br i1 %cmp65, label %land.lhs.true67, label %if.else72, !dbg !7454

land.lhs.true67:                                  ; preds = %if.then64
  %46 = load ptr, ptr %v, align 8, !dbg !7454, !tbaa !2658
  %47 = load i64, ptr %vlen, align 8, !dbg !7454, !tbaa !2663
  %call68 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %46, i64 noundef %47) #22, !dbg !7454
  %cmp69 = icmp eq i32 %call68, 0, !dbg !7454
  br i1 %cmp69, label %if.then71, label %if.else72, !dbg !7457

if.then71:                                        ; preds = %land.lhs.true67
  store i8 1, ptr @opt_abort, align 1, !dbg !7458, !tbaa !2695
  br label %if.end85, !dbg !7458

if.else72:                                        ; preds = %land.lhs.true67, %if.then64
  %48 = load i64, ptr %vlen, align 8, !dbg !7460, !tbaa !2663
  %cmp73 = icmp eq i64 5, %48, !dbg !7460
  br i1 %cmp73, label %land.lhs.true75, label %if.else80, !dbg !7460

land.lhs.true75:                                  ; preds = %if.else72
  %49 = load ptr, ptr %v, align 8, !dbg !7460, !tbaa !2658
  %50 = load i64, ptr %vlen, align 8, !dbg !7460, !tbaa !2663
  %call76 = call i32 @strncmp(ptr noundef @.str, ptr noundef %49, i64 noundef %50) #22, !dbg !7460
  %cmp77 = icmp eq i32 %call76, 0, !dbg !7460
  br i1 %cmp77, label %if.then79, label %if.else80, !dbg !7454

if.then79:                                        ; preds = %land.lhs.true75
  store i8 0, ptr @opt_abort, align 1, !dbg !7462, !tbaa !2695
  br label %if.end84, !dbg !7462

if.else80:                                        ; preds = %land.lhs.true75, %if.else72
  %51 = load i8, ptr %initial_call.addr, align 1, !dbg !7464, !tbaa !2695, !range !2708, !noundef !2709
  %tobool81 = trunc i8 %51 to i1, !dbg !7464
  br i1 %tobool81, label %if.end83, label %if.then82, !dbg !7467

if.then82:                                        ; preds = %if.else80
  %52 = load ptr, ptr %k, align 8, !dbg !7468, !tbaa !2658
  %53 = load i64, ptr %klen, align 8, !dbg !7468, !tbaa !2663
  %54 = load ptr, ptr %v, align 8, !dbg !7468, !tbaa !2658
  %55 = load i64, ptr %vlen, align 8, !dbg !7468, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %52, i64 noundef %53, ptr noundef %54, i64 noundef %55), !dbg !7468
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7468, !tbaa !2695
  br label %if.end83, !dbg !7468

if.end83:                                         ; preds = %if.then82, %if.else80
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then79
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then71
  %56 = load i8, ptr %initial_call.addr, align 1, !dbg !7470, !tbaa !2695, !range !2708, !noundef !2709
  %tobool86 = trunc i8 %56 to i1, !dbg !7470
  br i1 %tobool86, label %if.end96, label %land.lhs.true87, !dbg !7470

land.lhs.true87:                                  ; preds = %if.end85
  %57 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7470, !tbaa !2695, !range !2708, !noundef !2709
  %tobool88 = trunc i8 %57 to i1, !dbg !7470
  br i1 %tobool88, label %land.lhs.true90, label %if.end96, !dbg !7470

land.lhs.true90:                                  ; preds = %land.lhs.true87
  %58 = load i8, ptr %cur_opt_valid, align 1, !dbg !7470, !tbaa !2695, !range !2708, !noundef !2709
  %tobool91 = trunc i8 %58 to i1, !dbg !7470
  br i1 %tobool91, label %if.then93, label %if.end96, !dbg !7473

if.then93:                                        ; preds = %land.lhs.true90
  %59 = load i64, ptr %klen, align 8, !dbg !7474, !tbaa !2663
  %conv94 = trunc i64 %59 to i32, !dbg !7474
  %60 = load ptr, ptr %k, align 8, !dbg !7474, !tbaa !2658
  %61 = load i64, ptr %vlen, align 8, !dbg !7474, !tbaa !2663
  %conv95 = trunc i64 %61 to i32, !dbg !7474
  %62 = load ptr, ptr %v, align 8, !dbg !7474, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv94, ptr noundef %60, i32 noundef %conv95, ptr noundef %62), !dbg !7474
  br label %if.end96, !dbg !7474

if.end96:                                         ; preds = %if.then93, %land.lhs.true90, %land.lhs.true87, %if.end85
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7473, !llvm.loop !7444

if.end97:                                         ; preds = %land.lhs.true60, %if.end57
  %63 = load i64, ptr %klen, align 8, !dbg !7476, !tbaa !2663
  %cmp98 = icmp eq i64 10, %63, !dbg !7476
  br i1 %cmp98, label %land.lhs.true100, label %if.end137, !dbg !7476

land.lhs.true100:                                 ; preds = %if.end97
  %64 = load ptr, ptr %k, align 8, !dbg !7476, !tbaa !2658
  %65 = load i64, ptr %klen, align 8, !dbg !7476, !tbaa !2663
  %call101 = call i32 @strncmp(ptr noundef @.str.93, ptr noundef %64, i64 noundef %65) #22, !dbg !7476
  %cmp102 = icmp eq i32 %call101, 0, !dbg !7476
  br i1 %cmp102, label %if.then104, label %if.end137, !dbg !7478

if.then104:                                       ; preds = %land.lhs.true100
  %66 = load i64, ptr %vlen, align 8, !dbg !7479, !tbaa !2663
  %cmp105 = icmp eq i64 4, %66, !dbg !7479
  br i1 %cmp105, label %land.lhs.true107, label %if.else112, !dbg !7479

land.lhs.true107:                                 ; preds = %if.then104
  %67 = load ptr, ptr %v, align 8, !dbg !7479, !tbaa !2658
  %68 = load i64, ptr %vlen, align 8, !dbg !7479, !tbaa !2663
  %call108 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %67, i64 noundef %68) #22, !dbg !7479
  %cmp109 = icmp eq i32 %call108, 0, !dbg !7479
  br i1 %cmp109, label %if.then111, label %if.else112, !dbg !7482

if.then111:                                       ; preds = %land.lhs.true107
  store i8 1, ptr @opt_abort_conf, align 1, !dbg !7483, !tbaa !2695
  br label %if.end125, !dbg !7483

if.else112:                                       ; preds = %land.lhs.true107, %if.then104
  %69 = load i64, ptr %vlen, align 8, !dbg !7485, !tbaa !2663
  %cmp113 = icmp eq i64 5, %69, !dbg !7485
  br i1 %cmp113, label %land.lhs.true115, label %if.else120, !dbg !7485

land.lhs.true115:                                 ; preds = %if.else112
  %70 = load ptr, ptr %v, align 8, !dbg !7485, !tbaa !2658
  %71 = load i64, ptr %vlen, align 8, !dbg !7485, !tbaa !2663
  %call116 = call i32 @strncmp(ptr noundef @.str, ptr noundef %70, i64 noundef %71) #22, !dbg !7485
  %cmp117 = icmp eq i32 %call116, 0, !dbg !7485
  br i1 %cmp117, label %if.then119, label %if.else120, !dbg !7479

if.then119:                                       ; preds = %land.lhs.true115
  store i8 0, ptr @opt_abort_conf, align 1, !dbg !7487, !tbaa !2695
  br label %if.end124, !dbg !7487

if.else120:                                       ; preds = %land.lhs.true115, %if.else112
  %72 = load i8, ptr %initial_call.addr, align 1, !dbg !7489, !tbaa !2695, !range !2708, !noundef !2709
  %tobool121 = trunc i8 %72 to i1, !dbg !7489
  br i1 %tobool121, label %if.end123, label %if.then122, !dbg !7492

if.then122:                                       ; preds = %if.else120
  %73 = load ptr, ptr %k, align 8, !dbg !7493, !tbaa !2658
  %74 = load i64, ptr %klen, align 8, !dbg !7493, !tbaa !2663
  %75 = load ptr, ptr %v, align 8, !dbg !7493, !tbaa !2658
  %76 = load i64, ptr %vlen, align 8, !dbg !7493, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %73, i64 noundef %74, ptr noundef %75, i64 noundef %76), !dbg !7493
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7493, !tbaa !2695
  br label %if.end123, !dbg !7493

if.end123:                                        ; preds = %if.then122, %if.else120
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then119
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then111
  %77 = load i8, ptr %initial_call.addr, align 1, !dbg !7495, !tbaa !2695, !range !2708, !noundef !2709
  %tobool126 = trunc i8 %77 to i1, !dbg !7495
  br i1 %tobool126, label %if.end136, label %land.lhs.true127, !dbg !7495

land.lhs.true127:                                 ; preds = %if.end125
  %78 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7495, !tbaa !2695, !range !2708, !noundef !2709
  %tobool128 = trunc i8 %78 to i1, !dbg !7495
  br i1 %tobool128, label %land.lhs.true130, label %if.end136, !dbg !7495

land.lhs.true130:                                 ; preds = %land.lhs.true127
  %79 = load i8, ptr %cur_opt_valid, align 1, !dbg !7495, !tbaa !2695, !range !2708, !noundef !2709
  %tobool131 = trunc i8 %79 to i1, !dbg !7495
  br i1 %tobool131, label %if.then133, label %if.end136, !dbg !7498

if.then133:                                       ; preds = %land.lhs.true130
  %80 = load i64, ptr %klen, align 8, !dbg !7499, !tbaa !2663
  %conv134 = trunc i64 %80 to i32, !dbg !7499
  %81 = load ptr, ptr %k, align 8, !dbg !7499, !tbaa !2658
  %82 = load i64, ptr %vlen, align 8, !dbg !7499, !tbaa !2663
  %conv135 = trunc i64 %82 to i32, !dbg !7499
  %83 = load ptr, ptr %v, align 8, !dbg !7499, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv134, ptr noundef %81, i32 noundef %conv135, ptr noundef %83), !dbg !7499
  br label %if.end136, !dbg !7499

if.end136:                                        ; preds = %if.then133, %land.lhs.true130, %land.lhs.true127, %if.end125
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7498, !llvm.loop !7444

if.end137:                                        ; preds = %land.lhs.true100, %if.end97
  %84 = load i64, ptr %klen, align 8, !dbg !7501, !tbaa !2663
  %cmp138 = icmp eq i64 13, %84, !dbg !7501
  br i1 %cmp138, label %land.lhs.true140, label %if.end177, !dbg !7501

land.lhs.true140:                                 ; preds = %if.end137
  %85 = load ptr, ptr %k, align 8, !dbg !7501, !tbaa !2658
  %86 = load i64, ptr %klen, align 8, !dbg !7501, !tbaa !2663
  %call141 = call i32 @strncmp(ptr noundef @.str.94, ptr noundef %85, i64 noundef %86) #22, !dbg !7501
  %cmp142 = icmp eq i32 %call141, 0, !dbg !7501
  br i1 %cmp142, label %if.then144, label %if.end177, !dbg !7503

if.then144:                                       ; preds = %land.lhs.true140
  %87 = load i64, ptr %vlen, align 8, !dbg !7504, !tbaa !2663
  %cmp145 = icmp eq i64 4, %87, !dbg !7504
  br i1 %cmp145, label %land.lhs.true147, label %if.else152, !dbg !7504

land.lhs.true147:                                 ; preds = %if.then144
  %88 = load ptr, ptr %v, align 8, !dbg !7504, !tbaa !2658
  %89 = load i64, ptr %vlen, align 8, !dbg !7504, !tbaa !2663
  %call148 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %88, i64 noundef %89) #22, !dbg !7504
  %cmp149 = icmp eq i32 %call148, 0, !dbg !7504
  br i1 %cmp149, label %if.then151, label %if.else152, !dbg !7507

if.then151:                                       ; preds = %land.lhs.true147
  store i8 1, ptr @opt_trust_madvise, align 1, !dbg !7508, !tbaa !2695
  br label %if.end165, !dbg !7508

if.else152:                                       ; preds = %land.lhs.true147, %if.then144
  %90 = load i64, ptr %vlen, align 8, !dbg !7510, !tbaa !2663
  %cmp153 = icmp eq i64 5, %90, !dbg !7510
  br i1 %cmp153, label %land.lhs.true155, label %if.else160, !dbg !7510

land.lhs.true155:                                 ; preds = %if.else152
  %91 = load ptr, ptr %v, align 8, !dbg !7510, !tbaa !2658
  %92 = load i64, ptr %vlen, align 8, !dbg !7510, !tbaa !2663
  %call156 = call i32 @strncmp(ptr noundef @.str, ptr noundef %91, i64 noundef %92) #22, !dbg !7510
  %cmp157 = icmp eq i32 %call156, 0, !dbg !7510
  br i1 %cmp157, label %if.then159, label %if.else160, !dbg !7504

if.then159:                                       ; preds = %land.lhs.true155
  store i8 0, ptr @opt_trust_madvise, align 1, !dbg !7512, !tbaa !2695
  br label %if.end164, !dbg !7512

if.else160:                                       ; preds = %land.lhs.true155, %if.else152
  %93 = load i8, ptr %initial_call.addr, align 1, !dbg !7514, !tbaa !2695, !range !2708, !noundef !2709
  %tobool161 = trunc i8 %93 to i1, !dbg !7514
  br i1 %tobool161, label %if.end163, label %if.then162, !dbg !7517

if.then162:                                       ; preds = %if.else160
  %94 = load ptr, ptr %k, align 8, !dbg !7518, !tbaa !2658
  %95 = load i64, ptr %klen, align 8, !dbg !7518, !tbaa !2663
  %96 = load ptr, ptr %v, align 8, !dbg !7518, !tbaa !2658
  %97 = load i64, ptr %vlen, align 8, !dbg !7518, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %94, i64 noundef %95, ptr noundef %96, i64 noundef %97), !dbg !7518
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7518, !tbaa !2695
  br label %if.end163, !dbg !7518

if.end163:                                        ; preds = %if.then162, %if.else160
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.then159
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then151
  %98 = load i8, ptr %initial_call.addr, align 1, !dbg !7520, !tbaa !2695, !range !2708, !noundef !2709
  %tobool166 = trunc i8 %98 to i1, !dbg !7520
  br i1 %tobool166, label %if.end176, label %land.lhs.true167, !dbg !7520

land.lhs.true167:                                 ; preds = %if.end165
  %99 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7520, !tbaa !2695, !range !2708, !noundef !2709
  %tobool168 = trunc i8 %99 to i1, !dbg !7520
  br i1 %tobool168, label %land.lhs.true170, label %if.end176, !dbg !7520

land.lhs.true170:                                 ; preds = %land.lhs.true167
  %100 = load i8, ptr %cur_opt_valid, align 1, !dbg !7520, !tbaa !2695, !range !2708, !noundef !2709
  %tobool171 = trunc i8 %100 to i1, !dbg !7520
  br i1 %tobool171, label %if.then173, label %if.end176, !dbg !7523

if.then173:                                       ; preds = %land.lhs.true170
  %101 = load i64, ptr %klen, align 8, !dbg !7524, !tbaa !2663
  %conv174 = trunc i64 %101 to i32, !dbg !7524
  %102 = load ptr, ptr %k, align 8, !dbg !7524, !tbaa !2658
  %103 = load i64, ptr %vlen, align 8, !dbg !7524, !tbaa !2663
  %conv175 = trunc i64 %103 to i32, !dbg !7524
  %104 = load ptr, ptr %v, align 8, !dbg !7524, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv174, ptr noundef %102, i32 noundef %conv175, ptr noundef %104), !dbg !7524
  br label %if.end176, !dbg !7524

if.end176:                                        ; preds = %if.then173, %land.lhs.true170, %land.lhs.true167, %if.end165
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7523, !llvm.loop !7444

if.end177:                                        ; preds = %land.lhs.true140, %if.end137
  %105 = load ptr, ptr %k, align 8, !dbg !7526, !tbaa !2658
  %106 = load i64, ptr %klen, align 8, !dbg !7527, !tbaa !2663
  %call178 = call i32 @strncmp(ptr noundef @.str.95, ptr noundef %105, i64 noundef %106) #22, !dbg !7528
  %cmp179 = icmp eq i32 %call178, 0, !dbg !7529
  br i1 %cmp179, label %if.then181, label %if.end210, !dbg !7530

if.then181:                                       ; preds = %if.end177
  call void @llvm.lifetime.start.p0(i64 4, ptr %m) #18, !dbg !7531
  tail call void @llvm.dbg.declare(metadata ptr %m, metadata !2182, metadata !DIExpression()), !dbg !7532
  call void @llvm.lifetime.start.p0(i64 1, ptr %match) #18, !dbg !7533
  tail call void @llvm.dbg.declare(metadata ptr %match, metadata !2185, metadata !DIExpression()), !dbg !7534
  store i8 0, ptr %match, align 1, !dbg !7534, !tbaa !2695
  store i32 0, ptr %m, align 4, !dbg !7535, !tbaa !2791
  br label %for.cond182, !dbg !7537

for.cond182:                                      ; preds = %for.inc, %if.then181
  %107 = load i32, ptr %m, align 4, !dbg !7538, !tbaa !2791
  %cmp183 = icmp slt i32 %107, 3, !dbg !7540
  br i1 %cmp183, label %for.body185, label %for.end, !dbg !7541

for.body185:                                      ; preds = %for.cond182
  %108 = load i32, ptr %m, align 4, !dbg !7542, !tbaa !2791
  %idxprom186 = sext i32 %108 to i64, !dbg !7545
  %arrayidx187 = getelementptr inbounds [0 x ptr], ptr @metadata_thp_mode_names, i64 0, i64 %idxprom186, !dbg !7545
  %109 = load ptr, ptr %arrayidx187, align 8, !dbg !7545, !tbaa !2658
  %110 = load ptr, ptr %v, align 8, !dbg !7546, !tbaa !2658
  %111 = load i64, ptr %vlen, align 8, !dbg !7547, !tbaa !2663
  %call188 = call i32 @strncmp(ptr noundef %109, ptr noundef %110, i64 noundef %111) #22, !dbg !7548
  %cmp189 = icmp eq i32 %call188, 0, !dbg !7549
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !7550

if.then191:                                       ; preds = %for.body185
  %112 = load i32, ptr %m, align 4, !dbg !7551, !tbaa !2791
  store i32 %112, ptr @opt_metadata_thp, align 4, !dbg !7553, !tbaa !2810
  store i8 1, ptr %match, align 1, !dbg !7554, !tbaa !2695
  br label %for.end, !dbg !7555

if.end192:                                        ; preds = %for.body185
  br label %for.inc, !dbg !7556

for.inc:                                          ; preds = %if.end192
  %113 = load i32, ptr %m, align 4, !dbg !7557, !tbaa !2791
  %inc = add nsw i32 %113, 1, !dbg !7557
  store i32 %inc, ptr %m, align 4, !dbg !7557, !tbaa !2791
  br label %for.cond182, !dbg !7558, !llvm.loop !7559

for.end:                                          ; preds = %if.then191, %for.cond182
  %114 = load i8, ptr %match, align 1, !dbg !7561, !tbaa !2695, !range !2708, !noundef !2709
  %tobool193 = trunc i8 %114 to i1, !dbg !7561
  br i1 %tobool193, label %if.end198, label %if.then194, !dbg !7563

if.then194:                                       ; preds = %for.end
  %115 = load i8, ptr %initial_call.addr, align 1, !dbg !7564, !tbaa !2695, !range !2708, !noundef !2709
  %tobool195 = trunc i8 %115 to i1, !dbg !7564
  br i1 %tobool195, label %if.end197, label %if.then196, !dbg !7567

if.then196:                                       ; preds = %if.then194
  %116 = load ptr, ptr %k, align 8, !dbg !7568, !tbaa !2658
  %117 = load i64, ptr %klen, align 8, !dbg !7568, !tbaa !2663
  %118 = load ptr, ptr %v, align 8, !dbg !7568, !tbaa !2658
  %119 = load i64, ptr %vlen, align 8, !dbg !7568, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %116, i64 noundef %117, ptr noundef %118, i64 noundef %119), !dbg !7568
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7568, !tbaa !2695
  br label %if.end197, !dbg !7568

if.end197:                                        ; preds = %if.then196, %if.then194
  br label %if.end198, !dbg !7570

if.end198:                                        ; preds = %if.end197, %for.end
  %120 = load i8, ptr %initial_call.addr, align 1, !dbg !7571, !tbaa !2695, !range !2708, !noundef !2709
  %tobool199 = trunc i8 %120 to i1, !dbg !7571
  br i1 %tobool199, label %if.end209, label %land.lhs.true200, !dbg !7571

land.lhs.true200:                                 ; preds = %if.end198
  %121 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7571, !tbaa !2695, !range !2708, !noundef !2709
  %tobool201 = trunc i8 %121 to i1, !dbg !7571
  br i1 %tobool201, label %land.lhs.true203, label %if.end209, !dbg !7571

land.lhs.true203:                                 ; preds = %land.lhs.true200
  %122 = load i8, ptr %cur_opt_valid, align 1, !dbg !7571, !tbaa !2695, !range !2708, !noundef !2709
  %tobool204 = trunc i8 %122 to i1, !dbg !7571
  br i1 %tobool204, label %if.then206, label %if.end209, !dbg !7574

if.then206:                                       ; preds = %land.lhs.true203
  %123 = load i64, ptr %klen, align 8, !dbg !7575, !tbaa !2663
  %conv207 = trunc i64 %123 to i32, !dbg !7575
  %124 = load ptr, ptr %k, align 8, !dbg !7575, !tbaa !2658
  %125 = load i64, ptr %vlen, align 8, !dbg !7575, !tbaa !2663
  %conv208 = trunc i64 %125 to i32, !dbg !7575
  %126 = load ptr, ptr %v, align 8, !dbg !7575, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv207, ptr noundef %124, i32 noundef %conv208, ptr noundef %126), !dbg !7575
  br label %if.end209, !dbg !7575

if.end209:                                        ; preds = %if.then206, %land.lhs.true203, %land.lhs.true200, %if.end198
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr %match) #18, !dbg !7577
  call void @llvm.lifetime.end.p0(i64 4, ptr %m) #18, !dbg !7577
  br label %cleanup2304

if.end210:                                        ; preds = %if.end177
  %127 = load i64, ptr %klen, align 8, !dbg !7578, !tbaa !2663
  %cmp211 = icmp eq i64 6, %127, !dbg !7578
  br i1 %cmp211, label %land.lhs.true213, label %if.end250, !dbg !7578

land.lhs.true213:                                 ; preds = %if.end210
  %128 = load ptr, ptr %k, align 8, !dbg !7578, !tbaa !2658
  %129 = load i64, ptr %klen, align 8, !dbg !7578, !tbaa !2663
  %call214 = call i32 @strncmp(ptr noundef @.str.96, ptr noundef %128, i64 noundef %129) #22, !dbg !7578
  %cmp215 = icmp eq i32 %call214, 0, !dbg !7578
  br i1 %cmp215, label %if.then217, label %if.end250, !dbg !7580

if.then217:                                       ; preds = %land.lhs.true213
  %130 = load i64, ptr %vlen, align 8, !dbg !7581, !tbaa !2663
  %cmp218 = icmp eq i64 4, %130, !dbg !7581
  br i1 %cmp218, label %land.lhs.true220, label %if.else225, !dbg !7581

land.lhs.true220:                                 ; preds = %if.then217
  %131 = load ptr, ptr %v, align 8, !dbg !7581, !tbaa !2658
  %132 = load i64, ptr %vlen, align 8, !dbg !7581, !tbaa !2663
  %call221 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %131, i64 noundef %132) #22, !dbg !7581
  %cmp222 = icmp eq i32 %call221, 0, !dbg !7581
  br i1 %cmp222, label %if.then224, label %if.else225, !dbg !7584

if.then224:                                       ; preds = %land.lhs.true220
  store i8 1, ptr @opt_retain, align 1, !dbg !7585, !tbaa !2695
  br label %if.end238, !dbg !7585

if.else225:                                       ; preds = %land.lhs.true220, %if.then217
  %133 = load i64, ptr %vlen, align 8, !dbg !7587, !tbaa !2663
  %cmp226 = icmp eq i64 5, %133, !dbg !7587
  br i1 %cmp226, label %land.lhs.true228, label %if.else233, !dbg !7587

land.lhs.true228:                                 ; preds = %if.else225
  %134 = load ptr, ptr %v, align 8, !dbg !7587, !tbaa !2658
  %135 = load i64, ptr %vlen, align 8, !dbg !7587, !tbaa !2663
  %call229 = call i32 @strncmp(ptr noundef @.str, ptr noundef %134, i64 noundef %135) #22, !dbg !7587
  %cmp230 = icmp eq i32 %call229, 0, !dbg !7587
  br i1 %cmp230, label %if.then232, label %if.else233, !dbg !7581

if.then232:                                       ; preds = %land.lhs.true228
  store i8 0, ptr @opt_retain, align 1, !dbg !7589, !tbaa !2695
  br label %if.end237, !dbg !7589

if.else233:                                       ; preds = %land.lhs.true228, %if.else225
  %136 = load i8, ptr %initial_call.addr, align 1, !dbg !7591, !tbaa !2695, !range !2708, !noundef !2709
  %tobool234 = trunc i8 %136 to i1, !dbg !7591
  br i1 %tobool234, label %if.end236, label %if.then235, !dbg !7594

if.then235:                                       ; preds = %if.else233
  %137 = load ptr, ptr %k, align 8, !dbg !7595, !tbaa !2658
  %138 = load i64, ptr %klen, align 8, !dbg !7595, !tbaa !2663
  %139 = load ptr, ptr %v, align 8, !dbg !7595, !tbaa !2658
  %140 = load i64, ptr %vlen, align 8, !dbg !7595, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %137, i64 noundef %138, ptr noundef %139, i64 noundef %140), !dbg !7595
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7595, !tbaa !2695
  br label %if.end236, !dbg !7595

if.end236:                                        ; preds = %if.then235, %if.else233
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.then232
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.then224
  %141 = load i8, ptr %initial_call.addr, align 1, !dbg !7597, !tbaa !2695, !range !2708, !noundef !2709
  %tobool239 = trunc i8 %141 to i1, !dbg !7597
  br i1 %tobool239, label %if.end249, label %land.lhs.true240, !dbg !7597

land.lhs.true240:                                 ; preds = %if.end238
  %142 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7597, !tbaa !2695, !range !2708, !noundef !2709
  %tobool241 = trunc i8 %142 to i1, !dbg !7597
  br i1 %tobool241, label %land.lhs.true243, label %if.end249, !dbg !7597

land.lhs.true243:                                 ; preds = %land.lhs.true240
  %143 = load i8, ptr %cur_opt_valid, align 1, !dbg !7597, !tbaa !2695, !range !2708, !noundef !2709
  %tobool244 = trunc i8 %143 to i1, !dbg !7597
  br i1 %tobool244, label %if.then246, label %if.end249, !dbg !7600

if.then246:                                       ; preds = %land.lhs.true243
  %144 = load i64, ptr %klen, align 8, !dbg !7601, !tbaa !2663
  %conv247 = trunc i64 %144 to i32, !dbg !7601
  %145 = load ptr, ptr %k, align 8, !dbg !7601, !tbaa !2658
  %146 = load i64, ptr %vlen, align 8, !dbg !7601, !tbaa !2663
  %conv248 = trunc i64 %146 to i32, !dbg !7601
  %147 = load ptr, ptr %v, align 8, !dbg !7601, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv247, ptr noundef %145, i32 noundef %conv248, ptr noundef %147), !dbg !7601
  br label %if.end249, !dbg !7601

if.end249:                                        ; preds = %if.then246, %land.lhs.true243, %land.lhs.true240, %if.end238
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7600, !llvm.loop !7444

if.end250:                                        ; preds = %land.lhs.true213, %if.end210
  %148 = load ptr, ptr %k, align 8, !dbg !7603, !tbaa !2658
  %149 = load i64, ptr %klen, align 8, !dbg !7604, !tbaa !2663
  %call251 = call i32 @strncmp(ptr noundef @.str.97, ptr noundef %148, i64 noundef %149) #22, !dbg !7605
  %cmp252 = icmp eq i32 %call251, 0, !dbg !7606
  br i1 %cmp252, label %if.then254, label %if.end297, !dbg !7607

if.then254:                                       ; preds = %if.end250
  call void @llvm.lifetime.start.p0(i64 4, ptr %m255) #18, !dbg !7608
  tail call void @llvm.dbg.declare(metadata ptr %m255, metadata !2186, metadata !DIExpression()), !dbg !7609
  call void @llvm.lifetime.start.p0(i64 1, ptr %match256) #18, !dbg !7610
  tail call void @llvm.dbg.declare(metadata ptr %match256, metadata !2189, metadata !DIExpression()), !dbg !7611
  store i8 0, ptr %match256, align 1, !dbg !7611, !tbaa !2695
  store i32 0, ptr %m255, align 4, !dbg !7612, !tbaa !2791
  br label %for.cond257, !dbg !7614

for.cond257:                                      ; preds = %for.inc277, %if.then254
  %150 = load i32, ptr %m255, align 4, !dbg !7615, !tbaa !2791
  %cmp258 = icmp slt i32 %150, 3, !dbg !7617
  br i1 %cmp258, label %for.body260, label %for.end279, !dbg !7618

for.body260:                                      ; preds = %for.cond257
  %151 = load i32, ptr %m255, align 4, !dbg !7619, !tbaa !2791
  %idxprom261 = sext i32 %151 to i64, !dbg !7622
  %arrayidx262 = getelementptr inbounds [0 x ptr], ptr @dss_prec_names, i64 0, i64 %idxprom261, !dbg !7622
  %152 = load ptr, ptr %arrayidx262, align 8, !dbg !7622, !tbaa !2658
  %153 = load ptr, ptr %v, align 8, !dbg !7623, !tbaa !2658
  %154 = load i64, ptr %vlen, align 8, !dbg !7624, !tbaa !2663
  %call263 = call i32 @strncmp(ptr noundef %152, ptr noundef %153, i64 noundef %154) #22, !dbg !7625
  %cmp264 = icmp eq i32 %call263, 0, !dbg !7626
  br i1 %cmp264, label %if.then266, label %if.end276, !dbg !7627

if.then266:                                       ; preds = %for.body260
  %155 = load i32, ptr %m255, align 4, !dbg !7628, !tbaa !2791
  %call267 = call zeroext i1 @extent_dss_prec_set(i32 noundef %155), !dbg !7631
  br i1 %call267, label %if.then268, label %if.else272, !dbg !7632

if.then268:                                       ; preds = %if.then266
  %156 = load i8, ptr %initial_call.addr, align 1, !dbg !7633, !tbaa !2695, !range !2708, !noundef !2709
  %tobool269 = trunc i8 %156 to i1, !dbg !7633
  br i1 %tobool269, label %if.end271, label %if.then270, !dbg !7636

if.then270:                                       ; preds = %if.then268
  %157 = load ptr, ptr %k, align 8, !dbg !7637, !tbaa !2658
  %158 = load i64, ptr %klen, align 8, !dbg !7637, !tbaa !2663
  %159 = load ptr, ptr %v, align 8, !dbg !7637, !tbaa !2658
  %160 = load i64, ptr %vlen, align 8, !dbg !7637, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.98, ptr noundef %157, i64 noundef %158, ptr noundef %159, i64 noundef %160), !dbg !7637
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7637, !tbaa !2695
  br label %if.end271, !dbg !7637

if.end271:                                        ; preds = %if.then270, %if.then268
  br label %if.end275, !dbg !7639

if.else272:                                       ; preds = %if.then266
  %161 = load i32, ptr %m255, align 4, !dbg !7640, !tbaa !2791
  %idxprom273 = sext i32 %161 to i64, !dbg !7642
  %arrayidx274 = getelementptr inbounds [0 x ptr], ptr @dss_prec_names, i64 0, i64 %idxprom273, !dbg !7642
  %162 = load ptr, ptr %arrayidx274, align 8, !dbg !7642, !tbaa !2658
  store ptr %162, ptr @opt_dss, align 8, !dbg !7643, !tbaa !2658
  store i8 1, ptr %match256, align 1, !dbg !7644, !tbaa !2695
  br label %for.end279, !dbg !7645

if.end275:                                        ; preds = %if.end271
  br label %if.end276, !dbg !7646

if.end276:                                        ; preds = %if.end275, %for.body260
  br label %for.inc277, !dbg !7647

for.inc277:                                       ; preds = %if.end276
  %163 = load i32, ptr %m255, align 4, !dbg !7648, !tbaa !2791
  %inc278 = add nsw i32 %163, 1, !dbg !7648
  store i32 %inc278, ptr %m255, align 4, !dbg !7648, !tbaa !2791
  br label %for.cond257, !dbg !7649, !llvm.loop !7650

for.end279:                                       ; preds = %if.else272, %for.cond257
  %164 = load i8, ptr %match256, align 1, !dbg !7652, !tbaa !2695, !range !2708, !noundef !2709
  %tobool280 = trunc i8 %164 to i1, !dbg !7652
  br i1 %tobool280, label %if.end285, label %if.then281, !dbg !7654

if.then281:                                       ; preds = %for.end279
  %165 = load i8, ptr %initial_call.addr, align 1, !dbg !7655, !tbaa !2695, !range !2708, !noundef !2709
  %tobool282 = trunc i8 %165 to i1, !dbg !7655
  br i1 %tobool282, label %if.end284, label %if.then283, !dbg !7658

if.then283:                                       ; preds = %if.then281
  %166 = load ptr, ptr %k, align 8, !dbg !7659, !tbaa !2658
  %167 = load i64, ptr %klen, align 8, !dbg !7659, !tbaa !2663
  %168 = load ptr, ptr %v, align 8, !dbg !7659, !tbaa !2658
  %169 = load i64, ptr %vlen, align 8, !dbg !7659, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %166, i64 noundef %167, ptr noundef %168, i64 noundef %169), !dbg !7659
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7659, !tbaa !2695
  br label %if.end284, !dbg !7659

if.end284:                                        ; preds = %if.then283, %if.then281
  br label %if.end285, !dbg !7661

if.end285:                                        ; preds = %if.end284, %for.end279
  %170 = load i8, ptr %initial_call.addr, align 1, !dbg !7662, !tbaa !2695, !range !2708, !noundef !2709
  %tobool286 = trunc i8 %170 to i1, !dbg !7662
  br i1 %tobool286, label %if.end296, label %land.lhs.true287, !dbg !7662

land.lhs.true287:                                 ; preds = %if.end285
  %171 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7662, !tbaa !2695, !range !2708, !noundef !2709
  %tobool288 = trunc i8 %171 to i1, !dbg !7662
  br i1 %tobool288, label %land.lhs.true290, label %if.end296, !dbg !7662

land.lhs.true290:                                 ; preds = %land.lhs.true287
  %172 = load i8, ptr %cur_opt_valid, align 1, !dbg !7662, !tbaa !2695, !range !2708, !noundef !2709
  %tobool291 = trunc i8 %172 to i1, !dbg !7662
  br i1 %tobool291, label %if.then293, label %if.end296, !dbg !7665

if.then293:                                       ; preds = %land.lhs.true290
  %173 = load i64, ptr %klen, align 8, !dbg !7666, !tbaa !2663
  %conv294 = trunc i64 %173 to i32, !dbg !7666
  %174 = load ptr, ptr %k, align 8, !dbg !7666, !tbaa !2658
  %175 = load i64, ptr %vlen, align 8, !dbg !7666, !tbaa !2663
  %conv295 = trunc i64 %175 to i32, !dbg !7666
  %176 = load ptr, ptr %v, align 8, !dbg !7666, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv294, ptr noundef %174, i32 noundef %conv295, ptr noundef %176), !dbg !7666
  br label %if.end296, !dbg !7666

if.end296:                                        ; preds = %if.then293, %land.lhs.true290, %land.lhs.true287, %if.end285
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr %match256) #18, !dbg !7668
  call void @llvm.lifetime.end.p0(i64 4, ptr %m255) #18, !dbg !7668
  br label %cleanup2304

if.end297:                                        ; preds = %if.end250
  %177 = load i64, ptr %klen, align 8, !dbg !7669, !tbaa !2663
  %cmp298 = icmp eq i64 7, %177, !dbg !7669
  br i1 %cmp298, label %land.lhs.true300, label %if.end365, !dbg !7669

land.lhs.true300:                                 ; preds = %if.end297
  %178 = load ptr, ptr %k, align 8, !dbg !7669, !tbaa !2658
  %179 = load i64, ptr %klen, align 8, !dbg !7669, !tbaa !2663
  %call301 = call i32 @strncmp(ptr noundef @.str.99, ptr noundef %178, i64 noundef %179) #22, !dbg !7669
  %cmp302 = icmp eq i32 %call301, 0, !dbg !7669
  br i1 %cmp302, label %if.then304, label %if.end365, !dbg !7670

if.then304:                                       ; preds = %land.lhs.true300
  %180 = load i64, ptr %vlen, align 8, !dbg !7671, !tbaa !2663
  %cmp305 = icmp eq i64 7, %180, !dbg !7671
  br i1 %cmp305, label %land.lhs.true307, label %if.else323, !dbg !7671

land.lhs.true307:                                 ; preds = %if.then304
  %181 = load ptr, ptr %v, align 8, !dbg !7671, !tbaa !2658
  %182 = load i64, ptr %vlen, align 8, !dbg !7671, !tbaa !2663
  %call308 = call i32 @strncmp(ptr noundef @.str.100, ptr noundef %181, i64 noundef %182) #22, !dbg !7671
  %cmp309 = icmp eq i32 %call308, 0, !dbg !7671
  br i1 %cmp309, label %if.then311, label %if.else323, !dbg !7672

if.then311:                                       ; preds = %land.lhs.true307
  store i32 0, ptr @opt_narenas, align 4, !dbg !7673, !tbaa !2791
  %183 = load i8, ptr %initial_call.addr, align 1, !dbg !7675, !tbaa !2695, !range !2708, !noundef !2709
  %tobool312 = trunc i8 %183 to i1, !dbg !7675
  br i1 %tobool312, label %if.end322, label %land.lhs.true313, !dbg !7675

land.lhs.true313:                                 ; preds = %if.then311
  %184 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7675, !tbaa !2695, !range !2708, !noundef !2709
  %tobool314 = trunc i8 %184 to i1, !dbg !7675
  br i1 %tobool314, label %land.lhs.true316, label %if.end322, !dbg !7675

land.lhs.true316:                                 ; preds = %land.lhs.true313
  %185 = load i8, ptr %cur_opt_valid, align 1, !dbg !7675, !tbaa !2695, !range !2708, !noundef !2709
  %tobool317 = trunc i8 %185 to i1, !dbg !7675
  br i1 %tobool317, label %if.then319, label %if.end322, !dbg !7678

if.then319:                                       ; preds = %land.lhs.true316
  %186 = load i64, ptr %klen, align 8, !dbg !7679, !tbaa !2663
  %conv320 = trunc i64 %186 to i32, !dbg !7679
  %187 = load ptr, ptr %k, align 8, !dbg !7679, !tbaa !2658
  %188 = load i64, ptr %vlen, align 8, !dbg !7679, !tbaa !2663
  %conv321 = trunc i64 %188 to i32, !dbg !7679
  %189 = load ptr, ptr %v, align 8, !dbg !7679, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv320, ptr noundef %187, i32 noundef %conv321, ptr noundef %189), !dbg !7679
  br label %if.end322, !dbg !7679

if.end322:                                        ; preds = %if.then319, %land.lhs.true316, %land.lhs.true313, %if.then311
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7678, !llvm.loop !7444

if.else323:                                       ; preds = %land.lhs.true307, %if.then304
  %190 = load i64, ptr %klen, align 8, !dbg !7681, !tbaa !2663
  %cmp324 = icmp eq i64 7, %190, !dbg !7681
  br i1 %cmp324, label %land.lhs.true326, label %if.end363, !dbg !7681

land.lhs.true326:                                 ; preds = %if.else323
  %191 = load ptr, ptr %k, align 8, !dbg !7681, !tbaa !2658
  %192 = load i64, ptr %klen, align 8, !dbg !7681, !tbaa !2663
  %call327 = call i32 @strncmp(ptr noundef @.str.99, ptr noundef %191, i64 noundef %192) #22, !dbg !7681
  %cmp328 = icmp eq i32 %call327, 0, !dbg !7681
  br i1 %cmp328, label %if.then330, label %if.end363, !dbg !7682

if.then330:                                       ; preds = %land.lhs.true326
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv) #18, !dbg !7683
  tail call void @llvm.dbg.declare(metadata ptr %mv, metadata !2190, metadata !DIExpression()), !dbg !7683
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #18, !dbg !7683
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !2197, metadata !DIExpression()), !dbg !7683
  call void @set_errno(i32 noundef 0), !dbg !7683
  %193 = load ptr, ptr %v, align 8, !dbg !7683, !tbaa !2658
  %call331 = call i64 @malloc_strtoumax(ptr noundef %193, ptr noundef %end, i32 noundef 0), !dbg !7683
  store i64 %call331, ptr %mv, align 8, !dbg !7683, !tbaa !2663
  %call332 = call i32 @get_errno(), !dbg !7684
  %cmp333 = icmp ne i32 %call332, 0, !dbg !7684
  br i1 %cmp333, label %if.then337, label %lor.lhs.false, !dbg !7684

lor.lhs.false:                                    ; preds = %if.then330
  %194 = load ptr, ptr %end, align 8, !dbg !7684, !tbaa !2658
  %195 = ptrtoint ptr %194 to i64, !dbg !7684
  %196 = load ptr, ptr %v, align 8, !dbg !7684, !tbaa !2658
  %197 = ptrtoint ptr %196 to i64, !dbg !7684
  %sub = sub i64 %195, %197, !dbg !7684
  %198 = load i64, ptr %vlen, align 8, !dbg !7684, !tbaa !2663
  %cmp335 = icmp ne i64 %sub, %198, !dbg !7684
  br i1 %cmp335, label %if.then337, label %if.else341, !dbg !7683

if.then337:                                       ; preds = %lor.lhs.false, %if.then330
  %199 = load i8, ptr %initial_call.addr, align 1, !dbg !7686, !tbaa !2695, !range !2708, !noundef !2709
  %tobool338 = trunc i8 %199 to i1, !dbg !7686
  br i1 %tobool338, label %if.end340, label %if.then339, !dbg !7689

if.then339:                                       ; preds = %if.then337
  %200 = load ptr, ptr %k, align 8, !dbg !7690, !tbaa !2658
  %201 = load i64, ptr %klen, align 8, !dbg !7690, !tbaa !2663
  %202 = load ptr, ptr %v, align 8, !dbg !7690, !tbaa !2658
  %203 = load i64, ptr %vlen, align 8, !dbg !7690, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %200, i64 noundef %201, ptr noundef %202, i64 noundef %203), !dbg !7690
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7690, !tbaa !2695
  br label %if.end340, !dbg !7690

if.end340:                                        ; preds = %if.then339, %if.then337
  br label %if.end351, !dbg !7689

if.else341:                                       ; preds = %lor.lhs.false
  %204 = load i64, ptr %mv, align 8, !dbg !7692, !tbaa !2663
  %cmp342 = icmp ult i64 %204, 1, !dbg !7692
  br i1 %cmp342, label %if.then344, label %if.else348, !dbg !7696

if.then344:                                       ; preds = %if.else341
  %205 = load i8, ptr %initial_call.addr, align 1, !dbg !7697, !tbaa !2695, !range !2708, !noundef !2709
  %tobool345 = trunc i8 %205 to i1, !dbg !7697
  br i1 %tobool345, label %if.end347, label %if.then346, !dbg !7700

if.then346:                                       ; preds = %if.then344
  %206 = load ptr, ptr %k, align 8, !dbg !7701, !tbaa !2658
  %207 = load i64, ptr %klen, align 8, !dbg !7701, !tbaa !2663
  %208 = load ptr, ptr %v, align 8, !dbg !7701, !tbaa !2658
  %209 = load i64, ptr %vlen, align 8, !dbg !7701, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %206, i64 noundef %207, ptr noundef %208, i64 noundef %209), !dbg !7701
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7701, !tbaa !2695
  br label %if.end347, !dbg !7701

if.end347:                                        ; preds = %if.then346, %if.then344
  br label %if.end350, !dbg !7700

if.else348:                                       ; preds = %if.else341
  %210 = load i64, ptr %mv, align 8, !dbg !7703, !tbaa !2663
  %conv349 = trunc i64 %210 to i32, !dbg !7703
  store i32 %conv349, ptr @opt_narenas, align 4, !dbg !7703, !tbaa !2791
  br label %if.end350

if.end350:                                        ; preds = %if.else348, %if.end347
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.end340
  %211 = load i8, ptr %initial_call.addr, align 1, !dbg !7705, !tbaa !2695, !range !2708, !noundef !2709
  %tobool352 = trunc i8 %211 to i1, !dbg !7705
  br i1 %tobool352, label %if.end362, label %land.lhs.true353, !dbg !7705

land.lhs.true353:                                 ; preds = %if.end351
  %212 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7705, !tbaa !2695, !range !2708, !noundef !2709
  %tobool354 = trunc i8 %212 to i1, !dbg !7705
  br i1 %tobool354, label %land.lhs.true356, label %if.end362, !dbg !7705

land.lhs.true356:                                 ; preds = %land.lhs.true353
  %213 = load i8, ptr %cur_opt_valid, align 1, !dbg !7705, !tbaa !2695, !range !2708, !noundef !2709
  %tobool357 = trunc i8 %213 to i1, !dbg !7705
  br i1 %tobool357, label %if.then359, label %if.end362, !dbg !7708

if.then359:                                       ; preds = %land.lhs.true356
  %214 = load i64, ptr %klen, align 8, !dbg !7709, !tbaa !2663
  %conv360 = trunc i64 %214 to i32, !dbg !7709
  %215 = load ptr, ptr %k, align 8, !dbg !7709, !tbaa !2658
  %216 = load i64, ptr %vlen, align 8, !dbg !7709, !tbaa !2663
  %conv361 = trunc i64 %216 to i32, !dbg !7709
  %217 = load ptr, ptr %v, align 8, !dbg !7709, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv360, ptr noundef %215, i32 noundef %conv361, ptr noundef %217), !dbg !7709
  br label %if.end362, !dbg !7709

if.end362:                                        ; preds = %if.then359, %land.lhs.true356, %land.lhs.true353, %if.end351
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #18, !dbg !7681
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv) #18, !dbg !7681
  br label %cleanup2304

if.end363:                                        ; preds = %land.lhs.true326, %if.else323
  br label %if.end364

if.end364:                                        ; preds = %if.end363
  br label %if.end365, !dbg !7711

if.end365:                                        ; preds = %if.end364, %land.lhs.true300, %if.end297
  %218 = load i64, ptr %klen, align 8, !dbg !7712, !tbaa !2663
  %cmp366 = icmp eq i64 13, %218, !dbg !7712
  br i1 %cmp366, label %land.lhs.true368, label %if.end397, !dbg !7712

land.lhs.true368:                                 ; preds = %if.end365
  %219 = load ptr, ptr %k, align 8, !dbg !7712, !tbaa !2658
  %220 = load i64, ptr %klen, align 8, !dbg !7712, !tbaa !2663
  %call369 = call i32 @strncmp(ptr noundef @.str.102, ptr noundef %219, i64 noundef %220) #22, !dbg !7712
  %cmp370 = icmp eq i32 %call369, 0, !dbg !7712
  br i1 %cmp370, label %if.then372, label %if.end397, !dbg !7713

if.then372:                                       ; preds = %land.lhs.true368
  call void @llvm.lifetime.start.p0(i64 8, ptr %end373) #18, !dbg !7714
  tail call void @llvm.dbg.declare(metadata ptr %end373, metadata !2198, metadata !DIExpression()), !dbg !7715
  call void @llvm.lifetime.start.p0(i64 1, ptr %err) #18, !dbg !7716
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !2201, metadata !DIExpression()), !dbg !7717
  %221 = load ptr, ptr %v, align 8, !dbg !7718, !tbaa !2658
  %call374 = call zeroext i1 @fxp_parse(ptr noundef @opt_narenas_ratio, ptr noundef %221, ptr noundef %end373), !dbg !7719
  %frombool375 = zext i1 %call374 to i8, !dbg !7717
  store i8 %frombool375, ptr %err, align 1, !dbg !7717, !tbaa !2695
  %222 = load i8, ptr %err, align 1, !dbg !7720, !tbaa !2695, !range !2708, !noundef !2709
  %tobool376 = trunc i8 %222 to i1, !dbg !7720
  br i1 %tobool376, label %if.then381, label %lor.lhs.false378, !dbg !7722

lor.lhs.false378:                                 ; preds = %if.then372
  %223 = load ptr, ptr %end373, align 8, !dbg !7723, !tbaa !2658
  %224 = load ptr, ptr %v, align 8, !dbg !7724, !tbaa !2658
  %sub.ptr.lhs.cast = ptrtoint ptr %223 to i64, !dbg !7725
  %sub.ptr.rhs.cast = ptrtoint ptr %224 to i64, !dbg !7725
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7725
  %225 = load i64, ptr %vlen, align 8, !dbg !7726, !tbaa !2663
  %cmp379 = icmp ne i64 %sub.ptr.sub, %225, !dbg !7727
  br i1 %cmp379, label %if.then381, label %if.end385, !dbg !7728

if.then381:                                       ; preds = %lor.lhs.false378, %if.then372
  %226 = load i8, ptr %initial_call.addr, align 1, !dbg !7729, !tbaa !2695, !range !2708, !noundef !2709
  %tobool382 = trunc i8 %226 to i1, !dbg !7729
  br i1 %tobool382, label %if.end384, label %if.then383, !dbg !7732

if.then383:                                       ; preds = %if.then381
  %227 = load ptr, ptr %k, align 8, !dbg !7733, !tbaa !2658
  %228 = load i64, ptr %klen, align 8, !dbg !7733, !tbaa !2663
  %229 = load ptr, ptr %v, align 8, !dbg !7733, !tbaa !2658
  %230 = load i64, ptr %vlen, align 8, !dbg !7733, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %227, i64 noundef %228, ptr noundef %229, i64 noundef %230), !dbg !7733
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7733, !tbaa !2695
  br label %if.end384, !dbg !7733

if.end384:                                        ; preds = %if.then383, %if.then381
  br label %if.end385, !dbg !7735

if.end385:                                        ; preds = %if.end384, %lor.lhs.false378
  %231 = load i8, ptr %initial_call.addr, align 1, !dbg !7736, !tbaa !2695, !range !2708, !noundef !2709
  %tobool386 = trunc i8 %231 to i1, !dbg !7736
  br i1 %tobool386, label %if.end396, label %land.lhs.true387, !dbg !7736

land.lhs.true387:                                 ; preds = %if.end385
  %232 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7736, !tbaa !2695, !range !2708, !noundef !2709
  %tobool388 = trunc i8 %232 to i1, !dbg !7736
  br i1 %tobool388, label %land.lhs.true390, label %if.end396, !dbg !7736

land.lhs.true390:                                 ; preds = %land.lhs.true387
  %233 = load i8, ptr %cur_opt_valid, align 1, !dbg !7736, !tbaa !2695, !range !2708, !noundef !2709
  %tobool391 = trunc i8 %233 to i1, !dbg !7736
  br i1 %tobool391, label %if.then393, label %if.end396, !dbg !7739

if.then393:                                       ; preds = %land.lhs.true390
  %234 = load i64, ptr %klen, align 8, !dbg !7740, !tbaa !2663
  %conv394 = trunc i64 %234 to i32, !dbg !7740
  %235 = load ptr, ptr %k, align 8, !dbg !7740, !tbaa !2658
  %236 = load i64, ptr %vlen, align 8, !dbg !7740, !tbaa !2663
  %conv395 = trunc i64 %236 to i32, !dbg !7740
  %237 = load ptr, ptr %v, align 8, !dbg !7740, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv394, ptr noundef %235, i32 noundef %conv395, ptr noundef %237), !dbg !7740
  br label %if.end396, !dbg !7740

if.end396:                                        ; preds = %if.then393, %land.lhs.true390, %land.lhs.true387, %if.end385
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr %err) #18, !dbg !7742
  call void @llvm.lifetime.end.p0(i64 8, ptr %end373) #18, !dbg !7742
  br label %cleanup2304

if.end397:                                        ; preds = %land.lhs.true368, %if.end365
  %238 = load i64, ptr %klen, align 8, !dbg !7743, !tbaa !2663
  %cmp398 = icmp eq i64 10, %238, !dbg !7743
  br i1 %cmp398, label %land.lhs.true400, label %if.end436, !dbg !7743

land.lhs.true400:                                 ; preds = %if.end397
  %239 = load ptr, ptr %k, align 8, !dbg !7743, !tbaa !2658
  %240 = load i64, ptr %klen, align 8, !dbg !7743, !tbaa !2663
  %call401 = call i32 @strncmp(ptr noundef @.str.103, ptr noundef %239, i64 noundef %240) #22, !dbg !7743
  %cmp402 = icmp eq i32 %call401, 0, !dbg !7743
  br i1 %cmp402, label %if.then404, label %if.end436, !dbg !7744

if.then404:                                       ; preds = %land.lhs.true400
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin_shards_segment_cur) #18, !dbg !7745
  tail call void @llvm.dbg.declare(metadata ptr %bin_shards_segment_cur, metadata !2202, metadata !DIExpression()), !dbg !7746
  %241 = load ptr, ptr %v, align 8, !dbg !7747, !tbaa !2658
  store ptr %241, ptr %bin_shards_segment_cur, align 8, !dbg !7746, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %vlen_left) #18, !dbg !7748
  tail call void @llvm.dbg.declare(metadata ptr %vlen_left, metadata !2205, metadata !DIExpression()), !dbg !7749
  %242 = load i64, ptr %vlen, align 8, !dbg !7750, !tbaa !2663
  store i64 %242, ptr %vlen_left, align 8, !dbg !7749, !tbaa !2663
  br label %do.body, !dbg !7751

do.body:                                          ; preds = %do.cond, %if.then404
  call void @llvm.lifetime.start.p0(i64 8, ptr %size_start) #18, !dbg !7752
  tail call void @llvm.dbg.declare(metadata ptr %size_start, metadata !2206, metadata !DIExpression()), !dbg !7753
  call void @llvm.lifetime.start.p0(i64 8, ptr %size_end) #18, !dbg !7754
  tail call void @llvm.dbg.declare(metadata ptr %size_end, metadata !2208, metadata !DIExpression()), !dbg !7755
  call void @llvm.lifetime.start.p0(i64 8, ptr %nshards) #18, !dbg !7756
  tail call void @llvm.dbg.declare(metadata ptr %nshards, metadata !2209, metadata !DIExpression()), !dbg !7757
  call void @llvm.lifetime.start.p0(i64 1, ptr %err405) #18, !dbg !7758
  tail call void @llvm.dbg.declare(metadata ptr %err405, metadata !2210, metadata !DIExpression()), !dbg !7759
  %call406 = call zeroext i1 @malloc_conf_multi_sizes_next(ptr noundef %bin_shards_segment_cur, ptr noundef %vlen_left, ptr noundef %size_start, ptr noundef %size_end, ptr noundef %nshards), !dbg !7760
  %frombool407 = zext i1 %call406 to i8, !dbg !7759
  store i8 %frombool407, ptr %err405, align 1, !dbg !7759, !tbaa !2695
  %243 = load i8, ptr %err405, align 1, !dbg !7761, !tbaa !2695, !range !2708, !noundef !2709
  %tobool408 = trunc i8 %243 to i1, !dbg !7761
  br i1 %tobool408, label %if.then413, label %lor.lhs.false410, !dbg !7763

lor.lhs.false410:                                 ; preds = %do.body
  %244 = load ptr, ptr %bin_shard_sizes.addr, align 8, !dbg !7764, !tbaa !2658
  %245 = load i64, ptr %size_start, align 8, !dbg !7765, !tbaa !2663
  %246 = load i64, ptr %size_end, align 8, !dbg !7766, !tbaa !2663
  %247 = load i64, ptr %nshards, align 8, !dbg !7767, !tbaa !2663
  %call411 = call zeroext i1 @bin_update_shard_size(ptr noundef %244, i64 noundef %245, i64 noundef %246, i64 noundef %247), !dbg !7768
  br i1 %call411, label %if.then413, label %if.end417, !dbg !7769

if.then413:                                       ; preds = %lor.lhs.false410, %do.body
  %248 = load i8, ptr %initial_call.addr, align 1, !dbg !7770, !tbaa !2695, !range !2708, !noundef !2709
  %tobool414 = trunc i8 %248 to i1, !dbg !7770
  br i1 %tobool414, label %if.end416, label %if.then415, !dbg !7773

if.then415:                                       ; preds = %if.then413
  %249 = load ptr, ptr %k, align 8, !dbg !7774, !tbaa !2658
  %250 = load i64, ptr %klen, align 8, !dbg !7774, !tbaa !2663
  %251 = load ptr, ptr %v, align 8, !dbg !7774, !tbaa !2658
  %252 = load i64, ptr %vlen, align 8, !dbg !7774, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.104, ptr noundef %249, i64 noundef %250, ptr noundef %251, i64 noundef %252), !dbg !7774
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7774, !tbaa !2695
  br label %if.end416, !dbg !7774

if.end416:                                        ; preds = %if.then415, %if.then413
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7776

if.end417:                                        ; preds = %lor.lhs.false410
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7777
  br label %cleanup, !dbg !7777

cleanup:                                          ; preds = %if.end417, %if.end416
  call void @llvm.lifetime.end.p0(i64 1, ptr %err405) #18, !dbg !7777
  call void @llvm.lifetime.end.p0(i64 8, ptr %nshards) #18, !dbg !7777
  call void @llvm.lifetime.end.p0(i64 8, ptr %size_end) #18, !dbg !7777
  call void @llvm.lifetime.end.p0(i64 8, ptr %size_start) #18, !dbg !7777
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 13, label %do.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond, !dbg !7778

do.cond:                                          ; preds = %cleanup.cont
  %253 = load i64, ptr %vlen_left, align 8, !dbg !7779, !tbaa !2663
  %cmp421 = icmp ugt i64 %253, 0, !dbg !7780
  br i1 %cmp421, label %do.body, label %do.end, !dbg !7778, !llvm.loop !7781

do.end:                                           ; preds = %do.cond, %cleanup
  %254 = load i8, ptr %initial_call.addr, align 1, !dbg !7783, !tbaa !2695, !range !2708, !noundef !2709
  %tobool423 = trunc i8 %254 to i1, !dbg !7783
  br i1 %tobool423, label %if.end433, label %land.lhs.true424, !dbg !7783

land.lhs.true424:                                 ; preds = %do.end
  %255 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7783, !tbaa !2695, !range !2708, !noundef !2709
  %tobool425 = trunc i8 %255 to i1, !dbg !7783
  br i1 %tobool425, label %land.lhs.true427, label %if.end433, !dbg !7783

land.lhs.true427:                                 ; preds = %land.lhs.true424
  %256 = load i8, ptr %cur_opt_valid, align 1, !dbg !7783, !tbaa !2695, !range !2708, !noundef !2709
  %tobool428 = trunc i8 %256 to i1, !dbg !7783
  br i1 %tobool428, label %if.then430, label %if.end433, !dbg !7786

if.then430:                                       ; preds = %land.lhs.true427
  %257 = load i64, ptr %klen, align 8, !dbg !7787, !tbaa !2663
  %conv431 = trunc i64 %257 to i32, !dbg !7787
  %258 = load ptr, ptr %k, align 8, !dbg !7787, !tbaa !2658
  %259 = load i64, ptr %vlen, align 8, !dbg !7787, !tbaa !2663
  %conv432 = trunc i64 %259 to i32, !dbg !7787
  %260 = load ptr, ptr %v, align 8, !dbg !7787, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv431, ptr noundef %258, i32 noundef %conv432, ptr noundef %260), !dbg !7787
  br label %if.end433, !dbg !7787

if.end433:                                        ; preds = %if.then430, %land.lhs.true427, %land.lhs.true424, %do.end
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %vlen_left) #18, !dbg !7789
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin_shards_segment_cur) #18, !dbg !7789
  br label %cleanup2304

if.end436:                                        ; preds = %land.lhs.true400, %if.end397
  %261 = load i64, ptr %klen, align 8, !dbg !7790, !tbaa !2663
  %cmp437 = icmp eq i64 14, %261, !dbg !7790
  br i1 %cmp437, label %land.lhs.true439, label %if.end481, !dbg !7790

land.lhs.true439:                                 ; preds = %if.end436
  %262 = load ptr, ptr %k, align 8, !dbg !7790, !tbaa !2658
  %263 = load i64, ptr %klen, align 8, !dbg !7790, !tbaa !2663
  %call440 = call i32 @strncmp(ptr noundef @.str.105, ptr noundef %262, i64 noundef %263) #22, !dbg !7790
  %cmp441 = icmp eq i32 %call440, 0, !dbg !7790
  br i1 %cmp441, label %if.then443, label %if.end481, !dbg !7791

if.then443:                                       ; preds = %land.lhs.true439
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv444) #18, !dbg !7792
  tail call void @llvm.dbg.declare(metadata ptr %mv444, metadata !2211, metadata !DIExpression()), !dbg !7792
  call void @llvm.lifetime.start.p0(i64 8, ptr %end445) #18, !dbg !7792
  tail call void @llvm.dbg.declare(metadata ptr %end445, metadata !2214, metadata !DIExpression()), !dbg !7792
  call void @set_errno(i32 noundef 0), !dbg !7792
  %264 = load ptr, ptr %v, align 8, !dbg !7792, !tbaa !2658
  %call446 = call i64 @malloc_strtoumax(ptr noundef %264, ptr noundef %end445, i32 noundef 0), !dbg !7792
  store i64 %call446, ptr %mv444, align 8, !dbg !7792, !tbaa !2663
  %call447 = call i32 @get_errno(), !dbg !7793
  %cmp448 = icmp ne i32 %call447, 0, !dbg !7793
  br i1 %cmp448, label %if.then454, label %lor.lhs.false450, !dbg !7793

lor.lhs.false450:                                 ; preds = %if.then443
  %265 = load ptr, ptr %end445, align 8, !dbg !7793, !tbaa !2658
  %266 = ptrtoint ptr %265 to i64, !dbg !7793
  %267 = load ptr, ptr %v, align 8, !dbg !7793, !tbaa !2658
  %268 = ptrtoint ptr %267 to i64, !dbg !7793
  %sub451 = sub i64 %266, %268, !dbg !7793
  %269 = load i64, ptr %vlen, align 8, !dbg !7793, !tbaa !2663
  %cmp452 = icmp ne i64 %sub451, %269, !dbg !7793
  br i1 %cmp452, label %if.then454, label %if.else458, !dbg !7792

if.then454:                                       ; preds = %lor.lhs.false450, %if.then443
  %270 = load i8, ptr %initial_call.addr, align 1, !dbg !7795, !tbaa !2695, !range !2708, !noundef !2709
  %tobool455 = trunc i8 %270 to i1, !dbg !7795
  br i1 %tobool455, label %if.end457, label %if.then456, !dbg !7798

if.then456:                                       ; preds = %if.then454
  %271 = load ptr, ptr %k, align 8, !dbg !7799, !tbaa !2658
  %272 = load i64, ptr %klen, align 8, !dbg !7799, !tbaa !2663
  %273 = load ptr, ptr %v, align 8, !dbg !7799, !tbaa !2658
  %274 = load i64, ptr %vlen, align 8, !dbg !7799, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %271, i64 noundef %272, ptr noundef %273, i64 noundef %274), !dbg !7799
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7799, !tbaa !2695
  br label %if.end457, !dbg !7799

if.end457:                                        ; preds = %if.then456, %if.then454
  br label %if.end467, !dbg !7798

if.else458:                                       ; preds = %lor.lhs.false450
  %275 = load i64, ptr %mv444, align 8, !dbg !7801, !tbaa !2663
  %cmp459 = icmp slt i64 %275, -1, !dbg !7801
  br i1 %cmp459, label %if.then461, label %if.else465, !dbg !7805

if.then461:                                       ; preds = %if.else458
  %276 = load i8, ptr %initial_call.addr, align 1, !dbg !7806, !tbaa !2695, !range !2708, !noundef !2709
  %tobool462 = trunc i8 %276 to i1, !dbg !7806
  br i1 %tobool462, label %if.end464, label %if.then463, !dbg !7809

if.then463:                                       ; preds = %if.then461
  %277 = load ptr, ptr %k, align 8, !dbg !7810, !tbaa !2658
  %278 = load i64, ptr %klen, align 8, !dbg !7810, !tbaa !2663
  %279 = load ptr, ptr %v, align 8, !dbg !7810, !tbaa !2658
  %280 = load i64, ptr %vlen, align 8, !dbg !7810, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %277, i64 noundef %278, ptr noundef %279, i64 noundef %280), !dbg !7810
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7810, !tbaa !2695
  br label %if.end464, !dbg !7810

if.end464:                                        ; preds = %if.then463, %if.then461
  br label %if.end466, !dbg !7809

if.else465:                                       ; preds = %if.else458
  %281 = load i64, ptr %mv444, align 8, !dbg !7812, !tbaa !2663
  store i64 %281, ptr @opt_mutex_max_spin, align 8, !dbg !7812, !tbaa !2663
  br label %if.end466

if.end466:                                        ; preds = %if.else465, %if.end464
  br label %if.end467

if.end467:                                        ; preds = %if.end466, %if.end457
  %282 = load i8, ptr %initial_call.addr, align 1, !dbg !7814, !tbaa !2695, !range !2708, !noundef !2709
  %tobool468 = trunc i8 %282 to i1, !dbg !7814
  br i1 %tobool468, label %if.end478, label %land.lhs.true469, !dbg !7814

land.lhs.true469:                                 ; preds = %if.end467
  %283 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7814, !tbaa !2695, !range !2708, !noundef !2709
  %tobool470 = trunc i8 %283 to i1, !dbg !7814
  br i1 %tobool470, label %land.lhs.true472, label %if.end478, !dbg !7814

land.lhs.true472:                                 ; preds = %land.lhs.true469
  %284 = load i8, ptr %cur_opt_valid, align 1, !dbg !7814, !tbaa !2695, !range !2708, !noundef !2709
  %tobool473 = trunc i8 %284 to i1, !dbg !7814
  br i1 %tobool473, label %if.then475, label %if.end478, !dbg !7817

if.then475:                                       ; preds = %land.lhs.true472
  %285 = load i64, ptr %klen, align 8, !dbg !7818, !tbaa !2663
  %conv476 = trunc i64 %285 to i32, !dbg !7818
  %286 = load ptr, ptr %k, align 8, !dbg !7818, !tbaa !2658
  %287 = load i64, ptr %vlen, align 8, !dbg !7818, !tbaa !2663
  %conv477 = trunc i64 %287 to i32, !dbg !7818
  %288 = load ptr, ptr %v, align 8, !dbg !7818, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv476, ptr noundef %286, i32 noundef %conv477, ptr noundef %288), !dbg !7818
  br label %if.end478, !dbg !7818

if.end478:                                        ; preds = %if.then475, %land.lhs.true472, %land.lhs.true469, %if.end467
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end445) #18, !dbg !7790
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv444) #18, !dbg !7790
  br label %cleanup2304

if.end481:                                        ; preds = %land.lhs.true439, %if.end436
  %289 = load i64, ptr %klen, align 8, !dbg !7820, !tbaa !2663
  %cmp482 = icmp eq i64 14, %289, !dbg !7820
  br i1 %cmp482, label %land.lhs.true484, label %if.end529, !dbg !7820

land.lhs.true484:                                 ; preds = %if.end481
  %290 = load ptr, ptr %k, align 8, !dbg !7820, !tbaa !2658
  %291 = load i64, ptr %klen, align 8, !dbg !7820, !tbaa !2663
  %call485 = call i32 @strncmp(ptr noundef @.str.106, ptr noundef %290, i64 noundef %291) #22, !dbg !7820
  %cmp486 = icmp eq i32 %call485, 0, !dbg !7820
  br i1 %cmp486, label %if.then488, label %if.end529, !dbg !7821

if.then488:                                       ; preds = %land.lhs.true484
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv489) #18, !dbg !7822
  tail call void @llvm.dbg.declare(metadata ptr %mv489, metadata !2215, metadata !DIExpression()), !dbg !7822
  call void @llvm.lifetime.start.p0(i64 8, ptr %end490) #18, !dbg !7822
  tail call void @llvm.dbg.declare(metadata ptr %end490, metadata !2218, metadata !DIExpression()), !dbg !7822
  call void @set_errno(i32 noundef 0), !dbg !7822
  %292 = load ptr, ptr %v, align 8, !dbg !7822, !tbaa !2658
  %call491 = call i64 @malloc_strtoumax(ptr noundef %292, ptr noundef %end490, i32 noundef 0), !dbg !7822
  store i64 %call491, ptr %mv489, align 8, !dbg !7822, !tbaa !2663
  %call492 = call i32 @get_errno(), !dbg !7823
  %cmp493 = icmp ne i32 %call492, 0, !dbg !7823
  br i1 %cmp493, label %if.then499, label %lor.lhs.false495, !dbg !7823

lor.lhs.false495:                                 ; preds = %if.then488
  %293 = load ptr, ptr %end490, align 8, !dbg !7823, !tbaa !2658
  %294 = ptrtoint ptr %293 to i64, !dbg !7823
  %295 = load ptr, ptr %v, align 8, !dbg !7823, !tbaa !2658
  %296 = ptrtoint ptr %295 to i64, !dbg !7823
  %sub496 = sub i64 %294, %296, !dbg !7823
  %297 = load i64, ptr %vlen, align 8, !dbg !7823, !tbaa !2663
  %cmp497 = icmp ne i64 %sub496, %297, !dbg !7823
  br i1 %cmp497, label %if.then499, label %if.else503, !dbg !7822

if.then499:                                       ; preds = %lor.lhs.false495, %if.then488
  %298 = load i8, ptr %initial_call.addr, align 1, !dbg !7825, !tbaa !2695, !range !2708, !noundef !2709
  %tobool500 = trunc i8 %298 to i1, !dbg !7825
  br i1 %tobool500, label %if.end502, label %if.then501, !dbg !7828

if.then501:                                       ; preds = %if.then499
  %299 = load ptr, ptr %k, align 8, !dbg !7829, !tbaa !2658
  %300 = load i64, ptr %klen, align 8, !dbg !7829, !tbaa !2663
  %301 = load ptr, ptr %v, align 8, !dbg !7829, !tbaa !2658
  %302 = load i64, ptr %vlen, align 8, !dbg !7829, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %299, i64 noundef %300, ptr noundef %301, i64 noundef %302), !dbg !7829
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7829, !tbaa !2695
  br label %if.end502, !dbg !7829

if.end502:                                        ; preds = %if.then501, %if.then499
  br label %if.end515, !dbg !7828

if.else503:                                       ; preds = %lor.lhs.false495
  %303 = load i64, ptr %mv489, align 8, !dbg !7831, !tbaa !2663
  %cmp504 = icmp slt i64 %303, -1, !dbg !7831
  br i1 %cmp504, label %if.then509, label %lor.lhs.false506, !dbg !7831

lor.lhs.false506:                                 ; preds = %if.else503
  %304 = load i64, ptr %mv489, align 8, !dbg !7831, !tbaa !2663
  %cmp507 = icmp sgt i64 %304, 18446744072000, !dbg !7831
  br i1 %cmp507, label %if.then509, label %if.else513, !dbg !7835

if.then509:                                       ; preds = %lor.lhs.false506, %if.else503
  %305 = load i8, ptr %initial_call.addr, align 1, !dbg !7836, !tbaa !2695, !range !2708, !noundef !2709
  %tobool510 = trunc i8 %305 to i1, !dbg !7836
  br i1 %tobool510, label %if.end512, label %if.then511, !dbg !7839

if.then511:                                       ; preds = %if.then509
  %306 = load ptr, ptr %k, align 8, !dbg !7840, !tbaa !2658
  %307 = load i64, ptr %klen, align 8, !dbg !7840, !tbaa !2663
  %308 = load ptr, ptr %v, align 8, !dbg !7840, !tbaa !2658
  %309 = load i64, ptr %vlen, align 8, !dbg !7840, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %306, i64 noundef %307, ptr noundef %308, i64 noundef %309), !dbg !7840
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7840, !tbaa !2695
  br label %if.end512, !dbg !7840

if.end512:                                        ; preds = %if.then511, %if.then509
  br label %if.end514, !dbg !7839

if.else513:                                       ; preds = %lor.lhs.false506
  %310 = load i64, ptr %mv489, align 8, !dbg !7842, !tbaa !2663
  store i64 %310, ptr @opt_dirty_decay_ms, align 8, !dbg !7842, !tbaa !2663
  br label %if.end514

if.end514:                                        ; preds = %if.else513, %if.end512
  br label %if.end515

if.end515:                                        ; preds = %if.end514, %if.end502
  %311 = load i8, ptr %initial_call.addr, align 1, !dbg !7844, !tbaa !2695, !range !2708, !noundef !2709
  %tobool516 = trunc i8 %311 to i1, !dbg !7844
  br i1 %tobool516, label %if.end526, label %land.lhs.true517, !dbg !7844

land.lhs.true517:                                 ; preds = %if.end515
  %312 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7844, !tbaa !2695, !range !2708, !noundef !2709
  %tobool518 = trunc i8 %312 to i1, !dbg !7844
  br i1 %tobool518, label %land.lhs.true520, label %if.end526, !dbg !7844

land.lhs.true520:                                 ; preds = %land.lhs.true517
  %313 = load i8, ptr %cur_opt_valid, align 1, !dbg !7844, !tbaa !2695, !range !2708, !noundef !2709
  %tobool521 = trunc i8 %313 to i1, !dbg !7844
  br i1 %tobool521, label %if.then523, label %if.end526, !dbg !7847

if.then523:                                       ; preds = %land.lhs.true520
  %314 = load i64, ptr %klen, align 8, !dbg !7848, !tbaa !2663
  %conv524 = trunc i64 %314 to i32, !dbg !7848
  %315 = load ptr, ptr %k, align 8, !dbg !7848, !tbaa !2658
  %316 = load i64, ptr %vlen, align 8, !dbg !7848, !tbaa !2663
  %conv525 = trunc i64 %316 to i32, !dbg !7848
  %317 = load ptr, ptr %v, align 8, !dbg !7848, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv524, ptr noundef %315, i32 noundef %conv525, ptr noundef %317), !dbg !7848
  br label %if.end526, !dbg !7848

if.end526:                                        ; preds = %if.then523, %land.lhs.true520, %land.lhs.true517, %if.end515
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end490) #18, !dbg !7820
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv489) #18, !dbg !7820
  br label %cleanup2304

if.end529:                                        ; preds = %land.lhs.true484, %if.end481
  %318 = load i64, ptr %klen, align 8, !dbg !7850, !tbaa !2663
  %cmp530 = icmp eq i64 14, %318, !dbg !7850
  br i1 %cmp530, label %land.lhs.true532, label %if.end577, !dbg !7850

land.lhs.true532:                                 ; preds = %if.end529
  %319 = load ptr, ptr %k, align 8, !dbg !7850, !tbaa !2658
  %320 = load i64, ptr %klen, align 8, !dbg !7850, !tbaa !2663
  %call533 = call i32 @strncmp(ptr noundef @.str.107, ptr noundef %319, i64 noundef %320) #22, !dbg !7850
  %cmp534 = icmp eq i32 %call533, 0, !dbg !7850
  br i1 %cmp534, label %if.then536, label %if.end577, !dbg !7851

if.then536:                                       ; preds = %land.lhs.true532
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv537) #18, !dbg !7852
  tail call void @llvm.dbg.declare(metadata ptr %mv537, metadata !2219, metadata !DIExpression()), !dbg !7852
  call void @llvm.lifetime.start.p0(i64 8, ptr %end538) #18, !dbg !7852
  tail call void @llvm.dbg.declare(metadata ptr %end538, metadata !2222, metadata !DIExpression()), !dbg !7852
  call void @set_errno(i32 noundef 0), !dbg !7852
  %321 = load ptr, ptr %v, align 8, !dbg !7852, !tbaa !2658
  %call539 = call i64 @malloc_strtoumax(ptr noundef %321, ptr noundef %end538, i32 noundef 0), !dbg !7852
  store i64 %call539, ptr %mv537, align 8, !dbg !7852, !tbaa !2663
  %call540 = call i32 @get_errno(), !dbg !7853
  %cmp541 = icmp ne i32 %call540, 0, !dbg !7853
  br i1 %cmp541, label %if.then547, label %lor.lhs.false543, !dbg !7853

lor.lhs.false543:                                 ; preds = %if.then536
  %322 = load ptr, ptr %end538, align 8, !dbg !7853, !tbaa !2658
  %323 = ptrtoint ptr %322 to i64, !dbg !7853
  %324 = load ptr, ptr %v, align 8, !dbg !7853, !tbaa !2658
  %325 = ptrtoint ptr %324 to i64, !dbg !7853
  %sub544 = sub i64 %323, %325, !dbg !7853
  %326 = load i64, ptr %vlen, align 8, !dbg !7853, !tbaa !2663
  %cmp545 = icmp ne i64 %sub544, %326, !dbg !7853
  br i1 %cmp545, label %if.then547, label %if.else551, !dbg !7852

if.then547:                                       ; preds = %lor.lhs.false543, %if.then536
  %327 = load i8, ptr %initial_call.addr, align 1, !dbg !7855, !tbaa !2695, !range !2708, !noundef !2709
  %tobool548 = trunc i8 %327 to i1, !dbg !7855
  br i1 %tobool548, label %if.end550, label %if.then549, !dbg !7858

if.then549:                                       ; preds = %if.then547
  %328 = load ptr, ptr %k, align 8, !dbg !7859, !tbaa !2658
  %329 = load i64, ptr %klen, align 8, !dbg !7859, !tbaa !2663
  %330 = load ptr, ptr %v, align 8, !dbg !7859, !tbaa !2658
  %331 = load i64, ptr %vlen, align 8, !dbg !7859, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %328, i64 noundef %329, ptr noundef %330, i64 noundef %331), !dbg !7859
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7859, !tbaa !2695
  br label %if.end550, !dbg !7859

if.end550:                                        ; preds = %if.then549, %if.then547
  br label %if.end563, !dbg !7858

if.else551:                                       ; preds = %lor.lhs.false543
  %332 = load i64, ptr %mv537, align 8, !dbg !7861, !tbaa !2663
  %cmp552 = icmp slt i64 %332, -1, !dbg !7861
  br i1 %cmp552, label %if.then557, label %lor.lhs.false554, !dbg !7861

lor.lhs.false554:                                 ; preds = %if.else551
  %333 = load i64, ptr %mv537, align 8, !dbg !7861, !tbaa !2663
  %cmp555 = icmp sgt i64 %333, 18446744072000, !dbg !7861
  br i1 %cmp555, label %if.then557, label %if.else561, !dbg !7865

if.then557:                                       ; preds = %lor.lhs.false554, %if.else551
  %334 = load i8, ptr %initial_call.addr, align 1, !dbg !7866, !tbaa !2695, !range !2708, !noundef !2709
  %tobool558 = trunc i8 %334 to i1, !dbg !7866
  br i1 %tobool558, label %if.end560, label %if.then559, !dbg !7869

if.then559:                                       ; preds = %if.then557
  %335 = load ptr, ptr %k, align 8, !dbg !7870, !tbaa !2658
  %336 = load i64, ptr %klen, align 8, !dbg !7870, !tbaa !2663
  %337 = load ptr, ptr %v, align 8, !dbg !7870, !tbaa !2658
  %338 = load i64, ptr %vlen, align 8, !dbg !7870, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %335, i64 noundef %336, ptr noundef %337, i64 noundef %338), !dbg !7870
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7870, !tbaa !2695
  br label %if.end560, !dbg !7870

if.end560:                                        ; preds = %if.then559, %if.then557
  br label %if.end562, !dbg !7869

if.else561:                                       ; preds = %lor.lhs.false554
  %339 = load i64, ptr %mv537, align 8, !dbg !7872, !tbaa !2663
  store i64 %339, ptr @opt_muzzy_decay_ms, align 8, !dbg !7872, !tbaa !2663
  br label %if.end562

if.end562:                                        ; preds = %if.else561, %if.end560
  br label %if.end563

if.end563:                                        ; preds = %if.end562, %if.end550
  %340 = load i8, ptr %initial_call.addr, align 1, !dbg !7874, !tbaa !2695, !range !2708, !noundef !2709
  %tobool564 = trunc i8 %340 to i1, !dbg !7874
  br i1 %tobool564, label %if.end574, label %land.lhs.true565, !dbg !7874

land.lhs.true565:                                 ; preds = %if.end563
  %341 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7874, !tbaa !2695, !range !2708, !noundef !2709
  %tobool566 = trunc i8 %341 to i1, !dbg !7874
  br i1 %tobool566, label %land.lhs.true568, label %if.end574, !dbg !7874

land.lhs.true568:                                 ; preds = %land.lhs.true565
  %342 = load i8, ptr %cur_opt_valid, align 1, !dbg !7874, !tbaa !2695, !range !2708, !noundef !2709
  %tobool569 = trunc i8 %342 to i1, !dbg !7874
  br i1 %tobool569, label %if.then571, label %if.end574, !dbg !7877

if.then571:                                       ; preds = %land.lhs.true568
  %343 = load i64, ptr %klen, align 8, !dbg !7878, !tbaa !2663
  %conv572 = trunc i64 %343 to i32, !dbg !7878
  %344 = load ptr, ptr %k, align 8, !dbg !7878, !tbaa !2658
  %345 = load i64, ptr %vlen, align 8, !dbg !7878, !tbaa !2663
  %conv573 = trunc i64 %345 to i32, !dbg !7878
  %346 = load ptr, ptr %v, align 8, !dbg !7878, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv572, ptr noundef %344, i32 noundef %conv573, ptr noundef %346), !dbg !7878
  br label %if.end574, !dbg !7878

if.end574:                                        ; preds = %if.then571, %land.lhs.true568, %land.lhs.true565, %if.end563
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end538) #18, !dbg !7850
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv537) #18, !dbg !7850
  br label %cleanup2304

if.end577:                                        ; preds = %land.lhs.true532, %if.end529
  %347 = load i64, ptr %klen, align 8, !dbg !7880, !tbaa !2663
  %cmp578 = icmp eq i64 11, %347, !dbg !7880
  br i1 %cmp578, label %land.lhs.true580, label %if.end617, !dbg !7880

land.lhs.true580:                                 ; preds = %if.end577
  %348 = load ptr, ptr %k, align 8, !dbg !7880, !tbaa !2658
  %349 = load i64, ptr %klen, align 8, !dbg !7880, !tbaa !2663
  %call581 = call i32 @strncmp(ptr noundef @.str.108, ptr noundef %348, i64 noundef %349) #22, !dbg !7880
  %cmp582 = icmp eq i32 %call581, 0, !dbg !7880
  br i1 %cmp582, label %if.then584, label %if.end617, !dbg !7882

if.then584:                                       ; preds = %land.lhs.true580
  %350 = load i64, ptr %vlen, align 8, !dbg !7883, !tbaa !2663
  %cmp585 = icmp eq i64 4, %350, !dbg !7883
  br i1 %cmp585, label %land.lhs.true587, label %if.else592, !dbg !7883

land.lhs.true587:                                 ; preds = %if.then584
  %351 = load ptr, ptr %v, align 8, !dbg !7883, !tbaa !2658
  %352 = load i64, ptr %vlen, align 8, !dbg !7883, !tbaa !2663
  %call588 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %351, i64 noundef %352) #22, !dbg !7883
  %cmp589 = icmp eq i32 %call588, 0, !dbg !7883
  br i1 %cmp589, label %if.then591, label %if.else592, !dbg !7886

if.then591:                                       ; preds = %land.lhs.true587
  store i8 1, ptr @opt_stats_print, align 1, !dbg !7887, !tbaa !2695
  br label %if.end605, !dbg !7887

if.else592:                                       ; preds = %land.lhs.true587, %if.then584
  %353 = load i64, ptr %vlen, align 8, !dbg !7889, !tbaa !2663
  %cmp593 = icmp eq i64 5, %353, !dbg !7889
  br i1 %cmp593, label %land.lhs.true595, label %if.else600, !dbg !7889

land.lhs.true595:                                 ; preds = %if.else592
  %354 = load ptr, ptr %v, align 8, !dbg !7889, !tbaa !2658
  %355 = load i64, ptr %vlen, align 8, !dbg !7889, !tbaa !2663
  %call596 = call i32 @strncmp(ptr noundef @.str, ptr noundef %354, i64 noundef %355) #22, !dbg !7889
  %cmp597 = icmp eq i32 %call596, 0, !dbg !7889
  br i1 %cmp597, label %if.then599, label %if.else600, !dbg !7883

if.then599:                                       ; preds = %land.lhs.true595
  store i8 0, ptr @opt_stats_print, align 1, !dbg !7891, !tbaa !2695
  br label %if.end604, !dbg !7891

if.else600:                                       ; preds = %land.lhs.true595, %if.else592
  %356 = load i8, ptr %initial_call.addr, align 1, !dbg !7893, !tbaa !2695, !range !2708, !noundef !2709
  %tobool601 = trunc i8 %356 to i1, !dbg !7893
  br i1 %tobool601, label %if.end603, label %if.then602, !dbg !7896

if.then602:                                       ; preds = %if.else600
  %357 = load ptr, ptr %k, align 8, !dbg !7897, !tbaa !2658
  %358 = load i64, ptr %klen, align 8, !dbg !7897, !tbaa !2663
  %359 = load ptr, ptr %v, align 8, !dbg !7897, !tbaa !2658
  %360 = load i64, ptr %vlen, align 8, !dbg !7897, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %357, i64 noundef %358, ptr noundef %359, i64 noundef %360), !dbg !7897
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7897, !tbaa !2695
  br label %if.end603, !dbg !7897

if.end603:                                        ; preds = %if.then602, %if.else600
  br label %if.end604

if.end604:                                        ; preds = %if.end603, %if.then599
  br label %if.end605

if.end605:                                        ; preds = %if.end604, %if.then591
  %361 = load i8, ptr %initial_call.addr, align 1, !dbg !7899, !tbaa !2695, !range !2708, !noundef !2709
  %tobool606 = trunc i8 %361 to i1, !dbg !7899
  br i1 %tobool606, label %if.end616, label %land.lhs.true607, !dbg !7899

land.lhs.true607:                                 ; preds = %if.end605
  %362 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7899, !tbaa !2695, !range !2708, !noundef !2709
  %tobool608 = trunc i8 %362 to i1, !dbg !7899
  br i1 %tobool608, label %land.lhs.true610, label %if.end616, !dbg !7899

land.lhs.true610:                                 ; preds = %land.lhs.true607
  %363 = load i8, ptr %cur_opt_valid, align 1, !dbg !7899, !tbaa !2695, !range !2708, !noundef !2709
  %tobool611 = trunc i8 %363 to i1, !dbg !7899
  br i1 %tobool611, label %if.then613, label %if.end616, !dbg !7902

if.then613:                                       ; preds = %land.lhs.true610
  %364 = load i64, ptr %klen, align 8, !dbg !7903, !tbaa !2663
  %conv614 = trunc i64 %364 to i32, !dbg !7903
  %365 = load ptr, ptr %k, align 8, !dbg !7903, !tbaa !2658
  %366 = load i64, ptr %vlen, align 8, !dbg !7903, !tbaa !2663
  %conv615 = trunc i64 %366 to i32, !dbg !7903
  %367 = load ptr, ptr %v, align 8, !dbg !7903, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv614, ptr noundef %365, i32 noundef %conv615, ptr noundef %367), !dbg !7903
  br label %if.end616, !dbg !7903

if.end616:                                        ; preds = %if.then613, %land.lhs.true610, %land.lhs.true607, %if.end605
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7902, !llvm.loop !7444

if.end617:                                        ; preds = %land.lhs.true580, %if.end577
  %368 = load i64, ptr %klen, align 8, !dbg !7905, !tbaa !2663
  %cmp618 = icmp eq i64 16, %368, !dbg !7905
  br i1 %cmp618, label %land.lhs.true620, label %if.end636, !dbg !7905

land.lhs.true620:                                 ; preds = %if.end617
  %369 = load ptr, ptr %k, align 8, !dbg !7905, !tbaa !2658
  %370 = load i64, ptr %klen, align 8, !dbg !7905, !tbaa !2663
  %call621 = call i32 @strncmp(ptr noundef @.str.109, ptr noundef %369, i64 noundef %370) #22, !dbg !7905
  %cmp622 = icmp eq i32 %call621, 0, !dbg !7905
  br i1 %cmp622, label %if.then624, label %if.end636, !dbg !7907

if.then624:                                       ; preds = %land.lhs.true620
  %371 = load ptr, ptr %v, align 8, !dbg !7908, !tbaa !2658
  %372 = load i64, ptr %vlen, align 8, !dbg !7910, !tbaa !2663
  call void @init_opt_stats_opts(ptr noundef %371, i64 noundef %372, ptr noundef @opt_stats_print_opts), !dbg !7911
  %373 = load i8, ptr %initial_call.addr, align 1, !dbg !7912, !tbaa !2695, !range !2708, !noundef !2709
  %tobool625 = trunc i8 %373 to i1, !dbg !7912
  br i1 %tobool625, label %if.end635, label %land.lhs.true626, !dbg !7912

land.lhs.true626:                                 ; preds = %if.then624
  %374 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7912, !tbaa !2695, !range !2708, !noundef !2709
  %tobool627 = trunc i8 %374 to i1, !dbg !7912
  br i1 %tobool627, label %land.lhs.true629, label %if.end635, !dbg !7912

land.lhs.true629:                                 ; preds = %land.lhs.true626
  %375 = load i8, ptr %cur_opt_valid, align 1, !dbg !7912, !tbaa !2695, !range !2708, !noundef !2709
  %tobool630 = trunc i8 %375 to i1, !dbg !7912
  br i1 %tobool630, label %if.then632, label %if.end635, !dbg !7915

if.then632:                                       ; preds = %land.lhs.true629
  %376 = load i64, ptr %klen, align 8, !dbg !7916, !tbaa !2663
  %conv633 = trunc i64 %376 to i32, !dbg !7916
  %377 = load ptr, ptr %k, align 8, !dbg !7916, !tbaa !2658
  %378 = load i64, ptr %vlen, align 8, !dbg !7916, !tbaa !2663
  %conv634 = trunc i64 %378 to i32, !dbg !7916
  %379 = load ptr, ptr %v, align 8, !dbg !7916, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv633, ptr noundef %377, i32 noundef %conv634, ptr noundef %379), !dbg !7916
  br label %if.end635, !dbg !7916

if.end635:                                        ; preds = %if.then632, %land.lhs.true629, %land.lhs.true626, %if.then624
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7915, !llvm.loop !7444

if.end636:                                        ; preds = %land.lhs.true620, %if.end617
  %380 = load i64, ptr %klen, align 8, !dbg !7918, !tbaa !2663
  %cmp637 = icmp eq i64 14, %380, !dbg !7918
  br i1 %cmp637, label %land.lhs.true639, label %if.end681, !dbg !7918

land.lhs.true639:                                 ; preds = %if.end636
  %381 = load ptr, ptr %k, align 8, !dbg !7918, !tbaa !2658
  %382 = load i64, ptr %klen, align 8, !dbg !7918, !tbaa !2663
  %call640 = call i32 @strncmp(ptr noundef @.str.110, ptr noundef %381, i64 noundef %382) #22, !dbg !7918
  %cmp641 = icmp eq i32 %call640, 0, !dbg !7918
  br i1 %cmp641, label %if.then643, label %if.end681, !dbg !7919

if.then643:                                       ; preds = %land.lhs.true639
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv644) #18, !dbg !7920
  tail call void @llvm.dbg.declare(metadata ptr %mv644, metadata !2223, metadata !DIExpression()), !dbg !7920
  call void @llvm.lifetime.start.p0(i64 8, ptr %end645) #18, !dbg !7920
  tail call void @llvm.dbg.declare(metadata ptr %end645, metadata !2226, metadata !DIExpression()), !dbg !7920
  call void @set_errno(i32 noundef 0), !dbg !7920
  %383 = load ptr, ptr %v, align 8, !dbg !7920, !tbaa !2658
  %call646 = call i64 @malloc_strtoumax(ptr noundef %383, ptr noundef %end645, i32 noundef 0), !dbg !7920
  store i64 %call646, ptr %mv644, align 8, !dbg !7920, !tbaa !2663
  %call647 = call i32 @get_errno(), !dbg !7921
  %cmp648 = icmp ne i32 %call647, 0, !dbg !7921
  br i1 %cmp648, label %if.then654, label %lor.lhs.false650, !dbg !7921

lor.lhs.false650:                                 ; preds = %if.then643
  %384 = load ptr, ptr %end645, align 8, !dbg !7921, !tbaa !2658
  %385 = ptrtoint ptr %384 to i64, !dbg !7921
  %386 = load ptr, ptr %v, align 8, !dbg !7921, !tbaa !2658
  %387 = ptrtoint ptr %386 to i64, !dbg !7921
  %sub651 = sub i64 %385, %387, !dbg !7921
  %388 = load i64, ptr %vlen, align 8, !dbg !7921, !tbaa !2663
  %cmp652 = icmp ne i64 %sub651, %388, !dbg !7921
  br i1 %cmp652, label %if.then654, label %if.else658, !dbg !7920

if.then654:                                       ; preds = %lor.lhs.false650, %if.then643
  %389 = load i8, ptr %initial_call.addr, align 1, !dbg !7923, !tbaa !2695, !range !2708, !noundef !2709
  %tobool655 = trunc i8 %389 to i1, !dbg !7923
  br i1 %tobool655, label %if.end657, label %if.then656, !dbg !7926

if.then656:                                       ; preds = %if.then654
  %390 = load ptr, ptr %k, align 8, !dbg !7927, !tbaa !2658
  %391 = load i64, ptr %klen, align 8, !dbg !7927, !tbaa !2663
  %392 = load ptr, ptr %v, align 8, !dbg !7927, !tbaa !2658
  %393 = load i64, ptr %vlen, align 8, !dbg !7927, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %390, i64 noundef %391, ptr noundef %392, i64 noundef %393), !dbg !7927
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7927, !tbaa !2695
  br label %if.end657, !dbg !7927

if.end657:                                        ; preds = %if.then656, %if.then654
  br label %if.end667, !dbg !7926

if.else658:                                       ; preds = %lor.lhs.false650
  %394 = load i64, ptr %mv644, align 8, !dbg !7929, !tbaa !2663
  %cmp659 = icmp slt i64 %394, -1, !dbg !7929
  br i1 %cmp659, label %if.then661, label %if.else665, !dbg !7933

if.then661:                                       ; preds = %if.else658
  %395 = load i8, ptr %initial_call.addr, align 1, !dbg !7934, !tbaa !2695, !range !2708, !noundef !2709
  %tobool662 = trunc i8 %395 to i1, !dbg !7934
  br i1 %tobool662, label %if.end664, label %if.then663, !dbg !7937

if.then663:                                       ; preds = %if.then661
  %396 = load ptr, ptr %k, align 8, !dbg !7938, !tbaa !2658
  %397 = load i64, ptr %klen, align 8, !dbg !7938, !tbaa !2663
  %398 = load ptr, ptr %v, align 8, !dbg !7938, !tbaa !2658
  %399 = load i64, ptr %vlen, align 8, !dbg !7938, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %396, i64 noundef %397, ptr noundef %398, i64 noundef %399), !dbg !7938
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !7938, !tbaa !2695
  br label %if.end664, !dbg !7938

if.end664:                                        ; preds = %if.then663, %if.then661
  br label %if.end666, !dbg !7937

if.else665:                                       ; preds = %if.else658
  %400 = load i64, ptr %mv644, align 8, !dbg !7940, !tbaa !2663
  store i64 %400, ptr @opt_stats_interval, align 8, !dbg !7940, !tbaa !2663
  br label %if.end666

if.end666:                                        ; preds = %if.else665, %if.end664
  br label %if.end667

if.end667:                                        ; preds = %if.end666, %if.end657
  %401 = load i8, ptr %initial_call.addr, align 1, !dbg !7942, !tbaa !2695, !range !2708, !noundef !2709
  %tobool668 = trunc i8 %401 to i1, !dbg !7942
  br i1 %tobool668, label %if.end678, label %land.lhs.true669, !dbg !7942

land.lhs.true669:                                 ; preds = %if.end667
  %402 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7942, !tbaa !2695, !range !2708, !noundef !2709
  %tobool670 = trunc i8 %402 to i1, !dbg !7942
  br i1 %tobool670, label %land.lhs.true672, label %if.end678, !dbg !7942

land.lhs.true672:                                 ; preds = %land.lhs.true669
  %403 = load i8, ptr %cur_opt_valid, align 1, !dbg !7942, !tbaa !2695, !range !2708, !noundef !2709
  %tobool673 = trunc i8 %403 to i1, !dbg !7942
  br i1 %tobool673, label %if.then675, label %if.end678, !dbg !7945

if.then675:                                       ; preds = %land.lhs.true672
  %404 = load i64, ptr %klen, align 8, !dbg !7946, !tbaa !2663
  %conv676 = trunc i64 %404 to i32, !dbg !7946
  %405 = load ptr, ptr %k, align 8, !dbg !7946, !tbaa !2658
  %406 = load i64, ptr %vlen, align 8, !dbg !7946, !tbaa !2663
  %conv677 = trunc i64 %406 to i32, !dbg !7946
  %407 = load ptr, ptr %v, align 8, !dbg !7946, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv676, ptr noundef %405, i32 noundef %conv677, ptr noundef %407), !dbg !7946
  br label %if.end678, !dbg !7946

if.end678:                                        ; preds = %if.then675, %land.lhs.true672, %land.lhs.true669, %if.end667
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end645) #18, !dbg !7918
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv644) #18, !dbg !7918
  br label %cleanup2304

if.end681:                                        ; preds = %land.lhs.true639, %if.end636
  %408 = load i64, ptr %klen, align 8, !dbg !7948, !tbaa !2663
  %cmp682 = icmp eq i64 19, %408, !dbg !7948
  br i1 %cmp682, label %land.lhs.true684, label %if.end700, !dbg !7948

land.lhs.true684:                                 ; preds = %if.end681
  %409 = load ptr, ptr %k, align 8, !dbg !7948, !tbaa !2658
  %410 = load i64, ptr %klen, align 8, !dbg !7948, !tbaa !2663
  %call685 = call i32 @strncmp(ptr noundef @.str.111, ptr noundef %409, i64 noundef %410) #22, !dbg !7948
  %cmp686 = icmp eq i32 %call685, 0, !dbg !7948
  br i1 %cmp686, label %if.then688, label %if.end700, !dbg !7950

if.then688:                                       ; preds = %land.lhs.true684
  %411 = load ptr, ptr %v, align 8, !dbg !7951, !tbaa !2658
  %412 = load i64, ptr %vlen, align 8, !dbg !7953, !tbaa !2663
  call void @init_opt_stats_opts(ptr noundef %411, i64 noundef %412, ptr noundef @opt_stats_interval_opts), !dbg !7954
  %413 = load i8, ptr %initial_call.addr, align 1, !dbg !7955, !tbaa !2695, !range !2708, !noundef !2709
  %tobool689 = trunc i8 %413 to i1, !dbg !7955
  br i1 %tobool689, label %if.end699, label %land.lhs.true690, !dbg !7955

land.lhs.true690:                                 ; preds = %if.then688
  %414 = load i8, ptr @opt_confirm_conf, align 1, !dbg !7955, !tbaa !2695, !range !2708, !noundef !2709
  %tobool691 = trunc i8 %414 to i1, !dbg !7955
  br i1 %tobool691, label %land.lhs.true693, label %if.end699, !dbg !7955

land.lhs.true693:                                 ; preds = %land.lhs.true690
  %415 = load i8, ptr %cur_opt_valid, align 1, !dbg !7955, !tbaa !2695, !range !2708, !noundef !2709
  %tobool694 = trunc i8 %415 to i1, !dbg !7955
  br i1 %tobool694, label %if.then696, label %if.end699, !dbg !7958

if.then696:                                       ; preds = %land.lhs.true693
  %416 = load i64, ptr %klen, align 8, !dbg !7959, !tbaa !2663
  %conv697 = trunc i64 %416 to i32, !dbg !7959
  %417 = load ptr, ptr %k, align 8, !dbg !7959, !tbaa !2658
  %418 = load i64, ptr %vlen, align 8, !dbg !7959, !tbaa !2663
  %conv698 = trunc i64 %418 to i32, !dbg !7959
  %419 = load ptr, ptr %v, align 8, !dbg !7959, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv697, ptr noundef %417, i32 noundef %conv698, ptr noundef %419), !dbg !7959
  br label %if.end699, !dbg !7959

if.end699:                                        ; preds = %if.then696, %land.lhs.true693, %land.lhs.true690, %if.then688
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !7958, !llvm.loop !7444

if.end700:                                        ; preds = %land.lhs.true684, %if.end681
  %420 = load i64, ptr %klen, align 8, !dbg !7961, !tbaa !2663
  %cmp701 = icmp eq i64 4, %420, !dbg !7961
  br i1 %cmp701, label %land.lhs.true703, label %if.end758, !dbg !7961

land.lhs.true703:                                 ; preds = %if.end700
  %421 = load ptr, ptr %k, align 8, !dbg !7961, !tbaa !2658
  %422 = load i64, ptr %klen, align 8, !dbg !7961, !tbaa !2663
  %call704 = call i32 @strncmp(ptr noundef @.str.112, ptr noundef %421, i64 noundef %422) #22, !dbg !7961
  %cmp705 = icmp eq i32 %call704, 0, !dbg !7961
  br i1 %cmp705, label %if.then707, label %if.end758, !dbg !7965

if.then707:                                       ; preds = %land.lhs.true703
  %423 = load i64, ptr %vlen, align 8, !dbg !7966, !tbaa !2663
  %cmp708 = icmp eq i64 4, %423, !dbg !7966
  br i1 %cmp708, label %land.lhs.true710, label %if.else715, !dbg !7966

land.lhs.true710:                                 ; preds = %if.then707
  %424 = load ptr, ptr %v, align 8, !dbg !7966, !tbaa !2658
  %425 = load i64, ptr %vlen, align 8, !dbg !7966, !tbaa !2663
  %call711 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %424, i64 noundef %425) #22, !dbg !7966
  %cmp712 = icmp eq i32 %call711, 0, !dbg !7966
  br i1 %cmp712, label %if.then714, label %if.else715, !dbg !7969

if.then714:                                       ; preds = %land.lhs.true710
  store ptr @.str.90, ptr @opt_junk, align 8, !dbg !7970, !tbaa !2658
  store i8 1, ptr @opt_junk_free, align 1, !dbg !7972, !tbaa !2695
  store i8 1, ptr @opt_junk_alloc, align 1, !dbg !7973, !tbaa !2695
  br label %if.end746, !dbg !7974

if.else715:                                       ; preds = %land.lhs.true710, %if.then707
  %426 = load i64, ptr %vlen, align 8, !dbg !7975, !tbaa !2663
  %cmp716 = icmp eq i64 5, %426, !dbg !7975
  br i1 %cmp716, label %land.lhs.true718, label %if.else723, !dbg !7975

land.lhs.true718:                                 ; preds = %if.else715
  %427 = load ptr, ptr %v, align 8, !dbg !7975, !tbaa !2658
  %428 = load i64, ptr %vlen, align 8, !dbg !7975, !tbaa !2663
  %call719 = call i32 @strncmp(ptr noundef @.str, ptr noundef %427, i64 noundef %428) #22, !dbg !7975
  %cmp720 = icmp eq i32 %call719, 0, !dbg !7975
  br i1 %cmp720, label %if.then722, label %if.else723, !dbg !7977

if.then722:                                       ; preds = %land.lhs.true718
  store ptr @.str, ptr @opt_junk, align 8, !dbg !7978, !tbaa !2658
  store i8 0, ptr @opt_junk_free, align 1, !dbg !7980, !tbaa !2695
  store i8 0, ptr @opt_junk_alloc, align 1, !dbg !7981, !tbaa !2695
  br label %if.end745, !dbg !7982

if.else723:                                       ; preds = %land.lhs.true718, %if.else715
  %429 = load i64, ptr %vlen, align 8, !dbg !7983, !tbaa !2663
  %cmp724 = icmp eq i64 5, %429, !dbg !7983
  br i1 %cmp724, label %land.lhs.true726, label %if.else731, !dbg !7983

land.lhs.true726:                                 ; preds = %if.else723
  %430 = load ptr, ptr %v, align 8, !dbg !7983, !tbaa !2658
  %431 = load i64, ptr %vlen, align 8, !dbg !7983, !tbaa !2663
  %call727 = call i32 @strncmp(ptr noundef @.str.1, ptr noundef %430, i64 noundef %431) #22, !dbg !7983
  %cmp728 = icmp eq i32 %call727, 0, !dbg !7983
  br i1 %cmp728, label %if.then730, label %if.else731, !dbg !7985

if.then730:                                       ; preds = %land.lhs.true726
  store ptr @.str.1, ptr @opt_junk, align 8, !dbg !7986, !tbaa !2658
  store i8 1, ptr @opt_junk_alloc, align 1, !dbg !7988, !tbaa !2695
  store i8 0, ptr @opt_junk_free, align 1, !dbg !7989, !tbaa !2695
  br label %if.end744, !dbg !7990

if.else731:                                       ; preds = %land.lhs.true726, %if.else723
  %432 = load i64, ptr %vlen, align 8, !dbg !7991, !tbaa !2663
  %cmp732 = icmp eq i64 4, %432, !dbg !7991
  br i1 %cmp732, label %land.lhs.true734, label %if.else739, !dbg !7991

land.lhs.true734:                                 ; preds = %if.else731
  %433 = load ptr, ptr %v, align 8, !dbg !7991, !tbaa !2658
  %434 = load i64, ptr %vlen, align 8, !dbg !7991, !tbaa !2663
  %call735 = call i32 @strncmp(ptr noundef @.str.2, ptr noundef %433, i64 noundef %434) #22, !dbg !7991
  %cmp736 = icmp eq i32 %call735, 0, !dbg !7991
  br i1 %cmp736, label %if.then738, label %if.else739, !dbg !7993

if.then738:                                       ; preds = %land.lhs.true734
  store ptr @.str.2, ptr @opt_junk, align 8, !dbg !7994, !tbaa !2658
  store i8 0, ptr @opt_junk_alloc, align 1, !dbg !7996, !tbaa !2695
  store i8 1, ptr @opt_junk_free, align 1, !dbg !7997, !tbaa !2695
  br label %if.end743, !dbg !7998

if.else739:                                       ; preds = %land.lhs.true734, %if.else731
  %435 = load i8, ptr %initial_call.addr, align 1, !dbg !7999, !tbaa !2695, !range !2708, !noundef !2709
  %tobool740 = trunc i8 %435 to i1, !dbg !7999
  br i1 %tobool740, label %if.end742, label %if.then741, !dbg !8002

if.then741:                                       ; preds = %if.else739
  %436 = load ptr, ptr %k, align 8, !dbg !8003, !tbaa !2658
  %437 = load i64, ptr %klen, align 8, !dbg !8003, !tbaa !2663
  %438 = load ptr, ptr %v, align 8, !dbg !8003, !tbaa !2658
  %439 = load i64, ptr %vlen, align 8, !dbg !8003, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %436, i64 noundef %437, ptr noundef %438, i64 noundef %439), !dbg !8003
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8003, !tbaa !2695
  br label %if.end742, !dbg !8003

if.end742:                                        ; preds = %if.then741, %if.else739
  br label %if.end743

if.end743:                                        ; preds = %if.end742, %if.then738
  br label %if.end744

if.end744:                                        ; preds = %if.end743, %if.then730
  br label %if.end745

if.end745:                                        ; preds = %if.end744, %if.then722
  br label %if.end746

if.end746:                                        ; preds = %if.end745, %if.then714
  %440 = load i8, ptr %initial_call.addr, align 1, !dbg !8005, !tbaa !2695, !range !2708, !noundef !2709
  %tobool747 = trunc i8 %440 to i1, !dbg !8005
  br i1 %tobool747, label %if.end757, label %land.lhs.true748, !dbg !8005

land.lhs.true748:                                 ; preds = %if.end746
  %441 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8005, !tbaa !2695, !range !2708, !noundef !2709
  %tobool749 = trunc i8 %441 to i1, !dbg !8005
  br i1 %tobool749, label %land.lhs.true751, label %if.end757, !dbg !8005

land.lhs.true751:                                 ; preds = %land.lhs.true748
  %442 = load i8, ptr %cur_opt_valid, align 1, !dbg !8005, !tbaa !2695, !range !2708, !noundef !2709
  %tobool752 = trunc i8 %442 to i1, !dbg !8005
  br i1 %tobool752, label %if.then754, label %if.end757, !dbg !8008

if.then754:                                       ; preds = %land.lhs.true751
  %443 = load i64, ptr %klen, align 8, !dbg !8009, !tbaa !2663
  %conv755 = trunc i64 %443 to i32, !dbg !8009
  %444 = load ptr, ptr %k, align 8, !dbg !8009, !tbaa !2658
  %445 = load i64, ptr %vlen, align 8, !dbg !8009, !tbaa !2663
  %conv756 = trunc i64 %445 to i32, !dbg !8009
  %446 = load ptr, ptr %v, align 8, !dbg !8009, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv755, ptr noundef %444, i32 noundef %conv756, ptr noundef %446), !dbg !8009
  br label %if.end757, !dbg !8009

if.end757:                                        ; preds = %if.then754, %land.lhs.true751, %land.lhs.true748, %if.end746
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8008, !llvm.loop !7444

if.end758:                                        ; preds = %land.lhs.true703, %if.end700
  %447 = load i64, ptr %klen, align 8, !dbg !8011, !tbaa !2663
  %cmp759 = icmp eq i64 4, %447, !dbg !8011
  br i1 %cmp759, label %land.lhs.true761, label %if.end798, !dbg !8011

land.lhs.true761:                                 ; preds = %if.end758
  %448 = load ptr, ptr %k, align 8, !dbg !8011, !tbaa !2658
  %449 = load i64, ptr %klen, align 8, !dbg !8011, !tbaa !2663
  %call762 = call i32 @strncmp(ptr noundef @.str.113, ptr noundef %448, i64 noundef %449) #22, !dbg !8011
  %cmp763 = icmp eq i32 %call762, 0, !dbg !8011
  br i1 %cmp763, label %if.then765, label %if.end798, !dbg !8013

if.then765:                                       ; preds = %land.lhs.true761
  %450 = load i64, ptr %vlen, align 8, !dbg !8014, !tbaa !2663
  %cmp766 = icmp eq i64 4, %450, !dbg !8014
  br i1 %cmp766, label %land.lhs.true768, label %if.else773, !dbg !8014

land.lhs.true768:                                 ; preds = %if.then765
  %451 = load ptr, ptr %v, align 8, !dbg !8014, !tbaa !2658
  %452 = load i64, ptr %vlen, align 8, !dbg !8014, !tbaa !2663
  %call769 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %451, i64 noundef %452) #22, !dbg !8014
  %cmp770 = icmp eq i32 %call769, 0, !dbg !8014
  br i1 %cmp770, label %if.then772, label %if.else773, !dbg !8017

if.then772:                                       ; preds = %land.lhs.true768
  store i8 1, ptr @opt_zero, align 1, !dbg !8018, !tbaa !2695
  br label %if.end786, !dbg !8018

if.else773:                                       ; preds = %land.lhs.true768, %if.then765
  %453 = load i64, ptr %vlen, align 8, !dbg !8020, !tbaa !2663
  %cmp774 = icmp eq i64 5, %453, !dbg !8020
  br i1 %cmp774, label %land.lhs.true776, label %if.else781, !dbg !8020

land.lhs.true776:                                 ; preds = %if.else773
  %454 = load ptr, ptr %v, align 8, !dbg !8020, !tbaa !2658
  %455 = load i64, ptr %vlen, align 8, !dbg !8020, !tbaa !2663
  %call777 = call i32 @strncmp(ptr noundef @.str, ptr noundef %454, i64 noundef %455) #22, !dbg !8020
  %cmp778 = icmp eq i32 %call777, 0, !dbg !8020
  br i1 %cmp778, label %if.then780, label %if.else781, !dbg !8014

if.then780:                                       ; preds = %land.lhs.true776
  store i8 0, ptr @opt_zero, align 1, !dbg !8022, !tbaa !2695
  br label %if.end785, !dbg !8022

if.else781:                                       ; preds = %land.lhs.true776, %if.else773
  %456 = load i8, ptr %initial_call.addr, align 1, !dbg !8024, !tbaa !2695, !range !2708, !noundef !2709
  %tobool782 = trunc i8 %456 to i1, !dbg !8024
  br i1 %tobool782, label %if.end784, label %if.then783, !dbg !8027

if.then783:                                       ; preds = %if.else781
  %457 = load ptr, ptr %k, align 8, !dbg !8028, !tbaa !2658
  %458 = load i64, ptr %klen, align 8, !dbg !8028, !tbaa !2663
  %459 = load ptr, ptr %v, align 8, !dbg !8028, !tbaa !2658
  %460 = load i64, ptr %vlen, align 8, !dbg !8028, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %457, i64 noundef %458, ptr noundef %459, i64 noundef %460), !dbg !8028
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8028, !tbaa !2695
  br label %if.end784, !dbg !8028

if.end784:                                        ; preds = %if.then783, %if.else781
  br label %if.end785

if.end785:                                        ; preds = %if.end784, %if.then780
  br label %if.end786

if.end786:                                        ; preds = %if.end785, %if.then772
  %461 = load i8, ptr %initial_call.addr, align 1, !dbg !8030, !tbaa !2695, !range !2708, !noundef !2709
  %tobool787 = trunc i8 %461 to i1, !dbg !8030
  br i1 %tobool787, label %if.end797, label %land.lhs.true788, !dbg !8030

land.lhs.true788:                                 ; preds = %if.end786
  %462 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8030, !tbaa !2695, !range !2708, !noundef !2709
  %tobool789 = trunc i8 %462 to i1, !dbg !8030
  br i1 %tobool789, label %land.lhs.true791, label %if.end797, !dbg !8030

land.lhs.true791:                                 ; preds = %land.lhs.true788
  %463 = load i8, ptr %cur_opt_valid, align 1, !dbg !8030, !tbaa !2695, !range !2708, !noundef !2709
  %tobool792 = trunc i8 %463 to i1, !dbg !8030
  br i1 %tobool792, label %if.then794, label %if.end797, !dbg !8033

if.then794:                                       ; preds = %land.lhs.true791
  %464 = load i64, ptr %klen, align 8, !dbg !8034, !tbaa !2663
  %conv795 = trunc i64 %464 to i32, !dbg !8034
  %465 = load ptr, ptr %k, align 8, !dbg !8034, !tbaa !2658
  %466 = load i64, ptr %vlen, align 8, !dbg !8034, !tbaa !2663
  %conv796 = trunc i64 %466 to i32, !dbg !8034
  %467 = load ptr, ptr %v, align 8, !dbg !8034, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv795, ptr noundef %465, i32 noundef %conv796, ptr noundef %467), !dbg !8034
  br label %if.end797, !dbg !8034

if.end797:                                        ; preds = %if.then794, %land.lhs.true791, %land.lhs.true788, %if.end786
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8033, !llvm.loop !7444

if.end798:                                        ; preds = %land.lhs.true761, %if.end758
  %468 = load i64, ptr %klen, align 8, !dbg !8036, !tbaa !2663
  %cmp799 = icmp eq i64 27, %468, !dbg !8036
  br i1 %cmp799, label %land.lhs.true801, label %if.end838, !dbg !8036

land.lhs.true801:                                 ; preds = %if.end798
  %469 = load ptr, ptr %k, align 8, !dbg !8036, !tbaa !2658
  %470 = load i64, ptr %klen, align 8, !dbg !8036, !tbaa !2663
  %call802 = call i32 @strncmp(ptr noundef @.str.114, ptr noundef %469, i64 noundef %470) #22, !dbg !8036
  %cmp803 = icmp eq i32 %call802, 0, !dbg !8036
  br i1 %cmp803, label %if.then805, label %if.end838, !dbg !8040

if.then805:                                       ; preds = %land.lhs.true801
  %471 = load i64, ptr %vlen, align 8, !dbg !8041, !tbaa !2663
  %cmp806 = icmp eq i64 4, %471, !dbg !8041
  br i1 %cmp806, label %land.lhs.true808, label %if.else813, !dbg !8041

land.lhs.true808:                                 ; preds = %if.then805
  %472 = load ptr, ptr %v, align 8, !dbg !8041, !tbaa !2658
  %473 = load i64, ptr %vlen, align 8, !dbg !8041, !tbaa !2663
  %call809 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %472, i64 noundef %473) #22, !dbg !8041
  %cmp810 = icmp eq i32 %call809, 0, !dbg !8041
  br i1 %cmp810, label %if.then812, label %if.else813, !dbg !8044

if.then812:                                       ; preds = %land.lhs.true808
  store i8 1, ptr @opt_experimental_infallible_new, align 1, !dbg !8045, !tbaa !2695
  br label %if.end826, !dbg !8045

if.else813:                                       ; preds = %land.lhs.true808, %if.then805
  %474 = load i64, ptr %vlen, align 8, !dbg !8047, !tbaa !2663
  %cmp814 = icmp eq i64 5, %474, !dbg !8047
  br i1 %cmp814, label %land.lhs.true816, label %if.else821, !dbg !8047

land.lhs.true816:                                 ; preds = %if.else813
  %475 = load ptr, ptr %v, align 8, !dbg !8047, !tbaa !2658
  %476 = load i64, ptr %vlen, align 8, !dbg !8047, !tbaa !2663
  %call817 = call i32 @strncmp(ptr noundef @.str, ptr noundef %475, i64 noundef %476) #22, !dbg !8047
  %cmp818 = icmp eq i32 %call817, 0, !dbg !8047
  br i1 %cmp818, label %if.then820, label %if.else821, !dbg !8041

if.then820:                                       ; preds = %land.lhs.true816
  store i8 0, ptr @opt_experimental_infallible_new, align 1, !dbg !8049, !tbaa !2695
  br label %if.end825, !dbg !8049

if.else821:                                       ; preds = %land.lhs.true816, %if.else813
  %477 = load i8, ptr %initial_call.addr, align 1, !dbg !8051, !tbaa !2695, !range !2708, !noundef !2709
  %tobool822 = trunc i8 %477 to i1, !dbg !8051
  br i1 %tobool822, label %if.end824, label %if.then823, !dbg !8054

if.then823:                                       ; preds = %if.else821
  %478 = load ptr, ptr %k, align 8, !dbg !8055, !tbaa !2658
  %479 = load i64, ptr %klen, align 8, !dbg !8055, !tbaa !2663
  %480 = load ptr, ptr %v, align 8, !dbg !8055, !tbaa !2658
  %481 = load i64, ptr %vlen, align 8, !dbg !8055, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %478, i64 noundef %479, ptr noundef %480, i64 noundef %481), !dbg !8055
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8055, !tbaa !2695
  br label %if.end824, !dbg !8055

if.end824:                                        ; preds = %if.then823, %if.else821
  br label %if.end825

if.end825:                                        ; preds = %if.end824, %if.then820
  br label %if.end826

if.end826:                                        ; preds = %if.end825, %if.then812
  %482 = load i8, ptr %initial_call.addr, align 1, !dbg !8057, !tbaa !2695, !range !2708, !noundef !2709
  %tobool827 = trunc i8 %482 to i1, !dbg !8057
  br i1 %tobool827, label %if.end837, label %land.lhs.true828, !dbg !8057

land.lhs.true828:                                 ; preds = %if.end826
  %483 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8057, !tbaa !2695, !range !2708, !noundef !2709
  %tobool829 = trunc i8 %483 to i1, !dbg !8057
  br i1 %tobool829, label %land.lhs.true831, label %if.end837, !dbg !8057

land.lhs.true831:                                 ; preds = %land.lhs.true828
  %484 = load i8, ptr %cur_opt_valid, align 1, !dbg !8057, !tbaa !2695, !range !2708, !noundef !2709
  %tobool832 = trunc i8 %484 to i1, !dbg !8057
  br i1 %tobool832, label %if.then834, label %if.end837, !dbg !8060

if.then834:                                       ; preds = %land.lhs.true831
  %485 = load i64, ptr %klen, align 8, !dbg !8061, !tbaa !2663
  %conv835 = trunc i64 %485 to i32, !dbg !8061
  %486 = load ptr, ptr %k, align 8, !dbg !8061, !tbaa !2658
  %487 = load i64, ptr %vlen, align 8, !dbg !8061, !tbaa !2663
  %conv836 = trunc i64 %487 to i32, !dbg !8061
  %488 = load ptr, ptr %v, align 8, !dbg !8061, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv835, ptr noundef %486, i32 noundef %conv836, ptr noundef %488), !dbg !8061
  br label %if.end837, !dbg !8061

if.end837:                                        ; preds = %if.then834, %land.lhs.true831, %land.lhs.true828, %if.end826
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8060, !llvm.loop !7444

if.end838:                                        ; preds = %land.lhs.true801, %if.end798
  %489 = load i64, ptr %klen, align 8, !dbg !8063, !tbaa !2663
  %cmp839 = icmp eq i64 6, %489, !dbg !8063
  br i1 %cmp839, label %land.lhs.true841, label %if.end878, !dbg !8063

land.lhs.true841:                                 ; preds = %if.end838
  %490 = load ptr, ptr %k, align 8, !dbg !8063, !tbaa !2658
  %491 = load i64, ptr %klen, align 8, !dbg !8063, !tbaa !2663
  %call842 = call i32 @strncmp(ptr noundef @.str.115, ptr noundef %490, i64 noundef %491) #22, !dbg !8063
  %cmp843 = icmp eq i32 %call842, 0, !dbg !8063
  br i1 %cmp843, label %if.then845, label %if.end878, !dbg !8065

if.then845:                                       ; preds = %land.lhs.true841
  %492 = load i64, ptr %vlen, align 8, !dbg !8066, !tbaa !2663
  %cmp846 = icmp eq i64 4, %492, !dbg !8066
  br i1 %cmp846, label %land.lhs.true848, label %if.else853, !dbg !8066

land.lhs.true848:                                 ; preds = %if.then845
  %493 = load ptr, ptr %v, align 8, !dbg !8066, !tbaa !2658
  %494 = load i64, ptr %vlen, align 8, !dbg !8066, !tbaa !2663
  %call849 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %493, i64 noundef %494) #22, !dbg !8066
  %cmp850 = icmp eq i32 %call849, 0, !dbg !8066
  br i1 %cmp850, label %if.then852, label %if.else853, !dbg !8069

if.then852:                                       ; preds = %land.lhs.true848
  store i8 1, ptr @opt_tcache, align 1, !dbg !8070, !tbaa !2695
  br label %if.end866, !dbg !8070

if.else853:                                       ; preds = %land.lhs.true848, %if.then845
  %495 = load i64, ptr %vlen, align 8, !dbg !8072, !tbaa !2663
  %cmp854 = icmp eq i64 5, %495, !dbg !8072
  br i1 %cmp854, label %land.lhs.true856, label %if.else861, !dbg !8072

land.lhs.true856:                                 ; preds = %if.else853
  %496 = load ptr, ptr %v, align 8, !dbg !8072, !tbaa !2658
  %497 = load i64, ptr %vlen, align 8, !dbg !8072, !tbaa !2663
  %call857 = call i32 @strncmp(ptr noundef @.str, ptr noundef %496, i64 noundef %497) #22, !dbg !8072
  %cmp858 = icmp eq i32 %call857, 0, !dbg !8072
  br i1 %cmp858, label %if.then860, label %if.else861, !dbg !8066

if.then860:                                       ; preds = %land.lhs.true856
  store i8 0, ptr @opt_tcache, align 1, !dbg !8074, !tbaa !2695
  br label %if.end865, !dbg !8074

if.else861:                                       ; preds = %land.lhs.true856, %if.else853
  %498 = load i8, ptr %initial_call.addr, align 1, !dbg !8076, !tbaa !2695, !range !2708, !noundef !2709
  %tobool862 = trunc i8 %498 to i1, !dbg !8076
  br i1 %tobool862, label %if.end864, label %if.then863, !dbg !8079

if.then863:                                       ; preds = %if.else861
  %499 = load ptr, ptr %k, align 8, !dbg !8080, !tbaa !2658
  %500 = load i64, ptr %klen, align 8, !dbg !8080, !tbaa !2663
  %501 = load ptr, ptr %v, align 8, !dbg !8080, !tbaa !2658
  %502 = load i64, ptr %vlen, align 8, !dbg !8080, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %499, i64 noundef %500, ptr noundef %501, i64 noundef %502), !dbg !8080
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8080, !tbaa !2695
  br label %if.end864, !dbg !8080

if.end864:                                        ; preds = %if.then863, %if.else861
  br label %if.end865

if.end865:                                        ; preds = %if.end864, %if.then860
  br label %if.end866

if.end866:                                        ; preds = %if.end865, %if.then852
  %503 = load i8, ptr %initial_call.addr, align 1, !dbg !8082, !tbaa !2695, !range !2708, !noundef !2709
  %tobool867 = trunc i8 %503 to i1, !dbg !8082
  br i1 %tobool867, label %if.end877, label %land.lhs.true868, !dbg !8082

land.lhs.true868:                                 ; preds = %if.end866
  %504 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8082, !tbaa !2695, !range !2708, !noundef !2709
  %tobool869 = trunc i8 %504 to i1, !dbg !8082
  br i1 %tobool869, label %land.lhs.true871, label %if.end877, !dbg !8082

land.lhs.true871:                                 ; preds = %land.lhs.true868
  %505 = load i8, ptr %cur_opt_valid, align 1, !dbg !8082, !tbaa !2695, !range !2708, !noundef !2709
  %tobool872 = trunc i8 %505 to i1, !dbg !8082
  br i1 %tobool872, label %if.then874, label %if.end877, !dbg !8085

if.then874:                                       ; preds = %land.lhs.true871
  %506 = load i64, ptr %klen, align 8, !dbg !8086, !tbaa !2663
  %conv875 = trunc i64 %506 to i32, !dbg !8086
  %507 = load ptr, ptr %k, align 8, !dbg !8086, !tbaa !2658
  %508 = load i64, ptr %vlen, align 8, !dbg !8086, !tbaa !2663
  %conv876 = trunc i64 %508 to i32, !dbg !8086
  %509 = load ptr, ptr %v, align 8, !dbg !8086, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv875, ptr noundef %507, i32 noundef %conv876, ptr noundef %509), !dbg !8086
  br label %if.end877, !dbg !8086

if.end877:                                        ; preds = %if.then874, %land.lhs.true871, %land.lhs.true868, %if.end866
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8085, !llvm.loop !7444

if.end878:                                        ; preds = %land.lhs.true841, %if.end838
  %510 = load i64, ptr %klen, align 8, !dbg !8088, !tbaa !2663
  %cmp879 = icmp eq i64 10, %510, !dbg !8088
  br i1 %cmp879, label %land.lhs.true881, label %if.end920, !dbg !8088

land.lhs.true881:                                 ; preds = %if.end878
  %511 = load ptr, ptr %k, align 8, !dbg !8088, !tbaa !2658
  %512 = load i64, ptr %klen, align 8, !dbg !8088, !tbaa !2663
  %call882 = call i32 @strncmp(ptr noundef @.str.116, ptr noundef %511, i64 noundef %512) #22, !dbg !8088
  %cmp883 = icmp eq i32 %call882, 0, !dbg !8088
  br i1 %cmp883, label %if.then885, label %if.end920, !dbg !8089

if.then885:                                       ; preds = %land.lhs.true881
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv886) #18, !dbg !8090
  tail call void @llvm.dbg.declare(metadata ptr %mv886, metadata !2227, metadata !DIExpression()), !dbg !8090
  call void @llvm.lifetime.start.p0(i64 8, ptr %end887) #18, !dbg !8090
  tail call void @llvm.dbg.declare(metadata ptr %end887, metadata !2230, metadata !DIExpression()), !dbg !8090
  call void @set_errno(i32 noundef 0), !dbg !8090
  %513 = load ptr, ptr %v, align 8, !dbg !8090, !tbaa !2658
  %call888 = call i64 @malloc_strtoumax(ptr noundef %513, ptr noundef %end887, i32 noundef 0), !dbg !8090
  store i64 %call888, ptr %mv886, align 8, !dbg !8090, !tbaa !2663
  %call889 = call i32 @get_errno(), !dbg !8091
  %cmp890 = icmp ne i32 %call889, 0, !dbg !8091
  br i1 %cmp890, label %if.then896, label %lor.lhs.false892, !dbg !8091

lor.lhs.false892:                                 ; preds = %if.then885
  %514 = load ptr, ptr %end887, align 8, !dbg !8091, !tbaa !2658
  %515 = ptrtoint ptr %514 to i64, !dbg !8091
  %516 = load ptr, ptr %v, align 8, !dbg !8091, !tbaa !2658
  %517 = ptrtoint ptr %516 to i64, !dbg !8091
  %sub893 = sub i64 %515, %517, !dbg !8091
  %518 = load i64, ptr %vlen, align 8, !dbg !8091, !tbaa !2663
  %cmp894 = icmp ne i64 %sub893, %518, !dbg !8091
  br i1 %cmp894, label %if.then896, label %if.else900, !dbg !8090

if.then896:                                       ; preds = %lor.lhs.false892, %if.then885
  %519 = load i8, ptr %initial_call.addr, align 1, !dbg !8093, !tbaa !2695, !range !2708, !noundef !2709
  %tobool897 = trunc i8 %519 to i1, !dbg !8093
  br i1 %tobool897, label %if.end899, label %if.then898, !dbg !8096

if.then898:                                       ; preds = %if.then896
  %520 = load ptr, ptr %k, align 8, !dbg !8097, !tbaa !2658
  %521 = load i64, ptr %klen, align 8, !dbg !8097, !tbaa !2663
  %522 = load ptr, ptr %v, align 8, !dbg !8097, !tbaa !2658
  %523 = load i64, ptr %vlen, align 8, !dbg !8097, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %520, i64 noundef %521, ptr noundef %522, i64 noundef %523), !dbg !8097
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8097, !tbaa !2695
  br label %if.end899, !dbg !8097

if.end899:                                        ; preds = %if.then898, %if.then896
  br label %if.end906, !dbg !8096

if.else900:                                       ; preds = %lor.lhs.false892
  %524 = load i64, ptr %mv886, align 8, !dbg !8099, !tbaa !2663
  %cmp901 = icmp ugt i64 %524, 8388608, !dbg !8099
  br i1 %cmp901, label %if.then903, label %if.else904, !dbg !8104

if.then903:                                       ; preds = %if.else900
  store i64 8388608, ptr @opt_tcache_max, align 8, !dbg !8105, !tbaa !2663
  br label %if.end905, !dbg !8105

if.else904:                                       ; preds = %if.else900
  %525 = load i64, ptr %mv886, align 8, !dbg !8107, !tbaa !2663
  store i64 %525, ptr @opt_tcache_max, align 8, !dbg !8107, !tbaa !2663
  br label %if.end905

if.end905:                                        ; preds = %if.else904, %if.then903
  br label %if.end906

if.end906:                                        ; preds = %if.end905, %if.end899
  %526 = load i8, ptr %initial_call.addr, align 1, !dbg !8109, !tbaa !2695, !range !2708, !noundef !2709
  %tobool907 = trunc i8 %526 to i1, !dbg !8109
  br i1 %tobool907, label %if.end917, label %land.lhs.true908, !dbg !8109

land.lhs.true908:                                 ; preds = %if.end906
  %527 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8109, !tbaa !2695, !range !2708, !noundef !2709
  %tobool909 = trunc i8 %527 to i1, !dbg !8109
  br i1 %tobool909, label %land.lhs.true911, label %if.end917, !dbg !8109

land.lhs.true911:                                 ; preds = %land.lhs.true908
  %528 = load i8, ptr %cur_opt_valid, align 1, !dbg !8109, !tbaa !2695, !range !2708, !noundef !2709
  %tobool912 = trunc i8 %528 to i1, !dbg !8109
  br i1 %tobool912, label %if.then914, label %if.end917, !dbg !8112

if.then914:                                       ; preds = %land.lhs.true911
  %529 = load i64, ptr %klen, align 8, !dbg !8113, !tbaa !2663
  %conv915 = trunc i64 %529 to i32, !dbg !8113
  %530 = load ptr, ptr %k, align 8, !dbg !8113, !tbaa !2658
  %531 = load i64, ptr %vlen, align 8, !dbg !8113, !tbaa !2663
  %conv916 = trunc i64 %531 to i32, !dbg !8113
  %532 = load ptr, ptr %v, align 8, !dbg !8113, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv915, ptr noundef %530, i32 noundef %conv916, ptr noundef %532), !dbg !8113
  br label %if.end917, !dbg !8113

if.end917:                                        ; preds = %if.then914, %land.lhs.true911, %land.lhs.true908, %if.end906
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end887) #18, !dbg !8088
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv886) #18, !dbg !8088
  br label %cleanup2304

if.end920:                                        ; preds = %land.lhs.true881, %if.end878
  %533 = load i64, ptr %klen, align 8, !dbg !8115, !tbaa !2663
  %cmp921 = icmp eq i64 13, %533, !dbg !8115
  br i1 %cmp921, label %land.lhs.true923, label %if.end961, !dbg !8115

land.lhs.true923:                                 ; preds = %if.end920
  %534 = load ptr, ptr %k, align 8, !dbg !8115, !tbaa !2658
  %535 = load i64, ptr %klen, align 8, !dbg !8115, !tbaa !2663
  %call924 = call i32 @strncmp(ptr noundef @.str.117, ptr noundef %534, i64 noundef %535) #22, !dbg !8115
  %cmp925 = icmp eq i32 %call924, 0, !dbg !8115
  br i1 %cmp925, label %if.then927, label %if.end961, !dbg !8116

if.then927:                                       ; preds = %land.lhs.true923
  call void @llvm.lifetime.start.p0(i64 8, ptr %m928) #18, !dbg !8117
  tail call void @llvm.dbg.declare(metadata ptr %m928, metadata !2231, metadata !DIExpression()), !dbg !8118
  call void @llvm.lifetime.start.p0(i64 8, ptr %end929) #18, !dbg !8119
  tail call void @llvm.dbg.declare(metadata ptr %end929, metadata !2234, metadata !DIExpression()), !dbg !8119
  call void @set_errno(i32 noundef 0), !dbg !8119
  %536 = load ptr, ptr %v, align 8, !dbg !8119, !tbaa !2658
  %call930 = call i64 @malloc_strtoumax(ptr noundef %536, ptr noundef %end929, i32 noundef 0), !dbg !8119
  store i64 %call930, ptr %m928, align 8, !dbg !8119, !tbaa !2663
  %call931 = call i32 @get_errno(), !dbg !8120
  %cmp932 = icmp ne i32 %call931, 0, !dbg !8120
  br i1 %cmp932, label %if.then938, label %lor.lhs.false934, !dbg !8120

lor.lhs.false934:                                 ; preds = %if.then927
  %537 = load ptr, ptr %end929, align 8, !dbg !8120, !tbaa !2658
  %538 = ptrtoint ptr %537 to i64, !dbg !8120
  %539 = load ptr, ptr %v, align 8, !dbg !8120, !tbaa !2658
  %540 = ptrtoint ptr %539 to i64, !dbg !8120
  %sub935 = sub i64 %538, %540, !dbg !8120
  %541 = load i64, ptr %vlen, align 8, !dbg !8120, !tbaa !2663
  %cmp936 = icmp ne i64 %sub935, %541, !dbg !8120
  br i1 %cmp936, label %if.then938, label %if.else942, !dbg !8122

if.then938:                                       ; preds = %lor.lhs.false934, %if.then927
  %542 = load i8, ptr %initial_call.addr, align 1, !dbg !8123, !tbaa !2695, !range !2708, !noundef !2709
  %tobool939 = trunc i8 %542 to i1, !dbg !8123
  br i1 %tobool939, label %if.end941, label %if.then940, !dbg !8126

if.then940:                                       ; preds = %if.then938
  %543 = load ptr, ptr %k, align 8, !dbg !8127, !tbaa !2658
  %544 = load i64, ptr %klen, align 8, !dbg !8127, !tbaa !2663
  %545 = load ptr, ptr %v, align 8, !dbg !8127, !tbaa !2658
  %546 = load i64, ptr %vlen, align 8, !dbg !8127, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %543, i64 noundef %544, ptr noundef %545, i64 noundef %546), !dbg !8127
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8127, !tbaa !2695
  br label %if.end941, !dbg !8127

if.end941:                                        ; preds = %if.then940, %if.then938
  br label %if.end947, !dbg !8129

if.else942:                                       ; preds = %lor.lhs.false934
  %547 = load i64, ptr %m928, align 8, !dbg !8130, !tbaa !2663
  %cmp943 = icmp ugt i64 %547, 23, !dbg !8133
  br i1 %cmp943, label %if.then945, label %if.end946, !dbg !8134

if.then945:                                       ; preds = %if.else942
  store i64 23, ptr %m928, align 8, !dbg !8135, !tbaa !2663
  br label %if.end946, !dbg !8137

if.end946:                                        ; preds = %if.then945, %if.else942
  %548 = load i64, ptr %m928, align 8, !dbg !8138, !tbaa !2663
  %shl = shl i64 1, %548, !dbg !8139
  store i64 %shl, ptr @opt_tcache_max, align 8, !dbg !8140, !tbaa !2663
  br label %if.end947

if.end947:                                        ; preds = %if.end946, %if.end941
  %549 = load i8, ptr %initial_call.addr, align 1, !dbg !8141, !tbaa !2695, !range !2708, !noundef !2709
  %tobool948 = trunc i8 %549 to i1, !dbg !8141
  br i1 %tobool948, label %if.end958, label %land.lhs.true949, !dbg !8141

land.lhs.true949:                                 ; preds = %if.end947
  %550 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8141, !tbaa !2695, !range !2708, !noundef !2709
  %tobool950 = trunc i8 %550 to i1, !dbg !8141
  br i1 %tobool950, label %land.lhs.true952, label %if.end958, !dbg !8141

land.lhs.true952:                                 ; preds = %land.lhs.true949
  %551 = load i8, ptr %cur_opt_valid, align 1, !dbg !8141, !tbaa !2695, !range !2708, !noundef !2709
  %tobool953 = trunc i8 %551 to i1, !dbg !8141
  br i1 %tobool953, label %if.then955, label %if.end958, !dbg !8144

if.then955:                                       ; preds = %land.lhs.true952
  %552 = load i64, ptr %klen, align 8, !dbg !8145, !tbaa !2663
  %conv956 = trunc i64 %552 to i32, !dbg !8145
  %553 = load ptr, ptr %k, align 8, !dbg !8145, !tbaa !2658
  %554 = load i64, ptr %vlen, align 8, !dbg !8145, !tbaa !2663
  %conv957 = trunc i64 %554 to i32, !dbg !8145
  %555 = load ptr, ptr %v, align 8, !dbg !8145, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv956, ptr noundef %553, i32 noundef %conv957, ptr noundef %555), !dbg !8145
  br label %if.end958, !dbg !8145

if.end958:                                        ; preds = %if.then955, %land.lhs.true952, %land.lhs.true949, %if.end947
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end929) #18, !dbg !8147
  call void @llvm.lifetime.end.p0(i64 8, ptr %m928) #18, !dbg !8147
  br label %cleanup2304

if.end961:                                        ; preds = %land.lhs.true923, %if.end920
  %556 = load i64, ptr %klen, align 8, !dbg !8148, !tbaa !2663
  %cmp962 = icmp eq i64 20, %556, !dbg !8148
  br i1 %cmp962, label %land.lhs.true964, label %if.end1009, !dbg !8148

land.lhs.true964:                                 ; preds = %if.end961
  %557 = load ptr, ptr %k, align 8, !dbg !8148, !tbaa !2658
  %558 = load i64, ptr %klen, align 8, !dbg !8148, !tbaa !2663
  %call965 = call i32 @strncmp(ptr noundef @.str.118, ptr noundef %557, i64 noundef %558) #22, !dbg !8148
  %cmp966 = icmp eq i32 %call965, 0, !dbg !8148
  br i1 %cmp966, label %if.then968, label %if.end1009, !dbg !8149

if.then968:                                       ; preds = %land.lhs.true964
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv969) #18, !dbg !8150
  tail call void @llvm.dbg.declare(metadata ptr %mv969, metadata !2235, metadata !DIExpression()), !dbg !8150
  call void @llvm.lifetime.start.p0(i64 8, ptr %end970) #18, !dbg !8150
  tail call void @llvm.dbg.declare(metadata ptr %end970, metadata !2238, metadata !DIExpression()), !dbg !8150
  call void @set_errno(i32 noundef 0), !dbg !8150
  %559 = load ptr, ptr %v, align 8, !dbg !8150, !tbaa !2658
  %call971 = call i64 @malloc_strtoumax(ptr noundef %559, ptr noundef %end970, i32 noundef 0), !dbg !8150
  store i64 %call971, ptr %mv969, align 8, !dbg !8150, !tbaa !2663
  %call972 = call i32 @get_errno(), !dbg !8151
  %cmp973 = icmp ne i32 %call972, 0, !dbg !8151
  br i1 %cmp973, label %if.then979, label %lor.lhs.false975, !dbg !8151

lor.lhs.false975:                                 ; preds = %if.then968
  %560 = load ptr, ptr %end970, align 8, !dbg !8151, !tbaa !2658
  %561 = ptrtoint ptr %560 to i64, !dbg !8151
  %562 = load ptr, ptr %v, align 8, !dbg !8151, !tbaa !2658
  %563 = ptrtoint ptr %562 to i64, !dbg !8151
  %sub976 = sub i64 %561, %563, !dbg !8151
  %564 = load i64, ptr %vlen, align 8, !dbg !8151, !tbaa !2663
  %cmp977 = icmp ne i64 %sub976, %564, !dbg !8151
  br i1 %cmp977, label %if.then979, label %if.else983, !dbg !8150

if.then979:                                       ; preds = %lor.lhs.false975, %if.then968
  %565 = load i8, ptr %initial_call.addr, align 1, !dbg !8153, !tbaa !2695, !range !2708, !noundef !2709
  %tobool980 = trunc i8 %565 to i1, !dbg !8153
  br i1 %tobool980, label %if.end982, label %if.then981, !dbg !8156

if.then981:                                       ; preds = %if.then979
  %566 = load ptr, ptr %k, align 8, !dbg !8157, !tbaa !2658
  %567 = load i64, ptr %klen, align 8, !dbg !8157, !tbaa !2663
  %568 = load ptr, ptr %v, align 8, !dbg !8157, !tbaa !2658
  %569 = load i64, ptr %vlen, align 8, !dbg !8157, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %566, i64 noundef %567, ptr noundef %568, i64 noundef %569), !dbg !8157
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8157, !tbaa !2695
  br label %if.end982, !dbg !8157

if.end982:                                        ; preds = %if.then981, %if.then979
  br label %if.end995, !dbg !8156

if.else983:                                       ; preds = %lor.lhs.false975
  %570 = load i64, ptr %mv969, align 8, !dbg !8159, !tbaa !2663
  %cmp984 = icmp slt i64 %570, -16, !dbg !8159
  br i1 %cmp984, label %if.then989, label %lor.lhs.false986, !dbg !8159

lor.lhs.false986:                                 ; preds = %if.else983
  %571 = load i64, ptr %mv969, align 8, !dbg !8159, !tbaa !2663
  %cmp987 = icmp sgt i64 %571, 16, !dbg !8159
  br i1 %cmp987, label %if.then989, label %if.else993, !dbg !8163

if.then989:                                       ; preds = %lor.lhs.false986, %if.else983
  %572 = load i8, ptr %initial_call.addr, align 1, !dbg !8164, !tbaa !2695, !range !2708, !noundef !2709
  %tobool990 = trunc i8 %572 to i1, !dbg !8164
  br i1 %tobool990, label %if.end992, label %if.then991, !dbg !8167

if.then991:                                       ; preds = %if.then989
  %573 = load ptr, ptr %k, align 8, !dbg !8168, !tbaa !2658
  %574 = load i64, ptr %klen, align 8, !dbg !8168, !tbaa !2663
  %575 = load ptr, ptr %v, align 8, !dbg !8168, !tbaa !2658
  %576 = load i64, ptr %vlen, align 8, !dbg !8168, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %573, i64 noundef %574, ptr noundef %575, i64 noundef %576), !dbg !8168
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8168, !tbaa !2695
  br label %if.end992, !dbg !8168

if.end992:                                        ; preds = %if.then991, %if.then989
  br label %if.end994, !dbg !8167

if.else993:                                       ; preds = %lor.lhs.false986
  %577 = load i64, ptr %mv969, align 8, !dbg !8170, !tbaa !2663
  store i64 %577, ptr @opt_lg_tcache_nslots_mul, align 8, !dbg !8170, !tbaa !2663
  br label %if.end994

if.end994:                                        ; preds = %if.else993, %if.end992
  br label %if.end995

if.end995:                                        ; preds = %if.end994, %if.end982
  %578 = load i8, ptr %initial_call.addr, align 1, !dbg !8172, !tbaa !2695, !range !2708, !noundef !2709
  %tobool996 = trunc i8 %578 to i1, !dbg !8172
  br i1 %tobool996, label %if.end1006, label %land.lhs.true997, !dbg !8172

land.lhs.true997:                                 ; preds = %if.end995
  %579 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8172, !tbaa !2695, !range !2708, !noundef !2709
  %tobool998 = trunc i8 %579 to i1, !dbg !8172
  br i1 %tobool998, label %land.lhs.true1000, label %if.end1006, !dbg !8172

land.lhs.true1000:                                ; preds = %land.lhs.true997
  %580 = load i8, ptr %cur_opt_valid, align 1, !dbg !8172, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1001 = trunc i8 %580 to i1, !dbg !8172
  br i1 %tobool1001, label %if.then1003, label %if.end1006, !dbg !8175

if.then1003:                                      ; preds = %land.lhs.true1000
  %581 = load i64, ptr %klen, align 8, !dbg !8176, !tbaa !2663
  %conv1004 = trunc i64 %581 to i32, !dbg !8176
  %582 = load ptr, ptr %k, align 8, !dbg !8176, !tbaa !2658
  %583 = load i64, ptr %vlen, align 8, !dbg !8176, !tbaa !2663
  %conv1005 = trunc i64 %583 to i32, !dbg !8176
  %584 = load ptr, ptr %v, align 8, !dbg !8176, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1004, ptr noundef %582, i32 noundef %conv1005, ptr noundef %584), !dbg !8176
  br label %if.end1006, !dbg !8176

if.end1006:                                       ; preds = %if.then1003, %land.lhs.true1000, %land.lhs.true997, %if.end995
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end970) #18, !dbg !8148
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv969) #18, !dbg !8148
  br label %cleanup2304

if.end1009:                                       ; preds = %land.lhs.true964, %if.end961
  %585 = load i64, ptr %klen, align 8, !dbg !8178, !tbaa !2663
  %cmp1010 = icmp eq i64 23, %585, !dbg !8178
  br i1 %cmp1010, label %land.lhs.true1012, label %if.end1057, !dbg !8178

land.lhs.true1012:                                ; preds = %if.end1009
  %586 = load ptr, ptr %k, align 8, !dbg !8178, !tbaa !2658
  %587 = load i64, ptr %klen, align 8, !dbg !8178, !tbaa !2663
  %call1013 = call i32 @strncmp(ptr noundef @.str.119, ptr noundef %586, i64 noundef %587) #22, !dbg !8178
  %cmp1014 = icmp eq i32 %call1013, 0, !dbg !8178
  br i1 %cmp1014, label %if.then1016, label %if.end1057, !dbg !8179

if.then1016:                                      ; preds = %land.lhs.true1012
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1017) #18, !dbg !8180
  tail call void @llvm.dbg.declare(metadata ptr %mv1017, metadata !2239, metadata !DIExpression()), !dbg !8180
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1018) #18, !dbg !8180
  tail call void @llvm.dbg.declare(metadata ptr %end1018, metadata !2242, metadata !DIExpression()), !dbg !8180
  call void @set_errno(i32 noundef 0), !dbg !8180
  %588 = load ptr, ptr %v, align 8, !dbg !8180, !tbaa !2658
  %call1019 = call i64 @malloc_strtoumax(ptr noundef %588, ptr noundef %end1018, i32 noundef 0), !dbg !8180
  store i64 %call1019, ptr %mv1017, align 8, !dbg !8180, !tbaa !2663
  %call1020 = call i32 @get_errno(), !dbg !8181
  %cmp1021 = icmp ne i32 %call1020, 0, !dbg !8181
  br i1 %cmp1021, label %if.then1027, label %lor.lhs.false1023, !dbg !8181

lor.lhs.false1023:                                ; preds = %if.then1016
  %589 = load ptr, ptr %end1018, align 8, !dbg !8181, !tbaa !2658
  %590 = ptrtoint ptr %589 to i64, !dbg !8181
  %591 = load ptr, ptr %v, align 8, !dbg !8181, !tbaa !2658
  %592 = ptrtoint ptr %591 to i64, !dbg !8181
  %sub1024 = sub i64 %590, %592, !dbg !8181
  %593 = load i64, ptr %vlen, align 8, !dbg !8181, !tbaa !2663
  %cmp1025 = icmp ne i64 %sub1024, %593, !dbg !8181
  br i1 %cmp1025, label %if.then1027, label %if.else1031, !dbg !8180

if.then1027:                                      ; preds = %lor.lhs.false1023, %if.then1016
  %594 = load i8, ptr %initial_call.addr, align 1, !dbg !8183, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1028 = trunc i8 %594 to i1, !dbg !8183
  br i1 %tobool1028, label %if.end1030, label %if.then1029, !dbg !8186

if.then1029:                                      ; preds = %if.then1027
  %595 = load ptr, ptr %k, align 8, !dbg !8187, !tbaa !2658
  %596 = load i64, ptr %klen, align 8, !dbg !8187, !tbaa !2663
  %597 = load ptr, ptr %v, align 8, !dbg !8187, !tbaa !2658
  %598 = load i64, ptr %vlen, align 8, !dbg !8187, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %595, i64 noundef %596, ptr noundef %597, i64 noundef %598), !dbg !8187
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8187, !tbaa !2695
  br label %if.end1030, !dbg !8187

if.end1030:                                       ; preds = %if.then1029, %if.then1027
  br label %if.end1043, !dbg !8186

if.else1031:                                      ; preds = %lor.lhs.false1023
  %599 = load i64, ptr %mv1017, align 8, !dbg !8189, !tbaa !2663
  %cmp1032 = icmp ult i64 %599, 1, !dbg !8189
  br i1 %cmp1032, label %if.then1034, label %if.else1035, !dbg !8193

if.then1034:                                      ; preds = %if.else1031
  store i32 1, ptr @opt_tcache_nslots_small_min, align 4, !dbg !8194, !tbaa !2791
  br label %if.end1042, !dbg !8194

if.else1035:                                      ; preds = %if.else1031
  %600 = load i64, ptr %mv1017, align 8, !dbg !8196, !tbaa !2663
  %cmp1036 = icmp ugt i64 %600, 2048, !dbg !8196
  br i1 %cmp1036, label %if.then1038, label %if.else1039, !dbg !8189

if.then1038:                                      ; preds = %if.else1035
  store i32 2048, ptr @opt_tcache_nslots_small_min, align 4, !dbg !8198, !tbaa !2791
  br label %if.end1041, !dbg !8198

if.else1039:                                      ; preds = %if.else1035
  %601 = load i64, ptr %mv1017, align 8, !dbg !8200, !tbaa !2663
  %conv1040 = trunc i64 %601 to i32, !dbg !8200
  store i32 %conv1040, ptr @opt_tcache_nslots_small_min, align 4, !dbg !8200, !tbaa !2791
  br label %if.end1041

if.end1041:                                       ; preds = %if.else1039, %if.then1038
  br label %if.end1042

if.end1042:                                       ; preds = %if.end1041, %if.then1034
  br label %if.end1043

if.end1043:                                       ; preds = %if.end1042, %if.end1030
  %602 = load i8, ptr %initial_call.addr, align 1, !dbg !8202, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1044 = trunc i8 %602 to i1, !dbg !8202
  br i1 %tobool1044, label %if.end1054, label %land.lhs.true1045, !dbg !8202

land.lhs.true1045:                                ; preds = %if.end1043
  %603 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8202, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1046 = trunc i8 %603 to i1, !dbg !8202
  br i1 %tobool1046, label %land.lhs.true1048, label %if.end1054, !dbg !8202

land.lhs.true1048:                                ; preds = %land.lhs.true1045
  %604 = load i8, ptr %cur_opt_valid, align 1, !dbg !8202, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1049 = trunc i8 %604 to i1, !dbg !8202
  br i1 %tobool1049, label %if.then1051, label %if.end1054, !dbg !8205

if.then1051:                                      ; preds = %land.lhs.true1048
  %605 = load i64, ptr %klen, align 8, !dbg !8206, !tbaa !2663
  %conv1052 = trunc i64 %605 to i32, !dbg !8206
  %606 = load ptr, ptr %k, align 8, !dbg !8206, !tbaa !2658
  %607 = load i64, ptr %vlen, align 8, !dbg !8206, !tbaa !2663
  %conv1053 = trunc i64 %607 to i32, !dbg !8206
  %608 = load ptr, ptr %v, align 8, !dbg !8206, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1052, ptr noundef %606, i32 noundef %conv1053, ptr noundef %608), !dbg !8206
  br label %if.end1054, !dbg !8206

if.end1054:                                       ; preds = %if.then1051, %land.lhs.true1048, %land.lhs.true1045, %if.end1043
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1018) #18, !dbg !8178
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1017) #18, !dbg !8178
  br label %cleanup2304

if.end1057:                                       ; preds = %land.lhs.true1012, %if.end1009
  %609 = load i64, ptr %klen, align 8, !dbg !8208, !tbaa !2663
  %cmp1058 = icmp eq i64 23, %609, !dbg !8208
  br i1 %cmp1058, label %land.lhs.true1060, label %if.end1105, !dbg !8208

land.lhs.true1060:                                ; preds = %if.end1057
  %610 = load ptr, ptr %k, align 8, !dbg !8208, !tbaa !2658
  %611 = load i64, ptr %klen, align 8, !dbg !8208, !tbaa !2663
  %call1061 = call i32 @strncmp(ptr noundef @.str.120, ptr noundef %610, i64 noundef %611) #22, !dbg !8208
  %cmp1062 = icmp eq i32 %call1061, 0, !dbg !8208
  br i1 %cmp1062, label %if.then1064, label %if.end1105, !dbg !8209

if.then1064:                                      ; preds = %land.lhs.true1060
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1065) #18, !dbg !8210
  tail call void @llvm.dbg.declare(metadata ptr %mv1065, metadata !2243, metadata !DIExpression()), !dbg !8210
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1066) #18, !dbg !8210
  tail call void @llvm.dbg.declare(metadata ptr %end1066, metadata !2246, metadata !DIExpression()), !dbg !8210
  call void @set_errno(i32 noundef 0), !dbg !8210
  %612 = load ptr, ptr %v, align 8, !dbg !8210, !tbaa !2658
  %call1067 = call i64 @malloc_strtoumax(ptr noundef %612, ptr noundef %end1066, i32 noundef 0), !dbg !8210
  store i64 %call1067, ptr %mv1065, align 8, !dbg !8210, !tbaa !2663
  %call1068 = call i32 @get_errno(), !dbg !8211
  %cmp1069 = icmp ne i32 %call1068, 0, !dbg !8211
  br i1 %cmp1069, label %if.then1075, label %lor.lhs.false1071, !dbg !8211

lor.lhs.false1071:                                ; preds = %if.then1064
  %613 = load ptr, ptr %end1066, align 8, !dbg !8211, !tbaa !2658
  %614 = ptrtoint ptr %613 to i64, !dbg !8211
  %615 = load ptr, ptr %v, align 8, !dbg !8211, !tbaa !2658
  %616 = ptrtoint ptr %615 to i64, !dbg !8211
  %sub1072 = sub i64 %614, %616, !dbg !8211
  %617 = load i64, ptr %vlen, align 8, !dbg !8211, !tbaa !2663
  %cmp1073 = icmp ne i64 %sub1072, %617, !dbg !8211
  br i1 %cmp1073, label %if.then1075, label %if.else1079, !dbg !8210

if.then1075:                                      ; preds = %lor.lhs.false1071, %if.then1064
  %618 = load i8, ptr %initial_call.addr, align 1, !dbg !8213, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1076 = trunc i8 %618 to i1, !dbg !8213
  br i1 %tobool1076, label %if.end1078, label %if.then1077, !dbg !8216

if.then1077:                                      ; preds = %if.then1075
  %619 = load ptr, ptr %k, align 8, !dbg !8217, !tbaa !2658
  %620 = load i64, ptr %klen, align 8, !dbg !8217, !tbaa !2663
  %621 = load ptr, ptr %v, align 8, !dbg !8217, !tbaa !2658
  %622 = load i64, ptr %vlen, align 8, !dbg !8217, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %619, i64 noundef %620, ptr noundef %621, i64 noundef %622), !dbg !8217
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8217, !tbaa !2695
  br label %if.end1078, !dbg !8217

if.end1078:                                       ; preds = %if.then1077, %if.then1075
  br label %if.end1091, !dbg !8216

if.else1079:                                      ; preds = %lor.lhs.false1071
  %623 = load i64, ptr %mv1065, align 8, !dbg !8219, !tbaa !2663
  %cmp1080 = icmp ult i64 %623, 1, !dbg !8219
  br i1 %cmp1080, label %if.then1082, label %if.else1083, !dbg !8223

if.then1082:                                      ; preds = %if.else1079
  store i32 1, ptr @opt_tcache_nslots_small_max, align 4, !dbg !8224, !tbaa !2791
  br label %if.end1090, !dbg !8224

if.else1083:                                      ; preds = %if.else1079
  %624 = load i64, ptr %mv1065, align 8, !dbg !8226, !tbaa !2663
  %cmp1084 = icmp ugt i64 %624, 2048, !dbg !8226
  br i1 %cmp1084, label %if.then1086, label %if.else1087, !dbg !8219

if.then1086:                                      ; preds = %if.else1083
  store i32 2048, ptr @opt_tcache_nslots_small_max, align 4, !dbg !8228, !tbaa !2791
  br label %if.end1089, !dbg !8228

if.else1087:                                      ; preds = %if.else1083
  %625 = load i64, ptr %mv1065, align 8, !dbg !8230, !tbaa !2663
  %conv1088 = trunc i64 %625 to i32, !dbg !8230
  store i32 %conv1088, ptr @opt_tcache_nslots_small_max, align 4, !dbg !8230, !tbaa !2791
  br label %if.end1089

if.end1089:                                       ; preds = %if.else1087, %if.then1086
  br label %if.end1090

if.end1090:                                       ; preds = %if.end1089, %if.then1082
  br label %if.end1091

if.end1091:                                       ; preds = %if.end1090, %if.end1078
  %626 = load i8, ptr %initial_call.addr, align 1, !dbg !8232, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1092 = trunc i8 %626 to i1, !dbg !8232
  br i1 %tobool1092, label %if.end1102, label %land.lhs.true1093, !dbg !8232

land.lhs.true1093:                                ; preds = %if.end1091
  %627 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8232, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1094 = trunc i8 %627 to i1, !dbg !8232
  br i1 %tobool1094, label %land.lhs.true1096, label %if.end1102, !dbg !8232

land.lhs.true1096:                                ; preds = %land.lhs.true1093
  %628 = load i8, ptr %cur_opt_valid, align 1, !dbg !8232, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1097 = trunc i8 %628 to i1, !dbg !8232
  br i1 %tobool1097, label %if.then1099, label %if.end1102, !dbg !8235

if.then1099:                                      ; preds = %land.lhs.true1096
  %629 = load i64, ptr %klen, align 8, !dbg !8236, !tbaa !2663
  %conv1100 = trunc i64 %629 to i32, !dbg !8236
  %630 = load ptr, ptr %k, align 8, !dbg !8236, !tbaa !2658
  %631 = load i64, ptr %vlen, align 8, !dbg !8236, !tbaa !2663
  %conv1101 = trunc i64 %631 to i32, !dbg !8236
  %632 = load ptr, ptr %v, align 8, !dbg !8236, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1100, ptr noundef %630, i32 noundef %conv1101, ptr noundef %632), !dbg !8236
  br label %if.end1102, !dbg !8236

if.end1102:                                       ; preds = %if.then1099, %land.lhs.true1096, %land.lhs.true1093, %if.end1091
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1066) #18, !dbg !8208
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1065) #18, !dbg !8208
  br label %cleanup2304

if.end1105:                                       ; preds = %land.lhs.true1060, %if.end1057
  %633 = load i64, ptr %klen, align 8, !dbg !8238, !tbaa !2663
  %cmp1106 = icmp eq i64 19, %633, !dbg !8238
  br i1 %cmp1106, label %land.lhs.true1108, label %if.end1153, !dbg !8238

land.lhs.true1108:                                ; preds = %if.end1105
  %634 = load ptr, ptr %k, align 8, !dbg !8238, !tbaa !2658
  %635 = load i64, ptr %klen, align 8, !dbg !8238, !tbaa !2663
  %call1109 = call i32 @strncmp(ptr noundef @.str.121, ptr noundef %634, i64 noundef %635) #22, !dbg !8238
  %cmp1110 = icmp eq i32 %call1109, 0, !dbg !8238
  br i1 %cmp1110, label %if.then1112, label %if.end1153, !dbg !8239

if.then1112:                                      ; preds = %land.lhs.true1108
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1113) #18, !dbg !8240
  tail call void @llvm.dbg.declare(metadata ptr %mv1113, metadata !2247, metadata !DIExpression()), !dbg !8240
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1114) #18, !dbg !8240
  tail call void @llvm.dbg.declare(metadata ptr %end1114, metadata !2250, metadata !DIExpression()), !dbg !8240
  call void @set_errno(i32 noundef 0), !dbg !8240
  %636 = load ptr, ptr %v, align 8, !dbg !8240, !tbaa !2658
  %call1115 = call i64 @malloc_strtoumax(ptr noundef %636, ptr noundef %end1114, i32 noundef 0), !dbg !8240
  store i64 %call1115, ptr %mv1113, align 8, !dbg !8240, !tbaa !2663
  %call1116 = call i32 @get_errno(), !dbg !8241
  %cmp1117 = icmp ne i32 %call1116, 0, !dbg !8241
  br i1 %cmp1117, label %if.then1123, label %lor.lhs.false1119, !dbg !8241

lor.lhs.false1119:                                ; preds = %if.then1112
  %637 = load ptr, ptr %end1114, align 8, !dbg !8241, !tbaa !2658
  %638 = ptrtoint ptr %637 to i64, !dbg !8241
  %639 = load ptr, ptr %v, align 8, !dbg !8241, !tbaa !2658
  %640 = ptrtoint ptr %639 to i64, !dbg !8241
  %sub1120 = sub i64 %638, %640, !dbg !8241
  %641 = load i64, ptr %vlen, align 8, !dbg !8241, !tbaa !2663
  %cmp1121 = icmp ne i64 %sub1120, %641, !dbg !8241
  br i1 %cmp1121, label %if.then1123, label %if.else1127, !dbg !8240

if.then1123:                                      ; preds = %lor.lhs.false1119, %if.then1112
  %642 = load i8, ptr %initial_call.addr, align 1, !dbg !8243, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1124 = trunc i8 %642 to i1, !dbg !8243
  br i1 %tobool1124, label %if.end1126, label %if.then1125, !dbg !8246

if.then1125:                                      ; preds = %if.then1123
  %643 = load ptr, ptr %k, align 8, !dbg !8247, !tbaa !2658
  %644 = load i64, ptr %klen, align 8, !dbg !8247, !tbaa !2663
  %645 = load ptr, ptr %v, align 8, !dbg !8247, !tbaa !2658
  %646 = load i64, ptr %vlen, align 8, !dbg !8247, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %643, i64 noundef %644, ptr noundef %645, i64 noundef %646), !dbg !8247
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8247, !tbaa !2695
  br label %if.end1126, !dbg !8247

if.end1126:                                       ; preds = %if.then1125, %if.then1123
  br label %if.end1139, !dbg !8246

if.else1127:                                      ; preds = %lor.lhs.false1119
  %647 = load i64, ptr %mv1113, align 8, !dbg !8249, !tbaa !2663
  %cmp1128 = icmp ult i64 %647, 1, !dbg !8249
  br i1 %cmp1128, label %if.then1130, label %if.else1131, !dbg !8253

if.then1130:                                      ; preds = %if.else1127
  store i32 1, ptr @opt_tcache_nslots_large, align 4, !dbg !8254, !tbaa !2791
  br label %if.end1138, !dbg !8254

if.else1131:                                      ; preds = %if.else1127
  %648 = load i64, ptr %mv1113, align 8, !dbg !8256, !tbaa !2663
  %cmp1132 = icmp ugt i64 %648, 2048, !dbg !8256
  br i1 %cmp1132, label %if.then1134, label %if.else1135, !dbg !8249

if.then1134:                                      ; preds = %if.else1131
  store i32 2048, ptr @opt_tcache_nslots_large, align 4, !dbg !8258, !tbaa !2791
  br label %if.end1137, !dbg !8258

if.else1135:                                      ; preds = %if.else1131
  %649 = load i64, ptr %mv1113, align 8, !dbg !8260, !tbaa !2663
  %conv1136 = trunc i64 %649 to i32, !dbg !8260
  store i32 %conv1136, ptr @opt_tcache_nslots_large, align 4, !dbg !8260, !tbaa !2791
  br label %if.end1137

if.end1137:                                       ; preds = %if.else1135, %if.then1134
  br label %if.end1138

if.end1138:                                       ; preds = %if.end1137, %if.then1130
  br label %if.end1139

if.end1139:                                       ; preds = %if.end1138, %if.end1126
  %650 = load i8, ptr %initial_call.addr, align 1, !dbg !8262, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1140 = trunc i8 %650 to i1, !dbg !8262
  br i1 %tobool1140, label %if.end1150, label %land.lhs.true1141, !dbg !8262

land.lhs.true1141:                                ; preds = %if.end1139
  %651 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8262, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1142 = trunc i8 %651 to i1, !dbg !8262
  br i1 %tobool1142, label %land.lhs.true1144, label %if.end1150, !dbg !8262

land.lhs.true1144:                                ; preds = %land.lhs.true1141
  %652 = load i8, ptr %cur_opt_valid, align 1, !dbg !8262, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1145 = trunc i8 %652 to i1, !dbg !8262
  br i1 %tobool1145, label %if.then1147, label %if.end1150, !dbg !8265

if.then1147:                                      ; preds = %land.lhs.true1144
  %653 = load i64, ptr %klen, align 8, !dbg !8266, !tbaa !2663
  %conv1148 = trunc i64 %653 to i32, !dbg !8266
  %654 = load ptr, ptr %k, align 8, !dbg !8266, !tbaa !2658
  %655 = load i64, ptr %vlen, align 8, !dbg !8266, !tbaa !2663
  %conv1149 = trunc i64 %655 to i32, !dbg !8266
  %656 = load ptr, ptr %v, align 8, !dbg !8266, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1148, ptr noundef %654, i32 noundef %conv1149, ptr noundef %656), !dbg !8266
  br label %if.end1150, !dbg !8266

if.end1150:                                       ; preds = %if.then1147, %land.lhs.true1144, %land.lhs.true1141, %if.end1139
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1114) #18, !dbg !8238
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1113) #18, !dbg !8238
  br label %cleanup2304

if.end1153:                                       ; preds = %land.lhs.true1108, %if.end1105
  %657 = load i64, ptr %klen, align 8, !dbg !8268, !tbaa !2663
  %cmp1154 = icmp eq i64 20, %657, !dbg !8268
  br i1 %cmp1154, label %land.lhs.true1156, label %if.end1195, !dbg !8268

land.lhs.true1156:                                ; preds = %if.end1153
  %658 = load ptr, ptr %k, align 8, !dbg !8268, !tbaa !2658
  %659 = load i64, ptr %klen, align 8, !dbg !8268, !tbaa !2663
  %call1157 = call i32 @strncmp(ptr noundef @.str.122, ptr noundef %658, i64 noundef %659) #22, !dbg !8268
  %cmp1158 = icmp eq i32 %call1157, 0, !dbg !8268
  br i1 %cmp1158, label %if.then1160, label %if.end1195, !dbg !8269

if.then1160:                                      ; preds = %land.lhs.true1156
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1161) #18, !dbg !8270
  tail call void @llvm.dbg.declare(metadata ptr %mv1161, metadata !2251, metadata !DIExpression()), !dbg !8270
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1162) #18, !dbg !8270
  tail call void @llvm.dbg.declare(metadata ptr %end1162, metadata !2254, metadata !DIExpression()), !dbg !8270
  call void @set_errno(i32 noundef 0), !dbg !8270
  %660 = load ptr, ptr %v, align 8, !dbg !8270, !tbaa !2658
  %call1163 = call i64 @malloc_strtoumax(ptr noundef %660, ptr noundef %end1162, i32 noundef 0), !dbg !8270
  store i64 %call1163, ptr %mv1161, align 8, !dbg !8270, !tbaa !2663
  %call1164 = call i32 @get_errno(), !dbg !8271
  %cmp1165 = icmp ne i32 %call1164, 0, !dbg !8271
  br i1 %cmp1165, label %if.then1171, label %lor.lhs.false1167, !dbg !8271

lor.lhs.false1167:                                ; preds = %if.then1160
  %661 = load ptr, ptr %end1162, align 8, !dbg !8271, !tbaa !2658
  %662 = ptrtoint ptr %661 to i64, !dbg !8271
  %663 = load ptr, ptr %v, align 8, !dbg !8271, !tbaa !2658
  %664 = ptrtoint ptr %663 to i64, !dbg !8271
  %sub1168 = sub i64 %662, %664, !dbg !8271
  %665 = load i64, ptr %vlen, align 8, !dbg !8271, !tbaa !2663
  %cmp1169 = icmp ne i64 %sub1168, %665, !dbg !8271
  br i1 %cmp1169, label %if.then1171, label %if.else1175, !dbg !8270

if.then1171:                                      ; preds = %lor.lhs.false1167, %if.then1160
  %666 = load i8, ptr %initial_call.addr, align 1, !dbg !8273, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1172 = trunc i8 %666 to i1, !dbg !8273
  br i1 %tobool1172, label %if.end1174, label %if.then1173, !dbg !8276

if.then1173:                                      ; preds = %if.then1171
  %667 = load ptr, ptr %k, align 8, !dbg !8277, !tbaa !2658
  %668 = load i64, ptr %klen, align 8, !dbg !8277, !tbaa !2663
  %669 = load ptr, ptr %v, align 8, !dbg !8277, !tbaa !2658
  %670 = load i64, ptr %vlen, align 8, !dbg !8277, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %667, i64 noundef %668, ptr noundef %669, i64 noundef %670), !dbg !8277
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8277, !tbaa !2695
  br label %if.end1174, !dbg !8277

if.end1174:                                       ; preds = %if.then1173, %if.then1171
  br label %if.end1181, !dbg !8276

if.else1175:                                      ; preds = %lor.lhs.false1167
  %671 = load i64, ptr %mv1161, align 8, !dbg !8279, !tbaa !2663
  %cmp1176 = icmp ult i64 %671, 1024, !dbg !8279
  br i1 %cmp1176, label %if.then1178, label %if.else1179, !dbg !8283

if.then1178:                                      ; preds = %if.else1175
  store i64 1024, ptr @opt_tcache_gc_incr_bytes, align 8, !dbg !8284, !tbaa !2663
  br label %if.end1180, !dbg !8284

if.else1179:                                      ; preds = %if.else1175
  %672 = load i64, ptr %mv1161, align 8, !dbg !8286, !tbaa !2663
  store i64 %672, ptr @opt_tcache_gc_incr_bytes, align 8, !dbg !8286, !tbaa !2663
  br label %if.end1180

if.end1180:                                       ; preds = %if.else1179, %if.then1178
  br label %if.end1181

if.end1181:                                       ; preds = %if.end1180, %if.end1174
  %673 = load i8, ptr %initial_call.addr, align 1, !dbg !8289, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1182 = trunc i8 %673 to i1, !dbg !8289
  br i1 %tobool1182, label %if.end1192, label %land.lhs.true1183, !dbg !8289

land.lhs.true1183:                                ; preds = %if.end1181
  %674 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8289, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1184 = trunc i8 %674 to i1, !dbg !8289
  br i1 %tobool1184, label %land.lhs.true1186, label %if.end1192, !dbg !8289

land.lhs.true1186:                                ; preds = %land.lhs.true1183
  %675 = load i8, ptr %cur_opt_valid, align 1, !dbg !8289, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1187 = trunc i8 %675 to i1, !dbg !8289
  br i1 %tobool1187, label %if.then1189, label %if.end1192, !dbg !8292

if.then1189:                                      ; preds = %land.lhs.true1186
  %676 = load i64, ptr %klen, align 8, !dbg !8293, !tbaa !2663
  %conv1190 = trunc i64 %676 to i32, !dbg !8293
  %677 = load ptr, ptr %k, align 8, !dbg !8293, !tbaa !2658
  %678 = load i64, ptr %vlen, align 8, !dbg !8293, !tbaa !2663
  %conv1191 = trunc i64 %678 to i32, !dbg !8293
  %679 = load ptr, ptr %v, align 8, !dbg !8293, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1190, ptr noundef %677, i32 noundef %conv1191, ptr noundef %679), !dbg !8293
  br label %if.end1192, !dbg !8293

if.end1192:                                       ; preds = %if.then1189, %land.lhs.true1186, %land.lhs.true1183, %if.end1181
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1162) #18, !dbg !8268
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1161) #18, !dbg !8268
  br label %cleanup2304

if.end1195:                                       ; preds = %land.lhs.true1156, %if.end1153
  %680 = load i64, ptr %klen, align 8, !dbg !8295, !tbaa !2663
  %cmp1196 = icmp eq i64 21, %680, !dbg !8295
  br i1 %cmp1196, label %land.lhs.true1198, label %if.end1232, !dbg !8295

land.lhs.true1198:                                ; preds = %if.end1195
  %681 = load ptr, ptr %k, align 8, !dbg !8295, !tbaa !2658
  %682 = load i64, ptr %klen, align 8, !dbg !8295, !tbaa !2663
  %call1199 = call i32 @strncmp(ptr noundef @.str.123, ptr noundef %681, i64 noundef %682) #22, !dbg !8295
  %cmp1200 = icmp eq i32 %call1199, 0, !dbg !8295
  br i1 %cmp1200, label %if.then1202, label %if.end1232, !dbg !8296

if.then1202:                                      ; preds = %land.lhs.true1198
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1203) #18, !dbg !8297
  tail call void @llvm.dbg.declare(metadata ptr %mv1203, metadata !2255, metadata !DIExpression()), !dbg !8297
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1204) #18, !dbg !8297
  tail call void @llvm.dbg.declare(metadata ptr %end1204, metadata !2258, metadata !DIExpression()), !dbg !8297
  call void @set_errno(i32 noundef 0), !dbg !8297
  %683 = load ptr, ptr %v, align 8, !dbg !8297, !tbaa !2658
  %call1205 = call i64 @malloc_strtoumax(ptr noundef %683, ptr noundef %end1204, i32 noundef 0), !dbg !8297
  store i64 %call1205, ptr %mv1203, align 8, !dbg !8297, !tbaa !2663
  %call1206 = call i32 @get_errno(), !dbg !8298
  %cmp1207 = icmp ne i32 %call1206, 0, !dbg !8298
  br i1 %cmp1207, label %if.then1213, label %lor.lhs.false1209, !dbg !8298

lor.lhs.false1209:                                ; preds = %if.then1202
  %684 = load ptr, ptr %end1204, align 8, !dbg !8298, !tbaa !2658
  %685 = ptrtoint ptr %684 to i64, !dbg !8298
  %686 = load ptr, ptr %v, align 8, !dbg !8298, !tbaa !2658
  %687 = ptrtoint ptr %686 to i64, !dbg !8298
  %sub1210 = sub i64 %685, %687, !dbg !8298
  %688 = load i64, ptr %vlen, align 8, !dbg !8298, !tbaa !2663
  %cmp1211 = icmp ne i64 %sub1210, %688, !dbg !8298
  br i1 %cmp1211, label %if.then1213, label %if.else1217, !dbg !8297

if.then1213:                                      ; preds = %lor.lhs.false1209, %if.then1202
  %689 = load i8, ptr %initial_call.addr, align 1, !dbg !8300, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1214 = trunc i8 %689 to i1, !dbg !8300
  br i1 %tobool1214, label %if.end1216, label %if.then1215, !dbg !8303

if.then1215:                                      ; preds = %if.then1213
  %690 = load ptr, ptr %k, align 8, !dbg !8304, !tbaa !2658
  %691 = load i64, ptr %klen, align 8, !dbg !8304, !tbaa !2663
  %692 = load ptr, ptr %v, align 8, !dbg !8304, !tbaa !2658
  %693 = load i64, ptr %vlen, align 8, !dbg !8304, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %690, i64 noundef %691, ptr noundef %692, i64 noundef %693), !dbg !8304
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8304, !tbaa !2695
  br label %if.end1216, !dbg !8304

if.end1216:                                       ; preds = %if.then1215, %if.then1213
  br label %if.end1218, !dbg !8303

if.else1217:                                      ; preds = %lor.lhs.false1209
  %694 = load i64, ptr %mv1203, align 8, !dbg !8306, !tbaa !2663
  store i64 %694, ptr @opt_tcache_gc_delay_bytes, align 8, !dbg !8306, !tbaa !2663
  br label %if.end1218

if.end1218:                                       ; preds = %if.else1217, %if.end1216
  %695 = load i8, ptr %initial_call.addr, align 1, !dbg !8311, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1219 = trunc i8 %695 to i1, !dbg !8311
  br i1 %tobool1219, label %if.end1229, label %land.lhs.true1220, !dbg !8311

land.lhs.true1220:                                ; preds = %if.end1218
  %696 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8311, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1221 = trunc i8 %696 to i1, !dbg !8311
  br i1 %tobool1221, label %land.lhs.true1223, label %if.end1229, !dbg !8311

land.lhs.true1223:                                ; preds = %land.lhs.true1220
  %697 = load i8, ptr %cur_opt_valid, align 1, !dbg !8311, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1224 = trunc i8 %697 to i1, !dbg !8311
  br i1 %tobool1224, label %if.then1226, label %if.end1229, !dbg !8314

if.then1226:                                      ; preds = %land.lhs.true1223
  %698 = load i64, ptr %klen, align 8, !dbg !8315, !tbaa !2663
  %conv1227 = trunc i64 %698 to i32, !dbg !8315
  %699 = load ptr, ptr %k, align 8, !dbg !8315, !tbaa !2658
  %700 = load i64, ptr %vlen, align 8, !dbg !8315, !tbaa !2663
  %conv1228 = trunc i64 %700 to i32, !dbg !8315
  %701 = load ptr, ptr %v, align 8, !dbg !8315, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1227, ptr noundef %699, i32 noundef %conv1228, ptr noundef %701), !dbg !8315
  br label %if.end1229, !dbg !8315

if.end1229:                                       ; preds = %if.then1226, %land.lhs.true1223, %land.lhs.true1220, %if.end1218
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1204) #18, !dbg !8295
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1203) #18, !dbg !8295
  br label %cleanup2304

if.end1232:                                       ; preds = %land.lhs.true1198, %if.end1195
  %702 = load i64, ptr %klen, align 8, !dbg !8317, !tbaa !2663
  %cmp1233 = icmp eq i64 25, %702, !dbg !8317
  br i1 %cmp1233, label %land.lhs.true1235, label %if.end1280, !dbg !8317

land.lhs.true1235:                                ; preds = %if.end1232
  %703 = load ptr, ptr %k, align 8, !dbg !8317, !tbaa !2658
  %704 = load i64, ptr %klen, align 8, !dbg !8317, !tbaa !2663
  %call1236 = call i32 @strncmp(ptr noundef @.str.124, ptr noundef %703, i64 noundef %704) #22, !dbg !8317
  %cmp1237 = icmp eq i32 %call1236, 0, !dbg !8317
  br i1 %cmp1237, label %if.then1239, label %if.end1280, !dbg !8318

if.then1239:                                      ; preds = %land.lhs.true1235
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1240) #18, !dbg !8319
  tail call void @llvm.dbg.declare(metadata ptr %mv1240, metadata !2259, metadata !DIExpression()), !dbg !8319
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1241) #18, !dbg !8319
  tail call void @llvm.dbg.declare(metadata ptr %end1241, metadata !2262, metadata !DIExpression()), !dbg !8319
  call void @set_errno(i32 noundef 0), !dbg !8319
  %705 = load ptr, ptr %v, align 8, !dbg !8319, !tbaa !2658
  %call1242 = call i64 @malloc_strtoumax(ptr noundef %705, ptr noundef %end1241, i32 noundef 0), !dbg !8319
  store i64 %call1242, ptr %mv1240, align 8, !dbg !8319, !tbaa !2663
  %call1243 = call i32 @get_errno(), !dbg !8320
  %cmp1244 = icmp ne i32 %call1243, 0, !dbg !8320
  br i1 %cmp1244, label %if.then1250, label %lor.lhs.false1246, !dbg !8320

lor.lhs.false1246:                                ; preds = %if.then1239
  %706 = load ptr, ptr %end1241, align 8, !dbg !8320, !tbaa !2658
  %707 = ptrtoint ptr %706 to i64, !dbg !8320
  %708 = load ptr, ptr %v, align 8, !dbg !8320, !tbaa !2658
  %709 = ptrtoint ptr %708 to i64, !dbg !8320
  %sub1247 = sub i64 %707, %709, !dbg !8320
  %710 = load i64, ptr %vlen, align 8, !dbg !8320, !tbaa !2663
  %cmp1248 = icmp ne i64 %sub1247, %710, !dbg !8320
  br i1 %cmp1248, label %if.then1250, label %if.else1254, !dbg !8319

if.then1250:                                      ; preds = %lor.lhs.false1246, %if.then1239
  %711 = load i8, ptr %initial_call.addr, align 1, !dbg !8322, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1251 = trunc i8 %711 to i1, !dbg !8322
  br i1 %tobool1251, label %if.end1253, label %if.then1252, !dbg !8325

if.then1252:                                      ; preds = %if.then1250
  %712 = load ptr, ptr %k, align 8, !dbg !8326, !tbaa !2658
  %713 = load i64, ptr %klen, align 8, !dbg !8326, !tbaa !2663
  %714 = load ptr, ptr %v, align 8, !dbg !8326, !tbaa !2658
  %715 = load i64, ptr %vlen, align 8, !dbg !8326, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %712, i64 noundef %713, ptr noundef %714, i64 noundef %715), !dbg !8326
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8326, !tbaa !2695
  br label %if.end1253, !dbg !8326

if.end1253:                                       ; preds = %if.then1252, %if.then1250
  br label %if.end1266, !dbg !8325

if.else1254:                                      ; preds = %lor.lhs.false1246
  %716 = load i64, ptr %mv1240, align 8, !dbg !8328, !tbaa !2663
  %cmp1255 = icmp ult i64 %716, 1, !dbg !8328
  br i1 %cmp1255, label %if.then1257, label %if.else1258, !dbg !8332

if.then1257:                                      ; preds = %if.else1254
  store i32 1, ptr @opt_lg_tcache_flush_small_div, align 4, !dbg !8333, !tbaa !2791
  br label %if.end1265, !dbg !8333

if.else1258:                                      ; preds = %if.else1254
  %717 = load i64, ptr %mv1240, align 8, !dbg !8335, !tbaa !2663
  %cmp1259 = icmp ugt i64 %717, 16, !dbg !8335
  br i1 %cmp1259, label %if.then1261, label %if.else1262, !dbg !8328

if.then1261:                                      ; preds = %if.else1258
  store i32 16, ptr @opt_lg_tcache_flush_small_div, align 4, !dbg !8337, !tbaa !2791
  br label %if.end1264, !dbg !8337

if.else1262:                                      ; preds = %if.else1258
  %718 = load i64, ptr %mv1240, align 8, !dbg !8339, !tbaa !2663
  %conv1263 = trunc i64 %718 to i32, !dbg !8339
  store i32 %conv1263, ptr @opt_lg_tcache_flush_small_div, align 4, !dbg !8339, !tbaa !2791
  br label %if.end1264

if.end1264:                                       ; preds = %if.else1262, %if.then1261
  br label %if.end1265

if.end1265:                                       ; preds = %if.end1264, %if.then1257
  br label %if.end1266

if.end1266:                                       ; preds = %if.end1265, %if.end1253
  %719 = load i8, ptr %initial_call.addr, align 1, !dbg !8341, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1267 = trunc i8 %719 to i1, !dbg !8341
  br i1 %tobool1267, label %if.end1277, label %land.lhs.true1268, !dbg !8341

land.lhs.true1268:                                ; preds = %if.end1266
  %720 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8341, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1269 = trunc i8 %720 to i1, !dbg !8341
  br i1 %tobool1269, label %land.lhs.true1271, label %if.end1277, !dbg !8341

land.lhs.true1271:                                ; preds = %land.lhs.true1268
  %721 = load i8, ptr %cur_opt_valid, align 1, !dbg !8341, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1272 = trunc i8 %721 to i1, !dbg !8341
  br i1 %tobool1272, label %if.then1274, label %if.end1277, !dbg !8344

if.then1274:                                      ; preds = %land.lhs.true1271
  %722 = load i64, ptr %klen, align 8, !dbg !8345, !tbaa !2663
  %conv1275 = trunc i64 %722 to i32, !dbg !8345
  %723 = load ptr, ptr %k, align 8, !dbg !8345, !tbaa !2658
  %724 = load i64, ptr %vlen, align 8, !dbg !8345, !tbaa !2663
  %conv1276 = trunc i64 %724 to i32, !dbg !8345
  %725 = load ptr, ptr %v, align 8, !dbg !8345, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1275, ptr noundef %723, i32 noundef %conv1276, ptr noundef %725), !dbg !8345
  br label %if.end1277, !dbg !8345

if.end1277:                                       ; preds = %if.then1274, %land.lhs.true1271, %land.lhs.true1268, %if.end1266
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1241) #18, !dbg !8317
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1240) #18, !dbg !8317
  br label %cleanup2304

if.end1280:                                       ; preds = %land.lhs.true1235, %if.end1232
  %726 = load i64, ptr %klen, align 8, !dbg !8347, !tbaa !2663
  %cmp1281 = icmp eq i64 25, %726, !dbg !8347
  br i1 %cmp1281, label %land.lhs.true1283, label %if.end1328, !dbg !8347

land.lhs.true1283:                                ; preds = %if.end1280
  %727 = load ptr, ptr %k, align 8, !dbg !8347, !tbaa !2658
  %728 = load i64, ptr %klen, align 8, !dbg !8347, !tbaa !2663
  %call1284 = call i32 @strncmp(ptr noundef @.str.125, ptr noundef %727, i64 noundef %728) #22, !dbg !8347
  %cmp1285 = icmp eq i32 %call1284, 0, !dbg !8347
  br i1 %cmp1285, label %if.then1287, label %if.end1328, !dbg !8348

if.then1287:                                      ; preds = %land.lhs.true1283
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1288) #18, !dbg !8349
  tail call void @llvm.dbg.declare(metadata ptr %mv1288, metadata !2263, metadata !DIExpression()), !dbg !8349
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1289) #18, !dbg !8349
  tail call void @llvm.dbg.declare(metadata ptr %end1289, metadata !2266, metadata !DIExpression()), !dbg !8349
  call void @set_errno(i32 noundef 0), !dbg !8349
  %729 = load ptr, ptr %v, align 8, !dbg !8349, !tbaa !2658
  %call1290 = call i64 @malloc_strtoumax(ptr noundef %729, ptr noundef %end1289, i32 noundef 0), !dbg !8349
  store i64 %call1290, ptr %mv1288, align 8, !dbg !8349, !tbaa !2663
  %call1291 = call i32 @get_errno(), !dbg !8350
  %cmp1292 = icmp ne i32 %call1291, 0, !dbg !8350
  br i1 %cmp1292, label %if.then1298, label %lor.lhs.false1294, !dbg !8350

lor.lhs.false1294:                                ; preds = %if.then1287
  %730 = load ptr, ptr %end1289, align 8, !dbg !8350, !tbaa !2658
  %731 = ptrtoint ptr %730 to i64, !dbg !8350
  %732 = load ptr, ptr %v, align 8, !dbg !8350, !tbaa !2658
  %733 = ptrtoint ptr %732 to i64, !dbg !8350
  %sub1295 = sub i64 %731, %733, !dbg !8350
  %734 = load i64, ptr %vlen, align 8, !dbg !8350, !tbaa !2663
  %cmp1296 = icmp ne i64 %sub1295, %734, !dbg !8350
  br i1 %cmp1296, label %if.then1298, label %if.else1302, !dbg !8349

if.then1298:                                      ; preds = %lor.lhs.false1294, %if.then1287
  %735 = load i8, ptr %initial_call.addr, align 1, !dbg !8352, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1299 = trunc i8 %735 to i1, !dbg !8352
  br i1 %tobool1299, label %if.end1301, label %if.then1300, !dbg !8355

if.then1300:                                      ; preds = %if.then1298
  %736 = load ptr, ptr %k, align 8, !dbg !8356, !tbaa !2658
  %737 = load i64, ptr %klen, align 8, !dbg !8356, !tbaa !2663
  %738 = load ptr, ptr %v, align 8, !dbg !8356, !tbaa !2658
  %739 = load i64, ptr %vlen, align 8, !dbg !8356, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %736, i64 noundef %737, ptr noundef %738, i64 noundef %739), !dbg !8356
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8356, !tbaa !2695
  br label %if.end1301, !dbg !8356

if.end1301:                                       ; preds = %if.then1300, %if.then1298
  br label %if.end1314, !dbg !8355

if.else1302:                                      ; preds = %lor.lhs.false1294
  %740 = load i64, ptr %mv1288, align 8, !dbg !8358, !tbaa !2663
  %cmp1303 = icmp ult i64 %740, 1, !dbg !8358
  br i1 %cmp1303, label %if.then1305, label %if.else1306, !dbg !8362

if.then1305:                                      ; preds = %if.else1302
  store i32 1, ptr @opt_lg_tcache_flush_large_div, align 4, !dbg !8363, !tbaa !2791
  br label %if.end1313, !dbg !8363

if.else1306:                                      ; preds = %if.else1302
  %741 = load i64, ptr %mv1288, align 8, !dbg !8365, !tbaa !2663
  %cmp1307 = icmp ugt i64 %741, 16, !dbg !8365
  br i1 %cmp1307, label %if.then1309, label %if.else1310, !dbg !8358

if.then1309:                                      ; preds = %if.else1306
  store i32 16, ptr @opt_lg_tcache_flush_large_div, align 4, !dbg !8367, !tbaa !2791
  br label %if.end1312, !dbg !8367

if.else1310:                                      ; preds = %if.else1306
  %742 = load i64, ptr %mv1288, align 8, !dbg !8369, !tbaa !2663
  %conv1311 = trunc i64 %742 to i32, !dbg !8369
  store i32 %conv1311, ptr @opt_lg_tcache_flush_large_div, align 4, !dbg !8369, !tbaa !2791
  br label %if.end1312

if.end1312:                                       ; preds = %if.else1310, %if.then1309
  br label %if.end1313

if.end1313:                                       ; preds = %if.end1312, %if.then1305
  br label %if.end1314

if.end1314:                                       ; preds = %if.end1313, %if.end1301
  %743 = load i8, ptr %initial_call.addr, align 1, !dbg !8371, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1315 = trunc i8 %743 to i1, !dbg !8371
  br i1 %tobool1315, label %if.end1325, label %land.lhs.true1316, !dbg !8371

land.lhs.true1316:                                ; preds = %if.end1314
  %744 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8371, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1317 = trunc i8 %744 to i1, !dbg !8371
  br i1 %tobool1317, label %land.lhs.true1319, label %if.end1325, !dbg !8371

land.lhs.true1319:                                ; preds = %land.lhs.true1316
  %745 = load i8, ptr %cur_opt_valid, align 1, !dbg !8371, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1320 = trunc i8 %745 to i1, !dbg !8371
  br i1 %tobool1320, label %if.then1322, label %if.end1325, !dbg !8374

if.then1322:                                      ; preds = %land.lhs.true1319
  %746 = load i64, ptr %klen, align 8, !dbg !8375, !tbaa !2663
  %conv1323 = trunc i64 %746 to i32, !dbg !8375
  %747 = load ptr, ptr %k, align 8, !dbg !8375, !tbaa !2658
  %748 = load i64, ptr %vlen, align 8, !dbg !8375, !tbaa !2663
  %conv1324 = trunc i64 %748 to i32, !dbg !8375
  %749 = load ptr, ptr %v, align 8, !dbg !8375, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1323, ptr noundef %747, i32 noundef %conv1324, ptr noundef %749), !dbg !8375
  br label %if.end1325, !dbg !8375

if.end1325:                                       ; preds = %if.then1322, %land.lhs.true1319, %land.lhs.true1316, %if.end1314
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1289) #18, !dbg !8347
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1288) #18, !dbg !8347
  br label %cleanup2304

if.end1328:                                       ; preds = %land.lhs.true1283, %if.end1280
  %750 = load i64, ptr %klen, align 8, !dbg !8377, !tbaa !2663
  %cmp1329 = icmp eq i64 18, %750, !dbg !8377
  br i1 %cmp1329, label %land.lhs.true1331, label %if.end1373, !dbg !8377

land.lhs.true1331:                                ; preds = %if.end1328
  %751 = load ptr, ptr %k, align 8, !dbg !8377, !tbaa !2658
  %752 = load i64, ptr %klen, align 8, !dbg !8377, !tbaa !2663
  %call1332 = call i32 @strncmp(ptr noundef @.str.126, ptr noundef %751, i64 noundef %752) #22, !dbg !8377
  %cmp1333 = icmp eq i32 %call1332, 0, !dbg !8377
  br i1 %cmp1333, label %if.then1335, label %if.end1373, !dbg !8378

if.then1335:                                      ; preds = %land.lhs.true1331
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1336) #18, !dbg !8379
  tail call void @llvm.dbg.declare(metadata ptr %mv1336, metadata !2267, metadata !DIExpression()), !dbg !8379
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1337) #18, !dbg !8379
  tail call void @llvm.dbg.declare(metadata ptr %end1337, metadata !2270, metadata !DIExpression()), !dbg !8379
  call void @set_errno(i32 noundef 0), !dbg !8379
  %753 = load ptr, ptr %v, align 8, !dbg !8379, !tbaa !2658
  %call1338 = call i64 @malloc_strtoumax(ptr noundef %753, ptr noundef %end1337, i32 noundef 0), !dbg !8379
  store i64 %call1338, ptr %mv1336, align 8, !dbg !8379, !tbaa !2663
  %call1339 = call i32 @get_errno(), !dbg !8380
  %cmp1340 = icmp ne i32 %call1339, 0, !dbg !8380
  br i1 %cmp1340, label %if.then1346, label %lor.lhs.false1342, !dbg !8380

lor.lhs.false1342:                                ; preds = %if.then1335
  %754 = load ptr, ptr %end1337, align 8, !dbg !8380, !tbaa !2658
  %755 = ptrtoint ptr %754 to i64, !dbg !8380
  %756 = load ptr, ptr %v, align 8, !dbg !8380, !tbaa !2658
  %757 = ptrtoint ptr %756 to i64, !dbg !8380
  %sub1343 = sub i64 %755, %757, !dbg !8380
  %758 = load i64, ptr %vlen, align 8, !dbg !8380, !tbaa !2663
  %cmp1344 = icmp ne i64 %sub1343, %758, !dbg !8380
  br i1 %cmp1344, label %if.then1346, label %if.else1350, !dbg !8379

if.then1346:                                      ; preds = %lor.lhs.false1342, %if.then1335
  %759 = load i8, ptr %initial_call.addr, align 1, !dbg !8382, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1347 = trunc i8 %759 to i1, !dbg !8382
  br i1 %tobool1347, label %if.end1349, label %if.then1348, !dbg !8385

if.then1348:                                      ; preds = %if.then1346
  %760 = load ptr, ptr %k, align 8, !dbg !8386, !tbaa !2658
  %761 = load i64, ptr %klen, align 8, !dbg !8386, !tbaa !2663
  %762 = load ptr, ptr %v, align 8, !dbg !8386, !tbaa !2658
  %763 = load i64, ptr %vlen, align 8, !dbg !8386, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %760, i64 noundef %761, ptr noundef %762, i64 noundef %763), !dbg !8386
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8386, !tbaa !2695
  br label %if.end1349, !dbg !8386

if.end1349:                                       ; preds = %if.then1348, %if.then1346
  br label %if.end1359, !dbg !8385

if.else1350:                                      ; preds = %lor.lhs.false1342
  %764 = load i64, ptr %mv1336, align 8, !dbg !8388, !tbaa !2663
  %cmp1351 = icmp ugt i64 %764, 8070450532247928832, !dbg !8388
  br i1 %cmp1351, label %if.then1353, label %if.else1357, !dbg !8392

if.then1353:                                      ; preds = %if.else1350
  %765 = load i8, ptr %initial_call.addr, align 1, !dbg !8393, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1354 = trunc i8 %765 to i1, !dbg !8393
  br i1 %tobool1354, label %if.end1356, label %if.then1355, !dbg !8396

if.then1355:                                      ; preds = %if.then1353
  %766 = load ptr, ptr %k, align 8, !dbg !8397, !tbaa !2658
  %767 = load i64, ptr %klen, align 8, !dbg !8397, !tbaa !2663
  %768 = load ptr, ptr %v, align 8, !dbg !8397, !tbaa !2658
  %769 = load i64, ptr %vlen, align 8, !dbg !8397, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %766, i64 noundef %767, ptr noundef %768, i64 noundef %769), !dbg !8397
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8397, !tbaa !2695
  br label %if.end1356, !dbg !8397

if.end1356:                                       ; preds = %if.then1355, %if.then1353
  br label %if.end1358, !dbg !8396

if.else1357:                                      ; preds = %if.else1350
  %770 = load i64, ptr %mv1336, align 8, !dbg !8399, !tbaa !2663
  store i64 %770, ptr @opt_oversize_threshold, align 8, !dbg !8399, !tbaa !2663
  br label %if.end1358

if.end1358:                                       ; preds = %if.else1357, %if.end1356
  br label %if.end1359

if.end1359:                                       ; preds = %if.end1358, %if.end1349
  %771 = load i8, ptr %initial_call.addr, align 1, !dbg !8401, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1360 = trunc i8 %771 to i1, !dbg !8401
  br i1 %tobool1360, label %if.end1370, label %land.lhs.true1361, !dbg !8401

land.lhs.true1361:                                ; preds = %if.end1359
  %772 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8401, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1362 = trunc i8 %772 to i1, !dbg !8401
  br i1 %tobool1362, label %land.lhs.true1364, label %if.end1370, !dbg !8401

land.lhs.true1364:                                ; preds = %land.lhs.true1361
  %773 = load i8, ptr %cur_opt_valid, align 1, !dbg !8401, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1365 = trunc i8 %773 to i1, !dbg !8401
  br i1 %tobool1365, label %if.then1367, label %if.end1370, !dbg !8404

if.then1367:                                      ; preds = %land.lhs.true1364
  %774 = load i64, ptr %klen, align 8, !dbg !8405, !tbaa !2663
  %conv1368 = trunc i64 %774 to i32, !dbg !8405
  %775 = load ptr, ptr %k, align 8, !dbg !8405, !tbaa !2658
  %776 = load i64, ptr %vlen, align 8, !dbg !8405, !tbaa !2663
  %conv1369 = trunc i64 %776 to i32, !dbg !8405
  %777 = load ptr, ptr %v, align 8, !dbg !8405, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1368, ptr noundef %775, i32 noundef %conv1369, ptr noundef %777), !dbg !8405
  br label %if.end1370, !dbg !8405

if.end1370:                                       ; preds = %if.then1367, %land.lhs.true1364, %land.lhs.true1361, %if.end1359
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1337) #18, !dbg !8377
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1336) #18, !dbg !8377
  br label %cleanup2304

if.end1373:                                       ; preds = %land.lhs.true1331, %if.end1328
  %778 = load i64, ptr %klen, align 8, !dbg !8407, !tbaa !2663
  %cmp1374 = icmp eq i64 24, %778, !dbg !8407
  br i1 %cmp1374, label %land.lhs.true1376, label %if.end1418, !dbg !8407

land.lhs.true1376:                                ; preds = %if.end1373
  %779 = load ptr, ptr %k, align 8, !dbg !8407, !tbaa !2658
  %780 = load i64, ptr %klen, align 8, !dbg !8407, !tbaa !2663
  %call1377 = call i32 @strncmp(ptr noundef @.str.127, ptr noundef %779, i64 noundef %780) #22, !dbg !8407
  %cmp1378 = icmp eq i32 %call1377, 0, !dbg !8407
  br i1 %cmp1378, label %if.then1380, label %if.end1418, !dbg !8408

if.then1380:                                      ; preds = %land.lhs.true1376
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1381) #18, !dbg !8409
  tail call void @llvm.dbg.declare(metadata ptr %mv1381, metadata !2271, metadata !DIExpression()), !dbg !8409
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1382) #18, !dbg !8409
  tail call void @llvm.dbg.declare(metadata ptr %end1382, metadata !2274, metadata !DIExpression()), !dbg !8409
  call void @set_errno(i32 noundef 0), !dbg !8409
  %781 = load ptr, ptr %v, align 8, !dbg !8409, !tbaa !2658
  %call1383 = call i64 @malloc_strtoumax(ptr noundef %781, ptr noundef %end1382, i32 noundef 0), !dbg !8409
  store i64 %call1383, ptr %mv1381, align 8, !dbg !8409, !tbaa !2663
  %call1384 = call i32 @get_errno(), !dbg !8410
  %cmp1385 = icmp ne i32 %call1384, 0, !dbg !8410
  br i1 %cmp1385, label %if.then1391, label %lor.lhs.false1387, !dbg !8410

lor.lhs.false1387:                                ; preds = %if.then1380
  %782 = load ptr, ptr %end1382, align 8, !dbg !8410, !tbaa !2658
  %783 = ptrtoint ptr %782 to i64, !dbg !8410
  %784 = load ptr, ptr %v, align 8, !dbg !8410, !tbaa !2658
  %785 = ptrtoint ptr %784 to i64, !dbg !8410
  %sub1388 = sub i64 %783, %785, !dbg !8410
  %786 = load i64, ptr %vlen, align 8, !dbg !8410, !tbaa !2663
  %cmp1389 = icmp ne i64 %sub1388, %786, !dbg !8410
  br i1 %cmp1389, label %if.then1391, label %if.else1395, !dbg !8409

if.then1391:                                      ; preds = %lor.lhs.false1387, %if.then1380
  %787 = load i8, ptr %initial_call.addr, align 1, !dbg !8412, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1392 = trunc i8 %787 to i1, !dbg !8412
  br i1 %tobool1392, label %if.end1394, label %if.then1393, !dbg !8415

if.then1393:                                      ; preds = %if.then1391
  %788 = load ptr, ptr %k, align 8, !dbg !8416, !tbaa !2658
  %789 = load i64, ptr %klen, align 8, !dbg !8416, !tbaa !2663
  %790 = load ptr, ptr %v, align 8, !dbg !8416, !tbaa !2658
  %791 = load i64, ptr %vlen, align 8, !dbg !8416, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %788, i64 noundef %789, ptr noundef %790, i64 noundef %791), !dbg !8416
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8416, !tbaa !2695
  br label %if.end1394, !dbg !8416

if.end1394:                                       ; preds = %if.then1393, %if.then1391
  br label %if.end1404, !dbg !8415

if.else1395:                                      ; preds = %lor.lhs.false1387
  %792 = load i64, ptr %mv1381, align 8, !dbg !8418, !tbaa !2663
  %cmp1396 = icmp ugt i64 %792, 64, !dbg !8418
  br i1 %cmp1396, label %if.then1398, label %if.else1402, !dbg !8422

if.then1398:                                      ; preds = %if.else1395
  %793 = load i8, ptr %initial_call.addr, align 1, !dbg !8423, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1399 = trunc i8 %793 to i1, !dbg !8423
  br i1 %tobool1399, label %if.end1401, label %if.then1400, !dbg !8426

if.then1400:                                      ; preds = %if.then1398
  %794 = load ptr, ptr %k, align 8, !dbg !8427, !tbaa !2658
  %795 = load i64, ptr %klen, align 8, !dbg !8427, !tbaa !2663
  %796 = load ptr, ptr %v, align 8, !dbg !8427, !tbaa !2658
  %797 = load i64, ptr %vlen, align 8, !dbg !8427, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.101, ptr noundef %794, i64 noundef %795, ptr noundef %796, i64 noundef %797), !dbg !8427
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8427, !tbaa !2695
  br label %if.end1401, !dbg !8427

if.end1401:                                       ; preds = %if.then1400, %if.then1398
  br label %if.end1403, !dbg !8426

if.else1402:                                      ; preds = %if.else1395
  %798 = load i64, ptr %mv1381, align 8, !dbg !8429, !tbaa !2663
  store i64 %798, ptr @opt_lg_extent_max_active_fit, align 8, !dbg !8429, !tbaa !2663
  br label %if.end1403

if.end1403:                                       ; preds = %if.else1402, %if.end1401
  br label %if.end1404

if.end1404:                                       ; preds = %if.end1403, %if.end1394
  %799 = load i8, ptr %initial_call.addr, align 1, !dbg !8431, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1405 = trunc i8 %799 to i1, !dbg !8431
  br i1 %tobool1405, label %if.end1415, label %land.lhs.true1406, !dbg !8431

land.lhs.true1406:                                ; preds = %if.end1404
  %800 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8431, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1407 = trunc i8 %800 to i1, !dbg !8431
  br i1 %tobool1407, label %land.lhs.true1409, label %if.end1415, !dbg !8431

land.lhs.true1409:                                ; preds = %land.lhs.true1406
  %801 = load i8, ptr %cur_opt_valid, align 1, !dbg !8431, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1410 = trunc i8 %801 to i1, !dbg !8431
  br i1 %tobool1410, label %if.then1412, label %if.end1415, !dbg !8434

if.then1412:                                      ; preds = %land.lhs.true1409
  %802 = load i64, ptr %klen, align 8, !dbg !8435, !tbaa !2663
  %conv1413 = trunc i64 %802 to i32, !dbg !8435
  %803 = load ptr, ptr %k, align 8, !dbg !8435, !tbaa !2658
  %804 = load i64, ptr %vlen, align 8, !dbg !8435, !tbaa !2663
  %conv1414 = trunc i64 %804 to i32, !dbg !8435
  %805 = load ptr, ptr %v, align 8, !dbg !8435, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1413, ptr noundef %803, i32 noundef %conv1414, ptr noundef %805), !dbg !8435
  br label %if.end1415, !dbg !8435

if.end1415:                                       ; preds = %if.then1412, %land.lhs.true1409, %land.lhs.true1406, %if.end1404
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1382) #18, !dbg !8407
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1381) #18, !dbg !8407
  br label %cleanup2304

if.end1418:                                       ; preds = %land.lhs.true1376, %if.end1373
  %806 = load ptr, ptr %k, align 8, !dbg !8437, !tbaa !2658
  %807 = load i64, ptr %klen, align 8, !dbg !8438, !tbaa !2663
  %call1419 = call i32 @strncmp(ptr noundef @.str.128, ptr noundef %806, i64 noundef %807) #22, !dbg !8439
  %cmp1420 = icmp eq i32 %call1419, 0, !dbg !8440
  br i1 %cmp1420, label %if.then1422, label %if.end1458, !dbg !8441

if.then1422:                                      ; preds = %if.end1418
  call void @llvm.lifetime.start.p0(i64 1, ptr %match1423) #18, !dbg !8442
  tail call void @llvm.dbg.declare(metadata ptr %match1423, metadata !2275, metadata !DIExpression()), !dbg !8443
  store i8 0, ptr %match1423, align 1, !dbg !8443, !tbaa !2695
  call void @llvm.lifetime.start.p0(i64 4, ptr %m1424) #18, !dbg !8444
  tail call void @llvm.dbg.declare(metadata ptr %m1424, metadata !2278, metadata !DIExpression()), !dbg !8445
  store i32 0, ptr %m1424, align 4, !dbg !8445, !tbaa !2791
  br label %for.cond1425, !dbg !8444

for.cond1425:                                     ; preds = %for.inc1436, %if.then1422
  %808 = load i32, ptr %m1424, align 4, !dbg !8446, !tbaa !2791
  %cmp1426 = icmp slt i32 %808, 3, !dbg !8448
  br i1 %cmp1426, label %for.body1428, label %for.cond.cleanup, !dbg !8449

for.cond.cleanup:                                 ; preds = %for.cond1425
  store i32 15, ptr %cleanup.dest.slot, align 4
  br label %cleanup1438, !dbg !8449

for.body1428:                                     ; preds = %for.cond1425
  %809 = load i32, ptr %m1424, align 4, !dbg !8450, !tbaa !2791
  %idxprom1429 = sext i32 %809 to i64, !dbg !8453
  %arrayidx1430 = getelementptr inbounds [0 x ptr], ptr @percpu_arena_mode_names, i64 0, i64 %idxprom1429, !dbg !8453
  %810 = load ptr, ptr %arrayidx1430, align 8, !dbg !8453, !tbaa !2658
  %811 = load ptr, ptr %v, align 8, !dbg !8454, !tbaa !2658
  %812 = load i64, ptr %vlen, align 8, !dbg !8455, !tbaa !2663
  %call1431 = call i32 @strncmp(ptr noundef %810, ptr noundef %811, i64 noundef %812) #22, !dbg !8456
  %cmp1432 = icmp eq i32 %call1431, 0, !dbg !8457
  br i1 %cmp1432, label %if.then1434, label %if.end1435, !dbg !8458

if.then1434:                                      ; preds = %for.body1428
  %813 = load i32, ptr %m1424, align 4, !dbg !8459, !tbaa !2791
  store i32 %813, ptr @opt_percpu_arena, align 4, !dbg !8461, !tbaa !2810
  store i8 1, ptr %match1423, align 1, !dbg !8462, !tbaa !2695
  store i32 15, ptr %cleanup.dest.slot, align 4
  br label %cleanup1438, !dbg !8463

if.end1435:                                       ; preds = %for.body1428
  br label %for.inc1436, !dbg !8464

for.inc1436:                                      ; preds = %if.end1435
  %814 = load i32, ptr %m1424, align 4, !dbg !8465, !tbaa !2791
  %inc1437 = add nsw i32 %814, 1, !dbg !8465
  store i32 %inc1437, ptr %m1424, align 4, !dbg !8465, !tbaa !2791
  br label %for.cond1425, !dbg !8466, !llvm.loop !8467

cleanup1438:                                      ; preds = %if.then1434, %for.cond.cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %m1424) #18, !dbg !8466
  br label %for.end1439

for.end1439:                                      ; preds = %cleanup1438
  %815 = load i8, ptr %match1423, align 1, !dbg !8469, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1440 = trunc i8 %815 to i1, !dbg !8469
  br i1 %tobool1440, label %if.end1445, label %if.then1441, !dbg !8471

if.then1441:                                      ; preds = %for.end1439
  %816 = load i8, ptr %initial_call.addr, align 1, !dbg !8472, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1442 = trunc i8 %816 to i1, !dbg !8472
  br i1 %tobool1442, label %if.end1444, label %if.then1443, !dbg !8475

if.then1443:                                      ; preds = %if.then1441
  %817 = load ptr, ptr %k, align 8, !dbg !8476, !tbaa !2658
  %818 = load i64, ptr %klen, align 8, !dbg !8476, !tbaa !2663
  %819 = load ptr, ptr %v, align 8, !dbg !8476, !tbaa !2658
  %820 = load i64, ptr %vlen, align 8, !dbg !8476, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %817, i64 noundef %818, ptr noundef %819, i64 noundef %820), !dbg !8476
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8476, !tbaa !2695
  br label %if.end1444, !dbg !8476

if.end1444:                                       ; preds = %if.then1443, %if.then1441
  br label %if.end1445, !dbg !8478

if.end1445:                                       ; preds = %if.end1444, %for.end1439
  %821 = load i8, ptr %initial_call.addr, align 1, !dbg !8479, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1446 = trunc i8 %821 to i1, !dbg !8479
  br i1 %tobool1446, label %if.end1456, label %land.lhs.true1447, !dbg !8479

land.lhs.true1447:                                ; preds = %if.end1445
  %822 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8479, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1448 = trunc i8 %822 to i1, !dbg !8479
  br i1 %tobool1448, label %land.lhs.true1450, label %if.end1456, !dbg !8479

land.lhs.true1450:                                ; preds = %land.lhs.true1447
  %823 = load i8, ptr %cur_opt_valid, align 1, !dbg !8479, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1451 = trunc i8 %823 to i1, !dbg !8479
  br i1 %tobool1451, label %if.then1453, label %if.end1456, !dbg !8482

if.then1453:                                      ; preds = %land.lhs.true1450
  %824 = load i64, ptr %klen, align 8, !dbg !8483, !tbaa !2663
  %conv1454 = trunc i64 %824 to i32, !dbg !8483
  %825 = load ptr, ptr %k, align 8, !dbg !8483, !tbaa !2658
  %826 = load i64, ptr %vlen, align 8, !dbg !8483, !tbaa !2663
  %conv1455 = trunc i64 %826 to i32, !dbg !8483
  %827 = load ptr, ptr %v, align 8, !dbg !8483, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1454, ptr noundef %825, i32 noundef %conv1455, ptr noundef %827), !dbg !8483
  br label %if.end1456, !dbg !8483

if.end1456:                                       ; preds = %if.then1453, %land.lhs.true1450, %land.lhs.true1447, %if.end1445
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr %match1423) #18, !dbg !8485
  br label %cleanup2304

if.end1458:                                       ; preds = %if.end1418
  %828 = load i64, ptr %klen, align 8, !dbg !8486, !tbaa !2663
  %cmp1459 = icmp eq i64 17, %828, !dbg !8486
  br i1 %cmp1459, label %land.lhs.true1461, label %if.end1498, !dbg !8486

land.lhs.true1461:                                ; preds = %if.end1458
  %829 = load ptr, ptr %k, align 8, !dbg !8486, !tbaa !2658
  %830 = load i64, ptr %klen, align 8, !dbg !8486, !tbaa !2663
  %call1462 = call i32 @strncmp(ptr noundef @.str.129, ptr noundef %829, i64 noundef %830) #22, !dbg !8486
  %cmp1463 = icmp eq i32 %call1462, 0, !dbg !8486
  br i1 %cmp1463, label %if.then1465, label %if.end1498, !dbg !8488

if.then1465:                                      ; preds = %land.lhs.true1461
  %831 = load i64, ptr %vlen, align 8, !dbg !8489, !tbaa !2663
  %cmp1466 = icmp eq i64 4, %831, !dbg !8489
  br i1 %cmp1466, label %land.lhs.true1468, label %if.else1473, !dbg !8489

land.lhs.true1468:                                ; preds = %if.then1465
  %832 = load ptr, ptr %v, align 8, !dbg !8489, !tbaa !2658
  %833 = load i64, ptr %vlen, align 8, !dbg !8489, !tbaa !2663
  %call1469 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %832, i64 noundef %833) #22, !dbg !8489
  %cmp1470 = icmp eq i32 %call1469, 0, !dbg !8489
  br i1 %cmp1470, label %if.then1472, label %if.else1473, !dbg !8492

if.then1472:                                      ; preds = %land.lhs.true1468
  store i8 1, ptr @opt_background_thread, align 1, !dbg !8493, !tbaa !2695
  br label %if.end1486, !dbg !8493

if.else1473:                                      ; preds = %land.lhs.true1468, %if.then1465
  %834 = load i64, ptr %vlen, align 8, !dbg !8495, !tbaa !2663
  %cmp1474 = icmp eq i64 5, %834, !dbg !8495
  br i1 %cmp1474, label %land.lhs.true1476, label %if.else1481, !dbg !8495

land.lhs.true1476:                                ; preds = %if.else1473
  %835 = load ptr, ptr %v, align 8, !dbg !8495, !tbaa !2658
  %836 = load i64, ptr %vlen, align 8, !dbg !8495, !tbaa !2663
  %call1477 = call i32 @strncmp(ptr noundef @.str, ptr noundef %835, i64 noundef %836) #22, !dbg !8495
  %cmp1478 = icmp eq i32 %call1477, 0, !dbg !8495
  br i1 %cmp1478, label %if.then1480, label %if.else1481, !dbg !8489

if.then1480:                                      ; preds = %land.lhs.true1476
  store i8 0, ptr @opt_background_thread, align 1, !dbg !8497, !tbaa !2695
  br label %if.end1485, !dbg !8497

if.else1481:                                      ; preds = %land.lhs.true1476, %if.else1473
  %837 = load i8, ptr %initial_call.addr, align 1, !dbg !8499, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1482 = trunc i8 %837 to i1, !dbg !8499
  br i1 %tobool1482, label %if.end1484, label %if.then1483, !dbg !8502

if.then1483:                                      ; preds = %if.else1481
  %838 = load ptr, ptr %k, align 8, !dbg !8503, !tbaa !2658
  %839 = load i64, ptr %klen, align 8, !dbg !8503, !tbaa !2663
  %840 = load ptr, ptr %v, align 8, !dbg !8503, !tbaa !2658
  %841 = load i64, ptr %vlen, align 8, !dbg !8503, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %838, i64 noundef %839, ptr noundef %840, i64 noundef %841), !dbg !8503
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8503, !tbaa !2695
  br label %if.end1484, !dbg !8503

if.end1484:                                       ; preds = %if.then1483, %if.else1481
  br label %if.end1485

if.end1485:                                       ; preds = %if.end1484, %if.then1480
  br label %if.end1486

if.end1486:                                       ; preds = %if.end1485, %if.then1472
  %842 = load i8, ptr %initial_call.addr, align 1, !dbg !8505, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1487 = trunc i8 %842 to i1, !dbg !8505
  br i1 %tobool1487, label %if.end1497, label %land.lhs.true1488, !dbg !8505

land.lhs.true1488:                                ; preds = %if.end1486
  %843 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8505, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1489 = trunc i8 %843 to i1, !dbg !8505
  br i1 %tobool1489, label %land.lhs.true1491, label %if.end1497, !dbg !8505

land.lhs.true1491:                                ; preds = %land.lhs.true1488
  %844 = load i8, ptr %cur_opt_valid, align 1, !dbg !8505, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1492 = trunc i8 %844 to i1, !dbg !8505
  br i1 %tobool1492, label %if.then1494, label %if.end1497, !dbg !8508

if.then1494:                                      ; preds = %land.lhs.true1491
  %845 = load i64, ptr %klen, align 8, !dbg !8509, !tbaa !2663
  %conv1495 = trunc i64 %845 to i32, !dbg !8509
  %846 = load ptr, ptr %k, align 8, !dbg !8509, !tbaa !2658
  %847 = load i64, ptr %vlen, align 8, !dbg !8509, !tbaa !2663
  %conv1496 = trunc i64 %847 to i32, !dbg !8509
  %848 = load ptr, ptr %v, align 8, !dbg !8509, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1495, ptr noundef %846, i32 noundef %conv1496, ptr noundef %848), !dbg !8509
  br label %if.end1497, !dbg !8509

if.end1497:                                       ; preds = %if.then1494, %land.lhs.true1491, %land.lhs.true1488, %if.end1486
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8508, !llvm.loop !7444

if.end1498:                                       ; preds = %land.lhs.true1461, %if.end1458
  %849 = load i64, ptr %klen, align 8, !dbg !8511, !tbaa !2663
  %cmp1499 = icmp eq i64 22, %849, !dbg !8511
  br i1 %cmp1499, label %land.lhs.true1501, label %if.end1545, !dbg !8511

land.lhs.true1501:                                ; preds = %if.end1498
  %850 = load ptr, ptr %k, align 8, !dbg !8511, !tbaa !2658
  %851 = load i64, ptr %klen, align 8, !dbg !8511, !tbaa !2663
  %call1502 = call i32 @strncmp(ptr noundef @.str.130, ptr noundef %850, i64 noundef %851) #22, !dbg !8511
  %cmp1503 = icmp eq i32 %call1502, 0, !dbg !8511
  br i1 %cmp1503, label %if.then1505, label %if.end1545, !dbg !8512

if.then1505:                                      ; preds = %land.lhs.true1501
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1506) #18, !dbg !8513
  tail call void @llvm.dbg.declare(metadata ptr %mv1506, metadata !2280, metadata !DIExpression()), !dbg !8513
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1507) #18, !dbg !8513
  tail call void @llvm.dbg.declare(metadata ptr %end1507, metadata !2283, metadata !DIExpression()), !dbg !8513
  call void @set_errno(i32 noundef 0), !dbg !8513
  %852 = load ptr, ptr %v, align 8, !dbg !8513, !tbaa !2658
  %call1508 = call i64 @malloc_strtoumax(ptr noundef %852, ptr noundef %end1507, i32 noundef 0), !dbg !8513
  store i64 %call1508, ptr %mv1506, align 8, !dbg !8513, !tbaa !2663
  %call1509 = call i32 @get_errno(), !dbg !8514
  %cmp1510 = icmp ne i32 %call1509, 0, !dbg !8514
  br i1 %cmp1510, label %if.then1516, label %lor.lhs.false1512, !dbg !8514

lor.lhs.false1512:                                ; preds = %if.then1505
  %853 = load ptr, ptr %end1507, align 8, !dbg !8514, !tbaa !2658
  %854 = ptrtoint ptr %853 to i64, !dbg !8514
  %855 = load ptr, ptr %v, align 8, !dbg !8514, !tbaa !2658
  %856 = ptrtoint ptr %855 to i64, !dbg !8514
  %sub1513 = sub i64 %854, %856, !dbg !8514
  %857 = load i64, ptr %vlen, align 8, !dbg !8514, !tbaa !2663
  %cmp1514 = icmp ne i64 %sub1513, %857, !dbg !8514
  br i1 %cmp1514, label %if.then1516, label %if.else1520, !dbg !8513

if.then1516:                                      ; preds = %lor.lhs.false1512, %if.then1505
  %858 = load i8, ptr %initial_call.addr, align 1, !dbg !8516, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1517 = trunc i8 %858 to i1, !dbg !8516
  br i1 %tobool1517, label %if.end1519, label %if.then1518, !dbg !8519

if.then1518:                                      ; preds = %if.then1516
  %859 = load ptr, ptr %k, align 8, !dbg !8520, !tbaa !2658
  %860 = load i64, ptr %klen, align 8, !dbg !8520, !tbaa !2663
  %861 = load ptr, ptr %v, align 8, !dbg !8520, !tbaa !2658
  %862 = load i64, ptr %vlen, align 8, !dbg !8520, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %859, i64 noundef %860, ptr noundef %861, i64 noundef %862), !dbg !8520
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8520, !tbaa !2695
  br label %if.end1519, !dbg !8520

if.end1519:                                       ; preds = %if.then1518, %if.then1516
  br label %if.end1531, !dbg !8519

if.else1520:                                      ; preds = %lor.lhs.false1512
  %863 = load i64, ptr %mv1506, align 8, !dbg !8522, !tbaa !2663
  %cmp1521 = icmp ult i64 %863, 1, !dbg !8522
  br i1 %cmp1521, label %if.then1523, label %if.else1524, !dbg !8526

if.then1523:                                      ; preds = %if.else1520
  store i64 1, ptr @opt_max_background_threads, align 8, !dbg !8527, !tbaa !2663
  br label %if.end1530, !dbg !8527

if.else1524:                                      ; preds = %if.else1520
  %864 = load i64, ptr %mv1506, align 8, !dbg !8529, !tbaa !2663
  %865 = load i64, ptr @opt_max_background_threads, align 8, !dbg !8529, !tbaa !2663
  %cmp1525 = icmp ugt i64 %864, %865, !dbg !8529
  br i1 %cmp1525, label %if.then1527, label %if.else1528, !dbg !8522

if.then1527:                                      ; preds = %if.else1524
  %866 = load i64, ptr @opt_max_background_threads, align 8, !dbg !8531, !tbaa !2663
  store i64 %866, ptr @opt_max_background_threads, align 8, !dbg !8531, !tbaa !2663
  br label %if.end1529, !dbg !8531

if.else1528:                                      ; preds = %if.else1524
  %867 = load i64, ptr %mv1506, align 8, !dbg !8533, !tbaa !2663
  store i64 %867, ptr @opt_max_background_threads, align 8, !dbg !8533, !tbaa !2663
  br label %if.end1529

if.end1529:                                       ; preds = %if.else1528, %if.then1527
  br label %if.end1530

if.end1530:                                       ; preds = %if.end1529, %if.then1523
  br label %if.end1531

if.end1531:                                       ; preds = %if.end1530, %if.end1519
  %868 = load i8, ptr %initial_call.addr, align 1, !dbg !8535, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1532 = trunc i8 %868 to i1, !dbg !8535
  br i1 %tobool1532, label %if.end1542, label %land.lhs.true1533, !dbg !8535

land.lhs.true1533:                                ; preds = %if.end1531
  %869 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8535, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1534 = trunc i8 %869 to i1, !dbg !8535
  br i1 %tobool1534, label %land.lhs.true1536, label %if.end1542, !dbg !8535

land.lhs.true1536:                                ; preds = %land.lhs.true1533
  %870 = load i8, ptr %cur_opt_valid, align 1, !dbg !8535, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1537 = trunc i8 %870 to i1, !dbg !8535
  br i1 %tobool1537, label %if.then1539, label %if.end1542, !dbg !8538

if.then1539:                                      ; preds = %land.lhs.true1536
  %871 = load i64, ptr %klen, align 8, !dbg !8539, !tbaa !2663
  %conv1540 = trunc i64 %871 to i32, !dbg !8539
  %872 = load ptr, ptr %k, align 8, !dbg !8539, !tbaa !2658
  %873 = load i64, ptr %vlen, align 8, !dbg !8539, !tbaa !2663
  %conv1541 = trunc i64 %873 to i32, !dbg !8539
  %874 = load ptr, ptr %v, align 8, !dbg !8539, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1540, ptr noundef %872, i32 noundef %conv1541, ptr noundef %874), !dbg !8539
  br label %if.end1542, !dbg !8539

if.end1542:                                       ; preds = %if.then1539, %land.lhs.true1536, %land.lhs.true1533, %if.end1531
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1507) #18, !dbg !8511
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1506) #18, !dbg !8511
  br label %cleanup2304

if.end1545:                                       ; preds = %land.lhs.true1501, %if.end1498
  %875 = load i64, ptr %klen, align 8, !dbg !8541, !tbaa !2663
  %cmp1546 = icmp eq i64 3, %875, !dbg !8541
  br i1 %cmp1546, label %land.lhs.true1548, label %if.end1585, !dbg !8541

land.lhs.true1548:                                ; preds = %if.end1545
  %876 = load ptr, ptr %k, align 8, !dbg !8541, !tbaa !2658
  %877 = load i64, ptr %klen, align 8, !dbg !8541, !tbaa !2663
  %call1549 = call i32 @strncmp(ptr noundef @.str.131, ptr noundef %876, i64 noundef %877) #22, !dbg !8541
  %cmp1550 = icmp eq i32 %call1549, 0, !dbg !8541
  br i1 %cmp1550, label %if.then1552, label %if.end1585, !dbg !8543

if.then1552:                                      ; preds = %land.lhs.true1548
  %878 = load i64, ptr %vlen, align 8, !dbg !8544, !tbaa !2663
  %cmp1553 = icmp eq i64 4, %878, !dbg !8544
  br i1 %cmp1553, label %land.lhs.true1555, label %if.else1560, !dbg !8544

land.lhs.true1555:                                ; preds = %if.then1552
  %879 = load ptr, ptr %v, align 8, !dbg !8544, !tbaa !2658
  %880 = load i64, ptr %vlen, align 8, !dbg !8544, !tbaa !2663
  %call1556 = call i32 @strncmp(ptr noundef @.str.90, ptr noundef %879, i64 noundef %880) #22, !dbg !8544
  %cmp1557 = icmp eq i32 %call1556, 0, !dbg !8544
  br i1 %cmp1557, label %if.then1559, label %if.else1560, !dbg !8547

if.then1559:                                      ; preds = %land.lhs.true1555
  store i8 1, ptr @opt_hpa, align 1, !dbg !8548, !tbaa !2695
  br label %if.end1573, !dbg !8548

if.else1560:                                      ; preds = %land.lhs.true1555, %if.then1552
  %881 = load i64, ptr %vlen, align 8, !dbg !8550, !tbaa !2663
  %cmp1561 = icmp eq i64 5, %881, !dbg !8550
  br i1 %cmp1561, label %land.lhs.true1563, label %if.else1568, !dbg !8550

land.lhs.true1563:                                ; preds = %if.else1560
  %882 = load ptr, ptr %v, align 8, !dbg !8550, !tbaa !2658
  %883 = load i64, ptr %vlen, align 8, !dbg !8550, !tbaa !2663
  %call1564 = call i32 @strncmp(ptr noundef @.str, ptr noundef %882, i64 noundef %883) #22, !dbg !8550
  %cmp1565 = icmp eq i32 %call1564, 0, !dbg !8550
  br i1 %cmp1565, label %if.then1567, label %if.else1568, !dbg !8544

if.then1567:                                      ; preds = %land.lhs.true1563
  store i8 0, ptr @opt_hpa, align 1, !dbg !8552, !tbaa !2695
  br label %if.end1572, !dbg !8552

if.else1568:                                      ; preds = %land.lhs.true1563, %if.else1560
  %884 = load i8, ptr %initial_call.addr, align 1, !dbg !8554, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1569 = trunc i8 %884 to i1, !dbg !8554
  br i1 %tobool1569, label %if.end1571, label %if.then1570, !dbg !8557

if.then1570:                                      ; preds = %if.else1568
  %885 = load ptr, ptr %k, align 8, !dbg !8558, !tbaa !2658
  %886 = load i64, ptr %klen, align 8, !dbg !8558, !tbaa !2663
  %887 = load ptr, ptr %v, align 8, !dbg !8558, !tbaa !2658
  %888 = load i64, ptr %vlen, align 8, !dbg !8558, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %885, i64 noundef %886, ptr noundef %887, i64 noundef %888), !dbg !8558
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8558, !tbaa !2695
  br label %if.end1571, !dbg !8558

if.end1571:                                       ; preds = %if.then1570, %if.else1568
  br label %if.end1572

if.end1572:                                       ; preds = %if.end1571, %if.then1567
  br label %if.end1573

if.end1573:                                       ; preds = %if.end1572, %if.then1559
  %889 = load i8, ptr %initial_call.addr, align 1, !dbg !8560, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1574 = trunc i8 %889 to i1, !dbg !8560
  br i1 %tobool1574, label %if.end1584, label %land.lhs.true1575, !dbg !8560

land.lhs.true1575:                                ; preds = %if.end1573
  %890 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8560, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1576 = trunc i8 %890 to i1, !dbg !8560
  br i1 %tobool1576, label %land.lhs.true1578, label %if.end1584, !dbg !8560

land.lhs.true1578:                                ; preds = %land.lhs.true1575
  %891 = load i8, ptr %cur_opt_valid, align 1, !dbg !8560, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1579 = trunc i8 %891 to i1, !dbg !8560
  br i1 %tobool1579, label %if.then1581, label %if.end1584, !dbg !8563

if.then1581:                                      ; preds = %land.lhs.true1578
  %892 = load i64, ptr %klen, align 8, !dbg !8564, !tbaa !2663
  %conv1582 = trunc i64 %892 to i32, !dbg !8564
  %893 = load ptr, ptr %k, align 8, !dbg !8564, !tbaa !2658
  %894 = load i64, ptr %vlen, align 8, !dbg !8564, !tbaa !2663
  %conv1583 = trunc i64 %894 to i32, !dbg !8564
  %895 = load ptr, ptr %v, align 8, !dbg !8564, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1582, ptr noundef %893, i32 noundef %conv1583, ptr noundef %895), !dbg !8564
  br label %if.end1584, !dbg !8564

if.end1584:                                       ; preds = %if.then1581, %land.lhs.true1578, %land.lhs.true1575, %if.end1573
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8563, !llvm.loop !7444

if.end1585:                                       ; preds = %land.lhs.true1548, %if.end1545
  %896 = load i64, ptr %klen, align 8, !dbg !8566, !tbaa !2663
  %cmp1586 = icmp eq i64 18, %896, !dbg !8566
  br i1 %cmp1586, label %land.lhs.true1588, label %if.end1632, !dbg !8566

land.lhs.true1588:                                ; preds = %if.end1585
  %897 = load ptr, ptr %k, align 8, !dbg !8566, !tbaa !2658
  %898 = load i64, ptr %klen, align 8, !dbg !8566, !tbaa !2663
  %call1589 = call i32 @strncmp(ptr noundef @.str.132, ptr noundef %897, i64 noundef %898) #22, !dbg !8566
  %cmp1590 = icmp eq i32 %call1589, 0, !dbg !8566
  br i1 %cmp1590, label %if.then1592, label %if.end1632, !dbg !8567

if.then1592:                                      ; preds = %land.lhs.true1588
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1593) #18, !dbg !8568
  tail call void @llvm.dbg.declare(metadata ptr %mv1593, metadata !2284, metadata !DIExpression()), !dbg !8568
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1594) #18, !dbg !8568
  tail call void @llvm.dbg.declare(metadata ptr %end1594, metadata !2287, metadata !DIExpression()), !dbg !8568
  call void @set_errno(i32 noundef 0), !dbg !8568
  %899 = load ptr, ptr %v, align 8, !dbg !8568, !tbaa !2658
  %call1595 = call i64 @malloc_strtoumax(ptr noundef %899, ptr noundef %end1594, i32 noundef 0), !dbg !8568
  store i64 %call1595, ptr %mv1593, align 8, !dbg !8568, !tbaa !2663
  %call1596 = call i32 @get_errno(), !dbg !8569
  %cmp1597 = icmp ne i32 %call1596, 0, !dbg !8569
  br i1 %cmp1597, label %if.then1603, label %lor.lhs.false1599, !dbg !8569

lor.lhs.false1599:                                ; preds = %if.then1592
  %900 = load ptr, ptr %end1594, align 8, !dbg !8569, !tbaa !2658
  %901 = ptrtoint ptr %900 to i64, !dbg !8569
  %902 = load ptr, ptr %v, align 8, !dbg !8569, !tbaa !2658
  %903 = ptrtoint ptr %902 to i64, !dbg !8569
  %sub1600 = sub i64 %901, %903, !dbg !8569
  %904 = load i64, ptr %vlen, align 8, !dbg !8569, !tbaa !2663
  %cmp1601 = icmp ne i64 %sub1600, %904, !dbg !8569
  br i1 %cmp1601, label %if.then1603, label %if.else1607, !dbg !8568

if.then1603:                                      ; preds = %lor.lhs.false1599, %if.then1592
  %905 = load i8, ptr %initial_call.addr, align 1, !dbg !8571, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1604 = trunc i8 %905 to i1, !dbg !8571
  br i1 %tobool1604, label %if.end1606, label %if.then1605, !dbg !8574

if.then1605:                                      ; preds = %if.then1603
  %906 = load ptr, ptr %k, align 8, !dbg !8575, !tbaa !2658
  %907 = load i64, ptr %klen, align 8, !dbg !8575, !tbaa !2663
  %908 = load ptr, ptr %v, align 8, !dbg !8575, !tbaa !2658
  %909 = load i64, ptr %vlen, align 8, !dbg !8575, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %906, i64 noundef %907, ptr noundef %908, i64 noundef %909), !dbg !8575
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8575, !tbaa !2695
  br label %if.end1606, !dbg !8575

if.end1606:                                       ; preds = %if.then1605, %if.then1603
  br label %if.end1618, !dbg !8574

if.else1607:                                      ; preds = %lor.lhs.false1599
  %910 = load i64, ptr %mv1593, align 8, !dbg !8577, !tbaa !2663
  %cmp1608 = icmp ult i64 %910, 4096, !dbg !8577
  br i1 %cmp1608, label %if.then1610, label %if.else1611, !dbg !8581

if.then1610:                                      ; preds = %if.else1607
  store i64 4096, ptr @opt_hpa_opts, align 8, !dbg !8582, !tbaa !8584
  br label %if.end1617, !dbg !8582

if.else1611:                                      ; preds = %if.else1607
  %911 = load i64, ptr %mv1593, align 8, !dbg !8585, !tbaa !2663
  %cmp1612 = icmp ugt i64 %911, 2097152, !dbg !8585
  br i1 %cmp1612, label %if.then1614, label %if.else1615, !dbg !8577

if.then1614:                                      ; preds = %if.else1611
  store i64 2097152, ptr @opt_hpa_opts, align 8, !dbg !8587, !tbaa !8584
  br label %if.end1616, !dbg !8587

if.else1615:                                      ; preds = %if.else1611
  %912 = load i64, ptr %mv1593, align 8, !dbg !8589, !tbaa !2663
  store i64 %912, ptr @opt_hpa_opts, align 8, !dbg !8589, !tbaa !8584
  br label %if.end1616

if.end1616:                                       ; preds = %if.else1615, %if.then1614
  br label %if.end1617

if.end1617:                                       ; preds = %if.end1616, %if.then1610
  br label %if.end1618

if.end1618:                                       ; preds = %if.end1617, %if.end1606
  %913 = load i8, ptr %initial_call.addr, align 1, !dbg !8591, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1619 = trunc i8 %913 to i1, !dbg !8591
  br i1 %tobool1619, label %if.end1629, label %land.lhs.true1620, !dbg !8591

land.lhs.true1620:                                ; preds = %if.end1618
  %914 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8591, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1621 = trunc i8 %914 to i1, !dbg !8591
  br i1 %tobool1621, label %land.lhs.true1623, label %if.end1629, !dbg !8591

land.lhs.true1623:                                ; preds = %land.lhs.true1620
  %915 = load i8, ptr %cur_opt_valid, align 1, !dbg !8591, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1624 = trunc i8 %915 to i1, !dbg !8591
  br i1 %tobool1624, label %if.then1626, label %if.end1629, !dbg !8594

if.then1626:                                      ; preds = %land.lhs.true1623
  %916 = load i64, ptr %klen, align 8, !dbg !8595, !tbaa !2663
  %conv1627 = trunc i64 %916 to i32, !dbg !8595
  %917 = load ptr, ptr %k, align 8, !dbg !8595, !tbaa !2658
  %918 = load i64, ptr %vlen, align 8, !dbg !8595, !tbaa !2663
  %conv1628 = trunc i64 %918 to i32, !dbg !8595
  %919 = load ptr, ptr %v, align 8, !dbg !8595, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1627, ptr noundef %917, i32 noundef %conv1628, ptr noundef %919), !dbg !8595
  br label %if.end1629, !dbg !8595

if.end1629:                                       ; preds = %if.then1626, %land.lhs.true1623, %land.lhs.true1620, %if.end1618
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1594) #18, !dbg !8566
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1593) #18, !dbg !8566
  br label %cleanup2304

if.end1632:                                       ; preds = %land.lhs.true1588, %if.end1585
  %920 = load i64, ptr %klen, align 8, !dbg !8597, !tbaa !2663
  %cmp1633 = icmp eq i64 26, %920, !dbg !8597
  br i1 %cmp1633, label %land.lhs.true1635, label %if.end1679, !dbg !8597

land.lhs.true1635:                                ; preds = %if.end1632
  %921 = load ptr, ptr %k, align 8, !dbg !8597, !tbaa !2658
  %922 = load i64, ptr %klen, align 8, !dbg !8597, !tbaa !2663
  %call1636 = call i32 @strncmp(ptr noundef @.str.133, ptr noundef %921, i64 noundef %922) #22, !dbg !8597
  %cmp1637 = icmp eq i32 %call1636, 0, !dbg !8597
  br i1 %cmp1637, label %if.then1639, label %if.end1679, !dbg !8598

if.then1639:                                      ; preds = %land.lhs.true1635
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1640) #18, !dbg !8599
  tail call void @llvm.dbg.declare(metadata ptr %mv1640, metadata !2288, metadata !DIExpression()), !dbg !8599
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1641) #18, !dbg !8599
  tail call void @llvm.dbg.declare(metadata ptr %end1641, metadata !2291, metadata !DIExpression()), !dbg !8599
  call void @set_errno(i32 noundef 0), !dbg !8599
  %923 = load ptr, ptr %v, align 8, !dbg !8599, !tbaa !2658
  %call1642 = call i64 @malloc_strtoumax(ptr noundef %923, ptr noundef %end1641, i32 noundef 0), !dbg !8599
  store i64 %call1642, ptr %mv1640, align 8, !dbg !8599, !tbaa !2663
  %call1643 = call i32 @get_errno(), !dbg !8600
  %cmp1644 = icmp ne i32 %call1643, 0, !dbg !8600
  br i1 %cmp1644, label %if.then1650, label %lor.lhs.false1646, !dbg !8600

lor.lhs.false1646:                                ; preds = %if.then1639
  %924 = load ptr, ptr %end1641, align 8, !dbg !8600, !tbaa !2658
  %925 = ptrtoint ptr %924 to i64, !dbg !8600
  %926 = load ptr, ptr %v, align 8, !dbg !8600, !tbaa !2658
  %927 = ptrtoint ptr %926 to i64, !dbg !8600
  %sub1647 = sub i64 %925, %927, !dbg !8600
  %928 = load i64, ptr %vlen, align 8, !dbg !8600, !tbaa !2663
  %cmp1648 = icmp ne i64 %sub1647, %928, !dbg !8600
  br i1 %cmp1648, label %if.then1650, label %if.else1654, !dbg !8599

if.then1650:                                      ; preds = %lor.lhs.false1646, %if.then1639
  %929 = load i8, ptr %initial_call.addr, align 1, !dbg !8602, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1651 = trunc i8 %929 to i1, !dbg !8602
  br i1 %tobool1651, label %if.end1653, label %if.then1652, !dbg !8605

if.then1652:                                      ; preds = %if.then1650
  %930 = load ptr, ptr %k, align 8, !dbg !8606, !tbaa !2658
  %931 = load i64, ptr %klen, align 8, !dbg !8606, !tbaa !2663
  %932 = load ptr, ptr %v, align 8, !dbg !8606, !tbaa !2658
  %933 = load i64, ptr %vlen, align 8, !dbg !8606, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %930, i64 noundef %931, ptr noundef %932, i64 noundef %933), !dbg !8606
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8606, !tbaa !2695
  br label %if.end1653, !dbg !8606

if.end1653:                                       ; preds = %if.then1652, %if.then1650
  br label %if.end1665, !dbg !8605

if.else1654:                                      ; preds = %lor.lhs.false1646
  %934 = load i64, ptr %mv1640, align 8, !dbg !8608, !tbaa !2663
  %cmp1655 = icmp ult i64 %934, 4096, !dbg !8608
  br i1 %cmp1655, label %if.then1657, label %if.else1658, !dbg !8612

if.then1657:                                      ; preds = %if.else1654
  store i64 4096, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 1), align 8, !dbg !8613, !tbaa !8615
  br label %if.end1664, !dbg !8613

if.else1658:                                      ; preds = %if.else1654
  %935 = load i64, ptr %mv1640, align 8, !dbg !8616, !tbaa !2663
  %cmp1659 = icmp ugt i64 %935, 2097152, !dbg !8616
  br i1 %cmp1659, label %if.then1661, label %if.else1662, !dbg !8608

if.then1661:                                      ; preds = %if.else1658
  store i64 2097152, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 1), align 8, !dbg !8618, !tbaa !8615
  br label %if.end1663, !dbg !8618

if.else1662:                                      ; preds = %if.else1658
  %936 = load i64, ptr %mv1640, align 8, !dbg !8620, !tbaa !2663
  store i64 %936, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 1), align 8, !dbg !8620, !tbaa !8615
  br label %if.end1663

if.end1663:                                       ; preds = %if.else1662, %if.then1661
  br label %if.end1664

if.end1664:                                       ; preds = %if.end1663, %if.then1657
  br label %if.end1665

if.end1665:                                       ; preds = %if.end1664, %if.end1653
  %937 = load i8, ptr %initial_call.addr, align 1, !dbg !8622, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1666 = trunc i8 %937 to i1, !dbg !8622
  br i1 %tobool1666, label %if.end1676, label %land.lhs.true1667, !dbg !8622

land.lhs.true1667:                                ; preds = %if.end1665
  %938 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8622, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1668 = trunc i8 %938 to i1, !dbg !8622
  br i1 %tobool1668, label %land.lhs.true1670, label %if.end1676, !dbg !8622

land.lhs.true1670:                                ; preds = %land.lhs.true1667
  %939 = load i8, ptr %cur_opt_valid, align 1, !dbg !8622, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1671 = trunc i8 %939 to i1, !dbg !8622
  br i1 %tobool1671, label %if.then1673, label %if.end1676, !dbg !8625

if.then1673:                                      ; preds = %land.lhs.true1670
  %940 = load i64, ptr %klen, align 8, !dbg !8626, !tbaa !2663
  %conv1674 = trunc i64 %940 to i32, !dbg !8626
  %941 = load ptr, ptr %k, align 8, !dbg !8626, !tbaa !2658
  %942 = load i64, ptr %vlen, align 8, !dbg !8626, !tbaa !2663
  %conv1675 = trunc i64 %942 to i32, !dbg !8626
  %943 = load ptr, ptr %v, align 8, !dbg !8626, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1674, ptr noundef %941, i32 noundef %conv1675, ptr noundef %943), !dbg !8626
  br label %if.end1676, !dbg !8626

if.end1676:                                       ; preds = %if.then1673, %land.lhs.true1670, %land.lhs.true1667, %if.end1665
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1641) #18, !dbg !8597
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1640) #18, !dbg !8597
  br label %cleanup2304

if.end1679:                                       ; preds = %land.lhs.true1635, %if.end1632
  %944 = load i64, ptr %klen, align 8, !dbg !8628, !tbaa !2663
  %cmp1680 = icmp eq i64 32, %944, !dbg !8628
  br i1 %cmp1680, label %land.lhs.true1682, label %if.end1723, !dbg !8628

land.lhs.true1682:                                ; preds = %if.end1679
  %945 = load ptr, ptr %k, align 8, !dbg !8628, !tbaa !2658
  %946 = load i64, ptr %klen, align 8, !dbg !8628, !tbaa !2663
  %call1683 = call i32 @strncmp(ptr noundef @.str.134, ptr noundef %945, i64 noundef %946) #22, !dbg !8628
  %cmp1684 = icmp eq i32 %call1683, 0, !dbg !8628
  br i1 %cmp1684, label %if.then1686, label %if.end1723, !dbg !8629

if.then1686:                                      ; preds = %land.lhs.true1682
  call void @llvm.lifetime.start.p0(i64 4, ptr %ratio) #18, !dbg !8630
  tail call void @llvm.dbg.declare(metadata ptr %ratio, metadata !2292, metadata !DIExpression()), !dbg !8631
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1687) #18, !dbg !8632
  tail call void @llvm.dbg.declare(metadata ptr %end1687, metadata !2295, metadata !DIExpression()), !dbg !8633
  call void @llvm.lifetime.start.p0(i64 1, ptr %err1688) #18, !dbg !8634
  tail call void @llvm.dbg.declare(metadata ptr %err1688, metadata !2296, metadata !DIExpression()), !dbg !8635
  %947 = load ptr, ptr %v, align 8, !dbg !8636, !tbaa !2658
  %call1689 = call zeroext i1 @fxp_parse(ptr noundef %ratio, ptr noundef %947, ptr noundef %end1687), !dbg !8637
  %frombool1690 = zext i1 %call1689 to i8, !dbg !8635
  store i8 %frombool1690, ptr %err1688, align 1, !dbg !8635, !tbaa !2695
  %948 = load i8, ptr %err1688, align 1, !dbg !8638, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1691 = trunc i8 %948 to i1, !dbg !8638
  br i1 %tobool1691, label %if.then1702, label %lor.lhs.false1693, !dbg !8640

lor.lhs.false1693:                                ; preds = %if.then1686
  %949 = load ptr, ptr %end1687, align 8, !dbg !8641, !tbaa !2658
  %950 = load ptr, ptr %v, align 8, !dbg !8642, !tbaa !2658
  %sub.ptr.lhs.cast1694 = ptrtoint ptr %949 to i64, !dbg !8643
  %sub.ptr.rhs.cast1695 = ptrtoint ptr %950 to i64, !dbg !8643
  %sub.ptr.sub1696 = sub i64 %sub.ptr.lhs.cast1694, %sub.ptr.rhs.cast1695, !dbg !8643
  %951 = load i64, ptr %vlen, align 8, !dbg !8644, !tbaa !2663
  %cmp1697 = icmp ne i64 %sub.ptr.sub1696, %951, !dbg !8645
  br i1 %cmp1697, label %if.then1702, label %lor.lhs.false1699, !dbg !8646

lor.lhs.false1699:                                ; preds = %lor.lhs.false1693
  %952 = load i32, ptr %ratio, align 4, !dbg !8647, !tbaa !2791
  %cmp1700 = icmp ugt i32 %952, 65536, !dbg !8648
  br i1 %cmp1700, label %if.then1702, label %if.else1706, !dbg !8649

if.then1702:                                      ; preds = %lor.lhs.false1699, %lor.lhs.false1693, %if.then1686
  %953 = load i8, ptr %initial_call.addr, align 1, !dbg !8650, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1703 = trunc i8 %953 to i1, !dbg !8650
  br i1 %tobool1703, label %if.end1705, label %if.then1704, !dbg !8653

if.then1704:                                      ; preds = %if.then1702
  %954 = load ptr, ptr %k, align 8, !dbg !8654, !tbaa !2658
  %955 = load i64, ptr %klen, align 8, !dbg !8654, !tbaa !2663
  %956 = load ptr, ptr %v, align 8, !dbg !8654, !tbaa !2658
  %957 = load i64, ptr %vlen, align 8, !dbg !8654, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %954, i64 noundef %955, ptr noundef %956, i64 noundef %957), !dbg !8654
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8654, !tbaa !2695
  br label %if.end1705, !dbg !8654

if.end1705:                                       ; preds = %if.then1704, %if.then1702
  br label %if.end1708, !dbg !8656

if.else1706:                                      ; preds = %lor.lhs.false1699
  %958 = load i32, ptr %ratio, align 4, !dbg !8657, !tbaa !2791
  %call1707 = call i64 @fxp_mul_frac(i64 noundef 2097152, i32 noundef %958), !dbg !8659
  store i64 %call1707, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 1), align 8, !dbg !8660, !tbaa !8615
  br label %if.end1708

if.end1708:                                       ; preds = %if.else1706, %if.end1705
  %959 = load i8, ptr %initial_call.addr, align 1, !dbg !8661, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1709 = trunc i8 %959 to i1, !dbg !8661
  br i1 %tobool1709, label %if.end1719, label %land.lhs.true1710, !dbg !8661

land.lhs.true1710:                                ; preds = %if.end1708
  %960 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8661, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1711 = trunc i8 %960 to i1, !dbg !8661
  br i1 %tobool1711, label %land.lhs.true1713, label %if.end1719, !dbg !8661

land.lhs.true1713:                                ; preds = %land.lhs.true1710
  %961 = load i8, ptr %cur_opt_valid, align 1, !dbg !8661, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1714 = trunc i8 %961 to i1, !dbg !8661
  br i1 %tobool1714, label %if.then1716, label %if.end1719, !dbg !8664

if.then1716:                                      ; preds = %land.lhs.true1713
  %962 = load i64, ptr %klen, align 8, !dbg !8665, !tbaa !2663
  %conv1717 = trunc i64 %962 to i32, !dbg !8665
  %963 = load ptr, ptr %k, align 8, !dbg !8665, !tbaa !2658
  %964 = load i64, ptr %vlen, align 8, !dbg !8665, !tbaa !2663
  %conv1718 = trunc i64 %964 to i32, !dbg !8665
  %965 = load ptr, ptr %v, align 8, !dbg !8665, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1717, ptr noundef %963, i32 noundef %conv1718, ptr noundef %965), !dbg !8665
  br label %if.end1719, !dbg !8665

if.end1719:                                       ; preds = %if.then1716, %land.lhs.true1713, %land.lhs.true1710, %if.end1708
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr %err1688) #18, !dbg !8667
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1687) #18, !dbg !8667
  call void @llvm.lifetime.end.p0(i64 4, ptr %ratio) #18, !dbg !8667
  br label %cleanup2304

if.end1723:                                       ; preds = %land.lhs.true1682, %if.end1679
  %966 = load i64, ptr %klen, align 8, !dbg !8668, !tbaa !2663
  %cmp1724 = icmp eq i64 19, %966, !dbg !8668
  br i1 %cmp1724, label %land.lhs.true1726, label %if.end1760, !dbg !8668

land.lhs.true1726:                                ; preds = %if.end1723
  %967 = load ptr, ptr %k, align 8, !dbg !8668, !tbaa !2658
  %968 = load i64, ptr %klen, align 8, !dbg !8668, !tbaa !2663
  %call1727 = call i32 @strncmp(ptr noundef @.str.135, ptr noundef %967, i64 noundef %968) #22, !dbg !8668
  %cmp1728 = icmp eq i32 %call1727, 0, !dbg !8668
  br i1 %cmp1728, label %if.then1730, label %if.end1760, !dbg !8669

if.then1730:                                      ; preds = %land.lhs.true1726
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1731) #18, !dbg !8670
  tail call void @llvm.dbg.declare(metadata ptr %mv1731, metadata !2297, metadata !DIExpression()), !dbg !8670
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1732) #18, !dbg !8670
  tail call void @llvm.dbg.declare(metadata ptr %end1732, metadata !2300, metadata !DIExpression()), !dbg !8670
  call void @set_errno(i32 noundef 0), !dbg !8670
  %969 = load ptr, ptr %v, align 8, !dbg !8670, !tbaa !2658
  %call1733 = call i64 @malloc_strtoumax(ptr noundef %969, ptr noundef %end1732, i32 noundef 0), !dbg !8670
  store i64 %call1733, ptr %mv1731, align 8, !dbg !8670, !tbaa !2663
  %call1734 = call i32 @get_errno(), !dbg !8671
  %cmp1735 = icmp ne i32 %call1734, 0, !dbg !8671
  br i1 %cmp1735, label %if.then1741, label %lor.lhs.false1737, !dbg !8671

lor.lhs.false1737:                                ; preds = %if.then1730
  %970 = load ptr, ptr %end1732, align 8, !dbg !8671, !tbaa !2658
  %971 = ptrtoint ptr %970 to i64, !dbg !8671
  %972 = load ptr, ptr %v, align 8, !dbg !8671, !tbaa !2658
  %973 = ptrtoint ptr %972 to i64, !dbg !8671
  %sub1738 = sub i64 %971, %973, !dbg !8671
  %974 = load i64, ptr %vlen, align 8, !dbg !8671, !tbaa !2663
  %cmp1739 = icmp ne i64 %sub1738, %974, !dbg !8671
  br i1 %cmp1739, label %if.then1741, label %if.else1745, !dbg !8670

if.then1741:                                      ; preds = %lor.lhs.false1737, %if.then1730
  %975 = load i8, ptr %initial_call.addr, align 1, !dbg !8673, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1742 = trunc i8 %975 to i1, !dbg !8673
  br i1 %tobool1742, label %if.end1744, label %if.then1743, !dbg !8676

if.then1743:                                      ; preds = %if.then1741
  %976 = load ptr, ptr %k, align 8, !dbg !8677, !tbaa !2658
  %977 = load i64, ptr %klen, align 8, !dbg !8677, !tbaa !2663
  %978 = load ptr, ptr %v, align 8, !dbg !8677, !tbaa !2658
  %979 = load i64, ptr %vlen, align 8, !dbg !8677, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %976, i64 noundef %977, ptr noundef %978, i64 noundef %979), !dbg !8677
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8677, !tbaa !2695
  br label %if.end1744, !dbg !8677

if.end1744:                                       ; preds = %if.then1743, %if.then1741
  br label %if.end1746, !dbg !8676

if.else1745:                                      ; preds = %lor.lhs.false1737
  %980 = load i64, ptr %mv1731, align 8, !dbg !8679, !tbaa !2663
  store i64 %980, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 4), align 8, !dbg !8679, !tbaa !8684
  br label %if.end1746

if.end1746:                                       ; preds = %if.else1745, %if.end1744
  %981 = load i8, ptr %initial_call.addr, align 1, !dbg !8685, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1747 = trunc i8 %981 to i1, !dbg !8685
  br i1 %tobool1747, label %if.end1757, label %land.lhs.true1748, !dbg !8685

land.lhs.true1748:                                ; preds = %if.end1746
  %982 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8685, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1749 = trunc i8 %982 to i1, !dbg !8685
  br i1 %tobool1749, label %land.lhs.true1751, label %if.end1757, !dbg !8685

land.lhs.true1751:                                ; preds = %land.lhs.true1748
  %983 = load i8, ptr %cur_opt_valid, align 1, !dbg !8685, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1752 = trunc i8 %983 to i1, !dbg !8685
  br i1 %tobool1752, label %if.then1754, label %if.end1757, !dbg !8688

if.then1754:                                      ; preds = %land.lhs.true1751
  %984 = load i64, ptr %klen, align 8, !dbg !8689, !tbaa !2663
  %conv1755 = trunc i64 %984 to i32, !dbg !8689
  %985 = load ptr, ptr %k, align 8, !dbg !8689, !tbaa !2658
  %986 = load i64, ptr %vlen, align 8, !dbg !8689, !tbaa !2663
  %conv1756 = trunc i64 %986 to i32, !dbg !8689
  %987 = load ptr, ptr %v, align 8, !dbg !8689, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1755, ptr noundef %985, i32 noundef %conv1756, ptr noundef %987), !dbg !8689
  br label %if.end1757, !dbg !8689

if.end1757:                                       ; preds = %if.then1754, %land.lhs.true1751, %land.lhs.true1748, %if.end1746
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1732) #18, !dbg !8668
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1731) #18, !dbg !8668
  br label %cleanup2304

if.end1760:                                       ; preds = %land.lhs.true1726, %if.end1723
  %988 = load i64, ptr %klen, align 8, !dbg !8691, !tbaa !2663
  %cmp1761 = icmp eq i64 25, %988, !dbg !8691
  br i1 %cmp1761, label %land.lhs.true1763, label %if.end1797, !dbg !8691

land.lhs.true1763:                                ; preds = %if.end1760
  %989 = load ptr, ptr %k, align 8, !dbg !8691, !tbaa !2658
  %990 = load i64, ptr %klen, align 8, !dbg !8691, !tbaa !2663
  %call1764 = call i32 @strncmp(ptr noundef @.str.136, ptr noundef %989, i64 noundef %990) #22, !dbg !8691
  %cmp1765 = icmp eq i32 %call1764, 0, !dbg !8691
  br i1 %cmp1765, label %if.then1767, label %if.end1797, !dbg !8692

if.then1767:                                      ; preds = %land.lhs.true1763
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1768) #18, !dbg !8693
  tail call void @llvm.dbg.declare(metadata ptr %mv1768, metadata !2301, metadata !DIExpression()), !dbg !8693
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1769) #18, !dbg !8693
  tail call void @llvm.dbg.declare(metadata ptr %end1769, metadata !2304, metadata !DIExpression()), !dbg !8693
  call void @set_errno(i32 noundef 0), !dbg !8693
  %991 = load ptr, ptr %v, align 8, !dbg !8693, !tbaa !2658
  %call1770 = call i64 @malloc_strtoumax(ptr noundef %991, ptr noundef %end1769, i32 noundef 0), !dbg !8693
  store i64 %call1770, ptr %mv1768, align 8, !dbg !8693, !tbaa !2663
  %call1771 = call i32 @get_errno(), !dbg !8694
  %cmp1772 = icmp ne i32 %call1771, 0, !dbg !8694
  br i1 %cmp1772, label %if.then1778, label %lor.lhs.false1774, !dbg !8694

lor.lhs.false1774:                                ; preds = %if.then1767
  %992 = load ptr, ptr %end1769, align 8, !dbg !8694, !tbaa !2658
  %993 = ptrtoint ptr %992 to i64, !dbg !8694
  %994 = load ptr, ptr %v, align 8, !dbg !8694, !tbaa !2658
  %995 = ptrtoint ptr %994 to i64, !dbg !8694
  %sub1775 = sub i64 %993, %995, !dbg !8694
  %996 = load i64, ptr %vlen, align 8, !dbg !8694, !tbaa !2663
  %cmp1776 = icmp ne i64 %sub1775, %996, !dbg !8694
  br i1 %cmp1776, label %if.then1778, label %if.else1782, !dbg !8693

if.then1778:                                      ; preds = %lor.lhs.false1774, %if.then1767
  %997 = load i8, ptr %initial_call.addr, align 1, !dbg !8696, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1779 = trunc i8 %997 to i1, !dbg !8696
  br i1 %tobool1779, label %if.end1781, label %if.then1780, !dbg !8699

if.then1780:                                      ; preds = %if.then1778
  %998 = load ptr, ptr %k, align 8, !dbg !8700, !tbaa !2658
  %999 = load i64, ptr %klen, align 8, !dbg !8700, !tbaa !2663
  %1000 = load ptr, ptr %v, align 8, !dbg !8700, !tbaa !2658
  %1001 = load i64, ptr %vlen, align 8, !dbg !8700, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %998, i64 noundef %999, ptr noundef %1000, i64 noundef %1001), !dbg !8700
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8700, !tbaa !2695
  br label %if.end1781, !dbg !8700

if.end1781:                                       ; preds = %if.then1780, %if.then1778
  br label %if.end1783, !dbg !8699

if.else1782:                                      ; preds = %lor.lhs.false1774
  %1002 = load i64, ptr %mv1768, align 8, !dbg !8702, !tbaa !2663
  store i64 %1002, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 5), align 8, !dbg !8702, !tbaa !8707
  br label %if.end1783

if.end1783:                                       ; preds = %if.else1782, %if.end1781
  %1003 = load i8, ptr %initial_call.addr, align 1, !dbg !8708, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1784 = trunc i8 %1003 to i1, !dbg !8708
  br i1 %tobool1784, label %if.end1794, label %land.lhs.true1785, !dbg !8708

land.lhs.true1785:                                ; preds = %if.end1783
  %1004 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8708, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1786 = trunc i8 %1004 to i1, !dbg !8708
  br i1 %tobool1786, label %land.lhs.true1788, label %if.end1794, !dbg !8708

land.lhs.true1788:                                ; preds = %land.lhs.true1785
  %1005 = load i8, ptr %cur_opt_valid, align 1, !dbg !8708, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1789 = trunc i8 %1005 to i1, !dbg !8708
  br i1 %tobool1789, label %if.then1791, label %if.end1794, !dbg !8711

if.then1791:                                      ; preds = %land.lhs.true1788
  %1006 = load i64, ptr %klen, align 8, !dbg !8712, !tbaa !2663
  %conv1792 = trunc i64 %1006 to i32, !dbg !8712
  %1007 = load ptr, ptr %k, align 8, !dbg !8712, !tbaa !2658
  %1008 = load i64, ptr %vlen, align 8, !dbg !8712, !tbaa !2663
  %conv1793 = trunc i64 %1008 to i32, !dbg !8712
  %1009 = load ptr, ptr %v, align 8, !dbg !8712, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1792, ptr noundef %1007, i32 noundef %conv1793, ptr noundef %1009), !dbg !8712
  br label %if.end1794, !dbg !8712

if.end1794:                                       ; preds = %if.then1791, %land.lhs.true1788, %land.lhs.true1785, %if.end1783
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1769) #18, !dbg !8691
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1768) #18, !dbg !8691
  br label %cleanup2304

if.end1797:                                       ; preds = %land.lhs.true1763, %if.end1760
  %1010 = load i64, ptr %klen, align 8, !dbg !8714, !tbaa !2663
  %cmp1798 = icmp eq i64 14, %1010, !dbg !8714
  br i1 %cmp1798, label %land.lhs.true1800, label %if.end1857, !dbg !8714

land.lhs.true1800:                                ; preds = %if.end1797
  %1011 = load ptr, ptr %k, align 8, !dbg !8714, !tbaa !2658
  %1012 = load i64, ptr %klen, align 8, !dbg !8714, !tbaa !2663
  %call1801 = call i32 @strncmp(ptr noundef @.str.137, ptr noundef %1011, i64 noundef %1012) #22, !dbg !8714
  %cmp1802 = icmp eq i32 %call1801, 0, !dbg !8714
  br i1 %cmp1802, label %if.then1804, label %if.end1857, !dbg !8715

if.then1804:                                      ; preds = %land.lhs.true1800
  %1013 = load i64, ptr %vlen, align 8, !dbg !8716, !tbaa !2663
  %cmp1805 = icmp eq i64 2, %1013, !dbg !8716
  br i1 %cmp1805, label %land.lhs.true1807, label %if.end1823, !dbg !8716

land.lhs.true1807:                                ; preds = %if.then1804
  %1014 = load ptr, ptr %v, align 8, !dbg !8716, !tbaa !2658
  %1015 = load i64, ptr %vlen, align 8, !dbg !8716, !tbaa !2663
  %call1808 = call i32 @strncmp(ptr noundef @.str.138, ptr noundef %1014, i64 noundef %1015) #22, !dbg !8716
  %cmp1809 = icmp eq i32 %call1808, 0, !dbg !8716
  br i1 %cmp1809, label %if.then1811, label %if.end1823, !dbg !8718

if.then1811:                                      ; preds = %land.lhs.true1807
  store i32 -1, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 2), align 8, !dbg !8719, !tbaa !8721
  %1016 = load i8, ptr %initial_call.addr, align 1, !dbg !8722, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1812 = trunc i8 %1016 to i1, !dbg !8722
  br i1 %tobool1812, label %if.end1822, label %land.lhs.true1813, !dbg !8722

land.lhs.true1813:                                ; preds = %if.then1811
  %1017 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8722, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1814 = trunc i8 %1017 to i1, !dbg !8722
  br i1 %tobool1814, label %land.lhs.true1816, label %if.end1822, !dbg !8722

land.lhs.true1816:                                ; preds = %land.lhs.true1813
  %1018 = load i8, ptr %cur_opt_valid, align 1, !dbg !8722, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1817 = trunc i8 %1018 to i1, !dbg !8722
  br i1 %tobool1817, label %if.then1819, label %if.end1822, !dbg !8725

if.then1819:                                      ; preds = %land.lhs.true1816
  %1019 = load i64, ptr %klen, align 8, !dbg !8726, !tbaa !2663
  %conv1820 = trunc i64 %1019 to i32, !dbg !8726
  %1020 = load ptr, ptr %k, align 8, !dbg !8726, !tbaa !2658
  %1021 = load i64, ptr %vlen, align 8, !dbg !8726, !tbaa !2663
  %conv1821 = trunc i64 %1021 to i32, !dbg !8726
  %1022 = load ptr, ptr %v, align 8, !dbg !8726, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1820, ptr noundef %1020, i32 noundef %conv1821, ptr noundef %1022), !dbg !8726
  br label %if.end1822, !dbg !8726

if.end1822:                                       ; preds = %if.then1819, %land.lhs.true1816, %land.lhs.true1813, %if.then1811
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8725, !llvm.loop !7444

if.end1823:                                       ; preds = %land.lhs.true1807, %if.then1804
  call void @llvm.lifetime.start.p0(i64 4, ptr %ratio1824) #18, !dbg !8728
  tail call void @llvm.dbg.declare(metadata ptr %ratio1824, metadata !2305, metadata !DIExpression()), !dbg !8729
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1825) #18, !dbg !8730
  tail call void @llvm.dbg.declare(metadata ptr %end1825, metadata !2308, metadata !DIExpression()), !dbg !8731
  call void @llvm.lifetime.start.p0(i64 1, ptr %err1826) #18, !dbg !8732
  tail call void @llvm.dbg.declare(metadata ptr %err1826, metadata !2309, metadata !DIExpression()), !dbg !8733
  %1023 = load ptr, ptr %v, align 8, !dbg !8734, !tbaa !2658
  %call1827 = call zeroext i1 @fxp_parse(ptr noundef %ratio1824, ptr noundef %1023, ptr noundef %end1825), !dbg !8735
  %frombool1828 = zext i1 %call1827 to i8, !dbg !8733
  store i8 %frombool1828, ptr %err1826, align 1, !dbg !8733, !tbaa !2695
  %1024 = load i8, ptr %err1826, align 1, !dbg !8736, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1829 = trunc i8 %1024 to i1, !dbg !8736
  br i1 %tobool1829, label %if.then1837, label %lor.lhs.false1831, !dbg !8738

lor.lhs.false1831:                                ; preds = %if.end1823
  %1025 = load ptr, ptr %end1825, align 8, !dbg !8739, !tbaa !2658
  %1026 = load ptr, ptr %v, align 8, !dbg !8740, !tbaa !2658
  %sub.ptr.lhs.cast1832 = ptrtoint ptr %1025 to i64, !dbg !8741
  %sub.ptr.rhs.cast1833 = ptrtoint ptr %1026 to i64, !dbg !8741
  %sub.ptr.sub1834 = sub i64 %sub.ptr.lhs.cast1832, %sub.ptr.rhs.cast1833, !dbg !8741
  %1027 = load i64, ptr %vlen, align 8, !dbg !8742, !tbaa !2663
  %cmp1835 = icmp ne i64 %sub.ptr.sub1834, %1027, !dbg !8743
  br i1 %cmp1835, label %if.then1837, label %if.else1841, !dbg !8744

if.then1837:                                      ; preds = %lor.lhs.false1831, %if.end1823
  %1028 = load i8, ptr %initial_call.addr, align 1, !dbg !8745, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1838 = trunc i8 %1028 to i1, !dbg !8745
  br i1 %tobool1838, label %if.end1840, label %if.then1839, !dbg !8748

if.then1839:                                      ; preds = %if.then1837
  %1029 = load ptr, ptr %k, align 8, !dbg !8749, !tbaa !2658
  %1030 = load i64, ptr %klen, align 8, !dbg !8749, !tbaa !2663
  %1031 = load ptr, ptr %v, align 8, !dbg !8749, !tbaa !2658
  %1032 = load i64, ptr %vlen, align 8, !dbg !8749, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1029, i64 noundef %1030, ptr noundef %1031, i64 noundef %1032), !dbg !8749
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8749, !tbaa !2695
  br label %if.end1840, !dbg !8749

if.end1840:                                       ; preds = %if.then1839, %if.then1837
  br label %if.end1842, !dbg !8751

if.else1841:                                      ; preds = %lor.lhs.false1831
  %1033 = load i32, ptr %ratio1824, align 4, !dbg !8752, !tbaa !2791
  store i32 %1033, ptr getelementptr inbounds (%struct.hpa_shard_opts_s, ptr @opt_hpa_opts, i32 0, i32 2), align 8, !dbg !8754, !tbaa !8721
  br label %if.end1842

if.end1842:                                       ; preds = %if.else1841, %if.end1840
  %1034 = load i8, ptr %initial_call.addr, align 1, !dbg !8755, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1843 = trunc i8 %1034 to i1, !dbg !8755
  br i1 %tobool1843, label %if.end1853, label %land.lhs.true1844, !dbg !8755

land.lhs.true1844:                                ; preds = %if.end1842
  %1035 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8755, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1845 = trunc i8 %1035 to i1, !dbg !8755
  br i1 %tobool1845, label %land.lhs.true1847, label %if.end1853, !dbg !8755

land.lhs.true1847:                                ; preds = %land.lhs.true1844
  %1036 = load i8, ptr %cur_opt_valid, align 1, !dbg !8755, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1848 = trunc i8 %1036 to i1, !dbg !8755
  br i1 %tobool1848, label %if.then1850, label %if.end1853, !dbg !8758

if.then1850:                                      ; preds = %land.lhs.true1847
  %1037 = load i64, ptr %klen, align 8, !dbg !8759, !tbaa !2663
  %conv1851 = trunc i64 %1037 to i32, !dbg !8759
  %1038 = load ptr, ptr %k, align 8, !dbg !8759, !tbaa !2658
  %1039 = load i64, ptr %vlen, align 8, !dbg !8759, !tbaa !2663
  %conv1852 = trunc i64 %1039 to i32, !dbg !8759
  %1040 = load ptr, ptr %v, align 8, !dbg !8759, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1851, ptr noundef %1038, i32 noundef %conv1852, ptr noundef %1040), !dbg !8759
  br label %if.end1853, !dbg !8759

if.end1853:                                       ; preds = %if.then1850, %land.lhs.true1847, %land.lhs.true1844, %if.end1842
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr %err1826) #18, !dbg !8761
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1825) #18, !dbg !8761
  call void @llvm.lifetime.end.p0(i64 4, ptr %ratio1824) #18, !dbg !8761
  br label %cleanup2304

if.end1857:                                       ; preds = %land.lhs.true1800, %if.end1797
  %1041 = load i64, ptr %klen, align 8, !dbg !8762, !tbaa !2663
  %cmp1858 = icmp eq i64 15, %1041, !dbg !8762
  br i1 %cmp1858, label %land.lhs.true1860, label %if.end1899, !dbg !8762

land.lhs.true1860:                                ; preds = %if.end1857
  %1042 = load ptr, ptr %k, align 8, !dbg !8762, !tbaa !2658
  %1043 = load i64, ptr %klen, align 8, !dbg !8762, !tbaa !2663
  %call1861 = call i32 @strncmp(ptr noundef @.str.139, ptr noundef %1042, i64 noundef %1043) #22, !dbg !8762
  %cmp1862 = icmp eq i32 %call1861, 0, !dbg !8762
  br i1 %cmp1862, label %if.then1864, label %if.end1899, !dbg !8763

if.then1864:                                      ; preds = %land.lhs.true1860
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1865) #18, !dbg !8764
  tail call void @llvm.dbg.declare(metadata ptr %mv1865, metadata !2310, metadata !DIExpression()), !dbg !8764
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1866) #18, !dbg !8764
  tail call void @llvm.dbg.declare(metadata ptr %end1866, metadata !2313, metadata !DIExpression()), !dbg !8764
  call void @set_errno(i32 noundef 0), !dbg !8764
  %1044 = load ptr, ptr %v, align 8, !dbg !8764, !tbaa !2658
  %call1867 = call i64 @malloc_strtoumax(ptr noundef %1044, ptr noundef %end1866, i32 noundef 0), !dbg !8764
  store i64 %call1867, ptr %mv1865, align 8, !dbg !8764, !tbaa !2663
  %call1868 = call i32 @get_errno(), !dbg !8765
  %cmp1869 = icmp ne i32 %call1868, 0, !dbg !8765
  br i1 %cmp1869, label %if.then1875, label %lor.lhs.false1871, !dbg !8765

lor.lhs.false1871:                                ; preds = %if.then1864
  %1045 = load ptr, ptr %end1866, align 8, !dbg !8765, !tbaa !2658
  %1046 = ptrtoint ptr %1045 to i64, !dbg !8765
  %1047 = load ptr, ptr %v, align 8, !dbg !8765, !tbaa !2658
  %1048 = ptrtoint ptr %1047 to i64, !dbg !8765
  %sub1872 = sub i64 %1046, %1048, !dbg !8765
  %1049 = load i64, ptr %vlen, align 8, !dbg !8765, !tbaa !2663
  %cmp1873 = icmp ne i64 %sub1872, %1049, !dbg !8765
  br i1 %cmp1873, label %if.then1875, label %if.else1879, !dbg !8764

if.then1875:                                      ; preds = %lor.lhs.false1871, %if.then1864
  %1050 = load i8, ptr %initial_call.addr, align 1, !dbg !8767, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1876 = trunc i8 %1050 to i1, !dbg !8767
  br i1 %tobool1876, label %if.end1878, label %if.then1877, !dbg !8770

if.then1877:                                      ; preds = %if.then1875
  %1051 = load ptr, ptr %k, align 8, !dbg !8771, !tbaa !2658
  %1052 = load i64, ptr %klen, align 8, !dbg !8771, !tbaa !2663
  %1053 = load ptr, ptr %v, align 8, !dbg !8771, !tbaa !2658
  %1054 = load i64, ptr %vlen, align 8, !dbg !8771, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1051, i64 noundef %1052, ptr noundef %1053, i64 noundef %1054), !dbg !8771
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8771, !tbaa !2695
  br label %if.end1878, !dbg !8771

if.end1878:                                       ; preds = %if.then1877, %if.then1875
  br label %if.end1885, !dbg !8770

if.else1879:                                      ; preds = %lor.lhs.false1871
  %1055 = load i64, ptr %mv1865, align 8, !dbg !8773, !tbaa !2663
  %cmp1880 = icmp ult i64 %1055, 0, !dbg !8773
  br i1 %cmp1880, label %if.then1882, label %if.else1883, !dbg !8777

if.then1882:                                      ; preds = %if.else1879
  store i64 0, ptr @opt_hpa_sec_opts, align 8, !dbg !8778, !tbaa !8780
  br label %if.end1884, !dbg !8778

if.else1883:                                      ; preds = %if.else1879
  %1056 = load i64, ptr %mv1865, align 8, !dbg !8781, !tbaa !2663
  store i64 %1056, ptr @opt_hpa_sec_opts, align 8, !dbg !8781, !tbaa !8780
  br label %if.end1884

if.end1884:                                       ; preds = %if.else1883, %if.then1882
  br label %if.end1885

if.end1885:                                       ; preds = %if.end1884, %if.end1878
  %1057 = load i8, ptr %initial_call.addr, align 1, !dbg !8784, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1886 = trunc i8 %1057 to i1, !dbg !8784
  br i1 %tobool1886, label %if.end1896, label %land.lhs.true1887, !dbg !8784

land.lhs.true1887:                                ; preds = %if.end1885
  %1058 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8784, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1888 = trunc i8 %1058 to i1, !dbg !8784
  br i1 %tobool1888, label %land.lhs.true1890, label %if.end1896, !dbg !8784

land.lhs.true1890:                                ; preds = %land.lhs.true1887
  %1059 = load i8, ptr %cur_opt_valid, align 1, !dbg !8784, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1891 = trunc i8 %1059 to i1, !dbg !8784
  br i1 %tobool1891, label %if.then1893, label %if.end1896, !dbg !8787

if.then1893:                                      ; preds = %land.lhs.true1890
  %1060 = load i64, ptr %klen, align 8, !dbg !8788, !tbaa !2663
  %conv1894 = trunc i64 %1060 to i32, !dbg !8788
  %1061 = load ptr, ptr %k, align 8, !dbg !8788, !tbaa !2658
  %1062 = load i64, ptr %vlen, align 8, !dbg !8788, !tbaa !2663
  %conv1895 = trunc i64 %1062 to i32, !dbg !8788
  %1063 = load ptr, ptr %v, align 8, !dbg !8788, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1894, ptr noundef %1061, i32 noundef %conv1895, ptr noundef %1063), !dbg !8788
  br label %if.end1896, !dbg !8788

if.end1896:                                       ; preds = %if.then1893, %land.lhs.true1890, %land.lhs.true1887, %if.end1885
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1866) #18, !dbg !8762
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1865) #18, !dbg !8762
  br label %cleanup2304

if.end1899:                                       ; preds = %land.lhs.true1860, %if.end1857
  %1064 = load i64, ptr %klen, align 8, !dbg !8790, !tbaa !2663
  %cmp1900 = icmp eq i64 17, %1064, !dbg !8790
  br i1 %cmp1900, label %land.lhs.true1902, label %if.end1941, !dbg !8790

land.lhs.true1902:                                ; preds = %if.end1899
  %1065 = load ptr, ptr %k, align 8, !dbg !8790, !tbaa !2658
  %1066 = load i64, ptr %klen, align 8, !dbg !8790, !tbaa !2663
  %call1903 = call i32 @strncmp(ptr noundef @.str.140, ptr noundef %1065, i64 noundef %1066) #22, !dbg !8790
  %cmp1904 = icmp eq i32 %call1903, 0, !dbg !8790
  br i1 %cmp1904, label %if.then1906, label %if.end1941, !dbg !8791

if.then1906:                                      ; preds = %land.lhs.true1902
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1907) #18, !dbg !8792
  tail call void @llvm.dbg.declare(metadata ptr %mv1907, metadata !2314, metadata !DIExpression()), !dbg !8792
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1908) #18, !dbg !8792
  tail call void @llvm.dbg.declare(metadata ptr %end1908, metadata !2317, metadata !DIExpression()), !dbg !8792
  call void @set_errno(i32 noundef 0), !dbg !8792
  %1067 = load ptr, ptr %v, align 8, !dbg !8792, !tbaa !2658
  %call1909 = call i64 @malloc_strtoumax(ptr noundef %1067, ptr noundef %end1908, i32 noundef 0), !dbg !8792
  store i64 %call1909, ptr %mv1907, align 8, !dbg !8792, !tbaa !2663
  %call1910 = call i32 @get_errno(), !dbg !8793
  %cmp1911 = icmp ne i32 %call1910, 0, !dbg !8793
  br i1 %cmp1911, label %if.then1917, label %lor.lhs.false1913, !dbg !8793

lor.lhs.false1913:                                ; preds = %if.then1906
  %1068 = load ptr, ptr %end1908, align 8, !dbg !8793, !tbaa !2658
  %1069 = ptrtoint ptr %1068 to i64, !dbg !8793
  %1070 = load ptr, ptr %v, align 8, !dbg !8793, !tbaa !2658
  %1071 = ptrtoint ptr %1070 to i64, !dbg !8793
  %sub1914 = sub i64 %1069, %1071, !dbg !8793
  %1072 = load i64, ptr %vlen, align 8, !dbg !8793, !tbaa !2663
  %cmp1915 = icmp ne i64 %sub1914, %1072, !dbg !8793
  br i1 %cmp1915, label %if.then1917, label %if.else1921, !dbg !8792

if.then1917:                                      ; preds = %lor.lhs.false1913, %if.then1906
  %1073 = load i8, ptr %initial_call.addr, align 1, !dbg !8795, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1918 = trunc i8 %1073 to i1, !dbg !8795
  br i1 %tobool1918, label %if.end1920, label %if.then1919, !dbg !8798

if.then1919:                                      ; preds = %if.then1917
  %1074 = load ptr, ptr %k, align 8, !dbg !8799, !tbaa !2658
  %1075 = load i64, ptr %klen, align 8, !dbg !8799, !tbaa !2663
  %1076 = load ptr, ptr %v, align 8, !dbg !8799, !tbaa !2658
  %1077 = load i64, ptr %vlen, align 8, !dbg !8799, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1074, i64 noundef %1075, ptr noundef %1076, i64 noundef %1077), !dbg !8799
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8799, !tbaa !2695
  br label %if.end1920, !dbg !8799

if.end1920:                                       ; preds = %if.then1919, %if.then1917
  br label %if.end1927, !dbg !8798

if.else1921:                                      ; preds = %lor.lhs.false1913
  %1078 = load i64, ptr %mv1907, align 8, !dbg !8801, !tbaa !2663
  %cmp1922 = icmp ult i64 %1078, 4096, !dbg !8801
  br i1 %cmp1922, label %if.then1924, label %if.else1925, !dbg !8805

if.then1924:                                      ; preds = %if.else1921
  store i64 4096, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 1), align 8, !dbg !8806, !tbaa !8808
  br label %if.end1926, !dbg !8806

if.else1925:                                      ; preds = %if.else1921
  %1079 = load i64, ptr %mv1907, align 8, !dbg !8809, !tbaa !2663
  store i64 %1079, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 1), align 8, !dbg !8809, !tbaa !8808
  br label %if.end1926

if.end1926:                                       ; preds = %if.else1925, %if.then1924
  br label %if.end1927

if.end1927:                                       ; preds = %if.end1926, %if.end1920
  %1080 = load i8, ptr %initial_call.addr, align 1, !dbg !8812, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1928 = trunc i8 %1080 to i1, !dbg !8812
  br i1 %tobool1928, label %if.end1938, label %land.lhs.true1929, !dbg !8812

land.lhs.true1929:                                ; preds = %if.end1927
  %1081 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8812, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1930 = trunc i8 %1081 to i1, !dbg !8812
  br i1 %tobool1930, label %land.lhs.true1932, label %if.end1938, !dbg !8812

land.lhs.true1932:                                ; preds = %land.lhs.true1929
  %1082 = load i8, ptr %cur_opt_valid, align 1, !dbg !8812, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1933 = trunc i8 %1082 to i1, !dbg !8812
  br i1 %tobool1933, label %if.then1935, label %if.end1938, !dbg !8815

if.then1935:                                      ; preds = %land.lhs.true1932
  %1083 = load i64, ptr %klen, align 8, !dbg !8816, !tbaa !2663
  %conv1936 = trunc i64 %1083 to i32, !dbg !8816
  %1084 = load ptr, ptr %k, align 8, !dbg !8816, !tbaa !2658
  %1085 = load i64, ptr %vlen, align 8, !dbg !8816, !tbaa !2663
  %conv1937 = trunc i64 %1085 to i32, !dbg !8816
  %1086 = load ptr, ptr %v, align 8, !dbg !8816, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1936, ptr noundef %1084, i32 noundef %conv1937, ptr noundef %1086), !dbg !8816
  br label %if.end1938, !dbg !8816

if.end1938:                                       ; preds = %if.then1935, %land.lhs.true1932, %land.lhs.true1929, %if.end1927
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1908) #18, !dbg !8790
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1907) #18, !dbg !8790
  br label %cleanup2304

if.end1941:                                       ; preds = %land.lhs.true1902, %if.end1899
  %1087 = load i64, ptr %klen, align 8, !dbg !8818, !tbaa !2663
  %cmp1942 = icmp eq i64 17, %1087, !dbg !8818
  br i1 %cmp1942, label %land.lhs.true1944, label %if.end1983, !dbg !8818

land.lhs.true1944:                                ; preds = %if.end1941
  %1088 = load ptr, ptr %k, align 8, !dbg !8818, !tbaa !2658
  %1089 = load i64, ptr %klen, align 8, !dbg !8818, !tbaa !2663
  %call1945 = call i32 @strncmp(ptr noundef @.str.141, ptr noundef %1088, i64 noundef %1089) #22, !dbg !8818
  %cmp1946 = icmp eq i32 %call1945, 0, !dbg !8818
  br i1 %cmp1946, label %if.then1948, label %if.end1983, !dbg !8819

if.then1948:                                      ; preds = %land.lhs.true1944
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1949) #18, !dbg !8820
  tail call void @llvm.dbg.declare(metadata ptr %mv1949, metadata !2318, metadata !DIExpression()), !dbg !8820
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1950) #18, !dbg !8820
  tail call void @llvm.dbg.declare(metadata ptr %end1950, metadata !2321, metadata !DIExpression()), !dbg !8820
  call void @set_errno(i32 noundef 0), !dbg !8820
  %1090 = load ptr, ptr %v, align 8, !dbg !8820, !tbaa !2658
  %call1951 = call i64 @malloc_strtoumax(ptr noundef %1090, ptr noundef %end1950, i32 noundef 0), !dbg !8820
  store i64 %call1951, ptr %mv1949, align 8, !dbg !8820, !tbaa !2663
  %call1952 = call i32 @get_errno(), !dbg !8821
  %cmp1953 = icmp ne i32 %call1952, 0, !dbg !8821
  br i1 %cmp1953, label %if.then1959, label %lor.lhs.false1955, !dbg !8821

lor.lhs.false1955:                                ; preds = %if.then1948
  %1091 = load ptr, ptr %end1950, align 8, !dbg !8821, !tbaa !2658
  %1092 = ptrtoint ptr %1091 to i64, !dbg !8821
  %1093 = load ptr, ptr %v, align 8, !dbg !8821, !tbaa !2658
  %1094 = ptrtoint ptr %1093 to i64, !dbg !8821
  %sub1956 = sub i64 %1092, %1094, !dbg !8821
  %1095 = load i64, ptr %vlen, align 8, !dbg !8821, !tbaa !2663
  %cmp1957 = icmp ne i64 %sub1956, %1095, !dbg !8821
  br i1 %cmp1957, label %if.then1959, label %if.else1963, !dbg !8820

if.then1959:                                      ; preds = %lor.lhs.false1955, %if.then1948
  %1096 = load i8, ptr %initial_call.addr, align 1, !dbg !8823, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1960 = trunc i8 %1096 to i1, !dbg !8823
  br i1 %tobool1960, label %if.end1962, label %if.then1961, !dbg !8826

if.then1961:                                      ; preds = %if.then1959
  %1097 = load ptr, ptr %k, align 8, !dbg !8827, !tbaa !2658
  %1098 = load i64, ptr %klen, align 8, !dbg !8827, !tbaa !2663
  %1099 = load ptr, ptr %v, align 8, !dbg !8827, !tbaa !2658
  %1100 = load i64, ptr %vlen, align 8, !dbg !8827, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1097, i64 noundef %1098, ptr noundef %1099, i64 noundef %1100), !dbg !8827
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8827, !tbaa !2695
  br label %if.end1962, !dbg !8827

if.end1962:                                       ; preds = %if.then1961, %if.then1959
  br label %if.end1969, !dbg !8826

if.else1963:                                      ; preds = %lor.lhs.false1955
  %1101 = load i64, ptr %mv1949, align 8, !dbg !8829, !tbaa !2663
  %cmp1964 = icmp ult i64 %1101, 4096, !dbg !8829
  br i1 %cmp1964, label %if.then1966, label %if.else1967, !dbg !8833

if.then1966:                                      ; preds = %if.else1963
  store i64 4096, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 2), align 8, !dbg !8834, !tbaa !8836
  br label %if.end1968, !dbg !8834

if.else1967:                                      ; preds = %if.else1963
  %1102 = load i64, ptr %mv1949, align 8, !dbg !8837, !tbaa !2663
  store i64 %1102, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 2), align 8, !dbg !8837, !tbaa !8836
  br label %if.end1968

if.end1968:                                       ; preds = %if.else1967, %if.then1966
  br label %if.end1969

if.end1969:                                       ; preds = %if.end1968, %if.end1962
  %1103 = load i8, ptr %initial_call.addr, align 1, !dbg !8840, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1970 = trunc i8 %1103 to i1, !dbg !8840
  br i1 %tobool1970, label %if.end1980, label %land.lhs.true1971, !dbg !8840

land.lhs.true1971:                                ; preds = %if.end1969
  %1104 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8840, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1972 = trunc i8 %1104 to i1, !dbg !8840
  br i1 %tobool1972, label %land.lhs.true1974, label %if.end1980, !dbg !8840

land.lhs.true1974:                                ; preds = %land.lhs.true1971
  %1105 = load i8, ptr %cur_opt_valid, align 1, !dbg !8840, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1975 = trunc i8 %1105 to i1, !dbg !8840
  br i1 %tobool1975, label %if.then1977, label %if.end1980, !dbg !8843

if.then1977:                                      ; preds = %land.lhs.true1974
  %1106 = load i64, ptr %klen, align 8, !dbg !8844, !tbaa !2663
  %conv1978 = trunc i64 %1106 to i32, !dbg !8844
  %1107 = load ptr, ptr %k, align 8, !dbg !8844, !tbaa !2658
  %1108 = load i64, ptr %vlen, align 8, !dbg !8844, !tbaa !2663
  %conv1979 = trunc i64 %1108 to i32, !dbg !8844
  %1109 = load ptr, ptr %v, align 8, !dbg !8844, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv1978, ptr noundef %1107, i32 noundef %conv1979, ptr noundef %1109), !dbg !8844
  br label %if.end1980, !dbg !8844

if.end1980:                                       ; preds = %if.then1977, %land.lhs.true1974, %land.lhs.true1971, %if.end1969
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1950) #18, !dbg !8818
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1949) #18, !dbg !8818
  br label %cleanup2304

if.end1983:                                       ; preds = %land.lhs.true1944, %if.end1941
  %1110 = load i64, ptr %klen, align 8, !dbg !8846, !tbaa !2663
  %cmp1984 = icmp eq i64 25, %1110, !dbg !8846
  br i1 %cmp1984, label %land.lhs.true1986, label %if.end2025, !dbg !8846

land.lhs.true1986:                                ; preds = %if.end1983
  %1111 = load ptr, ptr %k, align 8, !dbg !8846, !tbaa !2658
  %1112 = load i64, ptr %klen, align 8, !dbg !8846, !tbaa !2663
  %call1987 = call i32 @strncmp(ptr noundef @.str.142, ptr noundef %1111, i64 noundef %1112) #22, !dbg !8846
  %cmp1988 = icmp eq i32 %call1987, 0, !dbg !8846
  br i1 %cmp1988, label %if.then1990, label %if.end2025, !dbg !8847

if.then1990:                                      ; preds = %land.lhs.true1986
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv1991) #18, !dbg !8848
  tail call void @llvm.dbg.declare(metadata ptr %mv1991, metadata !2322, metadata !DIExpression()), !dbg !8848
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1992) #18, !dbg !8848
  tail call void @llvm.dbg.declare(metadata ptr %end1992, metadata !2325, metadata !DIExpression()), !dbg !8848
  call void @set_errno(i32 noundef 0), !dbg !8848
  %1113 = load ptr, ptr %v, align 8, !dbg !8848, !tbaa !2658
  %call1993 = call i64 @malloc_strtoumax(ptr noundef %1113, ptr noundef %end1992, i32 noundef 0), !dbg !8848
  store i64 %call1993, ptr %mv1991, align 8, !dbg !8848, !tbaa !2663
  %call1994 = call i32 @get_errno(), !dbg !8849
  %cmp1995 = icmp ne i32 %call1994, 0, !dbg !8849
  br i1 %cmp1995, label %if.then2001, label %lor.lhs.false1997, !dbg !8849

lor.lhs.false1997:                                ; preds = %if.then1990
  %1114 = load ptr, ptr %end1992, align 8, !dbg !8849, !tbaa !2658
  %1115 = ptrtoint ptr %1114 to i64, !dbg !8849
  %1116 = load ptr, ptr %v, align 8, !dbg !8849, !tbaa !2658
  %1117 = ptrtoint ptr %1116 to i64, !dbg !8849
  %sub1998 = sub i64 %1115, %1117, !dbg !8849
  %1118 = load i64, ptr %vlen, align 8, !dbg !8849, !tbaa !2663
  %cmp1999 = icmp ne i64 %sub1998, %1118, !dbg !8849
  br i1 %cmp1999, label %if.then2001, label %if.else2005, !dbg !8848

if.then2001:                                      ; preds = %lor.lhs.false1997, %if.then1990
  %1119 = load i8, ptr %initial_call.addr, align 1, !dbg !8851, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2002 = trunc i8 %1119 to i1, !dbg !8851
  br i1 %tobool2002, label %if.end2004, label %if.then2003, !dbg !8854

if.then2003:                                      ; preds = %if.then2001
  %1120 = load ptr, ptr %k, align 8, !dbg !8855, !tbaa !2658
  %1121 = load i64, ptr %klen, align 8, !dbg !8855, !tbaa !2663
  %1122 = load ptr, ptr %v, align 8, !dbg !8855, !tbaa !2658
  %1123 = load i64, ptr %vlen, align 8, !dbg !8855, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1120, i64 noundef %1121, ptr noundef %1122, i64 noundef %1123), !dbg !8855
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8855, !tbaa !2695
  br label %if.end2004, !dbg !8855

if.end2004:                                       ; preds = %if.then2003, %if.then2001
  br label %if.end2011, !dbg !8854

if.else2005:                                      ; preds = %lor.lhs.false1997
  %1124 = load i64, ptr %mv1991, align 8, !dbg !8857, !tbaa !2663
  %cmp2006 = icmp ult i64 %1124, 4096, !dbg !8857
  br i1 %cmp2006, label %if.then2008, label %if.else2009, !dbg !8861

if.then2008:                                      ; preds = %if.else2005
  store i64 4096, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 3), align 8, !dbg !8862, !tbaa !8864
  br label %if.end2010, !dbg !8862

if.else2009:                                      ; preds = %if.else2005
  %1125 = load i64, ptr %mv1991, align 8, !dbg !8865, !tbaa !2663
  store i64 %1125, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 3), align 8, !dbg !8865, !tbaa !8864
  br label %if.end2010

if.end2010:                                       ; preds = %if.else2009, %if.then2008
  br label %if.end2011

if.end2011:                                       ; preds = %if.end2010, %if.end2004
  %1126 = load i8, ptr %initial_call.addr, align 1, !dbg !8868, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2012 = trunc i8 %1126 to i1, !dbg !8868
  br i1 %tobool2012, label %if.end2022, label %land.lhs.true2013, !dbg !8868

land.lhs.true2013:                                ; preds = %if.end2011
  %1127 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8868, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2014 = trunc i8 %1127 to i1, !dbg !8868
  br i1 %tobool2014, label %land.lhs.true2016, label %if.end2022, !dbg !8868

land.lhs.true2016:                                ; preds = %land.lhs.true2013
  %1128 = load i8, ptr %cur_opt_valid, align 1, !dbg !8868, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2017 = trunc i8 %1128 to i1, !dbg !8868
  br i1 %tobool2017, label %if.then2019, label %if.end2022, !dbg !8871

if.then2019:                                      ; preds = %land.lhs.true2016
  %1129 = load i64, ptr %klen, align 8, !dbg !8872, !tbaa !2663
  %conv2020 = trunc i64 %1129 to i32, !dbg !8872
  %1130 = load ptr, ptr %k, align 8, !dbg !8872, !tbaa !2658
  %1131 = load i64, ptr %vlen, align 8, !dbg !8872, !tbaa !2663
  %conv2021 = trunc i64 %1131 to i32, !dbg !8872
  %1132 = load ptr, ptr %v, align 8, !dbg !8872, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2020, ptr noundef %1130, i32 noundef %conv2021, ptr noundef %1132), !dbg !8872
  br label %if.end2022, !dbg !8872

if.end2022:                                       ; preds = %if.then2019, %land.lhs.true2016, %land.lhs.true2013, %if.end2011
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1992) #18, !dbg !8846
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv1991) #18, !dbg !8846
  br label %cleanup2304

if.end2025:                                       ; preds = %land.lhs.true1986, %if.end1983
  %1133 = load i64, ptr %klen, align 8, !dbg !8874, !tbaa !2663
  %cmp2026 = icmp eq i64 24, %1133, !dbg !8874
  br i1 %cmp2026, label %land.lhs.true2028, label %if.end2072, !dbg !8874

land.lhs.true2028:                                ; preds = %if.end2025
  %1134 = load ptr, ptr %k, align 8, !dbg !8874, !tbaa !2658
  %1135 = load i64, ptr %klen, align 8, !dbg !8874, !tbaa !2663
  %call2029 = call i32 @strncmp(ptr noundef @.str.143, ptr noundef %1134, i64 noundef %1135) #22, !dbg !8874
  %cmp2030 = icmp eq i32 %call2029, 0, !dbg !8874
  br i1 %cmp2030, label %if.then2032, label %if.end2072, !dbg !8875

if.then2032:                                      ; preds = %land.lhs.true2028
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv2033) #18, !dbg !8876
  tail call void @llvm.dbg.declare(metadata ptr %mv2033, metadata !2326, metadata !DIExpression()), !dbg !8876
  call void @llvm.lifetime.start.p0(i64 8, ptr %end2034) #18, !dbg !8876
  tail call void @llvm.dbg.declare(metadata ptr %end2034, metadata !2329, metadata !DIExpression()), !dbg !8876
  call void @set_errno(i32 noundef 0), !dbg !8876
  %1136 = load ptr, ptr %v, align 8, !dbg !8876, !tbaa !2658
  %call2035 = call i64 @malloc_strtoumax(ptr noundef %1136, ptr noundef %end2034, i32 noundef 0), !dbg !8876
  store i64 %call2035, ptr %mv2033, align 8, !dbg !8876, !tbaa !2663
  %call2036 = call i32 @get_errno(), !dbg !8877
  %cmp2037 = icmp ne i32 %call2036, 0, !dbg !8877
  br i1 %cmp2037, label %if.then2043, label %lor.lhs.false2039, !dbg !8877

lor.lhs.false2039:                                ; preds = %if.then2032
  %1137 = load ptr, ptr %end2034, align 8, !dbg !8877, !tbaa !2658
  %1138 = ptrtoint ptr %1137 to i64, !dbg !8877
  %1139 = load ptr, ptr %v, align 8, !dbg !8877, !tbaa !2658
  %1140 = ptrtoint ptr %1139 to i64, !dbg !8877
  %sub2040 = sub i64 %1138, %1140, !dbg !8877
  %1141 = load i64, ptr %vlen, align 8, !dbg !8877, !tbaa !2663
  %cmp2041 = icmp ne i64 %sub2040, %1141, !dbg !8877
  br i1 %cmp2041, label %if.then2043, label %if.else2047, !dbg !8876

if.then2043:                                      ; preds = %lor.lhs.false2039, %if.then2032
  %1142 = load i8, ptr %initial_call.addr, align 1, !dbg !8879, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2044 = trunc i8 %1142 to i1, !dbg !8879
  br i1 %tobool2044, label %if.end2046, label %if.then2045, !dbg !8882

if.then2045:                                      ; preds = %if.then2043
  %1143 = load ptr, ptr %k, align 8, !dbg !8883, !tbaa !2658
  %1144 = load i64, ptr %klen, align 8, !dbg !8883, !tbaa !2663
  %1145 = load ptr, ptr %v, align 8, !dbg !8883, !tbaa !2658
  %1146 = load i64, ptr %vlen, align 8, !dbg !8883, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1143, i64 noundef %1144, ptr noundef %1145, i64 noundef %1146), !dbg !8883
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8883, !tbaa !2695
  br label %if.end2046, !dbg !8883

if.end2046:                                       ; preds = %if.then2045, %if.then2043
  br label %if.end2058, !dbg !8882

if.else2047:                                      ; preds = %lor.lhs.false2039
  %1147 = load i64, ptr %mv2033, align 8, !dbg !8885, !tbaa !2663
  %cmp2048 = icmp ult i64 %1147, 0, !dbg !8885
  br i1 %cmp2048, label %if.then2050, label %if.else2051, !dbg !8889

if.then2050:                                      ; preds = %if.else2047
  store i64 0, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 4), align 8, !dbg !8890, !tbaa !8892
  br label %if.end2057, !dbg !8890

if.else2051:                                      ; preds = %if.else2047
  %1148 = load i64, ptr %mv2033, align 8, !dbg !8893, !tbaa !2663
  %cmp2052 = icmp ugt i64 %1148, 512, !dbg !8893
  br i1 %cmp2052, label %if.then2054, label %if.else2055, !dbg !8885

if.then2054:                                      ; preds = %if.else2051
  store i64 512, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 4), align 8, !dbg !8895, !tbaa !8892
  br label %if.end2056, !dbg !8895

if.else2055:                                      ; preds = %if.else2051
  %1149 = load i64, ptr %mv2033, align 8, !dbg !8897, !tbaa !2663
  store i64 %1149, ptr getelementptr inbounds (%struct.sec_opts_s, ptr @opt_hpa_sec_opts, i32 0, i32 4), align 8, !dbg !8897, !tbaa !8892
  br label %if.end2056

if.end2056:                                       ; preds = %if.else2055, %if.then2054
  br label %if.end2057

if.end2057:                                       ; preds = %if.end2056, %if.then2050
  br label %if.end2058

if.end2058:                                       ; preds = %if.end2057, %if.end2046
  %1150 = load i8, ptr %initial_call.addr, align 1, !dbg !8899, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2059 = trunc i8 %1150 to i1, !dbg !8899
  br i1 %tobool2059, label %if.end2069, label %land.lhs.true2060, !dbg !8899

land.lhs.true2060:                                ; preds = %if.end2058
  %1151 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8899, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2061 = trunc i8 %1151 to i1, !dbg !8899
  br i1 %tobool2061, label %land.lhs.true2063, label %if.end2069, !dbg !8899

land.lhs.true2063:                                ; preds = %land.lhs.true2060
  %1152 = load i8, ptr %cur_opt_valid, align 1, !dbg !8899, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2064 = trunc i8 %1152 to i1, !dbg !8899
  br i1 %tobool2064, label %if.then2066, label %if.end2069, !dbg !8902

if.then2066:                                      ; preds = %land.lhs.true2063
  %1153 = load i64, ptr %klen, align 8, !dbg !8903, !tbaa !2663
  %conv2067 = trunc i64 %1153 to i32, !dbg !8903
  %1154 = load ptr, ptr %k, align 8, !dbg !8903, !tbaa !2658
  %1155 = load i64, ptr %vlen, align 8, !dbg !8903, !tbaa !2663
  %conv2068 = trunc i64 %1155 to i32, !dbg !8903
  %1156 = load ptr, ptr %v, align 8, !dbg !8903, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2067, ptr noundef %1154, i32 noundef %conv2068, ptr noundef %1156), !dbg !8903
  br label %if.end2069, !dbg !8903

if.end2069:                                       ; preds = %if.then2066, %land.lhs.true2063, %land.lhs.true2060, %if.end2058
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end2034) #18, !dbg !8874
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv2033) #18, !dbg !8874
  br label %cleanup2304

if.end2072:                                       ; preds = %land.lhs.true2028, %if.end2025
  %1157 = load i64, ptr %klen, align 8, !dbg !8905, !tbaa !2663
  %cmp2073 = icmp eq i64 10, %1157, !dbg !8905
  br i1 %cmp2073, label %land.lhs.true2075, label %if.end2133, !dbg !8905

land.lhs.true2075:                                ; preds = %if.end2072
  %1158 = load ptr, ptr %k, align 8, !dbg !8905, !tbaa !2658
  %1159 = load i64, ptr %klen, align 8, !dbg !8905, !tbaa !2663
  %call2076 = call i32 @strncmp(ptr noundef @.str.144, ptr noundef %1158, i64 noundef %1159) #22, !dbg !8905
  %cmp2077 = icmp eq i32 %call2076, 0, !dbg !8905
  br i1 %cmp2077, label %if.then2079, label %if.end2133, !dbg !8906

if.then2079:                                      ; preds = %land.lhs.true2075
  %1160 = load i64, ptr %vlen, align 8, !dbg !8907, !tbaa !2663
  %cmp2080 = icmp eq i64 7, %1160, !dbg !8907
  br i1 %cmp2080, label %land.lhs.true2082, label %if.end2098, !dbg !8907

land.lhs.true2082:                                ; preds = %if.then2079
  %1161 = load ptr, ptr %v, align 8, !dbg !8907, !tbaa !2658
  %1162 = load i64, ptr %vlen, align 8, !dbg !8907, !tbaa !2663
  %call2083 = call i32 @strncmp(ptr noundef @.str.100, ptr noundef %1161, i64 noundef %1162) #22, !dbg !8907
  %cmp2084 = icmp eq i32 %call2083, 0, !dbg !8907
  br i1 %cmp2084, label %if.then2086, label %if.end2098, !dbg !8909

if.then2086:                                      ; preds = %land.lhs.true2082
  %1163 = load ptr, ptr %sc_data.addr, align 8, !dbg !8910, !tbaa !2658
  call void @sc_data_init(ptr noundef %1163), !dbg !8912
  %1164 = load i8, ptr %initial_call.addr, align 1, !dbg !8913, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2087 = trunc i8 %1164 to i1, !dbg !8913
  br i1 %tobool2087, label %if.end2097, label %land.lhs.true2088, !dbg !8913

land.lhs.true2088:                                ; preds = %if.then2086
  %1165 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8913, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2089 = trunc i8 %1165 to i1, !dbg !8913
  br i1 %tobool2089, label %land.lhs.true2091, label %if.end2097, !dbg !8913

land.lhs.true2091:                                ; preds = %land.lhs.true2088
  %1166 = load i8, ptr %cur_opt_valid, align 1, !dbg !8913, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2092 = trunc i8 %1166 to i1, !dbg !8913
  br i1 %tobool2092, label %if.then2094, label %if.end2097, !dbg !8916

if.then2094:                                      ; preds = %land.lhs.true2091
  %1167 = load i64, ptr %klen, align 8, !dbg !8917, !tbaa !2663
  %conv2095 = trunc i64 %1167 to i32, !dbg !8917
  %1168 = load ptr, ptr %k, align 8, !dbg !8917, !tbaa !2658
  %1169 = load i64, ptr %vlen, align 8, !dbg !8917, !tbaa !2663
  %conv2096 = trunc i64 %1169 to i32, !dbg !8917
  %1170 = load ptr, ptr %v, align 8, !dbg !8917, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2095, ptr noundef %1168, i32 noundef %conv2096, ptr noundef %1170), !dbg !8917
  br label %if.end2097, !dbg !8917

if.end2097:                                       ; preds = %if.then2094, %land.lhs.true2091, %land.lhs.true2088, %if.then2086
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !8916, !llvm.loop !7444

if.end2098:                                       ; preds = %land.lhs.true2082, %if.then2079
  call void @llvm.lifetime.start.p0(i64 1, ptr %err2099) #18, !dbg !8919
  tail call void @llvm.dbg.declare(metadata ptr %err2099, metadata !2330, metadata !DIExpression()), !dbg !8920
  call void @llvm.lifetime.start.p0(i64 8, ptr %slab_size_segment_cur) #18, !dbg !8921
  tail call void @llvm.dbg.declare(metadata ptr %slab_size_segment_cur, metadata !2333, metadata !DIExpression()), !dbg !8922
  %1171 = load ptr, ptr %v, align 8, !dbg !8923, !tbaa !2658
  store ptr %1171, ptr %slab_size_segment_cur, align 8, !dbg !8922, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %vlen_left2100) #18, !dbg !8924
  tail call void @llvm.dbg.declare(metadata ptr %vlen_left2100, metadata !2334, metadata !DIExpression()), !dbg !8925
  %1172 = load i64, ptr %vlen, align 8, !dbg !8926, !tbaa !2663
  store i64 %1172, ptr %vlen_left2100, align 8, !dbg !8925, !tbaa !2663
  br label %do.body2101, !dbg !8927

do.body2101:                                      ; preds = %land.end2117, %if.end2098
  call void @llvm.lifetime.start.p0(i64 8, ptr %slab_start) #18, !dbg !8928
  tail call void @llvm.dbg.declare(metadata ptr %slab_start, metadata !2335, metadata !DIExpression()), !dbg !8929
  call void @llvm.lifetime.start.p0(i64 8, ptr %slab_end) #18, !dbg !8930
  tail call void @llvm.dbg.declare(metadata ptr %slab_end, metadata !2337, metadata !DIExpression()), !dbg !8931
  call void @llvm.lifetime.start.p0(i64 8, ptr %pgs) #18, !dbg !8932
  tail call void @llvm.dbg.declare(metadata ptr %pgs, metadata !2338, metadata !DIExpression()), !dbg !8933
  %call2102 = call zeroext i1 @malloc_conf_multi_sizes_next(ptr noundef %slab_size_segment_cur, ptr noundef %vlen_left2100, ptr noundef %slab_start, ptr noundef %slab_end, ptr noundef %pgs), !dbg !8934
  %frombool2103 = zext i1 %call2102 to i8, !dbg !8935
  store i8 %frombool2103, ptr %err2099, align 1, !dbg !8935, !tbaa !2695
  %1173 = load i8, ptr %err2099, align 1, !dbg !8936, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2104 = trunc i8 %1173 to i1, !dbg !8936
  br i1 %tobool2104, label %if.else2107, label %if.then2105, !dbg !8938

if.then2105:                                      ; preds = %do.body2101
  %1174 = load ptr, ptr %sc_data.addr, align 8, !dbg !8939, !tbaa !2658
  %1175 = load i64, ptr %slab_start, align 8, !dbg !8941, !tbaa !2663
  %1176 = load i64, ptr %slab_end, align 8, !dbg !8942, !tbaa !2663
  %1177 = load i64, ptr %pgs, align 8, !dbg !8943, !tbaa !2663
  %conv2106 = trunc i64 %1177 to i32, !dbg !8944
  call void @sc_data_update_slab_size(ptr noundef %1174, i64 noundef %1175, i64 noundef %1176, i32 noundef %conv2106), !dbg !8945
  br label %if.end2111, !dbg !8946

if.else2107:                                      ; preds = %do.body2101
  %1178 = load i8, ptr %initial_call.addr, align 1, !dbg !8947, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2108 = trunc i8 %1178 to i1, !dbg !8947
  br i1 %tobool2108, label %if.end2110, label %if.then2109, !dbg !8950

if.then2109:                                      ; preds = %if.else2107
  %1179 = load ptr, ptr %k, align 8, !dbg !8951, !tbaa !2658
  %1180 = load i64, ptr %klen, align 8, !dbg !8951, !tbaa !2663
  %1181 = load ptr, ptr %v, align 8, !dbg !8951, !tbaa !2658
  %1182 = load i64, ptr %vlen, align 8, !dbg !8951, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.145, ptr noundef %1179, i64 noundef %1180, ptr noundef %1181, i64 noundef %1182), !dbg !8951
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !8951, !tbaa !2695
  br label %if.end2110, !dbg !8951

if.end2110:                                       ; preds = %if.then2109, %if.else2107
  br label %if.end2111

if.end2111:                                       ; preds = %if.end2110, %if.then2105
  call void @llvm.lifetime.end.p0(i64 8, ptr %pgs) #18, !dbg !8953
  call void @llvm.lifetime.end.p0(i64 8, ptr %slab_end) #18, !dbg !8953
  call void @llvm.lifetime.end.p0(i64 8, ptr %slab_start) #18, !dbg !8953
  br label %do.cond2112, !dbg !8954

do.cond2112:                                      ; preds = %if.end2111
  %1183 = load i8, ptr %err2099, align 1, !dbg !8955, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2113 = trunc i8 %1183 to i1, !dbg !8955
  br i1 %tobool2113, label %land.end2117, label %land.rhs2114, !dbg !8956

land.rhs2114:                                     ; preds = %do.cond2112
  %1184 = load i64, ptr %vlen_left2100, align 8, !dbg !8957, !tbaa !2663
  %cmp2115 = icmp ugt i64 %1184, 0, !dbg !8958
  br label %land.end2117

land.end2117:                                     ; preds = %land.rhs2114, %do.cond2112
  %1185 = phi i1 [ false, %do.cond2112 ], [ %cmp2115, %land.rhs2114 ], !dbg !8959
  br i1 %1185, label %do.body2101, label %do.end2118, !dbg !8954, !llvm.loop !8960

do.end2118:                                       ; preds = %land.end2117
  %1186 = load i8, ptr %initial_call.addr, align 1, !dbg !8962, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2119 = trunc i8 %1186 to i1, !dbg !8962
  br i1 %tobool2119, label %if.end2129, label %land.lhs.true2120, !dbg !8962

land.lhs.true2120:                                ; preds = %do.end2118
  %1187 = load i8, ptr @opt_confirm_conf, align 1, !dbg !8962, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2121 = trunc i8 %1187 to i1, !dbg !8962
  br i1 %tobool2121, label %land.lhs.true2123, label %if.end2129, !dbg !8962

land.lhs.true2123:                                ; preds = %land.lhs.true2120
  %1188 = load i8, ptr %cur_opt_valid, align 1, !dbg !8962, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2124 = trunc i8 %1188 to i1, !dbg !8962
  br i1 %tobool2124, label %if.then2126, label %if.end2129, !dbg !8965

if.then2126:                                      ; preds = %land.lhs.true2123
  %1189 = load i64, ptr %klen, align 8, !dbg !8966, !tbaa !2663
  %conv2127 = trunc i64 %1189 to i32, !dbg !8966
  %1190 = load ptr, ptr %k, align 8, !dbg !8966, !tbaa !2658
  %1191 = load i64, ptr %vlen, align 8, !dbg !8966, !tbaa !2663
  %conv2128 = trunc i64 %1191 to i32, !dbg !8966
  %1192 = load ptr, ptr %v, align 8, !dbg !8966, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2127, ptr noundef %1190, i32 noundef %conv2128, ptr noundef %1192), !dbg !8966
  br label %if.end2129, !dbg !8966

if.end2129:                                       ; preds = %if.then2126, %land.lhs.true2123, %land.lhs.true2120, %do.end2118
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %vlen_left2100) #18, !dbg !8968
  call void @llvm.lifetime.end.p0(i64 8, ptr %slab_size_segment_cur) #18, !dbg !8968
  call void @llvm.lifetime.end.p0(i64 1, ptr %err2099) #18, !dbg !8968
  br label %cleanup2304

if.end2133:                                       ; preds = %land.lhs.true2075, %if.end2072
  %1193 = load i64, ptr %klen, align 8, !dbg !8969, !tbaa !2663
  %cmp2134 = icmp eq i64 3, %1193, !dbg !8969
  br i1 %cmp2134, label %land.lhs.true2136, label %if.end2177, !dbg !8969

land.lhs.true2136:                                ; preds = %if.end2133
  %1194 = load ptr, ptr %k, align 8, !dbg !8969, !tbaa !2658
  %1195 = load i64, ptr %klen, align 8, !dbg !8969, !tbaa !2663
  %call2137 = call i32 @strncmp(ptr noundef @.str.146, ptr noundef %1194, i64 noundef %1195) #22, !dbg !8969
  %cmp2138 = icmp eq i32 %call2137, 0, !dbg !8969
  br i1 %cmp2138, label %if.then2140, label %if.end2177, !dbg !8970

if.then2140:                                      ; preds = %land.lhs.true2136
  call void @llvm.lifetime.start.p0(i64 1, ptr %match2141) #18, !dbg !8971
  tail call void @llvm.dbg.declare(metadata ptr %match2141, metadata !2339, metadata !DIExpression()), !dbg !8972
  store i8 0, ptr %match2141, align 1, !dbg !8972, !tbaa !2695
  call void @llvm.lifetime.start.p0(i64 4, ptr %m2142) #18, !dbg !8973
  tail call void @llvm.dbg.declare(metadata ptr %m2142, metadata !2342, metadata !DIExpression()), !dbg !8974
  store i32 0, ptr %m2142, align 4, !dbg !8974, !tbaa !2791
  br label %for.cond2143, !dbg !8973

for.cond2143:                                     ; preds = %for.inc2155, %if.then2140
  %1196 = load i32, ptr %m2142, align 4, !dbg !8975, !tbaa !2791
  %cmp2144 = icmp slt i32 %1196, 3, !dbg !8977
  br i1 %cmp2144, label %for.body2147, label %for.cond.cleanup2146, !dbg !8978

for.cond.cleanup2146:                             ; preds = %for.cond2143
  store i32 20, ptr %cleanup.dest.slot, align 4
  br label %cleanup2157, !dbg !8978

for.body2147:                                     ; preds = %for.cond2143
  %1197 = load i32, ptr %m2142, align 4, !dbg !8979, !tbaa !2791
  %idxprom2148 = sext i32 %1197 to i64, !dbg !8982
  %arrayidx2149 = getelementptr inbounds [0 x ptr], ptr @thp_mode_names, i64 0, i64 %idxprom2148, !dbg !8982
  %1198 = load ptr, ptr %arrayidx2149, align 8, !dbg !8982, !tbaa !2658
  %1199 = load ptr, ptr %v, align 8, !dbg !8983, !tbaa !2658
  %1200 = load i64, ptr %vlen, align 8, !dbg !8984, !tbaa !2663
  %call2150 = call i32 @strncmp(ptr noundef %1198, ptr noundef %1199, i64 noundef %1200) #22, !dbg !8985
  %cmp2151 = icmp eq i32 %call2150, 0, !dbg !8986
  br i1 %cmp2151, label %if.then2153, label %if.end2154, !dbg !8987

if.then2153:                                      ; preds = %for.body2147
  %1201 = load i32, ptr %m2142, align 4, !dbg !8988, !tbaa !2791
  store i32 %1201, ptr @opt_thp, align 4, !dbg !8990, !tbaa !2810
  store i8 1, ptr %match2141, align 1, !dbg !8991, !tbaa !2695
  store i32 20, ptr %cleanup.dest.slot, align 4
  br label %cleanup2157, !dbg !8992

if.end2154:                                       ; preds = %for.body2147
  br label %for.inc2155, !dbg !8993

for.inc2155:                                      ; preds = %if.end2154
  %1202 = load i32, ptr %m2142, align 4, !dbg !8994, !tbaa !2791
  %inc2156 = add nsw i32 %1202, 1, !dbg !8994
  store i32 %inc2156, ptr %m2142, align 4, !dbg !8994, !tbaa !2791
  br label %for.cond2143, !dbg !8995, !llvm.loop !8996

cleanup2157:                                      ; preds = %if.then2153, %for.cond.cleanup2146
  call void @llvm.lifetime.end.p0(i64 4, ptr %m2142) #18, !dbg !8995
  br label %for.end2158

for.end2158:                                      ; preds = %cleanup2157
  %1203 = load i8, ptr %match2141, align 1, !dbg !8998, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2159 = trunc i8 %1203 to i1, !dbg !8998
  br i1 %tobool2159, label %if.end2164, label %if.then2160, !dbg !9000

if.then2160:                                      ; preds = %for.end2158
  %1204 = load i8, ptr %initial_call.addr, align 1, !dbg !9001, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2161 = trunc i8 %1204 to i1, !dbg !9001
  br i1 %tobool2161, label %if.end2163, label %if.then2162, !dbg !9004

if.then2162:                                      ; preds = %if.then2160
  %1205 = load ptr, ptr %k, align 8, !dbg !9005, !tbaa !2658
  %1206 = load i64, ptr %klen, align 8, !dbg !9005, !tbaa !2663
  %1207 = load ptr, ptr %v, align 8, !dbg !9005, !tbaa !2658
  %1208 = load i64, ptr %vlen, align 8, !dbg !9005, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1205, i64 noundef %1206, ptr noundef %1207, i64 noundef %1208), !dbg !9005
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !9005, !tbaa !2695
  br label %if.end2163, !dbg !9005

if.end2163:                                       ; preds = %if.then2162, %if.then2160
  br label %if.end2164, !dbg !9007

if.end2164:                                       ; preds = %if.end2163, %for.end2158
  %1209 = load i8, ptr %initial_call.addr, align 1, !dbg !9008, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2165 = trunc i8 %1209 to i1, !dbg !9008
  br i1 %tobool2165, label %if.end2175, label %land.lhs.true2166, !dbg !9008

land.lhs.true2166:                                ; preds = %if.end2164
  %1210 = load i8, ptr @opt_confirm_conf, align 1, !dbg !9008, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2167 = trunc i8 %1210 to i1, !dbg !9008
  br i1 %tobool2167, label %land.lhs.true2169, label %if.end2175, !dbg !9008

land.lhs.true2169:                                ; preds = %land.lhs.true2166
  %1211 = load i8, ptr %cur_opt_valid, align 1, !dbg !9008, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2170 = trunc i8 %1211 to i1, !dbg !9008
  br i1 %tobool2170, label %if.then2172, label %if.end2175, !dbg !9011

if.then2172:                                      ; preds = %land.lhs.true2169
  %1212 = load i64, ptr %klen, align 8, !dbg !9012, !tbaa !2663
  %conv2173 = trunc i64 %1212 to i32, !dbg !9012
  %1213 = load ptr, ptr %k, align 8, !dbg !9012, !tbaa !2658
  %1214 = load i64, ptr %vlen, align 8, !dbg !9012, !tbaa !2663
  %conv2174 = trunc i64 %1214 to i32, !dbg !9012
  %1215 = load ptr, ptr %v, align 8, !dbg !9012, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2173, ptr noundef %1213, i32 noundef %conv2174, ptr noundef %1215), !dbg !9012
  br label %if.end2175, !dbg !9012

if.end2175:                                       ; preds = %if.then2172, %land.lhs.true2169, %land.lhs.true2166, %if.end2164
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1, ptr %match2141) #18, !dbg !9014
  br label %cleanup2304

if.end2177:                                       ; preds = %land.lhs.true2136, %if.end2133
  %1216 = load i64, ptr %klen, align 8, !dbg !9015, !tbaa !2663
  %cmp2178 = icmp eq i64 12, %1216, !dbg !9015
  br i1 %cmp2178, label %land.lhs.true2180, label %if.end2226, !dbg !9015

land.lhs.true2180:                                ; preds = %if.end2177
  %1217 = load ptr, ptr %k, align 8, !dbg !9015, !tbaa !2658
  %1218 = load i64, ptr %klen, align 8, !dbg !9015, !tbaa !2663
  %call2181 = call i32 @strncmp(ptr noundef @.str.147, ptr noundef %1217, i64 noundef %1218) #22, !dbg !9015
  %cmp2182 = icmp eq i32 %call2181, 0, !dbg !9015
  br i1 %cmp2182, label %if.then2184, label %if.end2226, !dbg !9017

if.then2184:                                      ; preds = %land.lhs.true2180
  %1219 = load i64, ptr %vlen, align 8, !dbg !9018, !tbaa !2663
  %cmp2185 = icmp eq i64 5, %1219, !dbg !9018
  br i1 %cmp2185, label %land.lhs.true2187, label %if.else2192, !dbg !9018

land.lhs.true2187:                                ; preds = %if.then2184
  %1220 = load ptr, ptr %v, align 8, !dbg !9018, !tbaa !2658
  %1221 = load i64, ptr %vlen, align 8, !dbg !9018, !tbaa !2663
  %call2188 = call i32 @strncmp(ptr noundef @.str.1, ptr noundef %1220, i64 noundef %1221) #22, !dbg !9018
  %cmp2189 = icmp eq i32 %call2188, 0, !dbg !9018
  br i1 %cmp2189, label %if.then2191, label %if.else2192, !dbg !9021

if.then2191:                                      ; preds = %land.lhs.true2187
  store i32 0, ptr @opt_zero_realloc_action, align 4, !dbg !9022, !tbaa !2810
  br label %if.end2214, !dbg !9024

if.else2192:                                      ; preds = %land.lhs.true2187, %if.then2184
  %1222 = load i64, ptr %vlen, align 8, !dbg !9025, !tbaa !2663
  %cmp2193 = icmp eq i64 4, %1222, !dbg !9025
  br i1 %cmp2193, label %land.lhs.true2195, label %if.else2200, !dbg !9025

land.lhs.true2195:                                ; preds = %if.else2192
  %1223 = load ptr, ptr %v, align 8, !dbg !9025, !tbaa !2658
  %1224 = load i64, ptr %vlen, align 8, !dbg !9025, !tbaa !2663
  %call2196 = call i32 @strncmp(ptr noundef @.str.2, ptr noundef %1223, i64 noundef %1224) #22, !dbg !9025
  %cmp2197 = icmp eq i32 %call2196, 0, !dbg !9025
  br i1 %cmp2197, label %if.then2199, label %if.else2200, !dbg !9027

if.then2199:                                      ; preds = %land.lhs.true2195
  store i32 1, ptr @opt_zero_realloc_action, align 4, !dbg !9028, !tbaa !2810
  br label %if.end2213, !dbg !9030

if.else2200:                                      ; preds = %land.lhs.true2195, %if.else2192
  %1225 = load i64, ptr %vlen, align 8, !dbg !9031, !tbaa !2663
  %cmp2201 = icmp eq i64 5, %1225, !dbg !9031
  br i1 %cmp2201, label %land.lhs.true2203, label %if.else2208, !dbg !9031

land.lhs.true2203:                                ; preds = %if.else2200
  %1226 = load ptr, ptr %v, align 8, !dbg !9031, !tbaa !2658
  %1227 = load i64, ptr %vlen, align 8, !dbg !9031, !tbaa !2663
  %call2204 = call i32 @strncmp(ptr noundef @.str.3, ptr noundef %1226, i64 noundef %1227) #22, !dbg !9031
  %cmp2205 = icmp eq i32 %call2204, 0, !dbg !9031
  br i1 %cmp2205, label %if.then2207, label %if.else2208, !dbg !9033

if.then2207:                                      ; preds = %land.lhs.true2203
  store i32 2, ptr @opt_zero_realloc_action, align 4, !dbg !9034, !tbaa !2810
  br label %if.end2212, !dbg !9036

if.else2208:                                      ; preds = %land.lhs.true2203, %if.else2200
  %1228 = load i8, ptr %initial_call.addr, align 1, !dbg !9037, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2209 = trunc i8 %1228 to i1, !dbg !9037
  br i1 %tobool2209, label %if.end2211, label %if.then2210, !dbg !9040

if.then2210:                                      ; preds = %if.else2208
  %1229 = load ptr, ptr %k, align 8, !dbg !9041, !tbaa !2658
  %1230 = load i64, ptr %klen, align 8, !dbg !9041, !tbaa !2663
  %1231 = load ptr, ptr %v, align 8, !dbg !9041, !tbaa !2658
  %1232 = load i64, ptr %vlen, align 8, !dbg !9041, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1229, i64 noundef %1230, ptr noundef %1231, i64 noundef %1232), !dbg !9041
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !9041, !tbaa !2695
  br label %if.end2211, !dbg !9041

if.end2211:                                       ; preds = %if.then2210, %if.else2208
  br label %if.end2212

if.end2212:                                       ; preds = %if.end2211, %if.then2207
  br label %if.end2213

if.end2213:                                       ; preds = %if.end2212, %if.then2199
  br label %if.end2214

if.end2214:                                       ; preds = %if.end2213, %if.then2191
  %1233 = load i8, ptr %initial_call.addr, align 1, !dbg !9043, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2215 = trunc i8 %1233 to i1, !dbg !9043
  br i1 %tobool2215, label %if.end2225, label %land.lhs.true2216, !dbg !9043

land.lhs.true2216:                                ; preds = %if.end2214
  %1234 = load i8, ptr @opt_confirm_conf, align 1, !dbg !9043, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2217 = trunc i8 %1234 to i1, !dbg !9043
  br i1 %tobool2217, label %land.lhs.true2219, label %if.end2225, !dbg !9043

land.lhs.true2219:                                ; preds = %land.lhs.true2216
  %1235 = load i8, ptr %cur_opt_valid, align 1, !dbg !9043, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2220 = trunc i8 %1235 to i1, !dbg !9043
  br i1 %tobool2220, label %if.then2222, label %if.end2225, !dbg !9046

if.then2222:                                      ; preds = %land.lhs.true2219
  %1236 = load i64, ptr %klen, align 8, !dbg !9047, !tbaa !2663
  %conv2223 = trunc i64 %1236 to i32, !dbg !9047
  %1237 = load ptr, ptr %k, align 8, !dbg !9047, !tbaa !2658
  %1238 = load i64, ptr %vlen, align 8, !dbg !9047, !tbaa !2663
  %conv2224 = trunc i64 %1238 to i32, !dbg !9047
  %1239 = load ptr, ptr %v, align 8, !dbg !9047, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2223, ptr noundef %1237, i32 noundef %conv2224, ptr noundef %1239), !dbg !9047
  br label %if.end2225, !dbg !9047

if.end2225:                                       ; preds = %if.then2222, %land.lhs.true2219, %land.lhs.true2216, %if.end2214
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup2304, !dbg !9046, !llvm.loop !7444

if.end2226:                                       ; preds = %land.lhs.true2180, %if.end2177
  %1240 = load i64, ptr %klen, align 8, !dbg !9049, !tbaa !2663
  %cmp2227 = icmp eq i64 15, %1240, !dbg !9049
  br i1 %cmp2227, label %land.lhs.true2229, label %if.end2263, !dbg !9049

land.lhs.true2229:                                ; preds = %if.end2226
  %1241 = load ptr, ptr %k, align 8, !dbg !9049, !tbaa !2658
  %1242 = load i64, ptr %klen, align 8, !dbg !9049, !tbaa !2663
  %call2230 = call i32 @strncmp(ptr noundef @.str.148, ptr noundef %1241, i64 noundef %1242) #22, !dbg !9049
  %cmp2231 = icmp eq i32 %call2230, 0, !dbg !9049
  br i1 %cmp2231, label %if.then2233, label %if.end2263, !dbg !9050

if.then2233:                                      ; preds = %land.lhs.true2229
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv2234) #18, !dbg !9051
  tail call void @llvm.dbg.declare(metadata ptr %mv2234, metadata !2344, metadata !DIExpression()), !dbg !9051
  call void @llvm.lifetime.start.p0(i64 8, ptr %end2235) #18, !dbg !9051
  tail call void @llvm.dbg.declare(metadata ptr %end2235, metadata !2347, metadata !DIExpression()), !dbg !9051
  call void @set_errno(i32 noundef 0), !dbg !9051
  %1243 = load ptr, ptr %v, align 8, !dbg !9051, !tbaa !2658
  %call2236 = call i64 @malloc_strtoumax(ptr noundef %1243, ptr noundef %end2235, i32 noundef 0), !dbg !9051
  store i64 %call2236, ptr %mv2234, align 8, !dbg !9051, !tbaa !2663
  %call2237 = call i32 @get_errno(), !dbg !9052
  %cmp2238 = icmp ne i32 %call2237, 0, !dbg !9052
  br i1 %cmp2238, label %if.then2244, label %lor.lhs.false2240, !dbg !9052

lor.lhs.false2240:                                ; preds = %if.then2233
  %1244 = load ptr, ptr %end2235, align 8, !dbg !9052, !tbaa !2658
  %1245 = ptrtoint ptr %1244 to i64, !dbg !9052
  %1246 = load ptr, ptr %v, align 8, !dbg !9052, !tbaa !2658
  %1247 = ptrtoint ptr %1246 to i64, !dbg !9052
  %sub2241 = sub i64 %1245, %1247, !dbg !9052
  %1248 = load i64, ptr %vlen, align 8, !dbg !9052, !tbaa !2663
  %cmp2242 = icmp ne i64 %sub2241, %1248, !dbg !9052
  br i1 %cmp2242, label %if.then2244, label %if.else2248, !dbg !9051

if.then2244:                                      ; preds = %lor.lhs.false2240, %if.then2233
  %1249 = load i8, ptr %initial_call.addr, align 1, !dbg !9054, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2245 = trunc i8 %1249 to i1, !dbg !9054
  br i1 %tobool2245, label %if.end2247, label %if.then2246, !dbg !9057

if.then2246:                                      ; preds = %if.then2244
  %1250 = load ptr, ptr %k, align 8, !dbg !9058, !tbaa !2658
  %1251 = load i64, ptr %klen, align 8, !dbg !9058, !tbaa !2663
  %1252 = load ptr, ptr %v, align 8, !dbg !9058, !tbaa !2658
  %1253 = load i64, ptr %vlen, align 8, !dbg !9058, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1250, i64 noundef %1251, ptr noundef %1252, i64 noundef %1253), !dbg !9058
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !9058, !tbaa !2695
  br label %if.end2247, !dbg !9058

if.end2247:                                       ; preds = %if.then2246, %if.then2244
  br label %if.end2249, !dbg !9057

if.else2248:                                      ; preds = %lor.lhs.false2240
  %1254 = load i64, ptr %mv2234, align 8, !dbg !9060, !tbaa !2663
  store i64 %1254, ptr @opt_san_guard_small, align 8, !dbg !9060, !tbaa !2663
  br label %if.end2249

if.end2249:                                       ; preds = %if.else2248, %if.end2247
  %1255 = load i8, ptr %initial_call.addr, align 1, !dbg !9065, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2250 = trunc i8 %1255 to i1, !dbg !9065
  br i1 %tobool2250, label %if.end2260, label %land.lhs.true2251, !dbg !9065

land.lhs.true2251:                                ; preds = %if.end2249
  %1256 = load i8, ptr @opt_confirm_conf, align 1, !dbg !9065, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2252 = trunc i8 %1256 to i1, !dbg !9065
  br i1 %tobool2252, label %land.lhs.true2254, label %if.end2260, !dbg !9065

land.lhs.true2254:                                ; preds = %land.lhs.true2251
  %1257 = load i8, ptr %cur_opt_valid, align 1, !dbg !9065, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2255 = trunc i8 %1257 to i1, !dbg !9065
  br i1 %tobool2255, label %if.then2257, label %if.end2260, !dbg !9068

if.then2257:                                      ; preds = %land.lhs.true2254
  %1258 = load i64, ptr %klen, align 8, !dbg !9069, !tbaa !2663
  %conv2258 = trunc i64 %1258 to i32, !dbg !9069
  %1259 = load ptr, ptr %k, align 8, !dbg !9069, !tbaa !2658
  %1260 = load i64, ptr %vlen, align 8, !dbg !9069, !tbaa !2663
  %conv2259 = trunc i64 %1260 to i32, !dbg !9069
  %1261 = load ptr, ptr %v, align 8, !dbg !9069, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2258, ptr noundef %1259, i32 noundef %conv2259, ptr noundef %1261), !dbg !9069
  br label %if.end2260, !dbg !9069

if.end2260:                                       ; preds = %if.then2257, %land.lhs.true2254, %land.lhs.true2251, %if.end2249
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end2235) #18, !dbg !9049
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv2234) #18, !dbg !9049
  br label %cleanup2304

if.end2263:                                       ; preds = %land.lhs.true2229, %if.end2226
  %1262 = load i64, ptr %klen, align 8, !dbg !9071, !tbaa !2663
  %cmp2264 = icmp eq i64 15, %1262, !dbg !9071
  br i1 %cmp2264, label %land.lhs.true2266, label %if.end2300, !dbg !9071

land.lhs.true2266:                                ; preds = %if.end2263
  %1263 = load ptr, ptr %k, align 8, !dbg !9071, !tbaa !2658
  %1264 = load i64, ptr %klen, align 8, !dbg !9071, !tbaa !2663
  %call2267 = call i32 @strncmp(ptr noundef @.str.149, ptr noundef %1263, i64 noundef %1264) #22, !dbg !9071
  %cmp2268 = icmp eq i32 %call2267, 0, !dbg !9071
  br i1 %cmp2268, label %if.then2270, label %if.end2300, !dbg !9072

if.then2270:                                      ; preds = %land.lhs.true2266
  call void @llvm.lifetime.start.p0(i64 8, ptr %mv2271) #18, !dbg !9073
  tail call void @llvm.dbg.declare(metadata ptr %mv2271, metadata !2348, metadata !DIExpression()), !dbg !9073
  call void @llvm.lifetime.start.p0(i64 8, ptr %end2272) #18, !dbg !9073
  tail call void @llvm.dbg.declare(metadata ptr %end2272, metadata !2351, metadata !DIExpression()), !dbg !9073
  call void @set_errno(i32 noundef 0), !dbg !9073
  %1265 = load ptr, ptr %v, align 8, !dbg !9073, !tbaa !2658
  %call2273 = call i64 @malloc_strtoumax(ptr noundef %1265, ptr noundef %end2272, i32 noundef 0), !dbg !9073
  store i64 %call2273, ptr %mv2271, align 8, !dbg !9073, !tbaa !2663
  %call2274 = call i32 @get_errno(), !dbg !9074
  %cmp2275 = icmp ne i32 %call2274, 0, !dbg !9074
  br i1 %cmp2275, label %if.then2281, label %lor.lhs.false2277, !dbg !9074

lor.lhs.false2277:                                ; preds = %if.then2270
  %1266 = load ptr, ptr %end2272, align 8, !dbg !9074, !tbaa !2658
  %1267 = ptrtoint ptr %1266 to i64, !dbg !9074
  %1268 = load ptr, ptr %v, align 8, !dbg !9074, !tbaa !2658
  %1269 = ptrtoint ptr %1268 to i64, !dbg !9074
  %sub2278 = sub i64 %1267, %1269, !dbg !9074
  %1270 = load i64, ptr %vlen, align 8, !dbg !9074, !tbaa !2663
  %cmp2279 = icmp ne i64 %sub2278, %1270, !dbg !9074
  br i1 %cmp2279, label %if.then2281, label %if.else2285, !dbg !9073

if.then2281:                                      ; preds = %lor.lhs.false2277, %if.then2270
  %1271 = load i8, ptr %initial_call.addr, align 1, !dbg !9076, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2282 = trunc i8 %1271 to i1, !dbg !9076
  br i1 %tobool2282, label %if.end2284, label %if.then2283, !dbg !9079

if.then2283:                                      ; preds = %if.then2281
  %1272 = load ptr, ptr %k, align 8, !dbg !9080, !tbaa !2658
  %1273 = load i64, ptr %klen, align 8, !dbg !9080, !tbaa !2663
  %1274 = load ptr, ptr %v, align 8, !dbg !9080, !tbaa !2658
  %1275 = load i64, ptr %vlen, align 8, !dbg !9080, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.91, ptr noundef %1272, i64 noundef %1273, ptr noundef %1274, i64 noundef %1275), !dbg !9080
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !9080, !tbaa !2695
  br label %if.end2284, !dbg !9080

if.end2284:                                       ; preds = %if.then2283, %if.then2281
  br label %if.end2286, !dbg !9079

if.else2285:                                      ; preds = %lor.lhs.false2277
  %1276 = load i64, ptr %mv2271, align 8, !dbg !9082, !tbaa !2663
  store i64 %1276, ptr @opt_san_guard_large, align 8, !dbg !9082, !tbaa !2663
  br label %if.end2286

if.end2286:                                       ; preds = %if.else2285, %if.end2284
  %1277 = load i8, ptr %initial_call.addr, align 1, !dbg !9087, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2287 = trunc i8 %1277 to i1, !dbg !9087
  br i1 %tobool2287, label %if.end2297, label %land.lhs.true2288, !dbg !9087

land.lhs.true2288:                                ; preds = %if.end2286
  %1278 = load i8, ptr @opt_confirm_conf, align 1, !dbg !9087, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2289 = trunc i8 %1278 to i1, !dbg !9087
  br i1 %tobool2289, label %land.lhs.true2291, label %if.end2297, !dbg !9087

land.lhs.true2291:                                ; preds = %land.lhs.true2288
  %1279 = load i8, ptr %cur_opt_valid, align 1, !dbg !9087, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2292 = trunc i8 %1279 to i1, !dbg !9087
  br i1 %tobool2292, label %if.then2294, label %if.end2297, !dbg !9090

if.then2294:                                      ; preds = %land.lhs.true2291
  %1280 = load i64, ptr %klen, align 8, !dbg !9091, !tbaa !2663
  %conv2295 = trunc i64 %1280 to i32, !dbg !9091
  %1281 = load ptr, ptr %k, align 8, !dbg !9091, !tbaa !2658
  %1282 = load i64, ptr %vlen, align 8, !dbg !9091, !tbaa !2663
  %conv2296 = trunc i64 %1282 to i32, !dbg !9091
  %1283 = load ptr, ptr %v, align 8, !dbg !9091, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.92, i32 noundef %conv2295, ptr noundef %1281, i32 noundef %conv2296, ptr noundef %1283), !dbg !9091
  br label %if.end2297, !dbg !9091

if.end2297:                                       ; preds = %if.then2294, %land.lhs.true2291, %land.lhs.true2288, %if.end2286
  store i32 5, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end2272) #18, !dbg !9071
  call void @llvm.lifetime.end.p0(i64 8, ptr %mv2271) #18, !dbg !9071
  br label %cleanup2304

if.end2300:                                       ; preds = %land.lhs.true2266, %if.end2263
  %1284 = load i8, ptr %initial_call.addr, align 1, !dbg !9093, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2301 = trunc i8 %1284 to i1, !dbg !9093
  br i1 %tobool2301, label %if.end2303, label %if.then2302, !dbg !9095

if.then2302:                                      ; preds = %if.end2300
  %1285 = load ptr, ptr %k, align 8, !dbg !9096, !tbaa !2658
  %1286 = load i64, ptr %klen, align 8, !dbg !9096, !tbaa !2663
  %1287 = load ptr, ptr %v, align 8, !dbg !9096, !tbaa !2658
  %1288 = load i64, ptr %vlen, align 8, !dbg !9096, !tbaa !2663
  call void @malloc_conf_error(ptr noundef @.str.150, ptr noundef %1285, i64 noundef %1286, ptr noundef %1287, i64 noundef %1288), !dbg !9096
  store i8 0, ptr %cur_opt_valid, align 1, !dbg !9096, !tbaa !2695
  br label %if.end2303, !dbg !9096

if.end2303:                                       ; preds = %if.then2302, %if.end2300
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7445
  br label %cleanup2304, !dbg !7445

cleanup2304:                                      ; preds = %if.end2303, %if.end2297, %if.end2260, %if.end2225, %if.end2175, %if.end2129, %if.end2097, %if.end2069, %if.end2022, %if.end1980, %if.end1938, %if.end1896, %if.end1853, %if.end1822, %if.end1794, %if.end1757, %if.end1719, %if.end1676, %if.end1629, %if.end1584, %if.end1542, %if.end1497, %if.end1456, %if.end1415, %if.end1370, %if.end1325, %if.end1277, %if.end1229, %if.end1192, %if.end1150, %if.end1102, %if.end1054, %if.end1006, %if.end958, %if.end917, %if.end877, %if.end837, %if.end797, %if.end757, %if.end699, %if.end678, %if.end635, %if.end616, %if.end574, %if.end526, %if.end478, %if.end433, %if.end396, %if.end362, %if.end322, %if.end296, %if.end249, %if.end209, %if.end176, %if.end136, %if.end96, %if.then56, %if.end53
  call void @llvm.lifetime.end.p0(i64 1, ptr %cur_opt_valid) #18, !dbg !7445
  %cleanup.dest2305 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest2305, label %unreachable [
    i32 0, label %cleanup.cont2306
    i32 5, label %while.cond
  ]

cleanup.cont2306:                                 ; preds = %cleanup2304
  br label %while.cond, !dbg !7409, !llvm.loop !7444

while.end:                                        ; preds = %land.end
  %1289 = load i8, ptr @opt_abort_conf, align 1, !dbg !9098, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2307 = trunc i8 %1289 to i1, !dbg !9098
  br i1 %tobool2307, label %land.lhs.true2309, label %if.end2313, !dbg !9100

land.lhs.true2309:                                ; preds = %while.end
  %1290 = load i8, ptr @had_conf_error, align 1, !dbg !9101, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2310 = trunc i8 %1290 to i1, !dbg !9101
  br i1 %tobool2310, label %if.then2312, label %if.end2313, !dbg !9102

if.then2312:                                      ; preds = %land.lhs.true2309
  call void @malloc_abort_invalid_conf(), !dbg !9103
  br label %if.end2313, !dbg !9105

if.end2313:                                       ; preds = %if.then2312, %land.lhs.true2309, %while.end
  br label %for.inc2314, !dbg !9106

for.inc2314:                                      ; preds = %if.end2313, %if.then11
  %1291 = load i32, ptr %i, align 4, !dbg !9107, !tbaa !2791
  %inc2315 = add i32 %1291, 1, !dbg !9107
  store i32 %inc2315, ptr %i, align 4, !dbg !9107, !tbaa !2791
  br label %for.cond, !dbg !9108, !llvm.loop !9109

for.end2316:                                      ; preds = %for.cond
  call void @atomic_store_b(ptr noundef @log_init_done, i1 noundef zeroext true, i32 noundef 2), !dbg !9111
  call void @llvm.lifetime.end.p0(i64 8, ptr %vlen) #18, !dbg !9112
  call void @llvm.lifetime.end.p0(i64 8, ptr %klen) #18, !dbg !9112
  call void @llvm.lifetime.end.p0(i64 8, ptr %v) #18, !dbg !9112
  call void @llvm.lifetime.end.p0(i64 8, ptr %k) #18, !dbg !9112
  call void @llvm.lifetime.end.p0(i64 8, ptr %opts) #18, !dbg !9112
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !9112
  ret void, !dbg !9112

unreachable:                                      ; preds = %cleanup2304, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_conf_init_check_deps() #0 !dbg !9113 {
entry:
  %retval = alloca i1, align 1
  %0 = load i8, ptr @opt_prof_leak_error, align 1, !dbg !9114, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !9114
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9116

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, ptr @opt_prof_final, align 1, !dbg !9117, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1 = trunc i8 %1 to i1, !dbg !9117
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9118

if.then:                                          ; preds = %land.lhs.true
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.158), !dbg !9119
  store i1 true, ptr %retval, align 1, !dbg !9121
  br label %return, !dbg !9121

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, ptr %retval, align 1, !dbg !9122
  br label %return, !dbg !9122

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, ptr %retval, align 1, !dbg !9123
  ret i1 %2, !dbg !9123
}

; Function Attrs: nounwind uwtable
define internal ptr @obtain_malloc_conf(i32 noundef %which_source, ptr noundef %buf) #0 !dbg !9124 {
entry:
  %which_source.addr = alloca i32, align 4
  %buf.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %linklen = alloca i64, align 8
  %saved_errno = alloca i32, align 4
  %linkname = alloca ptr, align 8
  %envname = alloca ptr, align 8
  store i32 %which_source, ptr %which_source.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %which_source.addr, metadata !9128, metadata !DIExpression()), !dbg !9138
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %buf.addr, metadata !9129, metadata !DIExpression()), !dbg !9139
  br label %do.body, !dbg !9140

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9141

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !9143
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !9130, metadata !DIExpression()), !dbg !9144
  %0 = load i32, ptr %which_source.addr, align 4, !dbg !9145, !tbaa !2791
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb7
    i32 4, label %sw.bb13
  ], !dbg !9146

sw.bb:                                            ; preds = %do.end
  store ptr @.str.88, ptr %ret, align 8, !dbg !9147, !tbaa !2658
  br label %sw.epilog, !dbg !9148

sw.bb1:                                           ; preds = %do.end
  %1 = load ptr, ptr @je_malloc_conf, align 8, !dbg !9149, !tbaa !2658
  %cmp = icmp ne ptr %1, null, !dbg !9151
  br i1 %cmp, label %if.then, label %if.else, !dbg !9152

if.then:                                          ; preds = %sw.bb1
  %2 = load ptr, ptr @je_malloc_conf, align 8, !dbg !9153, !tbaa !2658
  store ptr %2, ptr %ret, align 8, !dbg !9155, !tbaa !2658
  br label %if.end, !dbg !9156

if.else:                                          ; preds = %sw.bb1
  store ptr null, ptr %ret, align 8, !dbg !9157, !tbaa !2658
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !9159

sw.bb2:                                           ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %linklen) #18, !dbg !9160
  tail call void @llvm.dbg.declare(metadata ptr %linklen, metadata !9131, metadata !DIExpression()), !dbg !9161
  store i64 0, ptr %linklen, align 8, !dbg !9161, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 4, ptr %saved_errno) #18, !dbg !9162
  tail call void @llvm.dbg.declare(metadata ptr %saved_errno, metadata !9134, metadata !DIExpression()), !dbg !9163
  %call = call ptr @__errno_location() #21, !dbg !9164
  %3 = load i32, ptr %call, align 4, !dbg !9164, !tbaa !2791
  store i32 %3, ptr %saved_errno, align 4, !dbg !9163, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %linkname) #18, !dbg !9165
  tail call void @llvm.dbg.declare(metadata ptr %linkname, metadata !9135, metadata !DIExpression()), !dbg !9166
  store ptr @.str.151, ptr %linkname, align 8, !dbg !9166, !tbaa !2658
  %4 = load ptr, ptr %linkname, align 8, !dbg !9167, !tbaa !2658
  %5 = load ptr, ptr %buf.addr, align 8, !dbg !9168, !tbaa !2658
  %call3 = call i64 @readlink(ptr noundef %4, ptr noundef %5, i64 noundef 4096) #18, !dbg !9169
  store i64 %call3, ptr %linklen, align 8, !dbg !9170, !tbaa !2663
  %6 = load i64, ptr %linklen, align 8, !dbg !9171, !tbaa !2663
  %cmp4 = icmp eq i64 %6, -1, !dbg !9173
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9174

if.then5:                                         ; preds = %sw.bb2
  store i64 0, ptr %linklen, align 8, !dbg !9175, !tbaa !2663
  %7 = load i32, ptr %saved_errno, align 4, !dbg !9177, !tbaa !2791
  call void @set_errno(i32 noundef %7), !dbg !9178
  br label %if.end6, !dbg !9179

if.end6:                                          ; preds = %if.then5, %sw.bb2
  %8 = load ptr, ptr %buf.addr, align 8, !dbg !9180, !tbaa !2658
  %9 = load i64, ptr %linklen, align 8, !dbg !9181, !tbaa !2663
  %arrayidx = getelementptr inbounds i8, ptr %8, i64 %9, !dbg !9180
  store i8 0, ptr %arrayidx, align 1, !dbg !9182, !tbaa !2810
  %10 = load ptr, ptr %buf.addr, align 8, !dbg !9183, !tbaa !2658
  store ptr %10, ptr %ret, align 8, !dbg !9184, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %linkname) #18, !dbg !9185
  call void @llvm.lifetime.end.p0(i64 4, ptr %saved_errno) #18, !dbg !9185
  call void @llvm.lifetime.end.p0(i64 8, ptr %linklen) #18, !dbg !9185
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %envname) #18, !dbg !9186
  tail call void @llvm.dbg.declare(metadata ptr %envname, metadata !9136, metadata !DIExpression()), !dbg !9187
  store ptr @.str.152, ptr %envname, align 8, !dbg !9187, !tbaa !2658
  %11 = load ptr, ptr %envname, align 8, !dbg !9188, !tbaa !2658
  %call8 = call ptr @jemalloc_secure_getenv(ptr noundef %11), !dbg !9190
  store ptr %call8, ptr %ret, align 8, !dbg !9191, !tbaa !2658
  %cmp9 = icmp ne ptr %call8, null, !dbg !9192
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !9193

if.then10:                                        ; preds = %sw.bb7
  br label %if.end12, !dbg !9194

if.else11:                                        ; preds = %sw.bb7
  store ptr null, ptr %ret, align 8, !dbg !9196, !tbaa !2658
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %envname) #18, !dbg !9198
  br label %sw.epilog

sw.bb13:                                          ; preds = %do.end
  %12 = load ptr, ptr @je_malloc_conf_2_conf_harder, align 8, !dbg !9199, !tbaa !2658
  store ptr %12, ptr %ret, align 8, !dbg !9201, !tbaa !2658
  br label %sw.epilog, !dbg !9202

sw.default:                                       ; preds = %do.end
  br label %do.body14, !dbg !9203

do.body14:                                        ; preds = %sw.default
  unreachable, !dbg !9204

do.cond:                                          ; No predecessors!
  br label %do.end15, !dbg !9204

do.end15:                                         ; preds = %do.cond
  store ptr null, ptr %ret, align 8, !dbg !9206, !tbaa !2658
  br label %sw.epilog, !dbg !9207

sw.epilog:                                        ; preds = %do.end15, %sw.bb13, %if.end12, %if.end6, %if.end, %sw.bb
  %13 = load ptr, ptr %ret, align 8, !dbg !9208, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !9209
  ret ptr %13, !dbg !9210
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_conf_next(ptr noundef %opts_p, ptr noundef %k_p, ptr noundef %klen_p, ptr noundef %v_p, ptr noundef %vlen_p) #0 !dbg !9211 {
entry:
  %retval = alloca i1, align 1
  %opts_p.addr = alloca ptr, align 8
  %k_p.addr = alloca ptr, align 8
  %klen_p.addr = alloca ptr, align 8
  %v_p.addr = alloca ptr, align 8
  %vlen_p.addr = alloca ptr, align 8
  %accept = alloca i8, align 1
  %opts = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %opts_p, ptr %opts_p.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %opts_p.addr, metadata !9215, metadata !DIExpression()), !dbg !9222
  store ptr %k_p, ptr %k_p.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %k_p.addr, metadata !9216, metadata !DIExpression()), !dbg !9223
  store ptr %klen_p, ptr %klen_p.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %klen_p.addr, metadata !9217, metadata !DIExpression()), !dbg !9224
  store ptr %v_p, ptr %v_p.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %v_p.addr, metadata !9218, metadata !DIExpression()), !dbg !9225
  store ptr %vlen_p, ptr %vlen_p.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %vlen_p.addr, metadata !9219, metadata !DIExpression()), !dbg !9226
  call void @llvm.lifetime.start.p0(i64 1, ptr %accept) #18, !dbg !9227
  tail call void @llvm.dbg.declare(metadata ptr %accept, metadata !9220, metadata !DIExpression()), !dbg !9228
  call void @llvm.lifetime.start.p0(i64 8, ptr %opts) #18, !dbg !9229
  tail call void @llvm.dbg.declare(metadata ptr %opts, metadata !9221, metadata !DIExpression()), !dbg !9230
  %0 = load ptr, ptr %opts_p.addr, align 8, !dbg !9231, !tbaa !2658
  %1 = load ptr, ptr %0, align 8, !dbg !9232, !tbaa !2658
  store ptr %1, ptr %opts, align 8, !dbg !9230, !tbaa !2658
  %2 = load ptr, ptr %opts, align 8, !dbg !9233, !tbaa !2658
  %3 = load ptr, ptr %k_p.addr, align 8, !dbg !9234, !tbaa !2658
  store ptr %2, ptr %3, align 8, !dbg !9235, !tbaa !2658
  store i8 0, ptr %accept, align 1, !dbg !9236, !tbaa !2695
  br label %for.cond, !dbg !9238

for.cond:                                         ; preds = %sw.epilog, %entry
  %4 = load i8, ptr %accept, align 1, !dbg !9239, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %4 to i1, !dbg !9239
  %lnot = xor i1 %tobool, true, !dbg !9241
  br i1 %lnot, label %for.body, label %for.end, !dbg !9242

for.body:                                         ; preds = %for.cond
  %5 = load ptr, ptr %opts, align 8, !dbg !9243, !tbaa !2658
  %6 = load i8, ptr %5, align 1, !dbg !9245, !tbaa !2810
  %conv = sext i8 %6 to i32, !dbg !9245
  switch i32 %conv, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 95, label %sw.bb
    i32 58, label %sw.bb1
    i32 0, label %sw.bb4
  ], !dbg !9246

sw.bb:                                            ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %7 = load ptr, ptr %opts, align 8, !dbg !9247, !tbaa !2658
  %incdec.ptr = getelementptr inbounds i8, ptr %7, i32 1, !dbg !9247
  store ptr %incdec.ptr, ptr %opts, align 8, !dbg !9247, !tbaa !2658
  br label %sw.epilog, !dbg !9249

sw.bb1:                                           ; preds = %for.body
  %8 = load ptr, ptr %opts, align 8, !dbg !9250, !tbaa !2658
  %incdec.ptr2 = getelementptr inbounds i8, ptr %8, i32 1, !dbg !9250
  store ptr %incdec.ptr2, ptr %opts, align 8, !dbg !9250, !tbaa !2658
  %9 = load ptr, ptr %opts, align 8, !dbg !9251, !tbaa !2658
  %10 = ptrtoint ptr %9 to i64, !dbg !9252
  %sub = sub i64 %10, 1, !dbg !9253
  %11 = load ptr, ptr %k_p.addr, align 8, !dbg !9254, !tbaa !2658
  %12 = load ptr, ptr %11, align 8, !dbg !9255, !tbaa !2658
  %13 = ptrtoint ptr %12 to i64, !dbg !9256
  %sub3 = sub i64 %sub, %13, !dbg !9257
  %14 = load ptr, ptr %klen_p.addr, align 8, !dbg !9258, !tbaa !2658
  store i64 %sub3, ptr %14, align 8, !dbg !9259, !tbaa !2663
  %15 = load ptr, ptr %opts, align 8, !dbg !9260, !tbaa !2658
  %16 = load ptr, ptr %v_p.addr, align 8, !dbg !9261, !tbaa !2658
  store ptr %15, ptr %16, align 8, !dbg !9262, !tbaa !2658
  store i8 1, ptr %accept, align 1, !dbg !9263, !tbaa !2695
  br label %sw.epilog, !dbg !9264

sw.bb4:                                           ; preds = %for.body
  %17 = load ptr, ptr %opts, align 8, !dbg !9265, !tbaa !2658
  %18 = load ptr, ptr %opts_p.addr, align 8, !dbg !9267, !tbaa !2658
  %19 = load ptr, ptr %18, align 8, !dbg !9268, !tbaa !2658
  %cmp = icmp ne ptr %17, %19, !dbg !9269
  br i1 %cmp, label %if.then, label %if.end, !dbg !9270

if.then:                                          ; preds = %sw.bb4
  call void @malloc_write(ptr noundef @.str.153), !dbg !9271
  store i8 1, ptr @had_conf_error, align 1, !dbg !9273, !tbaa !2695
  br label %if.end, !dbg !9274

if.end:                                           ; preds = %if.then, %sw.bb4
  store i1 true, ptr %retval, align 1, !dbg !9275
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9275

sw.default:                                       ; preds = %for.body
  call void @malloc_write(ptr noundef @.str.154), !dbg !9276
  store i8 1, ptr @had_conf_error, align 1, !dbg !9277, !tbaa !2695
  store i1 true, ptr %retval, align 1, !dbg !9278
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9278

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  br label %for.cond, !dbg !9279, !llvm.loop !9280

for.end:                                          ; preds = %for.cond
  store i8 0, ptr %accept, align 1, !dbg !9282, !tbaa !2695
  br label %for.cond6, !dbg !9284

for.cond6:                                        ; preds = %sw.epilog24, %for.end
  %20 = load i8, ptr %accept, align 1, !dbg !9285, !tbaa !2695, !range !2708, !noundef !2709
  %tobool7 = trunc i8 %20 to i1, !dbg !9285
  %lnot8 = xor i1 %tobool7, true, !dbg !9287
  br i1 %lnot8, label %for.body9, label %for.end25, !dbg !9288

for.body9:                                        ; preds = %for.cond6
  %21 = load ptr, ptr %opts, align 8, !dbg !9289, !tbaa !2658
  %22 = load i8, ptr %21, align 1, !dbg !9291, !tbaa !2810
  %conv10 = sext i8 %22 to i32, !dbg !9291
  switch i32 %conv10, label %sw.default22 [
    i32 44, label %sw.bb11
    i32 0, label %sw.bb20
  ], !dbg !9292

sw.bb11:                                          ; preds = %for.body9
  %23 = load ptr, ptr %opts, align 8, !dbg !9293, !tbaa !2658
  %incdec.ptr12 = getelementptr inbounds i8, ptr %23, i32 1, !dbg !9293
  store ptr %incdec.ptr12, ptr %opts, align 8, !dbg !9293, !tbaa !2658
  %24 = load ptr, ptr %opts, align 8, !dbg !9295, !tbaa !2658
  %25 = load i8, ptr %24, align 1, !dbg !9297, !tbaa !2810
  %conv13 = sext i8 %25 to i32, !dbg !9297
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !9298
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !9299

if.then16:                                        ; preds = %sw.bb11
  call void @malloc_write(ptr noundef @.str.155), !dbg !9300
  store i8 1, ptr @had_conf_error, align 1, !dbg !9302, !tbaa !2695
  br label %if.end17, !dbg !9303

if.end17:                                         ; preds = %if.then16, %sw.bb11
  %26 = load ptr, ptr %opts, align 8, !dbg !9304, !tbaa !2658
  %27 = ptrtoint ptr %26 to i64, !dbg !9305
  %sub18 = sub i64 %27, 1, !dbg !9306
  %28 = load ptr, ptr %v_p.addr, align 8, !dbg !9307, !tbaa !2658
  %29 = load ptr, ptr %28, align 8, !dbg !9308, !tbaa !2658
  %30 = ptrtoint ptr %29 to i64, !dbg !9309
  %sub19 = sub i64 %sub18, %30, !dbg !9310
  %31 = load ptr, ptr %vlen_p.addr, align 8, !dbg !9311, !tbaa !2658
  store i64 %sub19, ptr %31, align 8, !dbg !9312, !tbaa !2663
  store i8 1, ptr %accept, align 1, !dbg !9313, !tbaa !2695
  br label %sw.epilog24, !dbg !9314

sw.bb20:                                          ; preds = %for.body9
  %32 = load ptr, ptr %opts, align 8, !dbg !9315, !tbaa !2658
  %33 = ptrtoint ptr %32 to i64, !dbg !9316
  %34 = load ptr, ptr %v_p.addr, align 8, !dbg !9317, !tbaa !2658
  %35 = load ptr, ptr %34, align 8, !dbg !9318, !tbaa !2658
  %36 = ptrtoint ptr %35 to i64, !dbg !9319
  %sub21 = sub i64 %33, %36, !dbg !9320
  %37 = load ptr, ptr %vlen_p.addr, align 8, !dbg !9321, !tbaa !2658
  store i64 %sub21, ptr %37, align 8, !dbg !9322, !tbaa !2663
  store i8 1, ptr %accept, align 1, !dbg !9323, !tbaa !2695
  br label %sw.epilog24, !dbg !9324

sw.default22:                                     ; preds = %for.body9
  %38 = load ptr, ptr %opts, align 8, !dbg !9325, !tbaa !2658
  %incdec.ptr23 = getelementptr inbounds i8, ptr %38, i32 1, !dbg !9325
  store ptr %incdec.ptr23, ptr %opts, align 8, !dbg !9325, !tbaa !2658
  br label %sw.epilog24, !dbg !9326

sw.epilog24:                                      ; preds = %sw.default22, %sw.bb20, %if.end17
  br label %for.cond6, !dbg !9327, !llvm.loop !9328

for.end25:                                        ; preds = %for.cond6
  %39 = load ptr, ptr %opts, align 8, !dbg !9330, !tbaa !2658
  %40 = load ptr, ptr %opts_p.addr, align 8, !dbg !9331, !tbaa !2658
  store ptr %39, ptr %40, align 8, !dbg !9332, !tbaa !2658
  store i1 false, ptr %retval, align 1, !dbg !9333
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9333

cleanup:                                          ; preds = %for.end25, %sw.default, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %opts) #18, !dbg !9334
  call void @llvm.lifetime.end.p0(i64 1, ptr %accept) #18, !dbg !9334
  %41 = load i1, ptr %retval, align 1, !dbg !9334
  ret i1 %41, !dbg !9334
}

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !9335 i32 @strncmp(ptr noundef, ptr noundef, i64 noundef) #16

; Function Attrs: nounwind uwtable
define internal void @malloc_conf_error(ptr noundef %msg, ptr noundef %k, i64 noundef %klen, ptr noundef %v, i64 noundef %vlen) #0 !dbg !9339 {
entry:
  %msg.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %klen.addr = alloca i64, align 8
  %v.addr = alloca ptr, align 8
  %vlen.addr = alloca i64, align 8
  %experimental = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %msg, ptr %msg.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %msg.addr, metadata !9343, metadata !DIExpression()), !dbg !9349
  store ptr %k, ptr %k.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %k.addr, metadata !9344, metadata !DIExpression()), !dbg !9350
  store i64 %klen, ptr %klen.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %klen.addr, metadata !9345, metadata !DIExpression()), !dbg !9351
  store ptr %v, ptr %v.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !9346, metadata !DIExpression()), !dbg !9352
  store i64 %vlen, ptr %vlen.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %vlen.addr, metadata !9347, metadata !DIExpression()), !dbg !9353
  %0 = load ptr, ptr %msg.addr, align 8, !dbg !9354, !tbaa !2658
  %1 = load i64, ptr %klen.addr, align 8, !dbg !9355, !tbaa !2663
  %conv = trunc i64 %1 to i32, !dbg !9356
  %2 = load ptr, ptr %k.addr, align 8, !dbg !9357, !tbaa !2658
  %3 = load i64, ptr %vlen.addr, align 8, !dbg !9358, !tbaa !2663
  %conv1 = trunc i64 %3 to i32, !dbg !9359
  %4 = load ptr, ptr %v.addr, align 8, !dbg !9360, !tbaa !2658
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.156, ptr noundef %0, i32 noundef %conv, ptr noundef %2, i32 noundef %conv1, ptr noundef %4), !dbg !9361
  call void @llvm.lifetime.start.p0(i64 8, ptr %experimental) #18, !dbg !9362
  tail call void @llvm.dbg.declare(metadata ptr %experimental, metadata !9348, metadata !DIExpression()), !dbg !9363
  store ptr @.str.157, ptr %experimental, align 8, !dbg !9363, !tbaa !2658
  %5 = load ptr, ptr %k.addr, align 8, !dbg !9364, !tbaa !2658
  %6 = load ptr, ptr %experimental, align 8, !dbg !9366, !tbaa !2658
  %7 = load ptr, ptr %experimental, align 8, !dbg !9367, !tbaa !2658
  %call = call i64 @strlen(ptr noundef %7) #22, !dbg !9368
  %call2 = call i32 @strncmp(ptr noundef %5, ptr noundef %6, i64 noundef %call) #22, !dbg !9369
  %cmp = icmp eq i32 %call2, 0, !dbg !9370
  br i1 %cmp, label %if.then, label %if.end, !dbg !9371

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9372

if.end:                                           ; preds = %entry
  store i8 1, ptr @had_conf_error, align 1, !dbg !9374, !tbaa !2695
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9375
  br label %cleanup, !dbg !9375

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %experimental) #18, !dbg !9375
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !9375

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !9376 zeroext i1 @extent_dss_prec_set(i32 noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_errno(i32 noundef %errnum) #4 !dbg !9380 {
entry:
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, ptr %errnum.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %errnum.addr, metadata !9385, metadata !DIExpression()), !dbg !9386
  %0 = load i32, ptr %errnum.addr, align 4, !dbg !9387, !tbaa !2791
  %call = call ptr @__errno_location() #21, !dbg !9388
  store i32 %0, ptr %call, align 4, !dbg !9389, !tbaa !2791
  ret void, !dbg !9390
}

declare !dbg !9391 i64 @malloc_strtoumax(ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_errno() #4 !dbg !9397 {
entry:
  %call = call ptr @__errno_location() #21, !dbg !9400
  %0 = load i32, ptr %call, align 4, !dbg !9400, !tbaa !2791
  ret i32 %0, !dbg !9401
}

declare !dbg !9402 zeroext i1 @fxp_parse(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_conf_multi_sizes_next(ptr noundef %slab_size_segment_cur, ptr noundef %vlen_left, ptr noundef %slab_start, ptr noundef %slab_end, ptr noundef %new_size) #0 !dbg !9406 {
entry:
  %retval = alloca i1, align 1
  %slab_size_segment_cur.addr = alloca ptr, align 8
  %vlen_left.addr = alloca ptr, align 8
  %slab_start.addr = alloca ptr, align 8
  %slab_end.addr = alloca ptr, align 8
  %new_size.addr = alloca ptr, align 8
  %cur = alloca ptr, align 8
  %end = alloca ptr, align 8
  %um = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %slab_size_segment_cur, ptr %slab_size_segment_cur.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %slab_size_segment_cur.addr, metadata !9410, metadata !DIExpression()), !dbg !9418
  store ptr %vlen_left, ptr %vlen_left.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %vlen_left.addr, metadata !9411, metadata !DIExpression()), !dbg !9419
  store ptr %slab_start, ptr %slab_start.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %slab_start.addr, metadata !9412, metadata !DIExpression()), !dbg !9420
  store ptr %slab_end, ptr %slab_end.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %slab_end.addr, metadata !9413, metadata !DIExpression()), !dbg !9421
  store ptr %new_size, ptr %new_size.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %new_size.addr, metadata !9414, metadata !DIExpression()), !dbg !9422
  call void @llvm.lifetime.start.p0(i64 8, ptr %cur) #18, !dbg !9423
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !9415, metadata !DIExpression()), !dbg !9424
  %0 = load ptr, ptr %slab_size_segment_cur.addr, align 8, !dbg !9425, !tbaa !2658
  %1 = load ptr, ptr %0, align 8, !dbg !9426, !tbaa !2658
  store ptr %1, ptr %cur, align 8, !dbg !9424, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #18, !dbg !9427
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !9416, metadata !DIExpression()), !dbg !9428
  call void @llvm.lifetime.start.p0(i64 8, ptr %um) #18, !dbg !9429
  tail call void @llvm.dbg.declare(metadata ptr %um, metadata !9417, metadata !DIExpression()), !dbg !9430
  call void @set_errno(i32 noundef 0), !dbg !9431
  %2 = load ptr, ptr %cur, align 8, !dbg !9432, !tbaa !2658
  %call = call i64 @malloc_strtoumax(ptr noundef %2, ptr noundef %end, i32 noundef 0), !dbg !9433
  store i64 %call, ptr %um, align 8, !dbg !9434, !tbaa !2663
  %call1 = call i32 @get_errno(), !dbg !9435
  %cmp = icmp ne i32 %call1, 0, !dbg !9437
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9438

lor.lhs.false:                                    ; preds = %entry
  %3 = load ptr, ptr %end, align 8, !dbg !9439, !tbaa !2658
  %4 = load i8, ptr %3, align 1, !dbg !9440, !tbaa !2810
  %conv = sext i8 %4 to i32, !dbg !9440
  %cmp2 = icmp ne i32 %conv, 45, !dbg !9441
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9442

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, ptr %retval, align 1, !dbg !9443
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9443

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i64, ptr %um, align 8, !dbg !9445, !tbaa !2663
  %6 = load ptr, ptr %slab_start.addr, align 8, !dbg !9446, !tbaa !2658
  store i64 %5, ptr %6, align 8, !dbg !9447, !tbaa !2663
  %7 = load ptr, ptr %end, align 8, !dbg !9448, !tbaa !2658
  %add.ptr = getelementptr inbounds i8, ptr %7, i64 1, !dbg !9449
  store ptr %add.ptr, ptr %cur, align 8, !dbg !9450, !tbaa !2658
  %8 = load ptr, ptr %cur, align 8, !dbg !9451, !tbaa !2658
  %call4 = call i64 @malloc_strtoumax(ptr noundef %8, ptr noundef %end, i32 noundef 0), !dbg !9452
  store i64 %call4, ptr %um, align 8, !dbg !9453, !tbaa !2663
  %call5 = call i32 @get_errno(), !dbg !9454
  %cmp6 = icmp ne i32 %call5, 0, !dbg !9456
  br i1 %cmp6, label %if.then12, label %lor.lhs.false8, !dbg !9457

lor.lhs.false8:                                   ; preds = %if.end
  %9 = load ptr, ptr %end, align 8, !dbg !9458, !tbaa !2658
  %10 = load i8, ptr %9, align 1, !dbg !9459, !tbaa !2810
  %conv9 = sext i8 %10 to i32, !dbg !9459
  %cmp10 = icmp ne i32 %conv9, 58, !dbg !9460
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9461

if.then12:                                        ; preds = %lor.lhs.false8, %if.end
  store i1 true, ptr %retval, align 1, !dbg !9462
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9462

if.end13:                                         ; preds = %lor.lhs.false8
  %11 = load i64, ptr %um, align 8, !dbg !9464, !tbaa !2663
  %12 = load ptr, ptr %slab_end.addr, align 8, !dbg !9465, !tbaa !2658
  store i64 %11, ptr %12, align 8, !dbg !9466, !tbaa !2663
  %13 = load ptr, ptr %end, align 8, !dbg !9467, !tbaa !2658
  %add.ptr14 = getelementptr inbounds i8, ptr %13, i64 1, !dbg !9468
  store ptr %add.ptr14, ptr %cur, align 8, !dbg !9469, !tbaa !2658
  %14 = load ptr, ptr %cur, align 8, !dbg !9470, !tbaa !2658
  %call15 = call i64 @malloc_strtoumax(ptr noundef %14, ptr noundef %end, i32 noundef 0), !dbg !9471
  store i64 %call15, ptr %um, align 8, !dbg !9472, !tbaa !2663
  %call16 = call i32 @get_errno(), !dbg !9473
  %cmp17 = icmp ne i32 %call16, 0, !dbg !9475
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9476

if.then19:                                        ; preds = %if.end13
  store i1 true, ptr %retval, align 1, !dbg !9477
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9477

if.end20:                                         ; preds = %if.end13
  %15 = load i64, ptr %um, align 8, !dbg !9479, !tbaa !2663
  %16 = load ptr, ptr %new_size.addr, align 8, !dbg !9480, !tbaa !2658
  store i64 %15, ptr %16, align 8, !dbg !9481, !tbaa !2663
  %17 = load ptr, ptr %end, align 8, !dbg !9482, !tbaa !2658
  %18 = load i8, ptr %17, align 1, !dbg !9484, !tbaa !2810
  %conv21 = sext i8 %18 to i32, !dbg !9484
  %cmp22 = icmp eq i32 %conv21, 124, !dbg !9485
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9486

if.then24:                                        ; preds = %if.end20
  %19 = load ptr, ptr %end, align 8, !dbg !9487, !tbaa !2658
  %incdec.ptr = getelementptr inbounds i8, ptr %19, i32 1, !dbg !9487
  store ptr %incdec.ptr, ptr %end, align 8, !dbg !9487, !tbaa !2658
  br label %if.end25, !dbg !9489

if.end25:                                         ; preds = %if.then24, %if.end20
  %20 = load ptr, ptr %end, align 8, !dbg !9490, !tbaa !2658
  %21 = load ptr, ptr %slab_size_segment_cur.addr, align 8, !dbg !9491, !tbaa !2658
  %22 = load ptr, ptr %21, align 8, !dbg !9492, !tbaa !2658
  %sub.ptr.lhs.cast = ptrtoint ptr %20 to i64, !dbg !9493
  %sub.ptr.rhs.cast = ptrtoint ptr %22 to i64, !dbg !9493
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9493
  %23 = load ptr, ptr %vlen_left.addr, align 8, !dbg !9494, !tbaa !2658
  %24 = load i64, ptr %23, align 8, !dbg !9495, !tbaa !2663
  %sub = sub i64 %24, %sub.ptr.sub, !dbg !9495
  store i64 %sub, ptr %23, align 8, !dbg !9495, !tbaa !2663
  %25 = load ptr, ptr %end, align 8, !dbg !9496, !tbaa !2658
  %26 = load ptr, ptr %slab_size_segment_cur.addr, align 8, !dbg !9497, !tbaa !2658
  store ptr %25, ptr %26, align 8, !dbg !9498, !tbaa !2658
  store i1 false, ptr %retval, align 1, !dbg !9499
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9499

cleanup:                                          ; preds = %if.end25, %if.then19, %if.then12, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %um) #18, !dbg !9500
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #18, !dbg !9500
  call void @llvm.lifetime.end.p0(i64 8, ptr %cur) #18, !dbg !9500
  %27 = load i1, ptr %retval, align 1, !dbg !9500
  ret i1 %27, !dbg !9500
}

declare !dbg !9501 zeroext i1 @bin_update_shard_size(ptr noundef, i64 noundef, i64 noundef, i64 noundef) #5

; Function Attrs: nounwind uwtable
define internal void @init_opt_stats_opts(ptr noundef %v, i64 noundef %vlen, ptr noundef %dest) #0 !dbg !9504 {
entry:
  %v.addr = alloca ptr, align 8
  %vlen.addr = alloca i64, align 8
  %dest.addr = alloca ptr, align 8
  %opts_len = alloca i64, align 8
  %i = alloca i64, align 8
  store ptr %v, ptr %v.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !9508, metadata !DIExpression()), !dbg !9514
  store i64 %vlen, ptr %vlen.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %vlen.addr, metadata !9509, metadata !DIExpression()), !dbg !9515
  store ptr %dest, ptr %dest.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %dest.addr, metadata !9510, metadata !DIExpression()), !dbg !9516
  call void @llvm.lifetime.start.p0(i64 8, ptr %opts_len) #18, !dbg !9517
  tail call void @llvm.dbg.declare(metadata ptr %opts_len, metadata !9511, metadata !DIExpression()), !dbg !9518
  %0 = load ptr, ptr %dest.addr, align 8, !dbg !9519, !tbaa !2658
  %call = call i64 @strlen(ptr noundef %0) #22, !dbg !9520
  store i64 %call, ptr %opts_len, align 8, !dbg !9518, !tbaa !2663
  br label %do.body, !dbg !9521

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !9522

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !9522

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #18, !dbg !9524
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !9512, metadata !DIExpression()), !dbg !9525
  store i64 0, ptr %i, align 8, !dbg !9525, !tbaa !2663
  br label %for.cond, !dbg !9524

for.cond:                                         ; preds = %for.inc, %do.end
  %1 = load i64, ptr %i, align 8, !dbg !9526, !tbaa !2663
  %2 = load i64, ptr %vlen.addr, align 8, !dbg !9528, !tbaa !2663
  %cmp = icmp ult i64 %1, %2, !dbg !9529
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !dbg !9530

for.cond.cleanup:                                 ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #18, !dbg !9531
  br label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %v.addr, align 8, !dbg !9532, !tbaa !2658
  %4 = load i64, ptr %i, align 8, !dbg !9534, !tbaa !2663
  %arrayidx = getelementptr inbounds i8, ptr %3, i64 %4, !dbg !9532
  %5 = load i8, ptr %arrayidx, align 1, !dbg !9532, !tbaa !2810
  %conv = sext i8 %5 to i32, !dbg !9532
  switch i32 %conv, label %sw.default [
    i32 74, label %sw.epilog
    i32 103, label %sw.epilog
    i32 109, label %sw.epilog
    i32 100, label %sw.epilog
    i32 97, label %sw.epilog
    i32 98, label %sw.epilog
    i32 108, label %sw.epilog
    i32 120, label %sw.epilog
    i32 101, label %sw.epilog
    i32 104, label %sw.epilog
  ], !dbg !9535

sw.default:                                       ; preds = %for.body
  br label %for.inc, !dbg !9536

sw.epilog:                                        ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %6 = load ptr, ptr %dest.addr, align 8, !dbg !9538, !tbaa !2658
  %7 = load ptr, ptr %v.addr, align 8, !dbg !9540, !tbaa !2658
  %8 = load i64, ptr %i, align 8, !dbg !9541, !tbaa !2663
  %arrayidx1 = getelementptr inbounds i8, ptr %7, i64 %8, !dbg !9540
  %9 = load i8, ptr %arrayidx1, align 1, !dbg !9540, !tbaa !2810
  %conv2 = sext i8 %9 to i32, !dbg !9540
  %call3 = call ptr @strchr(ptr noundef %6, i32 noundef %conv2) #22, !dbg !9542
  %cmp4 = icmp ne ptr %call3, null, !dbg !9543
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9544

if.then:                                          ; preds = %sw.epilog
  br label %for.inc, !dbg !9545

if.end:                                           ; preds = %sw.epilog
  %10 = load ptr, ptr %v.addr, align 8, !dbg !9547, !tbaa !2658
  %11 = load i64, ptr %i, align 8, !dbg !9548, !tbaa !2663
  %arrayidx6 = getelementptr inbounds i8, ptr %10, i64 %11, !dbg !9547
  %12 = load i8, ptr %arrayidx6, align 1, !dbg !9547, !tbaa !2810
  %13 = load ptr, ptr %dest.addr, align 8, !dbg !9549, !tbaa !2658
  %14 = load i64, ptr %opts_len, align 8, !dbg !9550, !tbaa !2663
  %inc = add i64 %14, 1, !dbg !9550
  store i64 %inc, ptr %opts_len, align 8, !dbg !9550, !tbaa !2663
  %arrayidx7 = getelementptr inbounds i8, ptr %13, i64 %14, !dbg !9549
  store i8 %12, ptr %arrayidx7, align 1, !dbg !9551, !tbaa !2810
  %15 = load ptr, ptr %dest.addr, align 8, !dbg !9552, !tbaa !2658
  %16 = load i64, ptr %opts_len, align 8, !dbg !9553, !tbaa !2663
  %arrayidx8 = getelementptr inbounds i8, ptr %15, i64 %16, !dbg !9552
  store i8 0, ptr %arrayidx8, align 1, !dbg !9554, !tbaa !2810
  br label %do.body9, !dbg !9555

do.body9:                                         ; preds = %if.end
  br label %do.cond10, !dbg !9556

do.cond10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !9556

do.end11:                                         ; preds = %do.cond10
  br label %for.inc, !dbg !9558

for.inc:                                          ; preds = %do.end11, %if.then, %sw.default
  %17 = load i64, ptr %i, align 8, !dbg !9559, !tbaa !2663
  %inc12 = add i64 %17, 1, !dbg !9559
  store i64 %inc12, ptr %i, align 8, !dbg !9559, !tbaa !2663
  br label %for.cond, !dbg !9531, !llvm.loop !9560

for.end:                                          ; preds = %for.cond.cleanup
  br label %do.body13, !dbg !9562

do.body13:                                        ; preds = %for.end
  br label %do.cond14, !dbg !9563

do.cond14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !9563

do.end15:                                         ; preds = %do.cond14
  call void @llvm.lifetime.end.p0(i64 8, ptr %opts_len) #18, !dbg !9565
  ret void, !dbg !9565
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @fxp_mul_frac(i64 noundef %x_orig, i32 noundef %frac) #4 !dbg !9566 {
entry:
  %retval = alloca i64, align 8
  %x_orig.addr = alloca i64, align 8
  %frac.addr = alloca i32, align 4
  %x = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %x_orig, ptr %x_orig.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %x_orig.addr, metadata !9570, metadata !DIExpression()), !dbg !9573
  store i32 %frac, ptr %frac.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %frac.addr, metadata !9571, metadata !DIExpression()), !dbg !9574
  br label %do.body, !dbg !9575

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9576

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #18, !dbg !9578
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !9572, metadata !DIExpression()), !dbg !9579
  %0 = load i64, ptr %x_orig.addr, align 8, !dbg !9580, !tbaa !2663
  store i64 %0, ptr %x, align 8, !dbg !9579, !tbaa !2663
  %1 = load i64, ptr %x, align 8, !dbg !9581, !tbaa !2663
  %cmp = icmp ult i64 %1, 281474976710656, !dbg !9583
  br i1 %cmp, label %if.then, label %if.else, !dbg !9584

if.then:                                          ; preds = %do.end
  %2 = load i64, ptr %x, align 8, !dbg !9585, !tbaa !2663
  %3 = load i32, ptr %frac.addr, align 4, !dbg !9587, !tbaa !2791
  %conv = zext i32 %3 to i64, !dbg !9587
  %mul = mul i64 %2, %conv, !dbg !9588
  %shr = lshr i64 %mul, 16, !dbg !9589
  store i64 %shr, ptr %retval, align 8, !dbg !9590
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9590

if.else:                                          ; preds = %do.end
  %4 = load i64, ptr %x, align 8, !dbg !9591, !tbaa !2663
  %shr1 = lshr i64 %4, 16, !dbg !9593
  %5 = load i32, ptr %frac.addr, align 4, !dbg !9594, !tbaa !2791
  %conv2 = zext i32 %5 to i64, !dbg !9595
  %mul3 = mul i64 %shr1, %conv2, !dbg !9596
  store i64 %mul3, ptr %retval, align 8, !dbg !9597
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9597

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #18, !dbg !9598
  %6 = load i64, ptr %retval, align 8, !dbg !9598
  ret i64 %6, !dbg !9598
}

declare !dbg !9599 void @sc_data_init(ptr noundef) #5

declare !dbg !9600 void @sc_data_update_slab_size(ptr noundef, i64 noundef, i64 noundef, i32 noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_store_b(ptr noundef %a, i1 noundef zeroext %val, i32 noundef %mo) #3 !dbg !9603 {
entry:
  %a.addr = alloca ptr, align 8
  %val.addr = alloca i8, align 1
  %mo.addr = alloca i32, align 4
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !9608, metadata !DIExpression()), !dbg !9611
  %frombool = zext i1 %val to i8
  store i8 %frombool, ptr %val.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !9609, metadata !DIExpression()), !dbg !9611
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  %0 = load ptr, ptr %a.addr, align 8, !dbg !9611, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_b_t, ptr %0, i32 0, i32 0, !dbg !9611
  %1 = load i32, ptr %mo.addr, align 4, !dbg !9611, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !9611
  switch i32 %call, label %monotonic [
    i32 3, label %release
    i32 5, label %seqcst
  ], !dbg !9611

monotonic:                                        ; preds = %entry
  %2 = load i8, ptr %val.addr, align 1, !dbg !9611
  store atomic i8 %2, ptr %repr monotonic, align 1, !dbg !9611
  br label %atomic.continue, !dbg !9611

release:                                          ; preds = %entry
  %3 = load i8, ptr %val.addr, align 1, !dbg !9611
  store atomic i8 %3, ptr %repr release, align 1, !dbg !9611
  br label %atomic.continue, !dbg !9611

seqcst:                                           ; preds = %entry
  %4 = load i8, ptr %val.addr, align 1, !dbg !9611
  store atomic i8 %4, ptr %repr seq_cst, align 1, !dbg !9611
  br label %atomic.continue, !dbg !9611

atomic.continue:                                  ; preds = %seqcst, %release, %monotonic
  ret void, !dbg !9611
}

; Function Attrs: nounwind willreturn memory(none)
declare !dbg !9612 ptr @__errno_location() #12

; Function Attrs: nounwind
declare !dbg !9617 i64 @readlink(ptr noundef, ptr noundef, i64 noundef) #13

; Function Attrs: nounwind uwtable
define internal ptr @jemalloc_secure_getenv(ptr noundef %name) #0 !dbg !9621 {
entry:
  %name.addr = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !9625, metadata !DIExpression()), !dbg !9626
  %0 = load ptr, ptr %name.addr, align 8, !dbg !9627, !tbaa !2658
  %call = call ptr @secure_getenv(ptr noundef %0) #18, !dbg !9628
  ret ptr %call, !dbg !9629
}

; Function Attrs: nounwind
declare !dbg !9630 ptr @secure_getenv(ptr noundef) #13

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !9631 i64 @strlen(ptr noundef) #16

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !9634 ptr @strchr(ptr noundef, i32 noundef) #16

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_enum_to_builtin(i32 noundef %mo) #3 !dbg !9637 {
entry:
  %retval = alloca i32, align 4
  %mo.addr = alloca i32, align 4
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !9641, metadata !DIExpression()), !dbg !9642
  %0 = load i32, ptr %mo.addr, align 4, !dbg !9643, !tbaa !2810
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
  ], !dbg !9644

sw.bb:                                            ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !9645
  br label %do.end, !dbg !9645

sw.bb1:                                           ; preds = %entry
  store i32 2, ptr %retval, align 4, !dbg !9647
  br label %do.end, !dbg !9647

sw.bb2:                                           ; preds = %entry
  store i32 3, ptr %retval, align 4, !dbg !9648
  br label %do.end, !dbg !9648

sw.bb3:                                           ; preds = %entry
  store i32 4, ptr %retval, align 4, !dbg !9649
  br label %do.end, !dbg !9649

sw.bb4:                                           ; preds = %entry
  store i32 5, ptr %retval, align 4, !dbg !9650
  br label %do.end, !dbg !9650

sw.epilog:                                        ; preds = %entry
  br label %do.body, !dbg !9651

do.body:                                          ; preds = %sw.epilog
  unreachable, !dbg !9652

do.end:                                           ; preds = %sw.bb, %sw.bb1, %sw.bb2, %sw.bb3, %sw.bb4
  %1 = load i32, ptr %retval, align 4, !dbg !9654
  ret i32 %1, !dbg !9654
}

declare !dbg !9655 void @tcache_stats_merge(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @atomic_load_b(ptr noundef %a, i32 noundef %mo) #3 !dbg !9658 {
entry:
  %a.addr = alloca ptr, align 8
  %mo.addr = alloca i32, align 4
  %result = alloca i8, align 1
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !9664, metadata !DIExpression()), !dbg !9667
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !9665, metadata !DIExpression()), !dbg !9667
  call void @llvm.lifetime.start.p0(i64 1, ptr %result) #18, !dbg !9667
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9666, metadata !DIExpression()), !dbg !9667
  %0 = load ptr, ptr %a.addr, align 8, !dbg !9667, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_b_t, ptr %0, i32 0, i32 0, !dbg !9667
  %1 = load i32, ptr %mo.addr, align 4, !dbg !9667, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !9667
  switch i32 %call, label %monotonic [
    i32 1, label %acquire
    i32 2, label %acquire
    i32 5, label %seqcst
  ], !dbg !9667

monotonic:                                        ; preds = %entry
  %2 = load atomic i8, ptr %repr monotonic, align 1, !dbg !9667
  store i8 %2, ptr %result, align 1, !dbg !9667
  br label %atomic.continue, !dbg !9667

acquire:                                          ; preds = %entry, %entry
  %3 = load atomic i8, ptr %repr acquire, align 1, !dbg !9667
  store i8 %3, ptr %result, align 1, !dbg !9667
  br label %atomic.continue, !dbg !9667

seqcst:                                           ; preds = %entry
  %4 = load atomic i8, ptr %repr seq_cst, align 1, !dbg !9667
  store i8 %4, ptr %result, align 1, !dbg !9667
  br label %atomic.continue, !dbg !9667

atomic.continue:                                  ; preds = %seqcst, %acquire, %monotonic
  %5 = load i8, ptr %result, align 1, !dbg !9667, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %5 to i1, !dbg !9667
  call void @llvm.lifetime.end.p0(i64 1, ptr %result) #18, !dbg !9667
  ret i1 %tobool, !dbg !9667
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @tsdn_null(ptr noundef %tsdn) #3 !dbg !9668 {
entry:
  %tsdn.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !9674, metadata !DIExpression()), !dbg !9675
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !9676, !tbaa !2658
  %cmp = icmp eq ptr %0, null, !dbg !9677
  ret i1 %cmp, !dbg !9678
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsdn_tsd(ptr noundef %tsdn) #3 !dbg !9679 {
entry:
  %tsdn.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !9683, metadata !DIExpression()), !dbg !9684
  br label %do.body, !dbg !9685

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9686

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !9688, !tbaa !2658
  %tsd = getelementptr inbounds %struct.tsdn_s, ptr %0, i32 0, i32 0, !dbg !9689
  ret ptr %tsd, !dbg !9690
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @witness_assert_depth_to_rank(ptr noundef %witness_tsdn, i32 noundef %rank_inclusive, i32 noundef %depth) #4 !dbg !9691 {
entry:
  %witness_tsdn.addr = alloca ptr, align 8
  %rank_inclusive.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %witnesses = alloca ptr, align 8
  %d = alloca i32, align 4
  store ptr %witness_tsdn, ptr %witness_tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsdn.addr, metadata !9695, metadata !DIExpression()), !dbg !9698
  store i32 %rank_inclusive, ptr %rank_inclusive.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %rank_inclusive.addr, metadata !9696, metadata !DIExpression()), !dbg !9699
  store i32 %depth, ptr %depth.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %depth.addr, metadata !9697, metadata !DIExpression()), !dbg !9700
  ret void, !dbg !9701
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsdn_witness_tsdp_get(ptr noundef %tsdn) #3 !dbg !9704 {
entry:
  %retval = alloca ptr, align 8
  %tsdn.addr = alloca ptr, align 8
  %tsd = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !9708, metadata !DIExpression()), !dbg !9710
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !9711, !tbaa !2658
  %call = call zeroext i1 @tsdn_null(ptr noundef %0), !dbg !9711
  br i1 %call, label %if.then, label %if.end, !dbg !9710

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !9713
  br label %return, !dbg !9713

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !9710
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !9709, metadata !DIExpression()), !dbg !9710
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !9710, !tbaa !2658
  %call1 = call ptr @tsdn_tsd(ptr noundef %1), !dbg !9710
  store ptr %call1, ptr %tsd, align 8, !dbg !9710, !tbaa !2658
  %2 = load ptr, ptr %tsd, align 8, !dbg !9710, !tbaa !2658
  %call2 = call ptr @tsd_witness_tsdp_get(ptr noundef %2), !dbg !9710
  store ptr %call2, ptr %retval, align 8, !dbg !9710
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !9710
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8, !dbg !9710
  ret ptr %3, !dbg !9710
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @arena_malloc(ptr noundef %tsdn, ptr noundef %arena, i64 noundef %size, i32 noundef %ind, i1 noundef zeroext %zero, ptr noundef %tcache, i1 noundef zeroext %slow_path) #3 !dbg !9715 {
entry:
  %retval = alloca ptr, align 8
  %tsdn.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %ind.addr = alloca i32, align 4
  %zero.addr = alloca i8, align 1
  %tcache.addr = alloca ptr, align 8
  %slow_path.addr = alloca i8, align 1
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !9720, metadata !DIExpression()), !dbg !9727
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !9721, metadata !DIExpression()), !dbg !9728
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !9722, metadata !DIExpression()), !dbg !9729
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !9723, metadata !DIExpression()), !dbg !9730
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !9724, metadata !DIExpression()), !dbg !9731
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !9725, metadata !DIExpression()), !dbg !9732
  %frombool1 = zext i1 %slow_path to i8
  store i8 %frombool1, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !9726, metadata !DIExpression()), !dbg !9733
  br label %do.body, !dbg !9734

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9735

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %tcache.addr, align 8, !dbg !9737, !tbaa !2658
  %cmp = icmp ne ptr %0, null, !dbg !9737
  %lnot = xor i1 %cmp, true, !dbg !9737
  %lnot2 = xor i1 %lnot, true, !dbg !9737
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9737
  %conv = sext i32 %lnot.ext to i64, !dbg !9737
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !9737
  %tobool = icmp ne i64 %expval, 0, !dbg !9737
  br i1 %tobool, label %if.then, label %if.end33, !dbg !9739

if.then:                                          ; preds = %do.end
  %1 = load i64, ptr %size.addr, align 8, !dbg !9740, !tbaa !2663
  %cmp3 = icmp ule i64 %1, 14336, !dbg !9740
  %lnot5 = xor i1 %cmp3, true, !dbg !9740
  %lnot7 = xor i1 %lnot5, true, !dbg !9740
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9740
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !9740
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !9740
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !9740
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !9743

if.then12:                                        ; preds = %if.then
  %2 = load ptr, ptr %tsdn.addr, align 8, !dbg !9744, !tbaa !2658
  %call = call ptr @tsdn_tsd(ptr noundef %2), !dbg !9746
  %3 = load ptr, ptr %arena.addr, align 8, !dbg !9747, !tbaa !2658
  %4 = load ptr, ptr %tcache.addr, align 8, !dbg !9748, !tbaa !2658
  %5 = load i64, ptr %size.addr, align 8, !dbg !9749, !tbaa !2663
  %6 = load i32, ptr %ind.addr, align 4, !dbg !9750, !tbaa !2791
  %7 = load i8, ptr %zero.addr, align 1, !dbg !9751, !tbaa !2695, !range !2708, !noundef !2709
  %tobool13 = trunc i8 %7 to i1, !dbg !9751
  %8 = load i8, ptr %slow_path.addr, align 1, !dbg !9752, !tbaa !2695, !range !2708, !noundef !2709
  %tobool14 = trunc i8 %8 to i1, !dbg !9752
  %call15 = call ptr @tcache_alloc_small(ptr noundef %call, ptr noundef %3, ptr noundef %4, i64 noundef %5, i32 noundef %6, i1 noundef zeroext %tobool13, i1 noundef zeroext %tobool14), !dbg !9753
  store ptr %call15, ptr %retval, align 8, !dbg !9754
  br label %return, !dbg !9754

if.end:                                           ; preds = %if.then
  %9 = load i64, ptr %size.addr, align 8, !dbg !9755, !tbaa !2663
  %10 = load i64, ptr @tcache_maxclass, align 8, !dbg !9755, !tbaa !2663
  %cmp16 = icmp ule i64 %9, %10, !dbg !9755
  %lnot18 = xor i1 %cmp16, true, !dbg !9755
  %lnot20 = xor i1 %lnot18, true, !dbg !9755
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !9755
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !9755
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 1), !dbg !9755
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !9755
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !9757

if.then25:                                        ; preds = %if.end
  %11 = load ptr, ptr %tsdn.addr, align 8, !dbg !9758, !tbaa !2658
  %call26 = call ptr @tsdn_tsd(ptr noundef %11), !dbg !9760
  %12 = load ptr, ptr %arena.addr, align 8, !dbg !9761, !tbaa !2658
  %13 = load ptr, ptr %tcache.addr, align 8, !dbg !9762, !tbaa !2658
  %14 = load i64, ptr %size.addr, align 8, !dbg !9763, !tbaa !2663
  %15 = load i32, ptr %ind.addr, align 4, !dbg !9764, !tbaa !2791
  %16 = load i8, ptr %zero.addr, align 1, !dbg !9765, !tbaa !2695, !range !2708, !noundef !2709
  %tobool27 = trunc i8 %16 to i1, !dbg !9765
  %17 = load i8, ptr %slow_path.addr, align 1, !dbg !9766, !tbaa !2695, !range !2708, !noundef !2709
  %tobool28 = trunc i8 %17 to i1, !dbg !9766
  %call29 = call ptr @tcache_alloc_large(ptr noundef %call26, ptr noundef %12, ptr noundef %13, i64 noundef %14, i32 noundef %15, i1 noundef zeroext %tobool27, i1 noundef zeroext %tobool28), !dbg !9767
  store ptr %call29, ptr %retval, align 8, !dbg !9768
  br label %return, !dbg !9768

if.end30:                                         ; preds = %if.end
  br label %do.body31, !dbg !9769

do.body31:                                        ; preds = %if.end30
  br label %do.end32, !dbg !9770

do.end32:                                         ; preds = %do.body31
  br label %if.end33, !dbg !9772

if.end33:                                         ; preds = %do.end32, %do.end
  %18 = load ptr, ptr %tsdn.addr, align 8, !dbg !9773, !tbaa !2658
  %19 = load ptr, ptr %arena.addr, align 8, !dbg !9774, !tbaa !2658
  %20 = load i64, ptr %size.addr, align 8, !dbg !9775, !tbaa !2663
  %21 = load i32, ptr %ind.addr, align 4, !dbg !9776, !tbaa !2791
  %22 = load i8, ptr %zero.addr, align 1, !dbg !9777, !tbaa !2695, !range !2708, !noundef !2709
  %tobool34 = trunc i8 %22 to i1, !dbg !9777
  %call35 = call ptr @arena_malloc_hard(ptr noundef %18, ptr noundef %19, i64 noundef %20, i32 noundef %21, i1 noundef zeroext %tobool34), !dbg !9778
  store ptr %call35, ptr %retval, align 8, !dbg !9779
  br label %return, !dbg !9779

return:                                           ; preds = %if.end33, %if.then25, %if.then12
  %23 = load ptr, ptr %retval, align 8, !dbg !9780
  ret ptr %23, !dbg !9780
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @arena_internal_add(ptr noundef %arena, i64 noundef %size) #4 !dbg !9781 {
entry:
  %arena.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !9785, metadata !DIExpression()), !dbg !9787
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !9786, metadata !DIExpression()), !dbg !9788
  %0 = load ptr, ptr %arena.addr, align 8, !dbg !9789, !tbaa !2658
  %stats = getelementptr inbounds %struct.arena_s, ptr %0, i32 0, i32 3, !dbg !9790
  %internal = getelementptr inbounds %struct.arena_stats_s, ptr %stats, i32 0, i32 4, !dbg !9791
  %1 = load i64, ptr %size.addr, align 8, !dbg !9792, !tbaa !2663
  %call = call i64 @atomic_fetch_add_zu(ptr noundef %internal, i64 noundef %1, i32 noundef 0), !dbg !9793
  ret void, !dbg !9794
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @iaalloc(ptr noundef %tsdn, ptr noundef %ptr) #3 !dbg !9795 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !9799, metadata !DIExpression()), !dbg !9801
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !9800, metadata !DIExpression()), !dbg !9802
  br label %do.body, !dbg !9803

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9804

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !9806, !tbaa !2658
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !9807, !tbaa !2658
  %call = call ptr @arena_aalloc(ptr noundef %0, ptr noundef %1), !dbg !9808
  ret ptr %call, !dbg !9809
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tcache_alloc_small(ptr noundef %tsd, ptr noundef %arena, ptr noundef %tcache, i64 noundef %size, i32 noundef %binind, i1 noundef zeroext %zero, i1 noundef zeroext %slow_path) #3 !dbg !9810 {
entry:
  %retval = alloca ptr, align 8
  %tsd.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %binind.addr = alloca i32, align 4
  %zero.addr = alloca i8, align 1
  %slow_path.addr = alloca i8, align 1
  %ret = alloca ptr, align 8
  %tcache_success = alloca i8, align 1
  %bin = alloca ptr, align 8
  %tcache_hard_success = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  %usize = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !9814, metadata !DIExpression()), !dbg !9830
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !9815, metadata !DIExpression()), !dbg !9831
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !9816, metadata !DIExpression()), !dbg !9832
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !9817, metadata !DIExpression()), !dbg !9833
  store i32 %binind, ptr %binind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %binind.addr, metadata !9818, metadata !DIExpression()), !dbg !9834
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !9819, metadata !DIExpression()), !dbg !9835
  %frombool1 = zext i1 %slow_path to i8
  store i8 %frombool1, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !9820, metadata !DIExpression()), !dbg !9836
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !9837
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !9821, metadata !DIExpression()), !dbg !9838
  call void @llvm.lifetime.start.p0(i64 1, ptr %tcache_success) #18, !dbg !9839
  tail call void @llvm.dbg.declare(metadata ptr %tcache_success, metadata !9822, metadata !DIExpression()), !dbg !9840
  br label %do.body, !dbg !9841

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !9842

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !9842

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin) #18, !dbg !9844
  tail call void @llvm.dbg.declare(metadata ptr %bin, metadata !9823, metadata !DIExpression()), !dbg !9845
  %0 = load ptr, ptr %tcache.addr, align 8, !dbg !9846, !tbaa !2658
  %bins = getelementptr inbounds %struct.tcache_s, ptr %0, i32 0, i32 1, !dbg !9847
  %1 = load i32, ptr %binind.addr, align 4, !dbg !9848, !tbaa !2791
  %idxprom = zext i32 %1 to i64, !dbg !9846
  %arrayidx = getelementptr inbounds [73 x %struct.cache_bin_s], ptr %bins, i64 0, i64 %idxprom, !dbg !9846
  store ptr %arrayidx, ptr %bin, align 8, !dbg !9845, !tbaa !2658
  %2 = load ptr, ptr %bin, align 8, !dbg !9849, !tbaa !2658
  %call = call ptr @cache_bin_alloc(ptr noundef %2, ptr noundef %tcache_success), !dbg !9850
  store ptr %call, ptr %ret, align 8, !dbg !9851, !tbaa !2658
  br label %do.body2, !dbg !9852

do.body2:                                         ; preds = %do.end
  br label %do.cond3, !dbg !9853

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !9853

do.end4:                                          ; preds = %do.cond3
  %3 = load i8, ptr %tcache_success, align 1, !dbg !9855, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !9855
  %lnot = xor i1 %tobool, true, !dbg !9855
  %lnot5 = xor i1 %lnot, true, !dbg !9855
  %lnot6 = xor i1 %lnot5, true, !dbg !9855
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !9855
  %conv = sext i32 %lnot.ext to i64, !dbg !9855
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9855
  %tobool7 = icmp ne i64 %expval, 0, !dbg !9855
  br i1 %tobool7, label %if.then, label %if.end39, !dbg !9856

if.then:                                          ; preds = %do.end4
  call void @llvm.lifetime.start.p0(i64 1, ptr %tcache_hard_success) #18, !dbg !9857
  tail call void @llvm.dbg.declare(metadata ptr %tcache_hard_success, metadata !9824, metadata !DIExpression()), !dbg !9858
  %4 = load ptr, ptr %tsd.addr, align 8, !dbg !9859, !tbaa !2658
  %5 = load ptr, ptr %arena.addr, align 8, !dbg !9860, !tbaa !2658
  %call8 = call ptr @arena_choose(ptr noundef %4, ptr noundef %5), !dbg !9861
  store ptr %call8, ptr %arena.addr, align 8, !dbg !9862, !tbaa !2658
  %6 = load ptr, ptr %arena.addr, align 8, !dbg !9863, !tbaa !2658
  %cmp = icmp eq ptr %6, null, !dbg !9863
  %lnot10 = xor i1 %cmp, true, !dbg !9863
  %lnot12 = xor i1 %lnot10, true, !dbg !9863
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !9863
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !9863
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !9863
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !9863
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9865

if.then17:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8, !dbg !9866
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9866

if.end:                                           ; preds = %if.then
  %7 = load i32, ptr %binind.addr, align 4, !dbg !9868, !tbaa !2791
  %8 = load ptr, ptr %bin, align 8, !dbg !9868, !tbaa !2658
  %call18 = call zeroext i1 @tcache_small_bin_disabled(i32 noundef %7, ptr noundef %8), !dbg !9868
  %lnot19 = xor i1 %call18, true, !dbg !9868
  %lnot21 = xor i1 %lnot19, true, !dbg !9868
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9868
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9868
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !9868
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !9868
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !9870

if.then26:                                        ; preds = %if.end
  %9 = load ptr, ptr %tsd.addr, align 8, !dbg !9871, !tbaa !2658
  %call27 = call ptr @tsd_tsdn(ptr noundef %9), !dbg !9873
  %10 = load ptr, ptr %arena.addr, align 8, !dbg !9874, !tbaa !2658
  %11 = load i64, ptr %size.addr, align 8, !dbg !9875, !tbaa !2663
  %12 = load i32, ptr %binind.addr, align 4, !dbg !9876, !tbaa !2791
  %13 = load i8, ptr %zero.addr, align 1, !dbg !9877, !tbaa !2695, !range !2708, !noundef !2709
  %tobool28 = trunc i8 %13 to i1, !dbg !9877
  %call29 = call ptr @arena_malloc_hard(ptr noundef %call27, ptr noundef %10, i64 noundef %11, i32 noundef %12, i1 noundef zeroext %tobool28), !dbg !9878
  store ptr %call29, ptr %retval, align 8, !dbg !9879
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9879

if.end30:                                         ; preds = %if.end
  %14 = load ptr, ptr %tsd.addr, align 8, !dbg !9880, !tbaa !2658
  %15 = load ptr, ptr %tcache.addr, align 8, !dbg !9881, !tbaa !2658
  %16 = load ptr, ptr %bin, align 8, !dbg !9882, !tbaa !2658
  %17 = load i32, ptr %binind.addr, align 4, !dbg !9883, !tbaa !2791
  call void @tcache_bin_flush_stashed(ptr noundef %14, ptr noundef %15, ptr noundef %16, i32 noundef %17, i1 noundef zeroext true), !dbg !9884
  %18 = load ptr, ptr %tsd.addr, align 8, !dbg !9885, !tbaa !2658
  %call31 = call ptr @tsd_tsdn(ptr noundef %18), !dbg !9886
  %19 = load ptr, ptr %arena.addr, align 8, !dbg !9887, !tbaa !2658
  %20 = load ptr, ptr %tcache.addr, align 8, !dbg !9888, !tbaa !2658
  %21 = load ptr, ptr %bin, align 8, !dbg !9889, !tbaa !2658
  %22 = load i32, ptr %binind.addr, align 4, !dbg !9890, !tbaa !2791
  %call32 = call ptr @tcache_alloc_small_hard(ptr noundef %call31, ptr noundef %19, ptr noundef %20, ptr noundef %21, i32 noundef %22, ptr noundef %tcache_hard_success), !dbg !9891
  store ptr %call32, ptr %ret, align 8, !dbg !9892, !tbaa !2658
  %23 = load i8, ptr %tcache_hard_success, align 1, !dbg !9893, !tbaa !2695, !range !2708, !noundef !2709
  %tobool33 = trunc i8 %23 to i1, !dbg !9893
  %conv34 = zext i1 %tobool33 to i32, !dbg !9893
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !9895
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9896

if.then37:                                        ; preds = %if.end30
  store ptr null, ptr %retval, align 8, !dbg !9897
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9897

if.end38:                                         ; preds = %if.end30
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9899
  br label %cleanup, !dbg !9899

cleanup:                                          ; preds = %if.end38, %if.then37, %if.then26, %if.then17
  call void @llvm.lifetime.end.p0(i64 1, ptr %tcache_hard_success) #18, !dbg !9899
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup57 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end39, !dbg !9900

if.end39:                                         ; preds = %cleanup.cont, %do.end4
  br label %do.body40, !dbg !9901

do.body40:                                        ; preds = %if.end39
  br label %do.cond41, !dbg !9902

do.cond41:                                        ; preds = %do.body40
  br label %do.end42, !dbg !9902

do.end42:                                         ; preds = %do.cond41
  %24 = load i8, ptr %zero.addr, align 1, !dbg !9904, !tbaa !2695, !range !2708, !noundef !2709
  %tobool43 = trunc i8 %24 to i1, !dbg !9904
  %lnot44 = xor i1 %tobool43, true, !dbg !9904
  %lnot46 = xor i1 %lnot44, true, !dbg !9904
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !9904
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !9904
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 0), !dbg !9904
  %tobool50 = icmp ne i64 %expval49, 0, !dbg !9904
  br i1 %tobool50, label %if.then51, label %if.end56, !dbg !9905

if.then51:                                        ; preds = %do.end42
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !9906
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !9827, metadata !DIExpression()), !dbg !9907
  %25 = load i32, ptr %binind.addr, align 4, !dbg !9908, !tbaa !2791
  %call52 = call i64 @sz_index2size(i32 noundef %25), !dbg !9909
  store i64 %call52, ptr %usize, align 8, !dbg !9907, !tbaa !2663
  br label %do.body53, !dbg !9910

do.body53:                                        ; preds = %if.then51
  br label %do.cond54, !dbg !9911

do.cond54:                                        ; preds = %do.body53
  br label %do.end55, !dbg !9911

do.end55:                                         ; preds = %do.cond54
  %26 = load ptr, ptr %ret, align 8, !dbg !9913, !tbaa !2658
  %27 = load i64, ptr %usize, align 8, !dbg !9914, !tbaa !2663
  call void @llvm.memset.p0.i64(ptr align 1 %26, i8 0, i64 %27, i1 false), !dbg !9915
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !9916
  br label %if.end56, !dbg !9917

if.end56:                                         ; preds = %do.end55, %do.end42
  %28 = load ptr, ptr %bin, align 8, !dbg !9918, !tbaa !2658
  %tstats = getelementptr inbounds %struct.cache_bin_s, ptr %28, i32 0, i32 1, !dbg !9921
  %nrequests = getelementptr inbounds %struct.cache_bin_stats_s, ptr %tstats, i32 0, i32 0, !dbg !9922
  %29 = load i64, ptr %nrequests, align 8, !dbg !9923, !tbaa !6245
  %inc = add i64 %29, 1, !dbg !9923
  store i64 %inc, ptr %nrequests, align 8, !dbg !9923, !tbaa !6245
  %30 = load ptr, ptr %ret, align 8, !dbg !9924, !tbaa !2658
  store ptr %30, ptr %retval, align 8, !dbg !9925
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup57, !dbg !9925

cleanup57:                                        ; preds = %if.end56, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin) #18, !dbg !9926
  call void @llvm.lifetime.end.p0(i64 1, ptr %tcache_success) #18, !dbg !9926
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !9926
  %31 = load ptr, ptr %retval, align 8, !dbg !9926
  ret ptr %31, !dbg !9926
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tcache_alloc_large(ptr noundef %tsd, ptr noundef %arena, ptr noundef %tcache, i64 noundef %size, i32 noundef %binind, i1 noundef zeroext %zero, i1 noundef zeroext %slow_path) #3 !dbg !9927 {
entry:
  %retval = alloca ptr, align 8
  %tsd.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %binind.addr = alloca i32, align 4
  %zero.addr = alloca i8, align 1
  %slow_path.addr = alloca i8, align 1
  %ret = alloca ptr, align 8
  %tcache_success = alloca i8, align 1
  %bin = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %usize = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !9929, metadata !DIExpression()), !dbg !9944
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !9930, metadata !DIExpression()), !dbg !9945
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !9931, metadata !DIExpression()), !dbg !9946
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !9932, metadata !DIExpression()), !dbg !9947
  store i32 %binind, ptr %binind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %binind.addr, metadata !9933, metadata !DIExpression()), !dbg !9948
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !9934, metadata !DIExpression()), !dbg !9949
  %frombool1 = zext i1 %slow_path to i8
  store i8 %frombool1, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !9935, metadata !DIExpression()), !dbg !9950
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !9951
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !9936, metadata !DIExpression()), !dbg !9952
  call void @llvm.lifetime.start.p0(i64 1, ptr %tcache_success) #18, !dbg !9953
  tail call void @llvm.dbg.declare(metadata ptr %tcache_success, metadata !9937, metadata !DIExpression()), !dbg !9954
  br label %do.body, !dbg !9955

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !9956

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !9956

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin) #18, !dbg !9958
  tail call void @llvm.dbg.declare(metadata ptr %bin, metadata !9938, metadata !DIExpression()), !dbg !9959
  %0 = load ptr, ptr %tcache.addr, align 8, !dbg !9960, !tbaa !2658
  %bins = getelementptr inbounds %struct.tcache_s, ptr %0, i32 0, i32 1, !dbg !9961
  %1 = load i32, ptr %binind.addr, align 4, !dbg !9962, !tbaa !2791
  %idxprom = zext i32 %1 to i64, !dbg !9960
  %arrayidx = getelementptr inbounds [73 x %struct.cache_bin_s], ptr %bins, i64 0, i64 %idxprom, !dbg !9960
  store ptr %arrayidx, ptr %bin, align 8, !dbg !9959, !tbaa !2658
  %2 = load ptr, ptr %bin, align 8, !dbg !9963, !tbaa !2658
  %call = call ptr @cache_bin_alloc(ptr noundef %2, ptr noundef %tcache_success), !dbg !9964
  store ptr %call, ptr %ret, align 8, !dbg !9965, !tbaa !2658
  br label %do.body2, !dbg !9966

do.body2:                                         ; preds = %do.end
  br label %do.cond3, !dbg !9967

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !9967

do.end4:                                          ; preds = %do.cond3
  %3 = load i8, ptr %tcache_success, align 1, !dbg !9969, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !9969
  %lnot = xor i1 %tobool, true, !dbg !9969
  %lnot5 = xor i1 %lnot, true, !dbg !9969
  %lnot6 = xor i1 %lnot5, true, !dbg !9969
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !9969
  %conv = sext i32 %lnot.ext to i64, !dbg !9969
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !9969
  %tobool7 = icmp ne i64 %expval, 0, !dbg !9969
  br i1 %tobool7, label %if.then, label %if.else, !dbg !9970

if.then:                                          ; preds = %do.end4
  %4 = load ptr, ptr %tsd.addr, align 8, !dbg !9971, !tbaa !2658
  %5 = load ptr, ptr %arena.addr, align 8, !dbg !9973, !tbaa !2658
  %call8 = call ptr @arena_choose(ptr noundef %4, ptr noundef %5), !dbg !9974
  store ptr %call8, ptr %arena.addr, align 8, !dbg !9975, !tbaa !2658
  %6 = load ptr, ptr %arena.addr, align 8, !dbg !9976, !tbaa !2658
  %cmp = icmp eq ptr %6, null, !dbg !9976
  %lnot10 = xor i1 %cmp, true, !dbg !9976
  %lnot12 = xor i1 %lnot10, true, !dbg !9976
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !9976
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !9976
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !9976
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !9976
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9978

if.then17:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8, !dbg !9979
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9979

if.end:                                           ; preds = %if.then
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !9981, !tbaa !2658
  %8 = load ptr, ptr %tcache.addr, align 8, !dbg !9982, !tbaa !2658
  %9 = load ptr, ptr %bin, align 8, !dbg !9983, !tbaa !2658
  %10 = load i32, ptr %binind.addr, align 4, !dbg !9984, !tbaa !2791
  call void @tcache_bin_flush_stashed(ptr noundef %7, ptr noundef %8, ptr noundef %9, i32 noundef %10, i1 noundef zeroext false), !dbg !9985
  %11 = load ptr, ptr %tsd.addr, align 8, !dbg !9986, !tbaa !2658
  %call18 = call ptr @tsd_tsdn(ptr noundef %11), !dbg !9987
  %12 = load ptr, ptr %arena.addr, align 8, !dbg !9988, !tbaa !2658
  %13 = load i64, ptr %size.addr, align 8, !dbg !9989, !tbaa !2663
  %call19 = call i64 @sz_s2u(i64 noundef %13), !dbg !9990
  %14 = load i8, ptr %zero.addr, align 1, !dbg !9991, !tbaa !2695, !range !2708, !noundef !2709
  %tobool20 = trunc i8 %14 to i1, !dbg !9991
  %call21 = call ptr @large_malloc(ptr noundef %call18, ptr noundef %12, i64 noundef %call19, i1 noundef zeroext %tobool20), !dbg !9992
  store ptr %call21, ptr %ret, align 8, !dbg !9993, !tbaa !2658
  %15 = load ptr, ptr %ret, align 8, !dbg !9994, !tbaa !2658
  %cmp22 = icmp eq ptr %15, null, !dbg !9996
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9997

if.then24:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !9998
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9998

if.end25:                                         ; preds = %if.end
  br label %if.end40, !dbg !10000

if.else:                                          ; preds = %do.end4
  %16 = load i8, ptr %zero.addr, align 1, !dbg !10001, !tbaa !2695, !range !2708, !noundef !2709
  %tobool26 = trunc i8 %16 to i1, !dbg !10001
  %lnot27 = xor i1 %tobool26, true, !dbg !10001
  %lnot29 = xor i1 %lnot27, true, !dbg !10001
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !10001
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !10001
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0), !dbg !10001
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !10001
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !10002

if.then34:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !10003
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !9939, metadata !DIExpression()), !dbg !10004
  %17 = load i32, ptr %binind.addr, align 4, !dbg !10005, !tbaa !2791
  %call35 = call i64 @sz_index2size(i32 noundef %17), !dbg !10006
  store i64 %call35, ptr %usize, align 8, !dbg !10004, !tbaa !2663
  br label %do.body36, !dbg !10007

do.body36:                                        ; preds = %if.then34
  br label %do.cond37, !dbg !10008

do.cond37:                                        ; preds = %do.body36
  br label %do.end38, !dbg !10008

do.end38:                                         ; preds = %do.cond37
  %18 = load ptr, ptr %ret, align 8, !dbg !10010, !tbaa !2658
  %19 = load i64, ptr %usize, align 8, !dbg !10011, !tbaa !2663
  call void @llvm.memset.p0.i64(ptr align 1 %18, i8 0, i64 %19, i1 false), !dbg !10012
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !10013
  br label %if.end39, !dbg !10014

if.end39:                                         ; preds = %do.end38, %if.else
  %20 = load ptr, ptr %bin, align 8, !dbg !10015, !tbaa !2658
  %tstats = getelementptr inbounds %struct.cache_bin_s, ptr %20, i32 0, i32 1, !dbg !10018
  %nrequests = getelementptr inbounds %struct.cache_bin_stats_s, ptr %tstats, i32 0, i32 0, !dbg !10019
  %21 = load i64, ptr %nrequests, align 8, !dbg !10020, !tbaa !6245
  %inc = add i64 %21, 1, !dbg !10020
  store i64 %inc, ptr %nrequests, align 8, !dbg !10020, !tbaa !6245
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end25
  %22 = load ptr, ptr %ret, align 8, !dbg !10021, !tbaa !2658
  store ptr %22, ptr %retval, align 8, !dbg !10022
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10022

cleanup:                                          ; preds = %if.end40, %if.then24, %if.then17
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin) #18, !dbg !10023
  call void @llvm.lifetime.end.p0(i64 1, ptr %tcache_success) #18, !dbg !10023
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !10023
  %23 = load ptr, ptr %retval, align 8, !dbg !10023
  ret ptr %23, !dbg !10023
}

declare !dbg !10024 ptr @arena_malloc_hard(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i1 noundef zeroext) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @cache_bin_alloc(ptr noundef %bin, ptr noundef %success) #3 !dbg !10027 {
entry:
  %bin.addr = alloca ptr, align 8
  %success.addr = alloca ptr, align 8
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !10031, metadata !DIExpression()), !dbg !10033
  store ptr %success, ptr %success.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %success.addr, metadata !10032, metadata !DIExpression()), !dbg !10034
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !10035, !tbaa !2658
  %1 = load ptr, ptr %success.addr, align 8, !dbg !10036, !tbaa !2658
  %call = call ptr @cache_bin_alloc_impl(ptr noundef %0, ptr noundef %1, i1 noundef zeroext true), !dbg !10037
  ret ptr %call, !dbg !10038
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @tcache_small_bin_disabled(i32 noundef %ind, ptr noundef %bin) #3 !dbg !10039 {
entry:
  %ind.addr = alloca i32, align 4
  %bin.addr = alloca ptr, align 8
  %ret = alloca i8, align 1
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !10043, metadata !DIExpression()), !dbg !10046
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !10044, metadata !DIExpression()), !dbg !10047
  br label %do.body, !dbg !10048

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10049

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 1, ptr %ret) #18, !dbg !10051
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10045, metadata !DIExpression()), !dbg !10052
  %0 = load ptr, ptr @tcache_bin_info, align 8, !dbg !10053, !tbaa !2658
  %1 = load i32, ptr %ind.addr, align 4, !dbg !10054, !tbaa !2791
  %idxprom = zext i32 %1 to i64, !dbg !10053
  %arrayidx = getelementptr inbounds %struct.cache_bin_info_s, ptr %0, i64 %idxprom, !dbg !10053
  %call = call zeroext i16 @cache_bin_info_ncached_max(ptr noundef %arrayidx), !dbg !10055
  %conv = zext i16 %call to i32, !dbg !10055
  %cmp = icmp eq i32 %conv, 0, !dbg !10056
  %frombool = zext i1 %cmp to i8, !dbg !10052
  store i8 %frombool, ptr %ret, align 1, !dbg !10052, !tbaa !2695
  %2 = load i8, ptr %ret, align 1, !dbg !10057, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !10057
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10059

land.lhs.true:                                    ; preds = %do.end
  %3 = load ptr, ptr %bin.addr, align 8, !dbg !10060, !tbaa !2658
  %cmp3 = icmp ne ptr %3, null, !dbg !10061
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10062

if.then:                                          ; preds = %land.lhs.true
  br label %do.body5, !dbg !10063

do.body5:                                         ; preds = %if.then
  br label %do.cond, !dbg !10065

do.cond:                                          ; preds = %do.body5
  br label %do.end6, !dbg !10065

do.end6:                                          ; preds = %do.cond
  br label %do.body7, !dbg !10067

do.body7:                                         ; preds = %do.end6
  br label %do.cond8, !dbg !10068

do.cond8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !10068

do.end9:                                          ; preds = %do.cond8
  br label %if.end, !dbg !10070

if.end:                                           ; preds = %do.end9, %land.lhs.true, %do.end
  %4 = load i8, ptr %ret, align 1, !dbg !10071, !tbaa !2695, !range !2708, !noundef !2709
  %tobool10 = trunc i8 %4 to i1, !dbg !10071
  call void @llvm.lifetime.end.p0(i64 1, ptr %ret) #18, !dbg !10072
  ret i1 %tobool10, !dbg !10073
}

declare !dbg !10074 void @tcache_bin_flush_stashed(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) #5

declare !dbg !10077 ptr @tcache_alloc_small_hard(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @cache_bin_alloc_impl(ptr noundef %bin, ptr noundef %success, i1 noundef zeroext %adjust_low_water) #3 !dbg !10080 {
entry:
  %retval = alloca ptr, align 8
  %bin.addr = alloca ptr, align 8
  %success.addr = alloca ptr, align 8
  %adjust_low_water.addr = alloca i8, align 1
  %ret = alloca ptr, align 8
  %low_bits = alloca i16, align 2
  %new_head = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !10084, metadata !DIExpression()), !dbg !10090
  store ptr %success, ptr %success.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %success.addr, metadata !10085, metadata !DIExpression()), !dbg !10091
  %frombool = zext i1 %adjust_low_water to i8
  store i8 %frombool, ptr %adjust_low_water.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %adjust_low_water.addr, metadata !10086, metadata !DIExpression()), !dbg !10092
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !10093
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10087, metadata !DIExpression()), !dbg !10094
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !10095, !tbaa !2658
  %stack_head = getelementptr inbounds %struct.cache_bin_s, ptr %0, i32 0, i32 0, !dbg !10096
  %1 = load ptr, ptr %stack_head, align 8, !dbg !10096, !tbaa !6546
  %2 = load ptr, ptr %1, align 8, !dbg !10097, !tbaa !2658
  store ptr %2, ptr %ret, align 8, !dbg !10094, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 2, ptr %low_bits) #18, !dbg !10098
  tail call void @llvm.dbg.declare(metadata ptr %low_bits, metadata !10088, metadata !DIExpression()), !dbg !10099
  %3 = load ptr, ptr %bin.addr, align 8, !dbg !10100, !tbaa !2658
  %stack_head1 = getelementptr inbounds %struct.cache_bin_s, ptr %3, i32 0, i32 0, !dbg !10101
  %4 = load ptr, ptr %stack_head1, align 8, !dbg !10101, !tbaa !6546
  %5 = ptrtoint ptr %4 to i64, !dbg !10102
  %conv = trunc i64 %5 to i16, !dbg !10103
  store i16 %conv, ptr %low_bits, align 2, !dbg !10099, !tbaa !6532
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_head) #18, !dbg !10104
  tail call void @llvm.dbg.declare(metadata ptr %new_head, metadata !10089, metadata !DIExpression()), !dbg !10105
  %6 = load ptr, ptr %bin.addr, align 8, !dbg !10106, !tbaa !2658
  %stack_head2 = getelementptr inbounds %struct.cache_bin_s, ptr %6, i32 0, i32 0, !dbg !10107
  %7 = load ptr, ptr %stack_head2, align 8, !dbg !10107, !tbaa !6546
  %add.ptr = getelementptr inbounds ptr, ptr %7, i64 1, !dbg !10108
  store ptr %add.ptr, ptr %new_head, align 8, !dbg !10105, !tbaa !2658
  %8 = load i16, ptr %low_bits, align 2, !dbg !10109, !tbaa !6532
  %conv3 = zext i16 %8 to i32, !dbg !10109
  %9 = load ptr, ptr %bin.addr, align 8, !dbg !10109, !tbaa !2658
  %low_bits_low_water = getelementptr inbounds %struct.cache_bin_s, ptr %9, i32 0, i32 2, !dbg !10109
  %10 = load i16, ptr %low_bits_low_water, align 8, !dbg !10109, !tbaa !10111
  %conv4 = zext i16 %10 to i32, !dbg !10109
  %cmp = icmp ne i32 %conv3, %conv4, !dbg !10109
  %lnot = xor i1 %cmp, true, !dbg !10109
  %lnot6 = xor i1 %lnot, true, !dbg !10109
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !10109
  %conv7 = sext i32 %lnot.ext to i64, !dbg !10109
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1), !dbg !10109
  %tobool = icmp ne i64 %expval, 0, !dbg !10109
  br i1 %tobool, label %if.then, label %if.end, !dbg !10112

if.then:                                          ; preds = %entry
  %11 = load ptr, ptr %new_head, align 8, !dbg !10113, !tbaa !2658
  %12 = load ptr, ptr %bin.addr, align 8, !dbg !10115, !tbaa !2658
  %stack_head8 = getelementptr inbounds %struct.cache_bin_s, ptr %12, i32 0, i32 0, !dbg !10116
  store ptr %11, ptr %stack_head8, align 8, !dbg !10117, !tbaa !6546
  %13 = load ptr, ptr %success.addr, align 8, !dbg !10118, !tbaa !2658
  store i8 1, ptr %13, align 1, !dbg !10119, !tbaa !2695
  %14 = load ptr, ptr %ret, align 8, !dbg !10120, !tbaa !2658
  store ptr %14, ptr %retval, align 8, !dbg !10121
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10121

if.end:                                           ; preds = %entry
  %15 = load i8, ptr %adjust_low_water.addr, align 1, !dbg !10122, !tbaa !2695, !range !2708, !noundef !2709
  %tobool9 = trunc i8 %15 to i1, !dbg !10122
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10124

if.then10:                                        ; preds = %if.end
  %16 = load ptr, ptr %success.addr, align 8, !dbg !10125, !tbaa !2658
  store i8 0, ptr %16, align 1, !dbg !10127, !tbaa !2695
  store ptr null, ptr %retval, align 8, !dbg !10128
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10128

if.end11:                                         ; preds = %if.end
  %17 = load i16, ptr %low_bits, align 2, !dbg !10129, !tbaa !6532
  %conv12 = zext i16 %17 to i32, !dbg !10129
  %18 = load ptr, ptr %bin.addr, align 8, !dbg !10129, !tbaa !2658
  %low_bits_empty = getelementptr inbounds %struct.cache_bin_s, ptr %18, i32 0, i32 4, !dbg !10129
  %19 = load i16, ptr %low_bits_empty, align 4, !dbg !10129, !tbaa !10131
  %conv13 = zext i16 %19 to i32, !dbg !10129
  %cmp14 = icmp ne i32 %conv12, %conv13, !dbg !10129
  %lnot16 = xor i1 %cmp14, true, !dbg !10129
  %lnot18 = xor i1 %lnot16, true, !dbg !10129
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10129
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10129
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !10129
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !10129
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !10132

if.then23:                                        ; preds = %if.end11
  %20 = load ptr, ptr %new_head, align 8, !dbg !10133, !tbaa !2658
  %21 = load ptr, ptr %bin.addr, align 8, !dbg !10135, !tbaa !2658
  %stack_head24 = getelementptr inbounds %struct.cache_bin_s, ptr %21, i32 0, i32 0, !dbg !10136
  store ptr %20, ptr %stack_head24, align 8, !dbg !10137, !tbaa !6546
  %22 = load ptr, ptr %new_head, align 8, !dbg !10138, !tbaa !2658
  %23 = ptrtoint ptr %22 to i64, !dbg !10139
  %conv25 = trunc i64 %23 to i16, !dbg !10140
  %24 = load ptr, ptr %bin.addr, align 8, !dbg !10141, !tbaa !2658
  %low_bits_low_water26 = getelementptr inbounds %struct.cache_bin_s, ptr %24, i32 0, i32 2, !dbg !10142
  store i16 %conv25, ptr %low_bits_low_water26, align 8, !dbg !10143, !tbaa !10111
  %25 = load ptr, ptr %success.addr, align 8, !dbg !10144, !tbaa !2658
  store i8 1, ptr %25, align 1, !dbg !10145, !tbaa !2695
  %26 = load ptr, ptr %ret, align 8, !dbg !10146, !tbaa !2658
  store ptr %26, ptr %retval, align 8, !dbg !10147
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10147

if.end27:                                         ; preds = %if.end11
  %27 = load ptr, ptr %success.addr, align 8, !dbg !10148, !tbaa !2658
  store i8 0, ptr %27, align 1, !dbg !10149, !tbaa !2695
  store ptr null, ptr %retval, align 8, !dbg !10150
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10150

cleanup:                                          ; preds = %if.end27, %if.then23, %if.then10, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_head) #18, !dbg !10151
  call void @llvm.lifetime.end.p0(i64 2, ptr %low_bits) #18, !dbg !10151
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !10151
  %28 = load ptr, ptr %retval, align 8, !dbg !10151
  ret ptr %28, !dbg !10151
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @cache_bin_info_ncached_max(ptr noundef %info) #4 !dbg !10152 {
entry:
  %info.addr = alloca ptr, align 8
  store ptr %info, ptr %info.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %info.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  %0 = load ptr, ptr %info.addr, align 8, !dbg !10163, !tbaa !2658
  %ncached_max = getelementptr inbounds %struct.cache_bin_info_s, ptr %0, i32 0, i32 0, !dbg !10164
  %1 = load i16, ptr %ncached_max, align 2, !dbg !10164, !tbaa !10165
  ret i16 %1, !dbg !10167
}

declare !dbg !10168 ptr @large_malloc(ptr noundef, ptr noundef, i64 noundef, i1 noundef zeroext) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @sz_s2u(i64 noundef %size) #3 !dbg !10172 {
entry:
  %retval = alloca i64, align 8
  %size.addr = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  %0 = load i64, ptr %size.addr, align 8, !dbg !10178, !tbaa !2663
  %cmp = icmp ule i64 %0, 4096, !dbg !10178
  %lnot = xor i1 %cmp, true, !dbg !10178
  %lnot1 = xor i1 %lnot, true, !dbg !10178
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10178
  %conv = sext i32 %lnot.ext to i64, !dbg !10178
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !10178
  %tobool = icmp ne i64 %expval, 0, !dbg !10178
  br i1 %tobool, label %if.then, label %if.end, !dbg !10180

if.then:                                          ; preds = %entry
  %1 = load i64, ptr %size.addr, align 8, !dbg !10181, !tbaa !2663
  %call = call i64 @sz_s2u_lookup(i64 noundef %1), !dbg !10183
  store i64 %call, ptr %retval, align 8, !dbg !10184
  br label %return, !dbg !10184

if.end:                                           ; preds = %entry
  %2 = load i64, ptr %size.addr, align 8, !dbg !10185, !tbaa !2663
  %call2 = call i64 @sz_s2u_compute(i64 noundef %2), !dbg !10186
  store i64 %call2, ptr %retval, align 8, !dbg !10187
  br label %return, !dbg !10187

return:                                           ; preds = %if.end, %if.then
  %3 = load i64, ptr %retval, align 8, !dbg !10188
  ret i64 %3, !dbg !10188
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @sz_s2u_lookup(i64 noundef %size) #3 !dbg !10189 {
entry:
  %size.addr = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !10191, metadata !DIExpression()), !dbg !10193
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !10194
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10192, metadata !DIExpression()), !dbg !10195
  %0 = load i64, ptr %size.addr, align 8, !dbg !10196, !tbaa !2663
  %call = call i32 @sz_size2index_lookup(i64 noundef %0), !dbg !10197
  %call1 = call i64 @sz_index2size_lookup(i32 noundef %call), !dbg !10198
  store i64 %call1, ptr %ret, align 8, !dbg !10195, !tbaa !2663
  br label %do.body, !dbg !10199

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !10200

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !10200

do.end:                                           ; preds = %do.cond
  %1 = load i64, ptr %ret, align 8, !dbg !10202, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !10203
  ret i64 %1, !dbg !10204
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @sz_s2u_compute(i64 noundef %size) #3 !dbg !10205 {
entry:
  %retval = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %lg_tmin = alloca i64, align 8
  %lg_ceil = alloca i64, align 8
  %x = alloca i64, align 8
  %lg_delta = alloca i64, align 8
  %delta = alloca i64, align 8
  %delta_mask = alloca i64, align 8
  %usize = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !10207, metadata !DIExpression()), !dbg !10218
  %0 = load i64, ptr %size.addr, align 8, !dbg !10219, !tbaa !2663
  %cmp = icmp ugt i64 %0, 8070450532247928832, !dbg !10219
  %lnot = xor i1 %cmp, true, !dbg !10219
  %lnot1 = xor i1 %lnot, true, !dbg !10219
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10219
  %conv = sext i32 %lnot.ext to i64, !dbg !10219
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10219
  %tobool = icmp ne i64 %expval, 0, !dbg !10219
  br i1 %tobool, label %if.then, label %if.end, !dbg !10221

if.then:                                          ; preds = %entry
  store i64 0, ptr %retval, align 8, !dbg !10222
  br label %return, !dbg !10222

if.end:                                           ; preds = %entry
  %1 = load i64, ptr %size.addr, align 8, !dbg !10224, !tbaa !2663
  %cmp2 = icmp eq i64 %1, 0, !dbg !10226
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10227

if.then4:                                         ; preds = %if.end
  %2 = load i64, ptr %size.addr, align 8, !dbg !10228, !tbaa !2663
  %inc = add i64 %2, 1, !dbg !10228
  store i64 %inc, ptr %size.addr, align 8, !dbg !10228, !tbaa !2663
  br label %if.end5, !dbg !10230

if.end5:                                          ; preds = %if.then4, %if.end
  %3 = load i64, ptr %size.addr, align 8, !dbg !10231, !tbaa !2663
  %cmp6 = icmp ule i64 %3, 8, !dbg !10232
  br i1 %cmp6, label %if.then8, label %if.end14, !dbg !10233

if.then8:                                         ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 8, ptr %lg_tmin) #18, !dbg !10234
  tail call void @llvm.dbg.declare(metadata ptr %lg_tmin, metadata !10208, metadata !DIExpression()), !dbg !10235
  store i64 3, ptr %lg_tmin, align 8, !dbg !10235, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %lg_ceil) #18, !dbg !10236
  tail call void @llvm.dbg.declare(metadata ptr %lg_ceil, metadata !10211, metadata !DIExpression()), !dbg !10237
  %4 = load i64, ptr %size.addr, align 8, !dbg !10238, !tbaa !2663
  %call = call i64 @pow2_ceil_zu(i64 noundef %4), !dbg !10239
  %call9 = call i32 @lg_floor(i64 noundef %call), !dbg !10240
  %conv10 = zext i32 %call9 to i64, !dbg !10240
  store i64 %conv10, ptr %lg_ceil, align 8, !dbg !10237, !tbaa !2663
  %5 = load i64, ptr %lg_ceil, align 8, !dbg !10241, !tbaa !2663
  %6 = load i64, ptr %lg_tmin, align 8, !dbg !10242, !tbaa !2663
  %cmp11 = icmp ult i64 %5, %6, !dbg !10243
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !10241

cond.true:                                        ; preds = %if.then8
  %7 = load i64, ptr %lg_tmin, align 8, !dbg !10244, !tbaa !2663
  %shl = shl i64 1, %7, !dbg !10245
  br label %cond.end, !dbg !10241

cond.false:                                       ; preds = %if.then8
  %8 = load i64, ptr %lg_ceil, align 8, !dbg !10246, !tbaa !2663
  %shl13 = shl i64 1, %8, !dbg !10247
  br label %cond.end, !dbg !10241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %shl, %cond.true ], [ %shl13, %cond.false ], !dbg !10241
  store i64 %cond, ptr %retval, align 8, !dbg !10248
  call void @llvm.lifetime.end.p0(i64 8, ptr %lg_ceil) #18, !dbg !10249
  call void @llvm.lifetime.end.p0(i64 8, ptr %lg_tmin) #18, !dbg !10249
  br label %return

if.end14:                                         ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #18, !dbg !10250
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !10212, metadata !DIExpression()), !dbg !10251
  %9 = load i64, ptr %size.addr, align 8, !dbg !10252, !tbaa !2663
  %shl15 = shl i64 %9, 1, !dbg !10253
  %sub = sub i64 %shl15, 1, !dbg !10254
  %call16 = call i32 @lg_floor(i64 noundef %sub), !dbg !10255
  %conv17 = zext i32 %call16 to i64, !dbg !10255
  store i64 %conv17, ptr %x, align 8, !dbg !10251, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %lg_delta) #18, !dbg !10256
  tail call void @llvm.dbg.declare(metadata ptr %lg_delta, metadata !10214, metadata !DIExpression()), !dbg !10257
  %10 = load i64, ptr %x, align 8, !dbg !10258, !tbaa !2663
  %cmp18 = icmp ult i64 %10, 7, !dbg !10259
  br i1 %cmp18, label %cond.true20, label %cond.false21, !dbg !10260

cond.true20:                                      ; preds = %if.end14
  br label %cond.end24, !dbg !10260

cond.false21:                                     ; preds = %if.end14
  %11 = load i64, ptr %x, align 8, !dbg !10261, !tbaa !2663
  %sub22 = sub i64 %11, 2, !dbg !10262
  %sub23 = sub i64 %sub22, 1, !dbg !10263
  br label %cond.end24, !dbg !10260

cond.end24:                                       ; preds = %cond.false21, %cond.true20
  %cond25 = phi i64 [ 4, %cond.true20 ], [ %sub23, %cond.false21 ], !dbg !10260
  store i64 %cond25, ptr %lg_delta, align 8, !dbg !10257, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %delta) #18, !dbg !10264
  tail call void @llvm.dbg.declare(metadata ptr %delta, metadata !10215, metadata !DIExpression()), !dbg !10265
  %12 = load i64, ptr %lg_delta, align 8, !dbg !10266, !tbaa !2663
  %shl26 = shl i64 1, %12, !dbg !10267
  store i64 %shl26, ptr %delta, align 8, !dbg !10265, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %delta_mask) #18, !dbg !10268
  tail call void @llvm.dbg.declare(metadata ptr %delta_mask, metadata !10216, metadata !DIExpression()), !dbg !10269
  %13 = load i64, ptr %delta, align 8, !dbg !10270, !tbaa !2663
  %sub27 = sub i64 %13, 1, !dbg !10271
  store i64 %sub27, ptr %delta_mask, align 8, !dbg !10269, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !10272
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !10217, metadata !DIExpression()), !dbg !10273
  %14 = load i64, ptr %size.addr, align 8, !dbg !10274, !tbaa !2663
  %15 = load i64, ptr %delta_mask, align 8, !dbg !10275, !tbaa !2663
  %add = add i64 %14, %15, !dbg !10276
  %16 = load i64, ptr %delta_mask, align 8, !dbg !10277, !tbaa !2663
  %not = xor i64 %16, -1, !dbg !10278
  %and = and i64 %add, %not, !dbg !10279
  store i64 %and, ptr %usize, align 8, !dbg !10273, !tbaa !2663
  %17 = load i64, ptr %usize, align 8, !dbg !10280, !tbaa !2663
  store i64 %17, ptr %retval, align 8, !dbg !10281
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !10282
  call void @llvm.lifetime.end.p0(i64 8, ptr %delta_mask) #18, !dbg !10282
  call void @llvm.lifetime.end.p0(i64 8, ptr %delta) #18, !dbg !10282
  call void @llvm.lifetime.end.p0(i64 8, ptr %lg_delta) #18, !dbg !10282
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #18, !dbg !10282
  br label %return

return:                                           ; preds = %cond.end24, %cond.end, %if.then
  %18 = load i64, ptr %retval, align 8, !dbg !10283
  ret i64 %18, !dbg !10283
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @sz_index2size_lookup(i32 noundef %index) #3 !dbg !10284 {
entry:
  %index.addr = alloca i32, align 4
  %ret = alloca i64, align 8
  store i32 %index, ptr %index.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !10286, metadata !DIExpression()), !dbg !10288
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !10289
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10287, metadata !DIExpression()), !dbg !10290
  %0 = load i32, ptr %index.addr, align 4, !dbg !10291, !tbaa !2791
  %call = call i64 @sz_index2size_lookup_impl(i32 noundef %0), !dbg !10292
  store i64 %call, ptr %ret, align 8, !dbg !10290, !tbaa !2663
  br label %do.body, !dbg !10293

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !10294

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !10294

do.end:                                           ; preds = %do.cond
  %1 = load i64, ptr %ret, align 8, !dbg !10296, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !10297
  ret i64 %1, !dbg !10298
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @sz_size2index_lookup(i64 noundef %size) #3 !dbg !10299 {
entry:
  %size.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !10301, metadata !DIExpression()), !dbg !10303
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #18, !dbg !10304
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10302, metadata !DIExpression()), !dbg !10305
  %0 = load i64, ptr %size.addr, align 8, !dbg !10306, !tbaa !2663
  %call = call i32 @sz_size2index_lookup_impl(i64 noundef %0), !dbg !10307
  store i32 %call, ptr %ret, align 4, !dbg !10305, !tbaa !2791
  br label %do.body, !dbg !10308

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !10309

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !10309

do.end:                                           ; preds = %do.cond
  %1 = load i32, ptr %ret, align 4, !dbg !10311, !tbaa !2791
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #18, !dbg !10312
  ret i32 %1, !dbg !10313
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @sz_index2size_lookup_impl(i32 noundef %index) #3 !dbg !10314 {
entry:
  %index.addr = alloca i32, align 4
  store i32 %index, ptr %index.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %index.addr, metadata !10316, metadata !DIExpression()), !dbg !10317
  %0 = load i32, ptr %index.addr, align 4, !dbg !10318, !tbaa !2791
  %idxprom = zext i32 %0 to i64, !dbg !10319
  %arrayidx = getelementptr inbounds [232 x i64], ptr @sz_index2size_tab, i64 0, i64 %idxprom, !dbg !10319
  %1 = load i64, ptr %arrayidx, align 8, !dbg !10319, !tbaa !2663
  ret i64 %1, !dbg !10320
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @sz_size2index_lookup_impl(i64 noundef %size) #3 !dbg !10321 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !10323, metadata !DIExpression()), !dbg !10324
  br label %do.body, !dbg !10325

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10326

do.end:                                           ; preds = %do.body
  %0 = load i64, ptr %size.addr, align 8, !dbg !10328, !tbaa !2663
  %add = add i64 %0, 8, !dbg !10329
  %sub = sub i64 %add, 1, !dbg !10330
  %shr = lshr i64 %sub, 3, !dbg !10331
  %arrayidx = getelementptr inbounds [0 x i8], ptr @sz_size2index_tab, i64 0, i64 %shr, !dbg !10332
  %1 = load i8, ptr %arrayidx, align 1, !dbg !10332, !tbaa !2810
  %conv = zext i8 %1 to i32, !dbg !10332
  ret i32 %conv, !dbg !10333
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lg_floor(i64 noundef %x) #4 !dbg !10334 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, ptr %x.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  %0 = load i64, ptr %x.addr, align 8, !dbg !10341, !tbaa !2663
  %cmp = icmp ne i64 %0, 0, !dbg !10342
  call void @util_assume(i1 noundef zeroext %cmp), !dbg !10343
  %1 = load i64, ptr %x.addr, align 8, !dbg !10344, !tbaa !2663
  %call = call i32 @fls_u64(i64 noundef %1), !dbg !10345
  ret i32 %call, !dbg !10346
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @pow2_ceil_zu(i64 noundef %x) #4 !dbg !10347 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, ptr %x.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !10349, metadata !DIExpression()), !dbg !10350
  %0 = load i64, ptr %x.addr, align 8, !dbg !10351, !tbaa !2663
  %call = call i64 @pow2_ceil_u64(i64 noundef %0), !dbg !10352
  ret i64 %call, !dbg !10353
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @util_assume(i1 noundef zeroext %b) #3 !dbg !10354 {
entry:
  %b.addr = alloca i8, align 1
  %frombool = zext i1 %b to i8
  store i8 %frombool, ptr %b.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  %0 = load i8, ptr %b.addr, align 1, !dbg !10360, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !10360
  br i1 %tobool, label %if.end, label %if.then, !dbg !10362

if.then:                                          ; preds = %entry
  unreachable, !dbg !10363

if.end:                                           ; preds = %entry
  ret void, !dbg !10365
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fls_u64(i64 noundef %x) #4 !dbg !10366 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, ptr %x.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !10370, metadata !DIExpression()), !dbg !10371
  %0 = load i64, ptr %x.addr, align 8, !dbg !10372, !tbaa !2663
  %call = call i32 @fls_lu(i64 noundef %0), !dbg !10373
  ret i32 %call, !dbg !10374
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fls_lu(i64 noundef %x) #4 !dbg !10375 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, ptr %x.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !10379, metadata !DIExpression()), !dbg !10380
  %0 = load i64, ptr %x.addr, align 8, !dbg !10381, !tbaa !2663
  %cmp = icmp ne i64 %0, 0, !dbg !10382
  call void @util_assume(i1 noundef zeroext %cmp), !dbg !10383
  %1 = load i64, ptr %x.addr, align 8, !dbg !10384, !tbaa !2663
  %2 = call i64 @llvm.ctlz.i64(i64 %1, i1 true), !dbg !10385
  %cast = trunc i64 %2 to i32, !dbg !10385
  %conv = sext i32 %cast to i64, !dbg !10385
  %xor = xor i64 63, %conv, !dbg !10386
  %conv1 = trunc i64 %xor to i32, !dbg !10387
  ret i32 %conv1, !dbg !10388
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #17

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @pow2_ceil_u64(i64 noundef %x) #4 !dbg !10389 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %msb_on_index = alloca i64, align 8
  store i64 %x, ptr %x.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !10393, metadata !DIExpression()), !dbg !10395
  %0 = load i64, ptr %x.addr, align 8, !dbg !10396, !tbaa !2663
  %cmp = icmp ule i64 %0, 1, !dbg !10396
  %lnot = xor i1 %cmp, true, !dbg !10396
  %lnot1 = xor i1 %lnot, true, !dbg !10396
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10396
  %conv = sext i32 %lnot.ext to i64, !dbg !10396
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10396
  %tobool = icmp ne i64 %expval, 0, !dbg !10396
  br i1 %tobool, label %if.then, label %if.end, !dbg !10398

if.then:                                          ; preds = %entry
  %1 = load i64, ptr %x.addr, align 8, !dbg !10399, !tbaa !2663
  store i64 %1, ptr %retval, align 8, !dbg !10401
  br label %return, !dbg !10401

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %msb_on_index) #18, !dbg !10402
  tail call void @llvm.dbg.declare(metadata ptr %msb_on_index, metadata !10394, metadata !DIExpression()), !dbg !10403
  %2 = load i64, ptr %x.addr, align 8, !dbg !10404, !tbaa !2663
  %sub = sub i64 %2, 1, !dbg !10405
  %call = call i32 @fls_u64(i64 noundef %sub), !dbg !10406
  %conv2 = zext i32 %call to i64, !dbg !10406
  store i64 %conv2, ptr %msb_on_index, align 8, !dbg !10403, !tbaa !2663
  br label %do.body, !dbg !10407

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !10408

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !10408

do.end:                                           ; preds = %do.cond
  %3 = load i64, ptr %msb_on_index, align 8, !dbg !10410, !tbaa !2663
  %add = add i64 %3, 1, !dbg !10411
  %shl = shl i64 1, %add, !dbg !10412
  store i64 %shl, ptr %retval, align 8, !dbg !10413
  call void @llvm.lifetime.end.p0(i64 8, ptr %msb_on_index) #18, !dbg !10414
  br label %return

return:                                           ; preds = %do.end, %if.then
  %4 = load i64, ptr %retval, align 8, !dbg !10414
  ret i64 %4, !dbg !10414
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @atomic_fetch_add_zu(ptr noundef %a, i64 noundef %val, i32 noundef %mo) #3 !dbg !10415 {
entry:
  %a.addr = alloca ptr, align 8
  %val.addr = alloca i64, align 8
  %mo.addr = alloca i32, align 4
  %.atomictmp = alloca i64, align 8
  %atomic-temp = alloca i64, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !10420, metadata !DIExpression()), !dbg !10423
  store i64 %val, ptr %val.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !10421, metadata !DIExpression()), !dbg !10423
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  %0 = load ptr, ptr %a.addr, align 8, !dbg !10423, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_zu_t, ptr %0, i32 0, i32 0, !dbg !10423
  %1 = load i32, ptr %mo.addr, align 4, !dbg !10423, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !10423
  %2 = load i64, ptr %val.addr, align 8, !dbg !10423, !tbaa !2663
  store i64 %2, ptr %.atomictmp, align 8, !dbg !10423, !tbaa !2663
  switch i32 %call, label %monotonic [
    i32 1, label %acquire
    i32 2, label %acquire
    i32 3, label %release
    i32 4, label %acqrel
    i32 5, label %seqcst
  ], !dbg !10423

monotonic:                                        ; preds = %entry
  %3 = load i64, ptr %.atomictmp, align 8, !dbg !10423
  %4 = atomicrmw add ptr %repr, i64 %3 monotonic, align 8, !dbg !10423
  store i64 %4, ptr %atomic-temp, align 8, !dbg !10423
  br label %atomic.continue, !dbg !10423

acquire:                                          ; preds = %entry, %entry
  %5 = load i64, ptr %.atomictmp, align 8, !dbg !10423
  %6 = atomicrmw add ptr %repr, i64 %5 acquire, align 8, !dbg !10423
  store i64 %6, ptr %atomic-temp, align 8, !dbg !10423
  br label %atomic.continue, !dbg !10423

release:                                          ; preds = %entry
  %7 = load i64, ptr %.atomictmp, align 8, !dbg !10423
  %8 = atomicrmw add ptr %repr, i64 %7 release, align 8, !dbg !10423
  store i64 %8, ptr %atomic-temp, align 8, !dbg !10423
  br label %atomic.continue, !dbg !10423

acqrel:                                           ; preds = %entry
  %9 = load i64, ptr %.atomictmp, align 8, !dbg !10423
  %10 = atomicrmw add ptr %repr, i64 %9 acq_rel, align 8, !dbg !10423
  store i64 %10, ptr %atomic-temp, align 8, !dbg !10423
  br label %atomic.continue, !dbg !10423

seqcst:                                           ; preds = %entry
  %11 = load i64, ptr %.atomictmp, align 8, !dbg !10423
  %12 = atomicrmw add ptr %repr, i64 %11 seq_cst, align 8, !dbg !10423
  store i64 %12, ptr %atomic-temp, align 8, !dbg !10423
  br label %atomic.continue, !dbg !10423

atomic.continue:                                  ; preds = %seqcst, %acqrel, %release, %acquire, %monotonic
  %13 = load i64, ptr %atomic-temp, align 8, !dbg !10423, !tbaa !2663
  ret i64 %13, !dbg !10423
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @arena_aalloc(ptr noundef %tsdn, ptr noundef %ptr) #3 !dbg !10424 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %edata = alloca ptr, align 8
  %arena_ind = alloca i32, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !10426, metadata !DIExpression()), !dbg !10430
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10427, metadata !DIExpression()), !dbg !10431
  call void @llvm.lifetime.start.p0(i64 8, ptr %edata) #18, !dbg !10432
  tail call void @llvm.dbg.declare(metadata ptr %edata, metadata !10428, metadata !DIExpression()), !dbg !10433
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !10434, !tbaa !2658
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !10435, !tbaa !2658
  %call = call ptr @emap_edata_lookup(ptr noundef %0, ptr noundef @arena_emap_global, ptr noundef %1), !dbg !10436
  store ptr %call, ptr %edata, align 8, !dbg !10433, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 4, ptr %arena_ind) #18, !dbg !10437
  tail call void @llvm.dbg.declare(metadata ptr %arena_ind, metadata !10429, metadata !DIExpression()), !dbg !10438
  %2 = load ptr, ptr %edata, align 8, !dbg !10439, !tbaa !2658
  %call1 = call i32 @edata_arena_ind_get(ptr noundef %2), !dbg !10440
  store i32 %call1, ptr %arena_ind, align 4, !dbg !10438, !tbaa !2791
  %3 = load i32, ptr %arena_ind, align 4, !dbg !10441, !tbaa !2791
  %idxprom = zext i32 %3 to i64, !dbg !10442
  %arrayidx = getelementptr inbounds [0 x %struct.atomic_p_t], ptr @arenas, i64 0, i64 %idxprom, !dbg !10442
  %call2 = call ptr @atomic_load_p(ptr noundef %arrayidx, i32 noundef 0), !dbg !10443
  call void @llvm.lifetime.end.p0(i64 4, ptr %arena_ind) #18, !dbg !10444
  call void @llvm.lifetime.end.p0(i64 8, ptr %edata) #18, !dbg !10444
  ret ptr %call2, !dbg !10445
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @edata_arena_ind_get(ptr noundef %edata) #4 !dbg !10446 {
entry:
  %edata.addr = alloca ptr, align 8
  %arena_ind = alloca i32, align 4
  store ptr %edata, ptr %edata.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %edata.addr, metadata !10452, metadata !DIExpression()), !dbg !10454
  call void @llvm.lifetime.start.p0(i64 4, ptr %arena_ind) #18, !dbg !10455
  tail call void @llvm.dbg.declare(metadata ptr %arena_ind, metadata !10453, metadata !DIExpression()), !dbg !10456
  %0 = load ptr, ptr %edata.addr, align 8, !dbg !10457, !tbaa !2658
  %e_bits = getelementptr inbounds %struct.edata_s, ptr %0, i32 0, i32 0, !dbg !10458
  %1 = load i64, ptr %e_bits, align 8, !dbg !10458, !tbaa !10459
  %and = and i64 %1, 4095, !dbg !10461
  %shr = lshr i64 %and, 0, !dbg !10462
  %conv = trunc i64 %shr to i32, !dbg !10463
  store i32 %conv, ptr %arena_ind, align 4, !dbg !10456, !tbaa !2791
  br label %do.body, !dbg !10464

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !10465

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !10465

do.end:                                           ; preds = %do.cond
  %2 = load i32, ptr %arena_ind, align 4, !dbg !10467, !tbaa !2791
  call void @llvm.lifetime.end.p0(i64 4, ptr %arena_ind) #18, !dbg !10468
  ret i32 %2, !dbg !10469
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @atomic_load_p(ptr noundef %a, i32 noundef %mo) #3 !dbg !10470 {
entry:
  %a.addr = alloca ptr, align 8
  %mo.addr = alloca i32, align 4
  %result = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !10476, metadata !DIExpression()), !dbg !10479
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !10477, metadata !DIExpression()), !dbg !10479
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #18, !dbg !10479
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !10478, metadata !DIExpression()), !dbg !10479
  %0 = load ptr, ptr %a.addr, align 8, !dbg !10479, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_p_t, ptr %0, i32 0, i32 0, !dbg !10479
  %1 = load i32, ptr %mo.addr, align 4, !dbg !10479, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !10479
  switch i32 %call, label %monotonic [
    i32 1, label %acquire
    i32 2, label %acquire
    i32 5, label %seqcst
  ], !dbg !10479

monotonic:                                        ; preds = %entry
  %2 = load atomic i64, ptr %repr monotonic, align 8, !dbg !10479
  store i64 %2, ptr %result, align 8, !dbg !10479
  br label %atomic.continue, !dbg !10479

acquire:                                          ; preds = %entry, %entry
  %3 = load atomic i64, ptr %repr acquire, align 8, !dbg !10479
  store i64 %3, ptr %result, align 8, !dbg !10479
  br label %atomic.continue, !dbg !10479

seqcst:                                           ; preds = %entry
  %4 = load atomic i64, ptr %repr seq_cst, align 8, !dbg !10479
  store i64 %4, ptr %result, align 8, !dbg !10479
  br label %atomic.continue, !dbg !10479

atomic.continue:                                  ; preds = %seqcst, %acquire, %monotonic
  %5 = load ptr, ptr %result, align 8, !dbg !10479, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #18, !dbg !10479
  ret ptr %5, !dbg !10479
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @idalloctm(ptr noundef %tsdn, ptr noundef %ptr, ptr noundef %tcache, ptr noundef %alloc_ctx, i1 noundef zeroext %is_internal, i1 noundef zeroext %slow_path) #3 !dbg !10480 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %alloc_ctx.addr = alloca ptr, align 8
  %is_internal.addr = alloca i8, align 1
  %slow_path.addr = alloca i8, align 1
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !10484, metadata !DIExpression()), !dbg !10490
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10485, metadata !DIExpression()), !dbg !10491
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !10486, metadata !DIExpression()), !dbg !10492
  store ptr %alloc_ctx, ptr %alloc_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx.addr, metadata !10487, metadata !DIExpression()), !dbg !10493
  %frombool = zext i1 %is_internal to i8
  store i8 %frombool, ptr %is_internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_internal.addr, metadata !10488, metadata !DIExpression()), !dbg !10494
  %frombool1 = zext i1 %slow_path to i8
  store i8 %frombool1, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !10489, metadata !DIExpression()), !dbg !10495
  br label %do.body, !dbg !10496

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10497

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !10499

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !10500

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !10502

do.body4:                                         ; preds = %do.end3
  br label %do.end5, !dbg !10503

do.end5:                                          ; preds = %do.body4
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !10505, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !10506
  call void @witness_assert_depth_to_rank(ptr noundef %call, i32 noundef 14, i32 noundef 0), !dbg !10507
  %1 = load i8, ptr %is_internal.addr, align 1, !dbg !10508, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !10508
  br i1 %tobool, label %if.then, label %if.end, !dbg !10510

if.then:                                          ; preds = %do.end5
  %2 = load ptr, ptr %tsdn.addr, align 8, !dbg !10511, !tbaa !2658
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !10513, !tbaa !2658
  %call6 = call ptr @iaalloc(ptr noundef %2, ptr noundef %3), !dbg !10514
  %4 = load ptr, ptr %tsdn.addr, align 8, !dbg !10515, !tbaa !2658
  %5 = load ptr, ptr %ptr.addr, align 8, !dbg !10516, !tbaa !2658
  %call7 = call i64 @isalloc(ptr noundef %4, ptr noundef %5), !dbg !10517
  call void @arena_internal_sub(ptr noundef %call6, i64 noundef %call7), !dbg !10518
  br label %if.end, !dbg !10519

if.end:                                           ; preds = %if.then, %do.end5
  %6 = load i8, ptr %is_internal.addr, align 1, !dbg !10520, !tbaa !2695, !range !2708, !noundef !2709
  %tobool8 = trunc i8 %6 to i1, !dbg !10520
  br i1 %tobool8, label %if.end17, label %land.lhs.true, !dbg !10522

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %tsdn.addr, align 8, !dbg !10523, !tbaa !2658
  %call9 = call zeroext i1 @tsdn_null(ptr noundef %7), !dbg !10524
  br i1 %call9, label %if.end17, label %land.lhs.true10, !dbg !10525

land.lhs.true10:                                  ; preds = %land.lhs.true
  %8 = load ptr, ptr %tsdn.addr, align 8, !dbg !10526, !tbaa !2658
  %call11 = call ptr @tsdn_tsd(ptr noundef %8), !dbg !10527
  %call12 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %call11), !dbg !10528
  %conv = sext i8 %call12 to i32, !dbg !10528
  %cmp = icmp ne i32 %conv, 0, !dbg !10529
  br i1 %cmp, label %if.then14, label %if.end17, !dbg !10530

if.then14:                                        ; preds = %land.lhs.true10
  br label %do.body15, !dbg !10531

do.body15:                                        ; preds = %if.then14
  br label %do.end16, !dbg !10533

do.end16:                                         ; preds = %do.body15
  br label %if.end17, !dbg !10535

if.end17:                                         ; preds = %do.end16, %land.lhs.true10, %land.lhs.true, %if.end
  %9 = load ptr, ptr %tsdn.addr, align 8, !dbg !10536, !tbaa !2658
  %10 = load ptr, ptr %ptr.addr, align 8, !dbg !10537, !tbaa !2658
  %11 = load ptr, ptr %tcache.addr, align 8, !dbg !10538, !tbaa !2658
  %12 = load ptr, ptr %alloc_ctx.addr, align 8, !dbg !10539, !tbaa !2658
  %13 = load i8, ptr %slow_path.addr, align 1, !dbg !10540, !tbaa !2695, !range !2708, !noundef !2709
  %tobool18 = trunc i8 %13 to i1, !dbg !10540
  call void @arena_dalloc(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12, i1 noundef zeroext %tobool18), !dbg !10541
  ret void, !dbg !10542
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @arena_internal_sub(ptr noundef %arena, i64 noundef %size) #4 !dbg !10543 {
entry:
  %arena.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !10545, metadata !DIExpression()), !dbg !10547
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !10546, metadata !DIExpression()), !dbg !10548
  %0 = load ptr, ptr %arena.addr, align 8, !dbg !10549, !tbaa !2658
  %stats = getelementptr inbounds %struct.arena_s, ptr %0, i32 0, i32 3, !dbg !10550
  %internal = getelementptr inbounds %struct.arena_stats_s, ptr %stats, i32 0, i32 4, !dbg !10551
  %1 = load i64, ptr %size.addr, align 8, !dbg !10552, !tbaa !2663
  %call = call i64 @atomic_fetch_sub_zu(ptr noundef %internal, i64 noundef %1, i32 noundef 0), !dbg !10553
  ret void, !dbg !10554
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @arena_dalloc(ptr noundef %tsdn, ptr noundef %ptr, ptr noundef %tcache, ptr noundef %caller_alloc_ctx, i1 noundef zeroext %slow_path) #3 !dbg !10555 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %caller_alloc_ctx.addr = alloca ptr, align 8
  %slow_path.addr = alloca i8, align 1
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !10559, metadata !DIExpression()), !dbg !10565
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10560, metadata !DIExpression()), !dbg !10566
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !10561, metadata !DIExpression()), !dbg !10567
  store ptr %caller_alloc_ctx, ptr %caller_alloc_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %caller_alloc_ctx.addr, metadata !10562, metadata !DIExpression()), !dbg !10568
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !10563, metadata !DIExpression()), !dbg !10569
  br label %do.body, !dbg !10570

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10571

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !10573

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !10574

do.end2:                                          ; preds = %do.body1
  %0 = load ptr, ptr %tcache.addr, align 8, !dbg !10576, !tbaa !2658
  %cmp = icmp eq ptr %0, null, !dbg !10576
  %lnot = xor i1 %cmp, true, !dbg !10576
  %lnot3 = xor i1 %lnot, true, !dbg !10576
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10576
  %conv = sext i32 %lnot.ext to i64, !dbg !10576
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10576
  %tobool = icmp ne i64 %expval, 0, !dbg !10576
  br i1 %tobool, label %if.then, label %if.end, !dbg !10578

if.then:                                          ; preds = %do.end2
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !10579, !tbaa !2658
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !10581, !tbaa !2658
  call void @arena_dalloc_no_tcache(ptr noundef %1, ptr noundef %2), !dbg !10582
  br label %return, !dbg !10583

if.end:                                           ; preds = %do.end2
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !10584
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !10564, metadata !DIExpression()), !dbg !10585
  %3 = load ptr, ptr %caller_alloc_ctx.addr, align 8, !dbg !10586, !tbaa !2658
  %cmp4 = icmp ne ptr %3, null, !dbg !10588
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !10589

if.then6:                                         ; preds = %if.end
  %4 = load ptr, ptr %caller_alloc_ctx.addr, align 8, !dbg !10590, !tbaa !2658
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %alloc_ctx, ptr align 4 %4, i64 8, i1 false), !dbg !10592, !tbaa.struct !10593
  br label %if.end9, !dbg !10594

if.else:                                          ; preds = %if.end
  %5 = load ptr, ptr %tsdn.addr, align 8, !dbg !10595, !tbaa !2658
  %call = call zeroext i1 @tsdn_null(ptr noundef %5), !dbg !10597
  %lnot7 = xor i1 %call, true, !dbg !10598
  call void @util_assume(i1 noundef zeroext %lnot7), !dbg !10599
  %6 = load ptr, ptr %tsdn.addr, align 8, !dbg !10600, !tbaa !2658
  %7 = load ptr, ptr %ptr.addr, align 8, !dbg !10601, !tbaa !2658
  call void @emap_alloc_ctx_lookup(ptr noundef %6, ptr noundef @arena_emap_global, ptr noundef %7, ptr noundef %alloc_ctx), !dbg !10602
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %slab = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !10603
  %8 = load i8, ptr %slab, align 4, !dbg !10603, !tbaa !4461, !range !2708, !noundef !2709
  %tobool10 = trunc i8 %8 to i1, !dbg !10603
  %lnot11 = xor i1 %tobool10, true, !dbg !10603
  %lnot13 = xor i1 %lnot11, true, !dbg !10603
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !10603
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !10603
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 1), !dbg !10603
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !10603
  br i1 %tobool17, label %if.then18, label %if.else21, !dbg !10605

if.then18:                                        ; preds = %if.end9
  %9 = load ptr, ptr %tsdn.addr, align 8, !dbg !10606, !tbaa !2658
  %call19 = call ptr @tsdn_tsd(ptr noundef %9), !dbg !10608
  %10 = load ptr, ptr %tcache.addr, align 8, !dbg !10609, !tbaa !2658
  %11 = load ptr, ptr %ptr.addr, align 8, !dbg !10610, !tbaa !2658
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !10611
  %12 = load i32, ptr %szind, align 4, !dbg !10611, !tbaa !4364
  %13 = load i8, ptr %slow_path.addr, align 1, !dbg !10612, !tbaa !2695, !range !2708, !noundef !2709
  %tobool20 = trunc i8 %13 to i1, !dbg !10612
  call void @tcache_dalloc_small(ptr noundef %call19, ptr noundef %10, ptr noundef %11, i32 noundef %12, i1 noundef zeroext %tobool20), !dbg !10613
  br label %if.end24, !dbg !10614

if.else21:                                        ; preds = %if.end9
  %14 = load ptr, ptr %tsdn.addr, align 8, !dbg !10615, !tbaa !2658
  %15 = load ptr, ptr %ptr.addr, align 8, !dbg !10617, !tbaa !2658
  %16 = load ptr, ptr %tcache.addr, align 8, !dbg !10618, !tbaa !2658
  %szind22 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !10619
  %17 = load i32, ptr %szind22, align 4, !dbg !10619, !tbaa !4364
  %18 = load i8, ptr %slow_path.addr, align 1, !dbg !10620, !tbaa !2695, !range !2708, !noundef !2709
  %tobool23 = trunc i8 %18 to i1, !dbg !10620
  call void @arena_dalloc_large(ptr noundef %14, ptr noundef %15, ptr noundef %16, i32 noundef %17, i1 noundef zeroext %tobool23), !dbg !10621
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then18
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !10622
  br label %return, !dbg !10622

return:                                           ; preds = %if.end24, %if.then
  ret void, !dbg !10622
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @atomic_fetch_sub_zu(ptr noundef %a, i64 noundef %val, i32 noundef %mo) #3 !dbg !10623 {
entry:
  %a.addr = alloca ptr, align 8
  %val.addr = alloca i64, align 8
  %mo.addr = alloca i32, align 4
  %.atomictmp = alloca i64, align 8
  %atomic-temp = alloca i64, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !10625, metadata !DIExpression()), !dbg !10628
  store i64 %val, ptr %val.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !10626, metadata !DIExpression()), !dbg !10628
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !10627, metadata !DIExpression()), !dbg !10628
  %0 = load ptr, ptr %a.addr, align 8, !dbg !10628, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_zu_t, ptr %0, i32 0, i32 0, !dbg !10628
  %1 = load i32, ptr %mo.addr, align 4, !dbg !10628, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !10628
  %2 = load i64, ptr %val.addr, align 8, !dbg !10628, !tbaa !2663
  store i64 %2, ptr %.atomictmp, align 8, !dbg !10628, !tbaa !2663
  switch i32 %call, label %monotonic [
    i32 1, label %acquire
    i32 2, label %acquire
    i32 3, label %release
    i32 4, label %acqrel
    i32 5, label %seqcst
  ], !dbg !10628

monotonic:                                        ; preds = %entry
  %3 = load i64, ptr %.atomictmp, align 8, !dbg !10628
  %4 = atomicrmw sub ptr %repr, i64 %3 monotonic, align 8, !dbg !10628
  store i64 %4, ptr %atomic-temp, align 8, !dbg !10628
  br label %atomic.continue, !dbg !10628

acquire:                                          ; preds = %entry, %entry
  %5 = load i64, ptr %.atomictmp, align 8, !dbg !10628
  %6 = atomicrmw sub ptr %repr, i64 %5 acquire, align 8, !dbg !10628
  store i64 %6, ptr %atomic-temp, align 8, !dbg !10628
  br label %atomic.continue, !dbg !10628

release:                                          ; preds = %entry
  %7 = load i64, ptr %.atomictmp, align 8, !dbg !10628
  %8 = atomicrmw sub ptr %repr, i64 %7 release, align 8, !dbg !10628
  store i64 %8, ptr %atomic-temp, align 8, !dbg !10628
  br label %atomic.continue, !dbg !10628

acqrel:                                           ; preds = %entry
  %9 = load i64, ptr %.atomictmp, align 8, !dbg !10628
  %10 = atomicrmw sub ptr %repr, i64 %9 acq_rel, align 8, !dbg !10628
  store i64 %10, ptr %atomic-temp, align 8, !dbg !10628
  br label %atomic.continue, !dbg !10628

seqcst:                                           ; preds = %entry
  %11 = load i64, ptr %.atomictmp, align 8, !dbg !10628
  %12 = atomicrmw sub ptr %repr, i64 %11 seq_cst, align 8, !dbg !10628
  store i64 %12, ptr %atomic-temp, align 8, !dbg !10628
  br label %atomic.continue, !dbg !10628

atomic.continue:                                  ; preds = %seqcst, %acqrel, %release, %acquire, %monotonic
  %13 = load i64, ptr %atomic-temp, align 8, !dbg !10628, !tbaa !2663
  ret i64 %13, !dbg !10628
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @arena_dalloc_no_tcache(ptr noundef %tsdn, ptr noundef %ptr) #4 !dbg !10629 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !10633, metadata !DIExpression()), !dbg !10636
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10634, metadata !DIExpression()), !dbg !10637
  br label %do.body, !dbg !10638

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10639

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !10641
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !10635, metadata !DIExpression()), !dbg !10642
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !10643, !tbaa !2658
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !10644, !tbaa !2658
  call void @emap_alloc_ctx_lookup(ptr noundef %0, ptr noundef @arena_emap_global, ptr noundef %1, ptr noundef %alloc_ctx), !dbg !10645
  %slab = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !10646
  %2 = load i8, ptr %slab, align 4, !dbg !10646, !tbaa !4461, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !10646
  %lnot = xor i1 %tobool, true, !dbg !10646
  %lnot1 = xor i1 %lnot, true, !dbg !10646
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10646
  %conv = sext i32 %lnot.ext to i64, !dbg !10646
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !10646
  %tobool2 = icmp ne i64 %expval, 0, !dbg !10646
  br i1 %tobool2, label %if.then, label %if.else, !dbg !10648

if.then:                                          ; preds = %do.end
  %3 = load ptr, ptr %tsdn.addr, align 8, !dbg !10649, !tbaa !2658
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !10651, !tbaa !2658
  call void @arena_dalloc_small(ptr noundef %3, ptr noundef %4), !dbg !10652
  br label %if.end, !dbg !10653

if.else:                                          ; preds = %do.end
  %5 = load ptr, ptr %tsdn.addr, align 8, !dbg !10654, !tbaa !2658
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !10656, !tbaa !2658
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !10657
  %7 = load i32, ptr %szind, align 4, !dbg !10657, !tbaa !4364
  call void @arena_dalloc_large_no_tcache(ptr noundef %5, ptr noundef %6, i32 noundef %7), !dbg !10658
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !10659
  ret void, !dbg !10659
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @tcache_dalloc_small(ptr noundef %tsd, ptr noundef %tcache, ptr noundef %ptr, i32 noundef %binind, i1 noundef zeroext %slow_path) #3 !dbg !10660 {
entry:
  %tsd.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %binind.addr = alloca i32, align 4
  %slow_path.addr = alloca i8, align 1
  %bin = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %max = alloca i16, align 2
  %remain = alloca i32, align 4
  %ret = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !10664, metadata !DIExpression()), !dbg !10675
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !10665, metadata !DIExpression()), !dbg !10676
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10666, metadata !DIExpression()), !dbg !10677
  store i32 %binind, ptr %binind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %binind.addr, metadata !10667, metadata !DIExpression()), !dbg !10678
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !10668, metadata !DIExpression()), !dbg !10679
  br label %do.body, !dbg !10680

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10681

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin) #18, !dbg !10683
  tail call void @llvm.dbg.declare(metadata ptr %bin, metadata !10669, metadata !DIExpression()), !dbg !10684
  %0 = load ptr, ptr %tcache.addr, align 8, !dbg !10685, !tbaa !2658
  %bins = getelementptr inbounds %struct.tcache_s, ptr %0, i32 0, i32 1, !dbg !10686
  %1 = load i32, ptr %binind.addr, align 4, !dbg !10687, !tbaa !2791
  %idxprom = zext i32 %1 to i64, !dbg !10685
  %arrayidx = getelementptr inbounds [73 x %struct.cache_bin_s], ptr %bins, i64 0, i64 %idxprom, !dbg !10685
  store ptr %arrayidx, ptr %bin, align 8, !dbg !10684, !tbaa !2658
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !10688, !tbaa !2658
  %call = call zeroext i1 @cache_bin_nonfast_aligned(ptr noundef %2), !dbg !10690
  br i1 %call, label %if.then, label %if.end6, !dbg !10691

if.then:                                          ; preds = %do.end
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !10692, !tbaa !2658
  %4 = load i32, ptr %binind.addr, align 4, !dbg !10694, !tbaa !2791
  %call1 = call i64 @sz_index2size(i32 noundef %4), !dbg !10695
  call void @san_junk_ptr(ptr noundef %3, i64 noundef %call1), !dbg !10696
  %5 = load ptr, ptr %bin, align 8, !dbg !10697, !tbaa !2658
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !10699, !tbaa !2658
  %call2 = call zeroext i1 @cache_bin_stash(ptr noundef %5, ptr noundef %6), !dbg !10700
  br i1 %call2, label %if.then3, label %if.end, !dbg !10701

if.then3:                                         ; preds = %if.then
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10702

if.end:                                           ; preds = %if.then
  br label %do.body4, !dbg !10704

do.body4:                                         ; preds = %if.end
  br label %do.cond, !dbg !10705

do.cond:                                          ; preds = %do.body4
  br label %do.end5, !dbg !10705

do.end5:                                          ; preds = %do.cond
  br label %if.end6, !dbg !10707

if.end6:                                          ; preds = %do.end5, %do.end
  %7 = load ptr, ptr %bin, align 8, !dbg !10708, !tbaa !2658
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !10708, !tbaa !2658
  %call7 = call zeroext i1 @cache_bin_dalloc_easy(ptr noundef %7, ptr noundef %8), !dbg !10708
  %lnot = xor i1 %call7, true, !dbg !10708
  %lnot8 = xor i1 %lnot, true, !dbg !10708
  %lnot9 = xor i1 %lnot8, true, !dbg !10708
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !10708
  %conv = sext i32 %lnot.ext to i64, !dbg !10708
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10708
  %tobool = icmp ne i64 %expval, 0, !dbg !10708
  br i1 %tobool, label %if.then10, label %if.end31, !dbg !10709

if.then10:                                        ; preds = %if.end6
  %9 = load i32, ptr %binind.addr, align 4, !dbg !10710, !tbaa !2791
  %10 = load ptr, ptr %bin, align 8, !dbg !10710, !tbaa !2658
  %call11 = call zeroext i1 @tcache_small_bin_disabled(i32 noundef %9, ptr noundef %10), !dbg !10710
  %lnot12 = xor i1 %call11, true, !dbg !10710
  %lnot14 = xor i1 %lnot12, true, !dbg !10710
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !10710
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !10710
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 0), !dbg !10710
  %tobool18 = icmp ne i64 %expval17, 0, !dbg !10710
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !10712

if.then19:                                        ; preds = %if.then10
  %11 = load ptr, ptr %tsd.addr, align 8, !dbg !10713, !tbaa !2658
  %call20 = call ptr @tsd_tsdn(ptr noundef %11), !dbg !10715
  %12 = load ptr, ptr %ptr.addr, align 8, !dbg !10716, !tbaa !2658
  call void @arena_dalloc_small(ptr noundef %call20, ptr noundef %12), !dbg !10717
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10718

if.end21:                                         ; preds = %if.then10
  call void @llvm.lifetime.start.p0(i64 2, ptr %max) #18, !dbg !10719
  tail call void @llvm.dbg.declare(metadata ptr %max, metadata !10670, metadata !DIExpression()), !dbg !10720
  %13 = load ptr, ptr @tcache_bin_info, align 8, !dbg !10721, !tbaa !2658
  %14 = load i32, ptr %binind.addr, align 4, !dbg !10722, !tbaa !2791
  %idxprom22 = zext i32 %14 to i64, !dbg !10721
  %arrayidx23 = getelementptr inbounds %struct.cache_bin_info_s, ptr %13, i64 %idxprom22, !dbg !10721
  %call24 = call zeroext i16 @cache_bin_info_ncached_max(ptr noundef %arrayidx23), !dbg !10723
  store i16 %call24, ptr %max, align 2, !dbg !10720, !tbaa !6532
  call void @llvm.lifetime.start.p0(i64 4, ptr %remain) #18, !dbg !10724
  tail call void @llvm.dbg.declare(metadata ptr %remain, metadata !10673, metadata !DIExpression()), !dbg !10725
  %15 = load i16, ptr %max, align 2, !dbg !10726, !tbaa !6532
  %conv25 = zext i16 %15 to i32, !dbg !10726
  %16 = load i32, ptr @opt_lg_tcache_flush_small_div, align 4, !dbg !10727, !tbaa !2791
  %shr = ashr i32 %conv25, %16, !dbg !10728
  store i32 %shr, ptr %remain, align 4, !dbg !10725, !tbaa !2791
  %17 = load ptr, ptr %tsd.addr, align 8, !dbg !10729, !tbaa !2658
  %18 = load ptr, ptr %tcache.addr, align 8, !dbg !10730, !tbaa !2658
  %19 = load ptr, ptr %bin, align 8, !dbg !10731, !tbaa !2658
  %20 = load i32, ptr %binind.addr, align 4, !dbg !10732, !tbaa !2791
  %21 = load i32, ptr %remain, align 4, !dbg !10733, !tbaa !2791
  call void @tcache_bin_flush_small(ptr noundef %17, ptr noundef %18, ptr noundef %19, i32 noundef %20, i32 noundef %21), !dbg !10734
  call void @llvm.lifetime.start.p0(i64 1, ptr %ret) #18, !dbg !10735
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10674, metadata !DIExpression()), !dbg !10736
  %22 = load ptr, ptr %bin, align 8, !dbg !10737, !tbaa !2658
  %23 = load ptr, ptr %ptr.addr, align 8, !dbg !10738, !tbaa !2658
  %call26 = call zeroext i1 @cache_bin_dalloc_easy(ptr noundef %22, ptr noundef %23), !dbg !10739
  %frombool27 = zext i1 %call26 to i8, !dbg !10736
  store i8 %frombool27, ptr %ret, align 1, !dbg !10736, !tbaa !2695
  br label %do.body28, !dbg !10740

do.body28:                                        ; preds = %if.end21
  br label %do.cond29, !dbg !10741

do.cond29:                                        ; preds = %do.body28
  br label %do.end30, !dbg !10741

do.end30:                                         ; preds = %do.cond29
  call void @llvm.lifetime.end.p0(i64 1, ptr %ret) #18, !dbg !10743
  call void @llvm.lifetime.end.p0(i64 4, ptr %remain) #18, !dbg !10743
  call void @llvm.lifetime.end.p0(i64 2, ptr %max) #18, !dbg !10743
  br label %if.end31, !dbg !10744

if.end31:                                         ; preds = %do.end30, %if.end6
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10745
  br label %cleanup, !dbg !10745

cleanup:                                          ; preds = %if.end31, %if.then19, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin) #18, !dbg !10745
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !10745

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @arena_dalloc_large(ptr noundef %tsdn, ptr noundef %ptr, ptr noundef %tcache, i32 noundef %szind, i1 noundef zeroext %slow_path) #3 !dbg !10746 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %szind.addr = alloca i32, align 4
  %slow_path.addr = alloca i8, align 1
  %edata = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !10750, metadata !DIExpression()), !dbg !10758
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10751, metadata !DIExpression()), !dbg !10759
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !10752, metadata !DIExpression()), !dbg !10760
  store i32 %szind, ptr %szind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %szind.addr, metadata !10753, metadata !DIExpression()), !dbg !10761
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !10754, metadata !DIExpression()), !dbg !10762
  %0 = load i32, ptr %szind.addr, align 4, !dbg !10763, !tbaa !2791
  %1 = load i32, ptr @nhbins, align 4, !dbg !10764, !tbaa !2791
  %cmp = icmp ult i32 %0, %1, !dbg !10765
  br i1 %cmp, label %if.then, label %if.else, !dbg !10766

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %tsdn.addr, align 8, !dbg !10767, !tbaa !2658
  %call = call ptr @tsdn_tsd(ptr noundef %2), !dbg !10771
  %3 = load ptr, ptr %tcache.addr, align 8, !dbg !10772, !tbaa !2658
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !10773, !tbaa !2658
  %5 = load i32, ptr %szind.addr, align 4, !dbg !10774, !tbaa !2791
  %6 = load i8, ptr %slow_path.addr, align 1, !dbg !10775, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %6 to i1, !dbg !10775
  call void @tcache_dalloc_large(ptr noundef %call, ptr noundef %3, ptr noundef %4, i32 noundef %5, i1 noundef zeroext %tobool), !dbg !10776
  br label %if.end4, !dbg !10777

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %edata) #18, !dbg !10778
  tail call void @llvm.dbg.declare(metadata ptr %edata, metadata !10755, metadata !DIExpression()), !dbg !10779
  %7 = load ptr, ptr %tsdn.addr, align 8, !dbg !10780, !tbaa !2658
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !10781, !tbaa !2658
  %call1 = call ptr @emap_edata_lookup(ptr noundef %7, ptr noundef @arena_emap_global, ptr noundef %8), !dbg !10782
  store ptr %call1, ptr %edata, align 8, !dbg !10779, !tbaa !2658
  %9 = load ptr, ptr %edata, align 8, !dbg !10783, !tbaa !2658
  %10 = load ptr, ptr %ptr.addr, align 8, !dbg !10785, !tbaa !2658
  %11 = load i32, ptr %szind.addr, align 4, !dbg !10786, !tbaa !2791
  %call2 = call zeroext i1 @large_dalloc_safety_checks(ptr noundef %9, ptr noundef %10, i32 noundef %11), !dbg !10787
  br i1 %call2, label %if.then3, label %if.end, !dbg !10788

if.then3:                                         ; preds = %if.else
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10789

if.end:                                           ; preds = %if.else
  %12 = load ptr, ptr %tsdn.addr, align 8, !dbg !10791, !tbaa !2658
  %13 = load ptr, ptr %edata, align 8, !dbg !10792, !tbaa !2658
  call void @large_dalloc(ptr noundef %12, ptr noundef %13), !dbg !10793
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10794
  br label %cleanup, !dbg !10794

cleanup:                                          ; preds = %if.end, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %edata) #18, !dbg !10794
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %if.end4
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end4

if.end4:                                          ; preds = %cleanup, %cleanup.cont, %if.then
  ret void, !dbg !10795

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !10796 void @arena_dalloc_small(ptr noundef, ptr noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @arena_dalloc_large_no_tcache(ptr noundef %tsdn, ptr noundef %ptr, i32 noundef %szind) #4 !dbg !10797 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %szind.addr = alloca i32, align 4
  %edata = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !10801, metadata !DIExpression()), !dbg !10807
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10802, metadata !DIExpression()), !dbg !10808
  store i32 %szind, ptr %szind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %szind.addr, metadata !10803, metadata !DIExpression()), !dbg !10809
  call void @llvm.lifetime.start.p0(i64 8, ptr %edata) #18, !dbg !10810
  tail call void @llvm.dbg.declare(metadata ptr %edata, metadata !10804, metadata !DIExpression()), !dbg !10811
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !10812, !tbaa !2658
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !10813, !tbaa !2658
  %call = call ptr @emap_edata_lookup(ptr noundef %0, ptr noundef @arena_emap_global, ptr noundef %1), !dbg !10814
  store ptr %call, ptr %edata, align 8, !dbg !10811, !tbaa !2658
  %2 = load ptr, ptr %edata, align 8, !dbg !10815, !tbaa !2658
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !10817, !tbaa !2658
  %4 = load i32, ptr %szind.addr, align 4, !dbg !10818, !tbaa !2791
  %call1 = call zeroext i1 @large_dalloc_safety_checks(ptr noundef %2, ptr noundef %3, i32 noundef %4), !dbg !10819
  br i1 %call1, label %if.then, label %if.end, !dbg !10820

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10821

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %tsdn.addr, align 8, !dbg !10823, !tbaa !2658
  %6 = load ptr, ptr %edata, align 8, !dbg !10824, !tbaa !2658
  call void @large_dalloc(ptr noundef %5, ptr noundef %6), !dbg !10825
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10826
  br label %cleanup, !dbg !10826

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %edata) #18, !dbg !10826
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !10827

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @large_dalloc_safety_checks(ptr noundef %edata, ptr noundef %ptr, i32 noundef %szind) #3 !dbg !10828 {
entry:
  %edata.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %szind.addr = alloca i32, align 4
  %input_size = alloca i64, align 8
  store ptr %edata, ptr %edata.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %edata.addr, metadata !10832, metadata !DIExpression()), !dbg !10835
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10833, metadata !DIExpression()), !dbg !10836
  store i32 %szind, ptr %szind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %szind.addr, metadata !10834, metadata !DIExpression()), !dbg !10837
  ret i1 false, !dbg !10838
}

declare !dbg !10841 void @large_dalloc(ptr noundef, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @cache_bin_nonfast_aligned(ptr noundef %ptr) #3 !dbg !10844 {
entry:
  %ptr.addr = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10848, metadata !DIExpression()), !dbg !10849
  ret i1 false, !dbg !10850
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @san_junk_ptr(ptr noundef %ptr, i64 noundef %usize) #4 !dbg !10853 {
entry:
  %ptr.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  %first = alloca ptr, align 8
  %mid = alloca ptr, align 8
  %last = alloca ptr, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10855, metadata !DIExpression()), !dbg !10860
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !10856, metadata !DIExpression()), !dbg !10861
  %call = call zeroext i1 @san_junk_ptr_should_slow(), !dbg !10862
  br i1 %call, label %if.then, label %if.end, !dbg !10864

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !10865, !tbaa !2658
  %1 = load i64, ptr %usize.addr, align 8, !dbg !10867, !tbaa !2663
  call void @llvm.memset.p0.i64(ptr align 1 %0, i8 91, i64 %1, i1 false), !dbg !10868
  br label %return, !dbg !10869

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %first) #18, !dbg !10870
  tail call void @llvm.dbg.declare(metadata ptr %first, metadata !10857, metadata !DIExpression()), !dbg !10871
  call void @llvm.lifetime.start.p0(i64 8, ptr %mid) #18, !dbg !10870
  tail call void @llvm.dbg.declare(metadata ptr %mid, metadata !10858, metadata !DIExpression()), !dbg !10872
  call void @llvm.lifetime.start.p0(i64 8, ptr %last) #18, !dbg !10870
  tail call void @llvm.dbg.declare(metadata ptr %last, metadata !10859, metadata !DIExpression()), !dbg !10873
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !10874, !tbaa !2658
  %3 = load i64, ptr %usize.addr, align 8, !dbg !10875, !tbaa !2663
  call void @san_junk_ptr_locations(ptr noundef %2, i64 noundef %3, ptr noundef %first, ptr noundef %mid, ptr noundef %last), !dbg !10876
  %4 = load ptr, ptr %first, align 8, !dbg !10877, !tbaa !2658
  store i64 6582955728264977243, ptr %4, align 8, !dbg !10878, !tbaa !2663
  %5 = load ptr, ptr %mid, align 8, !dbg !10879, !tbaa !2658
  store i64 6582955728264977243, ptr %5, align 8, !dbg !10880, !tbaa !2663
  %6 = load ptr, ptr %last, align 8, !dbg !10881, !tbaa !2658
  store i64 6582955728264977243, ptr %6, align 8, !dbg !10882, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 8, ptr %last) #18, !dbg !10883
  call void @llvm.lifetime.end.p0(i64 8, ptr %mid) #18, !dbg !10883
  call void @llvm.lifetime.end.p0(i64 8, ptr %first) #18, !dbg !10883
  br label %return, !dbg !10883

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10883
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @cache_bin_stash(ptr noundef %bin, ptr noundef %ptr) #3 !dbg !10884 {
entry:
  %retval = alloca i1, align 1
  %bin.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %low_bits_head = alloca i16, align 2
  %diff = alloca i16, align 2
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !10888, metadata !DIExpression()), !dbg !10892
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10889, metadata !DIExpression()), !dbg !10893
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !10894, !tbaa !2658
  %call = call zeroext i1 @cache_bin_full(ptr noundef %0), !dbg !10896
  br i1 %call, label %if.then, label %if.end, !dbg !10897

if.then:                                          ; preds = %entry
  store i1 false, ptr %retval, align 1, !dbg !10898
  br label %return, !dbg !10898

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 2, ptr %low_bits_head) #18, !dbg !10900
  tail call void @llvm.dbg.declare(metadata ptr %low_bits_head, metadata !10890, metadata !DIExpression()), !dbg !10901
  %1 = load ptr, ptr %bin.addr, align 8, !dbg !10902, !tbaa !2658
  %stack_head = getelementptr inbounds %struct.cache_bin_s, ptr %1, i32 0, i32 0, !dbg !10903
  %2 = load ptr, ptr %stack_head, align 8, !dbg !10903, !tbaa !6546
  %3 = ptrtoint ptr %2 to i64, !dbg !10904
  %conv = trunc i64 %3 to i16, !dbg !10905
  store i16 %conv, ptr %low_bits_head, align 2, !dbg !10901, !tbaa !6532
  call void @llvm.lifetime.start.p0(i64 2, ptr %diff) #18, !dbg !10906
  tail call void @llvm.dbg.declare(metadata ptr %diff, metadata !10891, metadata !DIExpression()), !dbg !10907
  %4 = load ptr, ptr %bin.addr, align 8, !dbg !10908, !tbaa !2658
  %5 = load ptr, ptr %bin.addr, align 8, !dbg !10909, !tbaa !2658
  %low_bits_full = getelementptr inbounds %struct.cache_bin_s, ptr %5, i32 0, i32 3, !dbg !10910
  %6 = load i16, ptr %low_bits_full, align 2, !dbg !10910, !tbaa !10911
  %7 = load i16, ptr %low_bits_head, align 2, !dbg !10912, !tbaa !6532
  %call1 = call zeroext i16 @cache_bin_diff(ptr noundef %4, i16 noundef zeroext %6, i16 noundef zeroext %7, i1 noundef zeroext false), !dbg !10913
  store i16 %call1, ptr %diff, align 2, !dbg !10907, !tbaa !6532
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !10914, !tbaa !2658
  %9 = load ptr, ptr %bin.addr, align 8, !dbg !10915, !tbaa !2658
  %stack_head2 = getelementptr inbounds %struct.cache_bin_s, ptr %9, i32 0, i32 0, !dbg !10916
  %10 = load ptr, ptr %stack_head2, align 8, !dbg !10916, !tbaa !6546
  %11 = ptrtoint ptr %10 to i64, !dbg !10917
  %12 = load i16, ptr %diff, align 2, !dbg !10918, !tbaa !6532
  %conv3 = zext i16 %12 to i64, !dbg !10918
  %sub = sub i64 %11, %conv3, !dbg !10919
  %13 = inttoptr i64 %sub to ptr, !dbg !10920
  store ptr %8, ptr %13, align 8, !dbg !10921, !tbaa !2658
  br label %do.body, !dbg !10922

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !10923

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !10923

do.end:                                           ; preds = %do.cond
  %14 = load ptr, ptr %bin.addr, align 8, !dbg !10925, !tbaa !2658
  %low_bits_full4 = getelementptr inbounds %struct.cache_bin_s, ptr %14, i32 0, i32 3, !dbg !10926
  %15 = load i16, ptr %low_bits_full4, align 2, !dbg !10927, !tbaa !10911
  %conv5 = zext i16 %15 to i64, !dbg !10927
  %add = add i64 %conv5, 8, !dbg !10927
  %conv6 = trunc i64 %add to i16, !dbg !10927
  store i16 %conv6, ptr %low_bits_full4, align 2, !dbg !10927, !tbaa !10911
  %16 = load ptr, ptr %bin.addr, align 8, !dbg !10928, !tbaa !2658
  %17 = load ptr, ptr %bin.addr, align 8, !dbg !10929, !tbaa !2658
  %low_bits_full7 = getelementptr inbounds %struct.cache_bin_s, ptr %17, i32 0, i32 3, !dbg !10930
  %18 = load i16, ptr %low_bits_full7, align 2, !dbg !10930, !tbaa !10911
  %19 = load i16, ptr %low_bits_head, align 2, !dbg !10931, !tbaa !6532
  call void @cache_bin_assert_earlier(ptr noundef %16, i16 noundef zeroext %18, i16 noundef zeroext %19), !dbg !10932
  store i1 true, ptr %retval, align 1, !dbg !10933
  call void @llvm.lifetime.end.p0(i64 2, ptr %diff) #18, !dbg !10934
  call void @llvm.lifetime.end.p0(i64 2, ptr %low_bits_head) #18, !dbg !10934
  br label %return

return:                                           ; preds = %do.end, %if.then
  %20 = load i1, ptr %retval, align 1, !dbg !10934
  ret i1 %20, !dbg !10934
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @cache_bin_dalloc_easy(ptr noundef %bin, ptr noundef %ptr) #3 !dbg !10935 {
entry:
  %retval = alloca i1, align 1
  %bin.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !10937, metadata !DIExpression()), !dbg !10939
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10938, metadata !DIExpression()), !dbg !10940
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !10941, !tbaa !2658
  %call = call zeroext i1 @cache_bin_full(ptr noundef %0), !dbg !10941
  %lnot = xor i1 %call, true, !dbg !10941
  %lnot1 = xor i1 %lnot, true, !dbg !10941
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10941
  %conv = sext i32 %lnot.ext to i64, !dbg !10941
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !10941
  %tobool = icmp ne i64 %expval, 0, !dbg !10941
  br i1 %tobool, label %if.then, label %if.end, !dbg !10943

if.then:                                          ; preds = %entry
  store i1 false, ptr %retval, align 1, !dbg !10944
  br label %return, !dbg !10944

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %bin.addr, align 8, !dbg !10946, !tbaa !2658
  %stack_head = getelementptr inbounds %struct.cache_bin_s, ptr %1, i32 0, i32 0, !dbg !10947
  %2 = load ptr, ptr %stack_head, align 8, !dbg !10948, !tbaa !6546
  %incdec.ptr = getelementptr inbounds ptr, ptr %2, i32 -1, !dbg !10948
  store ptr %incdec.ptr, ptr %stack_head, align 8, !dbg !10948, !tbaa !6546
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !10949, !tbaa !2658
  %4 = load ptr, ptr %bin.addr, align 8, !dbg !10950, !tbaa !2658
  %stack_head2 = getelementptr inbounds %struct.cache_bin_s, ptr %4, i32 0, i32 0, !dbg !10951
  %5 = load ptr, ptr %stack_head2, align 8, !dbg !10951, !tbaa !6546
  store ptr %3, ptr %5, align 8, !dbg !10952, !tbaa !2658
  %6 = load ptr, ptr %bin.addr, align 8, !dbg !10953, !tbaa !2658
  %7 = load ptr, ptr %bin.addr, align 8, !dbg !10954, !tbaa !2658
  %low_bits_full = getelementptr inbounds %struct.cache_bin_s, ptr %7, i32 0, i32 3, !dbg !10955
  %8 = load i16, ptr %low_bits_full, align 2, !dbg !10955, !tbaa !10911
  %9 = load ptr, ptr %bin.addr, align 8, !dbg !10956, !tbaa !2658
  %stack_head3 = getelementptr inbounds %struct.cache_bin_s, ptr %9, i32 0, i32 0, !dbg !10957
  %10 = load ptr, ptr %stack_head3, align 8, !dbg !10957, !tbaa !6546
  %11 = ptrtoint ptr %10 to i64, !dbg !10958
  %conv4 = trunc i64 %11 to i16, !dbg !10959
  call void @cache_bin_assert_earlier(ptr noundef %6, i16 noundef zeroext %8, i16 noundef zeroext %conv4), !dbg !10960
  store i1 true, ptr %retval, align 1, !dbg !10961
  br label %return, !dbg !10961

return:                                           ; preds = %if.end, %if.then
  %12 = load i1, ptr %retval, align 1, !dbg !10962
  ret i1 %12, !dbg !10962
}

declare !dbg !10963 void @tcache_bin_flush_small(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @san_junk_ptr_should_slow() #4 !dbg !10966 {
entry:
  ret i1 false, !dbg !10967
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @san_junk_ptr_locations(ptr noundef %ptr, i64 noundef %usize, ptr noundef %first, ptr noundef %mid, ptr noundef %last) #4 !dbg !10968 {
entry:
  %ptr.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  %first.addr = alloca ptr, align 8
  %mid.addr = alloca ptr, align 8
  %last.addr = alloca ptr, align 8
  %ptr_sz = alloca i64, align 8
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !10972, metadata !DIExpression()), !dbg !10978
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !10973, metadata !DIExpression()), !dbg !10979
  store ptr %first, ptr %first.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %first.addr, metadata !10974, metadata !DIExpression()), !dbg !10980
  store ptr %mid, ptr %mid.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mid.addr, metadata !10975, metadata !DIExpression()), !dbg !10981
  store ptr %last, ptr %last.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %last.addr, metadata !10976, metadata !DIExpression()), !dbg !10982
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr_sz) #18, !dbg !10983
  tail call void @llvm.dbg.declare(metadata ptr %ptr_sz, metadata !10977, metadata !DIExpression()), !dbg !10984
  store i64 8, ptr %ptr_sz, align 8, !dbg !10984, !tbaa !2663
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !10985, !tbaa !2658
  %1 = load ptr, ptr %first.addr, align 8, !dbg !10986, !tbaa !2658
  store ptr %0, ptr %1, align 8, !dbg !10987, !tbaa !2658
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !10988, !tbaa !2658
  %3 = ptrtoint ptr %2 to i64, !dbg !10989
  %4 = load i64, ptr %usize.addr, align 8, !dbg !10990, !tbaa !2663
  %shr = lshr i64 %4, 1, !dbg !10991
  %5 = load i64, ptr %ptr_sz, align 8, !dbg !10992, !tbaa !2663
  %sub = sub i64 %5, 1, !dbg !10993
  %not = xor i64 %sub, -1, !dbg !10994
  %and = and i64 %shr, %not, !dbg !10995
  %add = add i64 %3, %and, !dbg !10996
  %6 = inttoptr i64 %add to ptr, !dbg !10997
  %7 = load ptr, ptr %mid.addr, align 8, !dbg !10998, !tbaa !2658
  store ptr %6, ptr %7, align 8, !dbg !10999, !tbaa !2658
  br label %do.body, !dbg !11000

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11001

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11001

do.end:                                           ; preds = %do.cond
  br label %do.body1, !dbg !11003

do.body1:                                         ; preds = %do.end
  br label %do.cond2, !dbg !11004

do.cond2:                                         ; preds = %do.body1
  br label %do.end3, !dbg !11004

do.end3:                                          ; preds = %do.cond2
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !11006, !tbaa !2658
  %9 = ptrtoint ptr %8 to i64, !dbg !11007
  %10 = load i64, ptr %usize.addr, align 8, !dbg !11008, !tbaa !2663
  %add4 = add i64 %9, %10, !dbg !11009
  %sub5 = sub i64 %add4, 8, !dbg !11010
  %11 = inttoptr i64 %sub5 to ptr, !dbg !11011
  %12 = load ptr, ptr %last.addr, align 8, !dbg !11012, !tbaa !2658
  store ptr %11, ptr %12, align 8, !dbg !11013, !tbaa !2658
  br label %do.body6, !dbg !11014

do.body6:                                         ; preds = %do.end3
  br label %do.cond7, !dbg !11015

do.cond7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !11015

do.end8:                                          ; preds = %do.cond7
  br label %do.body9, !dbg !11017

do.body9:                                         ; preds = %do.end8
  br label %do.cond10, !dbg !11018

do.cond10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !11018

do.end11:                                         ; preds = %do.cond10
  br label %do.body12, !dbg !11020

do.body12:                                        ; preds = %do.end11
  br label %do.cond13, !dbg !11021

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !11021

do.end14:                                         ; preds = %do.cond13
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr_sz) #18, !dbg !11023
  ret void, !dbg !11023
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @cache_bin_full(ptr noundef %bin) #3 !dbg !11024 {
entry:
  %bin.addr = alloca ptr, align 8
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !11030, !tbaa !2658
  %stack_head = getelementptr inbounds %struct.cache_bin_s, ptr %0, i32 0, i32 0, !dbg !11031
  %1 = load ptr, ptr %stack_head, align 8, !dbg !11031, !tbaa !6546
  %2 = ptrtoint ptr %1 to i64, !dbg !11032
  %conv = trunc i64 %2 to i16, !dbg !11033
  %conv1 = zext i16 %conv to i32, !dbg !11033
  %3 = load ptr, ptr %bin.addr, align 8, !dbg !11034, !tbaa !2658
  %low_bits_full = getelementptr inbounds %struct.cache_bin_s, ptr %3, i32 0, i32 3, !dbg !11035
  %4 = load i16, ptr %low_bits_full, align 2, !dbg !11035, !tbaa !10911
  %conv2 = zext i16 %4 to i32, !dbg !11034
  %cmp = icmp eq i32 %conv1, %conv2, !dbg !11036
  ret i1 %cmp, !dbg !11037
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @cache_bin_diff(ptr noundef %bin, i16 noundef zeroext %earlier, i16 noundef zeroext %later, i1 noundef zeroext %racy) #4 !dbg !11038 {
entry:
  %bin.addr = alloca ptr, align 8
  %earlier.addr = alloca i16, align 2
  %later.addr = alloca i16, align 2
  %racy.addr = alloca i8, align 1
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !11042, metadata !DIExpression()), !dbg !11046
  store i16 %earlier, ptr %earlier.addr, align 2, !tbaa !6532
  tail call void @llvm.dbg.declare(metadata ptr %earlier.addr, metadata !11043, metadata !DIExpression()), !dbg !11047
  store i16 %later, ptr %later.addr, align 2, !tbaa !6532
  tail call void @llvm.dbg.declare(metadata ptr %later.addr, metadata !11044, metadata !DIExpression()), !dbg !11048
  %frombool = zext i1 %racy to i8
  store i8 %frombool, ptr %racy.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %racy.addr, metadata !11045, metadata !DIExpression()), !dbg !11049
  %0 = load i8, ptr %racy.addr, align 1, !dbg !11050, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !11050
  br i1 %tobool, label %if.end, label %if.then, !dbg !11052

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %bin.addr, align 8, !dbg !11053, !tbaa !2658
  %2 = load i16, ptr %earlier.addr, align 2, !dbg !11055, !tbaa !6532
  %3 = load i16, ptr %later.addr, align 2, !dbg !11056, !tbaa !6532
  call void @cache_bin_assert_earlier(ptr noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3), !dbg !11057
  br label %if.end, !dbg !11058

if.end:                                           ; preds = %if.then, %entry
  %4 = load i16, ptr %later.addr, align 2, !dbg !11059, !tbaa !6532
  %conv = zext i16 %4 to i32, !dbg !11059
  %5 = load i16, ptr %earlier.addr, align 2, !dbg !11060, !tbaa !6532
  %conv1 = zext i16 %5 to i32, !dbg !11060
  %sub = sub nsw i32 %conv, %conv1, !dbg !11061
  %conv2 = trunc i32 %sub to i16, !dbg !11059
  ret i16 %conv2, !dbg !11062
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @cache_bin_assert_earlier(ptr noundef %bin, i16 noundef zeroext %earlier, i16 noundef zeroext %later) #4 !dbg !11063 {
entry:
  %bin.addr = alloca ptr, align 8
  %earlier.addr = alloca i16, align 2
  %later.addr = alloca i16, align 2
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !11067, metadata !DIExpression()), !dbg !11070
  store i16 %earlier, ptr %earlier.addr, align 2, !tbaa !6532
  tail call void @llvm.dbg.declare(metadata ptr %earlier.addr, metadata !11068, metadata !DIExpression()), !dbg !11071
  store i16 %later, ptr %later.addr, align 2, !tbaa !6532
  tail call void @llvm.dbg.declare(metadata ptr %later.addr, metadata !11069, metadata !DIExpression()), !dbg !11072
  %0 = load i16, ptr %earlier.addr, align 2, !dbg !11073, !tbaa !6532
  %conv = zext i16 %0 to i32, !dbg !11073
  %1 = load i16, ptr %later.addr, align 2, !dbg !11075, !tbaa !6532
  %conv1 = zext i16 %1 to i32, !dbg !11075
  %cmp = icmp sgt i32 %conv, %conv1, !dbg !11076
  br i1 %cmp, label %if.then, label %if.end, !dbg !11077

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11078

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !11080

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !11082

if.end:                                           ; preds = %do.end, %entry
  ret void, !dbg !11083
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @tcache_dalloc_large(ptr noundef %tsd, ptr noundef %tcache, ptr noundef %ptr, i32 noundef %binind, i1 noundef zeroext %slow_path) #3 !dbg !11084 {
entry:
  %tsd.addr = alloca ptr, align 8
  %tcache.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %binind.addr = alloca i32, align 4
  %slow_path.addr = alloca i8, align 1
  %bin = alloca ptr, align 8
  %remain = alloca i32, align 4
  %ret = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11086, metadata !DIExpression()), !dbg !11096
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !11087, metadata !DIExpression()), !dbg !11097
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !11088, metadata !DIExpression()), !dbg !11098
  store i32 %binind, ptr %binind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %binind.addr, metadata !11089, metadata !DIExpression()), !dbg !11099
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !11090, metadata !DIExpression()), !dbg !11100
  br label %do.body, !dbg !11101

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11102

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !11104

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !11105

do.end2:                                          ; preds = %do.body1
  call void @llvm.lifetime.start.p0(i64 8, ptr %bin) #18, !dbg !11107
  tail call void @llvm.dbg.declare(metadata ptr %bin, metadata !11091, metadata !DIExpression()), !dbg !11108
  %0 = load ptr, ptr %tcache.addr, align 8, !dbg !11109, !tbaa !2658
  %bins = getelementptr inbounds %struct.tcache_s, ptr %0, i32 0, i32 1, !dbg !11110
  %1 = load i32, ptr %binind.addr, align 4, !dbg !11111, !tbaa !2791
  %idxprom = zext i32 %1 to i64, !dbg !11109
  %arrayidx = getelementptr inbounds [73 x %struct.cache_bin_s], ptr %bins, i64 0, i64 %idxprom, !dbg !11109
  store ptr %arrayidx, ptr %bin, align 8, !dbg !11108, !tbaa !2658
  %2 = load ptr, ptr %bin, align 8, !dbg !11112, !tbaa !2658
  %3 = load ptr, ptr %ptr.addr, align 8, !dbg !11112, !tbaa !2658
  %call = call zeroext i1 @cache_bin_dalloc_easy(ptr noundef %2, ptr noundef %3), !dbg !11112
  %lnot = xor i1 %call, true, !dbg !11112
  %lnot3 = xor i1 %lnot, true, !dbg !11112
  %lnot4 = xor i1 %lnot3, true, !dbg !11112
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !11112
  %conv = sext i32 %lnot.ext to i64, !dbg !11112
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11112
  %tobool = icmp ne i64 %expval, 0, !dbg !11112
  br i1 %tobool, label %if.then, label %if.end, !dbg !11113

if.then:                                          ; preds = %do.end2
  call void @llvm.lifetime.start.p0(i64 4, ptr %remain) #18, !dbg !11114
  tail call void @llvm.dbg.declare(metadata ptr %remain, metadata !11092, metadata !DIExpression()), !dbg !11115
  %4 = load ptr, ptr @tcache_bin_info, align 8, !dbg !11116, !tbaa !2658
  %5 = load i32, ptr %binind.addr, align 4, !dbg !11117, !tbaa !2791
  %idxprom5 = zext i32 %5 to i64, !dbg !11116
  %arrayidx6 = getelementptr inbounds %struct.cache_bin_info_s, ptr %4, i64 %idxprom5, !dbg !11116
  %call7 = call zeroext i16 @cache_bin_info_ncached_max(ptr noundef %arrayidx6), !dbg !11118
  %conv8 = zext i16 %call7 to i32, !dbg !11118
  %6 = load i32, ptr @opt_lg_tcache_flush_large_div, align 4, !dbg !11119, !tbaa !2791
  %shr = ashr i32 %conv8, %6, !dbg !11120
  store i32 %shr, ptr %remain, align 4, !dbg !11115, !tbaa !2791
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !11121, !tbaa !2658
  %8 = load ptr, ptr %tcache.addr, align 8, !dbg !11122, !tbaa !2658
  %9 = load ptr, ptr %bin, align 8, !dbg !11123, !tbaa !2658
  %10 = load i32, ptr %binind.addr, align 4, !dbg !11124, !tbaa !2791
  %11 = load i32, ptr %remain, align 4, !dbg !11125, !tbaa !2791
  call void @tcache_bin_flush_large(ptr noundef %7, ptr noundef %8, ptr noundef %9, i32 noundef %10, i32 noundef %11), !dbg !11126
  call void @llvm.lifetime.start.p0(i64 1, ptr %ret) #18, !dbg !11127
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !11095, metadata !DIExpression()), !dbg !11128
  %12 = load ptr, ptr %bin, align 8, !dbg !11129, !tbaa !2658
  %13 = load ptr, ptr %ptr.addr, align 8, !dbg !11130, !tbaa !2658
  %call9 = call zeroext i1 @cache_bin_dalloc_easy(ptr noundef %12, ptr noundef %13), !dbg !11131
  %frombool10 = zext i1 %call9 to i8, !dbg !11128
  store i8 %frombool10, ptr %ret, align 1, !dbg !11128, !tbaa !2695
  br label %do.body11, !dbg !11132

do.body11:                                        ; preds = %if.then
  br label %do.cond, !dbg !11133

do.cond:                                          ; preds = %do.body11
  br label %do.end12, !dbg !11133

do.end12:                                         ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 1, ptr %ret) #18, !dbg !11135
  call void @llvm.lifetime.end.p0(i64 4, ptr %remain) #18, !dbg !11135
  br label %if.end, !dbg !11136

if.end:                                           ; preds = %do.end12, %do.end2
  call void @llvm.lifetime.end.p0(i64 8, ptr %bin) #18, !dbg !11137
  ret void, !dbg !11137
}

declare !dbg !11138 void @tcache_bin_flush_large(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @witness_assert_not_owner(ptr noundef %witness_tsdn, ptr noundef %witness) #4 !dbg !11139 {
entry:
  %witness_tsdn.addr = alloca ptr, align 8
  %witness.addr = alloca ptr, align 8
  %witness_tsd = alloca ptr, align 8
  %witnesses = alloca ptr, align 8
  %w = alloca ptr, align 8
  store ptr %witness_tsdn, ptr %witness_tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsdn.addr, metadata !11143, metadata !DIExpression()), !dbg !11149
  store ptr %witness, ptr %witness.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness.addr, metadata !11144, metadata !DIExpression()), !dbg !11150
  call void @llvm.lifetime.start.p0(i64 8, ptr %witness_tsd) #18, !dbg !11151
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsd, metadata !11145, metadata !DIExpression()), !dbg !11152
  call void @llvm.lifetime.start.p0(i64 8, ptr %witnesses) #18, !dbg !11153
  tail call void @llvm.dbg.declare(metadata ptr %witnesses, metadata !11146, metadata !DIExpression()), !dbg !11154
  call void @llvm.lifetime.start.p0(i64 8, ptr %w) #18, !dbg !11155
  tail call void @llvm.dbg.declare(metadata ptr %w, metadata !11148, metadata !DIExpression()), !dbg !11156
  call void @llvm.lifetime.end.p0(i64 8, ptr %w) #18, !dbg !11157
  call void @llvm.lifetime.end.p0(i64 8, ptr %witnesses) #18, !dbg !11157
  call void @llvm.lifetime.end.p0(i64 8, ptr %witness_tsd) #18, !dbg !11157
  ret void, !dbg !11157
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @malloc_mutex_trylock_final(ptr noundef %mutex) #4 !dbg !11158 {
entry:
  %mutex.addr = alloca ptr, align 8
  store ptr %mutex, ptr %mutex.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mutex.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  %0 = load ptr, ptr %mutex.addr, align 8, !dbg !11164, !tbaa !2658
  %1 = getelementptr inbounds %struct.malloc_mutex_s, ptr %0, i32 0, i32 0, !dbg !11164
  %lock = getelementptr inbounds %struct.anon, ptr %1, i32 0, i32 1, !dbg !11164
  %call = call i32 @pthread_mutex_trylock(ptr noundef %lock) #18, !dbg !11164
  %cmp = icmp ne i32 %call, 0, !dbg !11164
  ret i1 %cmp, !dbg !11165
}

declare !dbg !11166 void @malloc_mutex_lock_slow(ptr noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @mutex_owner_stats_update(ptr noundef %tsdn, ptr noundef %mutex) #4 !dbg !11169 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %mutex.addr = alloca ptr, align 8
  %data = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !11171, metadata !DIExpression()), !dbg !11177
  store ptr %mutex, ptr %mutex.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mutex.addr, metadata !11172, metadata !DIExpression()), !dbg !11178
  call void @llvm.lifetime.start.p0(i64 8, ptr %data) #18, !dbg !11179
  tail call void @llvm.dbg.declare(metadata ptr %data, metadata !11173, metadata !DIExpression()), !dbg !11180
  %0 = load ptr, ptr %mutex.addr, align 8, !dbg !11181, !tbaa !2658
  %1 = getelementptr inbounds %struct.malloc_mutex_s, ptr %0, i32 0, i32 0, !dbg !11182
  %prof_data = getelementptr inbounds %struct.anon, ptr %1, i32 0, i32 0, !dbg !11182
  store ptr %prof_data, ptr %data, align 8, !dbg !11180, !tbaa !2658
  %2 = load ptr, ptr %data, align 8, !dbg !11183, !tbaa !2658
  %n_lock_ops = getelementptr inbounds %struct.mutex_prof_data_t, ptr %2, i32 0, i32 8, !dbg !11184
  %3 = load i64, ptr %n_lock_ops, align 8, !dbg !11185, !tbaa !11186
  %inc = add i64 %3, 1, !dbg !11185
  store i64 %inc, ptr %n_lock_ops, align 8, !dbg !11185, !tbaa !11186
  %4 = load ptr, ptr %data, align 8, !dbg !11188, !tbaa !2658
  %prev_owner = getelementptr inbounds %struct.mutex_prof_data_t, ptr %4, i32 0, i32 7, !dbg !11190
  %5 = load ptr, ptr %prev_owner, align 8, !dbg !11190, !tbaa !11191
  %6 = load ptr, ptr %tsdn.addr, align 8, !dbg !11192, !tbaa !2658
  %cmp = icmp ne ptr %5, %6, !dbg !11193
  br i1 %cmp, label %if.then, label %if.end, !dbg !11194

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %tsdn.addr, align 8, !dbg !11195, !tbaa !2658
  %8 = load ptr, ptr %data, align 8, !dbg !11197, !tbaa !2658
  %prev_owner1 = getelementptr inbounds %struct.mutex_prof_data_t, ptr %8, i32 0, i32 7, !dbg !11198
  store ptr %7, ptr %prev_owner1, align 8, !dbg !11199, !tbaa !11191
  %9 = load ptr, ptr %data, align 8, !dbg !11200, !tbaa !2658
  %n_owner_switches = getelementptr inbounds %struct.mutex_prof_data_t, ptr %9, i32 0, i32 6, !dbg !11201
  %10 = load i64, ptr %n_owner_switches, align 8, !dbg !11202, !tbaa !11203
  %inc2 = add i64 %10, 1, !dbg !11202
  store i64 %inc2, ptr %n_owner_switches, align 8, !dbg !11202, !tbaa !11203
  br label %if.end, !dbg !11204

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %data) #18, !dbg !11205
  ret void, !dbg !11206
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @witness_lock(ptr noundef %witness_tsdn, ptr noundef %witness) #4 !dbg !11207 {
entry:
  %witness_tsdn.addr = alloca ptr, align 8
  %witness.addr = alloca ptr, align 8
  %witness_tsd = alloca ptr, align 8
  %witnesses = alloca ptr, align 8
  %w = alloca ptr, align 8
  store ptr %witness_tsdn, ptr %witness_tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsdn.addr, metadata !11211, metadata !DIExpression()), !dbg !11216
  store ptr %witness, ptr %witness.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness.addr, metadata !11212, metadata !DIExpression()), !dbg !11217
  call void @llvm.lifetime.start.p0(i64 8, ptr %witness_tsd) #18, !dbg !11218
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsd, metadata !11213, metadata !DIExpression()), !dbg !11219
  call void @llvm.lifetime.start.p0(i64 8, ptr %witnesses) #18, !dbg !11220
  tail call void @llvm.dbg.declare(metadata ptr %witnesses, metadata !11214, metadata !DIExpression()), !dbg !11221
  call void @llvm.lifetime.start.p0(i64 8, ptr %w) #18, !dbg !11222
  tail call void @llvm.dbg.declare(metadata ptr %w, metadata !11215, metadata !DIExpression()), !dbg !11223
  call void @llvm.lifetime.end.p0(i64 8, ptr %w) #18, !dbg !11224
  call void @llvm.lifetime.end.p0(i64 8, ptr %witnesses) #18, !dbg !11224
  call void @llvm.lifetime.end.p0(i64 8, ptr %witness_tsd) #18, !dbg !11224
  ret void, !dbg !11224
}

; Function Attrs: nounwind
declare !dbg !11225 i32 @pthread_mutex_trylock(ptr noundef) #13

; Function Attrs: nounwind uwtable
define internal void @narenas_total_inc() #0 !dbg !11229 {
entry:
  %call = call i32 @atomic_fetch_add_u(ptr noundef @narenas_total, i32 noundef 1, i32 noundef 2), !dbg !11230
  ret void, !dbg !11231
}

declare !dbg !11232 ptr @arena_new(ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_fetch_add_u(ptr noundef %a, i32 noundef %val, i32 noundef %mo) #3 !dbg !11233 {
entry:
  %a.addr = alloca ptr, align 8
  %val.addr = alloca i32, align 4
  %mo.addr = alloca i32, align 4
  %.atomictmp = alloca i32, align 4
  %atomic-temp = alloca i32, align 4
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !11238, metadata !DIExpression()), !dbg !11241
  store i32 %val, ptr %val.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !11239, metadata !DIExpression()), !dbg !11241
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !11240, metadata !DIExpression()), !dbg !11241
  %0 = load ptr, ptr %a.addr, align 8, !dbg !11241, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_u_t, ptr %0, i32 0, i32 0, !dbg !11241
  %1 = load i32, ptr %mo.addr, align 4, !dbg !11241, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !11241
  %2 = load i32, ptr %val.addr, align 4, !dbg !11241, !tbaa !2791
  store i32 %2, ptr %.atomictmp, align 4, !dbg !11241, !tbaa !2791
  switch i32 %call, label %monotonic [
    i32 1, label %acquire
    i32 2, label %acquire
    i32 3, label %release
    i32 4, label %acqrel
    i32 5, label %seqcst
  ], !dbg !11241

monotonic:                                        ; preds = %entry
  %3 = load i32, ptr %.atomictmp, align 4, !dbg !11241
  %4 = atomicrmw add ptr %repr, i32 %3 monotonic, align 4, !dbg !11241
  store i32 %4, ptr %atomic-temp, align 4, !dbg !11241
  br label %atomic.continue, !dbg !11241

acquire:                                          ; preds = %entry, %entry
  %5 = load i32, ptr %.atomictmp, align 4, !dbg !11241
  %6 = atomicrmw add ptr %repr, i32 %5 acquire, align 4, !dbg !11241
  store i32 %6, ptr %atomic-temp, align 4, !dbg !11241
  br label %atomic.continue, !dbg !11241

release:                                          ; preds = %entry
  %7 = load i32, ptr %.atomictmp, align 4, !dbg !11241
  %8 = atomicrmw add ptr %repr, i32 %7 release, align 4, !dbg !11241
  store i32 %8, ptr %atomic-temp, align 4, !dbg !11241
  br label %atomic.continue, !dbg !11241

acqrel:                                           ; preds = %entry
  %9 = load i32, ptr %.atomictmp, align 4, !dbg !11241
  %10 = atomicrmw add ptr %repr, i32 %9 acq_rel, align 4, !dbg !11241
  store i32 %10, ptr %atomic-temp, align 4, !dbg !11241
  br label %atomic.continue, !dbg !11241

seqcst:                                           ; preds = %entry
  %11 = load i32, ptr %.atomictmp, align 4, !dbg !11241
  %12 = atomicrmw add ptr %repr, i32 %11 seq_cst, align 4, !dbg !11241
  store i32 %12, ptr %atomic-temp, align 4, !dbg !11241
  br label %atomic.continue, !dbg !11241

atomic.continue:                                  ; preds = %seqcst, %acqrel, %release, %acquire, %monotonic
  %13 = load i32, ptr %atomic-temp, align 4, !dbg !11241, !tbaa !2791
  ret i32 %13, !dbg !11241
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @witness_unlock(ptr noundef %witness_tsdn, ptr noundef %witness) #4 !dbg !11242 {
entry:
  %witness_tsdn.addr = alloca ptr, align 8
  %witness.addr = alloca ptr, align 8
  %witness_tsd = alloca ptr, align 8
  %witnesses = alloca ptr, align 8
  store ptr %witness_tsdn, ptr %witness_tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsdn.addr, metadata !11244, metadata !DIExpression()), !dbg !11248
  store ptr %witness, ptr %witness.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness.addr, metadata !11245, metadata !DIExpression()), !dbg !11249
  call void @llvm.lifetime.start.p0(i64 8, ptr %witness_tsd) #18, !dbg !11250
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsd, metadata !11246, metadata !DIExpression()), !dbg !11251
  call void @llvm.lifetime.start.p0(i64 8, ptr %witnesses) #18, !dbg !11252
  tail call void @llvm.dbg.declare(metadata ptr %witnesses, metadata !11247, metadata !DIExpression()), !dbg !11253
  call void @llvm.lifetime.end.p0(i64 8, ptr %witnesses) #18, !dbg !11254
  call void @llvm.lifetime.end.p0(i64 8, ptr %witness_tsd) #18, !dbg !11254
  ret void, !dbg !11254
}

; Function Attrs: nounwind
declare !dbg !11255 i32 @pthread_mutex_unlock(ptr noundef) #13

declare !dbg !11256 zeroext i1 @arena_is_huge(i32 noundef) #5

declare !dbg !11259 zeroext i1 @background_thread_create(ptr noundef, i32 noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_arenap_get(ptr noundef %tsd) #3 !dbg !11262 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11266, metadata !DIExpression()), !dbg !11268
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !11268
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !11267, metadata !DIExpression()), !dbg !11268
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11268, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !11268
  store i8 %call, ptr %state, align 1, !dbg !11268, !tbaa !2810
  br label %do.body, !dbg !11268

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11269

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11269

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11268, !tbaa !2658
  %call1 = call ptr @tsd_arenap_get_unsafe(ptr noundef %1), !dbg !11268
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !11268
  ret ptr %call1, !dbg !11268
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @tsd_state_get(ptr noundef %tsd) #3 !dbg !11271 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11275, metadata !DIExpression()), !dbg !11276
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11277, !tbaa !2658
  %state = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 29, !dbg !11278
  %1 = load i8, ptr %state, align 8, !dbg !11279, !tbaa !2810
  ret i8 %1, !dbg !11280
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_arenap_get_unsafe(ptr noundef %tsd) #3 !dbg !11281 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11283, metadata !DIExpression()), !dbg !11284
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11284, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_arena = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 19, !dbg !11284
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_arena, !dbg !11284
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @malloc_getcpu() #3 !dbg !11285 {
entry:
  br label %do.body, !dbg !11288

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11289

do.end:                                           ; preds = %do.body
  %call = call i32 @sched_getcpu() #18, !dbg !11291
  ret i32 %call, !dbg !11292
}

; Function Attrs: nounwind
declare !dbg !11293 i32 @sched_getcpu() #13

; Function Attrs: alwaysinline nounwind uwtable
define internal void @tsd_iarena_set(ptr noundef %tsd, ptr noundef %val) #3 !dbg !11295 {
entry:
  %tsd.addr = alloca ptr, align 8
  %val.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11297, metadata !DIExpression()), !dbg !11299
  store ptr %val, ptr %val.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !11298, metadata !DIExpression()), !dbg !11299
  br label %do.body, !dbg !11299

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11300

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %val.addr, align 8, !dbg !11299, !tbaa !2658
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11299, !tbaa !2658
  %call = call ptr @tsd_iarenap_get(ptr noundef %1), !dbg !11299
  store ptr %0, ptr %call, align 8, !dbg !11299, !tbaa !2658
  ret void, !dbg !11299
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_binshardsp_get(ptr noundef %tsd) #3 !dbg !11302 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11306, metadata !DIExpression()), !dbg !11308
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !11308
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !11307, metadata !DIExpression()), !dbg !11308
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11308, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !11308
  store i8 %call, ptr %state, align 1, !dbg !11308, !tbaa !2810
  br label %do.body, !dbg !11308

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11309

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11309

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11308, !tbaa !2658
  %call1 = call ptr @tsd_binshardsp_get_unsafe(ptr noundef %1), !dbg !11308
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !11308
  ret ptr %call1, !dbg !11308
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_iarenap_get(ptr noundef %tsd) #3 !dbg !11311 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11313, metadata !DIExpression()), !dbg !11315
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !11315
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !11314, metadata !DIExpression()), !dbg !11315
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11315, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !11315
  store i8 %call, ptr %state, align 1, !dbg !11315, !tbaa !2810
  br label %do.body, !dbg !11315

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11316

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11316

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11315, !tbaa !2658
  %call1 = call ptr @tsd_iarenap_get_unsafe(ptr noundef %1), !dbg !11315
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !11315
  ret ptr %call1, !dbg !11315
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_iarenap_get_unsafe(ptr noundef %tsd) #3 !dbg !11318 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11320, metadata !DIExpression()), !dbg !11321
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11321, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_iarena = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 18, !dbg !11321
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_iarena, !dbg !11321
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_binshardsp_get_unsafe(ptr noundef %tsd) #3 !dbg !11322 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11324, metadata !DIExpression()), !dbg !11325
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11325, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_binshards = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 22, !dbg !11325
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_binshards, !dbg !11325
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @tsd_get_allocates() #3 !dbg !11326 {
entry:
  ret i1 false, !dbg !11328
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @imalloc_init_check(ptr noundef %sopts, ptr noundef %dopts) #3 !dbg !11329 {
entry:
  %retval = alloca i1, align 1
  %sopts.addr = alloca ptr, align 8
  %dopts.addr = alloca ptr, align 8
  store ptr %sopts, ptr %sopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %sopts.addr, metadata !11333, metadata !DIExpression()), !dbg !11335
  store ptr %dopts, ptr %dopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %dopts.addr, metadata !11334, metadata !DIExpression()), !dbg !11336
  %call = call zeroext i1 @malloc_initialized(), !dbg !11337
  %lnot = xor i1 %call, true, !dbg !11337
  %lnot1 = xor i1 %lnot, true, !dbg !11337
  %lnot2 = xor i1 %lnot1, true, !dbg !11337
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11337
  %conv = sext i32 %lnot.ext to i64, !dbg !11337
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11337
  %tobool = icmp ne i64 %expval, 0, !dbg !11337
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11339

land.lhs.true:                                    ; preds = %entry
  %call3 = call zeroext i1 @malloc_init(), !dbg !11340
  %lnot4 = xor i1 %call3, true, !dbg !11340
  %lnot6 = xor i1 %lnot4, true, !dbg !11340
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !11340
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !11340
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0), !dbg !11340
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !11340
  br i1 %tobool10, label %if.then, label %if.end, !dbg !11341

if.then:                                          ; preds = %land.lhs.true
  call void @set_errno(i32 noundef 12), !dbg !11342
  %0 = load ptr, ptr %dopts.addr, align 8, !dbg !11344, !tbaa !2658
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %0, i32 0, i32 0, !dbg !11345
  %1 = load ptr, ptr %result, align 8, !dbg !11345, !tbaa !3694
  store ptr null, ptr %1, align 8, !dbg !11346, !tbaa !2658
  store i1 false, ptr %retval, align 1, !dbg !11347
  br label %return, !dbg !11347

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 true, ptr %retval, align 1, !dbg !11348
  br label %return, !dbg !11348

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, ptr %retval, align 1, !dbg !11349
  ret i1 %2, !dbg !11349
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @imalloc_body(ptr noundef %sopts, ptr noundef %dopts, ptr noundef %tsd) #3 !dbg !11350 {
entry:
  %retval = alloca i32, align 4
  %sopts.addr = alloca ptr, align 8
  %dopts.addr = alloca ptr, align 8
  %tsd.addr = alloca ptr, align 8
  %allocation = alloca ptr, align 8
  %size = alloca i64, align 8
  %ind = alloca i32, align 4
  %usize = alloca i64, align 8
  %reentrancy_level = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %sopts, ptr %sopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %sopts.addr, metadata !11354, metadata !DIExpression()), !dbg !11364
  store ptr %dopts, ptr %dopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %dopts.addr, metadata !11355, metadata !DIExpression()), !dbg !11365
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11356, metadata !DIExpression()), !dbg !11366
  call void @llvm.lifetime.start.p0(i64 8, ptr %allocation) #18, !dbg !11367
  tail call void @llvm.dbg.declare(metadata ptr %allocation, metadata !11357, metadata !DIExpression()), !dbg !11368
  store ptr null, ptr %allocation, align 8, !dbg !11368, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #18, !dbg !11369
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !11358, metadata !DIExpression()), !dbg !11370
  store i64 0, ptr %size, align 8, !dbg !11370, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 4, ptr %ind) #18, !dbg !11371
  tail call void @llvm.dbg.declare(metadata ptr %ind, metadata !11359, metadata !DIExpression()), !dbg !11372
  store i32 0, ptr %ind, align 4, !dbg !11372, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !11373
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !11360, metadata !DIExpression()), !dbg !11374
  call void @llvm.lifetime.start.p0(i64 1, ptr %reentrancy_level) #18, !dbg !11375
  tail call void @llvm.dbg.declare(metadata ptr %reentrancy_level, metadata !11361, metadata !DIExpression()), !dbg !11376
  %0 = load ptr, ptr %sopts.addr, align 8, !dbg !11377, !tbaa !2658
  %may_overflow = getelementptr inbounds %struct.static_opts_s, ptr %0, i32 0, i32 0, !dbg !11377
  %1 = load i8, ptr %may_overflow, align 8, !dbg !11377, !tbaa !3734, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !11377
  %2 = load ptr, ptr %dopts.addr, align 8, !dbg !11377, !tbaa !2658
  %call = call zeroext i1 @compute_size_with_overflow(i1 noundef zeroext %tobool, ptr noundef %2, ptr noundef %size), !dbg !11377
  %lnot = xor i1 %call, true, !dbg !11377
  %lnot1 = xor i1 %lnot, true, !dbg !11377
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11377
  %conv = sext i32 %lnot.ext to i64, !dbg !11377
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11377
  %tobool2 = icmp ne i64 %expval, 0, !dbg !11377
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11379

if.then:                                          ; preds = %entry
  br label %label_oom, !dbg !11380

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %dopts.addr, align 8, !dbg !11382, !tbaa !2658
  %alignment = getelementptr inbounds %struct.dynamic_opts_s, ptr %3, i32 0, i32 4, !dbg !11382
  %4 = load i64, ptr %alignment, align 8, !dbg !11382, !tbaa !3790
  %5 = load ptr, ptr %sopts.addr, align 8, !dbg !11382, !tbaa !2658
  %min_alignment = getelementptr inbounds %struct.static_opts_s, ptr %5, i32 0, i32 5, !dbg !11382
  %6 = load i64, ptr %min_alignment, align 8, !dbg !11382, !tbaa !3752
  %cmp = icmp ult i64 %4, %6, !dbg !11382
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11382

lor.rhs:                                          ; preds = %if.end
  %7 = load ptr, ptr %dopts.addr, align 8, !dbg !11382, !tbaa !2658
  %alignment4 = getelementptr inbounds %struct.dynamic_opts_s, ptr %7, i32 0, i32 4, !dbg !11382
  %8 = load i64, ptr %alignment4, align 8, !dbg !11382, !tbaa !3790
  %9 = load ptr, ptr %dopts.addr, align 8, !dbg !11382, !tbaa !2658
  %alignment5 = getelementptr inbounds %struct.dynamic_opts_s, ptr %9, i32 0, i32 4, !dbg !11382
  %10 = load i64, ptr %alignment5, align 8, !dbg !11382, !tbaa !3790
  %sub = sub i64 %10, 1, !dbg !11382
  %and = and i64 %8, %sub, !dbg !11382
  %cmp6 = icmp ne i64 %and, 0, !dbg !11382
  br label %lor.end, !dbg !11382

lor.end:                                          ; preds = %lor.rhs, %if.end
  %11 = phi i1 [ true, %if.end ], [ %cmp6, %lor.rhs ]
  %lnot8 = xor i1 %11, true, !dbg !11382
  %lnot10 = xor i1 %lnot8, true, !dbg !11382
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !11382
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !11382
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !11382
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !11382
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !11384

if.then15:                                        ; preds = %lor.end
  br label %label_invalid_alignment, !dbg !11385

if.end16:                                         ; preds = %lor.end
  %12 = load ptr, ptr %dopts.addr, align 8, !dbg !11387, !tbaa !2658
  %zero = getelementptr inbounds %struct.dynamic_opts_s, ptr %12, i32 0, i32 5, !dbg !11388
  %13 = load i8, ptr %zero, align 8, !dbg !11388, !tbaa !3794, !range !2708, !noundef !2709
  %tobool17 = trunc i8 %13 to i1, !dbg !11388
  %14 = load ptr, ptr %sopts.addr, align 8, !dbg !11389, !tbaa !2658
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %14, i32 0, i32 8, !dbg !11390
  %15 = load i8, ptr %slow, align 8, !dbg !11390, !tbaa !3705, !range !2708, !noundef !2709
  %tobool18 = trunc i8 %15 to i1, !dbg !11390
  %call19 = call zeroext i1 @zero_get(i1 noundef zeroext %tobool17, i1 noundef zeroext %tobool18), !dbg !11391
  %16 = load ptr, ptr %dopts.addr, align 8, !dbg !11392, !tbaa !2658
  %zero20 = getelementptr inbounds %struct.dynamic_opts_s, ptr %16, i32 0, i32 5, !dbg !11393
  %frombool = zext i1 %call19 to i8, !dbg !11394
  store i8 %frombool, ptr %zero20, align 8, !dbg !11394, !tbaa !3794
  %17 = load i64, ptr %size, align 8, !dbg !11395, !tbaa !2663
  %18 = load ptr, ptr %dopts.addr, align 8, !dbg !11397, !tbaa !2658
  %alignment21 = getelementptr inbounds %struct.dynamic_opts_s, ptr %18, i32 0, i32 4, !dbg !11398
  %19 = load i64, ptr %alignment21, align 8, !dbg !11398, !tbaa !3790
  %20 = load ptr, ptr %sopts.addr, align 8, !dbg !11399, !tbaa !2658
  %bump_empty_aligned_alloc = getelementptr inbounds %struct.static_opts_s, ptr %20, i32 0, i32 1, !dbg !11400
  %21 = load i8, ptr %bump_empty_aligned_alloc, align 1, !dbg !11400, !tbaa !3738, !range !2708, !noundef !2709
  %tobool22 = trunc i8 %21 to i1, !dbg !11400
  %call23 = call zeroext i1 @aligned_usize_get(i64 noundef %17, i64 noundef %19, ptr noundef %usize, ptr noundef %ind, i1 noundef zeroext %tobool22), !dbg !11401
  br i1 %call23, label %if.then24, label %if.end25, !dbg !11402

if.then24:                                        ; preds = %if.end16
  br label %label_oom, !dbg !11403

if.end25:                                         ; preds = %if.end16
  %22 = load i64, ptr %usize, align 8, !dbg !11405, !tbaa !2663
  %23 = load ptr, ptr %dopts.addr, align 8, !dbg !11406, !tbaa !2658
  %usize26 = getelementptr inbounds %struct.dynamic_opts_s, ptr %23, i32 0, i32 1, !dbg !11407
  store i64 %22, ptr %usize26, align 8, !dbg !11408, !tbaa !3780
  %24 = load ptr, ptr %sopts.addr, align 8, !dbg !11409, !tbaa !2658
  %assert_nonempty_alloc = getelementptr inbounds %struct.static_opts_s, ptr %24, i32 0, i32 2, !dbg !11411
  %25 = load i8, ptr %assert_nonempty_alloc, align 2, !dbg !11411, !tbaa !3742, !range !2708, !noundef !2709
  %tobool27 = trunc i8 %25 to i1, !dbg !11411
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !11412

if.then28:                                        ; preds = %if.end25
  br label %do.body, !dbg !11413

do.body:                                          ; preds = %if.then28
  br label %do.cond, !dbg !11415

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11415

do.end:                                           ; preds = %do.cond
  br label %if.end29, !dbg !11417

if.end29:                                         ; preds = %do.end, %if.end25
  %26 = load ptr, ptr %tsd.addr, align 8, !dbg !11418, !tbaa !2658
  %call30 = call ptr @tsd_tsdn(ptr noundef %26), !dbg !11419
  call void @check_entry_exit_locking(ptr noundef %call30), !dbg !11420
  %27 = load ptr, ptr %tsd.addr, align 8, !dbg !11421, !tbaa !2658
  %call31 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %27), !dbg !11422
  store i8 %call31, ptr %reentrancy_level, align 1, !dbg !11423, !tbaa !2810
  %28 = load ptr, ptr %sopts.addr, align 8, !dbg !11424, !tbaa !2658
  %slow32 = getelementptr inbounds %struct.static_opts_s, ptr %28, i32 0, i32 8, !dbg !11426
  %29 = load i8, ptr %slow32, align 8, !dbg !11426, !tbaa !3705, !range !2708, !noundef !2709
  %tobool33 = trunc i8 %29 to i1, !dbg !11426
  br i1 %tobool33, label %land.lhs.true, label %if.end52, !dbg !11427

land.lhs.true:                                    ; preds = %if.end29
  %30 = load i8, ptr %reentrancy_level, align 1, !dbg !11428, !tbaa !2810
  %conv35 = sext i8 %30 to i32, !dbg !11428
  %cmp36 = icmp sgt i32 %conv35, 0, !dbg !11428
  %lnot38 = xor i1 %cmp36, true, !dbg !11428
  %lnot40 = xor i1 %lnot38, true, !dbg !11428
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !11428
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !11428
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 0), !dbg !11428
  %tobool44 = icmp ne i64 %expval43, 0, !dbg !11428
  br i1 %tobool44, label %if.then45, label %if.end52, !dbg !11429

if.then45:                                        ; preds = %land.lhs.true
  br label %do.body46, !dbg !11430

do.body46:                                        ; preds = %if.then45
  br label %do.cond47, !dbg !11432

do.cond47:                                        ; preds = %do.body46
  br label %do.end48, !dbg !11432

do.end48:                                         ; preds = %do.cond47
  br label %do.body49, !dbg !11434

do.body49:                                        ; preds = %do.end48
  br label %do.cond50, !dbg !11435

do.cond50:                                        ; preds = %do.body49
  br label %do.end51, !dbg !11435

do.end51:                                         ; preds = %do.cond50
  %31 = load ptr, ptr %dopts.addr, align 8, !dbg !11437, !tbaa !2658
  %tcache_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %31, i32 0, i32 6, !dbg !11438
  store i32 -1, ptr %tcache_ind, align 4, !dbg !11439, !tbaa !3798
  %32 = load ptr, ptr %dopts.addr, align 8, !dbg !11440, !tbaa !2658
  %arena_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %32, i32 0, i32 7, !dbg !11441
  store i32 0, ptr %arena_ind, align 8, !dbg !11442, !tbaa !3802
  br label %if.end52, !dbg !11443

if.end52:                                         ; preds = %do.end51, %land.lhs.true, %if.end29
  br label %do.body53, !dbg !11444

do.body53:                                        ; preds = %if.end52
  br label %do.cond54, !dbg !11447

do.cond54:                                        ; preds = %do.body53
  br label %do.end55, !dbg !11447

do.end55:                                         ; preds = %do.cond54
  %33 = load ptr, ptr %sopts.addr, align 8, !dbg !11449, !tbaa !2658
  %34 = load ptr, ptr %dopts.addr, align 8, !dbg !11450, !tbaa !2658
  %35 = load ptr, ptr %tsd.addr, align 8, !dbg !11451, !tbaa !2658
  %36 = load i64, ptr %size, align 8, !dbg !11452, !tbaa !2663
  %37 = load i64, ptr %usize, align 8, !dbg !11453, !tbaa !2663
  %38 = load i32, ptr %ind, align 4, !dbg !11454, !tbaa !2791
  %call56 = call ptr @imalloc_no_sample(ptr noundef %33, ptr noundef %34, ptr noundef %35, i64 noundef %36, i64 noundef %37, i32 noundef %38), !dbg !11455
  store ptr %call56, ptr %allocation, align 8, !dbg !11456, !tbaa !2658
  %39 = load ptr, ptr %allocation, align 8, !dbg !11457, !tbaa !2658
  %cmp57 = icmp eq ptr %39, null, !dbg !11457
  %lnot59 = xor i1 %cmp57, true, !dbg !11457
  %lnot61 = xor i1 %lnot59, true, !dbg !11457
  %lnot.ext62 = zext i1 %lnot61 to i32, !dbg !11457
  %conv63 = sext i32 %lnot.ext62 to i64, !dbg !11457
  %expval64 = call i64 @llvm.expect.i64(i64 %conv63, i64 0), !dbg !11457
  %tobool65 = icmp ne i64 %expval64, 0, !dbg !11457
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !11459

if.then66:                                        ; preds = %do.end55
  br label %label_oom, !dbg !11460

if.end67:                                         ; preds = %do.end55
  %40 = load ptr, ptr %tsd.addr, align 8, !dbg !11462, !tbaa !2658
  %41 = load i64, ptr %usize, align 8, !dbg !11463, !tbaa !2663
  call void @thread_alloc_event(ptr noundef %40, i64 noundef %41), !dbg !11464
  br label %do.body68, !dbg !11465

do.body68:                                        ; preds = %if.end67
  br label %do.cond69, !dbg !11466

do.cond69:                                        ; preds = %do.body68
  br label %do.end70, !dbg !11466

do.end70:                                         ; preds = %do.cond69
  br label %do.body71, !dbg !11468

do.body71:                                        ; preds = %do.end70
  br label %do.cond72, !dbg !11469

do.cond72:                                        ; preds = %do.body71
  br label %do.end73, !dbg !11469

do.end73:                                         ; preds = %do.cond72
  %42 = load ptr, ptr %sopts.addr, align 8, !dbg !11471, !tbaa !2658
  %slow74 = getelementptr inbounds %struct.static_opts_s, ptr %42, i32 0, i32 8, !dbg !11473
  %43 = load i8, ptr %slow74, align 8, !dbg !11473, !tbaa !3705, !range !2708, !noundef !2709
  %tobool75 = trunc i8 %43 to i1, !dbg !11473
  br i1 %tobool75, label %land.lhs.true77, label %if.end90, !dbg !11474

land.lhs.true77:                                  ; preds = %do.end73
  %44 = load ptr, ptr %dopts.addr, align 8, !dbg !11475, !tbaa !2658
  %zero78 = getelementptr inbounds %struct.dynamic_opts_s, ptr %44, i32 0, i32 5, !dbg !11476
  %45 = load i8, ptr %zero78, align 8, !dbg !11476, !tbaa !3794, !range !2708, !noundef !2709
  %tobool79 = trunc i8 %45 to i1, !dbg !11476
  br i1 %tobool79, label %if.end90, label %land.lhs.true80, !dbg !11477

land.lhs.true80:                                  ; preds = %land.lhs.true77
  %46 = load i8, ptr @opt_junk_alloc, align 1, !dbg !11478, !tbaa !2695, !range !2708, !noundef !2709
  %tobool81 = trunc i8 %46 to i1, !dbg !11478
  %lnot82 = xor i1 %tobool81, true, !dbg !11478
  %lnot84 = xor i1 %lnot82, true, !dbg !11478
  %lnot.ext85 = zext i1 %lnot84 to i32, !dbg !11478
  %conv86 = sext i32 %lnot.ext85 to i64, !dbg !11478
  %expval87 = call i64 @llvm.expect.i64(i64 %conv86, i64 0), !dbg !11478
  %tobool88 = icmp ne i64 %expval87, 0, !dbg !11478
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !11479

if.then89:                                        ; preds = %land.lhs.true80
  %47 = load ptr, ptr @junk_alloc_callback, align 8, !dbg !11480, !tbaa !2658
  %48 = load ptr, ptr %allocation, align 8, !dbg !11482, !tbaa !2658
  %49 = load i64, ptr %usize, align 8, !dbg !11483, !tbaa !2663
  call void %47(ptr noundef %48, i64 noundef %49), !dbg !11480
  br label %if.end90, !dbg !11484

if.end90:                                         ; preds = %if.then89, %land.lhs.true80, %land.lhs.true77, %do.end73
  %50 = load ptr, ptr %sopts.addr, align 8, !dbg !11485, !tbaa !2658
  %slow91 = getelementptr inbounds %struct.static_opts_s, ptr %50, i32 0, i32 8, !dbg !11487
  %51 = load i8, ptr %slow91, align 8, !dbg !11487, !tbaa !3705, !range !2708, !noundef !2709
  %tobool92 = trunc i8 %51 to i1, !dbg !11487
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !11488

if.then93:                                        ; preds = %if.end90
  br label %if.end94, !dbg !11489

if.end94:                                         ; preds = %if.then93, %if.end90
  %52 = load ptr, ptr %tsd.addr, align 8, !dbg !11491, !tbaa !2658
  %call95 = call ptr @tsd_tsdn(ptr noundef %52), !dbg !11492
  call void @check_entry_exit_locking(ptr noundef %call95), !dbg !11493
  %53 = load ptr, ptr %allocation, align 8, !dbg !11494, !tbaa !2658
  %54 = load ptr, ptr %dopts.addr, align 8, !dbg !11495, !tbaa !2658
  %result = getelementptr inbounds %struct.dynamic_opts_s, ptr %54, i32 0, i32 0, !dbg !11496
  %55 = load ptr, ptr %result, align 8, !dbg !11496, !tbaa !3694
  store ptr %53, ptr %55, align 8, !dbg !11497, !tbaa !2658
  store i32 0, ptr %retval, align 4, !dbg !11498
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11498

label_oom:                                        ; preds = %if.then66, %if.then24, %if.then
  tail call void @llvm.dbg.label(metadata !11362), !dbg !11499
  %56 = load ptr, ptr %sopts.addr, align 8, !dbg !11500, !tbaa !2658
  %slow96 = getelementptr inbounds %struct.static_opts_s, ptr %56, i32 0, i32 8, !dbg !11500
  %57 = load i8, ptr %slow96, align 8, !dbg !11500, !tbaa !3705, !range !2708, !noundef !2709
  %tobool97 = trunc i8 %57 to i1, !dbg !11500
  %lnot98 = xor i1 %tobool97, true, !dbg !11500
  %lnot100 = xor i1 %lnot98, true, !dbg !11500
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !11500
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !11500
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 0), !dbg !11500
  %tobool104 = icmp ne i64 %expval103, 0, !dbg !11500
  br i1 %tobool104, label %land.lhs.true105, label %if.end116, !dbg !11502

land.lhs.true105:                                 ; preds = %label_oom
  br i1 false, label %land.lhs.true106, label %if.end116, !dbg !11503

land.lhs.true106:                                 ; preds = %land.lhs.true105
  %58 = load i8, ptr @opt_xmalloc, align 1, !dbg !11504, !tbaa !2695, !range !2708, !noundef !2709
  %tobool107 = trunc i8 %58 to i1, !dbg !11504
  %lnot108 = xor i1 %tobool107, true, !dbg !11504
  %lnot110 = xor i1 %lnot108, true, !dbg !11504
  %lnot.ext111 = zext i1 %lnot110 to i32, !dbg !11504
  %conv112 = sext i32 %lnot.ext111 to i64, !dbg !11504
  %expval113 = call i64 @llvm.expect.i64(i64 %conv112, i64 0), !dbg !11504
  %tobool114 = icmp ne i64 %expval113, 0, !dbg !11504
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !11505

if.then115:                                       ; preds = %land.lhs.true106
  %59 = load ptr, ptr %sopts.addr, align 8, !dbg !11506, !tbaa !2658
  %oom_string = getelementptr inbounds %struct.static_opts_s, ptr %59, i32 0, i32 6, !dbg !11508
  %60 = load ptr, ptr %oom_string, align 8, !dbg !11508, !tbaa !3691
  call void @malloc_write(ptr noundef %60), !dbg !11509
  call void @abort() #19, !dbg !11510
  unreachable, !dbg !11510

if.end116:                                        ; preds = %land.lhs.true106, %land.lhs.true105, %label_oom
  %61 = load ptr, ptr %sopts.addr, align 8, !dbg !11511, !tbaa !2658
  %slow117 = getelementptr inbounds %struct.static_opts_s, ptr %61, i32 0, i32 8, !dbg !11513
  %62 = load i8, ptr %slow117, align 8, !dbg !11513, !tbaa !3705, !range !2708, !noundef !2709
  %tobool118 = trunc i8 %62 to i1, !dbg !11513
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !11514

if.then119:                                       ; preds = %if.end116
  br label %if.end120, !dbg !11515

if.end120:                                        ; preds = %if.then119, %if.end116
  %63 = load ptr, ptr %tsd.addr, align 8, !dbg !11517, !tbaa !2658
  %call121 = call ptr @tsd_tsdn(ptr noundef %63), !dbg !11518
  call void @check_entry_exit_locking(ptr noundef %call121), !dbg !11519
  %64 = load ptr, ptr %sopts.addr, align 8, !dbg !11520, !tbaa !2658
  %set_errno_on_error = getelementptr inbounds %struct.static_opts_s, ptr %64, i32 0, i32 4, !dbg !11522
  %65 = load i8, ptr %set_errno_on_error, align 4, !dbg !11522, !tbaa !3688, !range !2708, !noundef !2709
  %tobool122 = trunc i8 %65 to i1, !dbg !11522
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !11523

if.then123:                                       ; preds = %if.end120
  call void @set_errno(i32 noundef 12), !dbg !11524
  br label %if.end124, !dbg !11526

if.end124:                                        ; preds = %if.then123, %if.end120
  %66 = load ptr, ptr %sopts.addr, align 8, !dbg !11527, !tbaa !2658
  %null_out_result_on_error = getelementptr inbounds %struct.static_opts_s, ptr %66, i32 0, i32 3, !dbg !11529
  %67 = load i8, ptr %null_out_result_on_error, align 1, !dbg !11529, !tbaa !3684, !range !2708, !noundef !2709
  %tobool125 = trunc i8 %67 to i1, !dbg !11529
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !11530

if.then126:                                       ; preds = %if.end124
  %68 = load ptr, ptr %dopts.addr, align 8, !dbg !11531, !tbaa !2658
  %result127 = getelementptr inbounds %struct.dynamic_opts_s, ptr %68, i32 0, i32 0, !dbg !11533
  %69 = load ptr, ptr %result127, align 8, !dbg !11533, !tbaa !3694
  store ptr null, ptr %69, align 8, !dbg !11534, !tbaa !2658
  br label %if.end128, !dbg !11535

if.end128:                                        ; preds = %if.then126, %if.end124
  store i32 12, ptr %retval, align 4, !dbg !11536
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11536

label_invalid_alignment:                          ; preds = %if.then15
  tail call void @llvm.dbg.label(metadata !11363), !dbg !11537
  %70 = load ptr, ptr %sopts.addr, align 8, !dbg !11538, !tbaa !2658
  %set_errno_on_error129 = getelementptr inbounds %struct.static_opts_s, ptr %70, i32 0, i32 4, !dbg !11540
  %71 = load i8, ptr %set_errno_on_error129, align 4, !dbg !11540, !tbaa !3688, !range !2708, !noundef !2709
  %tobool130 = trunc i8 %71 to i1, !dbg !11540
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !11541

if.then131:                                       ; preds = %label_invalid_alignment
  call void @set_errno(i32 noundef 22), !dbg !11542
  br label %if.end132, !dbg !11544

if.end132:                                        ; preds = %if.then131, %label_invalid_alignment
  %72 = load ptr, ptr %sopts.addr, align 8, !dbg !11545, !tbaa !2658
  %slow133 = getelementptr inbounds %struct.static_opts_s, ptr %72, i32 0, i32 8, !dbg !11547
  %73 = load i8, ptr %slow133, align 8, !dbg !11547, !tbaa !3705, !range !2708, !noundef !2709
  %tobool134 = trunc i8 %73 to i1, !dbg !11547
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !11548

if.then135:                                       ; preds = %if.end132
  br label %if.end136, !dbg !11549

if.end136:                                        ; preds = %if.then135, %if.end132
  %74 = load ptr, ptr %tsd.addr, align 8, !dbg !11551, !tbaa !2658
  %call137 = call ptr @tsd_tsdn(ptr noundef %74), !dbg !11552
  call void @check_entry_exit_locking(ptr noundef %call137), !dbg !11553
  %75 = load ptr, ptr %sopts.addr, align 8, !dbg !11554, !tbaa !2658
  %null_out_result_on_error138 = getelementptr inbounds %struct.static_opts_s, ptr %75, i32 0, i32 3, !dbg !11556
  %76 = load i8, ptr %null_out_result_on_error138, align 1, !dbg !11556, !tbaa !3684, !range !2708, !noundef !2709
  %tobool139 = trunc i8 %76 to i1, !dbg !11556
  br i1 %tobool139, label %if.then140, label %if.end142, !dbg !11557

if.then140:                                       ; preds = %if.end136
  %77 = load ptr, ptr %dopts.addr, align 8, !dbg !11558, !tbaa !2658
  %result141 = getelementptr inbounds %struct.dynamic_opts_s, ptr %77, i32 0, i32 0, !dbg !11560
  %78 = load ptr, ptr %result141, align 8, !dbg !11560, !tbaa !3694
  store ptr null, ptr %78, align 8, !dbg !11561, !tbaa !2658
  br label %if.end142, !dbg !11562

if.end142:                                        ; preds = %if.then140, %if.end136
  store i32 22, ptr %retval, align 4, !dbg !11563
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11563

cleanup:                                          ; preds = %if.end142, %if.end128, %if.end94
  call void @llvm.lifetime.end.p0(i64 1, ptr %reentrancy_level) #18, !dbg !11564
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !11564
  call void @llvm.lifetime.end.p0(i64 4, ptr %ind) #18, !dbg !11564
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #18, !dbg !11564
  call void @llvm.lifetime.end.p0(i64 8, ptr %allocation) #18, !dbg !11564
  %79 = load i32, ptr %retval, align 4, !dbg !11564
  ret i32 %79, !dbg !11564
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @malloc_initialized() #3 !dbg !11565 {
entry:
  %0 = load i32, ptr @malloc_init_state, align 4, !dbg !11566, !tbaa !2810
  %cmp = icmp eq i32 %0, 0, !dbg !11567
  ret i1 %cmp, !dbg !11568
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @compute_size_with_overflow(i1 noundef zeroext %may_overflow, ptr noundef %dopts, ptr noundef %size) #3 !dbg !2562 {
entry:
  %retval = alloca i1, align 1
  %may_overflow.addr = alloca i8, align 1
  %dopts.addr = alloca ptr, align 8
  %size.addr = alloca ptr, align 8
  %frombool = zext i1 %may_overflow to i8
  store i8 %frombool, ptr %may_overflow.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %may_overflow.addr, metadata !2567, metadata !DIExpression()), !dbg !11569
  store ptr %dopts, ptr %dopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %dopts.addr, metadata !2568, metadata !DIExpression()), !dbg !11570
  store ptr %size, ptr %size.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !2569, metadata !DIExpression()), !dbg !11571
  %0 = load i8, ptr %may_overflow.addr, align 1, !dbg !11572, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !11572
  br i1 %tobool, label %if.end, label %if.then, !dbg !11574

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11575

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !11577

do.end:                                           ; preds = %do.body
  %1 = load ptr, ptr %dopts.addr, align 8, !dbg !11579, !tbaa !2658
  %item_size = getelementptr inbounds %struct.dynamic_opts_s, ptr %1, i32 0, i32 3, !dbg !11580
  %2 = load i64, ptr %item_size, align 8, !dbg !11580, !tbaa !3702
  %3 = load ptr, ptr %size.addr, align 8, !dbg !11581, !tbaa !2658
  store i64 %2, ptr %3, align 8, !dbg !11582, !tbaa !2663
  store i1 false, ptr %retval, align 1, !dbg !11583
  br label %return, !dbg !11583

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %dopts.addr, align 8, !dbg !11584, !tbaa !2658
  %item_size1 = getelementptr inbounds %struct.dynamic_opts_s, ptr %4, i32 0, i32 3, !dbg !11585
  %5 = load i64, ptr %item_size1, align 8, !dbg !11585, !tbaa !3702
  %6 = load ptr, ptr %dopts.addr, align 8, !dbg !11586, !tbaa !2658
  %num_items = getelementptr inbounds %struct.dynamic_opts_s, ptr %6, i32 0, i32 2, !dbg !11587
  %7 = load i64, ptr %num_items, align 8, !dbg !11587, !tbaa !3698
  %mul = mul i64 %5, %7, !dbg !11588
  %8 = load ptr, ptr %size.addr, align 8, !dbg !11589, !tbaa !2658
  store i64 %mul, ptr %8, align 8, !dbg !11590, !tbaa !2663
  %9 = load ptr, ptr %size.addr, align 8, !dbg !11591, !tbaa !2658
  %10 = load i64, ptr %9, align 8, !dbg !11591, !tbaa !2663
  %cmp = icmp eq i64 %10, 0, !dbg !11591
  %lnot = xor i1 %cmp, true, !dbg !11591
  %lnot2 = xor i1 %lnot, true, !dbg !11591
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11591
  %conv = sext i32 %lnot.ext to i64, !dbg !11591
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11591
  %tobool3 = icmp ne i64 %expval, 0, !dbg !11591
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !11593

if.then4:                                         ; preds = %if.end
  %11 = load ptr, ptr %dopts.addr, align 8, !dbg !11594, !tbaa !2658
  %num_items5 = getelementptr inbounds %struct.dynamic_opts_s, ptr %11, i32 0, i32 2, !dbg !11596
  %12 = load i64, ptr %num_items5, align 8, !dbg !11596, !tbaa !3698
  %cmp6 = icmp ne i64 %12, 0, !dbg !11597
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !11598

land.rhs:                                         ; preds = %if.then4
  %13 = load ptr, ptr %dopts.addr, align 8, !dbg !11599, !tbaa !2658
  %item_size8 = getelementptr inbounds %struct.dynamic_opts_s, ptr %13, i32 0, i32 3, !dbg !11600
  %14 = load i64, ptr %item_size8, align 8, !dbg !11600, !tbaa !3702
  %cmp9 = icmp ne i64 %14, 0, !dbg !11601
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then4
  %15 = phi i1 [ false, %if.then4 ], [ %cmp9, %land.rhs ], !dbg !11602
  store i1 %15, ptr %retval, align 1, !dbg !11603
  br label %return, !dbg !11603

if.end11:                                         ; preds = %if.end
  %16 = load ptr, ptr %dopts.addr, align 8, !dbg !11604, !tbaa !2658
  %num_items12 = getelementptr inbounds %struct.dynamic_opts_s, ptr %16, i32 0, i32 2, !dbg !11604
  %17 = load i64, ptr %num_items12, align 8, !dbg !11604, !tbaa !3698
  %18 = load ptr, ptr %dopts.addr, align 8, !dbg !11604, !tbaa !2658
  %item_size13 = getelementptr inbounds %struct.dynamic_opts_s, ptr %18, i32 0, i32 3, !dbg !11604
  %19 = load i64, ptr %item_size13, align 8, !dbg !11604, !tbaa !3702
  %or = or i64 %17, %19, !dbg !11604
  %and = and i64 -4294967296, %or, !dbg !11604
  %cmp14 = icmp eq i64 %and, 0, !dbg !11604
  %lnot16 = xor i1 %cmp14, true, !dbg !11604
  %lnot18 = xor i1 %lnot16, true, !dbg !11604
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11604
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11604
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !11604
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !11604
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !11606

if.then23:                                        ; preds = %if.end11
  store i1 false, ptr %retval, align 1, !dbg !11607
  br label %return, !dbg !11607

if.end24:                                         ; preds = %if.end11
  %20 = load ptr, ptr %size.addr, align 8, !dbg !11609, !tbaa !2658
  %21 = load i64, ptr %20, align 8, !dbg !11609, !tbaa !2663
  %22 = load ptr, ptr %dopts.addr, align 8, !dbg !11609, !tbaa !2658
  %item_size25 = getelementptr inbounds %struct.dynamic_opts_s, ptr %22, i32 0, i32 3, !dbg !11609
  %23 = load i64, ptr %item_size25, align 8, !dbg !11609, !tbaa !3702
  %div = udiv i64 %21, %23, !dbg !11609
  %24 = load ptr, ptr %dopts.addr, align 8, !dbg !11609, !tbaa !2658
  %num_items26 = getelementptr inbounds %struct.dynamic_opts_s, ptr %24, i32 0, i32 2, !dbg !11609
  %25 = load i64, ptr %num_items26, align 8, !dbg !11609, !tbaa !3698
  %cmp27 = icmp eq i64 %div, %25, !dbg !11609
  %lnot29 = xor i1 %cmp27, true, !dbg !11609
  %lnot31 = xor i1 %lnot29, true, !dbg !11609
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !11609
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !11609
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 1), !dbg !11609
  %tobool35 = icmp ne i64 %expval34, 0, !dbg !11609
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !11611

if.then36:                                        ; preds = %if.end24
  store i1 false, ptr %retval, align 1, !dbg !11612
  br label %return, !dbg !11612

if.end37:                                         ; preds = %if.end24
  store i1 true, ptr %retval, align 1, !dbg !11614
  br label %return, !dbg !11614

return:                                           ; preds = %if.end37, %if.then36, %if.then23, %land.end, %do.end
  %26 = load i1, ptr %retval, align 1, !dbg !11615
  ret i1 %26, !dbg !11615
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @imalloc_no_sample(ptr noundef %sopts, ptr noundef %dopts, ptr noundef %tsd, i64 noundef %size, i64 noundef %usize, i32 noundef %ind) #3 !dbg !11616 {
entry:
  %retval = alloca ptr, align 8
  %sopts.addr = alloca ptr, align 8
  %dopts.addr = alloca ptr, align 8
  %tsd.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %usize.addr = alloca i64, align 8
  %ind.addr = alloca i32, align 4
  %tcache = alloca ptr, align 8
  %arena = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %sopts, ptr %sopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %sopts.addr, metadata !11620, metadata !DIExpression()), !dbg !11628
  store ptr %dopts, ptr %dopts.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %dopts.addr, metadata !11621, metadata !DIExpression()), !dbg !11629
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11622, metadata !DIExpression()), !dbg !11630
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !11623, metadata !DIExpression()), !dbg !11631
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !11624, metadata !DIExpression()), !dbg !11632
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !11625, metadata !DIExpression()), !dbg !11633
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !11634
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !11626, metadata !DIExpression()), !dbg !11635
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11636, !tbaa !2658
  %1 = load ptr, ptr %dopts.addr, align 8, !dbg !11637, !tbaa !2658
  %tcache_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %1, i32 0, i32 6, !dbg !11638
  %2 = load i32, ptr %tcache_ind, align 4, !dbg !11638, !tbaa !3798
  %3 = load ptr, ptr %sopts.addr, align 8, !dbg !11639, !tbaa !2658
  %slow = getelementptr inbounds %struct.static_opts_s, ptr %3, i32 0, i32 8, !dbg !11640
  %4 = load i8, ptr %slow, align 8, !dbg !11640, !tbaa !3705, !range !2708, !noundef !2709
  %tobool = trunc i8 %4 to i1, !dbg !11640
  %call = call ptr @tcache_get_from_ind(ptr noundef %0, i32 noundef %2, i1 noundef zeroext %tobool, i1 noundef zeroext true), !dbg !11641
  store ptr %call, ptr %tcache, align 8, !dbg !11635, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %arena) #18, !dbg !11642
  tail call void @llvm.dbg.declare(metadata ptr %arena, metadata !11627, metadata !DIExpression()), !dbg !11643
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !11644, !tbaa !2658
  %6 = load ptr, ptr %dopts.addr, align 8, !dbg !11646, !tbaa !2658
  %arena_ind = getelementptr inbounds %struct.dynamic_opts_s, ptr %6, i32 0, i32 7, !dbg !11647
  %7 = load i32, ptr %arena_ind, align 8, !dbg !11647, !tbaa !3802
  %call1 = call zeroext i1 @arena_get_from_ind(ptr noundef %5, i32 noundef %7, ptr noundef %arena), !dbg !11648
  br i1 %call1, label %if.then, label %if.end, !dbg !11649

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !11650
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11650

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %dopts.addr, align 8, !dbg !11652, !tbaa !2658
  %alignment = getelementptr inbounds %struct.dynamic_opts_s, ptr %8, i32 0, i32 4, !dbg !11652
  %9 = load i64, ptr %alignment, align 8, !dbg !11652, !tbaa !3790
  %cmp = icmp ne i64 %9, 0, !dbg !11652
  %lnot = xor i1 %cmp, true, !dbg !11652
  %lnot2 = xor i1 %lnot, true, !dbg !11652
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11652
  %conv = sext i32 %lnot.ext to i64, !dbg !11652
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11652
  %tobool3 = icmp ne i64 %expval, 0, !dbg !11652
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !11654

if.then4:                                         ; preds = %if.end
  %10 = load ptr, ptr %tsd.addr, align 8, !dbg !11655, !tbaa !2658
  %call5 = call ptr @tsd_tsdn(ptr noundef %10), !dbg !11657
  %11 = load i64, ptr %usize.addr, align 8, !dbg !11658, !tbaa !2663
  %12 = load ptr, ptr %dopts.addr, align 8, !dbg !11659, !tbaa !2658
  %alignment6 = getelementptr inbounds %struct.dynamic_opts_s, ptr %12, i32 0, i32 4, !dbg !11660
  %13 = load i64, ptr %alignment6, align 8, !dbg !11660, !tbaa !3790
  %14 = load ptr, ptr %dopts.addr, align 8, !dbg !11661, !tbaa !2658
  %zero = getelementptr inbounds %struct.dynamic_opts_s, ptr %14, i32 0, i32 5, !dbg !11662
  %15 = load i8, ptr %zero, align 8, !dbg !11662, !tbaa !3794, !range !2708, !noundef !2709
  %tobool7 = trunc i8 %15 to i1, !dbg !11662
  %16 = load ptr, ptr %tcache, align 8, !dbg !11663, !tbaa !2658
  %17 = load ptr, ptr %arena, align 8, !dbg !11664, !tbaa !2658
  %call8 = call ptr @ipalloct(ptr noundef %call5, i64 noundef %11, i64 noundef %13, i1 noundef zeroext %tobool7, ptr noundef %16, ptr noundef %17), !dbg !11665
  store ptr %call8, ptr %retval, align 8, !dbg !11666
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11666

if.end9:                                          ; preds = %if.end
  %18 = load ptr, ptr %tsd.addr, align 8, !dbg !11667, !tbaa !2658
  %call10 = call ptr @tsd_tsdn(ptr noundef %18), !dbg !11668
  %19 = load i64, ptr %size.addr, align 8, !dbg !11669, !tbaa !2663
  %20 = load i32, ptr %ind.addr, align 4, !dbg !11670, !tbaa !2791
  %21 = load ptr, ptr %dopts.addr, align 8, !dbg !11671, !tbaa !2658
  %zero11 = getelementptr inbounds %struct.dynamic_opts_s, ptr %21, i32 0, i32 5, !dbg !11672
  %22 = load i8, ptr %zero11, align 8, !dbg !11672, !tbaa !3794, !range !2708, !noundef !2709
  %tobool12 = trunc i8 %22 to i1, !dbg !11672
  %23 = load ptr, ptr %tcache, align 8, !dbg !11673, !tbaa !2658
  %24 = load ptr, ptr %arena, align 8, !dbg !11674, !tbaa !2658
  %25 = load ptr, ptr %sopts.addr, align 8, !dbg !11675, !tbaa !2658
  %slow13 = getelementptr inbounds %struct.static_opts_s, ptr %25, i32 0, i32 8, !dbg !11676
  %26 = load i8, ptr %slow13, align 8, !dbg !11676, !tbaa !3705, !range !2708, !noundef !2709
  %tobool14 = trunc i8 %26 to i1, !dbg !11676
  %call15 = call ptr @iallocztm(ptr noundef %call10, i64 noundef %19, i32 noundef %20, i1 noundef zeroext %tobool12, ptr noundef %23, i1 noundef zeroext false, ptr noundef %24, i1 noundef zeroext %tobool14), !dbg !11677
  store ptr %call15, ptr %retval, align 8, !dbg !11678
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11678

cleanup:                                          ; preds = %if.end9, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %arena) #18, !dbg !11679
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !11679
  %27 = load ptr, ptr %retval, align 8, !dbg !11679
  ret ptr %27, !dbg !11679
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @ipalloct(ptr noundef %tsdn, i64 noundef %usize, i64 noundef %alignment, i1 noundef zeroext %zero, ptr noundef %tcache, ptr noundef %arena) #3 !dbg !11680 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %zero.addr = alloca i8, align 1
  %tcache.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !11684, metadata !DIExpression()), !dbg !11690
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !11685, metadata !DIExpression()), !dbg !11691
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !11686, metadata !DIExpression()), !dbg !11692
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !11687, metadata !DIExpression()), !dbg !11693
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !11688, metadata !DIExpression()), !dbg !11694
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !11689, metadata !DIExpression()), !dbg !11695
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !11696, !tbaa !2658
  %1 = load i64, ptr %usize.addr, align 8, !dbg !11697, !tbaa !2663
  %2 = load i64, ptr %alignment.addr, align 8, !dbg !11698, !tbaa !2663
  %3 = load i8, ptr %zero.addr, align 1, !dbg !11699, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !11699
  %4 = load ptr, ptr %tcache.addr, align 8, !dbg !11700, !tbaa !2658
  %5 = load ptr, ptr %arena.addr, align 8, !dbg !11701, !tbaa !2658
  %call = call ptr @ipallocztm(ptr noundef %0, i64 noundef %1, i64 noundef %2, i1 noundef zeroext %tobool, ptr noundef %4, i1 noundef zeroext false, ptr noundef %5), !dbg !11702
  ret ptr %call, !dbg !11703
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @ipallocztm(ptr noundef %tsdn, i64 noundef %usize, i64 noundef %alignment, i1 noundef zeroext %zero, ptr noundef %tcache, i1 noundef zeroext %is_internal, ptr noundef %arena) #3 !dbg !11704 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %zero.addr = alloca i8, align 1
  %tcache.addr = alloca ptr, align 8
  %is_internal.addr = alloca i8, align 1
  %arena.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !11708, metadata !DIExpression()), !dbg !11716
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !11709, metadata !DIExpression()), !dbg !11717
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !11710, metadata !DIExpression()), !dbg !11718
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !11711, metadata !DIExpression()), !dbg !11719
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !11712, metadata !DIExpression()), !dbg !11720
  %frombool1 = zext i1 %is_internal to i8
  store i8 %frombool1, ptr %is_internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_internal.addr, metadata !11713, metadata !DIExpression()), !dbg !11721
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !11714, metadata !DIExpression()), !dbg !11722
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !11723
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !11715, metadata !DIExpression()), !dbg !11724
  br label %do.body, !dbg !11725

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11726

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11726

do.end:                                           ; preds = %do.cond
  br label %do.body2, !dbg !11728

do.body2:                                         ; preds = %do.end
  br label %do.cond3, !dbg !11729

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !11729

do.end4:                                          ; preds = %do.cond3
  br label %do.body5, !dbg !11731

do.body5:                                         ; preds = %do.end4
  br label %do.cond6, !dbg !11732

do.cond6:                                         ; preds = %do.body5
  br label %do.end7, !dbg !11732

do.end7:                                          ; preds = %do.cond6
  br label %do.body8, !dbg !11734

do.body8:                                         ; preds = %do.end7
  br label %do.cond9, !dbg !11735

do.cond9:                                         ; preds = %do.body8
  br label %do.end10, !dbg !11735

do.end10:                                         ; preds = %do.cond9
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !11737, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !11738
  call void @witness_assert_depth_to_rank(ptr noundef %call, i32 noundef 14, i32 noundef 0), !dbg !11739
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !11740, !tbaa !2658
  %2 = load ptr, ptr %arena.addr, align 8, !dbg !11741, !tbaa !2658
  %3 = load i64, ptr %usize.addr, align 8, !dbg !11742, !tbaa !2663
  %4 = load i64, ptr %alignment.addr, align 8, !dbg !11743, !tbaa !2663
  %5 = load i8, ptr %zero.addr, align 1, !dbg !11744, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %5 to i1, !dbg !11744
  %6 = load ptr, ptr %tcache.addr, align 8, !dbg !11745, !tbaa !2658
  %call11 = call ptr @arena_palloc(ptr noundef %1, ptr noundef %2, i64 noundef %3, i64 noundef %4, i1 noundef zeroext %tobool, ptr noundef %6), !dbg !11746
  store ptr %call11, ptr %ret, align 8, !dbg !11747, !tbaa !2658
  br label %do.body12, !dbg !11748

do.body12:                                        ; preds = %do.end10
  br label %do.cond13, !dbg !11749

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !11749

do.end14:                                         ; preds = %do.cond13
  %7 = load i8, ptr %is_internal.addr, align 1, !dbg !11751, !tbaa !2695, !range !2708, !noundef !2709
  %tobool15 = trunc i8 %7 to i1, !dbg !11751
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !11753

land.lhs.true:                                    ; preds = %do.end14
  %8 = load ptr, ptr %ret, align 8, !dbg !11754, !tbaa !2658
  %cmp = icmp ne ptr %8, null, !dbg !11754
  %lnot = xor i1 %cmp, true, !dbg !11754
  %lnot16 = xor i1 %lnot, true, !dbg !11754
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !11754
  %conv = sext i32 %lnot.ext to i64, !dbg !11754
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !11754
  %tobool17 = icmp ne i64 %expval, 0, !dbg !11754
  br i1 %tobool17, label %if.then, label %if.end, !dbg !11755

if.then:                                          ; preds = %land.lhs.true
  %9 = load ptr, ptr %tsdn.addr, align 8, !dbg !11756, !tbaa !2658
  %10 = load ptr, ptr %ret, align 8, !dbg !11758, !tbaa !2658
  %call18 = call ptr @iaalloc(ptr noundef %9, ptr noundef %10), !dbg !11759
  %11 = load ptr, ptr %tsdn.addr, align 8, !dbg !11760, !tbaa !2658
  %12 = load ptr, ptr %ret, align 8, !dbg !11761, !tbaa !2658
  %call19 = call i64 @isalloc(ptr noundef %11, ptr noundef %12), !dbg !11762
  call void @arena_internal_add(ptr noundef %call18, i64 noundef %call19), !dbg !11763
  br label %if.end, !dbg !11764

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end14
  %13 = load ptr, ptr %ret, align 8, !dbg !11765, !tbaa !2658
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !11766
  ret ptr %13, !dbg !11767
}

declare !dbg !11768 ptr @arena_palloc(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i1 noundef zeroext, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_get(i1 noundef zeroext %init) #3 !dbg !11771 {
entry:
  %init.addr = alloca i8, align 1
  %frombool = zext i1 %init to i8
  store i8 %frombool, ptr %init.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %init.addr, metadata !11775, metadata !DIExpression()), !dbg !11776
  %0 = call align 8 ptr @llvm.threadlocal.address.p0(ptr align 8 @tsd_tls), !dbg !11777
  ret ptr %0, !dbg !11778
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @sz_size2index_usize_fastpath(i64 noundef %size, ptr noundef %ind, ptr noundef %usize) #3 !dbg !11779 {
entry:
  %size.addr = alloca i64, align 8
  %ind.addr = alloca ptr, align 8
  %usize.addr = alloca ptr, align 8
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !11783, metadata !DIExpression()), !dbg !11786
  store ptr %ind, ptr %ind.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !11784, metadata !DIExpression()), !dbg !11787
  store ptr %usize, ptr %usize.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !11785, metadata !DIExpression()), !dbg !11788
  %0 = load i64, ptr %size.addr, align 8, !dbg !11789, !tbaa !2663
  %call = call i32 @sz_size2index_lookup_impl(i64 noundef %0), !dbg !11790
  %1 = load ptr, ptr %ind.addr, align 8, !dbg !11791, !tbaa !2658
  store i32 %call, ptr %1, align 4, !dbg !11792, !tbaa !2791
  %2 = load ptr, ptr %ind.addr, align 8, !dbg !11793, !tbaa !2658
  %3 = load i32, ptr %2, align 4, !dbg !11794, !tbaa !2791
  %call1 = call i64 @sz_index2size_lookup_impl(i32 noundef %3), !dbg !11795
  %4 = load ptr, ptr %usize.addr, align 8, !dbg !11796, !tbaa !2658
  store i64 %call1, ptr %4, align 8, !dbg !11797, !tbaa !2663
  ret void, !dbg !11798
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @te_malloc_fastpath_ctx(ptr noundef %tsd, ptr noundef %allocated, ptr noundef %threshold) #3 !dbg !11799 {
entry:
  %tsd.addr = alloca ptr, align 8
  %allocated.addr = alloca ptr, align 8
  %threshold.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11804, metadata !DIExpression()), !dbg !11807
  store ptr %allocated, ptr %allocated.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %allocated.addr, metadata !11805, metadata !DIExpression()), !dbg !11808
  store ptr %threshold, ptr %threshold.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %threshold.addr, metadata !11806, metadata !DIExpression()), !dbg !11809
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11810, !tbaa !2658
  %call = call ptr @tsd_thread_allocatedp_get_unsafe(ptr noundef %0), !dbg !11811
  %1 = load i64, ptr %call, align 8, !dbg !11812, !tbaa !2663
  %2 = load ptr, ptr %allocated.addr, align 8, !dbg !11813, !tbaa !2658
  store i64 %1, ptr %2, align 8, !dbg !11814, !tbaa !2663
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !11815, !tbaa !2658
  %call1 = call ptr @tsd_thread_allocated_next_event_fastp_get_unsafe(ptr noundef %3), !dbg !11816
  %4 = load i64, ptr %call1, align 8, !dbg !11817, !tbaa !2663
  %5 = load ptr, ptr %threshold.addr, align 8, !dbg !11818, !tbaa !2658
  store i64 %4, ptr %5, align 8, !dbg !11819, !tbaa !2663
  br label %do.body, !dbg !11820

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11821

do.end:                                           ; preds = %do.body
  ret void, !dbg !11823
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_tcachep_get(ptr noundef %tsd) #3 !dbg !11824 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11828, metadata !DIExpression()), !dbg !11830
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !11830
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !11829, metadata !DIExpression()), !dbg !11830
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11830, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !11830
  store i8 %call, ptr %state, align 1, !dbg !11830, !tbaa !2810
  br label %do.body, !dbg !11830

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11831

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11831

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11830, !tbaa !2658
  %call1 = call ptr @tsd_tcachep_get_unsafe(ptr noundef %1), !dbg !11830
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !11830
  ret ptr %call1, !dbg !11830
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @cache_bin_alloc_easy(ptr noundef %bin, ptr noundef %success) #3 !dbg !11833 {
entry:
  %bin.addr = alloca ptr, align 8
  %success.addr = alloca ptr, align 8
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !11835, metadata !DIExpression()), !dbg !11837
  store ptr %success, ptr %success.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %success.addr, metadata !11836, metadata !DIExpression()), !dbg !11838
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !11839, !tbaa !2658
  %1 = load ptr, ptr %success.addr, align 8, !dbg !11840, !tbaa !2658
  %call = call ptr @cache_bin_alloc_impl(ptr noundef %0, ptr noundef %1, i1 noundef zeroext false), !dbg !11841
  ret ptr %call, !dbg !11842
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @fastpath_success_finish(ptr noundef %tsd, i64 noundef %allocated_after, ptr noundef %bin, ptr noundef %ret) #3 !dbg !2593 {
entry:
  %tsd.addr = alloca ptr, align 8
  %allocated_after.addr = alloca i64, align 8
  %bin.addr = alloca ptr, align 8
  %ret.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !2597, metadata !DIExpression()), !dbg !11843
  store i64 %allocated_after, ptr %allocated_after.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %allocated_after.addr, metadata !2598, metadata !DIExpression()), !dbg !11844
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !2599, metadata !DIExpression()), !dbg !11845
  store ptr %ret, ptr %ret.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ret.addr, metadata !2600, metadata !DIExpression()), !dbg !11846
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11847, !tbaa !2658
  %1 = load i64, ptr %allocated_after.addr, align 8, !dbg !11848, !tbaa !2663
  call void @thread_allocated_set(ptr noundef %0, i64 noundef %1), !dbg !11849
  %2 = load ptr, ptr %bin.addr, align 8, !dbg !11850, !tbaa !2658
  %tstats = getelementptr inbounds %struct.cache_bin_s, ptr %2, i32 0, i32 1, !dbg !11853
  %nrequests = getelementptr inbounds %struct.cache_bin_stats_s, ptr %tstats, i32 0, i32 0, !dbg !11854
  %3 = load i64, ptr %nrequests, align 8, !dbg !11855, !tbaa !6245
  %inc = add i64 %3, 1, !dbg !11855
  store i64 %inc, ptr %nrequests, align 8, !dbg !11855, !tbaa !6245
  br label %do.body, !dbg !11856

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11857

do.end:                                           ; preds = %do.body
  ret void, !dbg !11859
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare nonnull ptr @llvm.threadlocal.address.p0(ptr nonnull) #17

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocatedp_get_unsafe(ptr noundef %tsd) #3 !dbg !11860 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11864, metadata !DIExpression()), !dbg !11865
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11865, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 30, !dbg !11865
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated, !dbg !11865
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocated_next_event_fastp_get_unsafe(ptr noundef %tsd) #3 !dbg !11866 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11868, metadata !DIExpression()), !dbg !11869
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11869, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_next_event_fast = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 31, !dbg !11869
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_next_event_fast, !dbg !11869
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_tcachep_get_unsafe(ptr noundef %tsd) #3 !dbg !11870 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11872, metadata !DIExpression()), !dbg !11873
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11873, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_tcache = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 34, !dbg !11873
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_tcache, !dbg !11873
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @thread_allocated_set(ptr noundef %tsd, i64 noundef %v) #3 !dbg !11874 {
entry:
  %tsd.addr = alloca ptr, align 8
  %v.addr = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11878, metadata !DIExpression()), !dbg !11880
  store i64 %v, ptr %v.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !11879, metadata !DIExpression()), !dbg !11880
  %0 = load i64, ptr %v.addr, align 8, !dbg !11880, !tbaa !2663
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11880, !tbaa !2658
  %call = call ptr @tsd_thread_allocatedp_get(ptr noundef %1), !dbg !11880
  store i64 %0, ptr %call, align 8, !dbg !11880, !tbaa !2663
  ret void, !dbg !11880
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocatedp_get(ptr noundef %tsd) #3 !dbg !11881 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11883, metadata !DIExpression()), !dbg !11885
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !11885
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !11884, metadata !DIExpression()), !dbg !11885
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11885, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !11885
  store i8 %call, ptr %state, align 1, !dbg !11885, !tbaa !2810
  br label %do.body, !dbg !11885

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !11886

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11886

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11885, !tbaa !2658
  %call1 = call ptr @tsd_thread_allocatedp_get_unsafe(ptr noundef %1), !dbg !11885
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !11885
  ret ptr %call1, !dbg !11885
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_fetch_impl(i1 noundef zeroext %init, i1 noundef zeroext %minimal) #3 !dbg !11888 {
entry:
  %retval = alloca ptr, align 8
  %init.addr = alloca i8, align 1
  %minimal.addr = alloca i8, align 1
  %tsd = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %frombool = zext i1 %init to i8
  store i8 %frombool, ptr %init.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %init.addr, metadata !11892, metadata !DIExpression()), !dbg !11895
  %frombool1 = zext i1 %minimal to i8
  store i8 %frombool1, ptr %minimal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %minimal.addr, metadata !11893, metadata !DIExpression()), !dbg !11896
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !11897
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !11894, metadata !DIExpression()), !dbg !11898
  %0 = load i8, ptr %init.addr, align 1, !dbg !11899, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !11899
  %call = call ptr @tsd_get(i1 noundef zeroext %tobool), !dbg !11900
  store ptr %call, ptr %tsd, align 8, !dbg !11898, !tbaa !2658
  %1 = load i8, ptr %init.addr, align 1, !dbg !11901, !tbaa !2695, !range !2708, !noundef !2709
  %tobool2 = trunc i8 %1 to i1, !dbg !11901
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !11903

land.lhs.true:                                    ; preds = %entry
  %call3 = call zeroext i1 @tsd_get_allocates(), !dbg !11904
  br i1 %call3, label %land.lhs.true4, label %if.end, !dbg !11905

land.lhs.true4:                                   ; preds = %land.lhs.true
  %2 = load ptr, ptr %tsd, align 8, !dbg !11906, !tbaa !2658
  %cmp = icmp eq ptr %2, null, !dbg !11907
  br i1 %cmp, label %if.then, label %if.end, !dbg !11908

if.then:                                          ; preds = %land.lhs.true4
  store ptr null, ptr %retval, align 8, !dbg !11909
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11909

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %entry
  br label %do.body, !dbg !11911

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !11912

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !11912

do.end:                                           ; preds = %do.cond
  %3 = load ptr, ptr %tsd, align 8, !dbg !11914, !tbaa !2658
  %call5 = call zeroext i8 @tsd_state_get(ptr noundef %3), !dbg !11914
  %conv = zext i8 %call5 to i32, !dbg !11914
  %cmp6 = icmp ne i32 %conv, 0, !dbg !11914
  %lnot = xor i1 %cmp6, true, !dbg !11914
  %lnot8 = xor i1 %lnot, true, !dbg !11914
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !11914
  %conv9 = sext i32 %lnot.ext to i64, !dbg !11914
  %expval = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !11914
  %tobool10 = icmp ne i64 %expval, 0, !dbg !11914
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !11916

if.then11:                                        ; preds = %do.end
  %4 = load ptr, ptr %tsd, align 8, !dbg !11917, !tbaa !2658
  %5 = load i8, ptr %minimal.addr, align 1, !dbg !11919, !tbaa !2695, !range !2708, !noundef !2709
  %tobool12 = trunc i8 %5 to i1, !dbg !11919
  %call13 = call ptr @tsd_fetch_slow(ptr noundef %4, i1 noundef zeroext %tobool12), !dbg !11920
  store ptr %call13, ptr %retval, align 8, !dbg !11921
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11921

if.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !11922

do.body15:                                        ; preds = %if.end14
  br label %do.cond16, !dbg !11923

do.cond16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !11923

do.end17:                                         ; preds = %do.cond16
  %6 = load ptr, ptr %tsd, align 8, !dbg !11925, !tbaa !2658
  call void @tsd_assert_fast(ptr noundef %6), !dbg !11926
  %7 = load ptr, ptr %tsd, align 8, !dbg !11927, !tbaa !2658
  store ptr %7, ptr %retval, align 8, !dbg !11928
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11928

cleanup:                                          ; preds = %do.end17, %if.then11, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !11929
  %8 = load ptr, ptr %retval, align 8, !dbg !11929
  ret ptr %8, !dbg !11929
}

declare !dbg !11930 ptr @tsd_fetch_slow(ptr noundef, i1 noundef zeroext) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tcache_get(ptr noundef %tsd) #3 !dbg !11933 {
entry:
  %retval = alloca ptr, align 8
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11935, metadata !DIExpression()), !dbg !11936
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11937, !tbaa !2658
  %call = call zeroext i1 @tcache_available(ptr noundef %0), !dbg !11939
  br i1 %call, label %if.end, label %if.then, !dbg !11940

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !11941
  br label %return, !dbg !11941

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !11943, !tbaa !2658
  %call1 = call ptr @tsd_tcachep_get(ptr noundef %1), !dbg !11944
  store ptr %call1, ptr %retval, align 8, !dbg !11945
  br label %return, !dbg !11945

return:                                           ; preds = %if.end, %if.then
  %2 = load ptr, ptr %retval, align 8, !dbg !11946
  ret ptr %2, !dbg !11946
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tcaches_get(ptr noundef %tsd, i32 noundef %ind) #3 !dbg !11947 {
entry:
  %tsd.addr = alloca ptr, align 8
  %ind.addr = alloca i32, align 4
  %elm = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11951, metadata !DIExpression()), !dbg !11963
  store i32 %ind, ptr %ind.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %ind.addr, metadata !11952, metadata !DIExpression()), !dbg !11964
  call void @llvm.lifetime.start.p0(i64 8, ptr %elm) #18, !dbg !11965
  tail call void @llvm.dbg.declare(metadata ptr %elm, metadata !11953, metadata !DIExpression()), !dbg !11966
  %0 = load ptr, ptr @tcaches, align 8, !dbg !11967, !tbaa !2658
  %1 = load i32, ptr %ind.addr, align 4, !dbg !11968, !tbaa !2791
  %idxprom = zext i32 %1 to i64, !dbg !11967
  %arrayidx = getelementptr inbounds %struct.tcaches_s, ptr %0, i64 %idxprom, !dbg !11967
  store ptr %arrayidx, ptr %elm, align 8, !dbg !11966, !tbaa !2658
  %2 = load ptr, ptr %elm, align 8, !dbg !11969, !tbaa !2658
  %3 = getelementptr inbounds %struct.tcaches_s, ptr %2, i32 0, i32 0, !dbg !11969
  %4 = load ptr, ptr %3, align 8, !dbg !11969, !tbaa !2810
  %cmp = icmp eq ptr %4, null, !dbg !11969
  %lnot = xor i1 %cmp, true, !dbg !11969
  %lnot1 = xor i1 %lnot, true, !dbg !11969
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11969
  %conv = sext i32 %lnot.ext to i64, !dbg !11969
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !11969
  %tobool = icmp ne i64 %expval, 0, !dbg !11969
  br i1 %tobool, label %if.then, label %if.else, !dbg !11971

if.then:                                          ; preds = %entry
  %5 = load i32, ptr %ind.addr, align 4, !dbg !11972, !tbaa !2791
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.162, i32 noundef %5), !dbg !11974
  call void @abort() #19, !dbg !11975
  unreachable, !dbg !11975

if.else:                                          ; preds = %entry
  %6 = load ptr, ptr %elm, align 8, !dbg !11976, !tbaa !2658
  %7 = getelementptr inbounds %struct.tcaches_s, ptr %6, i32 0, i32 0, !dbg !11976
  %8 = load ptr, ptr %7, align 8, !dbg !11976, !tbaa !2810
  %cmp2 = icmp eq ptr %8, inttoptr (i64 1 to ptr), !dbg !11976
  %lnot4 = xor i1 %cmp2, true, !dbg !11976
  %lnot6 = xor i1 %lnot4, true, !dbg !11976
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !11976
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !11976
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0), !dbg !11976
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !11976
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !11978

if.then11:                                        ; preds = %if.else
  %9 = load ptr, ptr %tsd.addr, align 8, !dbg !11979, !tbaa !2658
  %call = call ptr @tcache_create_explicit(ptr noundef %9), !dbg !11981
  %10 = load ptr, ptr %elm, align 8, !dbg !11982, !tbaa !2658
  %11 = getelementptr inbounds %struct.tcaches_s, ptr %10, i32 0, i32 0, !dbg !11983
  store ptr %call, ptr %11, align 8, !dbg !11984, !tbaa !2810
  br label %if.end, !dbg !11985

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end
  %12 = load ptr, ptr %elm, align 8, !dbg !11986, !tbaa !2658
  %13 = getelementptr inbounds %struct.tcaches_s, ptr %12, i32 0, i32 0, !dbg !11987
  %14 = load ptr, ptr %13, align 8, !dbg !11987, !tbaa !2810
  call void @llvm.lifetime.end.p0(i64 8, ptr %elm) #18, !dbg !11988
  ret ptr %14, !dbg !11989
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @tcache_available(ptr noundef %tsd) #3 !dbg !11990 {
entry:
  %retval = alloca i1, align 1
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !11992, metadata !DIExpression()), !dbg !11993
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !11994, !tbaa !2658
  %call = call zeroext i1 @tsd_tcache_enabled_get(ptr noundef %0), !dbg !11994
  %lnot = xor i1 %call, true, !dbg !11994
  %lnot1 = xor i1 %lnot, true, !dbg !11994
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11994
  %conv = sext i32 %lnot.ext to i64, !dbg !11994
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !11994
  %tobool = icmp ne i64 %expval, 0, !dbg !11994
  br i1 %tobool, label %if.then, label %if.end, !dbg !11996

if.then:                                          ; preds = %entry
  store i1 true, ptr %retval, align 1, !dbg !11997
  br label %return, !dbg !11997

if.end:                                           ; preds = %entry
  store i1 false, ptr %retval, align 1, !dbg !11999
  br label %return, !dbg !11999

return:                                           ; preds = %if.end, %if.then
  %1 = load i1, ptr %retval, align 1, !dbg !12000
  ret i1 %1, !dbg !12000
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @tsd_tcache_enabled_get(ptr noundef %tsd) #3 !dbg !12001 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12003, metadata !DIExpression()), !dbg !12004
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12004, !tbaa !2658
  %call = call ptr @tsd_tcache_enabledp_get(ptr noundef %0), !dbg !12004
  %1 = load i8, ptr %call, align 1, !dbg !12004, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !12004
  ret i1 %tobool, !dbg !12004
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_tcache_enabledp_get(ptr noundef %tsd) #3 !dbg !12005 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12009, metadata !DIExpression()), !dbg !12011
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !12011
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !12010, metadata !DIExpression()), !dbg !12011
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12011, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !12011
  store i8 %call, ptr %state, align 1, !dbg !12011, !tbaa !2810
  br label %do.body, !dbg !12011

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12012

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12012

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !12011, !tbaa !2658
  %call1 = call ptr @tsd_tcache_enabledp_get_unsafe(ptr noundef %1), !dbg !12011
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !12011
  ret ptr %call1, !dbg !12011
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_tcache_enabledp_get_unsafe(ptr noundef %tsd) #3 !dbg !12014 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12016, metadata !DIExpression()), !dbg !12017
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12017, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_enabled = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 0, !dbg !12017
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_enabled, !dbg !12017
}

declare !dbg !12018 ptr @tcache_create_explicit(ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @emap_alloc_ctx_try_lookup_fast(ptr noundef %tsd, ptr noundef %emap, ptr noundef %ptr, ptr noundef %alloc_ctx) #3 !dbg !12019 {
entry:
  %retval = alloca i1, align 1
  %tsd.addr = alloca ptr, align 8
  %emap.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %alloc_ctx.addr = alloca ptr, align 8
  %rtree_ctx = alloca ptr, align 8
  %metadata = alloca %struct.rtree_metadata_s, align 4
  %err = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12023, metadata !DIExpression()), !dbg !12030
  store ptr %emap, ptr %emap.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %emap.addr, metadata !12024, metadata !DIExpression()), !dbg !12031
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12025, metadata !DIExpression()), !dbg !12032
  store ptr %alloc_ctx, ptr %alloc_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx.addr, metadata !12026, metadata !DIExpression()), !dbg !12033
  call void @llvm.lifetime.start.p0(i64 8, ptr %rtree_ctx) #18, !dbg !12034
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx, metadata !12027, metadata !DIExpression()), !dbg !12035
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12036, !tbaa !2658
  %call = call ptr @tsd_rtree_ctxp_get_unsafe(ptr noundef %0), !dbg !12037
  store ptr %call, ptr %rtree_ctx, align 8, !dbg !12035, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 12, ptr %metadata) #18, !dbg !12038
  tail call void @llvm.dbg.declare(metadata ptr %metadata, metadata !12028, metadata !DIExpression()), !dbg !12039
  call void @llvm.lifetime.start.p0(i64 1, ptr %err) #18, !dbg !12040
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !12029, metadata !DIExpression()), !dbg !12041
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !12042, !tbaa !2658
  %call1 = call ptr @tsd_tsdn(ptr noundef %1), !dbg !12043
  %2 = load ptr, ptr %emap.addr, align 8, !dbg !12044, !tbaa !2658
  %rtree = getelementptr inbounds %struct.emap_s, ptr %2, i32 0, i32 0, !dbg !12045
  %3 = load ptr, ptr %rtree_ctx, align 8, !dbg !12046, !tbaa !2658
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !12047, !tbaa !2658
  %5 = ptrtoint ptr %4 to i64, !dbg !12048
  %call2 = call zeroext i1 @rtree_metadata_try_read_fast(ptr noundef %call1, ptr noundef %rtree, ptr noundef %3, i64 noundef %5, ptr noundef %metadata), !dbg !12049
  %frombool = zext i1 %call2 to i8, !dbg !12041
  store i8 %frombool, ptr %err, align 1, !dbg !12041, !tbaa !2695
  %6 = load i8, ptr %err, align 1, !dbg !12050, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %6 to i1, !dbg !12050
  br i1 %tobool, label %if.then, label %if.end, !dbg !12052

if.then:                                          ; preds = %entry
  store i1 true, ptr %retval, align 1, !dbg !12053
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12053

if.end:                                           ; preds = %entry
  %szind = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata, i32 0, i32 0, !dbg !12055
  %7 = load i32, ptr %szind, align 4, !dbg !12055, !tbaa !5314
  %8 = load ptr, ptr %alloc_ctx.addr, align 8, !dbg !12056, !tbaa !2658
  %szind3 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %8, i32 0, i32 0, !dbg !12057
  store i32 %7, ptr %szind3, align 4, !dbg !12058, !tbaa !4364
  %slab = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata, i32 0, i32 3, !dbg !12059
  %9 = load i8, ptr %slab, align 1, !dbg !12059, !tbaa !5319, !range !2708, !noundef !2709
  %tobool4 = trunc i8 %9 to i1, !dbg !12059
  %10 = load ptr, ptr %alloc_ctx.addr, align 8, !dbg !12060, !tbaa !2658
  %slab5 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %10, i32 0, i32 1, !dbg !12061
  %frombool6 = zext i1 %tobool4 to i8, !dbg !12062
  store i8 %frombool6, ptr %slab5, align 4, !dbg !12062, !tbaa !4461
  store i1 false, ptr %retval, align 1, !dbg !12063
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12063

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 1, ptr %err) #18, !dbg !12064
  call void @llvm.lifetime.end.p0(i64 12, ptr %metadata) #18, !dbg !12064
  call void @llvm.lifetime.end.p0(i64 8, ptr %rtree_ctx) #18, !dbg !12064
  %11 = load i1, ptr %retval, align 1, !dbg !12064
  ret i1 %11, !dbg !12064
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @free_fastpath_nonfast_aligned(ptr noundef %ptr, i1 noundef zeroext %check_prof) #3 !dbg !12065 {
entry:
  %ptr.addr = alloca ptr, align 8
  %check_prof.addr = alloca i8, align 1
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12069, metadata !DIExpression()), !dbg !12071
  %frombool = zext i1 %check_prof to i8
  store i8 %frombool, ptr %check_prof.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %check_prof.addr, metadata !12070, metadata !DIExpression()), !dbg !12072
  ret i1 false, !dbg !12073
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @te_free_fastpath_ctx(ptr noundef %tsd, ptr noundef %deallocated, ptr noundef %threshold) #3 !dbg !12074 {
entry:
  %tsd.addr = alloca ptr, align 8
  %deallocated.addr = alloca ptr, align 8
  %threshold.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12076, metadata !DIExpression()), !dbg !12079
  store ptr %deallocated, ptr %deallocated.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %deallocated.addr, metadata !12077, metadata !DIExpression()), !dbg !12080
  store ptr %threshold, ptr %threshold.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %threshold.addr, metadata !12078, metadata !DIExpression()), !dbg !12081
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12082, !tbaa !2658
  %call = call ptr @tsd_thread_deallocatedp_get_unsafe(ptr noundef %0), !dbg !12083
  %1 = load i64, ptr %call, align 8, !dbg !12084, !tbaa !2663
  %2 = load ptr, ptr %deallocated.addr, align 8, !dbg !12085, !tbaa !2658
  store i64 %1, ptr %2, align 8, !dbg !12086, !tbaa !2663
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !12087, !tbaa !2658
  %call1 = call ptr @tsd_thread_deallocated_next_event_fastp_get_unsafe(ptr noundef %3), !dbg !12088
  %4 = load i64, ptr %call1, align 8, !dbg !12089, !tbaa !2663
  %5 = load ptr, ptr %threshold.addr, align 8, !dbg !12090, !tbaa !2658
  store i64 %4, ptr %5, align 8, !dbg !12091, !tbaa !2663
  br label %do.body, !dbg !12092

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12093

do.end:                                           ; preds = %do.body
  ret void, !dbg !12095
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @maybe_check_alloc_ctx(ptr noundef %tsd, ptr noundef %ptr, ptr noundef %alloc_ctx) #3 !dbg !12096 {
entry:
  %tsd.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %alloc_ctx.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12100, metadata !DIExpression()), !dbg !12103
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12101, metadata !DIExpression()), !dbg !12104
  store ptr %alloc_ctx, ptr %alloc_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx.addr, metadata !12102, metadata !DIExpression()), !dbg !12105
  ret i1 false, !dbg !12106
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocatedp_get(ptr noundef %tsd) #3 !dbg !12107 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12109, metadata !DIExpression()), !dbg !12111
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !12111
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !12110, metadata !DIExpression()), !dbg !12111
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12111, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !12111
  store i8 %call, ptr %state, align 1, !dbg !12111, !tbaa !2810
  br label %do.body, !dbg !12111

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12112

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12112

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !12111, !tbaa !2658
  %call1 = call ptr @tsd_thread_deallocatedp_get_unsafe(ptr noundef %1), !dbg !12111
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !12111
  ret ptr %call1, !dbg !12111
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_rtree_ctxp_get_unsafe(ptr noundef %tsd) #3 !dbg !12114 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12118, metadata !DIExpression()), !dbg !12119
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12119, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_rtree_ctx = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 28, !dbg !12119
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_rtree_ctx, !dbg !12119
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @rtree_metadata_try_read_fast(ptr noundef %tsdn, ptr noundef %rtree, ptr noundef %rtree_ctx, i64 noundef %key, ptr noundef %r_rtree_metadata) #4 !dbg !12120 {
entry:
  %retval = alloca i1, align 1
  %tsdn.addr = alloca ptr, align 8
  %rtree.addr = alloca ptr, align 8
  %rtree_ctx.addr = alloca ptr, align 8
  %key.addr = alloca i64, align 8
  %r_rtree_metadata.addr = alloca ptr, align 8
  %elm = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.rtree_contents_s, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12126, metadata !DIExpression()), !dbg !12132
  store ptr %rtree, ptr %rtree.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree.addr, metadata !12127, metadata !DIExpression()), !dbg !12133
  store ptr %rtree_ctx, ptr %rtree_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx.addr, metadata !12128, metadata !DIExpression()), !dbg !12134
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12129, metadata !DIExpression()), !dbg !12135
  store ptr %r_rtree_metadata, ptr %r_rtree_metadata.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %r_rtree_metadata.addr, metadata !12130, metadata !DIExpression()), !dbg !12136
  call void @llvm.lifetime.start.p0(i64 8, ptr %elm) #18, !dbg !12137
  tail call void @llvm.dbg.declare(metadata ptr %elm, metadata !12131, metadata !DIExpression()), !dbg !12138
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12139, !tbaa !2658
  %1 = load ptr, ptr %rtree.addr, align 8, !dbg !12141, !tbaa !2658
  %2 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12142, !tbaa !2658
  %3 = load i64, ptr %key.addr, align 8, !dbg !12143, !tbaa !2663
  %call = call zeroext i1 @rtree_leaf_elm_lookup_fast(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %elm), !dbg !12144
  br i1 %call, label %if.then, label %if.end, !dbg !12145

if.then:                                          ; preds = %entry
  store i1 true, ptr %retval, align 1, !dbg !12146
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12146

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !12148

do.body:                                          ; preds = %if.end
  br label %do.cond, !dbg !12149

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12149

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %r_rtree_metadata.addr, align 8, !dbg !12151, !tbaa !2658
  %5 = load ptr, ptr %tsdn.addr, align 8, !dbg !12152, !tbaa !2658
  %6 = load ptr, ptr %rtree.addr, align 8, !dbg !12153, !tbaa !2658
  %7 = load ptr, ptr %elm, align 8, !dbg !12154, !tbaa !2658
  call void @rtree_leaf_elm_read(ptr sret(%struct.rtree_contents_s) align 8 %tmp, ptr noundef %5, ptr noundef %6, ptr noundef %7, i1 noundef zeroext true), !dbg !12155
  %metadata = getelementptr inbounds %struct.rtree_contents_s, ptr %tmp, i32 0, i32 1, !dbg !12156
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %4, ptr align 8 %metadata, i64 12, i1 false), !dbg !12156, !tbaa.struct !12157
  store i1 false, ptr %retval, align 1, !dbg !12158
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12158

cleanup:                                          ; preds = %do.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %elm) #18, !dbg !12159
  %8 = load i1, ptr %retval, align 1, !dbg !12159
  ret i1 %8, !dbg !12159
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @rtree_leaf_elm_lookup_fast(ptr noundef %tsdn, ptr noundef %rtree, ptr noundef %rtree_ctx, i64 noundef %key, ptr noundef %elm) #3 !dbg !12160 {
entry:
  %retval = alloca i1, align 1
  %tsdn.addr = alloca ptr, align 8
  %rtree.addr = alloca ptr, align 8
  %rtree_ctx.addr = alloca ptr, align 8
  %key.addr = alloca i64, align 8
  %elm.addr = alloca ptr, align 8
  %slot = alloca i64, align 8
  %leafkey = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %leaf = alloca ptr, align 8
  %subkey = alloca i64, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12165, metadata !DIExpression()), !dbg !12174
  store ptr %rtree, ptr %rtree.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree.addr, metadata !12166, metadata !DIExpression()), !dbg !12175
  store ptr %rtree_ctx, ptr %rtree_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx.addr, metadata !12167, metadata !DIExpression()), !dbg !12176
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12168, metadata !DIExpression()), !dbg !12177
  store ptr %elm, ptr %elm.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %elm.addr, metadata !12169, metadata !DIExpression()), !dbg !12178
  call void @llvm.lifetime.start.p0(i64 8, ptr %slot) #18, !dbg !12179
  tail call void @llvm.dbg.declare(metadata ptr %slot, metadata !12170, metadata !DIExpression()), !dbg !12180
  %0 = load i64, ptr %key.addr, align 8, !dbg !12181, !tbaa !2663
  %call = call i64 @rtree_cache_direct_map(i64 noundef %0), !dbg !12182
  store i64 %call, ptr %slot, align 8, !dbg !12180, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %leafkey) #18, !dbg !12183
  tail call void @llvm.dbg.declare(metadata ptr %leafkey, metadata !12171, metadata !DIExpression()), !dbg !12184
  %1 = load i64, ptr %key.addr, align 8, !dbg !12185, !tbaa !2663
  %call1 = call i64 @rtree_leafkey(i64 noundef %1), !dbg !12186
  store i64 %call1, ptr %leafkey, align 8, !dbg !12184, !tbaa !2663
  br label %do.body, !dbg !12187

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12188

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12188

do.end:                                           ; preds = %do.cond
  %2 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12190, !tbaa !2658
  %cache = getelementptr inbounds %struct.rtree_ctx_s, ptr %2, i32 0, i32 0, !dbg !12190
  %3 = load i64, ptr %slot, align 8, !dbg !12190, !tbaa !2663
  %arrayidx = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache, i64 0, i64 %3, !dbg !12190
  %leafkey2 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx, i32 0, i32 0, !dbg !12190
  %4 = load i64, ptr %leafkey2, align 8, !dbg !12190, !tbaa !12192
  %5 = load i64, ptr %leafkey, align 8, !dbg !12190, !tbaa !2663
  %cmp = icmp ne i64 %4, %5, !dbg !12190
  %lnot = xor i1 %cmp, true, !dbg !12190
  %lnot3 = xor i1 %lnot, true, !dbg !12190
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12190
  %conv = sext i32 %lnot.ext to i64, !dbg !12190
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12190
  %tobool = icmp ne i64 %expval, 0, !dbg !12190
  br i1 %tobool, label %if.then, label %if.end, !dbg !12194

if.then:                                          ; preds = %do.end
  store i1 true, ptr %retval, align 1, !dbg !12195
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12195

if.end:                                           ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %leaf) #18, !dbg !12197
  tail call void @llvm.dbg.declare(metadata ptr %leaf, metadata !12172, metadata !DIExpression()), !dbg !12198
  %6 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12199, !tbaa !2658
  %cache4 = getelementptr inbounds %struct.rtree_ctx_s, ptr %6, i32 0, i32 0, !dbg !12200
  %7 = load i64, ptr %slot, align 8, !dbg !12201, !tbaa !2663
  %arrayidx5 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache4, i64 0, i64 %7, !dbg !12199
  %leaf6 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx5, i32 0, i32 1, !dbg !12202
  %8 = load ptr, ptr %leaf6, align 8, !dbg !12202, !tbaa !12203
  store ptr %8, ptr %leaf, align 8, !dbg !12198, !tbaa !2658
  br label %do.body7, !dbg !12204

do.body7:                                         ; preds = %if.end
  br label %do.cond8, !dbg !12205

do.cond8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !12205

do.end9:                                          ; preds = %do.cond8
  call void @llvm.lifetime.start.p0(i64 8, ptr %subkey) #18, !dbg !12207
  tail call void @llvm.dbg.declare(metadata ptr %subkey, metadata !12173, metadata !DIExpression()), !dbg !12208
  %9 = load i64, ptr %key.addr, align 8, !dbg !12209, !tbaa !2663
  %call10 = call i64 @rtree_subkey(i64 noundef %9, i32 noundef 1), !dbg !12210
  store i64 %call10, ptr %subkey, align 8, !dbg !12208, !tbaa !2663
  %10 = load ptr, ptr %leaf, align 8, !dbg !12211, !tbaa !2658
  %11 = load i64, ptr %subkey, align 8, !dbg !12212, !tbaa !2663
  %arrayidx11 = getelementptr inbounds %struct.rtree_leaf_elm_s, ptr %10, i64 %11, !dbg !12211
  %12 = load ptr, ptr %elm.addr, align 8, !dbg !12213, !tbaa !2658
  store ptr %arrayidx11, ptr %12, align 8, !dbg !12214, !tbaa !2658
  store i1 false, ptr %retval, align 1, !dbg !12215
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %subkey) #18, !dbg !12216
  call void @llvm.lifetime.end.p0(i64 8, ptr %leaf) #18, !dbg !12216
  br label %cleanup

cleanup:                                          ; preds = %do.end9, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %leafkey) #18, !dbg !12216
  call void @llvm.lifetime.end.p0(i64 8, ptr %slot) #18, !dbg !12216
  %13 = load i1, ptr %retval, align 1, !dbg !12216
  ret i1 %13, !dbg !12216
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @rtree_leaf_elm_read(ptr noalias sret(%struct.rtree_contents_s) align 8 %agg.result, ptr noundef %tsdn, ptr noundef %rtree, ptr noundef %elm, i1 noundef zeroext %dependent) #3 !dbg !12217 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %rtree.addr = alloca ptr, align 8
  %elm.addr = alloca ptr, align 8
  %dependent.addr = alloca i8, align 1
  %bits = alloca i64, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12226, metadata !DIExpression()), !dbg !12232
  store ptr %rtree, ptr %rtree.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree.addr, metadata !12227, metadata !DIExpression()), !dbg !12233
  store ptr %elm, ptr %elm.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %elm.addr, metadata !12228, metadata !DIExpression()), !dbg !12234
  %frombool = zext i1 %dependent to i8
  store i8 %frombool, ptr %dependent.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %dependent.addr, metadata !12229, metadata !DIExpression()), !dbg !12235
  call void @llvm.lifetime.start.p0(i64 8, ptr %bits) #18, !dbg !12236
  tail call void @llvm.dbg.declare(metadata ptr %bits, metadata !12230, metadata !DIExpression()), !dbg !12237
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12238, !tbaa !2658
  %1 = load ptr, ptr %rtree.addr, align 8, !dbg !12239, !tbaa !2658
  %2 = load ptr, ptr %elm.addr, align 8, !dbg !12240, !tbaa !2658
  %3 = load i8, ptr %dependent.addr, align 1, !dbg !12241, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !12241
  %call = call i64 @rtree_leaf_elm_bits_read(ptr noundef %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %tobool), !dbg !12242
  store i64 %call, ptr %bits, align 8, !dbg !12237, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %agg.result, metadata !12231, metadata !DIExpression()), !dbg !12243
  %4 = load i64, ptr %bits, align 8, !dbg !12244, !tbaa !2663
  call void @rtree_leaf_elm_bits_decode(ptr sret(%struct.rtree_contents_s) align 8 %agg.result, i64 noundef %4), !dbg !12245
  call void @llvm.lifetime.end.p0(i64 8, ptr %bits) #18, !dbg !12246
  ret void, !dbg !12246
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @rtree_cache_direct_map(i64 noundef %key) #3 !dbg !12247 {
entry:
  %key.addr = alloca i64, align 8
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12251, metadata !DIExpression()), !dbg !12252
  %0 = load i64, ptr %key.addr, align 8, !dbg !12253, !tbaa !2663
  %call = call i32 @rtree_leaf_maskbits(), !dbg !12254
  %sh_prom = zext i32 %call to i64, !dbg !12255
  %shr = lshr i64 %0, %sh_prom, !dbg !12255
  %and = and i64 %shr, 15, !dbg !12256
  ret i64 %and, !dbg !12257
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @rtree_leafkey(i64 noundef %key) #3 !dbg !12258 {
entry:
  %key.addr = alloca i64, align 8
  %mask = alloca i64, align 8
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12262, metadata !DIExpression()), !dbg !12264
  call void @llvm.lifetime.start.p0(i64 8, ptr %mask) #18, !dbg !12265
  tail call void @llvm.dbg.declare(metadata ptr %mask, metadata !12263, metadata !DIExpression()), !dbg !12266
  %call = call i32 @rtree_leaf_maskbits(), !dbg !12267
  %sh_prom = zext i32 %call to i64, !dbg !12268
  %shl = shl i64 1, %sh_prom, !dbg !12268
  %sub = sub i64 %shl, 1, !dbg !12269
  %not = xor i64 %sub, -1, !dbg !12270
  store i64 %not, ptr %mask, align 8, !dbg !12266, !tbaa !2663
  %0 = load i64, ptr %key.addr, align 8, !dbg !12271, !tbaa !2663
  %1 = load i64, ptr %mask, align 8, !dbg !12272, !tbaa !2663
  %and = and i64 %0, %1, !dbg !12273
  call void @llvm.lifetime.end.p0(i64 8, ptr %mask) #18, !dbg !12274
  ret i64 %and, !dbg !12275
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @rtree_subkey(i64 noundef %key, i32 noundef %level) #3 !dbg !12276 {
entry:
  %key.addr = alloca i64, align 8
  %level.addr = alloca i32, align 4
  %ptrbits = alloca i32, align 4
  %cumbits = alloca i32, align 4
  %shiftbits = alloca i32, align 4
  %maskbits = alloca i32, align 4
  %mask = alloca i64, align 8
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12280, metadata !DIExpression()), !dbg !12287
  store i32 %level, ptr %level.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !12281, metadata !DIExpression()), !dbg !12288
  call void @llvm.lifetime.start.p0(i64 4, ptr %ptrbits) #18, !dbg !12289
  tail call void @llvm.dbg.declare(metadata ptr %ptrbits, metadata !12282, metadata !DIExpression()), !dbg !12290
  store i32 64, ptr %ptrbits, align 4, !dbg !12290, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %cumbits) #18, !dbg !12291
  tail call void @llvm.dbg.declare(metadata ptr %cumbits, metadata !12283, metadata !DIExpression()), !dbg !12292
  %0 = load i32, ptr %level.addr, align 4, !dbg !12293, !tbaa !2791
  %idxprom = zext i32 %0 to i64, !dbg !12294
  %arrayidx = getelementptr inbounds [2 x %struct.rtree_level_s], ptr @rtree_levels, i64 0, i64 %idxprom, !dbg !12294
  %cumbits1 = getelementptr inbounds %struct.rtree_level_s, ptr %arrayidx, i32 0, i32 1, !dbg !12295
  %1 = load i32, ptr %cumbits1, align 4, !dbg !12295, !tbaa !12296
  store i32 %1, ptr %cumbits, align 4, !dbg !12292, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %shiftbits) #18, !dbg !12298
  tail call void @llvm.dbg.declare(metadata ptr %shiftbits, metadata !12284, metadata !DIExpression()), !dbg !12299
  %2 = load i32, ptr %ptrbits, align 4, !dbg !12300, !tbaa !2791
  %3 = load i32, ptr %cumbits, align 4, !dbg !12301, !tbaa !2791
  %sub = sub i32 %2, %3, !dbg !12302
  store i32 %sub, ptr %shiftbits, align 4, !dbg !12299, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %maskbits) #18, !dbg !12303
  tail call void @llvm.dbg.declare(metadata ptr %maskbits, metadata !12285, metadata !DIExpression()), !dbg !12304
  %4 = load i32, ptr %level.addr, align 4, !dbg !12305, !tbaa !2791
  %idxprom2 = zext i32 %4 to i64, !dbg !12306
  %arrayidx3 = getelementptr inbounds [2 x %struct.rtree_level_s], ptr @rtree_levels, i64 0, i64 %idxprom2, !dbg !12306
  %bits = getelementptr inbounds %struct.rtree_level_s, ptr %arrayidx3, i32 0, i32 0, !dbg !12307
  %5 = load i32, ptr %bits, align 8, !dbg !12307, !tbaa !12308
  store i32 %5, ptr %maskbits, align 4, !dbg !12304, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %mask) #18, !dbg !12309
  tail call void @llvm.dbg.declare(metadata ptr %mask, metadata !12286, metadata !DIExpression()), !dbg !12310
  %6 = load i32, ptr %maskbits, align 4, !dbg !12311, !tbaa !2791
  %sh_prom = zext i32 %6 to i64, !dbg !12312
  %shl = shl i64 1, %sh_prom, !dbg !12312
  %sub4 = sub i64 %shl, 1, !dbg !12313
  store i64 %sub4, ptr %mask, align 8, !dbg !12310, !tbaa !2663
  %7 = load i64, ptr %key.addr, align 8, !dbg !12314, !tbaa !2663
  %8 = load i32, ptr %shiftbits, align 4, !dbg !12315, !tbaa !2791
  %sh_prom5 = zext i32 %8 to i64, !dbg !12316
  %shr = lshr i64 %7, %sh_prom5, !dbg !12316
  %9 = load i64, ptr %mask, align 8, !dbg !12317, !tbaa !2663
  %and = and i64 %shr, %9, !dbg !12318
  call void @llvm.lifetime.end.p0(i64 8, ptr %mask) #18, !dbg !12319
  call void @llvm.lifetime.end.p0(i64 4, ptr %maskbits) #18, !dbg !12319
  call void @llvm.lifetime.end.p0(i64 4, ptr %shiftbits) #18, !dbg !12319
  call void @llvm.lifetime.end.p0(i64 4, ptr %cumbits) #18, !dbg !12319
  call void @llvm.lifetime.end.p0(i64 4, ptr %ptrbits) #18, !dbg !12319
  ret i64 %and, !dbg !12320
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @rtree_leaf_maskbits() #3 !dbg !12321 {
entry:
  %ptrbits = alloca i32, align 4
  %cumbits = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %ptrbits) #18, !dbg !12325
  tail call void @llvm.dbg.declare(metadata ptr %ptrbits, metadata !12323, metadata !DIExpression()), !dbg !12326
  store i32 64, ptr %ptrbits, align 4, !dbg !12326, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %cumbits) #18, !dbg !12327
  tail call void @llvm.dbg.declare(metadata ptr %cumbits, metadata !12324, metadata !DIExpression()), !dbg !12328
  store i32 34, ptr %cumbits, align 4, !dbg !12328, !tbaa !2791
  %0 = load i32, ptr %ptrbits, align 4, !dbg !12329, !tbaa !2791
  %1 = load i32, ptr %cumbits, align 4, !dbg !12330, !tbaa !2791
  %sub = sub i32 %0, %1, !dbg !12331
  call void @llvm.lifetime.end.p0(i64 4, ptr %cumbits) #18, !dbg !12332
  call void @llvm.lifetime.end.p0(i64 4, ptr %ptrbits) #18, !dbg !12332
  ret i32 %sub, !dbg !12333
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @rtree_leaf_elm_bits_read(ptr noundef %tsdn, ptr noundef %rtree, ptr noundef %elm, i1 noundef zeroext %dependent) #3 !dbg !12334 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %rtree.addr = alloca ptr, align 8
  %elm.addr = alloca ptr, align 8
  %dependent.addr = alloca i8, align 1
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12338, metadata !DIExpression()), !dbg !12342
  store ptr %rtree, ptr %rtree.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree.addr, metadata !12339, metadata !DIExpression()), !dbg !12343
  store ptr %elm, ptr %elm.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %elm.addr, metadata !12340, metadata !DIExpression()), !dbg !12344
  %frombool = zext i1 %dependent to i8
  store i8 %frombool, ptr %dependent.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %dependent.addr, metadata !12341, metadata !DIExpression()), !dbg !12345
  %0 = load ptr, ptr %elm.addr, align 8, !dbg !12346, !tbaa !2658
  %le_bits = getelementptr inbounds %struct.rtree_leaf_elm_s, ptr %0, i32 0, i32 0, !dbg !12347
  %1 = load i8, ptr %dependent.addr, align 1, !dbg !12348, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !12348
  %2 = zext i1 %tobool to i64, !dbg !12348
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !12348
  %call = call ptr @atomic_load_p(ptr noundef %le_bits, i32 noundef %cond), !dbg !12349
  %3 = ptrtoint ptr %call to i64, !dbg !12350
  ret i64 %3, !dbg !12351
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @rtree_leaf_elm_bits_decode(ptr noalias sret(%struct.rtree_contents_s) align 8 %agg.result, i64 noundef %bits) #3 !dbg !12352 {
entry:
  %bits.addr = alloca i64, align 8
  %state_bits = alloca i64, align 8
  %low_bit_mask = alloca i64, align 8
  store i64 %bits, ptr %bits.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %bits.addr, metadata !12356, metadata !DIExpression()), !dbg !12360
  tail call void @llvm.dbg.declare(metadata ptr %agg.result, metadata !12357, metadata !DIExpression()), !dbg !12361
  %0 = load i64, ptr %bits.addr, align 8, !dbg !12362, !tbaa !2663
  %shr = lshr i64 %0, 48, !dbg !12363
  %conv = trunc i64 %shr to i32, !dbg !12362
  %metadata = getelementptr inbounds %struct.rtree_contents_s, ptr %agg.result, i32 0, i32 1, !dbg !12364
  %szind = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata, i32 0, i32 0, !dbg !12365
  store i32 %conv, ptr %szind, align 8, !dbg !12366, !tbaa !12367
  %1 = load i64, ptr %bits.addr, align 8, !dbg !12368, !tbaa !2663
  %and = and i64 %1, 1, !dbg !12369
  %tobool = icmp ne i64 %and, 0, !dbg !12370
  %metadata1 = getelementptr inbounds %struct.rtree_contents_s, ptr %agg.result, i32 0, i32 1, !dbg !12371
  %slab = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata1, i32 0, i32 3, !dbg !12372
  %frombool = zext i1 %tobool to i8, !dbg !12373
  store i8 %frombool, ptr %slab, align 1, !dbg !12373, !tbaa !12374
  %2 = load i64, ptr %bits.addr, align 8, !dbg !12375, !tbaa !2663
  %and2 = and i64 %2, 2, !dbg !12376
  %tobool3 = icmp ne i64 %and2, 0, !dbg !12377
  %metadata4 = getelementptr inbounds %struct.rtree_contents_s, ptr %agg.result, i32 0, i32 1, !dbg !12378
  %is_head = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata4, i32 0, i32 2, !dbg !12379
  %frombool5 = zext i1 %tobool3 to i8, !dbg !12380
  store i8 %frombool5, ptr %is_head, align 8, !dbg !12380, !tbaa !12381
  call void @llvm.lifetime.start.p0(i64 8, ptr %state_bits) #18, !dbg !12382
  tail call void @llvm.dbg.declare(metadata ptr %state_bits, metadata !12358, metadata !DIExpression()), !dbg !12383
  %3 = load i64, ptr %bits.addr, align 8, !dbg !12384, !tbaa !2663
  %and6 = and i64 %3, 28, !dbg !12385
  %shr7 = lshr i64 %and6, 2, !dbg !12386
  store i64 %shr7, ptr %state_bits, align 8, !dbg !12383, !tbaa !2663
  br label %do.body, !dbg !12387

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12388

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12388

do.end:                                           ; preds = %do.cond
  %4 = load i64, ptr %state_bits, align 8, !dbg !12390, !tbaa !2663
  %conv8 = trunc i64 %4 to i32, !dbg !12391
  %metadata9 = getelementptr inbounds %struct.rtree_contents_s, ptr %agg.result, i32 0, i32 1, !dbg !12392
  %state = getelementptr inbounds %struct.rtree_metadata_s, ptr %metadata9, i32 0, i32 1, !dbg !12393
  store i32 %conv8, ptr %state, align 4, !dbg !12394, !tbaa !12395
  call void @llvm.lifetime.start.p0(i64 8, ptr %low_bit_mask) #18, !dbg !12396
  tail call void @llvm.dbg.declare(metadata ptr %low_bit_mask, metadata !12359, metadata !DIExpression()), !dbg !12397
  store i64 -128, ptr %low_bit_mask, align 8, !dbg !12397, !tbaa !2663
  %5 = load i64, ptr %bits.addr, align 8, !dbg !12398, !tbaa !2663
  %shl = shl i64 %5, 16, !dbg !12399
  %shr10 = ashr i64 %shl, 16, !dbg !12400
  %6 = load i64, ptr %low_bit_mask, align 8, !dbg !12401, !tbaa !2663
  %and11 = and i64 %shr10, %6, !dbg !12402
  %7 = inttoptr i64 %and11 to ptr, !dbg !12403
  %edata = getelementptr inbounds %struct.rtree_contents_s, ptr %agg.result, i32 0, i32 0, !dbg !12404
  store ptr %7, ptr %edata, align 8, !dbg !12405, !tbaa !5275
  br label %do.body12, !dbg !12406

do.body12:                                        ; preds = %do.end
  br label %do.cond13, !dbg !12407

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !12407

do.end14:                                         ; preds = %do.cond13
  call void @llvm.lifetime.end.p0(i64 8, ptr %low_bit_mask) #18, !dbg !12409
  call void @llvm.lifetime.end.p0(i64 8, ptr %state_bits) #18, !dbg !12409
  ret void, !dbg !12409
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocatedp_get_unsafe(ptr noundef %tsd) #3 !dbg !12410 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12412, metadata !DIExpression()), !dbg !12413
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12413, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 32, !dbg !12413
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated, !dbg !12413
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocated_next_event_fastp_get_unsafe(ptr noundef %tsd) #3 !dbg !12414 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12416, metadata !DIExpression()), !dbg !12417
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12417, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_next_event_fast = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 33, !dbg !12417
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_next_event_fast, !dbg !12417
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @iralloct(ptr noundef %tsdn, ptr noundef %ptr, i64 noundef %oldsize, i64 noundef %size, i64 noundef %alignment, i1 noundef zeroext %zero, ptr noundef %tcache, ptr noundef %arena, ptr noundef %hook_args) #3 !dbg !12418 {
entry:
  %retval = alloca ptr, align 8
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %oldsize.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %zero.addr = alloca i8, align 1
  %tcache.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  %hook_args.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12423, metadata !DIExpression()), !dbg !12432
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12424, metadata !DIExpression()), !dbg !12433
  store i64 %oldsize, ptr %oldsize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %oldsize.addr, metadata !12425, metadata !DIExpression()), !dbg !12434
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !12426, metadata !DIExpression()), !dbg !12435
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !12427, metadata !DIExpression()), !dbg !12436
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !12428, metadata !DIExpression()), !dbg !12437
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !12429, metadata !DIExpression()), !dbg !12438
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !12430, metadata !DIExpression()), !dbg !12439
  store ptr %hook_args, ptr %hook_args.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %hook_args.addr, metadata !12431, metadata !DIExpression()), !dbg !12440
  br label %do.body, !dbg !12441

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12442

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !12444

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !12445

do.end2:                                          ; preds = %do.body1
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12447, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !12448
  call void @witness_assert_depth_to_rank(ptr noundef %call, i32 noundef 14, i32 noundef 0), !dbg !12449
  %1 = load i64, ptr %alignment.addr, align 8, !dbg !12450, !tbaa !2663
  %cmp = icmp ne i64 %1, 0, !dbg !12452
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12453

land.lhs.true:                                    ; preds = %do.end2
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !12454, !tbaa !2658
  %3 = ptrtoint ptr %2 to i64, !dbg !12455
  %4 = load i64, ptr %alignment.addr, align 8, !dbg !12456, !tbaa !2663
  %sub = sub i64 %4, 1, !dbg !12457
  %and = and i64 %3, %sub, !dbg !12458
  %cmp3 = icmp ne i64 %and, 0, !dbg !12459
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12460

if.then:                                          ; preds = %land.lhs.true
  %5 = load ptr, ptr %tsdn.addr, align 8, !dbg !12461, !tbaa !2658
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !12463, !tbaa !2658
  %7 = load i64, ptr %oldsize.addr, align 8, !dbg !12464, !tbaa !2663
  %8 = load i64, ptr %size.addr, align 8, !dbg !12465, !tbaa !2663
  %9 = load i64, ptr %alignment.addr, align 8, !dbg !12466, !tbaa !2663
  %10 = load i8, ptr %zero.addr, align 1, !dbg !12467, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %10 to i1, !dbg !12467
  %11 = load ptr, ptr %tcache.addr, align 8, !dbg !12468, !tbaa !2658
  %12 = load ptr, ptr %arena.addr, align 8, !dbg !12469, !tbaa !2658
  %13 = load ptr, ptr %hook_args.addr, align 8, !dbg !12470, !tbaa !2658
  %call4 = call ptr @iralloct_realign(ptr noundef %5, ptr noundef %6, i64 noundef %7, i64 noundef %8, i64 noundef %9, i1 noundef zeroext %tobool, ptr noundef %11, ptr noundef %12, ptr noundef %13), !dbg !12471
  store ptr %call4, ptr %retval, align 8, !dbg !12472
  br label %return, !dbg !12472

if.end:                                           ; preds = %land.lhs.true, %do.end2
  %14 = load ptr, ptr %tsdn.addr, align 8, !dbg !12473, !tbaa !2658
  %15 = load ptr, ptr %arena.addr, align 8, !dbg !12474, !tbaa !2658
  %16 = load ptr, ptr %ptr.addr, align 8, !dbg !12475, !tbaa !2658
  %17 = load i64, ptr %oldsize.addr, align 8, !dbg !12476, !tbaa !2663
  %18 = load i64, ptr %size.addr, align 8, !dbg !12477, !tbaa !2663
  %19 = load i64, ptr %alignment.addr, align 8, !dbg !12478, !tbaa !2663
  %20 = load i8, ptr %zero.addr, align 1, !dbg !12479, !tbaa !2695, !range !2708, !noundef !2709
  %tobool5 = trunc i8 %20 to i1, !dbg !12479
  %21 = load ptr, ptr %tcache.addr, align 8, !dbg !12480, !tbaa !2658
  %22 = load ptr, ptr %hook_args.addr, align 8, !dbg !12481, !tbaa !2658
  %call6 = call ptr @arena_ralloc(ptr noundef %14, ptr noundef %15, ptr noundef %16, i64 noundef %17, i64 noundef %18, i64 noundef %19, i1 noundef zeroext %tobool5, ptr noundef %21, ptr noundef %22), !dbg !12482
  store ptr %call6, ptr %retval, align 8, !dbg !12483
  br label %return, !dbg !12483

return:                                           ; preds = %if.end, %if.then
  %23 = load ptr, ptr %retval, align 8, !dbg !12484
  ret ptr %23, !dbg !12484
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @iralloct_realign(ptr noundef %tsdn, ptr noundef %ptr, i64 noundef %oldsize, i64 noundef %size, i64 noundef %alignment, i1 noundef zeroext %zero, ptr noundef %tcache, ptr noundef %arena, ptr noundef %hook_args) #3 !dbg !12485 {
entry:
  %retval = alloca ptr, align 8
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %oldsize.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %zero.addr = alloca i8, align 1
  %tcache.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  %hook_args.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %usize = alloca i64, align 8
  %copysize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12487, metadata !DIExpression()), !dbg !12499
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12488, metadata !DIExpression()), !dbg !12500
  store i64 %oldsize, ptr %oldsize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %oldsize.addr, metadata !12489, metadata !DIExpression()), !dbg !12501
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !12490, metadata !DIExpression()), !dbg !12502
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !12491, metadata !DIExpression()), !dbg !12503
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !12492, metadata !DIExpression()), !dbg !12504
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !12493, metadata !DIExpression()), !dbg !12505
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !12494, metadata !DIExpression()), !dbg !12506
  store ptr %hook_args, ptr %hook_args.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %hook_args.addr, metadata !12495, metadata !DIExpression()), !dbg !12507
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12508, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !12509
  call void @witness_assert_depth_to_rank(ptr noundef %call, i32 noundef 14, i32 noundef 0), !dbg !12510
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #18, !dbg !12511
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !12496, metadata !DIExpression()), !dbg !12512
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !12513
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !12497, metadata !DIExpression()), !dbg !12514
  call void @llvm.lifetime.start.p0(i64 8, ptr %copysize) #18, !dbg !12513
  tail call void @llvm.dbg.declare(metadata ptr %copysize, metadata !12498, metadata !DIExpression()), !dbg !12515
  %1 = load i64, ptr %size.addr, align 8, !dbg !12516, !tbaa !2663
  %2 = load i64, ptr %alignment.addr, align 8, !dbg !12517, !tbaa !2663
  %call1 = call i64 @sz_sa2u(i64 noundef %1, i64 noundef %2), !dbg !12518
  store i64 %call1, ptr %usize, align 8, !dbg !12519, !tbaa !2663
  %3 = load i64, ptr %usize, align 8, !dbg !12520, !tbaa !2663
  %cmp = icmp eq i64 %3, 0, !dbg !12520
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !12520

lor.rhs:                                          ; preds = %entry
  %4 = load i64, ptr %usize, align 8, !dbg !12520, !tbaa !2663
  %cmp2 = icmp ugt i64 %4, 8070450532247928832, !dbg !12520
  br label %lor.end, !dbg !12520

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lnot = xor i1 %5, true, !dbg !12520
  %lnot3 = xor i1 %lnot, true, !dbg !12520
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12520
  %conv = sext i32 %lnot.ext to i64, !dbg !12520
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12520
  %tobool = icmp ne i64 %expval, 0, !dbg !12520
  br i1 %tobool, label %if.then, label %if.end, !dbg !12522

if.then:                                          ; preds = %lor.end
  store ptr null, ptr %retval, align 8, !dbg !12523
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12523

if.end:                                           ; preds = %lor.end
  %6 = load ptr, ptr %tsdn.addr, align 8, !dbg !12525, !tbaa !2658
  %7 = load i64, ptr %usize, align 8, !dbg !12526, !tbaa !2663
  %8 = load i64, ptr %alignment.addr, align 8, !dbg !12527, !tbaa !2663
  %9 = load i8, ptr %zero.addr, align 1, !dbg !12528, !tbaa !2695, !range !2708, !noundef !2709
  %tobool4 = trunc i8 %9 to i1, !dbg !12528
  %10 = load ptr, ptr %tcache.addr, align 8, !dbg !12529, !tbaa !2658
  %11 = load ptr, ptr %arena.addr, align 8, !dbg !12530, !tbaa !2658
  %call5 = call ptr @ipalloct(ptr noundef %6, i64 noundef %7, i64 noundef %8, i1 noundef zeroext %tobool4, ptr noundef %10, ptr noundef %11), !dbg !12531
  store ptr %call5, ptr %p, align 8, !dbg !12532, !tbaa !2658
  %12 = load ptr, ptr %p, align 8, !dbg !12533, !tbaa !2658
  %cmp6 = icmp eq ptr %12, null, !dbg !12535
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !12536

if.then8:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !12537
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12537

if.end9:                                          ; preds = %if.end
  %13 = load i64, ptr %size.addr, align 8, !dbg !12539, !tbaa !2663
  %14 = load i64, ptr %oldsize.addr, align 8, !dbg !12540, !tbaa !2663
  %cmp10 = icmp ult i64 %13, %14, !dbg !12541
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !12542

cond.true:                                        ; preds = %if.end9
  %15 = load i64, ptr %size.addr, align 8, !dbg !12543, !tbaa !2663
  br label %cond.end, !dbg !12542

cond.false:                                       ; preds = %if.end9
  %16 = load i64, ptr %oldsize.addr, align 8, !dbg !12544, !tbaa !2663
  br label %cond.end, !dbg !12542

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %15, %cond.true ], [ %16, %cond.false ], !dbg !12542
  store i64 %cond, ptr %copysize, align 8, !dbg !12545, !tbaa !2663
  %17 = load ptr, ptr %p, align 8, !dbg !12546, !tbaa !2658
  %18 = load ptr, ptr %ptr.addr, align 8, !dbg !12547, !tbaa !2658
  %19 = load i64, ptr %copysize, align 8, !dbg !12548, !tbaa !2663
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %17, ptr align 1 %18, i64 %19, i1 false), !dbg !12549
  %20 = load ptr, ptr %hook_args.addr, align 8, !dbg !12550, !tbaa !2658
  %is_realloc = getelementptr inbounds %struct.hook_ralloc_args_s, ptr %20, i32 0, i32 0, !dbg !12551
  %21 = load i8, ptr %is_realloc, align 8, !dbg !12551, !tbaa !4872, !range !2708, !noundef !2709
  %tobool12 = trunc i8 %21 to i1, !dbg !12551
  %22 = zext i1 %tobool12 to i64, !dbg !12550
  %cond14 = select i1 %tobool12, i32 7, i32 8, !dbg !12550
  %23 = load ptr, ptr %p, align 8, !dbg !12552, !tbaa !2658
  %24 = load ptr, ptr %p, align 8, !dbg !12553, !tbaa !2658
  %25 = ptrtoint ptr %24 to i64, !dbg !12554
  %26 = load ptr, ptr %hook_args.addr, align 8, !dbg !12555, !tbaa !2658
  %args = getelementptr inbounds %struct.hook_ralloc_args_s, ptr %26, i32 0, i32 1, !dbg !12556
  %arraydecay = getelementptr inbounds [4 x i64], ptr %args, i64 0, i64 0, !dbg !12555
  call void @hook_invoke_alloc(i32 noundef %cond14, ptr noundef %23, i64 noundef %25, ptr noundef %arraydecay), !dbg !12557
  %27 = load ptr, ptr %hook_args.addr, align 8, !dbg !12558, !tbaa !2658
  %is_realloc15 = getelementptr inbounds %struct.hook_ralloc_args_s, ptr %27, i32 0, i32 0, !dbg !12559
  %28 = load i8, ptr %is_realloc15, align 8, !dbg !12559, !tbaa !4872, !range !2708, !noundef !2709
  %tobool16 = trunc i8 %28 to i1, !dbg !12559
  %29 = zext i1 %tobool16 to i64, !dbg !12558
  %cond18 = select i1 %tobool16, i32 3, i32 4, !dbg !12558
  %30 = load ptr, ptr %ptr.addr, align 8, !dbg !12560, !tbaa !2658
  %31 = load ptr, ptr %hook_args.addr, align 8, !dbg !12561, !tbaa !2658
  %args19 = getelementptr inbounds %struct.hook_ralloc_args_s, ptr %31, i32 0, i32 1, !dbg !12562
  %arraydecay20 = getelementptr inbounds [4 x i64], ptr %args19, i64 0, i64 0, !dbg !12561
  call void @hook_invoke_dalloc(i32 noundef %cond18, ptr noundef %30, ptr noundef %arraydecay20), !dbg !12563
  %32 = load ptr, ptr %tsdn.addr, align 8, !dbg !12564, !tbaa !2658
  %33 = load ptr, ptr %ptr.addr, align 8, !dbg !12565, !tbaa !2658
  %34 = load i64, ptr %oldsize.addr, align 8, !dbg !12566, !tbaa !2663
  %35 = load ptr, ptr %tcache.addr, align 8, !dbg !12567, !tbaa !2658
  call void @isdalloct(ptr noundef %32, ptr noundef %33, i64 noundef %34, ptr noundef %35, ptr noundef null, i1 noundef zeroext true), !dbg !12568
  %36 = load ptr, ptr %p, align 8, !dbg !12569, !tbaa !2658
  store ptr %36, ptr %retval, align 8, !dbg !12570
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12570

cleanup:                                          ; preds = %cond.end, %if.then8, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %copysize) #18, !dbg !12571
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !12571
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #18, !dbg !12571
  %37 = load ptr, ptr %retval, align 8, !dbg !12571
  ret ptr %37, !dbg !12571
}

declare !dbg !12572 ptr @arena_ralloc(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i64 noundef, i64 noundef, i1 noundef zeroext, ptr noundef, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @sz_sa2u(i64 noundef %size, i64 noundef %alignment) #3 !dbg !12575 {
entry:
  %retval = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %usize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !12579, metadata !DIExpression()), !dbg !12582
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !12580, metadata !DIExpression()), !dbg !12583
  call void @llvm.lifetime.start.p0(i64 8, ptr %usize) #18, !dbg !12584
  tail call void @llvm.dbg.declare(metadata ptr %usize, metadata !12581, metadata !DIExpression()), !dbg !12585
  br label %do.body, !dbg !12586

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12587

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12587

do.end:                                           ; preds = %do.cond
  %0 = load i64, ptr %size.addr, align 8, !dbg !12589, !tbaa !2663
  %cmp = icmp ule i64 %0, 14336, !dbg !12591
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !12592

land.lhs.true:                                    ; preds = %do.end
  %1 = load i64, ptr %alignment.addr, align 8, !dbg !12593, !tbaa !2663
  %cmp1 = icmp ule i64 %1, 4096, !dbg !12594
  br i1 %cmp1, label %if.then, label %if.end5, !dbg !12595

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, ptr %size.addr, align 8, !dbg !12596, !tbaa !2663
  %3 = load i64, ptr %alignment.addr, align 8, !dbg !12596, !tbaa !2663
  %sub = sub i64 %3, 1, !dbg !12596
  %add = add i64 %2, %sub, !dbg !12596
  %4 = load i64, ptr %alignment.addr, align 8, !dbg !12596, !tbaa !2663
  %not = xor i64 %4, -1, !dbg !12596
  %add2 = add i64 %not, 1, !dbg !12596
  %and = and i64 %add, %add2, !dbg !12596
  %call = call i64 @sz_s2u(i64 noundef %and), !dbg !12598
  store i64 %call, ptr %usize, align 8, !dbg !12599, !tbaa !2663
  %5 = load i64, ptr %usize, align 8, !dbg !12600, !tbaa !2663
  %cmp3 = icmp ult i64 %5, 16384, !dbg !12602
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !12603

if.then4:                                         ; preds = %if.then
  %6 = load i64, ptr %usize, align 8, !dbg !12604, !tbaa !2663
  store i64 %6, ptr %retval, align 8, !dbg !12606
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12606

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !12607

if.end5:                                          ; preds = %if.end, %land.lhs.true, %do.end
  %7 = load i64, ptr %alignment.addr, align 8, !dbg !12608, !tbaa !2663
  %cmp6 = icmp ugt i64 %7, 8070450532247928832, !dbg !12608
  %lnot = xor i1 %cmp6, true, !dbg !12608
  %lnot7 = xor i1 %lnot, true, !dbg !12608
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !12608
  %conv = sext i32 %lnot.ext to i64, !dbg !12608
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12608
  %tobool = icmp ne i64 %expval, 0, !dbg !12608
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !12610

if.then8:                                         ; preds = %if.end5
  store i64 0, ptr %retval, align 8, !dbg !12611
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12611

if.end9:                                          ; preds = %if.end5
  %8 = load i64, ptr %size.addr, align 8, !dbg !12613, !tbaa !2663
  %cmp10 = icmp ule i64 %8, 16384, !dbg !12615
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !12616

if.then12:                                        ; preds = %if.end9
  store i64 16384, ptr %usize, align 8, !dbg !12617, !tbaa !2663
  br label %if.end18, !dbg !12619

if.else:                                          ; preds = %if.end9
  %9 = load i64, ptr %size.addr, align 8, !dbg !12620, !tbaa !2663
  %call13 = call i64 @sz_s2u(i64 noundef %9), !dbg !12622
  store i64 %call13, ptr %usize, align 8, !dbg !12623, !tbaa !2663
  %10 = load i64, ptr %usize, align 8, !dbg !12624, !tbaa !2663
  %11 = load i64, ptr %size.addr, align 8, !dbg !12626, !tbaa !2663
  %cmp14 = icmp ult i64 %10, %11, !dbg !12627
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !12628

if.then16:                                        ; preds = %if.else
  store i64 0, ptr %retval, align 8, !dbg !12629
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12629

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then12
  %12 = load i64, ptr %usize, align 8, !dbg !12631, !tbaa !2663
  %13 = load i64, ptr @sz_large_pad, align 8, !dbg !12633, !tbaa !2663
  %add19 = add i64 %12, %13, !dbg !12634
  %14 = load i64, ptr %alignment.addr, align 8, !dbg !12635, !tbaa !2663
  %add20 = add i64 %14, 4095, !dbg !12635
  %and21 = and i64 %add20, -4096, !dbg !12635
  %add22 = add i64 %add19, %and21, !dbg !12636
  %sub23 = sub i64 %add22, 4096, !dbg !12637
  %15 = load i64, ptr %usize, align 8, !dbg !12638, !tbaa !2663
  %cmp24 = icmp ult i64 %sub23, %15, !dbg !12639
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !12640

if.then26:                                        ; preds = %if.end18
  store i64 0, ptr %retval, align 8, !dbg !12641
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12641

if.end27:                                         ; preds = %if.end18
  %16 = load i64, ptr %usize, align 8, !dbg !12643, !tbaa !2663
  store i64 %16, ptr %retval, align 8, !dbg !12644
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12644

cleanup:                                          ; preds = %if.end27, %if.then26, %if.then16, %if.then8, %if.then4
  call void @llvm.lifetime.end.p0(i64 8, ptr %usize) #18, !dbg !12645
  %17 = load i64, ptr %retval, align 8, !dbg !12645
  ret i64 %17, !dbg !12645
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @isdalloct(ptr noundef %tsdn, ptr noundef %ptr, i64 noundef %size, ptr noundef %tcache, ptr noundef %alloc_ctx, i1 noundef zeroext %slow_path) #3 !dbg !12646 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %tcache.addr = alloca ptr, align 8
  %alloc_ctx.addr = alloca ptr, align 8
  %slow_path.addr = alloca i8, align 1
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12650, metadata !DIExpression()), !dbg !12656
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12651, metadata !DIExpression()), !dbg !12657
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !12652, metadata !DIExpression()), !dbg !12658
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !12653, metadata !DIExpression()), !dbg !12659
  store ptr %alloc_ctx, ptr %alloc_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx.addr, metadata !12654, metadata !DIExpression()), !dbg !12660
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !12655, metadata !DIExpression()), !dbg !12661
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12662, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !12663
  call void @witness_assert_depth_to_rank(ptr noundef %call, i32 noundef 14, i32 noundef 0), !dbg !12664
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !12665, !tbaa !2658
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !12666, !tbaa !2658
  %3 = load i64, ptr %size.addr, align 8, !dbg !12667, !tbaa !2663
  %4 = load ptr, ptr %tcache.addr, align 8, !dbg !12668, !tbaa !2658
  %5 = load ptr, ptr %alloc_ctx.addr, align 8, !dbg !12669, !tbaa !2658
  %6 = load i8, ptr %slow_path.addr, align 1, !dbg !12670, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %6 to i1, !dbg !12670
  call void @arena_sdalloc(ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5, i1 noundef zeroext %tobool), !dbg !12671
  ret void, !dbg !12672
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @arena_sdalloc(ptr noundef %tsdn, ptr noundef %ptr, i64 noundef %size, ptr noundef %tcache, ptr noundef %caller_alloc_ctx, i1 noundef zeroext %slow_path) #3 !dbg !12673 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %tcache.addr = alloca ptr, align 8
  %caller_alloc_ctx.addr = alloca ptr, align 8
  %slow_path.addr = alloca i8, align 1
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12675, metadata !DIExpression()), !dbg !12682
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12676, metadata !DIExpression()), !dbg !12683
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !12677, metadata !DIExpression()), !dbg !12684
  store ptr %tcache, ptr %tcache.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tcache.addr, metadata !12678, metadata !DIExpression()), !dbg !12685
  store ptr %caller_alloc_ctx, ptr %caller_alloc_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %caller_alloc_ctx.addr, metadata !12679, metadata !DIExpression()), !dbg !12686
  %frombool = zext i1 %slow_path to i8
  store i8 %frombool, ptr %slow_path.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %slow_path.addr, metadata !12680, metadata !DIExpression()), !dbg !12687
  br label %do.body, !dbg !12688

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12689

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !12691

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !12692

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !12694

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !12695

do.end4:                                          ; preds = %do.body3
  %0 = load ptr, ptr %tcache.addr, align 8, !dbg !12697, !tbaa !2658
  %cmp = icmp eq ptr %0, null, !dbg !12697
  %lnot = xor i1 %cmp, true, !dbg !12697
  %lnot5 = xor i1 %lnot, true, !dbg !12697
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !12697
  %conv = sext i32 %lnot.ext to i64, !dbg !12697
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12697
  %tobool = icmp ne i64 %expval, 0, !dbg !12697
  br i1 %tobool, label %if.then, label %if.end, !dbg !12699

if.then:                                          ; preds = %do.end4
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !12700, !tbaa !2658
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !12702, !tbaa !2658
  %3 = load i64, ptr %size.addr, align 8, !dbg !12703, !tbaa !2663
  call void @arena_sdalloc_no_tcache(ptr noundef %1, ptr noundef %2, i64 noundef %3), !dbg !12704
  br label %return, !dbg !12705

if.end:                                           ; preds = %do.end4
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !12706
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !12681, metadata !DIExpression()), !dbg !12707
  %4 = load i64, ptr %size.addr, align 8, !dbg !12708, !tbaa !2663
  %call = call i32 @sz_size2index(i64 noundef %4), !dbg !12711
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !12712
  store i32 %call, ptr %szind, align 4, !dbg !12713, !tbaa !4364
  %szind6 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !12714
  %5 = load i32, ptr %szind6, align 4, !dbg !12714, !tbaa !4364
  %conv7 = zext i32 %5 to i64, !dbg !12715
  %cmp8 = icmp ult i64 %conv7, 36, !dbg !12716
  %slab = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !12717
  %frombool10 = zext i1 %cmp8 to i8, !dbg !12718
  store i8 %frombool10, ptr %slab, align 4, !dbg !12718, !tbaa !4461
  %slab11 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !12719
  %6 = load i8, ptr %slab11, align 4, !dbg !12719, !tbaa !4461, !range !2708, !noundef !2709
  %tobool12 = trunc i8 %6 to i1, !dbg !12719
  %lnot13 = xor i1 %tobool12, true, !dbg !12719
  %lnot15 = xor i1 %lnot13, true, !dbg !12719
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !12719
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !12719
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 1), !dbg !12719
  %tobool19 = icmp ne i64 %expval18, 0, !dbg !12719
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !12721

if.then20:                                        ; preds = %if.end
  %7 = load ptr, ptr %tsdn.addr, align 8, !dbg !12722, !tbaa !2658
  %call21 = call ptr @tsdn_tsd(ptr noundef %7), !dbg !12724
  %8 = load ptr, ptr %tcache.addr, align 8, !dbg !12725, !tbaa !2658
  %9 = load ptr, ptr %ptr.addr, align 8, !dbg !12726, !tbaa !2658
  %szind22 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !12727
  %10 = load i32, ptr %szind22, align 4, !dbg !12727, !tbaa !4364
  %11 = load i8, ptr %slow_path.addr, align 1, !dbg !12728, !tbaa !2695, !range !2708, !noundef !2709
  %tobool23 = trunc i8 %11 to i1, !dbg !12728
  call void @tcache_dalloc_small(ptr noundef %call21, ptr noundef %8, ptr noundef %9, i32 noundef %10, i1 noundef zeroext %tobool23), !dbg !12729
  br label %if.end26, !dbg !12730

if.else:                                          ; preds = %if.end
  %12 = load ptr, ptr %tsdn.addr, align 8, !dbg !12731, !tbaa !2658
  %13 = load ptr, ptr %ptr.addr, align 8, !dbg !12733, !tbaa !2658
  %14 = load ptr, ptr %tcache.addr, align 8, !dbg !12734, !tbaa !2658
  %szind24 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !12735
  %15 = load i32, ptr %szind24, align 4, !dbg !12735, !tbaa !4364
  %16 = load i8, ptr %slow_path.addr, align 1, !dbg !12736, !tbaa !2695, !range !2708, !noundef !2709
  %tobool25 = trunc i8 %16 to i1, !dbg !12736
  call void @arena_dalloc_large(ptr noundef %12, ptr noundef %13, ptr noundef %14, i32 noundef %15, i1 noundef zeroext %tobool25), !dbg !12737
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then20
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !12738
  br label %return, !dbg !12738

return:                                           ; preds = %if.end26, %if.then
  ret void, !dbg !12738
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @arena_sdalloc_no_tcache(ptr noundef %tsdn, ptr noundef %ptr, i64 noundef %size) #4 !dbg !12739 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12743, metadata !DIExpression()), !dbg !12747
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12744, metadata !DIExpression()), !dbg !12748
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !12745, metadata !DIExpression()), !dbg !12749
  br label %do.body, !dbg !12750

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12751

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !12753

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !12754

do.end2:                                          ; preds = %do.body1
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !12756
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !12746, metadata !DIExpression()), !dbg !12757
  %0 = load i64, ptr %size.addr, align 8, !dbg !12758, !tbaa !2663
  %call = call i32 @sz_size2index(i64 noundef %0), !dbg !12761
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !12762
  store i32 %call, ptr %szind, align 4, !dbg !12763, !tbaa !4364
  %szind3 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !12764
  %1 = load i32, ptr %szind3, align 4, !dbg !12764, !tbaa !4364
  %conv = zext i32 %1 to i64, !dbg !12765
  %cmp = icmp ult i64 %conv, 36, !dbg !12766
  %slab = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !12767
  %frombool = zext i1 %cmp to i8, !dbg !12768
  store i8 %frombool, ptr %slab, align 4, !dbg !12768, !tbaa !4461
  %slab5 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 1, !dbg !12769
  %2 = load i8, ptr %slab5, align 4, !dbg !12769, !tbaa !4461, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !12769
  %lnot = xor i1 %tobool, true, !dbg !12769
  %lnot6 = xor i1 %lnot, true, !dbg !12769
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !12769
  %conv7 = sext i32 %lnot.ext to i64, !dbg !12769
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1), !dbg !12769
  %tobool8 = icmp ne i64 %expval, 0, !dbg !12769
  br i1 %tobool8, label %if.then, label %if.else, !dbg !12771

if.then:                                          ; preds = %do.end2
  %3 = load ptr, ptr %tsdn.addr, align 8, !dbg !12772, !tbaa !2658
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !12774, !tbaa !2658
  call void @arena_dalloc_small(ptr noundef %3, ptr noundef %4), !dbg !12775
  br label %if.end, !dbg !12776

if.else:                                          ; preds = %do.end2
  %5 = load ptr, ptr %tsdn.addr, align 8, !dbg !12777, !tbaa !2658
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !12779, !tbaa !2658
  %szind9 = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !12780
  %7 = load i32, ptr %szind9, align 4, !dbg !12780, !tbaa !4364
  call void @arena_dalloc_large_no_tcache(ptr noundef %5, ptr noundef %6, i32 noundef %7), !dbg !12781
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !12782
  ret void, !dbg !12782
}

declare !dbg !12783 void @safety_check_fail(ptr noundef, ...) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsdn_rtree_ctx(ptr noundef %tsdn, ptr noundef %fallback) #3 !dbg !12785 {
entry:
  %retval = alloca ptr, align 8
  %tsdn.addr = alloca ptr, align 8
  %fallback.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12789, metadata !DIExpression()), !dbg !12791
  store ptr %fallback, ptr %fallback.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %fallback.addr, metadata !12790, metadata !DIExpression()), !dbg !12792
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12793, !tbaa !2658
  %call = call zeroext i1 @tsdn_null(ptr noundef %0), !dbg !12793
  %lnot = xor i1 %call, true, !dbg !12793
  %lnot1 = xor i1 %lnot, true, !dbg !12793
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12793
  %conv = sext i32 %lnot.ext to i64, !dbg !12793
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !12793
  %tobool = icmp ne i64 %expval, 0, !dbg !12793
  br i1 %tobool, label %if.then, label %if.end, !dbg !12795

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %fallback.addr, align 8, !dbg !12796, !tbaa !2658
  call void @rtree_ctx_data_init(ptr noundef %1), !dbg !12798
  %2 = load ptr, ptr %fallback.addr, align 8, !dbg !12799, !tbaa !2658
  store ptr %2, ptr %retval, align 8, !dbg !12800
  br label %return, !dbg !12800

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %tsdn.addr, align 8, !dbg !12801, !tbaa !2658
  %call2 = call ptr @tsdn_tsd(ptr noundef %3), !dbg !12802
  %call3 = call ptr @tsd_rtree_ctx(ptr noundef %call2), !dbg !12803
  store ptr %call3, ptr %retval, align 8, !dbg !12804
  br label %return, !dbg !12804

return:                                           ; preds = %if.end, %if.then
  %4 = load ptr, ptr %retval, align 8, !dbg !12805
  ret ptr %4, !dbg !12805
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @rtree_read(ptr noalias sret(%struct.rtree_contents_s) align 8 %agg.result, ptr noundef %tsdn, ptr noundef %rtree, ptr noundef %rtree_ctx, i64 noundef %key) #4 !dbg !12806 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %rtree.addr = alloca ptr, align 8
  %rtree_ctx.addr = alloca ptr, align 8
  %key.addr = alloca i64, align 8
  %elm = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12810, metadata !DIExpression()), !dbg !12815
  store ptr %rtree, ptr %rtree.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree.addr, metadata !12811, metadata !DIExpression()), !dbg !12816
  store ptr %rtree_ctx, ptr %rtree_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx.addr, metadata !12812, metadata !DIExpression()), !dbg !12817
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12813, metadata !DIExpression()), !dbg !12818
  call void @llvm.lifetime.start.p0(i64 8, ptr %elm) #18, !dbg !12819
  tail call void @llvm.dbg.declare(metadata ptr %elm, metadata !12814, metadata !DIExpression()), !dbg !12820
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12821, !tbaa !2658
  %1 = load ptr, ptr %rtree.addr, align 8, !dbg !12822, !tbaa !2658
  %2 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12823, !tbaa !2658
  %3 = load i64, ptr %key.addr, align 8, !dbg !12824, !tbaa !2663
  %call = call ptr @rtree_leaf_elm_lookup(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i1 noundef zeroext true, i1 noundef zeroext false), !dbg !12825
  store ptr %call, ptr %elm, align 8, !dbg !12820, !tbaa !2658
  br label %do.body, !dbg !12826

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12827

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12827

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %tsdn.addr, align 8, !dbg !12829, !tbaa !2658
  %5 = load ptr, ptr %rtree.addr, align 8, !dbg !12830, !tbaa !2658
  %6 = load ptr, ptr %elm, align 8, !dbg !12831, !tbaa !2658
  call void @rtree_leaf_elm_read(ptr sret(%struct.rtree_contents_s) align 8 %agg.result, ptr noundef %4, ptr noundef %5, ptr noundef %6, i1 noundef zeroext true), !dbg !12832
  call void @llvm.lifetime.end.p0(i64 8, ptr %elm) #18, !dbg !12833
  ret void, !dbg !12833
}

declare !dbg !12834 void @rtree_ctx_data_init(ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_rtree_ctx(ptr noundef %tsd) #3 !dbg !12837 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12839, metadata !DIExpression()), !dbg !12840
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12841, !tbaa !2658
  %call = call ptr @tsd_rtree_ctxp_get(ptr noundef %0), !dbg !12842
  ret ptr %call, !dbg !12843
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_rtree_ctxp_get(ptr noundef %tsd) #3 !dbg !12844 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !12846, metadata !DIExpression()), !dbg !12848
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !12848
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !12847, metadata !DIExpression()), !dbg !12848
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !12848, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !12848
  store i8 %call, ptr %state, align 1, !dbg !12848, !tbaa !2810
  br label %do.body, !dbg !12848

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12849

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12849

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !12848, !tbaa !2658
  %call1 = call ptr @tsd_rtree_ctxp_get_unsafe(ptr noundef %1), !dbg !12848
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !12848
  ret ptr %call1, !dbg !12848
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @rtree_leaf_elm_lookup(ptr noundef %tsdn, ptr noundef %rtree, ptr noundef %rtree_ctx, i64 noundef %key, i1 noundef zeroext %dependent, i1 noundef zeroext %init_missing) #3 !dbg !12851 {
entry:
  %retval = alloca ptr, align 8
  %tsdn.addr = alloca ptr, align 8
  %rtree.addr = alloca ptr, align 8
  %rtree_ctx.addr = alloca ptr, align 8
  %key.addr = alloca i64, align 8
  %dependent.addr = alloca i8, align 1
  %init_missing.addr = alloca i8, align 1
  %slot = alloca i64, align 8
  %leafkey = alloca i64, align 8
  %leaf = alloca ptr, align 8
  %subkey = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %leaf30 = alloca ptr, align 8
  %subkey55 = alloca i64, align 8
  %i = alloca i32, align 4
  %leaf77 = alloca ptr, align 8
  %subkey140 = alloca i64, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12855, metadata !DIExpression()), !dbg !12881
  store ptr %rtree, ptr %rtree.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree.addr, metadata !12856, metadata !DIExpression()), !dbg !12882
  store ptr %rtree_ctx, ptr %rtree_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx.addr, metadata !12857, metadata !DIExpression()), !dbg !12883
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12858, metadata !DIExpression()), !dbg !12884
  %frombool = zext i1 %dependent to i8
  store i8 %frombool, ptr %dependent.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %dependent.addr, metadata !12859, metadata !DIExpression()), !dbg !12885
  %frombool1 = zext i1 %init_missing to i8
  store i8 %frombool1, ptr %init_missing.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %init_missing.addr, metadata !12860, metadata !DIExpression()), !dbg !12886
  br label %do.body, !dbg !12887

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12888

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !12890

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !12891

do.end3:                                          ; preds = %do.body2
  call void @llvm.lifetime.start.p0(i64 8, ptr %slot) #18, !dbg !12893
  tail call void @llvm.dbg.declare(metadata ptr %slot, metadata !12861, metadata !DIExpression()), !dbg !12894
  %0 = load i64, ptr %key.addr, align 8, !dbg !12895, !tbaa !2663
  %call = call i64 @rtree_cache_direct_map(i64 noundef %0), !dbg !12896
  store i64 %call, ptr %slot, align 8, !dbg !12894, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %leafkey) #18, !dbg !12897
  tail call void @llvm.dbg.declare(metadata ptr %leafkey, metadata !12862, metadata !DIExpression()), !dbg !12898
  %1 = load i64, ptr %key.addr, align 8, !dbg !12899, !tbaa !2663
  %call4 = call i64 @rtree_leafkey(i64 noundef %1), !dbg !12900
  store i64 %call4, ptr %leafkey, align 8, !dbg !12898, !tbaa !2663
  br label %do.body5, !dbg !12901

do.body5:                                         ; preds = %do.end3
  br label %do.cond, !dbg !12902

do.cond:                                          ; preds = %do.body5
  br label %do.end6, !dbg !12902

do.end6:                                          ; preds = %do.cond
  %2 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12904, !tbaa !2658
  %cache = getelementptr inbounds %struct.rtree_ctx_s, ptr %2, i32 0, i32 0, !dbg !12904
  %3 = load i64, ptr %slot, align 8, !dbg !12904, !tbaa !2663
  %arrayidx = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache, i64 0, i64 %3, !dbg !12904
  %leafkey7 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx, i32 0, i32 0, !dbg !12904
  %4 = load i64, ptr %leafkey7, align 8, !dbg !12904, !tbaa !12192
  %5 = load i64, ptr %leafkey, align 8, !dbg !12904, !tbaa !2663
  %cmp = icmp eq i64 %4, %5, !dbg !12904
  %lnot = xor i1 %cmp, true, !dbg !12904
  %lnot8 = xor i1 %lnot, true, !dbg !12904
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !12904
  %conv = sext i32 %lnot.ext to i64, !dbg !12904
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !12904
  %tobool = icmp ne i64 %expval, 0, !dbg !12904
  br i1 %tobool, label %if.then, label %if.end, !dbg !12905

if.then:                                          ; preds = %do.end6
  call void @llvm.lifetime.start.p0(i64 8, ptr %leaf) #18, !dbg !12906
  tail call void @llvm.dbg.declare(metadata ptr %leaf, metadata !12863, metadata !DIExpression()), !dbg !12907
  %6 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12908, !tbaa !2658
  %cache9 = getelementptr inbounds %struct.rtree_ctx_s, ptr %6, i32 0, i32 0, !dbg !12909
  %7 = load i64, ptr %slot, align 8, !dbg !12910, !tbaa !2663
  %arrayidx10 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache9, i64 0, i64 %7, !dbg !12908
  %leaf11 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx10, i32 0, i32 1, !dbg !12911
  %8 = load ptr, ptr %leaf11, align 8, !dbg !12911, !tbaa !12203
  store ptr %8, ptr %leaf, align 8, !dbg !12907, !tbaa !2658
  br label %do.body12, !dbg !12912

do.body12:                                        ; preds = %if.then
  br label %do.cond13, !dbg !12913

do.cond13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !12913

do.end14:                                         ; preds = %do.cond13
  call void @llvm.lifetime.start.p0(i64 8, ptr %subkey) #18, !dbg !12915
  tail call void @llvm.dbg.declare(metadata ptr %subkey, metadata !12866, metadata !DIExpression()), !dbg !12916
  %9 = load i64, ptr %key.addr, align 8, !dbg !12917, !tbaa !2663
  %call15 = call i64 @rtree_subkey(i64 noundef %9, i32 noundef 1), !dbg !12918
  store i64 %call15, ptr %subkey, align 8, !dbg !12916, !tbaa !2663
  %10 = load ptr, ptr %leaf, align 8, !dbg !12919, !tbaa !2658
  %11 = load i64, ptr %subkey, align 8, !dbg !12920, !tbaa !2663
  %arrayidx16 = getelementptr inbounds %struct.rtree_leaf_elm_s, ptr %10, i64 %11, !dbg !12919
  store ptr %arrayidx16, ptr %retval, align 8, !dbg !12921
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %subkey) #18, !dbg !12922
  call void @llvm.lifetime.end.p0(i64 8, ptr %leaf) #18, !dbg !12922
  br label %cleanup149

if.end:                                           ; preds = %do.end6
  br label %do.body17, !dbg !12923

do.body17:                                        ; preds = %if.end
  %12 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12924, !tbaa !2658
  %l2_cache = getelementptr inbounds %struct.rtree_ctx_s, ptr %12, i32 0, i32 1, !dbg !12924
  %arrayidx18 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache, i64 0, i64 0, !dbg !12924
  %leafkey19 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx18, i32 0, i32 0, !dbg !12924
  %13 = load i64, ptr %leafkey19, align 8, !dbg !12924, !tbaa !12192
  %14 = load i64, ptr %leafkey, align 8, !dbg !12924, !tbaa !2663
  %cmp20 = icmp eq i64 %13, %14, !dbg !12924
  %lnot22 = xor i1 %cmp20, true, !dbg !12924
  %lnot24 = xor i1 %lnot22, true, !dbg !12924
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !12924
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !12924
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 1), !dbg !12924
  %tobool28 = icmp ne i64 %expval27, 0, !dbg !12924
  br i1 %tobool28, label %if.then29, label %if.end58, !dbg !12925

if.then29:                                        ; preds = %do.body17
  call void @llvm.lifetime.start.p0(i64 8, ptr %leaf30) #18, !dbg !12926
  tail call void @llvm.dbg.declare(metadata ptr %leaf30, metadata !12867, metadata !DIExpression()), !dbg !12926
  %15 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12926, !tbaa !2658
  %l2_cache31 = getelementptr inbounds %struct.rtree_ctx_s, ptr %15, i32 0, i32 1, !dbg !12926
  %arrayidx32 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache31, i64 0, i64 0, !dbg !12926
  %leaf33 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx32, i32 0, i32 1, !dbg !12926
  %16 = load ptr, ptr %leaf33, align 8, !dbg !12926, !tbaa !12203
  store ptr %16, ptr %leaf30, align 8, !dbg !12926, !tbaa !2658
  br label %do.body34, !dbg !12926

do.body34:                                        ; preds = %if.then29
  br label %do.cond35, !dbg !12927

do.cond35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !12927

do.end36:                                         ; preds = %do.cond35
  %17 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12929, !tbaa !2658
  %cache37 = getelementptr inbounds %struct.rtree_ctx_s, ptr %17, i32 0, i32 0, !dbg !12929
  %18 = load i64, ptr %slot, align 8, !dbg !12929, !tbaa !2663
  %arrayidx38 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache37, i64 0, i64 %18, !dbg !12929
  %leafkey39 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx38, i32 0, i32 0, !dbg !12929
  %19 = load i64, ptr %leafkey39, align 8, !dbg !12929, !tbaa !12192
  %20 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12929, !tbaa !2658
  %l2_cache40 = getelementptr inbounds %struct.rtree_ctx_s, ptr %20, i32 0, i32 1, !dbg !12929
  %arrayidx41 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache40, i64 0, i64 0, !dbg !12929
  %leafkey42 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx41, i32 0, i32 0, !dbg !12929
  store i64 %19, ptr %leafkey42, align 8, !dbg !12929, !tbaa !12192
  %21 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12929, !tbaa !2658
  %cache43 = getelementptr inbounds %struct.rtree_ctx_s, ptr %21, i32 0, i32 0, !dbg !12929
  %22 = load i64, ptr %slot, align 8, !dbg !12929, !tbaa !2663
  %arrayidx44 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache43, i64 0, i64 %22, !dbg !12929
  %leaf45 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx44, i32 0, i32 1, !dbg !12929
  %23 = load ptr, ptr %leaf45, align 8, !dbg !12929, !tbaa !12203
  %24 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12929, !tbaa !2658
  %l2_cache46 = getelementptr inbounds %struct.rtree_ctx_s, ptr %24, i32 0, i32 1, !dbg !12929
  %arrayidx47 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache46, i64 0, i64 0, !dbg !12929
  %leaf48 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx47, i32 0, i32 1, !dbg !12929
  store ptr %23, ptr %leaf48, align 8, !dbg !12929, !tbaa !12203
  %25 = load i64, ptr %leafkey, align 8, !dbg !12926, !tbaa !2663
  %26 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12926, !tbaa !2658
  %cache49 = getelementptr inbounds %struct.rtree_ctx_s, ptr %26, i32 0, i32 0, !dbg !12926
  %27 = load i64, ptr %slot, align 8, !dbg !12926, !tbaa !2663
  %arrayidx50 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache49, i64 0, i64 %27, !dbg !12926
  %leafkey51 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx50, i32 0, i32 0, !dbg !12926
  store i64 %25, ptr %leafkey51, align 8, !dbg !12926, !tbaa !12192
  %28 = load ptr, ptr %leaf30, align 8, !dbg !12926, !tbaa !2658
  %29 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12926, !tbaa !2658
  %cache52 = getelementptr inbounds %struct.rtree_ctx_s, ptr %29, i32 0, i32 0, !dbg !12926
  %30 = load i64, ptr %slot, align 8, !dbg !12926, !tbaa !2663
  %arrayidx53 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache52, i64 0, i64 %30, !dbg !12926
  %leaf54 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx53, i32 0, i32 1, !dbg !12926
  store ptr %28, ptr %leaf54, align 8, !dbg !12926, !tbaa !12203
  call void @llvm.lifetime.start.p0(i64 8, ptr %subkey55) #18, !dbg !12926
  tail call void @llvm.dbg.declare(metadata ptr %subkey55, metadata !12871, metadata !DIExpression()), !dbg !12926
  %31 = load i64, ptr %key.addr, align 8, !dbg !12926, !tbaa !2663
  %call56 = call i64 @rtree_subkey(i64 noundef %31, i32 noundef 1), !dbg !12926
  store i64 %call56, ptr %subkey55, align 8, !dbg !12926, !tbaa !2663
  %32 = load ptr, ptr %leaf30, align 8, !dbg !12926, !tbaa !2658
  %33 = load i64, ptr %subkey55, align 8, !dbg !12926, !tbaa !2663
  %arrayidx57 = getelementptr inbounds %struct.rtree_leaf_elm_s, ptr %32, i64 %33, !dbg !12926
  store ptr %arrayidx57, ptr %retval, align 8, !dbg !12926
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %subkey55) #18, !dbg !12924
  call void @llvm.lifetime.end.p0(i64 8, ptr %leaf30) #18, !dbg !12924
  br label %cleanup149

if.end58:                                         ; preds = %do.body17
  br label %do.cond59, !dbg !12925

do.cond59:                                        ; preds = %if.end58
  br label %do.end60, !dbg !12925

do.end60:                                         ; preds = %do.cond59
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !12932
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !12872, metadata !DIExpression()), !dbg !12933
  store i32 1, ptr %i, align 4, !dbg !12933, !tbaa !2791
  br label %for.cond, !dbg !12932

for.cond:                                         ; preds = %for.inc, %do.end60
  %34 = load i32, ptr %i, align 4, !dbg !12934, !tbaa !2791
  %cmp61 = icmp ult i32 %34, 8, !dbg !12935
  br i1 %cmp61, label %for.body, label %for.cond.cleanup, !dbg !12936

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 14, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12936

for.body:                                         ; preds = %for.cond
  br label %do.body63, !dbg !12937

do.body63:                                        ; preds = %for.body
  %35 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12938, !tbaa !2658
  %l2_cache64 = getelementptr inbounds %struct.rtree_ctx_s, ptr %35, i32 0, i32 1, !dbg !12938
  %36 = load i32, ptr %i, align 4, !dbg !12938, !tbaa !2791
  %idxprom = zext i32 %36 to i64, !dbg !12938
  %arrayidx65 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache64, i64 0, i64 %idxprom, !dbg !12938
  %leafkey66 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx65, i32 0, i32 0, !dbg !12938
  %37 = load i64, ptr %leafkey66, align 8, !dbg !12938, !tbaa !12192
  %38 = load i64, ptr %leafkey, align 8, !dbg !12938, !tbaa !2663
  %cmp67 = icmp eq i64 %37, %38, !dbg !12938
  %lnot69 = xor i1 %cmp67, true, !dbg !12938
  %lnot71 = xor i1 %lnot69, true, !dbg !12938
  %lnot.ext72 = zext i1 %lnot71 to i32, !dbg !12938
  %conv73 = sext i32 %lnot.ext72 to i64, !dbg !12938
  %expval74 = call i64 @llvm.expect.i64(i64 %conv73, i64 1), !dbg !12938
  %tobool75 = icmp ne i64 %expval74, 0, !dbg !12938
  br i1 %tobool75, label %if.then76, label %if.end143, !dbg !12939

if.then76:                                        ; preds = %do.body63
  call void @llvm.lifetime.start.p0(i64 8, ptr %leaf77) #18, !dbg !12940
  tail call void @llvm.dbg.declare(metadata ptr %leaf77, metadata !12874, metadata !DIExpression()), !dbg !12940
  %39 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12940, !tbaa !2658
  %l2_cache78 = getelementptr inbounds %struct.rtree_ctx_s, ptr %39, i32 0, i32 1, !dbg !12940
  %40 = load i32, ptr %i, align 4, !dbg !12940, !tbaa !2791
  %idxprom79 = zext i32 %40 to i64, !dbg !12940
  %arrayidx80 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache78, i64 0, i64 %idxprom79, !dbg !12940
  %leaf81 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx80, i32 0, i32 1, !dbg !12940
  %41 = load ptr, ptr %leaf81, align 8, !dbg !12940, !tbaa !12203
  store ptr %41, ptr %leaf77, align 8, !dbg !12940, !tbaa !2658
  br label %do.body82, !dbg !12940

do.body82:                                        ; preds = %if.then76
  br label %do.cond83, !dbg !12941

do.cond83:                                        ; preds = %do.body82
  br label %do.end84, !dbg !12941

do.end84:                                         ; preds = %do.cond83
  %42 = load i32, ptr %i, align 4, !dbg !12943, !tbaa !2791
  %cmp85 = icmp ugt i32 %42, 0, !dbg !12943
  br i1 %cmp85, label %if.then87, label %if.else, !dbg !12940

if.then87:                                        ; preds = %do.end84
  %43 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %l2_cache88 = getelementptr inbounds %struct.rtree_ctx_s, ptr %43, i32 0, i32 1, !dbg !12945
  %44 = load i32, ptr %i, align 4, !dbg !12945, !tbaa !2791
  %sub = sub i32 %44, 1, !dbg !12945
  %idxprom89 = zext i32 %sub to i64, !dbg !12945
  %arrayidx90 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache88, i64 0, i64 %idxprom89, !dbg !12945
  %leafkey91 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx90, i32 0, i32 0, !dbg !12945
  %45 = load i64, ptr %leafkey91, align 8, !dbg !12945, !tbaa !12192
  %46 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %l2_cache92 = getelementptr inbounds %struct.rtree_ctx_s, ptr %46, i32 0, i32 1, !dbg !12945
  %47 = load i32, ptr %i, align 4, !dbg !12945, !tbaa !2791
  %idxprom93 = zext i32 %47 to i64, !dbg !12945
  %arrayidx94 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache92, i64 0, i64 %idxprom93, !dbg !12945
  %leafkey95 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx94, i32 0, i32 0, !dbg !12945
  store i64 %45, ptr %leafkey95, align 8, !dbg !12945, !tbaa !12192
  %48 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %l2_cache96 = getelementptr inbounds %struct.rtree_ctx_s, ptr %48, i32 0, i32 1, !dbg !12945
  %49 = load i32, ptr %i, align 4, !dbg !12945, !tbaa !2791
  %sub97 = sub i32 %49, 1, !dbg !12945
  %idxprom98 = zext i32 %sub97 to i64, !dbg !12945
  %arrayidx99 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache96, i64 0, i64 %idxprom98, !dbg !12945
  %leaf100 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx99, i32 0, i32 1, !dbg !12945
  %50 = load ptr, ptr %leaf100, align 8, !dbg !12945, !tbaa !12203
  %51 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %l2_cache101 = getelementptr inbounds %struct.rtree_ctx_s, ptr %51, i32 0, i32 1, !dbg !12945
  %52 = load i32, ptr %i, align 4, !dbg !12945, !tbaa !2791
  %idxprom102 = zext i32 %52 to i64, !dbg !12945
  %arrayidx103 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache101, i64 0, i64 %idxprom102, !dbg !12945
  %leaf104 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx103, i32 0, i32 1, !dbg !12945
  store ptr %50, ptr %leaf104, align 8, !dbg !12945, !tbaa !12203
  %53 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %cache105 = getelementptr inbounds %struct.rtree_ctx_s, ptr %53, i32 0, i32 0, !dbg !12945
  %54 = load i64, ptr %slot, align 8, !dbg !12945, !tbaa !2663
  %arrayidx106 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache105, i64 0, i64 %54, !dbg !12945
  %leafkey107 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx106, i32 0, i32 0, !dbg !12945
  %55 = load i64, ptr %leafkey107, align 8, !dbg !12945, !tbaa !12192
  %56 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %l2_cache108 = getelementptr inbounds %struct.rtree_ctx_s, ptr %56, i32 0, i32 1, !dbg !12945
  %57 = load i32, ptr %i, align 4, !dbg !12945, !tbaa !2791
  %sub109 = sub i32 %57, 1, !dbg !12945
  %idxprom110 = zext i32 %sub109 to i64, !dbg !12945
  %arrayidx111 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache108, i64 0, i64 %idxprom110, !dbg !12945
  %leafkey112 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx111, i32 0, i32 0, !dbg !12945
  store i64 %55, ptr %leafkey112, align 8, !dbg !12945, !tbaa !12192
  %58 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %cache113 = getelementptr inbounds %struct.rtree_ctx_s, ptr %58, i32 0, i32 0, !dbg !12945
  %59 = load i64, ptr %slot, align 8, !dbg !12945, !tbaa !2663
  %arrayidx114 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache113, i64 0, i64 %59, !dbg !12945
  %leaf115 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx114, i32 0, i32 1, !dbg !12945
  %60 = load ptr, ptr %leaf115, align 8, !dbg !12945, !tbaa !12203
  %61 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12945, !tbaa !2658
  %l2_cache116 = getelementptr inbounds %struct.rtree_ctx_s, ptr %61, i32 0, i32 1, !dbg !12945
  %62 = load i32, ptr %i, align 4, !dbg !12945, !tbaa !2791
  %sub117 = sub i32 %62, 1, !dbg !12945
  %idxprom118 = zext i32 %sub117 to i64, !dbg !12945
  %arrayidx119 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache116, i64 0, i64 %idxprom118, !dbg !12945
  %leaf120 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx119, i32 0, i32 1, !dbg !12945
  store ptr %60, ptr %leaf120, align 8, !dbg !12945, !tbaa !12203
  br label %if.end133, !dbg !12945

if.else:                                          ; preds = %do.end84
  %63 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12947, !tbaa !2658
  %cache121 = getelementptr inbounds %struct.rtree_ctx_s, ptr %63, i32 0, i32 0, !dbg !12947
  %64 = load i64, ptr %slot, align 8, !dbg !12947, !tbaa !2663
  %arrayidx122 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache121, i64 0, i64 %64, !dbg !12947
  %leafkey123 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx122, i32 0, i32 0, !dbg !12947
  %65 = load i64, ptr %leafkey123, align 8, !dbg !12947, !tbaa !12192
  %66 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12947, !tbaa !2658
  %l2_cache124 = getelementptr inbounds %struct.rtree_ctx_s, ptr %66, i32 0, i32 1, !dbg !12947
  %arrayidx125 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache124, i64 0, i64 0, !dbg !12947
  %leafkey126 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx125, i32 0, i32 0, !dbg !12947
  store i64 %65, ptr %leafkey126, align 8, !dbg !12947, !tbaa !12192
  %67 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12947, !tbaa !2658
  %cache127 = getelementptr inbounds %struct.rtree_ctx_s, ptr %67, i32 0, i32 0, !dbg !12947
  %68 = load i64, ptr %slot, align 8, !dbg !12947, !tbaa !2663
  %arrayidx128 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache127, i64 0, i64 %68, !dbg !12947
  %leaf129 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx128, i32 0, i32 1, !dbg !12947
  %69 = load ptr, ptr %leaf129, align 8, !dbg !12947, !tbaa !12203
  %70 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12947, !tbaa !2658
  %l2_cache130 = getelementptr inbounds %struct.rtree_ctx_s, ptr %70, i32 0, i32 1, !dbg !12947
  %arrayidx131 = getelementptr inbounds [8 x %struct.rtree_ctx_cache_elm_s], ptr %l2_cache130, i64 0, i64 0, !dbg !12947
  %leaf132 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx131, i32 0, i32 1, !dbg !12947
  store ptr %69, ptr %leaf132, align 8, !dbg !12947, !tbaa !12203
  br label %if.end133

if.end133:                                        ; preds = %if.else, %if.then87
  %71 = load i64, ptr %leafkey, align 8, !dbg !12940, !tbaa !2663
  %72 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12940, !tbaa !2658
  %cache134 = getelementptr inbounds %struct.rtree_ctx_s, ptr %72, i32 0, i32 0, !dbg !12940
  %73 = load i64, ptr %slot, align 8, !dbg !12940, !tbaa !2663
  %arrayidx135 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache134, i64 0, i64 %73, !dbg !12940
  %leafkey136 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx135, i32 0, i32 0, !dbg !12940
  store i64 %71, ptr %leafkey136, align 8, !dbg !12940, !tbaa !12192
  %74 = load ptr, ptr %leaf77, align 8, !dbg !12940, !tbaa !2658
  %75 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12940, !tbaa !2658
  %cache137 = getelementptr inbounds %struct.rtree_ctx_s, ptr %75, i32 0, i32 0, !dbg !12940
  %76 = load i64, ptr %slot, align 8, !dbg !12940, !tbaa !2663
  %arrayidx138 = getelementptr inbounds [16 x %struct.rtree_ctx_cache_elm_s], ptr %cache137, i64 0, i64 %76, !dbg !12940
  %leaf139 = getelementptr inbounds %struct.rtree_ctx_cache_elm_s, ptr %arrayidx138, i32 0, i32 1, !dbg !12940
  store ptr %74, ptr %leaf139, align 8, !dbg !12940, !tbaa !12203
  call void @llvm.lifetime.start.p0(i64 8, ptr %subkey140) #18, !dbg !12940
  tail call void @llvm.dbg.declare(metadata ptr %subkey140, metadata !12880, metadata !DIExpression()), !dbg !12940
  %77 = load i64, ptr %key.addr, align 8, !dbg !12940, !tbaa !2663
  %call141 = call i64 @rtree_subkey(i64 noundef %77, i32 noundef 1), !dbg !12940
  store i64 %call141, ptr %subkey140, align 8, !dbg !12940, !tbaa !2663
  %78 = load ptr, ptr %leaf77, align 8, !dbg !12940, !tbaa !2658
  %79 = load i64, ptr %subkey140, align 8, !dbg !12940, !tbaa !2663
  %arrayidx142 = getelementptr inbounds %struct.rtree_leaf_elm_s, ptr %78, i64 %79, !dbg !12940
  store ptr %arrayidx142, ptr %retval, align 8, !dbg !12940
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %subkey140) #18, !dbg !12938
  call void @llvm.lifetime.end.p0(i64 8, ptr %leaf77) #18, !dbg !12938
  br label %cleanup

if.end143:                                        ; preds = %do.body63
  br label %do.cond144, !dbg !12939

do.cond144:                                       ; preds = %if.end143
  br label %do.end145, !dbg !12939

do.end145:                                        ; preds = %do.cond144
  br label %for.inc, !dbg !12949

for.inc:                                          ; preds = %do.end145
  %80 = load i32, ptr %i, align 4, !dbg !12950, !tbaa !2791
  %inc = add i32 %80, 1, !dbg !12950
  store i32 %inc, ptr %i, align 4, !dbg !12950, !tbaa !2791
  br label %for.cond, !dbg !12951, !llvm.loop !12952

cleanup:                                          ; preds = %if.end133, %for.cond.cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !12951
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup149 [
    i32 14, label %for.end
  ]

for.end:                                          ; preds = %cleanup
  %81 = load ptr, ptr %tsdn.addr, align 8, !dbg !12954, !tbaa !2658
  %82 = load ptr, ptr %rtree.addr, align 8, !dbg !12955, !tbaa !2658
  %83 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12956, !tbaa !2658
  %84 = load i64, ptr %key.addr, align 8, !dbg !12957, !tbaa !2663
  %85 = load i8, ptr %dependent.addr, align 1, !dbg !12958, !tbaa !2695, !range !2708, !noundef !2709
  %tobool146 = trunc i8 %85 to i1, !dbg !12958
  %86 = load i8, ptr %init_missing.addr, align 1, !dbg !12959, !tbaa !2695, !range !2708, !noundef !2709
  %tobool147 = trunc i8 %86 to i1, !dbg !12959
  %call148 = call ptr @rtree_leaf_elm_lookup_hard(ptr noundef %81, ptr noundef %82, ptr noundef %83, i64 noundef %84, i1 noundef zeroext %tobool146, i1 noundef zeroext %tobool147), !dbg !12960
  store ptr %call148, ptr %retval, align 8, !dbg !12961
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup149, !dbg !12961

cleanup149:                                       ; preds = %for.end, %cleanup, %do.end36, %do.end14
  call void @llvm.lifetime.end.p0(i64 8, ptr %leafkey) #18, !dbg !12962
  call void @llvm.lifetime.end.p0(i64 8, ptr %slot) #18, !dbg !12962
  %87 = load ptr, ptr %retval, align 8, !dbg !12962
  ret ptr %87, !dbg !12962
}

declare !dbg !12963 ptr @rtree_leaf_elm_lookup_hard(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i1 noundef zeroext, i1 noundef zeroext) #5

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i32 } @rtree_metadata_read(ptr noundef %tsdn, ptr noundef %rtree, ptr noundef %rtree_ctx, i64 noundef %key) #4 !dbg !12964 {
entry:
  %retval = alloca %struct.rtree_metadata_s, align 4
  %tsdn.addr = alloca ptr, align 8
  %rtree.addr = alloca ptr, align 8
  %rtree_ctx.addr = alloca ptr, align 8
  %key.addr = alloca i64, align 8
  %elm = alloca ptr, align 8
  %tmp = alloca %struct.rtree_contents_s, align 8
  %retval.coerce = alloca { i64, i32 }, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12968, metadata !DIExpression()), !dbg !12973
  store ptr %rtree, ptr %rtree.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree.addr, metadata !12969, metadata !DIExpression()), !dbg !12974
  store ptr %rtree_ctx, ptr %rtree_ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %rtree_ctx.addr, metadata !12970, metadata !DIExpression()), !dbg !12975
  store i64 %key, ptr %key.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !12971, metadata !DIExpression()), !dbg !12976
  call void @llvm.lifetime.start.p0(i64 8, ptr %elm) #18, !dbg !12977
  tail call void @llvm.dbg.declare(metadata ptr %elm, metadata !12972, metadata !DIExpression()), !dbg !12978
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !12979, !tbaa !2658
  %1 = load ptr, ptr %rtree.addr, align 8, !dbg !12980, !tbaa !2658
  %2 = load ptr, ptr %rtree_ctx.addr, align 8, !dbg !12981, !tbaa !2658
  %3 = load i64, ptr %key.addr, align 8, !dbg !12982, !tbaa !2663
  %call = call ptr @rtree_leaf_elm_lookup(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i1 noundef zeroext true, i1 noundef zeroext false), !dbg !12983
  store ptr %call, ptr %elm, align 8, !dbg !12978, !tbaa !2658
  br label %do.body, !dbg !12984

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !12985

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !12985

do.end:                                           ; preds = %do.cond
  %4 = load ptr, ptr %tsdn.addr, align 8, !dbg !12987, !tbaa !2658
  %5 = load ptr, ptr %rtree.addr, align 8, !dbg !12988, !tbaa !2658
  %6 = load ptr, ptr %elm, align 8, !dbg !12989, !tbaa !2658
  call void @rtree_leaf_elm_read(ptr sret(%struct.rtree_contents_s) align 8 %tmp, ptr noundef %4, ptr noundef %5, ptr noundef %6, i1 noundef zeroext true), !dbg !12990
  %metadata = getelementptr inbounds %struct.rtree_contents_s, ptr %tmp, i32 0, i32 1, !dbg !12991
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %retval, ptr align 8 %metadata, i64 12, i1 false), !dbg !12991, !tbaa.struct !12157
  call void @llvm.lifetime.end.p0(i64 8, ptr %elm) #18, !dbg !12992
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %retval.coerce, ptr align 4 %retval, i64 12, i1 false), !dbg !12992
  %7 = load { i64, i32 }, ptr %retval.coerce, align 8, !dbg !12992
  ret { i64, i32 } %7, !dbg !12992
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @ixalloc(ptr noundef %tsdn, ptr noundef %ptr, i64 noundef %oldsize, i64 noundef %size, i64 noundef %extra, i64 noundef %alignment, i1 noundef zeroext %zero, ptr noundef %newsize) #3 !dbg !12993 {
entry:
  %retval = alloca i1, align 1
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %oldsize.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %extra.addr = alloca i64, align 8
  %alignment.addr = alloca i64, align 8
  %zero.addr = alloca i8, align 1
  %newsize.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !12997, metadata !DIExpression()), !dbg !13005
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !12998, metadata !DIExpression()), !dbg !13006
  store i64 %oldsize, ptr %oldsize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %oldsize.addr, metadata !12999, metadata !DIExpression()), !dbg !13007
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !13000, metadata !DIExpression()), !dbg !13008
  store i64 %extra, ptr %extra.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !13001, metadata !DIExpression()), !dbg !13009
  store i64 %alignment, ptr %alignment.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %alignment.addr, metadata !13002, metadata !DIExpression()), !dbg !13010
  %frombool = zext i1 %zero to i8
  store i8 %frombool, ptr %zero.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %zero.addr, metadata !13003, metadata !DIExpression()), !dbg !13011
  store ptr %newsize, ptr %newsize.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %newsize.addr, metadata !13004, metadata !DIExpression()), !dbg !13012
  br label %do.body, !dbg !13013

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13014

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !13016

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !13017

do.end2:                                          ; preds = %do.body1
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !13019, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !13020
  call void @witness_assert_depth_to_rank(ptr noundef %call, i32 noundef 14, i32 noundef 0), !dbg !13021
  %1 = load i64, ptr %alignment.addr, align 8, !dbg !13022, !tbaa !2663
  %cmp = icmp ne i64 %1, 0, !dbg !13024
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13025

land.lhs.true:                                    ; preds = %do.end2
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !13026, !tbaa !2658
  %3 = ptrtoint ptr %2 to i64, !dbg !13027
  %4 = load i64, ptr %alignment.addr, align 8, !dbg !13028, !tbaa !2663
  %sub = sub i64 %4, 1, !dbg !13029
  %and = and i64 %3, %sub, !dbg !13030
  %cmp3 = icmp ne i64 %and, 0, !dbg !13031
  br i1 %cmp3, label %if.then, label %if.end, !dbg !13032

if.then:                                          ; preds = %land.lhs.true
  %5 = load i64, ptr %oldsize.addr, align 8, !dbg !13033, !tbaa !2663
  %6 = load ptr, ptr %newsize.addr, align 8, !dbg !13035, !tbaa !2658
  store i64 %5, ptr %6, align 8, !dbg !13036, !tbaa !2663
  store i1 true, ptr %retval, align 1, !dbg !13037
  br label %return, !dbg !13037

if.end:                                           ; preds = %land.lhs.true, %do.end2
  %7 = load ptr, ptr %tsdn.addr, align 8, !dbg !13038, !tbaa !2658
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !13039, !tbaa !2658
  %9 = load i64, ptr %oldsize.addr, align 8, !dbg !13040, !tbaa !2663
  %10 = load i64, ptr %size.addr, align 8, !dbg !13041, !tbaa !2663
  %11 = load i64, ptr %extra.addr, align 8, !dbg !13042, !tbaa !2663
  %12 = load i8, ptr %zero.addr, align 1, !dbg !13043, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %12 to i1, !dbg !13043
  %13 = load ptr, ptr %newsize.addr, align 8, !dbg !13044, !tbaa !2658
  %call4 = call zeroext i1 @arena_ralloc_no_move(ptr noundef %7, ptr noundef %8, i64 noundef %9, i64 noundef %10, i64 noundef %11, i1 noundef zeroext %tobool, ptr noundef %13), !dbg !13045
  store i1 %call4, ptr %retval, align 1, !dbg !13046
  br label %return, !dbg !13046

return:                                           ; preds = %if.end, %if.then
  %14 = load i1, ptr %retval, align 1, !dbg !13047
  ret i1 %14, !dbg !13047
}

declare !dbg !13048 zeroext i1 @arena_ralloc_no_move(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i64 noundef, i1 noundef zeroext, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal void @te_event_advance(ptr noundef %tsd, i64 noundef %usize, i1 noundef zeroext %is_alloc) #3 !dbg !13051 {
entry:
  %tsd.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  %is_alloc.addr = alloca i8, align 1
  %ctx = alloca %struct.te_ctx_s, align 8
  %bytes_before = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13055, metadata !DIExpression()), !dbg !13068
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !13056, metadata !DIExpression()), !dbg !13069
  %frombool = zext i1 %is_alloc to i8
  store i8 %frombool, ptr %is_alloc.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_alloc.addr, metadata !13057, metadata !DIExpression()), !dbg !13070
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13071, !tbaa !2658
  call void @te_assert_invariants(ptr noundef %0), !dbg !13072
  call void @llvm.lifetime.start.p0(i64 40, ptr %ctx) #18, !dbg !13073
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !13058, metadata !DIExpression()), !dbg !13074
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13075, !tbaa !2658
  %2 = load i8, ptr %is_alloc.addr, align 1, !dbg !13076, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !13076
  call void @te_ctx_get(ptr noundef %1, ptr noundef %ctx, i1 noundef zeroext %tobool), !dbg !13077
  call void @llvm.lifetime.start.p0(i64 8, ptr %bytes_before) #18, !dbg !13078
  tail call void @llvm.dbg.declare(metadata ptr %bytes_before, metadata !13067, metadata !DIExpression()), !dbg !13079
  %call = call i64 @te_ctx_current_bytes_get(ptr noundef %ctx), !dbg !13080
  store i64 %call, ptr %bytes_before, align 8, !dbg !13079, !tbaa !2663
  %3 = load i64, ptr %bytes_before, align 8, !dbg !13081, !tbaa !2663
  %4 = load i64, ptr %usize.addr, align 8, !dbg !13082, !tbaa !2663
  %add = add i64 %3, %4, !dbg !13083
  call void @te_ctx_current_bytes_set(ptr noundef %ctx, i64 noundef %add), !dbg !13084
  %5 = load i64, ptr %usize.addr, align 8, !dbg !13085, !tbaa !2663
  %call1 = call i64 @te_ctx_next_event_get(ptr noundef %ctx), !dbg !13085
  %6 = load i64, ptr %bytes_before, align 8, !dbg !13085, !tbaa !2663
  %sub = sub i64 %call1, %6, !dbg !13085
  %cmp = icmp ult i64 %5, %sub, !dbg !13085
  %lnot = xor i1 %cmp, true, !dbg !13085
  %lnot2 = xor i1 %lnot, true, !dbg !13085
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13085
  %conv = sext i32 %lnot.ext to i64, !dbg !13085
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !13085
  %tobool3 = icmp ne i64 %expval, 0, !dbg !13085
  br i1 %tobool3, label %if.then, label %if.else, !dbg !13087

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !13088, !tbaa !2658
  call void @te_assert_invariants(ptr noundef %7), !dbg !13090
  br label %if.end, !dbg !13091

if.else:                                          ; preds = %entry
  %8 = load ptr, ptr %tsd.addr, align 8, !dbg !13092, !tbaa !2658
  call void @te_event_trigger(ptr noundef %8, ptr noundef %ctx), !dbg !13094
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %bytes_before) #18, !dbg !13095
  call void @llvm.lifetime.end.p0(i64 40, ptr %ctx) #18, !dbg !13095
  ret void, !dbg !13095
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @te_assert_invariants(ptr noundef %tsd) #3 !dbg !13096 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13098, metadata !DIExpression()), !dbg !13099
  ret void, !dbg !13100
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @te_ctx_get(ptr noundef %tsd, ptr noundef %ctx, i1 noundef zeroext %is_alloc) #3 !dbg !13101 {
entry:
  %tsd.addr = alloca ptr, align 8
  %ctx.addr = alloca ptr, align 8
  %is_alloc.addr = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13106, metadata !DIExpression()), !dbg !13109
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ctx.addr, metadata !13107, metadata !DIExpression()), !dbg !13110
  %frombool = zext i1 %is_alloc to i8
  store i8 %frombool, ptr %is_alloc.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %is_alloc.addr, metadata !13108, metadata !DIExpression()), !dbg !13111
  %0 = load i8, ptr %is_alloc.addr, align 1, !dbg !13112, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !13112
  %1 = load ptr, ptr %ctx.addr, align 8, !dbg !13113, !tbaa !2658
  %is_alloc1 = getelementptr inbounds %struct.te_ctx_s, ptr %1, i32 0, i32 0, !dbg !13114
  %frombool2 = zext i1 %tobool to i8, !dbg !13115
  store i8 %frombool2, ptr %is_alloc1, align 8, !dbg !13115, !tbaa !13116
  %2 = load i8, ptr %is_alloc.addr, align 1, !dbg !13118, !tbaa !2695, !range !2708, !noundef !2709
  %tobool3 = trunc i8 %2 to i1, !dbg !13118
  br i1 %tobool3, label %if.then, label %if.else, !dbg !13120

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !13121, !tbaa !2658
  %call = call ptr @tsd_thread_allocatedp_get(ptr noundef %3), !dbg !13123
  %4 = load ptr, ptr %ctx.addr, align 8, !dbg !13124, !tbaa !2658
  %current = getelementptr inbounds %struct.te_ctx_s, ptr %4, i32 0, i32 1, !dbg !13125
  store ptr %call, ptr %current, align 8, !dbg !13126, !tbaa !13127
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !13128, !tbaa !2658
  %call4 = call ptr @tsd_thread_allocated_last_eventp_get(ptr noundef %5), !dbg !13129
  %6 = load ptr, ptr %ctx.addr, align 8, !dbg !13130, !tbaa !2658
  %last_event = getelementptr inbounds %struct.te_ctx_s, ptr %6, i32 0, i32 2, !dbg !13131
  store ptr %call4, ptr %last_event, align 8, !dbg !13132, !tbaa !13133
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !13134, !tbaa !2658
  %call5 = call ptr @tsd_thread_allocated_next_eventp_get(ptr noundef %7), !dbg !13135
  %8 = load ptr, ptr %ctx.addr, align 8, !dbg !13136, !tbaa !2658
  %next_event = getelementptr inbounds %struct.te_ctx_s, ptr %8, i32 0, i32 3, !dbg !13137
  store ptr %call5, ptr %next_event, align 8, !dbg !13138, !tbaa !13139
  %9 = load ptr, ptr %tsd.addr, align 8, !dbg !13140, !tbaa !2658
  %call6 = call ptr @tsd_thread_allocated_next_event_fastp_get(ptr noundef %9), !dbg !13141
  %10 = load ptr, ptr %ctx.addr, align 8, !dbg !13142, !tbaa !2658
  %next_event_fast = getelementptr inbounds %struct.te_ctx_s, ptr %10, i32 0, i32 4, !dbg !13143
  store ptr %call6, ptr %next_event_fast, align 8, !dbg !13144, !tbaa !13145
  br label %if.end, !dbg !13146

if.else:                                          ; preds = %entry
  %11 = load ptr, ptr %tsd.addr, align 8, !dbg !13147, !tbaa !2658
  %call7 = call ptr @tsd_thread_deallocatedp_get(ptr noundef %11), !dbg !13149
  %12 = load ptr, ptr %ctx.addr, align 8, !dbg !13150, !tbaa !2658
  %current8 = getelementptr inbounds %struct.te_ctx_s, ptr %12, i32 0, i32 1, !dbg !13151
  store ptr %call7, ptr %current8, align 8, !dbg !13152, !tbaa !13127
  %13 = load ptr, ptr %tsd.addr, align 8, !dbg !13153, !tbaa !2658
  %call9 = call ptr @tsd_thread_deallocated_last_eventp_get(ptr noundef %13), !dbg !13154
  %14 = load ptr, ptr %ctx.addr, align 8, !dbg !13155, !tbaa !2658
  %last_event10 = getelementptr inbounds %struct.te_ctx_s, ptr %14, i32 0, i32 2, !dbg !13156
  store ptr %call9, ptr %last_event10, align 8, !dbg !13157, !tbaa !13133
  %15 = load ptr, ptr %tsd.addr, align 8, !dbg !13158, !tbaa !2658
  %call11 = call ptr @tsd_thread_deallocated_next_eventp_get(ptr noundef %15), !dbg !13159
  %16 = load ptr, ptr %ctx.addr, align 8, !dbg !13160, !tbaa !2658
  %next_event12 = getelementptr inbounds %struct.te_ctx_s, ptr %16, i32 0, i32 3, !dbg !13161
  store ptr %call11, ptr %next_event12, align 8, !dbg !13162, !tbaa !13139
  %17 = load ptr, ptr %tsd.addr, align 8, !dbg !13163, !tbaa !2658
  %call13 = call ptr @tsd_thread_deallocated_next_event_fastp_get(ptr noundef %17), !dbg !13164
  %18 = load ptr, ptr %ctx.addr, align 8, !dbg !13165, !tbaa !2658
  %next_event_fast14 = getelementptr inbounds %struct.te_ctx_s, ptr %18, i32 0, i32 4, !dbg !13166
  store ptr %call13, ptr %next_event_fast14, align 8, !dbg !13167, !tbaa !13145
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13168
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @te_ctx_current_bytes_get(ptr noundef %ctx) #3 !dbg !13169 {
entry:
  %ctx.addr = alloca ptr, align 8
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ctx.addr, metadata !13173, metadata !DIExpression()), !dbg !13174
  %0 = load ptr, ptr %ctx.addr, align 8, !dbg !13175, !tbaa !2658
  %current = getelementptr inbounds %struct.te_ctx_s, ptr %0, i32 0, i32 1, !dbg !13176
  %1 = load ptr, ptr %current, align 8, !dbg !13176, !tbaa !13127
  %2 = load i64, ptr %1, align 8, !dbg !13177, !tbaa !2663
  ret i64 %2, !dbg !13178
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @te_ctx_current_bytes_set(ptr noundef %ctx, i64 noundef %v) #3 !dbg !13179 {
entry:
  %ctx.addr = alloca ptr, align 8
  %v.addr = alloca i64, align 8
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ctx.addr, metadata !13183, metadata !DIExpression()), !dbg !13185
  store i64 %v, ptr %v.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !13184, metadata !DIExpression()), !dbg !13186
  %0 = load i64, ptr %v.addr, align 8, !dbg !13187, !tbaa !2663
  %1 = load ptr, ptr %ctx.addr, align 8, !dbg !13188, !tbaa !2658
  %current = getelementptr inbounds %struct.te_ctx_s, ptr %1, i32 0, i32 1, !dbg !13189
  %2 = load ptr, ptr %current, align 8, !dbg !13189, !tbaa !13127
  store i64 %0, ptr %2, align 8, !dbg !13190, !tbaa !2663
  ret void, !dbg !13191
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @te_ctx_next_event_get(ptr noundef %ctx) #3 !dbg !13192 {
entry:
  %ctx.addr = alloca ptr, align 8
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ctx.addr, metadata !13194, metadata !DIExpression()), !dbg !13195
  %0 = load ptr, ptr %ctx.addr, align 8, !dbg !13196, !tbaa !2658
  %next_event = getelementptr inbounds %struct.te_ctx_s, ptr %0, i32 0, i32 3, !dbg !13197
  %1 = load ptr, ptr %next_event, align 8, !dbg !13197, !tbaa !13139
  %2 = load i64, ptr %1, align 8, !dbg !13198, !tbaa !2663
  ret i64 %2, !dbg !13199
}

declare !dbg !13200 void @te_event_trigger(ptr noundef, ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocated_last_eventp_get(ptr noundef %tsd) #3 !dbg !13203 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !13207
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13206, metadata !DIExpression()), !dbg !13207
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13207, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !13207
  store i8 %call, ptr %state, align 1, !dbg !13207, !tbaa !2810
  br label %do.body, !dbg !13207

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13208

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13208

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13207, !tbaa !2658
  %call1 = call ptr @tsd_thread_allocated_last_eventp_get_unsafe(ptr noundef %1), !dbg !13207
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !13207
  ret ptr %call1, !dbg !13207
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocated_next_eventp_get(ptr noundef %tsd) #3 !dbg !13210 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13212, metadata !DIExpression()), !dbg !13214
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !13214
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13213, metadata !DIExpression()), !dbg !13214
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13214, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !13214
  store i8 %call, ptr %state, align 1, !dbg !13214, !tbaa !2810
  br label %do.body, !dbg !13214

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13215

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13215

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13214, !tbaa !2658
  %call1 = call ptr @tsd_thread_allocated_next_eventp_get_unsafe(ptr noundef %1), !dbg !13214
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !13214
  ret ptr %call1, !dbg !13214
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocated_next_event_fastp_get(ptr noundef %tsd) #3 !dbg !13217 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13219, metadata !DIExpression()), !dbg !13221
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !13221
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13220, metadata !DIExpression()), !dbg !13221
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13221, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !13221
  store i8 %call, ptr %state, align 1, !dbg !13221, !tbaa !2810
  br label %do.body, !dbg !13221

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13222

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13222

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13221, !tbaa !2658
  %call1 = call ptr @tsd_thread_allocated_next_event_fastp_get_unsafe(ptr noundef %1), !dbg !13221
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !13221
  ret ptr %call1, !dbg !13221
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocated_last_eventp_get(ptr noundef %tsd) #3 !dbg !13224 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13226, metadata !DIExpression()), !dbg !13228
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !13228
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13227, metadata !DIExpression()), !dbg !13228
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13228, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !13228
  store i8 %call, ptr %state, align 1, !dbg !13228, !tbaa !2810
  br label %do.body, !dbg !13228

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13229

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13229

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13228, !tbaa !2658
  %call1 = call ptr @tsd_thread_deallocated_last_eventp_get_unsafe(ptr noundef %1), !dbg !13228
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !13228
  ret ptr %call1, !dbg !13228
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocated_next_eventp_get(ptr noundef %tsd) #3 !dbg !13231 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13233, metadata !DIExpression()), !dbg !13235
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !13235
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13234, metadata !DIExpression()), !dbg !13235
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13235, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !13235
  store i8 %call, ptr %state, align 1, !dbg !13235, !tbaa !2810
  br label %do.body, !dbg !13235

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13236

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13236

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13235, !tbaa !2658
  %call1 = call ptr @tsd_thread_deallocated_next_eventp_get_unsafe(ptr noundef %1), !dbg !13235
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !13235
  ret ptr %call1, !dbg !13235
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocated_next_event_fastp_get(ptr noundef %tsd) #3 !dbg !13238 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13240, metadata !DIExpression()), !dbg !13242
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !13242
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13241, metadata !DIExpression()), !dbg !13242
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13242, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !13242
  store i8 %call, ptr %state, align 1, !dbg !13242, !tbaa !2810
  br label %do.body, !dbg !13242

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13243

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13243

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13242, !tbaa !2658
  %call1 = call ptr @tsd_thread_deallocated_next_event_fastp_get_unsafe(ptr noundef %1), !dbg !13242
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !13242
  ret ptr %call1, !dbg !13242
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocated_last_eventp_get_unsafe(ptr noundef %tsd) #3 !dbg !13245 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13247, metadata !DIExpression()), !dbg !13248
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13248, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_last_event = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 2, !dbg !13248
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_last_event, !dbg !13248
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_allocated_next_eventp_get_unsafe(ptr noundef %tsd) #3 !dbg !13249 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13251, metadata !DIExpression()), !dbg !13252
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13252, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_next_event = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 3, !dbg !13252
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_next_event, !dbg !13252
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocated_last_eventp_get_unsafe(ptr noundef %tsd) #3 !dbg !13253 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13255, metadata !DIExpression()), !dbg !13256
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13256, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_last_event = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 4, !dbg !13256
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_last_event, !dbg !13256
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_thread_deallocated_next_eventp_get_unsafe(ptr noundef %tsd) #3 !dbg !13257 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13259, metadata !DIExpression()), !dbg !13260
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13260, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_next_event = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 5, !dbg !13260
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_next_event, !dbg !13260
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @tsd_booted_get() #3 !dbg !13261 {
entry:
  %0 = load i8, ptr @tsd_booted, align 1, !dbg !13262, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !13262
  ret i1 %tobool, !dbg !13263
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @arena_salloc(ptr noundef %tsdn, ptr noundef %ptr) #3 !dbg !13264 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %alloc_ctx = alloca %struct.emap_alloc_ctx_t, align 4
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !13266, metadata !DIExpression()), !dbg !13269
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !13267, metadata !DIExpression()), !dbg !13270
  br label %do.body, !dbg !13271

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13272

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %alloc_ctx) #18, !dbg !13274
  tail call void @llvm.dbg.declare(metadata ptr %alloc_ctx, metadata !13268, metadata !DIExpression()), !dbg !13275
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !13276, !tbaa !2658
  %1 = load ptr, ptr %ptr.addr, align 8, !dbg !13277, !tbaa !2658
  call void @emap_alloc_ctx_lookup(ptr noundef %0, ptr noundef @arena_emap_global, ptr noundef %1, ptr noundef %alloc_ctx), !dbg !13278
  br label %do.body1, !dbg !13279

do.body1:                                         ; preds = %do.end
  br label %do.cond, !dbg !13280

do.cond:                                          ; preds = %do.body1
  br label %do.end2, !dbg !13280

do.end2:                                          ; preds = %do.cond
  %szind = getelementptr inbounds %struct.emap_alloc_ctx_t, ptr %alloc_ctx, i32 0, i32 0, !dbg !13282
  %2 = load i32, ptr %szind, align 4, !dbg !13282, !tbaa !4364
  %call = call i64 @sz_index2size(i32 noundef %2), !dbg !13283
  call void @llvm.lifetime.end.p0(i64 8, ptr %alloc_ctx) #18, !dbg !13284
  ret i64 %call, !dbg !13285
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_init_hard() #0 !dbg !13286 {
entry:
  %retval = alloca i1, align 1
  %tsd = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !13289
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !13288, metadata !DIExpression()), !dbg !13290
  call void @malloc_mutex_lock(ptr noundef null, ptr noundef @init_lock), !dbg !13291
  %call = call zeroext i1 @malloc_init_hard_needed(), !dbg !13292
  br i1 %call, label %if.end, label %if.then, !dbg !13294

if.then:                                          ; preds = %entry
  call void @malloc_init_hard_cleanup(ptr noundef null, i1 noundef zeroext false), !dbg !13295
  store i1 false, ptr %retval, align 1, !dbg !13295
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13295

if.end:                                           ; preds = %entry
  %0 = load i32, ptr @malloc_init_state, align 4, !dbg !13297, !tbaa !2810
  %cmp = icmp ne i32 %0, 2, !dbg !13299
  br i1 %cmp, label %land.lhs.true, label %if.end3, !dbg !13300

land.lhs.true:                                    ; preds = %if.end
  %call1 = call zeroext i1 @malloc_init_hard_a0_locked(), !dbg !13301
  br i1 %call1, label %if.then2, label %if.end3, !dbg !13302

if.then2:                                         ; preds = %land.lhs.true
  call void @malloc_init_hard_cleanup(ptr noundef null, i1 noundef zeroext false), !dbg !13303
  store i1 true, ptr %retval, align 1, !dbg !13303
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13303

if.end3:                                          ; preds = %land.lhs.true, %if.end
  call void @malloc_mutex_unlock(ptr noundef null, ptr noundef @init_lock), !dbg !13305
  %call4 = call ptr @malloc_tsd_boot0(), !dbg !13306
  store ptr %call4, ptr %tsd, align 8, !dbg !13307, !tbaa !2658
  %1 = load ptr, ptr %tsd, align 8, !dbg !13308, !tbaa !2658
  %cmp5 = icmp eq ptr %1, null, !dbg !13310
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !13311

if.then6:                                         ; preds = %if.end3
  store i1 true, ptr %retval, align 1, !dbg !13312
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13312

if.end7:                                          ; preds = %if.end3
  %call8 = call zeroext i1 @malloc_init_hard_recursible(), !dbg !13314
  br i1 %call8, label %if.then9, label %if.end10, !dbg !13316

if.then9:                                         ; preds = %if.end7
  store i1 true, ptr %retval, align 1, !dbg !13317
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13317

if.end10:                                         ; preds = %if.end7
  %2 = load ptr, ptr %tsd, align 8, !dbg !13319, !tbaa !2658
  %call11 = call ptr @tsd_tsdn(ptr noundef %2), !dbg !13320
  call void @malloc_mutex_lock(ptr noundef %call11, ptr noundef @init_lock), !dbg !13321
  %3 = load ptr, ptr %tsd, align 8, !dbg !13322, !tbaa !2658
  call void @pre_reentrancy(ptr noundef %3, ptr noundef null), !dbg !13323
  %call12 = call zeroext i1 @malloc_init_narenas(), !dbg !13324
  br i1 %call12, label %if.then16, label %lor.lhs.false, !dbg !13326

lor.lhs.false:                                    ; preds = %if.end10
  %4 = load ptr, ptr %tsd, align 8, !dbg !13327, !tbaa !2658
  %call13 = call ptr @tsd_tsdn(ptr noundef %4), !dbg !13328
  %call14 = call ptr @b0get(), !dbg !13329
  %call15 = call zeroext i1 @background_thread_boot1(ptr noundef %call13, ptr noundef %call14), !dbg !13330
  br i1 %call15, label %if.then16, label %if.end18, !dbg !13331

if.then16:                                        ; preds = %lor.lhs.false, %if.end10
  %5 = load ptr, ptr %tsd, align 8, !dbg !13332, !tbaa !2658
  %call17 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !13332
  call void @malloc_init_hard_cleanup(ptr noundef %call17, i1 noundef zeroext true), !dbg !13332
  store i1 true, ptr %retval, align 1, !dbg !13332
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13332

if.end18:                                         ; preds = %lor.lhs.false
  call void @malloc_init_percpu(), !dbg !13334
  %call19 = call zeroext i1 @malloc_init_hard_finish(), !dbg !13335
  br i1 %call19, label %if.then20, label %if.end22, !dbg !13337

if.then20:                                        ; preds = %if.end18
  %6 = load ptr, ptr %tsd, align 8, !dbg !13338, !tbaa !2658
  %call21 = call ptr @tsd_tsdn(ptr noundef %6), !dbg !13338
  call void @malloc_init_hard_cleanup(ptr noundef %call21, i1 noundef zeroext true), !dbg !13338
  store i1 true, ptr %retval, align 1, !dbg !13338
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13338

if.end22:                                         ; preds = %if.end18
  %7 = load ptr, ptr %tsd, align 8, !dbg !13340, !tbaa !2658
  call void @post_reentrancy(ptr noundef %7), !dbg !13341
  %8 = load ptr, ptr %tsd, align 8, !dbg !13342, !tbaa !2658
  %call23 = call ptr @tsd_tsdn(ptr noundef %8), !dbg !13343
  call void @malloc_mutex_unlock(ptr noundef %call23, ptr noundef @init_lock), !dbg !13344
  %9 = load ptr, ptr %tsd, align 8, !dbg !13345, !tbaa !2658
  %call24 = call ptr @tsd_witness_tsdp_get_unsafe(ptr noundef %9), !dbg !13346
  %call25 = call ptr @witness_tsd_tsdn(ptr noundef %call24), !dbg !13347
  call void @witness_assert_lockless(ptr noundef %call25), !dbg !13348
  call void @malloc_tsd_boot1(), !dbg !13349
  %call26 = call ptr @tsd_fetch(), !dbg !13350
  store ptr %call26, ptr %tsd, align 8, !dbg !13351, !tbaa !2658
  %10 = load i8, ptr @opt_background_thread, align 1, !dbg !13352, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %10 to i1, !dbg !13352
  br i1 %tobool, label %if.then27, label %if.end32, !dbg !13354

if.then27:                                        ; preds = %if.end22
  br label %do.body, !dbg !13355

do.body:                                          ; preds = %if.then27
  br label %do.cond, !dbg !13357

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13357

do.end:                                           ; preds = %do.cond
  %11 = load ptr, ptr %tsd, align 8, !dbg !13359, !tbaa !2658
  %call28 = call ptr @tsd_tsdn(ptr noundef %11), !dbg !13360
  call void @background_thread_ctl_init(ptr noundef %call28), !dbg !13361
  %12 = load ptr, ptr %tsd, align 8, !dbg !13362, !tbaa !2658
  %call29 = call zeroext i1 @background_thread_create(ptr noundef %12, i32 noundef 0), !dbg !13364
  br i1 %call29, label %if.then30, label %if.end31, !dbg !13365

if.then30:                                        ; preds = %do.end
  store i1 true, ptr %retval, align 1, !dbg !13366
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13366

if.end31:                                         ; preds = %do.end
  br label %if.end32, !dbg !13368

if.end32:                                         ; preds = %if.end31, %if.end22
  store i1 false, ptr %retval, align 1, !dbg !13369
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13369

cleanup:                                          ; preds = %if.end32, %if.then30, %if.then20, %if.then16, %if.then9, %if.then6, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !13370
  %13 = load i1, ptr %retval, align 1, !dbg !13370
  ret i1 %13, !dbg !13370
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_init_hard_needed() #0 !dbg !13371 {
entry:
  %retval = alloca i1, align 1
  %spinner = alloca %struct.spin_t, align 4
  %call = call zeroext i1 @malloc_initialized(), !dbg !13381
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !13383

lor.lhs.false:                                    ; preds = %entry
  %0 = load i64, ptr @malloc_initializer, align 8, !dbg !13384, !tbaa !2663
  %call1 = call i64 @pthread_self() #21, !dbg !13384
  %cmp = icmp eq i64 %0, %call1, !dbg !13384
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13385

land.lhs.true:                                    ; preds = %lor.lhs.false
  %1 = load i32, ptr @malloc_init_state, align 4, !dbg !13386, !tbaa !2810
  %cmp2 = icmp eq i32 %1, 1, !dbg !13387
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13388

if.then:                                          ; preds = %land.lhs.true, %entry
  store i1 false, ptr %retval, align 1, !dbg !13389
  br label %return, !dbg !13389

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %2 = load i64, ptr @malloc_initializer, align 8, !dbg !13391, !tbaa !2663
  %cmp3 = icmp ne i64 %2, 0, !dbg !13392
  br i1 %cmp3, label %land.lhs.true4, label %if.end9, !dbg !13393

land.lhs.true4:                                   ; preds = %if.end
  %3 = load i64, ptr @malloc_initializer, align 8, !dbg !13394, !tbaa !2663
  %call5 = call i64 @pthread_self() #21, !dbg !13394
  %cmp6 = icmp eq i64 %3, %call5, !dbg !13394
  br i1 %cmp6, label %if.end9, label %if.then7, !dbg !13395

if.then7:                                         ; preds = %land.lhs.true4
  call void @llvm.lifetime.start.p0(i64 4, ptr %spinner) #18, !dbg !13396
  tail call void @llvm.dbg.declare(metadata ptr %spinner, metadata !13373, metadata !DIExpression()), !dbg !13397
  call void @llvm.memset.p0.i64(ptr align 4 %spinner, i8 0, i64 4, i1 false), !dbg !13397
  br label %do.body, !dbg !13398

do.body:                                          ; preds = %do.cond, %if.then7
  call void @malloc_mutex_unlock(ptr noundef null, ptr noundef @init_lock), !dbg !13399
  call void @spin_adaptive(ptr noundef %spinner), !dbg !13401
  call void @malloc_mutex_lock(ptr noundef null, ptr noundef @init_lock), !dbg !13402
  br label %do.cond, !dbg !13403

do.cond:                                          ; preds = %do.body
  %call8 = call zeroext i1 @malloc_initialized(), !dbg !13404
  %lnot = xor i1 %call8, true, !dbg !13405
  br i1 %lnot, label %do.body, label %do.end, !dbg !13403, !llvm.loop !13406

do.end:                                           ; preds = %do.cond
  store i1 false, ptr %retval, align 1, !dbg !13408
  call void @llvm.lifetime.end.p0(i64 4, ptr %spinner) #18, !dbg !13409
  br label %return

if.end9:                                          ; preds = %land.lhs.true4, %if.end
  store i1 true, ptr %retval, align 1, !dbg !13410
  br label %return, !dbg !13410

return:                                           ; preds = %if.end9, %do.end, %if.then
  %4 = load i1, ptr %retval, align 1, !dbg !13411
  ret i1 %4, !dbg !13411
}

; Function Attrs: nounwind uwtable
define internal void @malloc_init_hard_cleanup(ptr noundef %tsdn, i1 noundef zeroext %reentrancy_set) #0 !dbg !13412 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %reentrancy_set.addr = alloca i8, align 1
  %tsd = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !13416, metadata !DIExpression()), !dbg !13421
  %frombool = zext i1 %reentrancy_set to i8
  store i8 %frombool, ptr %reentrancy_set.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %reentrancy_set.addr, metadata !13417, metadata !DIExpression()), !dbg !13422
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !13423, !tbaa !2658
  call void @malloc_mutex_assert_owner(ptr noundef %0, ptr noundef @init_lock), !dbg !13424
  %1 = load ptr, ptr %tsdn.addr, align 8, !dbg !13425, !tbaa !2658
  call void @malloc_mutex_unlock(ptr noundef %1, ptr noundef @init_lock), !dbg !13426
  %2 = load i8, ptr %reentrancy_set.addr, align 1, !dbg !13427, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %2 to i1, !dbg !13427
  br i1 %tobool, label %if.then, label %if.end, !dbg !13428

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13429

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !13430

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsd) #18, !dbg !13432
  tail call void @llvm.dbg.declare(metadata ptr %tsd, metadata !13418, metadata !DIExpression()), !dbg !13433
  %3 = load ptr, ptr %tsdn.addr, align 8, !dbg !13434, !tbaa !2658
  %call = call ptr @tsdn_tsd(ptr noundef %3), !dbg !13435
  store ptr %call, ptr %tsd, align 8, !dbg !13433, !tbaa !2658
  br label %do.body1, !dbg !13436

do.body1:                                         ; preds = %do.end
  br label %do.cond, !dbg !13437

do.cond:                                          ; preds = %do.body1
  br label %do.end2, !dbg !13437

do.end2:                                          ; preds = %do.cond
  %4 = load ptr, ptr %tsd, align 8, !dbg !13439, !tbaa !2658
  call void @post_reentrancy(ptr noundef %4), !dbg !13440
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsd) #18, !dbg !13441
  br label %if.end, !dbg !13442

if.end:                                           ; preds = %do.end2, %entry
  ret void, !dbg !13443
}

declare !dbg !13444 ptr @malloc_tsd_boot0() #5

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_init_hard_recursible() #0 !dbg !13445 {
entry:
  %retval = alloca i1, align 1
  %cpu_count_is_deterministic = alloca i8, align 1
  store i32 1, ptr @malloc_init_state, align 4, !dbg !13450, !tbaa !2810
  %call = call i32 @malloc_ncpus(), !dbg !13451
  store i32 %call, ptr @ncpus, align 4, !dbg !13452, !tbaa !2791
  %0 = load i32, ptr @opt_percpu_arena, align 4, !dbg !13453, !tbaa !2810
  %cmp = icmp ne i32 %0, 2, !dbg !13454
  br i1 %cmp, label %if.then, label %if.end12, !dbg !13455

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 1, ptr %cpu_count_is_deterministic) #18, !dbg !13456
  tail call void @llvm.dbg.declare(metadata ptr %cpu_count_is_deterministic, metadata !13447, metadata !DIExpression()), !dbg !13457
  %call1 = call zeroext i1 @malloc_cpu_count_is_deterministic(), !dbg !13458
  %frombool = zext i1 %call1 to i8, !dbg !13457
  store i8 %frombool, ptr %cpu_count_is_deterministic, align 1, !dbg !13457, !tbaa !2695
  %1 = load i8, ptr %cpu_count_is_deterministic, align 1, !dbg !13459, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !13459
  br i1 %tobool, label %if.end11, label %if.then2, !dbg !13461

if.then2:                                         ; preds = %if.then
  %2 = load i32, ptr @opt_narenas, align 4, !dbg !13462, !tbaa !2791
  %cmp3 = icmp eq i32 %2, 0, !dbg !13465
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !13466

if.then4:                                         ; preds = %if.then2
  store i32 2, ptr @opt_percpu_arena, align 4, !dbg !13467, !tbaa !2810
  call void @malloc_write(ptr noundef @.str.164), !dbg !13469
  %3 = load i8, ptr @opt_abort_conf, align 1, !dbg !13470, !tbaa !2695, !range !2708, !noundef !2709
  %tobool5 = trunc i8 %3 to i1, !dbg !13470
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !13472

if.then6:                                         ; preds = %if.then4
  call void @malloc_abort_invalid_conf(), !dbg !13473
  br label %if.end, !dbg !13475

if.end:                                           ; preds = %if.then6, %if.then4
  %4 = load i8, ptr @opt_abort, align 1, !dbg !13476, !tbaa !2695, !range !2708, !noundef !2709
  %tobool7 = trunc i8 %4 to i1, !dbg !13476
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !13478

if.then8:                                         ; preds = %if.end
  call void @abort() #19, !dbg !13479
  unreachable, !dbg !13479

if.end9:                                          ; preds = %if.end
  br label %if.end10, !dbg !13481

if.end10:                                         ; preds = %if.end9, %if.then2
  br label %if.end11, !dbg !13482

if.end11:                                         ; preds = %if.end10, %if.then
  call void @llvm.lifetime.end.p0(i64 1, ptr %cpu_count_is_deterministic) #18, !dbg !13483
  br label %if.end12, !dbg !13484

if.end12:                                         ; preds = %if.end11, %entry
  %call13 = call i32 @pthread_atfork(ptr noundef @jemalloc_prefork, ptr noundef @jemalloc_postfork_parent, ptr noundef @jemalloc_postfork_child) #18, !dbg !13485
  %cmp14 = icmp ne i32 %call13, 0, !dbg !13487
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !13488

if.then15:                                        ; preds = %if.end12
  call void @malloc_write(ptr noundef @.str.165), !dbg !13489
  %5 = load i8, ptr @opt_abort, align 1, !dbg !13491, !tbaa !2695, !range !2708, !noundef !2709
  %tobool16 = trunc i8 %5 to i1, !dbg !13491
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !13493

if.then17:                                        ; preds = %if.then15
  call void @abort() #19, !dbg !13494
  unreachable, !dbg !13494

if.end18:                                         ; preds = %if.then15
  store i1 true, ptr %retval, align 1, !dbg !13496
  br label %return, !dbg !13496

if.end19:                                         ; preds = %if.end12
  %call20 = call zeroext i1 @background_thread_boot0(), !dbg !13497
  br i1 %call20, label %if.then21, label %if.end22, !dbg !13499

if.then21:                                        ; preds = %if.end19
  store i1 true, ptr %retval, align 1, !dbg !13500
  br label %return, !dbg !13500

if.end22:                                         ; preds = %if.end19
  store i1 false, ptr %retval, align 1, !dbg !13502
  br label %return, !dbg !13502

return:                                           ; preds = %if.end22, %if.then21, %if.end18
  %6 = load i1, ptr %retval, align 1, !dbg !13503
  ret i1 %6, !dbg !13503
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pre_reentrancy(ptr noundef %tsd, ptr noundef %arena) #4 !dbg !13504 {
entry:
  %tsd.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13506, metadata !DIExpression()), !dbg !13508
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !13507, metadata !DIExpression()), !dbg !13509
  br label %do.body, !dbg !13510

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13511

do.end:                                           ; preds = %do.body
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13513, !tbaa !2658
  call void @tsd_pre_reentrancy_raw(ptr noundef %0), !dbg !13514
  ret void, !dbg !13515
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_init_narenas() #0 !dbg !13516 {
entry:
  %retval = alloca i1, align 1
  %n = alloca i32, align 4
  br label %do.body, !dbg !13523

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13524

do.end:                                           ; preds = %do.body
  %0 = load i32, ptr @opt_percpu_arena, align 4, !dbg !13526, !tbaa !2810
  %cmp = icmp ne i32 %0, 2, !dbg !13527
  br i1 %cmp, label %if.then, label %if.end26, !dbg !13528

if.then:                                          ; preds = %do.end
  %call = call i32 @malloc_getcpu(), !dbg !13529
  %cmp1 = icmp slt i32 %call, 0, !dbg !13530
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !13531

if.then2:                                         ; preds = %if.then
  store i32 2, ptr @opt_percpu_arena, align 4, !dbg !13532, !tbaa !2810
  %1 = load i32, ptr @opt_narenas, align 4, !dbg !13534, !tbaa !2791
  %tobool = icmp ne i32 %1, 0, !dbg !13534
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13534

cond.true:                                        ; preds = %if.then2
  %2 = load i32, ptr @opt_narenas, align 4, !dbg !13535, !tbaa !2791
  br label %cond.end, !dbg !13534

cond.false:                                       ; preds = %if.then2
  %call3 = call i32 @malloc_narenas_default(), !dbg !13536
  br label %cond.end, !dbg !13534

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %call3, %cond.false ], !dbg !13534
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.166, i32 noundef %cond), !dbg !13537
  %3 = load i8, ptr @opt_abort, align 1, !dbg !13538, !tbaa !2695, !range !2708, !noundef !2709
  %tobool4 = trunc i8 %3 to i1, !dbg !13538
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !13540

if.then5:                                         ; preds = %cond.end
  call void @abort() #19, !dbg !13541
  unreachable, !dbg !13541

if.end:                                           ; preds = %cond.end
  br label %if.end25, !dbg !13543

if.else:                                          ; preds = %if.then
  %4 = load i32, ptr @ncpus, align 4, !dbg !13544, !tbaa !2791
  %cmp6 = icmp uge i32 %4, 4095, !dbg !13546
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !13547

if.then7:                                         ; preds = %if.else
  %5 = load i32, ptr @ncpus, align 4, !dbg !13548, !tbaa !2791
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.167, i32 noundef %5), !dbg !13550
  %6 = load i8, ptr @opt_abort, align 1, !dbg !13551, !tbaa !2695, !range !2708, !noundef !2709
  %tobool8 = trunc i8 %6 to i1, !dbg !13551
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13553

if.then9:                                         ; preds = %if.then7
  call void @abort() #19, !dbg !13554
  unreachable, !dbg !13554

if.end10:                                         ; preds = %if.then7
  store i1 true, ptr %retval, align 1, !dbg !13556
  br label %return, !dbg !13556

if.end11:                                         ; preds = %if.else
  %7 = load i32, ptr @opt_percpu_arena, align 4, !dbg !13557, !tbaa !2810
  %call12 = call i32 @percpu_arena_as_initialized(i32 noundef %7), !dbg !13559
  %cmp13 = icmp eq i32 %call12, 4, !dbg !13560
  br i1 %cmp13, label %land.lhs.true, label %if.end19, !dbg !13561

land.lhs.true:                                    ; preds = %if.end11
  %8 = load i32, ptr @ncpus, align 4, !dbg !13562, !tbaa !2791
  %rem = urem i32 %8, 2, !dbg !13563
  %cmp14 = icmp ne i32 %rem, 0, !dbg !13564
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !13565

if.then15:                                        ; preds = %land.lhs.true
  %9 = load i32, ptr @ncpus, align 4, !dbg !13566, !tbaa !2791
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.168, i32 noundef %9), !dbg !13568
  %10 = load i8, ptr @opt_abort, align 1, !dbg !13569, !tbaa !2695, !range !2708, !noundef !2709
  %tobool16 = trunc i8 %10 to i1, !dbg !13569
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !13571

if.then17:                                        ; preds = %if.then15
  call void @abort() #19, !dbg !13572
  unreachable, !dbg !13572

if.end18:                                         ; preds = %if.then15
  br label %if.end19, !dbg !13573

if.end19:                                         ; preds = %if.end18, %land.lhs.true, %if.end11
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #18, !dbg !13574
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !13518, metadata !DIExpression()), !dbg !13575
  %11 = load i32, ptr @opt_percpu_arena, align 4, !dbg !13576, !tbaa !2810
  %call20 = call i32 @percpu_arena_as_initialized(i32 noundef %11), !dbg !13577
  %call21 = call i32 @percpu_arena_ind_limit(i32 noundef %call20), !dbg !13578
  store i32 %call21, ptr %n, align 4, !dbg !13575, !tbaa !2791
  %12 = load i32, ptr @opt_narenas, align 4, !dbg !13579, !tbaa !2791
  %13 = load i32, ptr %n, align 4, !dbg !13581, !tbaa !2791
  %cmp22 = icmp ult i32 %12, %13, !dbg !13582
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !13583

if.then23:                                        ; preds = %if.end19
  %14 = load i32, ptr %n, align 4, !dbg !13584, !tbaa !2791
  store i32 %14, ptr @opt_narenas, align 4, !dbg !13586, !tbaa !2791
  br label %if.end24, !dbg !13587

if.end24:                                         ; preds = %if.then23, %if.end19
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #18, !dbg !13588
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end
  br label %if.end26, !dbg !13589

if.end26:                                         ; preds = %if.end25, %do.end
  %15 = load i32, ptr @opt_narenas, align 4, !dbg !13590, !tbaa !2791
  %cmp27 = icmp eq i32 %15, 0, !dbg !13592
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !13593

if.then28:                                        ; preds = %if.end26
  %call29 = call i32 @malloc_narenas_default(), !dbg !13594
  store i32 %call29, ptr @opt_narenas, align 4, !dbg !13596, !tbaa !2791
  br label %if.end30, !dbg !13597

if.end30:                                         ; preds = %if.then28, %if.end26
  br label %do.body31, !dbg !13598

do.body31:                                        ; preds = %if.end30
  br label %do.end32, !dbg !13599

do.end32:                                         ; preds = %do.body31
  %16 = load i32, ptr @opt_narenas, align 4, !dbg !13601, !tbaa !2791
  store i32 %16, ptr @narenas_auto, align 4, !dbg !13602, !tbaa !2791
  %17 = load i32, ptr @narenas_auto, align 4, !dbg !13603, !tbaa !2791
  %cmp33 = icmp uge i32 %17, 4095, !dbg !13605
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !13606

if.then34:                                        ; preds = %do.end32
  store i32 4094, ptr @narenas_auto, align 4, !dbg !13607, !tbaa !2791
  %18 = load i32, ptr @narenas_auto, align 4, !dbg !13609, !tbaa !2791
  call void (ptr, ...) @malloc_printf(ptr noundef @.str.169, i32 noundef %18), !dbg !13610
  br label %if.end35, !dbg !13611

if.end35:                                         ; preds = %if.then34, %do.end32
  %19 = load i32, ptr @narenas_auto, align 4, !dbg !13612, !tbaa !2791
  call void @narenas_total_set(i32 noundef %19), !dbg !13613
  %call36 = call zeroext i1 @arena_init_huge(), !dbg !13614
  br i1 %call36, label %if.then37, label %if.end38, !dbg !13616

if.then37:                                        ; preds = %if.end35
  call void @narenas_total_inc(), !dbg !13617
  br label %if.end38, !dbg !13619

if.end38:                                         ; preds = %if.then37, %if.end35
  %call39 = call i32 @narenas_total_get(), !dbg !13620
  store i32 %call39, ptr @manual_arena_base, align 4, !dbg !13621, !tbaa !2791
  store i1 false, ptr %retval, align 1, !dbg !13622
  br label %return, !dbg !13622

return:                                           ; preds = %if.end38, %if.end10
  %20 = load i1, ptr %retval, align 1, !dbg !13623
  ret i1 %20, !dbg !13623
}

declare !dbg !13624 zeroext i1 @background_thread_boot1(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @malloc_init_percpu() #0 !dbg !13625 {
entry:
  %0 = load i32, ptr @opt_percpu_arena, align 4, !dbg !13626, !tbaa !2810
  %call = call i32 @percpu_arena_as_initialized(i32 noundef %0), !dbg !13627
  store i32 %call, ptr @opt_percpu_arena, align 4, !dbg !13628, !tbaa !2810
  ret void, !dbg !13629
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_init_hard_finish() #0 !dbg !13630 {
entry:
  %retval = alloca i1, align 1
  %call = call zeroext i1 @malloc_mutex_boot(), !dbg !13631
  br i1 %call, label %if.then, label %if.end, !dbg !13633

if.then:                                          ; preds = %entry
  store i1 true, ptr %retval, align 1, !dbg !13634
  br label %return, !dbg !13634

if.end:                                           ; preds = %entry
  store i32 0, ptr @malloc_init_state, align 4, !dbg !13636, !tbaa !2810
  call void @malloc_slow_flag_init(), !dbg !13637
  store i1 false, ptr %retval, align 1, !dbg !13638
  br label %return, !dbg !13638

return:                                           ; preds = %if.end, %if.then
  %0 = load i1, ptr %retval, align 1, !dbg !13639
  ret i1 %0, !dbg !13639
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @post_reentrancy(ptr noundef %tsd) #4 !dbg !13640 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13642, metadata !DIExpression()), !dbg !13643
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13644, !tbaa !2658
  call void @tsd_post_reentrancy_raw(ptr noundef %0), !dbg !13645
  ret void, !dbg !13646
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @witness_assert_lockless(ptr noundef %witness_tsdn) #4 !dbg !13647 {
entry:
  %witness_tsdn.addr = alloca ptr, align 8
  store ptr %witness_tsdn, ptr %witness_tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsdn.addr, metadata !13651, metadata !DIExpression()), !dbg !13652
  %0 = load ptr, ptr %witness_tsdn.addr, align 8, !dbg !13653, !tbaa !2658
  call void @witness_assert_depth(ptr noundef %0, i32 noundef 0), !dbg !13654
  ret void, !dbg !13655
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @witness_tsd_tsdn(ptr noundef %witness_tsd) #3 !dbg !13656 {
entry:
  %witness_tsd.addr = alloca ptr, align 8
  store ptr %witness_tsd, ptr %witness_tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsd.addr, metadata !13660, metadata !DIExpression()), !dbg !13661
  %0 = load ptr, ptr %witness_tsd.addr, align 8, !dbg !13662, !tbaa !2658
  ret ptr %0, !dbg !13663
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_witness_tsdp_get_unsafe(ptr noundef %tsd) #3 !dbg !13664 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13666, metadata !DIExpression()), !dbg !13667
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13667, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_witness_tsd = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 35, !dbg !13667
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_witness_tsd, !dbg !13667
}

declare !dbg !13668 void @malloc_tsd_boot1() #5

declare !dbg !13669 void @background_thread_ctl_init(ptr noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @spin_adaptive(ptr noundef %spin) #4 !dbg !13670 {
entry:
  %spin.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %spin, ptr %spin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %spin.addr, metadata !13675, metadata !DIExpression()), !dbg !13678
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #18, !dbg !13679
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !13676, metadata !DIExpression()), !dbg !13680
  %0 = load ptr, ptr %spin.addr, align 8, !dbg !13681, !tbaa !2658
  %iteration = getelementptr inbounds %struct.spin_t, ptr %0, i32 0, i32 0, !dbg !13683
  %1 = load i32, ptr %iteration, align 4, !dbg !13683, !tbaa !13684
  %cmp = icmp ult i32 %1, 5, !dbg !13685
  br i1 %cmp, label %if.then, label %if.else, !dbg !13686

if.then:                                          ; preds = %entry
  store volatile i32 0, ptr %i, align 4, !dbg !13687, !tbaa !2791
  br label %for.cond, !dbg !13690

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load volatile i32, ptr %i, align 4, !dbg !13691, !tbaa !2791
  %3 = load ptr, ptr %spin.addr, align 8, !dbg !13693, !tbaa !2658
  %iteration1 = getelementptr inbounds %struct.spin_t, ptr %3, i32 0, i32 0, !dbg !13694
  %4 = load i32, ptr %iteration1, align 4, !dbg !13694, !tbaa !13684
  %shl = shl i32 1, %4, !dbg !13695
  %cmp2 = icmp ult i32 %2, %shl, !dbg !13696
  br i1 %cmp2, label %for.body, label %for.end, !dbg !13697

for.body:                                         ; preds = %for.cond
  call void @spin_cpu_spinwait(), !dbg !13698
  br label %for.inc, !dbg !13700

for.inc:                                          ; preds = %for.body
  %5 = load volatile i32, ptr %i, align 4, !dbg !13701, !tbaa !2791
  %inc = add i32 %5, 1, !dbg !13701
  store volatile i32 %inc, ptr %i, align 4, !dbg !13701, !tbaa !2791
  br label %for.cond, !dbg !13702, !llvm.loop !13703

for.end:                                          ; preds = %for.cond
  %6 = load ptr, ptr %spin.addr, align 8, !dbg !13705, !tbaa !2658
  %iteration3 = getelementptr inbounds %struct.spin_t, ptr %6, i32 0, i32 0, !dbg !13706
  %7 = load i32, ptr %iteration3, align 4, !dbg !13707, !tbaa !13684
  %inc4 = add i32 %7, 1, !dbg !13707
  store i32 %inc4, ptr %iteration3, align 4, !dbg !13707, !tbaa !13684
  br label %if.end, !dbg !13708

if.else:                                          ; preds = %entry
  %call = call i32 @sched_yield() #18, !dbg !13709
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #18, !dbg !13711
  ret void, !dbg !13711
}

; Function Attrs: nounwind
declare !dbg !13712 i32 @sched_yield() #13

; Function Attrs: inlinehint nounwind uwtable
define internal void @spin_cpu_spinwait() #4 !dbg !13714 {
entry:
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #18, !dbg !13715, !srcloc !13716
  ret void, !dbg !13717
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @malloc_mutex_assert_owner(ptr noundef %tsdn, ptr noundef %mutex) #4 !dbg !13718 {
entry:
  %tsdn.addr = alloca ptr, align 8
  %mutex.addr = alloca ptr, align 8
  store ptr %tsdn, ptr %tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsdn.addr, metadata !13720, metadata !DIExpression()), !dbg !13722
  store ptr %mutex, ptr %mutex.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %mutex.addr, metadata !13721, metadata !DIExpression()), !dbg !13723
  %0 = load ptr, ptr %tsdn.addr, align 8, !dbg !13724, !tbaa !2658
  %call = call ptr @tsdn_witness_tsdp_get(ptr noundef %0), !dbg !13725
  %1 = load ptr, ptr %mutex.addr, align 8, !dbg !13726, !tbaa !2658
  %2 = getelementptr inbounds %struct.malloc_mutex_s, ptr %1, i32 0, i32 0, !dbg !13727
  call void @witness_assert_owner(ptr noundef %call, ptr noundef %2), !dbg !13728
  ret void, !dbg !13729
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @witness_assert_owner(ptr noundef %witness_tsdn, ptr noundef %witness) #4 !dbg !13730 {
entry:
  %witness_tsdn.addr = alloca ptr, align 8
  %witness.addr = alloca ptr, align 8
  %witness_tsd = alloca ptr, align 8
  store ptr %witness_tsdn, ptr %witness_tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsdn.addr, metadata !13732, metadata !DIExpression()), !dbg !13735
  store ptr %witness, ptr %witness.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness.addr, metadata !13733, metadata !DIExpression()), !dbg !13736
  call void @llvm.lifetime.start.p0(i64 8, ptr %witness_tsd) #18, !dbg !13737
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsd, metadata !13734, metadata !DIExpression()), !dbg !13738
  call void @llvm.lifetime.end.p0(i64 8, ptr %witness_tsd) #18, !dbg !13739
  ret void, !dbg !13739
}

; Function Attrs: nounwind uwtable
define internal i32 @malloc_ncpus() #0 !dbg !13740 {
entry:
  %result = alloca i64, align 8
  %set = alloca %struct.cpu_set_t, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #18, !dbg !13752
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !13742, metadata !DIExpression()), !dbg !13753
  call void @llvm.lifetime.start.p0(i64 128, ptr %set) #18, !dbg !13754
  tail call void @llvm.dbg.declare(metadata ptr %set, metadata !13743, metadata !DIExpression()), !dbg !13755
  %call = call i32 @sched_getaffinity(i32 noundef 0, i64 noundef 128, ptr noundef %set) #18, !dbg !13756
  %call1 = call i32 @__sched_cpucount(i64 noundef 128, ptr noundef %set) #18, !dbg !13757
  %conv = sext i32 %call1 to i64, !dbg !13757
  store i64 %conv, ptr %result, align 8, !dbg !13758, !tbaa !2663
  call void @llvm.lifetime.end.p0(i64 128, ptr %set) #18, !dbg !13759
  %0 = load i64, ptr %result, align 8, !dbg !13760, !tbaa !2663
  %cmp = icmp eq i64 %0, -1, !dbg !13761
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13762

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13762

cond.false:                                       ; preds = %entry
  %1 = load i64, ptr %result, align 8, !dbg !13763, !tbaa !2663
  %conv3 = trunc i64 %1 to i32, !dbg !13764
  br label %cond.end, !dbg !13762

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %conv3, %cond.false ], !dbg !13762
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #18, !dbg !13765
  ret i32 %cond, !dbg !13766
}

; Function Attrs: nounwind
declare !dbg !13767 i32 @pthread_atfork(ptr noundef, ptr noundef, ptr noundef) #13

declare !dbg !13770 zeroext i1 @background_thread_boot0() #5

; Function Attrs: nounwind
declare !dbg !13771 i32 @sched_getaffinity(i32 noundef, i64 noundef, ptr noundef) #13

; Function Attrs: nounwind
declare !dbg !13776 i32 @__sched_cpucount(i64 noundef, ptr noundef) #13

; Function Attrs: nounwind uwtable
define internal zeroext i1 @malloc_cpu_count_is_deterministic() #0 !dbg !13781 {
entry:
  %retval = alloca i1, align 1
  %cpu_onln = alloca i64, align 8
  %cpu_conf = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %set = alloca %struct.cpu_set_t, align 8
  %cpu_affinity = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %cpu_onln) #18, !dbg !13787
  tail call void @llvm.dbg.declare(metadata ptr %cpu_onln, metadata !13783, metadata !DIExpression()), !dbg !13788
  %call = call i64 @sysconf(i32 noundef 84) #18, !dbg !13789
  store i64 %call, ptr %cpu_onln, align 8, !dbg !13788, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %cpu_conf) #18, !dbg !13790
  tail call void @llvm.dbg.declare(metadata ptr %cpu_conf, metadata !13784, metadata !DIExpression()), !dbg !13791
  %call1 = call i64 @sysconf(i32 noundef 83) #18, !dbg !13792
  store i64 %call1, ptr %cpu_conf, align 8, !dbg !13791, !tbaa !2663
  %0 = load i64, ptr %cpu_onln, align 8, !dbg !13793, !tbaa !2663
  %1 = load i64, ptr %cpu_conf, align 8, !dbg !13795, !tbaa !2663
  %cmp = icmp ne i64 %0, %1, !dbg !13796
  br i1 %cmp, label %if.then, label %if.end, !dbg !13797

if.then:                                          ; preds = %entry
  store i1 false, ptr %retval, align 1, !dbg !13798
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup9, !dbg !13798

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 128, ptr %set) #18, !dbg !13800
  tail call void @llvm.dbg.declare(metadata ptr %set, metadata !13785, metadata !DIExpression()), !dbg !13801
  %call2 = call i32 @sched_getaffinity(i32 noundef 0, i64 noundef 128, ptr noundef %set) #18, !dbg !13802
  call void @llvm.lifetime.start.p0(i64 8, ptr %cpu_affinity) #18, !dbg !13803
  tail call void @llvm.dbg.declare(metadata ptr %cpu_affinity, metadata !13786, metadata !DIExpression()), !dbg !13804
  %call3 = call i32 @__sched_cpucount(i64 noundef 128, ptr noundef %set) #18, !dbg !13805
  %conv = sext i32 %call3 to i64, !dbg !13805
  store i64 %conv, ptr %cpu_affinity, align 8, !dbg !13804, !tbaa !2663
  %2 = load i64, ptr %cpu_affinity, align 8, !dbg !13806, !tbaa !2663
  %3 = load i64, ptr %cpu_conf, align 8, !dbg !13808, !tbaa !2663
  %cmp4 = icmp ne i64 %2, %3, !dbg !13809
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !13810

if.then6:                                         ; preds = %if.end
  store i1 false, ptr %retval, align 1, !dbg !13811
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13811

if.end7:                                          ; preds = %if.end
  store i1 true, ptr %retval, align 1, !dbg !13813
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13813

cleanup:                                          ; preds = %if.end7, %if.then6
  call void @llvm.lifetime.end.p0(i64 8, ptr %cpu_affinity) #18, !dbg !13814
  call void @llvm.lifetime.end.p0(i64 128, ptr %set) #18, !dbg !13814
  br label %cleanup9

cleanup9:                                         ; preds = %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cpu_conf) #18, !dbg !13814
  call void @llvm.lifetime.end.p0(i64 8, ptr %cpu_onln) #18, !dbg !13814
  %4 = load i1, ptr %retval, align 1, !dbg !13814
  ret i1 %4, !dbg !13814
}

; Function Attrs: nounwind
declare !dbg !13815 i64 @sysconf(i32 noundef) #13

; Function Attrs: inlinehint nounwind uwtable
define internal void @tsd_pre_reentrancy_raw(ptr noundef %tsd) #4 !dbg !13818 {
entry:
  %tsd.addr = alloca ptr, align 8
  %fast = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13820, metadata !DIExpression()), !dbg !13822
  call void @llvm.lifetime.start.p0(i64 1, ptr %fast) #18, !dbg !13823
  tail call void @llvm.dbg.declare(metadata ptr %fast, metadata !13821, metadata !DIExpression()), !dbg !13824
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13825, !tbaa !2658
  %call = call zeroext i1 @tsd_fast(ptr noundef %0), !dbg !13826
  %frombool = zext i1 %call to i8, !dbg !13824
  store i8 %frombool, ptr %fast, align 1, !dbg !13824, !tbaa !2695
  br label %do.body, !dbg !13827

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13828

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13828

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13830, !tbaa !2658
  %call1 = call ptr @tsd_reentrancy_levelp_get(ptr noundef %1), !dbg !13831
  %2 = load i8, ptr %call1, align 1, !dbg !13832, !tbaa !2810
  %inc = add i8 %2, 1, !dbg !13832
  store i8 %inc, ptr %call1, align 1, !dbg !13832, !tbaa !2810
  %3 = load i8, ptr %fast, align 1, !dbg !13833, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %3 to i1, !dbg !13833
  br i1 %tobool, label %if.then, label %if.end, !dbg !13835

if.then:                                          ; preds = %do.end
  %4 = load ptr, ptr %tsd.addr, align 8, !dbg !13836, !tbaa !2658
  call void @tsd_slow_update(ptr noundef %4), !dbg !13838
  br label %do.body2, !dbg !13839

do.body2:                                         ; preds = %if.then
  br label %do.cond3, !dbg !13840

do.cond3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !13840

do.end4:                                          ; preds = %do.cond3
  br label %if.end, !dbg !13842

if.end:                                           ; preds = %do.end4, %do.end
  call void @llvm.lifetime.end.p0(i64 1, ptr %fast) #18, !dbg !13843
  ret void, !dbg !13843
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_reentrancy_levelp_get(ptr noundef %tsd) #3 !dbg !13844 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13849, metadata !DIExpression()), !dbg !13851
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !13851
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13850, metadata !DIExpression()), !dbg !13851
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13851, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !13851
  store i8 %call, ptr %state, align 1, !dbg !13851, !tbaa !2810
  br label %do.body, !dbg !13851

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !13852

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !13852

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !13851, !tbaa !2658
  %call1 = call ptr @tsd_reentrancy_levelp_get_unsafe(ptr noundef %1), !dbg !13851
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !13851
  ret ptr %call1, !dbg !13851
}

declare !dbg !13854 void @tsd_slow_update(ptr noundef) #5

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_reentrancy_levelp_get_unsafe(ptr noundef %tsd) #3 !dbg !13855 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !13857, metadata !DIExpression()), !dbg !13858
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !13858, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_reentrancy_level = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 1, !dbg !13858
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_reentrancy_level, !dbg !13858
}

; Function Attrs: nounwind uwtable
define internal i32 @malloc_narenas_default() #0 !dbg !13859 {
entry:
  %retval = alloca i32, align 4
  %fxp_ncpus = alloca i32, align 4
  %goal = alloca i32, align 4
  %int_goal = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  br label %do.body, !dbg !13866

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13867

do.end:                                           ; preds = %do.body
  %0 = load i32, ptr @ncpus, align 4, !dbg !13869, !tbaa !2791
  %cmp = icmp ugt i32 %0, 1, !dbg !13870
  br i1 %cmp, label %if.then, label %if.else, !dbg !13871

if.then:                                          ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %fxp_ncpus) #18, !dbg !13872
  tail call void @llvm.dbg.declare(metadata ptr %fxp_ncpus, metadata !13861, metadata !DIExpression()), !dbg !13873
  %1 = load i32, ptr @ncpus, align 4, !dbg !13874, !tbaa !2791
  %shl = shl i32 %1, 16, !dbg !13874
  store i32 %shl, ptr %fxp_ncpus, align 4, !dbg !13873, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %goal) #18, !dbg !13875
  tail call void @llvm.dbg.declare(metadata ptr %goal, metadata !13864, metadata !DIExpression()), !dbg !13876
  %2 = load i32, ptr %fxp_ncpus, align 4, !dbg !13877, !tbaa !2791
  %3 = load i32, ptr @opt_narenas_ratio, align 4, !dbg !13878, !tbaa !2791
  %call = call i32 @fxp_mul(i32 noundef %2, i32 noundef %3), !dbg !13879
  store i32 %call, ptr %goal, align 4, !dbg !13876, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %int_goal) #18, !dbg !13880
  tail call void @llvm.dbg.declare(metadata ptr %int_goal, metadata !13865, metadata !DIExpression()), !dbg !13881
  %4 = load i32, ptr %goal, align 4, !dbg !13882, !tbaa !2791
  %call1 = call i32 @fxp_round_nearest(i32 noundef %4), !dbg !13883
  store i32 %call1, ptr %int_goal, align 4, !dbg !13881, !tbaa !2791
  %5 = load i32, ptr %int_goal, align 4, !dbg !13884, !tbaa !2791
  %cmp2 = icmp eq i32 %5, 0, !dbg !13886
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !13887

if.then3:                                         ; preds = %if.then
  store i32 1, ptr %retval, align 4, !dbg !13888
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13888

if.end:                                           ; preds = %if.then
  %6 = load i32, ptr %int_goal, align 4, !dbg !13890, !tbaa !2791
  store i32 %6, ptr %retval, align 4, !dbg !13891
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13891

cleanup:                                          ; preds = %if.end, %if.then3
  call void @llvm.lifetime.end.p0(i64 4, ptr %int_goal) #18, !dbg !13892
  call void @llvm.lifetime.end.p0(i64 4, ptr %goal) #18, !dbg !13892
  call void @llvm.lifetime.end.p0(i64 4, ptr %fxp_ncpus) #18, !dbg !13892
  br label %return

if.else:                                          ; preds = %do.end
  store i32 1, ptr %retval, align 4, !dbg !13893
  br label %return, !dbg !13893

return:                                           ; preds = %if.else, %cleanup
  %7 = load i32, ptr %retval, align 4, !dbg !13895
  ret i32 %7, !dbg !13895
}

; Function Attrs: nounwind uwtable
define internal i32 @percpu_arena_as_initialized(i32 noundef %mode) #0 !dbg !13896 {
entry:
  %mode.addr = alloca i32, align 4
  store i32 %mode, ptr %mode.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mode.addr, metadata !13901, metadata !DIExpression()), !dbg !13902
  br label %do.body, !dbg !13903

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13904

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !13906

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !13907

do.end2:                                          ; preds = %do.body1
  %0 = load i32, ptr %mode.addr, align 4, !dbg !13909, !tbaa !2810
  %cmp = icmp ne i32 %0, 2, !dbg !13911
  br i1 %cmp, label %if.then, label %if.end, !dbg !13912

if.then:                                          ; preds = %do.end2
  %1 = load i32, ptr %mode.addr, align 4, !dbg !13913, !tbaa !2810
  %add = add i32 %1, 3, !dbg !13913
  store i32 %add, ptr %mode.addr, align 4, !dbg !13913, !tbaa !2810
  br label %if.end, !dbg !13915

if.end:                                           ; preds = %if.then, %do.end2
  %2 = load i32, ptr %mode.addr, align 4, !dbg !13916, !tbaa !2810
  ret i32 %2, !dbg !13917
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @percpu_arena_ind_limit(i32 noundef %mode) #3 !dbg !13918 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i32 %mode, ptr %mode.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mode.addr, metadata !13922, metadata !DIExpression()), !dbg !13923
  br label %do.body, !dbg !13924

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13925

do.end:                                           ; preds = %do.body
  %0 = load i32, ptr %mode.addr, align 4, !dbg !13927, !tbaa !2810
  %cmp = icmp eq i32 %0, 4, !dbg !13929
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13930

land.lhs.true:                                    ; preds = %do.end
  %1 = load i32, ptr @ncpus, align 4, !dbg !13931, !tbaa !2791
  %cmp1 = icmp ugt i32 %1, 1, !dbg !13932
  br i1 %cmp1, label %if.then, label %if.else, !dbg !13933

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, ptr @ncpus, align 4, !dbg !13934, !tbaa !2791
  %rem = urem i32 %2, 2, !dbg !13937
  %tobool = icmp ne i32 %rem, 0, !dbg !13937
  br i1 %tobool, label %if.then2, label %if.end, !dbg !13938

if.then2:                                         ; preds = %if.then
  %3 = load i32, ptr @ncpus, align 4, !dbg !13939, !tbaa !2791
  %div = udiv i32 %3, 2, !dbg !13941
  %add = add i32 %div, 1, !dbg !13942
  store i32 %add, ptr %retval, align 4, !dbg !13943
  br label %return, !dbg !13943

if.end:                                           ; preds = %if.then
  %4 = load i32, ptr @ncpus, align 4, !dbg !13944, !tbaa !2791
  %div3 = udiv i32 %4, 2, !dbg !13945
  store i32 %div3, ptr %retval, align 4, !dbg !13946
  br label %return, !dbg !13946

if.else:                                          ; preds = %land.lhs.true, %do.end
  %5 = load i32, ptr @ncpus, align 4, !dbg !13947, !tbaa !2791
  store i32 %5, ptr %retval, align 4, !dbg !13949
  br label %return, !dbg !13949

return:                                           ; preds = %if.else, %if.end, %if.then2
  %6 = load i32, ptr %retval, align 4, !dbg !13950
  ret i32 %6, !dbg !13950
}

; Function Attrs: nounwind uwtable
define internal void @narenas_total_set(i32 noundef %narenas) #0 !dbg !13951 {
entry:
  %narenas.addr = alloca i32, align 4
  store i32 %narenas, ptr %narenas.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %narenas.addr, metadata !13955, metadata !DIExpression()), !dbg !13956
  %0 = load i32, ptr %narenas.addr, align 4, !dbg !13957, !tbaa !2791
  call void @atomic_store_u(ptr noundef @narenas_total, i32 noundef %0, i32 noundef 2), !dbg !13958
  ret void, !dbg !13959
}

declare !dbg !13960 zeroext i1 @arena_init_huge() #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fxp_mul(i32 noundef %a, i32 noundef %b) #4 !dbg !13961 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %unshifted = alloca i64, align 8
  store i32 %a, ptr %a.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !13965, metadata !DIExpression()), !dbg !13968
  store i32 %b, ptr %b.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !13966, metadata !DIExpression()), !dbg !13969
  call void @llvm.lifetime.start.p0(i64 8, ptr %unshifted) #18, !dbg !13970
  tail call void @llvm.dbg.declare(metadata ptr %unshifted, metadata !13967, metadata !DIExpression()), !dbg !13971
  %0 = load i32, ptr %a.addr, align 4, !dbg !13972, !tbaa !2791
  %conv = zext i32 %0 to i64, !dbg !13973
  %1 = load i32, ptr %b.addr, align 4, !dbg !13974, !tbaa !2791
  %conv1 = zext i32 %1 to i64, !dbg !13975
  %mul = mul i64 %conv, %conv1, !dbg !13976
  store i64 %mul, ptr %unshifted, align 8, !dbg !13971, !tbaa !2663
  %2 = load i64, ptr %unshifted, align 8, !dbg !13977, !tbaa !2663
  %shr = lshr i64 %2, 16, !dbg !13978
  %conv2 = trunc i64 %shr to i32, !dbg !13979
  call void @llvm.lifetime.end.p0(i64 8, ptr %unshifted) #18, !dbg !13980
  ret i32 %conv2, !dbg !13981
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fxp_round_nearest(i32 noundef %a) #4 !dbg !13982 {
entry:
  %a.addr = alloca i32, align 4
  %fractional_part = alloca i32, align 4
  %increment = alloca i32, align 4
  store i32 %a, ptr %a.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !13986, metadata !DIExpression()), !dbg !13989
  call void @llvm.lifetime.start.p0(i64 4, ptr %fractional_part) #18, !dbg !13990
  tail call void @llvm.dbg.declare(metadata ptr %fractional_part, metadata !13987, metadata !DIExpression()), !dbg !13991
  %0 = load i32, ptr %a.addr, align 4, !dbg !13992, !tbaa !2791
  %and = and i32 %0, 65535, !dbg !13993
  store i32 %and, ptr %fractional_part, align 4, !dbg !13991, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %increment) #18, !dbg !13994
  tail call void @llvm.dbg.declare(metadata ptr %increment, metadata !13988, metadata !DIExpression()), !dbg !13995
  %1 = load i32, ptr %fractional_part, align 4, !dbg !13996, !tbaa !2791
  %cmp = icmp uge i32 %1, 32768, !dbg !13997
  %conv = zext i1 %cmp to i32, !dbg !13997
  store i32 %conv, ptr %increment, align 4, !dbg !13995, !tbaa !2791
  %2 = load i32, ptr %a.addr, align 4, !dbg !13998, !tbaa !2791
  %shr = lshr i32 %2, 16, !dbg !13999
  %3 = load i32, ptr %increment, align 4, !dbg !14000, !tbaa !2791
  %add = add i32 %shr, %3, !dbg !14001
  call void @llvm.lifetime.end.p0(i64 4, ptr %increment) #18, !dbg !14002
  call void @llvm.lifetime.end.p0(i64 4, ptr %fractional_part) #18, !dbg !14002
  ret i32 %add, !dbg !14003
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_store_u(ptr noundef %a, i32 noundef %val, i32 noundef %mo) #3 !dbg !14004 {
entry:
  %a.addr = alloca ptr, align 8
  %val.addr = alloca i32, align 4
  %mo.addr = alloca i32, align 4
  store ptr %a, ptr %a.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !14008, metadata !DIExpression()), !dbg !14011
  store i32 %val, ptr %val.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %val.addr, metadata !14009, metadata !DIExpression()), !dbg !14011
  store i32 %mo, ptr %mo.addr, align 4, !tbaa !2810
  tail call void @llvm.dbg.declare(metadata ptr %mo.addr, metadata !14010, metadata !DIExpression()), !dbg !14011
  %0 = load ptr, ptr %a.addr, align 8, !dbg !14011, !tbaa !2658
  %repr = getelementptr inbounds %struct.atomic_u_t, ptr %0, i32 0, i32 0, !dbg !14011
  %1 = load i32, ptr %mo.addr, align 4, !dbg !14011, !tbaa !2810
  %call = call i32 @atomic_enum_to_builtin(i32 noundef %1), !dbg !14011
  switch i32 %call, label %monotonic [
    i32 3, label %release
    i32 5, label %seqcst
  ], !dbg !14011

monotonic:                                        ; preds = %entry
  %2 = load i32, ptr %val.addr, align 4, !dbg !14011
  store atomic i32 %2, ptr %repr monotonic, align 4, !dbg !14011
  br label %atomic.continue, !dbg !14011

release:                                          ; preds = %entry
  %3 = load i32, ptr %val.addr, align 4, !dbg !14011
  store atomic i32 %3, ptr %repr release, align 4, !dbg !14011
  br label %atomic.continue, !dbg !14011

seqcst:                                           ; preds = %entry
  %4 = load i32, ptr %val.addr, align 4, !dbg !14011
  store atomic i32 %4, ptr %repr seq_cst, align 4, !dbg !14011
  br label %atomic.continue, !dbg !14011

atomic.continue:                                  ; preds = %seqcst, %release, %monotonic
  ret void, !dbg !14011
}

declare !dbg !14012 zeroext i1 @malloc_mutex_boot() #5

; Function Attrs: nounwind uwtable
define internal void @malloc_slow_flag_init() #0 !dbg !14013 {
entry:
  %0 = load i8, ptr @opt_junk_alloc, align 1, !dbg !14014, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %0 to i1, !dbg !14014
  %1 = zext i1 %tobool to i64, !dbg !14014
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !14014
  %2 = load i8, ptr @opt_junk_free, align 1, !dbg !14015, !tbaa !2695, !range !2708, !noundef !2709
  %tobool1 = trunc i8 %2 to i1, !dbg !14015
  %3 = zext i1 %tobool1 to i64, !dbg !14015
  %cond2 = select i1 %tobool1, i32 2, i32 0, !dbg !14015
  %or = or i32 %cond, %cond2, !dbg !14016
  %4 = load i8, ptr @opt_zero, align 1, !dbg !14017, !tbaa !2695, !range !2708, !noundef !2709
  %tobool3 = trunc i8 %4 to i1, !dbg !14017
  %5 = zext i1 %tobool3 to i64, !dbg !14017
  %cond4 = select i1 %tobool3, i32 4, i32 0, !dbg !14017
  %or5 = or i32 %or, %cond4, !dbg !14018
  %6 = load i8, ptr @opt_utrace, align 1, !dbg !14019, !tbaa !2695, !range !2708, !noundef !2709
  %tobool6 = trunc i8 %6 to i1, !dbg !14019
  %7 = zext i1 %tobool6 to i64, !dbg !14019
  %cond7 = select i1 %tobool6, i32 8, i32 0, !dbg !14019
  %or8 = or i32 %or5, %cond7, !dbg !14020
  %8 = load i8, ptr @opt_xmalloc, align 1, !dbg !14021, !tbaa !2695, !range !2708, !noundef !2709
  %tobool9 = trunc i8 %8 to i1, !dbg !14021
  %9 = zext i1 %tobool9 to i64, !dbg !14021
  %cond10 = select i1 %tobool9, i32 16, i32 0, !dbg !14021
  %or11 = or i32 %or8, %cond10, !dbg !14022
  %10 = load i8, ptr @malloc_slow_flags, align 1, !dbg !14023, !tbaa !2810
  %conv = zext i8 %10 to i32, !dbg !14023
  %or12 = or i32 %conv, %or11, !dbg !14023
  %conv13 = trunc i32 %or12 to i8, !dbg !14023
  store i8 %conv13, ptr @malloc_slow_flags, align 1, !dbg !14023, !tbaa !2810
  %11 = load i8, ptr @malloc_slow_flags, align 1, !dbg !14024, !tbaa !2810
  %conv14 = zext i8 %11 to i32, !dbg !14024
  %cmp = icmp ne i32 %conv14, 0, !dbg !14025
  %frombool = zext i1 %cmp to i8, !dbg !14026
  store i8 %frombool, ptr @malloc_slow, align 1, !dbg !14026, !tbaa !2695
  ret void, !dbg !14027
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tsd_post_reentrancy_raw(ptr noundef %tsd) #4 !dbg !14028 {
entry:
  %tsd.addr = alloca ptr, align 8
  %reentrancy_level = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14030, metadata !DIExpression()), !dbg !14032
  call void @llvm.lifetime.start.p0(i64 8, ptr %reentrancy_level) #18, !dbg !14033
  tail call void @llvm.dbg.declare(metadata ptr %reentrancy_level, metadata !14031, metadata !DIExpression()), !dbg !14034
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14035, !tbaa !2658
  %call = call ptr @tsd_reentrancy_levelp_get(ptr noundef %0), !dbg !14036
  store ptr %call, ptr %reentrancy_level, align 8, !dbg !14034, !tbaa !2658
  br label %do.body, !dbg !14037

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !14038

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14038

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %reentrancy_level, align 8, !dbg !14040, !tbaa !2658
  %2 = load i8, ptr %1, align 1, !dbg !14042, !tbaa !2810
  %dec = add i8 %2, -1, !dbg !14042
  store i8 %dec, ptr %1, align 1, !dbg !14042, !tbaa !2810
  %conv = sext i8 %dec to i32, !dbg !14042
  %cmp = icmp eq i32 %conv, 0, !dbg !14043
  br i1 %cmp, label %if.then, label %if.end, !dbg !14044

if.then:                                          ; preds = %do.end
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !14045, !tbaa !2658
  call void @tsd_slow_update(ptr noundef %3), !dbg !14047
  br label %if.end, !dbg !14048

if.end:                                           ; preds = %if.then, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %reentrancy_level) #18, !dbg !14049
  ret void, !dbg !14049
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @witness_assert_depth(ptr noundef %witness_tsdn, i32 noundef %depth) #4 !dbg !14050 {
entry:
  %witness_tsdn.addr = alloca ptr, align 8
  %depth.addr = alloca i32, align 4
  store ptr %witness_tsdn, ptr %witness_tsdn.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %witness_tsdn.addr, metadata !14054, metadata !DIExpression()), !dbg !14056
  store i32 %depth, ptr %depth.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %depth.addr, metadata !14055, metadata !DIExpression()), !dbg !14057
  %0 = load ptr, ptr %witness_tsdn.addr, align 8, !dbg !14058, !tbaa !2658
  %1 = load i32, ptr %depth.addr, align 4, !dbg !14059, !tbaa !2791
  call void @witness_assert_depth_to_rank(ptr noundef %0, i32 noundef 1, i32 noundef %1), !dbg !14060
  ret void, !dbg !14061
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sz_size2index_compute(i64 noundef %size) #4 !dbg !14062 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  %lg_tmin = alloca i32, align 4
  %lg_ceil = alloca i32, align 4
  %x = alloca i32, align 4
  %shift = alloca i32, align 4
  %grp = alloca i32, align 4
  %lg_delta = alloca i32, align 4
  %delta_inverse_mask = alloca i64, align 8
  %mod = alloca i32, align 4
  %index = alloca i32, align 4
  store i64 %size, ptr %size.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %size.addr, metadata !14064, metadata !DIExpression()), !dbg !14077
  %0 = load i64, ptr %size.addr, align 8, !dbg !14078, !tbaa !2663
  %cmp = icmp ugt i64 %0, 8070450532247928832, !dbg !14078
  %lnot = xor i1 %cmp, true, !dbg !14078
  %lnot1 = xor i1 %lnot, true, !dbg !14078
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14078
  %conv = sext i32 %lnot.ext to i64, !dbg !14078
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !14078
  %tobool = icmp ne i64 %expval, 0, !dbg !14078
  br i1 %tobool, label %if.then, label %if.end, !dbg !14080

if.then:                                          ; preds = %entry
  store i32 232, ptr %retval, align 4, !dbg !14081
  br label %return, !dbg !14081

if.end:                                           ; preds = %entry
  %1 = load i64, ptr %size.addr, align 8, !dbg !14083, !tbaa !2663
  %cmp2 = icmp eq i64 %1, 0, !dbg !14085
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !14086

if.then4:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !14087
  br label %return, !dbg !14087

if.end5:                                          ; preds = %if.end
  %2 = load i64, ptr %size.addr, align 8, !dbg !14089, !tbaa !2663
  %cmp6 = icmp ule i64 %2, 8, !dbg !14090
  br i1 %cmp6, label %if.then8, label %if.end12, !dbg !14091

if.then8:                                         ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 4, ptr %lg_tmin) #18, !dbg !14092
  tail call void @llvm.dbg.declare(metadata ptr %lg_tmin, metadata !14065, metadata !DIExpression()), !dbg !14093
  store i32 3, ptr %lg_tmin, align 4, !dbg !14093, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %lg_ceil) #18, !dbg !14094
  tail call void @llvm.dbg.declare(metadata ptr %lg_ceil, metadata !14068, metadata !DIExpression()), !dbg !14095
  %3 = load i64, ptr %size.addr, align 8, !dbg !14096, !tbaa !2663
  %call = call i64 @pow2_ceil_zu(i64 noundef %3), !dbg !14097
  %call9 = call i32 @lg_floor(i64 noundef %call), !dbg !14098
  store i32 %call9, ptr %lg_ceil, align 4, !dbg !14095, !tbaa !2791
  %4 = load i32, ptr %lg_ceil, align 4, !dbg !14099, !tbaa !2791
  %5 = load i32, ptr %lg_tmin, align 4, !dbg !14100, !tbaa !2791
  %cmp10 = icmp ult i32 %4, %5, !dbg !14101
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !14099

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !14099

cond.false:                                       ; preds = %if.then8
  %6 = load i32, ptr %lg_ceil, align 4, !dbg !14102, !tbaa !2791
  %7 = load i32, ptr %lg_tmin, align 4, !dbg !14103, !tbaa !2791
  %sub = sub i32 %6, %7, !dbg !14104
  br label %cond.end, !dbg !14099

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !14099
  store i32 %cond, ptr %retval, align 4, !dbg !14105
  call void @llvm.lifetime.end.p0(i64 4, ptr %lg_ceil) #18, !dbg !14106
  call void @llvm.lifetime.end.p0(i64 4, ptr %lg_tmin) #18, !dbg !14106
  br label %return

if.end12:                                         ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 4, ptr %x) #18, !dbg !14107
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !14069, metadata !DIExpression()), !dbg !14108
  %8 = load i64, ptr %size.addr, align 8, !dbg !14109, !tbaa !2663
  %shl = shl i64 %8, 1, !dbg !14110
  %sub13 = sub i64 %shl, 1, !dbg !14111
  %call14 = call i32 @lg_floor(i64 noundef %sub13), !dbg !14112
  store i32 %call14, ptr %x, align 4, !dbg !14108, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %shift) #18, !dbg !14113
  tail call void @llvm.dbg.declare(metadata ptr %shift, metadata !14071, metadata !DIExpression()), !dbg !14114
  %9 = load i32, ptr %x, align 4, !dbg !14115, !tbaa !2791
  %cmp15 = icmp ult i32 %9, 6, !dbg !14116
  br i1 %cmp15, label %cond.true17, label %cond.false18, !dbg !14117

cond.true17:                                      ; preds = %if.end12
  br label %cond.end20, !dbg !14117

cond.false18:                                     ; preds = %if.end12
  %10 = load i32, ptr %x, align 4, !dbg !14118, !tbaa !2791
  %sub19 = sub i32 %10, 6, !dbg !14119
  br label %cond.end20, !dbg !14117

cond.end20:                                       ; preds = %cond.false18, %cond.true17
  %cond21 = phi i32 [ 0, %cond.true17 ], [ %sub19, %cond.false18 ], !dbg !14117
  store i32 %cond21, ptr %shift, align 4, !dbg !14114, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %grp) #18, !dbg !14120
  tail call void @llvm.dbg.declare(metadata ptr %grp, metadata !14072, metadata !DIExpression()), !dbg !14121
  %11 = load i32, ptr %shift, align 4, !dbg !14122, !tbaa !2791
  %shl22 = shl i32 %11, 2, !dbg !14123
  store i32 %shl22, ptr %grp, align 4, !dbg !14121, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %lg_delta) #18, !dbg !14124
  tail call void @llvm.dbg.declare(metadata ptr %lg_delta, metadata !14073, metadata !DIExpression()), !dbg !14125
  %12 = load i32, ptr %x, align 4, !dbg !14126, !tbaa !2791
  %cmp23 = icmp ult i32 %12, 7, !dbg !14127
  br i1 %cmp23, label %cond.true25, label %cond.false26, !dbg !14128

cond.true25:                                      ; preds = %cond.end20
  br label %cond.end29, !dbg !14128

cond.false26:                                     ; preds = %cond.end20
  %13 = load i32, ptr %x, align 4, !dbg !14129, !tbaa !2791
  %sub27 = sub i32 %13, 2, !dbg !14130
  %sub28 = sub i32 %sub27, 1, !dbg !14131
  br label %cond.end29, !dbg !14128

cond.end29:                                       ; preds = %cond.false26, %cond.true25
  %cond30 = phi i32 [ 4, %cond.true25 ], [ %sub28, %cond.false26 ], !dbg !14128
  store i32 %cond30, ptr %lg_delta, align 4, !dbg !14125, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %delta_inverse_mask) #18, !dbg !14132
  tail call void @llvm.dbg.declare(metadata ptr %delta_inverse_mask, metadata !14074, metadata !DIExpression()), !dbg !14133
  %14 = load i32, ptr %lg_delta, align 4, !dbg !14134, !tbaa !2791
  %sh_prom = zext i32 %14 to i64, !dbg !14135
  %shl31 = shl i64 -1, %sh_prom, !dbg !14135
  store i64 %shl31, ptr %delta_inverse_mask, align 8, !dbg !14133, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 4, ptr %mod) #18, !dbg !14136
  tail call void @llvm.dbg.declare(metadata ptr %mod, metadata !14075, metadata !DIExpression()), !dbg !14137
  %15 = load i64, ptr %size.addr, align 8, !dbg !14138, !tbaa !2663
  %sub32 = sub i64 %15, 1, !dbg !14139
  %16 = load i64, ptr %delta_inverse_mask, align 8, !dbg !14140, !tbaa !2663
  %and = and i64 %sub32, %16, !dbg !14141
  %17 = load i32, ptr %lg_delta, align 4, !dbg !14142, !tbaa !2791
  %sh_prom33 = zext i32 %17 to i64, !dbg !14143
  %shr = lshr i64 %and, %sh_prom33, !dbg !14143
  %and34 = and i64 %shr, 3, !dbg !14144
  %conv35 = trunc i64 %and34 to i32, !dbg !14145
  store i32 %conv35, ptr %mod, align 4, !dbg !14137, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 4, ptr %index) #18, !dbg !14146
  tail call void @llvm.dbg.declare(metadata ptr %index, metadata !14076, metadata !DIExpression()), !dbg !14147
  %18 = load i32, ptr %grp, align 4, !dbg !14148, !tbaa !2791
  %add = add i32 1, %18, !dbg !14149
  %19 = load i32, ptr %mod, align 4, !dbg !14150, !tbaa !2791
  %add36 = add i32 %add, %19, !dbg !14151
  store i32 %add36, ptr %index, align 4, !dbg !14147, !tbaa !2791
  %20 = load i32, ptr %index, align 4, !dbg !14152, !tbaa !2791
  store i32 %20, ptr %retval, align 4, !dbg !14153
  call void @llvm.lifetime.end.p0(i64 4, ptr %index) #18, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 4, ptr %mod) #18, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 8, ptr %delta_inverse_mask) #18, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 4, ptr %lg_delta) #18, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 4, ptr %grp) #18, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 4, ptr %shift) #18, !dbg !14154
  call void @llvm.lifetime.end.p0(i64 4, ptr %x) #18, !dbg !14154
  br label %return

return:                                           ; preds = %cond.end29, %cond.end, %if.then4, %if.then
  %21 = load i32, ptr %retval, align 4, !dbg !14155
  ret i32 %21, !dbg !14155
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @te_prof_sample_event_lookahead(ptr noundef %tsd, i64 noundef %usize) #3 !dbg !14156 {
entry:
  %tsd.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14160, metadata !DIExpression()), !dbg !14162
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !14161, metadata !DIExpression()), !dbg !14163
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14164, !tbaa !2658
  %1 = load i64, ptr %usize.addr, align 8, !dbg !14165, !tbaa !2663
  %call = call zeroext i1 @te_prof_sample_event_lookahead_surplus(ptr noundef %0, i64 noundef %1, ptr noundef null), !dbg !14166
  ret i1 %call, !dbg !14167
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @te_prof_sample_event_lookahead_surplus(ptr noundef %tsd, i64 noundef %usize, ptr noundef %surplus) #3 !dbg !14168 {
entry:
  %retval = alloca i1, align 1
  %tsd.addr = alloca ptr, align 8
  %usize.addr = alloca i64, align 8
  %surplus.addr = alloca ptr, align 8
  %accumbytes = alloca i64, align 8
  %sample_wait = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14172, metadata !DIExpression()), !dbg !14177
  store i64 %usize, ptr %usize.addr, align 8, !tbaa !2663
  tail call void @llvm.dbg.declare(metadata ptr %usize.addr, metadata !14173, metadata !DIExpression()), !dbg !14178
  store ptr %surplus, ptr %surplus.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %surplus.addr, metadata !14174, metadata !DIExpression()), !dbg !14179
  %0 = load ptr, ptr %surplus.addr, align 8, !dbg !14180, !tbaa !2658
  %cmp = icmp ne ptr %0, null, !dbg !14182
  br i1 %cmp, label %if.then, label %if.end, !dbg !14183

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %surplus.addr, align 8, !dbg !14184, !tbaa !2658
  store i64 -1, ptr %1, align 8, !dbg !14186, !tbaa !2663
  br label %if.end, !dbg !14187

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !14188, !tbaa !2658
  %call = call zeroext i1 @tsd_nominal(ptr noundef %2), !dbg !14188
  br i1 %call, label %lor.rhs, label %lor.end, !dbg !14188

lor.rhs:                                          ; preds = %if.end
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !14188, !tbaa !2658
  %call1 = call signext i8 @tsd_reentrancy_level_get(ptr noundef %3), !dbg !14188
  %conv = sext i8 %call1 to i32, !dbg !14188
  %cmp2 = icmp sgt i32 %conv, 0, !dbg !14188
  br label %lor.end, !dbg !14188

lor.end:                                          ; preds = %lor.rhs, %if.end
  %4 = phi i1 [ true, %if.end ], [ %cmp2, %lor.rhs ]
  %lnot = xor i1 %4, true, !dbg !14188
  %lnot4 = xor i1 %lnot, true, !dbg !14188
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !14188
  %conv5 = sext i32 %lnot.ext to i64, !dbg !14188
  %expval = call i64 @llvm.expect.i64(i64 %conv5, i64 0), !dbg !14188
  %tobool = icmp ne i64 %expval, 0, !dbg !14188
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !14190

if.then6:                                         ; preds = %lor.end
  store i1 false, ptr %retval, align 1, !dbg !14191
  br label %return, !dbg !14191

if.end7:                                          ; preds = %lor.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %accumbytes) #18, !dbg !14193
  tail call void @llvm.dbg.declare(metadata ptr %accumbytes, metadata !14175, metadata !DIExpression()), !dbg !14194
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !14195, !tbaa !2658
  %call8 = call i64 @tsd_thread_allocated_get(ptr noundef %5), !dbg !14196
  %6 = load i64, ptr %usize.addr, align 8, !dbg !14197, !tbaa !2663
  %add = add i64 %call8, %6, !dbg !14198
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !14199, !tbaa !2658
  %call9 = call i64 @tsd_thread_allocated_last_event_get(ptr noundef %7), !dbg !14200
  %sub = sub i64 %add, %call9, !dbg !14201
  store i64 %sub, ptr %accumbytes, align 8, !dbg !14194, !tbaa !2663
  call void @llvm.lifetime.start.p0(i64 8, ptr %sample_wait) #18, !dbg !14202
  tail call void @llvm.dbg.declare(metadata ptr %sample_wait, metadata !14176, metadata !DIExpression()), !dbg !14203
  %8 = load ptr, ptr %tsd.addr, align 8, !dbg !14204, !tbaa !2658
  %call10 = call i64 @tsd_prof_sample_event_wait_get(ptr noundef %8), !dbg !14205
  store i64 %call10, ptr %sample_wait, align 8, !dbg !14203, !tbaa !2663
  %9 = load i64, ptr %accumbytes, align 8, !dbg !14206, !tbaa !2663
  %10 = load i64, ptr %sample_wait, align 8, !dbg !14208, !tbaa !2663
  %cmp11 = icmp ult i64 %9, %10, !dbg !14209
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !14210

if.then13:                                        ; preds = %if.end7
  store i1 false, ptr %retval, align 1, !dbg !14211
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14211

if.end14:                                         ; preds = %if.end7
  br label %do.body, !dbg !14213

do.body:                                          ; preds = %if.end14
  br label %do.cond, !dbg !14214

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14214

do.end:                                           ; preds = %do.cond
  %11 = load ptr, ptr %surplus.addr, align 8, !dbg !14216, !tbaa !2658
  %cmp15 = icmp ne ptr %11, null, !dbg !14218
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !14219

if.then17:                                        ; preds = %do.end
  %12 = load i64, ptr %accumbytes, align 8, !dbg !14220, !tbaa !2663
  %13 = load i64, ptr %sample_wait, align 8, !dbg !14222, !tbaa !2663
  %sub18 = sub i64 %12, %13, !dbg !14223
  %14 = load ptr, ptr %surplus.addr, align 8, !dbg !14224, !tbaa !2658
  store i64 %sub18, ptr %14, align 8, !dbg !14225, !tbaa !2663
  br label %if.end19, !dbg !14226

if.end19:                                         ; preds = %if.then17, %do.end
  store i1 true, ptr %retval, align 1, !dbg !14227
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14227

cleanup:                                          ; preds = %if.end19, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %sample_wait) #18, !dbg !14228
  call void @llvm.lifetime.end.p0(i64 8, ptr %accumbytes) #18, !dbg !14228
  br label %return

return:                                           ; preds = %cleanup, %if.then6
  %15 = load i1, ptr %retval, align 1, !dbg !14228
  ret i1 %15, !dbg !14228
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @tsd_nominal(ptr noundef %tsd) #4 !dbg !14229 {
entry:
  %tsd.addr = alloca ptr, align 8
  %nominal = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14231, metadata !DIExpression()), !dbg !14233
  call void @llvm.lifetime.start.p0(i64 1, ptr %nominal) #18, !dbg !14234
  tail call void @llvm.dbg.declare(metadata ptr %nominal, metadata !14232, metadata !DIExpression()), !dbg !14235
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14236, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !14237
  %conv = zext i8 %call to i32, !dbg !14237
  %cmp = icmp sle i32 %conv, 2, !dbg !14238
  %frombool = zext i1 %cmp to i8, !dbg !14235
  store i8 %frombool, ptr %nominal, align 1, !dbg !14235, !tbaa !2695
  br label %do.body, !dbg !14239

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !14240

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14240

do.end:                                           ; preds = %do.cond
  %1 = load i8, ptr %nominal, align 1, !dbg !14242, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %1 to i1, !dbg !14242
  call void @llvm.lifetime.end.p0(i64 1, ptr %nominal) #18, !dbg !14243
  ret i1 %tobool, !dbg !14244
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @tsd_thread_allocated_get(ptr noundef %tsd) #3 !dbg !14245 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14249, metadata !DIExpression()), !dbg !14250
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14250, !tbaa !2658
  %call = call ptr @tsd_thread_allocatedp_get(ptr noundef %0), !dbg !14250
  %1 = load i64, ptr %call, align 8, !dbg !14250, !tbaa !2663
  ret i64 %1, !dbg !14250
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @tsd_thread_allocated_last_event_get(ptr noundef %tsd) #3 !dbg !14251 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14253, metadata !DIExpression()), !dbg !14254
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14254, !tbaa !2658
  %call = call ptr @tsd_thread_allocated_last_eventp_get(ptr noundef %0), !dbg !14254
  %1 = load i64, ptr %call, align 8, !dbg !14254, !tbaa !2663
  ret i64 %1, !dbg !14254
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @tsd_prof_sample_event_wait_get(ptr noundef %tsd) #3 !dbg !14255 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14257, metadata !DIExpression()), !dbg !14258
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14258, !tbaa !2658
  %call = call ptr @tsd_prof_sample_event_waitp_get(ptr noundef %0), !dbg !14258
  %1 = load i64, ptr %call, align 8, !dbg !14258, !tbaa !2663
  ret i64 %1, !dbg !14258
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_prof_sample_event_waitp_get(ptr noundef %tsd) #3 !dbg !14259 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14261, metadata !DIExpression()), !dbg !14263
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !14263
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !14262, metadata !DIExpression()), !dbg !14263
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14263, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !14263
  store i8 %call, ptr %state, align 1, !dbg !14263, !tbaa !2810
  br label %do.body, !dbg !14263

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !14264

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14264

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !14263, !tbaa !2658
  %call1 = call ptr @tsd_prof_sample_event_waitp_get_unsafe(ptr noundef %1), !dbg !14263
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !14263
  ret ptr %call1, !dbg !14263
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_prof_sample_event_waitp_get_unsafe(ptr noundef %tsd) #3 !dbg !14266 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14268, metadata !DIExpression()), !dbg !14269
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14269, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_prof_sample_event_wait = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 8, !dbg !14269
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_prof_sample_event_wait, !dbg !14269
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @arena_choose_impl(ptr noundef %tsd, ptr noundef %arena, i1 noundef zeroext %internal) #4 !dbg !14270 {
entry:
  %retval = alloca ptr, align 8
  %tsd.addr = alloca ptr, align 8
  %arena.addr = alloca ptr, align 8
  %internal.addr = alloca i8, align 1
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tcache_slow = alloca ptr, align 8
  %tcache = alloca ptr, align 8
  %ind = alloca i32, align 4
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14274, metadata !DIExpression()), !dbg !14287
  store ptr %arena, ptr %arena.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %arena.addr, metadata !14275, metadata !DIExpression()), !dbg !14288
  %frombool = zext i1 %internal to i8
  store i8 %frombool, ptr %internal.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %internal.addr, metadata !14276, metadata !DIExpression()), !dbg !14289
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #18, !dbg !14290
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !14277, metadata !DIExpression()), !dbg !14291
  %0 = load ptr, ptr %arena.addr, align 8, !dbg !14292, !tbaa !2658
  %cmp = icmp ne ptr %0, null, !dbg !14294
  br i1 %cmp, label %if.then, label %if.end, !dbg !14295

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %arena.addr, align 8, !dbg !14296, !tbaa !2658
  store ptr %1, ptr %retval, align 8, !dbg !14298
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14298

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %tsd.addr, align 8, !dbg !14299, !tbaa !2658
  %call = call signext i8 @tsd_reentrancy_level_get(ptr noundef %2), !dbg !14299
  %conv = sext i8 %call to i32, !dbg !14299
  %cmp1 = icmp sgt i32 %conv, 0, !dbg !14299
  %lnot = xor i1 %cmp1, true, !dbg !14299
  %lnot3 = xor i1 %lnot, true, !dbg !14299
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14299
  %conv4 = sext i32 %lnot.ext to i64, !dbg !14299
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0), !dbg !14299
  %tobool = icmp ne i64 %expval, 0, !dbg !14299
  br i1 %tobool, label %if.then5, label %if.end8, !dbg !14301

if.then5:                                         ; preds = %if.end
  %3 = load ptr, ptr %tsd.addr, align 8, !dbg !14302, !tbaa !2658
  %call6 = call ptr @tsd_tsdn(ptr noundef %3), !dbg !14304
  %call7 = call ptr @arena_get(ptr noundef %call6, i32 noundef 0, i1 noundef zeroext true), !dbg !14305
  store ptr %call7, ptr %retval, align 8, !dbg !14306
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14306

if.end8:                                          ; preds = %if.end
  %4 = load i8, ptr %internal.addr, align 1, !dbg !14307, !tbaa !2695, !range !2708, !noundef !2709
  %tobool9 = trunc i8 %4 to i1, !dbg !14307
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !14307

cond.true:                                        ; preds = %if.end8
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !14308, !tbaa !2658
  %call11 = call ptr @tsd_iarena_get(ptr noundef %5), !dbg !14309
  br label %cond.end, !dbg !14307

cond.false:                                       ; preds = %if.end8
  %6 = load ptr, ptr %tsd.addr, align 8, !dbg !14310, !tbaa !2658
  %call12 = call ptr @tsd_arena_get(ptr noundef %6), !dbg !14311
  br label %cond.end, !dbg !14307

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call11, %cond.true ], [ %call12, %cond.false ], !dbg !14307
  store ptr %cond, ptr %ret, align 8, !dbg !14312, !tbaa !2658
  %7 = load ptr, ptr %ret, align 8, !dbg !14313, !tbaa !2658
  %cmp13 = icmp eq ptr %7, null, !dbg !14313
  %lnot15 = xor i1 %cmp13, true, !dbg !14313
  %lnot17 = xor i1 %lnot15, true, !dbg !14313
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !14313
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !14313
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !14313
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !14313
  br i1 %tobool21, label %if.then22, label %if.end45, !dbg !14314

if.then22:                                        ; preds = %cond.end
  %8 = load ptr, ptr %tsd.addr, align 8, !dbg !14315, !tbaa !2658
  %9 = load i8, ptr %internal.addr, align 1, !dbg !14316, !tbaa !2695, !range !2708, !noundef !2709
  %tobool23 = trunc i8 %9 to i1, !dbg !14316
  %call24 = call ptr @arena_choose_hard(ptr noundef %8, i1 noundef zeroext %tobool23), !dbg !14317
  store ptr %call24, ptr %ret, align 8, !dbg !14318, !tbaa !2658
  br label %do.body, !dbg !14319

do.body:                                          ; preds = %if.then22
  br label %do.cond, !dbg !14320

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14320

do.end:                                           ; preds = %do.cond
  %10 = load ptr, ptr %tsd.addr, align 8, !dbg !14322, !tbaa !2658
  %call25 = call zeroext i1 @tcache_available(ptr noundef %10), !dbg !14323
  br i1 %call25, label %if.then26, label %if.end44, !dbg !14324

if.then26:                                        ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache_slow) #18, !dbg !14325
  tail call void @llvm.dbg.declare(metadata ptr %tcache_slow, metadata !14278, metadata !DIExpression()), !dbg !14326
  %11 = load ptr, ptr %tsd.addr, align 8, !dbg !14327, !tbaa !2658
  %call27 = call ptr @tsd_tcache_slowp_get(ptr noundef %11), !dbg !14328
  store ptr %call27, ptr %tcache_slow, align 8, !dbg !14326, !tbaa !2658
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !14329
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !14283, metadata !DIExpression()), !dbg !14330
  %12 = load ptr, ptr %tsd.addr, align 8, !dbg !14331, !tbaa !2658
  %call28 = call ptr @tsd_tcachep_get(ptr noundef %12), !dbg !14332
  store ptr %call28, ptr %tcache, align 8, !dbg !14330, !tbaa !2658
  %13 = load ptr, ptr %tcache_slow, align 8, !dbg !14333, !tbaa !2658
  %arena29 = getelementptr inbounds %struct.tcache_slow_s, ptr %13, i32 0, i32 2, !dbg !14335
  %14 = load ptr, ptr %arena29, align 8, !dbg !14335, !tbaa !14336
  %cmp30 = icmp ne ptr %14, null, !dbg !14337
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !14338

if.then32:                                        ; preds = %if.then26
  br label %do.body33, !dbg !14339

do.body33:                                        ; preds = %if.then32
  br label %do.cond34, !dbg !14341

do.cond34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !14341

do.end35:                                         ; preds = %do.cond34
  %15 = load ptr, ptr %tcache_slow, align 8, !dbg !14343, !tbaa !2658
  %arena36 = getelementptr inbounds %struct.tcache_slow_s, ptr %15, i32 0, i32 2, !dbg !14345
  %16 = load ptr, ptr %arena36, align 8, !dbg !14345, !tbaa !14336
  %17 = load ptr, ptr %ret, align 8, !dbg !14346, !tbaa !2658
  %cmp37 = icmp ne ptr %16, %17, !dbg !14347
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !14348

if.then39:                                        ; preds = %do.end35
  %18 = load ptr, ptr %tsd.addr, align 8, !dbg !14349, !tbaa !2658
  %call40 = call ptr @tsd_tsdn(ptr noundef %18), !dbg !14351
  %19 = load ptr, ptr %tcache_slow, align 8, !dbg !14352, !tbaa !2658
  %20 = load ptr, ptr %tcache, align 8, !dbg !14353, !tbaa !2658
  %21 = load ptr, ptr %ret, align 8, !dbg !14354, !tbaa !2658
  call void @tcache_arena_reassociate(ptr noundef %call40, ptr noundef %19, ptr noundef %20, ptr noundef %21), !dbg !14355
  br label %if.end41, !dbg !14356

if.end41:                                         ; preds = %if.then39, %do.end35
  br label %if.end43, !dbg !14357

if.else:                                          ; preds = %if.then26
  %22 = load ptr, ptr %tsd.addr, align 8, !dbg !14358, !tbaa !2658
  %call42 = call ptr @tsd_tsdn(ptr noundef %22), !dbg !14360
  %23 = load ptr, ptr %tcache_slow, align 8, !dbg !14361, !tbaa !2658
  %24 = load ptr, ptr %tcache, align 8, !dbg !14362, !tbaa !2658
  %25 = load ptr, ptr %ret, align 8, !dbg !14363, !tbaa !2658
  call void @tcache_arena_associate(ptr noundef %call42, ptr noundef %23, ptr noundef %24, ptr noundef %25), !dbg !14364
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.end41
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !14365
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache_slow) #18, !dbg !14365
  br label %if.end44, !dbg !14366

if.end44:                                         ; preds = %if.end43, %do.end
  br label %if.end45, !dbg !14367

if.end45:                                         ; preds = %if.end44, %cond.end
  %26 = load i32, ptr @opt_percpu_arena, align 4, !dbg !14368, !tbaa !2810
  %cmp46 = icmp uge i32 %26, 3, !dbg !14368
  br i1 %cmp46, label %land.lhs.true, label %if.end68, !dbg !14369

land.lhs.true:                                    ; preds = %if.end45
  %27 = load i8, ptr %internal.addr, align 1, !dbg !14370, !tbaa !2695, !range !2708, !noundef !2709
  %tobool48 = trunc i8 %27 to i1, !dbg !14370
  br i1 %tobool48, label %if.end68, label %land.lhs.true49, !dbg !14371

land.lhs.true49:                                  ; preds = %land.lhs.true
  %28 = load ptr, ptr %ret, align 8, !dbg !14372, !tbaa !2658
  %call50 = call i32 @arena_ind_get(ptr noundef %28), !dbg !14373
  %29 = load i32, ptr @opt_percpu_arena, align 4, !dbg !14374, !tbaa !2810
  %call51 = call i32 @percpu_arena_ind_limit(i32 noundef %29), !dbg !14375
  %cmp52 = icmp ult i32 %call50, %call51, !dbg !14376
  br i1 %cmp52, label %land.lhs.true54, label %if.end68, !dbg !14377

land.lhs.true54:                                  ; preds = %land.lhs.true49
  %30 = load ptr, ptr %ret, align 8, !dbg !14378, !tbaa !2658
  %last_thd = getelementptr inbounds %struct.arena_s, ptr %30, i32 0, i32 2, !dbg !14379
  %31 = load ptr, ptr %last_thd, align 8, !dbg !14379, !tbaa !14380
  %32 = load ptr, ptr %tsd.addr, align 8, !dbg !14381, !tbaa !2658
  %call55 = call ptr @tsd_tsdn(ptr noundef %32), !dbg !14382
  %cmp56 = icmp ne ptr %31, %call55, !dbg !14383
  br i1 %cmp56, label %if.then58, label %if.end68, !dbg !14384

if.then58:                                        ; preds = %land.lhs.true54
  call void @llvm.lifetime.start.p0(i64 4, ptr %ind) #18, !dbg !14385
  tail call void @llvm.dbg.declare(metadata ptr %ind, metadata !14284, metadata !DIExpression()), !dbg !14386
  %call59 = call i32 @percpu_arena_choose(), !dbg !14387
  store i32 %call59, ptr %ind, align 4, !dbg !14386, !tbaa !2791
  %33 = load ptr, ptr %ret, align 8, !dbg !14388, !tbaa !2658
  %call60 = call i32 @arena_ind_get(ptr noundef %33), !dbg !14390
  %34 = load i32, ptr %ind, align 4, !dbg !14391, !tbaa !2791
  %cmp61 = icmp ne i32 %call60, %34, !dbg !14392
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !14393

if.then63:                                        ; preds = %if.then58
  %35 = load ptr, ptr %tsd.addr, align 8, !dbg !14394, !tbaa !2658
  %36 = load i32, ptr %ind, align 4, !dbg !14396, !tbaa !2791
  call void @percpu_arena_update(ptr noundef %35, i32 noundef %36), !dbg !14397
  %37 = load ptr, ptr %tsd.addr, align 8, !dbg !14398, !tbaa !2658
  %call64 = call ptr @tsd_arena_get(ptr noundef %37), !dbg !14399
  store ptr %call64, ptr %ret, align 8, !dbg !14400, !tbaa !2658
  br label %if.end65, !dbg !14401

if.end65:                                         ; preds = %if.then63, %if.then58
  %38 = load ptr, ptr %tsd.addr, align 8, !dbg !14402, !tbaa !2658
  %call66 = call ptr @tsd_tsdn(ptr noundef %38), !dbg !14403
  %39 = load ptr, ptr %ret, align 8, !dbg !14404, !tbaa !2658
  %last_thd67 = getelementptr inbounds %struct.arena_s, ptr %39, i32 0, i32 2, !dbg !14405
  store ptr %call66, ptr %last_thd67, align 8, !dbg !14406, !tbaa !14380
  call void @llvm.lifetime.end.p0(i64 4, ptr %ind) #18, !dbg !14407
  br label %if.end68, !dbg !14408

if.end68:                                         ; preds = %if.end65, %land.lhs.true54, %land.lhs.true49, %land.lhs.true, %if.end45
  %40 = load ptr, ptr %ret, align 8, !dbg !14409, !tbaa !2658
  store ptr %40, ptr %retval, align 8, !dbg !14410
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14410

cleanup:                                          ; preds = %if.end68, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #18, !dbg !14411
  %41 = load ptr, ptr %retval, align 8, !dbg !14411
  ret ptr %41, !dbg !14411
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_tcache_slowp_get(ptr noundef %tsd) #3 !dbg !14412 {
entry:
  %tsd.addr = alloca ptr, align 8
  %state = alloca i8, align 1
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14416, metadata !DIExpression()), !dbg !14418
  call void @llvm.lifetime.start.p0(i64 1, ptr %state) #18, !dbg !14418
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !14417, metadata !DIExpression()), !dbg !14418
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14418, !tbaa !2658
  %call = call zeroext i8 @tsd_state_get(ptr noundef %0), !dbg !14418
  store i8 %call, ptr %state, align 1, !dbg !14418, !tbaa !2810
  br label %do.body, !dbg !14418

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !14419

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14419

do.end:                                           ; preds = %do.cond
  %1 = load ptr, ptr %tsd.addr, align 8, !dbg !14418, !tbaa !2658
  %call1 = call ptr @tsd_tcache_slowp_get_unsafe(ptr noundef %1), !dbg !14418
  call void @llvm.lifetime.end.p0(i64 1, ptr %state) #18, !dbg !14418
  ret ptr %call1, !dbg !14418
}

declare !dbg !14421 void @tcache_arena_reassociate(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

declare !dbg !14424 void @tcache_arena_associate(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @percpu_arena_update(ptr noundef %tsd, i32 noundef %cpu) #4 !dbg !14425 {
entry:
  %tsd.addr = alloca ptr, align 8
  %cpu.addr = alloca i32, align 4
  %oldarena = alloca ptr, align 8
  %oldind = alloca i32, align 4
  %newind = alloca i32, align 4
  %newarena = alloca ptr, align 8
  %tcache = alloca ptr, align 8
  %tcache_slow = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14429, metadata !DIExpression()), !dbg !14441
  store i32 %cpu, ptr %cpu.addr, align 4, !tbaa !2791
  tail call void @llvm.dbg.declare(metadata ptr %cpu.addr, metadata !14430, metadata !DIExpression()), !dbg !14442
  br label %do.body, !dbg !14443

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14444

do.end:                                           ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldarena) #18, !dbg !14446
  tail call void @llvm.dbg.declare(metadata ptr %oldarena, metadata !14431, metadata !DIExpression()), !dbg !14447
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14448, !tbaa !2658
  %call = call ptr @tsd_arena_get(ptr noundef %0), !dbg !14449
  store ptr %call, ptr %oldarena, align 8, !dbg !14447, !tbaa !2658
  br label %do.body1, !dbg !14450

do.body1:                                         ; preds = %do.end
  br label %do.cond, !dbg !14451

do.cond:                                          ; preds = %do.body1
  br label %do.end2, !dbg !14451

do.end2:                                          ; preds = %do.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %oldind) #18, !dbg !14453
  tail call void @llvm.dbg.declare(metadata ptr %oldind, metadata !14432, metadata !DIExpression()), !dbg !14454
  %1 = load ptr, ptr %oldarena, align 8, !dbg !14455, !tbaa !2658
  %call3 = call i32 @arena_ind_get(ptr noundef %1), !dbg !14456
  store i32 %call3, ptr %oldind, align 4, !dbg !14454, !tbaa !2791
  %2 = load i32, ptr %oldind, align 4, !dbg !14457, !tbaa !2791
  %3 = load i32, ptr %cpu.addr, align 4, !dbg !14458, !tbaa !2791
  %cmp = icmp ne i32 %2, %3, !dbg !14459
  br i1 %cmp, label %if.then, label %if.end14, !dbg !14460

if.then:                                          ; preds = %do.end2
  call void @llvm.lifetime.start.p0(i64 4, ptr %newind) #18, !dbg !14461
  tail call void @llvm.dbg.declare(metadata ptr %newind, metadata !14433, metadata !DIExpression()), !dbg !14462
  %4 = load i32, ptr %cpu.addr, align 4, !dbg !14463, !tbaa !2791
  store i32 %4, ptr %newind, align 4, !dbg !14462, !tbaa !2791
  call void @llvm.lifetime.start.p0(i64 8, ptr %newarena) #18, !dbg !14464
  tail call void @llvm.dbg.declare(metadata ptr %newarena, metadata !14436, metadata !DIExpression()), !dbg !14465
  %5 = load ptr, ptr %tsd.addr, align 8, !dbg !14466, !tbaa !2658
  %call4 = call ptr @tsd_tsdn(ptr noundef %5), !dbg !14467
  %6 = load i32, ptr %newind, align 4, !dbg !14468, !tbaa !2791
  %call5 = call ptr @arena_get(ptr noundef %call4, i32 noundef %6, i1 noundef zeroext true), !dbg !14469
  store ptr %call5, ptr %newarena, align 8, !dbg !14465, !tbaa !2658
  br label %do.body6, !dbg !14470

do.body6:                                         ; preds = %if.then
  br label %do.cond7, !dbg !14471

do.cond7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !14471

do.end8:                                          ; preds = %do.cond7
  %7 = load ptr, ptr %tsd.addr, align 8, !dbg !14473, !tbaa !2658
  %8 = load ptr, ptr %oldarena, align 8, !dbg !14474, !tbaa !2658
  %9 = load ptr, ptr %newarena, align 8, !dbg !14475, !tbaa !2658
  call void @arena_migrate(ptr noundef %7, ptr noundef %8, ptr noundef %9), !dbg !14476
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache) #18, !dbg !14477
  tail call void @llvm.dbg.declare(metadata ptr %tcache, metadata !14437, metadata !DIExpression()), !dbg !14478
  %10 = load ptr, ptr %tsd.addr, align 8, !dbg !14479, !tbaa !2658
  %call9 = call ptr @tcache_get(ptr noundef %10), !dbg !14480
  store ptr %call9, ptr %tcache, align 8, !dbg !14478, !tbaa !2658
  %11 = load ptr, ptr %tcache, align 8, !dbg !14481, !tbaa !2658
  %cmp10 = icmp ne ptr %11, null, !dbg !14482
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !14483

if.then11:                                        ; preds = %do.end8
  call void @llvm.lifetime.start.p0(i64 8, ptr %tcache_slow) #18, !dbg !14484
  tail call void @llvm.dbg.declare(metadata ptr %tcache_slow, metadata !14438, metadata !DIExpression()), !dbg !14485
  %12 = load ptr, ptr %tsd.addr, align 8, !dbg !14486, !tbaa !2658
  %call12 = call ptr @tsd_tcache_slowp_get(ptr noundef %12), !dbg !14487
  store ptr %call12, ptr %tcache_slow, align 8, !dbg !14485, !tbaa !2658
  %13 = load ptr, ptr %tsd.addr, align 8, !dbg !14488, !tbaa !2658
  %call13 = call ptr @tsd_tsdn(ptr noundef %13), !dbg !14489
  %14 = load ptr, ptr %tcache_slow, align 8, !dbg !14490, !tbaa !2658
  %15 = load ptr, ptr %tcache, align 8, !dbg !14491, !tbaa !2658
  %16 = load ptr, ptr %newarena, align 8, !dbg !14492, !tbaa !2658
  call void @tcache_arena_reassociate(ptr noundef %call13, ptr noundef %14, ptr noundef %15, ptr noundef %16), !dbg !14493
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache_slow) #18, !dbg !14494
  br label %if.end, !dbg !14495

if.end:                                           ; preds = %if.then11, %do.end8
  call void @llvm.lifetime.end.p0(i64 8, ptr %tcache) #18, !dbg !14496
  call void @llvm.lifetime.end.p0(i64 8, ptr %newarena) #18, !dbg !14496
  call void @llvm.lifetime.end.p0(i64 4, ptr %newind) #18, !dbg !14496
  br label %if.end14, !dbg !14497

if.end14:                                         ; preds = %if.end, %do.end2
  call void @llvm.lifetime.end.p0(i64 4, ptr %oldind) #18, !dbg !14498
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldarena) #18, !dbg !14498
  ret void, !dbg !14498
}

; Function Attrs: alwaysinline nounwind uwtable
define internal ptr @tsd_tcache_slowp_get_unsafe(ptr noundef %tsd) #3 !dbg !14499 {
entry:
  %tsd.addr = alloca ptr, align 8
  store ptr %tsd, ptr %tsd.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %tsd.addr, metadata !14501, metadata !DIExpression()), !dbg !14502
  %0 = load ptr, ptr %tsd.addr, align 8, !dbg !14502, !tbaa !2658
  %cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_slow = getelementptr inbounds %struct.tsd_s, ptr %0, i32 0, i32 27, !dbg !14502
  ret ptr %cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_slow, !dbg !14502
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @cache_bin_ncached_get_internal(ptr noundef %bin, i1 noundef zeroext %racy) #4 !dbg !14503 {
entry:
  %bin.addr = alloca ptr, align 8
  %racy.addr = alloca i8, align 1
  %diff = alloca i16, align 2
  %n = alloca i16, align 2
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !14507, metadata !DIExpression()), !dbg !14511
  %frombool = zext i1 %racy to i8
  store i8 %frombool, ptr %racy.addr, align 1, !tbaa !2695
  tail call void @llvm.dbg.declare(metadata ptr %racy.addr, metadata !14508, metadata !DIExpression()), !dbg !14512
  call void @llvm.lifetime.start.p0(i64 2, ptr %diff) #18, !dbg !14513
  tail call void @llvm.dbg.declare(metadata ptr %diff, metadata !14509, metadata !DIExpression()), !dbg !14514
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !14515, !tbaa !2658
  %1 = load ptr, ptr %bin.addr, align 8, !dbg !14516, !tbaa !2658
  %stack_head = getelementptr inbounds %struct.cache_bin_s, ptr %1, i32 0, i32 0, !dbg !14517
  %2 = load ptr, ptr %stack_head, align 8, !dbg !14517, !tbaa !6546
  %3 = ptrtoint ptr %2 to i64, !dbg !14518
  %conv = trunc i64 %3 to i16, !dbg !14519
  %4 = load ptr, ptr %bin.addr, align 8, !dbg !14520, !tbaa !2658
  %low_bits_empty = getelementptr inbounds %struct.cache_bin_s, ptr %4, i32 0, i32 4, !dbg !14521
  %5 = load i16, ptr %low_bits_empty, align 4, !dbg !14521, !tbaa !10131
  %6 = load i8, ptr %racy.addr, align 1, !dbg !14522, !tbaa !2695, !range !2708, !noundef !2709
  %tobool = trunc i8 %6 to i1, !dbg !14522
  %call = call zeroext i16 @cache_bin_diff(ptr noundef %0, i16 noundef zeroext %conv, i16 noundef zeroext %5, i1 noundef zeroext %tobool), !dbg !14523
  store i16 %call, ptr %diff, align 2, !dbg !14514, !tbaa !6532
  call void @llvm.lifetime.start.p0(i64 2, ptr %n) #18, !dbg !14524
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !14510, metadata !DIExpression()), !dbg !14525
  %7 = load i16, ptr %diff, align 2, !dbg !14526, !tbaa !6532
  %conv1 = zext i16 %7 to i64, !dbg !14526
  %div = udiv i64 %conv1, 8, !dbg !14527
  %conv2 = trunc i64 %div to i16, !dbg !14526
  store i16 %conv2, ptr %n, align 2, !dbg !14525, !tbaa !6532
  br label %do.body, !dbg !14528

do.body:                                          ; preds = %entry
  br label %do.cond, !dbg !14529

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !14529

do.end:                                           ; preds = %do.cond
  %8 = load i16, ptr %n, align 2, !dbg !14531, !tbaa !6532
  call void @llvm.lifetime.end.p0(i64 2, ptr %n) #18, !dbg !14532
  call void @llvm.lifetime.end.p0(i64 2, ptr %diff) #18, !dbg !14532
  ret i16 %8, !dbg !14533
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @cache_bin_low_water_adjust(ptr noundef %bin) #4 !dbg !14534 {
entry:
  %bin.addr = alloca ptr, align 8
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !14538, metadata !DIExpression()), !dbg !14539
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !14540, !tbaa !2658
  %call = call zeroext i16 @cache_bin_ncached_get_internal(ptr noundef %0, i1 noundef zeroext false), !dbg !14542
  %conv = zext i16 %call to i32, !dbg !14542
  %1 = load ptr, ptr %bin.addr, align 8, !dbg !14543, !tbaa !2658
  %call1 = call zeroext i16 @cache_bin_low_water_get_internal(ptr noundef %1), !dbg !14544
  %conv2 = zext i16 %call1 to i32, !dbg !14544
  %cmp = icmp slt i32 %conv, %conv2, !dbg !14545
  br i1 %cmp, label %if.then, label %if.end, !dbg !14546

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %bin.addr, align 8, !dbg !14547, !tbaa !2658
  call void @cache_bin_low_water_set(ptr noundef %2), !dbg !14549
  br label %if.end, !dbg !14550

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14551
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @cache_bin_low_water_get_internal(ptr noundef %bin) #4 !dbg !14552 {
entry:
  %bin.addr = alloca ptr, align 8
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !14556, metadata !DIExpression()), !dbg !14557
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !14558, !tbaa !2658
  %1 = load ptr, ptr %bin.addr, align 8, !dbg !14559, !tbaa !2658
  %low_bits_low_water = getelementptr inbounds %struct.cache_bin_s, ptr %1, i32 0, i32 2, !dbg !14560
  %2 = load i16, ptr %low_bits_low_water, align 8, !dbg !14560, !tbaa !10111
  %3 = load ptr, ptr %bin.addr, align 8, !dbg !14561, !tbaa !2658
  %low_bits_empty = getelementptr inbounds %struct.cache_bin_s, ptr %3, i32 0, i32 4, !dbg !14562
  %4 = load i16, ptr %low_bits_empty, align 4, !dbg !14562, !tbaa !10131
  %call = call zeroext i16 @cache_bin_diff(ptr noundef %0, i16 noundef zeroext %2, i16 noundef zeroext %4, i1 noundef zeroext false), !dbg !14563
  %conv = zext i16 %call to i64, !dbg !14563
  %div = udiv i64 %conv, 8, !dbg !14564
  %conv1 = trunc i64 %div to i16, !dbg !14563
  ret i16 %conv1, !dbg !14565
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @cache_bin_low_water_set(ptr noundef %bin) #4 !dbg !14566 {
entry:
  %bin.addr = alloca ptr, align 8
  store ptr %bin, ptr %bin.addr, align 8, !tbaa !2658
  tail call void @llvm.dbg.declare(metadata ptr %bin.addr, metadata !14568, metadata !DIExpression()), !dbg !14569
  %0 = load ptr, ptr %bin.addr, align 8, !dbg !14570, !tbaa !2658
  %stack_head = getelementptr inbounds %struct.cache_bin_s, ptr %0, i32 0, i32 0, !dbg !14571
  %1 = load ptr, ptr %stack_head, align 8, !dbg !14571, !tbaa !6546
  %2 = ptrtoint ptr %1 to i64, !dbg !14572
  %conv = trunc i64 %2 to i16, !dbg !14573
  %3 = load ptr, ptr %bin.addr, align 8, !dbg !14574, !tbaa !2658
  %low_bits_low_water = getelementptr inbounds %struct.cache_bin_s, ptr %3, i32 0, i32 2, !dbg !14575
  store i16 %conv, ptr %low_bits_low_water, align 8, !dbg !14576, !tbaa !10111
  ret void, !dbg !14577
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #17

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #17

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { alwaysinline nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noinline nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind allocsize(0) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind allocsize(1) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind allocsize(0,1) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nounwind willreturn memory(read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #12 = { nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #16 = { nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind allocsize(0) }
attributes #21 = { nounwind willreturn memory(none) }
attributes #22 = { nounwind willreturn memory(read) }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2648, !2649, !2650, !2651, !2652}
!llvm.ident = !{!2653}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "opt_abort", scope: !2, file: !3, line: 61, type: !389, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !382, globals: !1428, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "src/jemalloc.c", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "a53257f3052b67b9cc599e33c1db908e")
!4 = !{!5, !12, !18, !64, !69, !79, !87, !98, !110, !117, !122, !129, !136, !144, !155, !375}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "zero_realloc_action_e", file: !6, line: 10, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "include/jemalloc/internal/jemalloc_internal_types.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "98d7874a3f80133deb859835db34fa20")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "zero_realloc_action_alloc", value: 0)
!10 = !DIEnumerator(name: "zero_realloc_action_free", value: 1)
!11 = !DIEnumerator(name: "zero_realloc_action_abort", value: 2)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "malloc_init_e", file: !6, line: 23, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "malloc_init_uninitialized", value: 3)
!15 = !DIEnumerator(name: "malloc_init_a0_initialized", value: 2)
!16 = !DIEnumerator(name: "malloc_init_recursible", value: 1)
!17 = !DIEnumerator(name: "malloc_init_initialized", value: 0)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "witness_rank_e", file: !19, line: 10, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "include/jemalloc/internal/witness.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "d652ac3ca3dd6f78d1c9432cb1aa5b31")
!20 = !{!21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63}
!21 = !DIEnumerator(name: "WITNESS_RANK_OMIT", value: 0)
!22 = !DIEnumerator(name: "WITNESS_RANK_MIN", value: 1)
!23 = !DIEnumerator(name: "WITNESS_RANK_INIT", value: 1)
!24 = !DIEnumerator(name: "WITNESS_RANK_CTL", value: 2)
!25 = !DIEnumerator(name: "WITNESS_RANK_TCACHES", value: 3)
!26 = !DIEnumerator(name: "WITNESS_RANK_ARENAS", value: 4)
!27 = !DIEnumerator(name: "WITNESS_RANK_BACKGROUND_THREAD_GLOBAL", value: 5)
!28 = !DIEnumerator(name: "WITNESS_RANK_PROF_DUMP", value: 6)
!29 = !DIEnumerator(name: "WITNESS_RANK_PROF_BT2GCTX", value: 7)
!30 = !DIEnumerator(name: "WITNESS_RANK_PROF_TDATAS", value: 8)
!31 = !DIEnumerator(name: "WITNESS_RANK_PROF_TDATA", value: 9)
!32 = !DIEnumerator(name: "WITNESS_RANK_PROF_LOG", value: 10)
!33 = !DIEnumerator(name: "WITNESS_RANK_PROF_GCTX", value: 11)
!34 = !DIEnumerator(name: "WITNESS_RANK_PROF_RECENT_DUMP", value: 12)
!35 = !DIEnumerator(name: "WITNESS_RANK_BACKGROUND_THREAD", value: 13)
!36 = !DIEnumerator(name: "WITNESS_RANK_CORE", value: 14)
!37 = !DIEnumerator(name: "WITNESS_RANK_DECAY", value: 14)
!38 = !DIEnumerator(name: "WITNESS_RANK_TCACHE_QL", value: 15)
!39 = !DIEnumerator(name: "WITNESS_RANK_SEC_SHARD", value: 16)
!40 = !DIEnumerator(name: "WITNESS_RANK_EXTENT_GROW", value: 17)
!41 = !DIEnumerator(name: "WITNESS_RANK_HPA_SHARD_GROW", value: 17)
!42 = !DIEnumerator(name: "WITNESS_RANK_SAN_BUMP_ALLOC", value: 17)
!43 = !DIEnumerator(name: "WITNESS_RANK_EXTENTS", value: 18)
!44 = !DIEnumerator(name: "WITNESS_RANK_HPA_SHARD", value: 18)
!45 = !DIEnumerator(name: "WITNESS_RANK_HPA_CENTRAL_GROW", value: 19)
!46 = !DIEnumerator(name: "WITNESS_RANK_HPA_CENTRAL", value: 20)
!47 = !DIEnumerator(name: "WITNESS_RANK_EDATA_CACHE", value: 21)
!48 = !DIEnumerator(name: "WITNESS_RANK_RTREE", value: 22)
!49 = !DIEnumerator(name: "WITNESS_RANK_BASE", value: 23)
!50 = !DIEnumerator(name: "WITNESS_RANK_ARENA_LARGE", value: 24)
!51 = !DIEnumerator(name: "WITNESS_RANK_HOOK", value: 25)
!52 = !DIEnumerator(name: "WITNESS_RANK_LEAF", value: 4096)
!53 = !DIEnumerator(name: "WITNESS_RANK_BIN", value: 4096)
!54 = !DIEnumerator(name: "WITNESS_RANK_ARENA_STATS", value: 4096)
!55 = !DIEnumerator(name: "WITNESS_RANK_COUNTER_ACCUM", value: 4096)
!56 = !DIEnumerator(name: "WITNESS_RANK_DSS", value: 4096)
!57 = !DIEnumerator(name: "WITNESS_RANK_PROF_ACTIVE", value: 4096)
!58 = !DIEnumerator(name: "WITNESS_RANK_PROF_DUMP_FILENAME", value: 4096)
!59 = !DIEnumerator(name: "WITNESS_RANK_PROF_GDUMP", value: 4096)
!60 = !DIEnumerator(name: "WITNESS_RANK_PROF_NEXT_THR_UID", value: 4096)
!61 = !DIEnumerator(name: "WITNESS_RANK_PROF_RECENT_ALLOC", value: 4096)
!62 = !DIEnumerator(name: "WITNESS_RANK_PROF_STATS", value: 4096)
!63 = !DIEnumerator(name: "WITNESS_RANK_PROF_THREAD_ACTIVE_INIT", value: 4096)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !65, line: 11, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "include/jemalloc/internal/mutex.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "08001f5b74b50ac229aa7009b590c926")
!66 = !{!67, !68}
!67 = !DIEnumerator(name: "malloc_mutex_rank_exclusive", value: 0)
!68 = !DIEnumerator(name: "malloc_mutex_address_ordered", value: 1)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "extent_state_e", file: !70, line: 22, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "include/jemalloc/internal/edata.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "b6c0b5edee99d6b984431f6665890a31")
!71 = !{!72, !73, !74, !75, !76, !77, !78}
!72 = !DIEnumerator(name: "extent_state_active", value: 0)
!73 = !DIEnumerator(name: "extent_state_dirty", value: 1)
!74 = !DIEnumerator(name: "extent_state_muzzy", value: 2)
!75 = !DIEnumerator(name: "extent_state_retained", value: 3)
!76 = !DIEnumerator(name: "extent_state_transition", value: 4)
!77 = !DIEnumerator(name: "extent_state_merging", value: 5)
!78 = !DIEnumerator(name: "extent_state_max", value: 5)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !80, line: 8, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "include/jemalloc/internal/atomic_gcc_atomic.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "08b4de137309508f556f5697e2840f8f")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "atomic_memory_order_relaxed", value: 0)
!83 = !DIEnumerator(name: "atomic_memory_order_acquire", value: 1)
!84 = !DIEnumerator(name: "atomic_memory_order_release", value: 2)
!85 = !DIEnumerator(name: "atomic_memory_order_acq_rel", value: 3)
!86 = !DIEnumerator(name: "atomic_memory_order_seq_cst", value: 4)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !88, line: 15, baseType: !7, size: 32, elements: !89)
!88 = !DIFile(filename: "include/jemalloc/internal/arena_types.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "01f174d5dbd48b6d9a7feb0a552137b0")
!89 = !{!90, !91, !92, !93, !94, !95, !96, !97}
!90 = !DIEnumerator(name: "percpu_arena_mode_names_base", value: 0)
!91 = !DIEnumerator(name: "percpu_arena_uninit", value: 0)
!92 = !DIEnumerator(name: "per_phycpu_arena_uninit", value: 1)
!93 = !DIEnumerator(name: "percpu_arena_disabled", value: 2)
!94 = !DIEnumerator(name: "percpu_arena_mode_names_limit", value: 3)
!95 = !DIEnumerator(name: "percpu_arena_mode_enabled_base", value: 3)
!96 = !DIEnumerator(name: "percpu_arena", value: 3)
!97 = !DIEnumerator(name: "per_phycpu_arena", value: 4)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hook_alloc_e", file: !99, line: 51, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "include/jemalloc/internal/hook.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "cba63ef3cb81715a9e481d9adc3b20e5")
!100 = !{!101, !102, !103, !104, !105, !106, !107, !108, !109}
!101 = !DIEnumerator(name: "hook_alloc_malloc", value: 0)
!102 = !DIEnumerator(name: "hook_alloc_posix_memalign", value: 1)
!103 = !DIEnumerator(name: "hook_alloc_aligned_alloc", value: 2)
!104 = !DIEnumerator(name: "hook_alloc_calloc", value: 3)
!105 = !DIEnumerator(name: "hook_alloc_memalign", value: 4)
!106 = !DIEnumerator(name: "hook_alloc_valloc", value: 5)
!107 = !DIEnumerator(name: "hook_alloc_mallocx", value: 6)
!108 = !DIEnumerator(name: "hook_alloc_realloc", value: 7)
!109 = !DIEnumerator(name: "hook_alloc_rallocx", value: 8)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hook_dalloc_e", file: !99, line: 70, baseType: !7, size: 32, elements: !111)
!111 = !{!112, !113, !114, !115, !116}
!112 = !DIEnumerator(name: "hook_dalloc_free", value: 0)
!113 = !DIEnumerator(name: "hook_dalloc_dallocx", value: 1)
!114 = !DIEnumerator(name: "hook_dalloc_sdallocx", value: 2)
!115 = !DIEnumerator(name: "hook_dalloc_realloc", value: 3)
!116 = !DIEnumerator(name: "hook_dalloc_rallocx", value: 4)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hook_expand_e", file: !99, line: 85, baseType: !7, size: 32, elements: !118)
!118 = !{!119, !120, !121}
!119 = !DIEnumerator(name: "hook_expand_realloc", value: 0)
!120 = !DIEnumerator(name: "hook_expand_rallocx", value: 1)
!121 = !DIEnumerator(name: "hook_expand_xallocx", value: 2)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "metadata_thp_mode_e", file: !123, line: 8, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "include/jemalloc/internal/base.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "1c0df8e6773a67ccaaf4e186891ff5bb")
!124 = !{!125, !126, !127, !128}
!125 = !DIEnumerator(name: "metadata_thp_disabled", value: 0)
!126 = !DIEnumerator(name: "metadata_thp_auto", value: 1)
!127 = !DIEnumerator(name: "metadata_thp_always", value: 2)
!128 = !DIEnumerator(name: "metadata_thp_mode_limit", value: 3)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 4, baseType: !7, size: 32, elements: !131)
!130 = !DIFile(filename: "include/jemalloc/internal/extent_dss.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "9196ac99ea33b19146b60acf64876c7d")
!131 = !{!132, !133, !134, !135}
!132 = !DIEnumerator(name: "dss_prec_disabled", value: 0)
!133 = !DIEnumerator(name: "dss_prec_primary", value: 1)
!134 = !DIEnumerator(name: "dss_prec_secondary", value: 2)
!135 = !DIEnumerator(name: "dss_prec_limit", value: 3)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !137, line: 90, baseType: !7, size: 32, elements: !138)
!137 = !DIFile(filename: "include/jemalloc/internal/pages.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "6be40aa30415fb14b4fb2557d2962582")
!138 = !{!139, !140, !141, !142, !143}
!139 = !DIEnumerator(name: "thp_mode_default", value: 0)
!140 = !DIEnumerator(name: "thp_mode_always", value: 1)
!141 = !DIEnumerator(name: "thp_mode_never", value: 2)
!142 = !DIEnumerator(name: "thp_mode_names_limit", value: 3)
!143 = !DIEnumerator(name: "thp_mode_not_supported", value: 3)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !145, line: 180, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "include/jemalloc/internal/tsd.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "2eb9c29e572c9c67f268e9042ddf801e")
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154}
!147 = !DIEnumerator(name: "tsd_state_nominal", value: 0)
!148 = !DIEnumerator(name: "tsd_state_nominal_slow", value: 1)
!149 = !DIEnumerator(name: "tsd_state_nominal_recompute", value: 2)
!150 = !DIEnumerator(name: "tsd_state_nominal_max", value: 2)
!151 = !DIEnumerator(name: "tsd_state_minimal_initialized", value: 3)
!152 = !DIEnumerator(name: "tsd_state_purgatory", value: 4)
!153 = !DIEnumerator(name: "tsd_state_reincarnated", value: 5)
!154 = !DIEnumerator(name: "tsd_state_uninitialized", value: 6)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !156, line: 71, baseType: !7, size: 32, elements: !157)
!156 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/confname.h", directory: "", checksumkind: CSK_MD5, checksum: "78b98c9476f9b4c41f6f4ea6bcb3195f")
!157 = !{!158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!158 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0)
!159 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1)
!160 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2)
!161 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3)
!162 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4)
!163 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5)
!164 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6)
!165 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7)
!166 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8)
!167 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9)
!168 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10)
!169 = !DIEnumerator(name: "_SC_TIMERS", value: 11)
!170 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12)
!171 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13)
!172 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14)
!173 = !DIEnumerator(name: "_SC_FSYNC", value: 15)
!174 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16)
!175 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17)
!176 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18)
!177 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19)
!178 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20)
!179 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21)
!180 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22)
!181 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23)
!182 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24)
!183 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25)
!184 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26)
!185 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27)
!186 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28)
!187 = !DIEnumerator(name: "_SC_VERSION", value: 29)
!188 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30)
!189 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31)
!190 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32)
!191 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33)
!192 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34)
!193 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35)
!194 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36)
!195 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37)
!196 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38)
!197 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39)
!198 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40)
!199 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41)
!200 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42)
!201 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43)
!202 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44)
!203 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45)
!204 = !DIEnumerator(name: "_SC_2_VERSION", value: 46)
!205 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47)
!206 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48)
!207 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49)
!208 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50)
!209 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51)
!210 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52)
!211 = !DIEnumerator(name: "_SC_PII", value: 53)
!212 = !DIEnumerator(name: "_SC_PII_XTI", value: 54)
!213 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55)
!214 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56)
!215 = !DIEnumerator(name: "_SC_PII_OSI", value: 57)
!216 = !DIEnumerator(name: "_SC_POLL", value: 58)
!217 = !DIEnumerator(name: "_SC_SELECT", value: 59)
!218 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60)
!219 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60)
!220 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61)
!221 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62)
!222 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63)
!223 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64)
!224 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65)
!225 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66)
!226 = !DIEnumerator(name: "_SC_THREADS", value: 67)
!227 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68)
!228 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69)
!229 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70)
!230 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71)
!231 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72)
!232 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73)
!233 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74)
!234 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75)
!235 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76)
!236 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77)
!237 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78)
!238 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79)
!239 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80)
!240 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81)
!241 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82)
!242 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83)
!243 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84)
!244 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85)
!245 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86)
!246 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87)
!247 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88)
!248 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89)
!249 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90)
!250 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91)
!251 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92)
!252 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93)
!253 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94)
!254 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95)
!255 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96)
!256 = !DIEnumerator(name: "_SC_2_UPE", value: 97)
!257 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98)
!258 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99)
!259 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100)
!260 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101)
!261 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102)
!262 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103)
!263 = !DIEnumerator(name: "_SC_INT_MAX", value: 104)
!264 = !DIEnumerator(name: "_SC_INT_MIN", value: 105)
!265 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106)
!266 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107)
!267 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108)
!268 = !DIEnumerator(name: "_SC_NZERO", value: 109)
!269 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110)
!270 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111)
!271 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112)
!272 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113)
!273 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114)
!274 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115)
!275 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116)
!276 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117)
!277 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118)
!278 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119)
!279 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120)
!280 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121)
!281 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122)
!282 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123)
!283 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124)
!284 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125)
!285 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126)
!286 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127)
!287 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128)
!288 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129)
!289 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130)
!290 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131)
!291 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132)
!292 = !DIEnumerator(name: "_SC_BARRIERS", value: 133)
!293 = !DIEnumerator(name: "_SC_BASE", value: 134)
!294 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135)
!295 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136)
!296 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137)
!297 = !DIEnumerator(name: "_SC_CPUTIME", value: 138)
!298 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139)
!299 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140)
!300 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141)
!301 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142)
!302 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143)
!303 = !DIEnumerator(name: "_SC_FIFO", value: 144)
!304 = !DIEnumerator(name: "_SC_PIPE", value: 145)
!305 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146)
!306 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147)
!307 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148)
!308 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149)
!309 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150)
!310 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151)
!311 = !DIEnumerator(name: "_SC_NETWORKING", value: 152)
!312 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153)
!313 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154)
!314 = !DIEnumerator(name: "_SC_REGEXP", value: 155)
!315 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156)
!316 = !DIEnumerator(name: "_SC_SHELL", value: 157)
!317 = !DIEnumerator(name: "_SC_SIGNALS", value: 158)
!318 = !DIEnumerator(name: "_SC_SPAWN", value: 159)
!319 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160)
!320 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161)
!321 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162)
!322 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163)
!323 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164)
!324 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165)
!325 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166)
!326 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167)
!327 = !DIEnumerator(name: "_SC_2_PBS", value: 168)
!328 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169)
!329 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170)
!330 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171)
!331 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172)
!332 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173)
!333 = !DIEnumerator(name: "_SC_STREAMS", value: 174)
!334 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175)
!335 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176)
!336 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177)
!337 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178)
!338 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179)
!339 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180)
!340 = !DIEnumerator(name: "_SC_TRACE", value: 181)
!341 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182)
!342 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183)
!343 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184)
!344 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185)
!345 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186)
!346 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187)
!347 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188)
!348 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189)
!349 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190)
!350 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191)
!351 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192)
!352 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193)
!353 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194)
!354 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195)
!355 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196)
!356 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197)
!357 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198)
!358 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199)
!359 = !DIEnumerator(name: "_SC_IPV6", value: 235)
!360 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236)
!361 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237)
!362 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238)
!363 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239)
!364 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240)
!365 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241)
!366 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242)
!367 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243)
!368 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244)
!369 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245)
!370 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246)
!371 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247)
!372 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248)
!373 = !DIEnumerator(name: "_SC_MINSIGSTKSZ", value: 249)
!374 = !DIEnumerator(name: "_SC_SIGSTKSZ", value: 250)
!375 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 189, baseType: !7, size: 32, elements: !376)
!376 = !{!377, !378, !379, !380, !381}
!377 = !DIEnumerator(name: "flag_opt_junk_alloc", value: 1)
!378 = !DIEnumerator(name: "flag_opt_junk_free", value: 2)
!379 = !DIEnumerator(name: "flag_opt_zero", value: 4)
!380 = !DIEnumerator(name: "flag_opt_utrace", value: 8)
!381 = !DIEnumerator(name: "flag_opt_xmalloc", value: 16)
!382 = !{!383, !384, !7, !387, !389, !390, !391, !386, !1410, !1412, !1414, !1132, !408, !1273, !1416, !719, !594, !493, !1421, !712, !1422, !1423, !740, !1061, !763, !1424, !455, !1427}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !385, line: 90, baseType: !386)
!385 = !DIFile(filename: "/usr/include/stdint.h", directory: "", checksumkind: CSK_MD5, checksum: "a48e64edacc5b19f56c99745232c963c")
!386 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !388, line: 70, baseType: !386)
!388 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!389 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!390 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "tsdn_t", file: !393, line: 7, baseType: !394)
!393 = !DIFile(filename: "include/jemalloc/internal/tsd_types.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "cbf25f26419957a9e3f438c41fcdab12")
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tsdn_s", file: !145, line: 277, size: 21056, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "tsd", scope: !394, file: !145, line: 278, baseType: !397, size: 21056)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "tsd_t", file: !393, line: 6, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tsd_s", file: !145, line: 240, size: 21056, elements: !399)
!399 = !{!400, !401, !407, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !590, !591, !592, !593, !1325, !1326, !1335, !1336, !1342, !1349, !1350, !1357, !1368, !1369, !1390, !1395, !1396, !1397, !1398, !1399, !1400}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_enabled", scope: !398, file: !145, line: 250, baseType: !389, size: 8)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_reentrancy_level", scope: !398, file: !145, line: 250, baseType: !402, size: 8, offset: 8)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !403, line: 24, baseType: !404)
!403 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !405, line: 37, baseType: !406)
!405 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!406 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_last_event", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !409, line: 27, baseType: !410)
!409 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !405, line: 45, baseType: !386)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_next_event", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_last_event", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_next_event", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 256)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_gc_event_wait", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 320)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_gc_dalloc_event_wait", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 384)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_prof_sample_event_wait", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 448)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_prof_sample_last_event", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 512)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_stats_interval_event_wait", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 576)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_stats_interval_last_event", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 640)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_peak_alloc_event_wait", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 704)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_peak_dalloc_event_wait", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 768)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_prof_tdata", scope: !398, file: !145, line: 250, baseType: !423, size: 64, offset: 832)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "prof_tdata_t", file: !425, line: 9, baseType: !426)
!425 = !DIFile(filename: "include/jemalloc/internal/prof_types.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "5609d474728c2c85be6d4c5780ac3fd5")
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prof_tdata_s", file: !427, line: 147, size: 9664, elements: !428)
!427 = !DIFile(filename: "include/jemalloc/internal/prof_structs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "64094bed4a0e2fead984334a22440ce3")
!428 = !{!429, !528, !529, !530, !532, !533, !534, !539, !540, !569, !570, !571, !572, !573, !574, !586}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !426, file: !427, line: 148, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "malloc_mutex_t", file: !65, line: 21, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "malloc_mutex_s", file: !65, line: 22, size: 896, elements: !433)
!433 = !{!434}
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !432, file: !65, line: 23, baseType: !435, size: 896)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !432, file: !65, line: 23, size: 896, elements: !436)
!436 = !{!437, !503, !526}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !65, line: 24, baseType: !438, size: 896)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !65, line: 24, size: 896, elements: !439)
!439 = !{!440, !466, !498}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "prof_data", scope: !438, file: !65, line: 33, baseType: !441, size: 512)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "mutex_prof_data_t", file: !442, line: 115, baseType: !443)
!442 = !DIFile(filename: "include/jemalloc/internal/mutex_prof.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "49c8e72069e699cf6374eaad10c70adc")
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !442, line: 85, size: 512, elements: !444)
!444 = !{!445, !451, !452, !453, !454, !457, !463, !464, !465}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "tot_wait_time", scope: !443, file: !442, line: 91, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "nstime_t", file: !447, line: 19, baseType: !448)
!447 = !DIFile(filename: "include/jemalloc/internal/nstime.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "701f458fd2e964b721f378de413dbf72")
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !447, line: 14, size: 64, elements: !449)
!449 = !{!450}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !448, file: !447, line: 15, baseType: !408, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "max_wait_time", scope: !443, file: !442, line: 93, baseType: !446, size: 64, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "n_wait_times", scope: !443, file: !442, line: 95, baseType: !408, size: 64, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "n_spin_acquired", scope: !443, file: !442, line: 97, baseType: !408, size: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "max_n_thds", scope: !443, file: !442, line: 99, baseType: !455, size: 32, offset: 256)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !409, line: 26, baseType: !456)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !405, line: 42, baseType: !7)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "n_waiting_thds", scope: !443, file: !442, line: 101, baseType: !458, size: 32, offset: 288)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_u32_t", file: !459, line: 99, baseType: !460)
!459 = !DIFile(filename: "include/jemalloc/internal/atomic.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "6938e37e0ea24e4ceb6a513894764870")
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 99, size: 32, elements: !461)
!461 = !{!462}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !460, file: !459, line: 99, baseType: !455, size: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "n_owner_switches", scope: !443, file: !442, line: 110, baseType: !408, size: 64, offset: 320)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "prev_owner", scope: !443, file: !442, line: 112, baseType: !391, size: 64, offset: 384)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "n_lock_ops", scope: !443, file: !442, line: 114, baseType: !408, size: 64, offset: 448)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !438, file: !65, line: 46, baseType: !467, size: 320, offset: 512)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !468, line: 72, baseType: !469)
!468 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "735e3bf264ff9d8f5d95898b1692fbdb")
!469 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !468, line: 67, size: 320, elements: !470)
!470 = !{!471, !491, !496}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !469, file: !468, line: 69, baseType: !472, size: 320)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !473, line: 22, size: 320, elements: !474)
!473 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", directory: "", checksumkind: CSK_MD5, checksum: "584baedd80e6041b81caae7f496091c0")
!474 = !{!475, !476, !477, !478, !479, !480, !482, !483}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !472, file: !473, line: 24, baseType: !390, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !472, file: !473, line: 25, baseType: !7, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !472, file: !473, line: 26, baseType: !390, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !472, file: !473, line: 28, baseType: !7, size: 32, offset: 96)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !472, file: !473, line: 32, baseType: !390, size: 32, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !472, file: !473, line: 34, baseType: !481, size: 16, offset: 160)
!481 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !472, file: !473, line: 35, baseType: !481, size: 16, offset: 176)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !472, file: !473, line: 36, baseType: !484, size: 128, offset: 192)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !485, line: 55, baseType: !486)
!485 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "", checksumkind: CSK_MD5, checksum: "04c81e86d34dad9c99ad006d32e47a0d")
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !485, line: 51, size: 128, elements: !487)
!487 = !{!488, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !486, file: !485, line: 53, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !486, file: !485, line: 54, baseType: !489, size: 64, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !469, file: !468, line: 70, baseType: !492, size: 320)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 320, elements: !494)
!493 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!494 = !{!495}
!495 = !DISubrange(count: 40)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !469, file: !468, line: 71, baseType: !497, size: 64)
!497 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !438, file: !65, line: 52, baseType: !499, size: 8, offset: 832)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_b_t", file: !459, line: 89, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 89, size: 8, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !500, file: !459, line: 89, baseType: !389, size: 8)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "witness", scope: !435, file: !65, line: 61, baseType: !504, size: 384)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "witness_t", file: !19, line: 90, baseType: !505)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "witness_s", file: !19, line: 95, size: 384, elements: !506)
!506 = !{!507, !510, !512, !519, !520}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !505, file: !19, line: 97, baseType: !508, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "rank", scope: !505, file: !19, line: 103, baseType: !511, size: 32, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "witness_rank_t", file: !19, line: 79, baseType: !18)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !505, file: !19, line: 110, baseType: !513, size: 64, offset: 128)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "witness_comp_t", file: !19, line: 92, baseType: !515)
!515 = !DISubroutineType(types: !516)
!516 = !{!390, !517, !383, !517, !383}
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !505, file: !19, line: 113, baseType: !383, size: 64, offset: 192)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !505, file: !19, line: 116, baseType: !521, size: 128, offset: 256)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !505, file: !19, line: 116, size: 128, elements: !522)
!522 = !{!523, !525}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !521, file: !19, line: 116, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !521, file: !19, line: 116, baseType: !524, size: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "lock_order", scope: !435, file: !65, line: 62, baseType: !527, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "malloc_mutex_lock_order_t", file: !65, line: 19, baseType: !64)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "thr_uid", scope: !426, file: !427, line: 151, baseType: !408, size: 64, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "thr_discrim", scope: !426, file: !427, line: 157, baseType: !408, size: 64, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "thread_name", scope: !426, file: !427, line: 160, baseType: !531, size: 64, offset: 192)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "attached", scope: !426, file: !427, line: 162, baseType: !389, size: 8, offset: 256)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "expired", scope: !426, file: !427, line: 163, baseType: !389, size: 8, offset: 264)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "tdata_link", scope: !426, file: !427, line: 165, baseType: !535, size: 128, offset: 320)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !426, file: !427, line: 165, size: 128, elements: !536)
!536 = !{!537, !538}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "rbn_left", scope: !535, file: !427, line: 165, baseType: !423, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "rbn_right_red", scope: !535, file: !427, line: 165, baseType: !423, size: 64, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "tctx_uid_next", scope: !426, file: !427, line: 172, baseType: !408, size: 64, offset: 448)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "bt2tctx", scope: !426, file: !427, line: 180, baseType: !541, size: 384, offset: 512)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "ckh_t", file: !542, line: 63, baseType: !543)
!542 = !DIFile(filename: "include/jemalloc/internal/ckh.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "764fcd222e751d77d1875da9f00741d3")
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !542, line: 34, size: 384, elements: !544)
!544 = !{!545, !546, !547, !548, !549, !557, !562}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "prng_state", scope: !543, file: !542, line: 45, baseType: !408, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !543, file: !542, line: 48, baseType: !387, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "lg_minbuckets", scope: !543, file: !542, line: 54, baseType: !7, size: 32, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "lg_curbuckets", scope: !543, file: !542, line: 55, baseType: !7, size: 32, offset: 160)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !543, file: !542, line: 58, baseType: !550, size: 64, offset: 192)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "ckh_hash_t", file: !542, line: 24, baseType: !552)
!552 = !DISubroutineType(types: !553)
!553 = !{null, !554, !556}
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "keycomp", scope: !543, file: !542, line: 59, baseType: !558, size: 64, offset: 256)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ckh_keycomp_t", file: !542, line: 25, baseType: !560)
!560 = !DISubroutineType(types: !561)
!561 = !{!389, !554, !554}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "tab", scope: !543, file: !542, line: 62, baseType: !563, size: 64, offset: 320)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "ckhc_t", file: !542, line: 31, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !542, line: 28, size: 128, elements: !566)
!566 = !{!567, !568}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !565, file: !542, line: 29, baseType: !554, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !565, file: !542, line: 30, baseType: !554, size: 64, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "enq", scope: !426, file: !427, line: 183, baseType: !389, size: 8, offset: 896)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "enq_idump", scope: !426, file: !427, line: 184, baseType: !389, size: 8, offset: 904)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "enq_gdump", scope: !426, file: !427, line: 185, baseType: !389, size: 8, offset: 912)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "dumping", scope: !426, file: !427, line: 193, baseType: !389, size: 8, offset: 920)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !426, file: !427, line: 199, baseType: !389, size: 8, offset: 928)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "cnt_summed", scope: !426, file: !427, line: 202, baseType: !575, size: 512, offset: 960)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "prof_cnt_t", file: !425, line: 5, baseType: !576)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prof_cnt_s", file: !427, line: 25, size: 512, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "curobjs", scope: !576, file: !427, line: 27, baseType: !408, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "curobjs_shifted_unbiased", scope: !576, file: !427, line: 28, baseType: !408, size: 64, offset: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "curbytes", scope: !576, file: !427, line: 29, baseType: !408, size: 64, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "curbytes_unbiased", scope: !576, file: !427, line: 30, baseType: !408, size: 64, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "accumobjs", scope: !576, file: !427, line: 31, baseType: !408, size: 64, offset: 256)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "accumobjs_shifted_unbiased", scope: !576, file: !427, line: 32, baseType: !408, size: 64, offset: 320)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "accumbytes", scope: !576, file: !427, line: 33, baseType: !408, size: 64, offset: 384)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "accumbytes_unbiased", scope: !576, file: !427, line: 34, baseType: !408, size: 64, offset: 448)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !426, file: !427, line: 205, baseType: !587, size: 8192, offset: 1472)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 8192, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 128)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_prng_state", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 896)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_san_extents_until_guard_small", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 960)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_san_extents_until_guard_large", scope: !398, file: !145, line: 250, baseType: !408, size: 64, offset: 1024)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_iarena", scope: !398, file: !145, line: 250, baseType: !594, size: 64, offset: 1088)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "arena_t", file: !88, line: 13, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arena_s", file: !597, line: 20, size: 631616, elements: !598)
!597 = !DIFile(filename: "include/jemalloc/internal/arena_structs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "dc0232497de09cf78e6bf4500191b508")
!598 = !{!599, !607, !608, !609, !680, !749, !753, !754, !755, !884, !885, !1295, !1296, !1297, !1298}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "nthreads", scope: !596, file: !597, line: 34, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 64, elements: !605)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_u_t", file: !459, line: 91, baseType: !602)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 91, size: 32, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !602, file: !459, line: 91, baseType: !7, size: 32)
!605 = !{!606}
!606 = !DISubrange(count: 2)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "binshard_next", scope: !596, file: !597, line: 37, baseType: !601, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "last_thd", scope: !596, file: !597, line: 44, baseType: !391, size: 64, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !596, file: !597, line: 47, baseType: !610, size: 82944, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "arena_stats_t", file: !611, line: 45, baseType: !612)
!611 = !DIFile(filename: "include/jemalloc/internal/arena_stats.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "99cda11c8482c984e6b5456c8fe70a6c")
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arena_stats_s", file: !611, line: 46, size: 82944, elements: !613)
!613 = !{!614, !615, !616, !617, !618, !623, !624, !625, !626, !627, !628, !629, !660, !661, !662, !666, !679}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !612, file: !611, line: 53, baseType: !387, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "resident", scope: !612, file: !611, line: 54, baseType: !387, size: 64, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_thp", scope: !612, file: !611, line: 55, baseType: !387, size: 64, offset: 128)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "mapped", scope: !612, file: !611, line: 56, baseType: !387, size: 64, offset: 192)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !612, file: !611, line: 58, baseType: !619, size: 64, offset: 256)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_zu_t", file: !459, line: 93, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 93, size: 64, elements: !621)
!621 = !{!622}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !620, file: !459, line: 93, baseType: !387, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_large", scope: !612, file: !611, line: 60, baseType: !387, size: 64, offset: 320)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "nmalloc_large", scope: !612, file: !611, line: 61, baseType: !408, size: 64, offset: 384)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "ndalloc_large", scope: !612, file: !611, line: 62, baseType: !408, size: 64, offset: 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "nfills_large", scope: !612, file: !611, line: 63, baseType: !408, size: 64, offset: 512)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "nflushes_large", scope: !612, file: !611, line: 64, baseType: !408, size: 64, offset: 576)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "nrequests_large", scope: !612, file: !611, line: 65, baseType: !408, size: 64, offset: 640)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "pa_shard_stats", scope: !612, file: !611, line: 72, baseType: !630, size: 640, offset: 704)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "pa_shard_stats_t", file: !631, line: 39, baseType: !632)
!631 = !DIFile(filename: "include/jemalloc/internal/pa.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "55be87c3139e48b12a220c7b4dc8c2b0")
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pa_shard_stats_s", file: !631, line: 40, size: 640, elements: !633)
!633 = !{!634, !635}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "edata_avail", scope: !632, file: !631, line: 42, baseType: !387, size: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "pac_stats", scope: !632, file: !631, line: 49, baseType: !636, size: 576, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "pac_stats_t", file: !637, line: 52, baseType: !638)
!637 = !DIFile(filename: "include/jemalloc/internal/pac.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "877669e56bce0e5aaa98ec99cb11f799")
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pac_stats_s", file: !637, line: 53, size: 576, elements: !639)
!639 = !{!640, !656, !657, !658, !659}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "decay_dirty", scope: !638, file: !637, line: 54, baseType: !641, size: 192)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "pac_decay_stats_t", file: !637, line: 25, baseType: !642)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pac_decay_stats_s", file: !637, line: 26, size: 192, elements: !643)
!643 = !{!644, !654, !655}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "npurge", scope: !642, file: !637, line: 28, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "locked_u64_t", file: !646, line: 10, baseType: !647)
!646 = !DIFile(filename: "include/jemalloc/internal/lockedint.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "fd9906bc13a7d545799faac7a9a4b49b")
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "locked_u64_s", file: !646, line: 12, size: 64, elements: !648)
!648 = !{!649}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !647, file: !646, line: 13, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_u64_t", file: !459, line: 102, baseType: !651)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 102, size: 64, elements: !652)
!652 = !{!653}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !651, file: !459, line: 102, baseType: !408, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "nmadvise", scope: !642, file: !637, line: 30, baseType: !645, size: 64, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "purged", scope: !642, file: !637, line: 32, baseType: !645, size: 64, offset: 128)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "decay_muzzy", scope: !638, file: !637, line: 55, baseType: !641, size: 192, offset: 192)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "retained", scope: !638, file: !637, line: 62, baseType: !387, size: 64, offset: 384)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "pac_mapped", scope: !638, file: !637, line: 71, baseType: !619, size: 64, offset: 448)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "abandoned_vm", scope: !638, file: !637, line: 74, baseType: !619, size: 64, offset: 512)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "tcache_bytes", scope: !612, file: !611, line: 75, baseType: !387, size: 64, offset: 1344)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "tcache_stashed_bytes", scope: !612, file: !611, line: 76, baseType: !387, size: 64, offset: 1408)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "mutex_prof_data", scope: !612, file: !611, line: 78, baseType: !663, size: 6144, offset: 1472)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !441, size: 6144, elements: !664)
!664 = !{!665}
!665 = !DISubrange(count: 12)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !612, file: !611, line: 81, baseType: !667, size: 75264, offset: 7616)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !668, size: 75264, elements: !677)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "arena_stats_large_t", file: !611, line: 13, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arena_stats_large_s", file: !611, line: 14, size: 384, elements: !670)
!670 = !{!671, !672, !673, !674, !675, !676}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "nmalloc", scope: !669, file: !611, line: 19, baseType: !645, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ndalloc", scope: !669, file: !611, line: 20, baseType: !645, size: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "nrequests", scope: !669, file: !611, line: 27, baseType: !645, size: 64, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "nfills", scope: !669, file: !611, line: 33, baseType: !645, size: 64, offset: 192)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "nflushes", scope: !669, file: !611, line: 34, baseType: !645, size: 64, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "curlextents", scope: !669, file: !611, line: 37, baseType: !387, size: 64, offset: 320)
!677 = !{!678}
!678 = !DISubrange(count: 196)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "uptime", scope: !612, file: !611, line: 84, baseType: !446, size: 64, offset: 82880)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "tcache_ql", scope: !596, file: !597, line: 56, baseType: !681, size: 64, offset: 83136)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !596, file: !597, line: 56, size: 64, elements: !682)
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !681, file: !597, line: 56, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcache_slow_t", file: !686, line: 6, baseType: !687)
!686 = !DIFile(filename: "include/jemalloc/internal/tcache_types.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "fcc0bdea671703d1a9ea9b3c0ad5a2cc")
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcache_slow_s", file: !688, line: 20, size: 1408, elements: !689)
!688 = !DIFile(filename: "include/jemalloc/internal/tcache_structs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "4677e5af02cb08492d3f27ae4899356f")
!689 = !{!690, !695, !724, !725, !728, !735, !737, !738, !739}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !687, file: !688, line: 22, baseType: !691, size: 128)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !687, file: !688, line: 22, size: 128, elements: !692)
!692 = !{!693, !694}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !691, file: !688, line: 22, baseType: !684, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !691, file: !688, line: 22, baseType: !684, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "cache_bin_array_descriptor", scope: !687, file: !688, line: 29, baseType: !696, size: 192, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "cache_bin_array_descriptor_t", file: !697, line: 133, baseType: !698)
!697 = !DIFile(filename: "include/jemalloc/internal/cache_bin.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "346bac98cae298112dab87b1fb1cd3dc")
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_bin_array_descriptor_s", file: !697, line: 134, size: 192, elements: !699)
!699 = !{!700, !706}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !698, file: !697, line: 139, baseType: !701, size: 128)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !698, file: !697, line: 139, size: 128, elements: !702)
!702 = !{!703, !705}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !701, file: !697, line: 139, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !701, file: !697, line: 139, baseType: !704, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bins", scope: !698, file: !697, line: 141, baseType: !707, size: 64, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "cache_bin_t", file: !697, line: 81, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_bin_s", file: !697, line: 82, size: 192, elements: !710)
!710 = !{!711, !713, !718, !722, !723}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "stack_head", scope: !709, file: !697, line: 88, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !709, file: !697, line: 94, baseType: !714, size: 64, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "cache_bin_stats_t", file: !697, line: 49, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_bin_stats_s", file: !697, line: 50, size: 64, elements: !716)
!716 = !{!717}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "nrequests", scope: !715, file: !697, line: 55, baseType: !408, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "low_bits_low_water", scope: !709, file: !697, line: 104, baseType: !719, size: 16, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !409, line: 25, baseType: !720)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !405, line: 40, baseType: !721)
!721 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "low_bits_full", scope: !709, file: !697, line: 115, baseType: !719, size: 16, offset: 144)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "low_bits_empty", scope: !709, file: !697, line: 124, baseType: !719, size: 16, offset: 160)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !687, file: !688, line: 32, baseType: !594, size: 64, offset: 320)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "next_gc_bin", scope: !687, file: !688, line: 34, baseType: !726, size: 32, offset: 384)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "szind_t", file: !727, line: 29, baseType: !7)
!727 = !DIFile(filename: "include/jemalloc/internal/sz.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "b9ea65fced4fed60be8d476b16546a70")
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lg_fill_div", scope: !687, file: !688, line: 36, baseType: !729, size: 288, offset: 416)
!729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 288, elements: !733)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !409, line: 24, baseType: !731)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !405, line: 38, baseType: !732)
!732 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!733 = !{!734}
!734 = !DISubrange(count: 36)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "bin_refilled", scope: !687, file: !688, line: 38, baseType: !736, size: 288, offset: 704)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 288, elements: !733)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "bin_flush_delay_items", scope: !687, file: !688, line: 43, baseType: !729, size: 288, offset: 992)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_alloc", scope: !687, file: !688, line: 49, baseType: !383, size: 64, offset: 1280)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "tcache", scope: !687, file: !688, line: 52, baseType: !740, size: 64, offset: 1344)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcache_t", file: !686, line: 7, baseType: !742)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcache_s", file: !688, line: 55, size: 14080, elements: !743)
!743 = !{!744, !745}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tcache_slow", scope: !742, file: !688, line: 56, baseType: !684, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "bins", scope: !742, file: !688, line: 57, baseType: !746, size: 14016, offset: 64)
!746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 14016, elements: !747)
!747 = !{!748}
!748 = !DISubrange(count: 73)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "cache_bin_array_descriptor_ql", scope: !596, file: !597, line: 57, baseType: !750, size: 64, offset: 83200)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !596, file: !597, line: 57, size: 64, elements: !751)
!751 = !{!752}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !750, file: !597, line: 57, baseType: !704, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "tcache_ql_mtx", scope: !596, file: !597, line: 58, baseType: !431, size: 896, offset: 83264)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "dss_prec", scope: !596, file: !597, line: 65, baseType: !601, size: 32, offset: 84160)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "large", scope: !596, file: !597, line: 72, baseType: !756, size: 64, offset: 84224)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_list_active_t", file: !70, line: 253, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !70, line: 253, size: 64, elements: !758)
!758 = !{!759}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !757, file: !70, line: 253, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !757, file: !70, line: 253, size: 64, elements: !761)
!761 = !{!762}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !760, file: !70, line: 253, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_t", file: !70, line: 89, baseType: !765)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edata_s", file: !70, line: 92, size: 1024, elements: !766)
!766 = !{!767, !768, !769, !774, !833, !834, !855}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "e_bits", scope: !765, file: !70, line: 142, baseType: !408, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "e_addr", scope: !765, file: !70, line: 190, baseType: !383, size: 64, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, scope: !765, file: !70, line: 192, baseType: !770, size: 64, offset: 128)
!770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !765, file: !70, line: 192, size: 64, elements: !771)
!771 = !{!772, !773}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "e_size_esn", scope: !770, file: !70, line: 200, baseType: !387, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "e_bsize", scope: !770, file: !70, line: 204, baseType: !387, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "e_ps", scope: !765, file: !70, line: 212, baseType: !775, size: 64, offset: 192)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpdata_t", file: !777, line: 20, baseType: !778)
!777 = !DIFile(filename: "include/jemalloc/internal/hpdata.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "227d9acce318e355ef8af46ae9961791")
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hpdata_s", file: !777, line: 22, size: 1984, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !813, !818, !823, !824, !825, !831, !832}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "h_address", scope: !778, file: !777, line: 33, baseType: !383, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "h_age", scope: !778, file: !777, line: 35, baseType: !408, size: 64, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "h_huge", scope: !778, file: !777, line: 37, baseType: !389, size: 8, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "h_alloc_allowed", scope: !778, file: !777, line: 52, baseType: !389, size: 8, offset: 136)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "h_in_psset_alloc_container", scope: !778, file: !777, line: 53, baseType: !389, size: 8, offset: 144)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "h_purge_allowed", scope: !778, file: !777, line: 61, baseType: !389, size: 8, offset: 152)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "h_hugify_allowed", scope: !778, file: !777, line: 64, baseType: !389, size: 8, offset: 160)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "h_time_hugify_allowed", scope: !778, file: !777, line: 66, baseType: !446, size: 64, offset: 192)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "h_in_psset_hugify_container", scope: !778, file: !777, line: 67, baseType: !389, size: 8, offset: 256)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "h_mid_purge", scope: !778, file: !777, line: 70, baseType: !389, size: 8, offset: 264)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "h_mid_hugify", scope: !778, file: !777, line: 71, baseType: !389, size: 8, offset: 272)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "h_updating", scope: !778, file: !777, line: 79, baseType: !389, size: 8, offset: 280)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "h_in_psset", scope: !778, file: !777, line: 82, baseType: !389, size: 8, offset: 288)
!793 = !DIDerivedType(tag: DW_TAG_member, scope: !778, file: !777, line: 84, baseType: !794, size: 192, offset: 320)
!794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !778, file: !777, line: 84, size: 192, elements: !795)
!795 = !{!796, !808}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "age_link", scope: !794, file: !777, line: 86, baseType: !797, size: 192)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpdata_age_heap_link_t", file: !777, line: 21, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !777, line: 21, size: 192, elements: !799)
!799 = !{!800}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !798, file: !777, line: 21, baseType: !801, size: 192)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "phn_link_t", file: !802, line: 55, baseType: !803)
!802 = !DIFile(filename: "include/jemalloc/internal/ph.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "ceeb9a10f054380a38a1ec33a7da11ad")
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phn_link_s", file: !802, line: 56, size: 192, elements: !804)
!804 = !{!805, !806, !807}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !803, file: !802, line: 57, baseType: !383, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !803, file: !802, line: 58, baseType: !383, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "lchild", scope: !803, file: !802, line: 59, baseType: !383, size: 64, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ql_link_empty", scope: !794, file: !777, line: 91, baseType: !809, size: 128)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !794, file: !777, line: 91, size: 128, elements: !810)
!810 = !{!811, !812}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !809, file: !777, line: 91, baseType: !775, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !809, file: !777, line: 91, baseType: !775, size: 64, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ql_link_purge", scope: !778, file: !777, line: 97, baseType: !814, size: 128, offset: 512)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !778, file: !777, line: 97, size: 128, elements: !815)
!815 = !{!816, !817}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !814, file: !777, line: 97, baseType: !775, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !814, file: !777, line: 97, baseType: !775, size: 64, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ql_link_hugify", scope: !778, file: !777, line: 98, baseType: !819, size: 128, offset: 640)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !778, file: !777, line: 98, size: 128, elements: !820)
!820 = !{!821, !822}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !819, file: !777, line: 98, baseType: !775, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !819, file: !777, line: 98, baseType: !775, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "h_longest_free_range", scope: !778, file: !777, line: 101, baseType: !387, size: 64, offset: 768)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "h_nactive", scope: !778, file: !777, line: 104, baseType: !387, size: 64, offset: 832)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "active_pages", scope: !778, file: !777, line: 107, baseType: !826, size: 512, offset: 896)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 512, elements: !829)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "fb_group_t", file: !828, line: 12, baseType: !386)
!828 = !DIFile(filename: "include/jemalloc/internal/fb.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "617442e449dfdc2ed891a67ec59d7ccf")
!829 = !{!830}
!830 = !DISubrange(count: 8)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "h_ntouched", scope: !778, file: !777, line: 114, baseType: !387, size: 64, offset: 1408)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "touched_pages", scope: !778, file: !777, line: 117, baseType: !826, size: 512, offset: 1472)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "e_sn", scope: !765, file: !70, line: 218, baseType: !408, size: 64, offset: 256)
!834 = !DIDerivedType(tag: DW_TAG_member, scope: !765, file: !70, line: 220, baseType: !835, size: 192, offset: 320)
!835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !765, file: !70, line: 220, size: 192, elements: !836)
!836 = !{!837, !842}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "ql_link_active", scope: !835, file: !70, line: 225, baseType: !838, size: 128)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !835, file: !70, line: 225, size: 128, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !838, file: !70, line: 225, baseType: !763, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !838, file: !70, line: 225, baseType: !763, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, scope: !835, file: !70, line: 232, baseType: !843, size: 192)
!843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !835, file: !70, line: 232, size: 192, elements: !844)
!844 = !{!845, !850}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "heap_link", scope: !843, file: !70, line: 233, baseType: !846, size: 192)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_heap_link_t", file: !70, line: 91, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !70, line: 91, size: 192, elements: !848)
!848 = !{!849}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !847, file: !70, line: 91, baseType: !801, size: 192)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "avail_link", scope: !843, file: !70, line: 234, baseType: !851, size: 192)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_avail_link_t", file: !70, line: 90, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !70, line: 90, size: 192, elements: !853)
!853 = !{!854}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !852, file: !70, line: 90, baseType: !801, size: 192)
!855 = !DIDerivedType(tag: DW_TAG_member, scope: !765, file: !70, line: 238, baseType: !856, size: 512, offset: 512)
!856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !765, file: !70, line: 238, size: 512, elements: !857)
!857 = !{!858, !863, !872}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ql_link_inactive", scope: !856, file: !70, line: 244, baseType: !859, size: 128)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !856, file: !70, line: 244, size: 128, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !859, file: !70, line: 244, baseType: !763, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !859, file: !70, line: 244, baseType: !763, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "e_slab_data", scope: !856, file: !70, line: 246, baseType: !864, size: 512)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_data_t", file: !865, line: 6, baseType: !866)
!865 = !DIFile(filename: "include/jemalloc/internal/slab_data.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "3957c6c0ea3d34f7841f7b97dcad1035")
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slab_data_s", file: !865, line: 7, size: 512, elements: !867)
!867 = !{!868}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap", scope: !866, file: !865, line: 9, baseType: !869, size: 512)
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 512, elements: !829)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_t", file: !871, line: 7, baseType: !386)
!871 = !DIFile(filename: "include/jemalloc/internal/bitmap.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "97e6c829f154125215bd6d0de76c5988")
!872 = !DIDerivedType(tag: DW_TAG_member, name: "e_prof_info", scope: !856, file: !70, line: 249, baseType: !873, size: 256)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "e_prof_info_t", file: !70, line: 63, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "e_prof_info_s", file: !70, line: 49, size: 256, elements: !875)
!875 = !{!876, !877, !878, !883}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "e_prof_alloc_time", scope: !874, file: !70, line: 51, baseType: !446, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "e_prof_alloc_size", scope: !874, file: !70, line: 53, baseType: !387, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "e_prof_tctx", scope: !874, file: !70, line: 55, baseType: !879, size: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_p_t", file: !459, line: 83, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 83, size: 64, elements: !881)
!881 = !{!882}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !880, file: !459, line: 83, baseType: !383, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "e_prof_recent_alloc", scope: !874, file: !70, line: 61, baseType: !879, size: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "large_mtx", scope: !596, file: !597, line: 74, baseType: !431, size: 896, offset: 84288)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "pa_shard", scope: !596, file: !597, line: 77, baseType: !886, size: 546240, offset: 85184)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "pa_shard_t", file: !631, line: 67, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pa_shard_s", file: !631, line: 68, size: 546240, elements: !888)
!888 = !{!889, !972, !973, !974, !975, !1149, !1184, !1288, !1289, !1290, !1291, !1293, !1294}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "central", scope: !887, file: !631, line: 70, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "pa_central_t", file: !631, line: 23, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pa_central_s", file: !631, line: 24, size: 2496, elements: !893)
!893 = !{!894}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "hpa", scope: !892, file: !631, line: 25, baseType: !895, size: 2496)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpa_central_t", file: !896, line: 10, baseType: !897)
!896 = !DIFile(filename: "include/jemalloc/internal/hpa.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "b167af9349348ab02109568222c99503")
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hpa_central_s", file: !896, line: 11, size: 2496, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !946, !947}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !897, file: !896, line: 16, baseType: !431, size: 896)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "grow_mtx", scope: !897, file: !896, line: 22, baseType: !431, size: 896, offset: 896)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "eden", scope: !897, file: !896, line: 30, baseType: !383, size: 64, offset: 1792)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "eden_len", scope: !897, file: !896, line: 31, baseType: !387, size: 64, offset: 1856)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !897, file: !896, line: 33, baseType: !904, size: 64, offset: 1920)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "base_t", file: !123, line: 42, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "base_s", file: !123, line: 43, size: 31296, elements: !907)
!907 = !{!908, !915, !916, !917, !918, !920, !921, !929, !942, !943, !944, !945}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "ehooks", scope: !906, file: !123, line: 47, baseType: !909, size: 128)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "ehooks_t", file: !910, line: 21, baseType: !911)
!910 = !DIFile(filename: "include/jemalloc/internal/ehooks.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "6c296cf246258b3220ac1cb2e396e4b5")
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehooks_s", file: !910, line: 22, size: 128, elements: !912)
!912 = !{!913, !914}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "ind", scope: !911, file: !910, line: 28, baseType: !7, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !911, file: !910, line: 30, baseType: !879, size: 64, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ehooks_base", scope: !906, file: !123, line: 52, baseType: !909, size: 128, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !906, file: !123, line: 55, baseType: !431, size: 896, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "auto_thp_switched", scope: !906, file: !123, line: 58, baseType: !389, size: 8, offset: 1152)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "pind_last", scope: !906, file: !123, line: 64, baseType: !919, size: 32, offset: 1184)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "pszind_t", file: !727, line: 26, baseType: !7)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "extent_sn_next", scope: !906, file: !123, line: 67, baseType: !387, size: 64, offset: 1216)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !906, file: !123, line: 70, baseType: !922, size: 64, offset: 1280)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "base_block_t", file: !123, line: 30, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "base_block_s", file: !123, line: 31, size: 1152, elements: !925)
!925 = !{!926, !927, !928}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !924, file: !123, line: 33, baseType: !387, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !924, file: !123, line: 36, baseType: !922, size: 64, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !924, file: !123, line: 39, baseType: !764, size: 1024, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !906, file: !123, line: 73, baseType: !930, size: 29696, offset: 1344)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !931, size: 29696, elements: !940)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_heap_t", file: !70, line: 91, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !70, line: 91, size: 128, elements: !933)
!933 = !{!934}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ph", scope: !932, file: !70, line: 91, baseType: !935, size: 128)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "ph_t", file: !802, line: 62, baseType: !936)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ph_s", file: !802, line: 63, size: 128, elements: !937)
!937 = !{!938, !939}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !936, file: !802, line: 64, baseType: !383, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "auxcount", scope: !936, file: !802, line: 71, baseType: !387, size: 64, offset: 64)
!940 = !{!941}
!941 = !DISubrange(count: 232)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !906, file: !123, line: 76, baseType: !387, size: 64, offset: 31040)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "resident", scope: !906, file: !123, line: 77, baseType: !387, size: 64, offset: 31104)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "mapped", scope: !906, file: !123, line: 78, baseType: !387, size: 64, offset: 31168)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "n_thp", scope: !906, file: !123, line: 80, baseType: !387, size: 64, offset: 31232)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "age_counter", scope: !897, file: !896, line: 35, baseType: !408, size: 64, offset: 1984)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !897, file: !896, line: 38, baseType: !948, size: 448, offset: 2048)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpa_hooks_t", file: !949, line: 4, baseType: !950)
!949 = !DIFile(filename: "include/jemalloc/internal/hpa_hooks.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "0980fb000517829e6b7477bbc3494118")
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hpa_hooks_s", file: !949, line: 5, size: 448, elements: !951)
!951 = !{!952, !956, !960, !961, !962, !963, !968}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !950, file: !949, line: 6, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!383, !387}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !950, file: !949, line: 7, baseType: !957, size: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !383, !387}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "purge", scope: !950, file: !949, line: 8, baseType: !957, size: 64, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "hugify", scope: !950, file: !949, line: 9, baseType: !957, size: 64, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "dehugify", scope: !950, file: !949, line: 10, baseType: !957, size: 64, offset: 256)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "curtime", scope: !950, file: !949, line: 11, baseType: !964, size: 64, offset: 320)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !967, !389}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ms_since", scope: !950, file: !949, line: 12, baseType: !969, size: 64, offset: 384)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!408, !967}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "nactive", scope: !887, file: !631, line: 77, baseType: !619, size: 64, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "use_hpa", scope: !887, file: !631, line: 86, baseType: !499, size: 8, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ever_used_hpa", scope: !887, file: !631, line: 93, baseType: !389, size: 8, offset: 136)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pac", scope: !887, file: !631, line: 96, baseType: !976, size: 497920, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "pac_t", file: !637, line: 77, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pac_s", file: !637, line: 78, size: 497920, elements: !978)
!978 = !{!979, !1015, !1066, !1067, !1068, !1069, !1090, !1104, !1111, !1112, !1119, !1120, !1144, !1145, !1146, !1148}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "pai", scope: !977, file: !637, line: 83, baseType: !980, size: 448)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "pai_t", file: !981, line: 6, baseType: !982)
!981 = !DIFile(filename: "include/jemalloc/internal/pai.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "6205721010343a74af256b178d9d9dbd")
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pai_s", file: !981, line: 7, size: 448, elements: !983)
!983 = !{!984, !990, !995, !999, !1003, !1007, !1011}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !982, file: !981, line: 9, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!763, !391, !988, !387, !387, !389, !389, !389, !989}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_batch", scope: !982, file: !981, line: 18, baseType: !991, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!387, !391, !988, !387, !387, !994, !989}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "expand", scope: !982, file: !981, line: 21, baseType: !996, size: 64, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!389, !391, !988, !763, !387, !387, !389, !989}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "shrink", scope: !982, file: !981, line: 24, baseType: !1000, size: 64, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!389, !391, !988, !763, !387, !387, !989}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "dalloc", scope: !982, file: !981, line: 26, baseType: !1004, size: 64, offset: 256)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !391, !988, !763, !989}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "dalloc_batch", scope: !982, file: !981, line: 29, baseType: !1008, size: 64, offset: 320)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !391, !988, !994, !989}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "time_until_deferred_work", scope: !982, file: !981, line: 31, baseType: !1012, size: 64, offset: 384)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!408, !391, !988}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ecache_dirty", scope: !977, file: !637, line: 90, baseType: !1016, size: 155520, offset: 448)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "ecache_t", file: !1017, line: 8, baseType: !1018)
!1017 = !DIFile(filename: "include/jemalloc/internal/ecache.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "78d215f47eec710b9137eacb5e234a5e")
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ecache_s", file: !1017, line: 9, size: 155520, elements: !1019)
!1019 = !{!1020, !1021, !1062, !1063, !1064, !1065}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1018, file: !1017, line: 10, baseType: !431, size: 896)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "eset", scope: !1018, file: !1017, line: 11, baseType: !1022, size: 77248, offset: 896)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "eset_t", file: !1023, line: 37, baseType: !1024)
!1023 = !DIFile(filename: "include/jemalloc/internal/eset.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "8831525b8469e6d512e893965968cd22")
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eset_s", file: !1023, line: 38, size: 77248, elements: !1025)
!1025 = !{!1026, !1030, !1044, !1051, !1059, !1060}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap", scope: !1024, file: !1023, line: 40, baseType: !1027, size: 256)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 256, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 4)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "bins", scope: !1024, file: !1023, line: 43, baseType: !1031, size: 51200, offset: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 51200, elements: !1042)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "eset_bin_t", file: !1023, line: 18, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eset_bin_s", file: !1023, line: 19, size: 256, elements: !1034)
!1034 = !{!1035, !1036}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1033, file: !1023, line: 20, baseType: !931, size: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "heap_min", scope: !1033, file: !1023, line: 28, baseType: !1037, size: 128, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_cmp_summary_t", file: !70, line: 82, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edata_cmp_summary_s", file: !70, line: 83, size: 128, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "sn", scope: !1038, file: !70, line: 84, baseType: !408, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1038, file: !70, line: 85, baseType: !384, size: 64, offset: 64)
!1042 = !{!1043}
!1043 = !DISubrange(count: 200)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "bin_stats", scope: !1024, file: !1023, line: 45, baseType: !1045, size: 25600, offset: 51456)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 25600, elements: !1042)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "eset_bin_stats_t", file: !1023, line: 31, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eset_bin_stats_s", file: !1023, line: 32, size: 128, elements: !1048)
!1048 = !{!1049, !1050}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1047, file: !1023, line: 33, baseType: !619, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !1047, file: !1023, line: 34, baseType: !619, size: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1024, file: !1023, line: 48, baseType: !1052, size: 64, offset: 77056)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_list_inactive_t", file: !70, line: 254, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !70, line: 254, size: 64, elements: !1054)
!1054 = !{!1055}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1053, file: !70, line: 254, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1053, file: !70, line: 254, size: 64, elements: !1057)
!1057 = !{!1058}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !1056, file: !70, line: 254, baseType: !763, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "npages", scope: !1024, file: !1023, line: 51, baseType: !619, size: 64, offset: 77120)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1024, file: !1023, line: 57, baseType: !1061, size: 32, offset: 77184)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_state_t", file: !70, line: 31, baseType: !69)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "guarded_eset", scope: !1018, file: !1017, line: 12, baseType: !1022, size: 77248, offset: 78144)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1018, file: !1017, line: 14, baseType: !1061, size: 32, offset: 155392)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ind", scope: !1018, file: !1017, line: 16, baseType: !7, size: 32, offset: 155424)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "delay_coalesce", scope: !1018, file: !1017, line: 21, baseType: !389, size: 8, offset: 155456)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ecache_muzzy", scope: !977, file: !637, line: 91, baseType: !1016, size: 155520, offset: 155968)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ecache_retained", scope: !977, file: !637, line: 92, baseType: !1016, size: 155520, offset: 311488)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !977, file: !637, line: 94, baseType: !904, size: 64, offset: 467008)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "emap", scope: !977, file: !637, line: 95, baseType: !1070, size: 64, offset: 467072)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "emap_t", file: !1072, line: 16, baseType: !1073)
!1072 = !DIFile(filename: "include/jemalloc/internal/emap.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "4886c34b97d6ef6486963c4e0200b09f")
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emap_s", file: !1072, line: 17, size: 16778176, elements: !1074)
!1074 = !{!1075}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "rtree", scope: !1073, file: !1072, line: 18, baseType: !1076, size: 16778176)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_t", file: !1077, line: 98, baseType: !1078)
!1077 = !DIFile(filename: "include/jemalloc/internal/rtree.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "103cd0a954fb1863bb498eb7b2d89316")
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_s", file: !1077, line: 99, size: 16778176, elements: !1079)
!1079 = !{!1080, !1081, !1082}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1078, file: !1077, line: 100, baseType: !904, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "init_lock", scope: !1078, file: !1077, line: 101, baseType: !431, size: 896, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1078, file: !1077, line: 104, baseType: !1083, size: 16777216, offset: 960)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 16777216, elements: !1088)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_node_elm_t", file: !1077, line: 38, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_node_elm_s", file: !1077, line: 39, size: 64, elements: !1086)
!1086 = !{!1087}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1085, file: !1077, line: 40, baseType: !879, size: 64)
!1088 = !{!1089}
!1089 = !DISubrange(count: 262144)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "edata_cache", scope: !977, file: !637, line: 96, baseType: !1091, size: 64, offset: 467136)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_cache_t", file: !1093, line: 15, baseType: !1094)
!1093 = !DIFile(filename: "include/jemalloc/internal/edata_cache.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "3d63723d254bad4e2554b9f9134fce37")
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edata_cache_s", file: !1093, line: 16, size: 1152, elements: !1095)
!1095 = !{!1096, !1101, !1102, !1103}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !1094, file: !1093, line: 17, baseType: !1097, size: 128)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_avail_t", file: !70, line: 90, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !70, line: 90, size: 128, elements: !1099)
!1099 = !{!1100}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ph", scope: !1098, file: !70, line: 90, baseType: !935, size: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1094, file: !1093, line: 18, baseType: !619, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1094, file: !1093, line: 19, baseType: !431, size: 896, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1094, file: !1093, line: 20, baseType: !904, size: 64, offset: 1088)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "exp_grow", scope: !977, file: !637, line: 99, baseType: !1105, size: 64, offset: 467200)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "exp_grow_t", file: !1106, line: 4, baseType: !1107)
!1106 = !DIFile(filename: "include/jemalloc/internal/exp_grow.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "bf6848675fbb3c1f8c6ab15998625e74")
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exp_grow_s", file: !1106, line: 5, size: 64, elements: !1108)
!1108 = !{!1109, !1110}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1107, file: !1106, line: 17, baseType: !919, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1107, file: !1106, line: 18, baseType: !919, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "grow_mtx", scope: !977, file: !637, line: 100, baseType: !431, size: 896, offset: 467264)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "sba", scope: !977, file: !637, line: 103, baseType: !1113, size: 960, offset: 468160)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "san_bump_alloc_t", file: !1114, line: 15, baseType: !1115)
!1114 = !DIFile(filename: "include/jemalloc/internal/san_bump.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "1c2aa883cd4eaa1bdaec306a4e50c081")
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "san_bump_alloc_s", file: !1114, line: 16, size: 960, elements: !1116)
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1115, file: !1114, line: 17, baseType: !431, size: 896)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "curr_reg", scope: !1115, file: !1114, line: 19, baseType: !763, size: 64, offset: 896)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "oversize_threshold", scope: !977, file: !637, line: 106, baseType: !619, size: 64, offset: 469120)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "decay_dirty", scope: !977, file: !637, line: 114, baseType: !1121, size: 14272, offset: 469184)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "decay_t", file: !1122, line: 23, baseType: !1123)
!1122 = !DIFile(filename: "include/jemalloc/internal/decay.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "0d27b26766983c10c5dfe1de80068510")
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "decay_s", file: !1122, line: 24, size: 14272, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1143}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1123, file: !1122, line: 26, baseType: !431, size: 896)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "purging", scope: !1123, file: !1122, line: 31, baseType: !389, size: 8, offset: 896)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "time_ms", scope: !1123, file: !1122, line: 37, baseType: !1128, size: 64, offset: 960)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_zd_t", file: !459, line: 95, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 95, size: 64, elements: !1130)
!1130 = !{!1131}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !1129, file: !459, line: 95, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !1133, line: 108, baseType: !1134)
!1133 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !405, line: 194, baseType: !497)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1123, file: !1122, line: 39, baseType: !446, size: 64, offset: 1024)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "epoch", scope: !1123, file: !1122, line: 47, baseType: !446, size: 64, offset: 1088)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_state", scope: !1123, file: !1122, line: 49, baseType: !408, size: 64, offset: 1152)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1123, file: !1122, line: 57, baseType: !446, size: 64, offset: 1216)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "npages_limit", scope: !1123, file: !1122, line: 63, baseType: !387, size: 64, offset: 1280)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "nunpurged", scope: !1123, file: !1122, line: 70, baseType: !387, size: 64, offset: 1344)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !1123, file: !1122, line: 80, baseType: !1142, size: 12800, offset: 1408)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !387, size: 12800, elements: !1042)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "ceil_npages", scope: !1123, file: !1122, line: 83, baseType: !408, size: 64, offset: 14208)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "decay_muzzy", scope: !977, file: !637, line: 115, baseType: !1121, size: 14272, offset: 483456)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "stats_mtx", scope: !977, file: !637, line: 117, baseType: !430, size: 64, offset: 497728)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !977, file: !637, line: 118, baseType: !1147, size: 64, offset: 497792)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "extent_sn_next", scope: !977, file: !637, line: 121, baseType: !619, size: 64, offset: 497856)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "hpa_sec", scope: !887, file: !631, line: 103, baseType: !1150, size: 960, offset: 498112)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "sec_t", file: !1151, line: 87, baseType: !1152)
!1151 = !DIFile(filename: "include/jemalloc/internal/sec.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "ddbad2fd3266825bf2985ec75d9b308d")
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sec_s", file: !1151, line: 88, size: 960, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1166, !1183}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pai", scope: !1152, file: !1151, line: 89, baseType: !980, size: 448)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "fallback", scope: !1152, file: !1151, line: 90, baseType: !988, size: 64, offset: 448)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1152, file: !1151, line: 92, baseType: !1157, size: 320, offset: 512)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "sec_opts_t", file: !1158, line: 9, baseType: !1159)
!1158 = !DIFile(filename: "include/jemalloc/internal/sec_opts.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "8e74e2e488441438e14e59d407f14329")
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sec_opts_s", file: !1158, line: 10, size: 320, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "nshards", scope: !1159, file: !1158, line: 15, baseType: !387, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "max_alloc", scope: !1159, file: !1158, line: 21, baseType: !387, size: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "max_bytes", scope: !1159, file: !1158, line: 26, baseType: !387, size: 64, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_after_flush", scope: !1159, file: !1158, line: 35, baseType: !387, size: 64, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "batch_fill_extra", scope: !1159, file: !1158, line: 42, baseType: !387, size: 64, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "shards", scope: !1152, file: !1151, line: 93, baseType: !1167, size: 64, offset: 832)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "sec_shard_t", file: !1151, line: 62, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sec_shard_s", file: !1151, line: 63, size: 1152, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1181, !1182}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1169, file: !1151, line: 69, baseType: !431, size: 896)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1169, file: !1151, line: 79, baseType: !389, size: 8, offset: 896)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "bins", scope: !1169, file: !1151, line: 80, baseType: !1174, size: 64, offset: 960)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "sec_bin_t", file: !1151, line: 32, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sec_bin_s", file: !1151, line: 33, size: 192, elements: !1177)
!1177 = !{!1178, !1179, !1180}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "being_batch_filled", scope: !1176, file: !1151, line: 50, baseType: !389, size: 8)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_cur", scope: !1176, file: !1151, line: 58, baseType: !387, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1176, file: !1151, line: 59, baseType: !756, size: 64, offset: 128)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_cur", scope: !1169, file: !1151, line: 82, baseType: !387, size: 64, offset: 1024)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "to_flush_next", scope: !1169, file: !1151, line: 84, baseType: !919, size: 32, offset: 1088)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "npsizes", scope: !1152, file: !1151, line: 94, baseType: !919, size: 32, offset: 896)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "hpa_shard", scope: !887, file: !631, line: 104, baseType: !1185, size: 45696, offset: 499072)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpa_shard_t", file: !896, line: 79, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hpa_shard_s", file: !896, line: 80, size: 45696, elements: !1187)
!1187 = !{!1188, !1189, !1191, !1192, !1193, !1194, !1201, !1262, !1263, !1264, !1265, !1278, !1279, !1287}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pai", scope: !1186, file: !896, line: 85, baseType: !980, size: 448)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "central", scope: !1186, file: !896, line: 88, baseType: !1190, size: 64, offset: 448)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "mtx", scope: !1186, file: !896, line: 90, baseType: !431, size: 896, offset: 512)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "grow_mtx", scope: !1186, file: !896, line: 96, baseType: !431, size: 896, offset: 1408)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1186, file: !896, line: 98, baseType: !904, size: 64, offset: 2304)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "ecf", scope: !1186, file: !896, line: 105, baseType: !1195, size: 192, offset: 2368)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "edata_cache_fast_t", file: !1093, line: 36, baseType: !1196)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edata_cache_fast_s", file: !1093, line: 37, size: 192, elements: !1197)
!1197 = !{!1198, !1199, !1200}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1196, file: !1093, line: 38, baseType: !1052, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "fallback", scope: !1196, file: !1093, line: 39, baseType: !1091, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "disabled", scope: !1196, file: !1093, line: 40, baseType: !389, size: 8, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "psset", scope: !1186, file: !896, line: 107, baseType: !1202, size: 42240, offset: 2560)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "psset_t", file: !1203, line: 63, baseType: !1204)
!1203 = !DIFile(filename: "include/jemalloc/internal/psset.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "ac7317bc4820a45856300accafbe13ce")
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "psset_s", file: !1203, line: 64, size: 42240, elements: !1205)
!1205 = !{!1206, !1214, !1218, !1225, !1235, !1243, !1252, !1254}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "pageslabs", scope: !1204, file: !1203, line: 69, baseType: !1207, size: 8192)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 8192, elements: !1212)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpdata_age_heap_t", file: !777, line: 21, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !777, line: 21, size: 128, elements: !1210)
!1210 = !{!1211}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "ph", scope: !1209, file: !777, line: 21, baseType: !935, size: 128)
!1212 = !{!1213}
!1213 = !DISubrange(count: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pageslab_bitmap", scope: !1204, file: !1203, line: 71, baseType: !1215, size: 64, offset: 8192)
!1215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 64, elements: !1216)
!1216 = !{!1217}
!1217 = !DISubrange(count: 1)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "merged_stats", scope: !1204, file: !1203, line: 77, baseType: !1219, size: 192, offset: 8256)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "psset_bin_stats_t", file: !1203, line: 34, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "psset_bin_stats_s", file: !1203, line: 35, size: 192, elements: !1221)
!1221 = !{!1222, !1223, !1224}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "npageslabs", scope: !1220, file: !1203, line: 37, baseType: !387, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "nactive", scope: !1220, file: !1203, line: 39, baseType: !387, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ndirty", scope: !1220, file: !1203, line: 41, baseType: !387, size: 64, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1204, file: !1203, line: 78, baseType: !1226, size: 25344, offset: 8448)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "psset_stats_t", file: !1203, line: 44, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "psset_stats_s", file: !1203, line: 45, size: 25344, elements: !1228)
!1228 = !{!1229, !1232, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "nonfull_slabs", scope: !1227, file: !1203, line: 51, baseType: !1230, size: 24576)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1219, size: 24576, elements: !1231)
!1231 = !{!1213, !606}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "full_slabs", scope: !1227, file: !1203, line: 57, baseType: !1233, size: 384, offset: 24576)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1219, size: 384, elements: !605)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "empty_slabs", scope: !1227, file: !1203, line: 60, baseType: !1233, size: 384, offset: 24960)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !1204, file: !1203, line: 83, baseType: !1236, size: 64, offset: 33792)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpdata_empty_list_t", file: !777, line: 120, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !777, line: 120, size: 64, elements: !1238)
!1238 = !{!1239}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1237, file: !777, line: 120, baseType: !1240, size: 64)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1237, file: !777, line: 120, size: 64, elements: !1241)
!1241 = !{!1242}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !1240, file: !777, line: 120, baseType: !775, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "to_purge", scope: !1204, file: !1203, line: 89, baseType: !1244, size: 8192, offset: 33856)
!1244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 8192, elements: !588)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpdata_purge_list_t", file: !777, line: 121, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !777, line: 121, size: 64, elements: !1247)
!1247 = !{!1248}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1246, file: !777, line: 121, baseType: !1249, size: 64)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1246, file: !777, line: 121, size: 64, elements: !1250)
!1250 = !{!1251}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !1249, file: !777, line: 121, baseType: !775, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "purge_bitmap", scope: !1204, file: !1203, line: 91, baseType: !1253, size: 128, offset: 42048)
!1253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 128, elements: !605)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "to_hugify", scope: !1204, file: !1203, line: 93, baseType: !1255, size: 64, offset: 42176)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpdata_hugify_list_t", file: !777, line: 122, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !777, line: 122, size: 64, elements: !1257)
!1257 = !{!1258}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1256, file: !777, line: 122, baseType: !1259, size: 64)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1256, file: !777, line: 122, size: 64, elements: !1260)
!1260 = !{!1261}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !1259, file: !777, line: 122, baseType: !775, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "age_counter", scope: !1186, file: !896, line: 114, baseType: !408, size: 64, offset: 44800)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ind", scope: !1186, file: !896, line: 117, baseType: !7, size: 32, offset: 44864)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "emap", scope: !1186, file: !896, line: 123, baseType: !1070, size: 64, offset: 44928)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1186, file: !896, line: 126, baseType: !1266, size: 320, offset: 44992)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpa_shard_opts_t", file: !1267, line: 11, baseType: !1268)
!1267 = !DIFile(filename: "include/jemalloc/internal/hpa_opts.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "e1a33a4a56f1e144d3404a61859ead58")
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hpa_shard_opts_s", file: !1267, line: 12, size: 320, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1275, !1276, !1277}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "slab_max_alloc", scope: !1268, file: !1267, line: 19, baseType: !387, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "hugification_threshold", scope: !1268, file: !1267, line: 25, baseType: !387, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_mult", scope: !1268, file: !1267, line: 31, baseType: !1273, size: 32, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "fxp_t", file: !1274, line: 23, baseType: !455)
!1274 = !DIFile(filename: "include/jemalloc/internal/fxp.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "1f72cf9a1fa1e722da228477653e0fd3")
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "deferral_allowed", scope: !1268, file: !1267, line: 39, baseType: !389, size: 8, offset: 160)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "hugify_delay_ms", scope: !1268, file: !1267, line: 45, baseType: !408, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "min_purge_interval_ms", scope: !1268, file: !1267, line: 50, baseType: !408, size: 64, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "npending_purge", scope: !1186, file: !896, line: 132, baseType: !387, size: 64, offset: 45312)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1186, file: !896, line: 138, baseType: !1280, size: 256, offset: 45376)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "hpa_shard_nonderived_stats_t", file: !896, line: 41, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hpa_shard_nonderived_stats_s", file: !896, line: 42, size: 256, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "npurge_passes", scope: !1281, file: !896, line: 48, baseType: !408, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "npurges", scope: !1281, file: !896, line: 56, baseType: !408, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "nhugifies", scope: !1281, file: !896, line: 63, baseType: !408, size: 64, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ndehugifies", scope: !1281, file: !896, line: 69, baseType: !408, size: 64, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "last_purge", scope: !1186, file: !896, line: 143, baseType: !446, size: 64, offset: 45632)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "edata_cache", scope: !887, file: !631, line: 107, baseType: !1092, size: 1152, offset: 544768)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "ind", scope: !887, file: !631, line: 109, baseType: !7, size: 32, offset: 545920)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "stats_mtx", scope: !887, file: !631, line: 111, baseType: !430, size: 64, offset: 545984)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !887, file: !631, line: 112, baseType: !1292, size: 64, offset: 546048)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "emap", scope: !887, file: !631, line: 115, baseType: !1070, size: 64, offset: 546112)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !887, file: !631, line: 118, baseType: !904, size: 64, offset: 546176)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ind", scope: !596, file: !597, line: 83, baseType: !7, size: 32, offset: 631424)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !596, file: !597, line: 90, baseType: !904, size: 64, offset: 631488)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "create_time", scope: !596, file: !597, line: 92, baseType: !446, size: 64, offset: 631552)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bins", scope: !596, file: !597, line: 98, baseType: !1299, offset: 631616)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, elements: !1323)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "bin_t", file: !1301, line: 14, baseType: !1302)
!1301 = !DIFile(filename: "include/jemalloc/internal/bin.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "1555ce3b2d1f4242c5e8f5e8a8530dd2")
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_s", file: !1301, line: 15, size: 1792, elements: !1303)
!1303 = !{!1304, !1305, !1320, !1321, !1322}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1302, file: !1301, line: 17, baseType: !431, size: 896)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1302, file: !1301, line: 23, baseType: !1306, size: 640, offset: 896)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "bin_stats_t", file: !1307, line: 6, baseType: !1308)
!1307 = !DIFile(filename: "include/jemalloc/internal/bin_stats.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "6084e64226164dc89ecbf220d8798196")
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_stats_s", file: !1307, line: 7, size: 640, elements: !1309)
!1309 = !{!1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "nmalloc", scope: !1308, file: !1307, line: 14, baseType: !408, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "ndalloc", scope: !1308, file: !1307, line: 15, baseType: !408, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "nrequests", scope: !1308, file: !1307, line: 22, baseType: !408, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "curregs", scope: !1308, file: !1307, line: 28, baseType: !387, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "nfills", scope: !1308, file: !1307, line: 31, baseType: !408, size: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "nflushes", scope: !1308, file: !1307, line: 34, baseType: !408, size: 64, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "nslabs", scope: !1308, file: !1307, line: 37, baseType: !408, size: 64, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "reslabs", scope: !1308, file: !1307, line: 43, baseType: !408, size: 64, offset: 448)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "curslabs", scope: !1308, file: !1307, line: 46, baseType: !387, size: 64, offset: 512)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "nonfull_slabs", scope: !1308, file: !1307, line: 49, baseType: !387, size: 64, offset: 576)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "slabcur", scope: !1302, file: !1301, line: 31, baseType: !763, size: 64, offset: 1536)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "slabs_nonfull", scope: !1302, file: !1301, line: 38, baseType: !931, size: 128, offset: 1600)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "slabs_full", scope: !1302, file: !1301, line: 41, baseType: !756, size: 64, offset: 1728)
!1323 = !{!1324}
!1324 = !DISubrange(count: 0)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_arena", scope: !398, file: !145, line: 250, baseType: !594, size: 64, offset: 1152)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_arena_decay_ticker", scope: !398, file: !145, line: 250, baseType: !1327, size: 64, offset: 1216)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "ticker_geom_t", file: !1328, line: 116, baseType: !1329)
!1328 = !DIFile(filename: "include/jemalloc/internal/ticker.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "4f08e06764a534efd56d8b453c3ab4c6")
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ticker_geom_s", file: !1328, line: 117, size: 64, elements: !1330)
!1330 = !{!1331, !1334}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !1329, file: !1328, line: 118, baseType: !1332, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !403, line: 26, baseType: !1333)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !405, line: 41, baseType: !390)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "nticks", scope: !1329, file: !1328, line: 119, baseType: !1332, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_sec_shard", scope: !398, file: !145, line: 250, baseType: !730, size: 8, offset: 1280)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_binshards", scope: !398, file: !145, line: 250, baseType: !1337, size: 288, offset: 1288)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "tsd_binshards_t", file: !1338, line: 12, baseType: !1339)
!1338 = !DIFile(filename: "include/jemalloc/internal/bin_types.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "fc7f646211d9805be8d5bf0ceecadef1")
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tsd_binshards_s", file: !1338, line: 13, size: 288, elements: !1340)
!1340 = !{!1341}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "binshard", scope: !1339, file: !1338, line: 14, baseType: !729, size: 288)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_tsd_link", scope: !398, file: !145, line: 250, baseType: !1343, size: 128, offset: 1600)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "tsd_link_t", file: !145, line: 56, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 56, size: 128, elements: !1345)
!1345 = !{!1346, !1348}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "qre_next", scope: !1344, file: !145, line: 56, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "qre_prev", scope: !1344, file: !145, line: 56, baseType: !1347, size: 64, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_in_hook", scope: !398, file: !145, line: 250, baseType: !389, size: 8, offset: 1728)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_peak", scope: !398, file: !145, line: 250, baseType: !1351, size: 128, offset: 1792)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "peak_t", file: !1352, line: 4, baseType: !1353)
!1352 = !DIFile(filename: "include/jemalloc/internal/peak.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "db27d6c5c9d89fe5af71951a95ea7d81")
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "peak_s", file: !1352, line: 5, size: 128, elements: !1354)
!1354 = !{!1355, !1356}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "cur_max", scope: !1353, file: !1352, line: 7, baseType: !408, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "adjustment", scope: !1353, file: !1352, line: 12, baseType: !408, size: 64, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_activity_callback_thunk", scope: !398, file: !145, line: 250, baseType: !1358, size: 128, offset: 1920)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "activity_callback_thunk_t", file: !1359, line: 17, baseType: !1360)
!1359 = !DIFile(filename: "include/jemalloc/internal/activity_callback.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "01371170954e027ec769c2dae37c070c")
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "activity_callback_thunk_s", file: !1359, line: 18, size: 128, elements: !1361)
!1361 = !{!1362, !1367}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1360, file: !1359, line: 19, baseType: !1363, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "activity_callback_t", file: !1359, line: 15, baseType: !1364)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{null, !383, !408, !408}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "uctx", scope: !1360, file: !1359, line: 20, baseType: !383, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_tcache_slow", scope: !398, file: !145, line: 250, baseType: !685, size: 1408, offset: 2048)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_rtree_ctx", scope: !398, file: !145, line: 250, baseType: !1370, size: 3072, offset: 3456)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_ctx_t", file: !1371, line: 52, baseType: !1372)
!1371 = !DIFile(filename: "include/jemalloc/internal/rtree_tsd.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "586ac55129008ada68447c0d458f0dc5")
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_ctx_s", file: !1371, line: 53, size: 3072, elements: !1373)
!1373 = !{!1374, !1388}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1372, file: !1371, line: 55, baseType: !1375, size: 2048)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1376, size: 2048, elements: !1386)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_ctx_cache_elm_t", file: !1371, line: 46, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_ctx_cache_elm_s", file: !1371, line: 47, size: 128, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "leafkey", scope: !1377, file: !1371, line: 48, baseType: !384, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !1377, file: !1371, line: 49, baseType: !1381, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_leaf_elm_t", file: !1371, line: 44, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_leaf_elm_s", file: !1077, line: 61, size: 64, elements: !1384)
!1384 = !{!1385}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "le_bits", scope: !1383, file: !1077, line: 77, baseType: !879, size: 64)
!1386 = !{!1387}
!1387 = !DISubrange(count: 16)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "l2_cache", scope: !1372, file: !1371, line: 57, baseType: !1389, size: 1024, offset: 2048)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1376, size: 1024, elements: !829)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !398, file: !145, line: 255, baseType: !1391, size: 8, offset: 6528)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_u8_t", file: !459, line: 97, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 97, size: 8, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !1392, file: !459, line: 97, baseType: !730, size: 8)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated", scope: !398, file: !145, line: 256, baseType: !408, size: 64, offset: 6592)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_allocated_next_event_fast", scope: !398, file: !145, line: 256, baseType: !408, size: 64, offset: 6656)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated", scope: !398, file: !145, line: 256, baseType: !408, size: 64, offset: 6720)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_thread_deallocated_next_event_fast", scope: !398, file: !145, line: 256, baseType: !408, size: 64, offset: 6784)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_tcache", scope: !398, file: !145, line: 256, baseType: !741, size: 14080, offset: 6848)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "cant_access_tsd_items_directly_use_a_getter_or_setter_witness_tsd", scope: !398, file: !145, line: 257, baseType: !1401, size: 128, offset: 20928)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "witness_tsd_t", file: !19, line: 122, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "witness_tsd_s", file: !19, line: 123, size: 128, elements: !1403)
!1403 = !{!1404, !1409}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "witnesses", scope: !1402, file: !19, line: 124, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "witness_list_t", file: !19, line: 91, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 91, size: 64, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "qlh_first", scope: !1406, file: !19, line: 91, baseType: !524, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "forking", scope: !1402, file: !19, line: 125, baseType: !389, size: 8, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !385, line: 102, baseType: !1411)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !405, line: 73, baseType: !386)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !385, line: 101, baseType: !1413)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !405, line: 72, baseType: !497)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !403, line: 27, baseType: !1415)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !405, line: 44, baseType: !497)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "witness_tsdn_t", file: !19, line: 134, baseType: !1418)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "witness_tsdn_s", file: !19, line: 135, size: 128, elements: !1419)
!1419 = !{!1420}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "witness_tsd", scope: !1418, file: !19, line: 136, baseType: !1401, size: 128)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "malloc_cpuid_t", file: !6, line: 7, baseType: !390)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1425, line: 267, baseType: !1426)
!1425 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "ed37c2e6f30ba31a8b41e4d70547c39c")
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !405, line: 207, baseType: !497)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "cache_bin_sz_t", file: !697, line: 21, baseType: !719)
!1428 = !{!0, !1429, !1431, !1433, !1438, !1440, !1442, !1444, !1446, !1448, !1451, !1453, !1455, !1460, !1462, !1467, !1469, !1471, !1473, !1475, !1477, !1479, !1481, !1483, !1485, !1487, !1489, !1492, !1494, !1499, !1504, !1546, !1551, !1566, !1571, !1574, !1579, !1581, !1583, !1597, !1602, !1604, !1609, !1621, !1623, !1625, !1627, !1630, !1637, !1642, !1644, !1649, !1661, !1666, !1668, !1670, !1681, !1683, !1685, !1687, !1701, !1706, !1708, !1710, !1712, !1722, !1724, !1726, !1728, !1749, !1751, !1753, !1755, !1757, !1759, !1761, !1792, !1794, !1796, !1798, !1808, !1810, !1812, !1814, !1829, !1831, !1833, !1835, !1844, !1846, !1848, !1854, !1856, !1858, !1868, !1870, !1872, !1874, !1887, !1889, !1891, !1893, !1898, !1909, !1914, !1916, !1918, !1920, !1936, !1941, !1943, !1945, !1950, !1978, !1983, !1985, !1987, !1995, !1997, !1999, !2001, !2050, !2055, !2057, !2059, !2061, !2063, !2065, !2070, !2072, !2074, !2076, !2079, !2081, !2083, !2088, !2090, !2095, !2100, !2105, !2108, !2110, !2115, !2120, !2122, !2127, !2353, !2355, !2358, !2363, !2365, !2367, !2372, !2377, !2382, !2384, !2386, !2389, !2391, !2394, !2396, !2398, !2400, !2402, !2407, !2409, !2411, !2413, !2416, !2418, !2420, !2422, !2424, !2426, !2428, !2430, !2432, !2434, !2439, !2441, !2443, !2445, !2447, !2449, !2451, !2453, !2455, !2457, !2459, !2461, !2463, !2465, !2467, !2469, !2474, !2476, !2478, !2480, !2483, !2485, !2487, !2489, !2491, !2493, !2495, !2497, !2499, !2501, !2503, !2505, !2507, !2511, !2513, !2515, !2520, !2525, !2530, !2532, !2534, !2536, !2541, !2546, !2548, !2552, !2557, !2560, !2570, !2573, !2591, !2601, !2607, !2616, !2621, !2626, !2628, !2631, !2636, !2641, !2646}
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "opt_abort_conf", scope: !2, file: !3, line: 68, type: !389, isLocal: false, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "opt_confirm_conf", scope: !2, file: !3, line: 76, type: !389, isLocal: false, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(scope: null, file: !3, line: 81, type: !1435, isLocal: true, isDefinition: true)
!1435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 48, elements: !1436)
!1436 = !{!1437}
!1437 = !DISubrange(count: 6)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "opt_junk", scope: !2, file: !3, line: 77, type: !508, isLocal: false, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "opt_junk_alloc", scope: !2, file: !3, line: 84, type: !389, isLocal: false, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "opt_junk_free", scope: !2, file: !3, line: 91, type: !389, isLocal: false, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "opt_trust_madvise", scope: !2, file: !3, line: 98, type: !389, isLocal: false, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "opt_cache_oblivious", scope: !2, file: !3, line: 106, type: !389, isLocal: false, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "opt_zero_realloc_action", scope: !2, file: !3, line: 114, type: !1450, isLocal: false, isDefinition: true)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "zero_realloc_action_t", file: !6, line: 18, baseType: !5)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "zero_realloc_count", scope: !2, file: !3, line: 122, type: !619, isLocal: false, isDefinition: true)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(scope: null, file: !3, line: 125, type: !1435, isLocal: true, isDefinition: true)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(scope: null, file: !3, line: 126, type: !1457, isLocal: true, isDefinition: true)
!1457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 40, elements: !1458)
!1458 = !{!1459}
!1459 = !DISubrange(count: 5)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(scope: null, file: !3, line: 127, type: !1435, isLocal: true, isDefinition: true)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "zero_realloc_mode_names", scope: !2, file: !3, line: 124, type: !1464, isLocal: false, isDefinition: true)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !508, size: 192, elements: !1465)
!1465 = !{!1466}
!1466 = !DISubrange(count: 3)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "junk_alloc_callback", scope: !2, file: !3, line: 145, type: !957, isLocal: false, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "junk_free_callback", scope: !2, file: !3, line: 146, type: !957, isLocal: false, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "opt_utrace", scope: !2, file: !3, line: 148, type: !389, isLocal: false, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "opt_xmalloc", scope: !2, file: !3, line: 149, type: !389, isLocal: false, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "opt_experimental_infallible_new", scope: !2, file: !3, line: 150, type: !389, isLocal: false, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "opt_zero", scope: !2, file: !3, line: 151, type: !389, isLocal: false, isDefinition: true)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "opt_narenas", scope: !2, file: !3, line: 152, type: !7, isLocal: false, isDefinition: true)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "opt_narenas_ratio", scope: !2, file: !3, line: 153, type: !1273, isLocal: false, isDefinition: true)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "opt_hpa", scope: !2, file: !3, line: 161, type: !389, isLocal: false, isDefinition: true)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "opt_hpa_opts", scope: !2, file: !3, line: 162, type: !1266, isLocal: false, isDefinition: true)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "opt_hpa_sec_opts", scope: !2, file: !3, line: 163, type: !1157, isLocal: false, isDefinition: true)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "malloc_init_state", scope: !2, file: !3, line: 183, type: !1491, isLocal: false, isDefinition: true)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "malloc_init_t", file: !6, line: 29, baseType: !12)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "malloc_slow", scope: !2, file: !3, line: 186, type: !389, isLocal: false, isDefinition: true)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2716, type: !1496, isLocal: true, isDefinition: true)
!1496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 368, elements: !1497)
!1497 = !{!1498}
!1498 = !DISubrange(count: 46)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2732, type: !1501, isLocal: true, isDefinition: true)
!1501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 136, elements: !1502)
!1502 = !{!1503}
!1503 = !DISubrange(count: 17)
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "log_var", scope: !1506, file: !3, line: 2732, type: !1540, isLocal: true, isDefinition: true)
!1506 = distinct !DISubprogram(name: "malloc_default", scope: !3, file: !3, line: 2700, type: !954, scopeLine: 2700, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1507)
!1507 = !{!1508, !1509, !1510, !1524, !1536}
!1508 = !DILocalVariable(name: "size", arg: 1, scope: !1506, file: !3, line: 2700, type: !387)
!1509 = !DILocalVariable(name: "ret", scope: !1506, file: !3, line: 2701, type: !383)
!1510 = !DILocalVariable(name: "sopts", scope: !1506, file: !3, line: 2702, type: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "static_opts_t", file: !3, line: 2195, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "static_opts_s", file: !3, line: 2196, size: 320, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "may_overflow", scope: !1512, file: !3, line: 2198, baseType: !389, size: 8)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "bump_empty_aligned_alloc", scope: !1512, file: !3, line: 2204, baseType: !389, size: 8, offset: 8)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "assert_nonempty_alloc", scope: !1512, file: !3, line: 2209, baseType: !389, size: 8, offset: 16)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "null_out_result_on_error", scope: !1512, file: !3, line: 2215, baseType: !389, size: 8, offset: 24)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "set_errno_on_error", scope: !1512, file: !3, line: 2217, baseType: !389, size: 8, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "min_alignment", scope: !1512, file: !3, line: 2222, baseType: !387, size: 64, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "oom_string", scope: !1512, file: !3, line: 2225, baseType: !508, size: 64, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_alignment_string", scope: !1512, file: !3, line: 2227, baseType: !508, size: 64, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "slow", scope: !1512, file: !3, line: 2236, baseType: !389, size: 8, offset: 256)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "usize", scope: !1512, file: !3, line: 2240, baseType: !389, size: 8, offset: 264)
!1524 = !DILocalVariable(name: "dopts", scope: !1506, file: !3, line: 2703, type: !1525)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "dynamic_opts_t", file: !3, line: 2266, baseType: !1526)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dynamic_opts_s", file: !3, line: 2267, size: 448, elements: !1527)
!1527 = !{!1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1526, file: !3, line: 2268, baseType: !712, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "usize", scope: !1526, file: !3, line: 2269, baseType: !387, size: 64, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "num_items", scope: !1526, file: !3, line: 2270, baseType: !387, size: 64, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "item_size", scope: !1526, file: !3, line: 2271, baseType: !387, size: 64, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1526, file: !3, line: 2272, baseType: !387, size: 64, offset: 256)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1526, file: !3, line: 2273, baseType: !389, size: 8, offset: 320)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "tcache_ind", scope: !1526, file: !3, line: 2274, baseType: !7, size: 32, offset: 352)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "arena_ind", scope: !1526, file: !3, line: 2275, baseType: !7, size: 32, offset: 384)
!1536 = !DILocalVariable(name: "args", scope: !1537, file: !3, line: 2728, type: !1539)
!1537 = distinct !DILexicalBlock(scope: !1538, file: !3, line: 2727, column: 18)
!1538 = distinct !DILexicalBlock(scope: !1506, file: !3, line: 2727, column: 6)
!1539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 192, elements: !1465)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_var_t", file: !1541, line: 41, baseType: !1542)
!1541 = !DIFile(filename: "include/jemalloc/internal/log.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "71d5fca0af237f60131798f99fbcf0be")
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_var_s", file: !1541, line: 42, size: 128, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1542, file: !1541, line: 47, baseType: !601, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1542, file: !1541, line: 48, baseType: !508, size: 64, offset: 64)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2756, type: !1548, isLocal: true, isDefinition: true)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 208, elements: !1549)
!1549 = !{!1550}
!1550 = !DISubrange(count: 26)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "log_var", scope: !1553, file: !3, line: 2756, type: !1540, isLocal: true, isDefinition: true)
!1553 = distinct !DISubprogram(name: "je_posix_memalign", scope: !3, file: !3, line: 2751, type: !1554, scopeLine: 2751, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1556)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!390, !712, !387, !387}
!1556 = !{!1557, !1558, !1559, !1560, !1561, !1562, !1563}
!1557 = !DILocalVariable(name: "memptr", arg: 1, scope: !1553, file: !3, line: 2751, type: !712)
!1558 = !DILocalVariable(name: "alignment", arg: 2, scope: !1553, file: !3, line: 2751, type: !387)
!1559 = !DILocalVariable(name: "size", arg: 3, scope: !1553, file: !3, line: 2751, type: !387)
!1560 = !DILocalVariable(name: "ret", scope: !1553, file: !3, line: 2752, type: !390)
!1561 = !DILocalVariable(name: "sopts", scope: !1553, file: !3, line: 2753, type: !1511)
!1562 = !DILocalVariable(name: "dopts", scope: !1553, file: !3, line: 2754, type: !1525)
!1563 = !DILocalVariable(name: "args", scope: !1564, file: !3, line: 2776, type: !1539)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !3, line: 2775, column: 18)
!1565 = distinct !DILexicalBlock(scope: !1553, file: !3, line: 2775, column: 6)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2765, type: !1568, isLocal: true, isDefinition: true)
!1568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 480, elements: !1569)
!1569 = !{!1570}
!1570 = !DISubrange(count: 60)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2767, type: !1573, isLocal: true, isDefinition: true)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 512, elements: !1212)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2782, type: !1576, isLocal: true, isDefinition: true)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 200, elements: !1577)
!1577 = !{!1578}
!1578 = !DISubrange(count: 25)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "log_var", scope: !1553, file: !3, line: 2782, type: !1540, isLocal: true, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2797, type: !1576, isLocal: true, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "log_var", scope: !1585, file: !3, line: 2797, type: !1540, isLocal: true, isDefinition: true)
!1585 = distinct !DISubprogram(name: "je_aligned_alloc", scope: !3, file: !3, line: 2791, type: !1586, scopeLine: 2791, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1588)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!383, !387, !387}
!1588 = !{!1589, !1590, !1591, !1592, !1593, !1594}
!1589 = !DILocalVariable(name: "alignment", arg: 1, scope: !1585, file: !3, line: 2791, type: !387)
!1590 = !DILocalVariable(name: "size", arg: 2, scope: !1585, file: !3, line: 2791, type: !387)
!1591 = !DILocalVariable(name: "ret", scope: !1585, file: !3, line: 2792, type: !383)
!1592 = !DILocalVariable(name: "sopts", scope: !1585, file: !3, line: 2794, type: !1511)
!1593 = !DILocalVariable(name: "dopts", scope: !1585, file: !3, line: 2795, type: !1525)
!1594 = !DILocalVariable(name: "args", scope: !1595, file: !3, line: 2819, type: !1539)
!1595 = distinct !DILexicalBlock(scope: !1596, file: !3, line: 2818, column: 18)
!1596 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 2818, column: 6)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2824, type: !1599, isLocal: true, isDefinition: true)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 192, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 24)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "log_var", scope: !1585, file: !3, line: 2824, type: !1540, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2837, type: !1606, isLocal: true, isDefinition: true)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 144, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 18)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "log_var", scope: !1611, file: !3, line: 2837, type: !1540, isLocal: true, isDefinition: true)
!1611 = distinct !DISubprogram(name: "je_calloc", scope: !3, file: !3, line: 2832, type: !1586, scopeLine: 2832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1618}
!1613 = !DILocalVariable(name: "num", arg: 1, scope: !1611, file: !3, line: 2832, type: !387)
!1614 = !DILocalVariable(name: "size", arg: 2, scope: !1611, file: !3, line: 2832, type: !387)
!1615 = !DILocalVariable(name: "ret", scope: !1611, file: !3, line: 2833, type: !383)
!1616 = !DILocalVariable(name: "sopts", scope: !1611, file: !3, line: 2834, type: !1511)
!1617 = !DILocalVariable(name: "dopts", scope: !1611, file: !3, line: 2835, type: !1525)
!1618 = !DILocalVariable(name: "args", scope: !1619, file: !3, line: 2854, type: !1539)
!1619 = distinct !DILexicalBlock(scope: !1620, file: !3, line: 2853, column: 18)
!1620 = distinct !DILexicalBlock(scope: !1611, file: !3, line: 2853, column: 6)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2845, type: !1496, isLocal: true, isDefinition: true)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2858, type: !1501, isLocal: true, isDefinition: true)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "log_var", scope: !1611, file: !3, line: 2858, type: !1540, isLocal: true, isDefinition: true)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3159, type: !1629, isLocal: true, isDefinition: true)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 128, elements: !1386)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "log_var", scope: !1632, file: !3, line: 3159, type: !1540, isLocal: true, isDefinition: true)
!1632 = distinct !DISubprogram(name: "je_free", scope: !3, file: !3, line: 3158, type: !1633, scopeLine: 3158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1635)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{null, !383}
!1635 = !{!1636}
!1636 = !DILocalVariable(name: "ptr", arg: 1, scope: !1632, file: !3, line: 3158, type: !383)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3165, type: !1639, isLocal: true, isDefinition: true)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 120, elements: !1640)
!1640 = !{!1641}
!1641 = !DISubrange(count: 15)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "log_var", scope: !1632, file: !3, line: 3165, type: !1540, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3185, type: !1646, isLocal: true, isDefinition: true)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 160, elements: !1647)
!1647 = !{!1648}
!1648 = !DISubrange(count: 20)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "log_var", scope: !1651, file: !3, line: 3185, type: !1540, isLocal: true, isDefinition: true)
!1651 = distinct !DISubprogram(name: "je_memalign", scope: !3, file: !3, line: 3180, type: !1586, scopeLine: 3180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1652)
!1652 = !{!1653, !1654, !1655, !1656, !1657, !1658}
!1653 = !DILocalVariable(name: "alignment", arg: 1, scope: !1651, file: !3, line: 3180, type: !387)
!1654 = !DILocalVariable(name: "size", arg: 2, scope: !1651, file: !3, line: 3180, type: !387)
!1655 = !DILocalVariable(name: "ret", scope: !1651, file: !3, line: 3181, type: !383)
!1656 = !DILocalVariable(name: "sopts", scope: !1651, file: !3, line: 3182, type: !1511)
!1657 = !DILocalVariable(name: "dopts", scope: !1651, file: !3, line: 3183, type: !1525)
!1658 = !DILocalVariable(name: "args", scope: !1659, file: !3, line: 3205, type: !1539)
!1659 = distinct !DILexicalBlock(scope: !1660, file: !3, line: 3204, column: 18)
!1660 = distinct !DILexicalBlock(scope: !1651, file: !3, line: 3204, column: 6)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3210, type: !1663, isLocal: true, isDefinition: true)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 152, elements: !1664)
!1664 = !{!1665}
!1665 = !DISubrange(count: 19)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "log_var", scope: !1651, file: !3, line: 3210, type: !1540, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3225, type: !1606, isLocal: true, isDefinition: true)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "log_var", scope: !1672, file: !3, line: 3225, type: !1540, isLocal: true, isDefinition: true)
!1672 = distinct !DISubprogram(name: "je_valloc", scope: !3, file: !3, line: 3219, type: !954, scopeLine: 3219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1673)
!1673 = !{!1674, !1675, !1676, !1677, !1678}
!1674 = !DILocalVariable(name: "size", arg: 1, scope: !1672, file: !3, line: 3219, type: !387)
!1675 = !DILocalVariable(name: "ret", scope: !1672, file: !3, line: 3220, type: !383)
!1676 = !DILocalVariable(name: "sopts", scope: !1672, file: !3, line: 3222, type: !1511)
!1677 = !DILocalVariable(name: "dopts", scope: !1672, file: !3, line: 3223, type: !1525)
!1678 = !DILocalVariable(name: "args", scope: !1679, file: !3, line: 3244, type: !1539)
!1679 = distinct !DILexicalBlock(scope: !1680, file: !3, line: 3243, column: 18)
!1680 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 3243, column: 6)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3248, type: !1501, isLocal: true, isDefinition: true)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "log_var", scope: !1672, file: !3, line: 3248, type: !1540, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3405, type: !1663, isLocal: true, isDefinition: true)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "log_var", scope: !1689, file: !3, line: 3405, type: !1540, isLocal: true, isDefinition: true)
!1689 = distinct !DISubprogram(name: "je_mallocx", scope: !3, file: !3, line: 3400, type: !1690, scopeLine: 3400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1692)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!383, !387, !390}
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1698}
!1693 = !DILocalVariable(name: "size", arg: 1, scope: !1689, file: !3, line: 3400, type: !387)
!1694 = !DILocalVariable(name: "flags", arg: 2, scope: !1689, file: !3, line: 3400, type: !390)
!1695 = !DILocalVariable(name: "ret", scope: !1689, file: !3, line: 3401, type: !383)
!1696 = !DILocalVariable(name: "sopts", scope: !1689, file: !3, line: 3402, type: !1511)
!1697 = !DILocalVariable(name: "dopts", scope: !1689, file: !3, line: 3403, type: !1525)
!1698 = !DILocalVariable(name: "args", scope: !1699, file: !3, line: 3426, type: !1539)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !3, line: 3425, column: 18)
!1700 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 3425, column: 6)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3412, type: !1703, isLocal: true, isDefinition: true)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 376, elements: !1704)
!1704 = !{!1705}
!1705 = !DISubrange(count: 47)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3431, type: !1606, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "log_var", scope: !1689, file: !3, line: 3431, type: !1540, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3574, type: !1663, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "log_var", scope: !1714, file: !3, line: 3574, type: !1540, isLocal: true, isDefinition: true)
!1714 = distinct !DISubprogram(name: "je_rallocx", scope: !3, file: !3, line: 3573, type: !1715, scopeLine: 3573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1717)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!383, !383, !387, !390}
!1717 = !{!1718, !1719, !1720, !1721}
!1718 = !DILocalVariable(name: "ptr", arg: 1, scope: !1714, file: !3, line: 3573, type: !383)
!1719 = !DILocalVariable(name: "size", arg: 2, scope: !1714, file: !3, line: 3573, type: !387)
!1720 = !DILocalVariable(name: "flags", arg: 3, scope: !1714, file: !3, line: 3573, type: !390)
!1721 = !DILocalVariable(name: "ret", scope: !1714, file: !3, line: 3576, type: !383)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3577, type: !1606, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "log_var", scope: !1714, file: !3, line: 3577, type: !1540, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3624, type: !1663, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "log_var", scope: !1730, file: !3, line: 3624, type: !1540, isLocal: true, isDefinition: true)
!1730 = distinct !DISubprogram(name: "je_realloc", scope: !3, file: !3, line: 3623, type: !1731, scopeLine: 3623, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1733)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!383, !383, !387}
!1733 = !{!1734, !1735, !1736, !1739, !1742, !1744, !1745, !1746}
!1734 = !DILocalVariable(name: "ptr", arg: 1, scope: !1730, file: !3, line: 3623, type: !383)
!1735 = !DILocalVariable(name: "size", arg: 2, scope: !1730, file: !3, line: 3623, type: !387)
!1736 = !DILocalVariable(name: "ret", scope: !1737, file: !3, line: 3627, type: !383)
!1737 = distinct !DILexicalBlock(scope: !1738, file: !3, line: 3626, column: 40)
!1738 = distinct !DILexicalBlock(scope: !1730, file: !3, line: 3626, column: 6)
!1739 = !DILocalVariable(name: "ret", scope: !1740, file: !3, line: 3631, type: !383)
!1740 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 3630, column: 39)
!1741 = distinct !DILexicalBlock(scope: !1738, file: !3, line: 3630, column: 13)
!1742 = !DILocalVariable(name: "ret", scope: !1743, file: !3, line: 3636, type: !383)
!1743 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 3634, column: 9)
!1744 = !DILocalVariable(name: "sopts", scope: !1743, file: !3, line: 3638, type: !1511)
!1745 = !DILocalVariable(name: "dopts", scope: !1743, file: !3, line: 3639, type: !1525)
!1746 = !DILocalVariable(name: "args", scope: !1747, file: !3, line: 3655, type: !1539)
!1747 = distinct !DILexicalBlock(scope: !1748, file: !3, line: 3654, column: 19)
!1748 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 3654, column: 7)
!1749 = !DIGlobalVariableExpression(var: !1750, expr: !DIExpression())
!1750 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3628, type: !1606, isLocal: true, isDefinition: true)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "log_var", scope: !1730, file: !3, line: 3628, type: !1540, isLocal: true, isDefinition: true)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "log_var", scope: !1730, file: !3, line: 3632, type: !1540, isLocal: true, isDefinition: true)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3647, type: !1703, isLocal: true, isDefinition: true)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "log_var", scope: !1730, file: !3, line: 3659, type: !1540, isLocal: true, isDefinition: true)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3759, type: !1663, isLocal: true, isDefinition: true)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "log_var", scope: !1763, file: !3, line: 3759, type: !1540, isLocal: true, isDefinition: true)
!1763 = distinct !DISubprogram(name: "je_xallocx", scope: !3, file: !3, line: 3753, type: !1764, scopeLine: 3753, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1766)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!387, !383, !387, !387, !390}
!1766 = !{!1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1783, !1786, !1787, !1788}
!1767 = !DILocalVariable(name: "ptr", arg: 1, scope: !1763, file: !3, line: 3753, type: !383)
!1768 = !DILocalVariable(name: "size", arg: 2, scope: !1763, file: !3, line: 3753, type: !387)
!1769 = !DILocalVariable(name: "extra", arg: 3, scope: !1763, file: !3, line: 3753, type: !387)
!1770 = !DILocalVariable(name: "flags", arg: 4, scope: !1763, file: !3, line: 3753, type: !390)
!1771 = !DILocalVariable(name: "tsd", scope: !1763, file: !3, line: 3754, type: !1347)
!1772 = !DILocalVariable(name: "usize", scope: !1763, file: !3, line: 3755, type: !387)
!1773 = !DILocalVariable(name: "old_usize", scope: !1763, file: !3, line: 3755, type: !387)
!1774 = !DILocalVariable(name: "alignment", scope: !1763, file: !3, line: 3756, type: !387)
!1775 = !DILocalVariable(name: "zero", scope: !1763, file: !3, line: 3757, type: !389)
!1776 = !DILocalVariable(name: "old_edata", scope: !1763, file: !3, line: 3774, type: !763)
!1777 = !DILocalVariable(name: "alloc_ctx", scope: !1763, file: !3, line: 3777, type: !1778)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "emap_alloc_ctx_t", file: !1072, line: 22, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emap_alloc_ctx_t", file: !1072, line: 23, size: 64, elements: !1780)
!1780 = !{!1781, !1782}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "szind", scope: !1779, file: !1072, line: 24, baseType: !726, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !1779, file: !1072, line: 25, baseType: !389, size: 8, offset: 32)
!1783 = !DILocalVariable(name: "excess_len", scope: !1784, file: !3, line: 3823, type: !387)
!1784 = distinct !DILexicalBlock(scope: !1785, file: !3, line: 3822, column: 13)
!1785 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3821, column: 6)
!1786 = !DILocalVariable(name: "excess_start", scope: !1784, file: !3, line: 3824, type: !383)
!1787 = !DILabel(scope: !1763, name: "label_not_resized", file: !3, line: 3827)
!1788 = !DILocalVariable(name: "args", scope: !1789, file: !3, line: 3829, type: !1791)
!1789 = distinct !DILexicalBlock(scope: !1790, file: !3, line: 3828, column: 32)
!1790 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3828, column: 6)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 256, elements: !1028)
!1792 = !DIGlobalVariableExpression(var: !1793, expr: !DIExpression())
!1793 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3837, type: !1606, isLocal: true, isDefinition: true)
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression())
!1795 = distinct !DIGlobalVariable(name: "log_var", scope: !1763, file: !3, line: 3837, type: !1540, isLocal: true, isDefinition: true)
!1796 = !DIGlobalVariableExpression(var: !1797, expr: !DIExpression())
!1797 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3847, type: !1663, isLocal: true, isDefinition: true)
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "log_var", scope: !1800, file: !3, line: 3847, type: !1540, isLocal: true, isDefinition: true)
!1800 = distinct !DISubprogram(name: "je_sallocx", scope: !3, file: !3, line: 3843, type: !1801, scopeLine: 3843, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1803)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!387, !554, !390}
!1803 = !{!1804, !1805, !1806, !1807}
!1804 = !DILocalVariable(name: "ptr", arg: 1, scope: !1800, file: !3, line: 3843, type: !554)
!1805 = !DILocalVariable(name: "flags", arg: 2, scope: !1800, file: !3, line: 3843, type: !390)
!1806 = !DILocalVariable(name: "usize", scope: !1800, file: !3, line: 3844, type: !387)
!1807 = !DILocalVariable(name: "tsdn", scope: !1800, file: !3, line: 3845, type: !391)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3864, type: !1606, isLocal: true, isDefinition: true)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "log_var", scope: !1800, file: !3, line: 3864, type: !1540, isLocal: true, isDefinition: true)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3870, type: !1663, isLocal: true, isDefinition: true)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "log_var", scope: !1816, file: !3, line: 3870, type: !1540, isLocal: true, isDefinition: true)
!1816 = distinct !DISubprogram(name: "je_dallocx", scope: !3, file: !3, line: 3869, type: !1817, scopeLine: 3869, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1819)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{null, !383, !390}
!1819 = !{!1820, !1821, !1822, !1823, !1824, !1825, !1826}
!1820 = !DILocalVariable(name: "ptr", arg: 1, scope: !1816, file: !3, line: 3869, type: !383)
!1821 = !DILocalVariable(name: "flags", arg: 2, scope: !1816, file: !3, line: 3869, type: !390)
!1822 = !DILocalVariable(name: "tsd", scope: !1816, file: !3, line: 3875, type: !1347)
!1823 = !DILocalVariable(name: "fast", scope: !1816, file: !3, line: 3876, type: !389)
!1824 = !DILocalVariable(name: "tcache_ind", scope: !1816, file: !3, line: 3879, type: !7)
!1825 = !DILocalVariable(name: "tcache", scope: !1816, file: !3, line: 3880, type: !740)
!1826 = !DILocalVariable(name: "args_raw", scope: !1827, file: !3, line: 3888, type: !1539)
!1827 = distinct !DILexicalBlock(scope: !1828, file: !3, line: 3887, column: 9)
!1828 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 3884, column: 6)
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3894, type: !1606, isLocal: true, isDefinition: true)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "log_var", scope: !1816, file: !3, line: 3894, type: !1540, isLocal: true, isDefinition: true)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3935, type: !1646, isLocal: true, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "log_var", scope: !1837, file: !3, line: 3935, type: !1540, isLocal: true, isDefinition: true)
!1837 = distinct !DISubprogram(name: "je_sdallocx", scope: !3, file: !3, line: 3934, type: !1838, scopeLine: 3934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1840)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{null, !383, !387, !390}
!1840 = !{!1841, !1842, !1843}
!1841 = !DILocalVariable(name: "ptr", arg: 1, scope: !1837, file: !3, line: 3934, type: !383)
!1842 = !DILocalVariable(name: "size", arg: 2, scope: !1837, file: !3, line: 3934, type: !387)
!1843 = !DILocalVariable(name: "flags", arg: 3, scope: !1837, file: !3, line: 3934, type: !390)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3942, type: !1663, isLocal: true, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "log_var", scope: !1837, file: !3, line: 3942, type: !1540, isLocal: true, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "log_var", scope: !1850, file: !3, line: 3947, type: !1540, isLocal: true, isDefinition: true)
!1850 = distinct !DISubprogram(name: "je_sdallocx_noflags", scope: !3, file: !3, line: 3946, type: !958, scopeLine: 3946, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1851)
!1851 = !{!1852, !1853}
!1852 = !DILocalVariable(name: "ptr", arg: 1, scope: !1850, file: !3, line: 3946, type: !383)
!1853 = !DILocalVariable(name: "size", arg: 2, scope: !1850, file: !3, line: 3946, type: !387)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "log_var", scope: !1850, file: !3, line: 3954, type: !1540, isLocal: true, isDefinition: true)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3966, type: !1606, isLocal: true, isDefinition: true)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "log_var", scope: !1860, file: !3, line: 3966, type: !1540, isLocal: true, isDefinition: true)
!1860 = distinct !DISubprogram(name: "je_nallocx", scope: !3, file: !3, line: 3959, type: !1861, scopeLine: 3959, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1863)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!387, !387, !390}
!1863 = !{!1864, !1865, !1866, !1867}
!1864 = !DILocalVariable(name: "size", arg: 1, scope: !1860, file: !3, line: 3959, type: !387)
!1865 = !DILocalVariable(name: "flags", arg: 2, scope: !1860, file: !3, line: 3959, type: !390)
!1866 = !DILocalVariable(name: "usize", scope: !1860, file: !3, line: 3960, type: !387)
!1867 = !DILocalVariable(name: "tsdn", scope: !1860, file: !3, line: 3961, type: !391)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "log_var", scope: !1860, file: !3, line: 3975, type: !1540, isLocal: true, isDefinition: true)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "log_var", scope: !1860, file: !3, line: 3980, type: !1540, isLocal: true, isDefinition: true)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3990, type: !1663, isLocal: true, isDefinition: true)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "log_var", scope: !1876, file: !3, line: 3990, type: !1540, isLocal: true, isDefinition: true)
!1876 = distinct !DISubprogram(name: "je_mallctl", scope: !3, file: !3, line: 3985, type: !1877, scopeLine: 3986, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1879)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!390, !508, !383, !556, !383, !387}
!1879 = !{!1880, !1881, !1882, !1883, !1884, !1885, !1886}
!1880 = !DILocalVariable(name: "name", arg: 1, scope: !1876, file: !3, line: 3985, type: !508)
!1881 = !DILocalVariable(name: "oldp", arg: 2, scope: !1876, file: !3, line: 3985, type: !383)
!1882 = !DILocalVariable(name: "oldlenp", arg: 3, scope: !1876, file: !3, line: 3985, type: !556)
!1883 = !DILocalVariable(name: "newp", arg: 4, scope: !1876, file: !3, line: 3985, type: !383)
!1884 = !DILocalVariable(name: "newlen", arg: 5, scope: !1876, file: !3, line: 3986, type: !387)
!1885 = !DILocalVariable(name: "ret", scope: !1876, file: !3, line: 3987, type: !390)
!1886 = !DILocalVariable(name: "tsd", scope: !1876, file: !3, line: 3988, type: !1347)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3993, type: !1606, isLocal: true, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "log_var", scope: !1876, file: !3, line: 3993, type: !1540, isLocal: true, isDefinition: true)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "log_var", scope: !1876, file: !3, line: 4002, type: !1540, isLocal: true, isDefinition: true)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4010, type: !1895, isLocal: true, isDefinition: true)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !1896)
!1896 = !{!1897}
!1897 = !DISubrange(count: 28)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "log_var", scope: !1900, file: !3, line: 4010, type: !1540, isLocal: true, isDefinition: true)
!1900 = distinct !DISubprogram(name: "je_mallctlnametomib", scope: !3, file: !3, line: 4007, type: !1901, scopeLine: 4007, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1903)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!390, !508, !556, !556}
!1903 = !{!1904, !1905, !1906, !1907, !1908}
!1904 = !DILocalVariable(name: "name", arg: 1, scope: !1900, file: !3, line: 4007, type: !508)
!1905 = !DILocalVariable(name: "mibp", arg: 2, scope: !1900, file: !3, line: 4007, type: !556)
!1906 = !DILocalVariable(name: "miblenp", arg: 3, scope: !1900, file: !3, line: 4007, type: !556)
!1907 = !DILocalVariable(name: "ret", scope: !1900, file: !3, line: 4008, type: !390)
!1908 = !DILocalVariable(name: "tsd", scope: !1900, file: !3, line: 4017, type: !1347)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4013, type: !1911, isLocal: true, isDefinition: true)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 216, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 27)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "log_var", scope: !1900, file: !3, line: 4013, type: !1540, isLocal: true, isDefinition: true)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "log_var", scope: !1900, file: !3, line: 4022, type: !1540, isLocal: true, isDefinition: true)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4032, type: !1599, isLocal: true, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "log_var", scope: !1922, file: !3, line: 4032, type: !1540, isLocal: true, isDefinition: true)
!1922 = distinct !DISubprogram(name: "je_mallctlbymib", scope: !3, file: !3, line: 4027, type: !1923, scopeLine: 4028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1927)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!390, !1925, !387, !383, !556, !383, !387}
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !387)
!1927 = !{!1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935}
!1928 = !DILocalVariable(name: "mib", arg: 1, scope: !1922, file: !3, line: 4027, type: !1925)
!1929 = !DILocalVariable(name: "miblen", arg: 2, scope: !1922, file: !3, line: 4027, type: !387)
!1930 = !DILocalVariable(name: "oldp", arg: 3, scope: !1922, file: !3, line: 4027, type: !383)
!1931 = !DILocalVariable(name: "oldlenp", arg: 4, scope: !1922, file: !3, line: 4027, type: !556)
!1932 = !DILocalVariable(name: "newp", arg: 5, scope: !1922, file: !3, line: 4028, type: !383)
!1933 = !DILocalVariable(name: "newlen", arg: 6, scope: !1922, file: !3, line: 4028, type: !387)
!1934 = !DILocalVariable(name: "ret", scope: !1922, file: !3, line: 4029, type: !390)
!1935 = !DILocalVariable(name: "tsd", scope: !1922, file: !3, line: 4030, type: !1347)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4035, type: !1938, isLocal: true, isDefinition: true)
!1938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 184, elements: !1939)
!1939 = !{!1940}
!1940 = !DISubrange(count: 23)
!1941 = !DIGlobalVariableExpression(var: !1942, expr: !DIExpression())
!1942 = distinct !DIGlobalVariable(name: "log_var", scope: !1922, file: !3, line: 4035, type: !1540, isLocal: true, isDefinition: true)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "log_var", scope: !1922, file: !3, line: 4043, type: !1540, isLocal: true, isDefinition: true)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4053, type: !1947, isLocal: true, isDefinition: true)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 240, elements: !1948)
!1948 = !{!1949}
!1949 = !DISubrange(count: 30)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "log_var", scope: !1952, file: !3, line: 4053, type: !1540, isLocal: true, isDefinition: true)
!1952 = distinct !DISubprogram(name: "je_malloc_stats_print", scope: !3, file: !3, line: 4049, type: !1953, scopeLine: 4050, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1958)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{null, !1955, !383, !508}
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !383, !508}
!1958 = !{!1959, !1960, !1961, !1962, !1963}
!1959 = !DILocalVariable(name: "write_cb", arg: 1, scope: !1952, file: !3, line: 4049, type: !1955)
!1960 = !DILocalVariable(name: "cbopaque", arg: 2, scope: !1952, file: !3, line: 4049, type: !383)
!1961 = !DILocalVariable(name: "opts", arg: 3, scope: !1952, file: !3, line: 4050, type: !508)
!1962 = !DILocalVariable(name: "tsdn", scope: !1952, file: !3, line: 4051, type: !391)
!1963 = !DILocalVariable(name: "buf_writer", scope: !1964, file: !3, line: 4061, type: !1966)
!1964 = distinct !DILexicalBlock(scope: !1965, file: !3, line: 4060, column: 9)
!1965 = distinct !DILexicalBlock(scope: !1952, file: !3, line: 4058, column: 6)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "buf_writer_t", file: !1967, line: 20, baseType: !1968)
!1967 = !DIFile(filename: "include/jemalloc/internal/buf_writer.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "cdd38fd78650b081b6787693596670c7")
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1967, line: 13, size: 384, elements: !1969)
!1969 = !{!1970, !1973, !1974, !1975, !1976, !1977}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "write_cb", scope: !1968, file: !1967, line: 14, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "write_cb_t", file: !6, line: 21, baseType: !1956)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "cbopaque", scope: !1968, file: !1967, line: 15, baseType: !383, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1968, file: !1967, line: 16, baseType: !531, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1968, file: !1967, line: 17, baseType: !387, size: 64, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1968, file: !1967, line: 18, baseType: !387, size: 64, offset: 256)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "internal_buf", scope: !1968, file: !1967, line: 19, baseType: !389, size: 8, offset: 320)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4069, type: !1980, isLocal: true, isDefinition: true)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 232, elements: !1981)
!1981 = !{!1982}
!1982 = !DISubrange(count: 29)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "log_var", scope: !1952, file: !3, line: 4069, type: !1540, isLocal: true, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4098, type: !1947, isLocal: true, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "log_var", scope: !1989, file: !3, line: 4098, type: !1540, isLocal: true, isDefinition: true)
!1989 = distinct !DISubprogram(name: "je_malloc_usable_size", scope: !3, file: !3, line: 4097, type: !1990, scopeLine: 4097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1992)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!387, !383}
!1992 = !{!1993, !1994}
!1993 = !DILocalVariable(name: "ptr", arg: 1, scope: !1989, file: !3, line: 4097, type: !383)
!1994 = !DILocalVariable(name: "ret", scope: !1989, file: !3, line: 4100, type: !387)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4102, type: !1980, isLocal: true, isDefinition: true)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "log_var", scope: !1989, file: !3, line: 4102, type: !1540, isLocal: true, isDefinition: true)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4133, type: !1938, isLocal: true, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "log_var", scope: !2003, file: !3, line: 4133, type: !1540, isLocal: true, isDefinition: true)
!2003 = distinct !DISubprogram(name: "batch_alloc", scope: !3, file: !3, line: 4132, type: !2004, scopeLine: 4132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2006)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!387, !712, !387, !387, !390}
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2022, !2023, !2024, !2025, !2030, !2031, !2032, !2037, !2038, !2041, !2042, !2046, !2049}
!2007 = !DILocalVariable(name: "ptrs", arg: 1, scope: !2003, file: !3, line: 4132, type: !712)
!2008 = !DILocalVariable(name: "num", arg: 2, scope: !2003, file: !3, line: 4132, type: !387)
!2009 = !DILocalVariable(name: "size", arg: 3, scope: !2003, file: !3, line: 4132, type: !387)
!2010 = !DILocalVariable(name: "flags", arg: 4, scope: !2003, file: !3, line: 4132, type: !390)
!2011 = !DILocalVariable(name: "tsd", scope: !2003, file: !3, line: 4136, type: !1347)
!2012 = !DILocalVariable(name: "filled", scope: !2003, file: !3, line: 4139, type: !387)
!2013 = !DILocalVariable(name: "alignment", scope: !2003, file: !3, line: 4145, type: !387)
!2014 = !DILocalVariable(name: "usize", scope: !2003, file: !3, line: 4146, type: !387)
!2015 = !DILocalVariable(name: "ind", scope: !2003, file: !3, line: 4150, type: !726)
!2016 = !DILocalVariable(name: "zero", scope: !2003, file: !3, line: 4151, type: !389)
!2017 = !DILocalVariable(name: "bin", scope: !2003, file: !3, line: 4157, type: !707)
!2018 = !DILocalVariable(name: "arena", scope: !2003, file: !3, line: 4158, type: !594)
!2019 = !DILocalVariable(name: "nregs", scope: !2003, file: !3, line: 4160, type: !387)
!2020 = !DILocalVariable(name: "batch", scope: !2021, file: !3, line: 4167, type: !387)
!2021 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4166, column: 23)
!2022 = !DILocalVariable(name: "surplus", scope: !2021, file: !3, line: 4168, type: !387)
!2023 = !DILocalVariable(name: "prof_sample_event", scope: !2021, file: !3, line: 4169, type: !389)
!2024 = !DILocalVariable(name: "progress", scope: !2021, file: !3, line: 4183, type: !387)
!2025 = !DILocalVariable(name: "arena_ind", scope: !2026, file: !3, line: 4187, type: !7)
!2026 = distinct !DILexicalBlock(scope: !2027, file: !3, line: 4186, column: 23)
!2027 = distinct !DILexicalBlock(scope: !2028, file: !3, line: 4186, column: 8)
!2028 = distinct !DILexicalBlock(scope: !2029, file: !3, line: 4185, column: 49)
!2029 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 4185, column: 7)
!2030 = !DILocalVariable(name: "arena_batch", scope: !2028, file: !3, line: 4199, type: !387)
!2031 = !DILocalVariable(name: "n", scope: !2028, file: !3, line: 4200, type: !387)
!2032 = !DILocalVariable(name: "tcache_ind", scope: !2033, file: !3, line: 4208, type: !7)
!2033 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 4207, column: 21)
!2034 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 4207, column: 8)
!2035 = distinct !DILexicalBlock(scope: !2036, file: !3, line: 4206, column: 49)
!2036 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 4206, column: 7)
!2037 = !DILocalVariable(name: "tcache", scope: !2033, file: !3, line: 4209, type: !740)
!2038 = !DILocalVariable(name: "bin_batch", scope: !2039, file: !3, line: 4225, type: !387)
!2039 = distinct !DILexicalBlock(scope: !2040, file: !3, line: 4224, column: 21)
!2040 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 4224, column: 8)
!2041 = !DILocalVariable(name: "n", scope: !2039, file: !3, line: 4243, type: !387)
!2042 = !DILocalVariable(name: "i", scope: !2043, file: !3, line: 4249, type: !387)
!2043 = distinct !DILexicalBlock(scope: !2044, file: !3, line: 4249, column: 6)
!2044 = distinct !DILexicalBlock(scope: !2045, file: !3, line: 4248, column: 15)
!2045 = distinct !DILexicalBlock(scope: !2039, file: !3, line: 4248, column: 9)
!2046 = !DILocalVariable(name: "p", scope: !2047, file: !3, line: 4279, type: !383)
!2047 = distinct !DILexicalBlock(scope: !2048, file: !3, line: 4278, column: 46)
!2048 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 4278, column: 7)
!2049 = !DILabel(scope: !2003, name: "label_done", file: !3, line: 4290)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4292, type: !2052, isLocal: true, isDefinition: true)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 176, elements: !2053)
!2053 = !{!2054}
!2054 = !DISubrange(count: 22)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "log_var", scope: !2003, file: !3, line: 4292, type: !1540, isLocal: true, isDefinition: true)
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(name: "je_malloc_conf", scope: !2, file: !3, line: 33, type: !508, isLocal: false, isDefinition: true)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "je_malloc_conf_2_conf_harder", scope: !2, file: !3, line: 55, type: !508, isLocal: false, isDefinition: true)
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "ncpus", scope: !2, file: !3, line: 155, type: !7, isLocal: false, isDefinition: true)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "arenas_lock", scope: !2, file: !3, line: 158, type: !431, isLocal: false, isDefinition: true)
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "arenas", scope: !2, file: !3, line: 176, type: !2067, isLocal: false, isDefinition: true, align: 512)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 262080, elements: !2068)
!2068 = !{!2069}
!2069 = !DISubrange(count: 4095)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "narenas_total", scope: !2, file: !3, line: 177, type: !601, isLocal: true, isDefinition: true)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "narenas_auto", scope: !2, file: !3, line: 180, type: !7, isLocal: false, isDefinition: true)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "manual_arena_base", scope: !2, file: !3, line: 181, type: !7, isLocal: false, isDefinition: true)
!2076 = !DIGlobalVariableExpression(var: !2077, expr: !DIExpression(DW_OP_constu, 165, DW_OP_stack_value))
!2077 = distinct !DIGlobalVariable(name: "junk_alloc_byte", scope: !2, file: !3, line: 134, type: !2078, isLocal: true, isDefinition: true)
!2078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression(DW_OP_constu, 90, DW_OP_stack_value))
!2080 = distinct !DIGlobalVariable(name: "junk_free_byte", scope: !2, file: !3, line: 135, type: !2078, isLocal: true, isDefinition: true)
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "init_lock", scope: !2, file: !3, line: 246, type: !431, isLocal: true, isDefinition: true)
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1824, type: !2085, isLocal: true, isDefinition: true)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 248, elements: !2086)
!2086 = !{!2087}
!2087 = !DISubrange(count: 31)
!2088 = !DIGlobalVariableExpression(var: !2089, expr: !DIExpression())
!2089 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1854, type: !1573, isLocal: true, isDefinition: true)
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1856, type: !2092, isLocal: true, isDefinition: true)
!2092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 72, elements: !2093)
!2093 = !{!2094}
!2094 = !DISubrange(count: 9)
!2095 = !DIGlobalVariableExpression(var: !2096, expr: !DIExpression())
!2096 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1856, type: !2097, isLocal: true, isDefinition: true)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 80, elements: !2098)
!2098 = !{!2099}
!2099 = !DISubrange(count: 10)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1869, type: !2102, isLocal: true, isDefinition: true)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 56, elements: !2103)
!2103 = !{!2104}
!2104 = !DISubrange(count: 7)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "malloc_initializer", scope: !2, file: !3, line: 203, type: !2107, isLocal: true, isDefinition: true)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !468, line: 27, baseType: !386)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1070, type: !492, isLocal: true, isDefinition: true)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1071, type: !2112, isLocal: true, isDefinition: true)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 424, elements: !2113)
!2113 = !{!2114}
!2114 = !DISubrange(count: 53)
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1072, type: !2117, isLocal: true, isDefinition: true)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 592, elements: !2118)
!2118 = !{!2119}
!2119 = !DISubrange(count: 74)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1074, type: !1496, isLocal: true, isDefinition: true)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1075, type: !2124, isLocal: true, isDefinition: true)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 536, elements: !2125)
!2125 = !{!2126}
!2126 = !DISubrange(count: 67)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "opts_explain", scope: !2129, file: !3, line: 1069, type: !2352, isLocal: true, isDefinition: true)
!2129 = distinct !DISubprogram(name: "malloc_conf_init_helper", scope: !3, file: !3, line: 1066, type: !2130, scopeLine: 1068, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2165)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !2132, !2163, !389, !2164, !531}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "sc_data_t", file: !2134, line: 315, baseType: !2135)
!2134 = !DIFile(filename: "include/jemalloc/internal/sc.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "aa776b20fcef60390455de298617eeb5")
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sc_data_s", file: !2134, line: 316, size: 52608, elements: !2136)
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ntiny", scope: !2135, file: !2134, line: 318, baseType: !7, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "nlbins", scope: !2135, file: !2134, line: 320, baseType: !390, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "nbins", scope: !2135, file: !2134, line: 322, baseType: !390, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "nsizes", scope: !2135, file: !2134, line: 324, baseType: !390, size: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "lg_ceil_nsizes", scope: !2135, file: !2134, line: 326, baseType: !390, size: 32, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "npsizes", scope: !2135, file: !2134, line: 328, baseType: !7, size: 32, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "lg_tiny_maxclass", scope: !2135, file: !2134, line: 330, baseType: !390, size: 32, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_maxclass", scope: !2135, file: !2134, line: 332, baseType: !387, size: 64, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "small_maxclass", scope: !2135, file: !2134, line: 334, baseType: !387, size: 64, offset: 320)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "lg_large_minclass", scope: !2135, file: !2134, line: 336, baseType: !390, size: 32, offset: 384)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "large_minclass", scope: !2135, file: !2134, line: 338, baseType: !387, size: 64, offset: 448)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "large_maxclass", scope: !2135, file: !2134, line: 340, baseType: !387, size: 64, offset: 512)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2135, file: !2134, line: 342, baseType: !389, size: 8, offset: 576)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "sc", scope: !2135, file: !2134, line: 344, baseType: !2151, size: 51968, offset: 608)
!2151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2152, size: 51968, elements: !940)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sc_t", file: !2134, line: 290, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sc_s", file: !2134, line: 291, size: 224, elements: !2154)
!2154 = !{!2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2153, file: !2134, line: 293, baseType: !390, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "lg_base", scope: !2153, file: !2134, line: 295, baseType: !390, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "lg_delta", scope: !2153, file: !2134, line: 297, baseType: !390, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ndelta", scope: !2153, file: !2134, line: 299, baseType: !390, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "psz", scope: !2153, file: !2134, line: 304, baseType: !389, size: 8, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "bin", scope: !2153, file: !2134, line: 308, baseType: !389, size: 8, offset: 136)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pgs", scope: !2153, file: !2134, line: 310, baseType: !390, size: 32, offset: 160)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "lg_delta_lookup", scope: !2153, file: !2134, line: 312, baseType: !390, size: 32, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!2165 = !{!2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2182, !2185, !2186, !2189, !2190, !2197, !2198, !2201, !2202, !2205, !2206, !2208, !2209, !2210, !2211, !2214, !2215, !2218, !2219, !2222, !2223, !2226, !2227, !2230, !2231, !2234, !2235, !2238, !2239, !2242, !2243, !2246, !2247, !2250, !2251, !2254, !2255, !2258, !2259, !2262, !2263, !2266, !2267, !2270, !2271, !2274, !2275, !2278, !2280, !2283, !2284, !2287, !2288, !2291, !2292, !2295, !2296, !2297, !2300, !2301, !2304, !2305, !2308, !2309, !2310, !2313, !2314, !2317, !2318, !2321, !2322, !2325, !2326, !2329, !2330, !2333, !2334, !2335, !2337, !2338, !2339, !2342, !2344, !2347, !2348, !2351}
!2166 = !DILocalVariable(name: "sc_data", arg: 1, scope: !2129, file: !3, line: 1066, type: !2132)
!2167 = !DILocalVariable(name: "bin_shard_sizes", arg: 2, scope: !2129, file: !3, line: 1066, type: !2163)
!2168 = !DILocalVariable(name: "initial_call", arg: 3, scope: !2129, file: !3, line: 1067, type: !389)
!2169 = !DILocalVariable(name: "opts_cache", arg: 4, scope: !2129, file: !3, line: 1067, type: !2164)
!2170 = !DILocalVariable(name: "buf", arg: 5, scope: !2129, file: !3, line: 1068, type: !531)
!2171 = !DILocalVariable(name: "i", scope: !2129, file: !3, line: 1078, type: !7)
!2172 = !DILocalVariable(name: "opts", scope: !2129, file: !3, line: 1079, type: !508)
!2173 = !DILocalVariable(name: "k", scope: !2129, file: !3, line: 1079, type: !508)
!2174 = !DILocalVariable(name: "v", scope: !2129, file: !3, line: 1079, type: !508)
!2175 = !DILocalVariable(name: "klen", scope: !2129, file: !3, line: 1080, type: !387)
!2176 = !DILocalVariable(name: "vlen", scope: !2129, file: !3, line: 1080, type: !387)
!2177 = !DILocalVariable(name: "cur_opt_valid", scope: !2178, file: !3, line: 1214, type: !389)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !3, line: 1098, column: 15)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !3, line: 1082, column: 45)
!2180 = distinct !DILexicalBlock(scope: !2181, file: !3, line: 1082, column: 2)
!2181 = distinct !DILexicalBlock(scope: !2129, file: !3, line: 1082, column: 2)
!2182 = !DILocalVariable(name: "m", scope: !2183, file: !3, line: 1225, type: !390)
!2183 = distinct !DILexicalBlock(scope: !2184, file: !3, line: 1224, column: 47)
!2184 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1224, column: 8)
!2185 = !DILocalVariable(name: "match", scope: !2183, file: !3, line: 1226, type: !389)
!2186 = !DILocalVariable(name: "m", scope: !2187, file: !3, line: 1243, type: !390)
!2187 = distinct !DILexicalBlock(scope: !2188, file: !3, line: 1242, column: 38)
!2188 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1242, column: 8)
!2189 = !DILocalVariable(name: "match", scope: !2187, file: !3, line: 1244, type: !389)
!2190 = !DILocalVariable(name: "mv", scope: !2191, file: !3, line: 1271, type: !1410)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 1271, column: 6)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 1271, column: 6)
!2193 = distinct !DILexicalBlock(scope: !2194, file: !3, line: 1270, column: 12)
!2194 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 1267, column: 9)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 1266, column: 31)
!2196 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1266, column: 8)
!2197 = !DILocalVariable(name: "end", scope: !2191, file: !3, line: 1271, type: !531)
!2198 = !DILocalVariable(name: "end", scope: !2199, file: !3, line: 1278, type: !531)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !3, line: 1277, column: 37)
!2200 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1277, column: 8)
!2201 = !DILocalVariable(name: "err", scope: !2199, file: !3, line: 1279, type: !389)
!2202 = !DILocalVariable(name: "bin_shards_segment_cur", scope: !2203, file: !3, line: 1288, type: !508)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !3, line: 1287, column: 34)
!2204 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1287, column: 8)
!2205 = !DILocalVariable(name: "vlen_left", scope: !2203, file: !3, line: 1289, type: !387)
!2206 = !DILocalVariable(name: "size_start", scope: !2207, file: !3, line: 1291, type: !387)
!2207 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1290, column: 8)
!2208 = !DILocalVariable(name: "size_end", scope: !2207, file: !3, line: 1292, type: !387)
!2209 = !DILocalVariable(name: "nshards", scope: !2207, file: !3, line: 1293, type: !387)
!2210 = !DILocalVariable(name: "err", scope: !2207, file: !3, line: 1294, type: !389)
!2211 = !DILocalVariable(name: "mv", scope: !2212, file: !3, line: 1309, type: !1412)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !3, line: 1309, column: 4)
!2213 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1309, column: 4)
!2214 = !DILocalVariable(name: "end", scope: !2212, file: !3, line: 1309, type: !531)
!2215 = !DILocalVariable(name: "mv", scope: !2216, file: !3, line: 1312, type: !1412)
!2216 = distinct !DILexicalBlock(scope: !2217, file: !3, line: 1312, column: 4)
!2217 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1312, column: 4)
!2218 = !DILocalVariable(name: "end", scope: !2216, file: !3, line: 1312, type: !531)
!2219 = !DILocalVariable(name: "mv", scope: !2220, file: !3, line: 1316, type: !1412)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 1316, column: 4)
!2221 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1316, column: 4)
!2222 = !DILocalVariable(name: "end", scope: !2220, file: !3, line: 1316, type: !531)
!2223 = !DILocalVariable(name: "mv", scope: !2224, file: !3, line: 1326, type: !1412)
!2224 = distinct !DILexicalBlock(scope: !2225, file: !3, line: 1326, column: 4)
!2225 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1326, column: 4)
!2226 = !DILocalVariable(name: "end", scope: !2224, file: !3, line: 1326, type: !531)
!2227 = !DILocalVariable(name: "mv", scope: !2228, file: !3, line: 1374, type: !1410)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 1374, column: 4)
!2229 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1374, column: 4)
!2230 = !DILocalVariable(name: "end", scope: !2228, file: !3, line: 1374, type: !531)
!2231 = !DILocalVariable(name: "m", scope: !2232, file: !3, line: 1378, type: !387)
!2232 = distinct !DILexicalBlock(scope: !2233, file: !3, line: 1377, column: 37)
!2233 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1377, column: 8)
!2234 = !DILocalVariable(name: "end", scope: !2232, file: !3, line: 1379, type: !531)
!2235 = !DILocalVariable(name: "mv", scope: !2236, file: !3, line: 1396, type: !1412)
!2236 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 1396, column: 4)
!2237 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1396, column: 4)
!2238 = !DILocalVariable(name: "end", scope: !2236, file: !3, line: 1396, type: !531)
!2239 = !DILocalVariable(name: "mv", scope: !2240, file: !3, line: 1399, type: !1410)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 1399, column: 4)
!2241 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1399, column: 4)
!2242 = !DILocalVariable(name: "end", scope: !2240, file: !3, line: 1399, type: !531)
!2243 = !DILocalVariable(name: "mv", scope: !2244, file: !3, line: 1402, type: !1410)
!2244 = distinct !DILexicalBlock(scope: !2245, file: !3, line: 1402, column: 4)
!2245 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1402, column: 4)
!2246 = !DILocalVariable(name: "end", scope: !2244, file: !3, line: 1402, type: !531)
!2247 = !DILocalVariable(name: "mv", scope: !2248, file: !3, line: 1405, type: !1410)
!2248 = distinct !DILexicalBlock(scope: !2249, file: !3, line: 1405, column: 4)
!2249 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1405, column: 4)
!2250 = !DILocalVariable(name: "end", scope: !2248, file: !3, line: 1405, type: !531)
!2251 = !DILocalVariable(name: "mv", scope: !2252, file: !3, line: 1408, type: !1410)
!2252 = distinct !DILexicalBlock(scope: !2253, file: !3, line: 1408, column: 4)
!2253 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1408, column: 4)
!2254 = !DILocalVariable(name: "end", scope: !2252, file: !3, line: 1408, type: !531)
!2255 = !DILocalVariable(name: "mv", scope: !2256, file: !3, line: 1412, type: !1410)
!2256 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 1412, column: 4)
!2257 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1412, column: 4)
!2258 = !DILocalVariable(name: "end", scope: !2256, file: !3, line: 1412, type: !531)
!2259 = !DILocalVariable(name: "mv", scope: !2260, file: !3, line: 1416, type: !1410)
!2260 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 1416, column: 4)
!2261 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1416, column: 4)
!2262 = !DILocalVariable(name: "end", scope: !2260, file: !3, line: 1416, type: !531)
!2263 = !DILocalVariable(name: "mv", scope: !2264, file: !3, line: 1419, type: !1410)
!2264 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 1419, column: 4)
!2265 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1419, column: 4)
!2266 = !DILocalVariable(name: "end", scope: !2264, file: !3, line: 1419, type: !531)
!2267 = !DILocalVariable(name: "mv", scope: !2268, file: !3, line: 1431, type: !1410)
!2268 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 1431, column: 4)
!2269 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1431, column: 4)
!2270 = !DILocalVariable(name: "end", scope: !2268, file: !3, line: 1431, type: !531)
!2271 = !DILocalVariable(name: "mv", scope: !2272, file: !3, line: 1434, type: !1410)
!2272 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 1434, column: 4)
!2273 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1434, column: 4)
!2274 = !DILocalVariable(name: "end", scope: !2272, file: !3, line: 1434, type: !531)
!2275 = !DILocalVariable(name: "match", scope: !2276, file: !3, line: 1440, type: !389)
!2276 = distinct !DILexicalBlock(scope: !2277, file: !3, line: 1439, column: 47)
!2277 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1439, column: 8)
!2278 = !DILocalVariable(name: "m", scope: !2279, file: !3, line: 1441, type: !390)
!2279 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1441, column: 5)
!2280 = !DILocalVariable(name: "mv", scope: !2281, file: !3, line: 1463, type: !1410)
!2281 = distinct !DILexicalBlock(scope: !2282, file: !3, line: 1463, column: 4)
!2282 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1463, column: 4)
!2283 = !DILocalVariable(name: "end", scope: !2281, file: !3, line: 1463, type: !531)
!2284 = !DILocalVariable(name: "mv", scope: !2285, file: !3, line: 1469, type: !1410)
!2285 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 1469, column: 4)
!2286 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1469, column: 4)
!2287 = !DILocalVariable(name: "end", scope: !2285, file: !3, line: 1469, type: !531)
!2288 = !DILocalVariable(name: "mv", scope: !2289, file: !3, line: 1477, type: !1410)
!2289 = distinct !DILexicalBlock(scope: !2290, file: !3, line: 1477, column: 4)
!2290 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1477, column: 4)
!2291 = !DILocalVariable(name: "end", scope: !2289, file: !3, line: 1477, type: !531)
!2292 = !DILocalVariable(name: "ratio", scope: !2293, file: !3, line: 1481, type: !1273)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !3, line: 1480, column: 56)
!2294 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1480, column: 8)
!2295 = !DILocalVariable(name: "end", scope: !2293, file: !3, line: 1482, type: !531)
!2296 = !DILocalVariable(name: "err", scope: !2293, file: !3, line: 1483, type: !389)
!2297 = !DILocalVariable(name: "mv", scope: !2298, file: !3, line: 1496, type: !1410)
!2298 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 1496, column: 4)
!2299 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1496, column: 4)
!2300 = !DILocalVariable(name: "end", scope: !2298, file: !3, line: 1496, type: !531)
!2301 = !DILocalVariable(name: "mv", scope: !2302, file: !3, line: 1501, type: !1410)
!2302 = distinct !DILexicalBlock(scope: !2303, file: !3, line: 1501, column: 4)
!2303 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1501, column: 4)
!2304 = !DILocalVariable(name: "end", scope: !2302, file: !3, line: 1501, type: !531)
!2305 = !DILocalVariable(name: "ratio", scope: !2306, file: !3, line: 1511, type: !1273)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 1506, column: 38)
!2307 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1506, column: 8)
!2308 = !DILocalVariable(name: "end", scope: !2306, file: !3, line: 1512, type: !531)
!2309 = !DILocalVariable(name: "err", scope: !2306, file: !3, line: 1513, type: !389)
!2310 = !DILocalVariable(name: "mv", scope: !2311, file: !3, line: 1524, type: !1410)
!2311 = distinct !DILexicalBlock(scope: !2312, file: !3, line: 1524, column: 4)
!2312 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1524, column: 4)
!2313 = !DILocalVariable(name: "end", scope: !2311, file: !3, line: 1524, type: !531)
!2314 = !DILocalVariable(name: "mv", scope: !2315, file: !3, line: 1527, type: !1410)
!2315 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 1527, column: 4)
!2316 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1527, column: 4)
!2317 = !DILocalVariable(name: "end", scope: !2315, file: !3, line: 1527, type: !531)
!2318 = !DILocalVariable(name: "mv", scope: !2319, file: !3, line: 1530, type: !1410)
!2319 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 1530, column: 4)
!2320 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1530, column: 4)
!2321 = !DILocalVariable(name: "end", scope: !2319, file: !3, line: 1530, type: !531)
!2322 = !DILocalVariable(name: "mv", scope: !2323, file: !3, line: 1533, type: !1410)
!2323 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1533, column: 4)
!2324 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1533, column: 4)
!2325 = !DILocalVariable(name: "end", scope: !2323, file: !3, line: 1533, type: !531)
!2326 = !DILocalVariable(name: "mv", scope: !2327, file: !3, line: 1536, type: !1410)
!2327 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 1536, column: 4)
!2328 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1536, column: 4)
!2329 = !DILocalVariable(name: "end", scope: !2327, file: !3, line: 1536, type: !531)
!2330 = !DILocalVariable(name: "err", scope: !2331, file: !3, line: 1545, type: !389)
!2331 = distinct !DILexicalBlock(scope: !2332, file: !3, line: 1540, column: 34)
!2332 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1540, column: 8)
!2333 = !DILocalVariable(name: "slab_size_segment_cur", scope: !2331, file: !3, line: 1546, type: !508)
!2334 = !DILocalVariable(name: "vlen_left", scope: !2331, file: !3, line: 1547, type: !387)
!2335 = !DILocalVariable(name: "slab_start", scope: !2336, file: !3, line: 1549, type: !387)
!2336 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 1548, column: 8)
!2337 = !DILocalVariable(name: "slab_end", scope: !2336, file: !3, line: 1550, type: !387)
!2338 = !DILocalVariable(name: "pgs", scope: !2336, file: !3, line: 1551, type: !387)
!2339 = !DILocalVariable(name: "match", scope: !2340, file: !3, line: 1636, type: !389)
!2340 = distinct !DILexicalBlock(scope: !2341, file: !3, line: 1635, column: 27)
!2341 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1635, column: 8)
!2342 = !DILocalVariable(name: "m", scope: !2343, file: !3, line: 1637, type: !390)
!2343 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 1637, column: 5)
!2344 = !DILocalVariable(name: "mv", scope: !2345, file: !3, line: 1698, type: !1410)
!2345 = distinct !DILexicalBlock(scope: !2346, file: !3, line: 1698, column: 4)
!2346 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1698, column: 4)
!2347 = !DILocalVariable(name: "end", scope: !2345, file: !3, line: 1698, type: !531)
!2348 = !DILocalVariable(name: "mv", scope: !2349, file: !3, line: 1701, type: !1410)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !3, line: 1701, column: 4)
!2350 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1701, column: 4)
!2351 = !DILocalVariable(name: "end", scope: !2349, file: !3, line: 1701, type: !531)
!2352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !508, size: 320, elements: !1458)
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1090, type: !492, isLocal: true, isDefinition: true)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1091, type: !2357, isLocal: true, isDefinition: true)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 8, elements: !1216)
!2358 = !DIGlobalVariableExpression(var: !2359, expr: !DIExpression())
!2359 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1216, type: !2360, isLocal: true, isDefinition: true)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 104, elements: !2361)
!2361 = !{!2362}
!2362 = !DISubrange(count: 13)
!2363 = !DIGlobalVariableExpression(var: !2364, expr: !DIExpression())
!2364 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1216, type: !1457, isLocal: true, isDefinition: true)
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1216, type: !1663, isLocal: true, isDefinition: true)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1216, type: !2369, isLocal: true, isDefinition: true)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 336, elements: !2370)
!2370 = !{!2371}
!2371 = !DISubrange(count: 42)
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1222, type: !2374, isLocal: true, isDefinition: true)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 88, elements: !2375)
!2375 = !{!2376}
!2376 = !DISubrange(count: 11)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1223, type: !2379, isLocal: true, isDefinition: true)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 112, elements: !2380)
!2380 = !{!2381}
!2381 = !DISubrange(count: 14)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1224, type: !2360, isLocal: true, isDefinition: true)
!2384 = !DIGlobalVariableExpression(var: !2385, expr: !DIExpression())
!2385 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1241, type: !2102, isLocal: true, isDefinition: true)
!2386 = !DIGlobalVariableExpression(var: !2387, expr: !DIExpression())
!2387 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1242, type: !2388, isLocal: true, isDefinition: true)
!2388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 32, elements: !1028)
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1249, type: !1606, isLocal: true, isDefinition: true)
!2391 = !DIGlobalVariableExpression(var: !2392, expr: !DIExpression())
!2392 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1266, type: !2393, isLocal: true, isDefinition: true)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !829)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1267, type: !2393, isLocal: true, isDefinition: true)
!2396 = !DIGlobalVariableExpression(var: !2397, expr: !DIExpression())
!2397 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1271, type: !1599, isLocal: true, isDefinition: true)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1277, type: !2379, isLocal: true, isDefinition: true)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1287, type: !2374, isLocal: true, isDefinition: true)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1300, type: !2404, isLocal: true, isDefinition: true)
!2404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2405)
!2405 = !{!2406}
!2406 = !DISubrange(count: 32)
!2407 = !DIGlobalVariableExpression(var: !2408, expr: !DIExpression())
!2408 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1309, type: !1639, isLocal: true, isDefinition: true)
!2409 = !DIGlobalVariableExpression(var: !2410, expr: !DIExpression())
!2410 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1312, type: !1639, isLocal: true, isDefinition: true)
!2411 = !DIGlobalVariableExpression(var: !2412, expr: !DIExpression())
!2412 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1316, type: !1639, isLocal: true, isDefinition: true)
!2413 = !DIGlobalVariableExpression(var: !2414, expr: !DIExpression())
!2414 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1320, type: !2415, isLocal: true, isDefinition: true)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !664)
!2416 = !DIGlobalVariableExpression(var: !2417, expr: !DIExpression())
!2417 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1321, type: !1501, isLocal: true, isDefinition: true)
!2418 = !DIGlobalVariableExpression(var: !2419, expr: !DIExpression())
!2419 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1326, type: !1639, isLocal: true, isDefinition: true)
!2420 = !DIGlobalVariableExpression(var: !2421, expr: !DIExpression())
!2421 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1329, type: !1646, isLocal: true, isDefinition: true)
!2422 = !DIGlobalVariableExpression(var: !2423, expr: !DIExpression())
!2423 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1335, type: !1457, isLocal: true, isDefinition: true)
!2424 = !DIGlobalVariableExpression(var: !2425, expr: !DIExpression())
!2425 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1359, type: !1457, isLocal: true, isDefinition: true)
!2426 = !DIGlobalVariableExpression(var: !2427, expr: !DIExpression())
!2427 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1368, type: !1895, isLocal: true, isDefinition: true)
!2428 = !DIGlobalVariableExpression(var: !2429, expr: !DIExpression())
!2429 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1373, type: !2102, isLocal: true, isDefinition: true)
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1374, type: !2374, isLocal: true, isDefinition: true)
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1377, type: !2379, isLocal: true, isDefinition: true)
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1396, type: !2436, isLocal: true, isDefinition: true)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 168, elements: !2437)
!2437 = !{!2438}
!2438 = !DISubrange(count: 21)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1399, type: !1599, isLocal: true, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1402, type: !1599, isLocal: true, isDefinition: true)
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1405, type: !1646, isLocal: true, isDefinition: true)
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1408, type: !2436, isLocal: true, isDefinition: true)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1412, type: !2052, isLocal: true, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1416, type: !1548, isLocal: true, isDefinition: true)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1419, type: !1548, isLocal: true, isDefinition: true)
!2453 = !DIGlobalVariableExpression(var: !2454, expr: !DIExpression())
!2454 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1431, type: !1663, isLocal: true, isDefinition: true)
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1434, type: !1576, isLocal: true, isDefinition: true)
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1439, type: !2360, isLocal: true, isDefinition: true)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1461, type: !1606, isLocal: true, isDefinition: true)
!2461 = !DIGlobalVariableExpression(var: !2462, expr: !DIExpression())
!2462 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1463, type: !1938, isLocal: true, isDefinition: true)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1468, type: !2388, isLocal: true, isDefinition: true)
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1469, type: !1663, isLocal: true, isDefinition: true)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1477, type: !1911, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1480, type: !2471, isLocal: true, isDefinition: true)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 264, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 33)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1496, type: !1646, isLocal: true, isDefinition: true)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1501, type: !1548, isLocal: true, isDefinition: true)
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1506, type: !1639, isLocal: true, isDefinition: true)
!2480 = !DIGlobalVariableExpression(var: !2481, expr: !DIExpression())
!2481 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1507, type: !2482, isLocal: true, isDefinition: true)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 24, elements: !1465)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1524, type: !1629, isLocal: true, isDefinition: true)
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1527, type: !1606, isLocal: true, isDefinition: true)
!2487 = !DIGlobalVariableExpression(var: !2488, expr: !DIExpression())
!2488 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1530, type: !1606, isLocal: true, isDefinition: true)
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1533, type: !1548, isLocal: true, isDefinition: true)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1536, type: !1576, isLocal: true, isDefinition: true)
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1540, type: !2374, isLocal: true, isDefinition: true)
!2495 = !DIGlobalVariableExpression(var: !2496, expr: !DIExpression())
!2496 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1561, type: !2404, isLocal: true, isDefinition: true)
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1635, type: !2388, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1656, type: !2360, isLocal: true, isDefinition: true)
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1698, type: !1629, isLocal: true, isDefinition: true)
!2503 = !DIGlobalVariableExpression(var: !2504, expr: !DIExpression())
!2504 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1701, type: !1629, isLocal: true, isDefinition: true)
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1705, type: !1606, isLocal: true, isDefinition: true)
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2508 = distinct !DIGlobalVariable(name: "config_malloc_conf", scope: !2, file: !2509, line: 95, type: !2510, isLocal: true, isDefinition: true)
!2509 = !DIFile(filename: "include/jemalloc/internal/jemalloc_preamble.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "ea94db40ad5fbff370ae1ff432cffe5a")
!2510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!2511 = !DIGlobalVariableExpression(var: !2512, expr: !DIExpression())
!2512 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1011, type: !1646, isLocal: true, isDefinition: true)
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1039, type: !1639, isLocal: true, isDefinition: true)
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(scope: null, file: !3, line: 894, type: !2517, isLocal: true, isDefinition: true)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 312, elements: !2518)
!2518 = !{!2519}
!2519 = !DISubrange(count: 39)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(scope: null, file: !3, line: 900, type: !2522, isLocal: true, isDefinition: true)
!2522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 280, elements: !2523)
!2523 = !{!2524}
!2524 = !DISubrange(count: 35)
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(scope: null, file: !3, line: 918, type: !2527, isLocal: true, isDefinition: true)
!2527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 328, elements: !2528)
!2528 = !{!2529}
!2529 = !DISubrange(count: 41)
!2530 = !DIGlobalVariableExpression(var: !2531, expr: !DIExpression())
!2531 = distinct !DIGlobalVariable(scope: null, file: !3, line: 950, type: !1911, isLocal: true, isDefinition: true)
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(scope: null, file: !3, line: 953, type: !2379, isLocal: true, isDefinition: true)
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "had_conf_error", scope: !2, file: !3, line: 272, type: !389, isLocal: true, isDefinition: true)
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1735, type: !2538, isLocal: true, isDefinition: true)
!2538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 416, elements: !2539)
!2539 = !{!2540}
!2540 = !DISubrange(count: 52)
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(scope: null, file: !3, line: 942, type: !2543, isLocal: true, isDefinition: true)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 576, elements: !2544)
!2544 = !{!2545}
!2545 = !DISubrange(count: 72)
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(name: "a0", scope: !2, file: !3, line: 179, type: !594, isLocal: true, isDefinition: true)
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression(DW_OP_constu, 6582955728264977243, DW_OP_stack_value))
!2549 = distinct !DIGlobalVariable(name: "uaf_detect_junk", scope: !2, file: !2550, line: 16, type: !2551, isLocal: true, isDefinition: true)
!2550 = !DIFile(filename: "include/jemalloc/internal/san.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "04013b0e90becf54e31affe005c37699")
!2551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !384)
!2552 = !DIGlobalVariableExpression(var: !2553, expr: !DIExpression())
!2553 = distinct !DIGlobalVariable(scope: null, file: !3, line: 431, type: !2554, isLocal: true, isDefinition: true)
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 560, elements: !2555)
!2555 = !{!2556}
!2556 = !DISubrange(count: 70)
!2557 = !DIGlobalVariableExpression(var: !2558, expr: !DIExpression(DW_OP_constu, 0, DW_OP_stack_value))
!2558 = distinct !DIGlobalVariable(name: "config_xmalloc", scope: !2, file: !2509, line: 145, type: !2559, isLocal: true, isDefinition: true)
!2559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!2560 = !DIGlobalVariableExpression(var: !2561, expr: !DIExpression())
!2561 = distinct !DIGlobalVariable(name: "high_bits", scope: !2562, file: !3, line: 2455, type: !1926, isLocal: true, isDefinition: true)
!2562 = distinct !DISubprogram(name: "compute_size_with_overflow", scope: !3, file: !3, line: 2441, type: !2563, scopeLine: 2442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2566)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!389, !389, !2565, !556}
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!2566 = !{!2567, !2568, !2569}
!2567 = !DILocalVariable(name: "may_overflow", arg: 1, scope: !2562, file: !3, line: 2441, type: !389)
!2568 = !DILocalVariable(name: "dopts", arg: 2, scope: !2562, file: !3, line: 2441, type: !2565)
!2569 = !DILocalVariable(name: "size", arg: 3, scope: !2562, file: !3, line: 2442, type: !556)
!2570 = !DIGlobalVariableExpression(var: !2571, expr: !DIExpression())
!2571 = distinct !DIGlobalVariable(scope: null, file: !2572, line: 259, type: !1606, isLocal: true, isDefinition: true)
!2572 = !DIFile(filename: "include/jemalloc/internal/jemalloc_internal_inlines_c.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "47aa3d8bcc102251a134469c9027ce7a")
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "log_var", scope: !2575, file: !2572, line: 259, type: !1540, isLocal: true, isDefinition: true)
!2575 = distinct !DISubprogram(name: "imalloc_fastpath", scope: !2572, file: !2572, line: 258, type: !2576, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2578)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!383, !387, !953}
!2578 = !{!2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590}
!2579 = !DILocalVariable(name: "size", arg: 1, scope: !2575, file: !2572, line: 258, type: !387)
!2580 = !DILocalVariable(name: "fallback_alloc", arg: 2, scope: !2575, file: !2572, line: 258, type: !953)
!2581 = !DILocalVariable(name: "tsd", scope: !2575, file: !2572, line: 264, type: !1347)
!2582 = !DILocalVariable(name: "ind", scope: !2575, file: !2572, line: 276, type: !726)
!2583 = !DILocalVariable(name: "usize", scope: !2575, file: !2572, line: 283, type: !387)
!2584 = !DILocalVariable(name: "allocated", scope: !2575, file: !2572, line: 290, type: !408)
!2585 = !DILocalVariable(name: "threshold", scope: !2575, file: !2572, line: 290, type: !408)
!2586 = !DILocalVariable(name: "allocated_after", scope: !2575, file: !2572, line: 292, type: !408)
!2587 = !DILocalVariable(name: "tcache", scope: !2575, file: !2572, line: 314, type: !740)
!2588 = !DILocalVariable(name: "bin", scope: !2575, file: !2572, line: 316, type: !707)
!2589 = !DILocalVariable(name: "tcache_success", scope: !2575, file: !2572, line: 317, type: !389)
!2590 = !DILocalVariable(name: "ret", scope: !2575, file: !2572, line: 318, type: !383)
!2591 = !DIGlobalVariableExpression(var: !2592, expr: !DIExpression())
!2592 = distinct !DIGlobalVariable(name: "log_var", scope: !2593, file: !2572, line: 232, type: !1540, isLocal: true, isDefinition: true)
!2593 = distinct !DISubprogram(name: "fastpath_success_finish", scope: !2572, file: !2572, line: 225, type: !2594, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2596)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{null, !1347, !408, !707, !383}
!2596 = !{!2597, !2598, !2599, !2600}
!2597 = !DILocalVariable(name: "tsd", arg: 1, scope: !2593, file: !2572, line: 225, type: !1347)
!2598 = !DILocalVariable(name: "allocated_after", arg: 2, scope: !2593, file: !2572, line: 225, type: !408)
!2599 = !DILocalVariable(name: "bin", arg: 3, scope: !2593, file: !2572, line: 226, type: !707)
!2600 = !DILocalVariable(name: "ret", arg: 4, scope: !2593, file: !2572, line: 226, type: !383)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(scope: null, file: !2603, line: 185, type: !2604, isLocal: true, isDefinition: true)
!2603 = !DIFile(filename: "include/jemalloc/internal/tcache_inlines.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "db95d0b928eeede9956e89c26c59c0b5")
!2604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 296, elements: !2605)
!2605 = !{!2606}
!2606 = !DISubrange(count: 37)
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(name: "rtree_levels", scope: !2, file: !1077, line: 116, type: !2609, isLocal: true, isDefinition: true)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2610, size: 128, elements: !605)
!2610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2611)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_level_t", file: !1077, line: 87, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_level_s", file: !1077, line: 88, size: 64, elements: !2613)
!2613 = !{!2614, !2615}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2612, file: !1077, line: 90, baseType: !7, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "cumbits", scope: !2612, file: !1077, line: 95, baseType: !7, size: 32, offset: 32)
!2616 = !DIGlobalVariableExpression(var: !2617, expr: !DIExpression())
!2617 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3609, type: !2618, isLocal: true, isDefinition: true)
!2618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 488, elements: !2619)
!2619 = !{!2620}
!2620 = !DISubrange(count: 61)
!2621 = !DIGlobalVariableExpression(var: !2622, expr: !DIExpression())
!2622 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1940, type: !2623, isLocal: true, isDefinition: true)
!2623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 664, elements: !2624)
!2624 = !{!2625}
!2625 = !DISubrange(count: 83)
!2626 = !DIGlobalVariableExpression(var: !2627, expr: !DIExpression())
!2627 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1959, type: !2517, isLocal: true, isDefinition: true)
!2628 = !DIGlobalVariableExpression(var: !2629, expr: !DIExpression())
!2629 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2013, type: !2630, isLocal: true, isDefinition: true)
!2630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 584, elements: !747)
!2631 = !DIGlobalVariableExpression(var: !2632, expr: !DIExpression())
!2632 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2021, type: !2633, isLocal: true, isDefinition: true)
!2633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 432, elements: !2634)
!2634 = !{!2635}
!2635 = !DISubrange(count: 54)
!2636 = !DIGlobalVariableExpression(var: !2637, expr: !DIExpression())
!2637 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2031, type: !2638, isLocal: true, isDefinition: true)
!2638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 904, elements: !2639)
!2639 = !{!2640}
!2640 = !DISubrange(count: 113)
!2641 = !DIGlobalVariableExpression(var: !2642, expr: !DIExpression())
!2642 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2070, type: !2643, isLocal: true, isDefinition: true)
!2643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 352, elements: !2644)
!2644 = !{!2645}
!2645 = !DISubrange(count: 44)
!2646 = !DIGlobalVariableExpression(var: !2647, expr: !DIExpression())
!2647 = distinct !DIGlobalVariable(name: "malloc_slow_flags", scope: !2, file: !3, line: 196, type: !730, isLocal: true, isDefinition: true)
!2648 = !{i32 7, !"Dwarf Version", i32 5}
!2649 = !{i32 2, !"Debug Info Version", i32 3}
!2650 = !{i32 1, !"wchar_size", i32 4}
!2651 = !{i32 8, !"PIC Level", i32 2}
!2652 = !{i32 7, !"uwtable", i32 2}
!2653 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!2654 = distinct !DISubprogram(name: "default_junk_alloc", scope: !3, file: !3, line: 137, type: !958, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2655)
!2655 = !{!2656, !2657}
!2656 = !DILocalVariable(name: "ptr", arg: 1, scope: !2654, file: !3, line: 137, type: !383)
!2657 = !DILocalVariable(name: "usize", arg: 2, scope: !2654, file: !3, line: 137, type: !387)
!2658 = !{!2659, !2659, i64 0}
!2659 = !{!"any pointer", !2660, i64 0}
!2660 = !{!"omnipotent char", !2661, i64 0}
!2661 = !{!"Simple C/C++ TBAA"}
!2662 = !DILocation(line: 137, column: 38, scope: !2654)
!2663 = !{!2664, !2664, i64 0}
!2664 = !{!"long", !2660, i64 0}
!2665 = !DILocation(line: 137, column: 50, scope: !2654)
!2666 = !DILocation(line: 138, column: 9, scope: !2654)
!2667 = !DILocation(line: 138, column: 31, scope: !2654)
!2668 = !DILocation(line: 138, column: 2, scope: !2654)
!2669 = !DILocation(line: 139, column: 1, scope: !2654)
!2670 = distinct !DISubprogram(name: "default_junk_free", scope: !3, file: !3, line: 141, type: !958, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2671)
!2671 = !{!2672, !2673}
!2672 = !DILocalVariable(name: "ptr", arg: 1, scope: !2670, file: !3, line: 141, type: !383)
!2673 = !DILocalVariable(name: "usize", arg: 2, scope: !2670, file: !3, line: 141, type: !387)
!2674 = !DILocation(line: 141, column: 37, scope: !2670)
!2675 = !DILocation(line: 141, column: 49, scope: !2670)
!2676 = !DILocation(line: 142, column: 9, scope: !2670)
!2677 = !DILocation(line: 142, column: 30, scope: !2670)
!2678 = !DILocation(line: 142, column: 2, scope: !2670)
!2679 = !DILocation(line: 143, column: 1, scope: !2670)
!2680 = distinct !DISubprogram(name: "a0malloc", scope: !3, file: !3, line: 325, type: !954, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2681)
!2681 = !{!2682}
!2682 = !DILocalVariable(name: "size", arg: 1, scope: !2680, file: !3, line: 325, type: !387)
!2683 = !DILocation(line: 325, column: 17, scope: !2680)
!2684 = !DILocation(line: 326, column: 18, scope: !2680)
!2685 = !DILocation(line: 326, column: 9, scope: !2680)
!2686 = !DILocation(line: 326, column: 2, scope: !2680)
!2687 = distinct !DISubprogram(name: "a0ialloc", scope: !3, file: !3, line: 310, type: !2688, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2690)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!383, !387, !389, !389}
!2690 = !{!2691, !2692, !2693}
!2691 = !DILocalVariable(name: "size", arg: 1, scope: !2687, file: !3, line: 310, type: !387)
!2692 = !DILocalVariable(name: "zero", arg: 2, scope: !2687, file: !3, line: 310, type: !389)
!2693 = !DILocalVariable(name: "is_internal", arg: 3, scope: !2687, file: !3, line: 310, type: !389)
!2694 = !DILocation(line: 310, column: 17, scope: !2687)
!2695 = !{!2696, !2696, i64 0}
!2696 = !{!"_Bool", !2660, i64 0}
!2697 = !DILocation(line: 310, column: 28, scope: !2687)
!2698 = !DILocation(line: 310, column: 39, scope: !2687)
!2699 = !DILocation(line: 311, column: 6, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 311, column: 6)
!2701 = !DILocation(line: 311, column: 6, scope: !2687)
!2702 = !DILocation(line: 312, column: 3, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 311, column: 34)
!2704 = !DILocation(line: 315, column: 30, scope: !2687)
!2705 = !DILocation(line: 315, column: 50, scope: !2687)
!2706 = !DILocation(line: 315, column: 36, scope: !2687)
!2707 = !DILocation(line: 315, column: 57, scope: !2687)
!2708 = !{i8 0, i8 2}
!2709 = !{}
!2710 = !DILocation(line: 316, column: 6, scope: !2687)
!2711 = !DILocation(line: 316, column: 19, scope: !2687)
!2712 = !DILocation(line: 315, column: 9, scope: !2687)
!2713 = !DILocation(line: 315, column: 2, scope: !2687)
!2714 = !DILocation(line: 317, column: 1, scope: !2687)
!2715 = distinct !DISubprogram(name: "a0dalloc", scope: !3, file: !3, line: 330, type: !1633, scopeLine: 330, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2716)
!2716 = !{!2717}
!2717 = !DILocalVariable(name: "ptr", arg: 1, scope: !2715, file: !3, line: 330, type: !383)
!2718 = !DILocation(line: 330, column: 16, scope: !2715)
!2719 = !DILocation(line: 331, column: 12, scope: !2715)
!2720 = !DILocation(line: 331, column: 2, scope: !2715)
!2721 = !DILocation(line: 332, column: 1, scope: !2715)
!2722 = distinct !DISubprogram(name: "a0idalloc", scope: !3, file: !3, line: 320, type: !2723, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2725)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{null, !383, !389}
!2725 = !{!2726, !2727}
!2726 = !DILocalVariable(name: "ptr", arg: 1, scope: !2722, file: !3, line: 320, type: !383)
!2727 = !DILocalVariable(name: "is_internal", arg: 2, scope: !2722, file: !3, line: 320, type: !389)
!2728 = !DILocation(line: 320, column: 17, scope: !2722)
!2729 = !DILocation(line: 320, column: 27, scope: !2722)
!2730 = !DILocation(line: 321, column: 23, scope: !2722)
!2731 = !DILocation(line: 321, column: 40, scope: !2722)
!2732 = !DILocation(line: 321, column: 2, scope: !2722)
!2733 = !DILocation(line: 322, column: 1, scope: !2722)
!2734 = distinct !DISubprogram(name: "bootstrap_malloc", scope: !3, file: !3, line: 341, type: !954, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2735)
!2735 = !{!2736}
!2736 = !DILocalVariable(name: "size", arg: 1, scope: !2734, file: !3, line: 341, type: !387)
!2737 = !DILocation(line: 341, column: 25, scope: !2734)
!2738 = !DILocation(line: 342, column: 6, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 342, column: 6)
!2740 = !DILocation(line: 342, column: 6, scope: !2734)
!2741 = !DILocation(line: 343, column: 8, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 342, column: 27)
!2743 = !DILocation(line: 344, column: 2, scope: !2742)
!2744 = !DILocation(line: 346, column: 18, scope: !2734)
!2745 = !DILocation(line: 346, column: 9, scope: !2734)
!2746 = !DILocation(line: 346, column: 2, scope: !2734)
!2747 = distinct !DISubprogram(name: "bootstrap_calloc", scope: !3, file: !3, line: 350, type: !1586, scopeLine: 350, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2748)
!2748 = !{!2749, !2750, !2751}
!2749 = !DILocalVariable(name: "num", arg: 1, scope: !2747, file: !3, line: 350, type: !387)
!2750 = !DILocalVariable(name: "size", arg: 2, scope: !2747, file: !3, line: 350, type: !387)
!2751 = !DILocalVariable(name: "num_size", scope: !2747, file: !3, line: 351, type: !387)
!2752 = !DILocation(line: 350, column: 25, scope: !2747)
!2753 = !DILocation(line: 350, column: 37, scope: !2747)
!2754 = !DILocation(line: 351, column: 2, scope: !2747)
!2755 = !DILocation(line: 351, column: 9, scope: !2747)
!2756 = !DILocation(line: 353, column: 13, scope: !2747)
!2757 = !DILocation(line: 353, column: 19, scope: !2747)
!2758 = !DILocation(line: 353, column: 17, scope: !2747)
!2759 = !DILocation(line: 353, column: 11, scope: !2747)
!2760 = !DILocation(line: 354, column: 6, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 354, column: 6)
!2762 = !DILocation(line: 354, column: 6, scope: !2747)
!2763 = !DILocation(line: 355, column: 3, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 354, column: 31)
!2765 = !DILocation(line: 355, column: 3, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2764, file: !3, line: 355, column: 3)
!2767 = !DILocation(line: 356, column: 12, scope: !2764)
!2768 = !DILocation(line: 357, column: 2, scope: !2764)
!2769 = !DILocation(line: 359, column: 18, scope: !2747)
!2770 = !DILocation(line: 359, column: 9, scope: !2747)
!2771 = !DILocation(line: 360, column: 1, scope: !2747)
!2772 = !DILocation(line: 359, column: 2, scope: !2747)
!2773 = distinct !DISubprogram(name: "bootstrap_free", scope: !3, file: !3, line: 363, type: !1633, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2774)
!2774 = !{!2775}
!2775 = !DILocalVariable(name: "ptr", arg: 1, scope: !2773, file: !3, line: 363, type: !383)
!2776 = !DILocation(line: 363, column: 22, scope: !2773)
!2777 = !DILocation(line: 364, column: 6, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 364, column: 6)
!2779 = !DILocation(line: 364, column: 6, scope: !2773)
!2780 = !DILocation(line: 365, column: 3, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 364, column: 29)
!2782 = !DILocation(line: 368, column: 12, scope: !2773)
!2783 = !DILocation(line: 368, column: 2, scope: !2773)
!2784 = !DILocation(line: 369, column: 1, scope: !2773)
!2785 = distinct !DISubprogram(name: "arena_set", scope: !3, file: !3, line: 372, type: !2786, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2788)
!2786 = !DISubroutineType(types: !2787)
!2787 = !{null, !7, !594}
!2788 = !{!2789, !2790}
!2789 = !DILocalVariable(name: "ind", arg: 1, scope: !2785, file: !3, line: 372, type: !7)
!2790 = !DILocalVariable(name: "arena", arg: 2, scope: !2785, file: !3, line: 372, type: !594)
!2791 = !{!2792, !2792, i64 0}
!2792 = !{!"int", !2660, i64 0}
!2793 = !DILocation(line: 372, column: 20, scope: !2785)
!2794 = !DILocation(line: 372, column: 34, scope: !2785)
!2795 = !DILocation(line: 373, column: 25, scope: !2785)
!2796 = !DILocation(line: 373, column: 18, scope: !2785)
!2797 = !DILocation(line: 373, column: 31, scope: !2785)
!2798 = !DILocation(line: 373, column: 2, scope: !2785)
!2799 = !DILocation(line: 374, column: 1, scope: !2785)
!2800 = distinct !DISubprogram(name: "atomic_store_p", scope: !459, file: !459, line: 83, type: !2801, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2805)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{null, !2803, !383, !2804}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_memory_order_t", file: !80, line: 14, baseType: !79)
!2805 = !{!2806, !2807, !2808}
!2806 = !DILocalVariable(name: "a", arg: 1, scope: !2800, file: !459, line: 83, type: !2803)
!2807 = !DILocalVariable(name: "val", arg: 2, scope: !2800, file: !459, line: 83, type: !383)
!2808 = !DILocalVariable(name: "mo", arg: 3, scope: !2800, file: !459, line: 83, type: !2804)
!2809 = !DILocation(line: 83, column: 1, scope: !2800)
!2810 = !{!2660, !2660, i64 0}
!2811 = distinct !DISubprogram(name: "narenas_total_get", scope: !3, file: !3, line: 387, type: !2812, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!7}
!2814 = !DILocation(line: 388, column: 9, scope: !2811)
!2815 = !DILocation(line: 388, column: 2, scope: !2811)
!2816 = distinct !DISubprogram(name: "atomic_load_u", scope: !459, file: !459, line: 91, type: !2817, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2821)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!7, !2819, !2804}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!2821 = !{!2822, !2823, !2824}
!2822 = !DILocalVariable(name: "a", arg: 1, scope: !2816, file: !459, line: 91, type: !2819)
!2823 = !DILocalVariable(name: "mo", arg: 2, scope: !2816, file: !459, line: 91, type: !2804)
!2824 = !DILocalVariable(name: "result", scope: !2816, file: !459, line: 91, type: !7)
!2825 = !DILocation(line: 91, column: 1, scope: !2816)
!2826 = distinct !DISubprogram(name: "arena_init", scope: !3, file: !3, line: 439, type: !2827, scopeLine: 439, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2878)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!594, !391, !7, !2829}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2831)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "arena_config_t", file: !88, line: 54, baseType: !2832)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arena_config_s", file: !88, line: 44, size: 128, elements: !2833)
!2833 = !{!2834, !2877}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "extent_hooks", scope: !2832, file: !88, line: 46, baseType: !2835, size: 64)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_hooks_t", file: !2837, line: 316, baseType: !2838)
!2837 = !DIFile(filename: "include/jemalloc/internal/../jemalloc.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "f2310a1c99b053ffd112d9650883e687")
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_hooks_s", file: !2837, line: 382, size: 576, elements: !2839)
!2839 = !{!2840, !2845, !2850, !2855, !2860, !2863, !2866, !2867, !2872}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2838, file: !2837, line: 383, baseType: !2841, size: 64)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_alloc_t", file: !2837, line: 323, baseType: !2843)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!383, !2835, !383, !387, !387, !989, !989, !7}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "dalloc", scope: !2838, file: !2837, line: 384, baseType: !2846, size: 64, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_dalloc_t", file: !2837, line: 331, baseType: !2848)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!389, !2835, !383, !387, !389, !7}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2838, file: !2837, line: 385, baseType: !2851, size: 64, offset: 128)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_destroy_t", file: !2837, line: 339, baseType: !2853)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{null, !2835, !383, !387, !389, !7}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !2838, file: !2837, line: 386, baseType: !2856, size: 64, offset: 192)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_commit_t", file: !2837, line: 347, baseType: !2858)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!389, !2835, !383, !387, !387, !387, !7}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "decommit", scope: !2838, file: !2837, line: 387, baseType: !2861, size: 64, offset: 256)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_decommit_t", file: !2837, line: 355, baseType: !2858)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "purge_lazy", scope: !2838, file: !2837, line: 388, baseType: !2864, size: 64, offset: 320)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_purge_t", file: !2837, line: 363, baseType: !2858)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "purge_forced", scope: !2838, file: !2837, line: 389, baseType: !2864, size: 64, offset: 384)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2838, file: !2837, line: 390, baseType: !2868, size: 64, offset: 448)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_split_t", file: !2837, line: 371, baseType: !2870)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!389, !2835, !383, !387, !387, !387, !389, !7}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "merge", scope: !2838, file: !2837, line: 391, baseType: !2873, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "extent_merge_t", file: !2837, line: 379, baseType: !2875)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!389, !2835, !383, !387, !383, !387, !389, !7}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_use_hooks", scope: !2832, file: !88, line: 51, baseType: !389, size: 8, offset: 64)
!2878 = !{!2879, !2880, !2881, !2882}
!2879 = !DILocalVariable(name: "tsdn", arg: 1, scope: !2826, file: !3, line: 439, type: !391)
!2880 = !DILocalVariable(name: "ind", arg: 2, scope: !2826, file: !3, line: 439, type: !7)
!2881 = !DILocalVariable(name: "config", arg: 3, scope: !2826, file: !3, line: 439, type: !2829)
!2882 = !DILocalVariable(name: "arena", scope: !2826, file: !3, line: 440, type: !594)
!2883 = !DILocation(line: 439, column: 20, scope: !2826)
!2884 = !DILocation(line: 439, column: 35, scope: !2826)
!2885 = !DILocation(line: 439, column: 62, scope: !2826)
!2886 = !DILocation(line: 440, column: 2, scope: !2826)
!2887 = !DILocation(line: 440, column: 11, scope: !2826)
!2888 = !DILocation(line: 442, column: 20, scope: !2826)
!2889 = !DILocation(line: 442, column: 2, scope: !2826)
!2890 = !DILocation(line: 443, column: 28, scope: !2826)
!2891 = !DILocation(line: 443, column: 34, scope: !2826)
!2892 = !DILocation(line: 443, column: 39, scope: !2826)
!2893 = !DILocation(line: 443, column: 10, scope: !2826)
!2894 = !DILocation(line: 443, column: 8, scope: !2826)
!2895 = !DILocation(line: 444, column: 22, scope: !2826)
!2896 = !DILocation(line: 444, column: 2, scope: !2826)
!2897 = !DILocation(line: 446, column: 37, scope: !2826)
!2898 = !DILocation(line: 446, column: 43, scope: !2826)
!2899 = !DILocation(line: 446, column: 2, scope: !2826)
!2900 = !DILocation(line: 448, column: 9, scope: !2826)
!2901 = !DILocation(line: 449, column: 1, scope: !2826)
!2902 = !DILocation(line: 448, column: 2, scope: !2826)
!2903 = distinct !DISubprogram(name: "malloc_mutex_lock", scope: !65, file: !65, line: 213, type: !2904, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2906)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{null, !391, !430}
!2906 = !{!2907, !2908}
!2907 = !DILocalVariable(name: "tsdn", arg: 1, scope: !2903, file: !65, line: 213, type: !391)
!2908 = !DILocalVariable(name: "mutex", arg: 2, scope: !2903, file: !65, line: 213, type: !430)
!2909 = !DILocation(line: 213, column: 27, scope: !2903)
!2910 = !DILocation(line: 213, column: 49, scope: !2903)
!2911 = !DILocation(line: 214, column: 49, scope: !2903)
!2912 = !DILocation(line: 214, column: 27, scope: !2903)
!2913 = !DILocation(line: 214, column: 57, scope: !2903)
!2914 = !DILocation(line: 214, column: 64, scope: !2903)
!2915 = !DILocation(line: 214, column: 2, scope: !2903)
!2916 = !DILocation(line: 216, column: 34, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !65, line: 216, column: 7)
!2918 = distinct !DILexicalBlock(scope: !2919, file: !65, line: 215, column: 18)
!2919 = distinct !DILexicalBlock(scope: !2903, file: !65, line: 215, column: 6)
!2920 = !DILocation(line: 216, column: 7, scope: !2917)
!2921 = !DILocation(line: 216, column: 7, scope: !2918)
!2922 = !DILocation(line: 217, column: 27, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2917, file: !65, line: 216, column: 42)
!2924 = !DILocation(line: 217, column: 4, scope: !2923)
!2925 = !DILocation(line: 218, column: 20, scope: !2923)
!2926 = !DILocation(line: 218, column: 27, scope: !2923)
!2927 = !DILocation(line: 218, column: 4, scope: !2923)
!2928 = !DILocation(line: 219, column: 3, scope: !2923)
!2929 = !DILocation(line: 220, column: 28, scope: !2918)
!2930 = !DILocation(line: 220, column: 34, scope: !2918)
!2931 = !DILocation(line: 220, column: 3, scope: !2918)
!2932 = !DILocation(line: 222, column: 37, scope: !2903)
!2933 = !DILocation(line: 222, column: 15, scope: !2903)
!2934 = !DILocation(line: 222, column: 45, scope: !2903)
!2935 = !DILocation(line: 222, column: 52, scope: !2903)
!2936 = !DILocation(line: 222, column: 2, scope: !2903)
!2937 = !DILocation(line: 223, column: 1, scope: !2903)
!2938 = distinct !DISubprogram(name: "arena_init_locked", scope: !3, file: !3, line: 393, type: !2827, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2939)
!2939 = !{!2940, !2941, !2942, !2943}
!2940 = !DILocalVariable(name: "tsdn", arg: 1, scope: !2938, file: !3, line: 393, type: !391)
!2941 = !DILocalVariable(name: "ind", arg: 2, scope: !2938, file: !3, line: 393, type: !7)
!2942 = !DILocalVariable(name: "config", arg: 3, scope: !2938, file: !3, line: 393, type: !2829)
!2943 = !DILocalVariable(name: "arena", scope: !2938, file: !3, line: 394, type: !594)
!2944 = !DILocation(line: 393, column: 27, scope: !2938)
!2945 = !DILocation(line: 393, column: 42, scope: !2938)
!2946 = !DILocation(line: 393, column: 69, scope: !2938)
!2947 = !DILocation(line: 394, column: 2, scope: !2938)
!2948 = !DILocation(line: 394, column: 11, scope: !2938)
!2949 = !DILocation(line: 396, column: 2, scope: !2938)
!2950 = !DILocation(line: 396, column: 2, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 396, column: 2)
!2952 = !DILocation(line: 397, column: 6, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 397, column: 6)
!2954 = !DILocation(line: 397, column: 10, scope: !2953)
!2955 = !DILocation(line: 397, column: 6, scope: !2938)
!2956 = !DILocation(line: 398, column: 3, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 397, column: 34)
!2958 = !DILocation(line: 400, column: 6, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 400, column: 6)
!2960 = !DILocation(line: 400, column: 13, scope: !2959)
!2961 = !DILocation(line: 400, column: 10, scope: !2959)
!2962 = !DILocation(line: 400, column: 6, scope: !2938)
!2963 = !DILocation(line: 401, column: 3, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 400, column: 34)
!2965 = !DILocation(line: 402, column: 2, scope: !2964)
!2966 = !DILocation(line: 408, column: 20, scope: !2938)
!2967 = !DILocation(line: 408, column: 26, scope: !2938)
!2968 = !DILocation(line: 408, column: 10, scope: !2938)
!2969 = !DILocation(line: 408, column: 8, scope: !2938)
!2970 = !DILocation(line: 409, column: 6, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 409, column: 6)
!2972 = !DILocation(line: 409, column: 12, scope: !2971)
!2973 = !DILocation(line: 409, column: 6, scope: !2938)
!2974 = !DILocation(line: 410, column: 3, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 409, column: 21)
!2976 = !DILocation(line: 410, column: 3, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 410, column: 3)
!2978 = !DILocation(line: 411, column: 10, scope: !2975)
!2979 = !DILocation(line: 411, column: 3, scope: !2975)
!2980 = !DILocation(line: 415, column: 20, scope: !2938)
!2981 = !DILocation(line: 415, column: 26, scope: !2938)
!2982 = !DILocation(line: 415, column: 31, scope: !2938)
!2983 = !DILocation(line: 415, column: 10, scope: !2938)
!2984 = !DILocation(line: 415, column: 8, scope: !2938)
!2985 = !DILocation(line: 417, column: 9, scope: !2938)
!2986 = !DILocation(line: 417, column: 2, scope: !2938)
!2987 = !DILocation(line: 418, column: 1, scope: !2938)
!2988 = distinct !DISubprogram(name: "malloc_mutex_unlock", scope: !65, file: !65, line: 226, type: !2904, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2989)
!2989 = !{!2990, !2991}
!2990 = !DILocalVariable(name: "tsdn", arg: 1, scope: !2988, file: !65, line: 226, type: !391)
!2991 = !DILocalVariable(name: "mutex", arg: 2, scope: !2988, file: !65, line: 226, type: !430)
!2992 = !DILocation(line: 226, column: 29, scope: !2988)
!2993 = !DILocation(line: 226, column: 51, scope: !2988)
!2994 = !DILocation(line: 227, column: 18, scope: !2988)
!2995 = !DILocation(line: 227, column: 25, scope: !2988)
!2996 = !DILocation(line: 227, column: 2, scope: !2988)
!2997 = !DILocation(line: 228, column: 39, scope: !2988)
!2998 = !DILocation(line: 228, column: 17, scope: !2988)
!2999 = !DILocation(line: 228, column: 47, scope: !2988)
!3000 = !DILocation(line: 228, column: 54, scope: !2988)
!3001 = !DILocation(line: 228, column: 2, scope: !2988)
!3002 = !DILocation(line: 230, column: 3, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !65, line: 229, column: 18)
!3004 = distinct !DILexicalBlock(scope: !2988, file: !65, line: 229, column: 6)
!3005 = !DILocation(line: 232, column: 1, scope: !2988)
!3006 = distinct !DISubprogram(name: "arena_new_create_background_thread", scope: !3, file: !3, line: 421, type: !3007, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3009)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{null, !391, !7}
!3009 = !{!3010, !3011}
!3010 = !DILocalVariable(name: "tsdn", arg: 1, scope: !3006, file: !3, line: 421, type: !391)
!3011 = !DILocalVariable(name: "ind", arg: 2, scope: !3006, file: !3, line: 421, type: !7)
!3012 = !DILocation(line: 421, column: 44, scope: !3006)
!3013 = !DILocation(line: 421, column: 59, scope: !3006)
!3014 = !DILocation(line: 422, column: 6, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 422, column: 6)
!3016 = !DILocation(line: 422, column: 10, scope: !3015)
!3017 = !DILocation(line: 422, column: 6, scope: !3006)
!3018 = !DILocation(line: 423, column: 3, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 422, column: 16)
!3020 = !DILocation(line: 429, column: 47, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 429, column: 6)
!3022 = !DILocation(line: 429, column: 33, scope: !3021)
!3023 = !DILocation(line: 429, column: 6, scope: !3006)
!3024 = !DILocation(line: 430, column: 41, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 430, column: 7)
!3026 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 429, column: 53)
!3027 = !DILocation(line: 430, column: 32, scope: !3025)
!3028 = !DILocation(line: 430, column: 48, scope: !3025)
!3029 = !DILocation(line: 430, column: 7, scope: !3025)
!3030 = !DILocation(line: 430, column: 7, scope: !3026)
!3031 = !DILocation(line: 432, column: 46, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 430, column: 54)
!3033 = !DILocation(line: 431, column: 4, scope: !3032)
!3034 = !DILocation(line: 433, column: 4, scope: !3032)
!3035 = !DILocation(line: 435, column: 2, scope: !3026)
!3036 = !DILocation(line: 436, column: 1, scope: !3006)
!3037 = distinct !DISubprogram(name: "arena_migrate", scope: !3, file: !3, line: 472, type: !3038, scopeLine: 472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3040)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{null, !1347, !594, !594}
!3040 = !{!3041, !3042, !3043}
!3041 = !DILocalVariable(name: "tsd", arg: 1, scope: !3037, file: !3, line: 472, type: !1347)
!3042 = !DILocalVariable(name: "oldarena", arg: 2, scope: !3037, file: !3, line: 472, type: !594)
!3043 = !DILocalVariable(name: "newarena", arg: 3, scope: !3037, file: !3, line: 472, type: !594)
!3044 = !DILocation(line: 472, column: 22, scope: !3037)
!3045 = !DILocation(line: 472, column: 36, scope: !3037)
!3046 = !DILocation(line: 472, column: 55, scope: !3037)
!3047 = !DILocation(line: 473, column: 2, scope: !3037)
!3048 = !DILocation(line: 473, column: 2, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 473, column: 2)
!3050 = !DILocation(line: 474, column: 2, scope: !3037)
!3051 = !DILocation(line: 474, column: 2, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 474, column: 2)
!3053 = !DILocation(line: 476, column: 21, scope: !3037)
!3054 = !DILocation(line: 476, column: 2, scope: !3037)
!3055 = !DILocation(line: 477, column: 21, scope: !3037)
!3056 = !DILocation(line: 477, column: 2, scope: !3037)
!3057 = !DILocation(line: 478, column: 16, scope: !3037)
!3058 = !DILocation(line: 478, column: 21, scope: !3037)
!3059 = !DILocation(line: 478, column: 2, scope: !3037)
!3060 = !DILocation(line: 480, column: 25, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 480, column: 6)
!3062 = !DILocation(line: 480, column: 6, scope: !3061)
!3063 = !DILocation(line: 480, column: 42, scope: !3061)
!3064 = !DILocation(line: 480, column: 6, scope: !3037)
!3065 = !DILocation(line: 482, column: 24, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 480, column: 48)
!3067 = !DILocation(line: 482, column: 15, scope: !3066)
!3068 = !DILocation(line: 482, column: 30, scope: !3066)
!3069 = !DILocation(line: 482, column: 3, scope: !3066)
!3070 = !DILocation(line: 484, column: 2, scope: !3066)
!3071 = !DILocation(line: 485, column: 1, scope: !3037)
!3072 = !DISubprogram(name: "arena_nthreads_dec", scope: !3073, file: !3073, line: 99, type: !3074, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3073 = !DIFile(filename: "include/jemalloc/internal/arena_externs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "14fcb24b41677b10dad34d5e31411d63")
!3074 = !DISubroutineType(types: !3075)
!3075 = !{null, !594, !389}
!3076 = !DISubprogram(name: "arena_nthreads_inc", scope: !3073, file: !3073, line: 98, type: !3074, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3077 = distinct !DISubprogram(name: "tsd_arena_set", scope: !145, file: !145, line: 386, type: !3078, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3080)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{null, !1347, !594}
!3080 = !{!3081, !3082}
!3081 = !DILocalVariable(name: "tsd", arg: 1, scope: !3077, file: !145, line: 386, type: !1347)
!3082 = !DILocalVariable(name: "val", arg: 2, scope: !3077, file: !145, line: 386, type: !594)
!3083 = !DILocation(line: 386, column: 1, scope: !3077)
!3084 = !DILocation(line: 386, column: 1, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3077, file: !145, line: 386, column: 1)
!3086 = !DISubprogram(name: "arena_nthreads_get", scope: !3073, file: !3073, line: 97, type: !3087, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3087 = !DISubroutineType(types: !3088)
!3088 = !{!7, !594, !389}
!3089 = !DISubprogram(name: "arena_decay", scope: !3073, file: !3073, line: 57, type: !3090, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{null, !391, !594, !389, !389}
!3092 = distinct !DISubprogram(name: "tsd_tsdn", scope: !145, file: !145, line: 282, type: !3093, scopeLine: 282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3095)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!391, !1347}
!3095 = !{!3096}
!3096 = !DILocalVariable(name: "tsd", arg: 1, scope: !3092, file: !145, line: 282, type: !1347)
!3097 = !DILocation(line: 282, column: 17, scope: !3092)
!3098 = !DILocation(line: 283, column: 19, scope: !3092)
!3099 = !DILocation(line: 283, column: 2, scope: !3092)
!3100 = distinct !DISubprogram(name: "arena_choose_hard", scope: !3, file: !3, line: 503, type: !3101, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3103)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{!594, !1347, !389}
!3103 = !{!3104, !3105, !3106, !3107, !3110, !3113, !3114, !3116, !3117, !3119}
!3104 = !DILocalVariable(name: "tsd", arg: 1, scope: !3100, file: !3, line: 503, type: !1347)
!3105 = !DILocalVariable(name: "internal", arg: 2, scope: !3100, file: !3, line: 503, type: !389)
!3106 = !DILocalVariable(name: "ret", scope: !3100, file: !3, line: 504, type: !594)
!3107 = !DILocalVariable(name: "choose", scope: !3108, file: !3, line: 507, type: !7)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 506, column: 67)
!3109 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 506, column: 6)
!3110 = !DILocalVariable(name: "i", scope: !3111, file: !3, line: 517, type: !7)
!3111 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 516, column: 24)
!3112 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 516, column: 6)
!3113 = !DILocalVariable(name: "j", scope: !3111, file: !3, line: 517, type: !7)
!3114 = !DILocalVariable(name: "choose", scope: !3111, file: !3, line: 517, type: !3115)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !605)
!3116 = !DILocalVariable(name: "first_null", scope: !3111, file: !3, line: 517, type: !7)
!3117 = !DILocalVariable(name: "is_new_arena", scope: !3111, file: !3, line: 518, type: !3118)
!3118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 16, elements: !605)
!3119 = !DILocalVariable(name: "arena", scope: !3120, file: !3, line: 578, type: !594)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 577, column: 11)
!3121 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 566, column: 8)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 565, column: 27)
!3123 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 565, column: 3)
!3124 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 565, column: 3)
!3125 = !DILocation(line: 503, column: 26, scope: !3100)
!3126 = !DILocation(line: 503, column: 36, scope: !3100)
!3127 = !DILocation(line: 504, column: 2, scope: !3100)
!3128 = !DILocation(line: 504, column: 11, scope: !3100)
!3129 = !DILocation(line: 506, column: 27, scope: !3109)
!3130 = !DILocation(line: 506, column: 6, scope: !3100)
!3131 = !DILocation(line: 507, column: 3, scope: !3108)
!3132 = !DILocation(line: 507, column: 12, scope: !3108)
!3133 = !DILocation(line: 507, column: 21, scope: !3108)
!3134 = !DILocation(line: 508, column: 28, scope: !3108)
!3135 = !DILocation(line: 508, column: 19, scope: !3108)
!3136 = !DILocation(line: 508, column: 34, scope: !3108)
!3137 = !DILocation(line: 508, column: 9, scope: !3108)
!3138 = !DILocation(line: 508, column: 7, scope: !3108)
!3139 = !DILocation(line: 509, column: 3, scope: !3108)
!3140 = !DILocation(line: 509, column: 3, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 509, column: 3)
!3142 = !DILocation(line: 510, column: 14, scope: !3108)
!3143 = !DILocation(line: 510, column: 33, scope: !3108)
!3144 = !DILocation(line: 510, column: 19, scope: !3108)
!3145 = !DILocation(line: 510, column: 3, scope: !3108)
!3146 = !DILocation(line: 511, column: 14, scope: !3108)
!3147 = !DILocation(line: 511, column: 33, scope: !3108)
!3148 = !DILocation(line: 511, column: 19, scope: !3108)
!3149 = !DILocation(line: 511, column: 3, scope: !3108)
!3150 = !DILocation(line: 513, column: 10, scope: !3108)
!3151 = !DILocation(line: 513, column: 3, scope: !3108)
!3152 = !DILocation(line: 514, column: 2, scope: !3109)
!3153 = !DILocation(line: 516, column: 6, scope: !3112)
!3154 = !DILocation(line: 516, column: 19, scope: !3112)
!3155 = !DILocation(line: 516, column: 6, scope: !3100)
!3156 = !DILocation(line: 517, column: 3, scope: !3111)
!3157 = !DILocation(line: 517, column: 12, scope: !3111)
!3158 = !DILocation(line: 517, column: 15, scope: !3111)
!3159 = !DILocation(line: 517, column: 18, scope: !3111)
!3160 = !DILocation(line: 517, column: 29, scope: !3111)
!3161 = !DILocation(line: 518, column: 3, scope: !3111)
!3162 = !DILocation(line: 518, column: 8, scope: !3111)
!3163 = !DILocation(line: 528, column: 10, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 528, column: 3)
!3165 = !DILocation(line: 528, column: 8, scope: !3164)
!3166 = !DILocation(line: 528, column: 15, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 528, column: 3)
!3168 = !DILocation(line: 528, column: 17, scope: !3167)
!3169 = !DILocation(line: 528, column: 3, scope: !3164)
!3170 = !DILocation(line: 529, column: 11, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 528, column: 27)
!3172 = !DILocation(line: 529, column: 4, scope: !3171)
!3173 = !DILocation(line: 529, column: 14, scope: !3171)
!3174 = !DILocation(line: 530, column: 17, scope: !3171)
!3175 = !DILocation(line: 530, column: 4, scope: !3171)
!3176 = !DILocation(line: 530, column: 20, scope: !3171)
!3177 = !DILocation(line: 531, column: 3, scope: !3171)
!3178 = !DILocation(line: 528, column: 23, scope: !3167)
!3179 = !DILocation(line: 528, column: 3, scope: !3167)
!3180 = distinct !{!3180, !3169, !3181, !3182}
!3181 = !DILocation(line: 531, column: 3, scope: !3164)
!3182 = !{!"llvm.loop.mustprogress"}
!3183 = !DILocation(line: 533, column: 16, scope: !3111)
!3184 = !DILocation(line: 533, column: 14, scope: !3111)
!3185 = !DILocation(line: 534, column: 30, scope: !3111)
!3186 = !DILocation(line: 534, column: 21, scope: !3111)
!3187 = !DILocation(line: 534, column: 3, scope: !3111)
!3188 = !DILocation(line: 535, column: 3, scope: !3111)
!3189 = !DILocation(line: 535, column: 3, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 535, column: 3)
!3191 = !DILocation(line: 536, column: 10, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 536, column: 3)
!3193 = !DILocation(line: 536, column: 8, scope: !3192)
!3194 = !DILocation(line: 536, column: 15, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 536, column: 3)
!3196 = !DILocation(line: 536, column: 19, scope: !3195)
!3197 = !DILocation(line: 536, column: 17, scope: !3195)
!3198 = !DILocation(line: 536, column: 3, scope: !3192)
!3199 = !DILocation(line: 537, column: 27, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 537, column: 8)
!3201 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 536, column: 38)
!3202 = !DILocation(line: 537, column: 18, scope: !3200)
!3203 = !DILocation(line: 537, column: 33, scope: !3200)
!3204 = !DILocation(line: 537, column: 8, scope: !3200)
!3205 = !DILocation(line: 537, column: 43, scope: !3200)
!3206 = !DILocation(line: 537, column: 8, scope: !3201)
!3207 = !DILocation(line: 542, column: 12, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 542, column: 5)
!3209 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 537, column: 52)
!3210 = !DILocation(line: 542, column: 10, scope: !3208)
!3211 = !DILocation(line: 542, column: 17, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 542, column: 5)
!3213 = !DILocation(line: 542, column: 19, scope: !3212)
!3214 = !DILocation(line: 542, column: 5, scope: !3208)
!3215 = !DILocation(line: 544, column: 19, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3217, file: !3, line: 543, column: 10)
!3217 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 542, column: 29)
!3218 = !DILocation(line: 544, column: 10, scope: !3216)
!3219 = !DILocation(line: 544, column: 25, scope: !3216)
!3220 = !DILocation(line: 543, column: 29, scope: !3216)
!3221 = !DILocation(line: 544, column: 38, scope: !3216)
!3222 = !DILocation(line: 544, column: 37, scope: !3216)
!3223 = !DILocation(line: 544, column: 36, scope: !3216)
!3224 = !DILocation(line: 543, column: 10, scope: !3216)
!3225 = !DILocation(line: 546, column: 19, scope: !3216)
!3226 = !DILocation(line: 546, column: 10, scope: !3216)
!3227 = !DILocation(line: 546, column: 32, scope: !3216)
!3228 = !DILocation(line: 546, column: 25, scope: !3216)
!3229 = !DILocation(line: 545, column: 29, scope: !3216)
!3230 = !DILocation(line: 547, column: 12, scope: !3216)
!3231 = !DILocation(line: 547, column: 11, scope: !3216)
!3232 = !DILocation(line: 547, column: 10, scope: !3216)
!3233 = !DILocation(line: 545, column: 10, scope: !3216)
!3234 = !DILocation(line: 544, column: 41, scope: !3216)
!3235 = !DILocation(line: 543, column: 10, scope: !3217)
!3236 = !DILocation(line: 548, column: 19, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 547, column: 16)
!3238 = !DILocation(line: 548, column: 14, scope: !3237)
!3239 = !DILocation(line: 548, column: 7, scope: !3237)
!3240 = !DILocation(line: 548, column: 17, scope: !3237)
!3241 = !DILocation(line: 549, column: 6, scope: !3237)
!3242 = !DILocation(line: 550, column: 5, scope: !3217)
!3243 = !DILocation(line: 542, column: 25, scope: !3212)
!3244 = !DILocation(line: 542, column: 5, scope: !3212)
!3245 = distinct !{!3245, !3214, !3246, !3182}
!3246 = !DILocation(line: 550, column: 5, scope: !3208)
!3247 = !DILocation(line: 551, column: 4, scope: !3209)
!3248 = !DILocation(line: 551, column: 15, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 551, column: 15)
!3250 = !DILocation(line: 551, column: 29, scope: !3249)
!3251 = !DILocation(line: 551, column: 26, scope: !3249)
!3252 = !DILocation(line: 551, column: 15, scope: !3200)
!3253 = !DILocation(line: 561, column: 18, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 551, column: 43)
!3255 = !DILocation(line: 561, column: 16, scope: !3254)
!3256 = !DILocation(line: 562, column: 4, scope: !3254)
!3257 = !DILocation(line: 563, column: 3, scope: !3201)
!3258 = !DILocation(line: 536, column: 34, scope: !3195)
!3259 = !DILocation(line: 536, column: 3, scope: !3195)
!3260 = distinct !{!3260, !3198, !3261, !3182}
!3261 = !DILocation(line: 563, column: 3, scope: !3192)
!3262 = !DILocation(line: 565, column: 10, scope: !3124)
!3263 = !DILocation(line: 565, column: 8, scope: !3124)
!3264 = !DILocation(line: 565, column: 15, scope: !3123)
!3265 = !DILocation(line: 565, column: 17, scope: !3123)
!3266 = !DILocation(line: 565, column: 3, scope: !3124)
!3267 = !DILocation(line: 566, column: 46, scope: !3121)
!3268 = !DILocation(line: 566, column: 37, scope: !3121)
!3269 = !DILocation(line: 567, column: 15, scope: !3121)
!3270 = !DILocation(line: 567, column: 8, scope: !3121)
!3271 = !DILocation(line: 566, column: 27, scope: !3121)
!3272 = !DILocation(line: 567, column: 29, scope: !3121)
!3273 = !DILocation(line: 567, column: 28, scope: !3121)
!3274 = !DILocation(line: 567, column: 27, scope: !3121)
!3275 = !DILocation(line: 566, column: 8, scope: !3121)
!3276 = !DILocation(line: 567, column: 32, scope: !3121)
!3277 = !DILocation(line: 567, column: 37, scope: !3121)
!3278 = !DILocation(line: 567, column: 40, scope: !3121)
!3279 = !DILocation(line: 568, column: 8, scope: !3121)
!3280 = !DILocation(line: 567, column: 51, scope: !3121)
!3281 = !DILocation(line: 566, column: 8, scope: !3122)
!3282 = !DILocation(line: 573, column: 11, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 573, column: 9)
!3284 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 568, column: 22)
!3285 = !DILocation(line: 573, column: 10, scope: !3283)
!3286 = !DILocation(line: 573, column: 9, scope: !3283)
!3287 = !DILocation(line: 573, column: 16, scope: !3283)
!3288 = !DILocation(line: 573, column: 13, scope: !3283)
!3289 = !DILocation(line: 573, column: 9, scope: !3284)
!3290 = !DILocation(line: 574, column: 31, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 573, column: 26)
!3292 = !DILocation(line: 574, column: 22, scope: !3291)
!3293 = !DILocation(line: 575, column: 17, scope: !3291)
!3294 = !DILocation(line: 575, column: 10, scope: !3291)
!3295 = !DILocation(line: 574, column: 12, scope: !3291)
!3296 = !DILocation(line: 574, column: 10, scope: !3291)
!3297 = !DILocation(line: 576, column: 5, scope: !3291)
!3298 = !DILocation(line: 577, column: 4, scope: !3284)
!3299 = !DILocation(line: 578, column: 5, scope: !3120)
!3300 = !DILocation(line: 578, column: 14, scope: !3120)
!3301 = !DILocation(line: 581, column: 17, scope: !3120)
!3302 = !DILocation(line: 581, column: 12, scope: !3120)
!3303 = !DILocation(line: 581, column: 5, scope: !3120)
!3304 = !DILocation(line: 581, column: 15, scope: !3120)
!3305 = !DILocation(line: 582, column: 40, scope: !3120)
!3306 = !DILocation(line: 582, column: 31, scope: !3120)
!3307 = !DILocation(line: 583, column: 16, scope: !3120)
!3308 = !DILocation(line: 583, column: 9, scope: !3120)
!3309 = !DILocation(line: 582, column: 13, scope: !3120)
!3310 = !DILocation(line: 582, column: 11, scope: !3120)
!3311 = !DILocation(line: 584, column: 9, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 584, column: 9)
!3313 = !DILocation(line: 584, column: 15, scope: !3312)
!3314 = !DILocation(line: 584, column: 9, scope: !3120)
!3315 = !DILocation(line: 585, column: 35, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 584, column: 24)
!3317 = !DILocation(line: 585, column: 26, scope: !3316)
!3318 = !DILocation(line: 585, column: 6, scope: !3316)
!3319 = !DILocation(line: 587, column: 6, scope: !3316)
!3320 = !DILocation(line: 589, column: 18, scope: !3120)
!3321 = !DILocation(line: 589, column: 5, scope: !3120)
!3322 = !DILocation(line: 589, column: 21, scope: !3120)
!3323 = !DILocation(line: 590, column: 11, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 590, column: 9)
!3325 = !DILocation(line: 590, column: 10, scope: !3324)
!3326 = !DILocation(line: 590, column: 9, scope: !3324)
!3327 = !DILocation(line: 590, column: 16, scope: !3324)
!3328 = !DILocation(line: 590, column: 13, scope: !3324)
!3329 = !DILocation(line: 590, column: 9, scope: !3120)
!3330 = !DILocation(line: 591, column: 12, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 590, column: 26)
!3332 = !DILocation(line: 591, column: 10, scope: !3331)
!3333 = !DILocation(line: 592, column: 5, scope: !3331)
!3334 = !DILocation(line: 593, column: 4, scope: !3121)
!3335 = !DILocation(line: 594, column: 15, scope: !3122)
!3336 = !DILocation(line: 594, column: 27, scope: !3122)
!3337 = !DILocation(line: 594, column: 20, scope: !3122)
!3338 = !DILocation(line: 594, column: 33, scope: !3122)
!3339 = !DILocation(line: 594, column: 32, scope: !3122)
!3340 = !DILocation(line: 594, column: 31, scope: !3122)
!3341 = !DILocation(line: 594, column: 4, scope: !3122)
!3342 = !DILocation(line: 595, column: 3, scope: !3122)
!3343 = !DILocation(line: 565, column: 23, scope: !3123)
!3344 = !DILocation(line: 565, column: 3, scope: !3123)
!3345 = distinct !{!3345, !3266, !3346, !3182}
!3346 = !DILocation(line: 595, column: 3, scope: !3124)
!3347 = !DILocation(line: 596, column: 32, scope: !3111)
!3348 = !DILocation(line: 596, column: 23, scope: !3111)
!3349 = !DILocation(line: 596, column: 3, scope: !3111)
!3350 = !DILocation(line: 598, column: 10, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 598, column: 3)
!3352 = !DILocation(line: 598, column: 8, scope: !3351)
!3353 = !DILocation(line: 598, column: 15, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 598, column: 3)
!3355 = !DILocation(line: 598, column: 17, scope: !3354)
!3356 = !DILocation(line: 598, column: 3, scope: !3351)
!3357 = !DILocation(line: 599, column: 21, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 599, column: 8)
!3359 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 598, column: 27)
!3360 = !DILocation(line: 599, column: 8, scope: !3358)
!3361 = !DILocation(line: 599, column: 8, scope: !3359)
!3362 = !DILocation(line: 600, column: 5, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 599, column: 25)
!3364 = !DILocation(line: 600, column: 5, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 600, column: 5)
!3366 = !DILocation(line: 602, column: 18, scope: !3363)
!3367 = !DILocation(line: 602, column: 9, scope: !3363)
!3368 = !DILocation(line: 602, column: 31, scope: !3363)
!3369 = !DILocation(line: 602, column: 24, scope: !3363)
!3370 = !DILocation(line: 601, column: 5, scope: !3363)
!3371 = !DILocation(line: 603, column: 4, scope: !3363)
!3372 = !DILocation(line: 604, column: 3, scope: !3359)
!3373 = !DILocation(line: 598, column: 23, scope: !3354)
!3374 = !DILocation(line: 598, column: 3, scope: !3354)
!3375 = distinct !{!3375, !3356, !3376, !3182}
!3376 = !DILocation(line: 604, column: 3, scope: !3351)
!3377 = !DILocation(line: 606, column: 2, scope: !3112)
!3378 = !DILocation(line: 606, column: 2, scope: !3111)
!3379 = !DILocation(line: 607, column: 28, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 606, column: 9)
!3381 = !DILocation(line: 607, column: 19, scope: !3380)
!3382 = !DILocation(line: 607, column: 9, scope: !3380)
!3383 = !DILocation(line: 607, column: 7, scope: !3380)
!3384 = !DILocation(line: 608, column: 14, scope: !3380)
!3385 = !DILocation(line: 608, column: 3, scope: !3380)
!3386 = !DILocation(line: 609, column: 14, scope: !3380)
!3387 = !DILocation(line: 609, column: 3, scope: !3380)
!3388 = !DILocation(line: 612, column: 9, scope: !3100)
!3389 = !DILocation(line: 612, column: 2, scope: !3100)
!3390 = !DILocation(line: 613, column: 1, scope: !3100)
!3391 = distinct !DISubprogram(name: "percpu_arena_choose", scope: !3392, file: !3392, line: 25, type: !2812, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3393)
!3392 = !DIFile(filename: "include/jemalloc/internal/jemalloc_internal_inlines_a.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "49854c4289a7a3a6ed06e6746e40d247")
!3393 = !{!3394, !3395}
!3394 = !DILocalVariable(name: "cpuid", scope: !3391, file: !3392, line: 28, type: !1423)
!3395 = !DILocalVariable(name: "arena_ind", scope: !3391, file: !3392, line: 31, type: !7)
!3396 = !DILocation(line: 26, column: 2, scope: !3391)
!3397 = !DILocation(line: 26, column: 2, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3391, file: !3392, line: 26, column: 2)
!3399 = !DILocation(line: 28, column: 2, scope: !3391)
!3400 = !DILocation(line: 28, column: 17, scope: !3391)
!3401 = !DILocation(line: 28, column: 25, scope: !3391)
!3402 = !DILocation(line: 29, column: 2, scope: !3391)
!3403 = !DILocation(line: 29, column: 2, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3391, file: !3392, line: 29, column: 2)
!3405 = !DILocation(line: 31, column: 2, scope: !3391)
!3406 = !DILocation(line: 31, column: 11, scope: !3391)
!3407 = !DILocation(line: 32, column: 7, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3391, file: !3392, line: 32, column: 6)
!3409 = !DILocation(line: 32, column: 24, scope: !3408)
!3410 = !DILocation(line: 32, column: 41, scope: !3408)
!3411 = !DILocation(line: 32, column: 55, scope: !3408)
!3412 = !DILocation(line: 32, column: 63, scope: !3408)
!3413 = !DILocation(line: 32, column: 69, scope: !3408)
!3414 = !DILocation(line: 32, column: 61, scope: !3408)
!3415 = !DILocation(line: 32, column: 6, scope: !3391)
!3416 = !DILocation(line: 34, column: 15, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3408, file: !3392, line: 33, column: 10)
!3418 = !DILocation(line: 34, column: 13, scope: !3417)
!3419 = !DILocation(line: 35, column: 2, scope: !3417)
!3420 = !DILocation(line: 36, column: 3, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3408, file: !3392, line: 35, column: 9)
!3422 = !DILocation(line: 36, column: 3, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3421, file: !3392, line: 36, column: 3)
!3424 = !DILocation(line: 38, column: 15, scope: !3421)
!3425 = !DILocation(line: 38, column: 23, scope: !3421)
!3426 = !DILocation(line: 38, column: 29, scope: !3421)
!3427 = !DILocation(line: 38, column: 21, scope: !3421)
!3428 = !DILocation(line: 38, column: 13, scope: !3421)
!3429 = !DILocation(line: 41, column: 9, scope: !3391)
!3430 = !DILocation(line: 42, column: 1, scope: !3391)
!3431 = !DILocation(line: 41, column: 2, scope: !3391)
!3432 = distinct !DISubprogram(name: "arena_get", scope: !3392, file: !3392, line: 60, type: !3433, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3435)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!594, !391, !7, !389}
!3435 = !{!3436, !3437, !3438, !3439}
!3436 = !DILocalVariable(name: "tsdn", arg: 1, scope: !3432, file: !3392, line: 60, type: !391)
!3437 = !DILocalVariable(name: "ind", arg: 2, scope: !3432, file: !3392, line: 60, type: !7)
!3438 = !DILocalVariable(name: "init_if_missing", arg: 3, scope: !3432, file: !3392, line: 60, type: !389)
!3439 = !DILocalVariable(name: "ret", scope: !3432, file: !3392, line: 61, type: !594)
!3440 = !DILocation(line: 60, column: 19, scope: !3432)
!3441 = !DILocation(line: 60, column: 34, scope: !3432)
!3442 = !DILocation(line: 60, column: 44, scope: !3432)
!3443 = !DILocation(line: 61, column: 2, scope: !3432)
!3444 = !DILocation(line: 61, column: 11, scope: !3432)
!3445 = !DILocation(line: 63, column: 2, scope: !3432)
!3446 = !DILocation(line: 63, column: 2, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3432, file: !3392, line: 63, column: 2)
!3448 = !DILocation(line: 65, column: 41, scope: !3432)
!3449 = !DILocation(line: 65, column: 34, scope: !3432)
!3450 = !DILocation(line: 65, column: 19, scope: !3432)
!3451 = !DILocation(line: 65, column: 6, scope: !3432)
!3452 = !DILocation(line: 66, column: 6, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3432, file: !3392, line: 66, column: 6)
!3454 = !DILocation(line: 66, column: 6, scope: !3432)
!3455 = !DILocation(line: 67, column: 7, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !3392, line: 67, column: 7)
!3457 = distinct !DILexicalBlock(scope: !3453, file: !3392, line: 66, column: 29)
!3458 = !DILocation(line: 67, column: 7, scope: !3457)
!3459 = !DILocation(line: 68, column: 21, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !3392, line: 67, column: 24)
!3461 = !DILocation(line: 68, column: 27, scope: !3460)
!3462 = !DILocation(line: 68, column: 10, scope: !3460)
!3463 = !DILocation(line: 68, column: 8, scope: !3460)
!3464 = !DILocation(line: 69, column: 3, scope: !3460)
!3465 = !DILocation(line: 70, column: 2, scope: !3457)
!3466 = !DILocation(line: 71, column: 9, scope: !3432)
!3467 = !DILocation(line: 72, column: 1, scope: !3432)
!3468 = !DILocation(line: 71, column: 2, scope: !3432)
!3469 = distinct !DISubprogram(name: "arena_bind", scope: !3, file: !3, line: 452, type: !3470, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3472)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{null, !1347, !7, !389}
!3472 = !{!3473, !3474, !3475, !3476, !3477, !3480, !3482}
!3473 = !DILocalVariable(name: "tsd", arg: 1, scope: !3469, file: !3, line: 452, type: !1347)
!3474 = !DILocalVariable(name: "ind", arg: 2, scope: !3469, file: !3, line: 452, type: !7)
!3475 = !DILocalVariable(name: "internal", arg: 3, scope: !3469, file: !3, line: 452, type: !389)
!3476 = !DILocalVariable(name: "arena", scope: !3469, file: !3, line: 453, type: !594)
!3477 = !DILocalVariable(name: "shard", scope: !3478, file: !3, line: 460, type: !7)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 458, column: 9)
!3479 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 456, column: 6)
!3480 = !DILocalVariable(name: "bins", scope: !3478, file: !3, line: 462, type: !3481)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!3482 = !DILocalVariable(name: "i", scope: !3483, file: !3, line: 463, type: !7)
!3483 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 463, column: 3)
!3484 = !DILocation(line: 452, column: 19, scope: !3469)
!3485 = !DILocation(line: 452, column: 33, scope: !3469)
!3486 = !DILocation(line: 452, column: 43, scope: !3469)
!3487 = !DILocation(line: 453, column: 2, scope: !3469)
!3488 = !DILocation(line: 453, column: 11, scope: !3469)
!3489 = !DILocation(line: 453, column: 38, scope: !3469)
!3490 = !DILocation(line: 453, column: 29, scope: !3469)
!3491 = !DILocation(line: 453, column: 44, scope: !3469)
!3492 = !DILocation(line: 453, column: 19, scope: !3469)
!3493 = !DILocation(line: 454, column: 21, scope: !3469)
!3494 = !DILocation(line: 454, column: 28, scope: !3469)
!3495 = !DILocation(line: 454, column: 2, scope: !3469)
!3496 = !DILocation(line: 456, column: 6, scope: !3479)
!3497 = !DILocation(line: 456, column: 6, scope: !3469)
!3498 = !DILocation(line: 457, column: 18, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 456, column: 16)
!3500 = !DILocation(line: 457, column: 23, scope: !3499)
!3501 = !DILocation(line: 457, column: 3, scope: !3499)
!3502 = !DILocation(line: 458, column: 2, scope: !3499)
!3503 = !DILocation(line: 459, column: 17, scope: !3478)
!3504 = !DILocation(line: 459, column: 22, scope: !3478)
!3505 = !DILocation(line: 459, column: 3, scope: !3478)
!3506 = !DILocation(line: 460, column: 3, scope: !3478)
!3507 = !DILocation(line: 460, column: 12, scope: !3478)
!3508 = !DILocation(line: 460, column: 40, scope: !3478)
!3509 = !DILocation(line: 460, column: 47, scope: !3478)
!3510 = !DILocation(line: 460, column: 20, scope: !3478)
!3511 = !DILocation(line: 462, column: 3, scope: !3478)
!3512 = !DILocation(line: 462, column: 20, scope: !3478)
!3513 = !DILocation(line: 462, column: 46, scope: !3478)
!3514 = !DILocation(line: 462, column: 27, scope: !3478)
!3515 = !DILocation(line: 463, column: 8, scope: !3483)
!3516 = !DILocation(line: 463, column: 17, scope: !3483)
!3517 = !DILocation(line: 463, column: 24, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 463, column: 3)
!3519 = !DILocation(line: 463, column: 26, scope: !3518)
!3520 = !DILocation(line: 463, column: 3, scope: !3483)
!3521 = !DILocation(line: 463, column: 3, scope: !3518)
!3522 = !DILocation(line: 464, column: 4, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 463, column: 43)
!3524 = !DILocation(line: 464, column: 4, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 464, column: 4)
!3526 = !DILocation(line: 466, column: 24, scope: !3523)
!3527 = !DILocation(line: 466, column: 42, scope: !3523)
!3528 = !DILocation(line: 466, column: 32, scope: !3523)
!3529 = !DILocation(line: 466, column: 45, scope: !3523)
!3530 = !{!3531, !2792, i64 20}
!3531 = !{!"bin_info_s", !2664, i64 0, !2664, i64 8, !2792, i64 16, !2792, i64 20, !3532, i64 24}
!3532 = !{!"bitmap_info_s", !2664, i64 0, !2664, i64 8}
!3533 = !DILocation(line: 466, column: 30, scope: !3523)
!3534 = !DILocation(line: 466, column: 4, scope: !3523)
!3535 = !DILocation(line: 466, column: 10, scope: !3523)
!3536 = !DILocation(line: 466, column: 19, scope: !3523)
!3537 = !DILocation(line: 466, column: 22, scope: !3523)
!3538 = !DILocation(line: 467, column: 3, scope: !3523)
!3539 = !DILocation(line: 463, column: 39, scope: !3518)
!3540 = distinct !{!3540, !3520, !3541, !3182}
!3541 = !DILocation(line: 467, column: 3, scope: !3483)
!3542 = !DILocation(line: 468, column: 2, scope: !3479)
!3543 = !DILocation(line: 469, column: 1, scope: !3469)
!3544 = distinct !DISubprogram(name: "arena_ind_get", scope: !3545, file: !3545, line: 5, type: !3546, scopeLine: 5, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3550)
!3545 = !DIFile(filename: "include/jemalloc/internal/arena_inlines_a.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "39f7830943c1d0a6f3693d19f95209fb")
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!7, !3548}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!3550 = !{!3551}
!3551 = !DILocalVariable(name: "arena", arg: 1, scope: !3544, file: !3545, line: 5, type: !3548)
!3552 = !DILocation(line: 5, column: 30, scope: !3544)
!3553 = !DILocation(line: 6, column: 9, scope: !3544)
!3554 = !DILocation(line: 6, column: 16, scope: !3544)
!3555 = !{!3556, !2792, i64 78928}
!3556 = !{!"arena_s", !2660, i64 0, !3557, i64 8, !2659, i64 16, !3558, i64 24, !3564, i64 10392, !3564, i64 10400, !3565, i64 10408, !3557, i64 10520, !3566, i64 10528, !3565, i64 10536, !3567, i64 10648, !2792, i64 78928, !2659, i64 78936, !3559, i64 78944, !2660, i64 78952}
!3557 = !{!"", !2792, i64 0}
!3558 = !{!"arena_stats_s", !2664, i64 0, !2664, i64 8, !2664, i64 16, !2664, i64 24, !3559, i64 32, !2664, i64 40, !2664, i64 48, !2664, i64 56, !2664, i64 64, !2664, i64 72, !2664, i64 80, !3560, i64 88, !2664, i64 168, !2664, i64 176, !2660, i64 184, !2660, i64 952, !3559, i64 10360}
!3559 = !{!"", !2664, i64 0}
!3560 = !{!"pa_shard_stats_s", !2664, i64 0, !3561, i64 8}
!3561 = !{!"pac_stats_s", !3562, i64 0, !3562, i64 24, !2664, i64 48, !3559, i64 56, !3559, i64 64}
!3562 = !{!"pac_decay_stats_s", !3563, i64 0, !3563, i64 8, !3563, i64 16}
!3563 = !{!"locked_u64_s", !3559, i64 0}
!3564 = !{!"", !2659, i64 0}
!3565 = !{!"malloc_mutex_s", !2660, i64 0}
!3566 = !{!"", !3564, i64 0}
!3567 = !{!"pa_shard_s", !2659, i64 0, !3559, i64 8, !3568, i64 16, !2696, i64 17, !3569, i64 24, !3576, i64 62264, !3578, i64 62384, !3585, i64 68096, !2792, i64 68240, !2659, i64 68248, !2659, i64 68256, !2659, i64 68264, !2659, i64 68272}
!3568 = !{!"", !2696, i64 0}
!3569 = !{!"pac_s", !3570, i64 0, !3571, i64 56, !3571, i64 19496, !3571, i64 38936, !2659, i64 58376, !2659, i64 58384, !2659, i64 58392, !3573, i64 58400, !3565, i64 58408, !3574, i64 58520, !3559, i64 58640, !3575, i64 58648, !3575, i64 60432, !2659, i64 62216, !2659, i64 62224, !3559, i64 62232}
!3570 = !{!"pai_s", !2659, i64 0, !2659, i64 8, !2659, i64 16, !2659, i64 24, !2659, i64 32, !2659, i64 40, !2659, i64 48}
!3571 = !{!"ecache_s", !3565, i64 0, !3572, i64 112, !3572, i64 9768, !2660, i64 19424, !2792, i64 19428, !2696, i64 19432}
!3572 = !{!"eset_s", !2660, i64 0, !2660, i64 32, !2660, i64 6432, !3566, i64 9632, !3559, i64 9640, !2660, i64 9648}
!3573 = !{!"exp_grow_s", !2792, i64 0, !2792, i64 4}
!3574 = !{!"san_bump_alloc_s", !3565, i64 0, !2659, i64 112}
!3575 = !{!"decay_s", !3565, i64 0, !2696, i64 112, !3559, i64 120, !3559, i64 128, !3559, i64 136, !2664, i64 144, !3559, i64 152, !2664, i64 160, !2664, i64 168, !2660, i64 176, !2664, i64 1776}
!3576 = !{!"sec_s", !3570, i64 0, !2659, i64 56, !3577, i64 64, !2659, i64 104, !2792, i64 112}
!3577 = !{!"sec_opts_s", !2664, i64 0, !2664, i64 8, !2664, i64 16, !2664, i64 24, !2664, i64 32}
!3578 = !{!"hpa_shard_s", !3570, i64 0, !2659, i64 56, !3565, i64 64, !3565, i64 176, !2659, i64 288, !3579, i64 296, !3580, i64 320, !2664, i64 5600, !2792, i64 5608, !2659, i64 5616, !3583, i64 5624, !2664, i64 5664, !3584, i64 5672, !3559, i64 5704}
!3579 = !{!"edata_cache_fast_s", !3566, i64 0, !2659, i64 8, !2696, i64 16}
!3580 = !{!"psset_s", !2660, i64 0, !2660, i64 1024, !3581, i64 1032, !3582, i64 1056, !3566, i64 4224, !2660, i64 4232, !2660, i64 5256, !3566, i64 5272}
!3581 = !{!"psset_bin_stats_s", !2664, i64 0, !2664, i64 8, !2664, i64 16}
!3582 = !{!"psset_stats_s", !2660, i64 0, !2660, i64 3072, !2660, i64 3120}
!3583 = !{!"hpa_shard_opts_s", !2664, i64 0, !2664, i64 8, !2792, i64 16, !2696, i64 20, !2664, i64 24, !2664, i64 32}
!3584 = !{!"hpa_shard_nonderived_stats_s", !2664, i64 0, !2664, i64 8, !2664, i64 16, !2664, i64 24}
!3585 = !{!"edata_cache_s", !3586, i64 0, !3559, i64 16, !3565, i64 24, !2659, i64 136}
!3586 = !{!"", !3587, i64 0}
!3587 = !{!"ph_s", !2659, i64 0, !2664, i64 8}
!3588 = !DILocation(line: 6, column: 2, scope: !3544)
!3589 = distinct !DISubprogram(name: "iarena_cleanup", scope: !3, file: !3, line: 616, type: !3590, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3592)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{null, !1347}
!3592 = !{!3593, !3594}
!3593 = !DILocalVariable(name: "tsd", arg: 1, scope: !3589, file: !3, line: 616, type: !1347)
!3594 = !DILocalVariable(name: "iarena", scope: !3589, file: !3, line: 617, type: !594)
!3595 = !DILocation(line: 616, column: 23, scope: !3589)
!3596 = !DILocation(line: 617, column: 2, scope: !3589)
!3597 = !DILocation(line: 617, column: 11, scope: !3589)
!3598 = !DILocation(line: 619, column: 26, scope: !3589)
!3599 = !DILocation(line: 619, column: 11, scope: !3589)
!3600 = !DILocation(line: 619, column: 9, scope: !3589)
!3601 = !DILocation(line: 620, column: 6, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 620, column: 6)
!3603 = !DILocation(line: 620, column: 13, scope: !3602)
!3604 = !DILocation(line: 620, column: 6, scope: !3589)
!3605 = !DILocation(line: 621, column: 16, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 620, column: 22)
!3607 = !DILocation(line: 621, column: 35, scope: !3606)
!3608 = !DILocation(line: 621, column: 21, scope: !3606)
!3609 = !DILocation(line: 621, column: 3, scope: !3606)
!3610 = !DILocation(line: 622, column: 2, scope: !3606)
!3611 = !DILocation(line: 623, column: 1, scope: !3589)
!3612 = distinct !DISubprogram(name: "tsd_iarena_get", scope: !145, file: !145, line: 373, type: !3613, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!594, !1347}
!3615 = !{!3616}
!3616 = !DILocalVariable(name: "tsd", arg: 1, scope: !3612, file: !145, line: 373, type: !1347)
!3617 = !DILocation(line: 373, column: 1, scope: !3612)
!3618 = distinct !DISubprogram(name: "arena_unbind", scope: !3, file: !3, line: 488, type: !3470, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3619)
!3619 = !{!3620, !3621, !3622, !3623}
!3620 = !DILocalVariable(name: "tsd", arg: 1, scope: !3618, file: !3, line: 488, type: !1347)
!3621 = !DILocalVariable(name: "ind", arg: 2, scope: !3618, file: !3, line: 488, type: !7)
!3622 = !DILocalVariable(name: "internal", arg: 3, scope: !3618, file: !3, line: 488, type: !389)
!3623 = !DILocalVariable(name: "arena", scope: !3618, file: !3, line: 489, type: !594)
!3624 = !DILocation(line: 488, column: 21, scope: !3618)
!3625 = !DILocation(line: 488, column: 35, scope: !3618)
!3626 = !DILocation(line: 488, column: 45, scope: !3618)
!3627 = !DILocation(line: 489, column: 2, scope: !3618)
!3628 = !DILocation(line: 489, column: 11, scope: !3618)
!3629 = !DILocation(line: 491, column: 29, scope: !3618)
!3630 = !DILocation(line: 491, column: 20, scope: !3618)
!3631 = !DILocation(line: 491, column: 35, scope: !3618)
!3632 = !DILocation(line: 491, column: 10, scope: !3618)
!3633 = !DILocation(line: 491, column: 8, scope: !3618)
!3634 = !DILocation(line: 492, column: 21, scope: !3618)
!3635 = !DILocation(line: 492, column: 28, scope: !3618)
!3636 = !DILocation(line: 492, column: 2, scope: !3618)
!3637 = !DILocation(line: 494, column: 6, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 494, column: 6)
!3639 = !DILocation(line: 494, column: 6, scope: !3618)
!3640 = !DILocation(line: 495, column: 18, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 494, column: 16)
!3642 = !DILocation(line: 495, column: 3, scope: !3641)
!3643 = !DILocation(line: 496, column: 2, scope: !3641)
!3644 = !DILocation(line: 497, column: 17, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 496, column: 9)
!3646 = !DILocation(line: 497, column: 3, scope: !3645)
!3647 = !DILocation(line: 499, column: 1, scope: !3618)
!3648 = distinct !DISubprogram(name: "arena_cleanup", scope: !3, file: !3, line: 626, type: !3590, scopeLine: 626, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3649)
!3649 = !{!3650, !3651}
!3650 = !DILocalVariable(name: "tsd", arg: 1, scope: !3648, file: !3, line: 626, type: !1347)
!3651 = !DILocalVariable(name: "arena", scope: !3648, file: !3, line: 627, type: !594)
!3652 = !DILocation(line: 626, column: 22, scope: !3648)
!3653 = !DILocation(line: 627, column: 2, scope: !3648)
!3654 = !DILocation(line: 627, column: 11, scope: !3648)
!3655 = !DILocation(line: 629, column: 24, scope: !3648)
!3656 = !DILocation(line: 629, column: 10, scope: !3648)
!3657 = !DILocation(line: 629, column: 8, scope: !3648)
!3658 = !DILocation(line: 630, column: 6, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 630, column: 6)
!3660 = !DILocation(line: 630, column: 12, scope: !3659)
!3661 = !DILocation(line: 630, column: 6, scope: !3648)
!3662 = !DILocation(line: 631, column: 16, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 630, column: 21)
!3664 = !DILocation(line: 631, column: 35, scope: !3663)
!3665 = !DILocation(line: 631, column: 21, scope: !3663)
!3666 = !DILocation(line: 631, column: 3, scope: !3663)
!3667 = !DILocation(line: 632, column: 2, scope: !3663)
!3668 = !DILocation(line: 633, column: 1, scope: !3648)
!3669 = distinct !DISubprogram(name: "tsd_arena_get", scope: !145, file: !145, line: 373, type: !3613, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3670)
!3670 = !{!3671}
!3671 = !DILocalVariable(name: "tsd", arg: 1, scope: !3669, file: !145, line: 373, type: !1347)
!3672 = !DILocation(line: 373, column: 1, scope: !3669)
!3673 = !DILocation(line: 2700, column: 23, scope: !1506)
!3674 = !DILocation(line: 2701, column: 2, scope: !1506)
!3675 = !DILocation(line: 2701, column: 8, scope: !1506)
!3676 = !DILocation(line: 2702, column: 2, scope: !1506)
!3677 = !DILocation(line: 2702, column: 16, scope: !1506)
!3678 = !DILocation(line: 2703, column: 2, scope: !1506)
!3679 = !DILocation(line: 2703, column: 17, scope: !1506)
!3680 = !DILocation(line: 2711, column: 2, scope: !1506)
!3681 = !DILocation(line: 2712, column: 2, scope: !1506)
!3682 = !DILocation(line: 2714, column: 8, scope: !1506)
!3683 = !DILocation(line: 2714, column: 33, scope: !1506)
!3684 = !{!3685, !2696, i64 3}
!3685 = !{!"static_opts_s", !2696, i64 0, !2696, i64 1, !2696, i64 2, !2696, i64 3, !2696, i64 4, !2664, i64 8, !2659, i64 16, !2659, i64 24, !2696, i64 32, !2696, i64 33}
!3686 = !DILocation(line: 2715, column: 8, scope: !1506)
!3687 = !DILocation(line: 2715, column: 27, scope: !1506)
!3688 = !{!3685, !2696, i64 4}
!3689 = !DILocation(line: 2716, column: 8, scope: !1506)
!3690 = !DILocation(line: 2716, column: 19, scope: !1506)
!3691 = !{!3685, !2659, i64 16}
!3692 = !DILocation(line: 2718, column: 8, scope: !1506)
!3693 = !DILocation(line: 2718, column: 15, scope: !1506)
!3694 = !{!3695, !2659, i64 0}
!3695 = !{!"dynamic_opts_s", !2659, i64 0, !2664, i64 8, !2664, i64 16, !2664, i64 24, !2664, i64 32, !2696, i64 40, !2792, i64 44, !2792, i64 48}
!3696 = !DILocation(line: 2719, column: 8, scope: !1506)
!3697 = !DILocation(line: 2719, column: 18, scope: !1506)
!3698 = !{!3695, !2664, i64 16}
!3699 = !DILocation(line: 2720, column: 20, scope: !1506)
!3700 = !DILocation(line: 2720, column: 8, scope: !1506)
!3701 = !DILocation(line: 2720, column: 18, scope: !1506)
!3702 = !{!3695, !2664, i64 24}
!3703 = !DILocation(line: 2722, column: 2, scope: !1506)
!3704 = !DILocation(line: 2727, column: 12, scope: !1538)
!3705 = !{!3685, !2696, i64 32}
!3706 = !DILocation(line: 2727, column: 6, scope: !1506)
!3707 = !DILocation(line: 2728, column: 3, scope: !1537)
!3708 = !DILocation(line: 2728, column: 13, scope: !1537)
!3709 = !DILocation(line: 2728, column: 23, scope: !1537)
!3710 = !DILocation(line: 2728, column: 24, scope: !1537)
!3711 = !DILocation(line: 2729, column: 40, scope: !1537)
!3712 = !DILocation(line: 2729, column: 56, scope: !1537)
!3713 = !DILocation(line: 2729, column: 45, scope: !1537)
!3714 = !DILocation(line: 2729, column: 61, scope: !1537)
!3715 = !DILocation(line: 2729, column: 3, scope: !1537)
!3716 = !DILocation(line: 2730, column: 2, scope: !1538)
!3717 = !DILocation(line: 2730, column: 2, scope: !1537)
!3718 = !DILocation(line: 2732, column: 2, scope: !1506)
!3719 = !DILocation(line: 2732, column: 2, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !1506, file: !3, line: 2732, column: 2)
!3721 = !DILocation(line: 2734, column: 9, scope: !1506)
!3722 = !DILocation(line: 2735, column: 1, scope: !1506)
!3723 = !DILocation(line: 2734, column: 2, scope: !1506)
!3724 = distinct !DISubprogram(name: "static_opts_init", scope: !3, file: !3, line: 2244, type: !3725, scopeLine: 2244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3728)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{null, !3727}
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!3728 = !{!3729}
!3729 = !DILocalVariable(name: "static_opts", arg: 1, scope: !3724, file: !3, line: 2244, type: !3727)
!3730 = !DILocation(line: 2244, column: 33, scope: !3724)
!3731 = !DILocation(line: 2245, column: 2, scope: !3724)
!3732 = !DILocation(line: 2245, column: 15, scope: !3724)
!3733 = !DILocation(line: 2245, column: 28, scope: !3724)
!3734 = !{!3685, !2696, i64 0}
!3735 = !DILocation(line: 2246, column: 2, scope: !3724)
!3736 = !DILocation(line: 2246, column: 15, scope: !3724)
!3737 = !DILocation(line: 2246, column: 40, scope: !3724)
!3738 = !{!3685, !2696, i64 1}
!3739 = !DILocation(line: 2247, column: 2, scope: !3724)
!3740 = !DILocation(line: 2247, column: 15, scope: !3724)
!3741 = !DILocation(line: 2247, column: 37, scope: !3724)
!3742 = !{!3685, !2696, i64 2}
!3743 = !DILocation(line: 2248, column: 2, scope: !3724)
!3744 = !DILocation(line: 2248, column: 15, scope: !3724)
!3745 = !DILocation(line: 2248, column: 40, scope: !3724)
!3746 = !DILocation(line: 2249, column: 2, scope: !3724)
!3747 = !DILocation(line: 2249, column: 15, scope: !3724)
!3748 = !DILocation(line: 2249, column: 34, scope: !3724)
!3749 = !DILocation(line: 2250, column: 2, scope: !3724)
!3750 = !DILocation(line: 2250, column: 15, scope: !3724)
!3751 = !DILocation(line: 2250, column: 29, scope: !3724)
!3752 = !{!3685, !2664, i64 8}
!3753 = !DILocation(line: 2251, column: 2, scope: !3724)
!3754 = !DILocation(line: 2251, column: 15, scope: !3724)
!3755 = !DILocation(line: 2251, column: 26, scope: !3724)
!3756 = !DILocation(line: 2252, column: 2, scope: !3724)
!3757 = !DILocation(line: 2252, column: 15, scope: !3724)
!3758 = !DILocation(line: 2252, column: 40, scope: !3724)
!3759 = !{!3685, !2659, i64 24}
!3760 = !DILocation(line: 2253, column: 2, scope: !3724)
!3761 = !DILocation(line: 2253, column: 15, scope: !3724)
!3762 = !DILocation(line: 2253, column: 20, scope: !3724)
!3763 = !DILocation(line: 2254, column: 2, scope: !3724)
!3764 = !DILocation(line: 2254, column: 15, scope: !3724)
!3765 = !DILocation(line: 2254, column: 21, scope: !3724)
!3766 = !{!3685, !2696, i64 33}
!3767 = !DILocation(line: 2255, column: 1, scope: !3724)
!3768 = distinct !DISubprogram(name: "dynamic_opts_init", scope: !3, file: !3, line: 2279, type: !3769, scopeLine: 2279, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3771)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{null, !2565}
!3771 = !{!3772}
!3772 = !DILocalVariable(name: "dynamic_opts", arg: 1, scope: !3768, file: !3, line: 2279, type: !2565)
!3773 = !DILocation(line: 2279, column: 35, scope: !3768)
!3774 = !DILocation(line: 2280, column: 2, scope: !3768)
!3775 = !DILocation(line: 2280, column: 16, scope: !3768)
!3776 = !DILocation(line: 2280, column: 23, scope: !3768)
!3777 = !DILocation(line: 2281, column: 2, scope: !3768)
!3778 = !DILocation(line: 2281, column: 16, scope: !3768)
!3779 = !DILocation(line: 2281, column: 22, scope: !3768)
!3780 = !{!3695, !2664, i64 8}
!3781 = !DILocation(line: 2282, column: 2, scope: !3768)
!3782 = !DILocation(line: 2282, column: 16, scope: !3768)
!3783 = !DILocation(line: 2282, column: 26, scope: !3768)
!3784 = !DILocation(line: 2283, column: 2, scope: !3768)
!3785 = !DILocation(line: 2283, column: 16, scope: !3768)
!3786 = !DILocation(line: 2283, column: 26, scope: !3768)
!3787 = !DILocation(line: 2284, column: 2, scope: !3768)
!3788 = !DILocation(line: 2284, column: 16, scope: !3768)
!3789 = !DILocation(line: 2284, column: 26, scope: !3768)
!3790 = !{!3695, !2664, i64 32}
!3791 = !DILocation(line: 2285, column: 2, scope: !3768)
!3792 = !DILocation(line: 2285, column: 16, scope: !3768)
!3793 = !DILocation(line: 2285, column: 21, scope: !3768)
!3794 = !{!3695, !2696, i64 40}
!3795 = !DILocation(line: 2286, column: 2, scope: !3768)
!3796 = !DILocation(line: 2286, column: 16, scope: !3768)
!3797 = !DILocation(line: 2286, column: 27, scope: !3768)
!3798 = !{!3695, !2792, i64 44}
!3799 = !DILocation(line: 2287, column: 2, scope: !3768)
!3800 = !DILocation(line: 2287, column: 16, scope: !3768)
!3801 = !DILocation(line: 2287, column: 26, scope: !3768)
!3802 = !{!3695, !2792, i64 48}
!3803 = !DILocation(line: 2288, column: 1, scope: !3768)
!3804 = distinct !DISubprogram(name: "imalloc", scope: !3, file: !3, line: 2675, type: !3805, scopeLine: 2675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3807)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!390, !3727, !2565}
!3807 = !{!3808, !3809, !3810}
!3808 = !DILocalVariable(name: "sopts", arg: 1, scope: !3804, file: !3, line: 2675, type: !3727)
!3809 = !DILocalVariable(name: "dopts", arg: 2, scope: !3804, file: !3, line: 2675, type: !2565)
!3810 = !DILocalVariable(name: "tsd", scope: !3804, file: !3, line: 2681, type: !1347)
!3811 = !DILocation(line: 2675, column: 24, scope: !3804)
!3812 = !DILocation(line: 2675, column: 47, scope: !3804)
!3813 = !DILocation(line: 2676, column: 6, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 2676, column: 6)
!3815 = !DILocation(line: 2676, column: 26, scope: !3814)
!3816 = !DILocation(line: 2676, column: 49, scope: !3814)
!3817 = !DILocation(line: 2676, column: 56, scope: !3814)
!3818 = !DILocation(line: 2676, column: 30, scope: !3814)
!3819 = !DILocation(line: 2676, column: 6, scope: !3804)
!3820 = !DILocation(line: 2677, column: 3, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 2676, column: 64)
!3822 = !DILocation(line: 2681, column: 2, scope: !3804)
!3823 = !DILocation(line: 2681, column: 9, scope: !3804)
!3824 = !DILocation(line: 2681, column: 15, scope: !3804)
!3825 = !DILocation(line: 2682, column: 2, scope: !3804)
!3826 = !DILocation(line: 2682, column: 2, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 2682, column: 2)
!3828 = !DILocation(line: 2683, column: 6, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 2683, column: 6)
!3830 = !DILocation(line: 2683, column: 6, scope: !3804)
!3831 = !DILocation(line: 2685, column: 19, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 2683, column: 29)
!3833 = !DILocation(line: 2685, column: 3, scope: !3832)
!3834 = !DILocation(line: 2686, column: 3, scope: !3832)
!3835 = !DILocation(line: 2686, column: 10, scope: !3832)
!3836 = !DILocation(line: 2686, column: 15, scope: !3832)
!3837 = !DILocation(line: 2687, column: 23, scope: !3832)
!3838 = !DILocation(line: 2687, column: 30, scope: !3832)
!3839 = !DILocation(line: 2687, column: 37, scope: !3832)
!3840 = !DILocation(line: 2687, column: 10, scope: !3832)
!3841 = !DILocation(line: 2687, column: 3, scope: !3832)
!3842 = !DILocation(line: 2689, column: 8, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 2689, column: 7)
!3844 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 2688, column: 9)
!3845 = !DILocation(line: 2689, column: 28, scope: !3843)
!3846 = !DILocation(line: 2689, column: 51, scope: !3843)
!3847 = !DILocation(line: 2689, column: 58, scope: !3843)
!3848 = !DILocation(line: 2689, column: 32, scope: !3843)
!3849 = !DILocation(line: 2689, column: 7, scope: !3844)
!3850 = !DILocation(line: 2690, column: 4, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 2689, column: 66)
!3852 = !DILocation(line: 2693, column: 3, scope: !3844)
!3853 = !DILocation(line: 2693, column: 10, scope: !3844)
!3854 = !DILocation(line: 2693, column: 15, scope: !3844)
!3855 = !DILocation(line: 2694, column: 23, scope: !3844)
!3856 = !DILocation(line: 2694, column: 30, scope: !3844)
!3857 = !DILocation(line: 2694, column: 37, scope: !3844)
!3858 = !DILocation(line: 2694, column: 10, scope: !3844)
!3859 = !DILocation(line: 2694, column: 3, scope: !3844)
!3860 = !DILocation(line: 2696, column: 1, scope: !3804)
!3861 = !DISubprogram(name: "hook_invoke_alloc", scope: !99, file: !99, line: 154, type: !3862, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{null, !3864, !383, !384, !1421}
!3864 = !DIDerivedType(tag: DW_TAG_typedef, name: "hook_alloc_t", file: !99, line: 68, baseType: !98)
!3865 = distinct !DISubprogram(name: "je_malloc", scope: !3, file: !3, line: 2745, type: !954, scopeLine: 2745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3866)
!3866 = !{!3867}
!3867 = !DILocalVariable(name: "size", arg: 1, scope: !3865, file: !3, line: 2745, type: !387)
!3868 = !DILocation(line: 2745, column: 18, scope: !3865)
!3869 = !DILocation(line: 2746, column: 26, scope: !3865)
!3870 = !DILocation(line: 2746, column: 9, scope: !3865)
!3871 = !DILocation(line: 2746, column: 2, scope: !3865)
!3872 = !DILocation(line: 258, column: 25, scope: !2575)
!3873 = !DILocation(line: 258, column: 38, scope: !2575)
!3874 = !DILocation(line: 259, column: 2, scope: !2575)
!3875 = !DILocation(line: 259, column: 2, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 259, column: 2)
!3877 = !DILocation(line: 260, column: 6, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 260, column: 6)
!3879 = !DILocation(line: 260, column: 26, scope: !3878)
!3880 = !DILocation(line: 260, column: 29, scope: !3878)
!3881 = !DILocation(line: 260, column: 6, scope: !2575)
!3882 = !DILocation(line: 261, column: 10, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3878, file: !2572, line: 260, column: 62)
!3884 = !DILocation(line: 261, column: 25, scope: !3883)
!3885 = !DILocation(line: 261, column: 3, scope: !3883)
!3886 = !DILocation(line: 264, column: 2, scope: !2575)
!3887 = !DILocation(line: 264, column: 9, scope: !2575)
!3888 = !DILocation(line: 264, column: 15, scope: !2575)
!3889 = !DILocation(line: 265, column: 6, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 265, column: 6)
!3891 = !DILocation(line: 265, column: 6, scope: !2575)
!3892 = !DILocation(line: 266, column: 10, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !2572, line: 265, column: 60)
!3894 = !DILocation(line: 266, column: 25, scope: !3893)
!3895 = !DILocation(line: 266, column: 3, scope: !3893)
!3896 = !DILocation(line: 276, column: 2, scope: !2575)
!3897 = !DILocation(line: 276, column: 10, scope: !2575)
!3898 = !DILocation(line: 283, column: 2, scope: !2575)
!3899 = !DILocation(line: 283, column: 9, scope: !2575)
!3900 = !DILocation(line: 284, column: 31, scope: !2575)
!3901 = !DILocation(line: 284, column: 2, scope: !2575)
!3902 = !DILocation(line: 286, column: 2, scope: !2575)
!3903 = !DILocation(line: 286, column: 2, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 286, column: 2)
!3905 = !DILocation(line: 287, column: 2, scope: !2575)
!3906 = !DILocation(line: 287, column: 2, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 287, column: 2)
!3908 = !DILocation(line: 290, column: 2, scope: !2575)
!3909 = !DILocation(line: 290, column: 11, scope: !2575)
!3910 = !DILocation(line: 290, column: 22, scope: !2575)
!3911 = !DILocation(line: 291, column: 25, scope: !2575)
!3912 = !DILocation(line: 291, column: 2, scope: !2575)
!3913 = !DILocation(line: 292, column: 2, scope: !2575)
!3914 = !DILocation(line: 292, column: 11, scope: !2575)
!3915 = !DILocation(line: 292, column: 29, scope: !2575)
!3916 = !DILocation(line: 292, column: 41, scope: !2575)
!3917 = !DILocation(line: 292, column: 39, scope: !2575)
!3918 = !DILocation(line: 299, column: 7, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 299, column: 6)
!3920 = !DILocation(line: 299, column: 6, scope: !2575)
!3921 = !DILocation(line: 300, column: 3, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3919, file: !2572, line: 299, column: 29)
!3923 = !DILocation(line: 300, column: 3, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3922, file: !2572, line: 300, column: 3)
!3925 = !DILocation(line: 301, column: 2, scope: !3922)
!3926 = !DILocation(line: 302, column: 3, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3919, file: !2572, line: 301, column: 9)
!3928 = !DILocation(line: 302, column: 3, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3927, file: !2572, line: 302, column: 3)
!3930 = !DILocation(line: 303, column: 3, scope: !3927)
!3931 = !DILocation(line: 303, column: 3, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3927, file: !2572, line: 303, column: 3)
!3933 = !DILocation(line: 309, column: 6, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 309, column: 6)
!3935 = !DILocation(line: 309, column: 6, scope: !2575)
!3936 = !DILocation(line: 310, column: 10, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3934, file: !2572, line: 309, column: 46)
!3938 = !DILocation(line: 310, column: 25, scope: !3937)
!3939 = !DILocation(line: 310, column: 3, scope: !3937)
!3940 = !DILocation(line: 312, column: 2, scope: !2575)
!3941 = !DILocation(line: 312, column: 2, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 312, column: 2)
!3943 = !DILocation(line: 314, column: 2, scope: !2575)
!3944 = !DILocation(line: 314, column: 12, scope: !2575)
!3945 = !DILocation(line: 314, column: 37, scope: !2575)
!3946 = !DILocation(line: 314, column: 21, scope: !2575)
!3947 = !DILocation(line: 315, column: 2, scope: !2575)
!3948 = !DILocation(line: 315, column: 2, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 315, column: 2)
!3950 = !DILocation(line: 316, column: 2, scope: !2575)
!3951 = !DILocation(line: 316, column: 15, scope: !2575)
!3952 = !DILocation(line: 316, column: 22, scope: !2575)
!3953 = !DILocation(line: 316, column: 30, scope: !2575)
!3954 = !DILocation(line: 316, column: 35, scope: !2575)
!3955 = !DILocation(line: 317, column: 2, scope: !2575)
!3956 = !DILocation(line: 317, column: 7, scope: !2575)
!3957 = !DILocation(line: 318, column: 2, scope: !2575)
!3958 = !DILocation(line: 318, column: 8, scope: !2575)
!3959 = !DILocation(line: 326, column: 29, scope: !2575)
!3960 = !DILocation(line: 326, column: 8, scope: !2575)
!3961 = !DILocation(line: 326, column: 6, scope: !2575)
!3962 = !DILocation(line: 327, column: 6, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 327, column: 6)
!3964 = !DILocation(line: 327, column: 6, scope: !2575)
!3965 = !DILocation(line: 328, column: 27, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3963, file: !2572, line: 327, column: 22)
!3967 = !DILocation(line: 328, column: 32, scope: !3966)
!3968 = !DILocation(line: 328, column: 49, scope: !3966)
!3969 = !DILocation(line: 328, column: 54, scope: !3966)
!3970 = !DILocation(line: 328, column: 3, scope: !3966)
!3971 = !DILocation(line: 329, column: 10, scope: !3966)
!3972 = !DILocation(line: 329, column: 3, scope: !3966)
!3973 = !DILocation(line: 331, column: 24, scope: !2575)
!3974 = !DILocation(line: 331, column: 8, scope: !2575)
!3975 = !DILocation(line: 331, column: 6, scope: !2575)
!3976 = !DILocation(line: 332, column: 6, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !2575, file: !2572, line: 332, column: 6)
!3978 = !DILocation(line: 332, column: 6, scope: !2575)
!3979 = !DILocation(line: 333, column: 27, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3977, file: !2572, line: 332, column: 22)
!3981 = !DILocation(line: 333, column: 32, scope: !3980)
!3982 = !DILocation(line: 333, column: 49, scope: !3980)
!3983 = !DILocation(line: 333, column: 54, scope: !3980)
!3984 = !DILocation(line: 333, column: 3, scope: !3980)
!3985 = !DILocation(line: 334, column: 10, scope: !3980)
!3986 = !DILocation(line: 334, column: 3, scope: !3980)
!3987 = !DILocation(line: 337, column: 9, scope: !2575)
!3988 = !DILocation(line: 337, column: 24, scope: !2575)
!3989 = !DILocation(line: 337, column: 2, scope: !2575)
!3990 = !DILocation(line: 338, column: 1, scope: !2575)
!3991 = !DILocation(line: 2751, column: 26, scope: !1553)
!3992 = !DILocation(line: 2751, column: 41, scope: !1553)
!3993 = !DILocation(line: 2751, column: 59, scope: !1553)
!3994 = !DILocation(line: 2752, column: 2, scope: !1553)
!3995 = !DILocation(line: 2752, column: 6, scope: !1553)
!3996 = !DILocation(line: 2753, column: 2, scope: !1553)
!3997 = !DILocation(line: 2753, column: 16, scope: !1553)
!3998 = !DILocation(line: 2754, column: 2, scope: !1553)
!3999 = !DILocation(line: 2754, column: 17, scope: !1553)
!4000 = !DILocation(line: 2756, column: 2, scope: !1553)
!4001 = !DILocation(line: 2756, column: 2, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !1553, file: !3, line: 2756, column: 2)
!4003 = !DILocation(line: 2759, column: 2, scope: !1553)
!4004 = !DILocation(line: 2760, column: 2, scope: !1553)
!4005 = !DILocation(line: 2762, column: 8, scope: !1553)
!4006 = !DILocation(line: 2762, column: 33, scope: !1553)
!4007 = !DILocation(line: 2763, column: 8, scope: !1553)
!4008 = !DILocation(line: 2763, column: 22, scope: !1553)
!4009 = !DILocation(line: 2764, column: 8, scope: !1553)
!4010 = !DILocation(line: 2764, column: 19, scope: !1553)
!4011 = !DILocation(line: 2766, column: 8, scope: !1553)
!4012 = !DILocation(line: 2766, column: 33, scope: !1553)
!4013 = !DILocation(line: 2769, column: 17, scope: !1553)
!4014 = !DILocation(line: 2769, column: 8, scope: !1553)
!4015 = !DILocation(line: 2769, column: 15, scope: !1553)
!4016 = !DILocation(line: 2770, column: 8, scope: !1553)
!4017 = !DILocation(line: 2770, column: 18, scope: !1553)
!4018 = !DILocation(line: 2771, column: 20, scope: !1553)
!4019 = !DILocation(line: 2771, column: 8, scope: !1553)
!4020 = !DILocation(line: 2771, column: 18, scope: !1553)
!4021 = !DILocation(line: 2772, column: 20, scope: !1553)
!4022 = !DILocation(line: 2772, column: 8, scope: !1553)
!4023 = !DILocation(line: 2772, column: 18, scope: !1553)
!4024 = !DILocation(line: 2774, column: 8, scope: !1553)
!4025 = !DILocation(line: 2774, column: 6, scope: !1553)
!4026 = !DILocation(line: 2775, column: 12, scope: !1565)
!4027 = !DILocation(line: 2775, column: 6, scope: !1553)
!4028 = !DILocation(line: 2776, column: 3, scope: !1564)
!4029 = !DILocation(line: 2776, column: 13, scope: !1564)
!4030 = !DILocation(line: 2776, column: 23, scope: !1564)
!4031 = !DILocation(line: 2776, column: 35, scope: !1564)
!4032 = !DILocation(line: 2776, column: 24, scope: !1564)
!4033 = !DILocation(line: 2776, column: 54, scope: !1564)
!4034 = !DILocation(line: 2777, column: 15, scope: !1564)
!4035 = !DILocation(line: 2778, column: 49, scope: !1564)
!4036 = !DILocation(line: 2778, column: 48, scope: !1564)
!4037 = !DILocation(line: 2779, column: 18, scope: !1564)
!4038 = !DILocation(line: 2779, column: 7, scope: !1564)
!4039 = !DILocation(line: 2779, column: 23, scope: !1564)
!4040 = !DILocation(line: 2778, column: 3, scope: !1564)
!4041 = !DILocation(line: 2780, column: 2, scope: !1565)
!4042 = !DILocation(line: 2780, column: 2, scope: !1564)
!4043 = !DILocation(line: 2782, column: 2, scope: !1553)
!4044 = !DILocation(line: 2782, column: 2, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !1553, file: !3, line: 2782, column: 2)
!4046 = !DILocation(line: 2785, column: 9, scope: !1553)
!4047 = !DILocation(line: 2786, column: 1, scope: !1553)
!4048 = !DILocation(line: 2785, column: 2, scope: !1553)
!4049 = !DILocation(line: 2791, column: 25, scope: !1585)
!4050 = !DILocation(line: 2791, column: 43, scope: !1585)
!4051 = !DILocation(line: 2792, column: 2, scope: !1585)
!4052 = !DILocation(line: 2792, column: 8, scope: !1585)
!4053 = !DILocation(line: 2794, column: 2, scope: !1585)
!4054 = !DILocation(line: 2794, column: 16, scope: !1585)
!4055 = !DILocation(line: 2795, column: 2, scope: !1585)
!4056 = !DILocation(line: 2795, column: 17, scope: !1585)
!4057 = !DILocation(line: 2797, column: 2, scope: !1585)
!4058 = !DILocation(line: 2797, column: 2, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 2797, column: 2)
!4060 = !DILocation(line: 2800, column: 2, scope: !1585)
!4061 = !DILocation(line: 2801, column: 2, scope: !1585)
!4062 = !DILocation(line: 2803, column: 8, scope: !1585)
!4063 = !DILocation(line: 2803, column: 33, scope: !1585)
!4064 = !DILocation(line: 2804, column: 8, scope: !1585)
!4065 = !DILocation(line: 2804, column: 33, scope: !1585)
!4066 = !DILocation(line: 2805, column: 8, scope: !1585)
!4067 = !DILocation(line: 2805, column: 27, scope: !1585)
!4068 = !DILocation(line: 2806, column: 8, scope: !1585)
!4069 = !DILocation(line: 2806, column: 22, scope: !1585)
!4070 = !DILocation(line: 2807, column: 8, scope: !1585)
!4071 = !DILocation(line: 2807, column: 19, scope: !1585)
!4072 = !DILocation(line: 2809, column: 8, scope: !1585)
!4073 = !DILocation(line: 2809, column: 33, scope: !1585)
!4074 = !DILocation(line: 2812, column: 8, scope: !1585)
!4075 = !DILocation(line: 2812, column: 15, scope: !1585)
!4076 = !DILocation(line: 2813, column: 8, scope: !1585)
!4077 = !DILocation(line: 2813, column: 18, scope: !1585)
!4078 = !DILocation(line: 2814, column: 20, scope: !1585)
!4079 = !DILocation(line: 2814, column: 8, scope: !1585)
!4080 = !DILocation(line: 2814, column: 18, scope: !1585)
!4081 = !DILocation(line: 2815, column: 20, scope: !1585)
!4082 = !DILocation(line: 2815, column: 8, scope: !1585)
!4083 = !DILocation(line: 2815, column: 18, scope: !1585)
!4084 = !DILocation(line: 2817, column: 2, scope: !1585)
!4085 = !DILocation(line: 2818, column: 12, scope: !1596)
!4086 = !DILocation(line: 2818, column: 6, scope: !1585)
!4087 = !DILocation(line: 2819, column: 3, scope: !1595)
!4088 = !DILocation(line: 2819, column: 13, scope: !1595)
!4089 = !DILocation(line: 2819, column: 23, scope: !1595)
!4090 = !DILocation(line: 2819, column: 35, scope: !1595)
!4091 = !DILocation(line: 2819, column: 57, scope: !1595)
!4092 = !DILocation(line: 2820, column: 47, scope: !1595)
!4093 = !DILocation(line: 2821, column: 18, scope: !1595)
!4094 = !DILocation(line: 2821, column: 7, scope: !1595)
!4095 = !DILocation(line: 2821, column: 23, scope: !1595)
!4096 = !DILocation(line: 2820, column: 3, scope: !1595)
!4097 = !DILocation(line: 2822, column: 2, scope: !1596)
!4098 = !DILocation(line: 2822, column: 2, scope: !1595)
!4099 = !DILocation(line: 2824, column: 2, scope: !1585)
!4100 = !DILocation(line: 2824, column: 2, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 2824, column: 2)
!4102 = !DILocation(line: 2826, column: 9, scope: !1585)
!4103 = !DILocation(line: 2827, column: 1, scope: !1585)
!4104 = !DILocation(line: 2826, column: 2, scope: !1585)
!4105 = !DILocation(line: 2832, column: 18, scope: !1611)
!4106 = !DILocation(line: 2832, column: 30, scope: !1611)
!4107 = !DILocation(line: 2833, column: 2, scope: !1611)
!4108 = !DILocation(line: 2833, column: 8, scope: !1611)
!4109 = !DILocation(line: 2834, column: 2, scope: !1611)
!4110 = !DILocation(line: 2834, column: 16, scope: !1611)
!4111 = !DILocation(line: 2835, column: 2, scope: !1611)
!4112 = !DILocation(line: 2835, column: 17, scope: !1611)
!4113 = !DILocation(line: 2837, column: 2, scope: !1611)
!4114 = !DILocation(line: 2837, column: 2, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !1611, file: !3, line: 2837, column: 2)
!4116 = !DILocation(line: 2839, column: 2, scope: !1611)
!4117 = !DILocation(line: 2840, column: 2, scope: !1611)
!4118 = !DILocation(line: 2842, column: 8, scope: !1611)
!4119 = !DILocation(line: 2842, column: 21, scope: !1611)
!4120 = !DILocation(line: 2843, column: 8, scope: !1611)
!4121 = !DILocation(line: 2843, column: 33, scope: !1611)
!4122 = !DILocation(line: 2844, column: 8, scope: !1611)
!4123 = !DILocation(line: 2844, column: 27, scope: !1611)
!4124 = !DILocation(line: 2845, column: 8, scope: !1611)
!4125 = !DILocation(line: 2845, column: 19, scope: !1611)
!4126 = !DILocation(line: 2847, column: 8, scope: !1611)
!4127 = !DILocation(line: 2847, column: 15, scope: !1611)
!4128 = !DILocation(line: 2848, column: 20, scope: !1611)
!4129 = !DILocation(line: 2848, column: 8, scope: !1611)
!4130 = !DILocation(line: 2848, column: 18, scope: !1611)
!4131 = !DILocation(line: 2849, column: 20, scope: !1611)
!4132 = !DILocation(line: 2849, column: 8, scope: !1611)
!4133 = !DILocation(line: 2849, column: 18, scope: !1611)
!4134 = !DILocation(line: 2850, column: 8, scope: !1611)
!4135 = !DILocation(line: 2850, column: 13, scope: !1611)
!4136 = !DILocation(line: 2852, column: 2, scope: !1611)
!4137 = !DILocation(line: 2853, column: 12, scope: !1620)
!4138 = !DILocation(line: 2853, column: 6, scope: !1611)
!4139 = !DILocation(line: 2854, column: 3, scope: !1619)
!4140 = !DILocation(line: 2854, column: 13, scope: !1619)
!4141 = !DILocation(line: 2854, column: 23, scope: !1619)
!4142 = !DILocation(line: 2854, column: 35, scope: !1619)
!4143 = !DILocation(line: 2854, column: 51, scope: !1619)
!4144 = !DILocation(line: 2855, column: 40, scope: !1619)
!4145 = !DILocation(line: 2855, column: 56, scope: !1619)
!4146 = !DILocation(line: 2855, column: 45, scope: !1619)
!4147 = !DILocation(line: 2855, column: 61, scope: !1619)
!4148 = !DILocation(line: 2855, column: 3, scope: !1619)
!4149 = !DILocation(line: 2856, column: 2, scope: !1620)
!4150 = !DILocation(line: 2856, column: 2, scope: !1619)
!4151 = !DILocation(line: 2858, column: 2, scope: !1611)
!4152 = !DILocation(line: 2858, column: 2, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !1611, file: !3, line: 2858, column: 2)
!4154 = !DILocation(line: 2860, column: 9, scope: !1611)
!4155 = !DILocation(line: 2861, column: 1, scope: !1611)
!4156 = !DILocation(line: 2860, column: 2, scope: !1611)
!4157 = distinct !DISubprogram(name: "free_default", scope: !3, file: !3, line: 2996, type: !1633, scopeLine: 2996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4158)
!4158 = !{!4159, !4160, !4163, !4166, !4168}
!4159 = !DILocalVariable(name: "ptr", arg: 1, scope: !4157, file: !3, line: 2996, type: !383)
!4160 = !DILocalVariable(name: "tsd", scope: !4161, file: !3, line: 3007, type: !1347)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 2998, column: 27)
!4162 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 2998, column: 6)
!4163 = !DILocalVariable(name: "tcache", scope: !4164, file: !3, line: 3011, type: !740)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 3010, column: 30)
!4165 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 3010, column: 7)
!4166 = !DILocalVariable(name: "tcache", scope: !4167, file: !3, line: 3016, type: !740)
!4167 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 3015, column: 10)
!4168 = !DILocalVariable(name: "args_raw", scope: !4167, file: !3, line: 3019, type: !1539)
!4169 = !DILocation(line: 2996, column: 20, scope: !4157)
!4170 = !DILocation(line: 2998, column: 6, scope: !4162)
!4171 = !DILocation(line: 2998, column: 6, scope: !4157)
!4172 = !DILocation(line: 3007, column: 3, scope: !4161)
!4173 = !DILocation(line: 3007, column: 10, scope: !4161)
!4174 = !DILocation(line: 3007, column: 16, scope: !4161)
!4175 = !DILocation(line: 3008, column: 37, scope: !4161)
!4176 = !DILocation(line: 3008, column: 28, scope: !4161)
!4177 = !DILocation(line: 3008, column: 3, scope: !4161)
!4178 = !DILocation(line: 3010, column: 7, scope: !4165)
!4179 = !DILocation(line: 3010, column: 7, scope: !4161)
!4180 = !DILocation(line: 3011, column: 4, scope: !4164)
!4181 = !DILocation(line: 3011, column: 14, scope: !4164)
!4182 = !DILocation(line: 3011, column: 43, scope: !4164)
!4183 = !DILocation(line: 3011, column: 23, scope: !4164)
!4184 = !DILocation(line: 3014, column: 10, scope: !4164)
!4185 = !DILocation(line: 3014, column: 15, scope: !4164)
!4186 = !DILocation(line: 3014, column: 20, scope: !4164)
!4187 = !DILocation(line: 3014, column: 4, scope: !4164)
!4188 = !DILocation(line: 3015, column: 3, scope: !4165)
!4189 = !DILocation(line: 3015, column: 3, scope: !4164)
!4190 = !DILocation(line: 3016, column: 4, scope: !4167)
!4191 = !DILocation(line: 3016, column: 14, scope: !4167)
!4192 = !DILocation(line: 3016, column: 43, scope: !4167)
!4193 = !DILocation(line: 3016, column: 23, scope: !4167)
!4194 = !DILocation(line: 3019, column: 4, scope: !4167)
!4195 = !DILocation(line: 3019, column: 14, scope: !4167)
!4196 = !DILocation(line: 3019, column: 28, scope: !4167)
!4197 = !DILocation(line: 3019, column: 40, scope: !4167)
!4198 = !DILocation(line: 3019, column: 29, scope: !4167)
!4199 = !DILocation(line: 3020, column: 41, scope: !4167)
!4200 = !DILocation(line: 3020, column: 46, scope: !4167)
!4201 = !DILocation(line: 3020, column: 4, scope: !4167)
!4202 = !DILocation(line: 3021, column: 10, scope: !4167)
!4203 = !DILocation(line: 3021, column: 15, scope: !4167)
!4204 = !DILocation(line: 3021, column: 20, scope: !4167)
!4205 = !DILocation(line: 3021, column: 4, scope: !4167)
!4206 = !DILocation(line: 3022, column: 3, scope: !4165)
!4207 = !DILocation(line: 3024, column: 37, scope: !4161)
!4208 = !DILocation(line: 3024, column: 28, scope: !4161)
!4209 = !DILocation(line: 3024, column: 3, scope: !4161)
!4210 = !DILocation(line: 3025, column: 2, scope: !4162)
!4211 = !DILocation(line: 3025, column: 2, scope: !4161)
!4212 = !DILocation(line: 3026, column: 1, scope: !4157)
!4213 = distinct !DISubprogram(name: "tsd_fetch_min", scope: !145, file: !145, line: 432, type: !4214, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!1347}
!4216 = !DILocation(line: 433, column: 9, scope: !4213)
!4217 = !DILocation(line: 433, column: 2, scope: !4213)
!4218 = distinct !DISubprogram(name: "check_entry_exit_locking", scope: !3, file: !3, line: 675, type: !4219, scopeLine: 675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4221)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{null, !391}
!4221 = !{!4222}
!4222 = !DILocalVariable(name: "tsdn", arg: 1, scope: !4218, file: !3, line: 675, type: !391)
!4223 = !DILocation(line: 675, column: 34, scope: !4218)
!4224 = !DILocation(line: 677, column: 3, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 676, column: 21)
!4226 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 676, column: 6)
!4227 = distinct !DISubprogram(name: "tsd_fast", scope: !145, file: !145, line: 403, type: !4228, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4230)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!389, !1347}
!4230 = !{!4231, !4232}
!4231 = !DILocalVariable(name: "tsd", arg: 1, scope: !4227, file: !145, line: 403, type: !1347)
!4232 = !DILocalVariable(name: "fast", scope: !4227, file: !145, line: 404, type: !389)
!4233 = !DILocation(line: 403, column: 17, scope: !4227)
!4234 = !DILocation(line: 404, column: 2, scope: !4227)
!4235 = !DILocation(line: 404, column: 7, scope: !4227)
!4236 = !DILocation(line: 404, column: 29, scope: !4227)
!4237 = !DILocation(line: 404, column: 15, scope: !4227)
!4238 = !DILocation(line: 404, column: 34, scope: !4227)
!4239 = !DILocation(line: 405, column: 6, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4227, file: !145, line: 405, column: 6)
!4241 = !DILocation(line: 405, column: 6, scope: !4227)
!4242 = !DILocation(line: 406, column: 19, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4240, file: !145, line: 405, column: 12)
!4244 = !DILocation(line: 406, column: 3, scope: !4243)
!4245 = !DILocation(line: 407, column: 2, scope: !4243)
!4246 = !DILocation(line: 409, column: 9, scope: !4227)
!4247 = !DILocation(line: 410, column: 1, scope: !4227)
!4248 = !DILocation(line: 409, column: 2, scope: !4227)
!4249 = distinct !DISubprogram(name: "tcache_get_from_ind", scope: !3, file: !3, line: 2331, type: !4250, scopeLine: 2331, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4252)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!740, !1347, !7, !389, !389}
!4252 = !{!4253, !4254, !4255, !4256, !4257}
!4253 = !DILocalVariable(name: "tsd", arg: 1, scope: !4249, file: !3, line: 2331, type: !1347)
!4254 = !DILocalVariable(name: "tcache_ind", arg: 2, scope: !4249, file: !3, line: 2331, type: !7)
!4255 = !DILocalVariable(name: "slow", arg: 3, scope: !4249, file: !3, line: 2331, type: !389)
!4256 = !DILocalVariable(name: "is_alloc", arg: 4, scope: !4249, file: !3, line: 2331, type: !389)
!4257 = !DILocalVariable(name: "tcache", scope: !4249, file: !3, line: 2332, type: !740)
!4258 = !DILocation(line: 2331, column: 28, scope: !4249)
!4259 = !DILocation(line: 2331, column: 42, scope: !4249)
!4260 = !DILocation(line: 2331, column: 59, scope: !4249)
!4261 = !DILocation(line: 2331, column: 70, scope: !4249)
!4262 = !DILocation(line: 2332, column: 2, scope: !4249)
!4263 = !DILocation(line: 2332, column: 12, scope: !4249)
!4264 = !DILocation(line: 2333, column: 6, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2333, column: 6)
!4266 = !DILocation(line: 2333, column: 17, scope: !4265)
!4267 = !DILocation(line: 2333, column: 6, scope: !4249)
!4268 = !DILocation(line: 2334, column: 7, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 2334, column: 7)
!4270 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 2333, column: 42)
!4271 = !DILocation(line: 2334, column: 7, scope: !4270)
!4272 = !DILocation(line: 2336, column: 29, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 2334, column: 22)
!4274 = !DILocation(line: 2336, column: 13, scope: !4273)
!4275 = !DILocation(line: 2336, column: 11, scope: !4273)
!4276 = !DILocation(line: 2337, column: 4, scope: !4273)
!4277 = !DILocation(line: 2337, column: 4, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 2337, column: 4)
!4279 = !DILocation(line: 2338, column: 3, scope: !4273)
!4280 = !DILocation(line: 2338, column: 14, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 2338, column: 14)
!4282 = !DILocation(line: 2338, column: 23, scope: !4281)
!4283 = !DILocation(line: 2339, column: 7, scope: !4281)
!4284 = !DILocation(line: 2338, column: 14, scope: !4269)
!4285 = !DILocation(line: 2340, column: 24, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2339, column: 51)
!4287 = !DILocation(line: 2340, column: 13, scope: !4286)
!4288 = !DILocation(line: 2340, column: 11, scope: !4286)
!4289 = !DILocation(line: 2341, column: 3, scope: !4286)
!4290 = !DILocation(line: 2342, column: 11, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2341, column: 10)
!4292 = !DILocation(line: 2344, column: 2, scope: !4270)
!4293 = !DILocation(line: 2349, column: 3, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 2344, column: 9)
!4295 = !DILocation(line: 2349, column: 3, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 2349, column: 3)
!4297 = !DILocation(line: 2351, column: 7, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 2351, column: 7)
!4299 = !DILocation(line: 2351, column: 18, scope: !4298)
!4300 = !DILocation(line: 2351, column: 7, scope: !4294)
!4301 = !DILocation(line: 2352, column: 11, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2351, column: 38)
!4303 = !DILocation(line: 2353, column: 3, scope: !4302)
!4304 = !DILocation(line: 2354, column: 25, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2353, column: 10)
!4306 = !DILocation(line: 2354, column: 30, scope: !4305)
!4307 = !DILocation(line: 2354, column: 13, scope: !4305)
!4308 = !DILocation(line: 2354, column: 11, scope: !4305)
!4309 = !DILocation(line: 2357, column: 9, scope: !4249)
!4310 = !DILocation(line: 2358, column: 1, scope: !4249)
!4311 = !DILocation(line: 2357, column: 2, scope: !4249)
!4312 = distinct !DISubprogram(name: "ifree", scope: !3, file: !3, line: 2864, type: !4313, scopeLine: 2864, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4315)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{null, !1347, !383, !740, !389}
!4315 = !{!4316, !4317, !4318, !4319, !4320, !4321}
!4316 = !DILocalVariable(name: "tsd", arg: 1, scope: !4312, file: !3, line: 2864, type: !1347)
!4317 = !DILocalVariable(name: "ptr", arg: 2, scope: !4312, file: !3, line: 2864, type: !383)
!4318 = !DILocalVariable(name: "tcache", arg: 3, scope: !4312, file: !3, line: 2864, type: !740)
!4319 = !DILocalVariable(name: "slow_path", arg: 4, scope: !4312, file: !3, line: 2864, type: !389)
!4320 = !DILocalVariable(name: "alloc_ctx", scope: !4312, file: !3, line: 2876, type: !1778)
!4321 = !DILocalVariable(name: "usize", scope: !4312, file: !3, line: 2881, type: !387)
!4322 = !DILocation(line: 2864, column: 14, scope: !4312)
!4323 = !DILocation(line: 2864, column: 25, scope: !4312)
!4324 = !DILocation(line: 2864, column: 40, scope: !4312)
!4325 = !DILocation(line: 2864, column: 53, scope: !4312)
!4326 = !DILocation(line: 2865, column: 7, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 2865, column: 6)
!4328 = !DILocation(line: 2865, column: 6, scope: !4312)
!4329 = !DILocation(line: 2866, column: 19, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 2865, column: 18)
!4331 = !DILocation(line: 2866, column: 3, scope: !4330)
!4332 = !DILocation(line: 2867, column: 2, scope: !4330)
!4333 = !DILocation(line: 2868, column: 36, scope: !4312)
!4334 = !DILocation(line: 2868, column: 27, scope: !4312)
!4335 = !DILocation(line: 2868, column: 2, scope: !4312)
!4336 = !DILocation(line: 2869, column: 31, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 2869, column: 6)
!4338 = !DILocation(line: 2869, column: 6, scope: !4337)
!4339 = !DILocation(line: 2869, column: 36, scope: !4337)
!4340 = !DILocation(line: 2869, column: 6, scope: !4312)
!4341 = !DILocation(line: 2870, column: 3, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 2869, column: 42)
!4343 = !DILocation(line: 2870, column: 3, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 2870, column: 3)
!4345 = !DILocation(line: 2871, column: 2, scope: !4342)
!4346 = !DILocation(line: 2873, column: 2, scope: !4312)
!4347 = !DILocation(line: 2873, column: 2, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 2873, column: 2)
!4349 = !DILocation(line: 2874, column: 2, scope: !4312)
!4350 = !DILocation(line: 2874, column: 2, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 2874, column: 2)
!4352 = !DILocation(line: 2876, column: 2, scope: !4312)
!4353 = !DILocation(line: 2876, column: 19, scope: !4312)
!4354 = !DILocation(line: 2877, column: 33, scope: !4312)
!4355 = !DILocation(line: 2877, column: 24, scope: !4312)
!4356 = !DILocation(line: 2877, column: 59, scope: !4312)
!4357 = !DILocation(line: 2877, column: 2, scope: !4312)
!4358 = !DILocation(line: 2879, column: 2, scope: !4312)
!4359 = !DILocation(line: 2879, column: 2, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 2879, column: 2)
!4361 = !DILocation(line: 2881, column: 2, scope: !4312)
!4362 = !DILocation(line: 2881, column: 9, scope: !4312)
!4363 = !DILocation(line: 2881, column: 41, scope: !4312)
!4364 = !{!4365, !2792, i64 0}
!4365 = !{!"emap_alloc_ctx_t", !2792, i64 0, !2696, i64 4}
!4366 = !DILocation(line: 2881, column: 17, scope: !4312)
!4367 = !DILocation(line: 2886, column: 6, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 2886, column: 6)
!4369 = !DILocation(line: 2886, column: 6, scope: !4312)
!4370 = !DILocation(line: 2887, column: 22, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 2886, column: 26)
!4372 = !DILocation(line: 2887, column: 13, scope: !4371)
!4373 = !DILocation(line: 2887, column: 28, scope: !4371)
!4374 = !DILocation(line: 2887, column: 33, scope: !4371)
!4375 = !DILocation(line: 2887, column: 3, scope: !4371)
!4376 = !DILocation(line: 2889, column: 2, scope: !4371)
!4377 = !DILocation(line: 2890, column: 22, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2890, column: 7)
!4379 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 2889, column: 9)
!4380 = !DILocation(line: 2890, column: 32, scope: !4378)
!4381 = !DILocation(line: 2890, column: 35, scope: !4378)
!4382 = !DILocation(line: 2890, column: 7, scope: !4379)
!4383 = !DILocation(line: 2891, column: 4, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 2890, column: 50)
!4385 = !DILocation(line: 2891, column: 23, scope: !4384)
!4386 = !DILocation(line: 2891, column: 28, scope: !4384)
!4387 = !DILocation(line: 2892, column: 3, scope: !4384)
!4388 = !DILocation(line: 2893, column: 22, scope: !4379)
!4389 = !DILocation(line: 2893, column: 13, scope: !4379)
!4390 = !DILocation(line: 2893, column: 28, scope: !4379)
!4391 = !DILocation(line: 2893, column: 33, scope: !4379)
!4392 = !DILocation(line: 2893, column: 3, scope: !4379)
!4393 = !DILocation(line: 2896, column: 22, scope: !4312)
!4394 = !DILocation(line: 2896, column: 27, scope: !4312)
!4395 = !DILocation(line: 2896, column: 2, scope: !4312)
!4396 = !DILocation(line: 2897, column: 1, scope: !4312)
!4397 = !DISubprogram(name: "hook_invoke_dalloc", scope: !99, file: !99, line: 157, type: !4398, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{null, !4400, !383, !1421}
!4400 = !DIDerivedType(tag: DW_TAG_typedef, name: "hook_dalloc_t", file: !99, line: 82, baseType: !110)
!4401 = !DILocation(line: 3158, column: 15, scope: !1632)
!4402 = !DILocation(line: 3159, column: 2, scope: !1632)
!4403 = !DILocation(line: 3159, column: 2, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !1632, file: !3, line: 3159, column: 2)
!4405 = !DILocation(line: 3161, column: 21, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !1632, file: !3, line: 3161, column: 6)
!4407 = !DILocation(line: 3161, column: 7, scope: !4406)
!4408 = !DILocation(line: 3161, column: 6, scope: !1632)
!4409 = !DILocation(line: 3162, column: 16, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 3161, column: 37)
!4411 = !DILocation(line: 3162, column: 3, scope: !4410)
!4412 = !DILocation(line: 3163, column: 2, scope: !4410)
!4413 = !DILocation(line: 3165, column: 2, scope: !1632)
!4414 = !DILocation(line: 3165, column: 2, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !1632, file: !3, line: 3165, column: 2)
!4416 = !DILocation(line: 3166, column: 1, scope: !1632)
!4417 = distinct !DISubprogram(name: "free_fastpath", scope: !3, file: !3, line: 3065, type: !4418, scopeLine: 3065, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4420)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!389, !383, !387, !389}
!4420 = !{!4421, !4422, !4423, !4424, !4425, !4426, !4429, !4430, !4431, !4432, !4433, !4434, !4435}
!4421 = !DILocalVariable(name: "ptr", arg: 1, scope: !4417, file: !3, line: 3065, type: !383)
!4422 = !DILocalVariable(name: "size", arg: 2, scope: !4417, file: !3, line: 3065, type: !387)
!4423 = !DILocalVariable(name: "size_hint", arg: 3, scope: !4417, file: !3, line: 3065, type: !389)
!4424 = !DILocalVariable(name: "tsd", scope: !4417, file: !3, line: 3066, type: !1347)
!4425 = !DILocalVariable(name: "alloc_ctx", scope: !4417, file: !3, line: 3079, type: !1778)
!4426 = !DILocalVariable(name: "err", scope: !4427, file: !3, line: 3081, type: !389)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 3080, column: 18)
!4428 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3080, column: 6)
!4429 = !DILocalVariable(name: "deallocated", scope: !4417, file: !3, line: 3115, type: !408)
!4430 = !DILocalVariable(name: "threshold", scope: !4417, file: !3, line: 3115, type: !408)
!4431 = !DILocalVariable(name: "usize", scope: !4417, file: !3, line: 3118, type: !387)
!4432 = !DILocalVariable(name: "deallocated_after", scope: !4417, file: !3, line: 3119, type: !408)
!4433 = !DILocalVariable(name: "fail", scope: !4417, file: !3, line: 3131, type: !389)
!4434 = !DILocalVariable(name: "tcache", scope: !4417, file: !3, line: 3137, type: !740)
!4435 = !DILocalVariable(name: "bin", scope: !4417, file: !3, line: 3139, type: !707)
!4436 = !DILocation(line: 3065, column: 26, scope: !4417)
!4437 = !DILocation(line: 3065, column: 38, scope: !4417)
!4438 = !DILocation(line: 3065, column: 49, scope: !4417)
!4439 = !DILocation(line: 3066, column: 2, scope: !4417)
!4440 = !DILocation(line: 3066, column: 9, scope: !4417)
!4441 = !DILocation(line: 3066, column: 15, scope: !4417)
!4442 = !DILocation(line: 3068, column: 6, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3068, column: 6)
!4444 = !DILocation(line: 3068, column: 6, scope: !4417)
!4445 = !DILocation(line: 3069, column: 3, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 3068, column: 29)
!4447 = !DILocation(line: 3076, column: 2, scope: !4417)
!4448 = !DILocation(line: 3076, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3076, column: 2)
!4450 = !DILocation(line: 3079, column: 2, scope: !4417)
!4451 = !DILocation(line: 3079, column: 19, scope: !4417)
!4452 = !DILocation(line: 3080, column: 7, scope: !4428)
!4453 = !DILocation(line: 3080, column: 6, scope: !4417)
!4454 = !DILocation(line: 3081, column: 3, scope: !4427)
!4455 = !DILocation(line: 3081, column: 8, scope: !4427)
!4456 = !DILocation(line: 3081, column: 45, scope: !4427)
!4457 = !DILocation(line: 3082, column: 27, scope: !4427)
!4458 = !DILocation(line: 3081, column: 14, scope: !4427)
!4459 = !DILocation(line: 3085, column: 7, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 3085, column: 7)
!4461 = !{!4365, !2696, i64 4}
!4462 = !DILocation(line: 3085, column: 7, scope: !4427)
!4463 = !DILocation(line: 3088, column: 4, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 3087, column: 33)
!4465 = !DILocation(line: 3090, column: 3, scope: !4427)
!4466 = !DILocation(line: 3090, column: 3, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 3090, column: 3)
!4468 = !DILocation(line: 3091, column: 2, scope: !4428)
!4469 = !DILocation(line: 3091, column: 2, scope: !4427)
!4470 = !DILocation(line: 3097, column: 7, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 3097, column: 7)
!4472 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 3091, column: 9)
!4473 = !DILocation(line: 3097, column: 7, scope: !4472)
!4474 = !DILocation(line: 3100, column: 4, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 3099, column: 32)
!4476 = !DILocation(line: 3102, column: 42, scope: !4472)
!4477 = !DILocation(line: 3102, column: 21, scope: !4472)
!4478 = !DILocation(line: 3102, column: 13, scope: !4472)
!4479 = !DILocation(line: 3102, column: 19, scope: !4472)
!4480 = !DILocation(line: 3104, column: 3, scope: !4472)
!4481 = !DILocation(line: 3104, column: 3, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 3104, column: 3)
!4483 = !DILocation(line: 3106, column: 13, scope: !4472)
!4484 = !DILocation(line: 3106, column: 18, scope: !4472)
!4485 = !DILocation(line: 3113, column: 2, scope: !4417)
!4486 = !DILocation(line: 3113, column: 2, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3113, column: 2)
!4488 = !DILocation(line: 3115, column: 2, scope: !4417)
!4489 = !DILocation(line: 3115, column: 11, scope: !4417)
!4490 = !DILocation(line: 3115, column: 24, scope: !4417)
!4491 = !DILocation(line: 3116, column: 23, scope: !4417)
!4492 = !DILocation(line: 3116, column: 2, scope: !4417)
!4493 = !DILocation(line: 3118, column: 2, scope: !4417)
!4494 = !DILocation(line: 3118, column: 9, scope: !4417)
!4495 = !DILocation(line: 3118, column: 41, scope: !4417)
!4496 = !DILocation(line: 3118, column: 17, scope: !4417)
!4497 = !DILocation(line: 3119, column: 2, scope: !4417)
!4498 = !DILocation(line: 3119, column: 11, scope: !4417)
!4499 = !DILocation(line: 3119, column: 31, scope: !4417)
!4500 = !DILocation(line: 3119, column: 45, scope: !4417)
!4501 = !DILocation(line: 3119, column: 43, scope: !4417)
!4502 = !DILocation(line: 3127, column: 6, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3127, column: 6)
!4504 = !DILocation(line: 3127, column: 6, scope: !4417)
!4505 = !DILocation(line: 3128, column: 3, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 3127, column: 48)
!4507 = !DILocation(line: 3130, column: 2, scope: !4417)
!4508 = !DILocation(line: 3130, column: 2, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3130, column: 2)
!4510 = !DILocation(line: 3131, column: 2, scope: !4417)
!4511 = !DILocation(line: 3131, column: 7, scope: !4417)
!4512 = !DILocation(line: 3131, column: 36, scope: !4417)
!4513 = !DILocation(line: 3131, column: 41, scope: !4417)
!4514 = !DILocation(line: 3131, column: 14, scope: !4417)
!4515 = !DILocation(line: 3132, column: 6, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3132, column: 6)
!4517 = !DILocation(line: 3132, column: 6, scope: !4417)
!4518 = !DILocation(line: 3134, column: 3, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 3132, column: 12)
!4520 = !DILocation(line: 3137, column: 2, scope: !4417)
!4521 = !DILocation(line: 3137, column: 12, scope: !4417)
!4522 = !DILocation(line: 3137, column: 41, scope: !4417)
!4523 = !DILocation(line: 3137, column: 21, scope: !4417)
!4524 = !DILocation(line: 3139, column: 2, scope: !4417)
!4525 = !DILocation(line: 3139, column: 15, scope: !4417)
!4526 = !DILocation(line: 3139, column: 22, scope: !4417)
!4527 = !DILocation(line: 3139, column: 30, scope: !4417)
!4528 = !DILocation(line: 3139, column: 45, scope: !4417)
!4529 = !DILocation(line: 3146, column: 2, scope: !4417)
!4530 = !DILocation(line: 3146, column: 2, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3146, column: 2)
!4532 = !DILocation(line: 3148, column: 29, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 3148, column: 6)
!4534 = !DILocation(line: 3148, column: 34, scope: !4533)
!4535 = !DILocation(line: 3148, column: 7, scope: !4533)
!4536 = !DILocation(line: 3148, column: 6, scope: !4417)
!4537 = !DILocation(line: 3149, column: 3, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 3148, column: 40)
!4539 = !DILocation(line: 3152, column: 38, scope: !4417)
!4540 = !DILocation(line: 3152, column: 31, scope: !4417)
!4541 = !DILocation(line: 3152, column: 3, scope: !4417)
!4542 = !DILocation(line: 3152, column: 36, scope: !4417)
!4543 = !DILocation(line: 3154, column: 2, scope: !4417)
!4544 = !DILocation(line: 3155, column: 1, scope: !4417)
!4545 = !DILocation(line: 3180, column: 20, scope: !1651)
!4546 = !DILocation(line: 3180, column: 38, scope: !1651)
!4547 = !DILocation(line: 3181, column: 2, scope: !1651)
!4548 = !DILocation(line: 3181, column: 8, scope: !1651)
!4549 = !DILocation(line: 3182, column: 2, scope: !1651)
!4550 = !DILocation(line: 3182, column: 16, scope: !1651)
!4551 = !DILocation(line: 3183, column: 2, scope: !1651)
!4552 = !DILocation(line: 3183, column: 17, scope: !1651)
!4553 = !DILocation(line: 3185, column: 2, scope: !1651)
!4554 = !DILocation(line: 3185, column: 2, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !1651, file: !3, line: 3185, column: 2)
!4556 = !DILocation(line: 3188, column: 2, scope: !1651)
!4557 = !DILocation(line: 3189, column: 2, scope: !1651)
!4558 = !DILocation(line: 3191, column: 8, scope: !1651)
!4559 = !DILocation(line: 3191, column: 22, scope: !1651)
!4560 = !DILocation(line: 3192, column: 8, scope: !1651)
!4561 = !DILocation(line: 3192, column: 19, scope: !1651)
!4562 = !DILocation(line: 3194, column: 8, scope: !1651)
!4563 = !DILocation(line: 3194, column: 33, scope: !1651)
!4564 = !DILocation(line: 3196, column: 8, scope: !1651)
!4565 = !DILocation(line: 3196, column: 33, scope: !1651)
!4566 = !DILocation(line: 3198, column: 8, scope: !1651)
!4567 = !DILocation(line: 3198, column: 15, scope: !1651)
!4568 = !DILocation(line: 3199, column: 8, scope: !1651)
!4569 = !DILocation(line: 3199, column: 18, scope: !1651)
!4570 = !DILocation(line: 3200, column: 20, scope: !1651)
!4571 = !DILocation(line: 3200, column: 8, scope: !1651)
!4572 = !DILocation(line: 3200, column: 18, scope: !1651)
!4573 = !DILocation(line: 3201, column: 20, scope: !1651)
!4574 = !DILocation(line: 3201, column: 8, scope: !1651)
!4575 = !DILocation(line: 3201, column: 18, scope: !1651)
!4576 = !DILocation(line: 3203, column: 2, scope: !1651)
!4577 = !DILocation(line: 3204, column: 12, scope: !1660)
!4578 = !DILocation(line: 3204, column: 6, scope: !1651)
!4579 = !DILocation(line: 3205, column: 3, scope: !1659)
!4580 = !DILocation(line: 3205, column: 13, scope: !1659)
!4581 = !DILocation(line: 3205, column: 23, scope: !1659)
!4582 = !DILocation(line: 3205, column: 24, scope: !1659)
!4583 = !DILocation(line: 3205, column: 35, scope: !1659)
!4584 = !DILocation(line: 3206, column: 42, scope: !1659)
!4585 = !DILocation(line: 3206, column: 58, scope: !1659)
!4586 = !DILocation(line: 3206, column: 47, scope: !1659)
!4587 = !DILocation(line: 3207, column: 7, scope: !1659)
!4588 = !DILocation(line: 3206, column: 3, scope: !1659)
!4589 = !DILocation(line: 3208, column: 2, scope: !1660)
!4590 = !DILocation(line: 3208, column: 2, scope: !1659)
!4591 = !DILocation(line: 3210, column: 2, scope: !1651)
!4592 = !DILocation(line: 3210, column: 2, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !1651, file: !3, line: 3210, column: 2)
!4594 = !DILocation(line: 3211, column: 9, scope: !1651)
!4595 = !DILocation(line: 3212, column: 1, scope: !1651)
!4596 = !DILocation(line: 3211, column: 2, scope: !1651)
!4597 = !DILocation(line: 3219, column: 18, scope: !1672)
!4598 = !DILocation(line: 3220, column: 2, scope: !1672)
!4599 = !DILocation(line: 3220, column: 8, scope: !1672)
!4600 = !DILocation(line: 3222, column: 2, scope: !1672)
!4601 = !DILocation(line: 3222, column: 16, scope: !1672)
!4602 = !DILocation(line: 3223, column: 2, scope: !1672)
!4603 = !DILocation(line: 3223, column: 17, scope: !1672)
!4604 = !DILocation(line: 3225, column: 2, scope: !1672)
!4605 = !DILocation(line: 3225, column: 2, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 3225, column: 2)
!4607 = !DILocation(line: 3227, column: 2, scope: !1672)
!4608 = !DILocation(line: 3228, column: 2, scope: !1672)
!4609 = !DILocation(line: 3230, column: 8, scope: !1672)
!4610 = !DILocation(line: 3230, column: 33, scope: !1672)
!4611 = !DILocation(line: 3231, column: 8, scope: !1672)
!4612 = !DILocation(line: 3231, column: 22, scope: !1672)
!4613 = !DILocation(line: 3232, column: 8, scope: !1672)
!4614 = !DILocation(line: 3232, column: 19, scope: !1672)
!4615 = !DILocation(line: 3234, column: 8, scope: !1672)
!4616 = !DILocation(line: 3234, column: 33, scope: !1672)
!4617 = !DILocation(line: 3237, column: 8, scope: !1672)
!4618 = !DILocation(line: 3237, column: 15, scope: !1672)
!4619 = !DILocation(line: 3238, column: 8, scope: !1672)
!4620 = !DILocation(line: 3238, column: 18, scope: !1672)
!4621 = !DILocation(line: 3239, column: 20, scope: !1672)
!4622 = !DILocation(line: 3239, column: 8, scope: !1672)
!4623 = !DILocation(line: 3239, column: 18, scope: !1672)
!4624 = !DILocation(line: 3240, column: 8, scope: !1672)
!4625 = !DILocation(line: 3240, column: 18, scope: !1672)
!4626 = !DILocation(line: 3242, column: 2, scope: !1672)
!4627 = !DILocation(line: 3243, column: 12, scope: !1680)
!4628 = !DILocation(line: 3243, column: 6, scope: !1672)
!4629 = !DILocation(line: 3244, column: 3, scope: !1679)
!4630 = !DILocation(line: 3244, column: 13, scope: !1679)
!4631 = !DILocation(line: 3244, column: 23, scope: !1679)
!4632 = !DILocation(line: 3244, column: 24, scope: !1679)
!4633 = !DILocation(line: 3245, column: 40, scope: !1679)
!4634 = !DILocation(line: 3245, column: 56, scope: !1679)
!4635 = !DILocation(line: 3245, column: 45, scope: !1679)
!4636 = !DILocation(line: 3245, column: 61, scope: !1679)
!4637 = !DILocation(line: 3245, column: 3, scope: !1679)
!4638 = !DILocation(line: 3246, column: 2, scope: !1680)
!4639 = !DILocation(line: 3246, column: 2, scope: !1679)
!4640 = !DILocation(line: 3248, column: 2, scope: !1672)
!4641 = !DILocation(line: 3248, column: 2, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 3248, column: 2)
!4643 = !DILocation(line: 3249, column: 9, scope: !1672)
!4644 = !DILocation(line: 3250, column: 1, scope: !1672)
!4645 = !DILocation(line: 3249, column: 2, scope: !1672)
!4646 = !DILocation(line: 3400, column: 19, scope: !1689)
!4647 = !DILocation(line: 3400, column: 29, scope: !1689)
!4648 = !DILocation(line: 3401, column: 2, scope: !1689)
!4649 = !DILocation(line: 3401, column: 8, scope: !1689)
!4650 = !DILocation(line: 3402, column: 2, scope: !1689)
!4651 = !DILocation(line: 3402, column: 16, scope: !1689)
!4652 = !DILocation(line: 3403, column: 2, scope: !1689)
!4653 = !DILocation(line: 3403, column: 17, scope: !1689)
!4654 = !DILocation(line: 3405, column: 2, scope: !1689)
!4655 = !DILocation(line: 3405, column: 2, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 3405, column: 2)
!4657 = !DILocation(line: 3407, column: 2, scope: !1689)
!4658 = !DILocation(line: 3408, column: 2, scope: !1689)
!4659 = !DILocation(line: 3410, column: 8, scope: !1689)
!4660 = !DILocation(line: 3410, column: 30, scope: !1689)
!4661 = !DILocation(line: 3411, column: 8, scope: !1689)
!4662 = !DILocation(line: 3411, column: 33, scope: !1689)
!4663 = !DILocation(line: 3412, column: 8, scope: !1689)
!4664 = !DILocation(line: 3412, column: 19, scope: !1689)
!4665 = !DILocation(line: 3414, column: 8, scope: !1689)
!4666 = !DILocation(line: 3414, column: 15, scope: !1689)
!4667 = !DILocation(line: 3415, column: 8, scope: !1689)
!4668 = !DILocation(line: 3415, column: 18, scope: !1689)
!4669 = !DILocation(line: 3416, column: 20, scope: !1689)
!4670 = !DILocation(line: 3416, column: 8, scope: !1689)
!4671 = !DILocation(line: 3416, column: 18, scope: !1689)
!4672 = !DILocation(line: 3417, column: 6, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 3417, column: 6)
!4674 = !DILocation(line: 3417, column: 6, scope: !1689)
!4675 = !DILocation(line: 3418, column: 21, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 3417, column: 28)
!4677 = !DILocation(line: 3418, column: 9, scope: !4676)
!4678 = !DILocation(line: 3418, column: 19, scope: !4676)
!4679 = !DILocation(line: 3419, column: 16, scope: !4676)
!4680 = !DILocation(line: 3419, column: 9, scope: !4676)
!4681 = !DILocation(line: 3419, column: 14, scope: !4676)
!4682 = !DILocation(line: 3420, column: 41, scope: !4676)
!4683 = !DILocation(line: 3420, column: 22, scope: !4676)
!4684 = !DILocation(line: 3420, column: 9, scope: !4676)
!4685 = !DILocation(line: 3420, column: 20, scope: !4676)
!4686 = !DILocation(line: 3421, column: 39, scope: !4676)
!4687 = !DILocation(line: 3421, column: 21, scope: !4676)
!4688 = !DILocation(line: 3421, column: 9, scope: !4676)
!4689 = !DILocation(line: 3421, column: 19, scope: !4676)
!4690 = !DILocation(line: 3422, column: 2, scope: !4676)
!4691 = !DILocation(line: 3424, column: 2, scope: !1689)
!4692 = !DILocation(line: 3425, column: 12, scope: !1700)
!4693 = !DILocation(line: 3425, column: 6, scope: !1689)
!4694 = !DILocation(line: 3426, column: 3, scope: !1699)
!4695 = !DILocation(line: 3426, column: 13, scope: !1699)
!4696 = !DILocation(line: 3426, column: 23, scope: !1699)
!4697 = !DILocation(line: 3426, column: 24, scope: !1699)
!4698 = !DILocation(line: 3426, column: 30, scope: !1699)
!4699 = !DILocation(line: 3427, column: 41, scope: !1699)
!4700 = !DILocation(line: 3427, column: 57, scope: !1699)
!4701 = !DILocation(line: 3427, column: 46, scope: !1699)
!4702 = !DILocation(line: 3428, column: 7, scope: !1699)
!4703 = !DILocation(line: 3427, column: 3, scope: !1699)
!4704 = !DILocation(line: 3429, column: 2, scope: !1700)
!4705 = !DILocation(line: 3429, column: 2, scope: !1699)
!4706 = !DILocation(line: 3431, column: 2, scope: !1689)
!4707 = !DILocation(line: 3431, column: 2, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 3431, column: 2)
!4709 = !DILocation(line: 3432, column: 9, scope: !1689)
!4710 = !DILocation(line: 3433, column: 1, scope: !1689)
!4711 = !DILocation(line: 3432, column: 2, scope: !1689)
!4712 = distinct !DISubprogram(name: "mallocx_tcache_get", scope: !3, file: !3, line: 3317, type: !4713, scopeLine: 3317, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4715)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{!7, !390}
!4715 = !{!4716}
!4716 = !DILocalVariable(name: "flags", arg: 1, scope: !4712, file: !3, line: 3317, type: !390)
!4717 = !DILocation(line: 3317, column: 24, scope: !4712)
!4718 = !DILocation(line: 3318, column: 6, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 3318, column: 6)
!4720 = !DILocation(line: 3318, column: 6, scope: !4712)
!4721 = !DILocation(line: 3319, column: 3, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3318, column: 50)
!4723 = !DILocation(line: 3320, column: 14, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3320, column: 13)
!4725 = !DILocation(line: 3320, column: 20, scope: !4724)
!4726 = !DILocation(line: 3320, column: 43, scope: !4724)
!4727 = !DILocation(line: 3320, column: 13, scope: !4719)
!4728 = !DILocation(line: 3321, column: 3, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 3320, column: 67)
!4730 = !DILocation(line: 3323, column: 10, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 3322, column: 9)
!4732 = !DILocation(line: 3323, column: 3, scope: !4731)
!4733 = !DILocation(line: 3325, column: 1, scope: !4712)
!4734 = distinct !DISubprogram(name: "mallocx_arena_get", scope: !3, file: !3, line: 3328, type: !4713, scopeLine: 3328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4735)
!4735 = !{!4736}
!4736 = !DILocalVariable(name: "flags", arg: 1, scope: !4734, file: !3, line: 3328, type: !390)
!4737 = !DILocation(line: 3328, column: 23, scope: !4734)
!4738 = !DILocation(line: 3329, column: 6, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 3329, column: 6)
!4740 = !DILocation(line: 3329, column: 6, scope: !4734)
!4741 = !DILocation(line: 3330, column: 10, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 3329, column: 51)
!4743 = !DILocation(line: 3330, column: 3, scope: !4742)
!4744 = !DILocation(line: 3332, column: 3, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 3331, column: 9)
!4746 = !DILocation(line: 3334, column: 1, scope: !4734)
!4747 = !DILocation(line: 3573, column: 18, scope: !1714)
!4748 = !DILocation(line: 3573, column: 30, scope: !1714)
!4749 = !DILocation(line: 3573, column: 40, scope: !1714)
!4750 = !DILocation(line: 3574, column: 2, scope: !1714)
!4751 = !DILocation(line: 3574, column: 2, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 3574, column: 2)
!4753 = !DILocation(line: 3576, column: 2, scope: !1714)
!4754 = !DILocation(line: 3576, column: 8, scope: !1714)
!4755 = !DILocation(line: 3576, column: 25, scope: !1714)
!4756 = !DILocation(line: 3576, column: 30, scope: !1714)
!4757 = !DILocation(line: 3576, column: 36, scope: !1714)
!4758 = !DILocation(line: 3576, column: 14, scope: !1714)
!4759 = !DILocation(line: 3577, column: 2, scope: !1714)
!4760 = !DILocation(line: 3577, column: 2, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 3577, column: 2)
!4762 = !DILocation(line: 3578, column: 9, scope: !1714)
!4763 = !DILocation(line: 3579, column: 1, scope: !1714)
!4764 = !DILocation(line: 3578, column: 2, scope: !1714)
!4765 = distinct !DISubprogram(name: "do_rallocx", scope: !3, file: !3, line: 3493, type: !4766, scopeLine: 3493, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4768)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!383, !383, !387, !390, !389}
!4768 = !{!4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4790, !4793, !4794}
!4769 = !DILocalVariable(name: "ptr", arg: 1, scope: !4765, file: !3, line: 3493, type: !383)
!4770 = !DILocalVariable(name: "size", arg: 2, scope: !4765, file: !3, line: 3493, type: !387)
!4771 = !DILocalVariable(name: "flags", arg: 3, scope: !4765, file: !3, line: 3493, type: !390)
!4772 = !DILocalVariable(name: "is_realloc", arg: 4, scope: !4765, file: !3, line: 3493, type: !389)
!4773 = !DILocalVariable(name: "p", scope: !4765, file: !3, line: 3494, type: !383)
!4774 = !DILocalVariable(name: "tsd", scope: !4765, file: !3, line: 3495, type: !1347)
!4775 = !DILocalVariable(name: "usize", scope: !4765, file: !3, line: 3496, type: !387)
!4776 = !DILocalVariable(name: "old_usize", scope: !4765, file: !3, line: 3497, type: !387)
!4777 = !DILocalVariable(name: "alignment", scope: !4765, file: !3, line: 3498, type: !387)
!4778 = !DILocalVariable(name: "arena", scope: !4765, file: !3, line: 3499, type: !594)
!4779 = !DILocalVariable(name: "zero", scope: !4765, file: !3, line: 3507, type: !389)
!4780 = !DILocalVariable(name: "arena_ind", scope: !4765, file: !3, line: 3509, type: !7)
!4781 = !DILocalVariable(name: "tcache_ind", scope: !4765, file: !3, line: 3514, type: !7)
!4782 = !DILocalVariable(name: "tcache", scope: !4765, file: !3, line: 3515, type: !740)
!4783 = !DILocalVariable(name: "alloc_ctx", scope: !4765, file: !3, line: 3518, type: !1778)
!4784 = !DILocalVariable(name: "hook_args", scope: !4765, file: !3, line: 3528, type: !4785)
!4785 = !DIDerivedType(tag: DW_TAG_typedef, name: "hook_ralloc_args_t", file: !99, line: 130, baseType: !4786)
!4786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hook_ralloc_args_s", file: !99, line: 131, size: 320, elements: !4787)
!4787 = !{!4788, !4789}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "is_realloc", scope: !4786, file: !99, line: 133, baseType: !389, size: 8)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4786, file: !99, line: 139, baseType: !1791, size: 256, offset: 64)
!4790 = !DILocalVariable(name: "excess_len", scope: !4791, file: !3, line: 3553, type: !387)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 3552, column: 16)
!4792 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3551, column: 6)
!4793 = !DILocalVariable(name: "excess_start", scope: !4791, file: !3, line: 3554, type: !383)
!4794 = !DILabel(scope: !4765, name: "label_oom", file: !3, line: 3559)
!4795 = !DILocation(line: 3493, column: 18, scope: !4765)
!4796 = !DILocation(line: 3493, column: 30, scope: !4765)
!4797 = !DILocation(line: 3493, column: 40, scope: !4765)
!4798 = !DILocation(line: 3493, column: 52, scope: !4765)
!4799 = !DILocation(line: 3494, column: 2, scope: !4765)
!4800 = !DILocation(line: 3494, column: 8, scope: !4765)
!4801 = !DILocation(line: 3495, column: 2, scope: !4765)
!4802 = !DILocation(line: 3495, column: 9, scope: !4765)
!4803 = !DILocation(line: 3496, column: 2, scope: !4765)
!4804 = !DILocation(line: 3496, column: 9, scope: !4765)
!4805 = !DILocation(line: 3497, column: 2, scope: !4765)
!4806 = !DILocation(line: 3497, column: 9, scope: !4765)
!4807 = !DILocation(line: 3498, column: 2, scope: !4765)
!4808 = !DILocation(line: 3498, column: 9, scope: !4765)
!4809 = !DILocation(line: 3498, column: 21, scope: !4765)
!4810 = !DILocation(line: 3499, column: 2, scope: !4765)
!4811 = !DILocation(line: 3499, column: 11, scope: !4765)
!4812 = !DILocation(line: 3501, column: 2, scope: !4765)
!4813 = !DILocation(line: 3501, column: 2, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3501, column: 2)
!4815 = !DILocation(line: 3502, column: 2, scope: !4765)
!4816 = !DILocation(line: 3502, column: 2, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3502, column: 2)
!4818 = !DILocation(line: 3503, column: 2, scope: !4765)
!4819 = !DILocation(line: 3503, column: 2, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3503, column: 2)
!4821 = !DILocation(line: 3504, column: 8, scope: !4765)
!4822 = !DILocation(line: 3504, column: 6, scope: !4765)
!4823 = !DILocation(line: 3505, column: 36, scope: !4765)
!4824 = !DILocation(line: 3505, column: 27, scope: !4765)
!4825 = !DILocation(line: 3505, column: 2, scope: !4765)
!4826 = !DILocation(line: 3507, column: 2, scope: !4765)
!4827 = !DILocation(line: 3507, column: 7, scope: !4765)
!4828 = !DILocation(line: 3507, column: 23, scope: !4765)
!4829 = !DILocation(line: 3507, column: 14, scope: !4765)
!4830 = !DILocation(line: 3509, column: 2, scope: !4765)
!4831 = !DILocation(line: 3509, column: 11, scope: !4765)
!4832 = !DILocation(line: 3509, column: 41, scope: !4765)
!4833 = !DILocation(line: 3509, column: 23, scope: !4765)
!4834 = !DILocation(line: 3510, column: 25, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3510, column: 6)
!4836 = !DILocation(line: 3510, column: 30, scope: !4835)
!4837 = !DILocation(line: 3510, column: 6, scope: !4835)
!4838 = !DILocation(line: 3510, column: 6, scope: !4765)
!4839 = !DILocation(line: 3511, column: 3, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 3510, column: 50)
!4841 = !DILocation(line: 3514, column: 11, scope: !4765)
!4842 = !DILocation(line: 3514, column: 43, scope: !4765)
!4843 = !DILocation(line: 3514, column: 24, scope: !4765)
!4844 = !DILocation(line: 3515, column: 12, scope: !4765)
!4845 = !DILocation(line: 3515, column: 41, scope: !4765)
!4846 = !DILocation(line: 3515, column: 46, scope: !4765)
!4847 = !DILocation(line: 3515, column: 21, scope: !4765)
!4848 = !DILocation(line: 3518, column: 19, scope: !4765)
!4849 = !DILocation(line: 3519, column: 33, scope: !4765)
!4850 = !DILocation(line: 3519, column: 24, scope: !4765)
!4851 = !DILocation(line: 3519, column: 59, scope: !4765)
!4852 = !DILocation(line: 3519, column: 2, scope: !4765)
!4853 = !DILocation(line: 3521, column: 2, scope: !4765)
!4854 = !DILocation(line: 3521, column: 2, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3521, column: 2)
!4856 = !DILocation(line: 3522, column: 38, scope: !4765)
!4857 = !DILocation(line: 3522, column: 14, scope: !4765)
!4858 = !DILocation(line: 3522, column: 12, scope: !4765)
!4859 = !DILocation(line: 3523, column: 2, scope: !4765)
!4860 = !DILocation(line: 3523, column: 2, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3523, column: 2)
!4862 = !DILocation(line: 3524, column: 24, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3524, column: 6)
!4864 = !DILocation(line: 3524, column: 30, scope: !4863)
!4865 = !DILocation(line: 3524, column: 6, scope: !4863)
!4866 = !DILocation(line: 3524, column: 6, scope: !4765)
!4867 = !DILocation(line: 3525, column: 3, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 3524, column: 63)
!4869 = !DILocation(line: 3528, column: 21, scope: !4765)
!4870 = !DILocation(line: 3528, column: 33, scope: !4765)
!4871 = !DILocation(line: 3528, column: 34, scope: !4765)
!4872 = !{!4873, !2696, i64 0}
!4873 = !{!"hook_ralloc_args_s", !2696, i64 0, !2660, i64 8}
!4874 = !DILocation(line: 3528, column: 46, scope: !4765)
!4875 = !DILocation(line: 3528, column: 58, scope: !4765)
!4876 = !DILocation(line: 3528, column: 47, scope: !4765)
!4877 = !DILocation(line: 3528, column: 63, scope: !4765)
!4878 = !DILocation(line: 3529, column: 3, scope: !4765)
!4879 = !DILocation(line: 3537, column: 25, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 3536, column: 9)
!4881 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3530, column: 6)
!4882 = !DILocation(line: 3537, column: 16, scope: !4880)
!4883 = !DILocation(line: 3537, column: 31, scope: !4880)
!4884 = !DILocation(line: 3537, column: 36, scope: !4880)
!4885 = !DILocation(line: 3537, column: 47, scope: !4880)
!4886 = !DILocation(line: 3537, column: 53, scope: !4880)
!4887 = !DILocation(line: 3538, column: 7, scope: !4880)
!4888 = !DILocation(line: 3538, column: 13, scope: !4880)
!4889 = !DILocation(line: 3538, column: 21, scope: !4880)
!4890 = !DILocation(line: 3537, column: 7, scope: !4880)
!4891 = !DILocation(line: 3537, column: 5, scope: !4880)
!4892 = !DILocation(line: 3539, column: 7, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 3539, column: 7)
!4894 = !DILocation(line: 3539, column: 7, scope: !4880)
!4895 = !DILocation(line: 3540, column: 4, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 3539, column: 28)
!4897 = !DILocation(line: 3542, column: 3, scope: !4880)
!4898 = !DILocation(line: 3542, column: 3, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 3542, column: 3)
!4900 = !DILocation(line: 3544, column: 2, scope: !4765)
!4901 = !DILocation(line: 3544, column: 2, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 3544, column: 2)
!4903 = !DILocation(line: 3545, column: 21, scope: !4765)
!4904 = !DILocation(line: 3545, column: 26, scope: !4765)
!4905 = !DILocation(line: 3545, column: 2, scope: !4765)
!4906 = !DILocation(line: 3546, column: 22, scope: !4765)
!4907 = !DILocation(line: 3546, column: 27, scope: !4765)
!4908 = !DILocation(line: 3546, column: 2, scope: !4765)
!4909 = !DILocation(line: 3549, column: 36, scope: !4765)
!4910 = !DILocation(line: 3549, column: 27, scope: !4765)
!4911 = !DILocation(line: 3549, column: 2, scope: !4765)
!4912 = !DILocation(line: 3551, column: 21, scope: !4792)
!4913 = !DILocation(line: 3551, column: 46, scope: !4792)
!4914 = !DILocation(line: 3551, column: 49, scope: !4792)
!4915 = !DILocation(line: 3551, column: 57, scope: !4792)
!4916 = !DILocation(line: 3551, column: 55, scope: !4792)
!4917 = !DILocation(line: 3552, column: 6, scope: !4792)
!4918 = !DILocation(line: 3552, column: 10, scope: !4792)
!4919 = !DILocation(line: 3551, column: 6, scope: !4765)
!4920 = !DILocation(line: 3553, column: 3, scope: !4791)
!4921 = !DILocation(line: 3553, column: 10, scope: !4791)
!4922 = !DILocation(line: 3553, column: 23, scope: !4791)
!4923 = !DILocation(line: 3553, column: 31, scope: !4791)
!4924 = !DILocation(line: 3553, column: 29, scope: !4791)
!4925 = !DILocation(line: 3554, column: 3, scope: !4791)
!4926 = !DILocation(line: 3554, column: 9, scope: !4791)
!4927 = !DILocation(line: 3554, column: 44, scope: !4791)
!4928 = !DILocation(line: 3554, column: 33, scope: !4791)
!4929 = !DILocation(line: 3554, column: 48, scope: !4791)
!4930 = !DILocation(line: 3554, column: 46, scope: !4791)
!4931 = !DILocation(line: 3554, column: 24, scope: !4791)
!4932 = !DILocation(line: 3555, column: 3, scope: !4791)
!4933 = !DILocation(line: 3555, column: 23, scope: !4791)
!4934 = !DILocation(line: 3555, column: 37, scope: !4791)
!4935 = !DILocation(line: 3556, column: 2, scope: !4792)
!4936 = !DILocation(line: 3556, column: 2, scope: !4791)
!4937 = !DILocation(line: 3558, column: 9, scope: !4765)
!4938 = !DILocation(line: 3558, column: 2, scope: !4765)
!4939 = !DILocation(line: 3559, column: 1, scope: !4765)
!4940 = !DILocation(line: 3565, column: 36, scope: !4765)
!4941 = !DILocation(line: 3565, column: 27, scope: !4765)
!4942 = !DILocation(line: 3565, column: 2, scope: !4765)
!4943 = !DILocation(line: 3567, column: 2, scope: !4765)
!4944 = !DILocation(line: 3568, column: 1, scope: !4765)
!4945 = !DILocation(line: 3623, column: 18, scope: !1730)
!4946 = !DILocation(line: 3623, column: 30, scope: !1730)
!4947 = !DILocation(line: 3624, column: 2, scope: !1730)
!4948 = !DILocation(line: 3624, column: 2, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !1730, file: !3, line: 3624, column: 2)
!4950 = !DILocation(line: 3626, column: 6, scope: !1738)
!4951 = !DILocation(line: 0, scope: !1738)
!4952 = !DILocation(line: 3626, column: 6, scope: !1730)
!4953 = !DILocation(line: 3627, column: 3, scope: !1737)
!4954 = !DILocation(line: 3627, column: 9, scope: !1737)
!4955 = !DILocation(line: 3627, column: 26, scope: !1737)
!4956 = !DILocation(line: 3627, column: 31, scope: !1737)
!4957 = !DILocation(line: 3627, column: 15, scope: !1737)
!4958 = !DILocation(line: 3628, column: 3, scope: !1737)
!4959 = !DILocation(line: 3628, column: 3, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 3628, column: 3)
!4961 = !DILocation(line: 3629, column: 10, scope: !1737)
!4962 = !DILocation(line: 3629, column: 3, scope: !1737)
!4963 = !DILocation(line: 3630, column: 2, scope: !1738)
!4964 = !DILocation(line: 3630, column: 13, scope: !1741)
!4965 = !DILocation(line: 3630, column: 17, scope: !1741)
!4966 = !DILocation(line: 3630, column: 25, scope: !1741)
!4967 = !DILocation(line: 3630, column: 28, scope: !1741)
!4968 = !DILocation(line: 3630, column: 33, scope: !1741)
!4969 = !DILocation(line: 3630, column: 13, scope: !1738)
!4970 = !DILocation(line: 3631, column: 3, scope: !1740)
!4971 = !DILocation(line: 3631, column: 9, scope: !1740)
!4972 = !DILocation(line: 3631, column: 39, scope: !1740)
!4973 = !DILocation(line: 3631, column: 15, scope: !1740)
!4974 = !DILocation(line: 3632, column: 3, scope: !1740)
!4975 = !DILocation(line: 3632, column: 3, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !1740, file: !3, line: 3632, column: 3)
!4977 = !DILocation(line: 3633, column: 10, scope: !1740)
!4978 = !DILocation(line: 3633, column: 3, scope: !1740)
!4979 = !DILocation(line: 3634, column: 2, scope: !1741)
!4980 = !DILocation(line: 3636, column: 3, scope: !1743)
!4981 = !DILocation(line: 3636, column: 9, scope: !1743)
!4982 = !DILocation(line: 3638, column: 3, scope: !1743)
!4983 = !DILocation(line: 3638, column: 17, scope: !1743)
!4984 = !DILocation(line: 3639, column: 3, scope: !1743)
!4985 = !DILocation(line: 3639, column: 18, scope: !1743)
!4986 = !DILocation(line: 3641, column: 3, scope: !1743)
!4987 = !DILocation(line: 3642, column: 3, scope: !1743)
!4988 = !DILocation(line: 3644, column: 9, scope: !1743)
!4989 = !DILocation(line: 3644, column: 34, scope: !1743)
!4990 = !DILocation(line: 3645, column: 9, scope: !1743)
!4991 = !DILocation(line: 3645, column: 28, scope: !1743)
!4992 = !DILocation(line: 3646, column: 9, scope: !1743)
!4993 = !DILocation(line: 3646, column: 20, scope: !1743)
!4994 = !DILocation(line: 3649, column: 9, scope: !1743)
!4995 = !DILocation(line: 3649, column: 16, scope: !1743)
!4996 = !DILocation(line: 3650, column: 9, scope: !1743)
!4997 = !DILocation(line: 3650, column: 19, scope: !1743)
!4998 = !DILocation(line: 3651, column: 21, scope: !1743)
!4999 = !DILocation(line: 3651, column: 9, scope: !1743)
!5000 = !DILocation(line: 3651, column: 19, scope: !1743)
!5001 = !DILocation(line: 3653, column: 3, scope: !1743)
!5002 = !DILocation(line: 3654, column: 13, scope: !1748)
!5003 = !DILocation(line: 3654, column: 7, scope: !1743)
!5004 = !DILocation(line: 3655, column: 4, scope: !1747)
!5005 = !DILocation(line: 3655, column: 14, scope: !1747)
!5006 = !DILocation(line: 3655, column: 24, scope: !1747)
!5007 = !DILocation(line: 3655, column: 36, scope: !1747)
!5008 = !DILocation(line: 3655, column: 25, scope: !1747)
!5009 = !DILocation(line: 3655, column: 41, scope: !1747)
!5010 = !DILocation(line: 3656, column: 42, scope: !1747)
!5011 = !DILocation(line: 3657, column: 19, scope: !1747)
!5012 = !DILocation(line: 3657, column: 8, scope: !1747)
!5013 = !DILocation(line: 3657, column: 24, scope: !1747)
!5014 = !DILocation(line: 3656, column: 4, scope: !1747)
!5015 = !DILocation(line: 3658, column: 3, scope: !1748)
!5016 = !DILocation(line: 3658, column: 3, scope: !1747)
!5017 = !DILocation(line: 3659, column: 3, scope: !1743)
!5018 = !DILocation(line: 3659, column: 3, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 3659, column: 3)
!5020 = !DILocation(line: 3660, column: 10, scope: !1743)
!5021 = !DILocation(line: 3660, column: 3, scope: !1743)
!5022 = !DILocation(line: 3661, column: 2, scope: !1741)
!5023 = !DILocation(line: 3662, column: 1, scope: !1730)
!5024 = distinct !DISubprogram(name: "do_realloc_nonnull_zero", scope: !3, file: !3, line: 3582, type: !5025, scopeLine: 3582, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5027)
!5025 = !DISubroutineType(types: !5026)
!5026 = !{!383, !383}
!5027 = !{!5028, !5029, !5033, !5034}
!5028 = !DILocalVariable(name: "ptr", arg: 1, scope: !5024, file: !3, line: 3582, type: !383)
!5029 = !DILocalVariable(name: "tsd", scope: !5030, file: !3, line: 3596, type: !1347)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3594, column: 66)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 3594, column: 13)
!5032 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 3586, column: 6)
!5033 = !DILocalVariable(name: "tcache", scope: !5030, file: !3, line: 3599, type: !740)
!5034 = !DILocalVariable(name: "args", scope: !5030, file: !3, line: 3602, type: !1539)
!5035 = !DILocation(line: 3582, column: 31, scope: !5024)
!5036 = !DILocation(line: 3584, column: 3, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 3583, column: 20)
!5038 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 3583, column: 6)
!5039 = !DILocation(line: 3586, column: 6, scope: !5032)
!5040 = !DILocation(line: 3586, column: 30, scope: !5032)
!5041 = !DILocation(line: 3586, column: 6, scope: !5024)
!5042 = !DILocation(line: 3593, column: 21, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 3586, column: 60)
!5044 = !DILocation(line: 3593, column: 10, scope: !5043)
!5045 = !DILocation(line: 3593, column: 3, scope: !5043)
!5046 = !DILocation(line: 3594, column: 13, scope: !5031)
!5047 = !DILocation(line: 3594, column: 37, scope: !5031)
!5048 = !DILocation(line: 3594, column: 13, scope: !5032)
!5049 = !DILocation(line: 3596, column: 3, scope: !5030)
!5050 = !DILocation(line: 3596, column: 10, scope: !5030)
!5051 = !DILocation(line: 3596, column: 16, scope: !5030)
!5052 = !DILocation(line: 3597, column: 37, scope: !5030)
!5053 = !DILocation(line: 3597, column: 28, scope: !5030)
!5054 = !DILocation(line: 3597, column: 3, scope: !5030)
!5055 = !DILocation(line: 3599, column: 3, scope: !5030)
!5056 = !DILocation(line: 3599, column: 13, scope: !5030)
!5057 = !DILocation(line: 3599, column: 42, scope: !5030)
!5058 = !DILocation(line: 3599, column: 22, scope: !5030)
!5059 = !DILocation(line: 3602, column: 3, scope: !5030)
!5060 = !DILocation(line: 3602, column: 13, scope: !5030)
!5061 = !DILocation(line: 3602, column: 23, scope: !5030)
!5062 = !DILocation(line: 3602, column: 35, scope: !5030)
!5063 = !DILocation(line: 3602, column: 24, scope: !5030)
!5064 = !DILocation(line: 3603, column: 43, scope: !5030)
!5065 = !DILocation(line: 3603, column: 48, scope: !5030)
!5066 = !DILocation(line: 3603, column: 3, scope: !5030)
!5067 = !DILocation(line: 3604, column: 9, scope: !5030)
!5068 = !DILocation(line: 3604, column: 14, scope: !5030)
!5069 = !DILocation(line: 3604, column: 19, scope: !5030)
!5070 = !DILocation(line: 3604, column: 3, scope: !5030)
!5071 = !DILocation(line: 3606, column: 37, scope: !5030)
!5072 = !DILocation(line: 3606, column: 28, scope: !5030)
!5073 = !DILocation(line: 3606, column: 3, scope: !5030)
!5074 = !DILocation(line: 3607, column: 3, scope: !5030)
!5075 = !DILocation(line: 3608, column: 2, scope: !5031)
!5076 = !DILocation(line: 3609, column: 3, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3608, column: 9)
!5078 = !DILocation(line: 3616, column: 3, scope: !5077)
!5079 = !DILocation(line: 3618, column: 1, scope: !5024)
!5080 = !DILocation(line: 3753, column: 18, scope: !1763)
!5081 = !DILocation(line: 3753, column: 30, scope: !1763)
!5082 = !DILocation(line: 3753, column: 43, scope: !1763)
!5083 = !DILocation(line: 3753, column: 54, scope: !1763)
!5084 = !DILocation(line: 3754, column: 2, scope: !1763)
!5085 = !DILocation(line: 3754, column: 9, scope: !1763)
!5086 = !DILocation(line: 3755, column: 2, scope: !1763)
!5087 = !DILocation(line: 3755, column: 9, scope: !1763)
!5088 = !DILocation(line: 3755, column: 16, scope: !1763)
!5089 = !DILocation(line: 3756, column: 2, scope: !1763)
!5090 = !DILocation(line: 3756, column: 9, scope: !1763)
!5091 = !DILocation(line: 3756, column: 21, scope: !1763)
!5092 = !DILocation(line: 3757, column: 2, scope: !1763)
!5093 = !DILocation(line: 3757, column: 7, scope: !1763)
!5094 = !DILocation(line: 3757, column: 23, scope: !1763)
!5095 = !DILocation(line: 3757, column: 14, scope: !1763)
!5096 = !DILocation(line: 3759, column: 2, scope: !1763)
!5097 = !DILocation(line: 3759, column: 2, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3759, column: 2)
!5099 = !DILocation(line: 3762, column: 2, scope: !1763)
!5100 = !DILocation(line: 3762, column: 2, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3762, column: 2)
!5102 = !DILocation(line: 3763, column: 2, scope: !1763)
!5103 = !DILocation(line: 3763, column: 2, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3763, column: 2)
!5105 = !DILocation(line: 3764, column: 2, scope: !1763)
!5106 = !DILocation(line: 3764, column: 2, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3764, column: 2)
!5108 = !DILocation(line: 3765, column: 2, scope: !1763)
!5109 = !DILocation(line: 3765, column: 2, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3765, column: 2)
!5111 = !DILocation(line: 3766, column: 8, scope: !1763)
!5112 = !DILocation(line: 3766, column: 6, scope: !1763)
!5113 = !DILocation(line: 3767, column: 36, scope: !1763)
!5114 = !DILocation(line: 3767, column: 27, scope: !1763)
!5115 = !DILocation(line: 3767, column: 2, scope: !1763)
!5116 = !DILocation(line: 3774, column: 2, scope: !1763)
!5117 = !DILocation(line: 3774, column: 11, scope: !1763)
!5118 = !DILocation(line: 3774, column: 50, scope: !1763)
!5119 = !DILocation(line: 3774, column: 41, scope: !1763)
!5120 = !DILocation(line: 3775, column: 26, scope: !1763)
!5121 = !DILocation(line: 3774, column: 23, scope: !1763)
!5122 = !DILocation(line: 3777, column: 2, scope: !1763)
!5123 = !DILocation(line: 3777, column: 19, scope: !1763)
!5124 = !DILocation(line: 3778, column: 33, scope: !1763)
!5125 = !DILocation(line: 3778, column: 24, scope: !1763)
!5126 = !DILocation(line: 3778, column: 59, scope: !1763)
!5127 = !DILocation(line: 3778, column: 2, scope: !1763)
!5128 = !DILocation(line: 3780, column: 2, scope: !1763)
!5129 = !DILocation(line: 3780, column: 2, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3780, column: 2)
!5131 = !DILocation(line: 3781, column: 38, scope: !1763)
!5132 = !DILocation(line: 3781, column: 14, scope: !1763)
!5133 = !DILocation(line: 3781, column: 12, scope: !1763)
!5134 = !DILocation(line: 3782, column: 2, scope: !1763)
!5135 = !DILocation(line: 3782, column: 2, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3782, column: 2)
!5137 = !DILocation(line: 3792, column: 6, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3792, column: 6)
!5139 = !DILocation(line: 3792, column: 6, scope: !1763)
!5140 = !DILocation(line: 3793, column: 11, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3792, column: 42)
!5142 = !DILocation(line: 3793, column: 9, scope: !5141)
!5143 = !DILocation(line: 3794, column: 3, scope: !5141)
!5144 = !DILocation(line: 3796, column: 6, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3796, column: 6)
!5146 = !DILocation(line: 3796, column: 6, scope: !1763)
!5147 = !DILocation(line: 3797, column: 31, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 3796, column: 50)
!5149 = !DILocation(line: 3797, column: 29, scope: !5148)
!5150 = !DILocation(line: 3797, column: 9, scope: !5148)
!5151 = !DILocation(line: 3798, column: 2, scope: !5148)
!5152 = !DILocation(line: 3804, column: 36, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 3803, column: 9)
!5154 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3800, column: 6)
!5155 = !DILocation(line: 3804, column: 27, scope: !5153)
!5156 = !DILocation(line: 3804, column: 42, scope: !5153)
!5157 = !DILocation(line: 3804, column: 47, scope: !5153)
!5158 = !DILocation(line: 3804, column: 58, scope: !5153)
!5159 = !DILocation(line: 3805, column: 7, scope: !5153)
!5160 = !DILocation(line: 3805, column: 14, scope: !5153)
!5161 = !DILocation(line: 3805, column: 25, scope: !5153)
!5162 = !DILocation(line: 3804, column: 11, scope: !5153)
!5163 = !DILocation(line: 3804, column: 9, scope: !5153)
!5164 = !DILocation(line: 3812, column: 2, scope: !1763)
!5165 = !DILocation(line: 3812, column: 2, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3812, column: 2)
!5167 = !DILocation(line: 3815, column: 6, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3815, column: 6)
!5169 = !DILocation(line: 3815, column: 6, scope: !1763)
!5170 = !DILocation(line: 3816, column: 3, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 3815, column: 36)
!5172 = !DILocation(line: 3818, column: 21, scope: !1763)
!5173 = !DILocation(line: 3818, column: 26, scope: !1763)
!5174 = !DILocation(line: 3818, column: 2, scope: !1763)
!5175 = !DILocation(line: 3819, column: 22, scope: !1763)
!5176 = !DILocation(line: 3819, column: 27, scope: !1763)
!5177 = !DILocation(line: 3819, column: 2, scope: !1763)
!5178 = !DILocation(line: 3821, column: 21, scope: !1785)
!5179 = !DILocation(line: 3821, column: 46, scope: !1785)
!5180 = !DILocation(line: 3821, column: 49, scope: !1785)
!5181 = !DILocation(line: 3821, column: 57, scope: !1785)
!5182 = !DILocation(line: 3821, column: 55, scope: !1785)
!5183 = !DILocation(line: 3821, column: 67, scope: !1785)
!5184 = !DILocation(line: 3822, column: 7, scope: !1785)
!5185 = !DILocation(line: 3821, column: 6, scope: !1763)
!5186 = !DILocation(line: 3823, column: 3, scope: !1784)
!5187 = !DILocation(line: 3823, column: 10, scope: !1784)
!5188 = !DILocation(line: 3823, column: 23, scope: !1784)
!5189 = !DILocation(line: 3823, column: 31, scope: !1784)
!5190 = !DILocation(line: 3823, column: 29, scope: !1784)
!5191 = !DILocation(line: 3824, column: 3, scope: !1784)
!5192 = !DILocation(line: 3824, column: 9, scope: !1784)
!5193 = !DILocation(line: 3824, column: 44, scope: !1784)
!5194 = !DILocation(line: 3824, column: 33, scope: !1784)
!5195 = !DILocation(line: 3824, column: 50, scope: !1784)
!5196 = !DILocation(line: 3824, column: 48, scope: !1784)
!5197 = !DILocation(line: 3824, column: 24, scope: !1784)
!5198 = !DILocation(line: 3825, column: 3, scope: !1784)
!5199 = !DILocation(line: 3825, column: 23, scope: !1784)
!5200 = !DILocation(line: 3825, column: 37, scope: !1784)
!5201 = !DILocation(line: 3826, column: 2, scope: !1785)
!5202 = !DILocation(line: 3826, column: 2, scope: !1784)
!5203 = !DILocation(line: 3827, column: 1, scope: !1763)
!5204 = !DILocation(line: 3828, column: 6, scope: !1790)
!5205 = !DILocation(line: 3828, column: 6, scope: !1763)
!5206 = !DILocation(line: 3829, column: 3, scope: !1789)
!5207 = !DILocation(line: 3829, column: 13, scope: !1789)
!5208 = !DILocation(line: 3829, column: 23, scope: !1789)
!5209 = !DILocation(line: 3829, column: 35, scope: !1789)
!5210 = !DILocation(line: 3829, column: 24, scope: !1789)
!5211 = !DILocation(line: 3829, column: 40, scope: !1789)
!5212 = !DILocation(line: 3829, column: 46, scope: !1789)
!5213 = !DILocation(line: 3829, column: 53, scope: !1789)
!5214 = !DILocation(line: 3830, column: 43, scope: !1789)
!5215 = !DILocation(line: 3830, column: 48, scope: !1789)
!5216 = !DILocation(line: 3831, column: 7, scope: !1789)
!5217 = !DILocation(line: 3831, column: 25, scope: !1789)
!5218 = !DILocation(line: 3831, column: 32, scope: !1789)
!5219 = !DILocation(line: 3830, column: 3, scope: !1789)
!5220 = !DILocation(line: 3832, column: 2, scope: !1790)
!5221 = !DILocation(line: 3832, column: 2, scope: !1789)
!5222 = !DILocation(line: 3835, column: 36, scope: !1763)
!5223 = !DILocation(line: 3835, column: 27, scope: !1763)
!5224 = !DILocation(line: 3835, column: 2, scope: !1763)
!5225 = !DILocation(line: 3837, column: 2, scope: !1763)
!5226 = !DILocation(line: 3837, column: 2, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 3837, column: 2)
!5228 = !DILocation(line: 3838, column: 9, scope: !1763)
!5229 = !DILocation(line: 3839, column: 1, scope: !1763)
!5230 = !DILocation(line: 3838, column: 2, scope: !1763)
!5231 = distinct !DISubprogram(name: "zero_get", scope: !3, file: !3, line: 2322, type: !5232, scopeLine: 2322, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5234)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{!389, !389, !389}
!5234 = !{!5235, !5236}
!5235 = !DILocalVariable(name: "guarantee", arg: 1, scope: !5231, file: !3, line: 2322, type: !389)
!5236 = !DILocalVariable(name: "slow", arg: 2, scope: !5231, file: !3, line: 2322, type: !389)
!5237 = !DILocation(line: 2322, column: 15, scope: !5231)
!5238 = !DILocation(line: 2322, column: 31, scope: !5231)
!5239 = !DILocation(line: 2323, column: 21, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 2323, column: 6)
!5241 = !DILocation(line: 2323, column: 26, scope: !5240)
!5242 = !DILocation(line: 2323, column: 29, scope: !5240)
!5243 = !DILocation(line: 2323, column: 6, scope: !5231)
!5244 = !DILocation(line: 2324, column: 3, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 2323, column: 49)
!5246 = !DILocation(line: 2326, column: 10, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 2325, column: 9)
!5248 = !DILocation(line: 2326, column: 3, scope: !5247)
!5249 = !DILocation(line: 2328, column: 1, scope: !5231)
!5250 = distinct !DISubprogram(name: "tsd_fetch", scope: !145, file: !145, line: 447, type: !4214, scopeLine: 447, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5251 = !DILocation(line: 448, column: 9, scope: !5250)
!5252 = !DILocation(line: 448, column: 2, scope: !5250)
!5253 = distinct !DISubprogram(name: "emap_edata_lookup", scope: !1072, file: !1072, line: 226, type: !5254, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5256)
!5254 = !DISubroutineType(types: !5255)
!5255 = !{!763, !391, !1070, !554}
!5256 = !{!5257, !5258, !5259, !5260, !5261}
!5257 = !DILocalVariable(name: "tsdn", arg: 1, scope: !5253, file: !1072, line: 226, type: !391)
!5258 = !DILocalVariable(name: "emap", arg: 2, scope: !5253, file: !1072, line: 226, type: !1070)
!5259 = !DILocalVariable(name: "ptr", arg: 3, scope: !5253, file: !1072, line: 226, type: !554)
!5260 = !DILocalVariable(name: "rtree_ctx_fallback", scope: !5253, file: !1072, line: 227, type: !1370)
!5261 = !DILocalVariable(name: "rtree_ctx", scope: !5253, file: !1072, line: 227, type: !5262)
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!5263 = !DILocation(line: 226, column: 27, scope: !5253)
!5264 = !DILocation(line: 226, column: 41, scope: !5253)
!5265 = !DILocation(line: 226, column: 59, scope: !5253)
!5266 = !DILocation(line: 227, column: 2, scope: !5253)
!5267 = !DILocation(line: 229, column: 20, scope: !5253)
!5268 = !DILocation(line: 229, column: 27, scope: !5253)
!5269 = !DILocation(line: 229, column: 33, scope: !5253)
!5270 = !DILocation(line: 229, column: 40, scope: !5253)
!5271 = !DILocation(line: 229, column: 62, scope: !5253)
!5272 = !DILocation(line: 229, column: 51, scope: !5253)
!5273 = !DILocation(line: 229, column: 9, scope: !5253)
!5274 = !DILocation(line: 229, column: 67, scope: !5253)
!5275 = !{!5276, !2659, i64 0}
!5276 = !{!"rtree_contents_s", !2659, i64 0, !5277, i64 8}
!5277 = !{!"rtree_metadata_s", !2792, i64 0, !2660, i64 4, !2696, i64 8, !2696, i64 9}
!5278 = !DILocation(line: 230, column: 1, scope: !5253)
!5279 = !DILocation(line: 229, column: 2, scope: !5253)
!5280 = distinct !DISubprogram(name: "emap_alloc_ctx_lookup", scope: !1072, file: !1072, line: 234, type: !5281, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5284)
!5281 = !DISubroutineType(types: !5282)
!5282 = !{null, !391, !1070, !554, !5283}
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!5284 = !{!5285, !5286, !5287, !5288, !5289, !5290, !5291}
!5285 = !DILocalVariable(name: "tsdn", arg: 1, scope: !5280, file: !1072, line: 234, type: !391)
!5286 = !DILocalVariable(name: "emap", arg: 2, scope: !5280, file: !1072, line: 234, type: !1070)
!5287 = !DILocalVariable(name: "ptr", arg: 3, scope: !5280, file: !1072, line: 234, type: !554)
!5288 = !DILocalVariable(name: "alloc_ctx", arg: 4, scope: !5280, file: !1072, line: 235, type: !5283)
!5289 = !DILocalVariable(name: "rtree_ctx_fallback", scope: !5280, file: !1072, line: 236, type: !1370)
!5290 = !DILocalVariable(name: "rtree_ctx", scope: !5280, file: !1072, line: 236, type: !5262)
!5291 = !DILocalVariable(name: "metadata", scope: !5280, file: !1072, line: 238, type: !5292)
!5292 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_metadata_t", file: !1077, line: 43, baseType: !5293)
!5293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_metadata_s", file: !1077, line: 44, size: 96, elements: !5294)
!5294 = !{!5295, !5296, !5297, !5298}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "szind", scope: !5293, file: !1077, line: 45, baseType: !726, size: 32)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5293, file: !1077, line: 46, baseType: !1061, size: 32, offset: 32)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "is_head", scope: !5293, file: !1077, line: 47, baseType: !389, size: 8, offset: 64)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !5293, file: !1077, line: 48, baseType: !389, size: 8, offset: 72)
!5299 = !DILocation(line: 234, column: 31, scope: !5280)
!5300 = !DILocation(line: 234, column: 45, scope: !5280)
!5301 = !DILocation(line: 234, column: 63, scope: !5280)
!5302 = !DILocation(line: 235, column: 23, scope: !5280)
!5303 = !DILocation(line: 236, column: 2, scope: !5280)
!5304 = !DILocation(line: 238, column: 2, scope: !5280)
!5305 = !DILocation(line: 238, column: 19, scope: !5280)
!5306 = !DILocation(line: 238, column: 50, scope: !5280)
!5307 = !DILocation(line: 238, column: 57, scope: !5280)
!5308 = !DILocation(line: 238, column: 63, scope: !5280)
!5309 = !DILocation(line: 239, column: 6, scope: !5280)
!5310 = !DILocation(line: 239, column: 28, scope: !5280)
!5311 = !DILocation(line: 239, column: 17, scope: !5280)
!5312 = !DILocation(line: 238, column: 30, scope: !5280)
!5313 = !DILocation(line: 240, column: 30, scope: !5280)
!5314 = !{!5277, !2792, i64 0}
!5315 = !DILocation(line: 240, column: 2, scope: !5280)
!5316 = !DILocation(line: 240, column: 13, scope: !5280)
!5317 = !DILocation(line: 240, column: 19, scope: !5280)
!5318 = !DILocation(line: 241, column: 29, scope: !5280)
!5319 = !{!5277, !2696, i64 9}
!5320 = !DILocation(line: 241, column: 2, scope: !5280)
!5321 = !DILocation(line: 241, column: 13, scope: !5280)
!5322 = !DILocation(line: 241, column: 18, scope: !5280)
!5323 = !DILocation(line: 242, column: 1, scope: !5280)
!5324 = distinct !DISubprogram(name: "sz_index2size", scope: !727, file: !727, line: 249, type: !5325, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5327)
!5325 = !DISubroutineType(types: !5326)
!5326 = !{!387, !726}
!5327 = !{!5328}
!5328 = !DILocalVariable(name: "index", arg: 1, scope: !5324, file: !727, line: 249, type: !726)
!5329 = !DILocation(line: 249, column: 23, scope: !5324)
!5330 = !DILocation(line: 250, column: 2, scope: !5324)
!5331 = !DILocation(line: 250, column: 2, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5324, file: !727, line: 250, column: 2)
!5333 = !DILocation(line: 251, column: 30, scope: !5324)
!5334 = !DILocation(line: 251, column: 9, scope: !5324)
!5335 = !DILocation(line: 251, column: 2, scope: !5324)
!5336 = distinct !DISubprogram(name: "ixallocx_helper", scope: !3, file: !3, line: 3665, type: !5337, scopeLine: 3666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5339)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{!387, !391, !383, !387, !387, !387, !387, !389}
!5339 = !{!5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347}
!5340 = !DILocalVariable(name: "tsdn", arg: 1, scope: !5336, file: !3, line: 3665, type: !391)
!5341 = !DILocalVariable(name: "ptr", arg: 2, scope: !5336, file: !3, line: 3665, type: !383)
!5342 = !DILocalVariable(name: "old_usize", arg: 3, scope: !5336, file: !3, line: 3665, type: !387)
!5343 = !DILocalVariable(name: "size", arg: 4, scope: !5336, file: !3, line: 3665, type: !387)
!5344 = !DILocalVariable(name: "extra", arg: 5, scope: !5336, file: !3, line: 3666, type: !387)
!5345 = !DILocalVariable(name: "alignment", arg: 6, scope: !5336, file: !3, line: 3666, type: !387)
!5346 = !DILocalVariable(name: "zero", arg: 7, scope: !5336, file: !3, line: 3666, type: !389)
!5347 = !DILocalVariable(name: "newsize", scope: !5336, file: !3, line: 3667, type: !387)
!5348 = !DILocation(line: 3665, column: 25, scope: !5336)
!5349 = !DILocation(line: 3665, column: 37, scope: !5336)
!5350 = !DILocation(line: 3665, column: 49, scope: !5336)
!5351 = !DILocation(line: 3665, column: 67, scope: !5336)
!5352 = !DILocation(line: 3666, column: 12, scope: !5336)
!5353 = !DILocation(line: 3666, column: 26, scope: !5336)
!5354 = !DILocation(line: 3666, column: 42, scope: !5336)
!5355 = !DILocation(line: 3667, column: 2, scope: !5336)
!5356 = !DILocation(line: 3667, column: 9, scope: !5336)
!5357 = !DILocation(line: 3669, column: 14, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 3669, column: 6)
!5359 = !DILocation(line: 3669, column: 20, scope: !5358)
!5360 = !DILocation(line: 3669, column: 25, scope: !5358)
!5361 = !DILocation(line: 3669, column: 36, scope: !5358)
!5362 = !DILocation(line: 3669, column: 42, scope: !5358)
!5363 = !DILocation(line: 3669, column: 49, scope: !5358)
!5364 = !DILocation(line: 3669, column: 60, scope: !5358)
!5365 = !DILocation(line: 3669, column: 6, scope: !5358)
!5366 = !DILocation(line: 3669, column: 6, scope: !5336)
!5367 = !DILocation(line: 3671, column: 10, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 3670, column: 17)
!5369 = !DILocation(line: 3671, column: 3, scope: !5368)
!5370 = !DILocation(line: 3674, column: 9, scope: !5336)
!5371 = !DILocation(line: 3674, column: 2, scope: !5336)
!5372 = !DILocation(line: 3675, column: 1, scope: !5336)
!5373 = distinct !DISubprogram(name: "thread_alloc_event", scope: !5374, file: !5374, line: 297, type: !5375, scopeLine: 297, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5377)
!5374 = !DIFile(filename: "include/jemalloc/internal/thread_event.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "076fae81cdb866e0b145aca3c0e36df2")
!5375 = !DISubroutineType(types: !5376)
!5376 = !{null, !1347, !387}
!5377 = !{!5378, !5379}
!5378 = !DILocalVariable(name: "tsd", arg: 1, scope: !5373, file: !5374, line: 297, type: !1347)
!5379 = !DILocalVariable(name: "usize", arg: 2, scope: !5373, file: !5374, line: 297, type: !387)
!5380 = !DILocation(line: 297, column: 27, scope: !5373)
!5381 = !DILocation(line: 297, column: 39, scope: !5373)
!5382 = !DILocation(line: 298, column: 19, scope: !5373)
!5383 = !DILocation(line: 298, column: 24, scope: !5373)
!5384 = !DILocation(line: 298, column: 2, scope: !5373)
!5385 = !DILocation(line: 299, column: 1, scope: !5373)
!5386 = distinct !DISubprogram(name: "thread_dalloc_event", scope: !5374, file: !5374, line: 292, type: !5375, scopeLine: 292, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5387)
!5387 = !{!5388, !5389}
!5388 = !DILocalVariable(name: "tsd", arg: 1, scope: !5386, file: !5374, line: 292, type: !1347)
!5389 = !DILocalVariable(name: "usize", arg: 2, scope: !5386, file: !5374, line: 292, type: !387)
!5390 = !DILocation(line: 292, column: 28, scope: !5386)
!5391 = !DILocation(line: 292, column: 40, scope: !5386)
!5392 = !DILocation(line: 293, column: 19, scope: !5386)
!5393 = !DILocation(line: 293, column: 24, scope: !5386)
!5394 = !DILocation(line: 293, column: 2, scope: !5386)
!5395 = !DILocation(line: 294, column: 1, scope: !5386)
!5396 = !DISubprogram(name: "hook_invoke_expand", scope: !99, file: !99, line: 160, type: !5397, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{null, !5399, !383, !387, !387, !384, !1421}
!5399 = !DIDerivedType(tag: DW_TAG_typedef, name: "hook_expand_t", file: !99, line: 90, baseType: !117)
!5400 = !DILocation(line: 3843, column: 24, scope: !1800)
!5401 = !DILocation(line: 3843, column: 33, scope: !1800)
!5402 = !DILocation(line: 3844, column: 2, scope: !1800)
!5403 = !DILocation(line: 3844, column: 9, scope: !1800)
!5404 = !DILocation(line: 3845, column: 2, scope: !1800)
!5405 = !DILocation(line: 3845, column: 10, scope: !1800)
!5406 = !DILocation(line: 3847, column: 2, scope: !1800)
!5407 = !DILocation(line: 3847, column: 2, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 3847, column: 2)
!5409 = !DILocation(line: 3849, column: 2, scope: !1800)
!5410 = !DILocation(line: 3849, column: 2, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 3849, column: 2)
!5412 = !DILocation(line: 3850, column: 2, scope: !1800)
!5413 = !DILocation(line: 3850, column: 2, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 3850, column: 2)
!5415 = !DILocation(line: 3852, column: 9, scope: !1800)
!5416 = !DILocation(line: 3852, column: 7, scope: !1800)
!5417 = !DILocation(line: 3853, column: 27, scope: !1800)
!5418 = !DILocation(line: 3853, column: 2, scope: !1800)
!5419 = !DILocation(line: 3859, column: 19, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 3858, column: 9)
!5421 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 3855, column: 6)
!5422 = !DILocation(line: 3859, column: 25, scope: !5420)
!5423 = !DILocation(line: 3859, column: 11, scope: !5420)
!5424 = !DILocation(line: 3859, column: 9, scope: !5420)
!5425 = !DILocation(line: 3862, column: 27, scope: !1800)
!5426 = !DILocation(line: 3862, column: 2, scope: !1800)
!5427 = !DILocation(line: 3864, column: 2, scope: !1800)
!5428 = !DILocation(line: 3864, column: 2, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 3864, column: 2)
!5430 = !DILocation(line: 3865, column: 9, scope: !1800)
!5431 = !DILocation(line: 3866, column: 1, scope: !1800)
!5432 = !DILocation(line: 3865, column: 2, scope: !1800)
!5433 = distinct !DISubprogram(name: "tsdn_fetch", scope: !145, file: !145, line: 460, type: !5434, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{!391}
!5436 = !DILocation(line: 461, column: 7, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5433, file: !145, line: 461, column: 6)
!5438 = !DILocation(line: 461, column: 6, scope: !5433)
!5439 = !DILocation(line: 462, column: 3, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5437, file: !145, line: 461, column: 25)
!5441 = !DILocation(line: 465, column: 18, scope: !5433)
!5442 = !DILocation(line: 465, column: 9, scope: !5433)
!5443 = !DILocation(line: 465, column: 2, scope: !5433)
!5444 = !DILocation(line: 466, column: 1, scope: !5433)
!5445 = distinct !DISubprogram(name: "isalloc", scope: !2572, file: !2572, line: 37, type: !5446, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5448)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{!387, !391, !554}
!5448 = !{!5449, !5450}
!5449 = !DILocalVariable(name: "tsdn", arg: 1, scope: !5445, file: !2572, line: 37, type: !391)
!5450 = !DILocalVariable(name: "ptr", arg: 2, scope: !5445, file: !2572, line: 37, type: !554)
!5451 = !DILocation(line: 37, column: 17, scope: !5445)
!5452 = !DILocation(line: 37, column: 35, scope: !5445)
!5453 = !DILocation(line: 38, column: 2, scope: !5445)
!5454 = !DILocation(line: 38, column: 2, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5445, file: !2572, line: 38, column: 2)
!5456 = !DILocation(line: 40, column: 22, scope: !5445)
!5457 = !DILocation(line: 40, column: 28, scope: !5445)
!5458 = !DILocation(line: 40, column: 9, scope: !5445)
!5459 = !DILocation(line: 40, column: 2, scope: !5445)
!5460 = !DILocation(line: 3869, column: 18, scope: !1816)
!5461 = !DILocation(line: 3869, column: 27, scope: !1816)
!5462 = !DILocation(line: 3870, column: 2, scope: !1816)
!5463 = !DILocation(line: 3870, column: 2, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 3870, column: 2)
!5465 = !DILocation(line: 3872, column: 2, scope: !1816)
!5466 = !DILocation(line: 3872, column: 2, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 3872, column: 2)
!5468 = !DILocation(line: 3873, column: 2, scope: !1816)
!5469 = !DILocation(line: 3873, column: 2, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 3873, column: 2)
!5471 = !DILocation(line: 3875, column: 2, scope: !1816)
!5472 = !DILocation(line: 3875, column: 9, scope: !1816)
!5473 = !DILocation(line: 3875, column: 15, scope: !1816)
!5474 = !DILocation(line: 3876, column: 2, scope: !1816)
!5475 = !DILocation(line: 3876, column: 7, scope: !1816)
!5476 = !DILocation(line: 3876, column: 23, scope: !1816)
!5477 = !DILocation(line: 3876, column: 14, scope: !1816)
!5478 = !DILocation(line: 3877, column: 36, scope: !1816)
!5479 = !DILocation(line: 3877, column: 27, scope: !1816)
!5480 = !DILocation(line: 3877, column: 2, scope: !1816)
!5481 = !DILocation(line: 3879, column: 2, scope: !1816)
!5482 = !DILocation(line: 3879, column: 11, scope: !1816)
!5483 = !DILocation(line: 3879, column: 43, scope: !1816)
!5484 = !DILocation(line: 3879, column: 24, scope: !1816)
!5485 = !DILocation(line: 3880, column: 2, scope: !1816)
!5486 = !DILocation(line: 3880, column: 12, scope: !1816)
!5487 = !DILocation(line: 3880, column: 41, scope: !1816)
!5488 = !DILocation(line: 3880, column: 46, scope: !1816)
!5489 = !DILocation(line: 3880, column: 59, scope: !1816)
!5490 = !DILocation(line: 3880, column: 58, scope: !1816)
!5491 = !DILocation(line: 3880, column: 21, scope: !1816)
!5492 = !DILocation(line: 3884, column: 6, scope: !1828)
!5493 = !DILocation(line: 3884, column: 6, scope: !1816)
!5494 = !DILocation(line: 3885, column: 19, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !1828, file: !3, line: 3884, column: 20)
!5496 = !DILocation(line: 3885, column: 3, scope: !5495)
!5497 = !DILocation(line: 3886, column: 9, scope: !5495)
!5498 = !DILocation(line: 3886, column: 14, scope: !5495)
!5499 = !DILocation(line: 3886, column: 19, scope: !5495)
!5500 = !DILocation(line: 3886, column: 3, scope: !5495)
!5501 = !DILocation(line: 3887, column: 2, scope: !5495)
!5502 = !DILocation(line: 3888, column: 3, scope: !1827)
!5503 = !DILocation(line: 3888, column: 13, scope: !1827)
!5504 = !DILocation(line: 3888, column: 27, scope: !1827)
!5505 = !DILocation(line: 3888, column: 39, scope: !1827)
!5506 = !DILocation(line: 3888, column: 28, scope: !1827)
!5507 = !DILocation(line: 3888, column: 44, scope: !1827)
!5508 = !DILocation(line: 3889, column: 43, scope: !1827)
!5509 = !DILocation(line: 3889, column: 48, scope: !1827)
!5510 = !DILocation(line: 3889, column: 3, scope: !1827)
!5511 = !DILocation(line: 3890, column: 9, scope: !1827)
!5512 = !DILocation(line: 3890, column: 14, scope: !1827)
!5513 = !DILocation(line: 3890, column: 19, scope: !1827)
!5514 = !DILocation(line: 3890, column: 3, scope: !1827)
!5515 = !DILocation(line: 3891, column: 2, scope: !1828)
!5516 = !DILocation(line: 3892, column: 36, scope: !1816)
!5517 = !DILocation(line: 3892, column: 27, scope: !1816)
!5518 = !DILocation(line: 3892, column: 2, scope: !1816)
!5519 = !DILocation(line: 3894, column: 2, scope: !1816)
!5520 = !DILocation(line: 3894, column: 2, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 3894, column: 2)
!5522 = !DILocation(line: 3895, column: 1, scope: !1816)
!5523 = distinct !DISubprogram(name: "tsd_assert_fast", scope: !145, file: !145, line: 392, type: !3590, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5524)
!5524 = !{!5525}
!5525 = !DILocalVariable(name: "tsd", arg: 1, scope: !5523, file: !145, line: 392, type: !1347)
!5526 = !DILocation(line: 392, column: 24, scope: !5523)
!5527 = !DILocation(line: 398, column: 2, scope: !5523)
!5528 = !DILocation(line: 398, column: 2, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5523, file: !145, line: 398, column: 2)
!5530 = !DILocation(line: 400, column: 1, scope: !5523)
!5531 = distinct !DISubprogram(name: "sdallocx_default", scope: !3, file: !3, line: 3908, type: !1838, scopeLine: 3908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5532)
!5532 = !{!5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541}
!5533 = !DILocalVariable(name: "ptr", arg: 1, scope: !5531, file: !3, line: 3908, type: !383)
!5534 = !DILocalVariable(name: "size", arg: 2, scope: !5531, file: !3, line: 3908, type: !387)
!5535 = !DILocalVariable(name: "flags", arg: 3, scope: !5531, file: !3, line: 3908, type: !390)
!5536 = !DILocalVariable(name: "tsd", scope: !5531, file: !3, line: 3912, type: !1347)
!5537 = !DILocalVariable(name: "fast", scope: !5531, file: !3, line: 3913, type: !389)
!5538 = !DILocalVariable(name: "usize", scope: !5531, file: !3, line: 3914, type: !387)
!5539 = !DILocalVariable(name: "tcache_ind", scope: !5531, file: !3, line: 3917, type: !7)
!5540 = !DILocalVariable(name: "tcache", scope: !5531, file: !3, line: 3918, type: !740)
!5541 = !DILocalVariable(name: "args_raw", scope: !5542, file: !3, line: 3926, type: !1539)
!5542 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 3925, column: 9)
!5543 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3922, column: 6)
!5544 = !DILocation(line: 3908, column: 24, scope: !5531)
!5545 = !DILocation(line: 3908, column: 36, scope: !5531)
!5546 = !DILocation(line: 3908, column: 46, scope: !5531)
!5547 = !DILocation(line: 3909, column: 2, scope: !5531)
!5548 = !DILocation(line: 3909, column: 2, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3909, column: 2)
!5550 = !DILocation(line: 3910, column: 2, scope: !5531)
!5551 = !DILocation(line: 3910, column: 2, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 3910, column: 2)
!5553 = !DILocation(line: 3912, column: 2, scope: !5531)
!5554 = !DILocation(line: 3912, column: 9, scope: !5531)
!5555 = !DILocation(line: 3912, column: 15, scope: !5531)
!5556 = !DILocation(line: 3913, column: 2, scope: !5531)
!5557 = !DILocation(line: 3913, column: 7, scope: !5531)
!5558 = !DILocation(line: 3913, column: 23, scope: !5531)
!5559 = !DILocation(line: 3913, column: 14, scope: !5531)
!5560 = !DILocation(line: 3914, column: 2, scope: !5531)
!5561 = !DILocation(line: 3914, column: 9, scope: !5531)
!5562 = !DILocation(line: 3914, column: 35, scope: !5531)
!5563 = !DILocation(line: 3914, column: 26, scope: !5531)
!5564 = !DILocation(line: 3914, column: 41, scope: !5531)
!5565 = !DILocation(line: 3914, column: 47, scope: !5531)
!5566 = !DILocation(line: 3914, column: 17, scope: !5531)
!5567 = !DILocation(line: 3915, column: 36, scope: !5531)
!5568 = !DILocation(line: 3915, column: 27, scope: !5531)
!5569 = !DILocation(line: 3915, column: 2, scope: !5531)
!5570 = !DILocation(line: 3917, column: 2, scope: !5531)
!5571 = !DILocation(line: 3917, column: 11, scope: !5531)
!5572 = !DILocation(line: 3917, column: 43, scope: !5531)
!5573 = !DILocation(line: 3917, column: 24, scope: !5531)
!5574 = !DILocation(line: 3918, column: 2, scope: !5531)
!5575 = !DILocation(line: 3918, column: 12, scope: !5531)
!5576 = !DILocation(line: 3918, column: 41, scope: !5531)
!5577 = !DILocation(line: 3918, column: 46, scope: !5531)
!5578 = !DILocation(line: 3918, column: 59, scope: !5531)
!5579 = !DILocation(line: 3918, column: 58, scope: !5531)
!5580 = !DILocation(line: 3918, column: 21, scope: !5531)
!5581 = !DILocation(line: 3922, column: 6, scope: !5543)
!5582 = !DILocation(line: 3922, column: 6, scope: !5531)
!5583 = !DILocation(line: 3923, column: 19, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 3922, column: 20)
!5585 = !DILocation(line: 3923, column: 3, scope: !5584)
!5586 = !DILocation(line: 3924, column: 10, scope: !5584)
!5587 = !DILocation(line: 3924, column: 15, scope: !5584)
!5588 = !DILocation(line: 3924, column: 20, scope: !5584)
!5589 = !DILocation(line: 3924, column: 27, scope: !5584)
!5590 = !DILocation(line: 3924, column: 3, scope: !5584)
!5591 = !DILocation(line: 3925, column: 2, scope: !5584)
!5592 = !DILocation(line: 3926, column: 3, scope: !5542)
!5593 = !DILocation(line: 3926, column: 13, scope: !5542)
!5594 = !DILocation(line: 3926, column: 27, scope: !5542)
!5595 = !DILocation(line: 3926, column: 39, scope: !5542)
!5596 = !DILocation(line: 3926, column: 28, scope: !5542)
!5597 = !DILocation(line: 3926, column: 44, scope: !5542)
!5598 = !DILocation(line: 3926, column: 50, scope: !5542)
!5599 = !DILocation(line: 3927, column: 44, scope: !5542)
!5600 = !DILocation(line: 3927, column: 49, scope: !5542)
!5601 = !DILocation(line: 3927, column: 3, scope: !5542)
!5602 = !DILocation(line: 3928, column: 10, scope: !5542)
!5603 = !DILocation(line: 3928, column: 15, scope: !5542)
!5604 = !DILocation(line: 3928, column: 20, scope: !5542)
!5605 = !DILocation(line: 3928, column: 27, scope: !5542)
!5606 = !DILocation(line: 3928, column: 3, scope: !5542)
!5607 = !DILocation(line: 3929, column: 2, scope: !5543)
!5608 = !DILocation(line: 3930, column: 36, scope: !5531)
!5609 = !DILocation(line: 3930, column: 27, scope: !5531)
!5610 = !DILocation(line: 3930, column: 2, scope: !5531)
!5611 = !DILocation(line: 3931, column: 1, scope: !5531)
!5612 = distinct !DISubprogram(name: "inallocx", scope: !3, file: !3, line: 3898, type: !5613, scopeLine: 3898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5615)
!5613 = !DISubroutineType(types: !5614)
!5614 = !{!387, !391, !387, !390}
!5615 = !{!5616, !5617, !5618, !5619}
!5616 = !DILocalVariable(name: "tsdn", arg: 1, scope: !5612, file: !3, line: 3898, type: !391)
!5617 = !DILocalVariable(name: "size", arg: 2, scope: !5612, file: !3, line: 3898, type: !387)
!5618 = !DILocalVariable(name: "flags", arg: 3, scope: !5612, file: !3, line: 3898, type: !390)
!5619 = !DILocalVariable(name: "usize", scope: !5612, file: !3, line: 3900, type: !387)
!5620 = !DILocation(line: 3898, column: 18, scope: !5612)
!5621 = !DILocation(line: 3898, column: 31, scope: !5612)
!5622 = !DILocation(line: 3898, column: 41, scope: !5612)
!5623 = !DILocation(line: 3899, column: 27, scope: !5612)
!5624 = !DILocation(line: 3899, column: 2, scope: !5612)
!5625 = !DILocation(line: 3900, column: 2, scope: !5612)
!5626 = !DILocation(line: 3900, column: 9, scope: !5612)
!5627 = !DILocation(line: 3902, column: 20, scope: !5612)
!5628 = !DILocation(line: 3902, column: 26, scope: !5612)
!5629 = !DILocation(line: 3902, column: 2, scope: !5612)
!5630 = !DILocation(line: 3903, column: 27, scope: !5612)
!5631 = !DILocation(line: 3903, column: 2, scope: !5612)
!5632 = !DILocation(line: 3904, column: 9, scope: !5612)
!5633 = !DILocation(line: 3905, column: 1, scope: !5612)
!5634 = !DILocation(line: 3904, column: 2, scope: !5612)
!5635 = distinct !DISubprogram(name: "isfree", scope: !3, file: !3, line: 2923, type: !5636, scopeLine: 2923, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5638)
!5636 = !DISubroutineType(types: !5637)
!5637 = !{null, !1347, !383, !387, !740, !389}
!5638 = !{!5639, !5640, !5641, !5642, !5643, !5644, !5645}
!5639 = !DILocalVariable(name: "tsd", arg: 1, scope: !5635, file: !3, line: 2923, type: !1347)
!5640 = !DILocalVariable(name: "ptr", arg: 2, scope: !5635, file: !3, line: 2923, type: !383)
!5641 = !DILocalVariable(name: "usize", arg: 3, scope: !5635, file: !3, line: 2923, type: !387)
!5642 = !DILocalVariable(name: "tcache", arg: 4, scope: !5635, file: !3, line: 2923, type: !740)
!5643 = !DILocalVariable(name: "slow_path", arg: 5, scope: !5635, file: !3, line: 2923, type: !389)
!5644 = !DILocalVariable(name: "alloc_ctx", scope: !5635, file: !3, line: 2935, type: !1778)
!5645 = !DILocalVariable(name: "fail", scope: !5635, file: !3, line: 2967, type: !389)
!5646 = !DILocation(line: 2923, column: 15, scope: !5635)
!5647 = !DILocation(line: 2923, column: 26, scope: !5635)
!5648 = !DILocation(line: 2923, column: 38, scope: !5635)
!5649 = !DILocation(line: 2923, column: 55, scope: !5635)
!5650 = !DILocation(line: 2923, column: 68, scope: !5635)
!5651 = !DILocation(line: 2924, column: 7, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 2924, column: 6)
!5653 = !DILocation(line: 2924, column: 6, scope: !5635)
!5654 = !DILocation(line: 2925, column: 19, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 2924, column: 18)
!5656 = !DILocation(line: 2925, column: 3, scope: !5655)
!5657 = !DILocation(line: 2926, column: 2, scope: !5655)
!5658 = !DILocation(line: 2927, column: 36, scope: !5635)
!5659 = !DILocation(line: 2927, column: 27, scope: !5635)
!5660 = !DILocation(line: 2927, column: 2, scope: !5635)
!5661 = !DILocation(line: 2928, column: 31, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 2928, column: 6)
!5663 = !DILocation(line: 2928, column: 6, scope: !5662)
!5664 = !DILocation(line: 2928, column: 36, scope: !5662)
!5665 = !DILocation(line: 2928, column: 6, scope: !5635)
!5666 = !DILocation(line: 2929, column: 3, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 2928, column: 42)
!5668 = !DILocation(line: 2929, column: 3, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 2929, column: 3)
!5670 = !DILocation(line: 2930, column: 2, scope: !5667)
!5671 = !DILocation(line: 2932, column: 2, scope: !5635)
!5672 = !DILocation(line: 2932, column: 2, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 2932, column: 2)
!5674 = !DILocation(line: 2933, column: 2, scope: !5635)
!5675 = !DILocation(line: 2933, column: 2, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 2933, column: 2)
!5677 = !DILocation(line: 2935, column: 2, scope: !5635)
!5678 = !DILocation(line: 2935, column: 19, scope: !5635)
!5679 = !DILocation(line: 2937, column: 35, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 2936, column: 20)
!5681 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 2936, column: 6)
!5682 = !DILocation(line: 2937, column: 21, scope: !5680)
!5683 = !DILocation(line: 2937, column: 13, scope: !5680)
!5684 = !DILocation(line: 2937, column: 19, scope: !5680)
!5685 = !DILocation(line: 2938, column: 31, scope: !5680)
!5686 = !DILocation(line: 2938, column: 21, scope: !5680)
!5687 = !DILocation(line: 2938, column: 37, scope: !5680)
!5688 = !DILocation(line: 2938, column: 13, scope: !5680)
!5689 = !DILocation(line: 2938, column: 18, scope: !5680)
!5690 = !DILocation(line: 2967, column: 2, scope: !5635)
!5691 = !DILocation(line: 2967, column: 7, scope: !5635)
!5692 = !DILocation(line: 2967, column: 36, scope: !5635)
!5693 = !DILocation(line: 2967, column: 41, scope: !5635)
!5694 = !DILocation(line: 2967, column: 14, scope: !5635)
!5695 = !DILocation(line: 2968, column: 6, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 2968, column: 6)
!5697 = !DILocation(line: 2968, column: 6, scope: !5635)
!5698 = !DILocation(line: 2975, column: 3, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 2968, column: 12)
!5700 = !DILocation(line: 2981, column: 6, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 2981, column: 6)
!5702 = !DILocation(line: 2981, column: 6, scope: !5635)
!5703 = !DILocation(line: 2982, column: 22, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 2981, column: 26)
!5705 = !DILocation(line: 2982, column: 13, scope: !5704)
!5706 = !DILocation(line: 2982, column: 28, scope: !5704)
!5707 = !DILocation(line: 2982, column: 33, scope: !5704)
!5708 = !DILocation(line: 2982, column: 40, scope: !5704)
!5709 = !DILocation(line: 2982, column: 3, scope: !5704)
!5710 = !DILocation(line: 2984, column: 2, scope: !5704)
!5711 = !DILocation(line: 2985, column: 22, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2985, column: 7)
!5713 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 2984, column: 9)
!5714 = !DILocation(line: 2985, column: 32, scope: !5712)
!5715 = !DILocation(line: 2985, column: 35, scope: !5712)
!5716 = !DILocation(line: 2985, column: 7, scope: !5713)
!5717 = !DILocation(line: 2986, column: 4, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2985, column: 50)
!5719 = !DILocation(line: 2986, column: 23, scope: !5718)
!5720 = !DILocation(line: 2986, column: 28, scope: !5718)
!5721 = !DILocation(line: 2987, column: 3, scope: !5718)
!5722 = !DILocation(line: 2988, column: 22, scope: !5713)
!5723 = !DILocation(line: 2988, column: 13, scope: !5713)
!5724 = !DILocation(line: 2988, column: 28, scope: !5713)
!5725 = !DILocation(line: 2988, column: 33, scope: !5713)
!5726 = !DILocation(line: 2988, column: 40, scope: !5713)
!5727 = !DILocation(line: 2988, column: 3, scope: !5713)
!5728 = !DILocation(line: 2991, column: 22, scope: !5635)
!5729 = !DILocation(line: 2991, column: 27, scope: !5635)
!5730 = !DILocation(line: 2991, column: 2, scope: !5635)
!5731 = !DILocation(line: 2992, column: 1, scope: !5635)
!5732 = !DILocation(line: 3934, column: 19, scope: !1837)
!5733 = !DILocation(line: 3934, column: 31, scope: !1837)
!5734 = !DILocation(line: 3934, column: 41, scope: !1837)
!5735 = !DILocation(line: 3935, column: 2, scope: !1837)
!5736 = !DILocation(line: 3935, column: 2, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 3935, column: 2)
!5738 = !DILocation(line: 3938, column: 6, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 3938, column: 6)
!5740 = !DILocation(line: 3938, column: 12, scope: !5739)
!5741 = !DILocation(line: 3938, column: 17, scope: !5739)
!5742 = !DILocation(line: 3938, column: 35, scope: !5739)
!5743 = !DILocation(line: 3938, column: 40, scope: !5739)
!5744 = !DILocation(line: 3938, column: 21, scope: !5739)
!5745 = !DILocation(line: 3938, column: 6, scope: !1837)
!5746 = !DILocation(line: 3939, column: 20, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 3938, column: 53)
!5748 = !DILocation(line: 3939, column: 25, scope: !5747)
!5749 = !DILocation(line: 3939, column: 31, scope: !5747)
!5750 = !DILocation(line: 3939, column: 3, scope: !5747)
!5751 = !DILocation(line: 3940, column: 2, scope: !5747)
!5752 = !DILocation(line: 3942, column: 2, scope: !1837)
!5753 = !DILocation(line: 3942, column: 2, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 3942, column: 2)
!5755 = !DILocation(line: 3943, column: 1, scope: !1837)
!5756 = !DILocation(line: 3946, column: 27, scope: !1850)
!5757 = !DILocation(line: 3946, column: 39, scope: !1850)
!5758 = !DILocation(line: 3947, column: 2, scope: !1850)
!5759 = !DILocation(line: 3947, column: 2, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !1850, file: !3, line: 3947, column: 2)
!5761 = !DILocation(line: 3950, column: 21, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !1850, file: !3, line: 3950, column: 6)
!5763 = !DILocation(line: 3950, column: 26, scope: !5762)
!5764 = !DILocation(line: 3950, column: 7, scope: !5762)
!5765 = !DILocation(line: 3950, column: 6, scope: !1850)
!5766 = !DILocation(line: 3951, column: 20, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 3950, column: 39)
!5768 = !DILocation(line: 3951, column: 25, scope: !5767)
!5769 = !DILocation(line: 3951, column: 3, scope: !5767)
!5770 = !DILocation(line: 3952, column: 2, scope: !5767)
!5771 = !DILocation(line: 3954, column: 2, scope: !1850)
!5772 = !DILocation(line: 3954, column: 2, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !1850, file: !3, line: 3954, column: 2)
!5774 = !DILocation(line: 3955, column: 1, scope: !1850)
!5775 = !DILocation(line: 3959, column: 19, scope: !1860)
!5776 = !DILocation(line: 3959, column: 29, scope: !1860)
!5777 = !DILocation(line: 3960, column: 2, scope: !1860)
!5778 = !DILocation(line: 3960, column: 9, scope: !1860)
!5779 = !DILocation(line: 3961, column: 2, scope: !1860)
!5780 = !DILocation(line: 3961, column: 10, scope: !1860)
!5781 = !DILocation(line: 3963, column: 2, scope: !1860)
!5782 = !DILocation(line: 3963, column: 2, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 3963, column: 2)
!5784 = !DILocation(line: 3965, column: 6, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 3965, column: 6)
!5786 = !DILocation(line: 3965, column: 6, scope: !1860)
!5787 = !DILocation(line: 3966, column: 3, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 3965, column: 31)
!5789 = !DILocation(line: 3966, column: 3, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 3966, column: 3)
!5791 = !DILocation(line: 3967, column: 3, scope: !5788)
!5792 = !DILocation(line: 3970, column: 9, scope: !1860)
!5793 = !DILocation(line: 3970, column: 7, scope: !1860)
!5794 = !DILocation(line: 3971, column: 27, scope: !1860)
!5795 = !DILocation(line: 3971, column: 2, scope: !1860)
!5796 = !DILocation(line: 3973, column: 19, scope: !1860)
!5797 = !DILocation(line: 3973, column: 25, scope: !1860)
!5798 = !DILocation(line: 3973, column: 31, scope: !1860)
!5799 = !DILocation(line: 3973, column: 10, scope: !1860)
!5800 = !DILocation(line: 3973, column: 8, scope: !1860)
!5801 = !DILocation(line: 3974, column: 6, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 3974, column: 6)
!5803 = !DILocation(line: 3974, column: 6, scope: !1860)
!5804 = !DILocation(line: 3975, column: 3, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 3974, column: 43)
!5806 = !DILocation(line: 3975, column: 3, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 3975, column: 3)
!5808 = !DILocation(line: 3976, column: 3, scope: !5805)
!5809 = !DILocation(line: 3979, column: 27, scope: !1860)
!5810 = !DILocation(line: 3979, column: 2, scope: !1860)
!5811 = !DILocation(line: 3980, column: 2, scope: !1860)
!5812 = !DILocation(line: 3980, column: 2, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 3980, column: 2)
!5814 = !DILocation(line: 3981, column: 9, scope: !1860)
!5815 = !DILocation(line: 3981, column: 2, scope: !1860)
!5816 = !DILocation(line: 3982, column: 1, scope: !1860)
!5817 = distinct !DISubprogram(name: "malloc_init", scope: !3, file: !3, line: 297, type: !5818, scopeLine: 297, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5818 = !DISubroutineType(types: !5819)
!5819 = !{!389}
!5820 = !DILocation(line: 298, column: 6, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 298, column: 6)
!5822 = !DILocation(line: 298, column: 38, scope: !5821)
!5823 = !DILocation(line: 298, column: 41, scope: !5821)
!5824 = !DILocation(line: 298, column: 6, scope: !5817)
!5825 = !DILocation(line: 299, column: 3, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 298, column: 61)
!5827 = !DILocation(line: 301, column: 2, scope: !5817)
!5828 = !DILocation(line: 302, column: 1, scope: !5817)
!5829 = !DILocation(line: 3985, column: 24, scope: !1876)
!5830 = !DILocation(line: 3985, column: 36, scope: !1876)
!5831 = !DILocation(line: 3985, column: 50, scope: !1876)
!5832 = !DILocation(line: 3985, column: 65, scope: !1876)
!5833 = !DILocation(line: 3986, column: 12, scope: !1876)
!5834 = !DILocation(line: 3987, column: 2, scope: !1876)
!5835 = !DILocation(line: 3987, column: 6, scope: !1876)
!5836 = !DILocation(line: 3988, column: 2, scope: !1876)
!5837 = !DILocation(line: 3988, column: 9, scope: !1876)
!5838 = !DILocation(line: 3990, column: 2, scope: !1876)
!5839 = !DILocation(line: 3990, column: 2, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 3990, column: 2)
!5841 = !DILocation(line: 3992, column: 6, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 3992, column: 6)
!5843 = !DILocation(line: 3992, column: 6, scope: !1876)
!5844 = !DILocation(line: 3993, column: 3, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 3992, column: 31)
!5846 = !DILocation(line: 3993, column: 3, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 3993, column: 3)
!5848 = !DILocation(line: 3994, column: 3, scope: !5845)
!5849 = !DILocation(line: 3997, column: 8, scope: !1876)
!5850 = !DILocation(line: 3997, column: 6, scope: !1876)
!5851 = !DILocation(line: 3998, column: 36, scope: !1876)
!5852 = !DILocation(line: 3998, column: 27, scope: !1876)
!5853 = !DILocation(line: 3998, column: 2, scope: !1876)
!5854 = !DILocation(line: 3999, column: 19, scope: !1876)
!5855 = !DILocation(line: 3999, column: 24, scope: !1876)
!5856 = !DILocation(line: 3999, column: 30, scope: !1876)
!5857 = !DILocation(line: 3999, column: 36, scope: !1876)
!5858 = !DILocation(line: 3999, column: 45, scope: !1876)
!5859 = !DILocation(line: 3999, column: 51, scope: !1876)
!5860 = !DILocation(line: 3999, column: 8, scope: !1876)
!5861 = !DILocation(line: 3999, column: 6, scope: !1876)
!5862 = !DILocation(line: 4000, column: 36, scope: !1876)
!5863 = !DILocation(line: 4000, column: 27, scope: !1876)
!5864 = !DILocation(line: 4000, column: 2, scope: !1876)
!5865 = !DILocation(line: 4002, column: 2, scope: !1876)
!5866 = !DILocation(line: 4002, column: 2, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 4002, column: 2)
!5868 = !DILocation(line: 4003, column: 9, scope: !1876)
!5869 = !DILocation(line: 4003, column: 2, scope: !1876)
!5870 = !DILocation(line: 4004, column: 1, scope: !1876)
!5871 = !DISubprogram(name: "ctl_byname", scope: !5872, file: !5872, line: 98, type: !5873, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5872 = !DIFile(filename: "include/jemalloc/internal/ctl.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "b9127bceb7fc4a44e24c0df676be0e68")
!5873 = !DISubroutineType(types: !5874)
!5874 = !{!390, !1347, !508, !383, !556, !383, !387}
!5875 = !DILocation(line: 4007, column: 33, scope: !1900)
!5876 = !DILocation(line: 4007, column: 47, scope: !1900)
!5877 = !DILocation(line: 4007, column: 61, scope: !1900)
!5878 = !DILocation(line: 4008, column: 2, scope: !1900)
!5879 = !DILocation(line: 4008, column: 6, scope: !1900)
!5880 = !DILocation(line: 4010, column: 2, scope: !1900)
!5881 = !DILocation(line: 4010, column: 2, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !1900, file: !3, line: 4010, column: 2)
!5883 = !DILocation(line: 4012, column: 6, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !1900, file: !3, line: 4012, column: 6)
!5885 = !DILocation(line: 4012, column: 6, scope: !1900)
!5886 = !DILocation(line: 4013, column: 3, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 4012, column: 31)
!5888 = !DILocation(line: 4013, column: 3, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 4013, column: 3)
!5890 = !DILocation(line: 4014, column: 3, scope: !5887)
!5891 = !DILocation(line: 4017, column: 2, scope: !1900)
!5892 = !DILocation(line: 4017, column: 9, scope: !1900)
!5893 = !DILocation(line: 4017, column: 15, scope: !1900)
!5894 = !DILocation(line: 4018, column: 36, scope: !1900)
!5895 = !DILocation(line: 4018, column: 27, scope: !1900)
!5896 = !DILocation(line: 4018, column: 2, scope: !1900)
!5897 = !DILocation(line: 4019, column: 22, scope: !1900)
!5898 = !DILocation(line: 4019, column: 27, scope: !1900)
!5899 = !DILocation(line: 4019, column: 33, scope: !1900)
!5900 = !DILocation(line: 4019, column: 39, scope: !1900)
!5901 = !DILocation(line: 4019, column: 8, scope: !1900)
!5902 = !DILocation(line: 4019, column: 6, scope: !1900)
!5903 = !DILocation(line: 4020, column: 36, scope: !1900)
!5904 = !DILocation(line: 4020, column: 27, scope: !1900)
!5905 = !DILocation(line: 4020, column: 2, scope: !1900)
!5906 = !DILocation(line: 4022, column: 2, scope: !1900)
!5907 = !DILocation(line: 4022, column: 2, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !1900, file: !3, line: 4022, column: 2)
!5909 = !DILocation(line: 4023, column: 9, scope: !1900)
!5910 = !DILocation(line: 4023, column: 2, scope: !1900)
!5911 = !DILocation(line: 4024, column: 1, scope: !1900)
!5912 = !DISubprogram(name: "ctl_nametomib", scope: !5872, file: !5872, line: 100, type: !5913, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{!390, !1347, !508, !556, !556}
!5915 = !DILocation(line: 4027, column: 31, scope: !1922)
!5916 = !DILocation(line: 4027, column: 43, scope: !1922)
!5917 = !DILocation(line: 4027, column: 57, scope: !1922)
!5918 = !DILocation(line: 4027, column: 71, scope: !1922)
!5919 = !DILocation(line: 4028, column: 9, scope: !1922)
!5920 = !DILocation(line: 4028, column: 22, scope: !1922)
!5921 = !DILocation(line: 4029, column: 2, scope: !1922)
!5922 = !DILocation(line: 4029, column: 6, scope: !1922)
!5923 = !DILocation(line: 4030, column: 2, scope: !1922)
!5924 = !DILocation(line: 4030, column: 9, scope: !1922)
!5925 = !DILocation(line: 4032, column: 2, scope: !1922)
!5926 = !DILocation(line: 4032, column: 2, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !1922, file: !3, line: 4032, column: 2)
!5928 = !DILocation(line: 4034, column: 6, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !1922, file: !3, line: 4034, column: 6)
!5930 = !DILocation(line: 4034, column: 6, scope: !1922)
!5931 = !DILocation(line: 4035, column: 3, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 4034, column: 31)
!5933 = !DILocation(line: 4035, column: 3, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 4035, column: 3)
!5935 = !DILocation(line: 4036, column: 3, scope: !5932)
!5936 = !DILocation(line: 4039, column: 8, scope: !1922)
!5937 = !DILocation(line: 4039, column: 6, scope: !1922)
!5938 = !DILocation(line: 4040, column: 36, scope: !1922)
!5939 = !DILocation(line: 4040, column: 27, scope: !1922)
!5940 = !DILocation(line: 4040, column: 2, scope: !1922)
!5941 = !DILocation(line: 4041, column: 18, scope: !1922)
!5942 = !DILocation(line: 4041, column: 23, scope: !1922)
!5943 = !DILocation(line: 4041, column: 28, scope: !1922)
!5944 = !DILocation(line: 4041, column: 36, scope: !1922)
!5945 = !DILocation(line: 4041, column: 42, scope: !1922)
!5946 = !DILocation(line: 4041, column: 51, scope: !1922)
!5947 = !DILocation(line: 4041, column: 57, scope: !1922)
!5948 = !DILocation(line: 4041, column: 8, scope: !1922)
!5949 = !DILocation(line: 4041, column: 6, scope: !1922)
!5950 = !DILocation(line: 4042, column: 36, scope: !1922)
!5951 = !DILocation(line: 4042, column: 27, scope: !1922)
!5952 = !DILocation(line: 4042, column: 2, scope: !1922)
!5953 = !DILocation(line: 4043, column: 2, scope: !1922)
!5954 = !DILocation(line: 4043, column: 2, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !1922, file: !3, line: 4043, column: 2)
!5956 = !DILocation(line: 4044, column: 9, scope: !1922)
!5957 = !DILocation(line: 4044, column: 2, scope: !1922)
!5958 = !DILocation(line: 4045, column: 1, scope: !1922)
!5959 = !DISubprogram(name: "ctl_bymib", scope: !5872, file: !5872, line: 101, type: !5960, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!390, !1347, !1925, !387, !383, !556, !383, !387}
!5962 = !DILocation(line: 4049, column: 30, scope: !1952)
!5963 = !DILocation(line: 4049, column: 69, scope: !1952)
!5964 = !DILocation(line: 4050, column: 17, scope: !1952)
!5965 = !DILocation(line: 4051, column: 2, scope: !1952)
!5966 = !DILocation(line: 4051, column: 10, scope: !1952)
!5967 = !DILocation(line: 4053, column: 2, scope: !1952)
!5968 = !DILocation(line: 4053, column: 2, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !1952, file: !3, line: 4053, column: 2)
!5970 = !DILocation(line: 4055, column: 9, scope: !1952)
!5971 = !DILocation(line: 4055, column: 7, scope: !1952)
!5972 = !DILocation(line: 4056, column: 27, scope: !1952)
!5973 = !DILocation(line: 4056, column: 2, scope: !1952)
!5974 = !DILocation(line: 4061, column: 3, scope: !1964)
!5975 = !DILocation(line: 4061, column: 16, scope: !1964)
!5976 = !DILocation(line: 4062, column: 19, scope: !1964)
!5977 = !DILocation(line: 4062, column: 38, scope: !1964)
!5978 = !DILocation(line: 4062, column: 48, scope: !1964)
!5979 = !DILocation(line: 4062, column: 3, scope: !1964)
!5980 = !DILocation(line: 4064, column: 43, scope: !1964)
!5981 = !DILocation(line: 4064, column: 3, scope: !1964)
!5982 = !DILocation(line: 4065, column: 24, scope: !1964)
!5983 = !DILocation(line: 4065, column: 3, scope: !1964)
!5984 = !DILocation(line: 4066, column: 2, scope: !1965)
!5985 = !DILocation(line: 4068, column: 27, scope: !1952)
!5986 = !DILocation(line: 4068, column: 2, scope: !1952)
!5987 = !DILocation(line: 4069, column: 2, scope: !1952)
!5988 = !DILocation(line: 4069, column: 2, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !1952, file: !3, line: 4069, column: 2)
!5990 = !DILocation(line: 4070, column: 1, scope: !1952)
!5991 = !DISubprogram(name: "buf_writer_init", scope: !1967, file: !1967, line: 22, type: !5992, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!389, !391, !5994, !1971, !383, !531, !387}
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!5995 = !DISubprogram(name: "stats_print", scope: !5996, file: !5996, line: 47, type: !5997, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5996 = !DIFile(filename: "include/jemalloc/internal/stats.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "0e361393f2d775ef8968a3d49b5d8b55")
!5997 = !DISubroutineType(types: !5998)
!5998 = !{null, !1971, !383, !508}
!5999 = !DISubprogram(name: "buf_writer_terminate", scope: !1967, file: !1967, line: 26, type: !6000, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{null, !391, !5994}
!6002 = !DILocation(line: 4097, column: 56, scope: !1989)
!6003 = !DILocation(line: 4098, column: 2, scope: !1989)
!6004 = !DILocation(line: 4098, column: 2, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !1989, file: !3, line: 4098, column: 2)
!6006 = !DILocation(line: 4100, column: 2, scope: !1989)
!6007 = !DILocation(line: 4100, column: 9, scope: !1989)
!6008 = !DILocation(line: 4100, column: 42, scope: !1989)
!6009 = !DILocation(line: 4100, column: 15, scope: !1989)
!6010 = !DILocation(line: 4102, column: 2, scope: !1989)
!6011 = !DILocation(line: 4102, column: 2, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !1989, file: !3, line: 4102, column: 2)
!6013 = !DILocation(line: 4103, column: 9, scope: !1989)
!6014 = !DILocation(line: 4104, column: 1, scope: !1989)
!6015 = !DILocation(line: 4103, column: 2, scope: !1989)
!6016 = distinct !DISubprogram(name: "je_malloc_usable_size_impl", scope: !3, file: !3, line: 4074, type: !1990, scopeLine: 4074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6017)
!6017 = !{!6018, !6019, !6020}
!6018 = !DILocalVariable(name: "ptr", arg: 1, scope: !6016, file: !3, line: 4074, type: !383)
!6019 = !DILocalVariable(name: "tsdn", scope: !6016, file: !3, line: 4077, type: !391)
!6020 = !DILocalVariable(name: "ret", scope: !6016, file: !3, line: 4080, type: !387)
!6021 = !DILocation(line: 4074, column: 61, scope: !6016)
!6022 = !DILocation(line: 4075, column: 2, scope: !6016)
!6023 = !DILocation(line: 4075, column: 2, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 4075, column: 2)
!6025 = !DILocation(line: 4077, column: 2, scope: !6016)
!6026 = !DILocation(line: 4077, column: 10, scope: !6016)
!6027 = !DILocation(line: 4077, column: 17, scope: !6016)
!6028 = !DILocation(line: 4078, column: 27, scope: !6016)
!6029 = !DILocation(line: 4078, column: 2, scope: !6016)
!6030 = !DILocation(line: 4080, column: 2, scope: !6016)
!6031 = !DILocation(line: 4080, column: 9, scope: !6016)
!6032 = !DILocation(line: 4081, column: 6, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 4081, column: 6)
!6034 = !DILocation(line: 4081, column: 6, scope: !6016)
!6035 = !DILocation(line: 4082, column: 7, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 4081, column: 29)
!6037 = !DILocation(line: 4083, column: 2, scope: !6036)
!6038 = !DILocation(line: 4088, column: 18, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 4087, column: 10)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 4084, column: 7)
!6041 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 4083, column: 9)
!6042 = !DILocation(line: 4088, column: 24, scope: !6039)
!6043 = !DILocation(line: 4088, column: 10, scope: !6039)
!6044 = !DILocation(line: 4088, column: 8, scope: !6039)
!6045 = !DILocation(line: 4091, column: 27, scope: !6016)
!6046 = !DILocation(line: 4091, column: 2, scope: !6016)
!6047 = !DILocation(line: 4093, column: 9, scope: !6016)
!6048 = !DILocation(line: 4094, column: 1, scope: !6016)
!6049 = !DILocation(line: 4093, column: 2, scope: !6016)
!6050 = !DILocation(line: 4132, column: 20, scope: !2003)
!6051 = !DILocation(line: 4132, column: 33, scope: !2003)
!6052 = !DILocation(line: 4132, column: 45, scope: !2003)
!6053 = !DILocation(line: 4132, column: 55, scope: !2003)
!6054 = !DILocation(line: 4133, column: 2, scope: !2003)
!6055 = !DILocation(line: 4133, column: 2, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4133, column: 2)
!6057 = !DILocation(line: 4136, column: 2, scope: !2003)
!6058 = !DILocation(line: 4136, column: 9, scope: !2003)
!6059 = !DILocation(line: 4136, column: 15, scope: !2003)
!6060 = !DILocation(line: 4137, column: 36, scope: !2003)
!6061 = !DILocation(line: 4137, column: 27, scope: !2003)
!6062 = !DILocation(line: 4137, column: 2, scope: !2003)
!6063 = !DILocation(line: 4139, column: 2, scope: !2003)
!6064 = !DILocation(line: 4139, column: 9, scope: !2003)
!6065 = !DILocation(line: 4141, column: 6, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4141, column: 6)
!6067 = !DILocation(line: 4141, column: 6, scope: !2003)
!6068 = !DILocation(line: 4142, column: 3, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 4141, column: 66)
!6070 = !DILocation(line: 4145, column: 9, scope: !2003)
!6071 = !DILocation(line: 4145, column: 21, scope: !2003)
!6072 = !DILocation(line: 4146, column: 9, scope: !2003)
!6073 = !DILocation(line: 4147, column: 24, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4147, column: 6)
!6075 = !DILocation(line: 4147, column: 30, scope: !6074)
!6076 = !DILocation(line: 4147, column: 6, scope: !6074)
!6077 = !DILocation(line: 4147, column: 6, scope: !2003)
!6078 = !DILocation(line: 4148, column: 3, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 4147, column: 63)
!6080 = !DILocation(line: 4150, column: 10, scope: !2003)
!6081 = !DILocation(line: 4150, column: 30, scope: !2003)
!6082 = !DILocation(line: 4150, column: 16, scope: !2003)
!6083 = !DILocation(line: 4151, column: 7, scope: !2003)
!6084 = !DILocation(line: 4151, column: 23, scope: !2003)
!6085 = !DILocation(line: 4151, column: 14, scope: !2003)
!6086 = !DILocation(line: 4157, column: 15, scope: !2003)
!6087 = !DILocation(line: 4158, column: 11, scope: !2003)
!6088 = !DILocation(line: 4160, column: 9, scope: !2003)
!6089 = !DILocation(line: 4161, column: 6, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4161, column: 6)
!6091 = !DILocation(line: 4161, column: 6, scope: !2003)
!6092 = !DILocation(line: 4162, column: 21, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 4161, column: 30)
!6094 = !DILocation(line: 4162, column: 11, scope: !6093)
!6095 = !DILocation(line: 4162, column: 26, scope: !6093)
!6096 = !{!3531, !2792, i64 16}
!6097 = !DILocation(line: 4162, column: 9, scope: !6093)
!6098 = !DILocation(line: 4163, column: 3, scope: !6093)
!6099 = !DILocation(line: 4163, column: 3, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4163, column: 3)
!6101 = !DILocation(line: 4164, column: 2, scope: !6093)
!6102 = !DILocation(line: 4166, column: 2, scope: !2003)
!6103 = !DILocation(line: 4166, column: 9, scope: !2003)
!6104 = !DILocation(line: 4166, column: 18, scope: !2003)
!6105 = !DILocation(line: 4166, column: 16, scope: !2003)
!6106 = !DILocation(line: 4167, column: 3, scope: !2021)
!6107 = !DILocation(line: 4167, column: 10, scope: !2021)
!6108 = !DILocation(line: 4167, column: 18, scope: !2021)
!6109 = !DILocation(line: 4167, column: 24, scope: !2021)
!6110 = !DILocation(line: 4167, column: 22, scope: !2021)
!6111 = !DILocation(line: 4168, column: 3, scope: !2021)
!6112 = !DILocation(line: 4168, column: 10, scope: !2021)
!6113 = !DILocation(line: 4169, column: 3, scope: !2021)
!6114 = !DILocation(line: 4169, column: 8, scope: !2021)
!6115 = !DILocation(line: 4174, column: 7, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 4174, column: 7)
!6117 = !DILocation(line: 4174, column: 7, scope: !2021)
!6118 = !DILocation(line: 4179, column: 13, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4174, column: 26)
!6120 = !DILocation(line: 4179, column: 23, scope: !6119)
!6121 = !DILocation(line: 4179, column: 21, scope: !6119)
!6122 = !DILocation(line: 4179, column: 29, scope: !6119)
!6123 = !DILocation(line: 4179, column: 10, scope: !6119)
!6124 = !DILocation(line: 4180, column: 35, scope: !6119)
!6125 = !DILocation(line: 4180, column: 40, scope: !6119)
!6126 = !DILocation(line: 4180, column: 47, scope: !6119)
!6127 = !DILocation(line: 4180, column: 4, scope: !6119)
!6128 = !DILocation(line: 4181, column: 3, scope: !6119)
!6129 = !DILocation(line: 4183, column: 3, scope: !2021)
!6130 = !DILocation(line: 4183, column: 10, scope: !2021)
!6131 = !DILocation(line: 4185, column: 7, scope: !2029)
!6132 = !DILocation(line: 4185, column: 30, scope: !2029)
!6133 = !DILocation(line: 4185, column: 33, scope: !2029)
!6134 = !DILocation(line: 4185, column: 42, scope: !2029)
!6135 = !DILocation(line: 4185, column: 39, scope: !2029)
!6136 = !DILocation(line: 4185, column: 7, scope: !2021)
!6137 = !DILocation(line: 4186, column: 8, scope: !2027)
!6138 = !DILocation(line: 4186, column: 14, scope: !2027)
!6139 = !DILocation(line: 4186, column: 8, scope: !2028)
!6140 = !DILocation(line: 4187, column: 5, scope: !2026)
!6141 = !DILocation(line: 4187, column: 14, scope: !2026)
!6142 = !DILocation(line: 4187, column: 44, scope: !2026)
!6143 = !DILocation(line: 4187, column: 26, scope: !2026)
!6144 = !DILocation(line: 4188, column: 28, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !2026, file: !3, line: 4188, column: 9)
!6146 = !DILocation(line: 4188, column: 33, scope: !6145)
!6147 = !DILocation(line: 4188, column: 9, scope: !6145)
!6148 = !DILocation(line: 4188, column: 9, scope: !2026)
!6149 = !DILocation(line: 4190, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 4189, column: 18)
!6151 = !DILocation(line: 4192, column: 9, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !2026, file: !3, line: 4192, column: 9)
!6153 = !DILocation(line: 4192, column: 15, scope: !6152)
!6154 = !DILocation(line: 4192, column: 9, scope: !2026)
!6155 = !DILocation(line: 4193, column: 27, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 4192, column: 24)
!6157 = !DILocation(line: 4193, column: 14, scope: !6156)
!6158 = !DILocation(line: 4193, column: 12, scope: !6156)
!6159 = !DILocation(line: 4194, column: 5, scope: !6156)
!6160 = !DILocation(line: 4195, column: 9, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !2026, file: !3, line: 4195, column: 9)
!6162 = !DILocation(line: 4195, column: 9, scope: !2026)
!6163 = !DILocation(line: 4196, column: 6, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 4195, column: 34)
!6165 = !DILocation(line: 4198, column: 4, scope: !2027)
!6166 = !DILocation(line: 4198, column: 4, scope: !2026)
!6167 = !DILocation(line: 4199, column: 4, scope: !2028)
!6168 = !DILocation(line: 4199, column: 11, scope: !2028)
!6169 = !DILocation(line: 4199, column: 25, scope: !2028)
!6170 = !DILocation(line: 4199, column: 33, scope: !2028)
!6171 = !DILocation(line: 4199, column: 41, scope: !2028)
!6172 = !DILocation(line: 4199, column: 39, scope: !2028)
!6173 = !DILocation(line: 4199, column: 31, scope: !2028)
!6174 = !DILocation(line: 4200, column: 4, scope: !2028)
!6175 = !DILocation(line: 4200, column: 11, scope: !2028)
!6176 = !DILocation(line: 4200, column: 47, scope: !2028)
!6177 = !DILocation(line: 4200, column: 38, scope: !2028)
!6178 = !DILocation(line: 4200, column: 53, scope: !2028)
!6179 = !DILocation(line: 4201, column: 8, scope: !2028)
!6180 = !DILocation(line: 4201, column: 13, scope: !2028)
!6181 = !DILocation(line: 4201, column: 20, scope: !2028)
!6182 = !DILocation(line: 4201, column: 18, scope: !2028)
!6183 = !DILocation(line: 4201, column: 28, scope: !2028)
!6184 = !DILocation(line: 4201, column: 41, scope: !2028)
!6185 = !DILocation(line: 4200, column: 15, scope: !2028)
!6186 = !DILocation(line: 4202, column: 16, scope: !2028)
!6187 = !DILocation(line: 4202, column: 13, scope: !2028)
!6188 = !DILocation(line: 4203, column: 14, scope: !2028)
!6189 = !DILocation(line: 4203, column: 11, scope: !2028)
!6190 = !DILocation(line: 4204, column: 3, scope: !2029)
!6191 = !DILocation(line: 4204, column: 3, scope: !2028)
!6192 = !DILocation(line: 4206, column: 7, scope: !2036)
!6193 = !DILocation(line: 4206, column: 28, scope: !2036)
!6194 = !DILocation(line: 4206, column: 31, scope: !2036)
!6195 = !DILocation(line: 4206, column: 42, scope: !2036)
!6196 = !DILocation(line: 4206, column: 40, scope: !2036)
!6197 = !DILocation(line: 4206, column: 7, scope: !2021)
!6198 = !DILocation(line: 4207, column: 8, scope: !2034)
!6199 = !DILocation(line: 4207, column: 12, scope: !2034)
!6200 = !DILocation(line: 4207, column: 8, scope: !2035)
!6201 = !DILocation(line: 4208, column: 5, scope: !2033)
!6202 = !DILocation(line: 4208, column: 14, scope: !2033)
!6203 = !DILocation(line: 4208, column: 46, scope: !2033)
!6204 = !DILocation(line: 4208, column: 27, scope: !2033)
!6205 = !DILocation(line: 4209, column: 5, scope: !2033)
!6206 = !DILocation(line: 4209, column: 15, scope: !2033)
!6207 = !DILocation(line: 4209, column: 44, scope: !2033)
!6208 = !DILocation(line: 4210, column: 9, scope: !2033)
!6209 = !DILocation(line: 4209, column: 24, scope: !2033)
!6210 = !DILocation(line: 4212, column: 9, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !2033, file: !3, line: 4212, column: 9)
!6212 = !DILocation(line: 4212, column: 16, scope: !6211)
!6213 = !DILocation(line: 4212, column: 9, scope: !2033)
!6214 = !DILocation(line: 4213, column: 13, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 4212, column: 25)
!6216 = !DILocation(line: 4213, column: 21, scope: !6215)
!6217 = !DILocation(line: 4213, column: 26, scope: !6215)
!6218 = !DILocation(line: 4213, column: 10, scope: !6215)
!6219 = !DILocation(line: 4214, column: 5, scope: !6215)
!6220 = !DILocation(line: 4215, column: 4, scope: !2034)
!6221 = !DILocation(line: 4215, column: 4, scope: !2033)
!6222 = !DILocation(line: 4224, column: 8, scope: !2040)
!6223 = !DILocation(line: 4224, column: 12, scope: !2040)
!6224 = !DILocation(line: 4224, column: 8, scope: !2035)
!6225 = !DILocation(line: 4225, column: 5, scope: !2039)
!6226 = !DILocation(line: 4225, column: 12, scope: !2039)
!6227 = !DILocation(line: 4225, column: 24, scope: !2039)
!6228 = !DILocation(line: 4225, column: 32, scope: !2039)
!6229 = !DILocation(line: 4225, column: 30, scope: !2039)
!6230 = !DILocation(line: 4243, column: 5, scope: !2039)
!6231 = !DILocation(line: 4243, column: 12, scope: !2039)
!6232 = !DILocation(line: 4243, column: 38, scope: !2039)
!6233 = !DILocation(line: 4243, column: 43, scope: !2039)
!6234 = !DILocation(line: 4244, column: 9, scope: !2039)
!6235 = !DILocation(line: 4244, column: 16, scope: !2039)
!6236 = !DILocation(line: 4244, column: 14, scope: !2039)
!6237 = !DILocation(line: 4243, column: 16, scope: !2039)
!6238 = !DILocation(line: 4246, column: 31, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 4245, column: 23)
!6240 = distinct !DILexicalBlock(scope: !2039, file: !3, line: 4245, column: 9)
!6241 = !DILocation(line: 4246, column: 6, scope: !6239)
!6242 = !DILocation(line: 4246, column: 11, scope: !6239)
!6243 = !DILocation(line: 4246, column: 18, scope: !6239)
!6244 = !DILocation(line: 4246, column: 28, scope: !6239)
!6245 = !{!6246, !2664, i64 8}
!6246 = !{!"cache_bin_s", !2659, i64 0, !6247, i64 8, !6248, i64 16, !6248, i64 18, !6248, i64 20}
!6247 = !{!"cache_bin_stats_s", !2664, i64 0}
!6248 = !{!"short", !2660, i64 0}
!6249 = !DILocation(line: 4248, column: 9, scope: !2045)
!6250 = !DILocation(line: 4248, column: 9, scope: !2039)
!6251 = !DILocation(line: 4249, column: 11, scope: !2043)
!6252 = !DILocation(line: 4249, column: 18, scope: !2043)
!6253 = !DILocation(line: 4249, column: 25, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !2043, file: !3, line: 4249, column: 6)
!6255 = !DILocation(line: 4249, column: 29, scope: !6254)
!6256 = !DILocation(line: 4249, column: 27, scope: !6254)
!6257 = !DILocation(line: 4249, column: 6, scope: !2043)
!6258 = !DILocation(line: 4249, column: 6, scope: !6254)
!6259 = !DILocation(line: 4250, column: 14, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 4249, column: 37)
!6261 = !DILocation(line: 4250, column: 19, scope: !6260)
!6262 = !DILocation(line: 4250, column: 28, scope: !6260)
!6263 = !DILocation(line: 4250, column: 26, scope: !6260)
!6264 = !DILocation(line: 4251, column: 11, scope: !6260)
!6265 = !DILocation(line: 4250, column: 7, scope: !6260)
!6266 = !DILocation(line: 4252, column: 6, scope: !6260)
!6267 = !DILocation(line: 4249, column: 32, scope: !6254)
!6268 = distinct !{!6268, !6257, !6269, !3182}
!6269 = !DILocation(line: 4252, column: 6, scope: !2043)
!6270 = !DILocation(line: 4253, column: 5, scope: !2044)
!6271 = !DILocation(line: 4261, column: 17, scope: !2039)
!6272 = !DILocation(line: 4261, column: 14, scope: !2039)
!6273 = !DILocation(line: 4262, column: 15, scope: !2039)
!6274 = !DILocation(line: 4262, column: 12, scope: !2039)
!6275 = !DILocation(line: 4263, column: 4, scope: !2040)
!6276 = !DILocation(line: 4263, column: 4, scope: !2039)
!6277 = !DILocation(line: 4264, column: 3, scope: !2035)
!6278 = !DILocation(line: 4276, column: 22, scope: !2021)
!6279 = !DILocation(line: 4276, column: 27, scope: !2021)
!6280 = !DILocation(line: 4276, column: 38, scope: !2021)
!6281 = !DILocation(line: 4276, column: 36, scope: !2021)
!6282 = !DILocation(line: 4276, column: 3, scope: !2021)
!6283 = !DILocation(line: 4278, column: 7, scope: !2048)
!6284 = !DILocation(line: 4278, column: 18, scope: !2048)
!6285 = !DILocation(line: 4278, column: 16, scope: !2048)
!6286 = !DILocation(line: 4278, column: 24, scope: !2048)
!6287 = !DILocation(line: 4278, column: 27, scope: !2048)
!6288 = !DILocation(line: 4278, column: 7, scope: !2021)
!6289 = !DILocation(line: 4279, column: 4, scope: !2047)
!6290 = !DILocation(line: 4279, column: 10, scope: !2047)
!6291 = !DILocation(line: 4279, column: 25, scope: !2047)
!6292 = !DILocation(line: 4279, column: 31, scope: !2047)
!6293 = !DILocation(line: 4279, column: 14, scope: !2047)
!6294 = !DILocation(line: 4280, column: 8, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !2047, file: !3, line: 4280, column: 8)
!6296 = !DILocation(line: 4280, column: 10, scope: !6295)
!6297 = !DILocation(line: 4280, column: 8, scope: !2047)
!6298 = !DILocation(line: 4281, column: 5, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 4280, column: 19)
!6300 = !DILocation(line: 4283, column: 8, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !2047, file: !3, line: 4283, column: 8)
!6302 = !DILocation(line: 4283, column: 20, scope: !6301)
!6303 = !DILocation(line: 4283, column: 17, scope: !6301)
!6304 = !DILocation(line: 4283, column: 8, scope: !2047)
!6305 = !DILocation(line: 4284, column: 5, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 4283, column: 27)
!6307 = !DILocation(line: 4284, column: 5, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 4284, column: 5)
!6309 = !DILocation(line: 4285, column: 4, scope: !6306)
!6310 = !DILocation(line: 4286, column: 21, scope: !2047)
!6311 = !DILocation(line: 4286, column: 4, scope: !2047)
!6312 = !DILocation(line: 4286, column: 15, scope: !2047)
!6313 = !DILocation(line: 4286, column: 19, scope: !2047)
!6314 = !DILocation(line: 4287, column: 3, scope: !2048)
!6315 = !DILocation(line: 4287, column: 3, scope: !2047)
!6316 = !DILocation(line: 4288, column: 2, scope: !2003)
!6317 = distinct !{!6317, !6102, !6316, !3182}
!6318 = !DILocation(line: 4290, column: 1, scope: !2003)
!6319 = !DILocation(line: 4291, column: 36, scope: !2003)
!6320 = !DILocation(line: 4291, column: 27, scope: !2003)
!6321 = !DILocation(line: 4291, column: 2, scope: !2003)
!6322 = !DILocation(line: 4292, column: 2, scope: !2003)
!6323 = !DILocation(line: 4292, column: 2, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4292, column: 2)
!6325 = !DILocation(line: 4293, column: 9, scope: !2003)
!6326 = !DILocation(line: 4293, column: 2, scope: !2003)
!6327 = !DILocation(line: 4294, column: 1, scope: !2003)
!6328 = distinct !DISubprogram(name: "tsd_reentrancy_level_get", scope: !145, file: !145, line: 373, type: !6329, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6331)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!402, !1347}
!6331 = !{!6332}
!6332 = !DILocalVariable(name: "tsd", arg: 1, scope: !6328, file: !145, line: 373, type: !1347)
!6333 = !DILocation(line: 373, column: 1, scope: !6328)
!6334 = distinct !DISubprogram(name: "aligned_usize_get", scope: !3, file: !3, line: 2295, type: !6335, scopeLine: 2296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6338)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!389, !387, !387, !556, !6337, !389}
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!6338 = !{!6339, !6340, !6341, !6342, !6343}
!6339 = !DILocalVariable(name: "size", arg: 1, scope: !6334, file: !3, line: 2295, type: !387)
!6340 = !DILocalVariable(name: "alignment", arg: 2, scope: !6334, file: !3, line: 2295, type: !387)
!6341 = !DILocalVariable(name: "usize", arg: 3, scope: !6334, file: !3, line: 2295, type: !556)
!6342 = !DILocalVariable(name: "ind", arg: 4, scope: !6334, file: !3, line: 2295, type: !6337)
!6343 = !DILocalVariable(name: "bump_empty_aligned_alloc", arg: 5, scope: !6334, file: !3, line: 2296, type: !389)
!6344 = !DILocation(line: 2295, column: 26, scope: !6334)
!6345 = !DILocation(line: 2295, column: 39, scope: !6334)
!6346 = !DILocation(line: 2295, column: 58, scope: !6334)
!6347 = !DILocation(line: 2295, column: 74, scope: !6334)
!6348 = !DILocation(line: 2296, column: 10, scope: !6334)
!6349 = !DILocation(line: 2297, column: 2, scope: !6334)
!6350 = !DILocation(line: 2297, column: 2, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 2297, column: 2)
!6352 = !DILocation(line: 2298, column: 6, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 2298, column: 6)
!6354 = !DILocation(line: 2298, column: 16, scope: !6353)
!6355 = !DILocation(line: 2298, column: 6, scope: !6334)
!6356 = !DILocation(line: 2299, column: 7, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 2299, column: 7)
!6358 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 2298, column: 22)
!6359 = !DILocation(line: 2299, column: 11, scope: !6357)
!6360 = !DILocation(line: 2299, column: 7, scope: !6358)
!6361 = !DILocation(line: 2300, column: 25, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 2299, column: 20)
!6363 = !DILocation(line: 2300, column: 11, scope: !6362)
!6364 = !DILocation(line: 2300, column: 5, scope: !6362)
!6365 = !DILocation(line: 2300, column: 9, scope: !6362)
!6366 = !DILocation(line: 2301, column: 8, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 2301, column: 8)
!6368 = !DILocation(line: 2301, column: 8, scope: !6362)
!6369 = !DILocation(line: 2302, column: 5, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 2301, column: 37)
!6371 = !DILocation(line: 2304, column: 28, scope: !6362)
!6372 = !DILocation(line: 2304, column: 27, scope: !6362)
!6373 = !DILocation(line: 2304, column: 13, scope: !6362)
!6374 = !DILocation(line: 2304, column: 5, scope: !6362)
!6375 = !DILocation(line: 2304, column: 11, scope: !6362)
!6376 = !DILocation(line: 2305, column: 4, scope: !6362)
!6377 = !DILocation(line: 2305, column: 4, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 2305, column: 4)
!6379 = !DILocation(line: 2306, column: 4, scope: !6362)
!6380 = !DILocation(line: 2308, column: 19, scope: !6358)
!6381 = !DILocation(line: 2308, column: 12, scope: !6358)
!6382 = !DILocation(line: 2308, column: 4, scope: !6358)
!6383 = !DILocation(line: 2308, column: 10, scope: !6358)
!6384 = !DILocation(line: 2309, column: 2, scope: !6358)
!6385 = !DILocation(line: 2310, column: 7, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 2310, column: 7)
!6387 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 2309, column: 9)
!6388 = !DILocation(line: 2310, column: 32, scope: !6386)
!6389 = !DILocation(line: 2310, column: 35, scope: !6386)
!6390 = !DILocation(line: 2310, column: 7, scope: !6387)
!6391 = !DILocation(line: 2311, column: 9, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2310, column: 56)
!6393 = !DILocation(line: 2312, column: 3, scope: !6392)
!6394 = !DILocation(line: 2313, column: 20, scope: !6387)
!6395 = !DILocation(line: 2313, column: 26, scope: !6387)
!6396 = !DILocation(line: 2313, column: 12, scope: !6387)
!6397 = !DILocation(line: 2313, column: 4, scope: !6387)
!6398 = !DILocation(line: 2313, column: 10, scope: !6387)
!6399 = !DILocation(line: 2315, column: 6, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 2315, column: 6)
!6401 = !DILocation(line: 2315, column: 6, scope: !6334)
!6402 = !DILocation(line: 2316, column: 3, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2315, column: 59)
!6404 = !DILocation(line: 2318, column: 2, scope: !6334)
!6405 = !DILocation(line: 2319, column: 1, scope: !6334)
!6406 = distinct !DISubprogram(name: "sz_size2index", scope: !727, file: !727, line: 203, type: !6407, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6409)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!726, !387}
!6409 = !{!6410}
!6410 = !DILocalVariable(name: "size", arg: 1, scope: !6406, file: !727, line: 203, type: !387)
!6411 = !DILocation(line: 203, column: 22, scope: !6406)
!6412 = !DILocation(line: 204, column: 6, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6406, file: !727, line: 204, column: 6)
!6414 = !DILocation(line: 204, column: 6, scope: !6406)
!6415 = !DILocation(line: 205, column: 31, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6413, file: !727, line: 204, column: 42)
!6417 = !DILocation(line: 205, column: 10, scope: !6416)
!6418 = !DILocation(line: 205, column: 3, scope: !6416)
!6419 = !DILocation(line: 207, column: 31, scope: !6406)
!6420 = !DILocation(line: 207, column: 9, scope: !6406)
!6421 = !DILocation(line: 207, column: 2, scope: !6406)
!6422 = !DILocation(line: 208, column: 1, scope: !6406)
!6423 = distinct !DISubprogram(name: "batch_alloc_prof_sample_assert", scope: !3, file: !3, line: 4119, type: !6424, scopeLine: 4119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6426)
!6424 = !DISubroutineType(types: !6425)
!6425 = !{null, !1347, !387, !387}
!6426 = !{!6427, !6428, !6429, !6430, !6431}
!6427 = !DILocalVariable(name: "tsd", arg: 1, scope: !6423, file: !3, line: 4119, type: !1347)
!6428 = !DILocalVariable(name: "batch", arg: 2, scope: !6423, file: !3, line: 4119, type: !387)
!6429 = !DILocalVariable(name: "usize", arg: 3, scope: !6423, file: !3, line: 4119, type: !387)
!6430 = !DILocalVariable(name: "prof_sample_event", scope: !6423, file: !3, line: 4121, type: !389)
!6431 = !DILocalVariable(name: "surplus", scope: !6423, file: !3, line: 4124, type: !387)
!6432 = !DILocation(line: 4119, column: 39, scope: !6423)
!6433 = !DILocation(line: 4119, column: 51, scope: !6423)
!6434 = !DILocation(line: 4119, column: 65, scope: !6423)
!6435 = !DILocation(line: 4120, column: 2, scope: !6423)
!6436 = !DILocation(line: 4120, column: 2, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 4120, column: 2)
!6438 = !DILocation(line: 4121, column: 2, scope: !6423)
!6439 = !DILocation(line: 4121, column: 7, scope: !6423)
!6440 = !DILocation(line: 4121, column: 58, scope: !6423)
!6441 = !DILocation(line: 4122, column: 6, scope: !6423)
!6442 = !DILocation(line: 4122, column: 14, scope: !6423)
!6443 = !DILocation(line: 4122, column: 12, scope: !6423)
!6444 = !DILocation(line: 4121, column: 27, scope: !6423)
!6445 = !DILocation(line: 4123, column: 2, scope: !6423)
!6446 = !DILocation(line: 4123, column: 2, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 4123, column: 2)
!6448 = !DILocation(line: 4124, column: 2, scope: !6423)
!6449 = !DILocation(line: 4124, column: 9, scope: !6423)
!6450 = !DILocation(line: 4125, column: 61, scope: !6423)
!6451 = !DILocation(line: 4126, column: 7, scope: !6423)
!6452 = !DILocation(line: 4126, column: 13, scope: !6423)
!6453 = !DILocation(line: 4126, column: 20, scope: !6423)
!6454 = !DILocation(line: 4126, column: 18, scope: !6423)
!6455 = !DILocation(line: 4125, column: 22, scope: !6423)
!6456 = !DILocation(line: 4125, column: 20, scope: !6423)
!6457 = !DILocation(line: 4127, column: 2, scope: !6423)
!6458 = !DILocation(line: 4127, column: 2, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 4127, column: 2)
!6460 = !DILocation(line: 4128, column: 2, scope: !6423)
!6461 = !DILocation(line: 4128, column: 2, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 4128, column: 2)
!6463 = !DILocation(line: 4129, column: 1, scope: !6423)
!6464 = distinct !DISubprogram(name: "arena_get_from_ind", scope: !3, file: !3, line: 2362, type: !6465, scopeLine: 2362, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6468)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!389, !1347, !7, !6467}
!6467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!6468 = !{!6469, !6470, !6471}
!6469 = !DILocalVariable(name: "tsd", arg: 1, scope: !6464, file: !3, line: 2362, type: !1347)
!6470 = !DILocalVariable(name: "arena_ind", arg: 2, scope: !6464, file: !3, line: 2362, type: !7)
!6471 = !DILocalVariable(name: "arena_p", arg: 3, scope: !6464, file: !3, line: 2362, type: !6467)
!6472 = !DILocation(line: 2362, column: 27, scope: !6464)
!6473 = !DILocation(line: 2362, column: 41, scope: !6464)
!6474 = !DILocation(line: 2362, column: 62, scope: !6464)
!6475 = !DILocation(line: 2363, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 2363, column: 6)
!6477 = !DILocation(line: 2363, column: 16, scope: !6476)
!6478 = !DILocation(line: 2363, column: 6, scope: !6464)
!6479 = !DILocation(line: 2369, column: 4, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2363, column: 40)
!6481 = !DILocation(line: 2369, column: 12, scope: !6480)
!6482 = !DILocation(line: 2370, column: 2, scope: !6480)
!6483 = !DILocation(line: 2371, column: 33, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2370, column: 9)
!6485 = !DILocation(line: 2371, column: 24, scope: !6484)
!6486 = !DILocation(line: 2371, column: 39, scope: !6484)
!6487 = !DILocation(line: 2371, column: 14, scope: !6484)
!6488 = !DILocation(line: 2371, column: 4, scope: !6484)
!6489 = !DILocation(line: 2371, column: 12, scope: !6484)
!6490 = !DILocation(line: 2372, column: 7, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 2372, column: 7)
!6492 = !DILocation(line: 2372, column: 34, scope: !6491)
!6493 = !DILocation(line: 2372, column: 37, scope: !6491)
!6494 = !DILocation(line: 2372, column: 50, scope: !6491)
!6495 = !DILocation(line: 2372, column: 47, scope: !6491)
!6496 = !DILocation(line: 2372, column: 7, scope: !6484)
!6497 = !DILocation(line: 2373, column: 4, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 2372, column: 64)
!6499 = !DILocation(line: 2376, column: 2, scope: !6464)
!6500 = !DILocation(line: 2377, column: 1, scope: !6464)
!6501 = distinct !DISubprogram(name: "arena_choose", scope: !6502, file: !6502, line: 87, type: !6503, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6505)
!6502 = !DIFile(filename: "include/jemalloc/internal/jemalloc_internal_inlines_b.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "1fc18ef67fd1c52d257761af0d373a54")
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!594, !1347, !594}
!6505 = !{!6506, !6507}
!6506 = !DILocalVariable(name: "tsd", arg: 1, scope: !6501, file: !6502, line: 87, type: !1347)
!6507 = !DILocalVariable(name: "arena", arg: 2, scope: !6501, file: !6502, line: 87, type: !594)
!6508 = !DILocation(line: 87, column: 21, scope: !6501)
!6509 = !DILocation(line: 87, column: 35, scope: !6501)
!6510 = !DILocation(line: 88, column: 27, scope: !6501)
!6511 = !DILocation(line: 88, column: 32, scope: !6501)
!6512 = !DILocation(line: 88, column: 9, scope: !6501)
!6513 = !DILocation(line: 88, column: 2, scope: !6501)
!6514 = !DISubprogram(name: "arena_fill_small_fresh", scope: !3073, file: !3073, line: 106, type: !6515, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6515 = !DISubroutineType(types: !6516)
!6516 = !{!387, !391, !594, !726, !712, !387, !389}
!6517 = distinct !DISubprogram(name: "cache_bin_alloc_batch", scope: !697, file: !697, line: 412, type: !6518, scopeLine: 412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6520)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{!1427, !707, !387, !712}
!6520 = !{!6521, !6522, !6523, !6524}
!6521 = !DILocalVariable(name: "bin", arg: 1, scope: !6517, file: !697, line: 412, type: !707)
!6522 = !DILocalVariable(name: "num", arg: 2, scope: !6517, file: !697, line: 412, type: !387)
!6523 = !DILocalVariable(name: "out", arg: 3, scope: !6517, file: !697, line: 412, type: !712)
!6524 = !DILocalVariable(name: "n", scope: !6517, file: !697, line: 413, type: !1427)
!6525 = !DILocation(line: 412, column: 36, scope: !6517)
!6526 = !DILocation(line: 412, column: 48, scope: !6517)
!6527 = !DILocation(line: 412, column: 60, scope: !6517)
!6528 = !DILocation(line: 413, column: 2, scope: !6517)
!6529 = !DILocation(line: 413, column: 17, scope: !6517)
!6530 = !DILocation(line: 413, column: 52, scope: !6517)
!6531 = !DILocation(line: 413, column: 21, scope: !6517)
!6532 = !{!6248, !6248, i64 0}
!6533 = !DILocation(line: 415, column: 6, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6517, file: !697, line: 415, column: 6)
!6535 = !DILocation(line: 415, column: 10, scope: !6534)
!6536 = !DILocation(line: 415, column: 8, scope: !6534)
!6537 = !DILocation(line: 415, column: 6, scope: !6517)
!6538 = !DILocation(line: 416, column: 23, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6534, file: !697, line: 415, column: 15)
!6540 = !DILocation(line: 416, column: 7, scope: !6539)
!6541 = !DILocation(line: 416, column: 5, scope: !6539)
!6542 = !DILocation(line: 417, column: 2, scope: !6539)
!6543 = !DILocation(line: 418, column: 9, scope: !6517)
!6544 = !DILocation(line: 418, column: 14, scope: !6517)
!6545 = !DILocation(line: 418, column: 19, scope: !6517)
!6546 = !{!6246, !2659, i64 0}
!6547 = !DILocation(line: 418, column: 31, scope: !6517)
!6548 = !DILocation(line: 418, column: 33, scope: !6517)
!6549 = !DILocation(line: 418, column: 2, scope: !6517)
!6550 = !DILocation(line: 419, column: 21, scope: !6517)
!6551 = !DILocation(line: 419, column: 2, scope: !6517)
!6552 = !DILocation(line: 419, column: 7, scope: !6517)
!6553 = !DILocation(line: 419, column: 18, scope: !6517)
!6554 = !DILocation(line: 420, column: 29, scope: !6517)
!6555 = !DILocation(line: 420, column: 2, scope: !6517)
!6556 = !DILocation(line: 422, column: 9, scope: !6517)
!6557 = !DILocation(line: 423, column: 1, scope: !6517)
!6558 = !DILocation(line: 422, column: 2, scope: !6517)
!6559 = distinct !DISubprogram(name: "jemalloc_constructor", scope: !3, file: !3, line: 4321, type: !6560, scopeLine: 4321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{null}
!6562 = !DILocation(line: 4322, column: 2, scope: !6559)
!6563 = !DILocation(line: 4323, column: 1, scope: !6559)
!6564 = distinct !DISubprogram(name: "jemalloc_prefork", scope: !3, file: !3, line: 4328, type: !6560, scopeLine: 4333, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6565)
!6565 = !{!6566, !6567, !6568, !6569, !6570}
!6566 = !DILocalVariable(name: "tsd", scope: !6564, file: !3, line: 4334, type: !1347)
!6567 = !DILocalVariable(name: "i", scope: !6564, file: !3, line: 4335, type: !7)
!6568 = !DILocalVariable(name: "j", scope: !6564, file: !3, line: 4335, type: !7)
!6569 = !DILocalVariable(name: "narenas", scope: !6564, file: !3, line: 4335, type: !7)
!6570 = !DILocalVariable(name: "arena", scope: !6564, file: !3, line: 4336, type: !594)
!6571 = !DILocation(line: 4334, column: 2, scope: !6564)
!6572 = !DILocation(line: 4334, column: 9, scope: !6564)
!6573 = !DILocation(line: 4335, column: 2, scope: !6564)
!6574 = !DILocation(line: 4335, column: 11, scope: !6564)
!6575 = !DILocation(line: 4335, column: 14, scope: !6564)
!6576 = !DILocation(line: 4335, column: 17, scope: !6564)
!6577 = !DILocation(line: 4336, column: 2, scope: !6564)
!6578 = !DILocation(line: 4336, column: 11, scope: !6564)
!6579 = !DILocation(line: 4343, column: 2, scope: !6564)
!6580 = !DILocation(line: 4343, column: 2, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 4343, column: 2)
!6582 = !DILocation(line: 4345, column: 8, scope: !6564)
!6583 = !DILocation(line: 4345, column: 6, scope: !6564)
!6584 = !DILocation(line: 4347, column: 12, scope: !6564)
!6585 = !DILocation(line: 4347, column: 10, scope: !6564)
!6586 = !DILocation(line: 4349, column: 39, scope: !6564)
!6587 = !DILocation(line: 4349, column: 18, scope: !6564)
!6588 = !DILocation(line: 4349, column: 2, scope: !6564)
!6589 = !DILocation(line: 4351, column: 23, scope: !6564)
!6590 = !DILocation(line: 4351, column: 14, scope: !6564)
!6591 = !DILocation(line: 4351, column: 2, scope: !6564)
!6592 = !DILocation(line: 4352, column: 26, scope: !6564)
!6593 = !DILocation(line: 4352, column: 17, scope: !6564)
!6594 = !DILocation(line: 4352, column: 2, scope: !6564)
!6595 = !DILocation(line: 4353, column: 32, scope: !6564)
!6596 = !DILocation(line: 4353, column: 23, scope: !6564)
!6597 = !DILocation(line: 4353, column: 2, scope: !6564)
!6598 = !DILocation(line: 4355, column: 39, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 4354, column: 30)
!6600 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 4354, column: 6)
!6601 = !DILocation(line: 4355, column: 30, scope: !6599)
!6602 = !DILocation(line: 4355, column: 3, scope: !6599)
!6603 = !DILocation(line: 4357, column: 25, scope: !6564)
!6604 = !DILocation(line: 4357, column: 16, scope: !6564)
!6605 = !DILocation(line: 4357, column: 2, scope: !6564)
!6606 = !DILocation(line: 4359, column: 39, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 4358, column: 30)
!6608 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 4358, column: 6)
!6609 = !DILocation(line: 4359, column: 30, scope: !6607)
!6610 = !DILocation(line: 4359, column: 3, scope: !6607)
!6611 = !DILocation(line: 4362, column: 9, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 4362, column: 2)
!6613 = !DILocation(line: 4362, column: 7, scope: !6612)
!6614 = !DILocation(line: 4362, column: 14, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 4362, column: 2)
!6616 = !DILocation(line: 4362, column: 16, scope: !6615)
!6617 = !DILocation(line: 4362, column: 2, scope: !6612)
!6618 = !DILocation(line: 4363, column: 10, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 4363, column: 3)
!6620 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 4362, column: 26)
!6621 = !DILocation(line: 4363, column: 8, scope: !6619)
!6622 = !DILocation(line: 4363, column: 15, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 4363, column: 3)
!6624 = !DILocation(line: 4363, column: 19, scope: !6623)
!6625 = !DILocation(line: 4363, column: 17, scope: !6623)
!6626 = !DILocation(line: 4363, column: 3, scope: !6619)
!6627 = !DILocation(line: 4364, column: 36, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 4364, column: 8)
!6629 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 4363, column: 33)
!6630 = !DILocation(line: 4364, column: 27, scope: !6628)
!6631 = !DILocation(line: 4364, column: 42, scope: !6628)
!6632 = !DILocation(line: 4364, column: 17, scope: !6628)
!6633 = !DILocation(line: 4364, column: 15, scope: !6628)
!6634 = !DILocation(line: 4364, column: 53, scope: !6628)
!6635 = !DILocation(line: 4364, column: 8, scope: !6629)
!6636 = !DILocation(line: 4366, column: 13, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 4365, column: 14)
!6638 = !DILocation(line: 4366, column: 5, scope: !6637)
!6639 = !DILocation(line: 4368, column: 30, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 4366, column: 16)
!6641 = !DILocation(line: 4368, column: 21, scope: !6640)
!6642 = !DILocation(line: 4368, column: 36, scope: !6640)
!6643 = !DILocation(line: 4368, column: 6, scope: !6640)
!6644 = !DILocation(line: 4369, column: 6, scope: !6640)
!6645 = !DILocation(line: 4371, column: 30, scope: !6640)
!6646 = !DILocation(line: 4371, column: 21, scope: !6640)
!6647 = !DILocation(line: 4371, column: 36, scope: !6640)
!6648 = !DILocation(line: 4371, column: 6, scope: !6640)
!6649 = !DILocation(line: 4372, column: 6, scope: !6640)
!6650 = !DILocation(line: 4374, column: 30, scope: !6640)
!6651 = !DILocation(line: 4374, column: 21, scope: !6640)
!6652 = !DILocation(line: 4374, column: 36, scope: !6640)
!6653 = !DILocation(line: 4374, column: 6, scope: !6640)
!6654 = !DILocation(line: 4375, column: 6, scope: !6640)
!6655 = !DILocation(line: 4377, column: 30, scope: !6640)
!6656 = !DILocation(line: 4377, column: 21, scope: !6640)
!6657 = !DILocation(line: 4377, column: 36, scope: !6640)
!6658 = !DILocation(line: 4377, column: 6, scope: !6640)
!6659 = !DILocation(line: 4378, column: 6, scope: !6640)
!6660 = !DILocation(line: 4380, column: 30, scope: !6640)
!6661 = !DILocation(line: 4380, column: 21, scope: !6640)
!6662 = !DILocation(line: 4380, column: 36, scope: !6640)
!6663 = !DILocation(line: 4380, column: 6, scope: !6640)
!6664 = !DILocation(line: 4381, column: 6, scope: !6640)
!6665 = !DILocation(line: 4383, column: 30, scope: !6640)
!6666 = !DILocation(line: 4383, column: 21, scope: !6640)
!6667 = !DILocation(line: 4383, column: 36, scope: !6640)
!6668 = !DILocation(line: 4383, column: 6, scope: !6640)
!6669 = !DILocation(line: 4384, column: 6, scope: !6640)
!6670 = !DILocation(line: 4386, column: 30, scope: !6640)
!6671 = !DILocation(line: 4386, column: 21, scope: !6640)
!6672 = !DILocation(line: 4386, column: 36, scope: !6640)
!6673 = !DILocation(line: 4386, column: 6, scope: !6640)
!6674 = !DILocation(line: 4387, column: 6, scope: !6640)
!6675 = !DILocation(line: 4389, column: 30, scope: !6640)
!6676 = !DILocation(line: 4389, column: 21, scope: !6640)
!6677 = !DILocation(line: 4389, column: 36, scope: !6640)
!6678 = !DILocation(line: 4389, column: 6, scope: !6640)
!6679 = !DILocation(line: 4390, column: 6, scope: !6640)
!6680 = !DILocation(line: 4392, column: 30, scope: !6640)
!6681 = !DILocation(line: 4392, column: 21, scope: !6640)
!6682 = !DILocation(line: 4392, column: 36, scope: !6640)
!6683 = !DILocation(line: 4392, column: 6, scope: !6640)
!6684 = !DILocation(line: 4393, column: 6, scope: !6640)
!6685 = !DILocation(line: 4394, column: 14, scope: !6640)
!6686 = !DILocation(line: 4394, column: 14, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 4394, column: 14)
!6688 = !DILocation(line: 4395, column: 5, scope: !6640)
!6689 = !DILocation(line: 4396, column: 4, scope: !6637)
!6690 = !DILocation(line: 4397, column: 3, scope: !6629)
!6691 = !DILocation(line: 4363, column: 29, scope: !6623)
!6692 = !DILocation(line: 4363, column: 3, scope: !6623)
!6693 = distinct !{!6693, !6626, !6694, !3182}
!6694 = !DILocation(line: 4397, column: 3, scope: !6619)
!6695 = !DILocation(line: 4399, column: 2, scope: !6620)
!6696 = !DILocation(line: 4362, column: 22, scope: !6615)
!6697 = !DILocation(line: 4362, column: 2, scope: !6615)
!6698 = distinct !{!6698, !6617, !6699, !3182}
!6699 = !DILocation(line: 4399, column: 2, scope: !6612)
!6700 = !DILocation(line: 4400, column: 25, scope: !6564)
!6701 = !DILocation(line: 4400, column: 16, scope: !6564)
!6702 = !DILocation(line: 4400, column: 2, scope: !6564)
!6703 = !DILocation(line: 4401, column: 25, scope: !6564)
!6704 = !DILocation(line: 4401, column: 16, scope: !6564)
!6705 = !DILocation(line: 4401, column: 2, scope: !6564)
!6706 = !DILocation(line: 4402, column: 14, scope: !6564)
!6707 = !DILocation(line: 4402, column: 2, scope: !6564)
!6708 = !DILocation(line: 4403, column: 1, scope: !6564)
!6709 = !DISubprogram(name: "witness_prefork", scope: !19, file: !19, line: 175, type: !6710, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6710 = !DISubroutineType(types: !6711)
!6711 = !{null, !6712}
!6712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!6713 = distinct !DISubprogram(name: "tsd_witness_tsdp_get", scope: !145, file: !145, line: 346, type: !6714, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6716)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!6712, !1347}
!6716 = !{!6717, !6718}
!6717 = !DILocalVariable(name: "tsd", arg: 1, scope: !6713, file: !145, line: 346, type: !1347)
!6718 = !DILocalVariable(name: "state", scope: !6713, file: !145, line: 346, type: !730)
!6719 = !DILocation(line: 346, column: 1, scope: !6713)
!6720 = !DILocation(line: 346, column: 1, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6713, file: !145, line: 346, column: 1)
!6722 = !DISubprogram(name: "ctl_prefork", scope: !5872, file: !5872, line: 108, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6723 = !DISubprogram(name: "tcache_prefork", scope: !6724, file: !6724, line: 58, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6724 = !DIFile(filename: "include/jemalloc/internal/tcache_externs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "8192a1928d72010c22c120688058db73")
!6725 = !DISubprogram(name: "malloc_mutex_prefork", scope: !65, file: !65, line: 141, type: !2904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6726 = !DISubprogram(name: "background_thread_prefork0", scope: !6727, file: !6727, line: 18, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6727 = !DIFile(filename: "include/jemalloc/internal/background_thread_externs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "233bf27138401e847e81f06454aca7c8")
!6728 = !DISubprogram(name: "prof_prefork0", scope: !6729, file: !6729, line: 85, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6729 = !DIFile(filename: "include/jemalloc/internal/prof_externs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "9c4cb02f268c6a5637bcfe3d6136cb3c")
!6730 = !DISubprogram(name: "background_thread_prefork1", scope: !6727, file: !6727, line: 19, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6731 = !DISubprogram(name: "arena_prefork0", scope: !3073, file: !3073, line: 109, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{null, !391, !594}
!6734 = !DISubprogram(name: "arena_prefork1", scope: !3073, file: !3073, line: 110, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6735 = !DISubprogram(name: "arena_prefork2", scope: !3073, file: !3073, line: 111, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6736 = !DISubprogram(name: "arena_prefork3", scope: !3073, file: !3073, line: 112, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6737 = !DISubprogram(name: "arena_prefork4", scope: !3073, file: !3073, line: 113, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6738 = !DISubprogram(name: "arena_prefork5", scope: !3073, file: !3073, line: 114, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6739 = !DISubprogram(name: "arena_prefork6", scope: !3073, file: !3073, line: 115, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6740 = !DISubprogram(name: "arena_prefork7", scope: !3073, file: !3073, line: 116, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6741 = !DISubprogram(name: "arena_prefork8", scope: !3073, file: !3073, line: 117, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6742 = !DISubprogram(name: "prof_prefork1", scope: !6729, file: !6729, line: 86, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6743 = !DISubprogram(name: "stats_prefork", scope: !5996, file: !5996, line: 50, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6744 = !DISubprogram(name: "tsd_prefork", scope: !145, file: !145, line: 168, type: !3590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6745 = distinct !DISubprogram(name: "jemalloc_postfork_parent", scope: !3, file: !3, line: 4407, type: !6560, scopeLine: 4412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6746)
!6746 = !{!6747, !6748, !6749, !6750}
!6747 = !DILocalVariable(name: "tsd", scope: !6745, file: !3, line: 4413, type: !1347)
!6748 = !DILocalVariable(name: "i", scope: !6745, file: !3, line: 4414, type: !7)
!6749 = !DILocalVariable(name: "narenas", scope: !6745, file: !3, line: 4414, type: !7)
!6750 = !DILocalVariable(name: "arena", scope: !6751, file: !3, line: 4431, type: !594)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 4430, column: 63)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4430, column: 2)
!6753 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 4430, column: 2)
!6754 = !DILocation(line: 4413, column: 2, scope: !6745)
!6755 = !DILocation(line: 4413, column: 9, scope: !6745)
!6756 = !DILocation(line: 4414, column: 2, scope: !6745)
!6757 = !DILocation(line: 4414, column: 11, scope: !6745)
!6758 = !DILocation(line: 4414, column: 14, scope: !6745)
!6759 = !DILocation(line: 4421, column: 2, scope: !6745)
!6760 = !DILocation(line: 4421, column: 2, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 4421, column: 2)
!6762 = !DILocation(line: 4423, column: 8, scope: !6745)
!6763 = !DILocation(line: 4423, column: 6, scope: !6745)
!6764 = !DILocation(line: 4425, column: 22, scope: !6745)
!6765 = !DILocation(line: 4425, column: 2, scope: !6745)
!6766 = !DILocation(line: 4427, column: 47, scope: !6745)
!6767 = !DILocation(line: 4427, column: 26, scope: !6745)
!6768 = !DILocation(line: 4427, column: 2, scope: !6745)
!6769 = !DILocation(line: 4429, column: 33, scope: !6745)
!6770 = !DILocation(line: 4429, column: 24, scope: !6745)
!6771 = !DILocation(line: 4429, column: 2, scope: !6745)
!6772 = !DILocation(line: 4430, column: 9, scope: !6753)
!6773 = !DILocation(line: 4430, column: 24, scope: !6753)
!6774 = !DILocation(line: 4430, column: 22, scope: !6753)
!6775 = !DILocation(line: 4430, column: 7, scope: !6753)
!6776 = !DILocation(line: 4430, column: 45, scope: !6752)
!6777 = !DILocation(line: 4430, column: 49, scope: !6752)
!6778 = !DILocation(line: 4430, column: 47, scope: !6752)
!6779 = !DILocation(line: 4430, column: 2, scope: !6753)
!6780 = !DILocation(line: 4431, column: 3, scope: !6751)
!6781 = !DILocation(line: 4431, column: 12, scope: !6751)
!6782 = !DILocation(line: 4433, column: 35, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 4433, column: 7)
!6784 = !DILocation(line: 4433, column: 26, scope: !6783)
!6785 = !DILocation(line: 4433, column: 41, scope: !6783)
!6786 = !DILocation(line: 4433, column: 16, scope: !6783)
!6787 = !DILocation(line: 4433, column: 14, scope: !6783)
!6788 = !DILocation(line: 4433, column: 52, scope: !6783)
!6789 = !DILocation(line: 4433, column: 7, scope: !6751)
!6790 = !DILocation(line: 4434, column: 35, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 4433, column: 61)
!6792 = !DILocation(line: 4434, column: 26, scope: !6791)
!6793 = !DILocation(line: 4434, column: 41, scope: !6791)
!6794 = !DILocation(line: 4434, column: 4, scope: !6791)
!6795 = !DILocation(line: 4435, column: 3, scope: !6791)
!6796 = !DILocation(line: 4436, column: 2, scope: !6752)
!6797 = !DILocation(line: 4436, column: 2, scope: !6751)
!6798 = !DILocation(line: 4430, column: 59, scope: !6752)
!6799 = !DILocation(line: 4430, column: 2, scope: !6752)
!6800 = distinct !{!6800, !6779, !6801, !3182}
!6801 = !DILocation(line: 4436, column: 2, scope: !6753)
!6802 = !DILocation(line: 4437, column: 32, scope: !6745)
!6803 = !DILocation(line: 4437, column: 23, scope: !6745)
!6804 = !DILocation(line: 4437, column: 2, scope: !6745)
!6805 = !DILocation(line: 4439, column: 46, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 4438, column: 30)
!6807 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 4438, column: 6)
!6808 = !DILocation(line: 4439, column: 37, scope: !6806)
!6809 = !DILocation(line: 4439, column: 3, scope: !6806)
!6810 = !DILocation(line: 4441, column: 40, scope: !6745)
!6811 = !DILocation(line: 4441, column: 31, scope: !6745)
!6812 = !DILocation(line: 4441, column: 2, scope: !6745)
!6813 = !DILocation(line: 4442, column: 34, scope: !6745)
!6814 = !DILocation(line: 4442, column: 25, scope: !6745)
!6815 = !DILocation(line: 4442, column: 2, scope: !6745)
!6816 = !DILocation(line: 4443, column: 31, scope: !6745)
!6817 = !DILocation(line: 4443, column: 22, scope: !6745)
!6818 = !DILocation(line: 4443, column: 2, scope: !6745)
!6819 = !DILocation(line: 4444, column: 1, scope: !6745)
!6820 = !DISubprogram(name: "tsd_postfork_parent", scope: !145, file: !145, line: 169, type: !3590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6821 = !DISubprogram(name: "witness_postfork_parent", scope: !19, file: !19, line: 176, type: !6710, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6822 = !DISubprogram(name: "stats_postfork_parent", scope: !5996, file: !5996, line: 51, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6823 = !DISubprogram(name: "arena_postfork_parent", scope: !3073, file: !3073, line: 118, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6824 = !DISubprogram(name: "prof_postfork_parent", scope: !6729, file: !6729, line: 87, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6825 = !DISubprogram(name: "background_thread_postfork_parent", scope: !6727, file: !6727, line: 20, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6826 = !DISubprogram(name: "malloc_mutex_postfork_parent", scope: !65, file: !65, line: 142, type: !2904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6827 = !DISubprogram(name: "tcache_postfork_parent", scope: !6724, file: !6724, line: 59, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6828 = !DISubprogram(name: "ctl_postfork_parent", scope: !5872, file: !5872, line: 109, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6829 = distinct !DISubprogram(name: "jemalloc_postfork_child", scope: !3, file: !3, line: 4447, type: !6560, scopeLine: 4447, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6830)
!6830 = !{!6831, !6832, !6833, !6834}
!6831 = !DILocalVariable(name: "tsd", scope: !6829, file: !3, line: 4448, type: !1347)
!6832 = !DILocalVariable(name: "i", scope: !6829, file: !3, line: 4449, type: !7)
!6833 = !DILocalVariable(name: "narenas", scope: !6829, file: !3, line: 4449, type: !7)
!6834 = !DILocalVariable(name: "arena", scope: !6835, file: !3, line: 4461, type: !594)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 4460, column: 63)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 4460, column: 2)
!6837 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 4460, column: 2)
!6838 = !DILocation(line: 4448, column: 2, scope: !6829)
!6839 = !DILocation(line: 4448, column: 9, scope: !6829)
!6840 = !DILocation(line: 4449, column: 2, scope: !6829)
!6841 = !DILocation(line: 4449, column: 11, scope: !6829)
!6842 = !DILocation(line: 4449, column: 14, scope: !6829)
!6843 = !DILocation(line: 4451, column: 2, scope: !6829)
!6844 = !DILocation(line: 4451, column: 2, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 4451, column: 2)
!6846 = !DILocation(line: 4453, column: 8, scope: !6829)
!6847 = !DILocation(line: 4453, column: 6, scope: !6829)
!6848 = !DILocation(line: 4455, column: 21, scope: !6829)
!6849 = !DILocation(line: 4455, column: 2, scope: !6829)
!6850 = !DILocation(line: 4457, column: 46, scope: !6829)
!6851 = !DILocation(line: 4457, column: 25, scope: !6829)
!6852 = !DILocation(line: 4457, column: 2, scope: !6829)
!6853 = !DILocation(line: 4459, column: 32, scope: !6829)
!6854 = !DILocation(line: 4459, column: 23, scope: !6829)
!6855 = !DILocation(line: 4459, column: 2, scope: !6829)
!6856 = !DILocation(line: 4460, column: 9, scope: !6837)
!6857 = !DILocation(line: 4460, column: 24, scope: !6837)
!6858 = !DILocation(line: 4460, column: 22, scope: !6837)
!6859 = !DILocation(line: 4460, column: 7, scope: !6837)
!6860 = !DILocation(line: 4460, column: 45, scope: !6836)
!6861 = !DILocation(line: 4460, column: 49, scope: !6836)
!6862 = !DILocation(line: 4460, column: 47, scope: !6836)
!6863 = !DILocation(line: 4460, column: 2, scope: !6837)
!6864 = !DILocation(line: 4461, column: 3, scope: !6835)
!6865 = !DILocation(line: 4461, column: 12, scope: !6835)
!6866 = !DILocation(line: 4463, column: 35, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 4463, column: 7)
!6868 = !DILocation(line: 4463, column: 26, scope: !6867)
!6869 = !DILocation(line: 4463, column: 41, scope: !6867)
!6870 = !DILocation(line: 4463, column: 16, scope: !6867)
!6871 = !DILocation(line: 4463, column: 14, scope: !6867)
!6872 = !DILocation(line: 4463, column: 52, scope: !6867)
!6873 = !DILocation(line: 4463, column: 7, scope: !6835)
!6874 = !DILocation(line: 4464, column: 34, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 4463, column: 61)
!6876 = !DILocation(line: 4464, column: 25, scope: !6875)
!6877 = !DILocation(line: 4464, column: 40, scope: !6875)
!6878 = !DILocation(line: 4464, column: 4, scope: !6875)
!6879 = !DILocation(line: 4465, column: 3, scope: !6875)
!6880 = !DILocation(line: 4466, column: 2, scope: !6836)
!6881 = !DILocation(line: 4466, column: 2, scope: !6835)
!6882 = !DILocation(line: 4460, column: 59, scope: !6836)
!6883 = !DILocation(line: 4460, column: 2, scope: !6836)
!6884 = distinct !{!6884, !6863, !6885, !3182}
!6885 = !DILocation(line: 4466, column: 2, scope: !6837)
!6886 = !DILocation(line: 4467, column: 31, scope: !6829)
!6887 = !DILocation(line: 4467, column: 22, scope: !6829)
!6888 = !DILocation(line: 4467, column: 2, scope: !6829)
!6889 = !DILocation(line: 4469, column: 45, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 4468, column: 30)
!6891 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 4468, column: 6)
!6892 = !DILocation(line: 4469, column: 36, scope: !6890)
!6893 = !DILocation(line: 4469, column: 3, scope: !6890)
!6894 = !DILocation(line: 4471, column: 39, scope: !6829)
!6895 = !DILocation(line: 4471, column: 30, scope: !6829)
!6896 = !DILocation(line: 4471, column: 2, scope: !6829)
!6897 = !DILocation(line: 4472, column: 33, scope: !6829)
!6898 = !DILocation(line: 4472, column: 24, scope: !6829)
!6899 = !DILocation(line: 4472, column: 2, scope: !6829)
!6900 = !DILocation(line: 4473, column: 30, scope: !6829)
!6901 = !DILocation(line: 4473, column: 21, scope: !6829)
!6902 = !DILocation(line: 4473, column: 2, scope: !6829)
!6903 = !DILocation(line: 4474, column: 1, scope: !6829)
!6904 = !DISubprogram(name: "tsd_postfork_child", scope: !145, file: !145, line: 170, type: !3590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6905 = !DISubprogram(name: "witness_postfork_child", scope: !19, file: !19, line: 177, type: !6710, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6906 = !DISubprogram(name: "stats_postfork_child", scope: !5996, file: !5996, line: 52, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6907 = !DISubprogram(name: "arena_postfork_child", scope: !3073, file: !3073, line: 119, type: !6732, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6908 = !DISubprogram(name: "prof_postfork_child", scope: !6729, file: !6729, line: 88, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6909 = !DISubprogram(name: "background_thread_postfork_child", scope: !6727, file: !6727, line: 21, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6910 = !DISubprogram(name: "malloc_mutex_postfork_child", scope: !65, file: !65, line: 143, type: !2904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6911 = !DISubprogram(name: "tcache_postfork_child", scope: !6724, file: !6724, line: 60, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6912 = !DISubprogram(name: "ctl_postfork_child", scope: !5872, file: !5872, line: 110, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6913 = distinct !DISubprogram(name: "malloc_init_a0", scope: !3, file: !3, line: 289, type: !5818, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!6914 = !DILocation(line: 290, column: 6, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 290, column: 6)
!6916 = !DILocation(line: 290, column: 6, scope: !6913)
!6917 = !DILocation(line: 291, column: 10, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 290, column: 64)
!6919 = !DILocation(line: 291, column: 3, scope: !6918)
!6920 = !DILocation(line: 293, column: 2, scope: !6913)
!6921 = !DILocation(line: 294, column: 1, scope: !6913)
!6922 = distinct !DISubprogram(name: "iallocztm", scope: !2572, file: !2572, line: 44, type: !6923, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6925)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!383, !391, !387, !726, !389, !740, !389, !594, !389}
!6925 = !{!6926, !6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934}
!6926 = !DILocalVariable(name: "tsdn", arg: 1, scope: !6922, file: !2572, line: 44, type: !391)
!6927 = !DILocalVariable(name: "size", arg: 2, scope: !6922, file: !2572, line: 44, type: !387)
!6928 = !DILocalVariable(name: "ind", arg: 3, scope: !6922, file: !2572, line: 44, type: !726)
!6929 = !DILocalVariable(name: "zero", arg: 4, scope: !6922, file: !2572, line: 44, type: !389)
!6930 = !DILocalVariable(name: "tcache", arg: 5, scope: !6922, file: !2572, line: 44, type: !740)
!6931 = !DILocalVariable(name: "is_internal", arg: 6, scope: !6922, file: !2572, line: 45, type: !389)
!6932 = !DILocalVariable(name: "arena", arg: 7, scope: !6922, file: !2572, line: 45, type: !594)
!6933 = !DILocalVariable(name: "slow_path", arg: 8, scope: !6922, file: !2572, line: 45, type: !389)
!6934 = !DILocalVariable(name: "ret", scope: !6922, file: !2572, line: 46, type: !383)
!6935 = !DILocation(line: 44, column: 19, scope: !6922)
!6936 = !DILocation(line: 44, column: 32, scope: !6922)
!6937 = !DILocation(line: 44, column: 46, scope: !6922)
!6938 = !DILocation(line: 44, column: 56, scope: !6922)
!6939 = !DILocation(line: 44, column: 72, scope: !6922)
!6940 = !DILocation(line: 45, column: 10, scope: !6922)
!6941 = !DILocation(line: 45, column: 32, scope: !6922)
!6942 = !DILocation(line: 45, column: 44, scope: !6922)
!6943 = !DILocation(line: 46, column: 2, scope: !6922)
!6944 = !DILocation(line: 46, column: 8, scope: !6922)
!6945 = !DILocation(line: 48, column: 2, scope: !6922)
!6946 = !DILocation(line: 48, column: 2, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6922, file: !2572, line: 48, column: 2)
!6948 = !DILocation(line: 49, column: 2, scope: !6922)
!6949 = !DILocation(line: 49, column: 2, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6922, file: !2572, line: 49, column: 2)
!6951 = !DILocation(line: 50, column: 17, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6922, file: !2572, line: 50, column: 6)
!6953 = !DILocation(line: 50, column: 7, scope: !6952)
!6954 = !DILocation(line: 50, column: 23, scope: !6952)
!6955 = !DILocation(line: 50, column: 60, scope: !6952)
!6956 = !DILocation(line: 50, column: 51, scope: !6952)
!6957 = !DILocation(line: 50, column: 26, scope: !6952)
!6958 = !DILocation(line: 50, column: 67, scope: !6952)
!6959 = !DILocation(line: 50, column: 6, scope: !6922)
!6960 = !DILocation(line: 51, column: 54, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6952, file: !2572, line: 50, column: 73)
!6962 = !DILocation(line: 51, column: 32, scope: !6961)
!6963 = !DILocation(line: 51, column: 3, scope: !6961)
!6964 = !DILocation(line: 53, column: 2, scope: !6961)
!6965 = !DILocation(line: 55, column: 21, scope: !6922)
!6966 = !DILocation(line: 55, column: 27, scope: !6922)
!6967 = !DILocation(line: 55, column: 34, scope: !6922)
!6968 = !DILocation(line: 55, column: 40, scope: !6922)
!6969 = !DILocation(line: 55, column: 45, scope: !6922)
!6970 = !DILocation(line: 55, column: 51, scope: !6922)
!6971 = !DILocation(line: 55, column: 59, scope: !6922)
!6972 = !DILocation(line: 55, column: 8, scope: !6922)
!6973 = !DILocation(line: 55, column: 6, scope: !6922)
!6974 = !DILocation(line: 56, column: 22, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6922, file: !2572, line: 56, column: 6)
!6976 = !DILocation(line: 56, column: 34, scope: !6975)
!6977 = !DILocation(line: 56, column: 37, scope: !6975)
!6978 = !DILocation(line: 56, column: 6, scope: !6922)
!6979 = !DILocation(line: 57, column: 30, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6975, file: !2572, line: 56, column: 58)
!6981 = !DILocation(line: 57, column: 36, scope: !6980)
!6982 = !DILocation(line: 57, column: 22, scope: !6980)
!6983 = !DILocation(line: 57, column: 50, scope: !6980)
!6984 = !DILocation(line: 57, column: 56, scope: !6980)
!6985 = !DILocation(line: 57, column: 42, scope: !6980)
!6986 = !DILocation(line: 57, column: 3, scope: !6980)
!6987 = !DILocation(line: 58, column: 2, scope: !6980)
!6988 = !DILocation(line: 59, column: 9, scope: !6922)
!6989 = !DILocation(line: 60, column: 1, scope: !6922)
!6990 = !DILocation(line: 59, column: 2, scope: !6922)
!6991 = distinct !DISubprogram(name: "malloc_init_hard_a0", scope: !3, file: !3, line: 1914, type: !5818, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6992)
!6992 = !{!6993}
!6993 = !DILocalVariable(name: "ret", scope: !6991, file: !3, line: 1915, type: !389)
!6994 = !DILocation(line: 1915, column: 2, scope: !6991)
!6995 = !DILocation(line: 1915, column: 7, scope: !6991)
!6996 = !DILocation(line: 1917, column: 2, scope: !6991)
!6997 = !DILocation(line: 1918, column: 8, scope: !6991)
!6998 = !DILocation(line: 1918, column: 6, scope: !6991)
!6999 = !DILocation(line: 1919, column: 2, scope: !6991)
!7000 = !DILocation(line: 1920, column: 9, scope: !6991)
!7001 = !DILocation(line: 1921, column: 1, scope: !6991)
!7002 = !DILocation(line: 1920, column: 2, scope: !6991)
!7003 = distinct !DISubprogram(name: "malloc_init_hard_a0_locked", scope: !3, file: !3, line: 1790, type: !5818, scopeLine: 1790, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7004)
!7004 = !{!7005, !7006, !7008}
!7005 = !DILocalVariable(name: "sc_data", scope: !7003, file: !3, line: 1795, type: !2133)
!7006 = !DILocalVariable(name: "bin_shard_sizes", scope: !7003, file: !3, line: 1806, type: !7007)
!7007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1152, elements: !733)
!7008 = !DILocalVariable(name: "hpa_shard_opts", scope: !7009, file: !3, line: 1900, type: !1266)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1899, column: 22)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1899, column: 13)
!7011 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1890, column: 6)
!7012 = !DILocation(line: 1791, column: 23, scope: !7003)
!7013 = !DILocation(line: 1791, column: 21, scope: !7003)
!7014 = !DILocation(line: 1795, column: 2, scope: !7003)
!7015 = !DILocation(line: 1795, column: 12, scope: !7003)
!7016 = !DILocation(line: 1805, column: 2, scope: !7003)
!7017 = !DILocation(line: 1806, column: 2, scope: !7003)
!7018 = !DILocation(line: 1806, column: 11, scope: !7003)
!7019 = !DILocation(line: 1807, column: 23, scope: !7003)
!7020 = !DILocation(line: 1807, column: 2, scope: !7003)
!7021 = !DILocation(line: 1816, column: 29, scope: !7003)
!7022 = !DILocation(line: 1816, column: 2, scope: !7003)
!7023 = !DILocation(line: 1817, column: 11, scope: !7003)
!7024 = !DILocation(line: 1817, column: 2, scope: !7003)
!7025 = !DILocation(line: 1818, column: 20, scope: !7003)
!7026 = !DILocation(line: 1818, column: 2, scope: !7003)
!7027 = !DILocation(line: 1819, column: 26, scope: !7003)
!7028 = !DILocation(line: 1819, column: 2, scope: !7003)
!7029 = !DILocation(line: 1821, column: 6, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1821, column: 6)
!7031 = !DILocation(line: 1821, column: 6, scope: !7003)
!7032 = !DILocation(line: 1823, column: 7, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1823, column: 7)
!7034 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 1821, column: 23)
!7035 = !DILocation(line: 1823, column: 34, scope: !7033)
!7036 = !DILocation(line: 1823, column: 7, scope: !7034)
!7037 = !DILocation(line: 1824, column: 4, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1823, column: 40)
!7039 = !DILocation(line: 1825, column: 8, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 1825, column: 8)
!7041 = !DILocation(line: 1825, column: 8, scope: !7038)
!7042 = !DILocation(line: 1826, column: 5, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 1825, column: 19)
!7044 = !DILocation(line: 1828, column: 3, scope: !7038)
!7045 = !DILocation(line: 1829, column: 2, scope: !7034)
!7046 = !DILocation(line: 1831, column: 6, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1831, column: 6)
!7048 = !DILocation(line: 1831, column: 6, scope: !7003)
!7049 = !DILocation(line: 1832, column: 3, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 1831, column: 20)
!7051 = !DILocation(line: 1834, column: 6, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1834, column: 6)
!7053 = !DILocation(line: 1834, column: 6, scope: !7003)
!7054 = !DILocation(line: 1835, column: 3, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 1834, column: 20)
!7056 = !DILocation(line: 1837, column: 6, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1837, column: 6)
!7058 = !DILocation(line: 1837, column: 6, scope: !7003)
!7059 = !DILocation(line: 1838, column: 3, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 1837, column: 28)
!7061 = !DILocation(line: 1841, column: 36, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1841, column: 6)
!7063 = !DILocation(line: 1841, column: 6, scope: !7062)
!7064 = !DILocation(line: 1841, column: 6, scope: !7003)
!7065 = !DILocation(line: 1842, column: 3, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 1841, column: 65)
!7067 = !DILocation(line: 1844, column: 6, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1844, column: 6)
!7069 = !DILocation(line: 1844, column: 6, scope: !7003)
!7070 = !DILocation(line: 1845, column: 3, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 1844, column: 21)
!7072 = !DILocation(line: 1847, column: 6, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1847, column: 6)
!7074 = !DILocation(line: 1847, column: 6, scope: !7003)
!7075 = !DILocation(line: 1848, column: 3, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 1847, column: 18)
!7077 = !DILocation(line: 1853, column: 6, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1853, column: 6)
!7079 = !DILocation(line: 1853, column: 14, scope: !7078)
!7080 = !DILocation(line: 1853, column: 18, scope: !7078)
!7081 = !DILocation(line: 1853, column: 6, scope: !7003)
!7082 = !DILocation(line: 1856, column: 7, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1853, column: 35)
!7084 = !DILocation(line: 1854, column: 3, scope: !7083)
!7085 = !DILocation(line: 1857, column: 7, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1857, column: 7)
!7087 = !DILocation(line: 1857, column: 7, scope: !7083)
!7088 = !DILocation(line: 1858, column: 4, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1857, column: 23)
!7090 = !DILocation(line: 1859, column: 3, scope: !7089)
!7091 = !DILocation(line: 1860, column: 12, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1859, column: 10)
!7093 = !DILocation(line: 1862, column: 2, scope: !7083)
!7094 = !DILocation(line: 1863, column: 27, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1863, column: 6)
!7096 = !DILocation(line: 1863, column: 36, scope: !7095)
!7097 = !DILocation(line: 1863, column: 6, scope: !7095)
!7098 = !DILocation(line: 1863, column: 6, scope: !7003)
!7099 = !DILocation(line: 1864, column: 3, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 1863, column: 46)
!7101 = !DILocation(line: 1866, column: 29, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1866, column: 6)
!7103 = !DILocation(line: 1866, column: 6, scope: !7102)
!7104 = !DILocation(line: 1866, column: 6, scope: !7003)
!7105 = !DILocation(line: 1867, column: 3, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1866, column: 39)
!7107 = !DILocation(line: 1869, column: 6, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1869, column: 6)
!7109 = !DILocation(line: 1869, column: 6, scope: !7003)
!7110 = !DILocation(line: 1871, column: 3, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1870, column: 36)
!7112 = !DILocation(line: 1873, column: 2, scope: !7003)
!7113 = !DILocation(line: 1878, column: 15, scope: !7003)
!7114 = !DILocation(line: 1879, column: 22, scope: !7003)
!7115 = !DILocation(line: 1879, column: 35, scope: !7003)
!7116 = !DILocation(line: 1879, column: 20, scope: !7003)
!7117 = !DILocation(line: 1880, column: 40, scope: !7003)
!7118 = !DILocation(line: 1880, column: 38, scope: !7003)
!7119 = !DILocation(line: 1880, column: 2, scope: !7003)
!7120 = !DILocation(line: 1885, column: 6, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1885, column: 6)
!7122 = !DILocation(line: 1885, column: 54, scope: !7121)
!7123 = !DILocation(line: 1885, column: 6, scope: !7003)
!7124 = !DILocation(line: 1886, column: 3, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1885, column: 63)
!7126 = !DILocation(line: 1888, column: 7, scope: !7003)
!7127 = !DILocation(line: 1888, column: 5, scope: !7003)
!7128 = !DILocation(line: 1890, column: 6, scope: !7011)
!7129 = !DILocation(line: 1890, column: 14, scope: !7011)
!7130 = !DILocation(line: 1890, column: 18, scope: !7011)
!7131 = !DILocation(line: 1890, column: 6, scope: !7003)
!7132 = !DILocation(line: 1893, column: 7, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1890, column: 35)
!7134 = !DILocation(line: 1891, column: 3, scope: !7133)
!7135 = !DILocation(line: 1894, column: 7, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 1894, column: 7)
!7137 = !DILocation(line: 1894, column: 7, scope: !7133)
!7138 = !DILocation(line: 1895, column: 4, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 1894, column: 23)
!7140 = !DILocation(line: 1896, column: 3, scope: !7139)
!7141 = !DILocation(line: 1897, column: 12, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 1896, column: 10)
!7143 = !DILocation(line: 1899, column: 2, scope: !7133)
!7144 = !DILocation(line: 1899, column: 13, scope: !7010)
!7145 = !DILocation(line: 1899, column: 13, scope: !7011)
!7146 = !DILocation(line: 1900, column: 3, scope: !7009)
!7147 = !DILocation(line: 1900, column: 20, scope: !7009)
!7148 = !DILocation(line: 1900, column: 37, scope: !7009)
!7149 = !{i64 0, i64 8, !2663, i64 8, i64 8, !2663, i64 16, i64 4, !2791, i64 20, i64 1, !2695, i64 24, i64 8, !2663, i64 32, i64 8, !2663}
!7150 = !DILocation(line: 1901, column: 37, scope: !7009)
!7151 = !DILocation(line: 1901, column: 18, scope: !7009)
!7152 = !DILocation(line: 1901, column: 35, scope: !7009)
!7153 = !{!3583, !2696, i64 20}
!7154 = !DILocation(line: 1902, column: 39, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 1902, column: 7)
!7156 = !DILocation(line: 1902, column: 43, scope: !7155)
!7157 = !DILocation(line: 1902, column: 7, scope: !7155)
!7158 = !DILocation(line: 1902, column: 7, scope: !7009)
!7159 = !DILocation(line: 1904, column: 4, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1903, column: 44)
!7161 = !DILocation(line: 1906, column: 2, scope: !7010)
!7162 = !DILocation(line: 1906, column: 2, scope: !7009)
!7163 = !DILocation(line: 1908, column: 20, scope: !7003)
!7164 = !DILocation(line: 1910, column: 2, scope: !7003)
!7165 = !DILocation(line: 1911, column: 1, scope: !7003)
!7166 = !DISubprogram(name: "pthread_self", scope: !7167, file: !7167, line: 273, type: !7168, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7167 = !DIFile(filename: "/usr/include/pthread.h", directory: "", checksumkind: CSK_MD5, checksum: "5205981c6f80cc3dc1e81231df63d8ef")
!7168 = !DISubroutineType(types: !7169)
!7169 = !{!2107}
!7170 = !DISubprogram(name: "sc_boot", scope: !2134, file: !2134, line: 355, type: !7171, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7171 = !DISubroutineType(types: !7172)
!7172 = !{null, !2132}
!7173 = !DISubprogram(name: "bin_shard_sizes_boot", scope: !1301, file: !1301, line: 51, type: !7174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{null, !2163}
!7176 = distinct !DISubprogram(name: "malloc_conf_init", scope: !3, file: !3, line: 1744, type: !7177, scopeLine: 1744, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7179)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{null, !2132, !2163}
!7179 = !{!7180, !7181, !7182, !7183}
!7180 = !DILocalVariable(name: "sc_data", arg: 1, scope: !7176, file: !3, line: 1744, type: !2132)
!7181 = !DILocalVariable(name: "bin_shard_sizes", arg: 2, scope: !7176, file: !3, line: 1744, type: !2163)
!7182 = !DILocalVariable(name: "opts_cache", scope: !7176, file: !3, line: 1745, type: !2352)
!7183 = !DILocalVariable(name: "buf", scope: !7176, file: !3, line: 1747, type: !7184)
!7184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 32776, elements: !7185)
!7185 = !{!7186}
!7186 = !DISubrange(count: 4097)
!7187 = !DILocation(line: 1744, column: 29, scope: !7176)
!7188 = !DILocation(line: 1744, column: 47, scope: !7176)
!7189 = !DILocation(line: 1745, column: 2, scope: !7176)
!7190 = !DILocation(line: 1745, column: 14, scope: !7176)
!7191 = !DILocation(line: 1747, column: 2, scope: !7176)
!7192 = !DILocation(line: 1747, column: 7, scope: !7176)
!7193 = !DILocation(line: 1750, column: 44, scope: !7176)
!7194 = !DILocation(line: 1750, column: 56, scope: !7176)
!7195 = !DILocation(line: 1750, column: 2, scope: !7176)
!7196 = !DILocation(line: 1751, column: 26, scope: !7176)
!7197 = !DILocation(line: 1751, column: 35, scope: !7176)
!7198 = !DILocation(line: 1751, column: 59, scope: !7176)
!7199 = !DILocation(line: 1751, column: 2, scope: !7176)
!7200 = !DILocation(line: 1753, column: 6, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 1753, column: 6)
!7202 = !DILocation(line: 1753, column: 6, scope: !7176)
!7203 = !DILocation(line: 1755, column: 7, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 1755, column: 7)
!7205 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 1753, column: 37)
!7206 = !DILocation(line: 1755, column: 7, scope: !7205)
!7207 = !DILocation(line: 1756, column: 4, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1755, column: 23)
!7209 = !DILocation(line: 1757, column: 3, scope: !7208)
!7210 = !DILocation(line: 1758, column: 2, scope: !7205)
!7211 = !DILocation(line: 1759, column: 1, scope: !7176)
!7212 = !DISubprogram(name: "san_init", scope: !2550, file: !2550, line: 37, type: !7213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7213 = !DISubroutineType(types: !7214)
!7214 = !{null, !1132}
!7215 = !DISubprogram(name: "sz_boot", scope: !727, file: !727, line: 54, type: !7216, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{null, !7218, !389}
!7218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7219, size: 64)
!7219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2133)
!7220 = !DISubprogram(name: "bin_info_boot", scope: !7221, file: !7221, line: 48, type: !7177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7221 = !DIFile(filename: "include/jemalloc/internal/bin_info.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "c9350179fce79907124aafe5ac6a7f64")
!7222 = !DISubprogram(name: "atexit", scope: !7223, file: !7223, line: 602, type: !7224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7223 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "02258fad21adf111bb9df9825e61954a")
!7224 = !DISubroutineType(types: !7225)
!7225 = !{!390, !7226}
!7226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6560, size: 64)
!7227 = distinct !DISubprogram(name: "stats_print_atexit", scope: !3, file: !3, line: 636, type: !6560, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7228)
!7228 = !{!7229, !7232, !7233, !7234, !7238}
!7229 = !DILocalVariable(name: "tsdn", scope: !7230, file: !3, line: 638, type: !391)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 637, column: 20)
!7231 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 637, column: 6)
!7232 = !DILocalVariable(name: "narenas", scope: !7230, file: !3, line: 639, type: !7)
!7233 = !DILocalVariable(name: "i", scope: !7230, file: !3, line: 639, type: !7)
!7234 = !DILocalVariable(name: "arena", scope: !7235, file: !3, line: 651, type: !594)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 650, column: 64)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 650, column: 3)
!7237 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 650, column: 3)
!7238 = !DILocalVariable(name: "tcache_slow", scope: !7239, file: !3, line: 653, type: !684)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 652, column: 23)
!7240 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 652, column: 8)
!7241 = !DILocation(line: 638, column: 3, scope: !7230)
!7242 = !DILocation(line: 638, column: 11, scope: !7230)
!7243 = !DILocation(line: 639, column: 3, scope: !7230)
!7244 = !DILocation(line: 639, column: 12, scope: !7230)
!7245 = !DILocation(line: 639, column: 21, scope: !7230)
!7246 = !DILocation(line: 641, column: 10, scope: !7230)
!7247 = !DILocation(line: 641, column: 8, scope: !7230)
!7248 = !DILocation(line: 650, column: 10, scope: !7237)
!7249 = !DILocation(line: 650, column: 25, scope: !7237)
!7250 = !DILocation(line: 650, column: 23, scope: !7237)
!7251 = !DILocation(line: 650, column: 8, scope: !7237)
!7252 = !DILocation(line: 650, column: 46, scope: !7236)
!7253 = !DILocation(line: 650, column: 50, scope: !7236)
!7254 = !DILocation(line: 650, column: 48, scope: !7236)
!7255 = !DILocation(line: 650, column: 3, scope: !7237)
!7256 = !DILocation(line: 651, column: 4, scope: !7235)
!7257 = !DILocation(line: 651, column: 13, scope: !7235)
!7258 = !DILocation(line: 651, column: 31, scope: !7235)
!7259 = !DILocation(line: 651, column: 37, scope: !7235)
!7260 = !DILocation(line: 651, column: 21, scope: !7235)
!7261 = !DILocation(line: 652, column: 8, scope: !7240)
!7262 = !DILocation(line: 652, column: 14, scope: !7240)
!7263 = !DILocation(line: 652, column: 8, scope: !7235)
!7264 = !DILocation(line: 653, column: 5, scope: !7239)
!7265 = !DILocation(line: 653, column: 20, scope: !7239)
!7266 = !DILocation(line: 655, column: 23, scope: !7239)
!7267 = !DILocation(line: 655, column: 30, scope: !7239)
!7268 = !DILocation(line: 655, column: 37, scope: !7239)
!7269 = !DILocation(line: 655, column: 5, scope: !7239)
!7270 = !DILocation(line: 656, column: 5, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 656, column: 5)
!7272 = !{!3556, !2659, i64 10392}
!7273 = !DILocation(line: 656, column: 5, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 656, column: 5)
!7275 = !DILocation(line: 658, column: 25, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 657, column: 15)
!7277 = !DILocation(line: 659, column: 10, scope: !7276)
!7278 = !DILocation(line: 659, column: 23, scope: !7276)
!7279 = !{!7280, !2659, i64 168}
!7280 = !{!"tcache_slow_s", !7281, i64 0, !7282, i64 16, !2659, i64 40, !2792, i64 48, !2660, i64 52, !2660, i64 88, !2660, i64 124, !2659, i64 160, !2659, i64 168}
!7281 = !{!"", !2659, i64 0, !2659, i64 8}
!7282 = !{!"cache_bin_array_descriptor_s", !7281, i64 0, !2659, i64 16}
!7283 = !DILocation(line: 659, column: 31, scope: !7276)
!7284 = !DILocation(line: 658, column: 6, scope: !7276)
!7285 = !DILocation(line: 660, column: 5, scope: !7276)
!7286 = !{!7280, !2659, i64 0}
!7287 = distinct !{!7287, !7270, !7288, !3182}
!7288 = !DILocation(line: 660, column: 5, scope: !7271)
!7289 = !DILocation(line: 661, column: 25, scope: !7239)
!7290 = !DILocation(line: 662, column: 10, scope: !7239)
!7291 = !DILocation(line: 662, column: 17, scope: !7239)
!7292 = !DILocation(line: 661, column: 5, scope: !7239)
!7293 = !DILocation(line: 663, column: 4, scope: !7240)
!7294 = !DILocation(line: 663, column: 4, scope: !7239)
!7295 = !DILocation(line: 664, column: 3, scope: !7236)
!7296 = !DILocation(line: 664, column: 3, scope: !7235)
!7297 = !DILocation(line: 650, column: 60, scope: !7236)
!7298 = !DILocation(line: 650, column: 3, scope: !7236)
!7299 = distinct !{!7299, !7255, !7300, !3182}
!7300 = !DILocation(line: 664, column: 3, scope: !7237)
!7301 = !DILocation(line: 665, column: 2, scope: !7231)
!7302 = !DILocation(line: 666, column: 2, scope: !7227)
!7303 = !DILocation(line: 667, column: 1, scope: !7227)
!7304 = !DISubprogram(name: "malloc_write", scope: !7305, file: !7305, line: 49, type: !7306, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7305 = !DIFile(filename: "include/jemalloc/internal/malloc_io.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "b00759725e701eb88c0743981c1336d6")
!7306 = !DISubroutineType(types: !7307)
!7307 = !{null, !508}
!7308 = !DISubprogram(name: "abort", scope: !7223, file: !7223, line: 598, type: !6560, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!7309 = !DISubprogram(name: "stats_boot", scope: !5996, file: !5996, line: 49, type: !5818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7310 = !DISubprogram(name: "pages_boot", scope: !137, file: !137, line: 114, type: !5818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7311 = !DISubprogram(name: "base_boot", scope: !123, file: !123, line: 108, type: !7312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!389, !391}
!7314 = !DISubprogram(name: "emap_init", scope: !1072, file: !1072, line: 35, type: !7315, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{!389, !1070, !904, !389}
!7317 = !DISubprogram(name: "b0get", scope: !123, file: !123, line: 93, type: !7318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7318 = !DISubroutineType(types: !7319)
!7319 = !{!904}
!7320 = !DISubprogram(name: "extent_boot", scope: !7321, file: !7321, line: 61, type: !5818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7321 = !DIFile(filename: "include/jemalloc/internal/extent.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "18200c5ebae2e4cccbbb939f8b6abe50")
!7322 = !DISubprogram(name: "ctl_boot", scope: !5872, file: !5872, line: 107, type: !5818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7323 = !DISubprogram(name: "hpa_supported", scope: !896, file: !896, line: 151, type: !5818, spFlags: DISPFlagOptimized)
!7324 = !DISubprogram(name: "malloc_printf", scope: !7305, file: !7305, line: 67, type: !7325, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{null, !508, null}
!7327 = distinct !DISubprogram(name: "malloc_abort_invalid_conf", scope: !3, file: !3, line: 940, type: !6560, scopeLine: 940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7328 = !DILocation(line: 941, column: 2, scope: !7327)
!7329 = !DILocation(line: 941, column: 2, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 941, column: 2)
!7331 = !DILocation(line: 942, column: 2, scope: !7327)
!7332 = !DILocation(line: 944, column: 2, scope: !7327)
!7333 = !DISubprogram(name: "arena_boot", scope: !3073, file: !3073, line: 108, type: !7334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{!389, !2132, !904, !389}
!7336 = !DISubprogram(name: "tcache_boot", scope: !6724, file: !6724, line: 55, type: !7337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{!389, !391, !904}
!7339 = !DISubprogram(name: "malloc_mutex_init", scope: !65, file: !65, line: 139, type: !7340, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!389, !430, !508, !511, !527}
!7342 = !DISubprogram(name: "hook_boot", scope: !99, file: !99, line: 146, type: !5818, spFlags: DISPFlagOptimized)
!7343 = distinct !DISubprogram(name: "background_thread_enabled", scope: !7344, file: !7344, line: 5, type: !5818, scopeLine: 5, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!7344 = !DIFile(filename: "include/jemalloc/internal/background_thread_inlines.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "c73e2d004f9398aad0fe3223d3ced720")
!7345 = !DILocation(line: 6, column: 9, scope: !7343)
!7346 = !DILocation(line: 6, column: 2, scope: !7343)
!7347 = !DISubprogram(name: "pa_shard_enable_hpa", scope: !631, file: !631, line: 146, type: !7348, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!389, !391, !7350, !7351, !7353}
!7350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!7351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7352, size: 64)
!7352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!7355 = !DILocation(line: 1066, column: 36, scope: !2129)
!7356 = !DILocation(line: 1066, column: 54, scope: !2129)
!7357 = !DILocation(line: 1067, column: 10, scope: !2129)
!7358 = !DILocation(line: 1067, column: 36, scope: !2129)
!7359 = !DILocation(line: 1068, column: 10, scope: !2129)
!7360 = !DILocation(line: 1078, column: 2, scope: !2129)
!7361 = !DILocation(line: 1078, column: 11, scope: !2129)
!7362 = !DILocation(line: 1079, column: 2, scope: !2129)
!7363 = !DILocation(line: 1079, column: 14, scope: !2129)
!7364 = !DILocation(line: 1079, column: 21, scope: !2129)
!7365 = !DILocation(line: 1079, column: 25, scope: !2129)
!7366 = !DILocation(line: 1080, column: 2, scope: !2129)
!7367 = !DILocation(line: 1080, column: 9, scope: !2129)
!7368 = !DILocation(line: 1080, column: 15, scope: !2129)
!7369 = !DILocation(line: 1082, column: 9, scope: !2181)
!7370 = !DILocation(line: 1082, column: 7, scope: !2181)
!7371 = !DILocation(line: 1082, column: 14, scope: !2180)
!7372 = !DILocation(line: 1082, column: 16, scope: !2180)
!7373 = !DILocation(line: 1082, column: 2, scope: !2181)
!7374 = !DILocation(line: 1084, column: 7, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !2179, file: !3, line: 1084, column: 7)
!7376 = !DILocation(line: 1084, column: 7, scope: !2179)
!7377 = !DILocation(line: 1085, column: 39, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 1084, column: 21)
!7379 = !DILocation(line: 1085, column: 42, scope: !7378)
!7380 = !DILocation(line: 1085, column: 20, scope: !7378)
!7381 = !DILocation(line: 1085, column: 4, scope: !7378)
!7382 = !DILocation(line: 1085, column: 15, scope: !7378)
!7383 = !DILocation(line: 1085, column: 18, scope: !7378)
!7384 = !DILocation(line: 1086, column: 3, scope: !7378)
!7385 = !DILocation(line: 1087, column: 10, scope: !2179)
!7386 = !DILocation(line: 1087, column: 21, scope: !2179)
!7387 = !DILocation(line: 1087, column: 8, scope: !2179)
!7388 = !DILocation(line: 1088, column: 8, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !2179, file: !3, line: 1088, column: 7)
!7390 = !DILocation(line: 1088, column: 21, scope: !7389)
!7391 = !DILocation(line: 1088, column: 24, scope: !7389)
!7392 = !DILocation(line: 1088, column: 7, scope: !2179)
!7393 = !DILocation(line: 1091, column: 8, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 1088, column: 42)
!7395 = !DILocation(line: 1091, column: 10, scope: !7394)
!7396 = !DILocation(line: 1091, column: 28, scope: !7394)
!7397 = !DILocation(line: 1091, column: 15, scope: !7394)
!7398 = !DILocation(line: 1091, column: 32, scope: !7394)
!7399 = !DILocation(line: 1091, column: 37, scope: !7394)
!7400 = !DILocation(line: 1091, column: 47, scope: !7394)
!7401 = !DILocation(line: 1089, column: 4, scope: !7394)
!7402 = !DILocation(line: 1092, column: 3, scope: !7394)
!7403 = !DILocation(line: 1093, column: 7, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !2179, file: !3, line: 1093, column: 7)
!7405 = !DILocation(line: 1093, column: 12, scope: !7404)
!7406 = !DILocation(line: 1093, column: 7, scope: !2179)
!7407 = !DILocation(line: 1094, column: 4, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 1093, column: 21)
!7409 = !DILocation(line: 1097, column: 3, scope: !2179)
!7410 = !DILocation(line: 1097, column: 11, scope: !2179)
!7411 = !DILocation(line: 1097, column: 10, scope: !2179)
!7412 = !DILocation(line: 1097, column: 16, scope: !2179)
!7413 = !DILocation(line: 1097, column: 24, scope: !2179)
!7414 = !DILocation(line: 1097, column: 28, scope: !2179)
!7415 = !DILocation(line: 1097, column: 27, scope: !2179)
!7416 = !DILocation(line: 0, scope: !2179)
!7417 = !DILocation(line: 1214, column: 4, scope: !2178)
!7418 = !DILocation(line: 1214, column: 9, scope: !2178)
!7419 = !DILocation(line: 1216, column: 4, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1216, column: 4)
!7421 = !DILocation(line: 1216, column: 4, scope: !2178)
!7422 = !DILocation(line: 1216, column: 4, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 1216, column: 4)
!7424 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1216, column: 4)
!7425 = !DILocation(line: 1216, column: 4, scope: !7424)
!7426 = !DILocation(line: 1216, column: 4, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 1216, column: 4)
!7428 = !DILocation(line: 1216, column: 4, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 1216, column: 4)
!7430 = !DILocation(line: 1216, column: 4, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1216, column: 4)
!7432 = !DILocation(line: 1216, column: 4, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 1216, column: 4)
!7434 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1216, column: 4)
!7435 = !DILocation(line: 1216, column: 4, scope: !7434)
!7436 = !DILocation(line: 1216, column: 4, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 1216, column: 4)
!7438 = !DILocation(line: 1216, column: 4, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 1216, column: 4)
!7440 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 1216, column: 4)
!7441 = !DILocation(line: 1216, column: 4, scope: !7440)
!7442 = !DILocation(line: 1216, column: 4, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 1216, column: 4)
!7444 = distinct !{!7444, !7409, !7445, !3182}
!7445 = !DILocation(line: 1724, column: 3, scope: !2179)
!7446 = !DILocation(line: 1217, column: 8, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1217, column: 8)
!7448 = !DILocation(line: 1217, column: 8, scope: !2178)
!7449 = !DILocation(line: 1218, column: 5, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 1217, column: 22)
!7451 = !DILocation(line: 1221, column: 4, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1221, column: 4)
!7453 = !DILocation(line: 1221, column: 4, scope: !2178)
!7454 = !DILocation(line: 1221, column: 4, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 1221, column: 4)
!7456 = distinct !DILexicalBlock(scope: !7452, file: !3, line: 1221, column: 4)
!7457 = !DILocation(line: 1221, column: 4, scope: !7456)
!7458 = !DILocation(line: 1221, column: 4, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 1221, column: 4)
!7460 = !DILocation(line: 1221, column: 4, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 1221, column: 4)
!7462 = !DILocation(line: 1221, column: 4, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1221, column: 4)
!7464 = !DILocation(line: 1221, column: 4, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 1221, column: 4)
!7466 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1221, column: 4)
!7467 = !DILocation(line: 1221, column: 4, scope: !7466)
!7468 = !DILocation(line: 1221, column: 4, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1221, column: 4)
!7470 = !DILocation(line: 1221, column: 4, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 1221, column: 4)
!7472 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 1221, column: 4)
!7473 = !DILocation(line: 1221, column: 4, scope: !7472)
!7474 = !DILocation(line: 1221, column: 4, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1221, column: 4)
!7476 = !DILocation(line: 1222, column: 4, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1222, column: 4)
!7478 = !DILocation(line: 1222, column: 4, scope: !2178)
!7479 = !DILocation(line: 1222, column: 4, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 1222, column: 4)
!7481 = distinct !DILexicalBlock(scope: !7477, file: !3, line: 1222, column: 4)
!7482 = !DILocation(line: 1222, column: 4, scope: !7481)
!7483 = !DILocation(line: 1222, column: 4, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1222, column: 4)
!7485 = !DILocation(line: 1222, column: 4, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1222, column: 4)
!7487 = !DILocation(line: 1222, column: 4, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 1222, column: 4)
!7489 = !DILocation(line: 1222, column: 4, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 1222, column: 4)
!7491 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 1222, column: 4)
!7492 = !DILocation(line: 1222, column: 4, scope: !7491)
!7493 = !DILocation(line: 1222, column: 4, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 1222, column: 4)
!7495 = !DILocation(line: 1222, column: 4, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 1222, column: 4)
!7497 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 1222, column: 4)
!7498 = !DILocation(line: 1222, column: 4, scope: !7497)
!7499 = !DILocation(line: 1222, column: 4, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 1222, column: 4)
!7501 = !DILocation(line: 1223, column: 4, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1223, column: 4)
!7503 = !DILocation(line: 1223, column: 4, scope: !2178)
!7504 = !DILocation(line: 1223, column: 4, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 1223, column: 4)
!7506 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 1223, column: 4)
!7507 = !DILocation(line: 1223, column: 4, scope: !7506)
!7508 = !DILocation(line: 1223, column: 4, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 1223, column: 4)
!7510 = !DILocation(line: 1223, column: 4, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 1223, column: 4)
!7512 = !DILocation(line: 1223, column: 4, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 1223, column: 4)
!7514 = !DILocation(line: 1223, column: 4, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 1223, column: 4)
!7516 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 1223, column: 4)
!7517 = !DILocation(line: 1223, column: 4, scope: !7516)
!7518 = !DILocation(line: 1223, column: 4, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 1223, column: 4)
!7520 = !DILocation(line: 1223, column: 4, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 1223, column: 4)
!7522 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 1223, column: 4)
!7523 = !DILocation(line: 1223, column: 4, scope: !7522)
!7524 = !DILocation(line: 1223, column: 4, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 1223, column: 4)
!7526 = !DILocation(line: 1224, column: 32, scope: !2184)
!7527 = !DILocation(line: 1224, column: 35, scope: !2184)
!7528 = !DILocation(line: 1224, column: 8, scope: !2184)
!7529 = !DILocation(line: 1224, column: 41, scope: !2184)
!7530 = !DILocation(line: 1224, column: 8, scope: !2178)
!7531 = !DILocation(line: 1225, column: 5, scope: !2183)
!7532 = !DILocation(line: 1225, column: 9, scope: !2183)
!7533 = !DILocation(line: 1226, column: 5, scope: !2183)
!7534 = !DILocation(line: 1226, column: 10, scope: !2183)
!7535 = !DILocation(line: 1227, column: 12, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 1227, column: 5)
!7537 = !DILocation(line: 1227, column: 10, scope: !7536)
!7538 = !DILocation(line: 1227, column: 17, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 1227, column: 5)
!7540 = !DILocation(line: 1227, column: 19, scope: !7539)
!7541 = !DILocation(line: 1227, column: 5, scope: !7536)
!7542 = !DILocation(line: 1228, column: 42, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 1228, column: 10)
!7544 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 1227, column: 51)
!7545 = !DILocation(line: 1228, column: 18, scope: !7543)
!7546 = !DILocation(line: 1229, column: 10, scope: !7543)
!7547 = !DILocation(line: 1229, column: 13, scope: !7543)
!7548 = !DILocation(line: 1228, column: 10, scope: !7543)
!7549 = !DILocation(line: 1229, column: 19, scope: !7543)
!7550 = !DILocation(line: 1228, column: 10, scope: !7544)
!7551 = !DILocation(line: 1230, column: 26, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 1229, column: 25)
!7553 = !DILocation(line: 1230, column: 24, scope: !7552)
!7554 = !DILocation(line: 1231, column: 13, scope: !7552)
!7555 = !DILocation(line: 1232, column: 7, scope: !7552)
!7556 = !DILocation(line: 1234, column: 5, scope: !7544)
!7557 = !DILocation(line: 1227, column: 47, scope: !7539)
!7558 = !DILocation(line: 1227, column: 5, scope: !7539)
!7559 = distinct !{!7559, !7541, !7560, !3182}
!7560 = !DILocation(line: 1234, column: 5, scope: !7536)
!7561 = !DILocation(line: 1235, column: 10, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 1235, column: 9)
!7563 = !DILocation(line: 1235, column: 9, scope: !2183)
!7564 = !DILocation(line: 1236, column: 6, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 1236, column: 6)
!7566 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 1235, column: 17)
!7567 = !DILocation(line: 1236, column: 6, scope: !7566)
!7568 = !DILocation(line: 1236, column: 6, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1236, column: 6)
!7570 = !DILocation(line: 1238, column: 5, scope: !7566)
!7571 = !DILocation(line: 1239, column: 5, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 1239, column: 5)
!7573 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 1239, column: 5)
!7574 = !DILocation(line: 1239, column: 5, scope: !7573)
!7575 = !DILocation(line: 1239, column: 5, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 1239, column: 5)
!7577 = !DILocation(line: 1240, column: 4, scope: !2184)
!7578 = !DILocation(line: 1241, column: 4, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1241, column: 4)
!7580 = !DILocation(line: 1241, column: 4, scope: !2178)
!7581 = !DILocation(line: 1241, column: 4, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 1241, column: 4)
!7583 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1241, column: 4)
!7584 = !DILocation(line: 1241, column: 4, scope: !7583)
!7585 = !DILocation(line: 1241, column: 4, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 1241, column: 4)
!7587 = !DILocation(line: 1241, column: 4, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 1241, column: 4)
!7589 = !DILocation(line: 1241, column: 4, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 1241, column: 4)
!7591 = !DILocation(line: 1241, column: 4, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 1241, column: 4)
!7593 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 1241, column: 4)
!7594 = !DILocation(line: 1241, column: 4, scope: !7593)
!7595 = !DILocation(line: 1241, column: 4, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 1241, column: 4)
!7597 = !DILocation(line: 1241, column: 4, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 1241, column: 4)
!7599 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 1241, column: 4)
!7600 = !DILocation(line: 1241, column: 4, scope: !7599)
!7601 = !DILocation(line: 1241, column: 4, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 1241, column: 4)
!7603 = !DILocation(line: 1242, column: 23, scope: !2188)
!7604 = !DILocation(line: 1242, column: 26, scope: !2188)
!7605 = !DILocation(line: 1242, column: 8, scope: !2188)
!7606 = !DILocation(line: 1242, column: 32, scope: !2188)
!7607 = !DILocation(line: 1242, column: 8, scope: !2178)
!7608 = !DILocation(line: 1243, column: 5, scope: !2187)
!7609 = !DILocation(line: 1243, column: 9, scope: !2187)
!7610 = !DILocation(line: 1244, column: 5, scope: !2187)
!7611 = !DILocation(line: 1244, column: 10, scope: !2187)
!7612 = !DILocation(line: 1245, column: 12, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 1245, column: 5)
!7614 = !DILocation(line: 1245, column: 10, scope: !7613)
!7615 = !DILocation(line: 1245, column: 17, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 1245, column: 5)
!7617 = !DILocation(line: 1245, column: 19, scope: !7616)
!7618 = !DILocation(line: 1245, column: 5, scope: !7613)
!7619 = !DILocation(line: 1246, column: 33, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 1246, column: 10)
!7621 = distinct !DILexicalBlock(scope: !7616, file: !3, line: 1245, column: 42)
!7622 = !DILocation(line: 1246, column: 18, scope: !7620)
!7623 = !DILocation(line: 1246, column: 37, scope: !7620)
!7624 = !DILocation(line: 1246, column: 40, scope: !7620)
!7625 = !DILocation(line: 1246, column: 10, scope: !7620)
!7626 = !DILocation(line: 1247, column: 10, scope: !7620)
!7627 = !DILocation(line: 1246, column: 10, scope: !7621)
!7628 = !DILocation(line: 1248, column: 31, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 1248, column: 11)
!7630 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 1247, column: 16)
!7631 = !DILocation(line: 1248, column: 11, scope: !7629)
!7632 = !DILocation(line: 1248, column: 11, scope: !7630)
!7633 = !DILocation(line: 1249, column: 8, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 1249, column: 8)
!7635 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 1248, column: 35)
!7636 = !DILocation(line: 1249, column: 8, scope: !7635)
!7637 = !DILocation(line: 1249, column: 8, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 1249, column: 8)
!7639 = !DILocation(line: 1252, column: 7, scope: !7635)
!7640 = !DILocation(line: 1254, column: 27, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 1252, column: 14)
!7642 = !DILocation(line: 1254, column: 12, scope: !7641)
!7643 = !DILocation(line: 1253, column: 16, scope: !7641)
!7644 = !DILocation(line: 1255, column: 14, scope: !7641)
!7645 = !DILocation(line: 1256, column: 8, scope: !7641)
!7646 = !DILocation(line: 1258, column: 6, scope: !7630)
!7647 = !DILocation(line: 1259, column: 5, scope: !7621)
!7648 = !DILocation(line: 1245, column: 38, scope: !7616)
!7649 = !DILocation(line: 1245, column: 5, scope: !7616)
!7650 = distinct !{!7650, !7618, !7651, !3182}
!7651 = !DILocation(line: 1259, column: 5, scope: !7613)
!7652 = !DILocation(line: 1260, column: 10, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 1260, column: 9)
!7654 = !DILocation(line: 1260, column: 9, scope: !2187)
!7655 = !DILocation(line: 1261, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 1261, column: 6)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 1260, column: 17)
!7658 = !DILocation(line: 1261, column: 6, scope: !7657)
!7659 = !DILocation(line: 1261, column: 6, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 1261, column: 6)
!7661 = !DILocation(line: 1263, column: 5, scope: !7657)
!7662 = !DILocation(line: 1264, column: 5, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 1264, column: 5)
!7664 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 1264, column: 5)
!7665 = !DILocation(line: 1264, column: 5, scope: !7664)
!7666 = !DILocation(line: 1264, column: 5, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 1264, column: 5)
!7668 = !DILocation(line: 1265, column: 4, scope: !2188)
!7669 = !DILocation(line: 1266, column: 8, scope: !2196)
!7670 = !DILocation(line: 1266, column: 8, scope: !2178)
!7671 = !DILocation(line: 1267, column: 9, scope: !2194)
!7672 = !DILocation(line: 1267, column: 9, scope: !2195)
!7673 = !DILocation(line: 1268, column: 18, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !2194, file: !3, line: 1267, column: 38)
!7675 = !DILocation(line: 1269, column: 6, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 1269, column: 6)
!7677 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 1269, column: 6)
!7678 = !DILocation(line: 1269, column: 6, scope: !7677)
!7679 = !DILocation(line: 1269, column: 6, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 1269, column: 6)
!7681 = !DILocation(line: 1271, column: 6, scope: !2192)
!7682 = !DILocation(line: 1271, column: 6, scope: !2193)
!7683 = !DILocation(line: 1271, column: 6, scope: !2191)
!7684 = !DILocation(line: 1271, column: 6, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 1271, column: 6)
!7686 = !DILocation(line: 1271, column: 6, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1271, column: 6)
!7688 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 1271, column: 6)
!7689 = !DILocation(line: 1271, column: 6, scope: !7688)
!7690 = !DILocation(line: 1271, column: 6, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 1271, column: 6)
!7692 = !DILocation(line: 1271, column: 6, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 1271, column: 6)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 1271, column: 6)
!7695 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 1271, column: 6)
!7696 = !DILocation(line: 1271, column: 6, scope: !7694)
!7697 = !DILocation(line: 1271, column: 6, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !3, line: 1271, column: 6)
!7699 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 1271, column: 6)
!7700 = !DILocation(line: 1271, column: 6, scope: !7699)
!7701 = !DILocation(line: 1271, column: 6, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 1271, column: 6)
!7703 = !DILocation(line: 1271, column: 6, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 1271, column: 6)
!7705 = !DILocation(line: 1271, column: 6, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 1271, column: 6)
!7707 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 1271, column: 6)
!7708 = !DILocation(line: 1271, column: 6, scope: !7707)
!7709 = !DILocation(line: 1271, column: 6, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 1271, column: 6)
!7711 = !DILocation(line: 1276, column: 4, scope: !2195)
!7712 = !DILocation(line: 1277, column: 8, scope: !2200)
!7713 = !DILocation(line: 1277, column: 8, scope: !2178)
!7714 = !DILocation(line: 1278, column: 5, scope: !2199)
!7715 = !DILocation(line: 1278, column: 11, scope: !2199)
!7716 = !DILocation(line: 1279, column: 5, scope: !2199)
!7717 = !DILocation(line: 1279, column: 10, scope: !2199)
!7718 = !DILocation(line: 1279, column: 46, scope: !2199)
!7719 = !DILocation(line: 1279, column: 16, scope: !2199)
!7720 = !DILocation(line: 1281, column: 9, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 1281, column: 9)
!7722 = !DILocation(line: 1281, column: 13, scope: !7721)
!7723 = !DILocation(line: 1281, column: 25, scope: !7721)
!7724 = !DILocation(line: 1281, column: 31, scope: !7721)
!7725 = !DILocation(line: 1281, column: 29, scope: !7721)
!7726 = !DILocation(line: 1281, column: 37, scope: !7721)
!7727 = !DILocation(line: 1281, column: 34, scope: !7721)
!7728 = !DILocation(line: 1281, column: 9, scope: !2199)
!7729 = !DILocation(line: 1282, column: 6, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 1282, column: 6)
!7731 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 1281, column: 43)
!7732 = !DILocation(line: 1282, column: 6, scope: !7731)
!7733 = !DILocation(line: 1282, column: 6, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 1282, column: 6)
!7735 = !DILocation(line: 1284, column: 5, scope: !7731)
!7736 = !DILocation(line: 1285, column: 5, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 1285, column: 5)
!7738 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 1285, column: 5)
!7739 = !DILocation(line: 1285, column: 5, scope: !7738)
!7740 = !DILocation(line: 1285, column: 5, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1285, column: 5)
!7742 = !DILocation(line: 1286, column: 4, scope: !2200)
!7743 = !DILocation(line: 1287, column: 8, scope: !2204)
!7744 = !DILocation(line: 1287, column: 8, scope: !2178)
!7745 = !DILocation(line: 1288, column: 5, scope: !2203)
!7746 = !DILocation(line: 1288, column: 17, scope: !2203)
!7747 = !DILocation(line: 1288, column: 42, scope: !2203)
!7748 = !DILocation(line: 1289, column: 5, scope: !2203)
!7749 = !DILocation(line: 1289, column: 12, scope: !2203)
!7750 = !DILocation(line: 1289, column: 24, scope: !2203)
!7751 = !DILocation(line: 1290, column: 5, scope: !2203)
!7752 = !DILocation(line: 1291, column: 6, scope: !2207)
!7753 = !DILocation(line: 1291, column: 13, scope: !2207)
!7754 = !DILocation(line: 1292, column: 6, scope: !2207)
!7755 = !DILocation(line: 1292, column: 13, scope: !2207)
!7756 = !DILocation(line: 1293, column: 6, scope: !2207)
!7757 = !DILocation(line: 1293, column: 13, scope: !2207)
!7758 = !DILocation(line: 1294, column: 6, scope: !2207)
!7759 = !DILocation(line: 1294, column: 11, scope: !2207)
!7760 = !DILocation(line: 1294, column: 17, scope: !2207)
!7761 = !DILocation(line: 1297, column: 10, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !2207, file: !3, line: 1297, column: 10)
!7763 = !DILocation(line: 1297, column: 14, scope: !7762)
!7764 = !DILocation(line: 1298, column: 10, scope: !7762)
!7765 = !DILocation(line: 1298, column: 27, scope: !7762)
!7766 = !DILocation(line: 1299, column: 10, scope: !7762)
!7767 = !DILocation(line: 1299, column: 20, scope: !7762)
!7768 = !DILocation(line: 1297, column: 17, scope: !7762)
!7769 = !DILocation(line: 1297, column: 10, scope: !2207)
!7770 = !DILocation(line: 1300, column: 7, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1300, column: 7)
!7772 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 1299, column: 30)
!7773 = !DILocation(line: 1300, column: 7, scope: !7772)
!7774 = !DILocation(line: 1300, column: 7, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 1300, column: 7)
!7776 = !DILocation(line: 1304, column: 7, scope: !7772)
!7777 = !DILocation(line: 1306, column: 5, scope: !2203)
!7778 = !DILocation(line: 1306, column: 5, scope: !2207)
!7779 = !DILocation(line: 1306, column: 14, scope: !2203)
!7780 = !DILocation(line: 1306, column: 24, scope: !2203)
!7781 = distinct !{!7781, !7751, !7782, !3182}
!7782 = !DILocation(line: 1306, column: 27, scope: !2203)
!7783 = !DILocation(line: 1307, column: 5, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 1307, column: 5)
!7785 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1307, column: 5)
!7786 = !DILocation(line: 1307, column: 5, scope: !7785)
!7787 = !DILocation(line: 1307, column: 5, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1307, column: 5)
!7789 = !DILocation(line: 1308, column: 4, scope: !2204)
!7790 = !DILocation(line: 1309, column: 4, scope: !2213)
!7791 = !DILocation(line: 1309, column: 4, scope: !2178)
!7792 = !DILocation(line: 1309, column: 4, scope: !2212)
!7793 = !DILocation(line: 1309, column: 4, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1309, column: 4)
!7795 = !DILocation(line: 1309, column: 4, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 1309, column: 4)
!7797 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 1309, column: 4)
!7798 = !DILocation(line: 1309, column: 4, scope: !7797)
!7799 = !DILocation(line: 1309, column: 4, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 1309, column: 4)
!7801 = !DILocation(line: 1309, column: 4, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 1309, column: 4)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1309, column: 4)
!7804 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 1309, column: 4)
!7805 = !DILocation(line: 1309, column: 4, scope: !7803)
!7806 = !DILocation(line: 1309, column: 4, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 1309, column: 4)
!7808 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 1309, column: 4)
!7809 = !DILocation(line: 1309, column: 4, scope: !7808)
!7810 = !DILocation(line: 1309, column: 4, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 1309, column: 4)
!7812 = !DILocation(line: 1309, column: 4, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 1309, column: 4)
!7814 = !DILocation(line: 1309, column: 4, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1309, column: 4)
!7816 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 1309, column: 4)
!7817 = !DILocation(line: 1309, column: 4, scope: !7816)
!7818 = !DILocation(line: 1309, column: 4, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 1309, column: 4)
!7820 = !DILocation(line: 1312, column: 4, scope: !2217)
!7821 = !DILocation(line: 1312, column: 4, scope: !2178)
!7822 = !DILocation(line: 1312, column: 4, scope: !2216)
!7823 = !DILocation(line: 1312, column: 4, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 1312, column: 4)
!7825 = !DILocation(line: 1312, column: 4, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 1312, column: 4)
!7827 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 1312, column: 4)
!7828 = !DILocation(line: 1312, column: 4, scope: !7827)
!7829 = !DILocation(line: 1312, column: 4, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 1312, column: 4)
!7831 = !DILocation(line: 1312, column: 4, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 1312, column: 4)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 1312, column: 4)
!7834 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 1312, column: 4)
!7835 = !DILocation(line: 1312, column: 4, scope: !7833)
!7836 = !DILocation(line: 1312, column: 4, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 1312, column: 4)
!7838 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 1312, column: 4)
!7839 = !DILocation(line: 1312, column: 4, scope: !7838)
!7840 = !DILocation(line: 1312, column: 4, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1312, column: 4)
!7842 = !DILocation(line: 1312, column: 4, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 1312, column: 4)
!7844 = !DILocation(line: 1312, column: 4, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 1312, column: 4)
!7846 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 1312, column: 4)
!7847 = !DILocation(line: 1312, column: 4, scope: !7846)
!7848 = !DILocation(line: 1312, column: 4, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 1312, column: 4)
!7850 = !DILocation(line: 1316, column: 4, scope: !2221)
!7851 = !DILocation(line: 1316, column: 4, scope: !2178)
!7852 = !DILocation(line: 1316, column: 4, scope: !2220)
!7853 = !DILocation(line: 1316, column: 4, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 1316, column: 4)
!7855 = !DILocation(line: 1316, column: 4, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !3, line: 1316, column: 4)
!7857 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 1316, column: 4)
!7858 = !DILocation(line: 1316, column: 4, scope: !7857)
!7859 = !DILocation(line: 1316, column: 4, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 1316, column: 4)
!7861 = !DILocation(line: 1316, column: 4, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 1316, column: 4)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1316, column: 4)
!7864 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 1316, column: 4)
!7865 = !DILocation(line: 1316, column: 4, scope: !7863)
!7866 = !DILocation(line: 1316, column: 4, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 1316, column: 4)
!7868 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 1316, column: 4)
!7869 = !DILocation(line: 1316, column: 4, scope: !7868)
!7870 = !DILocation(line: 1316, column: 4, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 1316, column: 4)
!7872 = !DILocation(line: 1316, column: 4, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 1316, column: 4)
!7874 = !DILocation(line: 1316, column: 4, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 1316, column: 4)
!7876 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 1316, column: 4)
!7877 = !DILocation(line: 1316, column: 4, scope: !7876)
!7878 = !DILocation(line: 1316, column: 4, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 1316, column: 4)
!7880 = !DILocation(line: 1320, column: 4, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1320, column: 4)
!7882 = !DILocation(line: 1320, column: 4, scope: !2178)
!7883 = !DILocation(line: 1320, column: 4, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 1320, column: 4)
!7885 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 1320, column: 4)
!7886 = !DILocation(line: 1320, column: 4, scope: !7885)
!7887 = !DILocation(line: 1320, column: 4, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 1320, column: 4)
!7889 = !DILocation(line: 1320, column: 4, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 1320, column: 4)
!7891 = !DILocation(line: 1320, column: 4, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 1320, column: 4)
!7893 = !DILocation(line: 1320, column: 4, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 1320, column: 4)
!7895 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 1320, column: 4)
!7896 = !DILocation(line: 1320, column: 4, scope: !7895)
!7897 = !DILocation(line: 1320, column: 4, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 1320, column: 4)
!7899 = !DILocation(line: 1320, column: 4, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1320, column: 4)
!7901 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 1320, column: 4)
!7902 = !DILocation(line: 1320, column: 4, scope: !7901)
!7903 = !DILocation(line: 1320, column: 4, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 1320, column: 4)
!7905 = !DILocation(line: 1321, column: 8, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1321, column: 8)
!7907 = !DILocation(line: 1321, column: 8, scope: !2178)
!7908 = !DILocation(line: 1322, column: 25, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1321, column: 40)
!7910 = !DILocation(line: 1322, column: 28, scope: !7909)
!7911 = !DILocation(line: 1322, column: 5, scope: !7909)
!7912 = !DILocation(line: 1324, column: 5, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 1324, column: 5)
!7914 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 1324, column: 5)
!7915 = !DILocation(line: 1324, column: 5, scope: !7914)
!7916 = !DILocation(line: 1324, column: 5, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1324, column: 5)
!7918 = !DILocation(line: 1326, column: 4, scope: !2225)
!7919 = !DILocation(line: 1326, column: 4, scope: !2178)
!7920 = !DILocation(line: 1326, column: 4, scope: !2224)
!7921 = !DILocation(line: 1326, column: 4, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 1326, column: 4)
!7923 = !DILocation(line: 1326, column: 4, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 1326, column: 4)
!7925 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 1326, column: 4)
!7926 = !DILocation(line: 1326, column: 4, scope: !7925)
!7927 = !DILocation(line: 1326, column: 4, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 1326, column: 4)
!7929 = !DILocation(line: 1326, column: 4, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1326, column: 4)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 1326, column: 4)
!7932 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 1326, column: 4)
!7933 = !DILocation(line: 1326, column: 4, scope: !7931)
!7934 = !DILocation(line: 1326, column: 4, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 1326, column: 4)
!7936 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 1326, column: 4)
!7937 = !DILocation(line: 1326, column: 4, scope: !7936)
!7938 = !DILocation(line: 1326, column: 4, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 1326, column: 4)
!7940 = !DILocation(line: 1326, column: 4, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 1326, column: 4)
!7942 = !DILocation(line: 1326, column: 4, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 1326, column: 4)
!7944 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 1326, column: 4)
!7945 = !DILocation(line: 1326, column: 4, scope: !7944)
!7946 = !DILocation(line: 1326, column: 4, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 1326, column: 4)
!7948 = !DILocation(line: 1329, column: 8, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1329, column: 8)
!7950 = !DILocation(line: 1329, column: 8, scope: !2178)
!7951 = !DILocation(line: 1330, column: 25, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 1329, column: 43)
!7953 = !DILocation(line: 1330, column: 28, scope: !7952)
!7954 = !DILocation(line: 1330, column: 5, scope: !7952)
!7955 = !DILocation(line: 1332, column: 5, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1332, column: 5)
!7957 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 1332, column: 5)
!7958 = !DILocation(line: 1332, column: 5, scope: !7957)
!7959 = !DILocation(line: 1332, column: 5, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 1332, column: 5)
!7961 = !DILocation(line: 1335, column: 9, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 1335, column: 9)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 1334, column: 21)
!7964 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1334, column: 8)
!7965 = !DILocation(line: 1335, column: 9, scope: !7963)
!7966 = !DILocation(line: 1336, column: 10, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 1336, column: 10)
!7968 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 1335, column: 29)
!7969 = !DILocation(line: 1336, column: 10, scope: !7968)
!7970 = !DILocation(line: 1337, column: 16, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1336, column: 36)
!7972 = !DILocation(line: 1338, column: 38, scope: !7971)
!7973 = !DILocation(line: 1338, column: 22, scope: !7971)
!7974 = !DILocation(line: 1340, column: 6, scope: !7971)
!7975 = !DILocation(line: 1340, column: 17, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1340, column: 17)
!7977 = !DILocation(line: 1340, column: 17, scope: !7967)
!7978 = !DILocation(line: 1341, column: 16, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 1340, column: 44)
!7980 = !DILocation(line: 1342, column: 38, scope: !7979)
!7981 = !DILocation(line: 1342, column: 22, scope: !7979)
!7982 = !DILocation(line: 1344, column: 6, scope: !7979)
!7983 = !DILocation(line: 1344, column: 17, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 1344, column: 17)
!7985 = !DILocation(line: 1344, column: 17, scope: !7976)
!7986 = !DILocation(line: 1345, column: 16, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 1344, column: 44)
!7988 = !DILocation(line: 1346, column: 22, scope: !7987)
!7989 = !DILocation(line: 1347, column: 21, scope: !7987)
!7990 = !DILocation(line: 1348, column: 6, scope: !7987)
!7991 = !DILocation(line: 1348, column: 17, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 1348, column: 17)
!7993 = !DILocation(line: 1348, column: 17, scope: !7984)
!7994 = !DILocation(line: 1349, column: 16, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1348, column: 43)
!7996 = !DILocation(line: 1350, column: 22, scope: !7995)
!7997 = !DILocation(line: 1351, column: 21, scope: !7995)
!7998 = !DILocation(line: 1352, column: 6, scope: !7995)
!7999 = !DILocation(line: 1353, column: 7, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 1353, column: 7)
!8001 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1352, column: 13)
!8002 = !DILocation(line: 1353, column: 7, scope: !8001)
!8003 = !DILocation(line: 1353, column: 7, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 1353, column: 7)
!8005 = !DILocation(line: 1357, column: 6, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 1357, column: 6)
!8007 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 1357, column: 6)
!8008 = !DILocation(line: 1357, column: 6, scope: !8007)
!8009 = !DILocation(line: 1357, column: 6, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1357, column: 6)
!8011 = !DILocation(line: 1359, column: 5, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 1359, column: 5)
!8013 = !DILocation(line: 1359, column: 5, scope: !7963)
!8014 = !DILocation(line: 1359, column: 5, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 1359, column: 5)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 1359, column: 5)
!8017 = !DILocation(line: 1359, column: 5, scope: !8016)
!8018 = !DILocation(line: 1359, column: 5, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 1359, column: 5)
!8020 = !DILocation(line: 1359, column: 5, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 1359, column: 5)
!8022 = !DILocation(line: 1359, column: 5, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1359, column: 5)
!8024 = !DILocation(line: 1359, column: 5, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 1359, column: 5)
!8026 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1359, column: 5)
!8027 = !DILocation(line: 1359, column: 5, scope: !8026)
!8028 = !DILocation(line: 1359, column: 5, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 1359, column: 5)
!8030 = !DILocation(line: 1359, column: 5, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 1359, column: 5)
!8032 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 1359, column: 5)
!8033 = !DILocation(line: 1359, column: 5, scope: !8032)
!8034 = !DILocation(line: 1359, column: 5, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 1359, column: 5)
!8036 = !DILocation(line: 1368, column: 5, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 1368, column: 5)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 1367, column: 27)
!8039 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1367, column: 8)
!8040 = !DILocation(line: 1368, column: 5, scope: !8038)
!8041 = !DILocation(line: 1368, column: 5, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 1368, column: 5)
!8043 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 1368, column: 5)
!8044 = !DILocation(line: 1368, column: 5, scope: !8043)
!8045 = !DILocation(line: 1368, column: 5, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1368, column: 5)
!8047 = !DILocation(line: 1368, column: 5, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1368, column: 5)
!8049 = !DILocation(line: 1368, column: 5, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 1368, column: 5)
!8051 = !DILocation(line: 1368, column: 5, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 1368, column: 5)
!8053 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 1368, column: 5)
!8054 = !DILocation(line: 1368, column: 5, scope: !8053)
!8055 = !DILocation(line: 1368, column: 5, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 1368, column: 5)
!8057 = !DILocation(line: 1368, column: 5, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 1368, column: 5)
!8059 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 1368, column: 5)
!8060 = !DILocation(line: 1368, column: 5, scope: !8059)
!8061 = !DILocation(line: 1368, column: 5, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 1368, column: 5)
!8063 = !DILocation(line: 1373, column: 4, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1373, column: 4)
!8065 = !DILocation(line: 1373, column: 4, scope: !2178)
!8066 = !DILocation(line: 1373, column: 4, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1373, column: 4)
!8068 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1373, column: 4)
!8069 = !DILocation(line: 1373, column: 4, scope: !8068)
!8070 = !DILocation(line: 1373, column: 4, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1373, column: 4)
!8072 = !DILocation(line: 1373, column: 4, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1373, column: 4)
!8074 = !DILocation(line: 1373, column: 4, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 1373, column: 4)
!8076 = !DILocation(line: 1373, column: 4, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 1373, column: 4)
!8078 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 1373, column: 4)
!8079 = !DILocation(line: 1373, column: 4, scope: !8078)
!8080 = !DILocation(line: 1373, column: 4, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 1373, column: 4)
!8082 = !DILocation(line: 1373, column: 4, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 1373, column: 4)
!8084 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1373, column: 4)
!8085 = !DILocation(line: 1373, column: 4, scope: !8084)
!8086 = !DILocation(line: 1373, column: 4, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 1373, column: 4)
!8088 = !DILocation(line: 1374, column: 4, scope: !2229)
!8089 = !DILocation(line: 1374, column: 4, scope: !2178)
!8090 = !DILocation(line: 1374, column: 4, scope: !2228)
!8091 = !DILocation(line: 1374, column: 4, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !2228, file: !3, line: 1374, column: 4)
!8093 = !DILocation(line: 1374, column: 4, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 1374, column: 4)
!8095 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 1374, column: 4)
!8096 = !DILocation(line: 1374, column: 4, scope: !8095)
!8097 = !DILocation(line: 1374, column: 4, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 1374, column: 4)
!8099 = !DILocation(line: 1374, column: 4, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 1374, column: 4)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 1374, column: 4)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1374, column: 4)
!8103 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 1374, column: 4)
!8104 = !DILocation(line: 1374, column: 4, scope: !8101)
!8105 = !DILocation(line: 1374, column: 4, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 1374, column: 4)
!8107 = !DILocation(line: 1374, column: 4, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 1374, column: 4)
!8109 = !DILocation(line: 1374, column: 4, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 1374, column: 4)
!8111 = distinct !DILexicalBlock(scope: !2228, file: !3, line: 1374, column: 4)
!8112 = !DILocation(line: 1374, column: 4, scope: !8111)
!8113 = !DILocation(line: 1374, column: 4, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 1374, column: 4)
!8115 = !DILocation(line: 1377, column: 8, scope: !2233)
!8116 = !DILocation(line: 1377, column: 8, scope: !2178)
!8117 = !DILocation(line: 1378, column: 5, scope: !2232)
!8118 = !DILocation(line: 1378, column: 12, scope: !2232)
!8119 = !DILocation(line: 1379, column: 5, scope: !2232)
!8120 = !DILocation(line: 1380, column: 9, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 1380, column: 9)
!8122 = !DILocation(line: 1380, column: 9, scope: !2232)
!8123 = !DILocation(line: 1381, column: 6, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 1381, column: 6)
!8125 = distinct !DILexicalBlock(scope: !8121, file: !3, line: 1380, column: 33)
!8126 = !DILocation(line: 1381, column: 6, scope: !8125)
!8127 = !DILocation(line: 1381, column: 6, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 1381, column: 6)
!8129 = !DILocation(line: 1383, column: 5, scope: !8125)
!8130 = !DILocation(line: 1385, column: 10, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1385, column: 10)
!8132 = distinct !DILexicalBlock(scope: !8121, file: !3, line: 1383, column: 12)
!8133 = !DILocation(line: 1385, column: 12, scope: !8131)
!8134 = !DILocation(line: 1385, column: 10, scope: !8132)
!8135 = !DILocation(line: 1386, column: 9, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 1385, column: 40)
!8137 = !DILocation(line: 1387, column: 6, scope: !8136)
!8138 = !DILocation(line: 1388, column: 36, scope: !8132)
!8139 = !DILocation(line: 1388, column: 33, scope: !8132)
!8140 = !DILocation(line: 1388, column: 21, scope: !8132)
!8141 = !DILocation(line: 1390, column: 5, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1390, column: 5)
!8143 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 1390, column: 5)
!8144 = !DILocation(line: 1390, column: 5, scope: !8143)
!8145 = !DILocation(line: 1390, column: 5, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 1390, column: 5)
!8147 = !DILocation(line: 1391, column: 4, scope: !2233)
!8148 = !DILocation(line: 1396, column: 4, scope: !2237)
!8149 = !DILocation(line: 1396, column: 4, scope: !2178)
!8150 = !DILocation(line: 1396, column: 4, scope: !2236)
!8151 = !DILocation(line: 1396, column: 4, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 1396, column: 4)
!8153 = !DILocation(line: 1396, column: 4, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 1396, column: 4)
!8155 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 1396, column: 4)
!8156 = !DILocation(line: 1396, column: 4, scope: !8155)
!8157 = !DILocation(line: 1396, column: 4, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 1396, column: 4)
!8159 = !DILocation(line: 1396, column: 4, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 1396, column: 4)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 1396, column: 4)
!8162 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 1396, column: 4)
!8163 = !DILocation(line: 1396, column: 4, scope: !8161)
!8164 = !DILocation(line: 1396, column: 4, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 1396, column: 4)
!8166 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 1396, column: 4)
!8167 = !DILocation(line: 1396, column: 4, scope: !8166)
!8168 = !DILocation(line: 1396, column: 4, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 1396, column: 4)
!8170 = !DILocation(line: 1396, column: 4, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 1396, column: 4)
!8172 = !DILocation(line: 1396, column: 4, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 1396, column: 4)
!8174 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 1396, column: 4)
!8175 = !DILocation(line: 1396, column: 4, scope: !8174)
!8176 = !DILocation(line: 1396, column: 4, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 1396, column: 4)
!8178 = !DILocation(line: 1399, column: 4, scope: !2241)
!8179 = !DILocation(line: 1399, column: 4, scope: !2178)
!8180 = !DILocation(line: 1399, column: 4, scope: !2240)
!8181 = !DILocation(line: 1399, column: 4, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 1399, column: 4)
!8183 = !DILocation(line: 1399, column: 4, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 1399, column: 4)
!8185 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 1399, column: 4)
!8186 = !DILocation(line: 1399, column: 4, scope: !8185)
!8187 = !DILocation(line: 1399, column: 4, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 1399, column: 4)
!8189 = !DILocation(line: 1399, column: 4, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 1399, column: 4)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 1399, column: 4)
!8192 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 1399, column: 4)
!8193 = !DILocation(line: 1399, column: 4, scope: !8191)
!8194 = !DILocation(line: 1399, column: 4, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 1399, column: 4)
!8196 = !DILocation(line: 1399, column: 4, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 1399, column: 4)
!8198 = !DILocation(line: 1399, column: 4, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 1399, column: 4)
!8200 = !DILocation(line: 1399, column: 4, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 1399, column: 4)
!8202 = !DILocation(line: 1399, column: 4, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 1399, column: 4)
!8204 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 1399, column: 4)
!8205 = !DILocation(line: 1399, column: 4, scope: !8204)
!8206 = !DILocation(line: 1399, column: 4, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1399, column: 4)
!8208 = !DILocation(line: 1402, column: 4, scope: !2245)
!8209 = !DILocation(line: 1402, column: 4, scope: !2178)
!8210 = !DILocation(line: 1402, column: 4, scope: !2244)
!8211 = !DILocation(line: 1402, column: 4, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !2244, file: !3, line: 1402, column: 4)
!8213 = !DILocation(line: 1402, column: 4, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 1402, column: 4)
!8215 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 1402, column: 4)
!8216 = !DILocation(line: 1402, column: 4, scope: !8215)
!8217 = !DILocation(line: 1402, column: 4, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1402, column: 4)
!8219 = !DILocation(line: 1402, column: 4, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 1402, column: 4)
!8221 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 1402, column: 4)
!8222 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 1402, column: 4)
!8223 = !DILocation(line: 1402, column: 4, scope: !8221)
!8224 = !DILocation(line: 1402, column: 4, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1402, column: 4)
!8226 = !DILocation(line: 1402, column: 4, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1402, column: 4)
!8228 = !DILocation(line: 1402, column: 4, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 1402, column: 4)
!8230 = !DILocation(line: 1402, column: 4, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 1402, column: 4)
!8232 = !DILocation(line: 1402, column: 4, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 1402, column: 4)
!8234 = distinct !DILexicalBlock(scope: !2244, file: !3, line: 1402, column: 4)
!8235 = !DILocation(line: 1402, column: 4, scope: !8234)
!8236 = !DILocation(line: 1402, column: 4, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 1402, column: 4)
!8238 = !DILocation(line: 1405, column: 4, scope: !2249)
!8239 = !DILocation(line: 1405, column: 4, scope: !2178)
!8240 = !DILocation(line: 1405, column: 4, scope: !2248)
!8241 = !DILocation(line: 1405, column: 4, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 1405, column: 4)
!8243 = !DILocation(line: 1405, column: 4, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 1405, column: 4)
!8245 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1405, column: 4)
!8246 = !DILocation(line: 1405, column: 4, scope: !8245)
!8247 = !DILocation(line: 1405, column: 4, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 1405, column: 4)
!8249 = !DILocation(line: 1405, column: 4, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 1405, column: 4)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 1405, column: 4)
!8252 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1405, column: 4)
!8253 = !DILocation(line: 1405, column: 4, scope: !8251)
!8254 = !DILocation(line: 1405, column: 4, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 1405, column: 4)
!8256 = !DILocation(line: 1405, column: 4, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 1405, column: 4)
!8258 = !DILocation(line: 1405, column: 4, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1405, column: 4)
!8260 = !DILocation(line: 1405, column: 4, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1405, column: 4)
!8262 = !DILocation(line: 1405, column: 4, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1405, column: 4)
!8264 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 1405, column: 4)
!8265 = !DILocation(line: 1405, column: 4, scope: !8264)
!8266 = !DILocation(line: 1405, column: 4, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 1405, column: 4)
!8268 = !DILocation(line: 1408, column: 4, scope: !2253)
!8269 = !DILocation(line: 1408, column: 4, scope: !2178)
!8270 = !DILocation(line: 1408, column: 4, scope: !2252)
!8271 = !DILocation(line: 1408, column: 4, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !2252, file: !3, line: 1408, column: 4)
!8273 = !DILocation(line: 1408, column: 4, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 1408, column: 4)
!8275 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 1408, column: 4)
!8276 = !DILocation(line: 1408, column: 4, scope: !8275)
!8277 = !DILocation(line: 1408, column: 4, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1408, column: 4)
!8279 = !DILocation(line: 1408, column: 4, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 1408, column: 4)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 1408, column: 4)
!8282 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 1408, column: 4)
!8283 = !DILocation(line: 1408, column: 4, scope: !8281)
!8284 = !DILocation(line: 1408, column: 4, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1408, column: 4)
!8286 = !DILocation(line: 1408, column: 4, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 1408, column: 4)
!8288 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1408, column: 4)
!8289 = !DILocation(line: 1408, column: 4, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 1408, column: 4)
!8291 = distinct !DILexicalBlock(scope: !2252, file: !3, line: 1408, column: 4)
!8292 = !DILocation(line: 1408, column: 4, scope: !8291)
!8293 = !DILocation(line: 1408, column: 4, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1408, column: 4)
!8295 = !DILocation(line: 1412, column: 4, scope: !2257)
!8296 = !DILocation(line: 1412, column: 4, scope: !2178)
!8297 = !DILocation(line: 1412, column: 4, scope: !2256)
!8298 = !DILocation(line: 1412, column: 4, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 1412, column: 4)
!8300 = !DILocation(line: 1412, column: 4, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 1412, column: 4)
!8302 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 1412, column: 4)
!8303 = !DILocation(line: 1412, column: 4, scope: !8302)
!8304 = !DILocation(line: 1412, column: 4, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 1412, column: 4)
!8306 = !DILocation(line: 1412, column: 4, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1412, column: 4)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 1412, column: 4)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 1412, column: 4)
!8310 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 1412, column: 4)
!8311 = !DILocation(line: 1412, column: 4, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 1412, column: 4)
!8313 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 1412, column: 4)
!8314 = !DILocation(line: 1412, column: 4, scope: !8313)
!8315 = !DILocation(line: 1412, column: 4, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 1412, column: 4)
!8317 = !DILocation(line: 1416, column: 4, scope: !2261)
!8318 = !DILocation(line: 1416, column: 4, scope: !2178)
!8319 = !DILocation(line: 1416, column: 4, scope: !2260)
!8320 = !DILocation(line: 1416, column: 4, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 1416, column: 4)
!8322 = !DILocation(line: 1416, column: 4, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 1416, column: 4)
!8324 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 1416, column: 4)
!8325 = !DILocation(line: 1416, column: 4, scope: !8324)
!8326 = !DILocation(line: 1416, column: 4, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 1416, column: 4)
!8328 = !DILocation(line: 1416, column: 4, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 1416, column: 4)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 1416, column: 4)
!8331 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 1416, column: 4)
!8332 = !DILocation(line: 1416, column: 4, scope: !8330)
!8333 = !DILocation(line: 1416, column: 4, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 1416, column: 4)
!8335 = !DILocation(line: 1416, column: 4, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 1416, column: 4)
!8337 = !DILocation(line: 1416, column: 4, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 1416, column: 4)
!8339 = !DILocation(line: 1416, column: 4, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 1416, column: 4)
!8341 = !DILocation(line: 1416, column: 4, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1416, column: 4)
!8343 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 1416, column: 4)
!8344 = !DILocation(line: 1416, column: 4, scope: !8343)
!8345 = !DILocation(line: 1416, column: 4, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 1416, column: 4)
!8347 = !DILocation(line: 1419, column: 4, scope: !2265)
!8348 = !DILocation(line: 1419, column: 4, scope: !2178)
!8349 = !DILocation(line: 1419, column: 4, scope: !2264)
!8350 = !DILocation(line: 1419, column: 4, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 1419, column: 4)
!8352 = !DILocation(line: 1419, column: 4, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1419, column: 4)
!8354 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 1419, column: 4)
!8355 = !DILocation(line: 1419, column: 4, scope: !8354)
!8356 = !DILocation(line: 1419, column: 4, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 1419, column: 4)
!8358 = !DILocation(line: 1419, column: 4, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 1419, column: 4)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 1419, column: 4)
!8361 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 1419, column: 4)
!8362 = !DILocation(line: 1419, column: 4, scope: !8360)
!8363 = !DILocation(line: 1419, column: 4, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 1419, column: 4)
!8365 = !DILocation(line: 1419, column: 4, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 1419, column: 4)
!8367 = !DILocation(line: 1419, column: 4, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 1419, column: 4)
!8369 = !DILocation(line: 1419, column: 4, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 1419, column: 4)
!8371 = !DILocation(line: 1419, column: 4, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1419, column: 4)
!8373 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 1419, column: 4)
!8374 = !DILocation(line: 1419, column: 4, scope: !8373)
!8375 = !DILocation(line: 1419, column: 4, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 1419, column: 4)
!8377 = !DILocation(line: 1431, column: 4, scope: !2269)
!8378 = !DILocation(line: 1431, column: 4, scope: !2178)
!8379 = !DILocation(line: 1431, column: 4, scope: !2268)
!8380 = !DILocation(line: 1431, column: 4, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 1431, column: 4)
!8382 = !DILocation(line: 1431, column: 4, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 1431, column: 4)
!8384 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1431, column: 4)
!8385 = !DILocation(line: 1431, column: 4, scope: !8384)
!8386 = !DILocation(line: 1431, column: 4, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 1431, column: 4)
!8388 = !DILocation(line: 1431, column: 4, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1431, column: 4)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 1431, column: 4)
!8391 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1431, column: 4)
!8392 = !DILocation(line: 1431, column: 4, scope: !8390)
!8393 = !DILocation(line: 1431, column: 4, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 1431, column: 4)
!8395 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 1431, column: 4)
!8396 = !DILocation(line: 1431, column: 4, scope: !8395)
!8397 = !DILocation(line: 1431, column: 4, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 1431, column: 4)
!8399 = !DILocation(line: 1431, column: 4, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 1431, column: 4)
!8401 = !DILocation(line: 1431, column: 4, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 1431, column: 4)
!8403 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 1431, column: 4)
!8404 = !DILocation(line: 1431, column: 4, scope: !8403)
!8405 = !DILocation(line: 1431, column: 4, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1431, column: 4)
!8407 = !DILocation(line: 1434, column: 4, scope: !2273)
!8408 = !DILocation(line: 1434, column: 4, scope: !2178)
!8409 = !DILocation(line: 1434, column: 4, scope: !2272)
!8410 = !DILocation(line: 1434, column: 4, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 1434, column: 4)
!8412 = !DILocation(line: 1434, column: 4, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 1434, column: 4)
!8414 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 1434, column: 4)
!8415 = !DILocation(line: 1434, column: 4, scope: !8414)
!8416 = !DILocation(line: 1434, column: 4, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1434, column: 4)
!8418 = !DILocation(line: 1434, column: 4, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 1434, column: 4)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1434, column: 4)
!8421 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 1434, column: 4)
!8422 = !DILocation(line: 1434, column: 4, scope: !8420)
!8423 = !DILocation(line: 1434, column: 4, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 1434, column: 4)
!8425 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 1434, column: 4)
!8426 = !DILocation(line: 1434, column: 4, scope: !8425)
!8427 = !DILocation(line: 1434, column: 4, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 1434, column: 4)
!8429 = !DILocation(line: 1434, column: 4, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 1434, column: 4)
!8431 = !DILocation(line: 1434, column: 4, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 1434, column: 4)
!8433 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 1434, column: 4)
!8434 = !DILocation(line: 1434, column: 4, scope: !8433)
!8435 = !DILocation(line: 1434, column: 4, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 1434, column: 4)
!8437 = !DILocation(line: 1439, column: 32, scope: !2277)
!8438 = !DILocation(line: 1439, column: 35, scope: !2277)
!8439 = !DILocation(line: 1439, column: 8, scope: !2277)
!8440 = !DILocation(line: 1439, column: 41, scope: !2277)
!8441 = !DILocation(line: 1439, column: 8, scope: !2178)
!8442 = !DILocation(line: 1440, column: 5, scope: !2276)
!8443 = !DILocation(line: 1440, column: 10, scope: !2276)
!8444 = !DILocation(line: 1441, column: 10, scope: !2279)
!8445 = !DILocation(line: 1441, column: 14, scope: !2279)
!8446 = !DILocation(line: 1441, column: 48, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !2279, file: !3, line: 1441, column: 5)
!8448 = !DILocation(line: 1441, column: 50, scope: !8447)
!8449 = !DILocation(line: 1441, column: 5, scope: !2279)
!8450 = !DILocation(line: 1443, column: 42, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 1443, column: 10)
!8452 = distinct !DILexicalBlock(scope: !8447, file: !3, line: 1442, column: 45)
!8453 = !DILocation(line: 1443, column: 18, scope: !8451)
!8454 = !DILocation(line: 1444, column: 10, scope: !8451)
!8455 = !DILocation(line: 1444, column: 13, scope: !8451)
!8456 = !DILocation(line: 1443, column: 10, scope: !8451)
!8457 = !DILocation(line: 1444, column: 19, scope: !8451)
!8458 = !DILocation(line: 1443, column: 10, scope: !8452)
!8459 = !DILocation(line: 1450, column: 26, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1444, column: 25)
!8461 = !DILocation(line: 1450, column: 24, scope: !8460)
!8462 = !DILocation(line: 1451, column: 13, scope: !8460)
!8463 = !DILocation(line: 1452, column: 7, scope: !8460)
!8464 = !DILocation(line: 1454, column: 5, scope: !8452)
!8465 = !DILocation(line: 1442, column: 41, scope: !8447)
!8466 = !DILocation(line: 1441, column: 5, scope: !8447)
!8467 = distinct !{!8467, !8449, !8468, !3182}
!8468 = !DILocation(line: 1454, column: 5, scope: !2279)
!8469 = !DILocation(line: 1455, column: 10, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1455, column: 9)
!8471 = !DILocation(line: 1455, column: 9, scope: !2276)
!8472 = !DILocation(line: 1456, column: 6, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 1456, column: 6)
!8474 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1455, column: 17)
!8475 = !DILocation(line: 1456, column: 6, scope: !8474)
!8476 = !DILocation(line: 1456, column: 6, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 1456, column: 6)
!8478 = !DILocation(line: 1458, column: 5, scope: !8474)
!8479 = !DILocation(line: 1459, column: 5, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 1459, column: 5)
!8481 = distinct !DILexicalBlock(scope: !2276, file: !3, line: 1459, column: 5)
!8482 = !DILocation(line: 1459, column: 5, scope: !8481)
!8483 = !DILocation(line: 1459, column: 5, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 1459, column: 5)
!8485 = !DILocation(line: 1460, column: 4, scope: !2277)
!8486 = !DILocation(line: 1461, column: 4, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1461, column: 4)
!8488 = !DILocation(line: 1461, column: 4, scope: !2178)
!8489 = !DILocation(line: 1461, column: 4, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1461, column: 4)
!8491 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1461, column: 4)
!8492 = !DILocation(line: 1461, column: 4, scope: !8491)
!8493 = !DILocation(line: 1461, column: 4, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 1461, column: 4)
!8495 = !DILocation(line: 1461, column: 4, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 1461, column: 4)
!8497 = !DILocation(line: 1461, column: 4, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 1461, column: 4)
!8499 = !DILocation(line: 1461, column: 4, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 1461, column: 4)
!8501 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 1461, column: 4)
!8502 = !DILocation(line: 1461, column: 4, scope: !8501)
!8503 = !DILocation(line: 1461, column: 4, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 1461, column: 4)
!8505 = !DILocation(line: 1461, column: 4, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 1461, column: 4)
!8507 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1461, column: 4)
!8508 = !DILocation(line: 1461, column: 4, scope: !8507)
!8509 = !DILocation(line: 1461, column: 4, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 1461, column: 4)
!8511 = !DILocation(line: 1463, column: 4, scope: !2282)
!8512 = !DILocation(line: 1463, column: 4, scope: !2178)
!8513 = !DILocation(line: 1463, column: 4, scope: !2281)
!8514 = !DILocation(line: 1463, column: 4, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !2281, file: !3, line: 1463, column: 4)
!8516 = !DILocation(line: 1463, column: 4, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 1463, column: 4)
!8518 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 1463, column: 4)
!8519 = !DILocation(line: 1463, column: 4, scope: !8518)
!8520 = !DILocation(line: 1463, column: 4, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 1463, column: 4)
!8522 = !DILocation(line: 1463, column: 4, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 1463, column: 4)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 1463, column: 4)
!8525 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 1463, column: 4)
!8526 = !DILocation(line: 1463, column: 4, scope: !8524)
!8527 = !DILocation(line: 1463, column: 4, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 1463, column: 4)
!8529 = !DILocation(line: 1463, column: 4, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 1463, column: 4)
!8531 = !DILocation(line: 1463, column: 4, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 1463, column: 4)
!8533 = !DILocation(line: 1463, column: 4, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 1463, column: 4)
!8535 = !DILocation(line: 1463, column: 4, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 1463, column: 4)
!8537 = distinct !DILexicalBlock(scope: !2281, file: !3, line: 1463, column: 4)
!8538 = !DILocation(line: 1463, column: 4, scope: !8537)
!8539 = !DILocation(line: 1463, column: 4, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 1463, column: 4)
!8541 = !DILocation(line: 1468, column: 4, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1468, column: 4)
!8543 = !DILocation(line: 1468, column: 4, scope: !2178)
!8544 = !DILocation(line: 1468, column: 4, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 1468, column: 4)
!8546 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1468, column: 4)
!8547 = !DILocation(line: 1468, column: 4, scope: !8546)
!8548 = !DILocation(line: 1468, column: 4, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 1468, column: 4)
!8550 = !DILocation(line: 1468, column: 4, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 1468, column: 4)
!8552 = !DILocation(line: 1468, column: 4, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1468, column: 4)
!8554 = !DILocation(line: 1468, column: 4, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1468, column: 4)
!8556 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1468, column: 4)
!8557 = !DILocation(line: 1468, column: 4, scope: !8556)
!8558 = !DILocation(line: 1468, column: 4, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 1468, column: 4)
!8560 = !DILocation(line: 1468, column: 4, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 1468, column: 4)
!8562 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 1468, column: 4)
!8563 = !DILocation(line: 1468, column: 4, scope: !8562)
!8564 = !DILocation(line: 1468, column: 4, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 1468, column: 4)
!8566 = !DILocation(line: 1469, column: 4, scope: !2286)
!8567 = !DILocation(line: 1469, column: 4, scope: !2178)
!8568 = !DILocation(line: 1469, column: 4, scope: !2285)
!8569 = !DILocation(line: 1469, column: 4, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 1469, column: 4)
!8571 = !DILocation(line: 1469, column: 4, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 1469, column: 4)
!8573 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 1469, column: 4)
!8574 = !DILocation(line: 1469, column: 4, scope: !8573)
!8575 = !DILocation(line: 1469, column: 4, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 1469, column: 4)
!8577 = !DILocation(line: 1469, column: 4, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 1469, column: 4)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 1469, column: 4)
!8580 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 1469, column: 4)
!8581 = !DILocation(line: 1469, column: 4, scope: !8579)
!8582 = !DILocation(line: 1469, column: 4, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1469, column: 4)
!8584 = !{!3583, !2664, i64 0}
!8585 = !DILocation(line: 1469, column: 4, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1469, column: 4)
!8587 = !DILocation(line: 1469, column: 4, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 1469, column: 4)
!8589 = !DILocation(line: 1469, column: 4, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 1469, column: 4)
!8591 = !DILocation(line: 1469, column: 4, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 1469, column: 4)
!8593 = distinct !DILexicalBlock(scope: !2285, file: !3, line: 1469, column: 4)
!8594 = !DILocation(line: 1469, column: 4, scope: !8593)
!8595 = !DILocation(line: 1469, column: 4, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 1469, column: 4)
!8597 = !DILocation(line: 1477, column: 4, scope: !2290)
!8598 = !DILocation(line: 1477, column: 4, scope: !2178)
!8599 = !DILocation(line: 1477, column: 4, scope: !2289)
!8600 = !DILocation(line: 1477, column: 4, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 1477, column: 4)
!8602 = !DILocation(line: 1477, column: 4, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 1477, column: 4)
!8604 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1477, column: 4)
!8605 = !DILocation(line: 1477, column: 4, scope: !8604)
!8606 = !DILocation(line: 1477, column: 4, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 1477, column: 4)
!8608 = !DILocation(line: 1477, column: 4, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 1477, column: 4)
!8610 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 1477, column: 4)
!8611 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1477, column: 4)
!8612 = !DILocation(line: 1477, column: 4, scope: !8610)
!8613 = !DILocation(line: 1477, column: 4, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 1477, column: 4)
!8615 = !{!3583, !2664, i64 8}
!8616 = !DILocation(line: 1477, column: 4, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 1477, column: 4)
!8618 = !DILocation(line: 1477, column: 4, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1477, column: 4)
!8620 = !DILocation(line: 1477, column: 4, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 1477, column: 4)
!8622 = !DILocation(line: 1477, column: 4, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !3, line: 1477, column: 4)
!8624 = distinct !DILexicalBlock(scope: !2289, file: !3, line: 1477, column: 4)
!8625 = !DILocation(line: 1477, column: 4, scope: !8624)
!8626 = !DILocation(line: 1477, column: 4, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1477, column: 4)
!8628 = !DILocation(line: 1480, column: 8, scope: !2294)
!8629 = !DILocation(line: 1480, column: 8, scope: !2178)
!8630 = !DILocation(line: 1481, column: 5, scope: !2293)
!8631 = !DILocation(line: 1481, column: 11, scope: !2293)
!8632 = !DILocation(line: 1482, column: 5, scope: !2293)
!8633 = !DILocation(line: 1482, column: 11, scope: !2293)
!8634 = !DILocation(line: 1483, column: 5, scope: !2293)
!8635 = !DILocation(line: 1483, column: 10, scope: !2293)
!8636 = !DILocation(line: 1483, column: 34, scope: !2293)
!8637 = !DILocation(line: 1483, column: 16, scope: !2293)
!8638 = !DILocation(line: 1485, column: 9, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 1485, column: 9)
!8640 = !DILocation(line: 1485, column: 13, scope: !8639)
!8641 = !DILocation(line: 1485, column: 25, scope: !8639)
!8642 = !DILocation(line: 1485, column: 31, scope: !8639)
!8643 = !DILocation(line: 1485, column: 29, scope: !8639)
!8644 = !DILocation(line: 1485, column: 37, scope: !8639)
!8645 = !DILocation(line: 1485, column: 34, scope: !8639)
!8646 = !DILocation(line: 1486, column: 9, scope: !8639)
!8647 = !DILocation(line: 1486, column: 12, scope: !8639)
!8648 = !DILocation(line: 1486, column: 18, scope: !8639)
!8649 = !DILocation(line: 1485, column: 9, scope: !2293)
!8650 = !DILocation(line: 1487, column: 6, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 1487, column: 6)
!8652 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 1486, column: 37)
!8653 = !DILocation(line: 1487, column: 6, scope: !8652)
!8654 = !DILocation(line: 1487, column: 6, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 1487, column: 6)
!8656 = !DILocation(line: 1489, column: 5, scope: !8652)
!8657 = !DILocation(line: 1491, column: 33, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 1489, column: 12)
!8659 = !DILocation(line: 1491, column: 10, scope: !8658)
!8660 = !DILocation(line: 1490, column: 42, scope: !8658)
!8661 = !DILocation(line: 1493, column: 5, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 1493, column: 5)
!8663 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 1493, column: 5)
!8664 = !DILocation(line: 1493, column: 5, scope: !8663)
!8665 = !DILocation(line: 1493, column: 5, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 1493, column: 5)
!8667 = !DILocation(line: 1494, column: 4, scope: !2294)
!8668 = !DILocation(line: 1496, column: 4, scope: !2299)
!8669 = !DILocation(line: 1496, column: 4, scope: !2178)
!8670 = !DILocation(line: 1496, column: 4, scope: !2298)
!8671 = !DILocation(line: 1496, column: 4, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 1496, column: 4)
!8673 = !DILocation(line: 1496, column: 4, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 1496, column: 4)
!8675 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1496, column: 4)
!8676 = !DILocation(line: 1496, column: 4, scope: !8675)
!8677 = !DILocation(line: 1496, column: 4, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 1496, column: 4)
!8679 = !DILocation(line: 1496, column: 4, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 1496, column: 4)
!8681 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 1496, column: 4)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !3, line: 1496, column: 4)
!8683 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1496, column: 4)
!8684 = !{!3583, !2664, i64 24}
!8685 = !DILocation(line: 1496, column: 4, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 1496, column: 4)
!8687 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 1496, column: 4)
!8688 = !DILocation(line: 1496, column: 4, scope: !8687)
!8689 = !DILocation(line: 1496, column: 4, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 1496, column: 4)
!8691 = !DILocation(line: 1501, column: 4, scope: !2303)
!8692 = !DILocation(line: 1501, column: 4, scope: !2178)
!8693 = !DILocation(line: 1501, column: 4, scope: !2302)
!8694 = !DILocation(line: 1501, column: 4, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !2302, file: !3, line: 1501, column: 4)
!8696 = !DILocation(line: 1501, column: 4, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 1501, column: 4)
!8698 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1501, column: 4)
!8699 = !DILocation(line: 1501, column: 4, scope: !8698)
!8700 = !DILocation(line: 1501, column: 4, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 1501, column: 4)
!8702 = !DILocation(line: 1501, column: 4, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 1501, column: 4)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 1501, column: 4)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1501, column: 4)
!8706 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1501, column: 4)
!8707 = !{!3583, !2664, i64 32}
!8708 = !DILocation(line: 1501, column: 4, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 1501, column: 4)
!8710 = distinct !DILexicalBlock(scope: !2302, file: !3, line: 1501, column: 4)
!8711 = !DILocation(line: 1501, column: 4, scope: !8710)
!8712 = !DILocation(line: 1501, column: 4, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 1501, column: 4)
!8714 = !DILocation(line: 1506, column: 8, scope: !2307)
!8715 = !DILocation(line: 1506, column: 8, scope: !2178)
!8716 = !DILocation(line: 1507, column: 9, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 1507, column: 9)
!8718 = !DILocation(line: 1507, column: 9, scope: !2306)
!8719 = !DILocation(line: 1508, column: 30, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 1507, column: 33)
!8721 = !{!3583, !2792, i64 16}
!8722 = !DILocation(line: 1509, column: 6, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 1509, column: 6)
!8724 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 1509, column: 6)
!8725 = !DILocation(line: 1509, column: 6, scope: !8724)
!8726 = !DILocation(line: 1509, column: 6, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 1509, column: 6)
!8728 = !DILocation(line: 1511, column: 5, scope: !2306)
!8729 = !DILocation(line: 1511, column: 11, scope: !2306)
!8730 = !DILocation(line: 1512, column: 5, scope: !2306)
!8731 = !DILocation(line: 1512, column: 11, scope: !2306)
!8732 = !DILocation(line: 1513, column: 5, scope: !2306)
!8733 = !DILocation(line: 1513, column: 10, scope: !2306)
!8734 = !DILocation(line: 1513, column: 34, scope: !2306)
!8735 = !DILocation(line: 1513, column: 16, scope: !2306)
!8736 = !DILocation(line: 1515, column: 9, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 1515, column: 9)
!8738 = !DILocation(line: 1515, column: 13, scope: !8737)
!8739 = !DILocation(line: 1515, column: 25, scope: !8737)
!8740 = !DILocation(line: 1515, column: 31, scope: !8737)
!8741 = !DILocation(line: 1515, column: 29, scope: !8737)
!8742 = !DILocation(line: 1515, column: 37, scope: !8737)
!8743 = !DILocation(line: 1515, column: 34, scope: !8737)
!8744 = !DILocation(line: 1515, column: 9, scope: !2306)
!8745 = !DILocation(line: 1516, column: 6, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 1516, column: 6)
!8747 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 1515, column: 43)
!8748 = !DILocation(line: 1516, column: 6, scope: !8747)
!8749 = !DILocation(line: 1516, column: 6, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8746, file: !3, line: 1516, column: 6)
!8751 = !DILocation(line: 1518, column: 5, scope: !8747)
!8752 = !DILocation(line: 1519, column: 32, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 1518, column: 12)
!8754 = !DILocation(line: 1519, column: 30, scope: !8753)
!8755 = !DILocation(line: 1521, column: 5, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 1521, column: 5)
!8757 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 1521, column: 5)
!8758 = !DILocation(line: 1521, column: 5, scope: !8757)
!8759 = !DILocation(line: 1521, column: 5, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 1521, column: 5)
!8761 = !DILocation(line: 1522, column: 4, scope: !2307)
!8762 = !DILocation(line: 1524, column: 4, scope: !2312)
!8763 = !DILocation(line: 1524, column: 4, scope: !2178)
!8764 = !DILocation(line: 1524, column: 4, scope: !2311)
!8765 = !DILocation(line: 1524, column: 4, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !2311, file: !3, line: 1524, column: 4)
!8767 = !DILocation(line: 1524, column: 4, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 1524, column: 4)
!8769 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1524, column: 4)
!8770 = !DILocation(line: 1524, column: 4, scope: !8769)
!8771 = !DILocation(line: 1524, column: 4, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 1524, column: 4)
!8773 = !DILocation(line: 1524, column: 4, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 1524, column: 4)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 1524, column: 4)
!8776 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1524, column: 4)
!8777 = !DILocation(line: 1524, column: 4, scope: !8775)
!8778 = !DILocation(line: 1524, column: 4, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 1524, column: 4)
!8780 = !{!3577, !2664, i64 0}
!8781 = !DILocation(line: 1524, column: 4, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 1524, column: 4)
!8783 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 1524, column: 4)
!8784 = !DILocation(line: 1524, column: 4, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 1524, column: 4)
!8786 = distinct !DILexicalBlock(scope: !2311, file: !3, line: 1524, column: 4)
!8787 = !DILocation(line: 1524, column: 4, scope: !8786)
!8788 = !DILocation(line: 1524, column: 4, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 1524, column: 4)
!8790 = !DILocation(line: 1527, column: 4, scope: !2316)
!8791 = !DILocation(line: 1527, column: 4, scope: !2178)
!8792 = !DILocation(line: 1527, column: 4, scope: !2315)
!8793 = !DILocation(line: 1527, column: 4, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !2315, file: !3, line: 1527, column: 4)
!8795 = !DILocation(line: 1527, column: 4, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 1527, column: 4)
!8797 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 1527, column: 4)
!8798 = !DILocation(line: 1527, column: 4, scope: !8797)
!8799 = !DILocation(line: 1527, column: 4, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 1527, column: 4)
!8801 = !DILocation(line: 1527, column: 4, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 1527, column: 4)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 1527, column: 4)
!8804 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 1527, column: 4)
!8805 = !DILocation(line: 1527, column: 4, scope: !8803)
!8806 = !DILocation(line: 1527, column: 4, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 1527, column: 4)
!8808 = !{!3577, !2664, i64 8}
!8809 = !DILocation(line: 1527, column: 4, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 1527, column: 4)
!8811 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 1527, column: 4)
!8812 = !DILocation(line: 1527, column: 4, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 1527, column: 4)
!8814 = distinct !DILexicalBlock(scope: !2315, file: !3, line: 1527, column: 4)
!8815 = !DILocation(line: 1527, column: 4, scope: !8814)
!8816 = !DILocation(line: 1527, column: 4, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8813, file: !3, line: 1527, column: 4)
!8818 = !DILocation(line: 1530, column: 4, scope: !2320)
!8819 = !DILocation(line: 1530, column: 4, scope: !2178)
!8820 = !DILocation(line: 1530, column: 4, scope: !2319)
!8821 = !DILocation(line: 1530, column: 4, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 1530, column: 4)
!8823 = !DILocation(line: 1530, column: 4, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 1530, column: 4)
!8825 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 1530, column: 4)
!8826 = !DILocation(line: 1530, column: 4, scope: !8825)
!8827 = !DILocation(line: 1530, column: 4, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1530, column: 4)
!8829 = !DILocation(line: 1530, column: 4, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 1530, column: 4)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1530, column: 4)
!8832 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 1530, column: 4)
!8833 = !DILocation(line: 1530, column: 4, scope: !8831)
!8834 = !DILocation(line: 1530, column: 4, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 1530, column: 4)
!8836 = !{!3577, !2664, i64 16}
!8837 = !DILocation(line: 1530, column: 4, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 1530, column: 4)
!8839 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 1530, column: 4)
!8840 = !DILocation(line: 1530, column: 4, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 1530, column: 4)
!8842 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 1530, column: 4)
!8843 = !DILocation(line: 1530, column: 4, scope: !8842)
!8844 = !DILocation(line: 1530, column: 4, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1530, column: 4)
!8846 = !DILocation(line: 1533, column: 4, scope: !2324)
!8847 = !DILocation(line: 1533, column: 4, scope: !2178)
!8848 = !DILocation(line: 1533, column: 4, scope: !2323)
!8849 = !DILocation(line: 1533, column: 4, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 1533, column: 4)
!8851 = !DILocation(line: 1533, column: 4, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 1533, column: 4)
!8853 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 1533, column: 4)
!8854 = !DILocation(line: 1533, column: 4, scope: !8853)
!8855 = !DILocation(line: 1533, column: 4, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 1533, column: 4)
!8857 = !DILocation(line: 1533, column: 4, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 1533, column: 4)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 1533, column: 4)
!8860 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 1533, column: 4)
!8861 = !DILocation(line: 1533, column: 4, scope: !8859)
!8862 = !DILocation(line: 1533, column: 4, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 1533, column: 4)
!8864 = !{!3577, !2664, i64 24}
!8865 = !DILocation(line: 1533, column: 4, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 1533, column: 4)
!8867 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 1533, column: 4)
!8868 = !DILocation(line: 1533, column: 4, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 1533, column: 4)
!8870 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 1533, column: 4)
!8871 = !DILocation(line: 1533, column: 4, scope: !8870)
!8872 = !DILocation(line: 1533, column: 4, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 1533, column: 4)
!8874 = !DILocation(line: 1536, column: 4, scope: !2328)
!8875 = !DILocation(line: 1536, column: 4, scope: !2178)
!8876 = !DILocation(line: 1536, column: 4, scope: !2327)
!8877 = !DILocation(line: 1536, column: 4, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 1536, column: 4)
!8879 = !DILocation(line: 1536, column: 4, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 1536, column: 4)
!8881 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 1536, column: 4)
!8882 = !DILocation(line: 1536, column: 4, scope: !8881)
!8883 = !DILocation(line: 1536, column: 4, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 1536, column: 4)
!8885 = !DILocation(line: 1536, column: 4, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 1536, column: 4)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 1536, column: 4)
!8888 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 1536, column: 4)
!8889 = !DILocation(line: 1536, column: 4, scope: !8887)
!8890 = !DILocation(line: 1536, column: 4, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 1536, column: 4)
!8892 = !{!3577, !2664, i64 32}
!8893 = !DILocation(line: 1536, column: 4, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 1536, column: 4)
!8895 = !DILocation(line: 1536, column: 4, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1536, column: 4)
!8897 = !DILocation(line: 1536, column: 4, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1536, column: 4)
!8899 = !DILocation(line: 1536, column: 4, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 1536, column: 4)
!8901 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 1536, column: 4)
!8902 = !DILocation(line: 1536, column: 4, scope: !8901)
!8903 = !DILocation(line: 1536, column: 4, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 1536, column: 4)
!8905 = !DILocation(line: 1540, column: 8, scope: !2332)
!8906 = !DILocation(line: 1540, column: 8, scope: !2178)
!8907 = !DILocation(line: 1541, column: 9, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 1541, column: 9)
!8909 = !DILocation(line: 1541, column: 9, scope: !2331)
!8910 = !DILocation(line: 1542, column: 19, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 1541, column: 38)
!8912 = !DILocation(line: 1542, column: 6, scope: !8911)
!8913 = !DILocation(line: 1543, column: 6, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 1543, column: 6)
!8915 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 1543, column: 6)
!8916 = !DILocation(line: 1543, column: 6, scope: !8915)
!8917 = !DILocation(line: 1543, column: 6, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1543, column: 6)
!8919 = !DILocation(line: 1545, column: 5, scope: !2331)
!8920 = !DILocation(line: 1545, column: 10, scope: !2331)
!8921 = !DILocation(line: 1546, column: 5, scope: !2331)
!8922 = !DILocation(line: 1546, column: 17, scope: !2331)
!8923 = !DILocation(line: 1546, column: 41, scope: !2331)
!8924 = !DILocation(line: 1547, column: 5, scope: !2331)
!8925 = !DILocation(line: 1547, column: 12, scope: !2331)
!8926 = !DILocation(line: 1547, column: 24, scope: !2331)
!8927 = !DILocation(line: 1548, column: 5, scope: !2331)
!8928 = !DILocation(line: 1549, column: 6, scope: !2336)
!8929 = !DILocation(line: 1549, column: 13, scope: !2336)
!8930 = !DILocation(line: 1550, column: 6, scope: !2336)
!8931 = !DILocation(line: 1550, column: 13, scope: !2336)
!8932 = !DILocation(line: 1551, column: 6, scope: !2336)
!8933 = !DILocation(line: 1551, column: 13, scope: !2336)
!8934 = !DILocation(line: 1552, column: 12, scope: !2336)
!8935 = !DILocation(line: 1552, column: 10, scope: !2336)
!8936 = !DILocation(line: 1556, column: 11, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !2336, file: !3, line: 1556, column: 10)
!8938 = !DILocation(line: 1556, column: 10, scope: !2336)
!8939 = !DILocation(line: 1558, column: 11, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 1556, column: 16)
!8941 = !DILocation(line: 1558, column: 20, scope: !8940)
!8942 = !DILocation(line: 1559, column: 11, scope: !8940)
!8943 = !DILocation(line: 1559, column: 26, scope: !8940)
!8944 = !DILocation(line: 1559, column: 21, scope: !8940)
!8945 = !DILocation(line: 1557, column: 7, scope: !8940)
!8946 = !DILocation(line: 1560, column: 6, scope: !8940)
!8947 = !DILocation(line: 1561, column: 7, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 1561, column: 7)
!8949 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 1560, column: 13)
!8950 = !DILocation(line: 1561, column: 7, scope: !8949)
!8951 = !DILocation(line: 1561, column: 7, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 1561, column: 7)
!8953 = !DILocation(line: 1565, column: 5, scope: !2331)
!8954 = !DILocation(line: 1565, column: 5, scope: !2336)
!8955 = !DILocation(line: 1565, column: 15, scope: !2331)
!8956 = !DILocation(line: 1565, column: 19, scope: !2331)
!8957 = !DILocation(line: 1565, column: 22, scope: !2331)
!8958 = !DILocation(line: 1565, column: 32, scope: !2331)
!8959 = !DILocation(line: 0, scope: !2331)
!8960 = distinct !{!8960, !8927, !8961, !3182}
!8961 = !DILocation(line: 1565, column: 35, scope: !2331)
!8962 = !DILocation(line: 1566, column: 5, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 1566, column: 5)
!8964 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 1566, column: 5)
!8965 = !DILocation(line: 1566, column: 5, scope: !8964)
!8966 = !DILocation(line: 1566, column: 5, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 1566, column: 5)
!8968 = !DILocation(line: 1567, column: 4, scope: !2332)
!8969 = !DILocation(line: 1635, column: 8, scope: !2341)
!8970 = !DILocation(line: 1635, column: 8, scope: !2178)
!8971 = !DILocation(line: 1636, column: 5, scope: !2340)
!8972 = !DILocation(line: 1636, column: 10, scope: !2340)
!8973 = !DILocation(line: 1637, column: 10, scope: !2343)
!8974 = !DILocation(line: 1637, column: 14, scope: !2343)
!8975 = !DILocation(line: 1637, column: 21, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 1637, column: 5)
!8977 = !DILocation(line: 1637, column: 23, scope: !8976)
!8978 = !DILocation(line: 1637, column: 5, scope: !2343)
!8979 = !DILocation(line: 1638, column: 33, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 1638, column: 10)
!8981 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1637, column: 52)
!8982 = !DILocation(line: 1638, column: 18, scope: !8980)
!8983 = !DILocation(line: 1638, column: 36, scope: !8980)
!8984 = !DILocation(line: 1638, column: 39, scope: !8980)
!8985 = !DILocation(line: 1638, column: 10, scope: !8980)
!8986 = !DILocation(line: 1639, column: 10, scope: !8980)
!8987 = !DILocation(line: 1638, column: 10, scope: !8981)
!8988 = !DILocation(line: 1645, column: 17, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 1639, column: 16)
!8990 = !DILocation(line: 1645, column: 15, scope: !8989)
!8991 = !DILocation(line: 1646, column: 13, scope: !8989)
!8992 = !DILocation(line: 1647, column: 7, scope: !8989)
!8993 = !DILocation(line: 1649, column: 5, scope: !8981)
!8994 = !DILocation(line: 1637, column: 48, scope: !8976)
!8995 = !DILocation(line: 1637, column: 5, scope: !8976)
!8996 = distinct !{!8996, !8978, !8997, !3182}
!8997 = !DILocation(line: 1649, column: 5, scope: !2343)
!8998 = !DILocation(line: 1650, column: 10, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 1650, column: 9)
!9000 = !DILocation(line: 1650, column: 9, scope: !2340)
!9001 = !DILocation(line: 1651, column: 6, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 1651, column: 6)
!9003 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1650, column: 17)
!9004 = !DILocation(line: 1651, column: 6, scope: !9003)
!9005 = !DILocation(line: 1651, column: 6, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 1651, column: 6)
!9007 = !DILocation(line: 1653, column: 5, scope: !9003)
!9008 = !DILocation(line: 1654, column: 5, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 1654, column: 5)
!9010 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 1654, column: 5)
!9011 = !DILocation(line: 1654, column: 5, scope: !9010)
!9012 = !DILocation(line: 1654, column: 5, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 1654, column: 5)
!9014 = !DILocation(line: 1655, column: 4, scope: !2341)
!9015 = !DILocation(line: 1656, column: 8, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1656, column: 8)
!9017 = !DILocation(line: 1656, column: 8, scope: !2178)
!9018 = !DILocation(line: 1657, column: 9, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 1657, column: 9)
!9020 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 1656, column: 36)
!9021 = !DILocation(line: 1657, column: 9, scope: !9020)
!9022 = !DILocation(line: 1659, column: 10, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 1657, column: 36)
!9024 = !DILocation(line: 1660, column: 5, scope: !9023)
!9025 = !DILocation(line: 1660, column: 16, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 1660, column: 16)
!9027 = !DILocation(line: 1660, column: 16, scope: !9019)
!9028 = !DILocation(line: 1662, column: 10, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 1660, column: 42)
!9030 = !DILocation(line: 1663, column: 5, scope: !9029)
!9031 = !DILocation(line: 1663, column: 16, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 1663, column: 16)
!9033 = !DILocation(line: 1663, column: 16, scope: !9026)
!9034 = !DILocation(line: 1665, column: 10, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 1663, column: 43)
!9036 = !DILocation(line: 1666, column: 5, scope: !9035)
!9037 = !DILocation(line: 1667, column: 6, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 1667, column: 6)
!9039 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 1666, column: 12)
!9040 = !DILocation(line: 1667, column: 6, scope: !9039)
!9041 = !DILocation(line: 1667, column: 6, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 1667, column: 6)
!9043 = !DILocation(line: 1670, column: 5, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 1670, column: 5)
!9045 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 1670, column: 5)
!9046 = !DILocation(line: 1670, column: 5, scope: !9045)
!9047 = !DILocation(line: 1670, column: 5, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 1670, column: 5)
!9049 = !DILocation(line: 1698, column: 4, scope: !2346)
!9050 = !DILocation(line: 1698, column: 4, scope: !2178)
!9051 = !DILocation(line: 1698, column: 4, scope: !2345)
!9052 = !DILocation(line: 1698, column: 4, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 1698, column: 4)
!9054 = !DILocation(line: 1698, column: 4, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1698, column: 4)
!9056 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1698, column: 4)
!9057 = !DILocation(line: 1698, column: 4, scope: !9056)
!9058 = !DILocation(line: 1698, column: 4, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 1698, column: 4)
!9060 = !DILocation(line: 1698, column: 4, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1698, column: 4)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1698, column: 4)
!9063 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 1698, column: 4)
!9064 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1698, column: 4)
!9065 = !DILocation(line: 1698, column: 4, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1698, column: 4)
!9067 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 1698, column: 4)
!9068 = !DILocation(line: 1698, column: 4, scope: !9067)
!9069 = !DILocation(line: 1698, column: 4, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 1698, column: 4)
!9071 = !DILocation(line: 1701, column: 4, scope: !2350)
!9072 = !DILocation(line: 1701, column: 4, scope: !2178)
!9073 = !DILocation(line: 1701, column: 4, scope: !2349)
!9074 = !DILocation(line: 1701, column: 4, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 1701, column: 4)
!9076 = !DILocation(line: 1701, column: 4, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 1701, column: 4)
!9078 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 1701, column: 4)
!9079 = !DILocation(line: 1701, column: 4, scope: !9078)
!9080 = !DILocation(line: 1701, column: 4, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1701, column: 4)
!9082 = !DILocation(line: 1701, column: 4, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 1701, column: 4)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 1701, column: 4)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 1701, column: 4)
!9086 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 1701, column: 4)
!9087 = !DILocation(line: 1701, column: 4, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9089, file: !3, line: 1701, column: 4)
!9089 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 1701, column: 4)
!9090 = !DILocation(line: 1701, column: 4, scope: !9089)
!9091 = !DILocation(line: 1701, column: 4, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 1701, column: 4)
!9093 = !DILocation(line: 1705, column: 4, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1705, column: 4)
!9095 = !DILocation(line: 1705, column: 4, scope: !2178)
!9096 = !DILocation(line: 1705, column: 4, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1705, column: 4)
!9098 = !DILocation(line: 1725, column: 7, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !2179, file: !3, line: 1725, column: 7)
!9100 = !DILocation(line: 1725, column: 22, scope: !9099)
!9101 = !DILocation(line: 1725, column: 25, scope: !9099)
!9102 = !DILocation(line: 1725, column: 7, scope: !2179)
!9103 = !DILocation(line: 1726, column: 4, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 1725, column: 41)
!9105 = !DILocation(line: 1727, column: 3, scope: !9104)
!9106 = !DILocation(line: 1728, column: 2, scope: !2179)
!9107 = !DILocation(line: 1082, column: 41, scope: !2180)
!9108 = !DILocation(line: 1082, column: 2, scope: !2180)
!9109 = distinct !{!9109, !7373, !9110, !3182}
!9110 = !DILocation(line: 1728, column: 2, scope: !2181)
!9111 = !DILocation(line: 1729, column: 2, scope: !2129)
!9112 = !DILocation(line: 1730, column: 1, scope: !2129)
!9113 = distinct !DISubprogram(name: "malloc_conf_init_check_deps", scope: !3, file: !3, line: 1733, type: !5818, scopeLine: 1733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!9114 = !DILocation(line: 1734, column: 6, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 1734, column: 6)
!9116 = !DILocation(line: 1734, column: 26, scope: !9115)
!9117 = !DILocation(line: 1734, column: 30, scope: !9115)
!9118 = !DILocation(line: 1734, column: 6, scope: !9113)
!9119 = !DILocation(line: 1735, column: 3, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 1734, column: 46)
!9121 = !DILocation(line: 1737, column: 3, scope: !9120)
!9122 = !DILocation(line: 1740, column: 2, scope: !9113)
!9123 = !DILocation(line: 1741, column: 1, scope: !9113)
!9124 = distinct !DISubprogram(name: "obtain_malloc_conf", scope: !3, file: !3, line: 980, type: !9125, scopeLine: 980, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9127)
!9125 = !DISubroutineType(types: !9126)
!9126 = !{!508, !7, !531}
!9127 = !{!9128, !9129, !9130, !9131, !9134, !9135, !9136}
!9128 = !DILocalVariable(name: "which_source", arg: 1, scope: !9124, file: !3, line: 980, type: !7)
!9129 = !DILocalVariable(name: "buf", arg: 2, scope: !9124, file: !3, line: 980, type: !531)
!9130 = !DILocalVariable(name: "ret", scope: !9124, file: !3, line: 991, type: !508)
!9131 = !DILocalVariable(name: "linklen", scope: !9132, file: !3, line: 1006, type: !1132)
!9132 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 1005, column: 10)
!9133 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 992, column: 24)
!9134 = !DILocalVariable(name: "saved_errno", scope: !9132, file: !3, line: 1008, type: !390)
!9135 = !DILocalVariable(name: "linkname", scope: !9132, file: !3, line: 1009, type: !508)
!9136 = !DILocalVariable(name: "envname", scope: !9137, file: !3, line: 1037, type: !508)
!9137 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 1036, column: 12)
!9138 = !DILocation(line: 980, column: 29, scope: !9124)
!9139 = !DILocation(line: 980, column: 48, scope: !9124)
!9140 = !DILocation(line: 989, column: 2, scope: !9124)
!9141 = !DILocation(line: 989, column: 2, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 989, column: 2)
!9143 = !DILocation(line: 991, column: 2, scope: !9124)
!9144 = !DILocation(line: 991, column: 14, scope: !9124)
!9145 = !DILocation(line: 992, column: 10, scope: !9124)
!9146 = !DILocation(line: 992, column: 2, scope: !9124)
!9147 = !DILocation(line: 994, column: 7, scope: !9133)
!9148 = !DILocation(line: 995, column: 3, scope: !9133)
!9149 = !DILocation(line: 997, column: 7, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 997, column: 7)
!9151 = !DILocation(line: 997, column: 22, scope: !9150)
!9152 = !DILocation(line: 997, column: 7, scope: !9133)
!9153 = !DILocation(line: 999, column: 10, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 997, column: 31)
!9155 = !DILocation(line: 999, column: 8, scope: !9154)
!9156 = !DILocation(line: 1000, column: 3, scope: !9154)
!9157 = !DILocation(line: 1002, column: 8, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 1000, column: 10)
!9159 = !DILocation(line: 1004, column: 3, scope: !9133)
!9160 = !DILocation(line: 1006, column: 3, scope: !9132)
!9161 = !DILocation(line: 1006, column: 11, scope: !9132)
!9162 = !DILocation(line: 1008, column: 3, scope: !9132)
!9163 = !DILocation(line: 1008, column: 7, scope: !9132)
!9164 = !DILocation(line: 1008, column: 21, scope: !9132)
!9165 = !DILocation(line: 1009, column: 3, scope: !9132)
!9166 = !DILocation(line: 1009, column: 15, scope: !9132)
!9167 = !DILocation(line: 1022, column: 22, scope: !9132)
!9168 = !DILocation(line: 1022, column: 32, scope: !9132)
!9169 = !DILocation(line: 1022, column: 13, scope: !9132)
!9170 = !DILocation(line: 1022, column: 11, scope: !9132)
!9171 = !DILocation(line: 1026, column: 7, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 1026, column: 7)
!9173 = !DILocation(line: 1026, column: 15, scope: !9172)
!9174 = !DILocation(line: 1026, column: 7, scope: !9132)
!9175 = !DILocation(line: 1028, column: 12, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 1026, column: 22)
!9177 = !DILocation(line: 1030, column: 14, scope: !9176)
!9178 = !DILocation(line: 1030, column: 4, scope: !9176)
!9179 = !DILocation(line: 1031, column: 3, scope: !9176)
!9180 = !DILocation(line: 1033, column: 3, scope: !9132)
!9181 = !DILocation(line: 1033, column: 7, scope: !9132)
!9182 = !DILocation(line: 1033, column: 16, scope: !9132)
!9183 = !DILocation(line: 1034, column: 9, scope: !9132)
!9184 = !DILocation(line: 1034, column: 7, scope: !9132)
!9185 = !DILocation(line: 1036, column: 2, scope: !9133)
!9186 = !DILocation(line: 1037, column: 3, scope: !9137)
!9187 = !DILocation(line: 1037, column: 15, scope: !9137)
!9188 = !DILocation(line: 1045, column: 37, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 1045, column: 7)
!9190 = !DILocation(line: 1045, column: 14, scope: !9189)
!9191 = !DILocation(line: 1045, column: 12, scope: !9189)
!9192 = !DILocation(line: 1045, column: 47, scope: !9189)
!9193 = !DILocation(line: 1045, column: 7, scope: !9137)
!9194 = !DILocation(line: 1050, column: 3, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1045, column: 56)
!9196 = !DILocation(line: 1052, column: 8, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1050, column: 10)
!9198 = !DILocation(line: 1055, column: 2, scope: !9133)
!9199 = !DILocation(line: 1056, column: 9, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 1055, column: 12)
!9201 = !DILocation(line: 1056, column: 7, scope: !9200)
!9202 = !DILocation(line: 1057, column: 3, scope: !9200)
!9203 = !DILocation(line: 1059, column: 3, scope: !9133)
!9204 = !DILocation(line: 1059, column: 3, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 1059, column: 3)
!9206 = !DILocation(line: 1060, column: 7, scope: !9133)
!9207 = !DILocation(line: 1061, column: 2, scope: !9133)
!9208 = !DILocation(line: 1062, column: 9, scope: !9124)
!9209 = !DILocation(line: 1063, column: 1, scope: !9124)
!9210 = !DILocation(line: 1062, column: 2, scope: !9124)
!9211 = distinct !DISubprogram(name: "malloc_conf_next", scope: !3, file: !3, line: 862, type: !9212, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9214)
!9212 = !DISubroutineType(types: !9213)
!9213 = !{!389, !2164, !2164, !556, !2164, !556}
!9214 = !{!9215, !9216, !9217, !9218, !9219, !9220, !9221}
!9215 = !DILocalVariable(name: "opts_p", arg: 1, scope: !9211, file: !3, line: 862, type: !2164)
!9216 = !DILocalVariable(name: "k_p", arg: 2, scope: !9211, file: !3, line: 862, type: !2164)
!9217 = !DILocalVariable(name: "klen_p", arg: 3, scope: !9211, file: !3, line: 862, type: !556)
!9218 = !DILocalVariable(name: "v_p", arg: 4, scope: !9211, file: !3, line: 863, type: !2164)
!9219 = !DILocalVariable(name: "vlen_p", arg: 5, scope: !9211, file: !3, line: 863, type: !556)
!9220 = !DILocalVariable(name: "accept", scope: !9211, file: !3, line: 864, type: !389)
!9221 = !DILocalVariable(name: "opts", scope: !9211, file: !3, line: 865, type: !508)
!9222 = !DILocation(line: 862, column: 31, scope: !9211)
!9223 = !DILocation(line: 862, column: 52, scope: !9211)
!9224 = !DILocation(line: 862, column: 65, scope: !9211)
!9225 = !DILocation(line: 863, column: 18, scope: !9211)
!9226 = !DILocation(line: 863, column: 31, scope: !9211)
!9227 = !DILocation(line: 864, column: 2, scope: !9211)
!9228 = !DILocation(line: 864, column: 7, scope: !9211)
!9229 = !DILocation(line: 865, column: 2, scope: !9211)
!9230 = !DILocation(line: 865, column: 14, scope: !9211)
!9231 = !DILocation(line: 865, column: 22, scope: !9211)
!9232 = !DILocation(line: 865, column: 21, scope: !9211)
!9233 = !DILocation(line: 867, column: 9, scope: !9211)
!9234 = !DILocation(line: 867, column: 3, scope: !9211)
!9235 = !DILocation(line: 867, column: 7, scope: !9211)
!9236 = !DILocation(line: 869, column: 14, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 869, column: 2)
!9238 = !DILocation(line: 869, column: 7, scope: !9237)
!9239 = !DILocation(line: 869, column: 24, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 869, column: 2)
!9241 = !DILocation(line: 869, column: 23, scope: !9240)
!9242 = !DILocation(line: 869, column: 2, scope: !9237)
!9243 = !DILocation(line: 870, column: 12, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 869, column: 33)
!9245 = !DILocation(line: 870, column: 11, scope: !9244)
!9246 = !DILocation(line: 870, column: 3, scope: !9244)
!9247 = !DILocation(line: 884, column: 8, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9244, file: !3, line: 870, column: 18)
!9249 = !DILocation(line: 885, column: 4, scope: !9248)
!9250 = !DILocation(line: 887, column: 8, scope: !9248)
!9251 = !DILocation(line: 888, column: 25, scope: !9248)
!9252 = !DILocation(line: 888, column: 14, scope: !9248)
!9253 = !DILocation(line: 888, column: 30, scope: !9248)
!9254 = !DILocation(line: 888, column: 48, scope: !9248)
!9255 = !DILocation(line: 888, column: 47, scope: !9248)
!9256 = !DILocation(line: 888, column: 36, scope: !9248)
!9257 = !DILocation(line: 888, column: 34, scope: !9248)
!9258 = !DILocation(line: 888, column: 5, scope: !9248)
!9259 = !DILocation(line: 888, column: 12, scope: !9248)
!9260 = !DILocation(line: 889, column: 11, scope: !9248)
!9261 = !DILocation(line: 889, column: 5, scope: !9248)
!9262 = !DILocation(line: 889, column: 9, scope: !9248)
!9263 = !DILocation(line: 890, column: 11, scope: !9248)
!9264 = !DILocation(line: 891, column: 4, scope: !9248)
!9265 = !DILocation(line: 893, column: 8, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 893, column: 8)
!9267 = !DILocation(line: 893, column: 17, scope: !9266)
!9268 = !DILocation(line: 893, column: 16, scope: !9266)
!9269 = !DILocation(line: 893, column: 13, scope: !9266)
!9270 = !DILocation(line: 893, column: 8, scope: !9248)
!9271 = !DILocation(line: 894, column: 5, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 893, column: 25)
!9273 = !DILocation(line: 896, column: 20, scope: !9272)
!9274 = !DILocation(line: 897, column: 4, scope: !9272)
!9275 = !DILocation(line: 898, column: 4, scope: !9248)
!9276 = !DILocation(line: 900, column: 4, scope: !9248)
!9277 = !DILocation(line: 901, column: 19, scope: !9248)
!9278 = !DILocation(line: 902, column: 4, scope: !9248)
!9279 = !DILocation(line: 869, column: 2, scope: !9240)
!9280 = distinct !{!9280, !9242, !9281, !3182}
!9281 = !DILocation(line: 904, column: 2, scope: !9237)
!9282 = !DILocation(line: 906, column: 14, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 906, column: 2)
!9284 = !DILocation(line: 906, column: 7, scope: !9283)
!9285 = !DILocation(line: 906, column: 24, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 906, column: 2)
!9287 = !DILocation(line: 906, column: 23, scope: !9286)
!9288 = !DILocation(line: 906, column: 2, scope: !9283)
!9289 = !DILocation(line: 907, column: 12, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 906, column: 33)
!9291 = !DILocation(line: 907, column: 11, scope: !9290)
!9292 = !DILocation(line: 907, column: 3, scope: !9290)
!9293 = !DILocation(line: 909, column: 8, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 907, column: 18)
!9295 = !DILocation(line: 917, column: 9, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 917, column: 8)
!9297 = !DILocation(line: 917, column: 8, scope: !9296)
!9298 = !DILocation(line: 917, column: 14, scope: !9296)
!9299 = !DILocation(line: 917, column: 8, scope: !9294)
!9300 = !DILocation(line: 918, column: 5, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 917, column: 23)
!9302 = !DILocation(line: 920, column: 20, scope: !9301)
!9303 = !DILocation(line: 921, column: 4, scope: !9301)
!9304 = !DILocation(line: 922, column: 25, scope: !9294)
!9305 = !DILocation(line: 922, column: 14, scope: !9294)
!9306 = !DILocation(line: 922, column: 30, scope: !9294)
!9307 = !DILocation(line: 922, column: 48, scope: !9294)
!9308 = !DILocation(line: 922, column: 47, scope: !9294)
!9309 = !DILocation(line: 922, column: 36, scope: !9294)
!9310 = !DILocation(line: 922, column: 34, scope: !9294)
!9311 = !DILocation(line: 922, column: 5, scope: !9294)
!9312 = !DILocation(line: 922, column: 12, scope: !9294)
!9313 = !DILocation(line: 923, column: 11, scope: !9294)
!9314 = !DILocation(line: 924, column: 4, scope: !9294)
!9315 = !DILocation(line: 926, column: 25, scope: !9294)
!9316 = !DILocation(line: 926, column: 14, scope: !9294)
!9317 = !DILocation(line: 926, column: 44, scope: !9294)
!9318 = !DILocation(line: 926, column: 43, scope: !9294)
!9319 = !DILocation(line: 926, column: 32, scope: !9294)
!9320 = !DILocation(line: 926, column: 30, scope: !9294)
!9321 = !DILocation(line: 926, column: 5, scope: !9294)
!9322 = !DILocation(line: 926, column: 12, scope: !9294)
!9323 = !DILocation(line: 927, column: 11, scope: !9294)
!9324 = !DILocation(line: 928, column: 4, scope: !9294)
!9325 = !DILocation(line: 930, column: 8, scope: !9294)
!9326 = !DILocation(line: 931, column: 4, scope: !9294)
!9327 = !DILocation(line: 906, column: 2, scope: !9286)
!9328 = distinct !{!9328, !9288, !9329, !3182}
!9329 = !DILocation(line: 933, column: 2, scope: !9283)
!9330 = !DILocation(line: 935, column: 12, scope: !9211)
!9331 = !DILocation(line: 935, column: 3, scope: !9211)
!9332 = !DILocation(line: 935, column: 10, scope: !9211)
!9333 = !DILocation(line: 936, column: 2, scope: !9211)
!9334 = !DILocation(line: 937, column: 1, scope: !9211)
!9335 = !DISubprogram(name: "strncmp", scope: !9336, file: !9336, line: 159, type: !9337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9336 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "f443da8025a0b7c1498fb6c554ec788d")
!9337 = !DISubroutineType(types: !9338)
!9338 = !{!390, !508, !508, !387}
!9339 = distinct !DISubprogram(name: "malloc_conf_error", scope: !3, file: !3, line: 948, type: !9340, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9342)
!9340 = !DISubroutineType(types: !9341)
!9341 = !{null, !508, !508, !387, !508, !387}
!9342 = !{!9343, !9344, !9345, !9346, !9347, !9348}
!9343 = !DILocalVariable(name: "msg", arg: 1, scope: !9339, file: !3, line: 948, type: !508)
!9344 = !DILocalVariable(name: "k", arg: 2, scope: !9339, file: !3, line: 948, type: !508)
!9345 = !DILocalVariable(name: "klen", arg: 3, scope: !9339, file: !3, line: 948, type: !387)
!9346 = !DILocalVariable(name: "v", arg: 4, scope: !9339, file: !3, line: 948, type: !508)
!9347 = !DILocalVariable(name: "vlen", arg: 5, scope: !9339, file: !3, line: 949, type: !387)
!9348 = !DILocalVariable(name: "experimental", scope: !9339, file: !3, line: 953, type: !508)
!9349 = !DILocation(line: 948, column: 31, scope: !9339)
!9350 = !DILocation(line: 948, column: 48, scope: !9339)
!9351 = !DILocation(line: 948, column: 58, scope: !9339)
!9352 = !DILocation(line: 948, column: 76, scope: !9339)
!9353 = !DILocation(line: 949, column: 12, scope: !9339)
!9354 = !DILocation(line: 950, column: 47, scope: !9339)
!9355 = !DILocation(line: 950, column: 57, scope: !9339)
!9356 = !DILocation(line: 950, column: 52, scope: !9339)
!9357 = !DILocation(line: 950, column: 63, scope: !9339)
!9358 = !DILocation(line: 951, column: 11, scope: !9339)
!9359 = !DILocation(line: 951, column: 6, scope: !9339)
!9360 = !DILocation(line: 951, column: 17, scope: !9339)
!9361 = !DILocation(line: 950, column: 2, scope: !9339)
!9362 = !DILocation(line: 953, column: 2, scope: !9339)
!9363 = !DILocation(line: 953, column: 14, scope: !9339)
!9364 = !DILocation(line: 954, column: 14, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9339, file: !3, line: 954, column: 6)
!9366 = !DILocation(line: 954, column: 17, scope: !9365)
!9367 = !DILocation(line: 954, column: 38, scope: !9365)
!9368 = !DILocation(line: 954, column: 31, scope: !9365)
!9369 = !DILocation(line: 954, column: 6, scope: !9365)
!9370 = !DILocation(line: 954, column: 53, scope: !9365)
!9371 = !DILocation(line: 954, column: 6, scope: !9339)
!9372 = !DILocation(line: 956, column: 3, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 954, column: 59)
!9374 = !DILocation(line: 958, column: 17, scope: !9339)
!9375 = !DILocation(line: 959, column: 1, scope: !9339)
!9376 = !DISubprogram(name: "extent_dss_prec_set", scope: !130, file: !130, line: 19, type: !9377, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!389, !9379}
!9379 = !DIDerivedType(tag: DW_TAG_typedef, name: "dss_prec_t", file: !130, line: 10, baseType: !129)
!9380 = distinct !DISubprogram(name: "set_errno", scope: !9381, file: !9381, line: 47, type: !9382, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9384)
!9381 = !DIFile(filename: "include/jemalloc/internal/util.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "38254219eacd30bc6d7399cbb22648e1")
!9382 = !DISubroutineType(types: !9383)
!9383 = !{null, !390}
!9384 = !{!9385}
!9385 = !DILocalVariable(name: "errnum", arg: 1, scope: !9380, file: !9381, line: 47, type: !390)
!9386 = !DILocation(line: 47, column: 15, scope: !9380)
!9387 = !DILocation(line: 51, column: 10, scope: !9380)
!9388 = !DILocation(line: 51, column: 2, scope: !9380)
!9389 = !DILocation(line: 51, column: 8, scope: !9380)
!9390 = !DILocation(line: 53, column: 1, scope: !9380)
!9391 = !DISubprogram(name: "malloc_strtoumax", scope: !7305, file: !7305, line: 47, type: !9392, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{!1410, !9394, !9395, !390}
!9394 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !508)
!9395 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !9396)
!9396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!9397 = distinct !DISubprogram(name: "get_errno", scope: !9381, file: !9381, line: 57, type: !9398, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!9398 = !DISubroutineType(types: !9399)
!9399 = !{!390}
!9400 = !DILocation(line: 61, column: 9, scope: !9397)
!9401 = !DILocation(line: 61, column: 2, scope: !9397)
!9402 = !DISubprogram(name: "fxp_parse", scope: !1274, file: !1274, line: 123, type: !9403, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9403 = !DISubroutineType(types: !9404)
!9404 = !{!389, !9405, !508, !9396}
!9405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!9406 = distinct !DISubprogram(name: "malloc_conf_multi_sizes_next", scope: !3, file: !3, line: 819, type: !9407, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9409)
!9407 = !DISubroutineType(types: !9408)
!9408 = !{!389, !2164, !556, !556, !556, !556}
!9409 = !{!9410, !9411, !9412, !9413, !9414, !9415, !9416, !9417}
!9410 = !DILocalVariable(name: "slab_size_segment_cur", arg: 1, scope: !9406, file: !3, line: 819, type: !2164)
!9411 = !DILocalVariable(name: "vlen_left", arg: 2, scope: !9406, file: !3, line: 820, type: !556)
!9412 = !DILocalVariable(name: "slab_start", arg: 3, scope: !9406, file: !3, line: 820, type: !556)
!9413 = !DILocalVariable(name: "slab_end", arg: 4, scope: !9406, file: !3, line: 820, type: !556)
!9414 = !DILocalVariable(name: "new_size", arg: 5, scope: !9406, file: !3, line: 820, type: !556)
!9415 = !DILocalVariable(name: "cur", scope: !9406, file: !3, line: 821, type: !508)
!9416 = !DILocalVariable(name: "end", scope: !9406, file: !3, line: 822, type: !531)
!9417 = !DILocalVariable(name: "um", scope: !9406, file: !3, line: 823, type: !1410)
!9418 = !DILocation(line: 819, column: 43, scope: !9406)
!9419 = !DILocation(line: 820, column: 13, scope: !9406)
!9420 = !DILocation(line: 820, column: 32, scope: !9406)
!9421 = !DILocation(line: 820, column: 52, scope: !9406)
!9422 = !DILocation(line: 820, column: 70, scope: !9406)
!9423 = !DILocation(line: 821, column: 2, scope: !9406)
!9424 = !DILocation(line: 821, column: 14, scope: !9406)
!9425 = !DILocation(line: 821, column: 21, scope: !9406)
!9426 = !DILocation(line: 821, column: 20, scope: !9406)
!9427 = !DILocation(line: 822, column: 2, scope: !9406)
!9428 = !DILocation(line: 822, column: 8, scope: !9406)
!9429 = !DILocation(line: 823, column: 2, scope: !9406)
!9430 = !DILocation(line: 823, column: 12, scope: !9406)
!9431 = !DILocation(line: 825, column: 2, scope: !9406)
!9432 = !DILocation(line: 828, column: 24, scope: !9406)
!9433 = !DILocation(line: 828, column: 7, scope: !9406)
!9434 = !DILocation(line: 828, column: 5, scope: !9406)
!9435 = !DILocation(line: 829, column: 6, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 829, column: 6)
!9437 = !DILocation(line: 829, column: 18, scope: !9436)
!9438 = !DILocation(line: 829, column: 23, scope: !9436)
!9439 = !DILocation(line: 829, column: 27, scope: !9436)
!9440 = !DILocation(line: 829, column: 26, scope: !9436)
!9441 = !DILocation(line: 829, column: 31, scope: !9436)
!9442 = !DILocation(line: 829, column: 6, scope: !9406)
!9443 = !DILocation(line: 830, column: 3, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 829, column: 39)
!9445 = !DILocation(line: 832, column: 24, scope: !9406)
!9446 = !DILocation(line: 832, column: 3, scope: !9406)
!9447 = !DILocation(line: 832, column: 14, scope: !9406)
!9448 = !DILocation(line: 833, column: 8, scope: !9406)
!9449 = !DILocation(line: 833, column: 12, scope: !9406)
!9450 = !DILocation(line: 833, column: 6, scope: !9406)
!9451 = !DILocation(line: 836, column: 24, scope: !9406)
!9452 = !DILocation(line: 836, column: 7, scope: !9406)
!9453 = !DILocation(line: 836, column: 5, scope: !9406)
!9454 = !DILocation(line: 837, column: 6, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 837, column: 6)
!9456 = !DILocation(line: 837, column: 18, scope: !9455)
!9457 = !DILocation(line: 837, column: 23, scope: !9455)
!9458 = !DILocation(line: 837, column: 27, scope: !9455)
!9459 = !DILocation(line: 837, column: 26, scope: !9455)
!9460 = !DILocation(line: 837, column: 31, scope: !9455)
!9461 = !DILocation(line: 837, column: 6, scope: !9406)
!9462 = !DILocation(line: 838, column: 3, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9455, file: !3, line: 837, column: 39)
!9464 = !DILocation(line: 840, column: 22, scope: !9406)
!9465 = !DILocation(line: 840, column: 3, scope: !9406)
!9466 = !DILocation(line: 840, column: 12, scope: !9406)
!9467 = !DILocation(line: 841, column: 8, scope: !9406)
!9468 = !DILocation(line: 841, column: 12, scope: !9406)
!9469 = !DILocation(line: 841, column: 6, scope: !9406)
!9470 = !DILocation(line: 844, column: 24, scope: !9406)
!9471 = !DILocation(line: 844, column: 7, scope: !9406)
!9472 = !DILocation(line: 844, column: 5, scope: !9406)
!9473 = !DILocation(line: 845, column: 6, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 845, column: 6)
!9475 = !DILocation(line: 845, column: 18, scope: !9474)
!9476 = !DILocation(line: 845, column: 6, scope: !9406)
!9477 = !DILocation(line: 846, column: 3, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 845, column: 24)
!9479 = !DILocation(line: 848, column: 22, scope: !9406)
!9480 = !DILocation(line: 848, column: 3, scope: !9406)
!9481 = !DILocation(line: 848, column: 12, scope: !9406)
!9482 = !DILocation(line: 851, column: 7, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 851, column: 6)
!9484 = !DILocation(line: 851, column: 6, scope: !9483)
!9485 = !DILocation(line: 851, column: 11, scope: !9483)
!9486 = !DILocation(line: 851, column: 6, scope: !9406)
!9487 = !DILocation(line: 852, column: 6, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 851, column: 19)
!9489 = !DILocation(line: 853, column: 2, scope: !9488)
!9490 = !DILocation(line: 855, column: 16, scope: !9406)
!9491 = !DILocation(line: 855, column: 23, scope: !9406)
!9492 = !DILocation(line: 855, column: 22, scope: !9406)
!9493 = !DILocation(line: 855, column: 20, scope: !9406)
!9494 = !DILocation(line: 855, column: 3, scope: !9406)
!9495 = !DILocation(line: 855, column: 13, scope: !9406)
!9496 = !DILocation(line: 856, column: 27, scope: !9406)
!9497 = !DILocation(line: 856, column: 3, scope: !9406)
!9498 = !DILocation(line: 856, column: 25, scope: !9406)
!9499 = !DILocation(line: 858, column: 2, scope: !9406)
!9500 = !DILocation(line: 859, column: 1, scope: !9406)
!9501 = !DISubprogram(name: "bin_update_shard_size", scope: !1301, file: !1301, line: 52, type: !9502, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9502 = !DISubroutineType(types: !9503)
!9503 = !{!389, !2163, !387, !387, !387}
!9504 = distinct !DISubprogram(name: "init_opt_stats_opts", scope: !3, file: !3, line: 793, type: !9505, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9507)
!9505 = !DISubroutineType(types: !9506)
!9506 = !{null, !508, !387, !531}
!9507 = !{!9508, !9509, !9510, !9511, !9512}
!9508 = !DILocalVariable(name: "v", arg: 1, scope: !9504, file: !3, line: 793, type: !508)
!9509 = !DILocalVariable(name: "vlen", arg: 2, scope: !9504, file: !3, line: 793, type: !387)
!9510 = !DILocalVariable(name: "dest", arg: 3, scope: !9504, file: !3, line: 793, type: !531)
!9511 = !DILocalVariable(name: "opts_len", scope: !9504, file: !3, line: 794, type: !387)
!9512 = !DILocalVariable(name: "i", scope: !9513, file: !3, line: 797, type: !387)
!9513 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 797, column: 2)
!9514 = !DILocation(line: 793, column: 33, scope: !9504)
!9515 = !DILocation(line: 793, column: 43, scope: !9504)
!9516 = !DILocation(line: 793, column: 55, scope: !9504)
!9517 = !DILocation(line: 794, column: 2, scope: !9504)
!9518 = !DILocation(line: 794, column: 9, scope: !9504)
!9519 = !DILocation(line: 794, column: 27, scope: !9504)
!9520 = !DILocation(line: 794, column: 20, scope: !9504)
!9521 = !DILocation(line: 795, column: 2, scope: !9504)
!9522 = !DILocation(line: 795, column: 2, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 795, column: 2)
!9524 = !DILocation(line: 797, column: 7, scope: !9513)
!9525 = !DILocation(line: 797, column: 14, scope: !9513)
!9526 = !DILocation(line: 797, column: 21, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 797, column: 2)
!9528 = !DILocation(line: 797, column: 25, scope: !9527)
!9529 = !DILocation(line: 797, column: 23, scope: !9527)
!9530 = !DILocation(line: 797, column: 2, scope: !9513)
!9531 = !DILocation(line: 797, column: 2, scope: !9527)
!9532 = !DILocation(line: 798, column: 11, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9527, file: !3, line: 797, column: 36)
!9534 = !DILocation(line: 798, column: 13, scope: !9533)
!9535 = !DILocation(line: 798, column: 3, scope: !9533)
!9536 = !DILocation(line: 802, column: 12, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 798, column: 17)
!9538 = !DILocation(line: 805, column: 14, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 805, column: 7)
!9540 = !DILocation(line: 805, column: 20, scope: !9539)
!9541 = !DILocation(line: 805, column: 22, scope: !9539)
!9542 = !DILocation(line: 805, column: 7, scope: !9539)
!9543 = !DILocation(line: 805, column: 26, scope: !9539)
!9544 = !DILocation(line: 805, column: 7, scope: !9533)
!9545 = !DILocation(line: 807, column: 4, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 805, column: 35)
!9547 = !DILocation(line: 810, column: 22, scope: !9533)
!9548 = !DILocation(line: 810, column: 24, scope: !9533)
!9549 = !DILocation(line: 810, column: 3, scope: !9533)
!9550 = !DILocation(line: 810, column: 16, scope: !9533)
!9551 = !DILocation(line: 810, column: 20, scope: !9533)
!9552 = !DILocation(line: 811, column: 3, scope: !9533)
!9553 = !DILocation(line: 811, column: 8, scope: !9533)
!9554 = !DILocation(line: 811, column: 18, scope: !9533)
!9555 = !DILocation(line: 812, column: 3, scope: !9533)
!9556 = !DILocation(line: 812, column: 3, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 812, column: 3)
!9558 = !DILocation(line: 813, column: 2, scope: !9533)
!9559 = !DILocation(line: 797, column: 32, scope: !9527)
!9560 = distinct !{!9560, !9530, !9561, !3182}
!9561 = !DILocation(line: 813, column: 2, scope: !9513)
!9562 = !DILocation(line: 814, column: 2, scope: !9504)
!9563 = !DILocation(line: 814, column: 2, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 814, column: 2)
!9565 = !DILocation(line: 815, column: 1, scope: !9504)
!9566 = distinct !DISubprogram(name: "fxp_mul_frac", scope: !1274, file: !1274, line: 99, type: !9567, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9569)
!9567 = !DISubroutineType(types: !9568)
!9568 = !{!387, !387, !1273}
!9569 = !{!9570, !9571, !9572}
!9570 = !DILocalVariable(name: "x_orig", arg: 1, scope: !9566, file: !1274, line: 99, type: !387)
!9571 = !DILocalVariable(name: "frac", arg: 2, scope: !9566, file: !1274, line: 99, type: !1273)
!9572 = !DILocalVariable(name: "x", scope: !9566, file: !1274, line: 105, type: !408)
!9573 = !DILocation(line: 99, column: 21, scope: !9566)
!9574 = !DILocation(line: 99, column: 35, scope: !9566)
!9575 = !DILocation(line: 100, column: 2, scope: !9566)
!9576 = !DILocation(line: 100, column: 2, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9566, file: !1274, line: 100, column: 2)
!9578 = !DILocation(line: 105, column: 2, scope: !9566)
!9579 = !DILocation(line: 105, column: 11, scope: !9566)
!9580 = !DILocation(line: 105, column: 25, scope: !9566)
!9581 = !DILocation(line: 112, column: 6, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9566, file: !1274, line: 112, column: 6)
!9583 = !DILocation(line: 112, column: 8, scope: !9582)
!9584 = !DILocation(line: 112, column: 6, scope: !9566)
!9585 = !DILocation(line: 113, column: 20, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9582, file: !1274, line: 112, column: 24)
!9587 = !DILocation(line: 113, column: 24, scope: !9586)
!9588 = !DILocation(line: 113, column: 22, scope: !9586)
!9589 = !DILocation(line: 113, column: 30, scope: !9586)
!9590 = !DILocation(line: 113, column: 3, scope: !9586)
!9591 = !DILocation(line: 115, column: 20, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9582, file: !1274, line: 114, column: 9)
!9593 = !DILocation(line: 115, column: 22, scope: !9592)
!9594 = !DILocation(line: 115, column: 41, scope: !9592)
!9595 = !DILocation(line: 115, column: 31, scope: !9592)
!9596 = !DILocation(line: 115, column: 29, scope: !9592)
!9597 = !DILocation(line: 115, column: 3, scope: !9592)
!9598 = !DILocation(line: 117, column: 1, scope: !9566)
!9599 = !DISubprogram(name: "sc_data_init", scope: !2134, file: !2134, line: 348, type: !7171, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9600 = !DISubprogram(name: "sc_data_update_slab_size", scope: !2134, file: !2134, line: 353, type: !9601, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{null, !2132, !387, !387, !390}
!9603 = distinct !DISubprogram(name: "atomic_store_b", scope: !459, file: !459, line: 89, type: !9604, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9607)
!9604 = !DISubroutineType(types: !9605)
!9605 = !{null, !9606, !389, !2804}
!9606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!9607 = !{!9608, !9609, !9610}
!9608 = !DILocalVariable(name: "a", arg: 1, scope: !9603, file: !459, line: 89, type: !9606)
!9609 = !DILocalVariable(name: "val", arg: 2, scope: !9603, file: !459, line: 89, type: !389)
!9610 = !DILocalVariable(name: "mo", arg: 3, scope: !9603, file: !459, line: 89, type: !2804)
!9611 = !DILocation(line: 89, column: 1, scope: !9603)
!9612 = !DISubprogram(name: "__errno_location", scope: !9613, file: !9613, line: 37, type: !9614, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9613 = !DIFile(filename: "/usr/include/errno.h", directory: "", checksumkind: CSK_MD5, checksum: "01c14bf4ab600a3884f5da68eb763170")
!9614 = !DISubroutineType(types: !9615)
!9615 = !{!9616}
!9616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!9617 = !DISubprogram(name: "readlink", scope: !1425, file: !1425, line: 838, type: !9618, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9618 = !DISubroutineType(types: !9619)
!9619 = !{!1132, !9394, !9620, !387}
!9620 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !531)
!9621 = distinct !DISubprogram(name: "jemalloc_secure_getenv", scope: !3, file: !3, line: 703, type: !9622, scopeLine: 703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9624)
!9622 = !DISubroutineType(types: !9623)
!9623 = !{!531, !508}
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "name", arg: 1, scope: !9621, file: !3, line: 703, type: !508)
!9626 = !DILocation(line: 703, column: 36, scope: !9621)
!9627 = !DILocation(line: 705, column: 23, scope: !9621)
!9628 = !DILocation(line: 705, column: 9, scope: !9621)
!9629 = !DILocation(line: 705, column: 2, scope: !9621)
!9630 = !DISubprogram(name: "secure_getenv", scope: !7223, file: !7223, line: 646, type: !9622, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9631 = !DISubprogram(name: "strlen", scope: !9336, file: !9336, line: 407, type: !9632, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9632 = !DISubroutineType(types: !9633)
!9633 = !{!386, !508}
!9634 = !DISubprogram(name: "strchr", scope: !9336, file: !9336, line: 246, type: !9635, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9635 = !DISubroutineType(types: !9636)
!9636 = !{!531, !508, !390}
!9637 = distinct !DISubprogram(name: "atomic_enum_to_builtin", scope: !80, file: !80, line: 17, type: !9638, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9640)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{!390, !2804}
!9640 = !{!9641}
!9641 = !DILocalVariable(name: "mo", arg: 1, scope: !9637, file: !80, line: 17, type: !2804)
!9642 = !DILocation(line: 17, column: 46, scope: !9637)
!9643 = !DILocation(line: 18, column: 10, scope: !9637)
!9644 = !DILocation(line: 18, column: 2, scope: !9637)
!9645 = !DILocation(line: 20, column: 3, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9637, file: !80, line: 18, column: 14)
!9647 = !DILocation(line: 22, column: 3, scope: !9646)
!9648 = !DILocation(line: 24, column: 3, scope: !9646)
!9649 = !DILocation(line: 26, column: 3, scope: !9646)
!9650 = !DILocation(line: 28, column: 3, scope: !9646)
!9651 = !DILocation(line: 31, column: 2, scope: !9637)
!9652 = !DILocation(line: 31, column: 2, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9637, file: !80, line: 31, column: 2)
!9654 = !DILocation(line: 32, column: 1, scope: !9637)
!9655 = !DISubprogram(name: "tcache_stats_merge", scope: !6724, file: !6724, line: 51, type: !9656, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{null, !391, !740, !594}
!9658 = distinct !DISubprogram(name: "atomic_load_b", scope: !459, file: !459, line: 89, type: !9659, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9663)
!9659 = !DISubroutineType(types: !9660)
!9660 = !{!389, !9661, !2804}
!9661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9662, size: 64)
!9662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !499)
!9663 = !{!9664, !9665, !9666}
!9664 = !DILocalVariable(name: "a", arg: 1, scope: !9658, file: !459, line: 89, type: !9661)
!9665 = !DILocalVariable(name: "mo", arg: 2, scope: !9658, file: !459, line: 89, type: !2804)
!9666 = !DILocalVariable(name: "result", scope: !9658, file: !459, line: 89, type: !389)
!9667 = !DILocation(line: 89, column: 1, scope: !9658)
!9668 = distinct !DISubprogram(name: "tsdn_null", scope: !145, file: !145, line: 287, type: !9669, scopeLine: 287, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9673)
!9669 = !DISubroutineType(types: !9670)
!9670 = !{!389, !9671}
!9671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9672, size: 64)
!9672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!9673 = !{!9674}
!9674 = !DILocalVariable(name: "tsdn", arg: 1, scope: !9668, file: !145, line: 287, type: !9671)
!9675 = !DILocation(line: 287, column: 25, scope: !9668)
!9676 = !DILocation(line: 288, column: 9, scope: !9668)
!9677 = !DILocation(line: 288, column: 14, scope: !9668)
!9678 = !DILocation(line: 288, column: 2, scope: !9668)
!9679 = distinct !DISubprogram(name: "tsdn_tsd", scope: !145, file: !145, line: 292, type: !9680, scopeLine: 292, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9682)
!9680 = !DISubroutineType(types: !9681)
!9681 = !{!1347, !391}
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "tsdn", arg: 1, scope: !9679, file: !145, line: 292, type: !391)
!9684 = !DILocation(line: 292, column: 18, scope: !9679)
!9685 = !DILocation(line: 293, column: 2, scope: !9679)
!9686 = !DILocation(line: 293, column: 2, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9679, file: !145, line: 293, column: 2)
!9688 = !DILocation(line: 295, column: 10, scope: !9679)
!9689 = !DILocation(line: 295, column: 16, scope: !9679)
!9690 = !DILocation(line: 295, column: 2, scope: !9679)
!9691 = distinct !DISubprogram(name: "witness_assert_depth_to_rank", scope: !19, file: !19, line: 266, type: !9692, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9694)
!9692 = !DISubroutineType(types: !9693)
!9693 = !{null, !1416, !511, !7}
!9694 = !{!9695, !9696, !9697}
!9695 = !DILocalVariable(name: "witness_tsdn", arg: 1, scope: !9691, file: !19, line: 266, type: !1416)
!9696 = !DILocalVariable(name: "rank_inclusive", arg: 2, scope: !9691, file: !19, line: 267, type: !511)
!9697 = !DILocalVariable(name: "depth", arg: 3, scope: !9691, file: !19, line: 267, type: !7)
!9698 = !DILocation(line: 266, column: 46, scope: !9691)
!9699 = !DILocation(line: 267, column: 20, scope: !9691)
!9700 = !DILocation(line: 267, column: 45, scope: !9691)
!9701 = !DILocation(line: 269, column: 3, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !19, line: 268, column: 56)
!9703 = distinct !DILexicalBlock(scope: !9691, file: !19, line: 268, column: 6)
!9704 = distinct !DISubprogram(name: "tsdn_witness_tsdp_get", scope: !145, file: !145, line: 364, type: !9705, scopeLine: 364, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9707)
!9705 = !DISubroutineType(types: !9706)
!9706 = !{!1416, !391}
!9707 = !{!9708, !9709}
!9708 = !DILocalVariable(name: "tsdn", arg: 1, scope: !9704, file: !145, line: 364, type: !391)
!9709 = !DILocalVariable(name: "tsd", scope: !9704, file: !145, line: 364, type: !1347)
!9710 = !DILocation(line: 364, column: 1, scope: !9704)
!9711 = !DILocation(line: 364, column: 1, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9704, file: !145, line: 364, column: 1)
!9713 = !DILocation(line: 364, column: 1, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9712, file: !145, line: 364, column: 1)
!9715 = distinct !DISubprogram(name: "arena_malloc", scope: !9716, file: !9716, line: 145, type: !9717, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9719)
!9716 = !DIFile(filename: "include/jemalloc/internal/arena_inlines_b.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "6f50a4f51a9c2960dc701293280fb741")
!9717 = !DISubroutineType(types: !9718)
!9718 = !{!383, !391, !594, !387, !726, !389, !740, !389}
!9719 = !{!9720, !9721, !9722, !9723, !9724, !9725, !9726}
!9720 = !DILocalVariable(name: "tsdn", arg: 1, scope: !9715, file: !9716, line: 145, type: !391)
!9721 = !DILocalVariable(name: "arena", arg: 2, scope: !9715, file: !9716, line: 145, type: !594)
!9722 = !DILocalVariable(name: "size", arg: 3, scope: !9715, file: !9716, line: 145, type: !387)
!9723 = !DILocalVariable(name: "ind", arg: 4, scope: !9715, file: !9716, line: 145, type: !726)
!9724 = !DILocalVariable(name: "zero", arg: 5, scope: !9715, file: !9716, line: 145, type: !389)
!9725 = !DILocalVariable(name: "tcache", arg: 6, scope: !9715, file: !9716, line: 146, type: !740)
!9726 = !DILocalVariable(name: "slow_path", arg: 7, scope: !9715, file: !9716, line: 146, type: !389)
!9727 = !DILocation(line: 145, column: 22, scope: !9715)
!9728 = !DILocation(line: 145, column: 37, scope: !9715)
!9729 = !DILocation(line: 145, column: 51, scope: !9715)
!9730 = !DILocation(line: 145, column: 65, scope: !9715)
!9731 = !DILocation(line: 145, column: 75, scope: !9715)
!9732 = !DILocation(line: 146, column: 15, scope: !9715)
!9733 = !DILocation(line: 146, column: 28, scope: !9715)
!9734 = !DILocation(line: 147, column: 2, scope: !9715)
!9735 = !DILocation(line: 147, column: 2, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9715, file: !9716, line: 147, column: 2)
!9737 = !DILocation(line: 149, column: 6, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9715, file: !9716, line: 149, column: 6)
!9739 = !DILocation(line: 149, column: 6, scope: !9715)
!9740 = !DILocation(line: 150, column: 7, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !9716, line: 150, column: 7)
!9742 = distinct !DILexicalBlock(scope: !9738, file: !9716, line: 149, column: 30)
!9743 = !DILocation(line: 150, column: 7, scope: !9742)
!9744 = !DILocation(line: 151, column: 39, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9741, file: !9716, line: 150, column: 42)
!9746 = !DILocation(line: 151, column: 30, scope: !9745)
!9747 = !DILocation(line: 151, column: 46, scope: !9745)
!9748 = !DILocation(line: 152, column: 8, scope: !9745)
!9749 = !DILocation(line: 152, column: 16, scope: !9745)
!9750 = !DILocation(line: 152, column: 22, scope: !9745)
!9751 = !DILocation(line: 152, column: 27, scope: !9745)
!9752 = !DILocation(line: 152, column: 33, scope: !9745)
!9753 = !DILocation(line: 151, column: 11, scope: !9745)
!9754 = !DILocation(line: 151, column: 4, scope: !9745)
!9755 = !DILocation(line: 154, column: 7, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9742, file: !9716, line: 154, column: 7)
!9757 = !DILocation(line: 154, column: 7, scope: !9742)
!9758 = !DILocation(line: 155, column: 39, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9756, file: !9716, line: 154, column: 40)
!9760 = !DILocation(line: 155, column: 30, scope: !9759)
!9761 = !DILocation(line: 155, column: 46, scope: !9759)
!9762 = !DILocation(line: 156, column: 8, scope: !9759)
!9763 = !DILocation(line: 156, column: 16, scope: !9759)
!9764 = !DILocation(line: 156, column: 22, scope: !9759)
!9765 = !DILocation(line: 156, column: 27, scope: !9759)
!9766 = !DILocation(line: 156, column: 33, scope: !9759)
!9767 = !DILocation(line: 155, column: 11, scope: !9759)
!9768 = !DILocation(line: 155, column: 4, scope: !9759)
!9769 = !DILocation(line: 159, column: 3, scope: !9742)
!9770 = !DILocation(line: 159, column: 3, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9742, file: !9716, line: 159, column: 3)
!9772 = !DILocation(line: 160, column: 2, scope: !9742)
!9773 = !DILocation(line: 162, column: 27, scope: !9715)
!9774 = !DILocation(line: 162, column: 33, scope: !9715)
!9775 = !DILocation(line: 162, column: 40, scope: !9715)
!9776 = !DILocation(line: 162, column: 46, scope: !9715)
!9777 = !DILocation(line: 162, column: 51, scope: !9715)
!9778 = !DILocation(line: 162, column: 9, scope: !9715)
!9779 = !DILocation(line: 162, column: 2, scope: !9715)
!9780 = !DILocation(line: 163, column: 1, scope: !9715)
!9781 = distinct !DISubprogram(name: "arena_internal_add", scope: !3545, file: !3545, line: 10, type: !9782, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9784)
!9782 = !DISubroutineType(types: !9783)
!9783 = !{null, !594, !387}
!9784 = !{!9785, !9786}
!9785 = !DILocalVariable(name: "arena", arg: 1, scope: !9781, file: !3545, line: 10, type: !594)
!9786 = !DILocalVariable(name: "size", arg: 2, scope: !9781, file: !3545, line: 10, type: !387)
!9787 = !DILocation(line: 10, column: 29, scope: !9781)
!9788 = !DILocation(line: 10, column: 43, scope: !9781)
!9789 = !DILocation(line: 11, column: 23, scope: !9781)
!9790 = !DILocation(line: 11, column: 30, scope: !9781)
!9791 = !DILocation(line: 11, column: 36, scope: !9781)
!9792 = !DILocation(line: 11, column: 46, scope: !9781)
!9793 = !DILocation(line: 11, column: 2, scope: !9781)
!9794 = !DILocation(line: 12, column: 1, scope: !9781)
!9795 = distinct !DISubprogram(name: "iaalloc", scope: !2572, file: !2572, line: 30, type: !9796, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9798)
!9796 = !DISubroutineType(types: !9797)
!9797 = !{!594, !391, !554}
!9798 = !{!9799, !9800}
!9799 = !DILocalVariable(name: "tsdn", arg: 1, scope: !9795, file: !2572, line: 30, type: !391)
!9800 = !DILocalVariable(name: "ptr", arg: 2, scope: !9795, file: !2572, line: 30, type: !554)
!9801 = !DILocation(line: 30, column: 17, scope: !9795)
!9802 = !DILocation(line: 30, column: 35, scope: !9795)
!9803 = !DILocation(line: 31, column: 2, scope: !9795)
!9804 = !DILocation(line: 31, column: 2, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9795, file: !2572, line: 31, column: 2)
!9806 = !DILocation(line: 33, column: 22, scope: !9795)
!9807 = !DILocation(line: 33, column: 28, scope: !9795)
!9808 = !DILocation(line: 33, column: 9, scope: !9795)
!9809 = !DILocation(line: 33, column: 2, scope: !9795)
!9810 = distinct !DISubprogram(name: "tcache_alloc_small", scope: !2603, file: !2603, line: 45, type: !9811, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9813)
!9811 = !DISubroutineType(types: !9812)
!9812 = !{!383, !1347, !594, !740, !387, !726, !389, !389}
!9813 = !{!9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9827}
!9814 = !DILocalVariable(name: "tsd", arg: 1, scope: !9810, file: !2603, line: 45, type: !1347)
!9815 = !DILocalVariable(name: "arena", arg: 2, scope: !9810, file: !2603, line: 45, type: !594)
!9816 = !DILocalVariable(name: "tcache", arg: 3, scope: !9810, file: !2603, line: 45, type: !740)
!9817 = !DILocalVariable(name: "size", arg: 4, scope: !9810, file: !2603, line: 46, type: !387)
!9818 = !DILocalVariable(name: "binind", arg: 5, scope: !9810, file: !2603, line: 46, type: !726)
!9819 = !DILocalVariable(name: "zero", arg: 6, scope: !9810, file: !2603, line: 46, type: !389)
!9820 = !DILocalVariable(name: "slow_path", arg: 7, scope: !9810, file: !2603, line: 46, type: !389)
!9821 = !DILocalVariable(name: "ret", scope: !9810, file: !2603, line: 47, type: !383)
!9822 = !DILocalVariable(name: "tcache_success", scope: !9810, file: !2603, line: 48, type: !389)
!9823 = !DILocalVariable(name: "bin", scope: !9810, file: !2603, line: 51, type: !707)
!9824 = !DILocalVariable(name: "tcache_hard_success", scope: !9825, file: !2603, line: 55, type: !389)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !2603, line: 54, column: 33)
!9826 = distinct !DILexicalBlock(scope: !9810, file: !2603, line: 54, column: 6)
!9827 = !DILocalVariable(name: "usize", scope: !9828, file: !2603, line: 77, type: !387)
!9828 = distinct !DILexicalBlock(scope: !9829, file: !2603, line: 76, column: 22)
!9829 = distinct !DILexicalBlock(scope: !9810, file: !2603, line: 76, column: 6)
!9830 = !DILocation(line: 45, column: 27, scope: !9810)
!9831 = !DILocation(line: 45, column: 41, scope: !9810)
!9832 = !DILocation(line: 45, column: 58, scope: !9810)
!9833 = !DILocation(line: 46, column: 12, scope: !9810)
!9834 = !DILocation(line: 46, column: 26, scope: !9810)
!9835 = !DILocation(line: 46, column: 39, scope: !9810)
!9836 = !DILocation(line: 46, column: 50, scope: !9810)
!9837 = !DILocation(line: 47, column: 2, scope: !9810)
!9838 = !DILocation(line: 47, column: 8, scope: !9810)
!9839 = !DILocation(line: 48, column: 2, scope: !9810)
!9840 = !DILocation(line: 48, column: 7, scope: !9810)
!9841 = !DILocation(line: 50, column: 2, scope: !9810)
!9842 = !DILocation(line: 50, column: 2, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9810, file: !2603, line: 50, column: 2)
!9844 = !DILocation(line: 51, column: 2, scope: !9810)
!9845 = !DILocation(line: 51, column: 15, scope: !9810)
!9846 = !DILocation(line: 51, column: 22, scope: !9810)
!9847 = !DILocation(line: 51, column: 30, scope: !9810)
!9848 = !DILocation(line: 51, column: 35, scope: !9810)
!9849 = !DILocation(line: 52, column: 24, scope: !9810)
!9850 = !DILocation(line: 52, column: 8, scope: !9810)
!9851 = !DILocation(line: 52, column: 6, scope: !9810)
!9852 = !DILocation(line: 53, column: 2, scope: !9810)
!9853 = !DILocation(line: 53, column: 2, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9810, file: !2603, line: 53, column: 2)
!9855 = !DILocation(line: 54, column: 6, scope: !9826)
!9856 = !DILocation(line: 54, column: 6, scope: !9810)
!9857 = !DILocation(line: 55, column: 3, scope: !9825)
!9858 = !DILocation(line: 55, column: 8, scope: !9825)
!9859 = !DILocation(line: 56, column: 24, scope: !9825)
!9860 = !DILocation(line: 56, column: 29, scope: !9825)
!9861 = !DILocation(line: 56, column: 11, scope: !9825)
!9862 = !DILocation(line: 56, column: 9, scope: !9825)
!9863 = !DILocation(line: 57, column: 7, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9825, file: !2603, line: 57, column: 7)
!9865 = !DILocation(line: 57, column: 7, scope: !9825)
!9866 = !DILocation(line: 58, column: 4, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9864, file: !2603, line: 57, column: 32)
!9868 = !DILocation(line: 60, column: 7, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9825, file: !2603, line: 60, column: 7)
!9870 = !DILocation(line: 60, column: 7, scope: !9825)
!9871 = !DILocation(line: 62, column: 38, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9869, file: !2603, line: 60, column: 57)
!9873 = !DILocation(line: 62, column: 29, scope: !9872)
!9874 = !DILocation(line: 62, column: 44, scope: !9872)
!9875 = !DILocation(line: 62, column: 51, scope: !9872)
!9876 = !DILocation(line: 63, column: 8, scope: !9872)
!9877 = !DILocation(line: 63, column: 16, scope: !9872)
!9878 = !DILocation(line: 62, column: 11, scope: !9872)
!9879 = !DILocation(line: 62, column: 4, scope: !9872)
!9880 = !DILocation(line: 65, column: 28, scope: !9825)
!9881 = !DILocation(line: 65, column: 33, scope: !9825)
!9882 = !DILocation(line: 65, column: 41, scope: !9825)
!9883 = !DILocation(line: 65, column: 46, scope: !9825)
!9884 = !DILocation(line: 65, column: 3, scope: !9825)
!9885 = !DILocation(line: 68, column: 42, scope: !9825)
!9886 = !DILocation(line: 68, column: 33, scope: !9825)
!9887 = !DILocation(line: 68, column: 48, scope: !9825)
!9888 = !DILocation(line: 68, column: 55, scope: !9825)
!9889 = !DILocation(line: 69, column: 7, scope: !9825)
!9890 = !DILocation(line: 69, column: 12, scope: !9825)
!9891 = !DILocation(line: 68, column: 9, scope: !9825)
!9892 = !DILocation(line: 68, column: 7, scope: !9825)
!9893 = !DILocation(line: 70, column: 7, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9825, file: !2603, line: 70, column: 7)
!9895 = !DILocation(line: 70, column: 27, scope: !9894)
!9896 = !DILocation(line: 70, column: 7, scope: !9825)
!9897 = !DILocation(line: 71, column: 4, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9894, file: !2603, line: 70, column: 37)
!9899 = !DILocation(line: 73, column: 2, scope: !9826)
!9900 = !DILocation(line: 73, column: 2, scope: !9825)
!9901 = !DILocation(line: 75, column: 2, scope: !9810)
!9902 = !DILocation(line: 75, column: 2, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9810, file: !2603, line: 75, column: 2)
!9904 = !DILocation(line: 76, column: 6, scope: !9829)
!9905 = !DILocation(line: 76, column: 6, scope: !9810)
!9906 = !DILocation(line: 77, column: 3, scope: !9828)
!9907 = !DILocation(line: 77, column: 10, scope: !9828)
!9908 = !DILocation(line: 77, column: 32, scope: !9828)
!9909 = !DILocation(line: 77, column: 18, scope: !9828)
!9910 = !DILocation(line: 78, column: 3, scope: !9828)
!9911 = !DILocation(line: 78, column: 3, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9828, file: !2603, line: 78, column: 3)
!9913 = !DILocation(line: 79, column: 10, scope: !9828)
!9914 = !DILocation(line: 79, column: 18, scope: !9828)
!9915 = !DILocation(line: 79, column: 3, scope: !9828)
!9916 = !DILocation(line: 80, column: 2, scope: !9829)
!9917 = !DILocation(line: 80, column: 2, scope: !9828)
!9918 = !DILocation(line: 82, column: 3, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !2603, line: 81, column: 20)
!9920 = distinct !DILexicalBlock(scope: !9810, file: !2603, line: 81, column: 6)
!9921 = !DILocation(line: 82, column: 8, scope: !9919)
!9922 = !DILocation(line: 82, column: 15, scope: !9919)
!9923 = !DILocation(line: 82, column: 24, scope: !9919)
!9924 = !DILocation(line: 84, column: 9, scope: !9810)
!9925 = !DILocation(line: 84, column: 2, scope: !9810)
!9926 = !DILocation(line: 85, column: 1, scope: !9810)
!9927 = distinct !DISubprogram(name: "tcache_alloc_large", scope: !2603, file: !2603, line: 88, type: !9811, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9928)
!9928 = !{!9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939}
!9929 = !DILocalVariable(name: "tsd", arg: 1, scope: !9927, file: !2603, line: 88, type: !1347)
!9930 = !DILocalVariable(name: "arena", arg: 2, scope: !9927, file: !2603, line: 88, type: !594)
!9931 = !DILocalVariable(name: "tcache", arg: 3, scope: !9927, file: !2603, line: 88, type: !740)
!9932 = !DILocalVariable(name: "size", arg: 4, scope: !9927, file: !2603, line: 88, type: !387)
!9933 = !DILocalVariable(name: "binind", arg: 5, scope: !9927, file: !2603, line: 89, type: !726)
!9934 = !DILocalVariable(name: "zero", arg: 6, scope: !9927, file: !2603, line: 89, type: !389)
!9935 = !DILocalVariable(name: "slow_path", arg: 7, scope: !9927, file: !2603, line: 89, type: !389)
!9936 = !DILocalVariable(name: "ret", scope: !9927, file: !2603, line: 90, type: !383)
!9937 = !DILocalVariable(name: "tcache_success", scope: !9927, file: !2603, line: 91, type: !389)
!9938 = !DILocalVariable(name: "bin", scope: !9927, file: !2603, line: 94, type: !707)
!9939 = !DILocalVariable(name: "usize", scope: !9940, file: !2603, line: 115, type: !387)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !2603, line: 114, column: 23)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !2603, line: 114, column: 7)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !2603, line: 113, column: 9)
!9943 = distinct !DILexicalBlock(scope: !9927, file: !2603, line: 97, column: 6)
!9944 = !DILocation(line: 88, column: 27, scope: !9927)
!9945 = !DILocation(line: 88, column: 41, scope: !9927)
!9946 = !DILocation(line: 88, column: 58, scope: !9927)
!9947 = !DILocation(line: 88, column: 73, scope: !9927)
!9948 = !DILocation(line: 89, column: 13, scope: !9927)
!9949 = !DILocation(line: 89, column: 26, scope: !9927)
!9950 = !DILocation(line: 89, column: 37, scope: !9927)
!9951 = !DILocation(line: 90, column: 2, scope: !9927)
!9952 = !DILocation(line: 90, column: 8, scope: !9927)
!9953 = !DILocation(line: 91, column: 2, scope: !9927)
!9954 = !DILocation(line: 91, column: 7, scope: !9927)
!9955 = !DILocation(line: 93, column: 2, scope: !9927)
!9956 = !DILocation(line: 93, column: 2, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9927, file: !2603, line: 93, column: 2)
!9958 = !DILocation(line: 94, column: 2, scope: !9927)
!9959 = !DILocation(line: 94, column: 15, scope: !9927)
!9960 = !DILocation(line: 94, column: 22, scope: !9927)
!9961 = !DILocation(line: 94, column: 30, scope: !9927)
!9962 = !DILocation(line: 94, column: 35, scope: !9927)
!9963 = !DILocation(line: 95, column: 24, scope: !9927)
!9964 = !DILocation(line: 95, column: 8, scope: !9927)
!9965 = !DILocation(line: 95, column: 6, scope: !9927)
!9966 = !DILocation(line: 96, column: 2, scope: !9927)
!9967 = !DILocation(line: 96, column: 2, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9927, file: !2603, line: 96, column: 2)
!9969 = !DILocation(line: 97, column: 6, scope: !9943)
!9970 = !DILocation(line: 97, column: 6, scope: !9927)
!9971 = !DILocation(line: 102, column: 24, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9943, file: !2603, line: 97, column: 33)
!9973 = !DILocation(line: 102, column: 29, scope: !9972)
!9974 = !DILocation(line: 102, column: 11, scope: !9972)
!9975 = !DILocation(line: 102, column: 9, scope: !9972)
!9976 = !DILocation(line: 103, column: 7, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9972, file: !2603, line: 103, column: 7)
!9978 = !DILocation(line: 103, column: 7, scope: !9972)
!9979 = !DILocation(line: 104, column: 4, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9977, file: !2603, line: 103, column: 32)
!9981 = !DILocation(line: 106, column: 28, scope: !9972)
!9982 = !DILocation(line: 106, column: 33, scope: !9972)
!9983 = !DILocation(line: 106, column: 41, scope: !9972)
!9984 = !DILocation(line: 106, column: 46, scope: !9972)
!9985 = !DILocation(line: 106, column: 3, scope: !9972)
!9986 = !DILocation(line: 109, column: 31, scope: !9972)
!9987 = !DILocation(line: 109, column: 22, scope: !9972)
!9988 = !DILocation(line: 109, column: 37, scope: !9972)
!9989 = !DILocation(line: 109, column: 51, scope: !9972)
!9990 = !DILocation(line: 109, column: 44, scope: !9972)
!9991 = !DILocation(line: 109, column: 58, scope: !9972)
!9992 = !DILocation(line: 109, column: 9, scope: !9972)
!9993 = !DILocation(line: 109, column: 7, scope: !9972)
!9994 = !DILocation(line: 110, column: 7, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9972, file: !2603, line: 110, column: 7)
!9996 = !DILocation(line: 110, column: 11, scope: !9995)
!9997 = !DILocation(line: 110, column: 7, scope: !9972)
!9998 = !DILocation(line: 111, column: 4, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9995, file: !2603, line: 110, column: 20)
!10000 = !DILocation(line: 113, column: 2, scope: !9972)
!10001 = !DILocation(line: 114, column: 7, scope: !9941)
!10002 = !DILocation(line: 114, column: 7, scope: !9942)
!10003 = !DILocation(line: 115, column: 4, scope: !9940)
!10004 = !DILocation(line: 115, column: 11, scope: !9940)
!10005 = !DILocation(line: 115, column: 33, scope: !9940)
!10006 = !DILocation(line: 115, column: 19, scope: !9940)
!10007 = !DILocation(line: 116, column: 4, scope: !9940)
!10008 = !DILocation(line: 116, column: 4, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9940, file: !2603, line: 116, column: 4)
!10010 = !DILocation(line: 117, column: 11, scope: !9940)
!10011 = !DILocation(line: 117, column: 19, scope: !9940)
!10012 = !DILocation(line: 117, column: 4, scope: !9940)
!10013 = !DILocation(line: 118, column: 3, scope: !9941)
!10014 = !DILocation(line: 118, column: 3, scope: !9940)
!10015 = !DILocation(line: 121, column: 4, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !2603, line: 120, column: 21)
!10017 = distinct !DILexicalBlock(scope: !9942, file: !2603, line: 120, column: 7)
!10018 = !DILocation(line: 121, column: 9, scope: !10016)
!10019 = !DILocation(line: 121, column: 16, scope: !10016)
!10020 = !DILocation(line: 121, column: 25, scope: !10016)
!10021 = !DILocation(line: 125, column: 9, scope: !9927)
!10022 = !DILocation(line: 125, column: 2, scope: !9927)
!10023 = !DILocation(line: 126, column: 1, scope: !9927)
!10024 = !DISubprogram(name: "arena_malloc_hard", scope: !3073, file: !3073, line: 67, type: !10025, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{!383, !391, !594, !387, !726, !389}
!10027 = distinct !DISubprogram(name: "cache_bin_alloc", scope: !697, file: !697, line: 407, type: !10028, scopeLine: 407, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10030)
!10028 = !DISubroutineType(types: !10029)
!10029 = !{!383, !707, !989}
!10030 = !{!10031, !10032}
!10031 = !DILocalVariable(name: "bin", arg: 1, scope: !10027, file: !697, line: 407, type: !707)
!10032 = !DILocalVariable(name: "success", arg: 2, scope: !10027, file: !697, line: 407, type: !989)
!10033 = !DILocation(line: 407, column: 30, scope: !10027)
!10034 = !DILocation(line: 407, column: 41, scope: !10027)
!10035 = !DILocation(line: 408, column: 30, scope: !10027)
!10036 = !DILocation(line: 408, column: 35, scope: !10027)
!10037 = !DILocation(line: 408, column: 9, scope: !10027)
!10038 = !DILocation(line: 408, column: 2, scope: !10027)
!10039 = distinct !DISubprogram(name: "tcache_small_bin_disabled", scope: !2603, file: !2603, line: 31, type: !10040, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10042)
!10040 = !DISubroutineType(types: !10041)
!10041 = !{!389, !726, !707}
!10042 = !{!10043, !10044, !10045}
!10043 = !DILocalVariable(name: "ind", arg: 1, scope: !10039, file: !2603, line: 31, type: !726)
!10044 = !DILocalVariable(name: "bin", arg: 2, scope: !10039, file: !2603, line: 31, type: !707)
!10045 = !DILocalVariable(name: "ret", scope: !10039, file: !2603, line: 33, type: !389)
!10046 = !DILocation(line: 31, column: 35, scope: !10039)
!10047 = !DILocation(line: 31, column: 53, scope: !10039)
!10048 = !DILocation(line: 32, column: 2, scope: !10039)
!10049 = !DILocation(line: 32, column: 2, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10039, file: !2603, line: 32, column: 2)
!10051 = !DILocation(line: 33, column: 2, scope: !10039)
!10052 = !DILocation(line: 33, column: 7, scope: !10039)
!10053 = !DILocation(line: 33, column: 42, scope: !10039)
!10054 = !DILocation(line: 33, column: 58, scope: !10039)
!10055 = !DILocation(line: 33, column: 14, scope: !10039)
!10056 = !DILocation(line: 33, column: 64, scope: !10039)
!10057 = !DILocation(line: 34, column: 6, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10039, file: !2603, line: 34, column: 6)
!10059 = !DILocation(line: 34, column: 10, scope: !10058)
!10060 = !DILocation(line: 34, column: 13, scope: !10058)
!10061 = !DILocation(line: 34, column: 17, scope: !10058)
!10062 = !DILocation(line: 34, column: 6, scope: !10039)
!10063 = !DILocation(line: 36, column: 3, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10058, file: !2603, line: 34, column: 26)
!10065 = !DILocation(line: 36, column: 3, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10064, file: !2603, line: 36, column: 3)
!10067 = !DILocation(line: 37, column: 3, scope: !10064)
!10068 = !DILocation(line: 37, column: 3, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10064, file: !2603, line: 37, column: 3)
!10070 = !DILocation(line: 39, column: 2, scope: !10064)
!10071 = !DILocation(line: 41, column: 9, scope: !10039)
!10072 = !DILocation(line: 42, column: 1, scope: !10039)
!10073 = !DILocation(line: 41, column: 2, scope: !10039)
!10074 = !DISubprogram(name: "tcache_bin_flush_stashed", scope: !6724, file: !6724, line: 45, type: !10075, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{null, !1347, !740, !707, !726, !389}
!10077 = !DISubprogram(name: "tcache_alloc_small_hard", scope: !6724, file: !6724, line: 38, type: !10078, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{!383, !391, !594, !740, !707, !726, !989}
!10080 = distinct !DISubprogram(name: "cache_bin_alloc_impl", scope: !697, file: !697, line: 348, type: !10081, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10083)
!10081 = !DISubroutineType(types: !10082)
!10082 = !{!383, !707, !989, !389}
!10083 = !{!10084, !10085, !10086, !10087, !10088, !10089}
!10084 = !DILocalVariable(name: "bin", arg: 1, scope: !10080, file: !697, line: 348, type: !707)
!10085 = !DILocalVariable(name: "success", arg: 2, scope: !10080, file: !697, line: 348, type: !989)
!10086 = !DILocalVariable(name: "adjust_low_water", arg: 3, scope: !10080, file: !697, line: 348, type: !389)
!10087 = !DILocalVariable(name: "ret", scope: !10080, file: !697, line: 361, type: !383)
!10088 = !DILocalVariable(name: "low_bits", scope: !10080, file: !697, line: 362, type: !719)
!10089 = !DILocalVariable(name: "new_head", scope: !10080, file: !697, line: 363, type: !712)
!10090 = !DILocation(line: 348, column: 35, scope: !10080)
!10091 = !DILocation(line: 348, column: 46, scope: !10080)
!10092 = !DILocation(line: 348, column: 60, scope: !10080)
!10093 = !DILocation(line: 361, column: 2, scope: !10080)
!10094 = !DILocation(line: 361, column: 8, scope: !10080)
!10095 = !DILocation(line: 361, column: 15, scope: !10080)
!10096 = !DILocation(line: 361, column: 20, scope: !10080)
!10097 = !DILocation(line: 361, column: 14, scope: !10080)
!10098 = !DILocation(line: 362, column: 2, scope: !10080)
!10099 = !DILocation(line: 362, column: 11, scope: !10080)
!10100 = !DILocation(line: 362, column: 43, scope: !10080)
!10101 = !DILocation(line: 362, column: 48, scope: !10080)
!10102 = !DILocation(line: 362, column: 32, scope: !10080)
!10103 = !DILocation(line: 362, column: 22, scope: !10080)
!10104 = !DILocation(line: 363, column: 2, scope: !10080)
!10105 = !DILocation(line: 363, column: 9, scope: !10080)
!10106 = !DILocation(line: 363, column: 20, scope: !10080)
!10107 = !DILocation(line: 363, column: 25, scope: !10080)
!10108 = !DILocation(line: 363, column: 36, scope: !10080)
!10109 = !DILocation(line: 369, column: 6, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10080, file: !697, line: 369, column: 6)
!10111 = !{!6246, !6248, i64 16}
!10112 = !DILocation(line: 369, column: 6, scope: !10080)
!10113 = !DILocation(line: 370, column: 21, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10110, file: !697, line: 369, column: 51)
!10115 = !DILocation(line: 370, column: 3, scope: !10114)
!10116 = !DILocation(line: 370, column: 8, scope: !10114)
!10117 = !DILocation(line: 370, column: 19, scope: !10114)
!10118 = !DILocation(line: 371, column: 4, scope: !10114)
!10119 = !DILocation(line: 371, column: 12, scope: !10114)
!10120 = !DILocation(line: 372, column: 10, scope: !10114)
!10121 = !DILocation(line: 372, column: 3, scope: !10114)
!10122 = !DILocation(line: 374, column: 7, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10080, file: !697, line: 374, column: 6)
!10124 = !DILocation(line: 374, column: 6, scope: !10080)
!10125 = !DILocation(line: 375, column: 4, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10123, file: !697, line: 374, column: 25)
!10127 = !DILocation(line: 375, column: 12, scope: !10126)
!10128 = !DILocation(line: 376, column: 3, scope: !10126)
!10129 = !DILocation(line: 383, column: 6, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10080, file: !697, line: 383, column: 6)
!10131 = !{!6246, !6248, i64 20}
!10132 = !DILocation(line: 383, column: 6, scope: !10080)
!10133 = !DILocation(line: 384, column: 21, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10130, file: !697, line: 383, column: 47)
!10135 = !DILocation(line: 384, column: 3, scope: !10134)
!10136 = !DILocation(line: 384, column: 8, scope: !10134)
!10137 = !DILocation(line: 384, column: 19, scope: !10134)
!10138 = !DILocation(line: 385, column: 50, scope: !10134)
!10139 = !DILocation(line: 385, column: 39, scope: !10134)
!10140 = !DILocation(line: 385, column: 29, scope: !10134)
!10141 = !DILocation(line: 385, column: 3, scope: !10134)
!10142 = !DILocation(line: 385, column: 8, scope: !10134)
!10143 = !DILocation(line: 385, column: 27, scope: !10134)
!10144 = !DILocation(line: 386, column: 4, scope: !10134)
!10145 = !DILocation(line: 386, column: 12, scope: !10134)
!10146 = !DILocation(line: 387, column: 10, scope: !10134)
!10147 = !DILocation(line: 387, column: 3, scope: !10134)
!10148 = !DILocation(line: 389, column: 3, scope: !10080)
!10149 = !DILocation(line: 389, column: 11, scope: !10080)
!10150 = !DILocation(line: 390, column: 2, scope: !10080)
!10151 = !DILocation(line: 391, column: 1, scope: !10080)
!10152 = distinct !DISubprogram(name: "cache_bin_info_ncached_max", scope: !697, file: !697, line: 173, type: !10153, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10160)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!1427, !10155}
!10155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10156, size: 64)
!10156 = !DIDerivedType(tag: DW_TAG_typedef, name: "cache_bin_info_t", file: !697, line: 62, baseType: !10157)
!10157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cache_bin_info_s", file: !697, line: 63, size: 16, elements: !10158)
!10158 = !{!10159}
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "ncached_max", scope: !10157, file: !697, line: 64, baseType: !1427, size: 16)
!10160 = !{!10161}
!10161 = !DILocalVariable(name: "info", arg: 1, scope: !10152, file: !697, line: 173, type: !10155)
!10162 = !DILocation(line: 173, column: 46, scope: !10152)
!10163 = !DILocation(line: 174, column: 9, scope: !10152)
!10164 = !DILocation(line: 174, column: 15, scope: !10152)
!10165 = !{!10166, !6248, i64 0}
!10166 = !{!"cache_bin_info_s", !6248, i64 0}
!10167 = !DILocation(line: 174, column: 2, scope: !10152)
!10168 = !DISubprogram(name: "large_malloc", scope: !10169, file: !10169, line: 6, type: !10170, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10169 = !DIFile(filename: "include/jemalloc/internal/large_externs.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "73f9c64689e4a36099c09fd6dc7db635")
!10170 = !DISubroutineType(types: !10171)
!10171 = !{!383, !391, !594, !387, !389}
!10172 = distinct !DISubprogram(name: "sz_s2u", scope: !727, file: !727, line: 301, type: !10173, scopeLine: 301, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!387, !387}
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "size", arg: 1, scope: !10172, file: !727, line: 301, type: !387)
!10177 = !DILocation(line: 301, column: 15, scope: !10172)
!10178 = !DILocation(line: 302, column: 6, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10172, file: !727, line: 302, column: 6)
!10180 = !DILocation(line: 302, column: 6, scope: !10172)
!10181 = !DILocation(line: 303, column: 24, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10179, file: !727, line: 302, column: 42)
!10183 = !DILocation(line: 303, column: 10, scope: !10182)
!10184 = !DILocation(line: 303, column: 3, scope: !10182)
!10185 = !DILocation(line: 305, column: 24, scope: !10172)
!10186 = !DILocation(line: 305, column: 9, scope: !10172)
!10187 = !DILocation(line: 305, column: 2, scope: !10172)
!10188 = !DILocation(line: 306, column: 1, scope: !10172)
!10189 = distinct !DISubprogram(name: "sz_s2u_lookup", scope: !727, file: !727, line: 289, type: !10173, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10190)
!10190 = !{!10191, !10192}
!10191 = !DILocalVariable(name: "size", arg: 1, scope: !10189, file: !727, line: 289, type: !387)
!10192 = !DILocalVariable(name: "ret", scope: !10189, file: !727, line: 290, type: !387)
!10193 = !DILocation(line: 289, column: 22, scope: !10189)
!10194 = !DILocation(line: 290, column: 2, scope: !10189)
!10195 = !DILocation(line: 290, column: 9, scope: !10189)
!10196 = !DILocation(line: 290, column: 57, scope: !10189)
!10197 = !DILocation(line: 290, column: 36, scope: !10189)
!10198 = !DILocation(line: 290, column: 15, scope: !10189)
!10199 = !DILocation(line: 292, column: 2, scope: !10189)
!10200 = !DILocation(line: 292, column: 2, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10189, file: !727, line: 292, column: 2)
!10202 = !DILocation(line: 293, column: 9, scope: !10189)
!10203 = !DILocation(line: 294, column: 1, scope: !10189)
!10204 = !DILocation(line: 293, column: 2, scope: !10189)
!10205 = distinct !DISubprogram(name: "sz_s2u_compute", scope: !727, file: !727, line: 261, type: !10173, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10206)
!10206 = !{!10207, !10208, !10211, !10212, !10214, !10215, !10216, !10217}
!10207 = !DILocalVariable(name: "size", arg: 1, scope: !10205, file: !727, line: 261, type: !387)
!10208 = !DILocalVariable(name: "lg_tmin", scope: !10209, file: !727, line: 271, type: !387)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !727, line: 270, column: 46)
!10210 = distinct !DILexicalBlock(scope: !10205, file: !727, line: 270, column: 6)
!10211 = !DILocalVariable(name: "lg_ceil", scope: !10209, file: !727, line: 272, type: !387)
!10212 = !DILocalVariable(name: "x", scope: !10213, file: !727, line: 278, type: !387)
!10213 = distinct !DILexicalBlock(scope: !10205, file: !727, line: 277, column: 2)
!10214 = !DILocalVariable(name: "lg_delta", scope: !10213, file: !727, line: 279, type: !387)
!10215 = !DILocalVariable(name: "delta", scope: !10213, file: !727, line: 281, type: !387)
!10216 = !DILocalVariable(name: "delta_mask", scope: !10213, file: !727, line: 282, type: !387)
!10217 = !DILocalVariable(name: "usize", scope: !10213, file: !727, line: 283, type: !387)
!10218 = !DILocation(line: 261, column: 23, scope: !10205)
!10219 = !DILocation(line: 262, column: 6, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10205, file: !727, line: 262, column: 6)
!10221 = !DILocation(line: 262, column: 6, scope: !10205)
!10222 = !DILocation(line: 263, column: 3, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10220, file: !727, line: 262, column: 42)
!10224 = !DILocation(line: 266, column: 6, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10205, file: !727, line: 266, column: 6)
!10226 = !DILocation(line: 266, column: 11, scope: !10225)
!10227 = !DILocation(line: 266, column: 6, scope: !10205)
!10228 = !DILocation(line: 267, column: 7, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10225, file: !727, line: 266, column: 17)
!10230 = !DILocation(line: 268, column: 2, scope: !10229)
!10231 = !DILocation(line: 270, column: 6, scope: !10210)
!10232 = !DILocation(line: 270, column: 11, scope: !10210)
!10233 = !DILocation(line: 270, column: 6, scope: !10205)
!10234 = !DILocation(line: 271, column: 3, scope: !10209)
!10235 = !DILocation(line: 271, column: 10, scope: !10209)
!10236 = !DILocation(line: 272, column: 3, scope: !10209)
!10237 = !DILocation(line: 272, column: 10, scope: !10209)
!10238 = !DILocation(line: 272, column: 42, scope: !10209)
!10239 = !DILocation(line: 272, column: 29, scope: !10209)
!10240 = !DILocation(line: 272, column: 20, scope: !10209)
!10241 = !DILocation(line: 273, column: 11, scope: !10209)
!10242 = !DILocation(line: 273, column: 21, scope: !10209)
!10243 = !DILocation(line: 273, column: 19, scope: !10209)
!10244 = !DILocation(line: 273, column: 41, scope: !10209)
!10245 = !DILocation(line: 273, column: 38, scope: !10209)
!10246 = !DILocation(line: 274, column: 17, scope: !10209)
!10247 = !DILocation(line: 274, column: 14, scope: !10209)
!10248 = !DILocation(line: 273, column: 3, scope: !10209)
!10249 = !DILocation(line: 275, column: 2, scope: !10210)
!10250 = !DILocation(line: 278, column: 3, scope: !10213)
!10251 = !DILocation(line: 278, column: 10, scope: !10213)
!10252 = !DILocation(line: 278, column: 24, scope: !10213)
!10253 = !DILocation(line: 278, column: 28, scope: !10213)
!10254 = !DILocation(line: 278, column: 32, scope: !10213)
!10255 = !DILocation(line: 278, column: 14, scope: !10213)
!10256 = !DILocation(line: 279, column: 3, scope: !10213)
!10257 = !DILocation(line: 279, column: 10, scope: !10213)
!10258 = !DILocation(line: 279, column: 22, scope: !10213)
!10259 = !DILocation(line: 279, column: 24, scope: !10213)
!10260 = !DILocation(line: 279, column: 21, scope: !10213)
!10261 = !DILocation(line: 280, column: 23, scope: !10213)
!10262 = !DILocation(line: 280, column: 25, scope: !10213)
!10263 = !DILocation(line: 280, column: 40, scope: !10213)
!10264 = !DILocation(line: 281, column: 3, scope: !10213)
!10265 = !DILocation(line: 281, column: 10, scope: !10213)
!10266 = !DILocation(line: 281, column: 27, scope: !10213)
!10267 = !DILocation(line: 281, column: 24, scope: !10213)
!10268 = !DILocation(line: 282, column: 3, scope: !10213)
!10269 = !DILocation(line: 282, column: 10, scope: !10213)
!10270 = !DILocation(line: 282, column: 23, scope: !10213)
!10271 = !DILocation(line: 282, column: 29, scope: !10213)
!10272 = !DILocation(line: 283, column: 3, scope: !10213)
!10273 = !DILocation(line: 283, column: 10, scope: !10213)
!10274 = !DILocation(line: 283, column: 19, scope: !10213)
!10275 = !DILocation(line: 283, column: 26, scope: !10213)
!10276 = !DILocation(line: 283, column: 24, scope: !10213)
!10277 = !DILocation(line: 283, column: 41, scope: !10213)
!10278 = !DILocation(line: 283, column: 40, scope: !10213)
!10279 = !DILocation(line: 283, column: 38, scope: !10213)
!10280 = !DILocation(line: 284, column: 10, scope: !10213)
!10281 = !DILocation(line: 284, column: 3, scope: !10213)
!10282 = !DILocation(line: 285, column: 2, scope: !10205)
!10283 = !DILocation(line: 286, column: 1, scope: !10205)
!10284 = distinct !DISubprogram(name: "sz_index2size_lookup", scope: !727, file: !727, line: 242, type: !5325, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10285)
!10285 = !{!10286, !10287}
!10286 = !DILocalVariable(name: "index", arg: 1, scope: !10284, file: !727, line: 242, type: !726)
!10287 = !DILocalVariable(name: "ret", scope: !10284, file: !727, line: 243, type: !387)
!10288 = !DILocation(line: 242, column: 30, scope: !10284)
!10289 = !DILocation(line: 243, column: 2, scope: !10284)
!10290 = !DILocation(line: 243, column: 9, scope: !10284)
!10291 = !DILocation(line: 243, column: 41, scope: !10284)
!10292 = !DILocation(line: 243, column: 15, scope: !10284)
!10293 = !DILocation(line: 244, column: 2, scope: !10284)
!10294 = !DILocation(line: 244, column: 2, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10284, file: !727, line: 244, column: 2)
!10296 = !DILocation(line: 245, column: 9, scope: !10284)
!10297 = !DILocation(line: 246, column: 1, scope: !10284)
!10298 = !DILocation(line: 245, column: 2, scope: !10284)
!10299 = distinct !DISubprogram(name: "sz_size2index_lookup", scope: !727, file: !727, line: 196, type: !6407, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10300)
!10300 = !{!10301, !10302}
!10301 = !DILocalVariable(name: "size", arg: 1, scope: !10299, file: !727, line: 196, type: !387)
!10302 = !DILocalVariable(name: "ret", scope: !10299, file: !727, line: 197, type: !726)
!10303 = !DILocation(line: 196, column: 29, scope: !10299)
!10304 = !DILocation(line: 197, column: 2, scope: !10299)
!10305 = !DILocation(line: 197, column: 10, scope: !10299)
!10306 = !DILocation(line: 197, column: 42, scope: !10299)
!10307 = !DILocation(line: 197, column: 16, scope: !10299)
!10308 = !DILocation(line: 198, column: 2, scope: !10299)
!10309 = !DILocation(line: 198, column: 2, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10299, file: !727, line: 198, column: 2)
!10311 = !DILocation(line: 199, column: 9, scope: !10299)
!10312 = !DILocation(line: 200, column: 1, scope: !10299)
!10313 = !DILocation(line: 199, column: 2, scope: !10299)
!10314 = distinct !DISubprogram(name: "sz_index2size_lookup_impl", scope: !727, file: !727, line: 237, type: !5325, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10315)
!10315 = !{!10316}
!10316 = !DILocalVariable(name: "index", arg: 1, scope: !10314, file: !727, line: 237, type: !726)
!10317 = !DILocation(line: 237, column: 35, scope: !10314)
!10318 = !DILocation(line: 238, column: 27, scope: !10314)
!10319 = !DILocation(line: 238, column: 9, scope: !10314)
!10320 = !DILocation(line: 238, column: 2, scope: !10314)
!10321 = distinct !DISubprogram(name: "sz_size2index_lookup_impl", scope: !727, file: !727, line: 189, type: !6407, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10322)
!10322 = !{!10323}
!10323 = !DILocalVariable(name: "size", arg: 1, scope: !10321, file: !727, line: 189, type: !387)
!10324 = !DILocation(line: 189, column: 34, scope: !10321)
!10325 = !DILocation(line: 190, column: 2, scope: !10321)
!10326 = !DILocation(line: 190, column: 2, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10321, file: !727, line: 190, column: 2)
!10328 = !DILocation(line: 191, column: 28, scope: !10321)
!10329 = !DILocation(line: 191, column: 33, scope: !10321)
!10330 = !DILocation(line: 191, column: 61, scope: !10321)
!10331 = !DILocation(line: 192, column: 6, scope: !10321)
!10332 = !DILocation(line: 191, column: 9, scope: !10321)
!10333 = !DILocation(line: 191, column: 2, scope: !10321)
!10334 = distinct !DISubprogram(name: "lg_floor", scope: !10335, file: !10335, line: 392, type: !10336, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10338)
!10335 = !DIFile(filename: "include/jemalloc/internal/bit_util.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "5c8a15d91a8bdcb30d94c4474c7f0734")
!10336 = !DISubroutineType(types: !10337)
!10337 = !{!7, !387}
!10338 = !{!10339}
!10339 = !DILocalVariable(name: "x", arg: 1, scope: !10334, file: !10335, line: 392, type: !387)
!10340 = !DILocation(line: 392, column: 17, scope: !10334)
!10341 = !DILocation(line: 393, column: 14, scope: !10334)
!10342 = !DILocation(line: 393, column: 16, scope: !10334)
!10343 = !DILocation(line: 393, column: 2, scope: !10334)
!10344 = !DILocation(line: 395, column: 17, scope: !10334)
!10345 = !DILocation(line: 395, column: 9, scope: !10334)
!10346 = !DILocation(line: 395, column: 2, scope: !10334)
!10347 = distinct !DISubprogram(name: "pow2_ceil_zu", scope: !10335, file: !10335, line: 383, type: !10173, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10348)
!10348 = !{!10349}
!10349 = !DILocalVariable(name: "x", arg: 1, scope: !10347, file: !10335, line: 383, type: !387)
!10350 = !DILocation(line: 383, column: 21, scope: !10347)
!10351 = !DILocation(line: 385, column: 23, scope: !10347)
!10352 = !DILocation(line: 385, column: 9, scope: !10347)
!10353 = !DILocation(line: 385, column: 2, scope: !10347)
!10354 = distinct !DISubprogram(name: "util_assume", scope: !9381, file: !9381, line: 66, type: !10355, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10357)
!10355 = !DISubroutineType(types: !10356)
!10356 = !{null, !389}
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "b", arg: 1, scope: !10354, file: !9381, line: 66, type: !389)
!10359 = !DILocation(line: 66, column: 18, scope: !10354)
!10360 = !DILocation(line: 67, column: 7, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10354, file: !9381, line: 67, column: 6)
!10362 = !DILocation(line: 67, column: 6, scope: !10354)
!10363 = !DILocation(line: 68, column: 3, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10361, file: !9381, line: 67, column: 10)
!10365 = !DILocation(line: 70, column: 1, scope: !10354)
!10366 = distinct !DISubprogram(name: "fls_u64", scope: !10335, file: !10335, line: 326, type: !10367, scopeLine: 326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10369)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{!7, !408}
!10369 = !{!10370}
!10370 = !DILocalVariable(name: "x", arg: 1, scope: !10366, file: !10335, line: 326, type: !408)
!10371 = !DILocation(line: 326, column: 18, scope: !10366)
!10372 = !DILocation(line: 328, column: 16, scope: !10366)
!10373 = !DILocation(line: 328, column: 9, scope: !10366)
!10374 = !DILocation(line: 328, column: 2, scope: !10366)
!10375 = distinct !DISubprogram(name: "fls_lu", scope: !10335, file: !10335, line: 98, type: !10376, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10378)
!10376 = !DISubroutineType(types: !10377)
!10377 = !{!7, !386}
!10378 = !{!10379}
!10379 = !DILocalVariable(name: "x", arg: 1, scope: !10375, file: !10335, line: 98, type: !386)
!10380 = !DILocation(line: 98, column: 22, scope: !10375)
!10381 = !DILocation(line: 99, column: 14, scope: !10375)
!10382 = !DILocation(line: 99, column: 16, scope: !10375)
!10383 = !DILocation(line: 99, column: 2, scope: !10375)
!10384 = !DILocation(line: 100, column: 46, scope: !10375)
!10385 = !DILocation(line: 100, column: 31, scope: !10375)
!10386 = !DILocation(line: 100, column: 29, scope: !10375)
!10387 = !DILocation(line: 100, column: 9, scope: !10375)
!10388 = !DILocation(line: 100, column: 2, scope: !10375)
!10389 = distinct !DISubprogram(name: "pow2_ceil_u64", scope: !10335, file: !10335, line: 357, type: !10390, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10392)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{!408, !408}
!10392 = !{!10393, !10394}
!10393 = !DILocalVariable(name: "x", arg: 1, scope: !10389, file: !10335, line: 357, type: !408)
!10394 = !DILocalVariable(name: "msb_on_index", scope: !10389, file: !10335, line: 361, type: !387)
!10395 = !DILocation(line: 357, column: 24, scope: !10389)
!10396 = !DILocation(line: 358, column: 6, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10389, file: !10335, line: 358, column: 6)
!10398 = !DILocation(line: 358, column: 6, scope: !10389)
!10399 = !DILocation(line: 359, column: 10, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10397, file: !10335, line: 358, column: 24)
!10401 = !DILocation(line: 359, column: 3, scope: !10400)
!10402 = !DILocation(line: 361, column: 2, scope: !10389)
!10403 = !DILocation(line: 361, column: 9, scope: !10389)
!10404 = !DILocation(line: 361, column: 32, scope: !10389)
!10405 = !DILocation(line: 361, column: 34, scope: !10389)
!10406 = !DILocation(line: 361, column: 24, scope: !10389)
!10407 = !DILocation(line: 366, column: 2, scope: !10389)
!10408 = !DILocation(line: 366, column: 2, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10389, file: !10335, line: 366, column: 2)
!10410 = !DILocation(line: 367, column: 18, scope: !10389)
!10411 = !DILocation(line: 367, column: 31, scope: !10389)
!10412 = !DILocation(line: 367, column: 14, scope: !10389)
!10413 = !DILocation(line: 367, column: 2, scope: !10389)
!10414 = !DILocation(line: 368, column: 1, scope: !10389)
!10415 = distinct !DISubprogram(name: "atomic_fetch_add_zu", scope: !459, file: !459, line: 93, type: !10416, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10419)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{!387, !10418, !387, !2804}
!10418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!10419 = !{!10420, !10421, !10422}
!10420 = !DILocalVariable(name: "a", arg: 1, scope: !10415, file: !459, line: 93, type: !10418)
!10421 = !DILocalVariable(name: "val", arg: 2, scope: !10415, file: !459, line: 93, type: !387)
!10422 = !DILocalVariable(name: "mo", arg: 3, scope: !10415, file: !459, line: 93, type: !2804)
!10423 = !DILocation(line: 93, column: 1, scope: !10415)
!10424 = distinct !DISubprogram(name: "arena_aalloc", scope: !9716, file: !9716, line: 166, type: !9796, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10425)
!10425 = !{!10426, !10427, !10428, !10429}
!10426 = !DILocalVariable(name: "tsdn", arg: 1, scope: !10424, file: !9716, line: 166, type: !391)
!10427 = !DILocalVariable(name: "ptr", arg: 2, scope: !10424, file: !9716, line: 166, type: !554)
!10428 = !DILocalVariable(name: "edata", scope: !10424, file: !9716, line: 167, type: !763)
!10429 = !DILocalVariable(name: "arena_ind", scope: !10424, file: !9716, line: 168, type: !7)
!10430 = !DILocation(line: 166, column: 22, scope: !10424)
!10431 = !DILocation(line: 166, column: 40, scope: !10424)
!10432 = !DILocation(line: 167, column: 2, scope: !10424)
!10433 = !DILocation(line: 167, column: 11, scope: !10424)
!10434 = !DILocation(line: 167, column: 37, scope: !10424)
!10435 = !DILocation(line: 167, column: 63, scope: !10424)
!10436 = !DILocation(line: 167, column: 19, scope: !10424)
!10437 = !DILocation(line: 168, column: 2, scope: !10424)
!10438 = !DILocation(line: 168, column: 11, scope: !10424)
!10439 = !DILocation(line: 168, column: 43, scope: !10424)
!10440 = !DILocation(line: 168, column: 23, scope: !10424)
!10441 = !DILocation(line: 169, column: 42, scope: !10424)
!10442 = !DILocation(line: 169, column: 35, scope: !10424)
!10443 = !DILocation(line: 169, column: 20, scope: !10424)
!10444 = !DILocation(line: 170, column: 1, scope: !10424)
!10445 = !DILocation(line: 169, column: 2, scope: !10424)
!10446 = distinct !DISubprogram(name: "edata_arena_ind_get", scope: !70, file: !70, line: 257, type: !10447, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10451)
!10447 = !DISubroutineType(types: !10448)
!10448 = !{!7, !10449}
!10449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10450, size: 64)
!10450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !764)
!10451 = !{!10452, !10453}
!10452 = !DILocalVariable(name: "edata", arg: 1, scope: !10446, file: !70, line: 257, type: !10449)
!10453 = !DILocalVariable(name: "arena_ind", scope: !10446, file: !70, line: 258, type: !7)
!10454 = !DILocation(line: 257, column: 36, scope: !10446)
!10455 = !DILocation(line: 258, column: 2, scope: !10446)
!10456 = !DILocation(line: 258, column: 11, scope: !10446)
!10457 = !DILocation(line: 258, column: 35, scope: !10446)
!10458 = !DILocation(line: 258, column: 42, scope: !10446)
!10459 = !{!10460, !2664, i64 0}
!10460 = !{!"edata_s", !2664, i64 0, !2659, i64 8, !2660, i64 16, !2659, i64 24, !2664, i64 32, !2660, i64 40, !2660, i64 64}
!10461 = !DILocation(line: 258, column: 49, scope: !10446)
!10462 = !DILocation(line: 259, column: 29, scope: !10446)
!10463 = !DILocation(line: 258, column: 23, scope: !10446)
!10464 = !DILocation(line: 260, column: 2, scope: !10446)
!10465 = !DILocation(line: 260, column: 2, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10446, file: !70, line: 260, column: 2)
!10467 = !DILocation(line: 262, column: 9, scope: !10446)
!10468 = !DILocation(line: 263, column: 1, scope: !10446)
!10469 = !DILocation(line: 262, column: 2, scope: !10446)
!10470 = distinct !DISubprogram(name: "atomic_load_p", scope: !459, file: !459, line: 83, type: !10471, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10475)
!10471 = !DISubroutineType(types: !10472)
!10472 = !{!383, !10473, !2804}
!10473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10474, size: 64)
!10474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !879)
!10475 = !{!10476, !10477, !10478}
!10476 = !DILocalVariable(name: "a", arg: 1, scope: !10470, file: !459, line: 83, type: !10473)
!10477 = !DILocalVariable(name: "mo", arg: 2, scope: !10470, file: !459, line: 83, type: !2804)
!10478 = !DILocalVariable(name: "result", scope: !10470, file: !459, line: 83, type: !383)
!10479 = !DILocation(line: 83, column: 1, scope: !10470)
!10480 = distinct !DISubprogram(name: "idalloctm", scope: !2572, file: !2572, line: 106, type: !10481, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10483)
!10481 = !DISubroutineType(types: !10482)
!10482 = !{null, !391, !383, !740, !5283, !389, !389}
!10483 = !{!10484, !10485, !10486, !10487, !10488, !10489}
!10484 = !DILocalVariable(name: "tsdn", arg: 1, scope: !10480, file: !2572, line: 106, type: !391)
!10485 = !DILocalVariable(name: "ptr", arg: 2, scope: !10480, file: !2572, line: 106, type: !383)
!10486 = !DILocalVariable(name: "tcache", arg: 3, scope: !10480, file: !2572, line: 106, type: !740)
!10487 = !DILocalVariable(name: "alloc_ctx", arg: 4, scope: !10480, file: !2572, line: 107, type: !5283)
!10488 = !DILocalVariable(name: "is_internal", arg: 5, scope: !10480, file: !2572, line: 107, type: !389)
!10489 = !DILocalVariable(name: "slow_path", arg: 6, scope: !10480, file: !2572, line: 107, type: !389)
!10490 = !DILocation(line: 106, column: 19, scope: !10480)
!10491 = !DILocation(line: 106, column: 31, scope: !10480)
!10492 = !DILocation(line: 106, column: 46, scope: !10480)
!10493 = !DILocation(line: 107, column: 23, scope: !10480)
!10494 = !DILocation(line: 107, column: 39, scope: !10480)
!10495 = !DILocation(line: 107, column: 57, scope: !10480)
!10496 = !DILocation(line: 108, column: 2, scope: !10480)
!10497 = !DILocation(line: 108, column: 2, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10480, file: !2572, line: 108, column: 2)
!10499 = !DILocation(line: 109, column: 2, scope: !10480)
!10500 = !DILocation(line: 109, column: 2, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10480, file: !2572, line: 109, column: 2)
!10502 = !DILocation(line: 110, column: 2, scope: !10480)
!10503 = !DILocation(line: 110, column: 2, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10480, file: !2572, line: 110, column: 2)
!10505 = !DILocation(line: 111, column: 53, scope: !10480)
!10506 = !DILocation(line: 111, column: 31, scope: !10480)
!10507 = !DILocation(line: 111, column: 2, scope: !10480)
!10508 = !DILocation(line: 113, column: 22, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10480, file: !2572, line: 113, column: 6)
!10510 = !DILocation(line: 113, column: 6, scope: !10480)
!10511 = !DILocation(line: 114, column: 30, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10509, file: !2572, line: 113, column: 35)
!10513 = !DILocation(line: 114, column: 36, scope: !10512)
!10514 = !DILocation(line: 114, column: 22, scope: !10512)
!10515 = !DILocation(line: 114, column: 50, scope: !10512)
!10516 = !DILocation(line: 114, column: 56, scope: !10512)
!10517 = !DILocation(line: 114, column: 42, scope: !10512)
!10518 = !DILocation(line: 114, column: 3, scope: !10512)
!10519 = !DILocation(line: 115, column: 2, scope: !10512)
!10520 = !DILocation(line: 116, column: 7, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10480, file: !2572, line: 116, column: 6)
!10522 = !DILocation(line: 116, column: 19, scope: !10521)
!10523 = !DILocation(line: 116, column: 33, scope: !10521)
!10524 = !DILocation(line: 116, column: 23, scope: !10521)
!10525 = !DILocation(line: 116, column: 39, scope: !10521)
!10526 = !DILocation(line: 117, column: 40, scope: !10521)
!10527 = !DILocation(line: 117, column: 31, scope: !10521)
!10528 = !DILocation(line: 117, column: 6, scope: !10521)
!10529 = !DILocation(line: 117, column: 47, scope: !10521)
!10530 = !DILocation(line: 116, column: 6, scope: !10480)
!10531 = !DILocation(line: 118, column: 3, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10521, file: !2572, line: 117, column: 53)
!10533 = !DILocation(line: 118, column: 3, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10532, file: !2572, line: 118, column: 3)
!10535 = !DILocation(line: 119, column: 2, scope: !10532)
!10536 = !DILocation(line: 120, column: 15, scope: !10480)
!10537 = !DILocation(line: 120, column: 21, scope: !10480)
!10538 = !DILocation(line: 120, column: 26, scope: !10480)
!10539 = !DILocation(line: 120, column: 34, scope: !10480)
!10540 = !DILocation(line: 120, column: 45, scope: !10480)
!10541 = !DILocation(line: 120, column: 2, scope: !10480)
!10542 = !DILocation(line: 121, column: 1, scope: !10480)
!10543 = distinct !DISubprogram(name: "arena_internal_sub", scope: !3545, file: !3545, line: 15, type: !9782, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10544)
!10544 = !{!10545, !10546}
!10545 = !DILocalVariable(name: "arena", arg: 1, scope: !10543, file: !3545, line: 15, type: !594)
!10546 = !DILocalVariable(name: "size", arg: 2, scope: !10543, file: !3545, line: 15, type: !387)
!10547 = !DILocation(line: 15, column: 29, scope: !10543)
!10548 = !DILocation(line: 15, column: 43, scope: !10543)
!10549 = !DILocation(line: 16, column: 23, scope: !10543)
!10550 = !DILocation(line: 16, column: 30, scope: !10543)
!10551 = !DILocation(line: 16, column: 36, scope: !10543)
!10552 = !DILocation(line: 16, column: 46, scope: !10543)
!10553 = !DILocation(line: 16, column: 2, scope: !10543)
!10554 = !DILocation(line: 17, column: 1, scope: !10543)
!10555 = distinct !DISubprogram(name: "arena_dalloc", scope: !9716, file: !9716, line: 302, type: !10556, scopeLine: 303, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10558)
!10556 = !DISubroutineType(types: !10557)
!10557 = !{null, !391, !383, !740, !5283, !389}
!10558 = !{!10559, !10560, !10561, !10562, !10563, !10564}
!10559 = !DILocalVariable(name: "tsdn", arg: 1, scope: !10555, file: !9716, line: 302, type: !391)
!10560 = !DILocalVariable(name: "ptr", arg: 2, scope: !10555, file: !9716, line: 302, type: !383)
!10561 = !DILocalVariable(name: "tcache", arg: 3, scope: !10555, file: !9716, line: 302, type: !740)
!10562 = !DILocalVariable(name: "caller_alloc_ctx", arg: 4, scope: !10555, file: !9716, line: 303, type: !5283)
!10563 = !DILocalVariable(name: "slow_path", arg: 5, scope: !10555, file: !9716, line: 303, type: !389)
!10564 = !DILocalVariable(name: "alloc_ctx", scope: !10555, file: !9716, line: 312, type: !1778)
!10565 = !DILocation(line: 302, column: 22, scope: !10555)
!10566 = !DILocation(line: 302, column: 34, scope: !10555)
!10567 = !DILocation(line: 302, column: 49, scope: !10555)
!10568 = !DILocation(line: 303, column: 23, scope: !10555)
!10569 = !DILocation(line: 303, column: 46, scope: !10555)
!10570 = !DILocation(line: 304, column: 2, scope: !10555)
!10571 = !DILocation(line: 304, column: 2, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10555, file: !9716, line: 304, column: 2)
!10573 = !DILocation(line: 305, column: 2, scope: !10555)
!10574 = !DILocation(line: 305, column: 2, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10555, file: !9716, line: 305, column: 2)
!10576 = !DILocation(line: 307, column: 6, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10555, file: !9716, line: 307, column: 6)
!10578 = !DILocation(line: 307, column: 6, scope: !10555)
!10579 = !DILocation(line: 308, column: 26, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10577, file: !9716, line: 307, column: 32)
!10581 = !DILocation(line: 308, column: 32, scope: !10580)
!10582 = !DILocation(line: 308, column: 3, scope: !10580)
!10583 = !DILocation(line: 309, column: 3, scope: !10580)
!10584 = !DILocation(line: 312, column: 2, scope: !10555)
!10585 = !DILocation(line: 312, column: 19, scope: !10555)
!10586 = !DILocation(line: 313, column: 6, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10555, file: !9716, line: 313, column: 6)
!10588 = !DILocation(line: 313, column: 23, scope: !10587)
!10589 = !DILocation(line: 313, column: 6, scope: !10555)
!10590 = !DILocation(line: 314, column: 16, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10587, file: !9716, line: 313, column: 32)
!10592 = !DILocation(line: 314, column: 15, scope: !10591)
!10593 = !{i64 0, i64 4, !2791, i64 4, i64 1, !2695}
!10594 = !DILocation(line: 315, column: 2, scope: !10591)
!10595 = !DILocation(line: 316, column: 26, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10587, file: !9716, line: 315, column: 9)
!10597 = !DILocation(line: 316, column: 16, scope: !10596)
!10598 = !DILocation(line: 316, column: 15, scope: !10596)
!10599 = !DILocation(line: 316, column: 3, scope: !10596)
!10600 = !DILocation(line: 317, column: 25, scope: !10596)
!10601 = !DILocation(line: 317, column: 51, scope: !10596)
!10602 = !DILocation(line: 317, column: 3, scope: !10596)
!10603 = !DILocation(line: 329, column: 6, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10555, file: !9716, line: 329, column: 6)
!10605 = !DILocation(line: 329, column: 6, scope: !10555)
!10606 = !DILocation(line: 331, column: 32, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10604, file: !9716, line: 329, column: 30)
!10608 = !DILocation(line: 331, column: 23, scope: !10607)
!10609 = !DILocation(line: 331, column: 39, scope: !10607)
!10610 = !DILocation(line: 331, column: 47, scope: !10607)
!10611 = !DILocation(line: 332, column: 17, scope: !10607)
!10612 = !DILocation(line: 332, column: 24, scope: !10607)
!10613 = !DILocation(line: 331, column: 3, scope: !10607)
!10614 = !DILocation(line: 333, column: 2, scope: !10607)
!10615 = !DILocation(line: 334, column: 22, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10604, file: !9716, line: 333, column: 9)
!10617 = !DILocation(line: 334, column: 28, scope: !10616)
!10618 = !DILocation(line: 334, column: 33, scope: !10616)
!10619 = !DILocation(line: 334, column: 51, scope: !10616)
!10620 = !DILocation(line: 335, column: 7, scope: !10616)
!10621 = !DILocation(line: 334, column: 3, scope: !10616)
!10622 = !DILocation(line: 337, column: 1, scope: !10555)
!10623 = distinct !DISubprogram(name: "atomic_fetch_sub_zu", scope: !459, file: !459, line: 93, type: !10416, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10624)
!10624 = !{!10625, !10626, !10627}
!10625 = !DILocalVariable(name: "a", arg: 1, scope: !10623, file: !459, line: 93, type: !10418)
!10626 = !DILocalVariable(name: "val", arg: 2, scope: !10623, file: !459, line: 93, type: !387)
!10627 = !DILocalVariable(name: "mo", arg: 3, scope: !10623, file: !459, line: 93, type: !2804)
!10628 = !DILocation(line: 93, column: 1, scope: !10623)
!10629 = distinct !DISubprogram(name: "arena_dalloc_no_tcache", scope: !9716, file: !9716, line: 258, type: !10630, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10632)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{null, !391, !383}
!10632 = !{!10633, !10634, !10635}
!10633 = !DILocalVariable(name: "tsdn", arg: 1, scope: !10629, file: !9716, line: 258, type: !391)
!10634 = !DILocalVariable(name: "ptr", arg: 2, scope: !10629, file: !9716, line: 258, type: !383)
!10635 = !DILocalVariable(name: "alloc_ctx", scope: !10629, file: !9716, line: 261, type: !1778)
!10636 = !DILocation(line: 258, column: 32, scope: !10629)
!10637 = !DILocation(line: 258, column: 44, scope: !10629)
!10638 = !DILocation(line: 259, column: 2, scope: !10629)
!10639 = !DILocation(line: 259, column: 2, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10629, file: !9716, line: 259, column: 2)
!10641 = !DILocation(line: 261, column: 2, scope: !10629)
!10642 = !DILocation(line: 261, column: 19, scope: !10629)
!10643 = !DILocation(line: 262, column: 24, scope: !10629)
!10644 = !DILocation(line: 262, column: 50, scope: !10629)
!10645 = !DILocation(line: 262, column: 2, scope: !10629)
!10646 = !DILocation(line: 272, column: 6, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10629, file: !9716, line: 272, column: 6)
!10648 = !DILocation(line: 272, column: 6, scope: !10629)
!10649 = !DILocation(line: 274, column: 22, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10647, file: !9716, line: 272, column: 30)
!10651 = !DILocation(line: 274, column: 28, scope: !10650)
!10652 = !DILocation(line: 274, column: 3, scope: !10650)
!10653 = !DILocation(line: 275, column: 2, scope: !10650)
!10654 = !DILocation(line: 276, column: 32, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10647, file: !9716, line: 275, column: 9)
!10656 = !DILocation(line: 276, column: 38, scope: !10655)
!10657 = !DILocation(line: 276, column: 53, scope: !10655)
!10658 = !DILocation(line: 276, column: 3, scope: !10655)
!10659 = !DILocation(line: 278, column: 1, scope: !10629)
!10660 = distinct !DISubprogram(name: "tcache_dalloc_small", scope: !2603, file: !2603, line: 129, type: !10661, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10663)
!10661 = !DISubroutineType(types: !10662)
!10662 = !{null, !1347, !740, !383, !726, !389}
!10663 = !{!10664, !10665, !10666, !10667, !10668, !10669, !10670, !10673, !10674}
!10664 = !DILocalVariable(name: "tsd", arg: 1, scope: !10660, file: !2603, line: 129, type: !1347)
!10665 = !DILocalVariable(name: "tcache", arg: 2, scope: !10660, file: !2603, line: 129, type: !740)
!10666 = !DILocalVariable(name: "ptr", arg: 3, scope: !10660, file: !2603, line: 129, type: !383)
!10667 = !DILocalVariable(name: "binind", arg: 4, scope: !10660, file: !2603, line: 129, type: !726)
!10668 = !DILocalVariable(name: "slow_path", arg: 5, scope: !10660, file: !2603, line: 130, type: !389)
!10669 = !DILocalVariable(name: "bin", scope: !10660, file: !2603, line: 133, type: !707)
!10670 = !DILocalVariable(name: "max", scope: !10671, file: !2603, line: 154, type: !1427)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !2603, line: 149, column: 50)
!10672 = distinct !DILexicalBlock(scope: !10660, file: !2603, line: 149, column: 6)
!10673 = !DILocalVariable(name: "remain", scope: !10671, file: !2603, line: 156, type: !7)
!10674 = !DILocalVariable(name: "ret", scope: !10671, file: !2603, line: 158, type: !389)
!10675 = !DILocation(line: 129, column: 28, scope: !10660)
!10676 = !DILocation(line: 129, column: 43, scope: !10660)
!10677 = !DILocation(line: 129, column: 57, scope: !10660)
!10678 = !DILocation(line: 129, column: 70, scope: !10660)
!10679 = !DILocation(line: 130, column: 10, scope: !10660)
!10680 = !DILocation(line: 131, column: 2, scope: !10660)
!10681 = !DILocation(line: 131, column: 2, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10660, file: !2603, line: 131, column: 2)
!10683 = !DILocation(line: 133, column: 2, scope: !10660)
!10684 = !DILocation(line: 133, column: 15, scope: !10660)
!10685 = !DILocation(line: 133, column: 22, scope: !10660)
!10686 = !DILocation(line: 133, column: 30, scope: !10660)
!10687 = !DILocation(line: 133, column: 35, scope: !10660)
!10688 = !DILocation(line: 139, column: 32, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10660, file: !2603, line: 139, column: 6)
!10690 = !DILocation(line: 139, column: 6, scope: !10689)
!10691 = !DILocation(line: 139, column: 6, scope: !10660)
!10692 = !DILocation(line: 141, column: 16, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10689, file: !2603, line: 139, column: 38)
!10694 = !DILocation(line: 141, column: 35, scope: !10693)
!10695 = !DILocation(line: 141, column: 21, scope: !10693)
!10696 = !DILocation(line: 141, column: 3, scope: !10693)
!10697 = !DILocation(line: 142, column: 23, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10693, file: !2603, line: 142, column: 7)
!10699 = !DILocation(line: 142, column: 28, scope: !10698)
!10700 = !DILocation(line: 142, column: 7, scope: !10698)
!10701 = !DILocation(line: 142, column: 7, scope: !10693)
!10702 = !DILocation(line: 143, column: 4, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10698, file: !2603, line: 142, column: 34)
!10704 = !DILocation(line: 145, column: 3, scope: !10693)
!10705 = !DILocation(line: 145, column: 3, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10693, file: !2603, line: 145, column: 3)
!10707 = !DILocation(line: 147, column: 2, scope: !10693)
!10708 = !DILocation(line: 149, column: 6, scope: !10672)
!10709 = !DILocation(line: 149, column: 6, scope: !10660)
!10710 = !DILocation(line: 150, column: 7, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10671, file: !2603, line: 150, column: 7)
!10712 = !DILocation(line: 150, column: 7, scope: !10671)
!10713 = !DILocation(line: 151, column: 32, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10711, file: !2603, line: 150, column: 57)
!10715 = !DILocation(line: 151, column: 23, scope: !10714)
!10716 = !DILocation(line: 151, column: 38, scope: !10714)
!10717 = !DILocation(line: 151, column: 4, scope: !10714)
!10718 = !DILocation(line: 152, column: 4, scope: !10714)
!10719 = !DILocation(line: 154, column: 3, scope: !10671)
!10720 = !DILocation(line: 154, column: 18, scope: !10671)
!10721 = !DILocation(line: 155, column: 8, scope: !10671)
!10722 = !DILocation(line: 155, column: 24, scope: !10671)
!10723 = !DILocation(line: 154, column: 24, scope: !10671)
!10724 = !DILocation(line: 156, column: 3, scope: !10671)
!10725 = !DILocation(line: 156, column: 12, scope: !10671)
!10726 = !DILocation(line: 156, column: 21, scope: !10671)
!10727 = !DILocation(line: 156, column: 28, scope: !10671)
!10728 = !DILocation(line: 156, column: 25, scope: !10671)
!10729 = !DILocation(line: 157, column: 26, scope: !10671)
!10730 = !DILocation(line: 157, column: 31, scope: !10671)
!10731 = !DILocation(line: 157, column: 39, scope: !10671)
!10732 = !DILocation(line: 157, column: 44, scope: !10671)
!10733 = !DILocation(line: 157, column: 52, scope: !10671)
!10734 = !DILocation(line: 157, column: 3, scope: !10671)
!10735 = !DILocation(line: 158, column: 3, scope: !10671)
!10736 = !DILocation(line: 158, column: 8, scope: !10671)
!10737 = !DILocation(line: 158, column: 36, scope: !10671)
!10738 = !DILocation(line: 158, column: 41, scope: !10671)
!10739 = !DILocation(line: 158, column: 14, scope: !10671)
!10740 = !DILocation(line: 159, column: 3, scope: !10671)
!10741 = !DILocation(line: 159, column: 3, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10671, file: !2603, line: 159, column: 3)
!10743 = !DILocation(line: 160, column: 2, scope: !10672)
!10744 = !DILocation(line: 160, column: 2, scope: !10671)
!10745 = !DILocation(line: 161, column: 1, scope: !10660)
!10746 = distinct !DISubprogram(name: "arena_dalloc_large", scope: !9716, file: !9716, line: 281, type: !10747, scopeLine: 282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10749)
!10747 = !DISubroutineType(types: !10748)
!10748 = !{null, !391, !383, !740, !726, !389}
!10749 = !{!10750, !10751, !10752, !10753, !10754, !10755}
!10750 = !DILocalVariable(name: "tsdn", arg: 1, scope: !10746, file: !9716, line: 281, type: !391)
!10751 = !DILocalVariable(name: "ptr", arg: 2, scope: !10746, file: !9716, line: 281, type: !383)
!10752 = !DILocalVariable(name: "tcache", arg: 3, scope: !10746, file: !9716, line: 281, type: !740)
!10753 = !DILocalVariable(name: "szind", arg: 4, scope: !10746, file: !9716, line: 281, type: !726)
!10754 = !DILocalVariable(name: "slow_path", arg: 5, scope: !10746, file: !9716, line: 282, type: !389)
!10755 = !DILocalVariable(name: "edata", scope: !10756, file: !9716, line: 291, type: !763)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !9716, line: 290, column: 9)
!10757 = distinct !DILexicalBlock(scope: !10746, file: !9716, line: 283, column: 6)
!10758 = !DILocation(line: 281, column: 28, scope: !10746)
!10759 = !DILocation(line: 281, column: 40, scope: !10746)
!10760 = !DILocation(line: 281, column: 55, scope: !10746)
!10761 = !DILocation(line: 281, column: 71, scope: !10746)
!10762 = !DILocation(line: 282, column: 10, scope: !10746)
!10763 = !DILocation(line: 283, column: 6, scope: !10757)
!10764 = !DILocation(line: 283, column: 14, scope: !10757)
!10765 = !DILocation(line: 283, column: 12, scope: !10757)
!10766 = !DILocation(line: 283, column: 6, scope: !10746)
!10767 = !DILocation(line: 287, column: 33, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !9716, line: 286, column: 10)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !9716, line: 284, column: 7)
!10770 = distinct !DILexicalBlock(scope: !10757, file: !9716, line: 283, column: 22)
!10771 = !DILocation(line: 287, column: 24, scope: !10768)
!10772 = !DILocation(line: 287, column: 40, scope: !10768)
!10773 = !DILocation(line: 287, column: 48, scope: !10768)
!10774 = !DILocation(line: 287, column: 53, scope: !10768)
!10775 = !DILocation(line: 288, column: 8, scope: !10768)
!10776 = !DILocation(line: 287, column: 4, scope: !10768)
!10777 = !DILocation(line: 290, column: 2, scope: !10770)
!10778 = !DILocation(line: 291, column: 3, scope: !10756)
!10779 = !DILocation(line: 291, column: 12, scope: !10756)
!10780 = !DILocation(line: 291, column: 38, scope: !10756)
!10781 = !DILocation(line: 292, column: 7, scope: !10756)
!10782 = !DILocation(line: 291, column: 20, scope: !10756)
!10783 = !DILocation(line: 293, column: 34, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10756, file: !9716, line: 293, column: 7)
!10785 = !DILocation(line: 293, column: 41, scope: !10784)
!10786 = !DILocation(line: 293, column: 46, scope: !10784)
!10787 = !DILocation(line: 293, column: 7, scope: !10784)
!10788 = !DILocation(line: 293, column: 7, scope: !10756)
!10789 = !DILocation(line: 295, column: 4, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10784, file: !9716, line: 293, column: 54)
!10791 = !DILocation(line: 297, column: 16, scope: !10756)
!10792 = !DILocation(line: 297, column: 22, scope: !10756)
!10793 = !DILocation(line: 297, column: 3, scope: !10756)
!10794 = !DILocation(line: 298, column: 2, scope: !10757)
!10795 = !DILocation(line: 299, column: 1, scope: !10746)
!10796 = !DISubprogram(name: "arena_dalloc_small", scope: !3073, file: !3073, line: 80, type: !10630, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10797 = distinct !DISubprogram(name: "arena_dalloc_large_no_tcache", scope: !9716, file: !9716, line: 243, type: !10798, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10800)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{null, !391, !383, !726}
!10800 = !{!10801, !10802, !10803, !10804}
!10801 = !DILocalVariable(name: "tsdn", arg: 1, scope: !10797, file: !9716, line: 243, type: !391)
!10802 = !DILocalVariable(name: "ptr", arg: 2, scope: !10797, file: !9716, line: 243, type: !383)
!10803 = !DILocalVariable(name: "szind", arg: 3, scope: !10797, file: !9716, line: 243, type: !726)
!10804 = !DILocalVariable(name: "edata", scope: !10805, file: !9716, line: 247, type: !763)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !9716, line: 246, column: 9)
!10806 = distinct !DILexicalBlock(scope: !10797, file: !9716, line: 244, column: 6)
!10807 = !DILocation(line: 243, column: 38, scope: !10797)
!10808 = !DILocation(line: 243, column: 50, scope: !10797)
!10809 = !DILocation(line: 243, column: 63, scope: !10797)
!10810 = !DILocation(line: 247, column: 3, scope: !10805)
!10811 = !DILocation(line: 247, column: 12, scope: !10805)
!10812 = !DILocation(line: 247, column: 38, scope: !10805)
!10813 = !DILocation(line: 248, column: 7, scope: !10805)
!10814 = !DILocation(line: 247, column: 20, scope: !10805)
!10815 = !DILocation(line: 249, column: 34, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10805, file: !9716, line: 249, column: 7)
!10817 = !DILocation(line: 249, column: 41, scope: !10816)
!10818 = !DILocation(line: 249, column: 46, scope: !10816)
!10819 = !DILocation(line: 249, column: 7, scope: !10816)
!10820 = !DILocation(line: 249, column: 7, scope: !10805)
!10821 = !DILocation(line: 251, column: 4, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10816, file: !9716, line: 249, column: 54)
!10823 = !DILocation(line: 253, column: 16, scope: !10805)
!10824 = !DILocation(line: 253, column: 22, scope: !10805)
!10825 = !DILocation(line: 253, column: 3, scope: !10805)
!10826 = !DILocation(line: 254, column: 2, scope: !10806)
!10827 = !DILocation(line: 255, column: 1, scope: !10797)
!10828 = distinct !DISubprogram(name: "large_dalloc_safety_checks", scope: !9716, file: !9716, line: 214, type: !10829, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10831)
!10829 = !DISubroutineType(types: !10830)
!10830 = !{!389, !763, !383, !726}
!10831 = !{!10832, !10833, !10834}
!10832 = !DILocalVariable(name: "edata", arg: 1, scope: !10828, file: !9716, line: 214, type: !763)
!10833 = !DILocalVariable(name: "ptr", arg: 2, scope: !10828, file: !9716, line: 214, type: !383)
!10834 = !DILocalVariable(name: "szind", arg: 3, scope: !10828, file: !9716, line: 214, type: !726)
!10835 = !DILocation(line: 214, column: 37, scope: !10828)
!10836 = !DILocation(line: 214, column: 50, scope: !10828)
!10837 = !DILocation(line: 214, column: 63, scope: !10828)
!10838 = !DILocation(line: 216, column: 3, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !9716, line: 215, column: 33)
!10840 = distinct !DILexicalBlock(scope: !10828, file: !9716, line: 215, column: 6)
!10841 = !DISubprogram(name: "large_dalloc", scope: !10169, file: !10169, line: 17, type: !10842, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10842 = !DISubroutineType(types: !10843)
!10843 = !{null, !391, !763}
!10844 = distinct !DISubprogram(name: "cache_bin_nonfast_aligned", scope: !697, file: !697, line: 152, type: !10845, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10847)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{!389, !554}
!10847 = !{!10848}
!10848 = !DILocalVariable(name: "ptr", arg: 1, scope: !10844, file: !697, line: 152, type: !554)
!10849 = !DILocation(line: 152, column: 39, scope: !10844)
!10850 = !DILocation(line: 154, column: 3, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !697, line: 153, column: 29)
!10852 = distinct !DILexicalBlock(scope: !10844, file: !697, line: 153, column: 6)
!10853 = distinct !DISubprogram(name: "san_junk_ptr", scope: !2550, file: !2550, line: 167, type: !958, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10854)
!10854 = !{!10855, !10856, !10857, !10858, !10859}
!10855 = !DILocalVariable(name: "ptr", arg: 1, scope: !10853, file: !2550, line: 167, type: !383)
!10856 = !DILocalVariable(name: "usize", arg: 2, scope: !10853, file: !2550, line: 167, type: !387)
!10857 = !DILocalVariable(name: "first", scope: !10853, file: !2550, line: 173, type: !383)
!10858 = !DILocalVariable(name: "mid", scope: !10853, file: !2550, line: 173, type: !383)
!10859 = !DILocalVariable(name: "last", scope: !10853, file: !2550, line: 173, type: !383)
!10860 = !DILocation(line: 167, column: 20, scope: !10853)
!10861 = !DILocation(line: 167, column: 32, scope: !10853)
!10862 = !DILocation(line: 168, column: 6, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10853, file: !2550, line: 168, column: 6)
!10864 = !DILocation(line: 168, column: 6, scope: !10853)
!10865 = !DILocation(line: 169, column: 10, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10863, file: !2550, line: 168, column: 34)
!10867 = !DILocation(line: 169, column: 38, scope: !10866)
!10868 = !DILocation(line: 169, column: 3, scope: !10866)
!10869 = !DILocation(line: 170, column: 3, scope: !10866)
!10870 = !DILocation(line: 173, column: 2, scope: !10853)
!10871 = !DILocation(line: 173, column: 8, scope: !10853)
!10872 = !DILocation(line: 173, column: 16, scope: !10853)
!10873 = !DILocation(line: 173, column: 22, scope: !10853)
!10874 = !DILocation(line: 174, column: 25, scope: !10853)
!10875 = !DILocation(line: 174, column: 30, scope: !10853)
!10876 = !DILocation(line: 174, column: 2, scope: !10853)
!10877 = !DILocation(line: 175, column: 16, scope: !10853)
!10878 = !DILocation(line: 175, column: 22, scope: !10853)
!10879 = !DILocation(line: 176, column: 16, scope: !10853)
!10880 = !DILocation(line: 176, column: 20, scope: !10853)
!10881 = !DILocation(line: 177, column: 16, scope: !10853)
!10882 = !DILocation(line: 177, column: 21, scope: !10853)
!10883 = !DILocation(line: 178, column: 1, scope: !10853)
!10884 = distinct !DISubprogram(name: "cache_bin_stash", scope: !697, file: !697, line: 449, type: !10885, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10887)
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!389, !707, !383}
!10887 = !{!10888, !10889, !10890, !10891}
!10888 = !DILocalVariable(name: "bin", arg: 1, scope: !10884, file: !697, line: 449, type: !707)
!10889 = !DILocalVariable(name: "ptr", arg: 2, scope: !10884, file: !697, line: 449, type: !383)
!10890 = !DILocalVariable(name: "low_bits_head", scope: !10884, file: !697, line: 455, type: !719)
!10891 = !DILocalVariable(name: "diff", scope: !10884, file: !697, line: 457, type: !719)
!10892 = !DILocation(line: 449, column: 30, scope: !10884)
!10893 = !DILocation(line: 449, column: 41, scope: !10884)
!10894 = !DILocation(line: 450, column: 21, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10884, file: !697, line: 450, column: 6)
!10896 = !DILocation(line: 450, column: 6, scope: !10895)
!10897 = !DILocation(line: 450, column: 6, scope: !10884)
!10898 = !DILocation(line: 451, column: 3, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10895, file: !697, line: 450, column: 27)
!10900 = !DILocation(line: 455, column: 2, scope: !10884)
!10901 = !DILocation(line: 455, column: 11, scope: !10884)
!10902 = !DILocation(line: 455, column: 48, scope: !10884)
!10903 = !DILocation(line: 455, column: 53, scope: !10884)
!10904 = !DILocation(line: 455, column: 37, scope: !10884)
!10905 = !DILocation(line: 455, column: 27, scope: !10884)
!10906 = !DILocation(line: 457, column: 2, scope: !10884)
!10907 = !DILocation(line: 457, column: 11, scope: !10884)
!10908 = !DILocation(line: 457, column: 33, scope: !10884)
!10909 = !DILocation(line: 457, column: 38, scope: !10884)
!10910 = !DILocation(line: 457, column: 43, scope: !10884)
!10911 = !{!6246, !6248, i64 18}
!10912 = !DILocation(line: 457, column: 58, scope: !10884)
!10913 = !DILocation(line: 457, column: 18, scope: !10884)
!10914 = !DILocation(line: 459, column: 50, scope: !10884)
!10915 = !DILocation(line: 459, column: 24, scope: !10884)
!10916 = !DILocation(line: 459, column: 29, scope: !10884)
!10917 = !DILocation(line: 459, column: 13, scope: !10884)
!10918 = !DILocation(line: 459, column: 42, scope: !10884)
!10919 = !DILocation(line: 459, column: 40, scope: !10884)
!10920 = !DILocation(line: 459, column: 3, scope: !10884)
!10921 = !DILocation(line: 459, column: 48, scope: !10884)
!10922 = !DILocation(line: 461, column: 2, scope: !10884)
!10923 = !DILocation(line: 461, column: 2, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10884, file: !697, line: 461, column: 2)
!10925 = !DILocation(line: 462, column: 2, scope: !10884)
!10926 = !DILocation(line: 462, column: 7, scope: !10884)
!10927 = !DILocation(line: 462, column: 21, scope: !10884)
!10928 = !DILocation(line: 463, column: 27, scope: !10884)
!10929 = !DILocation(line: 463, column: 32, scope: !10884)
!10930 = !DILocation(line: 463, column: 37, scope: !10884)
!10931 = !DILocation(line: 463, column: 52, scope: !10884)
!10932 = !DILocation(line: 463, column: 2, scope: !10884)
!10933 = !DILocation(line: 465, column: 2, scope: !10884)
!10934 = !DILocation(line: 466, column: 1, scope: !10884)
!10935 = distinct !DISubprogram(name: "cache_bin_dalloc_easy", scope: !697, file: !697, line: 434, type: !10885, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10936)
!10936 = !{!10937, !10938}
!10937 = !DILocalVariable(name: "bin", arg: 1, scope: !10935, file: !697, line: 434, type: !707)
!10938 = !DILocalVariable(name: "ptr", arg: 2, scope: !10935, file: !697, line: 434, type: !383)
!10939 = !DILocation(line: 434, column: 36, scope: !10935)
!10940 = !DILocation(line: 434, column: 47, scope: !10935)
!10941 = !DILocation(line: 435, column: 6, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10935, file: !697, line: 435, column: 6)
!10943 = !DILocation(line: 435, column: 6, scope: !10935)
!10944 = !DILocation(line: 436, column: 3, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10942, file: !697, line: 435, column: 37)
!10946 = !DILocation(line: 439, column: 2, scope: !10935)
!10947 = !DILocation(line: 439, column: 7, scope: !10935)
!10948 = !DILocation(line: 439, column: 17, scope: !10935)
!10949 = !DILocation(line: 440, column: 21, scope: !10935)
!10950 = !DILocation(line: 440, column: 3, scope: !10935)
!10951 = !DILocation(line: 440, column: 8, scope: !10935)
!10952 = !DILocation(line: 440, column: 19, scope: !10935)
!10953 = !DILocation(line: 441, column: 27, scope: !10935)
!10954 = !DILocation(line: 441, column: 32, scope: !10935)
!10955 = !DILocation(line: 441, column: 37, scope: !10935)
!10956 = !DILocation(line: 442, column: 27, scope: !10935)
!10957 = !DILocation(line: 442, column: 32, scope: !10935)
!10958 = !DILocation(line: 442, column: 16, scope: !10935)
!10959 = !DILocation(line: 442, column: 6, scope: !10935)
!10960 = !DILocation(line: 441, column: 2, scope: !10935)
!10961 = !DILocation(line: 444, column: 2, scope: !10935)
!10962 = !DILocation(line: 445, column: 1, scope: !10935)
!10963 = !DISubprogram(name: "tcache_bin_flush_small", scope: !6724, file: !6724, line: 41, type: !10964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10964 = !DISubroutineType(types: !10965)
!10965 = !{null, !1347, !740, !707, !726, !7}
!10966 = distinct !DISubprogram(name: "san_junk_ptr_should_slow", scope: !2550, file: !2550, line: 158, type: !5818, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!10967 = !DILocation(line: 163, column: 2, scope: !10966)
!10968 = distinct !DISubprogram(name: "san_junk_ptr_locations", scope: !2550, file: !2550, line: 134, type: !10969, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10971)
!10969 = !DISubroutineType(types: !10970)
!10970 = !{null, !383, !387, !712, !712, !712}
!10971 = !{!10972, !10973, !10974, !10975, !10976, !10977}
!10972 = !DILocalVariable(name: "ptr", arg: 1, scope: !10968, file: !2550, line: 134, type: !383)
!10973 = !DILocalVariable(name: "usize", arg: 2, scope: !10968, file: !2550, line: 134, type: !387)
!10974 = !DILocalVariable(name: "first", arg: 3, scope: !10968, file: !2550, line: 134, type: !712)
!10975 = !DILocalVariable(name: "mid", arg: 4, scope: !10968, file: !2550, line: 134, type: !712)
!10976 = !DILocalVariable(name: "last", arg: 5, scope: !10968, file: !2550, line: 135, type: !712)
!10977 = !DILocalVariable(name: "ptr_sz", scope: !10968, file: !2550, line: 136, type: !387)
!10978 = !DILocation(line: 134, column: 30, scope: !10968)
!10979 = !DILocation(line: 134, column: 42, scope: !10968)
!10980 = !DILocation(line: 134, column: 56, scope: !10968)
!10981 = !DILocation(line: 134, column: 70, scope: !10968)
!10982 = !DILocation(line: 135, column: 12, scope: !10968)
!10983 = !DILocation(line: 136, column: 2, scope: !10968)
!10984 = !DILocation(line: 136, column: 9, scope: !10968)
!10985 = !DILocation(line: 138, column: 11, scope: !10968)
!10986 = !DILocation(line: 138, column: 3, scope: !10968)
!10987 = !DILocation(line: 138, column: 9, scope: !10968)
!10988 = !DILocation(line: 140, column: 29, scope: !10968)
!10989 = !DILocation(line: 140, column: 18, scope: !10968)
!10990 = !DILocation(line: 140, column: 37, scope: !10968)
!10991 = !DILocation(line: 140, column: 43, scope: !10968)
!10992 = !DILocation(line: 140, column: 53, scope: !10968)
!10993 = !DILocation(line: 140, column: 60, scope: !10968)
!10994 = !DILocation(line: 140, column: 51, scope: !10968)
!10995 = !DILocation(line: 140, column: 49, scope: !10968)
!10996 = !DILocation(line: 140, column: 33, scope: !10968)
!10997 = !DILocation(line: 140, column: 9, scope: !10968)
!10998 = !DILocation(line: 140, column: 3, scope: !10968)
!10999 = !DILocation(line: 140, column: 7, scope: !10968)
!11000 = !DILocation(line: 141, column: 2, scope: !10968)
!11001 = !DILocation(line: 141, column: 2, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10968, file: !2550, line: 141, column: 2)
!11003 = !DILocation(line: 142, column: 2, scope: !10968)
!11004 = !DILocation(line: 142, column: 2, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10968, file: !2550, line: 142, column: 2)
!11006 = !DILocation(line: 151, column: 30, scope: !10968)
!11007 = !DILocation(line: 151, column: 19, scope: !10968)
!11008 = !DILocation(line: 151, column: 36, scope: !10968)
!11009 = !DILocation(line: 151, column: 34, scope: !10968)
!11010 = !DILocation(line: 151, column: 42, scope: !10968)
!11011 = !DILocation(line: 151, column: 10, scope: !10968)
!11012 = !DILocation(line: 151, column: 3, scope: !10968)
!11013 = !DILocation(line: 151, column: 8, scope: !10968)
!11014 = !DILocation(line: 152, column: 2, scope: !10968)
!11015 = !DILocation(line: 152, column: 2, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10968, file: !2550, line: 152, column: 2)
!11017 = !DILocation(line: 153, column: 2, scope: !10968)
!11018 = !DILocation(line: 153, column: 2, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10968, file: !2550, line: 153, column: 2)
!11020 = !DILocation(line: 154, column: 2, scope: !10968)
!11021 = !DILocation(line: 154, column: 2, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !10968, file: !2550, line: 154, column: 2)
!11023 = !DILocation(line: 155, column: 1, scope: !10968)
!11024 = distinct !DISubprogram(name: "cache_bin_full", scope: !697, file: !697, line: 426, type: !11025, scopeLine: 426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11027)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{!389, !707}
!11027 = !{!11028}
!11028 = !DILocalVariable(name: "bin", arg: 1, scope: !11024, file: !697, line: 426, type: !707)
!11029 = !DILocation(line: 426, column: 29, scope: !11024)
!11030 = !DILocation(line: 427, column: 31, scope: !11024)
!11031 = !DILocation(line: 427, column: 36, scope: !11024)
!11032 = !DILocation(line: 427, column: 20, scope: !11024)
!11033 = !DILocation(line: 427, column: 10, scope: !11024)
!11034 = !DILocation(line: 427, column: 50, scope: !11024)
!11035 = !DILocation(line: 427, column: 55, scope: !11024)
!11036 = !DILocation(line: 427, column: 47, scope: !11024)
!11037 = !DILocation(line: 427, column: 2, scope: !11024)
!11038 = distinct !DISubprogram(name: "cache_bin_diff", scope: !697, file: !697, line: 197, type: !11039, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11041)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{!719, !707, !719, !719, !389}
!11041 = !{!11042, !11043, !11044, !11045}
!11042 = !DILocalVariable(name: "bin", arg: 1, scope: !11038, file: !697, line: 197, type: !707)
!11043 = !DILocalVariable(name: "earlier", arg: 2, scope: !11038, file: !697, line: 197, type: !719)
!11044 = !DILocalVariable(name: "later", arg: 3, scope: !11038, file: !697, line: 197, type: !719)
!11045 = !DILocalVariable(name: "racy", arg: 4, scope: !11038, file: !697, line: 197, type: !389)
!11046 = !DILocation(line: 197, column: 29, scope: !11038)
!11047 = !DILocation(line: 197, column: 43, scope: !11038)
!11048 = !DILocation(line: 197, column: 61, scope: !11038)
!11049 = !DILocation(line: 197, column: 73, scope: !11038)
!11050 = !DILocation(line: 203, column: 7, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11038, file: !697, line: 203, column: 6)
!11052 = !DILocation(line: 203, column: 6, scope: !11038)
!11053 = !DILocation(line: 204, column: 28, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11051, file: !697, line: 203, column: 13)
!11055 = !DILocation(line: 204, column: 33, scope: !11054)
!11056 = !DILocation(line: 204, column: 42, scope: !11054)
!11057 = !DILocation(line: 204, column: 3, scope: !11054)
!11058 = !DILocation(line: 205, column: 2, scope: !11054)
!11059 = !DILocation(line: 206, column: 9, scope: !11038)
!11060 = !DILocation(line: 206, column: 17, scope: !11038)
!11061 = !DILocation(line: 206, column: 15, scope: !11038)
!11062 = !DILocation(line: 206, column: 2, scope: !11038)
!11063 = distinct !DISubprogram(name: "cache_bin_assert_earlier", scope: !697, file: !697, line: 184, type: !11064, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11066)
!11064 = !DISubroutineType(types: !11065)
!11065 = !{null, !707, !719, !719}
!11066 = !{!11067, !11068, !11069}
!11067 = !DILocalVariable(name: "bin", arg: 1, scope: !11063, file: !697, line: 184, type: !707)
!11068 = !DILocalVariable(name: "earlier", arg: 2, scope: !11063, file: !697, line: 184, type: !719)
!11069 = !DILocalVariable(name: "later", arg: 3, scope: !11063, file: !697, line: 184, type: !719)
!11070 = !DILocation(line: 184, column: 39, scope: !11063)
!11071 = !DILocation(line: 184, column: 53, scope: !11063)
!11072 = !DILocation(line: 184, column: 71, scope: !11063)
!11073 = !DILocation(line: 185, column: 6, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11063, file: !697, line: 185, column: 6)
!11075 = !DILocation(line: 185, column: 16, scope: !11074)
!11076 = !DILocation(line: 185, column: 14, scope: !11074)
!11077 = !DILocation(line: 185, column: 6, scope: !11063)
!11078 = !DILocation(line: 186, column: 3, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11074, file: !697, line: 185, column: 23)
!11080 = !DILocation(line: 186, column: 3, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11079, file: !697, line: 186, column: 3)
!11082 = !DILocation(line: 187, column: 2, scope: !11079)
!11083 = !DILocation(line: 188, column: 1, scope: !11063)
!11084 = distinct !DISubprogram(name: "tcache_dalloc_large", scope: !2603, file: !2603, line: 164, type: !10661, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11085)
!11085 = !{!11086, !11087, !11088, !11089, !11090, !11091, !11092, !11095}
!11086 = !DILocalVariable(name: "tsd", arg: 1, scope: !11084, file: !2603, line: 164, type: !1347)
!11087 = !DILocalVariable(name: "tcache", arg: 2, scope: !11084, file: !2603, line: 164, type: !740)
!11088 = !DILocalVariable(name: "ptr", arg: 3, scope: !11084, file: !2603, line: 164, type: !383)
!11089 = !DILocalVariable(name: "binind", arg: 4, scope: !11084, file: !2603, line: 164, type: !726)
!11090 = !DILocalVariable(name: "slow_path", arg: 5, scope: !11084, file: !2603, line: 165, type: !389)
!11091 = !DILocalVariable(name: "bin", scope: !11084, file: !2603, line: 171, type: !707)
!11092 = !DILocalVariable(name: "remain", scope: !11093, file: !2603, line: 173, type: !7)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !2603, line: 172, column: 50)
!11094 = distinct !DILexicalBlock(scope: !11084, file: !2603, line: 172, column: 6)
!11095 = !DILocalVariable(name: "ret", scope: !11093, file: !2603, line: 176, type: !389)
!11096 = !DILocation(line: 164, column: 28, scope: !11084)
!11097 = !DILocation(line: 164, column: 43, scope: !11084)
!11098 = !DILocation(line: 164, column: 57, scope: !11084)
!11099 = !DILocation(line: 164, column: 70, scope: !11084)
!11100 = !DILocation(line: 165, column: 10, scope: !11084)
!11101 = !DILocation(line: 167, column: 2, scope: !11084)
!11102 = !DILocation(line: 167, column: 2, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11084, file: !2603, line: 167, column: 2)
!11104 = !DILocation(line: 169, column: 2, scope: !11084)
!11105 = !DILocation(line: 169, column: 2, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11084, file: !2603, line: 169, column: 2)
!11107 = !DILocation(line: 171, column: 2, scope: !11084)
!11108 = !DILocation(line: 171, column: 15, scope: !11084)
!11109 = !DILocation(line: 171, column: 22, scope: !11084)
!11110 = !DILocation(line: 171, column: 30, scope: !11084)
!11111 = !DILocation(line: 171, column: 35, scope: !11084)
!11112 = !DILocation(line: 172, column: 6, scope: !11094)
!11113 = !DILocation(line: 172, column: 6, scope: !11084)
!11114 = !DILocation(line: 173, column: 3, scope: !11093)
!11115 = !DILocation(line: 173, column: 12, scope: !11093)
!11116 = !DILocation(line: 174, column: 8, scope: !11093)
!11117 = !DILocation(line: 174, column: 24, scope: !11093)
!11118 = !DILocation(line: 173, column: 21, scope: !11093)
!11119 = !DILocation(line: 174, column: 36, scope: !11093)
!11120 = !DILocation(line: 174, column: 33, scope: !11093)
!11121 = !DILocation(line: 175, column: 26, scope: !11093)
!11122 = !DILocation(line: 175, column: 31, scope: !11093)
!11123 = !DILocation(line: 175, column: 39, scope: !11093)
!11124 = !DILocation(line: 175, column: 44, scope: !11093)
!11125 = !DILocation(line: 175, column: 52, scope: !11093)
!11126 = !DILocation(line: 175, column: 3, scope: !11093)
!11127 = !DILocation(line: 176, column: 3, scope: !11093)
!11128 = !DILocation(line: 176, column: 8, scope: !11093)
!11129 = !DILocation(line: 176, column: 36, scope: !11093)
!11130 = !DILocation(line: 176, column: 41, scope: !11093)
!11131 = !DILocation(line: 176, column: 14, scope: !11093)
!11132 = !DILocation(line: 177, column: 3, scope: !11093)
!11133 = !DILocation(line: 177, column: 3, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11093, file: !2603, line: 177, column: 3)
!11135 = !DILocation(line: 178, column: 2, scope: !11094)
!11136 = !DILocation(line: 178, column: 2, scope: !11093)
!11137 = !DILocation(line: 179, column: 1, scope: !11084)
!11138 = !DISubprogram(name: "tcache_bin_flush_large", scope: !6724, file: !6724, line: 43, type: !10964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11139 = distinct !DISubprogram(name: "witness_assert_not_owner", scope: !19, file: !19, line: 220, type: !11140, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11142)
!11140 = !DISubroutineType(types: !11141)
!11141 = !{null, !1416, !517}
!11142 = !{!11143, !11144, !11145, !11146, !11148}
!11143 = !DILocalVariable(name: "witness_tsdn", arg: 1, scope: !11139, file: !19, line: 220, type: !1416)
!11144 = !DILocalVariable(name: "witness", arg: 2, scope: !11139, file: !19, line: 221, type: !517)
!11145 = !DILocalVariable(name: "witness_tsd", scope: !11139, file: !19, line: 222, type: !6712)
!11146 = !DILocalVariable(name: "witnesses", scope: !11139, file: !19, line: 223, type: !11147)
!11147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!11148 = !DILocalVariable(name: "w", scope: !11139, file: !19, line: 224, type: !524)
!11149 = !DILocation(line: 220, column: 42, scope: !11139)
!11150 = !DILocation(line: 221, column: 22, scope: !11139)
!11151 = !DILocation(line: 222, column: 2, scope: !11139)
!11152 = !DILocation(line: 222, column: 17, scope: !11139)
!11153 = !DILocation(line: 223, column: 2, scope: !11139)
!11154 = !DILocation(line: 223, column: 18, scope: !11139)
!11155 = !DILocation(line: 224, column: 2, scope: !11139)
!11156 = !DILocation(line: 224, column: 13, scope: !11139)
!11157 = !DILocation(line: 244, column: 1, scope: !11139)
!11158 = distinct !DISubprogram(name: "malloc_mutex_trylock_final", scope: !65, file: !65, line: 156, type: !11159, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11161)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{!389, !430}
!11161 = !{!11162}
!11162 = !DILocalVariable(name: "mutex", arg: 1, scope: !11158, file: !65, line: 156, type: !430)
!11163 = !DILocation(line: 156, column: 44, scope: !11158)
!11164 = !DILocation(line: 157, column: 9, scope: !11158)
!11165 = !DILocation(line: 157, column: 2, scope: !11158)
!11166 = !DISubprogram(name: "malloc_mutex_lock_slow", scope: !65, file: !65, line: 147, type: !11167, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11167 = !DISubroutineType(types: !11168)
!11168 = !{null, !430}
!11169 = distinct !DISubprogram(name: "mutex_owner_stats_update", scope: !65, file: !65, line: 161, type: !2904, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11170)
!11170 = !{!11171, !11172, !11173}
!11171 = !DILocalVariable(name: "tsdn", arg: 1, scope: !11169, file: !65, line: 161, type: !391)
!11172 = !DILocalVariable(name: "mutex", arg: 2, scope: !11169, file: !65, line: 161, type: !430)
!11173 = !DILocalVariable(name: "data", scope: !11174, file: !65, line: 163, type: !11176)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !65, line: 162, column: 20)
!11175 = distinct !DILexicalBlock(scope: !11169, file: !65, line: 162, column: 6)
!11176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!11177 = !DILocation(line: 161, column: 34, scope: !11169)
!11178 = !DILocation(line: 161, column: 56, scope: !11169)
!11179 = !DILocation(line: 163, column: 3, scope: !11174)
!11180 = !DILocation(line: 163, column: 22, scope: !11174)
!11181 = !DILocation(line: 163, column: 30, scope: !11174)
!11182 = !DILocation(line: 163, column: 37, scope: !11174)
!11183 = !DILocation(line: 164, column: 3, scope: !11174)
!11184 = !DILocation(line: 164, column: 9, scope: !11174)
!11185 = !DILocation(line: 164, column: 19, scope: !11174)
!11186 = !{!11187, !2664, i64 56}
!11187 = !{!"", !3559, i64 0, !3559, i64 8, !2664, i64 16, !2664, i64 24, !2792, i64 32, !3557, i64 36, !2664, i64 40, !2659, i64 48, !2664, i64 56}
!11188 = !DILocation(line: 165, column: 7, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11174, file: !65, line: 165, column: 7)
!11190 = !DILocation(line: 165, column: 13, scope: !11189)
!11191 = !{!11187, !2659, i64 48}
!11192 = !DILocation(line: 165, column: 27, scope: !11189)
!11193 = !DILocation(line: 165, column: 24, scope: !11189)
!11194 = !DILocation(line: 165, column: 7, scope: !11174)
!11195 = !DILocation(line: 166, column: 23, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11189, file: !65, line: 165, column: 33)
!11197 = !DILocation(line: 166, column: 4, scope: !11196)
!11198 = !DILocation(line: 166, column: 10, scope: !11196)
!11199 = !DILocation(line: 166, column: 21, scope: !11196)
!11200 = !DILocation(line: 167, column: 4, scope: !11196)
!11201 = !DILocation(line: 167, column: 10, scope: !11196)
!11202 = !DILocation(line: 167, column: 26, scope: !11196)
!11203 = !{!11187, !2664, i64 40}
!11204 = !DILocation(line: 168, column: 3, scope: !11196)
!11205 = !DILocation(line: 169, column: 2, scope: !11175)
!11206 = !DILocation(line: 170, column: 1, scope: !11169)
!11207 = distinct !DISubprogram(name: "witness_lock", scope: !19, file: !19, line: 306, type: !11208, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11210)
!11208 = !DISubroutineType(types: !11209)
!11209 = !{null, !1416, !524}
!11210 = !{!11211, !11212, !11213, !11214, !11215}
!11211 = !DILocalVariable(name: "witness_tsdn", arg: 1, scope: !11207, file: !19, line: 306, type: !1416)
!11212 = !DILocalVariable(name: "witness", arg: 2, scope: !11207, file: !19, line: 306, type: !524)
!11213 = !DILocalVariable(name: "witness_tsd", scope: !11207, file: !19, line: 307, type: !6712)
!11214 = !DILocalVariable(name: "witnesses", scope: !11207, file: !19, line: 308, type: !11147)
!11215 = !DILocalVariable(name: "w", scope: !11207, file: !19, line: 309, type: !524)
!11216 = !DILocation(line: 306, column: 30, scope: !11207)
!11217 = !DILocation(line: 306, column: 55, scope: !11207)
!11218 = !DILocation(line: 307, column: 2, scope: !11207)
!11219 = !DILocation(line: 307, column: 17, scope: !11207)
!11220 = !DILocation(line: 308, column: 2, scope: !11207)
!11221 = !DILocation(line: 308, column: 18, scope: !11207)
!11222 = !DILocation(line: 309, column: 2, scope: !11207)
!11223 = !DILocation(line: 309, column: 13, scope: !11207)
!11224 = !DILocation(line: 346, column: 1, scope: !11207)
!11225 = !DISubprogram(name: "pthread_mutex_trylock", scope: !7167, file: !7167, line: 790, type: !11226, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11226 = !DISubroutineType(types: !11227)
!11227 = !{!390, !11228}
!11228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!11229 = distinct !DISubprogram(name: "narenas_total_inc", scope: !3, file: !3, line: 382, type: !6560, scopeLine: 382, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!11230 = !DILocation(line: 383, column: 2, scope: !11229)
!11231 = !DILocation(line: 384, column: 1, scope: !11229)
!11232 = !DISubprogram(name: "arena_new", scope: !3073, file: !3073, line: 100, type: !2827, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11233 = distinct !DISubprogram(name: "atomic_fetch_add_u", scope: !459, file: !459, line: 91, type: !11234, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11237)
!11234 = !DISubroutineType(types: !11235)
!11235 = !{!7, !11236, !7, !2804}
!11236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!11237 = !{!11238, !11239, !11240}
!11238 = !DILocalVariable(name: "a", arg: 1, scope: !11233, file: !459, line: 91, type: !11236)
!11239 = !DILocalVariable(name: "val", arg: 2, scope: !11233, file: !459, line: 91, type: !7)
!11240 = !DILocalVariable(name: "mo", arg: 3, scope: !11233, file: !459, line: 91, type: !2804)
!11241 = !DILocation(line: 91, column: 1, scope: !11233)
!11242 = distinct !DISubprogram(name: "witness_unlock", scope: !19, file: !19, line: 349, type: !11208, scopeLine: 349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11243)
!11243 = !{!11244, !11245, !11246, !11247}
!11244 = !DILocalVariable(name: "witness_tsdn", arg: 1, scope: !11242, file: !19, line: 349, type: !1416)
!11245 = !DILocalVariable(name: "witness", arg: 2, scope: !11242, file: !19, line: 349, type: !524)
!11246 = !DILocalVariable(name: "witness_tsd", scope: !11242, file: !19, line: 350, type: !6712)
!11247 = !DILocalVariable(name: "witnesses", scope: !11242, file: !19, line: 351, type: !11147)
!11248 = !DILocation(line: 349, column: 32, scope: !11242)
!11249 = !DILocation(line: 349, column: 57, scope: !11242)
!11250 = !DILocation(line: 350, column: 2, scope: !11242)
!11251 = !DILocation(line: 350, column: 17, scope: !11242)
!11252 = !DILocation(line: 351, column: 2, scope: !11242)
!11253 = !DILocation(line: 351, column: 18, scope: !11242)
!11254 = !DILocation(line: 376, column: 1, scope: !11242)
!11255 = !DISubprogram(name: "pthread_mutex_unlock", scope: !7167, file: !7167, line: 835, type: !11226, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11256 = !DISubprogram(name: "arena_is_huge", scope: !3073, file: !3073, line: 102, type: !11257, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{!389, !7}
!11259 = !DISubprogram(name: "background_thread_create", scope: !6727, file: !6727, line: 12, type: !11260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11260 = !DISubroutineType(types: !11261)
!11261 = !{!389, !1347, !7}
!11262 = distinct !DISubprogram(name: "tsd_arenap_get", scope: !145, file: !145, line: 344, type: !11263, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11265)
!11263 = !DISubroutineType(types: !11264)
!11264 = !{!6467, !1347}
!11265 = !{!11266, !11267}
!11266 = !DILocalVariable(name: "tsd", arg: 1, scope: !11262, file: !145, line: 344, type: !1347)
!11267 = !DILocalVariable(name: "state", scope: !11262, file: !145, line: 344, type: !730)
!11268 = !DILocation(line: 344, column: 1, scope: !11262)
!11269 = !DILocation(line: 344, column: 1, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11262, file: !145, line: 344, column: 1)
!11271 = distinct !DISubprogram(name: "tsd_state_get", scope: !145, file: !145, line: 262, type: !11272, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11274)
!11272 = !DISubroutineType(types: !11273)
!11273 = !{!730, !1347}
!11274 = !{!11275}
!11275 = !DILocalVariable(name: "tsd", arg: 1, scope: !11271, file: !145, line: 262, type: !1347)
!11276 = !DILocation(line: 262, column: 22, scope: !11271)
!11277 = !DILocation(line: 269, column: 22, scope: !11271)
!11278 = !DILocation(line: 269, column: 27, scope: !11271)
!11279 = !DILocation(line: 269, column: 9, scope: !11271)
!11280 = !DILocation(line: 269, column: 2, scope: !11271)
!11281 = distinct !DISubprogram(name: "tsd_arenap_get_unsafe", scope: !145, file: !145, line: 323, type: !11263, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11282)
!11282 = !{!11283}
!11283 = !DILocalVariable(name: "tsd", arg: 1, scope: !11281, file: !145, line: 323, type: !1347)
!11284 = !DILocation(line: 323, column: 1, scope: !11281)
!11285 = distinct !DISubprogram(name: "malloc_getcpu", scope: !3392, file: !3392, line: 11, type: !11286, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!11286 = !DISubroutineType(types: !11287)
!11287 = !{!1423}
!11288 = !DILocation(line: 12, column: 2, scope: !11285)
!11289 = !DILocation(line: 12, column: 2, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11285, file: !3392, line: 12, column: 2)
!11291 = !DILocation(line: 16, column: 25, scope: !11285)
!11292 = !DILocation(line: 16, column: 2, scope: !11285)
!11293 = !DISubprogram(name: "sched_getcpu", scope: !11294, file: !11294, line: 89, type: !9398, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11294 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sched.h", directory: "", checksumkind: CSK_MD5, checksum: "d4ce64b0770084f4b46206c69dd94f59")
!11295 = distinct !DISubprogram(name: "tsd_iarena_set", scope: !145, file: !145, line: 386, type: !3078, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11296)
!11296 = !{!11297, !11298}
!11297 = !DILocalVariable(name: "tsd", arg: 1, scope: !11295, file: !145, line: 386, type: !1347)
!11298 = !DILocalVariable(name: "val", arg: 2, scope: !11295, file: !145, line: 386, type: !594)
!11299 = !DILocation(line: 386, column: 1, scope: !11295)
!11300 = !DILocation(line: 386, column: 1, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11295, file: !145, line: 386, column: 1)
!11302 = distinct !DISubprogram(name: "tsd_binshardsp_get", scope: !145, file: !145, line: 344, type: !11303, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11305)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!3481, !1347}
!11305 = !{!11306, !11307}
!11306 = !DILocalVariable(name: "tsd", arg: 1, scope: !11302, file: !145, line: 344, type: !1347)
!11307 = !DILocalVariable(name: "state", scope: !11302, file: !145, line: 344, type: !730)
!11308 = !DILocation(line: 344, column: 1, scope: !11302)
!11309 = !DILocation(line: 344, column: 1, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11302, file: !145, line: 344, column: 1)
!11311 = distinct !DISubprogram(name: "tsd_iarenap_get", scope: !145, file: !145, line: 344, type: !11263, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11312)
!11312 = !{!11313, !11314}
!11313 = !DILocalVariable(name: "tsd", arg: 1, scope: !11311, file: !145, line: 344, type: !1347)
!11314 = !DILocalVariable(name: "state", scope: !11311, file: !145, line: 344, type: !730)
!11315 = !DILocation(line: 344, column: 1, scope: !11311)
!11316 = !DILocation(line: 344, column: 1, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11311, file: !145, line: 344, column: 1)
!11318 = distinct !DISubprogram(name: "tsd_iarenap_get_unsafe", scope: !145, file: !145, line: 323, type: !11263, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11319)
!11319 = !{!11320}
!11320 = !DILocalVariable(name: "tsd", arg: 1, scope: !11318, file: !145, line: 323, type: !1347)
!11321 = !DILocation(line: 323, column: 1, scope: !11318)
!11322 = distinct !DISubprogram(name: "tsd_binshardsp_get_unsafe", scope: !145, file: !145, line: 323, type: !11303, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "tsd", arg: 1, scope: !11322, file: !145, line: 323, type: !1347)
!11325 = !DILocation(line: 323, column: 1, scope: !11322)
!11326 = distinct !DISubprogram(name: "tsd_get_allocates", scope: !11327, file: !11327, line: 38, type: !5818, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!11327 = !DIFile(filename: "include/jemalloc/internal/tsd_tls.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "7b94df309a69d75a52041880bc8b71c7")
!11328 = !DILocation(line: 39, column: 2, scope: !11326)
!11329 = distinct !DISubprogram(name: "imalloc_init_check", scope: !3, file: !3, line: 2657, type: !11330, scopeLine: 2657, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11332)
!11330 = !DISubroutineType(types: !11331)
!11331 = !{!389, !3727, !2565}
!11332 = !{!11333, !11334}
!11333 = !DILocalVariable(name: "sopts", arg: 1, scope: !11329, file: !3, line: 2657, type: !3727)
!11334 = !DILocalVariable(name: "dopts", arg: 2, scope: !11329, file: !3, line: 2657, type: !2565)
!11335 = !DILocation(line: 2657, column: 35, scope: !11329)
!11336 = !DILocation(line: 2657, column: 58, scope: !11329)
!11337 = !DILocation(line: 2658, column: 6, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 2658, column: 6)
!11339 = !DILocation(line: 2658, column: 38, scope: !11338)
!11340 = !DILocation(line: 2658, column: 41, scope: !11338)
!11341 = !DILocation(line: 2658, column: 6, scope: !11329)
!11342 = !DILocation(line: 2664, column: 3, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11338, file: !3, line: 2658, column: 66)
!11344 = !DILocation(line: 2665, column: 4, scope: !11343)
!11345 = !DILocation(line: 2665, column: 11, scope: !11343)
!11346 = !DILocation(line: 2665, column: 18, scope: !11343)
!11347 = !DILocation(line: 2667, column: 3, scope: !11343)
!11348 = !DILocation(line: 2670, column: 2, scope: !11329)
!11349 = !DILocation(line: 2671, column: 1, scope: !11329)
!11350 = distinct !DISubprogram(name: "imalloc_body", scope: !3, file: !3, line: 2479, type: !11351, scopeLine: 2479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11353)
!11351 = !DISubroutineType(types: !11352)
!11352 = !{!390, !3727, !2565, !1347}
!11353 = !{!11354, !11355, !11356, !11357, !11358, !11359, !11360, !11361, !11362, !11363}
!11354 = !DILocalVariable(name: "sopts", arg: 1, scope: !11350, file: !3, line: 2479, type: !3727)
!11355 = !DILocalVariable(name: "dopts", arg: 2, scope: !11350, file: !3, line: 2479, type: !2565)
!11356 = !DILocalVariable(name: "tsd", arg: 3, scope: !11350, file: !3, line: 2479, type: !1347)
!11357 = !DILocalVariable(name: "allocation", scope: !11350, file: !3, line: 2481, type: !383)
!11358 = !DILocalVariable(name: "size", scope: !11350, file: !3, line: 2483, type: !387)
!11359 = !DILocalVariable(name: "ind", scope: !11350, file: !3, line: 2490, type: !726)
!11360 = !DILocalVariable(name: "usize", scope: !11350, file: !3, line: 2492, type: !387)
!11361 = !DILocalVariable(name: "reentrancy_level", scope: !11350, file: !3, line: 2495, type: !402)
!11362 = !DILabel(scope: !11350, name: "label_oom", file: !3, line: 2606)
!11363 = !DILabel(scope: !11350, name: "label_invalid_alignment", file: !3, line: 2633)
!11364 = !DILocation(line: 2479, column: 29, scope: !11350)
!11365 = !DILocation(line: 2479, column: 52, scope: !11350)
!11366 = !DILocation(line: 2479, column: 66, scope: !11350)
!11367 = !DILocation(line: 2481, column: 2, scope: !11350)
!11368 = !DILocation(line: 2481, column: 8, scope: !11350)
!11369 = !DILocation(line: 2483, column: 2, scope: !11350)
!11370 = !DILocation(line: 2483, column: 9, scope: !11350)
!11371 = !DILocation(line: 2490, column: 2, scope: !11350)
!11372 = !DILocation(line: 2490, column: 10, scope: !11350)
!11373 = !DILocation(line: 2492, column: 2, scope: !11350)
!11374 = !DILocation(line: 2492, column: 9, scope: !11350)
!11375 = !DILocation(line: 2495, column: 2, scope: !11350)
!11376 = !DILocation(line: 2495, column: 9, scope: !11350)
!11377 = !DILocation(line: 2498, column: 6, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2498, column: 6)
!11379 = !DILocation(line: 2498, column: 6, scope: !11350)
!11380 = !DILocation(line: 2500, column: 3, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 2499, column: 15)
!11382 = !DILocation(line: 2503, column: 6, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2503, column: 6)
!11384 = !DILocation(line: 2503, column: 6, scope: !11350)
!11385 = !DILocation(line: 2505, column: 3, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 2504, column: 60)
!11387 = !DILocation(line: 2509, column: 25, scope: !11350)
!11388 = !DILocation(line: 2509, column: 32, scope: !11350)
!11389 = !DILocation(line: 2509, column: 38, scope: !11350)
!11390 = !DILocation(line: 2509, column: 45, scope: !11350)
!11391 = !DILocation(line: 2509, column: 16, scope: !11350)
!11392 = !DILocation(line: 2509, column: 2, scope: !11350)
!11393 = !DILocation(line: 2509, column: 9, scope: !11350)
!11394 = !DILocation(line: 2509, column: 14, scope: !11350)
!11395 = !DILocation(line: 2510, column: 24, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2510, column: 6)
!11397 = !DILocation(line: 2510, column: 30, scope: !11396)
!11398 = !DILocation(line: 2510, column: 37, scope: !11396)
!11399 = !DILocation(line: 2511, column: 6, scope: !11396)
!11400 = !DILocation(line: 2511, column: 13, scope: !11396)
!11401 = !DILocation(line: 2510, column: 6, scope: !11396)
!11402 = !DILocation(line: 2510, column: 6, scope: !11350)
!11403 = !DILocation(line: 2512, column: 3, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11396, file: !3, line: 2511, column: 40)
!11405 = !DILocation(line: 2514, column: 17, scope: !11350)
!11406 = !DILocation(line: 2514, column: 2, scope: !11350)
!11407 = !DILocation(line: 2514, column: 9, scope: !11350)
!11408 = !DILocation(line: 2514, column: 15, scope: !11350)
!11409 = !DILocation(line: 2516, column: 6, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2516, column: 6)
!11411 = !DILocation(line: 2516, column: 13, scope: !11410)
!11412 = !DILocation(line: 2516, column: 6, scope: !11350)
!11413 = !DILocation(line: 2517, column: 3, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11410, file: !3, line: 2516, column: 36)
!11415 = !DILocation(line: 2517, column: 3, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 2517, column: 3)
!11417 = !DILocation(line: 2518, column: 2, scope: !11414)
!11418 = !DILocation(line: 2520, column: 36, scope: !11350)
!11419 = !DILocation(line: 2520, column: 27, scope: !11350)
!11420 = !DILocation(line: 2520, column: 2, scope: !11350)
!11421 = !DILocation(line: 2526, column: 46, scope: !11350)
!11422 = !DILocation(line: 2526, column: 21, scope: !11350)
!11423 = !DILocation(line: 2526, column: 19, scope: !11350)
!11424 = !DILocation(line: 2527, column: 6, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2527, column: 6)
!11426 = !DILocation(line: 2527, column: 13, scope: !11425)
!11427 = !DILocation(line: 2527, column: 18, scope: !11425)
!11428 = !DILocation(line: 2527, column: 21, scope: !11425)
!11429 = !DILocation(line: 2527, column: 6, scope: !11350)
!11430 = !DILocation(line: 2532, column: 3, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2527, column: 53)
!11432 = !DILocation(line: 2532, column: 3, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 2532, column: 3)
!11434 = !DILocation(line: 2534, column: 3, scope: !11431)
!11435 = !DILocation(line: 2534, column: 3, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 2534, column: 3)
!11437 = !DILocation(line: 2535, column: 3, scope: !11431)
!11438 = !DILocation(line: 2535, column: 10, scope: !11431)
!11439 = !DILocation(line: 2535, column: 21, scope: !11431)
!11440 = !DILocation(line: 2537, column: 3, scope: !11431)
!11441 = !DILocation(line: 2537, column: 10, scope: !11431)
!11442 = !DILocation(line: 2537, column: 20, scope: !11431)
!11443 = !DILocation(line: 2538, column: 2, scope: !11431)
!11444 = !DILocation(line: 2572, column: 3, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 2571, column: 9)
!11446 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2547, column: 6)
!11447 = !DILocation(line: 2572, column: 3, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2572, column: 3)
!11449 = !DILocation(line: 2573, column: 34, scope: !11445)
!11450 = !DILocation(line: 2573, column: 41, scope: !11445)
!11451 = !DILocation(line: 2573, column: 48, scope: !11445)
!11452 = !DILocation(line: 2573, column: 53, scope: !11445)
!11453 = !DILocation(line: 2573, column: 59, scope: !11445)
!11454 = !DILocation(line: 2574, column: 7, scope: !11445)
!11455 = !DILocation(line: 2573, column: 16, scope: !11445)
!11456 = !DILocation(line: 2573, column: 14, scope: !11445)
!11457 = !DILocation(line: 2575, column: 7, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2575, column: 7)
!11459 = !DILocation(line: 2575, column: 7, scope: !11445)
!11460 = !DILocation(line: 2576, column: 4, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 2575, column: 37)
!11462 = !DILocation(line: 2585, column: 21, scope: !11350)
!11463 = !DILocation(line: 2585, column: 26, scope: !11350)
!11464 = !DILocation(line: 2585, column: 2, scope: !11350)
!11465 = !DILocation(line: 2587, column: 2, scope: !11350)
!11466 = !DILocation(line: 2587, column: 2, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2587, column: 2)
!11468 = !DILocation(line: 2590, column: 2, scope: !11350)
!11469 = !DILocation(line: 2590, column: 2, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2590, column: 2)
!11471 = !DILocation(line: 2592, column: 21, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2592, column: 6)
!11473 = !DILocation(line: 2592, column: 28, scope: !11472)
!11474 = !DILocation(line: 2592, column: 33, scope: !11472)
!11475 = !DILocation(line: 2592, column: 37, scope: !11472)
!11476 = !DILocation(line: 2592, column: 44, scope: !11472)
!11477 = !DILocation(line: 2593, column: 6, scope: !11472)
!11478 = !DILocation(line: 2593, column: 9, scope: !11472)
!11479 = !DILocation(line: 2592, column: 6, scope: !11350)
!11480 = !DILocation(line: 2594, column: 3, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 2593, column: 35)
!11482 = !DILocation(line: 2594, column: 23, scope: !11481)
!11483 = !DILocation(line: 2594, column: 35, scope: !11481)
!11484 = !DILocation(line: 2595, column: 2, scope: !11481)
!11485 = !DILocation(line: 2597, column: 6, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2597, column: 6)
!11487 = !DILocation(line: 2597, column: 13, scope: !11486)
!11488 = !DILocation(line: 2597, column: 6, scope: !11350)
!11489 = !DILocation(line: 2599, column: 2, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2597, column: 19)
!11491 = !DILocation(line: 2602, column: 36, scope: !11350)
!11492 = !DILocation(line: 2602, column: 27, scope: !11350)
!11493 = !DILocation(line: 2602, column: 2, scope: !11350)
!11494 = !DILocation(line: 2603, column: 19, scope: !11350)
!11495 = !DILocation(line: 2603, column: 3, scope: !11350)
!11496 = !DILocation(line: 2603, column: 10, scope: !11350)
!11497 = !DILocation(line: 2603, column: 17, scope: !11350)
!11498 = !DILocation(line: 2604, column: 2, scope: !11350)
!11499 = !DILocation(line: 2606, column: 1, scope: !11350)
!11500 = !DILocation(line: 2607, column: 6, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2607, column: 6)
!11502 = !DILocation(line: 2607, column: 28, scope: !11501)
!11503 = !DILocation(line: 2607, column: 46, scope: !11501)
!11504 = !DILocation(line: 2607, column: 49, scope: !11501)
!11505 = !DILocation(line: 2607, column: 6, scope: !11350)
!11506 = !DILocation(line: 2608, column: 16, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 2607, column: 72)
!11508 = !DILocation(line: 2608, column: 23, scope: !11507)
!11509 = !DILocation(line: 2608, column: 3, scope: !11507)
!11510 = !DILocation(line: 2609, column: 3, scope: !11507)
!11511 = !DILocation(line: 2612, column: 6, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2612, column: 6)
!11513 = !DILocation(line: 2612, column: 13, scope: !11512)
!11514 = !DILocation(line: 2612, column: 6, scope: !11350)
!11515 = !DILocation(line: 2614, column: 2, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 2612, column: 19)
!11517 = !DILocation(line: 2616, column: 36, scope: !11350)
!11518 = !DILocation(line: 2616, column: 27, scope: !11350)
!11519 = !DILocation(line: 2616, column: 2, scope: !11350)
!11520 = !DILocation(line: 2618, column: 6, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2618, column: 6)
!11522 = !DILocation(line: 2618, column: 13, scope: !11521)
!11523 = !DILocation(line: 2618, column: 6, scope: !11350)
!11524 = !DILocation(line: 2619, column: 3, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 2618, column: 33)
!11526 = !DILocation(line: 2620, column: 2, scope: !11525)
!11527 = !DILocation(line: 2622, column: 6, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2622, column: 6)
!11529 = !DILocation(line: 2622, column: 13, scope: !11528)
!11530 = !DILocation(line: 2622, column: 6, scope: !11350)
!11531 = !DILocation(line: 2623, column: 4, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 2622, column: 39)
!11533 = !DILocation(line: 2623, column: 11, scope: !11532)
!11534 = !DILocation(line: 2623, column: 18, scope: !11532)
!11535 = !DILocation(line: 2624, column: 2, scope: !11532)
!11536 = !DILocation(line: 2626, column: 2, scope: !11350)
!11537 = !DILocation(line: 2633, column: 1, scope: !11350)
!11538 = !DILocation(line: 2639, column: 6, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2639, column: 6)
!11540 = !DILocation(line: 2639, column: 13, scope: !11539)
!11541 = !DILocation(line: 2639, column: 6, scope: !11350)
!11542 = !DILocation(line: 2640, column: 3, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 2639, column: 33)
!11544 = !DILocation(line: 2641, column: 2, scope: !11543)
!11545 = !DILocation(line: 2643, column: 6, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2643, column: 6)
!11547 = !DILocation(line: 2643, column: 13, scope: !11546)
!11548 = !DILocation(line: 2643, column: 6, scope: !11350)
!11549 = !DILocation(line: 2645, column: 2, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11546, file: !3, line: 2643, column: 19)
!11551 = !DILocation(line: 2647, column: 36, scope: !11350)
!11552 = !DILocation(line: 2647, column: 27, scope: !11350)
!11553 = !DILocation(line: 2647, column: 2, scope: !11350)
!11554 = !DILocation(line: 2649, column: 6, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2649, column: 6)
!11556 = !DILocation(line: 2649, column: 13, scope: !11555)
!11557 = !DILocation(line: 2649, column: 6, scope: !11350)
!11558 = !DILocation(line: 2650, column: 4, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 2649, column: 39)
!11560 = !DILocation(line: 2650, column: 11, scope: !11559)
!11561 = !DILocation(line: 2650, column: 18, scope: !11559)
!11562 = !DILocation(line: 2651, column: 2, scope: !11559)
!11563 = !DILocation(line: 2653, column: 2, scope: !11350)
!11564 = !DILocation(line: 2654, column: 1, scope: !11350)
!11565 = distinct !DISubprogram(name: "malloc_initialized", scope: !2572, file: !2572, line: 236, type: !5818, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!11566 = !DILocation(line: 237, column: 10, scope: !11565)
!11567 = !DILocation(line: 237, column: 28, scope: !11565)
!11568 = !DILocation(line: 237, column: 2, scope: !11565)
!11569 = !DILocation(line: 2441, column: 33, scope: !2562)
!11570 = !DILocation(line: 2441, column: 63, scope: !2562)
!11571 = !DILocation(line: 2442, column: 13, scope: !2562)
!11572 = !DILocation(line: 2448, column: 7, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 2448, column: 6)
!11574 = !DILocation(line: 2448, column: 6, scope: !2562)
!11575 = !DILocation(line: 2449, column: 3, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 2448, column: 21)
!11577 = !DILocation(line: 2449, column: 3, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11576, file: !3, line: 2449, column: 3)
!11579 = !DILocation(line: 2450, column: 11, scope: !11576)
!11580 = !DILocation(line: 2450, column: 18, scope: !11576)
!11581 = !DILocation(line: 2450, column: 4, scope: !11576)
!11582 = !DILocation(line: 2450, column: 9, scope: !11576)
!11583 = !DILocation(line: 2451, column: 3, scope: !11576)
!11584 = !DILocation(line: 2457, column: 10, scope: !2562)
!11585 = !DILocation(line: 2457, column: 17, scope: !2562)
!11586 = !DILocation(line: 2457, column: 29, scope: !2562)
!11587 = !DILocation(line: 2457, column: 36, scope: !2562)
!11588 = !DILocation(line: 2457, column: 27, scope: !2562)
!11589 = !DILocation(line: 2457, column: 3, scope: !2562)
!11590 = !DILocation(line: 2457, column: 8, scope: !2562)
!11591 = !DILocation(line: 2459, column: 6, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 2459, column: 6)
!11593 = !DILocation(line: 2459, column: 6, scope: !2562)
!11594 = !DILocation(line: 2460, column: 11, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 2459, column: 28)
!11596 = !DILocation(line: 2460, column: 18, scope: !11595)
!11597 = !DILocation(line: 2460, column: 28, scope: !11595)
!11598 = !DILocation(line: 2460, column: 33, scope: !11595)
!11599 = !DILocation(line: 2460, column: 36, scope: !11595)
!11600 = !DILocation(line: 2460, column: 43, scope: !11595)
!11601 = !DILocation(line: 2460, column: 53, scope: !11595)
!11602 = !DILocation(line: 0, scope: !11595)
!11603 = !DILocation(line: 2460, column: 3, scope: !11595)
!11604 = !DILocation(line: 2469, column: 6, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 2469, column: 6)
!11606 = !DILocation(line: 2469, column: 6, scope: !2562)
!11607 = !DILocation(line: 2470, column: 3, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11605, file: !3, line: 2469, column: 72)
!11609 = !DILocation(line: 2472, column: 6, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 2472, column: 6)
!11611 = !DILocation(line: 2472, column: 6, scope: !2562)
!11612 = !DILocation(line: 2473, column: 3, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11610, file: !3, line: 2472, column: 60)
!11614 = !DILocation(line: 2475, column: 2, scope: !2562)
!11615 = !DILocation(line: 2476, column: 1, scope: !2562)
!11616 = distinct !DISubprogram(name: "imalloc_no_sample", scope: !3, file: !3, line: 2381, type: !11617, scopeLine: 2382, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11619)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!383, !3727, !2565, !1347, !387, !387, !726}
!11619 = !{!11620, !11621, !11622, !11623, !11624, !11625, !11626, !11627}
!11620 = !DILocalVariable(name: "sopts", arg: 1, scope: !11616, file: !3, line: 2381, type: !3727)
!11621 = !DILocalVariable(name: "dopts", arg: 2, scope: !11616, file: !3, line: 2381, type: !2565)
!11622 = !DILocalVariable(name: "tsd", arg: 3, scope: !11616, file: !3, line: 2381, type: !1347)
!11623 = !DILocalVariable(name: "size", arg: 4, scope: !11616, file: !3, line: 2382, type: !387)
!11624 = !DILocalVariable(name: "usize", arg: 5, scope: !11616, file: !3, line: 2382, type: !387)
!11625 = !DILocalVariable(name: "ind", arg: 6, scope: !11616, file: !3, line: 2382, type: !726)
!11626 = !DILocalVariable(name: "tcache", scope: !11616, file: !3, line: 2384, type: !740)
!11627 = !DILocalVariable(name: "arena", scope: !11616, file: !3, line: 2388, type: !594)
!11628 = !DILocation(line: 2381, column: 34, scope: !11616)
!11629 = !DILocation(line: 2381, column: 57, scope: !11616)
!11630 = !DILocation(line: 2381, column: 71, scope: !11616)
!11631 = !DILocation(line: 2382, column: 12, scope: !11616)
!11632 = !DILocation(line: 2382, column: 25, scope: !11616)
!11633 = !DILocation(line: 2382, column: 40, scope: !11616)
!11634 = !DILocation(line: 2384, column: 2, scope: !11616)
!11635 = !DILocation(line: 2384, column: 12, scope: !11616)
!11636 = !DILocation(line: 2384, column: 41, scope: !11616)
!11637 = !DILocation(line: 2384, column: 46, scope: !11616)
!11638 = !DILocation(line: 2384, column: 53, scope: !11616)
!11639 = !DILocation(line: 2385, column: 6, scope: !11616)
!11640 = !DILocation(line: 2385, column: 13, scope: !11616)
!11641 = !DILocation(line: 2384, column: 21, scope: !11616)
!11642 = !DILocation(line: 2388, column: 2, scope: !11616)
!11643 = !DILocation(line: 2388, column: 11, scope: !11616)
!11644 = !DILocation(line: 2389, column: 25, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 2389, column: 6)
!11646 = !DILocation(line: 2389, column: 30, scope: !11645)
!11647 = !DILocation(line: 2389, column: 37, scope: !11645)
!11648 = !DILocation(line: 2389, column: 6, scope: !11645)
!11649 = !DILocation(line: 2389, column: 6, scope: !11616)
!11650 = !DILocation(line: 2390, column: 3, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 2389, column: 57)
!11652 = !DILocation(line: 2393, column: 6, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 2393, column: 6)
!11654 = !DILocation(line: 2393, column: 6, scope: !11616)
!11655 = !DILocation(line: 2394, column: 28, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 2393, column: 39)
!11657 = !DILocation(line: 2394, column: 19, scope: !11656)
!11658 = !DILocation(line: 2394, column: 34, scope: !11656)
!11659 = !DILocation(line: 2394, column: 41, scope: !11656)
!11660 = !DILocation(line: 2394, column: 48, scope: !11656)
!11661 = !DILocation(line: 2395, column: 7, scope: !11656)
!11662 = !DILocation(line: 2395, column: 14, scope: !11656)
!11663 = !DILocation(line: 2395, column: 20, scope: !11656)
!11664 = !DILocation(line: 2395, column: 28, scope: !11656)
!11665 = !DILocation(line: 2394, column: 10, scope: !11656)
!11666 = !DILocation(line: 2394, column: 3, scope: !11656)
!11667 = !DILocation(line: 2398, column: 28, scope: !11616)
!11668 = !DILocation(line: 2398, column: 19, scope: !11616)
!11669 = !DILocation(line: 2398, column: 34, scope: !11616)
!11670 = !DILocation(line: 2398, column: 40, scope: !11616)
!11671 = !DILocation(line: 2398, column: 45, scope: !11616)
!11672 = !DILocation(line: 2398, column: 52, scope: !11616)
!11673 = !DILocation(line: 2398, column: 58, scope: !11616)
!11674 = !DILocation(line: 2399, column: 6, scope: !11616)
!11675 = !DILocation(line: 2399, column: 13, scope: !11616)
!11676 = !DILocation(line: 2399, column: 20, scope: !11616)
!11677 = !DILocation(line: 2398, column: 9, scope: !11616)
!11678 = !DILocation(line: 2398, column: 2, scope: !11616)
!11679 = !DILocation(line: 2400, column: 1, scope: !11616)
!11680 = distinct !DISubprogram(name: "ipalloct", scope: !2572, file: !2572, line: 89, type: !11681, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11683)
!11681 = !DISubroutineType(types: !11682)
!11682 = !{!383, !391, !387, !387, !389, !740, !594}
!11683 = !{!11684, !11685, !11686, !11687, !11688, !11689}
!11684 = !DILocalVariable(name: "tsdn", arg: 1, scope: !11680, file: !2572, line: 89, type: !391)
!11685 = !DILocalVariable(name: "usize", arg: 2, scope: !11680, file: !2572, line: 89, type: !387)
!11686 = !DILocalVariable(name: "alignment", arg: 3, scope: !11680, file: !2572, line: 89, type: !387)
!11687 = !DILocalVariable(name: "zero", arg: 4, scope: !11680, file: !2572, line: 89, type: !389)
!11688 = !DILocalVariable(name: "tcache", arg: 5, scope: !11680, file: !2572, line: 90, type: !740)
!11689 = !DILocalVariable(name: "arena", arg: 6, scope: !11680, file: !2572, line: 90, type: !594)
!11690 = !DILocation(line: 89, column: 18, scope: !11680)
!11691 = !DILocation(line: 89, column: 31, scope: !11680)
!11692 = !DILocation(line: 89, column: 45, scope: !11680)
!11693 = !DILocation(line: 89, column: 61, scope: !11680)
!11694 = !DILocation(line: 90, column: 15, scope: !11680)
!11695 = !DILocation(line: 90, column: 32, scope: !11680)
!11696 = !DILocation(line: 91, column: 20, scope: !11680)
!11697 = !DILocation(line: 91, column: 26, scope: !11680)
!11698 = !DILocation(line: 91, column: 33, scope: !11680)
!11699 = !DILocation(line: 91, column: 44, scope: !11680)
!11700 = !DILocation(line: 91, column: 50, scope: !11680)
!11701 = !DILocation(line: 91, column: 65, scope: !11680)
!11702 = !DILocation(line: 91, column: 9, scope: !11680)
!11703 = !DILocation(line: 91, column: 2, scope: !11680)
!11704 = distinct !DISubprogram(name: "ipallocztm", scope: !2572, file: !2572, line: 69, type: !11705, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11707)
!11705 = !DISubroutineType(types: !11706)
!11706 = !{!383, !391, !387, !387, !389, !740, !389, !594}
!11707 = !{!11708, !11709, !11710, !11711, !11712, !11713, !11714, !11715}
!11708 = !DILocalVariable(name: "tsdn", arg: 1, scope: !11704, file: !2572, line: 69, type: !391)
!11709 = !DILocalVariable(name: "usize", arg: 2, scope: !11704, file: !2572, line: 69, type: !387)
!11710 = !DILocalVariable(name: "alignment", arg: 3, scope: !11704, file: !2572, line: 69, type: !387)
!11711 = !DILocalVariable(name: "zero", arg: 4, scope: !11704, file: !2572, line: 69, type: !389)
!11712 = !DILocalVariable(name: "tcache", arg: 5, scope: !11704, file: !2572, line: 70, type: !740)
!11713 = !DILocalVariable(name: "is_internal", arg: 6, scope: !11704, file: !2572, line: 70, type: !389)
!11714 = !DILocalVariable(name: "arena", arg: 7, scope: !11704, file: !2572, line: 70, type: !594)
!11715 = !DILocalVariable(name: "ret", scope: !11704, file: !2572, line: 71, type: !383)
!11716 = !DILocation(line: 69, column: 20, scope: !11704)
!11717 = !DILocation(line: 69, column: 33, scope: !11704)
!11718 = !DILocation(line: 69, column: 47, scope: !11704)
!11719 = !DILocation(line: 69, column: 63, scope: !11704)
!11720 = !DILocation(line: 70, column: 15, scope: !11704)
!11721 = !DILocation(line: 70, column: 28, scope: !11704)
!11722 = !DILocation(line: 70, column: 50, scope: !11704)
!11723 = !DILocation(line: 71, column: 2, scope: !11704)
!11724 = !DILocation(line: 71, column: 8, scope: !11704)
!11725 = !DILocation(line: 73, column: 2, scope: !11704)
!11726 = !DILocation(line: 73, column: 2, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11704, file: !2572, line: 73, column: 2)
!11728 = !DILocation(line: 74, column: 2, scope: !11704)
!11729 = !DILocation(line: 74, column: 2, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11704, file: !2572, line: 74, column: 2)
!11731 = !DILocation(line: 75, column: 2, scope: !11704)
!11732 = !DILocation(line: 75, column: 2, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11704, file: !2572, line: 75, column: 2)
!11734 = !DILocation(line: 76, column: 2, scope: !11704)
!11735 = !DILocation(line: 76, column: 2, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11704, file: !2572, line: 76, column: 2)
!11737 = !DILocation(line: 77, column: 53, scope: !11704)
!11738 = !DILocation(line: 77, column: 31, scope: !11704)
!11739 = !DILocation(line: 77, column: 2, scope: !11704)
!11740 = !DILocation(line: 80, column: 21, scope: !11704)
!11741 = !DILocation(line: 80, column: 27, scope: !11704)
!11742 = !DILocation(line: 80, column: 34, scope: !11704)
!11743 = !DILocation(line: 80, column: 41, scope: !11704)
!11744 = !DILocation(line: 80, column: 52, scope: !11704)
!11745 = !DILocation(line: 80, column: 58, scope: !11704)
!11746 = !DILocation(line: 80, column: 8, scope: !11704)
!11747 = !DILocation(line: 80, column: 6, scope: !11704)
!11748 = !DILocation(line: 81, column: 2, scope: !11704)
!11749 = !DILocation(line: 81, column: 2, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11704, file: !2572, line: 81, column: 2)
!11751 = !DILocation(line: 82, column: 22, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11704, file: !2572, line: 82, column: 6)
!11753 = !DILocation(line: 82, column: 34, scope: !11752)
!11754 = !DILocation(line: 82, column: 37, scope: !11752)
!11755 = !DILocation(line: 82, column: 6, scope: !11704)
!11756 = !DILocation(line: 83, column: 30, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11752, file: !2572, line: 82, column: 58)
!11758 = !DILocation(line: 83, column: 36, scope: !11757)
!11759 = !DILocation(line: 83, column: 22, scope: !11757)
!11760 = !DILocation(line: 83, column: 50, scope: !11757)
!11761 = !DILocation(line: 83, column: 56, scope: !11757)
!11762 = !DILocation(line: 83, column: 42, scope: !11757)
!11763 = !DILocation(line: 83, column: 3, scope: !11757)
!11764 = !DILocation(line: 84, column: 2, scope: !11757)
!11765 = !DILocation(line: 85, column: 9, scope: !11704)
!11766 = !DILocation(line: 86, column: 1, scope: !11704)
!11767 = !DILocation(line: 85, column: 2, scope: !11704)
!11768 = !DISubprogram(name: "arena_palloc", scope: !3073, file: !3073, line: 69, type: !11769, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11769 = !DISubroutineType(types: !11770)
!11770 = !{!383, !391, !594, !387, !387, !389, !740}
!11771 = distinct !DISubprogram(name: "tsd_get", scope: !11327, file: !11327, line: 44, type: !11772, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11774)
!11772 = !DISubroutineType(types: !11773)
!11773 = !{!1347, !389}
!11774 = !{!11775}
!11775 = !DILocalVariable(name: "init", arg: 1, scope: !11771, file: !11327, line: 44, type: !389)
!11776 = !DILocation(line: 44, column: 14, scope: !11771)
!11777 = !DILocation(line: 45, column: 10, scope: !11771)
!11778 = !DILocation(line: 45, column: 2, scope: !11771)
!11779 = distinct !DISubprogram(name: "sz_size2index_usize_fastpath", scope: !727, file: !727, line: 255, type: !11780, scopeLine: 255, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{null, !387, !6337, !556}
!11782 = !{!11783, !11784, !11785}
!11783 = !DILocalVariable(name: "size", arg: 1, scope: !11779, file: !727, line: 255, type: !387)
!11784 = !DILocalVariable(name: "ind", arg: 2, scope: !11779, file: !727, line: 255, type: !6337)
!11785 = !DILocalVariable(name: "usize", arg: 3, scope: !11779, file: !727, line: 255, type: !556)
!11786 = !DILocation(line: 255, column: 37, scope: !11779)
!11787 = !DILocation(line: 255, column: 52, scope: !11779)
!11788 = !DILocation(line: 255, column: 65, scope: !11779)
!11789 = !DILocation(line: 256, column: 35, scope: !11779)
!11790 = !DILocation(line: 256, column: 9, scope: !11779)
!11791 = !DILocation(line: 256, column: 3, scope: !11779)
!11792 = !DILocation(line: 256, column: 7, scope: !11779)
!11793 = !DILocation(line: 257, column: 38, scope: !11779)
!11794 = !DILocation(line: 257, column: 37, scope: !11779)
!11795 = !DILocation(line: 257, column: 11, scope: !11779)
!11796 = !DILocation(line: 257, column: 3, scope: !11779)
!11797 = !DILocation(line: 257, column: 9, scope: !11779)
!11798 = !DILocation(line: 258, column: 1, scope: !11779)
!11799 = distinct !DISubprogram(name: "te_malloc_fastpath_ctx", scope: !5374, file: !5374, line: 114, type: !11800, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11803)
!11800 = !DISubroutineType(types: !11801)
!11801 = !{null, !1347, !11802, !11802}
!11802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!11803 = !{!11804, !11805, !11806}
!11804 = !DILocalVariable(name: "tsd", arg: 1, scope: !11799, file: !5374, line: 114, type: !1347)
!11805 = !DILocalVariable(name: "allocated", arg: 2, scope: !11799, file: !5374, line: 114, type: !11802)
!11806 = !DILocalVariable(name: "threshold", arg: 3, scope: !11799, file: !5374, line: 114, type: !11802)
!11807 = !DILocation(line: 114, column: 31, scope: !11799)
!11808 = !DILocation(line: 114, column: 46, scope: !11799)
!11809 = !DILocation(line: 114, column: 67, scope: !11799)
!11810 = !DILocation(line: 115, column: 49, scope: !11799)
!11811 = !DILocation(line: 115, column: 16, scope: !11799)
!11812 = !DILocation(line: 115, column: 15, scope: !11799)
!11813 = !DILocation(line: 115, column: 3, scope: !11799)
!11814 = !DILocation(line: 115, column: 13, scope: !11799)
!11815 = !DILocation(line: 116, column: 65, scope: !11799)
!11816 = !DILocation(line: 116, column: 16, scope: !11799)
!11817 = !DILocation(line: 116, column: 15, scope: !11799)
!11818 = !DILocation(line: 116, column: 3, scope: !11799)
!11819 = !DILocation(line: 116, column: 13, scope: !11799)
!11820 = !DILocation(line: 117, column: 2, scope: !11799)
!11821 = !DILocation(line: 117, column: 2, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11799, file: !5374, line: 117, column: 2)
!11823 = !DILocation(line: 118, column: 1, scope: !11799)
!11824 = distinct !DISubprogram(name: "tsd_tcachep_get", scope: !145, file: !145, line: 345, type: !11825, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11827)
!11825 = !DISubroutineType(types: !11826)
!11826 = !{!740, !1347}
!11827 = !{!11828, !11829}
!11828 = !DILocalVariable(name: "tsd", arg: 1, scope: !11824, file: !145, line: 345, type: !1347)
!11829 = !DILocalVariable(name: "state", scope: !11824, file: !145, line: 345, type: !730)
!11830 = !DILocation(line: 345, column: 1, scope: !11824)
!11831 = !DILocation(line: 345, column: 1, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11824, file: !145, line: 345, column: 1)
!11833 = distinct !DISubprogram(name: "cache_bin_alloc_easy", scope: !697, file: !697, line: 397, type: !10028, scopeLine: 397, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11834)
!11834 = !{!11835, !11836}
!11835 = !DILocalVariable(name: "bin", arg: 1, scope: !11833, file: !697, line: 397, type: !707)
!11836 = !DILocalVariable(name: "success", arg: 2, scope: !11833, file: !697, line: 397, type: !989)
!11837 = !DILocation(line: 397, column: 35, scope: !11833)
!11838 = !DILocation(line: 397, column: 46, scope: !11833)
!11839 = !DILocation(line: 399, column: 30, scope: !11833)
!11840 = !DILocation(line: 399, column: 35, scope: !11833)
!11841 = !DILocation(line: 399, column: 9, scope: !11833)
!11842 = !DILocation(line: 399, column: 2, scope: !11833)
!11843 = !DILocation(line: 225, column: 32, scope: !2593)
!11844 = !DILocation(line: 225, column: 46, scope: !2593)
!11845 = !DILocation(line: 226, column: 18, scope: !2593)
!11846 = !DILocation(line: 226, column: 29, scope: !2593)
!11847 = !DILocation(line: 227, column: 23, scope: !2593)
!11848 = !DILocation(line: 227, column: 28, scope: !2593)
!11849 = !DILocation(line: 227, column: 2, scope: !2593)
!11850 = !DILocation(line: 229, column: 3, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !2572, line: 228, column: 20)
!11852 = distinct !DILexicalBlock(scope: !2593, file: !2572, line: 228, column: 6)
!11853 = !DILocation(line: 229, column: 8, scope: !11851)
!11854 = !DILocation(line: 229, column: 15, scope: !11851)
!11855 = !DILocation(line: 229, column: 24, scope: !11851)
!11856 = !DILocation(line: 232, column: 2, scope: !2593)
!11857 = !DILocation(line: 232, column: 2, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !2593, file: !2572, line: 232, column: 2)
!11859 = !DILocation(line: 233, column: 1, scope: !2593)
!11860 = distinct !DISubprogram(name: "tsd_thread_allocatedp_get_unsafe", scope: !145, file: !145, line: 324, type: !11861, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11863)
!11861 = !DISubroutineType(types: !11862)
!11862 = !{!11802, !1347}
!11863 = !{!11864}
!11864 = !DILocalVariable(name: "tsd", arg: 1, scope: !11860, file: !145, line: 324, type: !1347)
!11865 = !DILocation(line: 324, column: 1, scope: !11860)
!11866 = distinct !DISubprogram(name: "tsd_thread_allocated_next_event_fastp_get_unsafe", scope: !145, file: !145, line: 324, type: !11861, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11867)
!11867 = !{!11868}
!11868 = !DILocalVariable(name: "tsd", arg: 1, scope: !11866, file: !145, line: 324, type: !1347)
!11869 = !DILocation(line: 324, column: 1, scope: !11866)
!11870 = distinct !DISubprogram(name: "tsd_tcachep_get_unsafe", scope: !145, file: !145, line: 324, type: !11825, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11871)
!11871 = !{!11872}
!11872 = !DILocalVariable(name: "tsd", arg: 1, scope: !11870, file: !145, line: 324, type: !1347)
!11873 = !DILocation(line: 324, column: 1, scope: !11870)
!11874 = distinct !DISubprogram(name: "thread_allocated_set", scope: !5374, file: !5374, line: 97, type: !11875, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11877)
!11875 = !DISubroutineType(types: !11876)
!11876 = !{null, !1347, !408}
!11877 = !{!11878, !11879}
!11878 = !DILocalVariable(name: "tsd", arg: 1, scope: !11874, file: !5374, line: 97, type: !1347)
!11879 = !DILocalVariable(name: "v", arg: 2, scope: !11874, file: !5374, line: 97, type: !408)
!11880 = !DILocation(line: 97, column: 1, scope: !11874)
!11881 = distinct !DISubprogram(name: "tsd_thread_allocatedp_get", scope: !145, file: !145, line: 345, type: !11861, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11882)
!11882 = !{!11883, !11884}
!11883 = !DILocalVariable(name: "tsd", arg: 1, scope: !11881, file: !145, line: 345, type: !1347)
!11884 = !DILocalVariable(name: "state", scope: !11881, file: !145, line: 345, type: !730)
!11885 = !DILocation(line: 345, column: 1, scope: !11881)
!11886 = !DILocation(line: 345, column: 1, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11881, file: !145, line: 345, column: 1)
!11888 = distinct !DISubprogram(name: "tsd_fetch_impl", scope: !145, file: !145, line: 413, type: !11889, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11891)
!11889 = !DISubroutineType(types: !11890)
!11890 = !{!1347, !389, !389}
!11891 = !{!11892, !11893, !11894}
!11892 = !DILocalVariable(name: "init", arg: 1, scope: !11888, file: !145, line: 413, type: !389)
!11893 = !DILocalVariable(name: "minimal", arg: 2, scope: !11888, file: !145, line: 413, type: !389)
!11894 = !DILocalVariable(name: "tsd", scope: !11888, file: !145, line: 414, type: !1347)
!11895 = !DILocation(line: 413, column: 21, scope: !11888)
!11896 = !DILocation(line: 413, column: 32, scope: !11888)
!11897 = !DILocation(line: 414, column: 2, scope: !11888)
!11898 = !DILocation(line: 414, column: 9, scope: !11888)
!11899 = !DILocation(line: 414, column: 23, scope: !11888)
!11900 = !DILocation(line: 414, column: 15, scope: !11888)
!11901 = !DILocation(line: 416, column: 7, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11888, file: !145, line: 416, column: 6)
!11903 = !DILocation(line: 416, column: 12, scope: !11902)
!11904 = !DILocation(line: 416, column: 15, scope: !11902)
!11905 = !DILocation(line: 416, column: 35, scope: !11902)
!11906 = !DILocation(line: 416, column: 38, scope: !11902)
!11907 = !DILocation(line: 416, column: 42, scope: !11902)
!11908 = !DILocation(line: 416, column: 6, scope: !11888)
!11909 = !DILocation(line: 417, column: 3, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11902, file: !145, line: 416, column: 51)
!11911 = !DILocation(line: 419, column: 2, scope: !11888)
!11912 = !DILocation(line: 419, column: 2, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11888, file: !145, line: 419, column: 2)
!11914 = !DILocation(line: 421, column: 6, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11888, file: !145, line: 421, column: 6)
!11916 = !DILocation(line: 421, column: 6, scope: !11888)
!11917 = !DILocation(line: 422, column: 25, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11915, file: !145, line: 421, column: 57)
!11919 = !DILocation(line: 422, column: 30, scope: !11918)
!11920 = !DILocation(line: 422, column: 10, scope: !11918)
!11921 = !DILocation(line: 422, column: 3, scope: !11918)
!11922 = !DILocation(line: 424, column: 2, scope: !11888)
!11923 = !DILocation(line: 424, column: 2, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11888, file: !145, line: 424, column: 2)
!11925 = !DILocation(line: 425, column: 18, scope: !11888)
!11926 = !DILocation(line: 425, column: 2, scope: !11888)
!11927 = !DILocation(line: 427, column: 9, scope: !11888)
!11928 = !DILocation(line: 427, column: 2, scope: !11888)
!11929 = !DILocation(line: 428, column: 1, scope: !11888)
!11930 = !DISubprogram(name: "tsd_fetch_slow", scope: !145, file: !145, line: 165, type: !11931, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11931 = !DISubroutineType(types: !11932)
!11932 = !{!1347, !1347, !389}
!11933 = distinct !DISubprogram(name: "tcache_get", scope: !3392, file: !3392, line: 93, type: !11825, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11934)
!11934 = !{!11935}
!11935 = !DILocalVariable(name: "tsd", arg: 1, scope: !11933, file: !3392, line: 93, type: !1347)
!11936 = !DILocation(line: 93, column: 19, scope: !11933)
!11937 = !DILocation(line: 94, column: 24, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11933, file: !3392, line: 94, column: 6)
!11939 = !DILocation(line: 94, column: 7, scope: !11938)
!11940 = !DILocation(line: 94, column: 6, scope: !11933)
!11941 = !DILocation(line: 95, column: 3, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11938, file: !3392, line: 94, column: 30)
!11943 = !DILocation(line: 98, column: 25, scope: !11933)
!11944 = !DILocation(line: 98, column: 9, scope: !11933)
!11945 = !DILocation(line: 98, column: 2, scope: !11933)
!11946 = !DILocation(line: 99, column: 1, scope: !11933)
!11947 = distinct !DISubprogram(name: "tcaches_get", scope: !2603, file: !2603, line: 182, type: !11948, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11950)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!740, !1347, !7}
!11950 = !{!11951, !11952, !11953}
!11951 = !DILocalVariable(name: "tsd", arg: 1, scope: !11947, file: !2603, line: 182, type: !1347)
!11952 = !DILocalVariable(name: "ind", arg: 2, scope: !11947, file: !2603, line: 182, type: !7)
!11953 = !DILocalVariable(name: "elm", scope: !11947, file: !2603, line: 183, type: !11954)
!11954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11955, size: 64)
!11955 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcaches_t", file: !686, line: 8, baseType: !11956)
!11956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcaches_s", file: !688, line: 61, size: 64, elements: !11957)
!11957 = !{!11958}
!11958 = !DIDerivedType(tag: DW_TAG_member, scope: !11956, file: !688, line: 62, baseType: !11959, size: 64)
!11959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11956, file: !688, line: 62, size: 64, elements: !11960)
!11960 = !{!11961, !11962}
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "tcache", scope: !11959, file: !688, line: 63, baseType: !740, size: 64)
!11962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11959, file: !688, line: 64, baseType: !11954, size: 64)
!11963 = !DILocation(line: 182, column: 20, scope: !11947)
!11964 = !DILocation(line: 182, column: 34, scope: !11947)
!11965 = !DILocation(line: 183, column: 2, scope: !11947)
!11966 = !DILocation(line: 183, column: 13, scope: !11947)
!11967 = !DILocation(line: 183, column: 20, scope: !11947)
!11968 = !DILocation(line: 183, column: 28, scope: !11947)
!11969 = !DILocation(line: 184, column: 6, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11947, file: !2603, line: 184, column: 6)
!11971 = !DILocation(line: 184, column: 6, scope: !11947)
!11972 = !DILocation(line: 185, column: 58, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11970, file: !2603, line: 184, column: 37)
!11974 = !DILocation(line: 185, column: 3, scope: !11973)
!11975 = !DILocation(line: 186, column: 3, scope: !11973)
!11976 = !DILocation(line: 187, column: 13, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11970, file: !2603, line: 187, column: 13)
!11978 = !DILocation(line: 187, column: 13, scope: !11970)
!11979 = !DILocation(line: 188, column: 40, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11977, file: !2603, line: 187, column: 63)
!11981 = !DILocation(line: 188, column: 17, scope: !11980)
!11982 = !DILocation(line: 188, column: 3, scope: !11980)
!11983 = !DILocation(line: 188, column: 8, scope: !11980)
!11984 = !DILocation(line: 188, column: 15, scope: !11980)
!11985 = !DILocation(line: 189, column: 2, scope: !11980)
!11986 = !DILocation(line: 190, column: 9, scope: !11947)
!11987 = !DILocation(line: 190, column: 14, scope: !11947)
!11988 = !DILocation(line: 191, column: 1, scope: !11947)
!11989 = !DILocation(line: 190, column: 2, scope: !11947)
!11990 = distinct !DISubprogram(name: "tcache_available", scope: !3392, file: !3392, line: 75, type: !4228, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11991)
!11991 = !{!11992}
!11992 = !DILocalVariable(name: "tsd", arg: 1, scope: !11990, file: !3392, line: 75, type: !1347)
!11993 = !DILocation(line: 75, column: 25, scope: !11990)
!11994 = !DILocation(line: 81, column: 6, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11990, file: !3392, line: 81, column: 6)
!11996 = !DILocation(line: 81, column: 6, scope: !11990)
!11997 = !DILocation(line: 86, column: 3, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11995, file: !3392, line: 81, column: 43)
!11999 = !DILocation(line: 89, column: 2, scope: !11990)
!12000 = !DILocation(line: 90, column: 1, scope: !11990)
!12001 = distinct !DISubprogram(name: "tsd_tcache_enabled_get", scope: !145, file: !145, line: 373, type: !4228, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12002)
!12002 = !{!12003}
!12003 = !DILocalVariable(name: "tsd", arg: 1, scope: !12001, file: !145, line: 373, type: !1347)
!12004 = !DILocation(line: 373, column: 1, scope: !12001)
!12005 = distinct !DISubprogram(name: "tsd_tcache_enabledp_get", scope: !145, file: !145, line: 344, type: !12006, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12008)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!989, !1347}
!12008 = !{!12009, !12010}
!12009 = !DILocalVariable(name: "tsd", arg: 1, scope: !12005, file: !145, line: 344, type: !1347)
!12010 = !DILocalVariable(name: "state", scope: !12005, file: !145, line: 344, type: !730)
!12011 = !DILocation(line: 344, column: 1, scope: !12005)
!12012 = !DILocation(line: 344, column: 1, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12005, file: !145, line: 344, column: 1)
!12014 = distinct !DISubprogram(name: "tsd_tcache_enabledp_get_unsafe", scope: !145, file: !145, line: 323, type: !12006, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12015)
!12015 = !{!12016}
!12016 = !DILocalVariable(name: "tsd", arg: 1, scope: !12014, file: !145, line: 323, type: !1347)
!12017 = !DILocation(line: 323, column: 1, scope: !12014)
!12018 = !DISubprogram(name: "tcache_create_explicit", scope: !6724, file: !6724, line: 49, type: !11825, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12019 = distinct !DISubprogram(name: "emap_alloc_ctx_try_lookup_fast", scope: !1072, file: !1072, line: 284, type: !12020, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12022)
!12020 = !DISubroutineType(types: !12021)
!12021 = !{!389, !1347, !1070, !554, !5283}
!12022 = !{!12023, !12024, !12025, !12026, !12027, !12028, !12029}
!12023 = !DILocalVariable(name: "tsd", arg: 1, scope: !12019, file: !1072, line: 284, type: !1347)
!12024 = !DILocalVariable(name: "emap", arg: 2, scope: !12019, file: !1072, line: 284, type: !1070)
!12025 = !DILocalVariable(name: "ptr", arg: 3, scope: !12019, file: !1072, line: 284, type: !554)
!12026 = !DILocalVariable(name: "alloc_ctx", arg: 4, scope: !12019, file: !1072, line: 285, type: !5283)
!12027 = !DILocalVariable(name: "rtree_ctx", scope: !12019, file: !1072, line: 287, type: !5262)
!12028 = !DILocalVariable(name: "metadata", scope: !12019, file: !1072, line: 289, type: !5292)
!12029 = !DILocalVariable(name: "err", scope: !12019, file: !1072, line: 290, type: !389)
!12030 = !DILocation(line: 284, column: 39, scope: !12019)
!12031 = !DILocation(line: 284, column: 52, scope: !12019)
!12032 = !DILocation(line: 284, column: 70, scope: !12019)
!12033 = !DILocation(line: 285, column: 23, scope: !12019)
!12034 = !DILocation(line: 287, column: 2, scope: !12019)
!12035 = !DILocation(line: 287, column: 15, scope: !12019)
!12036 = !DILocation(line: 287, column: 53, scope: !12019)
!12037 = !DILocation(line: 287, column: 27, scope: !12019)
!12038 = !DILocation(line: 289, column: 2, scope: !12019)
!12039 = !DILocation(line: 289, column: 19, scope: !12019)
!12040 = !DILocation(line: 290, column: 2, scope: !12019)
!12041 = !DILocation(line: 290, column: 7, scope: !12019)
!12042 = !DILocation(line: 290, column: 51, scope: !12019)
!12043 = !DILocation(line: 290, column: 42, scope: !12019)
!12044 = !DILocation(line: 290, column: 58, scope: !12019)
!12045 = !DILocation(line: 290, column: 64, scope: !12019)
!12046 = !DILocation(line: 291, column: 6, scope: !12019)
!12047 = !DILocation(line: 291, column: 28, scope: !12019)
!12048 = !DILocation(line: 291, column: 17, scope: !12019)
!12049 = !DILocation(line: 290, column: 13, scope: !12019)
!12050 = !DILocation(line: 292, column: 6, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12019, file: !1072, line: 292, column: 6)
!12052 = !DILocation(line: 292, column: 6, scope: !12019)
!12053 = !DILocation(line: 293, column: 3, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12051, file: !1072, line: 292, column: 11)
!12055 = !DILocation(line: 295, column: 30, scope: !12019)
!12056 = !DILocation(line: 295, column: 2, scope: !12019)
!12057 = !DILocation(line: 295, column: 13, scope: !12019)
!12058 = !DILocation(line: 295, column: 19, scope: !12019)
!12059 = !DILocation(line: 296, column: 29, scope: !12019)
!12060 = !DILocation(line: 296, column: 2, scope: !12019)
!12061 = !DILocation(line: 296, column: 13, scope: !12019)
!12062 = !DILocation(line: 296, column: 18, scope: !12019)
!12063 = !DILocation(line: 297, column: 2, scope: !12019)
!12064 = !DILocation(line: 298, column: 1, scope: !12019)
!12065 = distinct !DISubprogram(name: "free_fastpath_nonfast_aligned", scope: !3, file: !3, line: 3029, type: !12066, scopeLine: 3029, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12068)
!12066 = !DISubroutineType(types: !12067)
!12067 = !{!389, !383, !389}
!12068 = !{!12069, !12070}
!12069 = !DILocalVariable(name: "ptr", arg: 1, scope: !12065, file: !3, line: 3029, type: !383)
!12070 = !DILocalVariable(name: "check_prof", arg: 2, scope: !12065, file: !3, line: 3029, type: !389)
!12071 = !DILocation(line: 3029, column: 37, scope: !12065)
!12072 = !DILocation(line: 3029, column: 47, scope: !12065)
!12073 = !DILocation(line: 3060, column: 2, scope: !12065)
!12074 = distinct !DISubprogram(name: "te_free_fastpath_ctx", scope: !5374, file: !5374, line: 121, type: !11800, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12075)
!12075 = !{!12076, !12077, !12078}
!12076 = !DILocalVariable(name: "tsd", arg: 1, scope: !12074, file: !5374, line: 121, type: !1347)
!12077 = !DILocalVariable(name: "deallocated", arg: 2, scope: !12074, file: !5374, line: 121, type: !11802)
!12078 = !DILocalVariable(name: "threshold", arg: 3, scope: !12074, file: !5374, line: 121, type: !11802)
!12079 = !DILocation(line: 121, column: 29, scope: !12074)
!12080 = !DILocation(line: 121, column: 44, scope: !12074)
!12081 = !DILocation(line: 121, column: 67, scope: !12074)
!12082 = !DILocation(line: 123, column: 53, scope: !12074)
!12083 = !DILocation(line: 123, column: 18, scope: !12074)
!12084 = !DILocation(line: 123, column: 17, scope: !12074)
!12085 = !DILocation(line: 123, column: 3, scope: !12074)
!12086 = !DILocation(line: 123, column: 15, scope: !12074)
!12087 = !DILocation(line: 124, column: 67, scope: !12074)
!12088 = !DILocation(line: 124, column: 16, scope: !12074)
!12089 = !DILocation(line: 124, column: 15, scope: !12074)
!12090 = !DILocation(line: 124, column: 3, scope: !12074)
!12091 = !DILocation(line: 124, column: 13, scope: !12074)
!12092 = !DILocation(line: 125, column: 2, scope: !12074)
!12093 = !DILocation(line: 125, column: 2, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12074, file: !5374, line: 125, column: 2)
!12095 = !DILocation(line: 126, column: 1, scope: !12074)
!12096 = distinct !DISubprogram(name: "maybe_check_alloc_ctx", scope: !3, file: !3, line: 2900, type: !12097, scopeLine: 2900, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12099)
!12097 = !DISubroutineType(types: !12098)
!12098 = !{!389, !1347, !383, !5283}
!12099 = !{!12100, !12101, !12102}
!12100 = !DILocalVariable(name: "tsd", arg: 1, scope: !12096, file: !3, line: 2900, type: !1347)
!12101 = !DILocalVariable(name: "ptr", arg: 2, scope: !12096, file: !3, line: 2900, type: !383)
!12102 = !DILocalVariable(name: "alloc_ctx", arg: 3, scope: !12096, file: !3, line: 2900, type: !5283)
!12103 = !DILocation(line: 2900, column: 30, scope: !12096)
!12104 = !DILocation(line: 2900, column: 41, scope: !12096)
!12105 = !DILocation(line: 2900, column: 64, scope: !12096)
!12106 = !DILocation(line: 2919, column: 2, scope: !12096)
!12107 = distinct !DISubprogram(name: "tsd_thread_deallocatedp_get", scope: !145, file: !145, line: 345, type: !11861, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12108)
!12108 = !{!12109, !12110}
!12109 = !DILocalVariable(name: "tsd", arg: 1, scope: !12107, file: !145, line: 345, type: !1347)
!12110 = !DILocalVariable(name: "state", scope: !12107, file: !145, line: 345, type: !730)
!12111 = !DILocation(line: 345, column: 1, scope: !12107)
!12112 = !DILocation(line: 345, column: 1, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12107, file: !145, line: 345, column: 1)
!12114 = distinct !DISubprogram(name: "tsd_rtree_ctxp_get_unsafe", scope: !145, file: !145, line: 323, type: !12115, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12117)
!12115 = !DISubroutineType(types: !12116)
!12116 = !{!5262, !1347}
!12117 = !{!12118}
!12118 = !DILocalVariable(name: "tsd", arg: 1, scope: !12114, file: !145, line: 323, type: !1347)
!12119 = !DILocation(line: 323, column: 1, scope: !12114)
!12120 = distinct !DISubprogram(name: "rtree_metadata_try_read_fast", scope: !1077, file: !1077, line: 454, type: !12121, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12125)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!389, !391, !12123, !5262, !384, !12124}
!12123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!12124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5292, size: 64)
!12125 = !{!12126, !12127, !12128, !12129, !12130, !12131}
!12126 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12120, file: !1077, line: 454, type: !391)
!12127 = !DILocalVariable(name: "rtree", arg: 2, scope: !12120, file: !1077, line: 454, type: !12123)
!12128 = !DILocalVariable(name: "rtree_ctx", arg: 3, scope: !12120, file: !1077, line: 454, type: !5262)
!12129 = !DILocalVariable(name: "key", arg: 4, scope: !12120, file: !1077, line: 455, type: !384)
!12130 = !DILocalVariable(name: "r_rtree_metadata", arg: 5, scope: !12120, file: !1077, line: 455, type: !12124)
!12131 = !DILocalVariable(name: "elm", scope: !12120, file: !1077, line: 456, type: !1381)
!12132 = !DILocation(line: 454, column: 38, scope: !12120)
!12133 = !DILocation(line: 454, column: 53, scope: !12120)
!12134 = !DILocation(line: 454, column: 73, scope: !12120)
!12135 = !DILocation(line: 455, column: 15, scope: !12120)
!12136 = !DILocation(line: 455, column: 38, scope: !12120)
!12137 = !DILocation(line: 456, column: 2, scope: !12120)
!12138 = !DILocation(line: 456, column: 20, scope: !12120)
!12139 = !DILocation(line: 463, column: 33, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12120, file: !1077, line: 463, column: 6)
!12141 = !DILocation(line: 463, column: 39, scope: !12140)
!12142 = !DILocation(line: 463, column: 46, scope: !12140)
!12143 = !DILocation(line: 463, column: 57, scope: !12140)
!12144 = !DILocation(line: 463, column: 6, scope: !12140)
!12145 = !DILocation(line: 463, column: 6, scope: !12120)
!12146 = !DILocation(line: 464, column: 3, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12140, file: !1077, line: 463, column: 69)
!12148 = !DILocation(line: 466, column: 2, scope: !12120)
!12149 = !DILocation(line: 466, column: 2, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12120, file: !1077, line: 466, column: 2)
!12151 = !DILocation(line: 467, column: 3, scope: !12120)
!12152 = !DILocation(line: 467, column: 42, scope: !12120)
!12153 = !DILocation(line: 467, column: 48, scope: !12120)
!12154 = !DILocation(line: 467, column: 55, scope: !12120)
!12155 = !DILocation(line: 467, column: 22, scope: !12120)
!12156 = !DILocation(line: 468, column: 28, scope: !12120)
!12157 = !{i64 0, i64 4, !2791, i64 4, i64 4, !2810, i64 8, i64 1, !2695, i64 9, i64 1, !2695}
!12158 = !DILocation(line: 469, column: 2, scope: !12120)
!12159 = !DILocation(line: 470, column: 1, scope: !12120)
!12160 = distinct !DISubprogram(name: "rtree_leaf_elm_lookup_fast", scope: !1077, file: !1077, line: 338, type: !12161, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12164)
!12161 = !DISubroutineType(types: !12162)
!12162 = !{!389, !391, !12123, !5262, !384, !12163}
!12163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!12164 = !{!12165, !12166, !12167, !12168, !12169, !12170, !12171, !12172, !12173}
!12165 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12160, file: !1077, line: 338, type: !391)
!12166 = !DILocalVariable(name: "rtree", arg: 2, scope: !12160, file: !1077, line: 338, type: !12123)
!12167 = !DILocalVariable(name: "rtree_ctx", arg: 3, scope: !12160, file: !1077, line: 338, type: !5262)
!12168 = !DILocalVariable(name: "key", arg: 4, scope: !12160, file: !1077, line: 339, type: !384)
!12169 = !DILocalVariable(name: "elm", arg: 5, scope: !12160, file: !1077, line: 339, type: !12163)
!12170 = !DILocalVariable(name: "slot", scope: !12160, file: !1077, line: 340, type: !387)
!12171 = !DILocalVariable(name: "leafkey", scope: !12160, file: !1077, line: 341, type: !384)
!12172 = !DILocalVariable(name: "leaf", scope: !12160, file: !1077, line: 348, type: !1381)
!12173 = !DILocalVariable(name: "subkey", scope: !12160, file: !1077, line: 350, type: !384)
!12174 = !DILocation(line: 338, column: 36, scope: !12160)
!12175 = !DILocation(line: 338, column: 51, scope: !12160)
!12176 = !DILocation(line: 338, column: 71, scope: !12160)
!12177 = !DILocation(line: 339, column: 15, scope: !12160)
!12178 = !DILocation(line: 339, column: 39, scope: !12160)
!12179 = !DILocation(line: 340, column: 2, scope: !12160)
!12180 = !DILocation(line: 340, column: 9, scope: !12160)
!12181 = !DILocation(line: 340, column: 39, scope: !12160)
!12182 = !DILocation(line: 340, column: 16, scope: !12160)
!12183 = !DILocation(line: 341, column: 2, scope: !12160)
!12184 = !DILocation(line: 341, column: 12, scope: !12160)
!12185 = !DILocation(line: 341, column: 36, scope: !12160)
!12186 = !DILocation(line: 341, column: 22, scope: !12160)
!12187 = !DILocation(line: 342, column: 2, scope: !12160)
!12188 = !DILocation(line: 342, column: 2, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12160, file: !1077, line: 342, column: 2)
!12190 = !DILocation(line: 344, column: 6, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12160, file: !1077, line: 344, column: 6)
!12192 = !{!12193, !2664, i64 0}
!12193 = !{!"rtree_ctx_cache_elm_s", !2664, i64 0, !2659, i64 8}
!12194 = !DILocation(line: 344, column: 6, scope: !12160)
!12195 = !DILocation(line: 345, column: 3, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12191, file: !1077, line: 344, column: 59)
!12197 = !DILocation(line: 348, column: 2, scope: !12160)
!12198 = !DILocation(line: 348, column: 20, scope: !12160)
!12199 = !DILocation(line: 348, column: 27, scope: !12160)
!12200 = !DILocation(line: 348, column: 38, scope: !12160)
!12201 = !DILocation(line: 348, column: 44, scope: !12160)
!12202 = !DILocation(line: 348, column: 50, scope: !12160)
!12203 = !{!12193, !2659, i64 8}
!12204 = !DILocation(line: 349, column: 2, scope: !12160)
!12205 = !DILocation(line: 349, column: 2, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12160, file: !1077, line: 349, column: 2)
!12207 = !DILocation(line: 350, column: 2, scope: !12160)
!12208 = !DILocation(line: 350, column: 12, scope: !12160)
!12209 = !DILocation(line: 350, column: 34, scope: !12160)
!12210 = !DILocation(line: 350, column: 21, scope: !12160)
!12211 = !DILocation(line: 351, column: 10, scope: !12160)
!12212 = !DILocation(line: 351, column: 15, scope: !12160)
!12213 = !DILocation(line: 351, column: 3, scope: !12160)
!12214 = !DILocation(line: 351, column: 7, scope: !12160)
!12215 = !DILocation(line: 353, column: 2, scope: !12160)
!12216 = !DILocation(line: 354, column: 1, scope: !12160)
!12217 = distinct !DISubprogram(name: "rtree_leaf_elm_read", scope: !1077, file: !1077, line: 239, type: !12218, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12225)
!12218 = !DISubroutineType(types: !12219)
!12219 = !{!12220, !391, !12123, !1381, !389}
!12220 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtree_contents_t", file: !1077, line: 51, baseType: !12221)
!12221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtree_contents_s", file: !1077, line: 52, size: 192, elements: !12222)
!12222 = !{!12223, !12224}
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !12221, file: !1077, line: 53, baseType: !763, size: 64)
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !12221, file: !1077, line: 54, baseType: !5292, size: 96, offset: 64)
!12225 = !{!12226, !12227, !12228, !12229, !12230, !12231}
!12226 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12217, file: !1077, line: 239, type: !391)
!12227 = !DILocalVariable(name: "rtree", arg: 2, scope: !12217, file: !1077, line: 239, type: !12123)
!12228 = !DILocalVariable(name: "elm", arg: 3, scope: !12217, file: !1077, line: 239, type: !1381)
!12229 = !DILocalVariable(name: "dependent", arg: 4, scope: !12217, file: !1077, line: 240, type: !389)
!12230 = !DILocalVariable(name: "bits", scope: !12217, file: !1077, line: 242, type: !384)
!12231 = !DILocalVariable(name: "contents", scope: !12217, file: !1077, line: 243, type: !12220)
!12232 = !DILocation(line: 239, column: 29, scope: !12217)
!12233 = !DILocation(line: 239, column: 44, scope: !12217)
!12234 = !DILocation(line: 239, column: 69, scope: !12217)
!12235 = !DILocation(line: 240, column: 10, scope: !12217)
!12236 = !DILocation(line: 242, column: 2, scope: !12217)
!12237 = !DILocation(line: 242, column: 12, scope: !12217)
!12238 = !DILocation(line: 242, column: 44, scope: !12217)
!12239 = !DILocation(line: 242, column: 50, scope: !12217)
!12240 = !DILocation(line: 242, column: 57, scope: !12217)
!12241 = !DILocation(line: 242, column: 62, scope: !12217)
!12242 = !DILocation(line: 242, column: 19, scope: !12217)
!12243 = !DILocation(line: 243, column: 19, scope: !12217)
!12244 = !DILocation(line: 243, column: 57, scope: !12217)
!12245 = !DILocation(line: 243, column: 30, scope: !12217)
!12246 = !DILocation(line: 264, column: 1, scope: !12217)
!12247 = distinct !DISubprogram(name: "rtree_cache_direct_map", scope: !1077, file: !1077, line: 152, type: !12248, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12250)
!12248 = !DISubroutineType(types: !12249)
!12249 = !{!387, !384}
!12250 = !{!12251}
!12251 = !DILocalVariable(name: "key", arg: 1, scope: !12247, file: !1077, line: 152, type: !384)
!12252 = !DILocation(line: 152, column: 34, scope: !12247)
!12253 = !DILocation(line: 153, column: 19, scope: !12247)
!12254 = !DILocation(line: 153, column: 26, scope: !12247)
!12255 = !DILocation(line: 153, column: 23, scope: !12247)
!12256 = !DILocation(line: 153, column: 49, scope: !12247)
!12257 = !DILocation(line: 153, column: 2, scope: !12247)
!12258 = distinct !DISubprogram(name: "rtree_leafkey", scope: !1077, file: !1077, line: 146, type: !12259, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12261)
!12259 = !DISubroutineType(types: !12260)
!12260 = !{!384, !384}
!12261 = !{!12262, !12263}
!12262 = !DILocalVariable(name: "key", arg: 1, scope: !12258, file: !1077, line: 146, type: !384)
!12263 = !DILocalVariable(name: "mask", scope: !12258, file: !1077, line: 147, type: !384)
!12264 = !DILocation(line: 146, column: 25, scope: !12258)
!12265 = !DILocation(line: 147, column: 2, scope: !12258)
!12266 = !DILocation(line: 147, column: 12, scope: !12258)
!12267 = !DILocation(line: 147, column: 31, scope: !12258)
!12268 = !DILocation(line: 147, column: 28, scope: !12258)
!12269 = !DILocation(line: 147, column: 54, scope: !12258)
!12270 = !DILocation(line: 147, column: 19, scope: !12258)
!12271 = !DILocation(line: 148, column: 10, scope: !12258)
!12272 = !DILocation(line: 148, column: 16, scope: !12258)
!12273 = !DILocation(line: 148, column: 14, scope: !12258)
!12274 = !DILocation(line: 149, column: 1, scope: !12258)
!12275 = !DILocation(line: 148, column: 2, scope: !12258)
!12276 = distinct !DISubprogram(name: "rtree_subkey", scope: !1077, file: !1077, line: 158, type: !12277, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12279)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{!384, !384, !7}
!12279 = !{!12280, !12281, !12282, !12283, !12284, !12285, !12286}
!12280 = !DILocalVariable(name: "key", arg: 1, scope: !12276, file: !1077, line: 158, type: !384)
!12281 = !DILocalVariable(name: "level", arg: 2, scope: !12276, file: !1077, line: 158, type: !7)
!12282 = !DILocalVariable(name: "ptrbits", scope: !12276, file: !1077, line: 159, type: !7)
!12283 = !DILocalVariable(name: "cumbits", scope: !12276, file: !1077, line: 160, type: !7)
!12284 = !DILocalVariable(name: "shiftbits", scope: !12276, file: !1077, line: 161, type: !7)
!12285 = !DILocalVariable(name: "maskbits", scope: !12276, file: !1077, line: 162, type: !7)
!12286 = !DILocalVariable(name: "mask", scope: !12276, file: !1077, line: 163, type: !384)
!12287 = !DILocation(line: 158, column: 24, scope: !12276)
!12288 = !DILocation(line: 158, column: 38, scope: !12276)
!12289 = !DILocation(line: 159, column: 2, scope: !12276)
!12290 = !DILocation(line: 159, column: 11, scope: !12276)
!12291 = !DILocation(line: 160, column: 2, scope: !12276)
!12292 = !DILocation(line: 160, column: 11, scope: !12276)
!12293 = !DILocation(line: 160, column: 34, scope: !12276)
!12294 = !DILocation(line: 160, column: 21, scope: !12276)
!12295 = !DILocation(line: 160, column: 41, scope: !12276)
!12296 = !{!12297, !2792, i64 4}
!12297 = !{!"rtree_level_s", !2792, i64 0, !2792, i64 4}
!12298 = !DILocation(line: 161, column: 2, scope: !12276)
!12299 = !DILocation(line: 161, column: 11, scope: !12276)
!12300 = !DILocation(line: 161, column: 23, scope: !12276)
!12301 = !DILocation(line: 161, column: 33, scope: !12276)
!12302 = !DILocation(line: 161, column: 31, scope: !12276)
!12303 = !DILocation(line: 162, column: 2, scope: !12276)
!12304 = !DILocation(line: 162, column: 11, scope: !12276)
!12305 = !DILocation(line: 162, column: 35, scope: !12276)
!12306 = !DILocation(line: 162, column: 22, scope: !12276)
!12307 = !DILocation(line: 162, column: 42, scope: !12276)
!12308 = !{!12297, !2792, i64 0}
!12309 = !DILocation(line: 163, column: 2, scope: !12276)
!12310 = !DILocation(line: 163, column: 12, scope: !12276)
!12311 = !DILocation(line: 163, column: 29, scope: !12276)
!12312 = !DILocation(line: 163, column: 26, scope: !12276)
!12313 = !DILocation(line: 163, column: 39, scope: !12276)
!12314 = !DILocation(line: 164, column: 11, scope: !12276)
!12315 = !DILocation(line: 164, column: 18, scope: !12276)
!12316 = !DILocation(line: 164, column: 15, scope: !12276)
!12317 = !DILocation(line: 164, column: 31, scope: !12276)
!12318 = !DILocation(line: 164, column: 29, scope: !12276)
!12319 = !DILocation(line: 165, column: 1, scope: !12276)
!12320 = !DILocation(line: 164, column: 2, scope: !12276)
!12321 = distinct !DISubprogram(name: "rtree_leaf_maskbits", scope: !1077, file: !1077, line: 138, type: !2812, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12322)
!12322 = !{!12323, !12324}
!12323 = !DILocalVariable(name: "ptrbits", scope: !12321, file: !1077, line: 139, type: !7)
!12324 = !DILocalVariable(name: "cumbits", scope: !12321, file: !1077, line: 140, type: !7)
!12325 = !DILocation(line: 139, column: 2, scope: !12321)
!12326 = !DILocation(line: 139, column: 11, scope: !12321)
!12327 = !DILocation(line: 140, column: 2, scope: !12321)
!12328 = !DILocation(line: 140, column: 11, scope: !12321)
!12329 = !DILocation(line: 142, column: 9, scope: !12321)
!12330 = !DILocation(line: 142, column: 19, scope: !12321)
!12331 = !DILocation(line: 142, column: 17, scope: !12321)
!12332 = !DILocation(line: 143, column: 1, scope: !12321)
!12333 = !DILocation(line: 142, column: 2, scope: !12321)
!12334 = distinct !DISubprogram(name: "rtree_leaf_elm_bits_read", scope: !1077, file: !1077, line: 180, type: !12335, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12337)
!12335 = !DISubroutineType(types: !12336)
!12336 = !{!384, !391, !12123, !1381, !389}
!12337 = !{!12338, !12339, !12340, !12341}
!12338 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12334, file: !1077, line: 180, type: !391)
!12339 = !DILocalVariable(name: "rtree", arg: 2, scope: !12334, file: !1077, line: 180, type: !12123)
!12340 = !DILocalVariable(name: "elm", arg: 3, scope: !12334, file: !1077, line: 181, type: !1381)
!12341 = !DILocalVariable(name: "dependent", arg: 4, scope: !12334, file: !1077, line: 181, type: !389)
!12342 = !DILocation(line: 180, column: 34, scope: !12334)
!12343 = !DILocation(line: 180, column: 49, scope: !12334)
!12344 = !DILocation(line: 181, column: 23, scope: !12334)
!12345 = !DILocation(line: 181, column: 33, scope: !12334)
!12346 = !DILocation(line: 182, column: 35, scope: !12334)
!12347 = !DILocation(line: 182, column: 40, scope: !12334)
!12348 = !DILocation(line: 182, column: 49, scope: !12334)
!12349 = !DILocation(line: 182, column: 20, scope: !12334)
!12350 = !DILocation(line: 182, column: 9, scope: !12334)
!12351 = !DILocation(line: 182, column: 2, scope: !12334)
!12352 = distinct !DISubprogram(name: "rtree_leaf_elm_bits_decode", scope: !1077, file: !1077, line: 205, type: !12353, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!12220, !384}
!12355 = !{!12356, !12357, !12358, !12359}
!12356 = !DILocalVariable(name: "bits", arg: 1, scope: !12352, file: !1077, line: 205, type: !384)
!12357 = !DILocalVariable(name: "contents", scope: !12352, file: !1077, line: 206, type: !12220)
!12358 = !DILocalVariable(name: "state_bits", scope: !12352, file: !1077, line: 212, type: !384)
!12359 = !DILocalVariable(name: "low_bit_mask", scope: !12352, file: !1077, line: 217, type: !384)
!12360 = !DILocation(line: 205, column: 38, scope: !12352)
!12361 = !DILocation(line: 206, column: 19, scope: !12352)
!12362 = !DILocation(line: 208, column: 28, scope: !12352)
!12363 = !DILocation(line: 208, column: 33, scope: !12352)
!12364 = !DILocation(line: 208, column: 11, scope: !12352)
!12365 = !DILocation(line: 208, column: 20, scope: !12352)
!12366 = !DILocation(line: 208, column: 26, scope: !12352)
!12367 = !{!5276, !2792, i64 8}
!12368 = !DILocation(line: 209, column: 34, scope: !12352)
!12369 = !DILocation(line: 209, column: 39, scope: !12352)
!12370 = !DILocation(line: 209, column: 27, scope: !12352)
!12371 = !DILocation(line: 209, column: 11, scope: !12352)
!12372 = !DILocation(line: 209, column: 20, scope: !12352)
!12373 = !DILocation(line: 209, column: 25, scope: !12352)
!12374 = !{!5276, !2696, i64 17}
!12375 = !DILocation(line: 210, column: 37, scope: !12352)
!12376 = !DILocation(line: 210, column: 42, scope: !12352)
!12377 = !DILocation(line: 210, column: 30, scope: !12352)
!12378 = !DILocation(line: 210, column: 11, scope: !12352)
!12379 = !DILocation(line: 210, column: 20, scope: !12352)
!12380 = !DILocation(line: 210, column: 28, scope: !12352)
!12381 = !{!5276, !2696, i64 16}
!12382 = !DILocation(line: 212, column: 2, scope: !12352)
!12383 = !DILocation(line: 212, column: 12, scope: !12352)
!12384 = !DILocation(line: 212, column: 26, scope: !12352)
!12385 = !DILocation(line: 212, column: 31, scope: !12352)
!12386 = !DILocation(line: 212, column: 56, scope: !12352)
!12387 = !DILocation(line: 214, column: 2, scope: !12352)
!12388 = !DILocation(line: 214, column: 2, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12352, file: !1077, line: 214, column: 2)
!12390 = !DILocation(line: 215, column: 44, scope: !12352)
!12391 = !DILocation(line: 215, column: 28, scope: !12352)
!12392 = !DILocation(line: 215, column: 11, scope: !12352)
!12393 = !DILocation(line: 215, column: 20, scope: !12352)
!12394 = !DILocation(line: 215, column: 26, scope: !12352)
!12395 = !{!5276, !2660, i64 12}
!12396 = !DILocation(line: 217, column: 2, scope: !12352)
!12397 = !DILocation(line: 217, column: 12, scope: !12352)
!12398 = !DILocation(line: 229, column: 54, scope: !12352)
!12399 = !DILocation(line: 229, column: 59, scope: !12352)
!12400 = !DILocation(line: 230, column: 6, scope: !12352)
!12401 = !DILocation(line: 230, column: 23, scope: !12352)
!12402 = !DILocation(line: 230, column: 21, scope: !12352)
!12403 = !DILocation(line: 229, column: 19, scope: !12352)
!12404 = !DILocation(line: 229, column: 11, scope: !12352)
!12405 = !DILocation(line: 229, column: 17, scope: !12352)
!12406 = !DILocation(line: 232, column: 2, scope: !12352)
!12407 = !DILocation(line: 232, column: 2, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12352, file: !1077, line: 232, column: 2)
!12409 = !DILocation(line: 234, column: 1, scope: !12352)
!12410 = distinct !DISubprogram(name: "tsd_thread_deallocatedp_get_unsafe", scope: !145, file: !145, line: 324, type: !11861, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12411)
!12411 = !{!12412}
!12412 = !DILocalVariable(name: "tsd", arg: 1, scope: !12410, file: !145, line: 324, type: !1347)
!12413 = !DILocation(line: 324, column: 1, scope: !12410)
!12414 = distinct !DISubprogram(name: "tsd_thread_deallocated_next_event_fastp_get_unsafe", scope: !145, file: !145, line: 324, type: !11861, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12415)
!12415 = !{!12416}
!12416 = !DILocalVariable(name: "tsd", arg: 1, scope: !12414, file: !145, line: 324, type: !1347)
!12417 = !DILocation(line: 324, column: 1, scope: !12414)
!12418 = distinct !DISubprogram(name: "iralloct", scope: !2572, file: !2572, line: 176, type: !12419, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12422)
!12419 = !DISubroutineType(types: !12420)
!12420 = !{!383, !391, !383, !387, !387, !387, !389, !740, !594, !12421}
!12421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4785, size: 64)
!12422 = !{!12423, !12424, !12425, !12426, !12427, !12428, !12429, !12430, !12431}
!12423 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12418, file: !2572, line: 176, type: !391)
!12424 = !DILocalVariable(name: "ptr", arg: 2, scope: !12418, file: !2572, line: 176, type: !383)
!12425 = !DILocalVariable(name: "oldsize", arg: 3, scope: !12418, file: !2572, line: 176, type: !387)
!12426 = !DILocalVariable(name: "size", arg: 4, scope: !12418, file: !2572, line: 176, type: !387)
!12427 = !DILocalVariable(name: "alignment", arg: 5, scope: !12418, file: !2572, line: 176, type: !387)
!12428 = !DILocalVariable(name: "zero", arg: 6, scope: !12418, file: !2572, line: 177, type: !389)
!12429 = !DILocalVariable(name: "tcache", arg: 7, scope: !12418, file: !2572, line: 177, type: !740)
!12430 = !DILocalVariable(name: "arena", arg: 8, scope: !12418, file: !2572, line: 177, type: !594)
!12431 = !DILocalVariable(name: "hook_args", arg: 9, scope: !12418, file: !2572, line: 177, type: !12421)
!12432 = !DILocation(line: 176, column: 18, scope: !12418)
!12433 = !DILocation(line: 176, column: 30, scope: !12418)
!12434 = !DILocation(line: 176, column: 42, scope: !12418)
!12435 = !DILocation(line: 176, column: 58, scope: !12418)
!12436 = !DILocation(line: 176, column: 71, scope: !12418)
!12437 = !DILocation(line: 177, column: 10, scope: !12418)
!12438 = !DILocation(line: 177, column: 26, scope: !12418)
!12439 = !DILocation(line: 177, column: 43, scope: !12418)
!12440 = !DILocation(line: 177, column: 70, scope: !12418)
!12441 = !DILocation(line: 179, column: 2, scope: !12418)
!12442 = !DILocation(line: 179, column: 2, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12418, file: !2572, line: 179, column: 2)
!12444 = !DILocation(line: 180, column: 2, scope: !12418)
!12445 = !DILocation(line: 180, column: 2, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12418, file: !2572, line: 180, column: 2)
!12447 = !DILocation(line: 181, column: 53, scope: !12418)
!12448 = !DILocation(line: 181, column: 31, scope: !12418)
!12449 = !DILocation(line: 181, column: 2, scope: !12418)
!12450 = !DILocation(line: 184, column: 6, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12418, file: !2572, line: 184, column: 6)
!12452 = !DILocation(line: 184, column: 16, scope: !12451)
!12453 = !DILocation(line: 184, column: 21, scope: !12451)
!12454 = !DILocation(line: 184, column: 36, scope: !12451)
!12455 = !DILocation(line: 184, column: 25, scope: !12451)
!12456 = !DILocation(line: 184, column: 54, scope: !12451)
!12457 = !DILocation(line: 184, column: 63, scope: !12451)
!12458 = !DILocation(line: 184, column: 40, scope: !12451)
!12459 = !DILocation(line: 185, column: 6, scope: !12451)
!12460 = !DILocation(line: 184, column: 6, scope: !12418)
!12461 = !DILocation(line: 190, column: 27, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12451, file: !2572, line: 185, column: 12)
!12463 = !DILocation(line: 190, column: 33, scope: !12462)
!12464 = !DILocation(line: 190, column: 38, scope: !12462)
!12465 = !DILocation(line: 190, column: 47, scope: !12462)
!12466 = !DILocation(line: 190, column: 53, scope: !12462)
!12467 = !DILocation(line: 191, column: 7, scope: !12462)
!12468 = !DILocation(line: 191, column: 13, scope: !12462)
!12469 = !DILocation(line: 191, column: 21, scope: !12462)
!12470 = !DILocation(line: 191, column: 28, scope: !12462)
!12471 = !DILocation(line: 190, column: 10, scope: !12462)
!12472 = !DILocation(line: 190, column: 3, scope: !12462)
!12473 = !DILocation(line: 194, column: 22, scope: !12418)
!12474 = !DILocation(line: 194, column: 28, scope: !12418)
!12475 = !DILocation(line: 194, column: 35, scope: !12418)
!12476 = !DILocation(line: 194, column: 40, scope: !12418)
!12477 = !DILocation(line: 194, column: 49, scope: !12418)
!12478 = !DILocation(line: 194, column: 55, scope: !12418)
!12479 = !DILocation(line: 194, column: 66, scope: !12418)
!12480 = !DILocation(line: 195, column: 6, scope: !12418)
!12481 = !DILocation(line: 195, column: 14, scope: !12418)
!12482 = !DILocation(line: 194, column: 9, scope: !12418)
!12483 = !DILocation(line: 194, column: 2, scope: !12418)
!12484 = !DILocation(line: 196, column: 1, scope: !12418)
!12485 = distinct !DISubprogram(name: "iralloct_realign", scope: !2572, file: !2572, line: 137, type: !12419, scopeLine: 139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12486)
!12486 = !{!12487, !12488, !12489, !12490, !12491, !12492, !12493, !12494, !12495, !12496, !12497, !12498}
!12487 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12485, file: !2572, line: 137, type: !391)
!12488 = !DILocalVariable(name: "ptr", arg: 2, scope: !12485, file: !2572, line: 137, type: !383)
!12489 = !DILocalVariable(name: "oldsize", arg: 3, scope: !12485, file: !2572, line: 137, type: !387)
!12490 = !DILocalVariable(name: "size", arg: 4, scope: !12485, file: !2572, line: 137, type: !387)
!12491 = !DILocalVariable(name: "alignment", arg: 5, scope: !12485, file: !2572, line: 138, type: !387)
!12492 = !DILocalVariable(name: "zero", arg: 6, scope: !12485, file: !2572, line: 138, type: !389)
!12493 = !DILocalVariable(name: "tcache", arg: 7, scope: !12485, file: !2572, line: 138, type: !740)
!12494 = !DILocalVariable(name: "arena", arg: 8, scope: !12485, file: !2572, line: 138, type: !594)
!12495 = !DILocalVariable(name: "hook_args", arg: 9, scope: !12485, file: !2572, line: 139, type: !12421)
!12496 = !DILocalVariable(name: "p", scope: !12485, file: !2572, line: 142, type: !383)
!12497 = !DILocalVariable(name: "usize", scope: !12485, file: !2572, line: 143, type: !387)
!12498 = !DILocalVariable(name: "copysize", scope: !12485, file: !2572, line: 143, type: !387)
!12499 = !DILocation(line: 137, column: 26, scope: !12485)
!12500 = !DILocation(line: 137, column: 38, scope: !12485)
!12501 = !DILocation(line: 137, column: 50, scope: !12485)
!12502 = !DILocation(line: 137, column: 66, scope: !12485)
!12503 = !DILocation(line: 138, column: 12, scope: !12485)
!12504 = !DILocation(line: 138, column: 28, scope: !12485)
!12505 = !DILocation(line: 138, column: 44, scope: !12485)
!12506 = !DILocation(line: 138, column: 61, scope: !12485)
!12507 = !DILocation(line: 139, column: 25, scope: !12485)
!12508 = !DILocation(line: 140, column: 53, scope: !12485)
!12509 = !DILocation(line: 140, column: 31, scope: !12485)
!12510 = !DILocation(line: 140, column: 2, scope: !12485)
!12511 = !DILocation(line: 142, column: 2, scope: !12485)
!12512 = !DILocation(line: 142, column: 8, scope: !12485)
!12513 = !DILocation(line: 143, column: 2, scope: !12485)
!12514 = !DILocation(line: 143, column: 9, scope: !12485)
!12515 = !DILocation(line: 143, column: 16, scope: !12485)
!12516 = !DILocation(line: 145, column: 18, scope: !12485)
!12517 = !DILocation(line: 145, column: 24, scope: !12485)
!12518 = !DILocation(line: 145, column: 10, scope: !12485)
!12519 = !DILocation(line: 145, column: 8, scope: !12485)
!12520 = !DILocation(line: 146, column: 6, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12485, file: !2572, line: 146, column: 6)
!12522 = !DILocation(line: 146, column: 6, scope: !12485)
!12523 = !DILocation(line: 147, column: 3, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12521, file: !2572, line: 146, column: 57)
!12525 = !DILocation(line: 149, column: 15, scope: !12485)
!12526 = !DILocation(line: 149, column: 21, scope: !12485)
!12527 = !DILocation(line: 149, column: 28, scope: !12485)
!12528 = !DILocation(line: 149, column: 39, scope: !12485)
!12529 = !DILocation(line: 149, column: 45, scope: !12485)
!12530 = !DILocation(line: 149, column: 53, scope: !12485)
!12531 = !DILocation(line: 149, column: 6, scope: !12485)
!12532 = !DILocation(line: 149, column: 4, scope: !12485)
!12533 = !DILocation(line: 150, column: 6, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12485, file: !2572, line: 150, column: 6)
!12535 = !DILocation(line: 150, column: 8, scope: !12534)
!12536 = !DILocation(line: 150, column: 6, scope: !12485)
!12537 = !DILocation(line: 151, column: 3, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12534, file: !2572, line: 150, column: 17)
!12539 = !DILocation(line: 157, column: 14, scope: !12485)
!12540 = !DILocation(line: 157, column: 21, scope: !12485)
!12541 = !DILocation(line: 157, column: 19, scope: !12485)
!12542 = !DILocation(line: 157, column: 13, scope: !12485)
!12543 = !DILocation(line: 157, column: 32, scope: !12485)
!12544 = !DILocation(line: 157, column: 39, scope: !12485)
!12545 = !DILocation(line: 157, column: 11, scope: !12485)
!12546 = !DILocation(line: 158, column: 9, scope: !12485)
!12547 = !DILocation(line: 158, column: 12, scope: !12485)
!12548 = !DILocation(line: 158, column: 17, scope: !12485)
!12549 = !DILocation(line: 158, column: 2, scope: !12485)
!12550 = !DILocation(line: 159, column: 20, scope: !12485)
!12551 = !DILocation(line: 159, column: 31, scope: !12485)
!12552 = !DILocation(line: 160, column: 49, scope: !12485)
!12553 = !DILocation(line: 160, column: 63, scope: !12485)
!12554 = !DILocation(line: 160, column: 52, scope: !12485)
!12555 = !DILocation(line: 161, column: 6, scope: !12485)
!12556 = !DILocation(line: 161, column: 17, scope: !12485)
!12557 = !DILocation(line: 159, column: 2, scope: !12485)
!12558 = !DILocation(line: 162, column: 21, scope: !12485)
!12559 = !DILocation(line: 162, column: 32, scope: !12485)
!12560 = !DILocation(line: 163, column: 51, scope: !12485)
!12561 = !DILocation(line: 163, column: 56, scope: !12485)
!12562 = !DILocation(line: 163, column: 67, scope: !12485)
!12563 = !DILocation(line: 162, column: 2, scope: !12485)
!12564 = !DILocation(line: 164, column: 12, scope: !12485)
!12565 = !DILocation(line: 164, column: 18, scope: !12485)
!12566 = !DILocation(line: 164, column: 23, scope: !12485)
!12567 = !DILocation(line: 164, column: 32, scope: !12485)
!12568 = !DILocation(line: 164, column: 2, scope: !12485)
!12569 = !DILocation(line: 165, column: 9, scope: !12485)
!12570 = !DILocation(line: 165, column: 2, scope: !12485)
!12571 = !DILocation(line: 166, column: 1, scope: !12485)
!12572 = !DISubprogram(name: "arena_ralloc", scope: !3073, file: !3073, line: 83, type: !12573, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12573 = !DISubroutineType(types: !12574)
!12574 = !{!383, !391, !594, !383, !387, !387, !387, !389, !740, !12421}
!12575 = distinct !DISubprogram(name: "sz_sa2u", scope: !727, file: !727, line: 313, type: !12576, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12578)
!12576 = !DISubroutineType(types: !12577)
!12577 = !{!387, !387, !387}
!12578 = !{!12579, !12580, !12581}
!12579 = !DILocalVariable(name: "size", arg: 1, scope: !12575, file: !727, line: 313, type: !387)
!12580 = !DILocalVariable(name: "alignment", arg: 2, scope: !12575, file: !727, line: 313, type: !387)
!12581 = !DILocalVariable(name: "usize", scope: !12575, file: !727, line: 314, type: !387)
!12582 = !DILocation(line: 313, column: 16, scope: !12575)
!12583 = !DILocation(line: 313, column: 29, scope: !12575)
!12584 = !DILocation(line: 314, column: 2, scope: !12575)
!12585 = !DILocation(line: 314, column: 9, scope: !12575)
!12586 = !DILocation(line: 316, column: 2, scope: !12575)
!12587 = !DILocation(line: 316, column: 2, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12575, file: !727, line: 316, column: 2)
!12589 = !DILocation(line: 319, column: 6, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12575, file: !727, line: 319, column: 6)
!12591 = !DILocation(line: 319, column: 11, scope: !12590)
!12592 = !DILocation(line: 319, column: 32, scope: !12590)
!12593 = !DILocation(line: 319, column: 35, scope: !12590)
!12594 = !DILocation(line: 319, column: 45, scope: !12590)
!12595 = !DILocation(line: 319, column: 6, scope: !12575)
!12596 = !DILocation(line: 334, column: 18, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12590, file: !727, line: 319, column: 54)
!12598 = !DILocation(line: 334, column: 11, scope: !12597)
!12599 = !DILocation(line: 334, column: 9, scope: !12597)
!12600 = !DILocation(line: 335, column: 7, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12597, file: !727, line: 335, column: 7)
!12602 = !DILocation(line: 335, column: 13, scope: !12601)
!12603 = !DILocation(line: 335, column: 7, scope: !12597)
!12604 = !DILocation(line: 336, column: 11, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12601, file: !727, line: 335, column: 34)
!12606 = !DILocation(line: 336, column: 4, scope: !12605)
!12607 = !DILocation(line: 338, column: 2, scope: !12597)
!12608 = !DILocation(line: 342, column: 6, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12575, file: !727, line: 342, column: 6)
!12610 = !DILocation(line: 342, column: 6, scope: !12575)
!12611 = !DILocation(line: 343, column: 3, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12609, file: !727, line: 342, column: 47)
!12613 = !DILocation(line: 347, column: 6, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12575, file: !727, line: 347, column: 6)
!12615 = !DILocation(line: 347, column: 11, scope: !12614)
!12616 = !DILocation(line: 347, column: 6, scope: !12575)
!12617 = !DILocation(line: 348, column: 9, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12614, file: !727, line: 347, column: 33)
!12619 = !DILocation(line: 349, column: 2, scope: !12618)
!12620 = !DILocation(line: 350, column: 18, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12614, file: !727, line: 349, column: 9)
!12622 = !DILocation(line: 350, column: 11, scope: !12621)
!12623 = !DILocation(line: 350, column: 9, scope: !12621)
!12624 = !DILocation(line: 351, column: 7, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12621, file: !727, line: 351, column: 7)
!12626 = !DILocation(line: 351, column: 15, scope: !12625)
!12627 = !DILocation(line: 351, column: 13, scope: !12625)
!12628 = !DILocation(line: 351, column: 7, scope: !12621)
!12629 = !DILocation(line: 353, column: 4, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12625, file: !727, line: 351, column: 21)
!12631 = !DILocation(line: 361, column: 6, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12575, file: !727, line: 361, column: 6)
!12633 = !DILocation(line: 361, column: 14, scope: !12632)
!12634 = !DILocation(line: 361, column: 12, scope: !12632)
!12635 = !DILocation(line: 361, column: 29, scope: !12632)
!12636 = !DILocation(line: 361, column: 27, scope: !12632)
!12637 = !DILocation(line: 361, column: 53, scope: !12632)
!12638 = !DILocation(line: 361, column: 62, scope: !12632)
!12639 = !DILocation(line: 361, column: 60, scope: !12632)
!12640 = !DILocation(line: 361, column: 6, scope: !12575)
!12641 = !DILocation(line: 363, column: 3, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12632, file: !727, line: 361, column: 69)
!12643 = !DILocation(line: 365, column: 9, scope: !12575)
!12644 = !DILocation(line: 365, column: 2, scope: !12575)
!12645 = !DILocation(line: 366, column: 1, scope: !12575)
!12646 = distinct !DISubprogram(name: "isdalloct", scope: !2572, file: !2572, line: 129, type: !12647, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12649)
!12647 = !DISubroutineType(types: !12648)
!12648 = !{null, !391, !383, !387, !740, !5283, !389}
!12649 = !{!12650, !12651, !12652, !12653, !12654, !12655}
!12650 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12646, file: !2572, line: 129, type: !391)
!12651 = !DILocalVariable(name: "ptr", arg: 2, scope: !12646, file: !2572, line: 129, type: !383)
!12652 = !DILocalVariable(name: "size", arg: 3, scope: !12646, file: !2572, line: 129, type: !387)
!12653 = !DILocalVariable(name: "tcache", arg: 4, scope: !12646, file: !2572, line: 129, type: !740)
!12654 = !DILocalVariable(name: "alloc_ctx", arg: 5, scope: !12646, file: !2572, line: 130, type: !5283)
!12655 = !DILocalVariable(name: "slow_path", arg: 6, scope: !12646, file: !2572, line: 130, type: !389)
!12656 = !DILocation(line: 129, column: 19, scope: !12646)
!12657 = !DILocation(line: 129, column: 31, scope: !12646)
!12658 = !DILocation(line: 129, column: 43, scope: !12646)
!12659 = !DILocation(line: 129, column: 59, scope: !12646)
!12660 = !DILocation(line: 130, column: 23, scope: !12646)
!12661 = !DILocation(line: 130, column: 39, scope: !12646)
!12662 = !DILocation(line: 131, column: 53, scope: !12646)
!12663 = !DILocation(line: 131, column: 31, scope: !12646)
!12664 = !DILocation(line: 131, column: 2, scope: !12646)
!12665 = !DILocation(line: 133, column: 16, scope: !12646)
!12666 = !DILocation(line: 133, column: 22, scope: !12646)
!12667 = !DILocation(line: 133, column: 27, scope: !12646)
!12668 = !DILocation(line: 133, column: 33, scope: !12646)
!12669 = !DILocation(line: 133, column: 41, scope: !12646)
!12670 = !DILocation(line: 133, column: 52, scope: !12646)
!12671 = !DILocation(line: 133, column: 2, scope: !12646)
!12672 = !DILocation(line: 134, column: 1, scope: !12646)
!12673 = distinct !DISubprogram(name: "arena_sdalloc", scope: !9716, file: !9716, line: 379, type: !12647, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12674)
!12674 = !{!12675, !12676, !12677, !12678, !12679, !12680, !12681}
!12675 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12673, file: !9716, line: 379, type: !391)
!12676 = !DILocalVariable(name: "ptr", arg: 2, scope: !12673, file: !9716, line: 379, type: !383)
!12677 = !DILocalVariable(name: "size", arg: 3, scope: !12673, file: !9716, line: 379, type: !387)
!12678 = !DILocalVariable(name: "tcache", arg: 4, scope: !12673, file: !9716, line: 379, type: !740)
!12679 = !DILocalVariable(name: "caller_alloc_ctx", arg: 5, scope: !12673, file: !9716, line: 380, type: !5283)
!12680 = !DILocalVariable(name: "slow_path", arg: 6, scope: !12673, file: !9716, line: 380, type: !389)
!12681 = !DILocalVariable(name: "alloc_ctx", scope: !12673, file: !9716, line: 390, type: !1778)
!12682 = !DILocation(line: 379, column: 23, scope: !12673)
!12683 = !DILocation(line: 379, column: 35, scope: !12673)
!12684 = !DILocation(line: 379, column: 47, scope: !12673)
!12685 = !DILocation(line: 379, column: 63, scope: !12673)
!12686 = !DILocation(line: 380, column: 23, scope: !12673)
!12687 = !DILocation(line: 380, column: 46, scope: !12673)
!12688 = !DILocation(line: 381, column: 2, scope: !12673)
!12689 = !DILocation(line: 381, column: 2, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12673, file: !9716, line: 381, column: 2)
!12691 = !DILocation(line: 382, column: 2, scope: !12673)
!12692 = !DILocation(line: 382, column: 2, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12673, file: !9716, line: 382, column: 2)
!12694 = !DILocation(line: 383, column: 2, scope: !12673)
!12695 = !DILocation(line: 383, column: 2, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12673, file: !9716, line: 383, column: 2)
!12697 = !DILocation(line: 385, column: 6, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12673, file: !9716, line: 385, column: 6)
!12699 = !DILocation(line: 385, column: 6, scope: !12673)
!12700 = !DILocation(line: 386, column: 27, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12698, file: !9716, line: 385, column: 32)
!12702 = !DILocation(line: 386, column: 33, scope: !12701)
!12703 = !DILocation(line: 386, column: 38, scope: !12701)
!12704 = !DILocation(line: 386, column: 3, scope: !12701)
!12705 = !DILocation(line: 387, column: 3, scope: !12701)
!12706 = !DILocation(line: 390, column: 2, scope: !12673)
!12707 = !DILocation(line: 390, column: 19, scope: !12673)
!12708 = !DILocation(line: 405, column: 35, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !9716, line: 400, column: 9)
!12710 = distinct !DILexicalBlock(scope: !12673, file: !9716, line: 391, column: 6)
!12711 = !DILocation(line: 405, column: 21, scope: !12709)
!12712 = !DILocation(line: 405, column: 13, scope: !12709)
!12713 = !DILocation(line: 405, column: 19, scope: !12709)
!12714 = !DILocation(line: 406, column: 31, scope: !12709)
!12715 = !DILocation(line: 406, column: 21, scope: !12709)
!12716 = !DILocation(line: 406, column: 37, scope: !12709)
!12717 = !DILocation(line: 406, column: 13, scope: !12709)
!12718 = !DILocation(line: 406, column: 18, scope: !12709)
!12719 = !DILocation(line: 416, column: 6, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12673, file: !9716, line: 416, column: 6)
!12721 = !DILocation(line: 416, column: 6, scope: !12673)
!12722 = !DILocation(line: 418, column: 32, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12720, file: !9716, line: 416, column: 30)
!12724 = !DILocation(line: 418, column: 23, scope: !12723)
!12725 = !DILocation(line: 418, column: 39, scope: !12723)
!12726 = !DILocation(line: 418, column: 47, scope: !12723)
!12727 = !DILocation(line: 419, column: 17, scope: !12723)
!12728 = !DILocation(line: 419, column: 24, scope: !12723)
!12729 = !DILocation(line: 418, column: 3, scope: !12723)
!12730 = !DILocation(line: 420, column: 2, scope: !12723)
!12731 = !DILocation(line: 421, column: 22, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12720, file: !9716, line: 420, column: 9)
!12733 = !DILocation(line: 421, column: 28, scope: !12732)
!12734 = !DILocation(line: 421, column: 33, scope: !12732)
!12735 = !DILocation(line: 421, column: 51, scope: !12732)
!12736 = !DILocation(line: 422, column: 7, scope: !12732)
!12737 = !DILocation(line: 421, column: 3, scope: !12732)
!12738 = !DILocation(line: 424, column: 1, scope: !12673)
!12739 = distinct !DISubprogram(name: "arena_sdalloc_no_tcache", scope: !9716, file: !9716, line: 340, type: !12740, scopeLine: 340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12742)
!12740 = !DISubroutineType(types: !12741)
!12741 = !{null, !391, !383, !387}
!12742 = !{!12743, !12744, !12745, !12746}
!12743 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12739, file: !9716, line: 340, type: !391)
!12744 = !DILocalVariable(name: "ptr", arg: 2, scope: !12739, file: !9716, line: 340, type: !383)
!12745 = !DILocalVariable(name: "size", arg: 3, scope: !12739, file: !9716, line: 340, type: !387)
!12746 = !DILocalVariable(name: "alloc_ctx", scope: !12739, file: !9716, line: 344, type: !1778)
!12747 = !DILocation(line: 340, column: 33, scope: !12739)
!12748 = !DILocation(line: 340, column: 45, scope: !12739)
!12749 = !DILocation(line: 340, column: 57, scope: !12739)
!12750 = !DILocation(line: 341, column: 2, scope: !12739)
!12751 = !DILocation(line: 341, column: 2, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12739, file: !9716, line: 341, column: 2)
!12753 = !DILocation(line: 342, column: 2, scope: !12739)
!12754 = !DILocation(line: 342, column: 2, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12739, file: !9716, line: 342, column: 2)
!12756 = !DILocation(line: 344, column: 2, scope: !12739)
!12757 = !DILocation(line: 344, column: 19, scope: !12739)
!12758 = !DILocation(line: 350, column: 35, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !9716, line: 345, column: 33)
!12760 = distinct !DILexicalBlock(scope: !12739, file: !9716, line: 345, column: 6)
!12761 = !DILocation(line: 350, column: 21, scope: !12759)
!12762 = !DILocation(line: 350, column: 13, scope: !12759)
!12763 = !DILocation(line: 350, column: 19, scope: !12759)
!12764 = !DILocation(line: 351, column: 31, scope: !12759)
!12765 = !DILocation(line: 351, column: 21, scope: !12759)
!12766 = !DILocation(line: 351, column: 37, scope: !12759)
!12767 = !DILocation(line: 351, column: 13, scope: !12759)
!12768 = !DILocation(line: 351, column: 18, scope: !12759)
!12769 = !DILocation(line: 370, column: 6, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12739, file: !9716, line: 370, column: 6)
!12771 = !DILocation(line: 370, column: 6, scope: !12739)
!12772 = !DILocation(line: 372, column: 22, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12770, file: !9716, line: 370, column: 30)
!12774 = !DILocation(line: 372, column: 28, scope: !12773)
!12775 = !DILocation(line: 372, column: 3, scope: !12773)
!12776 = !DILocation(line: 373, column: 2, scope: !12773)
!12777 = !DILocation(line: 374, column: 32, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12770, file: !9716, line: 373, column: 9)
!12779 = !DILocation(line: 374, column: 38, scope: !12778)
!12780 = !DILocation(line: 374, column: 53, scope: !12778)
!12781 = !DILocation(line: 374, column: 3, scope: !12778)
!12782 = !DILocation(line: 376, column: 1, scope: !12739)
!12783 = !DISubprogram(name: "safety_check_fail", scope: !12784, file: !12784, line: 6, type: !7325, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12784 = !DIFile(filename: "include/jemalloc/internal/safety_check.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "3afdb08303443a029be5a8d5f131ee80")
!12785 = distinct !DISubprogram(name: "tsdn_rtree_ctx", scope: !145, file: !145, line: 474, type: !12786, scopeLine: 474, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12788)
!12786 = !DISubroutineType(types: !12787)
!12787 = !{!5262, !391, !5262}
!12788 = !{!12789, !12790}
!12789 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12785, file: !145, line: 474, type: !391)
!12790 = !DILocalVariable(name: "fallback", arg: 2, scope: !12785, file: !145, line: 474, type: !5262)
!12791 = !DILocation(line: 474, column: 24, scope: !12785)
!12792 = !DILocation(line: 474, column: 43, scope: !12785)
!12793 = !DILocation(line: 479, column: 6, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12785, file: !145, line: 479, column: 6)
!12795 = !DILocation(line: 479, column: 6, scope: !12785)
!12796 = !DILocation(line: 480, column: 23, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12794, file: !145, line: 479, column: 33)
!12798 = !DILocation(line: 480, column: 3, scope: !12797)
!12799 = !DILocation(line: 481, column: 10, scope: !12797)
!12800 = !DILocation(line: 481, column: 3, scope: !12797)
!12801 = !DILocation(line: 483, column: 32, scope: !12785)
!12802 = !DILocation(line: 483, column: 23, scope: !12785)
!12803 = !DILocation(line: 483, column: 9, scope: !12785)
!12804 = !DILocation(line: 483, column: 2, scope: !12785)
!12805 = !DILocation(line: 484, column: 1, scope: !12785)
!12806 = distinct !DISubprogram(name: "rtree_read", scope: !1077, file: !1077, line: 432, type: !12807, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12809)
!12807 = !DISubroutineType(types: !12808)
!12808 = !{!12220, !391, !12123, !5262, !384}
!12809 = !{!12810, !12811, !12812, !12813, !12814}
!12810 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12806, file: !1077, line: 432, type: !391)
!12811 = !DILocalVariable(name: "rtree", arg: 2, scope: !12806, file: !1077, line: 432, type: !12123)
!12812 = !DILocalVariable(name: "rtree_ctx", arg: 3, scope: !12806, file: !1077, line: 432, type: !5262)
!12813 = !DILocalVariable(name: "key", arg: 4, scope: !12806, file: !1077, line: 433, type: !384)
!12814 = !DILocalVariable(name: "elm", scope: !12806, file: !1077, line: 434, type: !1381)
!12815 = !DILocation(line: 432, column: 20, scope: !12806)
!12816 = !DILocation(line: 432, column: 35, scope: !12806)
!12817 = !DILocation(line: 432, column: 55, scope: !12806)
!12818 = !DILocation(line: 433, column: 15, scope: !12806)
!12819 = !DILocation(line: 434, column: 2, scope: !12806)
!12820 = !DILocation(line: 434, column: 20, scope: !12806)
!12821 = !DILocation(line: 434, column: 48, scope: !12806)
!12822 = !DILocation(line: 434, column: 54, scope: !12806)
!12823 = !DILocation(line: 434, column: 61, scope: !12806)
!12824 = !DILocation(line: 435, column: 6, scope: !12806)
!12825 = !DILocation(line: 434, column: 26, scope: !12806)
!12826 = !DILocation(line: 436, column: 2, scope: !12806)
!12827 = !DILocation(line: 436, column: 2, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12806, file: !1077, line: 436, column: 2)
!12829 = !DILocation(line: 437, column: 29, scope: !12806)
!12830 = !DILocation(line: 437, column: 35, scope: !12806)
!12831 = !DILocation(line: 437, column: 42, scope: !12806)
!12832 = !DILocation(line: 437, column: 9, scope: !12806)
!12833 = !DILocation(line: 438, column: 1, scope: !12806)
!12834 = !DISubprogram(name: "rtree_ctx_data_init", scope: !1371, file: !1371, line: 60, type: !12835, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12835 = !DISubroutineType(types: !12836)
!12836 = !{null, !5262}
!12837 = distinct !DISubprogram(name: "tsd_rtree_ctx", scope: !145, file: !145, line: 469, type: !12115, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12838)
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "tsd", arg: 1, scope: !12837, file: !145, line: 469, type: !1347)
!12840 = !DILocation(line: 469, column: 22, scope: !12837)
!12841 = !DILocation(line: 470, column: 28, scope: !12837)
!12842 = !DILocation(line: 470, column: 9, scope: !12837)
!12843 = !DILocation(line: 470, column: 2, scope: !12837)
!12844 = distinct !DISubprogram(name: "tsd_rtree_ctxp_get", scope: !145, file: !145, line: 344, type: !12115, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12845)
!12845 = !{!12846, !12847}
!12846 = !DILocalVariable(name: "tsd", arg: 1, scope: !12844, file: !145, line: 344, type: !1347)
!12847 = !DILocalVariable(name: "state", scope: !12844, file: !145, line: 344, type: !730)
!12848 = !DILocation(line: 344, column: 1, scope: !12844)
!12849 = !DILocation(line: 344, column: 1, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12844, file: !145, line: 344, column: 1)
!12851 = distinct !DISubprogram(name: "rtree_leaf_elm_lookup", scope: !1077, file: !1077, line: 357, type: !12852, scopeLine: 358, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12854)
!12852 = !DISubroutineType(types: !12853)
!12853 = !{!1381, !391, !12123, !5262, !384, !389, !389}
!12854 = !{!12855, !12856, !12857, !12858, !12859, !12860, !12861, !12862, !12863, !12866, !12867, !12871, !12872, !12874, !12880}
!12855 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12851, file: !1077, line: 357, type: !391)
!12856 = !DILocalVariable(name: "rtree", arg: 2, scope: !12851, file: !1077, line: 357, type: !12123)
!12857 = !DILocalVariable(name: "rtree_ctx", arg: 3, scope: !12851, file: !1077, line: 357, type: !5262)
!12858 = !DILocalVariable(name: "key", arg: 4, scope: !12851, file: !1077, line: 358, type: !384)
!12859 = !DILocalVariable(name: "dependent", arg: 5, scope: !12851, file: !1077, line: 358, type: !389)
!12860 = !DILocalVariable(name: "init_missing", arg: 6, scope: !12851, file: !1077, line: 358, type: !389)
!12861 = !DILocalVariable(name: "slot", scope: !12851, file: !1077, line: 362, type: !387)
!12862 = !DILocalVariable(name: "leafkey", scope: !12851, file: !1077, line: 363, type: !384)
!12863 = !DILocalVariable(name: "leaf", scope: !12864, file: !1077, line: 368, type: !1381)
!12864 = distinct !DILexicalBlock(scope: !12865, file: !1077, line: 367, column: 57)
!12865 = distinct !DILexicalBlock(scope: !12851, file: !1077, line: 367, column: 6)
!12866 = !DILocalVariable(name: "subkey", scope: !12864, file: !1077, line: 370, type: !384)
!12867 = !DILocalVariable(name: "leaf", scope: !12868, file: !1077, line: 404, type: !1381)
!12868 = distinct !DILexicalBlock(scope: !12869, file: !1077, line: 404, column: 2)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !1077, line: 404, column: 2)
!12870 = distinct !DILexicalBlock(scope: !12851, file: !1077, line: 404, column: 2)
!12871 = !DILocalVariable(name: "subkey", scope: !12868, file: !1077, line: 404, type: !384)
!12872 = !DILocalVariable(name: "i", scope: !12873, file: !1077, line: 406, type: !7)
!12873 = distinct !DILexicalBlock(scope: !12851, file: !1077, line: 406, column: 2)
!12874 = !DILocalVariable(name: "leaf", scope: !12875, file: !1077, line: 407, type: !1381)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !1077, line: 407, column: 3)
!12876 = distinct !DILexicalBlock(scope: !12877, file: !1077, line: 407, column: 3)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !1077, line: 407, column: 3)
!12878 = distinct !DILexicalBlock(scope: !12879, file: !1077, line: 406, column: 53)
!12879 = distinct !DILexicalBlock(scope: !12873, file: !1077, line: 406, column: 2)
!12880 = !DILocalVariable(name: "subkey", scope: !12875, file: !1077, line: 407, type: !384)
!12881 = !DILocation(line: 357, column: 31, scope: !12851)
!12882 = !DILocation(line: 357, column: 46, scope: !12851)
!12883 = !DILocation(line: 357, column: 66, scope: !12851)
!12884 = !DILocation(line: 358, column: 15, scope: !12851)
!12885 = !DILocation(line: 358, column: 25, scope: !12851)
!12886 = !DILocation(line: 358, column: 41, scope: !12851)
!12887 = !DILocation(line: 359, column: 2, scope: !12851)
!12888 = !DILocation(line: 359, column: 2, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12851, file: !1077, line: 359, column: 2)
!12890 = !DILocation(line: 360, column: 2, scope: !12851)
!12891 = !DILocation(line: 360, column: 2, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12851, file: !1077, line: 360, column: 2)
!12893 = !DILocation(line: 362, column: 2, scope: !12851)
!12894 = !DILocation(line: 362, column: 9, scope: !12851)
!12895 = !DILocation(line: 362, column: 39, scope: !12851)
!12896 = !DILocation(line: 362, column: 16, scope: !12851)
!12897 = !DILocation(line: 363, column: 2, scope: !12851)
!12898 = !DILocation(line: 363, column: 12, scope: !12851)
!12899 = !DILocation(line: 363, column: 36, scope: !12851)
!12900 = !DILocation(line: 363, column: 22, scope: !12851)
!12901 = !DILocation(line: 364, column: 2, scope: !12851)
!12902 = !DILocation(line: 364, column: 2, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12851, file: !1077, line: 364, column: 2)
!12904 = !DILocation(line: 367, column: 6, scope: !12865)
!12905 = !DILocation(line: 367, column: 6, scope: !12851)
!12906 = !DILocation(line: 368, column: 3, scope: !12864)
!12907 = !DILocation(line: 368, column: 21, scope: !12864)
!12908 = !DILocation(line: 368, column: 28, scope: !12864)
!12909 = !DILocation(line: 368, column: 39, scope: !12864)
!12910 = !DILocation(line: 368, column: 45, scope: !12864)
!12911 = !DILocation(line: 368, column: 51, scope: !12864)
!12912 = !DILocation(line: 369, column: 3, scope: !12864)
!12913 = !DILocation(line: 369, column: 3, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12864, file: !1077, line: 369, column: 3)
!12915 = !DILocation(line: 370, column: 3, scope: !12864)
!12916 = !DILocation(line: 370, column: 13, scope: !12864)
!12917 = !DILocation(line: 370, column: 35, scope: !12864)
!12918 = !DILocation(line: 370, column: 22, scope: !12864)
!12919 = !DILocation(line: 371, column: 11, scope: !12864)
!12920 = !DILocation(line: 371, column: 16, scope: !12864)
!12921 = !DILocation(line: 371, column: 3, scope: !12864)
!12922 = !DILocation(line: 372, column: 2, scope: !12865)
!12923 = !DILocation(line: 404, column: 2, scope: !12851)
!12924 = !DILocation(line: 404, column: 2, scope: !12869)
!12925 = !DILocation(line: 404, column: 2, scope: !12870)
!12926 = !DILocation(line: 404, column: 2, scope: !12868)
!12927 = !DILocation(line: 404, column: 2, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12868, file: !1077, line: 404, column: 2)
!12929 = !DILocation(line: 404, column: 2, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12931, file: !1077, line: 404, column: 2)
!12931 = distinct !DILexicalBlock(scope: !12868, file: !1077, line: 404, column: 2)
!12932 = !DILocation(line: 406, column: 7, scope: !12873)
!12933 = !DILocation(line: 406, column: 16, scope: !12873)
!12934 = !DILocation(line: 406, column: 23, scope: !12879)
!12935 = !DILocation(line: 406, column: 25, scope: !12879)
!12936 = !DILocation(line: 406, column: 2, scope: !12873)
!12937 = !DILocation(line: 407, column: 3, scope: !12878)
!12938 = !DILocation(line: 407, column: 3, scope: !12876)
!12939 = !DILocation(line: 407, column: 3, scope: !12877)
!12940 = !DILocation(line: 407, column: 3, scope: !12875)
!12941 = !DILocation(line: 407, column: 3, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12875, file: !1077, line: 407, column: 3)
!12943 = !DILocation(line: 407, column: 3, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12875, file: !1077, line: 407, column: 3)
!12945 = !DILocation(line: 407, column: 3, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12944, file: !1077, line: 407, column: 3)
!12947 = !DILocation(line: 407, column: 3, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12944, file: !1077, line: 407, column: 3)
!12949 = !DILocation(line: 408, column: 2, scope: !12878)
!12950 = !DILocation(line: 406, column: 49, scope: !12879)
!12951 = !DILocation(line: 406, column: 2, scope: !12879)
!12952 = distinct !{!12952, !12936, !12953, !3182}
!12953 = !DILocation(line: 408, column: 2, scope: !12873)
!12954 = !DILocation(line: 411, column: 36, scope: !12851)
!12955 = !DILocation(line: 411, column: 42, scope: !12851)
!12956 = !DILocation(line: 411, column: 49, scope: !12851)
!12957 = !DILocation(line: 411, column: 60, scope: !12851)
!12958 = !DILocation(line: 412, column: 6, scope: !12851)
!12959 = !DILocation(line: 412, column: 17, scope: !12851)
!12960 = !DILocation(line: 411, column: 9, scope: !12851)
!12961 = !DILocation(line: 411, column: 2, scope: !12851)
!12962 = !DILocation(line: 413, column: 1, scope: !12851)
!12963 = !DISubprogram(name: "rtree_leaf_elm_lookup_hard", scope: !1077, file: !1077, line: 134, type: !12852, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12964 = distinct !DISubprogram(name: "rtree_metadata_read", scope: !1077, file: !1077, line: 441, type: !12965, scopeLine: 442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12967)
!12965 = !DISubroutineType(types: !12966)
!12966 = !{!5292, !391, !12123, !5262, !384}
!12967 = !{!12968, !12969, !12970, !12971, !12972}
!12968 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12964, file: !1077, line: 441, type: !391)
!12969 = !DILocalVariable(name: "rtree", arg: 2, scope: !12964, file: !1077, line: 441, type: !12123)
!12970 = !DILocalVariable(name: "rtree_ctx", arg: 3, scope: !12964, file: !1077, line: 441, type: !5262)
!12971 = !DILocalVariable(name: "key", arg: 4, scope: !12964, file: !1077, line: 442, type: !384)
!12972 = !DILocalVariable(name: "elm", scope: !12964, file: !1077, line: 443, type: !1381)
!12973 = !DILocation(line: 441, column: 29, scope: !12964)
!12974 = !DILocation(line: 441, column: 44, scope: !12964)
!12975 = !DILocation(line: 441, column: 64, scope: !12964)
!12976 = !DILocation(line: 442, column: 15, scope: !12964)
!12977 = !DILocation(line: 443, column: 2, scope: !12964)
!12978 = !DILocation(line: 443, column: 20, scope: !12964)
!12979 = !DILocation(line: 443, column: 48, scope: !12964)
!12980 = !DILocation(line: 443, column: 54, scope: !12964)
!12981 = !DILocation(line: 443, column: 61, scope: !12964)
!12982 = !DILocation(line: 444, column: 6, scope: !12964)
!12983 = !DILocation(line: 443, column: 26, scope: !12964)
!12984 = !DILocation(line: 445, column: 2, scope: !12964)
!12985 = !DILocation(line: 445, column: 2, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12964, file: !1077, line: 445, column: 2)
!12987 = !DILocation(line: 446, column: 29, scope: !12964)
!12988 = !DILocation(line: 446, column: 35, scope: !12964)
!12989 = !DILocation(line: 446, column: 42, scope: !12964)
!12990 = !DILocation(line: 446, column: 9, scope: !12964)
!12991 = !DILocation(line: 447, column: 28, scope: !12964)
!12992 = !DILocation(line: 448, column: 1, scope: !12964)
!12993 = distinct !DISubprogram(name: "ixalloc", scope: !2572, file: !2572, line: 206, type: !12994, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12996)
!12994 = !DISubroutineType(types: !12995)
!12995 = !{!389, !391, !383, !387, !387, !387, !387, !389, !556}
!12996 = !{!12997, !12998, !12999, !13000, !13001, !13002, !13003, !13004}
!12997 = !DILocalVariable(name: "tsdn", arg: 1, scope: !12993, file: !2572, line: 206, type: !391)
!12998 = !DILocalVariable(name: "ptr", arg: 2, scope: !12993, file: !2572, line: 206, type: !383)
!12999 = !DILocalVariable(name: "oldsize", arg: 3, scope: !12993, file: !2572, line: 206, type: !387)
!13000 = !DILocalVariable(name: "size", arg: 4, scope: !12993, file: !2572, line: 206, type: !387)
!13001 = !DILocalVariable(name: "extra", arg: 5, scope: !12993, file: !2572, line: 206, type: !387)
!13002 = !DILocalVariable(name: "alignment", arg: 6, scope: !12993, file: !2572, line: 207, type: !387)
!13003 = !DILocalVariable(name: "zero", arg: 7, scope: !12993, file: !2572, line: 207, type: !389)
!13004 = !DILocalVariable(name: "newsize", arg: 8, scope: !12993, file: !2572, line: 207, type: !556)
!13005 = !DILocation(line: 206, column: 17, scope: !12993)
!13006 = !DILocation(line: 206, column: 29, scope: !12993)
!13007 = !DILocation(line: 206, column: 41, scope: !12993)
!13008 = !DILocation(line: 206, column: 57, scope: !12993)
!13009 = !DILocation(line: 206, column: 70, scope: !12993)
!13010 = !DILocation(line: 207, column: 12, scope: !12993)
!13011 = !DILocation(line: 207, column: 28, scope: !12993)
!13012 = !DILocation(line: 207, column: 42, scope: !12993)
!13013 = !DILocation(line: 208, column: 2, scope: !12993)
!13014 = !DILocation(line: 208, column: 2, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12993, file: !2572, line: 208, column: 2)
!13016 = !DILocation(line: 209, column: 2, scope: !12993)
!13017 = !DILocation(line: 209, column: 2, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !12993, file: !2572, line: 209, column: 2)
!13019 = !DILocation(line: 210, column: 53, scope: !12993)
!13020 = !DILocation(line: 210, column: 31, scope: !12993)
!13021 = !DILocation(line: 210, column: 2, scope: !12993)
!13022 = !DILocation(line: 213, column: 6, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !12993, file: !2572, line: 213, column: 6)
!13024 = !DILocation(line: 213, column: 16, scope: !13023)
!13025 = !DILocation(line: 213, column: 21, scope: !13023)
!13026 = !DILocation(line: 213, column: 36, scope: !13023)
!13027 = !DILocation(line: 213, column: 25, scope: !13023)
!13028 = !DILocation(line: 213, column: 54, scope: !13023)
!13029 = !DILocation(line: 213, column: 63, scope: !13023)
!13030 = !DILocation(line: 213, column: 40, scope: !13023)
!13031 = !DILocation(line: 214, column: 6, scope: !13023)
!13032 = !DILocation(line: 213, column: 6, scope: !12993)
!13033 = !DILocation(line: 216, column: 14, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13023, file: !2572, line: 214, column: 12)
!13035 = !DILocation(line: 216, column: 4, scope: !13034)
!13036 = !DILocation(line: 216, column: 12, scope: !13034)
!13037 = !DILocation(line: 217, column: 3, scope: !13034)
!13038 = !DILocation(line: 220, column: 30, scope: !12993)
!13039 = !DILocation(line: 220, column: 36, scope: !12993)
!13040 = !DILocation(line: 220, column: 41, scope: !12993)
!13041 = !DILocation(line: 220, column: 50, scope: !12993)
!13042 = !DILocation(line: 220, column: 56, scope: !12993)
!13043 = !DILocation(line: 220, column: 63, scope: !12993)
!13044 = !DILocation(line: 221, column: 6, scope: !12993)
!13045 = !DILocation(line: 220, column: 9, scope: !12993)
!13046 = !DILocation(line: 220, column: 2, scope: !12993)
!13047 = !DILocation(line: 222, column: 1, scope: !12993)
!13048 = !DISubprogram(name: "arena_ralloc_no_move", scope: !3073, file: !3073, line: 81, type: !13049, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13049 = !DISubroutineType(types: !13050)
!13050 = !{!389, !391, !383, !387, !387, !387, !389, !556}
!13051 = distinct !DISubprogram(name: "te_event_advance", scope: !5374, file: !5374, line: 274, type: !13052, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{null, !1347, !387, !389}
!13054 = !{!13055, !13056, !13057, !13058, !13067}
!13055 = !DILocalVariable(name: "tsd", arg: 1, scope: !13051, file: !5374, line: 274, type: !1347)
!13056 = !DILocalVariable(name: "usize", arg: 2, scope: !13051, file: !5374, line: 274, type: !387)
!13057 = !DILocalVariable(name: "is_alloc", arg: 3, scope: !13051, file: !5374, line: 274, type: !389)
!13058 = !DILocalVariable(name: "ctx", scope: !13051, file: !5374, line: 277, type: !13059)
!13059 = !DIDerivedType(tag: DW_TAG_typedef, name: "te_ctx_t", file: !5374, line: 44, baseType: !13060)
!13060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "te_ctx_s", file: !5374, line: 38, size: 320, elements: !13061)
!13061 = !{!13062, !13063, !13064, !13065, !13066}
!13062 = !DIDerivedType(tag: DW_TAG_member, name: "is_alloc", scope: !13060, file: !5374, line: 39, baseType: !389, size: 8)
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !13060, file: !5374, line: 40, baseType: !11802, size: 64, offset: 64)
!13064 = !DIDerivedType(tag: DW_TAG_member, name: "last_event", scope: !13060, file: !5374, line: 41, baseType: !11802, size: 64, offset: 128)
!13065 = !DIDerivedType(tag: DW_TAG_member, name: "next_event", scope: !13060, file: !5374, line: 42, baseType: !11802, size: 64, offset: 192)
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "next_event_fast", scope: !13060, file: !5374, line: 43, baseType: !11802, size: 64, offset: 256)
!13067 = !DILocalVariable(name: "bytes_before", scope: !13051, file: !5374, line: 280, type: !408)
!13068 = !DILocation(line: 274, column: 25, scope: !13051)
!13069 = !DILocation(line: 274, column: 37, scope: !13051)
!13070 = !DILocation(line: 274, column: 49, scope: !13051)
!13071 = !DILocation(line: 275, column: 23, scope: !13051)
!13072 = !DILocation(line: 275, column: 2, scope: !13051)
!13073 = !DILocation(line: 277, column: 2, scope: !13051)
!13074 = !DILocation(line: 277, column: 11, scope: !13051)
!13075 = !DILocation(line: 278, column: 13, scope: !13051)
!13076 = !DILocation(line: 278, column: 24, scope: !13051)
!13077 = !DILocation(line: 278, column: 2, scope: !13051)
!13078 = !DILocation(line: 280, column: 2, scope: !13051)
!13079 = !DILocation(line: 280, column: 11, scope: !13051)
!13080 = !DILocation(line: 280, column: 26, scope: !13051)
!13081 = !DILocation(line: 281, column: 33, scope: !13051)
!13082 = !DILocation(line: 281, column: 48, scope: !13051)
!13083 = !DILocation(line: 281, column: 46, scope: !13051)
!13084 = !DILocation(line: 281, column: 2, scope: !13051)
!13085 = !DILocation(line: 284, column: 6, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13051, file: !5374, line: 284, column: 6)
!13087 = !DILocation(line: 284, column: 6, scope: !13051)
!13088 = !DILocation(line: 285, column: 24, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13086, file: !5374, line: 284, column: 66)
!13090 = !DILocation(line: 285, column: 3, scope: !13089)
!13091 = !DILocation(line: 286, column: 2, scope: !13089)
!13092 = !DILocation(line: 287, column: 20, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13086, file: !5374, line: 286, column: 9)
!13094 = !DILocation(line: 287, column: 3, scope: !13093)
!13095 = !DILocation(line: 289, column: 1, scope: !13051)
!13096 = distinct !DISubprogram(name: "te_assert_invariants", scope: !5374, file: !5374, line: 198, type: !3590, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13097)
!13097 = !{!13098}
!13098 = !DILocalVariable(name: "tsd", arg: 1, scope: !13096, file: !5374, line: 198, type: !1347)
!13099 = !DILocation(line: 198, column: 29, scope: !13096)
!13100 = !DILocation(line: 202, column: 1, scope: !13096)
!13101 = distinct !DISubprogram(name: "te_ctx_get", scope: !5374, file: !5374, line: 205, type: !13102, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13105)
!13102 = !DISubroutineType(types: !13103)
!13103 = !{null, !1347, !13104, !389}
!13104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13059, size: 64)
!13105 = !{!13106, !13107, !13108}
!13106 = !DILocalVariable(name: "tsd", arg: 1, scope: !13101, file: !5374, line: 205, type: !1347)
!13107 = !DILocalVariable(name: "ctx", arg: 2, scope: !13101, file: !5374, line: 205, type: !13104)
!13108 = !DILocalVariable(name: "is_alloc", arg: 3, scope: !13101, file: !5374, line: 205, type: !389)
!13109 = !DILocation(line: 205, column: 19, scope: !13101)
!13110 = !DILocation(line: 205, column: 34, scope: !13101)
!13111 = !DILocation(line: 205, column: 44, scope: !13101)
!13112 = !DILocation(line: 206, column: 18, scope: !13101)
!13113 = !DILocation(line: 206, column: 2, scope: !13101)
!13114 = !DILocation(line: 206, column: 7, scope: !13101)
!13115 = !DILocation(line: 206, column: 16, scope: !13101)
!13116 = !{!13117, !2696, i64 0}
!13117 = !{!"te_ctx_s", !2696, i64 0, !2659, i64 8, !2659, i64 16, !2659, i64 24, !2659, i64 32}
!13118 = !DILocation(line: 207, column: 6, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13101, file: !5374, line: 207, column: 6)
!13120 = !DILocation(line: 207, column: 6, scope: !13101)
!13121 = !DILocation(line: 208, column: 44, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13119, file: !5374, line: 207, column: 16)
!13123 = !DILocation(line: 208, column: 18, scope: !13122)
!13124 = !DILocation(line: 208, column: 3, scope: !13122)
!13125 = !DILocation(line: 208, column: 8, scope: !13122)
!13126 = !DILocation(line: 208, column: 16, scope: !13122)
!13127 = !{!13117, !2659, i64 8}
!13128 = !DILocation(line: 209, column: 58, scope: !13122)
!13129 = !DILocation(line: 209, column: 21, scope: !13122)
!13130 = !DILocation(line: 209, column: 3, scope: !13122)
!13131 = !DILocation(line: 209, column: 8, scope: !13122)
!13132 = !DILocation(line: 209, column: 19, scope: !13122)
!13133 = !{!13117, !2659, i64 16}
!13134 = !DILocation(line: 210, column: 58, scope: !13122)
!13135 = !DILocation(line: 210, column: 21, scope: !13122)
!13136 = !DILocation(line: 210, column: 3, scope: !13122)
!13137 = !DILocation(line: 210, column: 8, scope: !13122)
!13138 = !DILocation(line: 210, column: 19, scope: !13122)
!13139 = !{!13117, !2659, i64 24}
!13140 = !DILocation(line: 212, column: 49, scope: !13122)
!13141 = !DILocation(line: 212, column: 7, scope: !13122)
!13142 = !DILocation(line: 211, column: 3, scope: !13122)
!13143 = !DILocation(line: 211, column: 8, scope: !13122)
!13144 = !DILocation(line: 211, column: 24, scope: !13122)
!13145 = !{!13117, !2659, i64 32}
!13146 = !DILocation(line: 213, column: 2, scope: !13122)
!13147 = !DILocation(line: 214, column: 46, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13119, file: !5374, line: 213, column: 9)
!13149 = !DILocation(line: 214, column: 18, scope: !13148)
!13150 = !DILocation(line: 214, column: 3, scope: !13148)
!13151 = !DILocation(line: 214, column: 8, scope: !13148)
!13152 = !DILocation(line: 214, column: 16, scope: !13148)
!13153 = !DILocation(line: 215, column: 60, scope: !13148)
!13154 = !DILocation(line: 215, column: 21, scope: !13148)
!13155 = !DILocation(line: 215, column: 3, scope: !13148)
!13156 = !DILocation(line: 215, column: 8, scope: !13148)
!13157 = !DILocation(line: 215, column: 19, scope: !13148)
!13158 = !DILocation(line: 216, column: 60, scope: !13148)
!13159 = !DILocation(line: 216, column: 21, scope: !13148)
!13160 = !DILocation(line: 216, column: 3, scope: !13148)
!13161 = !DILocation(line: 216, column: 8, scope: !13148)
!13162 = !DILocation(line: 216, column: 19, scope: !13148)
!13163 = !DILocation(line: 218, column: 51, scope: !13148)
!13164 = !DILocation(line: 218, column: 7, scope: !13148)
!13165 = !DILocation(line: 217, column: 3, scope: !13148)
!13166 = !DILocation(line: 217, column: 8, scope: !13148)
!13167 = !DILocation(line: 217, column: 24, scope: !13148)
!13168 = !DILocation(line: 220, column: 1, scope: !13101)
!13169 = distinct !DISubprogram(name: "te_ctx_current_bytes_get", scope: !5374, file: !5374, line: 134, type: !13170, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13172)
!13170 = !DISubroutineType(types: !13171)
!13171 = !{!408, !13104}
!13172 = !{!13173}
!13173 = !DILocalVariable(name: "ctx", arg: 1, scope: !13169, file: !5374, line: 134, type: !13104)
!13174 = !DILocation(line: 134, column: 36, scope: !13169)
!13175 = !DILocation(line: 135, column: 10, scope: !13169)
!13176 = !DILocation(line: 135, column: 15, scope: !13169)
!13177 = !DILocation(line: 135, column: 9, scope: !13169)
!13178 = !DILocation(line: 135, column: 2, scope: !13169)
!13179 = distinct !DISubprogram(name: "te_ctx_current_bytes_set", scope: !5374, file: !5374, line: 139, type: !13180, scopeLine: 139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13182)
!13180 = !DISubroutineType(types: !13181)
!13181 = !{null, !13104, !408}
!13182 = !{!13183, !13184}
!13183 = !DILocalVariable(name: "ctx", arg: 1, scope: !13179, file: !5374, line: 139, type: !13104)
!13184 = !DILocalVariable(name: "v", arg: 2, scope: !13179, file: !5374, line: 139, type: !408)
!13185 = !DILocation(line: 139, column: 36, scope: !13179)
!13186 = !DILocation(line: 139, column: 50, scope: !13179)
!13187 = !DILocation(line: 140, column: 18, scope: !13179)
!13188 = !DILocation(line: 140, column: 3, scope: !13179)
!13189 = !DILocation(line: 140, column: 8, scope: !13179)
!13190 = !DILocation(line: 140, column: 16, scope: !13179)
!13191 = !DILocation(line: 141, column: 1, scope: !13179)
!13192 = distinct !DISubprogram(name: "te_ctx_next_event_get", scope: !5374, file: !5374, line: 179, type: !13170, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13193)
!13193 = !{!13194}
!13194 = !DILocalVariable(name: "ctx", arg: 1, scope: !13192, file: !5374, line: 179, type: !13104)
!13195 = !DILocation(line: 179, column: 33, scope: !13192)
!13196 = !DILocation(line: 180, column: 10, scope: !13192)
!13197 = !DILocation(line: 180, column: 15, scope: !13192)
!13198 = !DILocation(line: 180, column: 9, scope: !13192)
!13199 = !DILocation(line: 180, column: 2, scope: !13192)
!13200 = !DISubprogram(name: "te_event_trigger", scope: !5374, file: !5374, line: 47, type: !13201, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13201 = !DISubroutineType(types: !13202)
!13202 = !{null, !1347, !13104}
!13203 = distinct !DISubprogram(name: "tsd_thread_allocated_last_eventp_get", scope: !145, file: !145, line: 344, type: !11861, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13204)
!13204 = !{!13205, !13206}
!13205 = !DILocalVariable(name: "tsd", arg: 1, scope: !13203, file: !145, line: 344, type: !1347)
!13206 = !DILocalVariable(name: "state", scope: !13203, file: !145, line: 344, type: !730)
!13207 = !DILocation(line: 344, column: 1, scope: !13203)
!13208 = !DILocation(line: 344, column: 1, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13203, file: !145, line: 344, column: 1)
!13210 = distinct !DISubprogram(name: "tsd_thread_allocated_next_eventp_get", scope: !145, file: !145, line: 344, type: !11861, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13211)
!13211 = !{!13212, !13213}
!13212 = !DILocalVariable(name: "tsd", arg: 1, scope: !13210, file: !145, line: 344, type: !1347)
!13213 = !DILocalVariable(name: "state", scope: !13210, file: !145, line: 344, type: !730)
!13214 = !DILocation(line: 344, column: 1, scope: !13210)
!13215 = !DILocation(line: 344, column: 1, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13210, file: !145, line: 344, column: 1)
!13217 = distinct !DISubprogram(name: "tsd_thread_allocated_next_event_fastp_get", scope: !145, file: !145, line: 345, type: !11861, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13218)
!13218 = !{!13219, !13220}
!13219 = !DILocalVariable(name: "tsd", arg: 1, scope: !13217, file: !145, line: 345, type: !1347)
!13220 = !DILocalVariable(name: "state", scope: !13217, file: !145, line: 345, type: !730)
!13221 = !DILocation(line: 345, column: 1, scope: !13217)
!13222 = !DILocation(line: 345, column: 1, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13217, file: !145, line: 345, column: 1)
!13224 = distinct !DISubprogram(name: "tsd_thread_deallocated_last_eventp_get", scope: !145, file: !145, line: 344, type: !11861, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13225)
!13225 = !{!13226, !13227}
!13226 = !DILocalVariable(name: "tsd", arg: 1, scope: !13224, file: !145, line: 344, type: !1347)
!13227 = !DILocalVariable(name: "state", scope: !13224, file: !145, line: 344, type: !730)
!13228 = !DILocation(line: 344, column: 1, scope: !13224)
!13229 = !DILocation(line: 344, column: 1, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13224, file: !145, line: 344, column: 1)
!13231 = distinct !DISubprogram(name: "tsd_thread_deallocated_next_eventp_get", scope: !145, file: !145, line: 344, type: !11861, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13232)
!13232 = !{!13233, !13234}
!13233 = !DILocalVariable(name: "tsd", arg: 1, scope: !13231, file: !145, line: 344, type: !1347)
!13234 = !DILocalVariable(name: "state", scope: !13231, file: !145, line: 344, type: !730)
!13235 = !DILocation(line: 344, column: 1, scope: !13231)
!13236 = !DILocation(line: 344, column: 1, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13231, file: !145, line: 344, column: 1)
!13238 = distinct !DISubprogram(name: "tsd_thread_deallocated_next_event_fastp_get", scope: !145, file: !145, line: 345, type: !11861, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13239)
!13239 = !{!13240, !13241}
!13240 = !DILocalVariable(name: "tsd", arg: 1, scope: !13238, file: !145, line: 345, type: !1347)
!13241 = !DILocalVariable(name: "state", scope: !13238, file: !145, line: 345, type: !730)
!13242 = !DILocation(line: 345, column: 1, scope: !13238)
!13243 = !DILocation(line: 345, column: 1, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13238, file: !145, line: 345, column: 1)
!13245 = distinct !DISubprogram(name: "tsd_thread_allocated_last_eventp_get_unsafe", scope: !145, file: !145, line: 323, type: !11861, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13246)
!13246 = !{!13247}
!13247 = !DILocalVariable(name: "tsd", arg: 1, scope: !13245, file: !145, line: 323, type: !1347)
!13248 = !DILocation(line: 323, column: 1, scope: !13245)
!13249 = distinct !DISubprogram(name: "tsd_thread_allocated_next_eventp_get_unsafe", scope: !145, file: !145, line: 323, type: !11861, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13250)
!13250 = !{!13251}
!13251 = !DILocalVariable(name: "tsd", arg: 1, scope: !13249, file: !145, line: 323, type: !1347)
!13252 = !DILocation(line: 323, column: 1, scope: !13249)
!13253 = distinct !DISubprogram(name: "tsd_thread_deallocated_last_eventp_get_unsafe", scope: !145, file: !145, line: 323, type: !11861, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13254)
!13254 = !{!13255}
!13255 = !DILocalVariable(name: "tsd", arg: 1, scope: !13253, file: !145, line: 323, type: !1347)
!13256 = !DILocation(line: 323, column: 1, scope: !13253)
!13257 = distinct !DISubprogram(name: "tsd_thread_deallocated_next_eventp_get_unsafe", scope: !145, file: !145, line: 323, type: !11861, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13258)
!13258 = !{!13259}
!13259 = !DILocalVariable(name: "tsd", arg: 1, scope: !13257, file: !145, line: 323, type: !1347)
!13260 = !DILocation(line: 323, column: 1, scope: !13257)
!13261 = distinct !DISubprogram(name: "tsd_booted_get", scope: !11327, file: !11327, line: 33, type: !5818, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!13262 = !DILocation(line: 34, column: 9, scope: !13261)
!13263 = !DILocation(line: 34, column: 2, scope: !13261)
!13264 = distinct !DISubprogram(name: "arena_salloc", scope: !9716, file: !9716, line: 173, type: !5446, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13265)
!13265 = !{!13266, !13267, !13268}
!13266 = !DILocalVariable(name: "tsdn", arg: 1, scope: !13264, file: !9716, line: 173, type: !391)
!13267 = !DILocalVariable(name: "ptr", arg: 2, scope: !13264, file: !9716, line: 173, type: !554)
!13268 = !DILocalVariable(name: "alloc_ctx", scope: !13264, file: !9716, line: 175, type: !1778)
!13269 = !DILocation(line: 173, column: 22, scope: !13264)
!13270 = !DILocation(line: 173, column: 40, scope: !13264)
!13271 = !DILocation(line: 174, column: 2, scope: !13264)
!13272 = !DILocation(line: 174, column: 2, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13264, file: !9716, line: 174, column: 2)
!13274 = !DILocation(line: 175, column: 2, scope: !13264)
!13275 = !DILocation(line: 175, column: 19, scope: !13264)
!13276 = !DILocation(line: 176, column: 24, scope: !13264)
!13277 = !DILocation(line: 176, column: 50, scope: !13264)
!13278 = !DILocation(line: 176, column: 2, scope: !13264)
!13279 = !DILocation(line: 177, column: 2, scope: !13264)
!13280 = !DILocation(line: 177, column: 2, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13264, file: !9716, line: 177, column: 2)
!13282 = !DILocation(line: 179, column: 33, scope: !13264)
!13283 = !DILocation(line: 179, column: 9, scope: !13264)
!13284 = !DILocation(line: 180, column: 1, scope: !13264)
!13285 = !DILocation(line: 179, column: 2, scope: !13264)
!13286 = distinct !DISubprogram(name: "malloc_init_hard", scope: !3, file: !3, line: 2112, type: !5818, scopeLine: 2112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13287)
!13287 = !{!13288}
!13288 = !DILocalVariable(name: "tsd", scope: !13286, file: !3, line: 2113, type: !1347)
!13289 = !DILocation(line: 2113, column: 2, scope: !13286)
!13290 = !DILocation(line: 2113, column: 9, scope: !13286)
!13291 = !DILocation(line: 2118, column: 2, scope: !13286)
!13292 = !DILocation(line: 2124, column: 7, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 2124, column: 6)
!13294 = !DILocation(line: 2124, column: 6, scope: !13286)
!13295 = !DILocation(line: 2125, column: 3, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13293, file: !3, line: 2124, column: 34)
!13297 = !DILocation(line: 2128, column: 6, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 2128, column: 6)
!13299 = !DILocation(line: 2128, column: 24, scope: !13298)
!13300 = !DILocation(line: 2128, column: 54, scope: !13298)
!13301 = !DILocation(line: 2129, column: 6, scope: !13298)
!13302 = !DILocation(line: 2128, column: 6, scope: !13286)
!13303 = !DILocation(line: 2130, column: 3, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13298, file: !3, line: 2129, column: 36)
!13305 = !DILocation(line: 2133, column: 2, scope: !13286)
!13306 = !DILocation(line: 2135, column: 8, scope: !13286)
!13307 = !DILocation(line: 2135, column: 6, scope: !13286)
!13308 = !DILocation(line: 2136, column: 6, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 2136, column: 6)
!13310 = !DILocation(line: 2136, column: 10, scope: !13309)
!13311 = !DILocation(line: 2136, column: 6, scope: !13286)
!13312 = !DILocation(line: 2137, column: 3, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13309, file: !3, line: 2136, column: 19)
!13314 = !DILocation(line: 2139, column: 6, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 2139, column: 6)
!13316 = !DILocation(line: 2139, column: 6, scope: !13286)
!13317 = !DILocation(line: 2140, column: 3, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13315, file: !3, line: 2139, column: 37)
!13319 = !DILocation(line: 2143, column: 29, scope: !13286)
!13320 = !DILocation(line: 2143, column: 20, scope: !13286)
!13321 = !DILocation(line: 2143, column: 2, scope: !13286)
!13322 = !DILocation(line: 2145, column: 17, scope: !13286)
!13323 = !DILocation(line: 2145, column: 2, scope: !13286)
!13324 = !DILocation(line: 2147, column: 6, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 2147, column: 6)
!13326 = !DILocation(line: 2148, column: 6, scope: !13325)
!13327 = !DILocation(line: 2148, column: 42, scope: !13325)
!13328 = !DILocation(line: 2148, column: 33, scope: !13325)
!13329 = !DILocation(line: 2148, column: 48, scope: !13325)
!13330 = !DILocation(line: 2148, column: 9, scope: !13325)
!13331 = !DILocation(line: 2147, column: 6, scope: !13286)
!13332 = !DILocation(line: 2149, column: 3, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 2148, column: 58)
!13334 = !DILocation(line: 2155, column: 2, scope: !13286)
!13335 = !DILocation(line: 2157, column: 6, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 2157, column: 6)
!13337 = !DILocation(line: 2157, column: 6, scope: !13286)
!13338 = !DILocation(line: 2158, column: 3, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13336, file: !3, line: 2157, column: 33)
!13340 = !DILocation(line: 2160, column: 18, scope: !13286)
!13341 = !DILocation(line: 2160, column: 2, scope: !13286)
!13342 = !DILocation(line: 2161, column: 31, scope: !13286)
!13343 = !DILocation(line: 2161, column: 22, scope: !13286)
!13344 = !DILocation(line: 2161, column: 2, scope: !13286)
!13345 = !DILocation(line: 2164, column: 34, scope: !13286)
!13346 = !DILocation(line: 2164, column: 6, scope: !13286)
!13347 = !DILocation(line: 2163, column: 26, scope: !13286)
!13348 = !DILocation(line: 2163, column: 2, scope: !13286)
!13349 = !DILocation(line: 2165, column: 2, scope: !13286)
!13350 = !DILocation(line: 2167, column: 8, scope: !13286)
!13351 = !DILocation(line: 2167, column: 6, scope: !13286)
!13352 = !DILocation(line: 2168, column: 6, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 2168, column: 6)
!13354 = !DILocation(line: 2168, column: 6, scope: !13286)
!13355 = !DILocation(line: 2169, column: 3, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 2168, column: 29)
!13357 = !DILocation(line: 2169, column: 3, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 2169, column: 3)
!13359 = !DILocation(line: 2175, column: 39, scope: !13356)
!13360 = !DILocation(line: 2175, column: 30, scope: !13356)
!13361 = !DILocation(line: 2175, column: 3, scope: !13356)
!13362 = !DILocation(line: 2176, column: 32, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 2176, column: 7)
!13364 = !DILocation(line: 2176, column: 7, scope: !13363)
!13365 = !DILocation(line: 2176, column: 7, scope: !13356)
!13366 = !DILocation(line: 2177, column: 4, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13363, file: !3, line: 2176, column: 41)
!13368 = !DILocation(line: 2179, column: 2, scope: !13356)
!13369 = !DILocation(line: 2181, column: 2, scope: !13286)
!13370 = !DILocation(line: 2182, column: 1, scope: !13286)
!13371 = distinct !DISubprogram(name: "malloc_init_hard_needed", scope: !3, file: !3, line: 1764, type: !5818, scopeLine: 1764, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13372)
!13372 = !{!13373}
!13373 = !DILocalVariable(name: "spinner", scope: !13374, file: !3, line: 1777, type: !13376)
!13374 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 1775, column: 63)
!13375 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 1775, column: 6)
!13376 = !DIDerivedType(tag: DW_TAG_typedef, name: "spin_t", file: !13377, line: 8, baseType: !13378)
!13377 = !DIFile(filename: "include/jemalloc/internal/spin.h", directory: "/local-ssd/jemalloc-4sjtsltnpdxt65wruxrwgm5oxetre7vn-build/aidengro/spack-stage-jemalloc-5.3.0-4sjtsltnpdxt65wruxrwgm5oxetre7vn/spack-src", checksumkind: CSK_MD5, checksum: "c48378a6a625c995f6b75efad07d502a")
!13378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13377, line: 6, size: 32, elements: !13379)
!13379 = !{!13380}
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "iteration", scope: !13378, file: !13377, line: 7, baseType: !7, size: 32)
!13381 = !DILocation(line: 1765, column: 6, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 1765, column: 6)
!13383 = !DILocation(line: 1765, column: 27, scope: !13382)
!13384 = !DILocation(line: 1765, column: 31, scope: !13382)
!13385 = !DILocation(line: 1765, column: 46, scope: !13382)
!13386 = !DILocation(line: 1765, column: 49, scope: !13382)
!13387 = !DILocation(line: 1765, column: 67, scope: !13382)
!13388 = !DILocation(line: 1765, column: 6, scope: !13371)
!13389 = !DILocation(line: 1772, column: 3, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13382, file: !3, line: 1766, column: 31)
!13391 = !DILocation(line: 1775, column: 6, scope: !13375)
!13392 = !DILocation(line: 1775, column: 25, scope: !13375)
!13393 = !DILocation(line: 1775, column: 43, scope: !13375)
!13394 = !DILocation(line: 1775, column: 47, scope: !13375)
!13395 = !DILocation(line: 1775, column: 6, scope: !13371)
!13396 = !DILocation(line: 1777, column: 3, scope: !13374)
!13397 = !DILocation(line: 1777, column: 10, scope: !13374)
!13398 = !DILocation(line: 1778, column: 3, scope: !13374)
!13399 = !DILocation(line: 1779, column: 4, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 1778, column: 6)
!13401 = !DILocation(line: 1780, column: 4, scope: !13400)
!13402 = !DILocation(line: 1781, column: 4, scope: !13400)
!13403 = !DILocation(line: 1782, column: 3, scope: !13400)
!13404 = !DILocation(line: 1782, column: 13, scope: !13374)
!13405 = !DILocation(line: 1782, column: 12, scope: !13374)
!13406 = distinct !{!13406, !13398, !13407, !3182}
!13407 = !DILocation(line: 1782, column: 33, scope: !13374)
!13408 = !DILocation(line: 1783, column: 3, scope: !13374)
!13409 = !DILocation(line: 1784, column: 2, scope: !13375)
!13410 = !DILocation(line: 1786, column: 2, scope: !13371)
!13411 = !DILocation(line: 1787, column: 1, scope: !13371)
!13412 = distinct !DISubprogram(name: "malloc_init_hard_cleanup", scope: !3, file: !3, line: 2100, type: !13413, scopeLine: 2100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13415)
!13413 = !DISubroutineType(types: !13414)
!13414 = !{null, !391, !389}
!13415 = !{!13416, !13417, !13418}
!13416 = !DILocalVariable(name: "tsdn", arg: 1, scope: !13412, file: !3, line: 2100, type: !391)
!13417 = !DILocalVariable(name: "reentrancy_set", arg: 2, scope: !13412, file: !3, line: 2100, type: !389)
!13418 = !DILocalVariable(name: "tsd", scope: !13419, file: !3, line: 2105, type: !1347)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 2103, column: 22)
!13420 = distinct !DILexicalBlock(scope: !13412, file: !3, line: 2103, column: 6)
!13421 = !DILocation(line: 2100, column: 34, scope: !13412)
!13422 = !DILocation(line: 2100, column: 45, scope: !13412)
!13423 = !DILocation(line: 2101, column: 28, scope: !13412)
!13424 = !DILocation(line: 2101, column: 2, scope: !13412)
!13425 = !DILocation(line: 2102, column: 22, scope: !13412)
!13426 = !DILocation(line: 2102, column: 2, scope: !13412)
!13427 = !DILocation(line: 2103, column: 6, scope: !13420)
!13428 = !DILocation(line: 2103, column: 6, scope: !13412)
!13429 = !DILocation(line: 2104, column: 3, scope: !13419)
!13430 = !DILocation(line: 2104, column: 3, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13419, file: !3, line: 2104, column: 3)
!13432 = !DILocation(line: 2105, column: 3, scope: !13419)
!13433 = !DILocation(line: 2105, column: 10, scope: !13419)
!13434 = !DILocation(line: 2105, column: 25, scope: !13419)
!13435 = !DILocation(line: 2105, column: 16, scope: !13419)
!13436 = !DILocation(line: 2106, column: 3, scope: !13419)
!13437 = !DILocation(line: 2106, column: 3, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13419, file: !3, line: 2106, column: 3)
!13439 = !DILocation(line: 2107, column: 19, scope: !13419)
!13440 = !DILocation(line: 2107, column: 3, scope: !13419)
!13441 = !DILocation(line: 2108, column: 2, scope: !13420)
!13442 = !DILocation(line: 2108, column: 2, scope: !13419)
!13443 = !DILocation(line: 2109, column: 1, scope: !13412)
!13444 = !DISubprogram(name: "malloc_tsd_boot0", scope: !145, file: !145, line: 162, type: !4214, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13445 = distinct !DISubprogram(name: "malloc_init_hard_recursible", scope: !3, file: !3, line: 1925, type: !5818, scopeLine: 1925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13446)
!13446 = !{!13447}
!13447 = !DILocalVariable(name: "cpu_count_is_deterministic", scope: !13448, file: !3, line: 1930, type: !389)
!13448 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 1929, column: 49)
!13449 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 1929, column: 6)
!13450 = !DILocation(line: 1926, column: 20, scope: !13445)
!13451 = !DILocation(line: 1928, column: 10, scope: !13445)
!13452 = !DILocation(line: 1928, column: 8, scope: !13445)
!13453 = !DILocation(line: 1929, column: 6, scope: !13449)
!13454 = !DILocation(line: 1929, column: 23, scope: !13449)
!13455 = !DILocation(line: 1929, column: 6, scope: !13445)
!13456 = !DILocation(line: 1930, column: 3, scope: !13448)
!13457 = !DILocation(line: 1930, column: 8, scope: !13448)
!13458 = !DILocation(line: 1931, column: 7, scope: !13448)
!13459 = !DILocation(line: 1932, column: 8, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13448, file: !3, line: 1932, column: 7)
!13461 = !DILocation(line: 1932, column: 7, scope: !13448)
!13462 = !DILocation(line: 1938, column: 8, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13464, file: !3, line: 1938, column: 8)
!13464 = distinct !DILexicalBlock(scope: !13460, file: !3, line: 1932, column: 36)
!13465 = !DILocation(line: 1938, column: 20, scope: !13463)
!13466 = !DILocation(line: 1938, column: 8, scope: !13464)
!13467 = !DILocation(line: 1939, column: 22, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13463, file: !3, line: 1938, column: 26)
!13469 = !DILocation(line: 1940, column: 5, scope: !13468)
!13470 = !DILocation(line: 1943, column: 9, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1943, column: 9)
!13472 = !DILocation(line: 1943, column: 9, scope: !13468)
!13473 = !DILocation(line: 1944, column: 6, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 1943, column: 25)
!13475 = !DILocation(line: 1945, column: 5, scope: !13474)
!13476 = !DILocation(line: 1946, column: 9, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1946, column: 9)
!13478 = !DILocation(line: 1946, column: 9, scope: !13468)
!13479 = !DILocation(line: 1947, column: 6, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1946, column: 20)
!13481 = !DILocation(line: 1949, column: 4, scope: !13468)
!13482 = !DILocation(line: 1950, column: 3, scope: !13464)
!13483 = !DILocation(line: 1951, column: 2, scope: !13449)
!13484 = !DILocation(line: 1951, column: 2, scope: !13448)
!13485 = !DILocation(line: 1957, column: 6, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 1957, column: 6)
!13487 = !DILocation(line: 1958, column: 31, scope: !13486)
!13488 = !DILocation(line: 1957, column: 6, scope: !13445)
!13489 = !DILocation(line: 1959, column: 3, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 1958, column: 37)
!13491 = !DILocation(line: 1960, column: 7, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13490, file: !3, line: 1960, column: 7)
!13493 = !DILocation(line: 1960, column: 7, scope: !13490)
!13494 = !DILocation(line: 1961, column: 4, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13492, file: !3, line: 1960, column: 18)
!13496 = !DILocation(line: 1963, column: 3, scope: !13490)
!13497 = !DILocation(line: 1967, column: 6, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 1967, column: 6)
!13499 = !DILocation(line: 1967, column: 6, scope: !13445)
!13500 = !DILocation(line: 1968, column: 3, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13498, file: !3, line: 1967, column: 33)
!13502 = !DILocation(line: 1971, column: 2, scope: !13445)
!13503 = !DILocation(line: 1972, column: 1, scope: !13445)
!13504 = distinct !DISubprogram(name: "pre_reentrancy", scope: !3392, file: !3392, line: 111, type: !3078, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13505)
!13505 = !{!13506, !13507}
!13506 = !DILocalVariable(name: "tsd", arg: 1, scope: !13504, file: !3392, line: 111, type: !1347)
!13507 = !DILocalVariable(name: "arena", arg: 2, scope: !13504, file: !3392, line: 111, type: !594)
!13508 = !DILocation(line: 111, column: 23, scope: !13504)
!13509 = !DILocation(line: 111, column: 37, scope: !13504)
!13510 = !DILocation(line: 113, column: 2, scope: !13504)
!13511 = !DILocation(line: 113, column: 2, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13504, file: !3392, line: 113, column: 2)
!13513 = !DILocation(line: 114, column: 25, scope: !13504)
!13514 = !DILocation(line: 114, column: 2, scope: !13504)
!13515 = !DILocation(line: 115, column: 1, scope: !13504)
!13516 = distinct !DISubprogram(name: "malloc_init_narenas", scope: !3, file: !3, line: 2007, type: !5818, scopeLine: 2007, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13517)
!13517 = !{!13518}
!13518 = !DILocalVariable(name: "n", scope: !13519, file: !3, line: 2038, type: !7)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 2019, column: 10)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !3, line: 2011, column: 7)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 2010, column: 49)
!13522 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2010, column: 6)
!13523 = !DILocation(line: 2008, column: 2, scope: !13516)
!13524 = !DILocation(line: 2008, column: 2, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2008, column: 2)
!13526 = !DILocation(line: 2010, column: 6, scope: !13522)
!13527 = !DILocation(line: 2010, column: 23, scope: !13522)
!13528 = !DILocation(line: 2010, column: 6, scope: !13516)
!13529 = !DILocation(line: 2011, column: 29, scope: !13520)
!13530 = !DILocation(line: 2011, column: 45, scope: !13520)
!13531 = !DILocation(line: 2011, column: 7, scope: !13521)
!13532 = !DILocation(line: 2012, column: 21, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 2011, column: 50)
!13534 = !DILocation(line: 2014, column: 47, scope: !13533)
!13535 = !DILocation(line: 2015, column: 8, scope: !13533)
!13536 = !DILocation(line: 2015, column: 22, scope: !13533)
!13537 = !DILocation(line: 2013, column: 4, scope: !13533)
!13538 = !DILocation(line: 2016, column: 8, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13533, file: !3, line: 2016, column: 8)
!13540 = !DILocation(line: 2016, column: 8, scope: !13533)
!13541 = !DILocation(line: 2017, column: 5, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13539, file: !3, line: 2016, column: 19)
!13543 = !DILocation(line: 2019, column: 3, scope: !13533)
!13544 = !DILocation(line: 2020, column: 8, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 2020, column: 8)
!13546 = !DILocation(line: 2020, column: 14, scope: !13545)
!13547 = !DILocation(line: 2020, column: 8, scope: !13519)
!13548 = !DILocation(line: 2022, column: 38, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13545, file: !3, line: 2020, column: 38)
!13550 = !DILocation(line: 2021, column: 5, scope: !13549)
!13551 = !DILocation(line: 2023, column: 9, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13549, file: !3, line: 2023, column: 9)
!13553 = !DILocation(line: 2023, column: 9, scope: !13549)
!13554 = !DILocation(line: 2024, column: 6, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13552, file: !3, line: 2023, column: 20)
!13556 = !DILocation(line: 2026, column: 5, scope: !13549)
!13557 = !DILocation(line: 2029, column: 36, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 2029, column: 8)
!13559 = !DILocation(line: 2029, column: 8, scope: !13558)
!13560 = !DILocation(line: 2029, column: 54, scope: !13558)
!13561 = !DILocation(line: 2030, column: 25, scope: !13558)
!13562 = !DILocation(line: 2030, column: 28, scope: !13558)
!13563 = !DILocation(line: 2030, column: 34, scope: !13558)
!13564 = !DILocation(line: 2030, column: 38, scope: !13558)
!13565 = !DILocation(line: 2029, column: 8, scope: !13519)
!13566 = !DILocation(line: 2034, column: 27, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 2030, column: 44)
!13568 = !DILocation(line: 2031, column: 5, scope: !13567)
!13569 = !DILocation(line: 2035, column: 9, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13567, file: !3, line: 2035, column: 9)
!13571 = !DILocation(line: 2035, column: 9, scope: !13567)
!13572 = !DILocation(line: 2036, column: 6, scope: !13570)
!13573 = !DILocation(line: 2037, column: 4, scope: !13567)
!13574 = !DILocation(line: 2038, column: 4, scope: !13519)
!13575 = !DILocation(line: 2038, column: 13, scope: !13519)
!13576 = !DILocation(line: 2039, column: 36, scope: !13519)
!13577 = !DILocation(line: 2039, column: 8, scope: !13519)
!13578 = !DILocation(line: 2038, column: 17, scope: !13519)
!13579 = !DILocation(line: 2040, column: 8, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 2040, column: 8)
!13581 = !DILocation(line: 2040, column: 22, scope: !13580)
!13582 = !DILocation(line: 2040, column: 20, scope: !13580)
!13583 = !DILocation(line: 2040, column: 8, scope: !13519)
!13584 = !DILocation(line: 2055, column: 19, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 2040, column: 25)
!13586 = !DILocation(line: 2055, column: 17, scope: !13585)
!13587 = !DILocation(line: 2056, column: 4, scope: !13585)
!13588 = !DILocation(line: 2057, column: 3, scope: !13520)
!13589 = !DILocation(line: 2058, column: 2, scope: !13521)
!13590 = !DILocation(line: 2059, column: 6, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2059, column: 6)
!13592 = !DILocation(line: 2059, column: 18, scope: !13591)
!13593 = !DILocation(line: 2059, column: 6, scope: !13516)
!13594 = !DILocation(line: 2060, column: 17, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13591, file: !3, line: 2059, column: 24)
!13596 = !DILocation(line: 2060, column: 15, scope: !13595)
!13597 = !DILocation(line: 2061, column: 2, scope: !13595)
!13598 = !DILocation(line: 2062, column: 2, scope: !13516)
!13599 = !DILocation(line: 2062, column: 2, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2062, column: 2)
!13601 = !DILocation(line: 2064, column: 17, scope: !13516)
!13602 = !DILocation(line: 2064, column: 15, scope: !13516)
!13603 = !DILocation(line: 2068, column: 6, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2068, column: 6)
!13605 = !DILocation(line: 2068, column: 19, scope: !13604)
!13606 = !DILocation(line: 2068, column: 6, scope: !13516)
!13607 = !DILocation(line: 2069, column: 16, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13604, file: !3, line: 2068, column: 43)
!13609 = !DILocation(line: 2071, column: 7, scope: !13608)
!13610 = !DILocation(line: 2070, column: 3, scope: !13608)
!13611 = !DILocation(line: 2072, column: 2, scope: !13608)
!13612 = !DILocation(line: 2073, column: 20, scope: !13516)
!13613 = !DILocation(line: 2073, column: 2, scope: !13516)
!13614 = !DILocation(line: 2074, column: 6, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2074, column: 6)
!13616 = !DILocation(line: 2074, column: 6, scope: !13516)
!13617 = !DILocation(line: 2075, column: 3, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13615, file: !3, line: 2074, column: 25)
!13619 = !DILocation(line: 2076, column: 2, scope: !13618)
!13620 = !DILocation(line: 2077, column: 22, scope: !13516)
!13621 = !DILocation(line: 2077, column: 20, scope: !13516)
!13622 = !DILocation(line: 2079, column: 2, scope: !13516)
!13623 = !DILocation(line: 2080, column: 1, scope: !13516)
!13624 = !DISubprogram(name: "background_thread_boot1", scope: !6727, file: !6727, line: 31, type: !7337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13625 = distinct !DISubprogram(name: "malloc_init_percpu", scope: !3, file: !3, line: 2083, type: !6560, scopeLine: 2083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!13626 = !DILocation(line: 2084, column: 49, scope: !13625)
!13627 = !DILocation(line: 2084, column: 21, scope: !13625)
!13628 = !DILocation(line: 2084, column: 19, scope: !13625)
!13629 = !DILocation(line: 2085, column: 1, scope: !13625)
!13630 = distinct !DISubprogram(name: "malloc_init_hard_finish", scope: !3, file: !3, line: 2088, type: !5818, scopeLine: 2088, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!13631 = !DILocation(line: 2089, column: 6, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13630, file: !3, line: 2089, column: 6)
!13633 = !DILocation(line: 2089, column: 6, scope: !13630)
!13634 = !DILocation(line: 2090, column: 3, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 2089, column: 27)
!13636 = !DILocation(line: 2093, column: 20, scope: !13630)
!13637 = !DILocation(line: 2094, column: 2, scope: !13630)
!13638 = !DILocation(line: 2096, column: 2, scope: !13630)
!13639 = !DILocation(line: 2097, column: 1, scope: !13630)
!13640 = distinct !DISubprogram(name: "post_reentrancy", scope: !3392, file: !3392, line: 118, type: !3590, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13641)
!13641 = !{!13642}
!13642 = !DILocalVariable(name: "tsd", arg: 1, scope: !13640, file: !3392, line: 118, type: !1347)
!13643 = !DILocation(line: 118, column: 24, scope: !13640)
!13644 = !DILocation(line: 119, column: 26, scope: !13640)
!13645 = !DILocation(line: 119, column: 2, scope: !13640)
!13646 = !DILocation(line: 120, column: 1, scope: !13640)
!13647 = distinct !DISubprogram(name: "witness_assert_lockless", scope: !19, file: !19, line: 286, type: !13648, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13650)
!13648 = !DISubroutineType(types: !13649)
!13649 = !{null, !1416}
!13650 = !{!13651}
!13651 = !DILocalVariable(name: "witness_tsdn", arg: 1, scope: !13647, file: !19, line: 286, type: !1416)
!13652 = !DILocation(line: 286, column: 41, scope: !13647)
!13653 = !DILocation(line: 287, column: 23, scope: !13647)
!13654 = !DILocation(line: 287, column: 2, scope: !13647)
!13655 = !DILocation(line: 288, column: 1, scope: !13647)
!13656 = distinct !DISubprogram(name: "witness_tsd_tsdn", scope: !19, file: !19, line: 140, type: !13657, scopeLine: 140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13659)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{!1416, !6712}
!13659 = !{!13660}
!13660 = !DILocalVariable(name: "witness_tsd", arg: 1, scope: !13656, file: !19, line: 140, type: !6712)
!13661 = !DILocation(line: 140, column: 33, scope: !13656)
!13662 = !DILocation(line: 141, column: 27, scope: !13656)
!13663 = !DILocation(line: 141, column: 2, scope: !13656)
!13664 = distinct !DISubprogram(name: "tsd_witness_tsdp_get_unsafe", scope: !145, file: !145, line: 325, type: !6714, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13665)
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "tsd", arg: 1, scope: !13664, file: !145, line: 325, type: !1347)
!13667 = !DILocation(line: 325, column: 1, scope: !13664)
!13668 = !DISubprogram(name: "malloc_tsd_boot1", scope: !145, file: !145, line: 163, type: !6560, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13669 = !DISubprogram(name: "background_thread_ctl_init", scope: !6727, file: !6727, line: 24, type: !4219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13670 = distinct !DISubprogram(name: "spin_adaptive", scope: !13377, file: !13377, line: 21, type: !13671, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13674)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{null, !13673}
!13673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13376, size: 64)
!13674 = !{!13675, !13676}
!13675 = !DILocalVariable(name: "spin", arg: 1, scope: !13670, file: !13377, line: 21, type: !13673)
!13676 = !DILocalVariable(name: "i", scope: !13670, file: !13377, line: 22, type: !13677)
!13677 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !455)
!13678 = !DILocation(line: 21, column: 23, scope: !13670)
!13679 = !DILocation(line: 22, column: 2, scope: !13670)
!13680 = !DILocation(line: 22, column: 20, scope: !13670)
!13681 = !DILocation(line: 24, column: 6, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13670, file: !13377, line: 24, column: 6)
!13683 = !DILocation(line: 24, column: 12, scope: !13682)
!13684 = !{!3557, !2792, i64 0}
!13685 = !DILocation(line: 24, column: 22, scope: !13682)
!13686 = !DILocation(line: 24, column: 6, scope: !13670)
!13687 = !DILocation(line: 25, column: 10, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !13377, line: 25, column: 3)
!13689 = distinct !DILexicalBlock(scope: !13682, file: !13377, line: 24, column: 27)
!13690 = !DILocation(line: 25, column: 8, scope: !13688)
!13691 = !DILocation(line: 25, column: 15, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13688, file: !13377, line: 25, column: 3)
!13693 = !DILocation(line: 25, column: 26, scope: !13692)
!13694 = !DILocation(line: 25, column: 32, scope: !13692)
!13695 = !DILocation(line: 25, column: 23, scope: !13692)
!13696 = !DILocation(line: 25, column: 17, scope: !13692)
!13697 = !DILocation(line: 25, column: 3, scope: !13688)
!13698 = !DILocation(line: 26, column: 4, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13692, file: !13377, line: 25, column: 49)
!13700 = !DILocation(line: 27, column: 3, scope: !13699)
!13701 = !DILocation(line: 25, column: 45, scope: !13692)
!13702 = !DILocation(line: 25, column: 3, scope: !13692)
!13703 = distinct !{!13703, !13697, !13704, !3182}
!13704 = !DILocation(line: 27, column: 3, scope: !13688)
!13705 = !DILocation(line: 28, column: 3, scope: !13689)
!13706 = !DILocation(line: 28, column: 9, scope: !13689)
!13707 = !DILocation(line: 28, column: 18, scope: !13689)
!13708 = !DILocation(line: 29, column: 2, scope: !13689)
!13709 = !DILocation(line: 33, column: 3, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13682, file: !13377, line: 29, column: 9)
!13711 = !DILocation(line: 36, column: 1, scope: !13670)
!13712 = !DISubprogram(name: "sched_yield", scope: !13713, file: !13713, line: 68, type: !9398, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13713 = !DIFile(filename: "/usr/include/sched.h", directory: "", checksumkind: CSK_MD5, checksum: "52ea601aba54a9937a50019367077a72")
!13714 = distinct !DISubprogram(name: "spin_cpu_spinwait", scope: !13377, file: !13377, line: 11, type: !6560, scopeLine: 11, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!13715 = !DILocation(line: 13, column: 2, scope: !13714)
!13716 = !{i64 2151279997}
!13717 = !DILocation(line: 18, column: 1, scope: !13714)
!13718 = distinct !DISubprogram(name: "malloc_mutex_assert_owner", scope: !65, file: !65, line: 235, type: !2904, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13719)
!13719 = !{!13720, !13721}
!13720 = !DILocalVariable(name: "tsdn", arg: 1, scope: !13718, file: !65, line: 235, type: !391)
!13721 = !DILocalVariable(name: "mutex", arg: 2, scope: !13718, file: !65, line: 235, type: !430)
!13722 = !DILocation(line: 235, column: 35, scope: !13718)
!13723 = !DILocation(line: 235, column: 57, scope: !13718)
!13724 = !DILocation(line: 236, column: 45, scope: !13718)
!13725 = !DILocation(line: 236, column: 23, scope: !13718)
!13726 = !DILocation(line: 236, column: 53, scope: !13718)
!13727 = !DILocation(line: 236, column: 60, scope: !13718)
!13728 = !DILocation(line: 236, column: 2, scope: !13718)
!13729 = !DILocation(line: 237, column: 1, scope: !13718)
!13730 = distinct !DISubprogram(name: "witness_assert_owner", scope: !19, file: !19, line: 198, type: !11140, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13731)
!13731 = !{!13732, !13733, !13734}
!13732 = !DILocalVariable(name: "witness_tsdn", arg: 1, scope: !13730, file: !19, line: 198, type: !1416)
!13733 = !DILocalVariable(name: "witness", arg: 2, scope: !13730, file: !19, line: 198, type: !517)
!13734 = !DILocalVariable(name: "witness_tsd", scope: !13730, file: !19, line: 199, type: !6712)
!13735 = !DILocation(line: 198, column: 38, scope: !13730)
!13736 = !DILocation(line: 198, column: 69, scope: !13730)
!13737 = !DILocation(line: 199, column: 2, scope: !13730)
!13738 = !DILocation(line: 199, column: 17, scope: !13730)
!13739 = !DILocation(line: 217, column: 1, scope: !13730)
!13740 = distinct !DISubprogram(name: "malloc_ncpus", scope: !3, file: !3, line: 717, type: !2812, scopeLine: 717, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13741)
!13741 = !{!13742, !13743}
!13742 = !DILocalVariable(name: "result", scope: !13740, file: !3, line: 718, type: !497)
!13743 = !DILocalVariable(name: "set", scope: !13744, file: !3, line: 739, type: !13745)
!13744 = distinct !DILexicalBlock(scope: !13740, file: !3, line: 735, column: 2)
!13745 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpu_set_t", file: !13746, line: 42, baseType: !13747)
!13746 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/cpu-set.h", directory: "", checksumkind: CSK_MD5, checksum: "9b78eb5e247ecb71c5de90bcf65db505")
!13747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13746, line: 39, size: 1024, elements: !13748)
!13748 = !{!13749}
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "__bits", scope: !13747, file: !13746, line: 41, baseType: !13750, size: 1024)
!13750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13751, size: 1024, elements: !1386)
!13751 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cpu_mask", file: !13746, line: 32, baseType: !386)
!13752 = !DILocation(line: 718, column: 2, scope: !13740)
!13753 = !DILocation(line: 718, column: 7, scope: !13740)
!13754 = !DILocation(line: 739, column: 3, scope: !13744)
!13755 = !DILocation(line: 739, column: 13, scope: !13744)
!13756 = !DILocation(line: 742, column: 3, scope: !13744)
!13757 = !DILocation(line: 746, column: 12, scope: !13744)
!13758 = !DILocation(line: 746, column: 10, scope: !13744)
!13759 = !DILocation(line: 747, column: 2, scope: !13740)
!13760 = !DILocation(line: 751, column: 11, scope: !13740)
!13761 = !DILocation(line: 751, column: 18, scope: !13740)
!13762 = !DILocation(line: 751, column: 10, scope: !13740)
!13763 = !DILocation(line: 751, column: 41, scope: !13740)
!13764 = !DILocation(line: 751, column: 31, scope: !13740)
!13765 = !DILocation(line: 752, column: 1, scope: !13740)
!13766 = !DILocation(line: 751, column: 2, scope: !13740)
!13767 = !DISubprogram(name: "pthread_atfork", scope: !7167, file: !7167, line: 1332, type: !13768, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13768 = !DISubroutineType(types: !13769)
!13769 = !{!390, !7226, !7226, !7226}
!13770 = !DISubprogram(name: "background_thread_boot0", scope: !6727, file: !6727, line: 30, type: !5818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13771 = !DISubprogram(name: "sched_getaffinity", scope: !13713, file: !13713, line: 134, type: !13772, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13772 = !DISubroutineType(types: !13773)
!13773 = !{!390, !13774, !387, !13775}
!13774 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !405, line: 154, baseType: !390)
!13775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13745, size: 64)
!13776 = !DISubprogram(name: "__sched_cpucount", scope: !13746, file: !13746, line: 117, type: !13777, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{!390, !387, !13779}
!13779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13780, size: 64)
!13780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13745)
!13781 = distinct !DISubprogram(name: "malloc_cpu_count_is_deterministic", scope: !3, file: !3, line: 762, type: !5818, scopeLine: 763, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13782)
!13782 = !{!13783, !13784, !13785, !13786}
!13783 = !DILocalVariable(name: "cpu_onln", scope: !13781, file: !3, line: 767, type: !497)
!13784 = !DILocalVariable(name: "cpu_conf", scope: !13781, file: !3, line: 768, type: !497)
!13785 = !DILocalVariable(name: "set", scope: !13781, file: !3, line: 776, type: !13745)
!13786 = !DILocalVariable(name: "cpu_affinity", scope: !13781, file: !3, line: 783, type: !497)
!13787 = !DILocation(line: 767, column: 2, scope: !13781)
!13788 = !DILocation(line: 767, column: 7, scope: !13781)
!13789 = !DILocation(line: 767, column: 18, scope: !13781)
!13790 = !DILocation(line: 768, column: 2, scope: !13781)
!13791 = !DILocation(line: 768, column: 7, scope: !13781)
!13792 = !DILocation(line: 768, column: 18, scope: !13781)
!13793 = !DILocation(line: 769, column: 6, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13781, file: !3, line: 769, column: 6)
!13795 = !DILocation(line: 769, column: 18, scope: !13794)
!13796 = !DILocation(line: 769, column: 15, scope: !13794)
!13797 = !DILocation(line: 769, column: 6, scope: !13781)
!13798 = !DILocation(line: 770, column: 3, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13794, file: !3, line: 769, column: 28)
!13800 = !DILocation(line: 776, column: 2, scope: !13781)
!13801 = !DILocation(line: 776, column: 12, scope: !13781)
!13802 = !DILocation(line: 779, column: 2, scope: !13781)
!13803 = !DILocation(line: 783, column: 2, scope: !13781)
!13804 = !DILocation(line: 783, column: 7, scope: !13781)
!13805 = !DILocation(line: 783, column: 22, scope: !13781)
!13806 = !DILocation(line: 784, column: 6, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13781, file: !3, line: 784, column: 6)
!13808 = !DILocation(line: 784, column: 22, scope: !13807)
!13809 = !DILocation(line: 784, column: 19, scope: !13807)
!13810 = !DILocation(line: 784, column: 6, scope: !13781)
!13811 = !DILocation(line: 785, column: 3, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 784, column: 32)
!13813 = !DILocation(line: 788, column: 2, scope: !13781)
!13814 = !DILocation(line: 790, column: 1, scope: !13781)
!13815 = !DISubprogram(name: "sysconf", scope: !1425, file: !1425, line: 640, type: !13816, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{!497, !390}
!13818 = distinct !DISubprogram(name: "tsd_pre_reentrancy_raw", scope: !145, file: !145, line: 498, type: !3590, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13819)
!13819 = !{!13820, !13821}
!13820 = !DILocalVariable(name: "tsd", arg: 1, scope: !13818, file: !145, line: 498, type: !1347)
!13821 = !DILocalVariable(name: "fast", scope: !13818, file: !145, line: 499, type: !389)
!13822 = !DILocation(line: 498, column: 31, scope: !13818)
!13823 = !DILocation(line: 499, column: 2, scope: !13818)
!13824 = !DILocation(line: 499, column: 7, scope: !13818)
!13825 = !DILocation(line: 499, column: 23, scope: !13818)
!13826 = !DILocation(line: 499, column: 14, scope: !13818)
!13827 = !DILocation(line: 500, column: 2, scope: !13818)
!13828 = !DILocation(line: 500, column: 2, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13818, file: !145, line: 500, column: 2)
!13830 = !DILocation(line: 501, column: 31, scope: !13818)
!13831 = !DILocation(line: 501, column: 5, scope: !13818)
!13832 = !DILocation(line: 501, column: 2, scope: !13818)
!13833 = !DILocation(line: 502, column: 6, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13818, file: !145, line: 502, column: 6)
!13835 = !DILocation(line: 502, column: 6, scope: !13818)
!13836 = !DILocation(line: 504, column: 19, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13834, file: !145, line: 502, column: 12)
!13838 = !DILocation(line: 504, column: 3, scope: !13837)
!13839 = !DILocation(line: 505, column: 3, scope: !13837)
!13840 = !DILocation(line: 505, column: 3, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13837, file: !145, line: 505, column: 3)
!13842 = !DILocation(line: 506, column: 2, scope: !13837)
!13843 = !DILocation(line: 507, column: 1, scope: !13818)
!13844 = distinct !DISubprogram(name: "tsd_reentrancy_levelp_get", scope: !145, file: !145, line: 344, type: !13845, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13848)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{!13847, !1347}
!13847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!13848 = !{!13849, !13850}
!13849 = !DILocalVariable(name: "tsd", arg: 1, scope: !13844, file: !145, line: 344, type: !1347)
!13850 = !DILocalVariable(name: "state", scope: !13844, file: !145, line: 344, type: !730)
!13851 = !DILocation(line: 344, column: 1, scope: !13844)
!13852 = !DILocation(line: 344, column: 1, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13844, file: !145, line: 344, column: 1)
!13854 = !DISubprogram(name: "tsd_slow_update", scope: !145, file: !145, line: 167, type: !3590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13855 = distinct !DISubprogram(name: "tsd_reentrancy_levelp_get_unsafe", scope: !145, file: !145, line: 323, type: !13845, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13856)
!13856 = !{!13857}
!13857 = !DILocalVariable(name: "tsd", arg: 1, scope: !13855, file: !145, line: 323, type: !1347)
!13858 = !DILocation(line: 323, column: 1, scope: !13855)
!13859 = distinct !DISubprogram(name: "malloc_narenas_default", scope: !3, file: !3, line: 1975, type: !2812, scopeLine: 1975, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13860)
!13860 = !{!13861, !13864, !13865}
!13861 = !DILocalVariable(name: "fxp_ncpus", scope: !13862, file: !3, line: 1982, type: !1273)
!13862 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 1981, column: 17)
!13863 = distinct !DILexicalBlock(scope: !13859, file: !3, line: 1981, column: 6)
!13864 = !DILocalVariable(name: "goal", scope: !13862, file: !3, line: 1983, type: !1273)
!13865 = !DILocalVariable(name: "int_goal", scope: !13862, file: !3, line: 1984, type: !455)
!13866 = !DILocation(line: 1976, column: 2, scope: !13859)
!13867 = !DILocation(line: 1976, column: 2, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13859, file: !3, line: 1976, column: 2)
!13869 = !DILocation(line: 1981, column: 6, scope: !13863)
!13870 = !DILocation(line: 1981, column: 12, scope: !13863)
!13871 = !DILocation(line: 1981, column: 6, scope: !13859)
!13872 = !DILocation(line: 1982, column: 3, scope: !13862)
!13873 = !DILocation(line: 1982, column: 9, scope: !13862)
!13874 = !DILocation(line: 1982, column: 21, scope: !13862)
!13875 = !DILocation(line: 1983, column: 3, scope: !13862)
!13876 = !DILocation(line: 1983, column: 9, scope: !13862)
!13877 = !DILocation(line: 1983, column: 24, scope: !13862)
!13878 = !DILocation(line: 1983, column: 35, scope: !13862)
!13879 = !DILocation(line: 1983, column: 16, scope: !13862)
!13880 = !DILocation(line: 1984, column: 3, scope: !13862)
!13881 = !DILocation(line: 1984, column: 12, scope: !13862)
!13882 = !DILocation(line: 1984, column: 41, scope: !13862)
!13883 = !DILocation(line: 1984, column: 23, scope: !13862)
!13884 = !DILocation(line: 1985, column: 7, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13862, file: !3, line: 1985, column: 7)
!13886 = !DILocation(line: 1985, column: 16, scope: !13885)
!13887 = !DILocation(line: 1985, column: 7, scope: !13862)
!13888 = !DILocation(line: 1986, column: 4, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13885, file: !3, line: 1985, column: 22)
!13890 = !DILocation(line: 1988, column: 10, scope: !13862)
!13891 = !DILocation(line: 1988, column: 3, scope: !13862)
!13892 = !DILocation(line: 1989, column: 2, scope: !13863)
!13893 = !DILocation(line: 1990, column: 3, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 1989, column: 9)
!13895 = !DILocation(line: 1992, column: 1, scope: !13859)
!13896 = distinct !DISubprogram(name: "percpu_arena_as_initialized", scope: !3, file: !3, line: 1995, type: !13897, scopeLine: 1995, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13900)
!13897 = !DISubroutineType(types: !13898)
!13898 = !{!13899, !13899}
!13899 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_arena_mode_t", file: !88, line: 33, baseType: !87)
!13900 = !{!13901}
!13901 = !DILocalVariable(name: "mode", arg: 1, scope: !13896, file: !3, line: 1995, type: !13899)
!13902 = !DILocation(line: 1995, column: 49, scope: !13896)
!13903 = !DILocation(line: 1996, column: 2, scope: !13896)
!13904 = !DILocation(line: 1996, column: 2, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13896, file: !3, line: 1996, column: 2)
!13906 = !DILocation(line: 1997, column: 2, scope: !13896)
!13907 = !DILocation(line: 1997, column: 2, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13896, file: !3, line: 1997, column: 2)
!13909 = !DILocation(line: 1999, column: 6, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13896, file: !3, line: 1999, column: 6)
!13911 = !DILocation(line: 1999, column: 11, scope: !13910)
!13912 = !DILocation(line: 1999, column: 6, scope: !13896)
!13913 = !DILocation(line: 2000, column: 8, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13910, file: !3, line: 1999, column: 37)
!13915 = !DILocation(line: 2001, column: 2, scope: !13914)
!13916 = !DILocation(line: 2003, column: 9, scope: !13896)
!13917 = !DILocation(line: 2003, column: 2, scope: !13896)
!13918 = distinct !DISubprogram(name: "percpu_arena_ind_limit", scope: !3392, file: !3392, line: 46, type: !13919, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13921)
!13919 = !DISubroutineType(types: !13920)
!13920 = !{!7, !13899}
!13921 = !{!13922}
!13922 = !DILocalVariable(name: "mode", arg: 1, scope: !13918, file: !3392, line: 46, type: !13899)
!13923 = !DILocation(line: 46, column: 44, scope: !13918)
!13924 = !DILocation(line: 47, column: 2, scope: !13918)
!13925 = !DILocation(line: 47, column: 2, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13918, file: !3392, line: 47, column: 2)
!13927 = !DILocation(line: 48, column: 6, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13918, file: !3392, line: 48, column: 6)
!13929 = !DILocation(line: 48, column: 11, scope: !13928)
!13930 = !DILocation(line: 48, column: 31, scope: !13928)
!13931 = !DILocation(line: 48, column: 34, scope: !13928)
!13932 = !DILocation(line: 48, column: 40, scope: !13928)
!13933 = !DILocation(line: 48, column: 6, scope: !13918)
!13934 = !DILocation(line: 49, column: 7, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13936, file: !3392, line: 49, column: 7)
!13936 = distinct !DILexicalBlock(scope: !13928, file: !3392, line: 48, column: 45)
!13937 = !DILocation(line: 49, column: 13, scope: !13935)
!13938 = !DILocation(line: 49, column: 7, scope: !13936)
!13939 = !DILocation(line: 51, column: 11, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13935, file: !3392, line: 49, column: 18)
!13941 = !DILocation(line: 51, column: 17, scope: !13940)
!13942 = !DILocation(line: 51, column: 21, scope: !13940)
!13943 = !DILocation(line: 51, column: 4, scope: !13940)
!13944 = !DILocation(line: 53, column: 10, scope: !13936)
!13945 = !DILocation(line: 53, column: 16, scope: !13936)
!13946 = !DILocation(line: 53, column: 3, scope: !13936)
!13947 = !DILocation(line: 55, column: 10, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13928, file: !3392, line: 54, column: 9)
!13949 = !DILocation(line: 55, column: 3, scope: !13948)
!13950 = !DILocation(line: 57, column: 1, scope: !13918)
!13951 = distinct !DISubprogram(name: "narenas_total_set", scope: !3, file: !3, line: 377, type: !13952, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13954)
!13952 = !DISubroutineType(types: !13953)
!13953 = !{null, !7}
!13954 = !{!13955}
!13955 = !DILocalVariable(name: "narenas", arg: 1, scope: !13951, file: !3, line: 377, type: !7)
!13956 = !DILocation(line: 377, column: 28, scope: !13951)
!13957 = !DILocation(line: 378, column: 33, scope: !13951)
!13958 = !DILocation(line: 378, column: 2, scope: !13951)
!13959 = !DILocation(line: 379, column: 1, scope: !13951)
!13960 = !DISubprogram(name: "arena_init_huge", scope: !3073, file: !3073, line: 101, type: !5818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13961 = distinct !DISubprogram(name: "fxp_mul", scope: !1274, file: !1274, line: 60, type: !13962, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13964)
!13962 = !DISubroutineType(types: !13963)
!13963 = !{!1273, !1273, !1273}
!13964 = !{!13965, !13966, !13967}
!13965 = !DILocalVariable(name: "a", arg: 1, scope: !13961, file: !1274, line: 60, type: !1273)
!13966 = !DILocalVariable(name: "b", arg: 2, scope: !13961, file: !1274, line: 60, type: !1273)
!13967 = !DILocalVariable(name: "unshifted", scope: !13961, file: !1274, line: 61, type: !408)
!13968 = !DILocation(line: 60, column: 15, scope: !13961)
!13969 = !DILocation(line: 60, column: 24, scope: !13961)
!13970 = !DILocation(line: 61, column: 2, scope: !13961)
!13971 = !DILocation(line: 61, column: 11, scope: !13961)
!13972 = !DILocation(line: 61, column: 33, scope: !13961)
!13973 = !DILocation(line: 61, column: 23, scope: !13961)
!13974 = !DILocation(line: 61, column: 47, scope: !13961)
!13975 = !DILocation(line: 61, column: 37, scope: !13961)
!13976 = !DILocation(line: 61, column: 35, scope: !13961)
!13977 = !DILocation(line: 67, column: 20, scope: !13961)
!13978 = !DILocation(line: 67, column: 30, scope: !13961)
!13979 = !DILocation(line: 67, column: 9, scope: !13961)
!13980 = !DILocation(line: 68, column: 1, scope: !13961)
!13981 = !DILocation(line: 67, column: 2, scope: !13961)
!13982 = distinct !DISubprogram(name: "fxp_round_nearest", scope: !1274, file: !1274, line: 88, type: !13983, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13985)
!13983 = !DISubroutineType(types: !13984)
!13984 = !{!455, !1273}
!13985 = !{!13986, !13987, !13988}
!13986 = !DILocalVariable(name: "a", arg: 1, scope: !13982, file: !1274, line: 88, type: !1273)
!13987 = !DILocalVariable(name: "fractional_part", scope: !13982, file: !1274, line: 89, type: !455)
!13988 = !DILocalVariable(name: "increment", scope: !13982, file: !1274, line: 90, type: !455)
!13989 = !DILocation(line: 88, column: 25, scope: !13982)
!13990 = !DILocation(line: 89, column: 2, scope: !13982)
!13991 = !DILocation(line: 89, column: 11, scope: !13982)
!13992 = !DILocation(line: 89, column: 30, scope: !13982)
!13993 = !DILocation(line: 89, column: 33, scope: !13982)
!13994 = !DILocation(line: 90, column: 2, scope: !13982)
!13995 = !DILocation(line: 90, column: 11, scope: !13982)
!13996 = !DILocation(line: 90, column: 34, scope: !13982)
!13997 = !DILocation(line: 90, column: 50, scope: !13982)
!13998 = !DILocation(line: 91, column: 10, scope: !13982)
!13999 = !DILocation(line: 91, column: 12, scope: !13982)
!14000 = !DILocation(line: 91, column: 21, scope: !13982)
!14001 = !DILocation(line: 91, column: 19, scope: !13982)
!14002 = !DILocation(line: 92, column: 1, scope: !13982)
!14003 = !DILocation(line: 91, column: 2, scope: !13982)
!14004 = distinct !DISubprogram(name: "atomic_store_u", scope: !459, file: !459, line: 91, type: !14005, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14007)
!14005 = !DISubroutineType(types: !14006)
!14006 = !{null, !11236, !7, !2804}
!14007 = !{!14008, !14009, !14010}
!14008 = !DILocalVariable(name: "a", arg: 1, scope: !14004, file: !459, line: 91, type: !11236)
!14009 = !DILocalVariable(name: "val", arg: 2, scope: !14004, file: !459, line: 91, type: !7)
!14010 = !DILocalVariable(name: "mo", arg: 3, scope: !14004, file: !459, line: 91, type: !2804)
!14011 = !DILocation(line: 91, column: 1, scope: !14004)
!14012 = !DISubprogram(name: "malloc_mutex_boot", scope: !65, file: !65, line: 144, type: !5818, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14013 = distinct !DISubprogram(name: "malloc_slow_flag_init", scope: !3, file: !3, line: 962, type: !6560, scopeLine: 962, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!14014 = !DILocation(line: 967, column: 24, scope: !14013)
!14015 = !DILocation(line: 968, column: 9, scope: !14013)
!14016 = !DILocation(line: 968, column: 6, scope: !14013)
!14017 = !DILocation(line: 969, column: 9, scope: !14013)
!14018 = !DILocation(line: 969, column: 6, scope: !14013)
!14019 = !DILocation(line: 970, column: 9, scope: !14013)
!14020 = !DILocation(line: 970, column: 6, scope: !14013)
!14021 = !DILocation(line: 971, column: 9, scope: !14013)
!14022 = !DILocation(line: 971, column: 6, scope: !14013)
!14023 = !DILocation(line: 967, column: 20, scope: !14013)
!14024 = !DILocation(line: 973, column: 17, scope: !14013)
!14025 = !DILocation(line: 973, column: 35, scope: !14013)
!14026 = !DILocation(line: 973, column: 14, scope: !14013)
!14027 = !DILocation(line: 974, column: 1, scope: !14013)
!14028 = distinct !DISubprogram(name: "tsd_post_reentrancy_raw", scope: !145, file: !145, line: 510, type: !3590, scopeLine: 510, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14029)
!14029 = !{!14030, !14031}
!14030 = !DILocalVariable(name: "tsd", arg: 1, scope: !14028, file: !145, line: 510, type: !1347)
!14031 = !DILocalVariable(name: "reentrancy_level", scope: !14028, file: !145, line: 511, type: !13847)
!14032 = !DILocation(line: 510, column: 32, scope: !14028)
!14033 = !DILocation(line: 511, column: 2, scope: !14028)
!14034 = !DILocation(line: 511, column: 10, scope: !14028)
!14035 = !DILocation(line: 511, column: 55, scope: !14028)
!14036 = !DILocation(line: 511, column: 29, scope: !14028)
!14037 = !DILocation(line: 512, column: 2, scope: !14028)
!14038 = !DILocation(line: 512, column: 2, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14028, file: !145, line: 512, column: 2)
!14040 = !DILocation(line: 513, column: 9, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14028, file: !145, line: 513, column: 6)
!14042 = !DILocation(line: 513, column: 6, scope: !14041)
!14043 = !DILocation(line: 513, column: 26, scope: !14041)
!14044 = !DILocation(line: 513, column: 6, scope: !14028)
!14045 = !DILocation(line: 514, column: 19, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14041, file: !145, line: 513, column: 32)
!14047 = !DILocation(line: 514, column: 3, scope: !14046)
!14048 = !DILocation(line: 515, column: 2, scope: !14046)
!14049 = !DILocation(line: 516, column: 1, scope: !14028)
!14050 = distinct !DISubprogram(name: "witness_assert_depth", scope: !19, file: !19, line: 281, type: !14051, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14053)
!14051 = !DISubroutineType(types: !14052)
!14052 = !{null, !1416, !7}
!14053 = !{!14054, !14055}
!14054 = !DILocalVariable(name: "witness_tsdn", arg: 1, scope: !14050, file: !19, line: 281, type: !1416)
!14055 = !DILocalVariable(name: "depth", arg: 2, scope: !14050, file: !19, line: 281, type: !7)
!14056 = !DILocation(line: 281, column: 38, scope: !14050)
!14057 = !DILocation(line: 281, column: 61, scope: !14050)
!14058 = !DILocation(line: 282, column: 31, scope: !14050)
!14059 = !DILocation(line: 282, column: 63, scope: !14050)
!14060 = !DILocation(line: 282, column: 2, scope: !14050)
!14061 = !DILocation(line: 283, column: 1, scope: !14050)
!14062 = distinct !DISubprogram(name: "sz_size2index_compute", scope: !727, file: !727, line: 155, type: !6407, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14063)
!14063 = !{!14064, !14065, !14068, !14069, !14071, !14072, !14073, !14074, !14075, !14076}
!14064 = !DILocalVariable(name: "size", arg: 1, scope: !14062, file: !727, line: 155, type: !387)
!14065 = !DILocalVariable(name: "lg_tmin", scope: !14066, file: !727, line: 165, type: !726)
!14066 = distinct !DILexicalBlock(scope: !14067, file: !727, line: 164, column: 46)
!14067 = distinct !DILexicalBlock(scope: !14062, file: !727, line: 164, column: 6)
!14068 = !DILocalVariable(name: "lg_ceil", scope: !14066, file: !727, line: 166, type: !726)
!14069 = !DILocalVariable(name: "x", scope: !14070, file: !727, line: 171, type: !726)
!14070 = distinct !DILexicalBlock(scope: !14062, file: !727, line: 170, column: 2)
!14071 = !DILocalVariable(name: "shift", scope: !14070, file: !727, line: 172, type: !726)
!14072 = !DILocalVariable(name: "grp", scope: !14070, file: !727, line: 174, type: !726)
!14073 = !DILocalVariable(name: "lg_delta", scope: !14070, file: !727, line: 176, type: !726)
!14074 = !DILocalVariable(name: "delta_inverse_mask", scope: !14070, file: !727, line: 179, type: !387)
!14075 = !DILocalVariable(name: "mod", scope: !14070, file: !727, line: 180, type: !726)
!14076 = !DILocalVariable(name: "index", scope: !14070, file: !727, line: 183, type: !726)
!14077 = !DILocation(line: 155, column: 30, scope: !14062)
!14078 = !DILocation(line: 156, column: 6, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14062, file: !727, line: 156, column: 6)
!14080 = !DILocation(line: 156, column: 6, scope: !14062)
!14081 = !DILocation(line: 157, column: 3, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14079, file: !727, line: 156, column: 42)
!14083 = !DILocation(line: 160, column: 6, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14062, file: !727, line: 160, column: 6)
!14085 = !DILocation(line: 160, column: 11, scope: !14084)
!14086 = !DILocation(line: 160, column: 6, scope: !14062)
!14087 = !DILocation(line: 161, column: 3, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14084, file: !727, line: 160, column: 17)
!14089 = !DILocation(line: 164, column: 6, scope: !14067)
!14090 = !DILocation(line: 164, column: 11, scope: !14067)
!14091 = !DILocation(line: 164, column: 6, scope: !14062)
!14092 = !DILocation(line: 165, column: 3, scope: !14066)
!14093 = !DILocation(line: 165, column: 11, scope: !14066)
!14094 = !DILocation(line: 166, column: 3, scope: !14066)
!14095 = !DILocation(line: 166, column: 11, scope: !14066)
!14096 = !DILocation(line: 166, column: 43, scope: !14066)
!14097 = !DILocation(line: 166, column: 30, scope: !14066)
!14098 = !DILocation(line: 166, column: 21, scope: !14066)
!14099 = !DILocation(line: 167, column: 11, scope: !14066)
!14100 = !DILocation(line: 167, column: 21, scope: !14066)
!14101 = !DILocation(line: 167, column: 19, scope: !14066)
!14102 = !DILocation(line: 167, column: 35, scope: !14066)
!14103 = !DILocation(line: 167, column: 45, scope: !14066)
!14104 = !DILocation(line: 167, column: 43, scope: !14066)
!14105 = !DILocation(line: 167, column: 3, scope: !14066)
!14106 = !DILocation(line: 168, column: 2, scope: !14067)
!14107 = !DILocation(line: 171, column: 3, scope: !14070)
!14108 = !DILocation(line: 171, column: 11, scope: !14070)
!14109 = !DILocation(line: 171, column: 25, scope: !14070)
!14110 = !DILocation(line: 171, column: 29, scope: !14070)
!14111 = !DILocation(line: 171, column: 33, scope: !14070)
!14112 = !DILocation(line: 171, column: 15, scope: !14070)
!14113 = !DILocation(line: 172, column: 3, scope: !14070)
!14114 = !DILocation(line: 172, column: 11, scope: !14070)
!14115 = !DILocation(line: 172, column: 20, scope: !14070)
!14116 = !DILocation(line: 172, column: 22, scope: !14070)
!14117 = !DILocation(line: 172, column: 19, scope: !14070)
!14118 = !DILocation(line: 173, column: 7, scope: !14070)
!14119 = !DILocation(line: 173, column: 9, scope: !14070)
!14120 = !DILocation(line: 174, column: 3, scope: !14070)
!14121 = !DILocation(line: 174, column: 11, scope: !14070)
!14122 = !DILocation(line: 174, column: 17, scope: !14070)
!14123 = !DILocation(line: 174, column: 23, scope: !14070)
!14124 = !DILocation(line: 176, column: 3, scope: !14070)
!14125 = !DILocation(line: 176, column: 11, scope: !14070)
!14126 = !DILocation(line: 176, column: 23, scope: !14070)
!14127 = !DILocation(line: 176, column: 25, scope: !14070)
!14128 = !DILocation(line: 176, column: 22, scope: !14070)
!14129 = !DILocation(line: 177, column: 22, scope: !14070)
!14130 = !DILocation(line: 177, column: 24, scope: !14070)
!14131 = !DILocation(line: 177, column: 39, scope: !14070)
!14132 = !DILocation(line: 179, column: 3, scope: !14070)
!14133 = !DILocation(line: 179, column: 10, scope: !14070)
!14134 = !DILocation(line: 179, column: 41, scope: !14070)
!14135 = !DILocation(line: 179, column: 38, scope: !14070)
!14136 = !DILocation(line: 180, column: 3, scope: !14070)
!14137 = !DILocation(line: 180, column: 11, scope: !14070)
!14138 = !DILocation(line: 180, column: 21, scope: !14070)
!14139 = !DILocation(line: 180, column: 25, scope: !14070)
!14140 = !DILocation(line: 180, column: 31, scope: !14070)
!14141 = !DILocation(line: 180, column: 29, scope: !14070)
!14142 = !DILocation(line: 180, column: 54, scope: !14070)
!14143 = !DILocation(line: 180, column: 51, scope: !14070)
!14144 = !DILocation(line: 180, column: 65, scope: !14070)
!14145 = !DILocation(line: 180, column: 17, scope: !14070)
!14146 = !DILocation(line: 183, column: 3, scope: !14070)
!14147 = !DILocation(line: 183, column: 11, scope: !14070)
!14148 = !DILocation(line: 183, column: 30, scope: !14070)
!14149 = !DILocation(line: 183, column: 28, scope: !14070)
!14150 = !DILocation(line: 183, column: 36, scope: !14070)
!14151 = !DILocation(line: 183, column: 34, scope: !14070)
!14152 = !DILocation(line: 184, column: 10, scope: !14070)
!14153 = !DILocation(line: 184, column: 3, scope: !14070)
!14154 = !DILocation(line: 185, column: 2, scope: !14062)
!14155 = !DILocation(line: 186, column: 1, scope: !14062)
!14156 = distinct !DISubprogram(name: "te_prof_sample_event_lookahead", scope: !5374, file: !5374, line: 269, type: !14157, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{!389, !1347, !387}
!14159 = !{!14160, !14161}
!14160 = !DILocalVariable(name: "tsd", arg: 1, scope: !14156, file: !5374, line: 269, type: !1347)
!14161 = !DILocalVariable(name: "usize", arg: 2, scope: !14156, file: !5374, line: 269, type: !387)
!14162 = !DILocation(line: 269, column: 39, scope: !14156)
!14163 = !DILocation(line: 269, column: 51, scope: !14156)
!14164 = !DILocation(line: 270, column: 48, scope: !14156)
!14165 = !DILocation(line: 270, column: 53, scope: !14156)
!14166 = !DILocation(line: 270, column: 9, scope: !14156)
!14167 = !DILocation(line: 270, column: 2, scope: !14156)
!14168 = distinct !DISubprogram(name: "te_prof_sample_event_lookahead_surplus", scope: !5374, file: !5374, line: 239, type: !14169, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14171)
!14169 = !DISubroutineType(types: !14170)
!14170 = !{!389, !1347, !387, !556}
!14171 = !{!14172, !14173, !14174, !14175, !14176}
!14172 = !DILocalVariable(name: "tsd", arg: 1, scope: !14168, file: !5374, line: 239, type: !1347)
!14173 = !DILocalVariable(name: "usize", arg: 2, scope: !14168, file: !5374, line: 239, type: !387)
!14174 = !DILocalVariable(name: "surplus", arg: 3, scope: !14168, file: !5374, line: 240, type: !556)
!14175 = !DILocalVariable(name: "accumbytes", scope: !14168, file: !5374, line: 255, type: !408)
!14176 = !DILocalVariable(name: "sample_wait", scope: !14168, file: !5374, line: 257, type: !408)
!14177 = !DILocation(line: 239, column: 47, scope: !14168)
!14178 = !DILocation(line: 239, column: 59, scope: !14168)
!14179 = !DILocation(line: 240, column: 13, scope: !14168)
!14180 = !DILocation(line: 241, column: 6, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14168, file: !5374, line: 241, column: 6)
!14182 = !DILocation(line: 241, column: 14, scope: !14181)
!14183 = !DILocation(line: 241, column: 6, scope: !14168)
!14184 = !DILocation(line: 249, column: 4, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14181, file: !5374, line: 241, column: 23)
!14186 = !DILocation(line: 249, column: 12, scope: !14185)
!14187 = !DILocation(line: 250, column: 2, scope: !14185)
!14188 = !DILocation(line: 251, column: 6, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14168, file: !5374, line: 251, column: 6)
!14190 = !DILocation(line: 251, column: 6, scope: !14168)
!14191 = !DILocation(line: 252, column: 3, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14189, file: !5374, line: 251, column: 72)
!14193 = !DILocation(line: 255, column: 2, scope: !14168)
!14194 = !DILocation(line: 255, column: 11, scope: !14168)
!14195 = !DILocation(line: 255, column: 49, scope: !14168)
!14196 = !DILocation(line: 255, column: 24, scope: !14168)
!14197 = !DILocation(line: 255, column: 56, scope: !14168)
!14198 = !DILocation(line: 255, column: 54, scope: !14168)
!14199 = !DILocation(line: 256, column: 42, scope: !14168)
!14200 = !DILocation(line: 256, column: 6, scope: !14168)
!14201 = !DILocation(line: 255, column: 62, scope: !14168)
!14202 = !DILocation(line: 257, column: 2, scope: !14168)
!14203 = !DILocation(line: 257, column: 11, scope: !14168)
!14204 = !DILocation(line: 257, column: 56, scope: !14168)
!14205 = !DILocation(line: 257, column: 25, scope: !14168)
!14206 = !DILocation(line: 258, column: 6, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14168, file: !5374, line: 258, column: 6)
!14208 = !DILocation(line: 258, column: 19, scope: !14207)
!14209 = !DILocation(line: 258, column: 17, scope: !14207)
!14210 = !DILocation(line: 258, column: 6, scope: !14168)
!14211 = !DILocation(line: 259, column: 3, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14207, file: !5374, line: 258, column: 32)
!14213 = !DILocation(line: 261, column: 2, scope: !14168)
!14214 = !DILocation(line: 261, column: 2, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14168, file: !5374, line: 261, column: 2)
!14216 = !DILocation(line: 262, column: 6, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14168, file: !5374, line: 262, column: 6)
!14218 = !DILocation(line: 262, column: 14, scope: !14217)
!14219 = !DILocation(line: 262, column: 6, scope: !14168)
!14220 = !DILocation(line: 263, column: 23, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14217, file: !5374, line: 262, column: 23)
!14222 = !DILocation(line: 263, column: 36, scope: !14221)
!14223 = !DILocation(line: 263, column: 34, scope: !14221)
!14224 = !DILocation(line: 263, column: 4, scope: !14221)
!14225 = !DILocation(line: 263, column: 12, scope: !14221)
!14226 = !DILocation(line: 264, column: 2, scope: !14221)
!14227 = !DILocation(line: 265, column: 2, scope: !14168)
!14228 = !DILocation(line: 266, column: 1, scope: !14168)
!14229 = distinct !DISubprogram(name: "tsd_nominal", scope: !145, file: !145, line: 452, type: !4228, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14230)
!14230 = !{!14231, !14232}
!14231 = !DILocalVariable(name: "tsd", arg: 1, scope: !14229, file: !145, line: 452, type: !1347)
!14232 = !DILocalVariable(name: "nominal", scope: !14229, file: !145, line: 453, type: !389)
!14233 = !DILocation(line: 452, column: 20, scope: !14229)
!14234 = !DILocation(line: 453, column: 2, scope: !14229)
!14235 = !DILocation(line: 453, column: 7, scope: !14229)
!14236 = !DILocation(line: 453, column: 31, scope: !14229)
!14237 = !DILocation(line: 453, column: 17, scope: !14229)
!14238 = !DILocation(line: 453, column: 36, scope: !14229)
!14239 = !DILocation(line: 454, column: 2, scope: !14229)
!14240 = !DILocation(line: 454, column: 2, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14229, file: !145, line: 454, column: 2)
!14242 = !DILocation(line: 456, column: 9, scope: !14229)
!14243 = !DILocation(line: 457, column: 1, scope: !14229)
!14244 = !DILocation(line: 456, column: 2, scope: !14229)
!14245 = distinct !DISubprogram(name: "tsd_thread_allocated_get", scope: !145, file: !145, line: 374, type: !14246, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14248)
!14246 = !DISubroutineType(types: !14247)
!14247 = !{!408, !1347}
!14248 = !{!14249}
!14249 = !DILocalVariable(name: "tsd", arg: 1, scope: !14245, file: !145, line: 374, type: !1347)
!14250 = !DILocation(line: 374, column: 1, scope: !14245)
!14251 = distinct !DISubprogram(name: "tsd_thread_allocated_last_event_get", scope: !145, file: !145, line: 373, type: !14246, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14252)
!14252 = !{!14253}
!14253 = !DILocalVariable(name: "tsd", arg: 1, scope: !14251, file: !145, line: 373, type: !1347)
!14254 = !DILocation(line: 373, column: 1, scope: !14251)
!14255 = distinct !DISubprogram(name: "tsd_prof_sample_event_wait_get", scope: !145, file: !145, line: 373, type: !14246, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14256)
!14256 = !{!14257}
!14257 = !DILocalVariable(name: "tsd", arg: 1, scope: !14255, file: !145, line: 373, type: !1347)
!14258 = !DILocation(line: 373, column: 1, scope: !14255)
!14259 = distinct !DISubprogram(name: "tsd_prof_sample_event_waitp_get", scope: !145, file: !145, line: 344, type: !11861, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14260)
!14260 = !{!14261, !14262}
!14261 = !DILocalVariable(name: "tsd", arg: 1, scope: !14259, file: !145, line: 344, type: !1347)
!14262 = !DILocalVariable(name: "state", scope: !14259, file: !145, line: 344, type: !730)
!14263 = !DILocation(line: 344, column: 1, scope: !14259)
!14264 = !DILocation(line: 344, column: 1, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14259, file: !145, line: 344, column: 1)
!14266 = distinct !DISubprogram(name: "tsd_prof_sample_event_waitp_get_unsafe", scope: !145, file: !145, line: 323, type: !11861, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14267)
!14267 = !{!14268}
!14268 = !DILocalVariable(name: "tsd", arg: 1, scope: !14266, file: !145, line: 323, type: !1347)
!14269 = !DILocation(line: 323, column: 1, scope: !14266)
!14270 = distinct !DISubprogram(name: "arena_choose_impl", scope: !6502, file: !6502, line: 32, type: !14271, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14273)
!14271 = !DISubroutineType(types: !14272)
!14272 = !{!594, !1347, !594, !389}
!14273 = !{!14274, !14275, !14276, !14277, !14278, !14283, !14284}
!14274 = !DILocalVariable(name: "tsd", arg: 1, scope: !14270, file: !6502, line: 32, type: !1347)
!14275 = !DILocalVariable(name: "arena", arg: 2, scope: !14270, file: !6502, line: 32, type: !594)
!14276 = !DILocalVariable(name: "internal", arg: 3, scope: !14270, file: !6502, line: 32, type: !389)
!14277 = !DILocalVariable(name: "ret", scope: !14270, file: !6502, line: 33, type: !594)
!14278 = !DILocalVariable(name: "tcache_slow", scope: !14279, file: !6502, line: 49, type: !684)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !6502, line: 48, column: 30)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !6502, line: 48, column: 7)
!14281 = distinct !DILexicalBlock(scope: !14282, file: !6502, line: 45, column: 29)
!14282 = distinct !DILexicalBlock(scope: !14270, file: !6502, line: 45, column: 6)
!14283 = !DILocalVariable(name: "tcache", scope: !14279, file: !6502, line: 50, type: !740)
!14284 = !DILocalVariable(name: "ind", scope: !14285, file: !6502, line: 75, type: !7)
!14285 = distinct !DILexicalBlock(scope: !14286, file: !6502, line: 74, column: 22)
!14286 = distinct !DILexicalBlock(scope: !14270, file: !6502, line: 71, column: 6)
!14287 = !DILocation(line: 32, column: 26, scope: !14270)
!14288 = !DILocation(line: 32, column: 40, scope: !14270)
!14289 = !DILocation(line: 32, column: 52, scope: !14270)
!14290 = !DILocation(line: 33, column: 2, scope: !14270)
!14291 = !DILocation(line: 33, column: 11, scope: !14270)
!14292 = !DILocation(line: 35, column: 6, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14270, file: !6502, line: 35, column: 6)
!14294 = !DILocation(line: 35, column: 12, scope: !14293)
!14295 = !DILocation(line: 35, column: 6, scope: !14270)
!14296 = !DILocation(line: 36, column: 10, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14293, file: !6502, line: 35, column: 21)
!14298 = !DILocation(line: 36, column: 3, scope: !14297)
!14299 = !DILocation(line: 40, column: 6, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14270, file: !6502, line: 40, column: 6)
!14301 = !DILocation(line: 40, column: 6, scope: !14270)
!14302 = !DILocation(line: 41, column: 29, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14300, file: !6502, line: 40, column: 51)
!14304 = !DILocation(line: 41, column: 20, scope: !14303)
!14305 = !DILocation(line: 41, column: 10, scope: !14303)
!14306 = !DILocation(line: 41, column: 3, scope: !14303)
!14307 = !DILocation(line: 44, column: 8, scope: !14270)
!14308 = !DILocation(line: 44, column: 34, scope: !14270)
!14309 = !DILocation(line: 44, column: 19, scope: !14270)
!14310 = !DILocation(line: 44, column: 55, scope: !14270)
!14311 = !DILocation(line: 44, column: 41, scope: !14270)
!14312 = !DILocation(line: 44, column: 6, scope: !14270)
!14313 = !DILocation(line: 45, column: 6, scope: !14282)
!14314 = !DILocation(line: 45, column: 6, scope: !14270)
!14315 = !DILocation(line: 46, column: 27, scope: !14281)
!14316 = !DILocation(line: 46, column: 32, scope: !14281)
!14317 = !DILocation(line: 46, column: 9, scope: !14281)
!14318 = !DILocation(line: 46, column: 7, scope: !14281)
!14319 = !DILocation(line: 47, column: 3, scope: !14281)
!14320 = !DILocation(line: 47, column: 3, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14281, file: !6502, line: 47, column: 3)
!14322 = !DILocation(line: 48, column: 24, scope: !14280)
!14323 = !DILocation(line: 48, column: 7, scope: !14280)
!14324 = !DILocation(line: 48, column: 7, scope: !14281)
!14325 = !DILocation(line: 49, column: 4, scope: !14279)
!14326 = !DILocation(line: 49, column: 19, scope: !14279)
!14327 = !DILocation(line: 49, column: 54, scope: !14279)
!14328 = !DILocation(line: 49, column: 33, scope: !14279)
!14329 = !DILocation(line: 50, column: 4, scope: !14279)
!14330 = !DILocation(line: 50, column: 14, scope: !14279)
!14331 = !DILocation(line: 50, column: 39, scope: !14279)
!14332 = !DILocation(line: 50, column: 23, scope: !14279)
!14333 = !DILocation(line: 51, column: 8, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14279, file: !6502, line: 51, column: 8)
!14335 = !DILocation(line: 51, column: 21, scope: !14334)
!14336 = !{!7280, !2659, i64 40}
!14337 = !DILocation(line: 51, column: 27, scope: !14334)
!14338 = !DILocation(line: 51, column: 8, scope: !14279)
!14339 = !DILocation(line: 53, column: 5, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14334, file: !6502, line: 51, column: 36)
!14341 = !DILocation(line: 53, column: 5, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14340, file: !6502, line: 53, column: 5)
!14343 = !DILocation(line: 55, column: 9, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14340, file: !6502, line: 55, column: 9)
!14345 = !DILocation(line: 55, column: 22, scope: !14344)
!14346 = !DILocation(line: 55, column: 31, scope: !14344)
!14347 = !DILocation(line: 55, column: 28, scope: !14344)
!14348 = !DILocation(line: 55, column: 9, scope: !14340)
!14349 = !DILocation(line: 56, column: 40, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14344, file: !6502, line: 55, column: 36)
!14351 = !DILocation(line: 56, column: 31, scope: !14350)
!14352 = !DILocation(line: 57, column: 10, scope: !14350)
!14353 = !DILocation(line: 57, column: 23, scope: !14350)
!14354 = !DILocation(line: 57, column: 31, scope: !14350)
!14355 = !DILocation(line: 56, column: 6, scope: !14350)
!14356 = !DILocation(line: 58, column: 5, scope: !14350)
!14357 = !DILocation(line: 59, column: 4, scope: !14340)
!14358 = !DILocation(line: 60, column: 37, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14334, file: !6502, line: 59, column: 11)
!14360 = !DILocation(line: 60, column: 28, scope: !14359)
!14361 = !DILocation(line: 61, column: 9, scope: !14359)
!14362 = !DILocation(line: 61, column: 22, scope: !14359)
!14363 = !DILocation(line: 61, column: 30, scope: !14359)
!14364 = !DILocation(line: 60, column: 5, scope: !14359)
!14365 = !DILocation(line: 63, column: 3, scope: !14280)
!14366 = !DILocation(line: 63, column: 3, scope: !14279)
!14367 = !DILocation(line: 64, column: 2, scope: !14281)
!14368 = !DILocation(line: 71, column: 27, scope: !14286)
!14369 = !DILocation(line: 71, column: 66, scope: !14286)
!14370 = !DILocation(line: 72, column: 7, scope: !14286)
!14371 = !DILocation(line: 72, column: 16, scope: !14286)
!14372 = !DILocation(line: 72, column: 34, scope: !14286)
!14373 = !DILocation(line: 72, column: 20, scope: !14286)
!14374 = !DILocation(line: 73, column: 29, scope: !14286)
!14375 = !DILocation(line: 73, column: 6, scope: !14286)
!14376 = !DILocation(line: 72, column: 39, scope: !14286)
!14377 = !DILocation(line: 73, column: 48, scope: !14286)
!14378 = !DILocation(line: 73, column: 52, scope: !14286)
!14379 = !DILocation(line: 73, column: 57, scope: !14286)
!14380 = !{!3556, !2659, i64 16}
!14381 = !DILocation(line: 74, column: 15, scope: !14286)
!14382 = !DILocation(line: 74, column: 6, scope: !14286)
!14383 = !DILocation(line: 73, column: 66, scope: !14286)
!14384 = !DILocation(line: 71, column: 6, scope: !14270)
!14385 = !DILocation(line: 75, column: 3, scope: !14285)
!14386 = !DILocation(line: 75, column: 12, scope: !14285)
!14387 = !DILocation(line: 75, column: 18, scope: !14285)
!14388 = !DILocation(line: 76, column: 21, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14285, file: !6502, line: 76, column: 7)
!14390 = !DILocation(line: 76, column: 7, scope: !14389)
!14391 = !DILocation(line: 76, column: 29, scope: !14389)
!14392 = !DILocation(line: 76, column: 26, scope: !14389)
!14393 = !DILocation(line: 76, column: 7, scope: !14285)
!14394 = !DILocation(line: 77, column: 24, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14389, file: !6502, line: 76, column: 34)
!14396 = !DILocation(line: 77, column: 29, scope: !14395)
!14397 = !DILocation(line: 77, column: 4, scope: !14395)
!14398 = !DILocation(line: 78, column: 24, scope: !14395)
!14399 = !DILocation(line: 78, column: 10, scope: !14395)
!14400 = !DILocation(line: 78, column: 8, scope: !14395)
!14401 = !DILocation(line: 79, column: 3, scope: !14395)
!14402 = !DILocation(line: 80, column: 28, scope: !14285)
!14403 = !DILocation(line: 80, column: 19, scope: !14285)
!14404 = !DILocation(line: 80, column: 3, scope: !14285)
!14405 = !DILocation(line: 80, column: 8, scope: !14285)
!14406 = !DILocation(line: 80, column: 17, scope: !14285)
!14407 = !DILocation(line: 81, column: 2, scope: !14286)
!14408 = !DILocation(line: 81, column: 2, scope: !14285)
!14409 = !DILocation(line: 83, column: 9, scope: !14270)
!14410 = !DILocation(line: 83, column: 2, scope: !14270)
!14411 = !DILocation(line: 84, column: 1, scope: !14270)
!14412 = distinct !DISubprogram(name: "tsd_tcache_slowp_get", scope: !145, file: !145, line: 344, type: !14413, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!684, !1347}
!14415 = !{!14416, !14417}
!14416 = !DILocalVariable(name: "tsd", arg: 1, scope: !14412, file: !145, line: 344, type: !1347)
!14417 = !DILocalVariable(name: "state", scope: !14412, file: !145, line: 344, type: !730)
!14418 = !DILocation(line: 344, column: 1, scope: !14412)
!14419 = !DILocation(line: 344, column: 1, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14412, file: !145, line: 344, column: 1)
!14421 = !DISubprogram(name: "tcache_arena_reassociate", scope: !6724, file: !6724, line: 47, type: !14422, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{null, !391, !684, !740, !594}
!14424 = !DISubprogram(name: "tcache_arena_associate", scope: !6724, file: !6724, line: 56, type: !14422, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14425 = distinct !DISubprogram(name: "percpu_arena_update", scope: !6502, file: !6502, line: 7, type: !14426, scopeLine: 7, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14428)
!14426 = !DISubroutineType(types: !14427)
!14427 = !{null, !1347, !7}
!14428 = !{!14429, !14430, !14431, !14432, !14433, !14436, !14437, !14438}
!14429 = !DILocalVariable(name: "tsd", arg: 1, scope: !14425, file: !6502, line: 7, type: !1347)
!14430 = !DILocalVariable(name: "cpu", arg: 2, scope: !14425, file: !6502, line: 7, type: !7)
!14431 = !DILocalVariable(name: "oldarena", scope: !14425, file: !6502, line: 9, type: !594)
!14432 = !DILocalVariable(name: "oldind", scope: !14425, file: !6502, line: 11, type: !7)
!14433 = !DILocalVariable(name: "newind", scope: !14434, file: !6502, line: 14, type: !7)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !6502, line: 13, column: 21)
!14435 = distinct !DILexicalBlock(scope: !14425, file: !6502, line: 13, column: 6)
!14436 = !DILocalVariable(name: "newarena", scope: !14434, file: !6502, line: 15, type: !594)
!14437 = !DILocalVariable(name: "tcache", scope: !14434, file: !6502, line: 20, type: !740)
!14438 = !DILocalVariable(name: "tcache_slow", scope: !14439, file: !6502, line: 22, type: !684)
!14439 = distinct !DILexicalBlock(scope: !14440, file: !6502, line: 21, column: 23)
!14440 = distinct !DILexicalBlock(scope: !14434, file: !6502, line: 21, column: 7)
!14441 = !DILocation(line: 7, column: 28, scope: !14425)
!14442 = !DILocation(line: 7, column: 42, scope: !14425)
!14443 = !DILocation(line: 8, column: 2, scope: !14425)
!14444 = !DILocation(line: 8, column: 2, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14425, file: !6502, line: 8, column: 2)
!14446 = !DILocation(line: 9, column: 2, scope: !14425)
!14447 = !DILocation(line: 9, column: 11, scope: !14425)
!14448 = !DILocation(line: 9, column: 36, scope: !14425)
!14449 = !DILocation(line: 9, column: 22, scope: !14425)
!14450 = !DILocation(line: 10, column: 2, scope: !14425)
!14451 = !DILocation(line: 10, column: 2, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14425, file: !6502, line: 10, column: 2)
!14453 = !DILocation(line: 11, column: 2, scope: !14425)
!14454 = !DILocation(line: 11, column: 11, scope: !14425)
!14455 = !DILocation(line: 11, column: 34, scope: !14425)
!14456 = !DILocation(line: 11, column: 20, scope: !14425)
!14457 = !DILocation(line: 13, column: 6, scope: !14435)
!14458 = !DILocation(line: 13, column: 16, scope: !14435)
!14459 = !DILocation(line: 13, column: 13, scope: !14435)
!14460 = !DILocation(line: 13, column: 6, scope: !14425)
!14461 = !DILocation(line: 14, column: 3, scope: !14434)
!14462 = !DILocation(line: 14, column: 12, scope: !14434)
!14463 = !DILocation(line: 14, column: 21, scope: !14434)
!14464 = !DILocation(line: 15, column: 3, scope: !14434)
!14465 = !DILocation(line: 15, column: 12, scope: !14434)
!14466 = !DILocation(line: 15, column: 42, scope: !14434)
!14467 = !DILocation(line: 15, column: 33, scope: !14434)
!14468 = !DILocation(line: 15, column: 48, scope: !14434)
!14469 = !DILocation(line: 15, column: 23, scope: !14434)
!14470 = !DILocation(line: 16, column: 3, scope: !14434)
!14471 = !DILocation(line: 16, column: 3, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14434, file: !6502, line: 16, column: 3)
!14473 = !DILocation(line: 19, column: 17, scope: !14434)
!14474 = !DILocation(line: 19, column: 22, scope: !14434)
!14475 = !DILocation(line: 19, column: 32, scope: !14434)
!14476 = !DILocation(line: 19, column: 3, scope: !14434)
!14477 = !DILocation(line: 20, column: 3, scope: !14434)
!14478 = !DILocation(line: 20, column: 13, scope: !14434)
!14479 = !DILocation(line: 20, column: 33, scope: !14434)
!14480 = !DILocation(line: 20, column: 22, scope: !14434)
!14481 = !DILocation(line: 21, column: 7, scope: !14440)
!14482 = !DILocation(line: 21, column: 14, scope: !14440)
!14483 = !DILocation(line: 21, column: 7, scope: !14434)
!14484 = !DILocation(line: 22, column: 4, scope: !14439)
!14485 = !DILocation(line: 22, column: 19, scope: !14439)
!14486 = !DILocation(line: 22, column: 54, scope: !14439)
!14487 = !DILocation(line: 22, column: 33, scope: !14439)
!14488 = !DILocation(line: 23, column: 38, scope: !14439)
!14489 = !DILocation(line: 23, column: 29, scope: !14439)
!14490 = !DILocation(line: 23, column: 44, scope: !14439)
!14491 = !DILocation(line: 24, column: 8, scope: !14439)
!14492 = !DILocation(line: 24, column: 16, scope: !14439)
!14493 = !DILocation(line: 23, column: 4, scope: !14439)
!14494 = !DILocation(line: 25, column: 3, scope: !14440)
!14495 = !DILocation(line: 25, column: 3, scope: !14439)
!14496 = !DILocation(line: 26, column: 2, scope: !14435)
!14497 = !DILocation(line: 26, column: 2, scope: !14434)
!14498 = !DILocation(line: 27, column: 1, scope: !14425)
!14499 = distinct !DISubprogram(name: "tsd_tcache_slowp_get_unsafe", scope: !145, file: !145, line: 323, type: !14413, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14500)
!14500 = !{!14501}
!14501 = !DILocalVariable(name: "tsd", arg: 1, scope: !14499, file: !145, line: 323, type: !1347)
!14502 = !DILocation(line: 323, column: 1, scope: !14499)
!14503 = distinct !DISubprogram(name: "cache_bin_ncached_get_internal", scope: !697, file: !697, line: 215, type: !14504, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14506)
!14504 = !DISubroutineType(types: !14505)
!14505 = !{!1427, !707, !389}
!14506 = !{!14507, !14508, !14509, !14510}
!14507 = !DILocalVariable(name: "bin", arg: 1, scope: !14503, file: !697, line: 215, type: !707)
!14508 = !DILocalVariable(name: "racy", arg: 2, scope: !14503, file: !697, line: 215, type: !389)
!14509 = !DILocalVariable(name: "diff", scope: !14503, file: !697, line: 216, type: !1427)
!14510 = !DILocalVariable(name: "n", scope: !14503, file: !697, line: 218, type: !1427)
!14511 = !DILocation(line: 215, column: 45, scope: !14503)
!14512 = !DILocation(line: 215, column: 55, scope: !14503)
!14513 = !DILocation(line: 216, column: 2, scope: !14503)
!14514 = !DILocation(line: 216, column: 17, scope: !14503)
!14515 = !DILocation(line: 216, column: 39, scope: !14503)
!14516 = !DILocation(line: 217, column: 27, scope: !14503)
!14517 = !DILocation(line: 217, column: 32, scope: !14503)
!14518 = !DILocation(line: 217, column: 16, scope: !14503)
!14519 = !DILocation(line: 217, column: 6, scope: !14503)
!14520 = !DILocation(line: 217, column: 44, scope: !14503)
!14521 = !DILocation(line: 217, column: 49, scope: !14503)
!14522 = !DILocation(line: 217, column: 65, scope: !14503)
!14523 = !DILocation(line: 216, column: 24, scope: !14503)
!14524 = !DILocation(line: 218, column: 2, scope: !14503)
!14525 = !DILocation(line: 218, column: 17, scope: !14503)
!14526 = !DILocation(line: 218, column: 21, scope: !14503)
!14527 = !DILocation(line: 218, column: 26, scope: !14503)
!14528 = !DILocation(line: 228, column: 2, scope: !14503)
!14529 = !DILocation(line: 228, column: 2, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14503, file: !697, line: 228, column: 2)
!14531 = !DILocation(line: 229, column: 9, scope: !14503)
!14532 = !DILocation(line: 230, column: 1, scope: !14503)
!14533 = !DILocation(line: 229, column: 2, scope: !14503)
!14534 = distinct !DISubprogram(name: "cache_bin_low_water_adjust", scope: !697, file: !697, line: 340, type: !14535, scopeLine: 340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14537)
!14535 = !DISubroutineType(types: !14536)
!14536 = !{null, !707}
!14537 = !{!14538}
!14538 = !DILocalVariable(name: "bin", arg: 1, scope: !14534, file: !697, line: 340, type: !707)
!14539 = !DILocation(line: 340, column: 41, scope: !14534)
!14540 = !DILocation(line: 341, column: 37, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14534, file: !697, line: 341, column: 6)
!14542 = !DILocation(line: 341, column: 6, scope: !14541)
!14543 = !DILocation(line: 342, column: 41, scope: !14541)
!14544 = !DILocation(line: 342, column: 8, scope: !14541)
!14545 = !DILocation(line: 342, column: 6, scope: !14541)
!14546 = !DILocation(line: 341, column: 6, scope: !14534)
!14547 = !DILocation(line: 343, column: 27, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14541, file: !697, line: 342, column: 47)
!14549 = !DILocation(line: 343, column: 3, scope: !14548)
!14550 = !DILocation(line: 344, column: 2, scope: !14548)
!14551 = !DILocation(line: 345, column: 1, scope: !14534)
!14552 = distinct !DISubprogram(name: "cache_bin_low_water_get_internal", scope: !697, file: !697, line: 312, type: !14553, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14555)
!14553 = !DISubroutineType(types: !14554)
!14554 = !{!1427, !707}
!14555 = !{!14556}
!14556 = !DILocalVariable(name: "bin", arg: 1, scope: !14552, file: !697, line: 312, type: !707)
!14557 = !DILocation(line: 312, column: 47, scope: !14552)
!14558 = !DILocation(line: 313, column: 24, scope: !14552)
!14559 = !DILocation(line: 313, column: 29, scope: !14552)
!14560 = !DILocation(line: 313, column: 34, scope: !14552)
!14561 = !DILocation(line: 314, column: 6, scope: !14552)
!14562 = !DILocation(line: 314, column: 11, scope: !14552)
!14563 = !DILocation(line: 313, column: 9, scope: !14552)
!14564 = !DILocation(line: 314, column: 45, scope: !14552)
!14565 = !DILocation(line: 313, column: 2, scope: !14552)
!14566 = distinct !DISubprogram(name: "cache_bin_low_water_set", scope: !697, file: !697, line: 335, type: !14535, scopeLine: 335, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14567)
!14567 = !{!14568}
!14568 = !DILocalVariable(name: "bin", arg: 1, scope: !14566, file: !697, line: 335, type: !707)
!14569 = !DILocation(line: 335, column: 38, scope: !14566)
!14570 = !DILocation(line: 336, column: 49, scope: !14566)
!14571 = !DILocation(line: 336, column: 54, scope: !14566)
!14572 = !DILocation(line: 336, column: 38, scope: !14566)
!14573 = !DILocation(line: 336, column: 28, scope: !14566)
!14574 = !DILocation(line: 336, column: 2, scope: !14566)
!14575 = !DILocation(line: 336, column: 7, scope: !14566)
!14576 = !DILocation(line: 336, column: 26, scope: !14566)
!14577 = !DILocation(line: 337, column: 1, scope: !14566)

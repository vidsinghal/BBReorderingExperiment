; ModuleID = 'samples/917.bc'
source_filename = "mod_dav.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.module_struct = type { i32, i32, i32, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.command_struct = type { ptr, %union.cmd_func, ptr, i32, i32, ptr }
%union.cmd_func = type { ptr }
%struct.anon.0 = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.apr_bucket_type_t = type { ptr, i32, i32, ptr, ptr, ptr, ptr, ptr }
%struct.request_rec = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, i64, ptr, i32, i32, ptr, i64, ptr, ptr, i64, i64, i64, ptr, i64, i32, i32, i32, i32, ptr, ptr, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, %struct.apr_uri_t, %struct.apr_finfo_t, ptr, ptr, ptr, ptr, ptr, i32, i64 }
%struct.apr_uri_t = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i8 }
%struct.apr_finfo_t = type { ptr, i32, i32, i32, i32, i32, i64, i64, i32, i64, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.dav_dir_conf = type { ptr, ptr, ptr, i32, i32, i32 }
%struct.dav_provider = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dav_response = type { ptr, ptr, %struct.dav_get_props_result, i32, ptr }
%struct.dav_get_props_result = type { ptr, ptr }
%struct.apr_text = type { ptr, ptr }
%struct.apr_array_header_t = type { ptr, i32, i32, i32, ptr }
%struct.conn_rec = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, i32, i32, i32, ptr, ptr, ptr, ptr, i32 }
%struct.apr_bucket_brigade = type { ptr, %struct.apr_bucket_list, ptr }
%struct.apr_bucket_list = type { ptr, ptr }
%struct.apr_bucket = type { %struct.anon, ptr, i64, i64, ptr, ptr, ptr }
%struct.anon = type { ptr, ptr }
%struct.dav_error = type { i32, i32, ptr, i32, ptr, ptr, ptr, ptr }
%struct.server_rec = type { ptr, ptr, ptr, ptr, %struct.ap_logconf, ptr, ptr, ptr, i32, i8, i16, ptr, ptr, ptr, ptr, i64, i64, i32, i32, ptr, ptr, ptr, i32, i32, i32, i32, ptr, i8 }
%struct.ap_logconf = type { ptr, i32 }
%struct.dav_hooks_repository = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dav_hooks_locks = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dav_lockdb = type { ptr, i32, ptr }
%struct.dav_walk_resource = type { ptr, ptr, ptr, ptr }
%struct.dav_resource = type { i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr }
%struct.apr_text_header = type { ptr, ptr }
%struct.dav_prop_ctx = type { ptr, ptr, i32, i32, ptr, ptr, ptr, ptr }
%struct.dav_LINK_gather_propsets_t = type { ptr, ptr, ptr, ptr, i32 }
%struct.dav_LINK_find_liveprop_t = type { ptr, ptr, ptr, ptr, i32 }
%struct.dav_LINK_insert_all_liveprops_t = type { ptr, ptr, ptr, ptr, i32 }
%struct.dav_LINK_deliver_report_t = type { ptr, ptr, ptr, ptr, i32 }
%struct.dav_LINK_gather_reports_t = type { ptr, ptr, ptr, ptr, i32 }
%struct.dav_LINK_method_precondition_t = type { ptr, ptr, ptr, ptr, i32 }
%struct.cmd_parms_struct = type { ptr, i32, i32, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dav_hooks_vsn = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dav_report_elem = type { ptr, ptr }
%struct.dav_auto_version_info = type { i32, i32, i32, ptr }
%struct.ap_list_provider_names_t = type { ptr }
%struct.dav_options_provider = type { ptr, ptr, ptr }
%struct.dav_hooks_binding = type { ptr, ptr, ptr }
%struct.apr_table_entry_t = type { ptr, ptr, i32 }
%struct.dav_hooks_search = type { ptr, ptr, ptr }
%struct.apr_xml_doc = type { ptr, ptr }
%struct.apr_xml_elem = type { ptr, i32, ptr, %struct.apr_text_header, %struct.apr_text_header, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dav_walker_ctx = type { %struct.dav_walk_params, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, i32, i32, %struct.dav_buffer }
%struct.dav_walk_params = type { i32, ptr, ptr, ptr, ptr, ptr }
%struct.dav_buffer = type { i64, i64, ptr }
%struct.dav_lookup_result = type { ptr, %struct.dav_error }
%struct.dav_lock = type { i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, ptr, ptr }
%struct.dav_label_walker_ctx = type { %struct.dav_walk_params, ptr, ptr, i32, ptr }
%struct.apr_xml_attr = type { ptr, i32, ptr, ptr }

@dav_module = global %struct.module_struct { i32 20120211, i32 126, i32 -1, ptr @.str.21, ptr null, ptr null, i64 1095774772, ptr null, ptr @dav_create_dir_config, ptr @dav_merge_dir_config, ptr @dav_create_server_config, ptr @dav_merge_server_config, ptr @dav_cmds, ptr @register_hooks, i32 0 }, align 8, !dbg !0
@.str = private unnamed_addr constant [13 x i8] c"<D:response>\00", align 1, !dbg !1342
@.str.1 = private unnamed_addr constant [12 x i8] c"<D:response\00", align 1, !dbg !1347
@.str.2 = private unnamed_addr constant [10 x i8] c"\0A<D:href>\00", align 1, !dbg !1352
@.str.3 = private unnamed_addr constant [11 x i8] c"</D:href>\0A\00", align 1, !dbg !1357
@.str.4 = private unnamed_addr constant [20 x i8] c"<D:status>HTTP/1.1 \00", align 1, !dbg !1362
@.str.5 = private unnamed_addr constant [13 x i8] c"</D:status>\0A\00", align 1, !dbg !1367
@.str.6 = private unnamed_addr constant [24 x i8] c"<D:responsedescription>\00", align 1, !dbg !1369
@.str.7 = private unnamed_addr constant [26 x i8] c"</D:responsedescription>\0A\00", align 1, !dbg !1374
@.str.8 = private unnamed_addr constant [15 x i8] c"</D:response>\0A\00", align 1, !dbg !1379
@.str.9 = private unnamed_addr constant [26 x i8] c"text/xml; charset=\22utf-8\22\00", align 1, !dbg !1384
@.str.10 = private unnamed_addr constant [69 x i8] c"<?xml version=\221.0\22 encoding=\22utf-8\22?>\0A<D:multistatus xmlns:D=\22DAV:\22\00", align 1, !dbg !1386
@.str.11 = private unnamed_addr constant [17 x i8] c" xmlns:ns%d=\22%s\22\00", align 1, !dbg !1391
@.str.12 = private unnamed_addr constant [3 x i8] c">\0A\00", align 1, !dbg !1396
@.str.13 = private unnamed_addr constant [18 x i8] c"</D:multistatus>\0A\00", align 1, !dbg !1401
@.str.14 = private unnamed_addr constant [20 x i8] c"mod_dav-multistatus\00", align 1, !dbg !1406
@.str.15 = private unnamed_addr constant [17 x i8] c"verbose-error-to\00", align 1, !dbg !1408
@.str.16 = private unnamed_addr constant [2 x i8] c"*\00", align 1, !dbg !1410
@.str.17 = private unnamed_addr constant [6 x i8] c"Depth\00", align 1, !dbg !1415
@.str.18 = private unnamed_addr constant [9 x i8] c"infinity\00", align 1, !dbg !1420
@.str.19 = private unnamed_addr constant [2 x i8] c"0\00", align 1, !dbg !1425
@.str.20 = private unnamed_addr constant [2 x i8] c"1\00", align 1, !dbg !1427
@.str.21 = private unnamed_addr constant [10 x i8] c"mod_dav.c\00", align 1, !dbg !1429
@.str.22 = private unnamed_addr constant [48 x i8] c"AH00580: An invalid Depth header was specified.\00", align 1, !dbg !1434
@.str.23 = private unnamed_addr constant [6 x i8] c"label\00", align 1, !dbg !1439
@.str.24 = private unnamed_addr constant [23 x i8] c"DAV not enabled for %s\00", align 1, !dbg !1441
@.str.25 = private unnamed_addr constant [38 x i8] c"Could not fetch resource information.\00", align 1, !dbg !1446
@.str.26 = private unnamed_addr constant [47 x i8] c"The provider did not define a resource for %s.\00", align 1, !dbg !1451
@.str.27 = private unnamed_addr constant [22 x i8] c"<D:propstat>\0A<D:prop>\00", align 1, !dbg !1456
@.str.28 = private unnamed_addr constant [11 x i8] c"</D:prop>\0A\00", align 1, !dbg !1461
@.str.29 = private unnamed_addr constant [72 x i8] c"Attempted DAV:set operation could not be completed due to other errors.\00", align 1, !dbg !1463
@.str.30 = private unnamed_addr constant [75 x i8] c"Attempted DAV:remove operation could not be completed due to other errors.\00", align 1, !dbg !1468
@.str.31 = private unnamed_addr constant [43 x i8] c"<D:status>HTTP/1.1 %d (status)</D:status>\0A\00", align 1, !dbg !1473
@.str.32 = private unnamed_addr constant [25 x i8] c"<D:responsedescription>\0A\00", align 1, !dbg !1478
@.str.33 = private unnamed_addr constant [15 x i8] c"</D:propstat>\0A\00", align 1, !dbg !1483
@.str.34 = private unnamed_addr constant [23 x i8] c"<D:propstat>\0A<D:prop>\0A\00", align 1, !dbg !1485
@.str.35 = private unnamed_addr constant [62 x i8] c"</D:prop>\0A<D:status>HTTP/1.1 200 OK</D:status>\0A</D:propstat>\0A\00", align 1, !dbg !1487
@dav_cmds = internal constant [5 x %struct.command_struct] [%struct.command_struct { ptr @.str.53, %union.cmd_func { ptr @dav_cmd_dav }, ptr null, i32 64, i32 1, ptr @.str.54 }, %struct.command_struct { ptr @.str.55, %union.cmd_func { ptr @dav_cmd_davmintimeout }, ptr null, i32 192, i32 1, ptr @.str.56 }, %struct.command_struct { ptr @.str.57, %union.cmd_func { ptr @dav_cmd_davdepthinfinity }, ptr null, i32 192, i32 5, ptr @.str.58 }, %struct.command_struct { ptr @.str.59, %union.cmd_func { ptr @dav_cmd_davlockdiscovery }, ptr null, i32 192, i32 5, ptr @.str.60 }, %struct.command_struct zeroinitializer], align 16, !dbg !1587
@_hooks = internal global %struct.anon.0 zeroinitializer, align 8, !dbg !1511
@apr_hook_global_pool = external global ptr, align 8
@.str.36 = private unnamed_addr constant [16 x i8] c"gather_propsets\00", align 1, !dbg !1492
@apr_hook_debug_current = external global ptr, align 8
@apr_hook_debug_enabled = external global i32, align 4
@.str.37 = private unnamed_addr constant [14 x i8] c"find_liveprop\00", align 1, !dbg !1495
@.str.38 = private unnamed_addr constant [21 x i8] c"insert_all_liveprops\00", align 1, !dbg !1500
@.str.39 = private unnamed_addr constant [15 x i8] c"deliver_report\00", align 1, !dbg !1505
@.str.40 = private unnamed_addr constant [15 x i8] c"gather_reports\00", align 1, !dbg !1507
@.str.41 = private unnamed_addr constant [20 x i8] c"method_precondition\00", align 1, !dbg !1509
@.str.42 = private unnamed_addr constant [14 x i8] c"%s  [%d, #%d]\00", align 1, !dbg !1521
@.str.43 = private unnamed_addr constant [63 x i8] c"<?xml version=\221.0\22 encoding=\22utf-8\22?>\0A<D:error xmlns:D=\22DAV:\22\00", align 1, !dbg !1523
@.str.44 = private unnamed_addr constant [39 x i8] c" xmlns:m=\22http://apache.org/dav/xmlns\22\00", align 1, !dbg !1528
@.str.45 = private unnamed_addr constant [32 x i8] c" xmlns:C=\22%s\22>\0A<C:%s>%s</C:%s>\0A\00", align 1, !dbg !1533
@.str.46 = private unnamed_addr constant [19 x i8] c">\0A<D:%s>%s</D:%s>\0A\00", align 1, !dbg !1538
@.str.47 = private unnamed_addr constant [24 x i8] c" xmlns:C=\22%s\22>\0A<C:%s/>\0A\00", align 1, !dbg !1543
@.str.48 = private unnamed_addr constant [11 x i8] c">\0A<D:%s/>\0A\00", align 1, !dbg !1545
@.str.49 = private unnamed_addr constant [56 x i8] c"<m:human-readable errcode=\22%d\22>\0A%s\0A</m:human-readable>\0A\00", align 1, !dbg !1547
@.str.50 = private unnamed_addr constant [12 x i8] c"</D:error>\0A\00", align 1, !dbg !1552
@.str.51 = private unnamed_addr constant [83 x i8] c"AH00578: \22DAV Off\22 cannot be used to turn off a subtree of a DAV-enabled location.\00", align 1, !dbg !1554
@.str.52 = private unnamed_addr constant [76 x i8] c"AH00579: A subtree cannot specify a different DAV provider than its parent.\00", align 1, !dbg !1559
@.str.53 = private unnamed_addr constant [4 x i8] c"DAV\00", align 1, !dbg !1564
@.str.54 = private unnamed_addr constant [53 x i8] c"specify the DAV provider for a directory or location\00", align 1, !dbg !1567
@.str.55 = private unnamed_addr constant [14 x i8] c"DAVMinTimeout\00", align 1, !dbg !1572
@.str.56 = private unnamed_addr constant [32 x i8] c"specify minimum allowed timeout\00", align 1, !dbg !1574
@.str.57 = private unnamed_addr constant [17 x i8] c"DAVDepthInfinity\00", align 1, !dbg !1576
@.str.58 = private unnamed_addr constant [39 x i8] c"allow Depth infinity PROPFIND requests\00", align 1, !dbg !1578
@.str.59 = private unnamed_addr constant [17 x i8] c"DAVLockDiscovery\00", align 1, !dbg !1580
@.str.60 = private unnamed_addr constant [42 x i8] c"allow lock discovery by PROPFIND requests\00", align 1, !dbg !1582
@.str.61 = private unnamed_addr constant [3 x i8] c"on\00", align 1, !dbg !1689
@.str.62 = private unnamed_addr constant [11 x i8] c"filesystem\00", align 1, !dbg !1691
@.str.63 = private unnamed_addr constant [4 x i8] c"off\00", align 1, !dbg !1693
@.str.64 = private unnamed_addr constant [25 x i8] c"Unknown DAV provider: %s\00", align 1, !dbg !1695
@.str.65 = private unnamed_addr constant [47 x i8] c"DAVMinTimeout requires a non-negative integer.\00", align 1, !dbg !1697
@.str.66 = private unnamed_addr constant [12 x i8] c"dav-handler\00", align 1, !dbg !1699
@.str.67 = private unnamed_addr constant [58 x i8] c"AH00622: buggy client used un-escaped hash in Request-URI\00", align 1, !dbg !1701
@.str.68 = private unnamed_addr constant [71 x i8] c"The request was invalid: the URI included an un-escaped hash character\00", align 1, !dbg !1706
@dav_methods = internal global [2 x i32] zeroinitializer, align 4, !dbg !2342
@.str.69 = private unnamed_addr constant [30 x i8] c"text/html; charset=ISO-8859-1\00", align 1, !dbg !1711
@.str.70 = private unnamed_addr constant [113 x i8] c"<!DOCTYPE HTML PUBLIC \22-//W3C//DTD HTML 4.01//EN\22 \22http://www.w3.org/TR/html4/strict.dtd\22>\0A<html>\0A<head>\0A<title>\00", align 1, !dbg !1716
@.str.71 = private unnamed_addr constant [28 x i8] c"</title>\0A</head><body>\0A<h1>\00", align 1, !dbg !1721
@.str.72 = private unnamed_addr constant [10 x i8] c"</h1>\0A<p>\00", align 1, !dbg !1726
@.str.73 = private unnamed_addr constant [6 x i8] c"</p>\0A\00", align 1, !dbg !1728
@.str.74 = private unnamed_addr constant [8 x i8] c"<hr />\0A\00", align 1, !dbg !1730
@.str.75 = private unnamed_addr constant [16 x i8] c"</body></html>\0A\00", align 1, !dbg !1733
@.str.76 = private unnamed_addr constant [31 x i8] c"Unable to set up HTTP headers.\00", align 1, !dbg !1735
@.str.77 = private unnamed_addr constant [27 x i8] c"Unable to deliver content.\00", align 1, !dbg !1740
@.str.78 = private unnamed_addr constant [36 x i8] c"Cannot create resource %s with PUT.\00", align 1, !dbg !1745
@.str.79 = private unnamed_addr constant [28 x i8] c"Cannot PUT to a collection.\00", align 1, !dbg !1750
@.str.80 = private unnamed_addr constant [43 x i8] c"Malformed Content-Range header for PUT %s.\00", align 1, !dbg !1752
@.str.81 = private unnamed_addr constant [35 x i8] c"Unable to PUT new contents for %s.\00", align 1, !dbg !1754
@.str.82 = private unnamed_addr constant [59 x i8] c"An error occurred while reading the request body (URI: %s)\00", align 1, !dbg !1759
@apr_bucket_type_eos = external constant %struct.apr_bucket_type_t, align 8
@.str.83 = private unnamed_addr constant [75 x i8] c"An error occurred while reading the request body from the bucket (URI: %s)\00", align 1, !dbg !1764
@.str.84 = private unnamed_addr constant [113 x i8] c"The PUT was successful, but there was a problem automatically checking in the resource or its parent collection.\00", align 1, !dbg !1766
@.str.85 = private unnamed_addr constant [140 x i8] c"The file was PUT successfully, but there was a problem opening the lock database which prevents inheriting locks from the parent resources.\00", align 1, !dbg !1768
@.str.86 = private unnamed_addr constant [86 x i8] c"The file was PUT successfully, but there was a problem updating its lock information.\00", align 1, !dbg !1773
@.str.87 = private unnamed_addr constant [9 x i8] c"Resource\00", align 1, !dbg !1778
@.str.88 = private unnamed_addr constant [14 x i8] c"content-range\00", align 1, !dbg !1780
@.str.89 = private unnamed_addr constant [7 x i8] c"bytes \00", align 1, !dbg !1782
@.str.90 = private unnamed_addr constant [9 x i8] c"Location\00", align 1, !dbg !1787
@.str.91 = private unnamed_addr constant [2 x i8] c" \00", align 1, !dbg !1789
@.str.92 = private unnamed_addr constant [19 x i8] c" has been created.\00", align 1, !dbg !1791
@.str.93 = private unnamed_addr constant [62 x i8] c"AH00582: Depth must be \22infinity\22 for DELETE of a collection.\00", align 1, !dbg !1793
@.str.94 = private unnamed_addr constant [49 x i8] c"AH00583: Depth of \221\22 is not allowed for DELETE.\00", align 1, !dbg !1795
@.str.95 = private unnamed_addr constant [63 x i8] c"Could not DELETE %s due to a failed precondition (e.g. locks).\00", align 1, !dbg !1800
@.str.96 = private unnamed_addr constant [21 x i8] c"Could not DELETE %s.\00", align 1, !dbg !1802
@.str.97 = private unnamed_addr constant [100 x i8] c"The DELETE was successful, but there was a problem automatically checking in the parent collection.\00", align 1, !dbg !1804
@.str.98 = private unnamed_addr constant [8 x i8] c"options\00", align 1, !dbg !1809
@.str.99 = private unnamed_addr constant [46 x i8] c"AH00584: The \22options\22 element was not found.\00", align 1, !dbg !1811
@.str.100 = private unnamed_addr constant [4 x i8] c"1,2\00", align 1, !dbg !1816
@.str.101 = private unnamed_addr constant [10 x i8] c",bindings\00", align 1, !dbg !1818
@.str.102 = private unnamed_addr constant [12 x i8] c"dav_options\00", align 1, !dbg !1820
@.str.103 = private unnamed_addr constant [2 x i8] c",\00", align 1, !dbg !1822
@.str.104 = private unnamed_addr constant [14 x i8] c"MS-Author-Via\00", align 1, !dbg !1824
@.str.105 = private unnamed_addr constant [8 x i8] c"OPTIONS\00", align 1, !dbg !1826
@.str.106 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !1828
@.str.107 = private unnamed_addr constant [4 x i8] c"GET\00", align 1, !dbg !1833
@.str.108 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1, !dbg !1835
@.str.109 = private unnamed_addr constant [5 x i8] c"POST\00", align 1, !dbg !1838
@.str.110 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1, !dbg !1840
@.str.111 = private unnamed_addr constant [6 x i8] c"TRACE\00", align 1, !dbg !1842
@.str.112 = private unnamed_addr constant [9 x i8] c"PROPFIND\00", align 1, !dbg !1844
@.str.113 = private unnamed_addr constant [10 x i8] c"PROPPATCH\00", align 1, !dbg !1846
@.str.114 = private unnamed_addr constant [5 x i8] c"COPY\00", align 1, !dbg !1848
@.str.115 = private unnamed_addr constant [5 x i8] c"MOVE\00", align 1, !dbg !1850
@.str.116 = private unnamed_addr constant [4 x i8] c"PUT\00", align 1, !dbg !1852
@.str.117 = private unnamed_addr constant [5 x i8] c"LOCK\00", align 1, !dbg !1854
@.str.118 = private unnamed_addr constant [7 x i8] c"UNLOCK\00", align 1, !dbg !1856
@.str.119 = private unnamed_addr constant [6 x i8] c"MKCOL\00", align 1, !dbg !1858
@.str.120 = private unnamed_addr constant [16 x i8] c"VERSION-CONTROL\00", align 1, !dbg !1860
@.str.121 = private unnamed_addr constant [12 x i8] c"MKWORKSPACE\00", align 1, !dbg !1862
@.str.122 = private unnamed_addr constant [11 x i8] c"MKACTIVITY\00", align 1, !dbg !1864
@.str.123 = private unnamed_addr constant [8 x i8] c"CHECKIN\00", align 1, !dbg !1866
@.str.124 = private unnamed_addr constant [11 x i8] c"UNCHECKOUT\00", align 1, !dbg !1868
@.str.125 = private unnamed_addr constant [9 x i8] c"CHECKOUT\00", align 1, !dbg !1870
@.str.126 = private unnamed_addr constant [6 x i8] c"LABEL\00", align 1, !dbg !1872
@.str.127 = private unnamed_addr constant [5 x i8] c"BIND\00", align 1, !dbg !1874
@.str.128 = private unnamed_addr constant [7 x i8] c"SEARCH\00", align 1, !dbg !1876
@.str.129 = private unnamed_addr constant [6 x i8] c"Allow\00", align 1, !dbg !1878
@.str.130 = private unnamed_addr constant [21 x i8] c"supported-method-set\00", align 1, !dbg !1880
@.str.131 = private unnamed_addr constant [28 x i8] c"supported-live-property-set\00", align 1, !dbg !1882
@.str.132 = private unnamed_addr constant [21 x i8] c"supported-report-set\00", align 1, !dbg !1884
@.str.133 = private unnamed_addr constant [76 x i8] c"<?xml version=\221.0\22 encoding=\22utf-8\22?>\0A<D:options-response xmlns:D=\22DAV:\22>\0A\00", align 1, !dbg !1886
@.str.134 = private unnamed_addr constant [23 x i8] c"</D:options-response>\0A\00", align 1, !dbg !1888
@.str.135 = private unnamed_addr constant [26 x i8] c"<D:supported-method-set>\0A\00", align 1, !dbg !1890
@.str.136 = private unnamed_addr constant [29 x i8] c"<D:supported-method D:name=\22\00", align 1, !dbg !1892
@.str.137 = private unnamed_addr constant [5 x i8] c"\22/>\0A\00", align 1, !dbg !1897
@.str.138 = private unnamed_addr constant [17 x i8] c"supported-method\00", align 1, !dbg !1899
@.str.139 = private unnamed_addr constant [5 x i8] c"name\00", align 1, !dbg !1901
@.str.140 = private unnamed_addr constant [64 x i8] c"A DAV:supported-method element does not have a \22name\22 attribute\00", align 1, !dbg !1903
@.str.141 = private unnamed_addr constant [27 x i8] c"</D:supported-method-set>\0A\00", align 1, !dbg !1908
@.str.142 = private unnamed_addr constant [94 x i8] c"The lock database could not be opened, preventing the reporting of supported lock properties.\00", align 1, !dbg !1910
@.str.143 = private unnamed_addr constant [86 x i8] c"The property database could not be opened, preventing report of supported properties.\00", align 1, !dbg !1915
@.str.144 = private unnamed_addr constant [33 x i8] c"<D:supported-live-property-set>\0A\00", align 1, !dbg !1917
@.str.145 = private unnamed_addr constant [24 x i8] c"supported-live-property\00", align 1, !dbg !1922
@.str.146 = private unnamed_addr constant [10 x i8] c"namespace\00", align 1, !dbg !1924
@.str.147 = private unnamed_addr constant [71 x i8] c"A DAV:supported-live-property element does not have a \22name\22 attribute\00", align 1, !dbg !1926
@.str.148 = private unnamed_addr constant [5 x i8] c"DAV:\00", align 1, !dbg !1928
@.str.149 = private unnamed_addr constant [34 x i8] c"</D:supported-live-property-set>\0A\00", align 1, !dbg !1930
@.str.150 = private unnamed_addr constant [26 x i8] c"<D:supported-report-set>\0A\00", align 1, !dbg !1935
@.str.151 = private unnamed_addr constant [116 x i8] c"DAV:supported-report-set could not be determined due to a problem fetching the available reports for this resource.\00", align 1, !dbg !1937
@.str.152 = private unnamed_addr constant [29 x i8] c"<D:supported-report D:name=\22\00", align 1, !dbg !1942
@.str.153 = private unnamed_addr constant [16 x i8] c"\22 D:namespace=\22\00", align 1, !dbg !1944
@.str.154 = private unnamed_addr constant [17 x i8] c"supported-report\00", align 1, !dbg !1946
@.str.155 = private unnamed_addr constant [64 x i8] c"A DAV:supported-report element does not have a \22name\22 attribute\00", align 1, !dbg !1948
@.str.156 = private unnamed_addr constant [27 x i8] c"</D:supported-report-set>\0A\00", align 1, !dbg !1950
@.str.157 = private unnamed_addr constant [69 x i8] c"PROPFIND requests with a Depth of \22infinity\22 are not allowed for %s.\00", align 1, !dbg !1952
@.str.158 = private unnamed_addr constant [9 x i8] c"propfind\00", align 1, !dbg !1954
@.str.159 = private unnamed_addr constant [47 x i8] c"AH00585: The \22propfind\22 element was not found.\00", align 1, !dbg !1956
@.str.160 = private unnamed_addr constant [8 x i8] c"allprop\00", align 1, !dbg !1958
@.str.161 = private unnamed_addr constant [9 x i8] c"propname\00", align 1, !dbg !1960
@.str.162 = private unnamed_addr constant [5 x i8] c"prop\00", align 1, !dbg !1962
@.str.163 = private unnamed_addr constant [108 x i8] c"AH00586: The \22propfind\22 element does not contain one of the required child elements (the specific command).\00", align 1, !dbg !1964
@.str.164 = private unnamed_addr constant [16 x i8] c"mod_dav-scratch\00", align 1, !dbg !1966
@.str.165 = private unnamed_addr constant [106 x i8] c"The lock database could not be opened, preventing access to the various lock properties for the PROPFIND.\00", align 1, !dbg !1968
@.str.166 = private unnamed_addr constant [79 x i8] c"Provider encountered an error while streaming a multistatus PROPFIND response.\00", align 1, !dbg !1973
@.str.167 = private unnamed_addr constant [69 x i8] c"</D:prop>\0A<D:status>HTTP/1.1 404 Not Found</D:status>\0A</D:propstat>\0A\00", align 1, !dbg !1978
@.str.168 = private unnamed_addr constant [15 x i8] c"propertyupdate\00", align 1, !dbg !1980
@.str.169 = private unnamed_addr constant [71 x i8] c"AH00587: The request body does not contain a \22propertyupdate\22 element.\00", align 1, !dbg !1982
@.str.170 = private unnamed_addr constant [45 x i8] c"Could not open the property database for %s.\00", align 1, !dbg !1984
@.str.171 = private unnamed_addr constant [7 x i8] c"remove\00", align 1, !dbg !1989
@.str.172 = private unnamed_addr constant [4 x i8] c"set\00", align 1, !dbg !1991
@.str.173 = private unnamed_addr constant [72 x i8] c"AH00588: A \22prop\22 element is missing inside the propertyupdate command.\00", align 1, !dbg !1993
@.str.174 = private unnamed_addr constant [99 x i8] c"The MKCOL was successful, but there was a problem automatically checking in the parent collection.\00", align 1, !dbg !1995
@.str.175 = private unnamed_addr constant [135 x i8] c"The MKCOL was successful, but there was a problem opening the lock database which prevents inheriting locks from the parent resources.\00", align 1, !dbg !2000
@.str.176 = private unnamed_addr constant [81 x i8] c"The MKCOL was successful, but there was a problem updating its lock information.\00", align 1, !dbg !2005
@.str.177 = private unnamed_addr constant [11 x i8] c"Collection\00", align 1, !dbg !2010
@.str.178 = private unnamed_addr constant [18 x i8] c"Transfer-Encoding\00", align 1, !dbg !2012
@.str.179 = private unnamed_addr constant [15 x i8] c"Content-Length\00", align 1, !dbg !2014
@.str.180 = private unnamed_addr constant [8 x i8] c"chunked\00", align 1, !dbg !2016
@.str.181 = private unnamed_addr constant [38 x i8] c"AH00589: Unknown Transfer-Encoding %s\00", align 1, !dbg !2018
@.str.182 = private unnamed_addr constant [35 x i8] c"AH00590: Invalid Content-Length %s\00", align 1, !dbg !2020
@.str.183 = private unnamed_addr constant [30 x i8] c"Cannot COPY/MOVE resource %s.\00", align 1, !dbg !2022
@.str.184 = private unnamed_addr constant [12 x i8] c"Destination\00", align 1, !dbg !2024
@.str.185 = private unnamed_addr constant [5 x i8] c"Host\00", align 1, !dbg !2026
@.str.186 = private unnamed_addr constant [8 x i8] c"New-uri\00", align 1, !dbg !2028
@.str.187 = private unnamed_addr constant [8 x i8] c"http://\00", align 1, !dbg !2030
@.str.188 = private unnamed_addr constant [54 x i8] c"AH00591: The request is missing a Destination header.\00", align 1, !dbg !2032
@.str.189 = private unnamed_addr constant [12 x i8] c"AH00592: %s\00", align 1, !dbg !2037
@.str.190 = private unnamed_addr constant [17 x i8] c"WWW-Authenticate\00", align 1, !dbg !2039
@.str.191 = private unnamed_addr constant [30 x i8] c"Destination URI had an error.\00", align 1, !dbg !2041
@.str.192 = private unnamed_addr constant [125 x i8] c"Destination URI is handled by a different repository than the source URI. MOVE or COPY between repositories is not possible.\00", align 1, !dbg !2043
@.str.193 = private unnamed_addr constant [50 x i8] c"Destination is not empty and Overwrite is not \22T\22\00", align 1, !dbg !2048
@.str.194 = private unnamed_addr constant [42 x i8] c"Source and Destination URIs are the same.\00", align 1, !dbg !2053
@.str.195 = private unnamed_addr constant [59 x i8] c"AH00593: Depth must be \220\22 or \22infinity\22 for COPY or MOVE.\00", align 1, !dbg !2055
@.str.196 = private unnamed_addr constant [60 x i8] c"AH00594: Depth must be \22infinity\22 when moving a collection.\00", align 1, !dbg !2057
@.str.197 = private unnamed_addr constant [73 x i8] c"Could not %s %s due to a failed precondition on the source (e.g. locks).\00", align 1, !dbg !2062
@.str.198 = private unnamed_addr constant [85 x i8] c"Could not MOVE/COPY %s due to a failed precondition on the destination (e.g. locks).\00", align 1, !dbg !2067
@.str.199 = private unnamed_addr constant [44 x i8] c"Source collection contains the Destination.\00", align 1, !dbg !2072
@.str.200 = private unnamed_addr constant [77 x i8] c"Destination collection contains the Source and Overwrite has been specified.\00", align 1, !dbg !2077
@.str.201 = private unnamed_addr constant [24 x i8] c"Could not MOVE/COPY %s.\00", align 1, !dbg !2082
@.str.202 = private unnamed_addr constant [110 x i8] c"The MOVE/COPY was successful, but there was a problem automatically checking in the source parent collection.\00", align 1, !dbg !2084
@.str.203 = private unnamed_addr constant [122 x i8] c"The MOVE/COPY was successful, but there was a problem automatically checking in the destination or its parent collection.\00", align 1, !dbg !2089
@.str.204 = private unnamed_addr constant [85 x i8] c"The MOVE/COPY was successful, but there was a problem updating the lock information.\00", align 1, !dbg !2094
@.str.205 = private unnamed_addr constant [10 x i8] c"Overwrite\00", align 1, !dbg !2096
@.str.206 = private unnamed_addr constant [52 x i8] c"AH00581: An invalid Overwrite header was specified.\00", align 1, !dbg !2098
@.str.207 = private unnamed_addr constant [49 x i8] c"AH00595: Depth must be 0 or \22infinity\22 for LOCK.\00", align 1, !dbg !2103
@.str.208 = private unnamed_addr constant [65 x i8] c"The parent resource of %s does not exist or is not a collection.\00", align 1, !dbg !2105
@.str.209 = private unnamed_addr constant [67 x i8] c"Could not LOCK %s due to a failed precondition (e.g. other locks).\00", align 1, !dbg !2110
@.str.210 = private unnamed_addr constant [89 x i8] c"The lock refresh for %s failed because no lock tokens were specified in an \22If:\22 header.\00", align 1, !dbg !2115
@.str.211 = private unnamed_addr constant [2 x i8] c"<\00", align 1, !dbg !2120
@.str.212 = private unnamed_addr constant [2 x i8] c">\00", align 1, !dbg !2122
@.str.213 = private unnamed_addr constant [11 x i8] c"Lock-Token\00", align 1, !dbg !2124
@.str.214 = private unnamed_addr constant [64 x i8] c"<?xml version=\221.0\22 encoding=\22utf-8\22?>\0A<D:prop xmlns:D=\22DAV:\22>\0A\00", align 1, !dbg !2126
@.str.215 = private unnamed_addr constant [20 x i8] c"<D:lockdiscovery/>\0A\00", align 1, !dbg !2128
@.str.216 = private unnamed_addr constant [41 x i8] c"<D:lockdiscovery>\0A%s\0A</D:lockdiscovery>\0A\00", align 1, !dbg !2130
@.str.217 = private unnamed_addr constant [10 x i8] c"</D:prop>\00", align 1, !dbg !2135
@.str.218 = private unnamed_addr constant [64 x i8] c"AH00596: Unlock failed (%s):  No Lock-Token specified in header\00", align 1, !dbg !2137
@.str.219 = private unnamed_addr constant [84 x i8] c"The UNLOCK on %s failed -- an invalid lock token was specified in the \22If:\22 header.\00", align 1, !dbg !2139
@.str.220 = private unnamed_addr constant [16 x i8] c"version-control\00", align 1, !dbg !2144
@.str.221 = private unnamed_addr constant [72 x i8] c"AH00597: The request body does not contain a \22version-control\22 element.\00", align 1, !dbg !2146
@.str.222 = private unnamed_addr constant [8 x i8] c"version\00", align 1, !dbg !2148
@.str.223 = private unnamed_addr constant [77 x i8] c"AH00598: The \22version-control\22 element does not contain a \22version\22 element.\00", align 1, !dbg !2150
@.str.224 = private unnamed_addr constant [5 x i8] c"href\00", align 1, !dbg !2152
@.str.225 = private unnamed_addr constant [67 x i8] c"AH00599: The \22version\22 element does not contain an \22href\22 element.\00", align 1, !dbg !2154
@.str.226 = private unnamed_addr constant [51 x i8] c"AH00600: An \22href\22 element does not contain a URI.\00", align 1, !dbg !2156
@.str.227 = private unnamed_addr constant [32 x i8] c"<DAV:initial-version-required/>\00", align 1, !dbg !2161
@.str.228 = private unnamed_addr constant [38 x i8] c"<DAV:cannot-add-to-existing-history/>\00", align 1, !dbg !2163
@.str.229 = private unnamed_addr constant [27 x i8] c"<DAV:must-be-versionable/>\00", align 1, !dbg !2165
@.str.230 = private unnamed_addr constant [14 x i8] c"Cache-Control\00", align 1, !dbg !2167
@.str.231 = private unnamed_addr constant [9 x i8] c"no-cache\00", align 1, !dbg !2169
@.str.232 = private unnamed_addr constant [39 x i8] c"Could not VERSION-CONTROL resource %s.\00", align 1, !dbg !2171
@.str.233 = private unnamed_addr constant [109 x i8] c"The VERSION-CONTROL was successful, but there was a problem automatically checking in the parent collection.\00", align 1, !dbg !2173
@.str.234 = private unnamed_addr constant [145 x i8] c"The VERSION-CONTROL was successful, but there was a problem opening the lock database which prevents inheriting locks from the parent resources.\00", align 1, !dbg !2178
@.str.235 = private unnamed_addr constant [91 x i8] c"The VERSION-CONTROL was successful, but there was a problem updating its lock information.\00", align 1, !dbg !2183
@.str.236 = private unnamed_addr constant [17 x i8] c"Version selector\00", align 1, !dbg !2188
@.str.237 = private unnamed_addr constant [9 x i8] c"checkout\00", align 1, !dbg !2190
@.str.238 = private unnamed_addr constant [71 x i8] c"AH00601: The request body, if present, must be a DAV:checkout element.\00", align 1, !dbg !2192
@.str.239 = private unnamed_addr constant [17 x i8] c"apply-to-version\00", align 1, !dbg !2194
@.str.240 = private unnamed_addr constant [72 x i8] c"DAV:apply-to-version cannot be used in conjunction with a Label header.\00", align 1, !dbg !2196
@.str.241 = private unnamed_addr constant [11 x i8] c"unreserved\00", align 1, !dbg !2198
@.str.242 = private unnamed_addr constant [8 x i8] c"fork-ok\00", align 1, !dbg !2200
@.str.243 = private unnamed_addr constant [13 x i8] c"activity-set\00", align 1, !dbg !2202
@.str.244 = private unnamed_addr constant [4 x i8] c"new\00", align 1, !dbg !2204
@.str.245 = private unnamed_addr constant [124 x i8] c"AH00602: Within the DAV:activity-set element, the DAV:new element must be used, or at least one DAV:href must be specified.\00", align 1, !dbg !2206
@.str.246 = private unnamed_addr constant [39 x i8] c"Cannot checkout this type of resource.\00", align 1, !dbg !2211
@.str.247 = private unnamed_addr constant [38 x i8] c"Cannot checkout unversioned resource.\00", align 1, !dbg !2213
@.str.248 = private unnamed_addr constant [54 x i8] c"The resource is already checked out to the workspace.\00", align 1, !dbg !2215
@.str.249 = private unnamed_addr constant [32 x i8] c"Could not CHECKOUT resource %s.\00", align 1, !dbg !2217
@.str.250 = private unnamed_addr constant [21 x i8] c"Checked-out resource\00", align 1, !dbg !2219
@.str.251 = private unnamed_addr constant [41 x i8] c"Cannot uncheckout this type of resource.\00", align 1, !dbg !2221
@.str.252 = private unnamed_addr constant [40 x i8] c"Cannot uncheckout unversioned resource.\00", align 1, !dbg !2223
@.str.253 = private unnamed_addr constant [50 x i8] c"The resource is not checked out to the workspace.\00", align 1, !dbg !2228
@.str.254 = private unnamed_addr constant [34 x i8] c"Could not UNCHECKOUT resource %s.\00", align 1, !dbg !2230
@.str.255 = private unnamed_addr constant [8 x i8] c"checkin\00", align 1, !dbg !2232
@.str.256 = private unnamed_addr constant [70 x i8] c"AH00603: The request body, if present, must be a DAV:checkin element.\00", align 1, !dbg !2234
@.str.257 = private unnamed_addr constant [17 x i8] c"keep-checked-out\00", align 1, !dbg !2239
@.str.258 = private unnamed_addr constant [38 x i8] c"Cannot checkin this type of resource.\00", align 1, !dbg !2241
@.str.259 = private unnamed_addr constant [37 x i8] c"Cannot checkin unversioned resource.\00", align 1, !dbg !2243
@.str.260 = private unnamed_addr constant [33 x i8] c"The resource is not checked out.\00", align 1, !dbg !2248
@.str.261 = private unnamed_addr constant [31 x i8] c"Could not CHECKIN resource %s.\00", align 1, !dbg !2250
@.str.262 = private unnamed_addr constant [8 x i8] c"Version\00", align 1, !dbg !2252
@.str.263 = private unnamed_addr constant [7 x i8] c"update\00", align 1, !dbg !2254
@.str.264 = private unnamed_addr constant [64 x i8] c"AH00604: The request body does not contain an \22update\22 element.\00", align 1, !dbg !2256
@.str.265 = private unnamed_addr constant [11 x i8] c"label-name\00", align 1, !dbg !2258
@.str.266 = private unnamed_addr constant [65 x i8] c"AH00605: The version element does not contain an \22href\22 element.\00", align 1, !dbg !2260
@.str.267 = private unnamed_addr constant [84 x i8] c"AH00606: The \22update\22 element does not contain a \22label-name\22 or \22version\22 element.\00", align 1, !dbg !2262
@.str.268 = private unnamed_addr constant [54 x i8] c"AH00607: Depth must be zero for UPDATE with a version\00", align 1, !dbg !2264
@.str.269 = private unnamed_addr constant [72 x i8] c"AH00608: A \22label-name\22 or \22href\22 element does not contain any content.\00", align 1, !dbg !2266
@.str.270 = private unnamed_addr constant [53 x i8] c"<DAV:must-be-checked-in-version-controlled-resource>\00", align 1, !dbg !2268
@.str.271 = private unnamed_addr constant [12 x i8] c"AH00609: %s\00", align 1, !dbg !2270
@.str.272 = private unnamed_addr constant [26 x i8] c"Version URI had an error.\00", align 1, !dbg !2272
@.str.273 = private unnamed_addr constant [21 x i8] c"Could not UPDATE %s.\00", align 1, !dbg !2274
@.str.274 = private unnamed_addr constant [62 x i8] c"AH00610: The request body does not contain a \22label\22 element.\00", align 1, !dbg !2276
@.str.275 = private unnamed_addr constant [4 x i8] c"add\00", align 1, !dbg !2278
@.str.276 = private unnamed_addr constant [84 x i8] c"AH00611: The \22label\22 element does not contain an \22add\22, \22set\22, or \22remove\22 element.\00", align 1, !dbg !2280
@.str.277 = private unnamed_addr constant [76 x i8] c"AH00612: The label command element does not contain a \22label-name\22 element.\00", align 1, !dbg !2282
@.str.278 = private unnamed_addr constant [63 x i8] c"AH00613: A \22label-name\22 element does not contain a label name.\00", align 1, !dbg !2284
@.str.279 = private unnamed_addr constant [48 x i8] c"The LABEL operation was terminated prematurely.\00", align 1, !dbg !2286
@.str.280 = private unnamed_addr constant [44 x i8] c"Errors occurred during the LABEL operation.\00", align 1, !dbg !2288
@.str.281 = private unnamed_addr constant [43 x i8] c"<DAV:must-be-version-or-version-selector/>\00", align 1, !dbg !2290
@.str.282 = private unnamed_addr constant [31 x i8] c"<DAV:must-not-be-checked-out/>\00", align 1, !dbg !2292
@.str.283 = private unnamed_addr constant [49 x i8] c"AH00614: The request body must specify a report.\00", align 1, !dbg !2294
@.str.284 = private unnamed_addr constant [65 x i8] c"Provider encountered an error while streaming a REPORT response.\00", align 1, !dbg !2296
@.str.285 = private unnamed_addr constant [12 x i8] c"mkworkspace\00", align 1, !dbg !2298
@.str.286 = private unnamed_addr constant [68 x i8] c"AH00615: The request body does not contain a \22mkworkspace\22 element.\00", align 1, !dbg !2300
@.str.287 = private unnamed_addr constant [29 x i8] c"<DAV:resource-must-be-null/>\00", align 1, !dbg !2305
@.str.288 = private unnamed_addr constant [31 x i8] c"Could not create workspace %s.\00", align 1, !dbg !2307
@.str.289 = private unnamed_addr constant [10 x i8] c"Workspace\00", align 1, !dbg !2309
@.str.290 = private unnamed_addr constant [28 x i8] c"<DAV:activity-location-ok/>\00", align 1, !dbg !2311
@.str.291 = private unnamed_addr constant [30 x i8] c"Could not create activity %s.\00", align 1, !dbg !2313
@.str.292 = private unnamed_addr constant [9 x i8] c"Activity\00", align 1, !dbg !2315
@.str.293 = private unnamed_addr constant [6 x i8] c"merge\00", align 1, !dbg !2317
@.str.294 = private unnamed_addr constant [75 x i8] c"AH00616: The request body must be present and must be a DAV:merge element.\00", align 1, !dbg !2319
@.str.295 = private unnamed_addr constant [7 x i8] c"source\00", align 1, !dbg !2321
@.str.296 = private unnamed_addr constant [66 x i8] c"AH00617: The DAV:merge element must contain a DAV:source element.\00", align 1, !dbg !2323
@.str.297 = private unnamed_addr constant [65 x i8] c"AH00618: The DAV:source element must contain a DAV:href element.\00", align 1, !dbg !2328
@.str.298 = private unnamed_addr constant [12 x i8] c"AH00619: %s\00", align 1, !dbg !2330
@.str.299 = private unnamed_addr constant [31 x i8] c"Merge source URI had an error.\00", align 1, !dbg !2332
@.str.300 = private unnamed_addr constant [14 x i8] c"no-auto-merge\00", align 1, !dbg !2334
@.str.301 = private unnamed_addr constant [12 x i8] c"no-checkout\00", align 1, !dbg !2336
@.str.302 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1, !dbg !2338
@.str.303 = private unnamed_addr constant [41 x i8] c"Could not MERGE resource \22%s\22 into \22%s\22.\00", align 1, !dbg !2340
@.str.304 = private unnamed_addr constant [54 x i8] c"AH00620: The request is missing a Destination header.\00", align 1, !dbg !2345
@.str.305 = private unnamed_addr constant [12 x i8] c"AH00621: %s\00", align 1, !dbg !2347
@.str.306 = private unnamed_addr constant [54 x i8] c"Cross server bindings are not allowed by this server.\00", align 1, !dbg !2349
@.str.307 = private unnamed_addr constant [117 x i8] c"Destination URI is handled by a different repository than the source URI. BIND between repositories is not possible.\00", align 1, !dbg !2351
@.str.308 = private unnamed_addr constant [80 x i8] c"Could not BIND %s due to a failed precondition on the destination (e.g. locks).\00", align 1, !dbg !2356
@.str.309 = private unnamed_addr constant [19 x i8] c"Could not BIND %s.\00", align 1, !dbg !2361
@.str.310 = private unnamed_addr constant [105 x i8] c"The BIND was successful, but there was a problem automatically checking in the source parent collection.\00", align 1, !dbg !2363
@.str.311 = private unnamed_addr constant [8 x i8] c"Binding\00", align 1, !dbg !2368

; Function Attrs: nounwind uwtable
define ptr @dav_get_provider_name(ptr noundef %r) #0 !dbg !2410 {
entry:
  %r.addr = alloca ptr, align 8
  %conf = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2414, metadata !DIExpression()), !dbg !2420
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !2421
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !2415, metadata !DIExpression()), !dbg !2422
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2423, !tbaa !2416
  %per_dir_config = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 54, !dbg !2423
  %1 = load ptr, ptr %per_dir_config, align 8, !dbg !2423, !tbaa !2424
  %2 = load i32, ptr getelementptr inbounds (%struct.module_struct, ptr @dav_module, i32 0, i32 2), align 8, !dbg !2423, !tbaa !2431
  %idxprom = sext i32 %2 to i64, !dbg !2423
  %arrayidx = getelementptr inbounds ptr, ptr %1, i64 %idxprom, !dbg !2423
  %3 = load ptr, ptr %arrayidx, align 8, !dbg !2423, !tbaa !2416
  store ptr %3, ptr %conf, align 8, !dbg !2422, !tbaa !2416
  %4 = load ptr, ptr %conf, align 8, !dbg !2433, !tbaa !2416
  %tobool = icmp ne ptr %4, null, !dbg !2433
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2433

cond.true:                                        ; preds = %entry
  %5 = load ptr, ptr %conf, align 8, !dbg !2434, !tbaa !2416
  %provider_name = getelementptr inbounds %struct.dav_dir_conf, ptr %5, i32 0, i32 0, !dbg !2435
  %6 = load ptr, ptr %provider_name, align 8, !dbg !2435, !tbaa !2436
  br label %cond.end, !dbg !2433

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2433

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %6, %cond.true ], [ null, %cond.false ], !dbg !2433
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !2438
  ret ptr %cond, !dbg !2439
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define ptr @dav_get_provider(ptr noundef %r) #0 !dbg !2440 {
entry:
  %r.addr = alloca ptr, align 8
  %conf = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2444, metadata !DIExpression()), !dbg !2446
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !2447
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !2445, metadata !DIExpression()), !dbg !2448
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2449, !tbaa !2416
  %per_dir_config = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 54, !dbg !2449
  %1 = load ptr, ptr %per_dir_config, align 8, !dbg !2449, !tbaa !2424
  %2 = load i32, ptr getelementptr inbounds (%struct.module_struct, ptr @dav_module, i32 0, i32 2), align 8, !dbg !2449, !tbaa !2431
  %idxprom = sext i32 %2 to i64, !dbg !2449
  %arrayidx = getelementptr inbounds ptr, ptr %1, i64 %idxprom, !dbg !2449
  %3 = load ptr, ptr %arrayidx, align 8, !dbg !2449, !tbaa !2416
  store ptr %3, ptr %conf, align 8, !dbg !2450, !tbaa !2416
  %4 = load ptr, ptr %conf, align 8, !dbg !2451, !tbaa !2416
  %provider = getelementptr inbounds %struct.dav_dir_conf, ptr %4, i32 0, i32 1, !dbg !2452
  %5 = load ptr, ptr %provider, align 8, !dbg !2452, !tbaa !2453
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !2454
  ret ptr %5, !dbg !2455
}

; Function Attrs: nounwind uwtable
define ptr @dav_get_lock_hooks(ptr noundef %r) #0 !dbg !2456 {
entry:
  %r.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2460, metadata !DIExpression()), !dbg !2461
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2462, !tbaa !2416
  %call = call ptr @dav_get_provider(ptr noundef %0), !dbg !2463
  %locks = getelementptr inbounds %struct.dav_provider, ptr %call, i32 0, i32 2, !dbg !2464
  %1 = load ptr, ptr %locks, align 8, !dbg !2464, !tbaa !2465
  ret ptr %1, !dbg !2467
}

; Function Attrs: nounwind uwtable
define ptr @dav_get_propdb_hooks(ptr noundef %r) #0 !dbg !2468 {
entry:
  %r.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2472, metadata !DIExpression()), !dbg !2473
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2474, !tbaa !2416
  %call = call ptr @dav_get_provider(ptr noundef %0), !dbg !2475
  %propdb = getelementptr inbounds %struct.dav_provider, ptr %call, i32 0, i32 1, !dbg !2476
  %1 = load ptr, ptr %propdb, align 8, !dbg !2476, !tbaa !2477
  ret ptr %1, !dbg !2478
}

; Function Attrs: nounwind uwtable
define ptr @dav_get_vsn_hooks(ptr noundef %r) #0 !dbg !2479 {
entry:
  %r.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2483, metadata !DIExpression()), !dbg !2484
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2485, !tbaa !2416
  %call = call ptr @dav_get_provider(ptr noundef %0), !dbg !2486
  %vsn = getelementptr inbounds %struct.dav_provider, ptr %call, i32 0, i32 3, !dbg !2487
  %1 = load ptr, ptr %vsn, align 8, !dbg !2487, !tbaa !2488
  ret ptr %1, !dbg !2489
}

; Function Attrs: nounwind uwtable
define ptr @dav_get_binding_hooks(ptr noundef %r) #0 !dbg !2490 {
entry:
  %r.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2494, metadata !DIExpression()), !dbg !2495
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2496, !tbaa !2416
  %call = call ptr @dav_get_provider(ptr noundef %0), !dbg !2497
  %binding = getelementptr inbounds %struct.dav_provider, ptr %call, i32 0, i32 4, !dbg !2498
  %1 = load ptr, ptr %binding, align 8, !dbg !2498, !tbaa !2499
  ret ptr %1, !dbg !2500
}

; Function Attrs: nounwind uwtable
define ptr @dav_get_search_hooks(ptr noundef %r) #0 !dbg !2501 {
entry:
  %r.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2505, metadata !DIExpression()), !dbg !2506
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2507, !tbaa !2416
  %call = call ptr @dav_get_provider(ptr noundef %0), !dbg !2508
  %search = getelementptr inbounds %struct.dav_provider, ptr %call, i32 0, i32 5, !dbg !2509
  %1 = load ptr, ptr %search, align 8, !dbg !2509, !tbaa !2510
  ret ptr %1, !dbg !2511
}

; Function Attrs: nounwind uwtable
define void @dav_send_one_response(ptr noundef %response, ptr noundef %bb, ptr noundef %r, ptr noundef %pool) #0 !dbg !2512 {
entry:
  %response.addr = alloca ptr, align 8
  %bb.addr = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %pool.addr = alloca ptr, align 8
  %t = alloca ptr, align 8
  store ptr %response, ptr %response.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %response.addr, metadata !2516, metadata !DIExpression()), !dbg !2521
  store ptr %bb, ptr %bb.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %bb.addr, metadata !2517, metadata !DIExpression()), !dbg !2522
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2518, metadata !DIExpression()), !dbg !2523
  store ptr %pool, ptr %pool.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pool.addr, metadata !2519, metadata !DIExpression()), !dbg !2524
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #10, !dbg !2525
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !2520, metadata !DIExpression()), !dbg !2526
  store ptr null, ptr %t, align 8, !dbg !2526, !tbaa !2416
  %0 = load ptr, ptr %response.addr, align 8, !dbg !2527, !tbaa !2416
  %propresult = getelementptr inbounds %struct.dav_response, ptr %0, i32 0, i32 2, !dbg !2529
  %xmlns = getelementptr inbounds %struct.dav_get_props_result, ptr %propresult, i32 0, i32 1, !dbg !2530
  %1 = load ptr, ptr %xmlns, align 8, !dbg !2530, !tbaa !2531
  %cmp = icmp eq ptr %1, null, !dbg !2534
  br i1 %cmp, label %if.then, label %if.else, !dbg !2535

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %bb.addr, align 8, !dbg !2536, !tbaa !2416
  %3 = load ptr, ptr %r.addr, align 8, !dbg !2536, !tbaa !2416
  %output_filters = getelementptr inbounds %struct.request_rec, ptr %3, i32 0, i32 59, !dbg !2536
  %4 = load ptr, ptr %output_filters, align 8, !dbg !2536, !tbaa !2538
  %call = call i32 @apr_brigade_write(ptr noundef %2, ptr noundef @ap_filter_flush, ptr noundef %4, ptr noundef @.str, i64 noundef 12), !dbg !2536
  br label %if.end, !dbg !2539

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %bb.addr, align 8, !dbg !2540, !tbaa !2416
  %6 = load ptr, ptr %r.addr, align 8, !dbg !2540, !tbaa !2416
  %output_filters1 = getelementptr inbounds %struct.request_rec, ptr %6, i32 0, i32 59, !dbg !2540
  %7 = load ptr, ptr %output_filters1, align 8, !dbg !2540, !tbaa !2538
  %call2 = call i32 @apr_brigade_write(ptr noundef %5, ptr noundef @ap_filter_flush, ptr noundef %7, ptr noundef @.str.1, i64 noundef 11), !dbg !2540
  %8 = load ptr, ptr %response.addr, align 8, !dbg !2542, !tbaa !2416
  %propresult3 = getelementptr inbounds %struct.dav_response, ptr %8, i32 0, i32 2, !dbg !2544
  %xmlns4 = getelementptr inbounds %struct.dav_get_props_result, ptr %propresult3, i32 0, i32 1, !dbg !2545
  %9 = load ptr, ptr %xmlns4, align 8, !dbg !2545, !tbaa !2531
  store ptr %9, ptr %t, align 8, !dbg !2546, !tbaa !2416
  br label %for.cond, !dbg !2547

for.cond:                                         ; preds = %for.inc, %if.else
  %10 = load ptr, ptr %t, align 8, !dbg !2548, !tbaa !2416
  %tobool = icmp ne ptr %10, null, !dbg !2550
  br i1 %tobool, label %for.body, label %for.end, !dbg !2550

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %bb.addr, align 8, !dbg !2551, !tbaa !2416
  %12 = load ptr, ptr %r.addr, align 8, !dbg !2551, !tbaa !2416
  %output_filters5 = getelementptr inbounds %struct.request_rec, ptr %12, i32 0, i32 59, !dbg !2551
  %13 = load ptr, ptr %output_filters5, align 8, !dbg !2551, !tbaa !2538
  %14 = load ptr, ptr %t, align 8, !dbg !2551, !tbaa !2416
  %text = getelementptr inbounds %struct.apr_text, ptr %14, i32 0, i32 0, !dbg !2551
  %15 = load ptr, ptr %text, align 8, !dbg !2551, !tbaa !2553
  %16 = load ptr, ptr %t, align 8, !dbg !2551, !tbaa !2416
  %text6 = getelementptr inbounds %struct.apr_text, ptr %16, i32 0, i32 0, !dbg !2551
  %17 = load ptr, ptr %text6, align 8, !dbg !2551, !tbaa !2553
  %call7 = call i64 @strlen(ptr noundef %17) #11, !dbg !2551
  %call8 = call i32 @apr_brigade_write(ptr noundef %11, ptr noundef @ap_filter_flush, ptr noundef %13, ptr noundef %15, i64 noundef %call7), !dbg !2551
  br label %for.inc, !dbg !2555

for.inc:                                          ; preds = %for.body
  %18 = load ptr, ptr %t, align 8, !dbg !2556, !tbaa !2416
  %next = getelementptr inbounds %struct.apr_text, ptr %18, i32 0, i32 1, !dbg !2557
  %19 = load ptr, ptr %next, align 8, !dbg !2557, !tbaa !2558
  store ptr %19, ptr %t, align 8, !dbg !2559, !tbaa !2416
  br label %for.cond, !dbg !2560, !llvm.loop !2561

for.end:                                          ; preds = %for.cond
  %20 = load ptr, ptr %bb.addr, align 8, !dbg !2564, !tbaa !2416
  %21 = load ptr, ptr %r.addr, align 8, !dbg !2564, !tbaa !2416
  %output_filters9 = getelementptr inbounds %struct.request_rec, ptr %21, i32 0, i32 59, !dbg !2564
  %22 = load ptr, ptr %output_filters9, align 8, !dbg !2564, !tbaa !2538
  %call10 = call i32 @apr_brigade_putc(ptr noundef %20, ptr noundef @ap_filter_flush, ptr noundef %22, i8 noundef signext 62), !dbg !2564
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %23 = load ptr, ptr %r.addr, align 8, !dbg !2565, !tbaa !2416
  %output_filters11 = getelementptr inbounds %struct.request_rec, ptr %23, i32 0, i32 59, !dbg !2566
  %24 = load ptr, ptr %output_filters11, align 8, !dbg !2566, !tbaa !2538
  %25 = load ptr, ptr %bb.addr, align 8, !dbg !2567, !tbaa !2416
  %26 = load ptr, ptr %pool.addr, align 8, !dbg !2568, !tbaa !2416
  %27 = load ptr, ptr %response.addr, align 8, !dbg !2569, !tbaa !2416
  %href = getelementptr inbounds %struct.dav_response, ptr %27, i32 0, i32 0, !dbg !2570
  %28 = load ptr, ptr %href, align 8, !dbg !2570, !tbaa !2571
  %call12 = call ptr @dav_xml_escape_uri(ptr noundef %26, ptr noundef %28), !dbg !2572
  %call13 = call i32 (ptr, ptr, ...) @ap_fputstrs(ptr noundef %24, ptr noundef %25, ptr noundef @.str.2, ptr noundef %call12, ptr noundef @.str.3, ptr noundef null), !dbg !2573
  %29 = load ptr, ptr %response.addr, align 8, !dbg !2574, !tbaa !2416
  %propresult14 = getelementptr inbounds %struct.dav_response, ptr %29, i32 0, i32 2, !dbg !2576
  %propstats = getelementptr inbounds %struct.dav_get_props_result, ptr %propresult14, i32 0, i32 0, !dbg !2577
  %30 = load ptr, ptr %propstats, align 8, !dbg !2577, !tbaa !2578
  %cmp15 = icmp eq ptr %30, null, !dbg !2579
  br i1 %cmp15, label %if.then16, label %if.else20, !dbg !2580

if.then16:                                        ; preds = %if.end
  %31 = load ptr, ptr %r.addr, align 8, !dbg !2581, !tbaa !2416
  %output_filters17 = getelementptr inbounds %struct.request_rec, ptr %31, i32 0, i32 59, !dbg !2583
  %32 = load ptr, ptr %output_filters17, align 8, !dbg !2583, !tbaa !2538
  %33 = load ptr, ptr %bb.addr, align 8, !dbg !2584, !tbaa !2416
  %34 = load ptr, ptr %response.addr, align 8, !dbg !2585, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_response, ptr %34, i32 0, i32 3, !dbg !2586
  %35 = load i32, ptr %status, align 8, !dbg !2586, !tbaa !2587
  %call18 = call ptr @ap_get_status_line(i32 noundef %35), !dbg !2588
  %call19 = call i32 (ptr, ptr, ...) @ap_fputstrs(ptr noundef %32, ptr noundef %33, ptr noundef @.str.4, ptr noundef %call18, ptr noundef @.str.5, ptr noundef null), !dbg !2589
  br label %if.end34, !dbg !2590

if.else20:                                        ; preds = %if.end
  %36 = load ptr, ptr %response.addr, align 8, !dbg !2591, !tbaa !2416
  %propresult21 = getelementptr inbounds %struct.dav_response, ptr %36, i32 0, i32 2, !dbg !2594
  %propstats22 = getelementptr inbounds %struct.dav_get_props_result, ptr %propresult21, i32 0, i32 0, !dbg !2595
  %37 = load ptr, ptr %propstats22, align 8, !dbg !2595, !tbaa !2578
  store ptr %37, ptr %t, align 8, !dbg !2596, !tbaa !2416
  br label %for.cond23, !dbg !2597

for.cond23:                                       ; preds = %for.inc31, %if.else20
  %38 = load ptr, ptr %t, align 8, !dbg !2598, !tbaa !2416
  %tobool24 = icmp ne ptr %38, null, !dbg !2600
  br i1 %tobool24, label %for.body25, label %for.end33, !dbg !2600

for.body25:                                       ; preds = %for.cond23
  %39 = load ptr, ptr %bb.addr, align 8, !dbg !2601, !tbaa !2416
  %40 = load ptr, ptr %r.addr, align 8, !dbg !2601, !tbaa !2416
  %output_filters26 = getelementptr inbounds %struct.request_rec, ptr %40, i32 0, i32 59, !dbg !2601
  %41 = load ptr, ptr %output_filters26, align 8, !dbg !2601, !tbaa !2538
  %42 = load ptr, ptr %t, align 8, !dbg !2601, !tbaa !2416
  %text27 = getelementptr inbounds %struct.apr_text, ptr %42, i32 0, i32 0, !dbg !2601
  %43 = load ptr, ptr %text27, align 8, !dbg !2601, !tbaa !2553
  %44 = load ptr, ptr %t, align 8, !dbg !2601, !tbaa !2416
  %text28 = getelementptr inbounds %struct.apr_text, ptr %44, i32 0, i32 0, !dbg !2601
  %45 = load ptr, ptr %text28, align 8, !dbg !2601, !tbaa !2553
  %call29 = call i64 @strlen(ptr noundef %45) #11, !dbg !2601
  %call30 = call i32 @apr_brigade_write(ptr noundef %39, ptr noundef @ap_filter_flush, ptr noundef %41, ptr noundef %43, i64 noundef %call29), !dbg !2601
  br label %for.inc31, !dbg !2603

for.inc31:                                        ; preds = %for.body25
  %46 = load ptr, ptr %t, align 8, !dbg !2604, !tbaa !2416
  %next32 = getelementptr inbounds %struct.apr_text, ptr %46, i32 0, i32 1, !dbg !2605
  %47 = load ptr, ptr %next32, align 8, !dbg !2605, !tbaa !2558
  store ptr %47, ptr %t, align 8, !dbg !2606, !tbaa !2416
  br label %for.cond23, !dbg !2607, !llvm.loop !2608

for.end33:                                        ; preds = %for.cond23
  br label %if.end34

if.end34:                                         ; preds = %for.end33, %if.then16
  %48 = load ptr, ptr %response.addr, align 8, !dbg !2610, !tbaa !2416
  %desc = getelementptr inbounds %struct.dav_response, ptr %48, i32 0, i32 1, !dbg !2612
  %49 = load ptr, ptr %desc, align 8, !dbg !2612, !tbaa !2613
  %cmp35 = icmp ne ptr %49, null, !dbg !2614
  br i1 %cmp35, label %if.then36, label %if.end40, !dbg !2615

if.then36:                                        ; preds = %if.end34
  %50 = load ptr, ptr %r.addr, align 8, !dbg !2616, !tbaa !2416
  %output_filters37 = getelementptr inbounds %struct.request_rec, ptr %50, i32 0, i32 59, !dbg !2618
  %51 = load ptr, ptr %output_filters37, align 8, !dbg !2618, !tbaa !2538
  %52 = load ptr, ptr %bb.addr, align 8, !dbg !2619, !tbaa !2416
  %53 = load ptr, ptr %response.addr, align 8, !dbg !2620, !tbaa !2416
  %desc38 = getelementptr inbounds %struct.dav_response, ptr %53, i32 0, i32 1, !dbg !2621
  %54 = load ptr, ptr %desc38, align 8, !dbg !2621, !tbaa !2613
  %call39 = call i32 (ptr, ptr, ...) @ap_fputstrs(ptr noundef %51, ptr noundef %52, ptr noundef @.str.6, ptr noundef %54, ptr noundef @.str.7, ptr noundef null), !dbg !2622
  br label %if.end40, !dbg !2623

if.end40:                                         ; preds = %if.then36, %if.end34
  %55 = load ptr, ptr %bb.addr, align 8, !dbg !2624, !tbaa !2416
  %56 = load ptr, ptr %r.addr, align 8, !dbg !2624, !tbaa !2416
  %output_filters41 = getelementptr inbounds %struct.request_rec, ptr %56, i32 0, i32 59, !dbg !2624
  %57 = load ptr, ptr %output_filters41, align 8, !dbg !2624, !tbaa !2538
  %call42 = call i32 @apr_brigade_write(ptr noundef %55, ptr noundef @ap_filter_flush, ptr noundef %57, ptr noundef @.str.8, i64 noundef 14), !dbg !2624
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #10, !dbg !2625
  ret void, !dbg !2625
}

declare !dbg !2626 i32 @apr_brigade_write(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef) #2

declare i32 @ap_filter_flush(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !2633 i64 @strlen(ptr noundef) #3

declare !dbg !2637 i32 @apr_brigade_putc(ptr noundef, ptr noundef, ptr noundef, i8 noundef signext) #2

declare !dbg !2640 i32 @ap_fputstrs(ptr noundef, ptr noundef, ...) #2

; Function Attrs: nounwind uwtable
define internal ptr @dav_xml_escape_uri(ptr noundef %p, ptr noundef %uri) #0 !dbg !2643 {
entry:
  %retval = alloca ptr, align 8
  %p.addr = alloca ptr, align 8
  %uri.addr = alloca ptr, align 8
  %e_uri = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !2647, metadata !DIExpression()), !dbg !2650
  store ptr %uri, ptr %uri.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %uri.addr, metadata !2648, metadata !DIExpression()), !dbg !2651
  call void @llvm.lifetime.start.p0(i64 8, ptr %e_uri) #10, !dbg !2652
  tail call void @llvm.dbg.declare(metadata ptr %e_uri, metadata !2649, metadata !DIExpression()), !dbg !2653
  %0 = load ptr, ptr %p.addr, align 8, !dbg !2654, !tbaa !2416
  %1 = load ptr, ptr %uri.addr, align 8, !dbg !2654, !tbaa !2416
  %call = call ptr @ap_os_escape_path(ptr noundef %0, ptr noundef %1, i32 noundef 1), !dbg !2654
  store ptr %call, ptr %e_uri, align 8, !dbg !2653, !tbaa !2416
  %2 = load ptr, ptr %e_uri, align 8, !dbg !2655, !tbaa !2416
  %call1 = call ptr @strchr(ptr noundef %2, i32 noundef 38) #11, !dbg !2655
  %cmp = icmp eq ptr %call1, null, !dbg !2657
  br i1 %cmp, label %if.then, label %if.end, !dbg !2658

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %e_uri, align 8, !dbg !2659, !tbaa !2416
  store ptr %3, ptr %retval, align 8, !dbg !2660
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2660

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %p.addr, align 8, !dbg !2661, !tbaa !2416
  %5 = load ptr, ptr %e_uri, align 8, !dbg !2662, !tbaa !2416
  %call2 = call ptr @apr_xml_quote_string(ptr noundef %4, ptr noundef %5, i32 noundef 0), !dbg !2663
  store ptr %call2, ptr %retval, align 8, !dbg !2664
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2664

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %e_uri) #10, !dbg !2665
  %6 = load ptr, ptr %retval, align 8, !dbg !2665
  ret ptr %6, !dbg !2665
}

declare !dbg !2666 ptr @ap_get_status_line(i32 noundef) #2

; Function Attrs: nounwind uwtable
define void @dav_begin_multistatus(ptr noundef %bb, ptr noundef %r, i32 noundef %status, ptr noundef %namespaces) #0 !dbg !2670 {
entry:
  %bb.addr = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %status.addr = alloca i32, align 4
  %namespaces.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %bb, ptr %bb.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %bb.addr, metadata !2674, metadata !DIExpression()), !dbg !2681
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2675, metadata !DIExpression()), !dbg !2682
  store i32 %status, ptr %status.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %status.addr, metadata !2676, metadata !DIExpression()), !dbg !2684
  store ptr %namespaces, ptr %namespaces.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %namespaces.addr, metadata !2677, metadata !DIExpression()), !dbg !2685
  %0 = load i32, ptr %status.addr, align 4, !dbg !2686, !tbaa !2683
  %1 = load ptr, ptr %r.addr, align 8, !dbg !2687, !tbaa !2416
  %status1 = getelementptr inbounds %struct.request_rec, ptr %1, i32 0, i32 15, !dbg !2688
  store i32 %0, ptr %status1, align 8, !dbg !2689, !tbaa !2690
  %2 = load ptr, ptr %r.addr, align 8, !dbg !2691, !tbaa !2416
  call void @ap_set_content_type(ptr noundef %2, ptr noundef @.str.9), !dbg !2692
  %3 = load ptr, ptr %bb.addr, align 8, !dbg !2693, !tbaa !2416
  %4 = load ptr, ptr %r.addr, align 8, !dbg !2693, !tbaa !2416
  %output_filters = getelementptr inbounds %struct.request_rec, ptr %4, i32 0, i32 59, !dbg !2693
  %5 = load ptr, ptr %output_filters, align 8, !dbg !2693, !tbaa !2538
  %call = call i32 @apr_brigade_write(ptr noundef %3, ptr noundef @ap_filter_flush, ptr noundef %5, ptr noundef @.str.10, i64 noundef 68), !dbg !2693
  %6 = load ptr, ptr %namespaces.addr, align 8, !dbg !2694, !tbaa !2416
  %cmp = icmp ne ptr %6, null, !dbg !2695
  br i1 %cmp, label %if.then, label %if.end, !dbg !2696

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !2697
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !2678, metadata !DIExpression()), !dbg !2698
  %7 = load ptr, ptr %namespaces.addr, align 8, !dbg !2699, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %7, i32 0, i32 2, !dbg !2701
  %8 = load i32, ptr %nelts, align 4, !dbg !2701, !tbaa !2702
  store i32 %8, ptr %i, align 4, !dbg !2704, !tbaa !2683
  br label %for.cond, !dbg !2705

for.cond:                                         ; preds = %for.body, %if.then
  %9 = load i32, ptr %i, align 4, !dbg !2706, !tbaa !2683
  %dec = add nsw i32 %9, -1, !dbg !2706
  store i32 %dec, ptr %i, align 4, !dbg !2706, !tbaa !2683
  %tobool = icmp ne i32 %9, 0, !dbg !2708
  br i1 %tobool, label %for.body, label %for.end, !dbg !2708

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %r.addr, align 8, !dbg !2709, !tbaa !2416
  %output_filters2 = getelementptr inbounds %struct.request_rec, ptr %10, i32 0, i32 59, !dbg !2711
  %11 = load ptr, ptr %output_filters2, align 8, !dbg !2711, !tbaa !2538
  %12 = load ptr, ptr %bb.addr, align 8, !dbg !2712, !tbaa !2416
  %13 = load i32, ptr %i, align 4, !dbg !2713, !tbaa !2683
  %14 = load ptr, ptr %namespaces.addr, align 8, !dbg !2714, !tbaa !2416
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %14, i32 0, i32 4, !dbg !2714
  %15 = load ptr, ptr %elts, align 8, !dbg !2714, !tbaa !2715
  %16 = load i32, ptr %i, align 4, !dbg !2714, !tbaa !2683
  %idxprom = sext i32 %16 to i64, !dbg !2714
  %arrayidx = getelementptr inbounds ptr, ptr %15, i64 %idxprom, !dbg !2714
  %17 = load ptr, ptr %arrayidx, align 8, !dbg !2714, !tbaa !2416
  %call3 = call i32 (ptr, ptr, ptr, ...) @ap_fprintf(ptr noundef %11, ptr noundef %12, ptr noundef @.str.11, i32 noundef %13, ptr noundef %17), !dbg !2716
  br label %for.cond, !dbg !2717, !llvm.loop !2718

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !2720
  br label %if.end, !dbg !2721

if.end:                                           ; preds = %for.end, %entry
  %18 = load ptr, ptr %bb.addr, align 8, !dbg !2722, !tbaa !2416
  %19 = load ptr, ptr %r.addr, align 8, !dbg !2722, !tbaa !2416
  %output_filters4 = getelementptr inbounds %struct.request_rec, ptr %19, i32 0, i32 59, !dbg !2722
  %20 = load ptr, ptr %output_filters4, align 8, !dbg !2722, !tbaa !2538
  %call5 = call i32 @apr_brigade_write(ptr noundef %18, ptr noundef @ap_filter_flush, ptr noundef %20, ptr noundef @.str.12, i64 noundef 2), !dbg !2722
  ret void, !dbg !2723
}

declare !dbg !2724 void @ap_set_content_type(ptr noundef, ptr noundef) #2

declare !dbg !2727 i32 @ap_fprintf(ptr noundef, ptr noundef, ptr noundef, ...) #2

; Function Attrs: nounwind uwtable
define i32 @dav_finish_multistatus(ptr noundef %r, ptr noundef %bb) #0 !dbg !2730 {
entry:
  %r.addr = alloca ptr, align 8
  %bb.addr = alloca ptr, align 8
  %b = alloca ptr, align 8
  %ap__b = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2734, metadata !DIExpression()), !dbg !2739
  store ptr %bb, ptr %bb.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %bb.addr, metadata !2735, metadata !DIExpression()), !dbg !2740
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #10, !dbg !2741
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !2736, metadata !DIExpression()), !dbg !2742
  %0 = load ptr, ptr %bb.addr, align 8, !dbg !2743, !tbaa !2416
  %1 = load ptr, ptr %r.addr, align 8, !dbg !2743, !tbaa !2416
  %output_filters = getelementptr inbounds %struct.request_rec, ptr %1, i32 0, i32 59, !dbg !2743
  %2 = load ptr, ptr %output_filters, align 8, !dbg !2743, !tbaa !2538
  %call = call i32 @apr_brigade_write(ptr noundef %0, ptr noundef @ap_filter_flush, ptr noundef %2, ptr noundef @.str.13, i64 noundef 17), !dbg !2743
  %3 = load ptr, ptr %r.addr, align 8, !dbg !2744, !tbaa !2416
  %connection = getelementptr inbounds %struct.request_rec, ptr %3, i32 0, i32 1, !dbg !2745
  %4 = load ptr, ptr %connection, align 8, !dbg !2745, !tbaa !2746
  %bucket_alloc = getelementptr inbounds %struct.conn_rec, ptr %4, i32 0, i32 16, !dbg !2747
  %5 = load ptr, ptr %bucket_alloc, align 8, !dbg !2747, !tbaa !2748
  %call1 = call ptr @apr_bucket_eos_create(ptr noundef %5), !dbg !2750
  store ptr %call1, ptr %b, align 8, !dbg !2751, !tbaa !2416
  br label %do.body, !dbg !2752

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %ap__b) #10, !dbg !2753
  tail call void @llvm.dbg.declare(metadata ptr %ap__b, metadata !2737, metadata !DIExpression()), !dbg !2753
  %6 = load ptr, ptr %b, align 8, !dbg !2753, !tbaa !2416
  store ptr %6, ptr %ap__b, align 8, !dbg !2753, !tbaa !2416
  br label %do.body2, !dbg !2753

do.body2:                                         ; preds = %do.body
  %7 = load ptr, ptr %bb.addr, align 8, !dbg !2754, !tbaa !2416
  %list = getelementptr inbounds %struct.apr_bucket_brigade, ptr %7, i32 0, i32 1, !dbg !2754
  %next = getelementptr inbounds %struct.apr_bucket_list, ptr %list, i32 0, i32 0, !dbg !2754
  %add.ptr = getelementptr inbounds i8, ptr %next, i64 0, !dbg !2754
  %8 = load ptr, ptr %ap__b, align 8, !dbg !2754, !tbaa !2416
  %link = getelementptr inbounds %struct.apr_bucket, ptr %8, i32 0, i32 0, !dbg !2754
  %next3 = getelementptr inbounds %struct.anon, ptr %link, i32 0, i32 0, !dbg !2754
  store volatile ptr %add.ptr, ptr %next3, align 8, !dbg !2754, !tbaa !2756
  %9 = load ptr, ptr %bb.addr, align 8, !dbg !2754, !tbaa !2416
  %list4 = getelementptr inbounds %struct.apr_bucket_brigade, ptr %9, i32 0, i32 1, !dbg !2754
  %prev = getelementptr inbounds %struct.apr_bucket_list, ptr %list4, i32 0, i32 1, !dbg !2754
  %10 = load volatile ptr, ptr %prev, align 8, !dbg !2754, !tbaa !2758
  %11 = load ptr, ptr %ap__b, align 8, !dbg !2754, !tbaa !2416
  %link5 = getelementptr inbounds %struct.apr_bucket, ptr %11, i32 0, i32 0, !dbg !2754
  %prev6 = getelementptr inbounds %struct.anon, ptr %link5, i32 0, i32 1, !dbg !2754
  store volatile ptr %10, ptr %prev6, align 8, !dbg !2754, !tbaa !2761
  %12 = load ptr, ptr %ap__b, align 8, !dbg !2754, !tbaa !2416
  %13 = load ptr, ptr %bb.addr, align 8, !dbg !2754, !tbaa !2416
  %list7 = getelementptr inbounds %struct.apr_bucket_brigade, ptr %13, i32 0, i32 1, !dbg !2754
  %prev8 = getelementptr inbounds %struct.apr_bucket_list, ptr %list7, i32 0, i32 1, !dbg !2754
  %14 = load volatile ptr, ptr %prev8, align 8, !dbg !2754, !tbaa !2758
  %link9 = getelementptr inbounds %struct.apr_bucket, ptr %14, i32 0, i32 0, !dbg !2754
  %next10 = getelementptr inbounds %struct.anon, ptr %link9, i32 0, i32 0, !dbg !2754
  store volatile ptr %12, ptr %next10, align 8, !dbg !2754, !tbaa !2756
  %15 = load ptr, ptr %ap__b, align 8, !dbg !2754, !tbaa !2416
  %16 = load ptr, ptr %bb.addr, align 8, !dbg !2754, !tbaa !2416
  %list11 = getelementptr inbounds %struct.apr_bucket_brigade, ptr %16, i32 0, i32 1, !dbg !2754
  %prev12 = getelementptr inbounds %struct.apr_bucket_list, ptr %list11, i32 0, i32 1, !dbg !2754
  store volatile ptr %15, ptr %prev12, align 8, !dbg !2754, !tbaa !2758
  br label %do.cond, !dbg !2754

do.cond:                                          ; preds = %do.body2
  br label %do.end, !dbg !2754

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %ap__b) #10, !dbg !2752
  br label %do.cond13, !dbg !2753

do.cond13:                                        ; preds = %do.end
  br label %do.end14, !dbg !2753

do.end14:                                         ; preds = %do.cond13
  %17 = load ptr, ptr %r.addr, align 8, !dbg !2762, !tbaa !2416
  %output_filters15 = getelementptr inbounds %struct.request_rec, ptr %17, i32 0, i32 59, !dbg !2763
  %18 = load ptr, ptr %output_filters15, align 8, !dbg !2763, !tbaa !2538
  %19 = load ptr, ptr %bb.addr, align 8, !dbg !2764, !tbaa !2416
  %call16 = call i32 @ap_pass_brigade(ptr noundef %18, ptr noundef %19), !dbg !2765
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #10, !dbg !2766
  ret i32 %call16, !dbg !2767
}

declare !dbg !2768 ptr @apr_bucket_eos_create(ptr noundef) #2

declare !dbg !2771 i32 @ap_pass_brigade(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define void @dav_send_multistatus(ptr noundef %r, i32 noundef %status, ptr noundef %first, ptr noundef %namespaces) #0 !dbg !2772 {
entry:
  %r.addr = alloca ptr, align 8
  %status.addr = alloca i32, align 4
  %first.addr = alloca ptr, align 8
  %namespaces.addr = alloca ptr, align 8
  %subpool = alloca ptr, align 8
  %bb = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2776, metadata !DIExpression()), !dbg !2782
  store i32 %status, ptr %status.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %status.addr, metadata !2777, metadata !DIExpression()), !dbg !2783
  store ptr %first, ptr %first.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %first.addr, metadata !2778, metadata !DIExpression()), !dbg !2784
  store ptr %namespaces, ptr %namespaces.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %namespaces.addr, metadata !2779, metadata !DIExpression()), !dbg !2785
  call void @llvm.lifetime.start.p0(i64 8, ptr %subpool) #10, !dbg !2786
  tail call void @llvm.dbg.declare(metadata ptr %subpool, metadata !2780, metadata !DIExpression()), !dbg !2787
  call void @llvm.lifetime.start.p0(i64 8, ptr %bb) #10, !dbg !2788
  tail call void @llvm.dbg.declare(metadata ptr %bb, metadata !2781, metadata !DIExpression()), !dbg !2789
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2790, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 0, !dbg !2791
  %1 = load ptr, ptr %pool, align 8, !dbg !2791, !tbaa !2792
  %2 = load ptr, ptr %r.addr, align 8, !dbg !2793, !tbaa !2416
  %connection = getelementptr inbounds %struct.request_rec, ptr %2, i32 0, i32 1, !dbg !2794
  %3 = load ptr, ptr %connection, align 8, !dbg !2794, !tbaa !2746
  %bucket_alloc = getelementptr inbounds %struct.conn_rec, ptr %3, i32 0, i32 16, !dbg !2795
  %4 = load ptr, ptr %bucket_alloc, align 8, !dbg !2795, !tbaa !2748
  %call = call ptr @apr_brigade_create(ptr noundef %1, ptr noundef %4), !dbg !2796
  store ptr %call, ptr %bb, align 8, !dbg !2789, !tbaa !2416
  %5 = load ptr, ptr %bb, align 8, !dbg !2797, !tbaa !2416
  %6 = load ptr, ptr %r.addr, align 8, !dbg !2798, !tbaa !2416
  %7 = load i32, ptr %status.addr, align 4, !dbg !2799, !tbaa !2683
  %8 = load ptr, ptr %namespaces.addr, align 8, !dbg !2800, !tbaa !2416
  call void @dav_begin_multistatus(ptr noundef %5, ptr noundef %6, i32 noundef %7, ptr noundef %8), !dbg !2801
  %9 = load ptr, ptr %r.addr, align 8, !dbg !2802, !tbaa !2416
  %pool1 = getelementptr inbounds %struct.request_rec, ptr %9, i32 0, i32 0, !dbg !2802
  %10 = load ptr, ptr %pool1, align 8, !dbg !2802, !tbaa !2792
  %call2 = call i32 @apr_pool_create_ex(ptr noundef %subpool, ptr noundef %10, ptr noundef null, ptr noundef null), !dbg !2802
  %11 = load ptr, ptr %subpool, align 8, !dbg !2803, !tbaa !2416
  call void @apr_pool_tag(ptr noundef %11, ptr noundef @.str.14), !dbg !2804
  br label %for.cond, !dbg !2805

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load ptr, ptr %first.addr, align 8, !dbg !2806, !tbaa !2416
  %cmp = icmp ne ptr %12, null, !dbg !2809
  br i1 %cmp, label %for.body, label %for.end, !dbg !2810

for.body:                                         ; preds = %for.cond
  %13 = load ptr, ptr %subpool, align 8, !dbg !2811, !tbaa !2416
  call void @apr_pool_clear(ptr noundef %13), !dbg !2813
  %14 = load ptr, ptr %first.addr, align 8, !dbg !2814, !tbaa !2416
  %15 = load ptr, ptr %bb, align 8, !dbg !2815, !tbaa !2416
  %16 = load ptr, ptr %r.addr, align 8, !dbg !2816, !tbaa !2416
  %17 = load ptr, ptr %subpool, align 8, !dbg !2817, !tbaa !2416
  call void @dav_send_one_response(ptr noundef %14, ptr noundef %15, ptr noundef %16, ptr noundef %17), !dbg !2818
  br label %for.inc, !dbg !2819

for.inc:                                          ; preds = %for.body
  %18 = load ptr, ptr %first.addr, align 8, !dbg !2820, !tbaa !2416
  %next = getelementptr inbounds %struct.dav_response, ptr %18, i32 0, i32 4, !dbg !2821
  %19 = load ptr, ptr %next, align 8, !dbg !2821, !tbaa !2822
  store ptr %19, ptr %first.addr, align 8, !dbg !2823, !tbaa !2416
  br label %for.cond, !dbg !2824, !llvm.loop !2825

for.end:                                          ; preds = %for.cond
  %20 = load ptr, ptr %subpool, align 8, !dbg !2827, !tbaa !2416
  call void @apr_pool_destroy(ptr noundef %20), !dbg !2828
  %21 = load ptr, ptr %r.addr, align 8, !dbg !2829, !tbaa !2416
  %22 = load ptr, ptr %bb, align 8, !dbg !2830, !tbaa !2416
  %call3 = call i32 @dav_finish_multistatus(ptr noundef %21, ptr noundef %22), !dbg !2831
  call void @llvm.lifetime.end.p0(i64 8, ptr %bb) #10, !dbg !2832
  call void @llvm.lifetime.end.p0(i64 8, ptr %subpool) #10, !dbg !2832
  ret void, !dbg !2832
}

declare !dbg !2833 ptr @apr_brigade_create(ptr noundef, ptr noundef) #2

declare !dbg !2836 i32 @apr_pool_create_ex(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !2848 void @apr_pool_tag(ptr noundef, ptr noundef) #2

declare !dbg !2851 void @apr_pool_clear(ptr noundef) #2

declare !dbg !2852 void @apr_pool_destroy(ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @dav_handle_err(ptr noundef %r, ptr noundef %err, ptr noundef %response) #0 !dbg !2853 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %response.addr = alloca ptr, align 8
  %stackerr = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2857, metadata !DIExpression()), !dbg !2863
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !2858, metadata !DIExpression()), !dbg !2864
  store ptr %response, ptr %response.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %response.addr, metadata !2859, metadata !DIExpression()), !dbg !2865
  %0 = load ptr, ptr %r.addr, align 8, !dbg !2866, !tbaa !2416
  %1 = load ptr, ptr %err.addr, align 8, !dbg !2867, !tbaa !2416
  call void @dav_log_err(ptr noundef %0, ptr noundef %1, i32 noundef 3), !dbg !2868
  %2 = load ptr, ptr %err.addr, align 8, !dbg !2869, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %2, i32 0, i32 0, !dbg !2869
  %3 = load i32, ptr %status, align 8, !dbg !2869, !tbaa !2871
  %cmp = icmp sge i32 %3, 100, !dbg !2869
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !2869

land.lhs.true:                                    ; preds = %entry
  %4 = load ptr, ptr %err.addr, align 8, !dbg !2869, !tbaa !2416
  %status1 = getelementptr inbounds %struct.dav_error, ptr %4, i32 0, i32 0, !dbg !2869
  %5 = load i32, ptr %status1, align 8, !dbg !2869, !tbaa !2871
  %cmp2 = icmp slt i32 %5, 600, !dbg !2869
  br i1 %cmp2, label %if.end, label %if.then, !dbg !2873

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 -102, ptr %retval, align 4, !dbg !2874
  br label %return, !dbg !2874

if.end:                                           ; preds = %land.lhs.true
  %6 = load ptr, ptr %response.addr, align 8, !dbg !2876, !tbaa !2416
  %cmp3 = icmp eq ptr %6, null, !dbg !2877
  br i1 %cmp3, label %if.then4, label %if.end14, !dbg !2878

if.then4:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %stackerr) #10, !dbg !2879
  tail call void @llvm.dbg.declare(metadata ptr %stackerr, metadata !2860, metadata !DIExpression()), !dbg !2880
  %7 = load ptr, ptr %err.addr, align 8, !dbg !2881, !tbaa !2416
  store ptr %7, ptr %stackerr, align 8, !dbg !2880, !tbaa !2416
  %8 = load ptr, ptr %r.addr, align 8, !dbg !2882, !tbaa !2416
  %notes = getelementptr inbounds %struct.request_rec, ptr %8, i32 0, i32 38, !dbg !2883
  %9 = load ptr, ptr %notes, align 8, !dbg !2883, !tbaa !2884
  call void @apr_table_setn(ptr noundef %9, ptr noundef @.str.15, ptr noundef @.str.16), !dbg !2885
  br label %while.cond, !dbg !2886

while.cond:                                       ; preds = %while.body, %if.then4
  %10 = load ptr, ptr %stackerr, align 8, !dbg !2887, !tbaa !2416
  %cmp5 = icmp ne ptr %10, null, !dbg !2888
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !2889

land.rhs:                                         ; preds = %while.cond
  %11 = load ptr, ptr %stackerr, align 8, !dbg !2890, !tbaa !2416
  %tagname = getelementptr inbounds %struct.dav_error, ptr %11, i32 0, i32 5, !dbg !2891
  %12 = load ptr, ptr %tagname, align 8, !dbg !2891, !tbaa !2892
  %cmp6 = icmp eq ptr %12, null, !dbg !2893
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ], !dbg !2894
  br i1 %13, label %while.body, label %while.end, !dbg !2886

while.body:                                       ; preds = %land.end
  %14 = load ptr, ptr %stackerr, align 8, !dbg !2895, !tbaa !2416
  %prev = getelementptr inbounds %struct.dav_error, ptr %14, i32 0, i32 6, !dbg !2896
  %15 = load ptr, ptr %prev, align 8, !dbg !2896, !tbaa !2897
  store ptr %15, ptr %stackerr, align 8, !dbg !2898, !tbaa !2416
  br label %while.cond, !dbg !2886, !llvm.loop !2899

while.end:                                        ; preds = %land.end
  %16 = load ptr, ptr %stackerr, align 8, !dbg !2900, !tbaa !2416
  %cmp7 = icmp ne ptr %16, null, !dbg !2902
  br i1 %cmp7, label %land.lhs.true8, label %if.end12, !dbg !2903

land.lhs.true8:                                   ; preds = %while.end
  %17 = load ptr, ptr %stackerr, align 8, !dbg !2904, !tbaa !2416
  %tagname9 = getelementptr inbounds %struct.dav_error, ptr %17, i32 0, i32 5, !dbg !2905
  %18 = load ptr, ptr %tagname9, align 8, !dbg !2905, !tbaa !2892
  %cmp10 = icmp ne ptr %18, null, !dbg !2906
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2907

if.then11:                                        ; preds = %land.lhs.true8
  %19 = load ptr, ptr %r.addr, align 8, !dbg !2908, !tbaa !2416
  %20 = load ptr, ptr %stackerr, align 8, !dbg !2909, !tbaa !2416
  %call = call i32 @dav_error_response_tag(ptr noundef %19, ptr noundef %20), !dbg !2910
  store i32 %call, ptr %retval, align 4, !dbg !2911
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2911

if.end12:                                         ; preds = %land.lhs.true8, %while.end
  %21 = load ptr, ptr %err.addr, align 8, !dbg !2912, !tbaa !2416
  %status13 = getelementptr inbounds %struct.dav_error, ptr %21, i32 0, i32 0, !dbg !2913
  %22 = load i32, ptr %status13, align 8, !dbg !2913, !tbaa !2871
  store i32 %22, ptr %retval, align 4, !dbg !2914
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2914

cleanup:                                          ; preds = %if.end12, %if.then11
  call void @llvm.lifetime.end.p0(i64 8, ptr %stackerr) #10, !dbg !2915
  br label %return

if.end14:                                         ; preds = %if.end
  %23 = load ptr, ptr %r.addr, align 8, !dbg !2916, !tbaa !2416
  %24 = load ptr, ptr %err.addr, align 8, !dbg !2917, !tbaa !2416
  %status15 = getelementptr inbounds %struct.dav_error, ptr %24, i32 0, i32 0, !dbg !2918
  %25 = load i32, ptr %status15, align 8, !dbg !2918, !tbaa !2871
  %26 = load ptr, ptr %response.addr, align 8, !dbg !2919, !tbaa !2416
  call void @dav_send_multistatus(ptr noundef %23, i32 noundef %25, ptr noundef %26, ptr noundef null), !dbg !2920
  store i32 -2, ptr %retval, align 4, !dbg !2921
  br label %return, !dbg !2921

return:                                           ; preds = %if.end14, %cleanup, %if.then
  %27 = load i32, ptr %retval, align 4, !dbg !2922
  ret i32 %27, !dbg !2922
}

; Function Attrs: nounwind uwtable
define internal void @dav_log_err(ptr noundef %r, ptr noundef %err, i32 noundef %level) #0 !dbg !2923 {
entry:
  %r.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %errscan = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2927, metadata !DIExpression()), !dbg !2931
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !2928, metadata !DIExpression()), !dbg !2932
  store i32 %level, ptr %level.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !2929, metadata !DIExpression()), !dbg !2933
  call void @llvm.lifetime.start.p0(i64 8, ptr %errscan) #10, !dbg !2934
  tail call void @llvm.dbg.declare(metadata ptr %errscan, metadata !2930, metadata !DIExpression()), !dbg !2935
  %0 = load ptr, ptr %err.addr, align 8, !dbg !2936, !tbaa !2416
  store ptr %0, ptr %errscan, align 8, !dbg !2938, !tbaa !2416
  br label %for.cond, !dbg !2939

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load ptr, ptr %errscan, align 8, !dbg !2940, !tbaa !2416
  %cmp = icmp ne ptr %1, null, !dbg !2942
  br i1 %cmp, label %for.body, label %for.end, !dbg !2943

for.body:                                         ; preds = %for.cond
  %2 = load ptr, ptr %errscan, align 8, !dbg !2944, !tbaa !2416
  %desc = getelementptr inbounds %struct.dav_error, ptr %2, i32 0, i32 2, !dbg !2947
  %3 = load ptr, ptr %desc, align 8, !dbg !2947, !tbaa !2948
  %cmp1 = icmp eq ptr %3, null, !dbg !2949
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2950

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !2951

if.end:                                           ; preds = %for.body
  br label %do.body, !dbg !2952

do.body:                                          ; preds = %if.end
  %4 = load i32, ptr %level.addr, align 4, !dbg !2953, !tbaa !2683
  %and = and i32 %4, 15, !dbg !2953
  %cmp2 = icmp sle i32 %and, 5, !dbg !2953
  br i1 %cmp2, label %if.then98, label %lor.lhs.false, !dbg !2953

lor.lhs.false:                                    ; preds = %do.body
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !2953

cond.true:                                        ; preds = %lor.lhs.false
  %5 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !2953, !tbaa !2683
  br label %cond.end, !dbg !2953

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !2953

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ -1, %cond.false ], !dbg !2953
  %cmp3 = icmp slt i32 %cond, 0, !dbg !2953
  br i1 %cmp3, label %cond.true46, label %lor.lhs.false4, !dbg !2953

lor.lhs.false4:                                   ; preds = %cond.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log = getelementptr inbounds %struct.request_rec, ptr %6, i32 0, i32 56, !dbg !2953
  %7 = load ptr, ptr %log, align 8, !dbg !2953, !tbaa !2956
  %tobool = icmp ne ptr %7, null, !dbg !2953
  br i1 %tobool, label %cond.true5, label %cond.false7, !dbg !2953

cond.true5:                                       ; preds = %lor.lhs.false4
  %8 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log6 = getelementptr inbounds %struct.request_rec, ptr %8, i32 0, i32 56, !dbg !2953
  %9 = load ptr, ptr %log6, align 8, !dbg !2953, !tbaa !2956
  br label %cond.end17, !dbg !2953

cond.false7:                                      ; preds = %lor.lhs.false4
  %10 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection = getelementptr inbounds %struct.request_rec, ptr %10, i32 0, i32 1, !dbg !2953
  %11 = load ptr, ptr %connection, align 8, !dbg !2953, !tbaa !2746
  %log8 = getelementptr inbounds %struct.conn_rec, ptr %11, i32 0, i32 24, !dbg !2953
  %12 = load ptr, ptr %log8, align 8, !dbg !2953, !tbaa !2957
  %tobool9 = icmp ne ptr %12, null, !dbg !2953
  br i1 %tobool9, label %cond.true10, label %cond.false13, !dbg !2953

cond.true10:                                      ; preds = %cond.false7
  %13 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection11 = getelementptr inbounds %struct.request_rec, ptr %13, i32 0, i32 1, !dbg !2953
  %14 = load ptr, ptr %connection11, align 8, !dbg !2953, !tbaa !2746
  %log12 = getelementptr inbounds %struct.conn_rec, ptr %14, i32 0, i32 24, !dbg !2953
  %15 = load ptr, ptr %log12, align 8, !dbg !2953, !tbaa !2957
  br label %cond.end15, !dbg !2953

cond.false13:                                     ; preds = %cond.false7
  %16 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %server = getelementptr inbounds %struct.request_rec, ptr %16, i32 0, i32 2, !dbg !2953
  %17 = load ptr, ptr %server, align 8, !dbg !2953, !tbaa !2958
  %log14 = getelementptr inbounds %struct.server_rec, ptr %17, i32 0, i32 4, !dbg !2953
  br label %cond.end15, !dbg !2953

cond.end15:                                       ; preds = %cond.false13, %cond.true10
  %cond16 = phi ptr [ %15, %cond.true10 ], [ %log14, %cond.false13 ], !dbg !2953
  br label %cond.end17, !dbg !2953

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi ptr [ %9, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !2953
  %module_levels = getelementptr inbounds %struct.ap_logconf, ptr %cond18, i32 0, i32 0, !dbg !2953
  %18 = load ptr, ptr %module_levels, align 8, !dbg !2953, !tbaa !2959
  %cmp19 = icmp eq ptr %18, null, !dbg !2953
  br i1 %cmp19, label %cond.true46, label %lor.lhs.false20, !dbg !2953

lor.lhs.false20:                                  ; preds = %cond.end17
  %19 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log21 = getelementptr inbounds %struct.request_rec, ptr %19, i32 0, i32 56, !dbg !2953
  %20 = load ptr, ptr %log21, align 8, !dbg !2953, !tbaa !2956
  %tobool22 = icmp ne ptr %20, null, !dbg !2953
  br i1 %tobool22, label %cond.true23, label %cond.false25, !dbg !2953

cond.true23:                                      ; preds = %lor.lhs.false20
  %21 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log24 = getelementptr inbounds %struct.request_rec, ptr %21, i32 0, i32 56, !dbg !2953
  %22 = load ptr, ptr %log24, align 8, !dbg !2953, !tbaa !2956
  br label %cond.end37, !dbg !2953

cond.false25:                                     ; preds = %lor.lhs.false20
  %23 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection26 = getelementptr inbounds %struct.request_rec, ptr %23, i32 0, i32 1, !dbg !2953
  %24 = load ptr, ptr %connection26, align 8, !dbg !2953, !tbaa !2746
  %log27 = getelementptr inbounds %struct.conn_rec, ptr %24, i32 0, i32 24, !dbg !2953
  %25 = load ptr, ptr %log27, align 8, !dbg !2953, !tbaa !2957
  %tobool28 = icmp ne ptr %25, null, !dbg !2953
  br i1 %tobool28, label %cond.true29, label %cond.false32, !dbg !2953

cond.true29:                                      ; preds = %cond.false25
  %26 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection30 = getelementptr inbounds %struct.request_rec, ptr %26, i32 0, i32 1, !dbg !2953
  %27 = load ptr, ptr %connection30, align 8, !dbg !2953, !tbaa !2746
  %log31 = getelementptr inbounds %struct.conn_rec, ptr %27, i32 0, i32 24, !dbg !2953
  %28 = load ptr, ptr %log31, align 8, !dbg !2953, !tbaa !2957
  br label %cond.end35, !dbg !2953

cond.false32:                                     ; preds = %cond.false25
  %29 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %server33 = getelementptr inbounds %struct.request_rec, ptr %29, i32 0, i32 2, !dbg !2953
  %30 = load ptr, ptr %server33, align 8, !dbg !2953, !tbaa !2958
  %log34 = getelementptr inbounds %struct.server_rec, ptr %30, i32 0, i32 4, !dbg !2953
  br label %cond.end35, !dbg !2953

cond.end35:                                       ; preds = %cond.false32, %cond.true29
  %cond36 = phi ptr [ %28, %cond.true29 ], [ %log34, %cond.false32 ], !dbg !2953
  br label %cond.end37, !dbg !2953

cond.end37:                                       ; preds = %cond.end35, %cond.true23
  %cond38 = phi ptr [ %22, %cond.true23 ], [ %cond36, %cond.end35 ], !dbg !2953
  %module_levels39 = getelementptr inbounds %struct.ap_logconf, ptr %cond38, i32 0, i32 0, !dbg !2953
  %31 = load ptr, ptr %module_levels39, align 8, !dbg !2953, !tbaa !2959
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true40, label %cond.false41, !dbg !2953

cond.true40:                                      ; preds = %cond.end37
  %32 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !2953, !tbaa !2683
  br label %cond.end42, !dbg !2953

cond.false41:                                     ; preds = %cond.end37
  br label %cond.end42, !dbg !2953

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond43 = phi i32 [ %32, %cond.true40 ], [ -1, %cond.false41 ], !dbg !2953
  %idxprom = sext i32 %cond43 to i64, !dbg !2953
  %arrayidx = getelementptr inbounds i8, ptr %31, i64 %idxprom, !dbg !2953
  %33 = load i8, ptr %arrayidx, align 1, !dbg !2953, !tbaa !2961
  %conv = sext i8 %33 to i32, !dbg !2953
  %cmp44 = icmp slt i32 %conv, 0, !dbg !2953
  br i1 %cmp44, label %cond.true46, label %cond.false66, !dbg !2953

cond.true46:                                      ; preds = %cond.end42, %cond.end17, %cond.end
  %34 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log47 = getelementptr inbounds %struct.request_rec, ptr %34, i32 0, i32 56, !dbg !2953
  %35 = load ptr, ptr %log47, align 8, !dbg !2953, !tbaa !2956
  %tobool48 = icmp ne ptr %35, null, !dbg !2953
  br i1 %tobool48, label %cond.true49, label %cond.false51, !dbg !2953

cond.true49:                                      ; preds = %cond.true46
  %36 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log50 = getelementptr inbounds %struct.request_rec, ptr %36, i32 0, i32 56, !dbg !2953
  %37 = load ptr, ptr %log50, align 8, !dbg !2953, !tbaa !2956
  br label %cond.end63, !dbg !2953

cond.false51:                                     ; preds = %cond.true46
  %38 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection52 = getelementptr inbounds %struct.request_rec, ptr %38, i32 0, i32 1, !dbg !2953
  %39 = load ptr, ptr %connection52, align 8, !dbg !2953, !tbaa !2746
  %log53 = getelementptr inbounds %struct.conn_rec, ptr %39, i32 0, i32 24, !dbg !2953
  %40 = load ptr, ptr %log53, align 8, !dbg !2953, !tbaa !2957
  %tobool54 = icmp ne ptr %40, null, !dbg !2953
  br i1 %tobool54, label %cond.true55, label %cond.false58, !dbg !2953

cond.true55:                                      ; preds = %cond.false51
  %41 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection56 = getelementptr inbounds %struct.request_rec, ptr %41, i32 0, i32 1, !dbg !2953
  %42 = load ptr, ptr %connection56, align 8, !dbg !2953, !tbaa !2746
  %log57 = getelementptr inbounds %struct.conn_rec, ptr %42, i32 0, i32 24, !dbg !2953
  %43 = load ptr, ptr %log57, align 8, !dbg !2953, !tbaa !2957
  br label %cond.end61, !dbg !2953

cond.false58:                                     ; preds = %cond.false51
  %44 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %server59 = getelementptr inbounds %struct.request_rec, ptr %44, i32 0, i32 2, !dbg !2953
  %45 = load ptr, ptr %server59, align 8, !dbg !2953, !tbaa !2958
  %log60 = getelementptr inbounds %struct.server_rec, ptr %45, i32 0, i32 4, !dbg !2953
  br label %cond.end61, !dbg !2953

cond.end61:                                       ; preds = %cond.false58, %cond.true55
  %cond62 = phi ptr [ %43, %cond.true55 ], [ %log60, %cond.false58 ], !dbg !2953
  br label %cond.end63, !dbg !2953

cond.end63:                                       ; preds = %cond.end61, %cond.true49
  %cond64 = phi ptr [ %37, %cond.true49 ], [ %cond62, %cond.end61 ], !dbg !2953
  %level65 = getelementptr inbounds %struct.ap_logconf, ptr %cond64, i32 0, i32 1, !dbg !2953
  %46 = load i32, ptr %level65, align 8, !dbg !2953, !tbaa !2962
  br label %cond.end93, !dbg !2953

cond.false66:                                     ; preds = %cond.end42
  %47 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log67 = getelementptr inbounds %struct.request_rec, ptr %47, i32 0, i32 56, !dbg !2953
  %48 = load ptr, ptr %log67, align 8, !dbg !2953, !tbaa !2956
  %tobool68 = icmp ne ptr %48, null, !dbg !2953
  br i1 %tobool68, label %cond.true69, label %cond.false71, !dbg !2953

cond.true69:                                      ; preds = %cond.false66
  %49 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %log70 = getelementptr inbounds %struct.request_rec, ptr %49, i32 0, i32 56, !dbg !2953
  %50 = load ptr, ptr %log70, align 8, !dbg !2953, !tbaa !2956
  br label %cond.end83, !dbg !2953

cond.false71:                                     ; preds = %cond.false66
  %51 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection72 = getelementptr inbounds %struct.request_rec, ptr %51, i32 0, i32 1, !dbg !2953
  %52 = load ptr, ptr %connection72, align 8, !dbg !2953, !tbaa !2746
  %log73 = getelementptr inbounds %struct.conn_rec, ptr %52, i32 0, i32 24, !dbg !2953
  %53 = load ptr, ptr %log73, align 8, !dbg !2953, !tbaa !2957
  %tobool74 = icmp ne ptr %53, null, !dbg !2953
  br i1 %tobool74, label %cond.true75, label %cond.false78, !dbg !2953

cond.true75:                                      ; preds = %cond.false71
  %54 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %connection76 = getelementptr inbounds %struct.request_rec, ptr %54, i32 0, i32 1, !dbg !2953
  %55 = load ptr, ptr %connection76, align 8, !dbg !2953, !tbaa !2746
  %log77 = getelementptr inbounds %struct.conn_rec, ptr %55, i32 0, i32 24, !dbg !2953
  %56 = load ptr, ptr %log77, align 8, !dbg !2953, !tbaa !2957
  br label %cond.end81, !dbg !2953

cond.false78:                                     ; preds = %cond.false71
  %57 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %server79 = getelementptr inbounds %struct.request_rec, ptr %57, i32 0, i32 2, !dbg !2953
  %58 = load ptr, ptr %server79, align 8, !dbg !2953, !tbaa !2958
  %log80 = getelementptr inbounds %struct.server_rec, ptr %58, i32 0, i32 4, !dbg !2953
  br label %cond.end81, !dbg !2953

cond.end81:                                       ; preds = %cond.false78, %cond.true75
  %cond82 = phi ptr [ %56, %cond.true75 ], [ %log80, %cond.false78 ], !dbg !2953
  br label %cond.end83, !dbg !2953

cond.end83:                                       ; preds = %cond.end81, %cond.true69
  %cond84 = phi ptr [ %50, %cond.true69 ], [ %cond82, %cond.end81 ], !dbg !2953
  %module_levels85 = getelementptr inbounds %struct.ap_logconf, ptr %cond84, i32 0, i32 0, !dbg !2953
  %59 = load ptr, ptr %module_levels85, align 8, !dbg !2953, !tbaa !2959
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true86, label %cond.false87, !dbg !2953

cond.true86:                                      ; preds = %cond.end83
  %60 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !2953, !tbaa !2683
  br label %cond.end88, !dbg !2953

cond.false87:                                     ; preds = %cond.end83
  br label %cond.end88, !dbg !2953

cond.end88:                                       ; preds = %cond.false87, %cond.true86
  %cond89 = phi i32 [ %60, %cond.true86 ], [ -1, %cond.false87 ], !dbg !2953
  %idxprom90 = sext i32 %cond89 to i64, !dbg !2953
  %arrayidx91 = getelementptr inbounds i8, ptr %59, i64 %idxprom90, !dbg !2953
  %61 = load i8, ptr %arrayidx91, align 1, !dbg !2953, !tbaa !2961
  %conv92 = sext i8 %61 to i32, !dbg !2953
  br label %cond.end93, !dbg !2953

cond.end93:                                       ; preds = %cond.end88, %cond.end63
  %cond94 = phi i32 [ %46, %cond.end63 ], [ %conv92, %cond.end88 ], !dbg !2953
  %62 = load i32, ptr %level.addr, align 4, !dbg !2953, !tbaa !2683
  %and95 = and i32 %62, 15, !dbg !2953
  %cmp96 = icmp sge i32 %cond94, %and95, !dbg !2953
  br i1 %cmp96, label %if.then98, label %if.end104, !dbg !2963

if.then98:                                        ; preds = %cond.end93, %do.body
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true99, label %cond.false100, !dbg !2953

cond.true99:                                      ; preds = %if.then98
  %63 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !2953, !tbaa !2683
  br label %cond.end101, !dbg !2953

cond.false100:                                    ; preds = %if.then98
  br label %cond.end101, !dbg !2953

cond.end101:                                      ; preds = %cond.false100, %cond.true99
  %cond102 = phi i32 [ %63, %cond.true99 ], [ -1, %cond.false100 ], !dbg !2953
  %64 = load i32, ptr %level.addr, align 4, !dbg !2953, !tbaa !2683
  %65 = load ptr, ptr %errscan, align 8, !dbg !2953, !tbaa !2416
  %aprerr = getelementptr inbounds %struct.dav_error, ptr %65, i32 0, i32 3, !dbg !2953
  %66 = load i32, ptr %aprerr, align 8, !dbg !2953, !tbaa !2964
  %67 = load ptr, ptr %r.addr, align 8, !dbg !2953, !tbaa !2416
  %68 = load ptr, ptr %errscan, align 8, !dbg !2953, !tbaa !2416
  %desc103 = getelementptr inbounds %struct.dav_error, ptr %68, i32 0, i32 2, !dbg !2953
  %69 = load ptr, ptr %desc103, align 8, !dbg !2953, !tbaa !2948
  %70 = load ptr, ptr %errscan, align 8, !dbg !2953, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %70, i32 0, i32 0, !dbg !2953
  %71 = load i32, ptr %status, align 8, !dbg !2953, !tbaa !2871
  %72 = load ptr, ptr %errscan, align 8, !dbg !2953, !tbaa !2416
  %error_id = getelementptr inbounds %struct.dav_error, ptr %72, i32 0, i32 1, !dbg !2953
  %73 = load i32, ptr %error_id, align 4, !dbg !2953, !tbaa !2965
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 605, i32 noundef %cond102, i32 noundef %64, i32 noundef %66, ptr noundef %67, ptr noundef @.str.42, ptr noundef %69, i32 noundef %71, i32 noundef %73), !dbg !2953
  br label %if.end104, !dbg !2953

if.end104:                                        ; preds = %cond.end101, %cond.end93
  br label %do.cond, !dbg !2963

do.cond:                                          ; preds = %if.end104
  br label %do.end, !dbg !2963

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !2966

for.inc:                                          ; preds = %do.end, %if.then
  %74 = load ptr, ptr %errscan, align 8, !dbg !2967, !tbaa !2416
  %prev = getelementptr inbounds %struct.dav_error, ptr %74, i32 0, i32 6, !dbg !2968
  %75 = load ptr, ptr %prev, align 8, !dbg !2968, !tbaa !2897
  store ptr %75, ptr %errscan, align 8, !dbg !2969, !tbaa !2416
  br label %for.cond, !dbg !2970, !llvm.loop !2971

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %errscan) #10, !dbg !2973
  ret void, !dbg !2973
}

declare !dbg !2974 void @apr_table_setn(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_error_response_tag(ptr noundef %r, ptr noundef %err) #0 !dbg !2977 {
entry:
  %r.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !2981, metadata !DIExpression()), !dbg !2983
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !2982, metadata !DIExpression()), !dbg !2984
  %0 = load ptr, ptr %err.addr, align 8, !dbg !2985, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %0, i32 0, i32 0, !dbg !2986
  %1 = load i32, ptr %status, align 8, !dbg !2986, !tbaa !2871
  %2 = load ptr, ptr %r.addr, align 8, !dbg !2987, !tbaa !2416
  %status1 = getelementptr inbounds %struct.request_rec, ptr %2, i32 0, i32 15, !dbg !2988
  store i32 %1, ptr %status1, align 8, !dbg !2989, !tbaa !2690
  %3 = load ptr, ptr %r.addr, align 8, !dbg !2990, !tbaa !2416
  call void @ap_set_content_type(ptr noundef %3, ptr noundef @.str.9), !dbg !2991
  %4 = load ptr, ptr %r.addr, align 8, !dbg !2992, !tbaa !2416
  %call = call i32 @ap_rputs(ptr noundef @.str.43, ptr noundef %4), !dbg !2993
  %5 = load ptr, ptr %err.addr, align 8, !dbg !2994, !tbaa !2416
  %desc = getelementptr inbounds %struct.dav_error, ptr %5, i32 0, i32 2, !dbg !2996
  %6 = load ptr, ptr %desc, align 8, !dbg !2996, !tbaa !2948
  %cmp = icmp ne ptr %6, null, !dbg !2997
  br i1 %cmp, label %if.then, label %if.end, !dbg !2998

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %r.addr, align 8, !dbg !2999, !tbaa !2416
  %call2 = call i32 @ap_rputs(ptr noundef @.str.44, ptr noundef %7), !dbg !3001
  br label %if.end, !dbg !3002

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %err.addr, align 8, !dbg !3003, !tbaa !2416
  %childtags = getelementptr inbounds %struct.dav_error, ptr %8, i32 0, i32 7, !dbg !3005
  %9 = load ptr, ptr %childtags, align 8, !dbg !3005, !tbaa !3006
  %tobool = icmp ne ptr %9, null, !dbg !3003
  br i1 %tobool, label %if.then3, label %if.else15, !dbg !3007

if.then3:                                         ; preds = %if.end
  %10 = load ptr, ptr %err.addr, align 8, !dbg !3008, !tbaa !2416
  %namespace = getelementptr inbounds %struct.dav_error, ptr %10, i32 0, i32 4, !dbg !3011
  %11 = load ptr, ptr %namespace, align 8, !dbg !3011, !tbaa !3012
  %cmp4 = icmp ne ptr %11, null, !dbg !3013
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !3014

if.then5:                                         ; preds = %if.then3
  %12 = load ptr, ptr %r.addr, align 8, !dbg !3015, !tbaa !2416
  %13 = load ptr, ptr %err.addr, align 8, !dbg !3017, !tbaa !2416
  %namespace6 = getelementptr inbounds %struct.dav_error, ptr %13, i32 0, i32 4, !dbg !3018
  %14 = load ptr, ptr %namespace6, align 8, !dbg !3018, !tbaa !3012
  %15 = load ptr, ptr %err.addr, align 8, !dbg !3019, !tbaa !2416
  %tagname = getelementptr inbounds %struct.dav_error, ptr %15, i32 0, i32 5, !dbg !3020
  %16 = load ptr, ptr %tagname, align 8, !dbg !3020, !tbaa !2892
  %17 = load ptr, ptr %err.addr, align 8, !dbg !3021, !tbaa !2416
  %childtags7 = getelementptr inbounds %struct.dav_error, ptr %17, i32 0, i32 7, !dbg !3022
  %18 = load ptr, ptr %childtags7, align 8, !dbg !3022, !tbaa !3006
  %19 = load ptr, ptr %err.addr, align 8, !dbg !3023, !tbaa !2416
  %tagname8 = getelementptr inbounds %struct.dav_error, ptr %19, i32 0, i32 5, !dbg !3024
  %20 = load ptr, ptr %tagname8, align 8, !dbg !3024, !tbaa !2892
  %call9 = call i32 (ptr, ptr, ...) @ap_rprintf(ptr noundef %12, ptr noundef @.str.45, ptr noundef %14, ptr noundef %16, ptr noundef %18, ptr noundef %20), !dbg !3025
  br label %if.end14, !dbg !3026

if.else:                                          ; preds = %if.then3
  %21 = load ptr, ptr %r.addr, align 8, !dbg !3027, !tbaa !2416
  %22 = load ptr, ptr %err.addr, align 8, !dbg !3029, !tbaa !2416
  %tagname10 = getelementptr inbounds %struct.dav_error, ptr %22, i32 0, i32 5, !dbg !3030
  %23 = load ptr, ptr %tagname10, align 8, !dbg !3030, !tbaa !2892
  %24 = load ptr, ptr %err.addr, align 8, !dbg !3031, !tbaa !2416
  %childtags11 = getelementptr inbounds %struct.dav_error, ptr %24, i32 0, i32 7, !dbg !3032
  %25 = load ptr, ptr %childtags11, align 8, !dbg !3032, !tbaa !3006
  %26 = load ptr, ptr %err.addr, align 8, !dbg !3033, !tbaa !2416
  %tagname12 = getelementptr inbounds %struct.dav_error, ptr %26, i32 0, i32 5, !dbg !3034
  %27 = load ptr, ptr %tagname12, align 8, !dbg !3034, !tbaa !2892
  %call13 = call i32 (ptr, ptr, ...) @ap_rprintf(ptr noundef %21, ptr noundef @.str.46, ptr noundef %23, ptr noundef %25, ptr noundef %27), !dbg !3035
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then5
  br label %if.end26, !dbg !3036

if.else15:                                        ; preds = %if.end
  %28 = load ptr, ptr %err.addr, align 8, !dbg !3037, !tbaa !2416
  %namespace16 = getelementptr inbounds %struct.dav_error, ptr %28, i32 0, i32 4, !dbg !3040
  %29 = load ptr, ptr %namespace16, align 8, !dbg !3040, !tbaa !3012
  %cmp17 = icmp ne ptr %29, null, !dbg !3041
  br i1 %cmp17, label %if.then18, label %if.else22, !dbg !3042

if.then18:                                        ; preds = %if.else15
  %30 = load ptr, ptr %r.addr, align 8, !dbg !3043, !tbaa !2416
  %31 = load ptr, ptr %err.addr, align 8, !dbg !3045, !tbaa !2416
  %namespace19 = getelementptr inbounds %struct.dav_error, ptr %31, i32 0, i32 4, !dbg !3046
  %32 = load ptr, ptr %namespace19, align 8, !dbg !3046, !tbaa !3012
  %33 = load ptr, ptr %err.addr, align 8, !dbg !3047, !tbaa !2416
  %tagname20 = getelementptr inbounds %struct.dav_error, ptr %33, i32 0, i32 5, !dbg !3048
  %34 = load ptr, ptr %tagname20, align 8, !dbg !3048, !tbaa !2892
  %call21 = call i32 (ptr, ptr, ...) @ap_rprintf(ptr noundef %30, ptr noundef @.str.47, ptr noundef %32, ptr noundef %34), !dbg !3049
  br label %if.end25, !dbg !3050

if.else22:                                        ; preds = %if.else15
  %35 = load ptr, ptr %r.addr, align 8, !dbg !3051, !tbaa !2416
  %36 = load ptr, ptr %err.addr, align 8, !dbg !3053, !tbaa !2416
  %tagname23 = getelementptr inbounds %struct.dav_error, ptr %36, i32 0, i32 5, !dbg !3054
  %37 = load ptr, ptr %tagname23, align 8, !dbg !3054, !tbaa !2892
  %call24 = call i32 (ptr, ptr, ...) @ap_rprintf(ptr noundef %35, ptr noundef @.str.48, ptr noundef %37), !dbg !3055
  br label %if.end25

if.end25:                                         ; preds = %if.else22, %if.then18
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end14
  %38 = load ptr, ptr %err.addr, align 8, !dbg !3056, !tbaa !2416
  %desc27 = getelementptr inbounds %struct.dav_error, ptr %38, i32 0, i32 2, !dbg !3058
  %39 = load ptr, ptr %desc27, align 8, !dbg !3058, !tbaa !2948
  %cmp28 = icmp ne ptr %39, null, !dbg !3059
  br i1 %cmp28, label %if.then29, label %if.end33, !dbg !3060

if.then29:                                        ; preds = %if.end26
  %40 = load ptr, ptr %r.addr, align 8, !dbg !3061, !tbaa !2416
  %41 = load ptr, ptr %err.addr, align 8, !dbg !3063, !tbaa !2416
  %error_id = getelementptr inbounds %struct.dav_error, ptr %41, i32 0, i32 1, !dbg !3064
  %42 = load i32, ptr %error_id, align 4, !dbg !3064, !tbaa !2965
  %43 = load ptr, ptr %r.addr, align 8, !dbg !3065, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %43, i32 0, i32 0, !dbg !3066
  %44 = load ptr, ptr %pool, align 8, !dbg !3066, !tbaa !2792
  %45 = load ptr, ptr %err.addr, align 8, !dbg !3067, !tbaa !2416
  %desc30 = getelementptr inbounds %struct.dav_error, ptr %45, i32 0, i32 2, !dbg !3068
  %46 = load ptr, ptr %desc30, align 8, !dbg !3068, !tbaa !2948
  %call31 = call ptr @apr_xml_quote_string(ptr noundef %44, ptr noundef %46, i32 noundef 0), !dbg !3069
  %call32 = call i32 (ptr, ptr, ...) @ap_rprintf(ptr noundef %40, ptr noundef @.str.49, i32 noundef %42, ptr noundef %call31), !dbg !3070
  br label %if.end33, !dbg !3071

if.end33:                                         ; preds = %if.then29, %if.end26
  %47 = load ptr, ptr %r.addr, align 8, !dbg !3072, !tbaa !2416
  %call34 = call i32 @ap_rputs(ptr noundef @.str.50, ptr noundef %47), !dbg !3073
  ret i32 -2, !dbg !3074
}

; Function Attrs: nounwind uwtable
define i32 @dav_get_depth(ptr noundef %r, i32 noundef %def_depth) #0 !dbg !3075 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %def_depth.addr = alloca i32, align 4
  %depth = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !3079, metadata !DIExpression()), !dbg !3082
  store i32 %def_depth, ptr %def_depth.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %def_depth.addr, metadata !3080, metadata !DIExpression()), !dbg !3083
  call void @llvm.lifetime.start.p0(i64 8, ptr %depth) #10, !dbg !3084
  tail call void @llvm.dbg.declare(metadata ptr %depth, metadata !3081, metadata !DIExpression()), !dbg !3085
  %0 = load ptr, ptr %r.addr, align 8, !dbg !3086, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 34, !dbg !3087
  %1 = load ptr, ptr %headers_in, align 8, !dbg !3087, !tbaa !3088
  %call = call ptr @apr_table_get(ptr noundef %1, ptr noundef @.str.17), !dbg !3089
  store ptr %call, ptr %depth, align 8, !dbg !3085, !tbaa !2416
  %2 = load ptr, ptr %depth, align 8, !dbg !3090, !tbaa !2416
  %cmp = icmp eq ptr %2, null, !dbg !3092
  br i1 %cmp, label %if.then, label %if.end, !dbg !3093

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %def_depth.addr, align 4, !dbg !3094, !tbaa !2683
  store i32 %3, ptr %retval, align 4, !dbg !3096
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3096

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %depth, align 8, !dbg !3097, !tbaa !2416
  %call1 = call i32 @ap_cstr_casecmp(ptr noundef %4, ptr noundef @.str.18), !dbg !3099
  %cmp2 = icmp eq i32 %call1, 0, !dbg !3100
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3101

if.then3:                                         ; preds = %if.end
  store i32 2147483647, ptr %retval, align 4, !dbg !3102
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3102

if.else:                                          ; preds = %if.end
  %5 = load ptr, ptr %depth, align 8, !dbg !3104, !tbaa !2416
  %call4 = call i32 @strcmp(ptr noundef %5, ptr noundef @.str.19) #11, !dbg !3106
  %cmp5 = icmp eq i32 %call4, 0, !dbg !3107
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !3108

if.then6:                                         ; preds = %if.else
  store i32 0, ptr %retval, align 4, !dbg !3109
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3109

if.else7:                                         ; preds = %if.else
  %6 = load ptr, ptr %depth, align 8, !dbg !3111, !tbaa !2416
  %call8 = call i32 @strcmp(ptr noundef %6, ptr noundef @.str.20) #11, !dbg !3113
  %cmp9 = icmp eq i32 %call8, 0, !dbg !3114
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3115

if.then10:                                        ; preds = %if.else7
  store i32 1, ptr %retval, align 4, !dbg !3116
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3116

if.end11:                                         ; preds = %if.else7
  br label %if.end12

if.end12:                                         ; preds = %if.end11
  br label %if.end13

if.end13:                                         ; preds = %if.end12
  br label %do.body, !dbg !3118

do.body:                                          ; preds = %if.end13
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !3119

cond.true:                                        ; preds = %do.body
  %7 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !3119, !tbaa !2683
  br label %cond.end, !dbg !3119

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !3119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ -1, %cond.false ], !dbg !3119
  %8 = load ptr, ptr %r.addr, align 8, !dbg !3119, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 710, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %8, ptr noundef @.str.22), !dbg !3119
  br label %do.cond, !dbg !3122

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !3122

do.end:                                           ; preds = %do.cond
  store i32 -1, ptr %retval, align 4, !dbg !3123
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3123

cleanup:                                          ; preds = %do.end, %if.then10, %if.then6, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %depth) #10, !dbg !3124
  %9 = load i32, ptr %retval, align 4, !dbg !3124
  ret i32 %9, !dbg !3124
}

declare !dbg !3125 ptr @apr_table_get(ptr noundef, ptr noundef) #2

declare !dbg !3130 i32 @ap_cstr_casecmp(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !3133 i32 @strcmp(ptr noundef, ptr noundef) #3

declare !dbg !3134 void @ap_log_rerror_(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ...) #2

; Function Attrs: nounwind uwtable
define ptr @dav_get_resource(ptr noundef %r, i32 noundef %label_allowed, i32 noundef %use_checked_in, ptr noundef %res_p) #0 !dbg !3140 {
entry:
  %retval = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %label_allowed.addr = alloca i32, align 4
  %use_checked_in.addr = alloca i32, align 4
  %res_p.addr = alloca ptr, align 8
  %conf = alloca ptr, align 8
  %label = alloca ptr, align 8
  %err = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !3144, metadata !DIExpression()), !dbg !3151
  store i32 %label_allowed, ptr %label_allowed.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %label_allowed.addr, metadata !3145, metadata !DIExpression()), !dbg !3152
  store i32 %use_checked_in, ptr %use_checked_in.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %use_checked_in.addr, metadata !3146, metadata !DIExpression()), !dbg !3153
  store ptr %res_p, ptr %res_p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %res_p.addr, metadata !3147, metadata !DIExpression()), !dbg !3154
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !3155
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !3148, metadata !DIExpression()), !dbg !3156
  call void @llvm.lifetime.start.p0(i64 8, ptr %label) #10, !dbg !3157
  tail call void @llvm.dbg.declare(metadata ptr %label, metadata !3149, metadata !DIExpression()), !dbg !3158
  store ptr null, ptr %label, align 8, !dbg !3158, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !3159
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !3150, metadata !DIExpression()), !dbg !3160
  %0 = load i32, ptr %label_allowed.addr, align 4, !dbg !3161, !tbaa !2683
  %tobool = icmp ne i32 %0, 0, !dbg !3161
  br i1 %tobool, label %if.then, label %if.end, !dbg !3163

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %r.addr, align 8, !dbg !3164, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %1, i32 0, i32 34, !dbg !3166
  %2 = load ptr, ptr %headers_in, align 8, !dbg !3166, !tbaa !3088
  %call = call ptr @apr_table_get(ptr noundef %2, ptr noundef @.str.23), !dbg !3167
  store ptr %call, ptr %label, align 8, !dbg !3168, !tbaa !2416
  br label %if.end, !dbg !3169

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %r.addr, align 8, !dbg !3170, !tbaa !2416
  %per_dir_config = getelementptr inbounds %struct.request_rec, ptr %3, i32 0, i32 54, !dbg !3170
  %4 = load ptr, ptr %per_dir_config, align 8, !dbg !3170, !tbaa !2424
  %5 = load i32, ptr getelementptr inbounds (%struct.module_struct, ptr @dav_module, i32 0, i32 2), align 8, !dbg !3170, !tbaa !2431
  %idxprom = sext i32 %5 to i64, !dbg !3170
  %arrayidx = getelementptr inbounds ptr, ptr %4, i64 %idxprom, !dbg !3170
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3170, !tbaa !2416
  store ptr %6, ptr %conf, align 8, !dbg !3171, !tbaa !2416
  %7 = load ptr, ptr %conf, align 8, !dbg !3172, !tbaa !2416
  %provider = getelementptr inbounds %struct.dav_dir_conf, ptr %7, i32 0, i32 1, !dbg !3174
  %8 = load ptr, ptr %provider, align 8, !dbg !3174, !tbaa !2453
  %cmp = icmp eq ptr %8, null, !dbg !3175
  br i1 %cmp, label %if.then1, label %if.end7, !dbg !3176

if.then1:                                         ; preds = %if.end
  %9 = load ptr, ptr %r.addr, align 8, !dbg !3177, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %9, i32 0, i32 0, !dbg !3179
  %10 = load ptr, ptr %pool, align 8, !dbg !3179, !tbaa !2792
  %11 = load ptr, ptr %r.addr, align 8, !dbg !3180, !tbaa !2416
  %pool2 = getelementptr inbounds %struct.request_rec, ptr %11, i32 0, i32 0, !dbg !3181
  %12 = load ptr, ptr %pool2, align 8, !dbg !3181, !tbaa !2792
  %13 = load ptr, ptr %r.addr, align 8, !dbg !3182, !tbaa !2416
  %pool3 = getelementptr inbounds %struct.request_rec, ptr %13, i32 0, i32 0, !dbg !3182
  %14 = load ptr, ptr %pool3, align 8, !dbg !3182, !tbaa !2792
  %15 = load ptr, ptr %r.addr, align 8, !dbg !3182, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %15, i32 0, i32 47, !dbg !3182
  %16 = load ptr, ptr %uri, align 8, !dbg !3182, !tbaa !3183
  %call4 = call ptr @ap_escape_html2(ptr noundef %14, ptr noundef %16, i32 noundef 0), !dbg !3182
  %call5 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %12, ptr noundef @.str.24, ptr noundef %call4), !dbg !3184
  %call6 = call ptr @dav_new_error(ptr noundef %10, i32 noundef 405, i32 noundef 0, i32 noundef 0, ptr noundef %call5), !dbg !3185
  store ptr %call6, ptr %retval, align 8, !dbg !3186
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3186

if.end7:                                          ; preds = %if.end
  %17 = load ptr, ptr %conf, align 8, !dbg !3187, !tbaa !2416
  %provider8 = getelementptr inbounds %struct.dav_dir_conf, ptr %17, i32 0, i32 1, !dbg !3188
  %18 = load ptr, ptr %provider8, align 8, !dbg !3188, !tbaa !2453
  %repos = getelementptr inbounds %struct.dav_provider, ptr %18, i32 0, i32 0, !dbg !3189
  %19 = load ptr, ptr %repos, align 8, !dbg !3189, !tbaa !3190
  %get_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %19, i32 0, i32 1, !dbg !3191
  %20 = load ptr, ptr %get_resource, align 8, !dbg !3191, !tbaa !3192
  %21 = load ptr, ptr %r.addr, align 8, !dbg !3194, !tbaa !2416
  %22 = load ptr, ptr %conf, align 8, !dbg !3195, !tbaa !2416
  %dir = getelementptr inbounds %struct.dav_dir_conf, ptr %22, i32 0, i32 2, !dbg !3196
  %23 = load ptr, ptr %dir, align 8, !dbg !3196, !tbaa !3197
  %24 = load ptr, ptr %label, align 8, !dbg !3198, !tbaa !2416
  %25 = load i32, ptr %use_checked_in.addr, align 4, !dbg !3199, !tbaa !2683
  %26 = load ptr, ptr %res_p.addr, align 8, !dbg !3200, !tbaa !2416
  %call9 = call ptr %20(ptr noundef %21, ptr noundef %23, ptr noundef %24, i32 noundef %25, ptr noundef %26), !dbg !3201
  store ptr %call9, ptr %err, align 8, !dbg !3202, !tbaa !2416
  %27 = load ptr, ptr %err, align 8, !dbg !3203, !tbaa !2416
  %cmp10 = icmp ne ptr %27, null, !dbg !3205
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !3206

if.then11:                                        ; preds = %if.end7
  %28 = load ptr, ptr %r.addr, align 8, !dbg !3207, !tbaa !2416
  %pool12 = getelementptr inbounds %struct.request_rec, ptr %28, i32 0, i32 0, !dbg !3209
  %29 = load ptr, ptr %pool12, align 8, !dbg !3209, !tbaa !2792
  %30 = load ptr, ptr %err, align 8, !dbg !3210, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %30, i32 0, i32 0, !dbg !3211
  %31 = load i32, ptr %status, align 8, !dbg !3211, !tbaa !2871
  %32 = load ptr, ptr %err, align 8, !dbg !3212, !tbaa !2416
  %call13 = call ptr @dav_push_error(ptr noundef %29, i32 noundef %31, i32 noundef 0, ptr noundef @.str.25, ptr noundef %32), !dbg !3213
  store ptr %call13, ptr %err, align 8, !dbg !3214, !tbaa !2416
  %33 = load ptr, ptr %err, align 8, !dbg !3215, !tbaa !2416
  store ptr %33, ptr %retval, align 8, !dbg !3216
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3216

if.end14:                                         ; preds = %if.end7
  %34 = load ptr, ptr %res_p.addr, align 8, !dbg !3217, !tbaa !2416
  %35 = load ptr, ptr %34, align 8, !dbg !3219, !tbaa !2416
  %cmp15 = icmp eq ptr %35, null, !dbg !3220
  br i1 %cmp15, label %if.then16, label %if.end24, !dbg !3221

if.then16:                                        ; preds = %if.end14
  %36 = load ptr, ptr %r.addr, align 8, !dbg !3222, !tbaa !2416
  %pool17 = getelementptr inbounds %struct.request_rec, ptr %36, i32 0, i32 0, !dbg !3224
  %37 = load ptr, ptr %pool17, align 8, !dbg !3224, !tbaa !2792
  %38 = load ptr, ptr %r.addr, align 8, !dbg !3225, !tbaa !2416
  %pool18 = getelementptr inbounds %struct.request_rec, ptr %38, i32 0, i32 0, !dbg !3226
  %39 = load ptr, ptr %pool18, align 8, !dbg !3226, !tbaa !2792
  %40 = load ptr, ptr %r.addr, align 8, !dbg !3227, !tbaa !2416
  %pool19 = getelementptr inbounds %struct.request_rec, ptr %40, i32 0, i32 0, !dbg !3227
  %41 = load ptr, ptr %pool19, align 8, !dbg !3227, !tbaa !2792
  %42 = load ptr, ptr %r.addr, align 8, !dbg !3227, !tbaa !2416
  %uri20 = getelementptr inbounds %struct.request_rec, ptr %42, i32 0, i32 47, !dbg !3227
  %43 = load ptr, ptr %uri20, align 8, !dbg !3227, !tbaa !3183
  %call21 = call ptr @ap_escape_html2(ptr noundef %41, ptr noundef %43, i32 noundef 0), !dbg !3227
  %call22 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %39, ptr noundef @.str.26, ptr noundef %call21), !dbg !3228
  %call23 = call ptr @dav_new_error(ptr noundef %37, i32 noundef 404, i32 noundef 0, i32 noundef 0, ptr noundef %call22), !dbg !3229
  store ptr %call23, ptr %retval, align 8, !dbg !3230
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3230

if.end24:                                         ; preds = %if.end14
  %44 = load ptr, ptr %r.addr, align 8, !dbg !3231, !tbaa !2416
  %45 = load ptr, ptr %r.addr, align 8, !dbg !3232, !tbaa !2416
  %46 = load ptr, ptr %res_p.addr, align 8, !dbg !3233, !tbaa !2416
  %47 = load ptr, ptr %46, align 8, !dbg !3234, !tbaa !2416
  call void @dav_add_vary_header(ptr noundef %44, ptr noundef %45, ptr noundef %47), !dbg !3235
  store ptr null, ptr %retval, align 8, !dbg !3236
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3236

cleanup:                                          ; preds = %if.end24, %if.then16, %if.then11, %if.then1
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !3237
  call void @llvm.lifetime.end.p0(i64 8, ptr %label) #10, !dbg !3237
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !3237
  %48 = load ptr, ptr %retval, align 8, !dbg !3237
  ret ptr %48, !dbg !3237
}

declare !dbg !3238 ptr @dav_new_error(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) #2

declare !dbg !3241 ptr @apr_psprintf(ptr noundef, ptr noundef, ...) #2

declare !dbg !3245 ptr @ap_escape_html2(ptr noundef, ptr noundef, i32 noundef) #2

declare !dbg !3248 ptr @dav_push_error(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) #2

declare !dbg !3251 void @dav_add_vary_header(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define ptr @dav_open_lockdb(ptr noundef %r, i32 noundef %ro, ptr noundef %lockdb) #0 !dbg !3254 {
entry:
  %retval = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %ro.addr = alloca i32, align 4
  %lockdb.addr = alloca ptr, align 8
  %hooks = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !3258, metadata !DIExpression()), !dbg !3262
  store i32 %ro, ptr %ro.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %ro.addr, metadata !3259, metadata !DIExpression()), !dbg !3263
  store ptr %lockdb, ptr %lockdb.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %lockdb.addr, metadata !3260, metadata !DIExpression()), !dbg !3264
  call void @llvm.lifetime.start.p0(i64 8, ptr %hooks) #10, !dbg !3265
  tail call void @llvm.dbg.declare(metadata ptr %hooks, metadata !3261, metadata !DIExpression()), !dbg !3266
  %0 = load ptr, ptr %r.addr, align 8, !dbg !3267, !tbaa !2416
  %call = call ptr @dav_get_lock_hooks(ptr noundef %0), !dbg !3267
  store ptr %call, ptr %hooks, align 8, !dbg !3266, !tbaa !2416
  %1 = load ptr, ptr %hooks, align 8, !dbg !3268, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !3270
  br i1 %cmp, label %if.then, label %if.end, !dbg !3271

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %lockdb.addr, align 8, !dbg !3272, !tbaa !2416
  store ptr null, ptr %2, align 8, !dbg !3274, !tbaa !2416
  store ptr null, ptr %retval, align 8, !dbg !3275
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3275

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %hooks, align 8, !dbg !3276, !tbaa !2416
  %open_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %3, i32 0, i32 4, !dbg !3277
  %4 = load ptr, ptr %open_lockdb, align 8, !dbg !3277, !tbaa !3278
  %5 = load ptr, ptr %r.addr, align 8, !dbg !3280, !tbaa !2416
  %6 = load i32, ptr %ro.addr, align 4, !dbg !3281, !tbaa !2683
  %7 = load ptr, ptr %lockdb.addr, align 8, !dbg !3282, !tbaa !2416
  %call1 = call ptr %4(ptr noundef %5, i32 noundef %6, i32 noundef 0, ptr noundef %7), !dbg !3283
  store ptr %call1, ptr %retval, align 8, !dbg !3284
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3284

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %hooks) #10, !dbg !3285
  %8 = load ptr, ptr %retval, align 8, !dbg !3285
  ret ptr %8, !dbg !3285
}

; Function Attrs: nounwind uwtable
define void @dav_close_lockdb(ptr noundef %lockdb) #0 !dbg !3286 {
entry:
  %lockdb.addr = alloca ptr, align 8
  store ptr %lockdb, ptr %lockdb.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %lockdb.addr, metadata !3288, metadata !DIExpression()), !dbg !3289
  %0 = load ptr, ptr %lockdb.addr, align 8, !dbg !3290, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_lockdb, ptr %0, i32 0, i32 0, !dbg !3291
  %1 = load ptr, ptr %hooks, align 8, !dbg !3291, !tbaa !3292
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %1, i32 0, i32 5, !dbg !3294
  %2 = load ptr, ptr %close_lockdb, align 8, !dbg !3294, !tbaa !3295
  %3 = load ptr, ptr %lockdb.addr, align 8, !dbg !3296, !tbaa !2416
  call void %2(ptr noundef %3), !dbg !3297
  ret void, !dbg !3298
}

; Function Attrs: nounwind uwtable
define void @dav_add_response(ptr noundef %wres, i32 noundef %status, ptr noundef %propstats) #0 !dbg !3299 {
entry:
  %wres.addr = alloca ptr, align 8
  %status.addr = alloca i32, align 4
  %propstats.addr = alloca ptr, align 8
  %resp = alloca ptr, align 8
  store ptr %wres, ptr %wres.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %wres.addr, metadata !3304, metadata !DIExpression()), !dbg !3308
  store i32 %status, ptr %status.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %status.addr, metadata !3305, metadata !DIExpression()), !dbg !3309
  store ptr %propstats, ptr %propstats.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %propstats.addr, metadata !3306, metadata !DIExpression()), !dbg !3310
  call void @llvm.lifetime.start.p0(i64 8, ptr %resp) #10, !dbg !3311
  tail call void @llvm.dbg.declare(metadata ptr %resp, metadata !3307, metadata !DIExpression()), !dbg !3312
  %0 = load ptr, ptr %wres.addr, align 8, !dbg !3313, !tbaa !2416
  %pool = getelementptr inbounds %struct.dav_walk_resource, ptr %0, i32 0, i32 1, !dbg !3313
  %1 = load ptr, ptr %pool, align 8, !dbg !3313, !tbaa !3314
  %call = call ptr @apr_palloc(ptr noundef %1, i64 noundef 48), !dbg !3313
  call void @llvm.memset.p0.i64(ptr align 1 %call, i8 0, i64 48, i1 false), !dbg !3313
  store ptr %call, ptr %resp, align 8, !dbg !3316, !tbaa !2416
  %2 = load ptr, ptr %wres.addr, align 8, !dbg !3317, !tbaa !2416
  %pool1 = getelementptr inbounds %struct.dav_walk_resource, ptr %2, i32 0, i32 1, !dbg !3318
  %3 = load ptr, ptr %pool1, align 8, !dbg !3318, !tbaa !3314
  %4 = load ptr, ptr %wres.addr, align 8, !dbg !3319, !tbaa !2416
  %resource = getelementptr inbounds %struct.dav_walk_resource, ptr %4, i32 0, i32 2, !dbg !3320
  %5 = load ptr, ptr %resource, align 8, !dbg !3320, !tbaa !3321
  %uri = getelementptr inbounds %struct.dav_resource, ptr %5, i32 0, i32 6, !dbg !3322
  %6 = load ptr, ptr %uri, align 8, !dbg !3322, !tbaa !3323
  %call2 = call ptr @apr_pstrdup(ptr noundef %3, ptr noundef %6), !dbg !3325
  %7 = load ptr, ptr %resp, align 8, !dbg !3326, !tbaa !2416
  %href = getelementptr inbounds %struct.dav_response, ptr %7, i32 0, i32 0, !dbg !3327
  store ptr %call2, ptr %href, align 8, !dbg !3328, !tbaa !2571
  %8 = load i32, ptr %status.addr, align 4, !dbg !3329, !tbaa !2683
  %9 = load ptr, ptr %resp, align 8, !dbg !3330, !tbaa !2416
  %status3 = getelementptr inbounds %struct.dav_response, ptr %9, i32 0, i32 3, !dbg !3331
  store i32 %8, ptr %status3, align 8, !dbg !3332, !tbaa !2587
  %10 = load ptr, ptr %propstats.addr, align 8, !dbg !3333, !tbaa !2416
  %tobool = icmp ne ptr %10, null, !dbg !3333
  br i1 %tobool, label %if.then, label %if.end, !dbg !3335

if.then:                                          ; preds = %entry
  %11 = load ptr, ptr %resp, align 8, !dbg !3336, !tbaa !2416
  %propresult = getelementptr inbounds %struct.dav_response, ptr %11, i32 0, i32 2, !dbg !3338
  %12 = load ptr, ptr %propstats.addr, align 8, !dbg !3339, !tbaa !2416
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %propresult, ptr align 8 %12, i64 16, i1 false), !dbg !3340, !tbaa.struct !3341
  br label %if.end, !dbg !3342

if.end:                                           ; preds = %if.then, %entry
  %13 = load ptr, ptr %wres.addr, align 8, !dbg !3343, !tbaa !2416
  %response = getelementptr inbounds %struct.dav_walk_resource, ptr %13, i32 0, i32 3, !dbg !3344
  %14 = load ptr, ptr %response, align 8, !dbg !3344, !tbaa !3345
  %15 = load ptr, ptr %resp, align 8, !dbg !3346, !tbaa !2416
  %next = getelementptr inbounds %struct.dav_response, ptr %15, i32 0, i32 4, !dbg !3347
  store ptr %14, ptr %next, align 8, !dbg !3348, !tbaa !2822
  %16 = load ptr, ptr %resp, align 8, !dbg !3349, !tbaa !2416
  %17 = load ptr, ptr %wres.addr, align 8, !dbg !3350, !tbaa !2416
  %response4 = getelementptr inbounds %struct.dav_walk_resource, ptr %17, i32 0, i32 3, !dbg !3351
  store ptr %16, ptr %response4, align 8, !dbg !3352, !tbaa !3345
  call void @llvm.lifetime.end.p0(i64 8, ptr %resp) #10, !dbg !3353
  ret void, !dbg !3353
}

declare !dbg !3354 ptr @apr_palloc(ptr noundef, i64 noundef) #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

declare !dbg !3357 ptr @apr_pstrdup(ptr noundef, ptr noundef) #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind uwtable
define ptr @dav_failed_proppatch(ptr noundef %p, ptr noundef %prop_ctx) #0 !dbg !3360 {
entry:
  %p.addr = alloca ptr, align 8
  %prop_ctx.addr = alloca ptr, align 8
  %hdr = alloca %struct.apr_text_header, align 8
  %i = alloca i32, align 4
  %ctx = alloca ptr, align 8
  %err424_set = alloca ptr, align 8
  %err424_delete = alloca ptr, align 8
  %s = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !3364, metadata !DIExpression()), !dbg !3372
  store ptr %prop_ctx, ptr %prop_ctx.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %prop_ctx.addr, metadata !3365, metadata !DIExpression()), !dbg !3373
  call void @llvm.lifetime.start.p0(i64 16, ptr %hdr) #10, !dbg !3374
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !3366, metadata !DIExpression()), !dbg !3375
  call void @llvm.memset.p0.i64(ptr align 8 %hdr, i8 0, i64 16, i1 false), !dbg !3375
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !3376
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3367, metadata !DIExpression()), !dbg !3377
  %0 = load ptr, ptr %prop_ctx.addr, align 8, !dbg !3378, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %0, i32 0, i32 2, !dbg !3379
  %1 = load i32, ptr %nelts, align 4, !dbg !3379, !tbaa !2702
  store i32 %1, ptr %i, align 4, !dbg !3377, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx) #10, !dbg !3380
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !3368, metadata !DIExpression()), !dbg !3381
  %2 = load ptr, ptr %prop_ctx.addr, align 8, !dbg !3382, !tbaa !2416
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %2, i32 0, i32 4, !dbg !3383
  %3 = load ptr, ptr %elts, align 8, !dbg !3383, !tbaa !2715
  store ptr %3, ptr %ctx, align 8, !dbg !3381, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err424_set) #10, !dbg !3384
  tail call void @llvm.dbg.declare(metadata ptr %err424_set, metadata !3369, metadata !DIExpression()), !dbg !3385
  store ptr null, ptr %err424_set, align 8, !dbg !3385, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err424_delete) #10, !dbg !3386
  tail call void @llvm.dbg.declare(metadata ptr %err424_delete, metadata !3370, metadata !DIExpression()), !dbg !3387
  store ptr null, ptr %err424_delete, align 8, !dbg !3387, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %s) #10, !dbg !3388
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !3371, metadata !DIExpression()), !dbg !3389
  br label %for.cond, !dbg !3390

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, ptr %i, align 4, !dbg !3391, !tbaa !2683
  %dec = add nsw i32 %4, -1, !dbg !3391
  store i32 %dec, ptr %i, align 4, !dbg !3391, !tbaa !2683
  %cmp = icmp sgt i32 %4, 0, !dbg !3394
  br i1 %cmp, label %for.body, label %for.end, !dbg !3395

for.body:                                         ; preds = %for.cond
  %5 = load ptr, ptr %p.addr, align 8, !dbg !3396, !tbaa !2416
  call void @apr_text_append(ptr noundef %5, ptr noundef %hdr, ptr noundef @.str.27), !dbg !3398
  %6 = load ptr, ptr %p.addr, align 8, !dbg !3399, !tbaa !2416
  %7 = load ptr, ptr %p.addr, align 8, !dbg !3400, !tbaa !2416
  %8 = load ptr, ptr %ctx, align 8, !dbg !3401, !tbaa !2416
  %prop = getelementptr inbounds %struct.dav_prop_ctx, ptr %8, i32 0, i32 1, !dbg !3402
  %9 = load ptr, ptr %prop, align 8, !dbg !3402, !tbaa !3403
  %call = call ptr @apr_xml_empty_elem(ptr noundef %7, ptr noundef %9), !dbg !3405
  call void @apr_text_append(ptr noundef %6, ptr noundef %hdr, ptr noundef %call), !dbg !3406
  %10 = load ptr, ptr %p.addr, align 8, !dbg !3407, !tbaa !2416
  call void @apr_text_append(ptr noundef %10, ptr noundef %hdr, ptr noundef @.str.28), !dbg !3408
  %11 = load ptr, ptr %ctx, align 8, !dbg !3409, !tbaa !2416
  %err = getelementptr inbounds %struct.dav_prop_ctx, ptr %11, i32 0, i32 6, !dbg !3411
  %12 = load ptr, ptr %err, align 8, !dbg !3411, !tbaa !3412
  %cmp1 = icmp eq ptr %12, null, !dbg !3413
  br i1 %cmp1, label %if.then, label %if.end18, !dbg !3414

if.then:                                          ; preds = %for.body
  %13 = load ptr, ptr %ctx, align 8, !dbg !3415, !tbaa !2416
  %operation = getelementptr inbounds %struct.dav_prop_ctx, ptr %13, i32 0, i32 2, !dbg !3418
  %14 = load i32, ptr %operation, align 8, !dbg !3418, !tbaa !3419
  %cmp2 = icmp eq i32 %14, 1, !dbg !3420
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3421

if.then3:                                         ; preds = %if.then
  %15 = load ptr, ptr %err424_set, align 8, !dbg !3422, !tbaa !2416
  %cmp4 = icmp eq ptr %15, null, !dbg !3425
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3426

if.then5:                                         ; preds = %if.then3
  %16 = load ptr, ptr %p.addr, align 8, !dbg !3427, !tbaa !2416
  %call6 = call ptr @dav_new_error(ptr noundef %16, i32 noundef 424, i32 noundef 0, i32 noundef 0, ptr noundef @.str.29), !dbg !3428
  store ptr %call6, ptr %err424_set, align 8, !dbg !3429, !tbaa !2416
  br label %if.end, !dbg !3430

if.end:                                           ; preds = %if.then5, %if.then3
  %17 = load ptr, ptr %err424_set, align 8, !dbg !3431, !tbaa !2416
  %18 = load ptr, ptr %ctx, align 8, !dbg !3432, !tbaa !2416
  %err7 = getelementptr inbounds %struct.dav_prop_ctx, ptr %18, i32 0, i32 6, !dbg !3433
  store ptr %17, ptr %err7, align 8, !dbg !3434, !tbaa !3412
  br label %if.end17, !dbg !3435

if.else:                                          ; preds = %if.then
  %19 = load ptr, ptr %ctx, align 8, !dbg !3436, !tbaa !2416
  %operation8 = getelementptr inbounds %struct.dav_prop_ctx, ptr %19, i32 0, i32 2, !dbg !3438
  %20 = load i32, ptr %operation8, align 8, !dbg !3438, !tbaa !3419
  %cmp9 = icmp eq i32 %20, 2, !dbg !3439
  br i1 %cmp9, label %if.then10, label %if.end16, !dbg !3440

if.then10:                                        ; preds = %if.else
  %21 = load ptr, ptr %err424_delete, align 8, !dbg !3441, !tbaa !2416
  %cmp11 = icmp eq ptr %21, null, !dbg !3444
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !3445

if.then12:                                        ; preds = %if.then10
  %22 = load ptr, ptr %p.addr, align 8, !dbg !3446, !tbaa !2416
  %call13 = call ptr @dav_new_error(ptr noundef %22, i32 noundef 424, i32 noundef 0, i32 noundef 0, ptr noundef @.str.30), !dbg !3447
  store ptr %call13, ptr %err424_delete, align 8, !dbg !3448, !tbaa !2416
  br label %if.end14, !dbg !3449

if.end14:                                         ; preds = %if.then12, %if.then10
  %23 = load ptr, ptr %err424_delete, align 8, !dbg !3450, !tbaa !2416
  %24 = load ptr, ptr %ctx, align 8, !dbg !3451, !tbaa !2416
  %err15 = getelementptr inbounds %struct.dav_prop_ctx, ptr %24, i32 0, i32 6, !dbg !3452
  store ptr %23, ptr %err15, align 8, !dbg !3453, !tbaa !3412
  br label %if.end16, !dbg !3454

if.end16:                                         ; preds = %if.end14, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end
  br label %if.end18, !dbg !3455

if.end18:                                         ; preds = %if.end17, %for.body
  %25 = load ptr, ptr %p.addr, align 8, !dbg !3456, !tbaa !2416
  %26 = load ptr, ptr %ctx, align 8, !dbg !3457, !tbaa !2416
  %err19 = getelementptr inbounds %struct.dav_prop_ctx, ptr %26, i32 0, i32 6, !dbg !3458
  %27 = load ptr, ptr %err19, align 8, !dbg !3458, !tbaa !3412
  %status = getelementptr inbounds %struct.dav_error, ptr %27, i32 0, i32 0, !dbg !3459
  %28 = load i32, ptr %status, align 8, !dbg !3459, !tbaa !2871
  %call20 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %25, ptr noundef @.str.31, i32 noundef %28), !dbg !3460
  store ptr %call20, ptr %s, align 8, !dbg !3461, !tbaa !2416
  %29 = load ptr, ptr %p.addr, align 8, !dbg !3462, !tbaa !2416
  %30 = load ptr, ptr %s, align 8, !dbg !3463, !tbaa !2416
  call void @apr_text_append(ptr noundef %29, ptr noundef %hdr, ptr noundef %30), !dbg !3464
  %31 = load ptr, ptr %ctx, align 8, !dbg !3465, !tbaa !2416
  %err21 = getelementptr inbounds %struct.dav_prop_ctx, ptr %31, i32 0, i32 6, !dbg !3467
  %32 = load ptr, ptr %err21, align 8, !dbg !3467, !tbaa !3412
  %desc = getelementptr inbounds %struct.dav_error, ptr %32, i32 0, i32 2, !dbg !3468
  %33 = load ptr, ptr %desc, align 8, !dbg !3468, !tbaa !2948
  %cmp22 = icmp ne ptr %33, null, !dbg !3469
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !3470

if.then23:                                        ; preds = %if.end18
  %34 = load ptr, ptr %p.addr, align 8, !dbg !3471, !tbaa !2416
  call void @apr_text_append(ptr noundef %34, ptr noundef %hdr, ptr noundef @.str.32), !dbg !3473
  %35 = load ptr, ptr %p.addr, align 8, !dbg !3474, !tbaa !2416
  %36 = load ptr, ptr %ctx, align 8, !dbg !3475, !tbaa !2416
  %err24 = getelementptr inbounds %struct.dav_prop_ctx, ptr %36, i32 0, i32 6, !dbg !3476
  %37 = load ptr, ptr %err24, align 8, !dbg !3476, !tbaa !3412
  %desc25 = getelementptr inbounds %struct.dav_error, ptr %37, i32 0, i32 2, !dbg !3477
  %38 = load ptr, ptr %desc25, align 8, !dbg !3477, !tbaa !2948
  call void @apr_text_append(ptr noundef %35, ptr noundef %hdr, ptr noundef %38), !dbg !3478
  %39 = load ptr, ptr %p.addr, align 8, !dbg !3479, !tbaa !2416
  call void @apr_text_append(ptr noundef %39, ptr noundef %hdr, ptr noundef @.str.7), !dbg !3480
  br label %if.end26, !dbg !3481

if.end26:                                         ; preds = %if.then23, %if.end18
  %40 = load ptr, ptr %p.addr, align 8, !dbg !3482, !tbaa !2416
  call void @apr_text_append(ptr noundef %40, ptr noundef %hdr, ptr noundef @.str.33), !dbg !3483
  br label %for.inc, !dbg !3484

for.inc:                                          ; preds = %if.end26
  %41 = load ptr, ptr %ctx, align 8, !dbg !3485, !tbaa !2416
  %incdec.ptr = getelementptr inbounds %struct.dav_prop_ctx, ptr %41, i32 1, !dbg !3485
  store ptr %incdec.ptr, ptr %ctx, align 8, !dbg !3485, !tbaa !2416
  br label %for.cond, !dbg !3486, !llvm.loop !3487

for.end:                                          ; preds = %for.cond
  %first = getelementptr inbounds %struct.apr_text_header, ptr %hdr, i32 0, i32 0, !dbg !3489
  %42 = load ptr, ptr %first, align 8, !dbg !3489, !tbaa !3490
  call void @llvm.lifetime.end.p0(i64 8, ptr %s) #10, !dbg !3492
  call void @llvm.lifetime.end.p0(i64 8, ptr %err424_delete) #10, !dbg !3492
  call void @llvm.lifetime.end.p0(i64 8, ptr %err424_set) #10, !dbg !3492
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx) #10, !dbg !3492
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !3492
  call void @llvm.lifetime.end.p0(i64 16, ptr %hdr) #10, !dbg !3492
  ret ptr %42, !dbg !3493
}

declare !dbg !3494 void @apr_text_append(ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !3497 ptr @apr_xml_empty_elem(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define ptr @dav_success_proppatch(ptr noundef %p, ptr noundef %prop_ctx) #0 !dbg !3500 {
entry:
  %p.addr = alloca ptr, align 8
  %prop_ctx.addr = alloca ptr, align 8
  %hdr = alloca %struct.apr_text_header, align 8
  %i = alloca i32, align 4
  %ctx = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !3502, metadata !DIExpression()), !dbg !3507
  store ptr %prop_ctx, ptr %prop_ctx.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %prop_ctx.addr, metadata !3503, metadata !DIExpression()), !dbg !3508
  call void @llvm.lifetime.start.p0(i64 16, ptr %hdr) #10, !dbg !3509
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !3504, metadata !DIExpression()), !dbg !3510
  call void @llvm.memset.p0.i64(ptr align 8 %hdr, i8 0, i64 16, i1 false), !dbg !3510
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !3511
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3505, metadata !DIExpression()), !dbg !3512
  %0 = load ptr, ptr %prop_ctx.addr, align 8, !dbg !3513, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %0, i32 0, i32 2, !dbg !3514
  %1 = load i32, ptr %nelts, align 4, !dbg !3514, !tbaa !2702
  store i32 %1, ptr %i, align 4, !dbg !3512, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx) #10, !dbg !3515
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !3506, metadata !DIExpression()), !dbg !3516
  %2 = load ptr, ptr %prop_ctx.addr, align 8, !dbg !3517, !tbaa !2416
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %2, i32 0, i32 4, !dbg !3518
  %3 = load ptr, ptr %elts, align 8, !dbg !3518, !tbaa !2715
  store ptr %3, ptr %ctx, align 8, !dbg !3516, !tbaa !2416
  %4 = load ptr, ptr %p.addr, align 8, !dbg !3519, !tbaa !2416
  call void @apr_text_append(ptr noundef %4, ptr noundef %hdr, ptr noundef @.str.34), !dbg !3520
  br label %for.cond, !dbg !3521

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, ptr %i, align 4, !dbg !3522, !tbaa !2683
  %dec = add nsw i32 %5, -1, !dbg !3522
  store i32 %dec, ptr %i, align 4, !dbg !3522, !tbaa !2683
  %cmp = icmp sgt i32 %5, 0, !dbg !3525
  br i1 %cmp, label %for.body, label %for.end, !dbg !3526

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %p.addr, align 8, !dbg !3527, !tbaa !2416
  %7 = load ptr, ptr %p.addr, align 8, !dbg !3529, !tbaa !2416
  %8 = load ptr, ptr %ctx, align 8, !dbg !3530, !tbaa !2416
  %prop = getelementptr inbounds %struct.dav_prop_ctx, ptr %8, i32 0, i32 1, !dbg !3531
  %9 = load ptr, ptr %prop, align 8, !dbg !3531, !tbaa !3403
  %call = call ptr @apr_xml_empty_elem(ptr noundef %7, ptr noundef %9), !dbg !3532
  call void @apr_text_append(ptr noundef %6, ptr noundef %hdr, ptr noundef %call), !dbg !3533
  br label %for.inc, !dbg !3534

for.inc:                                          ; preds = %for.body
  %10 = load ptr, ptr %ctx, align 8, !dbg !3535, !tbaa !2416
  %incdec.ptr = getelementptr inbounds %struct.dav_prop_ctx, ptr %10, i32 1, !dbg !3535
  store ptr %incdec.ptr, ptr %ctx, align 8, !dbg !3535, !tbaa !2416
  br label %for.cond, !dbg !3536, !llvm.loop !3537

for.end:                                          ; preds = %for.cond
  %11 = load ptr, ptr %p.addr, align 8, !dbg !3539, !tbaa !2416
  call void @apr_text_append(ptr noundef %11, ptr noundef %hdr, ptr noundef @.str.35), !dbg !3540
  %first = getelementptr inbounds %struct.apr_text_header, ptr %hdr, i32 0, i32 0, !dbg !3541
  %12 = load ptr, ptr %first, align 8, !dbg !3541, !tbaa !3490
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx) #10, !dbg !3542
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !3542
  call void @llvm.lifetime.end.p0(i64 16, ptr %hdr) #10, !dbg !3542
  ret ptr %12, !dbg !3543
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_create_dir_config(ptr noundef %p, ptr noundef %dir) #0 !dbg !3544 {
entry:
  %p.addr = alloca ptr, align 8
  %dir.addr = alloca ptr, align 8
  %conf = alloca ptr, align 8
  %d = alloca ptr, align 8
  %l = alloca i64, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !3546, metadata !DIExpression()), !dbg !3553
  store ptr %dir, ptr %dir.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %dir.addr, metadata !3547, metadata !DIExpression()), !dbg !3554
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !3555
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !3548, metadata !DIExpression()), !dbg !3556
  %0 = load ptr, ptr %p.addr, align 8, !dbg !3557, !tbaa !2416
  %call = call ptr @apr_palloc(ptr noundef %0, i64 noundef 40), !dbg !3557
  call void @llvm.memset.p0.i64(ptr align 1 %call, i8 0, i64 40, i1 false), !dbg !3557
  store ptr %call, ptr %conf, align 8, !dbg !3558, !tbaa !2416
  %1 = load ptr, ptr %dir.addr, align 8, !dbg !3559, !tbaa !2416
  %cmp = icmp ne ptr %1, null, !dbg !3560
  br i1 %cmp, label %if.then, label %if.end10, !dbg !3561

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %d) #10, !dbg !3562
  tail call void @llvm.dbg.declare(metadata ptr %d, metadata !3549, metadata !DIExpression()), !dbg !3563
  call void @llvm.lifetime.start.p0(i64 8, ptr %l) #10, !dbg !3564
  tail call void @llvm.dbg.declare(metadata ptr %l, metadata !3552, metadata !DIExpression()), !dbg !3565
  %2 = load ptr, ptr %dir.addr, align 8, !dbg !3566, !tbaa !2416
  %call1 = call i64 @strlen(ptr noundef %2) #11, !dbg !3567
  store i64 %call1, ptr %l, align 8, !dbg !3568, !tbaa !3569
  %3 = load ptr, ptr %p.addr, align 8, !dbg !3570, !tbaa !2416
  %4 = load ptr, ptr %dir.addr, align 8, !dbg !3571, !tbaa !2416
  %5 = load i64, ptr %l, align 8, !dbg !3572, !tbaa !3569
  %call2 = call ptr @apr_pstrmemdup(ptr noundef %3, ptr noundef %4, i64 noundef %5), !dbg !3573
  store ptr %call2, ptr %d, align 8, !dbg !3574, !tbaa !2416
  %6 = load i64, ptr %l, align 8, !dbg !3575, !tbaa !3569
  %cmp3 = icmp ugt i64 %6, 1, !dbg !3577
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !3578

land.lhs.true:                                    ; preds = %if.then
  %7 = load ptr, ptr %d, align 8, !dbg !3579, !tbaa !2416
  %8 = load i64, ptr %l, align 8, !dbg !3580, !tbaa !3569
  %sub = sub i64 %8, 1, !dbg !3581
  %arrayidx = getelementptr inbounds i8, ptr %7, i64 %sub, !dbg !3579
  %9 = load i8, ptr %arrayidx, align 1, !dbg !3579, !tbaa !2961
  %conv = sext i8 %9 to i32, !dbg !3579
  %cmp4 = icmp eq i32 %conv, 47, !dbg !3582
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !3583

if.then6:                                         ; preds = %land.lhs.true
  %10 = load ptr, ptr %d, align 8, !dbg !3584, !tbaa !2416
  %11 = load i64, ptr %l, align 8, !dbg !3585, !tbaa !3569
  %sub7 = sub i64 %11, 1, !dbg !3586
  %arrayidx8 = getelementptr inbounds i8, ptr %10, i64 %sub7, !dbg !3584
  store i8 0, ptr %arrayidx8, align 1, !dbg !3587, !tbaa !2961
  br label %if.end, !dbg !3584

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  %12 = load ptr, ptr %d, align 8, !dbg !3588, !tbaa !2416
  %13 = load ptr, ptr %conf, align 8, !dbg !3589, !tbaa !2416
  %dir9 = getelementptr inbounds %struct.dav_dir_conf, ptr %13, i32 0, i32 2, !dbg !3590
  store ptr %12, ptr %dir9, align 8, !dbg !3591, !tbaa !3197
  call void @llvm.lifetime.end.p0(i64 8, ptr %l) #10, !dbg !3592
  call void @llvm.lifetime.end.p0(i64 8, ptr %d) #10, !dbg !3592
  br label %if.end10, !dbg !3593

if.end10:                                         ; preds = %if.end, %entry
  %14 = load ptr, ptr %conf, align 8, !dbg !3594, !tbaa !2416
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !3595
  ret ptr %14, !dbg !3596
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_merge_dir_config(ptr noundef %p, ptr noundef %base, ptr noundef %overrides) #0 !dbg !3597 {
entry:
  %p.addr = alloca ptr, align 8
  %base.addr = alloca ptr, align 8
  %overrides.addr = alloca ptr, align 8
  %parent = alloca ptr, align 8
  %child = alloca ptr, align 8
  %newconf = alloca ptr, align 8
  %sr__ = alloca ptr, align 8
  %sr__26 = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !3599, metadata !DIExpression()), !dbg !3617
  store ptr %base, ptr %base.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %base.addr, metadata !3600, metadata !DIExpression()), !dbg !3618
  store ptr %overrides, ptr %overrides.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %overrides.addr, metadata !3601, metadata !DIExpression()), !dbg !3619
  call void @llvm.lifetime.start.p0(i64 8, ptr %parent) #10, !dbg !3620
  tail call void @llvm.dbg.declare(metadata ptr %parent, metadata !3602, metadata !DIExpression()), !dbg !3621
  %0 = load ptr, ptr %base.addr, align 8, !dbg !3622, !tbaa !2416
  store ptr %0, ptr %parent, align 8, !dbg !3621, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !3623
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !3603, metadata !DIExpression()), !dbg !3624
  %1 = load ptr, ptr %overrides.addr, align 8, !dbg !3625, !tbaa !2416
  store ptr %1, ptr %child, align 8, !dbg !3624, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %newconf) #10, !dbg !3626
  tail call void @llvm.dbg.declare(metadata ptr %newconf, metadata !3604, metadata !DIExpression()), !dbg !3627
  %2 = load ptr, ptr %p.addr, align 8, !dbg !3628, !tbaa !2416
  %call = call ptr @apr_palloc(ptr noundef %2, i64 noundef 40), !dbg !3628
  call void @llvm.memset.p0.i64(ptr align 1 %call, i8 0, i64 40, i1 false), !dbg !3628
  store ptr %call, ptr %newconf, align 8, !dbg !3627, !tbaa !2416
  %3 = load ptr, ptr %child, align 8, !dbg !3629, !tbaa !2416
  %provider_name = getelementptr inbounds %struct.dav_dir_conf, ptr %3, i32 0, i32 0, !dbg !3629
  %4 = load ptr, ptr %provider_name, align 8, !dbg !3629, !tbaa !2436
  %tobool = icmp ne ptr %4, null, !dbg !3629
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3629

cond.true:                                        ; preds = %entry
  %5 = load ptr, ptr %child, align 8, !dbg !3629, !tbaa !2416
  %provider_name1 = getelementptr inbounds %struct.dav_dir_conf, ptr %5, i32 0, i32 0, !dbg !3629
  %6 = load ptr, ptr %provider_name1, align 8, !dbg !3629, !tbaa !2436
  br label %cond.end, !dbg !3629

cond.false:                                       ; preds = %entry
  %7 = load ptr, ptr %parent, align 8, !dbg !3629, !tbaa !2416
  %provider_name2 = getelementptr inbounds %struct.dav_dir_conf, ptr %7, i32 0, i32 0, !dbg !3629
  %8 = load ptr, ptr %provider_name2, align 8, !dbg !3629, !tbaa !2436
  br label %cond.end, !dbg !3629

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %6, %cond.true ], [ %8, %cond.false ], !dbg !3629
  %9 = load ptr, ptr %newconf, align 8, !dbg !3630, !tbaa !2416
  %provider_name3 = getelementptr inbounds %struct.dav_dir_conf, ptr %9, i32 0, i32 0, !dbg !3631
  store ptr %cond, ptr %provider_name3, align 8, !dbg !3632, !tbaa !2436
  %10 = load ptr, ptr %child, align 8, !dbg !3633, !tbaa !2416
  %provider = getelementptr inbounds %struct.dav_dir_conf, ptr %10, i32 0, i32 1, !dbg !3633
  %11 = load ptr, ptr %provider, align 8, !dbg !3633, !tbaa !2453
  %tobool4 = icmp ne ptr %11, null, !dbg !3633
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !3633

cond.true5:                                       ; preds = %cond.end
  %12 = load ptr, ptr %child, align 8, !dbg !3633, !tbaa !2416
  %provider6 = getelementptr inbounds %struct.dav_dir_conf, ptr %12, i32 0, i32 1, !dbg !3633
  %13 = load ptr, ptr %provider6, align 8, !dbg !3633, !tbaa !2453
  br label %cond.end9, !dbg !3633

cond.false7:                                      ; preds = %cond.end
  %14 = load ptr, ptr %parent, align 8, !dbg !3633, !tbaa !2416
  %provider8 = getelementptr inbounds %struct.dav_dir_conf, ptr %14, i32 0, i32 1, !dbg !3633
  %15 = load ptr, ptr %provider8, align 8, !dbg !3633, !tbaa !2453
  br label %cond.end9, !dbg !3633

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi ptr [ %13, %cond.true5 ], [ %15, %cond.false7 ], !dbg !3633
  %16 = load ptr, ptr %newconf, align 8, !dbg !3634, !tbaa !2416
  %provider11 = getelementptr inbounds %struct.dav_dir_conf, ptr %16, i32 0, i32 1, !dbg !3635
  store ptr %cond10, ptr %provider11, align 8, !dbg !3636, !tbaa !2453
  %17 = load ptr, ptr %parent, align 8, !dbg !3637, !tbaa !2416
  %provider_name12 = getelementptr inbounds %struct.dav_dir_conf, ptr %17, i32 0, i32 0, !dbg !3638
  %18 = load ptr, ptr %provider_name12, align 8, !dbg !3638, !tbaa !2436
  %cmp = icmp ne ptr %18, null, !dbg !3639
  br i1 %cmp, label %if.then, label %if.end34, !dbg !3640

if.then:                                          ; preds = %cond.end9
  %19 = load ptr, ptr %child, align 8, !dbg !3641, !tbaa !2416
  %provider_name13 = getelementptr inbounds %struct.dav_dir_conf, ptr %19, i32 0, i32 0, !dbg !3642
  %20 = load ptr, ptr %provider_name13, align 8, !dbg !3642, !tbaa !2436
  %cmp14 = icmp eq ptr %20, null, !dbg !3643
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !3644

if.then15:                                        ; preds = %if.then
  br label %do.body, !dbg !3645

do.body:                                          ; preds = %if.then15
  call void @llvm.lifetime.start.p0(i64 8, ptr %sr__) #10, !dbg !3646
  tail call void @llvm.dbg.declare(metadata ptr %sr__, metadata !3605, metadata !DIExpression()), !dbg !3646
  store ptr null, ptr %sr__, align 8, !dbg !3646, !tbaa !2416
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true16, label %cond.false17, !dbg !3647

cond.true16:                                      ; preds = %do.body
  %21 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !3647, !tbaa !2683
  br label %cond.end18, !dbg !3647

cond.false17:                                     ; preds = %do.body
  br label %cond.end18, !dbg !3647

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ %21, %cond.true16 ], [ -1, %cond.false17 ], !dbg !3647
  %22 = load ptr, ptr %sr__, align 8, !dbg !3647, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_error_(ptr noundef @.str.21, i32 noundef 185, i32 noundef %cond19, i32 noundef 3, i32 noundef 0, ptr noundef %22, ptr noundef @.str.51), !dbg !3647
  call void @llvm.lifetime.end.p0(i64 8, ptr %sr__) #10, !dbg !3645
  br label %do.cond, !dbg !3646

do.cond:                                          ; preds = %cond.end18
  br label %do.end, !dbg !3646

do.end:                                           ; preds = %do.cond
  br label %if.end33, !dbg !3649

if.else:                                          ; preds = %if.then
  %23 = load ptr, ptr %child, align 8, !dbg !3650, !tbaa !2416
  %provider_name20 = getelementptr inbounds %struct.dav_dir_conf, ptr %23, i32 0, i32 0, !dbg !3651
  %24 = load ptr, ptr %provider_name20, align 8, !dbg !3651, !tbaa !2436
  %25 = load ptr, ptr %parent, align 8, !dbg !3652, !tbaa !2416
  %provider_name21 = getelementptr inbounds %struct.dav_dir_conf, ptr %25, i32 0, i32 0, !dbg !3653
  %26 = load ptr, ptr %provider_name21, align 8, !dbg !3653, !tbaa !2436
  %call22 = call i32 @strcasecmp(ptr noundef %24, ptr noundef %26) #11, !dbg !3654
  %cmp23 = icmp ne i32 %call22, 0, !dbg !3655
  br i1 %cmp23, label %if.then24, label %if.end, !dbg !3656

if.then24:                                        ; preds = %if.else
  br label %do.body25, !dbg !3657

do.body25:                                        ; preds = %if.then24
  call void @llvm.lifetime.start.p0(i64 8, ptr %sr__26) #10, !dbg !3658
  tail call void @llvm.dbg.declare(metadata ptr %sr__26, metadata !3613, metadata !DIExpression()), !dbg !3658
  store ptr null, ptr %sr__26, align 8, !dbg !3658, !tbaa !2416
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true27, label %cond.false28, !dbg !3659

cond.true27:                                      ; preds = %do.body25
  %27 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !3659, !tbaa !2683
  br label %cond.end29, !dbg !3659

cond.false28:                                     ; preds = %do.body25
  br label %cond.end29, !dbg !3659

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ %27, %cond.true27 ], [ -1, %cond.false28 ], !dbg !3659
  %28 = load ptr, ptr %sr__26, align 8, !dbg !3659, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_error_(ptr noundef @.str.21, i32 noundef 191, i32 noundef %cond30, i32 noundef 3, i32 noundef 0, ptr noundef %28, ptr noundef @.str.52), !dbg !3659
  call void @llvm.lifetime.end.p0(i64 8, ptr %sr__26) #10, !dbg !3657
  br label %do.cond31, !dbg !3658

do.cond31:                                        ; preds = %cond.end29
  br label %do.end32, !dbg !3658

do.end32:                                         ; preds = %do.cond31
  br label %if.end, !dbg !3661

if.end:                                           ; preds = %do.end32, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end, %do.end
  br label %if.end34, !dbg !3662

if.end34:                                         ; preds = %if.end33, %cond.end9
  %29 = load ptr, ptr %child, align 8, !dbg !3663, !tbaa !2416
  %locktimeout = getelementptr inbounds %struct.dav_dir_conf, ptr %29, i32 0, i32 3, !dbg !3663
  %30 = load i32, ptr %locktimeout, align 8, !dbg !3663, !tbaa !3664
  %tobool35 = icmp ne i32 %30, 0, !dbg !3663
  br i1 %tobool35, label %cond.true36, label %cond.false38, !dbg !3663

cond.true36:                                      ; preds = %if.end34
  %31 = load ptr, ptr %child, align 8, !dbg !3663, !tbaa !2416
  %locktimeout37 = getelementptr inbounds %struct.dav_dir_conf, ptr %31, i32 0, i32 3, !dbg !3663
  %32 = load i32, ptr %locktimeout37, align 8, !dbg !3663, !tbaa !3664
  br label %cond.end40, !dbg !3663

cond.false38:                                     ; preds = %if.end34
  %33 = load ptr, ptr %parent, align 8, !dbg !3663, !tbaa !2416
  %locktimeout39 = getelementptr inbounds %struct.dav_dir_conf, ptr %33, i32 0, i32 3, !dbg !3663
  %34 = load i32, ptr %locktimeout39, align 8, !dbg !3663, !tbaa !3664
  br label %cond.end40, !dbg !3663

cond.end40:                                       ; preds = %cond.false38, %cond.true36
  %cond41 = phi i32 [ %32, %cond.true36 ], [ %34, %cond.false38 ], !dbg !3663
  %35 = load ptr, ptr %newconf, align 8, !dbg !3665, !tbaa !2416
  %locktimeout42 = getelementptr inbounds %struct.dav_dir_conf, ptr %35, i32 0, i32 3, !dbg !3666
  store i32 %cond41, ptr %locktimeout42, align 8, !dbg !3667, !tbaa !3664
  %36 = load ptr, ptr %child, align 8, !dbg !3668, !tbaa !2416
  %dir = getelementptr inbounds %struct.dav_dir_conf, ptr %36, i32 0, i32 2, !dbg !3668
  %37 = load ptr, ptr %dir, align 8, !dbg !3668, !tbaa !3197
  %tobool43 = icmp ne ptr %37, null, !dbg !3668
  br i1 %tobool43, label %cond.true44, label %cond.false46, !dbg !3668

cond.true44:                                      ; preds = %cond.end40
  %38 = load ptr, ptr %child, align 8, !dbg !3668, !tbaa !2416
  %dir45 = getelementptr inbounds %struct.dav_dir_conf, ptr %38, i32 0, i32 2, !dbg !3668
  %39 = load ptr, ptr %dir45, align 8, !dbg !3668, !tbaa !3197
  br label %cond.end48, !dbg !3668

cond.false46:                                     ; preds = %cond.end40
  %40 = load ptr, ptr %parent, align 8, !dbg !3668, !tbaa !2416
  %dir47 = getelementptr inbounds %struct.dav_dir_conf, ptr %40, i32 0, i32 2, !dbg !3668
  %41 = load ptr, ptr %dir47, align 8, !dbg !3668, !tbaa !3197
  br label %cond.end48, !dbg !3668

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi ptr [ %39, %cond.true44 ], [ %41, %cond.false46 ], !dbg !3668
  %42 = load ptr, ptr %newconf, align 8, !dbg !3669, !tbaa !2416
  %dir50 = getelementptr inbounds %struct.dav_dir_conf, ptr %42, i32 0, i32 2, !dbg !3670
  store ptr %cond49, ptr %dir50, align 8, !dbg !3671, !tbaa !3197
  %43 = load ptr, ptr %child, align 8, !dbg !3672, !tbaa !2416
  %allow_depthinfinity = getelementptr inbounds %struct.dav_dir_conf, ptr %43, i32 0, i32 4, !dbg !3672
  %44 = load i32, ptr %allow_depthinfinity, align 4, !dbg !3672, !tbaa !3673
  %tobool51 = icmp ne i32 %44, 0, !dbg !3672
  br i1 %tobool51, label %cond.true52, label %cond.false54, !dbg !3672

cond.true52:                                      ; preds = %cond.end48
  %45 = load ptr, ptr %child, align 8, !dbg !3672, !tbaa !2416
  %allow_depthinfinity53 = getelementptr inbounds %struct.dav_dir_conf, ptr %45, i32 0, i32 4, !dbg !3672
  %46 = load i32, ptr %allow_depthinfinity53, align 4, !dbg !3672, !tbaa !3673
  br label %cond.end56, !dbg !3672

cond.false54:                                     ; preds = %cond.end48
  %47 = load ptr, ptr %parent, align 8, !dbg !3672, !tbaa !2416
  %allow_depthinfinity55 = getelementptr inbounds %struct.dav_dir_conf, ptr %47, i32 0, i32 4, !dbg !3672
  %48 = load i32, ptr %allow_depthinfinity55, align 4, !dbg !3672, !tbaa !3673
  br label %cond.end56, !dbg !3672

cond.end56:                                       ; preds = %cond.false54, %cond.true52
  %cond57 = phi i32 [ %46, %cond.true52 ], [ %48, %cond.false54 ], !dbg !3672
  %49 = load ptr, ptr %newconf, align 8, !dbg !3674, !tbaa !2416
  %allow_depthinfinity58 = getelementptr inbounds %struct.dav_dir_conf, ptr %49, i32 0, i32 4, !dbg !3675
  store i32 %cond57, ptr %allow_depthinfinity58, align 4, !dbg !3676, !tbaa !3673
  %50 = load ptr, ptr %child, align 8, !dbg !3677, !tbaa !2416
  %allow_lockdiscovery = getelementptr inbounds %struct.dav_dir_conf, ptr %50, i32 0, i32 5, !dbg !3677
  %51 = load i32, ptr %allow_lockdiscovery, align 8, !dbg !3677, !tbaa !3678
  %tobool59 = icmp ne i32 %51, 0, !dbg !3677
  br i1 %tobool59, label %cond.true60, label %cond.false62, !dbg !3677

cond.true60:                                      ; preds = %cond.end56
  %52 = load ptr, ptr %child, align 8, !dbg !3677, !tbaa !2416
  %allow_lockdiscovery61 = getelementptr inbounds %struct.dav_dir_conf, ptr %52, i32 0, i32 5, !dbg !3677
  %53 = load i32, ptr %allow_lockdiscovery61, align 8, !dbg !3677, !tbaa !3678
  br label %cond.end64, !dbg !3677

cond.false62:                                     ; preds = %cond.end56
  %54 = load ptr, ptr %parent, align 8, !dbg !3677, !tbaa !2416
  %allow_lockdiscovery63 = getelementptr inbounds %struct.dav_dir_conf, ptr %54, i32 0, i32 5, !dbg !3677
  %55 = load i32, ptr %allow_lockdiscovery63, align 8, !dbg !3677, !tbaa !3678
  br label %cond.end64, !dbg !3677

cond.end64:                                       ; preds = %cond.false62, %cond.true60
  %cond65 = phi i32 [ %53, %cond.true60 ], [ %55, %cond.false62 ], !dbg !3677
  %56 = load ptr, ptr %newconf, align 8, !dbg !3679, !tbaa !2416
  %allow_lockdiscovery66 = getelementptr inbounds %struct.dav_dir_conf, ptr %56, i32 0, i32 5, !dbg !3680
  store i32 %cond65, ptr %allow_lockdiscovery66, align 8, !dbg !3681, !tbaa !3678
  %57 = load ptr, ptr %newconf, align 8, !dbg !3682, !tbaa !2416
  call void @llvm.lifetime.end.p0(i64 8, ptr %newconf) #10, !dbg !3683
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !3683
  call void @llvm.lifetime.end.p0(i64 8, ptr %parent) #10, !dbg !3683
  ret ptr %57, !dbg !3684
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_create_server_config(ptr noundef %p, ptr noundef %s) #0 !dbg !3685 {
entry:
  %p.addr = alloca ptr, align 8
  %s.addr = alloca ptr, align 8
  %newconf = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !3687, metadata !DIExpression()), !dbg !3690
  store ptr %s, ptr %s.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !3688, metadata !DIExpression()), !dbg !3691
  call void @llvm.lifetime.start.p0(i64 8, ptr %newconf) #10, !dbg !3692
  tail call void @llvm.dbg.declare(metadata ptr %newconf, metadata !3689, metadata !DIExpression()), !dbg !3693
  %0 = load ptr, ptr %p.addr, align 8, !dbg !3694, !tbaa !2416
  %call = call ptr @apr_palloc(ptr noundef %0, i64 noundef 4), !dbg !3694
  call void @llvm.memset.p0.i64(ptr align 1 %call, i8 0, i64 4, i1 false), !dbg !3694
  store ptr %call, ptr %newconf, align 8, !dbg !3695, !tbaa !2416
  %1 = load ptr, ptr %newconf, align 8, !dbg !3696, !tbaa !2416
  call void @llvm.lifetime.end.p0(i64 8, ptr %newconf) #10, !dbg !3697
  ret ptr %1, !dbg !3698
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_merge_server_config(ptr noundef %p, ptr noundef %base, ptr noundef %overrides) #0 !dbg !3699 {
entry:
  %p.addr = alloca ptr, align 8
  %base.addr = alloca ptr, align 8
  %overrides.addr = alloca ptr, align 8
  %newconf = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !3701, metadata !DIExpression()), !dbg !3705
  store ptr %base, ptr %base.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %base.addr, metadata !3702, metadata !DIExpression()), !dbg !3706
  store ptr %overrides, ptr %overrides.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %overrides.addr, metadata !3703, metadata !DIExpression()), !dbg !3707
  call void @llvm.lifetime.start.p0(i64 8, ptr %newconf) #10, !dbg !3708
  tail call void @llvm.dbg.declare(metadata ptr %newconf, metadata !3704, metadata !DIExpression()), !dbg !3709
  %0 = load ptr, ptr %p.addr, align 8, !dbg !3710, !tbaa !2416
  %call = call ptr @apr_palloc(ptr noundef %0, i64 noundef 4), !dbg !3710
  call void @llvm.memset.p0.i64(ptr align 1 %call, i8 0, i64 4, i1 false), !dbg !3710
  store ptr %call, ptr %newconf, align 8, !dbg !3711, !tbaa !2416
  %1 = load ptr, ptr %newconf, align 8, !dbg !3712, !tbaa !2416
  call void @llvm.lifetime.end.p0(i64 8, ptr %newconf) #10, !dbg !3713
  ret ptr %1, !dbg !3714
}

; Function Attrs: nounwind uwtable
define internal void @register_hooks(ptr noundef %p) #0 !dbg !3715 {
entry:
  %p.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !3717, metadata !DIExpression()), !dbg !3718
  call void @ap_hook_handler(ptr noundef @dav_handler, ptr noundef null, ptr noundef null, i32 noundef 10), !dbg !3719
  call void @ap_hook_post_config(ptr noundef @dav_init_handler, ptr noundef null, ptr noundef null, i32 noundef 10), !dbg !3720
  call void @ap_hook_fixups(ptr noundef @dav_fixups, ptr noundef null, ptr noundef null, i32 noundef 10), !dbg !3721
  call void @dav_hook_find_liveprop(ptr noundef @dav_core_find_liveprop, ptr noundef null, ptr noundef null, i32 noundef 20), !dbg !3722
  call void @dav_hook_insert_all_liveprops(ptr noundef @dav_core_insert_all_liveprops, ptr noundef null, ptr noundef null, i32 noundef 10), !dbg !3723
  call void @dav_hook_deliver_report(ptr noundef @dav_core_deliver_report, ptr noundef null, ptr noundef null, i32 noundef 20), !dbg !3724
  call void @dav_hook_gather_reports(ptr noundef @dav_core_gather_reports, ptr noundef null, ptr noundef null, i32 noundef 20), !dbg !3725
  %0 = load ptr, ptr %p.addr, align 8, !dbg !3726, !tbaa !2416
  call void @dav_core_register_uris(ptr noundef %0), !dbg !3727
  ret void, !dbg !3728
}

; Function Attrs: nounwind uwtable
define void @dav_hook_gather_propsets(ptr noundef %pf, ptr noundef %aszPre, ptr noundef %aszSucc, i32 noundef %nOrder) #0 !dbg !3729 {
entry:
  %pf.addr = alloca ptr, align 8
  %aszPre.addr = alloca ptr, align 8
  %aszSucc.addr = alloca ptr, align 8
  %nOrder.addr = alloca i32, align 4
  %pHook = alloca ptr, align 8
  store ptr %pf, ptr %pf.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pf.addr, metadata !3733, metadata !DIExpression()), !dbg !3738
  store ptr %aszPre, ptr %aszPre.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszPre.addr, metadata !3734, metadata !DIExpression()), !dbg !3738
  store ptr %aszSucc, ptr %aszSucc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszSucc.addr, metadata !3735, metadata !DIExpression()), !dbg !3738
  store i32 %nOrder, ptr %nOrder.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %nOrder.addr, metadata !3736, metadata !DIExpression()), !dbg !3738
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3738
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3737, metadata !DIExpression()), !dbg !3738
  %0 = load ptr, ptr @_hooks, align 8, !dbg !3739, !tbaa !3741
  %tobool = icmp ne ptr %0, null, !dbg !3739
  br i1 %tobool, label %if.end, label %if.then, !dbg !3738

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @apr_hook_global_pool, align 8, !dbg !3743, !tbaa !2416
  %call = call ptr @apr_array_make(ptr noundef %1, i32 noundef 1, i32 noundef 40), !dbg !3743
  store ptr %call, ptr @_hooks, align 8, !dbg !3743, !tbaa !3741
  call void @apr_hook_sort_register(ptr noundef @.str.36, ptr noundef @_hooks), !dbg !3743
  br label %if.end, !dbg !3743

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr @_hooks, align 8, !dbg !3738, !tbaa !3741
  %call1 = call ptr @apr_array_push(ptr noundef %2), !dbg !3738
  store ptr %call1, ptr %pHook, align 8, !dbg !3738, !tbaa !2416
  %3 = load ptr, ptr %pf.addr, align 8, !dbg !3738, !tbaa !2416
  %4 = load ptr, ptr %pHook, align 8, !dbg !3738, !tbaa !2416
  %pFunc = getelementptr inbounds %struct.dav_LINK_gather_propsets_t, ptr %4, i32 0, i32 0, !dbg !3738
  store ptr %3, ptr %pFunc, align 8, !dbg !3738, !tbaa !3745
  %5 = load ptr, ptr %aszPre.addr, align 8, !dbg !3738, !tbaa !2416
  %6 = load ptr, ptr %pHook, align 8, !dbg !3738, !tbaa !2416
  %aszPredecessors = getelementptr inbounds %struct.dav_LINK_gather_propsets_t, ptr %6, i32 0, i32 2, !dbg !3738
  store ptr %5, ptr %aszPredecessors, align 8, !dbg !3738, !tbaa !3747
  %7 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3738, !tbaa !2416
  %8 = load ptr, ptr %pHook, align 8, !dbg !3738, !tbaa !2416
  %aszSuccessors = getelementptr inbounds %struct.dav_LINK_gather_propsets_t, ptr %8, i32 0, i32 3, !dbg !3738
  store ptr %7, ptr %aszSuccessors, align 8, !dbg !3738, !tbaa !3748
  %9 = load i32, ptr %nOrder.addr, align 4, !dbg !3738, !tbaa !2683
  %10 = load ptr, ptr %pHook, align 8, !dbg !3738, !tbaa !2416
  %nOrder2 = getelementptr inbounds %struct.dav_LINK_gather_propsets_t, ptr %10, i32 0, i32 4, !dbg !3738
  store i32 %9, ptr %nOrder2, align 8, !dbg !3738, !tbaa !3749
  %11 = load ptr, ptr @apr_hook_debug_current, align 8, !dbg !3738, !tbaa !2416
  %12 = load ptr, ptr %pHook, align 8, !dbg !3738, !tbaa !2416
  %szName = getelementptr inbounds %struct.dav_LINK_gather_propsets_t, ptr %12, i32 0, i32 1, !dbg !3738
  store ptr %11, ptr %szName, align 8, !dbg !3738, !tbaa !3750
  %13 = load i32, ptr @apr_hook_debug_enabled, align 4, !dbg !3751, !tbaa !2683
  %tobool3 = icmp ne i32 %13, 0, !dbg !3751
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3738

if.then4:                                         ; preds = %if.end
  %14 = load ptr, ptr %aszPre.addr, align 8, !dbg !3751, !tbaa !2416
  %15 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3751, !tbaa !2416
  call void @apr_hook_debug_show(ptr noundef @.str.36, ptr noundef %14, ptr noundef %15), !dbg !3751
  br label %if.end5, !dbg !3751

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3738
  ret void, !dbg !3738
}

declare !dbg !3753 ptr @apr_array_make(ptr noundef, i32 noundef, i32 noundef) #2

declare !dbg !3756 void @apr_hook_sort_register(ptr noundef, ptr noundef) #2

declare !dbg !3761 ptr @apr_array_push(ptr noundef) #2

declare !dbg !3764 void @apr_hook_debug_show(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define ptr @dav_hook_get_gather_propsets() #0 !dbg !3767 {
entry:
  %0 = load ptr, ptr @_hooks, align 8, !dbg !3770, !tbaa !3741
  ret ptr %0, !dbg !3770
}

; Function Attrs: nounwind uwtable
define void @dav_run_gather_propsets(ptr noundef %uris) #0 !dbg !3771 {
entry:
  %uris.addr = alloca ptr, align 8
  %pHook = alloca ptr, align 8
  %n = alloca i32, align 4
  store ptr %uris, ptr %uris.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %uris.addr, metadata !3773, metadata !DIExpression()), !dbg !3776
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3776
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3774, metadata !DIExpression()), !dbg !3776
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #10, !dbg !3776
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3775, metadata !DIExpression()), !dbg !3776
  %0 = load ptr, ptr @_hooks, align 8, !dbg !3777, !tbaa !3741
  %tobool = icmp ne ptr %0, null, !dbg !3777
  br i1 %tobool, label %if.then, label %if.end, !dbg !3776

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @_hooks, align 8, !dbg !3779, !tbaa !3741
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %1, i32 0, i32 4, !dbg !3779
  %2 = load ptr, ptr %elts, align 8, !dbg !3779, !tbaa !2715
  store ptr %2, ptr %pHook, align 8, !dbg !3779, !tbaa !2416
  store i32 0, ptr %n, align 4, !dbg !3781, !tbaa !2683
  br label %for.cond, !dbg !3781

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %n, align 4, !dbg !3783, !tbaa !2683
  %4 = load ptr, ptr @_hooks, align 8, !dbg !3783, !tbaa !3741
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %4, i32 0, i32 2, !dbg !3783
  %5 = load i32, ptr %nelts, align 4, !dbg !3783, !tbaa !2702
  %cmp = icmp slt i32 %3, %5, !dbg !3783
  br i1 %cmp, label %for.body, label %for.end, !dbg !3781

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %pHook, align 8, !dbg !3785, !tbaa !2416
  %7 = load i32, ptr %n, align 4, !dbg !3785, !tbaa !2683
  %idxprom = sext i32 %7 to i64, !dbg !3785
  %arrayidx = getelementptr inbounds %struct.dav_LINK_gather_propsets_t, ptr %6, i64 %idxprom, !dbg !3785
  %pFunc = getelementptr inbounds %struct.dav_LINK_gather_propsets_t, ptr %arrayidx, i32 0, i32 0, !dbg !3785
  %8 = load ptr, ptr %pFunc, align 8, !dbg !3785, !tbaa !3745
  %9 = load ptr, ptr %uris.addr, align 8, !dbg !3785, !tbaa !2416
  call void %8(ptr noundef %9), !dbg !3785
  br label %for.inc, !dbg !3785

for.inc:                                          ; preds = %for.body
  %10 = load i32, ptr %n, align 4, !dbg !3783, !tbaa !2683
  %inc = add nsw i32 %10, 1, !dbg !3783
  store i32 %inc, ptr %n, align 4, !dbg !3783, !tbaa !2683
  br label %for.cond, !dbg !3783, !llvm.loop !3787

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3779

if.end:                                           ; preds = %for.end, %entry
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #10, !dbg !3776
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3776
  ret void, !dbg !3776
}

; Function Attrs: nounwind uwtable
define void @dav_hook_find_liveprop(ptr noundef %pf, ptr noundef %aszPre, ptr noundef %aszSucc, i32 noundef %nOrder) #0 !dbg !3788 {
entry:
  %pf.addr = alloca ptr, align 8
  %aszPre.addr = alloca ptr, align 8
  %aszSucc.addr = alloca ptr, align 8
  %nOrder.addr = alloca i32, align 4
  %pHook = alloca ptr, align 8
  store ptr %pf, ptr %pf.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pf.addr, metadata !3792, metadata !DIExpression()), !dbg !3797
  store ptr %aszPre, ptr %aszPre.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszPre.addr, metadata !3793, metadata !DIExpression()), !dbg !3797
  store ptr %aszSucc, ptr %aszSucc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszSucc.addr, metadata !3794, metadata !DIExpression()), !dbg !3797
  store i32 %nOrder, ptr %nOrder.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %nOrder.addr, metadata !3795, metadata !DIExpression()), !dbg !3797
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3797
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3796, metadata !DIExpression()), !dbg !3797
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1), align 8, !dbg !3798, !tbaa !3800
  %tobool = icmp ne ptr %0, null, !dbg !3798
  br i1 %tobool, label %if.end, label %if.then, !dbg !3797

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @apr_hook_global_pool, align 8, !dbg !3801, !tbaa !2416
  %call = call ptr @apr_array_make(ptr noundef %1, i32 noundef 1, i32 noundef 40), !dbg !3801
  store ptr %call, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1), align 8, !dbg !3801, !tbaa !3800
  call void @apr_hook_sort_register(ptr noundef @.str.37, ptr noundef getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1)), !dbg !3801
  br label %if.end, !dbg !3801

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1), align 8, !dbg !3797, !tbaa !3800
  %call1 = call ptr @apr_array_push(ptr noundef %2), !dbg !3797
  store ptr %call1, ptr %pHook, align 8, !dbg !3797, !tbaa !2416
  %3 = load ptr, ptr %pf.addr, align 8, !dbg !3797, !tbaa !2416
  %4 = load ptr, ptr %pHook, align 8, !dbg !3797, !tbaa !2416
  %pFunc = getelementptr inbounds %struct.dav_LINK_find_liveprop_t, ptr %4, i32 0, i32 0, !dbg !3797
  store ptr %3, ptr %pFunc, align 8, !dbg !3797, !tbaa !3803
  %5 = load ptr, ptr %aszPre.addr, align 8, !dbg !3797, !tbaa !2416
  %6 = load ptr, ptr %pHook, align 8, !dbg !3797, !tbaa !2416
  %aszPredecessors = getelementptr inbounds %struct.dav_LINK_find_liveprop_t, ptr %6, i32 0, i32 2, !dbg !3797
  store ptr %5, ptr %aszPredecessors, align 8, !dbg !3797, !tbaa !3805
  %7 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3797, !tbaa !2416
  %8 = load ptr, ptr %pHook, align 8, !dbg !3797, !tbaa !2416
  %aszSuccessors = getelementptr inbounds %struct.dav_LINK_find_liveprop_t, ptr %8, i32 0, i32 3, !dbg !3797
  store ptr %7, ptr %aszSuccessors, align 8, !dbg !3797, !tbaa !3806
  %9 = load i32, ptr %nOrder.addr, align 4, !dbg !3797, !tbaa !2683
  %10 = load ptr, ptr %pHook, align 8, !dbg !3797, !tbaa !2416
  %nOrder2 = getelementptr inbounds %struct.dav_LINK_find_liveprop_t, ptr %10, i32 0, i32 4, !dbg !3797
  store i32 %9, ptr %nOrder2, align 8, !dbg !3797, !tbaa !3807
  %11 = load ptr, ptr @apr_hook_debug_current, align 8, !dbg !3797, !tbaa !2416
  %12 = load ptr, ptr %pHook, align 8, !dbg !3797, !tbaa !2416
  %szName = getelementptr inbounds %struct.dav_LINK_find_liveprop_t, ptr %12, i32 0, i32 1, !dbg !3797
  store ptr %11, ptr %szName, align 8, !dbg !3797, !tbaa !3808
  %13 = load i32, ptr @apr_hook_debug_enabled, align 4, !dbg !3809, !tbaa !2683
  %tobool3 = icmp ne i32 %13, 0, !dbg !3809
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3797

if.then4:                                         ; preds = %if.end
  %14 = load ptr, ptr %aszPre.addr, align 8, !dbg !3809, !tbaa !2416
  %15 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3809, !tbaa !2416
  call void @apr_hook_debug_show(ptr noundef @.str.37, ptr noundef %14, ptr noundef %15), !dbg !3809
  br label %if.end5, !dbg !3809

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3797
  ret void, !dbg !3797
}

; Function Attrs: nounwind uwtable
define ptr @dav_hook_get_find_liveprop() #0 !dbg !3811 {
entry:
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1), align 8, !dbg !3812, !tbaa !3800
  ret ptr %0, !dbg !3812
}

; Function Attrs: nounwind uwtable
define i32 @dav_run_find_liveprop(ptr noundef %resource, ptr noundef %ns_uri, ptr noundef %name, ptr noundef %hooks) #0 !dbg !3813 {
entry:
  %resource.addr = alloca ptr, align 8
  %ns_uri.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %hooks.addr = alloca ptr, align 8
  %pHook = alloca ptr, align 8
  %n = alloca i32, align 4
  %rv = alloca i32, align 4
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !3815, metadata !DIExpression()), !dbg !3822
  store ptr %ns_uri, ptr %ns_uri.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %ns_uri.addr, metadata !3816, metadata !DIExpression()), !dbg !3822
  store ptr %name, ptr %name.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3817, metadata !DIExpression()), !dbg !3822
  store ptr %hooks, ptr %hooks.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %hooks.addr, metadata !3818, metadata !DIExpression()), !dbg !3822
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3822
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3819, metadata !DIExpression()), !dbg !3822
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #10, !dbg !3822
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3820, metadata !DIExpression()), !dbg !3822
  call void @llvm.lifetime.start.p0(i64 4, ptr %rv) #10, !dbg !3822
  tail call void @llvm.dbg.declare(metadata ptr %rv, metadata !3821, metadata !DIExpression()), !dbg !3822
  store i32 0, ptr %rv, align 4, !dbg !3822, !tbaa !2683
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1), align 8, !dbg !3823, !tbaa !3800
  %tobool = icmp ne ptr %0, null, !dbg !3823
  br i1 %tobool, label %if.then, label %if.end3, !dbg !3822

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1), align 8, !dbg !3825, !tbaa !3800
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %1, i32 0, i32 4, !dbg !3825
  %2 = load ptr, ptr %elts, align 8, !dbg !3825, !tbaa !2715
  store ptr %2, ptr %pHook, align 8, !dbg !3825, !tbaa !2416
  store i32 0, ptr %n, align 4, !dbg !3827, !tbaa !2683
  br label %for.cond, !dbg !3827

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %n, align 4, !dbg !3829, !tbaa !2683
  %4 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 1), align 8, !dbg !3829, !tbaa !3800
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %4, i32 0, i32 2, !dbg !3829
  %5 = load i32, ptr %nelts, align 4, !dbg !3829, !tbaa !2702
  %cmp = icmp slt i32 %3, %5, !dbg !3829
  br i1 %cmp, label %for.body, label %for.end, !dbg !3827

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %pHook, align 8, !dbg !3831, !tbaa !2416
  %7 = load i32, ptr %n, align 4, !dbg !3831, !tbaa !2683
  %idxprom = sext i32 %7 to i64, !dbg !3831
  %arrayidx = getelementptr inbounds %struct.dav_LINK_find_liveprop_t, ptr %6, i64 %idxprom, !dbg !3831
  %pFunc = getelementptr inbounds %struct.dav_LINK_find_liveprop_t, ptr %arrayidx, i32 0, i32 0, !dbg !3831
  %8 = load ptr, ptr %pFunc, align 8, !dbg !3831, !tbaa !3803
  %9 = load ptr, ptr %resource.addr, align 8, !dbg !3831, !tbaa !2416
  %10 = load ptr, ptr %ns_uri.addr, align 8, !dbg !3831, !tbaa !2416
  %11 = load ptr, ptr %name.addr, align 8, !dbg !3831, !tbaa !2416
  %12 = load ptr, ptr %hooks.addr, align 8, !dbg !3831, !tbaa !2416
  %call = call i32 %8(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !3831
  store i32 %call, ptr %rv, align 4, !dbg !3831, !tbaa !2683
  %13 = load i32, ptr %rv, align 4, !dbg !3833, !tbaa !2683
  %cmp1 = icmp ne i32 %13, 0, !dbg !3833
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !3831

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !3833

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3831

for.inc:                                          ; preds = %if.end
  %14 = load i32, ptr %n, align 4, !dbg !3829, !tbaa !2683
  %inc = add nsw i32 %14, 1, !dbg !3829
  store i32 %inc, ptr %n, align 4, !dbg !3829, !tbaa !2683
  br label %for.cond, !dbg !3829, !llvm.loop !3835

for.end:                                          ; preds = %if.then2, %for.cond
  br label %if.end3, !dbg !3825

if.end3:                                          ; preds = %for.end, %entry
  %15 = load i32, ptr %rv, align 4, !dbg !3822, !tbaa !2683
  call void @llvm.lifetime.end.p0(i64 4, ptr %rv) #10, !dbg !3822
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #10, !dbg !3822
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3822
  ret i32 %15, !dbg !3822
}

; Function Attrs: nounwind uwtable
define void @dav_hook_insert_all_liveprops(ptr noundef %pf, ptr noundef %aszPre, ptr noundef %aszSucc, i32 noundef %nOrder) #0 !dbg !3836 {
entry:
  %pf.addr = alloca ptr, align 8
  %aszPre.addr = alloca ptr, align 8
  %aszSucc.addr = alloca ptr, align 8
  %nOrder.addr = alloca i32, align 4
  %pHook = alloca ptr, align 8
  store ptr %pf, ptr %pf.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pf.addr, metadata !3840, metadata !DIExpression()), !dbg !3845
  store ptr %aszPre, ptr %aszPre.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszPre.addr, metadata !3841, metadata !DIExpression()), !dbg !3845
  store ptr %aszSucc, ptr %aszSucc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszSucc.addr, metadata !3842, metadata !DIExpression()), !dbg !3845
  store i32 %nOrder, ptr %nOrder.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %nOrder.addr, metadata !3843, metadata !DIExpression()), !dbg !3845
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3845
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3844, metadata !DIExpression()), !dbg !3845
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2), align 8, !dbg !3846, !tbaa !3848
  %tobool = icmp ne ptr %0, null, !dbg !3846
  br i1 %tobool, label %if.end, label %if.then, !dbg !3845

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @apr_hook_global_pool, align 8, !dbg !3849, !tbaa !2416
  %call = call ptr @apr_array_make(ptr noundef %1, i32 noundef 1, i32 noundef 40), !dbg !3849
  store ptr %call, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2), align 8, !dbg !3849, !tbaa !3848
  call void @apr_hook_sort_register(ptr noundef @.str.38, ptr noundef getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2)), !dbg !3849
  br label %if.end, !dbg !3849

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2), align 8, !dbg !3845, !tbaa !3848
  %call1 = call ptr @apr_array_push(ptr noundef %2), !dbg !3845
  store ptr %call1, ptr %pHook, align 8, !dbg !3845, !tbaa !2416
  %3 = load ptr, ptr %pf.addr, align 8, !dbg !3845, !tbaa !2416
  %4 = load ptr, ptr %pHook, align 8, !dbg !3845, !tbaa !2416
  %pFunc = getelementptr inbounds %struct.dav_LINK_insert_all_liveprops_t, ptr %4, i32 0, i32 0, !dbg !3845
  store ptr %3, ptr %pFunc, align 8, !dbg !3845, !tbaa !3851
  %5 = load ptr, ptr %aszPre.addr, align 8, !dbg !3845, !tbaa !2416
  %6 = load ptr, ptr %pHook, align 8, !dbg !3845, !tbaa !2416
  %aszPredecessors = getelementptr inbounds %struct.dav_LINK_insert_all_liveprops_t, ptr %6, i32 0, i32 2, !dbg !3845
  store ptr %5, ptr %aszPredecessors, align 8, !dbg !3845, !tbaa !3853
  %7 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3845, !tbaa !2416
  %8 = load ptr, ptr %pHook, align 8, !dbg !3845, !tbaa !2416
  %aszSuccessors = getelementptr inbounds %struct.dav_LINK_insert_all_liveprops_t, ptr %8, i32 0, i32 3, !dbg !3845
  store ptr %7, ptr %aszSuccessors, align 8, !dbg !3845, !tbaa !3854
  %9 = load i32, ptr %nOrder.addr, align 4, !dbg !3845, !tbaa !2683
  %10 = load ptr, ptr %pHook, align 8, !dbg !3845, !tbaa !2416
  %nOrder2 = getelementptr inbounds %struct.dav_LINK_insert_all_liveprops_t, ptr %10, i32 0, i32 4, !dbg !3845
  store i32 %9, ptr %nOrder2, align 8, !dbg !3845, !tbaa !3855
  %11 = load ptr, ptr @apr_hook_debug_current, align 8, !dbg !3845, !tbaa !2416
  %12 = load ptr, ptr %pHook, align 8, !dbg !3845, !tbaa !2416
  %szName = getelementptr inbounds %struct.dav_LINK_insert_all_liveprops_t, ptr %12, i32 0, i32 1, !dbg !3845
  store ptr %11, ptr %szName, align 8, !dbg !3845, !tbaa !3856
  %13 = load i32, ptr @apr_hook_debug_enabled, align 4, !dbg !3857, !tbaa !2683
  %tobool3 = icmp ne i32 %13, 0, !dbg !3857
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3845

if.then4:                                         ; preds = %if.end
  %14 = load ptr, ptr %aszPre.addr, align 8, !dbg !3857, !tbaa !2416
  %15 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3857, !tbaa !2416
  call void @apr_hook_debug_show(ptr noundef @.str.38, ptr noundef %14, ptr noundef %15), !dbg !3857
  br label %if.end5, !dbg !3857

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3845
  ret void, !dbg !3845
}

; Function Attrs: nounwind uwtable
define ptr @dav_hook_get_insert_all_liveprops() #0 !dbg !3859 {
entry:
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2), align 8, !dbg !3860, !tbaa !3848
  ret ptr %0, !dbg !3860
}

; Function Attrs: nounwind uwtable
define void @dav_run_insert_all_liveprops(ptr noundef %r, ptr noundef %resource, i32 noundef %what, ptr noundef %phdr) #0 !dbg !3861 {
entry:
  %r.addr = alloca ptr, align 8
  %resource.addr = alloca ptr, align 8
  %what.addr = alloca i32, align 4
  %phdr.addr = alloca ptr, align 8
  %pHook = alloca ptr, align 8
  %n = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !3863, metadata !DIExpression()), !dbg !3869
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !3864, metadata !DIExpression()), !dbg !3869
  store i32 %what, ptr %what.addr, align 4, !tbaa !2961
  tail call void @llvm.dbg.declare(metadata ptr %what.addr, metadata !3865, metadata !DIExpression()), !dbg !3869
  store ptr %phdr, ptr %phdr.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %phdr.addr, metadata !3866, metadata !DIExpression()), !dbg !3869
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3869
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3867, metadata !DIExpression()), !dbg !3869
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #10, !dbg !3869
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3868, metadata !DIExpression()), !dbg !3869
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2), align 8, !dbg !3870, !tbaa !3848
  %tobool = icmp ne ptr %0, null, !dbg !3870
  br i1 %tobool, label %if.then, label %if.end, !dbg !3869

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2), align 8, !dbg !3872, !tbaa !3848
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %1, i32 0, i32 4, !dbg !3872
  %2 = load ptr, ptr %elts, align 8, !dbg !3872, !tbaa !2715
  store ptr %2, ptr %pHook, align 8, !dbg !3872, !tbaa !2416
  store i32 0, ptr %n, align 4, !dbg !3874, !tbaa !2683
  br label %for.cond, !dbg !3874

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %n, align 4, !dbg !3876, !tbaa !2683
  %4 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 2), align 8, !dbg !3876, !tbaa !3848
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %4, i32 0, i32 2, !dbg !3876
  %5 = load i32, ptr %nelts, align 4, !dbg !3876, !tbaa !2702
  %cmp = icmp slt i32 %3, %5, !dbg !3876
  br i1 %cmp, label %for.body, label %for.end, !dbg !3874

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %pHook, align 8, !dbg !3878, !tbaa !2416
  %7 = load i32, ptr %n, align 4, !dbg !3878, !tbaa !2683
  %idxprom = sext i32 %7 to i64, !dbg !3878
  %arrayidx = getelementptr inbounds %struct.dav_LINK_insert_all_liveprops_t, ptr %6, i64 %idxprom, !dbg !3878
  %pFunc = getelementptr inbounds %struct.dav_LINK_insert_all_liveprops_t, ptr %arrayidx, i32 0, i32 0, !dbg !3878
  %8 = load ptr, ptr %pFunc, align 8, !dbg !3878, !tbaa !3851
  %9 = load ptr, ptr %r.addr, align 8, !dbg !3878, !tbaa !2416
  %10 = load ptr, ptr %resource.addr, align 8, !dbg !3878, !tbaa !2416
  %11 = load i32, ptr %what.addr, align 4, !dbg !3878, !tbaa !2961
  %12 = load ptr, ptr %phdr.addr, align 8, !dbg !3878, !tbaa !2416
  call void %8(ptr noundef %9, ptr noundef %10, i32 noundef %11, ptr noundef %12), !dbg !3878
  br label %for.inc, !dbg !3878

for.inc:                                          ; preds = %for.body
  %13 = load i32, ptr %n, align 4, !dbg !3876, !tbaa !2683
  %inc = add nsw i32 %13, 1, !dbg !3876
  store i32 %inc, ptr %n, align 4, !dbg !3876, !tbaa !2683
  br label %for.cond, !dbg !3876, !llvm.loop !3880

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3872

if.end:                                           ; preds = %for.end, %entry
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #10, !dbg !3869
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3869
  ret void, !dbg !3869
}

; Function Attrs: nounwind uwtable
define void @dav_hook_deliver_report(ptr noundef %pf, ptr noundef %aszPre, ptr noundef %aszSucc, i32 noundef %nOrder) #0 !dbg !3881 {
entry:
  %pf.addr = alloca ptr, align 8
  %aszPre.addr = alloca ptr, align 8
  %aszSucc.addr = alloca ptr, align 8
  %nOrder.addr = alloca i32, align 4
  %pHook = alloca ptr, align 8
  store ptr %pf, ptr %pf.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pf.addr, metadata !3885, metadata !DIExpression()), !dbg !3890
  store ptr %aszPre, ptr %aszPre.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszPre.addr, metadata !3886, metadata !DIExpression()), !dbg !3890
  store ptr %aszSucc, ptr %aszSucc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszSucc.addr, metadata !3887, metadata !DIExpression()), !dbg !3890
  store i32 %nOrder, ptr %nOrder.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %nOrder.addr, metadata !3888, metadata !DIExpression()), !dbg !3890
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3890
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3889, metadata !DIExpression()), !dbg !3890
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3), align 8, !dbg !3891, !tbaa !3893
  %tobool = icmp ne ptr %0, null, !dbg !3891
  br i1 %tobool, label %if.end, label %if.then, !dbg !3890

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @apr_hook_global_pool, align 8, !dbg !3894, !tbaa !2416
  %call = call ptr @apr_array_make(ptr noundef %1, i32 noundef 1, i32 noundef 40), !dbg !3894
  store ptr %call, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3), align 8, !dbg !3894, !tbaa !3893
  call void @apr_hook_sort_register(ptr noundef @.str.39, ptr noundef getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3)), !dbg !3894
  br label %if.end, !dbg !3894

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3), align 8, !dbg !3890, !tbaa !3893
  %call1 = call ptr @apr_array_push(ptr noundef %2), !dbg !3890
  store ptr %call1, ptr %pHook, align 8, !dbg !3890, !tbaa !2416
  %3 = load ptr, ptr %pf.addr, align 8, !dbg !3890, !tbaa !2416
  %4 = load ptr, ptr %pHook, align 8, !dbg !3890, !tbaa !2416
  %pFunc = getelementptr inbounds %struct.dav_LINK_deliver_report_t, ptr %4, i32 0, i32 0, !dbg !3890
  store ptr %3, ptr %pFunc, align 8, !dbg !3890, !tbaa !3896
  %5 = load ptr, ptr %aszPre.addr, align 8, !dbg !3890, !tbaa !2416
  %6 = load ptr, ptr %pHook, align 8, !dbg !3890, !tbaa !2416
  %aszPredecessors = getelementptr inbounds %struct.dav_LINK_deliver_report_t, ptr %6, i32 0, i32 2, !dbg !3890
  store ptr %5, ptr %aszPredecessors, align 8, !dbg !3890, !tbaa !3898
  %7 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3890, !tbaa !2416
  %8 = load ptr, ptr %pHook, align 8, !dbg !3890, !tbaa !2416
  %aszSuccessors = getelementptr inbounds %struct.dav_LINK_deliver_report_t, ptr %8, i32 0, i32 3, !dbg !3890
  store ptr %7, ptr %aszSuccessors, align 8, !dbg !3890, !tbaa !3899
  %9 = load i32, ptr %nOrder.addr, align 4, !dbg !3890, !tbaa !2683
  %10 = load ptr, ptr %pHook, align 8, !dbg !3890, !tbaa !2416
  %nOrder2 = getelementptr inbounds %struct.dav_LINK_deliver_report_t, ptr %10, i32 0, i32 4, !dbg !3890
  store i32 %9, ptr %nOrder2, align 8, !dbg !3890, !tbaa !3900
  %11 = load ptr, ptr @apr_hook_debug_current, align 8, !dbg !3890, !tbaa !2416
  %12 = load ptr, ptr %pHook, align 8, !dbg !3890, !tbaa !2416
  %szName = getelementptr inbounds %struct.dav_LINK_deliver_report_t, ptr %12, i32 0, i32 1, !dbg !3890
  store ptr %11, ptr %szName, align 8, !dbg !3890, !tbaa !3901
  %13 = load i32, ptr @apr_hook_debug_enabled, align 4, !dbg !3902, !tbaa !2683
  %tobool3 = icmp ne i32 %13, 0, !dbg !3902
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3890

if.then4:                                         ; preds = %if.end
  %14 = load ptr, ptr %aszPre.addr, align 8, !dbg !3902, !tbaa !2416
  %15 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3902, !tbaa !2416
  call void @apr_hook_debug_show(ptr noundef @.str.39, ptr noundef %14, ptr noundef %15), !dbg !3902
  br label %if.end5, !dbg !3902

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3890
  ret void, !dbg !3890
}

; Function Attrs: nounwind uwtable
define ptr @dav_hook_get_deliver_report() #0 !dbg !3904 {
entry:
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3), align 8, !dbg !3905, !tbaa !3893
  ret ptr %0, !dbg !3905
}

; Function Attrs: nounwind uwtable
define i32 @dav_run_deliver_report(ptr noundef %r, ptr noundef %resource, ptr noundef %doc, ptr noundef %output, ptr noundef %err) #0 !dbg !3906 {
entry:
  %r.addr = alloca ptr, align 8
  %resource.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %output.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %pHook = alloca ptr, align 8
  %n = alloca i32, align 4
  %rv = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !3908, metadata !DIExpression()), !dbg !3916
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !3909, metadata !DIExpression()), !dbg !3916
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !3910, metadata !DIExpression()), !dbg !3916
  store ptr %output, ptr %output.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !3911, metadata !DIExpression()), !dbg !3916
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !3912, metadata !DIExpression()), !dbg !3916
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3916
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3913, metadata !DIExpression()), !dbg !3916
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #10, !dbg !3916
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3914, metadata !DIExpression()), !dbg !3916
  call void @llvm.lifetime.start.p0(i64 4, ptr %rv) #10, !dbg !3916
  tail call void @llvm.dbg.declare(metadata ptr %rv, metadata !3915, metadata !DIExpression()), !dbg !3916
  store i32 -1, ptr %rv, align 4, !dbg !3916, !tbaa !2683
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3), align 8, !dbg !3917, !tbaa !3893
  %tobool = icmp ne ptr %0, null, !dbg !3917
  br i1 %tobool, label %if.then, label %if.end3, !dbg !3916

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3), align 8, !dbg !3919, !tbaa !3893
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %1, i32 0, i32 4, !dbg !3919
  %2 = load ptr, ptr %elts, align 8, !dbg !3919, !tbaa !2715
  store ptr %2, ptr %pHook, align 8, !dbg !3919, !tbaa !2416
  store i32 0, ptr %n, align 4, !dbg !3921, !tbaa !2683
  br label %for.cond, !dbg !3921

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %n, align 4, !dbg !3923, !tbaa !2683
  %4 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 3), align 8, !dbg !3923, !tbaa !3893
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %4, i32 0, i32 2, !dbg !3923
  %5 = load i32, ptr %nelts, align 4, !dbg !3923, !tbaa !2702
  %cmp = icmp slt i32 %3, %5, !dbg !3923
  br i1 %cmp, label %for.body, label %for.end, !dbg !3921

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %pHook, align 8, !dbg !3925, !tbaa !2416
  %7 = load i32, ptr %n, align 4, !dbg !3925, !tbaa !2683
  %idxprom = sext i32 %7 to i64, !dbg !3925
  %arrayidx = getelementptr inbounds %struct.dav_LINK_deliver_report_t, ptr %6, i64 %idxprom, !dbg !3925
  %pFunc = getelementptr inbounds %struct.dav_LINK_deliver_report_t, ptr %arrayidx, i32 0, i32 0, !dbg !3925
  %8 = load ptr, ptr %pFunc, align 8, !dbg !3925, !tbaa !3896
  %9 = load ptr, ptr %r.addr, align 8, !dbg !3925, !tbaa !2416
  %10 = load ptr, ptr %resource.addr, align 8, !dbg !3925, !tbaa !2416
  %11 = load ptr, ptr %doc.addr, align 8, !dbg !3925, !tbaa !2416
  %12 = load ptr, ptr %output.addr, align 8, !dbg !3925, !tbaa !2416
  %13 = load ptr, ptr %err.addr, align 8, !dbg !3925, !tbaa !2416
  %call = call i32 %8(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12, ptr noundef %13), !dbg !3925
  store i32 %call, ptr %rv, align 4, !dbg !3925, !tbaa !2683
  %14 = load i32, ptr %rv, align 4, !dbg !3927, !tbaa !2683
  %cmp1 = icmp ne i32 %14, -1, !dbg !3927
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !3925

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !3927

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3925

for.inc:                                          ; preds = %if.end
  %15 = load i32, ptr %n, align 4, !dbg !3923, !tbaa !2683
  %inc = add nsw i32 %15, 1, !dbg !3923
  store i32 %inc, ptr %n, align 4, !dbg !3923, !tbaa !2683
  br label %for.cond, !dbg !3923, !llvm.loop !3929

for.end:                                          ; preds = %if.then2, %for.cond
  br label %if.end3, !dbg !3919

if.end3:                                          ; preds = %for.end, %entry
  %16 = load i32, ptr %rv, align 4, !dbg !3916, !tbaa !2683
  call void @llvm.lifetime.end.p0(i64 4, ptr %rv) #10, !dbg !3916
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #10, !dbg !3916
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3916
  ret i32 %16, !dbg !3916
}

; Function Attrs: nounwind uwtable
define void @dav_hook_gather_reports(ptr noundef %pf, ptr noundef %aszPre, ptr noundef %aszSucc, i32 noundef %nOrder) #0 !dbg !3930 {
entry:
  %pf.addr = alloca ptr, align 8
  %aszPre.addr = alloca ptr, align 8
  %aszSucc.addr = alloca ptr, align 8
  %nOrder.addr = alloca i32, align 4
  %pHook = alloca ptr, align 8
  store ptr %pf, ptr %pf.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pf.addr, metadata !3934, metadata !DIExpression()), !dbg !3939
  store ptr %aszPre, ptr %aszPre.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszPre.addr, metadata !3935, metadata !DIExpression()), !dbg !3939
  store ptr %aszSucc, ptr %aszSucc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszSucc.addr, metadata !3936, metadata !DIExpression()), !dbg !3939
  store i32 %nOrder, ptr %nOrder.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %nOrder.addr, metadata !3937, metadata !DIExpression()), !dbg !3939
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3939
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3938, metadata !DIExpression()), !dbg !3939
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4), align 8, !dbg !3940, !tbaa !3942
  %tobool = icmp ne ptr %0, null, !dbg !3940
  br i1 %tobool, label %if.end, label %if.then, !dbg !3939

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @apr_hook_global_pool, align 8, !dbg !3943, !tbaa !2416
  %call = call ptr @apr_array_make(ptr noundef %1, i32 noundef 1, i32 noundef 40), !dbg !3943
  store ptr %call, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4), align 8, !dbg !3943, !tbaa !3942
  call void @apr_hook_sort_register(ptr noundef @.str.40, ptr noundef getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4)), !dbg !3943
  br label %if.end, !dbg !3943

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4), align 8, !dbg !3939, !tbaa !3942
  %call1 = call ptr @apr_array_push(ptr noundef %2), !dbg !3939
  store ptr %call1, ptr %pHook, align 8, !dbg !3939, !tbaa !2416
  %3 = load ptr, ptr %pf.addr, align 8, !dbg !3939, !tbaa !2416
  %4 = load ptr, ptr %pHook, align 8, !dbg !3939, !tbaa !2416
  %pFunc = getelementptr inbounds %struct.dav_LINK_gather_reports_t, ptr %4, i32 0, i32 0, !dbg !3939
  store ptr %3, ptr %pFunc, align 8, !dbg !3939, !tbaa !3945
  %5 = load ptr, ptr %aszPre.addr, align 8, !dbg !3939, !tbaa !2416
  %6 = load ptr, ptr %pHook, align 8, !dbg !3939, !tbaa !2416
  %aszPredecessors = getelementptr inbounds %struct.dav_LINK_gather_reports_t, ptr %6, i32 0, i32 2, !dbg !3939
  store ptr %5, ptr %aszPredecessors, align 8, !dbg !3939, !tbaa !3947
  %7 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3939, !tbaa !2416
  %8 = load ptr, ptr %pHook, align 8, !dbg !3939, !tbaa !2416
  %aszSuccessors = getelementptr inbounds %struct.dav_LINK_gather_reports_t, ptr %8, i32 0, i32 3, !dbg !3939
  store ptr %7, ptr %aszSuccessors, align 8, !dbg !3939, !tbaa !3948
  %9 = load i32, ptr %nOrder.addr, align 4, !dbg !3939, !tbaa !2683
  %10 = load ptr, ptr %pHook, align 8, !dbg !3939, !tbaa !2416
  %nOrder2 = getelementptr inbounds %struct.dav_LINK_gather_reports_t, ptr %10, i32 0, i32 4, !dbg !3939
  store i32 %9, ptr %nOrder2, align 8, !dbg !3939, !tbaa !3949
  %11 = load ptr, ptr @apr_hook_debug_current, align 8, !dbg !3939, !tbaa !2416
  %12 = load ptr, ptr %pHook, align 8, !dbg !3939, !tbaa !2416
  %szName = getelementptr inbounds %struct.dav_LINK_gather_reports_t, ptr %12, i32 0, i32 1, !dbg !3939
  store ptr %11, ptr %szName, align 8, !dbg !3939, !tbaa !3950
  %13 = load i32, ptr @apr_hook_debug_enabled, align 4, !dbg !3951, !tbaa !2683
  %tobool3 = icmp ne i32 %13, 0, !dbg !3951
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3939

if.then4:                                         ; preds = %if.end
  %14 = load ptr, ptr %aszPre.addr, align 8, !dbg !3951, !tbaa !2416
  %15 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3951, !tbaa !2416
  call void @apr_hook_debug_show(ptr noundef @.str.40, ptr noundef %14, ptr noundef %15), !dbg !3951
  br label %if.end5, !dbg !3951

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3939
  ret void, !dbg !3939
}

; Function Attrs: nounwind uwtable
define ptr @dav_hook_get_gather_reports() #0 !dbg !3953 {
entry:
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4), align 8, !dbg !3954, !tbaa !3942
  ret ptr %0, !dbg !3954
}

; Function Attrs: nounwind uwtable
define void @dav_run_gather_reports(ptr noundef %r, ptr noundef %resource, ptr noundef %reports, ptr noundef %err) #0 !dbg !3955 {
entry:
  %r.addr = alloca ptr, align 8
  %resource.addr = alloca ptr, align 8
  %reports.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %pHook = alloca ptr, align 8
  %n = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !3957, metadata !DIExpression()), !dbg !3963
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !3958, metadata !DIExpression()), !dbg !3963
  store ptr %reports, ptr %reports.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %reports.addr, metadata !3959, metadata !DIExpression()), !dbg !3963
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !3960, metadata !DIExpression()), !dbg !3963
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3963
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3961, metadata !DIExpression()), !dbg !3963
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #10, !dbg !3963
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3962, metadata !DIExpression()), !dbg !3963
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4), align 8, !dbg !3964, !tbaa !3942
  %tobool = icmp ne ptr %0, null, !dbg !3964
  br i1 %tobool, label %if.then, label %if.end, !dbg !3963

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4), align 8, !dbg !3966, !tbaa !3942
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %1, i32 0, i32 4, !dbg !3966
  %2 = load ptr, ptr %elts, align 8, !dbg !3966, !tbaa !2715
  store ptr %2, ptr %pHook, align 8, !dbg !3966, !tbaa !2416
  store i32 0, ptr %n, align 4, !dbg !3968, !tbaa !2683
  br label %for.cond, !dbg !3968

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %n, align 4, !dbg !3970, !tbaa !2683
  %4 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 4), align 8, !dbg !3970, !tbaa !3942
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %4, i32 0, i32 2, !dbg !3970
  %5 = load i32, ptr %nelts, align 4, !dbg !3970, !tbaa !2702
  %cmp = icmp slt i32 %3, %5, !dbg !3970
  br i1 %cmp, label %for.body, label %for.end, !dbg !3968

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %pHook, align 8, !dbg !3972, !tbaa !2416
  %7 = load i32, ptr %n, align 4, !dbg !3972, !tbaa !2683
  %idxprom = sext i32 %7 to i64, !dbg !3972
  %arrayidx = getelementptr inbounds %struct.dav_LINK_gather_reports_t, ptr %6, i64 %idxprom, !dbg !3972
  %pFunc = getelementptr inbounds %struct.dav_LINK_gather_reports_t, ptr %arrayidx, i32 0, i32 0, !dbg !3972
  %8 = load ptr, ptr %pFunc, align 8, !dbg !3972, !tbaa !3945
  %9 = load ptr, ptr %r.addr, align 8, !dbg !3972, !tbaa !2416
  %10 = load ptr, ptr %resource.addr, align 8, !dbg !3972, !tbaa !2416
  %11 = load ptr, ptr %reports.addr, align 8, !dbg !3972, !tbaa !2416
  %12 = load ptr, ptr %err.addr, align 8, !dbg !3972, !tbaa !2416
  call void %8(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !3972
  br label %for.inc, !dbg !3972

for.inc:                                          ; preds = %for.body
  %13 = load i32, ptr %n, align 4, !dbg !3970, !tbaa !2683
  %inc = add nsw i32 %13, 1, !dbg !3970
  store i32 %inc, ptr %n, align 4, !dbg !3970, !tbaa !2683
  br label %for.cond, !dbg !3970, !llvm.loop !3974

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3966

if.end:                                           ; preds = %for.end, %entry
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #10, !dbg !3963
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3963
  ret void, !dbg !3963
}

; Function Attrs: nounwind uwtable
define void @dav_hook_method_precondition(ptr noundef %pf, ptr noundef %aszPre, ptr noundef %aszSucc, i32 noundef %nOrder) #0 !dbg !3975 {
entry:
  %pf.addr = alloca ptr, align 8
  %aszPre.addr = alloca ptr, align 8
  %aszSucc.addr = alloca ptr, align 8
  %nOrder.addr = alloca i32, align 4
  %pHook = alloca ptr, align 8
  store ptr %pf, ptr %pf.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pf.addr, metadata !3979, metadata !DIExpression()), !dbg !3984
  store ptr %aszPre, ptr %aszPre.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszPre.addr, metadata !3980, metadata !DIExpression()), !dbg !3984
  store ptr %aszSucc, ptr %aszSucc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %aszSucc.addr, metadata !3981, metadata !DIExpression()), !dbg !3984
  store i32 %nOrder, ptr %nOrder.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %nOrder.addr, metadata !3982, metadata !DIExpression()), !dbg !3984
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !3984
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !3983, metadata !DIExpression()), !dbg !3984
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5), align 8, !dbg !3985, !tbaa !3987
  %tobool = icmp ne ptr %0, null, !dbg !3985
  br i1 %tobool, label %if.end, label %if.then, !dbg !3984

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @apr_hook_global_pool, align 8, !dbg !3988, !tbaa !2416
  %call = call ptr @apr_array_make(ptr noundef %1, i32 noundef 1, i32 noundef 40), !dbg !3988
  store ptr %call, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5), align 8, !dbg !3988, !tbaa !3987
  call void @apr_hook_sort_register(ptr noundef @.str.41, ptr noundef getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5)), !dbg !3988
  br label %if.end, !dbg !3988

if.end:                                           ; preds = %if.then, %entry
  %2 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5), align 8, !dbg !3984, !tbaa !3987
  %call1 = call ptr @apr_array_push(ptr noundef %2), !dbg !3984
  store ptr %call1, ptr %pHook, align 8, !dbg !3984, !tbaa !2416
  %3 = load ptr, ptr %pf.addr, align 8, !dbg !3984, !tbaa !2416
  %4 = load ptr, ptr %pHook, align 8, !dbg !3984, !tbaa !2416
  %pFunc = getelementptr inbounds %struct.dav_LINK_method_precondition_t, ptr %4, i32 0, i32 0, !dbg !3984
  store ptr %3, ptr %pFunc, align 8, !dbg !3984, !tbaa !3990
  %5 = load ptr, ptr %aszPre.addr, align 8, !dbg !3984, !tbaa !2416
  %6 = load ptr, ptr %pHook, align 8, !dbg !3984, !tbaa !2416
  %aszPredecessors = getelementptr inbounds %struct.dav_LINK_method_precondition_t, ptr %6, i32 0, i32 2, !dbg !3984
  store ptr %5, ptr %aszPredecessors, align 8, !dbg !3984, !tbaa !3992
  %7 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3984, !tbaa !2416
  %8 = load ptr, ptr %pHook, align 8, !dbg !3984, !tbaa !2416
  %aszSuccessors = getelementptr inbounds %struct.dav_LINK_method_precondition_t, ptr %8, i32 0, i32 3, !dbg !3984
  store ptr %7, ptr %aszSuccessors, align 8, !dbg !3984, !tbaa !3993
  %9 = load i32, ptr %nOrder.addr, align 4, !dbg !3984, !tbaa !2683
  %10 = load ptr, ptr %pHook, align 8, !dbg !3984, !tbaa !2416
  %nOrder2 = getelementptr inbounds %struct.dav_LINK_method_precondition_t, ptr %10, i32 0, i32 4, !dbg !3984
  store i32 %9, ptr %nOrder2, align 8, !dbg !3984, !tbaa !3994
  %11 = load ptr, ptr @apr_hook_debug_current, align 8, !dbg !3984, !tbaa !2416
  %12 = load ptr, ptr %pHook, align 8, !dbg !3984, !tbaa !2416
  %szName = getelementptr inbounds %struct.dav_LINK_method_precondition_t, ptr %12, i32 0, i32 1, !dbg !3984
  store ptr %11, ptr %szName, align 8, !dbg !3984, !tbaa !3995
  %13 = load i32, ptr @apr_hook_debug_enabled, align 4, !dbg !3996, !tbaa !2683
  %tobool3 = icmp ne i32 %13, 0, !dbg !3996
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3984

if.then4:                                         ; preds = %if.end
  %14 = load ptr, ptr %aszPre.addr, align 8, !dbg !3996, !tbaa !2416
  %15 = load ptr, ptr %aszSucc.addr, align 8, !dbg !3996, !tbaa !2416
  call void @apr_hook_debug_show(ptr noundef @.str.41, ptr noundef %14, ptr noundef %15), !dbg !3996
  br label %if.end5, !dbg !3996

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !3984
  ret void, !dbg !3984
}

; Function Attrs: nounwind uwtable
define ptr @dav_hook_get_method_precondition() #0 !dbg !3998 {
entry:
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5), align 8, !dbg !3999, !tbaa !3987
  ret ptr %0, !dbg !3999
}

; Function Attrs: nounwind uwtable
define i32 @dav_run_method_precondition(ptr noundef %r, ptr noundef %src, ptr noundef %dest, ptr noundef %doc, ptr noundef %err) #0 !dbg !4000 {
entry:
  %r.addr = alloca ptr, align 8
  %src.addr = alloca ptr, align 8
  %dest.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %pHook = alloca ptr, align 8
  %n = alloca i32, align 4
  %rv = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4002, metadata !DIExpression()), !dbg !4010
  store ptr %src, ptr %src.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %src.addr, metadata !4003, metadata !DIExpression()), !dbg !4010
  store ptr %dest, ptr %dest.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %dest.addr, metadata !4004, metadata !DIExpression()), !dbg !4010
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !4005, metadata !DIExpression()), !dbg !4010
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4006, metadata !DIExpression()), !dbg !4010
  call void @llvm.lifetime.start.p0(i64 8, ptr %pHook) #10, !dbg !4010
  tail call void @llvm.dbg.declare(metadata ptr %pHook, metadata !4007, metadata !DIExpression()), !dbg !4010
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #10, !dbg !4010
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !4008, metadata !DIExpression()), !dbg !4010
  call void @llvm.lifetime.start.p0(i64 4, ptr %rv) #10, !dbg !4010
  tail call void @llvm.dbg.declare(metadata ptr %rv, metadata !4009, metadata !DIExpression()), !dbg !4010
  store i32 -1, ptr %rv, align 4, !dbg !4010, !tbaa !2683
  %0 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5), align 8, !dbg !4011, !tbaa !3987
  %tobool = icmp ne ptr %0, null, !dbg !4011
  br i1 %tobool, label %if.then, label %if.end3, !dbg !4010

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5), align 8, !dbg !4013, !tbaa !3987
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %1, i32 0, i32 4, !dbg !4013
  %2 = load ptr, ptr %elts, align 8, !dbg !4013, !tbaa !2715
  store ptr %2, ptr %pHook, align 8, !dbg !4013, !tbaa !2416
  store i32 0, ptr %n, align 4, !dbg !4015, !tbaa !2683
  br label %for.cond, !dbg !4015

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %n, align 4, !dbg !4017, !tbaa !2683
  %4 = load ptr, ptr getelementptr inbounds (%struct.anon.0, ptr @_hooks, i32 0, i32 5), align 8, !dbg !4017, !tbaa !3987
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %4, i32 0, i32 2, !dbg !4017
  %5 = load i32, ptr %nelts, align 4, !dbg !4017, !tbaa !2702
  %cmp = icmp slt i32 %3, %5, !dbg !4017
  br i1 %cmp, label %for.body, label %for.end, !dbg !4015

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %pHook, align 8, !dbg !4019, !tbaa !2416
  %7 = load i32, ptr %n, align 4, !dbg !4019, !tbaa !2683
  %idxprom = sext i32 %7 to i64, !dbg !4019
  %arrayidx = getelementptr inbounds %struct.dav_LINK_method_precondition_t, ptr %6, i64 %idxprom, !dbg !4019
  %pFunc = getelementptr inbounds %struct.dav_LINK_method_precondition_t, ptr %arrayidx, i32 0, i32 0, !dbg !4019
  %8 = load ptr, ptr %pFunc, align 8, !dbg !4019, !tbaa !3990
  %9 = load ptr, ptr %r.addr, align 8, !dbg !4019, !tbaa !2416
  %10 = load ptr, ptr %src.addr, align 8, !dbg !4019, !tbaa !2416
  %11 = load ptr, ptr %dest.addr, align 8, !dbg !4019, !tbaa !2416
  %12 = load ptr, ptr %doc.addr, align 8, !dbg !4019, !tbaa !2416
  %13 = load ptr, ptr %err.addr, align 8, !dbg !4019, !tbaa !2416
  %call = call i32 %8(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12, ptr noundef %13), !dbg !4019
  store i32 %call, ptr %rv, align 4, !dbg !4019, !tbaa !2683
  %14 = load i32, ptr %rv, align 4, !dbg !4021, !tbaa !2683
  %cmp1 = icmp ne i32 %14, -1, !dbg !4021
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4019

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !4021

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4019

for.inc:                                          ; preds = %if.end
  %15 = load i32, ptr %n, align 4, !dbg !4017, !tbaa !2683
  %inc = add nsw i32 %15, 1, !dbg !4017
  store i32 %inc, ptr %n, align 4, !dbg !4017, !tbaa !2683
  br label %for.cond, !dbg !4017, !llvm.loop !4023

for.end:                                          ; preds = %if.then2, %for.cond
  br label %if.end3, !dbg !4013

if.end3:                                          ; preds = %for.end, %entry
  %16 = load i32, ptr %rv, align 4, !dbg !4010, !tbaa !2683
  call void @llvm.lifetime.end.p0(i64 4, ptr %rv) #10, !dbg !4010
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #10, !dbg !4010
  call void @llvm.lifetime.end.p0(i64 8, ptr %pHook) #10, !dbg !4010
  ret i32 %16, !dbg !4010
}

declare !dbg !4024 ptr @ap_os_escape_path(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !4025 ptr @strchr(ptr noundef, i32 noundef) #3

declare !dbg !4028 ptr @apr_xml_quote_string(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ap_rputs(ptr noundef %str, ptr noundef %r) #6 !dbg !4031 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %rc = alloca i32, align 4
  store ptr %str, ptr %str.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %str.addr, metadata !4035, metadata !DIExpression()), !dbg !4044
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4036, metadata !DIExpression()), !dbg !4045
  call void @llvm.lifetime.start.p0(i64 8, ptr %len) #10, !dbg !4046
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !4037, metadata !DIExpression()), !dbg !4047
  %0 = load ptr, ptr %str.addr, align 8, !dbg !4048, !tbaa !2416
  %call = call i64 @strlen(ptr noundef %0) #11, !dbg !4049
  store i64 %call, ptr %len, align 8, !dbg !4050, !tbaa !3569
  br label %for.cond, !dbg !4051

for.cond:                                         ; preds = %if.end7, %entry
  %1 = load i64, ptr %len, align 8, !dbg !4052, !tbaa !3569
  %cmp = icmp ule i64 %1, 2147483647, !dbg !4053
  br i1 %cmp, label %if.then, label %if.else, !dbg !4054

if.then:                                          ; preds = %for.cond
  %2 = load ptr, ptr %str.addr, align 8, !dbg !4055, !tbaa !2416
  %3 = load i64, ptr %len, align 8, !dbg !4057, !tbaa !3569
  %conv = trunc i64 %3 to i32, !dbg !4058
  %4 = load ptr, ptr %r.addr, align 8, !dbg !4059, !tbaa !2416
  %call1 = call i32 @ap_rwrite(ptr noundef %2, i32 noundef %conv, ptr noundef %4), !dbg !4060
  store i32 %call1, ptr %retval, align 4, !dbg !4061
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup8, !dbg !4061

if.else:                                          ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %rc) #10, !dbg !4062
  tail call void @llvm.dbg.declare(metadata ptr %rc, metadata !4038, metadata !DIExpression()), !dbg !4063
  %5 = load ptr, ptr %str.addr, align 8, !dbg !4064, !tbaa !2416
  %6 = load ptr, ptr %r.addr, align 8, !dbg !4065, !tbaa !2416
  %call2 = call i32 @ap_rwrite(ptr noundef %5, i32 noundef 2147483647, ptr noundef %6), !dbg !4066
  store i32 %call2, ptr %rc, align 4, !dbg !4067, !tbaa !2683
  %7 = load i32, ptr %rc, align 4, !dbg !4068, !tbaa !2683
  %cmp3 = icmp slt i32 %7, 0, !dbg !4070
  br i1 %cmp3, label %if.then5, label %if.else6, !dbg !4071

if.then5:                                         ; preds = %if.else
  %8 = load i32, ptr %rc, align 4, !dbg !4072, !tbaa !2683
  store i32 %8, ptr %retval, align 4, !dbg !4074
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4074

if.else6:                                         ; preds = %if.else
  %9 = load ptr, ptr %str.addr, align 8, !dbg !4075, !tbaa !2416
  %add.ptr = getelementptr inbounds i8, ptr %9, i64 2147483647, !dbg !4075
  store ptr %add.ptr, ptr %str.addr, align 8, !dbg !4075, !tbaa !2416
  %10 = load i64, ptr %len, align 8, !dbg !4077, !tbaa !3569
  %sub = sub i64 %10, 2147483647, !dbg !4077
  store i64 %sub, ptr %len, align 8, !dbg !4077, !tbaa !3569
  br label %if.end

if.end:                                           ; preds = %if.else6
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4078
  br label %cleanup, !dbg !4078

cleanup:                                          ; preds = %if.end, %if.then5
  call void @llvm.lifetime.end.p0(i64 4, ptr %rc) #10, !dbg !4078
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup8 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end7

if.end7:                                          ; preds = %cleanup.cont
  br label %for.cond, !dbg !4079, !llvm.loop !4080

cleanup8:                                         ; preds = %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %len) #10, !dbg !4083
  %11 = load i32, ptr %retval, align 4, !dbg !4083
  ret i32 %11, !dbg !4083
}

declare !dbg !4084 i32 @ap_rprintf(ptr noundef, ptr noundef, ...) #2

declare !dbg !4087 i32 @ap_rwrite(ptr noundef, i32 noundef, ptr noundef) #2

declare !dbg !4090 ptr @apr_pstrmemdup(ptr noundef, ptr noundef, i64 noundef) #2

declare !dbg !4093 void @ap_log_error_(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ...) #2

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !4096 i32 @strcasecmp(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal ptr @dav_cmd_dav(ptr noundef %cmd, ptr noundef %config, ptr noundef %arg1) #0 !dbg !4098 {
entry:
  %retval = alloca ptr, align 8
  %cmd.addr = alloca ptr, align 8
  %config.addr = alloca ptr, align 8
  %arg1.addr = alloca ptr, align 8
  %conf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %cmd, ptr %cmd.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %cmd.addr, metadata !4100, metadata !DIExpression()), !dbg !4104
  store ptr %config, ptr %config.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %config.addr, metadata !4101, metadata !DIExpression()), !dbg !4105
  store ptr %arg1, ptr %arg1.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %arg1.addr, metadata !4102, metadata !DIExpression()), !dbg !4106
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !4107
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !4103, metadata !DIExpression()), !dbg !4108
  %0 = load ptr, ptr %config.addr, align 8, !dbg !4109, !tbaa !2416
  store ptr %0, ptr %conf, align 8, !dbg !4108, !tbaa !2416
  %1 = load ptr, ptr %arg1.addr, align 8, !dbg !4110, !tbaa !2416
  %call = call i32 @strcasecmp(ptr noundef %1, ptr noundef @.str.61) #11, !dbg !4112
  %cmp = icmp eq i32 %call, 0, !dbg !4113
  br i1 %cmp, label %if.then, label %if.else, !dbg !4114

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %conf, align 8, !dbg !4115, !tbaa !2416
  %provider_name = getelementptr inbounds %struct.dav_dir_conf, ptr %2, i32 0, i32 0, !dbg !4117
  store ptr @.str.62, ptr %provider_name, align 8, !dbg !4118, !tbaa !2436
  br label %if.end7, !dbg !4119

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr %arg1.addr, align 8, !dbg !4120, !tbaa !2416
  %call1 = call i32 @strcasecmp(ptr noundef %3, ptr noundef @.str.63) #11, !dbg !4122
  %cmp2 = icmp eq i32 %call1, 0, !dbg !4123
  br i1 %cmp2, label %if.then3, label %if.else5, !dbg !4124

if.then3:                                         ; preds = %if.else
  %4 = load ptr, ptr %conf, align 8, !dbg !4125, !tbaa !2416
  %provider_name4 = getelementptr inbounds %struct.dav_dir_conf, ptr %4, i32 0, i32 0, !dbg !4127
  store ptr null, ptr %provider_name4, align 8, !dbg !4128, !tbaa !2436
  %5 = load ptr, ptr %conf, align 8, !dbg !4129, !tbaa !2416
  %provider = getelementptr inbounds %struct.dav_dir_conf, ptr %5, i32 0, i32 1, !dbg !4130
  store ptr null, ptr %provider, align 8, !dbg !4131, !tbaa !2453
  br label %if.end, !dbg !4132

if.else5:                                         ; preds = %if.else
  %6 = load ptr, ptr %arg1.addr, align 8, !dbg !4133, !tbaa !2416
  %7 = load ptr, ptr %conf, align 8, !dbg !4135, !tbaa !2416
  %provider_name6 = getelementptr inbounds %struct.dav_dir_conf, ptr %7, i32 0, i32 0, !dbg !4136
  store ptr %6, ptr %provider_name6, align 8, !dbg !4137, !tbaa !2436
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then3
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %8 = load ptr, ptr %conf, align 8, !dbg !4138, !tbaa !2416
  %provider_name8 = getelementptr inbounds %struct.dav_dir_conf, ptr %8, i32 0, i32 0, !dbg !4140
  %9 = load ptr, ptr %provider_name8, align 8, !dbg !4140, !tbaa !2436
  %cmp9 = icmp ne ptr %9, null, !dbg !4141
  br i1 %cmp9, label %if.then10, label %if.end20, !dbg !4142

if.then10:                                        ; preds = %if.end7
  %10 = load ptr, ptr %conf, align 8, !dbg !4143, !tbaa !2416
  %provider_name11 = getelementptr inbounds %struct.dav_dir_conf, ptr %10, i32 0, i32 0, !dbg !4145
  %11 = load ptr, ptr %provider_name11, align 8, !dbg !4145, !tbaa !2436
  %call12 = call ptr @dav_lookup_provider(ptr noundef %11), !dbg !4146
  %12 = load ptr, ptr %conf, align 8, !dbg !4147, !tbaa !2416
  %provider13 = getelementptr inbounds %struct.dav_dir_conf, ptr %12, i32 0, i32 1, !dbg !4148
  store ptr %call12, ptr %provider13, align 8, !dbg !4149, !tbaa !2453
  %13 = load ptr, ptr %conf, align 8, !dbg !4150, !tbaa !2416
  %provider14 = getelementptr inbounds %struct.dav_dir_conf, ptr %13, i32 0, i32 1, !dbg !4152
  %14 = load ptr, ptr %provider14, align 8, !dbg !4152, !tbaa !2453
  %cmp15 = icmp eq ptr %14, null, !dbg !4153
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !4154

if.then16:                                        ; preds = %if.then10
  %15 = load ptr, ptr %cmd.addr, align 8, !dbg !4155, !tbaa !2416
  %pool = getelementptr inbounds %struct.cmd_parms_struct, ptr %15, i32 0, i32 9, !dbg !4157
  %16 = load ptr, ptr %pool, align 8, !dbg !4157, !tbaa !4158
  %17 = load ptr, ptr %conf, align 8, !dbg !4160, !tbaa !2416
  %provider_name17 = getelementptr inbounds %struct.dav_dir_conf, ptr %17, i32 0, i32 0, !dbg !4161
  %18 = load ptr, ptr %provider_name17, align 8, !dbg !4161, !tbaa !2436
  %call18 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %16, ptr noundef @.str.64, ptr noundef %18), !dbg !4162
  store ptr %call18, ptr %retval, align 8, !dbg !4163
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4163

if.end19:                                         ; preds = %if.then10
  br label %if.end20, !dbg !4164

if.end20:                                         ; preds = %if.end19, %if.end7
  store ptr null, ptr %retval, align 8, !dbg !4165
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4165

cleanup:                                          ; preds = %if.end20, %if.then16
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !4166
  %19 = load ptr, ptr %retval, align 8, !dbg !4166
  ret ptr %19, !dbg !4166
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_cmd_davmintimeout(ptr noundef %cmd, ptr noundef %config, ptr noundef %arg1) #0 !dbg !4167 {
entry:
  %retval = alloca ptr, align 8
  %cmd.addr = alloca ptr, align 8
  %config.addr = alloca ptr, align 8
  %arg1.addr = alloca ptr, align 8
  %conf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %cmd, ptr %cmd.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %cmd.addr, metadata !4169, metadata !DIExpression()), !dbg !4173
  store ptr %config, ptr %config.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %config.addr, metadata !4170, metadata !DIExpression()), !dbg !4174
  store ptr %arg1, ptr %arg1.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %arg1.addr, metadata !4171, metadata !DIExpression()), !dbg !4175
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !4176
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !4172, metadata !DIExpression()), !dbg !4177
  %0 = load ptr, ptr %config.addr, align 8, !dbg !4178, !tbaa !2416
  store ptr %0, ptr %conf, align 8, !dbg !4177, !tbaa !2416
  %1 = load ptr, ptr %arg1.addr, align 8, !dbg !4179, !tbaa !2416
  %call = call i32 @atoi(ptr noundef %1) #11, !dbg !4180
  %2 = load ptr, ptr %conf, align 8, !dbg !4181, !tbaa !2416
  %locktimeout = getelementptr inbounds %struct.dav_dir_conf, ptr %2, i32 0, i32 3, !dbg !4182
  store i32 %call, ptr %locktimeout, align 8, !dbg !4183, !tbaa !3664
  %3 = load ptr, ptr %conf, align 8, !dbg !4184, !tbaa !2416
  %locktimeout1 = getelementptr inbounds %struct.dav_dir_conf, ptr %3, i32 0, i32 3, !dbg !4186
  %4 = load i32, ptr %locktimeout1, align 8, !dbg !4186, !tbaa !3664
  %cmp = icmp slt i32 %4, 0, !dbg !4187
  br i1 %cmp, label %if.then, label %if.end, !dbg !4188

if.then:                                          ; preds = %entry
  store ptr @.str.65, ptr %retval, align 8, !dbg !4189
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4189

if.end:                                           ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4190
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4190

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !4191
  %5 = load ptr, ptr %retval, align 8, !dbg !4191
  ret ptr %5, !dbg !4191
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_cmd_davdepthinfinity(ptr noundef %cmd, ptr noundef %config, i32 noundef %arg) #0 !dbg !4192 {
entry:
  %cmd.addr = alloca ptr, align 8
  %config.addr = alloca ptr, align 8
  %arg.addr = alloca i32, align 4
  %conf = alloca ptr, align 8
  store ptr %cmd, ptr %cmd.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %cmd.addr, metadata !4194, metadata !DIExpression()), !dbg !4198
  store ptr %config, ptr %config.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %config.addr, metadata !4195, metadata !DIExpression()), !dbg !4199
  store i32 %arg, ptr %arg.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4196, metadata !DIExpression()), !dbg !4200
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !4201
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !4197, metadata !DIExpression()), !dbg !4202
  %0 = load ptr, ptr %config.addr, align 8, !dbg !4203, !tbaa !2416
  store ptr %0, ptr %conf, align 8, !dbg !4202, !tbaa !2416
  %1 = load i32, ptr %arg.addr, align 4, !dbg !4204, !tbaa !2683
  %tobool = icmp ne i32 %1, 0, !dbg !4204
  br i1 %tobool, label %if.then, label %if.else, !dbg !4206

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %conf, align 8, !dbg !4207, !tbaa !2416
  %allow_depthinfinity = getelementptr inbounds %struct.dav_dir_conf, ptr %2, i32 0, i32 4, !dbg !4208
  store i32 2, ptr %allow_depthinfinity, align 4, !dbg !4209, !tbaa !3673
  br label %if.end, !dbg !4207

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr %conf, align 8, !dbg !4210, !tbaa !2416
  %allow_depthinfinity1 = getelementptr inbounds %struct.dav_dir_conf, ptr %3, i32 0, i32 4, !dbg !4211
  store i32 1, ptr %allow_depthinfinity1, align 4, !dbg !4212, !tbaa !3673
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !4213
  ret ptr null, !dbg !4214
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_cmd_davlockdiscovery(ptr noundef %cmd, ptr noundef %config, i32 noundef %arg) #0 !dbg !4215 {
entry:
  %cmd.addr = alloca ptr, align 8
  %config.addr = alloca ptr, align 8
  %arg.addr = alloca i32, align 4
  %conf = alloca ptr, align 8
  store ptr %cmd, ptr %cmd.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %cmd.addr, metadata !4217, metadata !DIExpression()), !dbg !4221
  store ptr %config, ptr %config.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %config.addr, metadata !4218, metadata !DIExpression()), !dbg !4222
  store i32 %arg, ptr %arg.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4219, metadata !DIExpression()), !dbg !4223
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !4224
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !4220, metadata !DIExpression()), !dbg !4225
  %0 = load ptr, ptr %config.addr, align 8, !dbg !4226, !tbaa !2416
  store ptr %0, ptr %conf, align 8, !dbg !4225, !tbaa !2416
  %1 = load i32, ptr %arg.addr, align 4, !dbg !4227, !tbaa !2683
  %tobool = icmp ne i32 %1, 0, !dbg !4227
  br i1 %tobool, label %if.then, label %if.else, !dbg !4229

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %conf, align 8, !dbg !4230, !tbaa !2416
  %allow_lockdiscovery = getelementptr inbounds %struct.dav_dir_conf, ptr %2, i32 0, i32 5, !dbg !4231
  store i32 2, ptr %allow_lockdiscovery, align 8, !dbg !4232, !tbaa !3678
  br label %if.end, !dbg !4230

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr %conf, align 8, !dbg !4233, !tbaa !2416
  %allow_lockdiscovery1 = getelementptr inbounds %struct.dav_dir_conf, ptr %3, i32 0, i32 5, !dbg !4234
  store i32 1, ptr %allow_lockdiscovery1, align 8, !dbg !4235, !tbaa !3678
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !4236
  ret ptr null, !dbg !4237
}

declare !dbg !4238 ptr @dav_lookup_provider(ptr noundef) #2

; Function Attrs: inlinehint nounwind willreturn memory(read) uwtable
define available_externally i32 @atoi(ptr noundef nonnull %__nptr) #7 !dbg !4241 {
entry:
  %__nptr.addr = alloca ptr, align 8
  store ptr %__nptr, ptr %__nptr.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %__nptr.addr, metadata !4246, metadata !DIExpression()), !dbg !4247
  %0 = load ptr, ptr %__nptr.addr, align 8, !dbg !4248, !tbaa !2416
  %call = call i64 @strtol(ptr noundef %0, ptr noundef null, i32 noundef 10) #10, !dbg !4249
  %conv = trunc i64 %call to i32, !dbg !4250
  ret i32 %conv, !dbg !4251
}

; Function Attrs: nounwind
declare !dbg !4252 i64 @strtol(ptr noundef, ptr noundef, i32 noundef) #8

declare !dbg !4257 void @ap_hook_handler(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_handler(ptr noundef %r) #0 !dbg !4264 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4266, metadata !DIExpression()), !dbg !4267
  %0 = load ptr, ptr %r.addr, align 8, !dbg !4268, !tbaa !2416
  %handler = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 40, !dbg !4270
  %1 = load ptr, ptr %handler, align 8, !dbg !4270, !tbaa !4271
  %call = call i32 @strcmp(ptr noundef %1, ptr noundef @.str.66) #11, !dbg !4272
  %cmp = icmp ne i32 %call, 0, !dbg !4273
  br i1 %cmp, label %if.then, label %if.end, !dbg !4274

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !4275
  br label %return, !dbg !4275

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !4276, !tbaa !2416
  %parsed_uri = getelementptr inbounds %struct.request_rec, ptr %2, i32 0, i32 66, !dbg !4278
  %fragment = getelementptr inbounds %struct.apr_uri_t, ptr %parsed_uri, i32 0, i32 8, !dbg !4279
  %3 = load ptr, ptr %fragment, align 8, !dbg !4279, !tbaa !4280
  %cmp1 = icmp ne ptr %3, null, !dbg !4281
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !4282

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !4283

do.body:                                          ; preds = %if.then2
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !4285

cond.true:                                        ; preds = %do.body
  %4 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !4285, !tbaa !2683
  br label %cond.end, !dbg !4285

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !4285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !4285
  %5 = load ptr, ptr %r.addr, align 8, !dbg !4285, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4911, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %5, ptr noundef @.str.67), !dbg !4285
  br label %do.end, !dbg !4288

do.end:                                           ; preds = %cond.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !4289, !tbaa !2416
  %call3 = call i32 @dav_error_response(ptr noundef %6, i32 noundef 400, ptr noundef @.str.68), !dbg !4290
  store i32 %call3, ptr %retval, align 4, !dbg !4291
  br label %return, !dbg !4291

if.end4:                                          ; preds = %if.end
  %7 = load ptr, ptr %r.addr, align 8, !dbg !4292, !tbaa !2416
  %allowed = getelementptr inbounds %struct.request_rec, ptr %7, i32 0, i32 18, !dbg !4293
  store i64 67108907, ptr %allowed, align 8, !dbg !4294, !tbaa !4295
  %8 = load ptr, ptr %r.addr, align 8, !dbg !4296, !tbaa !2416
  %allowed5 = getelementptr inbounds %struct.request_rec, ptr %8, i32 0, i32 18, !dbg !4297
  %9 = load i64, ptr %allowed5, align 8, !dbg !4298, !tbaa !4295
  %or = or i64 %9, 32512, !dbg !4298
  store i64 %or, ptr %allowed5, align 8, !dbg !4298, !tbaa !4295
  %10 = load ptr, ptr %r.addr, align 8, !dbg !4299, !tbaa !2416
  %allowed6 = getelementptr inbounds %struct.request_rec, ptr %10, i32 0, i32 18, !dbg !4300
  %11 = load i64, ptr %allowed6, align 8, !dbg !4301, !tbaa !4295
  %or7 = or i64 %11, 4, !dbg !4301
  store i64 %or7, ptr %allowed6, align 8, !dbg !4301, !tbaa !4295
  %12 = load ptr, ptr %r.addr, align 8, !dbg !4302, !tbaa !2416
  %method_number = getelementptr inbounds %struct.request_rec, ptr %12, i32 0, i32 16, !dbg !4304
  %13 = load i32, ptr %method_number, align 4, !dbg !4304, !tbaa !4305
  %cmp8 = icmp eq i32 %13, 0, !dbg !4306
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !4307

if.then9:                                         ; preds = %if.end4
  %14 = load ptr, ptr %r.addr, align 8, !dbg !4308, !tbaa !2416
  %call10 = call i32 @dav_method_get(ptr noundef %14), !dbg !4310
  store i32 %call10, ptr %retval, align 4, !dbg !4311
  br label %return, !dbg !4311

if.end11:                                         ; preds = %if.end4
  %15 = load ptr, ptr %r.addr, align 8, !dbg !4312, !tbaa !2416
  %method_number12 = getelementptr inbounds %struct.request_rec, ptr %15, i32 0, i32 16, !dbg !4314
  %16 = load i32, ptr %method_number12, align 4, !dbg !4314, !tbaa !4305
  %cmp13 = icmp eq i32 %16, 1, !dbg !4315
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !4316

if.then14:                                        ; preds = %if.end11
  %17 = load ptr, ptr %r.addr, align 8, !dbg !4317, !tbaa !2416
  %call15 = call i32 @dav_method_put(ptr noundef %17), !dbg !4319
  store i32 %call15, ptr %retval, align 4, !dbg !4320
  br label %return, !dbg !4320

if.end16:                                         ; preds = %if.end11
  %18 = load ptr, ptr %r.addr, align 8, !dbg !4321, !tbaa !2416
  %method_number17 = getelementptr inbounds %struct.request_rec, ptr %18, i32 0, i32 16, !dbg !4323
  %19 = load i32, ptr %method_number17, align 4, !dbg !4323, !tbaa !4305
  %cmp18 = icmp eq i32 %19, 2, !dbg !4324
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !4325

if.then19:                                        ; preds = %if.end16
  %20 = load ptr, ptr %r.addr, align 8, !dbg !4326, !tbaa !2416
  %call20 = call i32 @dav_method_post(ptr noundef %20), !dbg !4328
  store i32 %call20, ptr %retval, align 4, !dbg !4329
  br label %return, !dbg !4329

if.end21:                                         ; preds = %if.end16
  %21 = load ptr, ptr %r.addr, align 8, !dbg !4330, !tbaa !2416
  %method_number22 = getelementptr inbounds %struct.request_rec, ptr %21, i32 0, i32 16, !dbg !4332
  %22 = load i32, ptr %method_number22, align 4, !dbg !4332, !tbaa !4305
  %cmp23 = icmp eq i32 %22, 3, !dbg !4333
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !4334

if.then24:                                        ; preds = %if.end21
  %23 = load ptr, ptr %r.addr, align 8, !dbg !4335, !tbaa !2416
  %call25 = call i32 @dav_method_delete(ptr noundef %23), !dbg !4337
  store i32 %call25, ptr %retval, align 4, !dbg !4338
  br label %return, !dbg !4338

if.end26:                                         ; preds = %if.end21
  %24 = load ptr, ptr %r.addr, align 8, !dbg !4339, !tbaa !2416
  %method_number27 = getelementptr inbounds %struct.request_rec, ptr %24, i32 0, i32 16, !dbg !4341
  %25 = load i32, ptr %method_number27, align 4, !dbg !4341, !tbaa !4305
  %cmp28 = icmp eq i32 %25, 5, !dbg !4342
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !4343

if.then29:                                        ; preds = %if.end26
  %26 = load ptr, ptr %r.addr, align 8, !dbg !4344, !tbaa !2416
  %call30 = call i32 @dav_method_options(ptr noundef %26), !dbg !4346
  store i32 %call30, ptr %retval, align 4, !dbg !4347
  br label %return, !dbg !4347

if.end31:                                         ; preds = %if.end26
  %27 = load ptr, ptr %r.addr, align 8, !dbg !4348, !tbaa !2416
  %method_number32 = getelementptr inbounds %struct.request_rec, ptr %27, i32 0, i32 16, !dbg !4350
  %28 = load i32, ptr %method_number32, align 4, !dbg !4350, !tbaa !4305
  %cmp33 = icmp eq i32 %28, 8, !dbg !4351
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !4352

if.then34:                                        ; preds = %if.end31
  %29 = load ptr, ptr %r.addr, align 8, !dbg !4353, !tbaa !2416
  %call35 = call i32 @dav_method_propfind(ptr noundef %29), !dbg !4355
  store i32 %call35, ptr %retval, align 4, !dbg !4356
  br label %return, !dbg !4356

if.end36:                                         ; preds = %if.end31
  %30 = load ptr, ptr %r.addr, align 8, !dbg !4357, !tbaa !2416
  %method_number37 = getelementptr inbounds %struct.request_rec, ptr %30, i32 0, i32 16, !dbg !4359
  %31 = load i32, ptr %method_number37, align 4, !dbg !4359, !tbaa !4305
  %cmp38 = icmp eq i32 %31, 9, !dbg !4360
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !4361

if.then39:                                        ; preds = %if.end36
  %32 = load ptr, ptr %r.addr, align 8, !dbg !4362, !tbaa !2416
  %call40 = call i32 @dav_method_proppatch(ptr noundef %32), !dbg !4364
  store i32 %call40, ptr %retval, align 4, !dbg !4365
  br label %return, !dbg !4365

if.end41:                                         ; preds = %if.end36
  %33 = load ptr, ptr %r.addr, align 8, !dbg !4366, !tbaa !2416
  %method_number42 = getelementptr inbounds %struct.request_rec, ptr %33, i32 0, i32 16, !dbg !4368
  %34 = load i32, ptr %method_number42, align 4, !dbg !4368, !tbaa !4305
  %cmp43 = icmp eq i32 %34, 10, !dbg !4369
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !4370

if.then44:                                        ; preds = %if.end41
  %35 = load ptr, ptr %r.addr, align 8, !dbg !4371, !tbaa !2416
  %call45 = call i32 @dav_method_mkcol(ptr noundef %35), !dbg !4373
  store i32 %call45, ptr %retval, align 4, !dbg !4374
  br label %return, !dbg !4374

if.end46:                                         ; preds = %if.end41
  %36 = load ptr, ptr %r.addr, align 8, !dbg !4375, !tbaa !2416
  %method_number47 = getelementptr inbounds %struct.request_rec, ptr %36, i32 0, i32 16, !dbg !4377
  %37 = load i32, ptr %method_number47, align 4, !dbg !4377, !tbaa !4305
  %cmp48 = icmp eq i32 %37, 11, !dbg !4378
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !4379

if.then49:                                        ; preds = %if.end46
  %38 = load ptr, ptr %r.addr, align 8, !dbg !4380, !tbaa !2416
  %call50 = call i32 @dav_method_copymove(ptr noundef %38, i32 noundef 0), !dbg !4382
  store i32 %call50, ptr %retval, align 4, !dbg !4383
  br label %return, !dbg !4383

if.end51:                                         ; preds = %if.end46
  %39 = load ptr, ptr %r.addr, align 8, !dbg !4384, !tbaa !2416
  %method_number52 = getelementptr inbounds %struct.request_rec, ptr %39, i32 0, i32 16, !dbg !4386
  %40 = load i32, ptr %method_number52, align 4, !dbg !4386, !tbaa !4305
  %cmp53 = icmp eq i32 %40, 12, !dbg !4387
  br i1 %cmp53, label %if.then54, label %if.end56, !dbg !4388

if.then54:                                        ; preds = %if.end51
  %41 = load ptr, ptr %r.addr, align 8, !dbg !4389, !tbaa !2416
  %call55 = call i32 @dav_method_copymove(ptr noundef %41, i32 noundef 1), !dbg !4391
  store i32 %call55, ptr %retval, align 4, !dbg !4392
  br label %return, !dbg !4392

if.end56:                                         ; preds = %if.end51
  %42 = load ptr, ptr %r.addr, align 8, !dbg !4393, !tbaa !2416
  %method_number57 = getelementptr inbounds %struct.request_rec, ptr %42, i32 0, i32 16, !dbg !4395
  %43 = load i32, ptr %method_number57, align 4, !dbg !4395, !tbaa !4305
  %cmp58 = icmp eq i32 %43, 13, !dbg !4396
  br i1 %cmp58, label %if.then59, label %if.end61, !dbg !4397

if.then59:                                        ; preds = %if.end56
  %44 = load ptr, ptr %r.addr, align 8, !dbg !4398, !tbaa !2416
  %call60 = call i32 @dav_method_lock(ptr noundef %44), !dbg !4400
  store i32 %call60, ptr %retval, align 4, !dbg !4401
  br label %return, !dbg !4401

if.end61:                                         ; preds = %if.end56
  %45 = load ptr, ptr %r.addr, align 8, !dbg !4402, !tbaa !2416
  %method_number62 = getelementptr inbounds %struct.request_rec, ptr %45, i32 0, i32 16, !dbg !4404
  %46 = load i32, ptr %method_number62, align 4, !dbg !4404, !tbaa !4305
  %cmp63 = icmp eq i32 %46, 14, !dbg !4405
  br i1 %cmp63, label %if.then64, label %if.end66, !dbg !4406

if.then64:                                        ; preds = %if.end61
  %47 = load ptr, ptr %r.addr, align 8, !dbg !4407, !tbaa !2416
  %call65 = call i32 @dav_method_unlock(ptr noundef %47), !dbg !4409
  store i32 %call65, ptr %retval, align 4, !dbg !4410
  br label %return, !dbg !4410

if.end66:                                         ; preds = %if.end61
  %48 = load ptr, ptr %r.addr, align 8, !dbg !4411, !tbaa !2416
  %method_number67 = getelementptr inbounds %struct.request_rec, ptr %48, i32 0, i32 16, !dbg !4413
  %49 = load i32, ptr %method_number67, align 4, !dbg !4413, !tbaa !4305
  %cmp68 = icmp eq i32 %49, 15, !dbg !4414
  br i1 %cmp68, label %if.then69, label %if.end71, !dbg !4415

if.then69:                                        ; preds = %if.end66
  %50 = load ptr, ptr %r.addr, align 8, !dbg !4416, !tbaa !2416
  %call70 = call i32 @dav_method_vsn_control(ptr noundef %50), !dbg !4418
  store i32 %call70, ptr %retval, align 4, !dbg !4419
  br label %return, !dbg !4419

if.end71:                                         ; preds = %if.end66
  %51 = load ptr, ptr %r.addr, align 8, !dbg !4420, !tbaa !2416
  %method_number72 = getelementptr inbounds %struct.request_rec, ptr %51, i32 0, i32 16, !dbg !4422
  %52 = load i32, ptr %method_number72, align 4, !dbg !4422, !tbaa !4305
  %cmp73 = icmp eq i32 %52, 16, !dbg !4423
  br i1 %cmp73, label %if.then74, label %if.end76, !dbg !4424

if.then74:                                        ; preds = %if.end71
  %53 = load ptr, ptr %r.addr, align 8, !dbg !4425, !tbaa !2416
  %call75 = call i32 @dav_method_checkout(ptr noundef %53), !dbg !4427
  store i32 %call75, ptr %retval, align 4, !dbg !4428
  br label %return, !dbg !4428

if.end76:                                         ; preds = %if.end71
  %54 = load ptr, ptr %r.addr, align 8, !dbg !4429, !tbaa !2416
  %method_number77 = getelementptr inbounds %struct.request_rec, ptr %54, i32 0, i32 16, !dbg !4431
  %55 = load i32, ptr %method_number77, align 4, !dbg !4431, !tbaa !4305
  %cmp78 = icmp eq i32 %55, 17, !dbg !4432
  br i1 %cmp78, label %if.then79, label %if.end81, !dbg !4433

if.then79:                                        ; preds = %if.end76
  %56 = load ptr, ptr %r.addr, align 8, !dbg !4434, !tbaa !2416
  %call80 = call i32 @dav_method_uncheckout(ptr noundef %56), !dbg !4436
  store i32 %call80, ptr %retval, align 4, !dbg !4437
  br label %return, !dbg !4437

if.end81:                                         ; preds = %if.end76
  %57 = load ptr, ptr %r.addr, align 8, !dbg !4438, !tbaa !2416
  %method_number82 = getelementptr inbounds %struct.request_rec, ptr %57, i32 0, i32 16, !dbg !4440
  %58 = load i32, ptr %method_number82, align 4, !dbg !4440, !tbaa !4305
  %cmp83 = icmp eq i32 %58, 18, !dbg !4441
  br i1 %cmp83, label %if.then84, label %if.end86, !dbg !4442

if.then84:                                        ; preds = %if.end81
  %59 = load ptr, ptr %r.addr, align 8, !dbg !4443, !tbaa !2416
  %call85 = call i32 @dav_method_checkin(ptr noundef %59), !dbg !4445
  store i32 %call85, ptr %retval, align 4, !dbg !4446
  br label %return, !dbg !4446

if.end86:                                         ; preds = %if.end81
  %60 = load ptr, ptr %r.addr, align 8, !dbg !4447, !tbaa !2416
  %method_number87 = getelementptr inbounds %struct.request_rec, ptr %60, i32 0, i32 16, !dbg !4449
  %61 = load i32, ptr %method_number87, align 4, !dbg !4449, !tbaa !4305
  %cmp88 = icmp eq i32 %61, 19, !dbg !4450
  br i1 %cmp88, label %if.then89, label %if.end91, !dbg !4451

if.then89:                                        ; preds = %if.end86
  %62 = load ptr, ptr %r.addr, align 8, !dbg !4452, !tbaa !2416
  %call90 = call i32 @dav_method_update(ptr noundef %62), !dbg !4454
  store i32 %call90, ptr %retval, align 4, !dbg !4455
  br label %return, !dbg !4455

if.end91:                                         ; preds = %if.end86
  %63 = load ptr, ptr %r.addr, align 8, !dbg !4456, !tbaa !2416
  %method_number92 = getelementptr inbounds %struct.request_rec, ptr %63, i32 0, i32 16, !dbg !4458
  %64 = load i32, ptr %method_number92, align 4, !dbg !4458, !tbaa !4305
  %cmp93 = icmp eq i32 %64, 20, !dbg !4459
  br i1 %cmp93, label %if.then94, label %if.end96, !dbg !4460

if.then94:                                        ; preds = %if.end91
  %65 = load ptr, ptr %r.addr, align 8, !dbg !4461, !tbaa !2416
  %call95 = call i32 @dav_method_label(ptr noundef %65), !dbg !4463
  store i32 %call95, ptr %retval, align 4, !dbg !4464
  br label %return, !dbg !4464

if.end96:                                         ; preds = %if.end91
  %66 = load ptr, ptr %r.addr, align 8, !dbg !4465, !tbaa !2416
  %method_number97 = getelementptr inbounds %struct.request_rec, ptr %66, i32 0, i32 16, !dbg !4467
  %67 = load i32, ptr %method_number97, align 4, !dbg !4467, !tbaa !4305
  %cmp98 = icmp eq i32 %67, 21, !dbg !4468
  br i1 %cmp98, label %if.then99, label %if.end101, !dbg !4469

if.then99:                                        ; preds = %if.end96
  %68 = load ptr, ptr %r.addr, align 8, !dbg !4470, !tbaa !2416
  %call100 = call i32 @dav_method_report(ptr noundef %68), !dbg !4472
  store i32 %call100, ptr %retval, align 4, !dbg !4473
  br label %return, !dbg !4473

if.end101:                                        ; preds = %if.end96
  %69 = load ptr, ptr %r.addr, align 8, !dbg !4474, !tbaa !2416
  %method_number102 = getelementptr inbounds %struct.request_rec, ptr %69, i32 0, i32 16, !dbg !4476
  %70 = load i32, ptr %method_number102, align 4, !dbg !4476, !tbaa !4305
  %cmp103 = icmp eq i32 %70, 22, !dbg !4477
  br i1 %cmp103, label %if.then104, label %if.end106, !dbg !4478

if.then104:                                       ; preds = %if.end101
  %71 = load ptr, ptr %r.addr, align 8, !dbg !4479, !tbaa !2416
  %call105 = call i32 @dav_method_make_workspace(ptr noundef %71), !dbg !4481
  store i32 %call105, ptr %retval, align 4, !dbg !4482
  br label %return, !dbg !4482

if.end106:                                        ; preds = %if.end101
  %72 = load ptr, ptr %r.addr, align 8, !dbg !4483, !tbaa !2416
  %method_number107 = getelementptr inbounds %struct.request_rec, ptr %72, i32 0, i32 16, !dbg !4485
  %73 = load i32, ptr %method_number107, align 4, !dbg !4485, !tbaa !4305
  %cmp108 = icmp eq i32 %73, 23, !dbg !4486
  br i1 %cmp108, label %if.then109, label %if.end111, !dbg !4487

if.then109:                                       ; preds = %if.end106
  %74 = load ptr, ptr %r.addr, align 8, !dbg !4488, !tbaa !2416
  %call110 = call i32 @dav_method_make_activity(ptr noundef %74), !dbg !4490
  store i32 %call110, ptr %retval, align 4, !dbg !4491
  br label %return, !dbg !4491

if.end111:                                        ; preds = %if.end106
  %75 = load ptr, ptr %r.addr, align 8, !dbg !4492, !tbaa !2416
  %method_number112 = getelementptr inbounds %struct.request_rec, ptr %75, i32 0, i32 16, !dbg !4494
  %76 = load i32, ptr %method_number112, align 4, !dbg !4494, !tbaa !4305
  %cmp113 = icmp eq i32 %76, 24, !dbg !4495
  br i1 %cmp113, label %if.then114, label %if.end116, !dbg !4496

if.then114:                                       ; preds = %if.end111
  %77 = load ptr, ptr %r.addr, align 8, !dbg !4497, !tbaa !2416
  %call115 = call i32 @dav_method_baseline_control(ptr noundef %77), !dbg !4499
  store i32 %call115, ptr %retval, align 4, !dbg !4500
  br label %return, !dbg !4500

if.end116:                                        ; preds = %if.end111
  %78 = load ptr, ptr %r.addr, align 8, !dbg !4501, !tbaa !2416
  %method_number117 = getelementptr inbounds %struct.request_rec, ptr %78, i32 0, i32 16, !dbg !4503
  %79 = load i32, ptr %method_number117, align 4, !dbg !4503, !tbaa !4305
  %cmp118 = icmp eq i32 %79, 25, !dbg !4504
  br i1 %cmp118, label %if.then119, label %if.end121, !dbg !4505

if.then119:                                       ; preds = %if.end116
  %80 = load ptr, ptr %r.addr, align 8, !dbg !4506, !tbaa !2416
  %call120 = call i32 @dav_method_merge(ptr noundef %80), !dbg !4508
  store i32 %call120, ptr %retval, align 4, !dbg !4509
  br label %return, !dbg !4509

if.end121:                                        ; preds = %if.end116
  %81 = load ptr, ptr %r.addr, align 8, !dbg !4510, !tbaa !2416
  %method_number122 = getelementptr inbounds %struct.request_rec, ptr %81, i32 0, i32 16, !dbg !4512
  %82 = load i32, ptr %method_number122, align 4, !dbg !4512, !tbaa !4305
  %83 = load i32, ptr @dav_methods, align 4, !dbg !4513, !tbaa !2683
  %cmp123 = icmp eq i32 %82, %83, !dbg !4514
  br i1 %cmp123, label %if.then124, label %if.end126, !dbg !4515

if.then124:                                       ; preds = %if.end121
  %84 = load ptr, ptr %r.addr, align 8, !dbg !4516, !tbaa !2416
  %call125 = call i32 @dav_method_bind(ptr noundef %84), !dbg !4518
  store i32 %call125, ptr %retval, align 4, !dbg !4519
  br label %return, !dbg !4519

if.end126:                                        ; preds = %if.end121
  %85 = load ptr, ptr %r.addr, align 8, !dbg !4520, !tbaa !2416
  %method_number127 = getelementptr inbounds %struct.request_rec, ptr %85, i32 0, i32 16, !dbg !4522
  %86 = load i32, ptr %method_number127, align 4, !dbg !4522, !tbaa !4305
  %87 = load i32, ptr getelementptr inbounds ([2 x i32], ptr @dav_methods, i64 0, i64 1), align 4, !dbg !4523, !tbaa !2683
  %cmp128 = icmp eq i32 %86, %87, !dbg !4524
  br i1 %cmp128, label %if.then129, label %if.end131, !dbg !4525

if.then129:                                       ; preds = %if.end126
  %88 = load ptr, ptr %r.addr, align 8, !dbg !4526, !tbaa !2416
  %call130 = call i32 @dav_method_search(ptr noundef %88), !dbg !4528
  store i32 %call130, ptr %retval, align 4, !dbg !4529
  br label %return, !dbg !4529

if.end131:                                        ; preds = %if.end126
  store i32 -1, ptr %retval, align 4, !dbg !4530
  br label %return, !dbg !4530

return:                                           ; preds = %if.end131, %if.then129, %if.then124, %if.then119, %if.then114, %if.then109, %if.then104, %if.then99, %if.then94, %if.then89, %if.then84, %if.then79, %if.then74, %if.then69, %if.then64, %if.then59, %if.then54, %if.then49, %if.then44, %if.then39, %if.then34, %if.then29, %if.then24, %if.then19, %if.then14, %if.then9, %do.end, %if.then
  %89 = load i32, ptr %retval, align 4, !dbg !4531
  ret i32 %89, !dbg !4531
}

declare !dbg !4532 void @ap_hook_post_config(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_init_handler(ptr noundef %p, ptr noundef %plog, ptr noundef %ptemp, ptr noundef %s) #0 !dbg !4539 {
entry:
  %p.addr = alloca ptr, align 8
  %plog.addr = alloca ptr, align 8
  %ptemp.addr = alloca ptr, align 8
  %s.addr = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %p.addr, metadata !4541, metadata !DIExpression()), !dbg !4545
  store ptr %plog, ptr %plog.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %plog.addr, metadata !4542, metadata !DIExpression()), !dbg !4546
  store ptr %ptemp, ptr %ptemp.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %ptemp.addr, metadata !4543, metadata !DIExpression()), !dbg !4547
  store ptr %s, ptr %s.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %s.addr, metadata !4544, metadata !DIExpression()), !dbg !4548
  %0 = load ptr, ptr %p.addr, align 8, !dbg !4549, !tbaa !2416
  %call = call i32 @ap_method_register(ptr noundef %0, ptr noundef @.str.127), !dbg !4550
  store i32 %call, ptr @dav_methods, align 4, !dbg !4551, !tbaa !2683
  %1 = load ptr, ptr %p.addr, align 8, !dbg !4552, !tbaa !2416
  %call1 = call i32 @ap_method_register(ptr noundef %1, ptr noundef @.str.128), !dbg !4553
  store i32 %call1, ptr getelementptr inbounds ([2 x i32], ptr @dav_methods, i64 0, i64 1), align 4, !dbg !4554, !tbaa !2683
  ret i32 0, !dbg !4555
}

declare !dbg !4556 void @ap_hook_fixups(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_fixups(ptr noundef %r) #0 !dbg !4562 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %conf = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4564, metadata !DIExpression()), !dbg !4566
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !4567
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !4565, metadata !DIExpression()), !dbg !4568
  %0 = load ptr, ptr %r.addr, align 8, !dbg !4569, !tbaa !2416
  %assbackwards = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 7, !dbg !4571
  %1 = load i32, ptr %assbackwards, align 8, !dbg !4571, !tbaa !4572
  %tobool = icmp ne i32 %1, 0, !dbg !4569
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4573

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !4574, !tbaa !2416
  %main = getelementptr inbounds %struct.request_rec, ptr %2, i32 0, i32 5, !dbg !4575
  %3 = load ptr, ptr %main, align 8, !dbg !4575, !tbaa !4576
  %tobool1 = icmp ne ptr %3, null, !dbg !4574
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4577

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, ptr %retval, align 4, !dbg !4578
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4578

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load ptr, ptr %r.addr, align 8, !dbg !4580, !tbaa !2416
  %per_dir_config = getelementptr inbounds %struct.request_rec, ptr %4, i32 0, i32 54, !dbg !4580
  %5 = load ptr, ptr %per_dir_config, align 8, !dbg !4580, !tbaa !2424
  %6 = load i32, ptr getelementptr inbounds (%struct.module_struct, ptr @dav_module, i32 0, i32 2), align 8, !dbg !4580, !tbaa !2431
  %idxprom = sext i32 %6 to i64, !dbg !4580
  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %idxprom, !dbg !4580
  %7 = load ptr, ptr %arrayidx, align 8, !dbg !4580, !tbaa !2416
  store ptr %7, ptr %conf, align 8, !dbg !4581, !tbaa !2416
  %8 = load ptr, ptr %conf, align 8, !dbg !4582, !tbaa !2416
  %provider = getelementptr inbounds %struct.dav_dir_conf, ptr %8, i32 0, i32 1, !dbg !4584
  %9 = load ptr, ptr %provider, align 8, !dbg !4584, !tbaa !2453
  %cmp = icmp eq ptr %9, null, !dbg !4585
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4586

if.then2:                                         ; preds = %if.end
  store i32 -1, ptr %retval, align 4, !dbg !4587
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4587

if.end3:                                          ; preds = %if.end
  %10 = load ptr, ptr %r.addr, align 8, !dbg !4589, !tbaa !2416
  %method_number = getelementptr inbounds %struct.request_rec, ptr %10, i32 0, i32 16, !dbg !4591
  %11 = load i32, ptr %method_number, align 4, !dbg !4591, !tbaa !4305
  %cmp4 = icmp eq i32 %11, 0, !dbg !4592
  br i1 %cmp4, label %if.then5, label %if.end10, !dbg !4593

if.then5:                                         ; preds = %if.end3
  %12 = load ptr, ptr %conf, align 8, !dbg !4594, !tbaa !2416
  %provider6 = getelementptr inbounds %struct.dav_dir_conf, ptr %12, i32 0, i32 1, !dbg !4597
  %13 = load ptr, ptr %provider6, align 8, !dbg !4597, !tbaa !2453
  %repos = getelementptr inbounds %struct.dav_provider, ptr %13, i32 0, i32 0, !dbg !4598
  %14 = load ptr, ptr %repos, align 8, !dbg !4598, !tbaa !3190
  %handle_get = getelementptr inbounds %struct.dav_hooks_repository, ptr %14, i32 0, i32 0, !dbg !4599
  %15 = load i32, ptr %handle_get, align 8, !dbg !4599, !tbaa !4600
  %tobool7 = icmp ne i32 %15, 0, !dbg !4594
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4601

if.then8:                                         ; preds = %if.then5
  store i32 -1, ptr %retval, align 4, !dbg !4602
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4602

if.end9:                                          ; preds = %if.then5
  br label %if.end10, !dbg !4604

if.end10:                                         ; preds = %if.end9, %if.end3
  %16 = load ptr, ptr %r.addr, align 8, !dbg !4605, !tbaa !2416
  %method_number11 = getelementptr inbounds %struct.request_rec, ptr %16, i32 0, i32 16, !dbg !4607
  %17 = load i32, ptr %method_number11, align 4, !dbg !4607, !tbaa !4305
  %cmp12 = icmp ne i32 %17, 2, !dbg !4608
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !4609

if.then13:                                        ; preds = %if.end10
  %18 = load ptr, ptr %r.addr, align 8, !dbg !4610, !tbaa !2416
  %handler = getelementptr inbounds %struct.request_rec, ptr %18, i32 0, i32 40, !dbg !4612
  store ptr @.str.66, ptr %handler, align 8, !dbg !4613, !tbaa !4271
  store i32 0, ptr %retval, align 4, !dbg !4614
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4614

if.end14:                                         ; preds = %if.end10
  store i32 -1, ptr %retval, align 4, !dbg !4615
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4615

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then8, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !4616
  %19 = load i32, ptr %retval, align 4, !dbg !4616
  ret i32 %19, !dbg !4616
}

declare i32 @dav_core_find_liveprop(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare void @dav_core_insert_all_liveprops(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_core_deliver_report(ptr noundef %r, ptr noundef %resource, ptr noundef %doc, ptr noundef %output, ptr noundef %err) #0 !dbg !4617 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource.addr = alloca ptr, align 8
  %doc.addr = alloca ptr, align 8
  %output.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4619, metadata !DIExpression()), !dbg !4625
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !4620, metadata !DIExpression()), !dbg !4626
  store ptr %doc, ptr %doc.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %doc.addr, metadata !4621, metadata !DIExpression()), !dbg !4627
  store ptr %output, ptr %output.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !4622, metadata !DIExpression()), !dbg !4628
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4623, metadata !DIExpression()), !dbg !4629
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !4630
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !4624, metadata !DIExpression()), !dbg !4631
  %0 = load ptr, ptr %r.addr, align 8, !dbg !4632, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !4632
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !4631, !tbaa !2416
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !4633, !tbaa !2416
  %tobool = icmp ne ptr %1, null, !dbg !4633
  br i1 %tobool, label %if.then, label %if.end, !dbg !4635

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %vsn_hooks, align 8, !dbg !4636, !tbaa !2416
  %deliver_report = getelementptr inbounds %struct.dav_hooks_vsn, ptr %2, i32 0, i32 10, !dbg !4638
  %3 = load ptr, ptr %deliver_report, align 8, !dbg !4638, !tbaa !4639
  %4 = load ptr, ptr %r.addr, align 8, !dbg !4641, !tbaa !2416
  %5 = load ptr, ptr %resource.addr, align 8, !dbg !4642, !tbaa !2416
  %6 = load ptr, ptr %doc.addr, align 8, !dbg !4643, !tbaa !2416
  %7 = load ptr, ptr %r.addr, align 8, !dbg !4644, !tbaa !2416
  %output_filters = getelementptr inbounds %struct.request_rec, ptr %7, i32 0, i32 59, !dbg !4645
  %8 = load ptr, ptr %output_filters, align 8, !dbg !4645, !tbaa !2538
  %call1 = call ptr %3(ptr noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %8), !dbg !4646
  %9 = load ptr, ptr %err.addr, align 8, !dbg !4647, !tbaa !2416
  store ptr %call1, ptr %9, align 8, !dbg !4648, !tbaa !2416
  store i32 0, ptr %retval, align 4, !dbg !4649
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4649

if.end:                                           ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !4650
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4650

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !4651
  %10 = load i32, ptr %retval, align 4, !dbg !4651
  ret i32 %10, !dbg !4651
}

; Function Attrs: nounwind uwtable
define internal void @dav_core_gather_reports(ptr noundef %r, ptr noundef %resource, ptr noundef %reports, ptr noundef %err) #0 !dbg !4652 {
entry:
  %r.addr = alloca ptr, align 8
  %resource.addr = alloca ptr, align 8
  %reports.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %rp = alloca ptr, align 8
  %report = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4654, metadata !DIExpression()), !dbg !4665
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !4655, metadata !DIExpression()), !dbg !4666
  store ptr %reports, ptr %reports.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %reports.addr, metadata !4656, metadata !DIExpression()), !dbg !4667
  store ptr %err, ptr %err.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !4657, metadata !DIExpression()), !dbg !4668
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !4669
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !4658, metadata !DIExpression()), !dbg !4670
  %0 = load ptr, ptr %r.addr, align 8, !dbg !4671, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !4671
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !4670, !tbaa !2416
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !4672, !tbaa !2416
  %tobool = icmp ne ptr %1, null, !dbg !4672
  br i1 %tobool, label %if.then, label %if.end, !dbg !4673

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %rp) #10, !dbg !4674
  tail call void @llvm.dbg.declare(metadata ptr %rp, metadata !4659, metadata !DIExpression()), !dbg !4675
  %2 = load ptr, ptr %vsn_hooks, align 8, !dbg !4676, !tbaa !2416
  %avail_reports = getelementptr inbounds %struct.dav_hooks_vsn, ptr %2, i32 0, i32 8, !dbg !4677
  %3 = load ptr, ptr %avail_reports, align 8, !dbg !4677, !tbaa !4678
  %4 = load ptr, ptr %resource.addr, align 8, !dbg !4679, !tbaa !2416
  %call1 = call ptr %3(ptr noundef %4, ptr noundef %rp), !dbg !4680
  %5 = load ptr, ptr %err.addr, align 8, !dbg !4681, !tbaa !2416
  store ptr %call1, ptr %5, align 8, !dbg !4682, !tbaa !2416
  br label %while.cond, !dbg !4683

while.cond:                                       ; preds = %while.body, %if.then
  %6 = load ptr, ptr %rp, align 8, !dbg !4684, !tbaa !2416
  %tobool2 = icmp ne ptr %6, null, !dbg !4684
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !4685

land.rhs:                                         ; preds = %while.cond
  %7 = load ptr, ptr %rp, align 8, !dbg !4686, !tbaa !2416
  %name = getelementptr inbounds %struct.dav_report_elem, ptr %7, i32 0, i32 1, !dbg !4687
  %8 = load ptr, ptr %name, align 8, !dbg !4687, !tbaa !4688
  %tobool3 = icmp ne ptr %8, null, !dbg !4685
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !4689
  br i1 %9, label %while.body, label %while.end, !dbg !4683

while.body:                                       ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %report) #10, !dbg !4690
  tail call void @llvm.dbg.declare(metadata ptr %report, metadata !4662, metadata !DIExpression()), !dbg !4691
  %10 = load ptr, ptr %reports.addr, align 8, !dbg !4692, !tbaa !2416
  %call4 = call ptr @apr_array_push(ptr noundef %10), !dbg !4693
  store ptr %call4, ptr %report, align 8, !dbg !4691, !tbaa !2416
  %11 = load ptr, ptr %rp, align 8, !dbg !4694, !tbaa !2416
  %nmspace = getelementptr inbounds %struct.dav_report_elem, ptr %11, i32 0, i32 0, !dbg !4695
  %12 = load ptr, ptr %nmspace, align 8, !dbg !4695, !tbaa !4696
  %13 = load ptr, ptr %report, align 8, !dbg !4697, !tbaa !2416
  %nmspace5 = getelementptr inbounds %struct.dav_report_elem, ptr %13, i32 0, i32 0, !dbg !4698
  store ptr %12, ptr %nmspace5, align 8, !dbg !4699, !tbaa !4696
  %14 = load ptr, ptr %rp, align 8, !dbg !4700, !tbaa !2416
  %name6 = getelementptr inbounds %struct.dav_report_elem, ptr %14, i32 0, i32 1, !dbg !4701
  %15 = load ptr, ptr %name6, align 8, !dbg !4701, !tbaa !4688
  %16 = load ptr, ptr %report, align 8, !dbg !4702, !tbaa !2416
  %name7 = getelementptr inbounds %struct.dav_report_elem, ptr %16, i32 0, i32 1, !dbg !4703
  store ptr %15, ptr %name7, align 8, !dbg !4704, !tbaa !4688
  %17 = load ptr, ptr %rp, align 8, !dbg !4705, !tbaa !2416
  %incdec.ptr = getelementptr inbounds %struct.dav_report_elem, ptr %17, i32 1, !dbg !4705
  store ptr %incdec.ptr, ptr %rp, align 8, !dbg !4705, !tbaa !2416
  call void @llvm.lifetime.end.p0(i64 8, ptr %report) #10, !dbg !4706
  br label %while.cond, !dbg !4683, !llvm.loop !4707

while.end:                                        ; preds = %land.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %rp) #10, !dbg !4708
  br label %if.end, !dbg !4709

if.end:                                           ; preds = %while.end, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !4710
  ret void, !dbg !4710
}

declare !dbg !4711 void @dav_core_register_uris(ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_error_response(ptr noundef %r, i32 noundef %status, ptr noundef %body) #0 !dbg !4712 {
entry:
  %r.addr = alloca ptr, align 8
  %status.addr = alloca i32, align 4
  %body.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4716, metadata !DIExpression()), !dbg !4719
  store i32 %status, ptr %status.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %status.addr, metadata !4717, metadata !DIExpression()), !dbg !4720
  store ptr %body, ptr %body.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %body.addr, metadata !4718, metadata !DIExpression()), !dbg !4721
  %0 = load i32, ptr %status.addr, align 4, !dbg !4722, !tbaa !2683
  %1 = load ptr, ptr %r.addr, align 8, !dbg !4723, !tbaa !2416
  %status1 = getelementptr inbounds %struct.request_rec, ptr %1, i32 0, i32 15, !dbg !4724
  store i32 %0, ptr %status1, align 8, !dbg !4725, !tbaa !2690
  %2 = load i32, ptr %status.addr, align 4, !dbg !4726, !tbaa !2683
  %call = call ptr @ap_get_status_line(i32 noundef %2), !dbg !4727
  %3 = load ptr, ptr %r.addr, align 8, !dbg !4728, !tbaa !2416
  %status_line = getelementptr inbounds %struct.request_rec, ptr %3, i32 0, i32 14, !dbg !4729
  store ptr %call, ptr %status_line, align 8, !dbg !4730, !tbaa !4731
  %4 = load ptr, ptr %r.addr, align 8, !dbg !4732, !tbaa !2416
  call void @ap_set_content_type(ptr noundef %4, ptr noundef @.str.69), !dbg !4733
  %5 = load ptr, ptr %r.addr, align 8, !dbg !4734, !tbaa !2416
  %6 = load ptr, ptr %r.addr, align 8, !dbg !4735, !tbaa !2416
  %status_line2 = getelementptr inbounds %struct.request_rec, ptr %6, i32 0, i32 14, !dbg !4736
  %7 = load ptr, ptr %status_line2, align 8, !dbg !4736, !tbaa !4731
  %8 = load ptr, ptr %r.addr, align 8, !dbg !4737, !tbaa !2416
  %status_line3 = getelementptr inbounds %struct.request_rec, ptr %8, i32 0, i32 14, !dbg !4738
  %9 = load ptr, ptr %status_line3, align 8, !dbg !4738, !tbaa !4731
  %arrayidx = getelementptr inbounds i8, ptr %9, i64 4, !dbg !4737
  %10 = load ptr, ptr %body.addr, align 8, !dbg !4739, !tbaa !2416
  %11 = load ptr, ptr %r.addr, align 8, !dbg !4740, !tbaa !2416
  %call4 = call ptr @ap_psignature(ptr noundef @.str.74, ptr noundef %11), !dbg !4741
  %call5 = call i32 (ptr, ...) @ap_rvputs(ptr noundef %5, ptr noundef @.str.70, ptr noundef %7, ptr noundef @.str.71, ptr noundef %arrayidx, ptr noundef @.str.72, ptr noundef %10, ptr noundef @.str.73, ptr noundef %call4, ptr noundef @.str.75, ptr noundef null), !dbg !4742
  ret i32 -2, !dbg !4743
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_get(ptr noundef %r) #0 !dbg !4744 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %err = alloca ptr, align 8
  %status = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4746, metadata !DIExpression()), !dbg !4750
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !4751
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !4747, metadata !DIExpression()), !dbg !4752
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !4753
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !4748, metadata !DIExpression()), !dbg !4754
  call void @llvm.lifetime.start.p0(i64 4, ptr %status) #10, !dbg !4755
  tail call void @llvm.dbg.declare(metadata ptr %status, metadata !4749, metadata !DIExpression()), !dbg !4756
  %0 = load ptr, ptr %r.addr, align 8, !dbg !4757, !tbaa !2416
  %call = call ptr @dav_get_resource(ptr noundef %0, i32 noundef 1, i32 noundef 0, ptr noundef %resource), !dbg !4758
  store ptr %call, ptr %err, align 8, !dbg !4759, !tbaa !2416
  %1 = load ptr, ptr %err, align 8, !dbg !4760, !tbaa !2416
  %cmp = icmp ne ptr %1, null, !dbg !4762
  br i1 %cmp, label %if.then, label %if.end, !dbg !4763

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !4764, !tbaa !2416
  %3 = load ptr, ptr %err, align 8, !dbg !4765, !tbaa !2416
  %call1 = call i32 @dav_handle_err(ptr noundef %2, ptr noundef %3, ptr noundef null), !dbg !4766
  store i32 %call1, ptr %retval, align 4, !dbg !4767
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4767

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %r.addr, align 8, !dbg !4768, !tbaa !2416
  %5 = load ptr, ptr %resource, align 8, !dbg !4770, !tbaa !2416
  %call2 = call i32 @dav_run_method_precondition(ptr noundef %4, ptr noundef %5, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !4771
  %cmp3 = icmp ne i32 %call2, -1, !dbg !4772
  br i1 %cmp3, label %land.lhs.true, label %if.end6, !dbg !4773

land.lhs.true:                                    ; preds = %if.end
  %6 = load ptr, ptr %err, align 8, !dbg !4774, !tbaa !2416
  %tobool = icmp ne ptr %6, null, !dbg !4774
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !4775

if.then4:                                         ; preds = %land.lhs.true
  %7 = load ptr, ptr %r.addr, align 8, !dbg !4776, !tbaa !2416
  %8 = load ptr, ptr %err, align 8, !dbg !4778, !tbaa !2416
  %call5 = call i32 @dav_handle_err(ptr noundef %7, ptr noundef %8, ptr noundef null), !dbg !4779
  store i32 %call5, ptr %retval, align 4, !dbg !4780
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4780

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %9 = load ptr, ptr %resource, align 8, !dbg !4781, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %9, i32 0, i32 1, !dbg !4783
  %10 = load i32, ptr %exists, align 4, !dbg !4783, !tbaa !4784
  %tobool7 = icmp ne i32 %10, 0, !dbg !4781
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4785

if.then8:                                         ; preds = %if.end6
  store i32 404, ptr %retval, align 4, !dbg !4786
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4786

if.end9:                                          ; preds = %if.end6
  %11 = load ptr, ptr %resource, align 8, !dbg !4788, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %11, i32 0, i32 8, !dbg !4790
  %12 = load ptr, ptr %hooks, align 8, !dbg !4790, !tbaa !4791
  %set_headers = getelementptr inbounds %struct.dav_hooks_repository, ptr %12, i32 0, i32 9, !dbg !4792
  %13 = load ptr, ptr %set_headers, align 8, !dbg !4792, !tbaa !4793
  %14 = load ptr, ptr %r.addr, align 8, !dbg !4794, !tbaa !2416
  %15 = load ptr, ptr %resource, align 8, !dbg !4795, !tbaa !2416
  %call10 = call ptr %13(ptr noundef %14, ptr noundef %15), !dbg !4796
  store ptr %call10, ptr %err, align 8, !dbg !4797, !tbaa !2416
  %cmp11 = icmp ne ptr %call10, null, !dbg !4798
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !4799

if.then12:                                        ; preds = %if.end9
  %16 = load ptr, ptr %r.addr, align 8, !dbg !4800, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %16, i32 0, i32 0, !dbg !4802
  %17 = load ptr, ptr %pool, align 8, !dbg !4802, !tbaa !2792
  %18 = load ptr, ptr %err, align 8, !dbg !4803, !tbaa !2416
  %status13 = getelementptr inbounds %struct.dav_error, ptr %18, i32 0, i32 0, !dbg !4804
  %19 = load i32, ptr %status13, align 8, !dbg !4804, !tbaa !2871
  %20 = load ptr, ptr %err, align 8, !dbg !4805, !tbaa !2416
  %call14 = call ptr @dav_push_error(ptr noundef %17, i32 noundef %19, i32 noundef 0, ptr noundef @.str.76, ptr noundef %20), !dbg !4806
  store ptr %call14, ptr %err, align 8, !dbg !4807, !tbaa !2416
  %21 = load ptr, ptr %r.addr, align 8, !dbg !4808, !tbaa !2416
  %22 = load ptr, ptr %err, align 8, !dbg !4809, !tbaa !2416
  %call15 = call i32 @dav_handle_err(ptr noundef %21, ptr noundef %22, ptr noundef null), !dbg !4810
  store i32 %call15, ptr %retval, align 4, !dbg !4811
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4811

if.end16:                                         ; preds = %if.end9
  %23 = load ptr, ptr %r.addr, align 8, !dbg !4812, !tbaa !2416
  %call17 = call i32 @ap_meets_conditions(ptr noundef %23), !dbg !4813
  store i32 %call17, ptr %status, align 4, !dbg !4814, !tbaa !2683
  %24 = load i32, ptr %status, align 4, !dbg !4815, !tbaa !2683
  %tobool18 = icmp ne i32 %24, 0, !dbg !4815
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !4817

if.then19:                                        ; preds = %if.end16
  %25 = load i32, ptr %status, align 4, !dbg !4818, !tbaa !2683
  store i32 %25, ptr %retval, align 4, !dbg !4820
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4820

if.end20:                                         ; preds = %if.end16
  %26 = load ptr, ptr %r.addr, align 8, !dbg !4821, !tbaa !2416
  %header_only = getelementptr inbounds %struct.request_rec, ptr %26, i32 0, i32 9, !dbg !4823
  %27 = load i32, ptr %header_only, align 8, !dbg !4823, !tbaa !4824
  %tobool21 = icmp ne i32 %27, 0, !dbg !4821
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !4825

if.then22:                                        ; preds = %if.end20
  store i32 -2, ptr %retval, align 4, !dbg !4826
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4826

if.end23:                                         ; preds = %if.end20
  %28 = load ptr, ptr %resource, align 8, !dbg !4828, !tbaa !2416
  %hooks24 = getelementptr inbounds %struct.dav_resource, ptr %28, i32 0, i32 8, !dbg !4830
  %29 = load ptr, ptr %hooks24, align 8, !dbg !4830, !tbaa !4791
  %deliver = getelementptr inbounds %struct.dav_hooks_repository, ptr %29, i32 0, i32 10, !dbg !4831
  %30 = load ptr, ptr %deliver, align 8, !dbg !4831, !tbaa !4832
  %31 = load ptr, ptr %resource, align 8, !dbg !4833, !tbaa !2416
  %32 = load ptr, ptr %r.addr, align 8, !dbg !4834, !tbaa !2416
  %output_filters = getelementptr inbounds %struct.request_rec, ptr %32, i32 0, i32 59, !dbg !4835
  %33 = load ptr, ptr %output_filters, align 8, !dbg !4835, !tbaa !2538
  %call25 = call ptr %30(ptr noundef %31, ptr noundef %33), !dbg !4836
  store ptr %call25, ptr %err, align 8, !dbg !4837, !tbaa !2416
  %cmp26 = icmp ne ptr %call25, null, !dbg !4838
  br i1 %cmp26, label %if.then27, label %if.end32, !dbg !4839

if.then27:                                        ; preds = %if.end23
  %34 = load ptr, ptr %r.addr, align 8, !dbg !4840, !tbaa !2416
  %pool28 = getelementptr inbounds %struct.request_rec, ptr %34, i32 0, i32 0, !dbg !4842
  %35 = load ptr, ptr %pool28, align 8, !dbg !4842, !tbaa !2792
  %36 = load ptr, ptr %err, align 8, !dbg !4843, !tbaa !2416
  %status29 = getelementptr inbounds %struct.dav_error, ptr %36, i32 0, i32 0, !dbg !4844
  %37 = load i32, ptr %status29, align 8, !dbg !4844, !tbaa !2871
  %38 = load ptr, ptr %err, align 8, !dbg !4845, !tbaa !2416
  %call30 = call ptr @dav_push_error(ptr noundef %35, i32 noundef %37, i32 noundef 0, ptr noundef @.str.77, ptr noundef %38), !dbg !4846
  store ptr %call30, ptr %err, align 8, !dbg !4847, !tbaa !2416
  %39 = load ptr, ptr %r.addr, align 8, !dbg !4848, !tbaa !2416
  %40 = load ptr, ptr %err, align 8, !dbg !4849, !tbaa !2416
  %call31 = call i32 @dav_handle_err(ptr noundef %39, ptr noundef %40, ptr noundef null), !dbg !4850
  store i32 %call31, ptr %retval, align 4, !dbg !4851
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4851

if.end32:                                         ; preds = %if.end23
  store i32 -2, ptr %retval, align 4, !dbg !4852
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4852

cleanup:                                          ; preds = %if.end32, %if.then27, %if.then22, %if.then19, %if.then12, %if.then8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %status) #10, !dbg !4853
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !4853
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !4853
  %41 = load i32, ptr %retval, align 4, !dbg !4853
  ret i32 %41, !dbg !4853
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_put(ptr noundef %r) #0 !dbg !4854 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %resource_state = alloca i32, align 4
  %av_info = alloca %struct.dav_auto_version_info, align 8
  %locks_hooks = alloca ptr, align 8
  %body = alloca ptr, align 8
  %err = alloca ptr, align 8
  %err2 = alloca ptr, align 8
  %mode = alloca i32, align 4
  %stream = alloca ptr, align 8
  %multi_response = alloca ptr, align 8
  %has_range = alloca i32, align 4
  %range_start = alloca i64, align 8
  %range_end = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %status = alloca i32, align 4
  %bb = alloca ptr, align 8
  %b = alloca ptr, align 8
  %seen_eos = alloca i32, align 4
  %rc = alloca i32, align 4
  %http_err = alloca i32, align 4
  %msg = alloca ptr, align 8
  %data = alloca ptr, align 8
  %len = alloca i64, align 8
  %lockdb = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !4856, metadata !DIExpression()), !dbg !4899
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !4900
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !4857, metadata !DIExpression()), !dbg !4901
  call void @llvm.lifetime.start.p0(i64 4, ptr %resource_state) #10, !dbg !4902
  tail call void @llvm.dbg.declare(metadata ptr %resource_state, metadata !4858, metadata !DIExpression()), !dbg !4903
  call void @llvm.lifetime.start.p0(i64 24, ptr %av_info) #10, !dbg !4904
  tail call void @llvm.dbg.declare(metadata ptr %av_info, metadata !4859, metadata !DIExpression()), !dbg !4905
  call void @llvm.lifetime.start.p0(i64 8, ptr %locks_hooks) #10, !dbg !4906
  tail call void @llvm.dbg.declare(metadata ptr %locks_hooks, metadata !4867, metadata !DIExpression()), !dbg !4907
  %0 = load ptr, ptr %r.addr, align 8, !dbg !4908, !tbaa !2416
  %call = call ptr @dav_get_lock_hooks(ptr noundef %0), !dbg !4908
  store ptr %call, ptr %locks_hooks, align 8, !dbg !4907, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %body) #10, !dbg !4909
  tail call void @llvm.dbg.declare(metadata ptr %body, metadata !4868, metadata !DIExpression()), !dbg !4910
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !4911
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !4869, metadata !DIExpression()), !dbg !4912
  call void @llvm.lifetime.start.p0(i64 8, ptr %err2) #10, !dbg !4913
  tail call void @llvm.dbg.declare(metadata ptr %err2, metadata !4870, metadata !DIExpression()), !dbg !4914
  call void @llvm.lifetime.start.p0(i64 4, ptr %mode) #10, !dbg !4915
  tail call void @llvm.dbg.declare(metadata ptr %mode, metadata !4871, metadata !DIExpression()), !dbg !4916
  call void @llvm.lifetime.start.p0(i64 8, ptr %stream) #10, !dbg !4917
  tail call void @llvm.dbg.declare(metadata ptr %stream, metadata !4872, metadata !DIExpression()), !dbg !4918
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_response) #10, !dbg !4919
  tail call void @llvm.dbg.declare(metadata ptr %multi_response, metadata !4873, metadata !DIExpression()), !dbg !4920
  call void @llvm.lifetime.start.p0(i64 4, ptr %has_range) #10, !dbg !4921
  tail call void @llvm.dbg.declare(metadata ptr %has_range, metadata !4874, metadata !DIExpression()), !dbg !4922
  call void @llvm.lifetime.start.p0(i64 8, ptr %range_start) #10, !dbg !4923
  tail call void @llvm.dbg.declare(metadata ptr %range_start, metadata !4875, metadata !DIExpression()), !dbg !4924
  call void @llvm.lifetime.start.p0(i64 8, ptr %range_end) #10, !dbg !4925
  tail call void @llvm.dbg.declare(metadata ptr %range_end, metadata !4876, metadata !DIExpression()), !dbg !4926
  %1 = load ptr, ptr %r.addr, align 8, !dbg !4927, !tbaa !2416
  %call1 = call ptr @dav_get_resource(ptr noundef %1, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !4928
  store ptr %call1, ptr %err, align 8, !dbg !4929, !tbaa !2416
  %2 = load ptr, ptr %err, align 8, !dbg !4930, !tbaa !2416
  %cmp = icmp ne ptr %2, null, !dbg !4932
  br i1 %cmp, label %if.then, label %if.end, !dbg !4933

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %r.addr, align 8, !dbg !4934, !tbaa !2416
  %4 = load ptr, ptr %err, align 8, !dbg !4935, !tbaa !2416
  %call2 = call i32 @dav_handle_err(ptr noundef %3, ptr noundef %4, ptr noundef null), !dbg !4936
  store i32 %call2, ptr %retval, align 4, !dbg !4937
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !4937

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %r.addr, align 8, !dbg !4938, !tbaa !2416
  %6 = load ptr, ptr %resource, align 8, !dbg !4940, !tbaa !2416
  %call3 = call i32 @dav_run_method_precondition(ptr noundef %5, ptr noundef %6, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !4941
  %cmp4 = icmp ne i32 %call3, -1, !dbg !4942
  br i1 %cmp4, label %land.lhs.true, label %if.end7, !dbg !4943

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %err, align 8, !dbg !4944, !tbaa !2416
  %tobool = icmp ne ptr %7, null, !dbg !4944
  br i1 %tobool, label %if.then5, label %if.end7, !dbg !4945

if.then5:                                         ; preds = %land.lhs.true
  %8 = load ptr, ptr %r.addr, align 8, !dbg !4946, !tbaa !2416
  %9 = load ptr, ptr %err, align 8, !dbg !4948, !tbaa !2416
  %call6 = call i32 @dav_handle_err(ptr noundef %8, ptr noundef %9, ptr noundef null), !dbg !4949
  store i32 %call6, ptr %retval, align 4, !dbg !4950
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !4950

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %10 = load ptr, ptr %resource, align 8, !dbg !4951, !tbaa !2416
  %type = getelementptr inbounds %struct.dav_resource, ptr %10, i32 0, i32 0, !dbg !4953
  %11 = load i32, ptr %type, align 8, !dbg !4953, !tbaa !4954
  %cmp8 = icmp ne i32 %11, 1, !dbg !4955
  br i1 %cmp8, label %land.lhs.true9, label %if.end17, !dbg !4956

land.lhs.true9:                                   ; preds = %if.end7
  %12 = load ptr, ptr %resource, align 8, !dbg !4957, !tbaa !2416
  %type10 = getelementptr inbounds %struct.dav_resource, ptr %12, i32 0, i32 0, !dbg !4958
  %13 = load i32, ptr %type10, align 8, !dbg !4958, !tbaa !4954
  %cmp11 = icmp ne i32 %13, 4, !dbg !4959
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !4960

if.then12:                                        ; preds = %land.lhs.true9
  %14 = load ptr, ptr %r.addr, align 8, !dbg !4961, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %14, i32 0, i32 0, !dbg !4963
  %15 = load ptr, ptr %pool, align 8, !dbg !4963, !tbaa !2792
  %16 = load ptr, ptr %r.addr, align 8, !dbg !4964, !tbaa !2416
  %pool13 = getelementptr inbounds %struct.request_rec, ptr %16, i32 0, i32 0, !dbg !4964
  %17 = load ptr, ptr %pool13, align 8, !dbg !4964, !tbaa !2792
  %18 = load ptr, ptr %r.addr, align 8, !dbg !4964, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %18, i32 0, i32 47, !dbg !4964
  %19 = load ptr, ptr %uri, align 8, !dbg !4964, !tbaa !3183
  %call14 = call ptr @ap_escape_html2(ptr noundef %17, ptr noundef %19, i32 noundef 0), !dbg !4964
  %call15 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %15, ptr noundef @.str.78, ptr noundef %call14), !dbg !4965
  store ptr %call15, ptr %body, align 8, !dbg !4966, !tbaa !2416
  %20 = load ptr, ptr %r.addr, align 8, !dbg !4967, !tbaa !2416
  %21 = load ptr, ptr %body, align 8, !dbg !4968, !tbaa !2416
  %call16 = call i32 @dav_error_response(ptr noundef %20, i32 noundef 409, ptr noundef %21), !dbg !4969
  store i32 %call16, ptr %retval, align 4, !dbg !4970
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !4970

if.end17:                                         ; preds = %land.lhs.true9, %if.end7
  %22 = load ptr, ptr %resource, align 8, !dbg !4971, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %22, i32 0, i32 2, !dbg !4973
  %23 = load i32, ptr %collection, align 8, !dbg !4973, !tbaa !4974
  %tobool18 = icmp ne i32 %23, 0, !dbg !4971
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !4975

if.then19:                                        ; preds = %if.end17
  %24 = load ptr, ptr %r.addr, align 8, !dbg !4976, !tbaa !2416
  %call20 = call i32 @dav_error_response(ptr noundef %24, i32 noundef 409, ptr noundef @.str.79), !dbg !4978
  store i32 %call20, ptr %retval, align 4, !dbg !4979
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !4979

if.end21:                                         ; preds = %if.end17
  %25 = load ptr, ptr %r.addr, align 8, !dbg !4980, !tbaa !2416
  %26 = load ptr, ptr %resource, align 8, !dbg !4981, !tbaa !2416
  %call22 = call i32 @dav_get_resource_state(ptr noundef %25, ptr noundef %26), !dbg !4982
  store i32 %call22, ptr %resource_state, align 4, !dbg !4983, !tbaa !2683
  %27 = load ptr, ptr %r.addr, align 8, !dbg !4984, !tbaa !2416
  %28 = load ptr, ptr %resource, align 8, !dbg !4986, !tbaa !2416
  %29 = load i32, ptr %resource_state, align 4, !dbg !4987, !tbaa !2683
  %cmp23 = icmp eq i32 %29, 11, !dbg !4988
  %30 = zext i1 %cmp23 to i64, !dbg !4987
  %cond = select i1 %cmp23, i32 32, i32 16, !dbg !4987
  %call24 = call ptr @dav_validate_request(ptr noundef %27, ptr noundef %28, i32 noundef 0, ptr noundef null, ptr noundef %multi_response, i32 noundef %cond, ptr noundef null), !dbg !4989
  store ptr %call24, ptr %err, align 8, !dbg !4990, !tbaa !2416
  %cmp25 = icmp ne ptr %call24, null, !dbg !4991
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !4992

if.then26:                                        ; preds = %if.end21
  %31 = load ptr, ptr %r.addr, align 8, !dbg !4993, !tbaa !2416
  %32 = load ptr, ptr %err, align 8, !dbg !4995, !tbaa !2416
  %33 = load ptr, ptr %multi_response, align 8, !dbg !4996, !tbaa !2416
  %call27 = call i32 @dav_handle_err(ptr noundef %31, ptr noundef %32, ptr noundef %33), !dbg !4997
  store i32 %call27, ptr %retval, align 4, !dbg !4998
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !4998

if.end28:                                         ; preds = %if.end21
  %34 = load ptr, ptr %r.addr, align 8, !dbg !4999, !tbaa !2416
  %call29 = call i32 @dav_parse_range(ptr noundef %34, ptr noundef %range_start, ptr noundef %range_end), !dbg !5000
  store i32 %call29, ptr %has_range, align 4, !dbg !5001, !tbaa !2683
  %35 = load i32, ptr %has_range, align 4, !dbg !5002, !tbaa !2683
  %cmp30 = icmp slt i32 %35, 0, !dbg !5004
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !5005

if.then31:                                        ; preds = %if.end28
  %36 = load ptr, ptr %r.addr, align 8, !dbg !5006, !tbaa !2416
  %pool32 = getelementptr inbounds %struct.request_rec, ptr %36, i32 0, i32 0, !dbg !5008
  %37 = load ptr, ptr %pool32, align 8, !dbg !5008, !tbaa !2792
  %38 = load ptr, ptr %r.addr, align 8, !dbg !5009, !tbaa !2416
  %pool33 = getelementptr inbounds %struct.request_rec, ptr %38, i32 0, i32 0, !dbg !5009
  %39 = load ptr, ptr %pool33, align 8, !dbg !5009, !tbaa !2792
  %40 = load ptr, ptr %r.addr, align 8, !dbg !5009, !tbaa !2416
  %uri34 = getelementptr inbounds %struct.request_rec, ptr %40, i32 0, i32 47, !dbg !5009
  %41 = load ptr, ptr %uri34, align 8, !dbg !5009, !tbaa !3183
  %call35 = call ptr @ap_escape_html2(ptr noundef %39, ptr noundef %41, i32 noundef 0), !dbg !5009
  %call36 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %37, ptr noundef @.str.80, ptr noundef %call35), !dbg !5010
  store ptr %call36, ptr %body, align 8, !dbg !5011, !tbaa !2416
  %42 = load ptr, ptr %r.addr, align 8, !dbg !5012, !tbaa !2416
  %43 = load ptr, ptr %body, align 8, !dbg !5013, !tbaa !2416
  %call37 = call i32 @dav_error_response(ptr noundef %42, i32 noundef 400, ptr noundef %43), !dbg !5014
  store i32 %call37, ptr %retval, align 4, !dbg !5015
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !5015

if.else:                                          ; preds = %if.end28
  %44 = load i32, ptr %has_range, align 4, !dbg !5016, !tbaa !2683
  %tobool38 = icmp ne i32 %44, 0, !dbg !5016
  br i1 %tobool38, label %if.then39, label %if.else40, !dbg !5018

if.then39:                                        ; preds = %if.else
  store i32 1, ptr %mode, align 4, !dbg !5019, !tbaa !2961
  br label %if.end41, !dbg !5021

if.else40:                                        ; preds = %if.else
  store i32 0, ptr %mode, align 4, !dbg !5022, !tbaa !2961
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then39
  br label %if.end42

if.end42:                                         ; preds = %if.end41
  %45 = load ptr, ptr %r.addr, align 8, !dbg !5024, !tbaa !2416
  %46 = load ptr, ptr %resource, align 8, !dbg !5026, !tbaa !2416
  %call43 = call ptr @dav_auto_checkout(ptr noundef %45, ptr noundef %46, i32 noundef 0, ptr noundef %av_info), !dbg !5027
  store ptr %call43, ptr %err, align 8, !dbg !5028, !tbaa !2416
  %cmp44 = icmp ne ptr %call43, null, !dbg !5029
  br i1 %cmp44, label %if.then45, label %if.end47, !dbg !5030

if.then45:                                        ; preds = %if.end42
  %47 = load ptr, ptr %r.addr, align 8, !dbg !5031, !tbaa !2416
  %48 = load ptr, ptr %err, align 8, !dbg !5033, !tbaa !2416
  %call46 = call i32 @dav_handle_err(ptr noundef %47, ptr noundef %48, ptr noundef null), !dbg !5034
  store i32 %call46, ptr %retval, align 4, !dbg !5035
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !5035

if.end47:                                         ; preds = %if.end42
  %49 = load ptr, ptr %resource, align 8, !dbg !5036, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %49, i32 0, i32 8, !dbg !5037
  %50 = load ptr, ptr %hooks, align 8, !dbg !5037, !tbaa !4791
  %open_stream = getelementptr inbounds %struct.dav_hooks_repository, ptr %50, i32 0, i32 5, !dbg !5038
  %51 = load ptr, ptr %open_stream, align 8, !dbg !5038, !tbaa !5039
  %52 = load ptr, ptr %resource, align 8, !dbg !5040, !tbaa !2416
  %53 = load i32, ptr %mode, align 4, !dbg !5041, !tbaa !2961
  %call48 = call ptr %51(ptr noundef %52, i32 noundef %53, ptr noundef %stream), !dbg !5042
  store ptr %call48, ptr %err, align 8, !dbg !5043, !tbaa !2416
  %cmp49 = icmp ne ptr %call48, null, !dbg !5044
  br i1 %cmp49, label %if.then50, label %if.end66, !dbg !5045

if.then50:                                        ; preds = %if.end47
  call void @llvm.lifetime.start.p0(i64 4, ptr %status) #10, !dbg !5046
  tail call void @llvm.dbg.declare(metadata ptr %status, metadata !4877, metadata !DIExpression()), !dbg !5047
  %54 = load ptr, ptr %err, align 8, !dbg !5048, !tbaa !2416
  %status51 = getelementptr inbounds %struct.dav_error, ptr %54, i32 0, i32 0, !dbg !5049
  %55 = load i32, ptr %status51, align 8, !dbg !5049, !tbaa !2871
  %tobool52 = icmp ne i32 %55, 0, !dbg !5048
  br i1 %tobool52, label %cond.true, label %cond.false, !dbg !5048

cond.true:                                        ; preds = %if.then50
  %56 = load ptr, ptr %err, align 8, !dbg !5050, !tbaa !2416
  %status53 = getelementptr inbounds %struct.dav_error, ptr %56, i32 0, i32 0, !dbg !5051
  %57 = load i32, ptr %status53, align 8, !dbg !5051, !tbaa !2871
  br label %cond.end, !dbg !5048

cond.false:                                       ; preds = %if.then50
  br label %cond.end, !dbg !5048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond54 = phi i32 [ %57, %cond.true ], [ 403, %cond.false ], !dbg !5048
  store i32 %cond54, ptr %status, align 4, !dbg !5047, !tbaa !2683
  %58 = load i32, ptr %status, align 4, !dbg !5052, !tbaa !2683
  %cmp55 = icmp sgt i32 %58, 299, !dbg !5054
  br i1 %cmp55, label %if.then56, label %if.else64, !dbg !5055

if.then56:                                        ; preds = %cond.end
  %59 = load ptr, ptr %r.addr, align 8, !dbg !5056, !tbaa !2416
  %pool57 = getelementptr inbounds %struct.request_rec, ptr %59, i32 0, i32 0, !dbg !5058
  %60 = load ptr, ptr %pool57, align 8, !dbg !5058, !tbaa !2792
  %61 = load i32, ptr %status, align 4, !dbg !5059, !tbaa !2683
  %62 = load ptr, ptr %r.addr, align 8, !dbg !5060, !tbaa !2416
  %pool58 = getelementptr inbounds %struct.request_rec, ptr %62, i32 0, i32 0, !dbg !5061
  %63 = load ptr, ptr %pool58, align 8, !dbg !5061, !tbaa !2792
  %64 = load ptr, ptr %r.addr, align 8, !dbg !5062, !tbaa !2416
  %pool59 = getelementptr inbounds %struct.request_rec, ptr %64, i32 0, i32 0, !dbg !5062
  %65 = load ptr, ptr %pool59, align 8, !dbg !5062, !tbaa !2792
  %66 = load ptr, ptr %r.addr, align 8, !dbg !5062, !tbaa !2416
  %uri60 = getelementptr inbounds %struct.request_rec, ptr %66, i32 0, i32 47, !dbg !5062
  %67 = load ptr, ptr %uri60, align 8, !dbg !5062, !tbaa !3183
  %call61 = call ptr @ap_escape_html2(ptr noundef %65, ptr noundef %67, i32 noundef 0), !dbg !5062
  %call62 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %63, ptr noundef @.str.81, ptr noundef %call61), !dbg !5063
  %68 = load ptr, ptr %err, align 8, !dbg !5064, !tbaa !2416
  %call63 = call ptr @dav_push_error(ptr noundef %60, i32 noundef %61, i32 noundef 0, ptr noundef %call62, ptr noundef %68), !dbg !5065
  store ptr %call63, ptr %err, align 8, !dbg !5066, !tbaa !2416
  br label %if.end65, !dbg !5067

if.else64:                                        ; preds = %cond.end
  store ptr null, ptr %err, align 8, !dbg !5068, !tbaa !2416
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then56
  call void @llvm.lifetime.end.p0(i64 4, ptr %status) #10, !dbg !5070
  br label %if.end66, !dbg !5071

if.end66:                                         ; preds = %if.end65, %if.end47
  %69 = load ptr, ptr %err, align 8, !dbg !5072, !tbaa !2416
  %cmp67 = icmp eq ptr %69, null, !dbg !5074
  br i1 %cmp67, label %land.lhs.true68, label %if.end73, !dbg !5075

land.lhs.true68:                                  ; preds = %if.end66
  %70 = load i32, ptr %has_range, align 4, !dbg !5076, !tbaa !2683
  %tobool69 = icmp ne i32 %70, 0, !dbg !5076
  br i1 %tobool69, label %if.then70, label %if.end73, !dbg !5077

if.then70:                                        ; preds = %land.lhs.true68
  %71 = load ptr, ptr %resource, align 8, !dbg !5078, !tbaa !2416
  %hooks71 = getelementptr inbounds %struct.dav_resource, ptr %71, i32 0, i32 8, !dbg !5080
  %72 = load ptr, ptr %hooks71, align 8, !dbg !5080, !tbaa !4791
  %seek_stream = getelementptr inbounds %struct.dav_hooks_repository, ptr %72, i32 0, i32 8, !dbg !5081
  %73 = load ptr, ptr %seek_stream, align 8, !dbg !5081, !tbaa !5082
  %74 = load ptr, ptr %stream, align 8, !dbg !5083, !tbaa !2416
  %75 = load i64, ptr %range_start, align 8, !dbg !5084, !tbaa !3569
  %call72 = call ptr %73(ptr noundef %74, i64 noundef %75), !dbg !5085
  store ptr %call72, ptr %err, align 8, !dbg !5086, !tbaa !2416
  br label %if.end73, !dbg !5087

if.end73:                                         ; preds = %if.then70, %land.lhs.true68, %if.end66
  %76 = load ptr, ptr %err, align 8, !dbg !5088, !tbaa !2416
  %cmp74 = icmp eq ptr %76, null, !dbg !5089
  br i1 %cmp74, label %if.then75, label %if.end130, !dbg !5090

if.then75:                                        ; preds = %if.end73
  call void @llvm.lifetime.start.p0(i64 8, ptr %bb) #10, !dbg !5091
  tail call void @llvm.dbg.declare(metadata ptr %bb, metadata !4880, metadata !DIExpression()), !dbg !5092
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #10, !dbg !5093
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !4883, metadata !DIExpression()), !dbg !5094
  call void @llvm.lifetime.start.p0(i64 4, ptr %seen_eos) #10, !dbg !5095
  tail call void @llvm.dbg.declare(metadata ptr %seen_eos, metadata !4884, metadata !DIExpression()), !dbg !5096
  store i32 0, ptr %seen_eos, align 4, !dbg !5096, !tbaa !2683
  %77 = load ptr, ptr %r.addr, align 8, !dbg !5097, !tbaa !2416
  %pool76 = getelementptr inbounds %struct.request_rec, ptr %77, i32 0, i32 0, !dbg !5098
  %78 = load ptr, ptr %pool76, align 8, !dbg !5098, !tbaa !2792
  %79 = load ptr, ptr %r.addr, align 8, !dbg !5099, !tbaa !2416
  %connection = getelementptr inbounds %struct.request_rec, ptr %79, i32 0, i32 1, !dbg !5100
  %80 = load ptr, ptr %connection, align 8, !dbg !5100, !tbaa !2746
  %bucket_alloc = getelementptr inbounds %struct.conn_rec, ptr %80, i32 0, i32 16, !dbg !5101
  %81 = load ptr, ptr %bucket_alloc, align 8, !dbg !5101, !tbaa !2748
  %call77 = call ptr @apr_brigade_create(ptr noundef %78, ptr noundef %81), !dbg !5102
  store ptr %call77, ptr %bb, align 8, !dbg !5103, !tbaa !2416
  br label %do.body, !dbg !5104

do.body:                                          ; preds = %do.cond, %if.then75
  call void @llvm.lifetime.start.p0(i64 4, ptr %rc) #10, !dbg !5105
  tail call void @llvm.dbg.declare(metadata ptr %rc, metadata !4885, metadata !DIExpression()), !dbg !5106
  %82 = load ptr, ptr %r.addr, align 8, !dbg !5107, !tbaa !2416
  %input_filters = getelementptr inbounds %struct.request_rec, ptr %82, i32 0, i32 60, !dbg !5108
  %83 = load ptr, ptr %input_filters, align 8, !dbg !5108, !tbaa !5109
  %84 = load ptr, ptr %bb, align 8, !dbg !5110, !tbaa !2416
  %call78 = call i32 @ap_get_brigade(ptr noundef %83, ptr noundef %84, i32 noundef 0, i32 noundef 0, i64 noundef 2048), !dbg !5111
  store i32 %call78, ptr %rc, align 4, !dbg !5112, !tbaa !2683
  %85 = load i32, ptr %rc, align 4, !dbg !5113, !tbaa !2683
  %cmp79 = icmp ne i32 %85, 0, !dbg !5114
  br i1 %cmp79, label %if.then80, label %if.end89, !dbg !5115

if.then80:                                        ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %http_err) #10, !dbg !5116
  tail call void @llvm.dbg.declare(metadata ptr %http_err, metadata !4887, metadata !DIExpression()), !dbg !5117
  call void @llvm.lifetime.start.p0(i64 8, ptr %msg) #10, !dbg !5118
  tail call void @llvm.dbg.declare(metadata ptr %msg, metadata !4890, metadata !DIExpression()), !dbg !5119
  %86 = load ptr, ptr %r.addr, align 8, !dbg !5120, !tbaa !2416
  %pool81 = getelementptr inbounds %struct.request_rec, ptr %86, i32 0, i32 0, !dbg !5120
  %87 = load ptr, ptr %pool81, align 8, !dbg !5120, !tbaa !2792
  %88 = load ptr, ptr %r.addr, align 8, !dbg !5120, !tbaa !2416
  %uri82 = getelementptr inbounds %struct.request_rec, ptr %88, i32 0, i32 47, !dbg !5120
  %89 = load ptr, ptr %uri82, align 8, !dbg !5120, !tbaa !3183
  %call83 = call ptr @ap_escape_html2(ptr noundef %87, ptr noundef %89, i32 noundef 0), !dbg !5120
  store ptr %call83, ptr %msg, align 8, !dbg !5119, !tbaa !2416
  %90 = load i32, ptr %rc, align 4, !dbg !5121, !tbaa !2683
  %call84 = call i32 @ap_map_http_request_error(i32 noundef %90, i32 noundef 400), !dbg !5122
  store i32 %call84, ptr %http_err, align 4, !dbg !5123, !tbaa !2683
  %91 = load ptr, ptr %r.addr, align 8, !dbg !5124, !tbaa !2416
  %pool85 = getelementptr inbounds %struct.request_rec, ptr %91, i32 0, i32 0, !dbg !5125
  %92 = load ptr, ptr %pool85, align 8, !dbg !5125, !tbaa !2792
  %93 = load ptr, ptr %msg, align 8, !dbg !5126, !tbaa !2416
  %call86 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %92, ptr noundef @.str.82, ptr noundef %93), !dbg !5127
  store ptr %call86, ptr %msg, align 8, !dbg !5128, !tbaa !2416
  %94 = load ptr, ptr %r.addr, align 8, !dbg !5129, !tbaa !2416
  %pool87 = getelementptr inbounds %struct.request_rec, ptr %94, i32 0, i32 0, !dbg !5130
  %95 = load ptr, ptr %pool87, align 8, !dbg !5130, !tbaa !2792
  %96 = load i32, ptr %http_err, align 4, !dbg !5131, !tbaa !2683
  %97 = load i32, ptr %rc, align 4, !dbg !5132, !tbaa !2683
  %98 = load ptr, ptr %msg, align 8, !dbg !5133, !tbaa !2416
  %call88 = call ptr @dav_new_error(ptr noundef %95, i32 noundef %96, i32 noundef 0, i32 noundef %97, ptr noundef %98), !dbg !5134
  store ptr %call88, ptr %err, align 8, !dbg !5135, !tbaa !2416
  store i32 2, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %msg) #10, !dbg !5136
  call void @llvm.lifetime.end.p0(i64 4, ptr %http_err) #10, !dbg !5136
  br label %cleanup121

if.end89:                                         ; preds = %do.body
  %99 = load ptr, ptr %bb, align 8, !dbg !5137, !tbaa !2416
  %list = getelementptr inbounds %struct.apr_bucket_brigade, ptr %99, i32 0, i32 1, !dbg !5137
  %next = getelementptr inbounds %struct.apr_bucket_list, ptr %list, i32 0, i32 0, !dbg !5137
  %100 = load volatile ptr, ptr %next, align 8, !dbg !5137, !tbaa !5138
  store ptr %100, ptr %b, align 8, !dbg !5139, !tbaa !2416
  br label %for.cond, !dbg !5140

for.cond:                                         ; preds = %for.inc, %if.end89
  %101 = load ptr, ptr %b, align 8, !dbg !5141, !tbaa !2416
  %102 = load ptr, ptr %bb, align 8, !dbg !5142, !tbaa !2416
  %list90 = getelementptr inbounds %struct.apr_bucket_brigade, ptr %102, i32 0, i32 1, !dbg !5142
  %next91 = getelementptr inbounds %struct.apr_bucket_list, ptr %list90, i32 0, i32 0, !dbg !5142
  %add.ptr = getelementptr inbounds i8, ptr %next91, i64 0, !dbg !5142
  %cmp92 = icmp ne ptr %101, %add.ptr, !dbg !5143
  br i1 %cmp92, label %for.body, label %for.end, !dbg !5144

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %data) #10, !dbg !5145
  tail call void @llvm.dbg.declare(metadata ptr %data, metadata !4891, metadata !DIExpression()), !dbg !5146
  call void @llvm.lifetime.start.p0(i64 8, ptr %len) #10, !dbg !5147
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !4895, metadata !DIExpression()), !dbg !5148
  %103 = load ptr, ptr %b, align 8, !dbg !5149, !tbaa !2416
  %type93 = getelementptr inbounds %struct.apr_bucket, ptr %103, i32 0, i32 1, !dbg !5149
  %104 = load ptr, ptr %type93, align 8, !dbg !5149, !tbaa !5151
  %cmp94 = icmp eq ptr %104, @apr_bucket_type_eos, !dbg !5149
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !5152

if.then95:                                        ; preds = %for.body
  store i32 1, ptr %seen_eos, align 4, !dbg !5153, !tbaa !2683
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5155

if.end96:                                         ; preds = %for.body
  %105 = load ptr, ptr %b, align 8, !dbg !5156, !tbaa !2416
  %type97 = getelementptr inbounds %struct.apr_bucket, ptr %105, i32 0, i32 1, !dbg !5156
  %106 = load ptr, ptr %type97, align 8, !dbg !5156, !tbaa !5151
  %is_metadata = getelementptr inbounds %struct.apr_bucket_type_t, ptr %106, i32 0, i32 2, !dbg !5156
  %107 = load i32, ptr %is_metadata, align 4, !dbg !5156, !tbaa !5158
  %tobool98 = icmp ne i32 %107, 0, !dbg !5156
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !5160

if.then99:                                        ; preds = %if.end96
  store i32 6, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5161

if.end100:                                        ; preds = %if.end96
  %108 = load ptr, ptr %err, align 8, !dbg !5163, !tbaa !2416
  %cmp101 = icmp eq ptr %108, null, !dbg !5165
  br i1 %cmp101, label %if.then102, label %if.end117, !dbg !5166

if.then102:                                       ; preds = %if.end100
  %109 = load ptr, ptr %b, align 8, !dbg !5167, !tbaa !2416
  %type103 = getelementptr inbounds %struct.apr_bucket, ptr %109, i32 0, i32 1, !dbg !5167
  %110 = load ptr, ptr %type103, align 8, !dbg !5167, !tbaa !5151
  %read = getelementptr inbounds %struct.apr_bucket_type_t, ptr %110, i32 0, i32 4, !dbg !5167
  %111 = load ptr, ptr %read, align 8, !dbg !5167, !tbaa !5169
  %112 = load ptr, ptr %b, align 8, !dbg !5167, !tbaa !2416
  %call104 = call i32 %111(ptr noundef %112, ptr noundef %data, ptr noundef %len, i32 noundef 0), !dbg !5167
  store i32 %call104, ptr %rc, align 4, !dbg !5170, !tbaa !2683
  %113 = load i32, ptr %rc, align 4, !dbg !5171, !tbaa !2683
  %cmp105 = icmp ne i32 %113, 0, !dbg !5173
  br i1 %cmp105, label %if.then106, label %if.end114, !dbg !5174

if.then106:                                       ; preds = %if.then102
  %114 = load ptr, ptr %r.addr, align 8, !dbg !5175, !tbaa !2416
  %pool107 = getelementptr inbounds %struct.request_rec, ptr %114, i32 0, i32 0, !dbg !5177
  %115 = load ptr, ptr %pool107, align 8, !dbg !5177, !tbaa !2792
  %116 = load i32, ptr %rc, align 4, !dbg !5178, !tbaa !2683
  %117 = load ptr, ptr %r.addr, align 8, !dbg !5179, !tbaa !2416
  %pool108 = getelementptr inbounds %struct.request_rec, ptr %117, i32 0, i32 0, !dbg !5180
  %118 = load ptr, ptr %pool108, align 8, !dbg !5180, !tbaa !2792
  %119 = load ptr, ptr %r.addr, align 8, !dbg !5181, !tbaa !2416
  %pool109 = getelementptr inbounds %struct.request_rec, ptr %119, i32 0, i32 0, !dbg !5181
  %120 = load ptr, ptr %pool109, align 8, !dbg !5181, !tbaa !2792
  %121 = load ptr, ptr %r.addr, align 8, !dbg !5181, !tbaa !2416
  %uri110 = getelementptr inbounds %struct.request_rec, ptr %121, i32 0, i32 47, !dbg !5181
  %122 = load ptr, ptr %uri110, align 8, !dbg !5181, !tbaa !3183
  %call111 = call ptr @ap_escape_html2(ptr noundef %120, ptr noundef %122, i32 noundef 0), !dbg !5181
  %call112 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %118, ptr noundef @.str.83, ptr noundef %call111), !dbg !5182
  %call113 = call ptr @dav_new_error(ptr noundef %115, i32 noundef 400, i32 noundef 0, i32 noundef %116, ptr noundef %call112), !dbg !5183
  store ptr %call113, ptr %err, align 8, !dbg !5184, !tbaa !2416
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5185

if.end114:                                        ; preds = %if.then102
  %123 = load ptr, ptr %resource, align 8, !dbg !5186, !tbaa !2416
  %hooks115 = getelementptr inbounds %struct.dav_resource, ptr %123, i32 0, i32 8, !dbg !5187
  %124 = load ptr, ptr %hooks115, align 8, !dbg !5187, !tbaa !4791
  %write_stream = getelementptr inbounds %struct.dav_hooks_repository, ptr %124, i32 0, i32 7, !dbg !5188
  %125 = load ptr, ptr %write_stream, align 8, !dbg !5188, !tbaa !5189
  %126 = load ptr, ptr %stream, align 8, !dbg !5190, !tbaa !2416
  %127 = load ptr, ptr %data, align 8, !dbg !5191, !tbaa !2416
  %128 = load i64, ptr %len, align 8, !dbg !5192, !tbaa !3569
  %call116 = call ptr %125(ptr noundef %126, ptr noundef %127, i64 noundef %128), !dbg !5193
  store ptr %call116, ptr %err, align 8, !dbg !5194, !tbaa !2416
  br label %if.end117, !dbg !5195

if.end117:                                        ; preds = %if.end114, %if.end100
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5196
  br label %cleanup, !dbg !5196

cleanup:                                          ; preds = %if.end117, %if.then106, %if.then99, %if.then95
  call void @llvm.lifetime.end.p0(i64 8, ptr %len) #10, !dbg !5196
  call void @llvm.lifetime.end.p0(i64 8, ptr %data) #10, !dbg !5196
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 4, label %for.end
    i32 6, label %for.inc
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !5197

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %129 = load ptr, ptr %b, align 8, !dbg !5198, !tbaa !2416
  %link = getelementptr inbounds %struct.apr_bucket, ptr %129, i32 0, i32 0, !dbg !5198
  %next119 = getelementptr inbounds %struct.anon, ptr %link, i32 0, i32 0, !dbg !5198
  %130 = load volatile ptr, ptr %next119, align 8, !dbg !5198, !tbaa !2756
  store ptr %130, ptr %b, align 8, !dbg !5199, !tbaa !2416
  br label %for.cond, !dbg !5200, !llvm.loop !5201

for.end:                                          ; preds = %cleanup, %for.cond
  %131 = load ptr, ptr %bb, align 8, !dbg !5203, !tbaa !2416
  %call120 = call i32 @apr_brigade_cleanup(ptr noundef %131), !dbg !5204
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5205
  br label %cleanup121, !dbg !5205

cleanup121:                                       ; preds = %for.end, %if.then80
  call void @llvm.lifetime.end.p0(i64 4, ptr %rc) #10, !dbg !5205
  %cleanup.dest122 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest122, label %unreachable [
    i32 0, label %cleanup.cont123
    i32 2, label %do.end
  ]

cleanup.cont123:                                  ; preds = %cleanup121
  br label %do.cond, !dbg !5206

do.cond:                                          ; preds = %cleanup.cont123
  %132 = load i32, ptr %seen_eos, align 4, !dbg !5207, !tbaa !2683
  %tobool124 = icmp ne i32 %132, 0, !dbg !5208
  %lnot = xor i1 %tobool124, true, !dbg !5208
  br i1 %lnot, label %do.body, label %do.end, !dbg !5206, !llvm.loop !5209

do.end:                                           ; preds = %do.cond, %cleanup121
  %133 = load ptr, ptr %bb, align 8, !dbg !5211, !tbaa !2416
  %call125 = call i32 @apr_brigade_destroy(ptr noundef %133), !dbg !5212
  %134 = load ptr, ptr %resource, align 8, !dbg !5213, !tbaa !2416
  %hooks126 = getelementptr inbounds %struct.dav_resource, ptr %134, i32 0, i32 8, !dbg !5214
  %135 = load ptr, ptr %hooks126, align 8, !dbg !5214, !tbaa !4791
  %close_stream = getelementptr inbounds %struct.dav_hooks_repository, ptr %135, i32 0, i32 6, !dbg !5215
  %136 = load ptr, ptr %close_stream, align 8, !dbg !5215, !tbaa !5216
  %137 = load ptr, ptr %stream, align 8, !dbg !5217, !tbaa !2416
  %138 = load ptr, ptr %err, align 8, !dbg !5218, !tbaa !2416
  %cmp127 = icmp eq ptr %138, null, !dbg !5219
  %conv = zext i1 %cmp127 to i32, !dbg !5219
  %call128 = call ptr %136(ptr noundef %137, i32 noundef %conv), !dbg !5220
  store ptr %call128, ptr %err2, align 8, !dbg !5221, !tbaa !2416
  %139 = load ptr, ptr %err, align 8, !dbg !5222, !tbaa !2416
  %140 = load ptr, ptr %err2, align 8, !dbg !5223, !tbaa !2416
  %call129 = call ptr @dav_join_error(ptr noundef %139, ptr noundef %140), !dbg !5224
  store ptr %call129, ptr %err, align 8, !dbg !5225, !tbaa !2416
  call void @llvm.lifetime.end.p0(i64 4, ptr %seen_eos) #10, !dbg !5226
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #10, !dbg !5226
  call void @llvm.lifetime.end.p0(i64 8, ptr %bb) #10, !dbg !5226
  br label %if.end130, !dbg !5227

if.end130:                                        ; preds = %do.end, %if.end73
  %141 = load ptr, ptr %err, align 8, !dbg !5228, !tbaa !2416
  %cmp131 = icmp eq ptr %141, null, !dbg !5230
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !5231

if.then133:                                       ; preds = %if.end130
  %142 = load ptr, ptr %resource, align 8, !dbg !5232, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %142, i32 0, i32 1, !dbg !5234
  store i32 1, ptr %exists, align 4, !dbg !5235, !tbaa !4784
  br label %if.end134, !dbg !5236

if.end134:                                        ; preds = %if.then133, %if.end130
  %143 = load ptr, ptr %r.addr, align 8, !dbg !5237, !tbaa !2416
  %144 = load ptr, ptr %resource, align 8, !dbg !5238, !tbaa !2416
  %145 = load ptr, ptr %err, align 8, !dbg !5239, !tbaa !2416
  %cmp135 = icmp ne ptr %145, null, !dbg !5240
  %conv136 = zext i1 %cmp135 to i32, !dbg !5240
  %call137 = call ptr @dav_auto_checkin(ptr noundef %143, ptr noundef %144, i32 noundef %conv136, i32 noundef 0, ptr noundef %av_info), !dbg !5241
  store ptr %call137, ptr %err2, align 8, !dbg !5242, !tbaa !2416
  %146 = load ptr, ptr %err, align 8, !dbg !5243, !tbaa !2416
  %cmp138 = icmp ne ptr %146, null, !dbg !5245
  br i1 %cmp138, label %if.then140, label %if.end143, !dbg !5246

if.then140:                                       ; preds = %if.end134
  %147 = load ptr, ptr %err, align 8, !dbg !5247, !tbaa !2416
  %148 = load ptr, ptr %err2, align 8, !dbg !5249, !tbaa !2416
  %call141 = call ptr @dav_join_error(ptr noundef %147, ptr noundef %148), !dbg !5250
  store ptr %call141, ptr %err, align 8, !dbg !5251, !tbaa !2416
  %149 = load ptr, ptr %r.addr, align 8, !dbg !5252, !tbaa !2416
  %150 = load ptr, ptr %err, align 8, !dbg !5253, !tbaa !2416
  %call142 = call i32 @dav_handle_err(ptr noundef %149, ptr noundef %150, ptr noundef null), !dbg !5254
  store i32 %call142, ptr %retval, align 4, !dbg !5255
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !5255

if.end143:                                        ; preds = %if.end134
  %151 = load ptr, ptr %err2, align 8, !dbg !5256, !tbaa !2416
  %cmp144 = icmp ne ptr %151, null, !dbg !5258
  br i1 %cmp144, label %if.then146, label %if.end150, !dbg !5259

if.then146:                                       ; preds = %if.end143
  %152 = load ptr, ptr %r.addr, align 8, !dbg !5260, !tbaa !2416
  %pool147 = getelementptr inbounds %struct.request_rec, ptr %152, i32 0, i32 0, !dbg !5262
  %153 = load ptr, ptr %pool147, align 8, !dbg !5262, !tbaa !2792
  %154 = load ptr, ptr %err2, align 8, !dbg !5263, !tbaa !2416
  %status148 = getelementptr inbounds %struct.dav_error, ptr %154, i32 0, i32 0, !dbg !5264
  %155 = load i32, ptr %status148, align 8, !dbg !5264, !tbaa !2871
  %156 = load ptr, ptr %err2, align 8, !dbg !5265, !tbaa !2416
  %call149 = call ptr @dav_push_error(ptr noundef %153, i32 noundef %155, i32 noundef 0, ptr noundef @.str.84, ptr noundef %156), !dbg !5266
  store ptr %call149, ptr %err2, align 8, !dbg !5267, !tbaa !2416
  %157 = load ptr, ptr %r.addr, align 8, !dbg !5268, !tbaa !2416
  %158 = load ptr, ptr %err2, align 8, !dbg !5269, !tbaa !2416
  call void @dav_log_err(ptr noundef %157, ptr noundef %158, i32 noundef 4), !dbg !5270
  br label %if.end150, !dbg !5271

if.end150:                                        ; preds = %if.then146, %if.end143
  %159 = load ptr, ptr %locks_hooks, align 8, !dbg !5272, !tbaa !2416
  %cmp151 = icmp ne ptr %159, null, !dbg !5273
  br i1 %cmp151, label %if.then153, label %if.end175, !dbg !5274

if.then153:                                       ; preds = %if.end150
  call void @llvm.lifetime.start.p0(i64 8, ptr %lockdb) #10, !dbg !5275
  tail call void @llvm.dbg.declare(metadata ptr %lockdb, metadata !4896, metadata !DIExpression()), !dbg !5276
  %160 = load ptr, ptr %locks_hooks, align 8, !dbg !5277, !tbaa !2416
  %open_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %160, i32 0, i32 4, !dbg !5279
  %161 = load ptr, ptr %open_lockdb, align 8, !dbg !5279, !tbaa !3278
  %162 = load ptr, ptr %r.addr, align 8, !dbg !5280, !tbaa !2416
  %call154 = call ptr %161(ptr noundef %162, i32 noundef 0, i32 noundef 0, ptr noundef %lockdb), !dbg !5281
  store ptr %call154, ptr %err, align 8, !dbg !5282, !tbaa !2416
  %cmp155 = icmp ne ptr %call154, null, !dbg !5283
  br i1 %cmp155, label %if.then157, label %if.end162, !dbg !5284

if.then157:                                       ; preds = %if.then153
  %163 = load ptr, ptr %r.addr, align 8, !dbg !5285, !tbaa !2416
  %pool158 = getelementptr inbounds %struct.request_rec, ptr %163, i32 0, i32 0, !dbg !5287
  %164 = load ptr, ptr %pool158, align 8, !dbg !5287, !tbaa !2792
  %165 = load ptr, ptr %err, align 8, !dbg !5288, !tbaa !2416
  %status159 = getelementptr inbounds %struct.dav_error, ptr %165, i32 0, i32 0, !dbg !5289
  %166 = load i32, ptr %status159, align 8, !dbg !5289, !tbaa !2871
  %167 = load ptr, ptr %err, align 8, !dbg !5290, !tbaa !2416
  %call160 = call ptr @dav_push_error(ptr noundef %164, i32 noundef %166, i32 noundef 0, ptr noundef @.str.85, ptr noundef %167), !dbg !5291
  store ptr %call160, ptr %err, align 8, !dbg !5292, !tbaa !2416
  %168 = load ptr, ptr %r.addr, align 8, !dbg !5293, !tbaa !2416
  %169 = load ptr, ptr %err, align 8, !dbg !5294, !tbaa !2416
  %call161 = call i32 @dav_handle_err(ptr noundef %168, ptr noundef %169, ptr noundef null), !dbg !5295
  store i32 %call161, ptr %retval, align 4, !dbg !5296
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172, !dbg !5296

if.end162:                                        ; preds = %if.then153
  %170 = load ptr, ptr %r.addr, align 8, !dbg !5297, !tbaa !2416
  %171 = load ptr, ptr %lockdb, align 8, !dbg !5298, !tbaa !2416
  %172 = load ptr, ptr %resource, align 8, !dbg !5299, !tbaa !2416
  %173 = load i32, ptr %resource_state, align 4, !dbg !5300, !tbaa !2683
  %call163 = call ptr @dav_notify_created(ptr noundef %170, ptr noundef %171, ptr noundef %172, i32 noundef %173, i32 noundef 0), !dbg !5301
  store ptr %call163, ptr %err, align 8, !dbg !5302, !tbaa !2416
  %174 = load ptr, ptr %locks_hooks, align 8, !dbg !5303, !tbaa !2416
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %174, i32 0, i32 5, !dbg !5304
  %175 = load ptr, ptr %close_lockdb, align 8, !dbg !5304, !tbaa !3295
  %176 = load ptr, ptr %lockdb, align 8, !dbg !5305, !tbaa !2416
  call void %175(ptr noundef %176), !dbg !5306
  %177 = load ptr, ptr %err, align 8, !dbg !5307, !tbaa !2416
  %cmp164 = icmp ne ptr %177, null, !dbg !5309
  br i1 %cmp164, label %if.then166, label %if.end171, !dbg !5310

if.then166:                                       ; preds = %if.end162
  %178 = load ptr, ptr %r.addr, align 8, !dbg !5311, !tbaa !2416
  %pool167 = getelementptr inbounds %struct.request_rec, ptr %178, i32 0, i32 0, !dbg !5313
  %179 = load ptr, ptr %pool167, align 8, !dbg !5313, !tbaa !2792
  %180 = load ptr, ptr %err, align 8, !dbg !5314, !tbaa !2416
  %status168 = getelementptr inbounds %struct.dav_error, ptr %180, i32 0, i32 0, !dbg !5315
  %181 = load i32, ptr %status168, align 8, !dbg !5315, !tbaa !2871
  %182 = load ptr, ptr %err, align 8, !dbg !5316, !tbaa !2416
  %call169 = call ptr @dav_push_error(ptr noundef %179, i32 noundef %181, i32 noundef 0, ptr noundef @.str.86, ptr noundef %182), !dbg !5317
  store ptr %call169, ptr %err, align 8, !dbg !5318, !tbaa !2416
  %183 = load ptr, ptr %r.addr, align 8, !dbg !5319, !tbaa !2416
  %184 = load ptr, ptr %err, align 8, !dbg !5320, !tbaa !2416
  %call170 = call i32 @dav_handle_err(ptr noundef %183, ptr noundef %184, ptr noundef null), !dbg !5321
  store i32 %call170, ptr %retval, align 4, !dbg !5322
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172, !dbg !5322

if.end171:                                        ; preds = %if.end162
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5323
  br label %cleanup172, !dbg !5323

cleanup172:                                       ; preds = %if.end171, %if.then166, %if.then157
  call void @llvm.lifetime.end.p0(i64 8, ptr %lockdb) #10, !dbg !5323
  %cleanup.dest173 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest173, label %cleanup179 [
    i32 0, label %cleanup.cont174
  ]

cleanup.cont174:                                  ; preds = %cleanup172
  br label %if.end175, !dbg !5324

if.end175:                                        ; preds = %cleanup.cont174, %if.end150
  %185 = load ptr, ptr %r.addr, align 8, !dbg !5325, !tbaa !2416
  %186 = load i32, ptr %resource_state, align 4, !dbg !5326, !tbaa !2683
  %cmp176 = icmp eq i32 %186, 12, !dbg !5327
  %conv177 = zext i1 %cmp176 to i32, !dbg !5327
  %call178 = call i32 @dav_created(ptr noundef %185, ptr noundef null, ptr noundef @.str.87, i32 noundef %conv177), !dbg !5328
  store i32 %call178, ptr %retval, align 4, !dbg !5329
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup179, !dbg !5329

cleanup179:                                       ; preds = %if.end175, %cleanup172, %if.then140, %if.then45, %if.then31, %if.then26, %if.then19, %if.then12, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %range_end) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %range_start) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 4, ptr %has_range) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_response) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %stream) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 4, ptr %mode) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %err2) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %body) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %locks_hooks) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 24, ptr %av_info) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 4, ptr %resource_state) #10, !dbg !5330
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !5330
  %187 = load i32, ptr %retval, align 4, !dbg !5330
  ret i32 %187, !dbg !5330

unreachable:                                      ; preds = %cleanup121, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_post(ptr noundef %r) #0 !dbg !5331 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %err = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !5333, metadata !DIExpression()), !dbg !5336
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !5337
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !5334, metadata !DIExpression()), !dbg !5338
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !5339
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !5335, metadata !DIExpression()), !dbg !5340
  %0 = load ptr, ptr %r.addr, align 8, !dbg !5341, !tbaa !2416
  %call = call ptr @dav_get_resource(ptr noundef %0, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !5342
  store ptr %call, ptr %err, align 8, !dbg !5343, !tbaa !2416
  %1 = load ptr, ptr %err, align 8, !dbg !5344, !tbaa !2416
  %cmp = icmp ne ptr %1, null, !dbg !5346
  br i1 %cmp, label %if.then, label %if.end, !dbg !5347

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !5348, !tbaa !2416
  %3 = load ptr, ptr %err, align 8, !dbg !5349, !tbaa !2416
  %call1 = call i32 @dav_handle_err(ptr noundef %2, ptr noundef %3, ptr noundef null), !dbg !5350
  store i32 %call1, ptr %retval, align 4, !dbg !5351
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5351

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %r.addr, align 8, !dbg !5352, !tbaa !2416
  %5 = load ptr, ptr %resource, align 8, !dbg !5354, !tbaa !2416
  %call2 = call i32 @dav_run_method_precondition(ptr noundef %4, ptr noundef %5, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !5355
  %cmp3 = icmp ne i32 %call2, -1, !dbg !5356
  br i1 %cmp3, label %land.lhs.true, label %if.end6, !dbg !5357

land.lhs.true:                                    ; preds = %if.end
  %6 = load ptr, ptr %err, align 8, !dbg !5358, !tbaa !2416
  %tobool = icmp ne ptr %6, null, !dbg !5358
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !5359

if.then4:                                         ; preds = %land.lhs.true
  %7 = load ptr, ptr %r.addr, align 8, !dbg !5360, !tbaa !2416
  %8 = load ptr, ptr %err, align 8, !dbg !5362, !tbaa !2416
  %call5 = call i32 @dav_handle_err(ptr noundef %7, ptr noundef %8, ptr noundef null), !dbg !5363
  store i32 %call5, ptr %retval, align 4, !dbg !5364
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5364

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %9 = load ptr, ptr %r.addr, align 8, !dbg !5365, !tbaa !2416
  %10 = load ptr, ptr %resource, align 8, !dbg !5367, !tbaa !2416
  %call7 = call ptr @dav_validate_request(ptr noundef %9, ptr noundef %10, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 16, ptr noundef null), !dbg !5368
  store ptr %call7, ptr %err, align 8, !dbg !5369, !tbaa !2416
  %cmp8 = icmp ne ptr %call7, null, !dbg !5370
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !5371

if.then9:                                         ; preds = %if.end6
  %11 = load ptr, ptr %r.addr, align 8, !dbg !5372, !tbaa !2416
  %12 = load ptr, ptr %err, align 8, !dbg !5374, !tbaa !2416
  %call10 = call i32 @dav_handle_err(ptr noundef %11, ptr noundef %12, ptr noundef null), !dbg !5375
  store i32 %call10, ptr %retval, align 4, !dbg !5376
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5376

if.end11:                                         ; preds = %if.end6
  store i32 -1, ptr %retval, align 4, !dbg !5377
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5377

cleanup:                                          ; preds = %if.end11, %if.then9, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !5378
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !5378
  %13 = load i32, ptr %retval, align 4, !dbg !5378
  ret i32 %13, !dbg !5378
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_delete(ptr noundef %r) #0 !dbg !5379 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %av_info = alloca %struct.dav_auto_version_info, align 8
  %err = alloca ptr, align 8
  %err2 = alloca ptr, align 8
  %multi_response = alloca ptr, align 8
  %result = alloca i32, align 4
  %depth = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !5381, metadata !DIExpression()), !dbg !5389
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !5390
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !5382, metadata !DIExpression()), !dbg !5391
  call void @llvm.lifetime.start.p0(i64 24, ptr %av_info) #10, !dbg !5392
  tail call void @llvm.dbg.declare(metadata ptr %av_info, metadata !5383, metadata !DIExpression()), !dbg !5393
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !5394
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !5384, metadata !DIExpression()), !dbg !5395
  call void @llvm.lifetime.start.p0(i64 8, ptr %err2) #10, !dbg !5396
  tail call void @llvm.dbg.declare(metadata ptr %err2, metadata !5385, metadata !DIExpression()), !dbg !5397
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_response) #10, !dbg !5398
  tail call void @llvm.dbg.declare(metadata ptr %multi_response, metadata !5386, metadata !DIExpression()), !dbg !5399
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !5400
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5387, metadata !DIExpression()), !dbg !5401
  call void @llvm.lifetime.start.p0(i64 4, ptr %depth) #10, !dbg !5402
  tail call void @llvm.dbg.declare(metadata ptr %depth, metadata !5388, metadata !DIExpression()), !dbg !5403
  %0 = load ptr, ptr %r.addr, align 8, !dbg !5404, !tbaa !2416
  %call = call i32 @ap_discard_request_body(ptr noundef %0), !dbg !5406
  store i32 %call, ptr %result, align 4, !dbg !5407, !tbaa !2683
  %cmp = icmp ne i32 %call, 0, !dbg !5408
  br i1 %cmp, label %if.then, label %if.end, !dbg !5409

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %result, align 4, !dbg !5410, !tbaa !2683
  store i32 %1, ptr %retval, align 4, !dbg !5412
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5412

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !5413, !tbaa !2416
  %call1 = call ptr @dav_get_resource(ptr noundef %2, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !5414
  store ptr %call1, ptr %err, align 8, !dbg !5415, !tbaa !2416
  %3 = load ptr, ptr %err, align 8, !dbg !5416, !tbaa !2416
  %cmp2 = icmp ne ptr %3, null, !dbg !5418
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !5419

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr %r.addr, align 8, !dbg !5420, !tbaa !2416
  %5 = load ptr, ptr %err, align 8, !dbg !5421, !tbaa !2416
  %call4 = call i32 @dav_handle_err(ptr noundef %4, ptr noundef %5, ptr noundef null), !dbg !5422
  store i32 %call4, ptr %retval, align 4, !dbg !5423
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5423

if.end5:                                          ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !5424, !tbaa !2416
  %7 = load ptr, ptr %resource, align 8, !dbg !5426, !tbaa !2416
  %call6 = call i32 @dav_run_method_precondition(ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !5427
  %cmp7 = icmp ne i32 %call6, -1, !dbg !5428
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !5429

land.lhs.true:                                    ; preds = %if.end5
  %8 = load ptr, ptr %err, align 8, !dbg !5430, !tbaa !2416
  %tobool = icmp ne ptr %8, null, !dbg !5430
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !5431

if.then8:                                         ; preds = %land.lhs.true
  %9 = load ptr, ptr %r.addr, align 8, !dbg !5432, !tbaa !2416
  %10 = load ptr, ptr %err, align 8, !dbg !5434, !tbaa !2416
  %call9 = call i32 @dav_handle_err(ptr noundef %9, ptr noundef %10, ptr noundef null), !dbg !5435
  store i32 %call9, ptr %retval, align 4, !dbg !5436
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5436

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %11 = load ptr, ptr %resource, align 8, !dbg !5437, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %11, i32 0, i32 1, !dbg !5439
  %12 = load i32, ptr %exists, align 4, !dbg !5439, !tbaa !4784
  %tobool11 = icmp ne i32 %12, 0, !dbg !5437
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5440

if.then12:                                        ; preds = %if.end10
  store i32 404, ptr %retval, align 4, !dbg !5441
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5441

if.end13:                                         ; preds = %if.end10
  %13 = load ptr, ptr %r.addr, align 8, !dbg !5443, !tbaa !2416
  %call14 = call i32 @dav_get_depth(ptr noundef %13, i32 noundef 2147483647), !dbg !5444
  store i32 %call14, ptr %depth, align 4, !dbg !5445, !tbaa !2683
  %14 = load ptr, ptr %resource, align 8, !dbg !5446, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %14, i32 0, i32 2, !dbg !5448
  %15 = load i32, ptr %collection, align 8, !dbg !5448, !tbaa !4974
  %tobool15 = icmp ne i32 %15, 0, !dbg !5446
  br i1 %tobool15, label %land.lhs.true16, label %if.end19, !dbg !5449

land.lhs.true16:                                  ; preds = %if.end13
  %16 = load i32, ptr %depth, align 4, !dbg !5450, !tbaa !2683
  %cmp17 = icmp ne i32 %16, 2147483647, !dbg !5451
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5452

if.then18:                                        ; preds = %land.lhs.true16
  br label %do.body, !dbg !5453

do.body:                                          ; preds = %if.then18
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !5455

cond.true:                                        ; preds = %do.body
  %17 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !5455, !tbaa !2683
  br label %cond.end, !dbg !5455

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !5455

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ -1, %cond.false ], !dbg !5455
  %18 = load ptr, ptr %r.addr, align 8, !dbg !5455, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 1273, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %18, ptr noundef @.str.93), !dbg !5455
  br label %do.cond, !dbg !5458

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !5458

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !5459
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5459

if.end19:                                         ; preds = %land.lhs.true16, %if.end13
  %19 = load ptr, ptr %resource, align 8, !dbg !5460, !tbaa !2416
  %collection20 = getelementptr inbounds %struct.dav_resource, ptr %19, i32 0, i32 2, !dbg !5462
  %20 = load i32, ptr %collection20, align 8, !dbg !5462, !tbaa !4974
  %tobool21 = icmp ne i32 %20, 0, !dbg !5460
  br i1 %tobool21, label %if.end32, label %land.lhs.true22, !dbg !5463

land.lhs.true22:                                  ; preds = %if.end19
  %21 = load i32, ptr %depth, align 4, !dbg !5464, !tbaa !2683
  %cmp23 = icmp eq i32 %21, 1, !dbg !5465
  br i1 %cmp23, label %if.then24, label %if.end32, !dbg !5466

if.then24:                                        ; preds = %land.lhs.true22
  br label %do.body25, !dbg !5467

do.body25:                                        ; preds = %if.then24
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true26, label %cond.false27, !dbg !5469

cond.true26:                                      ; preds = %do.body25
  %22 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !5469, !tbaa !2683
  br label %cond.end28, !dbg !5469

cond.false27:                                     ; preds = %do.body25
  br label %cond.end28, !dbg !5469

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi i32 [ %22, %cond.true26 ], [ -1, %cond.false27 ], !dbg !5469
  %23 = load ptr, ptr %r.addr, align 8, !dbg !5469, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 1280, i32 noundef %cond29, i32 noundef 3, i32 noundef 0, ptr noundef %23, ptr noundef @.str.94), !dbg !5469
  br label %do.cond30, !dbg !5472

do.cond30:                                        ; preds = %cond.end28
  br label %do.end31, !dbg !5472

do.end31:                                         ; preds = %do.cond30
  store i32 400, ptr %retval, align 4, !dbg !5473
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5473

if.end32:                                         ; preds = %land.lhs.true22, %if.end19
  %24 = load ptr, ptr %r.addr, align 8, !dbg !5474, !tbaa !2416
  %25 = load ptr, ptr %resource, align 8, !dbg !5476, !tbaa !2416
  %26 = load i32, ptr %depth, align 4, !dbg !5477, !tbaa !2683
  %call33 = call ptr @dav_validate_request(ptr noundef %24, ptr noundef %25, i32 noundef %26, ptr noundef null, ptr noundef %multi_response, i32 noundef 160, ptr noundef null), !dbg !5478
  store ptr %call33, ptr %err, align 8, !dbg !5479, !tbaa !2416
  %cmp34 = icmp ne ptr %call33, null, !dbg !5480
  br i1 %cmp34, label %if.then35, label %if.end42, !dbg !5481

if.then35:                                        ; preds = %if.end32
  %27 = load ptr, ptr %r.addr, align 8, !dbg !5482, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %27, i32 0, i32 0, !dbg !5484
  %28 = load ptr, ptr %pool, align 8, !dbg !5484, !tbaa !2792
  %29 = load ptr, ptr %err, align 8, !dbg !5485, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %29, i32 0, i32 0, !dbg !5486
  %30 = load i32, ptr %status, align 8, !dbg !5486, !tbaa !2871
  %31 = load ptr, ptr %r.addr, align 8, !dbg !5487, !tbaa !2416
  %pool36 = getelementptr inbounds %struct.request_rec, ptr %31, i32 0, i32 0, !dbg !5488
  %32 = load ptr, ptr %pool36, align 8, !dbg !5488, !tbaa !2792
  %33 = load ptr, ptr %r.addr, align 8, !dbg !5489, !tbaa !2416
  %pool37 = getelementptr inbounds %struct.request_rec, ptr %33, i32 0, i32 0, !dbg !5489
  %34 = load ptr, ptr %pool37, align 8, !dbg !5489, !tbaa !2792
  %35 = load ptr, ptr %r.addr, align 8, !dbg !5489, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %35, i32 0, i32 47, !dbg !5489
  %36 = load ptr, ptr %uri, align 8, !dbg !5489, !tbaa !3183
  %call38 = call ptr @ap_escape_html2(ptr noundef %34, ptr noundef %36, i32 noundef 0), !dbg !5489
  %call39 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %32, ptr noundef @.str.95, ptr noundef %call38), !dbg !5490
  %37 = load ptr, ptr %err, align 8, !dbg !5491, !tbaa !2416
  %call40 = call ptr @dav_push_error(ptr noundef %28, i32 noundef %30, i32 noundef 0, ptr noundef %call39, ptr noundef %37), !dbg !5492
  store ptr %call40, ptr %err, align 8, !dbg !5493, !tbaa !2416
  %38 = load ptr, ptr %r.addr, align 8, !dbg !5494, !tbaa !2416
  %39 = load ptr, ptr %err, align 8, !dbg !5495, !tbaa !2416
  %40 = load ptr, ptr %multi_response, align 8, !dbg !5496, !tbaa !2416
  %call41 = call i32 @dav_handle_err(ptr noundef %38, ptr noundef %39, ptr noundef %40), !dbg !5497
  store i32 %call41, ptr %retval, align 4, !dbg !5498
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5498

if.end42:                                         ; preds = %if.end32
  %41 = load ptr, ptr %r.addr, align 8, !dbg !5499, !tbaa !2416
  %42 = load ptr, ptr %resource, align 8, !dbg !5501, !tbaa !2416
  %call43 = call i32 @dav_unlock(ptr noundef %41, ptr noundef %42, ptr noundef null), !dbg !5502
  store i32 %call43, ptr %result, align 4, !dbg !5503, !tbaa !2683
  %cmp44 = icmp ne i32 %call43, 0, !dbg !5504
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !5505

if.then45:                                        ; preds = %if.end42
  %43 = load i32, ptr %result, align 4, !dbg !5506, !tbaa !2683
  store i32 %43, ptr %retval, align 4, !dbg !5508
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5508

if.end46:                                         ; preds = %if.end42
  %44 = load ptr, ptr %r.addr, align 8, !dbg !5509, !tbaa !2416
  %45 = load ptr, ptr %resource, align 8, !dbg !5511, !tbaa !2416
  %call47 = call ptr @dav_auto_checkout(ptr noundef %44, ptr noundef %45, i32 noundef 1, ptr noundef %av_info), !dbg !5512
  store ptr %call47, ptr %err, align 8, !dbg !5513, !tbaa !2416
  %cmp48 = icmp ne ptr %call47, null, !dbg !5514
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !5515

if.then49:                                        ; preds = %if.end46
  %46 = load ptr, ptr %r.addr, align 8, !dbg !5516, !tbaa !2416
  %47 = load ptr, ptr %err, align 8, !dbg !5518, !tbaa !2416
  %call50 = call i32 @dav_handle_err(ptr noundef %46, ptr noundef %47, ptr noundef null), !dbg !5519
  store i32 %call50, ptr %retval, align 4, !dbg !5520
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5520

if.end51:                                         ; preds = %if.end46
  %48 = load ptr, ptr %resource, align 8, !dbg !5521, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %48, i32 0, i32 8, !dbg !5522
  %49 = load ptr, ptr %hooks, align 8, !dbg !5522, !tbaa !4791
  %remove_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %49, i32 0, i32 14, !dbg !5523
  %50 = load ptr, ptr %remove_resource, align 8, !dbg !5523, !tbaa !5524
  %51 = load ptr, ptr %resource, align 8, !dbg !5525, !tbaa !2416
  %call52 = call ptr %50(ptr noundef %51, ptr noundef %multi_response), !dbg !5526
  store ptr %call52, ptr %err, align 8, !dbg !5527, !tbaa !2416
  %52 = load ptr, ptr %r.addr, align 8, !dbg !5528, !tbaa !2416
  %53 = load ptr, ptr %err, align 8, !dbg !5529, !tbaa !2416
  %cmp53 = icmp ne ptr %53, null, !dbg !5530
  %conv = zext i1 %cmp53 to i32, !dbg !5530
  %call54 = call ptr @dav_auto_checkin(ptr noundef %52, ptr noundef null, i32 noundef %conv, i32 noundef 0, ptr noundef %av_info), !dbg !5531
  store ptr %call54, ptr %err2, align 8, !dbg !5532, !tbaa !2416
  %54 = load ptr, ptr %err, align 8, !dbg !5533, !tbaa !2416
  %cmp55 = icmp ne ptr %54, null, !dbg !5535
  br i1 %cmp55, label %if.then57, label %if.end67, !dbg !5536

if.then57:                                        ; preds = %if.end51
  %55 = load ptr, ptr %r.addr, align 8, !dbg !5537, !tbaa !2416
  %pool58 = getelementptr inbounds %struct.request_rec, ptr %55, i32 0, i32 0, !dbg !5539
  %56 = load ptr, ptr %pool58, align 8, !dbg !5539, !tbaa !2792
  %57 = load ptr, ptr %err, align 8, !dbg !5540, !tbaa !2416
  %status59 = getelementptr inbounds %struct.dav_error, ptr %57, i32 0, i32 0, !dbg !5541
  %58 = load i32, ptr %status59, align 8, !dbg !5541, !tbaa !2871
  %59 = load ptr, ptr %r.addr, align 8, !dbg !5542, !tbaa !2416
  %pool60 = getelementptr inbounds %struct.request_rec, ptr %59, i32 0, i32 0, !dbg !5543
  %60 = load ptr, ptr %pool60, align 8, !dbg !5543, !tbaa !2792
  %61 = load ptr, ptr %r.addr, align 8, !dbg !5544, !tbaa !2416
  %pool61 = getelementptr inbounds %struct.request_rec, ptr %61, i32 0, i32 0, !dbg !5544
  %62 = load ptr, ptr %pool61, align 8, !dbg !5544, !tbaa !2792
  %63 = load ptr, ptr %r.addr, align 8, !dbg !5544, !tbaa !2416
  %uri62 = getelementptr inbounds %struct.request_rec, ptr %63, i32 0, i32 47, !dbg !5544
  %64 = load ptr, ptr %uri62, align 8, !dbg !5544, !tbaa !3183
  %call63 = call ptr @ap_escape_html2(ptr noundef %62, ptr noundef %64, i32 noundef 0), !dbg !5544
  %call64 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %60, ptr noundef @.str.96, ptr noundef %call63), !dbg !5545
  %65 = load ptr, ptr %err, align 8, !dbg !5546, !tbaa !2416
  %call65 = call ptr @dav_push_error(ptr noundef %56, i32 noundef %58, i32 noundef 0, ptr noundef %call64, ptr noundef %65), !dbg !5547
  store ptr %call65, ptr %err, align 8, !dbg !5548, !tbaa !2416
  %66 = load ptr, ptr %r.addr, align 8, !dbg !5549, !tbaa !2416
  %67 = load ptr, ptr %err, align 8, !dbg !5550, !tbaa !2416
  %68 = load ptr, ptr %multi_response, align 8, !dbg !5551, !tbaa !2416
  %call66 = call i32 @dav_handle_err(ptr noundef %66, ptr noundef %67, ptr noundef %68), !dbg !5552
  store i32 %call66, ptr %retval, align 4, !dbg !5553
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5553

if.end67:                                         ; preds = %if.end51
  %69 = load ptr, ptr %err2, align 8, !dbg !5554, !tbaa !2416
  %cmp68 = icmp ne ptr %69, null, !dbg !5556
  br i1 %cmp68, label %if.then70, label %if.end74, !dbg !5557

if.then70:                                        ; preds = %if.end67
  %70 = load ptr, ptr %r.addr, align 8, !dbg !5558, !tbaa !2416
  %pool71 = getelementptr inbounds %struct.request_rec, ptr %70, i32 0, i32 0, !dbg !5560
  %71 = load ptr, ptr %pool71, align 8, !dbg !5560, !tbaa !2792
  %72 = load ptr, ptr %err2, align 8, !dbg !5561, !tbaa !2416
  %status72 = getelementptr inbounds %struct.dav_error, ptr %72, i32 0, i32 0, !dbg !5562
  %73 = load i32, ptr %status72, align 8, !dbg !5562, !tbaa !2871
  %74 = load ptr, ptr %err2, align 8, !dbg !5563, !tbaa !2416
  %call73 = call ptr @dav_push_error(ptr noundef %71, i32 noundef %73, i32 noundef 0, ptr noundef @.str.97, ptr noundef %74), !dbg !5564
  store ptr %call73, ptr %err, align 8, !dbg !5565, !tbaa !2416
  %75 = load ptr, ptr %r.addr, align 8, !dbg !5566, !tbaa !2416
  %76 = load ptr, ptr %err, align 8, !dbg !5567, !tbaa !2416
  call void @dav_log_err(ptr noundef %75, ptr noundef %76, i32 noundef 4), !dbg !5568
  br label %if.end74, !dbg !5569

if.end74:                                         ; preds = %if.then70, %if.end67
  store i32 204, ptr %retval, align 4, !dbg !5570
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5570

cleanup:                                          ; preds = %if.end74, %if.then57, %if.then49, %if.then45, %if.then35, %do.end31, %do.end, %if.then12, %if.then8, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %depth) #10, !dbg !5571
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !5571
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_response) #10, !dbg !5571
  call void @llvm.lifetime.end.p0(i64 8, ptr %err2) #10, !dbg !5571
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !5571
  call void @llvm.lifetime.end.p0(i64 24, ptr %av_info) #10, !dbg !5571
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !5571
  %77 = load i32, ptr %retval, align 4, !dbg !5571
  ret i32 %77, !dbg !5571
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_options(ptr noundef %r) #0 !dbg !5572 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %locks_hooks = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %binding_hooks = alloca ptr, align 8
  %search_hooks = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %dav_level = alloca ptr, align 8
  %allow = alloca ptr, align 8
  %s = alloca ptr, align 8
  %arr = alloca ptr, align 8
  %elts = alloca ptr, align 8
  %methods = alloca ptr, align 8
  %vsn_options = alloca %struct.apr_text_header, align 8
  %body = alloca %struct.apr_text_header, align 8
  %t = alloca ptr, align 8
  %text_size = alloca i32, align 4
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  %uri_ary = alloca ptr, align 8
  %doc = alloca ptr, align 8
  %elem = alloca ptr, align 8
  %err = alloca ptr, align 8
  %extensions = alloca ptr, align 8
  %entry5 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %options = alloca ptr, align 8
  %hoptions = alloca %struct.apr_text_header, align 8
  %options155 = alloca ptr, align 8
  %hoptions162 = alloca %struct.apr_text_header, align 8
  %core_option = alloca i32, align 4
  %err253 = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !5574, metadata !DIExpression()), !dbg !5628
  call void @llvm.lifetime.start.p0(i64 8, ptr %locks_hooks) #10, !dbg !5629
  tail call void @llvm.dbg.declare(metadata ptr %locks_hooks, metadata !5575, metadata !DIExpression()), !dbg !5630
  %0 = load ptr, ptr %r.addr, align 8, !dbg !5631, !tbaa !2416
  %call = call ptr @dav_get_lock_hooks(ptr noundef %0), !dbg !5631
  store ptr %call, ptr %locks_hooks, align 8, !dbg !5630, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !5632
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !5576, metadata !DIExpression()), !dbg !5633
  %1 = load ptr, ptr %r.addr, align 8, !dbg !5634, !tbaa !2416
  %call1 = call ptr @dav_get_vsn_hooks(ptr noundef %1), !dbg !5634
  store ptr %call1, ptr %vsn_hooks, align 8, !dbg !5633, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %binding_hooks) #10, !dbg !5635
  tail call void @llvm.dbg.declare(metadata ptr %binding_hooks, metadata !5577, metadata !DIExpression()), !dbg !5636
  %2 = load ptr, ptr %r.addr, align 8, !dbg !5637, !tbaa !2416
  %call2 = call ptr @dav_get_binding_hooks(ptr noundef %2), !dbg !5637
  store ptr %call2, ptr %binding_hooks, align 8, !dbg !5636, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %search_hooks) #10, !dbg !5638
  tail call void @llvm.dbg.declare(metadata ptr %search_hooks, metadata !5578, metadata !DIExpression()), !dbg !5639
  %3 = load ptr, ptr %r.addr, align 8, !dbg !5640, !tbaa !2416
  %call3 = call ptr @dav_get_search_hooks(ptr noundef %3), !dbg !5640
  store ptr %call3, ptr %search_hooks, align 8, !dbg !5639, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !5641
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !5579, metadata !DIExpression()), !dbg !5642
  call void @llvm.lifetime.start.p0(i64 8, ptr %dav_level) #10, !dbg !5643
  tail call void @llvm.dbg.declare(metadata ptr %dav_level, metadata !5580, metadata !DIExpression()), !dbg !5644
  call void @llvm.lifetime.start.p0(i64 8, ptr %allow) #10, !dbg !5645
  tail call void @llvm.dbg.declare(metadata ptr %allow, metadata !5581, metadata !DIExpression()), !dbg !5646
  call void @llvm.lifetime.start.p0(i64 8, ptr %s) #10, !dbg !5647
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !5582, metadata !DIExpression()), !dbg !5648
  call void @llvm.lifetime.start.p0(i64 8, ptr %arr) #10, !dbg !5649
  tail call void @llvm.dbg.declare(metadata ptr %arr, metadata !5583, metadata !DIExpression()), !dbg !5650
  call void @llvm.lifetime.start.p0(i64 8, ptr %elts) #10, !dbg !5651
  tail call void @llvm.dbg.declare(metadata ptr %elts, metadata !5584, metadata !DIExpression()), !dbg !5652
  call void @llvm.lifetime.start.p0(i64 8, ptr %methods) #10, !dbg !5653
  tail call void @llvm.dbg.declare(metadata ptr %methods, metadata !5585, metadata !DIExpression()), !dbg !5654
  %4 = load ptr, ptr %r.addr, align 8, !dbg !5655, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %4, i32 0, i32 0, !dbg !5656
  %5 = load ptr, ptr %pool, align 8, !dbg !5656, !tbaa !2792
  %call4 = call ptr @apr_table_make(ptr noundef %5, i32 noundef 12), !dbg !5657
  store ptr %call4, ptr %methods, align 8, !dbg !5654, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 16, ptr %vsn_options) #10, !dbg !5658
  tail call void @llvm.dbg.declare(metadata ptr %vsn_options, metadata !5586, metadata !DIExpression()), !dbg !5659
  call void @llvm.memset.p0.i64(ptr align 8 %vsn_options, i8 0, i64 16, i1 false), !dbg !5659
  call void @llvm.lifetime.start.p0(i64 16, ptr %body) #10, !dbg !5660
  tail call void @llvm.dbg.declare(metadata ptr %body, metadata !5587, metadata !DIExpression()), !dbg !5661
  call void @llvm.memset.p0.i64(ptr align 8 %body, i8 0, i64 16, i1 false), !dbg !5661
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #10, !dbg !5662
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !5588, metadata !DIExpression()), !dbg !5663
  call void @llvm.lifetime.start.p0(i64 4, ptr %text_size) #10, !dbg !5664
  tail call void @llvm.dbg.declare(metadata ptr %text_size, metadata !5589, metadata !DIExpression()), !dbg !5665
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !5666
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5590, metadata !DIExpression()), !dbg !5667
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !5668
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5591, metadata !DIExpression()), !dbg !5669
  call void @llvm.lifetime.start.p0(i64 8, ptr %uri_ary) #10, !dbg !5670
  tail call void @llvm.dbg.declare(metadata ptr %uri_ary, metadata !5592, metadata !DIExpression()), !dbg !5671
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !5672
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !5593, metadata !DIExpression()), !dbg !5673
  call void @llvm.lifetime.start.p0(i64 8, ptr %elem) #10, !dbg !5674
  tail call void @llvm.dbg.declare(metadata ptr %elem, metadata !5594, metadata !DIExpression()), !dbg !5675
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !5676
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !5595, metadata !DIExpression()), !dbg !5677
  call void @llvm.lifetime.start.p0(i64 8, ptr %extensions) #10, !dbg !5678
  tail call void @llvm.dbg.declare(metadata ptr %extensions, metadata !5596, metadata !DIExpression()), !dbg !5679
  call void @llvm.lifetime.start.p0(i64 8, ptr %entry5) #10, !dbg !5680
  tail call void @llvm.dbg.declare(metadata ptr %entry5, metadata !5597, metadata !DIExpression()), !dbg !5681
  %6 = load ptr, ptr %r.addr, align 8, !dbg !5682, !tbaa !2416
  %call6 = call ptr @dav_get_resource(ptr noundef %6, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !5683
  store ptr %call6, ptr %err, align 8, !dbg !5684, !tbaa !2416
  %7 = load ptr, ptr %err, align 8, !dbg !5685, !tbaa !2416
  %cmp = icmp ne ptr %7, null, !dbg !5687
  br i1 %cmp, label %if.then, label %if.end, !dbg !5688

if.then:                                          ; preds = %entry
  %8 = load ptr, ptr %r.addr, align 8, !dbg !5689, !tbaa !2416
  %9 = load ptr, ptr %err, align 8, !dbg !5690, !tbaa !2416
  %call7 = call i32 @dav_handle_err(ptr noundef %8, ptr noundef %9, ptr noundef null), !dbg !5691
  store i32 %call7, ptr %retval, align 4, !dbg !5692
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup313, !dbg !5692

if.end:                                           ; preds = %entry
  %10 = load ptr, ptr %r.addr, align 8, !dbg !5693, !tbaa !2416
  %call8 = call i32 @ap_xml_parse_input(ptr noundef %10, ptr noundef %doc), !dbg !5695
  store i32 %call8, ptr %result, align 4, !dbg !5696, !tbaa !2683
  %cmp9 = icmp ne i32 %call8, 0, !dbg !5697
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5698

if.then10:                                        ; preds = %if.end
  %11 = load i32, ptr %result, align 4, !dbg !5699, !tbaa !2683
  store i32 %11, ptr %retval, align 4, !dbg !5701
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup313, !dbg !5701

if.end11:                                         ; preds = %if.end
  %12 = load ptr, ptr %r.addr, align 8, !dbg !5702, !tbaa !2416
  %13 = load ptr, ptr %resource, align 8, !dbg !5704, !tbaa !2416
  %14 = load ptr, ptr %doc, align 8, !dbg !5705, !tbaa !2416
  %call12 = call i32 @dav_run_method_precondition(ptr noundef %12, ptr noundef %13, ptr noundef null, ptr noundef %14, ptr noundef %err), !dbg !5706
  %cmp13 = icmp ne i32 %call12, -1, !dbg !5707
  br i1 %cmp13, label %land.lhs.true, label %if.end16, !dbg !5708

land.lhs.true:                                    ; preds = %if.end11
  %15 = load ptr, ptr %err, align 8, !dbg !5709, !tbaa !2416
  %tobool = icmp ne ptr %15, null, !dbg !5709
  br i1 %tobool, label %if.then14, label %if.end16, !dbg !5710

if.then14:                                        ; preds = %land.lhs.true
  %16 = load ptr, ptr %r.addr, align 8, !dbg !5711, !tbaa !2416
  %17 = load ptr, ptr %err, align 8, !dbg !5713, !tbaa !2416
  %call15 = call i32 @dav_handle_err(ptr noundef %16, ptr noundef %17, ptr noundef null), !dbg !5714
  store i32 %call15, ptr %retval, align 4, !dbg !5715
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup313, !dbg !5715

if.end16:                                         ; preds = %land.lhs.true, %if.end11
  %18 = load ptr, ptr %doc, align 8, !dbg !5716, !tbaa !2416
  %tobool17 = icmp ne ptr %18, null, !dbg !5716
  br i1 %tobool17, label %land.lhs.true18, label %if.end22, !dbg !5718

land.lhs.true18:                                  ; preds = %if.end16
  %19 = load ptr, ptr %doc, align 8, !dbg !5719, !tbaa !2416
  %call19 = call i32 @dav_validate_root(ptr noundef %19, ptr noundef @.str.98), !dbg !5720
  %tobool20 = icmp ne i32 %call19, 0, !dbg !5720
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !5721

if.then21:                                        ; preds = %land.lhs.true18
  br label %do.body, !dbg !5722

do.body:                                          ; preds = %if.then21
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !5724

cond.true:                                        ; preds = %do.body
  %20 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !5724, !tbaa !2683
  br label %cond.end, !dbg !5724

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !5724

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %20, %cond.true ], [ -1, %cond.false ], !dbg !5724
  %21 = load ptr, ptr %r.addr, align 8, !dbg !5724, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 1708, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %21, ptr noundef @.str.99), !dbg !5724
  br label %do.cond, !dbg !5727

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !5727

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !5728
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup313, !dbg !5728

if.end22:                                         ; preds = %land.lhs.true18, %if.end16
  store ptr @.str.20, ptr %dav_level, align 8, !dbg !5729, !tbaa !2416
  %22 = load ptr, ptr %locks_hooks, align 8, !dbg !5730, !tbaa !2416
  %cmp23 = icmp ne ptr %22, null, !dbg !5732
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !5733

if.then24:                                        ; preds = %if.end22
  store ptr @.str.100, ptr %dav_level, align 8, !dbg !5734, !tbaa !2416
  br label %if.end25, !dbg !5736

if.end25:                                         ; preds = %if.then24, %if.end22
  %23 = load ptr, ptr %binding_hooks, align 8, !dbg !5737, !tbaa !2416
  %cmp26 = icmp ne ptr %23, null, !dbg !5739
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !5740

if.then27:                                        ; preds = %if.end25
  %24 = load ptr, ptr %r.addr, align 8, !dbg !5741, !tbaa !2416
  %pool28 = getelementptr inbounds %struct.request_rec, ptr %24, i32 0, i32 0, !dbg !5742
  %25 = load ptr, ptr %pool28, align 8, !dbg !5742, !tbaa !2792
  %26 = load ptr, ptr %dav_level, align 8, !dbg !5743, !tbaa !2416
  %call29 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %25, ptr noundef %26, ptr noundef @.str.101, ptr noundef null), !dbg !5744
  store ptr %call29, ptr %dav_level, align 8, !dbg !5745, !tbaa !2416
  br label %if.end30, !dbg !5746

if.end30:                                         ; preds = %if.then27, %if.end25
  %27 = load ptr, ptr %r.addr, align 8, !dbg !5747, !tbaa !2416
  %pool31 = getelementptr inbounds %struct.request_rec, ptr %27, i32 0, i32 0, !dbg !5748
  %28 = load ptr, ptr %pool31, align 8, !dbg !5748, !tbaa !2792
  %call32 = call ptr @ap_list_provider_names(ptr noundef %28, ptr noundef @.str.102, ptr noundef @.str.19), !dbg !5749
  store ptr %call32, ptr %extensions, align 8, !dbg !5750, !tbaa !2416
  %29 = load ptr, ptr %extensions, align 8, !dbg !5751, !tbaa !2416
  %elts33 = getelementptr inbounds %struct.apr_array_header_t, ptr %29, i32 0, i32 4, !dbg !5752
  %30 = load ptr, ptr %elts33, align 8, !dbg !5752, !tbaa !2715
  store ptr %30, ptr %entry5, align 8, !dbg !5753, !tbaa !2416
  store i32 0, ptr %i, align 4, !dbg !5754, !tbaa !2683
  br label %for.cond, !dbg !5755

for.cond:                                         ; preds = %for.inc50, %if.end30
  %31 = load i32, ptr %i, align 4, !dbg !5756, !tbaa !2683
  %32 = load ptr, ptr %extensions, align 8, !dbg !5757, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %32, i32 0, i32 2, !dbg !5758
  %33 = load i32, ptr %nelts, align 4, !dbg !5758, !tbaa !2702
  %cmp34 = icmp slt i32 %31, %33, !dbg !5759
  br i1 %cmp34, label %for.body, label %for.end51, !dbg !5760

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %options) #10, !dbg !5761
  tail call void @llvm.dbg.declare(metadata ptr %options, metadata !5598, metadata !DIExpression()), !dbg !5762
  %34 = load ptr, ptr %entry5, align 8, !dbg !5763, !tbaa !2416
  %provider_name = getelementptr inbounds %struct.ap_list_provider_names_t, ptr %34, i32 0, i32 0, !dbg !5764
  %35 = load ptr, ptr %provider_name, align 8, !dbg !5764, !tbaa !5765
  %call35 = call ptr @dav_get_options_providers(ptr noundef %35), !dbg !5767
  store ptr %call35, ptr %options, align 8, !dbg !5762, !tbaa !2416
  %36 = load ptr, ptr %options, align 8, !dbg !5768, !tbaa !2416
  %tobool36 = icmp ne ptr %36, null, !dbg !5768
  br i1 %tobool36, label %land.lhs.true37, label %if.end49, !dbg !5769

land.lhs.true37:                                  ; preds = %for.body
  %37 = load ptr, ptr %options, align 8, !dbg !5770, !tbaa !2416
  %dav_header = getelementptr inbounds %struct.dav_options_provider, ptr %37, i32 0, i32 0, !dbg !5771
  %38 = load ptr, ptr %dav_header, align 8, !dbg !5771, !tbaa !5772
  %tobool38 = icmp ne ptr %38, null, !dbg !5770
  br i1 %tobool38, label %if.then39, label %if.end49, !dbg !5774

if.then39:                                        ; preds = %land.lhs.true37
  call void @llvm.lifetime.start.p0(i64 16, ptr %hoptions) #10, !dbg !5775
  tail call void @llvm.dbg.declare(metadata ptr %hoptions, metadata !5613, metadata !DIExpression()), !dbg !5776
  call void @llvm.memset.p0.i64(ptr align 8 %hoptions, i8 0, i64 16, i1 false), !dbg !5776
  %39 = load ptr, ptr %options, align 8, !dbg !5777, !tbaa !2416
  %dav_header40 = getelementptr inbounds %struct.dav_options_provider, ptr %39, i32 0, i32 0, !dbg !5778
  %40 = load ptr, ptr %dav_header40, align 8, !dbg !5778, !tbaa !5772
  %41 = load ptr, ptr %r.addr, align 8, !dbg !5779, !tbaa !2416
  %42 = load ptr, ptr %resource, align 8, !dbg !5780, !tbaa !2416
  %call41 = call ptr %40(ptr noundef %41, ptr noundef %42, ptr noundef %hoptions), !dbg !5777
  %first = getelementptr inbounds %struct.apr_text_header, ptr %hoptions, i32 0, i32 0, !dbg !5781
  %43 = load ptr, ptr %first, align 8, !dbg !5781, !tbaa !3490
  store ptr %43, ptr %t, align 8, !dbg !5783, !tbaa !2416
  br label %for.cond42, !dbg !5784

for.cond42:                                       ; preds = %for.inc, %if.then39
  %44 = load ptr, ptr %t, align 8, !dbg !5785, !tbaa !2416
  %tobool43 = icmp ne ptr %44, null, !dbg !5785
  br i1 %tobool43, label %land.rhs, label %land.end, !dbg !5787

land.rhs:                                         ; preds = %for.cond42
  %45 = load ptr, ptr %t, align 8, !dbg !5788, !tbaa !2416
  %text = getelementptr inbounds %struct.apr_text, ptr %45, i32 0, i32 0, !dbg !5789
  %46 = load ptr, ptr %text, align 8, !dbg !5789, !tbaa !2553
  %tobool44 = icmp ne ptr %46, null, !dbg !5787
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond42
  %47 = phi i1 [ false, %for.cond42 ], [ %tobool44, %land.rhs ], !dbg !5790
  br i1 %47, label %for.body45, label %for.end, !dbg !5791

for.body45:                                       ; preds = %land.end
  %48 = load ptr, ptr %r.addr, align 8, !dbg !5792, !tbaa !2416
  %pool46 = getelementptr inbounds %struct.request_rec, ptr %48, i32 0, i32 0, !dbg !5793
  %49 = load ptr, ptr %pool46, align 8, !dbg !5793, !tbaa !2792
  %50 = load ptr, ptr %dav_level, align 8, !dbg !5794, !tbaa !2416
  %51 = load ptr, ptr %t, align 8, !dbg !5795, !tbaa !2416
  %text47 = getelementptr inbounds %struct.apr_text, ptr %51, i32 0, i32 0, !dbg !5796
  %52 = load ptr, ptr %text47, align 8, !dbg !5796, !tbaa !2553
  %call48 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %49, ptr noundef %50, ptr noundef @.str.103, ptr noundef %52, ptr noundef null), !dbg !5797
  store ptr %call48, ptr %dav_level, align 8, !dbg !5798, !tbaa !2416
  br label %for.inc, !dbg !5799

for.inc:                                          ; preds = %for.body45
  %53 = load ptr, ptr %t, align 8, !dbg !5800, !tbaa !2416
  %next = getelementptr inbounds %struct.apr_text, ptr %53, i32 0, i32 1, !dbg !5801
  %54 = load ptr, ptr %next, align 8, !dbg !5801, !tbaa !2558
  store ptr %54, ptr %t, align 8, !dbg !5802, !tbaa !2416
  br label %for.cond42, !dbg !5803, !llvm.loop !5804

for.end:                                          ; preds = %land.end
  call void @llvm.lifetime.end.p0(i64 16, ptr %hoptions) #10, !dbg !5806
  br label %if.end49, !dbg !5807

if.end49:                                         ; preds = %for.end, %land.lhs.true37, %for.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %options) #10, !dbg !5808
  br label %for.inc50, !dbg !5809

for.inc50:                                        ; preds = %if.end49
  %55 = load i32, ptr %i, align 4, !dbg !5810, !tbaa !2683
  %inc = add nsw i32 %55, 1, !dbg !5810
  store i32 %inc, ptr %i, align 4, !dbg !5810, !tbaa !2683
  %56 = load ptr, ptr %entry5, align 8, !dbg !5811, !tbaa !2416
  %incdec.ptr = getelementptr inbounds %struct.ap_list_provider_names_t, ptr %56, i32 1, !dbg !5811
  store ptr %incdec.ptr, ptr %entry5, align 8, !dbg !5811, !tbaa !2416
  br label %for.cond, !dbg !5812, !llvm.loop !5813

for.end51:                                        ; preds = %for.cond
  %57 = load ptr, ptr %r.addr, align 8, !dbg !5815, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %57, i32 0, i32 35, !dbg !5816
  %58 = load ptr, ptr %headers_out, align 8, !dbg !5816, !tbaa !5817
  %59 = load ptr, ptr %dav_level, align 8, !dbg !5818, !tbaa !2416
  call void @apr_table_setn(ptr noundef %58, ptr noundef @.str.53, ptr noundef %59), !dbg !5819
  %60 = load ptr, ptr %vsn_hooks, align 8, !dbg !5820, !tbaa !2416
  %cmp52 = icmp ne ptr %60, null, !dbg !5822
  br i1 %cmp52, label %if.then53, label %if.end64, !dbg !5823

if.then53:                                        ; preds = %for.end51
  %61 = load ptr, ptr %vsn_hooks, align 8, !dbg !5824, !tbaa !2416
  %get_vsn_options = getelementptr inbounds %struct.dav_hooks_vsn, ptr %61, i32 0, i32 0, !dbg !5826
  %62 = load ptr, ptr %get_vsn_options, align 8, !dbg !5826, !tbaa !5827
  %63 = load ptr, ptr %r.addr, align 8, !dbg !5828, !tbaa !2416
  %pool54 = getelementptr inbounds %struct.request_rec, ptr %63, i32 0, i32 0, !dbg !5829
  %64 = load ptr, ptr %pool54, align 8, !dbg !5829, !tbaa !2792
  call void %62(ptr noundef %64, ptr noundef %vsn_options), !dbg !5830
  %first55 = getelementptr inbounds %struct.apr_text_header, ptr %vsn_options, i32 0, i32 0, !dbg !5831
  %65 = load ptr, ptr %first55, align 8, !dbg !5831, !tbaa !3490
  store ptr %65, ptr %t, align 8, !dbg !5833, !tbaa !2416
  br label %for.cond56, !dbg !5834

for.cond56:                                       ; preds = %for.inc61, %if.then53
  %66 = load ptr, ptr %t, align 8, !dbg !5835, !tbaa !2416
  %cmp57 = icmp ne ptr %66, null, !dbg !5837
  br i1 %cmp57, label %for.body58, label %for.end63, !dbg !5838

for.body58:                                       ; preds = %for.cond56
  %67 = load ptr, ptr %r.addr, align 8, !dbg !5839, !tbaa !2416
  %headers_out59 = getelementptr inbounds %struct.request_rec, ptr %67, i32 0, i32 35, !dbg !5840
  %68 = load ptr, ptr %headers_out59, align 8, !dbg !5840, !tbaa !5817
  %69 = load ptr, ptr %t, align 8, !dbg !5841, !tbaa !2416
  %text60 = getelementptr inbounds %struct.apr_text, ptr %69, i32 0, i32 0, !dbg !5842
  %70 = load ptr, ptr %text60, align 8, !dbg !5842, !tbaa !2553
  call void @apr_table_addn(ptr noundef %68, ptr noundef @.str.53, ptr noundef %70), !dbg !5843
  br label %for.inc61, !dbg !5843

for.inc61:                                        ; preds = %for.body58
  %71 = load ptr, ptr %t, align 8, !dbg !5844, !tbaa !2416
  %next62 = getelementptr inbounds %struct.apr_text, ptr %71, i32 0, i32 1, !dbg !5845
  %72 = load ptr, ptr %next62, align 8, !dbg !5845, !tbaa !2558
  store ptr %72, ptr %t, align 8, !dbg !5846, !tbaa !2416
  br label %for.cond56, !dbg !5847, !llvm.loop !5848

for.end63:                                        ; preds = %for.cond56
  br label %if.end64, !dbg !5850

if.end64:                                         ; preds = %for.end63, %for.end51
  %73 = load ptr, ptr %r.addr, align 8, !dbg !5851, !tbaa !2416
  %pool65 = getelementptr inbounds %struct.request_rec, ptr %73, i32 0, i32 0, !dbg !5852
  %74 = load ptr, ptr %pool65, align 8, !dbg !5852, !tbaa !2792
  %call66 = call ptr @apr_array_make(ptr noundef %74, i32 noundef 5, i32 noundef 8), !dbg !5853
  store ptr %call66, ptr %uri_ary, align 8, !dbg !5854, !tbaa !2416
  %75 = load ptr, ptr %uri_ary, align 8, !dbg !5855, !tbaa !2416
  call void @dav_run_gather_propsets(ptr noundef %75), !dbg !5856
  store i32 0, ptr %i, align 4, !dbg !5857, !tbaa !2683
  br label %for.cond67, !dbg !5859

for.cond67:                                       ; preds = %for.inc79, %if.end64
  %76 = load i32, ptr %i, align 4, !dbg !5860, !tbaa !2683
  %77 = load ptr, ptr %uri_ary, align 8, !dbg !5862, !tbaa !2416
  %nelts68 = getelementptr inbounds %struct.apr_array_header_t, ptr %77, i32 0, i32 2, !dbg !5863
  %78 = load i32, ptr %nelts68, align 4, !dbg !5863, !tbaa !2702
  %cmp69 = icmp slt i32 %76, %78, !dbg !5864
  br i1 %cmp69, label %for.body70, label %for.end81, !dbg !5865

for.body70:                                       ; preds = %for.cond67
  %79 = load ptr, ptr %uri_ary, align 8, !dbg !5866, !tbaa !2416
  %elts71 = getelementptr inbounds %struct.apr_array_header_t, ptr %79, i32 0, i32 4, !dbg !5869
  %80 = load ptr, ptr %elts71, align 8, !dbg !5869, !tbaa !2715
  %81 = load i32, ptr %i, align 4, !dbg !5870, !tbaa !2683
  %idxprom = sext i32 %81 to i64, !dbg !5871
  %arrayidx = getelementptr inbounds ptr, ptr %80, i64 %idxprom, !dbg !5871
  %82 = load ptr, ptr %arrayidx, align 8, !dbg !5871, !tbaa !2416
  %cmp72 = icmp ne ptr %82, null, !dbg !5872
  br i1 %cmp72, label %if.then73, label %if.end78, !dbg !5873

if.then73:                                        ; preds = %for.body70
  %83 = load ptr, ptr %r.addr, align 8, !dbg !5874, !tbaa !2416
  %headers_out74 = getelementptr inbounds %struct.request_rec, ptr %83, i32 0, i32 35, !dbg !5875
  %84 = load ptr, ptr %headers_out74, align 8, !dbg !5875, !tbaa !5817
  %85 = load ptr, ptr %uri_ary, align 8, !dbg !5876, !tbaa !2416
  %elts75 = getelementptr inbounds %struct.apr_array_header_t, ptr %85, i32 0, i32 4, !dbg !5877
  %86 = load ptr, ptr %elts75, align 8, !dbg !5877, !tbaa !2715
  %87 = load i32, ptr %i, align 4, !dbg !5878, !tbaa !2683
  %idxprom76 = sext i32 %87 to i64, !dbg !5879
  %arrayidx77 = getelementptr inbounds ptr, ptr %86, i64 %idxprom76, !dbg !5879
  %88 = load ptr, ptr %arrayidx77, align 8, !dbg !5879, !tbaa !2416
  call void @apr_table_addn(ptr noundef %84, ptr noundef @.str.53, ptr noundef %88), !dbg !5880
  br label %if.end78, !dbg !5880

if.end78:                                         ; preds = %if.then73, %for.body70
  br label %for.inc79, !dbg !5881

for.inc79:                                        ; preds = %if.end78
  %89 = load i32, ptr %i, align 4, !dbg !5882, !tbaa !2683
  %inc80 = add nsw i32 %89, 1, !dbg !5882
  store i32 %inc80, ptr %i, align 4, !dbg !5882, !tbaa !2683
  br label %for.cond67, !dbg !5883, !llvm.loop !5884

for.end81:                                        ; preds = %for.cond67
  %90 = load ptr, ptr %r.addr, align 8, !dbg !5886, !tbaa !2416
  %headers_out82 = getelementptr inbounds %struct.request_rec, ptr %90, i32 0, i32 35, !dbg !5887
  %91 = load ptr, ptr %headers_out82, align 8, !dbg !5887, !tbaa !5817
  call void @apr_table_setn(ptr noundef %91, ptr noundef @.str.104, ptr noundef @.str.53), !dbg !5888
  %92 = load ptr, ptr %methods, align 8, !dbg !5889, !tbaa !2416
  call void @apr_table_addn(ptr noundef %92, ptr noundef @.str.105, ptr noundef @.str.106), !dbg !5890
  %93 = load ptr, ptr %r.addr, align 8, !dbg !5891, !tbaa !2416
  %94 = load ptr, ptr %resource, align 8, !dbg !5892, !tbaa !2416
  %call83 = call i32 @dav_get_resource_state(ptr noundef %93, ptr noundef %94), !dbg !5893
  switch i32 %call83, label %sw.default [
    i32 12, label %sw.bb
    i32 10, label %sw.bb90
    i32 11, label %sw.bb94
  ], !dbg !5894

sw.bb:                                            ; preds = %for.end81
  %95 = load ptr, ptr %methods, align 8, !dbg !5895, !tbaa !2416
  call void @apr_table_addn(ptr noundef %95, ptr noundef @.str.107, ptr noundef @.str.106), !dbg !5897
  %96 = load ptr, ptr %methods, align 8, !dbg !5898, !tbaa !2416
  call void @apr_table_addn(ptr noundef %96, ptr noundef @.str.108, ptr noundef @.str.106), !dbg !5899
  %97 = load ptr, ptr %methods, align 8, !dbg !5900, !tbaa !2416
  call void @apr_table_addn(ptr noundef %97, ptr noundef @.str.109, ptr noundef @.str.106), !dbg !5901
  %98 = load ptr, ptr %methods, align 8, !dbg !5902, !tbaa !2416
  call void @apr_table_addn(ptr noundef %98, ptr noundef @.str.110, ptr noundef @.str.106), !dbg !5903
  %99 = load ptr, ptr %methods, align 8, !dbg !5904, !tbaa !2416
  call void @apr_table_addn(ptr noundef %99, ptr noundef @.str.111, ptr noundef @.str.106), !dbg !5905
  %100 = load ptr, ptr %methods, align 8, !dbg !5906, !tbaa !2416
  call void @apr_table_addn(ptr noundef %100, ptr noundef @.str.112, ptr noundef @.str.106), !dbg !5907
  %101 = load ptr, ptr %methods, align 8, !dbg !5908, !tbaa !2416
  call void @apr_table_addn(ptr noundef %101, ptr noundef @.str.113, ptr noundef @.str.106), !dbg !5909
  %102 = load ptr, ptr %methods, align 8, !dbg !5910, !tbaa !2416
  call void @apr_table_addn(ptr noundef %102, ptr noundef @.str.114, ptr noundef @.str.106), !dbg !5911
  %103 = load ptr, ptr %methods, align 8, !dbg !5912, !tbaa !2416
  call void @apr_table_addn(ptr noundef %103, ptr noundef @.str.115, ptr noundef @.str.106), !dbg !5913
  %104 = load ptr, ptr %resource, align 8, !dbg !5914, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %104, i32 0, i32 2, !dbg !5916
  %105 = load i32, ptr %collection, align 8, !dbg !5916, !tbaa !4974
  %tobool84 = icmp ne i32 %105, 0, !dbg !5914
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !5917

if.then85:                                        ; preds = %sw.bb
  %106 = load ptr, ptr %methods, align 8, !dbg !5918, !tbaa !2416
  call void @apr_table_addn(ptr noundef %106, ptr noundef @.str.116, ptr noundef @.str.106), !dbg !5919
  br label %if.end86, !dbg !5919

if.end86:                                         ; preds = %if.then85, %sw.bb
  %107 = load ptr, ptr %locks_hooks, align 8, !dbg !5920, !tbaa !2416
  %cmp87 = icmp ne ptr %107, null, !dbg !5922
  br i1 %cmp87, label %if.then88, label %if.end89, !dbg !5923

if.then88:                                        ; preds = %if.end86
  %108 = load ptr, ptr %methods, align 8, !dbg !5924, !tbaa !2416
  call void @apr_table_addn(ptr noundef %108, ptr noundef @.str.117, ptr noundef @.str.106), !dbg !5926
  %109 = load ptr, ptr %methods, align 8, !dbg !5927, !tbaa !2416
  call void @apr_table_addn(ptr noundef %109, ptr noundef @.str.118, ptr noundef @.str.106), !dbg !5928
  br label %if.end89, !dbg !5929

if.end89:                                         ; preds = %if.then88, %if.end86
  br label %sw.epilog, !dbg !5930

sw.bb90:                                          ; preds = %for.end81
  %110 = load ptr, ptr %methods, align 8, !dbg !5931, !tbaa !2416
  call void @apr_table_addn(ptr noundef %110, ptr noundef @.str.119, ptr noundef @.str.106), !dbg !5932
  %111 = load ptr, ptr %methods, align 8, !dbg !5933, !tbaa !2416
  call void @apr_table_addn(ptr noundef %111, ptr noundef @.str.112, ptr noundef @.str.106), !dbg !5934
  %112 = load ptr, ptr %methods, align 8, !dbg !5935, !tbaa !2416
  call void @apr_table_addn(ptr noundef %112, ptr noundef @.str.116, ptr noundef @.str.106), !dbg !5936
  %113 = load ptr, ptr %locks_hooks, align 8, !dbg !5937, !tbaa !2416
  %cmp91 = icmp ne ptr %113, null, !dbg !5939
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !5940

if.then92:                                        ; preds = %sw.bb90
  %114 = load ptr, ptr %methods, align 8, !dbg !5941, !tbaa !2416
  call void @apr_table_addn(ptr noundef %114, ptr noundef @.str.117, ptr noundef @.str.106), !dbg !5943
  %115 = load ptr, ptr %methods, align 8, !dbg !5944, !tbaa !2416
  call void @apr_table_addn(ptr noundef %115, ptr noundef @.str.118, ptr noundef @.str.106), !dbg !5945
  br label %if.end93, !dbg !5946

if.end93:                                         ; preds = %if.then92, %sw.bb90
  br label %sw.epilog, !dbg !5947

sw.bb94:                                          ; preds = %for.end81
  %116 = load ptr, ptr %methods, align 8, !dbg !5948, !tbaa !2416
  call void @apr_table_addn(ptr noundef %116, ptr noundef @.str.119, ptr noundef @.str.106), !dbg !5949
  %117 = load ptr, ptr %methods, align 8, !dbg !5950, !tbaa !2416
  call void @apr_table_addn(ptr noundef %117, ptr noundef @.str.116, ptr noundef @.str.106), !dbg !5951
  %118 = load ptr, ptr %locks_hooks, align 8, !dbg !5952, !tbaa !2416
  %cmp95 = icmp ne ptr %118, null, !dbg !5954
  br i1 %cmp95, label %if.then96, label %if.end97, !dbg !5955

if.then96:                                        ; preds = %sw.bb94
  %119 = load ptr, ptr %methods, align 8, !dbg !5956, !tbaa !2416
  call void @apr_table_addn(ptr noundef %119, ptr noundef @.str.117, ptr noundef @.str.106), !dbg !5957
  br label %if.end97, !dbg !5957

if.end97:                                         ; preds = %if.then96, %sw.bb94
  br label %sw.epilog, !dbg !5958

sw.default:                                       ; preds = %for.end81
  br label %sw.epilog, !dbg !5959

sw.epilog:                                        ; preds = %sw.default, %if.end97, %if.end93, %if.end89
  %120 = load ptr, ptr %vsn_hooks, align 8, !dbg !5960, !tbaa !2416
  %cmp98 = icmp ne ptr %120, null, !dbg !5962
  br i1 %cmp98, label %if.then99, label %if.end138, !dbg !5963

if.then99:                                        ; preds = %sw.epilog
  %121 = load ptr, ptr %resource, align 8, !dbg !5964, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %121, i32 0, i32 1, !dbg !5967
  %122 = load i32, ptr %exists, align 4, !dbg !5967, !tbaa !4784
  %tobool100 = icmp ne i32 %122, 0, !dbg !5964
  br i1 %tobool100, label %if.else, label %if.then101, !dbg !5968

if.then101:                                       ; preds = %if.then99
  %123 = load ptr, ptr %vsn_hooks, align 8, !dbg !5969, !tbaa !2416
  %versionable = getelementptr inbounds %struct.dav_hooks_vsn, ptr %123, i32 0, i32 2, !dbg !5972
  %124 = load ptr, ptr %versionable, align 8, !dbg !5972, !tbaa !5973
  %125 = load ptr, ptr %resource, align 8, !dbg !5974, !tbaa !2416
  %call102 = call i32 %124(ptr noundef %125), !dbg !5975
  %tobool103 = icmp ne i32 %call102, 0, !dbg !5975
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !5976

if.then104:                                       ; preds = %if.then101
  %126 = load ptr, ptr %methods, align 8, !dbg !5977, !tbaa !2416
  call void @apr_table_addn(ptr noundef %126, ptr noundef @.str.120, ptr noundef @.str.106), !dbg !5978
  br label %if.end105, !dbg !5978

if.end105:                                        ; preds = %if.then104, %if.then101
  %127 = load ptr, ptr %vsn_hooks, align 8, !dbg !5979, !tbaa !2416
  %can_be_workspace = getelementptr inbounds %struct.dav_hooks_vsn, ptr %127, i32 0, i32 14, !dbg !5981
  %128 = load ptr, ptr %can_be_workspace, align 8, !dbg !5981, !tbaa !5982
  %cmp106 = icmp ne ptr %128, null, !dbg !5983
  br i1 %cmp106, label %land.lhs.true107, label %if.end112, !dbg !5984

land.lhs.true107:                                 ; preds = %if.end105
  %129 = load ptr, ptr %vsn_hooks, align 8, !dbg !5985, !tbaa !2416
  %can_be_workspace108 = getelementptr inbounds %struct.dav_hooks_vsn, ptr %129, i32 0, i32 14, !dbg !5986
  %130 = load ptr, ptr %can_be_workspace108, align 8, !dbg !5986, !tbaa !5982
  %131 = load ptr, ptr %resource, align 8, !dbg !5987, !tbaa !2416
  %call109 = call i32 %130(ptr noundef %131), !dbg !5988
  %tobool110 = icmp ne i32 %call109, 0, !dbg !5988
  br i1 %tobool110, label %if.then111, label %if.end112, !dbg !5989

if.then111:                                       ; preds = %land.lhs.true107
  %132 = load ptr, ptr %methods, align 8, !dbg !5990, !tbaa !2416
  call void @apr_table_addn(ptr noundef %132, ptr noundef @.str.121, ptr noundef @.str.106), !dbg !5991
  br label %if.end112, !dbg !5991

if.end112:                                        ; preds = %if.then111, %land.lhs.true107, %if.end105
  %133 = load ptr, ptr %vsn_hooks, align 8, !dbg !5992, !tbaa !2416
  %can_be_activity = getelementptr inbounds %struct.dav_hooks_vsn, ptr %133, i32 0, i32 16, !dbg !5994
  %134 = load ptr, ptr %can_be_activity, align 8, !dbg !5994, !tbaa !5995
  %cmp113 = icmp ne ptr %134, null, !dbg !5996
  br i1 %cmp113, label %land.lhs.true114, label %if.end119, !dbg !5997

land.lhs.true114:                                 ; preds = %if.end112
  %135 = load ptr, ptr %vsn_hooks, align 8, !dbg !5998, !tbaa !2416
  %can_be_activity115 = getelementptr inbounds %struct.dav_hooks_vsn, ptr %135, i32 0, i32 16, !dbg !5999
  %136 = load ptr, ptr %can_be_activity115, align 8, !dbg !5999, !tbaa !5995
  %137 = load ptr, ptr %resource, align 8, !dbg !6000, !tbaa !2416
  %call116 = call i32 %136(ptr noundef %137), !dbg !6001
  %tobool117 = icmp ne i32 %call116, 0, !dbg !6001
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !6002

if.then118:                                       ; preds = %land.lhs.true114
  %138 = load ptr, ptr %methods, align 8, !dbg !6003, !tbaa !2416
  call void @apr_table_addn(ptr noundef %138, ptr noundef @.str.122, ptr noundef @.str.106), !dbg !6004
  br label %if.end119, !dbg !6004

if.end119:                                        ; preds = %if.then118, %land.lhs.true114, %if.end112
  br label %if.end137, !dbg !6005

if.else:                                          ; preds = %if.then99
  %139 = load ptr, ptr %resource, align 8, !dbg !6006, !tbaa !2416
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %139, i32 0, i32 3, !dbg !6008
  %140 = load i32, ptr %versioned, align 4, !dbg !6008, !tbaa !6009
  %tobool120 = icmp ne i32 %140, 0, !dbg !6006
  br i1 %tobool120, label %if.else127, label %if.then121, !dbg !6010

if.then121:                                       ; preds = %if.else
  %141 = load ptr, ptr %vsn_hooks, align 8, !dbg !6011, !tbaa !2416
  %versionable122 = getelementptr inbounds %struct.dav_hooks_vsn, ptr %141, i32 0, i32 2, !dbg !6014
  %142 = load ptr, ptr %versionable122, align 8, !dbg !6014, !tbaa !5973
  %143 = load ptr, ptr %resource, align 8, !dbg !6015, !tbaa !2416
  %call123 = call i32 %142(ptr noundef %143), !dbg !6016
  %tobool124 = icmp ne i32 %call123, 0, !dbg !6016
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !6017

if.then125:                                       ; preds = %if.then121
  %144 = load ptr, ptr %methods, align 8, !dbg !6018, !tbaa !2416
  call void @apr_table_addn(ptr noundef %144, ptr noundef @.str.120, ptr noundef @.str.106), !dbg !6019
  br label %if.end126, !dbg !6019

if.end126:                                        ; preds = %if.then125, %if.then121
  br label %if.end136, !dbg !6020

if.else127:                                       ; preds = %if.else
  %145 = load ptr, ptr %resource, align 8, !dbg !6021, !tbaa !2416
  %working = getelementptr inbounds %struct.dav_resource, ptr %145, i32 0, i32 5, !dbg !6023
  %146 = load i32, ptr %working, align 4, !dbg !6023, !tbaa !6024
  %tobool128 = icmp ne i32 %146, 0, !dbg !6021
  br i1 %tobool128, label %if.then129, label %if.else130, !dbg !6025

if.then129:                                       ; preds = %if.else127
  %147 = load ptr, ptr %methods, align 8, !dbg !6026, !tbaa !2416
  call void @apr_table_addn(ptr noundef %147, ptr noundef @.str.123, ptr noundef @.str.106), !dbg !6028
  %148 = load ptr, ptr %methods, align 8, !dbg !6029, !tbaa !2416
  call void @apr_table_addn(ptr noundef %148, ptr noundef @.str.124, ptr noundef @.str.106), !dbg !6030
  br label %if.end135, !dbg !6031

if.else130:                                       ; preds = %if.else127
  %149 = load ptr, ptr %vsn_hooks, align 8, !dbg !6032, !tbaa !2416
  %add_label = getelementptr inbounds %struct.dav_hooks_vsn, ptr %149, i32 0, i32 12, !dbg !6034
  %150 = load ptr, ptr %add_label, align 8, !dbg !6034, !tbaa !6035
  %cmp131 = icmp ne ptr %150, null, !dbg !6036
  br i1 %cmp131, label %if.then132, label %if.else133, !dbg !6037

if.then132:                                       ; preds = %if.else130
  %151 = load ptr, ptr %methods, align 8, !dbg !6038, !tbaa !2416
  call void @apr_table_addn(ptr noundef %151, ptr noundef @.str.125, ptr noundef @.str.106), !dbg !6040
  %152 = load ptr, ptr %methods, align 8, !dbg !6041, !tbaa !2416
  call void @apr_table_addn(ptr noundef %152, ptr noundef @.str.126, ptr noundef @.str.106), !dbg !6042
  br label %if.end134, !dbg !6043

if.else133:                                       ; preds = %if.else130
  %153 = load ptr, ptr %methods, align 8, !dbg !6044, !tbaa !2416
  call void @apr_table_addn(ptr noundef %153, ptr noundef @.str.125, ptr noundef @.str.106), !dbg !6046
  br label %if.end134

if.end134:                                        ; preds = %if.else133, %if.then132
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then129
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end126
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end119
  br label %if.end138, !dbg !6047

if.end138:                                        ; preds = %if.end137, %sw.epilog
  %154 = load ptr, ptr %binding_hooks, align 8, !dbg !6048, !tbaa !2416
  %cmp139 = icmp ne ptr %154, null, !dbg !6050
  br i1 %cmp139, label %land.lhs.true140, label %if.end144, !dbg !6051

land.lhs.true140:                                 ; preds = %if.end138
  %155 = load ptr, ptr %binding_hooks, align 8, !dbg !6052, !tbaa !2416
  %is_bindable = getelementptr inbounds %struct.dav_hooks_binding, ptr %155, i32 0, i32 0, !dbg !6053
  %156 = load ptr, ptr %is_bindable, align 8, !dbg !6053, !tbaa !6054
  %157 = load ptr, ptr %resource, align 8, !dbg !6056, !tbaa !2416
  %call141 = call i32 %156(ptr noundef %157), !dbg !6057
  %tobool142 = icmp ne i32 %call141, 0, !dbg !6057
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !6058

if.then143:                                       ; preds = %land.lhs.true140
  %158 = load ptr, ptr %methods, align 8, !dbg !6059, !tbaa !2416
  call void @apr_table_addn(ptr noundef %158, ptr noundef @.str.127, ptr noundef @.str.106), !dbg !6061
  br label %if.end144, !dbg !6062

if.end144:                                        ; preds = %if.then143, %land.lhs.true140, %if.end138
  %159 = load ptr, ptr %search_hooks, align 8, !dbg !6063, !tbaa !2416
  %cmp145 = icmp ne ptr %159, null, !dbg !6065
  br i1 %cmp145, label %if.then146, label %if.end147, !dbg !6066

if.then146:                                       ; preds = %if.end144
  %160 = load ptr, ptr %methods, align 8, !dbg !6067, !tbaa !2416
  call void @apr_table_addn(ptr noundef %160, ptr noundef @.str.128, ptr noundef @.str.106), !dbg !6069
  br label %if.end147, !dbg !6070

if.end147:                                        ; preds = %if.then146, %if.end144
  %161 = load ptr, ptr %r.addr, align 8, !dbg !6071, !tbaa !2416
  %pool148 = getelementptr inbounds %struct.request_rec, ptr %161, i32 0, i32 0, !dbg !6072
  %162 = load ptr, ptr %pool148, align 8, !dbg !6072, !tbaa !2792
  %call149 = call ptr @ap_list_provider_names(ptr noundef %162, ptr noundef @.str.102, ptr noundef @.str.19), !dbg !6073
  store ptr %call149, ptr %extensions, align 8, !dbg !6074, !tbaa !2416
  %163 = load ptr, ptr %extensions, align 8, !dbg !6075, !tbaa !2416
  %elts150 = getelementptr inbounds %struct.apr_array_header_t, ptr %163, i32 0, i32 4, !dbg !6076
  %164 = load ptr, ptr %elts150, align 8, !dbg !6076, !tbaa !2715
  store ptr %164, ptr %entry5, align 8, !dbg !6077, !tbaa !2416
  store i32 0, ptr %i, align 4, !dbg !6078, !tbaa !2683
  br label %for.cond151, !dbg !6079

for.cond151:                                      ; preds = %for.inc178, %if.end147
  %165 = load i32, ptr %i, align 4, !dbg !6080, !tbaa !2683
  %166 = load ptr, ptr %extensions, align 8, !dbg !6081, !tbaa !2416
  %nelts152 = getelementptr inbounds %struct.apr_array_header_t, ptr %166, i32 0, i32 2, !dbg !6082
  %167 = load i32, ptr %nelts152, align 4, !dbg !6082, !tbaa !2702
  %cmp153 = icmp slt i32 %165, %167, !dbg !6083
  br i1 %cmp153, label %for.body154, label %for.end181, !dbg !6084

for.body154:                                      ; preds = %for.cond151
  call void @llvm.lifetime.start.p0(i64 8, ptr %options155) #10, !dbg !6085
  tail call void @llvm.dbg.declare(metadata ptr %options155, metadata !5616, metadata !DIExpression()), !dbg !6086
  %168 = load ptr, ptr %entry5, align 8, !dbg !6087, !tbaa !2416
  %provider_name156 = getelementptr inbounds %struct.ap_list_provider_names_t, ptr %168, i32 0, i32 0, !dbg !6088
  %169 = load ptr, ptr %provider_name156, align 8, !dbg !6088, !tbaa !5765
  %call157 = call ptr @dav_get_options_providers(ptr noundef %169), !dbg !6089
  store ptr %call157, ptr %options155, align 8, !dbg !6086, !tbaa !2416
  %170 = load ptr, ptr %options155, align 8, !dbg !6090, !tbaa !2416
  %tobool158 = icmp ne ptr %170, null, !dbg !6090
  br i1 %tobool158, label %land.lhs.true159, label %if.end177, !dbg !6091

land.lhs.true159:                                 ; preds = %for.body154
  %171 = load ptr, ptr %options155, align 8, !dbg !6092, !tbaa !2416
  %dav_method = getelementptr inbounds %struct.dav_options_provider, ptr %171, i32 0, i32 1, !dbg !6093
  %172 = load ptr, ptr %dav_method, align 8, !dbg !6093, !tbaa !6094
  %tobool160 = icmp ne ptr %172, null, !dbg !6092
  br i1 %tobool160, label %if.then161, label %if.end177, !dbg !6095

if.then161:                                       ; preds = %land.lhs.true159
  call void @llvm.lifetime.start.p0(i64 16, ptr %hoptions162) #10, !dbg !6096
  tail call void @llvm.dbg.declare(metadata ptr %hoptions162, metadata !5620, metadata !DIExpression()), !dbg !6097
  call void @llvm.memset.p0.i64(ptr align 8 %hoptions162, i8 0, i64 16, i1 false), !dbg !6097
  %173 = load ptr, ptr %options155, align 8, !dbg !6098, !tbaa !2416
  %dav_method163 = getelementptr inbounds %struct.dav_options_provider, ptr %173, i32 0, i32 1, !dbg !6099
  %174 = load ptr, ptr %dav_method163, align 8, !dbg !6099, !tbaa !6094
  %175 = load ptr, ptr %r.addr, align 8, !dbg !6100, !tbaa !2416
  %176 = load ptr, ptr %resource, align 8, !dbg !6101, !tbaa !2416
  %call164 = call ptr %174(ptr noundef %175, ptr noundef %176, ptr noundef %hoptions162), !dbg !6098
  %first165 = getelementptr inbounds %struct.apr_text_header, ptr %hoptions162, i32 0, i32 0, !dbg !6102
  %177 = load ptr, ptr %first165, align 8, !dbg !6102, !tbaa !3490
  store ptr %177, ptr %t, align 8, !dbg !6104, !tbaa !2416
  br label %for.cond166, !dbg !6105

for.cond166:                                      ; preds = %for.inc174, %if.then161
  %178 = load ptr, ptr %t, align 8, !dbg !6106, !tbaa !2416
  %tobool167 = icmp ne ptr %178, null, !dbg !6106
  br i1 %tobool167, label %land.rhs168, label %land.end171, !dbg !6108

land.rhs168:                                      ; preds = %for.cond166
  %179 = load ptr, ptr %t, align 8, !dbg !6109, !tbaa !2416
  %text169 = getelementptr inbounds %struct.apr_text, ptr %179, i32 0, i32 0, !dbg !6110
  %180 = load ptr, ptr %text169, align 8, !dbg !6110, !tbaa !2553
  %tobool170 = icmp ne ptr %180, null, !dbg !6108
  br label %land.end171

land.end171:                                      ; preds = %land.rhs168, %for.cond166
  %181 = phi i1 [ false, %for.cond166 ], [ %tobool170, %land.rhs168 ], !dbg !6111
  br i1 %181, label %for.body172, label %for.end176, !dbg !6112

for.body172:                                      ; preds = %land.end171
  %182 = load ptr, ptr %methods, align 8, !dbg !6113, !tbaa !2416
  %183 = load ptr, ptr %t, align 8, !dbg !6114, !tbaa !2416
  %text173 = getelementptr inbounds %struct.apr_text, ptr %183, i32 0, i32 0, !dbg !6115
  %184 = load ptr, ptr %text173, align 8, !dbg !6115, !tbaa !2553
  call void @apr_table_addn(ptr noundef %182, ptr noundef %184, ptr noundef @.str.106), !dbg !6116
  br label %for.inc174, !dbg !6116

for.inc174:                                       ; preds = %for.body172
  %185 = load ptr, ptr %t, align 8, !dbg !6117, !tbaa !2416
  %next175 = getelementptr inbounds %struct.apr_text, ptr %185, i32 0, i32 1, !dbg !6118
  %186 = load ptr, ptr %next175, align 8, !dbg !6118, !tbaa !2558
  store ptr %186, ptr %t, align 8, !dbg !6119, !tbaa !2416
  br label %for.cond166, !dbg !6120, !llvm.loop !6121

for.end176:                                       ; preds = %land.end171
  call void @llvm.lifetime.end.p0(i64 16, ptr %hoptions162) #10, !dbg !6123
  br label %if.end177, !dbg !6124

if.end177:                                        ; preds = %for.end176, %land.lhs.true159, %for.body154
  call void @llvm.lifetime.end.p0(i64 8, ptr %options155) #10, !dbg !6125
  br label %for.inc178, !dbg !6126

for.inc178:                                       ; preds = %if.end177
  %187 = load i32, ptr %i, align 4, !dbg !6127, !tbaa !2683
  %inc179 = add nsw i32 %187, 1, !dbg !6127
  store i32 %inc179, ptr %i, align 4, !dbg !6127, !tbaa !2683
  %188 = load ptr, ptr %entry5, align 8, !dbg !6128, !tbaa !2416
  %incdec.ptr180 = getelementptr inbounds %struct.ap_list_provider_names_t, ptr %188, i32 1, !dbg !6128
  store ptr %incdec.ptr180, ptr %entry5, align 8, !dbg !6128, !tbaa !2416
  br label %for.cond151, !dbg !6129, !llvm.loop !6130

for.end181:                                       ; preds = %for.cond151
  %189 = load ptr, ptr %methods, align 8, !dbg !6132, !tbaa !2416
  %call182 = call ptr @apr_table_elts(ptr noundef %189), !dbg !6133
  store ptr %call182, ptr %arr, align 8, !dbg !6134, !tbaa !2416
  %190 = load ptr, ptr %arr, align 8, !dbg !6135, !tbaa !2416
  %elts183 = getelementptr inbounds %struct.apr_array_header_t, ptr %190, i32 0, i32 4, !dbg !6136
  %191 = load ptr, ptr %elts183, align 8, !dbg !6136, !tbaa !2715
  store ptr %191, ptr %elts, align 8, !dbg !6137, !tbaa !2416
  store i32 0, ptr %text_size, align 4, !dbg !6138, !tbaa !2683
  store i32 0, ptr %i, align 4, !dbg !6139, !tbaa !2683
  br label %for.cond184, !dbg !6141

for.cond184:                                      ; preds = %for.inc199, %for.end181
  %192 = load i32, ptr %i, align 4, !dbg !6142, !tbaa !2683
  %193 = load ptr, ptr %arr, align 8, !dbg !6144, !tbaa !2416
  %nelts185 = getelementptr inbounds %struct.apr_array_header_t, ptr %193, i32 0, i32 2, !dbg !6145
  %194 = load i32, ptr %nelts185, align 4, !dbg !6145, !tbaa !2702
  %cmp186 = icmp slt i32 %192, %194, !dbg !6146
  br i1 %cmp186, label %for.body187, label %for.end201, !dbg !6147

for.body187:                                      ; preds = %for.cond184
  %195 = load ptr, ptr %elts, align 8, !dbg !6148, !tbaa !2416
  %196 = load i32, ptr %i, align 4, !dbg !6151, !tbaa !2683
  %idxprom188 = sext i32 %196 to i64, !dbg !6148
  %arrayidx189 = getelementptr inbounds %struct.apr_table_entry_t, ptr %195, i64 %idxprom188, !dbg !6148
  %key = getelementptr inbounds %struct.apr_table_entry_t, ptr %arrayidx189, i32 0, i32 0, !dbg !6152
  %197 = load ptr, ptr %key, align 8, !dbg !6152, !tbaa !6153
  %cmp190 = icmp eq ptr %197, null, !dbg !6155
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !6156

if.then191:                                       ; preds = %for.body187
  br label %for.inc199, !dbg !6157

if.end192:                                        ; preds = %for.body187
  %198 = load ptr, ptr %elts, align 8, !dbg !6158, !tbaa !2416
  %199 = load i32, ptr %i, align 4, !dbg !6159, !tbaa !2683
  %idxprom193 = sext i32 %199 to i64, !dbg !6158
  %arrayidx194 = getelementptr inbounds %struct.apr_table_entry_t, ptr %198, i64 %idxprom193, !dbg !6158
  %key195 = getelementptr inbounds %struct.apr_table_entry_t, ptr %arrayidx194, i32 0, i32 0, !dbg !6160
  %200 = load ptr, ptr %key195, align 8, !dbg !6160, !tbaa !6153
  %call196 = call i64 @strlen(ptr noundef %200) #11, !dbg !6161
  %add = add i64 %call196, 1, !dbg !6162
  %201 = load i32, ptr %text_size, align 4, !dbg !6163, !tbaa !2683
  %conv = sext i32 %201 to i64, !dbg !6163
  %add197 = add i64 %conv, %add, !dbg !6163
  %conv198 = trunc i64 %add197 to i32, !dbg !6163
  store i32 %conv198, ptr %text_size, align 4, !dbg !6163, !tbaa !2683
  br label %for.inc199, !dbg !6164

for.inc199:                                       ; preds = %if.end192, %if.then191
  %202 = load i32, ptr %i, align 4, !dbg !6165, !tbaa !2683
  %inc200 = add nsw i32 %202, 1, !dbg !6165
  store i32 %inc200, ptr %i, align 4, !dbg !6165, !tbaa !2683
  br label %for.cond184, !dbg !6166, !llvm.loop !6167

for.end201:                                       ; preds = %for.cond184
  %203 = load ptr, ptr %r.addr, align 8, !dbg !6169, !tbaa !2416
  %pool202 = getelementptr inbounds %struct.request_rec, ptr %203, i32 0, i32 0, !dbg !6170
  %204 = load ptr, ptr %pool202, align 8, !dbg !6170, !tbaa !2792
  %205 = load i32, ptr %text_size, align 4, !dbg !6171, !tbaa !2683
  %conv203 = sext i32 %205 to i64, !dbg !6171
  %call204 = call ptr @apr_palloc(ptr noundef %204, i64 noundef %conv203), !dbg !6172
  store ptr %call204, ptr %allow, align 8, !dbg !6173, !tbaa !2416
  store ptr %call204, ptr %s, align 8, !dbg !6174, !tbaa !2416
  store i32 0, ptr %i, align 4, !dbg !6175, !tbaa !2683
  br label %for.cond205, !dbg !6177

for.cond205:                                      ; preds = %for.inc227, %for.end201
  %206 = load i32, ptr %i, align 4, !dbg !6178, !tbaa !2683
  %207 = load ptr, ptr %arr, align 8, !dbg !6180, !tbaa !2416
  %nelts206 = getelementptr inbounds %struct.apr_array_header_t, ptr %207, i32 0, i32 2, !dbg !6181
  %208 = load i32, ptr %nelts206, align 4, !dbg !6181, !tbaa !2702
  %cmp207 = icmp slt i32 %206, %208, !dbg !6182
  br i1 %cmp207, label %for.body209, label %for.end229, !dbg !6183

for.body209:                                      ; preds = %for.cond205
  %209 = load ptr, ptr %elts, align 8, !dbg !6184, !tbaa !2416
  %210 = load i32, ptr %i, align 4, !dbg !6187, !tbaa !2683
  %idxprom210 = sext i32 %210 to i64, !dbg !6184
  %arrayidx211 = getelementptr inbounds %struct.apr_table_entry_t, ptr %209, i64 %idxprom210, !dbg !6184
  %key212 = getelementptr inbounds %struct.apr_table_entry_t, ptr %arrayidx211, i32 0, i32 0, !dbg !6188
  %211 = load ptr, ptr %key212, align 8, !dbg !6188, !tbaa !6153
  %cmp213 = icmp eq ptr %211, null, !dbg !6189
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !6190

if.then215:                                       ; preds = %for.body209
  br label %for.inc227, !dbg !6191

if.end216:                                        ; preds = %for.body209
  %212 = load ptr, ptr %s, align 8, !dbg !6192, !tbaa !2416
  %213 = load ptr, ptr %allow, align 8, !dbg !6194, !tbaa !2416
  %cmp217 = icmp ne ptr %212, %213, !dbg !6195
  br i1 %cmp217, label %if.then219, label %if.end221, !dbg !6196

if.then219:                                       ; preds = %if.end216
  %214 = load ptr, ptr %s, align 8, !dbg !6197, !tbaa !2416
  %incdec.ptr220 = getelementptr inbounds i8, ptr %214, i32 1, !dbg !6197
  store ptr %incdec.ptr220, ptr %s, align 8, !dbg !6197, !tbaa !2416
  store i8 44, ptr %214, align 1, !dbg !6198, !tbaa !2961
  br label %if.end221, !dbg !6199

if.end221:                                        ; preds = %if.then219, %if.end216
  %215 = load ptr, ptr %s, align 8, !dbg !6200, !tbaa !2416
  %216 = load ptr, ptr %elts, align 8, !dbg !6201, !tbaa !2416
  %217 = load i32, ptr %i, align 4, !dbg !6202, !tbaa !2683
  %idxprom222 = sext i32 %217 to i64, !dbg !6201
  %arrayidx223 = getelementptr inbounds %struct.apr_table_entry_t, ptr %216, i64 %idxprom222, !dbg !6201
  %key224 = getelementptr inbounds %struct.apr_table_entry_t, ptr %arrayidx223, i32 0, i32 0, !dbg !6203
  %218 = load ptr, ptr %key224, align 8, !dbg !6203, !tbaa !6153
  %call225 = call ptr @strcpy(ptr noundef %215, ptr noundef %218) #10, !dbg !6204
  %219 = load ptr, ptr %s, align 8, !dbg !6205, !tbaa !2416
  %call226 = call i64 @strlen(ptr noundef %219) #11, !dbg !6206
  %220 = load ptr, ptr %s, align 8, !dbg !6207, !tbaa !2416
  %add.ptr = getelementptr inbounds i8, ptr %220, i64 %call226, !dbg !6207
  store ptr %add.ptr, ptr %s, align 8, !dbg !6207, !tbaa !2416
  br label %for.inc227, !dbg !6208

for.inc227:                                       ; preds = %if.end221, %if.then215
  %221 = load i32, ptr %i, align 4, !dbg !6209, !tbaa !2683
  %inc228 = add nsw i32 %221, 1, !dbg !6209
  store i32 %inc228, ptr %i, align 4, !dbg !6209, !tbaa !2683
  br label %for.cond205, !dbg !6210, !llvm.loop !6211

for.end229:                                       ; preds = %for.cond205
  %222 = load ptr, ptr %r.addr, align 8, !dbg !6213, !tbaa !2416
  %headers_out230 = getelementptr inbounds %struct.request_rec, ptr %222, i32 0, i32 35, !dbg !6214
  %223 = load ptr, ptr %headers_out230, align 8, !dbg !6214, !tbaa !5817
  %224 = load ptr, ptr %allow, align 8, !dbg !6215, !tbaa !2416
  call void @apr_table_setn(ptr noundef %223, ptr noundef @.str.129, ptr noundef %224), !dbg !6216
  %225 = load ptr, ptr %search_hooks, align 8, !dbg !6217, !tbaa !2416
  %cmp231 = icmp ne ptr %225, null, !dbg !6219
  br i1 %cmp231, label %land.lhs.true233, label %if.end244, !dbg !6220

land.lhs.true233:                                 ; preds = %for.end229
  %226 = load ptr, ptr %search_hooks, align 8, !dbg !6221, !tbaa !2416
  %set_option_head = getelementptr inbounds %struct.dav_hooks_search, ptr %226, i32 0, i32 0, !dbg !6222
  %227 = load ptr, ptr %set_option_head, align 8, !dbg !6222, !tbaa !6223
  %cmp234 = icmp ne ptr %227, null, !dbg !6225
  br i1 %cmp234, label %if.then236, label %if.end244, !dbg !6226

if.then236:                                       ; preds = %land.lhs.true233
  %228 = load ptr, ptr %search_hooks, align 8, !dbg !6227, !tbaa !2416
  %set_option_head237 = getelementptr inbounds %struct.dav_hooks_search, ptr %228, i32 0, i32 0, !dbg !6230
  %229 = load ptr, ptr %set_option_head237, align 8, !dbg !6230, !tbaa !6223
  %230 = load ptr, ptr %r.addr, align 8, !dbg !6231, !tbaa !2416
  %call238 = call ptr %229(ptr noundef %230), !dbg !6232
  store ptr %call238, ptr %err, align 8, !dbg !6233, !tbaa !2416
  %cmp239 = icmp ne ptr %call238, null, !dbg !6234
  br i1 %cmp239, label %if.then241, label %if.end243, !dbg !6235

if.then241:                                       ; preds = %if.then236
  %231 = load ptr, ptr %r.addr, align 8, !dbg !6236, !tbaa !2416
  %232 = load ptr, ptr %err, align 8, !dbg !6238, !tbaa !2416
  %call242 = call i32 @dav_handle_err(ptr noundef %231, ptr noundef %232, ptr noundef null), !dbg !6239
  store i32 %call242, ptr %retval, align 4, !dbg !6240
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup313, !dbg !6240

if.end243:                                        ; preds = %if.then236
  br label %if.end244, !dbg !6241

if.end244:                                        ; preds = %if.end243, %land.lhs.true233, %for.end229
  %233 = load ptr, ptr %doc, align 8, !dbg !6242, !tbaa !2416
  %cmp245 = icmp eq ptr %233, null, !dbg !6244
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !6245

if.then247:                                       ; preds = %if.end244
  %234 = load ptr, ptr %r.addr, align 8, !dbg !6246, !tbaa !2416
  call void @ap_set_content_length(ptr noundef %234, i64 noundef 0), !dbg !6248
  store i32 -2, ptr %retval, align 4, !dbg !6249
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup313, !dbg !6249

if.end248:                                        ; preds = %if.end244
  %235 = load ptr, ptr %doc, align 8, !dbg !6250, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %235, i32 0, i32 0, !dbg !6251
  %236 = load ptr, ptr %root, align 8, !dbg !6251, !tbaa !6252
  %first_child = getelementptr inbounds %struct.apr_xml_elem, ptr %236, i32 0, i32 7, !dbg !6254
  %237 = load ptr, ptr %first_child, align 8, !dbg !6254, !tbaa !6255
  store ptr %237, ptr %elem, align 8, !dbg !6257, !tbaa !2416
  br label %for.cond249, !dbg !6258

for.cond249:                                      ; preds = %for.inc298, %if.end248
  %238 = load ptr, ptr %elem, align 8, !dbg !6259, !tbaa !2416
  %cmp250 = icmp ne ptr %238, null, !dbg !6260
  br i1 %cmp250, label %for.body252, label %for.end300, !dbg !6261

for.body252:                                      ; preds = %for.cond249
  call void @llvm.lifetime.start.p0(i64 4, ptr %core_option) #10, !dbg !6262
  tail call void @llvm.dbg.declare(metadata ptr %core_option, metadata !5623, metadata !DIExpression()), !dbg !6263
  store i32 0, ptr %core_option, align 4, !dbg !6263, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 8, ptr %err253) #10, !dbg !6264
  tail call void @llvm.dbg.declare(metadata ptr %err253, metadata !5627, metadata !DIExpression()), !dbg !6265
  store ptr null, ptr %err253, align 8, !dbg !6265, !tbaa !2416
  %239 = load ptr, ptr %elem, align 8, !dbg !6266, !tbaa !2416
  %ns = getelementptr inbounds %struct.apr_xml_elem, ptr %239, i32 0, i32 1, !dbg !6268
  %240 = load i32, ptr %ns, align 8, !dbg !6268, !tbaa !6269
  %cmp254 = icmp eq i32 %240, 0, !dbg !6270
  br i1 %cmp254, label %if.then256, label %if.end279, !dbg !6271

if.then256:                                       ; preds = %for.body252
  %241 = load ptr, ptr %elem, align 8, !dbg !6272, !tbaa !2416
  %name = getelementptr inbounds %struct.apr_xml_elem, ptr %241, i32 0, i32 0, !dbg !6275
  %242 = load ptr, ptr %name, align 8, !dbg !6275, !tbaa !6276
  %call257 = call i32 @strcmp(ptr noundef %242, ptr noundef @.str.130) #11, !dbg !6277
  %cmp258 = icmp eq i32 %call257, 0, !dbg !6278
  br i1 %cmp258, label %if.then260, label %if.else262, !dbg !6279

if.then260:                                       ; preds = %if.then256
  %243 = load ptr, ptr %r.addr, align 8, !dbg !6280, !tbaa !2416
  %244 = load ptr, ptr %elem, align 8, !dbg !6282, !tbaa !2416
  %245 = load ptr, ptr %methods, align 8, !dbg !6283, !tbaa !2416
  %call261 = call ptr @dav_gen_supported_methods(ptr noundef %243, ptr noundef %244, ptr noundef %245, ptr noundef %body), !dbg !6284
  store ptr %call261, ptr %err253, align 8, !dbg !6285, !tbaa !2416
  store i32 1, ptr %core_option, align 4, !dbg !6286, !tbaa !2683
  br label %if.end278, !dbg !6287

if.else262:                                       ; preds = %if.then256
  %246 = load ptr, ptr %elem, align 8, !dbg !6288, !tbaa !2416
  %name263 = getelementptr inbounds %struct.apr_xml_elem, ptr %246, i32 0, i32 0, !dbg !6290
  %247 = load ptr, ptr %name263, align 8, !dbg !6290, !tbaa !6276
  %call264 = call i32 @strcmp(ptr noundef %247, ptr noundef @.str.131) #11, !dbg !6291
  %cmp265 = icmp eq i32 %call264, 0, !dbg !6292
  br i1 %cmp265, label %if.then267, label %if.else269, !dbg !6293

if.then267:                                       ; preds = %if.else262
  %248 = load ptr, ptr %r.addr, align 8, !dbg !6294, !tbaa !2416
  %249 = load ptr, ptr %resource, align 8, !dbg !6296, !tbaa !2416
  %250 = load ptr, ptr %elem, align 8, !dbg !6297, !tbaa !2416
  %call268 = call ptr @dav_gen_supported_live_props(ptr noundef %248, ptr noundef %249, ptr noundef %250, ptr noundef %body), !dbg !6298
  store ptr %call268, ptr %err253, align 8, !dbg !6299, !tbaa !2416
  store i32 1, ptr %core_option, align 4, !dbg !6300, !tbaa !2683
  br label %if.end277, !dbg !6301

if.else269:                                       ; preds = %if.else262
  %251 = load ptr, ptr %elem, align 8, !dbg !6302, !tbaa !2416
  %name270 = getelementptr inbounds %struct.apr_xml_elem, ptr %251, i32 0, i32 0, !dbg !6304
  %252 = load ptr, ptr %name270, align 8, !dbg !6304, !tbaa !6276
  %call271 = call i32 @strcmp(ptr noundef %252, ptr noundef @.str.132) #11, !dbg !6305
  %cmp272 = icmp eq i32 %call271, 0, !dbg !6306
  br i1 %cmp272, label %if.then274, label %if.end276, !dbg !6307

if.then274:                                       ; preds = %if.else269
  %253 = load ptr, ptr %r.addr, align 8, !dbg !6308, !tbaa !2416
  %254 = load ptr, ptr %resource, align 8, !dbg !6310, !tbaa !2416
  %255 = load ptr, ptr %elem, align 8, !dbg !6311, !tbaa !2416
  %call275 = call ptr @dav_gen_supported_reports(ptr noundef %253, ptr noundef %254, ptr noundef %255, ptr noundef %body), !dbg !6312
  store ptr %call275, ptr %err253, align 8, !dbg !6313, !tbaa !2416
  store i32 1, ptr %core_option, align 4, !dbg !6314, !tbaa !2683
  br label %if.end276, !dbg !6315

if.end276:                                        ; preds = %if.then274, %if.else269
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.then267
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %if.then260
  br label %if.end279, !dbg !6316

if.end279:                                        ; preds = %if.end278, %for.body252
  %256 = load ptr, ptr %err253, align 8, !dbg !6317, !tbaa !2416
  %cmp280 = icmp ne ptr %256, null, !dbg !6319
  br i1 %cmp280, label %if.then282, label %if.end284, !dbg !6320

if.then282:                                       ; preds = %if.end279
  %257 = load ptr, ptr %r.addr, align 8, !dbg !6321, !tbaa !2416
  %258 = load ptr, ptr %err253, align 8, !dbg !6322, !tbaa !2416
  %call283 = call i32 @dav_handle_err(ptr noundef %257, ptr noundef %258, ptr noundef null), !dbg !6323
  store i32 %call283, ptr %retval, align 4, !dbg !6324
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6324

if.end284:                                        ; preds = %if.end279
  %259 = load i32, ptr %core_option, align 4, !dbg !6325, !tbaa !2683
  %tobool285 = icmp ne i32 %259, 0, !dbg !6325
  br i1 %tobool285, label %if.end296, label %land.lhs.true286, !dbg !6327

land.lhs.true286:                                 ; preds = %if.end284
  %260 = load ptr, ptr %vsn_hooks, align 8, !dbg !6328, !tbaa !2416
  %cmp287 = icmp ne ptr %260, null, !dbg !6329
  br i1 %cmp287, label %if.then289, label %if.end296, !dbg !6330

if.then289:                                       ; preds = %land.lhs.true286
  %261 = load ptr, ptr %vsn_hooks, align 8, !dbg !6331, !tbaa !2416
  %get_option = getelementptr inbounds %struct.dav_hooks_vsn, ptr %261, i32 0, i32 1, !dbg !6334
  %262 = load ptr, ptr %get_option, align 8, !dbg !6334, !tbaa !6335
  %263 = load ptr, ptr %resource, align 8, !dbg !6336, !tbaa !2416
  %264 = load ptr, ptr %elem, align 8, !dbg !6337, !tbaa !2416
  %call290 = call ptr %262(ptr noundef %263, ptr noundef %264, ptr noundef %body), !dbg !6338
  store ptr %call290, ptr %err253, align 8, !dbg !6339, !tbaa !2416
  %cmp291 = icmp ne ptr %call290, null, !dbg !6340
  br i1 %cmp291, label %if.then293, label %if.end295, !dbg !6341

if.then293:                                       ; preds = %if.then289
  %265 = load ptr, ptr %r.addr, align 8, !dbg !6342, !tbaa !2416
  %266 = load ptr, ptr %err253, align 8, !dbg !6344, !tbaa !2416
  %call294 = call i32 @dav_handle_err(ptr noundef %265, ptr noundef %266, ptr noundef null), !dbg !6345
  store i32 %call294, ptr %retval, align 4, !dbg !6346
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6346

if.end295:                                        ; preds = %if.then289
  br label %if.end296, !dbg !6347

if.end296:                                        ; preds = %if.end295, %land.lhs.true286, %if.end284
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6348
  br label %cleanup, !dbg !6348

cleanup:                                          ; preds = %if.end296, %if.then293, %if.then282
  call void @llvm.lifetime.end.p0(i64 8, ptr %err253) #10, !dbg !6348
  call void @llvm.lifetime.end.p0(i64 4, ptr %core_option) #10, !dbg !6348
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup313 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc298, !dbg !6349

for.inc298:                                       ; preds = %cleanup.cont
  %267 = load ptr, ptr %elem, align 8, !dbg !6350, !tbaa !2416
  %next299 = getelementptr inbounds %struct.apr_xml_elem, ptr %267, i32 0, i32 6, !dbg !6351
  %268 = load ptr, ptr %next299, align 8, !dbg !6351, !tbaa !6352
  store ptr %268, ptr %elem, align 8, !dbg !6353, !tbaa !2416
  br label %for.cond249, !dbg !6354, !llvm.loop !6355

for.end300:                                       ; preds = %for.cond249
  %269 = load ptr, ptr %r.addr, align 8, !dbg !6357, !tbaa !2416
  %status = getelementptr inbounds %struct.request_rec, ptr %269, i32 0, i32 15, !dbg !6358
  store i32 200, ptr %status, align 8, !dbg !6359, !tbaa !2690
  %270 = load ptr, ptr %r.addr, align 8, !dbg !6360, !tbaa !2416
  call void @ap_set_content_type(ptr noundef %270, ptr noundef @.str.9), !dbg !6361
  %271 = load ptr, ptr %r.addr, align 8, !dbg !6362, !tbaa !2416
  %call301 = call i32 @ap_rputs(ptr noundef @.str.133, ptr noundef %271), !dbg !6363
  %first302 = getelementptr inbounds %struct.apr_text_header, ptr %body, i32 0, i32 0, !dbg !6364
  %272 = load ptr, ptr %first302, align 8, !dbg !6364, !tbaa !3490
  store ptr %272, ptr %t, align 8, !dbg !6366, !tbaa !2416
  br label %for.cond303, !dbg !6367

for.cond303:                                      ; preds = %for.inc309, %for.end300
  %273 = load ptr, ptr %t, align 8, !dbg !6368, !tbaa !2416
  %cmp304 = icmp ne ptr %273, null, !dbg !6370
  br i1 %cmp304, label %for.body306, label %for.end311, !dbg !6371

for.body306:                                      ; preds = %for.cond303
  %274 = load ptr, ptr %t, align 8, !dbg !6372, !tbaa !2416
  %text307 = getelementptr inbounds %struct.apr_text, ptr %274, i32 0, i32 0, !dbg !6373
  %275 = load ptr, ptr %text307, align 8, !dbg !6373, !tbaa !2553
  %276 = load ptr, ptr %r.addr, align 8, !dbg !6374, !tbaa !2416
  %call308 = call i32 @ap_rputs(ptr noundef %275, ptr noundef %276), !dbg !6375
  br label %for.inc309, !dbg !6375

for.inc309:                                       ; preds = %for.body306
  %277 = load ptr, ptr %t, align 8, !dbg !6376, !tbaa !2416
  %next310 = getelementptr inbounds %struct.apr_text, ptr %277, i32 0, i32 1, !dbg !6377
  %278 = load ptr, ptr %next310, align 8, !dbg !6377, !tbaa !2558
  store ptr %278, ptr %t, align 8, !dbg !6378, !tbaa !2416
  br label %for.cond303, !dbg !6379, !llvm.loop !6380

for.end311:                                       ; preds = %for.cond303
  %279 = load ptr, ptr %r.addr, align 8, !dbg !6382, !tbaa !2416
  %call312 = call i32 @ap_rputs(ptr noundef @.str.134, ptr noundef %279), !dbg !6383
  store i32 -2, ptr %retval, align 4, !dbg !6384
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup313, !dbg !6384

cleanup313:                                       ; preds = %for.end311, %cleanup, %if.then247, %if.then241, %do.end, %if.then14, %if.then10, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %entry5) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %extensions) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %elem) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %uri_ary) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 4, ptr %text_size) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 16, ptr %body) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 16, ptr %vsn_options) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %methods) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %elts) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %arr) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %s) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %allow) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %dav_level) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %search_hooks) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %binding_hooks) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !6385
  call void @llvm.lifetime.end.p0(i64 8, ptr %locks_hooks) #10, !dbg !6385
  %280 = load i32, ptr %retval, align 4, !dbg !6385
  ret i32 %280, !dbg !6385
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_propfind(ptr noundef %r) #0 !dbg !6386 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %depth = alloca i32, align 4
  %err = alloca ptr, align 8
  %result = alloca i32, align 4
  %doc = alloca ptr, align 8
  %ctx = alloca %struct.dav_walker_ctx, align 8
  %multi_status = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %conf = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !6388, metadata !DIExpression()), !dbg !6441
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !6442
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !6389, metadata !DIExpression()), !dbg !6443
  call void @llvm.lifetime.start.p0(i64 4, ptr %depth) #10, !dbg !6444
  tail call void @llvm.dbg.declare(metadata ptr %depth, metadata !6390, metadata !DIExpression()), !dbg !6445
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !6446
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !6391, metadata !DIExpression()), !dbg !6447
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !6448
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6392, metadata !DIExpression()), !dbg !6449
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !6450
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !6393, metadata !DIExpression()), !dbg !6451
  call void @llvm.lifetime.start.p0(i64 152, ptr %ctx) #10, !dbg !6452
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !6394, metadata !DIExpression()), !dbg !6453
  call void @llvm.memset.p0.i64(ptr align 8 %ctx, i8 0, i64 152, i1 false), !dbg !6453
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_status) #10, !dbg !6454
  tail call void @llvm.dbg.declare(metadata ptr %multi_status, metadata !6437, metadata !DIExpression()), !dbg !6455
  %0 = load ptr, ptr %r.addr, align 8, !dbg !6456, !tbaa !2416
  %call = call ptr @dav_get_resource(ptr noundef %0, i32 noundef 1, i32 noundef 0, ptr noundef %resource), !dbg !6457
  store ptr %call, ptr %err, align 8, !dbg !6458, !tbaa !2416
  %1 = load ptr, ptr %err, align 8, !dbg !6459, !tbaa !2416
  %cmp = icmp ne ptr %1, null, !dbg !6461
  br i1 %cmp, label %if.then, label %if.end, !dbg !6462

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !6463, !tbaa !2416
  %3 = load ptr, ptr %err, align 8, !dbg !6464, !tbaa !2416
  %call1 = call i32 @dav_handle_err(ptr noundef %2, ptr noundef %3, ptr noundef null), !dbg !6465
  store i32 %call1, ptr %retval, align 4, !dbg !6466
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6466

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %r.addr, align 8, !dbg !6467, !tbaa !2416
  %call2 = call i32 @ap_xml_parse_input(ptr noundef %4, ptr noundef %doc), !dbg !6469
  store i32 %call2, ptr %result, align 4, !dbg !6470, !tbaa !2683
  %cmp3 = icmp ne i32 %call2, 0, !dbg !6471
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6472

if.then4:                                         ; preds = %if.end
  %5 = load i32, ptr %result, align 4, !dbg !6473, !tbaa !2683
  store i32 %5, ptr %retval, align 4, !dbg !6475
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6475

if.end5:                                          ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !6476, !tbaa !2416
  %7 = load ptr, ptr %resource, align 8, !dbg !6478, !tbaa !2416
  %8 = load ptr, ptr %doc, align 8, !dbg !6479, !tbaa !2416
  %call6 = call i32 @dav_run_method_precondition(ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef %8, ptr noundef %err), !dbg !6480
  %cmp7 = icmp ne i32 %call6, -1, !dbg !6481
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !6482

land.lhs.true:                                    ; preds = %if.end5
  %9 = load ptr, ptr %err, align 8, !dbg !6483, !tbaa !2416
  %tobool = icmp ne ptr %9, null, !dbg !6483
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !6484

if.then8:                                         ; preds = %land.lhs.true
  %10 = load ptr, ptr %r.addr, align 8, !dbg !6485, !tbaa !2416
  %11 = load ptr, ptr %err, align 8, !dbg !6487, !tbaa !2416
  %call9 = call i32 @dav_handle_err(ptr noundef %10, ptr noundef %11, ptr noundef null), !dbg !6488
  store i32 %call9, ptr %retval, align 4, !dbg !6489
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6489

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %12 = load ptr, ptr %r.addr, align 8, !dbg !6490, !tbaa !2416
  %13 = load ptr, ptr %resource, align 8, !dbg !6492, !tbaa !2416
  %call11 = call i32 @dav_get_resource_state(ptr noundef %12, ptr noundef %13), !dbg !6493
  %cmp12 = icmp eq i32 %call11, 11, !dbg !6494
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6495

if.then13:                                        ; preds = %if.end10
  store i32 404, ptr %retval, align 4, !dbg !6496
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6496

if.end14:                                         ; preds = %if.end10
  %14 = load ptr, ptr %r.addr, align 8, !dbg !6498, !tbaa !2416
  %call15 = call i32 @dav_get_depth(ptr noundef %14, i32 noundef 2147483647), !dbg !6500
  store i32 %call15, ptr %depth, align 4, !dbg !6501, !tbaa !2683
  %cmp16 = icmp slt i32 %call15, 0, !dbg !6502
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !6503

if.then17:                                        ; preds = %if.end14
  store i32 400, ptr %retval, align 4, !dbg !6504
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6504

if.end18:                                         ; preds = %if.end14
  %15 = load i32, ptr %depth, align 4, !dbg !6506, !tbaa !2683
  %cmp19 = icmp eq i32 %15, 2147483647, !dbg !6507
  br i1 %cmp19, label %land.lhs.true20, label %if.end30, !dbg !6508

land.lhs.true20:                                  ; preds = %if.end18
  %16 = load ptr, ptr %resource, align 8, !dbg !6509, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %16, i32 0, i32 2, !dbg !6510
  %17 = load i32, ptr %collection, align 8, !dbg !6510, !tbaa !4974
  %tobool21 = icmp ne i32 %17, 0, !dbg !6509
  br i1 %tobool21, label %if.then22, label %if.end30, !dbg !6511

if.then22:                                        ; preds = %land.lhs.true20
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !6512
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !6438, metadata !DIExpression()), !dbg !6513
  %18 = load ptr, ptr %r.addr, align 8, !dbg !6514, !tbaa !2416
  %per_dir_config = getelementptr inbounds %struct.request_rec, ptr %18, i32 0, i32 54, !dbg !6514
  %19 = load ptr, ptr %per_dir_config, align 8, !dbg !6514, !tbaa !2424
  %20 = load i32, ptr getelementptr inbounds (%struct.module_struct, ptr @dav_module, i32 0, i32 2), align 8, !dbg !6514, !tbaa !2431
  %idxprom = sext i32 %20 to i64, !dbg !6514
  %arrayidx = getelementptr inbounds ptr, ptr %19, i64 %idxprom, !dbg !6514
  %21 = load ptr, ptr %arrayidx, align 8, !dbg !6514, !tbaa !2416
  store ptr %21, ptr %conf, align 8, !dbg !6515, !tbaa !2416
  %22 = load ptr, ptr %conf, align 8, !dbg !6516, !tbaa !2416
  %allow_depthinfinity = getelementptr inbounds %struct.dav_dir_conf, ptr %22, i32 0, i32 4, !dbg !6518
  %23 = load i32, ptr %allow_depthinfinity, align 4, !dbg !6518, !tbaa !3673
  %cmp23 = icmp ne i32 %23, 2, !dbg !6519
  br i1 %cmp23, label %if.then24, label %if.end29, !dbg !6520

if.then24:                                        ; preds = %if.then22
  %24 = load ptr, ptr %r.addr, align 8, !dbg !6521, !tbaa !2416
  %25 = load ptr, ptr %r.addr, align 8, !dbg !6523, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %25, i32 0, i32 0, !dbg !6524
  %26 = load ptr, ptr %pool, align 8, !dbg !6524, !tbaa !2792
  %27 = load ptr, ptr %r.addr, align 8, !dbg !6525, !tbaa !2416
  %pool25 = getelementptr inbounds %struct.request_rec, ptr %27, i32 0, i32 0, !dbg !6525
  %28 = load ptr, ptr %pool25, align 8, !dbg !6525, !tbaa !2792
  %29 = load ptr, ptr %r.addr, align 8, !dbg !6525, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %29, i32 0, i32 47, !dbg !6525
  %30 = load ptr, ptr %uri, align 8, !dbg !6525, !tbaa !3183
  %call26 = call ptr @ap_escape_html2(ptr noundef %28, ptr noundef %30, i32 noundef 0), !dbg !6525
  %call27 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %26, ptr noundef @.str.157, ptr noundef %call26), !dbg !6526
  %call28 = call i32 @dav_error_response(ptr noundef %24, i32 noundef 403, ptr noundef %call27), !dbg !6527
  store i32 %call28, ptr %retval, align 4, !dbg !6528
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6528

if.end29:                                         ; preds = %if.then22
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6529
  br label %cleanup, !dbg !6529

cleanup:                                          ; preds = %if.end29, %if.then24
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !6529
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup119 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end30, !dbg !6530

if.end30:                                         ; preds = %cleanup.cont, %land.lhs.true20, %if.end18
  %31 = load ptr, ptr %doc, align 8, !dbg !6531, !tbaa !2416
  %tobool31 = icmp ne ptr %31, null, !dbg !6531
  br i1 %tobool31, label %land.lhs.true32, label %if.end36, !dbg !6533

land.lhs.true32:                                  ; preds = %if.end30
  %32 = load ptr, ptr %doc, align 8, !dbg !6534, !tbaa !2416
  %call33 = call i32 @dav_validate_root(ptr noundef %32, ptr noundef @.str.158), !dbg !6535
  %tobool34 = icmp ne i32 %call33, 0, !dbg !6535
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !6536

if.then35:                                        ; preds = %land.lhs.true32
  br label %do.body, !dbg !6537

do.body:                                          ; preds = %if.then35
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !6539

cond.true:                                        ; preds = %do.body
  %33 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !6539, !tbaa !2683
  br label %cond.end, !dbg !6539

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !6539

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %33, %cond.true ], [ -1, %cond.false ], !dbg !6539
  %34 = load ptr, ptr %r.addr, align 8, !dbg !6539, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2163, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %34, ptr noundef @.str.159), !dbg !6539
  br label %do.cond, !dbg !6542

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !6542

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !6543
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6543

if.end36:                                         ; preds = %land.lhs.true32, %if.end30
  %35 = load ptr, ptr %doc, align 8, !dbg !6544, !tbaa !2416
  %cmp37 = icmp eq ptr %35, null, !dbg !6546
  br i1 %cmp37, label %if.then40, label %lor.lhs.false, !dbg !6547

lor.lhs.false:                                    ; preds = %if.end36
  %36 = load ptr, ptr %doc, align 8, !dbg !6548, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %36, i32 0, i32 0, !dbg !6549
  %37 = load ptr, ptr %root, align 8, !dbg !6549, !tbaa !6252
  %call38 = call ptr @dav_find_child(ptr noundef %37, ptr noundef @.str.160), !dbg !6550
  %cmp39 = icmp ne ptr %call38, null, !dbg !6551
  br i1 %cmp39, label %if.then40, label %if.else, !dbg !6552

if.then40:                                        ; preds = %lor.lhs.false, %if.end36
  %propfind_type = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 5, !dbg !6553
  store i32 1, ptr %propfind_type, align 8, !dbg !6555, !tbaa !6556
  br label %if.end62, !dbg !6560

if.else:                                          ; preds = %lor.lhs.false
  %38 = load ptr, ptr %doc, align 8, !dbg !6561, !tbaa !2416
  %root41 = getelementptr inbounds %struct.apr_xml_doc, ptr %38, i32 0, i32 0, !dbg !6563
  %39 = load ptr, ptr %root41, align 8, !dbg !6563, !tbaa !6252
  %call42 = call ptr @dav_find_child(ptr noundef %39, ptr noundef @.str.161), !dbg !6564
  %cmp43 = icmp ne ptr %call42, null, !dbg !6565
  br i1 %cmp43, label %if.then44, label %if.else46, !dbg !6566

if.then44:                                        ; preds = %if.else
  %propfind_type45 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 5, !dbg !6567
  store i32 2, ptr %propfind_type45, align 8, !dbg !6569, !tbaa !6556
  br label %if.end61, !dbg !6570

if.else46:                                        ; preds = %if.else
  %40 = load ptr, ptr %doc, align 8, !dbg !6571, !tbaa !2416
  %root47 = getelementptr inbounds %struct.apr_xml_doc, ptr %40, i32 0, i32 0, !dbg !6573
  %41 = load ptr, ptr %root47, align 8, !dbg !6573, !tbaa !6252
  %call48 = call ptr @dav_find_child(ptr noundef %41, ptr noundef @.str.162), !dbg !6574
  %cmp49 = icmp ne ptr %call48, null, !dbg !6575
  br i1 %cmp49, label %if.then50, label %if.else52, !dbg !6576

if.then50:                                        ; preds = %if.else46
  %propfind_type51 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 5, !dbg !6577
  store i32 3, ptr %propfind_type51, align 8, !dbg !6579, !tbaa !6556
  br label %if.end60, !dbg !6580

if.else52:                                        ; preds = %if.else46
  br label %do.body53, !dbg !6581

do.body53:                                        ; preds = %if.else52
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true54, label %cond.false55, !dbg !6583

cond.true54:                                      ; preds = %do.body53
  %42 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !6583, !tbaa !2683
  br label %cond.end56, !dbg !6583

cond.false55:                                     ; preds = %do.body53
  br label %cond.end56, !dbg !6583

cond.end56:                                       ; preds = %cond.false55, %cond.true54
  %cond57 = phi i32 [ %42, %cond.true54 ], [ -1, %cond.false55 ], !dbg !6583
  %43 = load ptr, ptr %r.addr, align 8, !dbg !6583, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2184, i32 noundef %cond57, i32 noundef 3, i32 noundef 0, ptr noundef %43, ptr noundef @.str.163), !dbg !6583
  br label %do.cond58, !dbg !6586

do.cond58:                                        ; preds = %cond.end56
  br label %do.end59, !dbg !6586

do.end59:                                         ; preds = %do.cond58
  store i32 400, ptr %retval, align 4, !dbg !6587
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6587

if.end60:                                         ; preds = %if.then50
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then44
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then40
  %w = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6588
  %walk_type = getelementptr inbounds %struct.dav_walk_params, ptr %w, i32 0, i32 0, !dbg !6589
  store i32 3, ptr %walk_type, align 8, !dbg !6590, !tbaa !6591
  %w63 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6592
  %func = getelementptr inbounds %struct.dav_walk_params, ptr %w63, i32 0, i32 1, !dbg !6593
  store ptr @dav_propfind_walker, ptr %func, align 8, !dbg !6594, !tbaa !6595
  %w64 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6596
  %walk_ctx = getelementptr inbounds %struct.dav_walk_params, ptr %w64, i32 0, i32 2, !dbg !6597
  store ptr %ctx, ptr %walk_ctx, align 8, !dbg !6598, !tbaa !6599
  %44 = load ptr, ptr %r.addr, align 8, !dbg !6600, !tbaa !2416
  %pool65 = getelementptr inbounds %struct.request_rec, ptr %44, i32 0, i32 0, !dbg !6601
  %45 = load ptr, ptr %pool65, align 8, !dbg !6601, !tbaa !2792
  %w66 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6602
  %pool67 = getelementptr inbounds %struct.dav_walk_params, ptr %w66, i32 0, i32 3, !dbg !6603
  store ptr %45, ptr %pool67, align 8, !dbg !6604, !tbaa !6605
  %46 = load ptr, ptr %resource, align 8, !dbg !6606, !tbaa !2416
  %w68 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6607
  %root69 = getelementptr inbounds %struct.dav_walk_params, ptr %w68, i32 0, i32 4, !dbg !6608
  store ptr %46, ptr %root69, align 8, !dbg !6609, !tbaa !6610
  %47 = load ptr, ptr %doc, align 8, !dbg !6611, !tbaa !2416
  %doc70 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 4, !dbg !6612
  store ptr %47, ptr %doc70, align 8, !dbg !6613, !tbaa !6614
  %48 = load ptr, ptr %r.addr, align 8, !dbg !6615, !tbaa !2416
  %r71 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 3, !dbg !6616
  store ptr %48, ptr %r71, align 8, !dbg !6617, !tbaa !6618
  %49 = load ptr, ptr %r.addr, align 8, !dbg !6619, !tbaa !2416
  %pool72 = getelementptr inbounds %struct.request_rec, ptr %49, i32 0, i32 0, !dbg !6620
  %50 = load ptr, ptr %pool72, align 8, !dbg !6620, !tbaa !2792
  %51 = load ptr, ptr %r.addr, align 8, !dbg !6621, !tbaa !2416
  %connection = getelementptr inbounds %struct.request_rec, ptr %51, i32 0, i32 1, !dbg !6622
  %52 = load ptr, ptr %connection, align 8, !dbg !6622, !tbaa !2746
  %bucket_alloc = getelementptr inbounds %struct.conn_rec, ptr %52, i32 0, i32 16, !dbg !6623
  %53 = load ptr, ptr %bucket_alloc, align 8, !dbg !6623, !tbaa !2748
  %call73 = call ptr @apr_brigade_create(ptr noundef %50, ptr noundef %53), !dbg !6624
  %bb = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 1, !dbg !6625
  store ptr %call73, ptr %bb, align 8, !dbg !6626, !tbaa !6627
  %scratchpool = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 2, !dbg !6628
  %54 = load ptr, ptr %r.addr, align 8, !dbg !6628, !tbaa !2416
  %pool74 = getelementptr inbounds %struct.request_rec, ptr %54, i32 0, i32 0, !dbg !6628
  %55 = load ptr, ptr %pool74, align 8, !dbg !6628, !tbaa !2792
  %call75 = call i32 @apr_pool_create_ex(ptr noundef %scratchpool, ptr noundef %55, ptr noundef null, ptr noundef null), !dbg !6628
  %scratchpool76 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 2, !dbg !6629
  %56 = load ptr, ptr %scratchpool76, align 8, !dbg !6629, !tbaa !6630
  call void @apr_pool_tag(ptr noundef %56, ptr noundef @.str.164), !dbg !6631
  %57 = load ptr, ptr %r.addr, align 8, !dbg !6632, !tbaa !2416
  %w77 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6634
  %lockdb = getelementptr inbounds %struct.dav_walk_params, ptr %w77, i32 0, i32 5, !dbg !6635
  %call78 = call ptr @dav_open_lockdb(ptr noundef %57, i32 noundef 1, ptr noundef %lockdb), !dbg !6636
  store ptr %call78, ptr %err, align 8, !dbg !6637, !tbaa !2416
  %cmp79 = icmp ne ptr %call78, null, !dbg !6638
  br i1 %cmp79, label %if.then80, label %if.end84, !dbg !6639

if.then80:                                        ; preds = %if.end62
  %58 = load ptr, ptr %r.addr, align 8, !dbg !6640, !tbaa !2416
  %pool81 = getelementptr inbounds %struct.request_rec, ptr %58, i32 0, i32 0, !dbg !6642
  %59 = load ptr, ptr %pool81, align 8, !dbg !6642, !tbaa !2792
  %60 = load ptr, ptr %err, align 8, !dbg !6643, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %60, i32 0, i32 0, !dbg !6644
  %61 = load i32, ptr %status, align 8, !dbg !6644, !tbaa !2871
  %62 = load ptr, ptr %err, align 8, !dbg !6645, !tbaa !2416
  %call82 = call ptr @dav_push_error(ptr noundef %59, i32 noundef %61, i32 noundef 0, ptr noundef @.str.165, ptr noundef %62), !dbg !6646
  store ptr %call82, ptr %err, align 8, !dbg !6647, !tbaa !2416
  %63 = load ptr, ptr %r.addr, align 8, !dbg !6648, !tbaa !2416
  %64 = load ptr, ptr %err, align 8, !dbg !6649, !tbaa !2416
  %call83 = call i32 @dav_handle_err(ptr noundef %63, ptr noundef %64, ptr noundef null), !dbg !6650
  store i32 %call83, ptr %retval, align 4, !dbg !6651
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6651

if.end84:                                         ; preds = %if.end62
  %w85 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6652
  %lockdb86 = getelementptr inbounds %struct.dav_walk_params, ptr %w85, i32 0, i32 5, !dbg !6654
  %65 = load ptr, ptr %lockdb86, align 8, !dbg !6654, !tbaa !6655
  %cmp87 = icmp ne ptr %65, null, !dbg !6656
  br i1 %cmp87, label %if.then88, label %if.end91, !dbg !6657

if.then88:                                        ; preds = %if.end84
  %w89 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6658
  %walk_type90 = getelementptr inbounds %struct.dav_walk_params, ptr %w89, i32 0, i32 0, !dbg !6660
  %66 = load i32, ptr %walk_type90, align 8, !dbg !6661, !tbaa !6591
  %or = or i32 %66, 4, !dbg !6661
  store i32 %or, ptr %walk_type90, align 8, !dbg !6661, !tbaa !6591
  br label %if.end91, !dbg !6662

if.end91:                                         ; preds = %if.then88, %if.end84
  %bb92 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 1, !dbg !6663
  %67 = load ptr, ptr %bb92, align 8, !dbg !6663, !tbaa !6627
  %68 = load ptr, ptr %r.addr, align 8, !dbg !6664, !tbaa !2416
  %69 = load ptr, ptr %doc, align 8, !dbg !6665, !tbaa !2416
  %tobool93 = icmp ne ptr %69, null, !dbg !6665
  br i1 %tobool93, label %cond.true94, label %cond.false95, !dbg !6665

cond.true94:                                      ; preds = %if.end91
  %70 = load ptr, ptr %doc, align 8, !dbg !6666, !tbaa !2416
  %namespaces = getelementptr inbounds %struct.apr_xml_doc, ptr %70, i32 0, i32 1, !dbg !6667
  %71 = load ptr, ptr %namespaces, align 8, !dbg !6667, !tbaa !6668
  br label %cond.end96, !dbg !6665

cond.false95:                                     ; preds = %if.end91
  br label %cond.end96, !dbg !6665

cond.end96:                                       ; preds = %cond.false95, %cond.true94
  %cond97 = phi ptr [ %71, %cond.true94 ], [ null, %cond.false95 ], !dbg !6665
  call void @dav_begin_multistatus(ptr noundef %67, ptr noundef %68, i32 noundef 207, ptr noundef %cond97), !dbg !6669
  %72 = load ptr, ptr %resource, align 8, !dbg !6670, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %72, i32 0, i32 8, !dbg !6671
  %73 = load ptr, ptr %hooks, align 8, !dbg !6671, !tbaa !4791
  %walk = getelementptr inbounds %struct.dav_hooks_repository, ptr %73, i32 0, i32 15, !dbg !6672
  %74 = load ptr, ptr %walk, align 8, !dbg !6672, !tbaa !6673
  %w98 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6674
  %75 = load i32, ptr %depth, align 4, !dbg !6675, !tbaa !2683
  %call99 = call ptr %74(ptr noundef %w98, i32 noundef %75, ptr noundef %multi_status), !dbg !6676
  store ptr %call99, ptr %err, align 8, !dbg !6677, !tbaa !2416
  %w100 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6678
  %lockdb101 = getelementptr inbounds %struct.dav_walk_params, ptr %w100, i32 0, i32 5, !dbg !6680
  %76 = load ptr, ptr %lockdb101, align 8, !dbg !6680, !tbaa !6655
  %cmp102 = icmp ne ptr %76, null, !dbg !6681
  br i1 %cmp102, label %if.then103, label %if.end109, !dbg !6682

if.then103:                                       ; preds = %cond.end96
  %w104 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6683
  %lockdb105 = getelementptr inbounds %struct.dav_walk_params, ptr %w104, i32 0, i32 5, !dbg !6685
  %77 = load ptr, ptr %lockdb105, align 8, !dbg !6685, !tbaa !6655
  %hooks106 = getelementptr inbounds %struct.dav_lockdb, ptr %77, i32 0, i32 0, !dbg !6686
  %78 = load ptr, ptr %hooks106, align 8, !dbg !6686, !tbaa !3292
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %78, i32 0, i32 5, !dbg !6687
  %79 = load ptr, ptr %close_lockdb, align 8, !dbg !6687, !tbaa !3295
  %w107 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !6688
  %lockdb108 = getelementptr inbounds %struct.dav_walk_params, ptr %w107, i32 0, i32 5, !dbg !6689
  %80 = load ptr, ptr %lockdb108, align 8, !dbg !6689, !tbaa !6655
  call void %79(ptr noundef %80), !dbg !6690
  br label %if.end109, !dbg !6691

if.end109:                                        ; preds = %if.then103, %cond.end96
  %81 = load ptr, ptr %err, align 8, !dbg !6692, !tbaa !2416
  %cmp110 = icmp ne ptr %81, null, !dbg !6694
  br i1 %cmp110, label %if.then111, label %if.end116, !dbg !6695

if.then111:                                       ; preds = %if.end109
  %82 = load ptr, ptr %r.addr, align 8, !dbg !6696, !tbaa !2416
  %pool112 = getelementptr inbounds %struct.request_rec, ptr %82, i32 0, i32 0, !dbg !6698
  %83 = load ptr, ptr %pool112, align 8, !dbg !6698, !tbaa !2792
  %84 = load ptr, ptr %err, align 8, !dbg !6699, !tbaa !2416
  %status113 = getelementptr inbounds %struct.dav_error, ptr %84, i32 0, i32 0, !dbg !6700
  %85 = load i32, ptr %status113, align 8, !dbg !6700, !tbaa !2871
  %86 = load ptr, ptr %err, align 8, !dbg !6701, !tbaa !2416
  %call114 = call ptr @dav_push_error(ptr noundef %83, i32 noundef %85, i32 noundef 0, ptr noundef @.str.166, ptr noundef %86), !dbg !6702
  store ptr %call114, ptr %err, align 8, !dbg !6703, !tbaa !2416
  %87 = load ptr, ptr %r.addr, align 8, !dbg !6704, !tbaa !2416
  %88 = load ptr, ptr %err, align 8, !dbg !6705, !tbaa !2416
  call void @dav_log_err(ptr noundef %87, ptr noundef %88, i32 noundef 3), !dbg !6706
  %89 = load ptr, ptr %r.addr, align 8, !dbg !6707, !tbaa !2416
  %connection115 = getelementptr inbounds %struct.request_rec, ptr %89, i32 0, i32 1, !dbg !6708
  %90 = load ptr, ptr %connection115, align 8, !dbg !6708, !tbaa !2746
  %aborted = getelementptr inbounds %struct.conn_rec, ptr %90, i32 0, i32 21, !dbg !6709
  store i32 1, ptr %aborted, align 4, !dbg !6710, !tbaa !6711
  store i32 -2, ptr %retval, align 4, !dbg !6712
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6712

if.end116:                                        ; preds = %if.end109
  %91 = load ptr, ptr %r.addr, align 8, !dbg !6713, !tbaa !2416
  %bb117 = getelementptr inbounds %struct.dav_walker_ctx, ptr %ctx, i32 0, i32 1, !dbg !6714
  %92 = load ptr, ptr %bb117, align 8, !dbg !6714, !tbaa !6627
  %call118 = call i32 @dav_finish_multistatus(ptr noundef %91, ptr noundef %92), !dbg !6715
  store i32 -2, ptr %retval, align 4, !dbg !6716
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119, !dbg !6716

cleanup119:                                       ; preds = %if.end116, %if.then111, %if.then80, %do.end59, %do.end, %cleanup, %if.then17, %if.then13, %if.then8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_status) #10, !dbg !6717
  call void @llvm.lifetime.end.p0(i64 152, ptr %ctx) #10, !dbg !6717
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !6717
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !6717
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !6717
  call void @llvm.lifetime.end.p0(i64 4, ptr %depth) #10, !dbg !6717
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !6717
  %93 = load i32, ptr %retval, align 4, !dbg !6717
  ret i32 %93, !dbg !6717
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_proppatch(ptr noundef %r) #0 !dbg !6718 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %err = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %result = alloca i32, align 4
  %doc = alloca ptr, align 8
  %child = alloca ptr, align 8
  %propdb = alloca ptr, align 8
  %failure = alloca i32, align 4
  %resp = alloca %struct.dav_response, align 8
  %propstat_text = alloca ptr, align 8
  %ctx_list = alloca ptr, align 8
  %ctx = alloca ptr, align 8
  %av_info = alloca %struct.dav_auto_version_info, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %is_remove = alloca i32, align 4
  %prop_group = alloca ptr, align 8
  %one_prop = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !6720, metadata !DIExpression()), !dbg !6739
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !6740
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !6721, metadata !DIExpression()), !dbg !6741
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !6742
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !6722, metadata !DIExpression()), !dbg !6743
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !6744
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6723, metadata !DIExpression()), !dbg !6745
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !6746
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !6724, metadata !DIExpression()), !dbg !6747
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !6748
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !6725, metadata !DIExpression()), !dbg !6749
  call void @llvm.lifetime.start.p0(i64 8, ptr %propdb) #10, !dbg !6750
  tail call void @llvm.dbg.declare(metadata ptr %propdb, metadata !6726, metadata !DIExpression()), !dbg !6751
  call void @llvm.lifetime.start.p0(i64 4, ptr %failure) #10, !dbg !6752
  tail call void @llvm.dbg.declare(metadata ptr %failure, metadata !6727, metadata !DIExpression()), !dbg !6753
  store i32 0, ptr %failure, align 4, !dbg !6753, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 48, ptr %resp) #10, !dbg !6754
  tail call void @llvm.dbg.declare(metadata ptr %resp, metadata !6728, metadata !DIExpression()), !dbg !6755
  call void @llvm.memset.p0.i64(ptr align 8 %resp, i8 0, i64 48, i1 false), !dbg !6755
  call void @llvm.lifetime.start.p0(i64 8, ptr %propstat_text) #10, !dbg !6756
  tail call void @llvm.dbg.declare(metadata ptr %propstat_text, metadata !6729, metadata !DIExpression()), !dbg !6757
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx_list) #10, !dbg !6758
  tail call void @llvm.dbg.declare(metadata ptr %ctx_list, metadata !6730, metadata !DIExpression()), !dbg !6759
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx) #10, !dbg !6760
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !6731, metadata !DIExpression()), !dbg !6761
  call void @llvm.lifetime.start.p0(i64 24, ptr %av_info) #10, !dbg !6762
  tail call void @llvm.dbg.declare(metadata ptr %av_info, metadata !6732, metadata !DIExpression()), !dbg !6763
  %0 = load ptr, ptr %r.addr, align 8, !dbg !6764, !tbaa !2416
  %call = call ptr @dav_get_resource(ptr noundef %0, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !6765
  store ptr %call, ptr %err, align 8, !dbg !6766, !tbaa !2416
  %1 = load ptr, ptr %err, align 8, !dbg !6767, !tbaa !2416
  %cmp = icmp ne ptr %1, null, !dbg !6769
  br i1 %cmp, label %if.then, label %if.end, !dbg !6770

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !6771, !tbaa !2416
  %3 = load ptr, ptr %err, align 8, !dbg !6772, !tbaa !2416
  %call1 = call i32 @dav_handle_err(ptr noundef %2, ptr noundef %3, ptr noundef null), !dbg !6773
  store i32 %call1, ptr %retval, align 4, !dbg !6774
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6774

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %r.addr, align 8, !dbg !6775, !tbaa !2416
  %call2 = call i32 @ap_xml_parse_input(ptr noundef %4, ptr noundef %doc), !dbg !6777
  store i32 %call2, ptr %result, align 4, !dbg !6778, !tbaa !2683
  %cmp3 = icmp ne i32 %call2, 0, !dbg !6779
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6780

if.then4:                                         ; preds = %if.end
  %5 = load i32, ptr %result, align 4, !dbg !6781, !tbaa !2683
  store i32 %5, ptr %retval, align 4, !dbg !6783
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6783

if.end5:                                          ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !6784, !tbaa !2416
  %7 = load ptr, ptr %resource, align 8, !dbg !6786, !tbaa !2416
  %8 = load ptr, ptr %doc, align 8, !dbg !6787, !tbaa !2416
  %call6 = call i32 @dav_run_method_precondition(ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef %8, ptr noundef %err), !dbg !6788
  %cmp7 = icmp ne i32 %call6, -1, !dbg !6789
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !6790

land.lhs.true:                                    ; preds = %if.end5
  %9 = load ptr, ptr %err, align 8, !dbg !6791, !tbaa !2416
  %tobool = icmp ne ptr %9, null, !dbg !6791
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !6792

if.then8:                                         ; preds = %land.lhs.true
  %10 = load ptr, ptr %r.addr, align 8, !dbg !6793, !tbaa !2416
  %11 = load ptr, ptr %err, align 8, !dbg !6795, !tbaa !2416
  %call9 = call i32 @dav_handle_err(ptr noundef %10, ptr noundef %11, ptr noundef null), !dbg !6796
  store i32 %call9, ptr %retval, align 4, !dbg !6797
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6797

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %12 = load ptr, ptr %resource, align 8, !dbg !6798, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %12, i32 0, i32 1, !dbg !6800
  %13 = load i32, ptr %exists, align 4, !dbg !6800, !tbaa !4784
  %tobool11 = icmp ne i32 %13, 0, !dbg !6798
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !6801

if.then12:                                        ; preds = %if.end10
  store i32 404, ptr %retval, align 4, !dbg !6802
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6802

if.end13:                                         ; preds = %if.end10
  %14 = load ptr, ptr %doc, align 8, !dbg !6804, !tbaa !2416
  %cmp14 = icmp eq ptr %14, null, !dbg !6806
  br i1 %cmp14, label %if.then17, label %lor.lhs.false, !dbg !6807

lor.lhs.false:                                    ; preds = %if.end13
  %15 = load ptr, ptr %doc, align 8, !dbg !6808, !tbaa !2416
  %call15 = call i32 @dav_validate_root(ptr noundef %15, ptr noundef @.str.168), !dbg !6809
  %tobool16 = icmp ne i32 %call15, 0, !dbg !6809
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !6810

if.then17:                                        ; preds = %lor.lhs.false, %if.end13
  br label %do.body, !dbg !6811

do.body:                                          ; preds = %if.then17
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !6813

cond.true:                                        ; preds = %do.body
  %16 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !6813, !tbaa !2683
  br label %cond.end, !dbg !6813

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !6813

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ -1, %cond.false ], !dbg !6813
  %17 = load ptr, ptr %r.addr, align 8, !dbg !6813, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2424, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %17, ptr noundef @.str.169), !dbg !6813
  br label %do.cond, !dbg !6816

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !6816

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !6817
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6817

if.end18:                                         ; preds = %lor.lhs.false
  %18 = load ptr, ptr %r.addr, align 8, !dbg !6818, !tbaa !2416
  %19 = load ptr, ptr %resource, align 8, !dbg !6820, !tbaa !2416
  %call19 = call ptr @dav_validate_request(ptr noundef %18, ptr noundef %19, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 16, ptr noundef null), !dbg !6821
  store ptr %call19, ptr %err, align 8, !dbg !6822, !tbaa !2416
  %cmp20 = icmp ne ptr %call19, null, !dbg !6823
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !6824

if.then21:                                        ; preds = %if.end18
  %20 = load ptr, ptr %r.addr, align 8, !dbg !6825, !tbaa !2416
  %21 = load ptr, ptr %err, align 8, !dbg !6827, !tbaa !2416
  %call22 = call i32 @dav_handle_err(ptr noundef %20, ptr noundef %21, ptr noundef null), !dbg !6828
  store i32 %call22, ptr %retval, align 4, !dbg !6829
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6829

if.end23:                                         ; preds = %if.end18
  %22 = load ptr, ptr %r.addr, align 8, !dbg !6830, !tbaa !2416
  %23 = load ptr, ptr %resource, align 8, !dbg !6832, !tbaa !2416
  %call24 = call ptr @dav_auto_checkout(ptr noundef %22, ptr noundef %23, i32 noundef 0, ptr noundef %av_info), !dbg !6833
  store ptr %call24, ptr %err, align 8, !dbg !6834, !tbaa !2416
  %cmp25 = icmp ne ptr %call24, null, !dbg !6835
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !6836

if.then26:                                        ; preds = %if.end23
  %24 = load ptr, ptr %r.addr, align 8, !dbg !6837, !tbaa !2416
  %25 = load ptr, ptr %err, align 8, !dbg !6839, !tbaa !2416
  %call27 = call i32 @dav_handle_err(ptr noundef %24, ptr noundef %25, ptr noundef null), !dbg !6840
  store i32 %call27, ptr %retval, align 4, !dbg !6841
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6841

if.end28:                                         ; preds = %if.end23
  %26 = load ptr, ptr %r.addr, align 8, !dbg !6842, !tbaa !2416
  %27 = load ptr, ptr %resource, align 8, !dbg !6844, !tbaa !2416
  %28 = load ptr, ptr %doc, align 8, !dbg !6845, !tbaa !2416
  %namespaces = getelementptr inbounds %struct.apr_xml_doc, ptr %28, i32 0, i32 1, !dbg !6846
  %29 = load ptr, ptr %namespaces, align 8, !dbg !6846, !tbaa !6668
  %call29 = call ptr @dav_open_propdb(ptr noundef %26, ptr noundef null, ptr noundef %27, i32 noundef 0, ptr noundef %29, ptr noundef %propdb), !dbg !6847
  store ptr %call29, ptr %err, align 8, !dbg !6848, !tbaa !2416
  %cmp30 = icmp ne ptr %call29, null, !dbg !6849
  br i1 %cmp30, label %if.then31, label %if.end39, !dbg !6850

if.then31:                                        ; preds = %if.end28
  %30 = load ptr, ptr %r.addr, align 8, !dbg !6851, !tbaa !2416
  %31 = load ptr, ptr %resource, align 8, !dbg !6853, !tbaa !2416
  %call32 = call ptr @dav_auto_checkin(ptr noundef %30, ptr noundef %31, i32 noundef 1, i32 noundef 0, ptr noundef %av_info), !dbg !6854
  %32 = load ptr, ptr %r.addr, align 8, !dbg !6855, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %32, i32 0, i32 0, !dbg !6856
  %33 = load ptr, ptr %pool, align 8, !dbg !6856, !tbaa !2792
  %34 = load ptr, ptr %r.addr, align 8, !dbg !6857, !tbaa !2416
  %pool33 = getelementptr inbounds %struct.request_rec, ptr %34, i32 0, i32 0, !dbg !6858
  %35 = load ptr, ptr %pool33, align 8, !dbg !6858, !tbaa !2792
  %36 = load ptr, ptr %r.addr, align 8, !dbg !6859, !tbaa !2416
  %pool34 = getelementptr inbounds %struct.request_rec, ptr %36, i32 0, i32 0, !dbg !6859
  %37 = load ptr, ptr %pool34, align 8, !dbg !6859, !tbaa !2792
  %38 = load ptr, ptr %r.addr, align 8, !dbg !6859, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %38, i32 0, i32 47, !dbg !6859
  %39 = load ptr, ptr %uri, align 8, !dbg !6859, !tbaa !3183
  %call35 = call ptr @ap_escape_html2(ptr noundef %37, ptr noundef %39, i32 noundef 0), !dbg !6859
  %call36 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %35, ptr noundef @.str.170, ptr noundef %call35), !dbg !6860
  %40 = load ptr, ptr %err, align 8, !dbg !6861, !tbaa !2416
  %call37 = call ptr @dav_push_error(ptr noundef %33, i32 noundef 500, i32 noundef 0, ptr noundef %call36, ptr noundef %40), !dbg !6862
  store ptr %call37, ptr %err, align 8, !dbg !6863, !tbaa !2416
  %41 = load ptr, ptr %r.addr, align 8, !dbg !6864, !tbaa !2416
  %42 = load ptr, ptr %err, align 8, !dbg !6865, !tbaa !2416
  %call38 = call i32 @dav_handle_err(ptr noundef %41, ptr noundef %42, ptr noundef null), !dbg !6866
  store i32 %call38, ptr %retval, align 4, !dbg !6867
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !6867

if.end39:                                         ; preds = %if.end28
  %43 = load ptr, ptr %r.addr, align 8, !dbg !6868, !tbaa !2416
  %pool40 = getelementptr inbounds %struct.request_rec, ptr %43, i32 0, i32 0, !dbg !6869
  %44 = load ptr, ptr %pool40, align 8, !dbg !6869, !tbaa !2792
  %call41 = call ptr @apr_array_make(ptr noundef %44, i32 noundef 10, i32 noundef 56), !dbg !6870
  store ptr %call41, ptr %ctx_list, align 8, !dbg !6871, !tbaa !2416
  %45 = load ptr, ptr %doc, align 8, !dbg !6872, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %45, i32 0, i32 0, !dbg !6873
  %46 = load ptr, ptr %root, align 8, !dbg !6873, !tbaa !6252
  %first_child = getelementptr inbounds %struct.apr_xml_elem, ptr %46, i32 0, i32 7, !dbg !6874
  %47 = load ptr, ptr %first_child, align 8, !dbg !6874, !tbaa !6255
  store ptr %47, ptr %child, align 8, !dbg !6875, !tbaa !2416
  br label %for.cond, !dbg !6876

for.cond:                                         ; preds = %for.inc86, %if.end39
  %48 = load ptr, ptr %child, align 8, !dbg !6877, !tbaa !2416
  %tobool42 = icmp ne ptr %48, null, !dbg !6878
  br i1 %tobool42, label %for.body, label %for.end88, !dbg !6878

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_remove) #10, !dbg !6879
  tail call void @llvm.dbg.declare(metadata ptr %is_remove, metadata !6733, metadata !DIExpression()), !dbg !6880
  call void @llvm.lifetime.start.p0(i64 8, ptr %prop_group) #10, !dbg !6881
  tail call void @llvm.dbg.declare(metadata ptr %prop_group, metadata !6737, metadata !DIExpression()), !dbg !6882
  call void @llvm.lifetime.start.p0(i64 8, ptr %one_prop) #10, !dbg !6883
  tail call void @llvm.dbg.declare(metadata ptr %one_prop, metadata !6738, metadata !DIExpression()), !dbg !6884
  %49 = load ptr, ptr %child, align 8, !dbg !6885, !tbaa !2416
  %ns = getelementptr inbounds %struct.apr_xml_elem, ptr %49, i32 0, i32 1, !dbg !6887
  %50 = load i32, ptr %ns, align 8, !dbg !6887, !tbaa !6269
  %cmp43 = icmp ne i32 %50, 0, !dbg !6888
  br i1 %cmp43, label %if.then52, label %lor.lhs.false44, !dbg !6889

lor.lhs.false44:                                  ; preds = %for.body
  %51 = load ptr, ptr %child, align 8, !dbg !6890, !tbaa !2416
  %name = getelementptr inbounds %struct.apr_xml_elem, ptr %51, i32 0, i32 0, !dbg !6891
  %52 = load ptr, ptr %name, align 8, !dbg !6891, !tbaa !6276
  %call45 = call i32 @strcmp(ptr noundef %52, ptr noundef @.str.171) #11, !dbg !6892
  %cmp46 = icmp eq i32 %call45, 0, !dbg !6893
  %conv = zext i1 %cmp46 to i32, !dbg !6893
  store i32 %conv, ptr %is_remove, align 4, !dbg !6894, !tbaa !2683
  br i1 %cmp46, label %if.end53, label %land.lhs.true47, !dbg !6895

land.lhs.true47:                                  ; preds = %lor.lhs.false44
  %53 = load ptr, ptr %child, align 8, !dbg !6896, !tbaa !2416
  %name48 = getelementptr inbounds %struct.apr_xml_elem, ptr %53, i32 0, i32 0, !dbg !6897
  %54 = load ptr, ptr %name48, align 8, !dbg !6897, !tbaa !6276
  %call49 = call i32 @strcmp(ptr noundef %54, ptr noundef @.str.172) #11, !dbg !6898
  %cmp50 = icmp ne i32 %call49, 0, !dbg !6899
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !6900

if.then52:                                        ; preds = %land.lhs.true47, %for.body
  store i32 6, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6901

if.end53:                                         ; preds = %land.lhs.true47, %lor.lhs.false44
  %55 = load ptr, ptr %child, align 8, !dbg !6903, !tbaa !2416
  %call54 = call ptr @dav_find_child(ptr noundef %55, ptr noundef @.str.162), !dbg !6905
  store ptr %call54, ptr %prop_group, align 8, !dbg !6906, !tbaa !2416
  %cmp55 = icmp eq ptr %call54, null, !dbg !6907
  br i1 %cmp55, label %if.then57, label %if.end66, !dbg !6908

if.then57:                                        ; preds = %if.end53
  %56 = load ptr, ptr %propdb, align 8, !dbg !6909, !tbaa !2416
  call void @dav_close_propdb(ptr noundef %56), !dbg !6911
  %57 = load ptr, ptr %r.addr, align 8, !dbg !6912, !tbaa !2416
  %58 = load ptr, ptr %resource, align 8, !dbg !6913, !tbaa !2416
  %call58 = call ptr @dav_auto_checkin(ptr noundef %57, ptr noundef %58, i32 noundef 1, i32 noundef 0, ptr noundef %av_info), !dbg !6914
  br label %do.body59, !dbg !6915

do.body59:                                        ; preds = %if.then57
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true60, label %cond.false61, !dbg !6916

cond.true60:                                      ; preds = %do.body59
  %59 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !6916, !tbaa !2683
  br label %cond.end62, !dbg !6916

cond.false61:                                     ; preds = %do.body59
  br label %cond.end62, !dbg !6916

cond.end62:                                       ; preds = %cond.false61, %cond.true60
  %cond63 = phi i32 [ %59, %cond.true60 ], [ -1, %cond.false61 ], !dbg !6916
  %60 = load ptr, ptr %r.addr, align 8, !dbg !6916, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2488, i32 noundef %cond63, i32 noundef 3, i32 noundef 0, ptr noundef %60, ptr noundef @.str.173), !dbg !6916
  br label %do.cond64, !dbg !6919

do.cond64:                                        ; preds = %cond.end62
  br label %do.end65, !dbg !6919

do.end65:                                         ; preds = %do.cond64
  store i32 400, ptr %retval, align 4, !dbg !6920
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6920

if.end66:                                         ; preds = %if.end53
  %61 = load ptr, ptr %prop_group, align 8, !dbg !6921, !tbaa !2416
  %first_child67 = getelementptr inbounds %struct.apr_xml_elem, ptr %61, i32 0, i32 7, !dbg !6923
  %62 = load ptr, ptr %first_child67, align 8, !dbg !6923, !tbaa !6255
  store ptr %62, ptr %one_prop, align 8, !dbg !6924, !tbaa !2416
  br label %for.cond68, !dbg !6925

for.cond68:                                       ; preds = %for.inc, %if.end66
  %63 = load ptr, ptr %one_prop, align 8, !dbg !6926, !tbaa !2416
  %tobool69 = icmp ne ptr %63, null, !dbg !6928
  br i1 %tobool69, label %for.body70, label %for.end, !dbg !6928

for.body70:                                       ; preds = %for.cond68
  %64 = load ptr, ptr %ctx_list, align 8, !dbg !6929, !tbaa !2416
  %call71 = call ptr @apr_array_push(ptr noundef %64), !dbg !6931
  store ptr %call71, ptr %ctx, align 8, !dbg !6932, !tbaa !2416
  %65 = load ptr, ptr %propdb, align 8, !dbg !6933, !tbaa !2416
  %66 = load ptr, ptr %ctx, align 8, !dbg !6934, !tbaa !2416
  %propdb72 = getelementptr inbounds %struct.dav_prop_ctx, ptr %66, i32 0, i32 0, !dbg !6935
  store ptr %65, ptr %propdb72, align 8, !dbg !6936, !tbaa !6937
  %67 = load i32, ptr %is_remove, align 4, !dbg !6938, !tbaa !2683
  %tobool73 = icmp ne i32 %67, 0, !dbg !6938
  %68 = zext i1 %tobool73 to i64, !dbg !6938
  %cond74 = select i1 %tobool73, i32 2, i32 1, !dbg !6938
  %69 = load ptr, ptr %ctx, align 8, !dbg !6939, !tbaa !2416
  %operation = getelementptr inbounds %struct.dav_prop_ctx, ptr %69, i32 0, i32 2, !dbg !6940
  store i32 %cond74, ptr %operation, align 8, !dbg !6941, !tbaa !3419
  %70 = load ptr, ptr %one_prop, align 8, !dbg !6942, !tbaa !2416
  %71 = load ptr, ptr %ctx, align 8, !dbg !6943, !tbaa !2416
  %prop = getelementptr inbounds %struct.dav_prop_ctx, ptr %71, i32 0, i32 1, !dbg !6944
  store ptr %70, ptr %prop, align 8, !dbg !6945, !tbaa !3403
  %72 = load ptr, ptr %r.addr, align 8, !dbg !6946, !tbaa !2416
  %73 = load ptr, ptr %ctx, align 8, !dbg !6947, !tbaa !2416
  %r75 = getelementptr inbounds %struct.dav_prop_ctx, ptr %73, i32 0, i32 7, !dbg !6948
  store ptr %72, ptr %r75, align 8, !dbg !6949, !tbaa !6950
  %74 = load ptr, ptr %ctx, align 8, !dbg !6951, !tbaa !2416
  call void @dav_prop_validate(ptr noundef %74), !dbg !6952
  %75 = load ptr, ptr %ctx, align 8, !dbg !6953, !tbaa !2416
  %err76 = getelementptr inbounds %struct.dav_prop_ctx, ptr %75, i32 0, i32 6, !dbg !6953
  %76 = load ptr, ptr %err76, align 8, !dbg !6953, !tbaa !3412
  %tobool77 = icmp ne ptr %76, null, !dbg !6953
  br i1 %tobool77, label %land.lhs.true78, label %if.end83, !dbg !6953

land.lhs.true78:                                  ; preds = %for.body70
  %77 = load ptr, ptr %ctx, align 8, !dbg !6953, !tbaa !2416
  %err79 = getelementptr inbounds %struct.dav_prop_ctx, ptr %77, i32 0, i32 6, !dbg !6953
  %78 = load ptr, ptr %err79, align 8, !dbg !6953, !tbaa !3412
  %status = getelementptr inbounds %struct.dav_error, ptr %78, i32 0, i32 0, !dbg !6953
  %79 = load i32, ptr %status, align 8, !dbg !6953, !tbaa !2871
  %cmp80 = icmp sge i32 %79, 300, !dbg !6953
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !6955

if.then82:                                        ; preds = %land.lhs.true78
  store i32 1, ptr %failure, align 4, !dbg !6956, !tbaa !2683
  br label %if.end83, !dbg !6958

if.end83:                                         ; preds = %if.then82, %land.lhs.true78, %for.body70
  br label %for.inc, !dbg !6959

for.inc:                                          ; preds = %if.end83
  %80 = load ptr, ptr %one_prop, align 8, !dbg !6960, !tbaa !2416
  %next = getelementptr inbounds %struct.apr_xml_elem, ptr %80, i32 0, i32 6, !dbg !6961
  %81 = load ptr, ptr %next, align 8, !dbg !6961, !tbaa !6352
  store ptr %81, ptr %one_prop, align 8, !dbg !6962, !tbaa !2416
  br label %for.cond68, !dbg !6963, !llvm.loop !6964

for.end:                                          ; preds = %for.cond68
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6966
  br label %cleanup, !dbg !6966

cleanup:                                          ; preds = %for.end, %do.end65, %if.then52
  call void @llvm.lifetime.end.p0(i64 8, ptr %one_prop) #10, !dbg !6966
  call void @llvm.lifetime.end.p0(i64 8, ptr %prop_group) #10, !dbg !6966
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_remove) #10, !dbg !6966
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup108 [
    i32 0, label %cleanup.cont
    i32 6, label %for.inc86
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc86, !dbg !6967

for.inc86:                                        ; preds = %cleanup.cont, %cleanup
  %82 = load ptr, ptr %child, align 8, !dbg !6968, !tbaa !2416
  %next87 = getelementptr inbounds %struct.apr_xml_elem, ptr %82, i32 0, i32 6, !dbg !6969
  %83 = load ptr, ptr %next87, align 8, !dbg !6969, !tbaa !6352
  store ptr %83, ptr %child, align 8, !dbg !6970, !tbaa !2416
  br label %for.cond, !dbg !6971, !llvm.loop !6972

for.end88:                                        ; preds = %for.cond
  %84 = load i32, ptr %failure, align 4, !dbg !6974, !tbaa !2683
  %tobool89 = icmp ne i32 %84, 0, !dbg !6974
  br i1 %tobool89, label %if.end94, label %land.lhs.true90, !dbg !6976

land.lhs.true90:                                  ; preds = %for.end88
  %85 = load ptr, ptr %ctx_list, align 8, !dbg !6977, !tbaa !2416
  %call91 = call i32 @dav_process_ctx_list(ptr noundef @dav_prop_exec, ptr noundef %85, i32 noundef 1, i32 noundef 0), !dbg !6978
  %tobool92 = icmp ne i32 %call91, 0, !dbg !6978
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !6979

if.then93:                                        ; preds = %land.lhs.true90
  store i32 1, ptr %failure, align 4, !dbg !6980, !tbaa !2683
  br label %if.end94, !dbg !6982

if.end94:                                         ; preds = %if.then93, %land.lhs.true90, %for.end88
  %86 = load i32, ptr %failure, align 4, !dbg !6983, !tbaa !2683
  %tobool95 = icmp ne i32 %86, 0, !dbg !6983
  br i1 %tobool95, label %if.then96, label %if.else, !dbg !6985

if.then96:                                        ; preds = %if.end94
  %87 = load ptr, ptr %ctx_list, align 8, !dbg !6986, !tbaa !2416
  %call97 = call i32 @dav_process_ctx_list(ptr noundef @dav_prop_rollback, ptr noundef %87, i32 noundef 0, i32 noundef 1), !dbg !6988
  %88 = load ptr, ptr %r.addr, align 8, !dbg !6989, !tbaa !2416
  %pool98 = getelementptr inbounds %struct.request_rec, ptr %88, i32 0, i32 0, !dbg !6990
  %89 = load ptr, ptr %pool98, align 8, !dbg !6990, !tbaa !2792
  %90 = load ptr, ptr %ctx_list, align 8, !dbg !6991, !tbaa !2416
  %call99 = call ptr @dav_failed_proppatch(ptr noundef %89, ptr noundef %90), !dbg !6992
  store ptr %call99, ptr %propstat_text, align 8, !dbg !6993, !tbaa !2416
  br label %if.end103, !dbg !6994

if.else:                                          ; preds = %if.end94
  %91 = load ptr, ptr %ctx_list, align 8, !dbg !6995, !tbaa !2416
  %call100 = call i32 @dav_process_ctx_list(ptr noundef @dav_prop_commit, ptr noundef %91, i32 noundef 0, i32 noundef 0), !dbg !6997
  %92 = load ptr, ptr %r.addr, align 8, !dbg !6998, !tbaa !2416
  %pool101 = getelementptr inbounds %struct.request_rec, ptr %92, i32 0, i32 0, !dbg !6999
  %93 = load ptr, ptr %pool101, align 8, !dbg !6999, !tbaa !2792
  %94 = load ptr, ptr %ctx_list, align 8, !dbg !7000, !tbaa !2416
  %call102 = call ptr @dav_success_proppatch(ptr noundef %93, ptr noundef %94), !dbg !7001
  store ptr %call102, ptr %propstat_text, align 8, !dbg !7002, !tbaa !2416
  br label %if.end103

if.end103:                                        ; preds = %if.else, %if.then96
  %95 = load ptr, ptr %propdb, align 8, !dbg !7003, !tbaa !2416
  call void @dav_close_propdb(ptr noundef %95), !dbg !7004
  %96 = load ptr, ptr %r.addr, align 8, !dbg !7005, !tbaa !2416
  %97 = load ptr, ptr %resource, align 8, !dbg !7006, !tbaa !2416
  %98 = load i32, ptr %failure, align 4, !dbg !7007, !tbaa !2683
  %call104 = call ptr @dav_auto_checkin(ptr noundef %96, ptr noundef %97, i32 noundef %98, i32 noundef 0, ptr noundef %av_info), !dbg !7008
  %99 = load ptr, ptr %ctx_list, align 8, !dbg !7009, !tbaa !2416
  %call105 = call i32 @dav_process_ctx_list(ptr noundef @dav_prop_log_errors, ptr noundef %99, i32 noundef 0, i32 noundef 0), !dbg !7010
  %100 = load ptr, ptr %resource, align 8, !dbg !7011, !tbaa !2416
  %uri106 = getelementptr inbounds %struct.dav_resource, ptr %100, i32 0, i32 6, !dbg !7012
  %101 = load ptr, ptr %uri106, align 8, !dbg !7012, !tbaa !3323
  %href = getelementptr inbounds %struct.dav_response, ptr %resp, i32 0, i32 0, !dbg !7013
  store ptr %101, ptr %href, align 8, !dbg !7014, !tbaa !2571
  %102 = load ptr, ptr %propstat_text, align 8, !dbg !7015, !tbaa !2416
  %propresult = getelementptr inbounds %struct.dav_response, ptr %resp, i32 0, i32 2, !dbg !7016
  %propstats = getelementptr inbounds %struct.dav_get_props_result, ptr %propresult, i32 0, i32 0, !dbg !7017
  store ptr %102, ptr %propstats, align 8, !dbg !7018, !tbaa !2578
  %103 = load ptr, ptr %r.addr, align 8, !dbg !7019, !tbaa !2416
  %104 = load ptr, ptr %doc, align 8, !dbg !7020, !tbaa !2416
  %namespaces107 = getelementptr inbounds %struct.apr_xml_doc, ptr %104, i32 0, i32 1, !dbg !7021
  %105 = load ptr, ptr %namespaces107, align 8, !dbg !7021, !tbaa !6668
  call void @dav_send_multistatus(ptr noundef %103, i32 noundef 207, ptr noundef %resp, ptr noundef %105), !dbg !7022
  store i32 -2, ptr %retval, align 4, !dbg !7023
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !7023

cleanup108:                                       ; preds = %if.end103, %cleanup, %if.then31, %if.then26, %if.then21, %do.end, %if.then12, %if.then8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 24, ptr %av_info) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx_list) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %propstat_text) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 48, ptr %resp) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 4, ptr %failure) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %propdb) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !7024
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !7024
  %106 = load i32, ptr %retval, align 4, !dbg !7024
  ret i32 %106, !dbg !7024
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_mkcol(ptr noundef %r) #0 !dbg !7025 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %resource_state = alloca i32, align 4
  %av_info = alloca %struct.dav_auto_version_info, align 8
  %locks_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %err2 = alloca ptr, align 8
  %result = alloca i32, align 4
  %multi_status = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %lockdb = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !7027, metadata !DIExpression()), !dbg !7039
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !7040
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !7028, metadata !DIExpression()), !dbg !7041
  call void @llvm.lifetime.start.p0(i64 4, ptr %resource_state) #10, !dbg !7042
  tail call void @llvm.dbg.declare(metadata ptr %resource_state, metadata !7029, metadata !DIExpression()), !dbg !7043
  call void @llvm.lifetime.start.p0(i64 24, ptr %av_info) #10, !dbg !7044
  tail call void @llvm.dbg.declare(metadata ptr %av_info, metadata !7030, metadata !DIExpression()), !dbg !7045
  call void @llvm.lifetime.start.p0(i64 8, ptr %locks_hooks) #10, !dbg !7046
  tail call void @llvm.dbg.declare(metadata ptr %locks_hooks, metadata !7031, metadata !DIExpression()), !dbg !7047
  %0 = load ptr, ptr %r.addr, align 8, !dbg !7048, !tbaa !2416
  %call = call ptr @dav_get_lock_hooks(ptr noundef %0), !dbg !7048
  store ptr %call, ptr %locks_hooks, align 8, !dbg !7047, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !7049
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !7032, metadata !DIExpression()), !dbg !7050
  call void @llvm.lifetime.start.p0(i64 8, ptr %err2) #10, !dbg !7051
  tail call void @llvm.dbg.declare(metadata ptr %err2, metadata !7033, metadata !DIExpression()), !dbg !7052
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !7053
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !7034, metadata !DIExpression()), !dbg !7054
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_status) #10, !dbg !7055
  tail call void @llvm.dbg.declare(metadata ptr %multi_status, metadata !7035, metadata !DIExpression()), !dbg !7056
  %1 = load ptr, ptr %r.addr, align 8, !dbg !7057, !tbaa !2416
  %call1 = call i32 @process_mkcol_body(ptr noundef %1), !dbg !7059
  store i32 %call1, ptr %result, align 4, !dbg !7060, !tbaa !2683
  %cmp = icmp ne i32 %call1, 0, !dbg !7061
  br i1 %cmp, label %if.then, label %if.end, !dbg !7062

if.then:                                          ; preds = %entry
  %2 = load i32, ptr %result, align 4, !dbg !7063, !tbaa !2683
  store i32 %2, ptr %retval, align 4, !dbg !7065
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7065

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %r.addr, align 8, !dbg !7066, !tbaa !2416
  %call2 = call ptr @dav_get_resource(ptr noundef %3, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !7067
  store ptr %call2, ptr %err, align 8, !dbg !7068, !tbaa !2416
  %4 = load ptr, ptr %err, align 8, !dbg !7069, !tbaa !2416
  %cmp3 = icmp ne ptr %4, null, !dbg !7071
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7072

if.then4:                                         ; preds = %if.end
  %5 = load ptr, ptr %r.addr, align 8, !dbg !7073, !tbaa !2416
  %6 = load ptr, ptr %err, align 8, !dbg !7074, !tbaa !2416
  %call5 = call i32 @dav_handle_err(ptr noundef %5, ptr noundef %6, ptr noundef null), !dbg !7075
  store i32 %call5, ptr %retval, align 4, !dbg !7076
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7076

if.end6:                                          ; preds = %if.end
  %7 = load ptr, ptr %r.addr, align 8, !dbg !7077, !tbaa !2416
  %8 = load ptr, ptr %resource, align 8, !dbg !7079, !tbaa !2416
  %call7 = call i32 @dav_run_method_precondition(ptr noundef %7, ptr noundef %8, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !7080
  %cmp8 = icmp ne i32 %call7, -1, !dbg !7081
  br i1 %cmp8, label %land.lhs.true, label %if.end11, !dbg !7082

land.lhs.true:                                    ; preds = %if.end6
  %9 = load ptr, ptr %err, align 8, !dbg !7083, !tbaa !2416
  %tobool = icmp ne ptr %9, null, !dbg !7083
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !7084

if.then9:                                         ; preds = %land.lhs.true
  %10 = load ptr, ptr %r.addr, align 8, !dbg !7085, !tbaa !2416
  %11 = load ptr, ptr %err, align 8, !dbg !7087, !tbaa !2416
  %call10 = call i32 @dav_handle_err(ptr noundef %10, ptr noundef %11, ptr noundef null), !dbg !7088
  store i32 %call10, ptr %retval, align 4, !dbg !7089
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7089

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load ptr, ptr %resource, align 8, !dbg !7090, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %12, i32 0, i32 1, !dbg !7092
  %13 = load i32, ptr %exists, align 4, !dbg !7092, !tbaa !4784
  %tobool12 = icmp ne i32 %13, 0, !dbg !7090
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7093

if.then13:                                        ; preds = %if.end11
  store i32 405, ptr %retval, align 4, !dbg !7094
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7094

if.end14:                                         ; preds = %if.end11
  %14 = load ptr, ptr %r.addr, align 8, !dbg !7096, !tbaa !2416
  %15 = load ptr, ptr %resource, align 8, !dbg !7097, !tbaa !2416
  %call15 = call i32 @dav_get_resource_state(ptr noundef %14, ptr noundef %15), !dbg !7098
  store i32 %call15, ptr %resource_state, align 4, !dbg !7099, !tbaa !2683
  %16 = load ptr, ptr %r.addr, align 8, !dbg !7100, !tbaa !2416
  %17 = load ptr, ptr %resource, align 8, !dbg !7102, !tbaa !2416
  %18 = load i32, ptr %resource_state, align 4, !dbg !7103, !tbaa !2683
  %cmp16 = icmp eq i32 %18, 11, !dbg !7104
  %19 = zext i1 %cmp16 to i64, !dbg !7103
  %cond = select i1 %cmp16, i32 32, i32 16, !dbg !7103
  %call17 = call ptr @dav_validate_request(ptr noundef %16, ptr noundef %17, i32 noundef 0, ptr noundef null, ptr noundef %multi_status, i32 noundef %cond, ptr noundef null), !dbg !7105
  store ptr %call17, ptr %err, align 8, !dbg !7106, !tbaa !2416
  %cmp18 = icmp ne ptr %call17, null, !dbg !7107
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !7108

if.then19:                                        ; preds = %if.end14
  %20 = load ptr, ptr %r.addr, align 8, !dbg !7109, !tbaa !2416
  %21 = load ptr, ptr %err, align 8, !dbg !7111, !tbaa !2416
  %22 = load ptr, ptr %multi_status, align 8, !dbg !7112, !tbaa !2416
  %call20 = call i32 @dav_handle_err(ptr noundef %20, ptr noundef %21, ptr noundef %22), !dbg !7113
  store i32 %call20, ptr %retval, align 4, !dbg !7114
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7114

if.end21:                                         ; preds = %if.end14
  %23 = load ptr, ptr %r.addr, align 8, !dbg !7115, !tbaa !2416
  %24 = load ptr, ptr %resource, align 8, !dbg !7117, !tbaa !2416
  %call22 = call ptr @dav_auto_checkout(ptr noundef %23, ptr noundef %24, i32 noundef 1, ptr noundef %av_info), !dbg !7118
  store ptr %call22, ptr %err, align 8, !dbg !7119, !tbaa !2416
  %cmp23 = icmp ne ptr %call22, null, !dbg !7120
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !7121

if.then24:                                        ; preds = %if.end21
  %25 = load ptr, ptr %r.addr, align 8, !dbg !7122, !tbaa !2416
  %26 = load ptr, ptr %err, align 8, !dbg !7124, !tbaa !2416
  %call25 = call i32 @dav_handle_err(ptr noundef %25, ptr noundef %26, ptr noundef null), !dbg !7125
  store i32 %call25, ptr %retval, align 4, !dbg !7126
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7126

if.end26:                                         ; preds = %if.end21
  %27 = load ptr, ptr %resource, align 8, !dbg !7127, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %27, i32 0, i32 2, !dbg !7128
  store i32 1, ptr %collection, align 8, !dbg !7129, !tbaa !4974
  %28 = load ptr, ptr %resource, align 8, !dbg !7130, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %28, i32 0, i32 8, !dbg !7131
  %29 = load ptr, ptr %hooks, align 8, !dbg !7131, !tbaa !4791
  %create_collection = getelementptr inbounds %struct.dav_hooks_repository, ptr %29, i32 0, i32 11, !dbg !7132
  %30 = load ptr, ptr %create_collection, align 8, !dbg !7132, !tbaa !7133
  %31 = load ptr, ptr %resource, align 8, !dbg !7134, !tbaa !2416
  %call27 = call ptr %30(ptr noundef %31), !dbg !7135
  store ptr %call27, ptr %err, align 8, !dbg !7136, !tbaa !2416
  %32 = load ptr, ptr %r.addr, align 8, !dbg !7137, !tbaa !2416
  %33 = load ptr, ptr %err, align 8, !dbg !7138, !tbaa !2416
  %cmp28 = icmp ne ptr %33, null, !dbg !7139
  %conv = zext i1 %cmp28 to i32, !dbg !7139
  %call29 = call ptr @dav_auto_checkin(ptr noundef %32, ptr noundef null, i32 noundef %conv, i32 noundef 0, ptr noundef %av_info), !dbg !7140
  store ptr %call29, ptr %err2, align 8, !dbg !7141, !tbaa !2416
  %34 = load ptr, ptr %err, align 8, !dbg !7142, !tbaa !2416
  %cmp30 = icmp ne ptr %34, null, !dbg !7144
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !7145

if.then32:                                        ; preds = %if.end26
  %35 = load ptr, ptr %r.addr, align 8, !dbg !7146, !tbaa !2416
  %36 = load ptr, ptr %err, align 8, !dbg !7148, !tbaa !2416
  %call33 = call i32 @dav_handle_err(ptr noundef %35, ptr noundef %36, ptr noundef null), !dbg !7149
  store i32 %call33, ptr %retval, align 4, !dbg !7150
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7150

if.end34:                                         ; preds = %if.end26
  %37 = load ptr, ptr %err2, align 8, !dbg !7151, !tbaa !2416
  %cmp35 = icmp ne ptr %37, null, !dbg !7153
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !7154

if.then37:                                        ; preds = %if.end34
  %38 = load ptr, ptr %r.addr, align 8, !dbg !7155, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %38, i32 0, i32 0, !dbg !7157
  %39 = load ptr, ptr %pool, align 8, !dbg !7157, !tbaa !2792
  %40 = load ptr, ptr %err2, align 8, !dbg !7158, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %40, i32 0, i32 0, !dbg !7159
  %41 = load i32, ptr %status, align 8, !dbg !7159, !tbaa !2871
  %42 = load ptr, ptr %err2, align 8, !dbg !7160, !tbaa !2416
  %call38 = call ptr @dav_push_error(ptr noundef %39, i32 noundef %41, i32 noundef 0, ptr noundef @.str.174, ptr noundef %42), !dbg !7161
  store ptr %call38, ptr %err, align 8, !dbg !7162, !tbaa !2416
  %43 = load ptr, ptr %r.addr, align 8, !dbg !7163, !tbaa !2416
  %44 = load ptr, ptr %err, align 8, !dbg !7164, !tbaa !2416
  call void @dav_log_err(ptr noundef %43, ptr noundef %44, i32 noundef 4), !dbg !7165
  br label %if.end39, !dbg !7166

if.end39:                                         ; preds = %if.then37, %if.end34
  %45 = load ptr, ptr %locks_hooks, align 8, !dbg !7167, !tbaa !2416
  %cmp40 = icmp ne ptr %45, null, !dbg !7168
  br i1 %cmp40, label %if.then42, label %if.end61, !dbg !7169

if.then42:                                        ; preds = %if.end39
  call void @llvm.lifetime.start.p0(i64 8, ptr %lockdb) #10, !dbg !7170
  tail call void @llvm.dbg.declare(metadata ptr %lockdb, metadata !7036, metadata !DIExpression()), !dbg !7171
  %46 = load ptr, ptr %locks_hooks, align 8, !dbg !7172, !tbaa !2416
  %open_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %46, i32 0, i32 4, !dbg !7174
  %47 = load ptr, ptr %open_lockdb, align 8, !dbg !7174, !tbaa !3278
  %48 = load ptr, ptr %r.addr, align 8, !dbg !7175, !tbaa !2416
  %call43 = call ptr %47(ptr noundef %48, i32 noundef 0, i32 noundef 0, ptr noundef %lockdb), !dbg !7176
  store ptr %call43, ptr %err, align 8, !dbg !7177, !tbaa !2416
  %cmp44 = icmp ne ptr %call43, null, !dbg !7178
  br i1 %cmp44, label %if.then46, label %if.end51, !dbg !7179

if.then46:                                        ; preds = %if.then42
  %49 = load ptr, ptr %r.addr, align 8, !dbg !7180, !tbaa !2416
  %pool47 = getelementptr inbounds %struct.request_rec, ptr %49, i32 0, i32 0, !dbg !7182
  %50 = load ptr, ptr %pool47, align 8, !dbg !7182, !tbaa !2792
  %51 = load ptr, ptr %err, align 8, !dbg !7183, !tbaa !2416
  %status48 = getelementptr inbounds %struct.dav_error, ptr %51, i32 0, i32 0, !dbg !7184
  %52 = load i32, ptr %status48, align 8, !dbg !7184, !tbaa !2871
  %53 = load ptr, ptr %err, align 8, !dbg !7185, !tbaa !2416
  %call49 = call ptr @dav_push_error(ptr noundef %50, i32 noundef %52, i32 noundef 0, ptr noundef @.str.175, ptr noundef %53), !dbg !7186
  store ptr %call49, ptr %err, align 8, !dbg !7187, !tbaa !2416
  %54 = load ptr, ptr %r.addr, align 8, !dbg !7188, !tbaa !2416
  %55 = load ptr, ptr %err, align 8, !dbg !7189, !tbaa !2416
  %call50 = call i32 @dav_handle_err(ptr noundef %54, ptr noundef %55, ptr noundef null), !dbg !7190
  store i32 %call50, ptr %retval, align 4, !dbg !7191
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7191

if.end51:                                         ; preds = %if.then42
  %56 = load ptr, ptr %r.addr, align 8, !dbg !7192, !tbaa !2416
  %57 = load ptr, ptr %lockdb, align 8, !dbg !7193, !tbaa !2416
  %58 = load ptr, ptr %resource, align 8, !dbg !7194, !tbaa !2416
  %59 = load i32, ptr %resource_state, align 4, !dbg !7195, !tbaa !2683
  %call52 = call ptr @dav_notify_created(ptr noundef %56, ptr noundef %57, ptr noundef %58, i32 noundef %59, i32 noundef 0), !dbg !7196
  store ptr %call52, ptr %err, align 8, !dbg !7197, !tbaa !2416
  %60 = load ptr, ptr %locks_hooks, align 8, !dbg !7198, !tbaa !2416
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %60, i32 0, i32 5, !dbg !7199
  %61 = load ptr, ptr %close_lockdb, align 8, !dbg !7199, !tbaa !3295
  %62 = load ptr, ptr %lockdb, align 8, !dbg !7200, !tbaa !2416
  call void %61(ptr noundef %62), !dbg !7201
  %63 = load ptr, ptr %err, align 8, !dbg !7202, !tbaa !2416
  %cmp53 = icmp ne ptr %63, null, !dbg !7204
  br i1 %cmp53, label %if.then55, label %if.end60, !dbg !7205

if.then55:                                        ; preds = %if.end51
  %64 = load ptr, ptr %r.addr, align 8, !dbg !7206, !tbaa !2416
  %pool56 = getelementptr inbounds %struct.request_rec, ptr %64, i32 0, i32 0, !dbg !7208
  %65 = load ptr, ptr %pool56, align 8, !dbg !7208, !tbaa !2792
  %66 = load ptr, ptr %err, align 8, !dbg !7209, !tbaa !2416
  %status57 = getelementptr inbounds %struct.dav_error, ptr %66, i32 0, i32 0, !dbg !7210
  %67 = load i32, ptr %status57, align 8, !dbg !7210, !tbaa !2871
  %68 = load ptr, ptr %err, align 8, !dbg !7211, !tbaa !2416
  %call58 = call ptr @dav_push_error(ptr noundef %65, i32 noundef %67, i32 noundef 0, ptr noundef @.str.176, ptr noundef %68), !dbg !7212
  store ptr %call58, ptr %err, align 8, !dbg !7213, !tbaa !2416
  %69 = load ptr, ptr %r.addr, align 8, !dbg !7214, !tbaa !2416
  %70 = load ptr, ptr %err, align 8, !dbg !7215, !tbaa !2416
  %call59 = call i32 @dav_handle_err(ptr noundef %69, ptr noundef %70, ptr noundef null), !dbg !7216
  store i32 %call59, ptr %retval, align 4, !dbg !7217
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7217

if.end60:                                         ; preds = %if.end51
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7218
  br label %cleanup, !dbg !7218

cleanup:                                          ; preds = %if.end60, %if.then55, %if.then46
  call void @llvm.lifetime.end.p0(i64 8, ptr %lockdb) #10, !dbg !7218
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup63 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end61, !dbg !7219

if.end61:                                         ; preds = %cleanup.cont, %if.end39
  %71 = load ptr, ptr %r.addr, align 8, !dbg !7220, !tbaa !2416
  %call62 = call i32 @dav_created(ptr noundef %71, ptr noundef null, ptr noundef @.str.177, i32 noundef 0), !dbg !7221
  store i32 %call62, ptr %retval, align 4, !dbg !7222
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !7222

cleanup63:                                        ; preds = %if.end61, %cleanup, %if.then32, %if.then24, %if.then19, %if.then13, %if.then9, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_status) #10, !dbg !7223
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !7223
  call void @llvm.lifetime.end.p0(i64 8, ptr %err2) #10, !dbg !7223
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !7223
  call void @llvm.lifetime.end.p0(i64 8, ptr %locks_hooks) #10, !dbg !7223
  call void @llvm.lifetime.end.p0(i64 24, ptr %av_info) #10, !dbg !7223
  call void @llvm.lifetime.end.p0(i64 4, ptr %resource_state) #10, !dbg !7223
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !7223
  %72 = load i32, ptr %retval, align 4, !dbg !7223
  ret i32 %72, !dbg !7223
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_copymove(ptr noundef %r, i32 noundef %is_move) #0 !dbg !7224 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %is_move.addr = alloca i32, align 4
  %resource = alloca ptr, align 8
  %resnew = alloca ptr, align 8
  %src_av_info = alloca %struct.dav_auto_version_info, align 8
  %dst_av_info = alloca %struct.dav_auto_version_info, align 8
  %body = alloca ptr, align 8
  %dest = alloca ptr, align 8
  %err = alloca ptr, align 8
  %err2 = alloca ptr, align 8
  %err3 = alloca ptr, align 8
  %multi_response = alloca ptr, align 8
  %lookup = alloca %struct.dav_lookup_result, align 8
  %is_dir = alloca i32, align 4
  %overwrite = alloca i32, align 4
  %depth = alloca i32, align 4
  %result = alloca i32, align 4
  %lockdb = alloca ptr, align 8
  %replace_dest = alloca i32, align 4
  %resnew_state = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %nscp_host = alloca ptr, align 8
  %nscp_path = alloca ptr, align 8
  %tmp = alloca %struct.dav_lookup_result, align 8
  %auth = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !7226, metadata !DIExpression()), !dbg !7258
  store i32 %is_move, ptr %is_move.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %is_move.addr, metadata !7227, metadata !DIExpression()), !dbg !7259
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !7260
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !7228, metadata !DIExpression()), !dbg !7261
  call void @llvm.lifetime.start.p0(i64 8, ptr %resnew) #10, !dbg !7262
  tail call void @llvm.dbg.declare(metadata ptr %resnew, metadata !7229, metadata !DIExpression()), !dbg !7263
  call void @llvm.lifetime.start.p0(i64 24, ptr %src_av_info) #10, !dbg !7264
  tail call void @llvm.dbg.declare(metadata ptr %src_av_info, metadata !7230, metadata !DIExpression()), !dbg !7265
  call void @llvm.memset.p0.i64(ptr align 8 %src_av_info, i8 0, i64 24, i1 false), !dbg !7265
  call void @llvm.lifetime.start.p0(i64 24, ptr %dst_av_info) #10, !dbg !7266
  tail call void @llvm.dbg.declare(metadata ptr %dst_av_info, metadata !7231, metadata !DIExpression()), !dbg !7267
  call void @llvm.memset.p0.i64(ptr align 8 %dst_av_info, i8 0, i64 24, i1 false), !dbg !7267
  call void @llvm.lifetime.start.p0(i64 8, ptr %body) #10, !dbg !7268
  tail call void @llvm.dbg.declare(metadata ptr %body, metadata !7232, metadata !DIExpression()), !dbg !7269
  call void @llvm.lifetime.start.p0(i64 8, ptr %dest) #10, !dbg !7270
  tail call void @llvm.dbg.declare(metadata ptr %dest, metadata !7233, metadata !DIExpression()), !dbg !7271
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !7272
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !7234, metadata !DIExpression()), !dbg !7273
  call void @llvm.lifetime.start.p0(i64 8, ptr %err2) #10, !dbg !7274
  tail call void @llvm.dbg.declare(metadata ptr %err2, metadata !7235, metadata !DIExpression()), !dbg !7275
  call void @llvm.lifetime.start.p0(i64 8, ptr %err3) #10, !dbg !7276
  tail call void @llvm.dbg.declare(metadata ptr %err3, metadata !7236, metadata !DIExpression()), !dbg !7277
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_response) #10, !dbg !7278
  tail call void @llvm.dbg.declare(metadata ptr %multi_response, metadata !7237, metadata !DIExpression()), !dbg !7279
  call void @llvm.lifetime.start.p0(i64 64, ptr %lookup) #10, !dbg !7280
  tail call void @llvm.dbg.declare(metadata ptr %lookup, metadata !7238, metadata !DIExpression()), !dbg !7281
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_dir) #10, !dbg !7282
  tail call void @llvm.dbg.declare(metadata ptr %is_dir, metadata !7244, metadata !DIExpression()), !dbg !7283
  call void @llvm.lifetime.start.p0(i64 4, ptr %overwrite) #10, !dbg !7284
  tail call void @llvm.dbg.declare(metadata ptr %overwrite, metadata !7245, metadata !DIExpression()), !dbg !7285
  call void @llvm.lifetime.start.p0(i64 4, ptr %depth) #10, !dbg !7286
  tail call void @llvm.dbg.declare(metadata ptr %depth, metadata !7246, metadata !DIExpression()), !dbg !7287
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !7288
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !7247, metadata !DIExpression()), !dbg !7289
  call void @llvm.lifetime.start.p0(i64 8, ptr %lockdb) #10, !dbg !7290
  tail call void @llvm.dbg.declare(metadata ptr %lockdb, metadata !7248, metadata !DIExpression()), !dbg !7291
  call void @llvm.lifetime.start.p0(i64 4, ptr %replace_dest) #10, !dbg !7292
  tail call void @llvm.dbg.declare(metadata ptr %replace_dest, metadata !7249, metadata !DIExpression()), !dbg !7293
  call void @llvm.lifetime.start.p0(i64 4, ptr %resnew_state) #10, !dbg !7294
  tail call void @llvm.dbg.declare(metadata ptr %resnew_state, metadata !7250, metadata !DIExpression()), !dbg !7295
  %0 = load ptr, ptr %r.addr, align 8, !dbg !7296, !tbaa !2416
  %1 = load i32, ptr %is_move.addr, align 4, !dbg !7297, !tbaa !2683
  %tobool = icmp ne i32 %1, 0, !dbg !7298
  %lnot = xor i1 %tobool, true, !dbg !7298
  %lnot.ext = zext i1 %lnot to i32, !dbg !7298
  %call = call ptr @dav_get_resource(ptr noundef %0, i32 noundef %lnot.ext, i32 noundef 0, ptr noundef %resource), !dbg !7299
  store ptr %call, ptr %err, align 8, !dbg !7300, !tbaa !2416
  %2 = load ptr, ptr %err, align 8, !dbg !7301, !tbaa !2416
  %cmp = icmp ne ptr %2, null, !dbg !7303
  br i1 %cmp, label %if.then, label %if.end, !dbg !7304

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %r.addr, align 8, !dbg !7305, !tbaa !2416
  %4 = load ptr, ptr %err, align 8, !dbg !7306, !tbaa !2416
  %call1 = call i32 @dav_handle_err(ptr noundef %3, ptr noundef %4, ptr noundef null), !dbg !7307
  store i32 %call1, ptr %retval, align 4, !dbg !7308
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7308

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %r.addr, align 8, !dbg !7309, !tbaa !2416
  %6 = load ptr, ptr %resource, align 8, !dbg !7311, !tbaa !2416
  %call2 = call i32 @dav_run_method_precondition(ptr noundef %5, ptr noundef %6, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !7312
  %cmp3 = icmp ne i32 %call2, -1, !dbg !7313
  br i1 %cmp3, label %land.lhs.true, label %if.end7, !dbg !7314

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %err, align 8, !dbg !7315, !tbaa !2416
  %tobool4 = icmp ne ptr %7, null, !dbg !7315
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7316

if.then5:                                         ; preds = %land.lhs.true
  %8 = load ptr, ptr %r.addr, align 8, !dbg !7317, !tbaa !2416
  %9 = load ptr, ptr %err, align 8, !dbg !7319, !tbaa !2416
  %call6 = call i32 @dav_handle_err(ptr noundef %8, ptr noundef %9, ptr noundef null), !dbg !7320
  store i32 %call6, ptr %retval, align 4, !dbg !7321
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7321

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %10 = load ptr, ptr %resource, align 8, !dbg !7322, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %10, i32 0, i32 1, !dbg !7324
  %11 = load i32, ptr %exists, align 4, !dbg !7324, !tbaa !4784
  %tobool8 = icmp ne i32 %11, 0, !dbg !7322
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !7325

if.then9:                                         ; preds = %if.end7
  store i32 404, ptr %retval, align 4, !dbg !7326
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7326

if.end10:                                         ; preds = %if.end7
  %12 = load ptr, ptr %resource, align 8, !dbg !7328, !tbaa !2416
  %type = getelementptr inbounds %struct.dav_resource, ptr %12, i32 0, i32 0, !dbg !7330
  %13 = load i32, ptr %type, align 8, !dbg !7330, !tbaa !4954
  %cmp11 = icmp ne i32 %13, 1, !dbg !7331
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !7332

if.then12:                                        ; preds = %if.end10
  %14 = load ptr, ptr %r.addr, align 8, !dbg !7333, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %14, i32 0, i32 0, !dbg !7335
  %15 = load ptr, ptr %pool, align 8, !dbg !7335, !tbaa !2792
  %16 = load ptr, ptr %r.addr, align 8, !dbg !7336, !tbaa !2416
  %pool13 = getelementptr inbounds %struct.request_rec, ptr %16, i32 0, i32 0, !dbg !7336
  %17 = load ptr, ptr %pool13, align 8, !dbg !7336, !tbaa !2792
  %18 = load ptr, ptr %r.addr, align 8, !dbg !7336, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %18, i32 0, i32 47, !dbg !7336
  %19 = load ptr, ptr %uri, align 8, !dbg !7336, !tbaa !3183
  %call14 = call ptr @ap_escape_html2(ptr noundef %17, ptr noundef %19, i32 noundef 0), !dbg !7336
  %call15 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %15, ptr noundef @.str.183, ptr noundef %call14), !dbg !7337
  store ptr %call15, ptr %body, align 8, !dbg !7338, !tbaa !2416
  %20 = load ptr, ptr %r.addr, align 8, !dbg !7339, !tbaa !2416
  %21 = load ptr, ptr %body, align 8, !dbg !7340, !tbaa !2416
  %call16 = call i32 @dav_error_response(ptr noundef %20, i32 noundef 405, ptr noundef %21), !dbg !7341
  store i32 %call16, ptr %retval, align 4, !dbg !7342
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7342

if.end17:                                         ; preds = %if.end10
  %22 = load ptr, ptr %r.addr, align 8, !dbg !7343, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %22, i32 0, i32 34, !dbg !7344
  %23 = load ptr, ptr %headers_in, align 8, !dbg !7344, !tbaa !3088
  %call18 = call ptr @apr_table_get(ptr noundef %23, ptr noundef @.str.184), !dbg !7345
  store ptr %call18, ptr %dest, align 8, !dbg !7346, !tbaa !2416
  %24 = load ptr, ptr %dest, align 8, !dbg !7347, !tbaa !2416
  %cmp19 = icmp eq ptr %24, null, !dbg !7348
  br i1 %cmp19, label %if.then20, label %if.end32, !dbg !7349

if.then20:                                        ; preds = %if.end17
  call void @llvm.lifetime.start.p0(i64 8, ptr %nscp_host) #10, !dbg !7350
  tail call void @llvm.dbg.declare(metadata ptr %nscp_host, metadata !7251, metadata !DIExpression()), !dbg !7351
  %25 = load ptr, ptr %r.addr, align 8, !dbg !7352, !tbaa !2416
  %headers_in21 = getelementptr inbounds %struct.request_rec, ptr %25, i32 0, i32 34, !dbg !7353
  %26 = load ptr, ptr %headers_in21, align 8, !dbg !7353, !tbaa !3088
  %call22 = call ptr @apr_table_get(ptr noundef %26, ptr noundef @.str.185), !dbg !7354
  store ptr %call22, ptr %nscp_host, align 8, !dbg !7351, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %nscp_path) #10, !dbg !7355
  tail call void @llvm.dbg.declare(metadata ptr %nscp_path, metadata !7254, metadata !DIExpression()), !dbg !7356
  %27 = load ptr, ptr %r.addr, align 8, !dbg !7357, !tbaa !2416
  %headers_in23 = getelementptr inbounds %struct.request_rec, ptr %27, i32 0, i32 34, !dbg !7358
  %28 = load ptr, ptr %headers_in23, align 8, !dbg !7358, !tbaa !3088
  %call24 = call ptr @apr_table_get(ptr noundef %28, ptr noundef @.str.186), !dbg !7359
  store ptr %call24, ptr %nscp_path, align 8, !dbg !7356, !tbaa !2416
  %29 = load ptr, ptr %nscp_host, align 8, !dbg !7360, !tbaa !2416
  %cmp25 = icmp ne ptr %29, null, !dbg !7362
  br i1 %cmp25, label %land.lhs.true26, label %if.end31, !dbg !7363

land.lhs.true26:                                  ; preds = %if.then20
  %30 = load ptr, ptr %nscp_path, align 8, !dbg !7364, !tbaa !2416
  %cmp27 = icmp ne ptr %30, null, !dbg !7365
  br i1 %cmp27, label %if.then28, label %if.end31, !dbg !7366

if.then28:                                        ; preds = %land.lhs.true26
  %31 = load ptr, ptr %r.addr, align 8, !dbg !7367, !tbaa !2416
  %pool29 = getelementptr inbounds %struct.request_rec, ptr %31, i32 0, i32 0, !dbg !7368
  %32 = load ptr, ptr %pool29, align 8, !dbg !7368, !tbaa !2792
  %33 = load ptr, ptr %nscp_host, align 8, !dbg !7369, !tbaa !2416
  %34 = load ptr, ptr %nscp_path, align 8, !dbg !7370, !tbaa !2416
  %call30 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %32, ptr noundef @.str.187, ptr noundef %33, ptr noundef %34, ptr noundef null), !dbg !7371
  store ptr %call30, ptr %dest, align 8, !dbg !7372, !tbaa !2416
  br label %if.end31, !dbg !7373

if.end31:                                         ; preds = %if.then28, %land.lhs.true26, %if.then20
  call void @llvm.lifetime.end.p0(i64 8, ptr %nscp_path) #10, !dbg !7374
  call void @llvm.lifetime.end.p0(i64 8, ptr %nscp_host) #10, !dbg !7374
  br label %if.end32, !dbg !7375

if.end32:                                         ; preds = %if.end31, %if.end17
  %35 = load ptr, ptr %dest, align 8, !dbg !7376, !tbaa !2416
  %cmp33 = icmp eq ptr %35, null, !dbg !7378
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !7379

if.then34:                                        ; preds = %if.end32
  br label %do.body, !dbg !7380

do.body:                                          ; preds = %if.then34
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !7382

cond.true:                                        ; preds = %do.body
  %36 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !7382, !tbaa !2683
  br label %cond.end, !dbg !7382

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !7382

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %36, %cond.true ], [ -1, %cond.false ], !dbg !7382
  %37 = load ptr, ptr %r.addr, align 8, !dbg !7382, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2780, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %37, ptr noundef @.str.188), !dbg !7382
  br label %do.cond, !dbg !7385

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !7385

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !7386
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7386

if.end35:                                         ; preds = %if.end32
  call void @llvm.lifetime.start.p0(i64 64, ptr %tmp) #10, !dbg !7387
  %38 = load ptr, ptr %dest, align 8, !dbg !7388, !tbaa !2416
  %39 = load ptr, ptr %r.addr, align 8, !dbg !7389, !tbaa !2416
  call void @dav_lookup_uri(ptr sret(%struct.dav_lookup_result) align 8 %tmp, ptr noundef %38, ptr noundef %39, i32 noundef 1), !dbg !7387
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %lookup, ptr align 8 %tmp, i64 64, i1 false), !dbg !7387, !tbaa.struct !7390
  call void @llvm.lifetime.end.p0(i64 64, ptr %tmp) #10, !dbg !7387
  %rnew = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7391
  %40 = load ptr, ptr %rnew, align 8, !dbg !7391, !tbaa !7393
  %cmp36 = icmp eq ptr %40, null, !dbg !7395
  br i1 %cmp36, label %if.then37, label %if.end55, !dbg !7396

if.then37:                                        ; preds = %if.end35
  %err38 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !7397
  %status = getelementptr inbounds %struct.dav_error, ptr %err38, i32 0, i32 0, !dbg !7400
  %41 = load i32, ptr %status, align 8, !dbg !7400, !tbaa !7401
  %cmp39 = icmp eq i32 %41, 400, !dbg !7402
  br i1 %cmp39, label %if.then40, label %if.end49, !dbg !7403

if.then40:                                        ; preds = %if.then37
  br label %do.body41, !dbg !7404

do.body41:                                        ; preds = %if.then40
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true42, label %cond.false43, !dbg !7406

cond.true42:                                      ; preds = %do.body41
  %42 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !7406, !tbaa !2683
  br label %cond.end44, !dbg !7406

cond.false43:                                     ; preds = %do.body41
  br label %cond.end44, !dbg !7406

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond45 = phi i32 [ %42, %cond.true42 ], [ -1, %cond.false43 ], !dbg !7406
  %43 = load ptr, ptr %r.addr, align 8, !dbg !7406, !tbaa !2416
  %err46 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !7406
  %desc = getelementptr inbounds %struct.dav_error, ptr %err46, i32 0, i32 2, !dbg !7406
  %44 = load ptr, ptr %desc, align 8, !dbg !7406, !tbaa !7409
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2789, i32 noundef %cond45, i32 noundef 3, i32 noundef 0, ptr noundef %43, ptr noundef @.str.189, ptr noundef %44), !dbg !7406
  br label %do.cond47, !dbg !7410

do.cond47:                                        ; preds = %cond.end44
  br label %do.end48, !dbg !7410

do.end48:                                         ; preds = %do.cond47
  store i32 400, ptr %retval, align 4, !dbg !7411
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7411

if.end49:                                         ; preds = %if.then37
  %45 = load ptr, ptr %r.addr, align 8, !dbg !7412, !tbaa !2416
  %err50 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !7413
  %status51 = getelementptr inbounds %struct.dav_error, ptr %err50, i32 0, i32 0, !dbg !7414
  %46 = load i32, ptr %status51, align 8, !dbg !7414, !tbaa !7401
  %err52 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !7415
  %desc53 = getelementptr inbounds %struct.dav_error, ptr %err52, i32 0, i32 2, !dbg !7416
  %47 = load ptr, ptr %desc53, align 8, !dbg !7416, !tbaa !7409
  %call54 = call i32 @dav_error_response(ptr noundef %45, i32 noundef %46, ptr noundef %47), !dbg !7417
  store i32 %call54, ptr %retval, align 4, !dbg !7418
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7418

if.end55:                                         ; preds = %if.end35
  %rnew56 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7419
  %48 = load ptr, ptr %rnew56, align 8, !dbg !7419, !tbaa !7393
  %status57 = getelementptr inbounds %struct.request_rec, ptr %48, i32 0, i32 15, !dbg !7420
  %49 = load i32, ptr %status57, align 8, !dbg !7420, !tbaa !2690
  %cmp58 = icmp ne i32 %49, 200, !dbg !7421
  br i1 %cmp58, label %if.then59, label %if.end75, !dbg !7422

if.then59:                                        ; preds = %if.end55
  call void @llvm.lifetime.start.p0(i64 8, ptr %auth) #10, !dbg !7423
  tail call void @llvm.dbg.declare(metadata ptr %auth, metadata !7255, metadata !DIExpression()), !dbg !7424
  %rnew60 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7425
  %50 = load ptr, ptr %rnew60, align 8, !dbg !7425, !tbaa !7393
  %err_headers_out = getelementptr inbounds %struct.request_rec, ptr %50, i32 0, i32 36, !dbg !7426
  %51 = load ptr, ptr %err_headers_out, align 8, !dbg !7426, !tbaa !7427
  %call61 = call ptr @apr_table_get(ptr noundef %51, ptr noundef @.str.190), !dbg !7428
  store ptr %call61, ptr %auth, align 8, !dbg !7424, !tbaa !2416
  %rnew62 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7429
  %52 = load ptr, ptr %rnew62, align 8, !dbg !7429, !tbaa !7393
  %status63 = getelementptr inbounds %struct.request_rec, ptr %52, i32 0, i32 15, !dbg !7431
  %53 = load i32, ptr %status63, align 8, !dbg !7431, !tbaa !2690
  %cmp64 = icmp eq i32 %53, 401, !dbg !7432
  br i1 %cmp64, label %land.lhs.true65, label %if.end71, !dbg !7433

land.lhs.true65:                                  ; preds = %if.then59
  %54 = load ptr, ptr %auth, align 8, !dbg !7434, !tbaa !2416
  %cmp66 = icmp ne ptr %54, null, !dbg !7435
  br i1 %cmp66, label %if.then67, label %if.end71, !dbg !7436

if.then67:                                        ; preds = %land.lhs.true65
  %55 = load ptr, ptr %r.addr, align 8, !dbg !7437, !tbaa !2416
  %err_headers_out68 = getelementptr inbounds %struct.request_rec, ptr %55, i32 0, i32 36, !dbg !7439
  %56 = load ptr, ptr %err_headers_out68, align 8, !dbg !7439, !tbaa !7427
  %57 = load ptr, ptr %r.addr, align 8, !dbg !7440, !tbaa !2416
  %pool69 = getelementptr inbounds %struct.request_rec, ptr %57, i32 0, i32 0, !dbg !7441
  %58 = load ptr, ptr %pool69, align 8, !dbg !7441, !tbaa !2792
  %59 = load ptr, ptr %auth, align 8, !dbg !7442, !tbaa !2416
  %call70 = call ptr @apr_pstrdup(ptr noundef %58, ptr noundef %59), !dbg !7443
  call void @apr_table_setn(ptr noundef %56, ptr noundef @.str.190, ptr noundef %call70), !dbg !7444
  br label %if.end71, !dbg !7445

if.end71:                                         ; preds = %if.then67, %land.lhs.true65, %if.then59
  %60 = load ptr, ptr %r.addr, align 8, !dbg !7446, !tbaa !2416
  %rnew72 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7447
  %61 = load ptr, ptr %rnew72, align 8, !dbg !7447, !tbaa !7393
  %status73 = getelementptr inbounds %struct.request_rec, ptr %61, i32 0, i32 15, !dbg !7448
  %62 = load i32, ptr %status73, align 8, !dbg !7448, !tbaa !2690
  %call74 = call i32 @dav_error_response(ptr noundef %60, i32 noundef %62, ptr noundef @.str.191), !dbg !7449
  store i32 %call74, ptr %retval, align 4, !dbg !7450
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %auth) #10, !dbg !7451
  br label %cleanup

if.end75:                                         ; preds = %if.end55
  %rnew76 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7452
  %63 = load ptr, ptr %rnew76, align 8, !dbg !7452, !tbaa !7393
  %call77 = call ptr @dav_get_resource(ptr noundef %63, i32 noundef 0, i32 noundef 0, ptr noundef %resnew), !dbg !7453
  store ptr %call77, ptr %err, align 8, !dbg !7454, !tbaa !2416
  %64 = load ptr, ptr %err, align 8, !dbg !7455, !tbaa !2416
  %cmp78 = icmp ne ptr %64, null, !dbg !7457
  br i1 %cmp78, label %if.then79, label %if.end81, !dbg !7458

if.then79:                                        ; preds = %if.end75
  %65 = load ptr, ptr %r.addr, align 8, !dbg !7459, !tbaa !2416
  %66 = load ptr, ptr %err, align 8, !dbg !7460, !tbaa !2416
  %call80 = call i32 @dav_handle_err(ptr noundef %65, ptr noundef %66, ptr noundef null), !dbg !7461
  store i32 %call80, ptr %retval, align 4, !dbg !7462
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7462

if.end81:                                         ; preds = %if.end75
  %67 = load ptr, ptr %r.addr, align 8, !dbg !7463, !tbaa !2416
  %68 = load ptr, ptr %resource, align 8, !dbg !7465, !tbaa !2416
  %69 = load ptr, ptr %resnew, align 8, !dbg !7466, !tbaa !2416
  %call82 = call i32 @dav_run_method_precondition(ptr noundef %67, ptr noundef %68, ptr noundef %69, ptr noundef null, ptr noundef %err), !dbg !7467
  %cmp83 = icmp ne i32 %call82, -1, !dbg !7468
  br i1 %cmp83, label %land.lhs.true84, label %if.end88, !dbg !7469

land.lhs.true84:                                  ; preds = %if.end81
  %70 = load ptr, ptr %err, align 8, !dbg !7470, !tbaa !2416
  %tobool85 = icmp ne ptr %70, null, !dbg !7470
  br i1 %tobool85, label %if.then86, label %if.end88, !dbg !7471

if.then86:                                        ; preds = %land.lhs.true84
  %71 = load ptr, ptr %r.addr, align 8, !dbg !7472, !tbaa !2416
  %72 = load ptr, ptr %err, align 8, !dbg !7474, !tbaa !2416
  %call87 = call i32 @dav_handle_err(ptr noundef %71, ptr noundef %72, ptr noundef null), !dbg !7475
  store i32 %call87, ptr %retval, align 4, !dbg !7476
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7476

if.end88:                                         ; preds = %land.lhs.true84, %if.end81
  %73 = load ptr, ptr %resource, align 8, !dbg !7477, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %73, i32 0, i32 8, !dbg !7479
  %74 = load ptr, ptr %hooks, align 8, !dbg !7479, !tbaa !4791
  %75 = load ptr, ptr %resnew, align 8, !dbg !7480, !tbaa !2416
  %hooks89 = getelementptr inbounds %struct.dav_resource, ptr %75, i32 0, i32 8, !dbg !7481
  %76 = load ptr, ptr %hooks89, align 8, !dbg !7481, !tbaa !4791
  %cmp90 = icmp ne ptr %74, %76, !dbg !7482
  br i1 %cmp90, label %if.then91, label %if.end93, !dbg !7483

if.then91:                                        ; preds = %if.end88
  %77 = load ptr, ptr %r.addr, align 8, !dbg !7484, !tbaa !2416
  %call92 = call i32 @dav_error_response(ptr noundef %77, i32 noundef 502, ptr noundef @.str.192), !dbg !7486
  store i32 %call92, ptr %retval, align 4, !dbg !7487
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7487

if.end93:                                         ; preds = %if.end88
  %78 = load ptr, ptr %r.addr, align 8, !dbg !7488, !tbaa !2416
  %call94 = call i32 @dav_get_overwrite(ptr noundef %78), !dbg !7490
  store i32 %call94, ptr %overwrite, align 4, !dbg !7491, !tbaa !2683
  %cmp95 = icmp slt i32 %call94, 0, !dbg !7492
  br i1 %cmp95, label %if.then96, label %if.end97, !dbg !7493

if.then96:                                        ; preds = %if.end93
  store i32 400, ptr %retval, align 4, !dbg !7494
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7494

if.end97:                                         ; preds = %if.end93
  %79 = load ptr, ptr %resnew, align 8, !dbg !7496, !tbaa !2416
  %exists98 = getelementptr inbounds %struct.dav_resource, ptr %79, i32 0, i32 1, !dbg !7498
  %80 = load i32, ptr %exists98, align 4, !dbg !7498, !tbaa !4784
  %tobool99 = icmp ne i32 %80, 0, !dbg !7496
  br i1 %tobool99, label %land.lhs.true100, label %if.end104, !dbg !7499

land.lhs.true100:                                 ; preds = %if.end97
  %81 = load i32, ptr %overwrite, align 4, !dbg !7500, !tbaa !2683
  %tobool101 = icmp ne i32 %81, 0, !dbg !7500
  br i1 %tobool101, label %if.end104, label %if.then102, !dbg !7501

if.then102:                                       ; preds = %land.lhs.true100
  %82 = load ptr, ptr %r.addr, align 8, !dbg !7502, !tbaa !2416
  %call103 = call i32 @dav_error_response(ptr noundef %82, i32 noundef 412, ptr noundef @.str.193), !dbg !7504
  store i32 %call103, ptr %retval, align 4, !dbg !7505
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7505

if.end104:                                        ; preds = %land.lhs.true100, %if.end97
  %83 = load ptr, ptr %resource, align 8, !dbg !7506, !tbaa !2416
  %hooks105 = getelementptr inbounds %struct.dav_resource, ptr %83, i32 0, i32 8, !dbg !7508
  %84 = load ptr, ptr %hooks105, align 8, !dbg !7508, !tbaa !4791
  %is_same_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %84, i32 0, i32 3, !dbg !7509
  %85 = load ptr, ptr %is_same_resource, align 8, !dbg !7509, !tbaa !7510
  %86 = load ptr, ptr %resource, align 8, !dbg !7511, !tbaa !2416
  %87 = load ptr, ptr %resnew, align 8, !dbg !7512, !tbaa !2416
  %call106 = call i32 %85(ptr noundef %86, ptr noundef %87), !dbg !7513
  %tobool107 = icmp ne i32 %call106, 0, !dbg !7513
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !7514

if.then108:                                       ; preds = %if.end104
  %88 = load ptr, ptr %r.addr, align 8, !dbg !7515, !tbaa !2416
  %call109 = call i32 @dav_error_response(ptr noundef %88, i32 noundef 403, ptr noundef @.str.194), !dbg !7517
  store i32 %call109, ptr %retval, align 4, !dbg !7518
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7518

if.end110:                                        ; preds = %if.end104
  %89 = load ptr, ptr %resource, align 8, !dbg !7519, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %89, i32 0, i32 2, !dbg !7520
  %90 = load i32, ptr %collection, align 8, !dbg !7520, !tbaa !4974
  store i32 %90, ptr %is_dir, align 4, !dbg !7521, !tbaa !2683
  %91 = load ptr, ptr %r.addr, align 8, !dbg !7522, !tbaa !2416
  %call111 = call i32 @dav_get_depth(ptr noundef %91, i32 noundef 2147483647), !dbg !7524
  store i32 %call111, ptr %depth, align 4, !dbg !7525, !tbaa !2683
  %cmp112 = icmp slt i32 %call111, 0, !dbg !7526
  br i1 %cmp112, label %if.then113, label %if.end114, !dbg !7527

if.then113:                                       ; preds = %if.end110
  store i32 400, ptr %retval, align 4, !dbg !7528
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7528

if.end114:                                        ; preds = %if.end110
  %92 = load i32, ptr %depth, align 4, !dbg !7530, !tbaa !2683
  %cmp115 = icmp eq i32 %92, 1, !dbg !7532
  br i1 %cmp115, label %if.then116, label %if.end124, !dbg !7533

if.then116:                                       ; preds = %if.end114
  br label %do.body117, !dbg !7534

do.body117:                                       ; preds = %if.then116
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true118, label %cond.false119, !dbg !7536

cond.true118:                                     ; preds = %do.body117
  %93 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !7536, !tbaa !2683
  br label %cond.end120, !dbg !7536

cond.false119:                                    ; preds = %do.body117
  br label %cond.end120, !dbg !7536

cond.end120:                                      ; preds = %cond.false119, %cond.true118
  %cond121 = phi i32 [ %93, %cond.true118 ], [ -1, %cond.false119 ], !dbg !7536
  %94 = load ptr, ptr %r.addr, align 8, !dbg !7536, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2869, i32 noundef %cond121, i32 noundef 3, i32 noundef 0, ptr noundef %94, ptr noundef @.str.195), !dbg !7536
  br label %do.cond122, !dbg !7539

do.cond122:                                       ; preds = %cond.end120
  br label %do.end123, !dbg !7539

do.end123:                                        ; preds = %do.cond122
  store i32 400, ptr %retval, align 4, !dbg !7540
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7540

if.end124:                                        ; preds = %if.end114
  %95 = load i32, ptr %is_move.addr, align 4, !dbg !7541, !tbaa !2683
  %tobool125 = icmp ne i32 %95, 0, !dbg !7541
  br i1 %tobool125, label %land.lhs.true126, label %if.end138, !dbg !7543

land.lhs.true126:                                 ; preds = %if.end124
  %96 = load i32, ptr %is_dir, align 4, !dbg !7544, !tbaa !2683
  %tobool127 = icmp ne i32 %96, 0, !dbg !7544
  br i1 %tobool127, label %land.lhs.true128, label %if.end138, !dbg !7545

land.lhs.true128:                                 ; preds = %land.lhs.true126
  %97 = load i32, ptr %depth, align 4, !dbg !7546, !tbaa !2683
  %cmp129 = icmp ne i32 %97, 2147483647, !dbg !7547
  br i1 %cmp129, label %if.then130, label %if.end138, !dbg !7548

if.then130:                                       ; preds = %land.lhs.true128
  br label %do.body131, !dbg !7549

do.body131:                                       ; preds = %if.then130
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true132, label %cond.false133, !dbg !7551

cond.true132:                                     ; preds = %do.body131
  %98 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !7551, !tbaa !2683
  br label %cond.end134, !dbg !7551

cond.false133:                                    ; preds = %do.body131
  br label %cond.end134, !dbg !7551

cond.end134:                                      ; preds = %cond.false133, %cond.true132
  %cond135 = phi i32 [ %98, %cond.true132 ], [ -1, %cond.false133 ], !dbg !7551
  %99 = load ptr, ptr %r.addr, align 8, !dbg !7551, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2875, i32 noundef %cond135, i32 noundef 3, i32 noundef 0, ptr noundef %99, ptr noundef @.str.196), !dbg !7551
  br label %do.cond136, !dbg !7554

do.cond136:                                       ; preds = %cond.end134
  br label %do.end137, !dbg !7554

do.end137:                                        ; preds = %do.cond136
  store i32 400, ptr %retval, align 4, !dbg !7555
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7555

if.end138:                                        ; preds = %land.lhs.true128, %land.lhs.true126, %if.end124
  %100 = load ptr, ptr %r.addr, align 8, !dbg !7556, !tbaa !2416
  %101 = load ptr, ptr %resource, align 8, !dbg !7558, !tbaa !2416
  %102 = load i32, ptr %depth, align 4, !dbg !7559, !tbaa !2683
  %103 = load i32, ptr %is_move.addr, align 4, !dbg !7560, !tbaa !2683
  %tobool139 = icmp ne i32 %103, 0, !dbg !7560
  %104 = zext i1 %tobool139 to i64, !dbg !7560
  %cond140 = select i1 %tobool139, i32 32, i32 528, !dbg !7560
  %or = or i32 %cond140, 128, !dbg !7561
  %call141 = call ptr @dav_validate_request(ptr noundef %100, ptr noundef %101, i32 noundef %102, ptr noundef null, ptr noundef %multi_response, i32 noundef %or, ptr noundef null), !dbg !7562
  store ptr %call141, ptr %err, align 8, !dbg !7563, !tbaa !2416
  %cmp142 = icmp ne ptr %call141, null, !dbg !7564
  br i1 %cmp142, label %if.then143, label %if.end155, !dbg !7565

if.then143:                                       ; preds = %if.end138
  %105 = load ptr, ptr %r.addr, align 8, !dbg !7566, !tbaa !2416
  %pool144 = getelementptr inbounds %struct.request_rec, ptr %105, i32 0, i32 0, !dbg !7568
  %106 = load ptr, ptr %pool144, align 8, !dbg !7568, !tbaa !2792
  %107 = load ptr, ptr %err, align 8, !dbg !7569, !tbaa !2416
  %status145 = getelementptr inbounds %struct.dav_error, ptr %107, i32 0, i32 0, !dbg !7570
  %108 = load i32, ptr %status145, align 8, !dbg !7570, !tbaa !2871
  %109 = load ptr, ptr %r.addr, align 8, !dbg !7571, !tbaa !2416
  %pool146 = getelementptr inbounds %struct.request_rec, ptr %109, i32 0, i32 0, !dbg !7572
  %110 = load ptr, ptr %pool146, align 8, !dbg !7572, !tbaa !2792
  %111 = load i32, ptr %is_move.addr, align 4, !dbg !7573, !tbaa !2683
  %tobool147 = icmp ne i32 %111, 0, !dbg !7573
  %112 = zext i1 %tobool147 to i64, !dbg !7573
  %cond148 = select i1 %tobool147, ptr @.str.115, ptr @.str.114, !dbg !7573
  %113 = load ptr, ptr %r.addr, align 8, !dbg !7574, !tbaa !2416
  %pool149 = getelementptr inbounds %struct.request_rec, ptr %113, i32 0, i32 0, !dbg !7574
  %114 = load ptr, ptr %pool149, align 8, !dbg !7574, !tbaa !2792
  %115 = load ptr, ptr %r.addr, align 8, !dbg !7574, !tbaa !2416
  %uri150 = getelementptr inbounds %struct.request_rec, ptr %115, i32 0, i32 47, !dbg !7574
  %116 = load ptr, ptr %uri150, align 8, !dbg !7574, !tbaa !3183
  %call151 = call ptr @ap_escape_html2(ptr noundef %114, ptr noundef %116, i32 noundef 0), !dbg !7574
  %call152 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %110, ptr noundef @.str.197, ptr noundef %cond148, ptr noundef %call151), !dbg !7575
  %117 = load ptr, ptr %err, align 8, !dbg !7576, !tbaa !2416
  %call153 = call ptr @dav_push_error(ptr noundef %106, i32 noundef %108, i32 noundef 0, ptr noundef %call152, ptr noundef %117), !dbg !7577
  store ptr %call153, ptr %err, align 8, !dbg !7578, !tbaa !2416
  %118 = load ptr, ptr %r.addr, align 8, !dbg !7579, !tbaa !2416
  %119 = load ptr, ptr %err, align 8, !dbg !7580, !tbaa !2416
  %120 = load ptr, ptr %multi_response, align 8, !dbg !7581, !tbaa !2416
  %call154 = call i32 @dav_handle_err(ptr noundef %118, ptr noundef %119, ptr noundef %120), !dbg !7582
  store i32 %call154, ptr %retval, align 4, !dbg !7583
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7583

if.end155:                                        ; preds = %if.end138
  %rnew156 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7584
  %121 = load ptr, ptr %rnew156, align 8, !dbg !7584, !tbaa !7393
  %122 = load ptr, ptr %resnew, align 8, !dbg !7586, !tbaa !2416
  %call157 = call ptr @dav_validate_request(ptr noundef %121, ptr noundef %122, i32 noundef 2147483647, ptr noundef null, ptr noundef %multi_response, i32 noundef 160, ptr noundef null), !dbg !7587
  store ptr %call157, ptr %err, align 8, !dbg !7588, !tbaa !2416
  %cmp158 = icmp ne ptr %call157, null, !dbg !7589
  br i1 %cmp158, label %if.then159, label %if.end169, !dbg !7590

if.then159:                                       ; preds = %if.end155
  %123 = load ptr, ptr %r.addr, align 8, !dbg !7591, !tbaa !2416
  %pool160 = getelementptr inbounds %struct.request_rec, ptr %123, i32 0, i32 0, !dbg !7593
  %124 = load ptr, ptr %pool160, align 8, !dbg !7593, !tbaa !2792
  %125 = load ptr, ptr %err, align 8, !dbg !7594, !tbaa !2416
  %status161 = getelementptr inbounds %struct.dav_error, ptr %125, i32 0, i32 0, !dbg !7595
  %126 = load i32, ptr %status161, align 8, !dbg !7595, !tbaa !2871
  %127 = load ptr, ptr %r.addr, align 8, !dbg !7596, !tbaa !2416
  %pool162 = getelementptr inbounds %struct.request_rec, ptr %127, i32 0, i32 0, !dbg !7597
  %128 = load ptr, ptr %pool162, align 8, !dbg !7597, !tbaa !2792
  %129 = load ptr, ptr %r.addr, align 8, !dbg !7598, !tbaa !2416
  %pool163 = getelementptr inbounds %struct.request_rec, ptr %129, i32 0, i32 0, !dbg !7598
  %130 = load ptr, ptr %pool163, align 8, !dbg !7598, !tbaa !2792
  %131 = load ptr, ptr %r.addr, align 8, !dbg !7598, !tbaa !2416
  %uri164 = getelementptr inbounds %struct.request_rec, ptr %131, i32 0, i32 47, !dbg !7598
  %132 = load ptr, ptr %uri164, align 8, !dbg !7598, !tbaa !3183
  %call165 = call ptr @ap_escape_html2(ptr noundef %130, ptr noundef %132, i32 noundef 0), !dbg !7598
  %call166 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %128, ptr noundef @.str.198, ptr noundef %call165), !dbg !7599
  %133 = load ptr, ptr %err, align 8, !dbg !7600, !tbaa !2416
  %call167 = call ptr @dav_push_error(ptr noundef %124, i32 noundef %126, i32 noundef 0, ptr noundef %call166, ptr noundef %133), !dbg !7601
  store ptr %call167, ptr %err, align 8, !dbg !7602, !tbaa !2416
  %134 = load ptr, ptr %r.addr, align 8, !dbg !7603, !tbaa !2416
  %135 = load ptr, ptr %err, align 8, !dbg !7604, !tbaa !2416
  %136 = load ptr, ptr %multi_response, align 8, !dbg !7605, !tbaa !2416
  %call168 = call i32 @dav_handle_err(ptr noundef %134, ptr noundef %135, ptr noundef %136), !dbg !7606
  store i32 %call168, ptr %retval, align 4, !dbg !7607
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7607

if.end169:                                        ; preds = %if.end155
  %137 = load i32, ptr %is_dir, align 4, !dbg !7608, !tbaa !2683
  %tobool170 = icmp ne i32 %137, 0, !dbg !7608
  br i1 %tobool170, label %land.lhs.true171, label %if.end179, !dbg !7610

land.lhs.true171:                                 ; preds = %if.end169
  %138 = load i32, ptr %depth, align 4, !dbg !7611, !tbaa !2683
  %cmp172 = icmp eq i32 %138, 2147483647, !dbg !7612
  br i1 %cmp172, label %land.lhs.true173, label %if.end179, !dbg !7613

land.lhs.true173:                                 ; preds = %land.lhs.true171
  %139 = load ptr, ptr %resource, align 8, !dbg !7614, !tbaa !2416
  %hooks174 = getelementptr inbounds %struct.dav_resource, ptr %139, i32 0, i32 8, !dbg !7615
  %140 = load ptr, ptr %hooks174, align 8, !dbg !7615, !tbaa !4791
  %is_parent_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %140, i32 0, i32 4, !dbg !7616
  %141 = load ptr, ptr %is_parent_resource, align 8, !dbg !7616, !tbaa !7617
  %142 = load ptr, ptr %resource, align 8, !dbg !7618, !tbaa !2416
  %143 = load ptr, ptr %resnew, align 8, !dbg !7619, !tbaa !2416
  %call175 = call i32 %141(ptr noundef %142, ptr noundef %143), !dbg !7620
  %tobool176 = icmp ne i32 %call175, 0, !dbg !7620
  br i1 %tobool176, label %if.then177, label %if.end179, !dbg !7621

if.then177:                                       ; preds = %land.lhs.true173
  %144 = load ptr, ptr %r.addr, align 8, !dbg !7622, !tbaa !2416
  %call178 = call i32 @dav_error_response(ptr noundef %144, i32 noundef 403, ptr noundef @.str.199), !dbg !7624
  store i32 %call178, ptr %retval, align 4, !dbg !7625
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7625

if.end179:                                        ; preds = %land.lhs.true173, %land.lhs.true171, %if.end169
  %145 = load i32, ptr %is_dir, align 4, !dbg !7626, !tbaa !2683
  %tobool180 = icmp ne i32 %145, 0, !dbg !7626
  br i1 %tobool180, label %land.lhs.true181, label %if.end188, !dbg !7628

land.lhs.true181:                                 ; preds = %if.end179
  %146 = load ptr, ptr %resnew, align 8, !dbg !7629, !tbaa !2416
  %hooks182 = getelementptr inbounds %struct.dav_resource, ptr %146, i32 0, i32 8, !dbg !7630
  %147 = load ptr, ptr %hooks182, align 8, !dbg !7630, !tbaa !4791
  %is_parent_resource183 = getelementptr inbounds %struct.dav_hooks_repository, ptr %147, i32 0, i32 4, !dbg !7631
  %148 = load ptr, ptr %is_parent_resource183, align 8, !dbg !7631, !tbaa !7617
  %149 = load ptr, ptr %resnew, align 8, !dbg !7632, !tbaa !2416
  %150 = load ptr, ptr %resource, align 8, !dbg !7633, !tbaa !2416
  %call184 = call i32 %148(ptr noundef %149, ptr noundef %150), !dbg !7634
  %tobool185 = icmp ne i32 %call184, 0, !dbg !7634
  br i1 %tobool185, label %if.then186, label %if.end188, !dbg !7635

if.then186:                                       ; preds = %land.lhs.true181
  %151 = load ptr, ptr %r.addr, align 8, !dbg !7636, !tbaa !2416
  %call187 = call i32 @dav_error_response(ptr noundef %151, i32 noundef 403, ptr noundef @.str.200), !dbg !7638
  store i32 %call187, ptr %retval, align 4, !dbg !7639
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7639

if.end188:                                        ; preds = %land.lhs.true181, %if.end179
  %152 = load ptr, ptr %r.addr, align 8, !dbg !7640, !tbaa !2416
  %call189 = call i32 @ap_discard_request_body(ptr noundef %152), !dbg !7642
  store i32 %call189, ptr %result, align 4, !dbg !7643, !tbaa !2683
  %cmp190 = icmp ne i32 %call189, 0, !dbg !7644
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !7645

if.then191:                                       ; preds = %if.end188
  %153 = load i32, ptr %result, align 4, !dbg !7646, !tbaa !2683
  store i32 %153, ptr %retval, align 4, !dbg !7648
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7648

if.end192:                                        ; preds = %if.end188
  %154 = load ptr, ptr %r.addr, align 8, !dbg !7649, !tbaa !2416
  %call193 = call ptr @dav_open_lockdb(ptr noundef %154, i32 noundef 0, ptr noundef %lockdb), !dbg !7651
  store ptr %call193, ptr %err, align 8, !dbg !7652, !tbaa !2416
  %cmp194 = icmp ne ptr %call193, null, !dbg !7653
  br i1 %cmp194, label %if.then195, label %if.end197, !dbg !7654

if.then195:                                       ; preds = %if.end192
  %155 = load ptr, ptr %r.addr, align 8, !dbg !7655, !tbaa !2416
  %156 = load ptr, ptr %err, align 8, !dbg !7657, !tbaa !2416
  %call196 = call i32 @dav_handle_err(ptr noundef %155, ptr noundef %156, ptr noundef null), !dbg !7658
  store i32 %call196, ptr %retval, align 4, !dbg !7659
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7659

if.end197:                                        ; preds = %if.end192
  %157 = load i32, ptr %is_move.addr, align 4, !dbg !7660, !tbaa !2683
  %tobool198 = icmp ne i32 %157, 0, !dbg !7660
  br i1 %tobool198, label %land.lhs.true199, label %if.end203, !dbg !7662

land.lhs.true199:                                 ; preds = %if.end197
  %158 = load ptr, ptr %lockdb, align 8, !dbg !7663, !tbaa !2416
  %cmp200 = icmp ne ptr %158, null, !dbg !7664
  br i1 %cmp200, label %if.then201, label %if.end203, !dbg !7665

if.then201:                                       ; preds = %land.lhs.true199
  %159 = load ptr, ptr %r.addr, align 8, !dbg !7666, !tbaa !2416
  %160 = load ptr, ptr %resource, align 8, !dbg !7668, !tbaa !2416
  %call202 = call i32 @dav_unlock(ptr noundef %159, ptr noundef %160, ptr noundef null), !dbg !7669
  br label %if.end203, !dbg !7670

if.end203:                                        ; preds = %if.then201, %land.lhs.true199, %if.end197
  %161 = load i32, ptr %is_move.addr, align 4, !dbg !7671, !tbaa !2683
  %tobool204 = icmp ne i32 %161, 0, !dbg !7671
  br i1 %tobool204, label %if.then205, label %if.end215, !dbg !7673

if.then205:                                       ; preds = %if.end203
  %162 = load ptr, ptr %r.addr, align 8, !dbg !7674, !tbaa !2416
  %163 = load ptr, ptr %resource, align 8, !dbg !7677, !tbaa !2416
  %call206 = call ptr @dav_auto_checkout(ptr noundef %162, ptr noundef %163, i32 noundef 1, ptr noundef %src_av_info), !dbg !7678
  store ptr %call206, ptr %err, align 8, !dbg !7679, !tbaa !2416
  %cmp207 = icmp ne ptr %call206, null, !dbg !7680
  br i1 %cmp207, label %if.then208, label %if.end214, !dbg !7681

if.then208:                                       ; preds = %if.then205
  %164 = load ptr, ptr %lockdb, align 8, !dbg !7682, !tbaa !2416
  %cmp209 = icmp ne ptr %164, null, !dbg !7685
  br i1 %cmp209, label %if.then210, label %if.end212, !dbg !7686

if.then210:                                       ; preds = %if.then208
  %165 = load ptr, ptr %lockdb, align 8, !dbg !7687, !tbaa !2416
  %hooks211 = getelementptr inbounds %struct.dav_lockdb, ptr %165, i32 0, i32 0, !dbg !7688
  %166 = load ptr, ptr %hooks211, align 8, !dbg !7688, !tbaa !3292
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %166, i32 0, i32 5, !dbg !7689
  %167 = load ptr, ptr %close_lockdb, align 8, !dbg !7689, !tbaa !3295
  %168 = load ptr, ptr %lockdb, align 8, !dbg !7690, !tbaa !2416
  call void %167(ptr noundef %168), !dbg !7691
  br label %if.end212, !dbg !7691

if.end212:                                        ; preds = %if.then210, %if.then208
  %169 = load ptr, ptr %r.addr, align 8, !dbg !7692, !tbaa !2416
  %170 = load ptr, ptr %err, align 8, !dbg !7693, !tbaa !2416
  %call213 = call i32 @dav_handle_err(ptr noundef %169, ptr noundef %170, ptr noundef null), !dbg !7694
  store i32 %call213, ptr %retval, align 4, !dbg !7695
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7695

if.end214:                                        ; preds = %if.then205
  br label %if.end215, !dbg !7696

if.end215:                                        ; preds = %if.end214, %if.end203
  %rnew216 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7697
  %171 = load ptr, ptr %rnew216, align 8, !dbg !7697, !tbaa !7393
  %172 = load ptr, ptr %resnew, align 8, !dbg !7698, !tbaa !2416
  %call217 = call i32 @dav_get_resource_state(ptr noundef %171, ptr noundef %172), !dbg !7699
  store i32 %call217, ptr %resnew_state, align 4, !dbg !7700, !tbaa !2683
  %173 = load ptr, ptr %resnew, align 8, !dbg !7701, !tbaa !2416
  %exists218 = getelementptr inbounds %struct.dav_resource, ptr %173, i32 0, i32 1, !dbg !7703
  %174 = load i32, ptr %exists218, align 4, !dbg !7703, !tbaa !4784
  %tobool219 = icmp ne i32 %174, 0, !dbg !7701
  br i1 %tobool219, label %if.else, label %if.then220, !dbg !7704

if.then220:                                       ; preds = %if.end215
  store i32 0, ptr %replace_dest, align 4, !dbg !7705, !tbaa !2683
  br label %if.end242, !dbg !7706

if.else:                                          ; preds = %if.end215
  %175 = load i32, ptr %is_move.addr, align 4, !dbg !7707, !tbaa !2683
  %tobool221 = icmp ne i32 %175, 0, !dbg !7707
  br i1 %tobool221, label %if.then223, label %lor.lhs.false, !dbg !7709

lor.lhs.false:                                    ; preds = %if.else
  %176 = load ptr, ptr %resource, align 8, !dbg !7710, !tbaa !2416
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %176, i32 0, i32 3, !dbg !7711
  %177 = load i32, ptr %versioned, align 4, !dbg !7711, !tbaa !6009
  %tobool222 = icmp ne i32 %177, 0, !dbg !7710
  br i1 %tobool222, label %if.else224, label %if.then223, !dbg !7712

if.then223:                                       ; preds = %lor.lhs.false, %if.else
  store i32 1, ptr %replace_dest, align 4, !dbg !7713, !tbaa !2683
  br label %if.end241, !dbg !7714

if.else224:                                       ; preds = %lor.lhs.false
  %178 = load ptr, ptr %resource, align 8, !dbg !7715, !tbaa !2416
  %type225 = getelementptr inbounds %struct.dav_resource, ptr %178, i32 0, i32 0, !dbg !7717
  %179 = load i32, ptr %type225, align 8, !dbg !7717, !tbaa !4954
  %180 = load ptr, ptr %resnew, align 8, !dbg !7718, !tbaa !2416
  %type226 = getelementptr inbounds %struct.dav_resource, ptr %180, i32 0, i32 0, !dbg !7719
  %181 = load i32, ptr %type226, align 8, !dbg !7719, !tbaa !4954
  %cmp227 = icmp ne i32 %179, %181, !dbg !7720
  br i1 %cmp227, label %if.then228, label %if.else229, !dbg !7721

if.then228:                                       ; preds = %if.else224
  store i32 1, ptr %replace_dest, align 4, !dbg !7722, !tbaa !2683
  br label %if.end240, !dbg !7723

if.else229:                                       ; preds = %if.else224
  %182 = load ptr, ptr %resource, align 8, !dbg !7724, !tbaa !2416
  %collection230 = getelementptr inbounds %struct.dav_resource, ptr %182, i32 0, i32 2, !dbg !7726
  %183 = load i32, ptr %collection230, align 8, !dbg !7726, !tbaa !4974
  %cmp231 = icmp eq i32 %183, 0, !dbg !7727
  %conv = zext i1 %cmp231 to i32, !dbg !7727
  %184 = load ptr, ptr %resnew, align 8, !dbg !7728, !tbaa !2416
  %collection232 = getelementptr inbounds %struct.dav_resource, ptr %184, i32 0, i32 2, !dbg !7729
  %185 = load i32, ptr %collection232, align 8, !dbg !7729, !tbaa !4974
  %cmp233 = icmp eq i32 %185, 0, !dbg !7730
  %conv234 = zext i1 %cmp233 to i32, !dbg !7730
  %cmp235 = icmp ne i32 %conv, %conv234, !dbg !7731
  br i1 %cmp235, label %if.then237, label %if.else238, !dbg !7732

if.then237:                                       ; preds = %if.else229
  store i32 1, ptr %replace_dest, align 4, !dbg !7733, !tbaa !2683
  br label %if.end239, !dbg !7734

if.else238:                                       ; preds = %if.else229
  store i32 0, ptr %replace_dest, align 4, !dbg !7735, !tbaa !2683
  br label %if.end239

if.end239:                                        ; preds = %if.else238, %if.then237
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %if.then228
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %if.then223
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.then220
  %186 = load ptr, ptr %resnew, align 8, !dbg !7736, !tbaa !2416
  %exists243 = getelementptr inbounds %struct.dav_resource, ptr %186, i32 0, i32 1, !dbg !7738
  %187 = load i32, ptr %exists243, align 4, !dbg !7738, !tbaa !4784
  %tobool244 = icmp ne i32 %187, 0, !dbg !7736
  br i1 %tobool244, label %lor.lhs.false245, label %if.then247, !dbg !7739

lor.lhs.false245:                                 ; preds = %if.end242
  %188 = load i32, ptr %replace_dest, align 4, !dbg !7740, !tbaa !2683
  %tobool246 = icmp ne i32 %188, 0, !dbg !7740
  br i1 %tobool246, label %if.then247, label %if.end264, !dbg !7741

if.then247:                                       ; preds = %lor.lhs.false245, %if.end242
  %189 = load ptr, ptr %r.addr, align 8, !dbg !7742, !tbaa !2416
  %190 = load ptr, ptr %resnew, align 8, !dbg !7745, !tbaa !2416
  %call248 = call ptr @dav_auto_checkout(ptr noundef %189, ptr noundef %190, i32 noundef 1, ptr noundef %dst_av_info), !dbg !7746
  store ptr %call248, ptr %err, align 8, !dbg !7747, !tbaa !2416
  %cmp249 = icmp ne ptr %call248, null, !dbg !7748
  br i1 %cmp249, label %if.then251, label %if.end263, !dbg !7749

if.then251:                                       ; preds = %if.then247
  %191 = load i32, ptr %is_move.addr, align 4, !dbg !7750, !tbaa !2683
  %tobool252 = icmp ne i32 %191, 0, !dbg !7750
  br i1 %tobool252, label %if.then253, label %if.end255, !dbg !7753

if.then253:                                       ; preds = %if.then251
  %192 = load ptr, ptr %r.addr, align 8, !dbg !7754, !tbaa !2416
  %call254 = call ptr @dav_auto_checkin(ptr noundef %192, ptr noundef null, i32 noundef 1, i32 noundef 0, ptr noundef %src_av_info), !dbg !7756
  br label %if.end255, !dbg !7757

if.end255:                                        ; preds = %if.then253, %if.then251
  %193 = load ptr, ptr %lockdb, align 8, !dbg !7758, !tbaa !2416
  %cmp256 = icmp ne ptr %193, null, !dbg !7760
  br i1 %cmp256, label %if.then258, label %if.end261, !dbg !7761

if.then258:                                       ; preds = %if.end255
  %194 = load ptr, ptr %lockdb, align 8, !dbg !7762, !tbaa !2416
  %hooks259 = getelementptr inbounds %struct.dav_lockdb, ptr %194, i32 0, i32 0, !dbg !7763
  %195 = load ptr, ptr %hooks259, align 8, !dbg !7763, !tbaa !3292
  %close_lockdb260 = getelementptr inbounds %struct.dav_hooks_locks, ptr %195, i32 0, i32 5, !dbg !7764
  %196 = load ptr, ptr %close_lockdb260, align 8, !dbg !7764, !tbaa !3295
  %197 = load ptr, ptr %lockdb, align 8, !dbg !7765, !tbaa !2416
  call void %196(ptr noundef %197), !dbg !7766
  br label %if.end261, !dbg !7766

if.end261:                                        ; preds = %if.then258, %if.end255
  %198 = load ptr, ptr %r.addr, align 8, !dbg !7767, !tbaa !2416
  %199 = load ptr, ptr %err, align 8, !dbg !7768, !tbaa !2416
  %call262 = call i32 @dav_handle_err(ptr noundef %198, ptr noundef %199, ptr noundef null), !dbg !7769
  store i32 %call262, ptr %retval, align 4, !dbg !7770
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7770

if.end263:                                        ; preds = %if.then247
  br label %if.end264, !dbg !7771

if.end264:                                        ; preds = %if.end263, %lor.lhs.false245
  %parent_resource = getelementptr inbounds %struct.dav_auto_version_info, ptr %src_av_info, i32 0, i32 3, !dbg !7772
  %200 = load ptr, ptr %parent_resource, align 8, !dbg !7772, !tbaa !7774
  %cmp265 = icmp ne ptr %200, null, !dbg !7776
  br i1 %cmp265, label %land.lhs.true267, label %if.end282, !dbg !7777

land.lhs.true267:                                 ; preds = %if.end264
  %parent_resource268 = getelementptr inbounds %struct.dav_auto_version_info, ptr %dst_av_info, i32 0, i32 3, !dbg !7778
  %201 = load ptr, ptr %parent_resource268, align 8, !dbg !7778, !tbaa !7774
  %cmp269 = icmp ne ptr %201, null, !dbg !7779
  br i1 %cmp269, label %land.lhs.true271, label %if.end282, !dbg !7780

land.lhs.true271:                                 ; preds = %land.lhs.true267
  %parent_resource272 = getelementptr inbounds %struct.dav_auto_version_info, ptr %src_av_info, i32 0, i32 3, !dbg !7781
  %202 = load ptr, ptr %parent_resource272, align 8, !dbg !7781, !tbaa !7774
  %hooks273 = getelementptr inbounds %struct.dav_resource, ptr %202, i32 0, i32 8, !dbg !7782
  %203 = load ptr, ptr %hooks273, align 8, !dbg !7782, !tbaa !4791
  %is_same_resource274 = getelementptr inbounds %struct.dav_hooks_repository, ptr %203, i32 0, i32 3, !dbg !7783
  %204 = load ptr, ptr %is_same_resource274, align 8, !dbg !7783, !tbaa !7510
  %parent_resource275 = getelementptr inbounds %struct.dav_auto_version_info, ptr %src_av_info, i32 0, i32 3, !dbg !7784
  %205 = load ptr, ptr %parent_resource275, align 8, !dbg !7784, !tbaa !7774
  %parent_resource276 = getelementptr inbounds %struct.dav_auto_version_info, ptr %dst_av_info, i32 0, i32 3, !dbg !7785
  %206 = load ptr, ptr %parent_resource276, align 8, !dbg !7785, !tbaa !7774
  %call277 = call i32 %204(ptr noundef %205, ptr noundef %206), !dbg !7786
  %tobool278 = icmp ne i32 %call277, 0, !dbg !7786
  br i1 %tobool278, label %if.then279, label %if.end282, !dbg !7787

if.then279:                                       ; preds = %land.lhs.true271
  %parent_resource280 = getelementptr inbounds %struct.dav_auto_version_info, ptr %src_av_info, i32 0, i32 3, !dbg !7788
  %207 = load ptr, ptr %parent_resource280, align 8, !dbg !7788, !tbaa !7774
  %parent_resource281 = getelementptr inbounds %struct.dav_auto_version_info, ptr %dst_av_info, i32 0, i32 3, !dbg !7790
  store ptr %207, ptr %parent_resource281, align 8, !dbg !7791, !tbaa !7774
  br label %if.end282, !dbg !7792

if.end282:                                        ; preds = %if.then279, %land.lhs.true271, %land.lhs.true267, %if.end264
  %208 = load i32, ptr %replace_dest, align 4, !dbg !7793, !tbaa !2683
  %tobool283 = icmp ne i32 %208, 0, !dbg !7793
  br i1 %tobool283, label %if.then284, label %if.end287, !dbg !7795

if.then284:                                       ; preds = %if.end282
  %209 = load ptr, ptr %resnew, align 8, !dbg !7796, !tbaa !2416
  %hooks285 = getelementptr inbounds %struct.dav_resource, ptr %209, i32 0, i32 8, !dbg !7797
  %210 = load ptr, ptr %hooks285, align 8, !dbg !7797, !tbaa !4791
  %remove_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %210, i32 0, i32 14, !dbg !7798
  %211 = load ptr, ptr %remove_resource, align 8, !dbg !7798, !tbaa !5524
  %212 = load ptr, ptr %resnew, align 8, !dbg !7799, !tbaa !2416
  %call286 = call ptr %211(ptr noundef %212, ptr noundef %multi_response), !dbg !7800
  store ptr %call286, ptr %err, align 8, !dbg !7801, !tbaa !2416
  br label %if.end287, !dbg !7802

if.end287:                                        ; preds = %if.then284, %if.end282
  %213 = load ptr, ptr %err, align 8, !dbg !7803, !tbaa !2416
  %cmp288 = icmp eq ptr %213, null, !dbg !7805
  br i1 %cmp288, label %if.then290, label %if.end299, !dbg !7806

if.then290:                                       ; preds = %if.end287
  %214 = load i32, ptr %is_move.addr, align 4, !dbg !7807, !tbaa !2683
  %tobool291 = icmp ne i32 %214, 0, !dbg !7807
  br i1 %tobool291, label %if.then292, label %if.else295, !dbg !7810

if.then292:                                       ; preds = %if.then290
  %215 = load ptr, ptr %resource, align 8, !dbg !7811, !tbaa !2416
  %hooks293 = getelementptr inbounds %struct.dav_resource, ptr %215, i32 0, i32 8, !dbg !7812
  %216 = load ptr, ptr %hooks293, align 8, !dbg !7812, !tbaa !4791
  %move_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %216, i32 0, i32 13, !dbg !7813
  %217 = load ptr, ptr %move_resource, align 8, !dbg !7813, !tbaa !7814
  %218 = load ptr, ptr %resource, align 8, !dbg !7815, !tbaa !2416
  %219 = load ptr, ptr %resnew, align 8, !dbg !7816, !tbaa !2416
  %call294 = call ptr %217(ptr noundef %218, ptr noundef %219, ptr noundef %multi_response), !dbg !7817
  store ptr %call294, ptr %err, align 8, !dbg !7818, !tbaa !2416
  br label %if.end298, !dbg !7819

if.else295:                                       ; preds = %if.then290
  %220 = load ptr, ptr %resource, align 8, !dbg !7820, !tbaa !2416
  %hooks296 = getelementptr inbounds %struct.dav_resource, ptr %220, i32 0, i32 8, !dbg !7821
  %221 = load ptr, ptr %hooks296, align 8, !dbg !7821, !tbaa !4791
  %copy_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %221, i32 0, i32 12, !dbg !7822
  %222 = load ptr, ptr %copy_resource, align 8, !dbg !7822, !tbaa !7823
  %223 = load ptr, ptr %resource, align 8, !dbg !7824, !tbaa !2416
  %224 = load ptr, ptr %resnew, align 8, !dbg !7825, !tbaa !2416
  %225 = load i32, ptr %depth, align 4, !dbg !7826, !tbaa !2683
  %call297 = call ptr %222(ptr noundef %223, ptr noundef %224, i32 noundef %225, ptr noundef %multi_response), !dbg !7827
  store ptr %call297, ptr %err, align 8, !dbg !7828, !tbaa !2416
  br label %if.end298

if.end298:                                        ; preds = %if.else295, %if.then292
  br label %if.end299, !dbg !7829

if.end299:                                        ; preds = %if.end298, %if.end287
  %226 = load ptr, ptr %r.addr, align 8, !dbg !7830, !tbaa !2416
  %227 = load ptr, ptr %err, align 8, !dbg !7831, !tbaa !2416
  %cmp300 = icmp ne ptr %227, null, !dbg !7832
  %conv301 = zext i1 %cmp300 to i32, !dbg !7832
  %call302 = call ptr @dav_auto_checkin(ptr noundef %226, ptr noundef null, i32 noundef %conv301, i32 noundef 0, ptr noundef %dst_av_info), !dbg !7833
  store ptr %call302, ptr %err2, align 8, !dbg !7834, !tbaa !2416
  %228 = load i32, ptr %is_move.addr, align 4, !dbg !7835, !tbaa !2683
  %tobool303 = icmp ne i32 %228, 0, !dbg !7835
  br i1 %tobool303, label %if.then304, label %if.else308, !dbg !7837

if.then304:                                       ; preds = %if.end299
  %229 = load ptr, ptr %r.addr, align 8, !dbg !7838, !tbaa !2416
  %230 = load ptr, ptr %err, align 8, !dbg !7840, !tbaa !2416
  %cmp305 = icmp ne ptr %230, null, !dbg !7841
  %conv306 = zext i1 %cmp305 to i32, !dbg !7841
  %call307 = call ptr @dav_auto_checkin(ptr noundef %229, ptr noundef null, i32 noundef %conv306, i32 noundef 0, ptr noundef %src_av_info), !dbg !7842
  store ptr %call307, ptr %err3, align 8, !dbg !7843, !tbaa !2416
  br label %if.end309, !dbg !7844

if.else308:                                       ; preds = %if.end299
  store ptr null, ptr %err3, align 8, !dbg !7845, !tbaa !2416
  br label %if.end309

if.end309:                                        ; preds = %if.else308, %if.then304
  %231 = load ptr, ptr %err, align 8, !dbg !7846, !tbaa !2416
  %cmp310 = icmp ne ptr %231, null, !dbg !7848
  br i1 %cmp310, label %if.then312, label %if.end328, !dbg !7849

if.then312:                                       ; preds = %if.end309
  %232 = load ptr, ptr %lockdb, align 8, !dbg !7850, !tbaa !2416
  %cmp313 = icmp ne ptr %232, null, !dbg !7853
  br i1 %cmp313, label %if.then315, label %if.end318, !dbg !7854

if.then315:                                       ; preds = %if.then312
  %233 = load ptr, ptr %lockdb, align 8, !dbg !7855, !tbaa !2416
  %hooks316 = getelementptr inbounds %struct.dav_lockdb, ptr %233, i32 0, i32 0, !dbg !7856
  %234 = load ptr, ptr %hooks316, align 8, !dbg !7856, !tbaa !3292
  %close_lockdb317 = getelementptr inbounds %struct.dav_hooks_locks, ptr %234, i32 0, i32 5, !dbg !7857
  %235 = load ptr, ptr %close_lockdb317, align 8, !dbg !7857, !tbaa !3295
  %236 = load ptr, ptr %lockdb, align 8, !dbg !7858, !tbaa !2416
  call void %235(ptr noundef %236), !dbg !7859
  br label %if.end318, !dbg !7859

if.end318:                                        ; preds = %if.then315, %if.then312
  %237 = load ptr, ptr %r.addr, align 8, !dbg !7860, !tbaa !2416
  %pool319 = getelementptr inbounds %struct.request_rec, ptr %237, i32 0, i32 0, !dbg !7861
  %238 = load ptr, ptr %pool319, align 8, !dbg !7861, !tbaa !2792
  %239 = load ptr, ptr %err, align 8, !dbg !7862, !tbaa !2416
  %status320 = getelementptr inbounds %struct.dav_error, ptr %239, i32 0, i32 0, !dbg !7863
  %240 = load i32, ptr %status320, align 8, !dbg !7863, !tbaa !2871
  %241 = load ptr, ptr %r.addr, align 8, !dbg !7864, !tbaa !2416
  %pool321 = getelementptr inbounds %struct.request_rec, ptr %241, i32 0, i32 0, !dbg !7865
  %242 = load ptr, ptr %pool321, align 8, !dbg !7865, !tbaa !2792
  %243 = load ptr, ptr %r.addr, align 8, !dbg !7866, !tbaa !2416
  %pool322 = getelementptr inbounds %struct.request_rec, ptr %243, i32 0, i32 0, !dbg !7866
  %244 = load ptr, ptr %pool322, align 8, !dbg !7866, !tbaa !2792
  %245 = load ptr, ptr %r.addr, align 8, !dbg !7866, !tbaa !2416
  %uri323 = getelementptr inbounds %struct.request_rec, ptr %245, i32 0, i32 47, !dbg !7866
  %246 = load ptr, ptr %uri323, align 8, !dbg !7866, !tbaa !3183
  %call324 = call ptr @ap_escape_html2(ptr noundef %244, ptr noundef %246, i32 noundef 0), !dbg !7866
  %call325 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %242, ptr noundef @.str.201, ptr noundef %call324), !dbg !7867
  %247 = load ptr, ptr %err, align 8, !dbg !7868, !tbaa !2416
  %call326 = call ptr @dav_push_error(ptr noundef %238, i32 noundef %240, i32 noundef 0, ptr noundef %call325, ptr noundef %247), !dbg !7869
  store ptr %call326, ptr %err, align 8, !dbg !7870, !tbaa !2416
  %248 = load ptr, ptr %r.addr, align 8, !dbg !7871, !tbaa !2416
  %249 = load ptr, ptr %err, align 8, !dbg !7872, !tbaa !2416
  %250 = load ptr, ptr %multi_response, align 8, !dbg !7873, !tbaa !2416
  %call327 = call i32 @dav_handle_err(ptr noundef %248, ptr noundef %249, ptr noundef %250), !dbg !7874
  store i32 %call327, ptr %retval, align 4, !dbg !7875
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7875

if.end328:                                        ; preds = %if.end309
  %251 = load ptr, ptr %err2, align 8, !dbg !7876, !tbaa !2416
  %cmp329 = icmp ne ptr %251, null, !dbg !7878
  br i1 %cmp329, label %if.then331, label %if.end335, !dbg !7879

if.then331:                                       ; preds = %if.end328
  %252 = load ptr, ptr %r.addr, align 8, !dbg !7880, !tbaa !2416
  %pool332 = getelementptr inbounds %struct.request_rec, ptr %252, i32 0, i32 0, !dbg !7882
  %253 = load ptr, ptr %pool332, align 8, !dbg !7882, !tbaa !2792
  %254 = load ptr, ptr %err2, align 8, !dbg !7883, !tbaa !2416
  %status333 = getelementptr inbounds %struct.dav_error, ptr %254, i32 0, i32 0, !dbg !7884
  %255 = load i32, ptr %status333, align 8, !dbg !7884, !tbaa !2871
  %256 = load ptr, ptr %err2, align 8, !dbg !7885, !tbaa !2416
  %call334 = call ptr @dav_push_error(ptr noundef %253, i32 noundef %255, i32 noundef 0, ptr noundef @.str.202, ptr noundef %256), !dbg !7886
  store ptr %call334, ptr %err, align 8, !dbg !7887, !tbaa !2416
  %257 = load ptr, ptr %r.addr, align 8, !dbg !7888, !tbaa !2416
  %258 = load ptr, ptr %err, align 8, !dbg !7889, !tbaa !2416
  call void @dav_log_err(ptr noundef %257, ptr noundef %258, i32 noundef 4), !dbg !7890
  br label %if.end335, !dbg !7891

if.end335:                                        ; preds = %if.then331, %if.end328
  %259 = load ptr, ptr %err3, align 8, !dbg !7892, !tbaa !2416
  %cmp336 = icmp ne ptr %259, null, !dbg !7894
  br i1 %cmp336, label %if.then338, label %if.end342, !dbg !7895

if.then338:                                       ; preds = %if.end335
  %260 = load ptr, ptr %r.addr, align 8, !dbg !7896, !tbaa !2416
  %pool339 = getelementptr inbounds %struct.request_rec, ptr %260, i32 0, i32 0, !dbg !7898
  %261 = load ptr, ptr %pool339, align 8, !dbg !7898, !tbaa !2792
  %262 = load ptr, ptr %err3, align 8, !dbg !7899, !tbaa !2416
  %status340 = getelementptr inbounds %struct.dav_error, ptr %262, i32 0, i32 0, !dbg !7900
  %263 = load i32, ptr %status340, align 8, !dbg !7900, !tbaa !2871
  %264 = load ptr, ptr %err3, align 8, !dbg !7901, !tbaa !2416
  %call341 = call ptr @dav_push_error(ptr noundef %261, i32 noundef %263, i32 noundef 0, ptr noundef @.str.203, ptr noundef %264), !dbg !7902
  store ptr %call341, ptr %err, align 8, !dbg !7903, !tbaa !2416
  %265 = load ptr, ptr %r.addr, align 8, !dbg !7904, !tbaa !2416
  %266 = load ptr, ptr %err, align 8, !dbg !7905, !tbaa !2416
  call void @dav_log_err(ptr noundef %265, ptr noundef %266, i32 noundef 4), !dbg !7906
  br label %if.end342, !dbg !7907

if.end342:                                        ; preds = %if.then338, %if.end335
  %267 = load ptr, ptr %lockdb, align 8, !dbg !7908, !tbaa !2416
  %cmp343 = icmp ne ptr %267, null, !dbg !7910
  br i1 %cmp343, label %if.then345, label %if.end357, !dbg !7911

if.then345:                                       ; preds = %if.end342
  %268 = load ptr, ptr %r.addr, align 8, !dbg !7912, !tbaa !2416
  %269 = load ptr, ptr %lockdb, align 8, !dbg !7914, !tbaa !2416
  %270 = load ptr, ptr %resnew, align 8, !dbg !7915, !tbaa !2416
  %271 = load i32, ptr %resnew_state, align 4, !dbg !7916, !tbaa !2683
  %272 = load i32, ptr %depth, align 4, !dbg !7917, !tbaa !2683
  %call346 = call ptr @dav_notify_created(ptr noundef %268, ptr noundef %269, ptr noundef %270, i32 noundef %271, i32 noundef %272), !dbg !7918
  store ptr %call346, ptr %err, align 8, !dbg !7919, !tbaa !2416
  %273 = load ptr, ptr %lockdb, align 8, !dbg !7920, !tbaa !2416
  %hooks347 = getelementptr inbounds %struct.dav_lockdb, ptr %273, i32 0, i32 0, !dbg !7921
  %274 = load ptr, ptr %hooks347, align 8, !dbg !7921, !tbaa !3292
  %close_lockdb348 = getelementptr inbounds %struct.dav_hooks_locks, ptr %274, i32 0, i32 5, !dbg !7922
  %275 = load ptr, ptr %close_lockdb348, align 8, !dbg !7922, !tbaa !3295
  %276 = load ptr, ptr %lockdb, align 8, !dbg !7923, !tbaa !2416
  call void %275(ptr noundef %276), !dbg !7924
  %277 = load ptr, ptr %err, align 8, !dbg !7925, !tbaa !2416
  %cmp349 = icmp ne ptr %277, null, !dbg !7927
  br i1 %cmp349, label %if.then351, label %if.end356, !dbg !7928

if.then351:                                       ; preds = %if.then345
  %278 = load ptr, ptr %r.addr, align 8, !dbg !7929, !tbaa !2416
  %pool352 = getelementptr inbounds %struct.request_rec, ptr %278, i32 0, i32 0, !dbg !7931
  %279 = load ptr, ptr %pool352, align 8, !dbg !7931, !tbaa !2792
  %280 = load ptr, ptr %err, align 8, !dbg !7932, !tbaa !2416
  %status353 = getelementptr inbounds %struct.dav_error, ptr %280, i32 0, i32 0, !dbg !7933
  %281 = load i32, ptr %status353, align 8, !dbg !7933, !tbaa !2871
  %282 = load ptr, ptr %err, align 8, !dbg !7934, !tbaa !2416
  %call354 = call ptr @dav_push_error(ptr noundef %279, i32 noundef %281, i32 noundef 0, ptr noundef @.str.204, ptr noundef %282), !dbg !7935
  store ptr %call354, ptr %err, align 8, !dbg !7936, !tbaa !2416
  %283 = load ptr, ptr %r.addr, align 8, !dbg !7937, !tbaa !2416
  %284 = load ptr, ptr %err, align 8, !dbg !7938, !tbaa !2416
  %call355 = call i32 @dav_handle_err(ptr noundef %283, ptr noundef %284, ptr noundef null), !dbg !7939
  store i32 %call355, ptr %retval, align 4, !dbg !7940
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7940

if.end356:                                        ; preds = %if.then345
  br label %if.end357, !dbg !7941

if.end357:                                        ; preds = %if.end356, %if.end342
  %285 = load ptr, ptr %r.addr, align 8, !dbg !7942, !tbaa !2416
  %rnew358 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !7943
  %286 = load ptr, ptr %rnew358, align 8, !dbg !7943, !tbaa !7393
  %unparsed_uri = getelementptr inbounds %struct.request_rec, ptr %286, i32 0, i32 46, !dbg !7944
  %287 = load ptr, ptr %unparsed_uri, align 8, !dbg !7944, !tbaa !7945
  %288 = load i32, ptr %resnew_state, align 4, !dbg !7946, !tbaa !2683
  %cmp359 = icmp eq i32 %288, 12, !dbg !7947
  %conv360 = zext i1 %cmp359 to i32, !dbg !7947
  %call361 = call i32 @dav_created(ptr noundef %285, ptr noundef %287, ptr noundef @.str.184, i32 noundef %conv360), !dbg !7948
  store i32 %call361, ptr %retval, align 4, !dbg !7949
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7949

cleanup:                                          ; preds = %if.end357, %if.then351, %if.end318, %if.end261, %if.end212, %if.then195, %if.then191, %if.then186, %if.then177, %if.then159, %if.then143, %do.end137, %do.end123, %if.then113, %if.then108, %if.then102, %if.then96, %if.then91, %if.then86, %if.then79, %if.end71, %if.end49, %do.end48, %do.end, %if.then12, %if.then9, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %resnew_state) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 4, ptr %replace_dest) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %lockdb) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 4, ptr %depth) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 4, ptr %overwrite) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_dir) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 64, ptr %lookup) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_response) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %err3) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %err2) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %dest) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %body) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 24, ptr %dst_av_info) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 24, ptr %src_av_info) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %resnew) #10, !dbg !7950
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !7950
  %289 = load i32, ptr %retval, align 4, !dbg !7950
  ret i32 %289, !dbg !7950
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_lock(ptr noundef %r) #0 !dbg !7951 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %err = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %parent = alloca ptr, align 8
  %locks_hooks = alloca ptr, align 8
  %result = alloca i32, align 4
  %depth = alloca i32, align 4
  %new_lock_request = alloca i32, align 4
  %doc = alloca ptr, align 8
  %lock = alloca ptr, align 8
  %multi_response = alloca ptr, align 8
  %lockdb = alloca ptr, align 8
  %resource_state = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %ltl = alloca ptr, align 8
  %locktoken_txt = alloca ptr, align 8
  %conf = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !7953, metadata !DIExpression()), !dbg !7974
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !7975
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !7954, metadata !DIExpression()), !dbg !7976
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !7977
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !7955, metadata !DIExpression()), !dbg !7978
  call void @llvm.lifetime.start.p0(i64 8, ptr %parent) #10, !dbg !7979
  tail call void @llvm.dbg.declare(metadata ptr %parent, metadata !7956, metadata !DIExpression()), !dbg !7980
  call void @llvm.lifetime.start.p0(i64 8, ptr %locks_hooks) #10, !dbg !7981
  tail call void @llvm.dbg.declare(metadata ptr %locks_hooks, metadata !7957, metadata !DIExpression()), !dbg !7982
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !7983
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !7958, metadata !DIExpression()), !dbg !7984
  call void @llvm.lifetime.start.p0(i64 4, ptr %depth) #10, !dbg !7985
  tail call void @llvm.dbg.declare(metadata ptr %depth, metadata !7959, metadata !DIExpression()), !dbg !7986
  call void @llvm.lifetime.start.p0(i64 4, ptr %new_lock_request) #10, !dbg !7987
  tail call void @llvm.dbg.declare(metadata ptr %new_lock_request, metadata !7960, metadata !DIExpression()), !dbg !7988
  store i32 0, ptr %new_lock_request, align 4, !dbg !7988, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !7989
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !7961, metadata !DIExpression()), !dbg !7990
  call void @llvm.lifetime.start.p0(i64 8, ptr %lock) #10, !dbg !7991
  tail call void @llvm.dbg.declare(metadata ptr %lock, metadata !7962, metadata !DIExpression()), !dbg !7992
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_response) #10, !dbg !7993
  tail call void @llvm.dbg.declare(metadata ptr %multi_response, metadata !7963, metadata !DIExpression()), !dbg !7994
  store ptr null, ptr %multi_response, align 8, !dbg !7994, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %lockdb) #10, !dbg !7995
  tail call void @llvm.dbg.declare(metadata ptr %lockdb, metadata !7964, metadata !DIExpression()), !dbg !7996
  call void @llvm.lifetime.start.p0(i64 4, ptr %resource_state) #10, !dbg !7997
  tail call void @llvm.dbg.declare(metadata ptr %resource_state, metadata !7965, metadata !DIExpression()), !dbg !7998
  %0 = load ptr, ptr %r.addr, align 8, !dbg !7999, !tbaa !2416
  %call = call ptr @dav_get_lock_hooks(ptr noundef %0), !dbg !7999
  store ptr %call, ptr %locks_hooks, align 8, !dbg !8000, !tbaa !2416
  %1 = load ptr, ptr %locks_hooks, align 8, !dbg !8001, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !8003
  br i1 %cmp, label %if.then, label %if.end, !dbg !8004

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !8005
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8005

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !8006, !tbaa !2416
  %call1 = call i32 @ap_xml_parse_input(ptr noundef %2, ptr noundef %doc), !dbg !8008
  store i32 %call1, ptr %result, align 4, !dbg !8009, !tbaa !2683
  %cmp2 = icmp ne i32 %call1, 0, !dbg !8010
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8011

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr %result, align 4, !dbg !8012, !tbaa !2683
  store i32 %3, ptr %retval, align 4, !dbg !8013
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8013

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %r.addr, align 8, !dbg !8014, !tbaa !2416
  %call5 = call i32 @dav_get_depth(ptr noundef %4, i32 noundef 2147483647), !dbg !8015
  store i32 %call5, ptr %depth, align 4, !dbg !8016, !tbaa !2683
  %5 = load i32, ptr %depth, align 4, !dbg !8017, !tbaa !2683
  %cmp6 = icmp ne i32 %5, 0, !dbg !8019
  br i1 %cmp6, label %land.lhs.true, label %if.end9, !dbg !8020

land.lhs.true:                                    ; preds = %if.end4
  %6 = load i32, ptr %depth, align 4, !dbg !8021, !tbaa !2683
  %cmp7 = icmp ne i32 %6, 2147483647, !dbg !8022
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8023

if.then8:                                         ; preds = %land.lhs.true
  br label %do.body, !dbg !8024

do.body:                                          ; preds = %if.then8
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !8026

cond.true:                                        ; preds = %do.body
  %7 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8026, !tbaa !2683
  br label %cond.end, !dbg !8026

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !8026

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ -1, %cond.false ], !dbg !8026
  %8 = load ptr, ptr %r.addr, align 8, !dbg !8026, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3166, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %8, ptr noundef @.str.207), !dbg !8026
  br label %do.cond, !dbg !8029

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !8029

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !8030
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8030

if.end9:                                          ; preds = %land.lhs.true, %if.end4
  %9 = load ptr, ptr %r.addr, align 8, !dbg !8031, !tbaa !2416
  %call10 = call ptr @dav_get_resource(ptr noundef %9, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !8032
  store ptr %call10, ptr %err, align 8, !dbg !8033, !tbaa !2416
  %10 = load ptr, ptr %err, align 8, !dbg !8034, !tbaa !2416
  %cmp11 = icmp ne ptr %10, null, !dbg !8036
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !8037

if.then12:                                        ; preds = %if.end9
  %11 = load ptr, ptr %r.addr, align 8, !dbg !8038, !tbaa !2416
  %12 = load ptr, ptr %err, align 8, !dbg !8039, !tbaa !2416
  %call13 = call i32 @dav_handle_err(ptr noundef %11, ptr noundef %12, ptr noundef null), !dbg !8040
  store i32 %call13, ptr %retval, align 4, !dbg !8041
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8041

if.end14:                                         ; preds = %if.end9
  %13 = load ptr, ptr %r.addr, align 8, !dbg !8042, !tbaa !2416
  %14 = load ptr, ptr %resource, align 8, !dbg !8044, !tbaa !2416
  %15 = load ptr, ptr %doc, align 8, !dbg !8045, !tbaa !2416
  %call15 = call i32 @dav_run_method_precondition(ptr noundef %13, ptr noundef %14, ptr noundef null, ptr noundef %15, ptr noundef %err), !dbg !8046
  %cmp16 = icmp ne i32 %call15, -1, !dbg !8047
  br i1 %cmp16, label %land.lhs.true17, label %if.end20, !dbg !8048

land.lhs.true17:                                  ; preds = %if.end14
  %16 = load ptr, ptr %err, align 8, !dbg !8049, !tbaa !2416
  %tobool = icmp ne ptr %16, null, !dbg !8049
  br i1 %tobool, label %if.then18, label %if.end20, !dbg !8050

if.then18:                                        ; preds = %land.lhs.true17
  %17 = load ptr, ptr %r.addr, align 8, !dbg !8051, !tbaa !2416
  %18 = load ptr, ptr %err, align 8, !dbg !8053, !tbaa !2416
  %call19 = call i32 @dav_handle_err(ptr noundef %17, ptr noundef %18, ptr noundef null), !dbg !8054
  store i32 %call19, ptr %retval, align 4, !dbg !8055
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8055

if.end20:                                         ; preds = %land.lhs.true17, %if.end14
  %19 = load ptr, ptr %resource, align 8, !dbg !8056, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %19, i32 0, i32 8, !dbg !8058
  %20 = load ptr, ptr %hooks, align 8, !dbg !8058, !tbaa !4791
  %get_parent_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %20, i32 0, i32 2, !dbg !8059
  %21 = load ptr, ptr %get_parent_resource, align 8, !dbg !8059, !tbaa !8060
  %22 = load ptr, ptr %resource, align 8, !dbg !8061, !tbaa !2416
  %call21 = call ptr %21(ptr noundef %22, ptr noundef %parent), !dbg !8056
  store ptr %call21, ptr %err, align 8, !dbg !8062, !tbaa !2416
  %cmp22 = icmp ne ptr %call21, null, !dbg !8063
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !8064

if.then23:                                        ; preds = %if.end20
  %23 = load ptr, ptr %r.addr, align 8, !dbg !8065, !tbaa !2416
  %24 = load ptr, ptr %err, align 8, !dbg !8067, !tbaa !2416
  %call24 = call i32 @dav_handle_err(ptr noundef %23, ptr noundef %24, ptr noundef null), !dbg !8068
  store i32 %call24, ptr %retval, align 4, !dbg !8069
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8069

if.end25:                                         ; preds = %if.end20
  %25 = load ptr, ptr %parent, align 8, !dbg !8070, !tbaa !2416
  %tobool26 = icmp ne ptr %25, null, !dbg !8070
  br i1 %tobool26, label %land.lhs.true27, label %if.end37, !dbg !8072

land.lhs.true27:                                  ; preds = %if.end25
  %26 = load ptr, ptr %parent, align 8, !dbg !8073, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %26, i32 0, i32 1, !dbg !8074
  %27 = load i32, ptr %exists, align 4, !dbg !8074, !tbaa !4784
  %tobool28 = icmp ne i32 %27, 0, !dbg !8073
  br i1 %tobool28, label %lor.lhs.false, label %if.then30, !dbg !8075

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %28 = load ptr, ptr %parent, align 8, !dbg !8076, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %28, i32 0, i32 2, !dbg !8077
  %29 = load i32, ptr %collection, align 8, !dbg !8077, !tbaa !4974
  %cmp29 = icmp ne i32 %29, 1, !dbg !8078
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !8079

if.then30:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %30 = load ptr, ptr %r.addr, align 8, !dbg !8080, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %30, i32 0, i32 0, !dbg !8082
  %31 = load ptr, ptr %pool, align 8, !dbg !8082, !tbaa !2792
  %32 = load ptr, ptr %r.addr, align 8, !dbg !8083, !tbaa !2416
  %pool31 = getelementptr inbounds %struct.request_rec, ptr %32, i32 0, i32 0, !dbg !8084
  %33 = load ptr, ptr %pool31, align 8, !dbg !8084, !tbaa !2792
  %34 = load ptr, ptr %r.addr, align 8, !dbg !8085, !tbaa !2416
  %pool32 = getelementptr inbounds %struct.request_rec, ptr %34, i32 0, i32 0, !dbg !8085
  %35 = load ptr, ptr %pool32, align 8, !dbg !8085, !tbaa !2792
  %36 = load ptr, ptr %r.addr, align 8, !dbg !8085, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %36, i32 0, i32 47, !dbg !8085
  %37 = load ptr, ptr %uri, align 8, !dbg !8085, !tbaa !3183
  %call33 = call ptr @ap_escape_html2(ptr noundef %35, ptr noundef %37, i32 noundef 0), !dbg !8085
  %call34 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %33, ptr noundef @.str.208, ptr noundef %call33), !dbg !8086
  %call35 = call ptr @dav_new_error(ptr noundef %31, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef %call34), !dbg !8087
  store ptr %call35, ptr %err, align 8, !dbg !8088, !tbaa !2416
  %38 = load ptr, ptr %r.addr, align 8, !dbg !8089, !tbaa !2416
  %39 = load ptr, ptr %err, align 8, !dbg !8090, !tbaa !2416
  %call36 = call i32 @dav_handle_err(ptr noundef %38, ptr noundef %39, ptr noundef null), !dbg !8091
  store i32 %call36, ptr %retval, align 4, !dbg !8092
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8092

if.end37:                                         ; preds = %lor.lhs.false, %if.end25
  %40 = load ptr, ptr %locks_hooks, align 8, !dbg !8093, !tbaa !2416
  %open_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %40, i32 0, i32 4, !dbg !8095
  %41 = load ptr, ptr %open_lockdb, align 8, !dbg !8095, !tbaa !3278
  %42 = load ptr, ptr %r.addr, align 8, !dbg !8096, !tbaa !2416
  %call38 = call ptr %41(ptr noundef %42, i32 noundef 0, i32 noundef 0, ptr noundef %lockdb), !dbg !8097
  store ptr %call38, ptr %err, align 8, !dbg !8098, !tbaa !2416
  %cmp39 = icmp ne ptr %call38, null, !dbg !8099
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !8100

if.then40:                                        ; preds = %if.end37
  %43 = load ptr, ptr %r.addr, align 8, !dbg !8101, !tbaa !2416
  %44 = load ptr, ptr %err, align 8, !dbg !8103, !tbaa !2416
  %call41 = call i32 @dav_handle_err(ptr noundef %43, ptr noundef %44, ptr noundef null), !dbg !8104
  store i32 %call41, ptr %retval, align 4, !dbg !8105
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8105

if.end42:                                         ; preds = %if.end37
  %45 = load ptr, ptr %doc, align 8, !dbg !8106, !tbaa !2416
  %cmp43 = icmp ne ptr %45, null, !dbg !8108
  br i1 %cmp43, label %if.then44, label %if.end51, !dbg !8109

if.then44:                                        ; preds = %if.end42
  %46 = load ptr, ptr %r.addr, align 8, !dbg !8110, !tbaa !2416
  %47 = load ptr, ptr %resource, align 8, !dbg !8113, !tbaa !2416
  %48 = load ptr, ptr %lockdb, align 8, !dbg !8114, !tbaa !2416
  %49 = load ptr, ptr %doc, align 8, !dbg !8115, !tbaa !2416
  %call45 = call ptr @dav_lock_parse_lockinfo(ptr noundef %46, ptr noundef %47, ptr noundef %48, ptr noundef %49, ptr noundef %lock), !dbg !8116
  store ptr %call45, ptr %err, align 8, !dbg !8117, !tbaa !2416
  %cmp46 = icmp ne ptr %call45, null, !dbg !8118
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !8119

if.then47:                                        ; preds = %if.then44
  br label %error, !dbg !8120

if.end48:                                         ; preds = %if.then44
  store i32 1, ptr %new_lock_request, align 4, !dbg !8122, !tbaa !2683
  %50 = load ptr, ptr %r.addr, align 8, !dbg !8123, !tbaa !2416
  %pool49 = getelementptr inbounds %struct.request_rec, ptr %50, i32 0, i32 0, !dbg !8124
  %51 = load ptr, ptr %pool49, align 8, !dbg !8124, !tbaa !2792
  %52 = load ptr, ptr %r.addr, align 8, !dbg !8125, !tbaa !2416
  %user = getelementptr inbounds %struct.request_rec, ptr %52, i32 0, i32 44, !dbg !8126
  %53 = load ptr, ptr %user, align 8, !dbg !8126, !tbaa !8127
  %call50 = call ptr @apr_pstrdup(ptr noundef %51, ptr noundef %53), !dbg !8128
  %54 = load ptr, ptr %lock, align 8, !dbg !8129, !tbaa !2416
  %auth_user = getelementptr inbounds %struct.dav_lock, ptr %54, i32 0, i32 8, !dbg !8130
  store ptr %call50, ptr %auth_user, align 8, !dbg !8131, !tbaa !8132
  br label %if.end51, !dbg !8134

if.end51:                                         ; preds = %if.end48, %if.end42
  %55 = load ptr, ptr %r.addr, align 8, !dbg !8135, !tbaa !2416
  %56 = load ptr, ptr %resource, align 8, !dbg !8136, !tbaa !2416
  %call52 = call i32 @dav_get_resource_state(ptr noundef %55, ptr noundef %56), !dbg !8137
  store i32 %call52, ptr %resource_state, align 4, !dbg !8138, !tbaa !2683
  %57 = load ptr, ptr %r.addr, align 8, !dbg !8139, !tbaa !2416
  %58 = load ptr, ptr %resource, align 8, !dbg !8141, !tbaa !2416
  %59 = load i32, ptr %depth, align 4, !dbg !8142, !tbaa !2683
  %60 = load i32, ptr %resource_state, align 4, !dbg !8143, !tbaa !2683
  %cmp53 = icmp eq i32 %60, 11, !dbg !8144
  %61 = zext i1 %cmp53 to i64, !dbg !8143
  %cond54 = select i1 %cmp53, i32 32, i32 16, !dbg !8143
  %62 = load i32, ptr %new_lock_request, align 4, !dbg !8145, !tbaa !2683
  %tobool55 = icmp ne i32 %62, 0, !dbg !8145
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8145

cond.true56:                                      ; preds = %if.end51
  %63 = load ptr, ptr %lock, align 8, !dbg !8146, !tbaa !2416
  %scope = getelementptr inbounds %struct.dav_lock, ptr %63, i32 0, i32 2, !dbg !8147
  %64 = load i32, ptr %scope, align 8, !dbg !8147, !tbaa !8148
  br label %cond.end58, !dbg !8145

cond.false57:                                     ; preds = %if.end51
  br label %cond.end58, !dbg !8145

cond.end58:                                       ; preds = %cond.false57, %cond.true56
  %cond59 = phi i32 [ %64, %cond.true56 ], [ 0, %cond.false57 ], !dbg !8145
  %or = or i32 %cond54, %cond59, !dbg !8149
  %or60 = or i32 %or, 64, !dbg !8150
  %65 = load ptr, ptr %lockdb, align 8, !dbg !8151, !tbaa !2416
  %call61 = call ptr @dav_validate_request(ptr noundef %57, ptr noundef %58, i32 noundef %59, ptr noundef null, ptr noundef %multi_response, i32 noundef %or60, ptr noundef %65), !dbg !8152
  store ptr %call61, ptr %err, align 8, !dbg !8153, !tbaa !2416
  %cmp62 = icmp ne ptr %call61, null, !dbg !8154
  br i1 %cmp62, label %if.then63, label %if.end71, !dbg !8155

if.then63:                                        ; preds = %cond.end58
  %66 = load ptr, ptr %r.addr, align 8, !dbg !8156, !tbaa !2416
  %pool64 = getelementptr inbounds %struct.request_rec, ptr %66, i32 0, i32 0, !dbg !8158
  %67 = load ptr, ptr %pool64, align 8, !dbg !8158, !tbaa !2792
  %68 = load ptr, ptr %err, align 8, !dbg !8159, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %68, i32 0, i32 0, !dbg !8160
  %69 = load i32, ptr %status, align 8, !dbg !8160, !tbaa !2871
  %70 = load ptr, ptr %r.addr, align 8, !dbg !8161, !tbaa !2416
  %pool65 = getelementptr inbounds %struct.request_rec, ptr %70, i32 0, i32 0, !dbg !8162
  %71 = load ptr, ptr %pool65, align 8, !dbg !8162, !tbaa !2792
  %72 = load ptr, ptr %r.addr, align 8, !dbg !8163, !tbaa !2416
  %pool66 = getelementptr inbounds %struct.request_rec, ptr %72, i32 0, i32 0, !dbg !8163
  %73 = load ptr, ptr %pool66, align 8, !dbg !8163, !tbaa !2792
  %74 = load ptr, ptr %r.addr, align 8, !dbg !8163, !tbaa !2416
  %uri67 = getelementptr inbounds %struct.request_rec, ptr %74, i32 0, i32 47, !dbg !8163
  %75 = load ptr, ptr %uri67, align 8, !dbg !8163, !tbaa !3183
  %call68 = call ptr @ap_escape_html2(ptr noundef %73, ptr noundef %75, i32 noundef 0), !dbg !8163
  %call69 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %71, ptr noundef @.str.209, ptr noundef %call68), !dbg !8164
  %76 = load ptr, ptr %err, align 8, !dbg !8165, !tbaa !2416
  %call70 = call ptr @dav_push_error(ptr noundef %67, i32 noundef %69, i32 noundef 0, ptr noundef %call69, ptr noundef %76), !dbg !8166
  store ptr %call70, ptr %err, align 8, !dbg !8167, !tbaa !2416
  br label %error, !dbg !8168

if.end71:                                         ; preds = %cond.end58
  %77 = load i32, ptr %new_lock_request, align 4, !dbg !8169, !tbaa !2683
  %cmp72 = icmp eq i32 %77, 0, !dbg !8170
  br i1 %cmp72, label %if.then73, label %if.else, !dbg !8171

if.then73:                                        ; preds = %if.end71
  call void @llvm.lifetime.start.p0(i64 8, ptr %ltl) #10, !dbg !8172
  tail call void @llvm.dbg.declare(metadata ptr %ltl, metadata !7966, metadata !DIExpression()), !dbg !8173
  %78 = load ptr, ptr %r.addr, align 8, !dbg !8174, !tbaa !2416
  %call74 = call ptr @dav_get_locktoken_list(ptr noundef %78, ptr noundef %ltl), !dbg !8176
  store ptr %call74, ptr %err, align 8, !dbg !8177, !tbaa !2416
  %cmp75 = icmp ne ptr %call74, null, !dbg !8178
  br i1 %cmp75, label %if.then76, label %if.end85, !dbg !8179

if.then76:                                        ; preds = %if.then73
  %79 = load ptr, ptr %r.addr, align 8, !dbg !8180, !tbaa !2416
  %pool77 = getelementptr inbounds %struct.request_rec, ptr %79, i32 0, i32 0, !dbg !8182
  %80 = load ptr, ptr %pool77, align 8, !dbg !8182, !tbaa !2792
  %81 = load ptr, ptr %err, align 8, !dbg !8183, !tbaa !2416
  %status78 = getelementptr inbounds %struct.dav_error, ptr %81, i32 0, i32 0, !dbg !8184
  %82 = load i32, ptr %status78, align 8, !dbg !8184, !tbaa !2871
  %83 = load ptr, ptr %r.addr, align 8, !dbg !8185, !tbaa !2416
  %pool79 = getelementptr inbounds %struct.request_rec, ptr %83, i32 0, i32 0, !dbg !8186
  %84 = load ptr, ptr %pool79, align 8, !dbg !8186, !tbaa !2792
  %85 = load ptr, ptr %r.addr, align 8, !dbg !8187, !tbaa !2416
  %pool80 = getelementptr inbounds %struct.request_rec, ptr %85, i32 0, i32 0, !dbg !8187
  %86 = load ptr, ptr %pool80, align 8, !dbg !8187, !tbaa !2792
  %87 = load ptr, ptr %r.addr, align 8, !dbg !8187, !tbaa !2416
  %uri81 = getelementptr inbounds %struct.request_rec, ptr %87, i32 0, i32 47, !dbg !8187
  %88 = load ptr, ptr %uri81, align 8, !dbg !8187, !tbaa !3183
  %call82 = call ptr @ap_escape_html2(ptr noundef %86, ptr noundef %88, i32 noundef 0), !dbg !8187
  %call83 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %84, ptr noundef @.str.210, ptr noundef %call82), !dbg !8188
  %89 = load ptr, ptr %err, align 8, !dbg !8189, !tbaa !2416
  %call84 = call ptr @dav_push_error(ptr noundef %80, i32 noundef %82, i32 noundef 0, ptr noundef %call83, ptr noundef %89), !dbg !8190
  store ptr %call84, ptr %err, align 8, !dbg !8191, !tbaa !2416
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8192

if.end85:                                         ; preds = %if.then73
  %90 = load ptr, ptr %locks_hooks, align 8, !dbg !8193, !tbaa !2416
  %refresh_locks = getelementptr inbounds %struct.dav_hooks_locks, ptr %90, i32 0, i32 13, !dbg !8195
  %91 = load ptr, ptr %refresh_locks, align 8, !dbg !8195, !tbaa !8196
  %92 = load ptr, ptr %lockdb, align 8, !dbg !8197, !tbaa !2416
  %93 = load ptr, ptr %resource, align 8, !dbg !8198, !tbaa !2416
  %94 = load ptr, ptr %ltl, align 8, !dbg !8199, !tbaa !2416
  %95 = load ptr, ptr %r.addr, align 8, !dbg !8200, !tbaa !2416
  %call86 = call i64 @dav_get_timeout(ptr noundef %95), !dbg !8201
  %call87 = call ptr %91(ptr noundef %92, ptr noundef %93, ptr noundef %94, i64 noundef %call86, ptr noundef %lock), !dbg !8202
  store ptr %call87, ptr %err, align 8, !dbg !8203, !tbaa !2416
  %cmp88 = icmp ne ptr %call87, null, !dbg !8204
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !8205

if.then89:                                        ; preds = %if.end85
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8206

if.end90:                                         ; preds = %if.end85
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8208
  br label %cleanup, !dbg !8208

cleanup:                                          ; preds = %if.then89, %if.then76, %if.end90
  call void @llvm.lifetime.end.p0(i64 8, ptr %ltl) #10, !dbg !8208
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup131 [
    i32 0, label %cleanup.cont
    i32 4, label %error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end117, !dbg !8209

if.else:                                          ; preds = %if.end71
  call void @llvm.lifetime.start.p0(i64 8, ptr %locktoken_txt) #10, !dbg !8210
  tail call void @llvm.dbg.declare(metadata ptr %locktoken_txt, metadata !7970, metadata !DIExpression()), !dbg !8211
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !8212
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !7972, metadata !DIExpression()), !dbg !8213
  %96 = load ptr, ptr %r.addr, align 8, !dbg !8214, !tbaa !2416
  %per_dir_config = getelementptr inbounds %struct.request_rec, ptr %96, i32 0, i32 54, !dbg !8214
  %97 = load ptr, ptr %per_dir_config, align 8, !dbg !8214, !tbaa !2424
  %98 = load i32, ptr getelementptr inbounds (%struct.module_struct, ptr @dav_module, i32 0, i32 2), align 8, !dbg !8214, !tbaa !2431
  %idxprom = sext i32 %98 to i64, !dbg !8214
  %arrayidx = getelementptr inbounds ptr, ptr %97, i64 %idxprom, !dbg !8214
  %99 = load ptr, ptr %arrayidx, align 8, !dbg !8214, !tbaa !2416
  store ptr %99, ptr %conf, align 8, !dbg !8215, !tbaa !2416
  %100 = load ptr, ptr %lock, align 8, !dbg !8216, !tbaa !2416
  %timeout = getelementptr inbounds %struct.dav_lock, ptr %100, i32 0, i32 5, !dbg !8218
  %101 = load i64, ptr %timeout, align 8, !dbg !8218, !tbaa !8219
  %cmp91 = icmp ne i64 %101, 0, !dbg !8220
  br i1 %cmp91, label %land.lhs.true92, label %if.end103, !dbg !8221

land.lhs.true92:                                  ; preds = %if.else
  %102 = load ptr, ptr %lock, align 8, !dbg !8222, !tbaa !2416
  %timeout93 = getelementptr inbounds %struct.dav_lock, ptr %102, i32 0, i32 5, !dbg !8223
  %103 = load i64, ptr %timeout93, align 8, !dbg !8223, !tbaa !8219
  %call94 = call i64 @time(ptr noundef null) #10, !dbg !8224
  %104 = load ptr, ptr %conf, align 8, !dbg !8225, !tbaa !2416
  %locktimeout = getelementptr inbounds %struct.dav_dir_conf, ptr %104, i32 0, i32 3, !dbg !8226
  %105 = load i32, ptr %locktimeout, align 8, !dbg !8226, !tbaa !3664
  %conv = sext i32 %105 to i64, !dbg !8225
  %add = add nsw i64 %call94, %conv, !dbg !8227
  %cmp95 = icmp slt i64 %103, %add, !dbg !8228
  br i1 %cmp95, label %if.then97, label %if.end103, !dbg !8229

if.then97:                                        ; preds = %land.lhs.true92
  %call98 = call i64 @time(ptr noundef null) #10, !dbg !8230
  %106 = load ptr, ptr %conf, align 8, !dbg !8231, !tbaa !2416
  %locktimeout99 = getelementptr inbounds %struct.dav_dir_conf, ptr %106, i32 0, i32 3, !dbg !8232
  %107 = load i32, ptr %locktimeout99, align 8, !dbg !8232, !tbaa !3664
  %conv100 = sext i32 %107 to i64, !dbg !8231
  %add101 = add nsw i64 %call98, %conv100, !dbg !8233
  %108 = load ptr, ptr %lock, align 8, !dbg !8234, !tbaa !2416
  %timeout102 = getelementptr inbounds %struct.dav_lock, ptr %108, i32 0, i32 5, !dbg !8235
  store i64 %add101, ptr %timeout102, align 8, !dbg !8236, !tbaa !8219
  br label %if.end103, !dbg !8234

if.end103:                                        ; preds = %if.then97, %land.lhs.true92, %if.else
  %109 = load ptr, ptr %r.addr, align 8, !dbg !8237, !tbaa !2416
  %110 = load ptr, ptr %resource, align 8, !dbg !8238, !tbaa !2416
  %111 = load ptr, ptr %lockdb, align 8, !dbg !8239, !tbaa !2416
  %112 = load ptr, ptr %lock, align 8, !dbg !8240, !tbaa !2416
  %call104 = call ptr @dav_add_lock(ptr noundef %109, ptr noundef %110, ptr noundef %111, ptr noundef %112, ptr noundef %multi_response), !dbg !8241
  store ptr %call104, ptr %err, align 8, !dbg !8242, !tbaa !2416
  %113 = load ptr, ptr %err, align 8, !dbg !8243, !tbaa !2416
  %cmp105 = icmp ne ptr %113, null, !dbg !8245
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !8246

if.then107:                                       ; preds = %if.end103
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup113, !dbg !8247

if.end108:                                        ; preds = %if.end103
  %114 = load ptr, ptr %r.addr, align 8, !dbg !8249, !tbaa !2416
  %pool109 = getelementptr inbounds %struct.request_rec, ptr %114, i32 0, i32 0, !dbg !8250
  %115 = load ptr, ptr %pool109, align 8, !dbg !8250, !tbaa !2792
  %116 = load ptr, ptr %locks_hooks, align 8, !dbg !8251, !tbaa !2416
  %format_locktoken = getelementptr inbounds %struct.dav_hooks_locks, ptr %116, i32 0, i32 2, !dbg !8252
  %117 = load ptr, ptr %format_locktoken, align 8, !dbg !8252, !tbaa !8253
  %118 = load ptr, ptr %r.addr, align 8, !dbg !8254, !tbaa !2416
  %pool110 = getelementptr inbounds %struct.request_rec, ptr %118, i32 0, i32 0, !dbg !8255
  %119 = load ptr, ptr %pool110, align 8, !dbg !8255, !tbaa !2792
  %120 = load ptr, ptr %lock, align 8, !dbg !8256, !tbaa !2416
  %locktoken = getelementptr inbounds %struct.dav_lock, ptr %120, i32 0, i32 6, !dbg !8257
  %121 = load ptr, ptr %locktoken, align 8, !dbg !8257, !tbaa !8258
  %call111 = call ptr %117(ptr noundef %119, ptr noundef %121), !dbg !8259
  %call112 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %115, ptr noundef @.str.211, ptr noundef %call111, ptr noundef @.str.212, ptr noundef null), !dbg !8260
  store ptr %call112, ptr %locktoken_txt, align 8, !dbg !8261, !tbaa !2416
  %122 = load ptr, ptr %r.addr, align 8, !dbg !8262, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %122, i32 0, i32 35, !dbg !8263
  %123 = load ptr, ptr %headers_out, align 8, !dbg !8263, !tbaa !5817
  %124 = load ptr, ptr %locktoken_txt, align 8, !dbg !8264, !tbaa !2416
  call void @apr_table_setn(ptr noundef %123, ptr noundef @.str.213, ptr noundef %124), !dbg !8265
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8266
  br label %cleanup113, !dbg !8266

cleanup113:                                       ; preds = %if.then107, %if.end108
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !8266
  call void @llvm.lifetime.end.p0(i64 8, ptr %locktoken_txt) #10, !dbg !8266
  %cleanup.dest115 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest115, label %cleanup131 [
    i32 0, label %cleanup.cont116
    i32 4, label %error
  ]

cleanup.cont116:                                  ; preds = %cleanup113
  br label %if.end117

if.end117:                                        ; preds = %cleanup.cont116, %cleanup.cont
  %125 = load ptr, ptr %locks_hooks, align 8, !dbg !8267, !tbaa !2416
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %125, i32 0, i32 5, !dbg !8268
  %126 = load ptr, ptr %close_lockdb, align 8, !dbg !8268, !tbaa !3295
  %127 = load ptr, ptr %lockdb, align 8, !dbg !8269, !tbaa !2416
  call void %126(ptr noundef %127), !dbg !8270
  %128 = load ptr, ptr %r.addr, align 8, !dbg !8271, !tbaa !2416
  %status118 = getelementptr inbounds %struct.request_rec, ptr %128, i32 0, i32 15, !dbg !8272
  store i32 200, ptr %status118, align 8, !dbg !8273, !tbaa !2690
  %129 = load ptr, ptr %r.addr, align 8, !dbg !8274, !tbaa !2416
  call void @ap_set_content_type(ptr noundef %129, ptr noundef @.str.9), !dbg !8275
  %130 = load ptr, ptr %r.addr, align 8, !dbg !8276, !tbaa !2416
  %call119 = call i32 @ap_rputs(ptr noundef @.str.214, ptr noundef %130), !dbg !8277
  %131 = load ptr, ptr %lock, align 8, !dbg !8278, !tbaa !2416
  %cmp120 = icmp eq ptr %131, null, !dbg !8280
  br i1 %cmp120, label %if.then122, label %if.else124, !dbg !8281

if.then122:                                       ; preds = %if.end117
  %132 = load ptr, ptr %r.addr, align 8, !dbg !8282, !tbaa !2416
  %call123 = call i32 @ap_rputs(ptr noundef @.str.215, ptr noundef %132), !dbg !8283
  br label %if.end127, !dbg !8283

if.else124:                                       ; preds = %if.end117
  %133 = load ptr, ptr %r.addr, align 8, !dbg !8284, !tbaa !2416
  %134 = load ptr, ptr %r.addr, align 8, !dbg !8286, !tbaa !2416
  %135 = load ptr, ptr %lock, align 8, !dbg !8287, !tbaa !2416
  %call125 = call ptr @dav_lock_get_activelock(ptr noundef %134, ptr noundef %135, ptr noundef null), !dbg !8288
  %call126 = call i32 (ptr, ptr, ...) @ap_rprintf(ptr noundef %133, ptr noundef @.str.216, ptr noundef %call125), !dbg !8289
  br label %if.end127

if.end127:                                        ; preds = %if.else124, %if.then122
  %136 = load ptr, ptr %r.addr, align 8, !dbg !8290, !tbaa !2416
  %call128 = call i32 @ap_rputs(ptr noundef @.str.217, ptr noundef %136), !dbg !8291
  store i32 -2, ptr %retval, align 4, !dbg !8292
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8292

error:                                            ; preds = %cleanup113, %cleanup, %if.then63, %if.then47
  tail call void @llvm.dbg.label(metadata !7973), !dbg !8293
  %137 = load ptr, ptr %locks_hooks, align 8, !dbg !8294, !tbaa !2416
  %close_lockdb129 = getelementptr inbounds %struct.dav_hooks_locks, ptr %137, i32 0, i32 5, !dbg !8295
  %138 = load ptr, ptr %close_lockdb129, align 8, !dbg !8295, !tbaa !3295
  %139 = load ptr, ptr %lockdb, align 8, !dbg !8296, !tbaa !2416
  call void %138(ptr noundef %139), !dbg !8297
  %140 = load ptr, ptr %r.addr, align 8, !dbg !8298, !tbaa !2416
  %141 = load ptr, ptr %err, align 8, !dbg !8299, !tbaa !2416
  %142 = load ptr, ptr %multi_response, align 8, !dbg !8300, !tbaa !2416
  %call130 = call i32 @dav_handle_err(ptr noundef %140, ptr noundef %141, ptr noundef %142), !dbg !8301
  store i32 %call130, ptr %retval, align 4, !dbg !8302
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup131, !dbg !8302

cleanup131:                                       ; preds = %error, %if.end127, %cleanup113, %cleanup, %if.then40, %if.then30, %if.then23, %if.then18, %if.then12, %do.end, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %resource_state) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %lockdb) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_response) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %lock) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 4, ptr %new_lock_request) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 4, ptr %depth) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %locks_hooks) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %parent) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !8303
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !8303
  %143 = load i32, ptr %retval, align 4, !dbg !8303
  ret i32 %143, !dbg !8303
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_unlock(ptr noundef %r) #0 !dbg !8304 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %err = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %locks_hooks = alloca ptr, align 8
  %result = alloca i32, align 4
  %const_locktoken_txt = alloca ptr, align 8
  %locktoken_txt = alloca ptr, align 8
  %locktoken = alloca ptr, align 8
  %resource_state = alloca i32, align 4
  %multi_response = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !8306, metadata !DIExpression()), !dbg !8316
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !8317
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !8307, metadata !DIExpression()), !dbg !8318
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !8319
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !8308, metadata !DIExpression()), !dbg !8320
  call void @llvm.lifetime.start.p0(i64 8, ptr %locks_hooks) #10, !dbg !8321
  tail call void @llvm.dbg.declare(metadata ptr %locks_hooks, metadata !8309, metadata !DIExpression()), !dbg !8322
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !8323
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !8310, metadata !DIExpression()), !dbg !8324
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_locktoken_txt) #10, !dbg !8325
  tail call void @llvm.dbg.declare(metadata ptr %const_locktoken_txt, metadata !8311, metadata !DIExpression()), !dbg !8326
  call void @llvm.lifetime.start.p0(i64 8, ptr %locktoken_txt) #10, !dbg !8327
  tail call void @llvm.dbg.declare(metadata ptr %locktoken_txt, metadata !8312, metadata !DIExpression()), !dbg !8328
  call void @llvm.lifetime.start.p0(i64 8, ptr %locktoken) #10, !dbg !8329
  tail call void @llvm.dbg.declare(metadata ptr %locktoken, metadata !8313, metadata !DIExpression()), !dbg !8330
  store ptr null, ptr %locktoken, align 8, !dbg !8330, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 4, ptr %resource_state) #10, !dbg !8331
  tail call void @llvm.dbg.declare(metadata ptr %resource_state, metadata !8314, metadata !DIExpression()), !dbg !8332
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_response) #10, !dbg !8333
  tail call void @llvm.dbg.declare(metadata ptr %multi_response, metadata !8315, metadata !DIExpression()), !dbg !8334
  %0 = load ptr, ptr %r.addr, align 8, !dbg !8335, !tbaa !2416
  %call = call ptr @dav_get_lock_hooks(ptr noundef %0), !dbg !8335
  store ptr %call, ptr %locks_hooks, align 8, !dbg !8336, !tbaa !2416
  %1 = load ptr, ptr %locks_hooks, align 8, !dbg !8337, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !8339
  br i1 %cmp, label %if.then, label %if.end, !dbg !8340

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !8341
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8341

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !8342, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %2, i32 0, i32 34, !dbg !8344
  %3 = load ptr, ptr %headers_in, align 8, !dbg !8344, !tbaa !3088
  %call1 = call ptr @apr_table_get(ptr noundef %3, ptr noundef @.str.213), !dbg !8345
  store ptr %call1, ptr %const_locktoken_txt, align 8, !dbg !8346, !tbaa !2416
  %cmp2 = icmp eq ptr %call1, null, !dbg !8347
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8348

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !8349

do.body:                                          ; preds = %if.then3
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !8351

cond.true:                                        ; preds = %do.body
  %4 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8351, !tbaa !2683
  br label %cond.end, !dbg !8351

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !8351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !8351
  %5 = load ptr, ptr %r.addr, align 8, !dbg !8351, !tbaa !2416
  %6 = load ptr, ptr %r.addr, align 8, !dbg !8351, !tbaa !2416
  %filename = getelementptr inbounds %struct.request_rec, ptr %6, i32 0, i32 48, !dbg !8351
  %7 = load ptr, ptr %filename, align 8, !dbg !8351, !tbaa !8354
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3345, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %5, ptr noundef @.str.218, ptr noundef %7), !dbg !8351
  br label %do.cond, !dbg !8355

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !8355

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !8356
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8356

if.end4:                                          ; preds = %if.end
  %8 = load ptr, ptr %r.addr, align 8, !dbg !8357, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %8, i32 0, i32 0, !dbg !8358
  %9 = load ptr, ptr %pool, align 8, !dbg !8358, !tbaa !2792
  %10 = load ptr, ptr %const_locktoken_txt, align 8, !dbg !8359, !tbaa !2416
  %call5 = call ptr @apr_pstrdup(ptr noundef %9, ptr noundef %10), !dbg !8360
  store ptr %call5, ptr %locktoken_txt, align 8, !dbg !8361, !tbaa !2416
  %11 = load ptr, ptr %locktoken_txt, align 8, !dbg !8362, !tbaa !2416
  %arrayidx = getelementptr inbounds i8, ptr %11, i64 0, !dbg !8362
  %12 = load i8, ptr %arrayidx, align 1, !dbg !8362, !tbaa !2961
  %conv = sext i8 %12 to i32, !dbg !8362
  %cmp6 = icmp ne i32 %conv, 60, !dbg !8364
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !8365

if.then8:                                         ; preds = %if.end4
  store i32 400, ptr %retval, align 4, !dbg !8366
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8366

if.end9:                                          ; preds = %if.end4
  %13 = load ptr, ptr %locktoken_txt, align 8, !dbg !8368, !tbaa !2416
  %incdec.ptr = getelementptr inbounds i8, ptr %13, i32 1, !dbg !8368
  store ptr %incdec.ptr, ptr %locktoken_txt, align 8, !dbg !8368, !tbaa !2416
  %14 = load ptr, ptr %locktoken_txt, align 8, !dbg !8369, !tbaa !2416
  %15 = load ptr, ptr %locktoken_txt, align 8, !dbg !8371, !tbaa !2416
  %call10 = call i64 @strlen(ptr noundef %15) #11, !dbg !8372
  %sub = sub i64 %call10, 1, !dbg !8373
  %arrayidx11 = getelementptr inbounds i8, ptr %14, i64 %sub, !dbg !8369
  %16 = load i8, ptr %arrayidx11, align 1, !dbg !8369, !tbaa !2961
  %conv12 = sext i8 %16 to i32, !dbg !8369
  %cmp13 = icmp ne i32 %conv12, 62, !dbg !8374
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8375

if.then15:                                        ; preds = %if.end9
  store i32 400, ptr %retval, align 4, !dbg !8376
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8376

if.end16:                                         ; preds = %if.end9
  %17 = load ptr, ptr %locktoken_txt, align 8, !dbg !8378, !tbaa !2416
  %18 = load ptr, ptr %locktoken_txt, align 8, !dbg !8379, !tbaa !2416
  %call17 = call i64 @strlen(ptr noundef %18) #11, !dbg !8380
  %sub18 = sub i64 %call17, 1, !dbg !8381
  %arrayidx19 = getelementptr inbounds i8, ptr %17, i64 %sub18, !dbg !8378
  store i8 0, ptr %arrayidx19, align 1, !dbg !8382, !tbaa !2961
  %19 = load ptr, ptr %locks_hooks, align 8, !dbg !8383, !tbaa !2416
  %parse_locktoken = getelementptr inbounds %struct.dav_hooks_locks, ptr %19, i32 0, i32 1, !dbg !8385
  %20 = load ptr, ptr %parse_locktoken, align 8, !dbg !8385, !tbaa !8386
  %21 = load ptr, ptr %r.addr, align 8, !dbg !8387, !tbaa !2416
  %pool20 = getelementptr inbounds %struct.request_rec, ptr %21, i32 0, i32 0, !dbg !8388
  %22 = load ptr, ptr %pool20, align 8, !dbg !8388, !tbaa !2792
  %23 = load ptr, ptr %locktoken_txt, align 8, !dbg !8389, !tbaa !2416
  %call21 = call ptr %20(ptr noundef %22, ptr noundef %23, ptr noundef %locktoken), !dbg !8390
  store ptr %call21, ptr %err, align 8, !dbg !8391, !tbaa !2416
  %cmp22 = icmp ne ptr %call21, null, !dbg !8392
  br i1 %cmp22, label %if.then24, label %if.end32, !dbg !8393

if.then24:                                        ; preds = %if.end16
  %24 = load ptr, ptr %r.addr, align 8, !dbg !8394, !tbaa !2416
  %pool25 = getelementptr inbounds %struct.request_rec, ptr %24, i32 0, i32 0, !dbg !8396
  %25 = load ptr, ptr %pool25, align 8, !dbg !8396, !tbaa !2792
  %26 = load ptr, ptr %r.addr, align 8, !dbg !8397, !tbaa !2416
  %pool26 = getelementptr inbounds %struct.request_rec, ptr %26, i32 0, i32 0, !dbg !8398
  %27 = load ptr, ptr %pool26, align 8, !dbg !8398, !tbaa !2792
  %28 = load ptr, ptr %r.addr, align 8, !dbg !8399, !tbaa !2416
  %pool27 = getelementptr inbounds %struct.request_rec, ptr %28, i32 0, i32 0, !dbg !8399
  %29 = load ptr, ptr %pool27, align 8, !dbg !8399, !tbaa !2792
  %30 = load ptr, ptr %r.addr, align 8, !dbg !8399, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %30, i32 0, i32 47, !dbg !8399
  %31 = load ptr, ptr %uri, align 8, !dbg !8399, !tbaa !3183
  %call28 = call ptr @ap_escape_html2(ptr noundef %29, ptr noundef %31, i32 noundef 0), !dbg !8399
  %call29 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %27, ptr noundef @.str.219, ptr noundef %call28), !dbg !8400
  %32 = load ptr, ptr %err, align 8, !dbg !8401, !tbaa !2416
  %call30 = call ptr @dav_push_error(ptr noundef %25, i32 noundef 400, i32 noundef 0, ptr noundef %call29, ptr noundef %32), !dbg !8402
  store ptr %call30, ptr %err, align 8, !dbg !8403, !tbaa !2416
  %33 = load ptr, ptr %r.addr, align 8, !dbg !8404, !tbaa !2416
  %34 = load ptr, ptr %err, align 8, !dbg !8405, !tbaa !2416
  %call31 = call i32 @dav_handle_err(ptr noundef %33, ptr noundef %34, ptr noundef null), !dbg !8406
  store i32 %call31, ptr %retval, align 4, !dbg !8407
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8407

if.end32:                                         ; preds = %if.end16
  %35 = load ptr, ptr %r.addr, align 8, !dbg !8408, !tbaa !2416
  %call33 = call ptr @dav_get_resource(ptr noundef %35, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !8409
  store ptr %call33, ptr %err, align 8, !dbg !8410, !tbaa !2416
  %36 = load ptr, ptr %err, align 8, !dbg !8411, !tbaa !2416
  %cmp34 = icmp ne ptr %36, null, !dbg !8413
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !8414

if.then36:                                        ; preds = %if.end32
  %37 = load ptr, ptr %r.addr, align 8, !dbg !8415, !tbaa !2416
  %38 = load ptr, ptr %err, align 8, !dbg !8416, !tbaa !2416
  %call37 = call i32 @dav_handle_err(ptr noundef %37, ptr noundef %38, ptr noundef null), !dbg !8417
  store i32 %call37, ptr %retval, align 4, !dbg !8418
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8418

if.end38:                                         ; preds = %if.end32
  %39 = load ptr, ptr %r.addr, align 8, !dbg !8419, !tbaa !2416
  %40 = load ptr, ptr %resource, align 8, !dbg !8421, !tbaa !2416
  %call39 = call i32 @dav_run_method_precondition(ptr noundef %39, ptr noundef %40, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !8422
  %cmp40 = icmp ne i32 %call39, -1, !dbg !8423
  br i1 %cmp40, label %land.lhs.true, label %if.end44, !dbg !8424

land.lhs.true:                                    ; preds = %if.end38
  %41 = load ptr, ptr %err, align 8, !dbg !8425, !tbaa !2416
  %tobool = icmp ne ptr %41, null, !dbg !8425
  br i1 %tobool, label %if.then42, label %if.end44, !dbg !8426

if.then42:                                        ; preds = %land.lhs.true
  %42 = load ptr, ptr %r.addr, align 8, !dbg !8427, !tbaa !2416
  %43 = load ptr, ptr %err, align 8, !dbg !8429, !tbaa !2416
  %call43 = call i32 @dav_handle_err(ptr noundef %42, ptr noundef %43, ptr noundef null), !dbg !8430
  store i32 %call43, ptr %retval, align 4, !dbg !8431
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8431

if.end44:                                         ; preds = %land.lhs.true, %if.end38
  %44 = load ptr, ptr %r.addr, align 8, !dbg !8432, !tbaa !2416
  %45 = load ptr, ptr %resource, align 8, !dbg !8433, !tbaa !2416
  %call45 = call i32 @dav_get_resource_state(ptr noundef %44, ptr noundef %45), !dbg !8434
  store i32 %call45, ptr %resource_state, align 4, !dbg !8435, !tbaa !2683
  %46 = load ptr, ptr %r.addr, align 8, !dbg !8436, !tbaa !2416
  %47 = load ptr, ptr %resource, align 8, !dbg !8438, !tbaa !2416
  %48 = load ptr, ptr %locktoken, align 8, !dbg !8439, !tbaa !2416
  %49 = load i32, ptr %resource_state, align 4, !dbg !8440, !tbaa !2683
  %cmp46 = icmp eq i32 %49, 10, !dbg !8441
  %50 = zext i1 %cmp46 to i64, !dbg !8440
  %cond48 = select i1 %cmp46, i32 32, i32 16, !dbg !8440
  %call49 = call ptr @dav_validate_request(ptr noundef %46, ptr noundef %47, i32 noundef 0, ptr noundef %48, ptr noundef %multi_response, i32 noundef %cond48, ptr noundef null), !dbg !8442
  store ptr %call49, ptr %err, align 8, !dbg !8443, !tbaa !2416
  %cmp50 = icmp ne ptr %call49, null, !dbg !8444
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !8445

if.then52:                                        ; preds = %if.end44
  %51 = load ptr, ptr %r.addr, align 8, !dbg !8446, !tbaa !2416
  %52 = load ptr, ptr %err, align 8, !dbg !8448, !tbaa !2416
  %53 = load ptr, ptr %multi_response, align 8, !dbg !8449, !tbaa !2416
  %call53 = call i32 @dav_handle_err(ptr noundef %51, ptr noundef %52, ptr noundef %53), !dbg !8450
  store i32 %call53, ptr %retval, align 4, !dbg !8451
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8451

if.end54:                                         ; preds = %if.end44
  %54 = load ptr, ptr %r.addr, align 8, !dbg !8452, !tbaa !2416
  %55 = load ptr, ptr %resource, align 8, !dbg !8454, !tbaa !2416
  %56 = load ptr, ptr %locktoken, align 8, !dbg !8455, !tbaa !2416
  %call55 = call i32 @dav_unlock(ptr noundef %54, ptr noundef %55, ptr noundef %56), !dbg !8456
  store i32 %call55, ptr %result, align 4, !dbg !8457, !tbaa !2683
  %cmp56 = icmp ne i32 %call55, 0, !dbg !8458
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !8459

if.then58:                                        ; preds = %if.end54
  %57 = load i32, ptr %result, align 4, !dbg !8460, !tbaa !2683
  store i32 %57, ptr %retval, align 4, !dbg !8462
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8462

if.end59:                                         ; preds = %if.end54
  store i32 204, ptr %retval, align 4, !dbg !8463
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8463

cleanup:                                          ; preds = %if.end59, %if.then58, %if.then52, %if.then42, %if.then36, %if.then24, %if.then15, %if.then8, %do.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_response) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 4, ptr %resource_state) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 8, ptr %locktoken) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 8, ptr %locktoken_txt) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_locktoken_txt) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 8, ptr %locks_hooks) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !8464
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !8464
  %58 = load i32, ptr %retval, align 4, !dbg !8464
  ret i32 %58, !dbg !8464
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_vsn_control(ptr noundef %r) #0 !dbg !8465 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %resource_state = alloca i32, align 4
  %av_info = alloca %struct.dav_auto_version_info, align 8
  %locks_hooks = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %doc = alloca ptr, align 8
  %target = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %child = alloca ptr, align 8
  %tsize = alloca i64, align 8
  %lockdb = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !8467, metadata !DIExpression()), !dbg !8484
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !8485
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !8468, metadata !DIExpression()), !dbg !8486
  call void @llvm.lifetime.start.p0(i64 4, ptr %resource_state) #10, !dbg !8487
  tail call void @llvm.dbg.declare(metadata ptr %resource_state, metadata !8469, metadata !DIExpression()), !dbg !8488
  call void @llvm.lifetime.start.p0(i64 24, ptr %av_info) #10, !dbg !8489
  tail call void @llvm.dbg.declare(metadata ptr %av_info, metadata !8470, metadata !DIExpression()), !dbg !8490
  call void @llvm.lifetime.start.p0(i64 8, ptr %locks_hooks) #10, !dbg !8491
  tail call void @llvm.dbg.declare(metadata ptr %locks_hooks, metadata !8471, metadata !DIExpression()), !dbg !8492
  %0 = load ptr, ptr %r.addr, align 8, !dbg !8493, !tbaa !2416
  %call = call ptr @dav_get_lock_hooks(ptr noundef %0), !dbg !8493
  store ptr %call, ptr %locks_hooks, align 8, !dbg !8492, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !8494
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !8472, metadata !DIExpression()), !dbg !8495
  %1 = load ptr, ptr %r.addr, align 8, !dbg !8496, !tbaa !2416
  %call1 = call ptr @dav_get_vsn_hooks(ptr noundef %1), !dbg !8496
  store ptr %call1, ptr %vsn_hooks, align 8, !dbg !8495, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !8497
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !8473, metadata !DIExpression()), !dbg !8498
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !8499
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !8474, metadata !DIExpression()), !dbg !8500
  call void @llvm.lifetime.start.p0(i64 8, ptr %target) #10, !dbg !8501
  tail call void @llvm.dbg.declare(metadata ptr %target, metadata !8475, metadata !DIExpression()), !dbg !8502
  store ptr null, ptr %target, align 8, !dbg !8502, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !8503
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !8476, metadata !DIExpression()), !dbg !8504
  %2 = load ptr, ptr %vsn_hooks, align 8, !dbg !8505, !tbaa !2416
  %cmp = icmp eq ptr %2, null, !dbg !8507
  br i1 %cmp, label %if.then, label %if.end, !dbg !8508

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !8509
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8509

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %r.addr, align 8, !dbg !8510, !tbaa !2416
  %call2 = call ptr @dav_get_resource(ptr noundef %3, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !8511
  store ptr %call2, ptr %err, align 8, !dbg !8512, !tbaa !2416
  %4 = load ptr, ptr %err, align 8, !dbg !8513, !tbaa !2416
  %cmp3 = icmp ne ptr %4, null, !dbg !8515
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !8516

if.then4:                                         ; preds = %if.end
  %5 = load ptr, ptr %r.addr, align 8, !dbg !8517, !tbaa !2416
  %6 = load ptr, ptr %err, align 8, !dbg !8518, !tbaa !2416
  %call5 = call i32 @dav_handle_err(ptr noundef %5, ptr noundef %6, ptr noundef null), !dbg !8519
  store i32 %call5, ptr %retval, align 4, !dbg !8520
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8520

if.end6:                                          ; preds = %if.end
  %7 = load ptr, ptr %r.addr, align 8, !dbg !8521, !tbaa !2416
  %call7 = call i32 @ap_xml_parse_input(ptr noundef %7, ptr noundef %doc), !dbg !8523
  store i32 %call7, ptr %result, align 4, !dbg !8524, !tbaa !2683
  %cmp8 = icmp ne i32 %call7, 0, !dbg !8525
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !8526

if.then9:                                         ; preds = %if.end6
  %8 = load i32, ptr %result, align 4, !dbg !8527, !tbaa !2683
  store i32 %8, ptr %retval, align 4, !dbg !8529
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8529

if.end10:                                         ; preds = %if.end6
  %9 = load ptr, ptr %r.addr, align 8, !dbg !8530, !tbaa !2416
  %10 = load ptr, ptr %resource, align 8, !dbg !8532, !tbaa !2416
  %11 = load ptr, ptr %doc, align 8, !dbg !8533, !tbaa !2416
  %call11 = call i32 @dav_run_method_precondition(ptr noundef %9, ptr noundef %10, ptr noundef null, ptr noundef %11, ptr noundef %err), !dbg !8534
  %cmp12 = icmp ne i32 %call11, -1, !dbg !8535
  br i1 %cmp12, label %land.lhs.true, label %if.end15, !dbg !8536

land.lhs.true:                                    ; preds = %if.end10
  %12 = load ptr, ptr %err, align 8, !dbg !8537, !tbaa !2416
  %tobool = icmp ne ptr %12, null, !dbg !8537
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !8538

if.then13:                                        ; preds = %land.lhs.true
  %13 = load ptr, ptr %r.addr, align 8, !dbg !8539, !tbaa !2416
  %14 = load ptr, ptr %err, align 8, !dbg !8541, !tbaa !2416
  %call14 = call i32 @dav_handle_err(ptr noundef %13, ptr noundef %14, ptr noundef null), !dbg !8542
  store i32 %call14, ptr %retval, align 4, !dbg !8543
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8543

if.end15:                                         ; preds = %land.lhs.true, %if.end10
  %15 = load ptr, ptr %r.addr, align 8, !dbg !8544, !tbaa !2416
  %16 = load ptr, ptr %resource, align 8, !dbg !8545, !tbaa !2416
  %call16 = call i32 @dav_get_resource_state(ptr noundef %15, ptr noundef %16), !dbg !8546
  store i32 %call16, ptr %resource_state, align 4, !dbg !8547, !tbaa !2683
  %17 = load ptr, ptr %doc, align 8, !dbg !8548, !tbaa !2416
  %cmp17 = icmp ne ptr %17, null, !dbg !8549
  br i1 %cmp17, label %if.then18, label %if.end56, !dbg !8550

if.then18:                                        ; preds = %if.end15
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !8551
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !8477, metadata !DIExpression()), !dbg !8552
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsize) #10, !dbg !8553
  tail call void @llvm.dbg.declare(metadata ptr %tsize, metadata !8480, metadata !DIExpression()), !dbg !8554
  %18 = load ptr, ptr %doc, align 8, !dbg !8555, !tbaa !2416
  %call19 = call i32 @dav_validate_root(ptr noundef %18, ptr noundef @.str.220), !dbg !8557
  %tobool20 = icmp ne i32 %call19, 0, !dbg !8557
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !8558

if.then21:                                        ; preds = %if.then18
  br label %do.body, !dbg !8559

do.body:                                          ; preds = %if.then21
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !8561

cond.true:                                        ; preds = %do.body
  %19 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8561, !tbaa !2683
  br label %cond.end, !dbg !8561

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !8561

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ -1, %cond.false ], !dbg !8561
  %20 = load ptr, ptr %r.addr, align 8, !dbg !8561, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3467, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %20, ptr noundef @.str.221), !dbg !8561
  br label %do.cond, !dbg !8564

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !8564

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !8565
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8565

if.end22:                                         ; preds = %if.then18
  %21 = load ptr, ptr %doc, align 8, !dbg !8566, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %21, i32 0, i32 0, !dbg !8568
  %22 = load ptr, ptr %root, align 8, !dbg !8568, !tbaa !6252
  %call23 = call ptr @dav_find_child(ptr noundef %22, ptr noundef @.str.222), !dbg !8569
  store ptr %call23, ptr %child, align 8, !dbg !8570, !tbaa !2416
  %cmp24 = icmp eq ptr %call23, null, !dbg !8571
  br i1 %cmp24, label %if.then25, label %if.end33, !dbg !8572

if.then25:                                        ; preds = %if.end22
  br label %do.body26, !dbg !8573

do.body26:                                        ; preds = %if.then25
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true27, label %cond.false28, !dbg !8575

cond.true27:                                      ; preds = %do.body26
  %23 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8575, !tbaa !2683
  br label %cond.end29, !dbg !8575

cond.false28:                                     ; preds = %do.body26
  br label %cond.end29, !dbg !8575

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ %23, %cond.true27 ], [ -1, %cond.false28 ], !dbg !8575
  %24 = load ptr, ptr %r.addr, align 8, !dbg !8575, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3475, i32 noundef %cond30, i32 noundef 3, i32 noundef 0, ptr noundef %24, ptr noundef @.str.223), !dbg !8575
  br label %do.cond31, !dbg !8578

do.cond31:                                        ; preds = %cond.end29
  br label %do.end32, !dbg !8578

do.end32:                                         ; preds = %do.cond31
  store i32 400, ptr %retval, align 4, !dbg !8579
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8579

if.end33:                                         ; preds = %if.end22
  %25 = load ptr, ptr %child, align 8, !dbg !8580, !tbaa !2416
  %call34 = call ptr @dav_find_child(ptr noundef %25, ptr noundef @.str.224), !dbg !8582
  store ptr %call34, ptr %child, align 8, !dbg !8583, !tbaa !2416
  %cmp35 = icmp eq ptr %call34, null, !dbg !8584
  br i1 %cmp35, label %if.then36, label %if.end44, !dbg !8585

if.then36:                                        ; preds = %if.end33
  br label %do.body37, !dbg !8586

do.body37:                                        ; preds = %if.then36
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true38, label %cond.false39, !dbg !8588

cond.true38:                                      ; preds = %do.body37
  %26 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8588, !tbaa !2683
  br label %cond.end40, !dbg !8588

cond.false39:                                     ; preds = %do.body37
  br label %cond.end40, !dbg !8588

cond.end40:                                       ; preds = %cond.false39, %cond.true38
  %cond41 = phi i32 [ %26, %cond.true38 ], [ -1, %cond.false39 ], !dbg !8588
  %27 = load ptr, ptr %r.addr, align 8, !dbg !8588, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3482, i32 noundef %cond41, i32 noundef 3, i32 noundef 0, ptr noundef %27, ptr noundef @.str.225), !dbg !8588
  br label %do.cond42, !dbg !8591

do.cond42:                                        ; preds = %cond.end40
  br label %do.end43, !dbg !8591

do.end43:                                         ; preds = %do.cond42
  store i32 400, ptr %retval, align 4, !dbg !8592
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8592

if.end44:                                         ; preds = %if.end33
  %28 = load ptr, ptr %r.addr, align 8, !dbg !8593, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %28, i32 0, i32 0, !dbg !8594
  %29 = load ptr, ptr %pool, align 8, !dbg !8594, !tbaa !2792
  %30 = load ptr, ptr %child, align 8, !dbg !8595, !tbaa !2416
  call void @apr_xml_to_text(ptr noundef %29, ptr noundef %30, i32 noundef 1, ptr noundef null, ptr noundef null, ptr noundef %target, ptr noundef %tsize), !dbg !8596
  %31 = load i64, ptr %tsize, align 8, !dbg !8597, !tbaa !3569
  %cmp45 = icmp eq i64 %31, 0, !dbg !8599
  br i1 %cmp45, label %if.then46, label %if.end54, !dbg !8600

if.then46:                                        ; preds = %if.end44
  br label %do.body47, !dbg !8601

do.body47:                                        ; preds = %if.then46
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true48, label %cond.false49, !dbg !8603

cond.true48:                                      ; preds = %do.body47
  %32 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8603, !tbaa !2683
  br label %cond.end50, !dbg !8603

cond.false49:                                     ; preds = %do.body47
  br label %cond.end50, !dbg !8603

cond.end50:                                       ; preds = %cond.false49, %cond.true48
  %cond51 = phi i32 [ %32, %cond.true48 ], [ -1, %cond.false49 ], !dbg !8603
  %33 = load ptr, ptr %r.addr, align 8, !dbg !8603, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3492, i32 noundef %cond51, i32 noundef 3, i32 noundef 0, ptr noundef %33, ptr noundef @.str.226), !dbg !8603
  br label %do.cond52, !dbg !8606

do.cond52:                                        ; preds = %cond.end50
  br label %do.end53, !dbg !8606

do.end53:                                         ; preds = %do.cond52
  store i32 400, ptr %retval, align 4, !dbg !8607
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8607

if.end54:                                         ; preds = %if.end44
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8608
  br label %cleanup, !dbg !8608

cleanup:                                          ; preds = %if.end54, %do.end53, %do.end43, %do.end32, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsize) #10, !dbg !8608
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !8608
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup147 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end56, !dbg !8609

if.end56:                                         ; preds = %cleanup.cont, %if.end15
  %34 = load ptr, ptr %resource, align 8, !dbg !8610, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %34, i32 0, i32 1, !dbg !8612
  %35 = load i32, ptr %exists, align 4, !dbg !8612, !tbaa !4784
  %tobool57 = icmp ne i32 %35, 0, !dbg !8610
  br i1 %tobool57, label %if.else, label %land.lhs.true58, !dbg !8613

land.lhs.true58:                                  ; preds = %if.end56
  %36 = load ptr, ptr %target, align 8, !dbg !8614, !tbaa !2416
  %cmp59 = icmp eq ptr %36, null, !dbg !8615
  br i1 %cmp59, label %if.then60, label %if.else, !dbg !8616

if.then60:                                        ; preds = %land.lhs.true58
  %37 = load ptr, ptr %r.addr, align 8, !dbg !8617, !tbaa !2416
  %pool61 = getelementptr inbounds %struct.request_rec, ptr %37, i32 0, i32 0, !dbg !8619
  %38 = load ptr, ptr %pool61, align 8, !dbg !8619, !tbaa !2792
  %call62 = call ptr @dav_new_error(ptr noundef %38, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef @.str.227), !dbg !8620
  store ptr %call62, ptr %err, align 8, !dbg !8621, !tbaa !2416
  %39 = load ptr, ptr %r.addr, align 8, !dbg !8622, !tbaa !2416
  %40 = load ptr, ptr %err, align 8, !dbg !8623, !tbaa !2416
  %call63 = call i32 @dav_handle_err(ptr noundef %39, ptr noundef %40, ptr noundef null), !dbg !8624
  store i32 %call63, ptr %retval, align 4, !dbg !8625
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8625

if.else:                                          ; preds = %land.lhs.true58, %if.end56
  %41 = load ptr, ptr %resource, align 8, !dbg !8626, !tbaa !2416
  %exists64 = getelementptr inbounds %struct.dav_resource, ptr %41, i32 0, i32 1, !dbg !8628
  %42 = load i32, ptr %exists64, align 4, !dbg !8628, !tbaa !4784
  %tobool65 = icmp ne i32 %42, 0, !dbg !8626
  br i1 %tobool65, label %if.then66, label %if.end87, !dbg !8629

if.then66:                                        ; preds = %if.else
  %43 = load ptr, ptr %target, align 8, !dbg !8630, !tbaa !2416
  %cmp67 = icmp ne ptr %43, null, !dbg !8633
  br i1 %cmp67, label %if.then68, label %if.end72, !dbg !8634

if.then68:                                        ; preds = %if.then66
  %44 = load ptr, ptr %r.addr, align 8, !dbg !8635, !tbaa !2416
  %pool69 = getelementptr inbounds %struct.request_rec, ptr %44, i32 0, i32 0, !dbg !8637
  %45 = load ptr, ptr %pool69, align 8, !dbg !8637, !tbaa !2792
  %call70 = call ptr @dav_new_error(ptr noundef %45, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef @.str.228), !dbg !8638
  store ptr %call70, ptr %err, align 8, !dbg !8639, !tbaa !2416
  %46 = load ptr, ptr %r.addr, align 8, !dbg !8640, !tbaa !2416
  %47 = load ptr, ptr %err, align 8, !dbg !8641, !tbaa !2416
  %call71 = call i32 @dav_handle_err(ptr noundef %46, ptr noundef %47, ptr noundef null), !dbg !8642
  store i32 %call71, ptr %retval, align 4, !dbg !8643
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8643

if.end72:                                         ; preds = %if.then66
  %48 = load ptr, ptr %resource, align 8, !dbg !8644, !tbaa !2416
  %type = getelementptr inbounds %struct.dav_resource, ptr %48, i32 0, i32 0, !dbg !8646
  %49 = load i32, ptr %type, align 8, !dbg !8646, !tbaa !4954
  %cmp73 = icmp ne i32 %49, 1, !dbg !8647
  br i1 %cmp73, label %if.then78, label %lor.lhs.false, !dbg !8648

lor.lhs.false:                                    ; preds = %if.end72
  %50 = load ptr, ptr %resource, align 8, !dbg !8649, !tbaa !2416
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %50, i32 0, i32 3, !dbg !8650
  %51 = load i32, ptr %versioned, align 4, !dbg !8650, !tbaa !6009
  %tobool74 = icmp ne i32 %51, 0, !dbg !8649
  br i1 %tobool74, label %if.end82, label %land.lhs.true75, !dbg !8651

land.lhs.true75:                                  ; preds = %lor.lhs.false
  %52 = load ptr, ptr %vsn_hooks, align 8, !dbg !8652, !tbaa !2416
  %versionable = getelementptr inbounds %struct.dav_hooks_vsn, ptr %52, i32 0, i32 2, !dbg !8653
  %53 = load ptr, ptr %versionable, align 8, !dbg !8653, !tbaa !5973
  %54 = load ptr, ptr %resource, align 8, !dbg !8654, !tbaa !2416
  %call76 = call i32 %53(ptr noundef %54), !dbg !8655
  %tobool77 = icmp ne i32 %call76, 0, !dbg !8655
  br i1 %tobool77, label %if.end82, label %if.then78, !dbg !8656

if.then78:                                        ; preds = %land.lhs.true75, %if.end72
  %55 = load ptr, ptr %r.addr, align 8, !dbg !8657, !tbaa !2416
  %pool79 = getelementptr inbounds %struct.request_rec, ptr %55, i32 0, i32 0, !dbg !8659
  %56 = load ptr, ptr %pool79, align 8, !dbg !8659, !tbaa !2792
  %call80 = call ptr @dav_new_error(ptr noundef %56, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef @.str.229), !dbg !8660
  store ptr %call80, ptr %err, align 8, !dbg !8661, !tbaa !2416
  %57 = load ptr, ptr %r.addr, align 8, !dbg !8662, !tbaa !2416
  %58 = load ptr, ptr %err, align 8, !dbg !8663, !tbaa !2416
  %call81 = call i32 @dav_handle_err(ptr noundef %57, ptr noundef %58, ptr noundef null), !dbg !8664
  store i32 %call81, ptr %retval, align 4, !dbg !8665
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8665

if.end82:                                         ; preds = %land.lhs.true75, %lor.lhs.false
  %59 = load ptr, ptr %resource, align 8, !dbg !8666, !tbaa !2416
  %versioned83 = getelementptr inbounds %struct.dav_resource, ptr %59, i32 0, i32 3, !dbg !8668
  %60 = load i32, ptr %versioned83, align 4, !dbg !8668, !tbaa !6009
  %tobool84 = icmp ne i32 %60, 0, !dbg !8666
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !8669

if.then85:                                        ; preds = %if.end82
  %61 = load ptr, ptr %r.addr, align 8, !dbg !8670, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %61, i32 0, i32 35, !dbg !8672
  %62 = load ptr, ptr %headers_out, align 8, !dbg !8672, !tbaa !5817
  call void @apr_table_setn(ptr noundef %62, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !8673
  %63 = load ptr, ptr %r.addr, align 8, !dbg !8674, !tbaa !2416
  call void @ap_set_content_length(ptr noundef %63, i64 noundef 0), !dbg !8675
  store i32 -2, ptr %retval, align 4, !dbg !8676
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8676

if.end86:                                         ; preds = %if.end82
  br label %if.end87, !dbg !8677

if.end87:                                         ; preds = %if.end86, %if.else
  br label %if.end88

if.end88:                                         ; preds = %if.end87
  %64 = load ptr, ptr %r.addr, align 8, !dbg !8678, !tbaa !2416
  %65 = load ptr, ptr %resource, align 8, !dbg !8680, !tbaa !2416
  %66 = load i32, ptr %resource_state, align 4, !dbg !8681, !tbaa !2683
  %cmp89 = icmp eq i32 %66, 11, !dbg !8682
  %67 = zext i1 %cmp89 to i64, !dbg !8681
  %cond90 = select i1 %cmp89, i32 32, i32 16, !dbg !8681
  %call91 = call ptr @dav_validate_request(ptr noundef %64, ptr noundef %65, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef %cond90, ptr noundef null), !dbg !8683
  store ptr %call91, ptr %err, align 8, !dbg !8684, !tbaa !2416
  %cmp92 = icmp ne ptr %call91, null, !dbg !8685
  br i1 %cmp92, label %if.then93, label %if.end95, !dbg !8686

if.then93:                                        ; preds = %if.end88
  %68 = load ptr, ptr %r.addr, align 8, !dbg !8687, !tbaa !2416
  %69 = load ptr, ptr %err, align 8, !dbg !8689, !tbaa !2416
  %call94 = call i32 @dav_handle_err(ptr noundef %68, ptr noundef %69, ptr noundef null), !dbg !8690
  store i32 %call94, ptr %retval, align 4, !dbg !8691
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8691

if.end95:                                         ; preds = %if.end88
  %70 = load ptr, ptr %r.addr, align 8, !dbg !8692, !tbaa !2416
  %71 = load ptr, ptr %resource, align 8, !dbg !8694, !tbaa !2416
  %call96 = call ptr @dav_auto_checkout(ptr noundef %70, ptr noundef %71, i32 noundef 1, ptr noundef %av_info), !dbg !8695
  store ptr %call96, ptr %err, align 8, !dbg !8696, !tbaa !2416
  %cmp97 = icmp ne ptr %call96, null, !dbg !8697
  br i1 %cmp97, label %if.then98, label %if.end100, !dbg !8698

if.then98:                                        ; preds = %if.end95
  %72 = load ptr, ptr %r.addr, align 8, !dbg !8699, !tbaa !2416
  %73 = load ptr, ptr %err, align 8, !dbg !8701, !tbaa !2416
  %call99 = call i32 @dav_handle_err(ptr noundef %72, ptr noundef %73, ptr noundef null), !dbg !8702
  store i32 %call99, ptr %retval, align 4, !dbg !8703
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8703

if.end100:                                        ; preds = %if.end95
  %74 = load ptr, ptr %vsn_hooks, align 8, !dbg !8704, !tbaa !2416
  %vsn_control = getelementptr inbounds %struct.dav_hooks_vsn, ptr %74, i32 0, i32 4, !dbg !8706
  %75 = load ptr, ptr %vsn_control, align 8, !dbg !8706, !tbaa !8707
  %76 = load ptr, ptr %resource, align 8, !dbg !8708, !tbaa !2416
  %77 = load ptr, ptr %target, align 8, !dbg !8709, !tbaa !2416
  %call101 = call ptr %75(ptr noundef %76, ptr noundef %77), !dbg !8710
  store ptr %call101, ptr %err, align 8, !dbg !8711, !tbaa !2416
  %cmp102 = icmp ne ptr %call101, null, !dbg !8712
  br i1 %cmp102, label %if.then103, label %if.end112, !dbg !8713

if.then103:                                       ; preds = %if.end100
  %78 = load ptr, ptr %r.addr, align 8, !dbg !8714, !tbaa !2416
  %79 = load ptr, ptr %resource, align 8, !dbg !8716, !tbaa !2416
  %call104 = call ptr @dav_auto_checkin(ptr noundef %78, ptr noundef %79, i32 noundef 1, i32 noundef 0, ptr noundef %av_info), !dbg !8717
  %80 = load ptr, ptr %r.addr, align 8, !dbg !8718, !tbaa !2416
  %pool105 = getelementptr inbounds %struct.request_rec, ptr %80, i32 0, i32 0, !dbg !8719
  %81 = load ptr, ptr %pool105, align 8, !dbg !8719, !tbaa !2792
  %82 = load ptr, ptr %r.addr, align 8, !dbg !8720, !tbaa !2416
  %pool106 = getelementptr inbounds %struct.request_rec, ptr %82, i32 0, i32 0, !dbg !8721
  %83 = load ptr, ptr %pool106, align 8, !dbg !8721, !tbaa !2792
  %84 = load ptr, ptr %r.addr, align 8, !dbg !8722, !tbaa !2416
  %pool107 = getelementptr inbounds %struct.request_rec, ptr %84, i32 0, i32 0, !dbg !8722
  %85 = load ptr, ptr %pool107, align 8, !dbg !8722, !tbaa !2792
  %86 = load ptr, ptr %r.addr, align 8, !dbg !8722, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %86, i32 0, i32 47, !dbg !8722
  %87 = load ptr, ptr %uri, align 8, !dbg !8722, !tbaa !3183
  %call108 = call ptr @ap_escape_html2(ptr noundef %85, ptr noundef %87, i32 noundef 0), !dbg !8722
  %call109 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %83, ptr noundef @.str.232, ptr noundef %call108), !dbg !8723
  %88 = load ptr, ptr %err, align 8, !dbg !8724, !tbaa !2416
  %call110 = call ptr @dav_push_error(ptr noundef %81, i32 noundef 409, i32 noundef 0, ptr noundef %call109, ptr noundef %88), !dbg !8725
  store ptr %call110, ptr %err, align 8, !dbg !8726, !tbaa !2416
  %89 = load ptr, ptr %r.addr, align 8, !dbg !8727, !tbaa !2416
  %90 = load ptr, ptr %err, align 8, !dbg !8728, !tbaa !2416
  %call111 = call i32 @dav_handle_err(ptr noundef %89, ptr noundef %90, ptr noundef null), !dbg !8729
  store i32 %call111, ptr %retval, align 4, !dbg !8730
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8730

if.end112:                                        ; preds = %if.end100
  %91 = load ptr, ptr %r.addr, align 8, !dbg !8731, !tbaa !2416
  %92 = load ptr, ptr %resource, align 8, !dbg !8732, !tbaa !2416
  %call113 = call ptr @dav_auto_checkin(ptr noundef %91, ptr noundef %92, i32 noundef 0, i32 noundef 0, ptr noundef %av_info), !dbg !8733
  store ptr %call113, ptr %err, align 8, !dbg !8734, !tbaa !2416
  %93 = load ptr, ptr %err, align 8, !dbg !8735, !tbaa !2416
  %cmp114 = icmp ne ptr %93, null, !dbg !8737
  br i1 %cmp114, label %if.then115, label %if.end118, !dbg !8738

if.then115:                                       ; preds = %if.end112
  %94 = load ptr, ptr %r.addr, align 8, !dbg !8739, !tbaa !2416
  %pool116 = getelementptr inbounds %struct.request_rec, ptr %94, i32 0, i32 0, !dbg !8741
  %95 = load ptr, ptr %pool116, align 8, !dbg !8741, !tbaa !2792
  %96 = load ptr, ptr %err, align 8, !dbg !8742, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %96, i32 0, i32 0, !dbg !8743
  %97 = load i32, ptr %status, align 8, !dbg !8743, !tbaa !2871
  %98 = load ptr, ptr %err, align 8, !dbg !8744, !tbaa !2416
  %call117 = call ptr @dav_push_error(ptr noundef %95, i32 noundef %97, i32 noundef 0, ptr noundef @.str.233, ptr noundef %98), !dbg !8745
  store ptr %call117, ptr %err, align 8, !dbg !8746, !tbaa !2416
  %99 = load ptr, ptr %r.addr, align 8, !dbg !8747, !tbaa !2416
  %100 = load ptr, ptr %err, align 8, !dbg !8748, !tbaa !2416
  call void @dav_log_err(ptr noundef %99, ptr noundef %100, i32 noundef 4), !dbg !8749
  br label %if.end118, !dbg !8750

if.end118:                                        ; preds = %if.then115, %if.end112
  %101 = load ptr, ptr %locks_hooks, align 8, !dbg !8751, !tbaa !2416
  %cmp119 = icmp ne ptr %101, null, !dbg !8752
  br i1 %cmp119, label %land.lhs.true120, label %if.end143, !dbg !8753

land.lhs.true120:                                 ; preds = %if.end118
  %102 = load ptr, ptr %locks_hooks, align 8, !dbg !8754, !tbaa !2416
  %get_supportedlock = getelementptr inbounds %struct.dav_hooks_locks, ptr %102, i32 0, i32 0, !dbg !8755
  %103 = load ptr, ptr %get_supportedlock, align 8, !dbg !8755, !tbaa !8756
  %104 = load ptr, ptr %resource, align 8, !dbg !8757, !tbaa !2416
  %call121 = call ptr %103(ptr noundef %104), !dbg !8758
  %cmp122 = icmp ne ptr %call121, null, !dbg !8759
  br i1 %cmp122, label %if.then123, label %if.end143, !dbg !8760

if.then123:                                       ; preds = %land.lhs.true120
  call void @llvm.lifetime.start.p0(i64 8, ptr %lockdb) #10, !dbg !8761
  tail call void @llvm.dbg.declare(metadata ptr %lockdb, metadata !8481, metadata !DIExpression()), !dbg !8762
  %105 = load ptr, ptr %locks_hooks, align 8, !dbg !8763, !tbaa !2416
  %open_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %105, i32 0, i32 4, !dbg !8765
  %106 = load ptr, ptr %open_lockdb, align 8, !dbg !8765, !tbaa !3278
  %107 = load ptr, ptr %r.addr, align 8, !dbg !8766, !tbaa !2416
  %call124 = call ptr %106(ptr noundef %107, i32 noundef 0, i32 noundef 0, ptr noundef %lockdb), !dbg !8767
  store ptr %call124, ptr %err, align 8, !dbg !8768, !tbaa !2416
  %cmp125 = icmp ne ptr %call124, null, !dbg !8769
  br i1 %cmp125, label %if.then126, label %if.end131, !dbg !8770

if.then126:                                       ; preds = %if.then123
  %108 = load ptr, ptr %r.addr, align 8, !dbg !8771, !tbaa !2416
  %pool127 = getelementptr inbounds %struct.request_rec, ptr %108, i32 0, i32 0, !dbg !8773
  %109 = load ptr, ptr %pool127, align 8, !dbg !8773, !tbaa !2792
  %110 = load ptr, ptr %err, align 8, !dbg !8774, !tbaa !2416
  %status128 = getelementptr inbounds %struct.dav_error, ptr %110, i32 0, i32 0, !dbg !8775
  %111 = load i32, ptr %status128, align 8, !dbg !8775, !tbaa !2871
  %112 = load ptr, ptr %err, align 8, !dbg !8776, !tbaa !2416
  %call129 = call ptr @dav_push_error(ptr noundef %109, i32 noundef %111, i32 noundef 0, ptr noundef @.str.234, ptr noundef %112), !dbg !8777
  store ptr %call129, ptr %err, align 8, !dbg !8778, !tbaa !2416
  %113 = load ptr, ptr %r.addr, align 8, !dbg !8779, !tbaa !2416
  %114 = load ptr, ptr %err, align 8, !dbg !8780, !tbaa !2416
  %call130 = call i32 @dav_handle_err(ptr noundef %113, ptr noundef %114, ptr noundef null), !dbg !8781
  store i32 %call130, ptr %retval, align 4, !dbg !8782
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup140, !dbg !8782

if.end131:                                        ; preds = %if.then123
  %115 = load ptr, ptr %r.addr, align 8, !dbg !8783, !tbaa !2416
  %116 = load ptr, ptr %lockdb, align 8, !dbg !8784, !tbaa !2416
  %117 = load ptr, ptr %resource, align 8, !dbg !8785, !tbaa !2416
  %118 = load i32, ptr %resource_state, align 4, !dbg !8786, !tbaa !2683
  %call132 = call ptr @dav_notify_created(ptr noundef %115, ptr noundef %116, ptr noundef %117, i32 noundef %118, i32 noundef 0), !dbg !8787
  store ptr %call132, ptr %err, align 8, !dbg !8788, !tbaa !2416
  %119 = load ptr, ptr %locks_hooks, align 8, !dbg !8789, !tbaa !2416
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %119, i32 0, i32 5, !dbg !8790
  %120 = load ptr, ptr %close_lockdb, align 8, !dbg !8790, !tbaa !3295
  %121 = load ptr, ptr %lockdb, align 8, !dbg !8791, !tbaa !2416
  call void %120(ptr noundef %121), !dbg !8792
  %122 = load ptr, ptr %err, align 8, !dbg !8793, !tbaa !2416
  %cmp133 = icmp ne ptr %122, null, !dbg !8795
  br i1 %cmp133, label %if.then134, label %if.end139, !dbg !8796

if.then134:                                       ; preds = %if.end131
  %123 = load ptr, ptr %r.addr, align 8, !dbg !8797, !tbaa !2416
  %pool135 = getelementptr inbounds %struct.request_rec, ptr %123, i32 0, i32 0, !dbg !8799
  %124 = load ptr, ptr %pool135, align 8, !dbg !8799, !tbaa !2792
  %125 = load ptr, ptr %err, align 8, !dbg !8800, !tbaa !2416
  %status136 = getelementptr inbounds %struct.dav_error, ptr %125, i32 0, i32 0, !dbg !8801
  %126 = load i32, ptr %status136, align 8, !dbg !8801, !tbaa !2871
  %127 = load ptr, ptr %err, align 8, !dbg !8802, !tbaa !2416
  %call137 = call ptr @dav_push_error(ptr noundef %124, i32 noundef %126, i32 noundef 0, ptr noundef @.str.235, ptr noundef %127), !dbg !8803
  store ptr %call137, ptr %err, align 8, !dbg !8804, !tbaa !2416
  %128 = load ptr, ptr %r.addr, align 8, !dbg !8805, !tbaa !2416
  %129 = load ptr, ptr %err, align 8, !dbg !8806, !tbaa !2416
  %call138 = call i32 @dav_handle_err(ptr noundef %128, ptr noundef %129, ptr noundef null), !dbg !8807
  store i32 %call138, ptr %retval, align 4, !dbg !8808
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup140, !dbg !8808

if.end139:                                        ; preds = %if.end131
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8809
  br label %cleanup140, !dbg !8809

cleanup140:                                       ; preds = %if.end139, %if.then134, %if.then126
  call void @llvm.lifetime.end.p0(i64 8, ptr %lockdb) #10, !dbg !8809
  %cleanup.dest141 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest141, label %cleanup147 [
    i32 0, label %cleanup.cont142
  ]

cleanup.cont142:                                  ; preds = %cleanup140
  br label %if.end143, !dbg !8810

if.end143:                                        ; preds = %cleanup.cont142, %land.lhs.true120, %if.end118
  %130 = load ptr, ptr %r.addr, align 8, !dbg !8811, !tbaa !2416
  %headers_out144 = getelementptr inbounds %struct.request_rec, ptr %130, i32 0, i32 35, !dbg !8812
  %131 = load ptr, ptr %headers_out144, align 8, !dbg !8812, !tbaa !5817
  call void @apr_table_setn(ptr noundef %131, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !8813
  %132 = load ptr, ptr %r.addr, align 8, !dbg !8814, !tbaa !2416
  %133 = load ptr, ptr %resource, align 8, !dbg !8815, !tbaa !2416
  %uri145 = getelementptr inbounds %struct.dav_resource, ptr %133, i32 0, i32 6, !dbg !8816
  %134 = load ptr, ptr %uri145, align 8, !dbg !8816, !tbaa !3323
  %call146 = call i32 @dav_created(ptr noundef %132, ptr noundef %134, ptr noundef @.str.236, i32 noundef 0), !dbg !8817
  store i32 %call146, ptr %retval, align 4, !dbg !8818
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup147, !dbg !8818

cleanup147:                                       ; preds = %if.end143, %cleanup140, %if.then103, %if.then98, %if.then93, %if.then85, %if.then78, %if.then68, %if.then60, %cleanup, %if.then13, %if.then9, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 8, ptr %target) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 8, ptr %locks_hooks) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 24, ptr %av_info) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 4, ptr %resource_state) #10, !dbg !8819
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !8819
  %135 = load i32, ptr %retval, align 4, !dbg !8819
  ret i32 %135, !dbg !8819
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_checkout(ptr noundef %r) #0 !dbg !8820 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %working_resource = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %result = alloca i32, align 4
  %doc = alloca ptr, align 8
  %apply_to_vsn = alloca i32, align 4
  %is_unreserved = alloca i32, align 4
  %is_fork_ok = alloca i32, align 4
  %create_activity = alloca i32, align 4
  %activities = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %aset = alloca ptr, align 8
  %child = alloca ptr, align 8
  %href = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !8822, metadata !DIExpression()), !dbg !8848
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !8849
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !8823, metadata !DIExpression()), !dbg !8850
  call void @llvm.lifetime.start.p0(i64 8, ptr %working_resource) #10, !dbg !8851
  tail call void @llvm.dbg.declare(metadata ptr %working_resource, metadata !8824, metadata !DIExpression()), !dbg !8852
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !8853
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !8825, metadata !DIExpression()), !dbg !8854
  %0 = load ptr, ptr %r.addr, align 8, !dbg !8855, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !8855
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !8854, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !8856
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !8826, metadata !DIExpression()), !dbg !8857
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !8858
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !8827, metadata !DIExpression()), !dbg !8859
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !8860
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !8828, metadata !DIExpression()), !dbg !8861
  call void @llvm.lifetime.start.p0(i64 4, ptr %apply_to_vsn) #10, !dbg !8862
  tail call void @llvm.dbg.declare(metadata ptr %apply_to_vsn, metadata !8829, metadata !DIExpression()), !dbg !8863
  store i32 0, ptr %apply_to_vsn, align 4, !dbg !8863, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unreserved) #10, !dbg !8864
  tail call void @llvm.dbg.declare(metadata ptr %is_unreserved, metadata !8830, metadata !DIExpression()), !dbg !8865
  store i32 0, ptr %is_unreserved, align 4, !dbg !8865, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_fork_ok) #10, !dbg !8866
  tail call void @llvm.dbg.declare(metadata ptr %is_fork_ok, metadata !8831, metadata !DIExpression()), !dbg !8867
  store i32 0, ptr %is_fork_ok, align 4, !dbg !8867, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 4, ptr %create_activity) #10, !dbg !8868
  tail call void @llvm.dbg.declare(metadata ptr %create_activity, metadata !8832, metadata !DIExpression()), !dbg !8869
  store i32 0, ptr %create_activity, align 4, !dbg !8869, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 8, ptr %activities) #10, !dbg !8870
  tail call void @llvm.dbg.declare(metadata ptr %activities, metadata !8833, metadata !DIExpression()), !dbg !8871
  store ptr null, ptr %activities, align 8, !dbg !8871, !tbaa !2416
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !8872, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !8874
  br i1 %cmp, label %if.then, label %if.end, !dbg !8875

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !8876
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !8876

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !8877, !tbaa !2416
  %call1 = call i32 @ap_xml_parse_input(ptr noundef %2, ptr noundef %doc), !dbg !8879
  store i32 %call1, ptr %result, align 4, !dbg !8880, !tbaa !2683
  %cmp2 = icmp ne i32 %call1, 0, !dbg !8881
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8882

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr %result, align 4, !dbg !8883, !tbaa !2683
  store i32 %3, ptr %retval, align 4, !dbg !8884
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !8884

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %doc, align 8, !dbg !8885, !tbaa !2416
  %cmp5 = icmp ne ptr %4, null, !dbg !8886
  br i1 %cmp5, label %if.then6, label %if.end64, !dbg !8887

if.then6:                                         ; preds = %if.end4
  call void @llvm.lifetime.start.p0(i64 8, ptr %aset) #10, !dbg !8888
  tail call void @llvm.dbg.declare(metadata ptr %aset, metadata !8834, metadata !DIExpression()), !dbg !8889
  %5 = load ptr, ptr %doc, align 8, !dbg !8890, !tbaa !2416
  %call7 = call i32 @dav_validate_root(ptr noundef %5, ptr noundef @.str.237), !dbg !8892
  %tobool = icmp ne i32 %call7, 0, !dbg !8892
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !8893

if.then8:                                         ; preds = %if.then6
  br label %do.body, !dbg !8894

do.body:                                          ; preds = %if.then8
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !8896

cond.true:                                        ; preds = %do.body
  %6 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8896, !tbaa !2683
  br label %cond.end, !dbg !8896

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !8896

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ -1, %cond.false ], !dbg !8896
  %7 = load ptr, ptr %r.addr, align 8, !dbg !8896, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3644, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %7, ptr noundef @.str.238), !dbg !8896
  br label %do.cond, !dbg !8899

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !8899

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !8900
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup61, !dbg !8900

if.end9:                                          ; preds = %if.then6
  %8 = load ptr, ptr %doc, align 8, !dbg !8901, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %8, i32 0, i32 0, !dbg !8903
  %9 = load ptr, ptr %root, align 8, !dbg !8903, !tbaa !6252
  %call10 = call ptr @dav_find_child(ptr noundef %9, ptr noundef @.str.239), !dbg !8904
  %cmp11 = icmp ne ptr %call10, null, !dbg !8905
  br i1 %cmp11, label %if.then12, label %if.end18, !dbg !8906

if.then12:                                        ; preds = %if.end9
  %10 = load ptr, ptr %r.addr, align 8, !dbg !8907, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %10, i32 0, i32 34, !dbg !8910
  %11 = load ptr, ptr %headers_in, align 8, !dbg !8910, !tbaa !3088
  %call13 = call ptr @apr_table_get(ptr noundef %11, ptr noundef @.str.23), !dbg !8911
  %cmp14 = icmp ne ptr %call13, null, !dbg !8912
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !8913

if.then15:                                        ; preds = %if.then12
  %12 = load ptr, ptr %r.addr, align 8, !dbg !8914, !tbaa !2416
  %call16 = call i32 @dav_error_response(ptr noundef %12, i32 noundef 409, ptr noundef @.str.240), !dbg !8916
  store i32 %call16, ptr %retval, align 4, !dbg !8917
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup61, !dbg !8917

if.end17:                                         ; preds = %if.then12
  store i32 1, ptr %apply_to_vsn, align 4, !dbg !8918, !tbaa !2683
  br label %if.end18, !dbg !8919

if.end18:                                         ; preds = %if.end17, %if.end9
  %13 = load ptr, ptr %doc, align 8, !dbg !8920, !tbaa !2416
  %root19 = getelementptr inbounds %struct.apr_xml_doc, ptr %13, i32 0, i32 0, !dbg !8921
  %14 = load ptr, ptr %root19, align 8, !dbg !8921, !tbaa !6252
  %call20 = call ptr @dav_find_child(ptr noundef %14, ptr noundef @.str.241), !dbg !8922
  %cmp21 = icmp ne ptr %call20, null, !dbg !8923
  %conv = zext i1 %cmp21 to i32, !dbg !8923
  store i32 %conv, ptr %is_unreserved, align 4, !dbg !8924, !tbaa !2683
  %15 = load ptr, ptr %doc, align 8, !dbg !8925, !tbaa !2416
  %root22 = getelementptr inbounds %struct.apr_xml_doc, ptr %15, i32 0, i32 0, !dbg !8926
  %16 = load ptr, ptr %root22, align 8, !dbg !8926, !tbaa !6252
  %call23 = call ptr @dav_find_child(ptr noundef %16, ptr noundef @.str.242), !dbg !8927
  %cmp24 = icmp ne ptr %call23, null, !dbg !8928
  %conv25 = zext i1 %cmp24 to i32, !dbg !8928
  store i32 %conv25, ptr %is_fork_ok, align 4, !dbg !8929, !tbaa !2683
  %17 = load ptr, ptr %doc, align 8, !dbg !8930, !tbaa !2416
  %root26 = getelementptr inbounds %struct.apr_xml_doc, ptr %17, i32 0, i32 0, !dbg !8931
  %18 = load ptr, ptr %root26, align 8, !dbg !8931, !tbaa !6252
  %call27 = call ptr @dav_find_child(ptr noundef %18, ptr noundef @.str.243), !dbg !8932
  store ptr %call27, ptr %aset, align 8, !dbg !8933, !tbaa !2416
  %cmp28 = icmp ne ptr %call27, null, !dbg !8934
  br i1 %cmp28, label %if.then30, label %if.end60, !dbg !8935

if.then30:                                        ; preds = %if.end18
  %19 = load ptr, ptr %aset, align 8, !dbg !8936, !tbaa !2416
  %call31 = call ptr @dav_find_child(ptr noundef %19, ptr noundef @.str.244), !dbg !8937
  %cmp32 = icmp ne ptr %call31, null, !dbg !8938
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !8939

if.then34:                                        ; preds = %if.then30
  store i32 1, ptr %create_activity, align 4, !dbg !8940, !tbaa !2683
  br label %if.end59, !dbg !8942

if.else:                                          ; preds = %if.then30
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !8943
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !8837, metadata !DIExpression()), !dbg !8944
  %20 = load ptr, ptr %aset, align 8, !dbg !8945, !tbaa !2416
  %first_child = getelementptr inbounds %struct.apr_xml_elem, ptr %20, i32 0, i32 7, !dbg !8946
  %21 = load ptr, ptr %first_child, align 8, !dbg !8946, !tbaa !6255
  store ptr %21, ptr %child, align 8, !dbg !8944, !tbaa !2416
  %22 = load ptr, ptr %r.addr, align 8, !dbg !8947, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %22, i32 0, i32 0, !dbg !8948
  %23 = load ptr, ptr %pool, align 8, !dbg !8948, !tbaa !2792
  %call35 = call ptr @apr_array_make(ptr noundef %23, i32 noundef 1, i32 noundef 8), !dbg !8949
  store ptr %call35, ptr %activities, align 8, !dbg !8950, !tbaa !2416
  br label %for.cond, !dbg !8951

for.cond:                                         ; preds = %for.inc, %if.else
  %24 = load ptr, ptr %child, align 8, !dbg !8952, !tbaa !2416
  %cmp36 = icmp ne ptr %24, null, !dbg !8953
  br i1 %cmp36, label %for.body, label %for.end, !dbg !8954

for.body:                                         ; preds = %for.cond
  %25 = load ptr, ptr %child, align 8, !dbg !8955, !tbaa !2416
  %ns = getelementptr inbounds %struct.apr_xml_elem, ptr %25, i32 0, i32 1, !dbg !8956
  %26 = load i32, ptr %ns, align 8, !dbg !8956, !tbaa !6269
  %cmp38 = icmp eq i32 %26, 0, !dbg !8957
  br i1 %cmp38, label %land.lhs.true, label %if.end47, !dbg !8958

land.lhs.true:                                    ; preds = %for.body
  %27 = load ptr, ptr %child, align 8, !dbg !8959, !tbaa !2416
  %name = getelementptr inbounds %struct.apr_xml_elem, ptr %27, i32 0, i32 0, !dbg !8960
  %28 = load ptr, ptr %name, align 8, !dbg !8960, !tbaa !6276
  %call40 = call i32 @strcmp(ptr noundef %28, ptr noundef @.str.224) #11, !dbg !8961
  %cmp41 = icmp eq i32 %call40, 0, !dbg !8962
  br i1 %cmp41, label %if.then43, label %if.end47, !dbg !8963

if.then43:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %href) #10, !dbg !8964
  tail call void @llvm.dbg.declare(metadata ptr %href, metadata !8842, metadata !DIExpression()), !dbg !8965
  %29 = load ptr, ptr %child, align 8, !dbg !8966, !tbaa !2416
  %30 = load ptr, ptr %r.addr, align 8, !dbg !8967, !tbaa !2416
  %pool44 = getelementptr inbounds %struct.request_rec, ptr %30, i32 0, i32 0, !dbg !8968
  %31 = load ptr, ptr %pool44, align 8, !dbg !8968, !tbaa !2792
  %call45 = call ptr @dav_xml_get_cdata(ptr noundef %29, ptr noundef %31, i32 noundef 1), !dbg !8969
  store ptr %call45, ptr %href, align 8, !dbg !8970, !tbaa !2416
  %32 = load ptr, ptr %href, align 8, !dbg !8971, !tbaa !2416
  %33 = load ptr, ptr %activities, align 8, !dbg !8972, !tbaa !2416
  %call46 = call ptr @apr_array_push(ptr noundef %33), !dbg !8973
  store ptr %32, ptr %call46, align 8, !dbg !8974, !tbaa !2416
  call void @llvm.lifetime.end.p0(i64 8, ptr %href) #10, !dbg !8975
  br label %if.end47, !dbg !8976

if.end47:                                         ; preds = %if.then43, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8977

for.inc:                                          ; preds = %if.end47
  %34 = load ptr, ptr %child, align 8, !dbg !8978, !tbaa !2416
  %next = getelementptr inbounds %struct.apr_xml_elem, ptr %34, i32 0, i32 6, !dbg !8979
  %35 = load ptr, ptr %next, align 8, !dbg !8979, !tbaa !6352
  store ptr %35, ptr %child, align 8, !dbg !8980, !tbaa !2416
  br label %for.cond, !dbg !8981, !llvm.loop !8982

for.end:                                          ; preds = %for.cond
  %36 = load ptr, ptr %activities, align 8, !dbg !8984, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %36, i32 0, i32 2, !dbg !8986
  %37 = load i32, ptr %nelts, align 4, !dbg !8986, !tbaa !2702
  %cmp48 = icmp eq i32 %37, 0, !dbg !8987
  br i1 %cmp48, label %if.then50, label %if.end58, !dbg !8988

if.then50:                                        ; preds = %for.end
  br label %do.body51, !dbg !8989

do.body51:                                        ; preds = %if.then50
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true52, label %cond.false53, !dbg !8991

cond.true52:                                      ; preds = %do.body51
  %38 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !8991, !tbaa !2683
  br label %cond.end54, !dbg !8991

cond.false53:                                     ; preds = %do.body51
  br label %cond.end54, !dbg !8991

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ %38, %cond.true52 ], [ -1, %cond.false53 ], !dbg !8991
  %39 = load ptr, ptr %r.addr, align 8, !dbg !8991, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3691, i32 noundef %cond55, i32 noundef 3, i32 noundef 0, ptr noundef %39, ptr noundef @.str.245), !dbg !8991
  br label %do.cond56, !dbg !8994

do.cond56:                                        ; preds = %cond.end54
  br label %do.end57, !dbg !8994

do.end57:                                         ; preds = %do.cond56
  store i32 400, ptr %retval, align 4, !dbg !8995
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8995

if.end58:                                         ; preds = %for.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8996
  br label %cleanup, !dbg !8996

cleanup:                                          ; preds = %if.end58, %do.end57
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !8996
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup61 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end59

if.end59:                                         ; preds = %cleanup.cont, %if.then34
  br label %if.end60, !dbg !8997

if.end60:                                         ; preds = %if.end59, %if.end18
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8998
  br label %cleanup61, !dbg !8998

cleanup61:                                        ; preds = %if.end60, %cleanup, %if.then15, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %aset) #10, !dbg !8998
  %cleanup.dest62 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest62, label %cleanup117 [
    i32 0, label %cleanup.cont63
  ]

cleanup.cont63:                                   ; preds = %cleanup61
  br label %if.end64, !dbg !8999

if.end64:                                         ; preds = %cleanup.cont63, %if.end4
  %40 = load ptr, ptr %r.addr, align 8, !dbg !9000, !tbaa !2416
  %41 = load i32, ptr %apply_to_vsn, align 4, !dbg !9001, !tbaa !2683
  %call65 = call ptr @dav_get_resource(ptr noundef %40, i32 noundef 1, i32 noundef %41, ptr noundef %resource), !dbg !9002
  store ptr %call65, ptr %err, align 8, !dbg !9003, !tbaa !2416
  %42 = load ptr, ptr %err, align 8, !dbg !9004, !tbaa !2416
  %cmp66 = icmp ne ptr %42, null, !dbg !9006
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !9007

if.then68:                                        ; preds = %if.end64
  %43 = load ptr, ptr %r.addr, align 8, !dbg !9008, !tbaa !2416
  %44 = load ptr, ptr %err, align 8, !dbg !9009, !tbaa !2416
  %call69 = call i32 @dav_handle_err(ptr noundef %43, ptr noundef %44, ptr noundef null), !dbg !9010
  store i32 %call69, ptr %retval, align 4, !dbg !9011
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9011

if.end70:                                         ; preds = %if.end64
  %45 = load ptr, ptr %r.addr, align 8, !dbg !9012, !tbaa !2416
  %46 = load ptr, ptr %resource, align 8, !dbg !9014, !tbaa !2416
  %47 = load ptr, ptr %doc, align 8, !dbg !9015, !tbaa !2416
  %call71 = call i32 @dav_run_method_precondition(ptr noundef %45, ptr noundef %46, ptr noundef null, ptr noundef %47, ptr noundef %err), !dbg !9016
  %cmp72 = icmp ne i32 %call71, -1, !dbg !9017
  br i1 %cmp72, label %land.lhs.true74, label %if.end78, !dbg !9018

land.lhs.true74:                                  ; preds = %if.end70
  %48 = load ptr, ptr %err, align 8, !dbg !9019, !tbaa !2416
  %tobool75 = icmp ne ptr %48, null, !dbg !9019
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !9020

if.then76:                                        ; preds = %land.lhs.true74
  %49 = load ptr, ptr %r.addr, align 8, !dbg !9021, !tbaa !2416
  %50 = load ptr, ptr %err, align 8, !dbg !9023, !tbaa !2416
  %call77 = call i32 @dav_handle_err(ptr noundef %49, ptr noundef %50, ptr noundef null), !dbg !9024
  store i32 %call77, ptr %retval, align 4, !dbg !9025
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9025

if.end78:                                         ; preds = %land.lhs.true74, %if.end70
  %51 = load ptr, ptr %resource, align 8, !dbg !9026, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %51, i32 0, i32 1, !dbg !9028
  %52 = load i32, ptr %exists, align 4, !dbg !9028, !tbaa !4784
  %tobool79 = icmp ne i32 %52, 0, !dbg !9026
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !9029

if.then80:                                        ; preds = %if.end78
  store i32 404, ptr %retval, align 4, !dbg !9030
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9030

if.end81:                                         ; preds = %if.end78
  %53 = load ptr, ptr %resource, align 8, !dbg !9032, !tbaa !2416
  %type = getelementptr inbounds %struct.dav_resource, ptr %53, i32 0, i32 0, !dbg !9034
  %54 = load i32, ptr %type, align 8, !dbg !9034, !tbaa !4954
  %cmp82 = icmp ne i32 %54, 1, !dbg !9035
  br i1 %cmp82, label %land.lhs.true84, label %if.end90, !dbg !9036

land.lhs.true84:                                  ; preds = %if.end81
  %55 = load ptr, ptr %resource, align 8, !dbg !9037, !tbaa !2416
  %type85 = getelementptr inbounds %struct.dav_resource, ptr %55, i32 0, i32 0, !dbg !9038
  %56 = load i32, ptr %type85, align 8, !dbg !9038, !tbaa !4954
  %cmp86 = icmp ne i32 %56, 2, !dbg !9039
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !9040

if.then88:                                        ; preds = %land.lhs.true84
  %57 = load ptr, ptr %r.addr, align 8, !dbg !9041, !tbaa !2416
  %call89 = call i32 @dav_error_response(ptr noundef %57, i32 noundef 409, ptr noundef @.str.246), !dbg !9043
  store i32 %call89, ptr %retval, align 4, !dbg !9044
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9044

if.end90:                                         ; preds = %land.lhs.true84, %if.end81
  %58 = load ptr, ptr %resource, align 8, !dbg !9045, !tbaa !2416
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %58, i32 0, i32 3, !dbg !9047
  %59 = load i32, ptr %versioned, align 4, !dbg !9047, !tbaa !6009
  %tobool91 = icmp ne i32 %59, 0, !dbg !9045
  br i1 %tobool91, label %if.end94, label %if.then92, !dbg !9048

if.then92:                                        ; preds = %if.end90
  %60 = load ptr, ptr %r.addr, align 8, !dbg !9049, !tbaa !2416
  %call93 = call i32 @dav_error_response(ptr noundef %60, i32 noundef 409, ptr noundef @.str.247), !dbg !9051
  store i32 %call93, ptr %retval, align 4, !dbg !9052
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9052

if.end94:                                         ; preds = %if.end90
  %61 = load ptr, ptr %resource, align 8, !dbg !9053, !tbaa !2416
  %working = getelementptr inbounds %struct.dav_resource, ptr %61, i32 0, i32 5, !dbg !9055
  %62 = load i32, ptr %working, align 4, !dbg !9055, !tbaa !6024
  %tobool95 = icmp ne i32 %62, 0, !dbg !9053
  br i1 %tobool95, label %if.then96, label %if.end98, !dbg !9056

if.then96:                                        ; preds = %if.end94
  %63 = load ptr, ptr %r.addr, align 8, !dbg !9057, !tbaa !2416
  %call97 = call i32 @dav_error_response(ptr noundef %63, i32 noundef 409, ptr noundef @.str.248), !dbg !9059
  store i32 %call97, ptr %retval, align 4, !dbg !9060
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9060

if.end98:                                         ; preds = %if.end94
  %64 = load ptr, ptr %vsn_hooks, align 8, !dbg !9061, !tbaa !2416
  %checkout = getelementptr inbounds %struct.dav_hooks_vsn, ptr %64, i32 0, i32 5, !dbg !9063
  %65 = load ptr, ptr %checkout, align 8, !dbg !9063, !tbaa !9064
  %66 = load ptr, ptr %resource, align 8, !dbg !9065, !tbaa !2416
  %67 = load i32, ptr %is_unreserved, align 4, !dbg !9066, !tbaa !2683
  %68 = load i32, ptr %is_fork_ok, align 4, !dbg !9067, !tbaa !2683
  %69 = load i32, ptr %create_activity, align 4, !dbg !9068, !tbaa !2683
  %70 = load ptr, ptr %activities, align 8, !dbg !9069, !tbaa !2416
  %call99 = call ptr %65(ptr noundef %66, i32 noundef 0, i32 noundef %67, i32 noundef %68, i32 noundef %69, ptr noundef %70, ptr noundef %working_resource), !dbg !9070
  store ptr %call99, ptr %err, align 8, !dbg !9071, !tbaa !2416
  %cmp100 = icmp ne ptr %call99, null, !dbg !9072
  br i1 %cmp100, label %if.then102, label %if.end110, !dbg !9073

if.then102:                                       ; preds = %if.end98
  %71 = load ptr, ptr %r.addr, align 8, !dbg !9074, !tbaa !2416
  %pool103 = getelementptr inbounds %struct.request_rec, ptr %71, i32 0, i32 0, !dbg !9076
  %72 = load ptr, ptr %pool103, align 8, !dbg !9076, !tbaa !2792
  %73 = load ptr, ptr %r.addr, align 8, !dbg !9077, !tbaa !2416
  %pool104 = getelementptr inbounds %struct.request_rec, ptr %73, i32 0, i32 0, !dbg !9078
  %74 = load ptr, ptr %pool104, align 8, !dbg !9078, !tbaa !2792
  %75 = load ptr, ptr %r.addr, align 8, !dbg !9079, !tbaa !2416
  %pool105 = getelementptr inbounds %struct.request_rec, ptr %75, i32 0, i32 0, !dbg !9079
  %76 = load ptr, ptr %pool105, align 8, !dbg !9079, !tbaa !2792
  %77 = load ptr, ptr %r.addr, align 8, !dbg !9079, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %77, i32 0, i32 47, !dbg !9079
  %78 = load ptr, ptr %uri, align 8, !dbg !9079, !tbaa !3183
  %call106 = call ptr @ap_escape_html2(ptr noundef %76, ptr noundef %78, i32 noundef 0), !dbg !9079
  %call107 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %74, ptr noundef @.str.249, ptr noundef %call106), !dbg !9080
  %79 = load ptr, ptr %err, align 8, !dbg !9081, !tbaa !2416
  %call108 = call ptr @dav_push_error(ptr noundef %72, i32 noundef 409, i32 noundef 0, ptr noundef %call107, ptr noundef %79), !dbg !9082
  store ptr %call108, ptr %err, align 8, !dbg !9083, !tbaa !2416
  %80 = load ptr, ptr %r.addr, align 8, !dbg !9084, !tbaa !2416
  %81 = load ptr, ptr %err, align 8, !dbg !9085, !tbaa !2416
  %call109 = call i32 @dav_handle_err(ptr noundef %80, ptr noundef %81, ptr noundef null), !dbg !9086
  store i32 %call109, ptr %retval, align 4, !dbg !9087
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9087

if.end110:                                        ; preds = %if.end98
  %82 = load ptr, ptr %r.addr, align 8, !dbg !9088, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %82, i32 0, i32 35, !dbg !9089
  %83 = load ptr, ptr %headers_out, align 8, !dbg !9089, !tbaa !5817
  call void @apr_table_setn(ptr noundef %83, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !9090
  %84 = load ptr, ptr %working_resource, align 8, !dbg !9091, !tbaa !2416
  %cmp111 = icmp eq ptr %84, null, !dbg !9093
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !9094

if.then113:                                       ; preds = %if.end110
  %85 = load ptr, ptr %r.addr, align 8, !dbg !9095, !tbaa !2416
  call void @ap_set_content_length(ptr noundef %85, i64 noundef 0), !dbg !9097
  store i32 -2, ptr %retval, align 4, !dbg !9098
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9098

if.end114:                                        ; preds = %if.end110
  %86 = load ptr, ptr %r.addr, align 8, !dbg !9099, !tbaa !2416
  %87 = load ptr, ptr %working_resource, align 8, !dbg !9100, !tbaa !2416
  %uri115 = getelementptr inbounds %struct.dav_resource, ptr %87, i32 0, i32 6, !dbg !9101
  %88 = load ptr, ptr %uri115, align 8, !dbg !9101, !tbaa !3323
  %call116 = call i32 @dav_created(ptr noundef %86, ptr noundef %88, ptr noundef @.str.250, i32 noundef 0), !dbg !9102
  store i32 %call116, ptr %retval, align 4, !dbg !9103
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !9103

cleanup117:                                       ; preds = %if.end114, %if.then113, %if.then102, %if.then96, %if.then92, %if.then88, %if.then80, %if.then76, %if.then68, %cleanup61, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %activities) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 4, ptr %create_activity) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_fork_ok) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unreserved) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 4, ptr %apply_to_vsn) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 8, ptr %working_resource) #10, !dbg !9104
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !9104
  %89 = load i32, ptr %retval, align 4, !dbg !9104
  ret i32 %89, !dbg !9104
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_uncheckout(ptr noundef %r) #0 !dbg !9105 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !9107, metadata !DIExpression()), !dbg !9112
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !9113
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !9108, metadata !DIExpression()), !dbg !9114
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9115
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !9109, metadata !DIExpression()), !dbg !9116
  %0 = load ptr, ptr %r.addr, align 8, !dbg !9117, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !9117
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !9116, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !9118
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !9110, metadata !DIExpression()), !dbg !9119
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !9120
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9111, metadata !DIExpression()), !dbg !9121
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !9122, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !9124
  br i1 %cmp, label %if.then, label %if.end, !dbg !9125

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !9126
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9126

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !9127, !tbaa !2416
  %call1 = call i32 @ap_discard_request_body(ptr noundef %2), !dbg !9129
  store i32 %call1, ptr %result, align 4, !dbg !9130, !tbaa !2683
  %cmp2 = icmp ne i32 %call1, 0, !dbg !9131
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9132

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr %result, align 4, !dbg !9133, !tbaa !2683
  store i32 %3, ptr %retval, align 4, !dbg !9135
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9135

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %r.addr, align 8, !dbg !9136, !tbaa !2416
  %call5 = call ptr @dav_get_resource(ptr noundef %4, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !9137
  store ptr %call5, ptr %err, align 8, !dbg !9138, !tbaa !2416
  %5 = load ptr, ptr %err, align 8, !dbg !9139, !tbaa !2416
  %cmp6 = icmp ne ptr %5, null, !dbg !9141
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !9142

if.then7:                                         ; preds = %if.end4
  %6 = load ptr, ptr %r.addr, align 8, !dbg !9143, !tbaa !2416
  %7 = load ptr, ptr %err, align 8, !dbg !9144, !tbaa !2416
  %call8 = call i32 @dav_handle_err(ptr noundef %6, ptr noundef %7, ptr noundef null), !dbg !9145
  store i32 %call8, ptr %retval, align 4, !dbg !9146
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9146

if.end9:                                          ; preds = %if.end4
  %8 = load ptr, ptr %r.addr, align 8, !dbg !9147, !tbaa !2416
  %9 = load ptr, ptr %resource, align 8, !dbg !9149, !tbaa !2416
  %call10 = call i32 @dav_run_method_precondition(ptr noundef %8, ptr noundef %9, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !9150
  %cmp11 = icmp ne i32 %call10, -1, !dbg !9151
  br i1 %cmp11, label %land.lhs.true, label %if.end14, !dbg !9152

land.lhs.true:                                    ; preds = %if.end9
  %10 = load ptr, ptr %err, align 8, !dbg !9153, !tbaa !2416
  %tobool = icmp ne ptr %10, null, !dbg !9153
  br i1 %tobool, label %if.then12, label %if.end14, !dbg !9154

if.then12:                                        ; preds = %land.lhs.true
  %11 = load ptr, ptr %r.addr, align 8, !dbg !9155, !tbaa !2416
  %12 = load ptr, ptr %err, align 8, !dbg !9157, !tbaa !2416
  %call13 = call i32 @dav_handle_err(ptr noundef %11, ptr noundef %12, ptr noundef null), !dbg !9158
  store i32 %call13, ptr %retval, align 4, !dbg !9159
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9159

if.end14:                                         ; preds = %land.lhs.true, %if.end9
  %13 = load ptr, ptr %resource, align 8, !dbg !9160, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %13, i32 0, i32 1, !dbg !9162
  %14 = load i32, ptr %exists, align 4, !dbg !9162, !tbaa !4784
  %tobool15 = icmp ne i32 %14, 0, !dbg !9160
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !9163

if.then16:                                        ; preds = %if.end14
  store i32 404, ptr %retval, align 4, !dbg !9164
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9164

if.end17:                                         ; preds = %if.end14
  %15 = load ptr, ptr %resource, align 8, !dbg !9166, !tbaa !2416
  %type = getelementptr inbounds %struct.dav_resource, ptr %15, i32 0, i32 0, !dbg !9168
  %16 = load i32, ptr %type, align 8, !dbg !9168, !tbaa !4954
  %cmp18 = icmp ne i32 %16, 1, !dbg !9169
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9170

if.then19:                                        ; preds = %if.end17
  %17 = load ptr, ptr %r.addr, align 8, !dbg !9171, !tbaa !2416
  %call20 = call i32 @dav_error_response(ptr noundef %17, i32 noundef 409, ptr noundef @.str.251), !dbg !9173
  store i32 %call20, ptr %retval, align 4, !dbg !9174
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9174

if.end21:                                         ; preds = %if.end17
  %18 = load ptr, ptr %resource, align 8, !dbg !9175, !tbaa !2416
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %18, i32 0, i32 3, !dbg !9177
  %19 = load i32, ptr %versioned, align 4, !dbg !9177, !tbaa !6009
  %tobool22 = icmp ne i32 %19, 0, !dbg !9175
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !9178

if.then23:                                        ; preds = %if.end21
  %20 = load ptr, ptr %r.addr, align 8, !dbg !9179, !tbaa !2416
  %call24 = call i32 @dav_error_response(ptr noundef %20, i32 noundef 409, ptr noundef @.str.252), !dbg !9181
  store i32 %call24, ptr %retval, align 4, !dbg !9182
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9182

if.end25:                                         ; preds = %if.end21
  %21 = load ptr, ptr %resource, align 8, !dbg !9183, !tbaa !2416
  %working = getelementptr inbounds %struct.dav_resource, ptr %21, i32 0, i32 5, !dbg !9185
  %22 = load i32, ptr %working, align 4, !dbg !9185, !tbaa !6024
  %tobool26 = icmp ne i32 %22, 0, !dbg !9183
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !9186

if.then27:                                        ; preds = %if.end25
  %23 = load ptr, ptr %r.addr, align 8, !dbg !9187, !tbaa !2416
  %call28 = call i32 @dav_error_response(ptr noundef %23, i32 noundef 409, ptr noundef @.str.253), !dbg !9189
  store i32 %call28, ptr %retval, align 4, !dbg !9190
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9190

if.end29:                                         ; preds = %if.end25
  %24 = load ptr, ptr %vsn_hooks, align 8, !dbg !9191, !tbaa !2416
  %uncheckout = getelementptr inbounds %struct.dav_hooks_vsn, ptr %24, i32 0, i32 6, !dbg !9193
  %25 = load ptr, ptr %uncheckout, align 8, !dbg !9193, !tbaa !9194
  %26 = load ptr, ptr %resource, align 8, !dbg !9195, !tbaa !2416
  %call30 = call ptr %25(ptr noundef %26), !dbg !9196
  store ptr %call30, ptr %err, align 8, !dbg !9197, !tbaa !2416
  %cmp31 = icmp ne ptr %call30, null, !dbg !9198
  br i1 %cmp31, label %if.then32, label %if.end39, !dbg !9199

if.then32:                                        ; preds = %if.end29
  %27 = load ptr, ptr %r.addr, align 8, !dbg !9200, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %27, i32 0, i32 0, !dbg !9202
  %28 = load ptr, ptr %pool, align 8, !dbg !9202, !tbaa !2792
  %29 = load ptr, ptr %r.addr, align 8, !dbg !9203, !tbaa !2416
  %pool33 = getelementptr inbounds %struct.request_rec, ptr %29, i32 0, i32 0, !dbg !9204
  %30 = load ptr, ptr %pool33, align 8, !dbg !9204, !tbaa !2792
  %31 = load ptr, ptr %r.addr, align 8, !dbg !9205, !tbaa !2416
  %pool34 = getelementptr inbounds %struct.request_rec, ptr %31, i32 0, i32 0, !dbg !9205
  %32 = load ptr, ptr %pool34, align 8, !dbg !9205, !tbaa !2792
  %33 = load ptr, ptr %r.addr, align 8, !dbg !9205, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %33, i32 0, i32 47, !dbg !9205
  %34 = load ptr, ptr %uri, align 8, !dbg !9205, !tbaa !3183
  %call35 = call ptr @ap_escape_html2(ptr noundef %32, ptr noundef %34, i32 noundef 0), !dbg !9205
  %call36 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %30, ptr noundef @.str.254, ptr noundef %call35), !dbg !9206
  %35 = load ptr, ptr %err, align 8, !dbg !9207, !tbaa !2416
  %call37 = call ptr @dav_push_error(ptr noundef %28, i32 noundef 409, i32 noundef 0, ptr noundef %call36, ptr noundef %35), !dbg !9208
  store ptr %call37, ptr %err, align 8, !dbg !9209, !tbaa !2416
  %36 = load ptr, ptr %r.addr, align 8, !dbg !9210, !tbaa !2416
  %37 = load ptr, ptr %err, align 8, !dbg !9211, !tbaa !2416
  %call38 = call i32 @dav_handle_err(ptr noundef %36, ptr noundef %37, ptr noundef null), !dbg !9212
  store i32 %call38, ptr %retval, align 4, !dbg !9213
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9213

if.end39:                                         ; preds = %if.end29
  %38 = load ptr, ptr %r.addr, align 8, !dbg !9214, !tbaa !2416
  call void @ap_set_content_length(ptr noundef %38, i64 noundef 0), !dbg !9215
  store i32 -2, ptr %retval, align 4, !dbg !9216
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9216

cleanup:                                          ; preds = %if.end39, %if.then32, %if.then27, %if.then23, %if.then19, %if.then16, %if.then12, %if.then7, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !9217
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !9217
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9217
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !9217
  %39 = load i32, ptr %retval, align 4, !dbg !9217
  ret i32 %39, !dbg !9217
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_checkin(ptr noundef %r) #0 !dbg !9218 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %new_version = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %result = alloca i32, align 4
  %doc = alloca ptr, align 8
  %keep_checked_out = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !9220, metadata !DIExpression()), !dbg !9228
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !9229
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !9221, metadata !DIExpression()), !dbg !9230
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_version) #10, !dbg !9231
  tail call void @llvm.dbg.declare(metadata ptr %new_version, metadata !9222, metadata !DIExpression()), !dbg !9232
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9233
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !9223, metadata !DIExpression()), !dbg !9234
  %0 = load ptr, ptr %r.addr, align 8, !dbg !9235, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !9235
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !9234, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !9236
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !9224, metadata !DIExpression()), !dbg !9237
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !9238
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9225, metadata !DIExpression()), !dbg !9239
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !9240
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !9226, metadata !DIExpression()), !dbg !9241
  call void @llvm.lifetime.start.p0(i64 4, ptr %keep_checked_out) #10, !dbg !9242
  tail call void @llvm.dbg.declare(metadata ptr %keep_checked_out, metadata !9227, metadata !DIExpression()), !dbg !9243
  store i32 0, ptr %keep_checked_out, align 4, !dbg !9243, !tbaa !2683
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !9244, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !9246
  br i1 %cmp, label %if.then, label %if.end, !dbg !9247

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !9248
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9248

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !9249, !tbaa !2416
  %call1 = call i32 @ap_xml_parse_input(ptr noundef %2, ptr noundef %doc), !dbg !9251
  store i32 %call1, ptr %result, align 4, !dbg !9252, !tbaa !2683
  %cmp2 = icmp ne i32 %call1, 0, !dbg !9253
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9254

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr %result, align 4, !dbg !9255, !tbaa !2683
  store i32 %3, ptr %retval, align 4, !dbg !9256
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9256

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %doc, align 8, !dbg !9257, !tbaa !2416
  %cmp5 = icmp ne ptr %4, null, !dbg !9259
  br i1 %cmp5, label %if.then6, label %if.end12, !dbg !9260

if.then6:                                         ; preds = %if.end4
  %5 = load ptr, ptr %doc, align 8, !dbg !9261, !tbaa !2416
  %call7 = call i32 @dav_validate_root(ptr noundef %5, ptr noundef @.str.255), !dbg !9264
  %tobool = icmp ne i32 %call7, 0, !dbg !9264
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !9265

if.then8:                                         ; preds = %if.then6
  br label %do.body, !dbg !9266

do.body:                                          ; preds = %if.then8
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !9268

cond.true:                                        ; preds = %do.body
  %6 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9268, !tbaa !2683
  br label %cond.end, !dbg !9268

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !9268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ -1, %cond.false ], !dbg !9268
  %7 = load ptr, ptr %r.addr, align 8, !dbg !9268, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3856, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %7, ptr noundef @.str.256), !dbg !9268
  br label %do.cond, !dbg !9271

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !9271

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !9272
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9272

if.end9:                                          ; preds = %if.then6
  %8 = load ptr, ptr %doc, align 8, !dbg !9273, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %8, i32 0, i32 0, !dbg !9274
  %9 = load ptr, ptr %root, align 8, !dbg !9274, !tbaa !6252
  %call10 = call ptr @dav_find_child(ptr noundef %9, ptr noundef @.str.257), !dbg !9275
  %cmp11 = icmp ne ptr %call10, null, !dbg !9276
  %conv = zext i1 %cmp11 to i32, !dbg !9276
  store i32 %conv, ptr %keep_checked_out, align 4, !dbg !9277, !tbaa !2683
  br label %if.end12, !dbg !9278

if.end12:                                         ; preds = %if.end9, %if.end4
  %10 = load ptr, ptr %r.addr, align 8, !dbg !9279, !tbaa !2416
  %call13 = call ptr @dav_get_resource(ptr noundef %10, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !9280
  store ptr %call13, ptr %err, align 8, !dbg !9281, !tbaa !2416
  %11 = load ptr, ptr %err, align 8, !dbg !9282, !tbaa !2416
  %cmp14 = icmp ne ptr %11, null, !dbg !9284
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !9285

if.then16:                                        ; preds = %if.end12
  %12 = load ptr, ptr %r.addr, align 8, !dbg !9286, !tbaa !2416
  %13 = load ptr, ptr %err, align 8, !dbg !9287, !tbaa !2416
  %call17 = call i32 @dav_handle_err(ptr noundef %12, ptr noundef %13, ptr noundef null), !dbg !9288
  store i32 %call17, ptr %retval, align 4, !dbg !9289
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9289

if.end18:                                         ; preds = %if.end12
  %14 = load ptr, ptr %r.addr, align 8, !dbg !9290, !tbaa !2416
  %15 = load ptr, ptr %resource, align 8, !dbg !9292, !tbaa !2416
  %16 = load ptr, ptr %doc, align 8, !dbg !9293, !tbaa !2416
  %call19 = call i32 @dav_run_method_precondition(ptr noundef %14, ptr noundef %15, ptr noundef null, ptr noundef %16, ptr noundef %err), !dbg !9294
  %cmp20 = icmp ne i32 %call19, -1, !dbg !9295
  br i1 %cmp20, label %land.lhs.true, label %if.end25, !dbg !9296

land.lhs.true:                                    ; preds = %if.end18
  %17 = load ptr, ptr %err, align 8, !dbg !9297, !tbaa !2416
  %tobool22 = icmp ne ptr %17, null, !dbg !9297
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !9298

if.then23:                                        ; preds = %land.lhs.true
  %18 = load ptr, ptr %r.addr, align 8, !dbg !9299, !tbaa !2416
  %19 = load ptr, ptr %err, align 8, !dbg !9301, !tbaa !2416
  %call24 = call i32 @dav_handle_err(ptr noundef %18, ptr noundef %19, ptr noundef null), !dbg !9302
  store i32 %call24, ptr %retval, align 4, !dbg !9303
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9303

if.end25:                                         ; preds = %land.lhs.true, %if.end18
  %20 = load ptr, ptr %resource, align 8, !dbg !9304, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %20, i32 0, i32 1, !dbg !9306
  %21 = load i32, ptr %exists, align 4, !dbg !9306, !tbaa !4784
  %tobool26 = icmp ne i32 %21, 0, !dbg !9304
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !9307

if.then27:                                        ; preds = %if.end25
  store i32 404, ptr %retval, align 4, !dbg !9308
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9308

if.end28:                                         ; preds = %if.end25
  %22 = load ptr, ptr %resource, align 8, !dbg !9310, !tbaa !2416
  %type = getelementptr inbounds %struct.dav_resource, ptr %22, i32 0, i32 0, !dbg !9312
  %23 = load i32, ptr %type, align 8, !dbg !9312, !tbaa !4954
  %cmp29 = icmp ne i32 %23, 1, !dbg !9313
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !9314

if.then31:                                        ; preds = %if.end28
  %24 = load ptr, ptr %r.addr, align 8, !dbg !9315, !tbaa !2416
  %call32 = call i32 @dav_error_response(ptr noundef %24, i32 noundef 409, ptr noundef @.str.258), !dbg !9317
  store i32 %call32, ptr %retval, align 4, !dbg !9318
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9318

if.end33:                                         ; preds = %if.end28
  %25 = load ptr, ptr %resource, align 8, !dbg !9319, !tbaa !2416
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %25, i32 0, i32 3, !dbg !9321
  %26 = load i32, ptr %versioned, align 4, !dbg !9321, !tbaa !6009
  %tobool34 = icmp ne i32 %26, 0, !dbg !9319
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !9322

if.then35:                                        ; preds = %if.end33
  %27 = load ptr, ptr %r.addr, align 8, !dbg !9323, !tbaa !2416
  %call36 = call i32 @dav_error_response(ptr noundef %27, i32 noundef 409, ptr noundef @.str.259), !dbg !9325
  store i32 %call36, ptr %retval, align 4, !dbg !9326
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9326

if.end37:                                         ; preds = %if.end33
  %28 = load ptr, ptr %resource, align 8, !dbg !9327, !tbaa !2416
  %working = getelementptr inbounds %struct.dav_resource, ptr %28, i32 0, i32 5, !dbg !9329
  %29 = load i32, ptr %working, align 4, !dbg !9329, !tbaa !6024
  %tobool38 = icmp ne i32 %29, 0, !dbg !9327
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !9330

if.then39:                                        ; preds = %if.end37
  %30 = load ptr, ptr %r.addr, align 8, !dbg !9331, !tbaa !2416
  %call40 = call i32 @dav_error_response(ptr noundef %30, i32 noundef 409, ptr noundef @.str.260), !dbg !9333
  store i32 %call40, ptr %retval, align 4, !dbg !9334
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9334

if.end41:                                         ; preds = %if.end37
  %31 = load ptr, ptr %vsn_hooks, align 8, !dbg !9335, !tbaa !2416
  %checkin = getelementptr inbounds %struct.dav_hooks_vsn, ptr %31, i32 0, i32 7, !dbg !9337
  %32 = load ptr, ptr %checkin, align 8, !dbg !9337, !tbaa !9338
  %33 = load ptr, ptr %resource, align 8, !dbg !9339, !tbaa !2416
  %34 = load i32, ptr %keep_checked_out, align 4, !dbg !9340, !tbaa !2683
  %call42 = call ptr %32(ptr noundef %33, i32 noundef %34, ptr noundef %new_version), !dbg !9341
  store ptr %call42, ptr %err, align 8, !dbg !9342, !tbaa !2416
  %cmp43 = icmp ne ptr %call42, null, !dbg !9343
  br i1 %cmp43, label %if.then45, label %if.end52, !dbg !9344

if.then45:                                        ; preds = %if.end41
  %35 = load ptr, ptr %r.addr, align 8, !dbg !9345, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %35, i32 0, i32 0, !dbg !9347
  %36 = load ptr, ptr %pool, align 8, !dbg !9347, !tbaa !2792
  %37 = load ptr, ptr %r.addr, align 8, !dbg !9348, !tbaa !2416
  %pool46 = getelementptr inbounds %struct.request_rec, ptr %37, i32 0, i32 0, !dbg !9349
  %38 = load ptr, ptr %pool46, align 8, !dbg !9349, !tbaa !2792
  %39 = load ptr, ptr %r.addr, align 8, !dbg !9350, !tbaa !2416
  %pool47 = getelementptr inbounds %struct.request_rec, ptr %39, i32 0, i32 0, !dbg !9350
  %40 = load ptr, ptr %pool47, align 8, !dbg !9350, !tbaa !2792
  %41 = load ptr, ptr %r.addr, align 8, !dbg !9350, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %41, i32 0, i32 47, !dbg !9350
  %42 = load ptr, ptr %uri, align 8, !dbg !9350, !tbaa !3183
  %call48 = call ptr @ap_escape_html2(ptr noundef %40, ptr noundef %42, i32 noundef 0), !dbg !9350
  %call49 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %38, ptr noundef @.str.261, ptr noundef %call48), !dbg !9351
  %43 = load ptr, ptr %err, align 8, !dbg !9352, !tbaa !2416
  %call50 = call ptr @dav_push_error(ptr noundef %36, i32 noundef 409, i32 noundef 0, ptr noundef %call49, ptr noundef %43), !dbg !9353
  store ptr %call50, ptr %err, align 8, !dbg !9354, !tbaa !2416
  %44 = load ptr, ptr %r.addr, align 8, !dbg !9355, !tbaa !2416
  %45 = load ptr, ptr %err, align 8, !dbg !9356, !tbaa !2416
  %call51 = call i32 @dav_handle_err(ptr noundef %44, ptr noundef %45, ptr noundef null), !dbg !9357
  store i32 %call51, ptr %retval, align 4, !dbg !9358
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9358

if.end52:                                         ; preds = %if.end41
  %46 = load ptr, ptr %r.addr, align 8, !dbg !9359, !tbaa !2416
  %47 = load ptr, ptr %new_version, align 8, !dbg !9360, !tbaa !2416
  %uri53 = getelementptr inbounds %struct.dav_resource, ptr %47, i32 0, i32 6, !dbg !9361
  %48 = load ptr, ptr %uri53, align 8, !dbg !9361, !tbaa !3323
  %call54 = call i32 @dav_created(ptr noundef %46, ptr noundef %48, ptr noundef @.str.262, i32 noundef 0), !dbg !9362
  store i32 %call54, ptr %retval, align 4, !dbg !9363
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9363

cleanup:                                          ; preds = %if.end52, %if.then45, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then16, %do.end, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %keep_checked_out) #10, !dbg !9364
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !9364
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !9364
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !9364
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9364
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_version) #10, !dbg !9364
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !9364
  %49 = load i32, ptr %retval, align 4, !dbg !9364
  ret i32 %49, !dbg !9364
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_update(ptr noundef %r) #0 !dbg !9365 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %version = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %doc = alloca ptr, align 8
  %child = alloca ptr, align 8
  %is_label = alloca i32, align 4
  %depth = alloca i32, align 4
  %result = alloca i32, align 4
  %tsize = alloca i64, align 8
  %target = alloca ptr, align 8
  %multi_response = alloca ptr, align 8
  %err = alloca ptr, align 8
  %lookup = alloca %struct.dav_lookup_result, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.dav_lookup_result, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !9367, metadata !DIExpression()), !dbg !9381
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !9382
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !9368, metadata !DIExpression()), !dbg !9383
  call void @llvm.lifetime.start.p0(i64 8, ptr %version) #10, !dbg !9384
  tail call void @llvm.dbg.declare(metadata ptr %version, metadata !9369, metadata !DIExpression()), !dbg !9385
  store ptr null, ptr %version, align 8, !dbg !9385, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9386
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !9370, metadata !DIExpression()), !dbg !9387
  %0 = load ptr, ptr %r.addr, align 8, !dbg !9388, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !9388
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !9387, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !9389
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !9371, metadata !DIExpression()), !dbg !9390
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !9391
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !9372, metadata !DIExpression()), !dbg !9392
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_label) #10, !dbg !9393
  tail call void @llvm.dbg.declare(metadata ptr %is_label, metadata !9373, metadata !DIExpression()), !dbg !9394
  store i32 0, ptr %is_label, align 4, !dbg !9394, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 4, ptr %depth) #10, !dbg !9395
  tail call void @llvm.dbg.declare(metadata ptr %depth, metadata !9374, metadata !DIExpression()), !dbg !9396
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !9397
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9375, metadata !DIExpression()), !dbg !9398
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsize) #10, !dbg !9399
  tail call void @llvm.dbg.declare(metadata ptr %tsize, metadata !9376, metadata !DIExpression()), !dbg !9400
  call void @llvm.lifetime.start.p0(i64 8, ptr %target) #10, !dbg !9401
  tail call void @llvm.dbg.declare(metadata ptr %target, metadata !9377, metadata !DIExpression()), !dbg !9402
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_response) #10, !dbg !9403
  tail call void @llvm.dbg.declare(metadata ptr %multi_response, metadata !9378, metadata !DIExpression()), !dbg !9404
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !9405
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !9379, metadata !DIExpression()), !dbg !9406
  call void @llvm.lifetime.start.p0(i64 64, ptr %lookup) #10, !dbg !9407
  tail call void @llvm.dbg.declare(metadata ptr %lookup, metadata !9380, metadata !DIExpression()), !dbg !9408
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !9409, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !9411
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9412

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %vsn_hooks, align 8, !dbg !9413, !tbaa !2416
  %update = getelementptr inbounds %struct.dav_hooks_vsn, ptr %2, i32 0, i32 11, !dbg !9414
  %3 = load ptr, ptr %update, align 8, !dbg !9414, !tbaa !9415
  %cmp1 = icmp eq ptr %3, null, !dbg !9416
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9417

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !9418
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9418

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %r.addr, align 8, !dbg !9419, !tbaa !2416
  %call2 = call i32 @dav_get_depth(ptr noundef %4, i32 noundef 0), !dbg !9421
  store i32 %call2, ptr %depth, align 4, !dbg !9422, !tbaa !2683
  %cmp3 = icmp slt i32 %call2, 0, !dbg !9423
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9424

if.then4:                                         ; preds = %if.end
  store i32 400, ptr %retval, align 4, !dbg !9425
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9425

if.end5:                                          ; preds = %if.end
  %5 = load ptr, ptr %r.addr, align 8, !dbg !9427, !tbaa !2416
  %call6 = call i32 @ap_xml_parse_input(ptr noundef %5, ptr noundef %doc), !dbg !9429
  store i32 %call6, ptr %result, align 4, !dbg !9430, !tbaa !2683
  %cmp7 = icmp ne i32 %call6, 0, !dbg !9431
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9432

if.then8:                                         ; preds = %if.end5
  %6 = load i32, ptr %result, align 4, !dbg !9433, !tbaa !2683
  store i32 %6, ptr %retval, align 4, !dbg !9435
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9435

if.end9:                                          ; preds = %if.end5
  %7 = load ptr, ptr %doc, align 8, !dbg !9436, !tbaa !2416
  %cmp10 = icmp eq ptr %7, null, !dbg !9438
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11, !dbg !9439

lor.lhs.false11:                                  ; preds = %if.end9
  %8 = load ptr, ptr %doc, align 8, !dbg !9440, !tbaa !2416
  %call12 = call i32 @dav_validate_root(ptr noundef %8, ptr noundef @.str.263), !dbg !9441
  %tobool = icmp ne i32 %call12, 0, !dbg !9441
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !9442

if.then13:                                        ; preds = %lor.lhs.false11, %if.end9
  br label %do.body, !dbg !9443

do.body:                                          ; preds = %if.then13
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !9445

cond.true:                                        ; preds = %do.body
  %9 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9445, !tbaa !2683
  br label %cond.end, !dbg !9445

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !9445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ -1, %cond.false ], !dbg !9445
  %10 = load ptr, ptr %r.addr, align 8, !dbg !9445, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3950, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %10, ptr noundef @.str.264), !dbg !9445
  br label %do.cond, !dbg !9448

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !9448

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !9449
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9449

if.end14:                                         ; preds = %lor.lhs.false11
  %11 = load ptr, ptr %doc, align 8, !dbg !9450, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %11, i32 0, i32 0, !dbg !9452
  %12 = load ptr, ptr %root, align 8, !dbg !9452, !tbaa !6252
  %call15 = call ptr @dav_find_child(ptr noundef %12, ptr noundef @.str.265), !dbg !9453
  store ptr %call15, ptr %child, align 8, !dbg !9454, !tbaa !2416
  %cmp16 = icmp ne ptr %call15, null, !dbg !9455
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9456

if.then17:                                        ; preds = %if.end14
  store i32 1, ptr %is_label, align 4, !dbg !9457, !tbaa !2683
  br label %if.end42, !dbg !9458

if.else:                                          ; preds = %if.end14
  %13 = load ptr, ptr %doc, align 8, !dbg !9459, !tbaa !2416
  %root18 = getelementptr inbounds %struct.apr_xml_doc, ptr %13, i32 0, i32 0, !dbg !9461
  %14 = load ptr, ptr %root18, align 8, !dbg !9461, !tbaa !6252
  %call19 = call ptr @dav_find_child(ptr noundef %14, ptr noundef @.str.222), !dbg !9462
  store ptr %call19, ptr %child, align 8, !dbg !9463, !tbaa !2416
  %cmp20 = icmp ne ptr %call19, null, !dbg !9464
  br i1 %cmp20, label %if.then21, label %if.else33, !dbg !9465

if.then21:                                        ; preds = %if.else
  %15 = load ptr, ptr %child, align 8, !dbg !9466, !tbaa !2416
  %call22 = call ptr @dav_find_child(ptr noundef %15, ptr noundef @.str.224), !dbg !9469
  store ptr %call22, ptr %child, align 8, !dbg !9470, !tbaa !2416
  %cmp23 = icmp eq ptr %call22, null, !dbg !9471
  br i1 %cmp23, label %if.then24, label %if.end32, !dbg !9472

if.then24:                                        ; preds = %if.then21
  br label %do.body25, !dbg !9473

do.body25:                                        ; preds = %if.then24
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true26, label %cond.false27, !dbg !9475

cond.true26:                                      ; preds = %do.body25
  %16 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9475, !tbaa !2683
  br label %cond.end28, !dbg !9475

cond.false27:                                     ; preds = %do.body25
  br label %cond.end28, !dbg !9475

cond.end28:                                       ; preds = %cond.false27, %cond.true26
  %cond29 = phi i32 [ %16, %cond.true26 ], [ -1, %cond.false27 ], !dbg !9475
  %17 = load ptr, ptr %r.addr, align 8, !dbg !9475, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3962, i32 noundef %cond29, i32 noundef 3, i32 noundef 0, ptr noundef %17, ptr noundef @.str.266), !dbg !9475
  br label %do.cond30, !dbg !9478

do.cond30:                                        ; preds = %cond.end28
  br label %do.end31, !dbg !9478

do.end31:                                         ; preds = %do.cond30
  store i32 400, ptr %retval, align 4, !dbg !9479
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9479

if.end32:                                         ; preds = %if.then21
  br label %if.end41, !dbg !9480

if.else33:                                        ; preds = %if.else
  br label %do.body34, !dbg !9481

do.body34:                                        ; preds = %if.else33
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true35, label %cond.false36, !dbg !9483

cond.true35:                                      ; preds = %do.body34
  %18 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9483, !tbaa !2683
  br label %cond.end37, !dbg !9483

cond.false36:                                     ; preds = %do.body34
  br label %cond.end37, !dbg !9483

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ %18, %cond.true35 ], [ -1, %cond.false36 ], !dbg !9483
  %19 = load ptr, ptr %r.addr, align 8, !dbg !9483, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3969, i32 noundef %cond38, i32 noundef 3, i32 noundef 0, ptr noundef %19, ptr noundef @.str.267), !dbg !9483
  br label %do.cond39, !dbg !9486

do.cond39:                                        ; preds = %cond.end37
  br label %do.end40, !dbg !9486

do.end40:                                         ; preds = %do.cond39
  store i32 400, ptr %retval, align 4, !dbg !9487
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9487

if.end41:                                         ; preds = %if.end32
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then17
  %20 = load i32, ptr %is_label, align 4, !dbg !9488, !tbaa !2683
  %tobool43 = icmp ne i32 %20, 0, !dbg !9488
  br i1 %tobool43, label %if.end53, label %land.lhs.true, !dbg !9490

land.lhs.true:                                    ; preds = %if.end42
  %21 = load i32, ptr %depth, align 4, !dbg !9491, !tbaa !2683
  %cmp44 = icmp ne i32 %21, 0, !dbg !9492
  br i1 %cmp44, label %if.then45, label %if.end53, !dbg !9493

if.then45:                                        ; preds = %land.lhs.true
  br label %do.body46, !dbg !9494

do.body46:                                        ; preds = %if.then45
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true47, label %cond.false48, !dbg !9496

cond.true47:                                      ; preds = %do.body46
  %22 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9496, !tbaa !2683
  br label %cond.end49, !dbg !9496

cond.false48:                                     ; preds = %do.body46
  br label %cond.end49, !dbg !9496

cond.end49:                                       ; preds = %cond.false48, %cond.true47
  %cond50 = phi i32 [ %22, %cond.true47 ], [ -1, %cond.false48 ], !dbg !9496
  %23 = load ptr, ptr %r.addr, align 8, !dbg !9496, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3977, i32 noundef %cond50, i32 noundef 3, i32 noundef 0, ptr noundef %23, ptr noundef @.str.268), !dbg !9496
  br label %do.cond51, !dbg !9499

do.cond51:                                        ; preds = %cond.end49
  br label %do.end52, !dbg !9499

do.end52:                                         ; preds = %do.cond51
  store i32 400, ptr %retval, align 4, !dbg !9500
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9500

if.end53:                                         ; preds = %land.lhs.true, %if.end42
  %24 = load ptr, ptr %r.addr, align 8, !dbg !9501, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %24, i32 0, i32 0, !dbg !9502
  %25 = load ptr, ptr %pool, align 8, !dbg !9502, !tbaa !2792
  %26 = load ptr, ptr %child, align 8, !dbg !9503, !tbaa !2416
  call void @apr_xml_to_text(ptr noundef %25, ptr noundef %26, i32 noundef 1, ptr noundef null, ptr noundef null, ptr noundef %target, ptr noundef %tsize), !dbg !9504
  %27 = load i64, ptr %tsize, align 8, !dbg !9505, !tbaa !3569
  %cmp54 = icmp eq i64 %27, 0, !dbg !9507
  br i1 %cmp54, label %if.then55, label %if.end63, !dbg !9508

if.then55:                                        ; preds = %if.end53
  br label %do.body56, !dbg !9509

do.body56:                                        ; preds = %if.then55
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true57, label %cond.false58, !dbg !9511

cond.true57:                                      ; preds = %do.body56
  %28 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9511, !tbaa !2683
  br label %cond.end59, !dbg !9511

cond.false58:                                     ; preds = %do.body56
  br label %cond.end59, !dbg !9511

cond.end59:                                       ; preds = %cond.false58, %cond.true57
  %cond60 = phi i32 [ %28, %cond.true57 ], [ -1, %cond.false58 ], !dbg !9511
  %29 = load ptr, ptr %r.addr, align 8, !dbg !9511, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 3986, i32 noundef %cond60, i32 noundef 3, i32 noundef 0, ptr noundef %29, ptr noundef @.str.269), !dbg !9511
  br label %do.cond61, !dbg !9514

do.cond61:                                        ; preds = %cond.end59
  br label %do.end62, !dbg !9514

do.end62:                                         ; preds = %do.cond61
  store i32 400, ptr %retval, align 4, !dbg !9515
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9515

if.end63:                                         ; preds = %if.end53
  %30 = load ptr, ptr %r.addr, align 8, !dbg !9516, !tbaa !2416
  %call64 = call ptr @dav_get_resource(ptr noundef %30, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !9517
  store ptr %call64, ptr %err, align 8, !dbg !9518, !tbaa !2416
  %31 = load ptr, ptr %err, align 8, !dbg !9519, !tbaa !2416
  %cmp65 = icmp ne ptr %31, null, !dbg !9521
  br i1 %cmp65, label %if.then66, label %if.end68, !dbg !9522

if.then66:                                        ; preds = %if.end63
  %32 = load ptr, ptr %r.addr, align 8, !dbg !9523, !tbaa !2416
  %33 = load ptr, ptr %err, align 8, !dbg !9524, !tbaa !2416
  %call67 = call i32 @dav_handle_err(ptr noundef %32, ptr noundef %33, ptr noundef null), !dbg !9525
  store i32 %call67, ptr %retval, align 4, !dbg !9526
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9526

if.end68:                                         ; preds = %if.end63
  %34 = load ptr, ptr %r.addr, align 8, !dbg !9527, !tbaa !2416
  %35 = load ptr, ptr %resource, align 8, !dbg !9529, !tbaa !2416
  %36 = load ptr, ptr %doc, align 8, !dbg !9530, !tbaa !2416
  %call69 = call i32 @dav_run_method_precondition(ptr noundef %34, ptr noundef %35, ptr noundef null, ptr noundef %36, ptr noundef %err), !dbg !9531
  %cmp70 = icmp ne i32 %call69, -1, !dbg !9532
  br i1 %cmp70, label %land.lhs.true71, label %if.end75, !dbg !9533

land.lhs.true71:                                  ; preds = %if.end68
  %37 = load ptr, ptr %err, align 8, !dbg !9534, !tbaa !2416
  %tobool72 = icmp ne ptr %37, null, !dbg !9534
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !9535

if.then73:                                        ; preds = %land.lhs.true71
  %38 = load ptr, ptr %r.addr, align 8, !dbg !9536, !tbaa !2416
  %39 = load ptr, ptr %err, align 8, !dbg !9538, !tbaa !2416
  %call74 = call i32 @dav_handle_err(ptr noundef %38, ptr noundef %39, ptr noundef null), !dbg !9539
  store i32 %call74, ptr %retval, align 4, !dbg !9540
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9540

if.end75:                                         ; preds = %land.lhs.true71, %if.end68
  %40 = load ptr, ptr %resource, align 8, !dbg !9541, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %40, i32 0, i32 1, !dbg !9543
  %41 = load i32, ptr %exists, align 4, !dbg !9543, !tbaa !4784
  %tobool76 = icmp ne i32 %41, 0, !dbg !9541
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !9544

if.then77:                                        ; preds = %if.end75
  store i32 404, ptr %retval, align 4, !dbg !9545
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9545

if.end78:                                         ; preds = %if.end75
  %42 = load ptr, ptr %resource, align 8, !dbg !9547, !tbaa !2416
  %type = getelementptr inbounds %struct.dav_resource, ptr %42, i32 0, i32 0, !dbg !9549
  %43 = load i32, ptr %type, align 8, !dbg !9549, !tbaa !4954
  %cmp79 = icmp ne i32 %43, 1, !dbg !9550
  br i1 %cmp79, label %if.then84, label %lor.lhs.false80, !dbg !9551

lor.lhs.false80:                                  ; preds = %if.end78
  %44 = load ptr, ptr %resource, align 8, !dbg !9552, !tbaa !2416
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %44, i32 0, i32 3, !dbg !9553
  %45 = load i32, ptr %versioned, align 4, !dbg !9553, !tbaa !6009
  %tobool81 = icmp ne i32 %45, 0, !dbg !9552
  br i1 %tobool81, label %lor.lhs.false82, label %if.then84, !dbg !9554

lor.lhs.false82:                                  ; preds = %lor.lhs.false80
  %46 = load ptr, ptr %resource, align 8, !dbg !9555, !tbaa !2416
  %working = getelementptr inbounds %struct.dav_resource, ptr %46, i32 0, i32 5, !dbg !9556
  %47 = load i32, ptr %working, align 4, !dbg !9556, !tbaa !6024
  %tobool83 = icmp ne i32 %47, 0, !dbg !9555
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !9557

if.then84:                                        ; preds = %lor.lhs.false82, %lor.lhs.false80, %if.end78
  %48 = load ptr, ptr %r.addr, align 8, !dbg !9558, !tbaa !2416
  %call85 = call i32 @dav_error_response(ptr noundef %48, i32 noundef 409, ptr noundef @.str.270), !dbg !9560
  store i32 %call85, ptr %retval, align 4, !dbg !9561
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9561

if.end86:                                         ; preds = %lor.lhs.false82
  %49 = load i32, ptr %is_label, align 4, !dbg !9562, !tbaa !2683
  %tobool87 = icmp ne i32 %49, 0, !dbg !9562
  br i1 %tobool87, label %if.end123, label %if.then88, !dbg !9564

if.then88:                                        ; preds = %if.end86
  call void @llvm.lifetime.start.p0(i64 64, ptr %tmp) #10, !dbg !9565
  %50 = load ptr, ptr %target, align 8, !dbg !9567, !tbaa !2416
  %51 = load ptr, ptr %r.addr, align 8, !dbg !9568, !tbaa !2416
  call void @dav_lookup_uri(ptr sret(%struct.dav_lookup_result) align 8 %tmp, ptr noundef %50, ptr noundef %51, i32 noundef 0), !dbg !9565
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %lookup, ptr align 8 %tmp, i64 64, i1 false), !dbg !9565, !tbaa.struct !7390
  call void @llvm.lifetime.end.p0(i64 64, ptr %tmp) #10, !dbg !9565
  %rnew = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !9569
  %52 = load ptr, ptr %rnew, align 8, !dbg !9569, !tbaa !7393
  %cmp89 = icmp eq ptr %52, null, !dbg !9571
  br i1 %cmp89, label %if.then90, label %if.end108, !dbg !9572

if.then90:                                        ; preds = %if.then88
  %err91 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !9573
  %status = getelementptr inbounds %struct.dav_error, ptr %err91, i32 0, i32 0, !dbg !9576
  %53 = load i32, ptr %status, align 8, !dbg !9576, !tbaa !7401
  %cmp92 = icmp eq i32 %53, 400, !dbg !9577
  br i1 %cmp92, label %if.then93, label %if.end102, !dbg !9578

if.then93:                                        ; preds = %if.then90
  br label %do.body94, !dbg !9579

do.body94:                                        ; preds = %if.then93
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true95, label %cond.false96, !dbg !9581

cond.true95:                                      ; preds = %do.body94
  %54 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9581, !tbaa !2683
  br label %cond.end97, !dbg !9581

cond.false96:                                     ; preds = %do.body94
  br label %cond.end97, !dbg !9581

cond.end97:                                       ; preds = %cond.false96, %cond.true95
  %cond98 = phi i32 [ %54, %cond.true95 ], [ -1, %cond.false96 ], !dbg !9581
  %55 = load ptr, ptr %r.addr, align 8, !dbg !9581, !tbaa !2416
  %err99 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !9581
  %desc = getelementptr inbounds %struct.dav_error, ptr %err99, i32 0, i32 2, !dbg !9581
  %56 = load ptr, ptr %desc, align 8, !dbg !9581, !tbaa !7409
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4025, i32 noundef %cond98, i32 noundef 3, i32 noundef 0, ptr noundef %55, ptr noundef @.str.271, ptr noundef %56), !dbg !9581
  br label %do.cond100, !dbg !9584

do.cond100:                                       ; preds = %cond.end97
  br label %do.end101, !dbg !9584

do.end101:                                        ; preds = %do.cond100
  store i32 400, ptr %retval, align 4, !dbg !9585
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9585

if.end102:                                        ; preds = %if.then90
  %57 = load ptr, ptr %r.addr, align 8, !dbg !9586, !tbaa !2416
  %err103 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !9587
  %status104 = getelementptr inbounds %struct.dav_error, ptr %err103, i32 0, i32 0, !dbg !9588
  %58 = load i32, ptr %status104, align 8, !dbg !9588, !tbaa !7401
  %err105 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !9589
  %desc106 = getelementptr inbounds %struct.dav_error, ptr %err105, i32 0, i32 2, !dbg !9590
  %59 = load ptr, ptr %desc106, align 8, !dbg !9590, !tbaa !7409
  %call107 = call i32 @dav_error_response(ptr noundef %57, i32 noundef %58, ptr noundef %59), !dbg !9591
  store i32 %call107, ptr %retval, align 4, !dbg !9592
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9592

if.end108:                                        ; preds = %if.then88
  %rnew109 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !9593
  %60 = load ptr, ptr %rnew109, align 8, !dbg !9593, !tbaa !7393
  %status110 = getelementptr inbounds %struct.request_rec, ptr %60, i32 0, i32 15, !dbg !9595
  %61 = load i32, ptr %status110, align 8, !dbg !9595, !tbaa !2690
  %cmp111 = icmp ne i32 %61, 200, !dbg !9596
  br i1 %cmp111, label %if.then112, label %if.end116, !dbg !9597

if.then112:                                       ; preds = %if.end108
  %62 = load ptr, ptr %r.addr, align 8, !dbg !9598, !tbaa !2416
  %rnew113 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !9600
  %63 = load ptr, ptr %rnew113, align 8, !dbg !9600, !tbaa !7393
  %status114 = getelementptr inbounds %struct.request_rec, ptr %63, i32 0, i32 15, !dbg !9601
  %64 = load i32, ptr %status114, align 8, !dbg !9601, !tbaa !2690
  %call115 = call i32 @dav_error_response(ptr noundef %62, i32 noundef %64, ptr noundef @.str.272), !dbg !9602
  store i32 %call115, ptr %retval, align 4, !dbg !9603
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9603

if.end116:                                        ; preds = %if.end108
  %rnew117 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !9604
  %65 = load ptr, ptr %rnew117, align 8, !dbg !9604, !tbaa !7393
  %call118 = call ptr @dav_get_resource(ptr noundef %65, i32 noundef 0, i32 noundef 0, ptr noundef %version), !dbg !9605
  store ptr %call118, ptr %err, align 8, !dbg !9606, !tbaa !2416
  %66 = load ptr, ptr %err, align 8, !dbg !9607, !tbaa !2416
  %cmp119 = icmp ne ptr %66, null, !dbg !9609
  br i1 %cmp119, label %if.then120, label %if.end122, !dbg !9610

if.then120:                                       ; preds = %if.end116
  %67 = load ptr, ptr %r.addr, align 8, !dbg !9611, !tbaa !2416
  %68 = load ptr, ptr %err, align 8, !dbg !9612, !tbaa !2416
  %call121 = call i32 @dav_handle_err(ptr noundef %67, ptr noundef %68, ptr noundef null), !dbg !9613
  store i32 %call121, ptr %retval, align 4, !dbg !9614
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9614

if.end122:                                        ; preds = %if.end116
  store ptr null, ptr %target, align 8, !dbg !9615, !tbaa !2416
  br label %if.end123, !dbg !9616

if.end123:                                        ; preds = %if.end122, %if.end86
  %69 = load ptr, ptr %vsn_hooks, align 8, !dbg !9617, !tbaa !2416
  %update124 = getelementptr inbounds %struct.dav_hooks_vsn, ptr %69, i32 0, i32 11, !dbg !9618
  %70 = load ptr, ptr %update124, align 8, !dbg !9618, !tbaa !9415
  %71 = load ptr, ptr %resource, align 8, !dbg !9619, !tbaa !2416
  %72 = load ptr, ptr %version, align 8, !dbg !9620, !tbaa !2416
  %73 = load ptr, ptr %target, align 8, !dbg !9621, !tbaa !2416
  %74 = load i32, ptr %depth, align 4, !dbg !9622, !tbaa !2683
  %call125 = call ptr %70(ptr noundef %71, ptr noundef %72, ptr noundef %73, i32 noundef %74, ptr noundef %multi_response), !dbg !9623
  store ptr %call125, ptr %err, align 8, !dbg !9624, !tbaa !2416
  %75 = load ptr, ptr %err, align 8, !dbg !9625, !tbaa !2416
  %cmp126 = icmp ne ptr %75, null, !dbg !9627
  br i1 %cmp126, label %if.then127, label %if.end136, !dbg !9628

if.then127:                                       ; preds = %if.end123
  %76 = load ptr, ptr %r.addr, align 8, !dbg !9629, !tbaa !2416
  %pool128 = getelementptr inbounds %struct.request_rec, ptr %76, i32 0, i32 0, !dbg !9631
  %77 = load ptr, ptr %pool128, align 8, !dbg !9631, !tbaa !2792
  %78 = load ptr, ptr %err, align 8, !dbg !9632, !tbaa !2416
  %status129 = getelementptr inbounds %struct.dav_error, ptr %78, i32 0, i32 0, !dbg !9633
  %79 = load i32, ptr %status129, align 8, !dbg !9633, !tbaa !2871
  %80 = load ptr, ptr %r.addr, align 8, !dbg !9634, !tbaa !2416
  %pool130 = getelementptr inbounds %struct.request_rec, ptr %80, i32 0, i32 0, !dbg !9635
  %81 = load ptr, ptr %pool130, align 8, !dbg !9635, !tbaa !2792
  %82 = load ptr, ptr %r.addr, align 8, !dbg !9636, !tbaa !2416
  %pool131 = getelementptr inbounds %struct.request_rec, ptr %82, i32 0, i32 0, !dbg !9636
  %83 = load ptr, ptr %pool131, align 8, !dbg !9636, !tbaa !2792
  %84 = load ptr, ptr %r.addr, align 8, !dbg !9636, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %84, i32 0, i32 47, !dbg !9636
  %85 = load ptr, ptr %uri, align 8, !dbg !9636, !tbaa !3183
  %call132 = call ptr @ap_escape_html2(ptr noundef %83, ptr noundef %85, i32 noundef 0), !dbg !9636
  %call133 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %81, ptr noundef @.str.273, ptr noundef %call132), !dbg !9637
  %86 = load ptr, ptr %err, align 8, !dbg !9638, !tbaa !2416
  %call134 = call ptr @dav_push_error(ptr noundef %77, i32 noundef %79, i32 noundef 0, ptr noundef %call133, ptr noundef %86), !dbg !9639
  store ptr %call134, ptr %err, align 8, !dbg !9640, !tbaa !2416
  %87 = load ptr, ptr %r.addr, align 8, !dbg !9641, !tbaa !2416
  %88 = load ptr, ptr %err, align 8, !dbg !9642, !tbaa !2416
  %89 = load ptr, ptr %multi_response, align 8, !dbg !9643, !tbaa !2416
  %call135 = call i32 @dav_handle_err(ptr noundef %87, ptr noundef %88, ptr noundef %89), !dbg !9644
  store i32 %call135, ptr %retval, align 4, !dbg !9645
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9645

if.end136:                                        ; preds = %if.end123
  %90 = load ptr, ptr %r.addr, align 8, !dbg !9646, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %90, i32 0, i32 35, !dbg !9647
  %91 = load ptr, ptr %headers_out, align 8, !dbg !9647, !tbaa !5817
  call void @apr_table_setn(ptr noundef %91, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !9648
  %92 = load ptr, ptr %r.addr, align 8, !dbg !9649, !tbaa !2416
  call void @ap_set_content_length(ptr noundef %92, i64 noundef 0), !dbg !9650
  store i32 -2, ptr %retval, align 4, !dbg !9651
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9651

cleanup:                                          ; preds = %if.end136, %if.then127, %if.then120, %if.then112, %if.end102, %do.end101, %if.then84, %if.then77, %if.then73, %if.then66, %do.end62, %do.end52, %do.end40, %do.end31, %do.end, %if.then8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 64, ptr %lookup) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_response) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %target) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsize) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 4, ptr %depth) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_label) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %version) #10, !dbg !9652
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !9652
  %93 = load i32, ptr %retval, align 4, !dbg !9652
  ret i32 %93, !dbg !9652
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_label(ptr noundef %r) #0 !dbg !9653 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %doc = alloca ptr, align 8
  %child = alloca ptr, align 8
  %depth = alloca i32, align 4
  %result = alloca i32, align 4
  %tsize = alloca i64, align 8
  %err = alloca ptr, align 8
  %ctx = alloca %struct.dav_label_walker_ctx, align 8
  %multi_status = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !9655, metadata !DIExpression()), !dbg !9674
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !9675
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !9656, metadata !DIExpression()), !dbg !9676
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9677
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !9657, metadata !DIExpression()), !dbg !9678
  %0 = load ptr, ptr %r.addr, align 8, !dbg !9679, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !9679
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !9678, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !9680
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !9658, metadata !DIExpression()), !dbg !9681
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !9682
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !9659, metadata !DIExpression()), !dbg !9683
  call void @llvm.lifetime.start.p0(i64 4, ptr %depth) #10, !dbg !9684
  tail call void @llvm.dbg.declare(metadata ptr %depth, metadata !9660, metadata !DIExpression()), !dbg !9685
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !9686
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9661, metadata !DIExpression()), !dbg !9687
  call void @llvm.lifetime.start.p0(i64 8, ptr %tsize) #10, !dbg !9688
  tail call void @llvm.dbg.declare(metadata ptr %tsize, metadata !9662, metadata !DIExpression()), !dbg !9689
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !9690
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !9663, metadata !DIExpression()), !dbg !9691
  call void @llvm.lifetime.start.p0(i64 80, ptr %ctx) #10, !dbg !9692
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !9664, metadata !DIExpression()), !dbg !9693
  call void @llvm.memset.p0.i64(ptr align 8 %ctx, i8 0, i64 80, i1 false), !dbg !9693
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_status) #10, !dbg !9694
  tail call void @llvm.dbg.declare(metadata ptr %multi_status, metadata !9673, metadata !DIExpression()), !dbg !9695
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !9696, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !9698
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9699

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %vsn_hooks, align 8, !dbg !9700, !tbaa !2416
  %add_label = getelementptr inbounds %struct.dav_hooks_vsn, ptr %2, i32 0, i32 12, !dbg !9701
  %3 = load ptr, ptr %add_label, align 8, !dbg !9701, !tbaa !6035
  %cmp1 = icmp eq ptr %3, null, !dbg !9702
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9703

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !9704
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9704

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %r.addr, align 8, !dbg !9705, !tbaa !2416
  %call2 = call i32 @ap_xml_parse_input(ptr noundef %4, ptr noundef %doc), !dbg !9707
  store i32 %call2, ptr %result, align 4, !dbg !9708, !tbaa !2683
  %cmp3 = icmp ne i32 %call2, 0, !dbg !9709
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9710

if.then4:                                         ; preds = %if.end
  %5 = load i32, ptr %result, align 4, !dbg !9711, !tbaa !2683
  store i32 %5, ptr %retval, align 4, !dbg !9713
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9713

if.end5:                                          ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !9714, !tbaa !2416
  %call6 = call ptr @dav_get_resource(ptr noundef %6, i32 noundef 1, i32 noundef 0, ptr noundef %resource), !dbg !9715
  store ptr %call6, ptr %err, align 8, !dbg !9716, !tbaa !2416
  %7 = load ptr, ptr %err, align 8, !dbg !9717, !tbaa !2416
  %cmp7 = icmp ne ptr %7, null, !dbg !9719
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !9720

if.then8:                                         ; preds = %if.end5
  %8 = load ptr, ptr %r.addr, align 8, !dbg !9721, !tbaa !2416
  %9 = load ptr, ptr %err, align 8, !dbg !9722, !tbaa !2416
  %call9 = call i32 @dav_handle_err(ptr noundef %8, ptr noundef %9, ptr noundef null), !dbg !9723
  store i32 %call9, ptr %retval, align 4, !dbg !9724
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9724

if.end10:                                         ; preds = %if.end5
  %10 = load ptr, ptr %r.addr, align 8, !dbg !9725, !tbaa !2416
  %11 = load ptr, ptr %resource, align 8, !dbg !9727, !tbaa !2416
  %12 = load ptr, ptr %doc, align 8, !dbg !9728, !tbaa !2416
  %call11 = call i32 @dav_run_method_precondition(ptr noundef %10, ptr noundef %11, ptr noundef null, ptr noundef %12, ptr noundef %err), !dbg !9729
  %cmp12 = icmp ne i32 %call11, -1, !dbg !9730
  br i1 %cmp12, label %land.lhs.true, label %if.end15, !dbg !9731

land.lhs.true:                                    ; preds = %if.end10
  %13 = load ptr, ptr %err, align 8, !dbg !9732, !tbaa !2416
  %tobool = icmp ne ptr %13, null, !dbg !9732
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !9733

if.then13:                                        ; preds = %land.lhs.true
  %14 = load ptr, ptr %r.addr, align 8, !dbg !9734, !tbaa !2416
  %15 = load ptr, ptr %err, align 8, !dbg !9736, !tbaa !2416
  %call14 = call i32 @dav_handle_err(ptr noundef %14, ptr noundef %15, ptr noundef null), !dbg !9737
  store i32 %call14, ptr %retval, align 4, !dbg !9738
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9738

if.end15:                                         ; preds = %land.lhs.true, %if.end10
  %16 = load ptr, ptr %resource, align 8, !dbg !9739, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %16, i32 0, i32 1, !dbg !9741
  %17 = load i32, ptr %exists, align 4, !dbg !9741, !tbaa !4784
  %tobool16 = icmp ne i32 %17, 0, !dbg !9739
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !9742

if.then17:                                        ; preds = %if.end15
  store i32 404, ptr %retval, align 4, !dbg !9743
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9743

if.end18:                                         ; preds = %if.end15
  %18 = load ptr, ptr %r.addr, align 8, !dbg !9745, !tbaa !2416
  %call19 = call i32 @dav_get_depth(ptr noundef %18, i32 noundef 0), !dbg !9747
  store i32 %call19, ptr %depth, align 4, !dbg !9748, !tbaa !2683
  %cmp20 = icmp slt i32 %call19, 0, !dbg !9749
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !9750

if.then21:                                        ; preds = %if.end18
  store i32 400, ptr %retval, align 4, !dbg !9751
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9751

if.end22:                                         ; preds = %if.end18
  %19 = load ptr, ptr %doc, align 8, !dbg !9753, !tbaa !2416
  %cmp23 = icmp eq ptr %19, null, !dbg !9755
  br i1 %cmp23, label %if.then27, label %lor.lhs.false24, !dbg !9756

lor.lhs.false24:                                  ; preds = %if.end22
  %20 = load ptr, ptr %doc, align 8, !dbg !9757, !tbaa !2416
  %call25 = call i32 @dav_validate_root(ptr noundef %20, ptr noundef @.str.23), !dbg !9758
  %tobool26 = icmp ne i32 %call25, 0, !dbg !9758
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !9759

if.then27:                                        ; preds = %lor.lhs.false24, %if.end22
  br label %do.body, !dbg !9760

do.body:                                          ; preds = %if.then27
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !9762

cond.true:                                        ; preds = %do.body
  %21 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9762, !tbaa !2683
  br label %cond.end, !dbg !9762

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !9762

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ -1, %cond.false ], !dbg !9762
  %22 = load ptr, ptr %r.addr, align 8, !dbg !9762, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4188, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %22, ptr noundef @.str.274), !dbg !9762
  br label %do.cond, !dbg !9765

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !9765

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !9766
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9766

if.end28:                                         ; preds = %lor.lhs.false24
  %23 = load ptr, ptr %doc, align 8, !dbg !9767, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %23, i32 0, i32 0, !dbg !9769
  %24 = load ptr, ptr %root, align 8, !dbg !9769, !tbaa !6252
  %call29 = call ptr @dav_find_child(ptr noundef %24, ptr noundef @.str.275), !dbg !9770
  store ptr %call29, ptr %child, align 8, !dbg !9771, !tbaa !2416
  %cmp30 = icmp ne ptr %call29, null, !dbg !9772
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !9773

if.then31:                                        ; preds = %if.end28
  %label_op = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 3, !dbg !9774
  store i32 1, ptr %label_op, align 8, !dbg !9776, !tbaa !9777
  br label %if.end53, !dbg !9779

if.else:                                          ; preds = %if.end28
  %25 = load ptr, ptr %doc, align 8, !dbg !9780, !tbaa !2416
  %root32 = getelementptr inbounds %struct.apr_xml_doc, ptr %25, i32 0, i32 0, !dbg !9782
  %26 = load ptr, ptr %root32, align 8, !dbg !9782, !tbaa !6252
  %call33 = call ptr @dav_find_child(ptr noundef %26, ptr noundef @.str.172), !dbg !9783
  store ptr %call33, ptr %child, align 8, !dbg !9784, !tbaa !2416
  %cmp34 = icmp ne ptr %call33, null, !dbg !9785
  br i1 %cmp34, label %if.then35, label %if.else37, !dbg !9786

if.then35:                                        ; preds = %if.else
  %label_op36 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 3, !dbg !9787
  store i32 2, ptr %label_op36, align 8, !dbg !9789, !tbaa !9777
  br label %if.end52, !dbg !9790

if.else37:                                        ; preds = %if.else
  %27 = load ptr, ptr %doc, align 8, !dbg !9791, !tbaa !2416
  %root38 = getelementptr inbounds %struct.apr_xml_doc, ptr %27, i32 0, i32 0, !dbg !9793
  %28 = load ptr, ptr %root38, align 8, !dbg !9793, !tbaa !6252
  %call39 = call ptr @dav_find_child(ptr noundef %28, ptr noundef @.str.171), !dbg !9794
  store ptr %call39, ptr %child, align 8, !dbg !9795, !tbaa !2416
  %cmp40 = icmp ne ptr %call39, null, !dbg !9796
  br i1 %cmp40, label %if.then41, label %if.else43, !dbg !9797

if.then41:                                        ; preds = %if.else37
  %label_op42 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 3, !dbg !9798
  store i32 3, ptr %label_op42, align 8, !dbg !9800, !tbaa !9777
  br label %if.end51, !dbg !9801

if.else43:                                        ; preds = %if.else37
  br label %do.body44, !dbg !9802

do.body44:                                        ; preds = %if.else43
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true45, label %cond.false46, !dbg !9804

cond.true45:                                      ; preds = %do.body44
  %29 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9804, !tbaa !2683
  br label %cond.end47, !dbg !9804

cond.false46:                                     ; preds = %do.body44
  br label %cond.end47, !dbg !9804

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi i32 [ %29, %cond.true45 ], [ -1, %cond.false46 ], !dbg !9804
  %30 = load ptr, ptr %r.addr, align 8, !dbg !9804, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4205, i32 noundef %cond48, i32 noundef 3, i32 noundef 0, ptr noundef %30, ptr noundef @.str.276), !dbg !9804
  br label %do.cond49, !dbg !9807

do.cond49:                                        ; preds = %cond.end47
  br label %do.end50, !dbg !9807

do.end50:                                         ; preds = %do.cond49
  store i32 400, ptr %retval, align 4, !dbg !9808
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9808

if.end51:                                         ; preds = %if.then41
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then35
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then31
  %31 = load ptr, ptr %child, align 8, !dbg !9809, !tbaa !2416
  %call54 = call ptr @dav_find_child(ptr noundef %31, ptr noundef @.str.265), !dbg !9811
  store ptr %call54, ptr %child, align 8, !dbg !9812, !tbaa !2416
  %cmp55 = icmp eq ptr %call54, null, !dbg !9813
  br i1 %cmp55, label %if.then56, label %if.end64, !dbg !9814

if.then56:                                        ; preds = %if.end53
  br label %do.body57, !dbg !9815

do.body57:                                        ; preds = %if.then56
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true58, label %cond.false59, !dbg !9817

cond.true58:                                      ; preds = %do.body57
  %32 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9817, !tbaa !2683
  br label %cond.end60, !dbg !9817

cond.false59:                                     ; preds = %do.body57
  br label %cond.end60, !dbg !9817

cond.end60:                                       ; preds = %cond.false59, %cond.true58
  %cond61 = phi i32 [ %32, %cond.true58 ], [ -1, %cond.false59 ], !dbg !9817
  %33 = load ptr, ptr %r.addr, align 8, !dbg !9817, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4213, i32 noundef %cond61, i32 noundef 3, i32 noundef 0, ptr noundef %33, ptr noundef @.str.277), !dbg !9817
  br label %do.cond62, !dbg !9820

do.cond62:                                        ; preds = %cond.end60
  br label %do.end63, !dbg !9820

do.end63:                                         ; preds = %do.cond62
  store i32 400, ptr %retval, align 4, !dbg !9821
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9821

if.end64:                                         ; preds = %if.end53
  %34 = load ptr, ptr %r.addr, align 8, !dbg !9822, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %34, i32 0, i32 0, !dbg !9823
  %35 = load ptr, ptr %pool, align 8, !dbg !9823, !tbaa !2792
  %36 = load ptr, ptr %child, align 8, !dbg !9824, !tbaa !2416
  %label = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 2, !dbg !9825
  call void @apr_xml_to_text(ptr noundef %35, ptr noundef %36, i32 noundef 1, ptr noundef null, ptr noundef null, ptr noundef %label, ptr noundef %tsize), !dbg !9826
  %37 = load i64, ptr %tsize, align 8, !dbg !9827, !tbaa !3569
  %cmp65 = icmp eq i64 %37, 0, !dbg !9829
  br i1 %cmp65, label %if.then66, label %if.end74, !dbg !9830

if.then66:                                        ; preds = %if.end64
  br label %do.body67, !dbg !9831

do.body67:                                        ; preds = %if.then66
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true68, label %cond.false69, !dbg !9833

cond.true68:                                      ; preds = %do.body67
  %38 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9833, !tbaa !2683
  br label %cond.end70, !dbg !9833

cond.false69:                                     ; preds = %do.body67
  br label %cond.end70, !dbg !9833

cond.end70:                                       ; preds = %cond.false69, %cond.true68
  %cond71 = phi i32 [ %38, %cond.true68 ], [ -1, %cond.false69 ], !dbg !9833
  %39 = load ptr, ptr %r.addr, align 8, !dbg !9833, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4222, i32 noundef %cond71, i32 noundef 3, i32 noundef 0, ptr noundef %39, ptr noundef @.str.278), !dbg !9833
  br label %do.cond72, !dbg !9836

do.cond72:                                        ; preds = %cond.end70
  br label %do.end73, !dbg !9836

do.end73:                                         ; preds = %do.cond72
  store i32 400, ptr %retval, align 4, !dbg !9837
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9837

if.end74:                                         ; preds = %if.end64
  %w = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !9838
  %walk_type = getelementptr inbounds %struct.dav_walk_params, ptr %w, i32 0, i32 0, !dbg !9839
  store i32 2, ptr %walk_type, align 8, !dbg !9840, !tbaa !9841
  %w75 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !9842
  %func = getelementptr inbounds %struct.dav_walk_params, ptr %w75, i32 0, i32 1, !dbg !9843
  store ptr @dav_label_walker, ptr %func, align 8, !dbg !9844, !tbaa !9845
  %w76 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !9846
  %walk_ctx = getelementptr inbounds %struct.dav_walk_params, ptr %w76, i32 0, i32 2, !dbg !9847
  store ptr %ctx, ptr %walk_ctx, align 8, !dbg !9848, !tbaa !9849
  %40 = load ptr, ptr %r.addr, align 8, !dbg !9850, !tbaa !2416
  %pool77 = getelementptr inbounds %struct.request_rec, ptr %40, i32 0, i32 0, !dbg !9851
  %41 = load ptr, ptr %pool77, align 8, !dbg !9851, !tbaa !2792
  %w78 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !9852
  %pool79 = getelementptr inbounds %struct.dav_walk_params, ptr %w78, i32 0, i32 3, !dbg !9853
  store ptr %41, ptr %pool79, align 8, !dbg !9854, !tbaa !9855
  %42 = load ptr, ptr %resource, align 8, !dbg !9856, !tbaa !2416
  %w80 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !9857
  %root81 = getelementptr inbounds %struct.dav_walk_params, ptr %w80, i32 0, i32 4, !dbg !9858
  store ptr %42, ptr %root81, align 8, !dbg !9859, !tbaa !9860
  %43 = load ptr, ptr %r.addr, align 8, !dbg !9861, !tbaa !2416
  %r82 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 1, !dbg !9862
  store ptr %43, ptr %r82, align 8, !dbg !9863, !tbaa !9864
  %44 = load ptr, ptr %vsn_hooks, align 8, !dbg !9865, !tbaa !2416
  %vsn_hooks83 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 4, !dbg !9866
  store ptr %44, ptr %vsn_hooks83, align 8, !dbg !9867, !tbaa !9868
  %45 = load ptr, ptr %resource, align 8, !dbg !9869, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %45, i32 0, i32 8, !dbg !9870
  %46 = load ptr, ptr %hooks, align 8, !dbg !9870, !tbaa !4791
  %walk = getelementptr inbounds %struct.dav_hooks_repository, ptr %46, i32 0, i32 15, !dbg !9871
  %47 = load ptr, ptr %walk, align 8, !dbg !9871, !tbaa !6673
  %w84 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %ctx, i32 0, i32 0, !dbg !9872
  %48 = load i32, ptr %depth, align 4, !dbg !9873, !tbaa !2683
  %call85 = call ptr %47(ptr noundef %w84, i32 noundef %48, ptr noundef %multi_status), !dbg !9874
  store ptr %call85, ptr %err, align 8, !dbg !9875, !tbaa !2416
  %49 = load ptr, ptr %err, align 8, !dbg !9876, !tbaa !2416
  %cmp86 = icmp ne ptr %49, null, !dbg !9878
  br i1 %cmp86, label %if.then87, label %if.end91, !dbg !9879

if.then87:                                        ; preds = %if.end74
  %50 = load ptr, ptr %r.addr, align 8, !dbg !9880, !tbaa !2416
  %pool88 = getelementptr inbounds %struct.request_rec, ptr %50, i32 0, i32 0, !dbg !9882
  %51 = load ptr, ptr %pool88, align 8, !dbg !9882, !tbaa !2792
  %52 = load ptr, ptr %err, align 8, !dbg !9883, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %52, i32 0, i32 0, !dbg !9884
  %53 = load i32, ptr %status, align 8, !dbg !9884, !tbaa !2871
  %54 = load ptr, ptr %err, align 8, !dbg !9885, !tbaa !2416
  %call89 = call ptr @dav_push_error(ptr noundef %51, i32 noundef %53, i32 noundef 0, ptr noundef @.str.279, ptr noundef %54), !dbg !9886
  store ptr %call89, ptr %err, align 8, !dbg !9887, !tbaa !2416
  %55 = load ptr, ptr %r.addr, align 8, !dbg !9888, !tbaa !2416
  %56 = load ptr, ptr %err, align 8, !dbg !9889, !tbaa !2416
  %57 = load ptr, ptr %multi_status, align 8, !dbg !9890, !tbaa !2416
  %call90 = call i32 @dav_handle_err(ptr noundef %55, ptr noundef %56, ptr noundef %57), !dbg !9891
  store i32 %call90, ptr %retval, align 4, !dbg !9892
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9892

if.end91:                                         ; preds = %if.end74
  %58 = load ptr, ptr %multi_status, align 8, !dbg !9893, !tbaa !2416
  %cmp92 = icmp ne ptr %58, null, !dbg !9895
  br i1 %cmp92, label %if.then93, label %if.end104, !dbg !9896

if.then93:                                        ; preds = %if.end91
  %59 = load i32, ptr %depth, align 4, !dbg !9897, !tbaa !2683
  %cmp94 = icmp eq i32 %59, 0, !dbg !9900
  br i1 %cmp94, label %if.then95, label %if.else99, !dbg !9901

if.then95:                                        ; preds = %if.then93
  %60 = load ptr, ptr %r.addr, align 8, !dbg !9902, !tbaa !2416
  %pool96 = getelementptr inbounds %struct.request_rec, ptr %60, i32 0, i32 0, !dbg !9904
  %61 = load ptr, ptr %pool96, align 8, !dbg !9904, !tbaa !2792
  %62 = load ptr, ptr %multi_status, align 8, !dbg !9905, !tbaa !2416
  %status97 = getelementptr inbounds %struct.dav_response, ptr %62, i32 0, i32 3, !dbg !9906
  %63 = load i32, ptr %status97, align 8, !dbg !9906, !tbaa !2587
  %64 = load ptr, ptr %multi_status, align 8, !dbg !9907, !tbaa !2416
  %desc = getelementptr inbounds %struct.dav_response, ptr %64, i32 0, i32 1, !dbg !9908
  %65 = load ptr, ptr %desc, align 8, !dbg !9908, !tbaa !2613
  %call98 = call ptr @dav_new_error(ptr noundef %61, i32 noundef %63, i32 noundef 0, i32 noundef 0, ptr noundef %65), !dbg !9909
  store ptr %call98, ptr %err, align 8, !dbg !9910, !tbaa !2416
  store ptr null, ptr %multi_status, align 8, !dbg !9911, !tbaa !2416
  br label %if.end102, !dbg !9912

if.else99:                                        ; preds = %if.then93
  %66 = load ptr, ptr %r.addr, align 8, !dbg !9913, !tbaa !2416
  %pool100 = getelementptr inbounds %struct.request_rec, ptr %66, i32 0, i32 0, !dbg !9915
  %67 = load ptr, ptr %pool100, align 8, !dbg !9915, !tbaa !2792
  %call101 = call ptr @dav_new_error(ptr noundef %67, i32 noundef 207, i32 noundef 0, i32 noundef 0, ptr noundef @.str.280), !dbg !9916
  store ptr %call101, ptr %err, align 8, !dbg !9917, !tbaa !2416
  br label %if.end102

if.end102:                                        ; preds = %if.else99, %if.then95
  %68 = load ptr, ptr %r.addr, align 8, !dbg !9918, !tbaa !2416
  %69 = load ptr, ptr %err, align 8, !dbg !9919, !tbaa !2416
  %70 = load ptr, ptr %multi_status, align 8, !dbg !9920, !tbaa !2416
  %call103 = call i32 @dav_handle_err(ptr noundef %68, ptr noundef %69, ptr noundef %70), !dbg !9921
  store i32 %call103, ptr %retval, align 4, !dbg !9922
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9922

if.end104:                                        ; preds = %if.end91
  %71 = load ptr, ptr %r.addr, align 8, !dbg !9923, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %71, i32 0, i32 35, !dbg !9924
  %72 = load ptr, ptr %headers_out, align 8, !dbg !9924, !tbaa !5817
  call void @apr_table_setn(ptr noundef %72, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !9925
  %73 = load ptr, ptr %r.addr, align 8, !dbg !9926, !tbaa !2416
  call void @ap_set_content_length(ptr noundef %73, i64 noundef 0), !dbg !9927
  store i32 -2, ptr %retval, align 4, !dbg !9928
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9928

cleanup:                                          ; preds = %if.end104, %if.end102, %if.then87, %do.end73, %do.end63, %do.end50, %do.end, %if.then21, %if.then17, %if.then13, %if.then8, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_status) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 80, ptr %ctx) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 8, ptr %tsize) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 4, ptr %depth) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9929
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !9929
  %74 = load i32, ptr %retval, align 4, !dbg !9929
  ret i32 %74, !dbg !9929
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_report(ptr noundef %r) #0 !dbg !9930 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %doc = alloca ptr, align 8
  %err = alloca ptr, align 8
  %result = alloca i32, align 4
  %label_allowed = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !9932, metadata !DIExpression()), !dbg !9939
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !9940
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !9933, metadata !DIExpression()), !dbg !9941
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !9942
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !9934, metadata !DIExpression()), !dbg !9943
  %0 = load ptr, ptr %r.addr, align 8, !dbg !9944, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !9944
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !9943, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !9945
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !9935, metadata !DIExpression()), !dbg !9946
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !9947
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !9936, metadata !DIExpression()), !dbg !9948
  store ptr null, ptr %err, align 8, !dbg !9948, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !9949
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !9937, metadata !DIExpression()), !dbg !9950
  call void @llvm.lifetime.start.p0(i64 4, ptr %label_allowed) #10, !dbg !9951
  tail call void @llvm.dbg.declare(metadata ptr %label_allowed, metadata !9938, metadata !DIExpression()), !dbg !9952
  %1 = load ptr, ptr %r.addr, align 8, !dbg !9953, !tbaa !2416
  %call1 = call i32 @ap_xml_parse_input(ptr noundef %1, ptr noundef %doc), !dbg !9955
  store i32 %call1, ptr %result, align 4, !dbg !9956, !tbaa !2683
  %cmp = icmp ne i32 %call1, 0, !dbg !9957
  br i1 %cmp, label %if.then, label %if.end, !dbg !9958

if.then:                                          ; preds = %entry
  %2 = load i32, ptr %result, align 4, !dbg !9959, !tbaa !2683
  store i32 %2, ptr %retval, align 4, !dbg !9961
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9961

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %doc, align 8, !dbg !9962, !tbaa !2416
  %cmp2 = icmp eq ptr %3, null, !dbg !9964
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9965

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !9966

do.body:                                          ; preds = %if.then3
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !9968

cond.true:                                        ; preds = %do.body
  %4 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !9968, !tbaa !2683
  br label %cond.end, !dbg !9968

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !9968

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !9968
  %5 = load ptr, ptr %r.addr, align 8, !dbg !9968, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4330, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %5, ptr noundef @.str.283), !dbg !9968
  br label %do.cond, !dbg !9971

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !9971

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !9972
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9972

if.end4:                                          ; preds = %if.end
  %6 = load ptr, ptr %vsn_hooks, align 8, !dbg !9973, !tbaa !2416
  %tobool = icmp ne ptr %6, null, !dbg !9973
  br i1 %tobool, label %cond.true5, label %cond.false7, !dbg !9973

cond.true5:                                       ; preds = %if.end4
  %7 = load ptr, ptr %vsn_hooks, align 8, !dbg !9974, !tbaa !2416
  %report_label_header_allowed = getelementptr inbounds %struct.dav_hooks_vsn, ptr %7, i32 0, i32 9, !dbg !9975
  %8 = load ptr, ptr %report_label_header_allowed, align 8, !dbg !9975, !tbaa !9976
  %9 = load ptr, ptr %doc, align 8, !dbg !9977, !tbaa !2416
  %call6 = call i32 %8(ptr noundef %9), !dbg !9978
  br label %cond.end8, !dbg !9973

cond.false7:                                      ; preds = %if.end4
  br label %cond.end8, !dbg !9973

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i32 [ %call6, %cond.true5 ], [ 0, %cond.false7 ], !dbg !9973
  store i32 %cond9, ptr %label_allowed, align 4, !dbg !9979, !tbaa !2683
  %10 = load ptr, ptr %r.addr, align 8, !dbg !9980, !tbaa !2416
  %11 = load i32, ptr %label_allowed, align 4, !dbg !9981, !tbaa !2683
  %call10 = call ptr @dav_get_resource(ptr noundef %10, i32 noundef %11, i32 noundef 0, ptr noundef %resource), !dbg !9982
  store ptr %call10, ptr %err, align 8, !dbg !9983, !tbaa !2416
  %12 = load ptr, ptr %err, align 8, !dbg !9984, !tbaa !2416
  %cmp11 = icmp ne ptr %12, null, !dbg !9986
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !9987

if.then12:                                        ; preds = %cond.end8
  %13 = load ptr, ptr %r.addr, align 8, !dbg !9988, !tbaa !2416
  %14 = load ptr, ptr %err, align 8, !dbg !9990, !tbaa !2416
  %call13 = call i32 @dav_handle_err(ptr noundef %13, ptr noundef %14, ptr noundef null), !dbg !9991
  store i32 %call13, ptr %retval, align 4, !dbg !9992
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9992

if.end14:                                         ; preds = %cond.end8
  %15 = load ptr, ptr %r.addr, align 8, !dbg !9993, !tbaa !2416
  %16 = load ptr, ptr %resource, align 8, !dbg !9995, !tbaa !2416
  %17 = load ptr, ptr %doc, align 8, !dbg !9996, !tbaa !2416
  %call15 = call i32 @dav_run_method_precondition(ptr noundef %15, ptr noundef %16, ptr noundef null, ptr noundef %17, ptr noundef %err), !dbg !9997
  %cmp16 = icmp ne i32 %call15, -1, !dbg !9998
  br i1 %cmp16, label %land.lhs.true, label %if.end20, !dbg !9999

land.lhs.true:                                    ; preds = %if.end14
  %18 = load ptr, ptr %err, align 8, !dbg !10000, !tbaa !2416
  %tobool17 = icmp ne ptr %18, null, !dbg !10000
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !10001

if.then18:                                        ; preds = %land.lhs.true
  %19 = load ptr, ptr %r.addr, align 8, !dbg !10002, !tbaa !2416
  %20 = load ptr, ptr %err, align 8, !dbg !10004, !tbaa !2416
  %call19 = call i32 @dav_handle_err(ptr noundef %19, ptr noundef %20, ptr noundef null), !dbg !10005
  store i32 %call19, ptr %retval, align 4, !dbg !10006
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10006

if.end20:                                         ; preds = %land.lhs.true, %if.end14
  %21 = load ptr, ptr %resource, align 8, !dbg !10007, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %21, i32 0, i32 1, !dbg !10009
  %22 = load i32, ptr %exists, align 4, !dbg !10009, !tbaa !4784
  %tobool21 = icmp ne i32 %22, 0, !dbg !10007
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !10010

if.then22:                                        ; preds = %if.end20
  store i32 404, ptr %retval, align 4, !dbg !10011
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10011

if.end23:                                         ; preds = %if.end20
  %23 = load ptr, ptr %r.addr, align 8, !dbg !10013, !tbaa !2416
  %status = getelementptr inbounds %struct.request_rec, ptr %23, i32 0, i32 15, !dbg !10014
  store i32 200, ptr %status, align 8, !dbg !10015, !tbaa !2690
  %24 = load ptr, ptr %r.addr, align 8, !dbg !10016, !tbaa !2416
  call void @ap_set_content_type(ptr noundef %24, ptr noundef @.str.9), !dbg !10017
  store ptr null, ptr %err, align 8, !dbg !10018, !tbaa !2416
  %25 = load ptr, ptr %r.addr, align 8, !dbg !10019, !tbaa !2416
  %26 = load ptr, ptr %resource, align 8, !dbg !10020, !tbaa !2416
  %27 = load ptr, ptr %doc, align 8, !dbg !10021, !tbaa !2416
  %28 = load ptr, ptr %r.addr, align 8, !dbg !10022, !tbaa !2416
  %output_filters = getelementptr inbounds %struct.request_rec, ptr %28, i32 0, i32 59, !dbg !10023
  %29 = load ptr, ptr %output_filters, align 8, !dbg !10023, !tbaa !2538
  %call24 = call i32 @dav_run_deliver_report(ptr noundef %25, ptr noundef %26, ptr noundef %27, ptr noundef %29, ptr noundef %err), !dbg !10024
  store i32 %call24, ptr %result, align 4, !dbg !10025, !tbaa !2683
  %30 = load ptr, ptr %err, align 8, !dbg !10026, !tbaa !2416
  %cmp25 = icmp ne ptr %30, null, !dbg !10028
  br i1 %cmp25, label %if.then26, label %if.end33, !dbg !10029

if.then26:                                        ; preds = %if.end23
  %31 = load ptr, ptr %r.addr, align 8, !dbg !10030, !tbaa !2416
  %sent_bodyct = getelementptr inbounds %struct.request_rec, ptr %31, i32 0, i32 21, !dbg !10033
  %32 = load i64, ptr %sent_bodyct, align 8, !dbg !10033, !tbaa !10034
  %tobool27 = icmp ne i64 %32, 0, !dbg !10030
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !10035

if.then28:                                        ; preds = %if.then26
  %33 = load ptr, ptr %r.addr, align 8, !dbg !10036, !tbaa !2416
  %34 = load ptr, ptr %err, align 8, !dbg !10038, !tbaa !2416
  %call29 = call i32 @dav_handle_err(ptr noundef %33, ptr noundef %34, ptr noundef null), !dbg !10039
  store i32 %call29, ptr %retval, align 4, !dbg !10040
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10040

if.end30:                                         ; preds = %if.then26
  %35 = load ptr, ptr %r.addr, align 8, !dbg !10041, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %35, i32 0, i32 0, !dbg !10042
  %36 = load ptr, ptr %pool, align 8, !dbg !10042, !tbaa !2792
  %37 = load ptr, ptr %err, align 8, !dbg !10043, !tbaa !2416
  %status31 = getelementptr inbounds %struct.dav_error, ptr %37, i32 0, i32 0, !dbg !10044
  %38 = load i32, ptr %status31, align 8, !dbg !10044, !tbaa !2871
  %39 = load ptr, ptr %err, align 8, !dbg !10045, !tbaa !2416
  %call32 = call ptr @dav_push_error(ptr noundef %36, i32 noundef %38, i32 noundef 0, ptr noundef @.str.284, ptr noundef %39), !dbg !10046
  store ptr %call32, ptr %err, align 8, !dbg !10047, !tbaa !2416
  %40 = load ptr, ptr %r.addr, align 8, !dbg !10048, !tbaa !2416
  %41 = load ptr, ptr %err, align 8, !dbg !10049, !tbaa !2416
  call void @dav_log_err(ptr noundef %40, ptr noundef %41, i32 noundef 3), !dbg !10050
  %42 = load ptr, ptr %r.addr, align 8, !dbg !10051, !tbaa !2416
  %connection = getelementptr inbounds %struct.request_rec, ptr %42, i32 0, i32 1, !dbg !10052
  %43 = load ptr, ptr %connection, align 8, !dbg !10052, !tbaa !2746
  %aborted = getelementptr inbounds %struct.conn_rec, ptr %43, i32 0, i32 21, !dbg !10053
  store i32 1, ptr %aborted, align 4, !dbg !10054, !tbaa !6711
  store i32 -2, ptr %retval, align 4, !dbg !10055
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10055

if.end33:                                         ; preds = %if.end23
  %44 = load i32, ptr %result, align 4, !dbg !10056, !tbaa !2683
  switch i32 %44, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb34
  ], !dbg !10057

sw.bb:                                            ; preds = %if.end33
  store i32 -2, ptr %retval, align 4, !dbg !10058
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10058

sw.bb34:                                          ; preds = %if.end33
  store i32 501, ptr %retval, align 4, !dbg !10060
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10060

sw.default:                                       ; preds = %if.end33
  store i32 -2, ptr %retval, align 4, !dbg !10061
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10061

cleanup:                                          ; preds = %sw.default, %sw.bb34, %sw.bb, %if.end30, %if.then28, %if.then22, %if.then18, %if.then12, %do.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %label_allowed) #10, !dbg !10062
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !10062
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !10062
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !10062
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !10062
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !10062
  %45 = load i32, ptr %retval, align 4, !dbg !10062
  ret i32 %45, !dbg !10062
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_make_workspace(ptr noundef %r) #0 !dbg !10063 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %doc = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !10065, metadata !DIExpression()), !dbg !10071
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !10072
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !10066, metadata !DIExpression()), !dbg !10073
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !10074
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !10067, metadata !DIExpression()), !dbg !10075
  %0 = load ptr, ptr %r.addr, align 8, !dbg !10076, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !10076
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !10075, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !10077
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !10068, metadata !DIExpression()), !dbg !10078
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !10079
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !10069, metadata !DIExpression()), !dbg !10080
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !10081
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !10070, metadata !DIExpression()), !dbg !10082
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !10083, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !10085
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10086

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %vsn_hooks, align 8, !dbg !10087, !tbaa !2416
  %make_workspace = getelementptr inbounds %struct.dav_hooks_vsn, ptr %2, i32 0, i32 15, !dbg !10088
  %3 = load ptr, ptr %make_workspace, align 8, !dbg !10088, !tbaa !10089
  %cmp1 = icmp eq ptr %3, null, !dbg !10090
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10091

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !10092
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10092

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %r.addr, align 8, !dbg !10093, !tbaa !2416
  %call2 = call ptr @dav_get_resource(ptr noundef %4, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !10094
  store ptr %call2, ptr %err, align 8, !dbg !10095, !tbaa !2416
  %5 = load ptr, ptr %err, align 8, !dbg !10096, !tbaa !2416
  %cmp3 = icmp ne ptr %5, null, !dbg !10098
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10099

if.then4:                                         ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !10100, !tbaa !2416
  %7 = load ptr, ptr %err, align 8, !dbg !10101, !tbaa !2416
  %call5 = call i32 @dav_handle_err(ptr noundef %6, ptr noundef %7, ptr noundef null), !dbg !10102
  store i32 %call5, ptr %retval, align 4, !dbg !10103
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10103

if.end6:                                          ; preds = %if.end
  %8 = load ptr, ptr %r.addr, align 8, !dbg !10104, !tbaa !2416
  %call7 = call i32 @ap_xml_parse_input(ptr noundef %8, ptr noundef %doc), !dbg !10106
  store i32 %call7, ptr %result, align 4, !dbg !10107, !tbaa !2683
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10108
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10109

if.then9:                                         ; preds = %if.end6
  %9 = load i32, ptr %result, align 4, !dbg !10110, !tbaa !2683
  store i32 %9, ptr %retval, align 4, !dbg !10112
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10112

if.end10:                                         ; preds = %if.end6
  %10 = load ptr, ptr %r.addr, align 8, !dbg !10113, !tbaa !2416
  %11 = load ptr, ptr %resource, align 8, !dbg !10115, !tbaa !2416
  %12 = load ptr, ptr %doc, align 8, !dbg !10116, !tbaa !2416
  %call11 = call i32 @dav_run_method_precondition(ptr noundef %10, ptr noundef %11, ptr noundef null, ptr noundef %12, ptr noundef %err), !dbg !10117
  %cmp12 = icmp ne i32 %call11, -1, !dbg !10118
  br i1 %cmp12, label %land.lhs.true, label %if.end15, !dbg !10119

land.lhs.true:                                    ; preds = %if.end10
  %13 = load ptr, ptr %err, align 8, !dbg !10120, !tbaa !2416
  %tobool = icmp ne ptr %13, null, !dbg !10120
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !10121

if.then13:                                        ; preds = %land.lhs.true
  %14 = load ptr, ptr %r.addr, align 8, !dbg !10122, !tbaa !2416
  %15 = load ptr, ptr %err, align 8, !dbg !10124, !tbaa !2416
  %call14 = call i32 @dav_handle_err(ptr noundef %14, ptr noundef %15, ptr noundef null), !dbg !10125
  store i32 %call14, ptr %retval, align 4, !dbg !10126
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10126

if.end15:                                         ; preds = %land.lhs.true, %if.end10
  %16 = load ptr, ptr %doc, align 8, !dbg !10127, !tbaa !2416
  %cmp16 = icmp eq ptr %16, null, !dbg !10129
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !10130

lor.lhs.false17:                                  ; preds = %if.end15
  %17 = load ptr, ptr %doc, align 8, !dbg !10131, !tbaa !2416
  %call18 = call i32 @dav_validate_root(ptr noundef %17, ptr noundef @.str.285), !dbg !10132
  %tobool19 = icmp ne i32 %call18, 0, !dbg !10132
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !10133

if.then20:                                        ; preds = %lor.lhs.false17, %if.end15
  br label %do.body, !dbg !10134

do.body:                                          ; preds = %if.then20
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !10136

cond.true:                                        ; preds = %do.body
  %18 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !10136, !tbaa !2683
  br label %cond.end, !dbg !10136

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !10136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ -1, %cond.false ], !dbg !10136
  %19 = load ptr, ptr %r.addr, align 8, !dbg !10136, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4432, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %19, ptr noundef @.str.286), !dbg !10136
  br label %do.cond, !dbg !10139

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !10139

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !10140
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10140

if.end21:                                         ; preds = %lor.lhs.false17
  %20 = load ptr, ptr %resource, align 8, !dbg !10141, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %20, i32 0, i32 1, !dbg !10143
  %21 = load i32, ptr %exists, align 4, !dbg !10143, !tbaa !4784
  %tobool22 = icmp ne i32 %21, 0, !dbg !10141
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !10144

if.then23:                                        ; preds = %if.end21
  %22 = load ptr, ptr %r.addr, align 8, !dbg !10145, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %22, i32 0, i32 0, !dbg !10147
  %23 = load ptr, ptr %pool, align 8, !dbg !10147, !tbaa !2792
  %call24 = call ptr @dav_new_error(ptr noundef %23, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef @.str.287), !dbg !10148
  store ptr %call24, ptr %err, align 8, !dbg !10149, !tbaa !2416
  %24 = load ptr, ptr %r.addr, align 8, !dbg !10150, !tbaa !2416
  %25 = load ptr, ptr %err, align 8, !dbg !10151, !tbaa !2416
  %call25 = call i32 @dav_handle_err(ptr noundef %24, ptr noundef %25, ptr noundef null), !dbg !10152
  store i32 %call25, ptr %retval, align 4, !dbg !10153
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10153

if.end26:                                         ; preds = %if.end21
  %26 = load ptr, ptr %vsn_hooks, align 8, !dbg !10154, !tbaa !2416
  %make_workspace27 = getelementptr inbounds %struct.dav_hooks_vsn, ptr %26, i32 0, i32 15, !dbg !10156
  %27 = load ptr, ptr %make_workspace27, align 8, !dbg !10156, !tbaa !10089
  %28 = load ptr, ptr %resource, align 8, !dbg !10157, !tbaa !2416
  %29 = load ptr, ptr %doc, align 8, !dbg !10158, !tbaa !2416
  %call28 = call ptr %27(ptr noundef %28, ptr noundef %29), !dbg !10159
  store ptr %call28, ptr %err, align 8, !dbg !10160, !tbaa !2416
  %cmp29 = icmp ne ptr %call28, null, !dbg !10161
  br i1 %cmp29, label %if.then30, label %if.end38, !dbg !10162

if.then30:                                        ; preds = %if.end26
  %30 = load ptr, ptr %r.addr, align 8, !dbg !10163, !tbaa !2416
  %pool31 = getelementptr inbounds %struct.request_rec, ptr %30, i32 0, i32 0, !dbg !10165
  %31 = load ptr, ptr %pool31, align 8, !dbg !10165, !tbaa !2792
  %32 = load ptr, ptr %err, align 8, !dbg !10166, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %32, i32 0, i32 0, !dbg !10167
  %33 = load i32, ptr %status, align 8, !dbg !10167, !tbaa !2871
  %34 = load ptr, ptr %r.addr, align 8, !dbg !10168, !tbaa !2416
  %pool32 = getelementptr inbounds %struct.request_rec, ptr %34, i32 0, i32 0, !dbg !10169
  %35 = load ptr, ptr %pool32, align 8, !dbg !10169, !tbaa !2792
  %36 = load ptr, ptr %r.addr, align 8, !dbg !10170, !tbaa !2416
  %pool33 = getelementptr inbounds %struct.request_rec, ptr %36, i32 0, i32 0, !dbg !10170
  %37 = load ptr, ptr %pool33, align 8, !dbg !10170, !tbaa !2792
  %38 = load ptr, ptr %r.addr, align 8, !dbg !10170, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %38, i32 0, i32 47, !dbg !10170
  %39 = load ptr, ptr %uri, align 8, !dbg !10170, !tbaa !3183
  %call34 = call ptr @ap_escape_html2(ptr noundef %37, ptr noundef %39, i32 noundef 0), !dbg !10170
  %call35 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %35, ptr noundef @.str.288, ptr noundef %call34), !dbg !10171
  %40 = load ptr, ptr %err, align 8, !dbg !10172, !tbaa !2416
  %call36 = call ptr @dav_push_error(ptr noundef %31, i32 noundef %33, i32 noundef 0, ptr noundef %call35, ptr noundef %40), !dbg !10173
  store ptr %call36, ptr %err, align 8, !dbg !10174, !tbaa !2416
  %41 = load ptr, ptr %r.addr, align 8, !dbg !10175, !tbaa !2416
  %42 = load ptr, ptr %err, align 8, !dbg !10176, !tbaa !2416
  %call37 = call i32 @dav_handle_err(ptr noundef %41, ptr noundef %42, ptr noundef null), !dbg !10177
  store i32 %call37, ptr %retval, align 4, !dbg !10178
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10178

if.end38:                                         ; preds = %if.end26
  %43 = load ptr, ptr %r.addr, align 8, !dbg !10179, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %43, i32 0, i32 35, !dbg !10180
  %44 = load ptr, ptr %headers_out, align 8, !dbg !10180, !tbaa !5817
  call void @apr_table_setn(ptr noundef %44, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !10181
  %45 = load ptr, ptr %r.addr, align 8, !dbg !10182, !tbaa !2416
  %46 = load ptr, ptr %resource, align 8, !dbg !10183, !tbaa !2416
  %uri39 = getelementptr inbounds %struct.dav_resource, ptr %46, i32 0, i32 6, !dbg !10184
  %47 = load ptr, ptr %uri39, align 8, !dbg !10184, !tbaa !3323
  %call40 = call i32 @dav_created(ptr noundef %45, ptr noundef %47, ptr noundef @.str.289, i32 noundef 0), !dbg !10185
  store i32 %call40, ptr %retval, align 4, !dbg !10186
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10186

cleanup:                                          ; preds = %if.end38, %if.then30, %if.then23, %do.end, %if.then13, %if.then9, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !10187
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !10187
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !10187
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !10187
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !10187
  %48 = load i32, ptr %retval, align 4, !dbg !10187
  ret i32 %48, !dbg !10187
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_make_activity(ptr noundef %r) #0 !dbg !10188 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !10190, metadata !DIExpression()), !dbg !10195
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !10196
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !10191, metadata !DIExpression()), !dbg !10197
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !10198
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !10192, metadata !DIExpression()), !dbg !10199
  %0 = load ptr, ptr %r.addr, align 8, !dbg !10200, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !10200
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !10199, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !10201
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !10193, metadata !DIExpression()), !dbg !10202
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !10203
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !10194, metadata !DIExpression()), !dbg !10204
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !10205, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !10207
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10208

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %vsn_hooks, align 8, !dbg !10209, !tbaa !2416
  %make_activity = getelementptr inbounds %struct.dav_hooks_vsn, ptr %2, i32 0, i32 17, !dbg !10210
  %3 = load ptr, ptr %make_activity, align 8, !dbg !10210, !tbaa !10211
  %cmp1 = icmp eq ptr %3, null, !dbg !10212
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10213

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !10214
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10214

if.end:                                           ; preds = %lor.lhs.false
  %4 = load ptr, ptr %r.addr, align 8, !dbg !10215, !tbaa !2416
  %call2 = call ptr @dav_get_resource(ptr noundef %4, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !10216
  store ptr %call2, ptr %err, align 8, !dbg !10217, !tbaa !2416
  %5 = load ptr, ptr %err, align 8, !dbg !10218, !tbaa !2416
  %cmp3 = icmp ne ptr %5, null, !dbg !10220
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10221

if.then4:                                         ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !10222, !tbaa !2416
  %7 = load ptr, ptr %err, align 8, !dbg !10223, !tbaa !2416
  %call5 = call i32 @dav_handle_err(ptr noundef %6, ptr noundef %7, ptr noundef null), !dbg !10224
  store i32 %call5, ptr %retval, align 4, !dbg !10225
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10225

if.end6:                                          ; preds = %if.end
  %8 = load ptr, ptr %r.addr, align 8, !dbg !10226, !tbaa !2416
  %9 = load ptr, ptr %resource, align 8, !dbg !10228, !tbaa !2416
  %call7 = call i32 @dav_run_method_precondition(ptr noundef %8, ptr noundef %9, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !10229
  %cmp8 = icmp ne i32 %call7, -1, !dbg !10230
  br i1 %cmp8, label %land.lhs.true, label %if.end11, !dbg !10231

land.lhs.true:                                    ; preds = %if.end6
  %10 = load ptr, ptr %err, align 8, !dbg !10232, !tbaa !2416
  %tobool = icmp ne ptr %10, null, !dbg !10232
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !10233

if.then9:                                         ; preds = %land.lhs.true
  %11 = load ptr, ptr %r.addr, align 8, !dbg !10234, !tbaa !2416
  %12 = load ptr, ptr %err, align 8, !dbg !10236, !tbaa !2416
  %call10 = call i32 @dav_handle_err(ptr noundef %11, ptr noundef %12, ptr noundef null), !dbg !10237
  store i32 %call10, ptr %retval, align 4, !dbg !10238
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10238

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %13 = load ptr, ptr %r.addr, align 8, !dbg !10239, !tbaa !2416
  %call12 = call i32 @ap_discard_request_body(ptr noundef %13), !dbg !10241
  store i32 %call12, ptr %result, align 4, !dbg !10242, !tbaa !2683
  %cmp13 = icmp ne i32 %call12, 0, !dbg !10243
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !10244

if.then14:                                        ; preds = %if.end11
  %14 = load i32, ptr %result, align 4, !dbg !10245, !tbaa !2683
  store i32 %14, ptr %retval, align 4, !dbg !10247
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10247

if.end15:                                         ; preds = %if.end11
  %15 = load ptr, ptr %resource, align 8, !dbg !10248, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %15, i32 0, i32 1, !dbg !10250
  %16 = load i32, ptr %exists, align 4, !dbg !10250, !tbaa !4784
  %tobool16 = icmp ne i32 %16, 0, !dbg !10248
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !10251

if.then17:                                        ; preds = %if.end15
  %17 = load ptr, ptr %r.addr, align 8, !dbg !10252, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %17, i32 0, i32 0, !dbg !10254
  %18 = load ptr, ptr %pool, align 8, !dbg !10254, !tbaa !2792
  %call18 = call ptr @dav_new_error(ptr noundef %18, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef @.str.287), !dbg !10255
  store ptr %call18, ptr %err, align 8, !dbg !10256, !tbaa !2416
  %19 = load ptr, ptr %r.addr, align 8, !dbg !10257, !tbaa !2416
  %20 = load ptr, ptr %err, align 8, !dbg !10258, !tbaa !2416
  %call19 = call i32 @dav_handle_err(ptr noundef %19, ptr noundef %20, ptr noundef null), !dbg !10259
  store i32 %call19, ptr %retval, align 4, !dbg !10260
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10260

if.end20:                                         ; preds = %if.end15
  %21 = load ptr, ptr %vsn_hooks, align 8, !dbg !10261, !tbaa !2416
  %can_be_activity = getelementptr inbounds %struct.dav_hooks_vsn, ptr %21, i32 0, i32 16, !dbg !10263
  %22 = load ptr, ptr %can_be_activity, align 8, !dbg !10263, !tbaa !5995
  %cmp21 = icmp ne ptr %22, null, !dbg !10264
  br i1 %cmp21, label %land.lhs.true22, label %if.end30, !dbg !10265

land.lhs.true22:                                  ; preds = %if.end20
  %23 = load ptr, ptr %vsn_hooks, align 8, !dbg !10266, !tbaa !2416
  %can_be_activity23 = getelementptr inbounds %struct.dav_hooks_vsn, ptr %23, i32 0, i32 16, !dbg !10267
  %24 = load ptr, ptr %can_be_activity23, align 8, !dbg !10267, !tbaa !5995
  %25 = load ptr, ptr %resource, align 8, !dbg !10268, !tbaa !2416
  %call24 = call i32 %24(ptr noundef %25), !dbg !10269
  %tobool25 = icmp ne i32 %call24, 0, !dbg !10269
  br i1 %tobool25, label %if.end30, label %if.then26, !dbg !10270

if.then26:                                        ; preds = %land.lhs.true22
  %26 = load ptr, ptr %r.addr, align 8, !dbg !10271, !tbaa !2416
  %pool27 = getelementptr inbounds %struct.request_rec, ptr %26, i32 0, i32 0, !dbg !10273
  %27 = load ptr, ptr %pool27, align 8, !dbg !10273, !tbaa !2792
  %call28 = call ptr @dav_new_error(ptr noundef %27, i32 noundef 403, i32 noundef 0, i32 noundef 0, ptr noundef @.str.290), !dbg !10274
  store ptr %call28, ptr %err, align 8, !dbg !10275, !tbaa !2416
  %28 = load ptr, ptr %r.addr, align 8, !dbg !10276, !tbaa !2416
  %29 = load ptr, ptr %err, align 8, !dbg !10277, !tbaa !2416
  %call29 = call i32 @dav_handle_err(ptr noundef %28, ptr noundef %29, ptr noundef null), !dbg !10278
  store i32 %call29, ptr %retval, align 4, !dbg !10279
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10279

if.end30:                                         ; preds = %land.lhs.true22, %if.end20
  %30 = load ptr, ptr %vsn_hooks, align 8, !dbg !10280, !tbaa !2416
  %make_activity31 = getelementptr inbounds %struct.dav_hooks_vsn, ptr %30, i32 0, i32 17, !dbg !10282
  %31 = load ptr, ptr %make_activity31, align 8, !dbg !10282, !tbaa !10211
  %32 = load ptr, ptr %resource, align 8, !dbg !10283, !tbaa !2416
  %call32 = call ptr %31(ptr noundef %32), !dbg !10284
  store ptr %call32, ptr %err, align 8, !dbg !10285, !tbaa !2416
  %cmp33 = icmp ne ptr %call32, null, !dbg !10286
  br i1 %cmp33, label %if.then34, label %if.end42, !dbg !10287

if.then34:                                        ; preds = %if.end30
  %33 = load ptr, ptr %r.addr, align 8, !dbg !10288, !tbaa !2416
  %pool35 = getelementptr inbounds %struct.request_rec, ptr %33, i32 0, i32 0, !dbg !10290
  %34 = load ptr, ptr %pool35, align 8, !dbg !10290, !tbaa !2792
  %35 = load ptr, ptr %err, align 8, !dbg !10291, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %35, i32 0, i32 0, !dbg !10292
  %36 = load i32, ptr %status, align 8, !dbg !10292, !tbaa !2871
  %37 = load ptr, ptr %r.addr, align 8, !dbg !10293, !tbaa !2416
  %pool36 = getelementptr inbounds %struct.request_rec, ptr %37, i32 0, i32 0, !dbg !10294
  %38 = load ptr, ptr %pool36, align 8, !dbg !10294, !tbaa !2792
  %39 = load ptr, ptr %r.addr, align 8, !dbg !10295, !tbaa !2416
  %pool37 = getelementptr inbounds %struct.request_rec, ptr %39, i32 0, i32 0, !dbg !10295
  %40 = load ptr, ptr %pool37, align 8, !dbg !10295, !tbaa !2792
  %41 = load ptr, ptr %r.addr, align 8, !dbg !10295, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %41, i32 0, i32 47, !dbg !10295
  %42 = load ptr, ptr %uri, align 8, !dbg !10295, !tbaa !3183
  %call38 = call ptr @ap_escape_html2(ptr noundef %40, ptr noundef %42, i32 noundef 0), !dbg !10295
  %call39 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %38, ptr noundef @.str.291, ptr noundef %call38), !dbg !10296
  %43 = load ptr, ptr %err, align 8, !dbg !10297, !tbaa !2416
  %call40 = call ptr @dav_push_error(ptr noundef %34, i32 noundef %36, i32 noundef 0, ptr noundef %call39, ptr noundef %43), !dbg !10298
  store ptr %call40, ptr %err, align 8, !dbg !10299, !tbaa !2416
  %44 = load ptr, ptr %r.addr, align 8, !dbg !10300, !tbaa !2416
  %45 = load ptr, ptr %err, align 8, !dbg !10301, !tbaa !2416
  %call41 = call i32 @dav_handle_err(ptr noundef %44, ptr noundef %45, ptr noundef null), !dbg !10302
  store i32 %call41, ptr %retval, align 4, !dbg !10303
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10303

if.end42:                                         ; preds = %if.end30
  %46 = load ptr, ptr %r.addr, align 8, !dbg !10304, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %46, i32 0, i32 35, !dbg !10305
  %47 = load ptr, ptr %headers_out, align 8, !dbg !10305, !tbaa !5817
  call void @apr_table_setn(ptr noundef %47, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !10306
  %48 = load ptr, ptr %r.addr, align 8, !dbg !10307, !tbaa !2416
  %49 = load ptr, ptr %resource, align 8, !dbg !10308, !tbaa !2416
  %uri43 = getelementptr inbounds %struct.dav_resource, ptr %49, i32 0, i32 6, !dbg !10309
  %50 = load ptr, ptr %uri43, align 8, !dbg !10309, !tbaa !3323
  %call44 = call i32 @dav_created(ptr noundef %48, ptr noundef %50, ptr noundef @.str.292, i32 noundef 0), !dbg !10310
  store i32 %call44, ptr %retval, align 4, !dbg !10311
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10311

cleanup:                                          ; preds = %if.end42, %if.then34, %if.then26, %if.then17, %if.then14, %if.then9, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !10312
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !10312
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !10312
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !10312
  %51 = load i32, ptr %retval, align 4, !dbg !10312
  ret i32 %51, !dbg !10312
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_baseline_control(ptr noundef %r) #0 !dbg !10313 {
entry:
  %r.addr = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !10315, metadata !DIExpression()), !dbg !10316
  ret i32 405, !dbg !10317
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_merge(ptr noundef %r) #0 !dbg !10318 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %source_resource = alloca ptr, align 8
  %vsn_hooks = alloca ptr, align 8
  %err = alloca ptr, align 8
  %result = alloca i32, align 4
  %doc = alloca ptr, align 8
  %source_elem = alloca ptr, align 8
  %href_elem = alloca ptr, align 8
  %prop_elem = alloca ptr, align 8
  %source = alloca ptr, align 8
  %no_auto_merge = alloca i32, align 4
  %no_checkout = alloca i32, align 4
  %lookup = alloca %struct.dav_lookup_result, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.dav_lookup_result, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !10320, metadata !DIExpression()), !dbg !10334
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !10335
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !10321, metadata !DIExpression()), !dbg !10336
  call void @llvm.lifetime.start.p0(i64 8, ptr %source_resource) #10, !dbg !10337
  tail call void @llvm.dbg.declare(metadata ptr %source_resource, metadata !10322, metadata !DIExpression()), !dbg !10338
  call void @llvm.lifetime.start.p0(i64 8, ptr %vsn_hooks) #10, !dbg !10339
  tail call void @llvm.dbg.declare(metadata ptr %vsn_hooks, metadata !10323, metadata !DIExpression()), !dbg !10340
  %0 = load ptr, ptr %r.addr, align 8, !dbg !10341, !tbaa !2416
  %call = call ptr @dav_get_vsn_hooks(ptr noundef %0), !dbg !10341
  store ptr %call, ptr %vsn_hooks, align 8, !dbg !10340, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !10342
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !10324, metadata !DIExpression()), !dbg !10343
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #10, !dbg !10344
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !10325, metadata !DIExpression()), !dbg !10345
  call void @llvm.lifetime.start.p0(i64 8, ptr %doc) #10, !dbg !10346
  tail call void @llvm.dbg.declare(metadata ptr %doc, metadata !10326, metadata !DIExpression()), !dbg !10347
  call void @llvm.lifetime.start.p0(i64 8, ptr %source_elem) #10, !dbg !10348
  tail call void @llvm.dbg.declare(metadata ptr %source_elem, metadata !10327, metadata !DIExpression()), !dbg !10349
  call void @llvm.lifetime.start.p0(i64 8, ptr %href_elem) #10, !dbg !10350
  tail call void @llvm.dbg.declare(metadata ptr %href_elem, metadata !10328, metadata !DIExpression()), !dbg !10351
  call void @llvm.lifetime.start.p0(i64 8, ptr %prop_elem) #10, !dbg !10352
  tail call void @llvm.dbg.declare(metadata ptr %prop_elem, metadata !10329, metadata !DIExpression()), !dbg !10353
  call void @llvm.lifetime.start.p0(i64 8, ptr %source) #10, !dbg !10354
  tail call void @llvm.dbg.declare(metadata ptr %source, metadata !10330, metadata !DIExpression()), !dbg !10355
  call void @llvm.lifetime.start.p0(i64 4, ptr %no_auto_merge) #10, !dbg !10356
  tail call void @llvm.dbg.declare(metadata ptr %no_auto_merge, metadata !10331, metadata !DIExpression()), !dbg !10357
  call void @llvm.lifetime.start.p0(i64 4, ptr %no_checkout) #10, !dbg !10358
  tail call void @llvm.dbg.declare(metadata ptr %no_checkout, metadata !10332, metadata !DIExpression()), !dbg !10359
  call void @llvm.lifetime.start.p0(i64 64, ptr %lookup) #10, !dbg !10360
  tail call void @llvm.dbg.declare(metadata ptr %lookup, metadata !10333, metadata !DIExpression()), !dbg !10361
  %1 = load ptr, ptr %vsn_hooks, align 8, !dbg !10362, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !10364
  br i1 %cmp, label %if.then, label %if.end, !dbg !10365

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !10366
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10366

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !10367, !tbaa !2416
  %call1 = call i32 @ap_xml_parse_input(ptr noundef %2, ptr noundef %doc), !dbg !10369
  store i32 %call1, ptr %result, align 4, !dbg !10370, !tbaa !2683
  %cmp2 = icmp ne i32 %call1, 0, !dbg !10371
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10372

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr %result, align 4, !dbg !10373, !tbaa !2683
  store i32 %3, ptr %retval, align 4, !dbg !10374
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10374

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %doc, align 8, !dbg !10375, !tbaa !2416
  %cmp5 = icmp eq ptr %4, null, !dbg !10377
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !10378

lor.lhs.false:                                    ; preds = %if.end4
  %5 = load ptr, ptr %doc, align 8, !dbg !10379, !tbaa !2416
  %call6 = call i32 @dav_validate_root(ptr noundef %5, ptr noundef @.str.293), !dbg !10380
  %tobool = icmp ne i32 %call6, 0, !dbg !10380
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !10381

if.then7:                                         ; preds = %lor.lhs.false, %if.end4
  br label %do.body, !dbg !10382

do.body:                                          ; preds = %if.then7
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !10384

cond.true:                                        ; preds = %do.body
  %6 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !10384, !tbaa !2683
  br label %cond.end, !dbg !10384

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !10384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ -1, %cond.false ], !dbg !10384
  %7 = load ptr, ptr %r.addr, align 8, !dbg !10384, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4572, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %7, ptr noundef @.str.294), !dbg !10384
  br label %do.cond, !dbg !10387

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !10387

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !10388
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10388

if.end8:                                          ; preds = %lor.lhs.false
  %8 = load ptr, ptr %doc, align 8, !dbg !10389, !tbaa !2416
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %8, i32 0, i32 0, !dbg !10391
  %9 = load ptr, ptr %root, align 8, !dbg !10391, !tbaa !6252
  %call9 = call ptr @dav_find_child(ptr noundef %9, ptr noundef @.str.295), !dbg !10392
  store ptr %call9, ptr %source_elem, align 8, !dbg !10393, !tbaa !2416
  %cmp10 = icmp eq ptr %call9, null, !dbg !10394
  br i1 %cmp10, label %if.then11, label %if.end19, !dbg !10395

if.then11:                                        ; preds = %if.end8
  br label %do.body12, !dbg !10396

do.body12:                                        ; preds = %if.then11
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true13, label %cond.false14, !dbg !10398

cond.true13:                                      ; preds = %do.body12
  %10 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !10398, !tbaa !2683
  br label %cond.end15, !dbg !10398

cond.false14:                                     ; preds = %do.body12
  br label %cond.end15, !dbg !10398

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i32 [ %10, %cond.true13 ], [ -1, %cond.false14 ], !dbg !10398
  %11 = load ptr, ptr %r.addr, align 8, !dbg !10398, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4580, i32 noundef %cond16, i32 noundef 3, i32 noundef 0, ptr noundef %11, ptr noundef @.str.296), !dbg !10398
  br label %do.cond17, !dbg !10401

do.cond17:                                        ; preds = %cond.end15
  br label %do.end18, !dbg !10401

do.end18:                                         ; preds = %do.cond17
  store i32 400, ptr %retval, align 4, !dbg !10402
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10402

if.end19:                                         ; preds = %if.end8
  %12 = load ptr, ptr %source_elem, align 8, !dbg !10403, !tbaa !2416
  %call20 = call ptr @dav_find_child(ptr noundef %12, ptr noundef @.str.224), !dbg !10405
  store ptr %call20, ptr %href_elem, align 8, !dbg !10406, !tbaa !2416
  %cmp21 = icmp eq ptr %call20, null, !dbg !10407
  br i1 %cmp21, label %if.then22, label %if.end30, !dbg !10408

if.then22:                                        ; preds = %if.end19
  br label %do.body23, !dbg !10409

do.body23:                                        ; preds = %if.then22
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true24, label %cond.false25, !dbg !10411

cond.true24:                                      ; preds = %do.body23
  %13 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !10411, !tbaa !2683
  br label %cond.end26, !dbg !10411

cond.false25:                                     ; preds = %do.body23
  br label %cond.end26, !dbg !10411

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ %13, %cond.true24 ], [ -1, %cond.false25 ], !dbg !10411
  %14 = load ptr, ptr %r.addr, align 8, !dbg !10411, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4587, i32 noundef %cond27, i32 noundef 3, i32 noundef 0, ptr noundef %14, ptr noundef @.str.297), !dbg !10411
  br label %do.cond28, !dbg !10414

do.cond28:                                        ; preds = %cond.end26
  br label %do.end29, !dbg !10414

do.end29:                                         ; preds = %do.cond28
  store i32 400, ptr %retval, align 4, !dbg !10415
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10415

if.end30:                                         ; preds = %if.end19
  %15 = load ptr, ptr %href_elem, align 8, !dbg !10416, !tbaa !2416
  %16 = load ptr, ptr %r.addr, align 8, !dbg !10417, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %16, i32 0, i32 0, !dbg !10418
  %17 = load ptr, ptr %pool, align 8, !dbg !10418, !tbaa !2792
  %call31 = call ptr @dav_xml_get_cdata(ptr noundef %15, ptr noundef %17, i32 noundef 1), !dbg !10419
  store ptr %call31, ptr %source, align 8, !dbg !10420, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 64, ptr %tmp) #10, !dbg !10421
  %18 = load ptr, ptr %source, align 8, !dbg !10422, !tbaa !2416
  %19 = load ptr, ptr %r.addr, align 8, !dbg !10423, !tbaa !2416
  call void @dav_lookup_uri(ptr sret(%struct.dav_lookup_result) align 8 %tmp, ptr noundef %18, ptr noundef %19, i32 noundef 0), !dbg !10421
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %lookup, ptr align 8 %tmp, i64 64, i1 false), !dbg !10421, !tbaa.struct !7390
  call void @llvm.lifetime.end.p0(i64 64, ptr %tmp) #10, !dbg !10421
  %rnew = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10424
  %20 = load ptr, ptr %rnew, align 8, !dbg !10424, !tbaa !7393
  %cmp32 = icmp eq ptr %20, null, !dbg !10426
  br i1 %cmp32, label %if.then33, label %if.end51, !dbg !10427

if.then33:                                        ; preds = %if.end30
  %err34 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10428
  %status = getelementptr inbounds %struct.dav_error, ptr %err34, i32 0, i32 0, !dbg !10431
  %21 = load i32, ptr %status, align 8, !dbg !10431, !tbaa !7401
  %cmp35 = icmp eq i32 %21, 400, !dbg !10432
  br i1 %cmp35, label %if.then36, label %if.end45, !dbg !10433

if.then36:                                        ; preds = %if.then33
  br label %do.body37, !dbg !10434

do.body37:                                        ; preds = %if.then36
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true38, label %cond.false39, !dbg !10436

cond.true38:                                      ; preds = %do.body37
  %22 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !10436, !tbaa !2683
  br label %cond.end40, !dbg !10436

cond.false39:                                     ; preds = %do.body37
  br label %cond.end40, !dbg !10436

cond.end40:                                       ; preds = %cond.false39, %cond.true38
  %cond41 = phi i32 [ %22, %cond.true38 ], [ -1, %cond.false39 ], !dbg !10436
  %23 = load ptr, ptr %r.addr, align 8, !dbg !10436, !tbaa !2416
  %err42 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10436
  %desc = getelementptr inbounds %struct.dav_error, ptr %err42, i32 0, i32 2, !dbg !10436
  %24 = load ptr, ptr %desc, align 8, !dbg !10436, !tbaa !7409
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4600, i32 noundef %cond41, i32 noundef 3, i32 noundef 0, ptr noundef %23, ptr noundef @.str.298, ptr noundef %24), !dbg !10436
  br label %do.cond43, !dbg !10439

do.cond43:                                        ; preds = %cond.end40
  br label %do.end44, !dbg !10439

do.end44:                                         ; preds = %do.cond43
  store i32 400, ptr %retval, align 4, !dbg !10440
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10440

if.end45:                                         ; preds = %if.then33
  %25 = load ptr, ptr %r.addr, align 8, !dbg !10441, !tbaa !2416
  %err46 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10442
  %status47 = getelementptr inbounds %struct.dav_error, ptr %err46, i32 0, i32 0, !dbg !10443
  %26 = load i32, ptr %status47, align 8, !dbg !10443, !tbaa !7401
  %err48 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10444
  %desc49 = getelementptr inbounds %struct.dav_error, ptr %err48, i32 0, i32 2, !dbg !10445
  %27 = load ptr, ptr %desc49, align 8, !dbg !10445, !tbaa !7409
  %call50 = call i32 @dav_error_response(ptr noundef %25, i32 noundef %26, ptr noundef %27), !dbg !10446
  store i32 %call50, ptr %retval, align 4, !dbg !10447
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10447

if.end51:                                         ; preds = %if.end30
  %rnew52 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10448
  %28 = load ptr, ptr %rnew52, align 8, !dbg !10448, !tbaa !7393
  %status53 = getelementptr inbounds %struct.request_rec, ptr %28, i32 0, i32 15, !dbg !10450
  %29 = load i32, ptr %status53, align 8, !dbg !10450, !tbaa !2690
  %cmp54 = icmp ne i32 %29, 200, !dbg !10451
  br i1 %cmp54, label %if.then55, label %if.end59, !dbg !10452

if.then55:                                        ; preds = %if.end51
  %30 = load ptr, ptr %r.addr, align 8, !dbg !10453, !tbaa !2416
  %rnew56 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10455
  %31 = load ptr, ptr %rnew56, align 8, !dbg !10455, !tbaa !7393
  %status57 = getelementptr inbounds %struct.request_rec, ptr %31, i32 0, i32 15, !dbg !10456
  %32 = load i32, ptr %status57, align 8, !dbg !10456, !tbaa !2690
  %call58 = call i32 @dav_error_response(ptr noundef %30, i32 noundef %32, ptr noundef @.str.299), !dbg !10457
  store i32 %call58, ptr %retval, align 4, !dbg !10458
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10458

if.end59:                                         ; preds = %if.end51
  %rnew60 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10459
  %33 = load ptr, ptr %rnew60, align 8, !dbg !10459, !tbaa !7393
  %call61 = call ptr @dav_get_resource(ptr noundef %33, i32 noundef 0, i32 noundef 0, ptr noundef %source_resource), !dbg !10460
  store ptr %call61, ptr %err, align 8, !dbg !10461, !tbaa !2416
  %34 = load ptr, ptr %err, align 8, !dbg !10462, !tbaa !2416
  %cmp62 = icmp ne ptr %34, null, !dbg !10464
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !10465

if.then63:                                        ; preds = %if.end59
  %35 = load ptr, ptr %r.addr, align 8, !dbg !10466, !tbaa !2416
  %36 = load ptr, ptr %err, align 8, !dbg !10467, !tbaa !2416
  %call64 = call i32 @dav_handle_err(ptr noundef %35, ptr noundef %36, ptr noundef null), !dbg !10468
  store i32 %call64, ptr %retval, align 4, !dbg !10469
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10469

if.end65:                                         ; preds = %if.end59
  %37 = load ptr, ptr %r.addr, align 8, !dbg !10470, !tbaa !2416
  %38 = load ptr, ptr %source_resource, align 8, !dbg !10472, !tbaa !2416
  %39 = load ptr, ptr %doc, align 8, !dbg !10473, !tbaa !2416
  %call66 = call i32 @dav_run_method_precondition(ptr noundef %37, ptr noundef %38, ptr noundef null, ptr noundef %39, ptr noundef %err), !dbg !10474
  %cmp67 = icmp ne i32 %call66, -1, !dbg !10475
  br i1 %cmp67, label %land.lhs.true, label %if.end71, !dbg !10476

land.lhs.true:                                    ; preds = %if.end65
  %40 = load ptr, ptr %err, align 8, !dbg !10477, !tbaa !2416
  %tobool68 = icmp ne ptr %40, null, !dbg !10477
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !10478

if.then69:                                        ; preds = %land.lhs.true
  %41 = load ptr, ptr %r.addr, align 8, !dbg !10479, !tbaa !2416
  %42 = load ptr, ptr %err, align 8, !dbg !10481, !tbaa !2416
  %call70 = call i32 @dav_handle_err(ptr noundef %41, ptr noundef %42, ptr noundef null), !dbg !10482
  store i32 %call70, ptr %retval, align 4, !dbg !10483
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10483

if.end71:                                         ; preds = %land.lhs.true, %if.end65
  %43 = load ptr, ptr %doc, align 8, !dbg !10484, !tbaa !2416
  %root72 = getelementptr inbounds %struct.apr_xml_doc, ptr %43, i32 0, i32 0, !dbg !10485
  %44 = load ptr, ptr %root72, align 8, !dbg !10485, !tbaa !6252
  %call73 = call ptr @dav_find_child(ptr noundef %44, ptr noundef @.str.300), !dbg !10486
  %cmp74 = icmp ne ptr %call73, null, !dbg !10487
  %conv = zext i1 %cmp74 to i32, !dbg !10487
  store i32 %conv, ptr %no_auto_merge, align 4, !dbg !10488, !tbaa !2683
  %45 = load ptr, ptr %doc, align 8, !dbg !10489, !tbaa !2416
  %root75 = getelementptr inbounds %struct.apr_xml_doc, ptr %45, i32 0, i32 0, !dbg !10490
  %46 = load ptr, ptr %root75, align 8, !dbg !10490, !tbaa !6252
  %call76 = call ptr @dav_find_child(ptr noundef %46, ptr noundef @.str.301), !dbg !10491
  %cmp77 = icmp ne ptr %call76, null, !dbg !10492
  %conv78 = zext i1 %cmp77 to i32, !dbg !10492
  store i32 %conv78, ptr %no_checkout, align 4, !dbg !10493, !tbaa !2683
  %47 = load ptr, ptr %doc, align 8, !dbg !10494, !tbaa !2416
  %root79 = getelementptr inbounds %struct.apr_xml_doc, ptr %47, i32 0, i32 0, !dbg !10495
  %48 = load ptr, ptr %root79, align 8, !dbg !10495, !tbaa !6252
  %call80 = call ptr @dav_find_child(ptr noundef %48, ptr noundef @.str.162), !dbg !10496
  store ptr %call80, ptr %prop_elem, align 8, !dbg !10497, !tbaa !2416
  %49 = load ptr, ptr %r.addr, align 8, !dbg !10498, !tbaa !2416
  %call81 = call ptr @dav_get_resource(ptr noundef %49, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !10499
  store ptr %call81, ptr %err, align 8, !dbg !10500, !tbaa !2416
  %50 = load ptr, ptr %err, align 8, !dbg !10501, !tbaa !2416
  %cmp82 = icmp ne ptr %50, null, !dbg !10503
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !10504

if.then84:                                        ; preds = %if.end71
  %51 = load ptr, ptr %r.addr, align 8, !dbg !10505, !tbaa !2416
  %52 = load ptr, ptr %err, align 8, !dbg !10506, !tbaa !2416
  %call85 = call i32 @dav_handle_err(ptr noundef %51, ptr noundef %52, ptr noundef null), !dbg !10507
  store i32 %call85, ptr %retval, align 4, !dbg !10508
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10508

if.end86:                                         ; preds = %if.end71
  %53 = load ptr, ptr %r.addr, align 8, !dbg !10509, !tbaa !2416
  %54 = load ptr, ptr %source_resource, align 8, !dbg !10511, !tbaa !2416
  %55 = load ptr, ptr %resource, align 8, !dbg !10512, !tbaa !2416
  %56 = load ptr, ptr %doc, align 8, !dbg !10513, !tbaa !2416
  %call87 = call i32 @dav_run_method_precondition(ptr noundef %53, ptr noundef %54, ptr noundef %55, ptr noundef %56, ptr noundef %err), !dbg !10514
  %cmp88 = icmp ne i32 %call87, -1, !dbg !10515
  br i1 %cmp88, label %land.lhs.true90, label %if.end94, !dbg !10516

land.lhs.true90:                                  ; preds = %if.end86
  %57 = load ptr, ptr %err, align 8, !dbg !10517, !tbaa !2416
  %tobool91 = icmp ne ptr %57, null, !dbg !10517
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !10518

if.then92:                                        ; preds = %land.lhs.true90
  %58 = load ptr, ptr %r.addr, align 8, !dbg !10519, !tbaa !2416
  %59 = load ptr, ptr %err, align 8, !dbg !10521, !tbaa !2416
  %call93 = call i32 @dav_handle_err(ptr noundef %58, ptr noundef %59, ptr noundef null), !dbg !10522
  store i32 %call93, ptr %retval, align 4, !dbg !10523
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10523

if.end94:                                         ; preds = %land.lhs.true90, %if.end86
  %60 = load ptr, ptr %resource, align 8, !dbg !10524, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %60, i32 0, i32 1, !dbg !10526
  %61 = load i32, ptr %exists, align 4, !dbg !10526, !tbaa !4784
  %tobool95 = icmp ne i32 %61, 0, !dbg !10524
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !10527

if.then96:                                        ; preds = %if.end94
  store i32 404, ptr %retval, align 4, !dbg !10528
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10528

if.end97:                                         ; preds = %if.end94
  %62 = load ptr, ptr %r.addr, align 8, !dbg !10530, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %62, i32 0, i32 35, !dbg !10531
  %63 = load ptr, ptr %headers_out, align 8, !dbg !10531, !tbaa !5817
  call void @apr_table_setn(ptr noundef %63, ptr noundef @.str.230, ptr noundef @.str.231), !dbg !10532
  %64 = load ptr, ptr %r.addr, align 8, !dbg !10533, !tbaa !2416
  %status98 = getelementptr inbounds %struct.request_rec, ptr %64, i32 0, i32 15, !dbg !10534
  store i32 200, ptr %status98, align 8, !dbg !10535, !tbaa !2690
  %65 = load ptr, ptr %r.addr, align 8, !dbg !10536, !tbaa !2416
  call void @ap_set_content_type(ptr noundef %65, ptr noundef @.str.302), !dbg !10537
  %66 = load ptr, ptr %vsn_hooks, align 8, !dbg !10538, !tbaa !2416
  %merge = getelementptr inbounds %struct.dav_hooks_vsn, ptr %66, i32 0, i32 18, !dbg !10540
  %67 = load ptr, ptr %merge, align 8, !dbg !10540, !tbaa !10541
  %68 = load ptr, ptr %resource, align 8, !dbg !10542, !tbaa !2416
  %69 = load ptr, ptr %source_resource, align 8, !dbg !10543, !tbaa !2416
  %70 = load i32, ptr %no_auto_merge, align 4, !dbg !10544, !tbaa !2683
  %71 = load i32, ptr %no_checkout, align 4, !dbg !10545, !tbaa !2683
  %72 = load ptr, ptr %prop_elem, align 8, !dbg !10546, !tbaa !2416
  %73 = load ptr, ptr %r.addr, align 8, !dbg !10547, !tbaa !2416
  %output_filters = getelementptr inbounds %struct.request_rec, ptr %73, i32 0, i32 59, !dbg !10548
  %74 = load ptr, ptr %output_filters, align 8, !dbg !10548, !tbaa !2538
  %call99 = call ptr %67(ptr noundef %68, ptr noundef %69, i32 noundef %70, i32 noundef %71, ptr noundef %72, ptr noundef %74), !dbg !10549
  store ptr %call99, ptr %err, align 8, !dbg !10550, !tbaa !2416
  %cmp100 = icmp ne ptr %call99, null, !dbg !10551
  br i1 %cmp100, label %if.then102, label %if.end113, !dbg !10552

if.then102:                                       ; preds = %if.end97
  %75 = load ptr, ptr %r.addr, align 8, !dbg !10553, !tbaa !2416
  %pool103 = getelementptr inbounds %struct.request_rec, ptr %75, i32 0, i32 0, !dbg !10555
  %76 = load ptr, ptr %pool103, align 8, !dbg !10555, !tbaa !2792
  %77 = load ptr, ptr %err, align 8, !dbg !10556, !tbaa !2416
  %status104 = getelementptr inbounds %struct.dav_error, ptr %77, i32 0, i32 0, !dbg !10557
  %78 = load i32, ptr %status104, align 8, !dbg !10557, !tbaa !2871
  %79 = load ptr, ptr %r.addr, align 8, !dbg !10558, !tbaa !2416
  %pool105 = getelementptr inbounds %struct.request_rec, ptr %79, i32 0, i32 0, !dbg !10559
  %80 = load ptr, ptr %pool105, align 8, !dbg !10559, !tbaa !2792
  %81 = load ptr, ptr %r.addr, align 8, !dbg !10560, !tbaa !2416
  %pool106 = getelementptr inbounds %struct.request_rec, ptr %81, i32 0, i32 0, !dbg !10560
  %82 = load ptr, ptr %pool106, align 8, !dbg !10560, !tbaa !2792
  %83 = load ptr, ptr %source, align 8, !dbg !10560, !tbaa !2416
  %call107 = call ptr @ap_escape_html2(ptr noundef %82, ptr noundef %83, i32 noundef 0), !dbg !10560
  %84 = load ptr, ptr %r.addr, align 8, !dbg !10561, !tbaa !2416
  %pool108 = getelementptr inbounds %struct.request_rec, ptr %84, i32 0, i32 0, !dbg !10561
  %85 = load ptr, ptr %pool108, align 8, !dbg !10561, !tbaa !2792
  %86 = load ptr, ptr %r.addr, align 8, !dbg !10561, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %86, i32 0, i32 47, !dbg !10561
  %87 = load ptr, ptr %uri, align 8, !dbg !10561, !tbaa !3183
  %call109 = call ptr @ap_escape_html2(ptr noundef %85, ptr noundef %87, i32 noundef 0), !dbg !10561
  %call110 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %80, ptr noundef @.str.303, ptr noundef %call107, ptr noundef %call109), !dbg !10562
  %88 = load ptr, ptr %err, align 8, !dbg !10563, !tbaa !2416
  %call111 = call ptr @dav_push_error(ptr noundef %76, i32 noundef %78, i32 noundef 0, ptr noundef %call110, ptr noundef %88), !dbg !10564
  store ptr %call111, ptr %err, align 8, !dbg !10565, !tbaa !2416
  %89 = load ptr, ptr %r.addr, align 8, !dbg !10566, !tbaa !2416
  %90 = load ptr, ptr %err, align 8, !dbg !10567, !tbaa !2416
  %call112 = call i32 @dav_handle_err(ptr noundef %89, ptr noundef %90, ptr noundef null), !dbg !10568
  store i32 %call112, ptr %retval, align 4, !dbg !10569
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10569

if.end113:                                        ; preds = %if.end97
  store i32 -2, ptr %retval, align 4, !dbg !10570
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10570

cleanup:                                          ; preds = %if.end113, %if.then102, %if.then96, %if.then92, %if.then84, %if.then69, %if.then63, %if.then55, %if.end45, %do.end44, %do.end29, %do.end18, %do.end, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 64, ptr %lookup) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 4, ptr %no_checkout) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 4, ptr %no_auto_merge) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %source) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %prop_elem) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %href_elem) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %source_elem) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %doc) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %vsn_hooks) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %source_resource) #10, !dbg !10571
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !10571
  %91 = load i32, ptr %retval, align 4, !dbg !10571
  ret i32 %91, !dbg !10571
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_bind(ptr noundef %r) #0 !dbg !10572 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %binding = alloca ptr, align 8
  %av_info = alloca %struct.dav_auto_version_info, align 8
  %binding_hooks = alloca ptr, align 8
  %dest = alloca ptr, align 8
  %err = alloca ptr, align 8
  %err2 = alloca ptr, align 8
  %multi_response = alloca ptr, align 8
  %lookup = alloca %struct.dav_lookup_result, align 8
  %overwrite = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.dav_lookup_result, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !10574, metadata !DIExpression()), !dbg !10585
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !10586
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !10575, metadata !DIExpression()), !dbg !10587
  call void @llvm.lifetime.start.p0(i64 8, ptr %binding) #10, !dbg !10588
  tail call void @llvm.dbg.declare(metadata ptr %binding, metadata !10576, metadata !DIExpression()), !dbg !10589
  call void @llvm.lifetime.start.p0(i64 24, ptr %av_info) #10, !dbg !10590
  tail call void @llvm.dbg.declare(metadata ptr %av_info, metadata !10577, metadata !DIExpression()), !dbg !10591
  call void @llvm.lifetime.start.p0(i64 8, ptr %binding_hooks) #10, !dbg !10592
  tail call void @llvm.dbg.declare(metadata ptr %binding_hooks, metadata !10578, metadata !DIExpression()), !dbg !10593
  %0 = load ptr, ptr %r.addr, align 8, !dbg !10594, !tbaa !2416
  %call = call ptr @dav_get_binding_hooks(ptr noundef %0), !dbg !10594
  store ptr %call, ptr %binding_hooks, align 8, !dbg !10593, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %dest) #10, !dbg !10595
  tail call void @llvm.dbg.declare(metadata ptr %dest, metadata !10579, metadata !DIExpression()), !dbg !10596
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !10597
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !10580, metadata !DIExpression()), !dbg !10598
  call void @llvm.lifetime.start.p0(i64 8, ptr %err2) #10, !dbg !10599
  tail call void @llvm.dbg.declare(metadata ptr %err2, metadata !10581, metadata !DIExpression()), !dbg !10600
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_response) #10, !dbg !10601
  tail call void @llvm.dbg.declare(metadata ptr %multi_response, metadata !10582, metadata !DIExpression()), !dbg !10602
  store ptr null, ptr %multi_response, align 8, !dbg !10602, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 64, ptr %lookup) #10, !dbg !10603
  tail call void @llvm.dbg.declare(metadata ptr %lookup, metadata !10583, metadata !DIExpression()), !dbg !10604
  call void @llvm.lifetime.start.p0(i64 4, ptr %overwrite) #10, !dbg !10605
  tail call void @llvm.dbg.declare(metadata ptr %overwrite, metadata !10584, metadata !DIExpression()), !dbg !10606
  %1 = load ptr, ptr %binding_hooks, align 8, !dbg !10607, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !10609
  br i1 %cmp, label %if.then, label %if.end, !dbg !10610

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !10611
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10611

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !10612, !tbaa !2416
  %call1 = call ptr @dav_get_resource(ptr noundef %2, i32 noundef 0, i32 noundef 0, ptr noundef %resource), !dbg !10613
  store ptr %call1, ptr %err, align 8, !dbg !10614, !tbaa !2416
  %3 = load ptr, ptr %err, align 8, !dbg !10615, !tbaa !2416
  %cmp2 = icmp ne ptr %3, null, !dbg !10617
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10618

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr %r.addr, align 8, !dbg !10619, !tbaa !2416
  %5 = load ptr, ptr %err, align 8, !dbg !10620, !tbaa !2416
  %call4 = call i32 @dav_handle_err(ptr noundef %4, ptr noundef %5, ptr noundef null), !dbg !10621
  store i32 %call4, ptr %retval, align 4, !dbg !10622
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10622

if.end5:                                          ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !10623, !tbaa !2416
  %7 = load ptr, ptr %resource, align 8, !dbg !10625, !tbaa !2416
  %call6 = call i32 @dav_run_method_precondition(ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef %err), !dbg !10626
  %cmp7 = icmp ne i32 %call6, -1, !dbg !10627
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !10628

land.lhs.true:                                    ; preds = %if.end5
  %8 = load ptr, ptr %err, align 8, !dbg !10629, !tbaa !2416
  %tobool = icmp ne ptr %8, null, !dbg !10629
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !10630

if.then8:                                         ; preds = %land.lhs.true
  %9 = load ptr, ptr %r.addr, align 8, !dbg !10631, !tbaa !2416
  %10 = load ptr, ptr %err, align 8, !dbg !10633, !tbaa !2416
  %call9 = call i32 @dav_handle_err(ptr noundef %9, ptr noundef %10, ptr noundef null), !dbg !10634
  store i32 %call9, ptr %retval, align 4, !dbg !10635
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10635

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %11 = load ptr, ptr %resource, align 8, !dbg !10636, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %11, i32 0, i32 1, !dbg !10638
  %12 = load i32, ptr %exists, align 4, !dbg !10638, !tbaa !4784
  %tobool11 = icmp ne i32 %12, 0, !dbg !10636
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !10639

if.then12:                                        ; preds = %if.end10
  store i32 404, ptr %retval, align 4, !dbg !10640
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10640

if.end13:                                         ; preds = %if.end10
  %13 = load ptr, ptr %r.addr, align 8, !dbg !10642, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %13, i32 0, i32 34, !dbg !10643
  %14 = load ptr, ptr %headers_in, align 8, !dbg !10643, !tbaa !3088
  %call14 = call ptr @apr_table_get(ptr noundef %14, ptr noundef @.str.184), !dbg !10644
  store ptr %call14, ptr %dest, align 8, !dbg !10645, !tbaa !2416
  %15 = load ptr, ptr %dest, align 8, !dbg !10646, !tbaa !2416
  %cmp15 = icmp eq ptr %15, null, !dbg !10648
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !10649

if.then16:                                        ; preds = %if.end13
  br label %do.body, !dbg !10650

do.body:                                          ; preds = %if.then16
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !10652

cond.true:                                        ; preds = %do.body
  %16 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !10652, !tbaa !2683
  br label %cond.end, !dbg !10652

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !10652

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ -1, %cond.false ], !dbg !10652
  %17 = load ptr, ptr %r.addr, align 8, !dbg !10652, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4732, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %17, ptr noundef @.str.304), !dbg !10652
  br label %do.cond, !dbg !10655

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !10655

do.end:                                           ; preds = %do.cond
  store i32 400, ptr %retval, align 4, !dbg !10656
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10656

if.end17:                                         ; preds = %if.end13
  call void @llvm.lifetime.start.p0(i64 64, ptr %tmp) #10, !dbg !10657
  %18 = load ptr, ptr %dest, align 8, !dbg !10658, !tbaa !2416
  %19 = load ptr, ptr %r.addr, align 8, !dbg !10659, !tbaa !2416
  call void @dav_lookup_uri(ptr sret(%struct.dav_lookup_result) align 8 %tmp, ptr noundef %18, ptr noundef %19, i32 noundef 0), !dbg !10657
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %lookup, ptr align 8 %tmp, i64 64, i1 false), !dbg !10657, !tbaa.struct !7390
  call void @llvm.lifetime.end.p0(i64 64, ptr %tmp) #10, !dbg !10657
  %rnew = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10660
  %20 = load ptr, ptr %rnew, align 8, !dbg !10660, !tbaa !7393
  %cmp18 = icmp eq ptr %20, null, !dbg !10662
  br i1 %cmp18, label %if.then19, label %if.end43, !dbg !10663

if.then19:                                        ; preds = %if.end17
  %err20 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10664
  %status = getelementptr inbounds %struct.dav_error, ptr %err20, i32 0, i32 0, !dbg !10667
  %21 = load i32, ptr %status, align 8, !dbg !10667, !tbaa !7401
  %cmp21 = icmp eq i32 %21, 400, !dbg !10668
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !10669

if.then22:                                        ; preds = %if.then19
  br label %do.body23, !dbg !10670

do.body23:                                        ; preds = %if.then22
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true24, label %cond.false25, !dbg !10672

cond.true24:                                      ; preds = %do.body23
  %22 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !10672, !tbaa !2683
  br label %cond.end26, !dbg !10672

cond.false25:                                     ; preds = %do.body23
  br label %cond.end26, !dbg !10672

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ %22, %cond.true24 ], [ -1, %cond.false25 ], !dbg !10672
  %23 = load ptr, ptr %r.addr, align 8, !dbg !10672, !tbaa !2416
  %err28 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10672
  %desc = getelementptr inbounds %struct.dav_error, ptr %err28, i32 0, i32 2, !dbg !10672
  %24 = load ptr, ptr %desc, align 8, !dbg !10672, !tbaa !7409
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 4741, i32 noundef %cond27, i32 noundef 3, i32 noundef 0, ptr noundef %23, ptr noundef @.str.305, ptr noundef %24), !dbg !10672
  br label %do.cond29, !dbg !10675

do.cond29:                                        ; preds = %cond.end26
  br label %do.end30, !dbg !10675

do.end30:                                         ; preds = %do.cond29
  store i32 400, ptr %retval, align 4, !dbg !10676
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10676

if.else:                                          ; preds = %if.then19
  %err31 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10677
  %status32 = getelementptr inbounds %struct.dav_error, ptr %err31, i32 0, i32 0, !dbg !10679
  %25 = load i32, ptr %status32, align 8, !dbg !10679, !tbaa !7401
  %cmp33 = icmp eq i32 %25, 502, !dbg !10680
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !10681

if.then34:                                        ; preds = %if.else
  %26 = load ptr, ptr %r.addr, align 8, !dbg !10682, !tbaa !2416
  %call35 = call i32 @dav_error_response(ptr noundef %26, i32 noundef 403, ptr noundef @.str.306), !dbg !10684
  store i32 %call35, ptr %retval, align 4, !dbg !10685
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10685

if.end36:                                         ; preds = %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36
  %27 = load ptr, ptr %r.addr, align 8, !dbg !10686, !tbaa !2416
  %err38 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10687
  %status39 = getelementptr inbounds %struct.dav_error, ptr %err38, i32 0, i32 0, !dbg !10688
  %28 = load i32, ptr %status39, align 8, !dbg !10688, !tbaa !7401
  %err40 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 1, !dbg !10689
  %desc41 = getelementptr inbounds %struct.dav_error, ptr %err40, i32 0, i32 2, !dbg !10690
  %29 = load ptr, ptr %desc41, align 8, !dbg !10690, !tbaa !7409
  %call42 = call i32 @dav_error_response(ptr noundef %27, i32 noundef %28, ptr noundef %29), !dbg !10691
  store i32 %call42, ptr %retval, align 4, !dbg !10692
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10692

if.end43:                                         ; preds = %if.end17
  %rnew44 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10693
  %30 = load ptr, ptr %rnew44, align 8, !dbg !10693, !tbaa !7393
  %status45 = getelementptr inbounds %struct.request_rec, ptr %30, i32 0, i32 15, !dbg !10695
  %31 = load i32, ptr %status45, align 8, !dbg !10695, !tbaa !2690
  %cmp46 = icmp ne i32 %31, 200, !dbg !10696
  br i1 %cmp46, label %if.then47, label %if.end51, !dbg !10697

if.then47:                                        ; preds = %if.end43
  %32 = load ptr, ptr %r.addr, align 8, !dbg !10698, !tbaa !2416
  %rnew48 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10700
  %33 = load ptr, ptr %rnew48, align 8, !dbg !10700, !tbaa !7393
  %status49 = getelementptr inbounds %struct.request_rec, ptr %33, i32 0, i32 15, !dbg !10701
  %34 = load i32, ptr %status49, align 8, !dbg !10701, !tbaa !2690
  %call50 = call i32 @dav_error_response(ptr noundef %32, i32 noundef %34, ptr noundef @.str.191), !dbg !10702
  store i32 %call50, ptr %retval, align 4, !dbg !10703
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10703

if.end51:                                         ; preds = %if.end43
  %rnew52 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10704
  %35 = load ptr, ptr %rnew52, align 8, !dbg !10704, !tbaa !7393
  %call53 = call ptr @dav_get_resource(ptr noundef %35, i32 noundef 0, i32 noundef 0, ptr noundef %binding), !dbg !10705
  store ptr %call53, ptr %err, align 8, !dbg !10706, !tbaa !2416
  %36 = load ptr, ptr %err, align 8, !dbg !10707, !tbaa !2416
  %cmp54 = icmp ne ptr %36, null, !dbg !10709
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !10710

if.then55:                                        ; preds = %if.end51
  %37 = load ptr, ptr %r.addr, align 8, !dbg !10711, !tbaa !2416
  %38 = load ptr, ptr %err, align 8, !dbg !10712, !tbaa !2416
  %call56 = call i32 @dav_handle_err(ptr noundef %37, ptr noundef %38, ptr noundef null), !dbg !10713
  store i32 %call56, ptr %retval, align 4, !dbg !10714
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10714

if.end57:                                         ; preds = %if.end51
  %39 = load ptr, ptr %r.addr, align 8, !dbg !10715, !tbaa !2416
  %40 = load ptr, ptr %resource, align 8, !dbg !10717, !tbaa !2416
  %41 = load ptr, ptr %binding, align 8, !dbg !10718, !tbaa !2416
  %call58 = call i32 @dav_run_method_precondition(ptr noundef %39, ptr noundef %40, ptr noundef %41, ptr noundef null, ptr noundef %err), !dbg !10719
  %cmp59 = icmp ne i32 %call58, -1, !dbg !10720
  br i1 %cmp59, label %land.lhs.true60, label %if.end64, !dbg !10721

land.lhs.true60:                                  ; preds = %if.end57
  %42 = load ptr, ptr %err, align 8, !dbg !10722, !tbaa !2416
  %tobool61 = icmp ne ptr %42, null, !dbg !10722
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !10723

if.then62:                                        ; preds = %land.lhs.true60
  %43 = load ptr, ptr %r.addr, align 8, !dbg !10724, !tbaa !2416
  %44 = load ptr, ptr %err, align 8, !dbg !10726, !tbaa !2416
  %call63 = call i32 @dav_handle_err(ptr noundef %43, ptr noundef %44, ptr noundef null), !dbg !10727
  store i32 %call63, ptr %retval, align 4, !dbg !10728
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10728

if.end64:                                         ; preds = %land.lhs.true60, %if.end57
  %45 = load ptr, ptr %resource, align 8, !dbg !10729, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %45, i32 0, i32 8, !dbg !10731
  %46 = load ptr, ptr %hooks, align 8, !dbg !10731, !tbaa !4791
  %47 = load ptr, ptr %binding, align 8, !dbg !10732, !tbaa !2416
  %hooks65 = getelementptr inbounds %struct.dav_resource, ptr %47, i32 0, i32 8, !dbg !10733
  %48 = load ptr, ptr %hooks65, align 8, !dbg !10733, !tbaa !4791
  %cmp66 = icmp ne ptr %46, %48, !dbg !10734
  br i1 %cmp66, label %if.then67, label %if.end69, !dbg !10735

if.then67:                                        ; preds = %if.end64
  %49 = load ptr, ptr %r.addr, align 8, !dbg !10736, !tbaa !2416
  %call68 = call i32 @dav_error_response(ptr noundef %49, i32 noundef 502, ptr noundef @.str.307), !dbg !10738
  store i32 %call68, ptr %retval, align 4, !dbg !10739
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10739

if.end69:                                         ; preds = %if.end64
  %50 = load ptr, ptr %r.addr, align 8, !dbg !10740, !tbaa !2416
  %call70 = call i32 @dav_get_overwrite(ptr noundef %50), !dbg !10742
  store i32 %call70, ptr %overwrite, align 4, !dbg !10743, !tbaa !2683
  %cmp71 = icmp slt i32 %call70, 0, !dbg !10744
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !10745

if.then72:                                        ; preds = %if.end69
  store i32 400, ptr %retval, align 4, !dbg !10746
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10746

if.end73:                                         ; preds = %if.end69
  %51 = load ptr, ptr %binding, align 8, !dbg !10748, !tbaa !2416
  %exists74 = getelementptr inbounds %struct.dav_resource, ptr %51, i32 0, i32 1, !dbg !10750
  %52 = load i32, ptr %exists74, align 4, !dbg !10750, !tbaa !4784
  %tobool75 = icmp ne i32 %52, 0, !dbg !10748
  br i1 %tobool75, label %land.lhs.true76, label %if.end80, !dbg !10751

land.lhs.true76:                                  ; preds = %if.end73
  %53 = load i32, ptr %overwrite, align 4, !dbg !10752, !tbaa !2683
  %tobool77 = icmp ne i32 %53, 0, !dbg !10752
  br i1 %tobool77, label %if.end80, label %if.then78, !dbg !10753

if.then78:                                        ; preds = %land.lhs.true76
  %54 = load ptr, ptr %r.addr, align 8, !dbg !10754, !tbaa !2416
  %call79 = call i32 @dav_error_response(ptr noundef %54, i32 noundef 412, ptr noundef @.str.193), !dbg !10756
  store i32 %call79, ptr %retval, align 4, !dbg !10757
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10757

if.end80:                                         ; preds = %land.lhs.true76, %if.end73
  %55 = load ptr, ptr %resource, align 8, !dbg !10758, !tbaa !2416
  %hooks81 = getelementptr inbounds %struct.dav_resource, ptr %55, i32 0, i32 8, !dbg !10760
  %56 = load ptr, ptr %hooks81, align 8, !dbg !10760, !tbaa !4791
  %is_same_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %56, i32 0, i32 3, !dbg !10761
  %57 = load ptr, ptr %is_same_resource, align 8, !dbg !10761, !tbaa !7510
  %58 = load ptr, ptr %resource, align 8, !dbg !10762, !tbaa !2416
  %59 = load ptr, ptr %binding, align 8, !dbg !10763, !tbaa !2416
  %call82 = call i32 %57(ptr noundef %58, ptr noundef %59), !dbg !10764
  %tobool83 = icmp ne i32 %call82, 0, !dbg !10764
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !10765

if.then84:                                        ; preds = %if.end80
  %60 = load ptr, ptr %r.addr, align 8, !dbg !10766, !tbaa !2416
  %call85 = call i32 @dav_error_response(ptr noundef %60, i32 noundef 403, ptr noundef @.str.194), !dbg !10768
  store i32 %call85, ptr %retval, align 4, !dbg !10769
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10769

if.end86:                                         ; preds = %if.end80
  %rnew87 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10770
  %61 = load ptr, ptr %rnew87, align 8, !dbg !10770, !tbaa !7393
  %62 = load ptr, ptr %binding, align 8, !dbg !10772, !tbaa !2416
  %call88 = call ptr @dav_validate_request(ptr noundef %61, ptr noundef %62, i32 noundef 2147483647, ptr noundef null, ptr noundef %multi_response, i32 noundef 160, ptr noundef null), !dbg !10773
  store ptr %call88, ptr %err, align 8, !dbg !10774, !tbaa !2416
  %cmp89 = icmp ne ptr %call88, null, !dbg !10775
  br i1 %cmp89, label %if.then90, label %if.end98, !dbg !10776

if.then90:                                        ; preds = %if.end86
  %63 = load ptr, ptr %r.addr, align 8, !dbg !10777, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %63, i32 0, i32 0, !dbg !10779
  %64 = load ptr, ptr %pool, align 8, !dbg !10779, !tbaa !2792
  %65 = load ptr, ptr %err, align 8, !dbg !10780, !tbaa !2416
  %status91 = getelementptr inbounds %struct.dav_error, ptr %65, i32 0, i32 0, !dbg !10781
  %66 = load i32, ptr %status91, align 8, !dbg !10781, !tbaa !2871
  %67 = load ptr, ptr %r.addr, align 8, !dbg !10782, !tbaa !2416
  %pool92 = getelementptr inbounds %struct.request_rec, ptr %67, i32 0, i32 0, !dbg !10783
  %68 = load ptr, ptr %pool92, align 8, !dbg !10783, !tbaa !2792
  %69 = load ptr, ptr %r.addr, align 8, !dbg !10784, !tbaa !2416
  %pool93 = getelementptr inbounds %struct.request_rec, ptr %69, i32 0, i32 0, !dbg !10784
  %70 = load ptr, ptr %pool93, align 8, !dbg !10784, !tbaa !2792
  %71 = load ptr, ptr %r.addr, align 8, !dbg !10784, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %71, i32 0, i32 47, !dbg !10784
  %72 = load ptr, ptr %uri, align 8, !dbg !10784, !tbaa !3183
  %call94 = call ptr @ap_escape_html2(ptr noundef %70, ptr noundef %72, i32 noundef 0), !dbg !10784
  %call95 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %68, ptr noundef @.str.308, ptr noundef %call94), !dbg !10785
  %73 = load ptr, ptr %err, align 8, !dbg !10786, !tbaa !2416
  %call96 = call ptr @dav_push_error(ptr noundef %64, i32 noundef %66, i32 noundef 0, ptr noundef %call95, ptr noundef %73), !dbg !10787
  store ptr %call96, ptr %err, align 8, !dbg !10788, !tbaa !2416
  %74 = load ptr, ptr %r.addr, align 8, !dbg !10789, !tbaa !2416
  %75 = load ptr, ptr %err, align 8, !dbg !10790, !tbaa !2416
  %76 = load ptr, ptr %multi_response, align 8, !dbg !10791, !tbaa !2416
  %call97 = call i32 @dav_handle_err(ptr noundef %74, ptr noundef %75, ptr noundef %76), !dbg !10792
  store i32 %call97, ptr %retval, align 4, !dbg !10793
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10793

if.end98:                                         ; preds = %if.end86
  %77 = load ptr, ptr %resource, align 8, !dbg !10794, !tbaa !2416
  %collection = getelementptr inbounds %struct.dav_resource, ptr %77, i32 0, i32 2, !dbg !10796
  %78 = load i32, ptr %collection, align 8, !dbg !10796, !tbaa !4974
  %tobool99 = icmp ne i32 %78, 0, !dbg !10794
  br i1 %tobool99, label %land.lhs.true100, label %if.end106, !dbg !10797

land.lhs.true100:                                 ; preds = %if.end98
  %79 = load ptr, ptr %resource, align 8, !dbg !10798, !tbaa !2416
  %hooks101 = getelementptr inbounds %struct.dav_resource, ptr %79, i32 0, i32 8, !dbg !10799
  %80 = load ptr, ptr %hooks101, align 8, !dbg !10799, !tbaa !4791
  %is_parent_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %80, i32 0, i32 4, !dbg !10800
  %81 = load ptr, ptr %is_parent_resource, align 8, !dbg !10800, !tbaa !7617
  %82 = load ptr, ptr %resource, align 8, !dbg !10801, !tbaa !2416
  %83 = load ptr, ptr %binding, align 8, !dbg !10802, !tbaa !2416
  %call102 = call i32 %81(ptr noundef %82, ptr noundef %83), !dbg !10803
  %tobool103 = icmp ne i32 %call102, 0, !dbg !10803
  br i1 %tobool103, label %if.then104, label %if.end106, !dbg !10804

if.then104:                                       ; preds = %land.lhs.true100
  %84 = load ptr, ptr %r.addr, align 8, !dbg !10805, !tbaa !2416
  %call105 = call i32 @dav_error_response(ptr noundef %84, i32 noundef 403, ptr noundef @.str.199), !dbg !10807
  store i32 %call105, ptr %retval, align 4, !dbg !10808
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10808

if.end106:                                        ; preds = %land.lhs.true100, %if.end98
  %85 = load ptr, ptr %resource, align 8, !dbg !10809, !tbaa !2416
  %collection107 = getelementptr inbounds %struct.dav_resource, ptr %85, i32 0, i32 2, !dbg !10811
  %86 = load i32, ptr %collection107, align 8, !dbg !10811, !tbaa !4974
  %tobool108 = icmp ne i32 %86, 0, !dbg !10809
  br i1 %tobool108, label %land.lhs.true109, label %if.end116, !dbg !10812

land.lhs.true109:                                 ; preds = %if.end106
  %87 = load ptr, ptr %resource, align 8, !dbg !10813, !tbaa !2416
  %hooks110 = getelementptr inbounds %struct.dav_resource, ptr %87, i32 0, i32 8, !dbg !10814
  %88 = load ptr, ptr %hooks110, align 8, !dbg !10814, !tbaa !4791
  %is_parent_resource111 = getelementptr inbounds %struct.dav_hooks_repository, ptr %88, i32 0, i32 4, !dbg !10815
  %89 = load ptr, ptr %is_parent_resource111, align 8, !dbg !10815, !tbaa !7617
  %90 = load ptr, ptr %binding, align 8, !dbg !10816, !tbaa !2416
  %91 = load ptr, ptr %resource, align 8, !dbg !10817, !tbaa !2416
  %call112 = call i32 %89(ptr noundef %90, ptr noundef %91), !dbg !10818
  %tobool113 = icmp ne i32 %call112, 0, !dbg !10818
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !10819

if.then114:                                       ; preds = %land.lhs.true109
  %92 = load ptr, ptr %r.addr, align 8, !dbg !10820, !tbaa !2416
  %call115 = call i32 @dav_error_response(ptr noundef %92, i32 noundef 403, ptr noundef @.str.200), !dbg !10822
  store i32 %call115, ptr %retval, align 4, !dbg !10823
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10823

if.end116:                                        ; preds = %land.lhs.true109, %if.end106
  %93 = load ptr, ptr %r.addr, align 8, !dbg !10824, !tbaa !2416
  %94 = load ptr, ptr %binding, align 8, !dbg !10826, !tbaa !2416
  %call117 = call ptr @dav_auto_checkout(ptr noundef %93, ptr noundef %94, i32 noundef 1, ptr noundef %av_info), !dbg !10827
  store ptr %call117, ptr %err, align 8, !dbg !10828, !tbaa !2416
  %cmp118 = icmp ne ptr %call117, null, !dbg !10829
  br i1 %cmp118, label %if.then119, label %if.end121, !dbg !10830

if.then119:                                       ; preds = %if.end116
  %95 = load ptr, ptr %r.addr, align 8, !dbg !10831, !tbaa !2416
  %96 = load ptr, ptr %err, align 8, !dbg !10833, !tbaa !2416
  %call120 = call i32 @dav_handle_err(ptr noundef %95, ptr noundef %96, ptr noundef null), !dbg !10834
  store i32 %call120, ptr %retval, align 4, !dbg !10835
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10835

if.end121:                                        ; preds = %if.end116
  %97 = load ptr, ptr %binding, align 8, !dbg !10836, !tbaa !2416
  %exists122 = getelementptr inbounds %struct.dav_resource, ptr %97, i32 0, i32 1, !dbg !10838
  %98 = load i32, ptr %exists122, align 4, !dbg !10838, !tbaa !4784
  %tobool123 = icmp ne i32 %98, 0, !dbg !10836
  br i1 %tobool123, label %if.then124, label %if.end127, !dbg !10839

if.then124:                                       ; preds = %if.end121
  %99 = load ptr, ptr %resource, align 8, !dbg !10840, !tbaa !2416
  %hooks125 = getelementptr inbounds %struct.dav_resource, ptr %99, i32 0, i32 8, !dbg !10841
  %100 = load ptr, ptr %hooks125, align 8, !dbg !10841, !tbaa !4791
  %remove_resource = getelementptr inbounds %struct.dav_hooks_repository, ptr %100, i32 0, i32 14, !dbg !10842
  %101 = load ptr, ptr %remove_resource, align 8, !dbg !10842, !tbaa !5524
  %102 = load ptr, ptr %binding, align 8, !dbg !10843, !tbaa !2416
  %call126 = call ptr %101(ptr noundef %102, ptr noundef %multi_response), !dbg !10844
  store ptr %call126, ptr %err, align 8, !dbg !10845, !tbaa !2416
  br label %if.end127, !dbg !10846

if.end127:                                        ; preds = %if.then124, %if.end121
  %103 = load ptr, ptr %err, align 8, !dbg !10847, !tbaa !2416
  %cmp128 = icmp eq ptr %103, null, !dbg !10849
  br i1 %cmp128, label %if.then129, label %if.end131, !dbg !10850

if.then129:                                       ; preds = %if.end127
  %104 = load ptr, ptr %binding_hooks, align 8, !dbg !10851, !tbaa !2416
  %bind_resource = getelementptr inbounds %struct.dav_hooks_binding, ptr %104, i32 0, i32 1, !dbg !10853
  %105 = load ptr, ptr %bind_resource, align 8, !dbg !10853, !tbaa !10854
  %106 = load ptr, ptr %resource, align 8, !dbg !10855, !tbaa !2416
  %107 = load ptr, ptr %binding, align 8, !dbg !10856, !tbaa !2416
  %call130 = call ptr %105(ptr noundef %106, ptr noundef %107), !dbg !10857
  store ptr %call130, ptr %err, align 8, !dbg !10858, !tbaa !2416
  br label %if.end131, !dbg !10859

if.end131:                                        ; preds = %if.then129, %if.end127
  %108 = load ptr, ptr %r.addr, align 8, !dbg !10860, !tbaa !2416
  %109 = load ptr, ptr %err, align 8, !dbg !10861, !tbaa !2416
  %cmp132 = icmp ne ptr %109, null, !dbg !10862
  %conv = zext i1 %cmp132 to i32, !dbg !10862
  %call133 = call ptr @dav_auto_checkin(ptr noundef %108, ptr noundef null, i32 noundef %conv, i32 noundef 0, ptr noundef %av_info), !dbg !10863
  store ptr %call133, ptr %err2, align 8, !dbg !10864, !tbaa !2416
  %110 = load ptr, ptr %err, align 8, !dbg !10865, !tbaa !2416
  %cmp134 = icmp ne ptr %110, null, !dbg !10867
  br i1 %cmp134, label %if.then136, label %if.end146, !dbg !10868

if.then136:                                       ; preds = %if.end131
  %111 = load ptr, ptr %r.addr, align 8, !dbg !10869, !tbaa !2416
  %pool137 = getelementptr inbounds %struct.request_rec, ptr %111, i32 0, i32 0, !dbg !10871
  %112 = load ptr, ptr %pool137, align 8, !dbg !10871, !tbaa !2792
  %113 = load ptr, ptr %err, align 8, !dbg !10872, !tbaa !2416
  %status138 = getelementptr inbounds %struct.dav_error, ptr %113, i32 0, i32 0, !dbg !10873
  %114 = load i32, ptr %status138, align 8, !dbg !10873, !tbaa !2871
  %115 = load ptr, ptr %r.addr, align 8, !dbg !10874, !tbaa !2416
  %pool139 = getelementptr inbounds %struct.request_rec, ptr %115, i32 0, i32 0, !dbg !10875
  %116 = load ptr, ptr %pool139, align 8, !dbg !10875, !tbaa !2792
  %117 = load ptr, ptr %r.addr, align 8, !dbg !10876, !tbaa !2416
  %pool140 = getelementptr inbounds %struct.request_rec, ptr %117, i32 0, i32 0, !dbg !10876
  %118 = load ptr, ptr %pool140, align 8, !dbg !10876, !tbaa !2792
  %119 = load ptr, ptr %r.addr, align 8, !dbg !10876, !tbaa !2416
  %uri141 = getelementptr inbounds %struct.request_rec, ptr %119, i32 0, i32 47, !dbg !10876
  %120 = load ptr, ptr %uri141, align 8, !dbg !10876, !tbaa !3183
  %call142 = call ptr @ap_escape_html2(ptr noundef %118, ptr noundef %120, i32 noundef 0), !dbg !10876
  %call143 = call ptr (ptr, ptr, ...) @apr_psprintf(ptr noundef %116, ptr noundef @.str.309, ptr noundef %call142), !dbg !10877
  %121 = load ptr, ptr %err, align 8, !dbg !10878, !tbaa !2416
  %call144 = call ptr @dav_push_error(ptr noundef %112, i32 noundef %114, i32 noundef 0, ptr noundef %call143, ptr noundef %121), !dbg !10879
  store ptr %call144, ptr %err, align 8, !dbg !10880, !tbaa !2416
  %122 = load ptr, ptr %r.addr, align 8, !dbg !10881, !tbaa !2416
  %123 = load ptr, ptr %err, align 8, !dbg !10882, !tbaa !2416
  %124 = load ptr, ptr %multi_response, align 8, !dbg !10883, !tbaa !2416
  %call145 = call i32 @dav_handle_err(ptr noundef %122, ptr noundef %123, ptr noundef %124), !dbg !10884
  store i32 %call145, ptr %retval, align 4, !dbg !10885
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10885

if.end146:                                        ; preds = %if.end131
  %125 = load ptr, ptr %err2, align 8, !dbg !10886, !tbaa !2416
  %cmp147 = icmp ne ptr %125, null, !dbg !10888
  br i1 %cmp147, label %if.then149, label %if.end153, !dbg !10889

if.then149:                                       ; preds = %if.end146
  %126 = load ptr, ptr %r.addr, align 8, !dbg !10890, !tbaa !2416
  %pool150 = getelementptr inbounds %struct.request_rec, ptr %126, i32 0, i32 0, !dbg !10892
  %127 = load ptr, ptr %pool150, align 8, !dbg !10892, !tbaa !2792
  %128 = load ptr, ptr %err2, align 8, !dbg !10893, !tbaa !2416
  %status151 = getelementptr inbounds %struct.dav_error, ptr %128, i32 0, i32 0, !dbg !10894
  %129 = load i32, ptr %status151, align 8, !dbg !10894, !tbaa !2871
  %130 = load ptr, ptr %err2, align 8, !dbg !10895, !tbaa !2416
  %call152 = call ptr @dav_push_error(ptr noundef %127, i32 noundef %129, i32 noundef 0, ptr noundef @.str.310, ptr noundef %130), !dbg !10896
  store ptr %call152, ptr %err, align 8, !dbg !10897, !tbaa !2416
  %131 = load ptr, ptr %r.addr, align 8, !dbg !10898, !tbaa !2416
  %132 = load ptr, ptr %err, align 8, !dbg !10899, !tbaa !2416
  call void @dav_log_err(ptr noundef %131, ptr noundef %132, i32 noundef 4), !dbg !10900
  br label %if.end153, !dbg !10901

if.end153:                                        ; preds = %if.then149, %if.end146
  %133 = load ptr, ptr %r.addr, align 8, !dbg !10902, !tbaa !2416
  %rnew154 = getelementptr inbounds %struct.dav_lookup_result, ptr %lookup, i32 0, i32 0, !dbg !10903
  %134 = load ptr, ptr %rnew154, align 8, !dbg !10903, !tbaa !7393
  %unparsed_uri = getelementptr inbounds %struct.request_rec, ptr %134, i32 0, i32 46, !dbg !10904
  %135 = load ptr, ptr %unparsed_uri, align 8, !dbg !10904, !tbaa !7945
  %call155 = call i32 @dav_created(ptr noundef %133, ptr noundef %135, ptr noundef @.str.311, i32 noundef 0), !dbg !10905
  store i32 %call155, ptr %retval, align 4, !dbg !10906
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10906

cleanup:                                          ; preds = %if.end153, %if.then136, %if.then119, %if.then114, %if.then104, %if.then90, %if.then84, %if.then78, %if.then72, %if.then67, %if.then62, %if.then55, %if.then47, %if.end37, %if.then34, %do.end30, %do.end, %if.then12, %if.then8, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %overwrite) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 64, ptr %lookup) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_response) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 8, ptr %err2) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 8, ptr %dest) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 8, ptr %binding_hooks) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 24, ptr %av_info) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 8, ptr %binding) #10, !dbg !10907
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !10907
  %136 = load i32, ptr %retval, align 4, !dbg !10907
  ret i32 %136, !dbg !10907
}

; Function Attrs: nounwind uwtable
define internal i32 @dav_method_search(ptr noundef %r) #0 !dbg !10908 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %search_hooks = alloca ptr, align 8
  %resource = alloca ptr, align 8
  %err = alloca ptr, align 8
  %multi_status = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !10910, metadata !DIExpression()), !dbg !10915
  call void @llvm.lifetime.start.p0(i64 8, ptr %search_hooks) #10, !dbg !10916
  tail call void @llvm.dbg.declare(metadata ptr %search_hooks, metadata !10911, metadata !DIExpression()), !dbg !10917
  %0 = load ptr, ptr %r.addr, align 8, !dbg !10918, !tbaa !2416
  %call = call ptr @dav_get_search_hooks(ptr noundef %0), !dbg !10918
  store ptr %call, ptr %search_hooks, align 8, !dbg !10917, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %resource) #10, !dbg !10919
  tail call void @llvm.dbg.declare(metadata ptr %resource, metadata !10912, metadata !DIExpression()), !dbg !10920
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !10921
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !10913, metadata !DIExpression()), !dbg !10922
  call void @llvm.lifetime.start.p0(i64 8, ptr %multi_status) #10, !dbg !10923
  tail call void @llvm.dbg.declare(metadata ptr %multi_status, metadata !10914, metadata !DIExpression()), !dbg !10924
  %1 = load ptr, ptr %search_hooks, align 8, !dbg !10925, !tbaa !2416
  %cmp = icmp eq ptr %1, null, !dbg !10927
  br i1 %cmp, label %if.then, label %if.end, !dbg !10928

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !10929
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10929

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %r.addr, align 8, !dbg !10930, !tbaa !2416
  %call1 = call ptr @dav_get_resource(ptr noundef %2, i32 noundef 1, i32 noundef 0, ptr noundef %resource), !dbg !10931
  store ptr %call1, ptr %err, align 8, !dbg !10932, !tbaa !2416
  %3 = load ptr, ptr %err, align 8, !dbg !10933, !tbaa !2416
  %cmp2 = icmp ne ptr %3, null, !dbg !10935
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10936

if.then3:                                         ; preds = %if.end
  %4 = load ptr, ptr %r.addr, align 8, !dbg !10937, !tbaa !2416
  %5 = load ptr, ptr %err, align 8, !dbg !10938, !tbaa !2416
  %call4 = call i32 @dav_handle_err(ptr noundef %4, ptr noundef %5, ptr noundef null), !dbg !10939
  store i32 %call4, ptr %retval, align 4, !dbg !10940
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10940

if.end5:                                          ; preds = %if.end
  %6 = load ptr, ptr %resource, align 8, !dbg !10941, !tbaa !2416
  %exists = getelementptr inbounds %struct.dav_resource, ptr %6, i32 0, i32 1, !dbg !10943
  %7 = load i32, ptr %exists, align 4, !dbg !10943, !tbaa !4784
  %tobool = icmp ne i32 %7, 0, !dbg !10941
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !10944

if.then6:                                         ; preds = %if.end5
  store i32 404, ptr %retval, align 4, !dbg !10945
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10945

if.end7:                                          ; preds = %if.end5
  %8 = load ptr, ptr %resource, align 8, !dbg !10947, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_resource, ptr %8, i32 0, i32 8, !dbg !10949
  %9 = load ptr, ptr %hooks, align 8, !dbg !10949, !tbaa !4791
  %set_headers = getelementptr inbounds %struct.dav_hooks_repository, ptr %9, i32 0, i32 9, !dbg !10950
  %10 = load ptr, ptr %set_headers, align 8, !dbg !10950, !tbaa !4793
  %11 = load ptr, ptr %r.addr, align 8, !dbg !10951, !tbaa !2416
  %12 = load ptr, ptr %resource, align 8, !dbg !10952, !tbaa !2416
  %call8 = call ptr %10(ptr noundef %11, ptr noundef %12), !dbg !10953
  store ptr %call8, ptr %err, align 8, !dbg !10954, !tbaa !2416
  %cmp9 = icmp ne ptr %call8, null, !dbg !10955
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !10956

if.then10:                                        ; preds = %if.end7
  %13 = load ptr, ptr %r.addr, align 8, !dbg !10957, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %13, i32 0, i32 0, !dbg !10959
  %14 = load ptr, ptr %pool, align 8, !dbg !10959, !tbaa !2792
  %15 = load ptr, ptr %err, align 8, !dbg !10960, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %15, i32 0, i32 0, !dbg !10961
  %16 = load i32, ptr %status, align 8, !dbg !10961, !tbaa !2871
  %17 = load ptr, ptr %err, align 8, !dbg !10962, !tbaa !2416
  %call11 = call ptr @dav_push_error(ptr noundef %14, i32 noundef %16, i32 noundef 0, ptr noundef @.str.76, ptr noundef %17), !dbg !10963
  store ptr %call11, ptr %err, align 8, !dbg !10964, !tbaa !2416
  %18 = load ptr, ptr %r.addr, align 8, !dbg !10965, !tbaa !2416
  %19 = load ptr, ptr %err, align 8, !dbg !10966, !tbaa !2416
  %call12 = call i32 @dav_handle_err(ptr noundef %18, ptr noundef %19, ptr noundef null), !dbg !10967
  store i32 %call12, ptr %retval, align 4, !dbg !10968
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10968

if.end13:                                         ; preds = %if.end7
  %20 = load ptr, ptr %r.addr, align 8, !dbg !10969, !tbaa !2416
  %header_only = getelementptr inbounds %struct.request_rec, ptr %20, i32 0, i32 9, !dbg !10971
  %21 = load i32, ptr %header_only, align 8, !dbg !10971, !tbaa !4824
  %tobool14 = icmp ne i32 %21, 0, !dbg !10969
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10972

if.then15:                                        ; preds = %if.end13
  store i32 -2, ptr %retval, align 4, !dbg !10973
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10973

if.end16:                                         ; preds = %if.end13
  %22 = load ptr, ptr %search_hooks, align 8, !dbg !10975, !tbaa !2416
  %search_resource = getelementptr inbounds %struct.dav_hooks_search, ptr %22, i32 0, i32 1, !dbg !10977
  %23 = load ptr, ptr %search_resource, align 8, !dbg !10977, !tbaa !10978
  %24 = load ptr, ptr %r.addr, align 8, !dbg !10979, !tbaa !2416
  %call17 = call ptr %23(ptr noundef %24, ptr noundef %multi_status), !dbg !10980
  store ptr %call17, ptr %err, align 8, !dbg !10981, !tbaa !2416
  %cmp18 = icmp ne ptr %call17, null, !dbg !10982
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10983

if.then19:                                        ; preds = %if.end16
  %25 = load ptr, ptr %r.addr, align 8, !dbg !10984, !tbaa !2416
  %26 = load ptr, ptr %err, align 8, !dbg !10986, !tbaa !2416
  %call20 = call i32 @dav_handle_err(ptr noundef %25, ptr noundef %26, ptr noundef null), !dbg !10987
  store i32 %call20, ptr %retval, align 4, !dbg !10988
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10988

if.end21:                                         ; preds = %if.end16
  %27 = load ptr, ptr %r.addr, align 8, !dbg !10989, !tbaa !2416
  %28 = load ptr, ptr %multi_status, align 8, !dbg !10990, !tbaa !2416
  call void @dav_send_multistatus(ptr noundef %27, i32 noundef 207, ptr noundef %28, ptr noundef null), !dbg !10991
  store i32 -2, ptr %retval, align 4, !dbg !10992
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10992

cleanup:                                          ; preds = %if.end21, %if.then19, %if.then15, %if.then10, %if.then6, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %multi_status) #10, !dbg !10993
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !10993
  call void @llvm.lifetime.end.p0(i64 8, ptr %resource) #10, !dbg !10993
  call void @llvm.lifetime.end.p0(i64 8, ptr %search_hooks) #10, !dbg !10993
  %29 = load i32, ptr %retval, align 4, !dbg !10993
  ret i32 %29, !dbg !10993
}

declare !dbg !10994 i32 @ap_rvputs(ptr noundef, ...) #2

declare !dbg !10997 ptr @ap_psignature(ptr noundef, ptr noundef) #2

declare !dbg !11000 i32 @ap_meets_conditions(ptr noundef) #2

declare !dbg !11001 i32 @dav_get_resource_state(ptr noundef, ptr noundef) #2

declare !dbg !11004 ptr @dav_validate_request(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_parse_range(ptr noundef %r, ptr noundef %range_start, ptr noundef %range_end) #0 !dbg !11007 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %range_start.addr = alloca ptr, align 8
  %range_end.addr = alloca ptr, align 8
  %range_c = alloca ptr, align 8
  %range = alloca ptr, align 8
  %dash = alloca ptr, align 8
  %slash = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %dummy = alloca i64, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !11012, metadata !DIExpression()), !dbg !11022
  store ptr %range_start, ptr %range_start.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %range_start.addr, metadata !11013, metadata !DIExpression()), !dbg !11023
  store ptr %range_end, ptr %range_end.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %range_end.addr, metadata !11014, metadata !DIExpression()), !dbg !11024
  call void @llvm.lifetime.start.p0(i64 8, ptr %range_c) #10, !dbg !11025
  tail call void @llvm.dbg.declare(metadata ptr %range_c, metadata !11015, metadata !DIExpression()), !dbg !11026
  call void @llvm.lifetime.start.p0(i64 8, ptr %range) #10, !dbg !11027
  tail call void @llvm.dbg.declare(metadata ptr %range, metadata !11016, metadata !DIExpression()), !dbg !11028
  call void @llvm.lifetime.start.p0(i64 8, ptr %dash) #10, !dbg !11029
  tail call void @llvm.dbg.declare(metadata ptr %dash, metadata !11017, metadata !DIExpression()), !dbg !11030
  call void @llvm.lifetime.start.p0(i64 8, ptr %slash) #10, !dbg !11031
  tail call void @llvm.dbg.declare(metadata ptr %slash, metadata !11018, metadata !DIExpression()), !dbg !11032
  %0 = load ptr, ptr %r.addr, align 8, !dbg !11033, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 34, !dbg !11034
  %1 = load ptr, ptr %headers_in, align 8, !dbg !11034, !tbaa !3088
  %call = call ptr @apr_table_get(ptr noundef %1, ptr noundef @.str.88), !dbg !11035
  store ptr %call, ptr %range_c, align 8, !dbg !11036, !tbaa !2416
  %2 = load ptr, ptr %range_c, align 8, !dbg !11037, !tbaa !2416
  %cmp = icmp eq ptr %2, null, !dbg !11039
  br i1 %cmp, label %if.then, label %if.end, !dbg !11040

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !11041
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup34, !dbg !11041

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %r.addr, align 8, !dbg !11042, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %3, i32 0, i32 0, !dbg !11043
  %4 = load ptr, ptr %pool, align 8, !dbg !11043, !tbaa !2792
  %5 = load ptr, ptr %range_c, align 8, !dbg !11044, !tbaa !2416
  %call1 = call ptr @apr_pstrdup(ptr noundef %4, ptr noundef %5), !dbg !11045
  store ptr %call1, ptr %range, align 8, !dbg !11046, !tbaa !2416
  %6 = load ptr, ptr %range, align 8, !dbg !11047, !tbaa !2416
  %call2 = call i32 @ap_cstr_casecmpn(ptr noundef %6, ptr noundef @.str.89, i64 noundef 6), !dbg !11049
  %cmp3 = icmp ne i32 %call2, 0, !dbg !11050
  br i1 %cmp3, label %if.then10, label %lor.lhs.false, !dbg !11051

lor.lhs.false:                                    ; preds = %if.end
  %7 = load ptr, ptr %range, align 8, !dbg !11052, !tbaa !2416
  %add.ptr = getelementptr inbounds i8, ptr %7, i64 6, !dbg !11052
  %call4 = call ptr @strchr(ptr noundef %add.ptr, i32 noundef 45) #11, !dbg !11052
  store ptr %call4, ptr %dash, align 8, !dbg !11053, !tbaa !2416
  %cmp5 = icmp eq ptr %call4, null, !dbg !11054
  br i1 %cmp5, label %if.then10, label %lor.lhs.false6, !dbg !11055

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load ptr, ptr %range, align 8, !dbg !11056, !tbaa !2416
  %add.ptr7 = getelementptr inbounds i8, ptr %8, i64 6, !dbg !11056
  %call8 = call ptr @strchr(ptr noundef %add.ptr7, i32 noundef 47) #11, !dbg !11056
  store ptr %call8, ptr %slash, align 8, !dbg !11057, !tbaa !2416
  %cmp9 = icmp eq ptr %call8, null, !dbg !11058
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !11059

if.then10:                                        ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end
  store i32 -1, ptr %retval, align 4, !dbg !11060
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup34, !dbg !11060

if.end11:                                         ; preds = %lor.lhs.false6
  %9 = load ptr, ptr %slash, align 8, !dbg !11062, !tbaa !2416
  %incdec.ptr = getelementptr inbounds i8, ptr %9, i32 1, !dbg !11062
  store ptr %incdec.ptr, ptr %slash, align 8, !dbg !11062, !tbaa !2416
  store i8 0, ptr %9, align 1, !dbg !11063, !tbaa !2961
  %10 = load ptr, ptr %dash, align 8, !dbg !11064, !tbaa !2416
  %incdec.ptr12 = getelementptr inbounds i8, ptr %10, i32 1, !dbg !11064
  store ptr %incdec.ptr12, ptr %dash, align 8, !dbg !11064, !tbaa !2416
  store i8 0, ptr %10, align 1, !dbg !11065, !tbaa !2961
  %11 = load ptr, ptr %range_start.addr, align 8, !dbg !11066, !tbaa !2416
  %12 = load ptr, ptr %range, align 8, !dbg !11068, !tbaa !2416
  %add.ptr13 = getelementptr inbounds i8, ptr %12, i64 6, !dbg !11069
  %call14 = call i32 @ap_parse_strict_length(ptr noundef %11, ptr noundef %add.ptr13), !dbg !11070
  %tobool = icmp ne i32 %call14, 0, !dbg !11070
  br i1 %tobool, label %if.end16, label %if.then15, !dbg !11071

if.then15:                                        ; preds = %if.end11
  store i32 -1, ptr %retval, align 4, !dbg !11072
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup34, !dbg !11072

if.end16:                                         ; preds = %if.end11
  %13 = load ptr, ptr %range_end.addr, align 8, !dbg !11074, !tbaa !2416
  %14 = load ptr, ptr %dash, align 8, !dbg !11076, !tbaa !2416
  %call17 = call i32 @ap_parse_strict_length(ptr noundef %13, ptr noundef %14), !dbg !11077
  %tobool18 = icmp ne i32 %call17, 0, !dbg !11077
  br i1 %tobool18, label %lor.lhs.false19, label %if.then21, !dbg !11078

lor.lhs.false19:                                  ; preds = %if.end16
  %15 = load ptr, ptr %range_end.addr, align 8, !dbg !11079, !tbaa !2416
  %16 = load i64, ptr %15, align 8, !dbg !11080, !tbaa !3569
  %17 = load ptr, ptr %range_start.addr, align 8, !dbg !11081, !tbaa !2416
  %18 = load i64, ptr %17, align 8, !dbg !11082, !tbaa !3569
  %cmp20 = icmp slt i64 %16, %18, !dbg !11083
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11084

if.then21:                                        ; preds = %lor.lhs.false19, %if.end16
  store i32 -1, ptr %retval, align 4, !dbg !11085
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup34, !dbg !11085

if.end22:                                         ; preds = %lor.lhs.false19
  %19 = load ptr, ptr %slash, align 8, !dbg !11087, !tbaa !2416
  %20 = load i8, ptr %19, align 1, !dbg !11088, !tbaa !2961
  %conv = sext i8 %20 to i32, !dbg !11088
  %cmp23 = icmp ne i32 %conv, 42, !dbg !11089
  br i1 %cmp23, label %if.then25, label %if.end33, !dbg !11090

if.then25:                                        ; preds = %if.end22
  call void @llvm.lifetime.start.p0(i64 8, ptr %dummy) #10, !dbg !11091
  tail call void @llvm.dbg.declare(metadata ptr %dummy, metadata !11019, metadata !DIExpression()), !dbg !11092
  %21 = load ptr, ptr %slash, align 8, !dbg !11093, !tbaa !2416
  %call26 = call i32 @ap_parse_strict_length(ptr noundef %dummy, ptr noundef %21), !dbg !11095
  %tobool27 = icmp ne i32 %call26, 0, !dbg !11095
  br i1 %tobool27, label %lor.lhs.false28, label %if.then31, !dbg !11096

lor.lhs.false28:                                  ; preds = %if.then25
  %22 = load i64, ptr %dummy, align 8, !dbg !11097, !tbaa !3569
  %23 = load ptr, ptr %range_end.addr, align 8, !dbg !11098, !tbaa !2416
  %24 = load i64, ptr %23, align 8, !dbg !11099, !tbaa !3569
  %cmp29 = icmp sle i64 %22, %24, !dbg !11100
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !11101

if.then31:                                        ; preds = %lor.lhs.false28, %if.then25
  store i32 -1, ptr %retval, align 4, !dbg !11102
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11102

if.end32:                                         ; preds = %lor.lhs.false28
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11104
  br label %cleanup, !dbg !11104

cleanup:                                          ; preds = %if.end32, %if.then31
  call void @llvm.lifetime.end.p0(i64 8, ptr %dummy) #10, !dbg !11104
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup34 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end33, !dbg !11105

if.end33:                                         ; preds = %cleanup.cont, %if.end22
  store i32 1, ptr %retval, align 4, !dbg !11106
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup34, !dbg !11106

cleanup34:                                        ; preds = %if.end33, %cleanup, %if.then21, %if.then15, %if.then10, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %slash) #10, !dbg !11107
  call void @llvm.lifetime.end.p0(i64 8, ptr %dash) #10, !dbg !11107
  call void @llvm.lifetime.end.p0(i64 8, ptr %range) #10, !dbg !11107
  call void @llvm.lifetime.end.p0(i64 8, ptr %range_c) #10, !dbg !11107
  %25 = load i32, ptr %retval, align 4, !dbg !11107
  ret i32 %25, !dbg !11107
}

declare !dbg !11108 ptr @dav_auto_checkout(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

declare !dbg !11112 i32 @ap_get_brigade(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i64 noundef) #2

declare !dbg !11113 i32 @ap_map_http_request_error(i32 noundef, i32 noundef) #2

declare !dbg !11116 i32 @apr_brigade_cleanup(ptr noundef) #2

declare !dbg !11117 i32 @apr_brigade_destroy(ptr noundef) #2

declare !dbg !11120 ptr @dav_join_error(ptr noundef, ptr noundef) #2

declare !dbg !11123 ptr @dav_auto_checkin(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

declare !dbg !11126 ptr @dav_notify_created(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_created(ptr noundef %r, ptr noundef %locn, ptr noundef %what, i32 noundef %replaced) #0 !dbg !11129 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %locn.addr = alloca ptr, align 8
  %what.addr = alloca ptr, align 8
  %replaced.addr = alloca i32, align 4
  %body = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !11133, metadata !DIExpression()), !dbg !11138
  store ptr %locn, ptr %locn.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %locn.addr, metadata !11134, metadata !DIExpression()), !dbg !11139
  store ptr %what, ptr %what.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %what.addr, metadata !11135, metadata !DIExpression()), !dbg !11140
  store i32 %replaced, ptr %replaced.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %replaced.addr, metadata !11136, metadata !DIExpression()), !dbg !11141
  call void @llvm.lifetime.start.p0(i64 8, ptr %body) #10, !dbg !11142
  tail call void @llvm.dbg.declare(metadata ptr %body, metadata !11137, metadata !DIExpression()), !dbg !11143
  %0 = load ptr, ptr %locn.addr, align 8, !dbg !11144, !tbaa !2416
  %cmp = icmp eq ptr %0, null, !dbg !11146
  br i1 %cmp, label %if.then, label %if.end, !dbg !11147

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %r.addr, align 8, !dbg !11148, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %1, i32 0, i32 0, !dbg !11148
  %2 = load ptr, ptr %pool, align 8, !dbg !11148, !tbaa !2792
  %3 = load ptr, ptr %r.addr, align 8, !dbg !11148, !tbaa !2416
  %uri = getelementptr inbounds %struct.request_rec, ptr %3, i32 0, i32 47, !dbg !11148
  %4 = load ptr, ptr %uri, align 8, !dbg !11148, !tbaa !3183
  %call = call ptr @ap_os_escape_path(ptr noundef %2, ptr noundef %4, i32 noundef 1), !dbg !11148
  store ptr %call, ptr %locn.addr, align 8, !dbg !11150, !tbaa !2416
  br label %if.end, !dbg !11151

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, ptr %replaced.addr, align 4, !dbg !11152, !tbaa !2683
  %tobool = icmp ne i32 %5, 0, !dbg !11152
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !11154

if.then1:                                         ; preds = %if.end
  store i32 204, ptr %retval, align 4, !dbg !11155
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11155

if.end2:                                          ; preds = %if.end
  %6 = load ptr, ptr %r.addr, align 8, !dbg !11157, !tbaa !2416
  %headers_out = getelementptr inbounds %struct.request_rec, ptr %6, i32 0, i32 35, !dbg !11158
  %7 = load ptr, ptr %headers_out, align 8, !dbg !11158, !tbaa !5817
  %8 = load ptr, ptr %r.addr, align 8, !dbg !11159, !tbaa !2416
  %pool3 = getelementptr inbounds %struct.request_rec, ptr %8, i32 0, i32 0, !dbg !11160
  %9 = load ptr, ptr %pool3, align 8, !dbg !11160, !tbaa !2792
  %10 = load ptr, ptr %locn.addr, align 8, !dbg !11161, !tbaa !2416
  %11 = load ptr, ptr %r.addr, align 8, !dbg !11162, !tbaa !2416
  %call4 = call ptr @ap_construct_url(ptr noundef %9, ptr noundef %10, ptr noundef %11), !dbg !11163
  call void @apr_table_setn(ptr noundef %7, ptr noundef @.str.90, ptr noundef %call4), !dbg !11164
  %12 = load ptr, ptr %r.addr, align 8, !dbg !11165, !tbaa !2416
  %pool5 = getelementptr inbounds %struct.request_rec, ptr %12, i32 0, i32 0, !dbg !11166
  %13 = load ptr, ptr %pool5, align 8, !dbg !11166, !tbaa !2792
  %14 = load ptr, ptr %what.addr, align 8, !dbg !11167, !tbaa !2416
  %15 = load ptr, ptr %r.addr, align 8, !dbg !11168, !tbaa !2416
  %pool6 = getelementptr inbounds %struct.request_rec, ptr %15, i32 0, i32 0, !dbg !11168
  %16 = load ptr, ptr %pool6, align 8, !dbg !11168, !tbaa !2792
  %17 = load ptr, ptr %locn.addr, align 8, !dbg !11168, !tbaa !2416
  %call7 = call ptr @ap_escape_html2(ptr noundef %16, ptr noundef %17, i32 noundef 0), !dbg !11168
  %call8 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %13, ptr noundef %14, ptr noundef @.str.91, ptr noundef %call7, ptr noundef @.str.92, ptr noundef null), !dbg !11169
  store ptr %call8, ptr %body, align 8, !dbg !11170, !tbaa !2416
  %18 = load ptr, ptr %r.addr, align 8, !dbg !11171, !tbaa !2416
  %19 = load ptr, ptr %body, align 8, !dbg !11172, !tbaa !2416
  %call9 = call i32 @dav_error_response(ptr noundef %18, i32 noundef 201, ptr noundef %19), !dbg !11173
  store i32 %call9, ptr %retval, align 4, !dbg !11174
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11174

cleanup:                                          ; preds = %if.end2, %if.then1
  call void @llvm.lifetime.end.p0(i64 8, ptr %body) #10, !dbg !11175
  %20 = load i32, ptr %retval, align 4, !dbg !11175
  ret i32 %20, !dbg !11175
}

declare !dbg !11176 i32 @ap_cstr_casecmpn(ptr noundef, ptr noundef, i64 noundef) #2

declare !dbg !11179 i32 @ap_parse_strict_length(ptr noundef, ptr noundef) #2

declare !dbg !11182 ptr @ap_construct_url(ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !11186 ptr @apr_pstrcat(ptr noundef, ...) #2

declare !dbg !11189 i32 @ap_discard_request_body(ptr noundef) #2

declare !dbg !11190 i32 @dav_unlock(ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !11193 ptr @apr_table_make(ptr noundef, i32 noundef) #2

declare !dbg !11196 i32 @ap_xml_parse_input(ptr noundef, ptr noundef) #2

declare !dbg !11201 i32 @dav_validate_root(ptr noundef, ptr noundef) #2

declare !dbg !11204 ptr @ap_list_provider_names(ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !11207 ptr @dav_get_options_providers(ptr noundef) #2

declare !dbg !11210 void @apr_table_addn(ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !11211 ptr @apr_table_elts(ptr noundef) #2

; Function Attrs: nounwind
declare !dbg !11214 ptr @strcpy(ptr noundef, ptr noundef) #8

declare !dbg !11218 void @ap_set_content_length(ptr noundef, i64 noundef) #2

; Function Attrs: nounwind uwtable
define internal ptr @dav_gen_supported_methods(ptr noundef %r, ptr noundef %elem, ptr noundef %methods, ptr noundef %body) #0 !dbg !11221 {
entry:
  %retval = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %elem.addr = alloca ptr, align 8
  %methods.addr = alloca ptr, align 8
  %body.addr = alloca ptr, align 8
  %arr = alloca ptr, align 8
  %elts = alloca ptr, align 8
  %child = alloca ptr, align 8
  %attr = alloca ptr, align 8
  %s = alloca ptr, align 8
  %i = alloca i32, align 4
  %name19 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !11225, metadata !DIExpression()), !dbg !11245
  store ptr %elem, ptr %elem.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %elem.addr, metadata !11226, metadata !DIExpression()), !dbg !11246
  store ptr %methods, ptr %methods.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %methods.addr, metadata !11227, metadata !DIExpression()), !dbg !11247
  store ptr %body, ptr %body.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %body.addr, metadata !11228, metadata !DIExpression()), !dbg !11248
  call void @llvm.lifetime.start.p0(i64 8, ptr %arr) #10, !dbg !11249
  tail call void @llvm.dbg.declare(metadata ptr %arr, metadata !11229, metadata !DIExpression()), !dbg !11250
  call void @llvm.lifetime.start.p0(i64 8, ptr %elts) #10, !dbg !11251
  tail call void @llvm.dbg.declare(metadata ptr %elts, metadata !11230, metadata !DIExpression()), !dbg !11252
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !11253
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !11231, metadata !DIExpression()), !dbg !11254
  call void @llvm.lifetime.start.p0(i64 8, ptr %attr) #10, !dbg !11255
  tail call void @llvm.dbg.declare(metadata ptr %attr, metadata !11232, metadata !DIExpression()), !dbg !11256
  call void @llvm.lifetime.start.p0(i64 8, ptr %s) #10, !dbg !11257
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !11235, metadata !DIExpression()), !dbg !11258
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !11259
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !11236, metadata !DIExpression()), !dbg !11260
  %0 = load ptr, ptr %r.addr, align 8, !dbg !11261, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 0, !dbg !11262
  %1 = load ptr, ptr %pool, align 8, !dbg !11262, !tbaa !2792
  %2 = load ptr, ptr %body.addr, align 8, !dbg !11263, !tbaa !2416
  call void @apr_text_append(ptr noundef %1, ptr noundef %2, ptr noundef @.str.135), !dbg !11264
  %3 = load ptr, ptr %elem.addr, align 8, !dbg !11265, !tbaa !2416
  %first_child = getelementptr inbounds %struct.apr_xml_elem, ptr %3, i32 0, i32 7, !dbg !11266
  %4 = load ptr, ptr %first_child, align 8, !dbg !11266, !tbaa !6255
  %cmp = icmp eq ptr %4, null, !dbg !11267
  br i1 %cmp, label %if.then, label %if.else, !dbg !11268

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %methods.addr, align 8, !dbg !11269, !tbaa !2416
  %call = call ptr @apr_table_elts(ptr noundef %5), !dbg !11271
  store ptr %call, ptr %arr, align 8, !dbg !11272, !tbaa !2416
  %6 = load ptr, ptr %arr, align 8, !dbg !11273, !tbaa !2416
  %elts1 = getelementptr inbounds %struct.apr_array_header_t, ptr %6, i32 0, i32 4, !dbg !11274
  %7 = load ptr, ptr %elts1, align 8, !dbg !11274, !tbaa !2715
  store ptr %7, ptr %elts, align 8, !dbg !11275, !tbaa !2416
  store i32 0, ptr %i, align 4, !dbg !11276, !tbaa !2683
  br label %for.cond, !dbg !11278

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !dbg !11279, !tbaa !2683
  %9 = load ptr, ptr %arr, align 8, !dbg !11281, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %9, i32 0, i32 2, !dbg !11282
  %10 = load i32, ptr %nelts, align 4, !dbg !11282, !tbaa !2702
  %cmp2 = icmp slt i32 %8, %10, !dbg !11283
  br i1 %cmp2, label %for.body, label %for.end, !dbg !11284

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %elts, align 8, !dbg !11285, !tbaa !2416
  %12 = load i32, ptr %i, align 4, !dbg !11288, !tbaa !2683
  %idxprom = sext i32 %12 to i64, !dbg !11285
  %arrayidx = getelementptr inbounds %struct.apr_table_entry_t, ptr %11, i64 %idxprom, !dbg !11285
  %key = getelementptr inbounds %struct.apr_table_entry_t, ptr %arrayidx, i32 0, i32 0, !dbg !11289
  %13 = load ptr, ptr %key, align 8, !dbg !11289, !tbaa !6153
  %cmp3 = icmp eq ptr %13, null, !dbg !11290
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11291

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !11292

if.end:                                           ; preds = %for.body
  %14 = load ptr, ptr %r.addr, align 8, !dbg !11293, !tbaa !2416
  %pool5 = getelementptr inbounds %struct.request_rec, ptr %14, i32 0, i32 0, !dbg !11294
  %15 = load ptr, ptr %pool5, align 8, !dbg !11294, !tbaa !2792
  %16 = load ptr, ptr %elts, align 8, !dbg !11295, !tbaa !2416
  %17 = load i32, ptr %i, align 4, !dbg !11296, !tbaa !2683
  %idxprom6 = sext i32 %17 to i64, !dbg !11295
  %arrayidx7 = getelementptr inbounds %struct.apr_table_entry_t, ptr %16, i64 %idxprom6, !dbg !11295
  %key8 = getelementptr inbounds %struct.apr_table_entry_t, ptr %arrayidx7, i32 0, i32 0, !dbg !11297
  %18 = load ptr, ptr %key8, align 8, !dbg !11297, !tbaa !6153
  %call9 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %15, ptr noundef @.str.136, ptr noundef %18, ptr noundef @.str.137, ptr noundef null), !dbg !11298
  store ptr %call9, ptr %s, align 8, !dbg !11299, !tbaa !2416
  %19 = load ptr, ptr %r.addr, align 8, !dbg !11300, !tbaa !2416
  %pool10 = getelementptr inbounds %struct.request_rec, ptr %19, i32 0, i32 0, !dbg !11301
  %20 = load ptr, ptr %pool10, align 8, !dbg !11301, !tbaa !2792
  %21 = load ptr, ptr %body.addr, align 8, !dbg !11302, !tbaa !2416
  %22 = load ptr, ptr %s, align 8, !dbg !11303, !tbaa !2416
  call void @apr_text_append(ptr noundef %20, ptr noundef %21, ptr noundef %22), !dbg !11304
  br label %for.inc, !dbg !11305

for.inc:                                          ; preds = %if.end, %if.then4
  %23 = load i32, ptr %i, align 4, !dbg !11306, !tbaa !2683
  %inc = add nsw i32 %23, 1, !dbg !11306
  store i32 %inc, ptr %i, align 4, !dbg !11306, !tbaa !2683
  br label %for.cond, !dbg !11307, !llvm.loop !11308

for.end:                                          ; preds = %for.cond
  br label %if.end50, !dbg !11310

if.else:                                          ; preds = %entry
  %24 = load ptr, ptr %elem.addr, align 8, !dbg !11311, !tbaa !2416
  %first_child11 = getelementptr inbounds %struct.apr_xml_elem, ptr %24, i32 0, i32 7, !dbg !11312
  %25 = load ptr, ptr %first_child11, align 8, !dbg !11312, !tbaa !6255
  store ptr %25, ptr %child, align 8, !dbg !11313, !tbaa !2416
  br label %for.cond12, !dbg !11314

for.cond12:                                       ; preds = %for.inc47, %if.else
  %26 = load ptr, ptr %child, align 8, !dbg !11315, !tbaa !2416
  %cmp13 = icmp ne ptr %26, null, !dbg !11316
  br i1 %cmp13, label %for.body14, label %for.end49, !dbg !11317

for.body14:                                       ; preds = %for.cond12
  %27 = load ptr, ptr %child, align 8, !dbg !11318, !tbaa !2416
  %ns = getelementptr inbounds %struct.apr_xml_elem, ptr %27, i32 0, i32 1, !dbg !11319
  %28 = load i32, ptr %ns, align 8, !dbg !11319, !tbaa !6269
  %cmp15 = icmp eq i32 %28, 0, !dbg !11320
  br i1 %cmp15, label %land.lhs.true, label %if.end46, !dbg !11321

land.lhs.true:                                    ; preds = %for.body14
  %29 = load ptr, ptr %child, align 8, !dbg !11322, !tbaa !2416
  %name = getelementptr inbounds %struct.apr_xml_elem, ptr %29, i32 0, i32 0, !dbg !11323
  %30 = load ptr, ptr %name, align 8, !dbg !11323, !tbaa !6276
  %call16 = call i32 @strcmp(ptr noundef %30, ptr noundef @.str.138) #11, !dbg !11324
  %cmp17 = icmp eq i32 %call16, 0, !dbg !11325
  br i1 %cmp17, label %if.then18, label %if.end46, !dbg !11326

if.then18:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %name19) #10, !dbg !11327
  tail call void @llvm.dbg.declare(metadata ptr %name19, metadata !11237, metadata !DIExpression()), !dbg !11328
  store ptr null, ptr %name19, align 8, !dbg !11328, !tbaa !2416
  %31 = load ptr, ptr %child, align 8, !dbg !11329, !tbaa !2416
  %attr20 = getelementptr inbounds %struct.apr_xml_elem, ptr %31, i32 0, i32 8, !dbg !11331
  %32 = load ptr, ptr %attr20, align 8, !dbg !11331, !tbaa !11332
  store ptr %32, ptr %attr, align 8, !dbg !11333, !tbaa !2416
  br label %for.cond21, !dbg !11334

for.cond21:                                       ; preds = %for.inc32, %if.then18
  %33 = load ptr, ptr %attr, align 8, !dbg !11335, !tbaa !2416
  %cmp22 = icmp ne ptr %33, null, !dbg !11337
  br i1 %cmp22, label %for.body23, label %for.end33, !dbg !11338

for.body23:                                       ; preds = %for.cond21
  %34 = load ptr, ptr %attr, align 8, !dbg !11339, !tbaa !2416
  %ns24 = getelementptr inbounds %struct.apr_xml_attr, ptr %34, i32 0, i32 1, !dbg !11342
  %35 = load i32, ptr %ns24, align 8, !dbg !11342, !tbaa !11343
  %cmp25 = icmp eq i32 %35, 0, !dbg !11345
  br i1 %cmp25, label %land.lhs.true26, label %if.end31, !dbg !11346

land.lhs.true26:                                  ; preds = %for.body23
  %36 = load ptr, ptr %attr, align 8, !dbg !11347, !tbaa !2416
  %name27 = getelementptr inbounds %struct.apr_xml_attr, ptr %36, i32 0, i32 0, !dbg !11348
  %37 = load ptr, ptr %name27, align 8, !dbg !11348, !tbaa !11349
  %call28 = call i32 @strcmp(ptr noundef %37, ptr noundef @.str.139) #11, !dbg !11350
  %cmp29 = icmp eq i32 %call28, 0, !dbg !11351
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !11352

if.then30:                                        ; preds = %land.lhs.true26
  %38 = load ptr, ptr %attr, align 8, !dbg !11353, !tbaa !2416
  %value = getelementptr inbounds %struct.apr_xml_attr, ptr %38, i32 0, i32 2, !dbg !11354
  %39 = load ptr, ptr %value, align 8, !dbg !11354, !tbaa !11355
  store ptr %39, ptr %name19, align 8, !dbg !11356, !tbaa !2416
  br label %if.end31, !dbg !11357

if.end31:                                         ; preds = %if.then30, %land.lhs.true26, %for.body23
  br label %for.inc32, !dbg !11358

for.inc32:                                        ; preds = %if.end31
  %40 = load ptr, ptr %attr, align 8, !dbg !11359, !tbaa !2416
  %next = getelementptr inbounds %struct.apr_xml_attr, ptr %40, i32 0, i32 3, !dbg !11360
  %41 = load ptr, ptr %next, align 8, !dbg !11360, !tbaa !11361
  store ptr %41, ptr %attr, align 8, !dbg !11362, !tbaa !2416
  br label %for.cond21, !dbg !11363, !llvm.loop !11364

for.end33:                                        ; preds = %for.cond21
  %42 = load ptr, ptr %name19, align 8, !dbg !11366, !tbaa !2416
  %cmp34 = icmp eq ptr %42, null, !dbg !11368
  br i1 %cmp34, label %if.then35, label %if.end38, !dbg !11369

if.then35:                                        ; preds = %for.end33
  %43 = load ptr, ptr %r.addr, align 8, !dbg !11370, !tbaa !2416
  %pool36 = getelementptr inbounds %struct.request_rec, ptr %43, i32 0, i32 0, !dbg !11372
  %44 = load ptr, ptr %pool36, align 8, !dbg !11372, !tbaa !2792
  %call37 = call ptr @dav_new_error(ptr noundef %44, i32 noundef 400, i32 noundef 0, i32 noundef 0, ptr noundef @.str.140), !dbg !11373
  store ptr %call37, ptr %retval, align 8, !dbg !11374
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11374

if.end38:                                         ; preds = %for.end33
  %45 = load ptr, ptr %methods.addr, align 8, !dbg !11375, !tbaa !2416
  %46 = load ptr, ptr %name19, align 8, !dbg !11377, !tbaa !2416
  %call39 = call ptr @apr_table_get(ptr noundef %45, ptr noundef %46), !dbg !11378
  %cmp40 = icmp ne ptr %call39, null, !dbg !11379
  br i1 %cmp40, label %if.then41, label %if.end45, !dbg !11380

if.then41:                                        ; preds = %if.end38
  %47 = load ptr, ptr %r.addr, align 8, !dbg !11381, !tbaa !2416
  %pool42 = getelementptr inbounds %struct.request_rec, ptr %47, i32 0, i32 0, !dbg !11383
  %48 = load ptr, ptr %pool42, align 8, !dbg !11383, !tbaa !2792
  %49 = load ptr, ptr %name19, align 8, !dbg !11384, !tbaa !2416
  %call43 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %48, ptr noundef @.str.136, ptr noundef %49, ptr noundef @.str.137, ptr noundef null), !dbg !11385
  store ptr %call43, ptr %s, align 8, !dbg !11386, !tbaa !2416
  %50 = load ptr, ptr %r.addr, align 8, !dbg !11387, !tbaa !2416
  %pool44 = getelementptr inbounds %struct.request_rec, ptr %50, i32 0, i32 0, !dbg !11388
  %51 = load ptr, ptr %pool44, align 8, !dbg !11388, !tbaa !2792
  %52 = load ptr, ptr %body.addr, align 8, !dbg !11389, !tbaa !2416
  %53 = load ptr, ptr %s, align 8, !dbg !11390, !tbaa !2416
  call void @apr_text_append(ptr noundef %51, ptr noundef %52, ptr noundef %53), !dbg !11391
  br label %if.end45, !dbg !11392

if.end45:                                         ; preds = %if.then41, %if.end38
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11393
  br label %cleanup, !dbg !11393

cleanup:                                          ; preds = %if.end45, %if.then35
  call void @llvm.lifetime.end.p0(i64 8, ptr %name19) #10, !dbg !11393
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup52 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end46, !dbg !11394

if.end46:                                         ; preds = %cleanup.cont, %land.lhs.true, %for.body14
  br label %for.inc47, !dbg !11395

for.inc47:                                        ; preds = %if.end46
  %54 = load ptr, ptr %child, align 8, !dbg !11396, !tbaa !2416
  %next48 = getelementptr inbounds %struct.apr_xml_elem, ptr %54, i32 0, i32 6, !dbg !11397
  %55 = load ptr, ptr %next48, align 8, !dbg !11397, !tbaa !6352
  store ptr %55, ptr %child, align 8, !dbg !11398, !tbaa !2416
  br label %for.cond12, !dbg !11399, !llvm.loop !11400

for.end49:                                        ; preds = %for.cond12
  br label %if.end50

if.end50:                                         ; preds = %for.end49, %for.end
  %56 = load ptr, ptr %r.addr, align 8, !dbg !11402, !tbaa !2416
  %pool51 = getelementptr inbounds %struct.request_rec, ptr %56, i32 0, i32 0, !dbg !11403
  %57 = load ptr, ptr %pool51, align 8, !dbg !11403, !tbaa !2792
  %58 = load ptr, ptr %body.addr, align 8, !dbg !11404, !tbaa !2416
  call void @apr_text_append(ptr noundef %57, ptr noundef %58, ptr noundef @.str.141), !dbg !11405
  store ptr null, ptr %retval, align 8, !dbg !11406
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup52, !dbg !11406

cleanup52:                                        ; preds = %if.end50, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !11407
  call void @llvm.lifetime.end.p0(i64 8, ptr %s) #10, !dbg !11407
  call void @llvm.lifetime.end.p0(i64 8, ptr %attr) #10, !dbg !11407
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !11407
  call void @llvm.lifetime.end.p0(i64 8, ptr %elts) #10, !dbg !11407
  call void @llvm.lifetime.end.p0(i64 8, ptr %arr) #10, !dbg !11407
  %59 = load ptr, ptr %retval, align 8, !dbg !11407
  ret ptr %59, !dbg !11407
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_gen_supported_live_props(ptr noundef %r, ptr noundef %resource, ptr noundef %elem, ptr noundef %body) #0 !dbg !11408 {
entry:
  %retval = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %resource.addr = alloca ptr, align 8
  %elem.addr = alloca ptr, align 8
  %body.addr = alloca ptr, align 8
  %lockdb = alloca ptr, align 8
  %propdb = alloca ptr, align 8
  %child = alloca ptr, align 8
  %attr = alloca ptr, align 8
  %err = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %props = alloca %struct.dav_get_props_result, align 8
  %name28 = alloca ptr, align 8
  %nmspace = alloca ptr, align 8
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !11412, metadata !DIExpression()), !dbg !11432
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !11413, metadata !DIExpression()), !dbg !11433
  store ptr %elem, ptr %elem.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %elem.addr, metadata !11414, metadata !DIExpression()), !dbg !11434
  store ptr %body, ptr %body.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %body.addr, metadata !11415, metadata !DIExpression()), !dbg !11435
  call void @llvm.lifetime.start.p0(i64 8, ptr %lockdb) #10, !dbg !11436
  tail call void @llvm.dbg.declare(metadata ptr %lockdb, metadata !11416, metadata !DIExpression()), !dbg !11437
  call void @llvm.lifetime.start.p0(i64 8, ptr %propdb) #10, !dbg !11438
  tail call void @llvm.dbg.declare(metadata ptr %propdb, metadata !11417, metadata !DIExpression()), !dbg !11439
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !11440
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !11418, metadata !DIExpression()), !dbg !11441
  call void @llvm.lifetime.start.p0(i64 8, ptr %attr) #10, !dbg !11442
  tail call void @llvm.dbg.declare(metadata ptr %attr, metadata !11419, metadata !DIExpression()), !dbg !11443
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !11444
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !11420, metadata !DIExpression()), !dbg !11445
  %0 = load ptr, ptr %r.addr, align 8, !dbg !11446, !tbaa !2416
  %call = call ptr @dav_open_lockdb(ptr noundef %0, i32 noundef 1, ptr noundef %lockdb), !dbg !11448
  store ptr %call, ptr %err, align 8, !dbg !11449, !tbaa !2416
  %cmp = icmp ne ptr %call, null, !dbg !11450
  br i1 %cmp, label %if.then, label %if.end, !dbg !11451

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %r.addr, align 8, !dbg !11452, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %1, i32 0, i32 0, !dbg !11454
  %2 = load ptr, ptr %pool, align 8, !dbg !11454, !tbaa !2792
  %3 = load ptr, ptr %err, align 8, !dbg !11455, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %3, i32 0, i32 0, !dbg !11456
  %4 = load i32, ptr %status, align 8, !dbg !11456, !tbaa !2871
  %5 = load ptr, ptr %err, align 8, !dbg !11457, !tbaa !2416
  %call1 = call ptr @dav_push_error(ptr noundef %2, i32 noundef %4, i32 noundef 0, ptr noundef @.str.142, ptr noundef %5), !dbg !11458
  store ptr %call1, ptr %retval, align 8, !dbg !11459
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !11459

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %r.addr, align 8, !dbg !11460, !tbaa !2416
  %7 = load ptr, ptr %lockdb, align 8, !dbg !11462, !tbaa !2416
  %8 = load ptr, ptr %resource.addr, align 8, !dbg !11463, !tbaa !2416
  %call2 = call ptr @dav_open_propdb(ptr noundef %6, ptr noundef %7, ptr noundef %8, i32 noundef 1, ptr noundef null, ptr noundef %propdb), !dbg !11464
  store ptr %call2, ptr %err, align 8, !dbg !11465, !tbaa !2416
  %cmp3 = icmp ne ptr %call2, null, !dbg !11466
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !11467

if.then4:                                         ; preds = %if.end
  %9 = load ptr, ptr %lockdb, align 8, !dbg !11468, !tbaa !2416
  %cmp5 = icmp ne ptr %9, null, !dbg !11471
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11472

if.then6:                                         ; preds = %if.then4
  %10 = load ptr, ptr %lockdb, align 8, !dbg !11473, !tbaa !2416
  %hooks = getelementptr inbounds %struct.dav_lockdb, ptr %10, i32 0, i32 0, !dbg !11474
  %11 = load ptr, ptr %hooks, align 8, !dbg !11474, !tbaa !3292
  %close_lockdb = getelementptr inbounds %struct.dav_hooks_locks, ptr %11, i32 0, i32 5, !dbg !11475
  %12 = load ptr, ptr %close_lockdb, align 8, !dbg !11475, !tbaa !3295
  %13 = load ptr, ptr %lockdb, align 8, !dbg !11476, !tbaa !2416
  call void %12(ptr noundef %13), !dbg !11477
  br label %if.end7, !dbg !11477

if.end7:                                          ; preds = %if.then6, %if.then4
  %14 = load ptr, ptr %r.addr, align 8, !dbg !11478, !tbaa !2416
  %pool8 = getelementptr inbounds %struct.request_rec, ptr %14, i32 0, i32 0, !dbg !11479
  %15 = load ptr, ptr %pool8, align 8, !dbg !11479, !tbaa !2792
  %16 = load ptr, ptr %err, align 8, !dbg !11480, !tbaa !2416
  %status9 = getelementptr inbounds %struct.dav_error, ptr %16, i32 0, i32 0, !dbg !11481
  %17 = load i32, ptr %status9, align 8, !dbg !11481, !tbaa !2871
  %18 = load ptr, ptr %err, align 8, !dbg !11482, !tbaa !2416
  %call10 = call ptr @dav_push_error(ptr noundef %15, i32 noundef %17, i32 noundef 0, ptr noundef @.str.143, ptr noundef %18), !dbg !11483
  store ptr %call10, ptr %retval, align 8, !dbg !11484
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !11484

if.end11:                                         ; preds = %if.end
  %19 = load ptr, ptr %r.addr, align 8, !dbg !11485, !tbaa !2416
  %pool12 = getelementptr inbounds %struct.request_rec, ptr %19, i32 0, i32 0, !dbg !11486
  %20 = load ptr, ptr %pool12, align 8, !dbg !11486, !tbaa !2792
  %21 = load ptr, ptr %body.addr, align 8, !dbg !11487, !tbaa !2416
  call void @apr_text_append(ptr noundef %20, ptr noundef %21, ptr noundef @.str.144), !dbg !11488
  %22 = load ptr, ptr %elem.addr, align 8, !dbg !11489, !tbaa !2416
  %first_child = getelementptr inbounds %struct.apr_xml_elem, ptr %22, i32 0, i32 7, !dbg !11490
  %23 = load ptr, ptr %first_child, align 8, !dbg !11490, !tbaa !6255
  %cmp13 = icmp eq ptr %23, null, !dbg !11491
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !11492

if.then14:                                        ; preds = %if.end11
  call void @llvm.lifetime.start.p0(i64 16, ptr %props) #10, !dbg !11493
  tail call void @llvm.dbg.declare(metadata ptr %props, metadata !11421, metadata !DIExpression()), !dbg !11494
  %24 = load ptr, ptr %propdb, align 8, !dbg !11495, !tbaa !2416
  %call15 = call { ptr, ptr } @dav_get_allprops(ptr noundef %24, i32 noundef 4), !dbg !11496
  %25 = getelementptr inbounds { ptr, ptr }, ptr %props, i32 0, i32 0, !dbg !11496
  %26 = extractvalue { ptr, ptr } %call15, 0, !dbg !11496
  store ptr %26, ptr %25, align 8, !dbg !11496
  %27 = getelementptr inbounds { ptr, ptr }, ptr %props, i32 0, i32 1, !dbg !11496
  %28 = extractvalue { ptr, ptr } %call15, 1, !dbg !11496
  store ptr %28, ptr %27, align 8, !dbg !11496
  %propstats = getelementptr inbounds %struct.dav_get_props_result, ptr %props, i32 0, i32 0, !dbg !11497
  %29 = load ptr, ptr %propstats, align 8, !dbg !11497, !tbaa !4696
  %30 = load ptr, ptr %body.addr, align 8, !dbg !11498, !tbaa !2416
  %last = getelementptr inbounds %struct.apr_text_header, ptr %30, i32 0, i32 1, !dbg !11499
  %31 = load ptr, ptr %last, align 8, !dbg !11499, !tbaa !11500
  %next = getelementptr inbounds %struct.apr_text, ptr %31, i32 0, i32 1, !dbg !11501
  store ptr %29, ptr %next, align 8, !dbg !11502, !tbaa !2558
  br label %while.cond, !dbg !11503

while.cond:                                       ; preds = %while.body, %if.then14
  %32 = load ptr, ptr %body.addr, align 8, !dbg !11504, !tbaa !2416
  %last16 = getelementptr inbounds %struct.apr_text_header, ptr %32, i32 0, i32 1, !dbg !11505
  %33 = load ptr, ptr %last16, align 8, !dbg !11505, !tbaa !11500
  %next17 = getelementptr inbounds %struct.apr_text, ptr %33, i32 0, i32 1, !dbg !11506
  %34 = load ptr, ptr %next17, align 8, !dbg !11506, !tbaa !2558
  %cmp18 = icmp ne ptr %34, null, !dbg !11507
  br i1 %cmp18, label %while.body, label %while.end, !dbg !11503

while.body:                                       ; preds = %while.cond
  %35 = load ptr, ptr %body.addr, align 8, !dbg !11508, !tbaa !2416
  %last19 = getelementptr inbounds %struct.apr_text_header, ptr %35, i32 0, i32 1, !dbg !11509
  %36 = load ptr, ptr %last19, align 8, !dbg !11509, !tbaa !11500
  %next20 = getelementptr inbounds %struct.apr_text, ptr %36, i32 0, i32 1, !dbg !11510
  %37 = load ptr, ptr %next20, align 8, !dbg !11510, !tbaa !2558
  %38 = load ptr, ptr %body.addr, align 8, !dbg !11511, !tbaa !2416
  %last21 = getelementptr inbounds %struct.apr_text_header, ptr %38, i32 0, i32 1, !dbg !11512
  store ptr %37, ptr %last21, align 8, !dbg !11513, !tbaa !11500
  br label %while.cond, !dbg !11503, !llvm.loop !11514

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0(i64 16, ptr %props) #10, !dbg !11515
  br label %if.end63, !dbg !11516

if.else:                                          ; preds = %if.end11
  %39 = load ptr, ptr %elem.addr, align 8, !dbg !11517, !tbaa !2416
  %first_child22 = getelementptr inbounds %struct.apr_xml_elem, ptr %39, i32 0, i32 7, !dbg !11518
  %40 = load ptr, ptr %first_child22, align 8, !dbg !11518, !tbaa !6255
  store ptr %40, ptr %child, align 8, !dbg !11519, !tbaa !2416
  br label %for.cond, !dbg !11520

for.cond:                                         ; preds = %for.inc60, %if.else
  %41 = load ptr, ptr %child, align 8, !dbg !11521, !tbaa !2416
  %cmp23 = icmp ne ptr %41, null, !dbg !11522
  br i1 %cmp23, label %for.body, label %for.end62, !dbg !11523

for.body:                                         ; preds = %for.cond
  %42 = load ptr, ptr %child, align 8, !dbg !11524, !tbaa !2416
  %ns = getelementptr inbounds %struct.apr_xml_elem, ptr %42, i32 0, i32 1, !dbg !11525
  %43 = load i32, ptr %ns, align 8, !dbg !11525, !tbaa !6269
  %cmp24 = icmp eq i32 %43, 0, !dbg !11526
  br i1 %cmp24, label %land.lhs.true, label %if.end59, !dbg !11527

land.lhs.true:                                    ; preds = %for.body
  %44 = load ptr, ptr %child, align 8, !dbg !11528, !tbaa !2416
  %name = getelementptr inbounds %struct.apr_xml_elem, ptr %44, i32 0, i32 0, !dbg !11529
  %45 = load ptr, ptr %name, align 8, !dbg !11529, !tbaa !6276
  %call25 = call i32 @strcmp(ptr noundef %45, ptr noundef @.str.145) #11, !dbg !11530
  %cmp26 = icmp eq i32 %call25, 0, !dbg !11531
  br i1 %cmp26, label %if.then27, label %if.end59, !dbg !11532

if.then27:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %name28) #10, !dbg !11533
  tail call void @llvm.dbg.declare(metadata ptr %name28, metadata !11424, metadata !DIExpression()), !dbg !11534
  store ptr null, ptr %name28, align 8, !dbg !11534, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %nmspace) #10, !dbg !11535
  tail call void @llvm.dbg.declare(metadata ptr %nmspace, metadata !11431, metadata !DIExpression()), !dbg !11536
  store ptr null, ptr %nmspace, align 8, !dbg !11536, !tbaa !2416
  %46 = load ptr, ptr %child, align 8, !dbg !11537, !tbaa !2416
  %attr29 = getelementptr inbounds %struct.apr_xml_elem, ptr %46, i32 0, i32 8, !dbg !11539
  %47 = load ptr, ptr %attr29, align 8, !dbg !11539, !tbaa !11332
  store ptr %47, ptr %attr, align 8, !dbg !11540, !tbaa !2416
  br label %for.cond30, !dbg !11541

for.cond30:                                       ; preds = %for.inc, %if.then27
  %48 = load ptr, ptr %attr, align 8, !dbg !11542, !tbaa !2416
  %cmp31 = icmp ne ptr %48, null, !dbg !11544
  br i1 %cmp31, label %for.body32, label %for.end, !dbg !11545

for.body32:                                       ; preds = %for.cond30
  %49 = load ptr, ptr %attr, align 8, !dbg !11546, !tbaa !2416
  %ns33 = getelementptr inbounds %struct.apr_xml_attr, ptr %49, i32 0, i32 1, !dbg !11549
  %50 = load i32, ptr %ns33, align 8, !dbg !11549, !tbaa !11343
  %cmp34 = icmp eq i32 %50, 0, !dbg !11550
  br i1 %cmp34, label %if.then35, label %if.end48, !dbg !11551

if.then35:                                        ; preds = %for.body32
  %51 = load ptr, ptr %attr, align 8, !dbg !11552, !tbaa !2416
  %name36 = getelementptr inbounds %struct.apr_xml_attr, ptr %51, i32 0, i32 0, !dbg !11555
  %52 = load ptr, ptr %name36, align 8, !dbg !11555, !tbaa !11349
  %call37 = call i32 @strcmp(ptr noundef %52, ptr noundef @.str.139) #11, !dbg !11556
  %cmp38 = icmp eq i32 %call37, 0, !dbg !11557
  br i1 %cmp38, label %if.then39, label %if.else40, !dbg !11558

if.then39:                                        ; preds = %if.then35
  %53 = load ptr, ptr %attr, align 8, !dbg !11559, !tbaa !2416
  %value = getelementptr inbounds %struct.apr_xml_attr, ptr %53, i32 0, i32 2, !dbg !11560
  %54 = load ptr, ptr %value, align 8, !dbg !11560, !tbaa !11355
  store ptr %54, ptr %name28, align 8, !dbg !11561, !tbaa !2416
  br label %if.end47, !dbg !11562

if.else40:                                        ; preds = %if.then35
  %55 = load ptr, ptr %attr, align 8, !dbg !11563, !tbaa !2416
  %name41 = getelementptr inbounds %struct.apr_xml_attr, ptr %55, i32 0, i32 0, !dbg !11565
  %56 = load ptr, ptr %name41, align 8, !dbg !11565, !tbaa !11349
  %call42 = call i32 @strcmp(ptr noundef %56, ptr noundef @.str.146) #11, !dbg !11566
  %cmp43 = icmp eq i32 %call42, 0, !dbg !11567
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !11568

if.then44:                                        ; preds = %if.else40
  %57 = load ptr, ptr %attr, align 8, !dbg !11569, !tbaa !2416
  %value45 = getelementptr inbounds %struct.apr_xml_attr, ptr %57, i32 0, i32 2, !dbg !11570
  %58 = load ptr, ptr %value45, align 8, !dbg !11570, !tbaa !11355
  store ptr %58, ptr %nmspace, align 8, !dbg !11571, !tbaa !2416
  br label %if.end46, !dbg !11572

if.end46:                                         ; preds = %if.then44, %if.else40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then39
  br label %if.end48, !dbg !11573

if.end48:                                         ; preds = %if.end47, %for.body32
  br label %for.inc, !dbg !11574

for.inc:                                          ; preds = %if.end48
  %59 = load ptr, ptr %attr, align 8, !dbg !11575, !tbaa !2416
  %next49 = getelementptr inbounds %struct.apr_xml_attr, ptr %59, i32 0, i32 3, !dbg !11576
  %60 = load ptr, ptr %next49, align 8, !dbg !11576, !tbaa !11361
  store ptr %60, ptr %attr, align 8, !dbg !11577, !tbaa !2416
  br label %for.cond30, !dbg !11578, !llvm.loop !11579

for.end:                                          ; preds = %for.cond30
  %61 = load ptr, ptr %name28, align 8, !dbg !11581, !tbaa !2416
  %cmp50 = icmp eq ptr %61, null, !dbg !11583
  br i1 %cmp50, label %if.then51, label %if.end54, !dbg !11584

if.then51:                                        ; preds = %for.end
  %62 = load ptr, ptr %r.addr, align 8, !dbg !11585, !tbaa !2416
  %pool52 = getelementptr inbounds %struct.request_rec, ptr %62, i32 0, i32 0, !dbg !11587
  %63 = load ptr, ptr %pool52, align 8, !dbg !11587, !tbaa !2792
  %call53 = call ptr @dav_new_error(ptr noundef %63, i32 noundef 400, i32 noundef 0, i32 noundef 0, ptr noundef @.str.147), !dbg !11588
  store ptr %call53, ptr %err, align 8, !dbg !11589, !tbaa !2416
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11590

if.end54:                                         ; preds = %for.end
  %64 = load ptr, ptr %nmspace, align 8, !dbg !11591, !tbaa !2416
  %cmp55 = icmp eq ptr %64, null, !dbg !11593
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !11594

if.then56:                                        ; preds = %if.end54
  store ptr @.str.148, ptr %nmspace, align 8, !dbg !11595, !tbaa !2416
  br label %if.end57, !dbg !11596

if.end57:                                         ; preds = %if.then56, %if.end54
  %65 = load ptr, ptr %propdb, align 8, !dbg !11597, !tbaa !2416
  %66 = load ptr, ptr %nmspace, align 8, !dbg !11598, !tbaa !2416
  %67 = load ptr, ptr %name28, align 8, !dbg !11599, !tbaa !2416
  %68 = load ptr, ptr %body.addr, align 8, !dbg !11600, !tbaa !2416
  call void @dav_get_liveprop_supported(ptr noundef %65, ptr noundef %66, ptr noundef %67, ptr noundef %68), !dbg !11601
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11602
  br label %cleanup, !dbg !11602

cleanup:                                          ; preds = %if.end57, %if.then51
  call void @llvm.lifetime.end.p0(i64 8, ptr %nmspace) #10, !dbg !11602
  call void @llvm.lifetime.end.p0(i64 8, ptr %name28) #10, !dbg !11602
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 4, label %for.end62
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end59, !dbg !11603

if.end59:                                         ; preds = %cleanup.cont, %land.lhs.true, %for.body
  br label %for.inc60, !dbg !11604

for.inc60:                                        ; preds = %if.end59
  %69 = load ptr, ptr %child, align 8, !dbg !11605, !tbaa !2416
  %next61 = getelementptr inbounds %struct.apr_xml_elem, ptr %69, i32 0, i32 6, !dbg !11606
  %70 = load ptr, ptr %next61, align 8, !dbg !11606, !tbaa !6352
  store ptr %70, ptr %child, align 8, !dbg !11607, !tbaa !2416
  br label %for.cond, !dbg !11608, !llvm.loop !11609

for.end62:                                        ; preds = %cleanup, %for.cond
  br label %if.end63

if.end63:                                         ; preds = %for.end62, %while.end
  %71 = load ptr, ptr %r.addr, align 8, !dbg !11611, !tbaa !2416
  %pool64 = getelementptr inbounds %struct.request_rec, ptr %71, i32 0, i32 0, !dbg !11612
  %72 = load ptr, ptr %pool64, align 8, !dbg !11612, !tbaa !2792
  %73 = load ptr, ptr %body.addr, align 8, !dbg !11613, !tbaa !2416
  call void @apr_text_append(ptr noundef %72, ptr noundef %73, ptr noundef @.str.149), !dbg !11614
  %74 = load ptr, ptr %propdb, align 8, !dbg !11615, !tbaa !2416
  call void @dav_close_propdb(ptr noundef %74), !dbg !11616
  %75 = load ptr, ptr %lockdb, align 8, !dbg !11617, !tbaa !2416
  %cmp65 = icmp ne ptr %75, null, !dbg !11619
  br i1 %cmp65, label %if.then66, label %if.end69, !dbg !11620

if.then66:                                        ; preds = %if.end63
  %76 = load ptr, ptr %lockdb, align 8, !dbg !11621, !tbaa !2416
  %hooks67 = getelementptr inbounds %struct.dav_lockdb, ptr %76, i32 0, i32 0, !dbg !11622
  %77 = load ptr, ptr %hooks67, align 8, !dbg !11622, !tbaa !3292
  %close_lockdb68 = getelementptr inbounds %struct.dav_hooks_locks, ptr %77, i32 0, i32 5, !dbg !11623
  %78 = load ptr, ptr %close_lockdb68, align 8, !dbg !11623, !tbaa !3295
  %79 = load ptr, ptr %lockdb, align 8, !dbg !11624, !tbaa !2416
  call void %78(ptr noundef %79), !dbg !11625
  br label %if.end69, !dbg !11625

if.end69:                                         ; preds = %if.then66, %if.end63
  %80 = load ptr, ptr %err, align 8, !dbg !11626, !tbaa !2416
  store ptr %80, ptr %retval, align 8, !dbg !11627
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !11627

cleanup70:                                        ; preds = %if.end69, %if.end7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !11628
  call void @llvm.lifetime.end.p0(i64 8, ptr %attr) #10, !dbg !11628
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !11628
  call void @llvm.lifetime.end.p0(i64 8, ptr %propdb) #10, !dbg !11628
  call void @llvm.lifetime.end.p0(i64 8, ptr %lockdb) #10, !dbg !11628
  %81 = load ptr, ptr %retval, align 8, !dbg !11628
  ret ptr %81, !dbg !11628

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @dav_gen_supported_reports(ptr noundef %r, ptr noundef %resource, ptr noundef %elem, ptr noundef %body) #0 !dbg !11629 {
entry:
  %retval = alloca ptr, align 8
  %r.addr = alloca ptr, align 8
  %resource.addr = alloca ptr, align 8
  %elem.addr = alloca ptr, align 8
  %body.addr = alloca ptr, align 8
  %child = alloca ptr, align 8
  %attr = alloca ptr, align 8
  %err = alloca ptr, align 8
  %s = alloca ptr, align 8
  %reports = alloca ptr, align 8
  %rp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  %name19 = alloca ptr, align 8
  %nmspace20 = alloca ptr, align 8
  %i21 = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !11631, metadata !DIExpression()), !dbg !11653
  store ptr %resource, ptr %resource.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %resource.addr, metadata !11632, metadata !DIExpression()), !dbg !11654
  store ptr %elem, ptr %elem.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %elem.addr, metadata !11633, metadata !DIExpression()), !dbg !11655
  store ptr %body, ptr %body.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %body.addr, metadata !11634, metadata !DIExpression()), !dbg !11656
  call void @llvm.lifetime.start.p0(i64 8, ptr %child) #10, !dbg !11657
  tail call void @llvm.dbg.declare(metadata ptr %child, metadata !11635, metadata !DIExpression()), !dbg !11658
  call void @llvm.lifetime.start.p0(i64 8, ptr %attr) #10, !dbg !11659
  tail call void @llvm.dbg.declare(metadata ptr %attr, metadata !11636, metadata !DIExpression()), !dbg !11660
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !11661
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !11637, metadata !DIExpression()), !dbg !11662
  store ptr null, ptr %err, align 8, !dbg !11662, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %s) #10, !dbg !11663
  tail call void @llvm.dbg.declare(metadata ptr %s, metadata !11638, metadata !DIExpression()), !dbg !11664
  call void @llvm.lifetime.start.p0(i64 8, ptr %reports) #10, !dbg !11665
  tail call void @llvm.dbg.declare(metadata ptr %reports, metadata !11639, metadata !DIExpression()), !dbg !11666
  call void @llvm.lifetime.start.p0(i64 8, ptr %rp) #10, !dbg !11667
  tail call void @llvm.dbg.declare(metadata ptr %rp, metadata !11640, metadata !DIExpression()), !dbg !11668
  %0 = load ptr, ptr %r.addr, align 8, !dbg !11669, !tbaa !2416
  %pool = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 0, !dbg !11670
  %1 = load ptr, ptr %pool, align 8, !dbg !11670, !tbaa !2792
  %2 = load ptr, ptr %body.addr, align 8, !dbg !11671, !tbaa !2416
  call void @apr_text_append(ptr noundef %1, ptr noundef %2, ptr noundef @.str.150), !dbg !11672
  %3 = load ptr, ptr %r.addr, align 8, !dbg !11673, !tbaa !2416
  %pool1 = getelementptr inbounds %struct.request_rec, ptr %3, i32 0, i32 0, !dbg !11674
  %4 = load ptr, ptr %pool1, align 8, !dbg !11674, !tbaa !2792
  %call = call ptr @apr_array_make(ptr noundef %4, i32 noundef 5, i32 noundef 8), !dbg !11675
  store ptr %call, ptr %reports, align 8, !dbg !11676, !tbaa !2416
  %5 = load ptr, ptr %r.addr, align 8, !dbg !11677, !tbaa !2416
  %6 = load ptr, ptr %resource.addr, align 8, !dbg !11678, !tbaa !2416
  %7 = load ptr, ptr %reports, align 8, !dbg !11679, !tbaa !2416
  call void @dav_run_gather_reports(ptr noundef %5, ptr noundef %6, ptr noundef %7, ptr noundef %err), !dbg !11680
  %8 = load ptr, ptr %err, align 8, !dbg !11681, !tbaa !2416
  %cmp = icmp ne ptr %8, null, !dbg !11683
  br i1 %cmp, label %if.then, label %if.end, !dbg !11684

if.then:                                          ; preds = %entry
  %9 = load ptr, ptr %r.addr, align 8, !dbg !11685, !tbaa !2416
  %pool2 = getelementptr inbounds %struct.request_rec, ptr %9, i32 0, i32 0, !dbg !11687
  %10 = load ptr, ptr %pool2, align 8, !dbg !11687, !tbaa !2792
  %11 = load ptr, ptr %err, align 8, !dbg !11688, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %11, i32 0, i32 0, !dbg !11689
  %12 = load i32, ptr %status, align 8, !dbg !11689, !tbaa !2871
  %13 = load ptr, ptr %err, align 8, !dbg !11690, !tbaa !2416
  %call3 = call ptr @dav_push_error(ptr noundef %10, i32 noundef %12, i32 noundef 0, ptr noundef @.str.151, ptr noundef %13), !dbg !11691
  store ptr %call3, ptr %retval, align 8, !dbg !11692
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !11692

if.end:                                           ; preds = %entry
  %14 = load ptr, ptr %elem.addr, align 8, !dbg !11693, !tbaa !2416
  %first_child = getelementptr inbounds %struct.apr_xml_elem, ptr %14, i32 0, i32 7, !dbg !11694
  %15 = load ptr, ptr %first_child, align 8, !dbg !11694, !tbaa !6255
  %cmp4 = icmp eq ptr %15, null, !dbg !11695
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !11696

if.then5:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !11697
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !11641, metadata !DIExpression()), !dbg !11698
  %16 = load ptr, ptr %reports, align 8, !dbg !11699, !tbaa !2416
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %16, i32 0, i32 4, !dbg !11700
  %17 = load ptr, ptr %elts, align 8, !dbg !11700, !tbaa !2715
  store ptr %17, ptr %rp, align 8, !dbg !11701, !tbaa !2416
  store i32 0, ptr %i, align 4, !dbg !11702, !tbaa !2683
  br label %for.cond, !dbg !11704

for.cond:                                         ; preds = %for.inc, %if.then5
  %18 = load i32, ptr %i, align 4, !dbg !11705, !tbaa !2683
  %19 = load ptr, ptr %reports, align 8, !dbg !11707, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %19, i32 0, i32 2, !dbg !11708
  %20 = load i32, ptr %nelts, align 4, !dbg !11708, !tbaa !2702
  %cmp6 = icmp slt i32 %18, %20, !dbg !11709
  br i1 %cmp6, label %for.body, label %for.end, !dbg !11710

for.body:                                         ; preds = %for.cond
  %21 = load ptr, ptr %r.addr, align 8, !dbg !11711, !tbaa !2416
  %pool7 = getelementptr inbounds %struct.request_rec, ptr %21, i32 0, i32 0, !dbg !11713
  %22 = load ptr, ptr %pool7, align 8, !dbg !11713, !tbaa !2792
  %23 = load ptr, ptr %rp, align 8, !dbg !11714, !tbaa !2416
  %name = getelementptr inbounds %struct.dav_report_elem, ptr %23, i32 0, i32 1, !dbg !11715
  %24 = load ptr, ptr %name, align 8, !dbg !11715, !tbaa !4688
  %25 = load ptr, ptr %rp, align 8, !dbg !11716, !tbaa !2416
  %nmspace = getelementptr inbounds %struct.dav_report_elem, ptr %25, i32 0, i32 0, !dbg !11717
  %26 = load ptr, ptr %nmspace, align 8, !dbg !11717, !tbaa !4696
  %call8 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %22, ptr noundef @.str.152, ptr noundef %24, ptr noundef @.str.153, ptr noundef %26, ptr noundef @.str.137, ptr noundef null), !dbg !11718
  store ptr %call8, ptr %s, align 8, !dbg !11719, !tbaa !2416
  %27 = load ptr, ptr %r.addr, align 8, !dbg !11720, !tbaa !2416
  %pool9 = getelementptr inbounds %struct.request_rec, ptr %27, i32 0, i32 0, !dbg !11721
  %28 = load ptr, ptr %pool9, align 8, !dbg !11721, !tbaa !2792
  %29 = load ptr, ptr %body.addr, align 8, !dbg !11722, !tbaa !2416
  %30 = load ptr, ptr %s, align 8, !dbg !11723, !tbaa !2416
  call void @apr_text_append(ptr noundef %28, ptr noundef %29, ptr noundef %30), !dbg !11724
  br label %for.inc, !dbg !11725

for.inc:                                          ; preds = %for.body
  %31 = load i32, ptr %i, align 4, !dbg !11726, !tbaa !2683
  %inc = add nsw i32 %31, 1, !dbg !11726
  store i32 %inc, ptr %i, align 4, !dbg !11726, !tbaa !2683
  %32 = load ptr, ptr %rp, align 8, !dbg !11727, !tbaa !2416
  %incdec.ptr = getelementptr inbounds %struct.dav_report_elem, ptr %32, i32 1, !dbg !11727
  store ptr %incdec.ptr, ptr %rp, align 8, !dbg !11727, !tbaa !2416
  br label %for.cond, !dbg !11728, !llvm.loop !11729

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !11731
  br label %if.end81, !dbg !11732

if.else:                                          ; preds = %if.end
  %33 = load ptr, ptr %elem.addr, align 8, !dbg !11733, !tbaa !2416
  %first_child10 = getelementptr inbounds %struct.apr_xml_elem, ptr %33, i32 0, i32 7, !dbg !11734
  %34 = load ptr, ptr %first_child10, align 8, !dbg !11734, !tbaa !6255
  store ptr %34, ptr %child, align 8, !dbg !11735, !tbaa !2416
  br label %for.cond11, !dbg !11736

for.cond11:                                       ; preds = %for.inc78, %if.else
  %35 = load ptr, ptr %child, align 8, !dbg !11737, !tbaa !2416
  %cmp12 = icmp ne ptr %35, null, !dbg !11738
  br i1 %cmp12, label %for.body13, label %for.end80, !dbg !11739

for.body13:                                       ; preds = %for.cond11
  %36 = load ptr, ptr %child, align 8, !dbg !11740, !tbaa !2416
  %ns = getelementptr inbounds %struct.apr_xml_elem, ptr %36, i32 0, i32 1, !dbg !11741
  %37 = load i32, ptr %ns, align 8, !dbg !11741, !tbaa !6269
  %cmp14 = icmp eq i32 %37, 0, !dbg !11742
  br i1 %cmp14, label %land.lhs.true, label %if.end77, !dbg !11743

land.lhs.true:                                    ; preds = %for.body13
  %38 = load ptr, ptr %child, align 8, !dbg !11744, !tbaa !2416
  %name15 = getelementptr inbounds %struct.apr_xml_elem, ptr %38, i32 0, i32 0, !dbg !11745
  %39 = load ptr, ptr %name15, align 8, !dbg !11745, !tbaa !6276
  %call16 = call i32 @strcmp(ptr noundef %39, ptr noundef @.str.154) #11, !dbg !11746
  %cmp17 = icmp eq i32 %call16, 0, !dbg !11747
  br i1 %cmp17, label %if.then18, label %if.end77, !dbg !11748

if.then18:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %name19) #10, !dbg !11749
  tail call void @llvm.dbg.declare(metadata ptr %name19, metadata !11644, metadata !DIExpression()), !dbg !11750
  store ptr null, ptr %name19, align 8, !dbg !11750, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %nmspace20) #10, !dbg !11751
  tail call void @llvm.dbg.declare(metadata ptr %nmspace20, metadata !11651, metadata !DIExpression()), !dbg !11752
  store ptr null, ptr %nmspace20, align 8, !dbg !11752, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 4, ptr %i21) #10, !dbg !11753
  tail call void @llvm.dbg.declare(metadata ptr %i21, metadata !11652, metadata !DIExpression()), !dbg !11754
  %40 = load ptr, ptr %child, align 8, !dbg !11755, !tbaa !2416
  %attr22 = getelementptr inbounds %struct.apr_xml_elem, ptr %40, i32 0, i32 8, !dbg !11757
  %41 = load ptr, ptr %attr22, align 8, !dbg !11757, !tbaa !11332
  store ptr %41, ptr %attr, align 8, !dbg !11758, !tbaa !2416
  br label %for.cond23, !dbg !11759

for.cond23:                                       ; preds = %for.inc42, %if.then18
  %42 = load ptr, ptr %attr, align 8, !dbg !11760, !tbaa !2416
  %cmp24 = icmp ne ptr %42, null, !dbg !11762
  br i1 %cmp24, label %for.body25, label %for.end43, !dbg !11763

for.body25:                                       ; preds = %for.cond23
  %43 = load ptr, ptr %attr, align 8, !dbg !11764, !tbaa !2416
  %ns26 = getelementptr inbounds %struct.apr_xml_attr, ptr %43, i32 0, i32 1, !dbg !11767
  %44 = load i32, ptr %ns26, align 8, !dbg !11767, !tbaa !11343
  %cmp27 = icmp eq i32 %44, 0, !dbg !11768
  br i1 %cmp27, label %if.then28, label %if.end41, !dbg !11769

if.then28:                                        ; preds = %for.body25
  %45 = load ptr, ptr %attr, align 8, !dbg !11770, !tbaa !2416
  %name29 = getelementptr inbounds %struct.apr_xml_attr, ptr %45, i32 0, i32 0, !dbg !11773
  %46 = load ptr, ptr %name29, align 8, !dbg !11773, !tbaa !11349
  %call30 = call i32 @strcmp(ptr noundef %46, ptr noundef @.str.139) #11, !dbg !11774
  %cmp31 = icmp eq i32 %call30, 0, !dbg !11775
  br i1 %cmp31, label %if.then32, label %if.else33, !dbg !11776

if.then32:                                        ; preds = %if.then28
  %47 = load ptr, ptr %attr, align 8, !dbg !11777, !tbaa !2416
  %value = getelementptr inbounds %struct.apr_xml_attr, ptr %47, i32 0, i32 2, !dbg !11778
  %48 = load ptr, ptr %value, align 8, !dbg !11778, !tbaa !11355
  store ptr %48, ptr %name19, align 8, !dbg !11779, !tbaa !2416
  br label %if.end40, !dbg !11780

if.else33:                                        ; preds = %if.then28
  %49 = load ptr, ptr %attr, align 8, !dbg !11781, !tbaa !2416
  %name34 = getelementptr inbounds %struct.apr_xml_attr, ptr %49, i32 0, i32 0, !dbg !11783
  %50 = load ptr, ptr %name34, align 8, !dbg !11783, !tbaa !11349
  %call35 = call i32 @strcmp(ptr noundef %50, ptr noundef @.str.146) #11, !dbg !11784
  %cmp36 = icmp eq i32 %call35, 0, !dbg !11785
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !11786

if.then37:                                        ; preds = %if.else33
  %51 = load ptr, ptr %attr, align 8, !dbg !11787, !tbaa !2416
  %value38 = getelementptr inbounds %struct.apr_xml_attr, ptr %51, i32 0, i32 2, !dbg !11788
  %52 = load ptr, ptr %value38, align 8, !dbg !11788, !tbaa !11355
  store ptr %52, ptr %nmspace20, align 8, !dbg !11789, !tbaa !2416
  br label %if.end39, !dbg !11790

if.end39:                                         ; preds = %if.then37, %if.else33
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then32
  br label %if.end41, !dbg !11791

if.end41:                                         ; preds = %if.end40, %for.body25
  br label %for.inc42, !dbg !11792

for.inc42:                                        ; preds = %if.end41
  %53 = load ptr, ptr %attr, align 8, !dbg !11793, !tbaa !2416
  %next = getelementptr inbounds %struct.apr_xml_attr, ptr %53, i32 0, i32 3, !dbg !11794
  %54 = load ptr, ptr %next, align 8, !dbg !11794, !tbaa !11361
  store ptr %54, ptr %attr, align 8, !dbg !11795, !tbaa !2416
  br label %for.cond23, !dbg !11796, !llvm.loop !11797

for.end43:                                        ; preds = %for.cond23
  %55 = load ptr, ptr %name19, align 8, !dbg !11799, !tbaa !2416
  %cmp44 = icmp eq ptr %55, null, !dbg !11801
  br i1 %cmp44, label %if.then45, label %if.end48, !dbg !11802

if.then45:                                        ; preds = %for.end43
  %56 = load ptr, ptr %r.addr, align 8, !dbg !11803, !tbaa !2416
  %pool46 = getelementptr inbounds %struct.request_rec, ptr %56, i32 0, i32 0, !dbg !11805
  %57 = load ptr, ptr %pool46, align 8, !dbg !11805, !tbaa !2792
  %call47 = call ptr @dav_new_error(ptr noundef %57, i32 noundef 400, i32 noundef 0, i32 noundef 0, ptr noundef @.str.155), !dbg !11806
  store ptr %call47, ptr %retval, align 8, !dbg !11807
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11807

if.end48:                                         ; preds = %for.end43
  %58 = load ptr, ptr %nmspace20, align 8, !dbg !11808, !tbaa !2416
  %cmp49 = icmp eq ptr %58, null, !dbg !11810
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !11811

if.then50:                                        ; preds = %if.end48
  store ptr @.str.148, ptr %nmspace20, align 8, !dbg !11812, !tbaa !2416
  br label %if.end51, !dbg !11814

if.end51:                                         ; preds = %if.then50, %if.end48
  %59 = load ptr, ptr %reports, align 8, !dbg !11815, !tbaa !2416
  %elts52 = getelementptr inbounds %struct.apr_array_header_t, ptr %59, i32 0, i32 4, !dbg !11816
  %60 = load ptr, ptr %elts52, align 8, !dbg !11816, !tbaa !2715
  store ptr %60, ptr %rp, align 8, !dbg !11817, !tbaa !2416
  store i32 0, ptr %i21, align 4, !dbg !11818, !tbaa !2683
  br label %for.cond53, !dbg !11820

for.cond53:                                       ; preds = %for.inc71, %if.end51
  %61 = load i32, ptr %i21, align 4, !dbg !11821, !tbaa !2683
  %62 = load ptr, ptr %reports, align 8, !dbg !11823, !tbaa !2416
  %nelts54 = getelementptr inbounds %struct.apr_array_header_t, ptr %62, i32 0, i32 2, !dbg !11824
  %63 = load i32, ptr %nelts54, align 4, !dbg !11824, !tbaa !2702
  %cmp55 = icmp slt i32 %61, %63, !dbg !11825
  br i1 %cmp55, label %for.body56, label %for.end74, !dbg !11826

for.body56:                                       ; preds = %for.cond53
  %64 = load ptr, ptr %name19, align 8, !dbg !11827, !tbaa !2416
  %65 = load ptr, ptr %rp, align 8, !dbg !11830, !tbaa !2416
  %name57 = getelementptr inbounds %struct.dav_report_elem, ptr %65, i32 0, i32 1, !dbg !11831
  %66 = load ptr, ptr %name57, align 8, !dbg !11831, !tbaa !4688
  %call58 = call i32 @strcmp(ptr noundef %64, ptr noundef %66) #11, !dbg !11832
  %cmp59 = icmp eq i32 %call58, 0, !dbg !11833
  br i1 %cmp59, label %land.lhs.true60, label %if.end70, !dbg !11834

land.lhs.true60:                                  ; preds = %for.body56
  %67 = load ptr, ptr %nmspace20, align 8, !dbg !11835, !tbaa !2416
  %68 = load ptr, ptr %rp, align 8, !dbg !11836, !tbaa !2416
  %nmspace61 = getelementptr inbounds %struct.dav_report_elem, ptr %68, i32 0, i32 0, !dbg !11837
  %69 = load ptr, ptr %nmspace61, align 8, !dbg !11837, !tbaa !4696
  %call62 = call i32 @strcmp(ptr noundef %67, ptr noundef %69) #11, !dbg !11838
  %cmp63 = icmp eq i32 %call62, 0, !dbg !11839
  br i1 %cmp63, label %if.then64, label %if.end70, !dbg !11840

if.then64:                                        ; preds = %land.lhs.true60
  %70 = load ptr, ptr %r.addr, align 8, !dbg !11841, !tbaa !2416
  %pool65 = getelementptr inbounds %struct.request_rec, ptr %70, i32 0, i32 0, !dbg !11843
  %71 = load ptr, ptr %pool65, align 8, !dbg !11843, !tbaa !2792
  %72 = load ptr, ptr %rp, align 8, !dbg !11844, !tbaa !2416
  %name66 = getelementptr inbounds %struct.dav_report_elem, ptr %72, i32 0, i32 1, !dbg !11845
  %73 = load ptr, ptr %name66, align 8, !dbg !11845, !tbaa !4688
  %74 = load ptr, ptr %rp, align 8, !dbg !11846, !tbaa !2416
  %nmspace67 = getelementptr inbounds %struct.dav_report_elem, ptr %74, i32 0, i32 0, !dbg !11847
  %75 = load ptr, ptr %nmspace67, align 8, !dbg !11847, !tbaa !4696
  %call68 = call ptr (ptr, ...) @apr_pstrcat(ptr noundef %71, ptr noundef @.str.152, ptr noundef %73, ptr noundef @.str.153, ptr noundef %75, ptr noundef @.str.137, ptr noundef null), !dbg !11848
  store ptr %call68, ptr %s, align 8, !dbg !11849, !tbaa !2416
  %76 = load ptr, ptr %r.addr, align 8, !dbg !11850, !tbaa !2416
  %pool69 = getelementptr inbounds %struct.request_rec, ptr %76, i32 0, i32 0, !dbg !11851
  %77 = load ptr, ptr %pool69, align 8, !dbg !11851, !tbaa !2792
  %78 = load ptr, ptr %body.addr, align 8, !dbg !11852, !tbaa !2416
  %79 = load ptr, ptr %s, align 8, !dbg !11853, !tbaa !2416
  call void @apr_text_append(ptr noundef %77, ptr noundef %78, ptr noundef %79), !dbg !11854
  br label %for.end74, !dbg !11855

if.end70:                                         ; preds = %land.lhs.true60, %for.body56
  br label %for.inc71, !dbg !11856

for.inc71:                                        ; preds = %if.end70
  %80 = load i32, ptr %i21, align 4, !dbg !11857, !tbaa !2683
  %inc72 = add nsw i32 %80, 1, !dbg !11857
  store i32 %inc72, ptr %i21, align 4, !dbg !11857, !tbaa !2683
  %81 = load ptr, ptr %rp, align 8, !dbg !11858, !tbaa !2416
  %incdec.ptr73 = getelementptr inbounds %struct.dav_report_elem, ptr %81, i32 1, !dbg !11858
  store ptr %incdec.ptr73, ptr %rp, align 8, !dbg !11858, !tbaa !2416
  br label %for.cond53, !dbg !11859, !llvm.loop !11860

for.end74:                                        ; preds = %if.then64, %for.cond53
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !11862
  br label %cleanup, !dbg !11862

cleanup:                                          ; preds = %for.end74, %if.then45
  call void @llvm.lifetime.end.p0(i64 4, ptr %i21) #10, !dbg !11862
  call void @llvm.lifetime.end.p0(i64 8, ptr %nmspace20) #10, !dbg !11862
  call void @llvm.lifetime.end.p0(i64 8, ptr %name19) #10, !dbg !11862
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup83 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end77, !dbg !11863

if.end77:                                         ; preds = %cleanup.cont, %land.lhs.true, %for.body13
  br label %for.inc78, !dbg !11864

for.inc78:                                        ; preds = %if.end77
  %82 = load ptr, ptr %child, align 8, !dbg !11865, !tbaa !2416
  %next79 = getelementptr inbounds %struct.apr_xml_elem, ptr %82, i32 0, i32 6, !dbg !11866
  %83 = load ptr, ptr %next79, align 8, !dbg !11866, !tbaa !6352
  store ptr %83, ptr %child, align 8, !dbg !11867, !tbaa !2416
  br label %for.cond11, !dbg !11868, !llvm.loop !11869

for.end80:                                        ; preds = %for.cond11
  br label %if.end81

if.end81:                                         ; preds = %for.end80, %for.end
  %84 = load ptr, ptr %r.addr, align 8, !dbg !11871, !tbaa !2416
  %pool82 = getelementptr inbounds %struct.request_rec, ptr %84, i32 0, i32 0, !dbg !11872
  %85 = load ptr, ptr %pool82, align 8, !dbg !11872, !tbaa !2792
  %86 = load ptr, ptr %body.addr, align 8, !dbg !11873, !tbaa !2416
  call void @apr_text_append(ptr noundef %85, ptr noundef %86, ptr noundef @.str.156), !dbg !11874
  store ptr null, ptr %retval, align 8, !dbg !11875
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !11875

cleanup83:                                        ; preds = %if.end81, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %rp) #10, !dbg !11876
  call void @llvm.lifetime.end.p0(i64 8, ptr %reports) #10, !dbg !11876
  call void @llvm.lifetime.end.p0(i64 8, ptr %s) #10, !dbg !11876
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !11876
  call void @llvm.lifetime.end.p0(i64 8, ptr %attr) #10, !dbg !11876
  call void @llvm.lifetime.end.p0(i64 8, ptr %child) #10, !dbg !11876
  %87 = load ptr, ptr %retval, align 8, !dbg !11876
  ret ptr %87, !dbg !11876
}

declare !dbg !11877 ptr @dav_open_propdb(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) #2

declare !dbg !11881 { ptr, ptr } @dav_get_allprops(ptr noundef, i32 noundef) #2

declare !dbg !11884 void @dav_get_liveprop_supported(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !11887 void @dav_close_propdb(ptr noundef) #2

declare !dbg !11890 ptr @dav_find_child(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal ptr @dav_propfind_walker(ptr noundef %wres, i32 noundef %calltype) #0 !dbg !11893 {
entry:
  %retval = alloca ptr, align 8
  %wres.addr = alloca ptr, align 8
  %calltype.addr = alloca i32, align 4
  %ctx = alloca ptr, align 8
  %conf = alloca ptr, align 8
  %flags = alloca i32, align 4
  %err = alloca ptr, align 8
  %propdb = alloca ptr, align 8
  %propstats = alloca %struct.dav_get_props_result, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %badprops = alloca %struct.dav_get_props_result, align 8
  %tmp = alloca %struct.dav_get_props_result, align 8
  %what = alloca i32, align 4
  %tmp33 = alloca %struct.dav_get_props_result, align 8
  store ptr %wres, ptr %wres.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %wres.addr, metadata !11895, metadata !DIExpression()), !dbg !11912
  store i32 %calltype, ptr %calltype.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %calltype.addr, metadata !11896, metadata !DIExpression()), !dbg !11913
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx) #10, !dbg !11914
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !11897, metadata !DIExpression()), !dbg !11915
  %0 = load ptr, ptr %wres.addr, align 8, !dbg !11916, !tbaa !2416
  %walk_ctx = getelementptr inbounds %struct.dav_walk_resource, ptr %0, i32 0, i32 0, !dbg !11917
  %1 = load ptr, ptr %walk_ctx, align 8, !dbg !11917, !tbaa !11918
  store ptr %1, ptr %ctx, align 8, !dbg !11915, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %conf) #10, !dbg !11919
  tail call void @llvm.dbg.declare(metadata ptr %conf, metadata !11899, metadata !DIExpression()), !dbg !11920
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #10, !dbg !11921
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !11900, metadata !DIExpression()), !dbg !11922
  store i32 1, ptr %flags, align 4, !dbg !11922, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !11923
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !11901, metadata !DIExpression()), !dbg !11924
  call void @llvm.lifetime.start.p0(i64 8, ptr %propdb) #10, !dbg !11925
  tail call void @llvm.dbg.declare(metadata ptr %propdb, metadata !11902, metadata !DIExpression()), !dbg !11926
  call void @llvm.lifetime.start.p0(i64 16, ptr %propstats) #10, !dbg !11927
  tail call void @llvm.dbg.declare(metadata ptr %propstats, metadata !11903, metadata !DIExpression()), !dbg !11928
  call void @llvm.memset.p0.i64(ptr align 8 %propstats, i8 0, i64 16, i1 false), !dbg !11928
  %2 = load ptr, ptr %ctx, align 8, !dbg !11929, !tbaa !2416
  %r = getelementptr inbounds %struct.dav_walker_ctx, ptr %2, i32 0, i32 3, !dbg !11931
  %3 = load ptr, ptr %r, align 8, !dbg !11931, !tbaa !6618
  %4 = load ptr, ptr %wres.addr, align 8, !dbg !11932, !tbaa !2416
  %resource = getelementptr inbounds %struct.dav_walk_resource, ptr %4, i32 0, i32 2, !dbg !11933
  %5 = load ptr, ptr %resource, align 8, !dbg !11933, !tbaa !3321
  %6 = load ptr, ptr %ctx, align 8, !dbg !11934, !tbaa !2416
  %doc = getelementptr inbounds %struct.dav_walker_ctx, ptr %6, i32 0, i32 4, !dbg !11935
  %7 = load ptr, ptr %doc, align 8, !dbg !11935, !tbaa !6614
  %call = call i32 @dav_run_method_precondition(ptr noundef %3, ptr noundef null, ptr noundef %5, ptr noundef %7, ptr noundef %err), !dbg !11936
  %cmp = icmp ne i32 %call, -1, !dbg !11937
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11938

land.lhs.true:                                    ; preds = %entry
  %8 = load ptr, ptr %err, align 8, !dbg !11939, !tbaa !2416
  %tobool = icmp ne ptr %8, null, !dbg !11939
  br i1 %tobool, label %if.then, label %if.end, !dbg !11940

if.then:                                          ; preds = %land.lhs.true
  %9 = load ptr, ptr %ctx, align 8, !dbg !11941, !tbaa !2416
  %scratchpool = getelementptr inbounds %struct.dav_walker_ctx, ptr %9, i32 0, i32 2, !dbg !11943
  %10 = load ptr, ptr %scratchpool, align 8, !dbg !11943, !tbaa !6630
  call void @apr_pool_clear(ptr noundef %10), !dbg !11944
  store ptr null, ptr %retval, align 8, !dbg !11945
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11945

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load ptr, ptr %ctx, align 8, !dbg !11946, !tbaa !2416
  %r1 = getelementptr inbounds %struct.dav_walker_ctx, ptr %11, i32 0, i32 3, !dbg !11946
  %12 = load ptr, ptr %r1, align 8, !dbg !11946, !tbaa !6618
  %per_dir_config = getelementptr inbounds %struct.request_rec, ptr %12, i32 0, i32 54, !dbg !11946
  %13 = load ptr, ptr %per_dir_config, align 8, !dbg !11946, !tbaa !2424
  %14 = load i32, ptr getelementptr inbounds (%struct.module_struct, ptr @dav_module, i32 0, i32 2), align 8, !dbg !11946, !tbaa !2431
  %idxprom = sext i32 %14 to i64, !dbg !11946
  %arrayidx = getelementptr inbounds ptr, ptr %13, i64 %idxprom, !dbg !11946
  %15 = load ptr, ptr %arrayidx, align 8, !dbg !11946, !tbaa !2416
  store ptr %15, ptr %conf, align 8, !dbg !11947, !tbaa !2416
  %16 = load ptr, ptr %conf, align 8, !dbg !11948, !tbaa !2416
  %tobool2 = icmp ne ptr %16, null, !dbg !11948
  br i1 %tobool2, label %land.lhs.true3, label %if.end6, !dbg !11950

land.lhs.true3:                                   ; preds = %if.end
  %17 = load ptr, ptr %conf, align 8, !dbg !11951, !tbaa !2416
  %allow_lockdiscovery = getelementptr inbounds %struct.dav_dir_conf, ptr %17, i32 0, i32 5, !dbg !11952
  %18 = load i32, ptr %allow_lockdiscovery, align 8, !dbg !11952, !tbaa !3678
  %cmp4 = icmp eq i32 %18, 1, !dbg !11953
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11954

if.then5:                                         ; preds = %land.lhs.true3
  %19 = load i32, ptr %flags, align 4, !dbg !11955, !tbaa !2683
  %or = or i32 %19, 2, !dbg !11955
  store i32 %or, ptr %flags, align 4, !dbg !11955, !tbaa !2683
  br label %if.end6, !dbg !11956

if.end6:                                          ; preds = %if.then5, %land.lhs.true3, %if.end
  %20 = load ptr, ptr %ctx, align 8, !dbg !11957, !tbaa !2416
  %scratchpool7 = getelementptr inbounds %struct.dav_walker_ctx, ptr %20, i32 0, i32 2, !dbg !11958
  %21 = load ptr, ptr %scratchpool7, align 8, !dbg !11958, !tbaa !6630
  %22 = load ptr, ptr %ctx, align 8, !dbg !11959, !tbaa !2416
  %r8 = getelementptr inbounds %struct.dav_walker_ctx, ptr %22, i32 0, i32 3, !dbg !11960
  %23 = load ptr, ptr %r8, align 8, !dbg !11960, !tbaa !6618
  %24 = load ptr, ptr %ctx, align 8, !dbg !11961, !tbaa !2416
  %w = getelementptr inbounds %struct.dav_walker_ctx, ptr %24, i32 0, i32 0, !dbg !11962
  %lockdb = getelementptr inbounds %struct.dav_walk_params, ptr %w, i32 0, i32 5, !dbg !11963
  %25 = load ptr, ptr %lockdb, align 8, !dbg !11963, !tbaa !6655
  %26 = load ptr, ptr %wres.addr, align 8, !dbg !11964, !tbaa !2416
  %resource9 = getelementptr inbounds %struct.dav_walk_resource, ptr %26, i32 0, i32 2, !dbg !11965
  %27 = load ptr, ptr %resource9, align 8, !dbg !11965, !tbaa !3321
  %28 = load i32, ptr %flags, align 4, !dbg !11966, !tbaa !2683
  %29 = load ptr, ptr %ctx, align 8, !dbg !11967, !tbaa !2416
  %doc10 = getelementptr inbounds %struct.dav_walker_ctx, ptr %29, i32 0, i32 4, !dbg !11968
  %30 = load ptr, ptr %doc10, align 8, !dbg !11968, !tbaa !6614
  %tobool11 = icmp ne ptr %30, null, !dbg !11967
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !11967

cond.true:                                        ; preds = %if.end6
  %31 = load ptr, ptr %ctx, align 8, !dbg !11969, !tbaa !2416
  %doc12 = getelementptr inbounds %struct.dav_walker_ctx, ptr %31, i32 0, i32 4, !dbg !11970
  %32 = load ptr, ptr %doc12, align 8, !dbg !11970, !tbaa !6614
  %namespaces = getelementptr inbounds %struct.apr_xml_doc, ptr %32, i32 0, i32 1, !dbg !11971
  %33 = load ptr, ptr %namespaces, align 8, !dbg !11971, !tbaa !6668
  br label %cond.end, !dbg !11967

cond.false:                                       ; preds = %if.end6
  br label %cond.end, !dbg !11967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %33, %cond.true ], [ null, %cond.false ], !dbg !11967
  %call13 = call ptr @dav_popen_propdb(ptr noundef %21, ptr noundef %23, ptr noundef %25, ptr noundef %27, i32 noundef %28, ptr noundef %cond, ptr noundef %propdb), !dbg !11972
  store ptr %call13, ptr %err, align 8, !dbg !11973, !tbaa !2416
  %34 = load ptr, ptr %err, align 8, !dbg !11974, !tbaa !2416
  %cmp14 = icmp ne ptr %34, null, !dbg !11975
  br i1 %cmp14, label %if.then15, label %if.end23, !dbg !11976

if.then15:                                        ; preds = %cond.end
  %35 = load ptr, ptr %ctx, align 8, !dbg !11977, !tbaa !2416
  %propfind_type = getelementptr inbounds %struct.dav_walker_ctx, ptr %35, i32 0, i32 5, !dbg !11978
  %36 = load i32, ptr %propfind_type, align 8, !dbg !11978, !tbaa !6556
  %cmp16 = icmp eq i32 %36, 3, !dbg !11979
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !11980

if.then17:                                        ; preds = %if.then15
  call void @llvm.lifetime.start.p0(i64 16, ptr %badprops) #10, !dbg !11981
  tail call void @llvm.dbg.declare(metadata ptr %badprops, metadata !11904, metadata !DIExpression()), !dbg !11982
  call void @llvm.memset.p0.i64(ptr align 8 %badprops, i8 0, i64 16, i1 false), !dbg !11982
  %37 = load ptr, ptr %ctx, align 8, !dbg !11983, !tbaa !2416
  call void @dav_cache_badprops(ptr noundef %37), !dbg !11984
  %38 = load ptr, ptr %ctx, align 8, !dbg !11985, !tbaa !2416
  %propstat_404 = getelementptr inbounds %struct.dav_walker_ctx, ptr %38, i32 0, i32 6, !dbg !11986
  %39 = load ptr, ptr %propstat_404, align 8, !dbg !11986, !tbaa !11987
  %propstats18 = getelementptr inbounds %struct.dav_get_props_result, ptr %badprops, i32 0, i32 0, !dbg !11988
  store ptr %39, ptr %propstats18, align 8, !dbg !11989, !tbaa !4696
  %40 = load ptr, ptr %wres.addr, align 8, !dbg !11990, !tbaa !2416
  %41 = load ptr, ptr %ctx, align 8, !dbg !11991, !tbaa !2416
  %scratchpool19 = getelementptr inbounds %struct.dav_walker_ctx, ptr %41, i32 0, i32 2, !dbg !11992
  %42 = load ptr, ptr %scratchpool19, align 8, !dbg !11992, !tbaa !6630
  call void @dav_stream_response(ptr noundef %40, i32 noundef 0, ptr noundef %badprops, ptr noundef %42), !dbg !11993
  call void @llvm.lifetime.end.p0(i64 16, ptr %badprops) #10, !dbg !11994
  br label %if.end21, !dbg !11995

if.else:                                          ; preds = %if.then15
  %43 = load ptr, ptr %wres.addr, align 8, !dbg !11996, !tbaa !2416
  %44 = load ptr, ptr %ctx, align 8, !dbg !11998, !tbaa !2416
  %scratchpool20 = getelementptr inbounds %struct.dav_walker_ctx, ptr %44, i32 0, i32 2, !dbg !11999
  %45 = load ptr, ptr %scratchpool20, align 8, !dbg !11999, !tbaa !6630
  call void @dav_stream_response(ptr noundef %43, i32 noundef 200, ptr noundef null, ptr noundef %45), !dbg !12000
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then17
  %46 = load ptr, ptr %ctx, align 8, !dbg !12001, !tbaa !2416
  %scratchpool22 = getelementptr inbounds %struct.dav_walker_ctx, ptr %46, i32 0, i32 2, !dbg !12002
  %47 = load ptr, ptr %scratchpool22, align 8, !dbg !12002, !tbaa !6630
  call void @apr_pool_clear(ptr noundef %47), !dbg !12003
  store ptr null, ptr %retval, align 8, !dbg !12004
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12004

if.end23:                                         ; preds = %cond.end
  %48 = load ptr, ptr %ctx, align 8, !dbg !12005, !tbaa !2416
  %propfind_type24 = getelementptr inbounds %struct.dav_walker_ctx, ptr %48, i32 0, i32 5, !dbg !12006
  %49 = load i32, ptr %propfind_type24, align 8, !dbg !12006, !tbaa !6556
  %cmp25 = icmp eq i32 %49, 3, !dbg !12007
  br i1 %cmp25, label %if.then26, label %if.else29, !dbg !12008

if.then26:                                        ; preds = %if.end23
  call void @llvm.lifetime.start.p0(i64 16, ptr %tmp) #10, !dbg !12009
  %50 = load ptr, ptr %propdb, align 8, !dbg !12011, !tbaa !2416
  %51 = load ptr, ptr %ctx, align 8, !dbg !12012, !tbaa !2416
  %doc27 = getelementptr inbounds %struct.dav_walker_ctx, ptr %51, i32 0, i32 4, !dbg !12013
  %52 = load ptr, ptr %doc27, align 8, !dbg !12013, !tbaa !6614
  %call28 = call { ptr, ptr } @dav_get_props(ptr noundef %50, ptr noundef %52), !dbg !12009
  %53 = getelementptr inbounds { ptr, ptr }, ptr %tmp, i32 0, i32 0, !dbg !12009
  %54 = extractvalue { ptr, ptr } %call28, 0, !dbg !12009
  store ptr %54, ptr %53, align 8, !dbg !12009
  %55 = getelementptr inbounds { ptr, ptr }, ptr %tmp, i32 0, i32 1, !dbg !12009
  %56 = extractvalue { ptr, ptr } %call28, 1, !dbg !12009
  store ptr %56, ptr %55, align 8, !dbg !12009
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %propstats, ptr align 8 %tmp, i64 16, i1 false), !dbg !12009, !tbaa.struct !3341
  call void @llvm.lifetime.end.p0(i64 16, ptr %tmp) #10, !dbg !12009
  br label %if.end35, !dbg !12014

if.else29:                                        ; preds = %if.end23
  call void @llvm.lifetime.start.p0(i64 4, ptr %what) #10, !dbg !12015
  tail call void @llvm.dbg.declare(metadata ptr %what, metadata !11909, metadata !DIExpression()), !dbg !12016
  %57 = load ptr, ptr %ctx, align 8, !dbg !12017, !tbaa !2416
  %propfind_type30 = getelementptr inbounds %struct.dav_walker_ctx, ptr %57, i32 0, i32 5, !dbg !12018
  %58 = load i32, ptr %propfind_type30, align 8, !dbg !12018, !tbaa !6556
  %cmp31 = icmp eq i32 %58, 1, !dbg !12019
  %59 = zext i1 %cmp31 to i64, !dbg !12017
  %cond32 = select i1 %cmp31, i32 3, i32 2, !dbg !12017
  store i32 %cond32, ptr %what, align 4, !dbg !12016, !tbaa !2961
  call void @llvm.lifetime.start.p0(i64 16, ptr %tmp33) #10, !dbg !12020
  %60 = load ptr, ptr %propdb, align 8, !dbg !12021, !tbaa !2416
  %61 = load i32, ptr %what, align 4, !dbg !12022, !tbaa !2961
  %call34 = call { ptr, ptr } @dav_get_allprops(ptr noundef %60, i32 noundef %61), !dbg !12020
  %62 = getelementptr inbounds { ptr, ptr }, ptr %tmp33, i32 0, i32 0, !dbg !12020
  %63 = extractvalue { ptr, ptr } %call34, 0, !dbg !12020
  store ptr %63, ptr %62, align 8, !dbg !12020
  %64 = getelementptr inbounds { ptr, ptr }, ptr %tmp33, i32 0, i32 1, !dbg !12020
  %65 = extractvalue { ptr, ptr } %call34, 1, !dbg !12020
  store ptr %65, ptr %64, align 8, !dbg !12020
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %propstats, ptr align 8 %tmp33, i64 16, i1 false), !dbg !12020, !tbaa.struct !3341
  call void @llvm.lifetime.end.p0(i64 16, ptr %tmp33) #10, !dbg !12020
  call void @llvm.lifetime.end.p0(i64 4, ptr %what) #10, !dbg !12023
  br label %if.end35

if.end35:                                         ; preds = %if.else29, %if.then26
  %66 = load ptr, ptr %wres.addr, align 8, !dbg !12024, !tbaa !2416
  %67 = load ptr, ptr %ctx, align 8, !dbg !12025, !tbaa !2416
  %scratchpool36 = getelementptr inbounds %struct.dav_walker_ctx, ptr %67, i32 0, i32 2, !dbg !12026
  %68 = load ptr, ptr %scratchpool36, align 8, !dbg !12026, !tbaa !6630
  call void @dav_stream_response(ptr noundef %66, i32 noundef 0, ptr noundef %propstats, ptr noundef %68), !dbg !12027
  %69 = load ptr, ptr %propdb, align 8, !dbg !12028, !tbaa !2416
  call void @dav_close_propdb(ptr noundef %69), !dbg !12029
  %70 = load ptr, ptr %ctx, align 8, !dbg !12030, !tbaa !2416
  %scratchpool37 = getelementptr inbounds %struct.dav_walker_ctx, ptr %70, i32 0, i32 2, !dbg !12031
  %71 = load ptr, ptr %scratchpool37, align 8, !dbg !12031, !tbaa !6630
  call void @apr_pool_clear(ptr noundef %71), !dbg !12032
  store ptr null, ptr %retval, align 8, !dbg !12033
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12033

cleanup:                                          ; preds = %if.end35, %if.end21, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr %propstats) #10, !dbg !12034
  call void @llvm.lifetime.end.p0(i64 8, ptr %propdb) #10, !dbg !12034
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !12034
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #10, !dbg !12034
  call void @llvm.lifetime.end.p0(i64 8, ptr %conf) #10, !dbg !12034
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx) #10, !dbg !12034
  %72 = load ptr, ptr %retval, align 8, !dbg !12034
  ret ptr %72, !dbg !12034
}

declare !dbg !12035 ptr @dav_popen_propdb(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal void @dav_cache_badprops(ptr noundef %ctx) #0 !dbg !12038 {
entry:
  %ctx.addr = alloca ptr, align 8
  %elem = alloca ptr, align 8
  %hdr = alloca %struct.apr_text_header, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %ctx.addr, metadata !12042, metadata !DIExpression()), !dbg !12045
  call void @llvm.lifetime.start.p0(i64 8, ptr %elem) #10, !dbg !12046
  tail call void @llvm.dbg.declare(metadata ptr %elem, metadata !12043, metadata !DIExpression()), !dbg !12047
  call void @llvm.lifetime.start.p0(i64 16, ptr %hdr) #10, !dbg !12048
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !12044, metadata !DIExpression()), !dbg !12049
  call void @llvm.memset.p0.i64(ptr align 8 %hdr, i8 0, i64 16, i1 false), !dbg !12049
  %0 = load ptr, ptr %ctx.addr, align 8, !dbg !12050, !tbaa !2416
  %propstat_404 = getelementptr inbounds %struct.dav_walker_ctx, ptr %0, i32 0, i32 6, !dbg !12052
  %1 = load ptr, ptr %propstat_404, align 8, !dbg !12052, !tbaa !11987
  %cmp = icmp ne ptr %1, null, !dbg !12053
  br i1 %cmp, label %if.then, label %if.end, !dbg !12054

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12055

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %ctx.addr, align 8, !dbg !12057, !tbaa !2416
  %w = getelementptr inbounds %struct.dav_walker_ctx, ptr %2, i32 0, i32 0, !dbg !12058
  %pool = getelementptr inbounds %struct.dav_walk_params, ptr %w, i32 0, i32 3, !dbg !12059
  %3 = load ptr, ptr %pool, align 8, !dbg !12059, !tbaa !6605
  call void @apr_text_append(ptr noundef %3, ptr noundef %hdr, ptr noundef @.str.34), !dbg !12060
  %4 = load ptr, ptr %ctx.addr, align 8, !dbg !12061, !tbaa !2416
  %doc = getelementptr inbounds %struct.dav_walker_ctx, ptr %4, i32 0, i32 4, !dbg !12062
  %5 = load ptr, ptr %doc, align 8, !dbg !12062, !tbaa !6614
  %root = getelementptr inbounds %struct.apr_xml_doc, ptr %5, i32 0, i32 0, !dbg !12063
  %6 = load ptr, ptr %root, align 8, !dbg !12063, !tbaa !6252
  %call = call ptr @dav_find_child(ptr noundef %6, ptr noundef @.str.162), !dbg !12064
  store ptr %call, ptr %elem, align 8, !dbg !12065, !tbaa !2416
  %7 = load ptr, ptr %elem, align 8, !dbg !12066, !tbaa !2416
  %first_child = getelementptr inbounds %struct.apr_xml_elem, ptr %7, i32 0, i32 7, !dbg !12068
  %8 = load ptr, ptr %first_child, align 8, !dbg !12068, !tbaa !6255
  store ptr %8, ptr %elem, align 8, !dbg !12069, !tbaa !2416
  br label %for.cond, !dbg !12070

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load ptr, ptr %elem, align 8, !dbg !12071, !tbaa !2416
  %tobool = icmp ne ptr %9, null, !dbg !12073
  br i1 %tobool, label %for.body, label %for.end, !dbg !12073

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %ctx.addr, align 8, !dbg !12074, !tbaa !2416
  %w1 = getelementptr inbounds %struct.dav_walker_ctx, ptr %10, i32 0, i32 0, !dbg !12076
  %pool2 = getelementptr inbounds %struct.dav_walk_params, ptr %w1, i32 0, i32 3, !dbg !12077
  %11 = load ptr, ptr %pool2, align 8, !dbg !12077, !tbaa !6605
  %12 = load ptr, ptr %ctx.addr, align 8, !dbg !12078, !tbaa !2416
  %w3 = getelementptr inbounds %struct.dav_walker_ctx, ptr %12, i32 0, i32 0, !dbg !12079
  %pool4 = getelementptr inbounds %struct.dav_walk_params, ptr %w3, i32 0, i32 3, !dbg !12080
  %13 = load ptr, ptr %pool4, align 8, !dbg !12080, !tbaa !6605
  %14 = load ptr, ptr %elem, align 8, !dbg !12081, !tbaa !2416
  %call5 = call ptr @apr_xml_empty_elem(ptr noundef %13, ptr noundef %14), !dbg !12082
  call void @apr_text_append(ptr noundef %11, ptr noundef %hdr, ptr noundef %call5), !dbg !12083
  br label %for.inc, !dbg !12084

for.inc:                                          ; preds = %for.body
  %15 = load ptr, ptr %elem, align 8, !dbg !12085, !tbaa !2416
  %next = getelementptr inbounds %struct.apr_xml_elem, ptr %15, i32 0, i32 6, !dbg !12086
  %16 = load ptr, ptr %next, align 8, !dbg !12086, !tbaa !6352
  store ptr %16, ptr %elem, align 8, !dbg !12087, !tbaa !2416
  br label %for.cond, !dbg !12088, !llvm.loop !12089

for.end:                                          ; preds = %for.cond
  %17 = load ptr, ptr %ctx.addr, align 8, !dbg !12091, !tbaa !2416
  %w6 = getelementptr inbounds %struct.dav_walker_ctx, ptr %17, i32 0, i32 0, !dbg !12092
  %pool7 = getelementptr inbounds %struct.dav_walk_params, ptr %w6, i32 0, i32 3, !dbg !12093
  %18 = load ptr, ptr %pool7, align 8, !dbg !12093, !tbaa !6605
  call void @apr_text_append(ptr noundef %18, ptr noundef %hdr, ptr noundef @.str.167), !dbg !12094
  %first = getelementptr inbounds %struct.apr_text_header, ptr %hdr, i32 0, i32 0, !dbg !12095
  %19 = load ptr, ptr %first, align 8, !dbg !12095, !tbaa !3490
  %20 = load ptr, ptr %ctx.addr, align 8, !dbg !12096, !tbaa !2416
  %propstat_4048 = getelementptr inbounds %struct.dav_walker_ctx, ptr %20, i32 0, i32 6, !dbg !12097
  store ptr %19, ptr %propstat_4048, align 8, !dbg !12098, !tbaa !11987
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12099
  br label %cleanup, !dbg !12099

cleanup:                                          ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr %hdr) #10, !dbg !12099
  call void @llvm.lifetime.end.p0(i64 8, ptr %elem) #10, !dbg !12099
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !12099

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @dav_stream_response(ptr noundef %wres, i32 noundef %status, ptr noundef %propstats, ptr noundef %pool) #0 !dbg !12100 {
entry:
  %wres.addr = alloca ptr, align 8
  %status.addr = alloca i32, align 4
  %propstats.addr = alloca ptr, align 8
  %pool.addr = alloca ptr, align 8
  %resp = alloca %struct.dav_response, align 8
  %ctx = alloca ptr, align 8
  store ptr %wres, ptr %wres.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %wres.addr, metadata !12104, metadata !DIExpression()), !dbg !12110
  store i32 %status, ptr %status.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %status.addr, metadata !12105, metadata !DIExpression()), !dbg !12111
  store ptr %propstats, ptr %propstats.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %propstats.addr, metadata !12106, metadata !DIExpression()), !dbg !12112
  store ptr %pool, ptr %pool.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %pool.addr, metadata !12107, metadata !DIExpression()), !dbg !12113
  call void @llvm.lifetime.start.p0(i64 48, ptr %resp) #10, !dbg !12114
  tail call void @llvm.dbg.declare(metadata ptr %resp, metadata !12108, metadata !DIExpression()), !dbg !12115
  call void @llvm.memset.p0.i64(ptr align 8 %resp, i8 0, i64 48, i1 false), !dbg !12115
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx) #10, !dbg !12116
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !12109, metadata !DIExpression()), !dbg !12117
  %0 = load ptr, ptr %wres.addr, align 8, !dbg !12118, !tbaa !2416
  %walk_ctx = getelementptr inbounds %struct.dav_walk_resource, ptr %0, i32 0, i32 0, !dbg !12119
  %1 = load ptr, ptr %walk_ctx, align 8, !dbg !12119, !tbaa !11918
  store ptr %1, ptr %ctx, align 8, !dbg !12117, !tbaa !2416
  %2 = load ptr, ptr %wres.addr, align 8, !dbg !12120, !tbaa !2416
  %resource = getelementptr inbounds %struct.dav_walk_resource, ptr %2, i32 0, i32 2, !dbg !12121
  %3 = load ptr, ptr %resource, align 8, !dbg !12121, !tbaa !3321
  %uri = getelementptr inbounds %struct.dav_resource, ptr %3, i32 0, i32 6, !dbg !12122
  %4 = load ptr, ptr %uri, align 8, !dbg !12122, !tbaa !3323
  %href = getelementptr inbounds %struct.dav_response, ptr %resp, i32 0, i32 0, !dbg !12123
  store ptr %4, ptr %href, align 8, !dbg !12124, !tbaa !2571
  %5 = load i32, ptr %status.addr, align 4, !dbg !12125, !tbaa !2683
  %status1 = getelementptr inbounds %struct.dav_response, ptr %resp, i32 0, i32 3, !dbg !12126
  store i32 %5, ptr %status1, align 8, !dbg !12127, !tbaa !2587
  %6 = load ptr, ptr %propstats.addr, align 8, !dbg !12128, !tbaa !2416
  %tobool = icmp ne ptr %6, null, !dbg !12128
  br i1 %tobool, label %if.then, label %if.end, !dbg !12130

if.then:                                          ; preds = %entry
  %propresult = getelementptr inbounds %struct.dav_response, ptr %resp, i32 0, i32 2, !dbg !12131
  %7 = load ptr, ptr %propstats.addr, align 8, !dbg !12133, !tbaa !2416
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %propresult, ptr align 8 %7, i64 16, i1 false), !dbg !12134, !tbaa.struct !3341
  br label %if.end, !dbg !12135

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %ctx, align 8, !dbg !12136, !tbaa !2416
  %bb = getelementptr inbounds %struct.dav_walker_ctx, ptr %8, i32 0, i32 1, !dbg !12137
  %9 = load ptr, ptr %bb, align 8, !dbg !12137, !tbaa !6627
  %10 = load ptr, ptr %ctx, align 8, !dbg !12138, !tbaa !2416
  %r = getelementptr inbounds %struct.dav_walker_ctx, ptr %10, i32 0, i32 3, !dbg !12139
  %11 = load ptr, ptr %r, align 8, !dbg !12139, !tbaa !6618
  %12 = load ptr, ptr %pool.addr, align 8, !dbg !12140, !tbaa !2416
  call void @dav_send_one_response(ptr noundef %resp, ptr noundef %9, ptr noundef %11, ptr noundef %12), !dbg !12141
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx) #10, !dbg !12142
  call void @llvm.lifetime.end.p0(i64 48, ptr %resp) #10, !dbg !12142
  ret void, !dbg !12142
}

declare !dbg !12143 { ptr, ptr } @dav_get_props(ptr noundef, ptr noundef) #2

declare !dbg !12146 void @dav_prop_validate(ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_process_ctx_list(ptr noundef %func, ptr noundef %ctx_list, i32 noundef %stop_on_error, i32 noundef %reverse) #0 !dbg !12149 {
entry:
  %retval = alloca i32, align 4
  %func.addr = alloca ptr, align 8
  %ctx_list.addr = alloca ptr, align 8
  %stop_on_error.addr = alloca i32, align 4
  %reverse.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ctx = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !12154, metadata !DIExpression()), !dbg !12160
  store ptr %ctx_list, ptr %ctx_list.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %ctx_list.addr, metadata !12155, metadata !DIExpression()), !dbg !12161
  store i32 %stop_on_error, ptr %stop_on_error.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %stop_on_error.addr, metadata !12156, metadata !DIExpression()), !dbg !12162
  store i32 %reverse, ptr %reverse.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %reverse.addr, metadata !12157, metadata !DIExpression()), !dbg !12163
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #10, !dbg !12164
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !12158, metadata !DIExpression()), !dbg !12165
  %0 = load ptr, ptr %ctx_list.addr, align 8, !dbg !12166, !tbaa !2416
  %nelts = getelementptr inbounds %struct.apr_array_header_t, ptr %0, i32 0, i32 2, !dbg !12167
  %1 = load i32, ptr %nelts, align 4, !dbg !12167, !tbaa !2702
  store i32 %1, ptr %i, align 4, !dbg !12165, !tbaa !2683
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx) #10, !dbg !12168
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !12159, metadata !DIExpression()), !dbg !12169
  %2 = load ptr, ptr %ctx_list.addr, align 8, !dbg !12170, !tbaa !2416
  %elts = getelementptr inbounds %struct.apr_array_header_t, ptr %2, i32 0, i32 4, !dbg !12171
  %3 = load ptr, ptr %elts, align 8, !dbg !12171, !tbaa !2715
  store ptr %3, ptr %ctx, align 8, !dbg !12169, !tbaa !2416
  %4 = load i32, ptr %reverse.addr, align 4, !dbg !12172, !tbaa !2683
  %tobool = icmp ne i32 %4, 0, !dbg !12172
  br i1 %tobool, label %if.then, label %if.end, !dbg !12174

if.then:                                          ; preds = %entry
  %5 = load i32, ptr %i, align 4, !dbg !12175, !tbaa !2683
  %6 = load ptr, ptr %ctx, align 8, !dbg !12176, !tbaa !2416
  %idx.ext = sext i32 %5 to i64, !dbg !12176
  %add.ptr = getelementptr inbounds %struct.dav_prop_ctx, ptr %6, i64 %idx.ext, !dbg !12176
  store ptr %add.ptr, ptr %ctx, align 8, !dbg !12176, !tbaa !2416
  br label %if.end, !dbg !12177

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !12178

while.cond:                                       ; preds = %if.end14, %if.end
  %7 = load i32, ptr %i, align 4, !dbg !12179, !tbaa !2683
  %dec = add nsw i32 %7, -1, !dbg !12179
  store i32 %dec, ptr %i, align 4, !dbg !12179, !tbaa !2683
  %tobool1 = icmp ne i32 %7, 0, !dbg !12178
  br i1 %tobool1, label %while.body, label %while.end, !dbg !12178

while.body:                                       ; preds = %while.cond
  %8 = load i32, ptr %reverse.addr, align 4, !dbg !12180, !tbaa !2683
  %tobool2 = icmp ne i32 %8, 0, !dbg !12180
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12183

if.then3:                                         ; preds = %while.body
  %9 = load ptr, ptr %ctx, align 8, !dbg !12184, !tbaa !2416
  %incdec.ptr = getelementptr inbounds %struct.dav_prop_ctx, ptr %9, i32 -1, !dbg !12184
  store ptr %incdec.ptr, ptr %ctx, align 8, !dbg !12184, !tbaa !2416
  br label %if.end4, !dbg !12184

if.end4:                                          ; preds = %if.then3, %while.body
  %10 = load ptr, ptr %func.addr, align 8, !dbg !12185, !tbaa !2416
  %11 = load ptr, ptr %ctx, align 8, !dbg !12186, !tbaa !2416
  call void %10(ptr noundef %11), !dbg !12187
  %12 = load i32, ptr %stop_on_error.addr, align 4, !dbg !12188, !tbaa !2683
  %tobool5 = icmp ne i32 %12, 0, !dbg !12188
  br i1 %tobool5, label %land.lhs.true, label %if.end10, !dbg !12190

land.lhs.true:                                    ; preds = %if.end4
  %13 = load ptr, ptr %ctx, align 8, !dbg !12191, !tbaa !2416
  %err = getelementptr inbounds %struct.dav_prop_ctx, ptr %13, i32 0, i32 6, !dbg !12191
  %14 = load ptr, ptr %err, align 8, !dbg !12191, !tbaa !3412
  %tobool6 = icmp ne ptr %14, null, !dbg !12191
  br i1 %tobool6, label %land.lhs.true7, label %if.end10, !dbg !12191

land.lhs.true7:                                   ; preds = %land.lhs.true
  %15 = load ptr, ptr %ctx, align 8, !dbg !12191, !tbaa !2416
  %err8 = getelementptr inbounds %struct.dav_prop_ctx, ptr %15, i32 0, i32 6, !dbg !12191
  %16 = load ptr, ptr %err8, align 8, !dbg !12191, !tbaa !3412
  %status = getelementptr inbounds %struct.dav_error, ptr %16, i32 0, i32 0, !dbg !12191
  %17 = load i32, ptr %status, align 8, !dbg !12191, !tbaa !2871
  %cmp = icmp sge i32 %17, 300, !dbg !12191
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !12192

if.then9:                                         ; preds = %land.lhs.true7
  store i32 1, ptr %retval, align 4, !dbg !12193
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12193

if.end10:                                         ; preds = %land.lhs.true7, %land.lhs.true, %if.end4
  %18 = load i32, ptr %reverse.addr, align 4, !dbg !12195, !tbaa !2683
  %tobool11 = icmp ne i32 %18, 0, !dbg !12195
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !12197

if.then12:                                        ; preds = %if.end10
  %19 = load ptr, ptr %ctx, align 8, !dbg !12198, !tbaa !2416
  %incdec.ptr13 = getelementptr inbounds %struct.dav_prop_ctx, ptr %19, i32 1, !dbg !12198
  store ptr %incdec.ptr13, ptr %ctx, align 8, !dbg !12198, !tbaa !2416
  br label %if.end14, !dbg !12198

if.end14:                                         ; preds = %if.then12, %if.end10
  br label %while.cond, !dbg !12178, !llvm.loop !12199

while.end:                                        ; preds = %while.cond
  store i32 0, ptr %retval, align 4, !dbg !12201
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12201

cleanup:                                          ; preds = %while.end, %if.then9
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx) #10, !dbg !12202
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #10, !dbg !12202
  %20 = load i32, ptr %retval, align 4, !dbg !12202
  ret i32 %20, !dbg !12202
}

declare void @dav_prop_exec(ptr noundef) #2

declare void @dav_prop_rollback(ptr noundef) #2

declare void @dav_prop_commit(ptr noundef) #2

; Function Attrs: nounwind uwtable
define internal void @dav_prop_log_errors(ptr noundef %ctx) #0 !dbg !12203 {
entry:
  %ctx.addr = alloca ptr, align 8
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %ctx.addr, metadata !12205, metadata !DIExpression()), !dbg !12206
  %0 = load ptr, ptr %ctx.addr, align 8, !dbg !12207, !tbaa !2416
  %r = getelementptr inbounds %struct.dav_prop_ctx, ptr %0, i32 0, i32 7, !dbg !12208
  %1 = load ptr, ptr %r, align 8, !dbg !12208, !tbaa !6950
  %2 = load ptr, ptr %ctx.addr, align 8, !dbg !12209, !tbaa !2416
  %err = getelementptr inbounds %struct.dav_prop_ctx, ptr %2, i32 0, i32 6, !dbg !12210
  %3 = load ptr, ptr %err, align 8, !dbg !12210, !tbaa !3412
  call void @dav_log_err(ptr noundef %1, ptr noundef %3, i32 noundef 3), !dbg !12211
  ret void, !dbg !12212
}

; Function Attrs: nounwind uwtable
define internal i32 @process_mkcol_body(ptr noundef %r) #0 !dbg !12213 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %tenc = alloca ptr, align 8
  %lenp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !12215, metadata !DIExpression()), !dbg !12218
  call void @llvm.lifetime.start.p0(i64 8, ptr %tenc) #10, !dbg !12219
  tail call void @llvm.dbg.declare(metadata ptr %tenc, metadata !12216, metadata !DIExpression()), !dbg !12220
  %0 = load ptr, ptr %r.addr, align 8, !dbg !12221, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 34, !dbg !12222
  %1 = load ptr, ptr %headers_in, align 8, !dbg !12222, !tbaa !3088
  %call = call ptr @apr_table_get(ptr noundef %1, ptr noundef @.str.178), !dbg !12223
  store ptr %call, ptr %tenc, align 8, !dbg !12220, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %lenp) #10, !dbg !12224
  tail call void @llvm.dbg.declare(metadata ptr %lenp, metadata !12217, metadata !DIExpression()), !dbg !12225
  %2 = load ptr, ptr %r.addr, align 8, !dbg !12226, !tbaa !2416
  %headers_in1 = getelementptr inbounds %struct.request_rec, ptr %2, i32 0, i32 34, !dbg !12227
  %3 = load ptr, ptr %headers_in1, align 8, !dbg !12227, !tbaa !3088
  %call2 = call ptr @apr_table_get(ptr noundef %3, ptr noundef @.str.179), !dbg !12228
  store ptr %call2, ptr %lenp, align 8, !dbg !12225, !tbaa !2416
  %4 = load ptr, ptr %r.addr, align 8, !dbg !12229, !tbaa !2416
  %read_body = getelementptr inbounds %struct.request_rec, ptr %4, i32 0, i32 27, !dbg !12230
  store i32 0, ptr %read_body, align 4, !dbg !12231, !tbaa !12232
  %5 = load ptr, ptr %r.addr, align 8, !dbg !12233, !tbaa !2416
  %read_chunked = getelementptr inbounds %struct.request_rec, ptr %5, i32 0, i32 28, !dbg !12234
  store i32 0, ptr %read_chunked, align 8, !dbg !12235, !tbaa !12236
  %6 = load ptr, ptr %r.addr, align 8, !dbg !12237, !tbaa !2416
  %remaining = getelementptr inbounds %struct.request_rec, ptr %6, i32 0, i32 32, !dbg !12238
  store i64 0, ptr %remaining, align 8, !dbg !12239, !tbaa !12240
  %7 = load ptr, ptr %tenc, align 8, !dbg !12241, !tbaa !2416
  %tobool = icmp ne ptr %7, null, !dbg !12241
  br i1 %tobool, label %if.then, label %if.else, !dbg !12243

if.then:                                          ; preds = %entry
  %8 = load ptr, ptr %tenc, align 8, !dbg !12244, !tbaa !2416
  %call3 = call i32 @ap_cstr_casecmp(ptr noundef %8, ptr noundef @.str.180), !dbg !12247
  %tobool4 = icmp ne i32 %call3, 0, !dbg !12247
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !12248

if.then5:                                         ; preds = %if.then
  br label %do.body, !dbg !12249

do.body:                                          ; preds = %if.then5
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !12251

cond.true:                                        ; preds = %do.body
  %9 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !12251, !tbaa !2683
  br label %cond.end, !dbg !12251

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !12251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ -1, %cond.false ], !dbg !12251
  %10 = load ptr, ptr %r.addr, align 8, !dbg !12251, !tbaa !2416
  %11 = load ptr, ptr %tenc, align 8, !dbg !12251, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2567, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %10, ptr noundef @.str.181, ptr noundef %11), !dbg !12251
  br label %do.cond, !dbg !12254

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !12254

do.end:                                           ; preds = %do.cond
  store i32 501, ptr %retval, align 4, !dbg !12255
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12255

if.end:                                           ; preds = %if.then
  %12 = load ptr, ptr %r.addr, align 8, !dbg !12256, !tbaa !2416
  %read_chunked6 = getelementptr inbounds %struct.request_rec, ptr %12, i32 0, i32 28, !dbg !12257
  store i32 1, ptr %read_chunked6, align 8, !dbg !12258, !tbaa !12236
  br label %if.end23, !dbg !12259

if.else:                                          ; preds = %entry
  %13 = load ptr, ptr %lenp, align 8, !dbg !12260, !tbaa !2416
  %tobool7 = icmp ne ptr %13, null, !dbg !12260
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !12262

if.then8:                                         ; preds = %if.else
  %14 = load ptr, ptr %r.addr, align 8, !dbg !12263, !tbaa !2416
  %remaining9 = getelementptr inbounds %struct.request_rec, ptr %14, i32 0, i32 32, !dbg !12266
  %15 = load ptr, ptr %lenp, align 8, !dbg !12267, !tbaa !2416
  %call10 = call i32 @ap_parse_strict_length(ptr noundef %remaining9, ptr noundef %15), !dbg !12268
  %tobool11 = icmp ne i32 %call10, 0, !dbg !12268
  br i1 %tobool11, label %if.end21, label %if.then12, !dbg !12269

if.then12:                                        ; preds = %if.then8
  %16 = load ptr, ptr %r.addr, align 8, !dbg !12270, !tbaa !2416
  %remaining13 = getelementptr inbounds %struct.request_rec, ptr %16, i32 0, i32 32, !dbg !12272
  store i64 0, ptr %remaining13, align 8, !dbg !12273, !tbaa !12240
  br label %do.body14, !dbg !12274

do.body14:                                        ; preds = %if.then12
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true15, label %cond.false16, !dbg !12275

cond.true15:                                      ; preds = %do.body14
  %17 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !12275, !tbaa !2683
  br label %cond.end17, !dbg !12275

cond.false16:                                     ; preds = %do.body14
  br label %cond.end17, !dbg !12275

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi i32 [ %17, %cond.true15 ], [ -1, %cond.false16 ], !dbg !12275
  %18 = load ptr, ptr %r.addr, align 8, !dbg !12275, !tbaa !2416
  %19 = load ptr, ptr %lenp, align 8, !dbg !12275, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 2578, i32 noundef %cond18, i32 noundef 3, i32 noundef 0, ptr noundef %18, ptr noundef @.str.182, ptr noundef %19), !dbg !12275
  br label %do.cond19, !dbg !12278

do.cond19:                                        ; preds = %cond.end17
  br label %do.end20, !dbg !12278

do.end20:                                         ; preds = %do.cond19
  store i32 400, ptr %retval, align 4, !dbg !12279
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12279

if.end21:                                         ; preds = %if.then8
  br label %if.end22, !dbg !12280

if.end22:                                         ; preds = %if.end21, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  %20 = load ptr, ptr %r.addr, align 8, !dbg !12281, !tbaa !2416
  %read_chunked24 = getelementptr inbounds %struct.request_rec, ptr %20, i32 0, i32 28, !dbg !12283
  %21 = load i32, ptr %read_chunked24, align 8, !dbg !12283, !tbaa !12236
  %tobool25 = icmp ne i32 %21, 0, !dbg !12281
  br i1 %tobool25, label %if.then27, label %lor.lhs.false, !dbg !12284

lor.lhs.false:                                    ; preds = %if.end23
  %22 = load ptr, ptr %r.addr, align 8, !dbg !12285, !tbaa !2416
  %remaining26 = getelementptr inbounds %struct.request_rec, ptr %22, i32 0, i32 32, !dbg !12286
  %23 = load i64, ptr %remaining26, align 8, !dbg !12286, !tbaa !12240
  %cmp = icmp sgt i64 %23, 0, !dbg !12287
  br i1 %cmp, label %if.then27, label %if.end28, !dbg !12288

if.then27:                                        ; preds = %lor.lhs.false, %if.end23
  store i32 415, ptr %retval, align 4, !dbg !12289
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12289

if.end28:                                         ; preds = %lor.lhs.false
  %24 = load ptr, ptr %r.addr, align 8, !dbg !12291, !tbaa !2416
  %call29 = call i32 @ap_discard_request_body(ptr noundef %24), !dbg !12292
  store i32 %call29, ptr %retval, align 4, !dbg !12293
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12293

cleanup:                                          ; preds = %if.end28, %if.then27, %do.end20, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %lenp) #10, !dbg !12294
  call void @llvm.lifetime.end.p0(i64 8, ptr %tenc) #10, !dbg !12294
  %25 = load i32, ptr %retval, align 4, !dbg !12294
  ret i32 %25, !dbg !12294
}

declare !dbg !12295 void @dav_lookup_uri(ptr sret(%struct.dav_lookup_result) align 8, ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define internal i32 @dav_get_overwrite(ptr noundef %r) #0 !dbg !12298 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca ptr, align 8
  %overwrite = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %r, ptr %r.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %r.addr, metadata !12300, metadata !DIExpression()), !dbg !12302
  call void @llvm.lifetime.start.p0(i64 8, ptr %overwrite) #10, !dbg !12303
  tail call void @llvm.dbg.declare(metadata ptr %overwrite, metadata !12301, metadata !DIExpression()), !dbg !12304
  %0 = load ptr, ptr %r.addr, align 8, !dbg !12305, !tbaa !2416
  %headers_in = getelementptr inbounds %struct.request_rec, ptr %0, i32 0, i32 34, !dbg !12306
  %1 = load ptr, ptr %headers_in, align 8, !dbg !12306, !tbaa !3088
  %call = call ptr @apr_table_get(ptr noundef %1, ptr noundef @.str.205), !dbg !12307
  store ptr %call, ptr %overwrite, align 8, !dbg !12304, !tbaa !2416
  %2 = load ptr, ptr %overwrite, align 8, !dbg !12308, !tbaa !2416
  %cmp = icmp eq ptr %2, null, !dbg !12310
  br i1 %cmp, label %if.then, label %if.end, !dbg !12311

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !12312
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12312

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %overwrite, align 8, !dbg !12314, !tbaa !2416
  %4 = load i8, ptr %3, align 1, !dbg !12316, !tbaa !2961
  %conv = sext i8 %4 to i32, !dbg !12316
  %cmp1 = icmp eq i32 %conv, 70, !dbg !12317
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !12318

lor.lhs.false:                                    ; preds = %if.end
  %5 = load ptr, ptr %overwrite, align 8, !dbg !12319, !tbaa !2416
  %6 = load i8, ptr %5, align 1, !dbg !12320, !tbaa !2961
  %conv3 = sext i8 %6 to i32, !dbg !12320
  %cmp4 = icmp eq i32 %conv3, 102, !dbg !12321
  br i1 %cmp4, label %land.lhs.true, label %if.end10, !dbg !12322

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %7 = load ptr, ptr %overwrite, align 8, !dbg !12323, !tbaa !2416
  %arrayidx = getelementptr inbounds i8, ptr %7, i64 1, !dbg !12323
  %8 = load i8, ptr %arrayidx, align 1, !dbg !12323, !tbaa !2961
  %conv6 = sext i8 %8 to i32, !dbg !12323
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !12324
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12325

if.then9:                                         ; preds = %land.lhs.true
  store i32 0, ptr %retval, align 4, !dbg !12326
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12326

if.end10:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %9 = load ptr, ptr %overwrite, align 8, !dbg !12328, !tbaa !2416
  %10 = load i8, ptr %9, align 1, !dbg !12330, !tbaa !2961
  %conv11 = sext i8 %10 to i32, !dbg !12330
  %cmp12 = icmp eq i32 %conv11, 84, !dbg !12331
  br i1 %cmp12, label %land.lhs.true18, label %lor.lhs.false14, !dbg !12332

lor.lhs.false14:                                  ; preds = %if.end10
  %11 = load ptr, ptr %overwrite, align 8, !dbg !12333, !tbaa !2416
  %12 = load i8, ptr %11, align 1, !dbg !12334, !tbaa !2961
  %conv15 = sext i8 %12 to i32, !dbg !12334
  %cmp16 = icmp eq i32 %conv15, 116, !dbg !12335
  br i1 %cmp16, label %land.lhs.true18, label %if.end24, !dbg !12336

land.lhs.true18:                                  ; preds = %lor.lhs.false14, %if.end10
  %13 = load ptr, ptr %overwrite, align 8, !dbg !12337, !tbaa !2416
  %arrayidx19 = getelementptr inbounds i8, ptr %13, i64 1, !dbg !12337
  %14 = load i8, ptr %arrayidx19, align 1, !dbg !12337, !tbaa !2961
  %conv20 = sext i8 %14 to i32, !dbg !12337
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !12338
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !12339

if.then23:                                        ; preds = %land.lhs.true18
  store i32 1, ptr %retval, align 4, !dbg !12340
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12340

if.end24:                                         ; preds = %land.lhs.true18, %lor.lhs.false14
  br label %do.body, !dbg !12342

do.body:                                          ; preds = %if.end24
  br i1 icmp ne (ptr getelementptr (i8, ptr @dav_module, i64 8), ptr null), label %cond.true, label %cond.false, !dbg !12343

cond.true:                                        ; preds = %do.body
  %15 = load i32, ptr getelementptr (i8, ptr @dav_module, i64 8), align 4, !dbg !12343, !tbaa !2683
  br label %cond.end, !dbg !12343

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !12343

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ -1, %cond.false ], !dbg !12343
  %16 = load ptr, ptr %r.addr, align 8, !dbg !12343, !tbaa !2416
  call void (ptr, i32, i32, i32, i32, ptr, ptr, ...) @ap_log_rerror_(ptr noundef @.str.21, i32 noundef 733, i32 noundef %cond, i32 noundef 3, i32 noundef 0, ptr noundef %16, ptr noundef @.str.206), !dbg !12343
  br label %do.cond, !dbg !12346

do.cond:                                          ; preds = %cond.end
  br label %do.end, !dbg !12346

do.end:                                           ; preds = %do.cond
  store i32 -1, ptr %retval, align 4, !dbg !12347
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12347

cleanup:                                          ; preds = %do.end, %if.then23, %if.then9, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %overwrite) #10, !dbg !12348
  %17 = load i32, ptr %retval, align 4, !dbg !12348
  ret i32 %17, !dbg !12348
}

declare !dbg !12349 ptr @dav_lock_parse_lockinfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !12352 ptr @dav_get_locktoken_list(ptr noundef, ptr noundef) #2

declare !dbg !12356 i64 @dav_get_timeout(ptr noundef) #2

; Function Attrs: nounwind
declare !dbg !12359 i64 @time(ptr noundef) #8

declare !dbg !12364 ptr @dav_add_lock(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !12367 ptr @dav_lock_get_activelock(ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !12371 void @apr_xml_to_text(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare !dbg !12374 ptr @dav_xml_get_cdata(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define internal ptr @dav_label_walker(ptr noundef %wres, i32 noundef %calltype) #0 !dbg !12377 {
entry:
  %wres.addr = alloca ptr, align 8
  %calltype.addr = alloca i32, align 4
  %ctx = alloca ptr, align 8
  %err = alloca ptr, align 8
  store ptr %wres, ptr %wres.addr, align 8, !tbaa !2416
  tail call void @llvm.dbg.declare(metadata ptr %wres.addr, metadata !12379, metadata !DIExpression()), !dbg !12384
  store i32 %calltype, ptr %calltype.addr, align 4, !tbaa !2683
  tail call void @llvm.dbg.declare(metadata ptr %calltype.addr, metadata !12380, metadata !DIExpression()), !dbg !12385
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctx) #10, !dbg !12386
  tail call void @llvm.dbg.declare(metadata ptr %ctx, metadata !12381, metadata !DIExpression()), !dbg !12387
  %0 = load ptr, ptr %wres.addr, align 8, !dbg !12388, !tbaa !2416
  %walk_ctx = getelementptr inbounds %struct.dav_walk_resource, ptr %0, i32 0, i32 0, !dbg !12389
  %1 = load ptr, ptr %walk_ctx, align 8, !dbg !12389, !tbaa !11918
  store ptr %1, ptr %ctx, align 8, !dbg !12387, !tbaa !2416
  call void @llvm.lifetime.start.p0(i64 8, ptr %err) #10, !dbg !12390
  tail call void @llvm.dbg.declare(metadata ptr %err, metadata !12383, metadata !DIExpression()), !dbg !12391
  store ptr null, ptr %err, align 8, !dbg !12391, !tbaa !2416
  %2 = load ptr, ptr %ctx, align 8, !dbg !12392, !tbaa !2416
  %r = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %2, i32 0, i32 1, !dbg !12394
  %3 = load ptr, ptr %r, align 8, !dbg !12394, !tbaa !9864
  %4 = load ptr, ptr %wres.addr, align 8, !dbg !12395, !tbaa !2416
  %resource = getelementptr inbounds %struct.dav_walk_resource, ptr %4, i32 0, i32 2, !dbg !12396
  %5 = load ptr, ptr %resource, align 8, !dbg !12396, !tbaa !3321
  %call = call i32 @dav_run_method_precondition(ptr noundef %3, ptr noundef null, ptr noundef %5, ptr noundef null, ptr noundef %err), !dbg !12397
  %cmp = icmp ne i32 %call, -1, !dbg !12398
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12399

land.lhs.true:                                    ; preds = %entry
  %6 = load ptr, ptr %err, align 8, !dbg !12400, !tbaa !2416
  %tobool = icmp ne ptr %6, null, !dbg !12400
  br i1 %tobool, label %if.then, label %if.else, !dbg !12401

if.then:                                          ; preds = %land.lhs.true
  br label %if.end32, !dbg !12402

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load ptr, ptr %wres.addr, align 8, !dbg !12404, !tbaa !2416
  %resource1 = getelementptr inbounds %struct.dav_walk_resource, ptr %7, i32 0, i32 2, !dbg !12406
  %8 = load ptr, ptr %resource1, align 8, !dbg !12406, !tbaa !3321
  %type = getelementptr inbounds %struct.dav_resource, ptr %8, i32 0, i32 0, !dbg !12407
  %9 = load i32, ptr %type, align 8, !dbg !12407, !tbaa !4954
  %cmp2 = icmp ne i32 %9, 2, !dbg !12408
  br i1 %cmp2, label %land.lhs.true3, label %if.else11, !dbg !12409

land.lhs.true3:                                   ; preds = %if.else
  %10 = load ptr, ptr %wres.addr, align 8, !dbg !12410, !tbaa !2416
  %resource4 = getelementptr inbounds %struct.dav_walk_resource, ptr %10, i32 0, i32 2, !dbg !12411
  %11 = load ptr, ptr %resource4, align 8, !dbg !12411, !tbaa !3321
  %type5 = getelementptr inbounds %struct.dav_resource, ptr %11, i32 0, i32 0, !dbg !12412
  %12 = load i32, ptr %type5, align 8, !dbg !12412, !tbaa !4954
  %cmp6 = icmp ne i32 %12, 1, !dbg !12413
  br i1 %cmp6, label %if.then9, label %lor.lhs.false, !dbg !12414

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %13 = load ptr, ptr %wres.addr, align 8, !dbg !12415, !tbaa !2416
  %resource7 = getelementptr inbounds %struct.dav_walk_resource, ptr %13, i32 0, i32 2, !dbg !12416
  %14 = load ptr, ptr %resource7, align 8, !dbg !12416, !tbaa !3321
  %versioned = getelementptr inbounds %struct.dav_resource, ptr %14, i32 0, i32 3, !dbg !12417
  %15 = load i32, ptr %versioned, align 4, !dbg !12417, !tbaa !6009
  %tobool8 = icmp ne i32 %15, 0, !dbg !12415
  br i1 %tobool8, label %if.else11, label %if.then9, !dbg !12418

if.then9:                                         ; preds = %lor.lhs.false, %land.lhs.true3
  %16 = load ptr, ptr %ctx, align 8, !dbg !12419, !tbaa !2416
  %w = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %16, i32 0, i32 0, !dbg !12421
  %pool = getelementptr inbounds %struct.dav_walk_params, ptr %w, i32 0, i32 3, !dbg !12422
  %17 = load ptr, ptr %pool, align 8, !dbg !12422, !tbaa !9855
  %call10 = call ptr @dav_new_error(ptr noundef %17, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef @.str.281), !dbg !12423
  store ptr %call10, ptr %err, align 8, !dbg !12424, !tbaa !2416
  br label %if.end31, !dbg !12425

if.else11:                                        ; preds = %lor.lhs.false, %if.else
  %18 = load ptr, ptr %wres.addr, align 8, !dbg !12426, !tbaa !2416
  %resource12 = getelementptr inbounds %struct.dav_walk_resource, ptr %18, i32 0, i32 2, !dbg !12428
  %19 = load ptr, ptr %resource12, align 8, !dbg !12428, !tbaa !3321
  %working = getelementptr inbounds %struct.dav_resource, ptr %19, i32 0, i32 5, !dbg !12429
  %20 = load i32, ptr %working, align 4, !dbg !12429, !tbaa !6024
  %tobool13 = icmp ne i32 %20, 0, !dbg !12426
  br i1 %tobool13, label %if.then14, label %if.else18, !dbg !12430

if.then14:                                        ; preds = %if.else11
  %21 = load ptr, ptr %ctx, align 8, !dbg !12431, !tbaa !2416
  %w15 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %21, i32 0, i32 0, !dbg !12433
  %pool16 = getelementptr inbounds %struct.dav_walk_params, ptr %w15, i32 0, i32 3, !dbg !12434
  %22 = load ptr, ptr %pool16, align 8, !dbg !12434, !tbaa !9855
  %call17 = call ptr @dav_new_error(ptr noundef %22, i32 noundef 409, i32 noundef 0, i32 noundef 0, ptr noundef @.str.282), !dbg !12435
  store ptr %call17, ptr %err, align 8, !dbg !12436, !tbaa !2416
  br label %if.end30, !dbg !12437

if.else18:                                        ; preds = %if.else11
  %23 = load ptr, ptr %ctx, align 8, !dbg !12438, !tbaa !2416
  %label_op = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %23, i32 0, i32 3, !dbg !12441
  %24 = load i32, ptr %label_op, align 8, !dbg !12441, !tbaa !9777
  %cmp19 = icmp eq i32 %24, 3, !dbg !12442
  br i1 %cmp19, label %if.then20, label %if.else23, !dbg !12443

if.then20:                                        ; preds = %if.else18
  %25 = load ptr, ptr %ctx, align 8, !dbg !12444, !tbaa !2416
  %vsn_hooks = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %25, i32 0, i32 4, !dbg !12445
  %26 = load ptr, ptr %vsn_hooks, align 8, !dbg !12445, !tbaa !9868
  %remove_label = getelementptr inbounds %struct.dav_hooks_vsn, ptr %26, i32 0, i32 13, !dbg !12446
  %27 = load ptr, ptr %remove_label, align 8, !dbg !12446, !tbaa !12447
  %28 = load ptr, ptr %wres.addr, align 8, !dbg !12448, !tbaa !2416
  %resource21 = getelementptr inbounds %struct.dav_walk_resource, ptr %28, i32 0, i32 2, !dbg !12449
  %29 = load ptr, ptr %resource21, align 8, !dbg !12449, !tbaa !3321
  %30 = load ptr, ptr %ctx, align 8, !dbg !12450, !tbaa !2416
  %label = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %30, i32 0, i32 2, !dbg !12451
  %31 = load ptr, ptr %label, align 8, !dbg !12451, !tbaa !12452
  %call22 = call ptr %27(ptr noundef %29, ptr noundef %31), !dbg !12453
  store ptr %call22, ptr %err, align 8, !dbg !12454, !tbaa !2416
  br label %if.end, !dbg !12455

if.else23:                                        ; preds = %if.else18
  %32 = load ptr, ptr %ctx, align 8, !dbg !12456, !tbaa !2416
  %vsn_hooks24 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %32, i32 0, i32 4, !dbg !12457
  %33 = load ptr, ptr %vsn_hooks24, align 8, !dbg !12457, !tbaa !9868
  %add_label = getelementptr inbounds %struct.dav_hooks_vsn, ptr %33, i32 0, i32 12, !dbg !12458
  %34 = load ptr, ptr %add_label, align 8, !dbg !12458, !tbaa !6035
  %35 = load ptr, ptr %wres.addr, align 8, !dbg !12459, !tbaa !2416
  %resource25 = getelementptr inbounds %struct.dav_walk_resource, ptr %35, i32 0, i32 2, !dbg !12460
  %36 = load ptr, ptr %resource25, align 8, !dbg !12460, !tbaa !3321
  %37 = load ptr, ptr %ctx, align 8, !dbg !12461, !tbaa !2416
  %label26 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %37, i32 0, i32 2, !dbg !12462
  %38 = load ptr, ptr %label26, align 8, !dbg !12462, !tbaa !12452
  %39 = load ptr, ptr %ctx, align 8, !dbg !12463, !tbaa !2416
  %label_op27 = getelementptr inbounds %struct.dav_label_walker_ctx, ptr %39, i32 0, i32 3, !dbg !12464
  %40 = load i32, ptr %label_op27, align 8, !dbg !12464, !tbaa !9777
  %cmp28 = icmp eq i32 %40, 2, !dbg !12465
  %conv = zext i1 %cmp28 to i32, !dbg !12465
  %call29 = call ptr %34(ptr noundef %36, ptr noundef %38, i32 noundef %conv), !dbg !12466
  store ptr %call29, ptr %err, align 8, !dbg !12467, !tbaa !2416
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then20
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then14
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then9
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then
  %41 = load ptr, ptr %err, align 8, !dbg !12468, !tbaa !2416
  %cmp33 = icmp ne ptr %41, null, !dbg !12470
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !12471

if.then35:                                        ; preds = %if.end32
  %42 = load ptr, ptr %wres.addr, align 8, !dbg !12472, !tbaa !2416
  %43 = load ptr, ptr %err, align 8, !dbg !12474, !tbaa !2416
  %status = getelementptr inbounds %struct.dav_error, ptr %43, i32 0, i32 0, !dbg !12475
  %44 = load i32, ptr %status, align 8, !dbg !12475, !tbaa !2871
  call void @dav_add_response(ptr noundef %42, i32 noundef %44, ptr noundef null), !dbg !12476
  %45 = load ptr, ptr %err, align 8, !dbg !12477, !tbaa !2416
  %desc = getelementptr inbounds %struct.dav_error, ptr %45, i32 0, i32 2, !dbg !12478
  %46 = load ptr, ptr %desc, align 8, !dbg !12478, !tbaa !2948
  %47 = load ptr, ptr %wres.addr, align 8, !dbg !12479, !tbaa !2416
  %response = getelementptr inbounds %struct.dav_walk_resource, ptr %47, i32 0, i32 3, !dbg !12480
  %48 = load ptr, ptr %response, align 8, !dbg !12480, !tbaa !3345
  %desc36 = getelementptr inbounds %struct.dav_response, ptr %48, i32 0, i32 1, !dbg !12481
  store ptr %46, ptr %desc36, align 8, !dbg !12482, !tbaa !2613
  br label %if.end37, !dbg !12483

if.end37:                                         ; preds = %if.then35, %if.end32
  call void @llvm.lifetime.end.p0(i64 8, ptr %err) #10, !dbg !12484
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctx) #10, !dbg !12484
  ret ptr null, !dbg !12485
}

declare !dbg !12486 i32 @ap_method_register(ptr noundef, ptr noundef) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #9

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #9

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { inlinehint nounwind willreturn memory(read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #10 = { nounwind }
attributes #11 = { nounwind willreturn memory(read) }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2404, !2405, !2406, !2407, !2408}
!llvm.ident = !{!2409}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dav_module", scope: !2, file: !3, line: 5185, type: !2370, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, globals: !1341, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "mod_dav.c", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src/modules/dav/main", checksumkind: CSK_MD5, checksum: "17772cc25d536d1c149e2b4494cd72fc")
!4 = !{!5, !64, !89, !98, !106, !118, !123, !128, !140, !151, !155, !160, !165, !169, !174, !190, !197, !202, !207}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !7, file: !6, line: 151, baseType: !65, size: 32, elements: !86)
!6 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-util-1.6.3-l37sacsnb2zk76xejbzfvftzd4gcjj3o/include/apr-1/apr_buckets.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "afcd28b2e200d46cb3a438f3ad8fc6de")
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_bucket_type_t", file: !6, line: 131, size: 448, elements: !8)
!8 = !{!9, !13, !15, !16, !21, !69, !77, !81}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7, file: !6, line: 135, baseType: !10, size: 64)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!12 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "num_func", scope: !7, file: !6, line: 140, baseType: !14, size: 32, offset: 64)
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "is_metadata", scope: !7, file: !6, line: 156, baseType: !5, size: 32, offset: 96)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !7, file: !6, line: 164, baseType: !17, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64)
!18 = !DISubroutineType(types: !19)
!19 = !{null, !20}
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7, file: !6, line: 176, baseType: !22, size: 64, offset: 192)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DISubroutineType(types: !24)
!24 = !{!25, !27, !61, !62, !63}
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_status_t", file: !26, line: 44, baseType: !14)
!26 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_errno.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "571a7b9d4a9f11f6d27db63c8ba4bc85")
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_bucket", file: !6, line: 121, baseType: !29)
!29 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_bucket", file: !6, line: 224, size: 512, elements: !30)
!30 = !{!31, !38, !42, !48, !55, !56, !57}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !29, file: !6, line: 226, baseType: !32, size: 128)
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !29, file: !6, line: 226, size: 128, elements: !33)
!33 = !{!34, !37}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !32, file: !6, line: 226, baseType: !35, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !36)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !32, file: !6, line: 226, baseType: !35, size: 64, offset: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !29, file: !6, line: 228, baseType: !39, size: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!40 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_bucket_type_t", file: !6, line: 126, baseType: !7)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !29, file: !6, line: 234, baseType: !43, size: 64, offset: 192)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_size_t", file: !44, line: 379, baseType: !45)
!44 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "73077acfd8398d55139f48047843856b")
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !46, line: 70, baseType: !47)
!46 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!47 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !29, file: !6, line: 242, baseType: !49, size: 64, offset: 256)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_off_t", file: !44, line: 381, baseType: !50)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !51, line: 85, baseType: !52)
!51 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !53, line: 152, baseType: !54)
!53 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!54 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !29, file: !6, line: 244, baseType: !20, size: 64, offset: 320)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !29, file: !6, line: 252, baseType: !17, size: 64, offset: 384)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !29, file: !6, line: 254, baseType: !58, size: 64, offset: 448)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_bucket_alloc_t", file: !6, line: 123, baseType: !60)
!60 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_bucket_alloc_t", file: !6, line: 123, flags: DIFlagFwdDecl)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_read_type_e", file: !6, line: 60, baseType: !64)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 57, baseType: !65, size: 32, elements: !66)
!65 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!66 = !{!67, !68}
!67 = !DIEnumerator(name: "APR_BLOCK_READ", value: 0)
!68 = !DIEnumerator(name: "APR_NONBLOCK_READ", value: 1)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "setaside", scope: !7, file: !6, line: 192, baseType: !70, size: 64, offset: 256)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DISubroutineType(types: !72)
!72 = !{!25, !27, !73}
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_pool_t", file: !75, line: 60, baseType: !76)
!75 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_pools.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "ca846d53df1698194c1a577ccf147813")
!76 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_pool_t", file: !75, line: 60, flags: DIFlagFwdDecl)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !7, file: !6, line: 203, baseType: !78, size: 64, offset: 320)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DISubroutineType(types: !80)
!80 = !{!25, !27, !43}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !7, file: !6, line: 211, baseType: !82, size: 64, offset: 384)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DISubroutineType(types: !84)
!84 = !{!25, !27, !85}
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!86 = !{!87, !88}
!87 = !DIEnumerator(name: "APR_BUCKET_DATA", value: 0)
!88 = !DIEnumerator(name: "APR_BUCKET_METADATA", value: 1)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 41, baseType: !65, size: 32, elements: !91)
!90 = !DIFile(filename: "include/util_filter.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "894e51124b630754ca6243e0c50426ad")
!91 = !{!92, !93, !94, !95, !96, !97}
!92 = !DIEnumerator(name: "AP_MODE_READBYTES", value: 0)
!93 = !DIEnumerator(name: "AP_MODE_GETLINE", value: 1)
!94 = !DIEnumerator(name: "AP_MODE_EATCRLF", value: 2)
!95 = !DIEnumerator(name: "AP_MODE_SPECULATIVE", value: 3)
!96 = !DIEnumerator(name: "AP_MODE_EXHAUSTIVE", value: 4)
!97 = !DIEnumerator(name: "AP_MODE_INIT", value: 5)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 158, baseType: !65, size: 32, elements: !99)
!99 = !{!100, !101, !102, !103, !104, !105}
!100 = !DIEnumerator(name: "AP_FTYPE_RESOURCE", value: 10)
!101 = !DIEnumerator(name: "AP_FTYPE_CONTENT_SET", value: 20)
!102 = !DIEnumerator(name: "AP_FTYPE_PROTOCOL", value: 30)
!103 = !DIEnumerator(name: "AP_FTYPE_TRANSCODE", value: 40)
!104 = !DIEnumerator(name: "AP_FTYPE_CONNECTION", value: 50)
!105 = !DIEnumerator(name: "AP_FTYPE_NETWORK", value: 60)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !107, line: 1251, baseType: !65, size: 32, elements: !108)
!107 = !DIFile(filename: "include/httpd.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "13796706810e88ffd526cf3216ebbaab")
!108 = !{!109, !110, !111, !112, !113, !114, !115, !116, !117}
!109 = !DIEnumerator(name: "CONN_STATE_CHECK_REQUEST_LINE_READABLE", value: 0)
!110 = !DIEnumerator(name: "CONN_STATE_READ_REQUEST_LINE", value: 1)
!111 = !DIEnumerator(name: "CONN_STATE_HANDLER", value: 2)
!112 = !DIEnumerator(name: "CONN_STATE_WRITE_COMPLETION", value: 3)
!113 = !DIEnumerator(name: "CONN_STATE_SUSPENDED", value: 4)
!114 = !DIEnumerator(name: "CONN_STATE_LINGER", value: 5)
!115 = !DIEnumerator(name: "CONN_STATE_LINGER_NORMAL", value: 6)
!116 = !DIEnumerator(name: "CONN_STATE_LINGER_SHORT", value: 7)
!117 = !DIEnumerator(name: "CONN_STATE_NUM", value: 8)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !107, line: 1264, baseType: !65, size: 32, elements: !119)
!119 = !{!120, !121, !122}
!120 = !DIEnumerator(name: "CONN_SENSE_DEFAULT", value: 0)
!121 = !DIEnumerator(name: "CONN_SENSE_WANT_READ", value: 1)
!122 = !DIEnumerator(name: "CONN_SENSE_WANT_WRITE", value: 2)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !107, line: 1136, baseType: !65, size: 32, elements: !124)
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "AP_CONN_UNKNOWN", value: 0)
!126 = !DIEnumerator(name: "AP_CONN_CLOSE", value: 1)
!127 = !DIEnumerator(name: "AP_CONN_KEEPALIVE", value: 2)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !129, line: 62, baseType: !65, size: 32, elements: !130)
!129 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_file_info.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "58895203e42ced4eaee1557b60315f00")
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139}
!131 = !DIEnumerator(name: "APR_NOFILE", value: 0)
!132 = !DIEnumerator(name: "APR_REG", value: 1)
!133 = !DIEnumerator(name: "APR_DIR", value: 2)
!134 = !DIEnumerator(name: "APR_CHR", value: 3)
!135 = !DIEnumerator(name: "APR_BLK", value: 4)
!136 = !DIEnumerator(name: "APR_PIPE", value: 5)
!137 = !DIEnumerator(name: "APR_LNK", value: 6)
!138 = !DIEnumerator(name: "APR_SOCK", value: 7)
!139 = !DIEnumerator(name: "APR_UNKFILE", value: 127)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 296, baseType: !65, size: 32, elements: !142)
!141 = !DIFile(filename: "./mod_dav.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src/modules/dav/main", checksumkind: CSK_MD5, checksum: "b6a8eab5551a9362e9e8d2c4945ac944")
!142 = !{!143, !144, !145, !146, !147, !148, !149, !150}
!143 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_UNKNOWN", value: 0)
!144 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_REGULAR", value: 1)
!145 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_VERSION", value: 2)
!146 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_HISTORY", value: 3)
!147 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_WORKING", value: 4)
!148 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_WORKSPACE", value: 5)
!149 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_ACTIVITY", value: 6)
!150 = !DIEnumerator(name: "DAV_RESOURCE_TYPE_PRIVATE", value: 7)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 1902, baseType: !65, size: 32, elements: !152)
!152 = !{!153, !154}
!153 = !DIEnumerator(name: "DAV_MODE_WRITE_TRUNC", value: 0)
!154 = !DIEnumerator(name: "DAV_MODE_WRITE_SEEKABLE", value: 1)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 1353, baseType: !65, size: 32, elements: !156)
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "DAV_LOCKREC_DIRECT", value: 0)
!158 = !DIEnumerator(name: "DAV_LOCKREC_INDIRECT", value: 1)
!159 = !DIEnumerator(name: "DAV_LOCKREC_INDIRECT_PARTIAL", value: 2)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 1342, baseType: !65, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DAV_LOCKSCOPE_UNKNOWN", value: 0)
!163 = !DIEnumerator(name: "DAV_LOCKSCOPE_EXCLUSIVE", value: 1)
!164 = !DIEnumerator(name: "DAV_LOCKSCOPE_SHARED", value: 2)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 1348, baseType: !65, size: 32, elements: !166)
!166 = !{!167, !168}
!167 = !DIEnumerator(name: "DAV_LOCKTYPE_UNKNOWN", value: 0)
!168 = !DIEnumerator(name: "DAV_LOCKTYPE_WRITE", value: 1)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 2182, baseType: !65, size: 32, elements: !170)
!170 = !{!171, !172, !173}
!171 = !DIEnumerator(name: "DAV_AUTO_VERSION_NEVER", value: 0)
!172 = !DIEnumerator(name: "DAV_AUTO_VERSION_ALWAYS", value: 1)
!173 = !DIEnumerator(name: "DAV_AUTO_VERSION_LOCKED", value: 2)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cmd_how", file: !175, line: 49, baseType: !65, size: 32, elements: !176)
!175 = !DIFile(filename: "include/http_config.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "478a5811bd142d8034ca8ebc320f852f")
!176 = !{!177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189}
!177 = !DIEnumerator(name: "RAW_ARGS", value: 0)
!178 = !DIEnumerator(name: "TAKE1", value: 1)
!179 = !DIEnumerator(name: "TAKE2", value: 2)
!180 = !DIEnumerator(name: "ITERATE", value: 3)
!181 = !DIEnumerator(name: "ITERATE2", value: 4)
!182 = !DIEnumerator(name: "FLAG", value: 5)
!183 = !DIEnumerator(name: "NO_ARGS", value: 6)
!184 = !DIEnumerator(name: "TAKE12", value: 7)
!185 = !DIEnumerator(name: "TAKE3", value: 8)
!186 = !DIEnumerator(name: "TAKE23", value: 9)
!187 = !DIEnumerator(name: "TAKE123", value: 10)
!188 = !DIEnumerator(name: "TAKE13", value: 11)
!189 = !DIEnumerator(name: "TAKE_ARGV", value: 12)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 516, baseType: !65, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196}
!192 = !DIEnumerator(name: "DAV_PROP_INSERT_NOTDEF", value: 0)
!193 = !DIEnumerator(name: "DAV_PROP_INSERT_NOTSUPP", value: 1)
!194 = !DIEnumerator(name: "DAV_PROP_INSERT_NAME", value: 2)
!195 = !DIEnumerator(name: "DAV_PROP_INSERT_VALUE", value: 3)
!196 = !DIEnumerator(name: "DAV_PROP_INSERT_SUPPORTED", value: 4)
!197 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 73, baseType: !65, size: 32, elements: !198)
!198 = !{!199, !200, !201}
!199 = !DIEnumerator(name: "DAV_ENABLED_UNSET", value: 0)
!200 = !DIEnumerator(name: "DAV_ENABLED_OFF", value: 1)
!201 = !DIEnumerator(name: "DAV_ENABLED_ON", value: 2)
!202 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 104, baseType: !65, size: 32, elements: !203)
!203 = !{!204, !205, !206}
!204 = !DIEnumerator(name: "DAV_M_BIND", value: 0)
!205 = !DIEnumerator(name: "DAV_M_SEARCH", value: 1)
!206 = !DIEnumerator(name: "DAV_M_LAST", value: 2)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 840, baseType: !65, size: 32, elements: !208)
!208 = !{!209, !210, !211}
!209 = !DIEnumerator(name: "dav_if_etag", value: 0)
!210 = !DIEnumerator(name: "dav_if_opaquelock", value: 1)
!211 = !DIEnumerator(name: "dav_if_unknown", value: 2)
!212 = !{!213, !20, !214, !36, !216, !54, !217, !725, !738, !1048, !1061, !1082, !1095, !14, !1108, !1320, !1325, !442, !1326, !1332, !1248, !61}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_prop_ctx", file: !141, line: 1783, baseType: !219)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_prop_ctx", file: !141, line: 1762, size: 448, elements: !220)
!220 = !{!221, !225, !265, !266, !267, !268, !271, !285}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "propdb", scope: !219, file: !141, line: 1764, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_propdb", file: !141, line: 1686, baseType: !224)
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_propdb", file: !141, line: 1686, flags: DIFlagFwdDecl)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !219, file: !141, line: 1766, baseType: !226, size: 64, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_xml_elem", file: !228, line: 143, baseType: !229)
!228 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-util-1.6.3-l37sacsnb2zk76xejbzfvftzd4gcjj3o/include/apr-1/apr_xml.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "478ff65569ad8360e0ab2190ba58f12e")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_xml_elem", file: !228, line: 162, size: 896, elements: !230)
!230 = !{!231, !232, !233, !234, !247, !248, !250, !251, !252, !260, !261, !264}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !229, file: !228, line: 164, baseType: !10, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !229, file: !228, line: 166, baseType: !14, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "lang", scope: !229, file: !228, line: 168, baseType: !10, size: 64, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "first_cdata", scope: !229, file: !228, line: 171, baseType: !235, size: 128, offset: 192)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_text_header", file: !228, line: 61, baseType: !236)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_text_header", file: !228, line: 64, size: 128, elements: !237)
!237 = !{!238, !246}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !236, file: !228, line: 66, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_text", file: !228, line: 50, baseType: !241)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_text", file: !228, line: 53, size: 128, elements: !242)
!242 = !{!243, !244}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !241, file: !228, line: 55, baseType: !10, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !241, file: !228, line: 57, baseType: !245, size: 64, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !236, file: !228, line: 68, baseType: !239, size: 64, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "following_cdata", scope: !229, file: !228, line: 173, baseType: !235, size: 128, offset: 320)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !229, file: !228, line: 176, baseType: !249, size: 64, offset: 448)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !229, file: !228, line: 178, baseType: !249, size: 64, offset: 512)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "first_child", scope: !229, file: !228, line: 180, baseType: !249, size: 64, offset: 576)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !229, file: !228, line: 182, baseType: !253, size: 64, offset: 640)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_xml_attr", file: !228, line: 148, size: 256, elements: !255)
!255 = !{!256, !257, !258, !259}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !254, file: !228, line: 150, baseType: !10, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !254, file: !228, line: 152, baseType: !14, size: 32, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !254, file: !228, line: 155, baseType: !10, size: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !254, file: !228, line: 158, baseType: !253, size: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "last_child", scope: !229, file: !228, line: 186, baseType: !249, size: 64, offset: 704)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "ns_scope", scope: !229, file: !228, line: 188, baseType: !262, size: 64, offset: 768)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_xml_ns_scope", file: !228, line: 188, flags: DIFlagFwdDecl)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !229, file: !228, line: 192, baseType: !20, size: 64, offset: 832)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "operation", scope: !219, file: !141, line: 1768, baseType: !14, size: 32, offset: 128)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "is_liveprop", scope: !219, file: !141, line: 1774, baseType: !14, size: 32, offset: 160)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "liveprop_ctx", scope: !219, file: !141, line: 1775, baseType: !20, size: 64, offset: 192)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "rollback", scope: !219, file: !141, line: 1776, baseType: !269, size: 64, offset: 256)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_rollback_item", file: !141, line: 1776, flags: DIFlagFwdDecl)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !219, file: !141, line: 1778, baseType: !272, size: 64, offset: 320)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_error", file: !141, line: 135, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_error", file: !141, line: 121, size: 448, elements: !275)
!275 = !{!276, !277, !278, !279, !280, !281, !282, !284}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !274, file: !141, line: 122, baseType: !14, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "error_id", scope: !274, file: !141, line: 123, baseType: !14, size: 32, offset: 32)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !274, file: !141, line: 124, baseType: !10, size: 64, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "aprerr", scope: !274, file: !141, line: 126, baseType: !25, size: 32, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !274, file: !141, line: 128, baseType: !10, size: 64, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tagname", scope: !274, file: !141, line: 129, baseType: !10, size: 64, offset: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !274, file: !141, line: 131, baseType: !283, size: 64, offset: 320)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "childtags", scope: !274, file: !141, line: 133, baseType: !10, size: 64, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !219, file: !141, line: 1781, baseType: !286, size: 64, offset: 384)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "request_rec", file: !107, line: 811, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_rec", file: !107, line: 838, size: 5888, elements: !289)
!289 = !{!290, !291, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !584, !585, !586, !587, !588, !589, !590, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !645, !646, !647, !648, !649, !650, !651, !656, !677, !714, !715, !716, !717, !718, !719, !720}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !288, file: !107, line: 840, baseType: !73, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "connection", scope: !288, file: !107, line: 842, baseType: !292, size: 64, offset: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "conn_rec", file: !107, line: 809, baseType: !294)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conn_rec", file: !107, line: 1145, size: 1664, elements: !295)
!295 = !{!296, !297, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !482, !539, !540, !541, !543, !552, !553, !554, !555, !556, !557, !559, !560, !563, !564, !569, !570}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !294, file: !107, line: 1147, baseType: !73, size: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "base_server", scope: !294, file: !107, line: 1149, baseType: !298, size: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "server_rec", file: !107, line: 807, baseType: !300)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "server_rec", file: !107, line: 1315, size: 1536, elements: !301)
!301 = !{!302, !312, !313, !314, !319, !326, !329, !330, !331, !332, !333, !338, !339, !340, !341, !439, !446, !447, !448, !449, !460, !461, !462, !463, !464, !465, !466, !467}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !300, file: !107, line: 1317, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "process_rec", file: !107, line: 805, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "process_rec", file: !107, line: 822, size: 320, elements: !306)
!306 = !{!307, !308, !309, !310, !311}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !305, file: !107, line: 824, baseType: !73, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pconf", scope: !305, file: !107, line: 826, baseType: !73, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "short_name", scope: !305, file: !107, line: 828, baseType: !10, size: 64, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !305, file: !107, line: 830, baseType: !214, size: 64, offset: 192)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !305, file: !107, line: 832, baseType: !14, size: 32, offset: 256)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !300, file: !107, line: 1319, baseType: !298, size: 64, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "error_fname", scope: !300, file: !107, line: 1324, baseType: !216, size: 64, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "error_log", scope: !300, file: !107, line: 1326, baseType: !315, size: 64, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_file_t", file: !317, line: 188, baseType: !318)
!317 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_file_io.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "9f1a845f7255d07e28e3a10d24320b5d")
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_file_t", file: !129, line: 212, flags: DIFlagFwdDecl)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !300, file: !107, line: 1328, baseType: !320, size: 128, offset: 256)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ap_logconf", file: !107, line: 1305, size: 128, elements: !321)
!321 = !{!322, !325}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "module_levels", scope: !320, file: !107, line: 1307, baseType: !323, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !320, file: !107, line: 1310, baseType: !14, size: 32, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "module_config", scope: !300, file: !107, line: 1334, baseType: !327, size: 64, offset: 384)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "ap_conf_vector_t", file: !107, line: 791, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_defaults", scope: !300, file: !107, line: 1336, baseType: !327, size: 64, offset: 448)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "defn_name", scope: !300, file: !107, line: 1339, baseType: !10, size: 64, offset: 512)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "defn_line_number", scope: !300, file: !107, line: 1341, baseType: !65, size: 32, offset: 576)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtual", scope: !300, file: !107, line: 1343, baseType: !12, size: 8, offset: 608)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !300, file: !107, line: 1349, baseType: !334, size: 16, offset: 624)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_port_t", file: !335, line: 230, baseType: !336)
!335 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_network_io.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "d28b53dbcb33f6acce926c2efb3f7365")
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_uint16_t", file: !44, line: 331, baseType: !337)
!337 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "server_scheme", scope: !300, file: !107, line: 1351, baseType: !10, size: 64, offset: 640)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "server_admin", scope: !300, file: !107, line: 1356, baseType: !216, size: 64, offset: 704)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "server_hostname", scope: !300, file: !107, line: 1358, baseType: !216, size: 64, offset: 768)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "addrs", scope: !300, file: !107, line: 1363, baseType: !342, size: 64, offset: 832)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "server_addr_rec", file: !107, line: 1293, baseType: !344)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "server_addr_rec", file: !107, line: 1294, size: 256, elements: !345)
!345 = !{!346, !347, !348, !438}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !344, file: !107, line: 1296, baseType: !342, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "virthost", scope: !344, file: !107, line: 1298, baseType: !216, size: 64, offset: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "host_addr", scope: !344, file: !107, line: 1300, baseType: !349, size: 64, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_sockaddr_t", file: !335, line: 235, baseType: !351)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_sockaddr_t", file: !335, line: 239, size: 1536, elements: !352)
!352 = !{!353, !354, !355, !356, !357, !359, !364, !365, !366, !367, !368}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !351, file: !335, line: 241, baseType: !73, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "hostname", scope: !351, file: !335, line: 243, baseType: !216, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "servname", scope: !351, file: !335, line: 245, baseType: !216, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !351, file: !335, line: 247, baseType: !334, size: 16, offset: 192)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !351, file: !335, line: 249, baseType: !358, size: 32, offset: 224)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_int32_t", file: !44, line: 333, baseType: !14)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "salen", scope: !351, file: !335, line: 251, baseType: !360, size: 32, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_socklen_t", file: !44, line: 382, baseType: !361)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !362, line: 33, baseType: !363)
!362 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "", checksumkind: CSK_MD5, checksum: "e3826be048699664d9ef7b080f62f2e0")
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !53, line: 210, baseType: !65)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ipaddr_len", scope: !351, file: !335, line: 253, baseType: !14, size: 32, offset: 288)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "addr_str_len", scope: !351, file: !335, line: 256, baseType: !14, size: 32, offset: 320)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "ipaddr_ptr", scope: !351, file: !335, line: 259, baseType: !20, size: 64, offset: 384)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !351, file: !335, line: 262, baseType: !349, size: 64, offset: 448)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !351, file: !335, line: 280, baseType: !369, size: 1024, offset: 512)
!369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !351, file: !335, line: 264, size: 1024, elements: !370)
!370 = !{!371, !395, !420, !429}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !369, file: !335, line: 266, baseType: !372, size: 128)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !373, line: 245, size: 128, elements: !374)
!373 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "", checksumkind: CSK_MD5, checksum: "eb6560f10d4cfe9f30fea2c92b9da0fd")
!374 = !{!375, !378, !383, !390}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !372, file: !373, line: 247, baseType: !376, size: 16)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !377, line: 28, baseType: !337)
!377 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "", checksumkind: CSK_MD5, checksum: "dd7f1d9dd6e26f88d1726905ed5d9ff5")
!378 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !372, file: !373, line: 248, baseType: !379, size: 16, offset: 16)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !373, line: 123, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !381, line: 25, baseType: !382)
!381 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !53, line: 40, baseType: !337)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !372, file: !373, line: 249, baseType: !384, size: 32, offset: 32)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !373, line: 31, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !384, file: !373, line: 33, baseType: !387, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !373, line: 30, baseType: !388)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !381, line: 26, baseType: !389)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !53, line: 42, baseType: !65)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !372, file: !373, line: 252, baseType: !391, size: 64, offset: 64)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 64, elements: !393)
!392 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!393 = !{!394}
!394 = !DISubrange(count: 8)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "sin6", scope: !369, file: !335, line: 269, baseType: !396, size: 224)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !373, line: 260, size: 224, elements: !397)
!397 = !{!398, !399, !400, !401, !419}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !396, file: !373, line: 262, baseType: !376, size: 16)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !396, file: !373, line: 263, baseType: !379, size: 16, offset: 16)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !396, file: !373, line: 264, baseType: !388, size: 32, offset: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !396, file: !373, line: 265, baseType: !402, size: 128, offset: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !373, line: 219, size: 128, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !402, file: !373, line: 226, baseType: !405, size: 128)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !402, file: !373, line: 221, size: 128, elements: !406)
!406 = !{!407, !413, !415}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !405, file: !373, line: 223, baseType: !408, size: 128)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !411)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !381, line: 24, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !53, line: 38, baseType: !392)
!411 = !{!412}
!412 = !DISubrange(count: 16)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !405, file: !373, line: 224, baseType: !414, size: 128)
!414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 128, elements: !393)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !405, file: !373, line: 225, baseType: !416, size: 128)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 128, elements: !417)
!417 = !{!418}
!418 = !DISubrange(count: 4)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !396, file: !373, line: 266, baseType: !388, size: 32, offset: 192)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sas", scope: !369, file: !335, line: 274, baseType: !421, size: 1024)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !362, line: 193, size: 1024, elements: !422)
!422 = !{!423, !424, !428}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !421, file: !362, line: 195, baseType: !376, size: 16)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !421, file: !362, line: 196, baseType: !425, size: 944, offset: 16)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 944, elements: !426)
!426 = !{!427}
!427 = !DISubrange(count: 118)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !421, file: !362, line: 197, baseType: !47, size: 64, offset: 960)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !369, file: !335, line: 278, baseType: !430, size: 880)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !431, line: 29, size: 880, elements: !432)
!431 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/un.h", directory: "", checksumkind: CSK_MD5, checksum: "543d98cd612c9215c9333043f81a0cd3")
!432 = !{!433, !434}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !430, file: !431, line: 31, baseType: !376, size: 16)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !430, file: !431, line: 32, baseType: !435, size: 864, offset: 16)
!435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 864, elements: !436)
!436 = !{!437}
!437 = !DISubrange(count: 108)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "host_port", scope: !344, file: !107, line: 1302, baseType: !334, size: 16, offset: 192)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !300, file: !107, line: 1365, baseType: !440, size: 64, offset: 896)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_interval_time_t", file: !441, line: 55, baseType: !442)
!441 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_time.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "1a8b9732d4ee010f71e3eb03e6e3a16e")
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_int64_t", file: !44, line: 371, baseType: !443)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !444, line: 27, baseType: !445)
!444 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !53, line: 44, baseType: !54)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout", scope: !300, file: !107, line: 1367, baseType: !440, size: 64, offset: 960)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_max", scope: !300, file: !107, line: 1369, baseType: !14, size: 32, offset: 1024)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive", scope: !300, file: !107, line: 1371, baseType: !14, size: 32, offset: 1056)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "names", scope: !300, file: !107, line: 1374, baseType: !450, size: 64, offset: 1088)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_array_header_t", file: !452, line: 59, baseType: !453)
!452 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_tables.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "82dd315cfdbab9381cd05a1d2abe34a2")
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_array_header_t", file: !452, line: 62, size: 256, elements: !454)
!454 = !{!455, !456, !457, !458, !459}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !453, file: !452, line: 64, baseType: !73, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !453, file: !452, line: 66, baseType: !14, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "nelts", scope: !453, file: !452, line: 68, baseType: !14, size: 32, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "nalloc", scope: !453, file: !452, line: 70, baseType: !14, size: 32, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !453, file: !452, line: 72, baseType: !216, size: 64, offset: 192)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "wild_names", scope: !300, file: !107, line: 1376, baseType: !450, size: 64, offset: 1152)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !300, file: !107, line: 1379, baseType: !10, size: 64, offset: 1216)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !300, file: !107, line: 1381, baseType: !14, size: 32, offset: 1280)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "limit_req_line", scope: !300, file: !107, line: 1384, baseType: !14, size: 32, offset: 1312)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "limit_req_fieldsize", scope: !300, file: !107, line: 1386, baseType: !14, size: 32, offset: 1344)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "limit_req_fields", scope: !300, file: !107, line: 1388, baseType: !14, size: 32, offset: 1376)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !300, file: !107, line: 1391, baseType: !20, size: 64, offset: 1408)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive_timeout_set", scope: !300, file: !107, line: 1396, baseType: !65, size: 1, offset: 1472, flags: DIFlagBitField, extraData: i64 1472)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "vhost_lookup_data", scope: !294, file: !107, line: 1151, baseType: !20, size: 64, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "local_addr", scope: !294, file: !107, line: 1155, baseType: !349, size: 64, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "client_addr", scope: !294, file: !107, line: 1159, baseType: !349, size: 64, offset: 256)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "client_ip", scope: !294, file: !107, line: 1164, baseType: !216, size: 64, offset: 320)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "remote_host", scope: !294, file: !107, line: 1168, baseType: !216, size: 64, offset: 384)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "remote_logname", scope: !294, file: !107, line: 1171, baseType: !216, size: 64, offset: 448)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !294, file: !107, line: 1174, baseType: !216, size: 64, offset: 512)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "local_host", scope: !294, file: !107, line: 1177, baseType: !216, size: 64, offset: 576)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !294, file: !107, line: 1180, baseType: !54, size: 64, offset: 640)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "conn_config", scope: !294, file: !107, line: 1183, baseType: !327, size: 64, offset: 704)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "notes", scope: !294, file: !107, line: 1186, baseType: !479, size: 64, offset: 768)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_table_t", file: !452, line: 56, baseType: !481)
!481 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_table_t", file: !452, line: 56, flags: DIFlagFwdDecl)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "input_filters", scope: !294, file: !107, line: 1188, baseType: !483, size: 64, offset: 832)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ap_filter_t", file: !90, line: 259, size: 320, elements: !485)
!485 = !{!486, !535, !536, !537, !538}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "frec", scope: !484, file: !90, line: 263, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_filter_rec_t", file: !90, line: 199, baseType: !489)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ap_filter_rec_t", file: !90, line: 215, size: 448, elements: !490)
!490 = !{!491, !492, !520, !525, !527, !531, !533, !534}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !489, file: !90, line: 217, baseType: !10, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "filter_func", scope: !489, file: !90, line: 220, baseType: !493, size: 64, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_filter_func", file: !90, line: 146, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ap_filter_func", file: !90, line: 143, size: 64, elements: !495)
!495 = !{!496, !514}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "out_func", scope: !494, file: !90, line: 144, baseType: !497, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_out_filter_func", file: !90, line: 134, baseType: !498)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DISubroutineType(types: !500)
!500 = !{!25, !501, !503}
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_filter_t", file: !90, line: 94, baseType: !484)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_bucket_brigade", file: !6, line: 119, baseType: !505)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_bucket_brigade", file: !6, line: 258, size: 256, elements: !506)
!506 = !{!507, !508, !513}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !505, file: !6, line: 264, baseType: !73, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !505, file: !6, line: 273, baseType: !509, size: 128, offset: 64)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_bucket_list", file: !6, line: 273, size: 128, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !509, file: !6, line: 273, baseType: !35, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !509, file: !6, line: 273, baseType: !35, size: 64, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_alloc", scope: !505, file: !6, line: 275, baseType: !58, size: 64, offset: 192)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "in_func", scope: !494, file: !90, line: 145, baseType: !515, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_in_filter_func", file: !90, line: 136, baseType: !516)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{!25, !501, !503, !519, !63, !49}
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_input_mode_t", file: !90, line: 63, baseType: !89)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "filter_init_func", scope: !489, file: !90, line: 230, baseType: !521, size: 64, offset: 128)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_init_filter_func", file: !90, line: 141, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DISubroutineType(types: !524)
!524 = !{!14, !501}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !489, file: !90, line: 233, baseType: !526, size: 64, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "providers", scope: !489, file: !90, line: 236, baseType: !528, size: 64, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_filter_provider_t", file: !90, line: 200, baseType: !530)
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "ap_filter_provider_t", file: !90, line: 200, flags: DIFlagFwdDecl)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !489, file: !90, line: 243, baseType: !532, size: 32, offset: 320)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_filter_type", file: !90, line: 184, baseType: !98)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !489, file: !90, line: 246, baseType: !14, size: 32, offset: 352)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "proto_flags", scope: !489, file: !90, line: 249, baseType: !65, size: 32, offset: 384)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !484, file: !90, line: 266, baseType: !20, size: 64, offset: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !484, file: !90, line: 269, baseType: !501, size: 64, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !484, file: !90, line: 275, baseType: !286, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !484, file: !90, line: 280, baseType: !292, size: 64, offset: 256)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "output_filters", scope: !294, file: !107, line: 1190, baseType: !483, size: 64, offset: 896)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "sbh", scope: !294, file: !107, line: 1192, baseType: !20, size: 64, offset: 960)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_alloc", scope: !294, file: !107, line: 1194, baseType: !542, size: 64, offset: 1024)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !294, file: !107, line: 1196, baseType: !544, size: 64, offset: 1088)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "conn_state_t", file: !107, line: 813, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conn_state_t", file: !107, line: 1273, size: 64, elements: !547)
!547 = !{!548, !550}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !546, file: !107, line: 1275, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "conn_state_e", file: !107, line: 1262, baseType: !106)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !546, file: !107, line: 1277, baseType: !551, size: 32, offset: 32)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "conn_sense_e", file: !107, line: 1268, baseType: !118)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "data_in_input_filters", scope: !294, file: !107, line: 1198, baseType: !14, size: 32, offset: 1152)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "data_in_output_filters", scope: !294, file: !107, line: 1200, baseType: !14, size: 32, offset: 1184)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "clogging_input_filters", scope: !294, file: !107, line: 1205, baseType: !65, size: 1, offset: 1216, flags: DIFlagBitField, extraData: i64 1216)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "double_reverse", scope: !294, file: !107, line: 1209, baseType: !14, size: 2, offset: 1217, flags: DIFlagBitField, extraData: i64 1216)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "aborted", scope: !294, file: !107, line: 1212, baseType: !65, size: 32, offset: 1248)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !294, file: !107, line: 1216, baseType: !558, size: 32, offset: 1280)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_conn_keepalive_e", file: !107, line: 1140, baseType: !123)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "keepalives", scope: !294, file: !107, line: 1219, baseType: !14, size: 32, offset: 1312)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !294, file: !107, line: 1223, baseType: !561, size: 64, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "log_id", scope: !294, file: !107, line: 1228, baseType: !10, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "current_thread", scope: !294, file: !107, line: 1237, baseType: !565, size: 64, offset: 1472)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_thread_t", file: !567, line: 178, baseType: !568)
!567 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_thread_proc.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "86521d0dbb7f1fbad577c4bb2abede6c")
!568 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_thread_t", file: !567, line: 178, flags: DIFlagFwdDecl)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !294, file: !107, line: 1241, baseType: !292, size: 64, offset: 1536)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "outgoing", scope: !294, file: !107, line: 1243, baseType: !14, size: 32, offset: 1600)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "server", scope: !288, file: !107, line: 844, baseType: !298, size: 64, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !288, file: !107, line: 847, baseType: !286, size: 64, offset: 192)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !288, file: !107, line: 849, baseType: !286, size: 64, offset: 256)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !288, file: !107, line: 853, baseType: !286, size: 64, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "the_request", scope: !288, file: !107, line: 859, baseType: !216, size: 64, offset: 384)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "assbackwards", scope: !288, file: !107, line: 861, baseType: !14, size: 32, offset: 448)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "proxyreq", scope: !288, file: !107, line: 866, baseType: !14, size: 32, offset: 480)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "header_only", scope: !288, file: !107, line: 868, baseType: !14, size: 32, offset: 512)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "proto_num", scope: !288, file: !107, line: 870, baseType: !14, size: 32, offset: 544)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !288, file: !107, line: 872, baseType: !216, size: 64, offset: 576)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "hostname", scope: !288, file: !107, line: 876, baseType: !10, size: 64, offset: 640)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "request_time", scope: !288, file: !107, line: 879, baseType: !583, size: 64, offset: 704)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_time_t", file: !441, line: 45, baseType: !442)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "status_line", scope: !288, file: !107, line: 882, baseType: !10, size: 64, offset: 768)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !288, file: !107, line: 884, baseType: !14, size: 32, offset: 832)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "method_number", scope: !288, file: !107, line: 891, baseType: !14, size: 32, offset: 864)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !288, file: !107, line: 893, baseType: !10, size: 64, offset: 896)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !288, file: !107, line: 915, baseType: !442, size: 64, offset: 960)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_xmethods", scope: !288, file: !107, line: 917, baseType: !450, size: 64, offset: 1024)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_methods", scope: !288, file: !107, line: 919, baseType: !591, size: 64, offset: 1088)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_method_list_t", file: !107, line: 634, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ap_method_list_t", file: !107, line: 643, size: 128, elements: !594)
!594 = !{!595, !596}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "method_mask", scope: !593, file: !107, line: 645, baseType: !442, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "method_list", scope: !593, file: !107, line: 647, baseType: !450, size: 64, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "sent_bodyct", scope: !288, file: !107, line: 922, baseType: !49, size: 64, offset: 1152)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_sent", scope: !288, file: !107, line: 924, baseType: !49, size: 64, offset: 1216)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !288, file: !107, line: 926, baseType: !583, size: 64, offset: 1280)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !288, file: !107, line: 931, baseType: !10, size: 64, offset: 1344)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !288, file: !107, line: 933, baseType: !49, size: 64, offset: 1408)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "chunked", scope: !288, file: !107, line: 935, baseType: !14, size: 32, offset: 1472)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "read_body", scope: !288, file: !107, line: 940, baseType: !14, size: 32, offset: 1504)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "read_chunked", scope: !288, file: !107, line: 942, baseType: !14, size: 32, offset: 1536)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_100", scope: !288, file: !107, line: 944, baseType: !65, size: 32, offset: 1568)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "kept_body", scope: !288, file: !107, line: 946, baseType: !503, size: 64, offset: 1600)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "body_table", scope: !288, file: !107, line: 950, baseType: !479, size: 64, offset: 1664)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "remaining", scope: !288, file: !107, line: 952, baseType: !49, size: 64, offset: 1728)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "read_length", scope: !288, file: !107, line: 954, baseType: !49, size: 64, offset: 1792)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "headers_in", scope: !288, file: !107, line: 969, baseType: !479, size: 64, offset: 1856)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "headers_out", scope: !288, file: !107, line: 971, baseType: !479, size: 64, offset: 1920)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "err_headers_out", scope: !288, file: !107, line: 974, baseType: !479, size: 64, offset: 1984)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "subprocess_env", scope: !288, file: !107, line: 976, baseType: !479, size: 64, offset: 2048)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "notes", scope: !288, file: !107, line: 978, baseType: !479, size: 64, offset: 2112)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !288, file: !107, line: 985, baseType: !10, size: 64, offset: 2176)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !288, file: !107, line: 987, baseType: !10, size: 64, offset: 2240)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "content_encoding", scope: !288, file: !107, line: 990, baseType: !10, size: 64, offset: 2304)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "content_languages", scope: !288, file: !107, line: 992, baseType: !450, size: 64, offset: 2368)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "vlist_validator", scope: !288, file: !107, line: 995, baseType: !216, size: 64, offset: 2432)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !288, file: !107, line: 998, baseType: !216, size: 64, offset: 2496)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ap_auth_type", scope: !288, file: !107, line: 1000, baseType: !216, size: 64, offset: 2560)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "unparsed_uri", scope: !288, file: !107, line: 1007, baseType: !216, size: 64, offset: 2624)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !288, file: !107, line: 1009, baseType: !216, size: 64, offset: 2688)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !288, file: !107, line: 1011, baseType: !216, size: 64, offset: 2752)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "canonical_filename", scope: !288, file: !107, line: 1015, baseType: !216, size: 64, offset: 2816)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "path_info", scope: !288, file: !107, line: 1017, baseType: !216, size: 64, offset: 2880)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !288, file: !107, line: 1019, baseType: !216, size: 64, offset: 2944)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "used_path_info", scope: !288, file: !107, line: 1029, baseType: !14, size: 32, offset: 3008)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "eos_sent", scope: !288, file: !107, line: 1032, baseType: !14, size: 32, offset: 3040)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "per_dir_config", scope: !288, file: !107, line: 1040, baseType: !327, size: 64, offset: 3072)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "request_config", scope: !288, file: !107, line: 1042, baseType: !327, size: 64, offset: 3136)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !288, file: !107, line: 1047, baseType: !561, size: 64, offset: 3200)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "log_id", scope: !288, file: !107, line: 1052, baseType: !10, size: 64, offset: 3264)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "htaccess", scope: !288, file: !107, line: 1060, baseType: !635, size: 64, offset: 3328)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !637)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htaccess_result", file: !107, line: 781, size: 320, elements: !638)
!638 = !{!639, !640, !641, !642, !643, !644}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !637, file: !107, line: 783, baseType: !10, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "override", scope: !637, file: !107, line: 785, baseType: !14, size: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "override_opts", scope: !637, file: !107, line: 787, baseType: !14, size: 32, offset: 96)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "override_list", scope: !637, file: !107, line: 789, baseType: !479, size: 64, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "htaccess", scope: !637, file: !107, line: 791, baseType: !327, size: 64, offset: 192)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !637, file: !107, line: 793, baseType: !635, size: 64, offset: 256)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "output_filters", scope: !288, file: !107, line: 1063, baseType: !483, size: 64, offset: 3392)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "input_filters", scope: !288, file: !107, line: 1065, baseType: !483, size: 64, offset: 3456)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "proto_output_filters", scope: !288, file: !107, line: 1069, baseType: !483, size: 64, offset: 3520)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "proto_input_filters", scope: !288, file: !107, line: 1072, baseType: !483, size: 64, offset: 3584)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "no_cache", scope: !288, file: !107, line: 1075, baseType: !14, size: 32, offset: 3648)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "no_local_copy", scope: !288, file: !107, line: 1077, baseType: !14, size: 32, offset: 3680)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "invoke_mtx", scope: !288, file: !107, line: 1082, baseType: !652, size: 64, offset: 3712)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_thread_mutex_t", file: !654, line: 41, baseType: !655)
!654 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_thread_mutex.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "333d6b386ebd5ebf2a57c53b3ab4b684")
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_thread_mutex_t", file: !654, line: 41, flags: DIFlagFwdDecl)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "parsed_uri", scope: !288, file: !107, line: 1085, baseType: !657, size: 704, offset: 3776)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_uri_t", file: !658, line: 80, baseType: !659)
!658 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-util-1.6.3-l37sacsnb2zk76xejbzfvftzd4gcjj3o/include/apr-1/apr_uri.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "9269047179f727bd075392a12871b578")
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_uri_t", file: !658, line: 85, size: 704, elements: !660)
!660 = !{!661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !673, !674, !675, !676}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "scheme", scope: !659, file: !658, line: 87, baseType: !216, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "hostinfo", scope: !659, file: !658, line: 89, baseType: !216, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !659, file: !658, line: 91, baseType: !216, size: 64, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "password", scope: !659, file: !658, line: 93, baseType: !216, size: 64, offset: 192)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "hostname", scope: !659, file: !658, line: 95, baseType: !216, size: 64, offset: 256)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "port_str", scope: !659, file: !658, line: 97, baseType: !216, size: 64, offset: 320)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !659, file: !658, line: 99, baseType: !216, size: 64, offset: 384)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !659, file: !658, line: 101, baseType: !216, size: 64, offset: 448)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "fragment", scope: !659, file: !658, line: 103, baseType: !216, size: 64, offset: 512)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "hostent", scope: !659, file: !658, line: 106, baseType: !671, size: 64, offset: 576)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "hostent", file: !658, line: 106, flags: DIFlagFwdDecl)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !659, file: !658, line: 109, baseType: !334, size: 16, offset: 640)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "is_initialized", scope: !659, file: !658, line: 112, baseType: !65, size: 1, offset: 656, flags: DIFlagBitField, extraData: i64 656)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "dns_looked_up", scope: !659, file: !658, line: 115, baseType: !65, size: 1, offset: 657, flags: DIFlagBitField, extraData: i64 656)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dns_resolved", scope: !659, file: !658, line: 117, baseType: !65, size: 1, offset: 658, flags: DIFlagBitField, extraData: i64 656)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "finfo", scope: !288, file: !107, line: 1087, baseType: !678, size: 960, offset: 4480)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_finfo_t", file: !129, line: 143, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_finfo_t", file: !129, line: 174, size: 960, elements: !680)
!680 = !{!681, !682, !683, !685, !687, !692, !696, !700, !704, !705, !706, !707, !708, !709, !710, !711, !712}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !679, file: !129, line: 176, baseType: !73, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !679, file: !129, line: 179, baseType: !358, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "protection", scope: !679, file: !129, line: 181, baseType: !684, size: 32, offset: 96)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_fileperms_t", file: !129, line: 125, baseType: !358)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "filetype", scope: !679, file: !129, line: 186, baseType: !686, size: 32, offset: 128)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_filetype_e", file: !129, line: 72, baseType: !128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !679, file: !129, line: 188, baseType: !688, size: 32, offset: 160)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_uid_t", file: !689, line: 45, baseType: !690)
!689 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_user.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "724f26fd838740b0ca4b55f59030741b")
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !51, line: 79, baseType: !691)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !53, line: 146, baseType: !65)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !679, file: !129, line: 190, baseType: !693, size: 32, offset: 192)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_gid_t", file: !689, line: 54, baseType: !694)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !51, line: 64, baseType: !695)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !53, line: 147, baseType: !65)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "inode", scope: !679, file: !129, line: 192, baseType: !697, size: 64, offset: 256)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_ino_t", file: !44, line: 383, baseType: !698)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !51, line: 47, baseType: !699)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !53, line: 148, baseType: !47)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !679, file: !129, line: 194, baseType: !701, size: 64, offset: 320)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_dev_t", file: !129, line: 135, baseType: !702)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !51, line: 59, baseType: !703)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !53, line: 145, baseType: !47)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !679, file: !129, line: 196, baseType: !358, size: 32, offset: 384)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !679, file: !129, line: 198, baseType: !49, size: 64, offset: 448)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "csize", scope: !679, file: !129, line: 200, baseType: !49, size: 64, offset: 512)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !679, file: !129, line: 202, baseType: !583, size: 64, offset: 576)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !679, file: !129, line: 204, baseType: !583, size: 64, offset: 640)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !679, file: !129, line: 206, baseType: !583, size: 64, offset: 704)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "fname", scope: !679, file: !129, line: 208, baseType: !10, size: 64, offset: 768)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !679, file: !129, line: 210, baseType: !10, size: 64, offset: 832)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "filehand", scope: !679, file: !129, line: 212, baseType: !713, size: 64, offset: 896)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "useragent_addr", scope: !288, file: !107, line: 1093, baseType: !349, size: 64, offset: 5440)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "useragent_ip", scope: !288, file: !107, line: 1094, baseType: !216, size: 64, offset: 5504)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "trailers_in", scope: !288, file: !107, line: 1097, baseType: !479, size: 64, offset: 5568)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "trailers_out", scope: !288, file: !107, line: 1099, baseType: !479, size: 64, offset: 5632)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "useragent_host", scope: !288, file: !107, line: 1104, baseType: !216, size: 64, offset: 5696)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "double_reverse", scope: !288, file: !107, line: 1108, baseType: !14, size: 32, offset: 5760)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "bnotes", scope: !288, file: !107, line: 1113, baseType: !721, size: 64, offset: 5824)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_request_bnotes_t", file: !107, line: 662, baseType: !722)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_uint64_t", file: !44, line: 372, baseType: !723)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !381, line: 27, baseType: !724)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !53, line: 45, baseType: !47)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_LINK_gather_propsets_t", file: !141, line: 697, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_LINK_gather_propsets_t", file: !141, line: 697, size: 320, elements: !728)
!728 = !{!729, !734, !735, !736, !737}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "pFunc", scope: !727, file: !141, line: 697, baseType: !730, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_HOOK_gather_propsets_t", file: !141, line: 697, baseType: !732)
!732 = !DISubroutineType(types: !733)
!733 = !{null, !450}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "szName", scope: !727, file: !141, line: 697, baseType: !10, size: 64, offset: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "aszPredecessors", scope: !727, file: !141, line: 697, baseType: !214, size: 64, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "aszSuccessors", scope: !727, file: !141, line: 697, baseType: !214, size: 64, offset: 192)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "nOrder", scope: !727, file: !141, line: 697, baseType: !14, size: 32, offset: 256)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_LINK_find_liveprop_t", file: !141, line: 711, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_LINK_find_liveprop_t", file: !141, line: 711, size: 320, elements: !741)
!741 = !{!742, !1044, !1045, !1046, !1047}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "pFunc", scope: !740, file: !141, line: 711, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_HOOK_find_liveprop_t", file: !141, line: 711, baseType: !745)
!745 = !DISubroutineType(types: !746)
!746 = !{!14, !747, !10, !10, !1004}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_resource", file: !141, line: 421, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_resource", file: !141, line: 387, size: 448, elements: !751)
!751 = !{!752, !754, !755, !756, !757, !758, !759, !760, !764, !1003}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !750, file: !141, line: 388, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_resource_type", file: !141, line: 315, baseType: !140)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "exists", scope: !750, file: !141, line: 390, baseType: !14, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "collection", scope: !750, file: !141, line: 392, baseType: !14, size: 32, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "versioned", scope: !750, file: !141, line: 396, baseType: !14, size: 32, offset: 96)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "baselined", scope: !750, file: !141, line: 400, baseType: !14, size: 32, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "working", scope: !750, file: !141, line: 404, baseType: !14, size: 32, offset: 160)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !750, file: !141, line: 408, baseType: !10, size: 64, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !750, file: !141, line: 412, baseType: !761, size: 64, offset: 256)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_resource_private", file: !141, line: 320, baseType: !763)
!763 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_resource_private", file: !141, line: 320, flags: DIFlagFwdDecl)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !750, file: !141, line: 414, baseType: !765, size: 64, offset: 320)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !767)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_hooks_repository", file: !141, line: 270, baseType: !768)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_hooks_repository", file: !141, line: 1914, size: 1280, elements: !769)
!769 = !{!770, !771, !777, !781, !785, !786, !795, !799, !805, !809, !813, !817, !821, !841, !845, !849, !996, !997, !998, !1002}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "handle_get", scope: !768, file: !141, line: 1922, baseType: !14, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "get_resource", scope: !768, file: !141, line: 1947, baseType: !772, size: 64, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!272, !286, !10, !10, !14, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent_resource", scope: !768, file: !141, line: 1962, baseType: !778, size: 64, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DISubroutineType(types: !780)
!780 = !{!272, !747, !775}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "is_same_resource", scope: !768, file: !141, line: 1971, baseType: !782, size: 64, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!14, !747, !747}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "is_parent_resource", scope: !768, file: !141, line: 1981, baseType: !782, size: 64, offset: 256)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "open_stream", scope: !768, file: !141, line: 1990, baseType: !787, size: 64, offset: 320)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!272, !747, !790, !791}
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_stream_mode", file: !141, line: 1905, baseType: !151)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_stream", file: !141, line: 1900, baseType: !794)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_stream", file: !141, line: 1900, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "close_stream", scope: !768, file: !141, line: 2010, baseType: !796, size: 64, offset: 384)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!272, !792, !14}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !768, file: !141, line: 2017, baseType: !800, size: 64, offset: 448)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!272, !792, !803, !43}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "seek_stream", scope: !768, file: !141, line: 2027, baseType: !806, size: 64, offset: 512)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!272, !792, !49}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "set_headers", scope: !768, file: !141, line: 2040, baseType: !810, size: 64, offset: 576)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!272, !286, !747}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "deliver", scope: !768, file: !141, line: 2056, baseType: !814, size: 64, offset: 640)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!272, !747, !501}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "create_collection", scope: !768, file: !141, line: 2065, baseType: !818, size: 64, offset: 704)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!272, !776}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "copy_resource", scope: !768, file: !141, line: 2082, baseType: !822, size: 64, offset: 768)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DISubroutineType(types: !824)
!824 = !{!272, !747, !776, !14, !825}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_response", file: !141, line: 188, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_response", file: !141, line: 492, size: 384, elements: !829)
!829 = !{!830, !831, !832, !838, !839}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "href", scope: !828, file: !141, line: 494, baseType: !10, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !828, file: !141, line: 495, baseType: !10, size: 64, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "propresult", scope: !828, file: !141, line: 498, baseType: !833, size: 128, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_get_props_result", file: !141, line: 489, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 485, size: 128, elements: !835)
!835 = !{!836, !837}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "propstats", scope: !834, file: !141, line: 487, baseType: !239, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "xmlns", scope: !834, file: !141, line: 488, baseType: !239, size: 64, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !828, file: !141, line: 500, baseType: !14, size: 32, offset: 256)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !828, file: !141, line: 502, baseType: !840, size: 64, offset: 320)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "move_resource", scope: !768, file: !141, line: 2097, baseType: !842, size: 64, offset: 832)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!272, !776, !776, !825}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "remove_resource", scope: !768, file: !141, line: 2110, baseType: !846, size: 64, offset: 896)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!272, !776, !825}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !768, file: !141, line: 2126, baseType: !850, size: 64, offset: 960)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!272, !853, !14, !825}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_walk_params", file: !141, line: 1840, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 1820, size: 384, elements: !857)
!857 = !{!858, !859, !871, !872, !873, !874}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "walk_type", scope: !856, file: !141, line: 1822, baseType: !14, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !856, file: !141, line: 1828, baseType: !860, size: 64, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{!272, !863, !14}
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_walk_resource", file: !141, line: 1818, baseType: !865)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 1804, size: 256, elements: !866)
!866 = !{!867, !868, !869, !870}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "walk_ctx", scope: !865, file: !141, line: 1807, baseType: !20, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !865, file: !141, line: 1810, baseType: !73, size: 64, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !865, file: !141, line: 1813, baseType: !747, size: 64, offset: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !865, file: !141, line: 1816, baseType: !826, size: 64, offset: 192)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "walk_ctx", scope: !856, file: !141, line: 1829, baseType: !20, size: 64, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !856, file: !141, line: 1832, baseType: !73, size: 64, offset: 192)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !856, file: !141, line: 1835, baseType: !747, size: 64, offset: 256)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "lockdb", scope: !856, file: !141, line: 1838, baseType: !875, size: 64, offset: 320)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lockdb", file: !141, line: 1340, baseType: !877)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 1333, size: 192, elements: !878)
!878 = !{!879, !991, !992}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !877, file: !141, line: 1335, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_hooks_locks", file: !141, line: 268, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_hooks_locks", file: !141, line: 1473, size: 1024, elements: !884)
!884 = !{!885, !889, !897, !903, !907, !912, !916, !920, !950, !954, !958, !963, !969, !973, !985, !990}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "get_supportedlock", scope: !883, file: !141, line: 1476, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!10, !747}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "parse_locktoken", scope: !883, file: !141, line: 1483, baseType: !890, size: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!272, !73, !10, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_locktoken", file: !141, line: 428, baseType: !896)
!896 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_locktoken", file: !141, line: 428, flags: DIFlagFwdDecl)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "format_locktoken", scope: !883, file: !141, line: 1494, baseType: !898, size: 64, offset: 128)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!10, !73, !901}
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "compare_locktoken", scope: !883, file: !141, line: 1505, baseType: !904, size: 64, offset: 192)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!14, !901, !901}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "open_lockdb", scope: !883, file: !141, line: 1527, baseType: !908, size: 64, offset: 256)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!272, !286, !14, !14, !911}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "close_lockdb", scope: !883, file: !141, line: 1535, baseType: !913, size: 64, offset: 320)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !875}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "remove_locknull_state", scope: !883, file: !141, line: 1540, baseType: !917, size: 64, offset: 384)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!272, !875, !747}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "create_lock", scope: !883, file: !141, line: 1551, baseType: !921, size: 64, offset: 448)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!272, !875, !747, !924}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lock", file: !141, line: 1409, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_lock", file: !141, line: 1389, size: 576, elements: !928)
!928 = !{!929, !931, !932, !934, !936, !937, !941, !942, !943, !944, !948}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "rectype", scope: !927, file: !141, line: 1391, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lock_rectype", file: !141, line: 1357, baseType: !155)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "is_locknull", scope: !927, file: !141, line: 1392, baseType: !14, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "scope", scope: !927, file: !141, line: 1396, baseType: !933, size: 32, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lock_scope", file: !141, line: 1346, baseType: !160)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !927, file: !141, line: 1397, baseType: !935, size: 32, offset: 96)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lock_type", file: !141, line: 1351, baseType: !165)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !927, file: !141, line: 1398, baseType: !14, size: 32, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !927, file: !141, line: 1399, baseType: !938, size: 64, offset: 192)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !939, line: 10, baseType: !940)
!939 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "", checksumkind: CSK_MD5, checksum: "5c299a4954617c88bb03645c7864e1b1")
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !53, line: 160, baseType: !54)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "locktoken", scope: !927, file: !141, line: 1401, baseType: !901, size: 64, offset: 256)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !927, file: !141, line: 1403, baseType: !10, size: 64, offset: 320)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "auth_user", scope: !927, file: !141, line: 1404, baseType: !10, size: 64, offset: 384)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !927, file: !141, line: 1406, baseType: !945, size: 64, offset: 448)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lock_private", file: !141, line: 1327, baseType: !947)
!947 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_lock_private", file: !141, line: 1327, flags: DIFlagFwdDecl)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !927, file: !141, line: 1408, baseType: !949, size: 64, offset: 512)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "get_locks", scope: !883, file: !141, line: 1565, baseType: !951, size: 64, offset: 512)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{!272, !875, !747, !14, !924}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "find_lock", scope: !883, file: !141, line: 1586, baseType: !955, size: 64, offset: 576)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{!272, !875, !747, !901, !14, !924}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "has_locks", scope: !883, file: !141, line: 1601, baseType: !959, size: 64, offset: 640)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!272, !875, !747, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "append_locks", scope: !883, file: !141, line: 1616, baseType: !964, size: 64, offset: 704)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!272, !875, !747, !14, !967}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "remove_lock", scope: !883, file: !141, line: 1626, baseType: !970, size: 64, offset: 768)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!272, !875, !747, !901}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "refresh_locks", scope: !883, file: !141, line: 1640, baseType: !974, size: 64, offset: 832)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DISubroutineType(types: !976)
!976 = !{!272, !875, !747, !977, !938, !924}
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_locktoken_list", file: !141, line: 875, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_locktoken_list", file: !141, line: 871, size: 128, elements: !981)
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "locktoken", scope: !980, file: !141, line: 873, baseType: !894, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !980, file: !141, line: 874, baseType: !984, size: 64, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_resource", scope: !883, file: !141, line: 1662, baseType: !986, size: 64, offset: 896)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!272, !875, !901, !747, !989}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !883, file: !141, line: 1671, baseType: !20, size: 64, offset: 960)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ro", scope: !877, file: !141, line: 1336, baseType: !14, size: 32, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !877, file: !141, line: 1338, baseType: !993, size: 64, offset: 128)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lockdb_private", file: !141, line: 1322, baseType: !995)
!995 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_lockdb_private", file: !141, line: 1322, flags: DIFlagFwdDecl)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "getetag", scope: !768, file: !141, line: 2130, baseType: !886, size: 64, offset: 1024)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !768, file: !141, line: 2136, baseType: !20, size: 64, offset: 1088)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "get_request_rec", scope: !768, file: !141, line: 2139, baseType: !999, size: 64, offset: 1152)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!286, !747}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "get_pathname", scope: !768, file: !141, line: 2142, baseType: !886, size: 64, offset: 1216)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !750, file: !141, line: 419, baseType: !73, size: 64, offset: 384)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_hooks_liveprop", file: !141, line: 271, baseType: !1008)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_hooks_liveprop", file: !141, line: 889, size: 512, elements: !1009)
!1009 = !{!1010, !1016, !1020, !1021, !1027, !1035, !1039, !1043}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "insert_prop", scope: !1008, file: !141, line: 922, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!1014, !747, !14, !1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_prop_insert", file: !141, line: 532, baseType: !190)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "is_writable", scope: !1008, file: !141, line: 934, baseType: !1017, size: 64, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!14, !747, !14}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "namespace_uris", scope: !1008, file: !141, line: 944, baseType: !214, size: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "patch_validate", scope: !1008, file: !141, line: 976, baseType: !1022, size: 64, offset: 192)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!272, !747, !1025, !14, !213, !962}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "patch_exec", scope: !1008, file: !141, line: 983, baseType: !1028, size: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!272, !747, !1025, !14, !20, !1031}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_liveprop_rollback", file: !141, line: 887, baseType: !1034)
!1034 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_liveprop_rollback", file: !141, line: 887, flags: DIFlagFwdDecl)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "patch_commit", scope: !1008, file: !141, line: 990, baseType: !1036, size: 64, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !747, !14, !20, !1032}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "patch_rollback", scope: !1008, file: !141, line: 996, baseType: !1040, size: 64, offset: 384)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!272, !747, !14, !20, !1032}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1008, file: !141, line: 1005, baseType: !20, size: 64, offset: 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "szName", scope: !740, file: !141, line: 711, baseType: !10, size: 64, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "aszPredecessors", scope: !740, file: !141, line: 711, baseType: !214, size: 64, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "aszSuccessors", scope: !740, file: !141, line: 711, baseType: !214, size: 64, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "nOrder", scope: !740, file: !141, line: 711, baseType: !14, size: 32, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_LINK_insert_all_liveprops_t", file: !141, line: 727, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_LINK_insert_all_liveprops_t", file: !141, line: 727, size: 320, elements: !1051)
!1051 = !{!1052, !1057, !1058, !1059, !1060}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pFunc", scope: !1050, file: !141, line: 727, baseType: !1053, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_HOOK_insert_all_liveprops_t", file: !141, line: 727, baseType: !1055)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !286, !747, !1014, !1015}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "szName", scope: !1050, file: !141, line: 727, baseType: !10, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "aszPredecessors", scope: !1050, file: !141, line: 727, baseType: !214, size: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "aszSuccessors", scope: !1050, file: !141, line: 727, baseType: !214, size: 64, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "nOrder", scope: !1050, file: !141, line: 727, baseType: !14, size: 32, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_LINK_deliver_report_t", file: !141, line: 739, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_LINK_deliver_report_t", file: !141, line: 739, size: 320, elements: !1064)
!1064 = !{!1065, !1078, !1079, !1080, !1081}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pFunc", scope: !1063, file: !141, line: 739, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_HOOK_deliver_report_t", file: !141, line: 739, baseType: !1068)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!14, !286, !747, !1070, !501, !1077}
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_xml_doc", file: !228, line: 145, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_xml_doc", file: !228, line: 200, size: 128, elements: !1074)
!1074 = !{!1075, !1076}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1073, file: !228, line: 202, baseType: !226, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "namespaces", scope: !1073, file: !228, line: 204, baseType: !450, size: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "szName", scope: !1063, file: !141, line: 739, baseType: !10, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "aszPredecessors", scope: !1063, file: !141, line: 739, baseType: !214, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "aszSuccessors", scope: !1063, file: !141, line: 739, baseType: !214, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "nOrder", scope: !1063, file: !141, line: 739, baseType: !14, size: 32, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_LINK_gather_reports_t", file: !141, line: 754, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_LINK_gather_reports_t", file: !141, line: 754, size: 320, elements: !1085)
!1085 = !{!1086, !1091, !1092, !1093, !1094}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pFunc", scope: !1084, file: !141, line: 754, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_HOOK_gather_reports_t", file: !141, line: 754, baseType: !1089)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{null, !286, !747, !450, !1077}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "szName", scope: !1084, file: !141, line: 754, baseType: !10, size: 64, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "aszPredecessors", scope: !1084, file: !141, line: 754, baseType: !214, size: 64, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "aszSuccessors", scope: !1084, file: !141, line: 754, baseType: !214, size: 64, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nOrder", scope: !1084, file: !141, line: 754, baseType: !14, size: 32, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_LINK_method_precondition_t", file: !141, line: 787, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_LINK_method_precondition_t", file: !141, line: 787, size: 320, elements: !1098)
!1098 = !{!1099, !1104, !1105, !1106, !1107}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pFunc", scope: !1097, file: !141, line: 787, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_HOOK_method_precondition_t", file: !141, line: 787, baseType: !1102)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!14, !286, !776, !747, !1070, !1077}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "szName", scope: !1097, file: !141, line: 787, baseType: !10, size: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "aszPredecessors", scope: !1097, file: !141, line: 787, baseType: !214, size: 64, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "aszSuccessors", scope: !1097, file: !141, line: 787, baseType: !214, size: 64, offset: 192)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "nOrder", scope: !1097, file: !141, line: 787, baseType: !14, size: 32, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_dir_conf", file: !3, line: 88, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 80, size: 320, elements: !1111)
!1111 = !{!1112, !1113, !1316, !1317, !1318, !1319}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "provider_name", scope: !1110, file: !3, line: 81, baseType: !10, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "provider", scope: !1110, file: !3, line: 82, baseType: !1114, size: 64, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_provider", file: !141, line: 682, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 673, size: 448, elements: !1118)
!1118 = !{!1119, !1120, !1206, !1207, !1288, !1300, !1315}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "repos", scope: !1117, file: !141, line: 674, baseType: !765, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "propdb", scope: !1117, file: !141, line: 675, baseType: !1121, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1123)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_hooks_propdb", file: !141, line: 267, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_hooks_propdb", file: !141, line: 1206, size: 832, elements: !1125)
!1125 = !{!1126, !1134, !1138, !1154, !1165, !1175, !1179, !1183, !1187, !1192, !1193, !1201, !1205}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1124, file: !141, line: 1208, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!272, !73, !747, !14, !1130}
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_db", file: !141, line: 1196, baseType: !1133)
!1133 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_db", file: !141, line: 1196, flags: DIFlagFwdDecl)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1124, file: !141, line: 1210, baseType: !1135, size: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{null, !1131}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "define_namespaces", scope: !1124, file: !141, line: 1224, baseType: !1139, size: 64, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!272, !1131, !1142}
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_xmlns_info", file: !141, line: 617, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 612, size: 256, elements: !1145)
!1145 = !{!1146, !1147, !1152, !1153}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1144, file: !141, line: 613, baseType: !73, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "uri_prefix", scope: !1144, file: !141, line: 614, baseType: !1148, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_hash_t", file: !1150, line: 52, baseType: !1151)
!1150 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_hash.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "200f319f929840eb1031e0c6813d7a15")
!1151 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_hash_t", file: !1150, line: 52, flags: DIFlagFwdDecl)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_uri", scope: !1144, file: !141, line: 615, baseType: !1148, size: 64, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1144, file: !141, line: 616, baseType: !14, size: 32, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "output_value", scope: !1124, file: !141, line: 1238, baseType: !1155, size: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!272, !1131, !1158, !1142, !1015, !962}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_prop_name", file: !141, line: 1203, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 1200, size: 128, elements: !1162)
!1162 = !{!1163, !1164}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1161, file: !141, line: 1201, baseType: !10, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1161, file: !141, line: 1202, baseType: !10, size: 64, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "map_namespaces", scope: !1124, file: !141, line: 1257, baseType: !1166, size: 64, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!272, !1131, !1169, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_namespace_map", file: !141, line: 1197, baseType: !1174)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_namespace_map", file: !141, line: 1197, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1124, file: !141, line: 1269, baseType: !1176, size: 64, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!272, !1131, !1158, !1025, !1172}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1124, file: !141, line: 1274, baseType: !1180, size: 64, offset: 384)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!272, !1131, !1158}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "exists", scope: !1124, file: !141, line: 1277, baseType: !1184, size: 64, offset: 448)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!14, !1131, !1158}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "first_name", scope: !1124, file: !141, line: 1286, baseType: !1188, size: 64, offset: 512)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!272, !1131, !1191}
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "next_name", scope: !1124, file: !141, line: 1287, baseType: !1188, size: 64, offset: 576)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "get_rollback", scope: !1124, file: !141, line: 1296, baseType: !1194, size: 64, offset: 640)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!272, !1131, !1158, !1197}
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_deadprop_rollback", file: !141, line: 1198, baseType: !1200)
!1200 = !DICompositeType(tag: DW_TAG_structure_type, name: "dav_deadprop_rollback", file: !141, line: 1198, flags: DIFlagFwdDecl)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "apply_rollback", scope: !1124, file: !141, line: 1298, baseType: !1202, size: 64, offset: 704)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!272, !1131, !1198}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1124, file: !141, line: 1305, baseType: !20, size: 64, offset: 768)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "locks", scope: !1117, file: !141, line: 676, baseType: !880, size: 64, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "vsn", scope: !1117, file: !141, line: 677, baseType: !1208, size: 64, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_hooks_vsn", file: !141, line: 269, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_hooks_vsn", file: !141, line: 2259, size: 1280, elements: !1212)
!1212 = !{!1213, !1217, !1221, !1225, !1230, !1234, !1238, !1239, !1243, !1255, !1259, !1263, !1267, !1271, !1275, !1276, !1281, !1282, !1283, !1287}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "get_vsn_options", scope: !1211, file: !141, line: 2273, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{null, !73, !1015}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "get_option", scope: !1211, file: !141, line: 2280, baseType: !1218, size: 64, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!272, !747, !1025, !1015}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "versionable", scope: !1211, file: !141, line: 2287, baseType: !1222, size: 64, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!14, !747}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "auto_versionable", scope: !1211, file: !141, line: 2298, baseType: !1226, size: 64, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!1229, !747}
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_auto_version", file: !141, line: 2186, baseType: !169)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "vsn_control", scope: !1211, file: !141, line: 2313, baseType: !1231, size: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!272, !776, !10}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "checkout", scope: !1211, file: !141, line: 2341, baseType: !1235, size: 64, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!272, !776, !14, !14, !14, !14, !450, !775}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "uncheckout", scope: !1211, file: !141, line: 2351, baseType: !818, size: 64, offset: 384)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "checkin", scope: !1211, file: !141, line: 2364, baseType: !1240, size: 64, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!272, !776, !14, !775}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "avail_reports", scope: !1211, file: !141, line: 2376, baseType: !1244, size: 64, offset: 512)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!272, !747, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_report_elem", file: !141, line: 2255, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 2252, size: 128, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "nmspace", scope: !1251, file: !141, line: 2253, baseType: !10, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1251, file: !141, line: 2254, baseType: !10, size: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "report_label_header_allowed", scope: !1211, file: !141, line: 2385, baseType: !1256, size: 64, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!14, !1070}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "deliver_report", scope: !1211, file: !141, line: 2407, baseType: !1260, size: 64, offset: 640)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!272, !286, !747, !1070, !501}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1211, file: !141, line: 2435, baseType: !1264, size: 64, offset: 704)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!272, !747, !747, !10, !14, !825}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "add_label", scope: !1211, file: !141, line: 2456, baseType: !1268, size: 64, offset: 768)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!272, !747, !10, !14}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "remove_label", scope: !1211, file: !141, line: 2471, baseType: !1272, size: 64, offset: 832)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!272, !747, !10}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_workspace", scope: !1211, file: !141, line: 2482, baseType: !1222, size: 64, offset: 896)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "make_workspace", scope: !1211, file: !141, line: 2495, baseType: !1277, size: 64, offset: 960)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!272, !776, !1280}
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_activity", scope: !1211, file: !141, line: 2506, baseType: !1222, size: 64, offset: 1024)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "make_activity", scope: !1211, file: !141, line: 2518, baseType: !818, size: 64, offset: 1088)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "merge", scope: !1211, file: !141, line: 2528, baseType: !1284, size: 64, offset: 1152)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!272, !776, !776, !14, !14, !226, !501}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1211, file: !141, line: 2537, baseType: !20, size: 64, offset: 1216)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "binding", scope: !1117, file: !141, line: 678, baseType: !1289, size: 64, offset: 256)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_hooks_binding", file: !141, line: 272, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_hooks_binding", file: !141, line: 2547, size: 192, elements: !1293)
!1293 = !{!1294, !1295, !1299}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "is_bindable", scope: !1292, file: !141, line: 2552, baseType: !1222, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "bind_resource", scope: !1292, file: !141, line: 2559, baseType: !1296, size: 64, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!272, !747, !776}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1292, file: !141, line: 2566, baseType: !20, size: 64, offset: 128)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "search", scope: !1117, file: !141, line: 679, baseType: !1301, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_hooks_search", file: !141, line: 273, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_hooks_search", file: !141, line: 2577, size: 192, elements: !1305)
!1305 = !{!1306, !1310, !1314}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "set_option_head", scope: !1304, file: !141, line: 2588, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!272, !286}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "search_resource", scope: !1304, file: !141, line: 2597, baseType: !1311, size: 64, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!272, !286, !825}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1304, file: !141, line: 2604, baseType: !20, size: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1117, file: !141, line: 681, baseType: !20, size: 64, offset: 384)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1110, file: !3, line: 83, baseType: !10, size: 64, offset: 128)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "locktimeout", scope: !1110, file: !3, line: 84, baseType: !14, size: 32, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "allow_depthinfinity", scope: !1110, file: !3, line: 85, baseType: !14, size: 32, offset: 224)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "allow_lockdiscovery", scope: !1110, file: !3, line: 86, baseType: !14, size: 32, offset: 256)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_server_conf", file: !3, line: 94, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 91, size: 32, elements: !1323)
!1323 = !{!1324}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1322, file: !3, line: 92, baseType: !14, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_list_provider_names_t", file: !1328, line: 37, baseType: !1329)
!1328 = !DIFile(filename: "include/ap_provider.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "af039ff02badc3caa75fc06157563346")
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1328, line: 35, size: 64, elements: !1330)
!1330 = !{!1331}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "provider_name", scope: !1329, file: !1328, line: 36, baseType: !10, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_table_entry_t", file: !452, line: 78, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apr_table_entry_t", file: !452, line: 81, size: 192, elements: !1336)
!1336 = !{!1337, !1338, !1339}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1335, file: !452, line: 83, baseType: !216, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1335, file: !452, line: 87, baseType: !216, size: 64, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "key_checksum", scope: !1335, file: !452, line: 90, baseType: !1340, size: 32, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_uint32_t", file: !44, line: 334, baseType: !65)
!1341 = !{!1342, !1347, !1352, !1357, !1362, !1367, !1369, !1374, !1379, !1384, !1386, !1391, !1396, !1401, !1406, !1408, !1410, !1415, !1420, !1425, !1427, !1429, !1431, !1434, !1439, !1441, !1446, !1451, !1456, !1461, !1463, !1468, !1473, !1478, !1483, !1485, !1487, !0, !1492, !1495, !1500, !1505, !1507, !1509, !1511, !1521, !1523, !1528, !1533, !1538, !1543, !1545, !1547, !1552, !1554, !1559, !1564, !1567, !1572, !1574, !1576, !1578, !1580, !1582, !1587, !1689, !1691, !1693, !1695, !1697, !1699, !1701, !1706, !1711, !1716, !1721, !1726, !1728, !1730, !1733, !1735, !1740, !1745, !1750, !1752, !1754, !1759, !1764, !1766, !1768, !1773, !1778, !1780, !1782, !1787, !1789, !1791, !1793, !1795, !1800, !1802, !1804, !1809, !1811, !1816, !1818, !1820, !1822, !1824, !1826, !1828, !1833, !1835, !1838, !1840, !1842, !1844, !1846, !1848, !1850, !1852, !1854, !1856, !1858, !1860, !1862, !1864, !1866, !1868, !1870, !1872, !1874, !1876, !1878, !1880, !1882, !1884, !1886, !1888, !1890, !1892, !1897, !1899, !1901, !1903, !1908, !1910, !1915, !1917, !1922, !1924, !1926, !1928, !1930, !1935, !1937, !1942, !1944, !1946, !1948, !1950, !1952, !1954, !1956, !1958, !1960, !1962, !1964, !1966, !1968, !1973, !1978, !1980, !1982, !1984, !1989, !1991, !1993, !1995, !2000, !2005, !2010, !2012, !2014, !2016, !2018, !2020, !2022, !2024, !2026, !2028, !2030, !2032, !2037, !2039, !2041, !2043, !2048, !2053, !2055, !2057, !2062, !2067, !2072, !2077, !2082, !2084, !2089, !2094, !2096, !2098, !2103, !2105, !2110, !2115, !2120, !2122, !2124, !2126, !2128, !2130, !2135, !2137, !2139, !2144, !2146, !2148, !2150, !2152, !2154, !2156, !2161, !2163, !2165, !2167, !2169, !2171, !2173, !2178, !2183, !2188, !2190, !2192, !2194, !2196, !2198, !2200, !2202, !2204, !2206, !2211, !2213, !2215, !2217, !2219, !2221, !2223, !2228, !2230, !2232, !2234, !2239, !2241, !2243, !2248, !2250, !2252, !2254, !2256, !2258, !2260, !2262, !2264, !2266, !2268, !2270, !2272, !2274, !2276, !2278, !2280, !2282, !2284, !2286, !2288, !2290, !2292, !2294, !2296, !2298, !2300, !2305, !2307, !2309, !2311, !2313, !2315, !2317, !2319, !2321, !2323, !2328, !2330, !2332, !2334, !2336, !2338, !2340, !2342, !2345, !2347, !2349, !2351, !2356, !2361, !2363, !2368}
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(scope: null, file: !3, line: 473, type: !1344, isLocal: true, isDefinition: true)
!1344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 104, elements: !1345)
!1345 = !{!1346}
!1346 = !DISubrange(count: 13)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(scope: null, file: !3, line: 476, type: !1349, isLocal: true, isDefinition: true)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 96, elements: !1350)
!1350 = !{!1351}
!1351 = !DISubrange(count: 12)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(scope: null, file: !3, line: 484, type: !1354, isLocal: true, isDefinition: true)
!1354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 80, elements: !1355)
!1355 = !{!1356}
!1356 = !DISubrange(count: 10)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(scope: null, file: !3, line: 486, type: !1359, isLocal: true, isDefinition: true)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 88, elements: !1360)
!1360 = !{!1361}
!1361 = !DISubrange(count: 11)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(scope: null, file: !3, line: 495, type: !1364, isLocal: true, isDefinition: true)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 160, elements: !1365)
!1365 = !{!1366}
!1366 = !DISubrange(count: 20)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(scope: null, file: !3, line: 497, type: !1344, isLocal: true, isDefinition: true)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(scope: null, file: !3, line: 513, type: !1371, isLocal: true, isDefinition: true)
!1371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 192, elements: !1372)
!1372 = !{!1373}
!1373 = !DISubrange(count: 24)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(scope: null, file: !3, line: 515, type: !1376, isLocal: true, isDefinition: true)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 208, elements: !1377)
!1377 = !{!1378}
!1378 = !DISubrange(count: 26)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(scope: null, file: !3, line: 519, type: !1381, isLocal: true, isDefinition: true)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 120, elements: !1382)
!1382 = !{!1383}
!1383 = !DISubrange(count: 15)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(scope: null, file: !3, line: 533, type: !1376, isLocal: true, isDefinition: true)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(scope: null, file: !3, line: 536, type: !1388, isLocal: true, isDefinition: true)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 552, elements: !1389)
!1389 = !{!1390}
!1390 = !DISubrange(count: 69)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(scope: null, file: !3, line: 543, type: !1393, isLocal: true, isDefinition: true)
!1393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 136, elements: !1394)
!1394 = !{!1395}
!1395 = !DISubrange(count: 17)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(scope: null, file: !3, line: 548, type: !1398, isLocal: true, isDefinition: true)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 24, elements: !1399)
!1399 = !{!1400}
!1400 = !DISubrange(count: 3)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(scope: null, file: !3, line: 557, type: !1403, isLocal: true, isDefinition: true)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 144, elements: !1404)
!1404 = !{!1405}
!1405 = !DISubrange(count: 18)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(scope: null, file: !3, line: 578, type: !1364, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(scope: null, file: !3, line: 638, type: !1393, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(scope: null, file: !3, line: 638, type: !1412, isLocal: true, isDefinition: true)
!1412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 16, elements: !1413)
!1413 = !{!1414}
!1414 = !DISubrange(count: 2)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(scope: null, file: !3, line: 692, type: !1417, isLocal: true, isDefinition: true)
!1417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 48, elements: !1418)
!1418 = !{!1419}
!1419 = !DISubrange(count: 6)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(scope: null, file: !3, line: 698, type: !1422, isLocal: true, isDefinition: true)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 72, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 9)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(scope: null, file: !3, line: 701, type: !1412, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(scope: null, file: !3, line: 704, type: !1412, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(scope: null, file: !3, line: 710, type: !1354, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "aplog_module_index", scope: !2, file: !3, line: 148, type: !1433, isLocal: true, isDefinition: true)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(scope: null, file: !3, line: 710, type: !1436, isLocal: true, isDefinition: true)
!1436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 384, elements: !1437)
!1437 = !{!1438}
!1438 = !DISubrange(count: 48)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(scope: null, file: !3, line: 756, type: !1417, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(scope: null, file: !3, line: 764, type: !1443, isLocal: true, isDefinition: true)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 184, elements: !1444)
!1444 = !{!1445}
!1445 = !DISubrange(count: 23)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(scope: null, file: !3, line: 774, type: !1448, isLocal: true, isDefinition: true)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 304, elements: !1449)
!1449 = !{!1450}
!1450 = !DISubrange(count: 38)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(scope: null, file: !3, line: 783, type: !1453, isLocal: true, isDefinition: true)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 376, elements: !1454)
!1454 = !{!1455}
!1455 = !DISubrange(count: 47)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2268, type: !1458, isLocal: true, isDefinition: true)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 176, elements: !1459)
!1459 = !{!1460}
!1460 = !DISubrange(count: 22)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2271, type: !1359, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2279, type: !1465, isLocal: true, isDefinition: true)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 576, elements: !1466)
!1466 = !{!1467}
!1467 = !DISubrange(count: 72)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2287, type: !1470, isLocal: true, isDefinition: true)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 600, elements: !1471)
!1471 = !{!1472}
!1472 = !DISubrange(count: 75)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2296, type: !1475, isLocal: true, isDefinition: true)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 344, elements: !1476)
!1476 = !{!1477}
!1477 = !DISubrange(count: 43)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2304, type: !1480, isLocal: true, isDefinition: true)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 200, elements: !1481)
!1481 = !{!1482}
!1482 = !DISubrange(count: 25)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2309, type: !1381, isLocal: true, isDefinition: true)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2328, type: !1443, isLocal: true, isDefinition: true)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2336, type: !1489, isLocal: true, isDefinition: true)
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 496, elements: !1490)
!1490 = !{!1491}
!1491 = !DISubrange(count: 62)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5205, type: !1494, isLocal: true, isDefinition: true)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 128, elements: !411)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5209, type: !1497, isLocal: true, isDefinition: true)
!1497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 112, elements: !1498)
!1498 = !{!1499}
!1499 = !DISubrange(count: 14)
!1500 = !DIGlobalVariableExpression(var: !1501, expr: !DIExpression())
!1501 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5215, type: !1502, isLocal: true, isDefinition: true)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 168, elements: !1503)
!1503 = !{!1504}
!1504 = !DISubrange(count: 21)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5220, type: !1381, isLocal: true, isDefinition: true)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5227, type: !1381, isLocal: true, isDefinition: true)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5232, type: !1364, isLocal: true, isDefinition: true)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "_hooks", scope: !2, file: !3, line: 5196, type: !1513, isLocal: true, isDefinition: true)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 5196, size: 384, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "link_gather_propsets", scope: !1513, file: !3, line: 5196, baseType: !450, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "link_find_liveprop", scope: !1513, file: !3, line: 5196, baseType: !450, size: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "link_insert_all_liveprops", scope: !1513, file: !3, line: 5196, baseType: !450, size: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "link_deliver_report", scope: !1513, file: !3, line: 5196, baseType: !450, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "link_gather_reports", scope: !1513, file: !3, line: 5196, baseType: !450, size: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "link_method_precondition", scope: !1513, file: !3, line: 5196, baseType: !450, size: 64, offset: 320)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(scope: null, file: !3, line: 605, type: !1497, isLocal: true, isDefinition: true)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(scope: null, file: !3, line: 377, type: !1525, isLocal: true, isDefinition: true)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 504, elements: !1526)
!1526 = !{!1527}
!1527 = !DISubrange(count: 63)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(scope: null, file: !3, line: 382, type: !1530, isLocal: true, isDefinition: true)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 312, elements: !1531)
!1531 = !{!1532}
!1532 = !DISubrange(count: 39)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(scope: null, file: !3, line: 388, type: !1535, isLocal: true, isDefinition: true)
!1535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 256, elements: !1536)
!1536 = !{!1537}
!1537 = !DISubrange(count: 32)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(scope: null, file: !3, line: 395, type: !1540, isLocal: true, isDefinition: true)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 152, elements: !1541)
!1541 = !{!1542}
!1542 = !DISubrange(count: 19)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(scope: null, file: !3, line: 403, type: !1371, isLocal: true, isDefinition: true)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(scope: null, file: !3, line: 409, type: !1359, isLocal: true, isDefinition: true)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(scope: null, file: !3, line: 417, type: !1549, isLocal: true, isDefinition: true)
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 448, elements: !1550)
!1550 = !{!1551}
!1551 = !DISubrange(count: 56)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(scope: null, file: !3, line: 424, type: !1349, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(scope: null, file: !3, line: 185, type: !1556, isLocal: true, isDefinition: true)
!1556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 664, elements: !1557)
!1557 = !{!1558}
!1558 = !DISubrange(count: 83)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(scope: null, file: !3, line: 191, type: !1561, isLocal: true, isDefinition: true)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 608, elements: !1562)
!1562 = !{!1563}
!1563 = !DISubrange(count: 76)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5164, type: !1566, isLocal: true, isDefinition: true)
!1566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 32, elements: !417)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5164, type: !1569, isLocal: true, isDefinition: true)
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 424, elements: !1570)
!1570 = !{!1571}
!1571 = !DISubrange(count: 53)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5168, type: !1497, isLocal: true, isDefinition: true)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5168, type: !1535, isLocal: true, isDefinition: true)
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5173, type: !1393, isLocal: true, isDefinition: true)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5173, type: !1530, isLocal: true, isDefinition: true)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5178, type: !1393, isLocal: true, isDefinition: true)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5178, type: !1584, isLocal: true, isDefinition: true)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 336, elements: !1585)
!1585 = !{!1586}
!1586 = !DISubrange(count: 42)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "dav_cmds", scope: !2, file: !3, line: 5161, type: !1589, isLocal: true, isDefinition: true)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1590, size: 1600, elements: !1687)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "command_rec", file: !175, line: 203, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_struct", file: !175, line: 204, size: 320, elements: !1593)
!1593 = !{!1594, !1595, !1683, !1684, !1685, !1686}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1592, file: !175, line: 206, baseType: !10, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1592, file: !175, line: 208, baseType: !1596, size: 64, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmd_func", file: !175, line: 101, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !175, line: 82, size: 64, elements: !1598)
!1598 = !{!1599, !1660, !1664, !1670, !1671, !1675, !1679}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "no_args", scope: !1597, file: !175, line: 84, baseType: !1600, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!10, !1603, !20}
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmd_parms", file: !175, line: 74, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmd_parms_struct", file: !175, line: 288, size: 960, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1634, !1650, !1651, !1652, !1653, !1654, !1656, !1657}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1605, file: !175, line: 290, baseType: !20, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "override", scope: !1605, file: !175, line: 292, baseType: !14, size: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "override_opts", scope: !1605, file: !175, line: 294, baseType: !14, size: 32, offset: 96)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "override_list", scope: !1605, file: !175, line: 296, baseType: !479, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "limited", scope: !1605, file: !175, line: 298, baseType: !442, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "limited_xmethods", scope: !1605, file: !175, line: 300, baseType: !450, size: 64, offset: 256)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "xlimited", scope: !1605, file: !175, line: 302, baseType: !591, size: 64, offset: 320)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "config_file", scope: !1605, file: !175, line: 305, baseType: !1615, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_configfile_t", file: !175, line: 267, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ap_configfile_t", file: !175, line: 268, size: 384, elements: !1618)
!1618 = !{!1619, !1623, !1627, !1631, !1632, !1633}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "getch", scope: !1617, file: !175, line: 270, baseType: !1620, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!25, !216, !20}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "getstr", scope: !1617, file: !175, line: 272, baseType: !1624, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!25, !20, !43, !20}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1617, file: !175, line: 274, baseType: !1628, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!25, !20}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1617, file: !175, line: 276, baseType: !20, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1617, file: !175, line: 278, baseType: !10, size: 64, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1617, file: !175, line: 280, baseType: !65, size: 32, offset: 320)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "directive", scope: !1605, file: !175, line: 307, baseType: !1635, size: 64, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_directive_t", file: !1637, line: 35, baseType: !1638)
!1637 = !DIFile(filename: "include/util_cfgtree.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "c91452b9a51fb2ed560e306e1998c613")
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ap_directive_t", file: !1637, line: 46, size: 576, elements: !1639)
!1639 = !{!1640, !1641, !1642, !1644, !1645, !1646, !1647, !1648, !1649}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "directive", scope: !1638, file: !1637, line: 48, baseType: !10, size: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1638, file: !1637, line: 51, baseType: !10, size: 64, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1638, file: !1637, line: 53, baseType: !1643, size: 64, offset: 128)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "first_child", scope: !1638, file: !1637, line: 55, baseType: !1643, size: 64, offset: 192)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1638, file: !1637, line: 57, baseType: !1643, size: 64, offset: 256)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1638, file: !1637, line: 60, baseType: !20, size: 64, offset: 320)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1638, file: !1637, line: 64, baseType: !10, size: 64, offset: 384)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "line_num", scope: !1638, file: !1637, line: 66, baseType: !14, size: 32, offset: 448)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1638, file: !1637, line: 73, baseType: !1643, size: 64, offset: 512)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1605, file: !175, line: 310, baseType: !73, size: 64, offset: 512)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "temp_pool", scope: !1605, file: !175, line: 313, baseType: !73, size: 64, offset: 576)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "server", scope: !1605, file: !175, line: 315, baseType: !298, size: 64, offset: 640)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1605, file: !175, line: 322, baseType: !216, size: 64, offset: 704)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !1605, file: !175, line: 324, baseType: !1655, size: 64, offset: 768)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1605, file: !175, line: 327, baseType: !327, size: 64, offset: 832)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "err_directive", scope: !1605, file: !175, line: 329, baseType: !1658, size: 64, offset: 896)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1636)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "raw_args", scope: !1597, file: !175, line: 86, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!10, !1603, !20, !10}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "take_argv", scope: !1597, file: !175, line: 89, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!10, !1603, !20, !14, !1668}
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "take1", scope: !1597, file: !175, line: 92, baseType: !1661, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "take2", scope: !1597, file: !175, line: 94, baseType: !1672, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!10, !1603, !20, !10, !10}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "take3", scope: !1597, file: !175, line: 97, baseType: !1676, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!10, !1603, !20, !10, !10, !10}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1597, file: !175, line: 100, baseType: !1680, size: 64)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!10, !1603, !20, !14}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_data", scope: !1592, file: !175, line: 210, baseType: !20, size: 64, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "req_override", scope: !1592, file: !175, line: 212, baseType: !14, size: 32, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "args_how", scope: !1592, file: !175, line: 214, baseType: !174, size: 32, offset: 224)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "errmsg", scope: !1592, file: !175, line: 217, baseType: !10, size: 64, offset: 256)
!1687 = !{!1688}
!1688 = !DISubrange(count: 5)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(scope: null, file: !3, line: 258, type: !1398, isLocal: true, isDefinition: true)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(scope: null, file: !3, line: 259, type: !1359, isLocal: true, isDefinition: true)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(scope: null, file: !3, line: 261, type: !1566, isLocal: true, isDefinition: true)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(scope: null, file: !3, line: 277, type: !1480, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(scope: null, file: !3, line: 325, type: !1453, isLocal: true, isDefinition: true)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4905, type: !1349, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4911, type: !1703, isLocal: true, isDefinition: true)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 464, elements: !1704)
!1704 = !{!1705}
!1705 = !DISubrange(count: 58)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4914, type: !1708, isLocal: true, isDefinition: true)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 568, elements: !1709)
!1709 = !{!1710}
!1710 = !DISubrange(count: 71)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(scope: null, file: !3, line: 344, type: !1713, isLocal: true, isDefinition: true)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 240, elements: !1714)
!1714 = !{!1715}
!1715 = !DISubrange(count: 30)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(scope: null, file: !3, line: 348, type: !1718, isLocal: true, isDefinition: true)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 904, elements: !1719)
!1719 = !{!1720}
!1720 = !DISubrange(count: 113)
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(scope: null, file: !3, line: 350, type: !1723, isLocal: true, isDefinition: true)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 224, elements: !1724)
!1724 = !{!1725}
!1725 = !DISubrange(count: 28)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(scope: null, file: !3, line: 352, type: !1354, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(scope: null, file: !3, line: 354, type: !1417, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(scope: null, file: !3, line: 355, type: !1732, isLocal: true, isDefinition: true)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 64, elements: !393)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(scope: null, file: !3, line: 356, type: !1494, isLocal: true, isDefinition: true)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(scope: null, file: !3, line: 895, type: !1737, isLocal: true, isDefinition: true)
!1737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 248, elements: !1738)
!1738 = !{!1739}
!1739 = !DISubrange(count: 31)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(scope: null, file: !3, line: 914, type: !1742, isLocal: true, isDefinition: true)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 216, elements: !1743)
!1743 = !{!1744}
!1744 = !DISubrange(count: 27)
!1745 = !DIGlobalVariableExpression(var: !1746, expr: !DIExpression())
!1746 = distinct !DIGlobalVariable(scope: null, file: !3, line: 983, type: !1747, isLocal: true, isDefinition: true)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 288, elements: !1748)
!1748 = !{!1749}
!1749 = !DISubrange(count: 36)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(scope: null, file: !3, line: 991, type: !1723, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1020, type: !1475, isLocal: true, isDefinition: true)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1045, type: !1756, isLocal: true, isDefinition: true)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 280, elements: !1757)
!1757 = !{!1758}
!1758 = !DISubrange(count: 35)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1076, type: !1761, isLocal: true, isDefinition: true)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 472, elements: !1762)
!1762 = !{!1763}
!1763 = !DISubrange(count: 59)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1105, type: !1470, isLocal: true, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1148, type: !1718, isLocal: true, isDefinition: true)
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1163, type: !1770, isLocal: true, isDefinition: true)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 1120, elements: !1771)
!1771 = !{!1772}
!1772 = !DISubrange(count: 140)
!1773 = !DIGlobalVariableExpression(var: !1774, expr: !DIExpression())
!1774 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1179, type: !1775, isLocal: true, isDefinition: true)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 688, elements: !1776)
!1776 = !{!1777}
!1777 = !DISubrange(count: 86)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1190, type: !1422, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(scope: null, file: !3, line: 829, type: !1497, isLocal: true, isDefinition: true)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(scope: null, file: !3, line: 834, type: !1784, isLocal: true, isDefinition: true)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 56, elements: !1785)
!1785 = !{!1786}
!1786 = !DISubrange(count: 7)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(scope: null, file: !3, line: 678, type: !1422, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(scope: null, file: !3, line: 684, type: !1412, isLocal: true, isDefinition: true)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(scope: null, file: !3, line: 685, type: !1540, isLocal: true, isDefinition: true)
!1793 = !DIGlobalVariableExpression(var: !1794, expr: !DIExpression())
!1794 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1273, type: !1489, isLocal: true, isDefinition: true)
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1280, type: !1797, isLocal: true, isDefinition: true)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 392, elements: !1798)
!1798 = !{!1799}
!1799 = !DISubrange(count: 49)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1299, type: !1525, isLocal: true, isDefinition: true)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1331, type: !1502, isLocal: true, isDefinition: true)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1339, type: !1806, isLocal: true, isDefinition: true)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 800, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 100)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1707, type: !1732, isLocal: true, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1708, type: !1813, isLocal: true, isDefinition: true)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 368, elements: !1814)
!1814 = !{!1815}
!1815 = !DISubrange(count: 46)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1717, type: !1566, isLocal: true, isDefinition: true)
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1721, type: !1354, isLocal: true, isDefinition: true)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1724, type: !1349, isLocal: true, isDefinition: true)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1736, type: !1412, isLocal: true, isDefinition: true)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1772, type: !1497, isLocal: true, isDefinition: true)
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1784, type: !1732, isLocal: true, isDefinition: true)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1784, type: !1830, isLocal: true, isDefinition: true)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 8, elements: !1831)
!1831 = !{!1832}
!1832 = !DISubrange(count: 1)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1791, type: !1566, isLocal: true, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1792, type: !1837, isLocal: true, isDefinition: true)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 40, elements: !1687)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1793, type: !1837, isLocal: true, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1794, type: !1784, isLocal: true, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1795, type: !1417, isLocal: true, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1796, type: !1422, isLocal: true, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1797, type: !1354, isLocal: true, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1798, type: !1837, isLocal: true, isDefinition: true)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1799, type: !1837, isLocal: true, isDefinition: true)
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1802, type: !1566, isLocal: true, isDefinition: true)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1805, type: !1837, isLocal: true, isDefinition: true)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1806, type: !1784, isLocal: true, isDefinition: true)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1813, type: !1417, isLocal: true, isDefinition: true)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1843, type: !1494, isLocal: true, isDefinition: true)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1847, type: !1349, isLocal: true, isDefinition: true)
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1851, type: !1359, isLocal: true, isDefinition: true)
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1858, type: !1732, isLocal: true, isDefinition: true)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1861, type: !1359, isLocal: true, isDefinition: true)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1864, type: !1422, isLocal: true, isDefinition: true)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1865, type: !1417, isLocal: true, isDefinition: true)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1875, type: !1837, isLocal: true, isDefinition: true)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1880, type: !1784, isLocal: true, isDefinition: true)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1927, type: !1417, isLocal: true, isDefinition: true)
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1961, type: !1502, isLocal: true, isDefinition: true)
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1965, type: !1723, isLocal: true, isDefinition: true)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1969, type: !1502, isLocal: true, isDefinition: true)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1992, type: !1561, isLocal: true, isDefinition: true)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1998, type: !1443, isLocal: true, isDefinition: true)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1365, type: !1376, isLocal: true, isDefinition: true)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1377, type: !1894, isLocal: true, isDefinition: true)
!1894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 232, elements: !1895)
!1895 = !{!1896}
!1896 = !DISubrange(count: 29)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1379, type: !1837, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1387, type: !1393, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1393, type: !1837, isLocal: true, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1399, type: !1905, isLocal: true, isDefinition: true)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 512, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 64)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1414, type: !1742, isLocal: true, isDefinition: true)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1433, type: !1912, isLocal: true, isDefinition: true)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 752, elements: !1913)
!1913 = !{!1914}
!1914 = !DISubrange(count: 94)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1446, type: !1775, isLocal: true, isDefinition: true)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1451, type: !1919, isLocal: true, isDefinition: true)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 264, elements: !1920)
!1920 = !{!1921}
!1921 = !DISubrange(count: 33)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1464, type: !1371, isLocal: true, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1473, type: !1354, isLocal: true, isDefinition: true)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1480, type: !1708, isLocal: true, isDefinition: true)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1488, type: !1837, isLocal: true, isDefinition: true)
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1496, type: !1932, isLocal: true, isDefinition: true)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 272, elements: !1933)
!1933 = !{!1934}
!1934 = !DISubrange(count: 34)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1520, type: !1376, isLocal: true, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1526, type: !1939, isLocal: true, isDefinition: true)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 928, elements: !1940)
!1940 = !{!1941}
!1941 = !DISubrange(count: 116)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1541, type: !1894, isLocal: true, isDefinition: true)
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1543, type: !1494, isLocal: true, isDefinition: true)
!1946 = !DIGlobalVariableExpression(var: !1947, expr: !DIExpression())
!1947 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1553, type: !1393, isLocal: true, isDefinition: true)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1570, type: !1905, isLocal: true, isDefinition: true)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1601, type: !1742, isLocal: true, isDefinition: true)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2153, type: !1388, isLocal: true, isDefinition: true)
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2161, type: !1422, isLocal: true, isDefinition: true)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2163, type: !1453, isLocal: true, isDefinition: true)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2170, type: !1732, isLocal: true, isDefinition: true)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2174, type: !1422, isLocal: true, isDefinition: true)
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2177, type: !1837, isLocal: true, isDefinition: true)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2184, type: !435, isLocal: true, isDefinition: true)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2200, type: !1494, isLocal: true, isDefinition: true)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2204, type: !1970, isLocal: true, isDefinition: true)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 848, elements: !1971)
!1971 = !{!1972}
!1972 = !DISubrange(count: 106)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2241, type: !1975, isLocal: true, isDefinition: true)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 632, elements: !1976)
!1976 = !{!1977}
!1977 = !DISubrange(count: 79)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2025, type: !1388, isLocal: true, isDefinition: true)
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression())
!1981 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2422, type: !1381, isLocal: true, isDefinition: true)
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2424, type: !1708, isLocal: true, isDefinition: true)
!1984 = !DIGlobalVariableExpression(var: !1985, expr: !DIExpression())
!1985 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2454, type: !1986, isLocal: true, isDefinition: true)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 360, elements: !1987)
!1987 = !{!1988}
!1988 = !DISubrange(count: 45)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2475, type: !1784, isLocal: true, isDefinition: true)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2476, type: !1566, isLocal: true, isDefinition: true)
!1993 = !DIGlobalVariableExpression(var: !1994, expr: !DIExpression())
!1994 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2488, type: !1465, isLocal: true, isDefinition: true)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2679, type: !1997, isLocal: true, isDefinition: true)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 792, elements: !1998)
!1998 = !{!1999}
!1999 = !DISubrange(count: 99)
!2000 = !DIGlobalVariableExpression(var: !2001, expr: !DIExpression())
!2001 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2692, type: !2002, isLocal: true, isDefinition: true)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 1080, elements: !2003)
!2003 = !{!2004}
!2004 = !DISubrange(count: 135)
!2005 = !DIGlobalVariableExpression(var: !2006, expr: !DIExpression())
!2006 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2708, type: !2007, isLocal: true, isDefinition: true)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 648, elements: !2008)
!2008 = !{!2009}
!2009 = !DISubrange(count: 81)
!2010 = !DIGlobalVariableExpression(var: !2011, expr: !DIExpression())
!2011 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2717, type: !1359, isLocal: true, isDefinition: true)
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2556, type: !1403, isLocal: true, isDefinition: true)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2557, type: !1381, isLocal: true, isDefinition: true)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2565, type: !1732, isLocal: true, isDefinition: true)
!2018 = !DIGlobalVariableExpression(var: !2019, expr: !DIExpression())
!2019 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2567, type: !1448, isLocal: true, isDefinition: true)
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2578, type: !1756, isLocal: true, isDefinition: true)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2763, type: !1713, isLocal: true, isDefinition: true)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2769, type: !1349, isLocal: true, isDefinition: true)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2772, type: !1837, isLocal: true, isDefinition: true)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2773, type: !1732, isLocal: true, isDefinition: true)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2776, type: !1732, isLocal: true, isDefinition: true)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2780, type: !2034, isLocal: true, isDefinition: true)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 432, elements: !2035)
!2035 = !{!2036}
!2036 = !DISubrange(count: 54)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2789, type: !1349, isLocal: true, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2801, type: !1393, isLocal: true, isDefinition: true)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2811, type: !1713, isLocal: true, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2830, type: !2045, isLocal: true, isDefinition: true)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 1000, elements: !2046)
!2046 = !{!2047}
!2047 = !DISubrange(count: 125)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2847, type: !2050, isLocal: true, isDefinition: true)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 400, elements: !2051)
!2051 = !{!2052}
!2052 = !DISubrange(count: 50)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2855, type: !1584, isLocal: true, isDefinition: true)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2869, type: !1761, isLocal: true, isDefinition: true)
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2875, type: !2059, isLocal: true, isDefinition: true)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 480, elements: !2060)
!2060 = !{!2061}
!2061 = !DISubrange(count: 60)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2902, type: !2064, isLocal: true, isDefinition: true)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 584, elements: !2065)
!2065 = !{!2066}
!2066 = !DISubrange(count: 73)
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2927, type: !2069, isLocal: true, isDefinition: true)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 680, elements: !2070)
!2070 = !{!2071}
!2071 = !DISubrange(count: 85)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2940, type: !2074, isLocal: true, isDefinition: true)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 352, elements: !2075)
!2075 = !{!2076}
!2076 = !DISubrange(count: 44)
!2077 = !DIGlobalVariableExpression(var: !2078, expr: !DIExpression())
!2078 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2954, type: !2079, isLocal: true, isDefinition: true)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 616, elements: !2080)
!2080 = !{!2081}
!2081 = !DISubrange(count: 77)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3088, type: !1371, isLocal: true, isDefinition: true)
!2084 = !DIGlobalVariableExpression(var: !2085, expr: !DIExpression())
!2085 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3098, type: !2086, isLocal: true, isDefinition: true)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 880, elements: !2087)
!2087 = !{!2088}
!2088 = !DISubrange(count: 110)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3107, type: !2091, isLocal: true, isDefinition: true)
!2091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 976, elements: !2092)
!2092 = !{!2093}
!2093 = !DISubrange(count: 122)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3125, type: !2069, isLocal: true, isDefinition: true)
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(scope: null, file: !3, line: 717, type: !1354, isLocal: true, isDefinition: true)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(scope: null, file: !3, line: 733, type: !2100, isLocal: true, isDefinition: true)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 416, elements: !2101)
!2101 = !{!2102}
!2102 = !DISubrange(count: 52)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3166, type: !1797, isLocal: true, isDefinition: true)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3191, type: !2107, isLocal: true, isDefinition: true)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 520, elements: !2108)
!2108 = !{!2109}
!2109 = !DISubrange(count: 65)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3235, type: !2112, isLocal: true, isDefinition: true)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 536, elements: !2113)
!2113 = !{!2114}
!2114 = !DISubrange(count: 67)
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3256, type: !2117, isLocal: true, isDefinition: true)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 712, elements: !2118)
!2118 = !{!2119}
!2119 = !DISubrange(count: 89)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3290, type: !1412, isLocal: true, isDefinition: true)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3293, type: !1412, isLocal: true, isDefinition: true)
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3295, type: !1359, isLocal: true, isDefinition: true)
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3303, type: !1905, isLocal: true, isDefinition: true)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3305, type: !1364, isLocal: true, isDefinition: true)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3308, type: !2132, isLocal: true, isDefinition: true)
!2132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 328, elements: !2133)
!2133 = !{!2134}
!2134 = !DISubrange(count: 41)
!2135 = !DIGlobalVariableExpression(var: !2136, expr: !DIExpression())
!2136 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3313, type: !1354, isLocal: true, isDefinition: true)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3345, type: !1905, isLocal: true, isDefinition: true)
!2139 = !DIGlobalVariableExpression(var: !2140, expr: !DIExpression())
!2140 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3368, type: !2141, isLocal: true, isDefinition: true)
!2141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 672, elements: !2142)
!2142 = !{!2143}
!2143 = !DISubrange(count: 84)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3466, type: !1494, isLocal: true, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3467, type: !1465, isLocal: true, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3474, type: !1732, isLocal: true, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3475, type: !2079, isLocal: true, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3481, type: !1837, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3482, type: !2112, isLocal: true, isDefinition: true)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3492, type: !2158, isLocal: true, isDefinition: true)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 408, elements: !2159)
!2159 = !{!2160}
!2160 = !DISubrange(count: 51)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3507, type: !1535, isLocal: true, isDefinition: true)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3514, type: !1448, isLocal: true, isDefinition: true)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3522, type: !1742, isLocal: true, isDefinition: true)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3531, type: !1497, isLocal: true, isDefinition: true)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3531, type: !1422, isLocal: true, isDefinition: true)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3560, type: !1530, isLocal: true, isDefinition: true)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3571, type: !2175, isLocal: true, isDefinition: true)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 872, elements: !2176)
!2176 = !{!2177}
!2177 = !DISubrange(count: 109)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3586, type: !2180, isLocal: true, isDefinition: true)
!2180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 1160, elements: !2181)
!2181 = !{!2182}
!2182 = !DISubrange(count: 145)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3602, type: !2185, isLocal: true, isDefinition: true)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 728, elements: !2186)
!2186 = !{!2187}
!2187 = !DISubrange(count: 91)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3614, type: !1393, isLocal: true, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3642, type: !1422, isLocal: true, isDefinition: true)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3644, type: !1708, isLocal: true, isDefinition: true)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3650, type: !1393, isLocal: true, isDefinition: true)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3655, type: !1465, isLocal: true, isDefinition: true)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3662, type: !1359, isLocal: true, isDefinition: true)
!2200 = !DIGlobalVariableExpression(var: !2201, expr: !DIExpression())
!2201 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3663, type: !1732, isLocal: true, isDefinition: true)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3665, type: !1344, isLocal: true, isDefinition: true)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3666, type: !1566, isLocal: true, isDefinition: true)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3691, type: !2208, isLocal: true, isDefinition: true)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 992, elements: !2209)
!2209 = !{!2210}
!2210 = !DISubrange(count: 124)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3723, type: !1530, isLocal: true, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3728, type: !1448, isLocal: true, isDefinition: true)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3733, type: !2034, isLocal: true, isDefinition: true)
!2217 = !DIGlobalVariableExpression(var: !2218, expr: !DIExpression())
!2218 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3745, type: !1535, isLocal: true, isDefinition: true)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3763, type: !1502, isLocal: true, isDefinition: true)
!2221 = !DIGlobalVariableExpression(var: !2222, expr: !DIExpression())
!2222 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3804, type: !2132, isLocal: true, isDefinition: true)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3809, type: !2225, isLocal: true, isDefinition: true)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 320, elements: !2226)
!2226 = !{!2227}
!2227 = !DISubrange(count: 40)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3814, type: !2050, isLocal: true, isDefinition: true)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3823, type: !1932, isLocal: true, isDefinition: true)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3854, type: !1732, isLocal: true, isDefinition: true)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3856, type: !2236, isLocal: true, isDefinition: true)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 560, elements: !2237)
!2237 = !{!2238}
!2238 = !DISubrange(count: 70)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3862, type: !1393, isLocal: true, isDefinition: true)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3887, type: !1448, isLocal: true, isDefinition: true)
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3892, type: !2245, isLocal: true, isDefinition: true)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 296, elements: !2246)
!2246 = !{!2247}
!2247 = !DISubrange(count: 37)
!2248 = !DIGlobalVariableExpression(var: !2249, expr: !DIExpression())
!2249 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3897, type: !1919, isLocal: true, isDefinition: true)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3907, type: !1737, isLocal: true, isDefinition: true)
!2252 = !DIGlobalVariableExpression(var: !2253, expr: !DIExpression())
!2253 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3913, type: !1732, isLocal: true, isDefinition: true)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3948, type: !1784, isLocal: true, isDefinition: true)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3950, type: !1905, isLocal: true, isDefinition: true)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3957, type: !1359, isLocal: true, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3962, type: !2107, isLocal: true, isDefinition: true)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3969, type: !2141, isLocal: true, isDefinition: true)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3977, type: !2034, isLocal: true, isDefinition: true)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3986, type: !1465, isLocal: true, isDefinition: true)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4015, type: !1569, isLocal: true, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4025, type: !1349, isLocal: true, isDefinition: true)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4038, type: !1376, isLocal: true, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4057, type: !1502, isLocal: true, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4188, type: !1489, isLocal: true, isDefinition: true)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4195, type: !1566, isLocal: true, isDefinition: true)
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4205, type: !2141, isLocal: true, isDefinition: true)
!2282 = !DIGlobalVariableExpression(var: !2283, expr: !DIExpression())
!2283 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4213, type: !1561, isLocal: true, isDefinition: true)
!2284 = !DIGlobalVariableExpression(var: !2285, expr: !DIExpression())
!2285 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4222, type: !1525, isLocal: true, isDefinition: true)
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4242, type: !1436, isLocal: true, isDefinition: true)
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4259, type: !2074, isLocal: true, isDefinition: true)
!2290 = !DIGlobalVariableExpression(var: !2291, expr: !DIExpression())
!2291 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4116, type: !1475, isLocal: true, isDefinition: true)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4120, type: !1737, isLocal: true, isDefinition: true)
!2294 = !DIGlobalVariableExpression(var: !2295, expr: !DIExpression())
!2295 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4330, type: !1797, isLocal: true, isDefinition: true)
!2296 = !DIGlobalVariableExpression(var: !2297, expr: !DIExpression())
!2297 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4379, type: !2107, isLocal: true, isDefinition: true)
!2298 = !DIGlobalVariableExpression(var: !2299, expr: !DIExpression())
!2299 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4431, type: !1349, isLocal: true, isDefinition: true)
!2300 = !DIGlobalVariableExpression(var: !2301, expr: !DIExpression())
!2301 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4432, type: !2302, isLocal: true, isDefinition: true)
!2302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 544, elements: !2303)
!2303 = !{!2304}
!2304 = !DISubrange(count: 68)
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4447, type: !1894, isLocal: true, isDefinition: true)
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4457, type: !1737, isLocal: true, isDefinition: true)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4467, type: !1354, isLocal: true, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4518, type: !1723, isLocal: true, isDefinition: true)
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4528, type: !1713, isLocal: true, isDefinition: true)
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4538, type: !1422, isLocal: true, isDefinition: true)
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4570, type: !1417, isLocal: true, isDefinition: true)
!2319 = !DIGlobalVariableExpression(var: !2320, expr: !DIExpression())
!2320 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4572, type: !1470, isLocal: true, isDefinition: true)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4578, type: !1784, isLocal: true, isDefinition: true)
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4580, type: !2325, isLocal: true, isDefinition: true)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 528, elements: !2326)
!2326 = !{!2327}
!2327 = !DISubrange(count: 66)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4587, type: !2107, isLocal: true, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4600, type: !1349, isLocal: true, isDefinition: true)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4613, type: !1737, isLocal: true, isDefinition: true)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4626, type: !1497, isLocal: true, isDefinition: true)
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4627, type: !1349, isLocal: true, isDefinition: true)
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4667, type: !1422, isLocal: true, isDefinition: true)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4681, type: !2132, isLocal: true, isDefinition: true)
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "dav_methods", scope: !2, file: !3, line: 109, type: !2344, isLocal: true, isDefinition: true)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !1413)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4732, type: !2034, isLocal: true, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4741, type: !1349, isLocal: true, isDefinition: true)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4752, type: !2034, isLocal: true, isDefinition: true)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4783, type: !2353, isLocal: true, isDefinition: true)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 936, elements: !2354)
!2354 = !{!2355}
!2355 = !DISubrange(count: 117)
!2356 = !DIGlobalVariableExpression(var: !2357, expr: !DIExpression())
!2357 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4824, type: !2358, isLocal: true, isDefinition: true)
!2358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 640, elements: !2359)
!2359 = !{!2360}
!2360 = !DISubrange(count: 80)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4877, type: !1540, isLocal: true, isDefinition: true)
!2363 = !DIGlobalVariableExpression(var: !2364, expr: !DIExpression())
!2364 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4887, type: !2365, isLocal: true, isDefinition: true)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 840, elements: !2366)
!2366 = !{!2367}
!2367 = !DISubrange(count: 105)
!2368 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression())
!2369 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4896, type: !1732, isLocal: true, isDefinition: true)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "module", file: !175, line: 344, baseType: !2371)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_struct", file: !175, line: 345, size: 896, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2378, !2380, !2381, !2385, !2389, !2393, !2397, !2398, !2399, !2403}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2371, file: !175, line: 349, baseType: !14, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !2371, file: !175, line: 352, baseType: !14, size: 32, offset: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "module_index", scope: !2371, file: !175, line: 354, baseType: !14, size: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2371, file: !175, line: 357, baseType: !10, size: 64, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_load_handle", scope: !2371, file: !175, line: 359, baseType: !20, size: 64, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2371, file: !175, line: 364, baseType: !2379, size: 64, offset: 256)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2371, file: !175, line: 368, baseType: !47, size: 64, offset: 320)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "rewrite_args", scope: !2371, file: !175, line: 374, baseType: !2382, size: 64, offset: 384)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !303}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "create_dir_config", scope: !2371, file: !175, line: 381, baseType: !2386, size: 64, offset: 448)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!20, !73, !216}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "merge_dir_config", scope: !2371, file: !175, line: 389, baseType: !2390, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{!20, !73, !20, !20}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "create_server_config", scope: !2371, file: !175, line: 396, baseType: !2394, size: 64, offset: 576)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!20, !73, !298}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "merge_server_config", scope: !2371, file: !175, line: 404, baseType: !2390, size: 64, offset: 640)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !2371, file: !175, line: 409, baseType: !1655, size: 64, offset: 704)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "register_hooks", scope: !2371, file: !175, line: 417, baseType: !2400, size: 64, offset: 768)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{null, !73}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2371, file: !175, line: 420, baseType: !14, size: 32, offset: 832)
!2404 = !{i32 7, !"Dwarf Version", i32 5}
!2405 = !{i32 2, !"Debug Info Version", i32 3}
!2406 = !{i32 1, !"wchar_size", i32 4}
!2407 = !{i32 8, !"PIC Level", i32 2}
!2408 = !{i32 7, !"uwtable", i32 2}
!2409 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!2410 = distinct !DISubprogram(name: "dav_get_provider_name", scope: !3, file: !3, line: 207, type: !2411, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2413)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{!10, !286}
!2413 = !{!2414, !2415}
!2414 = !DILocalVariable(name: "r", arg: 1, scope: !2410, file: !3, line: 207, type: !286)
!2415 = !DILocalVariable(name: "conf", scope: !2410, file: !3, line: 209, type: !1108)
!2416 = !{!2417, !2417, i64 0}
!2417 = !{!"any pointer", !2418, i64 0}
!2418 = !{!"omnipotent char", !2419, i64 0}
!2419 = !{!"Simple C/C++ TBAA"}
!2420 = !DILocation(line: 207, column: 62, scope: !2410)
!2421 = !DILocation(line: 209, column: 5, scope: !2410)
!2422 = !DILocation(line: 209, column: 19, scope: !2410)
!2423 = !DILocation(line: 209, column: 26, scope: !2410)
!2424 = !{!2425, !2417, i64 384}
!2425 = !{!"request_rec", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2426, i64 56, !2426, i64 60, !2426, i64 64, !2426, i64 68, !2417, i64 72, !2417, i64 80, !2427, i64 88, !2417, i64 96, !2426, i64 104, !2426, i64 108, !2417, i64 112, !2427, i64 120, !2417, i64 128, !2417, i64 136, !2427, i64 144, !2427, i64 152, !2427, i64 160, !2417, i64 168, !2427, i64 176, !2426, i64 184, !2426, i64 188, !2426, i64 192, !2426, i64 196, !2417, i64 200, !2417, i64 208, !2427, i64 216, !2427, i64 224, !2417, i64 232, !2417, i64 240, !2417, i64 248, !2417, i64 256, !2417, i64 264, !2417, i64 272, !2417, i64 280, !2417, i64 288, !2417, i64 296, !2417, i64 304, !2417, i64 312, !2417, i64 320, !2417, i64 328, !2417, i64 336, !2417, i64 344, !2417, i64 352, !2417, i64 360, !2417, i64 368, !2426, i64 376, !2426, i64 380, !2417, i64 384, !2417, i64 392, !2417, i64 400, !2417, i64 408, !2417, i64 416, !2417, i64 424, !2417, i64 432, !2417, i64 440, !2417, i64 448, !2426, i64 456, !2426, i64 460, !2417, i64 464, !2428, i64 472, !2430, i64 560, !2417, i64 680, !2417, i64 688, !2417, i64 696, !2417, i64 704, !2417, i64 712, !2426, i64 720, !2427, i64 728}
!2426 = !{!"int", !2418, i64 0}
!2427 = !{!"long", !2418, i64 0}
!2428 = !{!"apr_uri_t", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2429, i64 80, !2426, i64 82, !2426, i64 82, !2426, i64 82}
!2429 = !{!"short", !2418, i64 0}
!2430 = !{!"apr_finfo_t", !2417, i64 0, !2426, i64 8, !2426, i64 12, !2418, i64 16, !2426, i64 20, !2426, i64 24, !2427, i64 32, !2427, i64 40, !2426, i64 48, !2427, i64 56, !2427, i64 64, !2427, i64 72, !2427, i64 80, !2427, i64 88, !2417, i64 96, !2417, i64 104, !2417, i64 112}
!2431 = !{!2432, !2426, i64 8}
!2432 = !{!"module_struct", !2426, i64 0, !2426, i64 4, !2426, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2427, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2417, i64 80, !2417, i64 88, !2417, i64 96, !2426, i64 104}
!2433 = !DILocation(line: 210, column: 12, scope: !2410)
!2434 = !DILocation(line: 210, column: 19, scope: !2410)
!2435 = !DILocation(line: 210, column: 25, scope: !2410)
!2436 = !{!2437, !2417, i64 0}
!2437 = !{!"", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2426, i64 24, !2426, i64 28, !2426, i64 32}
!2438 = !DILocation(line: 211, column: 1, scope: !2410)
!2439 = !DILocation(line: 210, column: 5, scope: !2410)
!2440 = distinct !DISubprogram(name: "dav_get_provider", scope: !3, file: !3, line: 213, type: !2441, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2443)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!1114, !286}
!2443 = !{!2444, !2445}
!2444 = !DILocalVariable(name: "r", arg: 1, scope: !2440, file: !3, line: 213, type: !286)
!2445 = !DILocalVariable(name: "conf", scope: !2440, file: !3, line: 215, type: !1108)
!2446 = !DILocation(line: 213, column: 65, scope: !2440)
!2447 = !DILocation(line: 215, column: 5, scope: !2440)
!2448 = !DILocation(line: 215, column: 19, scope: !2440)
!2449 = !DILocation(line: 217, column: 12, scope: !2440)
!2450 = !DILocation(line: 217, column: 10, scope: !2440)
!2451 = !DILocation(line: 223, column: 12, scope: !2440)
!2452 = !DILocation(line: 223, column: 18, scope: !2440)
!2453 = !{!2437, !2417, i64 8}
!2454 = !DILocation(line: 224, column: 1, scope: !2440)
!2455 = !DILocation(line: 223, column: 5, scope: !2440)
!2456 = distinct !DISubprogram(name: "dav_get_lock_hooks", scope: !3, file: !3, line: 226, type: !2457, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2459)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!880, !286}
!2459 = !{!2460}
!2460 = !DILocalVariable(name: "r", arg: 1, scope: !2456, file: !3, line: 226, type: !286)
!2461 = !DILocation(line: 226, column: 70, scope: !2456)
!2462 = !DILocation(line: 228, column: 29, scope: !2456)
!2463 = !DILocation(line: 228, column: 12, scope: !2456)
!2464 = !DILocation(line: 228, column: 33, scope: !2456)
!2465 = !{!2466, !2417, i64 16}
!2466 = !{!"", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48}
!2467 = !DILocation(line: 228, column: 5, scope: !2456)
!2468 = distinct !DISubprogram(name: "dav_get_propdb_hooks", scope: !3, file: !3, line: 231, type: !2469, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2471)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!1121, !286}
!2471 = !{!2472}
!2472 = !DILocalVariable(name: "r", arg: 1, scope: !2468, file: !3, line: 231, type: !286)
!2473 = !DILocation(line: 231, column: 73, scope: !2468)
!2474 = !DILocation(line: 233, column: 29, scope: !2468)
!2475 = !DILocation(line: 233, column: 12, scope: !2468)
!2476 = !DILocation(line: 233, column: 33, scope: !2468)
!2477 = !{!2466, !2417, i64 8}
!2478 = !DILocation(line: 233, column: 5, scope: !2468)
!2479 = distinct !DISubprogram(name: "dav_get_vsn_hooks", scope: !3, file: !3, line: 236, type: !2480, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2482)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{!1208, !286}
!2482 = !{!2483}
!2483 = !DILocalVariable(name: "r", arg: 1, scope: !2479, file: !3, line: 236, type: !286)
!2484 = !DILocation(line: 236, column: 67, scope: !2479)
!2485 = !DILocation(line: 238, column: 29, scope: !2479)
!2486 = !DILocation(line: 238, column: 12, scope: !2479)
!2487 = !DILocation(line: 238, column: 33, scope: !2479)
!2488 = !{!2466, !2417, i64 24}
!2489 = !DILocation(line: 238, column: 5, scope: !2479)
!2490 = distinct !DISubprogram(name: "dav_get_binding_hooks", scope: !3, file: !3, line: 241, type: !2491, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2493)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!1289, !286}
!2493 = !{!2494}
!2494 = !DILocalVariable(name: "r", arg: 1, scope: !2490, file: !3, line: 241, type: !286)
!2495 = !DILocation(line: 241, column: 75, scope: !2490)
!2496 = !DILocation(line: 243, column: 29, scope: !2490)
!2497 = !DILocation(line: 243, column: 12, scope: !2490)
!2498 = !DILocation(line: 243, column: 33, scope: !2490)
!2499 = !{!2466, !2417, i64 32}
!2500 = !DILocation(line: 243, column: 5, scope: !2490)
!2501 = distinct !DISubprogram(name: "dav_get_search_hooks", scope: !3, file: !3, line: 246, type: !2502, scopeLine: 247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2504)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!1301, !286}
!2504 = !{!2505}
!2505 = !DILocalVariable(name: "r", arg: 1, scope: !2501, file: !3, line: 246, type: !286)
!2506 = !DILocation(line: 246, column: 73, scope: !2501)
!2507 = !DILocation(line: 248, column: 29, scope: !2501)
!2508 = !DILocation(line: 248, column: 12, scope: !2501)
!2509 = !DILocation(line: 248, column: 33, scope: !2501)
!2510 = !{!2466, !2417, i64 40}
!2511 = !DILocation(line: 248, column: 5, scope: !2501)
!2512 = distinct !DISubprogram(name: "dav_send_one_response", scope: !3, file: !3, line: 465, type: !2513, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2515)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !826, !503, !286, !73}
!2515 = !{!2516, !2517, !2518, !2519, !2520}
!2516 = !DILocalVariable(name: "response", arg: 1, scope: !2512, file: !3, line: 465, type: !826)
!2517 = !DILocalVariable(name: "bb", arg: 2, scope: !2512, file: !3, line: 466, type: !503)
!2518 = !DILocalVariable(name: "r", arg: 3, scope: !2512, file: !3, line: 467, type: !286)
!2519 = !DILocalVariable(name: "pool", arg: 4, scope: !2512, file: !3, line: 468, type: !73)
!2520 = !DILocalVariable(name: "t", scope: !2512, file: !3, line: 470, type: !239)
!2521 = !DILocation(line: 465, column: 55, scope: !2512)
!2522 = !DILocation(line: 466, column: 61, scope: !2512)
!2523 = !DILocation(line: 467, column: 54, scope: !2512)
!2524 = !DILocation(line: 468, column: 53, scope: !2512)
!2525 = !DILocation(line: 470, column: 5, scope: !2512)
!2526 = !DILocation(line: 470, column: 15, scope: !2512)
!2527 = !DILocation(line: 472, column: 9, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2512, file: !3, line: 472, column: 9)
!2529 = !DILocation(line: 472, column: 19, scope: !2528)
!2530 = !DILocation(line: 472, column: 30, scope: !2528)
!2531 = !{!2532, !2417, i64 24}
!2532 = !{!"dav_response", !2417, i64 0, !2417, i64 8, !2533, i64 16, !2426, i64 32, !2417, i64 40}
!2533 = !{!"", !2417, i64 0, !2417, i64 8}
!2534 = !DILocation(line: 472, column: 36, scope: !2528)
!2535 = !DILocation(line: 472, column: 9, scope: !2512)
!2536 = !DILocation(line: 473, column: 7, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 472, column: 45)
!2538 = !{!2425, !2417, i64 424}
!2539 = !DILocation(line: 474, column: 5, scope: !2537)
!2540 = !DILocation(line: 476, column: 7, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 475, column: 10)
!2542 = !DILocation(line: 477, column: 16, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2541, file: !3, line: 477, column: 7)
!2544 = !DILocation(line: 477, column: 26, scope: !2543)
!2545 = !DILocation(line: 477, column: 37, scope: !2543)
!2546 = !DILocation(line: 477, column: 14, scope: !2543)
!2547 = !DILocation(line: 477, column: 12, scope: !2543)
!2548 = !DILocation(line: 477, column: 44, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2543, file: !3, line: 477, column: 7)
!2550 = !DILocation(line: 477, column: 7, scope: !2543)
!2551 = !DILocation(line: 478, column: 9, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2549, file: !3, line: 477, column: 60)
!2553 = !{!2554, !2417, i64 0}
!2554 = !{!"apr_text", !2417, i64 0, !2417, i64 8}
!2555 = !DILocation(line: 479, column: 7, scope: !2552)
!2556 = !DILocation(line: 477, column: 51, scope: !2549)
!2557 = !DILocation(line: 477, column: 54, scope: !2549)
!2558 = !{!2554, !2417, i64 8}
!2559 = !DILocation(line: 477, column: 49, scope: !2549)
!2560 = !DILocation(line: 477, column: 7, scope: !2549)
!2561 = distinct !{!2561, !2550, !2562, !2563}
!2562 = !DILocation(line: 479, column: 7, scope: !2543)
!2563 = !{!"llvm.loop.mustprogress"}
!2564 = !DILocation(line: 480, column: 7, scope: !2541)
!2565 = !DILocation(line: 483, column: 17, scope: !2512)
!2566 = !DILocation(line: 483, column: 20, scope: !2512)
!2567 = !DILocation(line: 483, column: 36, scope: !2512)
!2568 = !DILocation(line: 485, column: 36, scope: !2512)
!2569 = !DILocation(line: 485, column: 42, scope: !2512)
!2570 = !DILocation(line: 485, column: 52, scope: !2512)
!2571 = !{!2532, !2417, i64 0}
!2572 = !DILocation(line: 485, column: 17, scope: !2512)
!2573 = !DILocation(line: 483, column: 5, scope: !2512)
!2574 = !DILocation(line: 489, column: 9, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2512, file: !3, line: 489, column: 9)
!2576 = !DILocation(line: 489, column: 19, scope: !2575)
!2577 = !DILocation(line: 489, column: 30, scope: !2575)
!2578 = !{!2532, !2417, i64 16}
!2579 = !DILocation(line: 489, column: 40, scope: !2575)
!2580 = !DILocation(line: 489, column: 9, scope: !2512)
!2581 = !DILocation(line: 494, column: 19, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 489, column: 49)
!2583 = !DILocation(line: 494, column: 22, scope: !2582)
!2584 = !DILocation(line: 494, column: 38, scope: !2582)
!2585 = !DILocation(line: 496, column: 38, scope: !2582)
!2586 = !DILocation(line: 496, column: 48, scope: !2582)
!2587 = !{!2532, !2426, i64 32}
!2588 = !DILocation(line: 496, column: 19, scope: !2582)
!2589 = !DILocation(line: 494, column: 7, scope: !2582)
!2590 = !DILocation(line: 499, column: 5, scope: !2582)
!2591 = !DILocation(line: 502, column: 16, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2593, file: !3, line: 502, column: 7)
!2593 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 500, column: 10)
!2594 = !DILocation(line: 502, column: 26, scope: !2592)
!2595 = !DILocation(line: 502, column: 37, scope: !2592)
!2596 = !DILocation(line: 502, column: 14, scope: !2592)
!2597 = !DILocation(line: 502, column: 12, scope: !2592)
!2598 = !DILocation(line: 502, column: 48, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 502, column: 7)
!2600 = !DILocation(line: 502, column: 7, scope: !2592)
!2601 = !DILocation(line: 503, column: 9, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2599, file: !3, line: 502, column: 64)
!2603 = !DILocation(line: 504, column: 7, scope: !2602)
!2604 = !DILocation(line: 502, column: 55, scope: !2599)
!2605 = !DILocation(line: 502, column: 58, scope: !2599)
!2606 = !DILocation(line: 502, column: 53, scope: !2599)
!2607 = !DILocation(line: 502, column: 7, scope: !2599)
!2608 = distinct !{!2608, !2600, !2609, !2563}
!2609 = !DILocation(line: 504, column: 7, scope: !2592)
!2610 = !DILocation(line: 507, column: 9, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2512, file: !3, line: 507, column: 9)
!2612 = !DILocation(line: 507, column: 19, scope: !2611)
!2613 = !{!2532, !2417, i64 8}
!2614 = !DILocation(line: 507, column: 24, scope: !2611)
!2615 = !DILocation(line: 507, column: 9, scope: !2512)
!2616 = !DILocation(line: 512, column: 19, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 507, column: 33)
!2618 = !DILocation(line: 512, column: 22, scope: !2617)
!2619 = !DILocation(line: 512, column: 38, scope: !2617)
!2620 = !DILocation(line: 514, column: 19, scope: !2617)
!2621 = !DILocation(line: 514, column: 29, scope: !2617)
!2622 = !DILocation(line: 512, column: 7, scope: !2617)
!2623 = !DILocation(line: 517, column: 5, scope: !2617)
!2624 = !DILocation(line: 519, column: 5, scope: !2512)
!2625 = !DILocation(line: 520, column: 1, scope: !2512)
!2626 = !DISubprogram(name: "apr_brigade_write", scope: !6, file: !6, line: 828, type: !2627, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!25, !503, !2629, !20, !10, !43}
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_brigade_flush", file: !6, line: 282, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!25, !503, !20}
!2633 = !DISubprogram(name: "strlen", scope: !2634, file: !2634, line: 407, type: !2635, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2634 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "f443da8025a0b7c1498fb6c554ec788d")
!2635 = !DISubroutineType(types: !2636)
!2636 = !{!47, !10}
!2637 = !DISubprogram(name: "apr_brigade_putc", scope: !6, file: !6, line: 867, type: !2638, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!25, !503, !2629, !20, !11}
!2640 = !DISubprogram(name: "ap_fputstrs", scope: !90, file: !90, line: 587, type: !2641, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!25, !501, !503, null}
!2643 = distinct !DISubprogram(name: "dav_xml_escape_uri", scope: !3, file: !3, line: 439, type: !2644, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2646)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!10, !73, !10}
!2646 = !{!2647, !2648, !2649}
!2647 = !DILocalVariable(name: "p", arg: 1, scope: !2643, file: !3, line: 439, type: !73)
!2648 = !DILocalVariable(name: "uri", arg: 2, scope: !2643, file: !3, line: 439, type: !10)
!2649 = !DILocalVariable(name: "e_uri", scope: !2643, file: !3, line: 441, type: !10)
!2650 = !DILocation(line: 439, column: 51, scope: !2643)
!2651 = !DILocation(line: 439, column: 66, scope: !2643)
!2652 = !DILocation(line: 441, column: 5, scope: !2643)
!2653 = !DILocation(line: 441, column: 17, scope: !2643)
!2654 = !DILocation(line: 441, column: 25, scope: !2643)
!2655 = !DILocation(line: 444, column: 9, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2643, file: !3, line: 444, column: 9)
!2657 = !DILocation(line: 444, column: 33, scope: !2656)
!2658 = !DILocation(line: 444, column: 9, scope: !2643)
!2659 = !DILocation(line: 445, column: 16, scope: !2656)
!2660 = !DILocation(line: 445, column: 9, scope: !2656)
!2661 = !DILocation(line: 453, column: 33, scope: !2643)
!2662 = !DILocation(line: 453, column: 36, scope: !2643)
!2663 = !DILocation(line: 453, column: 12, scope: !2643)
!2664 = !DILocation(line: 453, column: 5, scope: !2643)
!2665 = !DILocation(line: 454, column: 1, scope: !2643)
!2666 = !DISubprogram(name: "ap_get_status_line", scope: !2667, file: !2667, line: 551, type: !2668, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2667 = !DIFile(filename: "include/http_protocol.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "7b8f2c60fabe1ef06f77b57dff1987b8")
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!10, !14}
!2670 = distinct !DISubprogram(name: "dav_begin_multistatus", scope: !3, file: !3, line: 527, type: !2671, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2673)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{null, !503, !286, !14, !450}
!2673 = !{!2674, !2675, !2676, !2677, !2678}
!2674 = !DILocalVariable(name: "bb", arg: 1, scope: !2670, file: !3, line: 527, type: !503)
!2675 = !DILocalVariable(name: "r", arg: 2, scope: !2670, file: !3, line: 528, type: !286)
!2676 = !DILocalVariable(name: "status", arg: 3, scope: !2670, file: !3, line: 528, type: !14)
!2677 = !DILocalVariable(name: "namespaces", arg: 4, scope: !2670, file: !3, line: 529, type: !450)
!2678 = !DILocalVariable(name: "i", scope: !2679, file: !3, line: 540, type: !14)
!2679 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 539, column: 29)
!2680 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 539, column: 9)
!2681 = !DILocation(line: 527, column: 61, scope: !2670)
!2682 = !DILocation(line: 528, column: 54, scope: !2670)
!2683 = !{!2426, !2426, i64 0}
!2684 = !DILocation(line: 528, column: 61, scope: !2670)
!2685 = !DILocation(line: 529, column: 61, scope: !2670)
!2686 = !DILocation(line: 532, column: 17, scope: !2670)
!2687 = !DILocation(line: 532, column: 5, scope: !2670)
!2688 = !DILocation(line: 532, column: 8, scope: !2670)
!2689 = !DILocation(line: 532, column: 15, scope: !2670)
!2690 = !{!2425, !2426, i64 104}
!2691 = !DILocation(line: 533, column: 25, scope: !2670)
!2692 = !DILocation(line: 533, column: 5, scope: !2670)
!2693 = !DILocation(line: 536, column: 5, scope: !2670)
!2694 = !DILocation(line: 539, column: 9, scope: !2680)
!2695 = !DILocation(line: 539, column: 20, scope: !2680)
!2696 = !DILocation(line: 539, column: 9, scope: !2670)
!2697 = !DILocation(line: 540, column: 8, scope: !2679)
!2698 = !DILocation(line: 540, column: 12, scope: !2679)
!2699 = !DILocation(line: 542, column: 17, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 542, column: 8)
!2701 = !DILocation(line: 542, column: 29, scope: !2700)
!2702 = !{!2703, !2426, i64 12}
!2703 = !{!"apr_array_header_t", !2417, i64 0, !2426, i64 8, !2426, i64 12, !2426, i64 16, !2417, i64 24}
!2704 = !DILocation(line: 542, column: 15, scope: !2700)
!2705 = !DILocation(line: 542, column: 13, scope: !2700)
!2706 = !DILocation(line: 542, column: 37, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 542, column: 8)
!2708 = !DILocation(line: 542, column: 8, scope: !2700)
!2709 = !DILocation(line: 543, column: 23, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2707, file: !3, line: 542, column: 43)
!2711 = !DILocation(line: 543, column: 26, scope: !2710)
!2712 = !DILocation(line: 543, column: 42, scope: !2710)
!2713 = !DILocation(line: 543, column: 68, scope: !2710)
!2714 = !DILocation(line: 544, column: 23, scope: !2710)
!2715 = !{!2703, !2417, i64 24}
!2716 = !DILocation(line: 543, column: 12, scope: !2710)
!2717 = !DILocation(line: 542, column: 8, scope: !2707)
!2718 = distinct !{!2718, !2708, !2719, !2563}
!2719 = !DILocation(line: 545, column: 8, scope: !2700)
!2720 = !DILocation(line: 546, column: 5, scope: !2680)
!2721 = !DILocation(line: 546, column: 5, scope: !2679)
!2722 = !DILocation(line: 548, column: 5, scope: !2670)
!2723 = !DILocation(line: 549, column: 1, scope: !2670)
!2724 = !DISubprogram(name: "ap_set_content_type", scope: !2667, file: !2667, line: 439, type: !2725, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{null, !286, !10}
!2727 = !DISubprogram(name: "ap_fprintf", scope: !90, file: !90, line: 599, type: !2728, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!25, !501, !503, !10, null}
!2730 = distinct !DISubprogram(name: "dav_finish_multistatus", scope: !3, file: !3, line: 552, type: !2731, scopeLine: 554, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2733)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!25, !286, !503}
!2733 = !{!2734, !2735, !2736, !2737}
!2734 = !DILocalVariable(name: "r", arg: 1, scope: !2730, file: !3, line: 552, type: !286)
!2735 = !DILocalVariable(name: "bb", arg: 2, scope: !2730, file: !3, line: 553, type: !503)
!2736 = !DILocalVariable(name: "b", scope: !2730, file: !3, line: 555, type: !27)
!2737 = !DILocalVariable(name: "ap__b", scope: !2738, file: !3, line: 561, type: !27)
!2738 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 561, column: 5)
!2739 = !DILocation(line: 552, column: 63, scope: !2730)
!2740 = !DILocation(line: 553, column: 70, scope: !2730)
!2741 = !DILocation(line: 555, column: 5, scope: !2730)
!2742 = !DILocation(line: 555, column: 17, scope: !2730)
!2743 = !DILocation(line: 557, column: 5, scope: !2730)
!2744 = !DILocation(line: 560, column: 31, scope: !2730)
!2745 = !DILocation(line: 560, column: 34, scope: !2730)
!2746 = !{!2425, !2417, i64 8}
!2747 = !DILocation(line: 560, column: 46, scope: !2730)
!2748 = !{!2749, !2417, i64 128}
!2749 = !{!"conn_rec", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2427, i64 80, !2417, i64 88, !2417, i64 96, !2417, i64 104, !2417, i64 112, !2417, i64 120, !2417, i64 128, !2417, i64 136, !2426, i64 144, !2426, i64 148, !2426, i64 152, !2426, i64 152, !2426, i64 156, !2418, i64 160, !2426, i64 164, !2417, i64 168, !2417, i64 176, !2417, i64 184, !2417, i64 192, !2426, i64 200}
!2750 = !DILocation(line: 560, column: 9, scope: !2730)
!2751 = !DILocation(line: 560, column: 7, scope: !2730)
!2752 = !DILocation(line: 561, column: 5, scope: !2730)
!2753 = !DILocation(line: 561, column: 5, scope: !2738)
!2754 = !DILocation(line: 561, column: 5, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 561, column: 5)
!2756 = !{!2757, !2417, i64 0}
!2757 = !{!"apr_bucket", !2533, i64 0, !2417, i64 16, !2427, i64 24, !2427, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56}
!2758 = !{!2759, !2417, i64 16}
!2759 = !{!"apr_bucket_brigade", !2417, i64 0, !2760, i64 8, !2417, i64 24}
!2760 = !{!"apr_bucket_list", !2417, i64 0, !2417, i64 8}
!2761 = !{!2757, !2417, i64 8}
!2762 = !DILocation(line: 564, column: 28, scope: !2730)
!2763 = !DILocation(line: 564, column: 31, scope: !2730)
!2764 = !DILocation(line: 564, column: 47, scope: !2730)
!2765 = !DILocation(line: 564, column: 12, scope: !2730)
!2766 = !DILocation(line: 565, column: 1, scope: !2730)
!2767 = !DILocation(line: 564, column: 5, scope: !2730)
!2768 = !DISubprogram(name: "apr_bucket_eos_create", scope: !6, file: !6, line: 1343, type: !2769, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!27, !58}
!2771 = !DISubprogram(name: "ap_pass_brigade", scope: !90, file: !90, line: 314, type: !499, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2772 = distinct !DISubprogram(name: "dav_send_multistatus", scope: !3, file: !3, line: 567, type: !2773, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2775)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{null, !286, !14, !826, !450}
!2775 = !{!2776, !2777, !2778, !2779, !2780, !2781}
!2776 = !DILocalVariable(name: "r", arg: 1, scope: !2772, file: !3, line: 567, type: !286)
!2777 = !DILocalVariable(name: "status", arg: 2, scope: !2772, file: !3, line: 567, type: !14)
!2778 = !DILocalVariable(name: "first", arg: 3, scope: !2772, file: !3, line: 568, type: !826)
!2779 = !DILocalVariable(name: "namespaces", arg: 4, scope: !2772, file: !3, line: 569, type: !450)
!2780 = !DILocalVariable(name: "subpool", scope: !2772, file: !3, line: 571, type: !73)
!2781 = !DILocalVariable(name: "bb", scope: !2772, file: !3, line: 572, type: !503)
!2782 = !DILocation(line: 567, column: 53, scope: !2772)
!2783 = !DILocation(line: 567, column: 60, scope: !2772)
!2784 = !DILocation(line: 568, column: 54, scope: !2772)
!2785 = !DILocation(line: 569, column: 60, scope: !2772)
!2786 = !DILocation(line: 571, column: 5, scope: !2772)
!2787 = !DILocation(line: 571, column: 17, scope: !2772)
!2788 = !DILocation(line: 572, column: 5, scope: !2772)
!2789 = !DILocation(line: 572, column: 25, scope: !2772)
!2790 = !DILocation(line: 572, column: 49, scope: !2772)
!2791 = !DILocation(line: 572, column: 52, scope: !2772)
!2792 = !{!2425, !2417, i64 0}
!2793 = !DILocation(line: 573, column: 49, scope: !2772)
!2794 = !DILocation(line: 573, column: 52, scope: !2772)
!2795 = !DILocation(line: 573, column: 64, scope: !2772)
!2796 = !DILocation(line: 572, column: 30, scope: !2772)
!2797 = !DILocation(line: 575, column: 27, scope: !2772)
!2798 = !DILocation(line: 575, column: 31, scope: !2772)
!2799 = !DILocation(line: 575, column: 34, scope: !2772)
!2800 = !DILocation(line: 575, column: 42, scope: !2772)
!2801 = !DILocation(line: 575, column: 5, scope: !2772)
!2802 = !DILocation(line: 577, column: 5, scope: !2772)
!2803 = !DILocation(line: 578, column: 18, scope: !2772)
!2804 = !DILocation(line: 578, column: 5, scope: !2772)
!2805 = !DILocation(line: 580, column: 5, scope: !2772)
!2806 = !DILocation(line: 580, column: 12, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 580, column: 5)
!2808 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 580, column: 5)
!2809 = !DILocation(line: 580, column: 18, scope: !2807)
!2810 = !DILocation(line: 580, column: 5, scope: !2808)
!2811 = !DILocation(line: 581, column: 22, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 580, column: 48)
!2813 = !DILocation(line: 581, column: 7, scope: !2812)
!2814 = !DILocation(line: 582, column: 29, scope: !2812)
!2815 = !DILocation(line: 582, column: 36, scope: !2812)
!2816 = !DILocation(line: 582, column: 40, scope: !2812)
!2817 = !DILocation(line: 582, column: 43, scope: !2812)
!2818 = !DILocation(line: 582, column: 7, scope: !2812)
!2819 = !DILocation(line: 583, column: 5, scope: !2812)
!2820 = !DILocation(line: 580, column: 35, scope: !2807)
!2821 = !DILocation(line: 580, column: 42, scope: !2807)
!2822 = !{!2532, !2417, i64 40}
!2823 = !DILocation(line: 580, column: 33, scope: !2807)
!2824 = !DILocation(line: 580, column: 5, scope: !2807)
!2825 = distinct !{!2825, !2810, !2826, !2563}
!2826 = !DILocation(line: 583, column: 5, scope: !2808)
!2827 = !DILocation(line: 584, column: 22, scope: !2772)
!2828 = !DILocation(line: 584, column: 5, scope: !2772)
!2829 = !DILocation(line: 586, column: 28, scope: !2772)
!2830 = !DILocation(line: 586, column: 31, scope: !2772)
!2831 = !DILocation(line: 586, column: 5, scope: !2772)
!2832 = !DILocation(line: 587, column: 1, scope: !2772)
!2833 = !DISubprogram(name: "apr_brigade_create", scope: !6, file: !6, line: 660, type: !2834, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!503, !73, !58}
!2836 = !DISubprogram(name: "apr_pool_create_ex", scope: !75, file: !75, line: 196, type: !2837, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!25, !2839, !73, !2840, !2844}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_abortfunc_t", file: !75, line: 148, baseType: !2841)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!14, !14}
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_allocator_t", file: !2846, line: 41, baseType: !2847)
!2846 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_allocator.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "de20c77d7215f8825e861a81b6c1c526")
!2847 = !DICompositeType(tag: DW_TAG_structure_type, name: "apr_allocator_t", file: !2846, line: 41, flags: DIFlagFwdDecl)
!2848 = !DISubprogram(name: "apr_pool_tag", scope: !75, file: !75, line: 536, type: !2849, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{null, !73, !10}
!2851 = !DISubprogram(name: "apr_pool_clear", scope: !75, file: !75, line: 365, type: !2401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2852 = !DISubprogram(name: "apr_pool_destroy", scope: !75, file: !75, line: 395, type: !2401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2853 = distinct !DISubprogram(name: "dav_handle_err", scope: !3, file: !3, line: 623, type: !2854, scopeLine: 625, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2856)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!14, !286, !272, !826}
!2856 = !{!2857, !2858, !2859, !2860}
!2857 = !DILocalVariable(name: "r", arg: 1, scope: !2853, file: !3, line: 623, type: !286)
!2858 = !DILocalVariable(name: "err", arg: 2, scope: !2853, file: !3, line: 623, type: !272)
!2859 = !DILocalVariable(name: "response", arg: 3, scope: !2853, file: !3, line: 624, type: !826)
!2860 = !DILocalVariable(name: "stackerr", scope: !2861, file: !3, line: 635, type: !272)
!2861 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 634, column: 27)
!2862 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 634, column: 9)
!2863 = !DILocation(line: 623, column: 46, scope: !2853)
!2864 = !DILocation(line: 623, column: 60, scope: !2853)
!2865 = !DILocation(line: 624, column: 47, scope: !2853)
!2866 = !DILocation(line: 627, column: 17, scope: !2853)
!2867 = !DILocation(line: 627, column: 20, scope: !2853)
!2868 = !DILocation(line: 627, column: 5, scope: !2853)
!2869 = !DILocation(line: 629, column: 10, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 629, column: 9)
!2871 = !{!2872, !2426, i64 0}
!2872 = !{!"dav_error", !2426, i64 0, !2426, i64 4, !2417, i64 8, !2426, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48}
!2873 = !DILocation(line: 629, column: 9, scope: !2853)
!2874 = !DILocation(line: 631, column: 9, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 629, column: 50)
!2876 = !DILocation(line: 634, column: 9, scope: !2862)
!2877 = !DILocation(line: 634, column: 18, scope: !2862)
!2878 = !DILocation(line: 634, column: 9, scope: !2853)
!2879 = !DILocation(line: 635, column: 9, scope: !2861)
!2880 = !DILocation(line: 635, column: 20, scope: !2861)
!2881 = !DILocation(line: 635, column: 31, scope: !2861)
!2882 = !DILocation(line: 638, column: 24, scope: !2861)
!2883 = !DILocation(line: 638, column: 27, scope: !2861)
!2884 = !{!2425, !2417, i64 264}
!2885 = !DILocation(line: 638, column: 9, scope: !2861)
!2886 = !DILocation(line: 643, column: 9, scope: !2861)
!2887 = !DILocation(line: 643, column: 16, scope: !2861)
!2888 = !DILocation(line: 643, column: 25, scope: !2861)
!2889 = !DILocation(line: 643, column: 33, scope: !2861)
!2890 = !DILocation(line: 643, column: 36, scope: !2861)
!2891 = !DILocation(line: 643, column: 46, scope: !2861)
!2892 = !{!2872, !2417, i64 32}
!2893 = !DILocation(line: 643, column: 54, scope: !2861)
!2894 = !DILocation(line: 0, scope: !2861)
!2895 = !DILocation(line: 644, column: 24, scope: !2861)
!2896 = !DILocation(line: 644, column: 34, scope: !2861)
!2897 = !{!2872, !2417, i64 40}
!2898 = !DILocation(line: 644, column: 22, scope: !2861)
!2899 = distinct !{!2899, !2886, !2896, !2563}
!2900 = !DILocation(line: 646, column: 13, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 646, column: 13)
!2902 = !DILocation(line: 646, column: 22, scope: !2901)
!2903 = !DILocation(line: 646, column: 30, scope: !2901)
!2904 = !DILocation(line: 646, column: 33, scope: !2901)
!2905 = !DILocation(line: 646, column: 43, scope: !2901)
!2906 = !DILocation(line: 646, column: 51, scope: !2901)
!2907 = !DILocation(line: 646, column: 13, scope: !2861)
!2908 = !DILocation(line: 647, column: 43, scope: !2901)
!2909 = !DILocation(line: 647, column: 46, scope: !2901)
!2910 = !DILocation(line: 647, column: 20, scope: !2901)
!2911 = !DILocation(line: 647, column: 13, scope: !2901)
!2912 = !DILocation(line: 649, column: 16, scope: !2861)
!2913 = !DILocation(line: 649, column: 21, scope: !2861)
!2914 = !DILocation(line: 649, column: 9, scope: !2861)
!2915 = !DILocation(line: 650, column: 5, scope: !2862)
!2916 = !DILocation(line: 653, column: 26, scope: !2853)
!2917 = !DILocation(line: 653, column: 29, scope: !2853)
!2918 = !DILocation(line: 653, column: 34, scope: !2853)
!2919 = !DILocation(line: 653, column: 42, scope: !2853)
!2920 = !DILocation(line: 653, column: 5, scope: !2853)
!2921 = !DILocation(line: 654, column: 5, scope: !2853)
!2922 = !DILocation(line: 655, column: 1, scope: !2853)
!2923 = distinct !DISubprogram(name: "dav_log_err", scope: !3, file: !3, line: 594, type: !2924, scopeLine: 595, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2926)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{null, !286, !272, !14}
!2926 = !{!2927, !2928, !2929, !2930}
!2927 = !DILocalVariable(name: "r", arg: 1, scope: !2923, file: !3, line: 594, type: !286)
!2928 = !DILocalVariable(name: "err", arg: 2, scope: !2923, file: !3, line: 594, type: !272)
!2929 = !DILocalVariable(name: "level", arg: 3, scope: !2923, file: !3, line: 594, type: !14)
!2930 = !DILocalVariable(name: "errscan", scope: !2923, file: !3, line: 596, type: !272)
!2931 = !DILocation(line: 594, column: 38, scope: !2923)
!2932 = !DILocation(line: 594, column: 52, scope: !2923)
!2933 = !DILocation(line: 594, column: 61, scope: !2923)
!2934 = !DILocation(line: 596, column: 5, scope: !2923)
!2935 = !DILocation(line: 596, column: 16, scope: !2923)
!2936 = !DILocation(line: 600, column: 20, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 600, column: 5)
!2938 = !DILocation(line: 600, column: 18, scope: !2937)
!2939 = !DILocation(line: 600, column: 10, scope: !2937)
!2940 = !DILocation(line: 600, column: 25, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2937, file: !3, line: 600, column: 5)
!2942 = !DILocation(line: 600, column: 33, scope: !2941)
!2943 = !DILocation(line: 600, column: 5, scope: !2937)
!2944 = !DILocation(line: 601, column: 13, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 601, column: 13)
!2946 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 600, column: 67)
!2947 = !DILocation(line: 601, column: 22, scope: !2945)
!2948 = !{!2872, !2417, i64 8}
!2949 = !DILocation(line: 601, column: 27, scope: !2945)
!2950 = !DILocation(line: 601, column: 13, scope: !2946)
!2951 = !DILocation(line: 602, column: 13, scope: !2945)
!2952 = !DILocation(line: 605, column: 9, scope: !2946)
!2953 = !DILocation(line: 605, column: 9, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 605, column: 9)
!2955 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 605, column: 9)
!2956 = !{!2425, !2417, i64 400}
!2957 = !{!2749, !2417, i64 168}
!2958 = !{!2425, !2417, i64 16}
!2959 = !{!2960, !2417, i64 0}
!2960 = !{!"ap_logconf", !2417, i64 0, !2426, i64 8}
!2961 = !{!2418, !2418, i64 0}
!2962 = !{!2960, !2426, i64 8}
!2963 = !DILocation(line: 605, column: 9, scope: !2955)
!2964 = !{!2872, !2426, i64 16}
!2965 = !{!2872, !2426, i64 4}
!2966 = !DILocation(line: 607, column: 5, scope: !2946)
!2967 = !DILocation(line: 600, column: 52, scope: !2941)
!2968 = !DILocation(line: 600, column: 61, scope: !2941)
!2969 = !DILocation(line: 600, column: 50, scope: !2941)
!2970 = !DILocation(line: 600, column: 5, scope: !2941)
!2971 = distinct !{!2971, !2943, !2972, !2563}
!2972 = !DILocation(line: 607, column: 5, scope: !2937)
!2973 = !DILocation(line: 608, column: 1, scope: !2923)
!2974 = !DISubprogram(name: "apr_table_setn", scope: !452, file: !452, line: 304, type: !2975, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{null, !479, !10, !10}
!2977 = distinct !DISubprogram(name: "dav_error_response_tag", scope: !3, file: !3, line: 370, type: !2978, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2980)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{!14, !286, !272}
!2980 = !{!2981, !2982}
!2981 = !DILocalVariable(name: "r", arg: 1, scope: !2977, file: !3, line: 370, type: !286)
!2982 = !DILocalVariable(name: "err", arg: 2, scope: !2977, file: !3, line: 371, type: !272)
!2983 = !DILocation(line: 370, column: 48, scope: !2977)
!2984 = !DILocation(line: 371, column: 46, scope: !2977)
!2985 = !DILocation(line: 373, column: 17, scope: !2977)
!2986 = !DILocation(line: 373, column: 22, scope: !2977)
!2987 = !DILocation(line: 373, column: 5, scope: !2977)
!2988 = !DILocation(line: 373, column: 8, scope: !2977)
!2989 = !DILocation(line: 373, column: 15, scope: !2977)
!2990 = !DILocation(line: 375, column: 25, scope: !2977)
!2991 = !DILocation(line: 375, column: 5, scope: !2977)
!2992 = !DILocation(line: 378, column: 43, scope: !2977)
!2993 = !DILocation(line: 377, column: 5, scope: !2977)
!2994 = !DILocation(line: 380, column: 9, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 380, column: 9)
!2996 = !DILocation(line: 380, column: 14, scope: !2995)
!2997 = !DILocation(line: 380, column: 19, scope: !2995)
!2998 = !DILocation(line: 380, column: 9, scope: !2977)
!2999 = !DILocation(line: 382, column: 62, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 380, column: 28)
!3001 = !DILocation(line: 382, column: 9, scope: !3000)
!3002 = !DILocation(line: 383, column: 5, scope: !3000)
!3003 = !DILocation(line: 385, column: 9, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 385, column: 9)
!3005 = !DILocation(line: 385, column: 14, scope: !3004)
!3006 = !{!2872, !2417, i64 48}
!3007 = !DILocation(line: 385, column: 9, scope: !2977)
!3008 = !DILocation(line: 386, column: 13, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 386, column: 13)
!3010 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 385, column: 25)
!3011 = !DILocation(line: 386, column: 18, scope: !3009)
!3012 = !{!2872, !2417, i64 24}
!3013 = !DILocation(line: 386, column: 28, scope: !3009)
!3014 = !DILocation(line: 386, column: 13, scope: !3010)
!3015 = !DILocation(line: 387, column: 24, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 386, column: 37)
!3017 = !DILocation(line: 390, column: 21, scope: !3016)
!3018 = !DILocation(line: 390, column: 26, scope: !3016)
!3019 = !DILocation(line: 391, column: 21, scope: !3016)
!3020 = !DILocation(line: 391, column: 26, scope: !3016)
!3021 = !DILocation(line: 391, column: 35, scope: !3016)
!3022 = !DILocation(line: 391, column: 40, scope: !3016)
!3023 = !DILocation(line: 391, column: 51, scope: !3016)
!3024 = !DILocation(line: 391, column: 56, scope: !3016)
!3025 = !DILocation(line: 387, column: 13, scope: !3016)
!3026 = !DILocation(line: 392, column: 9, scope: !3016)
!3027 = !DILocation(line: 394, column: 24, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 393, column: 14)
!3029 = !DILocation(line: 397, column: 21, scope: !3028)
!3030 = !DILocation(line: 397, column: 26, scope: !3028)
!3031 = !DILocation(line: 397, column: 35, scope: !3028)
!3032 = !DILocation(line: 397, column: 40, scope: !3028)
!3033 = !DILocation(line: 397, column: 51, scope: !3028)
!3034 = !DILocation(line: 397, column: 56, scope: !3028)
!3035 = !DILocation(line: 394, column: 13, scope: !3028)
!3036 = !DILocation(line: 399, column: 5, scope: !3010)
!3037 = !DILocation(line: 401, column: 13, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 401, column: 13)
!3039 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 400, column: 10)
!3040 = !DILocation(line: 401, column: 18, scope: !3038)
!3041 = !DILocation(line: 401, column: 28, scope: !3038)
!3042 = !DILocation(line: 401, column: 13, scope: !3039)
!3043 = !DILocation(line: 402, column: 24, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 401, column: 37)
!3045 = !DILocation(line: 405, column: 21, scope: !3044)
!3046 = !DILocation(line: 405, column: 26, scope: !3044)
!3047 = !DILocation(line: 405, column: 37, scope: !3044)
!3048 = !DILocation(line: 405, column: 42, scope: !3044)
!3049 = !DILocation(line: 402, column: 13, scope: !3044)
!3050 = !DILocation(line: 406, column: 9, scope: !3044)
!3051 = !DILocation(line: 408, column: 24, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 407, column: 14)
!3053 = !DILocation(line: 410, column: 41, scope: !3052)
!3054 = !DILocation(line: 410, column: 46, scope: !3052)
!3055 = !DILocation(line: 408, column: 13, scope: !3052)
!3056 = !DILocation(line: 415, column: 9, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 415, column: 9)
!3058 = !DILocation(line: 415, column: 14, scope: !3057)
!3059 = !DILocation(line: 415, column: 19, scope: !3057)
!3060 = !DILocation(line: 415, column: 9, scope: !2977)
!3061 = !DILocation(line: 416, column: 20, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 415, column: 28)
!3063 = !DILocation(line: 420, column: 20, scope: !3062)
!3064 = !DILocation(line: 420, column: 25, scope: !3062)
!3065 = !DILocation(line: 421, column: 41, scope: !3062)
!3066 = !DILocation(line: 421, column: 44, scope: !3062)
!3067 = !DILocation(line: 421, column: 50, scope: !3062)
!3068 = !DILocation(line: 421, column: 55, scope: !3062)
!3069 = !DILocation(line: 421, column: 20, scope: !3062)
!3070 = !DILocation(line: 416, column: 9, scope: !3062)
!3071 = !DILocation(line: 422, column: 5, scope: !3062)
!3072 = !DILocation(line: 424, column: 37, scope: !2977)
!3073 = !DILocation(line: 424, column: 5, scope: !2977)
!3074 = !DILocation(line: 430, column: 5, scope: !2977)
!3075 = distinct !DISubprogram(name: "dav_get_depth", scope: !3, file: !3, line: 690, type: !3076, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3078)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!14, !286, !14}
!3078 = !{!3079, !3080, !3081}
!3079 = !DILocalVariable(name: "r", arg: 1, scope: !3075, file: !3, line: 690, type: !286)
!3080 = !DILocalVariable(name: "def_depth", arg: 2, scope: !3075, file: !3, line: 690, type: !14)
!3081 = !DILocalVariable(name: "depth", scope: !3075, file: !3, line: 692, type: !10)
!3082 = !DILocation(line: 690, column: 45, scope: !3075)
!3083 = !DILocation(line: 690, column: 52, scope: !3075)
!3084 = !DILocation(line: 692, column: 5, scope: !3075)
!3085 = !DILocation(line: 692, column: 17, scope: !3075)
!3086 = !DILocation(line: 692, column: 39, scope: !3075)
!3087 = !DILocation(line: 692, column: 42, scope: !3075)
!3088 = !{!2425, !2417, i64 232}
!3089 = !DILocation(line: 692, column: 25, scope: !3075)
!3090 = !DILocation(line: 694, column: 9, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 694, column: 9)
!3092 = !DILocation(line: 694, column: 15, scope: !3091)
!3093 = !DILocation(line: 694, column: 9, scope: !3075)
!3094 = !DILocation(line: 695, column: 16, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 694, column: 24)
!3096 = !DILocation(line: 695, column: 9, scope: !3095)
!3097 = !DILocation(line: 698, column: 25, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 698, column: 9)
!3099 = !DILocation(line: 698, column: 9, scope: !3098)
!3100 = !DILocation(line: 698, column: 44, scope: !3098)
!3101 = !DILocation(line: 698, column: 9, scope: !3075)
!3102 = !DILocation(line: 699, column: 9, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 698, column: 50)
!3104 = !DILocation(line: 701, column: 21, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 701, column: 14)
!3106 = !DILocation(line: 701, column: 14, scope: !3105)
!3107 = !DILocation(line: 701, column: 33, scope: !3105)
!3108 = !DILocation(line: 701, column: 14, scope: !3098)
!3109 = !DILocation(line: 702, column: 9, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 701, column: 39)
!3111 = !DILocation(line: 704, column: 21, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 704, column: 14)
!3113 = !DILocation(line: 704, column: 14, scope: !3112)
!3114 = !DILocation(line: 704, column: 33, scope: !3112)
!3115 = !DILocation(line: 704, column: 14, scope: !3105)
!3116 = !DILocation(line: 705, column: 9, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 704, column: 39)
!3118 = !DILocation(line: 710, column: 5, scope: !3075)
!3119 = !DILocation(line: 710, column: 5, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 710, column: 5)
!3121 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 710, column: 5)
!3122 = !DILocation(line: 710, column: 5, scope: !3121)
!3123 = !DILocation(line: 712, column: 5, scope: !3075)
!3124 = !DILocation(line: 713, column: 1, scope: !3075)
!3125 = !DISubprogram(name: "apr_table_get", scope: !452, file: !452, line: 268, type: !3126, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!10, !3128, !10}
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!3130 = !DISubprogram(name: "ap_cstr_casecmp", scope: !107, file: !107, line: 2548, type: !3131, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!14, !10, !10}
!3133 = !DISubprogram(name: "strcmp", scope: !2634, file: !2634, line: 156, type: !3131, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3134 = !DISubprogram(name: "ap_log_rerror_", scope: !3135, file: !3135, line: 456, type: !3136, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3135 = !DIFile(filename: "include/http_log.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "ce7bde9ead508f1c34c81b1931b44b16")
!3136 = !DISubroutineType(types: !3137)
!3137 = !{null, !10, !14, !14, !14, !25, !3138, !10, null}
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!3140 = distinct !DISubprogram(name: "dav_get_resource", scope: !3, file: !3, line: 747, type: !3141, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3143)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!272, !286, !14, !14, !775}
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150}
!3144 = !DILocalVariable(name: "r", arg: 1, scope: !3140, file: !3, line: 747, type: !286)
!3145 = !DILocalVariable(name: "label_allowed", arg: 2, scope: !3140, file: !3, line: 747, type: !14)
!3146 = !DILocalVariable(name: "use_checked_in", arg: 3, scope: !3140, file: !3, line: 748, type: !14)
!3147 = !DILocalVariable(name: "res_p", arg: 4, scope: !3140, file: !3, line: 748, type: !775)
!3148 = !DILocalVariable(name: "conf", scope: !3140, file: !3, line: 750, type: !1108)
!3149 = !DILocalVariable(name: "label", scope: !3140, file: !3, line: 751, type: !10)
!3150 = !DILocalVariable(name: "err", scope: !3140, file: !3, line: 752, type: !272)
!3151 = !DILocation(line: 747, column: 56, scope: !3140)
!3152 = !DILocation(line: 747, column: 63, scope: !3140)
!3153 = !DILocation(line: 748, column: 40, scope: !3140)
!3154 = !DILocation(line: 748, column: 71, scope: !3140)
!3155 = !DILocation(line: 750, column: 5, scope: !3140)
!3156 = !DILocation(line: 750, column: 19, scope: !3140)
!3157 = !DILocation(line: 751, column: 5, scope: !3140)
!3158 = !DILocation(line: 751, column: 17, scope: !3140)
!3159 = !DILocation(line: 752, column: 5, scope: !3140)
!3160 = !DILocation(line: 752, column: 16, scope: !3140)
!3161 = !DILocation(line: 755, column: 9, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 755, column: 9)
!3163 = !DILocation(line: 755, column: 9, scope: !3140)
!3164 = !DILocation(line: 756, column: 31, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 755, column: 24)
!3166 = !DILocation(line: 756, column: 34, scope: !3165)
!3167 = !DILocation(line: 756, column: 17, scope: !3165)
!3168 = !DILocation(line: 756, column: 15, scope: !3165)
!3169 = !DILocation(line: 757, column: 5, scope: !3165)
!3170 = !DILocation(line: 759, column: 12, scope: !3140)
!3171 = !DILocation(line: 759, column: 10, scope: !3140)
!3172 = !DILocation(line: 761, column: 9, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 761, column: 9)
!3174 = !DILocation(line: 761, column: 15, scope: !3173)
!3175 = !DILocation(line: 761, column: 24, scope: !3173)
!3176 = !DILocation(line: 761, column: 9, scope: !3140)
!3177 = !DILocation(line: 762, column: 30, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 761, column: 33)
!3179 = !DILocation(line: 762, column: 33, scope: !3178)
!3180 = !DILocation(line: 763, column: 43, scope: !3178)
!3181 = !DILocation(line: 763, column: 46, scope: !3178)
!3182 = !DILocation(line: 765, column: 30, scope: !3178)
!3183 = !{!2425, !2417, i64 336}
!3184 = !DILocation(line: 763, column: 30, scope: !3178)
!3185 = !DILocation(line: 762, column: 16, scope: !3178)
!3186 = !DILocation(line: 762, column: 9, scope: !3178)
!3187 = !DILocation(line: 769, column: 13, scope: !3140)
!3188 = !DILocation(line: 769, column: 19, scope: !3140)
!3189 = !DILocation(line: 769, column: 29, scope: !3140)
!3190 = !{!2466, !2417, i64 0}
!3191 = !DILocation(line: 769, column: 36, scope: !3140)
!3192 = !{!3193, !2417, i64 8}
!3193 = !{!"dav_hooks_repository", !2426, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2417, i64 80, !2417, i64 88, !2417, i64 96, !2417, i64 104, !2417, i64 112, !2417, i64 120, !2417, i64 128, !2417, i64 136, !2417, i64 144, !2417, i64 152}
!3194 = !DILocation(line: 769, column: 50, scope: !3140)
!3195 = !DILocation(line: 769, column: 53, scope: !3140)
!3196 = !DILocation(line: 769, column: 59, scope: !3140)
!3197 = !{!2437, !2417, i64 16}
!3198 = !DILocation(line: 770, column: 50, scope: !3140)
!3199 = !DILocation(line: 770, column: 57, scope: !3140)
!3200 = !DILocation(line: 771, column: 50, scope: !3140)
!3201 = !DILocation(line: 769, column: 11, scope: !3140)
!3202 = !DILocation(line: 769, column: 9, scope: !3140)
!3203 = !DILocation(line: 772, column: 9, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 772, column: 9)
!3205 = !DILocation(line: 772, column: 13, scope: !3204)
!3206 = !DILocation(line: 772, column: 9, scope: !3140)
!3207 = !DILocation(line: 773, column: 30, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 772, column: 22)
!3209 = !DILocation(line: 773, column: 33, scope: !3208)
!3210 = !DILocation(line: 773, column: 39, scope: !3208)
!3211 = !DILocation(line: 773, column: 44, scope: !3208)
!3212 = !DILocation(line: 774, column: 71, scope: !3208)
!3213 = !DILocation(line: 773, column: 15, scope: !3208)
!3214 = !DILocation(line: 773, column: 13, scope: !3208)
!3215 = !DILocation(line: 775, column: 16, scope: !3208)
!3216 = !DILocation(line: 775, column: 9, scope: !3208)
!3217 = !DILocation(line: 779, column: 10, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 779, column: 9)
!3219 = !DILocation(line: 779, column: 9, scope: !3218)
!3220 = !DILocation(line: 779, column: 16, scope: !3218)
!3221 = !DILocation(line: 779, column: 9, scope: !3140)
!3222 = !DILocation(line: 781, column: 30, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 779, column: 25)
!3224 = !DILocation(line: 781, column: 33, scope: !3223)
!3225 = !DILocation(line: 782, column: 43, scope: !3223)
!3226 = !DILocation(line: 782, column: 46, scope: !3223)
!3227 = !DILocation(line: 785, column: 43, scope: !3223)
!3228 = !DILocation(line: 782, column: 30, scope: !3223)
!3229 = !DILocation(line: 781, column: 16, scope: !3223)
!3230 = !DILocation(line: 781, column: 9, scope: !3223)
!3231 = !DILocation(line: 791, column: 25, scope: !3140)
!3232 = !DILocation(line: 791, column: 28, scope: !3140)
!3233 = !DILocation(line: 791, column: 32, scope: !3140)
!3234 = !DILocation(line: 791, column: 31, scope: !3140)
!3235 = !DILocation(line: 791, column: 5, scope: !3140)
!3236 = !DILocation(line: 793, column: 5, scope: !3140)
!3237 = !DILocation(line: 794, column: 1, scope: !3140)
!3238 = !DISubprogram(name: "dav_new_error", scope: !141, file: !141, line: 141, type: !3239, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!272, !73, !14, !14, !25, !10}
!3241 = !DISubprogram(name: "apr_psprintf", scope: !3242, file: !3242, line: 182, type: !3243, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3242 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-1.7.4-xap43yqog3cx4varfxeol7h4nsfslylk/include/apr-1/apr_strings.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "f876519c65276b07631e818685d4ffb3")
!3243 = !DISubroutineType(types: !3244)
!3244 = !{!216, !73, !10, null}
!3245 = !DISubprogram(name: "ap_escape_html2", scope: !107, file: !107, line: 1861, type: !3246, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!216, !73, !10, !14}
!3248 = !DISubprogram(name: "dav_push_error", scope: !141, file: !141, line: 170, type: !3249, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!272, !73, !14, !14, !10, !272}
!3251 = !DISubprogram(name: "dav_add_vary_header", scope: !141, file: !141, line: 2157, type: !3252, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{null, !286, !286, !747}
!3254 = distinct !DISubprogram(name: "dav_open_lockdb", scope: !3, file: !3, line: 796, type: !3255, scopeLine: 799, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3257)
!3255 = !DISubroutineType(types: !3256)
!3256 = !{!272, !286, !14, !911}
!3257 = !{!3258, !3259, !3260, !3261}
!3258 = !DILocalVariable(name: "r", arg: 1, scope: !3254, file: !3, line: 796, type: !286)
!3259 = !DILocalVariable(name: "ro", arg: 2, scope: !3254, file: !3, line: 797, type: !14)
!3260 = !DILocalVariable(name: "lockdb", arg: 3, scope: !3254, file: !3, line: 798, type: !911)
!3261 = !DILocalVariable(name: "hooks", scope: !3254, file: !3, line: 800, type: !880)
!3262 = !DILocation(line: 796, column: 55, scope: !3254)
!3263 = !DILocation(line: 797, column: 46, scope: !3254)
!3264 = !DILocation(line: 798, column: 55, scope: !3254)
!3265 = !DILocation(line: 800, column: 5, scope: !3254)
!3266 = !DILocation(line: 800, column: 28, scope: !3254)
!3267 = !DILocation(line: 800, column: 36, scope: !3254)
!3268 = !DILocation(line: 802, column: 9, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 802, column: 9)
!3270 = !DILocation(line: 802, column: 15, scope: !3269)
!3271 = !DILocation(line: 802, column: 9, scope: !3254)
!3272 = !DILocation(line: 803, column: 10, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 802, column: 24)
!3274 = !DILocation(line: 803, column: 17, scope: !3273)
!3275 = !DILocation(line: 804, column: 9, scope: !3273)
!3276 = !DILocation(line: 808, column: 14, scope: !3254)
!3277 = !DILocation(line: 808, column: 21, scope: !3254)
!3278 = !{!3279, !2417, i64 32}
!3279 = !{!"dav_hooks_locks", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2417, i64 80, !2417, i64 88, !2417, i64 96, !2417, i64 104, !2417, i64 112, !2417, i64 120}
!3280 = !DILocation(line: 808, column: 34, scope: !3254)
!3281 = !DILocation(line: 808, column: 37, scope: !3254)
!3282 = !DILocation(line: 808, column: 44, scope: !3254)
!3283 = !DILocation(line: 808, column: 12, scope: !3254)
!3284 = !DILocation(line: 808, column: 5, scope: !3254)
!3285 = !DILocation(line: 809, column: 1, scope: !3254)
!3286 = distinct !DISubprogram(name: "dav_close_lockdb", scope: !3, file: !3, line: 811, type: !914, scopeLine: 812, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3287)
!3287 = !{!3288}
!3288 = !DILocalVariable(name: "lockdb", arg: 1, scope: !3286, file: !3, line: 811, type: !875)
!3289 = !DILocation(line: 811, column: 48, scope: !3286)
!3290 = !DILocation(line: 813, column: 6, scope: !3286)
!3291 = !DILocation(line: 813, column: 14, scope: !3286)
!3292 = !{!3293, !2417, i64 0}
!3293 = !{!"", !2417, i64 0, !2426, i64 8, !2417, i64 16}
!3294 = !DILocation(line: 813, column: 21, scope: !3286)
!3295 = !{!3279, !2417, i64 40}
!3296 = !DILocation(line: 813, column: 35, scope: !3286)
!3297 = !DILocation(line: 813, column: 5, scope: !3286)
!3298 = !DILocation(line: 814, column: 1, scope: !3286)
!3299 = distinct !DISubprogram(name: "dav_add_response", scope: !3, file: !3, line: 1215, type: !3300, scopeLine: 1217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3303)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{null, !863, !14, !3302}
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!3303 = !{!3304, !3305, !3306, !3307}
!3304 = !DILocalVariable(name: "wres", arg: 1, scope: !3299, file: !3, line: 1215, type: !863)
!3305 = !DILocalVariable(name: "status", arg: 2, scope: !3299, file: !3, line: 1216, type: !14)
!3306 = !DILocalVariable(name: "propstats", arg: 3, scope: !3299, file: !3, line: 1216, type: !3302)
!3307 = !DILocalVariable(name: "resp", scope: !3299, file: !3, line: 1218, type: !826)
!3308 = !DILocation(line: 1215, column: 55, scope: !3299)
!3309 = !DILocation(line: 1216, column: 40, scope: !3299)
!3310 = !DILocation(line: 1216, column: 70, scope: !3299)
!3311 = !DILocation(line: 1218, column: 5, scope: !3299)
!3312 = !DILocation(line: 1218, column: 19, scope: !3299)
!3313 = !DILocation(line: 1221, column: 12, scope: !3299)
!3314 = !{!3315, !2417, i64 8}
!3315 = !{!"", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24}
!3316 = !DILocation(line: 1221, column: 10, scope: !3299)
!3317 = !DILocation(line: 1222, column: 30, scope: !3299)
!3318 = !DILocation(line: 1222, column: 36, scope: !3299)
!3319 = !DILocation(line: 1222, column: 42, scope: !3299)
!3320 = !DILocation(line: 1222, column: 48, scope: !3299)
!3321 = !{!3315, !2417, i64 16}
!3322 = !DILocation(line: 1222, column: 58, scope: !3299)
!3323 = !{!3324, !2417, i64 24}
!3324 = !{!"dav_resource", !2418, i64 0, !2426, i64 4, !2426, i64 8, !2426, i64 12, !2426, i64 16, !2426, i64 20, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48}
!3325 = !DILocation(line: 1222, column: 18, scope: !3299)
!3326 = !DILocation(line: 1222, column: 5, scope: !3299)
!3327 = !DILocation(line: 1222, column: 11, scope: !3299)
!3328 = !DILocation(line: 1222, column: 16, scope: !3299)
!3329 = !DILocation(line: 1223, column: 20, scope: !3299)
!3330 = !DILocation(line: 1223, column: 5, scope: !3299)
!3331 = !DILocation(line: 1223, column: 11, scope: !3299)
!3332 = !DILocation(line: 1223, column: 18, scope: !3299)
!3333 = !DILocation(line: 1224, column: 9, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 1224, column: 9)
!3335 = !DILocation(line: 1224, column: 9, scope: !3299)
!3336 = !DILocation(line: 1225, column: 9, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 1224, column: 20)
!3338 = !DILocation(line: 1225, column: 15, scope: !3337)
!3339 = !DILocation(line: 1225, column: 29, scope: !3337)
!3340 = !DILocation(line: 1225, column: 28, scope: !3337)
!3341 = !{i64 0, i64 8, !2416, i64 8, i64 8, !2416}
!3342 = !DILocation(line: 1226, column: 5, scope: !3337)
!3343 = !DILocation(line: 1228, column: 18, scope: !3299)
!3344 = !DILocation(line: 1228, column: 24, scope: !3299)
!3345 = !{!3315, !2417, i64 24}
!3346 = !DILocation(line: 1228, column: 5, scope: !3299)
!3347 = !DILocation(line: 1228, column: 11, scope: !3299)
!3348 = !DILocation(line: 1228, column: 16, scope: !3299)
!3349 = !DILocation(line: 1229, column: 22, scope: !3299)
!3350 = !DILocation(line: 1229, column: 5, scope: !3299)
!3351 = !DILocation(line: 1229, column: 11, scope: !3299)
!3352 = !DILocation(line: 1229, column: 20, scope: !3299)
!3353 = !DILocation(line: 1230, column: 1, scope: !3299)
!3354 = !DISubprogram(name: "apr_palloc", scope: !75, file: !75, line: 430, type: !3355, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!20, !73, !43}
!3357 = !DISubprogram(name: "apr_pstrdup", scope: !3242, file: !3242, line: 95, type: !3358, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{!216, !73, !10}
!3360 = distinct !DISubprogram(name: "dav_failed_proppatch", scope: !3, file: !3, line: 2254, type: !3361, scopeLine: 2256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3363)
!3361 = !DISubroutineType(types: !3362)
!3362 = !{!239, !73, !450}
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371}
!3364 = !DILocalVariable(name: "p", arg: 1, scope: !3360, file: !3, line: 2254, type: !73)
!3365 = !DILocalVariable(name: "prop_ctx", arg: 2, scope: !3360, file: !3, line: 2255, type: !450)
!3366 = !DILocalVariable(name: "hdr", scope: !3360, file: !3, line: 2257, type: !235)
!3367 = !DILocalVariable(name: "i", scope: !3360, file: !3, line: 2258, type: !14)
!3368 = !DILocalVariable(name: "ctx", scope: !3360, file: !3, line: 2259, type: !217)
!3369 = !DILocalVariable(name: "err424_set", scope: !3360, file: !3, line: 2260, type: !272)
!3370 = !DILocalVariable(name: "err424_delete", scope: !3360, file: !3, line: 2261, type: !272)
!3371 = !DILocalVariable(name: "s", scope: !3360, file: !3, line: 2262, type: !10)
!3372 = !DILocation(line: 2254, column: 58, scope: !3360)
!3373 = !DILocation(line: 2255, column: 66, scope: !3360)
!3374 = !DILocation(line: 2257, column: 5, scope: !3360)
!3375 = !DILocation(line: 2257, column: 21, scope: !3360)
!3376 = !DILocation(line: 2258, column: 5, scope: !3360)
!3377 = !DILocation(line: 2258, column: 9, scope: !3360)
!3378 = !DILocation(line: 2258, column: 13, scope: !3360)
!3379 = !DILocation(line: 2258, column: 23, scope: !3360)
!3380 = !DILocation(line: 2259, column: 5, scope: !3360)
!3381 = !DILocation(line: 2259, column: 19, scope: !3360)
!3382 = !DILocation(line: 2259, column: 41, scope: !3360)
!3383 = !DILocation(line: 2259, column: 51, scope: !3360)
!3384 = !DILocation(line: 2260, column: 5, scope: !3360)
!3385 = !DILocation(line: 2260, column: 16, scope: !3360)
!3386 = !DILocation(line: 2261, column: 5, scope: !3360)
!3387 = !DILocation(line: 2261, column: 16, scope: !3360)
!3388 = !DILocation(line: 2262, column: 5, scope: !3360)
!3389 = !DILocation(line: 2262, column: 17, scope: !3360)
!3390 = !DILocation(line: 2266, column: 5, scope: !3360)
!3391 = !DILocation(line: 2266, column: 14, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 2266, column: 5)
!3393 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 2266, column: 5)
!3394 = !DILocation(line: 2266, column: 17, scope: !3392)
!3395 = !DILocation(line: 2266, column: 5, scope: !3393)
!3396 = !DILocation(line: 2267, column: 25, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 2266, column: 30)
!3398 = !DILocation(line: 2267, column: 9, scope: !3397)
!3399 = !DILocation(line: 2270, column: 25, scope: !3397)
!3400 = !DILocation(line: 2270, column: 53, scope: !3397)
!3401 = !DILocation(line: 2270, column: 56, scope: !3397)
!3402 = !DILocation(line: 2270, column: 61, scope: !3397)
!3403 = !{!3404, !2417, i64 8}
!3404 = !{!"dav_prop_ctx", !2417, i64 0, !2417, i64 8, !2426, i64 16, !2426, i64 20, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48}
!3405 = !DILocation(line: 2270, column: 34, scope: !3397)
!3406 = !DILocation(line: 2270, column: 9, scope: !3397)
!3407 = !DILocation(line: 2271, column: 25, scope: !3397)
!3408 = !DILocation(line: 2271, column: 9, scope: !3397)
!3409 = !DILocation(line: 2273, column: 13, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 2273, column: 13)
!3411 = !DILocation(line: 2273, column: 18, scope: !3410)
!3412 = !{!3404, !2417, i64 40}
!3413 = !DILocation(line: 2273, column: 22, scope: !3410)
!3414 = !DILocation(line: 2273, column: 13, scope: !3397)
!3415 = !DILocation(line: 2276, column: 17, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 2276, column: 17)
!3417 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 2273, column: 31)
!3418 = !DILocation(line: 2276, column: 22, scope: !3416)
!3419 = !{!3404, !2426, i64 16}
!3420 = !DILocation(line: 2276, column: 32, scope: !3416)
!3421 = !DILocation(line: 2276, column: 17, scope: !3417)
!3422 = !DILocation(line: 2277, column: 21, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 2277, column: 21)
!3424 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 2276, column: 52)
!3425 = !DILocation(line: 2277, column: 32, scope: !3423)
!3426 = !DILocation(line: 2277, column: 21, scope: !3424)
!3427 = !DILocation(line: 2278, column: 48, scope: !3423)
!3428 = !DILocation(line: 2278, column: 34, scope: !3423)
!3429 = !DILocation(line: 2278, column: 32, scope: !3423)
!3430 = !DILocation(line: 2278, column: 21, scope: !3423)
!3431 = !DILocation(line: 2282, column: 28, scope: !3424)
!3432 = !DILocation(line: 2282, column: 17, scope: !3424)
!3433 = !DILocation(line: 2282, column: 22, scope: !3424)
!3434 = !DILocation(line: 2282, column: 26, scope: !3424)
!3435 = !DILocation(line: 2283, column: 13, scope: !3424)
!3436 = !DILocation(line: 2284, column: 22, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 2284, column: 22)
!3438 = !DILocation(line: 2284, column: 27, scope: !3437)
!3439 = !DILocation(line: 2284, column: 37, scope: !3437)
!3440 = !DILocation(line: 2284, column: 22, scope: !3416)
!3441 = !DILocation(line: 2285, column: 21, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 2285, column: 21)
!3443 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 2284, column: 60)
!3444 = !DILocation(line: 2285, column: 35, scope: !3442)
!3445 = !DILocation(line: 2285, column: 21, scope: !3443)
!3446 = !DILocation(line: 2286, column: 51, scope: !3442)
!3447 = !DILocation(line: 2286, column: 37, scope: !3442)
!3448 = !DILocation(line: 2286, column: 35, scope: !3442)
!3449 = !DILocation(line: 2286, column: 21, scope: !3442)
!3450 = !DILocation(line: 2291, column: 28, scope: !3443)
!3451 = !DILocation(line: 2291, column: 17, scope: !3443)
!3452 = !DILocation(line: 2291, column: 22, scope: !3443)
!3453 = !DILocation(line: 2291, column: 26, scope: !3443)
!3454 = !DILocation(line: 2292, column: 13, scope: !3443)
!3455 = !DILocation(line: 2293, column: 9, scope: !3417)
!3456 = !DILocation(line: 2295, column: 26, scope: !3397)
!3457 = !DILocation(line: 2299, column: 26, scope: !3397)
!3458 = !DILocation(line: 2299, column: 31, scope: !3397)
!3459 = !DILocation(line: 2299, column: 36, scope: !3397)
!3460 = !DILocation(line: 2295, column: 13, scope: !3397)
!3461 = !DILocation(line: 2295, column: 11, scope: !3397)
!3462 = !DILocation(line: 2300, column: 25, scope: !3397)
!3463 = !DILocation(line: 2300, column: 34, scope: !3397)
!3464 = !DILocation(line: 2300, column: 9, scope: !3397)
!3465 = !DILocation(line: 2303, column: 13, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 2303, column: 13)
!3467 = !DILocation(line: 2303, column: 18, scope: !3466)
!3468 = !DILocation(line: 2303, column: 23, scope: !3466)
!3469 = !DILocation(line: 2303, column: 28, scope: !3466)
!3470 = !DILocation(line: 2303, column: 13, scope: !3397)
!3471 = !DILocation(line: 2304, column: 29, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 2303, column: 37)
!3473 = !DILocation(line: 2304, column: 13, scope: !3472)
!3474 = !DILocation(line: 2305, column: 29, scope: !3472)
!3475 = !DILocation(line: 2305, column: 38, scope: !3472)
!3476 = !DILocation(line: 2305, column: 43, scope: !3472)
!3477 = !DILocation(line: 2305, column: 48, scope: !3472)
!3478 = !DILocation(line: 2305, column: 13, scope: !3472)
!3479 = !DILocation(line: 2306, column: 29, scope: !3472)
!3480 = !DILocation(line: 2306, column: 13, scope: !3472)
!3481 = !DILocation(line: 2307, column: 9, scope: !3472)
!3482 = !DILocation(line: 2309, column: 25, scope: !3397)
!3483 = !DILocation(line: 2309, column: 9, scope: !3397)
!3484 = !DILocation(line: 2310, column: 5, scope: !3397)
!3485 = !DILocation(line: 2266, column: 22, scope: !3392)
!3486 = !DILocation(line: 2266, column: 5, scope: !3392)
!3487 = distinct !{!3487, !3395, !3488, !2563}
!3488 = !DILocation(line: 2310, column: 5, scope: !3393)
!3489 = !DILocation(line: 2312, column: 16, scope: !3360)
!3490 = !{!3491, !2417, i64 0}
!3491 = !{!"apr_text_header", !2417, i64 0, !2417, i64 8}
!3492 = !DILocation(line: 2313, column: 1, scope: !3360)
!3493 = !DILocation(line: 2312, column: 5, scope: !3360)
!3494 = !DISubprogram(name: "apr_text_append", scope: !228, file: !228, line: 77, type: !3495, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{null, !73, !1015, !10}
!3497 = !DISubprogram(name: "apr_xml_empty_elem", scope: !228, file: !228, line: 304, type: !3498, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!10, !73, !1025}
!3500 = distinct !DISubprogram(name: "dav_success_proppatch", scope: !3, file: !3, line: 2315, type: !3361, scopeLine: 2317, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3501)
!3501 = !{!3502, !3503, !3504, !3505, !3506}
!3502 = !DILocalVariable(name: "p", arg: 1, scope: !3500, file: !3, line: 2315, type: !73)
!3503 = !DILocalVariable(name: "prop_ctx", arg: 2, scope: !3500, file: !3, line: 2316, type: !450)
!3504 = !DILocalVariable(name: "hdr", scope: !3500, file: !3, line: 2318, type: !235)
!3505 = !DILocalVariable(name: "i", scope: !3500, file: !3, line: 2319, type: !14)
!3506 = !DILocalVariable(name: "ctx", scope: !3500, file: !3, line: 2320, type: !217)
!3507 = !DILocation(line: 2315, column: 59, scope: !3500)
!3508 = !DILocation(line: 2316, column: 67, scope: !3500)
!3509 = !DILocation(line: 2318, column: 5, scope: !3500)
!3510 = !DILocation(line: 2318, column: 21, scope: !3500)
!3511 = !DILocation(line: 2319, column: 5, scope: !3500)
!3512 = !DILocation(line: 2319, column: 9, scope: !3500)
!3513 = !DILocation(line: 2319, column: 13, scope: !3500)
!3514 = !DILocation(line: 2319, column: 23, scope: !3500)
!3515 = !DILocation(line: 2320, column: 5, scope: !3500)
!3516 = !DILocation(line: 2320, column: 19, scope: !3500)
!3517 = !DILocation(line: 2320, column: 41, scope: !3500)
!3518 = !DILocation(line: 2320, column: 51, scope: !3500)
!3519 = !DILocation(line: 2327, column: 21, scope: !3500)
!3520 = !DILocation(line: 2327, column: 5, scope: !3500)
!3521 = !DILocation(line: 2331, column: 5, scope: !3500)
!3522 = !DILocation(line: 2331, column: 14, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 2331, column: 5)
!3524 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 2331, column: 5)
!3525 = !DILocation(line: 2331, column: 17, scope: !3523)
!3526 = !DILocation(line: 2331, column: 5, scope: !3524)
!3527 = !DILocation(line: 2332, column: 25, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 2331, column: 30)
!3529 = !DILocation(line: 2332, column: 53, scope: !3528)
!3530 = !DILocation(line: 2332, column: 56, scope: !3528)
!3531 = !DILocation(line: 2332, column: 61, scope: !3528)
!3532 = !DILocation(line: 2332, column: 34, scope: !3528)
!3533 = !DILocation(line: 2332, column: 9, scope: !3528)
!3534 = !DILocation(line: 2333, column: 5, scope: !3528)
!3535 = !DILocation(line: 2331, column: 22, scope: !3523)
!3536 = !DILocation(line: 2331, column: 5, scope: !3523)
!3537 = distinct !{!3537, !3526, !3538, !2563}
!3538 = !DILocation(line: 2333, column: 5, scope: !3524)
!3539 = !DILocation(line: 2335, column: 21, scope: !3500)
!3540 = !DILocation(line: 2335, column: 5, scope: !3500)
!3541 = !DILocation(line: 2340, column: 16, scope: !3500)
!3542 = !DILocation(line: 2341, column: 1, scope: !3500)
!3543 = !DILocation(line: 2340, column: 5, scope: !3500)
!3544 = distinct !DISubprogram(name: "dav_create_dir_config", scope: !3, file: !3, line: 149, type: !2387, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3545)
!3545 = !{!3546, !3547, !3548, !3549, !3552}
!3546 = !DILocalVariable(name: "p", arg: 1, scope: !3544, file: !3, line: 149, type: !73)
!3547 = !DILocalVariable(name: "dir", arg: 2, scope: !3544, file: !3, line: 149, type: !216)
!3548 = !DILocalVariable(name: "conf", scope: !3544, file: !3, line: 153, type: !1108)
!3549 = !DILocalVariable(name: "d", scope: !3550, file: !3, line: 159, type: !216)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 158, column: 22)
!3551 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 158, column: 9)
!3552 = !DILocalVariable(name: "l", scope: !3550, file: !3, line: 160, type: !43)
!3553 = !DILocation(line: 149, column: 48, scope: !3544)
!3554 = !DILocation(line: 149, column: 57, scope: !3544)
!3555 = !DILocation(line: 153, column: 5, scope: !3544)
!3556 = !DILocation(line: 153, column: 19, scope: !3544)
!3557 = !DILocation(line: 155, column: 28, scope: !3544)
!3558 = !DILocation(line: 155, column: 10, scope: !3544)
!3559 = !DILocation(line: 158, column: 9, scope: !3551)
!3560 = !DILocation(line: 158, column: 13, scope: !3551)
!3561 = !DILocation(line: 158, column: 9, scope: !3544)
!3562 = !DILocation(line: 159, column: 9, scope: !3550)
!3563 = !DILocation(line: 159, column: 15, scope: !3550)
!3564 = !DILocation(line: 160, column: 9, scope: !3550)
!3565 = !DILocation(line: 160, column: 20, scope: !3550)
!3566 = !DILocation(line: 162, column: 20, scope: !3550)
!3567 = !DILocation(line: 162, column: 13, scope: !3550)
!3568 = !DILocation(line: 162, column: 11, scope: !3550)
!3569 = !{!2427, !2427, i64 0}
!3570 = !DILocation(line: 163, column: 28, scope: !3550)
!3571 = !DILocation(line: 163, column: 31, scope: !3550)
!3572 = !DILocation(line: 163, column: 36, scope: !3550)
!3573 = !DILocation(line: 163, column: 13, scope: !3550)
!3574 = !DILocation(line: 163, column: 11, scope: !3550)
!3575 = !DILocation(line: 164, column: 13, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 164, column: 13)
!3577 = !DILocation(line: 164, column: 15, scope: !3576)
!3578 = !DILocation(line: 164, column: 19, scope: !3576)
!3579 = !DILocation(line: 164, column: 22, scope: !3576)
!3580 = !DILocation(line: 164, column: 24, scope: !3576)
!3581 = !DILocation(line: 164, column: 26, scope: !3576)
!3582 = !DILocation(line: 164, column: 31, scope: !3576)
!3583 = !DILocation(line: 164, column: 13, scope: !3550)
!3584 = !DILocation(line: 165, column: 13, scope: !3576)
!3585 = !DILocation(line: 165, column: 15, scope: !3576)
!3586 = !DILocation(line: 165, column: 17, scope: !3576)
!3587 = !DILocation(line: 165, column: 22, scope: !3576)
!3588 = !DILocation(line: 166, column: 21, scope: !3550)
!3589 = !DILocation(line: 166, column: 9, scope: !3550)
!3590 = !DILocation(line: 166, column: 15, scope: !3550)
!3591 = !DILocation(line: 166, column: 19, scope: !3550)
!3592 = !DILocation(line: 167, column: 5, scope: !3551)
!3593 = !DILocation(line: 167, column: 5, scope: !3550)
!3594 = !DILocation(line: 169, column: 12, scope: !3544)
!3595 = !DILocation(line: 170, column: 1, scope: !3544)
!3596 = !DILocation(line: 169, column: 5, scope: !3544)
!3597 = distinct !DISubprogram(name: "dav_merge_dir_config", scope: !3, file: !3, line: 172, type: !2391, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3598)
!3598 = !{!3599, !3600, !3601, !3602, !3603, !3604, !3605, !3613}
!3599 = !DILocalVariable(name: "p", arg: 1, scope: !3597, file: !3, line: 172, type: !73)
!3600 = !DILocalVariable(name: "base", arg: 2, scope: !3597, file: !3, line: 172, type: !20)
!3601 = !DILocalVariable(name: "overrides", arg: 3, scope: !3597, file: !3, line: 172, type: !20)
!3602 = !DILocalVariable(name: "parent", scope: !3597, file: !3, line: 174, type: !1108)
!3603 = !DILocalVariable(name: "child", scope: !3597, file: !3, line: 175, type: !1108)
!3604 = !DILocalVariable(name: "newconf", scope: !3597, file: !3, line: 176, type: !1108)
!3605 = !DILocalVariable(name: "sr__", scope: !3606, file: !3, line: 185, type: !3611)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 185, column: 13)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 184, column: 43)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 184, column: 13)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 183, column: 40)
!3610 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 183, column: 9)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !299)
!3613 = !DILocalVariable(name: "sr__", scope: !3614, file: !3, line: 191, type: !3611)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 191, column: 13)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 190, column: 58)
!3616 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 189, column: 18)
!3617 = !DILocation(line: 172, column: 47, scope: !3597)
!3618 = !DILocation(line: 172, column: 56, scope: !3597)
!3619 = !DILocation(line: 172, column: 68, scope: !3597)
!3620 = !DILocation(line: 174, column: 5, scope: !3597)
!3621 = !DILocation(line: 174, column: 19, scope: !3597)
!3622 = !DILocation(line: 174, column: 28, scope: !3597)
!3623 = !DILocation(line: 175, column: 5, scope: !3597)
!3624 = !DILocation(line: 175, column: 19, scope: !3597)
!3625 = !DILocation(line: 175, column: 27, scope: !3597)
!3626 = !DILocation(line: 176, column: 5, scope: !3597)
!3627 = !DILocation(line: 176, column: 19, scope: !3597)
!3628 = !DILocation(line: 176, column: 45, scope: !3597)
!3629 = !DILocation(line: 181, column: 30, scope: !3597)
!3630 = !DILocation(line: 181, column: 5, scope: !3597)
!3631 = !DILocation(line: 181, column: 14, scope: !3597)
!3632 = !DILocation(line: 181, column: 28, scope: !3597)
!3633 = !DILocation(line: 182, column: 25, scope: !3597)
!3634 = !DILocation(line: 182, column: 5, scope: !3597)
!3635 = !DILocation(line: 182, column: 14, scope: !3597)
!3636 = !DILocation(line: 182, column: 23, scope: !3597)
!3637 = !DILocation(line: 183, column: 9, scope: !3610)
!3638 = !DILocation(line: 183, column: 17, scope: !3610)
!3639 = !DILocation(line: 183, column: 31, scope: !3610)
!3640 = !DILocation(line: 183, column: 9, scope: !3597)
!3641 = !DILocation(line: 184, column: 13, scope: !3608)
!3642 = !DILocation(line: 184, column: 20, scope: !3608)
!3643 = !DILocation(line: 184, column: 34, scope: !3608)
!3644 = !DILocation(line: 184, column: 13, scope: !3609)
!3645 = !DILocation(line: 185, column: 13, scope: !3607)
!3646 = !DILocation(line: 185, column: 13, scope: !3606)
!3647 = !DILocation(line: 185, column: 13, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 185, column: 13)
!3649 = !DILocation(line: 188, column: 9, scope: !3607)
!3650 = !DILocation(line: 189, column: 29, scope: !3616)
!3651 = !DILocation(line: 189, column: 36, scope: !3616)
!3652 = !DILocation(line: 190, column: 29, scope: !3616)
!3653 = !DILocation(line: 190, column: 37, scope: !3616)
!3654 = !DILocation(line: 189, column: 18, scope: !3616)
!3655 = !DILocation(line: 190, column: 52, scope: !3616)
!3656 = !DILocation(line: 189, column: 18, scope: !3608)
!3657 = !DILocation(line: 191, column: 13, scope: !3615)
!3658 = !DILocation(line: 191, column: 13, scope: !3614)
!3659 = !DILocation(line: 191, column: 13, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 191, column: 13)
!3661 = !DILocation(line: 194, column: 9, scope: !3615)
!3662 = !DILocation(line: 195, column: 5, scope: !3609)
!3663 = !DILocation(line: 197, column: 28, scope: !3597)
!3664 = !{!2437, !2426, i64 24}
!3665 = !DILocation(line: 197, column: 5, scope: !3597)
!3666 = !DILocation(line: 197, column: 14, scope: !3597)
!3667 = !DILocation(line: 197, column: 26, scope: !3597)
!3668 = !DILocation(line: 198, column: 20, scope: !3597)
!3669 = !DILocation(line: 198, column: 5, scope: !3597)
!3670 = !DILocation(line: 198, column: 14, scope: !3597)
!3671 = !DILocation(line: 198, column: 18, scope: !3597)
!3672 = !DILocation(line: 199, column: 36, scope: !3597)
!3673 = !{!2437, !2426, i64 28}
!3674 = !DILocation(line: 199, column: 5, scope: !3597)
!3675 = !DILocation(line: 199, column: 14, scope: !3597)
!3676 = !DILocation(line: 199, column: 34, scope: !3597)
!3677 = !DILocation(line: 201, column: 36, scope: !3597)
!3678 = !{!2437, !2426, i64 32}
!3679 = !DILocation(line: 201, column: 5, scope: !3597)
!3680 = !DILocation(line: 201, column: 14, scope: !3597)
!3681 = !DILocation(line: 201, column: 34, scope: !3597)
!3682 = !DILocation(line: 204, column: 12, scope: !3597)
!3683 = !DILocation(line: 205, column: 1, scope: !3597)
!3684 = !DILocation(line: 204, column: 5, scope: !3597)
!3685 = distinct !DISubprogram(name: "dav_create_server_config", scope: !3, file: !3, line: 124, type: !2395, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3686)
!3686 = !{!3687, !3688, !3689}
!3687 = !DILocalVariable(name: "p", arg: 1, scope: !3685, file: !3, line: 124, type: !73)
!3688 = !DILocalVariable(name: "s", arg: 2, scope: !3685, file: !3, line: 124, type: !298)
!3689 = !DILocalVariable(name: "newconf", scope: !3685, file: !3, line: 126, type: !1320)
!3690 = !DILocation(line: 124, column: 51, scope: !3685)
!3691 = !DILocation(line: 124, column: 66, scope: !3685)
!3692 = !DILocation(line: 126, column: 5, scope: !3685)
!3693 = !DILocation(line: 126, column: 22, scope: !3685)
!3694 = !DILocation(line: 128, column: 34, scope: !3685)
!3695 = !DILocation(line: 128, column: 13, scope: !3685)
!3696 = !DILocation(line: 132, column: 12, scope: !3685)
!3697 = !DILocation(line: 133, column: 1, scope: !3685)
!3698 = !DILocation(line: 132, column: 5, scope: !3685)
!3699 = distinct !DISubprogram(name: "dav_merge_server_config", scope: !3, file: !3, line: 135, type: !2391, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3700)
!3700 = !{!3701, !3702, !3703, !3704}
!3701 = !DILocalVariable(name: "p", arg: 1, scope: !3699, file: !3, line: 135, type: !73)
!3702 = !DILocalVariable(name: "base", arg: 2, scope: !3699, file: !3, line: 135, type: !20)
!3703 = !DILocalVariable(name: "overrides", arg: 3, scope: !3699, file: !3, line: 135, type: !20)
!3704 = !DILocalVariable(name: "newconf", scope: !3699, file: !3, line: 140, type: !1320)
!3705 = !DILocation(line: 135, column: 50, scope: !3699)
!3706 = !DILocation(line: 135, column: 59, scope: !3699)
!3707 = !DILocation(line: 135, column: 71, scope: !3699)
!3708 = !DILocation(line: 140, column: 5, scope: !3699)
!3709 = !DILocation(line: 140, column: 22, scope: !3699)
!3710 = !DILocation(line: 142, column: 34, scope: !3699)
!3711 = !DILocation(line: 142, column: 13, scope: !3699)
!3712 = !DILocation(line: 146, column: 12, scope: !3699)
!3713 = !DILocation(line: 147, column: 1, scope: !3699)
!3714 = !DILocation(line: 146, column: 5, scope: !3699)
!3715 = distinct !DISubprogram(name: "register_hooks", scope: !3, file: !3, line: 5138, type: !2401, scopeLine: 5139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3716)
!3716 = !{!3717}
!3717 = !DILocalVariable(name: "p", arg: 1, scope: !3715, file: !3, line: 5138, type: !73)
!3718 = !DILocation(line: 5138, column: 40, scope: !3715)
!3719 = !DILocation(line: 5140, column: 5, scope: !3715)
!3720 = !DILocation(line: 5141, column: 5, scope: !3715)
!3721 = !DILocation(line: 5142, column: 5, scope: !3715)
!3722 = !DILocation(line: 5144, column: 5, scope: !3715)
!3723 = !DILocation(line: 5145, column: 5, scope: !3715)
!3724 = !DILocation(line: 5148, column: 5, scope: !3715)
!3725 = !DILocation(line: 5150, column: 5, scope: !3715)
!3726 = !DILocation(line: 5153, column: 28, scope: !3715)
!3727 = !DILocation(line: 5153, column: 5, scope: !3715)
!3728 = !DILocation(line: 5154, column: 1, scope: !3715)
!3729 = distinct !DISubprogram(name: "dav_hook_gather_propsets", scope: !3, file: !3, line: 5205, type: !3730, scopeLine: 5205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3732)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !730, !214, !214, !14}
!3732 = !{!3733, !3734, !3735, !3736, !3737}
!3733 = !DILocalVariable(name: "pf", arg: 1, scope: !3729, file: !3, line: 5205, type: !730)
!3734 = !DILocalVariable(name: "aszPre", arg: 2, scope: !3729, file: !3, line: 5205, type: !214)
!3735 = !DILocalVariable(name: "aszSucc", arg: 3, scope: !3729, file: !3, line: 5205, type: !214)
!3736 = !DILocalVariable(name: "nOrder", arg: 4, scope: !3729, file: !3, line: 5205, type: !14)
!3737 = !DILocalVariable(name: "pHook", scope: !3729, file: !3, line: 5205, type: !725)
!3738 = !DILocation(line: 5205, column: 1, scope: !3729)
!3739 = !DILocation(line: 5205, column: 1, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 5205, column: 1)
!3741 = !{!3742, !2417, i64 0}
!3742 = !{!"", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40}
!3743 = !DILocation(line: 5205, column: 1, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 5205, column: 1)
!3745 = !{!3746, !2417, i64 0}
!3746 = !{!"dav_LINK_gather_propsets_t", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2426, i64 32}
!3747 = !{!3746, !2417, i64 16}
!3748 = !{!3746, !2417, i64 24}
!3749 = !{!3746, !2426, i64 32}
!3750 = !{!3746, !2417, i64 8}
!3751 = !DILocation(line: 5205, column: 1, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 5205, column: 1)
!3753 = !DISubprogram(name: "apr_array_make", scope: !452, file: !452, line: 121, type: !3754, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!450, !73, !14, !14}
!3756 = !DISubprogram(name: "apr_hook_sort_register", scope: !3757, file: !3757, line: 330, type: !3758, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3757 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_p/linux-ubuntu22.04-zen2/clang-18.0.0/apr-util-1.6.3-l37sacsnb2zk76xejbzfvftzd4gcjj3o/include/apr-1/apr_hooks.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build", checksumkind: CSK_MD5, checksum: "c8a9febb9e731f7c2c1d7e7cd3d01c68")
!3758 = !DISubroutineType(types: !3759)
!3759 = !{null, !10, !3760}
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!3761 = !DISubprogram(name: "apr_array_push", scope: !452, file: !452, line: 131, type: !3762, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!20, !450}
!3764 = !DISubprogram(name: "apr_hook_debug_show", scope: !3757, file: !3757, line: 344, type: !3765, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{null, !10, !214, !214}
!3767 = distinct !DISubprogram(name: "dav_hook_get_gather_propsets", scope: !3, file: !3, line: 5205, type: !3768, scopeLine: 5205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!450}
!3770 = !DILocation(line: 5205, column: 1, scope: !3767)
!3771 = distinct !DISubprogram(name: "dav_run_gather_propsets", scope: !3, file: !3, line: 5205, type: !732, scopeLine: 5205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3772)
!3772 = !{!3773, !3774, !3775}
!3773 = !DILocalVariable(name: "uris", arg: 1, scope: !3771, file: !3, line: 5205, type: !450)
!3774 = !DILocalVariable(name: "pHook", scope: !3771, file: !3, line: 5205, type: !725)
!3775 = !DILocalVariable(name: "n", scope: !3771, file: !3, line: 5205, type: !14)
!3776 = !DILocation(line: 5205, column: 1, scope: !3771)
!3777 = !DILocation(line: 5205, column: 1, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 5205, column: 1)
!3779 = !DILocation(line: 5205, column: 1, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 5205, column: 1)
!3781 = !DILocation(line: 5205, column: 1, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 5205, column: 1)
!3783 = !DILocation(line: 5205, column: 1, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 5205, column: 1)
!3785 = !DILocation(line: 5205, column: 1, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 5205, column: 1)
!3787 = distinct !{!3787, !3781, !3781, !2563}
!3788 = distinct !DISubprogram(name: "dav_hook_find_liveprop", scope: !3, file: !3, line: 5209, type: !3789, scopeLine: 5209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3791)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{null, !743, !214, !214, !14}
!3791 = !{!3792, !3793, !3794, !3795, !3796}
!3792 = !DILocalVariable(name: "pf", arg: 1, scope: !3788, file: !3, line: 5209, type: !743)
!3793 = !DILocalVariable(name: "aszPre", arg: 2, scope: !3788, file: !3, line: 5209, type: !214)
!3794 = !DILocalVariable(name: "aszSucc", arg: 3, scope: !3788, file: !3, line: 5209, type: !214)
!3795 = !DILocalVariable(name: "nOrder", arg: 4, scope: !3788, file: !3, line: 5209, type: !14)
!3796 = !DILocalVariable(name: "pHook", scope: !3788, file: !3, line: 5209, type: !738)
!3797 = !DILocation(line: 5209, column: 1, scope: !3788)
!3798 = !DILocation(line: 5209, column: 1, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 5209, column: 1)
!3800 = !{!3742, !2417, i64 8}
!3801 = !DILocation(line: 5209, column: 1, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 5209, column: 1)
!3803 = !{!3804, !2417, i64 0}
!3804 = !{!"dav_LINK_find_liveprop_t", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2426, i64 32}
!3805 = !{!3804, !2417, i64 16}
!3806 = !{!3804, !2417, i64 24}
!3807 = !{!3804, !2426, i64 32}
!3808 = !{!3804, !2417, i64 8}
!3809 = !DILocation(line: 5209, column: 1, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 5209, column: 1)
!3811 = distinct !DISubprogram(name: "dav_hook_get_find_liveprop", scope: !3, file: !3, line: 5209, type: !3768, scopeLine: 5209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3812 = !DILocation(line: 5209, column: 1, scope: !3811)
!3813 = distinct !DISubprogram(name: "dav_run_find_liveprop", scope: !3, file: !3, line: 5209, type: !745, scopeLine: 5209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3814)
!3814 = !{!3815, !3816, !3817, !3818, !3819, !3820, !3821}
!3815 = !DILocalVariable(name: "resource", arg: 1, scope: !3813, file: !3, line: 5209, type: !747)
!3816 = !DILocalVariable(name: "ns_uri", arg: 2, scope: !3813, file: !3, line: 5209, type: !10)
!3817 = !DILocalVariable(name: "name", arg: 3, scope: !3813, file: !3, line: 5209, type: !10)
!3818 = !DILocalVariable(name: "hooks", arg: 4, scope: !3813, file: !3, line: 5209, type: !1004)
!3819 = !DILocalVariable(name: "pHook", scope: !3813, file: !3, line: 5209, type: !738)
!3820 = !DILocalVariable(name: "n", scope: !3813, file: !3, line: 5209, type: !14)
!3821 = !DILocalVariable(name: "rv", scope: !3813, file: !3, line: 5209, type: !14)
!3822 = !DILocation(line: 5209, column: 1, scope: !3813)
!3823 = !DILocation(line: 5209, column: 1, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 5209, column: 1)
!3825 = !DILocation(line: 5209, column: 1, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 5209, column: 1)
!3827 = !DILocation(line: 5209, column: 1, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 5209, column: 1)
!3829 = !DILocation(line: 5209, column: 1, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 5209, column: 1)
!3831 = !DILocation(line: 5209, column: 1, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 5209, column: 1)
!3833 = !DILocation(line: 5209, column: 1, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 5209, column: 1)
!3835 = distinct !{!3835, !3827, !3827, !2563}
!3836 = distinct !DISubprogram(name: "dav_hook_insert_all_liveprops", scope: !3, file: !3, line: 5215, type: !3837, scopeLine: 5215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3839)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{null, !1053, !214, !214, !14}
!3839 = !{!3840, !3841, !3842, !3843, !3844}
!3840 = !DILocalVariable(name: "pf", arg: 1, scope: !3836, file: !3, line: 5215, type: !1053)
!3841 = !DILocalVariable(name: "aszPre", arg: 2, scope: !3836, file: !3, line: 5215, type: !214)
!3842 = !DILocalVariable(name: "aszSucc", arg: 3, scope: !3836, file: !3, line: 5215, type: !214)
!3843 = !DILocalVariable(name: "nOrder", arg: 4, scope: !3836, file: !3, line: 5215, type: !14)
!3844 = !DILocalVariable(name: "pHook", scope: !3836, file: !3, line: 5215, type: !1048)
!3845 = !DILocation(line: 5215, column: 1, scope: !3836)
!3846 = !DILocation(line: 5215, column: 1, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 5215, column: 1)
!3848 = !{!3742, !2417, i64 16}
!3849 = !DILocation(line: 5215, column: 1, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 5215, column: 1)
!3851 = !{!3852, !2417, i64 0}
!3852 = !{!"dav_LINK_insert_all_liveprops_t", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2426, i64 32}
!3853 = !{!3852, !2417, i64 16}
!3854 = !{!3852, !2417, i64 24}
!3855 = !{!3852, !2426, i64 32}
!3856 = !{!3852, !2417, i64 8}
!3857 = !DILocation(line: 5215, column: 1, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 5215, column: 1)
!3859 = distinct !DISubprogram(name: "dav_hook_get_insert_all_liveprops", scope: !3, file: !3, line: 5215, type: !3768, scopeLine: 5215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3860 = !DILocation(line: 5215, column: 1, scope: !3859)
!3861 = distinct !DISubprogram(name: "dav_run_insert_all_liveprops", scope: !3, file: !3, line: 5215, type: !1055, scopeLine: 5215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3862)
!3862 = !{!3863, !3864, !3865, !3866, !3867, !3868}
!3863 = !DILocalVariable(name: "r", arg: 1, scope: !3861, file: !3, line: 5215, type: !286)
!3864 = !DILocalVariable(name: "resource", arg: 2, scope: !3861, file: !3, line: 5215, type: !747)
!3865 = !DILocalVariable(name: "what", arg: 3, scope: !3861, file: !3, line: 5215, type: !1014)
!3866 = !DILocalVariable(name: "phdr", arg: 4, scope: !3861, file: !3, line: 5215, type: !1015)
!3867 = !DILocalVariable(name: "pHook", scope: !3861, file: !3, line: 5215, type: !1048)
!3868 = !DILocalVariable(name: "n", scope: !3861, file: !3, line: 5215, type: !14)
!3869 = !DILocation(line: 5215, column: 1, scope: !3861)
!3870 = !DILocation(line: 5215, column: 1, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 5215, column: 1)
!3872 = !DILocation(line: 5215, column: 1, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 5215, column: 1)
!3874 = !DILocation(line: 5215, column: 1, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 5215, column: 1)
!3876 = !DILocation(line: 5215, column: 1, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 5215, column: 1)
!3878 = !DILocation(line: 5215, column: 1, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 5215, column: 1)
!3880 = distinct !{!3880, !3874, !3874, !2563}
!3881 = distinct !DISubprogram(name: "dav_hook_deliver_report", scope: !3, file: !3, line: 5220, type: !3882, scopeLine: 5220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3884)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{null, !1066, !214, !214, !14}
!3884 = !{!3885, !3886, !3887, !3888, !3889}
!3885 = !DILocalVariable(name: "pf", arg: 1, scope: !3881, file: !3, line: 5220, type: !1066)
!3886 = !DILocalVariable(name: "aszPre", arg: 2, scope: !3881, file: !3, line: 5220, type: !214)
!3887 = !DILocalVariable(name: "aszSucc", arg: 3, scope: !3881, file: !3, line: 5220, type: !214)
!3888 = !DILocalVariable(name: "nOrder", arg: 4, scope: !3881, file: !3, line: 5220, type: !14)
!3889 = !DILocalVariable(name: "pHook", scope: !3881, file: !3, line: 5220, type: !1061)
!3890 = !DILocation(line: 5220, column: 1, scope: !3881)
!3891 = !DILocation(line: 5220, column: 1, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 5220, column: 1)
!3893 = !{!3742, !2417, i64 24}
!3894 = !DILocation(line: 5220, column: 1, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 5220, column: 1)
!3896 = !{!3897, !2417, i64 0}
!3897 = !{!"dav_LINK_deliver_report_t", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2426, i64 32}
!3898 = !{!3897, !2417, i64 16}
!3899 = !{!3897, !2417, i64 24}
!3900 = !{!3897, !2426, i64 32}
!3901 = !{!3897, !2417, i64 8}
!3902 = !DILocation(line: 5220, column: 1, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 5220, column: 1)
!3904 = distinct !DISubprogram(name: "dav_hook_get_deliver_report", scope: !3, file: !3, line: 5220, type: !3768, scopeLine: 5220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3905 = !DILocation(line: 5220, column: 1, scope: !3904)
!3906 = distinct !DISubprogram(name: "dav_run_deliver_report", scope: !3, file: !3, line: 5220, type: !1068, scopeLine: 5220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3907)
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915}
!3908 = !DILocalVariable(name: "r", arg: 1, scope: !3906, file: !3, line: 5220, type: !286)
!3909 = !DILocalVariable(name: "resource", arg: 2, scope: !3906, file: !3, line: 5220, type: !747)
!3910 = !DILocalVariable(name: "doc", arg: 3, scope: !3906, file: !3, line: 5220, type: !1070)
!3911 = !DILocalVariable(name: "output", arg: 4, scope: !3906, file: !3, line: 5220, type: !501)
!3912 = !DILocalVariable(name: "err", arg: 5, scope: !3906, file: !3, line: 5220, type: !1077)
!3913 = !DILocalVariable(name: "pHook", scope: !3906, file: !3, line: 5220, type: !1061)
!3914 = !DILocalVariable(name: "n", scope: !3906, file: !3, line: 5220, type: !14)
!3915 = !DILocalVariable(name: "rv", scope: !3906, file: !3, line: 5220, type: !14)
!3916 = !DILocation(line: 5220, column: 1, scope: !3906)
!3917 = !DILocation(line: 5220, column: 1, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 5220, column: 1)
!3919 = !DILocation(line: 5220, column: 1, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 5220, column: 1)
!3921 = !DILocation(line: 5220, column: 1, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 5220, column: 1)
!3923 = !DILocation(line: 5220, column: 1, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 5220, column: 1)
!3925 = !DILocation(line: 5220, column: 1, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 5220, column: 1)
!3927 = !DILocation(line: 5220, column: 1, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 5220, column: 1)
!3929 = distinct !{!3929, !3921, !3921, !2563}
!3930 = distinct !DISubprogram(name: "dav_hook_gather_reports", scope: !3, file: !3, line: 5227, type: !3931, scopeLine: 5227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3933)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !1087, !214, !214, !14}
!3933 = !{!3934, !3935, !3936, !3937, !3938}
!3934 = !DILocalVariable(name: "pf", arg: 1, scope: !3930, file: !3, line: 5227, type: !1087)
!3935 = !DILocalVariable(name: "aszPre", arg: 2, scope: !3930, file: !3, line: 5227, type: !214)
!3936 = !DILocalVariable(name: "aszSucc", arg: 3, scope: !3930, file: !3, line: 5227, type: !214)
!3937 = !DILocalVariable(name: "nOrder", arg: 4, scope: !3930, file: !3, line: 5227, type: !14)
!3938 = !DILocalVariable(name: "pHook", scope: !3930, file: !3, line: 5227, type: !1082)
!3939 = !DILocation(line: 5227, column: 1, scope: !3930)
!3940 = !DILocation(line: 5227, column: 1, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 5227, column: 1)
!3942 = !{!3742, !2417, i64 32}
!3943 = !DILocation(line: 5227, column: 1, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 5227, column: 1)
!3945 = !{!3946, !2417, i64 0}
!3946 = !{!"dav_LINK_gather_reports_t", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2426, i64 32}
!3947 = !{!3946, !2417, i64 16}
!3948 = !{!3946, !2417, i64 24}
!3949 = !{!3946, !2426, i64 32}
!3950 = !{!3946, !2417, i64 8}
!3951 = !DILocation(line: 5227, column: 1, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 5227, column: 1)
!3953 = distinct !DISubprogram(name: "dav_hook_get_gather_reports", scope: !3, file: !3, line: 5227, type: !3768, scopeLine: 5227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3954 = !DILocation(line: 5227, column: 1, scope: !3953)
!3955 = distinct !DISubprogram(name: "dav_run_gather_reports", scope: !3, file: !3, line: 5227, type: !1089, scopeLine: 5227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3956)
!3956 = !{!3957, !3958, !3959, !3960, !3961, !3962}
!3957 = !DILocalVariable(name: "r", arg: 1, scope: !3955, file: !3, line: 5227, type: !286)
!3958 = !DILocalVariable(name: "resource", arg: 2, scope: !3955, file: !3, line: 5227, type: !747)
!3959 = !DILocalVariable(name: "reports", arg: 3, scope: !3955, file: !3, line: 5227, type: !450)
!3960 = !DILocalVariable(name: "err", arg: 4, scope: !3955, file: !3, line: 5227, type: !1077)
!3961 = !DILocalVariable(name: "pHook", scope: !3955, file: !3, line: 5227, type: !1082)
!3962 = !DILocalVariable(name: "n", scope: !3955, file: !3, line: 5227, type: !14)
!3963 = !DILocation(line: 5227, column: 1, scope: !3955)
!3964 = !DILocation(line: 5227, column: 1, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 5227, column: 1)
!3966 = !DILocation(line: 5227, column: 1, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 5227, column: 1)
!3968 = !DILocation(line: 5227, column: 1, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 5227, column: 1)
!3970 = !DILocation(line: 5227, column: 1, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 5227, column: 1)
!3972 = !DILocation(line: 5227, column: 1, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 5227, column: 1)
!3974 = distinct !{!3974, !3968, !3968, !2563}
!3975 = distinct !DISubprogram(name: "dav_hook_method_precondition", scope: !3, file: !3, line: 5232, type: !3976, scopeLine: 5232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3978)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{null, !1100, !214, !214, !14}
!3978 = !{!3979, !3980, !3981, !3982, !3983}
!3979 = !DILocalVariable(name: "pf", arg: 1, scope: !3975, file: !3, line: 5232, type: !1100)
!3980 = !DILocalVariable(name: "aszPre", arg: 2, scope: !3975, file: !3, line: 5232, type: !214)
!3981 = !DILocalVariable(name: "aszSucc", arg: 3, scope: !3975, file: !3, line: 5232, type: !214)
!3982 = !DILocalVariable(name: "nOrder", arg: 4, scope: !3975, file: !3, line: 5232, type: !14)
!3983 = !DILocalVariable(name: "pHook", scope: !3975, file: !3, line: 5232, type: !1095)
!3984 = !DILocation(line: 5232, column: 1, scope: !3975)
!3985 = !DILocation(line: 5232, column: 1, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 5232, column: 1)
!3987 = !{!3742, !2417, i64 40}
!3988 = !DILocation(line: 5232, column: 1, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 5232, column: 1)
!3990 = !{!3991, !2417, i64 0}
!3991 = !{!"dav_LINK_method_precondition_t", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2426, i64 32}
!3992 = !{!3991, !2417, i64 16}
!3993 = !{!3991, !2417, i64 24}
!3994 = !{!3991, !2426, i64 32}
!3995 = !{!3991, !2417, i64 8}
!3996 = !DILocation(line: 5232, column: 1, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 5232, column: 1)
!3998 = distinct !DISubprogram(name: "dav_hook_get_method_precondition", scope: !3, file: !3, line: 5232, type: !3768, scopeLine: 5232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!3999 = !DILocation(line: 5232, column: 1, scope: !3998)
!4000 = distinct !DISubprogram(name: "dav_run_method_precondition", scope: !3, file: !3, line: 5232, type: !1102, scopeLine: 5232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4001)
!4001 = !{!4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009}
!4002 = !DILocalVariable(name: "r", arg: 1, scope: !4000, file: !3, line: 5232, type: !286)
!4003 = !DILocalVariable(name: "src", arg: 2, scope: !4000, file: !3, line: 5232, type: !776)
!4004 = !DILocalVariable(name: "dest", arg: 3, scope: !4000, file: !3, line: 5232, type: !747)
!4005 = !DILocalVariable(name: "doc", arg: 4, scope: !4000, file: !3, line: 5232, type: !1070)
!4006 = !DILocalVariable(name: "err", arg: 5, scope: !4000, file: !3, line: 5232, type: !1077)
!4007 = !DILocalVariable(name: "pHook", scope: !4000, file: !3, line: 5232, type: !1095)
!4008 = !DILocalVariable(name: "n", scope: !4000, file: !3, line: 5232, type: !14)
!4009 = !DILocalVariable(name: "rv", scope: !4000, file: !3, line: 5232, type: !14)
!4010 = !DILocation(line: 5232, column: 1, scope: !4000)
!4011 = !DILocation(line: 5232, column: 1, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 5232, column: 1)
!4013 = !DILocation(line: 5232, column: 1, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 5232, column: 1)
!4015 = !DILocation(line: 5232, column: 1, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 5232, column: 1)
!4017 = !DILocation(line: 5232, column: 1, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 5232, column: 1)
!4019 = !DILocation(line: 5232, column: 1, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4018, file: !3, line: 5232, column: 1)
!4021 = !DILocation(line: 5232, column: 1, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 5232, column: 1)
!4023 = distinct !{!4023, !4015, !4015, !2563}
!4024 = !DISubprogram(name: "ap_os_escape_path", scope: !107, file: !107, line: 1826, type: !3246, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4025 = !DISubprogram(name: "strchr", scope: !2634, file: !2634, line: 246, type: !4026, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!216, !10, !14}
!4028 = !DISubprogram(name: "apr_xml_quote_string", scope: !228, file: !228, line: 317, type: !4029, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!10, !73, !10, !14}
!4031 = distinct !DISubprogram(name: "ap_rputs", scope: !2667, file: !2667, line: 476, type: !4032, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4034)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!14, !10, !286}
!4034 = !{!4035, !4036, !4037, !4038}
!4035 = !DILocalVariable(name: "str", arg: 1, scope: !4031, file: !2667, line: 476, type: !10)
!4036 = !DILocalVariable(name: "r", arg: 2, scope: !4031, file: !2667, line: 476, type: !286)
!4037 = !DILocalVariable(name: "len", scope: !4031, file: !2667, line: 478, type: !43)
!4038 = !DILocalVariable(name: "rc", scope: !4039, file: !2667, line: 487, type: !14)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !2667, line: 486, column: 14)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !2667, line: 483, column: 13)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !2667, line: 482, column: 14)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !2667, line: 482, column: 5)
!4043 = distinct !DILexicalBlock(scope: !4031, file: !2667, line: 482, column: 5)
!4044 = !DILocation(line: 476, column: 44, scope: !4031)
!4045 = !DILocation(line: 476, column: 62, scope: !4031)
!4046 = !DILocation(line: 478, column: 5, scope: !4031)
!4047 = !DILocation(line: 478, column: 16, scope: !4031)
!4048 = !DILocation(line: 480, column: 18, scope: !4031)
!4049 = !DILocation(line: 480, column: 11, scope: !4031)
!4050 = !DILocation(line: 480, column: 9, scope: !4031)
!4051 = !DILocation(line: 482, column: 5, scope: !4031)
!4052 = !DILocation(line: 483, column: 13, scope: !4040)
!4053 = !DILocation(line: 483, column: 17, scope: !4040)
!4054 = !DILocation(line: 483, column: 13, scope: !4041)
!4055 = !DILocation(line: 484, column: 30, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4040, file: !2667, line: 483, column: 29)
!4057 = !DILocation(line: 484, column: 40, scope: !4056)
!4058 = !DILocation(line: 484, column: 35, scope: !4056)
!4059 = !DILocation(line: 484, column: 45, scope: !4056)
!4060 = !DILocation(line: 484, column: 20, scope: !4056)
!4061 = !DILocation(line: 484, column: 13, scope: !4056)
!4062 = !DILocation(line: 487, column: 13, scope: !4039)
!4063 = !DILocation(line: 487, column: 17, scope: !4039)
!4064 = !DILocation(line: 489, column: 28, scope: !4039)
!4065 = !DILocation(line: 489, column: 42, scope: !4039)
!4066 = !DILocation(line: 489, column: 18, scope: !4039)
!4067 = !DILocation(line: 489, column: 16, scope: !4039)
!4068 = !DILocation(line: 490, column: 17, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4039, file: !2667, line: 490, column: 17)
!4070 = !DILocation(line: 490, column: 20, scope: !4069)
!4071 = !DILocation(line: 490, column: 17, scope: !4039)
!4072 = !DILocation(line: 491, column: 24, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4069, file: !2667, line: 490, column: 25)
!4074 = !DILocation(line: 491, column: 17, scope: !4073)
!4075 = !DILocation(line: 494, column: 21, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4069, file: !2667, line: 493, column: 18)
!4077 = !DILocation(line: 495, column: 21, scope: !4076)
!4078 = !DILocation(line: 497, column: 9, scope: !4040)
!4079 = !DILocation(line: 482, column: 5, scope: !4042)
!4080 = distinct !{!4080, !4081, !4082}
!4081 = !DILocation(line: 482, column: 5, scope: !4043)
!4082 = !DILocation(line: 498, column: 5, scope: !4043)
!4083 = !DILocation(line: 499, column: 1, scope: !4031)
!4084 = !DISubprogram(name: "ap_rprintf", scope: !2667, file: !2667, line: 526, type: !4085, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!14, !286, !10, null}
!4087 = !DISubprogram(name: "ap_rwrite", scope: !2667, file: !2667, line: 467, type: !4088, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{!14, !803, !14, !286}
!4090 = !DISubprogram(name: "apr_pstrmemdup", scope: !3242, file: !3242, line: 109, type: !4091, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!216, !73, !10, !43}
!4093 = !DISubprogram(name: "ap_log_error_", scope: !3135, file: !3135, line: 372, type: !4094, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{null, !10, !14, !14, !14, !25, !3611, !10, null}
!4096 = !DISubprogram(name: "strcasecmp", scope: !4097, file: !4097, line: 116, type: !3131, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4097 = !DIFile(filename: "/usr/include/strings.h", directory: "", checksumkind: CSK_MD5, checksum: "7444da68ad94ab9f25ff447750787173")
!4098 = distinct !DISubprogram(name: "dav_cmd_dav", scope: !3, file: !3, line: 254, type: !1662, scopeLine: 255, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4099)
!4099 = !{!4100, !4101, !4102, !4103}
!4100 = !DILocalVariable(name: "cmd", arg: 1, scope: !4098, file: !3, line: 254, type: !1603)
!4101 = !DILocalVariable(name: "config", arg: 2, scope: !4098, file: !3, line: 254, type: !20)
!4102 = !DILocalVariable(name: "arg1", arg: 3, scope: !4098, file: !3, line: 254, type: !10)
!4103 = !DILocalVariable(name: "conf", scope: !4098, file: !3, line: 256, type: !1108)
!4104 = !DILocation(line: 254, column: 43, scope: !4098)
!4105 = !DILocation(line: 254, column: 54, scope: !4098)
!4106 = !DILocation(line: 254, column: 74, scope: !4098)
!4107 = !DILocation(line: 256, column: 5, scope: !4098)
!4108 = !DILocation(line: 256, column: 19, scope: !4098)
!4109 = !DILocation(line: 256, column: 42, scope: !4098)
!4110 = !DILocation(line: 258, column: 20, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 258, column: 9)
!4112 = !DILocation(line: 258, column: 9, scope: !4111)
!4113 = !DILocation(line: 258, column: 32, scope: !4111)
!4114 = !DILocation(line: 258, column: 9, scope: !4098)
!4115 = !DILocation(line: 259, column: 9, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 258, column: 38)
!4117 = !DILocation(line: 259, column: 15, scope: !4116)
!4118 = !DILocation(line: 259, column: 29, scope: !4116)
!4119 = !DILocation(line: 260, column: 5, scope: !4116)
!4120 = !DILocation(line: 261, column: 25, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 261, column: 14)
!4122 = !DILocation(line: 261, column: 14, scope: !4121)
!4123 = !DILocation(line: 261, column: 38, scope: !4121)
!4124 = !DILocation(line: 261, column: 14, scope: !4111)
!4125 = !DILocation(line: 262, column: 9, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 261, column: 44)
!4127 = !DILocation(line: 262, column: 15, scope: !4126)
!4128 = !DILocation(line: 262, column: 29, scope: !4126)
!4129 = !DILocation(line: 263, column: 9, scope: !4126)
!4130 = !DILocation(line: 263, column: 15, scope: !4126)
!4131 = !DILocation(line: 263, column: 24, scope: !4126)
!4132 = !DILocation(line: 264, column: 5, scope: !4126)
!4133 = !DILocation(line: 266, column: 31, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 265, column: 10)
!4135 = !DILocation(line: 266, column: 9, scope: !4134)
!4136 = !DILocation(line: 266, column: 15, scope: !4134)
!4137 = !DILocation(line: 266, column: 29, scope: !4134)
!4138 = !DILocation(line: 269, column: 9, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 269, column: 9)
!4140 = !DILocation(line: 269, column: 15, scope: !4139)
!4141 = !DILocation(line: 269, column: 29, scope: !4139)
!4142 = !DILocation(line: 269, column: 9, scope: !4098)
!4143 = !DILocation(line: 271, column: 46, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 269, column: 38)
!4145 = !DILocation(line: 271, column: 52, scope: !4144)
!4146 = !DILocation(line: 271, column: 26, scope: !4144)
!4147 = !DILocation(line: 271, column: 9, scope: !4144)
!4148 = !DILocation(line: 271, column: 15, scope: !4144)
!4149 = !DILocation(line: 271, column: 24, scope: !4144)
!4150 = !DILocation(line: 273, column: 13, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 273, column: 13)
!4152 = !DILocation(line: 273, column: 19, scope: !4151)
!4153 = !DILocation(line: 273, column: 28, scope: !4151)
!4154 = !DILocation(line: 273, column: 13, scope: !4144)
!4155 = !DILocation(line: 276, column: 33, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 273, column: 37)
!4157 = !DILocation(line: 276, column: 38, scope: !4156)
!4158 = !{!4159, !2417, i64 64}
!4159 = !{!"cmd_parms_struct", !2417, i64 0, !2426, i64 8, !2426, i64 12, !2417, i64 16, !2427, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2417, i64 80, !2417, i64 88, !2417, i64 96, !2417, i64 104, !2417, i64 112}
!4160 = !DILocation(line: 278, column: 33, scope: !4156)
!4161 = !DILocation(line: 278, column: 39, scope: !4156)
!4162 = !DILocation(line: 276, column: 20, scope: !4156)
!4163 = !DILocation(line: 276, column: 13, scope: !4156)
!4164 = !DILocation(line: 280, column: 5, scope: !4144)
!4165 = !DILocation(line: 282, column: 5, scope: !4098)
!4166 = !DILocation(line: 283, column: 1, scope: !4098)
!4167 = distinct !DISubprogram(name: "dav_cmd_davmintimeout", scope: !3, file: !3, line: 318, type: !1662, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4168)
!4168 = !{!4169, !4170, !4171, !4172}
!4169 = !DILocalVariable(name: "cmd", arg: 1, scope: !4167, file: !3, line: 318, type: !1603)
!4170 = !DILocalVariable(name: "config", arg: 2, scope: !4167, file: !3, line: 318, type: !20)
!4171 = !DILocalVariable(name: "arg1", arg: 3, scope: !4167, file: !3, line: 319, type: !10)
!4172 = !DILocalVariable(name: "conf", scope: !4167, file: !3, line: 321, type: !1108)
!4173 = !DILocation(line: 318, column: 53, scope: !4167)
!4174 = !DILocation(line: 318, column: 64, scope: !4167)
!4175 = !DILocation(line: 319, column: 54, scope: !4167)
!4176 = !DILocation(line: 321, column: 5, scope: !4167)
!4177 = !DILocation(line: 321, column: 19, scope: !4167)
!4178 = !DILocation(line: 321, column: 42, scope: !4167)
!4179 = !DILocation(line: 323, column: 30, scope: !4167)
!4180 = !DILocation(line: 323, column: 25, scope: !4167)
!4181 = !DILocation(line: 323, column: 5, scope: !4167)
!4182 = !DILocation(line: 323, column: 11, scope: !4167)
!4183 = !DILocation(line: 323, column: 23, scope: !4167)
!4184 = !DILocation(line: 324, column: 9, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 324, column: 9)
!4186 = !DILocation(line: 324, column: 15, scope: !4185)
!4187 = !DILocation(line: 324, column: 27, scope: !4185)
!4188 = !DILocation(line: 324, column: 9, scope: !4167)
!4189 = !DILocation(line: 325, column: 9, scope: !4185)
!4190 = !DILocation(line: 327, column: 5, scope: !4167)
!4191 = !DILocation(line: 328, column: 1, scope: !4167)
!4192 = distinct !DISubprogram(name: "dav_cmd_davdepthinfinity", scope: !3, file: !3, line: 288, type: !1681, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4193)
!4193 = !{!4194, !4195, !4196, !4197}
!4194 = !DILocalVariable(name: "cmd", arg: 1, scope: !4192, file: !3, line: 288, type: !1603)
!4195 = !DILocalVariable(name: "config", arg: 2, scope: !4192, file: !3, line: 288, type: !20)
!4196 = !DILocalVariable(name: "arg", arg: 3, scope: !4192, file: !3, line: 289, type: !14)
!4197 = !DILocalVariable(name: "conf", scope: !4192, file: !3, line: 291, type: !1108)
!4198 = !DILocation(line: 288, column: 56, scope: !4192)
!4199 = !DILocation(line: 288, column: 67, scope: !4192)
!4200 = !DILocation(line: 289, column: 49, scope: !4192)
!4201 = !DILocation(line: 291, column: 5, scope: !4192)
!4202 = !DILocation(line: 291, column: 19, scope: !4192)
!4203 = !DILocation(line: 291, column: 42, scope: !4192)
!4204 = !DILocation(line: 293, column: 9, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 293, column: 9)
!4206 = !DILocation(line: 293, column: 9, scope: !4192)
!4207 = !DILocation(line: 294, column: 9, scope: !4205)
!4208 = !DILocation(line: 294, column: 15, scope: !4205)
!4209 = !DILocation(line: 294, column: 35, scope: !4205)
!4210 = !DILocation(line: 296, column: 9, scope: !4205)
!4211 = !DILocation(line: 296, column: 15, scope: !4205)
!4212 = !DILocation(line: 296, column: 35, scope: !4205)
!4213 = !DILocation(line: 298, column: 1, scope: !4192)
!4214 = !DILocation(line: 297, column: 5, scope: !4192)
!4215 = distinct !DISubprogram(name: "dav_cmd_davlockdiscovery", scope: !3, file: !3, line: 303, type: !1681, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4216)
!4216 = !{!4217, !4218, !4219, !4220}
!4217 = !DILocalVariable(name: "cmd", arg: 1, scope: !4215, file: !3, line: 303, type: !1603)
!4218 = !DILocalVariable(name: "config", arg: 2, scope: !4215, file: !3, line: 303, type: !20)
!4219 = !DILocalVariable(name: "arg", arg: 3, scope: !4215, file: !3, line: 304, type: !14)
!4220 = !DILocalVariable(name: "conf", scope: !4215, file: !3, line: 306, type: !1108)
!4221 = !DILocation(line: 303, column: 56, scope: !4215)
!4222 = !DILocation(line: 303, column: 67, scope: !4215)
!4223 = !DILocation(line: 304, column: 49, scope: !4215)
!4224 = !DILocation(line: 306, column: 5, scope: !4215)
!4225 = !DILocation(line: 306, column: 19, scope: !4215)
!4226 = !DILocation(line: 306, column: 42, scope: !4215)
!4227 = !DILocation(line: 308, column: 9, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 308, column: 9)
!4229 = !DILocation(line: 308, column: 9, scope: !4215)
!4230 = !DILocation(line: 309, column: 9, scope: !4228)
!4231 = !DILocation(line: 309, column: 15, scope: !4228)
!4232 = !DILocation(line: 309, column: 35, scope: !4228)
!4233 = !DILocation(line: 311, column: 9, scope: !4228)
!4234 = !DILocation(line: 311, column: 15, scope: !4228)
!4235 = !DILocation(line: 311, column: 35, scope: !4228)
!4236 = !DILocation(line: 313, column: 1, scope: !4215)
!4237 = !DILocation(line: 312, column: 5, scope: !4215)
!4238 = !DISubprogram(name: "dav_lookup_provider", scope: !141, file: !141, line: 801, type: !4239, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!1114, !10}
!4241 = distinct !DISubprogram(name: "atoi", scope: !4242, file: !4242, line: 362, type: !4243, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4245)
!4242 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "02258fad21adf111bb9df9825e61954a")
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!14, !10}
!4245 = !{!4246}
!4246 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4241, file: !4242, line: 362, type: !10)
!4247 = !DILocation(line: 362, column: 1, scope: !4241)
!4248 = !DILocation(line: 364, column: 24, scope: !4241)
!4249 = !DILocation(line: 364, column: 16, scope: !4241)
!4250 = !DILocation(line: 364, column: 10, scope: !4241)
!4251 = !DILocation(line: 364, column: 3, scope: !4241)
!4252 = !DISubprogram(name: "strtol", scope: !4242, file: !4242, line: 177, type: !4253, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!54, !4255, !4256, !14}
!4255 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !10)
!4256 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1325)
!4257 = !DISubprogram(name: "ap_hook_handler", scope: !175, file: !175, line: 1388, type: !4258, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{null, !4260, !214, !214, !14}
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_HOOK_handler_t", file: !175, line: 1388, baseType: !4262)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!14, !286}
!4264 = distinct !DISubprogram(name: "dav_handler", scope: !3, file: !3, line: 4903, type: !4262, scopeLine: 4904, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4265)
!4265 = !{!4266}
!4266 = !DILocalVariable(name: "r", arg: 1, scope: !4264, file: !3, line: 4903, type: !286)
!4267 = !DILocation(line: 4903, column: 37, scope: !4264)
!4268 = !DILocation(line: 4905, column: 16, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4905, column: 9)
!4270 = !DILocation(line: 4905, column: 19, scope: !4269)
!4271 = !{!2425, !2417, i64 280}
!4272 = !DILocation(line: 4905, column: 9, scope: !4269)
!4273 = !DILocation(line: 4905, column: 46, scope: !4269)
!4274 = !DILocation(line: 4905, column: 9, scope: !4264)
!4275 = !DILocation(line: 4906, column: 9, scope: !4269)
!4276 = !DILocation(line: 4910, column: 9, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4910, column: 9)
!4278 = !DILocation(line: 4910, column: 12, scope: !4277)
!4279 = !DILocation(line: 4910, column: 23, scope: !4277)
!4280 = !{!2425, !2417, i64 536}
!4281 = !DILocation(line: 4910, column: 32, scope: !4277)
!4282 = !DILocation(line: 4910, column: 9, scope: !4264)
!4283 = !DILocation(line: 4911, column: 9, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 4910, column: 41)
!4285 = !DILocation(line: 4911, column: 9, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 4911, column: 9)
!4287 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 4911, column: 9)
!4288 = !DILocation(line: 4911, column: 9, scope: !4287)
!4289 = !DILocation(line: 4913, column: 35, scope: !4284)
!4290 = !DILocation(line: 4913, column: 16, scope: !4284)
!4291 = !DILocation(line: 4913, column: 9, scope: !4284)
!4292 = !DILocation(line: 4939, column: 5, scope: !4264)
!4293 = !DILocation(line: 4939, column: 8, scope: !4264)
!4294 = !DILocation(line: 4939, column: 16, scope: !4264)
!4295 = !{!2425, !2427, i64 120}
!4296 = !DILocation(line: 4949, column: 5, scope: !4264)
!4297 = !DILocation(line: 4949, column: 8, scope: !4264)
!4298 = !DILocation(line: 4949, column: 16, scope: !4264)
!4299 = !DILocation(line: 4962, column: 5, scope: !4264)
!4300 = !DILocation(line: 4962, column: 8, scope: !4264)
!4301 = !DILocation(line: 4962, column: 16, scope: !4264)
!4302 = !DILocation(line: 4976, column: 9, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4976, column: 9)
!4304 = !DILocation(line: 4976, column: 12, scope: !4303)
!4305 = !{!2425, !2426, i64 108}
!4306 = !DILocation(line: 4976, column: 26, scope: !4303)
!4307 = !DILocation(line: 4976, column: 9, scope: !4264)
!4308 = !DILocation(line: 4977, column: 31, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 4976, column: 36)
!4310 = !DILocation(line: 4977, column: 16, scope: !4309)
!4311 = !DILocation(line: 4977, column: 9, scope: !4309)
!4312 = !DILocation(line: 4980, column: 9, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4980, column: 9)
!4314 = !DILocation(line: 4980, column: 12, scope: !4313)
!4315 = !DILocation(line: 4980, column: 26, scope: !4313)
!4316 = !DILocation(line: 4980, column: 9, scope: !4264)
!4317 = !DILocation(line: 4981, column: 31, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 4980, column: 36)
!4319 = !DILocation(line: 4981, column: 16, scope: !4318)
!4320 = !DILocation(line: 4981, column: 9, scope: !4318)
!4321 = !DILocation(line: 4984, column: 9, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4984, column: 9)
!4323 = !DILocation(line: 4984, column: 12, scope: !4322)
!4324 = !DILocation(line: 4984, column: 26, scope: !4322)
!4325 = !DILocation(line: 4984, column: 9, scope: !4264)
!4326 = !DILocation(line: 4985, column: 32, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4322, file: !3, line: 4984, column: 37)
!4328 = !DILocation(line: 4985, column: 16, scope: !4327)
!4329 = !DILocation(line: 4985, column: 9, scope: !4327)
!4330 = !DILocation(line: 4988, column: 9, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4988, column: 9)
!4332 = !DILocation(line: 4988, column: 12, scope: !4331)
!4333 = !DILocation(line: 4988, column: 26, scope: !4331)
!4334 = !DILocation(line: 4988, column: 9, scope: !4264)
!4335 = !DILocation(line: 4989, column: 34, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 4988, column: 39)
!4337 = !DILocation(line: 4989, column: 16, scope: !4336)
!4338 = !DILocation(line: 4989, column: 9, scope: !4336)
!4339 = !DILocation(line: 4992, column: 9, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4992, column: 9)
!4341 = !DILocation(line: 4992, column: 12, scope: !4340)
!4342 = !DILocation(line: 4992, column: 26, scope: !4340)
!4343 = !DILocation(line: 4992, column: 9, scope: !4264)
!4344 = !DILocation(line: 4993, column: 35, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 4992, column: 40)
!4346 = !DILocation(line: 4993, column: 16, scope: !4345)
!4347 = !DILocation(line: 4993, column: 9, scope: !4345)
!4348 = !DILocation(line: 4996, column: 9, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 4996, column: 9)
!4350 = !DILocation(line: 4996, column: 12, scope: !4349)
!4351 = !DILocation(line: 4996, column: 26, scope: !4349)
!4352 = !DILocation(line: 4996, column: 9, scope: !4264)
!4353 = !DILocation(line: 4997, column: 36, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 4996, column: 41)
!4355 = !DILocation(line: 4997, column: 16, scope: !4354)
!4356 = !DILocation(line: 4997, column: 9, scope: !4354)
!4357 = !DILocation(line: 5000, column: 9, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5000, column: 9)
!4359 = !DILocation(line: 5000, column: 12, scope: !4358)
!4360 = !DILocation(line: 5000, column: 26, scope: !4358)
!4361 = !DILocation(line: 5000, column: 9, scope: !4264)
!4362 = !DILocation(line: 5001, column: 37, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 5000, column: 42)
!4364 = !DILocation(line: 5001, column: 16, scope: !4363)
!4365 = !DILocation(line: 5001, column: 9, scope: !4363)
!4366 = !DILocation(line: 5004, column: 9, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5004, column: 9)
!4368 = !DILocation(line: 5004, column: 12, scope: !4367)
!4369 = !DILocation(line: 5004, column: 26, scope: !4367)
!4370 = !DILocation(line: 5004, column: 9, scope: !4264)
!4371 = !DILocation(line: 5005, column: 33, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 5004, column: 38)
!4373 = !DILocation(line: 5005, column: 16, scope: !4372)
!4374 = !DILocation(line: 5005, column: 9, scope: !4372)
!4375 = !DILocation(line: 5008, column: 9, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5008, column: 9)
!4377 = !DILocation(line: 5008, column: 12, scope: !4376)
!4378 = !DILocation(line: 5008, column: 26, scope: !4376)
!4379 = !DILocation(line: 5008, column: 9, scope: !4264)
!4380 = !DILocation(line: 5009, column: 36, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 5008, column: 37)
!4382 = !DILocation(line: 5009, column: 16, scope: !4381)
!4383 = !DILocation(line: 5009, column: 9, scope: !4381)
!4384 = !DILocation(line: 5012, column: 9, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5012, column: 9)
!4386 = !DILocation(line: 5012, column: 12, scope: !4385)
!4387 = !DILocation(line: 5012, column: 26, scope: !4385)
!4388 = !DILocation(line: 5012, column: 9, scope: !4264)
!4389 = !DILocation(line: 5013, column: 36, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 5012, column: 37)
!4391 = !DILocation(line: 5013, column: 16, scope: !4390)
!4392 = !DILocation(line: 5013, column: 9, scope: !4390)
!4393 = !DILocation(line: 5016, column: 9, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5016, column: 9)
!4395 = !DILocation(line: 5016, column: 12, scope: !4394)
!4396 = !DILocation(line: 5016, column: 26, scope: !4394)
!4397 = !DILocation(line: 5016, column: 9, scope: !4264)
!4398 = !DILocation(line: 5017, column: 32, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 5016, column: 37)
!4400 = !DILocation(line: 5017, column: 16, scope: !4399)
!4401 = !DILocation(line: 5017, column: 9, scope: !4399)
!4402 = !DILocation(line: 5020, column: 9, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5020, column: 9)
!4404 = !DILocation(line: 5020, column: 12, scope: !4403)
!4405 = !DILocation(line: 5020, column: 26, scope: !4403)
!4406 = !DILocation(line: 5020, column: 9, scope: !4264)
!4407 = !DILocation(line: 5021, column: 34, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 5020, column: 39)
!4409 = !DILocation(line: 5021, column: 16, scope: !4408)
!4410 = !DILocation(line: 5021, column: 9, scope: !4408)
!4411 = !DILocation(line: 5024, column: 9, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5024, column: 9)
!4413 = !DILocation(line: 5024, column: 12, scope: !4412)
!4414 = !DILocation(line: 5024, column: 26, scope: !4412)
!4415 = !DILocation(line: 5024, column: 9, scope: !4264)
!4416 = !DILocation(line: 5025, column: 39, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 5024, column: 48)
!4418 = !DILocation(line: 5025, column: 16, scope: !4417)
!4419 = !DILocation(line: 5025, column: 9, scope: !4417)
!4420 = !DILocation(line: 5028, column: 9, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5028, column: 9)
!4422 = !DILocation(line: 5028, column: 12, scope: !4421)
!4423 = !DILocation(line: 5028, column: 26, scope: !4421)
!4424 = !DILocation(line: 5028, column: 9, scope: !4264)
!4425 = !DILocation(line: 5029, column: 36, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 5028, column: 41)
!4427 = !DILocation(line: 5029, column: 16, scope: !4426)
!4428 = !DILocation(line: 5029, column: 9, scope: !4426)
!4429 = !DILocation(line: 5032, column: 9, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5032, column: 9)
!4431 = !DILocation(line: 5032, column: 12, scope: !4430)
!4432 = !DILocation(line: 5032, column: 26, scope: !4430)
!4433 = !DILocation(line: 5032, column: 9, scope: !4264)
!4434 = !DILocation(line: 5033, column: 38, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 5032, column: 43)
!4436 = !DILocation(line: 5033, column: 16, scope: !4435)
!4437 = !DILocation(line: 5033, column: 9, scope: !4435)
!4438 = !DILocation(line: 5036, column: 9, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5036, column: 9)
!4440 = !DILocation(line: 5036, column: 12, scope: !4439)
!4441 = !DILocation(line: 5036, column: 26, scope: !4439)
!4442 = !DILocation(line: 5036, column: 9, scope: !4264)
!4443 = !DILocation(line: 5037, column: 35, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 5036, column: 40)
!4445 = !DILocation(line: 5037, column: 16, scope: !4444)
!4446 = !DILocation(line: 5037, column: 9, scope: !4444)
!4447 = !DILocation(line: 5040, column: 9, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5040, column: 9)
!4449 = !DILocation(line: 5040, column: 12, scope: !4448)
!4450 = !DILocation(line: 5040, column: 26, scope: !4448)
!4451 = !DILocation(line: 5040, column: 9, scope: !4264)
!4452 = !DILocation(line: 5041, column: 34, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 5040, column: 39)
!4454 = !DILocation(line: 5041, column: 16, scope: !4453)
!4455 = !DILocation(line: 5041, column: 9, scope: !4453)
!4456 = !DILocation(line: 5044, column: 9, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5044, column: 9)
!4458 = !DILocation(line: 5044, column: 12, scope: !4457)
!4459 = !DILocation(line: 5044, column: 26, scope: !4457)
!4460 = !DILocation(line: 5044, column: 9, scope: !4264)
!4461 = !DILocation(line: 5045, column: 33, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 5044, column: 38)
!4463 = !DILocation(line: 5045, column: 16, scope: !4462)
!4464 = !DILocation(line: 5045, column: 9, scope: !4462)
!4465 = !DILocation(line: 5048, column: 9, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5048, column: 9)
!4467 = !DILocation(line: 5048, column: 12, scope: !4466)
!4468 = !DILocation(line: 5048, column: 26, scope: !4466)
!4469 = !DILocation(line: 5048, column: 9, scope: !4264)
!4470 = !DILocation(line: 5049, column: 34, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 5048, column: 39)
!4472 = !DILocation(line: 5049, column: 16, scope: !4471)
!4473 = !DILocation(line: 5049, column: 9, scope: !4471)
!4474 = !DILocation(line: 5052, column: 9, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5052, column: 9)
!4476 = !DILocation(line: 5052, column: 12, scope: !4475)
!4477 = !DILocation(line: 5052, column: 26, scope: !4475)
!4478 = !DILocation(line: 5052, column: 9, scope: !4264)
!4479 = !DILocation(line: 5053, column: 42, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 5052, column: 44)
!4481 = !DILocation(line: 5053, column: 16, scope: !4480)
!4482 = !DILocation(line: 5053, column: 9, scope: !4480)
!4483 = !DILocation(line: 5056, column: 9, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5056, column: 9)
!4485 = !DILocation(line: 5056, column: 12, scope: !4484)
!4486 = !DILocation(line: 5056, column: 26, scope: !4484)
!4487 = !DILocation(line: 5056, column: 9, scope: !4264)
!4488 = !DILocation(line: 5057, column: 41, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 5056, column: 43)
!4490 = !DILocation(line: 5057, column: 16, scope: !4489)
!4491 = !DILocation(line: 5057, column: 9, scope: !4489)
!4492 = !DILocation(line: 5060, column: 9, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5060, column: 9)
!4494 = !DILocation(line: 5060, column: 12, scope: !4493)
!4495 = !DILocation(line: 5060, column: 26, scope: !4493)
!4496 = !DILocation(line: 5060, column: 9, scope: !4264)
!4497 = !DILocation(line: 5061, column: 44, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 5060, column: 49)
!4499 = !DILocation(line: 5061, column: 16, scope: !4498)
!4500 = !DILocation(line: 5061, column: 9, scope: !4498)
!4501 = !DILocation(line: 5064, column: 9, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5064, column: 9)
!4503 = !DILocation(line: 5064, column: 12, scope: !4502)
!4504 = !DILocation(line: 5064, column: 26, scope: !4502)
!4505 = !DILocation(line: 5064, column: 9, scope: !4264)
!4506 = !DILocation(line: 5065, column: 33, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 5064, column: 38)
!4508 = !DILocation(line: 5065, column: 16, scope: !4507)
!4509 = !DILocation(line: 5065, column: 9, scope: !4507)
!4510 = !DILocation(line: 5069, column: 9, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5069, column: 9)
!4512 = !DILocation(line: 5069, column: 12, scope: !4511)
!4513 = !DILocation(line: 5069, column: 29, scope: !4511)
!4514 = !DILocation(line: 5069, column: 26, scope: !4511)
!4515 = !DILocation(line: 5069, column: 9, scope: !4264)
!4516 = !DILocation(line: 5070, column: 32, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 5069, column: 54)
!4518 = !DILocation(line: 5070, column: 16, scope: !4517)
!4519 = !DILocation(line: 5070, column: 9, scope: !4517)
!4520 = !DILocation(line: 5074, column: 9, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 5074, column: 9)
!4522 = !DILocation(line: 5074, column: 12, scope: !4521)
!4523 = !DILocation(line: 5074, column: 29, scope: !4521)
!4524 = !DILocation(line: 5074, column: 26, scope: !4521)
!4525 = !DILocation(line: 5074, column: 9, scope: !4264)
!4526 = !DILocation(line: 5075, column: 34, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 5074, column: 56)
!4528 = !DILocation(line: 5075, column: 16, scope: !4527)
!4529 = !DILocation(line: 5075, column: 9, scope: !4527)
!4530 = !DILocation(line: 5080, column: 5, scope: !4264)
!4531 = !DILocation(line: 5081, column: 1, scope: !4264)
!4532 = !DISubprogram(name: "ap_hook_post_config", scope: !175, file: !175, line: 1359, type: !4533, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{null, !4535, !214, !214, !14}
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_HOOK_post_config_t", file: !175, line: 1359, baseType: !4537)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!14, !73, !73, !73, !298}
!4539 = distinct !DISubprogram(name: "dav_init_handler", scope: !3, file: !3, line: 112, type: !4537, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4540)
!4540 = !{!4541, !4542, !4543, !4544}
!4541 = !DILocalVariable(name: "p", arg: 1, scope: !4539, file: !3, line: 112, type: !73)
!4542 = !DILocalVariable(name: "plog", arg: 2, scope: !4539, file: !3, line: 112, type: !73)
!4543 = !DILocalVariable(name: "ptemp", arg: 3, scope: !4539, file: !3, line: 112, type: !73)
!4544 = !DILocalVariable(name: "s", arg: 4, scope: !4539, file: !3, line: 113, type: !298)
!4545 = !DILocation(line: 112, column: 41, scope: !4539)
!4546 = !DILocation(line: 112, column: 56, scope: !4539)
!4547 = !DILocation(line: 112, column: 74, scope: !4539)
!4548 = !DILocation(line: 113, column: 42, scope: !4539)
!4549 = !DILocation(line: 118, column: 50, scope: !4539)
!4550 = !DILocation(line: 118, column: 31, scope: !4539)
!4551 = !DILocation(line: 118, column: 29, scope: !4539)
!4552 = !DILocation(line: 119, column: 52, scope: !4539)
!4553 = !DILocation(line: 119, column: 33, scope: !4539)
!4554 = !DILocation(line: 119, column: 31, scope: !4539)
!4555 = !DILocation(line: 121, column: 5, scope: !4539)
!4556 = !DISubprogram(name: "ap_hook_fixups", scope: !4557, file: !4557, line: 425, type: !4558, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4557 = !DIFile(filename: "include/http_request.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "50af58554133fe76584225d134c5ce9f")
!4558 = !DISubroutineType(types: !4559)
!4559 = !{null, !4560, !214, !214, !14}
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_typedef, name: "ap_HOOK_fixups_t", file: !4557, line: 425, baseType: !4262)
!4562 = distinct !DISubprogram(name: "dav_fixups", scope: !3, file: !3, line: 5083, type: !4262, scopeLine: 5084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4563)
!4563 = !{!4564, !4565}
!4564 = !DILocalVariable(name: "r", arg: 1, scope: !4562, file: !3, line: 5083, type: !286)
!4565 = !DILocalVariable(name: "conf", scope: !4562, file: !3, line: 5085, type: !1108)
!4566 = !DILocation(line: 5083, column: 36, scope: !4562)
!4567 = !DILocation(line: 5085, column: 5, scope: !4562)
!4568 = !DILocation(line: 5085, column: 19, scope: !4562)
!4569 = !DILocation(line: 5088, column: 9, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 5088, column: 9)
!4571 = !DILocation(line: 5088, column: 12, scope: !4570)
!4572 = !{!2425, !2426, i64 56}
!4573 = !DILocation(line: 5088, column: 25, scope: !4570)
!4574 = !DILocation(line: 5088, column: 29, scope: !4570)
!4575 = !DILocation(line: 5088, column: 32, scope: !4570)
!4576 = !{!2425, !2417, i64 40}
!4577 = !DILocation(line: 5088, column: 9, scope: !4562)
!4578 = !DILocation(line: 5089, column: 9, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 5088, column: 38)
!4580 = !DILocation(line: 5092, column: 28, scope: !4562)
!4581 = !DILocation(line: 5092, column: 10, scope: !4562)
!4582 = !DILocation(line: 5096, column: 9, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 5096, column: 9)
!4584 = !DILocation(line: 5096, column: 15, scope: !4583)
!4585 = !DILocation(line: 5096, column: 24, scope: !4583)
!4586 = !DILocation(line: 5096, column: 9, scope: !4562)
!4587 = !DILocation(line: 5097, column: 9, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 5096, column: 33)
!4589 = !DILocation(line: 5104, column: 9, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 5104, column: 9)
!4591 = !DILocation(line: 5104, column: 12, scope: !4590)
!4592 = !DILocation(line: 5104, column: 26, scope: !4590)
!4593 = !DILocation(line: 5104, column: 9, scope: !4562)
!4594 = !DILocation(line: 5117, column: 14, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 5117, column: 13)
!4596 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 5104, column: 36)
!4597 = !DILocation(line: 5117, column: 20, scope: !4595)
!4598 = !DILocation(line: 5117, column: 30, scope: !4595)
!4599 = !DILocation(line: 5117, column: 37, scope: !4595)
!4600 = !{!3193, !2426, i64 0}
!4601 = !DILocation(line: 5117, column: 13, scope: !4596)
!4602 = !DILocation(line: 5118, column: 13, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 5117, column: 49)
!4604 = !DILocation(line: 5120, column: 5, scope: !4596)
!4605 = !DILocation(line: 5128, column: 9, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 5128, column: 9)
!4607 = !DILocation(line: 5128, column: 12, scope: !4606)
!4608 = !DILocation(line: 5128, column: 26, scope: !4606)
!4609 = !DILocation(line: 5128, column: 9, scope: !4562)
!4610 = !DILocation(line: 5131, column: 9, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 5128, column: 37)
!4612 = !DILocation(line: 5131, column: 12, scope: !4611)
!4613 = !DILocation(line: 5131, column: 20, scope: !4611)
!4614 = !DILocation(line: 5132, column: 9, scope: !4611)
!4615 = !DILocation(line: 5135, column: 5, scope: !4562)
!4616 = !DILocation(line: 5136, column: 1, scope: !4562)
!4617 = distinct !DISubprogram(name: "dav_core_deliver_report", scope: !3, file: !3, line: 4274, type: !1068, scopeLine: 4278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4618)
!4618 = !{!4619, !4620, !4621, !4622, !4623, !4624}
!4619 = !DILocalVariable(name: "r", arg: 1, scope: !4617, file: !3, line: 4274, type: !286)
!4620 = !DILocalVariable(name: "resource", arg: 2, scope: !4617, file: !3, line: 4275, type: !747)
!4621 = !DILocalVariable(name: "doc", arg: 3, scope: !4617, file: !3, line: 4276, type: !1070)
!4622 = !DILocalVariable(name: "output", arg: 4, scope: !4617, file: !3, line: 4277, type: !501)
!4623 = !DILocalVariable(name: "err", arg: 5, scope: !4617, file: !3, line: 4277, type: !1077)
!4624 = !DILocalVariable(name: "vsn_hooks", scope: !4617, file: !3, line: 4279, type: !1208)
!4625 = !DILocation(line: 4274, column: 49, scope: !4617)
!4626 = !DILocation(line: 4275, column: 47, scope: !4617)
!4627 = !DILocation(line: 4276, column: 46, scope: !4617)
!4628 = !DILocation(line: 4277, column: 40, scope: !4617)
!4629 = !DILocation(line: 4277, column: 60, scope: !4617)
!4630 = !DILocation(line: 4279, column: 5, scope: !4617)
!4631 = !DILocation(line: 4279, column: 26, scope: !4617)
!4632 = !DILocation(line: 4279, column: 38, scope: !4617)
!4633 = !DILocation(line: 4281, column: 9, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 4281, column: 9)
!4635 = !DILocation(line: 4281, column: 9, scope: !4617)
!4636 = !DILocation(line: 4282, column: 18, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 4281, column: 20)
!4638 = !DILocation(line: 4282, column: 29, scope: !4637)
!4639 = !{!4640, !2417, i64 80}
!4640 = !{!"dav_hooks_vsn", !2417, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2417, i64 80, !2417, i64 88, !2417, i64 96, !2417, i64 104, !2417, i64 112, !2417, i64 120, !2417, i64 128, !2417, i64 136, !2417, i64 144, !2417, i64 152}
!4641 = !DILocation(line: 4282, column: 45, scope: !4637)
!4642 = !DILocation(line: 4282, column: 48, scope: !4637)
!4643 = !DILocation(line: 4282, column: 58, scope: !4637)
!4644 = !DILocation(line: 4283, column: 45, scope: !4637)
!4645 = !DILocation(line: 4283, column: 48, scope: !4637)
!4646 = !DILocation(line: 4282, column: 16, scope: !4637)
!4647 = !DILocation(line: 4282, column: 10, scope: !4637)
!4648 = !DILocation(line: 4282, column: 14, scope: !4637)
!4649 = !DILocation(line: 4284, column: 9, scope: !4637)
!4650 = !DILocation(line: 4287, column: 5, scope: !4617)
!4651 = !DILocation(line: 4288, column: 1, scope: !4617)
!4652 = distinct !DISubprogram(name: "dav_core_gather_reports", scope: !3, file: !3, line: 4290, type: !1089, scopeLine: 4295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4653)
!4653 = !{!4654, !4655, !4656, !4657, !4658, !4659, !4662}
!4654 = !DILocalVariable(name: "r", arg: 1, scope: !4652, file: !3, line: 4291, type: !286)
!4655 = !DILocalVariable(name: "resource", arg: 2, scope: !4652, file: !3, line: 4292, type: !747)
!4656 = !DILocalVariable(name: "reports", arg: 3, scope: !4652, file: !3, line: 4293, type: !450)
!4657 = !DILocalVariable(name: "err", arg: 4, scope: !4652, file: !3, line: 4294, type: !1077)
!4658 = !DILocalVariable(name: "vsn_hooks", scope: !4652, file: !3, line: 4296, type: !1208)
!4659 = !DILocalVariable(name: "rp", scope: !4660, file: !3, line: 4299, type: !1248)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !3, line: 4298, column: 20)
!4661 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 4298, column: 9)
!4662 = !DILocalVariable(name: "report", scope: !4663, file: !3, line: 4304, type: !4664)
!4663 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 4302, column: 32)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!4665 = !DILocation(line: 4291, column: 18, scope: !4652)
!4666 = !DILocation(line: 4292, column: 25, scope: !4652)
!4667 = !DILocation(line: 4293, column: 25, scope: !4652)
!4668 = !DILocation(line: 4294, column: 17, scope: !4652)
!4669 = !DILocation(line: 4296, column: 5, scope: !4652)
!4670 = !DILocation(line: 4296, column: 26, scope: !4652)
!4671 = !DILocation(line: 4296, column: 38, scope: !4652)
!4672 = !DILocation(line: 4298, column: 9, scope: !4661)
!4673 = !DILocation(line: 4298, column: 9, scope: !4652)
!4674 = !DILocation(line: 4299, column: 9, scope: !4660)
!4675 = !DILocation(line: 4299, column: 32, scope: !4660)
!4676 = !DILocation(line: 4301, column: 20, scope: !4660)
!4677 = !DILocation(line: 4301, column: 31, scope: !4660)
!4678 = !{!4640, !2417, i64 64}
!4679 = !DILocation(line: 4301, column: 46, scope: !4660)
!4680 = !DILocation(line: 4301, column: 18, scope: !4660)
!4681 = !DILocation(line: 4301, column: 11, scope: !4660)
!4682 = !DILocation(line: 4301, column: 16, scope: !4660)
!4683 = !DILocation(line: 4302, column: 9, scope: !4660)
!4684 = !DILocation(line: 4302, column: 16, scope: !4660)
!4685 = !DILocation(line: 4302, column: 19, scope: !4660)
!4686 = !DILocation(line: 4302, column: 22, scope: !4660)
!4687 = !DILocation(line: 4302, column: 26, scope: !4660)
!4688 = !{!2533, !2417, i64 8}
!4689 = !DILocation(line: 0, scope: !4660)
!4690 = !DILocation(line: 4304, column: 13, scope: !4663)
!4691 = !DILocation(line: 4304, column: 30, scope: !4663)
!4692 = !DILocation(line: 4304, column: 54, scope: !4663)
!4693 = !DILocation(line: 4304, column: 39, scope: !4663)
!4694 = !DILocation(line: 4306, column: 31, scope: !4663)
!4695 = !DILocation(line: 4306, column: 35, scope: !4663)
!4696 = !{!2533, !2417, i64 0}
!4697 = !DILocation(line: 4306, column: 13, scope: !4663)
!4698 = !DILocation(line: 4306, column: 21, scope: !4663)
!4699 = !DILocation(line: 4306, column: 29, scope: !4663)
!4700 = !DILocation(line: 4307, column: 28, scope: !4663)
!4701 = !DILocation(line: 4307, column: 32, scope: !4663)
!4702 = !DILocation(line: 4307, column: 13, scope: !4663)
!4703 = !DILocation(line: 4307, column: 21, scope: !4663)
!4704 = !DILocation(line: 4307, column: 26, scope: !4663)
!4705 = !DILocation(line: 4309, column: 15, scope: !4663)
!4706 = !DILocation(line: 4310, column: 9, scope: !4660)
!4707 = distinct !{!4707, !4683, !4706, !2563}
!4708 = !DILocation(line: 4311, column: 5, scope: !4661)
!4709 = !DILocation(line: 4311, column: 5, scope: !4660)
!4710 = !DILocation(line: 4313, column: 1, scope: !4652)
!4711 = !DISubprogram(name: "dav_core_register_uris", scope: !141, file: !141, line: 1091, type: !2401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4712 = distinct !DISubprogram(name: "dav_error_response", scope: !3, file: !3, line: 339, type: !4713, scopeLine: 340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4715)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{!14, !286, !14, !10}
!4715 = !{!4716, !4717, !4718}
!4716 = !DILocalVariable(name: "r", arg: 1, scope: !4712, file: !3, line: 339, type: !286)
!4717 = !DILocalVariable(name: "status", arg: 2, scope: !4712, file: !3, line: 339, type: !14)
!4718 = !DILocalVariable(name: "body", arg: 3, scope: !4712, file: !3, line: 339, type: !10)
!4719 = !DILocation(line: 339, column: 44, scope: !4712)
!4720 = !DILocation(line: 339, column: 51, scope: !4712)
!4721 = !DILocation(line: 339, column: 71, scope: !4712)
!4722 = !DILocation(line: 341, column: 17, scope: !4712)
!4723 = !DILocation(line: 341, column: 5, scope: !4712)
!4724 = !DILocation(line: 341, column: 8, scope: !4712)
!4725 = !DILocation(line: 341, column: 15, scope: !4712)
!4726 = !DILocation(line: 342, column: 41, scope: !4712)
!4727 = !DILocation(line: 342, column: 22, scope: !4712)
!4728 = !DILocation(line: 342, column: 5, scope: !4712)
!4729 = !DILocation(line: 342, column: 8, scope: !4712)
!4730 = !DILocation(line: 342, column: 20, scope: !4712)
!4731 = !{!2425, !2417, i64 96}
!4732 = !DILocation(line: 344, column: 25, scope: !4712)
!4733 = !DILocation(line: 344, column: 5, scope: !4712)
!4734 = !DILocation(line: 347, column: 15, scope: !4712)
!4735 = !DILocation(line: 349, column: 15, scope: !4712)
!4736 = !DILocation(line: 349, column: 18, scope: !4712)
!4737 = !DILocation(line: 351, column: 16, scope: !4712)
!4738 = !DILocation(line: 351, column: 19, scope: !4712)
!4739 = !DILocation(line: 353, column: 15, scope: !4712)
!4740 = !DILocation(line: 355, column: 41, scope: !4712)
!4741 = !DILocation(line: 355, column: 15, scope: !4712)
!4742 = !DILocation(line: 347, column: 5, scope: !4712)
!4743 = !DILocation(line: 363, column: 5, scope: !4712)
!4744 = distinct !DISubprogram(name: "dav_method_get", scope: !3, file: !3, line: 866, type: !4262, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4745)
!4745 = !{!4746, !4747, !4748, !4749}
!4746 = !DILocalVariable(name: "r", arg: 1, scope: !4744, file: !3, line: 866, type: !286)
!4747 = !DILocalVariable(name: "resource", scope: !4744, file: !3, line: 868, type: !776)
!4748 = !DILocalVariable(name: "err", scope: !4744, file: !3, line: 869, type: !272)
!4749 = !DILocalVariable(name: "status", scope: !4744, file: !3, line: 870, type: !14)
!4750 = !DILocation(line: 866, column: 40, scope: !4744)
!4751 = !DILocation(line: 868, column: 5, scope: !4744)
!4752 = !DILocation(line: 868, column: 19, scope: !4744)
!4753 = !DILocation(line: 869, column: 5, scope: !4744)
!4754 = !DILocation(line: 869, column: 16, scope: !4744)
!4755 = !DILocation(line: 870, column: 5, scope: !4744)
!4756 = !DILocation(line: 870, column: 9, scope: !4744)
!4757 = !DILocation(line: 876, column: 28, scope: !4744)
!4758 = !DILocation(line: 876, column: 11, scope: !4744)
!4759 = !DILocation(line: 876, column: 9, scope: !4744)
!4760 = !DILocation(line: 878, column: 9, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 878, column: 9)
!4762 = !DILocation(line: 878, column: 13, scope: !4761)
!4763 = !DILocation(line: 878, column: 9, scope: !4744)
!4764 = !DILocation(line: 879, column: 31, scope: !4761)
!4765 = !DILocation(line: 879, column: 34, scope: !4761)
!4766 = !DILocation(line: 879, column: 16, scope: !4761)
!4767 = !DILocation(line: 879, column: 9, scope: !4761)
!4768 = !DILocation(line: 882, column: 37, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 882, column: 9)
!4770 = !DILocation(line: 882, column: 40, scope: !4769)
!4771 = !DILocation(line: 882, column: 9, scope: !4769)
!4772 = !DILocation(line: 882, column: 68, scope: !4769)
!4773 = !DILocation(line: 883, column: 13, scope: !4769)
!4774 = !DILocation(line: 883, column: 16, scope: !4769)
!4775 = !DILocation(line: 882, column: 9, scope: !4744)
!4776 = !DILocation(line: 884, column: 31, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 883, column: 21)
!4778 = !DILocation(line: 884, column: 34, scope: !4777)
!4779 = !DILocation(line: 884, column: 16, scope: !4777)
!4780 = !DILocation(line: 884, column: 9, scope: !4777)
!4781 = !DILocation(line: 887, column: 10, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 887, column: 9)
!4783 = !DILocation(line: 887, column: 20, scope: !4782)
!4784 = !{!3324, !2426, i64 4}
!4785 = !DILocation(line: 887, column: 9, scope: !4744)
!4786 = !DILocation(line: 889, column: 9, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 887, column: 28)
!4788 = !DILocation(line: 893, column: 18, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 893, column: 9)
!4790 = !DILocation(line: 893, column: 28, scope: !4789)
!4791 = !{!3324, !2417, i64 40}
!4792 = !DILocation(line: 893, column: 35, scope: !4789)
!4793 = !{!3193, !2417, i64 72}
!4794 = !DILocation(line: 893, column: 48, scope: !4789)
!4795 = !DILocation(line: 893, column: 51, scope: !4789)
!4796 = !DILocation(line: 893, column: 16, scope: !4789)
!4797 = !DILocation(line: 893, column: 14, scope: !4789)
!4798 = !DILocation(line: 893, column: 62, scope: !4789)
!4799 = !DILocation(line: 893, column: 9, scope: !4744)
!4800 = !DILocation(line: 894, column: 30, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4789, file: !3, line: 893, column: 71)
!4802 = !DILocation(line: 894, column: 33, scope: !4801)
!4803 = !DILocation(line: 894, column: 39, scope: !4801)
!4804 = !DILocation(line: 894, column: 44, scope: !4801)
!4805 = !DILocation(line: 896, column: 30, scope: !4801)
!4806 = !DILocation(line: 894, column: 15, scope: !4801)
!4807 = !DILocation(line: 894, column: 13, scope: !4801)
!4808 = !DILocation(line: 897, column: 31, scope: !4801)
!4809 = !DILocation(line: 897, column: 34, scope: !4801)
!4810 = !DILocation(line: 897, column: 16, scope: !4801)
!4811 = !DILocation(line: 897, column: 9, scope: !4801)
!4812 = !DILocation(line: 901, column: 34, scope: !4744)
!4813 = !DILocation(line: 901, column: 14, scope: !4744)
!4814 = !DILocation(line: 901, column: 12, scope: !4744)
!4815 = !DILocation(line: 902, column: 9, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 902, column: 9)
!4817 = !DILocation(line: 902, column: 9, scope: !4744)
!4818 = !DILocation(line: 903, column: 14, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 902, column: 17)
!4820 = !DILocation(line: 903, column: 7, scope: !4819)
!4821 = !DILocation(line: 906, column: 9, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 906, column: 9)
!4823 = !DILocation(line: 906, column: 12, scope: !4822)
!4824 = !{!2425, !2426, i64 64}
!4825 = !DILocation(line: 906, column: 9, scope: !4744)
!4826 = !DILocation(line: 907, column: 9, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 906, column: 25)
!4828 = !DILocation(line: 911, column: 18, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 911, column: 9)
!4830 = !DILocation(line: 911, column: 28, scope: !4829)
!4831 = !DILocation(line: 911, column: 35, scope: !4829)
!4832 = !{!3193, !2417, i64 80}
!4833 = !DILocation(line: 911, column: 44, scope: !4829)
!4834 = !DILocation(line: 912, column: 44, scope: !4829)
!4835 = !DILocation(line: 912, column: 47, scope: !4829)
!4836 = !DILocation(line: 911, column: 16, scope: !4829)
!4837 = !DILocation(line: 911, column: 14, scope: !4829)
!4838 = !DILocation(line: 912, column: 64, scope: !4829)
!4839 = !DILocation(line: 911, column: 9, scope: !4744)
!4840 = !DILocation(line: 913, column: 30, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 912, column: 73)
!4842 = !DILocation(line: 913, column: 33, scope: !4841)
!4843 = !DILocation(line: 913, column: 39, scope: !4841)
!4844 = !DILocation(line: 913, column: 44, scope: !4841)
!4845 = !DILocation(line: 915, column: 30, scope: !4841)
!4846 = !DILocation(line: 913, column: 15, scope: !4841)
!4847 = !DILocation(line: 913, column: 13, scope: !4841)
!4848 = !DILocation(line: 916, column: 31, scope: !4841)
!4849 = !DILocation(line: 916, column: 34, scope: !4841)
!4850 = !DILocation(line: 916, column: 16, scope: !4841)
!4851 = !DILocation(line: 916, column: 9, scope: !4841)
!4852 = !DILocation(line: 919, column: 5, scope: !4744)
!4853 = !DILocation(line: 920, column: 1, scope: !4744)
!4854 = distinct !DISubprogram(name: "dav_method_put", scope: !3, file: !3, line: 951, type: !4262, scopeLine: 952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4855)
!4855 = !{!4856, !4857, !4858, !4859, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4880, !4883, !4884, !4885, !4887, !4890, !4891, !4895, !4896}
!4856 = !DILocalVariable(name: "r", arg: 1, scope: !4854, file: !3, line: 951, type: !286)
!4857 = !DILocalVariable(name: "resource", scope: !4854, file: !3, line: 953, type: !776)
!4858 = !DILocalVariable(name: "resource_state", scope: !4854, file: !3, line: 954, type: !14)
!4859 = !DILocalVariable(name: "av_info", scope: !4854, file: !3, line: 955, type: !4860)
!4860 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_auto_version_info", file: !141, line: 2198, baseType: !4861)
!4861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 2193, size: 192, elements: !4862)
!4862 = !{!4863, !4864, !4865, !4866}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "resource_versioned", scope: !4861, file: !141, line: 2194, baseType: !14, size: 32)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "resource_checkedout", scope: !4861, file: !141, line: 2195, baseType: !14, size: 32, offset: 32)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "parent_checkedout", scope: !4861, file: !141, line: 2196, baseType: !14, size: 32, offset: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "parent_resource", scope: !4861, file: !141, line: 2197, baseType: !776, size: 64, offset: 128)
!4867 = !DILocalVariable(name: "locks_hooks", scope: !4854, file: !3, line: 956, type: !880)
!4868 = !DILocalVariable(name: "body", scope: !4854, file: !3, line: 957, type: !10)
!4869 = !DILocalVariable(name: "err", scope: !4854, file: !3, line: 958, type: !272)
!4870 = !DILocalVariable(name: "err2", scope: !4854, file: !3, line: 959, type: !272)
!4871 = !DILocalVariable(name: "mode", scope: !4854, file: !3, line: 960, type: !790)
!4872 = !DILocalVariable(name: "stream", scope: !4854, file: !3, line: 961, type: !792)
!4873 = !DILocalVariable(name: "multi_response", scope: !4854, file: !3, line: 962, type: !826)
!4874 = !DILocalVariable(name: "has_range", scope: !4854, file: !3, line: 963, type: !14)
!4875 = !DILocalVariable(name: "range_start", scope: !4854, file: !3, line: 964, type: !49)
!4876 = !DILocalVariable(name: "range_end", scope: !4854, file: !3, line: 965, type: !49)
!4877 = !DILocalVariable(name: "status", scope: !4878, file: !3, line: 1041, type: !14)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1040, column: 67)
!4879 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1039, column: 9)
!4880 = !DILocalVariable(name: "bb", scope: !4881, file: !3, line: 1060, type: !503)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 1059, column: 22)
!4882 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1059, column: 9)
!4883 = !DILocalVariable(name: "b", scope: !4881, file: !3, line: 1061, type: !27)
!4884 = !DILocalVariable(name: "seen_eos", scope: !4881, file: !3, line: 1062, type: !14)
!4885 = !DILocalVariable(name: "rc", scope: !4886, file: !3, line: 1067, type: !25)
!4886 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 1066, column: 12)
!4887 = !DILocalVariable(name: "http_err", scope: !4888, file: !3, line: 1073, type: !14)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1072, column: 36)
!4889 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 1072, column: 17)
!4890 = !DILocalVariable(name: "msg", scope: !4888, file: !3, line: 1074, type: !216)
!4891 = !DILocalVariable(name: "data", scope: !4892, file: !3, line: 1087, type: !10)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 1086, column: 13)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 1083, column: 13)
!4894 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 1083, column: 13)
!4895 = !DILocalVariable(name: "len", scope: !4892, file: !3, line: 1088, type: !43)
!4896 = !DILocalVariable(name: "lockdb", scope: !4897, file: !3, line: 1158, type: !875)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 1157, column: 30)
!4898 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1157, column: 9)
!4899 = !DILocation(line: 951, column: 40, scope: !4854)
!4900 = !DILocation(line: 953, column: 5, scope: !4854)
!4901 = !DILocation(line: 953, column: 19, scope: !4854)
!4902 = !DILocation(line: 954, column: 5, scope: !4854)
!4903 = !DILocation(line: 954, column: 9, scope: !4854)
!4904 = !DILocation(line: 955, column: 5, scope: !4854)
!4905 = !DILocation(line: 955, column: 27, scope: !4854)
!4906 = !DILocation(line: 956, column: 5, scope: !4854)
!4907 = !DILocation(line: 956, column: 28, scope: !4854)
!4908 = !DILocation(line: 956, column: 42, scope: !4854)
!4909 = !DILocation(line: 957, column: 5, scope: !4854)
!4910 = !DILocation(line: 957, column: 17, scope: !4854)
!4911 = !DILocation(line: 958, column: 5, scope: !4854)
!4912 = !DILocation(line: 958, column: 16, scope: !4854)
!4913 = !DILocation(line: 959, column: 5, scope: !4854)
!4914 = !DILocation(line: 959, column: 16, scope: !4854)
!4915 = !DILocation(line: 960, column: 5, scope: !4854)
!4916 = !DILocation(line: 960, column: 21, scope: !4854)
!4917 = !DILocation(line: 961, column: 5, scope: !4854)
!4918 = !DILocation(line: 961, column: 17, scope: !4854)
!4919 = !DILocation(line: 962, column: 5, scope: !4854)
!4920 = !DILocation(line: 962, column: 19, scope: !4854)
!4921 = !DILocation(line: 963, column: 5, scope: !4854)
!4922 = !DILocation(line: 963, column: 9, scope: !4854)
!4923 = !DILocation(line: 964, column: 5, scope: !4854)
!4924 = !DILocation(line: 964, column: 15, scope: !4854)
!4925 = !DILocation(line: 965, column: 5, scope: !4854)
!4926 = !DILocation(line: 965, column: 15, scope: !4854)
!4927 = !DILocation(line: 968, column: 28, scope: !4854)
!4928 = !DILocation(line: 968, column: 11, scope: !4854)
!4929 = !DILocation(line: 968, column: 9, scope: !4854)
!4930 = !DILocation(line: 970, column: 9, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 970, column: 9)
!4932 = !DILocation(line: 970, column: 13, scope: !4931)
!4933 = !DILocation(line: 970, column: 9, scope: !4854)
!4934 = !DILocation(line: 971, column: 31, scope: !4931)
!4935 = !DILocation(line: 971, column: 34, scope: !4931)
!4936 = !DILocation(line: 971, column: 16, scope: !4931)
!4937 = !DILocation(line: 971, column: 9, scope: !4931)
!4938 = !DILocation(line: 974, column: 37, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 974, column: 9)
!4940 = !DILocation(line: 974, column: 40, scope: !4939)
!4941 = !DILocation(line: 974, column: 9, scope: !4939)
!4942 = !DILocation(line: 974, column: 68, scope: !4939)
!4943 = !DILocation(line: 975, column: 13, scope: !4939)
!4944 = !DILocation(line: 975, column: 16, scope: !4939)
!4945 = !DILocation(line: 974, column: 9, scope: !4854)
!4946 = !DILocation(line: 976, column: 31, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4939, file: !3, line: 975, column: 21)
!4948 = !DILocation(line: 976, column: 34, scope: !4947)
!4949 = !DILocation(line: 976, column: 16, scope: !4947)
!4950 = !DILocation(line: 976, column: 9, scope: !4947)
!4951 = !DILocation(line: 980, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 980, column: 9)
!4953 = !DILocation(line: 980, column: 19, scope: !4952)
!4954 = !{!3324, !2418, i64 0}
!4955 = !DILocation(line: 980, column: 24, scope: !4952)
!4956 = !DILocation(line: 981, column: 9, scope: !4952)
!4957 = !DILocation(line: 981, column: 12, scope: !4952)
!4958 = !DILocation(line: 981, column: 22, scope: !4952)
!4959 = !DILocation(line: 981, column: 27, scope: !4952)
!4960 = !DILocation(line: 980, column: 9, scope: !4854)
!4961 = !DILocation(line: 982, column: 29, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 981, column: 57)
!4963 = !DILocation(line: 982, column: 32, scope: !4962)
!4964 = !DILocation(line: 984, column: 29, scope: !4962)
!4965 = !DILocation(line: 982, column: 16, scope: !4962)
!4966 = !DILocation(line: 982, column: 14, scope: !4962)
!4967 = !DILocation(line: 985, column: 35, scope: !4962)
!4968 = !DILocation(line: 985, column: 53, scope: !4962)
!4969 = !DILocation(line: 985, column: 16, scope: !4962)
!4970 = !DILocation(line: 985, column: 9, scope: !4962)
!4971 = !DILocation(line: 989, column: 9, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 989, column: 9)
!4973 = !DILocation(line: 989, column: 19, scope: !4972)
!4974 = !{!3324, !2426, i64 8}
!4975 = !DILocation(line: 989, column: 9, scope: !4854)
!4976 = !DILocation(line: 990, column: 35, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 989, column: 31)
!4978 = !DILocation(line: 990, column: 16, scope: !4977)
!4979 = !DILocation(line: 990, column: 9, scope: !4977)
!4980 = !DILocation(line: 995, column: 45, scope: !4854)
!4981 = !DILocation(line: 995, column: 48, scope: !4854)
!4982 = !DILocation(line: 995, column: 22, scope: !4854)
!4983 = !DILocation(line: 995, column: 20, scope: !4854)
!4984 = !DILocation(line: 1006, column: 37, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1006, column: 9)
!4986 = !DILocation(line: 1006, column: 40, scope: !4985)
!4987 = !DILocation(line: 1007, column: 37, scope: !4985)
!4988 = !DILocation(line: 1007, column: 52, scope: !4985)
!4989 = !DILocation(line: 1006, column: 16, scope: !4985)
!4990 = !DILocation(line: 1006, column: 14, scope: !4985)
!4991 = !DILocation(line: 1009, column: 67, scope: !4985)
!4992 = !DILocation(line: 1006, column: 9, scope: !4854)
!4993 = !DILocation(line: 1011, column: 31, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 1009, column: 76)
!4995 = !DILocation(line: 1011, column: 34, scope: !4994)
!4996 = !DILocation(line: 1011, column: 39, scope: !4994)
!4997 = !DILocation(line: 1011, column: 16, scope: !4994)
!4998 = !DILocation(line: 1011, column: 9, scope: !4994)
!4999 = !DILocation(line: 1014, column: 33, scope: !4854)
!5000 = !DILocation(line: 1014, column: 17, scope: !4854)
!5001 = !DILocation(line: 1014, column: 15, scope: !4854)
!5002 = !DILocation(line: 1015, column: 9, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1015, column: 9)
!5004 = !DILocation(line: 1015, column: 19, scope: !5003)
!5005 = !DILocation(line: 1015, column: 9, scope: !4854)
!5006 = !DILocation(line: 1019, column: 29, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 1015, column: 24)
!5008 = !DILocation(line: 1019, column: 32, scope: !5007)
!5009 = !DILocation(line: 1021, column: 29, scope: !5007)
!5010 = !DILocation(line: 1019, column: 16, scope: !5007)
!5011 = !DILocation(line: 1019, column: 14, scope: !5007)
!5012 = !DILocation(line: 1022, column: 35, scope: !5007)
!5013 = !DILocation(line: 1022, column: 56, scope: !5007)
!5014 = !DILocation(line: 1022, column: 16, scope: !5007)
!5015 = !DILocation(line: 1022, column: 9, scope: !5007)
!5016 = !DILocation(line: 1023, column: 16, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 1023, column: 16)
!5018 = !DILocation(line: 1023, column: 16, scope: !5003)
!5019 = !DILocation(line: 1024, column: 14, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1023, column: 27)
!5021 = !DILocation(line: 1025, column: 5, scope: !5020)
!5022 = !DILocation(line: 1027, column: 14, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1026, column: 10)
!5024 = !DILocation(line: 1031, column: 34, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1031, column: 9)
!5026 = !DILocation(line: 1031, column: 37, scope: !5025)
!5027 = !DILocation(line: 1031, column: 16, scope: !5025)
!5028 = !DILocation(line: 1031, column: 14, scope: !5025)
!5029 = !DILocation(line: 1033, column: 45, scope: !5025)
!5030 = !DILocation(line: 1031, column: 9, scope: !4854)
!5031 = !DILocation(line: 1035, column: 31, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5025, file: !3, line: 1033, column: 54)
!5033 = !DILocation(line: 1035, column: 34, scope: !5032)
!5034 = !DILocation(line: 1035, column: 16, scope: !5032)
!5035 = !DILocation(line: 1035, column: 9, scope: !5032)
!5036 = !DILocation(line: 1039, column: 18, scope: !4879)
!5037 = !DILocation(line: 1039, column: 28, scope: !4879)
!5038 = !DILocation(line: 1039, column: 35, scope: !4879)
!5039 = !{!3193, !2417, i64 40}
!5040 = !DILocation(line: 1039, column: 48, scope: !4879)
!5041 = !DILocation(line: 1039, column: 58, scope: !4879)
!5042 = !DILocation(line: 1039, column: 16, scope: !4879)
!5043 = !DILocation(line: 1039, column: 14, scope: !4879)
!5044 = !DILocation(line: 1040, column: 58, scope: !4879)
!5045 = !DILocation(line: 1039, column: 9, scope: !4854)
!5046 = !DILocation(line: 1041, column: 9, scope: !4878)
!5047 = !DILocation(line: 1041, column: 13, scope: !4878)
!5048 = !DILocation(line: 1041, column: 22, scope: !4878)
!5049 = !DILocation(line: 1041, column: 27, scope: !4878)
!5050 = !DILocation(line: 1041, column: 36, scope: !4878)
!5051 = !DILocation(line: 1041, column: 41, scope: !4878)
!5052 = !DILocation(line: 1042, column: 13, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 1042, column: 13)
!5054 = !DILocation(line: 1042, column: 20, scope: !5053)
!5055 = !DILocation(line: 1042, column: 13, scope: !4878)
!5056 = !DILocation(line: 1043, column: 34, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 1042, column: 27)
!5058 = !DILocation(line: 1043, column: 37, scope: !5057)
!5059 = !DILocation(line: 1043, column: 43, scope: !5057)
!5060 = !DILocation(line: 1044, column: 47, scope: !5057)
!5061 = !DILocation(line: 1044, column: 50, scope: !5057)
!5062 = !DILocation(line: 1046, column: 47, scope: !5057)
!5063 = !DILocation(line: 1044, column: 34, scope: !5057)
!5064 = !DILocation(line: 1047, column: 34, scope: !5057)
!5065 = !DILocation(line: 1043, column: 19, scope: !5057)
!5066 = !DILocation(line: 1043, column: 17, scope: !5057)
!5067 = !DILocation(line: 1048, column: 9, scope: !5057)
!5068 = !DILocation(line: 1050, column: 17, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 1049, column: 14)
!5070 = !DILocation(line: 1052, column: 5, scope: !4879)
!5071 = !DILocation(line: 1052, column: 5, scope: !4878)
!5072 = !DILocation(line: 1054, column: 9, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1054, column: 9)
!5074 = !DILocation(line: 1054, column: 13, scope: !5073)
!5075 = !DILocation(line: 1054, column: 21, scope: !5073)
!5076 = !DILocation(line: 1054, column: 24, scope: !5073)
!5077 = !DILocation(line: 1054, column: 9, scope: !4854)
!5078 = !DILocation(line: 1056, column: 17, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 1054, column: 35)
!5080 = !DILocation(line: 1056, column: 27, scope: !5079)
!5081 = !DILocation(line: 1056, column: 34, scope: !5079)
!5082 = !{!3193, !2417, i64 64}
!5083 = !DILocation(line: 1056, column: 47, scope: !5079)
!5084 = !DILocation(line: 1056, column: 55, scope: !5079)
!5085 = !DILocation(line: 1056, column: 15, scope: !5079)
!5086 = !DILocation(line: 1056, column: 13, scope: !5079)
!5087 = !DILocation(line: 1057, column: 5, scope: !5079)
!5088 = !DILocation(line: 1059, column: 9, scope: !4882)
!5089 = !DILocation(line: 1059, column: 13, scope: !4882)
!5090 = !DILocation(line: 1059, column: 9, scope: !4854)
!5091 = !DILocation(line: 1060, column: 9, scope: !4881)
!5092 = !DILocation(line: 1060, column: 29, scope: !4881)
!5093 = !DILocation(line: 1061, column: 9, scope: !4881)
!5094 = !DILocation(line: 1061, column: 21, scope: !4881)
!5095 = !DILocation(line: 1062, column: 9, scope: !4881)
!5096 = !DILocation(line: 1062, column: 13, scope: !4881)
!5097 = !DILocation(line: 1064, column: 33, scope: !4881)
!5098 = !DILocation(line: 1064, column: 36, scope: !4881)
!5099 = !DILocation(line: 1064, column: 42, scope: !4881)
!5100 = !DILocation(line: 1064, column: 45, scope: !4881)
!5101 = !DILocation(line: 1064, column: 57, scope: !4881)
!5102 = !DILocation(line: 1064, column: 14, scope: !4881)
!5103 = !DILocation(line: 1064, column: 12, scope: !4881)
!5104 = !DILocation(line: 1066, column: 9, scope: !4881)
!5105 = !DILocation(line: 1067, column: 13, scope: !4886)
!5106 = !DILocation(line: 1067, column: 26, scope: !4886)
!5107 = !DILocation(line: 1069, column: 33, scope: !4886)
!5108 = !DILocation(line: 1069, column: 36, scope: !4886)
!5109 = !{!2425, !2417, i64 432}
!5110 = !DILocation(line: 1069, column: 51, scope: !4886)
!5111 = !DILocation(line: 1069, column: 18, scope: !4886)
!5112 = !DILocation(line: 1069, column: 16, scope: !4886)
!5113 = !DILocation(line: 1072, column: 17, scope: !4889)
!5114 = !DILocation(line: 1072, column: 20, scope: !4889)
!5115 = !DILocation(line: 1072, column: 17, scope: !4886)
!5116 = !DILocation(line: 1073, column: 17, scope: !4888)
!5117 = !DILocation(line: 1073, column: 21, scope: !4888)
!5118 = !DILocation(line: 1074, column: 17, scope: !4888)
!5119 = !DILocation(line: 1074, column: 23, scope: !4888)
!5120 = !DILocation(line: 1074, column: 29, scope: !4888)
!5121 = !DILocation(line: 1075, column: 54, scope: !4888)
!5122 = !DILocation(line: 1075, column: 28, scope: !4888)
!5123 = !DILocation(line: 1075, column: 26, scope: !4888)
!5124 = !DILocation(line: 1076, column: 36, scope: !4888)
!5125 = !DILocation(line: 1076, column: 39, scope: !4888)
!5126 = !DILocation(line: 1078, column: 45, scope: !4888)
!5127 = !DILocation(line: 1076, column: 23, scope: !4888)
!5128 = !DILocation(line: 1076, column: 21, scope: !4888)
!5129 = !DILocation(line: 1079, column: 37, scope: !4888)
!5130 = !DILocation(line: 1079, column: 40, scope: !4888)
!5131 = !DILocation(line: 1079, column: 46, scope: !4888)
!5132 = !DILocation(line: 1079, column: 59, scope: !4888)
!5133 = !DILocation(line: 1079, column: 63, scope: !4888)
!5134 = !DILocation(line: 1079, column: 23, scope: !4888)
!5135 = !DILocation(line: 1079, column: 21, scope: !4888)
!5136 = !DILocation(line: 1081, column: 13, scope: !4889)
!5137 = !DILocation(line: 1083, column: 22, scope: !4894)
!5138 = !{!2759, !2417, i64 8}
!5139 = !DILocation(line: 1083, column: 20, scope: !4894)
!5140 = !DILocation(line: 1083, column: 18, scope: !4894)
!5141 = !DILocation(line: 1084, column: 18, scope: !4893)
!5142 = !DILocation(line: 1084, column: 23, scope: !4893)
!5143 = !DILocation(line: 1084, column: 20, scope: !4893)
!5144 = !DILocation(line: 1083, column: 13, scope: !4894)
!5145 = !DILocation(line: 1087, column: 17, scope: !4892)
!5146 = !DILocation(line: 1087, column: 29, scope: !4892)
!5147 = !DILocation(line: 1088, column: 17, scope: !4892)
!5148 = !DILocation(line: 1088, column: 28, scope: !4892)
!5149 = !DILocation(line: 1090, column: 21, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 1090, column: 21)
!5151 = !{!2757, !2417, i64 16}
!5152 = !DILocation(line: 1090, column: 21, scope: !4892)
!5153 = !DILocation(line: 1091, column: 30, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 1090, column: 43)
!5155 = !DILocation(line: 1092, column: 21, scope: !5154)
!5156 = !DILocation(line: 1095, column: 21, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 1095, column: 21)
!5158 = !{!5159, !2418, i64 12}
!5159 = !{!"apr_bucket_type_t", !2417, i64 0, !2426, i64 8, !2418, i64 12, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48}
!5160 = !DILocation(line: 1095, column: 21, scope: !4892)
!5161 = !DILocation(line: 1096, column: 21, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 1095, column: 48)
!5163 = !DILocation(line: 1099, column: 21, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 1099, column: 21)
!5165 = !DILocation(line: 1099, column: 25, scope: !5164)
!5166 = !DILocation(line: 1099, column: 21, scope: !4892)
!5167 = !DILocation(line: 1101, column: 26, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 1099, column: 34)
!5169 = !{!5159, !2417, i64 24}
!5170 = !DILocation(line: 1101, column: 24, scope: !5168)
!5171 = !DILocation(line: 1102, column: 25, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 1102, column: 25)
!5173 = !DILocation(line: 1102, column: 28, scope: !5172)
!5174 = !DILocation(line: 1102, column: 25, scope: !5168)
!5175 = !DILocation(line: 1103, column: 44, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 1102, column: 44)
!5177 = !DILocation(line: 1103, column: 47, scope: !5176)
!5178 = !DILocation(line: 1103, column: 74, scope: !5176)
!5179 = !DILocation(line: 1104, column: 57, scope: !5176)
!5180 = !DILocation(line: 1104, column: 60, scope: !5176)
!5181 = !DILocation(line: 1108, column: 57, scope: !5176)
!5182 = !DILocation(line: 1104, column: 44, scope: !5176)
!5183 = !DILocation(line: 1103, column: 30, scope: !5176)
!5184 = !DILocation(line: 1103, column: 28, scope: !5176)
!5185 = !DILocation(line: 1109, column: 25, scope: !5176)
!5186 = !DILocation(line: 1112, column: 29, scope: !5168)
!5187 = !DILocation(line: 1112, column: 39, scope: !5168)
!5188 = !DILocation(line: 1112, column: 46, scope: !5168)
!5189 = !{!3193, !2417, i64 56}
!5190 = !DILocation(line: 1112, column: 60, scope: !5168)
!5191 = !DILocation(line: 1112, column: 68, scope: !5168)
!5192 = !DILocation(line: 1112, column: 74, scope: !5168)
!5193 = !DILocation(line: 1112, column: 27, scope: !5168)
!5194 = !DILocation(line: 1112, column: 25, scope: !5168)
!5195 = !DILocation(line: 1113, column: 17, scope: !5168)
!5196 = !DILocation(line: 1114, column: 13, scope: !4893)
!5197 = !DILocation(line: 1114, column: 13, scope: !4892)
!5198 = !DILocation(line: 1085, column: 22, scope: !4893)
!5199 = !DILocation(line: 1085, column: 20, scope: !4893)
!5200 = !DILocation(line: 1083, column: 13, scope: !4893)
!5201 = distinct !{!5201, !5144, !5202, !2563}
!5202 = !DILocation(line: 1114, column: 13, scope: !4894)
!5203 = !DILocation(line: 1116, column: 33, scope: !4886)
!5204 = !DILocation(line: 1116, column: 13, scope: !4886)
!5205 = !DILocation(line: 1117, column: 9, scope: !4881)
!5206 = !DILocation(line: 1117, column: 9, scope: !4886)
!5207 = !DILocation(line: 1117, column: 19, scope: !4881)
!5208 = !DILocation(line: 1117, column: 18, scope: !4881)
!5209 = distinct !{!5209, !5104, !5210, !2563}
!5210 = !DILocation(line: 1117, column: 27, scope: !4881)
!5211 = !DILocation(line: 1119, column: 29, scope: !4881)
!5212 = !DILocation(line: 1119, column: 9, scope: !4881)
!5213 = !DILocation(line: 1121, column: 18, scope: !4881)
!5214 = !DILocation(line: 1121, column: 28, scope: !4881)
!5215 = !DILocation(line: 1121, column: 35, scope: !4881)
!5216 = !{!3193, !2417, i64 48}
!5217 = !DILocation(line: 1121, column: 49, scope: !4881)
!5218 = !DILocation(line: 1122, column: 49, scope: !4881)
!5219 = !DILocation(line: 1122, column: 53, scope: !4881)
!5220 = !DILocation(line: 1121, column: 16, scope: !4881)
!5221 = !DILocation(line: 1121, column: 14, scope: !4881)
!5222 = !DILocation(line: 1123, column: 30, scope: !4881)
!5223 = !DILocation(line: 1123, column: 35, scope: !4881)
!5224 = !DILocation(line: 1123, column: 15, scope: !4881)
!5225 = !DILocation(line: 1123, column: 13, scope: !4881)
!5226 = !DILocation(line: 1124, column: 5, scope: !4882)
!5227 = !DILocation(line: 1124, column: 5, scope: !4881)
!5228 = !DILocation(line: 1131, column: 9, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1131, column: 9)
!5230 = !DILocation(line: 1131, column: 13, scope: !5229)
!5231 = !DILocation(line: 1131, column: 9, scope: !4854)
!5232 = !DILocation(line: 1132, column: 9, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1131, column: 22)
!5234 = !DILocation(line: 1132, column: 19, scope: !5233)
!5235 = !DILocation(line: 1132, column: 26, scope: !5233)
!5236 = !DILocation(line: 1133, column: 5, scope: !5233)
!5237 = !DILocation(line: 1136, column: 29, scope: !4854)
!5238 = !DILocation(line: 1136, column: 32, scope: !4854)
!5239 = !DILocation(line: 1136, column: 42, scope: !4854)
!5240 = !DILocation(line: 1136, column: 46, scope: !4854)
!5241 = !DILocation(line: 1136, column: 12, scope: !4854)
!5242 = !DILocation(line: 1136, column: 10, scope: !4854)
!5243 = !DILocation(line: 1140, column: 9, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1140, column: 9)
!5245 = !DILocation(line: 1140, column: 13, scope: !5244)
!5246 = !DILocation(line: 1140, column: 9, scope: !4854)
!5247 = !DILocation(line: 1141, column: 30, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1140, column: 22)
!5249 = !DILocation(line: 1141, column: 35, scope: !5248)
!5250 = !DILocation(line: 1141, column: 15, scope: !5248)
!5251 = !DILocation(line: 1141, column: 13, scope: !5248)
!5252 = !DILocation(line: 1142, column: 31, scope: !5248)
!5253 = !DILocation(line: 1142, column: 34, scope: !5248)
!5254 = !DILocation(line: 1142, column: 16, scope: !5248)
!5255 = !DILocation(line: 1142, column: 9, scope: !5248)
!5256 = !DILocation(line: 1145, column: 9, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1145, column: 9)
!5258 = !DILocation(line: 1145, column: 14, scope: !5257)
!5259 = !DILocation(line: 1145, column: 9, scope: !4854)
!5260 = !DILocation(line: 1147, column: 31, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 1145, column: 23)
!5262 = !DILocation(line: 1147, column: 34, scope: !5261)
!5263 = !DILocation(line: 1147, column: 40, scope: !5261)
!5264 = !DILocation(line: 1147, column: 46, scope: !5261)
!5265 = !DILocation(line: 1151, column: 31, scope: !5261)
!5266 = !DILocation(line: 1147, column: 16, scope: !5261)
!5267 = !DILocation(line: 1147, column: 14, scope: !5261)
!5268 = !DILocation(line: 1152, column: 21, scope: !5261)
!5269 = !DILocation(line: 1152, column: 24, scope: !5261)
!5270 = !DILocation(line: 1152, column: 9, scope: !5261)
!5271 = !DILocation(line: 1153, column: 5, scope: !5261)
!5272 = !DILocation(line: 1157, column: 9, scope: !4898)
!5273 = !DILocation(line: 1157, column: 21, scope: !4898)
!5274 = !DILocation(line: 1157, column: 9, scope: !4854)
!5275 = !DILocation(line: 1158, column: 9, scope: !4897)
!5276 = !DILocation(line: 1158, column: 21, scope: !4897)
!5277 = !DILocation(line: 1160, column: 22, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 1160, column: 13)
!5279 = !DILocation(line: 1160, column: 35, scope: !5278)
!5280 = !DILocation(line: 1160, column: 48, scope: !5278)
!5281 = !DILocation(line: 1160, column: 20, scope: !5278)
!5282 = !DILocation(line: 1160, column: 18, scope: !5278)
!5283 = !DILocation(line: 1160, column: 67, scope: !5278)
!5284 = !DILocation(line: 1160, column: 13, scope: !4897)
!5285 = !DILocation(line: 1162, column: 34, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 1160, column: 76)
!5287 = !DILocation(line: 1162, column: 37, scope: !5286)
!5288 = !DILocation(line: 1162, column: 43, scope: !5286)
!5289 = !DILocation(line: 1162, column: 48, scope: !5286)
!5290 = !DILocation(line: 1167, column: 34, scope: !5286)
!5291 = !DILocation(line: 1162, column: 19, scope: !5286)
!5292 = !DILocation(line: 1162, column: 17, scope: !5286)
!5293 = !DILocation(line: 1168, column: 35, scope: !5286)
!5294 = !DILocation(line: 1168, column: 38, scope: !5286)
!5295 = !DILocation(line: 1168, column: 20, scope: !5286)
!5296 = !DILocation(line: 1168, column: 13, scope: !5286)
!5297 = !DILocation(line: 1172, column: 34, scope: !4897)
!5298 = !DILocation(line: 1172, column: 37, scope: !4897)
!5299 = !DILocation(line: 1172, column: 45, scope: !4897)
!5300 = !DILocation(line: 1172, column: 55, scope: !4897)
!5301 = !DILocation(line: 1172, column: 15, scope: !4897)
!5302 = !DILocation(line: 1172, column: 13, scope: !4897)
!5303 = !DILocation(line: 1174, column: 11, scope: !4897)
!5304 = !DILocation(line: 1174, column: 24, scope: !4897)
!5305 = !DILocation(line: 1174, column: 38, scope: !4897)
!5306 = !DILocation(line: 1174, column: 9, scope: !4897)
!5307 = !DILocation(line: 1176, column: 13, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 1176, column: 13)
!5309 = !DILocation(line: 1176, column: 17, scope: !5308)
!5310 = !DILocation(line: 1176, column: 13, scope: !4897)
!5311 = !DILocation(line: 1178, column: 34, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 1176, column: 26)
!5313 = !DILocation(line: 1178, column: 37, scope: !5312)
!5314 = !DILocation(line: 1178, column: 43, scope: !5312)
!5315 = !DILocation(line: 1178, column: 48, scope: !5312)
!5316 = !DILocation(line: 1182, column: 34, scope: !5312)
!5317 = !DILocation(line: 1178, column: 19, scope: !5312)
!5318 = !DILocation(line: 1178, column: 17, scope: !5312)
!5319 = !DILocation(line: 1183, column: 35, scope: !5312)
!5320 = !DILocation(line: 1183, column: 38, scope: !5312)
!5321 = !DILocation(line: 1183, column: 20, scope: !5312)
!5322 = !DILocation(line: 1183, column: 13, scope: !5312)
!5323 = !DILocation(line: 1185, column: 5, scope: !4898)
!5324 = !DILocation(line: 1185, column: 5, scope: !4897)
!5325 = !DILocation(line: 1190, column: 24, scope: !4854)
!5326 = !DILocation(line: 1190, column: 45, scope: !4854)
!5327 = !DILocation(line: 1190, column: 60, scope: !4854)
!5328 = !DILocation(line: 1190, column: 12, scope: !4854)
!5329 = !DILocation(line: 1190, column: 5, scope: !4854)
!5330 = !DILocation(line: 1191, column: 1, scope: !4854)
!5331 = distinct !DISubprogram(name: "dav_method_post", scope: !3, file: !3, line: 923, type: !4262, scopeLine: 924, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5332)
!5332 = !{!5333, !5334, !5335}
!5333 = !DILocalVariable(name: "r", arg: 1, scope: !5331, file: !3, line: 923, type: !286)
!5334 = !DILocalVariable(name: "resource", scope: !5331, file: !3, line: 925, type: !776)
!5335 = !DILocalVariable(name: "err", scope: !5331, file: !3, line: 926, type: !272)
!5336 = !DILocation(line: 923, column: 41, scope: !5331)
!5337 = !DILocation(line: 925, column: 5, scope: !5331)
!5338 = !DILocation(line: 925, column: 19, scope: !5331)
!5339 = !DILocation(line: 926, column: 5, scope: !5331)
!5340 = !DILocation(line: 926, column: 16, scope: !5331)
!5341 = !DILocation(line: 929, column: 28, scope: !5331)
!5342 = !DILocation(line: 929, column: 11, scope: !5331)
!5343 = !DILocation(line: 929, column: 9, scope: !5331)
!5344 = !DILocation(line: 931, column: 9, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 931, column: 9)
!5346 = !DILocation(line: 931, column: 13, scope: !5345)
!5347 = !DILocation(line: 931, column: 9, scope: !5331)
!5348 = !DILocation(line: 932, column: 31, scope: !5345)
!5349 = !DILocation(line: 932, column: 34, scope: !5345)
!5350 = !DILocation(line: 932, column: 16, scope: !5345)
!5351 = !DILocation(line: 932, column: 9, scope: !5345)
!5352 = !DILocation(line: 935, column: 37, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 935, column: 9)
!5354 = !DILocation(line: 935, column: 40, scope: !5353)
!5355 = !DILocation(line: 935, column: 9, scope: !5353)
!5356 = !DILocation(line: 935, column: 68, scope: !5353)
!5357 = !DILocation(line: 936, column: 13, scope: !5353)
!5358 = !DILocation(line: 936, column: 16, scope: !5353)
!5359 = !DILocation(line: 935, column: 9, scope: !5331)
!5360 = !DILocation(line: 937, column: 31, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 936, column: 21)
!5362 = !DILocation(line: 937, column: 34, scope: !5361)
!5363 = !DILocation(line: 937, column: 16, scope: !5361)
!5364 = !DILocation(line: 937, column: 9, scope: !5361)
!5365 = !DILocation(line: 941, column: 37, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 941, column: 9)
!5367 = !DILocation(line: 941, column: 40, scope: !5366)
!5368 = !DILocation(line: 941, column: 16, scope: !5366)
!5369 = !DILocation(line: 941, column: 14, scope: !5366)
!5370 = !DILocation(line: 942, column: 67, scope: !5366)
!5371 = !DILocation(line: 941, column: 9, scope: !5331)
!5372 = !DILocation(line: 944, column: 31, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 942, column: 76)
!5374 = !DILocation(line: 944, column: 34, scope: !5373)
!5375 = !DILocation(line: 944, column: 16, scope: !5373)
!5376 = !DILocation(line: 944, column: 9, scope: !5373)
!5377 = !DILocation(line: 947, column: 5, scope: !5331)
!5378 = !DILocation(line: 948, column: 1, scope: !5331)
!5379 = distinct !DISubprogram(name: "dav_method_delete", scope: !3, file: !3, line: 1234, type: !4262, scopeLine: 1235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5380)
!5380 = !{!5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388}
!5381 = !DILocalVariable(name: "r", arg: 1, scope: !5379, file: !3, line: 1234, type: !286)
!5382 = !DILocalVariable(name: "resource", scope: !5379, file: !3, line: 1236, type: !776)
!5383 = !DILocalVariable(name: "av_info", scope: !5379, file: !3, line: 1237, type: !4860)
!5384 = !DILocalVariable(name: "err", scope: !5379, file: !3, line: 1238, type: !272)
!5385 = !DILocalVariable(name: "err2", scope: !5379, file: !3, line: 1239, type: !272)
!5386 = !DILocalVariable(name: "multi_response", scope: !5379, file: !3, line: 1240, type: !826)
!5387 = !DILocalVariable(name: "result", scope: !5379, file: !3, line: 1241, type: !14)
!5388 = !DILocalVariable(name: "depth", scope: !5379, file: !3, line: 1242, type: !14)
!5389 = !DILocation(line: 1234, column: 43, scope: !5379)
!5390 = !DILocation(line: 1236, column: 5, scope: !5379)
!5391 = !DILocation(line: 1236, column: 19, scope: !5379)
!5392 = !DILocation(line: 1237, column: 5, scope: !5379)
!5393 = !DILocation(line: 1237, column: 27, scope: !5379)
!5394 = !DILocation(line: 1238, column: 5, scope: !5379)
!5395 = !DILocation(line: 1238, column: 16, scope: !5379)
!5396 = !DILocation(line: 1239, column: 5, scope: !5379)
!5397 = !DILocation(line: 1239, column: 16, scope: !5379)
!5398 = !DILocation(line: 1240, column: 5, scope: !5379)
!5399 = !DILocation(line: 1240, column: 19, scope: !5379)
!5400 = !DILocation(line: 1241, column: 5, scope: !5379)
!5401 = !DILocation(line: 1241, column: 9, scope: !5379)
!5402 = !DILocation(line: 1242, column: 5, scope: !5379)
!5403 = !DILocation(line: 1242, column: 9, scope: !5379)
!5404 = !DILocation(line: 1245, column: 43, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1245, column: 9)
!5406 = !DILocation(line: 1245, column: 19, scope: !5405)
!5407 = !DILocation(line: 1245, column: 17, scope: !5405)
!5408 = !DILocation(line: 1245, column: 47, scope: !5405)
!5409 = !DILocation(line: 1245, column: 9, scope: !5379)
!5410 = !DILocation(line: 1246, column: 16, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 1245, column: 54)
!5412 = !DILocation(line: 1246, column: 9, scope: !5411)
!5413 = !DILocation(line: 1250, column: 28, scope: !5379)
!5414 = !DILocation(line: 1250, column: 11, scope: !5379)
!5415 = !DILocation(line: 1250, column: 9, scope: !5379)
!5416 = !DILocation(line: 1252, column: 9, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1252, column: 9)
!5418 = !DILocation(line: 1252, column: 13, scope: !5417)
!5419 = !DILocation(line: 1252, column: 9, scope: !5379)
!5420 = !DILocation(line: 1253, column: 31, scope: !5417)
!5421 = !DILocation(line: 1253, column: 34, scope: !5417)
!5422 = !DILocation(line: 1253, column: 16, scope: !5417)
!5423 = !DILocation(line: 1253, column: 9, scope: !5417)
!5424 = !DILocation(line: 1256, column: 37, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1256, column: 9)
!5426 = !DILocation(line: 1256, column: 40, scope: !5425)
!5427 = !DILocation(line: 1256, column: 9, scope: !5425)
!5428 = !DILocation(line: 1256, column: 68, scope: !5425)
!5429 = !DILocation(line: 1257, column: 13, scope: !5425)
!5430 = !DILocation(line: 1257, column: 16, scope: !5425)
!5431 = !DILocation(line: 1256, column: 9, scope: !5379)
!5432 = !DILocation(line: 1258, column: 31, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 1257, column: 21)
!5434 = !DILocation(line: 1258, column: 34, scope: !5433)
!5435 = !DILocation(line: 1258, column: 16, scope: !5433)
!5436 = !DILocation(line: 1258, column: 9, scope: !5433)
!5437 = !DILocation(line: 1261, column: 10, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1261, column: 9)
!5439 = !DILocation(line: 1261, column: 20, scope: !5438)
!5440 = !DILocation(line: 1261, column: 9, scope: !5379)
!5441 = !DILocation(line: 1263, column: 9, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 1261, column: 28)
!5443 = !DILocation(line: 1269, column: 27, scope: !5379)
!5444 = !DILocation(line: 1269, column: 13, scope: !5379)
!5445 = !DILocation(line: 1269, column: 11, scope: !5379)
!5446 = !DILocation(line: 1271, column: 9, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1271, column: 9)
!5448 = !DILocation(line: 1271, column: 19, scope: !5447)
!5449 = !DILocation(line: 1271, column: 30, scope: !5447)
!5450 = !DILocation(line: 1271, column: 33, scope: !5447)
!5451 = !DILocation(line: 1271, column: 39, scope: !5447)
!5452 = !DILocation(line: 1271, column: 9, scope: !5379)
!5453 = !DILocation(line: 1273, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1271, column: 56)
!5455 = !DILocation(line: 1273, column: 9, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1273, column: 9)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 1273, column: 9)
!5458 = !DILocation(line: 1273, column: 9, scope: !5457)
!5459 = !DILocation(line: 1275, column: 9, scope: !5454)
!5460 = !DILocation(line: 1278, column: 10, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1278, column: 9)
!5462 = !DILocation(line: 1278, column: 20, scope: !5461)
!5463 = !DILocation(line: 1278, column: 31, scope: !5461)
!5464 = !DILocation(line: 1278, column: 34, scope: !5461)
!5465 = !DILocation(line: 1278, column: 40, scope: !5461)
!5466 = !DILocation(line: 1278, column: 9, scope: !5379)
!5467 = !DILocation(line: 1280, column: 9, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1278, column: 46)
!5469 = !DILocation(line: 1280, column: 9, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 1280, column: 9)
!5471 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 1280, column: 9)
!5472 = !DILocation(line: 1280, column: 9, scope: !5471)
!5473 = !DILocation(line: 1282, column: 9, scope: !5468)
!5474 = !DILocation(line: 1293, column: 37, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1293, column: 9)
!5476 = !DILocation(line: 1293, column: 40, scope: !5475)
!5477 = !DILocation(line: 1293, column: 50, scope: !5475)
!5478 = !DILocation(line: 1293, column: 16, scope: !5475)
!5479 = !DILocation(line: 1293, column: 14, scope: !5475)
!5480 = !DILocation(line: 1296, column: 68, scope: !5475)
!5481 = !DILocation(line: 1293, column: 9, scope: !5379)
!5482 = !DILocation(line: 1297, column: 30, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 1296, column: 77)
!5484 = !DILocation(line: 1297, column: 33, scope: !5483)
!5485 = !DILocation(line: 1297, column: 39, scope: !5483)
!5486 = !DILocation(line: 1297, column: 44, scope: !5483)
!5487 = !DILocation(line: 1298, column: 43, scope: !5483)
!5488 = !DILocation(line: 1298, column: 46, scope: !5483)
!5489 = !DILocation(line: 1301, column: 43, scope: !5483)
!5490 = !DILocation(line: 1298, column: 30, scope: !5483)
!5491 = !DILocation(line: 1302, column: 30, scope: !5483)
!5492 = !DILocation(line: 1297, column: 15, scope: !5483)
!5493 = !DILocation(line: 1297, column: 13, scope: !5483)
!5494 = !DILocation(line: 1303, column: 31, scope: !5483)
!5495 = !DILocation(line: 1303, column: 34, scope: !5483)
!5496 = !DILocation(line: 1303, column: 39, scope: !5483)
!5497 = !DILocation(line: 1303, column: 16, scope: !5483)
!5498 = !DILocation(line: 1303, column: 9, scope: !5483)
!5499 = !DILocation(line: 1309, column: 30, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1309, column: 9)
!5501 = !DILocation(line: 1309, column: 33, scope: !5500)
!5502 = !DILocation(line: 1309, column: 19, scope: !5500)
!5503 = !DILocation(line: 1309, column: 17, scope: !5500)
!5504 = !DILocation(line: 1309, column: 50, scope: !5500)
!5505 = !DILocation(line: 1309, column: 9, scope: !5379)
!5506 = !DILocation(line: 1310, column: 16, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 1309, column: 57)
!5508 = !DILocation(line: 1310, column: 9, scope: !5507)
!5509 = !DILocation(line: 1314, column: 34, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1314, column: 9)
!5511 = !DILocation(line: 1314, column: 37, scope: !5510)
!5512 = !DILocation(line: 1314, column: 16, scope: !5510)
!5513 = !DILocation(line: 1314, column: 14, scope: !5510)
!5514 = !DILocation(line: 1315, column: 45, scope: !5510)
!5515 = !DILocation(line: 1314, column: 9, scope: !5379)
!5516 = !DILocation(line: 1317, column: 31, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 1315, column: 54)
!5518 = !DILocation(line: 1317, column: 34, scope: !5517)
!5519 = !DILocation(line: 1317, column: 16, scope: !5517)
!5520 = !DILocation(line: 1317, column: 9, scope: !5517)
!5521 = !DILocation(line: 1321, column: 13, scope: !5379)
!5522 = !DILocation(line: 1321, column: 23, scope: !5379)
!5523 = !DILocation(line: 1321, column: 30, scope: !5379)
!5524 = !{!3193, !2417, i64 112}
!5525 = !DILocation(line: 1321, column: 47, scope: !5379)
!5526 = !DILocation(line: 1321, column: 11, scope: !5379)
!5527 = !DILocation(line: 1321, column: 9, scope: !5379)
!5528 = !DILocation(line: 1324, column: 29, scope: !5379)
!5529 = !DILocation(line: 1324, column: 38, scope: !5379)
!5530 = !DILocation(line: 1324, column: 42, scope: !5379)
!5531 = !DILocation(line: 1324, column: 12, scope: !5379)
!5532 = !DILocation(line: 1324, column: 10, scope: !5379)
!5533 = !DILocation(line: 1328, column: 9, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1328, column: 9)
!5535 = !DILocation(line: 1328, column: 13, scope: !5534)
!5536 = !DILocation(line: 1328, column: 9, scope: !5379)
!5537 = !DILocation(line: 1329, column: 30, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 1328, column: 22)
!5539 = !DILocation(line: 1329, column: 33, scope: !5538)
!5540 = !DILocation(line: 1329, column: 39, scope: !5538)
!5541 = !DILocation(line: 1329, column: 44, scope: !5538)
!5542 = !DILocation(line: 1330, column: 43, scope: !5538)
!5543 = !DILocation(line: 1330, column: 46, scope: !5538)
!5544 = !DILocation(line: 1332, column: 43, scope: !5538)
!5545 = !DILocation(line: 1330, column: 30, scope: !5538)
!5546 = !DILocation(line: 1333, column: 30, scope: !5538)
!5547 = !DILocation(line: 1329, column: 15, scope: !5538)
!5548 = !DILocation(line: 1329, column: 13, scope: !5538)
!5549 = !DILocation(line: 1334, column: 31, scope: !5538)
!5550 = !DILocation(line: 1334, column: 34, scope: !5538)
!5551 = !DILocation(line: 1334, column: 39, scope: !5538)
!5552 = !DILocation(line: 1334, column: 16, scope: !5538)
!5553 = !DILocation(line: 1334, column: 9, scope: !5538)
!5554 = !DILocation(line: 1336, column: 9, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 1336, column: 9)
!5556 = !DILocation(line: 1336, column: 14, scope: !5555)
!5557 = !DILocation(line: 1336, column: 9, scope: !5379)
!5558 = !DILocation(line: 1338, column: 30, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1336, column: 23)
!5560 = !DILocation(line: 1338, column: 33, scope: !5559)
!5561 = !DILocation(line: 1338, column: 39, scope: !5559)
!5562 = !DILocation(line: 1338, column: 45, scope: !5559)
!5563 = !DILocation(line: 1342, column: 30, scope: !5559)
!5564 = !DILocation(line: 1338, column: 15, scope: !5559)
!5565 = !DILocation(line: 1338, column: 13, scope: !5559)
!5566 = !DILocation(line: 1343, column: 21, scope: !5559)
!5567 = !DILocation(line: 1343, column: 24, scope: !5559)
!5568 = !DILocation(line: 1343, column: 9, scope: !5559)
!5569 = !DILocation(line: 1344, column: 5, scope: !5559)
!5570 = !DILocation(line: 1349, column: 5, scope: !5379)
!5571 = !DILocation(line: 1350, column: 1, scope: !5379)
!5572 = distinct !DISubprogram(name: "dav_method_options", scope: !3, file: !3, line: 1662, type: !4262, scopeLine: 1663, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5573)
!5573 = !{!5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5613, !5616, !5620, !5623, !5627}
!5574 = !DILocalVariable(name: "r", arg: 1, scope: !5572, file: !3, line: 1662, type: !286)
!5575 = !DILocalVariable(name: "locks_hooks", scope: !5572, file: !3, line: 1664, type: !880)
!5576 = !DILocalVariable(name: "vsn_hooks", scope: !5572, file: !3, line: 1665, type: !1208)
!5577 = !DILocalVariable(name: "binding_hooks", scope: !5572, file: !3, line: 1666, type: !1289)
!5578 = !DILocalVariable(name: "search_hooks", scope: !5572, file: !3, line: 1667, type: !1301)
!5579 = !DILocalVariable(name: "resource", scope: !5572, file: !3, line: 1668, type: !776)
!5580 = !DILocalVariable(name: "dav_level", scope: !5572, file: !3, line: 1669, type: !10)
!5581 = !DILocalVariable(name: "allow", scope: !5572, file: !3, line: 1670, type: !216)
!5582 = !DILocalVariable(name: "s", scope: !5572, file: !3, line: 1671, type: !216)
!5583 = !DILocalVariable(name: "arr", scope: !5572, file: !3, line: 1672, type: !1169)
!5584 = !DILocalVariable(name: "elts", scope: !5572, file: !3, line: 1673, type: !1332)
!5585 = !DILocalVariable(name: "methods", scope: !5572, file: !3, line: 1674, type: !479)
!5586 = !DILocalVariable(name: "vsn_options", scope: !5572, file: !3, line: 1675, type: !235)
!5587 = !DILocalVariable(name: "body", scope: !5572, file: !3, line: 1676, type: !235)
!5588 = !DILocalVariable(name: "t", scope: !5572, file: !3, line: 1677, type: !239)
!5589 = !DILocalVariable(name: "text_size", scope: !5572, file: !3, line: 1678, type: !14)
!5590 = !DILocalVariable(name: "result", scope: !5572, file: !3, line: 1679, type: !14)
!5591 = !DILocalVariable(name: "i", scope: !5572, file: !3, line: 1680, type: !14)
!5592 = !DILocalVariable(name: "uri_ary", scope: !5572, file: !3, line: 1681, type: !450)
!5593 = !DILocalVariable(name: "doc", scope: !5572, file: !3, line: 1682, type: !1280)
!5594 = !DILocalVariable(name: "elem", scope: !5572, file: !3, line: 1683, type: !1025)
!5595 = !DILocalVariable(name: "err", scope: !5572, file: !3, line: 1684, type: !272)
!5596 = !DILocalVariable(name: "extensions", scope: !5572, file: !3, line: 1686, type: !450)
!5597 = !DILocalVariable(name: "entry", scope: !5572, file: !3, line: 1687, type: !1326)
!5598 = !DILocalVariable(name: "options", scope: !5599, file: !3, line: 1728, type: !5602)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 1727, column: 54)
!5600 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1727, column: 5)
!5601 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1727, column: 5)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5604)
!5604 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_options_provider", file: !141, line: 2636, baseType: !5605)
!5605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_options_provider", file: !141, line: 2625, size: 192, elements: !5606)
!5606 = !{!5607, !5611, !5612}
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "dav_header", scope: !5605, file: !141, line: 2627, baseType: !5608, size: 64)
!5608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5609, size: 64)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!272, !286, !747, !1015}
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "dav_method", scope: !5605, file: !141, line: 2631, baseType: !5608, size: 64, offset: 64)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !5605, file: !141, line: 2635, baseType: !20, size: 64, offset: 128)
!5613 = !DILocalVariable(name: "hoptions", scope: !5614, file: !3, line: 1732, type: !235)
!5614 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1731, column: 45)
!5615 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 1731, column: 13)
!5616 = !DILocalVariable(name: "options", scope: !5617, file: !3, line: 1888, type: !5602)
!5617 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 1887, column: 54)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1887, column: 5)
!5619 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1887, column: 5)
!5620 = !DILocalVariable(name: "hoptions", scope: !5621, file: !3, line: 1892, type: !235)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 1891, column: 45)
!5622 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 1891, column: 13)
!5623 = !DILocalVariable(name: "core_option", scope: !5624, file: !3, line: 1957, type: !14)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 1955, column: 74)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1955, column: 5)
!5626 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1955, column: 5)
!5627 = !DILocalVariable(name: "err", scope: !5624, file: !3, line: 1958, type: !272)
!5628 = !DILocation(line: 1662, column: 44, scope: !5572)
!5629 = !DILocation(line: 1664, column: 5, scope: !5572)
!5630 = !DILocation(line: 1664, column: 28, scope: !5572)
!5631 = !DILocation(line: 1664, column: 42, scope: !5572)
!5632 = !DILocation(line: 1665, column: 5, scope: !5572)
!5633 = !DILocation(line: 1665, column: 26, scope: !5572)
!5634 = !DILocation(line: 1665, column: 38, scope: !5572)
!5635 = !DILocation(line: 1666, column: 5, scope: !5572)
!5636 = !DILocation(line: 1666, column: 30, scope: !5572)
!5637 = !DILocation(line: 1666, column: 46, scope: !5572)
!5638 = !DILocation(line: 1667, column: 5, scope: !5572)
!5639 = !DILocation(line: 1667, column: 29, scope: !5572)
!5640 = !DILocation(line: 1667, column: 44, scope: !5572)
!5641 = !DILocation(line: 1668, column: 5, scope: !5572)
!5642 = !DILocation(line: 1668, column: 19, scope: !5572)
!5643 = !DILocation(line: 1669, column: 5, scope: !5572)
!5644 = !DILocation(line: 1669, column: 17, scope: !5572)
!5645 = !DILocation(line: 1670, column: 5, scope: !5572)
!5646 = !DILocation(line: 1670, column: 11, scope: !5572)
!5647 = !DILocation(line: 1671, column: 5, scope: !5572)
!5648 = !DILocation(line: 1671, column: 11, scope: !5572)
!5649 = !DILocation(line: 1672, column: 5, scope: !5572)
!5650 = !DILocation(line: 1672, column: 31, scope: !5572)
!5651 = !DILocation(line: 1673, column: 5, scope: !5572)
!5652 = !DILocation(line: 1673, column: 30, scope: !5572)
!5653 = !DILocation(line: 1674, column: 5, scope: !5572)
!5654 = !DILocation(line: 1674, column: 18, scope: !5572)
!5655 = !DILocation(line: 1674, column: 43, scope: !5572)
!5656 = !DILocation(line: 1674, column: 46, scope: !5572)
!5657 = !DILocation(line: 1674, column: 28, scope: !5572)
!5658 = !DILocation(line: 1675, column: 5, scope: !5572)
!5659 = !DILocation(line: 1675, column: 21, scope: !5572)
!5660 = !DILocation(line: 1676, column: 5, scope: !5572)
!5661 = !DILocation(line: 1676, column: 21, scope: !5572)
!5662 = !DILocation(line: 1677, column: 5, scope: !5572)
!5663 = !DILocation(line: 1677, column: 15, scope: !5572)
!5664 = !DILocation(line: 1678, column: 5, scope: !5572)
!5665 = !DILocation(line: 1678, column: 9, scope: !5572)
!5666 = !DILocation(line: 1679, column: 5, scope: !5572)
!5667 = !DILocation(line: 1679, column: 9, scope: !5572)
!5668 = !DILocation(line: 1680, column: 5, scope: !5572)
!5669 = !DILocation(line: 1680, column: 9, scope: !5572)
!5670 = !DILocation(line: 1681, column: 5, scope: !5572)
!5671 = !DILocation(line: 1681, column: 25, scope: !5572)
!5672 = !DILocation(line: 1682, column: 5, scope: !5572)
!5673 = !DILocation(line: 1682, column: 18, scope: !5572)
!5674 = !DILocation(line: 1683, column: 5, scope: !5572)
!5675 = !DILocation(line: 1683, column: 25, scope: !5572)
!5676 = !DILocation(line: 1684, column: 5, scope: !5572)
!5677 = !DILocation(line: 1684, column: 16, scope: !5572)
!5678 = !DILocation(line: 1686, column: 5, scope: !5572)
!5679 = !DILocation(line: 1686, column: 25, scope: !5572)
!5680 = !DILocation(line: 1687, column: 5, scope: !5572)
!5681 = !DILocation(line: 1687, column: 31, scope: !5572)
!5682 = !DILocation(line: 1690, column: 28, scope: !5572)
!5683 = !DILocation(line: 1690, column: 11, scope: !5572)
!5684 = !DILocation(line: 1690, column: 9, scope: !5572)
!5685 = !DILocation(line: 1692, column: 9, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1692, column: 9)
!5687 = !DILocation(line: 1692, column: 13, scope: !5686)
!5688 = !DILocation(line: 1692, column: 9, scope: !5572)
!5689 = !DILocation(line: 1693, column: 31, scope: !5686)
!5690 = !DILocation(line: 1693, column: 34, scope: !5686)
!5691 = !DILocation(line: 1693, column: 16, scope: !5686)
!5692 = !DILocation(line: 1693, column: 9, scope: !5686)
!5693 = !DILocation(line: 1696, column: 38, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1696, column: 9)
!5695 = !DILocation(line: 1696, column: 19, scope: !5694)
!5696 = !DILocation(line: 1696, column: 17, scope: !5694)
!5697 = !DILocation(line: 1696, column: 48, scope: !5694)
!5698 = !DILocation(line: 1696, column: 9, scope: !5572)
!5699 = !DILocation(line: 1697, column: 16, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 1696, column: 55)
!5701 = !DILocation(line: 1697, column: 9, scope: !5700)
!5702 = !DILocation(line: 1702, column: 37, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1702, column: 9)
!5704 = !DILocation(line: 1702, column: 40, scope: !5703)
!5705 = !DILocation(line: 1702, column: 56, scope: !5703)
!5706 = !DILocation(line: 1702, column: 9, scope: !5703)
!5707 = !DILocation(line: 1702, column: 67, scope: !5703)
!5708 = !DILocation(line: 1703, column: 13, scope: !5703)
!5709 = !DILocation(line: 1703, column: 16, scope: !5703)
!5710 = !DILocation(line: 1702, column: 9, scope: !5572)
!5711 = !DILocation(line: 1704, column: 31, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1703, column: 21)
!5713 = !DILocation(line: 1704, column: 34, scope: !5712)
!5714 = !DILocation(line: 1704, column: 16, scope: !5712)
!5715 = !DILocation(line: 1704, column: 9, scope: !5712)
!5716 = !DILocation(line: 1707, column: 9, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1707, column: 9)
!5718 = !DILocation(line: 1707, column: 13, scope: !5717)
!5719 = !DILocation(line: 1707, column: 35, scope: !5717)
!5720 = !DILocation(line: 1707, column: 17, scope: !5717)
!5721 = !DILocation(line: 1707, column: 9, scope: !5572)
!5722 = !DILocation(line: 1708, column: 9, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 1707, column: 52)
!5724 = !DILocation(line: 1708, column: 9, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 1708, column: 9)
!5726 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 1708, column: 9)
!5727 = !DILocation(line: 1708, column: 9, scope: !5726)
!5728 = !DILocation(line: 1710, column: 9, scope: !5723)
!5729 = !DILocation(line: 1714, column: 15, scope: !5572)
!5730 = !DILocation(line: 1716, column: 9, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1716, column: 9)
!5732 = !DILocation(line: 1716, column: 21, scope: !5731)
!5733 = !DILocation(line: 1716, column: 9, scope: !5572)
!5734 = !DILocation(line: 1717, column: 19, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1716, column: 30)
!5736 = !DILocation(line: 1718, column: 5, scope: !5735)
!5737 = !DILocation(line: 1720, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1720, column: 9)
!5739 = !DILocation(line: 1720, column: 23, scope: !5738)
!5740 = !DILocation(line: 1720, column: 9, scope: !5572)
!5741 = !DILocation(line: 1721, column: 33, scope: !5738)
!5742 = !DILocation(line: 1721, column: 36, scope: !5738)
!5743 = !DILocation(line: 1721, column: 42, scope: !5738)
!5744 = !DILocation(line: 1721, column: 21, scope: !5738)
!5745 = !DILocation(line: 1721, column: 19, scope: !5738)
!5746 = !DILocation(line: 1721, column: 9, scope: !5738)
!5747 = !DILocation(line: 1724, column: 41, scope: !5572)
!5748 = !DILocation(line: 1724, column: 44, scope: !5572)
!5749 = !DILocation(line: 1724, column: 18, scope: !5572)
!5750 = !DILocation(line: 1724, column: 16, scope: !5572)
!5751 = !DILocation(line: 1725, column: 41, scope: !5572)
!5752 = !DILocation(line: 1725, column: 53, scope: !5572)
!5753 = !DILocation(line: 1725, column: 11, scope: !5572)
!5754 = !DILocation(line: 1727, column: 12, scope: !5601)
!5755 = !DILocation(line: 1727, column: 10, scope: !5601)
!5756 = !DILocation(line: 1727, column: 17, scope: !5600)
!5757 = !DILocation(line: 1727, column: 21, scope: !5600)
!5758 = !DILocation(line: 1727, column: 33, scope: !5600)
!5759 = !DILocation(line: 1727, column: 19, scope: !5600)
!5760 = !DILocation(line: 1727, column: 5, scope: !5601)
!5761 = !DILocation(line: 1728, column: 9, scope: !5599)
!5762 = !DILocation(line: 1728, column: 37, scope: !5599)
!5763 = !DILocation(line: 1729, column: 39, scope: !5599)
!5764 = !DILocation(line: 1729, column: 46, scope: !5599)
!5765 = !{!5766, !2417, i64 0}
!5766 = !{!"", !2417, i64 0}
!5767 = !DILocation(line: 1729, column: 13, scope: !5599)
!5768 = !DILocation(line: 1731, column: 13, scope: !5615)
!5769 = !DILocation(line: 1731, column: 21, scope: !5615)
!5770 = !DILocation(line: 1731, column: 24, scope: !5615)
!5771 = !DILocation(line: 1731, column: 33, scope: !5615)
!5772 = !{!5773, !2417, i64 0}
!5773 = !{!"dav_options_provider", !2417, i64 0, !2417, i64 8, !2417, i64 16}
!5774 = !DILocation(line: 1731, column: 13, scope: !5599)
!5775 = !DILocation(line: 1732, column: 13, scope: !5614)
!5776 = !DILocation(line: 1732, column: 29, scope: !5614)
!5777 = !DILocation(line: 1734, column: 13, scope: !5614)
!5778 = !DILocation(line: 1734, column: 22, scope: !5614)
!5779 = !DILocation(line: 1734, column: 33, scope: !5614)
!5780 = !DILocation(line: 1734, column: 36, scope: !5614)
!5781 = !DILocation(line: 1735, column: 31, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1735, column: 13)
!5783 = !DILocation(line: 1735, column: 20, scope: !5782)
!5784 = !DILocation(line: 1735, column: 18, scope: !5782)
!5785 = !DILocation(line: 1735, column: 38, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 1735, column: 13)
!5787 = !DILocation(line: 1735, column: 40, scope: !5786)
!5788 = !DILocation(line: 1735, column: 43, scope: !5786)
!5789 = !DILocation(line: 1735, column: 46, scope: !5786)
!5790 = !DILocation(line: 0, scope: !5786)
!5791 = !DILocation(line: 1735, column: 13, scope: !5782)
!5792 = !DILocation(line: 1736, column: 41, scope: !5786)
!5793 = !DILocation(line: 1736, column: 44, scope: !5786)
!5794 = !DILocation(line: 1736, column: 50, scope: !5786)
!5795 = !DILocation(line: 1736, column: 66, scope: !5786)
!5796 = !DILocation(line: 1736, column: 69, scope: !5786)
!5797 = !DILocation(line: 1736, column: 29, scope: !5786)
!5798 = !DILocation(line: 1736, column: 27, scope: !5786)
!5799 = !DILocation(line: 1736, column: 17, scope: !5786)
!5800 = !DILocation(line: 1735, column: 56, scope: !5786)
!5801 = !DILocation(line: 1735, column: 59, scope: !5786)
!5802 = !DILocation(line: 1735, column: 54, scope: !5786)
!5803 = !DILocation(line: 1735, column: 13, scope: !5786)
!5804 = distinct !{!5804, !5791, !5805, !2563}
!5805 = !DILocation(line: 1736, column: 79, scope: !5782)
!5806 = !DILocation(line: 1737, column: 9, scope: !5615)
!5807 = !DILocation(line: 1737, column: 9, scope: !5614)
!5808 = !DILocation(line: 1738, column: 5, scope: !5600)
!5809 = !DILocation(line: 1738, column: 5, scope: !5599)
!5810 = !DILocation(line: 1727, column: 41, scope: !5600)
!5811 = !DILocation(line: 1727, column: 50, scope: !5600)
!5812 = !DILocation(line: 1727, column: 5, scope: !5600)
!5813 = distinct !{!5813, !5760, !5814, !2563}
!5814 = !DILocation(line: 1738, column: 5, scope: !5601)
!5815 = !DILocation(line: 1746, column: 20, scope: !5572)
!5816 = !DILocation(line: 1746, column: 23, scope: !5572)
!5817 = !{!2425, !2417, i64 240}
!5818 = !DILocation(line: 1746, column: 43, scope: !5572)
!5819 = !DILocation(line: 1746, column: 5, scope: !5572)
!5820 = !DILocation(line: 1752, column: 9, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1752, column: 9)
!5822 = !DILocation(line: 1752, column: 19, scope: !5821)
!5823 = !DILocation(line: 1752, column: 9, scope: !5572)
!5824 = !DILocation(line: 1753, column: 11, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 1752, column: 28)
!5826 = !DILocation(line: 1753, column: 22, scope: !5825)
!5827 = !{!4640, !2417, i64 0}
!5828 = !DILocation(line: 1753, column: 39, scope: !5825)
!5829 = !DILocation(line: 1753, column: 42, scope: !5825)
!5830 = !DILocation(line: 1753, column: 9, scope: !5825)
!5831 = !DILocation(line: 1755, column: 30, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1755, column: 9)
!5833 = !DILocation(line: 1755, column: 16, scope: !5832)
!5834 = !DILocation(line: 1755, column: 14, scope: !5832)
!5835 = !DILocation(line: 1755, column: 37, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 1755, column: 9)
!5837 = !DILocation(line: 1755, column: 39, scope: !5836)
!5838 = !DILocation(line: 1755, column: 9, scope: !5832)
!5839 = !DILocation(line: 1756, column: 28, scope: !5836)
!5840 = !DILocation(line: 1756, column: 31, scope: !5836)
!5841 = !DILocation(line: 1756, column: 51, scope: !5836)
!5842 = !DILocation(line: 1756, column: 54, scope: !5836)
!5843 = !DILocation(line: 1756, column: 13, scope: !5836)
!5844 = !DILocation(line: 1755, column: 52, scope: !5836)
!5845 = !DILocation(line: 1755, column: 55, scope: !5836)
!5846 = !DILocation(line: 1755, column: 50, scope: !5836)
!5847 = !DILocation(line: 1755, column: 9, scope: !5836)
!5848 = distinct !{!5848, !5838, !5849, !2563}
!5849 = !DILocation(line: 1756, column: 58, scope: !5832)
!5850 = !DILocation(line: 1757, column: 5, scope: !5825)
!5851 = !DILocation(line: 1764, column: 30, scope: !5572)
!5852 = !DILocation(line: 1764, column: 33, scope: !5572)
!5853 = !DILocation(line: 1764, column: 15, scope: !5572)
!5854 = !DILocation(line: 1764, column: 13, scope: !5572)
!5855 = !DILocation(line: 1765, column: 29, scope: !5572)
!5856 = !DILocation(line: 1765, column: 5, scope: !5572)
!5857 = !DILocation(line: 1766, column: 12, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1766, column: 5)
!5859 = !DILocation(line: 1766, column: 10, scope: !5858)
!5860 = !DILocation(line: 1766, column: 17, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1766, column: 5)
!5862 = !DILocation(line: 1766, column: 21, scope: !5861)
!5863 = !DILocation(line: 1766, column: 30, scope: !5861)
!5864 = !DILocation(line: 1766, column: 19, scope: !5861)
!5865 = !DILocation(line: 1766, column: 5, scope: !5858)
!5866 = !DILocation(line: 1767, column: 23, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 1767, column: 13)
!5868 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 1766, column: 42)
!5869 = !DILocation(line: 1767, column: 32, scope: !5867)
!5870 = !DILocation(line: 1767, column: 38, scope: !5867)
!5871 = !DILocation(line: 1767, column: 13, scope: !5867)
!5872 = !DILocation(line: 1767, column: 41, scope: !5867)
!5873 = !DILocation(line: 1767, column: 13, scope: !5868)
!5874 = !DILocation(line: 1768, column: 28, scope: !5867)
!5875 = !DILocation(line: 1768, column: 31, scope: !5867)
!5876 = !DILocation(line: 1768, column: 61, scope: !5867)
!5877 = !DILocation(line: 1768, column: 70, scope: !5867)
!5878 = !DILocation(line: 1768, column: 76, scope: !5867)
!5879 = !DILocation(line: 1768, column: 51, scope: !5867)
!5880 = !DILocation(line: 1768, column: 13, scope: !5867)
!5881 = !DILocation(line: 1769, column: 5, scope: !5868)
!5882 = !DILocation(line: 1766, column: 37, scope: !5861)
!5883 = !DILocation(line: 1766, column: 5, scope: !5861)
!5884 = distinct !{!5884, !5865, !5885, !2563}
!5885 = !DILocation(line: 1769, column: 5, scope: !5858)
!5886 = !DILocation(line: 1772, column: 20, scope: !5572)
!5887 = !DILocation(line: 1772, column: 23, scope: !5572)
!5888 = !DILocation(line: 1772, column: 5, scope: !5572)
!5889 = !DILocation(line: 1784, column: 20, scope: !5572)
!5890 = !DILocation(line: 1784, column: 5, scope: !5572)
!5891 = !DILocation(line: 1787, column: 36, scope: !5572)
!5892 = !DILocation(line: 1787, column: 39, scope: !5572)
!5893 = !DILocation(line: 1787, column: 13, scope: !5572)
!5894 = !DILocation(line: 1787, column: 5, scope: !5572)
!5895 = !DILocation(line: 1791, column: 24, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1788, column: 5)
!5897 = !DILocation(line: 1791, column: 9, scope: !5896)
!5898 = !DILocation(line: 1792, column: 24, scope: !5896)
!5899 = !DILocation(line: 1792, column: 9, scope: !5896)
!5900 = !DILocation(line: 1793, column: 24, scope: !5896)
!5901 = !DILocation(line: 1793, column: 9, scope: !5896)
!5902 = !DILocation(line: 1794, column: 24, scope: !5896)
!5903 = !DILocation(line: 1794, column: 9, scope: !5896)
!5904 = !DILocation(line: 1795, column: 24, scope: !5896)
!5905 = !DILocation(line: 1795, column: 9, scope: !5896)
!5906 = !DILocation(line: 1796, column: 24, scope: !5896)
!5907 = !DILocation(line: 1796, column: 9, scope: !5896)
!5908 = !DILocation(line: 1797, column: 24, scope: !5896)
!5909 = !DILocation(line: 1797, column: 9, scope: !5896)
!5910 = !DILocation(line: 1798, column: 24, scope: !5896)
!5911 = !DILocation(line: 1798, column: 9, scope: !5896)
!5912 = !DILocation(line: 1799, column: 24, scope: !5896)
!5913 = !DILocation(line: 1799, column: 9, scope: !5896)
!5914 = !DILocation(line: 1801, column: 14, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1801, column: 13)
!5916 = !DILocation(line: 1801, column: 24, scope: !5915)
!5917 = !DILocation(line: 1801, column: 13, scope: !5896)
!5918 = !DILocation(line: 1802, column: 28, scope: !5915)
!5919 = !DILocation(line: 1802, column: 13, scope: !5915)
!5920 = !DILocation(line: 1804, column: 13, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1804, column: 13)
!5922 = !DILocation(line: 1804, column: 25, scope: !5921)
!5923 = !DILocation(line: 1804, column: 13, scope: !5896)
!5924 = !DILocation(line: 1805, column: 28, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 1804, column: 34)
!5926 = !DILocation(line: 1805, column: 13, scope: !5925)
!5927 = !DILocation(line: 1806, column: 28, scope: !5925)
!5928 = !DILocation(line: 1806, column: 13, scope: !5925)
!5929 = !DILocation(line: 1807, column: 9, scope: !5925)
!5930 = !DILocation(line: 1809, column: 9, scope: !5896)
!5931 = !DILocation(line: 1813, column: 24, scope: !5896)
!5932 = !DILocation(line: 1813, column: 9, scope: !5896)
!5933 = !DILocation(line: 1814, column: 24, scope: !5896)
!5934 = !DILocation(line: 1814, column: 9, scope: !5896)
!5935 = !DILocation(line: 1815, column: 24, scope: !5896)
!5936 = !DILocation(line: 1815, column: 9, scope: !5896)
!5937 = !DILocation(line: 1817, column: 13, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1817, column: 13)
!5939 = !DILocation(line: 1817, column: 25, scope: !5938)
!5940 = !DILocation(line: 1817, column: 13, scope: !5896)
!5941 = !DILocation(line: 1818, column: 28, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 1817, column: 34)
!5943 = !DILocation(line: 1818, column: 13, scope: !5942)
!5944 = !DILocation(line: 1819, column: 28, scope: !5942)
!5945 = !DILocation(line: 1819, column: 13, scope: !5942)
!5946 = !DILocation(line: 1820, column: 9, scope: !5942)
!5947 = !DILocation(line: 1822, column: 9, scope: !5896)
!5948 = !DILocation(line: 1826, column: 24, scope: !5896)
!5949 = !DILocation(line: 1826, column: 9, scope: !5896)
!5950 = !DILocation(line: 1827, column: 24, scope: !5896)
!5951 = !DILocation(line: 1827, column: 9, scope: !5896)
!5952 = !DILocation(line: 1829, column: 13, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1829, column: 13)
!5954 = !DILocation(line: 1829, column: 25, scope: !5953)
!5955 = !DILocation(line: 1829, column: 13, scope: !5896)
!5956 = !DILocation(line: 1830, column: 28, scope: !5953)
!5957 = !DILocation(line: 1830, column: 13, scope: !5953)
!5958 = !DILocation(line: 1832, column: 9, scope: !5896)
!5959 = !DILocation(line: 1836, column: 9, scope: !5896)
!5960 = !DILocation(line: 1840, column: 9, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1840, column: 9)
!5962 = !DILocation(line: 1840, column: 19, scope: !5961)
!5963 = !DILocation(line: 1840, column: 9, scope: !5572)
!5964 = !DILocation(line: 1841, column: 14, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 1841, column: 13)
!5966 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 1840, column: 28)
!5967 = !DILocation(line: 1841, column: 24, scope: !5965)
!5968 = !DILocation(line: 1841, column: 13, scope: !5966)
!5969 = !DILocation(line: 1842, column: 19, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 1842, column: 17)
!5971 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 1841, column: 32)
!5972 = !DILocation(line: 1842, column: 30, scope: !5970)
!5973 = !{!4640, !2417, i64 16}
!5974 = !DILocation(line: 1842, column: 43, scope: !5970)
!5975 = !DILocation(line: 1842, column: 17, scope: !5970)
!5976 = !DILocation(line: 1842, column: 17, scope: !5971)
!5977 = !DILocation(line: 1843, column: 32, scope: !5970)
!5978 = !DILocation(line: 1843, column: 17, scope: !5970)
!5979 = !DILocation(line: 1845, column: 17, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 1845, column: 17)
!5981 = !DILocation(line: 1845, column: 28, scope: !5980)
!5982 = !{!4640, !2417, i64 112}
!5983 = !DILocation(line: 1845, column: 45, scope: !5980)
!5984 = !DILocation(line: 1846, column: 17, scope: !5980)
!5985 = !DILocation(line: 1846, column: 22, scope: !5980)
!5986 = !DILocation(line: 1846, column: 33, scope: !5980)
!5987 = !DILocation(line: 1846, column: 51, scope: !5980)
!5988 = !DILocation(line: 1846, column: 20, scope: !5980)
!5989 = !DILocation(line: 1845, column: 17, scope: !5971)
!5990 = !DILocation(line: 1847, column: 32, scope: !5980)
!5991 = !DILocation(line: 1847, column: 17, scope: !5980)
!5992 = !DILocation(line: 1849, column: 17, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 1849, column: 17)
!5994 = !DILocation(line: 1849, column: 28, scope: !5993)
!5995 = !{!4640, !2417, i64 128}
!5996 = !DILocation(line: 1849, column: 44, scope: !5993)
!5997 = !DILocation(line: 1850, column: 17, scope: !5993)
!5998 = !DILocation(line: 1850, column: 22, scope: !5993)
!5999 = !DILocation(line: 1850, column: 33, scope: !5993)
!6000 = !DILocation(line: 1850, column: 50, scope: !5993)
!6001 = !DILocation(line: 1850, column: 20, scope: !5993)
!6002 = !DILocation(line: 1849, column: 17, scope: !5971)
!6003 = !DILocation(line: 1851, column: 32, scope: !5993)
!6004 = !DILocation(line: 1851, column: 17, scope: !5993)
!6005 = !DILocation(line: 1852, column: 9, scope: !5971)
!6006 = !DILocation(line: 1853, column: 19, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 1853, column: 18)
!6008 = !DILocation(line: 1853, column: 29, scope: !6007)
!6009 = !{!3324, !2426, i64 12}
!6010 = !DILocation(line: 1853, column: 18, scope: !5965)
!6011 = !DILocation(line: 1854, column: 19, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 1854, column: 17)
!6013 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1853, column: 40)
!6014 = !DILocation(line: 1854, column: 30, scope: !6012)
!6015 = !DILocation(line: 1854, column: 43, scope: !6012)
!6016 = !DILocation(line: 1854, column: 17, scope: !6012)
!6017 = !DILocation(line: 1854, column: 17, scope: !6013)
!6018 = !DILocation(line: 1855, column: 32, scope: !6012)
!6019 = !DILocation(line: 1855, column: 17, scope: !6012)
!6020 = !DILocation(line: 1856, column: 9, scope: !6013)
!6021 = !DILocation(line: 1857, column: 18, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1857, column: 18)
!6023 = !DILocation(line: 1857, column: 28, scope: !6022)
!6024 = !{!3324, !2426, i64 20}
!6025 = !DILocation(line: 1857, column: 18, scope: !6007)
!6026 = !DILocation(line: 1858, column: 28, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1857, column: 37)
!6028 = !DILocation(line: 1858, column: 13, scope: !6027)
!6029 = !DILocation(line: 1861, column: 28, scope: !6027)
!6030 = !DILocation(line: 1861, column: 13, scope: !6027)
!6031 = !DILocation(line: 1862, column: 9, scope: !6027)
!6032 = !DILocation(line: 1863, column: 18, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1863, column: 18)
!6034 = !DILocation(line: 1863, column: 29, scope: !6033)
!6035 = !{!4640, !2417, i64 96}
!6036 = !DILocation(line: 1863, column: 39, scope: !6033)
!6037 = !DILocation(line: 1863, column: 18, scope: !6022)
!6038 = !DILocation(line: 1864, column: 28, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1863, column: 48)
!6040 = !DILocation(line: 1864, column: 13, scope: !6039)
!6041 = !DILocation(line: 1865, column: 28, scope: !6039)
!6042 = !DILocation(line: 1865, column: 13, scope: !6039)
!6043 = !DILocation(line: 1866, column: 9, scope: !6039)
!6044 = !DILocation(line: 1868, column: 28, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1867, column: 14)
!6046 = !DILocation(line: 1868, column: 13, scope: !6045)
!6047 = !DILocation(line: 1870, column: 5, scope: !5966)
!6048 = !DILocation(line: 1873, column: 9, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1873, column: 9)
!6050 = !DILocation(line: 1873, column: 23, scope: !6049)
!6051 = !DILocation(line: 1874, column: 9, scope: !6049)
!6052 = !DILocation(line: 1874, column: 14, scope: !6049)
!6053 = !DILocation(line: 1874, column: 29, scope: !6049)
!6054 = !{!6055, !2417, i64 0}
!6055 = !{!"dav_hooks_binding", !2417, i64 0, !2417, i64 8, !2417, i64 16}
!6056 = !DILocation(line: 1874, column: 42, scope: !6049)
!6057 = !DILocation(line: 1874, column: 12, scope: !6049)
!6058 = !DILocation(line: 1873, column: 9, scope: !5572)
!6059 = !DILocation(line: 1875, column: 24, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 1874, column: 53)
!6061 = !DILocation(line: 1875, column: 9, scope: !6060)
!6062 = !DILocation(line: 1876, column: 5, scope: !6060)
!6063 = !DILocation(line: 1879, column: 9, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1879, column: 9)
!6065 = !DILocation(line: 1879, column: 22, scope: !6064)
!6066 = !DILocation(line: 1879, column: 9, scope: !5572)
!6067 = !DILocation(line: 1880, column: 24, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1879, column: 31)
!6069 = !DILocation(line: 1880, column: 9, scope: !6068)
!6070 = !DILocation(line: 1881, column: 5, scope: !6068)
!6071 = !DILocation(line: 1884, column: 41, scope: !5572)
!6072 = !DILocation(line: 1884, column: 44, scope: !5572)
!6073 = !DILocation(line: 1884, column: 18, scope: !5572)
!6074 = !DILocation(line: 1884, column: 16, scope: !5572)
!6075 = !DILocation(line: 1885, column: 41, scope: !5572)
!6076 = !DILocation(line: 1885, column: 53, scope: !5572)
!6077 = !DILocation(line: 1885, column: 11, scope: !5572)
!6078 = !DILocation(line: 1887, column: 12, scope: !5619)
!6079 = !DILocation(line: 1887, column: 10, scope: !5619)
!6080 = !DILocation(line: 1887, column: 17, scope: !5618)
!6081 = !DILocation(line: 1887, column: 21, scope: !5618)
!6082 = !DILocation(line: 1887, column: 33, scope: !5618)
!6083 = !DILocation(line: 1887, column: 19, scope: !5618)
!6084 = !DILocation(line: 1887, column: 5, scope: !5619)
!6085 = !DILocation(line: 1888, column: 9, scope: !5617)
!6086 = !DILocation(line: 1888, column: 37, scope: !5617)
!6087 = !DILocation(line: 1889, column: 39, scope: !5617)
!6088 = !DILocation(line: 1889, column: 46, scope: !5617)
!6089 = !DILocation(line: 1889, column: 13, scope: !5617)
!6090 = !DILocation(line: 1891, column: 13, scope: !5622)
!6091 = !DILocation(line: 1891, column: 21, scope: !5622)
!6092 = !DILocation(line: 1891, column: 24, scope: !5622)
!6093 = !DILocation(line: 1891, column: 33, scope: !5622)
!6094 = !{!5773, !2417, i64 8}
!6095 = !DILocation(line: 1891, column: 13, scope: !5617)
!6096 = !DILocation(line: 1892, column: 13, scope: !5621)
!6097 = !DILocation(line: 1892, column: 29, scope: !5621)
!6098 = !DILocation(line: 1894, column: 13, scope: !5621)
!6099 = !DILocation(line: 1894, column: 22, scope: !5621)
!6100 = !DILocation(line: 1894, column: 33, scope: !5621)
!6101 = !DILocation(line: 1894, column: 36, scope: !5621)
!6102 = !DILocation(line: 1895, column: 31, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 1895, column: 13)
!6104 = !DILocation(line: 1895, column: 20, scope: !6103)
!6105 = !DILocation(line: 1895, column: 18, scope: !6103)
!6106 = !DILocation(line: 1895, column: 38, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 1895, column: 13)
!6108 = !DILocation(line: 1895, column: 40, scope: !6107)
!6109 = !DILocation(line: 1895, column: 43, scope: !6107)
!6110 = !DILocation(line: 1895, column: 46, scope: !6107)
!6111 = !DILocation(line: 0, scope: !6107)
!6112 = !DILocation(line: 1895, column: 13, scope: !6103)
!6113 = !DILocation(line: 1896, column: 32, scope: !6107)
!6114 = !DILocation(line: 1896, column: 41, scope: !6107)
!6115 = !DILocation(line: 1896, column: 44, scope: !6107)
!6116 = !DILocation(line: 1896, column: 17, scope: !6107)
!6117 = !DILocation(line: 1895, column: 56, scope: !6107)
!6118 = !DILocation(line: 1895, column: 59, scope: !6107)
!6119 = !DILocation(line: 1895, column: 54, scope: !6107)
!6120 = !DILocation(line: 1895, column: 13, scope: !6107)
!6121 = distinct !{!6121, !6112, !6122, !2563}
!6122 = !DILocation(line: 1896, column: 52, scope: !6103)
!6123 = !DILocation(line: 1897, column: 9, scope: !5622)
!6124 = !DILocation(line: 1897, column: 9, scope: !5621)
!6125 = !DILocation(line: 1898, column: 5, scope: !5618)
!6126 = !DILocation(line: 1898, column: 5, scope: !5617)
!6127 = !DILocation(line: 1887, column: 41, scope: !5618)
!6128 = !DILocation(line: 1887, column: 50, scope: !5618)
!6129 = !DILocation(line: 1887, column: 5, scope: !5618)
!6130 = distinct !{!6130, !6084, !6131, !2563}
!6131 = !DILocation(line: 1898, column: 5, scope: !5619)
!6132 = !DILocation(line: 1901, column: 26, scope: !5572)
!6133 = !DILocation(line: 1901, column: 11, scope: !5572)
!6134 = !DILocation(line: 1901, column: 9, scope: !5572)
!6135 = !DILocation(line: 1902, column: 39, scope: !5572)
!6136 = !DILocation(line: 1902, column: 44, scope: !5572)
!6137 = !DILocation(line: 1902, column: 10, scope: !5572)
!6138 = !DILocation(line: 1903, column: 15, scope: !5572)
!6139 = !DILocation(line: 1906, column: 12, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1906, column: 5)
!6141 = !DILocation(line: 1906, column: 10, scope: !6140)
!6142 = !DILocation(line: 1906, column: 17, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 1906, column: 5)
!6144 = !DILocation(line: 1906, column: 21, scope: !6143)
!6145 = !DILocation(line: 1906, column: 26, scope: !6143)
!6146 = !DILocation(line: 1906, column: 19, scope: !6143)
!6147 = !DILocation(line: 1906, column: 5, scope: !6140)
!6148 = !DILocation(line: 1907, column: 13, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1907, column: 13)
!6150 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 1906, column: 38)
!6151 = !DILocation(line: 1907, column: 18, scope: !6149)
!6152 = !DILocation(line: 1907, column: 21, scope: !6149)
!6153 = !{!6154, !2417, i64 0}
!6154 = !{!"apr_table_entry_t", !2417, i64 0, !2417, i64 8, !2426, i64 16}
!6155 = !DILocation(line: 1907, column: 25, scope: !6149)
!6156 = !DILocation(line: 1907, column: 13, scope: !6150)
!6157 = !DILocation(line: 1908, column: 13, scope: !6149)
!6158 = !DILocation(line: 1911, column: 29, scope: !6150)
!6159 = !DILocation(line: 1911, column: 34, scope: !6150)
!6160 = !DILocation(line: 1911, column: 37, scope: !6150)
!6161 = !DILocation(line: 1911, column: 22, scope: !6150)
!6162 = !DILocation(line: 1911, column: 42, scope: !6150)
!6163 = !DILocation(line: 1911, column: 19, scope: !6150)
!6164 = !DILocation(line: 1912, column: 5, scope: !6150)
!6165 = !DILocation(line: 1906, column: 33, scope: !6143)
!6166 = !DILocation(line: 1906, column: 5, scope: !6143)
!6167 = distinct !{!6167, !6147, !6168, !2563}
!6168 = !DILocation(line: 1912, column: 5, scope: !6140)
!6169 = !DILocation(line: 1914, column: 28, scope: !5572)
!6170 = !DILocation(line: 1914, column: 31, scope: !5572)
!6171 = !DILocation(line: 1914, column: 37, scope: !5572)
!6172 = !DILocation(line: 1914, column: 17, scope: !5572)
!6173 = !DILocation(line: 1914, column: 15, scope: !5572)
!6174 = !DILocation(line: 1914, column: 7, scope: !5572)
!6175 = !DILocation(line: 1916, column: 12, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1916, column: 5)
!6177 = !DILocation(line: 1916, column: 10, scope: !6176)
!6178 = !DILocation(line: 1916, column: 17, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 1916, column: 5)
!6180 = !DILocation(line: 1916, column: 21, scope: !6179)
!6181 = !DILocation(line: 1916, column: 26, scope: !6179)
!6182 = !DILocation(line: 1916, column: 19, scope: !6179)
!6183 = !DILocation(line: 1916, column: 5, scope: !6176)
!6184 = !DILocation(line: 1917, column: 13, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1917, column: 13)
!6186 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 1916, column: 38)
!6187 = !DILocation(line: 1917, column: 18, scope: !6185)
!6188 = !DILocation(line: 1917, column: 21, scope: !6185)
!6189 = !DILocation(line: 1917, column: 25, scope: !6185)
!6190 = !DILocation(line: 1917, column: 13, scope: !6186)
!6191 = !DILocation(line: 1918, column: 13, scope: !6185)
!6192 = !DILocation(line: 1920, column: 13, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1920, column: 13)
!6194 = !DILocation(line: 1920, column: 18, scope: !6193)
!6195 = !DILocation(line: 1920, column: 15, scope: !6193)
!6196 = !DILocation(line: 1920, column: 13, scope: !6186)
!6197 = !DILocation(line: 1921, column: 15, scope: !6193)
!6198 = !DILocation(line: 1921, column: 18, scope: !6193)
!6199 = !DILocation(line: 1921, column: 13, scope: !6193)
!6200 = !DILocation(line: 1923, column: 16, scope: !6186)
!6201 = !DILocation(line: 1923, column: 19, scope: !6186)
!6202 = !DILocation(line: 1923, column: 24, scope: !6186)
!6203 = !DILocation(line: 1923, column: 27, scope: !6186)
!6204 = !DILocation(line: 1923, column: 9, scope: !6186)
!6205 = !DILocation(line: 1924, column: 21, scope: !6186)
!6206 = !DILocation(line: 1924, column: 14, scope: !6186)
!6207 = !DILocation(line: 1924, column: 11, scope: !6186)
!6208 = !DILocation(line: 1925, column: 5, scope: !6186)
!6209 = !DILocation(line: 1916, column: 33, scope: !6179)
!6210 = !DILocation(line: 1916, column: 5, scope: !6179)
!6211 = distinct !{!6211, !6183, !6212, !2563}
!6212 = !DILocation(line: 1925, column: 5, scope: !6176)
!6213 = !DILocation(line: 1927, column: 20, scope: !5572)
!6214 = !DILocation(line: 1927, column: 23, scope: !5572)
!6215 = !DILocation(line: 1927, column: 45, scope: !5572)
!6216 = !DILocation(line: 1927, column: 5, scope: !5572)
!6217 = !DILocation(line: 1935, column: 9, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1935, column: 9)
!6219 = !DILocation(line: 1935, column: 22, scope: !6218)
!6220 = !DILocation(line: 1936, column: 9, scope: !6218)
!6221 = !DILocation(line: 1936, column: 13, scope: !6218)
!6222 = !DILocation(line: 1936, column: 27, scope: !6218)
!6223 = !{!6224, !2417, i64 0}
!6224 = !{!"dav_hooks_search", !2417, i64 0, !2417, i64 8, !2417, i64 16}
!6225 = !DILocation(line: 1936, column: 43, scope: !6218)
!6226 = !DILocation(line: 1935, column: 9, scope: !5572)
!6227 = !DILocation(line: 1937, column: 22, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 1937, column: 13)
!6229 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1936, column: 52)
!6230 = !DILocation(line: 1937, column: 36, scope: !6228)
!6231 = !DILocation(line: 1937, column: 53, scope: !6228)
!6232 = !DILocation(line: 1937, column: 20, scope: !6228)
!6233 = !DILocation(line: 1937, column: 18, scope: !6228)
!6234 = !DILocation(line: 1937, column: 57, scope: !6228)
!6235 = !DILocation(line: 1937, column: 13, scope: !6229)
!6236 = !DILocation(line: 1938, column: 35, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 1937, column: 66)
!6238 = !DILocation(line: 1938, column: 38, scope: !6237)
!6239 = !DILocation(line: 1938, column: 20, scope: !6237)
!6240 = !DILocation(line: 1938, column: 13, scope: !6237)
!6241 = !DILocation(line: 1940, column: 5, scope: !6229)
!6242 = !DILocation(line: 1943, column: 9, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1943, column: 9)
!6244 = !DILocation(line: 1943, column: 13, scope: !6243)
!6245 = !DILocation(line: 1943, column: 9, scope: !5572)
!6246 = !DILocation(line: 1944, column: 31, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1943, column: 22)
!6248 = !DILocation(line: 1944, column: 9, scope: !6247)
!6249 = !DILocation(line: 1951, column: 9, scope: !6247)
!6250 = !DILocation(line: 1955, column: 17, scope: !5626)
!6251 = !DILocation(line: 1955, column: 22, scope: !5626)
!6252 = !{!6253, !2417, i64 0}
!6253 = !{!"apr_xml_doc", !2417, i64 0, !2417, i64 8}
!6254 = !DILocation(line: 1955, column: 28, scope: !5626)
!6255 = !{!6256, !2417, i64 72}
!6256 = !{!"apr_xml_elem", !2417, i64 0, !2426, i64 8, !2417, i64 16, !3491, i64 24, !3491, i64 40, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2417, i64 80, !2417, i64 88, !2417, i64 96, !2417, i64 104}
!6257 = !DILocation(line: 1955, column: 15, scope: !5626)
!6258 = !DILocation(line: 1955, column: 10, scope: !5626)
!6259 = !DILocation(line: 1955, column: 41, scope: !5625)
!6260 = !DILocation(line: 1955, column: 46, scope: !5625)
!6261 = !DILocation(line: 1955, column: 5, scope: !5626)
!6262 = !DILocation(line: 1957, column: 9, scope: !5624)
!6263 = !DILocation(line: 1957, column: 13, scope: !5624)
!6264 = !DILocation(line: 1958, column: 9, scope: !5624)
!6265 = !DILocation(line: 1958, column: 20, scope: !5624)
!6266 = !DILocation(line: 1960, column: 13, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 1960, column: 13)
!6268 = !DILocation(line: 1960, column: 19, scope: !6267)
!6269 = !{!6256, !2426, i64 8}
!6270 = !DILocation(line: 1960, column: 22, scope: !6267)
!6271 = !DILocation(line: 1960, column: 13, scope: !5624)
!6272 = !DILocation(line: 1961, column: 24, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 1961, column: 17)
!6274 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 1960, column: 44)
!6275 = !DILocation(line: 1961, column: 30, scope: !6273)
!6276 = !{!6256, !2417, i64 0}
!6277 = !DILocation(line: 1961, column: 17, scope: !6273)
!6278 = !DILocation(line: 1961, column: 60, scope: !6273)
!6279 = !DILocation(line: 1961, column: 17, scope: !6274)
!6280 = !DILocation(line: 1962, column: 49, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1961, column: 66)
!6282 = !DILocation(line: 1962, column: 52, scope: !6281)
!6283 = !DILocation(line: 1962, column: 58, scope: !6281)
!6284 = !DILocation(line: 1962, column: 23, scope: !6281)
!6285 = !DILocation(line: 1962, column: 21, scope: !6281)
!6286 = !DILocation(line: 1963, column: 29, scope: !6281)
!6287 = !DILocation(line: 1964, column: 13, scope: !6281)
!6288 = !DILocation(line: 1965, column: 29, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1965, column: 22)
!6290 = !DILocation(line: 1965, column: 35, scope: !6289)
!6291 = !DILocation(line: 1965, column: 22, scope: !6289)
!6292 = !DILocation(line: 1965, column: 72, scope: !6289)
!6293 = !DILocation(line: 1965, column: 22, scope: !6273)
!6294 = !DILocation(line: 1966, column: 52, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 1965, column: 78)
!6296 = !DILocation(line: 1966, column: 55, scope: !6295)
!6297 = !DILocation(line: 1966, column: 65, scope: !6295)
!6298 = !DILocation(line: 1966, column: 23, scope: !6295)
!6299 = !DILocation(line: 1966, column: 21, scope: !6295)
!6300 = !DILocation(line: 1967, column: 29, scope: !6295)
!6301 = !DILocation(line: 1968, column: 13, scope: !6295)
!6302 = !DILocation(line: 1969, column: 29, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 1969, column: 22)
!6304 = !DILocation(line: 1969, column: 35, scope: !6303)
!6305 = !DILocation(line: 1969, column: 22, scope: !6303)
!6306 = !DILocation(line: 1969, column: 65, scope: !6303)
!6307 = !DILocation(line: 1969, column: 22, scope: !6289)
!6308 = !DILocation(line: 1970, column: 49, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 1969, column: 71)
!6310 = !DILocation(line: 1970, column: 52, scope: !6309)
!6311 = !DILocation(line: 1970, column: 62, scope: !6309)
!6312 = !DILocation(line: 1970, column: 23, scope: !6309)
!6313 = !DILocation(line: 1970, column: 21, scope: !6309)
!6314 = !DILocation(line: 1971, column: 29, scope: !6309)
!6315 = !DILocation(line: 1972, column: 13, scope: !6309)
!6316 = !DILocation(line: 1973, column: 9, scope: !6274)
!6317 = !DILocation(line: 1975, column: 13, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 1975, column: 13)
!6319 = !DILocation(line: 1975, column: 17, scope: !6318)
!6320 = !DILocation(line: 1975, column: 13, scope: !5624)
!6321 = !DILocation(line: 1976, column: 35, scope: !6318)
!6322 = !DILocation(line: 1976, column: 38, scope: !6318)
!6323 = !DILocation(line: 1976, column: 20, scope: !6318)
!6324 = !DILocation(line: 1976, column: 13, scope: !6318)
!6325 = !DILocation(line: 1979, column: 14, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 1979, column: 13)
!6327 = !DILocation(line: 1979, column: 26, scope: !6326)
!6328 = !DILocation(line: 1979, column: 29, scope: !6326)
!6329 = !DILocation(line: 1979, column: 39, scope: !6326)
!6330 = !DILocation(line: 1979, column: 13, scope: !5624)
!6331 = !DILocation(line: 1980, column: 26, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 1980, column: 17)
!6333 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 1979, column: 48)
!6334 = !DILocation(line: 1980, column: 37, scope: !6332)
!6335 = !{!4640, !2417, i64 8}
!6336 = !DILocation(line: 1980, column: 49, scope: !6332)
!6337 = !DILocation(line: 1980, column: 59, scope: !6332)
!6338 = !DILocation(line: 1980, column: 24, scope: !6332)
!6339 = !DILocation(line: 1980, column: 22, scope: !6332)
!6340 = !DILocation(line: 1981, column: 17, scope: !6332)
!6341 = !DILocation(line: 1980, column: 17, scope: !6333)
!6342 = !DILocation(line: 1982, column: 39, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1981, column: 26)
!6344 = !DILocation(line: 1982, column: 42, scope: !6343)
!6345 = !DILocation(line: 1982, column: 24, scope: !6343)
!6346 = !DILocation(line: 1982, column: 17, scope: !6343)
!6347 = !DILocation(line: 1984, column: 9, scope: !6333)
!6348 = !DILocation(line: 1985, column: 5, scope: !5625)
!6349 = !DILocation(line: 1985, column: 5, scope: !5624)
!6350 = !DILocation(line: 1955, column: 62, scope: !5625)
!6351 = !DILocation(line: 1955, column: 68, scope: !5625)
!6352 = !{!6256, !2417, i64 64}
!6353 = !DILocation(line: 1955, column: 60, scope: !5625)
!6354 = !DILocation(line: 1955, column: 5, scope: !5625)
!6355 = distinct !{!6355, !6261, !6356, !2563}
!6356 = !DILocation(line: 1985, column: 5, scope: !5626)
!6357 = !DILocation(line: 1988, column: 5, scope: !5572)
!6358 = !DILocation(line: 1988, column: 8, scope: !5572)
!6359 = !DILocation(line: 1988, column: 15, scope: !5572)
!6360 = !DILocation(line: 1989, column: 25, scope: !5572)
!6361 = !DILocation(line: 1989, column: 5, scope: !5572)
!6362 = !DILocation(line: 1993, column: 64, scope: !5572)
!6363 = !DILocation(line: 1992, column: 5, scope: !5572)
!6364 = !DILocation(line: 1995, column: 19, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1995, column: 5)
!6366 = !DILocation(line: 1995, column: 12, scope: !6365)
!6367 = !DILocation(line: 1995, column: 10, scope: !6365)
!6368 = !DILocation(line: 1995, column: 26, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1995, column: 5)
!6370 = !DILocation(line: 1995, column: 28, scope: !6369)
!6371 = !DILocation(line: 1995, column: 5, scope: !6365)
!6372 = !DILocation(line: 1996, column: 18, scope: !6369)
!6373 = !DILocation(line: 1996, column: 21, scope: !6369)
!6374 = !DILocation(line: 1996, column: 27, scope: !6369)
!6375 = !DILocation(line: 1996, column: 9, scope: !6369)
!6376 = !DILocation(line: 1995, column: 41, scope: !6369)
!6377 = !DILocation(line: 1995, column: 44, scope: !6369)
!6378 = !DILocation(line: 1995, column: 39, scope: !6369)
!6379 = !DILocation(line: 1995, column: 5, scope: !6369)
!6380 = distinct !{!6380, !6371, !6381, !2563}
!6381 = !DILocation(line: 1996, column: 28, scope: !6365)
!6382 = !DILocation(line: 1998, column: 48, scope: !5572)
!6383 = !DILocation(line: 1998, column: 5, scope: !5572)
!6384 = !DILocation(line: 2001, column: 5, scope: !5572)
!6385 = !DILocation(line: 2002, column: 1, scope: !5572)
!6386 = distinct !DISubprogram(name: "dav_method_propfind", scope: !3, file: !3, line: 2107, type: !4262, scopeLine: 2108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6387)
!6387 = !{!6388, !6389, !6390, !6391, !6392, !6393, !6394, !6437, !6438}
!6388 = !DILocalVariable(name: "r", arg: 1, scope: !6386, file: !3, line: 2107, type: !286)
!6389 = !DILocalVariable(name: "resource", scope: !6386, file: !3, line: 2109, type: !776)
!6390 = !DILocalVariable(name: "depth", scope: !6386, file: !3, line: 2110, type: !14)
!6391 = !DILocalVariable(name: "err", scope: !6386, file: !3, line: 2111, type: !272)
!6392 = !DILocalVariable(name: "result", scope: !6386, file: !3, line: 2112, type: !14)
!6393 = !DILocalVariable(name: "doc", scope: !6386, file: !3, line: 2113, type: !1280)
!6394 = !DILocalVariable(name: "ctx", scope: !6386, file: !3, line: 2114, type: !6395)
!6395 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_walker_ctx", file: !141, line: 1877, baseType: !6396)
!6396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_walker_ctx", file: !141, line: 1843, size: 1216, elements: !6397)
!6397 = !{!6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6426, !6427, !6428, !6429, !6430}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !6396, file: !141, line: 1846, baseType: !855, size: 384)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !6396, file: !141, line: 1852, baseType: !503, size: 64, offset: 384)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpool", scope: !6396, file: !141, line: 1855, baseType: !73, size: 64, offset: 448)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !6396, file: !141, line: 1857, baseType: !286, size: 64, offset: 512)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !6396, file: !141, line: 1860, baseType: !1280, size: 64, offset: 576)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "propfind_type", scope: !6396, file: !141, line: 1861, baseType: !14, size: 32, offset: 640)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "propstat_404", scope: !6396, file: !141, line: 1866, baseType: !239, size: 64, offset: 704)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "if_header", scope: !6396, file: !141, line: 1868, baseType: !6406, size: 64, offset: 768)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 64)
!6407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6408)
!6408 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_if_header", file: !141, line: 869, baseType: !6409)
!6409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_if_header", file: !141, line: 861, size: 320, elements: !6410)
!6410 = !{!6411, !6412, !6413, !6423, !6425}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !6409, file: !141, line: 863, baseType: !10, size: 64)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "uri_len", scope: !6409, file: !141, line: 864, baseType: !43, size: 64, offset: 64)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6409, file: !141, line: 865, baseType: !6414, size: 64, offset: 128)
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6415, size: 64)
!6415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_if_state_list", file: !141, line: 847, size: 256, elements: !6416)
!6416 = !{!6417, !6419, !6420, !6421, !6422}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6415, file: !141, line: 849, baseType: !6418, size: 32)
!6418 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_if_state_type", file: !141, line: 845, baseType: !207)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !6415, file: !141, line: 851, baseType: !14, size: 32, offset: 32)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "etag", scope: !6415, file: !141, line: 855, baseType: !10, size: 64, offset: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "locktoken", scope: !6415, file: !141, line: 856, baseType: !894, size: 64, offset: 128)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6415, file: !141, line: 858, baseType: !6414, size: 64, offset: 192)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6409, file: !141, line: 866, baseType: !6424, size: 64, offset: 192)
!6424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_header", scope: !6409, file: !141, line: 868, baseType: !14, size: 32, offset: 256)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "locktoken", scope: !6396, file: !141, line: 1869, baseType: !901, size: 64, offset: 832)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6396, file: !141, line: 1870, baseType: !967, size: 64, offset: 896)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "skip_root", scope: !6396, file: !141, line: 1871, baseType: !14, size: 32, offset: 960)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6396, file: !141, line: 1873, baseType: !14, size: 32, offset: 992)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "work_buf", scope: !6396, file: !141, line: 1875, baseType: !6431, size: 192, offset: 1024)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_buffer", file: !141, line: 449, baseType: !6432)
!6432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 444, size: 192, elements: !6433)
!6433 = !{!6434, !6435, !6436}
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_len", scope: !6432, file: !141, line: 446, baseType: !43, size: 64)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "cur_len", scope: !6432, file: !141, line: 447, baseType: !43, size: 64, offset: 64)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6432, file: !141, line: 448, baseType: !216, size: 64, offset: 128)
!6437 = !DILocalVariable(name: "multi_status", scope: !6386, file: !3, line: 2115, type: !826)
!6438 = !DILocalVariable(name: "conf", scope: !6439, file: !3, line: 2146, type: !1108)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2145, column: 56)
!6440 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2145, column: 9)
!6441 = !DILocation(line: 2107, column: 45, scope: !6386)
!6442 = !DILocation(line: 2109, column: 5, scope: !6386)
!6443 = !DILocation(line: 2109, column: 19, scope: !6386)
!6444 = !DILocation(line: 2110, column: 5, scope: !6386)
!6445 = !DILocation(line: 2110, column: 9, scope: !6386)
!6446 = !DILocation(line: 2111, column: 5, scope: !6386)
!6447 = !DILocation(line: 2111, column: 16, scope: !6386)
!6448 = !DILocation(line: 2112, column: 5, scope: !6386)
!6449 = !DILocation(line: 2112, column: 9, scope: !6386)
!6450 = !DILocation(line: 2113, column: 5, scope: !6386)
!6451 = !DILocation(line: 2113, column: 18, scope: !6386)
!6452 = !DILocation(line: 2114, column: 5, scope: !6386)
!6453 = !DILocation(line: 2114, column: 20, scope: !6386)
!6454 = !DILocation(line: 2115, column: 5, scope: !6386)
!6455 = !DILocation(line: 2115, column: 19, scope: !6386)
!6456 = !DILocation(line: 2118, column: 28, scope: !6386)
!6457 = !DILocation(line: 2118, column: 11, scope: !6386)
!6458 = !DILocation(line: 2118, column: 9, scope: !6386)
!6459 = !DILocation(line: 2120, column: 9, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2120, column: 9)
!6461 = !DILocation(line: 2120, column: 13, scope: !6460)
!6462 = !DILocation(line: 2120, column: 9, scope: !6386)
!6463 = !DILocation(line: 2121, column: 31, scope: !6460)
!6464 = !DILocation(line: 2121, column: 34, scope: !6460)
!6465 = !DILocation(line: 2121, column: 16, scope: !6460)
!6466 = !DILocation(line: 2121, column: 9, scope: !6460)
!6467 = !DILocation(line: 2123, column: 38, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2123, column: 9)
!6469 = !DILocation(line: 2123, column: 19, scope: !6468)
!6470 = !DILocation(line: 2123, column: 17, scope: !6468)
!6471 = !DILocation(line: 2123, column: 48, scope: !6468)
!6472 = !DILocation(line: 2123, column: 9, scope: !6386)
!6473 = !DILocation(line: 2124, column: 16, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2123, column: 55)
!6475 = !DILocation(line: 2124, column: 9, scope: !6474)
!6476 = !DILocation(line: 2129, column: 37, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2129, column: 9)
!6478 = !DILocation(line: 2129, column: 40, scope: !6477)
!6479 = !DILocation(line: 2129, column: 56, scope: !6477)
!6480 = !DILocation(line: 2129, column: 9, scope: !6477)
!6481 = !DILocation(line: 2129, column: 67, scope: !6477)
!6482 = !DILocation(line: 2130, column: 13, scope: !6477)
!6483 = !DILocation(line: 2130, column: 16, scope: !6477)
!6484 = !DILocation(line: 2129, column: 9, scope: !6386)
!6485 = !DILocation(line: 2131, column: 31, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 2130, column: 21)
!6487 = !DILocation(line: 2131, column: 34, scope: !6486)
!6488 = !DILocation(line: 2131, column: 16, scope: !6486)
!6489 = !DILocation(line: 2131, column: 9, scope: !6486)
!6490 = !DILocation(line: 2134, column: 32, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2134, column: 9)
!6492 = !DILocation(line: 2134, column: 35, scope: !6491)
!6493 = !DILocation(line: 2134, column: 9, scope: !6491)
!6494 = !DILocation(line: 2134, column: 45, scope: !6491)
!6495 = !DILocation(line: 2134, column: 9, scope: !6386)
!6496 = !DILocation(line: 2136, column: 9, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 2134, column: 67)
!6498 = !DILocation(line: 2139, column: 32, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2139, column: 9)
!6500 = !DILocation(line: 2139, column: 18, scope: !6499)
!6501 = !DILocation(line: 2139, column: 16, scope: !6499)
!6502 = !DILocation(line: 2139, column: 50, scope: !6499)
!6503 = !DILocation(line: 2139, column: 9, scope: !6386)
!6504 = !DILocation(line: 2142, column: 9, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 2139, column: 55)
!6506 = !DILocation(line: 2145, column: 9, scope: !6440)
!6507 = !DILocation(line: 2145, column: 15, scope: !6440)
!6508 = !DILocation(line: 2145, column: 31, scope: !6440)
!6509 = !DILocation(line: 2145, column: 34, scope: !6440)
!6510 = !DILocation(line: 2145, column: 44, scope: !6440)
!6511 = !DILocation(line: 2145, column: 9, scope: !6386)
!6512 = !DILocation(line: 2146, column: 9, scope: !6439)
!6513 = !DILocation(line: 2146, column: 23, scope: !6439)
!6514 = !DILocation(line: 2147, column: 32, scope: !6439)
!6515 = !DILocation(line: 2147, column: 14, scope: !6439)
!6516 = !DILocation(line: 2150, column: 13, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 2150, column: 13)
!6518 = !DILocation(line: 2150, column: 19, scope: !6517)
!6519 = !DILocation(line: 2150, column: 39, scope: !6517)
!6520 = !DILocation(line: 2150, column: 13, scope: !6439)
!6521 = !DILocation(line: 2151, column: 39, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 2150, column: 58)
!6523 = !DILocation(line: 2152, column: 52, scope: !6522)
!6524 = !DILocation(line: 2152, column: 55, scope: !6522)
!6525 = !DILocation(line: 2156, column: 52, scope: !6522)
!6526 = !DILocation(line: 2152, column: 39, scope: !6522)
!6527 = !DILocation(line: 2151, column: 20, scope: !6522)
!6528 = !DILocation(line: 2151, column: 13, scope: !6522)
!6529 = !DILocation(line: 2159, column: 5, scope: !6440)
!6530 = !DILocation(line: 2159, column: 5, scope: !6439)
!6531 = !DILocation(line: 2161, column: 9, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2161, column: 9)
!6533 = !DILocation(line: 2161, column: 13, scope: !6532)
!6534 = !DILocation(line: 2161, column: 35, scope: !6532)
!6535 = !DILocation(line: 2161, column: 17, scope: !6532)
!6536 = !DILocation(line: 2161, column: 9, scope: !6386)
!6537 = !DILocation(line: 2163, column: 9, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 2161, column: 53)
!6539 = !DILocation(line: 2163, column: 9, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2163, column: 9)
!6541 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 2163, column: 9)
!6542 = !DILocation(line: 2163, column: 9, scope: !6541)
!6543 = !DILocation(line: 2165, column: 9, scope: !6538)
!6544 = !DILocation(line: 2170, column: 9, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2170, column: 9)
!6546 = !DILocation(line: 2170, column: 13, scope: !6545)
!6547 = !DILocation(line: 2170, column: 21, scope: !6545)
!6548 = !DILocation(line: 2170, column: 39, scope: !6545)
!6549 = !DILocation(line: 2170, column: 44, scope: !6545)
!6550 = !DILocation(line: 2170, column: 24, scope: !6545)
!6551 = !DILocation(line: 2170, column: 61, scope: !6545)
!6552 = !DILocation(line: 2170, column: 9, scope: !6386)
!6553 = !DILocation(line: 2172, column: 13, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 2170, column: 70)
!6555 = !DILocation(line: 2172, column: 27, scope: !6554)
!6556 = !{!6557, !2426, i64 80}
!6557 = !{!"dav_walker_ctx", !6558, i64 0, !2417, i64 48, !2417, i64 56, !2417, i64 64, !2417, i64 72, !2426, i64 80, !2417, i64 88, !2417, i64 96, !2417, i64 104, !2417, i64 112, !2426, i64 120, !2426, i64 124, !6559, i64 128}
!6558 = !{!"", !2426, i64 0, !2417, i64 8, !2417, i64 16, !2417, i64 24, !2417, i64 32, !2417, i64 40}
!6559 = !{!"", !2427, i64 0, !2427, i64 8, !2417, i64 16}
!6560 = !DILocation(line: 2173, column: 5, scope: !6554)
!6561 = !DILocation(line: 2174, column: 29, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 2174, column: 14)
!6563 = !DILocation(line: 2174, column: 34, scope: !6562)
!6564 = !DILocation(line: 2174, column: 14, scope: !6562)
!6565 = !DILocation(line: 2174, column: 52, scope: !6562)
!6566 = !DILocation(line: 2174, column: 14, scope: !6545)
!6567 = !DILocation(line: 2175, column: 13, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2174, column: 61)
!6569 = !DILocation(line: 2175, column: 27, scope: !6568)
!6570 = !DILocation(line: 2176, column: 5, scope: !6568)
!6571 = !DILocation(line: 2177, column: 29, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2177, column: 14)
!6573 = !DILocation(line: 2177, column: 34, scope: !6572)
!6574 = !DILocation(line: 2177, column: 14, scope: !6572)
!6575 = !DILocation(line: 2177, column: 48, scope: !6572)
!6576 = !DILocation(line: 2177, column: 14, scope: !6562)
!6577 = !DILocation(line: 2178, column: 13, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2177, column: 57)
!6579 = !DILocation(line: 2178, column: 27, scope: !6578)
!6580 = !DILocation(line: 2179, column: 5, scope: !6578)
!6581 = !DILocation(line: 2184, column: 9, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2180, column: 10)
!6583 = !DILocation(line: 2184, column: 9, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 2184, column: 9)
!6585 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 2184, column: 9)
!6586 = !DILocation(line: 2184, column: 9, scope: !6585)
!6587 = !DILocation(line: 2187, column: 9, scope: !6582)
!6588 = !DILocation(line: 2190, column: 9, scope: !6386)
!6589 = !DILocation(line: 2190, column: 11, scope: !6386)
!6590 = !DILocation(line: 2190, column: 21, scope: !6386)
!6591 = !{!6557, !2426, i64 0}
!6592 = !DILocation(line: 2191, column: 9, scope: !6386)
!6593 = !DILocation(line: 2191, column: 11, scope: !6386)
!6594 = !DILocation(line: 2191, column: 16, scope: !6386)
!6595 = !{!6557, !2417, i64 8}
!6596 = !DILocation(line: 2192, column: 9, scope: !6386)
!6597 = !DILocation(line: 2192, column: 11, scope: !6386)
!6598 = !DILocation(line: 2192, column: 20, scope: !6386)
!6599 = !{!6557, !2417, i64 16}
!6600 = !DILocation(line: 2193, column: 18, scope: !6386)
!6601 = !DILocation(line: 2193, column: 21, scope: !6386)
!6602 = !DILocation(line: 2193, column: 9, scope: !6386)
!6603 = !DILocation(line: 2193, column: 11, scope: !6386)
!6604 = !DILocation(line: 2193, column: 16, scope: !6386)
!6605 = !{!6557, !2417, i64 24}
!6606 = !DILocation(line: 2194, column: 18, scope: !6386)
!6607 = !DILocation(line: 2194, column: 9, scope: !6386)
!6608 = !DILocation(line: 2194, column: 11, scope: !6386)
!6609 = !DILocation(line: 2194, column: 16, scope: !6386)
!6610 = !{!6557, !2417, i64 32}
!6611 = !DILocation(line: 2196, column: 15, scope: !6386)
!6612 = !DILocation(line: 2196, column: 9, scope: !6386)
!6613 = !DILocation(line: 2196, column: 13, scope: !6386)
!6614 = !{!6557, !2417, i64 72}
!6615 = !DILocation(line: 2197, column: 13, scope: !6386)
!6616 = !DILocation(line: 2197, column: 9, scope: !6386)
!6617 = !DILocation(line: 2197, column: 11, scope: !6386)
!6618 = !{!6557, !2417, i64 64}
!6619 = !DILocation(line: 2198, column: 33, scope: !6386)
!6620 = !DILocation(line: 2198, column: 36, scope: !6386)
!6621 = !DILocation(line: 2198, column: 42, scope: !6386)
!6622 = !DILocation(line: 2198, column: 45, scope: !6386)
!6623 = !DILocation(line: 2198, column: 57, scope: !6386)
!6624 = !DILocation(line: 2198, column: 14, scope: !6386)
!6625 = !DILocation(line: 2198, column: 9, scope: !6386)
!6626 = !DILocation(line: 2198, column: 12, scope: !6386)
!6627 = !{!6557, !2417, i64 48}
!6628 = !DILocation(line: 2199, column: 5, scope: !6386)
!6629 = !DILocation(line: 2200, column: 22, scope: !6386)
!6630 = !{!6557, !2417, i64 56}
!6631 = !DILocation(line: 2200, column: 5, scope: !6386)
!6632 = !DILocation(line: 2202, column: 32, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2202, column: 9)
!6634 = !DILocation(line: 2202, column: 43, scope: !6633)
!6635 = !DILocation(line: 2202, column: 45, scope: !6633)
!6636 = !DILocation(line: 2202, column: 16, scope: !6633)
!6637 = !DILocation(line: 2202, column: 14, scope: !6633)
!6638 = !DILocation(line: 2202, column: 54, scope: !6633)
!6639 = !DILocation(line: 2202, column: 9, scope: !6386)
!6640 = !DILocation(line: 2203, column: 30, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 2202, column: 63)
!6642 = !DILocation(line: 2203, column: 33, scope: !6641)
!6643 = !DILocation(line: 2203, column: 39, scope: !6641)
!6644 = !DILocation(line: 2203, column: 44, scope: !6641)
!6645 = !DILocation(line: 2207, column: 30, scope: !6641)
!6646 = !DILocation(line: 2203, column: 15, scope: !6641)
!6647 = !DILocation(line: 2203, column: 13, scope: !6641)
!6648 = !DILocation(line: 2208, column: 31, scope: !6641)
!6649 = !DILocation(line: 2208, column: 34, scope: !6641)
!6650 = !DILocation(line: 2208, column: 16, scope: !6641)
!6651 = !DILocation(line: 2208, column: 9, scope: !6641)
!6652 = !DILocation(line: 2210, column: 13, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2210, column: 9)
!6654 = !DILocation(line: 2210, column: 15, scope: !6653)
!6655 = !{!6557, !2417, i64 40}
!6656 = !DILocation(line: 2210, column: 22, scope: !6653)
!6657 = !DILocation(line: 2210, column: 9, scope: !6386)
!6658 = !DILocation(line: 2212, column: 13, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 2210, column: 31)
!6660 = !DILocation(line: 2212, column: 15, scope: !6659)
!6661 = !DILocation(line: 2212, column: 25, scope: !6659)
!6662 = !DILocation(line: 2213, column: 5, scope: !6659)
!6663 = !DILocation(line: 2223, column: 31, scope: !6386)
!6664 = !DILocation(line: 2223, column: 35, scope: !6386)
!6665 = !DILocation(line: 2224, column: 27, scope: !6386)
!6666 = !DILocation(line: 2224, column: 33, scope: !6386)
!6667 = !DILocation(line: 2224, column: 38, scope: !6386)
!6668 = !{!6253, !2417, i64 8}
!6669 = !DILocation(line: 2223, column: 5, scope: !6386)
!6670 = !DILocation(line: 2227, column: 13, scope: !6386)
!6671 = !DILocation(line: 2227, column: 23, scope: !6386)
!6672 = !DILocation(line: 2227, column: 30, scope: !6386)
!6673 = !{!3193, !2417, i64 120}
!6674 = !DILocation(line: 2227, column: 41, scope: !6386)
!6675 = !DILocation(line: 2227, column: 44, scope: !6386)
!6676 = !DILocation(line: 2227, column: 11, scope: !6386)
!6677 = !DILocation(line: 2227, column: 9, scope: !6386)
!6678 = !DILocation(line: 2229, column: 13, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2229, column: 9)
!6680 = !DILocation(line: 2229, column: 15, scope: !6679)
!6681 = !DILocation(line: 2229, column: 22, scope: !6679)
!6682 = !DILocation(line: 2229, column: 9, scope: !6386)
!6683 = !DILocation(line: 2230, column: 15, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 2229, column: 31)
!6685 = !DILocation(line: 2230, column: 17, scope: !6684)
!6686 = !DILocation(line: 2230, column: 25, scope: !6684)
!6687 = !DILocation(line: 2230, column: 32, scope: !6684)
!6688 = !DILocation(line: 2230, column: 50, scope: !6684)
!6689 = !DILocation(line: 2230, column: 52, scope: !6684)
!6690 = !DILocation(line: 2230, column: 9, scope: !6684)
!6691 = !DILocation(line: 2231, column: 5, scope: !6684)
!6692 = !DILocation(line: 2233, column: 9, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2233, column: 9)
!6694 = !DILocation(line: 2233, column: 13, scope: !6693)
!6695 = !DILocation(line: 2233, column: 9, scope: !6386)
!6696 = !DILocation(line: 2240, column: 30, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 2233, column: 22)
!6698 = !DILocation(line: 2240, column: 33, scope: !6697)
!6699 = !DILocation(line: 2240, column: 39, scope: !6697)
!6700 = !DILocation(line: 2240, column: 44, scope: !6697)
!6701 = !DILocation(line: 2242, column: 67, scope: !6697)
!6702 = !DILocation(line: 2240, column: 15, scope: !6697)
!6703 = !DILocation(line: 2240, column: 13, scope: !6697)
!6704 = !DILocation(line: 2243, column: 21, scope: !6697)
!6705 = !DILocation(line: 2243, column: 24, scope: !6697)
!6706 = !DILocation(line: 2243, column: 9, scope: !6697)
!6707 = !DILocation(line: 2244, column: 9, scope: !6697)
!6708 = !DILocation(line: 2244, column: 12, scope: !6697)
!6709 = !DILocation(line: 2244, column: 24, scope: !6697)
!6710 = !DILocation(line: 2244, column: 32, scope: !6697)
!6711 = !{!2749, !2426, i64 156}
!6712 = !DILocation(line: 2245, column: 9, scope: !6697)
!6713 = !DILocation(line: 2248, column: 28, scope: !6386)
!6714 = !DILocation(line: 2248, column: 35, scope: !6386)
!6715 = !DILocation(line: 2248, column: 5, scope: !6386)
!6716 = !DILocation(line: 2251, column: 5, scope: !6386)
!6717 = !DILocation(line: 2252, column: 1, scope: !6386)
!6718 = distinct !DISubprogram(name: "dav_method_proppatch", scope: !3, file: !3, line: 2385, type: !4262, scopeLine: 2386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6719)
!6719 = !{!6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6732, !6733, !6737, !6738}
!6720 = !DILocalVariable(name: "r", arg: 1, scope: !6718, file: !3, line: 2385, type: !286)
!6721 = !DILocalVariable(name: "err", scope: !6718, file: !3, line: 2387, type: !272)
!6722 = !DILocalVariable(name: "resource", scope: !6718, file: !3, line: 2388, type: !776)
!6723 = !DILocalVariable(name: "result", scope: !6718, file: !3, line: 2389, type: !14)
!6724 = !DILocalVariable(name: "doc", scope: !6718, file: !3, line: 2390, type: !1280)
!6725 = !DILocalVariable(name: "child", scope: !6718, file: !3, line: 2391, type: !226)
!6726 = !DILocalVariable(name: "propdb", scope: !6718, file: !3, line: 2392, type: !222)
!6727 = !DILocalVariable(name: "failure", scope: !6718, file: !3, line: 2393, type: !14)
!6728 = !DILocalVariable(name: "resp", scope: !6718, file: !3, line: 2394, type: !827)
!6729 = !DILocalVariable(name: "propstat_text", scope: !6718, file: !3, line: 2395, type: !239)
!6730 = !DILocalVariable(name: "ctx_list", scope: !6718, file: !3, line: 2396, type: !450)
!6731 = !DILocalVariable(name: "ctx", scope: !6718, file: !3, line: 2397, type: !217)
!6732 = !DILocalVariable(name: "av_info", scope: !6718, file: !3, line: 2398, type: !4860)
!6733 = !DILocalVariable(name: "is_remove", scope: !6734, file: !3, line: 2469, type: !14)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 2468, column: 70)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 2468, column: 5)
!6736 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2468, column: 5)
!6737 = !DILocalVariable(name: "prop_group", scope: !6734, file: !3, line: 2470, type: !226)
!6738 = !DILocalVariable(name: "one_prop", scope: !6734, file: !3, line: 2471, type: !226)
!6739 = !DILocation(line: 2385, column: 46, scope: !6718)
!6740 = !DILocation(line: 2387, column: 5, scope: !6718)
!6741 = !DILocation(line: 2387, column: 16, scope: !6718)
!6742 = !DILocation(line: 2388, column: 5, scope: !6718)
!6743 = !DILocation(line: 2388, column: 19, scope: !6718)
!6744 = !DILocation(line: 2389, column: 5, scope: !6718)
!6745 = !DILocation(line: 2389, column: 9, scope: !6718)
!6746 = !DILocation(line: 2390, column: 5, scope: !6718)
!6747 = !DILocation(line: 2390, column: 18, scope: !6718)
!6748 = !DILocation(line: 2391, column: 5, scope: !6718)
!6749 = !DILocation(line: 2391, column: 19, scope: !6718)
!6750 = !DILocation(line: 2392, column: 5, scope: !6718)
!6751 = !DILocation(line: 2392, column: 17, scope: !6718)
!6752 = !DILocation(line: 2393, column: 5, scope: !6718)
!6753 = !DILocation(line: 2393, column: 9, scope: !6718)
!6754 = !DILocation(line: 2394, column: 5, scope: !6718)
!6755 = !DILocation(line: 2394, column: 18, scope: !6718)
!6756 = !DILocation(line: 2395, column: 5, scope: !6718)
!6757 = !DILocation(line: 2395, column: 15, scope: !6718)
!6758 = !DILocation(line: 2396, column: 5, scope: !6718)
!6759 = !DILocation(line: 2396, column: 25, scope: !6718)
!6760 = !DILocation(line: 2397, column: 5, scope: !6718)
!6761 = !DILocation(line: 2397, column: 19, scope: !6718)
!6762 = !DILocation(line: 2398, column: 5, scope: !6718)
!6763 = !DILocation(line: 2398, column: 27, scope: !6718)
!6764 = !DILocation(line: 2401, column: 28, scope: !6718)
!6765 = !DILocation(line: 2401, column: 11, scope: !6718)
!6766 = !DILocation(line: 2401, column: 9, scope: !6718)
!6767 = !DILocation(line: 2403, column: 9, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2403, column: 9)
!6769 = !DILocation(line: 2403, column: 13, scope: !6768)
!6770 = !DILocation(line: 2403, column: 9, scope: !6718)
!6771 = !DILocation(line: 2404, column: 31, scope: !6768)
!6772 = !DILocation(line: 2404, column: 34, scope: !6768)
!6773 = !DILocation(line: 2404, column: 16, scope: !6768)
!6774 = !DILocation(line: 2404, column: 9, scope: !6768)
!6775 = !DILocation(line: 2406, column: 38, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2406, column: 9)
!6777 = !DILocation(line: 2406, column: 19, scope: !6776)
!6778 = !DILocation(line: 2406, column: 17, scope: !6776)
!6779 = !DILocation(line: 2406, column: 48, scope: !6776)
!6780 = !DILocation(line: 2406, column: 9, scope: !6718)
!6781 = !DILocation(line: 2407, column: 16, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 2406, column: 55)
!6783 = !DILocation(line: 2407, column: 9, scope: !6782)
!6784 = !DILocation(line: 2412, column: 37, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2412, column: 9)
!6786 = !DILocation(line: 2412, column: 40, scope: !6785)
!6787 = !DILocation(line: 2412, column: 56, scope: !6785)
!6788 = !DILocation(line: 2412, column: 9, scope: !6785)
!6789 = !DILocation(line: 2412, column: 67, scope: !6785)
!6790 = !DILocation(line: 2413, column: 13, scope: !6785)
!6791 = !DILocation(line: 2413, column: 16, scope: !6785)
!6792 = !DILocation(line: 2412, column: 9, scope: !6718)
!6793 = !DILocation(line: 2414, column: 31, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 2413, column: 21)
!6795 = !DILocation(line: 2414, column: 34, scope: !6794)
!6796 = !DILocation(line: 2414, column: 16, scope: !6794)
!6797 = !DILocation(line: 2414, column: 9, scope: !6794)
!6798 = !DILocation(line: 2417, column: 10, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2417, column: 9)
!6800 = !DILocation(line: 2417, column: 20, scope: !6799)
!6801 = !DILocation(line: 2417, column: 9, scope: !6718)
!6802 = !DILocation(line: 2419, column: 9, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 2417, column: 28)
!6804 = !DILocation(line: 2422, column: 9, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2422, column: 9)
!6806 = !DILocation(line: 2422, column: 13, scope: !6805)
!6807 = !DILocation(line: 2422, column: 21, scope: !6805)
!6808 = !DILocation(line: 2422, column: 43, scope: !6805)
!6809 = !DILocation(line: 2422, column: 25, scope: !6805)
!6810 = !DILocation(line: 2422, column: 9, scope: !6718)
!6811 = !DILocation(line: 2424, column: 9, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6805, file: !3, line: 2422, column: 67)
!6813 = !DILocation(line: 2424, column: 9, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 2424, column: 9)
!6815 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2424, column: 9)
!6816 = !DILocation(line: 2424, column: 9, scope: !6815)
!6817 = !DILocation(line: 2427, column: 9, scope: !6812)
!6818 = !DILocation(line: 2432, column: 37, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2432, column: 9)
!6820 = !DILocation(line: 2432, column: 40, scope: !6819)
!6821 = !DILocation(line: 2432, column: 16, scope: !6819)
!6822 = !DILocation(line: 2432, column: 14, scope: !6819)
!6823 = !DILocation(line: 2433, column: 67, scope: !6819)
!6824 = !DILocation(line: 2432, column: 9, scope: !6718)
!6825 = !DILocation(line: 2435, column: 31, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 2433, column: 76)
!6827 = !DILocation(line: 2435, column: 34, scope: !6826)
!6828 = !DILocation(line: 2435, column: 16, scope: !6826)
!6829 = !DILocation(line: 2435, column: 9, scope: !6826)
!6830 = !DILocation(line: 2439, column: 34, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2439, column: 9)
!6832 = !DILocation(line: 2439, column: 37, scope: !6831)
!6833 = !DILocation(line: 2439, column: 16, scope: !6831)
!6834 = !DILocation(line: 2439, column: 14, scope: !6831)
!6835 = !DILocation(line: 2441, column: 45, scope: !6831)
!6836 = !DILocation(line: 2439, column: 9, scope: !6718)
!6837 = !DILocation(line: 2443, column: 31, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 2441, column: 54)
!6839 = !DILocation(line: 2443, column: 34, scope: !6838)
!6840 = !DILocation(line: 2443, column: 16, scope: !6838)
!6841 = !DILocation(line: 2443, column: 9, scope: !6838)
!6842 = !DILocation(line: 2446, column: 32, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2446, column: 9)
!6844 = !DILocation(line: 2446, column: 41, scope: !6843)
!6845 = !DILocation(line: 2447, column: 49, scope: !6843)
!6846 = !DILocation(line: 2447, column: 54, scope: !6843)
!6847 = !DILocation(line: 2446, column: 16, scope: !6843)
!6848 = !DILocation(line: 2446, column: 14, scope: !6843)
!6849 = !DILocation(line: 2448, column: 42, scope: !6843)
!6850 = !DILocation(line: 2446, column: 9, scope: !6718)
!6851 = !DILocation(line: 2450, column: 26, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 2448, column: 51)
!6853 = !DILocation(line: 2450, column: 29, scope: !6852)
!6854 = !DILocation(line: 2450, column: 9, scope: !6852)
!6855 = !DILocation(line: 2452, column: 30, scope: !6852)
!6856 = !DILocation(line: 2452, column: 33, scope: !6852)
!6857 = !DILocation(line: 2453, column: 43, scope: !6852)
!6858 = !DILocation(line: 2453, column: 46, scope: !6852)
!6859 = !DILocation(line: 2456, column: 43, scope: !6852)
!6860 = !DILocation(line: 2453, column: 30, scope: !6852)
!6861 = !DILocation(line: 2457, column: 30, scope: !6852)
!6862 = !DILocation(line: 2452, column: 15, scope: !6852)
!6863 = !DILocation(line: 2452, column: 13, scope: !6852)
!6864 = !DILocation(line: 2458, column: 31, scope: !6852)
!6865 = !DILocation(line: 2458, column: 34, scope: !6852)
!6866 = !DILocation(line: 2458, column: 16, scope: !6852)
!6867 = !DILocation(line: 2458, column: 9, scope: !6852)
!6868 = !DILocation(line: 2465, column: 31, scope: !6718)
!6869 = !DILocation(line: 2465, column: 34, scope: !6718)
!6870 = !DILocation(line: 2465, column: 16, scope: !6718)
!6871 = !DILocation(line: 2465, column: 14, scope: !6718)
!6872 = !DILocation(line: 2468, column: 18, scope: !6736)
!6873 = !DILocation(line: 2468, column: 23, scope: !6736)
!6874 = !DILocation(line: 2468, column: 29, scope: !6736)
!6875 = !DILocation(line: 2468, column: 16, scope: !6736)
!6876 = !DILocation(line: 2468, column: 10, scope: !6736)
!6877 = !DILocation(line: 2468, column: 42, scope: !6735)
!6878 = !DILocation(line: 2468, column: 5, scope: !6736)
!6879 = !DILocation(line: 2469, column: 9, scope: !6734)
!6880 = !DILocation(line: 2469, column: 13, scope: !6734)
!6881 = !DILocation(line: 2470, column: 9, scope: !6734)
!6882 = !DILocation(line: 2470, column: 23, scope: !6734)
!6883 = !DILocation(line: 2471, column: 9, scope: !6734)
!6884 = !DILocation(line: 2471, column: 23, scope: !6734)
!6885 = !DILocation(line: 2474, column: 13, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 2474, column: 13)
!6887 = !DILocation(line: 2474, column: 20, scope: !6886)
!6888 = !DILocation(line: 2474, column: 23, scope: !6886)
!6889 = !DILocation(line: 2475, column: 13, scope: !6886)
!6890 = !DILocation(line: 2475, column: 39, scope: !6886)
!6891 = !DILocation(line: 2475, column: 46, scope: !6886)
!6892 = !DILocation(line: 2475, column: 32, scope: !6886)
!6893 = !DILocation(line: 2475, column: 62, scope: !6886)
!6894 = !DILocation(line: 2475, column: 29, scope: !6886)
!6895 = !DILocation(line: 2476, column: 17, scope: !6886)
!6896 = !DILocation(line: 2476, column: 27, scope: !6886)
!6897 = !DILocation(line: 2476, column: 34, scope: !6886)
!6898 = !DILocation(line: 2476, column: 20, scope: !6886)
!6899 = !DILocation(line: 2476, column: 47, scope: !6886)
!6900 = !DILocation(line: 2474, column: 13, scope: !6734)
!6901 = !DILocation(line: 2477, column: 13, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 2476, column: 54)
!6903 = !DILocation(line: 2481, column: 42, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 2481, column: 13)
!6905 = !DILocation(line: 2481, column: 27, scope: !6904)
!6906 = !DILocation(line: 2481, column: 25, scope: !6904)
!6907 = !DILocation(line: 2481, column: 58, scope: !6904)
!6908 = !DILocation(line: 2481, column: 13, scope: !6734)
!6909 = !DILocation(line: 2482, column: 30, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 2481, column: 67)
!6911 = !DILocation(line: 2482, column: 13, scope: !6910)
!6912 = !DILocation(line: 2485, column: 30, scope: !6910)
!6913 = !DILocation(line: 2485, column: 33, scope: !6910)
!6914 = !DILocation(line: 2485, column: 13, scope: !6910)
!6915 = !DILocation(line: 2488, column: 13, scope: !6910)
!6916 = !DILocation(line: 2488, column: 13, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 2488, column: 13)
!6918 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 2488, column: 13)
!6919 = !DILocation(line: 2488, column: 13, scope: !6918)
!6920 = !DILocation(line: 2491, column: 13, scope: !6910)
!6921 = !DILocation(line: 2494, column: 25, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 2494, column: 9)
!6923 = !DILocation(line: 2494, column: 37, scope: !6922)
!6924 = !DILocation(line: 2494, column: 23, scope: !6922)
!6925 = !DILocation(line: 2494, column: 14, scope: !6922)
!6926 = !DILocation(line: 2494, column: 50, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 2494, column: 9)
!6928 = !DILocation(line: 2494, column: 9, scope: !6922)
!6929 = !DILocation(line: 2497, column: 50, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 2495, column: 41)
!6931 = !DILocation(line: 2497, column: 35, scope: !6930)
!6932 = !DILocation(line: 2497, column: 17, scope: !6930)
!6933 = !DILocation(line: 2498, column: 27, scope: !6930)
!6934 = !DILocation(line: 2498, column: 13, scope: !6930)
!6935 = !DILocation(line: 2498, column: 18, scope: !6930)
!6936 = !DILocation(line: 2498, column: 25, scope: !6930)
!6937 = !{!3404, !2417, i64 0}
!6938 = !DILocation(line: 2499, column: 30, scope: !6930)
!6939 = !DILocation(line: 2499, column: 13, scope: !6930)
!6940 = !DILocation(line: 2499, column: 18, scope: !6930)
!6941 = !DILocation(line: 2499, column: 28, scope: !6930)
!6942 = !DILocation(line: 2500, column: 25, scope: !6930)
!6943 = !DILocation(line: 2500, column: 13, scope: !6930)
!6944 = !DILocation(line: 2500, column: 18, scope: !6930)
!6945 = !DILocation(line: 2500, column: 23, scope: !6930)
!6946 = !DILocation(line: 2502, column: 22, scope: !6930)
!6947 = !DILocation(line: 2502, column: 13, scope: !6930)
!6948 = !DILocation(line: 2502, column: 18, scope: !6930)
!6949 = !DILocation(line: 2502, column: 20, scope: !6930)
!6950 = !{!3404, !2417, i64 48}
!6951 = !DILocation(line: 2504, column: 31, scope: !6930)
!6952 = !DILocation(line: 2504, column: 13, scope: !6930)
!6953 = !DILocation(line: 2506, column: 18, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2506, column: 18)
!6955 = !DILocation(line: 2506, column: 18, scope: !6930)
!6956 = !DILocation(line: 2507, column: 25, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 2506, column: 47)
!6958 = !DILocation(line: 2508, column: 13, scope: !6957)
!6959 = !DILocation(line: 2509, column: 9, scope: !6930)
!6960 = !DILocation(line: 2495, column: 25, scope: !6927)
!6961 = !DILocation(line: 2495, column: 35, scope: !6927)
!6962 = !DILocation(line: 2495, column: 23, scope: !6927)
!6963 = !DILocation(line: 2494, column: 9, scope: !6927)
!6964 = distinct !{!6964, !6928, !6965, !2563}
!6965 = !DILocation(line: 2509, column: 9, scope: !6922)
!6966 = !DILocation(line: 2510, column: 5, scope: !6735)
!6967 = !DILocation(line: 2510, column: 5, scope: !6734)
!6968 = !DILocation(line: 2468, column: 57, scope: !6735)
!6969 = !DILocation(line: 2468, column: 64, scope: !6735)
!6970 = !DILocation(line: 2468, column: 55, scope: !6735)
!6971 = !DILocation(line: 2468, column: 5, scope: !6735)
!6972 = distinct !{!6972, !6878, !6973, !2563}
!6973 = !DILocation(line: 2510, column: 5, scope: !6736)
!6974 = !DILocation(line: 2515, column: 10, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2515, column: 9)
!6976 = !DILocation(line: 2515, column: 18, scope: !6975)
!6977 = !DILocation(line: 2515, column: 57, scope: !6975)
!6978 = !DILocation(line: 2515, column: 21, scope: !6975)
!6979 = !DILocation(line: 2515, column: 9, scope: !6718)
!6980 = !DILocation(line: 2516, column: 17, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 2515, column: 74)
!6982 = !DILocation(line: 2517, column: 5, scope: !6981)
!6983 = !DILocation(line: 2520, column: 9, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2520, column: 9)
!6985 = !DILocation(line: 2520, column: 9, scope: !6718)
!6986 = !DILocation(line: 2521, column: 55, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 2520, column: 18)
!6988 = !DILocation(line: 2521, column: 15, scope: !6987)
!6989 = !DILocation(line: 2522, column: 46, scope: !6987)
!6990 = !DILocation(line: 2522, column: 49, scope: !6987)
!6991 = !DILocation(line: 2522, column: 55, scope: !6987)
!6992 = !DILocation(line: 2522, column: 25, scope: !6987)
!6993 = !DILocation(line: 2522, column: 23, scope: !6987)
!6994 = !DILocation(line: 2523, column: 5, scope: !6987)
!6995 = !DILocation(line: 2525, column: 53, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 2524, column: 10)
!6997 = !DILocation(line: 2525, column: 15, scope: !6996)
!6998 = !DILocation(line: 2526, column: 47, scope: !6996)
!6999 = !DILocation(line: 2526, column: 50, scope: !6996)
!7000 = !DILocation(line: 2526, column: 56, scope: !6996)
!7001 = !DILocation(line: 2526, column: 25, scope: !6996)
!7002 = !DILocation(line: 2526, column: 23, scope: !6996)
!7003 = !DILocation(line: 2530, column: 22, scope: !6718)
!7004 = !DILocation(line: 2530, column: 5, scope: !6718)
!7005 = !DILocation(line: 2533, column: 22, scope: !6718)
!7006 = !DILocation(line: 2533, column: 25, scope: !6718)
!7007 = !DILocation(line: 2533, column: 35, scope: !6718)
!7008 = !DILocation(line: 2533, column: 5, scope: !6718)
!7009 = !DILocation(line: 2536, column: 53, scope: !6718)
!7010 = !DILocation(line: 2536, column: 11, scope: !6718)
!7011 = !DILocation(line: 2538, column: 17, scope: !6718)
!7012 = !DILocation(line: 2538, column: 27, scope: !6718)
!7013 = !DILocation(line: 2538, column: 10, scope: !6718)
!7014 = !DILocation(line: 2538, column: 15, scope: !6718)
!7015 = !DILocation(line: 2541, column: 33, scope: !6718)
!7016 = !DILocation(line: 2541, column: 10, scope: !6718)
!7017 = !DILocation(line: 2541, column: 21, scope: !6718)
!7018 = !DILocation(line: 2541, column: 31, scope: !6718)
!7019 = !DILocation(line: 2543, column: 26, scope: !6718)
!7020 = !DILocation(line: 2543, column: 55, scope: !6718)
!7021 = !DILocation(line: 2543, column: 60, scope: !6718)
!7022 = !DILocation(line: 2543, column: 5, scope: !6718)
!7023 = !DILocation(line: 2546, column: 5, scope: !6718)
!7024 = !DILocation(line: 2547, column: 1, scope: !6718)
!7025 = distinct !DISubprogram(name: "dav_method_mkcol", scope: !3, file: !3, line: 2599, type: !4262, scopeLine: 2600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7026)
!7026 = !{!7027, !7028, !7029, !7030, !7031, !7032, !7033, !7034, !7035, !7036}
!7027 = !DILocalVariable(name: "r", arg: 1, scope: !7025, file: !3, line: 2599, type: !286)
!7028 = !DILocalVariable(name: "resource", scope: !7025, file: !3, line: 2601, type: !776)
!7029 = !DILocalVariable(name: "resource_state", scope: !7025, file: !3, line: 2602, type: !14)
!7030 = !DILocalVariable(name: "av_info", scope: !7025, file: !3, line: 2603, type: !4860)
!7031 = !DILocalVariable(name: "locks_hooks", scope: !7025, file: !3, line: 2604, type: !880)
!7032 = !DILocalVariable(name: "err", scope: !7025, file: !3, line: 2605, type: !272)
!7033 = !DILocalVariable(name: "err2", scope: !7025, file: !3, line: 2606, type: !272)
!7034 = !DILocalVariable(name: "result", scope: !7025, file: !3, line: 2607, type: !14)
!7035 = !DILocalVariable(name: "multi_status", scope: !7025, file: !3, line: 2608, type: !826)
!7036 = !DILocalVariable(name: "lockdb", scope: !7037, file: !3, line: 2687, type: !875)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 2686, column: 30)
!7038 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2686, column: 9)
!7039 = !DILocation(line: 2599, column: 42, scope: !7025)
!7040 = !DILocation(line: 2601, column: 5, scope: !7025)
!7041 = !DILocation(line: 2601, column: 19, scope: !7025)
!7042 = !DILocation(line: 2602, column: 5, scope: !7025)
!7043 = !DILocation(line: 2602, column: 9, scope: !7025)
!7044 = !DILocation(line: 2603, column: 5, scope: !7025)
!7045 = !DILocation(line: 2603, column: 27, scope: !7025)
!7046 = !DILocation(line: 2604, column: 5, scope: !7025)
!7047 = !DILocation(line: 2604, column: 28, scope: !7025)
!7048 = !DILocation(line: 2604, column: 42, scope: !7025)
!7049 = !DILocation(line: 2605, column: 5, scope: !7025)
!7050 = !DILocation(line: 2605, column: 16, scope: !7025)
!7051 = !DILocation(line: 2606, column: 5, scope: !7025)
!7052 = !DILocation(line: 2606, column: 16, scope: !7025)
!7053 = !DILocation(line: 2607, column: 5, scope: !7025)
!7054 = !DILocation(line: 2607, column: 9, scope: !7025)
!7055 = !DILocation(line: 2608, column: 5, scope: !7025)
!7056 = !DILocation(line: 2608, column: 19, scope: !7025)
!7057 = !DILocation(line: 2612, column: 38, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2612, column: 9)
!7059 = !DILocation(line: 2612, column: 19, scope: !7058)
!7060 = !DILocation(line: 2612, column: 17, scope: !7058)
!7061 = !DILocation(line: 2612, column: 42, scope: !7058)
!7062 = !DILocation(line: 2612, column: 9, scope: !7025)
!7063 = !DILocation(line: 2613, column: 16, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 2612, column: 49)
!7065 = !DILocation(line: 2613, column: 9, scope: !7064)
!7066 = !DILocation(line: 2617, column: 28, scope: !7025)
!7067 = !DILocation(line: 2617, column: 11, scope: !7025)
!7068 = !DILocation(line: 2617, column: 9, scope: !7025)
!7069 = !DILocation(line: 2619, column: 9, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2619, column: 9)
!7071 = !DILocation(line: 2619, column: 13, scope: !7070)
!7072 = !DILocation(line: 2619, column: 9, scope: !7025)
!7073 = !DILocation(line: 2620, column: 31, scope: !7070)
!7074 = !DILocation(line: 2620, column: 34, scope: !7070)
!7075 = !DILocation(line: 2620, column: 16, scope: !7070)
!7076 = !DILocation(line: 2620, column: 9, scope: !7070)
!7077 = !DILocation(line: 2623, column: 37, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2623, column: 9)
!7079 = !DILocation(line: 2623, column: 40, scope: !7078)
!7080 = !DILocation(line: 2623, column: 9, scope: !7078)
!7081 = !DILocation(line: 2623, column: 68, scope: !7078)
!7082 = !DILocation(line: 2624, column: 13, scope: !7078)
!7083 = !DILocation(line: 2624, column: 16, scope: !7078)
!7084 = !DILocation(line: 2623, column: 9, scope: !7025)
!7085 = !DILocation(line: 2625, column: 31, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2624, column: 21)
!7087 = !DILocation(line: 2625, column: 34, scope: !7086)
!7088 = !DILocation(line: 2625, column: 16, scope: !7086)
!7089 = !DILocation(line: 2625, column: 9, scope: !7086)
!7090 = !DILocation(line: 2628, column: 9, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2628, column: 9)
!7092 = !DILocation(line: 2628, column: 19, scope: !7091)
!7093 = !DILocation(line: 2628, column: 9, scope: !7025)
!7094 = !DILocation(line: 2633, column: 9, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 2628, column: 27)
!7096 = !DILocation(line: 2636, column: 45, scope: !7025)
!7097 = !DILocation(line: 2636, column: 48, scope: !7025)
!7098 = !DILocation(line: 2636, column: 22, scope: !7025)
!7099 = !DILocation(line: 2636, column: 20, scope: !7025)
!7100 = !DILocation(line: 2649, column: 37, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2649, column: 9)
!7102 = !DILocation(line: 2649, column: 40, scope: !7101)
!7103 = !DILocation(line: 2650, column: 37, scope: !7101)
!7104 = !DILocation(line: 2650, column: 52, scope: !7101)
!7105 = !DILocation(line: 2649, column: 16, scope: !7101)
!7106 = !DILocation(line: 2649, column: 14, scope: !7101)
!7107 = !DILocation(line: 2652, column: 67, scope: !7101)
!7108 = !DILocation(line: 2649, column: 9, scope: !7025)
!7109 = !DILocation(line: 2654, column: 31, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 2652, column: 76)
!7111 = !DILocation(line: 2654, column: 34, scope: !7110)
!7112 = !DILocation(line: 2654, column: 39, scope: !7110)
!7113 = !DILocation(line: 2654, column: 16, scope: !7110)
!7114 = !DILocation(line: 2654, column: 9, scope: !7110)
!7115 = !DILocation(line: 2658, column: 34, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2658, column: 9)
!7117 = !DILocation(line: 2658, column: 37, scope: !7116)
!7118 = !DILocation(line: 2658, column: 16, scope: !7116)
!7119 = !DILocation(line: 2658, column: 14, scope: !7116)
!7120 = !DILocation(line: 2659, column: 45, scope: !7116)
!7121 = !DILocation(line: 2658, column: 9, scope: !7025)
!7122 = !DILocation(line: 2661, column: 31, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 2659, column: 54)
!7124 = !DILocation(line: 2661, column: 34, scope: !7123)
!7125 = !DILocation(line: 2661, column: 16, scope: !7123)
!7126 = !DILocation(line: 2661, column: 9, scope: !7123)
!7127 = !DILocation(line: 2665, column: 5, scope: !7025)
!7128 = !DILocation(line: 2665, column: 15, scope: !7025)
!7129 = !DILocation(line: 2665, column: 26, scope: !7025)
!7130 = !DILocation(line: 2666, column: 13, scope: !7025)
!7131 = !DILocation(line: 2666, column: 23, scope: !7025)
!7132 = !DILocation(line: 2666, column: 30, scope: !7025)
!7133 = !{!3193, !2417, i64 88}
!7134 = !DILocation(line: 2666, column: 49, scope: !7025)
!7135 = !DILocation(line: 2666, column: 11, scope: !7025)
!7136 = !DILocation(line: 2666, column: 9, scope: !7025)
!7137 = !DILocation(line: 2669, column: 29, scope: !7025)
!7138 = !DILocation(line: 2669, column: 38, scope: !7025)
!7139 = !DILocation(line: 2669, column: 42, scope: !7025)
!7140 = !DILocation(line: 2669, column: 12, scope: !7025)
!7141 = !DILocation(line: 2669, column: 10, scope: !7025)
!7142 = !DILocation(line: 2673, column: 9, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2673, column: 9)
!7144 = !DILocation(line: 2673, column: 13, scope: !7143)
!7145 = !DILocation(line: 2673, column: 9, scope: !7025)
!7146 = !DILocation(line: 2674, column: 31, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 2673, column: 22)
!7148 = !DILocation(line: 2674, column: 34, scope: !7147)
!7149 = !DILocation(line: 2674, column: 16, scope: !7147)
!7150 = !DILocation(line: 2674, column: 9, scope: !7147)
!7151 = !DILocation(line: 2676, column: 9, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 2676, column: 9)
!7153 = !DILocation(line: 2676, column: 14, scope: !7152)
!7154 = !DILocation(line: 2676, column: 9, scope: !7025)
!7155 = !DILocation(line: 2678, column: 30, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2676, column: 23)
!7157 = !DILocation(line: 2678, column: 33, scope: !7156)
!7158 = !DILocation(line: 2678, column: 39, scope: !7156)
!7159 = !DILocation(line: 2678, column: 45, scope: !7156)
!7160 = !DILocation(line: 2682, column: 30, scope: !7156)
!7161 = !DILocation(line: 2678, column: 15, scope: !7156)
!7162 = !DILocation(line: 2678, column: 13, scope: !7156)
!7163 = !DILocation(line: 2683, column: 21, scope: !7156)
!7164 = !DILocation(line: 2683, column: 24, scope: !7156)
!7165 = !DILocation(line: 2683, column: 9, scope: !7156)
!7166 = !DILocation(line: 2684, column: 5, scope: !7156)
!7167 = !DILocation(line: 2686, column: 9, scope: !7038)
!7168 = !DILocation(line: 2686, column: 21, scope: !7038)
!7169 = !DILocation(line: 2686, column: 9, scope: !7025)
!7170 = !DILocation(line: 2687, column: 9, scope: !7037)
!7171 = !DILocation(line: 2687, column: 21, scope: !7037)
!7172 = !DILocation(line: 2689, column: 22, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2689, column: 13)
!7174 = !DILocation(line: 2689, column: 35, scope: !7173)
!7175 = !DILocation(line: 2689, column: 48, scope: !7173)
!7176 = !DILocation(line: 2689, column: 20, scope: !7173)
!7177 = !DILocation(line: 2689, column: 18, scope: !7173)
!7178 = !DILocation(line: 2689, column: 67, scope: !7173)
!7179 = !DILocation(line: 2689, column: 13, scope: !7037)
!7180 = !DILocation(line: 2691, column: 34, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2689, column: 76)
!7182 = !DILocation(line: 2691, column: 37, scope: !7181)
!7183 = !DILocation(line: 2691, column: 43, scope: !7181)
!7184 = !DILocation(line: 2691, column: 48, scope: !7181)
!7185 = !DILocation(line: 2696, column: 34, scope: !7181)
!7186 = !DILocation(line: 2691, column: 19, scope: !7181)
!7187 = !DILocation(line: 2691, column: 17, scope: !7181)
!7188 = !DILocation(line: 2697, column: 35, scope: !7181)
!7189 = !DILocation(line: 2697, column: 38, scope: !7181)
!7190 = !DILocation(line: 2697, column: 20, scope: !7181)
!7191 = !DILocation(line: 2697, column: 13, scope: !7181)
!7192 = !DILocation(line: 2701, column: 34, scope: !7037)
!7193 = !DILocation(line: 2701, column: 37, scope: !7037)
!7194 = !DILocation(line: 2701, column: 45, scope: !7037)
!7195 = !DILocation(line: 2701, column: 55, scope: !7037)
!7196 = !DILocation(line: 2701, column: 15, scope: !7037)
!7197 = !DILocation(line: 2701, column: 13, scope: !7037)
!7198 = !DILocation(line: 2703, column: 11, scope: !7037)
!7199 = !DILocation(line: 2703, column: 24, scope: !7037)
!7200 = !DILocation(line: 2703, column: 38, scope: !7037)
!7201 = !DILocation(line: 2703, column: 9, scope: !7037)
!7202 = !DILocation(line: 2705, column: 13, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2705, column: 13)
!7204 = !DILocation(line: 2705, column: 17, scope: !7203)
!7205 = !DILocation(line: 2705, column: 13, scope: !7037)
!7206 = !DILocation(line: 2707, column: 34, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2705, column: 26)
!7208 = !DILocation(line: 2707, column: 37, scope: !7207)
!7209 = !DILocation(line: 2707, column: 43, scope: !7207)
!7210 = !DILocation(line: 2707, column: 48, scope: !7207)
!7211 = !DILocation(line: 2711, column: 34, scope: !7207)
!7212 = !DILocation(line: 2707, column: 19, scope: !7207)
!7213 = !DILocation(line: 2707, column: 17, scope: !7207)
!7214 = !DILocation(line: 2712, column: 35, scope: !7207)
!7215 = !DILocation(line: 2712, column: 38, scope: !7207)
!7216 = !DILocation(line: 2712, column: 20, scope: !7207)
!7217 = !DILocation(line: 2712, column: 13, scope: !7207)
!7218 = !DILocation(line: 2714, column: 5, scope: !7038)
!7219 = !DILocation(line: 2714, column: 5, scope: !7037)
!7220 = !DILocation(line: 2717, column: 24, scope: !7025)
!7221 = !DILocation(line: 2717, column: 12, scope: !7025)
!7222 = !DILocation(line: 2717, column: 5, scope: !7025)
!7223 = !DILocation(line: 2718, column: 1, scope: !7025)
!7224 = distinct !DISubprogram(name: "dav_method_copymove", scope: !3, file: !3, line: 2721, type: !3076, scopeLine: 2722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7225)
!7225 = !{!7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7254, !7255}
!7226 = !DILocalVariable(name: "r", arg: 1, scope: !7224, file: !3, line: 2721, type: !286)
!7227 = !DILocalVariable(name: "is_move", arg: 2, scope: !7224, file: !3, line: 2721, type: !14)
!7228 = !DILocalVariable(name: "resource", scope: !7224, file: !3, line: 2723, type: !776)
!7229 = !DILocalVariable(name: "resnew", scope: !7224, file: !3, line: 2724, type: !776)
!7230 = !DILocalVariable(name: "src_av_info", scope: !7224, file: !3, line: 2725, type: !4860)
!7231 = !DILocalVariable(name: "dst_av_info", scope: !7224, file: !3, line: 2726, type: !4860)
!7232 = !DILocalVariable(name: "body", scope: !7224, file: !3, line: 2727, type: !10)
!7233 = !DILocalVariable(name: "dest", scope: !7224, file: !3, line: 2728, type: !10)
!7234 = !DILocalVariable(name: "err", scope: !7224, file: !3, line: 2729, type: !272)
!7235 = !DILocalVariable(name: "err2", scope: !7224, file: !3, line: 2730, type: !272)
!7236 = !DILocalVariable(name: "err3", scope: !7224, file: !3, line: 2731, type: !272)
!7237 = !DILocalVariable(name: "multi_response", scope: !7224, file: !3, line: 2732, type: !826)
!7238 = !DILocalVariable(name: "lookup", scope: !7224, file: !3, line: 2733, type: !7239)
!7239 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_lookup_result", file: !141, line: 509, baseType: !7240)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 505, size: 512, elements: !7241)
!7241 = !{!7242, !7243}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "rnew", scope: !7240, file: !141, line: 507, baseType: !286, size: 64)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !7240, file: !141, line: 508, baseType: !273, size: 448, offset: 64)
!7244 = !DILocalVariable(name: "is_dir", scope: !7224, file: !3, line: 2734, type: !14)
!7245 = !DILocalVariable(name: "overwrite", scope: !7224, file: !3, line: 2735, type: !14)
!7246 = !DILocalVariable(name: "depth", scope: !7224, file: !3, line: 2736, type: !14)
!7247 = !DILocalVariable(name: "result", scope: !7224, file: !3, line: 2737, type: !14)
!7248 = !DILocalVariable(name: "lockdb", scope: !7224, file: !3, line: 2738, type: !875)
!7249 = !DILocalVariable(name: "replace_dest", scope: !7224, file: !3, line: 2739, type: !14)
!7250 = !DILocalVariable(name: "resnew_state", scope: !7224, file: !3, line: 2740, type: !14)
!7251 = !DILocalVariable(name: "nscp_host", scope: !7252, file: !3, line: 2772, type: !10)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 2770, column: 23)
!7253 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2770, column: 9)
!7254 = !DILocalVariable(name: "nscp_path", scope: !7252, file: !3, line: 2773, type: !10)
!7255 = !DILocalVariable(name: "auth", scope: !7256, file: !3, line: 2800, type: !10)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 2799, column: 41)
!7257 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2799, column: 9)
!7258 = !DILocation(line: 2721, column: 45, scope: !7224)
!7259 = !DILocation(line: 2721, column: 52, scope: !7224)
!7260 = !DILocation(line: 2723, column: 5, scope: !7224)
!7261 = !DILocation(line: 2723, column: 19, scope: !7224)
!7262 = !DILocation(line: 2724, column: 5, scope: !7224)
!7263 = !DILocation(line: 2724, column: 19, scope: !7224)
!7264 = !DILocation(line: 2725, column: 5, scope: !7224)
!7265 = !DILocation(line: 2725, column: 27, scope: !7224)
!7266 = !DILocation(line: 2726, column: 5, scope: !7224)
!7267 = !DILocation(line: 2726, column: 27, scope: !7224)
!7268 = !DILocation(line: 2727, column: 5, scope: !7224)
!7269 = !DILocation(line: 2727, column: 17, scope: !7224)
!7270 = !DILocation(line: 2728, column: 5, scope: !7224)
!7271 = !DILocation(line: 2728, column: 17, scope: !7224)
!7272 = !DILocation(line: 2729, column: 5, scope: !7224)
!7273 = !DILocation(line: 2729, column: 16, scope: !7224)
!7274 = !DILocation(line: 2730, column: 5, scope: !7224)
!7275 = !DILocation(line: 2730, column: 16, scope: !7224)
!7276 = !DILocation(line: 2731, column: 5, scope: !7224)
!7277 = !DILocation(line: 2731, column: 16, scope: !7224)
!7278 = !DILocation(line: 2732, column: 5, scope: !7224)
!7279 = !DILocation(line: 2732, column: 19, scope: !7224)
!7280 = !DILocation(line: 2733, column: 5, scope: !7224)
!7281 = !DILocation(line: 2733, column: 23, scope: !7224)
!7282 = !DILocation(line: 2734, column: 5, scope: !7224)
!7283 = !DILocation(line: 2734, column: 9, scope: !7224)
!7284 = !DILocation(line: 2735, column: 5, scope: !7224)
!7285 = !DILocation(line: 2735, column: 9, scope: !7224)
!7286 = !DILocation(line: 2736, column: 5, scope: !7224)
!7287 = !DILocation(line: 2736, column: 9, scope: !7224)
!7288 = !DILocation(line: 2737, column: 5, scope: !7224)
!7289 = !DILocation(line: 2737, column: 9, scope: !7224)
!7290 = !DILocation(line: 2738, column: 5, scope: !7224)
!7291 = !DILocation(line: 2738, column: 17, scope: !7224)
!7292 = !DILocation(line: 2739, column: 5, scope: !7224)
!7293 = !DILocation(line: 2739, column: 9, scope: !7224)
!7294 = !DILocation(line: 2740, column: 5, scope: !7224)
!7295 = !DILocation(line: 2740, column: 9, scope: !7224)
!7296 = !DILocation(line: 2743, column: 28, scope: !7224)
!7297 = !DILocation(line: 2743, column: 32, scope: !7224)
!7298 = !DILocation(line: 2743, column: 31, scope: !7224)
!7299 = !DILocation(line: 2743, column: 11, scope: !7224)
!7300 = !DILocation(line: 2743, column: 9, scope: !7224)
!7301 = !DILocation(line: 2745, column: 9, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2745, column: 9)
!7303 = !DILocation(line: 2745, column: 13, scope: !7302)
!7304 = !DILocation(line: 2745, column: 9, scope: !7224)
!7305 = !DILocation(line: 2746, column: 31, scope: !7302)
!7306 = !DILocation(line: 2746, column: 34, scope: !7302)
!7307 = !DILocation(line: 2746, column: 16, scope: !7302)
!7308 = !DILocation(line: 2746, column: 9, scope: !7302)
!7309 = !DILocation(line: 2749, column: 37, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2749, column: 9)
!7311 = !DILocation(line: 2749, column: 40, scope: !7310)
!7312 = !DILocation(line: 2749, column: 9, scope: !7310)
!7313 = !DILocation(line: 2749, column: 68, scope: !7310)
!7314 = !DILocation(line: 2750, column: 13, scope: !7310)
!7315 = !DILocation(line: 2750, column: 16, scope: !7310)
!7316 = !DILocation(line: 2749, column: 9, scope: !7224)
!7317 = !DILocation(line: 2751, column: 31, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 2750, column: 21)
!7319 = !DILocation(line: 2751, column: 34, scope: !7318)
!7320 = !DILocation(line: 2751, column: 16, scope: !7318)
!7321 = !DILocation(line: 2751, column: 9, scope: !7318)
!7322 = !DILocation(line: 2754, column: 10, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2754, column: 9)
!7324 = !DILocation(line: 2754, column: 20, scope: !7323)
!7325 = !DILocation(line: 2754, column: 9, scope: !7224)
!7326 = !DILocation(line: 2756, column: 9, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 2754, column: 28)
!7328 = !DILocation(line: 2761, column: 9, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2761, column: 9)
!7330 = !DILocation(line: 2761, column: 19, scope: !7329)
!7331 = !DILocation(line: 2761, column: 24, scope: !7329)
!7332 = !DILocation(line: 2761, column: 9, scope: !7224)
!7333 = !DILocation(line: 2762, column: 29, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 2761, column: 54)
!7335 = !DILocation(line: 2762, column: 32, scope: !7334)
!7336 = !DILocation(line: 2764, column: 29, scope: !7334)
!7337 = !DILocation(line: 2762, column: 16, scope: !7334)
!7338 = !DILocation(line: 2762, column: 14, scope: !7334)
!7339 = !DILocation(line: 2765, column: 35, scope: !7334)
!7340 = !DILocation(line: 2765, column: 63, scope: !7334)
!7341 = !DILocation(line: 2765, column: 16, scope: !7334)
!7342 = !DILocation(line: 2765, column: 9, scope: !7334)
!7343 = !DILocation(line: 2769, column: 26, scope: !7224)
!7344 = !DILocation(line: 2769, column: 29, scope: !7224)
!7345 = !DILocation(line: 2769, column: 12, scope: !7224)
!7346 = !DILocation(line: 2769, column: 10, scope: !7224)
!7347 = !DILocation(line: 2770, column: 9, scope: !7253)
!7348 = !DILocation(line: 2770, column: 14, scope: !7253)
!7349 = !DILocation(line: 2770, column: 9, scope: !7224)
!7350 = !DILocation(line: 2772, column: 9, scope: !7252)
!7351 = !DILocation(line: 2772, column: 21, scope: !7252)
!7352 = !DILocation(line: 2772, column: 47, scope: !7252)
!7353 = !DILocation(line: 2772, column: 50, scope: !7252)
!7354 = !DILocation(line: 2772, column: 33, scope: !7252)
!7355 = !DILocation(line: 2773, column: 9, scope: !7252)
!7356 = !DILocation(line: 2773, column: 21, scope: !7252)
!7357 = !DILocation(line: 2773, column: 47, scope: !7252)
!7358 = !DILocation(line: 2773, column: 50, scope: !7252)
!7359 = !DILocation(line: 2773, column: 33, scope: !7252)
!7360 = !DILocation(line: 2775, column: 13, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 2775, column: 13)
!7362 = !DILocation(line: 2775, column: 23, scope: !7361)
!7363 = !DILocation(line: 2775, column: 31, scope: !7361)
!7364 = !DILocation(line: 2775, column: 34, scope: !7361)
!7365 = !DILocation(line: 2775, column: 44, scope: !7361)
!7366 = !DILocation(line: 2775, column: 13, scope: !7252)
!7367 = !DILocation(line: 2776, column: 32, scope: !7361)
!7368 = !DILocation(line: 2776, column: 35, scope: !7361)
!7369 = !DILocation(line: 2776, column: 52, scope: !7361)
!7370 = !DILocation(line: 2776, column: 63, scope: !7361)
!7371 = !DILocation(line: 2776, column: 20, scope: !7361)
!7372 = !DILocation(line: 2776, column: 18, scope: !7361)
!7373 = !DILocation(line: 2776, column: 13, scope: !7361)
!7374 = !DILocation(line: 2777, column: 5, scope: !7253)
!7375 = !DILocation(line: 2777, column: 5, scope: !7252)
!7376 = !DILocation(line: 2778, column: 9, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2778, column: 9)
!7378 = !DILocation(line: 2778, column: 14, scope: !7377)
!7379 = !DILocation(line: 2778, column: 9, scope: !7224)
!7380 = !DILocation(line: 2780, column: 9, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 2778, column: 23)
!7382 = !DILocation(line: 2780, column: 9, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 2780, column: 9)
!7384 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 2780, column: 9)
!7385 = !DILocation(line: 2780, column: 9, scope: !7384)
!7386 = !DILocation(line: 2782, column: 9, scope: !7381)
!7387 = !DILocation(line: 2785, column: 14, scope: !7224)
!7388 = !DILocation(line: 2785, column: 29, scope: !7224)
!7389 = !DILocation(line: 2785, column: 35, scope: !7224)
!7390 = !{i64 0, i64 8, !2416, i64 8, i64 4, !2683, i64 12, i64 4, !2683, i64 16, i64 8, !2416, i64 24, i64 4, !2683, i64 32, i64 8, !2416, i64 40, i64 8, !2416, i64 48, i64 8, !2416, i64 56, i64 8, !2416}
!7391 = !DILocation(line: 2786, column: 16, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2786, column: 9)
!7393 = !{!7394, !2417, i64 0}
!7394 = !{!"", !2417, i64 0, !2872, i64 8}
!7395 = !DILocation(line: 2786, column: 21, scope: !7392)
!7396 = !DILocation(line: 2786, column: 9, scope: !7224)
!7397 = !DILocation(line: 2787, column: 20, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2787, column: 13)
!7399 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2786, column: 30)
!7400 = !DILocation(line: 2787, column: 24, scope: !7398)
!7401 = !{!7394, !2426, i64 8}
!7402 = !DILocation(line: 2787, column: 31, scope: !7398)
!7403 = !DILocation(line: 2787, column: 13, scope: !7399)
!7404 = !DILocation(line: 2789, column: 13, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 2787, column: 52)
!7406 = !DILocation(line: 2789, column: 13, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 2789, column: 13)
!7408 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 2789, column: 13)
!7409 = !{!7394, !2417, i64 16}
!7410 = !DILocation(line: 2789, column: 13, scope: !7408)
!7411 = !DILocation(line: 2791, column: 13, scope: !7405)
!7412 = !DILocation(line: 2797, column: 35, scope: !7399)
!7413 = !DILocation(line: 2797, column: 45, scope: !7399)
!7414 = !DILocation(line: 2797, column: 49, scope: !7399)
!7415 = !DILocation(line: 2797, column: 64, scope: !7399)
!7416 = !DILocation(line: 2797, column: 68, scope: !7399)
!7417 = !DILocation(line: 2797, column: 16, scope: !7399)
!7418 = !DILocation(line: 2797, column: 9, scope: !7399)
!7419 = !DILocation(line: 2799, column: 16, scope: !7257)
!7420 = !DILocation(line: 2799, column: 22, scope: !7257)
!7421 = !DILocation(line: 2799, column: 29, scope: !7257)
!7422 = !DILocation(line: 2799, column: 9, scope: !7224)
!7423 = !DILocation(line: 2800, column: 9, scope: !7256)
!7424 = !DILocation(line: 2800, column: 21, scope: !7256)
!7425 = !DILocation(line: 2800, column: 49, scope: !7256)
!7426 = !DILocation(line: 2800, column: 55, scope: !7256)
!7427 = !{!2425, !2417, i64 248}
!7428 = !DILocation(line: 2800, column: 28, scope: !7256)
!7429 = !DILocation(line: 2802, column: 20, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 2802, column: 13)
!7431 = !DILocation(line: 2802, column: 26, scope: !7430)
!7432 = !DILocation(line: 2802, column: 33, scope: !7430)
!7433 = !DILocation(line: 2802, column: 54, scope: !7430)
!7434 = !DILocation(line: 2802, column: 57, scope: !7430)
!7435 = !DILocation(line: 2802, column: 62, scope: !7430)
!7436 = !DILocation(line: 2802, column: 13, scope: !7256)
!7437 = !DILocation(line: 2805, column: 28, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 2802, column: 71)
!7439 = !DILocation(line: 2805, column: 31, scope: !7438)
!7440 = !DILocation(line: 2806, column: 40, scope: !7438)
!7441 = !DILocation(line: 2806, column: 43, scope: !7438)
!7442 = !DILocation(line: 2806, column: 49, scope: !7438)
!7443 = !DILocation(line: 2806, column: 28, scope: !7438)
!7444 = !DILocation(line: 2805, column: 13, scope: !7438)
!7445 = !DILocation(line: 2807, column: 9, scope: !7438)
!7446 = !DILocation(line: 2810, column: 35, scope: !7256)
!7447 = !DILocation(line: 2810, column: 45, scope: !7256)
!7448 = !DILocation(line: 2810, column: 51, scope: !7256)
!7449 = !DILocation(line: 2810, column: 16, scope: !7256)
!7450 = !DILocation(line: 2810, column: 9, scope: !7256)
!7451 = !DILocation(line: 2812, column: 5, scope: !7257)
!7452 = !DILocation(line: 2815, column: 35, scope: !7224)
!7453 = !DILocation(line: 2815, column: 11, scope: !7224)
!7454 = !DILocation(line: 2815, column: 9, scope: !7224)
!7455 = !DILocation(line: 2817, column: 9, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2817, column: 9)
!7457 = !DILocation(line: 2817, column: 13, scope: !7456)
!7458 = !DILocation(line: 2817, column: 9, scope: !7224)
!7459 = !DILocation(line: 2818, column: 31, scope: !7456)
!7460 = !DILocation(line: 2818, column: 34, scope: !7456)
!7461 = !DILocation(line: 2818, column: 16, scope: !7456)
!7462 = !DILocation(line: 2818, column: 9, scope: !7456)
!7463 = !DILocation(line: 2821, column: 37, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2821, column: 9)
!7465 = !DILocation(line: 2821, column: 40, scope: !7464)
!7466 = !DILocation(line: 2821, column: 50, scope: !7464)
!7467 = !DILocation(line: 2821, column: 9, scope: !7464)
!7468 = !DILocation(line: 2821, column: 70, scope: !7464)
!7469 = !DILocation(line: 2822, column: 13, scope: !7464)
!7470 = !DILocation(line: 2822, column: 16, scope: !7464)
!7471 = !DILocation(line: 2821, column: 9, scope: !7224)
!7472 = !DILocation(line: 2823, column: 31, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 2822, column: 21)
!7474 = !DILocation(line: 2823, column: 34, scope: !7473)
!7475 = !DILocation(line: 2823, column: 16, scope: !7473)
!7476 = !DILocation(line: 2823, column: 9, scope: !7473)
!7477 = !DILocation(line: 2827, column: 9, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2827, column: 9)
!7479 = !DILocation(line: 2827, column: 19, scope: !7478)
!7480 = !DILocation(line: 2827, column: 28, scope: !7478)
!7481 = !DILocation(line: 2827, column: 36, scope: !7478)
!7482 = !DILocation(line: 2827, column: 25, scope: !7478)
!7483 = !DILocation(line: 2827, column: 9, scope: !7224)
!7484 = !DILocation(line: 2829, column: 35, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7478, file: !3, line: 2827, column: 43)
!7486 = !DILocation(line: 2829, column: 16, scope: !7485)
!7487 = !DILocation(line: 2829, column: 9, scope: !7485)
!7488 = !DILocation(line: 2837, column: 40, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2837, column: 9)
!7490 = !DILocation(line: 2837, column: 22, scope: !7489)
!7491 = !DILocation(line: 2837, column: 20, scope: !7489)
!7492 = !DILocation(line: 2837, column: 44, scope: !7489)
!7493 = !DILocation(line: 2837, column: 9, scope: !7224)
!7494 = !DILocation(line: 2840, column: 9, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 2837, column: 49)
!7496 = !DILocation(line: 2844, column: 9, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2844, column: 9)
!7498 = !DILocation(line: 2844, column: 17, scope: !7497)
!7499 = !DILocation(line: 2844, column: 24, scope: !7497)
!7500 = !DILocation(line: 2844, column: 28, scope: !7497)
!7501 = !DILocation(line: 2844, column: 9, scope: !7224)
!7502 = !DILocation(line: 2846, column: 35, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 2844, column: 39)
!7504 = !DILocation(line: 2846, column: 16, scope: !7503)
!7505 = !DILocation(line: 2846, column: 9, scope: !7503)
!7506 = !DILocation(line: 2852, column: 11, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2852, column: 9)
!7508 = !DILocation(line: 2852, column: 21, scope: !7507)
!7509 = !DILocation(line: 2852, column: 28, scope: !7507)
!7510 = !{!3193, !2417, i64 24}
!7511 = !DILocation(line: 2852, column: 46, scope: !7507)
!7512 = !DILocation(line: 2852, column: 56, scope: !7507)
!7513 = !DILocation(line: 2852, column: 9, scope: !7507)
!7514 = !DILocation(line: 2852, column: 9, scope: !7224)
!7515 = !DILocation(line: 2854, column: 35, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 2852, column: 65)
!7517 = !DILocation(line: 2854, column: 16, scope: !7516)
!7518 = !DILocation(line: 2854, column: 9, scope: !7516)
!7519 = !DILocation(line: 2859, column: 14, scope: !7224)
!7520 = !DILocation(line: 2859, column: 24, scope: !7224)
!7521 = !DILocation(line: 2859, column: 12, scope: !7224)
!7522 = !DILocation(line: 2862, column: 32, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2862, column: 9)
!7524 = !DILocation(line: 2862, column: 18, scope: !7523)
!7525 = !DILocation(line: 2862, column: 16, scope: !7523)
!7526 = !DILocation(line: 2862, column: 50, scope: !7523)
!7527 = !DILocation(line: 2862, column: 9, scope: !7224)
!7528 = !DILocation(line: 2865, column: 9, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 2862, column: 55)
!7530 = !DILocation(line: 2867, column: 9, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2867, column: 9)
!7532 = !DILocation(line: 2867, column: 15, scope: !7531)
!7533 = !DILocation(line: 2867, column: 9, scope: !7224)
!7534 = !DILocation(line: 2869, column: 9, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 2867, column: 21)
!7536 = !DILocation(line: 2869, column: 9, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 2869, column: 9)
!7538 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 2869, column: 9)
!7539 = !DILocation(line: 2869, column: 9, scope: !7538)
!7540 = !DILocation(line: 2871, column: 9, scope: !7535)
!7541 = !DILocation(line: 2873, column: 9, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2873, column: 9)
!7543 = !DILocation(line: 2873, column: 17, scope: !7542)
!7544 = !DILocation(line: 2873, column: 20, scope: !7542)
!7545 = !DILocation(line: 2873, column: 27, scope: !7542)
!7546 = !DILocation(line: 2873, column: 30, scope: !7542)
!7547 = !DILocation(line: 2873, column: 36, scope: !7542)
!7548 = !DILocation(line: 2873, column: 9, scope: !7224)
!7549 = !DILocation(line: 2875, column: 9, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 2873, column: 53)
!7551 = !DILocation(line: 2875, column: 9, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 2875, column: 9)
!7553 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 2875, column: 9)
!7554 = !DILocation(line: 2875, column: 9, scope: !7553)
!7555 = !DILocation(line: 2877, column: 9, scope: !7550)
!7556 = !DILocation(line: 2893, column: 37, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2893, column: 9)
!7558 = !DILocation(line: 2893, column: 40, scope: !7557)
!7559 = !DILocation(line: 2893, column: 50, scope: !7557)
!7560 = !DILocation(line: 2895, column: 38, scope: !7557)
!7561 = !DILocation(line: 2898, column: 37, scope: !7557)
!7562 = !DILocation(line: 2893, column: 16, scope: !7557)
!7563 = !DILocation(line: 2893, column: 14, scope: !7557)
!7564 = !DILocation(line: 2899, column: 44, scope: !7557)
!7565 = !DILocation(line: 2893, column: 9, scope: !7224)
!7566 = !DILocation(line: 2900, column: 30, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 2899, column: 53)
!7568 = !DILocation(line: 2900, column: 33, scope: !7567)
!7569 = !DILocation(line: 2900, column: 39, scope: !7567)
!7570 = !DILocation(line: 2900, column: 44, scope: !7567)
!7571 = !DILocation(line: 2901, column: 43, scope: !7567)
!7572 = !DILocation(line: 2901, column: 46, scope: !7567)
!7573 = !DILocation(line: 2905, column: 43, scope: !7567)
!7574 = !DILocation(line: 2906, column: 43, scope: !7567)
!7575 = !DILocation(line: 2901, column: 30, scope: !7567)
!7576 = !DILocation(line: 2907, column: 30, scope: !7567)
!7577 = !DILocation(line: 2900, column: 15, scope: !7567)
!7578 = !DILocation(line: 2900, column: 13, scope: !7567)
!7579 = !DILocation(line: 2908, column: 31, scope: !7567)
!7580 = !DILocation(line: 2908, column: 34, scope: !7567)
!7581 = !DILocation(line: 2908, column: 39, scope: !7567)
!7582 = !DILocation(line: 2908, column: 16, scope: !7567)
!7583 = !DILocation(line: 2908, column: 9, scope: !7567)
!7584 = !DILocation(line: 2921, column: 44, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2921, column: 9)
!7586 = !DILocation(line: 2921, column: 50, scope: !7585)
!7587 = !DILocation(line: 2921, column: 16, scope: !7585)
!7588 = !DILocation(line: 2921, column: 14, scope: !7585)
!7589 = !DILocation(line: 2924, column: 68, scope: !7585)
!7590 = !DILocation(line: 2921, column: 9, scope: !7224)
!7591 = !DILocation(line: 2925, column: 30, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 2924, column: 77)
!7593 = !DILocation(line: 2925, column: 33, scope: !7592)
!7594 = !DILocation(line: 2925, column: 39, scope: !7592)
!7595 = !DILocation(line: 2925, column: 44, scope: !7592)
!7596 = !DILocation(line: 2926, column: 43, scope: !7592)
!7597 = !DILocation(line: 2926, column: 46, scope: !7592)
!7598 = !DILocation(line: 2930, column: 43, scope: !7592)
!7599 = !DILocation(line: 2926, column: 30, scope: !7592)
!7600 = !DILocation(line: 2931, column: 30, scope: !7592)
!7601 = !DILocation(line: 2925, column: 15, scope: !7592)
!7602 = !DILocation(line: 2925, column: 13, scope: !7592)
!7603 = !DILocation(line: 2932, column: 31, scope: !7592)
!7604 = !DILocation(line: 2932, column: 34, scope: !7592)
!7605 = !DILocation(line: 2932, column: 39, scope: !7592)
!7606 = !DILocation(line: 2932, column: 16, scope: !7592)
!7607 = !DILocation(line: 2932, column: 9, scope: !7592)
!7608 = !DILocation(line: 2935, column: 9, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2935, column: 9)
!7610 = !DILocation(line: 2936, column: 9, scope: !7609)
!7611 = !DILocation(line: 2936, column: 12, scope: !7609)
!7612 = !DILocation(line: 2936, column: 18, scope: !7609)
!7613 = !DILocation(line: 2937, column: 9, scope: !7609)
!7614 = !DILocation(line: 2937, column: 14, scope: !7609)
!7615 = !DILocation(line: 2937, column: 24, scope: !7609)
!7616 = !DILocation(line: 2937, column: 31, scope: !7609)
!7617 = !{!3193, !2417, i64 32}
!7618 = !DILocation(line: 2937, column: 51, scope: !7609)
!7619 = !DILocation(line: 2937, column: 61, scope: !7609)
!7620 = !DILocation(line: 2937, column: 12, scope: !7609)
!7621 = !DILocation(line: 2935, column: 9, scope: !7224)
!7622 = !DILocation(line: 2939, column: 35, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 2937, column: 70)
!7624 = !DILocation(line: 2939, column: 16, scope: !7623)
!7625 = !DILocation(line: 2939, column: 9, scope: !7623)
!7626 = !DILocation(line: 2944, column: 9, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2944, column: 9)
!7628 = !DILocation(line: 2945, column: 9, scope: !7627)
!7629 = !DILocation(line: 2945, column: 14, scope: !7627)
!7630 = !DILocation(line: 2945, column: 22, scope: !7627)
!7631 = !DILocation(line: 2945, column: 29, scope: !7627)
!7632 = !DILocation(line: 2945, column: 49, scope: !7627)
!7633 = !DILocation(line: 2945, column: 57, scope: !7627)
!7634 = !DILocation(line: 2945, column: 12, scope: !7627)
!7635 = !DILocation(line: 2944, column: 9, scope: !7224)
!7636 = !DILocation(line: 2953, column: 35, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 2945, column: 68)
!7638 = !DILocation(line: 2953, column: 16, scope: !7637)
!7639 = !DILocation(line: 2953, column: 9, scope: !7637)
!7640 = !DILocation(line: 2959, column: 43, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2959, column: 9)
!7642 = !DILocation(line: 2959, column: 19, scope: !7641)
!7643 = !DILocation(line: 2959, column: 17, scope: !7641)
!7644 = !DILocation(line: 2959, column: 47, scope: !7641)
!7645 = !DILocation(line: 2959, column: 9, scope: !7224)
!7646 = !DILocation(line: 2960, column: 16, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 2959, column: 54)
!7648 = !DILocation(line: 2960, column: 9, scope: !7647)
!7649 = !DILocation(line: 2963, column: 32, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2963, column: 9)
!7651 = !DILocation(line: 2963, column: 16, scope: !7650)
!7652 = !DILocation(line: 2963, column: 14, scope: !7650)
!7653 = !DILocation(line: 2963, column: 48, scope: !7650)
!7654 = !DILocation(line: 2963, column: 9, scope: !7224)
!7655 = !DILocation(line: 2965, column: 31, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 2963, column: 57)
!7657 = !DILocation(line: 2965, column: 34, scope: !7656)
!7658 = !DILocation(line: 2965, column: 16, scope: !7656)
!7659 = !DILocation(line: 2965, column: 9, scope: !7656)
!7660 = !DILocation(line: 2979, column: 9, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2979, column: 9)
!7662 = !DILocation(line: 2979, column: 17, scope: !7661)
!7663 = !DILocation(line: 2979, column: 20, scope: !7661)
!7664 = !DILocation(line: 2979, column: 27, scope: !7661)
!7665 = !DILocation(line: 2979, column: 9, scope: !7224)
!7666 = !DILocation(line: 2982, column: 26, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 2979, column: 36)
!7668 = !DILocation(line: 2982, column: 29, scope: !7667)
!7669 = !DILocation(line: 2982, column: 15, scope: !7667)
!7670 = !DILocation(line: 2983, column: 5, scope: !7667)
!7671 = !DILocation(line: 2986, column: 9, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 2986, column: 9)
!7673 = !DILocation(line: 2986, column: 9, scope: !7224)
!7674 = !DILocation(line: 2987, column: 38, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 2987, column: 13)
!7676 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 2986, column: 18)
!7677 = !DILocation(line: 2987, column: 41, scope: !7675)
!7678 = !DILocation(line: 2987, column: 20, scope: !7675)
!7679 = !DILocation(line: 2987, column: 18, scope: !7675)
!7680 = !DILocation(line: 2988, column: 53, scope: !7675)
!7681 = !DILocation(line: 2987, column: 13, scope: !7676)
!7682 = !DILocation(line: 2989, column: 17, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 2989, column: 17)
!7684 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 2988, column: 62)
!7685 = !DILocation(line: 2989, column: 24, scope: !7683)
!7686 = !DILocation(line: 2989, column: 17, scope: !7684)
!7687 = !DILocation(line: 2990, column: 19, scope: !7683)
!7688 = !DILocation(line: 2990, column: 27, scope: !7683)
!7689 = !DILocation(line: 2990, column: 34, scope: !7683)
!7690 = !DILocation(line: 2990, column: 48, scope: !7683)
!7691 = !DILocation(line: 2990, column: 17, scope: !7683)
!7692 = !DILocation(line: 2993, column: 35, scope: !7684)
!7693 = !DILocation(line: 2993, column: 38, scope: !7684)
!7694 = !DILocation(line: 2993, column: 20, scope: !7684)
!7695 = !DILocation(line: 2993, column: 13, scope: !7684)
!7696 = !DILocation(line: 2995, column: 5, scope: !7676)
!7697 = !DILocation(line: 3001, column: 50, scope: !7224)
!7698 = !DILocation(line: 3001, column: 56, scope: !7224)
!7699 = !DILocation(line: 3001, column: 20, scope: !7224)
!7700 = !DILocation(line: 3001, column: 18, scope: !7224)
!7701 = !DILocation(line: 3009, column: 10, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3009, column: 9)
!7703 = !DILocation(line: 3009, column: 18, scope: !7702)
!7704 = !DILocation(line: 3009, column: 9, scope: !7224)
!7705 = !DILocation(line: 3010, column: 22, scope: !7702)
!7706 = !DILocation(line: 3010, column: 9, scope: !7702)
!7707 = !DILocation(line: 3011, column: 14, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 3011, column: 14)
!7709 = !DILocation(line: 3011, column: 22, scope: !7708)
!7710 = !DILocation(line: 3011, column: 26, scope: !7708)
!7711 = !DILocation(line: 3011, column: 36, scope: !7708)
!7712 = !DILocation(line: 3011, column: 14, scope: !7702)
!7713 = !DILocation(line: 3012, column: 22, scope: !7708)
!7714 = !DILocation(line: 3012, column: 9, scope: !7708)
!7715 = !DILocation(line: 3013, column: 14, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 3013, column: 14)
!7717 = !DILocation(line: 3013, column: 24, scope: !7716)
!7718 = !DILocation(line: 3013, column: 32, scope: !7716)
!7719 = !DILocation(line: 3013, column: 40, scope: !7716)
!7720 = !DILocation(line: 3013, column: 29, scope: !7716)
!7721 = !DILocation(line: 3013, column: 14, scope: !7708)
!7722 = !DILocation(line: 3014, column: 22, scope: !7716)
!7723 = !DILocation(line: 3014, column: 9, scope: !7716)
!7724 = !DILocation(line: 3015, column: 15, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 3015, column: 14)
!7726 = !DILocation(line: 3015, column: 25, scope: !7725)
!7727 = !DILocation(line: 3015, column: 36, scope: !7725)
!7728 = !DILocation(line: 3015, column: 46, scope: !7725)
!7729 = !DILocation(line: 3015, column: 54, scope: !7725)
!7730 = !DILocation(line: 3015, column: 65, scope: !7725)
!7731 = !DILocation(line: 3015, column: 42, scope: !7725)
!7732 = !DILocation(line: 3015, column: 14, scope: !7716)
!7733 = !DILocation(line: 3016, column: 22, scope: !7725)
!7734 = !DILocation(line: 3016, column: 9, scope: !7725)
!7735 = !DILocation(line: 3018, column: 22, scope: !7725)
!7736 = !DILocation(line: 3023, column: 10, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3023, column: 9)
!7738 = !DILocation(line: 3023, column: 18, scope: !7737)
!7739 = !DILocation(line: 3023, column: 25, scope: !7737)
!7740 = !DILocation(line: 3023, column: 28, scope: !7737)
!7741 = !DILocation(line: 3023, column: 9, scope: !7224)
!7742 = !DILocation(line: 3024, column: 38, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 3024, column: 13)
!7744 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 3023, column: 42)
!7745 = !DILocation(line: 3024, column: 41, scope: !7743)
!7746 = !DILocation(line: 3024, column: 20, scope: !7743)
!7747 = !DILocation(line: 3024, column: 18, scope: !7743)
!7748 = !DILocation(line: 3025, column: 53, scope: !7743)
!7749 = !DILocation(line: 3024, column: 13, scope: !7744)
!7750 = !DILocation(line: 3029, column: 17, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 3029, column: 17)
!7752 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 3025, column: 62)
!7753 = !DILocation(line: 3029, column: 17, scope: !7752)
!7754 = !DILocation(line: 3030, column: 40, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7751, file: !3, line: 3029, column: 26)
!7756 = !DILocation(line: 3030, column: 23, scope: !7755)
!7757 = !DILocation(line: 3032, column: 13, scope: !7755)
!7758 = !DILocation(line: 3034, column: 17, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 3034, column: 17)
!7760 = !DILocation(line: 3034, column: 24, scope: !7759)
!7761 = !DILocation(line: 3034, column: 17, scope: !7752)
!7762 = !DILocation(line: 3035, column: 19, scope: !7759)
!7763 = !DILocation(line: 3035, column: 27, scope: !7759)
!7764 = !DILocation(line: 3035, column: 34, scope: !7759)
!7765 = !DILocation(line: 3035, column: 48, scope: !7759)
!7766 = !DILocation(line: 3035, column: 17, scope: !7759)
!7767 = !DILocation(line: 3038, column: 35, scope: !7752)
!7768 = !DILocation(line: 3038, column: 38, scope: !7752)
!7769 = !DILocation(line: 3038, column: 20, scope: !7752)
!7770 = !DILocation(line: 3038, column: 13, scope: !7752)
!7771 = !DILocation(line: 3040, column: 5, scope: !7744)
!7772 = !DILocation(line: 3047, column: 21, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3047, column: 9)
!7774 = !{!7775, !2417, i64 16}
!7775 = !{!"", !2426, i64 0, !2426, i64 4, !2426, i64 8, !2417, i64 16}
!7776 = !DILocation(line: 3047, column: 37, scope: !7773)
!7777 = !DILocation(line: 3048, column: 9, scope: !7773)
!7778 = !DILocation(line: 3048, column: 24, scope: !7773)
!7779 = !DILocation(line: 3048, column: 40, scope: !7773)
!7780 = !DILocation(line: 3049, column: 9, scope: !7773)
!7781 = !DILocation(line: 3049, column: 26, scope: !7773)
!7782 = !DILocation(line: 3049, column: 43, scope: !7773)
!7783 = !DILocation(line: 3049, column: 50, scope: !7773)
!7784 = !DILocation(line: 3050, column: 26, scope: !7773)
!7785 = !DILocation(line: 3050, column: 55, scope: !7773)
!7786 = !DILocation(line: 3049, column: 12, scope: !7773)
!7787 = !DILocation(line: 3047, column: 9, scope: !7224)
!7788 = !DILocation(line: 3052, column: 51, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 3050, column: 73)
!7790 = !DILocation(line: 3052, column: 21, scope: !7789)
!7791 = !DILocation(line: 3052, column: 37, scope: !7789)
!7792 = !DILocation(line: 3053, column: 5, scope: !7789)
!7793 = !DILocation(line: 3058, column: 9, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3058, column: 9)
!7795 = !DILocation(line: 3058, column: 9, scope: !7224)
!7796 = !DILocation(line: 3059, column: 17, scope: !7794)
!7797 = !DILocation(line: 3059, column: 25, scope: !7794)
!7798 = !DILocation(line: 3059, column: 32, scope: !7794)
!7799 = !DILocation(line: 3059, column: 49, scope: !7794)
!7800 = !DILocation(line: 3059, column: 15, scope: !7794)
!7801 = !DILocation(line: 3059, column: 13, scope: !7794)
!7802 = !DILocation(line: 3059, column: 9, scope: !7794)
!7803 = !DILocation(line: 3061, column: 9, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3061, column: 9)
!7805 = !DILocation(line: 3061, column: 13, scope: !7804)
!7806 = !DILocation(line: 3061, column: 9, scope: !7224)
!7807 = !DILocation(line: 3062, column: 13, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 3062, column: 13)
!7809 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 3061, column: 22)
!7810 = !DILocation(line: 3062, column: 13, scope: !7809)
!7811 = !DILocation(line: 3063, column: 21, scope: !7808)
!7812 = !DILocation(line: 3063, column: 31, scope: !7808)
!7813 = !DILocation(line: 3063, column: 38, scope: !7808)
!7814 = !{!3193, !2417, i64 104}
!7815 = !DILocation(line: 3063, column: 53, scope: !7808)
!7816 = !DILocation(line: 3063, column: 63, scope: !7808)
!7817 = !DILocation(line: 3063, column: 19, scope: !7808)
!7818 = !DILocation(line: 3063, column: 17, scope: !7808)
!7819 = !DILocation(line: 3063, column: 13, scope: !7808)
!7820 = !DILocation(line: 3066, column: 21, scope: !7808)
!7821 = !DILocation(line: 3066, column: 31, scope: !7808)
!7822 = !DILocation(line: 3066, column: 38, scope: !7808)
!7823 = !{!3193, !2417, i64 96}
!7824 = !DILocation(line: 3066, column: 53, scope: !7808)
!7825 = !DILocation(line: 3066, column: 63, scope: !7808)
!7826 = !DILocation(line: 3066, column: 71, scope: !7808)
!7827 = !DILocation(line: 3066, column: 19, scope: !7808)
!7828 = !DILocation(line: 3066, column: 17, scope: !7808)
!7829 = !DILocation(line: 3068, column: 5, scope: !7809)
!7830 = !DILocation(line: 3071, column: 29, scope: !7224)
!7831 = !DILocation(line: 3071, column: 38, scope: !7224)
!7832 = !DILocation(line: 3071, column: 42, scope: !7224)
!7833 = !DILocation(line: 3071, column: 12, scope: !7224)
!7834 = !DILocation(line: 3071, column: 10, scope: !7224)
!7835 = !DILocation(line: 3074, column: 9, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3074, column: 9)
!7837 = !DILocation(line: 3074, column: 9, scope: !7224)
!7838 = !DILocation(line: 3075, column: 33, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 3074, column: 18)
!7840 = !DILocation(line: 3075, column: 42, scope: !7839)
!7841 = !DILocation(line: 3075, column: 46, scope: !7839)
!7842 = !DILocation(line: 3075, column: 16, scope: !7839)
!7843 = !DILocation(line: 3075, column: 14, scope: !7839)
!7844 = !DILocation(line: 3077, column: 5, scope: !7839)
!7845 = !DILocation(line: 3079, column: 14, scope: !7836)
!7846 = !DILocation(line: 3082, column: 9, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3082, column: 9)
!7848 = !DILocation(line: 3082, column: 13, scope: !7847)
!7849 = !DILocation(line: 3082, column: 9, scope: !7224)
!7850 = !DILocation(line: 3083, column: 13, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 3083, column: 13)
!7852 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 3082, column: 22)
!7853 = !DILocation(line: 3083, column: 20, scope: !7851)
!7854 = !DILocation(line: 3083, column: 13, scope: !7852)
!7855 = !DILocation(line: 3084, column: 15, scope: !7851)
!7856 = !DILocation(line: 3084, column: 23, scope: !7851)
!7857 = !DILocation(line: 3084, column: 30, scope: !7851)
!7858 = !DILocation(line: 3084, column: 44, scope: !7851)
!7859 = !DILocation(line: 3084, column: 13, scope: !7851)
!7860 = !DILocation(line: 3086, column: 30, scope: !7852)
!7861 = !DILocation(line: 3086, column: 33, scope: !7852)
!7862 = !DILocation(line: 3086, column: 39, scope: !7852)
!7863 = !DILocation(line: 3086, column: 44, scope: !7852)
!7864 = !DILocation(line: 3087, column: 43, scope: !7852)
!7865 = !DILocation(line: 3087, column: 46, scope: !7852)
!7866 = !DILocation(line: 3089, column: 43, scope: !7852)
!7867 = !DILocation(line: 3087, column: 30, scope: !7852)
!7868 = !DILocation(line: 3090, column: 30, scope: !7852)
!7869 = !DILocation(line: 3086, column: 15, scope: !7852)
!7870 = !DILocation(line: 3086, column: 13, scope: !7852)
!7871 = !DILocation(line: 3091, column: 31, scope: !7852)
!7872 = !DILocation(line: 3091, column: 34, scope: !7852)
!7873 = !DILocation(line: 3091, column: 39, scope: !7852)
!7874 = !DILocation(line: 3091, column: 16, scope: !7852)
!7875 = !DILocation(line: 3091, column: 9, scope: !7852)
!7876 = !DILocation(line: 3095, column: 9, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3095, column: 9)
!7878 = !DILocation(line: 3095, column: 14, scope: !7877)
!7879 = !DILocation(line: 3095, column: 9, scope: !7224)
!7880 = !DILocation(line: 3097, column: 30, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 3095, column: 23)
!7882 = !DILocation(line: 3097, column: 33, scope: !7881)
!7883 = !DILocation(line: 3097, column: 39, scope: !7881)
!7884 = !DILocation(line: 3097, column: 45, scope: !7881)
!7885 = !DILocation(line: 3101, column: 30, scope: !7881)
!7886 = !DILocation(line: 3097, column: 15, scope: !7881)
!7887 = !DILocation(line: 3097, column: 13, scope: !7881)
!7888 = !DILocation(line: 3102, column: 21, scope: !7881)
!7889 = !DILocation(line: 3102, column: 24, scope: !7881)
!7890 = !DILocation(line: 3102, column: 9, scope: !7881)
!7891 = !DILocation(line: 3103, column: 5, scope: !7881)
!7892 = !DILocation(line: 3104, column: 9, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3104, column: 9)
!7894 = !DILocation(line: 3104, column: 14, scope: !7893)
!7895 = !DILocation(line: 3104, column: 9, scope: !7224)
!7896 = !DILocation(line: 3106, column: 30, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 3104, column: 23)
!7898 = !DILocation(line: 3106, column: 33, scope: !7897)
!7899 = !DILocation(line: 3106, column: 39, scope: !7897)
!7900 = !DILocation(line: 3106, column: 45, scope: !7897)
!7901 = !DILocation(line: 3110, column: 30, scope: !7897)
!7902 = !DILocation(line: 3106, column: 15, scope: !7897)
!7903 = !DILocation(line: 3106, column: 13, scope: !7897)
!7904 = !DILocation(line: 3111, column: 21, scope: !7897)
!7905 = !DILocation(line: 3111, column: 24, scope: !7897)
!7906 = !DILocation(line: 3111, column: 9, scope: !7897)
!7907 = !DILocation(line: 3112, column: 5, scope: !7897)
!7908 = !DILocation(line: 3115, column: 9, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 3115, column: 9)
!7910 = !DILocation(line: 3115, column: 16, scope: !7909)
!7911 = !DILocation(line: 3115, column: 9, scope: !7224)
!7912 = !DILocation(line: 3118, column: 34, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 3115, column: 25)
!7914 = !DILocation(line: 3118, column: 37, scope: !7913)
!7915 = !DILocation(line: 3118, column: 45, scope: !7913)
!7916 = !DILocation(line: 3118, column: 53, scope: !7913)
!7917 = !DILocation(line: 3118, column: 67, scope: !7913)
!7918 = !DILocation(line: 3118, column: 15, scope: !7913)
!7919 = !DILocation(line: 3118, column: 13, scope: !7913)
!7920 = !DILocation(line: 3120, column: 11, scope: !7913)
!7921 = !DILocation(line: 3120, column: 19, scope: !7913)
!7922 = !DILocation(line: 3120, column: 26, scope: !7913)
!7923 = !DILocation(line: 3120, column: 40, scope: !7913)
!7924 = !DILocation(line: 3120, column: 9, scope: !7913)
!7925 = !DILocation(line: 3122, column: 13, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 3122, column: 13)
!7927 = !DILocation(line: 3122, column: 17, scope: !7926)
!7928 = !DILocation(line: 3122, column: 13, scope: !7913)
!7929 = !DILocation(line: 3124, column: 34, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 3122, column: 26)
!7931 = !DILocation(line: 3124, column: 37, scope: !7930)
!7932 = !DILocation(line: 3124, column: 43, scope: !7930)
!7933 = !DILocation(line: 3124, column: 48, scope: !7930)
!7934 = !DILocation(line: 3128, column: 34, scope: !7930)
!7935 = !DILocation(line: 3124, column: 19, scope: !7930)
!7936 = !DILocation(line: 3124, column: 17, scope: !7930)
!7937 = !DILocation(line: 3129, column: 35, scope: !7930)
!7938 = !DILocation(line: 3129, column: 38, scope: !7930)
!7939 = !DILocation(line: 3129, column: 20, scope: !7930)
!7940 = !DILocation(line: 3129, column: 13, scope: !7930)
!7941 = !DILocation(line: 3131, column: 5, scope: !7913)
!7942 = !DILocation(line: 3134, column: 24, scope: !7224)
!7943 = !DILocation(line: 3134, column: 34, scope: !7224)
!7944 = !DILocation(line: 3134, column: 40, scope: !7224)
!7945 = !{!2425, !2417, i64 328}
!7946 = !DILocation(line: 3135, column: 24, scope: !7224)
!7947 = !DILocation(line: 3135, column: 37, scope: !7224)
!7948 = !DILocation(line: 3134, column: 12, scope: !7224)
!7949 = !DILocation(line: 3134, column: 5, scope: !7224)
!7950 = !DILocation(line: 3136, column: 1, scope: !7224)
!7951 = distinct !DISubprogram(name: "dav_method_lock", scope: !3, file: !3, line: 3141, type: !4262, scopeLine: 3142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7952)
!7952 = !{!7953, !7954, !7955, !7956, !7957, !7958, !7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7970, !7972, !7973}
!7953 = !DILocalVariable(name: "r", arg: 1, scope: !7951, file: !3, line: 3141, type: !286)
!7954 = !DILocalVariable(name: "err", scope: !7951, file: !3, line: 3143, type: !272)
!7955 = !DILocalVariable(name: "resource", scope: !7951, file: !3, line: 3144, type: !776)
!7956 = !DILocalVariable(name: "parent", scope: !7951, file: !3, line: 3145, type: !776)
!7957 = !DILocalVariable(name: "locks_hooks", scope: !7951, file: !3, line: 3146, type: !880)
!7958 = !DILocalVariable(name: "result", scope: !7951, file: !3, line: 3147, type: !14)
!7959 = !DILocalVariable(name: "depth", scope: !7951, file: !3, line: 3148, type: !14)
!7960 = !DILocalVariable(name: "new_lock_request", scope: !7951, file: !3, line: 3149, type: !14)
!7961 = !DILocalVariable(name: "doc", scope: !7951, file: !3, line: 3150, type: !1280)
!7962 = !DILocalVariable(name: "lock", scope: !7951, file: !3, line: 3151, type: !925)
!7963 = !DILocalVariable(name: "multi_response", scope: !7951, file: !3, line: 3152, type: !826)
!7964 = !DILocalVariable(name: "lockdb", scope: !7951, file: !3, line: 3153, type: !875)
!7965 = !DILocalVariable(name: "resource_state", scope: !7951, file: !3, line: 3154, type: !14)
!7966 = !DILocalVariable(name: "ltl", scope: !7967, file: !3, line: 3243, type: !7969)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 3242, column: 32)
!7968 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3242, column: 9)
!7969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!7970 = !DILocalVariable(name: "locktoken_txt", scope: !7971, file: !3, line: 3273, type: !216)
!7971 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 3271, column: 12)
!7972 = !DILocalVariable(name: "conf", scope: !7971, file: !3, line: 3274, type: !1108)
!7973 = !DILabel(scope: !7951, name: "error", file: !3, line: 3318)
!7974 = !DILocation(line: 3141, column: 41, scope: !7951)
!7975 = !DILocation(line: 3143, column: 5, scope: !7951)
!7976 = !DILocation(line: 3143, column: 16, scope: !7951)
!7977 = !DILocation(line: 3144, column: 5, scope: !7951)
!7978 = !DILocation(line: 3144, column: 19, scope: !7951)
!7979 = !DILocation(line: 3145, column: 5, scope: !7951)
!7980 = !DILocation(line: 3145, column: 19, scope: !7951)
!7981 = !DILocation(line: 3146, column: 5, scope: !7951)
!7982 = !DILocation(line: 3146, column: 28, scope: !7951)
!7983 = !DILocation(line: 3147, column: 5, scope: !7951)
!7984 = !DILocation(line: 3147, column: 9, scope: !7951)
!7985 = !DILocation(line: 3148, column: 5, scope: !7951)
!7986 = !DILocation(line: 3148, column: 9, scope: !7951)
!7987 = !DILocation(line: 3149, column: 5, scope: !7951)
!7988 = !DILocation(line: 3149, column: 9, scope: !7951)
!7989 = !DILocation(line: 3150, column: 5, scope: !7951)
!7990 = !DILocation(line: 3150, column: 18, scope: !7951)
!7991 = !DILocation(line: 3151, column: 5, scope: !7951)
!7992 = !DILocation(line: 3151, column: 15, scope: !7951)
!7993 = !DILocation(line: 3152, column: 5, scope: !7951)
!7994 = !DILocation(line: 3152, column: 19, scope: !7951)
!7995 = !DILocation(line: 3153, column: 5, scope: !7951)
!7996 = !DILocation(line: 3153, column: 17, scope: !7951)
!7997 = !DILocation(line: 3154, column: 5, scope: !7951)
!7998 = !DILocation(line: 3154, column: 9, scope: !7951)
!7999 = !DILocation(line: 3157, column: 19, scope: !7951)
!8000 = !DILocation(line: 3157, column: 17, scope: !7951)
!8001 = !DILocation(line: 3158, column: 9, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3158, column: 9)
!8003 = !DILocation(line: 3158, column: 21, scope: !8002)
!8004 = !DILocation(line: 3158, column: 9, scope: !7951)
!8005 = !DILocation(line: 3159, column: 9, scope: !8002)
!8006 = !DILocation(line: 3161, column: 38, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3161, column: 9)
!8008 = !DILocation(line: 3161, column: 19, scope: !8007)
!8009 = !DILocation(line: 3161, column: 17, scope: !8007)
!8010 = !DILocation(line: 3161, column: 48, scope: !8007)
!8011 = !DILocation(line: 3161, column: 9, scope: !7951)
!8012 = !DILocation(line: 3162, column: 16, scope: !8007)
!8013 = !DILocation(line: 3162, column: 9, scope: !8007)
!8014 = !DILocation(line: 3164, column: 27, scope: !7951)
!8015 = !DILocation(line: 3164, column: 13, scope: !7951)
!8016 = !DILocation(line: 3164, column: 11, scope: !7951)
!8017 = !DILocation(line: 3165, column: 9, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3165, column: 9)
!8019 = !DILocation(line: 3165, column: 15, scope: !8018)
!8020 = !DILocation(line: 3165, column: 20, scope: !8018)
!8021 = !DILocation(line: 3165, column: 23, scope: !8018)
!8022 = !DILocation(line: 3165, column: 29, scope: !8018)
!8023 = !DILocation(line: 3165, column: 9, scope: !7951)
!8024 = !DILocation(line: 3166, column: 9, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 3165, column: 46)
!8026 = !DILocation(line: 3166, column: 9, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 3166, column: 9)
!8028 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 3166, column: 9)
!8029 = !DILocation(line: 3166, column: 9, scope: !8028)
!8030 = !DILocation(line: 3168, column: 9, scope: !8025)
!8031 = !DILocation(line: 3172, column: 28, scope: !7951)
!8032 = !DILocation(line: 3172, column: 11, scope: !7951)
!8033 = !DILocation(line: 3172, column: 9, scope: !7951)
!8034 = !DILocation(line: 3174, column: 9, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3174, column: 9)
!8036 = !DILocation(line: 3174, column: 13, scope: !8035)
!8037 = !DILocation(line: 3174, column: 9, scope: !7951)
!8038 = !DILocation(line: 3175, column: 31, scope: !8035)
!8039 = !DILocation(line: 3175, column: 34, scope: !8035)
!8040 = !DILocation(line: 3175, column: 16, scope: !8035)
!8041 = !DILocation(line: 3175, column: 9, scope: !8035)
!8042 = !DILocation(line: 3178, column: 37, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3178, column: 9)
!8044 = !DILocation(line: 3178, column: 40, scope: !8043)
!8045 = !DILocation(line: 3178, column: 56, scope: !8043)
!8046 = !DILocation(line: 3178, column: 9, scope: !8043)
!8047 = !DILocation(line: 3178, column: 67, scope: !8043)
!8048 = !DILocation(line: 3179, column: 13, scope: !8043)
!8049 = !DILocation(line: 3179, column: 16, scope: !8043)
!8050 = !DILocation(line: 3178, column: 9, scope: !7951)
!8051 = !DILocation(line: 3180, column: 31, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 3179, column: 21)
!8053 = !DILocation(line: 3180, column: 34, scope: !8052)
!8054 = !DILocation(line: 3180, column: 16, scope: !8052)
!8055 = !DILocation(line: 3180, column: 9, scope: !8052)
!8056 = !DILocation(line: 3184, column: 16, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3184, column: 9)
!8058 = !DILocation(line: 3184, column: 26, scope: !8057)
!8059 = !DILocation(line: 3184, column: 33, scope: !8057)
!8060 = !{!3193, !2417, i64 16}
!8061 = !DILocation(line: 3184, column: 53, scope: !8057)
!8062 = !DILocation(line: 3184, column: 14, scope: !8057)
!8063 = !DILocation(line: 3184, column: 73, scope: !8057)
!8064 = !DILocation(line: 3184, column: 9, scope: !7951)
!8065 = !DILocation(line: 3186, column: 31, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 3184, column: 82)
!8067 = !DILocation(line: 3186, column: 34, scope: !8066)
!8068 = !DILocation(line: 3186, column: 16, scope: !8066)
!8069 = !DILocation(line: 3186, column: 9, scope: !8066)
!8070 = !DILocation(line: 3188, column: 9, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3188, column: 9)
!8072 = !DILocation(line: 3188, column: 16, scope: !8071)
!8073 = !DILocation(line: 3188, column: 21, scope: !8071)
!8074 = !DILocation(line: 3188, column: 29, scope: !8071)
!8075 = !DILocation(line: 3188, column: 36, scope: !8071)
!8076 = !DILocation(line: 3188, column: 39, scope: !8071)
!8077 = !DILocation(line: 3188, column: 47, scope: !8071)
!8078 = !DILocation(line: 3188, column: 58, scope: !8071)
!8079 = !DILocation(line: 3188, column: 9, scope: !7951)
!8080 = !DILocation(line: 3189, column: 29, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 3188, column: 65)
!8082 = !DILocation(line: 3189, column: 32, scope: !8081)
!8083 = !DILocation(line: 3190, column: 41, scope: !8081)
!8084 = !DILocation(line: 3190, column: 44, scope: !8081)
!8085 = !DILocation(line: 3193, column: 41, scope: !8081)
!8086 = !DILocation(line: 3190, column: 28, scope: !8081)
!8087 = !DILocation(line: 3189, column: 15, scope: !8081)
!8088 = !DILocation(line: 3189, column: 13, scope: !8081)
!8089 = !DILocation(line: 3194, column: 31, scope: !8081)
!8090 = !DILocation(line: 3194, column: 34, scope: !8081)
!8091 = !DILocation(line: 3194, column: 16, scope: !8081)
!8092 = !DILocation(line: 3194, column: 9, scope: !8081)
!8093 = !DILocation(line: 3201, column: 18, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3201, column: 9)
!8095 = !DILocation(line: 3201, column: 31, scope: !8094)
!8096 = !DILocation(line: 3201, column: 44, scope: !8094)
!8097 = !DILocation(line: 3201, column: 16, scope: !8094)
!8098 = !DILocation(line: 3201, column: 14, scope: !8094)
!8099 = !DILocation(line: 3201, column: 63, scope: !8094)
!8100 = !DILocation(line: 3201, column: 9, scope: !7951)
!8101 = !DILocation(line: 3203, column: 31, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 3201, column: 72)
!8103 = !DILocation(line: 3203, column: 34, scope: !8102)
!8104 = !DILocation(line: 3203, column: 16, scope: !8102)
!8105 = !DILocation(line: 3203, column: 9, scope: !8102)
!8106 = !DILocation(line: 3206, column: 9, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3206, column: 9)
!8108 = !DILocation(line: 3206, column: 13, scope: !8107)
!8109 = !DILocation(line: 3206, column: 9, scope: !7951)
!8110 = !DILocation(line: 3207, column: 44, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 3207, column: 13)
!8112 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 3206, column: 22)
!8113 = !DILocation(line: 3207, column: 47, scope: !8111)
!8114 = !DILocation(line: 3207, column: 57, scope: !8111)
!8115 = !DILocation(line: 3207, column: 65, scope: !8111)
!8116 = !DILocation(line: 3207, column: 20, scope: !8111)
!8117 = !DILocation(line: 3207, column: 18, scope: !8111)
!8118 = !DILocation(line: 3208, column: 56, scope: !8111)
!8119 = !DILocation(line: 3207, column: 13, scope: !8112)
!8120 = !DILocation(line: 3210, column: 13, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 3208, column: 65)
!8122 = !DILocation(line: 3212, column: 26, scope: !8112)
!8123 = !DILocation(line: 3214, column: 39, scope: !8112)
!8124 = !DILocation(line: 3214, column: 42, scope: !8112)
!8125 = !DILocation(line: 3214, column: 48, scope: !8112)
!8126 = !DILocation(line: 3214, column: 51, scope: !8112)
!8127 = !{!2425, !2417, i64 312}
!8128 = !DILocation(line: 3214, column: 27, scope: !8112)
!8129 = !DILocation(line: 3214, column: 9, scope: !8112)
!8130 = !DILocation(line: 3214, column: 15, scope: !8112)
!8131 = !DILocation(line: 3214, column: 25, scope: !8112)
!8132 = !{!8133, !2417, i64 48}
!8133 = !{!"dav_lock", !2418, i64 0, !2426, i64 4, !2418, i64 8, !2418, i64 12, !2426, i64 16, !2427, i64 24, !2417, i64 32, !2417, i64 40, !2417, i64 48, !2417, i64 56, !2417, i64 64}
!8134 = !DILocation(line: 3215, column: 5, scope: !8112)
!8135 = !DILocation(line: 3217, column: 45, scope: !7951)
!8136 = !DILocation(line: 3217, column: 48, scope: !7951)
!8137 = !DILocation(line: 3217, column: 22, scope: !7951)
!8138 = !DILocation(line: 3217, column: 20, scope: !7951)
!8139 = !DILocation(line: 3226, column: 37, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3226, column: 9)
!8141 = !DILocation(line: 3226, column: 40, scope: !8140)
!8142 = !DILocation(line: 3226, column: 50, scope: !8140)
!8143 = !DILocation(line: 3227, column: 38, scope: !8140)
!8144 = !DILocation(line: 3227, column: 53, scope: !8140)
!8145 = !DILocation(line: 3230, column: 40, scope: !8140)
!8146 = !DILocation(line: 3230, column: 59, scope: !8140)
!8147 = !DILocation(line: 3230, column: 65, scope: !8140)
!8148 = !{!8133, !2418, i64 8}
!8149 = !DILocation(line: 3230, column: 37, scope: !8140)
!8150 = !DILocation(line: 3231, column: 37, scope: !8140)
!8151 = !DILocation(line: 3232, column: 37, scope: !8140)
!8152 = !DILocation(line: 3226, column: 16, scope: !8140)
!8153 = !DILocation(line: 3226, column: 14, scope: !8140)
!8154 = !DILocation(line: 3232, column: 46, scope: !8140)
!8155 = !DILocation(line: 3226, column: 9, scope: !7951)
!8156 = !DILocation(line: 3233, column: 30, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 3232, column: 53)
!8158 = !DILocation(line: 3233, column: 33, scope: !8157)
!8159 = !DILocation(line: 3233, column: 39, scope: !8157)
!8160 = !DILocation(line: 3233, column: 44, scope: !8157)
!8161 = !DILocation(line: 3234, column: 43, scope: !8157)
!8162 = !DILocation(line: 3234, column: 46, scope: !8157)
!8163 = !DILocation(line: 3237, column: 43, scope: !8157)
!8164 = !DILocation(line: 3234, column: 30, scope: !8157)
!8165 = !DILocation(line: 3238, column: 30, scope: !8157)
!8166 = !DILocation(line: 3233, column: 15, scope: !8157)
!8167 = !DILocation(line: 3233, column: 13, scope: !8157)
!8168 = !DILocation(line: 3239, column: 9, scope: !8157)
!8169 = !DILocation(line: 3242, column: 9, scope: !7968)
!8170 = !DILocation(line: 3242, column: 26, scope: !7968)
!8171 = !DILocation(line: 3242, column: 9, scope: !7951)
!8172 = !DILocation(line: 3243, column: 9, scope: !7967)
!8173 = !DILocation(line: 3243, column: 29, scope: !7967)
!8174 = !DILocation(line: 3253, column: 43, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 3253, column: 13)
!8176 = !DILocation(line: 3253, column: 20, scope: !8175)
!8177 = !DILocation(line: 3253, column: 18, scope: !8175)
!8178 = !DILocation(line: 3253, column: 53, scope: !8175)
!8179 = !DILocation(line: 3253, column: 13, scope: !7967)
!8180 = !DILocation(line: 3254, column: 34, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 3253, column: 62)
!8182 = !DILocation(line: 3254, column: 37, scope: !8181)
!8183 = !DILocation(line: 3254, column: 43, scope: !8181)
!8184 = !DILocation(line: 3254, column: 48, scope: !8181)
!8185 = !DILocation(line: 3255, column: 47, scope: !8181)
!8186 = !DILocation(line: 3255, column: 50, scope: !8181)
!8187 = !DILocation(line: 3260, column: 47, scope: !8181)
!8188 = !DILocation(line: 3255, column: 34, scope: !8181)
!8189 = !DILocation(line: 3261, column: 34, scope: !8181)
!8190 = !DILocation(line: 3254, column: 19, scope: !8181)
!8191 = !DILocation(line: 3254, column: 17, scope: !8181)
!8192 = !DILocation(line: 3262, column: 13, scope: !8181)
!8193 = !DILocation(line: 3265, column: 22, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 3265, column: 13)
!8195 = !DILocation(line: 3265, column: 35, scope: !8194)
!8196 = !{!3279, !2417, i64 104}
!8197 = !DILocation(line: 3265, column: 50, scope: !8194)
!8198 = !DILocation(line: 3265, column: 58, scope: !8194)
!8199 = !DILocation(line: 3265, column: 68, scope: !8194)
!8200 = !DILocation(line: 3266, column: 66, scope: !8194)
!8201 = !DILocation(line: 3266, column: 50, scope: !8194)
!8202 = !DILocation(line: 3265, column: 20, scope: !8194)
!8203 = !DILocation(line: 3265, column: 18, scope: !8194)
!8204 = !DILocation(line: 3267, column: 58, scope: !8194)
!8205 = !DILocation(line: 3265, column: 13, scope: !7967)
!8206 = !DILocation(line: 3269, column: 13, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 3267, column: 67)
!8208 = !DILocation(line: 3271, column: 5, scope: !7968)
!8209 = !DILocation(line: 3271, column: 5, scope: !7967)
!8210 = !DILocation(line: 3273, column: 9, scope: !7971)
!8211 = !DILocation(line: 3273, column: 15, scope: !7971)
!8212 = !DILocation(line: 3274, column: 9, scope: !7971)
!8213 = !DILocation(line: 3274, column: 23, scope: !7971)
!8214 = !DILocation(line: 3276, column: 32, scope: !7971)
!8215 = !DILocation(line: 3276, column: 14, scope: !7971)
!8216 = !DILocation(line: 3280, column: 13, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 3280, column: 13)
!8218 = !DILocation(line: 3280, column: 19, scope: !8217)
!8219 = !{!8133, !2427, i64 24}
!8220 = !DILocation(line: 3280, column: 27, scope: !8217)
!8221 = !DILocation(line: 3281, column: 13, scope: !8217)
!8222 = !DILocation(line: 3281, column: 16, scope: !8217)
!8223 = !DILocation(line: 3281, column: 22, scope: !8217)
!8224 = !DILocation(line: 3281, column: 32, scope: !8217)
!8225 = !DILocation(line: 3281, column: 45, scope: !8217)
!8226 = !DILocation(line: 3281, column: 51, scope: !8217)
!8227 = !DILocation(line: 3281, column: 43, scope: !8217)
!8228 = !DILocation(line: 3281, column: 30, scope: !8217)
!8229 = !DILocation(line: 3280, column: 13, scope: !7971)
!8230 = !DILocation(line: 3282, column: 29, scope: !8217)
!8231 = !DILocation(line: 3282, column: 42, scope: !8217)
!8232 = !DILocation(line: 3282, column: 48, scope: !8217)
!8233 = !DILocation(line: 3282, column: 40, scope: !8217)
!8234 = !DILocation(line: 3282, column: 13, scope: !8217)
!8235 = !DILocation(line: 3282, column: 19, scope: !8217)
!8236 = !DILocation(line: 3282, column: 27, scope: !8217)
!8237 = !DILocation(line: 3284, column: 28, scope: !7971)
!8238 = !DILocation(line: 3284, column: 31, scope: !7971)
!8239 = !DILocation(line: 3284, column: 41, scope: !7971)
!8240 = !DILocation(line: 3284, column: 49, scope: !7971)
!8241 = !DILocation(line: 3284, column: 15, scope: !7971)
!8242 = !DILocation(line: 3284, column: 13, scope: !7971)
!8243 = !DILocation(line: 3285, column: 13, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 3285, column: 13)
!8245 = !DILocation(line: 3285, column: 17, scope: !8244)
!8246 = !DILocation(line: 3285, column: 13, scope: !7971)
!8247 = !DILocation(line: 3287, column: 13, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 3285, column: 26)
!8249 = !DILocation(line: 3290, column: 37, scope: !7971)
!8250 = !DILocation(line: 3290, column: 40, scope: !7971)
!8251 = !DILocation(line: 3291, column: 39, scope: !7971)
!8252 = !DILocation(line: 3291, column: 52, scope: !7971)
!8253 = !{!3279, !2417, i64 16}
!8254 = !DILocation(line: 3291, column: 70, scope: !7971)
!8255 = !DILocation(line: 3291, column: 73, scope: !7971)
!8256 = !DILocation(line: 3292, column: 41, scope: !7971)
!8257 = !DILocation(line: 3292, column: 47, scope: !7971)
!8258 = !{!8133, !2417, i64 32}
!8259 = !DILocation(line: 3291, column: 37, scope: !7971)
!8260 = !DILocation(line: 3290, column: 25, scope: !7971)
!8261 = !DILocation(line: 3290, column: 23, scope: !7971)
!8262 = !DILocation(line: 3295, column: 24, scope: !7971)
!8263 = !DILocation(line: 3295, column: 27, scope: !7971)
!8264 = !DILocation(line: 3295, column: 54, scope: !7971)
!8265 = !DILocation(line: 3295, column: 9, scope: !7971)
!8266 = !DILocation(line: 3296, column: 5, scope: !7968)
!8267 = !DILocation(line: 3298, column: 7, scope: !7951)
!8268 = !DILocation(line: 3298, column: 20, scope: !7951)
!8269 = !DILocation(line: 3298, column: 34, scope: !7951)
!8270 = !DILocation(line: 3298, column: 5, scope: !7951)
!8271 = !DILocation(line: 3300, column: 5, scope: !7951)
!8272 = !DILocation(line: 3300, column: 8, scope: !7951)
!8273 = !DILocation(line: 3300, column: 15, scope: !7951)
!8274 = !DILocation(line: 3301, column: 25, scope: !7951)
!8275 = !DILocation(line: 3301, column: 5, scope: !7951)
!8276 = !DILocation(line: 3303, column: 76, scope: !7951)
!8277 = !DILocation(line: 3303, column: 5, scope: !7951)
!8278 = !DILocation(line: 3304, column: 9, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 3304, column: 9)
!8280 = !DILocation(line: 3304, column: 14, scope: !8279)
!8281 = !DILocation(line: 3304, column: 9, scope: !7951)
!8282 = !DILocation(line: 3305, column: 49, scope: !8279)
!8283 = !DILocation(line: 3305, column: 9, scope: !8279)
!8284 = !DILocation(line: 3307, column: 20, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 3306, column: 10)
!8286 = !DILocation(line: 3311, column: 44, scope: !8285)
!8287 = !DILocation(line: 3311, column: 47, scope: !8285)
!8288 = !DILocation(line: 3311, column: 20, scope: !8285)
!8289 = !DILocation(line: 3307, column: 9, scope: !8285)
!8290 = !DILocation(line: 3313, column: 27, scope: !7951)
!8291 = !DILocation(line: 3313, column: 5, scope: !7951)
!8292 = !DILocation(line: 3316, column: 5, scope: !7951)
!8293 = !DILocation(line: 3318, column: 3, scope: !7951)
!8294 = !DILocation(line: 3319, column: 7, scope: !7951)
!8295 = !DILocation(line: 3319, column: 20, scope: !7951)
!8296 = !DILocation(line: 3319, column: 34, scope: !7951)
!8297 = !DILocation(line: 3319, column: 5, scope: !7951)
!8298 = !DILocation(line: 3320, column: 27, scope: !7951)
!8299 = !DILocation(line: 3320, column: 30, scope: !7951)
!8300 = !DILocation(line: 3320, column: 35, scope: !7951)
!8301 = !DILocation(line: 3320, column: 12, scope: !7951)
!8302 = !DILocation(line: 3320, column: 5, scope: !7951)
!8303 = !DILocation(line: 3321, column: 1, scope: !7951)
!8304 = distinct !DISubprogram(name: "dav_method_unlock", scope: !3, file: !3, line: 3326, type: !4262, scopeLine: 3327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8305)
!8305 = !{!8306, !8307, !8308, !8309, !8310, !8311, !8312, !8313, !8314, !8315}
!8306 = !DILocalVariable(name: "r", arg: 1, scope: !8304, file: !3, line: 3326, type: !286)
!8307 = !DILocalVariable(name: "err", scope: !8304, file: !3, line: 3328, type: !272)
!8308 = !DILocalVariable(name: "resource", scope: !8304, file: !3, line: 3329, type: !776)
!8309 = !DILocalVariable(name: "locks_hooks", scope: !8304, file: !3, line: 3330, type: !880)
!8310 = !DILocalVariable(name: "result", scope: !8304, file: !3, line: 3331, type: !14)
!8311 = !DILocalVariable(name: "const_locktoken_txt", scope: !8304, file: !3, line: 3332, type: !10)
!8312 = !DILocalVariable(name: "locktoken_txt", scope: !8304, file: !3, line: 3333, type: !216)
!8313 = !DILocalVariable(name: "locktoken", scope: !8304, file: !3, line: 3334, type: !894)
!8314 = !DILocalVariable(name: "resource_state", scope: !8304, file: !3, line: 3335, type: !14)
!8315 = !DILocalVariable(name: "multi_response", scope: !8304, file: !3, line: 3336, type: !826)
!8316 = !DILocation(line: 3326, column: 43, scope: !8304)
!8317 = !DILocation(line: 3328, column: 5, scope: !8304)
!8318 = !DILocation(line: 3328, column: 16, scope: !8304)
!8319 = !DILocation(line: 3329, column: 5, scope: !8304)
!8320 = !DILocation(line: 3329, column: 19, scope: !8304)
!8321 = !DILocation(line: 3330, column: 5, scope: !8304)
!8322 = !DILocation(line: 3330, column: 28, scope: !8304)
!8323 = !DILocation(line: 3331, column: 5, scope: !8304)
!8324 = !DILocation(line: 3331, column: 9, scope: !8304)
!8325 = !DILocation(line: 3332, column: 5, scope: !8304)
!8326 = !DILocation(line: 3332, column: 17, scope: !8304)
!8327 = !DILocation(line: 3333, column: 5, scope: !8304)
!8328 = !DILocation(line: 3333, column: 11, scope: !8304)
!8329 = !DILocation(line: 3334, column: 5, scope: !8304)
!8330 = !DILocation(line: 3334, column: 20, scope: !8304)
!8331 = !DILocation(line: 3335, column: 5, scope: !8304)
!8332 = !DILocation(line: 3335, column: 9, scope: !8304)
!8333 = !DILocation(line: 3336, column: 5, scope: !8304)
!8334 = !DILocation(line: 3336, column: 19, scope: !8304)
!8335 = !DILocation(line: 3339, column: 19, scope: !8304)
!8336 = !DILocation(line: 3339, column: 17, scope: !8304)
!8337 = !DILocation(line: 3340, column: 9, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3340, column: 9)
!8339 = !DILocation(line: 3340, column: 21, scope: !8338)
!8340 = !DILocation(line: 3340, column: 9, scope: !8304)
!8341 = !DILocation(line: 3341, column: 9, scope: !8338)
!8342 = !DILocation(line: 3343, column: 46, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3343, column: 9)
!8344 = !DILocation(line: 3343, column: 49, scope: !8343)
!8345 = !DILocation(line: 3343, column: 32, scope: !8343)
!8346 = !DILocation(line: 3343, column: 30, scope: !8343)
!8347 = !DILocation(line: 3344, column: 61, scope: !8343)
!8348 = !DILocation(line: 3343, column: 9, scope: !8304)
!8349 = !DILocation(line: 3345, column: 9, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 3344, column: 70)
!8351 = !DILocation(line: 3345, column: 9, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 3345, column: 9)
!8353 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 3345, column: 9)
!8354 = !{!2425, !2417, i64 344}
!8355 = !DILocation(line: 3345, column: 9, scope: !8353)
!8356 = !DILocation(line: 3348, column: 9, scope: !8350)
!8357 = !DILocation(line: 3351, column: 33, scope: !8304)
!8358 = !DILocation(line: 3351, column: 36, scope: !8304)
!8359 = !DILocation(line: 3351, column: 42, scope: !8304)
!8360 = !DILocation(line: 3351, column: 21, scope: !8304)
!8361 = !DILocation(line: 3351, column: 19, scope: !8304)
!8362 = !DILocation(line: 3352, column: 9, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3352, column: 9)
!8364 = !DILocation(line: 3352, column: 26, scope: !8363)
!8365 = !DILocation(line: 3352, column: 9, scope: !8304)
!8366 = !DILocation(line: 3354, column: 9, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 3352, column: 34)
!8368 = !DILocation(line: 3356, column: 18, scope: !8304)
!8369 = !DILocation(line: 3358, column: 9, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3358, column: 9)
!8371 = !DILocation(line: 3358, column: 30, scope: !8370)
!8372 = !DILocation(line: 3358, column: 23, scope: !8370)
!8373 = !DILocation(line: 3358, column: 45, scope: !8370)
!8374 = !DILocation(line: 3358, column: 50, scope: !8370)
!8375 = !DILocation(line: 3358, column: 9, scope: !8304)
!8376 = !DILocation(line: 3360, column: 9, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 3358, column: 58)
!8378 = !DILocation(line: 3362, column: 5, scope: !8304)
!8379 = !DILocation(line: 3362, column: 26, scope: !8304)
!8380 = !DILocation(line: 3362, column: 19, scope: !8304)
!8381 = !DILocation(line: 3362, column: 41, scope: !8304)
!8382 = !DILocation(line: 3362, column: 46, scope: !8304)
!8383 = !DILocation(line: 3364, column: 18, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3364, column: 9)
!8385 = !DILocation(line: 3364, column: 31, scope: !8384)
!8386 = !{!3279, !2417, i64 8}
!8387 = !DILocation(line: 3364, column: 48, scope: !8384)
!8388 = !DILocation(line: 3364, column: 51, scope: !8384)
!8389 = !DILocation(line: 3364, column: 57, scope: !8384)
!8390 = !DILocation(line: 3364, column: 16, scope: !8384)
!8391 = !DILocation(line: 3364, column: 14, scope: !8384)
!8392 = !DILocation(line: 3365, column: 61, scope: !8384)
!8393 = !DILocation(line: 3364, column: 9, scope: !8304)
!8394 = !DILocation(line: 3366, column: 30, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 3365, column: 70)
!8396 = !DILocation(line: 3366, column: 33, scope: !8395)
!8397 = !DILocation(line: 3367, column: 43, scope: !8395)
!8398 = !DILocation(line: 3367, column: 46, scope: !8395)
!8399 = !DILocation(line: 3371, column: 43, scope: !8395)
!8400 = !DILocation(line: 3367, column: 30, scope: !8395)
!8401 = !DILocation(line: 3372, column: 30, scope: !8395)
!8402 = !DILocation(line: 3366, column: 15, scope: !8395)
!8403 = !DILocation(line: 3366, column: 13, scope: !8395)
!8404 = !DILocation(line: 3373, column: 31, scope: !8395)
!8405 = !DILocation(line: 3373, column: 34, scope: !8395)
!8406 = !DILocation(line: 3373, column: 16, scope: !8395)
!8407 = !DILocation(line: 3373, column: 9, scope: !8395)
!8408 = !DILocation(line: 3377, column: 28, scope: !8304)
!8409 = !DILocation(line: 3377, column: 11, scope: !8304)
!8410 = !DILocation(line: 3377, column: 9, scope: !8304)
!8411 = !DILocation(line: 3379, column: 9, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3379, column: 9)
!8413 = !DILocation(line: 3379, column: 13, scope: !8412)
!8414 = !DILocation(line: 3379, column: 9, scope: !8304)
!8415 = !DILocation(line: 3380, column: 31, scope: !8412)
!8416 = !DILocation(line: 3380, column: 34, scope: !8412)
!8417 = !DILocation(line: 3380, column: 16, scope: !8412)
!8418 = !DILocation(line: 3380, column: 9, scope: !8412)
!8419 = !DILocation(line: 3383, column: 37, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3383, column: 9)
!8421 = !DILocation(line: 3383, column: 40, scope: !8420)
!8422 = !DILocation(line: 3383, column: 9, scope: !8420)
!8423 = !DILocation(line: 3383, column: 68, scope: !8420)
!8424 = !DILocation(line: 3384, column: 13, scope: !8420)
!8425 = !DILocation(line: 3384, column: 16, scope: !8420)
!8426 = !DILocation(line: 3383, column: 9, scope: !8304)
!8427 = !DILocation(line: 3385, column: 31, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 3384, column: 21)
!8429 = !DILocation(line: 3385, column: 34, scope: !8428)
!8430 = !DILocation(line: 3385, column: 16, scope: !8428)
!8431 = !DILocation(line: 3385, column: 9, scope: !8428)
!8432 = !DILocation(line: 3388, column: 45, scope: !8304)
!8433 = !DILocation(line: 3388, column: 48, scope: !8304)
!8434 = !DILocation(line: 3388, column: 22, scope: !8304)
!8435 = !DILocation(line: 3388, column: 20, scope: !8304)
!8436 = !DILocation(line: 3401, column: 37, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3401, column: 9)
!8438 = !DILocation(line: 3401, column: 40, scope: !8437)
!8439 = !DILocation(line: 3401, column: 53, scope: !8437)
!8440 = !DILocation(line: 3403, column: 37, scope: !8437)
!8441 = !DILocation(line: 3403, column: 52, scope: !8437)
!8442 = !DILocation(line: 3401, column: 16, scope: !8437)
!8443 = !DILocation(line: 3401, column: 14, scope: !8437)
!8444 = !DILocation(line: 3405, column: 69, scope: !8437)
!8445 = !DILocation(line: 3401, column: 9, scope: !8304)
!8446 = !DILocation(line: 3407, column: 31, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 3405, column: 78)
!8448 = !DILocation(line: 3407, column: 34, scope: !8447)
!8449 = !DILocation(line: 3407, column: 39, scope: !8447)
!8450 = !DILocation(line: 3407, column: 16, scope: !8447)
!8451 = !DILocation(line: 3407, column: 9, scope: !8447)
!8452 = !DILocation(line: 3418, column: 30, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3418, column: 9)
!8454 = !DILocation(line: 3418, column: 33, scope: !8453)
!8455 = !DILocation(line: 3418, column: 43, scope: !8453)
!8456 = !DILocation(line: 3418, column: 19, scope: !8453)
!8457 = !DILocation(line: 3418, column: 17, scope: !8453)
!8458 = !DILocation(line: 3418, column: 55, scope: !8453)
!8459 = !DILocation(line: 3418, column: 9, scope: !8304)
!8460 = !DILocation(line: 3419, column: 16, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 3418, column: 62)
!8462 = !DILocation(line: 3419, column: 9, scope: !8461)
!8463 = !DILocation(line: 3422, column: 5, scope: !8304)
!8464 = !DILocation(line: 3423, column: 1, scope: !8304)
!8465 = distinct !DISubprogram(name: "dav_method_vsn_control", scope: !3, file: !3, line: 3425, type: !4262, scopeLine: 3426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8466)
!8466 = !{!8467, !8468, !8469, !8470, !8471, !8472, !8473, !8474, !8475, !8476, !8477, !8480, !8481}
!8467 = !DILocalVariable(name: "r", arg: 1, scope: !8465, file: !3, line: 3425, type: !286)
!8468 = !DILocalVariable(name: "resource", scope: !8465, file: !3, line: 3427, type: !776)
!8469 = !DILocalVariable(name: "resource_state", scope: !8465, file: !3, line: 3428, type: !14)
!8470 = !DILocalVariable(name: "av_info", scope: !8465, file: !3, line: 3429, type: !4860)
!8471 = !DILocalVariable(name: "locks_hooks", scope: !8465, file: !3, line: 3430, type: !880)
!8472 = !DILocalVariable(name: "vsn_hooks", scope: !8465, file: !3, line: 3431, type: !1208)
!8473 = !DILocalVariable(name: "err", scope: !8465, file: !3, line: 3432, type: !272)
!8474 = !DILocalVariable(name: "doc", scope: !8465, file: !3, line: 3433, type: !1280)
!8475 = !DILocalVariable(name: "target", scope: !8465, file: !3, line: 3434, type: !10)
!8476 = !DILocalVariable(name: "result", scope: !8465, file: !3, line: 3435, type: !14)
!8477 = !DILocalVariable(name: "child", scope: !8478, file: !3, line: 3463, type: !1025)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 3462, column: 22)
!8479 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3462, column: 9)
!8480 = !DILocalVariable(name: "tsize", scope: !8478, file: !3, line: 3464, type: !43)
!8481 = !DILocalVariable(name: "lockdb", scope: !8482, file: !3, line: 3581, type: !875)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 3580, column: 65)
!8483 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3579, column: 9)
!8484 = !DILocation(line: 3425, column: 48, scope: !8465)
!8485 = !DILocation(line: 3427, column: 5, scope: !8465)
!8486 = !DILocation(line: 3427, column: 19, scope: !8465)
!8487 = !DILocation(line: 3428, column: 5, scope: !8465)
!8488 = !DILocation(line: 3428, column: 9, scope: !8465)
!8489 = !DILocation(line: 3429, column: 5, scope: !8465)
!8490 = !DILocation(line: 3429, column: 27, scope: !8465)
!8491 = !DILocation(line: 3430, column: 5, scope: !8465)
!8492 = !DILocation(line: 3430, column: 28, scope: !8465)
!8493 = !DILocation(line: 3430, column: 42, scope: !8465)
!8494 = !DILocation(line: 3431, column: 5, scope: !8465)
!8495 = !DILocation(line: 3431, column: 26, scope: !8465)
!8496 = !DILocation(line: 3431, column: 38, scope: !8465)
!8497 = !DILocation(line: 3432, column: 5, scope: !8465)
!8498 = !DILocation(line: 3432, column: 16, scope: !8465)
!8499 = !DILocation(line: 3433, column: 5, scope: !8465)
!8500 = !DILocation(line: 3433, column: 18, scope: !8465)
!8501 = !DILocation(line: 3434, column: 5, scope: !8465)
!8502 = !DILocation(line: 3434, column: 17, scope: !8465)
!8503 = !DILocation(line: 3435, column: 5, scope: !8465)
!8504 = !DILocation(line: 3435, column: 9, scope: !8465)
!8505 = !DILocation(line: 3438, column: 9, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3438, column: 9)
!8507 = !DILocation(line: 3438, column: 19, scope: !8506)
!8508 = !DILocation(line: 3438, column: 9, scope: !8465)
!8509 = !DILocation(line: 3439, column: 9, scope: !8506)
!8510 = !DILocation(line: 3442, column: 28, scope: !8465)
!8511 = !DILocation(line: 3442, column: 11, scope: !8465)
!8512 = !DILocation(line: 3442, column: 9, scope: !8465)
!8513 = !DILocation(line: 3444, column: 9, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3444, column: 9)
!8515 = !DILocation(line: 3444, column: 13, scope: !8514)
!8516 = !DILocation(line: 3444, column: 9, scope: !8465)
!8517 = !DILocation(line: 3445, column: 31, scope: !8514)
!8518 = !DILocation(line: 3445, column: 34, scope: !8514)
!8519 = !DILocation(line: 3445, column: 16, scope: !8514)
!8520 = !DILocation(line: 3445, column: 9, scope: !8514)
!8521 = !DILocation(line: 3448, column: 38, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3448, column: 9)
!8523 = !DILocation(line: 3448, column: 19, scope: !8522)
!8524 = !DILocation(line: 3448, column: 17, scope: !8522)
!8525 = !DILocation(line: 3448, column: 48, scope: !8522)
!8526 = !DILocation(line: 3448, column: 9, scope: !8465)
!8527 = !DILocation(line: 3449, column: 16, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 3448, column: 55)
!8529 = !DILocation(line: 3449, column: 9, scope: !8528)
!8530 = !DILocation(line: 3454, column: 37, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3454, column: 9)
!8532 = !DILocation(line: 3454, column: 40, scope: !8531)
!8533 = !DILocation(line: 3454, column: 56, scope: !8531)
!8534 = !DILocation(line: 3454, column: 9, scope: !8531)
!8535 = !DILocation(line: 3454, column: 67, scope: !8531)
!8536 = !DILocation(line: 3455, column: 13, scope: !8531)
!8537 = !DILocation(line: 3455, column: 16, scope: !8531)
!8538 = !DILocation(line: 3454, column: 9, scope: !8465)
!8539 = !DILocation(line: 3456, column: 31, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 3455, column: 21)
!8541 = !DILocation(line: 3456, column: 34, scope: !8540)
!8542 = !DILocation(line: 3456, column: 16, scope: !8540)
!8543 = !DILocation(line: 3456, column: 9, scope: !8540)
!8544 = !DILocation(line: 3460, column: 45, scope: !8465)
!8545 = !DILocation(line: 3460, column: 48, scope: !8465)
!8546 = !DILocation(line: 3460, column: 22, scope: !8465)
!8547 = !DILocation(line: 3460, column: 20, scope: !8465)
!8548 = !DILocation(line: 3462, column: 9, scope: !8479)
!8549 = !DILocation(line: 3462, column: 13, scope: !8479)
!8550 = !DILocation(line: 3462, column: 9, scope: !8465)
!8551 = !DILocation(line: 3463, column: 9, scope: !8478)
!8552 = !DILocation(line: 3463, column: 29, scope: !8478)
!8553 = !DILocation(line: 3464, column: 9, scope: !8478)
!8554 = !DILocation(line: 3464, column: 20, scope: !8478)
!8555 = !DILocation(line: 3466, column: 32, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 3466, column: 13)
!8557 = !DILocation(line: 3466, column: 14, scope: !8556)
!8558 = !DILocation(line: 3466, column: 13, scope: !8478)
!8559 = !DILocation(line: 3467, column: 13, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 3466, column: 57)
!8561 = !DILocation(line: 3467, column: 13, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 3467, column: 13)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 3467, column: 13)
!8564 = !DILocation(line: 3467, column: 13, scope: !8563)
!8565 = !DILocation(line: 3470, column: 13, scope: !8560)
!8566 = !DILocation(line: 3474, column: 37, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 3474, column: 13)
!8568 = !DILocation(line: 3474, column: 42, scope: !8567)
!8569 = !DILocation(line: 3474, column: 22, scope: !8567)
!8570 = !DILocation(line: 3474, column: 20, scope: !8567)
!8571 = !DILocation(line: 3474, column: 60, scope: !8567)
!8572 = !DILocation(line: 3474, column: 13, scope: !8478)
!8573 = !DILocation(line: 3475, column: 13, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 3474, column: 69)
!8575 = !DILocation(line: 3475, column: 13, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 3475, column: 13)
!8577 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 3475, column: 13)
!8578 = !DILocation(line: 3475, column: 13, scope: !8577)
!8579 = !DILocation(line: 3478, column: 13, scope: !8574)
!8580 = !DILocation(line: 3481, column: 37, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 3481, column: 13)
!8582 = !DILocation(line: 3481, column: 22, scope: !8581)
!8583 = !DILocation(line: 3481, column: 20, scope: !8581)
!8584 = !DILocation(line: 3481, column: 53, scope: !8581)
!8585 = !DILocation(line: 3481, column: 13, scope: !8478)
!8586 = !DILocation(line: 3482, column: 13, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 3481, column: 62)
!8588 = !DILocation(line: 3482, column: 13, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 3482, column: 13)
!8590 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 3482, column: 13)
!8591 = !DILocation(line: 3482, column: 13, scope: !8590)
!8592 = !DILocation(line: 3485, column: 13, scope: !8587)
!8593 = !DILocation(line: 3489, column: 25, scope: !8478)
!8594 = !DILocation(line: 3489, column: 28, scope: !8478)
!8595 = !DILocation(line: 3489, column: 34, scope: !8478)
!8596 = !DILocation(line: 3489, column: 9, scope: !8478)
!8597 = !DILocation(line: 3491, column: 13, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 3491, column: 13)
!8599 = !DILocation(line: 3491, column: 19, scope: !8598)
!8600 = !DILocation(line: 3491, column: 13, scope: !8478)
!8601 = !DILocation(line: 3492, column: 13, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 3491, column: 25)
!8603 = !DILocation(line: 3492, column: 13, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 3492, column: 13)
!8605 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 3492, column: 13)
!8606 = !DILocation(line: 3492, column: 13, scope: !8605)
!8607 = !DILocation(line: 3494, column: 13, scope: !8602)
!8608 = !DILocation(line: 3496, column: 5, scope: !8479)
!8609 = !DILocation(line: 3496, column: 5, scope: !8478)
!8610 = !DILocation(line: 3505, column: 10, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3505, column: 9)
!8612 = !DILocation(line: 3505, column: 20, scope: !8611)
!8613 = !DILocation(line: 3505, column: 27, scope: !8611)
!8614 = !DILocation(line: 3505, column: 30, scope: !8611)
!8615 = !DILocation(line: 3505, column: 37, scope: !8611)
!8616 = !DILocation(line: 3505, column: 9, scope: !8465)
!8617 = !DILocation(line: 3506, column: 29, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 3505, column: 46)
!8619 = !DILocation(line: 3506, column: 32, scope: !8618)
!8620 = !DILocation(line: 3506, column: 15, scope: !8618)
!8621 = !DILocation(line: 3506, column: 13, scope: !8618)
!8622 = !DILocation(line: 3508, column: 31, scope: !8618)
!8623 = !DILocation(line: 3508, column: 34, scope: !8618)
!8624 = !DILocation(line: 3508, column: 16, scope: !8618)
!8625 = !DILocation(line: 3508, column: 9, scope: !8618)
!8626 = !DILocation(line: 3510, column: 14, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 3510, column: 14)
!8628 = !DILocation(line: 3510, column: 24, scope: !8627)
!8629 = !DILocation(line: 3510, column: 14, scope: !8611)
!8630 = !DILocation(line: 3512, column: 13, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 3512, column: 13)
!8632 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 3510, column: 32)
!8633 = !DILocation(line: 3512, column: 20, scope: !8631)
!8634 = !DILocation(line: 3512, column: 13, scope: !8632)
!8635 = !DILocation(line: 3513, column: 33, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 3512, column: 29)
!8637 = !DILocation(line: 3513, column: 36, scope: !8636)
!8638 = !DILocation(line: 3513, column: 19, scope: !8636)
!8639 = !DILocation(line: 3513, column: 17, scope: !8636)
!8640 = !DILocation(line: 3515, column: 35, scope: !8636)
!8641 = !DILocation(line: 3515, column: 38, scope: !8636)
!8642 = !DILocation(line: 3515, column: 20, scope: !8636)
!8643 = !DILocation(line: 3515, column: 13, scope: !8636)
!8644 = !DILocation(line: 3519, column: 13, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 3519, column: 13)
!8646 = !DILocation(line: 3519, column: 23, scope: !8645)
!8647 = !DILocation(line: 3519, column: 28, scope: !8645)
!8648 = !DILocation(line: 3520, column: 13, scope: !8645)
!8649 = !DILocation(line: 3520, column: 18, scope: !8645)
!8650 = !DILocation(line: 3520, column: 28, scope: !8645)
!8651 = !DILocation(line: 3520, column: 38, scope: !8645)
!8652 = !DILocation(line: 3520, column: 43, scope: !8645)
!8653 = !DILocation(line: 3520, column: 54, scope: !8645)
!8654 = !DILocation(line: 3520, column: 67, scope: !8645)
!8655 = !DILocation(line: 3520, column: 42, scope: !8645)
!8656 = !DILocation(line: 3519, column: 13, scope: !8632)
!8657 = !DILocation(line: 3521, column: 33, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 3520, column: 79)
!8659 = !DILocation(line: 3521, column: 36, scope: !8658)
!8660 = !DILocation(line: 3521, column: 19, scope: !8658)
!8661 = !DILocation(line: 3521, column: 17, scope: !8658)
!8662 = !DILocation(line: 3523, column: 35, scope: !8658)
!8663 = !DILocation(line: 3523, column: 38, scope: !8658)
!8664 = !DILocation(line: 3523, column: 20, scope: !8658)
!8665 = !DILocation(line: 3523, column: 13, scope: !8658)
!8666 = !DILocation(line: 3529, column: 13, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 3529, column: 13)
!8668 = !DILocation(line: 3529, column: 23, scope: !8667)
!8669 = !DILocation(line: 3529, column: 13, scope: !8632)
!8670 = !DILocation(line: 3531, column: 28, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 3529, column: 34)
!8672 = !DILocation(line: 3531, column: 31, scope: !8671)
!8673 = !DILocation(line: 3531, column: 13, scope: !8671)
!8674 = !DILocation(line: 3534, column: 35, scope: !8671)
!8675 = !DILocation(line: 3534, column: 13, scope: !8671)
!8676 = !DILocation(line: 3536, column: 13, scope: !8671)
!8677 = !DILocation(line: 3538, column: 5, scope: !8632)
!8678 = !DILocation(line: 3542, column: 37, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3542, column: 9)
!8680 = !DILocation(line: 3542, column: 40, scope: !8679)
!8681 = !DILocation(line: 3543, column: 37, scope: !8679)
!8682 = !DILocation(line: 3543, column: 52, scope: !8679)
!8683 = !DILocation(line: 3542, column: 16, scope: !8679)
!8684 = !DILocation(line: 3542, column: 14, scope: !8679)
!8685 = !DILocation(line: 3545, column: 67, scope: !8679)
!8686 = !DILocation(line: 3542, column: 9, scope: !8465)
!8687 = !DILocation(line: 3546, column: 31, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 3545, column: 76)
!8689 = !DILocation(line: 3546, column: 34, scope: !8688)
!8690 = !DILocation(line: 3546, column: 16, scope: !8688)
!8691 = !DILocation(line: 3546, column: 9, scope: !8688)
!8692 = !DILocation(line: 3550, column: 34, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3550, column: 9)
!8694 = !DILocation(line: 3550, column: 37, scope: !8693)
!8695 = !DILocation(line: 3550, column: 16, scope: !8693)
!8696 = !DILocation(line: 3550, column: 14, scope: !8693)
!8697 = !DILocation(line: 3551, column: 45, scope: !8693)
!8698 = !DILocation(line: 3550, column: 9, scope: !8465)
!8699 = !DILocation(line: 3552, column: 31, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 3551, column: 54)
!8701 = !DILocation(line: 3552, column: 34, scope: !8700)
!8702 = !DILocation(line: 3552, column: 16, scope: !8700)
!8703 = !DILocation(line: 3552, column: 9, scope: !8700)
!8704 = !DILocation(line: 3556, column: 18, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3556, column: 9)
!8706 = !DILocation(line: 3556, column: 29, scope: !8705)
!8707 = !{!4640, !2417, i64 32}
!8708 = !DILocation(line: 3556, column: 42, scope: !8705)
!8709 = !DILocation(line: 3556, column: 52, scope: !8705)
!8710 = !DILocation(line: 3556, column: 16, scope: !8705)
!8711 = !DILocation(line: 3556, column: 14, scope: !8705)
!8712 = !DILocation(line: 3556, column: 61, scope: !8705)
!8713 = !DILocation(line: 3556, column: 9, scope: !8465)
!8714 = !DILocation(line: 3557, column: 26, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 3556, column: 70)
!8716 = !DILocation(line: 3557, column: 29, scope: !8715)
!8717 = !DILocation(line: 3557, column: 9, scope: !8715)
!8718 = !DILocation(line: 3558, column: 30, scope: !8715)
!8719 = !DILocation(line: 3558, column: 33, scope: !8715)
!8720 = !DILocation(line: 3559, column: 43, scope: !8715)
!8721 = !DILocation(line: 3559, column: 46, scope: !8715)
!8722 = !DILocation(line: 3561, column: 43, scope: !8715)
!8723 = !DILocation(line: 3559, column: 30, scope: !8715)
!8724 = !DILocation(line: 3562, column: 30, scope: !8715)
!8725 = !DILocation(line: 3558, column: 15, scope: !8715)
!8726 = !DILocation(line: 3558, column: 13, scope: !8715)
!8727 = !DILocation(line: 3563, column: 31, scope: !8715)
!8728 = !DILocation(line: 3563, column: 34, scope: !8715)
!8729 = !DILocation(line: 3563, column: 16, scope: !8715)
!8730 = !DILocation(line: 3563, column: 9, scope: !8715)
!8731 = !DILocation(line: 3567, column: 28, scope: !8465)
!8732 = !DILocation(line: 3567, column: 31, scope: !8465)
!8733 = !DILocation(line: 3567, column: 11, scope: !8465)
!8734 = !DILocation(line: 3567, column: 9, scope: !8465)
!8735 = !DILocation(line: 3568, column: 9, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3568, column: 9)
!8737 = !DILocation(line: 3568, column: 13, scope: !8736)
!8738 = !DILocation(line: 3568, column: 9, scope: !8465)
!8739 = !DILocation(line: 3570, column: 30, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 3568, column: 22)
!8741 = !DILocation(line: 3570, column: 33, scope: !8740)
!8742 = !DILocation(line: 3570, column: 39, scope: !8740)
!8743 = !DILocation(line: 3570, column: 44, scope: !8740)
!8744 = !DILocation(line: 3574, column: 30, scope: !8740)
!8745 = !DILocation(line: 3570, column: 15, scope: !8740)
!8746 = !DILocation(line: 3570, column: 13, scope: !8740)
!8747 = !DILocation(line: 3575, column: 21, scope: !8740)
!8748 = !DILocation(line: 3575, column: 24, scope: !8740)
!8749 = !DILocation(line: 3575, column: 9, scope: !8740)
!8750 = !DILocation(line: 3576, column: 5, scope: !8740)
!8751 = !DILocation(line: 3579, column: 9, scope: !8483)
!8752 = !DILocation(line: 3579, column: 21, scope: !8483)
!8753 = !DILocation(line: 3580, column: 9, scope: !8483)
!8754 = !DILocation(line: 3580, column: 14, scope: !8483)
!8755 = !DILocation(line: 3580, column: 27, scope: !8483)
!8756 = !{!3279, !2417, i64 0}
!8757 = !DILocation(line: 3580, column: 46, scope: !8483)
!8758 = !DILocation(line: 3580, column: 12, scope: !8483)
!8759 = !DILocation(line: 3580, column: 56, scope: !8483)
!8760 = !DILocation(line: 3579, column: 9, scope: !8465)
!8761 = !DILocation(line: 3581, column: 9, scope: !8482)
!8762 = !DILocation(line: 3581, column: 21, scope: !8482)
!8763 = !DILocation(line: 3583, column: 22, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 3583, column: 13)
!8765 = !DILocation(line: 3583, column: 35, scope: !8764)
!8766 = !DILocation(line: 3583, column: 48, scope: !8764)
!8767 = !DILocation(line: 3583, column: 20, scope: !8764)
!8768 = !DILocation(line: 3583, column: 18, scope: !8764)
!8769 = !DILocation(line: 3583, column: 67, scope: !8764)
!8770 = !DILocation(line: 3583, column: 13, scope: !8482)
!8771 = !DILocation(line: 3585, column: 34, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 3583, column: 76)
!8773 = !DILocation(line: 3585, column: 37, scope: !8772)
!8774 = !DILocation(line: 3585, column: 43, scope: !8772)
!8775 = !DILocation(line: 3585, column: 48, scope: !8772)
!8776 = !DILocation(line: 3590, column: 34, scope: !8772)
!8777 = !DILocation(line: 3585, column: 19, scope: !8772)
!8778 = !DILocation(line: 3585, column: 17, scope: !8772)
!8779 = !DILocation(line: 3591, column: 35, scope: !8772)
!8780 = !DILocation(line: 3591, column: 38, scope: !8772)
!8781 = !DILocation(line: 3591, column: 20, scope: !8772)
!8782 = !DILocation(line: 3591, column: 13, scope: !8772)
!8783 = !DILocation(line: 3595, column: 34, scope: !8482)
!8784 = !DILocation(line: 3595, column: 37, scope: !8482)
!8785 = !DILocation(line: 3595, column: 45, scope: !8482)
!8786 = !DILocation(line: 3595, column: 55, scope: !8482)
!8787 = !DILocation(line: 3595, column: 15, scope: !8482)
!8788 = !DILocation(line: 3595, column: 13, scope: !8482)
!8789 = !DILocation(line: 3597, column: 11, scope: !8482)
!8790 = !DILocation(line: 3597, column: 24, scope: !8482)
!8791 = !DILocation(line: 3597, column: 38, scope: !8482)
!8792 = !DILocation(line: 3597, column: 9, scope: !8482)
!8793 = !DILocation(line: 3599, column: 13, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 3599, column: 13)
!8795 = !DILocation(line: 3599, column: 17, scope: !8794)
!8796 = !DILocation(line: 3599, column: 13, scope: !8482)
!8797 = !DILocation(line: 3601, column: 34, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 3599, column: 26)
!8799 = !DILocation(line: 3601, column: 37, scope: !8798)
!8800 = !DILocation(line: 3601, column: 43, scope: !8798)
!8801 = !DILocation(line: 3601, column: 48, scope: !8798)
!8802 = !DILocation(line: 3605, column: 34, scope: !8798)
!8803 = !DILocation(line: 3601, column: 19, scope: !8798)
!8804 = !DILocation(line: 3601, column: 17, scope: !8798)
!8805 = !DILocation(line: 3606, column: 35, scope: !8798)
!8806 = !DILocation(line: 3606, column: 38, scope: !8798)
!8807 = !DILocation(line: 3606, column: 20, scope: !8798)
!8808 = !DILocation(line: 3606, column: 13, scope: !8798)
!8809 = !DILocation(line: 3608, column: 5, scope: !8483)
!8810 = !DILocation(line: 3608, column: 5, scope: !8482)
!8811 = !DILocation(line: 3611, column: 20, scope: !8465)
!8812 = !DILocation(line: 3611, column: 23, scope: !8465)
!8813 = !DILocation(line: 3611, column: 5, scope: !8465)
!8814 = !DILocation(line: 3614, column: 24, scope: !8465)
!8815 = !DILocation(line: 3614, column: 27, scope: !8465)
!8816 = !DILocation(line: 3614, column: 37, scope: !8465)
!8817 = !DILocation(line: 3614, column: 12, scope: !8465)
!8818 = !DILocation(line: 3614, column: 5, scope: !8465)
!8819 = !DILocation(line: 3615, column: 1, scope: !8465)
!8820 = distinct !DISubprogram(name: "dav_method_checkout", scope: !3, file: !3, line: 3618, type: !4262, scopeLine: 3619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8821)
!8821 = !{!8822, !8823, !8824, !8825, !8826, !8827, !8828, !8829, !8830, !8831, !8832, !8833, !8834, !8837, !8842}
!8822 = !DILocalVariable(name: "r", arg: 1, scope: !8820, file: !3, line: 3618, type: !286)
!8823 = !DILocalVariable(name: "resource", scope: !8820, file: !3, line: 3620, type: !776)
!8824 = !DILocalVariable(name: "working_resource", scope: !8820, file: !3, line: 3621, type: !776)
!8825 = !DILocalVariable(name: "vsn_hooks", scope: !8820, file: !3, line: 3622, type: !1208)
!8826 = !DILocalVariable(name: "err", scope: !8820, file: !3, line: 3623, type: !272)
!8827 = !DILocalVariable(name: "result", scope: !8820, file: !3, line: 3624, type: !14)
!8828 = !DILocalVariable(name: "doc", scope: !8820, file: !3, line: 3625, type: !1280)
!8829 = !DILocalVariable(name: "apply_to_vsn", scope: !8820, file: !3, line: 3626, type: !14)
!8830 = !DILocalVariable(name: "is_unreserved", scope: !8820, file: !3, line: 3627, type: !14)
!8831 = !DILocalVariable(name: "is_fork_ok", scope: !8820, file: !3, line: 3628, type: !14)
!8832 = !DILocalVariable(name: "create_activity", scope: !8820, file: !3, line: 3629, type: !14)
!8833 = !DILocalVariable(name: "activities", scope: !8820, file: !3, line: 3630, type: !450)
!8834 = !DILocalVariable(name: "aset", scope: !8835, file: !3, line: 3640, type: !1025)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 3639, column: 22)
!8836 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3639, column: 9)
!8837 = !DILocalVariable(name: "child", scope: !8838, file: !3, line: 3670, type: !1025)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 3669, column: 18)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 3666, column: 17)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 3665, column: 73)
!8841 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 3665, column: 13)
!8842 = !DILocalVariable(name: "href", scope: !8843, file: !3, line: 3677, type: !10)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 3676, column: 62)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 3675, column: 25)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 3674, column: 60)
!8846 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 3674, column: 17)
!8847 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 3674, column: 17)
!8848 = !DILocation(line: 3618, column: 45, scope: !8820)
!8849 = !DILocation(line: 3620, column: 5, scope: !8820)
!8850 = !DILocation(line: 3620, column: 19, scope: !8820)
!8851 = !DILocation(line: 3621, column: 5, scope: !8820)
!8852 = !DILocation(line: 3621, column: 19, scope: !8820)
!8853 = !DILocation(line: 3622, column: 5, scope: !8820)
!8854 = !DILocation(line: 3622, column: 26, scope: !8820)
!8855 = !DILocation(line: 3622, column: 38, scope: !8820)
!8856 = !DILocation(line: 3623, column: 5, scope: !8820)
!8857 = !DILocation(line: 3623, column: 16, scope: !8820)
!8858 = !DILocation(line: 3624, column: 5, scope: !8820)
!8859 = !DILocation(line: 3624, column: 9, scope: !8820)
!8860 = !DILocation(line: 3625, column: 5, scope: !8820)
!8861 = !DILocation(line: 3625, column: 18, scope: !8820)
!8862 = !DILocation(line: 3626, column: 5, scope: !8820)
!8863 = !DILocation(line: 3626, column: 9, scope: !8820)
!8864 = !DILocation(line: 3627, column: 5, scope: !8820)
!8865 = !DILocation(line: 3627, column: 9, scope: !8820)
!8866 = !DILocation(line: 3628, column: 5, scope: !8820)
!8867 = !DILocation(line: 3628, column: 9, scope: !8820)
!8868 = !DILocation(line: 3629, column: 5, scope: !8820)
!8869 = !DILocation(line: 3629, column: 9, scope: !8820)
!8870 = !DILocation(line: 3630, column: 5, scope: !8820)
!8871 = !DILocation(line: 3630, column: 25, scope: !8820)
!8872 = !DILocation(line: 3633, column: 9, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3633, column: 9)
!8874 = !DILocation(line: 3633, column: 19, scope: !8873)
!8875 = !DILocation(line: 3633, column: 9, scope: !8820)
!8876 = !DILocation(line: 3634, column: 9, scope: !8873)
!8877 = !DILocation(line: 3636, column: 38, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3636, column: 9)
!8879 = !DILocation(line: 3636, column: 19, scope: !8878)
!8880 = !DILocation(line: 3636, column: 17, scope: !8878)
!8881 = !DILocation(line: 3636, column: 48, scope: !8878)
!8882 = !DILocation(line: 3636, column: 9, scope: !8820)
!8883 = !DILocation(line: 3637, column: 16, scope: !8878)
!8884 = !DILocation(line: 3637, column: 9, scope: !8878)
!8885 = !DILocation(line: 3639, column: 9, scope: !8836)
!8886 = !DILocation(line: 3639, column: 13, scope: !8836)
!8887 = !DILocation(line: 3639, column: 9, scope: !8820)
!8888 = !DILocation(line: 3640, column: 9, scope: !8835)
!8889 = !DILocation(line: 3640, column: 29, scope: !8835)
!8890 = !DILocation(line: 3642, column: 32, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 3642, column: 13)
!8892 = !DILocation(line: 3642, column: 14, scope: !8891)
!8893 = !DILocation(line: 3642, column: 13, scope: !8835)
!8894 = !DILocation(line: 3644, column: 13, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 3642, column: 50)
!8896 = !DILocation(line: 3644, column: 13, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 3644, column: 13)
!8898 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 3644, column: 13)
!8899 = !DILocation(line: 3644, column: 13, scope: !8898)
!8900 = !DILocation(line: 3647, column: 13, scope: !8895)
!8901 = !DILocation(line: 3650, column: 28, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 3650, column: 13)
!8903 = !DILocation(line: 3650, column: 33, scope: !8902)
!8904 = !DILocation(line: 3650, column: 13, scope: !8902)
!8905 = !DILocation(line: 3650, column: 59, scope: !8902)
!8906 = !DILocation(line: 3650, column: 13, scope: !8835)
!8907 = !DILocation(line: 3651, column: 31, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 3651, column: 17)
!8909 = distinct !DILexicalBlock(scope: !8902, file: !3, line: 3650, column: 68)
!8910 = !DILocation(line: 3651, column: 34, scope: !8908)
!8911 = !DILocation(line: 3651, column: 17, scope: !8908)
!8912 = !DILocation(line: 3651, column: 55, scope: !8908)
!8913 = !DILocation(line: 3651, column: 17, scope: !8909)
!8914 = !DILocation(line: 3654, column: 43, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 3651, column: 64)
!8916 = !DILocation(line: 3654, column: 24, scope: !8915)
!8917 = !DILocation(line: 3654, column: 17, scope: !8915)
!8918 = !DILocation(line: 3659, column: 26, scope: !8909)
!8919 = !DILocation(line: 3660, column: 9, scope: !8909)
!8920 = !DILocation(line: 3662, column: 40, scope: !8835)
!8921 = !DILocation(line: 3662, column: 45, scope: !8835)
!8922 = !DILocation(line: 3662, column: 25, scope: !8835)
!8923 = !DILocation(line: 3662, column: 65, scope: !8835)
!8924 = !DILocation(line: 3662, column: 23, scope: !8835)
!8925 = !DILocation(line: 3663, column: 37, scope: !8835)
!8926 = !DILocation(line: 3663, column: 42, scope: !8835)
!8927 = !DILocation(line: 3663, column: 22, scope: !8835)
!8928 = !DILocation(line: 3663, column: 59, scope: !8835)
!8929 = !DILocation(line: 3663, column: 20, scope: !8835)
!8930 = !DILocation(line: 3665, column: 36, scope: !8841)
!8931 = !DILocation(line: 3665, column: 41, scope: !8841)
!8932 = !DILocation(line: 3665, column: 21, scope: !8841)
!8933 = !DILocation(line: 3665, column: 19, scope: !8841)
!8934 = !DILocation(line: 3665, column: 64, scope: !8841)
!8935 = !DILocation(line: 3665, column: 13, scope: !8835)
!8936 = !DILocation(line: 3666, column: 32, scope: !8839)
!8937 = !DILocation(line: 3666, column: 17, scope: !8839)
!8938 = !DILocation(line: 3666, column: 45, scope: !8839)
!8939 = !DILocation(line: 3666, column: 17, scope: !8840)
!8940 = !DILocation(line: 3667, column: 33, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 3666, column: 54)
!8942 = !DILocation(line: 3668, column: 13, scope: !8941)
!8943 = !DILocation(line: 3670, column: 17, scope: !8838)
!8944 = !DILocation(line: 3670, column: 37, scope: !8838)
!8945 = !DILocation(line: 3670, column: 45, scope: !8838)
!8946 = !DILocation(line: 3670, column: 51, scope: !8838)
!8947 = !DILocation(line: 3672, column: 45, scope: !8838)
!8948 = !DILocation(line: 3672, column: 48, scope: !8838)
!8949 = !DILocation(line: 3672, column: 30, scope: !8838)
!8950 = !DILocation(line: 3672, column: 28, scope: !8838)
!8951 = !DILocation(line: 3674, column: 17, scope: !8838)
!8952 = !DILocation(line: 3674, column: 24, scope: !8846)
!8953 = !DILocation(line: 3674, column: 30, scope: !8846)
!8954 = !DILocation(line: 3674, column: 17, scope: !8847)
!8955 = !DILocation(line: 3675, column: 25, scope: !8844)
!8956 = !DILocation(line: 3675, column: 32, scope: !8844)
!8957 = !DILocation(line: 3675, column: 35, scope: !8844)
!8958 = !DILocation(line: 3676, column: 25, scope: !8844)
!8959 = !DILocation(line: 3676, column: 35, scope: !8844)
!8960 = !DILocation(line: 3676, column: 42, scope: !8844)
!8961 = !DILocation(line: 3676, column: 28, scope: !8844)
!8962 = !DILocation(line: 3676, column: 56, scope: !8844)
!8963 = !DILocation(line: 3675, column: 25, scope: !8845)
!8964 = !DILocation(line: 3677, column: 25, scope: !8843)
!8965 = !DILocation(line: 3677, column: 37, scope: !8843)
!8966 = !DILocation(line: 3679, column: 50, scope: !8843)
!8967 = !DILocation(line: 3679, column: 57, scope: !8843)
!8968 = !DILocation(line: 3679, column: 60, scope: !8843)
!8969 = !DILocation(line: 3679, column: 32, scope: !8843)
!8970 = !DILocation(line: 3679, column: 30, scope: !8843)
!8971 = !DILocation(line: 3681, column: 70, scope: !8843)
!8972 = !DILocation(line: 3681, column: 56, scope: !8843)
!8973 = !DILocation(line: 3681, column: 41, scope: !8843)
!8974 = !DILocation(line: 3681, column: 68, scope: !8843)
!8975 = !DILocation(line: 3682, column: 21, scope: !8844)
!8976 = !DILocation(line: 3682, column: 21, scope: !8843)
!8977 = !DILocation(line: 3683, column: 17, scope: !8845)
!8978 = !DILocation(line: 3674, column: 47, scope: !8846)
!8979 = !DILocation(line: 3674, column: 54, scope: !8846)
!8980 = !DILocation(line: 3674, column: 45, scope: !8846)
!8981 = !DILocation(line: 3674, column: 17, scope: !8846)
!8982 = distinct !{!8982, !8954, !8983, !2563}
!8983 = !DILocation(line: 3683, column: 17, scope: !8847)
!8984 = !DILocation(line: 3685, column: 21, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 3685, column: 21)
!8986 = !DILocation(line: 3685, column: 33, scope: !8985)
!8987 = !DILocation(line: 3685, column: 39, scope: !8985)
!8988 = !DILocation(line: 3685, column: 21, scope: !8838)
!8989 = !DILocation(line: 3691, column: 21, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 3685, column: 45)
!8991 = !DILocation(line: 3691, column: 21, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 3691, column: 21)
!8993 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 3691, column: 21)
!8994 = !DILocation(line: 3691, column: 21, scope: !8993)
!8995 = !DILocation(line: 3695, column: 21, scope: !8990)
!8996 = !DILocation(line: 3697, column: 13, scope: !8839)
!8997 = !DILocation(line: 3698, column: 9, scope: !8840)
!8998 = !DILocation(line: 3699, column: 5, scope: !8836)
!8999 = !DILocation(line: 3699, column: 5, scope: !8835)
!9000 = !DILocation(line: 3702, column: 28, scope: !8820)
!9001 = !DILocation(line: 3702, column: 52, scope: !8820)
!9002 = !DILocation(line: 3702, column: 11, scope: !8820)
!9003 = !DILocation(line: 3702, column: 9, scope: !8820)
!9004 = !DILocation(line: 3703, column: 9, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3703, column: 9)
!9006 = !DILocation(line: 3703, column: 13, scope: !9005)
!9007 = !DILocation(line: 3703, column: 9, scope: !8820)
!9008 = !DILocation(line: 3704, column: 31, scope: !9005)
!9009 = !DILocation(line: 3704, column: 34, scope: !9005)
!9010 = !DILocation(line: 3704, column: 16, scope: !9005)
!9011 = !DILocation(line: 3704, column: 9, scope: !9005)
!9012 = !DILocation(line: 3707, column: 37, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3707, column: 9)
!9014 = !DILocation(line: 3707, column: 40, scope: !9013)
!9015 = !DILocation(line: 3707, column: 56, scope: !9013)
!9016 = !DILocation(line: 3707, column: 9, scope: !9013)
!9017 = !DILocation(line: 3707, column: 67, scope: !9013)
!9018 = !DILocation(line: 3708, column: 13, scope: !9013)
!9019 = !DILocation(line: 3708, column: 16, scope: !9013)
!9020 = !DILocation(line: 3707, column: 9, scope: !8820)
!9021 = !DILocation(line: 3709, column: 31, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 3708, column: 21)
!9023 = !DILocation(line: 3709, column: 34, scope: !9022)
!9024 = !DILocation(line: 3709, column: 16, scope: !9022)
!9025 = !DILocation(line: 3709, column: 9, scope: !9022)
!9026 = !DILocation(line: 3712, column: 10, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3712, column: 9)
!9028 = !DILocation(line: 3712, column: 20, scope: !9027)
!9029 = !DILocation(line: 3712, column: 9, scope: !8820)
!9030 = !DILocation(line: 3714, column: 9, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 3712, column: 28)
!9032 = !DILocation(line: 3720, column: 9, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3720, column: 9)
!9034 = !DILocation(line: 3720, column: 19, scope: !9033)
!9035 = !DILocation(line: 3720, column: 24, scope: !9033)
!9036 = !DILocation(line: 3721, column: 9, scope: !9033)
!9037 = !DILocation(line: 3721, column: 12, scope: !9033)
!9038 = !DILocation(line: 3721, column: 22, scope: !9033)
!9039 = !DILocation(line: 3721, column: 27, scope: !9033)
!9040 = !DILocation(line: 3720, column: 9, scope: !8820)
!9041 = !DILocation(line: 3722, column: 35, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 3721, column: 57)
!9043 = !DILocation(line: 3722, column: 16, scope: !9042)
!9044 = !DILocation(line: 3722, column: 9, scope: !9042)
!9045 = !DILocation(line: 3726, column: 10, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3726, column: 9)
!9047 = !DILocation(line: 3726, column: 20, scope: !9046)
!9048 = !DILocation(line: 3726, column: 9, scope: !8820)
!9049 = !DILocation(line: 3727, column: 35, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 3726, column: 31)
!9051 = !DILocation(line: 3727, column: 16, scope: !9050)
!9052 = !DILocation(line: 3727, column: 9, scope: !9050)
!9053 = !DILocation(line: 3731, column: 9, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3731, column: 9)
!9055 = !DILocation(line: 3731, column: 19, scope: !9054)
!9056 = !DILocation(line: 3731, column: 9, scope: !8820)
!9057 = !DILocation(line: 3732, column: 35, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 3731, column: 28)
!9059 = !DILocation(line: 3732, column: 16, scope: !9058)
!9060 = !DILocation(line: 3732, column: 9, scope: !9058)
!9061 = !DILocation(line: 3739, column: 18, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3739, column: 9)
!9063 = !DILocation(line: 3739, column: 29, scope: !9062)
!9064 = !{!4640, !2417, i64 40}
!9065 = !DILocation(line: 3739, column: 39, scope: !9062)
!9066 = !DILocation(line: 3740, column: 39, scope: !9062)
!9067 = !DILocation(line: 3740, column: 54, scope: !9062)
!9068 = !DILocation(line: 3741, column: 39, scope: !9062)
!9069 = !DILocation(line: 3741, column: 56, scope: !9062)
!9070 = !DILocation(line: 3739, column: 16, scope: !9062)
!9071 = !DILocation(line: 3739, column: 14, scope: !9062)
!9072 = !DILocation(line: 3742, column: 59, scope: !9062)
!9073 = !DILocation(line: 3739, column: 9, scope: !8820)
!9074 = !DILocation(line: 3743, column: 30, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 3742, column: 68)
!9076 = !DILocation(line: 3743, column: 33, scope: !9075)
!9077 = !DILocation(line: 3744, column: 43, scope: !9075)
!9078 = !DILocation(line: 3744, column: 46, scope: !9075)
!9079 = !DILocation(line: 3746, column: 43, scope: !9075)
!9080 = !DILocation(line: 3744, column: 30, scope: !9075)
!9081 = !DILocation(line: 3747, column: 30, scope: !9075)
!9082 = !DILocation(line: 3743, column: 15, scope: !9075)
!9083 = !DILocation(line: 3743, column: 13, scope: !9075)
!9084 = !DILocation(line: 3748, column: 31, scope: !9075)
!9085 = !DILocation(line: 3748, column: 34, scope: !9075)
!9086 = !DILocation(line: 3748, column: 16, scope: !9075)
!9087 = !DILocation(line: 3748, column: 9, scope: !9075)
!9088 = !DILocation(line: 3752, column: 20, scope: !8820)
!9089 = !DILocation(line: 3752, column: 23, scope: !8820)
!9090 = !DILocation(line: 3752, column: 5, scope: !8820)
!9091 = !DILocation(line: 3757, column: 9, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 3757, column: 9)
!9093 = !DILocation(line: 3757, column: 26, scope: !9092)
!9094 = !DILocation(line: 3757, column: 9, scope: !8820)
!9095 = !DILocation(line: 3759, column: 31, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 3757, column: 35)
!9097 = !DILocation(line: 3759, column: 9, scope: !9096)
!9098 = !DILocation(line: 3760, column: 9, scope: !9096)
!9099 = !DILocation(line: 3763, column: 24, scope: !8820)
!9100 = !DILocation(line: 3763, column: 27, scope: !8820)
!9101 = !DILocation(line: 3763, column: 45, scope: !8820)
!9102 = !DILocation(line: 3763, column: 12, scope: !8820)
!9103 = !DILocation(line: 3763, column: 5, scope: !8820)
!9104 = !DILocation(line: 3764, column: 1, scope: !8820)
!9105 = distinct !DISubprogram(name: "dav_method_uncheckout", scope: !3, file: !3, line: 3767, type: !4262, scopeLine: 3768, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9106)
!9106 = !{!9107, !9108, !9109, !9110, !9111}
!9107 = !DILocalVariable(name: "r", arg: 1, scope: !9105, file: !3, line: 3767, type: !286)
!9108 = !DILocalVariable(name: "resource", scope: !9105, file: !3, line: 3769, type: !776)
!9109 = !DILocalVariable(name: "vsn_hooks", scope: !9105, file: !3, line: 3770, type: !1208)
!9110 = !DILocalVariable(name: "err", scope: !9105, file: !3, line: 3771, type: !272)
!9111 = !DILocalVariable(name: "result", scope: !9105, file: !3, line: 3772, type: !14)
!9112 = !DILocation(line: 3767, column: 47, scope: !9105)
!9113 = !DILocation(line: 3769, column: 5, scope: !9105)
!9114 = !DILocation(line: 3769, column: 19, scope: !9105)
!9115 = !DILocation(line: 3770, column: 5, scope: !9105)
!9116 = !DILocation(line: 3770, column: 26, scope: !9105)
!9117 = !DILocation(line: 3770, column: 38, scope: !9105)
!9118 = !DILocation(line: 3771, column: 5, scope: !9105)
!9119 = !DILocation(line: 3771, column: 16, scope: !9105)
!9120 = !DILocation(line: 3772, column: 5, scope: !9105)
!9121 = !DILocation(line: 3772, column: 9, scope: !9105)
!9122 = !DILocation(line: 3775, column: 9, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3775, column: 9)
!9124 = !DILocation(line: 3775, column: 19, scope: !9123)
!9125 = !DILocation(line: 3775, column: 9, scope: !9105)
!9126 = !DILocation(line: 3776, column: 9, scope: !9123)
!9127 = !DILocation(line: 3778, column: 43, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3778, column: 9)
!9129 = !DILocation(line: 3778, column: 19, scope: !9128)
!9130 = !DILocation(line: 3778, column: 17, scope: !9128)
!9131 = !DILocation(line: 3778, column: 47, scope: !9128)
!9132 = !DILocation(line: 3778, column: 9, scope: !9105)
!9133 = !DILocation(line: 3779, column: 16, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3778, column: 54)
!9135 = !DILocation(line: 3779, column: 9, scope: !9134)
!9136 = !DILocation(line: 3783, column: 28, scope: !9105)
!9137 = !DILocation(line: 3783, column: 11, scope: !9105)
!9138 = !DILocation(line: 3783, column: 9, scope: !9105)
!9139 = !DILocation(line: 3785, column: 9, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3785, column: 9)
!9141 = !DILocation(line: 3785, column: 13, scope: !9140)
!9142 = !DILocation(line: 3785, column: 9, scope: !9105)
!9143 = !DILocation(line: 3786, column: 31, scope: !9140)
!9144 = !DILocation(line: 3786, column: 34, scope: !9140)
!9145 = !DILocation(line: 3786, column: 16, scope: !9140)
!9146 = !DILocation(line: 3786, column: 9, scope: !9140)
!9147 = !DILocation(line: 3789, column: 37, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3789, column: 9)
!9149 = !DILocation(line: 3789, column: 40, scope: !9148)
!9150 = !DILocation(line: 3789, column: 9, scope: !9148)
!9151 = !DILocation(line: 3789, column: 68, scope: !9148)
!9152 = !DILocation(line: 3790, column: 13, scope: !9148)
!9153 = !DILocation(line: 3790, column: 16, scope: !9148)
!9154 = !DILocation(line: 3789, column: 9, scope: !9105)
!9155 = !DILocation(line: 3791, column: 31, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 3790, column: 21)
!9157 = !DILocation(line: 3791, column: 34, scope: !9156)
!9158 = !DILocation(line: 3791, column: 16, scope: !9156)
!9159 = !DILocation(line: 3791, column: 9, scope: !9156)
!9160 = !DILocation(line: 3794, column: 10, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3794, column: 9)
!9162 = !DILocation(line: 3794, column: 20, scope: !9161)
!9163 = !DILocation(line: 3794, column: 9, scope: !9105)
!9164 = !DILocation(line: 3796, column: 9, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 3794, column: 28)
!9166 = !DILocation(line: 3802, column: 9, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3802, column: 9)
!9168 = !DILocation(line: 3802, column: 19, scope: !9167)
!9169 = !DILocation(line: 3802, column: 24, scope: !9167)
!9170 = !DILocation(line: 3802, column: 9, scope: !9105)
!9171 = !DILocation(line: 3803, column: 35, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 3802, column: 54)
!9173 = !DILocation(line: 3803, column: 16, scope: !9172)
!9174 = !DILocation(line: 3803, column: 9, scope: !9172)
!9175 = !DILocation(line: 3807, column: 10, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3807, column: 9)
!9177 = !DILocation(line: 3807, column: 20, scope: !9176)
!9178 = !DILocation(line: 3807, column: 9, scope: !9105)
!9179 = !DILocation(line: 3808, column: 35, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 3807, column: 31)
!9181 = !DILocation(line: 3808, column: 16, scope: !9180)
!9182 = !DILocation(line: 3808, column: 9, scope: !9180)
!9183 = !DILocation(line: 3812, column: 10, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3812, column: 9)
!9185 = !DILocation(line: 3812, column: 20, scope: !9184)
!9186 = !DILocation(line: 3812, column: 9, scope: !9105)
!9187 = !DILocation(line: 3813, column: 35, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 3812, column: 29)
!9189 = !DILocation(line: 3813, column: 16, scope: !9188)
!9190 = !DILocation(line: 3813, column: 9, scope: !9188)
!9191 = !DILocation(line: 3820, column: 18, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3820, column: 9)
!9193 = !DILocation(line: 3820, column: 29, scope: !9192)
!9194 = !{!4640, !2417, i64 48}
!9195 = !DILocation(line: 3820, column: 41, scope: !9192)
!9196 = !DILocation(line: 3820, column: 16, scope: !9192)
!9197 = !DILocation(line: 3820, column: 14, scope: !9192)
!9198 = !DILocation(line: 3820, column: 52, scope: !9192)
!9199 = !DILocation(line: 3820, column: 9, scope: !9105)
!9200 = !DILocation(line: 3821, column: 30, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 3820, column: 61)
!9202 = !DILocation(line: 3821, column: 33, scope: !9201)
!9203 = !DILocation(line: 3822, column: 43, scope: !9201)
!9204 = !DILocation(line: 3822, column: 46, scope: !9201)
!9205 = !DILocation(line: 3824, column: 43, scope: !9201)
!9206 = !DILocation(line: 3822, column: 30, scope: !9201)
!9207 = !DILocation(line: 3825, column: 30, scope: !9201)
!9208 = !DILocation(line: 3821, column: 15, scope: !9201)
!9209 = !DILocation(line: 3821, column: 13, scope: !9201)
!9210 = !DILocation(line: 3826, column: 31, scope: !9201)
!9211 = !DILocation(line: 3826, column: 34, scope: !9201)
!9212 = !DILocation(line: 3826, column: 16, scope: !9201)
!9213 = !DILocation(line: 3826, column: 9, scope: !9201)
!9214 = !DILocation(line: 3830, column: 27, scope: !9105)
!9215 = !DILocation(line: 3830, column: 5, scope: !9105)
!9216 = !DILocation(line: 3832, column: 5, scope: !9105)
!9217 = !DILocation(line: 3833, column: 1, scope: !9105)
!9218 = distinct !DISubprogram(name: "dav_method_checkin", scope: !3, file: !3, line: 3836, type: !4262, scopeLine: 3837, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9219)
!9219 = !{!9220, !9221, !9222, !9223, !9224, !9225, !9226, !9227}
!9220 = !DILocalVariable(name: "r", arg: 1, scope: !9218, file: !3, line: 3836, type: !286)
!9221 = !DILocalVariable(name: "resource", scope: !9218, file: !3, line: 3838, type: !776)
!9222 = !DILocalVariable(name: "new_version", scope: !9218, file: !3, line: 3839, type: !776)
!9223 = !DILocalVariable(name: "vsn_hooks", scope: !9218, file: !3, line: 3840, type: !1208)
!9224 = !DILocalVariable(name: "err", scope: !9218, file: !3, line: 3841, type: !272)
!9225 = !DILocalVariable(name: "result", scope: !9218, file: !3, line: 3842, type: !14)
!9226 = !DILocalVariable(name: "doc", scope: !9218, file: !3, line: 3843, type: !1280)
!9227 = !DILocalVariable(name: "keep_checked_out", scope: !9218, file: !3, line: 3844, type: !14)
!9228 = !DILocation(line: 3836, column: 44, scope: !9218)
!9229 = !DILocation(line: 3838, column: 5, scope: !9218)
!9230 = !DILocation(line: 3838, column: 19, scope: !9218)
!9231 = !DILocation(line: 3839, column: 5, scope: !9218)
!9232 = !DILocation(line: 3839, column: 19, scope: !9218)
!9233 = !DILocation(line: 3840, column: 5, scope: !9218)
!9234 = !DILocation(line: 3840, column: 26, scope: !9218)
!9235 = !DILocation(line: 3840, column: 38, scope: !9218)
!9236 = !DILocation(line: 3841, column: 5, scope: !9218)
!9237 = !DILocation(line: 3841, column: 16, scope: !9218)
!9238 = !DILocation(line: 3842, column: 5, scope: !9218)
!9239 = !DILocation(line: 3842, column: 9, scope: !9218)
!9240 = !DILocation(line: 3843, column: 5, scope: !9218)
!9241 = !DILocation(line: 3843, column: 18, scope: !9218)
!9242 = !DILocation(line: 3844, column: 5, scope: !9218)
!9243 = !DILocation(line: 3844, column: 9, scope: !9218)
!9244 = !DILocation(line: 3847, column: 9, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3847, column: 9)
!9246 = !DILocation(line: 3847, column: 19, scope: !9245)
!9247 = !DILocation(line: 3847, column: 9, scope: !9218)
!9248 = !DILocation(line: 3848, column: 9, scope: !9245)
!9249 = !DILocation(line: 3850, column: 38, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3850, column: 9)
!9251 = !DILocation(line: 3850, column: 19, scope: !9250)
!9252 = !DILocation(line: 3850, column: 17, scope: !9250)
!9253 = !DILocation(line: 3850, column: 48, scope: !9250)
!9254 = !DILocation(line: 3850, column: 9, scope: !9218)
!9255 = !DILocation(line: 3851, column: 16, scope: !9250)
!9256 = !DILocation(line: 3851, column: 9, scope: !9250)
!9257 = !DILocation(line: 3853, column: 9, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3853, column: 9)
!9259 = !DILocation(line: 3853, column: 13, scope: !9258)
!9260 = !DILocation(line: 3853, column: 9, scope: !9218)
!9261 = !DILocation(line: 3854, column: 32, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 3854, column: 13)
!9263 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 3853, column: 22)
!9264 = !DILocation(line: 3854, column: 14, scope: !9262)
!9265 = !DILocation(line: 3854, column: 13, scope: !9263)
!9266 = !DILocation(line: 3856, column: 13, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 3854, column: 49)
!9268 = !DILocation(line: 3856, column: 13, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 3856, column: 13)
!9270 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 3856, column: 13)
!9271 = !DILocation(line: 3856, column: 13, scope: !9270)
!9272 = !DILocation(line: 3859, column: 13, scope: !9267)
!9273 = !DILocation(line: 3862, column: 43, scope: !9263)
!9274 = !DILocation(line: 3862, column: 48, scope: !9263)
!9275 = !DILocation(line: 3862, column: 28, scope: !9263)
!9276 = !DILocation(line: 3862, column: 74, scope: !9263)
!9277 = !DILocation(line: 3862, column: 26, scope: !9263)
!9278 = !DILocation(line: 3863, column: 5, scope: !9263)
!9279 = !DILocation(line: 3866, column: 28, scope: !9218)
!9280 = !DILocation(line: 3866, column: 11, scope: !9218)
!9281 = !DILocation(line: 3866, column: 9, scope: !9218)
!9282 = !DILocation(line: 3868, column: 9, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3868, column: 9)
!9284 = !DILocation(line: 3868, column: 13, scope: !9283)
!9285 = !DILocation(line: 3868, column: 9, scope: !9218)
!9286 = !DILocation(line: 3869, column: 31, scope: !9283)
!9287 = !DILocation(line: 3869, column: 34, scope: !9283)
!9288 = !DILocation(line: 3869, column: 16, scope: !9283)
!9289 = !DILocation(line: 3869, column: 9, scope: !9283)
!9290 = !DILocation(line: 3872, column: 37, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3872, column: 9)
!9292 = !DILocation(line: 3872, column: 40, scope: !9291)
!9293 = !DILocation(line: 3872, column: 56, scope: !9291)
!9294 = !DILocation(line: 3872, column: 9, scope: !9291)
!9295 = !DILocation(line: 3872, column: 67, scope: !9291)
!9296 = !DILocation(line: 3873, column: 13, scope: !9291)
!9297 = !DILocation(line: 3873, column: 16, scope: !9291)
!9298 = !DILocation(line: 3872, column: 9, scope: !9218)
!9299 = !DILocation(line: 3874, column: 31, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 3873, column: 21)
!9301 = !DILocation(line: 3874, column: 34, scope: !9300)
!9302 = !DILocation(line: 3874, column: 16, scope: !9300)
!9303 = !DILocation(line: 3874, column: 9, scope: !9300)
!9304 = !DILocation(line: 3877, column: 10, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3877, column: 9)
!9306 = !DILocation(line: 3877, column: 20, scope: !9305)
!9307 = !DILocation(line: 3877, column: 9, scope: !9218)
!9308 = !DILocation(line: 3879, column: 9, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 3877, column: 28)
!9310 = !DILocation(line: 3885, column: 9, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3885, column: 9)
!9312 = !DILocation(line: 3885, column: 19, scope: !9311)
!9313 = !DILocation(line: 3885, column: 24, scope: !9311)
!9314 = !DILocation(line: 3885, column: 9, scope: !9218)
!9315 = !DILocation(line: 3886, column: 35, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 3885, column: 54)
!9317 = !DILocation(line: 3886, column: 16, scope: !9316)
!9318 = !DILocation(line: 3886, column: 9, scope: !9316)
!9319 = !DILocation(line: 3890, column: 10, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3890, column: 9)
!9321 = !DILocation(line: 3890, column: 20, scope: !9320)
!9322 = !DILocation(line: 3890, column: 9, scope: !9218)
!9323 = !DILocation(line: 3891, column: 35, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 3890, column: 31)
!9325 = !DILocation(line: 3891, column: 16, scope: !9324)
!9326 = !DILocation(line: 3891, column: 9, scope: !9324)
!9327 = !DILocation(line: 3895, column: 10, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3895, column: 9)
!9329 = !DILocation(line: 3895, column: 20, scope: !9328)
!9330 = !DILocation(line: 3895, column: 9, scope: !9218)
!9331 = !DILocation(line: 3896, column: 35, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 3895, column: 29)
!9333 = !DILocation(line: 3896, column: 16, scope: !9332)
!9334 = !DILocation(line: 3896, column: 9, scope: !9332)
!9335 = !DILocation(line: 3903, column: 18, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3903, column: 9)
!9337 = !DILocation(line: 3903, column: 29, scope: !9336)
!9338 = !{!4640, !2417, i64 56}
!9339 = !DILocation(line: 3903, column: 38, scope: !9336)
!9340 = !DILocation(line: 3903, column: 48, scope: !9336)
!9341 = !DILocation(line: 3903, column: 16, scope: !9336)
!9342 = !DILocation(line: 3903, column: 14, scope: !9336)
!9343 = !DILocation(line: 3904, column: 9, scope: !9336)
!9344 = !DILocation(line: 3903, column: 9, scope: !9218)
!9345 = !DILocation(line: 3905, column: 30, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 3904, column: 18)
!9347 = !DILocation(line: 3905, column: 33, scope: !9346)
!9348 = !DILocation(line: 3906, column: 43, scope: !9346)
!9349 = !DILocation(line: 3906, column: 46, scope: !9346)
!9350 = !DILocation(line: 3908, column: 43, scope: !9346)
!9351 = !DILocation(line: 3906, column: 30, scope: !9346)
!9352 = !DILocation(line: 3909, column: 30, scope: !9346)
!9353 = !DILocation(line: 3905, column: 15, scope: !9346)
!9354 = !DILocation(line: 3905, column: 13, scope: !9346)
!9355 = !DILocation(line: 3910, column: 31, scope: !9346)
!9356 = !DILocation(line: 3910, column: 34, scope: !9346)
!9357 = !DILocation(line: 3910, column: 16, scope: !9346)
!9358 = !DILocation(line: 3910, column: 9, scope: !9346)
!9359 = !DILocation(line: 3913, column: 24, scope: !9218)
!9360 = !DILocation(line: 3913, column: 27, scope: !9218)
!9361 = !DILocation(line: 3913, column: 40, scope: !9218)
!9362 = !DILocation(line: 3913, column: 12, scope: !9218)
!9363 = !DILocation(line: 3913, column: 5, scope: !9218)
!9364 = !DILocation(line: 3914, column: 1, scope: !9218)
!9365 = distinct !DISubprogram(name: "dav_method_update", scope: !3, file: !3, line: 3916, type: !4262, scopeLine: 3917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9366)
!9366 = !{!9367, !9368, !9369, !9370, !9371, !9372, !9373, !9374, !9375, !9376, !9377, !9378, !9379, !9380}
!9367 = !DILocalVariable(name: "r", arg: 1, scope: !9365, file: !3, line: 3916, type: !286)
!9368 = !DILocalVariable(name: "resource", scope: !9365, file: !3, line: 3918, type: !776)
!9369 = !DILocalVariable(name: "version", scope: !9365, file: !3, line: 3919, type: !776)
!9370 = !DILocalVariable(name: "vsn_hooks", scope: !9365, file: !3, line: 3920, type: !1208)
!9371 = !DILocalVariable(name: "doc", scope: !9365, file: !3, line: 3921, type: !1280)
!9372 = !DILocalVariable(name: "child", scope: !9365, file: !3, line: 3922, type: !226)
!9373 = !DILocalVariable(name: "is_label", scope: !9365, file: !3, line: 3923, type: !14)
!9374 = !DILocalVariable(name: "depth", scope: !9365, file: !3, line: 3924, type: !14)
!9375 = !DILocalVariable(name: "result", scope: !9365, file: !3, line: 3925, type: !14)
!9376 = !DILocalVariable(name: "tsize", scope: !9365, file: !3, line: 3926, type: !43)
!9377 = !DILocalVariable(name: "target", scope: !9365, file: !3, line: 3927, type: !10)
!9378 = !DILocalVariable(name: "multi_response", scope: !9365, file: !3, line: 3928, type: !826)
!9379 = !DILocalVariable(name: "err", scope: !9365, file: !3, line: 3929, type: !272)
!9380 = !DILocalVariable(name: "lookup", scope: !9365, file: !3, line: 3930, type: !7239)
!9381 = !DILocation(line: 3916, column: 43, scope: !9365)
!9382 = !DILocation(line: 3918, column: 5, scope: !9365)
!9383 = !DILocation(line: 3918, column: 19, scope: !9365)
!9384 = !DILocation(line: 3919, column: 5, scope: !9365)
!9385 = !DILocation(line: 3919, column: 19, scope: !9365)
!9386 = !DILocation(line: 3920, column: 5, scope: !9365)
!9387 = !DILocation(line: 3920, column: 26, scope: !9365)
!9388 = !DILocation(line: 3920, column: 38, scope: !9365)
!9389 = !DILocation(line: 3921, column: 5, scope: !9365)
!9390 = !DILocation(line: 3921, column: 18, scope: !9365)
!9391 = !DILocation(line: 3922, column: 5, scope: !9365)
!9392 = !DILocation(line: 3922, column: 19, scope: !9365)
!9393 = !DILocation(line: 3923, column: 5, scope: !9365)
!9394 = !DILocation(line: 3923, column: 9, scope: !9365)
!9395 = !DILocation(line: 3924, column: 5, scope: !9365)
!9396 = !DILocation(line: 3924, column: 9, scope: !9365)
!9397 = !DILocation(line: 3925, column: 5, scope: !9365)
!9398 = !DILocation(line: 3925, column: 9, scope: !9365)
!9399 = !DILocation(line: 3926, column: 5, scope: !9365)
!9400 = !DILocation(line: 3926, column: 16, scope: !9365)
!9401 = !DILocation(line: 3927, column: 5, scope: !9365)
!9402 = !DILocation(line: 3927, column: 17, scope: !9365)
!9403 = !DILocation(line: 3928, column: 5, scope: !9365)
!9404 = !DILocation(line: 3928, column: 19, scope: !9365)
!9405 = !DILocation(line: 3929, column: 5, scope: !9365)
!9406 = !DILocation(line: 3929, column: 16, scope: !9365)
!9407 = !DILocation(line: 3930, column: 5, scope: !9365)
!9408 = !DILocation(line: 3930, column: 23, scope: !9365)
!9409 = !DILocation(line: 3934, column: 9, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3934, column: 9)
!9411 = !DILocation(line: 3934, column: 19, scope: !9410)
!9412 = !DILocation(line: 3934, column: 27, scope: !9410)
!9413 = !DILocation(line: 3934, column: 30, scope: !9410)
!9414 = !DILocation(line: 3934, column: 41, scope: !9410)
!9415 = !{!4640, !2417, i64 88}
!9416 = !DILocation(line: 3934, column: 48, scope: !9410)
!9417 = !DILocation(line: 3934, column: 9, scope: !9365)
!9418 = !DILocation(line: 3935, column: 9, scope: !9410)
!9419 = !DILocation(line: 3937, column: 32, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3937, column: 9)
!9421 = !DILocation(line: 3937, column: 18, scope: !9420)
!9422 = !DILocation(line: 3937, column: 16, scope: !9420)
!9423 = !DILocation(line: 3937, column: 39, scope: !9420)
!9424 = !DILocation(line: 3937, column: 9, scope: !9365)
!9425 = !DILocation(line: 3940, column: 9, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 3937, column: 44)
!9427 = !DILocation(line: 3944, column: 38, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3944, column: 9)
!9429 = !DILocation(line: 3944, column: 19, scope: !9428)
!9430 = !DILocation(line: 3944, column: 17, scope: !9428)
!9431 = !DILocation(line: 3944, column: 48, scope: !9428)
!9432 = !DILocation(line: 3944, column: 9, scope: !9365)
!9433 = !DILocation(line: 3945, column: 16, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 3944, column: 55)
!9435 = !DILocation(line: 3945, column: 9, scope: !9434)
!9436 = !DILocation(line: 3948, column: 9, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3948, column: 9)
!9438 = !DILocation(line: 3948, column: 13, scope: !9437)
!9439 = !DILocation(line: 3948, column: 21, scope: !9437)
!9440 = !DILocation(line: 3948, column: 43, scope: !9437)
!9441 = !DILocation(line: 3948, column: 25, scope: !9437)
!9442 = !DILocation(line: 3948, column: 9, scope: !9365)
!9443 = !DILocation(line: 3950, column: 9, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 3948, column: 59)
!9445 = !DILocation(line: 3950, column: 9, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 3950, column: 9)
!9447 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 3950, column: 9)
!9448 = !DILocation(line: 3950, column: 9, scope: !9447)
!9449 = !DILocation(line: 3953, column: 9, scope: !9444)
!9450 = !DILocation(line: 3957, column: 33, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3957, column: 9)
!9452 = !DILocation(line: 3957, column: 38, scope: !9451)
!9453 = !DILocation(line: 3957, column: 18, scope: !9451)
!9454 = !DILocation(line: 3957, column: 16, scope: !9451)
!9455 = !DILocation(line: 3957, column: 59, scope: !9451)
!9456 = !DILocation(line: 3957, column: 9, scope: !9365)
!9457 = !DILocation(line: 3958, column: 18, scope: !9451)
!9458 = !DILocation(line: 3958, column: 9, scope: !9451)
!9459 = !DILocation(line: 3959, column: 38, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 3959, column: 14)
!9461 = !DILocation(line: 3959, column: 43, scope: !9460)
!9462 = !DILocation(line: 3959, column: 23, scope: !9460)
!9463 = !DILocation(line: 3959, column: 21, scope: !9460)
!9464 = !DILocation(line: 3959, column: 61, scope: !9460)
!9465 = !DILocation(line: 3959, column: 14, scope: !9451)
!9466 = !DILocation(line: 3961, column: 37, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3961, column: 13)
!9468 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 3959, column: 70)
!9469 = !DILocation(line: 3961, column: 22, scope: !9467)
!9470 = !DILocation(line: 3961, column: 20, scope: !9467)
!9471 = !DILocation(line: 3961, column: 53, scope: !9467)
!9472 = !DILocation(line: 3961, column: 13, scope: !9468)
!9473 = !DILocation(line: 3962, column: 13, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 3961, column: 62)
!9475 = !DILocation(line: 3962, column: 13, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 3962, column: 13)
!9477 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 3962, column: 13)
!9478 = !DILocation(line: 3962, column: 13, scope: !9477)
!9479 = !DILocation(line: 3965, column: 13, scope: !9474)
!9480 = !DILocation(line: 3967, column: 5, scope: !9468)
!9481 = !DILocation(line: 3969, column: 9, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 3968, column: 10)
!9483 = !DILocation(line: 3969, column: 9, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 3969, column: 9)
!9485 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 3969, column: 9)
!9486 = !DILocation(line: 3969, column: 9, scope: !9485)
!9487 = !DILocation(line: 3972, column: 9, scope: !9482)
!9488 = !DILocation(line: 3976, column: 10, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3976, column: 9)
!9490 = !DILocation(line: 3976, column: 19, scope: !9489)
!9491 = !DILocation(line: 3976, column: 22, scope: !9489)
!9492 = !DILocation(line: 3976, column: 28, scope: !9489)
!9493 = !DILocation(line: 3976, column: 9, scope: !9365)
!9494 = !DILocation(line: 3977, column: 9, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 3976, column: 34)
!9496 = !DILocation(line: 3977, column: 9, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 3977, column: 9)
!9498 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 3977, column: 9)
!9499 = !DILocation(line: 3977, column: 9, scope: !9498)
!9500 = !DILocation(line: 3979, column: 9, scope: !9495)
!9501 = !DILocation(line: 3983, column: 21, scope: !9365)
!9502 = !DILocation(line: 3983, column: 24, scope: !9365)
!9503 = !DILocation(line: 3983, column: 30, scope: !9365)
!9504 = !DILocation(line: 3983, column: 5, scope: !9365)
!9505 = !DILocation(line: 3985, column: 9, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3985, column: 9)
!9507 = !DILocation(line: 3985, column: 15, scope: !9506)
!9508 = !DILocation(line: 3985, column: 9, scope: !9365)
!9509 = !DILocation(line: 3986, column: 9, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9506, file: !3, line: 3985, column: 21)
!9511 = !DILocation(line: 3986, column: 9, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 3986, column: 9)
!9513 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 3986, column: 9)
!9514 = !DILocation(line: 3986, column: 9, scope: !9513)
!9515 = !DILocation(line: 3989, column: 9, scope: !9510)
!9516 = !DILocation(line: 3993, column: 28, scope: !9365)
!9517 = !DILocation(line: 3993, column: 11, scope: !9365)
!9518 = !DILocation(line: 3993, column: 9, scope: !9365)
!9519 = !DILocation(line: 3995, column: 9, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3995, column: 9)
!9521 = !DILocation(line: 3995, column: 13, scope: !9520)
!9522 = !DILocation(line: 3995, column: 9, scope: !9365)
!9523 = !DILocation(line: 3996, column: 31, scope: !9520)
!9524 = !DILocation(line: 3996, column: 34, scope: !9520)
!9525 = !DILocation(line: 3996, column: 16, scope: !9520)
!9526 = !DILocation(line: 3996, column: 9, scope: !9520)
!9527 = !DILocation(line: 3999, column: 37, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3999, column: 9)
!9529 = !DILocation(line: 3999, column: 40, scope: !9528)
!9530 = !DILocation(line: 3999, column: 56, scope: !9528)
!9531 = !DILocation(line: 3999, column: 9, scope: !9528)
!9532 = !DILocation(line: 3999, column: 67, scope: !9528)
!9533 = !DILocation(line: 4000, column: 13, scope: !9528)
!9534 = !DILocation(line: 4000, column: 16, scope: !9528)
!9535 = !DILocation(line: 3999, column: 9, scope: !9365)
!9536 = !DILocation(line: 4001, column: 31, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 4000, column: 21)
!9538 = !DILocation(line: 4001, column: 34, scope: !9537)
!9539 = !DILocation(line: 4001, column: 16, scope: !9537)
!9540 = !DILocation(line: 4001, column: 9, scope: !9537)
!9541 = !DILocation(line: 4004, column: 10, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 4004, column: 9)
!9543 = !DILocation(line: 4004, column: 20, scope: !9542)
!9544 = !DILocation(line: 4004, column: 9, scope: !9365)
!9545 = !DILocation(line: 4006, column: 9, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9542, file: !3, line: 4004, column: 28)
!9547 = !DILocation(line: 4012, column: 9, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 4012, column: 9)
!9549 = !DILocation(line: 4012, column: 19, scope: !9548)
!9550 = !DILocation(line: 4012, column: 24, scope: !9548)
!9551 = !DILocation(line: 4013, column: 9, scope: !9548)
!9552 = !DILocation(line: 4013, column: 13, scope: !9548)
!9553 = !DILocation(line: 4013, column: 23, scope: !9548)
!9554 = !DILocation(line: 4013, column: 33, scope: !9548)
!9555 = !DILocation(line: 4013, column: 36, scope: !9548)
!9556 = !DILocation(line: 4013, column: 46, scope: !9548)
!9557 = !DILocation(line: 4012, column: 9, scope: !9365)
!9558 = !DILocation(line: 4014, column: 35, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 4013, column: 55)
!9560 = !DILocation(line: 4014, column: 16, scope: !9559)
!9561 = !DILocation(line: 4014, column: 9, scope: !9559)
!9562 = !DILocation(line: 4020, column: 10, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 4020, column: 9)
!9564 = !DILocation(line: 4020, column: 9, scope: !9365)
!9565 = !DILocation(line: 4021, column: 18, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 4020, column: 20)
!9567 = !DILocation(line: 4021, column: 33, scope: !9566)
!9568 = !DILocation(line: 4021, column: 41, scope: !9566)
!9569 = !DILocation(line: 4022, column: 20, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 4022, column: 13)
!9571 = !DILocation(line: 4022, column: 25, scope: !9570)
!9572 = !DILocation(line: 4022, column: 13, scope: !9566)
!9573 = !DILocation(line: 4023, column: 24, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 4023, column: 17)
!9575 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 4022, column: 34)
!9576 = !DILocation(line: 4023, column: 28, scope: !9574)
!9577 = !DILocation(line: 4023, column: 35, scope: !9574)
!9578 = !DILocation(line: 4023, column: 17, scope: !9575)
!9579 = !DILocation(line: 4025, column: 17, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 4023, column: 56)
!9581 = !DILocation(line: 4025, column: 17, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 4025, column: 17)
!9583 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 4025, column: 17)
!9584 = !DILocation(line: 4025, column: 17, scope: !9583)
!9585 = !DILocation(line: 4027, column: 17, scope: !9580)
!9586 = !DILocation(line: 4033, column: 39, scope: !9575)
!9587 = !DILocation(line: 4033, column: 49, scope: !9575)
!9588 = !DILocation(line: 4033, column: 53, scope: !9575)
!9589 = !DILocation(line: 4033, column: 68, scope: !9575)
!9590 = !DILocation(line: 4033, column: 72, scope: !9575)
!9591 = !DILocation(line: 4033, column: 20, scope: !9575)
!9592 = !DILocation(line: 4033, column: 13, scope: !9575)
!9593 = !DILocation(line: 4035, column: 20, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 4035, column: 13)
!9595 = !DILocation(line: 4035, column: 26, scope: !9594)
!9596 = !DILocation(line: 4035, column: 33, scope: !9594)
!9597 = !DILocation(line: 4035, column: 13, scope: !9566)
!9598 = !DILocation(line: 4037, column: 39, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 4035, column: 45)
!9600 = !DILocation(line: 4037, column: 49, scope: !9599)
!9601 = !DILocation(line: 4037, column: 55, scope: !9599)
!9602 = !DILocation(line: 4037, column: 20, scope: !9599)
!9603 = !DILocation(line: 4037, column: 13, scope: !9599)
!9604 = !DILocation(line: 4042, column: 39, scope: !9566)
!9605 = !DILocation(line: 4042, column: 15, scope: !9566)
!9606 = !DILocation(line: 4042, column: 13, scope: !9566)
!9607 = !DILocation(line: 4044, column: 13, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 4044, column: 13)
!9609 = !DILocation(line: 4044, column: 17, scope: !9608)
!9610 = !DILocation(line: 4044, column: 13, scope: !9566)
!9611 = !DILocation(line: 4045, column: 35, scope: !9608)
!9612 = !DILocation(line: 4045, column: 38, scope: !9608)
!9613 = !DILocation(line: 4045, column: 20, scope: !9608)
!9614 = !DILocation(line: 4045, column: 13, scope: !9608)
!9615 = !DILocation(line: 4048, column: 16, scope: !9566)
!9616 = !DILocation(line: 4049, column: 5, scope: !9566)
!9617 = !DILocation(line: 4052, column: 13, scope: !9365)
!9618 = !DILocation(line: 4052, column: 24, scope: !9365)
!9619 = !DILocation(line: 4052, column: 32, scope: !9365)
!9620 = !DILocation(line: 4052, column: 42, scope: !9365)
!9621 = !DILocation(line: 4052, column: 51, scope: !9365)
!9622 = !DILocation(line: 4052, column: 59, scope: !9365)
!9623 = !DILocation(line: 4052, column: 11, scope: !9365)
!9624 = !DILocation(line: 4052, column: 9, scope: !9365)
!9625 = !DILocation(line: 4054, column: 9, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 4054, column: 9)
!9627 = !DILocation(line: 4054, column: 13, scope: !9626)
!9628 = !DILocation(line: 4054, column: 9, scope: !9365)
!9629 = !DILocation(line: 4055, column: 30, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 4054, column: 22)
!9631 = !DILocation(line: 4055, column: 33, scope: !9630)
!9632 = !DILocation(line: 4055, column: 39, scope: !9630)
!9633 = !DILocation(line: 4055, column: 44, scope: !9630)
!9634 = !DILocation(line: 4056, column: 43, scope: !9630)
!9635 = !DILocation(line: 4056, column: 46, scope: !9630)
!9636 = !DILocation(line: 4058, column: 43, scope: !9630)
!9637 = !DILocation(line: 4056, column: 30, scope: !9630)
!9638 = !DILocation(line: 4059, column: 30, scope: !9630)
!9639 = !DILocation(line: 4055, column: 15, scope: !9630)
!9640 = !DILocation(line: 4055, column: 13, scope: !9630)
!9641 = !DILocation(line: 4060, column: 31, scope: !9630)
!9642 = !DILocation(line: 4060, column: 34, scope: !9630)
!9643 = !DILocation(line: 4060, column: 39, scope: !9630)
!9644 = !DILocation(line: 4060, column: 16, scope: !9630)
!9645 = !DILocation(line: 4060, column: 9, scope: !9630)
!9646 = !DILocation(line: 4064, column: 20, scope: !9365)
!9647 = !DILocation(line: 4064, column: 23, scope: !9365)
!9648 = !DILocation(line: 4064, column: 5, scope: !9365)
!9649 = !DILocation(line: 4067, column: 27, scope: !9365)
!9650 = !DILocation(line: 4067, column: 5, scope: !9365)
!9651 = !DILocation(line: 4069, column: 5, scope: !9365)
!9652 = !DILocation(line: 4070, column: 1, scope: !9365)
!9653 = distinct !DISubprogram(name: "dav_method_label", scope: !3, file: !3, line: 4140, type: !4262, scopeLine: 4141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9654)
!9654 = !{!9655, !9656, !9657, !9658, !9659, !9660, !9661, !9662, !9663, !9664, !9673}
!9655 = !DILocalVariable(name: "r", arg: 1, scope: !9653, file: !3, line: 4140, type: !286)
!9656 = !DILocalVariable(name: "resource", scope: !9653, file: !3, line: 4142, type: !776)
!9657 = !DILocalVariable(name: "vsn_hooks", scope: !9653, file: !3, line: 4143, type: !1208)
!9658 = !DILocalVariable(name: "doc", scope: !9653, file: !3, line: 4144, type: !1280)
!9659 = !DILocalVariable(name: "child", scope: !9653, file: !3, line: 4145, type: !226)
!9660 = !DILocalVariable(name: "depth", scope: !9653, file: !3, line: 4146, type: !14)
!9661 = !DILocalVariable(name: "result", scope: !9653, file: !3, line: 4147, type: !14)
!9662 = !DILocalVariable(name: "tsize", scope: !9653, file: !3, line: 4148, type: !43)
!9663 = !DILocalVariable(name: "err", scope: !9653, file: !3, line: 4149, type: !272)
!9664 = !DILocalVariable(name: "ctx", scope: !9653, file: !3, line: 4150, type: !9665)
!9665 = !DIDerivedType(tag: DW_TAG_typedef, name: "dav_label_walker_ctx", file: !3, line: 4093, baseType: !9666)
!9666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dav_label_walker_ctx", file: !3, line: 4073, size: 640, elements: !9667)
!9667 = !{!9668, !9669, !9670, !9671, !9672}
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !9666, file: !3, line: 4076, baseType: !855, size: 384)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !9666, file: !3, line: 4079, baseType: !286, size: 64, offset: 384)
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !9666, file: !3, line: 4082, baseType: !10, size: 64, offset: 448)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "label_op", scope: !9666, file: !3, line: 4085, baseType: !14, size: 32, offset: 512)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "vsn_hooks", scope: !9666, file: !3, line: 4091, baseType: !1208, size: 64, offset: 576)
!9673 = !DILocalVariable(name: "multi_status", scope: !9653, file: !3, line: 4151, type: !826)
!9674 = !DILocation(line: 4140, column: 42, scope: !9653)
!9675 = !DILocation(line: 4142, column: 5, scope: !9653)
!9676 = !DILocation(line: 4142, column: 19, scope: !9653)
!9677 = !DILocation(line: 4143, column: 5, scope: !9653)
!9678 = !DILocation(line: 4143, column: 26, scope: !9653)
!9679 = !DILocation(line: 4143, column: 38, scope: !9653)
!9680 = !DILocation(line: 4144, column: 5, scope: !9653)
!9681 = !DILocation(line: 4144, column: 18, scope: !9653)
!9682 = !DILocation(line: 4145, column: 5, scope: !9653)
!9683 = !DILocation(line: 4145, column: 19, scope: !9653)
!9684 = !DILocation(line: 4146, column: 5, scope: !9653)
!9685 = !DILocation(line: 4146, column: 9, scope: !9653)
!9686 = !DILocation(line: 4147, column: 5, scope: !9653)
!9687 = !DILocation(line: 4147, column: 9, scope: !9653)
!9688 = !DILocation(line: 4148, column: 5, scope: !9653)
!9689 = !DILocation(line: 4148, column: 16, scope: !9653)
!9690 = !DILocation(line: 4149, column: 5, scope: !9653)
!9691 = !DILocation(line: 4149, column: 16, scope: !9653)
!9692 = !DILocation(line: 4150, column: 5, scope: !9653)
!9693 = !DILocation(line: 4150, column: 26, scope: !9653)
!9694 = !DILocation(line: 4151, column: 5, scope: !9653)
!9695 = !DILocation(line: 4151, column: 19, scope: !9653)
!9696 = !DILocation(line: 4155, column: 9, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4155, column: 9)
!9698 = !DILocation(line: 4155, column: 19, scope: !9697)
!9699 = !DILocation(line: 4155, column: 27, scope: !9697)
!9700 = !DILocation(line: 4155, column: 30, scope: !9697)
!9701 = !DILocation(line: 4155, column: 41, scope: !9697)
!9702 = !DILocation(line: 4155, column: 51, scope: !9697)
!9703 = !DILocation(line: 4155, column: 9, scope: !9653)
!9704 = !DILocation(line: 4156, column: 9, scope: !9697)
!9705 = !DILocation(line: 4159, column: 38, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4159, column: 9)
!9707 = !DILocation(line: 4159, column: 19, scope: !9706)
!9708 = !DILocation(line: 4159, column: 17, scope: !9706)
!9709 = !DILocation(line: 4159, column: 48, scope: !9706)
!9710 = !DILocation(line: 4159, column: 9, scope: !9653)
!9711 = !DILocation(line: 4160, column: 16, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 4159, column: 55)
!9713 = !DILocation(line: 4160, column: 9, scope: !9712)
!9714 = !DILocation(line: 4164, column: 28, scope: !9653)
!9715 = !DILocation(line: 4164, column: 11, scope: !9653)
!9716 = !DILocation(line: 4164, column: 9, scope: !9653)
!9717 = !DILocation(line: 4166, column: 9, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4166, column: 9)
!9719 = !DILocation(line: 4166, column: 13, scope: !9718)
!9720 = !DILocation(line: 4166, column: 9, scope: !9653)
!9721 = !DILocation(line: 4167, column: 31, scope: !9718)
!9722 = !DILocation(line: 4167, column: 34, scope: !9718)
!9723 = !DILocation(line: 4167, column: 16, scope: !9718)
!9724 = !DILocation(line: 4167, column: 9, scope: !9718)
!9725 = !DILocation(line: 4170, column: 37, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4170, column: 9)
!9727 = !DILocation(line: 4170, column: 40, scope: !9726)
!9728 = !DILocation(line: 4170, column: 56, scope: !9726)
!9729 = !DILocation(line: 4170, column: 9, scope: !9726)
!9730 = !DILocation(line: 4170, column: 67, scope: !9726)
!9731 = !DILocation(line: 4171, column: 13, scope: !9726)
!9732 = !DILocation(line: 4171, column: 16, scope: !9726)
!9733 = !DILocation(line: 4170, column: 9, scope: !9653)
!9734 = !DILocation(line: 4172, column: 31, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 4171, column: 21)
!9736 = !DILocation(line: 4172, column: 34, scope: !9735)
!9737 = !DILocation(line: 4172, column: 16, scope: !9735)
!9738 = !DILocation(line: 4172, column: 9, scope: !9735)
!9739 = !DILocation(line: 4175, column: 10, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4175, column: 9)
!9741 = !DILocation(line: 4175, column: 20, scope: !9740)
!9742 = !DILocation(line: 4175, column: 9, scope: !9653)
!9743 = !DILocation(line: 4177, column: 9, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 4175, column: 28)
!9745 = !DILocation(line: 4180, column: 32, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4180, column: 9)
!9747 = !DILocation(line: 4180, column: 18, scope: !9746)
!9748 = !DILocation(line: 4180, column: 16, scope: !9746)
!9749 = !DILocation(line: 4180, column: 39, scope: !9746)
!9750 = !DILocation(line: 4180, column: 9, scope: !9653)
!9751 = !DILocation(line: 4183, column: 9, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 4180, column: 44)
!9753 = !DILocation(line: 4186, column: 9, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4186, column: 9)
!9755 = !DILocation(line: 4186, column: 13, scope: !9754)
!9756 = !DILocation(line: 4186, column: 21, scope: !9754)
!9757 = !DILocation(line: 4186, column: 43, scope: !9754)
!9758 = !DILocation(line: 4186, column: 25, scope: !9754)
!9759 = !DILocation(line: 4186, column: 9, scope: !9653)
!9760 = !DILocation(line: 4188, column: 9, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 4186, column: 58)
!9762 = !DILocation(line: 4188, column: 9, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 4188, column: 9)
!9764 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 4188, column: 9)
!9765 = !DILocation(line: 4188, column: 9, scope: !9764)
!9766 = !DILocation(line: 4191, column: 9, scope: !9761)
!9767 = !DILocation(line: 4195, column: 33, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4195, column: 9)
!9769 = !DILocation(line: 4195, column: 38, scope: !9768)
!9770 = !DILocation(line: 4195, column: 18, scope: !9768)
!9771 = !DILocation(line: 4195, column: 16, scope: !9768)
!9772 = !DILocation(line: 4195, column: 52, scope: !9768)
!9773 = !DILocation(line: 4195, column: 9, scope: !9653)
!9774 = !DILocation(line: 4196, column: 13, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 4195, column: 61)
!9776 = !DILocation(line: 4196, column: 22, scope: !9775)
!9777 = !{!9778, !2426, i64 64}
!9778 = !{!"dav_label_walker_ctx", !6558, i64 0, !2417, i64 48, !2417, i64 56, !2426, i64 64, !2417, i64 72}
!9779 = !DILocation(line: 4197, column: 5, scope: !9775)
!9780 = !DILocation(line: 4198, column: 38, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 4198, column: 14)
!9782 = !DILocation(line: 4198, column: 43, scope: !9781)
!9783 = !DILocation(line: 4198, column: 23, scope: !9781)
!9784 = !DILocation(line: 4198, column: 21, scope: !9781)
!9785 = !DILocation(line: 4198, column: 57, scope: !9781)
!9786 = !DILocation(line: 4198, column: 14, scope: !9768)
!9787 = !DILocation(line: 4199, column: 13, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 4198, column: 66)
!9789 = !DILocation(line: 4199, column: 22, scope: !9788)
!9790 = !DILocation(line: 4200, column: 5, scope: !9788)
!9791 = !DILocation(line: 4201, column: 38, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 4201, column: 14)
!9793 = !DILocation(line: 4201, column: 43, scope: !9792)
!9794 = !DILocation(line: 4201, column: 23, scope: !9792)
!9795 = !DILocation(line: 4201, column: 21, scope: !9792)
!9796 = !DILocation(line: 4201, column: 60, scope: !9792)
!9797 = !DILocation(line: 4201, column: 14, scope: !9781)
!9798 = !DILocation(line: 4202, column: 13, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 4201, column: 69)
!9800 = !DILocation(line: 4202, column: 22, scope: !9799)
!9801 = !DILocation(line: 4203, column: 5, scope: !9799)
!9802 = !DILocation(line: 4205, column: 9, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 4204, column: 10)
!9804 = !DILocation(line: 4205, column: 9, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 4205, column: 9)
!9806 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 4205, column: 9)
!9807 = !DILocation(line: 4205, column: 9, scope: !9806)
!9808 = !DILocation(line: 4208, column: 9, scope: !9803)
!9809 = !DILocation(line: 4212, column: 33, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4212, column: 9)
!9811 = !DILocation(line: 4212, column: 18, scope: !9810)
!9812 = !DILocation(line: 4212, column: 16, scope: !9810)
!9813 = !DILocation(line: 4212, column: 55, scope: !9810)
!9814 = !DILocation(line: 4212, column: 9, scope: !9653)
!9815 = !DILocation(line: 4213, column: 9, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 4212, column: 64)
!9817 = !DILocation(line: 4213, column: 9, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 4213, column: 9)
!9819 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 4213, column: 9)
!9820 = !DILocation(line: 4213, column: 9, scope: !9819)
!9821 = !DILocation(line: 4216, column: 9, scope: !9816)
!9822 = !DILocation(line: 4219, column: 21, scope: !9653)
!9823 = !DILocation(line: 4219, column: 24, scope: !9653)
!9824 = !DILocation(line: 4219, column: 30, scope: !9653)
!9825 = !DILocation(line: 4220, column: 26, scope: !9653)
!9826 = !DILocation(line: 4219, column: 5, scope: !9653)
!9827 = !DILocation(line: 4221, column: 9, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4221, column: 9)
!9829 = !DILocation(line: 4221, column: 15, scope: !9828)
!9830 = !DILocation(line: 4221, column: 9, scope: !9653)
!9831 = !DILocation(line: 4222, column: 9, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 4221, column: 21)
!9833 = !DILocation(line: 4222, column: 9, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 4222, column: 9)
!9835 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 4222, column: 9)
!9836 = !DILocation(line: 4222, column: 9, scope: !9835)
!9837 = !DILocation(line: 4225, column: 9, scope: !9832)
!9838 = !DILocation(line: 4229, column: 9, scope: !9653)
!9839 = !DILocation(line: 4229, column: 11, scope: !9653)
!9840 = !DILocation(line: 4229, column: 21, scope: !9653)
!9841 = !{!9778, !2426, i64 0}
!9842 = !DILocation(line: 4230, column: 9, scope: !9653)
!9843 = !DILocation(line: 4230, column: 11, scope: !9653)
!9844 = !DILocation(line: 4230, column: 16, scope: !9653)
!9845 = !{!9778, !2417, i64 8}
!9846 = !DILocation(line: 4231, column: 9, scope: !9653)
!9847 = !DILocation(line: 4231, column: 11, scope: !9653)
!9848 = !DILocation(line: 4231, column: 20, scope: !9653)
!9849 = !{!9778, !2417, i64 16}
!9850 = !DILocation(line: 4232, column: 18, scope: !9653)
!9851 = !DILocation(line: 4232, column: 21, scope: !9653)
!9852 = !DILocation(line: 4232, column: 9, scope: !9653)
!9853 = !DILocation(line: 4232, column: 11, scope: !9653)
!9854 = !DILocation(line: 4232, column: 16, scope: !9653)
!9855 = !{!9778, !2417, i64 24}
!9856 = !DILocation(line: 4233, column: 18, scope: !9653)
!9857 = !DILocation(line: 4233, column: 9, scope: !9653)
!9858 = !DILocation(line: 4233, column: 11, scope: !9653)
!9859 = !DILocation(line: 4233, column: 16, scope: !9653)
!9860 = !{!9778, !2417, i64 32}
!9861 = !DILocation(line: 4234, column: 13, scope: !9653)
!9862 = !DILocation(line: 4234, column: 9, scope: !9653)
!9863 = !DILocation(line: 4234, column: 11, scope: !9653)
!9864 = !{!9778, !2417, i64 48}
!9865 = !DILocation(line: 4235, column: 21, scope: !9653)
!9866 = !DILocation(line: 4235, column: 9, scope: !9653)
!9867 = !DILocation(line: 4235, column: 19, scope: !9653)
!9868 = !{!9778, !2417, i64 72}
!9869 = !DILocation(line: 4237, column: 13, scope: !9653)
!9870 = !DILocation(line: 4237, column: 23, scope: !9653)
!9871 = !DILocation(line: 4237, column: 30, scope: !9653)
!9872 = !DILocation(line: 4237, column: 41, scope: !9653)
!9873 = !DILocation(line: 4237, column: 44, scope: !9653)
!9874 = !DILocation(line: 4237, column: 11, scope: !9653)
!9875 = !DILocation(line: 4237, column: 9, scope: !9653)
!9876 = !DILocation(line: 4239, column: 9, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4239, column: 9)
!9878 = !DILocation(line: 4239, column: 13, scope: !9877)
!9879 = !DILocation(line: 4239, column: 9, scope: !9653)
!9880 = !DILocation(line: 4241, column: 30, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 4239, column: 22)
!9882 = !DILocation(line: 4241, column: 33, scope: !9881)
!9883 = !DILocation(line: 4241, column: 39, scope: !9881)
!9884 = !DILocation(line: 4241, column: 44, scope: !9881)
!9885 = !DILocation(line: 4243, column: 30, scope: !9881)
!9886 = !DILocation(line: 4241, column: 15, scope: !9881)
!9887 = !DILocation(line: 4241, column: 13, scope: !9881)
!9888 = !DILocation(line: 4244, column: 31, scope: !9881)
!9889 = !DILocation(line: 4244, column: 34, scope: !9881)
!9890 = !DILocation(line: 4244, column: 39, scope: !9881)
!9891 = !DILocation(line: 4244, column: 16, scope: !9881)
!9892 = !DILocation(line: 4244, column: 9, scope: !9881)
!9893 = !DILocation(line: 4247, column: 9, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 4247, column: 9)
!9895 = !DILocation(line: 4247, column: 22, scope: !9894)
!9896 = !DILocation(line: 4247, column: 9, scope: !9653)
!9897 = !DILocation(line: 4252, column: 13, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 4252, column: 13)
!9899 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 4247, column: 31)
!9900 = !DILocation(line: 4252, column: 19, scope: !9898)
!9901 = !DILocation(line: 4252, column: 13, scope: !9899)
!9902 = !DILocation(line: 4253, column: 33, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 4252, column: 25)
!9904 = !DILocation(line: 4253, column: 36, scope: !9903)
!9905 = !DILocation(line: 4253, column: 42, scope: !9903)
!9906 = !DILocation(line: 4253, column: 56, scope: !9903)
!9907 = !DILocation(line: 4254, column: 33, scope: !9903)
!9908 = !DILocation(line: 4254, column: 47, scope: !9903)
!9909 = !DILocation(line: 4253, column: 19, scope: !9903)
!9910 = !DILocation(line: 4253, column: 17, scope: !9903)
!9911 = !DILocation(line: 4255, column: 26, scope: !9903)
!9912 = !DILocation(line: 4256, column: 9, scope: !9903)
!9913 = !DILocation(line: 4258, column: 33, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 4257, column: 14)
!9915 = !DILocation(line: 4258, column: 36, scope: !9914)
!9916 = !DILocation(line: 4258, column: 19, scope: !9914)
!9917 = !DILocation(line: 4258, column: 17, scope: !9914)
!9918 = !DILocation(line: 4262, column: 31, scope: !9899)
!9919 = !DILocation(line: 4262, column: 34, scope: !9899)
!9920 = !DILocation(line: 4262, column: 39, scope: !9899)
!9921 = !DILocation(line: 4262, column: 16, scope: !9899)
!9922 = !DILocation(line: 4262, column: 9, scope: !9899)
!9923 = !DILocation(line: 4266, column: 20, scope: !9653)
!9924 = !DILocation(line: 4266, column: 23, scope: !9653)
!9925 = !DILocation(line: 4266, column: 5, scope: !9653)
!9926 = !DILocation(line: 4269, column: 27, scope: !9653)
!9927 = !DILocation(line: 4269, column: 5, scope: !9653)
!9928 = !DILocation(line: 4271, column: 5, scope: !9653)
!9929 = !DILocation(line: 4272, column: 1, scope: !9653)
!9930 = distinct !DISubprogram(name: "dav_method_report", scope: !3, file: !3, line: 4315, type: !4262, scopeLine: 4316, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9931)
!9931 = !{!9932, !9933, !9934, !9935, !9936, !9937, !9938}
!9932 = !DILocalVariable(name: "r", arg: 1, scope: !9930, file: !3, line: 4315, type: !286)
!9933 = !DILocalVariable(name: "resource", scope: !9930, file: !3, line: 4317, type: !776)
!9934 = !DILocalVariable(name: "vsn_hooks", scope: !9930, file: !3, line: 4318, type: !1208)
!9935 = !DILocalVariable(name: "doc", scope: !9930, file: !3, line: 4319, type: !1280)
!9936 = !DILocalVariable(name: "err", scope: !9930, file: !3, line: 4320, type: !272)
!9937 = !DILocalVariable(name: "result", scope: !9930, file: !3, line: 4322, type: !14)
!9938 = !DILocalVariable(name: "label_allowed", scope: !9930, file: !3, line: 4323, type: !14)
!9939 = !DILocation(line: 4315, column: 43, scope: !9930)
!9940 = !DILocation(line: 4317, column: 5, scope: !9930)
!9941 = !DILocation(line: 4317, column: 19, scope: !9930)
!9942 = !DILocation(line: 4318, column: 5, scope: !9930)
!9943 = !DILocation(line: 4318, column: 26, scope: !9930)
!9944 = !DILocation(line: 4318, column: 38, scope: !9930)
!9945 = !DILocation(line: 4319, column: 5, scope: !9930)
!9946 = !DILocation(line: 4319, column: 18, scope: !9930)
!9947 = !DILocation(line: 4320, column: 5, scope: !9930)
!9948 = !DILocation(line: 4320, column: 16, scope: !9930)
!9949 = !DILocation(line: 4322, column: 5, scope: !9930)
!9950 = !DILocation(line: 4322, column: 9, scope: !9930)
!9951 = !DILocation(line: 4323, column: 5, scope: !9930)
!9952 = !DILocation(line: 4323, column: 9, scope: !9930)
!9953 = !DILocation(line: 4325, column: 38, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4325, column: 9)
!9955 = !DILocation(line: 4325, column: 19, scope: !9954)
!9956 = !DILocation(line: 4325, column: 17, scope: !9954)
!9957 = !DILocation(line: 4325, column: 48, scope: !9954)
!9958 = !DILocation(line: 4325, column: 9, scope: !9930)
!9959 = !DILocation(line: 4326, column: 16, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 4325, column: 55)
!9961 = !DILocation(line: 4326, column: 9, scope: !9960)
!9962 = !DILocation(line: 4328, column: 9, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4328, column: 9)
!9964 = !DILocation(line: 4328, column: 13, scope: !9963)
!9965 = !DILocation(line: 4328, column: 9, scope: !9930)
!9966 = !DILocation(line: 4330, column: 9, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 4328, column: 22)
!9968 = !DILocation(line: 4330, column: 9, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 4330, column: 9)
!9970 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 4330, column: 9)
!9971 = !DILocation(line: 4330, column: 9, scope: !9970)
!9972 = !DILocation(line: 4332, column: 9, scope: !9967)
!9973 = !DILocation(line: 4339, column: 21, scope: !9930)
!9974 = !DILocation(line: 4339, column: 35, scope: !9930)
!9975 = !DILocation(line: 4339, column: 46, scope: !9930)
!9976 = !{!4640, !2417, i64 72}
!9977 = !DILocation(line: 4339, column: 75, scope: !9930)
!9978 = !DILocation(line: 4339, column: 33, scope: !9930)
!9979 = !DILocation(line: 4339, column: 19, scope: !9930)
!9980 = !DILocation(line: 4340, column: 28, scope: !9930)
!9981 = !DILocation(line: 4340, column: 31, scope: !9930)
!9982 = !DILocation(line: 4340, column: 11, scope: !9930)
!9983 = !DILocation(line: 4340, column: 9, scope: !9930)
!9984 = !DILocation(line: 4342, column: 9, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4342, column: 9)
!9986 = !DILocation(line: 4342, column: 13, scope: !9985)
!9987 = !DILocation(line: 4342, column: 9, scope: !9930)
!9988 = !DILocation(line: 4343, column: 31, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 4342, column: 22)
!9990 = !DILocation(line: 4343, column: 34, scope: !9989)
!9991 = !DILocation(line: 4343, column: 16, scope: !9989)
!9992 = !DILocation(line: 4343, column: 9, scope: !9989)
!9993 = !DILocation(line: 4347, column: 37, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4347, column: 9)
!9995 = !DILocation(line: 4347, column: 40, scope: !9994)
!9996 = !DILocation(line: 4347, column: 56, scope: !9994)
!9997 = !DILocation(line: 4347, column: 9, scope: !9994)
!9998 = !DILocation(line: 4347, column: 67, scope: !9994)
!9999 = !DILocation(line: 4348, column: 13, scope: !9994)
!10000 = !DILocation(line: 4348, column: 16, scope: !9994)
!10001 = !DILocation(line: 4347, column: 9, scope: !9930)
!10002 = !DILocation(line: 4349, column: 31, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 4348, column: 21)
!10004 = !DILocation(line: 4349, column: 34, scope: !10003)
!10005 = !DILocation(line: 4349, column: 16, scope: !10003)
!10006 = !DILocation(line: 4349, column: 9, scope: !10003)
!10007 = !DILocation(line: 4352, column: 10, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4352, column: 9)
!10009 = !DILocation(line: 4352, column: 20, scope: !10008)
!10010 = !DILocation(line: 4352, column: 9, scope: !9930)
!10011 = !DILocation(line: 4354, column: 9, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 4352, column: 28)
!10013 = !DILocation(line: 4358, column: 5, scope: !9930)
!10014 = !DILocation(line: 4358, column: 8, scope: !9930)
!10015 = !DILocation(line: 4358, column: 15, scope: !9930)
!10016 = !DILocation(line: 4359, column: 25, scope: !9930)
!10017 = !DILocation(line: 4359, column: 5, scope: !9930)
!10018 = !DILocation(line: 4360, column: 9, scope: !9930)
!10019 = !DILocation(line: 4363, column: 37, scope: !9930)
!10020 = !DILocation(line: 4363, column: 40, scope: !9930)
!10021 = !DILocation(line: 4363, column: 50, scope: !9930)
!10022 = !DILocation(line: 4364, column: 13, scope: !9930)
!10023 = !DILocation(line: 4364, column: 16, scope: !9930)
!10024 = !DILocation(line: 4363, column: 14, scope: !9930)
!10025 = !DILocation(line: 4363, column: 12, scope: !9930)
!10026 = !DILocation(line: 4365, column: 9, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4365, column: 9)
!10028 = !DILocation(line: 4365, column: 13, scope: !10027)
!10029 = !DILocation(line: 4365, column: 9, scope: !9930)
!10030 = !DILocation(line: 4367, column: 15, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 4367, column: 13)
!10032 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 4365, column: 22)
!10033 = !DILocation(line: 4367, column: 18, scope: !10031)
!10034 = !{!2425, !2427, i64 144}
!10035 = !DILocation(line: 4367, column: 13, scope: !10032)
!10036 = !DILocation(line: 4369, column: 33, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 4367, column: 31)
!10038 = !DILocation(line: 4369, column: 36, scope: !10037)
!10039 = !DILocation(line: 4369, column: 18, scope: !10037)
!10040 = !DILocation(line: 4369, column: 11, scope: !10037)
!10041 = !DILocation(line: 4378, column: 30, scope: !10032)
!10042 = !DILocation(line: 4378, column: 33, scope: !10032)
!10043 = !DILocation(line: 4378, column: 39, scope: !10032)
!10044 = !DILocation(line: 4378, column: 44, scope: !10032)
!10045 = !DILocation(line: 4380, column: 53, scope: !10032)
!10046 = !DILocation(line: 4378, column: 15, scope: !10032)
!10047 = !DILocation(line: 4378, column: 13, scope: !10032)
!10048 = !DILocation(line: 4381, column: 21, scope: !10032)
!10049 = !DILocation(line: 4381, column: 24, scope: !10032)
!10050 = !DILocation(line: 4381, column: 9, scope: !10032)
!10051 = !DILocation(line: 4382, column: 9, scope: !10032)
!10052 = !DILocation(line: 4382, column: 12, scope: !10032)
!10053 = !DILocation(line: 4382, column: 24, scope: !10032)
!10054 = !DILocation(line: 4382, column: 32, scope: !10032)
!10055 = !DILocation(line: 4384, column: 9, scope: !10032)
!10056 = !DILocation(line: 4386, column: 13, scope: !9930)
!10057 = !DILocation(line: 4386, column: 5, scope: !9930)
!10058 = !DILocation(line: 4388, column: 9, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 4386, column: 21)
!10060 = !DILocation(line: 4391, column: 9, scope: !10059)
!10061 = !DILocation(line: 4393, column: 9, scope: !10059)
!10062 = !DILocation(line: 4397, column: 1, scope: !9930)
!10063 = distinct !DISubprogram(name: "dav_method_make_workspace", scope: !3, file: !3, line: 4399, type: !4262, scopeLine: 4400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10064)
!10064 = !{!10065, !10066, !10067, !10068, !10069, !10070}
!10065 = !DILocalVariable(name: "r", arg: 1, scope: !10063, file: !3, line: 4399, type: !286)
!10066 = !DILocalVariable(name: "resource", scope: !10063, file: !3, line: 4401, type: !776)
!10067 = !DILocalVariable(name: "vsn_hooks", scope: !10063, file: !3, line: 4402, type: !1208)
!10068 = !DILocalVariable(name: "err", scope: !10063, file: !3, line: 4403, type: !272)
!10069 = !DILocalVariable(name: "doc", scope: !10063, file: !3, line: 4404, type: !1280)
!10070 = !DILocalVariable(name: "result", scope: !10063, file: !3, line: 4405, type: !14)
!10071 = !DILocation(line: 4399, column: 51, scope: !10063)
!10072 = !DILocation(line: 4401, column: 5, scope: !10063)
!10073 = !DILocation(line: 4401, column: 19, scope: !10063)
!10074 = !DILocation(line: 4402, column: 5, scope: !10063)
!10075 = !DILocation(line: 4402, column: 26, scope: !10063)
!10076 = !DILocation(line: 4402, column: 38, scope: !10063)
!10077 = !DILocation(line: 4403, column: 5, scope: !10063)
!10078 = !DILocation(line: 4403, column: 16, scope: !10063)
!10079 = !DILocation(line: 4404, column: 5, scope: !10063)
!10080 = !DILocation(line: 4404, column: 18, scope: !10063)
!10081 = !DILocation(line: 4405, column: 5, scope: !10063)
!10082 = !DILocation(line: 4405, column: 9, scope: !10063)
!10083 = !DILocation(line: 4410, column: 9, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4410, column: 9)
!10085 = !DILocation(line: 4410, column: 19, scope: !10084)
!10086 = !DILocation(line: 4410, column: 27, scope: !10084)
!10087 = !DILocation(line: 4410, column: 30, scope: !10084)
!10088 = !DILocation(line: 4410, column: 41, scope: !10084)
!10089 = !{!4640, !2417, i64 120}
!10090 = !DILocation(line: 4410, column: 56, scope: !10084)
!10091 = !DILocation(line: 4410, column: 9, scope: !10063)
!10092 = !DILocation(line: 4411, column: 9, scope: !10084)
!10093 = !DILocation(line: 4414, column: 28, scope: !10063)
!10094 = !DILocation(line: 4414, column: 11, scope: !10063)
!10095 = !DILocation(line: 4414, column: 9, scope: !10063)
!10096 = !DILocation(line: 4416, column: 9, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4416, column: 9)
!10098 = !DILocation(line: 4416, column: 13, scope: !10097)
!10099 = !DILocation(line: 4416, column: 9, scope: !10063)
!10100 = !DILocation(line: 4417, column: 31, scope: !10097)
!10101 = !DILocation(line: 4417, column: 34, scope: !10097)
!10102 = !DILocation(line: 4417, column: 16, scope: !10097)
!10103 = !DILocation(line: 4417, column: 9, scope: !10097)
!10104 = !DILocation(line: 4420, column: 38, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4420, column: 9)
!10106 = !DILocation(line: 4420, column: 19, scope: !10105)
!10107 = !DILocation(line: 4420, column: 17, scope: !10105)
!10108 = !DILocation(line: 4420, column: 48, scope: !10105)
!10109 = !DILocation(line: 4420, column: 9, scope: !10063)
!10110 = !DILocation(line: 4421, column: 16, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 4420, column: 55)
!10112 = !DILocation(line: 4421, column: 9, scope: !10111)
!10113 = !DILocation(line: 4425, column: 37, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4425, column: 9)
!10115 = !DILocation(line: 4425, column: 40, scope: !10114)
!10116 = !DILocation(line: 4425, column: 56, scope: !10114)
!10117 = !DILocation(line: 4425, column: 9, scope: !10114)
!10118 = !DILocation(line: 4425, column: 67, scope: !10114)
!10119 = !DILocation(line: 4426, column: 13, scope: !10114)
!10120 = !DILocation(line: 4426, column: 16, scope: !10114)
!10121 = !DILocation(line: 4425, column: 9, scope: !10063)
!10122 = !DILocation(line: 4427, column: 31, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10114, file: !3, line: 4426, column: 21)
!10124 = !DILocation(line: 4427, column: 34, scope: !10123)
!10125 = !DILocation(line: 4427, column: 16, scope: !10123)
!10126 = !DILocation(line: 4427, column: 9, scope: !10123)
!10127 = !DILocation(line: 4430, column: 9, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4430, column: 9)
!10129 = !DILocation(line: 4430, column: 13, scope: !10128)
!10130 = !DILocation(line: 4431, column: 9, scope: !10128)
!10131 = !DILocation(line: 4431, column: 31, scope: !10128)
!10132 = !DILocation(line: 4431, column: 13, scope: !10128)
!10133 = !DILocation(line: 4430, column: 9, scope: !10063)
!10134 = !DILocation(line: 4432, column: 9, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 4431, column: 52)
!10136 = !DILocation(line: 4432, column: 9, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 4432, column: 9)
!10138 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 4432, column: 9)
!10139 = !DILocation(line: 4432, column: 9, scope: !10138)
!10140 = !DILocation(line: 4435, column: 9, scope: !10135)
!10141 = !DILocation(line: 4445, column: 9, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4445, column: 9)
!10143 = !DILocation(line: 4445, column: 19, scope: !10142)
!10144 = !DILocation(line: 4445, column: 9, scope: !10063)
!10145 = !DILocation(line: 4446, column: 29, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 4445, column: 27)
!10147 = !DILocation(line: 4446, column: 32, scope: !10146)
!10148 = !DILocation(line: 4446, column: 15, scope: !10146)
!10149 = !DILocation(line: 4446, column: 13, scope: !10146)
!10150 = !DILocation(line: 4448, column: 31, scope: !10146)
!10151 = !DILocation(line: 4448, column: 34, scope: !10146)
!10152 = !DILocation(line: 4448, column: 16, scope: !10146)
!10153 = !DILocation(line: 4448, column: 9, scope: !10146)
!10154 = !DILocation(line: 4454, column: 18, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4454, column: 9)
!10156 = !DILocation(line: 4454, column: 29, scope: !10155)
!10157 = !DILocation(line: 4454, column: 45, scope: !10155)
!10158 = !DILocation(line: 4454, column: 55, scope: !10155)
!10159 = !DILocation(line: 4454, column: 16, scope: !10155)
!10160 = !DILocation(line: 4454, column: 14, scope: !10155)
!10161 = !DILocation(line: 4454, column: 61, scope: !10155)
!10162 = !DILocation(line: 4454, column: 9, scope: !10063)
!10163 = !DILocation(line: 4455, column: 30, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 4454, column: 70)
!10165 = !DILocation(line: 4455, column: 33, scope: !10164)
!10166 = !DILocation(line: 4455, column: 39, scope: !10164)
!10167 = !DILocation(line: 4455, column: 44, scope: !10164)
!10168 = !DILocation(line: 4456, column: 43, scope: !10164)
!10169 = !DILocation(line: 4456, column: 46, scope: !10164)
!10170 = !DILocation(line: 4458, column: 43, scope: !10164)
!10171 = !DILocation(line: 4456, column: 30, scope: !10164)
!10172 = !DILocation(line: 4459, column: 30, scope: !10164)
!10173 = !DILocation(line: 4455, column: 15, scope: !10164)
!10174 = !DILocation(line: 4455, column: 13, scope: !10164)
!10175 = !DILocation(line: 4460, column: 31, scope: !10164)
!10176 = !DILocation(line: 4460, column: 34, scope: !10164)
!10177 = !DILocation(line: 4460, column: 16, scope: !10164)
!10178 = !DILocation(line: 4460, column: 9, scope: !10164)
!10179 = !DILocation(line: 4464, column: 20, scope: !10063)
!10180 = !DILocation(line: 4464, column: 23, scope: !10063)
!10181 = !DILocation(line: 4464, column: 5, scope: !10063)
!10182 = !DILocation(line: 4467, column: 24, scope: !10063)
!10183 = !DILocation(line: 4467, column: 27, scope: !10063)
!10184 = !DILocation(line: 4467, column: 37, scope: !10063)
!10185 = !DILocation(line: 4467, column: 12, scope: !10063)
!10186 = !DILocation(line: 4467, column: 5, scope: !10063)
!10187 = !DILocation(line: 4468, column: 1, scope: !10063)
!10188 = distinct !DISubprogram(name: "dav_method_make_activity", scope: !3, file: !3, line: 4470, type: !4262, scopeLine: 4471, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10189)
!10189 = !{!10190, !10191, !10192, !10193, !10194}
!10190 = !DILocalVariable(name: "r", arg: 1, scope: !10188, file: !3, line: 4470, type: !286)
!10191 = !DILocalVariable(name: "resource", scope: !10188, file: !3, line: 4472, type: !776)
!10192 = !DILocalVariable(name: "vsn_hooks", scope: !10188, file: !3, line: 4473, type: !1208)
!10193 = !DILocalVariable(name: "err", scope: !10188, file: !3, line: 4474, type: !272)
!10194 = !DILocalVariable(name: "result", scope: !10188, file: !3, line: 4475, type: !14)
!10195 = !DILocation(line: 4470, column: 50, scope: !10188)
!10196 = !DILocation(line: 4472, column: 5, scope: !10188)
!10197 = !DILocation(line: 4472, column: 19, scope: !10188)
!10198 = !DILocation(line: 4473, column: 5, scope: !10188)
!10199 = !DILocation(line: 4473, column: 26, scope: !10188)
!10200 = !DILocation(line: 4473, column: 38, scope: !10188)
!10201 = !DILocation(line: 4474, column: 5, scope: !10188)
!10202 = !DILocation(line: 4474, column: 16, scope: !10188)
!10203 = !DILocation(line: 4475, column: 5, scope: !10188)
!10204 = !DILocation(line: 4475, column: 9, scope: !10188)
!10205 = !DILocation(line: 4480, column: 9, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4480, column: 9)
!10207 = !DILocation(line: 4480, column: 19, scope: !10206)
!10208 = !DILocation(line: 4480, column: 27, scope: !10206)
!10209 = !DILocation(line: 4480, column: 30, scope: !10206)
!10210 = !DILocation(line: 4480, column: 41, scope: !10206)
!10211 = !{!4640, !2417, i64 136}
!10212 = !DILocation(line: 4480, column: 55, scope: !10206)
!10213 = !DILocation(line: 4480, column: 9, scope: !10188)
!10214 = !DILocation(line: 4481, column: 9, scope: !10206)
!10215 = !DILocation(line: 4484, column: 28, scope: !10188)
!10216 = !DILocation(line: 4484, column: 11, scope: !10188)
!10217 = !DILocation(line: 4484, column: 9, scope: !10188)
!10218 = !DILocation(line: 4486, column: 9, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4486, column: 9)
!10220 = !DILocation(line: 4486, column: 13, scope: !10219)
!10221 = !DILocation(line: 4486, column: 9, scope: !10188)
!10222 = !DILocation(line: 4487, column: 31, scope: !10219)
!10223 = !DILocation(line: 4487, column: 34, scope: !10219)
!10224 = !DILocation(line: 4487, column: 16, scope: !10219)
!10225 = !DILocation(line: 4487, column: 9, scope: !10219)
!10226 = !DILocation(line: 4490, column: 37, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4490, column: 9)
!10228 = !DILocation(line: 4490, column: 40, scope: !10227)
!10229 = !DILocation(line: 4490, column: 9, scope: !10227)
!10230 = !DILocation(line: 4490, column: 68, scope: !10227)
!10231 = !DILocation(line: 4491, column: 13, scope: !10227)
!10232 = !DILocation(line: 4491, column: 16, scope: !10227)
!10233 = !DILocation(line: 4490, column: 9, scope: !10188)
!10234 = !DILocation(line: 4492, column: 31, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 4491, column: 21)
!10236 = !DILocation(line: 4492, column: 34, scope: !10235)
!10237 = !DILocation(line: 4492, column: 16, scope: !10235)
!10238 = !DILocation(line: 4492, column: 9, scope: !10235)
!10239 = !DILocation(line: 4496, column: 43, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4496, column: 9)
!10241 = !DILocation(line: 4496, column: 19, scope: !10240)
!10242 = !DILocation(line: 4496, column: 17, scope: !10240)
!10243 = !DILocation(line: 4496, column: 47, scope: !10240)
!10244 = !DILocation(line: 4496, column: 9, scope: !10188)
!10245 = !DILocation(line: 4497, column: 16, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 4496, column: 54)
!10247 = !DILocation(line: 4497, column: 9, scope: !10246)
!10248 = !DILocation(line: 4507, column: 9, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4507, column: 9)
!10250 = !DILocation(line: 4507, column: 19, scope: !10249)
!10251 = !DILocation(line: 4507, column: 9, scope: !10188)
!10252 = !DILocation(line: 4508, column: 29, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 4507, column: 27)
!10254 = !DILocation(line: 4508, column: 32, scope: !10253)
!10255 = !DILocation(line: 4508, column: 15, scope: !10253)
!10256 = !DILocation(line: 4508, column: 13, scope: !10253)
!10257 = !DILocation(line: 4510, column: 31, scope: !10253)
!10258 = !DILocation(line: 4510, column: 34, scope: !10253)
!10259 = !DILocation(line: 4510, column: 16, scope: !10253)
!10260 = !DILocation(line: 4510, column: 9, scope: !10253)
!10261 = !DILocation(line: 4515, column: 9, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4515, column: 9)
!10263 = !DILocation(line: 4515, column: 20, scope: !10262)
!10264 = !DILocation(line: 4515, column: 36, scope: !10262)
!10265 = !DILocation(line: 4516, column: 9, scope: !10262)
!10266 = !DILocation(line: 4516, column: 15, scope: !10262)
!10267 = !DILocation(line: 4516, column: 26, scope: !10262)
!10268 = !DILocation(line: 4516, column: 43, scope: !10262)
!10269 = !DILocation(line: 4516, column: 13, scope: !10262)
!10270 = !DILocation(line: 4515, column: 9, scope: !10188)
!10271 = !DILocation(line: 4517, column: 27, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 4516, column: 54)
!10273 = !DILocation(line: 4517, column: 30, scope: !10272)
!10274 = !DILocation(line: 4517, column: 13, scope: !10272)
!10275 = !DILocation(line: 4517, column: 11, scope: !10272)
!10276 = !DILocation(line: 4519, column: 29, scope: !10272)
!10277 = !DILocation(line: 4519, column: 32, scope: !10272)
!10278 = !DILocation(line: 4519, column: 14, scope: !10272)
!10279 = !DILocation(line: 4519, column: 7, scope: !10272)
!10280 = !DILocation(line: 4525, column: 18, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4525, column: 9)
!10282 = !DILocation(line: 4525, column: 29, scope: !10281)
!10283 = !DILocation(line: 4525, column: 44, scope: !10281)
!10284 = !DILocation(line: 4525, column: 16, scope: !10281)
!10285 = !DILocation(line: 4525, column: 14, scope: !10281)
!10286 = !DILocation(line: 4525, column: 55, scope: !10281)
!10287 = !DILocation(line: 4525, column: 9, scope: !10188)
!10288 = !DILocation(line: 4526, column: 30, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 4525, column: 64)
!10290 = !DILocation(line: 4526, column: 33, scope: !10289)
!10291 = !DILocation(line: 4526, column: 39, scope: !10289)
!10292 = !DILocation(line: 4526, column: 44, scope: !10289)
!10293 = !DILocation(line: 4527, column: 43, scope: !10289)
!10294 = !DILocation(line: 4527, column: 46, scope: !10289)
!10295 = !DILocation(line: 4529, column: 43, scope: !10289)
!10296 = !DILocation(line: 4527, column: 30, scope: !10289)
!10297 = !DILocation(line: 4530, column: 30, scope: !10289)
!10298 = !DILocation(line: 4526, column: 15, scope: !10289)
!10299 = !DILocation(line: 4526, column: 13, scope: !10289)
!10300 = !DILocation(line: 4531, column: 31, scope: !10289)
!10301 = !DILocation(line: 4531, column: 34, scope: !10289)
!10302 = !DILocation(line: 4531, column: 16, scope: !10289)
!10303 = !DILocation(line: 4531, column: 9, scope: !10289)
!10304 = !DILocation(line: 4535, column: 20, scope: !10188)
!10305 = !DILocation(line: 4535, column: 23, scope: !10188)
!10306 = !DILocation(line: 4535, column: 5, scope: !10188)
!10307 = !DILocation(line: 4538, column: 24, scope: !10188)
!10308 = !DILocation(line: 4538, column: 27, scope: !10188)
!10309 = !DILocation(line: 4538, column: 37, scope: !10188)
!10310 = !DILocation(line: 4538, column: 12, scope: !10188)
!10311 = !DILocation(line: 4538, column: 5, scope: !10188)
!10312 = !DILocation(line: 4539, column: 1, scope: !10188)
!10313 = distinct !DISubprogram(name: "dav_method_baseline_control", scope: !3, file: !3, line: 4541, type: !4262, scopeLine: 4542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10314)
!10314 = !{!10315}
!10315 = !DILocalVariable(name: "r", arg: 1, scope: !10313, file: !3, line: 4541, type: !286)
!10316 = !DILocation(line: 4541, column: 53, scope: !10313)
!10317 = !DILocation(line: 4544, column: 5, scope: !10313)
!10318 = distinct !DISubprogram(name: "dav_method_merge", scope: !3, file: !3, line: 4547, type: !4262, scopeLine: 4548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10319)
!10319 = !{!10320, !10321, !10322, !10323, !10324, !10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333}
!10320 = !DILocalVariable(name: "r", arg: 1, scope: !10318, file: !3, line: 4547, type: !286)
!10321 = !DILocalVariable(name: "resource", scope: !10318, file: !3, line: 4549, type: !776)
!10322 = !DILocalVariable(name: "source_resource", scope: !10318, file: !3, line: 4550, type: !776)
!10323 = !DILocalVariable(name: "vsn_hooks", scope: !10318, file: !3, line: 4551, type: !1208)
!10324 = !DILocalVariable(name: "err", scope: !10318, file: !3, line: 4552, type: !272)
!10325 = !DILocalVariable(name: "result", scope: !10318, file: !3, line: 4553, type: !14)
!10326 = !DILocalVariable(name: "doc", scope: !10318, file: !3, line: 4554, type: !1280)
!10327 = !DILocalVariable(name: "source_elem", scope: !10318, file: !3, line: 4555, type: !226)
!10328 = !DILocalVariable(name: "href_elem", scope: !10318, file: !3, line: 4556, type: !226)
!10329 = !DILocalVariable(name: "prop_elem", scope: !10318, file: !3, line: 4557, type: !226)
!10330 = !DILocalVariable(name: "source", scope: !10318, file: !3, line: 4558, type: !10)
!10331 = !DILocalVariable(name: "no_auto_merge", scope: !10318, file: !3, line: 4559, type: !14)
!10332 = !DILocalVariable(name: "no_checkout", scope: !10318, file: !3, line: 4560, type: !14)
!10333 = !DILocalVariable(name: "lookup", scope: !10318, file: !3, line: 4561, type: !7239)
!10334 = !DILocation(line: 4547, column: 42, scope: !10318)
!10335 = !DILocation(line: 4549, column: 5, scope: !10318)
!10336 = !DILocation(line: 4549, column: 19, scope: !10318)
!10337 = !DILocation(line: 4550, column: 5, scope: !10318)
!10338 = !DILocation(line: 4550, column: 19, scope: !10318)
!10339 = !DILocation(line: 4551, column: 5, scope: !10318)
!10340 = !DILocation(line: 4551, column: 26, scope: !10318)
!10341 = !DILocation(line: 4551, column: 38, scope: !10318)
!10342 = !DILocation(line: 4552, column: 5, scope: !10318)
!10343 = !DILocation(line: 4552, column: 16, scope: !10318)
!10344 = !DILocation(line: 4553, column: 5, scope: !10318)
!10345 = !DILocation(line: 4553, column: 9, scope: !10318)
!10346 = !DILocation(line: 4554, column: 5, scope: !10318)
!10347 = !DILocation(line: 4554, column: 18, scope: !10318)
!10348 = !DILocation(line: 4555, column: 5, scope: !10318)
!10349 = !DILocation(line: 4555, column: 19, scope: !10318)
!10350 = !DILocation(line: 4556, column: 5, scope: !10318)
!10351 = !DILocation(line: 4556, column: 19, scope: !10318)
!10352 = !DILocation(line: 4557, column: 5, scope: !10318)
!10353 = !DILocation(line: 4557, column: 19, scope: !10318)
!10354 = !DILocation(line: 4558, column: 5, scope: !10318)
!10355 = !DILocation(line: 4558, column: 17, scope: !10318)
!10356 = !DILocation(line: 4559, column: 5, scope: !10318)
!10357 = !DILocation(line: 4559, column: 9, scope: !10318)
!10358 = !DILocation(line: 4560, column: 5, scope: !10318)
!10359 = !DILocation(line: 4560, column: 9, scope: !10318)
!10360 = !DILocation(line: 4561, column: 5, scope: !10318)
!10361 = !DILocation(line: 4561, column: 23, scope: !10318)
!10362 = !DILocation(line: 4564, column: 9, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4564, column: 9)
!10364 = !DILocation(line: 4564, column: 19, scope: !10363)
!10365 = !DILocation(line: 4564, column: 9, scope: !10318)
!10366 = !DILocation(line: 4565, column: 9, scope: !10363)
!10367 = !DILocation(line: 4567, column: 38, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4567, column: 9)
!10369 = !DILocation(line: 4567, column: 19, scope: !10368)
!10370 = !DILocation(line: 4567, column: 17, scope: !10368)
!10371 = !DILocation(line: 4567, column: 48, scope: !10368)
!10372 = !DILocation(line: 4567, column: 9, scope: !10318)
!10373 = !DILocation(line: 4568, column: 16, scope: !10368)
!10374 = !DILocation(line: 4568, column: 9, scope: !10368)
!10375 = !DILocation(line: 4570, column: 9, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4570, column: 9)
!10377 = !DILocation(line: 4570, column: 13, scope: !10376)
!10378 = !DILocation(line: 4570, column: 21, scope: !10376)
!10379 = !DILocation(line: 4570, column: 43, scope: !10376)
!10380 = !DILocation(line: 4570, column: 25, scope: !10376)
!10381 = !DILocation(line: 4570, column: 9, scope: !10318)
!10382 = !DILocation(line: 4572, column: 9, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10376, file: !3, line: 4570, column: 58)
!10384 = !DILocation(line: 4572, column: 9, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 4572, column: 9)
!10386 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 4572, column: 9)
!10387 = !DILocation(line: 4572, column: 9, scope: !10386)
!10388 = !DILocation(line: 4575, column: 9, scope: !10383)
!10389 = !DILocation(line: 4578, column: 39, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4578, column: 9)
!10391 = !DILocation(line: 4578, column: 44, scope: !10390)
!10392 = !DILocation(line: 4578, column: 24, scope: !10390)
!10393 = !DILocation(line: 4578, column: 22, scope: !10390)
!10394 = !DILocation(line: 4578, column: 61, scope: !10390)
!10395 = !DILocation(line: 4578, column: 9, scope: !10318)
!10396 = !DILocation(line: 4580, column: 9, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 4578, column: 70)
!10398 = !DILocation(line: 4580, column: 9, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 4580, column: 9)
!10400 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 4580, column: 9)
!10401 = !DILocation(line: 4580, column: 9, scope: !10400)
!10402 = !DILocation(line: 4583, column: 9, scope: !10397)
!10403 = !DILocation(line: 4585, column: 37, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4585, column: 9)
!10405 = !DILocation(line: 4585, column: 22, scope: !10404)
!10406 = !DILocation(line: 4585, column: 20, scope: !10404)
!10407 = !DILocation(line: 4585, column: 59, scope: !10404)
!10408 = !DILocation(line: 4585, column: 9, scope: !10318)
!10409 = !DILocation(line: 4587, column: 9, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 4585, column: 68)
!10411 = !DILocation(line: 4587, column: 9, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 4587, column: 9)
!10413 = distinct !DILexicalBlock(scope: !10410, file: !3, line: 4587, column: 9)
!10414 = !DILocation(line: 4587, column: 9, scope: !10413)
!10415 = !DILocation(line: 4590, column: 9, scope: !10410)
!10416 = !DILocation(line: 4592, column: 32, scope: !10318)
!10417 = !DILocation(line: 4592, column: 43, scope: !10318)
!10418 = !DILocation(line: 4592, column: 46, scope: !10318)
!10419 = !DILocation(line: 4592, column: 14, scope: !10318)
!10420 = !DILocation(line: 4592, column: 12, scope: !10318)
!10421 = !DILocation(line: 4596, column: 14, scope: !10318)
!10422 = !DILocation(line: 4596, column: 29, scope: !10318)
!10423 = !DILocation(line: 4596, column: 37, scope: !10318)
!10424 = !DILocation(line: 4597, column: 16, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4597, column: 9)
!10426 = !DILocation(line: 4597, column: 21, scope: !10425)
!10427 = !DILocation(line: 4597, column: 9, scope: !10318)
!10428 = !DILocation(line: 4598, column: 20, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 4598, column: 13)
!10430 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 4597, column: 30)
!10431 = !DILocation(line: 4598, column: 24, scope: !10429)
!10432 = !DILocation(line: 4598, column: 31, scope: !10429)
!10433 = !DILocation(line: 4598, column: 13, scope: !10430)
!10434 = !DILocation(line: 4600, column: 13, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 4598, column: 52)
!10436 = !DILocation(line: 4600, column: 13, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 4600, column: 13)
!10438 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 4600, column: 13)
!10439 = !DILocation(line: 4600, column: 13, scope: !10438)
!10440 = !DILocation(line: 4602, column: 13, scope: !10435)
!10441 = !DILocation(line: 4608, column: 35, scope: !10430)
!10442 = !DILocation(line: 4608, column: 45, scope: !10430)
!10443 = !DILocation(line: 4608, column: 49, scope: !10430)
!10444 = !DILocation(line: 4608, column: 64, scope: !10430)
!10445 = !DILocation(line: 4608, column: 68, scope: !10430)
!10446 = !DILocation(line: 4608, column: 16, scope: !10430)
!10447 = !DILocation(line: 4608, column: 9, scope: !10430)
!10448 = !DILocation(line: 4610, column: 16, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4610, column: 9)
!10450 = !DILocation(line: 4610, column: 22, scope: !10449)
!10451 = !DILocation(line: 4610, column: 29, scope: !10449)
!10452 = !DILocation(line: 4610, column: 9, scope: !10318)
!10453 = !DILocation(line: 4612, column: 35, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 4610, column: 41)
!10455 = !DILocation(line: 4612, column: 45, scope: !10454)
!10456 = !DILocation(line: 4612, column: 51, scope: !10454)
!10457 = !DILocation(line: 4612, column: 16, scope: !10454)
!10458 = !DILocation(line: 4612, column: 9, scope: !10454)
!10459 = !DILocation(line: 4615, column: 35, scope: !10318)
!10460 = !DILocation(line: 4615, column: 11, scope: !10318)
!10461 = !DILocation(line: 4615, column: 9, scope: !10318)
!10462 = !DILocation(line: 4617, column: 9, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4617, column: 9)
!10464 = !DILocation(line: 4617, column: 13, scope: !10463)
!10465 = !DILocation(line: 4617, column: 9, scope: !10318)
!10466 = !DILocation(line: 4618, column: 31, scope: !10463)
!10467 = !DILocation(line: 4618, column: 34, scope: !10463)
!10468 = !DILocation(line: 4618, column: 16, scope: !10463)
!10469 = !DILocation(line: 4618, column: 9, scope: !10463)
!10470 = !DILocation(line: 4621, column: 37, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4621, column: 9)
!10472 = !DILocation(line: 4621, column: 40, scope: !10471)
!10473 = !DILocation(line: 4621, column: 63, scope: !10471)
!10474 = !DILocation(line: 4621, column: 9, scope: !10471)
!10475 = !DILocation(line: 4621, column: 74, scope: !10471)
!10476 = !DILocation(line: 4622, column: 13, scope: !10471)
!10477 = !DILocation(line: 4622, column: 16, scope: !10471)
!10478 = !DILocation(line: 4621, column: 9, scope: !10318)
!10479 = !DILocation(line: 4623, column: 31, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 4622, column: 21)
!10481 = !DILocation(line: 4623, column: 34, scope: !10480)
!10482 = !DILocation(line: 4623, column: 16, scope: !10480)
!10483 = !DILocation(line: 4623, column: 9, scope: !10480)
!10484 = !DILocation(line: 4626, column: 36, scope: !10318)
!10485 = !DILocation(line: 4626, column: 41, scope: !10318)
!10486 = !DILocation(line: 4626, column: 21, scope: !10318)
!10487 = !DILocation(line: 4626, column: 64, scope: !10318)
!10488 = !DILocation(line: 4626, column: 19, scope: !10318)
!10489 = !DILocation(line: 4627, column: 34, scope: !10318)
!10490 = !DILocation(line: 4627, column: 39, scope: !10318)
!10491 = !DILocation(line: 4627, column: 19, scope: !10318)
!10492 = !DILocation(line: 4627, column: 60, scope: !10318)
!10493 = !DILocation(line: 4627, column: 17, scope: !10318)
!10494 = !DILocation(line: 4629, column: 32, scope: !10318)
!10495 = !DILocation(line: 4629, column: 37, scope: !10318)
!10496 = !DILocation(line: 4629, column: 17, scope: !10318)
!10497 = !DILocation(line: 4629, column: 15, scope: !10318)
!10498 = !DILocation(line: 4639, column: 28, scope: !10318)
!10499 = !DILocation(line: 4639, column: 11, scope: !10318)
!10500 = !DILocation(line: 4639, column: 9, scope: !10318)
!10501 = !DILocation(line: 4641, column: 9, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4641, column: 9)
!10503 = !DILocation(line: 4641, column: 13, scope: !10502)
!10504 = !DILocation(line: 4641, column: 9, scope: !10318)
!10505 = !DILocation(line: 4642, column: 31, scope: !10502)
!10506 = !DILocation(line: 4642, column: 34, scope: !10502)
!10507 = !DILocation(line: 4642, column: 16, scope: !10502)
!10508 = !DILocation(line: 4642, column: 9, scope: !10502)
!10509 = !DILocation(line: 4645, column: 37, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4645, column: 9)
!10511 = !DILocation(line: 4645, column: 40, scope: !10510)
!10512 = !DILocation(line: 4645, column: 57, scope: !10510)
!10513 = !DILocation(line: 4645, column: 67, scope: !10510)
!10514 = !DILocation(line: 4645, column: 9, scope: !10510)
!10515 = !DILocation(line: 4645, column: 78, scope: !10510)
!10516 = !DILocation(line: 4646, column: 13, scope: !10510)
!10517 = !DILocation(line: 4646, column: 16, scope: !10510)
!10518 = !DILocation(line: 4645, column: 9, scope: !10318)
!10519 = !DILocation(line: 4647, column: 31, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 4646, column: 21)
!10521 = !DILocation(line: 4647, column: 34, scope: !10520)
!10522 = !DILocation(line: 4647, column: 16, scope: !10520)
!10523 = !DILocation(line: 4647, column: 9, scope: !10520)
!10524 = !DILocation(line: 4650, column: 10, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4650, column: 9)
!10526 = !DILocation(line: 4650, column: 20, scope: !10525)
!10527 = !DILocation(line: 4650, column: 9, scope: !10318)
!10528 = !DILocation(line: 4652, column: 9, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 4650, column: 28)
!10530 = !DILocation(line: 4661, column: 20, scope: !10318)
!10531 = !DILocation(line: 4661, column: 23, scope: !10318)
!10532 = !DILocation(line: 4661, column: 5, scope: !10318)
!10533 = !DILocation(line: 4666, column: 5, scope: !10318)
!10534 = !DILocation(line: 4666, column: 8, scope: !10318)
!10535 = !DILocation(line: 4666, column: 15, scope: !10318)
!10536 = !DILocation(line: 4667, column: 25, scope: !10318)
!10537 = !DILocation(line: 4667, column: 5, scope: !10318)
!10538 = !DILocation(line: 4674, column: 18, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4674, column: 9)
!10540 = !DILocation(line: 4674, column: 29, scope: !10539)
!10541 = !{!4640, !2417, i64 144}
!10542 = !DILocation(line: 4674, column: 36, scope: !10539)
!10543 = !DILocation(line: 4674, column: 46, scope: !10539)
!10544 = !DILocation(line: 4675, column: 36, scope: !10539)
!10545 = !DILocation(line: 4675, column: 51, scope: !10539)
!10546 = !DILocation(line: 4676, column: 36, scope: !10539)
!10547 = !DILocation(line: 4677, column: 36, scope: !10539)
!10548 = !DILocation(line: 4677, column: 39, scope: !10539)
!10549 = !DILocation(line: 4674, column: 16, scope: !10539)
!10550 = !DILocation(line: 4674, column: 14, scope: !10539)
!10551 = !DILocation(line: 4677, column: 56, scope: !10539)
!10552 = !DILocation(line: 4674, column: 9, scope: !10318)
!10553 = !DILocation(line: 4679, column: 30, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 4677, column: 65)
!10555 = !DILocation(line: 4679, column: 33, scope: !10554)
!10556 = !DILocation(line: 4679, column: 39, scope: !10554)
!10557 = !DILocation(line: 4679, column: 44, scope: !10554)
!10558 = !DILocation(line: 4680, column: 43, scope: !10554)
!10559 = !DILocation(line: 4680, column: 46, scope: !10554)
!10560 = !DILocation(line: 4683, column: 43, scope: !10554)
!10561 = !DILocation(line: 4684, column: 43, scope: !10554)
!10562 = !DILocation(line: 4680, column: 30, scope: !10554)
!10563 = !DILocation(line: 4685, column: 30, scope: !10554)
!10564 = !DILocation(line: 4679, column: 15, scope: !10554)
!10565 = !DILocation(line: 4679, column: 13, scope: !10554)
!10566 = !DILocation(line: 4686, column: 31, scope: !10554)
!10567 = !DILocation(line: 4686, column: 34, scope: !10554)
!10568 = !DILocation(line: 4686, column: 16, scope: !10554)
!10569 = !DILocation(line: 4686, column: 9, scope: !10554)
!10570 = !DILocation(line: 4691, column: 5, scope: !10318)
!10571 = !DILocation(line: 4692, column: 1, scope: !10318)
!10572 = distinct !DISubprogram(name: "dav_method_bind", scope: !3, file: !3, line: 4694, type: !4262, scopeLine: 4695, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10573)
!10573 = !{!10574, !10575, !10576, !10577, !10578, !10579, !10580, !10581, !10582, !10583, !10584}
!10574 = !DILocalVariable(name: "r", arg: 1, scope: !10572, file: !3, line: 4694, type: !286)
!10575 = !DILocalVariable(name: "resource", scope: !10572, file: !3, line: 4696, type: !776)
!10576 = !DILocalVariable(name: "binding", scope: !10572, file: !3, line: 4697, type: !776)
!10577 = !DILocalVariable(name: "av_info", scope: !10572, file: !3, line: 4698, type: !4860)
!10578 = !DILocalVariable(name: "binding_hooks", scope: !10572, file: !3, line: 4699, type: !1289)
!10579 = !DILocalVariable(name: "dest", scope: !10572, file: !3, line: 4700, type: !10)
!10580 = !DILocalVariable(name: "err", scope: !10572, file: !3, line: 4701, type: !272)
!10581 = !DILocalVariable(name: "err2", scope: !10572, file: !3, line: 4702, type: !272)
!10582 = !DILocalVariable(name: "multi_response", scope: !10572, file: !3, line: 4703, type: !826)
!10583 = !DILocalVariable(name: "lookup", scope: !10572, file: !3, line: 4704, type: !7239)
!10584 = !DILocalVariable(name: "overwrite", scope: !10572, file: !3, line: 4705, type: !14)
!10585 = !DILocation(line: 4694, column: 41, scope: !10572)
!10586 = !DILocation(line: 4696, column: 5, scope: !10572)
!10587 = !DILocation(line: 4696, column: 19, scope: !10572)
!10588 = !DILocation(line: 4697, column: 5, scope: !10572)
!10589 = !DILocation(line: 4697, column: 19, scope: !10572)
!10590 = !DILocation(line: 4698, column: 5, scope: !10572)
!10591 = !DILocation(line: 4698, column: 27, scope: !10572)
!10592 = !DILocation(line: 4699, column: 5, scope: !10572)
!10593 = !DILocation(line: 4699, column: 30, scope: !10572)
!10594 = !DILocation(line: 4699, column: 46, scope: !10572)
!10595 = !DILocation(line: 4700, column: 5, scope: !10572)
!10596 = !DILocation(line: 4700, column: 17, scope: !10572)
!10597 = !DILocation(line: 4701, column: 5, scope: !10572)
!10598 = !DILocation(line: 4701, column: 16, scope: !10572)
!10599 = !DILocation(line: 4702, column: 5, scope: !10572)
!10600 = !DILocation(line: 4702, column: 16, scope: !10572)
!10601 = !DILocation(line: 4703, column: 5, scope: !10572)
!10602 = !DILocation(line: 4703, column: 19, scope: !10572)
!10603 = !DILocation(line: 4704, column: 5, scope: !10572)
!10604 = !DILocation(line: 4704, column: 23, scope: !10572)
!10605 = !DILocation(line: 4705, column: 5, scope: !10572)
!10606 = !DILocation(line: 4705, column: 9, scope: !10572)
!10607 = !DILocation(line: 4708, column: 9, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4708, column: 9)
!10609 = !DILocation(line: 4708, column: 23, scope: !10608)
!10610 = !DILocation(line: 4708, column: 9, scope: !10572)
!10611 = !DILocation(line: 4709, column: 9, scope: !10608)
!10612 = !DILocation(line: 4712, column: 28, scope: !10572)
!10613 = !DILocation(line: 4712, column: 11, scope: !10572)
!10614 = !DILocation(line: 4712, column: 9, scope: !10572)
!10615 = !DILocation(line: 4714, column: 9, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4714, column: 9)
!10617 = !DILocation(line: 4714, column: 13, scope: !10616)
!10618 = !DILocation(line: 4714, column: 9, scope: !10572)
!10619 = !DILocation(line: 4715, column: 31, scope: !10616)
!10620 = !DILocation(line: 4715, column: 34, scope: !10616)
!10621 = !DILocation(line: 4715, column: 16, scope: !10616)
!10622 = !DILocation(line: 4715, column: 9, scope: !10616)
!10623 = !DILocation(line: 4718, column: 37, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4718, column: 9)
!10625 = !DILocation(line: 4718, column: 40, scope: !10624)
!10626 = !DILocation(line: 4718, column: 9, scope: !10624)
!10627 = !DILocation(line: 4718, column: 68, scope: !10624)
!10628 = !DILocation(line: 4719, column: 13, scope: !10624)
!10629 = !DILocation(line: 4719, column: 16, scope: !10624)
!10630 = !DILocation(line: 4718, column: 9, scope: !10572)
!10631 = !DILocation(line: 4720, column: 31, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 4719, column: 21)
!10633 = !DILocation(line: 4720, column: 34, scope: !10632)
!10634 = !DILocation(line: 4720, column: 16, scope: !10632)
!10635 = !DILocation(line: 4720, column: 9, scope: !10632)
!10636 = !DILocation(line: 4723, column: 10, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4723, column: 9)
!10638 = !DILocation(line: 4723, column: 20, scope: !10637)
!10639 = !DILocation(line: 4723, column: 9, scope: !10572)
!10640 = !DILocation(line: 4725, column: 9, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 4723, column: 28)
!10642 = !DILocation(line: 4729, column: 26, scope: !10572)
!10643 = !DILocation(line: 4729, column: 29, scope: !10572)
!10644 = !DILocation(line: 4729, column: 12, scope: !10572)
!10645 = !DILocation(line: 4729, column: 10, scope: !10572)
!10646 = !DILocation(line: 4730, column: 9, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4730, column: 9)
!10648 = !DILocation(line: 4730, column: 14, scope: !10647)
!10649 = !DILocation(line: 4730, column: 9, scope: !10572)
!10650 = !DILocation(line: 4732, column: 9, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 4730, column: 23)
!10652 = !DILocation(line: 4732, column: 9, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 4732, column: 9)
!10654 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 4732, column: 9)
!10655 = !DILocation(line: 4732, column: 9, scope: !10654)
!10656 = !DILocation(line: 4734, column: 9, scope: !10651)
!10657 = !DILocation(line: 4737, column: 14, scope: !10572)
!10658 = !DILocation(line: 4737, column: 29, scope: !10572)
!10659 = !DILocation(line: 4737, column: 35, scope: !10572)
!10660 = !DILocation(line: 4738, column: 16, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4738, column: 9)
!10662 = !DILocation(line: 4738, column: 21, scope: !10661)
!10663 = !DILocation(line: 4738, column: 9, scope: !10572)
!10664 = !DILocation(line: 4739, column: 20, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 4739, column: 13)
!10666 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 4738, column: 30)
!10667 = !DILocation(line: 4739, column: 24, scope: !10665)
!10668 = !DILocation(line: 4739, column: 31, scope: !10665)
!10669 = !DILocation(line: 4739, column: 13, scope: !10666)
!10670 = !DILocation(line: 4741, column: 13, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 4739, column: 52)
!10672 = !DILocation(line: 4741, column: 13, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 4741, column: 13)
!10674 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 4741, column: 13)
!10675 = !DILocation(line: 4741, column: 13, scope: !10674)
!10676 = !DILocation(line: 4743, column: 13, scope: !10671)
!10677 = !DILocation(line: 4745, column: 25, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 4745, column: 18)
!10679 = !DILocation(line: 4745, column: 29, scope: !10678)
!10680 = !DILocation(line: 4745, column: 36, scope: !10678)
!10681 = !DILocation(line: 4745, column: 18, scope: !10665)
!10682 = !DILocation(line: 4751, column: 40, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 4745, column: 57)
!10684 = !DILocation(line: 4751, column: 21, scope: !10683)
!10685 = !DILocation(line: 4751, column: 14, scope: !10683)
!10686 = !DILocation(line: 4759, column: 35, scope: !10666)
!10687 = !DILocation(line: 4759, column: 45, scope: !10666)
!10688 = !DILocation(line: 4759, column: 49, scope: !10666)
!10689 = !DILocation(line: 4759, column: 64, scope: !10666)
!10690 = !DILocation(line: 4759, column: 68, scope: !10666)
!10691 = !DILocation(line: 4759, column: 16, scope: !10666)
!10692 = !DILocation(line: 4759, column: 9, scope: !10666)
!10693 = !DILocation(line: 4761, column: 16, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4761, column: 9)
!10695 = !DILocation(line: 4761, column: 22, scope: !10694)
!10696 = !DILocation(line: 4761, column: 29, scope: !10694)
!10697 = !DILocation(line: 4761, column: 9, scope: !10572)
!10698 = !DILocation(line: 4763, column: 35, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 4761, column: 41)
!10700 = !DILocation(line: 4763, column: 45, scope: !10699)
!10701 = !DILocation(line: 4763, column: 51, scope: !10699)
!10702 = !DILocation(line: 4763, column: 16, scope: !10699)
!10703 = !DILocation(line: 4763, column: 9, scope: !10699)
!10704 = !DILocation(line: 4768, column: 35, scope: !10572)
!10705 = !DILocation(line: 4768, column: 11, scope: !10572)
!10706 = !DILocation(line: 4768, column: 9, scope: !10572)
!10707 = !DILocation(line: 4770, column: 9, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4770, column: 9)
!10709 = !DILocation(line: 4770, column: 13, scope: !10708)
!10710 = !DILocation(line: 4770, column: 9, scope: !10572)
!10711 = !DILocation(line: 4771, column: 31, scope: !10708)
!10712 = !DILocation(line: 4771, column: 34, scope: !10708)
!10713 = !DILocation(line: 4771, column: 16, scope: !10708)
!10714 = !DILocation(line: 4771, column: 9, scope: !10708)
!10715 = !DILocation(line: 4774, column: 37, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4774, column: 9)
!10717 = !DILocation(line: 4774, column: 40, scope: !10716)
!10718 = !DILocation(line: 4774, column: 50, scope: !10716)
!10719 = !DILocation(line: 4774, column: 9, scope: !10716)
!10720 = !DILocation(line: 4774, column: 71, scope: !10716)
!10721 = !DILocation(line: 4775, column: 13, scope: !10716)
!10722 = !DILocation(line: 4775, column: 16, scope: !10716)
!10723 = !DILocation(line: 4774, column: 9, scope: !10572)
!10724 = !DILocation(line: 4776, column: 31, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 4775, column: 21)
!10726 = !DILocation(line: 4776, column: 34, scope: !10725)
!10727 = !DILocation(line: 4776, column: 16, scope: !10725)
!10728 = !DILocation(line: 4776, column: 9, scope: !10725)
!10729 = !DILocation(line: 4780, column: 9, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4780, column: 9)
!10731 = !DILocation(line: 4780, column: 19, scope: !10730)
!10732 = !DILocation(line: 4780, column: 28, scope: !10730)
!10733 = !DILocation(line: 4780, column: 37, scope: !10730)
!10734 = !DILocation(line: 4780, column: 25, scope: !10730)
!10735 = !DILocation(line: 4780, column: 9, scope: !10572)
!10736 = !DILocation(line: 4782, column: 35, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 4780, column: 44)
!10738 = !DILocation(line: 4782, column: 16, scope: !10737)
!10739 = !DILocation(line: 4782, column: 9, scope: !10737)
!10740 = !DILocation(line: 4789, column: 40, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4789, column: 9)
!10742 = !DILocation(line: 4789, column: 22, scope: !10741)
!10743 = !DILocation(line: 4789, column: 20, scope: !10741)
!10744 = !DILocation(line: 4789, column: 44, scope: !10741)
!10745 = !DILocation(line: 4789, column: 9, scope: !10572)
!10746 = !DILocation(line: 4792, column: 9, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 4789, column: 49)
!10748 = !DILocation(line: 4796, column: 9, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4796, column: 9)
!10750 = !DILocation(line: 4796, column: 18, scope: !10749)
!10751 = !DILocation(line: 4796, column: 25, scope: !10749)
!10752 = !DILocation(line: 4796, column: 29, scope: !10749)
!10753 = !DILocation(line: 4796, column: 9, scope: !10572)
!10754 = !DILocation(line: 4797, column: 35, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 4796, column: 40)
!10756 = !DILocation(line: 4797, column: 16, scope: !10755)
!10757 = !DILocation(line: 4797, column: 9, scope: !10755)
!10758 = !DILocation(line: 4803, column: 11, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4803, column: 9)
!10760 = !DILocation(line: 4803, column: 21, scope: !10759)
!10761 = !DILocation(line: 4803, column: 28, scope: !10759)
!10762 = !DILocation(line: 4803, column: 46, scope: !10759)
!10763 = !DILocation(line: 4803, column: 56, scope: !10759)
!10764 = !DILocation(line: 4803, column: 9, scope: !10759)
!10765 = !DILocation(line: 4803, column: 9, scope: !10572)
!10766 = !DILocation(line: 4804, column: 35, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 4803, column: 66)
!10768 = !DILocation(line: 4804, column: 16, scope: !10767)
!10769 = !DILocation(line: 4804, column: 9, scope: !10767)
!10770 = !DILocation(line: 4818, column: 44, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4818, column: 9)
!10772 = !DILocation(line: 4818, column: 50, scope: !10771)
!10773 = !DILocation(line: 4818, column: 16, scope: !10771)
!10774 = !DILocation(line: 4818, column: 14, scope: !10771)
!10775 = !DILocation(line: 4821, column: 68, scope: !10771)
!10776 = !DILocation(line: 4818, column: 9, scope: !10572)
!10777 = !DILocation(line: 4822, column: 30, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 4821, column: 77)
!10779 = !DILocation(line: 4822, column: 33, scope: !10778)
!10780 = !DILocation(line: 4822, column: 39, scope: !10778)
!10781 = !DILocation(line: 4822, column: 44, scope: !10778)
!10782 = !DILocation(line: 4823, column: 43, scope: !10778)
!10783 = !DILocation(line: 4823, column: 46, scope: !10778)
!10784 = !DILocation(line: 4827, column: 43, scope: !10778)
!10785 = !DILocation(line: 4823, column: 30, scope: !10778)
!10786 = !DILocation(line: 4828, column: 30, scope: !10778)
!10787 = !DILocation(line: 4822, column: 15, scope: !10778)
!10788 = !DILocation(line: 4822, column: 13, scope: !10778)
!10789 = !DILocation(line: 4829, column: 31, scope: !10778)
!10790 = !DILocation(line: 4829, column: 34, scope: !10778)
!10791 = !DILocation(line: 4829, column: 39, scope: !10778)
!10792 = !DILocation(line: 4829, column: 16, scope: !10778)
!10793 = !DILocation(line: 4829, column: 9, scope: !10778)
!10794 = !DILocation(line: 4833, column: 9, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4833, column: 9)
!10796 = !DILocation(line: 4833, column: 19, scope: !10795)
!10797 = !DILocation(line: 4834, column: 9, scope: !10795)
!10798 = !DILocation(line: 4834, column: 14, scope: !10795)
!10799 = !DILocation(line: 4834, column: 24, scope: !10795)
!10800 = !DILocation(line: 4834, column: 31, scope: !10795)
!10801 = !DILocation(line: 4834, column: 51, scope: !10795)
!10802 = !DILocation(line: 4834, column: 61, scope: !10795)
!10803 = !DILocation(line: 4834, column: 12, scope: !10795)
!10804 = !DILocation(line: 4833, column: 9, scope: !10572)
!10805 = !DILocation(line: 4835, column: 35, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 4834, column: 71)
!10807 = !DILocation(line: 4835, column: 16, scope: !10806)
!10808 = !DILocation(line: 4835, column: 9, scope: !10806)
!10809 = !DILocation(line: 4838, column: 9, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4838, column: 9)
!10811 = !DILocation(line: 4838, column: 19, scope: !10810)
!10812 = !DILocation(line: 4839, column: 9, scope: !10810)
!10813 = !DILocation(line: 4839, column: 14, scope: !10810)
!10814 = !DILocation(line: 4839, column: 24, scope: !10810)
!10815 = !DILocation(line: 4839, column: 31, scope: !10810)
!10816 = !DILocation(line: 4839, column: 51, scope: !10810)
!10817 = !DILocation(line: 4839, column: 60, scope: !10810)
!10818 = !DILocation(line: 4839, column: 12, scope: !10810)
!10819 = !DILocation(line: 4838, column: 9, scope: !10572)
!10820 = !DILocation(line: 4846, column: 35, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 4839, column: 71)
!10822 = !DILocation(line: 4846, column: 16, scope: !10821)
!10823 = !DILocation(line: 4846, column: 9, scope: !10821)
!10824 = !DILocation(line: 4852, column: 34, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4852, column: 9)
!10826 = !DILocation(line: 4852, column: 37, scope: !10825)
!10827 = !DILocation(line: 4852, column: 16, scope: !10825)
!10828 = !DILocation(line: 4852, column: 14, scope: !10825)
!10829 = !DILocation(line: 4853, column: 45, scope: !10825)
!10830 = !DILocation(line: 4852, column: 9, scope: !10572)
!10831 = !DILocation(line: 4855, column: 31, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 4853, column: 54)
!10833 = !DILocation(line: 4855, column: 34, scope: !10832)
!10834 = !DILocation(line: 4855, column: 16, scope: !10832)
!10835 = !DILocation(line: 4855, column: 9, scope: !10832)
!10836 = !DILocation(line: 4861, column: 9, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4861, column: 9)
!10838 = !DILocation(line: 4861, column: 18, scope: !10837)
!10839 = !DILocation(line: 4861, column: 9, scope: !10572)
!10840 = !DILocation(line: 4862, column: 17, scope: !10837)
!10841 = !DILocation(line: 4862, column: 27, scope: !10837)
!10842 = !DILocation(line: 4862, column: 34, scope: !10837)
!10843 = !DILocation(line: 4862, column: 51, scope: !10837)
!10844 = !DILocation(line: 4862, column: 15, scope: !10837)
!10845 = !DILocation(line: 4862, column: 13, scope: !10837)
!10846 = !DILocation(line: 4862, column: 9, scope: !10837)
!10847 = !DILocation(line: 4864, column: 9, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4864, column: 9)
!10849 = !DILocation(line: 4864, column: 13, scope: !10848)
!10850 = !DILocation(line: 4864, column: 9, scope: !10572)
!10851 = !DILocation(line: 4865, column: 17, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10848, file: !3, line: 4864, column: 22)
!10853 = !DILocation(line: 4865, column: 32, scope: !10852)
!10854 = !{!6055, !2417, i64 8}
!10855 = !DILocation(line: 4865, column: 47, scope: !10852)
!10856 = !DILocation(line: 4865, column: 57, scope: !10852)
!10857 = !DILocation(line: 4865, column: 15, scope: !10852)
!10858 = !DILocation(line: 4865, column: 13, scope: !10852)
!10859 = !DILocation(line: 4866, column: 5, scope: !10852)
!10860 = !DILocation(line: 4869, column: 29, scope: !10572)
!10861 = !DILocation(line: 4870, column: 29, scope: !10572)
!10862 = !DILocation(line: 4870, column: 33, scope: !10572)
!10863 = !DILocation(line: 4869, column: 12, scope: !10572)
!10864 = !DILocation(line: 4869, column: 10, scope: !10572)
!10865 = !DILocation(line: 4874, column: 9, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4874, column: 9)
!10867 = !DILocation(line: 4874, column: 13, scope: !10866)
!10868 = !DILocation(line: 4874, column: 9, scope: !10572)
!10869 = !DILocation(line: 4875, column: 30, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 4874, column: 22)
!10871 = !DILocation(line: 4875, column: 33, scope: !10870)
!10872 = !DILocation(line: 4875, column: 39, scope: !10870)
!10873 = !DILocation(line: 4875, column: 44, scope: !10870)
!10874 = !DILocation(line: 4876, column: 43, scope: !10870)
!10875 = !DILocation(line: 4876, column: 46, scope: !10870)
!10876 = !DILocation(line: 4878, column: 43, scope: !10870)
!10877 = !DILocation(line: 4876, column: 30, scope: !10870)
!10878 = !DILocation(line: 4879, column: 30, scope: !10870)
!10879 = !DILocation(line: 4875, column: 15, scope: !10870)
!10880 = !DILocation(line: 4875, column: 13, scope: !10870)
!10881 = !DILocation(line: 4880, column: 31, scope: !10870)
!10882 = !DILocation(line: 4880, column: 34, scope: !10870)
!10883 = !DILocation(line: 4880, column: 39, scope: !10870)
!10884 = !DILocation(line: 4880, column: 16, scope: !10870)
!10885 = !DILocation(line: 4880, column: 9, scope: !10870)
!10886 = !DILocation(line: 4884, column: 9, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 4884, column: 9)
!10888 = !DILocation(line: 4884, column: 14, scope: !10887)
!10889 = !DILocation(line: 4884, column: 9, scope: !10572)
!10890 = !DILocation(line: 4886, column: 30, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 4884, column: 23)
!10892 = !DILocation(line: 4886, column: 33, scope: !10891)
!10893 = !DILocation(line: 4886, column: 39, scope: !10891)
!10894 = !DILocation(line: 4886, column: 45, scope: !10891)
!10895 = !DILocation(line: 4890, column: 30, scope: !10891)
!10896 = !DILocation(line: 4886, column: 15, scope: !10891)
!10897 = !DILocation(line: 4886, column: 13, scope: !10891)
!10898 = !DILocation(line: 4891, column: 21, scope: !10891)
!10899 = !DILocation(line: 4891, column: 24, scope: !10891)
!10900 = !DILocation(line: 4891, column: 9, scope: !10891)
!10901 = !DILocation(line: 4892, column: 5, scope: !10891)
!10902 = !DILocation(line: 4896, column: 24, scope: !10572)
!10903 = !DILocation(line: 4896, column: 34, scope: !10572)
!10904 = !DILocation(line: 4896, column: 40, scope: !10572)
!10905 = !DILocation(line: 4896, column: 12, scope: !10572)
!10906 = !DILocation(line: 4896, column: 5, scope: !10572)
!10907 = !DILocation(line: 4897, column: 1, scope: !10572)
!10908 = distinct !DISubprogram(name: "dav_method_search", scope: !3, file: !3, line: 1607, type: !4262, scopeLine: 1608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10909)
!10909 = !{!10910, !10911, !10912, !10913, !10914}
!10910 = !DILocalVariable(name: "r", arg: 1, scope: !10908, file: !3, line: 1607, type: !286)
!10911 = !DILocalVariable(name: "search_hooks", scope: !10908, file: !3, line: 1609, type: !1301)
!10912 = !DILocalVariable(name: "resource", scope: !10908, file: !3, line: 1610, type: !776)
!10913 = !DILocalVariable(name: "err", scope: !10908, file: !3, line: 1611, type: !272)
!10914 = !DILocalVariable(name: "multi_status", scope: !10908, file: !3, line: 1612, type: !826)
!10915 = !DILocation(line: 1607, column: 43, scope: !10908)
!10916 = !DILocation(line: 1609, column: 5, scope: !10908)
!10917 = !DILocation(line: 1609, column: 29, scope: !10908)
!10918 = !DILocation(line: 1609, column: 44, scope: !10908)
!10919 = !DILocation(line: 1610, column: 5, scope: !10908)
!10920 = !DILocation(line: 1610, column: 19, scope: !10908)
!10921 = !DILocation(line: 1611, column: 5, scope: !10908)
!10922 = !DILocation(line: 1611, column: 16, scope: !10908)
!10923 = !DILocation(line: 1612, column: 5, scope: !10908)
!10924 = !DILocation(line: 1612, column: 19, scope: !10908)
!10925 = !DILocation(line: 1615, column: 9, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1615, column: 9)
!10927 = !DILocation(line: 1615, column: 22, scope: !10926)
!10928 = !DILocation(line: 1615, column: 9, scope: !10908)
!10929 = !DILocation(line: 1616, column: 9, scope: !10926)
!10930 = !DILocation(line: 1622, column: 28, scope: !10908)
!10931 = !DILocation(line: 1622, column: 11, scope: !10908)
!10932 = !DILocation(line: 1622, column: 9, scope: !10908)
!10933 = !DILocation(line: 1624, column: 9, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1624, column: 9)
!10935 = !DILocation(line: 1624, column: 13, scope: !10934)
!10936 = !DILocation(line: 1624, column: 9, scope: !10908)
!10937 = !DILocation(line: 1625, column: 31, scope: !10934)
!10938 = !DILocation(line: 1625, column: 34, scope: !10934)
!10939 = !DILocation(line: 1625, column: 16, scope: !10934)
!10940 = !DILocation(line: 1625, column: 9, scope: !10934)
!10941 = !DILocation(line: 1627, column: 10, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1627, column: 9)
!10943 = !DILocation(line: 1627, column: 20, scope: !10942)
!10944 = !DILocation(line: 1627, column: 9, scope: !10908)
!10945 = !DILocation(line: 1629, column: 9, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 1627, column: 28)
!10947 = !DILocation(line: 1633, column: 18, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1633, column: 9)
!10949 = !DILocation(line: 1633, column: 28, scope: !10948)
!10950 = !DILocation(line: 1633, column: 35, scope: !10948)
!10951 = !DILocation(line: 1633, column: 48, scope: !10948)
!10952 = !DILocation(line: 1633, column: 51, scope: !10948)
!10953 = !DILocation(line: 1633, column: 16, scope: !10948)
!10954 = !DILocation(line: 1633, column: 14, scope: !10948)
!10955 = !DILocation(line: 1633, column: 62, scope: !10948)
!10956 = !DILocation(line: 1633, column: 9, scope: !10908)
!10957 = !DILocation(line: 1634, column: 30, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 1633, column: 71)
!10959 = !DILocation(line: 1634, column: 33, scope: !10958)
!10960 = !DILocation(line: 1634, column: 39, scope: !10958)
!10961 = !DILocation(line: 1634, column: 44, scope: !10958)
!10962 = !DILocation(line: 1636, column: 30, scope: !10958)
!10963 = !DILocation(line: 1634, column: 15, scope: !10958)
!10964 = !DILocation(line: 1634, column: 13, scope: !10958)
!10965 = !DILocation(line: 1637, column: 31, scope: !10958)
!10966 = !DILocation(line: 1637, column: 34, scope: !10958)
!10967 = !DILocation(line: 1637, column: 16, scope: !10958)
!10968 = !DILocation(line: 1637, column: 9, scope: !10958)
!10969 = !DILocation(line: 1640, column: 9, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1640, column: 9)
!10971 = !DILocation(line: 1640, column: 12, scope: !10970)
!10972 = !DILocation(line: 1640, column: 9, scope: !10908)
!10973 = !DILocation(line: 1641, column: 9, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 1640, column: 25)
!10975 = !DILocation(line: 1648, column: 18, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 1648, column: 9)
!10977 = !DILocation(line: 1648, column: 32, scope: !10976)
!10978 = !{!6224, !2417, i64 8}
!10979 = !DILocation(line: 1648, column: 49, scope: !10976)
!10980 = !DILocation(line: 1648, column: 16, scope: !10976)
!10981 = !DILocation(line: 1648, column: 14, scope: !10976)
!10982 = !DILocation(line: 1648, column: 68, scope: !10976)
!10983 = !DILocation(line: 1648, column: 9, scope: !10908)
!10984 = !DILocation(line: 1650, column: 31, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 1648, column: 77)
!10986 = !DILocation(line: 1650, column: 34, scope: !10985)
!10987 = !DILocation(line: 1650, column: 16, scope: !10985)
!10988 = !DILocation(line: 1650, column: 9, scope: !10985)
!10989 = !DILocation(line: 1655, column: 26, scope: !10908)
!10990 = !DILocation(line: 1655, column: 48, scope: !10908)
!10991 = !DILocation(line: 1655, column: 5, scope: !10908)
!10992 = !DILocation(line: 1657, column: 5, scope: !10908)
!10993 = !DILocation(line: 1658, column: 1, scope: !10908)
!10994 = !DISubprogram(name: "ap_rvputs", scope: !2667, file: !2667, line: 507, type: !10995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!14, !286, null}
!10997 = !DISubprogram(name: "ap_psignature", scope: !107, file: !107, line: 2314, type: !10998, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10998 = !DISubroutineType(types: !10999)
!10999 = !{!10, !10, !286}
!11000 = !DISubprogram(name: "ap_meets_conditions", scope: !2667, file: !2667, line: 308, type: !4262, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11001 = !DISubprogram(name: "dav_get_resource_state", scope: !141, file: !141, line: 1467, type: !11002, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11002 = !DISubroutineType(types: !11003)
!11003 = !{!14, !286, !747}
!11004 = !DISubprogram(name: "dav_validate_request", scope: !141, file: !141, line: 1443, type: !11005, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{!272, !286, !776, !14, !894, !825, !14, !875}
!11007 = distinct !DISubprogram(name: "dav_parse_range", scope: !3, file: !3, line: 821, type: !11008, scopeLine: 823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11011)
!11008 = !DISubroutineType(types: !11009)
!11009 = !{!14, !286, !11010, !11010}
!11010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!11011 = !{!11012, !11013, !11014, !11015, !11016, !11017, !11018, !11019}
!11012 = !DILocalVariable(name: "r", arg: 1, scope: !11007, file: !3, line: 821, type: !286)
!11013 = !DILocalVariable(name: "range_start", arg: 2, scope: !11007, file: !3, line: 822, type: !11010)
!11014 = !DILocalVariable(name: "range_end", arg: 3, scope: !11007, file: !3, line: 822, type: !11010)
!11015 = !DILocalVariable(name: "range_c", scope: !11007, file: !3, line: 824, type: !10)
!11016 = !DILocalVariable(name: "range", scope: !11007, file: !3, line: 825, type: !216)
!11017 = !DILocalVariable(name: "dash", scope: !11007, file: !3, line: 826, type: !216)
!11018 = !DILocalVariable(name: "slash", scope: !11007, file: !3, line: 827, type: !216)
!11019 = !DILocalVariable(name: "dummy", scope: !11020, file: !3, line: 853, type: !49)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 852, column: 24)
!11021 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 852, column: 9)
!11022 = !DILocation(line: 821, column: 41, scope: !11007)
!11023 = !DILocation(line: 822, column: 39, scope: !11007)
!11024 = !DILocation(line: 822, column: 63, scope: !11007)
!11025 = !DILocation(line: 824, column: 5, scope: !11007)
!11026 = !DILocation(line: 824, column: 17, scope: !11007)
!11027 = !DILocation(line: 825, column: 5, scope: !11007)
!11028 = !DILocation(line: 825, column: 11, scope: !11007)
!11029 = !DILocation(line: 826, column: 5, scope: !11007)
!11030 = !DILocation(line: 826, column: 11, scope: !11007)
!11031 = !DILocation(line: 827, column: 5, scope: !11007)
!11032 = !DILocation(line: 827, column: 11, scope: !11007)
!11033 = !DILocation(line: 829, column: 29, scope: !11007)
!11034 = !DILocation(line: 829, column: 32, scope: !11007)
!11035 = !DILocation(line: 829, column: 15, scope: !11007)
!11036 = !DILocation(line: 829, column: 13, scope: !11007)
!11037 = !DILocation(line: 830, column: 9, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 830, column: 9)
!11039 = !DILocation(line: 830, column: 17, scope: !11038)
!11040 = !DILocation(line: 830, column: 9, scope: !11007)
!11041 = !DILocation(line: 831, column: 9, scope: !11038)
!11042 = !DILocation(line: 833, column: 25, scope: !11007)
!11043 = !DILocation(line: 833, column: 28, scope: !11007)
!11044 = !DILocation(line: 833, column: 34, scope: !11007)
!11045 = !DILocation(line: 833, column: 13, scope: !11007)
!11046 = !DILocation(line: 833, column: 11, scope: !11007)
!11047 = !DILocation(line: 834, column: 26, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 834, column: 9)
!11049 = !DILocation(line: 834, column: 9, scope: !11048)
!11050 = !DILocation(line: 834, column: 46, scope: !11048)
!11051 = !DILocation(line: 835, column: 9, scope: !11048)
!11052 = !DILocation(line: 835, column: 20, scope: !11048)
!11053 = !DILocation(line: 835, column: 18, scope: !11048)
!11054 = !DILocation(line: 835, column: 47, scope: !11048)
!11055 = !DILocation(line: 836, column: 9, scope: !11048)
!11056 = !DILocation(line: 836, column: 21, scope: !11048)
!11057 = !DILocation(line: 836, column: 19, scope: !11048)
!11058 = !DILocation(line: 836, column: 48, scope: !11048)
!11059 = !DILocation(line: 834, column: 9, scope: !11007)
!11060 = !DILocation(line: 838, column: 9, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 836, column: 57)
!11062 = !DILocation(line: 841, column: 21, scope: !11007)
!11063 = !DILocation(line: 841, column: 24, scope: !11007)
!11064 = !DILocation(line: 841, column: 10, scope: !11007)
!11065 = !DILocation(line: 841, column: 13, scope: !11007)
!11066 = !DILocation(line: 844, column: 33, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 844, column: 9)
!11068 = !DILocation(line: 844, column: 46, scope: !11067)
!11069 = !DILocation(line: 844, column: 52, scope: !11067)
!11070 = !DILocation(line: 844, column: 10, scope: !11067)
!11071 = !DILocation(line: 844, column: 9, scope: !11007)
!11072 = !DILocation(line: 845, column: 9, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11067, file: !3, line: 844, column: 58)
!11074 = !DILocation(line: 847, column: 33, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 847, column: 9)
!11076 = !DILocation(line: 847, column: 44, scope: !11075)
!11077 = !DILocation(line: 847, column: 10, scope: !11075)
!11078 = !DILocation(line: 848, column: 13, scope: !11075)
!11079 = !DILocation(line: 848, column: 17, scope: !11075)
!11080 = !DILocation(line: 848, column: 16, scope: !11075)
!11081 = !DILocation(line: 848, column: 30, scope: !11075)
!11082 = !DILocation(line: 848, column: 29, scope: !11075)
!11083 = !DILocation(line: 848, column: 27, scope: !11075)
!11084 = !DILocation(line: 847, column: 9, scope: !11007)
!11085 = !DILocation(line: 849, column: 9, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 848, column: 43)
!11087 = !DILocation(line: 852, column: 10, scope: !11021)
!11088 = !DILocation(line: 852, column: 9, scope: !11021)
!11089 = !DILocation(line: 852, column: 16, scope: !11021)
!11090 = !DILocation(line: 852, column: 9, scope: !11007)
!11091 = !DILocation(line: 853, column: 9, scope: !11020)
!11092 = !DILocation(line: 853, column: 19, scope: !11020)
!11093 = !DILocation(line: 855, column: 45, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 855, column: 13)
!11095 = !DILocation(line: 855, column: 14, scope: !11094)
!11096 = !DILocation(line: 856, column: 17, scope: !11094)
!11097 = !DILocation(line: 856, column: 20, scope: !11094)
!11098 = !DILocation(line: 856, column: 30, scope: !11094)
!11099 = !DILocation(line: 856, column: 29, scope: !11094)
!11100 = !DILocation(line: 856, column: 26, scope: !11094)
!11101 = !DILocation(line: 855, column: 13, scope: !11020)
!11102 = !DILocation(line: 857, column: 13, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11094, file: !3, line: 856, column: 41)
!11104 = !DILocation(line: 859, column: 5, scope: !11021)
!11105 = !DILocation(line: 859, column: 5, scope: !11020)
!11106 = !DILocation(line: 862, column: 5, scope: !11007)
!11107 = !DILocation(line: 863, column: 1, scope: !11007)
!11108 = !DISubprogram(name: "dav_auto_checkout", scope: !141, file: !141, line: 2218, type: !11109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11109 = !DISubroutineType(types: !11110)
!11110 = !{!272, !286, !776, !14, !11111}
!11111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!11112 = !DISubprogram(name: "ap_get_brigade", scope: !90, file: !90, line: 296, type: !517, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11113 = !DISubprogram(name: "ap_map_http_request_error", scope: !2667, file: !2667, line: 615, type: !11114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11114 = !DISubroutineType(types: !11115)
!11115 = !{!14, !25, !14}
!11116 = !DISubprogram(name: "apr_brigade_cleanup", scope: !6, file: !6, line: 681, type: !1629, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11117 = !DISubprogram(name: "apr_brigade_destroy", scope: !6, file: !6, line: 668, type: !11118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{!25, !503}
!11120 = !DISubprogram(name: "dav_join_error", scope: !141, file: !141, line: 186, type: !11121, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11121 = !DISubroutineType(types: !11122)
!11122 = !{!272, !272, !272}
!11123 = !DISubprogram(name: "dav_auto_checkin", scope: !141, file: !141, line: 2239, type: !11124, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11124 = !DISubroutineType(types: !11125)
!11125 = !{!272, !286, !776, !14, !14, !11111}
!11126 = !DISubprogram(name: "dav_notify_created", scope: !141, file: !141, line: 1433, type: !11127, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{!272, !286, !875, !747, !14, !14}
!11129 = distinct !DISubprogram(name: "dav_created", scope: !3, file: !3, line: 659, type: !11130, scopeLine: 661, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11132)
!11130 = !DISubroutineType(types: !11131)
!11131 = !{!14, !286, !10, !10, !14}
!11132 = !{!11133, !11134, !11135, !11136, !11137}
!11133 = !DILocalVariable(name: "r", arg: 1, scope: !11129, file: !3, line: 659, type: !286)
!11134 = !DILocalVariable(name: "locn", arg: 2, scope: !11129, file: !3, line: 659, type: !10)
!11135 = !DILocalVariable(name: "what", arg: 3, scope: !11129, file: !3, line: 659, type: !10)
!11136 = !DILocalVariable(name: "replaced", arg: 4, scope: !11129, file: !3, line: 660, type: !14)
!11137 = !DILocalVariable(name: "body", scope: !11129, file: !3, line: 662, type: !10)
!11138 = !DILocation(line: 659, column: 37, scope: !11129)
!11139 = !DILocation(line: 659, column: 52, scope: !11129)
!11140 = !DILocation(line: 659, column: 70, scope: !11129)
!11141 = !DILocation(line: 660, column: 28, scope: !11129)
!11142 = !DILocation(line: 662, column: 5, scope: !11129)
!11143 = !DILocation(line: 662, column: 17, scope: !11129)
!11144 = !DILocation(line: 664, column: 9, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 664, column: 9)
!11146 = !DILocation(line: 664, column: 14, scope: !11145)
!11147 = !DILocation(line: 664, column: 9, scope: !11129)
!11148 = !DILocation(line: 665, column: 16, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 664, column: 23)
!11150 = !DILocation(line: 665, column: 14, scope: !11149)
!11151 = !DILocation(line: 666, column: 5, scope: !11149)
!11152 = !DILocation(line: 669, column: 9, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 669, column: 9)
!11154 = !DILocation(line: 669, column: 9, scope: !11129)
!11155 = !DILocation(line: 671, column: 9, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 669, column: 19)
!11157 = !DILocation(line: 678, column: 20, scope: !11129)
!11158 = !DILocation(line: 678, column: 23, scope: !11129)
!11159 = !DILocation(line: 678, column: 65, scope: !11129)
!11160 = !DILocation(line: 678, column: 68, scope: !11129)
!11161 = !DILocation(line: 678, column: 74, scope: !11129)
!11162 = !DILocation(line: 678, column: 80, scope: !11129)
!11163 = !DILocation(line: 678, column: 48, scope: !11129)
!11164 = !DILocation(line: 678, column: 5, scope: !11129)
!11165 = !DILocation(line: 684, column: 24, scope: !11129)
!11166 = !DILocation(line: 684, column: 27, scope: !11129)
!11167 = !DILocation(line: 684, column: 33, scope: !11129)
!11168 = !DILocation(line: 684, column: 44, scope: !11129)
!11169 = !DILocation(line: 684, column: 12, scope: !11129)
!11170 = !DILocation(line: 684, column: 10, scope: !11129)
!11171 = !DILocation(line: 686, column: 31, scope: !11129)
!11172 = !DILocation(line: 686, column: 48, scope: !11129)
!11173 = !DILocation(line: 686, column: 12, scope: !11129)
!11174 = !DILocation(line: 686, column: 5, scope: !11129)
!11175 = !DILocation(line: 687, column: 1, scope: !11129)
!11176 = !DISubprogram(name: "ap_cstr_casecmpn", scope: !107, file: !107, line: 2562, type: !11177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11177 = !DISubroutineType(types: !11178)
!11178 = !{!14, !10, !10, !43}
!11179 = !DISubprogram(name: "ap_parse_strict_length", scope: !107, file: !107, line: 2140, type: !11180, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11180 = !DISubroutineType(types: !11181)
!11181 = !{!14, !11010, !10}
!11182 = !DISubprogram(name: "ap_construct_url", scope: !11183, file: !11183, line: 231, type: !11184, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11183 = !DIFile(filename: "include/http_core.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "7116b18b3c8f25f4572ebe871e6b69f9")
!11184 = !DISubroutineType(types: !11185)
!11185 = !{!216, !73, !10, !286}
!11186 = !DISubprogram(name: "apr_pstrcat", scope: !3242, file: !3242, line: 147, type: !11187, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11187 = !DISubroutineType(types: !11188)
!11188 = !{!216, !73, null}
!11189 = !DISubprogram(name: "ap_discard_request_body", scope: !2667, file: !2667, line: 627, type: !4262, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11190 = !DISubprogram(name: "dav_unlock", scope: !141, file: !141, line: 1426, type: !11191, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11191 = !DISubroutineType(types: !11192)
!11192 = !{!14, !286, !747, !901}
!11193 = !DISubprogram(name: "apr_table_make", scope: !452, file: !452, line: 232, type: !11194, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11194 = !DISubroutineType(types: !11195)
!11195 = !{!479, !73, !14}
!11196 = !DISubprogram(name: "ap_xml_parse_input", scope: !11197, file: !11197, line: 43, type: !11198, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11197 = !DIFile(filename: "include/util_xml.h", directory: "/local-ssd/httpd-bro7h6vxm4umjopi7zqm3u26chbfh465-build/aidengro/spack-stage-httpd-2.4.55-bro7h6vxm4umjopi7zqm3u26chbfh465/spack-src", checksumkind: CSK_MD5, checksum: "8670ea5ab3a8348988a085f4e47b9da5")
!11198 = !DISubroutineType(types: !11199)
!11199 = !{!14, !286, !11200}
!11200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!11201 = !DISubprogram(name: "dav_validate_root", scope: !141, file: !141, line: 578, type: !11202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11202 = !DISubroutineType(types: !11203)
!11203 = !{!14, !1070, !10}
!11204 = !DISubprogram(name: "ap_list_provider_names", scope: !1328, file: !1328, line: 81, type: !11205, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11205 = !DISubroutineType(types: !11206)
!11206 = !{!450, !73, !10, !10}
!11207 = !DISubprogram(name: "dav_get_options_providers", scope: !141, file: !141, line: 2638, type: !11208, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11208 = !DISubroutineType(types: !11209)
!11209 = !{!5602, !10}
!11210 = !DISubprogram(name: "apr_table_addn", scope: !452, file: !452, line: 360, type: !2975, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11211 = !DISubprogram(name: "apr_table_elts", scope: !452, file: !452, line: 98, type: !11212, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11212 = !DISubroutineType(types: !11213)
!11213 = !{!1169, !3128}
!11214 = !DISubprogram(name: "strcpy", scope: !2634, file: !2634, line: 141, type: !11215, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11215 = !DISubroutineType(types: !11216)
!11216 = !{!216, !11217, !4255}
!11217 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !216)
!11218 = !DISubprogram(name: "ap_set_content_length", scope: !2667, file: !2667, line: 138, type: !11219, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11219 = !DISubroutineType(types: !11220)
!11220 = !{null, !286, !49}
!11221 = distinct !DISubprogram(name: "dav_gen_supported_methods", scope: !3, file: !3, line: 1353, type: !11222, scopeLine: 1357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11224)
!11222 = !DISubroutineType(types: !11223)
!11223 = !{!272, !286, !1025, !3128, !1015}
!11224 = !{!11225, !11226, !11227, !11228, !11229, !11230, !11231, !11232, !11235, !11236, !11237}
!11225 = !DILocalVariable(name: "r", arg: 1, scope: !11221, file: !3, line: 1353, type: !286)
!11226 = !DILocalVariable(name: "elem", arg: 2, scope: !11221, file: !3, line: 1354, type: !1025)
!11227 = !DILocalVariable(name: "methods", arg: 3, scope: !11221, file: !3, line: 1355, type: !3128)
!11228 = !DILocalVariable(name: "body", arg: 4, scope: !11221, file: !3, line: 1356, type: !1015)
!11229 = !DILocalVariable(name: "arr", scope: !11221, file: !3, line: 1358, type: !1169)
!11230 = !DILocalVariable(name: "elts", scope: !11221, file: !3, line: 1359, type: !1332)
!11231 = !DILocalVariable(name: "child", scope: !11221, file: !3, line: 1360, type: !226)
!11232 = !DILocalVariable(name: "attr", scope: !11221, file: !3, line: 1361, type: !11233)
!11233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11234, size: 64)
!11234 = !DIDerivedType(tag: DW_TAG_typedef, name: "apr_xml_attr", file: !228, line: 141, baseType: !254)
!11235 = !DILocalVariable(name: "s", scope: !11221, file: !3, line: 1362, type: !216)
!11236 = !DILocalVariable(name: "i", scope: !11221, file: !3, line: 1363, type: !14)
!11237 = !DILocalVariable(name: "name", scope: !11238, file: !3, line: 1388, type: !10)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !3, line: 1387, column: 66)
!11239 = distinct !DILexicalBlock(scope: !11240, file: !3, line: 1386, column: 17)
!11240 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 1385, column: 77)
!11241 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 1385, column: 9)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 1385, column: 9)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 1383, column: 10)
!11244 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 1367, column: 9)
!11245 = !DILocation(line: 1353, column: 58, scope: !11221)
!11246 = !DILocation(line: 1354, column: 65, scope: !11221)
!11247 = !DILocation(line: 1355, column: 64, scope: !11221)
!11248 = !DILocation(line: 1356, column: 62, scope: !11221)
!11249 = !DILocation(line: 1358, column: 5, scope: !11221)
!11250 = !DILocation(line: 1358, column: 31, scope: !11221)
!11251 = !DILocation(line: 1359, column: 5, scope: !11221)
!11252 = !DILocation(line: 1359, column: 30, scope: !11221)
!11253 = !DILocation(line: 1360, column: 5, scope: !11221)
!11254 = !DILocation(line: 1360, column: 19, scope: !11221)
!11255 = !DILocation(line: 1361, column: 5, scope: !11221)
!11256 = !DILocation(line: 1361, column: 19, scope: !11221)
!11257 = !DILocation(line: 1362, column: 5, scope: !11221)
!11258 = !DILocation(line: 1362, column: 11, scope: !11221)
!11259 = !DILocation(line: 1363, column: 5, scope: !11221)
!11260 = !DILocation(line: 1363, column: 9, scope: !11221)
!11261 = !DILocation(line: 1365, column: 21, scope: !11221)
!11262 = !DILocation(line: 1365, column: 24, scope: !11221)
!11263 = !DILocation(line: 1365, column: 30, scope: !11221)
!11264 = !DILocation(line: 1365, column: 5, scope: !11221)
!11265 = !DILocation(line: 1367, column: 9, scope: !11244)
!11266 = !DILocation(line: 1367, column: 15, scope: !11244)
!11267 = !DILocation(line: 1367, column: 27, scope: !11244)
!11268 = !DILocation(line: 1367, column: 9, scope: !11221)
!11269 = !DILocation(line: 1369, column: 30, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 1367, column: 36)
!11271 = !DILocation(line: 1369, column: 15, scope: !11270)
!11272 = !DILocation(line: 1369, column: 13, scope: !11270)
!11273 = !DILocation(line: 1370, column: 43, scope: !11270)
!11274 = !DILocation(line: 1370, column: 48, scope: !11270)
!11275 = !DILocation(line: 1370, column: 14, scope: !11270)
!11276 = !DILocation(line: 1372, column: 16, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11270, file: !3, line: 1372, column: 9)
!11278 = !DILocation(line: 1372, column: 14, scope: !11277)
!11279 = !DILocation(line: 1372, column: 21, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 1372, column: 9)
!11281 = !DILocation(line: 1372, column: 25, scope: !11280)
!11282 = !DILocation(line: 1372, column: 30, scope: !11280)
!11283 = !DILocation(line: 1372, column: 23, scope: !11280)
!11284 = !DILocation(line: 1372, column: 9, scope: !11277)
!11285 = !DILocation(line: 1373, column: 17, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 1373, column: 17)
!11287 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 1372, column: 42)
!11288 = !DILocation(line: 1373, column: 22, scope: !11286)
!11289 = !DILocation(line: 1373, column: 25, scope: !11286)
!11290 = !DILocation(line: 1373, column: 29, scope: !11286)
!11291 = !DILocation(line: 1373, column: 17, scope: !11287)
!11292 = !DILocation(line: 1374, column: 17, scope: !11286)
!11293 = !DILocation(line: 1376, column: 29, scope: !11287)
!11294 = !DILocation(line: 1376, column: 32, scope: !11287)
!11295 = !DILocation(line: 1378, column: 29, scope: !11287)
!11296 = !DILocation(line: 1378, column: 34, scope: !11287)
!11297 = !DILocation(line: 1378, column: 37, scope: !11287)
!11298 = !DILocation(line: 1376, column: 17, scope: !11287)
!11299 = !DILocation(line: 1376, column: 15, scope: !11287)
!11300 = !DILocation(line: 1380, column: 29, scope: !11287)
!11301 = !DILocation(line: 1380, column: 32, scope: !11287)
!11302 = !DILocation(line: 1380, column: 38, scope: !11287)
!11303 = !DILocation(line: 1380, column: 44, scope: !11287)
!11304 = !DILocation(line: 1380, column: 13, scope: !11287)
!11305 = !DILocation(line: 1381, column: 9, scope: !11287)
!11306 = !DILocation(line: 1372, column: 37, scope: !11280)
!11307 = !DILocation(line: 1372, column: 9, scope: !11280)
!11308 = distinct !{!11308, !11284, !11309, !2563}
!11309 = !DILocation(line: 1381, column: 9, scope: !11277)
!11310 = !DILocation(line: 1382, column: 5, scope: !11270)
!11311 = !DILocation(line: 1385, column: 22, scope: !11242)
!11312 = !DILocation(line: 1385, column: 28, scope: !11242)
!11313 = !DILocation(line: 1385, column: 20, scope: !11242)
!11314 = !DILocation(line: 1385, column: 14, scope: !11242)
!11315 = !DILocation(line: 1385, column: 41, scope: !11241)
!11316 = !DILocation(line: 1385, column: 47, scope: !11241)
!11317 = !DILocation(line: 1385, column: 9, scope: !11242)
!11318 = !DILocation(line: 1386, column: 17, scope: !11239)
!11319 = !DILocation(line: 1386, column: 24, scope: !11239)
!11320 = !DILocation(line: 1386, column: 27, scope: !11239)
!11321 = !DILocation(line: 1387, column: 17, scope: !11239)
!11322 = !DILocation(line: 1387, column: 27, scope: !11239)
!11323 = !DILocation(line: 1387, column: 34, scope: !11239)
!11324 = !DILocation(line: 1387, column: 20, scope: !11239)
!11325 = !DILocation(line: 1387, column: 60, scope: !11239)
!11326 = !DILocation(line: 1386, column: 17, scope: !11240)
!11327 = !DILocation(line: 1388, column: 17, scope: !11238)
!11328 = !DILocation(line: 1388, column: 29, scope: !11238)
!11329 = !DILocation(line: 1391, column: 29, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 1391, column: 17)
!11331 = !DILocation(line: 1391, column: 36, scope: !11330)
!11332 = !{!6256, !2417, i64 80}
!11333 = !DILocation(line: 1391, column: 27, scope: !11330)
!11334 = !DILocation(line: 1391, column: 22, scope: !11330)
!11335 = !DILocation(line: 1391, column: 42, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 1391, column: 17)
!11337 = !DILocation(line: 1391, column: 47, scope: !11336)
!11338 = !DILocation(line: 1391, column: 17, scope: !11330)
!11339 = !DILocation(line: 1392, column: 25, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 1392, column: 25)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 1391, column: 75)
!11342 = !DILocation(line: 1392, column: 31, scope: !11340)
!11343 = !{!11344, !2426, i64 8}
!11344 = !{!"apr_xml_attr", !2417, i64 0, !2426, i64 8, !2417, i64 16, !2417, i64 24}
!11345 = !DILocation(line: 1392, column: 34, scope: !11340)
!11346 = !DILocation(line: 1393, column: 25, scope: !11340)
!11347 = !DILocation(line: 1393, column: 35, scope: !11340)
!11348 = !DILocation(line: 1393, column: 41, scope: !11340)
!11349 = !{!11344, !2417, i64 0}
!11350 = !DILocation(line: 1393, column: 28, scope: !11340)
!11351 = !DILocation(line: 1393, column: 55, scope: !11340)
!11352 = !DILocation(line: 1392, column: 25, scope: !11341)
!11353 = !DILocation(line: 1394, column: 36, scope: !11340)
!11354 = !DILocation(line: 1394, column: 42, scope: !11340)
!11355 = !{!11344, !2417, i64 16}
!11356 = !DILocation(line: 1394, column: 34, scope: !11340)
!11357 = !DILocation(line: 1394, column: 29, scope: !11340)
!11358 = !DILocation(line: 1395, column: 17, scope: !11341)
!11359 = !DILocation(line: 1391, column: 63, scope: !11336)
!11360 = !DILocation(line: 1391, column: 69, scope: !11336)
!11361 = !{!11344, !2417, i64 24}
!11362 = !DILocation(line: 1391, column: 61, scope: !11336)
!11363 = !DILocation(line: 1391, column: 17, scope: !11336)
!11364 = distinct !{!11364, !11338, !11365, !2563}
!11365 = !DILocation(line: 1395, column: 17, scope: !11330)
!11366 = !DILocation(line: 1397, column: 21, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 1397, column: 21)
!11368 = !DILocation(line: 1397, column: 26, scope: !11367)
!11369 = !DILocation(line: 1397, column: 21, scope: !11238)
!11370 = !DILocation(line: 1398, column: 42, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 1397, column: 35)
!11372 = !DILocation(line: 1398, column: 45, scope: !11371)
!11373 = !DILocation(line: 1398, column: 28, scope: !11371)
!11374 = !DILocation(line: 1398, column: 21, scope: !11371)
!11375 = !DILocation(line: 1404, column: 35, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 1404, column: 21)
!11377 = !DILocation(line: 1404, column: 44, scope: !11376)
!11378 = !DILocation(line: 1404, column: 21, scope: !11376)
!11379 = !DILocation(line: 1404, column: 50, scope: !11376)
!11380 = !DILocation(line: 1404, column: 21, scope: !11238)
!11381 = !DILocation(line: 1405, column: 37, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 1404, column: 59)
!11383 = !DILocation(line: 1405, column: 40, scope: !11382)
!11384 = !DILocation(line: 1407, column: 37, scope: !11382)
!11385 = !DILocation(line: 1405, column: 25, scope: !11382)
!11386 = !DILocation(line: 1405, column: 23, scope: !11382)
!11387 = !DILocation(line: 1408, column: 37, scope: !11382)
!11388 = !DILocation(line: 1408, column: 40, scope: !11382)
!11389 = !DILocation(line: 1408, column: 46, scope: !11382)
!11390 = !DILocation(line: 1408, column: 52, scope: !11382)
!11391 = !DILocation(line: 1408, column: 21, scope: !11382)
!11392 = !DILocation(line: 1409, column: 17, scope: !11382)
!11393 = !DILocation(line: 1410, column: 13, scope: !11239)
!11394 = !DILocation(line: 1410, column: 13, scope: !11238)
!11395 = !DILocation(line: 1411, column: 9, scope: !11240)
!11396 = !DILocation(line: 1385, column: 64, scope: !11241)
!11397 = !DILocation(line: 1385, column: 71, scope: !11241)
!11398 = !DILocation(line: 1385, column: 62, scope: !11241)
!11399 = !DILocation(line: 1385, column: 9, scope: !11241)
!11400 = distinct !{!11400, !11317, !11401, !2563}
!11401 = !DILocation(line: 1411, column: 9, scope: !11242)
!11402 = !DILocation(line: 1414, column: 21, scope: !11221)
!11403 = !DILocation(line: 1414, column: 24, scope: !11221)
!11404 = !DILocation(line: 1414, column: 30, scope: !11221)
!11405 = !DILocation(line: 1414, column: 5, scope: !11221)
!11406 = !DILocation(line: 1415, column: 5, scope: !11221)
!11407 = !DILocation(line: 1416, column: 1, scope: !11221)
!11408 = distinct !DISubprogram(name: "dav_gen_supported_live_props", scope: !3, file: !3, line: 1419, type: !11409, scopeLine: 1423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11411)
!11409 = !DISubroutineType(types: !11410)
!11410 = !{!272, !286, !747, !1025, !1015}
!11411 = !{!11412, !11413, !11414, !11415, !11416, !11417, !11418, !11419, !11420, !11421, !11424, !11431}
!11412 = !DILocalVariable(name: "r", arg: 1, scope: !11408, file: !3, line: 1419, type: !286)
!11413 = !DILocalVariable(name: "resource", arg: 2, scope: !11408, file: !3, line: 1420, type: !747)
!11414 = !DILocalVariable(name: "elem", arg: 3, scope: !11408, file: !3, line: 1421, type: !1025)
!11415 = !DILocalVariable(name: "body", arg: 4, scope: !11408, file: !3, line: 1422, type: !1015)
!11416 = !DILocalVariable(name: "lockdb", scope: !11408, file: !3, line: 1424, type: !875)
!11417 = !DILocalVariable(name: "propdb", scope: !11408, file: !3, line: 1425, type: !222)
!11418 = !DILocalVariable(name: "child", scope: !11408, file: !3, line: 1426, type: !226)
!11419 = !DILocalVariable(name: "attr", scope: !11408, file: !3, line: 1427, type: !11233)
!11420 = !DILocalVariable(name: "err", scope: !11408, file: !3, line: 1428, type: !272)
!11421 = !DILocalVariable(name: "props", scope: !11422, file: !3, line: 1455, type: !833)
!11422 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 1453, column: 36)
!11423 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1453, column: 9)
!11424 = !DILocalVariable(name: "name", scope: !11425, file: !3, line: 1465, type: !10)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !3, line: 1464, column: 73)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 1463, column: 17)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 1462, column: 77)
!11428 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 1462, column: 9)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 1462, column: 9)
!11430 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 1460, column: 10)
!11431 = !DILocalVariable(name: "nmspace", scope: !11425, file: !3, line: 1466, type: !10)
!11432 = !DILocation(line: 1419, column: 61, scope: !11408)
!11433 = !DILocation(line: 1420, column: 68, scope: !11408)
!11434 = !DILocation(line: 1421, column: 68, scope: !11408)
!11435 = !DILocation(line: 1422, column: 65, scope: !11408)
!11436 = !DILocation(line: 1424, column: 5, scope: !11408)
!11437 = !DILocation(line: 1424, column: 17, scope: !11408)
!11438 = !DILocation(line: 1425, column: 5, scope: !11408)
!11439 = !DILocation(line: 1425, column: 17, scope: !11408)
!11440 = !DILocation(line: 1426, column: 5, scope: !11408)
!11441 = !DILocation(line: 1426, column: 19, scope: !11408)
!11442 = !DILocation(line: 1427, column: 5, scope: !11408)
!11443 = !DILocation(line: 1427, column: 19, scope: !11408)
!11444 = !DILocation(line: 1428, column: 5, scope: !11408)
!11445 = !DILocation(line: 1428, column: 16, scope: !11408)
!11446 = !DILocation(line: 1431, column: 32, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1431, column: 9)
!11448 = !DILocation(line: 1431, column: 16, scope: !11447)
!11449 = !DILocation(line: 1431, column: 14, scope: !11447)
!11450 = !DILocation(line: 1431, column: 48, scope: !11447)
!11451 = !DILocation(line: 1431, column: 9, scope: !11408)
!11452 = !DILocation(line: 1432, column: 31, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 1431, column: 57)
!11454 = !DILocation(line: 1432, column: 34, scope: !11453)
!11455 = !DILocation(line: 1432, column: 40, scope: !11453)
!11456 = !DILocation(line: 1432, column: 45, scope: !11453)
!11457 = !DILocation(line: 1436, column: 31, scope: !11453)
!11458 = !DILocation(line: 1432, column: 16, scope: !11453)
!11459 = !DILocation(line: 1432, column: 9, scope: !11453)
!11460 = !DILocation(line: 1440, column: 32, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1440, column: 9)
!11462 = !DILocation(line: 1440, column: 35, scope: !11461)
!11463 = !DILocation(line: 1440, column: 43, scope: !11461)
!11464 = !DILocation(line: 1440, column: 16, scope: !11461)
!11465 = !DILocation(line: 1440, column: 14, scope: !11461)
!11466 = !DILocation(line: 1441, column: 42, scope: !11461)
!11467 = !DILocation(line: 1440, column: 9, scope: !11408)
!11468 = !DILocation(line: 1442, column: 13, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1442, column: 13)
!11470 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 1441, column: 51)
!11471 = !DILocation(line: 1442, column: 20, scope: !11469)
!11472 = !DILocation(line: 1442, column: 13, scope: !11470)
!11473 = !DILocation(line: 1443, column: 15, scope: !11469)
!11474 = !DILocation(line: 1443, column: 23, scope: !11469)
!11475 = !DILocation(line: 1443, column: 30, scope: !11469)
!11476 = !DILocation(line: 1443, column: 44, scope: !11469)
!11477 = !DILocation(line: 1443, column: 13, scope: !11469)
!11478 = !DILocation(line: 1445, column: 31, scope: !11470)
!11479 = !DILocation(line: 1445, column: 34, scope: !11470)
!11480 = !DILocation(line: 1445, column: 40, scope: !11470)
!11481 = !DILocation(line: 1445, column: 45, scope: !11470)
!11482 = !DILocation(line: 1448, column: 31, scope: !11470)
!11483 = !DILocation(line: 1445, column: 16, scope: !11470)
!11484 = !DILocation(line: 1445, column: 9, scope: !11470)
!11485 = !DILocation(line: 1451, column: 21, scope: !11408)
!11486 = !DILocation(line: 1451, column: 24, scope: !11408)
!11487 = !DILocation(line: 1451, column: 30, scope: !11408)
!11488 = !DILocation(line: 1451, column: 5, scope: !11408)
!11489 = !DILocation(line: 1453, column: 9, scope: !11423)
!11490 = !DILocation(line: 1453, column: 15, scope: !11423)
!11491 = !DILocation(line: 1453, column: 27, scope: !11423)
!11492 = !DILocation(line: 1453, column: 9, scope: !11408)
!11493 = !DILocation(line: 1455, column: 9, scope: !11422)
!11494 = !DILocation(line: 1455, column: 30, scope: !11422)
!11495 = !DILocation(line: 1455, column: 55, scope: !11422)
!11496 = !DILocation(line: 1455, column: 38, scope: !11422)
!11497 = !DILocation(line: 1456, column: 34, scope: !11422)
!11498 = !DILocation(line: 1456, column: 9, scope: !11422)
!11499 = !DILocation(line: 1456, column: 15, scope: !11422)
!11500 = !{!3491, !2417, i64 8}
!11501 = !DILocation(line: 1456, column: 21, scope: !11422)
!11502 = !DILocation(line: 1456, column: 26, scope: !11422)
!11503 = !DILocation(line: 1457, column: 9, scope: !11422)
!11504 = !DILocation(line: 1457, column: 16, scope: !11422)
!11505 = !DILocation(line: 1457, column: 22, scope: !11422)
!11506 = !DILocation(line: 1457, column: 28, scope: !11422)
!11507 = !DILocation(line: 1457, column: 33, scope: !11422)
!11508 = !DILocation(line: 1458, column: 26, scope: !11422)
!11509 = !DILocation(line: 1458, column: 32, scope: !11422)
!11510 = !DILocation(line: 1458, column: 38, scope: !11422)
!11511 = !DILocation(line: 1458, column: 13, scope: !11422)
!11512 = !DILocation(line: 1458, column: 19, scope: !11422)
!11513 = !DILocation(line: 1458, column: 24, scope: !11422)
!11514 = distinct !{!11514, !11503, !11510, !2563}
!11515 = !DILocation(line: 1459, column: 5, scope: !11423)
!11516 = !DILocation(line: 1459, column: 5, scope: !11422)
!11517 = !DILocation(line: 1462, column: 22, scope: !11429)
!11518 = !DILocation(line: 1462, column: 28, scope: !11429)
!11519 = !DILocation(line: 1462, column: 20, scope: !11429)
!11520 = !DILocation(line: 1462, column: 14, scope: !11429)
!11521 = !DILocation(line: 1462, column: 41, scope: !11428)
!11522 = !DILocation(line: 1462, column: 47, scope: !11428)
!11523 = !DILocation(line: 1462, column: 9, scope: !11429)
!11524 = !DILocation(line: 1463, column: 17, scope: !11426)
!11525 = !DILocation(line: 1463, column: 24, scope: !11426)
!11526 = !DILocation(line: 1463, column: 27, scope: !11426)
!11527 = !DILocation(line: 1464, column: 17, scope: !11426)
!11528 = !DILocation(line: 1464, column: 27, scope: !11426)
!11529 = !DILocation(line: 1464, column: 34, scope: !11426)
!11530 = !DILocation(line: 1464, column: 20, scope: !11426)
!11531 = !DILocation(line: 1464, column: 67, scope: !11426)
!11532 = !DILocation(line: 1463, column: 17, scope: !11427)
!11533 = !DILocation(line: 1465, column: 17, scope: !11425)
!11534 = !DILocation(line: 1465, column: 29, scope: !11425)
!11535 = !DILocation(line: 1466, column: 17, scope: !11425)
!11536 = !DILocation(line: 1466, column: 29, scope: !11425)
!11537 = !DILocation(line: 1469, column: 29, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 1469, column: 17)
!11539 = !DILocation(line: 1469, column: 36, scope: !11538)
!11540 = !DILocation(line: 1469, column: 27, scope: !11538)
!11541 = !DILocation(line: 1469, column: 22, scope: !11538)
!11542 = !DILocation(line: 1469, column: 42, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 1469, column: 17)
!11544 = !DILocation(line: 1469, column: 47, scope: !11543)
!11545 = !DILocation(line: 1469, column: 17, scope: !11538)
!11546 = !DILocation(line: 1470, column: 25, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 1470, column: 25)
!11548 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 1469, column: 75)
!11549 = !DILocation(line: 1470, column: 31, scope: !11547)
!11550 = !DILocation(line: 1470, column: 34, scope: !11547)
!11551 = !DILocation(line: 1470, column: 25, scope: !11548)
!11552 = !DILocation(line: 1471, column: 36, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 1471, column: 29)
!11554 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 1470, column: 56)
!11555 = !DILocation(line: 1471, column: 42, scope: !11553)
!11556 = !DILocation(line: 1471, column: 29, scope: !11553)
!11557 = !DILocation(line: 1471, column: 56, scope: !11553)
!11558 = !DILocation(line: 1471, column: 29, scope: !11554)
!11559 = !DILocation(line: 1472, column: 36, scope: !11553)
!11560 = !DILocation(line: 1472, column: 42, scope: !11553)
!11561 = !DILocation(line: 1472, column: 34, scope: !11553)
!11562 = !DILocation(line: 1472, column: 29, scope: !11553)
!11563 = !DILocation(line: 1473, column: 41, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 1473, column: 34)
!11565 = !DILocation(line: 1473, column: 47, scope: !11564)
!11566 = !DILocation(line: 1473, column: 34, scope: !11564)
!11567 = !DILocation(line: 1473, column: 66, scope: !11564)
!11568 = !DILocation(line: 1473, column: 34, scope: !11553)
!11569 = !DILocation(line: 1474, column: 39, scope: !11564)
!11570 = !DILocation(line: 1474, column: 45, scope: !11564)
!11571 = !DILocation(line: 1474, column: 37, scope: !11564)
!11572 = !DILocation(line: 1474, column: 29, scope: !11564)
!11573 = !DILocation(line: 1475, column: 21, scope: !11554)
!11574 = !DILocation(line: 1476, column: 17, scope: !11548)
!11575 = !DILocation(line: 1469, column: 63, scope: !11543)
!11576 = !DILocation(line: 1469, column: 69, scope: !11543)
!11577 = !DILocation(line: 1469, column: 61, scope: !11543)
!11578 = !DILocation(line: 1469, column: 17, scope: !11543)
!11579 = distinct !{!11579, !11545, !11580, !2563}
!11580 = !DILocation(line: 1476, column: 17, scope: !11538)
!11581 = !DILocation(line: 1478, column: 21, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 1478, column: 21)
!11583 = !DILocation(line: 1478, column: 26, scope: !11582)
!11584 = !DILocation(line: 1478, column: 21, scope: !11425)
!11585 = !DILocation(line: 1479, column: 41, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 1478, column: 35)
!11587 = !DILocation(line: 1479, column: 44, scope: !11586)
!11588 = !DILocation(line: 1479, column: 27, scope: !11586)
!11589 = !DILocation(line: 1479, column: 25, scope: !11586)
!11590 = !DILocation(line: 1483, column: 21, scope: !11586)
!11591 = !DILocation(line: 1487, column: 21, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 1487, column: 21)
!11593 = !DILocation(line: 1487, column: 29, scope: !11592)
!11594 = !DILocation(line: 1487, column: 21, scope: !11425)
!11595 = !DILocation(line: 1488, column: 29, scope: !11592)
!11596 = !DILocation(line: 1488, column: 21, scope: !11592)
!11597 = !DILocation(line: 1491, column: 44, scope: !11425)
!11598 = !DILocation(line: 1491, column: 52, scope: !11425)
!11599 = !DILocation(line: 1491, column: 61, scope: !11425)
!11600 = !DILocation(line: 1491, column: 67, scope: !11425)
!11601 = !DILocation(line: 1491, column: 17, scope: !11425)
!11602 = !DILocation(line: 1492, column: 13, scope: !11426)
!11603 = !DILocation(line: 1492, column: 13, scope: !11425)
!11604 = !DILocation(line: 1493, column: 9, scope: !11427)
!11605 = !DILocation(line: 1462, column: 64, scope: !11428)
!11606 = !DILocation(line: 1462, column: 71, scope: !11428)
!11607 = !DILocation(line: 1462, column: 62, scope: !11428)
!11608 = !DILocation(line: 1462, column: 9, scope: !11428)
!11609 = distinct !{!11609, !11523, !11610, !2563}
!11610 = !DILocation(line: 1493, column: 9, scope: !11429)
!11611 = !DILocation(line: 1496, column: 21, scope: !11408)
!11612 = !DILocation(line: 1496, column: 24, scope: !11408)
!11613 = !DILocation(line: 1496, column: 30, scope: !11408)
!11614 = !DILocation(line: 1496, column: 5, scope: !11408)
!11615 = !DILocation(line: 1498, column: 22, scope: !11408)
!11616 = !DILocation(line: 1498, column: 5, scope: !11408)
!11617 = !DILocation(line: 1500, column: 9, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1500, column: 9)
!11619 = !DILocation(line: 1500, column: 16, scope: !11618)
!11620 = !DILocation(line: 1500, column: 9, scope: !11408)
!11621 = !DILocation(line: 1501, column: 11, scope: !11618)
!11622 = !DILocation(line: 1501, column: 19, scope: !11618)
!11623 = !DILocation(line: 1501, column: 26, scope: !11618)
!11624 = !DILocation(line: 1501, column: 40, scope: !11618)
!11625 = !DILocation(line: 1501, column: 9, scope: !11618)
!11626 = !DILocation(line: 1503, column: 12, scope: !11408)
!11627 = !DILocation(line: 1503, column: 5, scope: !11408)
!11628 = !DILocation(line: 1504, column: 1, scope: !11408)
!11629 = distinct !DISubprogram(name: "dav_gen_supported_reports", scope: !3, file: !3, line: 1508, type: !11409, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11630)
!11630 = !{!11631, !11632, !11633, !11634, !11635, !11636, !11637, !11638, !11639, !11640, !11641, !11644, !11651, !11652}
!11631 = !DILocalVariable(name: "r", arg: 1, scope: !11629, file: !3, line: 1508, type: !286)
!11632 = !DILocalVariable(name: "resource", arg: 2, scope: !11629, file: !3, line: 1509, type: !747)
!11633 = !DILocalVariable(name: "elem", arg: 3, scope: !11629, file: !3, line: 1510, type: !1025)
!11634 = !DILocalVariable(name: "body", arg: 4, scope: !11629, file: !3, line: 1511, type: !1015)
!11635 = !DILocalVariable(name: "child", scope: !11629, file: !3, line: 1513, type: !226)
!11636 = !DILocalVariable(name: "attr", scope: !11629, file: !3, line: 1514, type: !11233)
!11637 = !DILocalVariable(name: "err", scope: !11629, file: !3, line: 1515, type: !272)
!11638 = !DILocalVariable(name: "s", scope: !11629, file: !3, line: 1516, type: !216)
!11639 = !DILocalVariable(name: "reports", scope: !11629, file: !3, line: 1517, type: !450)
!11640 = !DILocalVariable(name: "rp", scope: !11629, file: !3, line: 1518, type: !1248)
!11641 = !DILocalVariable(name: "i", scope: !11642, file: !3, line: 1533, type: !14)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1532, column: 36)
!11643 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 1532, column: 9)
!11644 = !DILocalVariable(name: "name", scope: !11645, file: !3, line: 1554, type: !10)
!11645 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 1553, column: 70)
!11646 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 1552, column: 17)
!11647 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 1551, column: 77)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !3, line: 1551, column: 9)
!11649 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 1551, column: 9)
!11650 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1549, column: 10)
!11651 = !DILocalVariable(name: "nmspace", scope: !11645, file: !3, line: 1555, type: !10)
!11652 = !DILocalVariable(name: "i", scope: !11645, file: !3, line: 1556, type: !14)
!11653 = !DILocation(line: 1508, column: 58, scope: !11629)
!11654 = !DILocation(line: 1509, column: 65, scope: !11629)
!11655 = !DILocation(line: 1510, column: 65, scope: !11629)
!11656 = !DILocation(line: 1511, column: 62, scope: !11629)
!11657 = !DILocation(line: 1513, column: 5, scope: !11629)
!11658 = !DILocation(line: 1513, column: 19, scope: !11629)
!11659 = !DILocation(line: 1514, column: 5, scope: !11629)
!11660 = !DILocation(line: 1514, column: 19, scope: !11629)
!11661 = !DILocation(line: 1515, column: 5, scope: !11629)
!11662 = !DILocation(line: 1515, column: 16, scope: !11629)
!11663 = !DILocation(line: 1516, column: 5, scope: !11629)
!11664 = !DILocation(line: 1516, column: 11, scope: !11629)
!11665 = !DILocation(line: 1517, column: 5, scope: !11629)
!11666 = !DILocation(line: 1517, column: 25, scope: !11629)
!11667 = !DILocation(line: 1518, column: 5, scope: !11629)
!11668 = !DILocation(line: 1518, column: 28, scope: !11629)
!11669 = !DILocation(line: 1520, column: 21, scope: !11629)
!11670 = !DILocation(line: 1520, column: 24, scope: !11629)
!11671 = !DILocation(line: 1520, column: 30, scope: !11629)
!11672 = !DILocation(line: 1520, column: 5, scope: !11629)
!11673 = !DILocation(line: 1522, column: 30, scope: !11629)
!11674 = !DILocation(line: 1522, column: 33, scope: !11629)
!11675 = !DILocation(line: 1522, column: 15, scope: !11629)
!11676 = !DILocation(line: 1522, column: 13, scope: !11629)
!11677 = !DILocation(line: 1523, column: 28, scope: !11629)
!11678 = !DILocation(line: 1523, column: 31, scope: !11629)
!11679 = !DILocation(line: 1523, column: 41, scope: !11629)
!11680 = !DILocation(line: 1523, column: 5, scope: !11629)
!11681 = !DILocation(line: 1524, column: 9, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 1524, column: 9)
!11683 = !DILocation(line: 1524, column: 13, scope: !11682)
!11684 = !DILocation(line: 1524, column: 9, scope: !11629)
!11685 = !DILocation(line: 1525, column: 31, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 1524, column: 22)
!11687 = !DILocation(line: 1525, column: 34, scope: !11686)
!11688 = !DILocation(line: 1525, column: 40, scope: !11686)
!11689 = !DILocation(line: 1525, column: 45, scope: !11686)
!11690 = !DILocation(line: 1529, column: 17, scope: !11686)
!11691 = !DILocation(line: 1525, column: 16, scope: !11686)
!11692 = !DILocation(line: 1525, column: 9, scope: !11686)
!11693 = !DILocation(line: 1532, column: 9, scope: !11643)
!11694 = !DILocation(line: 1532, column: 15, scope: !11643)
!11695 = !DILocation(line: 1532, column: 27, scope: !11643)
!11696 = !DILocation(line: 1532, column: 9, scope: !11629)
!11697 = !DILocation(line: 1533, column: 9, scope: !11642)
!11698 = !DILocation(line: 1533, column: 13, scope: !11642)
!11699 = !DILocation(line: 1536, column: 39, scope: !11642)
!11700 = !DILocation(line: 1536, column: 48, scope: !11642)
!11701 = !DILocation(line: 1536, column: 12, scope: !11642)
!11702 = !DILocation(line: 1537, column: 16, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11642, file: !3, line: 1537, column: 9)
!11704 = !DILocation(line: 1537, column: 14, scope: !11703)
!11705 = !DILocation(line: 1537, column: 21, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 1537, column: 9)
!11707 = !DILocation(line: 1537, column: 25, scope: !11706)
!11708 = !DILocation(line: 1537, column: 34, scope: !11706)
!11709 = !DILocation(line: 1537, column: 23, scope: !11706)
!11710 = !DILocation(line: 1537, column: 9, scope: !11703)
!11711 = !DILocation(line: 1540, column: 29, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11706, file: !3, line: 1537, column: 52)
!11713 = !DILocation(line: 1540, column: 32, scope: !11712)
!11714 = !DILocation(line: 1542, column: 21, scope: !11712)
!11715 = !DILocation(line: 1542, column: 25, scope: !11712)
!11716 = !DILocation(line: 1544, column: 21, scope: !11712)
!11717 = !DILocation(line: 1544, column: 25, scope: !11712)
!11718 = !DILocation(line: 1540, column: 17, scope: !11712)
!11719 = !DILocation(line: 1540, column: 15, scope: !11712)
!11720 = !DILocation(line: 1546, column: 29, scope: !11712)
!11721 = !DILocation(line: 1546, column: 32, scope: !11712)
!11722 = !DILocation(line: 1546, column: 38, scope: !11712)
!11723 = !DILocation(line: 1546, column: 44, scope: !11712)
!11724 = !DILocation(line: 1546, column: 13, scope: !11712)
!11725 = !DILocation(line: 1547, column: 9, scope: !11712)
!11726 = !DILocation(line: 1537, column: 42, scope: !11706)
!11727 = !DILocation(line: 1537, column: 48, scope: !11706)
!11728 = !DILocation(line: 1537, column: 9, scope: !11706)
!11729 = distinct !{!11729, !11710, !11730, !2563}
!11730 = !DILocation(line: 1547, column: 9, scope: !11703)
!11731 = !DILocation(line: 1548, column: 5, scope: !11643)
!11732 = !DILocation(line: 1548, column: 5, scope: !11642)
!11733 = !DILocation(line: 1551, column: 22, scope: !11649)
!11734 = !DILocation(line: 1551, column: 28, scope: !11649)
!11735 = !DILocation(line: 1551, column: 20, scope: !11649)
!11736 = !DILocation(line: 1551, column: 14, scope: !11649)
!11737 = !DILocation(line: 1551, column: 41, scope: !11648)
!11738 = !DILocation(line: 1551, column: 47, scope: !11648)
!11739 = !DILocation(line: 1551, column: 9, scope: !11649)
!11740 = !DILocation(line: 1552, column: 17, scope: !11646)
!11741 = !DILocation(line: 1552, column: 24, scope: !11646)
!11742 = !DILocation(line: 1552, column: 27, scope: !11646)
!11743 = !DILocation(line: 1553, column: 21, scope: !11646)
!11744 = !DILocation(line: 1553, column: 31, scope: !11646)
!11745 = !DILocation(line: 1553, column: 38, scope: !11646)
!11746 = !DILocation(line: 1553, column: 24, scope: !11646)
!11747 = !DILocation(line: 1553, column: 64, scope: !11646)
!11748 = !DILocation(line: 1552, column: 17, scope: !11647)
!11749 = !DILocation(line: 1554, column: 17, scope: !11645)
!11750 = !DILocation(line: 1554, column: 29, scope: !11645)
!11751 = !DILocation(line: 1555, column: 17, scope: !11645)
!11752 = !DILocation(line: 1555, column: 29, scope: !11645)
!11753 = !DILocation(line: 1556, column: 17, scope: !11645)
!11754 = !DILocation(line: 1556, column: 21, scope: !11645)
!11755 = !DILocation(line: 1559, column: 29, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 1559, column: 17)
!11757 = !DILocation(line: 1559, column: 36, scope: !11756)
!11758 = !DILocation(line: 1559, column: 27, scope: !11756)
!11759 = !DILocation(line: 1559, column: 22, scope: !11756)
!11760 = !DILocation(line: 1559, column: 42, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 1559, column: 17)
!11762 = !DILocation(line: 1559, column: 47, scope: !11761)
!11763 = !DILocation(line: 1559, column: 17, scope: !11756)
!11764 = !DILocation(line: 1560, column: 25, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 1560, column: 25)
!11766 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 1559, column: 75)
!11767 = !DILocation(line: 1560, column: 31, scope: !11765)
!11768 = !DILocation(line: 1560, column: 34, scope: !11765)
!11769 = !DILocation(line: 1560, column: 25, scope: !11766)
!11770 = !DILocation(line: 1561, column: 36, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !3, line: 1561, column: 29)
!11772 = distinct !DILexicalBlock(scope: !11765, file: !3, line: 1560, column: 56)
!11773 = !DILocation(line: 1561, column: 42, scope: !11771)
!11774 = !DILocation(line: 1561, column: 29, scope: !11771)
!11775 = !DILocation(line: 1561, column: 56, scope: !11771)
!11776 = !DILocation(line: 1561, column: 29, scope: !11772)
!11777 = !DILocation(line: 1562, column: 36, scope: !11771)
!11778 = !DILocation(line: 1562, column: 42, scope: !11771)
!11779 = !DILocation(line: 1562, column: 34, scope: !11771)
!11780 = !DILocation(line: 1562, column: 29, scope: !11771)
!11781 = !DILocation(line: 1563, column: 41, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 1563, column: 34)
!11783 = !DILocation(line: 1563, column: 47, scope: !11782)
!11784 = !DILocation(line: 1563, column: 34, scope: !11782)
!11785 = !DILocation(line: 1563, column: 66, scope: !11782)
!11786 = !DILocation(line: 1563, column: 34, scope: !11771)
!11787 = !DILocation(line: 1564, column: 39, scope: !11782)
!11788 = !DILocation(line: 1564, column: 45, scope: !11782)
!11789 = !DILocation(line: 1564, column: 37, scope: !11782)
!11790 = !DILocation(line: 1564, column: 29, scope: !11782)
!11791 = !DILocation(line: 1565, column: 21, scope: !11772)
!11792 = !DILocation(line: 1566, column: 17, scope: !11766)
!11793 = !DILocation(line: 1559, column: 63, scope: !11761)
!11794 = !DILocation(line: 1559, column: 69, scope: !11761)
!11795 = !DILocation(line: 1559, column: 61, scope: !11761)
!11796 = !DILocation(line: 1559, column: 17, scope: !11761)
!11797 = distinct !{!11797, !11763, !11798, !2563}
!11798 = !DILocation(line: 1566, column: 17, scope: !11756)
!11799 = !DILocation(line: 1568, column: 21, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 1568, column: 21)
!11801 = !DILocation(line: 1568, column: 26, scope: !11800)
!11802 = !DILocation(line: 1568, column: 21, scope: !11645)
!11803 = !DILocation(line: 1569, column: 42, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 1568, column: 35)
!11805 = !DILocation(line: 1569, column: 45, scope: !11804)
!11806 = !DILocation(line: 1569, column: 28, scope: !11804)
!11807 = !DILocation(line: 1569, column: 21, scope: !11804)
!11808 = !DILocation(line: 1575, column: 21, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 1575, column: 21)
!11810 = !DILocation(line: 1575, column: 29, scope: !11809)
!11811 = !DILocation(line: 1575, column: 21, scope: !11645)
!11812 = !DILocation(line: 1576, column: 29, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1575, column: 38)
!11814 = !DILocation(line: 1577, column: 17, scope: !11813)
!11815 = !DILocation(line: 1579, column: 47, scope: !11645)
!11816 = !DILocation(line: 1579, column: 56, scope: !11645)
!11817 = !DILocation(line: 1579, column: 20, scope: !11645)
!11818 = !DILocation(line: 1580, column: 24, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 1580, column: 17)
!11820 = !DILocation(line: 1580, column: 22, scope: !11819)
!11821 = !DILocation(line: 1580, column: 29, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 1580, column: 17)
!11823 = !DILocation(line: 1580, column: 33, scope: !11822)
!11824 = !DILocation(line: 1580, column: 42, scope: !11822)
!11825 = !DILocation(line: 1580, column: 31, scope: !11822)
!11826 = !DILocation(line: 1580, column: 17, scope: !11819)
!11827 = !DILocation(line: 1581, column: 32, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 1581, column: 25)
!11829 = distinct !DILexicalBlock(scope: !11822, file: !3, line: 1580, column: 60)
!11830 = !DILocation(line: 1581, column: 38, scope: !11828)
!11831 = !DILocation(line: 1581, column: 42, scope: !11828)
!11832 = !DILocation(line: 1581, column: 25, scope: !11828)
!11833 = !DILocation(line: 1581, column: 48, scope: !11828)
!11834 = !DILocation(line: 1582, column: 29, scope: !11828)
!11835 = !DILocation(line: 1582, column: 39, scope: !11828)
!11836 = !DILocation(line: 1582, column: 48, scope: !11828)
!11837 = !DILocation(line: 1582, column: 52, scope: !11828)
!11838 = !DILocation(line: 1582, column: 32, scope: !11828)
!11839 = !DILocation(line: 1582, column: 61, scope: !11828)
!11840 = !DILocation(line: 1581, column: 25, scope: !11829)
!11841 = !DILocation(line: 1586, column: 41, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11828, file: !3, line: 1582, column: 67)
!11843 = !DILocation(line: 1586, column: 44, scope: !11842)
!11844 = !DILocation(line: 1589, column: 33, scope: !11842)
!11845 = !DILocation(line: 1589, column: 37, scope: !11842)
!11846 = !DILocation(line: 1591, column: 33, scope: !11842)
!11847 = !DILocation(line: 1591, column: 37, scope: !11842)
!11848 = !DILocation(line: 1586, column: 29, scope: !11842)
!11849 = !DILocation(line: 1586, column: 27, scope: !11842)
!11850 = !DILocation(line: 1593, column: 41, scope: !11842)
!11851 = !DILocation(line: 1593, column: 44, scope: !11842)
!11852 = !DILocation(line: 1593, column: 50, scope: !11842)
!11853 = !DILocation(line: 1593, column: 56, scope: !11842)
!11854 = !DILocation(line: 1593, column: 25, scope: !11842)
!11855 = !DILocation(line: 1594, column: 25, scope: !11842)
!11856 = !DILocation(line: 1596, column: 17, scope: !11829)
!11857 = !DILocation(line: 1580, column: 50, scope: !11822)
!11858 = !DILocation(line: 1580, column: 56, scope: !11822)
!11859 = !DILocation(line: 1580, column: 17, scope: !11822)
!11860 = distinct !{!11860, !11826, !11861, !2563}
!11861 = !DILocation(line: 1596, column: 17, scope: !11819)
!11862 = !DILocation(line: 1597, column: 13, scope: !11646)
!11863 = !DILocation(line: 1597, column: 13, scope: !11645)
!11864 = !DILocation(line: 1598, column: 9, scope: !11647)
!11865 = !DILocation(line: 1551, column: 64, scope: !11648)
!11866 = !DILocation(line: 1551, column: 71, scope: !11648)
!11867 = !DILocation(line: 1551, column: 62, scope: !11648)
!11868 = !DILocation(line: 1551, column: 9, scope: !11648)
!11869 = distinct !{!11869, !11739, !11870, !2563}
!11870 = !DILocation(line: 1598, column: 9, scope: !11649)
!11871 = !DILocation(line: 1601, column: 21, scope: !11629)
!11872 = !DILocation(line: 1601, column: 24, scope: !11629)
!11873 = !DILocation(line: 1601, column: 30, scope: !11629)
!11874 = !DILocation(line: 1601, column: 5, scope: !11629)
!11875 = !DILocation(line: 1602, column: 5, scope: !11629)
!11876 = !DILocation(line: 1603, column: 1, scope: !11629)
!11877 = !DISubprogram(name: "dav_open_propdb", scope: !141, file: !141, line: 1692, type: !11878, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11878 = !DISubroutineType(types: !11879)
!11879 = !{!272, !286, !875, !747, !14, !450, !11880}
!11880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!11881 = !DISubprogram(name: "dav_get_allprops", scope: !141, file: !141, line: 1716, type: !11882, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!833, !222, !1014}
!11884 = !DISubprogram(name: "dav_get_liveprop_supported", scope: !141, file: !141, line: 1720, type: !11885, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11885 = !DISubroutineType(types: !11886)
!11886 = !{null, !222, !10, !10, !1015}
!11887 = !DISubprogram(name: "dav_close_propdb", scope: !141, file: !141, line: 1710, type: !11888, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11888 = !DISubroutineType(types: !11889)
!11889 = !{null, !222}
!11890 = !DISubprogram(name: "dav_find_child", scope: !141, file: !141, line: 582, type: !11891, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11891 = !DISubroutineType(types: !11892)
!11892 = !{!226, !1025, !10}
!11893 = distinct !DISubprogram(name: "dav_propfind_walker", scope: !3, file: !3, line: 2032, type: !861, scopeLine: 2033, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11894)
!11894 = !{!11895, !11896, !11897, !11899, !11900, !11901, !11902, !11903, !11904, !11909}
!11895 = !DILocalVariable(name: "wres", arg: 1, scope: !11893, file: !3, line: 2032, type: !863)
!11896 = !DILocalVariable(name: "calltype", arg: 2, scope: !11893, file: !3, line: 2032, type: !14)
!11897 = !DILocalVariable(name: "ctx", scope: !11893, file: !3, line: 2034, type: !11898)
!11898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6395, size: 64)
!11899 = !DILocalVariable(name: "conf", scope: !11893, file: !3, line: 2035, type: !1108)
!11900 = !DILocalVariable(name: "flags", scope: !11893, file: !3, line: 2036, type: !14)
!11901 = !DILocalVariable(name: "err", scope: !11893, file: !3, line: 2037, type: !272)
!11902 = !DILocalVariable(name: "propdb", scope: !11893, file: !3, line: 2038, type: !222)
!11903 = !DILocalVariable(name: "propstats", scope: !11893, file: !3, line: 2039, type: !833)
!11904 = !DILocalVariable(name: "badprops", scope: !11905, file: !3, line: 2067, type: !833)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !3, line: 2066, column: 57)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 2066, column: 13)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 2063, column: 22)
!11908 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 2063, column: 9)
!11909 = !DILocalVariable(name: "what", scope: !11910, file: !3, line: 2088, type: !1014)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 2087, column: 10)
!11911 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 2084, column: 9)
!11912 = !DILocation(line: 2032, column: 59, scope: !11893)
!11913 = !DILocation(line: 2032, column: 69, scope: !11893)
!11914 = !DILocation(line: 2034, column: 5, scope: !11893)
!11915 = !DILocation(line: 2034, column: 21, scope: !11893)
!11916 = !DILocation(line: 2034, column: 27, scope: !11893)
!11917 = !DILocation(line: 2034, column: 33, scope: !11893)
!11918 = !{!3315, !2417, i64 0}
!11919 = !DILocation(line: 2035, column: 5, scope: !11893)
!11920 = !DILocation(line: 2035, column: 19, scope: !11893)
!11921 = !DILocation(line: 2036, column: 5, scope: !11893)
!11922 = !DILocation(line: 2036, column: 9, scope: !11893)
!11923 = !DILocation(line: 2037, column: 5, scope: !11893)
!11924 = !DILocation(line: 2037, column: 16, scope: !11893)
!11925 = !DILocation(line: 2038, column: 5, scope: !11893)
!11926 = !DILocation(line: 2038, column: 17, scope: !11893)
!11927 = !DILocation(line: 2039, column: 5, scope: !11893)
!11928 = !DILocation(line: 2039, column: 26, scope: !11893)
!11929 = !DILocation(line: 2042, column: 37, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 2042, column: 9)
!11931 = !DILocation(line: 2042, column: 42, scope: !11930)
!11932 = !DILocation(line: 2042, column: 51, scope: !11930)
!11933 = !DILocation(line: 2042, column: 57, scope: !11930)
!11934 = !DILocation(line: 2042, column: 67, scope: !11930)
!11935 = !DILocation(line: 2042, column: 72, scope: !11930)
!11936 = !DILocation(line: 2042, column: 9, scope: !11930)
!11937 = !DILocation(line: 2042, column: 83, scope: !11930)
!11938 = !DILocation(line: 2043, column: 13, scope: !11930)
!11939 = !DILocation(line: 2043, column: 16, scope: !11930)
!11940 = !DILocation(line: 2042, column: 9, scope: !11893)
!11941 = !DILocation(line: 2044, column: 24, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 2043, column: 21)
!11943 = !DILocation(line: 2044, column: 29, scope: !11942)
!11944 = !DILocation(line: 2044, column: 9, scope: !11942)
!11945 = !DILocation(line: 2045, column: 9, scope: !11942)
!11946 = !DILocation(line: 2048, column: 12, scope: !11893)
!11947 = !DILocation(line: 2048, column: 10, scope: !11893)
!11948 = !DILocation(line: 2049, column: 9, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 2049, column: 9)
!11950 = !DILocation(line: 2049, column: 14, scope: !11949)
!11951 = !DILocation(line: 2049, column: 17, scope: !11949)
!11952 = !DILocation(line: 2049, column: 23, scope: !11949)
!11953 = !DILocation(line: 2049, column: 43, scope: !11949)
!11954 = !DILocation(line: 2049, column: 9, scope: !11893)
!11955 = !DILocation(line: 2050, column: 15, scope: !11949)
!11956 = !DILocation(line: 2050, column: 9, scope: !11949)
!11957 = !DILocation(line: 2060, column: 28, scope: !11893)
!11958 = !DILocation(line: 2060, column: 33, scope: !11893)
!11959 = !DILocation(line: 2061, column: 28, scope: !11893)
!11960 = !DILocation(line: 2061, column: 33, scope: !11893)
!11961 = !DILocation(line: 2061, column: 36, scope: !11893)
!11962 = !DILocation(line: 2061, column: 41, scope: !11893)
!11963 = !DILocation(line: 2061, column: 43, scope: !11893)
!11964 = !DILocation(line: 2061, column: 51, scope: !11893)
!11965 = !DILocation(line: 2061, column: 57, scope: !11893)
!11966 = !DILocation(line: 2061, column: 67, scope: !11893)
!11967 = !DILocation(line: 2062, column: 28, scope: !11893)
!11968 = !DILocation(line: 2062, column: 33, scope: !11893)
!11969 = !DILocation(line: 2062, column: 39, scope: !11893)
!11970 = !DILocation(line: 2062, column: 44, scope: !11893)
!11971 = !DILocation(line: 2062, column: 49, scope: !11893)
!11972 = !DILocation(line: 2060, column: 11, scope: !11893)
!11973 = !DILocation(line: 2060, column: 9, scope: !11893)
!11974 = !DILocation(line: 2063, column: 9, scope: !11908)
!11975 = !DILocation(line: 2063, column: 13, scope: !11908)
!11976 = !DILocation(line: 2063, column: 9, scope: !11893)
!11977 = !DILocation(line: 2066, column: 13, scope: !11906)
!11978 = !DILocation(line: 2066, column: 18, scope: !11906)
!11979 = !DILocation(line: 2066, column: 32, scope: !11906)
!11980 = !DILocation(line: 2066, column: 13, scope: !11907)
!11981 = !DILocation(line: 2067, column: 13, scope: !11905)
!11982 = !DILocation(line: 2067, column: 34, scope: !11905)
!11983 = !DILocation(line: 2070, column: 32, scope: !11905)
!11984 = !DILocation(line: 2070, column: 13, scope: !11905)
!11985 = !DILocation(line: 2071, column: 34, scope: !11905)
!11986 = !DILocation(line: 2071, column: 39, scope: !11905)
!11987 = !{!6557, !2417, i64 88}
!11988 = !DILocation(line: 2071, column: 22, scope: !11905)
!11989 = !DILocation(line: 2071, column: 32, scope: !11905)
!11990 = !DILocation(line: 2072, column: 33, scope: !11905)
!11991 = !DILocation(line: 2072, column: 53, scope: !11905)
!11992 = !DILocation(line: 2072, column: 58, scope: !11905)
!11993 = !DILocation(line: 2072, column: 13, scope: !11905)
!11994 = !DILocation(line: 2073, column: 9, scope: !11906)
!11995 = !DILocation(line: 2073, column: 9, scope: !11905)
!11996 = !DILocation(line: 2076, column: 33, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11906, file: !3, line: 2074, column: 14)
!11998 = !DILocation(line: 2076, column: 54, scope: !11997)
!11999 = !DILocation(line: 2076, column: 59, scope: !11997)
!12000 = !DILocation(line: 2076, column: 13, scope: !11997)
!12001 = !DILocation(line: 2079, column: 24, scope: !11907)
!12002 = !DILocation(line: 2079, column: 29, scope: !11907)
!12003 = !DILocation(line: 2079, column: 9, scope: !11907)
!12004 = !DILocation(line: 2080, column: 9, scope: !11907)
!12005 = !DILocation(line: 2084, column: 9, scope: !11911)
!12006 = !DILocation(line: 2084, column: 14, scope: !11911)
!12007 = !DILocation(line: 2084, column: 28, scope: !11911)
!12008 = !DILocation(line: 2084, column: 9, scope: !11893)
!12009 = !DILocation(line: 2085, column: 21, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 2084, column: 53)
!12011 = !DILocation(line: 2085, column: 35, scope: !12010)
!12012 = !DILocation(line: 2085, column: 43, scope: !12010)
!12013 = !DILocation(line: 2085, column: 48, scope: !12010)
!12014 = !DILocation(line: 2086, column: 5, scope: !12010)
!12015 = !DILocation(line: 2088, column: 9, scope: !11910)
!12016 = !DILocation(line: 2088, column: 25, scope: !11910)
!12017 = !DILocation(line: 2088, column: 32, scope: !11910)
!12018 = !DILocation(line: 2088, column: 37, scope: !11910)
!12019 = !DILocation(line: 2088, column: 51, scope: !11910)
!12020 = !DILocation(line: 2091, column: 21, scope: !11910)
!12021 = !DILocation(line: 2091, column: 38, scope: !11910)
!12022 = !DILocation(line: 2091, column: 46, scope: !11910)
!12023 = !DILocation(line: 2092, column: 5, scope: !11911)
!12024 = !DILocation(line: 2093, column: 25, scope: !11893)
!12025 = !DILocation(line: 2093, column: 46, scope: !11893)
!12026 = !DILocation(line: 2093, column: 51, scope: !11893)
!12027 = !DILocation(line: 2093, column: 5, scope: !11893)
!12028 = !DILocation(line: 2095, column: 22, scope: !11893)
!12029 = !DILocation(line: 2095, column: 5, scope: !11893)
!12030 = !DILocation(line: 2101, column: 20, scope: !11893)
!12031 = !DILocation(line: 2101, column: 25, scope: !11893)
!12032 = !DILocation(line: 2101, column: 5, scope: !11893)
!12033 = !DILocation(line: 2103, column: 5, scope: !11893)
!12034 = !DILocation(line: 2104, column: 1, scope: !11893)
!12035 = !DISubprogram(name: "dav_popen_propdb", scope: !141, file: !141, line: 1700, type: !12036, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12036 = !DISubroutineType(types: !12037)
!12037 = !{!272, !73, !286, !875, !747, !14, !450, !11880}
!12038 = distinct !DISubprogram(name: "dav_cache_badprops", scope: !3, file: !3, line: 2004, type: !12039, scopeLine: 2005, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12041)
!12039 = !DISubroutineType(types: !12040)
!12040 = !{null, !11898}
!12041 = !{!12042, !12043, !12044}
!12042 = !DILocalVariable(name: "ctx", arg: 1, scope: !12038, file: !3, line: 2004, type: !11898)
!12043 = !DILocalVariable(name: "elem", scope: !12038, file: !3, line: 2006, type: !1025)
!12044 = !DILocalVariable(name: "hdr", scope: !12038, file: !3, line: 2007, type: !235)
!12045 = !DILocation(line: 2004, column: 48, scope: !12038)
!12046 = !DILocation(line: 2006, column: 5, scope: !12038)
!12047 = !DILocation(line: 2006, column: 25, scope: !12038)
!12048 = !DILocation(line: 2007, column: 5, scope: !12038)
!12049 = !DILocation(line: 2007, column: 21, scope: !12038)
!12050 = !DILocation(line: 2010, column: 9, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2010, column: 9)
!12052 = !DILocation(line: 2010, column: 14, scope: !12051)
!12053 = !DILocation(line: 2010, column: 27, scope: !12051)
!12054 = !DILocation(line: 2010, column: 9, scope: !12038)
!12055 = !DILocation(line: 2011, column: 9, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 2010, column: 36)
!12057 = !DILocation(line: 2014, column: 21, scope: !12038)
!12058 = !DILocation(line: 2014, column: 26, scope: !12038)
!12059 = !DILocation(line: 2014, column: 28, scope: !12038)
!12060 = !DILocation(line: 2014, column: 5, scope: !12038)
!12061 = !DILocation(line: 2018, column: 27, scope: !12038)
!12062 = !DILocation(line: 2018, column: 32, scope: !12038)
!12063 = !DILocation(line: 2018, column: 37, scope: !12038)
!12064 = !DILocation(line: 2018, column: 12, scope: !12038)
!12065 = !DILocation(line: 2018, column: 10, scope: !12038)
!12066 = !DILocation(line: 2019, column: 17, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2019, column: 5)
!12068 = !DILocation(line: 2019, column: 23, scope: !12067)
!12069 = !DILocation(line: 2019, column: 15, scope: !12067)
!12070 = !DILocation(line: 2019, column: 10, scope: !12067)
!12071 = !DILocation(line: 2019, column: 36, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 2019, column: 5)
!12073 = !DILocation(line: 2019, column: 5, scope: !12067)
!12074 = !DILocation(line: 2020, column: 25, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 2019, column: 61)
!12076 = !DILocation(line: 2020, column: 30, scope: !12075)
!12077 = !DILocation(line: 2020, column: 32, scope: !12075)
!12078 = !DILocation(line: 2021, column: 44, scope: !12075)
!12079 = !DILocation(line: 2021, column: 49, scope: !12075)
!12080 = !DILocation(line: 2021, column: 51, scope: !12075)
!12081 = !DILocation(line: 2021, column: 57, scope: !12075)
!12082 = !DILocation(line: 2021, column: 25, scope: !12075)
!12083 = !DILocation(line: 2020, column: 9, scope: !12075)
!12084 = !DILocation(line: 2022, column: 5, scope: !12075)
!12085 = !DILocation(line: 2019, column: 49, scope: !12072)
!12086 = !DILocation(line: 2019, column: 55, scope: !12072)
!12087 = !DILocation(line: 2019, column: 47, scope: !12072)
!12088 = !DILocation(line: 2019, column: 5, scope: !12072)
!12089 = distinct !{!12089, !12073, !12090, !2563}
!12090 = !DILocation(line: 2022, column: 5, scope: !12067)
!12091 = !DILocation(line: 2024, column: 21, scope: !12038)
!12092 = !DILocation(line: 2024, column: 26, scope: !12038)
!12093 = !DILocation(line: 2024, column: 28, scope: !12038)
!12094 = !DILocation(line: 2024, column: 5, scope: !12038)
!12095 = !DILocation(line: 2029, column: 29, scope: !12038)
!12096 = !DILocation(line: 2029, column: 5, scope: !12038)
!12097 = !DILocation(line: 2029, column: 10, scope: !12038)
!12098 = !DILocation(line: 2029, column: 23, scope: !12038)
!12099 = !DILocation(line: 2030, column: 1, scope: !12038)
!12100 = distinct !DISubprogram(name: "dav_stream_response", scope: !3, file: !3, line: 1196, type: !12101, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12103)
!12101 = !DISubroutineType(types: !12102)
!12102 = !{null, !863, !14, !3302, !73}
!12103 = !{!12104, !12105, !12106, !12107, !12108, !12109}
!12104 = !DILocalVariable(name: "wres", arg: 1, scope: !12100, file: !3, line: 1196, type: !863)
!12105 = !DILocalVariable(name: "status", arg: 2, scope: !12100, file: !3, line: 1197, type: !14)
!12106 = !DILocalVariable(name: "propstats", arg: 3, scope: !12100, file: !3, line: 1198, type: !3302)
!12107 = !DILocalVariable(name: "pool", arg: 4, scope: !12100, file: !3, line: 1199, type: !73)
!12108 = !DILocalVariable(name: "resp", scope: !12100, file: !3, line: 1201, type: !827)
!12109 = !DILocalVariable(name: "ctx", scope: !12100, file: !3, line: 1202, type: !11898)
!12110 = !DILocation(line: 1196, column: 52, scope: !12100)
!12111 = !DILocation(line: 1197, column: 37, scope: !12100)
!12112 = !DILocation(line: 1198, column: 55, scope: !12100)
!12113 = !DILocation(line: 1199, column: 45, scope: !12100)
!12114 = !DILocation(line: 1201, column: 5, scope: !12100)
!12115 = !DILocation(line: 1201, column: 18, scope: !12100)
!12116 = !DILocation(line: 1202, column: 5, scope: !12100)
!12117 = !DILocation(line: 1202, column: 21, scope: !12100)
!12118 = !DILocation(line: 1202, column: 27, scope: !12100)
!12119 = !DILocation(line: 1202, column: 33, scope: !12100)
!12120 = !DILocation(line: 1204, column: 17, scope: !12100)
!12121 = !DILocation(line: 1204, column: 23, scope: !12100)
!12122 = !DILocation(line: 1204, column: 33, scope: !12100)
!12123 = !DILocation(line: 1204, column: 10, scope: !12100)
!12124 = !DILocation(line: 1204, column: 15, scope: !12100)
!12125 = !DILocation(line: 1205, column: 19, scope: !12100)
!12126 = !DILocation(line: 1205, column: 10, scope: !12100)
!12127 = !DILocation(line: 1205, column: 17, scope: !12100)
!12128 = !DILocation(line: 1206, column: 9, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12100, file: !3, line: 1206, column: 9)
!12130 = !DILocation(line: 1206, column: 9, scope: !12100)
!12131 = !DILocation(line: 1207, column: 14, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 1206, column: 20)
!12133 = !DILocation(line: 1207, column: 28, scope: !12132)
!12134 = !DILocation(line: 1207, column: 27, scope: !12132)
!12135 = !DILocation(line: 1208, column: 5, scope: !12132)
!12136 = !DILocation(line: 1210, column: 34, scope: !12100)
!12137 = !DILocation(line: 1210, column: 39, scope: !12100)
!12138 = !DILocation(line: 1210, column: 43, scope: !12100)
!12139 = !DILocation(line: 1210, column: 48, scope: !12100)
!12140 = !DILocation(line: 1210, column: 51, scope: !12100)
!12141 = !DILocation(line: 1210, column: 5, scope: !12100)
!12142 = !DILocation(line: 1211, column: 1, scope: !12100)
!12143 = !DISubprogram(name: "dav_get_props", scope: !141, file: !141, line: 1712, type: !12144, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12144 = !DISubroutineType(types: !12145)
!12145 = !{!833, !222, !1280}
!12146 = !DISubprogram(name: "dav_prop_validate", scope: !141, file: !141, line: 1785, type: !12147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12147 = !DISubroutineType(types: !12148)
!12148 = !{null, !217}
!12149 = distinct !DISubprogram(name: "dav_process_ctx_list", scope: !3, file: !3, line: 2358, type: !12150, scopeLine: 2361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12153)
!12150 = !DISubroutineType(types: !12151)
!12151 = !{!14, !12152, !450, !14, !14}
!12152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12147, size: 64)
!12153 = !{!12154, !12155, !12156, !12157, !12158, !12159}
!12154 = !DILocalVariable(name: "func", arg: 1, scope: !12149, file: !3, line: 2358, type: !12152)
!12155 = !DILocalVariable(name: "ctx_list", arg: 2, scope: !12149, file: !3, line: 2359, type: !450)
!12156 = !DILocalVariable(name: "stop_on_error", arg: 3, scope: !12149, file: !3, line: 2359, type: !14)
!12157 = !DILocalVariable(name: "reverse", arg: 4, scope: !12149, file: !3, line: 2360, type: !14)
!12158 = !DILocalVariable(name: "i", scope: !12149, file: !3, line: 2362, type: !14)
!12159 = !DILocalVariable(name: "ctx", scope: !12149, file: !3, line: 2363, type: !217)
!12160 = !DILocation(line: 2358, column: 40, scope: !12149)
!12161 = !DILocation(line: 2359, column: 53, scope: !12149)
!12162 = !DILocation(line: 2359, column: 67, scope: !12149)
!12163 = !DILocation(line: 2360, column: 37, scope: !12149)
!12164 = !DILocation(line: 2362, column: 5, scope: !12149)
!12165 = !DILocation(line: 2362, column: 9, scope: !12149)
!12166 = !DILocation(line: 2362, column: 13, scope: !12149)
!12167 = !DILocation(line: 2362, column: 23, scope: !12149)
!12168 = !DILocation(line: 2363, column: 5, scope: !12149)
!12169 = !DILocation(line: 2363, column: 19, scope: !12149)
!12170 = !DILocation(line: 2363, column: 41, scope: !12149)
!12171 = !DILocation(line: 2363, column: 51, scope: !12149)
!12172 = !DILocation(line: 2365, column: 9, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 2365, column: 9)
!12174 = !DILocation(line: 2365, column: 9, scope: !12149)
!12175 = !DILocation(line: 2366, column: 16, scope: !12173)
!12176 = !DILocation(line: 2366, column: 13, scope: !12173)
!12177 = !DILocation(line: 2366, column: 9, scope: !12173)
!12178 = !DILocation(line: 2368, column: 5, scope: !12149)
!12179 = !DILocation(line: 2368, column: 13, scope: !12149)
!12180 = !DILocation(line: 2369, column: 13, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 2369, column: 13)
!12182 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 2368, column: 17)
!12183 = !DILocation(line: 2369, column: 13, scope: !12182)
!12184 = !DILocation(line: 2370, column: 13, scope: !12181)
!12185 = !DILocation(line: 2372, column: 11, scope: !12182)
!12186 = !DILocation(line: 2372, column: 17, scope: !12182)
!12187 = !DILocation(line: 2372, column: 9, scope: !12182)
!12188 = !DILocation(line: 2373, column: 13, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 2373, column: 13)
!12190 = !DILocation(line: 2373, column: 27, scope: !12189)
!12191 = !DILocation(line: 2373, column: 30, scope: !12189)
!12192 = !DILocation(line: 2373, column: 13, scope: !12182)
!12193 = !DILocation(line: 2374, column: 13, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2373, column: 58)
!12195 = !DILocation(line: 2377, column: 14, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 2377, column: 13)
!12197 = !DILocation(line: 2377, column: 13, scope: !12182)
!12198 = !DILocation(line: 2378, column: 13, scope: !12196)
!12199 = distinct !{!12199, !12178, !12200, !2563}
!12200 = !DILocation(line: 2379, column: 5, scope: !12149)
!12201 = !DILocation(line: 2381, column: 5, scope: !12149)
!12202 = !DILocation(line: 2382, column: 1, scope: !12149)
!12203 = distinct !DISubprogram(name: "dav_prop_log_errors", scope: !3, file: !3, line: 2343, type: !12147, scopeLine: 2344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12204)
!12204 = !{!12205}
!12205 = !DILocalVariable(name: "ctx", arg: 1, scope: !12203, file: !3, line: 2343, type: !217)
!12206 = !DILocation(line: 2343, column: 47, scope: !12203)
!12207 = !DILocation(line: 2345, column: 17, scope: !12203)
!12208 = !DILocation(line: 2345, column: 22, scope: !12203)
!12209 = !DILocation(line: 2345, column: 25, scope: !12203)
!12210 = !DILocation(line: 2345, column: 30, scope: !12203)
!12211 = !DILocation(line: 2345, column: 5, scope: !12203)
!12212 = !DILocation(line: 2346, column: 1, scope: !12203)
!12213 = distinct !DISubprogram(name: "process_mkcol_body", scope: !3, file: !3, line: 2549, type: !4262, scopeLine: 2550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12214)
!12214 = !{!12215, !12216, !12217}
!12215 = !DILocalVariable(name: "r", arg: 1, scope: !12213, file: !3, line: 2549, type: !286)
!12216 = !DILocalVariable(name: "tenc", scope: !12213, file: !3, line: 2556, type: !10)
!12217 = !DILocalVariable(name: "lenp", scope: !12213, file: !3, line: 2557, type: !10)
!12218 = !DILocation(line: 2549, column: 44, scope: !12213)
!12219 = !DILocation(line: 2556, column: 5, scope: !12213)
!12220 = !DILocation(line: 2556, column: 17, scope: !12213)
!12221 = !DILocation(line: 2556, column: 38, scope: !12213)
!12222 = !DILocation(line: 2556, column: 41, scope: !12213)
!12223 = !DILocation(line: 2556, column: 24, scope: !12213)
!12224 = !DILocation(line: 2557, column: 5, scope: !12213)
!12225 = !DILocation(line: 2557, column: 17, scope: !12213)
!12226 = !DILocation(line: 2557, column: 38, scope: !12213)
!12227 = !DILocation(line: 2557, column: 41, scope: !12213)
!12228 = !DILocation(line: 2557, column: 24, scope: !12213)
!12229 = !DILocation(line: 2560, column: 5, scope: !12213)
!12230 = !DILocation(line: 2560, column: 8, scope: !12213)
!12231 = !DILocation(line: 2560, column: 18, scope: !12213)
!12232 = !{!2425, !2426, i64 188}
!12233 = !DILocation(line: 2561, column: 5, scope: !12213)
!12234 = !DILocation(line: 2561, column: 8, scope: !12213)
!12235 = !DILocation(line: 2561, column: 21, scope: !12213)
!12236 = !{!2425, !2426, i64 192}
!12237 = !DILocation(line: 2562, column: 5, scope: !12213)
!12238 = !DILocation(line: 2562, column: 8, scope: !12213)
!12239 = !DILocation(line: 2562, column: 18, scope: !12213)
!12240 = !{!2425, !2427, i64 216}
!12241 = !DILocation(line: 2564, column: 9, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 2564, column: 9)
!12243 = !DILocation(line: 2564, column: 9, scope: !12213)
!12244 = !DILocation(line: 2565, column: 29, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12246, file: !3, line: 2565, column: 13)
!12246 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 2564, column: 15)
!12247 = !DILocation(line: 2565, column: 13, scope: !12245)
!12248 = !DILocation(line: 2565, column: 13, scope: !12246)
!12249 = !DILocation(line: 2567, column: 13, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 2565, column: 47)
!12251 = !DILocation(line: 2567, column: 13, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 2567, column: 13)
!12253 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 2567, column: 13)
!12254 = !DILocation(line: 2567, column: 13, scope: !12253)
!12255 = !DILocation(line: 2569, column: 13, scope: !12250)
!12256 = !DILocation(line: 2572, column: 9, scope: !12246)
!12257 = !DILocation(line: 2572, column: 12, scope: !12246)
!12258 = !DILocation(line: 2572, column: 25, scope: !12246)
!12259 = !DILocation(line: 2573, column: 5, scope: !12246)
!12260 = !DILocation(line: 2574, column: 14, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 2574, column: 14)
!12262 = !DILocation(line: 2574, column: 14, scope: !12242)
!12263 = !DILocation(line: 2575, column: 38, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !3, line: 2575, column: 13)
!12265 = distinct !DILexicalBlock(scope: !12261, file: !3, line: 2574, column: 20)
!12266 = !DILocation(line: 2575, column: 41, scope: !12264)
!12267 = !DILocation(line: 2575, column: 52, scope: !12264)
!12268 = !DILocation(line: 2575, column: 14, scope: !12264)
!12269 = !DILocation(line: 2575, column: 13, scope: !12265)
!12270 = !DILocation(line: 2576, column: 13, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 2575, column: 59)
!12272 = !DILocation(line: 2576, column: 16, scope: !12271)
!12273 = !DILocation(line: 2576, column: 26, scope: !12271)
!12274 = !DILocation(line: 2578, column: 13, scope: !12271)
!12275 = !DILocation(line: 2578, column: 13, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 2578, column: 13)
!12277 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 2578, column: 13)
!12278 = !DILocation(line: 2578, column: 13, scope: !12277)
!12279 = !DILocation(line: 2580, column: 13, scope: !12271)
!12280 = !DILocation(line: 2582, column: 5, scope: !12265)
!12281 = !DILocation(line: 2584, column: 9, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 2584, column: 9)
!12283 = !DILocation(line: 2584, column: 12, scope: !12282)
!12284 = !DILocation(line: 2584, column: 25, scope: !12282)
!12285 = !DILocation(line: 2584, column: 28, scope: !12282)
!12286 = !DILocation(line: 2584, column: 31, scope: !12282)
!12287 = !DILocation(line: 2584, column: 41, scope: !12282)
!12288 = !DILocation(line: 2584, column: 9, scope: !12213)
!12289 = !DILocation(line: 2588, column: 9, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12282, file: !3, line: 2584, column: 46)
!12291 = !DILocation(line: 2595, column: 36, scope: !12213)
!12292 = !DILocation(line: 2595, column: 12, scope: !12213)
!12293 = !DILocation(line: 2595, column: 5, scope: !12213)
!12294 = !DILocation(line: 2596, column: 1, scope: !12213)
!12295 = !DISubprogram(name: "dav_lookup_uri", scope: !141, file: !141, line: 512, type: !12296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12296 = !DISubroutineType(types: !12297)
!12297 = !{!7239, !10, !286, !14}
!12298 = distinct !DISubprogram(name: "dav_get_overwrite", scope: !3, file: !3, line: 715, type: !4262, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12299)
!12299 = !{!12300, !12301}
!12300 = !DILocalVariable(name: "r", arg: 1, scope: !12298, file: !3, line: 715, type: !286)
!12301 = !DILocalVariable(name: "overwrite", scope: !12298, file: !3, line: 717, type: !10)
!12302 = !DILocation(line: 715, column: 43, scope: !12298)
!12303 = !DILocation(line: 717, column: 5, scope: !12298)
!12304 = !DILocation(line: 717, column: 17, scope: !12298)
!12305 = !DILocation(line: 717, column: 43, scope: !12298)
!12306 = !DILocation(line: 717, column: 46, scope: !12298)
!12307 = !DILocation(line: 717, column: 29, scope: !12298)
!12308 = !DILocation(line: 719, column: 9, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 719, column: 9)
!12310 = !DILocation(line: 719, column: 19, scope: !12309)
!12311 = !DILocation(line: 719, column: 9, scope: !12298)
!12312 = !DILocation(line: 720, column: 9, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12309, file: !3, line: 719, column: 28)
!12314 = !DILocation(line: 723, column: 11, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 723, column: 9)
!12316 = !DILocation(line: 723, column: 10, scope: !12315)
!12317 = !DILocation(line: 723, column: 21, scope: !12315)
!12318 = !DILocation(line: 723, column: 28, scope: !12315)
!12319 = !DILocation(line: 723, column: 32, scope: !12315)
!12320 = !DILocation(line: 723, column: 31, scope: !12315)
!12321 = !DILocation(line: 723, column: 42, scope: !12315)
!12322 = !DILocation(line: 723, column: 50, scope: !12315)
!12323 = !DILocation(line: 723, column: 53, scope: !12315)
!12324 = !DILocation(line: 723, column: 66, scope: !12315)
!12325 = !DILocation(line: 723, column: 9, scope: !12298)
!12326 = !DILocation(line: 724, column: 9, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 723, column: 75)
!12328 = !DILocation(line: 727, column: 11, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 727, column: 9)
!12330 = !DILocation(line: 727, column: 10, scope: !12329)
!12331 = !DILocation(line: 727, column: 21, scope: !12329)
!12332 = !DILocation(line: 727, column: 28, scope: !12329)
!12333 = !DILocation(line: 727, column: 32, scope: !12329)
!12334 = !DILocation(line: 727, column: 31, scope: !12329)
!12335 = !DILocation(line: 727, column: 42, scope: !12329)
!12336 = !DILocation(line: 727, column: 50, scope: !12329)
!12337 = !DILocation(line: 727, column: 53, scope: !12329)
!12338 = !DILocation(line: 727, column: 66, scope: !12329)
!12339 = !DILocation(line: 727, column: 9, scope: !12298)
!12340 = !DILocation(line: 728, column: 9, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 727, column: 75)
!12342 = !DILocation(line: 733, column: 5, scope: !12298)
!12343 = !DILocation(line: 733, column: 5, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 733, column: 5)
!12345 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 733, column: 5)
!12346 = !DILocation(line: 733, column: 5, scope: !12345)
!12347 = !DILocation(line: 735, column: 5, scope: !12298)
!12348 = !DILocation(line: 736, column: 1, scope: !12298)
!12349 = !DISubprogram(name: "dav_lock_parse_lockinfo", scope: !141, file: !141, line: 1421, type: !12350, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12350 = !DISubroutineType(types: !12351)
!12351 = !{!272, !286, !747, !875, !1070, !924}
!12352 = !DISubprogram(name: "dav_get_locktoken_list", scope: !141, file: !141, line: 877, type: !12353, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!272, !286, !12355}
!12355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7969, size: 64)
!12356 = !DISubprogram(name: "dav_get_timeout", scope: !141, file: !141, line: 1317, type: !12357, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12357 = !DISubroutineType(types: !12358)
!12358 = !{!938, !286}
!12359 = !DISubprogram(name: "time", scope: !12360, file: !12360, line: 76, type: !12361, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12360 = !DIFile(filename: "/usr/include/time.h", directory: "", checksumkind: CSK_MD5, checksum: "db37158473a25e1d89b19f8bc6892801")
!12361 = !DISubroutineType(types: !12362)
!12362 = !{!938, !12363}
!12363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!12364 = !DISubprogram(name: "dav_add_lock", scope: !141, file: !141, line: 1429, type: !12365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12365 = !DISubroutineType(types: !12366)
!12366 = !{!272, !286, !747, !875, !925, !825}
!12367 = !DISubprogram(name: "dav_lock_get_activelock", scope: !141, file: !141, line: 1412, type: !12368, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12368 = !DISubroutineType(types: !12369)
!12369 = !{!10, !286, !925, !12370}
!12370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!12371 = !DISubprogram(name: "apr_xml_to_text", scope: !228, file: !228, line: 286, type: !12372, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12372 = !DISubroutineType(types: !12373)
!12373 = !{null, !73, !1025, !14, !450, !962, !61, !62}
!12374 = !DISubprogram(name: "dav_xml_get_cdata", scope: !141, file: !141, line: 598, type: !12375, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12375 = !DISubroutineType(types: !12376)
!12376 = !{!10, !1025, !73, !14}
!12377 = distinct !DISubprogram(name: "dav_label_walker", scope: !3, file: !3, line: 4095, type: !861, scopeLine: 4096, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12378)
!12378 = !{!12379, !12380, !12381, !12383}
!12379 = !DILocalVariable(name: "wres", arg: 1, scope: !12377, file: !3, line: 4095, type: !863)
!12380 = !DILocalVariable(name: "calltype", arg: 2, scope: !12377, file: !3, line: 4095, type: !14)
!12381 = !DILocalVariable(name: "ctx", scope: !12377, file: !3, line: 4097, type: !12382)
!12382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9665, size: 64)
!12383 = !DILocalVariable(name: "err", scope: !12377, file: !3, line: 4098, type: !272)
!12384 = !DILocation(line: 4095, column: 56, scope: !12377)
!12385 = !DILocation(line: 4095, column: 66, scope: !12377)
!12386 = !DILocation(line: 4097, column: 5, scope: !12377)
!12387 = !DILocation(line: 4097, column: 27, scope: !12377)
!12388 = !DILocation(line: 4097, column: 33, scope: !12377)
!12389 = !DILocation(line: 4097, column: 39, scope: !12377)
!12390 = !DILocation(line: 4098, column: 5, scope: !12377)
!12391 = !DILocation(line: 4098, column: 16, scope: !12377)
!12392 = !DILocation(line: 4101, column: 37, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 4101, column: 9)
!12394 = !DILocation(line: 4101, column: 42, scope: !12393)
!12395 = !DILocation(line: 4101, column: 51, scope: !12393)
!12396 = !DILocation(line: 4101, column: 57, scope: !12393)
!12397 = !DILocation(line: 4101, column: 9, scope: !12393)
!12398 = !DILocation(line: 4101, column: 79, scope: !12393)
!12399 = !DILocation(line: 4102, column: 13, scope: !12393)
!12400 = !DILocation(line: 4102, column: 16, scope: !12393)
!12401 = !DILocation(line: 4101, column: 9, scope: !12377)
!12402 = !DILocation(line: 4104, column: 5, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 4102, column: 21)
!12404 = !DILocation(line: 4112, column: 14, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 4112, column: 14)
!12406 = !DILocation(line: 4112, column: 20, scope: !12405)
!12407 = !DILocation(line: 4112, column: 30, scope: !12405)
!12408 = !DILocation(line: 4112, column: 35, scope: !12405)
!12409 = !DILocation(line: 4112, column: 64, scope: !12405)
!12410 = !DILocation(line: 4113, column: 10, scope: !12405)
!12411 = !DILocation(line: 4113, column: 16, scope: !12405)
!12412 = !DILocation(line: 4113, column: 26, scope: !12405)
!12413 = !DILocation(line: 4113, column: 31, scope: !12405)
!12414 = !DILocation(line: 4114, column: 10, scope: !12405)
!12415 = !DILocation(line: 4114, column: 14, scope: !12405)
!12416 = !DILocation(line: 4114, column: 20, scope: !12405)
!12417 = !DILocation(line: 4114, column: 30, scope: !12405)
!12418 = !DILocation(line: 4112, column: 14, scope: !12393)
!12419 = !DILocation(line: 4115, column: 29, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 4114, column: 42)
!12421 = !DILocation(line: 4115, column: 34, scope: !12420)
!12422 = !DILocation(line: 4115, column: 36, scope: !12420)
!12423 = !DILocation(line: 4115, column: 15, scope: !12420)
!12424 = !DILocation(line: 4115, column: 13, scope: !12420)
!12425 = !DILocation(line: 4117, column: 5, scope: !12420)
!12426 = !DILocation(line: 4118, column: 14, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 4118, column: 14)
!12428 = !DILocation(line: 4118, column: 20, scope: !12427)
!12429 = !DILocation(line: 4118, column: 30, scope: !12427)
!12430 = !DILocation(line: 4118, column: 14, scope: !12405)
!12431 = !DILocation(line: 4119, column: 29, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 4118, column: 39)
!12433 = !DILocation(line: 4119, column: 34, scope: !12432)
!12434 = !DILocation(line: 4119, column: 36, scope: !12432)
!12435 = !DILocation(line: 4119, column: 15, scope: !12432)
!12436 = !DILocation(line: 4119, column: 13, scope: !12432)
!12437 = !DILocation(line: 4121, column: 5, scope: !12432)
!12438 = !DILocation(line: 4124, column: 13, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !3, line: 4124, column: 13)
!12440 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 4122, column: 10)
!12441 = !DILocation(line: 4124, column: 18, scope: !12439)
!12442 = !DILocation(line: 4124, column: 27, scope: !12439)
!12443 = !DILocation(line: 4124, column: 13, scope: !12440)
!12444 = !DILocation(line: 4125, column: 21, scope: !12439)
!12445 = !DILocation(line: 4125, column: 26, scope: !12439)
!12446 = !DILocation(line: 4125, column: 37, scope: !12439)
!12447 = !{!4640, !2417, i64 104}
!12448 = !DILocation(line: 4125, column: 51, scope: !12439)
!12449 = !DILocation(line: 4125, column: 57, scope: !12439)
!12450 = !DILocation(line: 4125, column: 67, scope: !12439)
!12451 = !DILocation(line: 4125, column: 72, scope: !12439)
!12452 = !{!9778, !2417, i64 56}
!12453 = !DILocation(line: 4125, column: 19, scope: !12439)
!12454 = !DILocation(line: 4125, column: 17, scope: !12439)
!12455 = !DILocation(line: 4125, column: 13, scope: !12439)
!12456 = !DILocation(line: 4127, column: 21, scope: !12439)
!12457 = !DILocation(line: 4127, column: 26, scope: !12439)
!12458 = !DILocation(line: 4127, column: 37, scope: !12439)
!12459 = !DILocation(line: 4127, column: 48, scope: !12439)
!12460 = !DILocation(line: 4127, column: 54, scope: !12439)
!12461 = !DILocation(line: 4127, column: 64, scope: !12439)
!12462 = !DILocation(line: 4127, column: 69, scope: !12439)
!12463 = !DILocation(line: 4128, column: 48, scope: !12439)
!12464 = !DILocation(line: 4128, column: 53, scope: !12439)
!12465 = !DILocation(line: 4128, column: 62, scope: !12439)
!12466 = !DILocation(line: 4127, column: 19, scope: !12439)
!12467 = !DILocation(line: 4127, column: 17, scope: !12439)
!12468 = !DILocation(line: 4131, column: 9, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 4131, column: 9)
!12470 = !DILocation(line: 4131, column: 13, scope: !12469)
!12471 = !DILocation(line: 4131, column: 9, scope: !12377)
!12472 = !DILocation(line: 4133, column: 26, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 4131, column: 22)
!12474 = !DILocation(line: 4133, column: 32, scope: !12473)
!12475 = !DILocation(line: 4133, column: 37, scope: !12473)
!12476 = !DILocation(line: 4133, column: 9, scope: !12473)
!12477 = !DILocation(line: 4134, column: 32, scope: !12473)
!12478 = !DILocation(line: 4134, column: 37, scope: !12473)
!12479 = !DILocation(line: 4134, column: 9, scope: !12473)
!12480 = !DILocation(line: 4134, column: 15, scope: !12473)
!12481 = !DILocation(line: 4134, column: 25, scope: !12473)
!12482 = !DILocation(line: 4134, column: 30, scope: !12473)
!12483 = !DILocation(line: 4135, column: 5, scope: !12473)
!12484 = !DILocation(line: 4138, column: 1, scope: !12377)
!12485 = !DILocation(line: 4137, column: 5, scope: !12377)
!12486 = !DISubprogram(name: "ap_method_register", scope: !2667, file: !2667, line: 357, type: !12487, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12487 = !DISubroutineType(types: !12488)
!12488 = !{!14, !73, !10}
